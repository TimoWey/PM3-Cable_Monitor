
STM32F429I-DISCO.elf:     file format elf32-littlearm

Sections:
Idx Name          Size      VMA       LMA       File off  Algn
  0 .isr_vector   000001ac  08000000  08000000  00010000  2**0
                  CONTENTS, ALLOC, LOAD, READONLY, DATA
  1 .text         0002c2c8  080001b0  080001b0  000101b0  2**4
                  CONTENTS, ALLOC, LOAD, READONLY, CODE
  2 .rodata       000171a4  0802c478  0802c478  0003c478  2**2
                  CONTENTS, ALLOC, LOAD, READONLY, DATA
  3 FontFlashSection 00003cf6  0804361c  0804361c  0005361c  2**2
                  CONTENTS, ALLOC, LOAD, READONLY, DATA
  4 FontSearchFlashSection 0000024c  08047314  08047314  00057314  2**2
                  CONTENTS, ALLOC, LOAD, READONLY, DATA
  5 TextFlashSection 000006a4  08047560  08047560  00057560  2**2
                  CONTENTS, ALLOC, LOAD, READONLY, DATA
  6 ExtFlashSection 000850f0  08047c04  08047c04  00057c04  2**2
                  CONTENTS, ALLOC, LOAD, READONLY, DATA
  7 .ARM.extab    00000000  080cccf4  080cccf4  000e0168  2**0
                  CONTENTS
  8 .ARM          00000008  080cccf4  080cccf4  000dccf4  2**2
                  CONTENTS, ALLOC, LOAD, READONLY, DATA
  9 .preinit_array 00000000  080cccfc  080cccfc  000e0168  2**0
                  CONTENTS, ALLOC, LOAD, DATA
 10 .init_array   00000014  080cccfc  080cccfc  000dccfc  2**2
                  CONTENTS, ALLOC, LOAD, DATA
 11 .fini_array   00000004  080ccd10  080ccd10  000dcd10  2**2
                  CONTENTS, ALLOC, LOAD, DATA
 12 .data         00000168  20000000  080ccd14  000e0000  2**2
                  CONTENTS, ALLOC, LOAD, DATA
 13 .bss          000142ec  20000168  080cce7c  000e0168  2**3
                  ALLOC
 14 ._user_heap_stack 00001404  20014454  080cce7c  000e4454  2**0
                  ALLOC
 15 .ARM.attributes 00000030  00000000  00000000  000e0168  2**0
                  CONTENTS, READONLY
 16 TouchGFX_Framebuffer 00070800  d0000000  d0000000  000f0000  2**2
                  ALLOC
 17 .comment      00000132  00000000  00000000  000e0198  2**0
                  CONTENTS, READONLY
 18 .debug_line   000917ed  00000000  00000000  000e02ca  2**0
                  CONTENTS, READONLY, DEBUGGING, OCTETS
 19 .debug_line_str 00000093  00000000  00000000  00171ab7  2**0
                  CONTENTS, READONLY, DEBUGGING, OCTETS
 20 .debug_info   00225130  00000000  00000000  00171b4a  2**0
                  CONTENTS, READONLY, DEBUGGING, OCTETS
 21 .debug_abbrev 0002c403  00000000  00000000  00396c7a  2**0
                  CONTENTS, READONLY, DEBUGGING, OCTETS
 22 .debug_aranges 00004320  00000000  00000000  003c3080  2**3
                  CONTENTS, READONLY, DEBUGGING, OCTETS
 23 .debug_str    0011f4f7  00000000  00000000  003c73a0  2**0
                  CONTENTS, READONLY, DEBUGGING, OCTETS
 24 .debug_rnglists 00007d1b  00000000  00000000  004e6897  2**0
                  CONTENTS, READONLY, DEBUGGING, OCTETS
 25 .debug_loclists 000310ed  00000000  00000000  004ee5b2  2**0
                  CONTENTS, READONLY, DEBUGGING, OCTETS
 26 .debug_macro  0003a8cc  00000000  00000000  0051f69f  2**0
                  CONTENTS, READONLY, DEBUGGING, OCTETS
 27 .debug_frame  0000c74c  00000000  00000000  00559f6c  2**2
                  CONTENTS, READONLY, DEBUGGING, OCTETS
 28 .debug_loc    00003378  00000000  00000000  005666b8  2**0
                  CONTENTS, READONLY, DEBUGGING, OCTETS
 29 .debug_ranges 00000140  00000000  00000000  00569a30  2**0
                  CONTENTS, READONLY, DEBUGGING, OCTETS

Disassembly of section .text:

080001b0 <__do_global_dtors_aux>:
 80001b0:	b510      	push	{r4, lr}
 80001b2:	4c05      	ldr	r4, [pc, #20]	; (80001c8 <__do_global_dtors_aux+0x18>)
 80001b4:	7823      	ldrb	r3, [r4, #0]
 80001b6:	b933      	cbnz	r3, 80001c6 <__do_global_dtors_aux+0x16>
 80001b8:	4b04      	ldr	r3, [pc, #16]	; (80001cc <__do_global_dtors_aux+0x1c>)
 80001ba:	b113      	cbz	r3, 80001c2 <__do_global_dtors_aux+0x12>
 80001bc:	4804      	ldr	r0, [pc, #16]	; (80001d0 <__do_global_dtors_aux+0x20>)
 80001be:	f3af 8000 	nop.w
 80001c2:	2301      	movs	r3, #1
 80001c4:	7023      	strb	r3, [r4, #0]
 80001c6:	bd10      	pop	{r4, pc}
 80001c8:	20000168 	.word	0x20000168
 80001cc:	00000000 	.word	0x00000000
 80001d0:	0802c460 	.word	0x0802c460

080001d4 <frame_dummy>:
 80001d4:	b508      	push	{r3, lr}
 80001d6:	4b03      	ldr	r3, [pc, #12]	; (80001e4 <frame_dummy+0x10>)
 80001d8:	b11b      	cbz	r3, 80001e2 <frame_dummy+0xe>
 80001da:	4903      	ldr	r1, [pc, #12]	; (80001e8 <frame_dummy+0x14>)
 80001dc:	4803      	ldr	r0, [pc, #12]	; (80001ec <frame_dummy+0x18>)
 80001de:	f3af 8000 	nop.w
 80001e2:	bd08      	pop	{r3, pc}
 80001e4:	00000000 	.word	0x00000000
 80001e8:	2000016c 	.word	0x2000016c
 80001ec:	0802c460 	.word	0x0802c460

080001f0 <arm_bitreversal_32>:
 80001f0:	1c4b      	adds	r3, r1, #1
 80001f2:	2b01      	cmp	r3, #1
 80001f4:	bf98      	it	ls
 80001f6:	4770      	bxls	lr
 80001f8:	e92d 03f0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9}
 80001fc:	1c91      	adds	r1, r2, #2
 80001fe:	089b      	lsrs	r3, r3, #2

08000200 <arm_bitreversal_32_0>:
 8000200:	f8b1 8004 	ldrh.w	r8, [r1, #4]
 8000204:	f8b1 9002 	ldrh.w	r9, [r1, #2]
 8000208:	880a      	ldrh	r2, [r1, #0]
 800020a:	f831 cc02 	ldrh.w	ip, [r1, #-2]
 800020e:	4480      	add	r8, r0
 8000210:	4481      	add	r9, r0
 8000212:	4402      	add	r2, r0
 8000214:	4484      	add	ip, r0
 8000216:	f8d9 7000 	ldr.w	r7, [r9]
 800021a:	f8d8 6000 	ldr.w	r6, [r8]
 800021e:	6815      	ldr	r5, [r2, #0]
 8000220:	f8dc 4000 	ldr.w	r4, [ip]
 8000224:	f8c9 6000 	str.w	r6, [r9]
 8000228:	f8c8 7000 	str.w	r7, [r8]
 800022c:	f8cc 5000 	str.w	r5, [ip]
 8000230:	6014      	str	r4, [r2, #0]
 8000232:	f8d9 7004 	ldr.w	r7, [r9, #4]
 8000236:	f8d8 6004 	ldr.w	r6, [r8, #4]
 800023a:	6855      	ldr	r5, [r2, #4]
 800023c:	f8dc 4004 	ldr.w	r4, [ip, #4]
 8000240:	f8c9 6004 	str.w	r6, [r9, #4]
 8000244:	f8c8 7004 	str.w	r7, [r8, #4]
 8000248:	f8cc 5004 	str.w	r5, [ip, #4]
 800024c:	6054      	str	r4, [r2, #4]
 800024e:	3108      	adds	r1, #8
 8000250:	3b01      	subs	r3, #1
 8000252:	d1d5      	bne.n	8000200 <arm_bitreversal_32_0>
 8000254:	e8bd 03f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9}
 8000258:	4770      	bx	lr

0800025a <arm_bitreversal_16>:
 800025a:	1c4b      	adds	r3, r1, #1
 800025c:	2b01      	cmp	r3, #1
 800025e:	bf98      	it	ls
 8000260:	4770      	bxls	lr
 8000262:	e92d 03f0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9}
 8000266:	1c91      	adds	r1, r2, #2
 8000268:	089b      	lsrs	r3, r3, #2

0800026a <arm_bitreversal_16_0>:
 800026a:	f8b1 8004 	ldrh.w	r8, [r1, #4]
 800026e:	f8b1 9002 	ldrh.w	r9, [r1, #2]
 8000272:	880a      	ldrh	r2, [r1, #0]
 8000274:	f831 cc02 	ldrh.w	ip, [r1, #-2]
 8000278:	eb00 0858 	add.w	r8, r0, r8, lsr #1
 800027c:	eb00 0959 	add.w	r9, r0, r9, lsr #1
 8000280:	eb00 0252 	add.w	r2, r0, r2, lsr #1
 8000284:	eb00 0c5c 	add.w	ip, r0, ip, lsr #1
 8000288:	f8d9 7000 	ldr.w	r7, [r9]
 800028c:	f8d8 6000 	ldr.w	r6, [r8]
 8000290:	6815      	ldr	r5, [r2, #0]
 8000292:	f8dc 4000 	ldr.w	r4, [ip]
 8000296:	f8c9 6000 	str.w	r6, [r9]
 800029a:	f8c8 7000 	str.w	r7, [r8]
 800029e:	f8cc 5000 	str.w	r5, [ip]
 80002a2:	6014      	str	r4, [r2, #0]
 80002a4:	3108      	adds	r1, #8
 80002a6:	3b01      	subs	r3, #1
 80002a8:	d1df      	bne.n	800026a <arm_bitreversal_16_0>
 80002aa:	e8bd 03f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9}
 80002ae:	4770      	bx	lr

080002b0 <memchr>:
 80002b0:	f001 01ff 	and.w	r1, r1, #255	; 0xff
 80002b4:	2a10      	cmp	r2, #16
 80002b6:	db2b      	blt.n	8000310 <memchr+0x60>
 80002b8:	f010 0f07 	tst.w	r0, #7
 80002bc:	d008      	beq.n	80002d0 <memchr+0x20>
 80002be:	f810 3b01 	ldrb.w	r3, [r0], #1
 80002c2:	3a01      	subs	r2, #1
 80002c4:	428b      	cmp	r3, r1
 80002c6:	d02d      	beq.n	8000324 <memchr+0x74>
 80002c8:	f010 0f07 	tst.w	r0, #7
 80002cc:	b342      	cbz	r2, 8000320 <memchr+0x70>
 80002ce:	d1f6      	bne.n	80002be <memchr+0xe>
 80002d0:	b4f0      	push	{r4, r5, r6, r7}
 80002d2:	ea41 2101 	orr.w	r1, r1, r1, lsl #8
 80002d6:	ea41 4101 	orr.w	r1, r1, r1, lsl #16
 80002da:	f022 0407 	bic.w	r4, r2, #7
 80002de:	f07f 0700 	mvns.w	r7, #0
 80002e2:	2300      	movs	r3, #0
 80002e4:	e8f0 5602 	ldrd	r5, r6, [r0], #8
 80002e8:	3c08      	subs	r4, #8
 80002ea:	ea85 0501 	eor.w	r5, r5, r1
 80002ee:	ea86 0601 	eor.w	r6, r6, r1
 80002f2:	fa85 f547 	uadd8	r5, r5, r7
 80002f6:	faa3 f587 	sel	r5, r3, r7
 80002fa:	fa86 f647 	uadd8	r6, r6, r7
 80002fe:	faa5 f687 	sel	r6, r5, r7
 8000302:	b98e      	cbnz	r6, 8000328 <memchr+0x78>
 8000304:	d1ee      	bne.n	80002e4 <memchr+0x34>
 8000306:	bcf0      	pop	{r4, r5, r6, r7}
 8000308:	f001 01ff 	and.w	r1, r1, #255	; 0xff
 800030c:	f002 0207 	and.w	r2, r2, #7
 8000310:	b132      	cbz	r2, 8000320 <memchr+0x70>
 8000312:	f810 3b01 	ldrb.w	r3, [r0], #1
 8000316:	3a01      	subs	r2, #1
 8000318:	ea83 0301 	eor.w	r3, r3, r1
 800031c:	b113      	cbz	r3, 8000324 <memchr+0x74>
 800031e:	d1f8      	bne.n	8000312 <memchr+0x62>
 8000320:	2000      	movs	r0, #0
 8000322:	4770      	bx	lr
 8000324:	3801      	subs	r0, #1
 8000326:	4770      	bx	lr
 8000328:	2d00      	cmp	r5, #0
 800032a:	bf06      	itte	eq
 800032c:	4635      	moveq	r5, r6
 800032e:	3803      	subeq	r0, #3
 8000330:	3807      	subne	r0, #7
 8000332:	f015 0f01 	tst.w	r5, #1
 8000336:	d107      	bne.n	8000348 <memchr+0x98>
 8000338:	3001      	adds	r0, #1
 800033a:	f415 7f80 	tst.w	r5, #256	; 0x100
 800033e:	bf02      	ittt	eq
 8000340:	3001      	addeq	r0, #1
 8000342:	f415 3fc0 	tsteq.w	r5, #98304	; 0x18000
 8000346:	3001      	addeq	r0, #1
 8000348:	bcf0      	pop	{r4, r5, r6, r7}
 800034a:	3801      	subs	r0, #1
 800034c:	4770      	bx	lr
 800034e:	bf00      	nop

08000350 <__aeabi_uldivmod>:
 8000350:	b953      	cbnz	r3, 8000368 <__aeabi_uldivmod+0x18>
 8000352:	b94a      	cbnz	r2, 8000368 <__aeabi_uldivmod+0x18>
 8000354:	2900      	cmp	r1, #0
 8000356:	bf08      	it	eq
 8000358:	2800      	cmpeq	r0, #0
 800035a:	bf1c      	itt	ne
 800035c:	f04f 31ff 	movne.w	r1, #4294967295
 8000360:	f04f 30ff 	movne.w	r0, #4294967295
 8000364:	f000 b970 	b.w	8000648 <__aeabi_idiv0>
 8000368:	f1ad 0c08 	sub.w	ip, sp, #8
 800036c:	e96d ce04 	strd	ip, lr, [sp, #-16]!
 8000370:	f000 f806 	bl	8000380 <__udivmoddi4>
 8000374:	f8dd e004 	ldr.w	lr, [sp, #4]
 8000378:	e9dd 2302 	ldrd	r2, r3, [sp, #8]
 800037c:	b004      	add	sp, #16
 800037e:	4770      	bx	lr

08000380 <__udivmoddi4>:
 8000380:	e92d 47f0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, lr}
 8000384:	9e08      	ldr	r6, [sp, #32]
 8000386:	460d      	mov	r5, r1
 8000388:	4604      	mov	r4, r0
 800038a:	460f      	mov	r7, r1
 800038c:	2b00      	cmp	r3, #0
 800038e:	d14a      	bne.n	8000426 <__udivmoddi4+0xa6>
 8000390:	428a      	cmp	r2, r1
 8000392:	4694      	mov	ip, r2
 8000394:	d965      	bls.n	8000462 <__udivmoddi4+0xe2>
 8000396:	fab2 f382 	clz	r3, r2
 800039a:	b143      	cbz	r3, 80003ae <__udivmoddi4+0x2e>
 800039c:	fa02 fc03 	lsl.w	ip, r2, r3
 80003a0:	f1c3 0220 	rsb	r2, r3, #32
 80003a4:	409f      	lsls	r7, r3
 80003a6:	fa20 f202 	lsr.w	r2, r0, r2
 80003aa:	4317      	orrs	r7, r2
 80003ac:	409c      	lsls	r4, r3
 80003ae:	ea4f 4e1c 	mov.w	lr, ip, lsr #16
 80003b2:	fa1f f58c 	uxth.w	r5, ip
 80003b6:	fbb7 f1fe 	udiv	r1, r7, lr
 80003ba:	0c22      	lsrs	r2, r4, #16
 80003bc:	fb0e 7711 	mls	r7, lr, r1, r7
 80003c0:	ea42 4207 	orr.w	r2, r2, r7, lsl #16
 80003c4:	fb01 f005 	mul.w	r0, r1, r5
 80003c8:	4290      	cmp	r0, r2
 80003ca:	d90a      	bls.n	80003e2 <__udivmoddi4+0x62>
 80003cc:	eb1c 0202 	adds.w	r2, ip, r2
 80003d0:	f101 37ff 	add.w	r7, r1, #4294967295
 80003d4:	f080 811c 	bcs.w	8000610 <__udivmoddi4+0x290>
 80003d8:	4290      	cmp	r0, r2
 80003da:	f240 8119 	bls.w	8000610 <__udivmoddi4+0x290>
 80003de:	3902      	subs	r1, #2
 80003e0:	4462      	add	r2, ip
 80003e2:	1a12      	subs	r2, r2, r0
 80003e4:	b2a4      	uxth	r4, r4
 80003e6:	fbb2 f0fe 	udiv	r0, r2, lr
 80003ea:	fb0e 2210 	mls	r2, lr, r0, r2
 80003ee:	ea44 4402 	orr.w	r4, r4, r2, lsl #16
 80003f2:	fb00 f505 	mul.w	r5, r0, r5
 80003f6:	42a5      	cmp	r5, r4
 80003f8:	d90a      	bls.n	8000410 <__udivmoddi4+0x90>
 80003fa:	eb1c 0404 	adds.w	r4, ip, r4
 80003fe:	f100 32ff 	add.w	r2, r0, #4294967295
 8000402:	f080 8107 	bcs.w	8000614 <__udivmoddi4+0x294>
 8000406:	42a5      	cmp	r5, r4
 8000408:	f240 8104 	bls.w	8000614 <__udivmoddi4+0x294>
 800040c:	4464      	add	r4, ip
 800040e:	3802      	subs	r0, #2
 8000410:	ea40 4001 	orr.w	r0, r0, r1, lsl #16
 8000414:	1b64      	subs	r4, r4, r5
 8000416:	2100      	movs	r1, #0
 8000418:	b11e      	cbz	r6, 8000422 <__udivmoddi4+0xa2>
 800041a:	40dc      	lsrs	r4, r3
 800041c:	2300      	movs	r3, #0
 800041e:	e9c6 4300 	strd	r4, r3, [r6]
 8000422:	e8bd 87f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, pc}
 8000426:	428b      	cmp	r3, r1
 8000428:	d908      	bls.n	800043c <__udivmoddi4+0xbc>
 800042a:	2e00      	cmp	r6, #0
 800042c:	f000 80ed 	beq.w	800060a <__udivmoddi4+0x28a>
 8000430:	2100      	movs	r1, #0
 8000432:	e9c6 0500 	strd	r0, r5, [r6]
 8000436:	4608      	mov	r0, r1
 8000438:	e8bd 87f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, pc}
 800043c:	fab3 f183 	clz	r1, r3
 8000440:	2900      	cmp	r1, #0
 8000442:	d149      	bne.n	80004d8 <__udivmoddi4+0x158>
 8000444:	42ab      	cmp	r3, r5
 8000446:	d302      	bcc.n	800044e <__udivmoddi4+0xce>
 8000448:	4282      	cmp	r2, r0
 800044a:	f200 80f8 	bhi.w	800063e <__udivmoddi4+0x2be>
 800044e:	1a84      	subs	r4, r0, r2
 8000450:	eb65 0203 	sbc.w	r2, r5, r3
 8000454:	2001      	movs	r0, #1
 8000456:	4617      	mov	r7, r2
 8000458:	2e00      	cmp	r6, #0
 800045a:	d0e2      	beq.n	8000422 <__udivmoddi4+0xa2>
 800045c:	e9c6 4700 	strd	r4, r7, [r6]
 8000460:	e7df      	b.n	8000422 <__udivmoddi4+0xa2>
 8000462:	b902      	cbnz	r2, 8000466 <__udivmoddi4+0xe6>
 8000464:	deff      	udf	#255	; 0xff
 8000466:	fab2 f382 	clz	r3, r2
 800046a:	2b00      	cmp	r3, #0
 800046c:	f040 8090 	bne.w	8000590 <__udivmoddi4+0x210>
 8000470:	1a8a      	subs	r2, r1, r2
 8000472:	ea4f 471c 	mov.w	r7, ip, lsr #16
 8000476:	fa1f fe8c 	uxth.w	lr, ip
 800047a:	2101      	movs	r1, #1
 800047c:	fbb2 f5f7 	udiv	r5, r2, r7
 8000480:	fb07 2015 	mls	r0, r7, r5, r2
 8000484:	0c22      	lsrs	r2, r4, #16
 8000486:	ea42 4200 	orr.w	r2, r2, r0, lsl #16
 800048a:	fb0e f005 	mul.w	r0, lr, r5
 800048e:	4290      	cmp	r0, r2
 8000490:	d908      	bls.n	80004a4 <__udivmoddi4+0x124>
 8000492:	eb1c 0202 	adds.w	r2, ip, r2
 8000496:	f105 38ff 	add.w	r8, r5, #4294967295
 800049a:	d202      	bcs.n	80004a2 <__udivmoddi4+0x122>
 800049c:	4290      	cmp	r0, r2
 800049e:	f200 80cb 	bhi.w	8000638 <__udivmoddi4+0x2b8>
 80004a2:	4645      	mov	r5, r8
 80004a4:	1a12      	subs	r2, r2, r0
 80004a6:	b2a4      	uxth	r4, r4
 80004a8:	fbb2 f0f7 	udiv	r0, r2, r7
 80004ac:	fb07 2210 	mls	r2, r7, r0, r2
 80004b0:	ea44 4402 	orr.w	r4, r4, r2, lsl #16
 80004b4:	fb0e fe00 	mul.w	lr, lr, r0
 80004b8:	45a6      	cmp	lr, r4
 80004ba:	d908      	bls.n	80004ce <__udivmoddi4+0x14e>
 80004bc:	eb1c 0404 	adds.w	r4, ip, r4
 80004c0:	f100 32ff 	add.w	r2, r0, #4294967295
 80004c4:	d202      	bcs.n	80004cc <__udivmoddi4+0x14c>
 80004c6:	45a6      	cmp	lr, r4
 80004c8:	f200 80bb 	bhi.w	8000642 <__udivmoddi4+0x2c2>
 80004cc:	4610      	mov	r0, r2
 80004ce:	eba4 040e 	sub.w	r4, r4, lr
 80004d2:	ea40 4005 	orr.w	r0, r0, r5, lsl #16
 80004d6:	e79f      	b.n	8000418 <__udivmoddi4+0x98>
 80004d8:	f1c1 0720 	rsb	r7, r1, #32
 80004dc:	408b      	lsls	r3, r1
 80004de:	fa22 fc07 	lsr.w	ip, r2, r7
 80004e2:	ea4c 0c03 	orr.w	ip, ip, r3
 80004e6:	fa05 f401 	lsl.w	r4, r5, r1
 80004ea:	fa20 f307 	lsr.w	r3, r0, r7
 80004ee:	40fd      	lsrs	r5, r7
 80004f0:	ea4f 491c 	mov.w	r9, ip, lsr #16
 80004f4:	4323      	orrs	r3, r4
 80004f6:	fbb5 f8f9 	udiv	r8, r5, r9
 80004fa:	fa1f fe8c 	uxth.w	lr, ip
 80004fe:	fb09 5518 	mls	r5, r9, r8, r5
 8000502:	0c1c      	lsrs	r4, r3, #16
 8000504:	ea44 4405 	orr.w	r4, r4, r5, lsl #16
 8000508:	fb08 f50e 	mul.w	r5, r8, lr
 800050c:	42a5      	cmp	r5, r4
 800050e:	fa02 f201 	lsl.w	r2, r2, r1
 8000512:	fa00 f001 	lsl.w	r0, r0, r1
 8000516:	d90b      	bls.n	8000530 <__udivmoddi4+0x1b0>
 8000518:	eb1c 0404 	adds.w	r4, ip, r4
 800051c:	f108 3aff 	add.w	sl, r8, #4294967295
 8000520:	f080 8088 	bcs.w	8000634 <__udivmoddi4+0x2b4>
 8000524:	42a5      	cmp	r5, r4
 8000526:	f240 8085 	bls.w	8000634 <__udivmoddi4+0x2b4>
 800052a:	f1a8 0802 	sub.w	r8, r8, #2
 800052e:	4464      	add	r4, ip
 8000530:	1b64      	subs	r4, r4, r5
 8000532:	b29d      	uxth	r5, r3
 8000534:	fbb4 f3f9 	udiv	r3, r4, r9
 8000538:	fb09 4413 	mls	r4, r9, r3, r4
 800053c:	ea45 4404 	orr.w	r4, r5, r4, lsl #16
 8000540:	fb03 fe0e 	mul.w	lr, r3, lr
 8000544:	45a6      	cmp	lr, r4
 8000546:	d908      	bls.n	800055a <__udivmoddi4+0x1da>
 8000548:	eb1c 0404 	adds.w	r4, ip, r4
 800054c:	f103 35ff 	add.w	r5, r3, #4294967295
 8000550:	d26c      	bcs.n	800062c <__udivmoddi4+0x2ac>
 8000552:	45a6      	cmp	lr, r4
 8000554:	d96a      	bls.n	800062c <__udivmoddi4+0x2ac>
 8000556:	3b02      	subs	r3, #2
 8000558:	4464      	add	r4, ip
 800055a:	ea43 4308 	orr.w	r3, r3, r8, lsl #16
 800055e:	fba3 9502 	umull	r9, r5, r3, r2
 8000562:	eba4 040e 	sub.w	r4, r4, lr
 8000566:	42ac      	cmp	r4, r5
 8000568:	46c8      	mov	r8, r9
 800056a:	46ae      	mov	lr, r5
 800056c:	d356      	bcc.n	800061c <__udivmoddi4+0x29c>
 800056e:	d053      	beq.n	8000618 <__udivmoddi4+0x298>
 8000570:	b156      	cbz	r6, 8000588 <__udivmoddi4+0x208>
 8000572:	ebb0 0208 	subs.w	r2, r0, r8
 8000576:	eb64 040e 	sbc.w	r4, r4, lr
 800057a:	fa04 f707 	lsl.w	r7, r4, r7
 800057e:	40ca      	lsrs	r2, r1
 8000580:	40cc      	lsrs	r4, r1
 8000582:	4317      	orrs	r7, r2
 8000584:	e9c6 7400 	strd	r7, r4, [r6]
 8000588:	4618      	mov	r0, r3
 800058a:	2100      	movs	r1, #0
 800058c:	e8bd 87f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, pc}
 8000590:	f1c3 0120 	rsb	r1, r3, #32
 8000594:	fa02 fc03 	lsl.w	ip, r2, r3
 8000598:	fa20 f201 	lsr.w	r2, r0, r1
 800059c:	fa25 f101 	lsr.w	r1, r5, r1
 80005a0:	409d      	lsls	r5, r3
 80005a2:	432a      	orrs	r2, r5
 80005a4:	ea4f 471c 	mov.w	r7, ip, lsr #16
 80005a8:	fa1f fe8c 	uxth.w	lr, ip
 80005ac:	fbb1 f0f7 	udiv	r0, r1, r7
 80005b0:	fb07 1510 	mls	r5, r7, r0, r1
 80005b4:	0c11      	lsrs	r1, r2, #16
 80005b6:	ea41 4105 	orr.w	r1, r1, r5, lsl #16
 80005ba:	fb00 f50e 	mul.w	r5, r0, lr
 80005be:	428d      	cmp	r5, r1
 80005c0:	fa04 f403 	lsl.w	r4, r4, r3
 80005c4:	d908      	bls.n	80005d8 <__udivmoddi4+0x258>
 80005c6:	eb1c 0101 	adds.w	r1, ip, r1
 80005ca:	f100 38ff 	add.w	r8, r0, #4294967295
 80005ce:	d22f      	bcs.n	8000630 <__udivmoddi4+0x2b0>
 80005d0:	428d      	cmp	r5, r1
 80005d2:	d92d      	bls.n	8000630 <__udivmoddi4+0x2b0>
 80005d4:	3802      	subs	r0, #2
 80005d6:	4461      	add	r1, ip
 80005d8:	1b49      	subs	r1, r1, r5
 80005da:	b292      	uxth	r2, r2
 80005dc:	fbb1 f5f7 	udiv	r5, r1, r7
 80005e0:	fb07 1115 	mls	r1, r7, r5, r1
 80005e4:	ea42 4201 	orr.w	r2, r2, r1, lsl #16
 80005e8:	fb05 f10e 	mul.w	r1, r5, lr
 80005ec:	4291      	cmp	r1, r2
 80005ee:	d908      	bls.n	8000602 <__udivmoddi4+0x282>
 80005f0:	eb1c 0202 	adds.w	r2, ip, r2
 80005f4:	f105 38ff 	add.w	r8, r5, #4294967295
 80005f8:	d216      	bcs.n	8000628 <__udivmoddi4+0x2a8>
 80005fa:	4291      	cmp	r1, r2
 80005fc:	d914      	bls.n	8000628 <__udivmoddi4+0x2a8>
 80005fe:	3d02      	subs	r5, #2
 8000600:	4462      	add	r2, ip
 8000602:	1a52      	subs	r2, r2, r1
 8000604:	ea45 4100 	orr.w	r1, r5, r0, lsl #16
 8000608:	e738      	b.n	800047c <__udivmoddi4+0xfc>
 800060a:	4631      	mov	r1, r6
 800060c:	4630      	mov	r0, r6
 800060e:	e708      	b.n	8000422 <__udivmoddi4+0xa2>
 8000610:	4639      	mov	r1, r7
 8000612:	e6e6      	b.n	80003e2 <__udivmoddi4+0x62>
 8000614:	4610      	mov	r0, r2
 8000616:	e6fb      	b.n	8000410 <__udivmoddi4+0x90>
 8000618:	4548      	cmp	r0, r9
 800061a:	d2a9      	bcs.n	8000570 <__udivmoddi4+0x1f0>
 800061c:	ebb9 0802 	subs.w	r8, r9, r2
 8000620:	eb65 0e0c 	sbc.w	lr, r5, ip
 8000624:	3b01      	subs	r3, #1
 8000626:	e7a3      	b.n	8000570 <__udivmoddi4+0x1f0>
 8000628:	4645      	mov	r5, r8
 800062a:	e7ea      	b.n	8000602 <__udivmoddi4+0x282>
 800062c:	462b      	mov	r3, r5
 800062e:	e794      	b.n	800055a <__udivmoddi4+0x1da>
 8000630:	4640      	mov	r0, r8
 8000632:	e7d1      	b.n	80005d8 <__udivmoddi4+0x258>
 8000634:	46d0      	mov	r8, sl
 8000636:	e77b      	b.n	8000530 <__udivmoddi4+0x1b0>
 8000638:	3d02      	subs	r5, #2
 800063a:	4462      	add	r2, ip
 800063c:	e732      	b.n	80004a4 <__udivmoddi4+0x124>
 800063e:	4608      	mov	r0, r1
 8000640:	e70a      	b.n	8000458 <__udivmoddi4+0xd8>
 8000642:	4464      	add	r4, ip
 8000644:	3802      	subs	r0, #2
 8000646:	e742      	b.n	80004ce <__udivmoddi4+0x14e>

08000648 <__aeabi_idiv0>:
 8000648:	4770      	bx	lr
 800064a:	bf00      	nop

0800064c <Reset_Handler>:

    .section  .text.Reset_Handler
  .weak  Reset_Handler
  .type  Reset_Handler, %function
Reset_Handler: 
  ldr   sp, =_estack       /* set stack pointer */
 800064c:	f8df d034 	ldr.w	sp, [pc, #52]	; 8000684 <LoopFillZerobss+0x14>
 
/* Copy the data segment initializers from flash to SRAM */  
  movs  r1, #0
 8000650:	2100      	movs	r1, #0
  b  LoopCopyDataInit
 8000652:	e003      	b.n	800065c <LoopCopyDataInit>

08000654 <CopyDataInit>:

CopyDataInit:
  ldr  r3, =_sidata
 8000654:	4b0c      	ldr	r3, [pc, #48]	; (8000688 <LoopFillZerobss+0x18>)
  ldr  r3, [r3, r1]
 8000656:	585b      	ldr	r3, [r3, r1]
  str  r3, [r0, r1]
 8000658:	5043      	str	r3, [r0, r1]
  adds  r1, r1, #4
 800065a:	3104      	adds	r1, #4

0800065c <LoopCopyDataInit>:
    
LoopCopyDataInit:
  ldr  r0, =_sdata
 800065c:	480b      	ldr	r0, [pc, #44]	; (800068c <LoopFillZerobss+0x1c>)
  ldr  r3, =_edata
 800065e:	4b0c      	ldr	r3, [pc, #48]	; (8000690 <LoopFillZerobss+0x20>)
  adds  r2, r0, r1
 8000660:	1842      	adds	r2, r0, r1
  cmp  r2, r3
 8000662:	429a      	cmp	r2, r3
  bcc  CopyDataInit
 8000664:	d3f6      	bcc.n	8000654 <CopyDataInit>
  ldr  r2, =_sbss
 8000666:	4a0b      	ldr	r2, [pc, #44]	; (8000694 <LoopFillZerobss+0x24>)
  b  LoopFillZerobss
 8000668:	e002      	b.n	8000670 <LoopFillZerobss>

0800066a <FillZerobss>:
/* Zero fill the bss segment. */  
FillZerobss:
  movs  r3, #0
 800066a:	2300      	movs	r3, #0
  str  r3, [r2], #4
 800066c:	f842 3b04 	str.w	r3, [r2], #4

08000670 <LoopFillZerobss>:
    
LoopFillZerobss:
  ldr  r3, = _ebss
 8000670:	4b09      	ldr	r3, [pc, #36]	; (8000698 <LoopFillZerobss+0x28>)
  cmp  r2, r3
 8000672:	429a      	cmp	r2, r3
  bcc  FillZerobss
 8000674:	d3f9      	bcc.n	800066a <FillZerobss>

/* Call the clock system intitialization function.*/
  bl  SystemInit   
 8000676:	f008 ffe1 	bl	800963c <SystemInit>
/* Call static constructors */
    bl __libc_init_array
 800067a:	f02b f975 	bl	802b968 <__libc_init_array>
/* Call the application's entry point.*/
  bl  main
 800067e:	f000 fa5f 	bl	8000b40 <main>
  bx  lr    
 8000682:	4770      	bx	lr
  ldr   sp, =_estack       /* set stack pointer */
 8000684:	20030000 	.word	0x20030000
  ldr  r3, =_sidata
 8000688:	080ccd14 	.word	0x080ccd14
  ldr  r0, =_sdata
 800068c:	20000000 	.word	0x20000000
  ldr  r3, =_edata
 8000690:	20000168 	.word	0x20000168
  ldr  r2, =_sbss
 8000694:	20000168 	.word	0x20000168
  ldr  r3, = _ebss
 8000698:	20014454 	.word	0x20014454

0800069c <ADC_IRQHandler>:
 * @retval None       
*/
    .section  .text.Default_Handler,"ax",%progbits
Default_Handler:
Infinite_Loop:
  b  Infinite_Loop
 800069c:	e7fe      	b.n	800069c <ADC_IRQHandler>
	...

080006a0 <GetSector>:

static uint32_t GetSector(uint32_t Address)
{
  uint32_t sector = 0;

  if((Address < 0x08003FFF) && (Address >= 0x08000000))
 80006a0:	f100 4378 	add.w	r3, r0, #4160749568	; 0xf8000000
 80006a4:	f643 72fe 	movw	r2, #16382	; 0x3ffe
 80006a8:	4293      	cmp	r3, r2
 80006aa:	d905      	bls.n	80006b8 <GetSector+0x18>
  {
    sector = FLASH_SECTOR_0;
  }
  else if((Address < 0x08007FFF) && (Address >= 0x08004000))
 80006ac:	f5a3 4180 	sub.w	r1, r3, #16384	; 0x4000
 80006b0:	4291      	cmp	r1, r2
 80006b2:	d803      	bhi.n	80006bc <GetSector+0x1c>
  {
    sector = FLASH_SECTOR_1;
 80006b4:	2001      	movs	r0, #1
 80006b6:	4770      	bx	lr
    sector = FLASH_SECTOR_0;
 80006b8:	2000      	movs	r0, #0
 80006ba:	4770      	bx	lr
  }
  else if((Address < 0x0800BFFF) && (Address >= 0x08008000))
 80006bc:	f5a3 4100 	sub.w	r1, r3, #32768	; 0x8000
 80006c0:	4291      	cmp	r1, r2
 80006c2:	d960      	bls.n	8000786 <GetSector+0xe6>
  {
    sector = FLASH_SECTOR_2;
  }
  else if((Address < 0x0800FFFF) && (Address >= 0x0800C000))
 80006c4:	f5a3 4340 	sub.w	r3, r3, #49152	; 0xc000
 80006c8:	4293      	cmp	r3, r2
 80006ca:	d95e      	bls.n	800078a <GetSector+0xea>
  {
    sector = FLASH_SECTOR_3;
  }
  else if((Address < 0x0801FFFF) && (Address >= 0x08010000))
 80006cc:	f100 4377 	add.w	r3, r0, #4143972352	; 0xf7000000
 80006d0:	f503 017f 	add.w	r1, r3, #16711680	; 0xff0000
 80006d4:	f64f 72fe 	movw	r2, #65534	; 0xfffe
 80006d8:	4291      	cmp	r1, r2
 80006da:	d95a      	bls.n	8000792 <GetSector+0xf2>
  {
    sector = FLASH_SECTOR_4;
  }
  else if((Address < 0x0803FFFF) && (Address >= 0x08020000))
 80006dc:	f502 3280 	add.w	r2, r2, #65536	; 0x10000
 80006e0:	f503 017e 	add.w	r1, r3, #16646144	; 0xfe0000
 80006e4:	4291      	cmp	r1, r2
 80006e6:	d952      	bls.n	800078e <GetSector+0xee>
  {
    sector = FLASH_SECTOR_5;
  }
  else if((Address < 0x0805FFFF) && (Address >= 0x08040000))
 80006e8:	f503 017c 	add.w	r1, r3, #16515072	; 0xfc0000
 80006ec:	4291      	cmp	r1, r2
 80006ee:	d952      	bls.n	8000796 <GetSector+0xf6>
  {
    sector = FLASH_SECTOR_6;
  }
  else if((Address < 0x0807FFFF) && (Address >= 0x08060000))
 80006f0:	f503 017a 	add.w	r1, r3, #16384000	; 0xfa0000
 80006f4:	4291      	cmp	r1, r2
 80006f6:	d950      	bls.n	800079a <GetSector+0xfa>
  {
    sector = FLASH_SECTOR_7;
  }
  else if((Address < 0x0809FFFF) && (Address >= 0x08080000))
 80006f8:	f503 0178 	add.w	r1, r3, #16252928	; 0xf80000
 80006fc:	4291      	cmp	r1, r2
 80006fe:	d94e      	bls.n	800079e <GetSector+0xfe>
  {
    sector = FLASH_SECTOR_8;
  }
  else if((Address < 0x080BFFFF) && (Address >= 0x080A0000))
 8000700:	f503 0176 	add.w	r1, r3, #16121856	; 0xf60000
 8000704:	4291      	cmp	r1, r2
 8000706:	d94c      	bls.n	80007a2 <GetSector+0x102>
  {
    sector = FLASH_SECTOR_9;
  }
  else if((Address < 0x080DFFFF) && (Address >= 0x080C0000))
 8000708:	f503 0174 	add.w	r1, r3, #15990784	; 0xf40000
 800070c:	4291      	cmp	r1, r2
 800070e:	d94a      	bls.n	80007a6 <GetSector+0x106>
  {
    sector = FLASH_SECTOR_10;
  }
  else if((Address < 0x080FFFFF) && (Address >= 0x080E0000))
 8000710:	f503 0172 	add.w	r1, r3, #15859712	; 0xf20000
 8000714:	4291      	cmp	r1, r2
 8000716:	d948      	bls.n	80007aa <GetSector+0x10a>
  {
    sector = FLASH_SECTOR_11;
  }
  else if((Address < 0x08103FFF) && (Address >= 0x08100000))
 8000718:	f1a0 6001 	sub.w	r0, r0, #135266304	; 0x8100000
 800071c:	f643 71fe 	movw	r1, #16382	; 0x3ffe
 8000720:	4288      	cmp	r0, r1
 8000722:	d944      	bls.n	80007ae <GetSector+0x10e>
  {
    sector = FLASH_SECTOR_12;
  }
  else if((Address < 0x08107FFF) && (Address >= 0x08104000))
 8000724:	f5a0 4c80 	sub.w	ip, r0, #16384	; 0x4000
 8000728:	458c      	cmp	ip, r1
 800072a:	d942      	bls.n	80007b2 <GetSector+0x112>
  {
    sector = FLASH_SECTOR_13;
  }
  else if((Address < 0x0810BFFF) && (Address >= 0x08108000))
 800072c:	f5a0 4c00 	sub.w	ip, r0, #32768	; 0x8000
 8000730:	458c      	cmp	ip, r1
 8000732:	d940      	bls.n	80007b6 <GetSector+0x116>
  {
    sector = FLASH_SECTOR_14;
  }
  else if((Address < 0x0810FFFF) && (Address >= 0x0810C000))
 8000734:	f5a0 4040 	sub.w	r0, r0, #49152	; 0xc000
 8000738:	4288      	cmp	r0, r1
 800073a:	d93e      	bls.n	80007ba <GetSector+0x11a>
  {
    sector = FLASH_SECTOR_15;
  }
  else if((Address < 0x0811FFFF) && (Address >= 0x08110000))
 800073c:	f503 006f 	add.w	r0, r3, #15663104	; 0xef0000
 8000740:	f64f 71fe 	movw	r1, #65534	; 0xfffe
 8000744:	4288      	cmp	r0, r1
 8000746:	d93a      	bls.n	80007be <GetSector+0x11e>
  {
    sector = FLASH_SECTOR_16;
  }
  else if((Address < 0x0813FFFF) && (Address >= 0x08120000))
 8000748:	f503 016e 	add.w	r1, r3, #15597568	; 0xee0000
 800074c:	4291      	cmp	r1, r2
 800074e:	d938      	bls.n	80007c2 <GetSector+0x122>
  {
    sector = FLASH_SECTOR_17;
  }
  else if((Address < 0x0815FFFF) && (Address >= 0x08140000))
 8000750:	f503 016c 	add.w	r1, r3, #15466496	; 0xec0000
 8000754:	4291      	cmp	r1, r2
 8000756:	d938      	bls.n	80007ca <GetSector+0x12a>
  {
    sector = FLASH_SECTOR_18;
  }
  else if((Address < 0x0817FFFF) && (Address >= 0x08160000))
 8000758:	f503 016a 	add.w	r1, r3, #15335424	; 0xea0000
 800075c:	4291      	cmp	r1, r2
 800075e:	d932      	bls.n	80007c6 <GetSector+0x126>
  {
    sector = FLASH_SECTOR_19;
  }
  else if((Address < 0x0819FFFF) && (Address >= 0x08180000))
 8000760:	f503 0168 	add.w	r1, r3, #15204352	; 0xe80000
 8000764:	4291      	cmp	r1, r2
 8000766:	d936      	bls.n	80007d6 <GetSector+0x136>
  {
    sector = FLASH_SECTOR_20;
  }
  else if((Address < 0x081BFFFF) && (Address >= 0x081A0000))
 8000768:	f503 0166 	add.w	r1, r3, #15073280	; 0xe60000
 800076c:	4291      	cmp	r1, r2
 800076e:	d930      	bls.n	80007d2 <GetSector+0x132>
  {
    sector = FLASH_SECTOR_21;
  }
  else if((Address < 0x081DFFFF) && (Address >= 0x081C0000))
 8000770:	f503 0164 	add.w	r1, r3, #14942208	; 0xe40000
 8000774:	4291      	cmp	r1, r2
 8000776:	d92a      	bls.n	80007ce <GetSector+0x12e>
  {
    sector = FLASH_SECTOR_22;
  }
  else if((Address < 0x081FFFFF) && (Address >= 0x081E0000))
 8000778:	f503 0362 	add.w	r3, r3, #14811136	; 0xe20000
  {
    sector = FLASH_SECTOR_23;
 800077c:	4293      	cmp	r3, r2
 800077e:	bf94      	ite	ls
 8000780:	2017      	movls	r0, #23
 8000782:	2000      	movhi	r0, #0
 8000784:	4770      	bx	lr
    sector = FLASH_SECTOR_2;
 8000786:	2002      	movs	r0, #2
 8000788:	4770      	bx	lr
    sector = FLASH_SECTOR_3;
 800078a:	2003      	movs	r0, #3
 800078c:	4770      	bx	lr
    sector = FLASH_SECTOR_5;
 800078e:	2005      	movs	r0, #5
 8000790:	4770      	bx	lr
    sector = FLASH_SECTOR_4;
 8000792:	2004      	movs	r0, #4
 8000794:	4770      	bx	lr
    sector = FLASH_SECTOR_6;
 8000796:	2006      	movs	r0, #6
 8000798:	4770      	bx	lr
    sector = FLASH_SECTOR_7;
 800079a:	2007      	movs	r0, #7
 800079c:	4770      	bx	lr
    sector = FLASH_SECTOR_8;
 800079e:	2008      	movs	r0, #8
 80007a0:	4770      	bx	lr
    sector = FLASH_SECTOR_9;
 80007a2:	2009      	movs	r0, #9
 80007a4:	4770      	bx	lr
    sector = FLASH_SECTOR_10;
 80007a6:	200a      	movs	r0, #10
 80007a8:	4770      	bx	lr
    sector = FLASH_SECTOR_11;
 80007aa:	200b      	movs	r0, #11
 80007ac:	4770      	bx	lr
    sector = FLASH_SECTOR_12;
 80007ae:	200c      	movs	r0, #12
 80007b0:	4770      	bx	lr
    sector = FLASH_SECTOR_13;
 80007b2:	200d      	movs	r0, #13
 80007b4:	4770      	bx	lr
    sector = FLASH_SECTOR_14;
 80007b6:	200e      	movs	r0, #14
 80007b8:	4770      	bx	lr
    sector = FLASH_SECTOR_15;
 80007ba:	200f      	movs	r0, #15
 80007bc:	4770      	bx	lr
    sector = FLASH_SECTOR_16;
 80007be:	2010      	movs	r0, #16
 80007c0:	4770      	bx	lr
    sector = FLASH_SECTOR_17;
 80007c2:	2011      	movs	r0, #17
 80007c4:	4770      	bx	lr
    sector = FLASH_SECTOR_19;
 80007c6:	2013      	movs	r0, #19
 80007c8:	4770      	bx	lr
    sector = FLASH_SECTOR_18;
 80007ca:	2012      	movs	r0, #18
 80007cc:	4770      	bx	lr
    sector = FLASH_SECTOR_22;
 80007ce:	2016      	movs	r0, #22
  }
  return sector;
}
 80007d0:	4770      	bx	lr
    sector = FLASH_SECTOR_21;
 80007d2:	2015      	movs	r0, #21
 80007d4:	4770      	bx	lr
    sector = FLASH_SECTOR_20;
 80007d6:	2014      	movs	r0, #20
 80007d8:	4770      	bx	lr
 80007da:	bf00      	nop

080007dc <Flash_Write_Data>:
   return float_variable;
}


uint32_t Flash_Write_Data (uint32_t StartSectorAddress, uint32_t *Data, uint16_t numberofwords)
{
 80007dc:	b5f0      	push	{r4, r5, r6, r7, lr}
 80007de:	4607      	mov	r7, r0
 80007e0:	b083      	sub	sp, #12
 80007e2:	4616      	mov	r6, r2
 80007e4:	460d      	mov	r5, r1
	uint32_t SECTORError;
	int sofar=0;


	 /* Unlock the Flash to enable the flash control register access *************/
	  HAL_FLASH_Unlock();
 80007e6:	f009 f8e7 	bl	80099b8 <HAL_FLASH_Unlock>

	  /* Erase the user Flash area */

	  /* Get the number of sector to erase from 1st sector */

	  uint32_t StartSector = GetSector(StartSectorAddress);
 80007ea:	4638      	mov	r0, r7
 80007ec:	f7ff ff58 	bl	80006a0 <GetSector>
 80007f0:	4604      	mov	r4, r0
	  uint32_t EndSectorAddress = StartSectorAddress + numberofwords*4;
	  uint32_t EndSector = GetSector(EndSectorAddress);
 80007f2:	eb07 0086 	add.w	r0, r7, r6, lsl #2
 80007f6:	f7ff ff53 	bl	80006a0 <GetSector>

	  /* Fill EraseInit structure*/
	  EraseInitStruct.TypeErase     = FLASH_TYPEERASE_SECTORS;
	  EraseInitStruct.VoltageRange  = FLASH_VOLTAGE_RANGE_3;
	  EraseInitStruct.Sector        = StartSector;
	  EraseInitStruct.NbSectors     = (EndSector - StartSector) + 1;
 80007fa:	1c43      	adds	r3, r0, #1
	  EraseInitStruct.TypeErase     = FLASH_TYPEERASE_SECTORS;
 80007fc:	4813      	ldr	r0, [pc, #76]	; (800084c <Flash_Write_Data+0x70>)
	  EraseInitStruct.NbSectors     = (EndSector - StartSector) + 1;
 80007fe:	1b1b      	subs	r3, r3, r4
 8000800:	e9c0 4302 	strd	r4, r3, [r0, #8]
	  EraseInitStruct.TypeErase     = FLASH_TYPEERASE_SECTORS;
 8000804:	2300      	movs	r3, #0
 8000806:	6003      	str	r3, [r0, #0]

	  /* Note: If an erase operation in Flash memory also concerns data in the data or instruction cache,
	     you have to make sure that these data are rewritten before they are accessed during code
	     execution. If this cannot be done safely, it is recommended to flush the caches by setting the
	     DCRST and ICRST bits in the FLASH_CR register. */
	  if (HAL_FLASHEx_Erase(&EraseInitStruct, &SECTORError) != HAL_OK)
 8000808:	a901      	add	r1, sp, #4
	  EraseInitStruct.VoltageRange  = FLASH_VOLTAGE_RANGE_3;
 800080a:	2302      	movs	r3, #2
 800080c:	6103      	str	r3, [r0, #16]
	  if (HAL_FLASHEx_Erase(&EraseInitStruct, &SECTORError) != HAL_OK)
 800080e:	f009 f951 	bl	8009ab4 <HAL_FLASHEx_Erase>
 8000812:	b988      	cbnz	r0, 8000838 <Flash_Write_Data+0x5c>
	  }

	  /* Program the user Flash area word by word
	    (area defined by FLASH_USER_START_ADDR and FLASH_USER_END_ADDR) ***********/

	   while (sofar<numberofwords)
 8000814:	b1a6      	cbz	r6, 8000840 <Flash_Write_Data+0x64>
 8000816:	1b7f      	subs	r7, r7, r5
 8000818:	4604      	mov	r4, r0
 800081a:	3d04      	subs	r5, #4
 800081c:	3704      	adds	r7, #4
 800081e:	e001      	b.n	8000824 <Flash_Write_Data+0x48>
 8000820:	42a6      	cmp	r6, r4
 8000822:	d00d      	beq.n	8000840 <Flash_Write_Data+0x64>
 8000824:	1979      	adds	r1, r7, r5
	   {
	     if (HAL_FLASH_Program(FLASH_TYPEPROGRAM_WORD, StartSectorAddress, Data[sofar]) == HAL_OK)
 8000826:	2300      	movs	r3, #0
 8000828:	f855 2f04 	ldr.w	r2, [r5, #4]!
 800082c:	2002      	movs	r0, #2
	     {
	    	 StartSectorAddress += 4;  // use StartPageAddress += 2 for half word and 8 for double word
	    	 sofar++;
 800082e:	3401      	adds	r4, #1
	     if (HAL_FLASH_Program(FLASH_TYPEPROGRAM_WORD, StartSectorAddress, Data[sofar]) == HAL_OK)
 8000830:	f009 f820 	bl	8009874 <HAL_FLASH_Program>
 8000834:	2800      	cmp	r0, #0
 8000836:	d0f3      	beq.n	8000820 <Flash_Write_Data+0x44>
	     }
	     else
	     {
	       /* Error occurred while writing data in Flash memory*/
	    	 return HAL_FLASH_GetError ();
 8000838:	f009 f8dc 	bl	80099f4 <HAL_FLASH_GetError>
	  /* Lock the Flash to disable the flash control register access (recommended
	     to protect the FLASH memory against possible unwanted operation) *********/
	  HAL_FLASH_Lock();

	   return 0;
}
 800083c:	b003      	add	sp, #12
 800083e:	bdf0      	pop	{r4, r5, r6, r7, pc}
	  HAL_FLASH_Lock();
 8000840:	f009 f8ce 	bl	80099e0 <HAL_FLASH_Lock>
	   return 0;
 8000844:	2000      	movs	r0, #0
}
 8000846:	b003      	add	sp, #12
 8000848:	bdf0      	pop	{r4, r5, r6, r7, pc}
 800084a:	bf00      	nop
 800084c:	20000184 	.word	0x20000184

08000850 <Flash_Read_Data>:


void Flash_Read_Data (uint32_t StartSectorAddress, uint32_t *RxBuf, uint16_t numberofwords)
{
 8000850:	460b      	mov	r3, r1
 8000852:	3201      	adds	r2, #1
 8000854:	eb01 0182 	add.w	r1, r1, r2, lsl #2
 8000858:	1ac0      	subs	r0, r0, r3
	while (1)
	{

		*RxBuf = *(__IO uint32_t *)StartSectorAddress;
 800085a:	581a      	ldr	r2, [r3, r0]
 800085c:	f843 2b04 	str.w	r2, [r3], #4
		StartSectorAddress += 4;
		RxBuf++;
		if (!(numberofwords--)) break;
 8000860:	428b      	cmp	r3, r1
 8000862:	d1fa      	bne.n	800085a <Flash_Read_Data+0xa>
	}
}
 8000864:	4770      	bx	lr
 8000866:	bf00      	nop

08000868 <calculate_freq_and_signalstrength>:
 * @param Channel The channel number.
 * @param samples Pointer to the input samples array.
 * @param given_frequency The given frequency.
 * @return FFT structure containing the main frequency and signal strength.
 */
FFT calculate_freq_and_signalstrength(uint8_t Channel, uint32_t* samples, uint8_t given_frequency) {
 8000868:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 800086c:	ed2d 8b02 	vpush	{d8}
 8000870:	b091      	sub	sp, #68	; 0x44
 8000872:	af00      	add	r7, sp, #0
 8000874:	4605      	mov	r5, r0
 8000876:	4688      	mov	r8, r1
 8000878:	60fa      	str	r2, [r7, #12]
    // Perform FFT using CMSIS-DSP library
	uint8_t buffer_size = MEAS_get_num_of_samples();
 800087a:	f000 fe5b 	bl	8001534 <MEAS_get_num_of_samples>
    const uint32_t fft_size = buffer_size;
    // Convert the samples to the specific channel
    float32_t input_samples[buffer_size];
 800087e:	b203      	sxth	r3, r0
 8000880:	60bb      	str	r3, [r7, #8]
 8000882:	009b      	lsls	r3, r3, #2
 8000884:	607b      	str	r3, [r7, #4]
 8000886:	3307      	adds	r3, #7
 8000888:	f023 0307 	bic.w	r3, r3, #7
 800088c:	ebad 0d03 	sub.w	sp, sp, r3
	uint8_t buffer_size = MEAS_get_num_of_samples();
 8000890:	4604      	mov	r4, r0
    float32_t input_samples[buffer_size];
 8000892:	46ea      	mov	sl, sp
    for (uint32_t i = 0; i < fft_size; i++) {
 8000894:	b1f0      	cbz	r0, 80008d4 <calculate_freq_and_signalstrength+0x6c>
 8000896:	3d01      	subs	r5, #1
 8000898:	46d1      	mov	r9, sl
        input_samples[i] = (float32_t)samples[i * MEAS_get_num_of_chan() + (Channel - 1)];
 800089a:	46d3      	mov	fp, sl
    for (uint32_t i = 0; i < fft_size; i++) {
 800089c:	2600      	movs	r6, #0
        input_samples[i] = (float32_t)samples[i * MEAS_get_num_of_chan() + (Channel - 1)];
 800089e:	f000 fe47 	bl	8001530 <MEAS_get_num_of_chan>
 80008a2:	fb06 5000 	mla	r0, r6, r0, r5
 80008a6:	eb08 0380 	add.w	r3, r8, r0, lsl #2
 80008aa:	edd3 7a00 	vldr	s15, [r3]
    for (uint32_t i = 0; i < fft_size; i++) {
 80008ae:	3601      	adds	r6, #1
        input_samples[i] = (float32_t)samples[i * MEAS_get_num_of_chan() + (Channel - 1)];
 80008b0:	eef8 7a67 	vcvt.f32.u32	s15, s15
    for (uint32_t i = 0; i < fft_size; i++) {
 80008b4:	42b4      	cmp	r4, r6
        input_samples[i] = (float32_t)samples[i * MEAS_get_num_of_chan() + (Channel - 1)];
 80008b6:	eceb 7a01 	vstmia	fp!, {s15}
    for (uint32_t i = 0; i < fft_size; i++) {
 80008ba:	d1f0      	bne.n	800089e <calculate_freq_and_signalstrength+0x36>
 80008bc:	687e      	ldr	r6, [r7, #4]
    }
    
    // remove DC component
    for (uint32_t i = 0; i < fft_size; i++) {
        input_samples[i] -= 2047.5;
 80008be:	ed9f 7a2b 	vldr	s14, [pc, #172]	; 800096c <calculate_freq_and_signalstrength+0x104>
 80008c2:	4456      	add	r6, sl
 80008c4:	edd9 7a00 	vldr	s15, [r9]
 80008c8:	ee77 7ac7 	vsub.f32	s15, s15, s14
 80008cc:	ece9 7a01 	vstmia	r9!, {s15}
    for (uint32_t i = 0; i < fft_size; i++) {
 80008d0:	454e      	cmp	r6, r9
 80008d2:	d1f7      	bne.n	80008c4 <calculate_freq_and_signalstrength+0x5c>
    }

    // Create an array for the FFT output
    float32_t fft_complex_output[2*buffer_size];
 80008d4:	68bb      	ldr	r3, [r7, #8]
 80008d6:	466a      	mov	r2, sp
 80008d8:	eba2 03c3 	sub.w	r3, r2, r3, lsl #3
 80008dc:	469d      	mov	sp, r3

    //calculate the index of the given frequency
    uint32_t index = (uint32_t)given_frequency * fft_size / MEAS_get_samp_freq();

    //calculate the signal strength
    float signal_strength = 2* fft_complex_output[index] / fft_size;
 80008de:	ee07 4a90 	vmov	s15, r4
    uint32_t index = (uint32_t)given_frequency * fft_size / MEAS_get_samp_freq();
 80008e2:	68fb      	ldr	r3, [r7, #12]
    float32_t fft_complex_output[2*buffer_size];
 80008e4:	466d      	mov	r5, sp
    arm_rfft_fast_init_f32(&fft_struct, fft_size);
 80008e6:	b2a1      	uxth	r1, r4
 80008e8:	f107 0028 	add.w	r0, r7, #40	; 0x28
    float signal_strength = 2* fft_complex_output[index] / fft_size;
 80008ec:	eef8 8a67 	vcvt.f32.u32	s17, s15
    uint32_t index = (uint32_t)given_frequency * fft_size / MEAS_get_samp_freq();
 80008f0:	fb13 f904 	smulbb	r9, r3, r4
    arm_rfft_fast_init_f32(&fft_struct, fft_size);
 80008f4:	f028 fe60 	bl	80295b8 <arm_rfft_fast_init_f32>
    arm_cmplx_mag_f32(fft_complex_output, fft_complex_output, fft_size / 2);
 80008f8:	0864      	lsrs	r4, r4, #1
    arm_rfft_fast_f32(&fft_struct, input_samples, fft_complex_output, 0);
 80008fa:	2300      	movs	r3, #0
 80008fc:	4651      	mov	r1, sl
 80008fe:	f107 0028 	add.w	r0, r7, #40	; 0x28
 8000902:	462a      	mov	r2, r5
 8000904:	f028 fedc 	bl	80296c0 <arm_rfft_fast_f32>
    arm_cmplx_mag_f32(fft_complex_output, fft_complex_output, fft_size / 2);
 8000908:	4622      	mov	r2, r4
 800090a:	4629      	mov	r1, r5
 800090c:	4628      	mov	r0, r5
 800090e:	f029 fb45 	bl	8029f9c <arm_cmplx_mag_f32>
    uint32_t index = (uint32_t)given_frequency * fft_size / MEAS_get_samp_freq();
 8000912:	f000 fe11 	bl	8001538 <MEAS_get_samp_freq>
 8000916:	fbb9 f9f0 	udiv	r9, r9, r0
    float signal_strength = 2* fft_complex_output[index] / fft_size;
 800091a:	eb05 0989 	add.w	r9, r5, r9, lsl #2
 800091e:	edd9 7a00 	vldr	s15, [r9]
 8000922:	ee77 7aa7 	vadd.f32	s15, s15, s15

    // Find the index of the maximum magnitude in the first half of the array
    uint32_t maxIndex;
    float32_t maxValue;
    arm_max_f32(fft_complex_output, fft_size / 2, &maxValue, &maxIndex);
 8000926:	f107 0318 	add.w	r3, r7, #24
    float signal_strength = 2* fft_complex_output[index] / fft_size;
 800092a:	eec7 0aa8 	vdiv.f32	s1, s15, s17
    arm_max_f32(fft_complex_output, fft_size / 2, &maxValue, &maxIndex);
 800092e:	f107 021c 	add.w	r2, r7, #28
 8000932:	4621      	mov	r1, r4
 8000934:	4628      	mov	r0, r5
    float signal_strength = 2* fft_complex_output[index] / fft_size;
 8000936:	edc7 0a03 	vstr	s1, [r7, #12]
    arm_max_f32(fft_complex_output, fft_size / 2, &maxValue, &maxIndex);
 800093a:	f028 fdd5 	bl	80294e8 <arm_max_f32>

    // Calculate the main frequency
    float main_frequency = (float)maxIndex * ((float)MEAS_get_samp_freq()) / fft_size;
 800093e:	edd7 7a06 	vldr	s15, [r7, #24]
 8000942:	eeb8 8a67 	vcvt.f32.u32	s16, s15
 8000946:	f000 fdf7 	bl	8001538 <MEAS_get_samp_freq>
 800094a:	ee07 0a90 	vmov	s15, r0
 800094e:	eef8 7a67 	vcvt.f32.u32	s15, s15
    FFT fft;

    // return the calculated values
    fft.main_freq = main_frequency;
    fft.signal_strength = signal_strength;
    return fft;
 8000952:	edd7 0a03 	vldr	s1, [r7, #12]
    float main_frequency = (float)maxIndex * ((float)MEAS_get_samp_freq()) / fft_size;
 8000956:	ee67 7a88 	vmul.f32	s15, s15, s16
}
 800095a:	3744      	adds	r7, #68	; 0x44
    float main_frequency = (float)maxIndex * ((float)MEAS_get_samp_freq()) / fft_size;
 800095c:	ee87 0aa8 	vdiv.f32	s0, s15, s17
}
 8000960:	46bd      	mov	sp, r7
 8000962:	ecbd 8b02 	vpop	{d8}
 8000966:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
 800096a:	bf00      	nop
 800096c:	44fff000 	.word	0x44fff000

08000970 <StartDefaultTask>:
  * @param  argument: Not used
  * @retval None
  */
/* USER CODE END Header_StartDefaultTask */
void StartDefaultTask(void *argument)
{
 8000970:	b508      	push	{r3, lr}
  /* USER CODE BEGIN 5 */
  /* Infinite loop */
  for(;;)
  {
    osDelay(100);
 8000972:	2064      	movs	r0, #100	; 0x64
 8000974:	f00c fde8 	bl	800d548 <osDelay>
  for(;;)
 8000978:	e7fb      	b.n	8000972 <StartDefaultTask+0x2>
 800097a:	bf00      	nop

0800097c <StartTimeoutTask>:
* @param argument: Not used
* @retval None
*/
/* USER CODE END Header_StartTimeoutTask */
void StartTimeoutTask(void *argument)
{
 800097c:	b580      	push	{r7, lr}
 800097e:	4c10      	ldr	r4, [pc, #64]	; (80009c0 <StartTimeoutTask+0x44>)
 8000980:	f8df 8048 	ldr.w	r8, [pc, #72]	; 80009cc <StartTimeoutTask+0x50>
	  osMessageQueuePut(TimeoutQueueHandle, &sleep_timeout_value, 0, 0);

	  if(sleep_timeout_value == 0)
	  {
		  sleep_timeout_value = 60;
		  HAL_GPIO_WritePin(GPIOE, GPIO_PIN_5, GPIO_PIN_RESET);	//shut down device
 8000984:	4f0f      	ldr	r7, [pc, #60]	; (80009c4 <StartTimeoutTask+0x48>)
	  }
	  if(sleep_timeout_value > 60 && sleep_timeout_value < 0)
		  sleep_timeout_value = 60;

	  // Toggle onboard LED as heartbeat visual feedback
	  HAL_GPIO_TogglePin(GPIOG, GPIO_PIN_13);
 8000986:	4e10      	ldr	r6, [pc, #64]	; (80009c8 <StartTimeoutTask+0x4c>)
	  sleep_timeout_value--;
 8000988:	6820      	ldr	r0, [r4, #0]
	  osMessageQueuePut(TimeoutQueueHandle, &sleep_timeout_value, 0, 0);
 800098a:	2300      	movs	r3, #0
 800098c:	461a      	mov	r2, r3
 800098e:	4621      	mov	r1, r4
	  sleep_timeout_value--;
 8000990:	1e45      	subs	r5, r0, #1
	  osMessageQueuePut(TimeoutQueueHandle, &sleep_timeout_value, 0, 0);
 8000992:	f8d8 0000 	ldr.w	r0, [r8]
	  sleep_timeout_value--;
 8000996:	6025      	str	r5, [r4, #0]
	  osMessageQueuePut(TimeoutQueueHandle, &sleep_timeout_value, 0, 0);
 8000998:	f00c fed2 	bl	800d740 <osMessageQueuePut>
	  if(sleep_timeout_value == 0)
 800099c:	6822      	ldr	r2, [r4, #0]
		  sleep_timeout_value = 60;
 800099e:	233c      	movs	r3, #60	; 0x3c
		  HAL_GPIO_WritePin(GPIOE, GPIO_PIN_5, GPIO_PIN_RESET);	//shut down device
 80009a0:	4638      	mov	r0, r7
 80009a2:	2120      	movs	r1, #32
	  if(sleep_timeout_value == 0)
 80009a4:	b912      	cbnz	r2, 80009ac <StartTimeoutTask+0x30>
		  sleep_timeout_value = 60;
 80009a6:	6023      	str	r3, [r4, #0]
		  HAL_GPIO_WritePin(GPIOE, GPIO_PIN_5, GPIO_PIN_RESET);	//shut down device
 80009a8:	f009 fa58 	bl	8009e5c <HAL_GPIO_WritePin>
	  HAL_GPIO_TogglePin(GPIOG, GPIO_PIN_13);
 80009ac:	4630      	mov	r0, r6
 80009ae:	f44f 5100 	mov.w	r1, #8192	; 0x2000
 80009b2:	f009 fa57 	bl	8009e64 <HAL_GPIO_TogglePin>

	  osDelay(1000);
 80009b6:	f44f 707a 	mov.w	r0, #1000	; 0x3e8
 80009ba:	f00c fdc5 	bl	800d548 <osDelay>
	  sleep_timeout_value--;
 80009be:	e7e3      	b.n	8000988 <StartTimeoutTask+0xc>
 80009c0:	2000000c 	.word	0x2000000c
 80009c4:	40021000 	.word	0x40021000
 80009c8:	40021800 	.word	0x40021800
 80009cc:	200001a0 	.word	0x200001a0

080009d0 <updateGUI_test>:
	return sleep_timeout_value;
 80009d0:	4b01      	ldr	r3, [pc, #4]	; (80009d8 <updateGUI_test+0x8>)
}
 80009d2:	6818      	ldr	r0, [r3, #0]
 80009d4:	4770      	bx	lr
 80009d6:	bf00      	nop
 80009d8:	2000000c 	.word	0x2000000c

080009dc <gyro_disable>:
{
 80009dc:	b5f0      	push	{r4, r5, r6, r7, lr}
 80009de:	b083      	sub	sp, #12
	__HAL_RCC_GPIOC_CLK_ENABLE();  // Enable Clock for GPIO port C
 80009e0:	4e1f      	ldr	r6, [pc, #124]	; (8000a60 <gyro_disable+0x84>)
	GPIOC->MODER &= ~GPIO_MODER_MODER1_Msk;        // Reset mode for PC1
 80009e2:	4d20      	ldr	r5, [pc, #128]	; (8000a64 <gyro_disable+0x88>)
	GPIOF->OSPEEDR &= ~GPIO_OSPEEDR_OSPEED8_Msk;  // Reset speed of PF8
 80009e4:	4c20      	ldr	r4, [pc, #128]	; (8000a68 <gyro_disable+0x8c>)
	__HAL_RCC_GPIOC_CLK_ENABLE();  // Enable Clock for GPIO port C
 80009e6:	2700      	movs	r7, #0
 80009e8:	9700      	str	r7, [sp, #0]
 80009ea:	6b33      	ldr	r3, [r6, #48]	; 0x30
 80009ec:	f043 0304 	orr.w	r3, r3, #4
 80009f0:	6333      	str	r3, [r6, #48]	; 0x30
 80009f2:	6b33      	ldr	r3, [r6, #48]	; 0x30
 80009f4:	f003 0304 	and.w	r3, r3, #4
 80009f8:	9300      	str	r3, [sp, #0]
 80009fa:	9b00      	ldr	r3, [sp, #0]
	GPIOC->MODER &= ~GPIO_MODER_MODER1_Msk;        // Reset mode for PC1
 80009fc:	682b      	ldr	r3, [r5, #0]
 80009fe:	f023 030c 	bic.w	r3, r3, #12
 8000a02:	602b      	str	r3, [r5, #0]
	GPIOC->MODER |= 1UL << GPIO_MODER_MODER1_Pos;  // Set PC1 as output
 8000a04:	682b      	ldr	r3, [r5, #0]
 8000a06:	f043 0304 	orr.w	r3, r3, #4
 8000a0a:	602b      	str	r3, [r5, #0]
	GPIOC->BSRR |= GPIO_BSRR_BR1;  // Set GYRO (CS) to 0 for a short time
 8000a0c:	69ab      	ldr	r3, [r5, #24]
 8000a0e:	f443 3300 	orr.w	r3, r3, #131072	; 0x20000
 8000a12:	61ab      	str	r3, [r5, #24]
	HAL_Delay(10);                 // Wait some time
 8000a14:	200a      	movs	r0, #10
 8000a16:	f008 fe4b 	bl	80096b0 <HAL_Delay>
	GPIOC->MODER |= 3UL << GPIO_MODER_MODER1_Pos;  // Analog PC1 = ADC123_IN11
 8000a1a:	682b      	ldr	r3, [r5, #0]
 8000a1c:	f043 030c 	orr.w	r3, r3, #12
 8000a20:	602b      	str	r3, [r5, #0]
	__HAL_RCC_GPIOF_CLK_ENABLE();  // Enable Clock for GPIO port F
 8000a22:	9701      	str	r7, [sp, #4]
 8000a24:	6b33      	ldr	r3, [r6, #48]	; 0x30
 8000a26:	f043 0320 	orr.w	r3, r3, #32
 8000a2a:	6333      	str	r3, [r6, #48]	; 0x30
 8000a2c:	6b33      	ldr	r3, [r6, #48]	; 0x30
 8000a2e:	f003 0320 	and.w	r3, r3, #32
 8000a32:	9301      	str	r3, [sp, #4]
 8000a34:	9b01      	ldr	r3, [sp, #4]
	GPIOF->OSPEEDR &= ~GPIO_OSPEEDR_OSPEED8_Msk;  // Reset speed of PF8
 8000a36:	68a3      	ldr	r3, [r4, #8]
 8000a38:	f423 3340 	bic.w	r3, r3, #196608	; 0x30000
 8000a3c:	60a3      	str	r3, [r4, #8]
	GPIOF->AFR[1] &= ~GPIO_AFRH_AFSEL8_Msk;  // Reset alternate function of PF8
 8000a3e:	6a63      	ldr	r3, [r4, #36]	; 0x24
 8000a40:	f023 030f 	bic.w	r3, r3, #15
 8000a44:	6263      	str	r3, [r4, #36]	; 0x24
	GPIOF->PUPDR &= ~GPIO_PUPDR_PUPD8_Msk;   // Reset pulup/down of PF8
 8000a46:	68e3      	ldr	r3, [r4, #12]
 8000a48:	f423 3340 	bic.w	r3, r3, #196608	; 0x30000
 8000a4c:	60e3      	str	r3, [r4, #12]
	HAL_Delay(10);                           // Wait some time
 8000a4e:	200a      	movs	r0, #10
 8000a50:	f008 fe2e 	bl	80096b0 <HAL_Delay>
	GPIOF->MODER |= 3UL << GPIO_MODER_MODER8_Pos;  // Analog mode PF8 = ADC3_IN4
 8000a54:	6823      	ldr	r3, [r4, #0]
 8000a56:	f443 3340 	orr.w	r3, r3, #196608	; 0x30000
 8000a5a:	6023      	str	r3, [r4, #0]
}
 8000a5c:	b003      	add	sp, #12
 8000a5e:	bdf0      	pop	{r4, r5, r6, r7, pc}
 8000a60:	40023800 	.word	0x40023800
 8000a64:	40020800 	.word	0x40020800
 8000a68:	40021400 	.word	0x40021400

08000a6c <setCalibrationFlashValues>:
{
 8000a6c:	e92d 43f8 	stmdb	sp!, {r3, r4, r5, r6, r7, r8, r9, lr}
 8000a70:	461c      	mov	r4, r3
	uint32_t Rx_Data[numberofwords];
 8000a72:	009b      	lsls	r3, r3, #2
 8000a74:	3307      	adds	r3, #7
 8000a76:	466d      	mov	r5, sp
 8000a78:	08db      	lsrs	r3, r3, #3
 8000a7a:	eba5 03c3 	sub.w	r3, r5, r3, lsl #3
{
 8000a7e:	af00      	add	r7, sp, #0
	uint32_t Rx_Data[numberofwords];
 8000a80:	469d      	mov	sp, r3
 8000a82:	466d      	mov	r5, sp
{
 8000a84:	4616      	mov	r6, r2
 8000a86:	4681      	mov	r9, r0
 8000a88:	4688      	mov	r8, r1
	Flash_Read_Data(StartSectorAddress, Rx_Data, numberofwords);
 8000a8a:	4622      	mov	r2, r4
 8000a8c:	4629      	mov	r1, r5
 8000a8e:	f7ff fedf 	bl	8000850 <Flash_Read_Data>
	Rx_Data[index] = value;
 8000a92:	f845 8026 	str.w	r8, [r5, r6, lsl #2]
	Flash_Write_Data(StartSectorAddress, data_addr, numberofwords);
 8000a96:	4622      	mov	r2, r4
 8000a98:	4629      	mov	r1, r5
 8000a9a:	4648      	mov	r0, r9
 8000a9c:	f7ff fe9e 	bl	80007dc <Flash_Write_Data>
}
 8000aa0:	46bd      	mov	sp, r7
 8000aa2:	e8bd 83f8 	ldmia.w	sp!, {r3, r4, r5, r6, r7, r8, r9, pc}
 8000aa6:	bf00      	nop

08000aa8 <SystemClock_Config>:
{
 8000aa8:	b530      	push	{r4, r5, lr}
  RCC_OscInitTypeDef RCC_OscInitStruct = {0};
 8000aaa:	2400      	movs	r4, #0
{
 8000aac:	b095      	sub	sp, #84	; 0x54
  RCC_OscInitTypeDef RCC_OscInitStruct = {0};
 8000aae:	e9cd 440a 	strd	r4, r4, [sp, #40]	; 0x28
 8000ab2:	e9cd 440c 	strd	r4, r4, [sp, #48]	; 0x30
  RCC_ClkInitTypeDef RCC_ClkInitStruct = {0};
 8000ab6:	e9cd 4403 	strd	r4, r4, [sp, #12]
 8000aba:	e9cd 4405 	strd	r4, r4, [sp, #20]
  __HAL_RCC_PWR_CLK_ENABLE();
 8000abe:	4a1e      	ldr	r2, [pc, #120]	; (8000b38 <SystemClock_Config+0x90>)
 8000ac0:	9401      	str	r4, [sp, #4]
  RCC_ClkInitTypeDef RCC_ClkInitStruct = {0};
 8000ac2:	9407      	str	r4, [sp, #28]
  __HAL_RCC_PWR_CLK_ENABLE();
 8000ac4:	6c11      	ldr	r1, [r2, #64]	; 0x40
  __HAL_PWR_VOLTAGESCALING_CONFIG(PWR_REGULATOR_VOLTAGE_SCALE1);
 8000ac6:	4b1d      	ldr	r3, [pc, #116]	; (8000b3c <SystemClock_Config+0x94>)
  __HAL_RCC_PWR_CLK_ENABLE();
 8000ac8:	f041 5180 	orr.w	r1, r1, #268435456	; 0x10000000
 8000acc:	6411      	str	r1, [r2, #64]	; 0x40
 8000ace:	6c12      	ldr	r2, [r2, #64]	; 0x40
 8000ad0:	f002 5280 	and.w	r2, r2, #268435456	; 0x10000000
 8000ad4:	9201      	str	r2, [sp, #4]
 8000ad6:	9a01      	ldr	r2, [sp, #4]
  __HAL_PWR_VOLTAGESCALING_CONFIG(PWR_REGULATOR_VOLTAGE_SCALE1);
 8000ad8:	9402      	str	r4, [sp, #8]
 8000ada:	681a      	ldr	r2, [r3, #0]
 8000adc:	f442 4240 	orr.w	r2, r2, #49152	; 0xc000
 8000ae0:	601a      	str	r2, [r3, #0]
 8000ae2:	681b      	ldr	r3, [r3, #0]
 8000ae4:	f403 4340 	and.w	r3, r3, #49152	; 0xc000
 8000ae8:	9302      	str	r3, [sp, #8]
  RCC_OscInitStruct.OscillatorType = RCC_OSCILLATORTYPE_HSE;
 8000aea:	2201      	movs	r2, #1
 8000aec:	f44f 3380 	mov.w	r3, #65536	; 0x10000
 8000af0:	e9cd 2308 	strd	r2, r3, [sp, #32]
  RCC_OscInitStruct.PLL.PLLM = 8;
 8000af4:	2308      	movs	r3, #8
  RCC_OscInitStruct.PLL.PLLState = RCC_PLL_ON;
 8000af6:	2502      	movs	r5, #2
  RCC_OscInitStruct.PLL.PLLM = 8;
 8000af8:	9310      	str	r3, [sp, #64]	; 0x40
  RCC_OscInitStruct.PLL.PLLSource = RCC_PLLSOURCE_HSE;
 8000afa:	f44f 0280 	mov.w	r2, #4194304	; 0x400000
  RCC_OscInitStruct.PLL.PLLN = 336;
 8000afe:	f44f 73a8 	mov.w	r3, #336	; 0x150
  RCC_OscInitStruct.PLL.PLLSource = RCC_PLLSOURCE_HSE;
 8000b02:	e9cd 520e 	strd	r5, r2, [sp, #56]	; 0x38
  RCC_OscInitStruct.PLL.PLLN = 336;
 8000b06:	9311      	str	r3, [sp, #68]	; 0x44
  RCC_OscInitStruct.PLL.PLLP = RCC_PLLP_DIV2;
 8000b08:	2202      	movs	r2, #2
 8000b0a:	2304      	movs	r3, #4
  if (HAL_RCC_OscConfig(&RCC_OscInitStruct) != HAL_OK)
 8000b0c:	a808      	add	r0, sp, #32
  RCC_OscInitStruct.PLL.PLLP = RCC_PLLP_DIV2;
 8000b0e:	e9cd 2312 	strd	r2, r3, [sp, #72]	; 0x48
  __HAL_PWR_VOLTAGESCALING_CONFIG(PWR_REGULATOR_VOLTAGE_SCALE1);
 8000b12:	9902      	ldr	r1, [sp, #8]
  if (HAL_RCC_OscConfig(&RCC_OscInitStruct) != HAL_OK)
 8000b14:	f00a ffe0 	bl	800bad8 <HAL_RCC_OscConfig>
  RCC_ClkInitStruct.ClockType = RCC_CLOCKTYPE_HCLK|RCC_CLOCKTYPE_SYSCLK
 8000b18:	230f      	movs	r3, #15
  RCC_ClkInitStruct.SYSCLKSource = RCC_SYSCLKSOURCE_PLLCLK;
 8000b1a:	e9cd 3503 	strd	r3, r5, [sp, #12]
  RCC_ClkInitStruct.APB1CLKDivider = RCC_HCLK_DIV4;
 8000b1e:	f44f 52a0 	mov.w	r2, #5120	; 0x1400
  RCC_ClkInitStruct.APB2CLKDivider = RCC_HCLK_DIV2;
 8000b22:	f44f 5380 	mov.w	r3, #4096	; 0x1000
  if (HAL_RCC_ClockConfig(&RCC_ClkInitStruct, FLASH_LATENCY_5) != HAL_OK)
 8000b26:	a803      	add	r0, sp, #12
 8000b28:	2105      	movs	r1, #5
  RCC_ClkInitStruct.APB1CLKDivider = RCC_HCLK_DIV4;
 8000b2a:	e9cd 4205 	strd	r4, r2, [sp, #20]
  RCC_ClkInitStruct.APB2CLKDivider = RCC_HCLK_DIV2;
 8000b2e:	9307      	str	r3, [sp, #28]
  if (HAL_RCC_ClockConfig(&RCC_ClkInitStruct, FLASH_LATENCY_5) != HAL_OK)
 8000b30:	f00b f9ea 	bl	800bf08 <HAL_RCC_ClockConfig>
}
 8000b34:	b015      	add	sp, #84	; 0x54
 8000b36:	bd30      	pop	{r4, r5, pc}
 8000b38:	40023800 	.word	0x40023800
 8000b3c:	40007000 	.word	0x40007000

08000b40 <main>:
{
 8000b40:	e92d 4880 	stmdb	sp!, {r7, fp, lr}
  GPIO_InitTypeDef GPIO_InitStruct = {0};
 8000b44:	2400      	movs	r4, #0
{
 8000b46:	b09d      	sub	sp, #116	; 0x74
  HAL_Init();
 8000b48:	f008 fd86 	bl	8009658 <HAL_Init>
  SystemClock_Config();
 8000b4c:	f7ff ffac 	bl	8000aa8 <SystemClock_Config>
  gyro_disable();
 8000b50:	f7ff ff44 	bl	80009dc <gyro_disable>
  GPIO_InitTypeDef GPIO_InitStruct = {0};
 8000b54:	e9cd 440f 	strd	r4, r4, [sp, #60]	; 0x3c
 8000b58:	e9cd 4411 	strd	r4, r4, [sp, #68]	; 0x44
  __HAL_RCC_GPIOE_CLK_ENABLE();
 8000b5c:	4bbe      	ldr	r3, [pc, #760]	; (8000e58 <main+0x318>)
 8000b5e:	9400      	str	r4, [sp, #0]
  GPIO_InitTypeDef GPIO_InitStruct = {0};
 8000b60:	9413      	str	r4, [sp, #76]	; 0x4c
  __HAL_RCC_GPIOE_CLK_ENABLE();
 8000b62:	6b19      	ldr	r1, [r3, #48]	; 0x30
  HAL_GPIO_WritePin(GPIOE, VSYNC_FREQ_Pin|FRAME_RATE_Pin, GPIO_PIN_RESET);
 8000b64:	48bd      	ldr	r0, [pc, #756]	; (8000e5c <main+0x31c>)
  hi2c3.Instance = I2C3;
 8000b66:	4dbe      	ldr	r5, [pc, #760]	; (8000e60 <main+0x320>)
  __HAL_RCC_GPIOE_CLK_ENABLE();
 8000b68:	f041 0110 	orr.w	r1, r1, #16
 8000b6c:	6319      	str	r1, [r3, #48]	; 0x30
 8000b6e:	6b19      	ldr	r1, [r3, #48]	; 0x30
 8000b70:	f001 0110 	and.w	r1, r1, #16
 8000b74:	9100      	str	r1, [sp, #0]
 8000b76:	9900      	ldr	r1, [sp, #0]
  __HAL_RCC_GPIOF_CLK_ENABLE();
 8000b78:	9401      	str	r4, [sp, #4]
 8000b7a:	6b19      	ldr	r1, [r3, #48]	; 0x30
 8000b7c:	f041 0120 	orr.w	r1, r1, #32
 8000b80:	6319      	str	r1, [r3, #48]	; 0x30
 8000b82:	6b19      	ldr	r1, [r3, #48]	; 0x30
 8000b84:	f001 0120 	and.w	r1, r1, #32
 8000b88:	9101      	str	r1, [sp, #4]
 8000b8a:	9901      	ldr	r1, [sp, #4]
  __HAL_RCC_GPIOH_CLK_ENABLE();
 8000b8c:	9402      	str	r4, [sp, #8]
 8000b8e:	6b19      	ldr	r1, [r3, #48]	; 0x30
 8000b90:	f041 0180 	orr.w	r1, r1, #128	; 0x80
 8000b94:	6319      	str	r1, [r3, #48]	; 0x30
 8000b96:	6b19      	ldr	r1, [r3, #48]	; 0x30
 8000b98:	f001 0180 	and.w	r1, r1, #128	; 0x80
 8000b9c:	9102      	str	r1, [sp, #8]
 8000b9e:	9902      	ldr	r1, [sp, #8]
  __HAL_RCC_GPIOC_CLK_ENABLE();
 8000ba0:	9403      	str	r4, [sp, #12]
 8000ba2:	6b19      	ldr	r1, [r3, #48]	; 0x30
 8000ba4:	f041 0104 	orr.w	r1, r1, #4
 8000ba8:	6319      	str	r1, [r3, #48]	; 0x30
 8000baa:	6b19      	ldr	r1, [r3, #48]	; 0x30
 8000bac:	f001 0104 	and.w	r1, r1, #4
 8000bb0:	9103      	str	r1, [sp, #12]
 8000bb2:	9903      	ldr	r1, [sp, #12]
  __HAL_RCC_GPIOA_CLK_ENABLE();
 8000bb4:	9404      	str	r4, [sp, #16]
 8000bb6:	6b19      	ldr	r1, [r3, #48]	; 0x30
 8000bb8:	f041 0101 	orr.w	r1, r1, #1
 8000bbc:	6319      	str	r1, [r3, #48]	; 0x30
 8000bbe:	6b19      	ldr	r1, [r3, #48]	; 0x30
 8000bc0:	f001 0101 	and.w	r1, r1, #1
 8000bc4:	9104      	str	r1, [sp, #16]
 8000bc6:	9904      	ldr	r1, [sp, #16]
  __HAL_RCC_GPIOB_CLK_ENABLE();
 8000bc8:	9405      	str	r4, [sp, #20]
 8000bca:	6b19      	ldr	r1, [r3, #48]	; 0x30
 8000bcc:	f041 0102 	orr.w	r1, r1, #2
 8000bd0:	6319      	str	r1, [r3, #48]	; 0x30
 8000bd2:	6b19      	ldr	r1, [r3, #48]	; 0x30
 8000bd4:	f001 0102 	and.w	r1, r1, #2
 8000bd8:	9105      	str	r1, [sp, #20]
 8000bda:	9905      	ldr	r1, [sp, #20]
  __HAL_RCC_GPIOG_CLK_ENABLE();
 8000bdc:	9406      	str	r4, [sp, #24]
 8000bde:	6b19      	ldr	r1, [r3, #48]	; 0x30
 8000be0:	f041 0140 	orr.w	r1, r1, #64	; 0x40
 8000be4:	6319      	str	r1, [r3, #48]	; 0x30
 8000be6:	6b19      	ldr	r1, [r3, #48]	; 0x30
 8000be8:	f001 0140 	and.w	r1, r1, #64	; 0x40
 8000bec:	9106      	str	r1, [sp, #24]
 8000bee:	9906      	ldr	r1, [sp, #24]
  __HAL_RCC_GPIOD_CLK_ENABLE();
 8000bf0:	9407      	str	r4, [sp, #28]
 8000bf2:	6b19      	ldr	r1, [r3, #48]	; 0x30
 8000bf4:	f041 0108 	orr.w	r1, r1, #8
 8000bf8:	6319      	str	r1, [r3, #48]	; 0x30
 8000bfa:	6b1b      	ldr	r3, [r3, #48]	; 0x30
 8000bfc:	f003 0308 	and.w	r3, r3, #8
  HAL_GPIO_WritePin(GPIOE, VSYNC_FREQ_Pin|FRAME_RATE_Pin, GPIO_PIN_RESET);
 8000c00:	4622      	mov	r2, r4
  __HAL_RCC_GPIOD_CLK_ENABLE();
 8000c02:	9307      	str	r3, [sp, #28]
  HAL_GPIO_WritePin(GPIOE, VSYNC_FREQ_Pin|FRAME_RATE_Pin, GPIO_PIN_RESET);
 8000c04:	2114      	movs	r1, #20
  __HAL_RCC_GPIOD_CLK_ENABLE();
 8000c06:	9b07      	ldr	r3, [sp, #28]
  HAL_GPIO_WritePin(GPIOE, VSYNC_FREQ_Pin|FRAME_RATE_Pin, GPIO_PIN_RESET);
 8000c08:	f009 f928 	bl	8009e5c <HAL_GPIO_WritePin>
  HAL_GPIO_WritePin(POWER_ON_DEVICE_GPIO_Port, POWER_ON_DEVICE_Pin, GPIO_PIN_SET);
 8000c0c:	4893      	ldr	r0, [pc, #588]	; (8000e5c <main+0x31c>)
 8000c0e:	2120      	movs	r1, #32
 8000c10:	2201      	movs	r2, #1
 8000c12:	f009 f923 	bl	8009e5c <HAL_GPIO_WritePin>
  HAL_GPIO_WritePin(GPIOC, GPIO_PIN_2|DEBUG_GPIO_Pin, GPIO_PIN_RESET);
 8000c16:	4893      	ldr	r0, [pc, #588]	; (8000e64 <main+0x324>)
 8000c18:	4622      	mov	r2, r4
 8000c1a:	2114      	movs	r1, #20
 8000c1c:	f009 f91e 	bl	8009e5c <HAL_GPIO_WritePin>
  HAL_GPIO_WritePin(DEBUG2_GPIO_GPIO_Port, DEBUG2_GPIO_Pin, GPIO_PIN_RESET);
 8000c20:	4891      	ldr	r0, [pc, #580]	; (8000e68 <main+0x328>)
 8000c22:	4622      	mov	r2, r4
 8000c24:	2180      	movs	r1, #128	; 0x80
 8000c26:	f009 f919 	bl	8009e5c <HAL_GPIO_WritePin>
  HAL_GPIO_WritePin(GPIOB, GPIO_PIN_12, GPIO_PIN_RESET);
 8000c2a:	4890      	ldr	r0, [pc, #576]	; (8000e6c <main+0x32c>)
 8000c2c:	4622      	mov	r2, r4
 8000c2e:	f44f 5180 	mov.w	r1, #4096	; 0x1000
 8000c32:	f009 f913 	bl	8009e5c <HAL_GPIO_WritePin>
  HAL_GPIO_WritePin(GPIOD, GPIO_PIN_12|GPIO_PIN_13, GPIO_PIN_RESET);
 8000c36:	488e      	ldr	r0, [pc, #568]	; (8000e70 <main+0x330>)
 8000c38:	4622      	mov	r2, r4
 8000c3a:	f44f 5140 	mov.w	r1, #12288	; 0x3000
 8000c3e:	f009 f90d 	bl	8009e5c <HAL_GPIO_WritePin>
  HAL_GPIO_WritePin(GPIOG, GPIO_PIN_2, GPIO_PIN_RESET);
 8000c42:	488c      	ldr	r0, [pc, #560]	; (8000e74 <main+0x334>)
 8000c44:	4622      	mov	r2, r4
 8000c46:	2104      	movs	r1, #4
 8000c48:	f009 f908 	bl	8009e5c <HAL_GPIO_WritePin>
  HAL_GPIO_WritePin(DEVICE_ON_GPIO_Port, DEVICE_ON_Pin, GPIO_PIN_SET);
 8000c4c:	2201      	movs	r2, #1
 8000c4e:	4889      	ldr	r0, [pc, #548]	; (8000e74 <main+0x334>)
 8000c50:	f44f 5100 	mov.w	r1, #8192	; 0x2000
 8000c54:	f009 f902 	bl	8009e5c <HAL_GPIO_WritePin>
  GPIO_InitStruct.Mode = GPIO_MODE_OUTPUT_PP;
 8000c58:	2601      	movs	r6, #1
  GPIO_InitStruct.Speed = GPIO_SPEED_FREQ_VERY_HIGH;
 8000c5a:	f04f 0b03 	mov.w	fp, #3
  GPIO_InitStruct.Pin = VSYNC_FREQ_Pin|FRAME_RATE_Pin;
 8000c5e:	2314      	movs	r3, #20
  HAL_GPIO_Init(GPIOE, &GPIO_InitStruct);
 8000c60:	487e      	ldr	r0, [pc, #504]	; (8000e5c <main+0x31c>)
 8000c62:	a90f      	add	r1, sp, #60	; 0x3c
  GPIO_InitStruct.Pin = DEVICE_ON_OFF_TRIGGER_Pin;
 8000c64:	f04f 0908 	mov.w	r9, #8
  GPIO_InitStruct.Mode = GPIO_MODE_OUTPUT_PP;
 8000c68:	e9cd 360f 	strd	r3, r6, [sp, #60]	; 0x3c
  GPIO_InitStruct.Speed = GPIO_SPEED_FREQ_VERY_HIGH;
 8000c6c:	e9cd 4b11 	strd	r4, fp, [sp, #68]	; 0x44
  HAL_GPIO_Init(GPIOE, &GPIO_InitStruct);
 8000c70:	f008 ffb0 	bl	8009bd4 <HAL_GPIO_Init>
  GPIO_InitStruct.Mode = GPIO_MODE_IT_RISING;
 8000c74:	f44f 1388 	mov.w	r3, #1114112	; 0x110000
  HAL_GPIO_Init(DEVICE_ON_OFF_TRIGGER_GPIO_Port, &GPIO_InitStruct);
 8000c78:	4878      	ldr	r0, [pc, #480]	; (8000e5c <main+0x31c>)
  GPIO_InitStruct.Pin = DEVICE_ON_OFF_TRIGGER_Pin;
 8000c7a:	f8cd 903c 	str.w	r9, [sp, #60]	; 0x3c
  HAL_GPIO_Init(DEVICE_ON_OFF_TRIGGER_GPIO_Port, &GPIO_InitStruct);
 8000c7e:	a90f      	add	r1, sp, #60	; 0x3c
  GPIO_InitStruct.Mode = GPIO_MODE_IT_RISING;
 8000c80:	9310      	str	r3, [sp, #64]	; 0x40
  GPIO_InitStruct.Pull = GPIO_NOPULL;
 8000c82:	9411      	str	r4, [sp, #68]	; 0x44
  HAL_GPIO_Init(DEVICE_ON_OFF_TRIGGER_GPIO_Port, &GPIO_InitStruct);
 8000c84:	f008 ffa6 	bl	8009bd4 <HAL_GPIO_Init>
  GPIO_InitStruct.Pin = POWER_ON_DEVICE_Pin;
 8000c88:	2320      	movs	r3, #32
  HAL_GPIO_Init(POWER_ON_DEVICE_GPIO_Port, &GPIO_InitStruct);
 8000c8a:	4874      	ldr	r0, [pc, #464]	; (8000e5c <main+0x31c>)
  GPIO_InitStruct.Pin = POWER_ON_DEVICE_Pin;
 8000c8c:	930f      	str	r3, [sp, #60]	; 0x3c
  HAL_GPIO_Init(POWER_ON_DEVICE_GPIO_Port, &GPIO_InitStruct);
 8000c8e:	a90f      	add	r1, sp, #60	; 0x3c
  GPIO_InitStruct.Speed = GPIO_SPEED_FREQ_HIGH;
 8000c90:	2702      	movs	r7, #2
  GPIO_InitStruct.Pin = GPIO_PIN_2;
 8000c92:	f04f 0a04 	mov.w	sl, #4
  GPIO_InitStruct.Pull = GPIO_NOPULL;
 8000c96:	e9cd 6410 	strd	r6, r4, [sp, #64]	; 0x40
  GPIO_InitStruct.Speed = GPIO_SPEED_FREQ_LOW;
 8000c9a:	9412      	str	r4, [sp, #72]	; 0x48
  HAL_GPIO_Init(POWER_ON_DEVICE_GPIO_Port, &GPIO_InitStruct);
 8000c9c:	f008 ff9a 	bl	8009bd4 <HAL_GPIO_Init>
  HAL_GPIO_Init(GPIOC, &GPIO_InitStruct);
 8000ca0:	4870      	ldr	r0, [pc, #448]	; (8000e64 <main+0x324>)
  GPIO_InitStruct.Pin = GPIO_PIN_2;
 8000ca2:	f8cd a03c 	str.w	sl, [sp, #60]	; 0x3c
  HAL_GPIO_Init(GPIOC, &GPIO_InitStruct);
 8000ca6:	a90f      	add	r1, sp, #60	; 0x3c
  GPIO_InitStruct.Pull = GPIO_NOPULL;
 8000ca8:	e9cd 6410 	strd	r6, r4, [sp, #64]	; 0x40
  GPIO_InitStruct.Speed = GPIO_SPEED_FREQ_HIGH;
 8000cac:	9712      	str	r7, [sp, #72]	; 0x48
  HAL_GPIO_Init(GPIOC, &GPIO_InitStruct);
 8000cae:	f008 ff91 	bl	8009bd4 <HAL_GPIO_Init>
  GPIO_InitStruct.Pin = DEBUG2_GPIO_Pin;
 8000cb2:	2380      	movs	r3, #128	; 0x80
  HAL_GPIO_Init(DEBUG2_GPIO_GPIO_Port, &GPIO_InitStruct);
 8000cb4:	486c      	ldr	r0, [pc, #432]	; (8000e68 <main+0x328>)
  GPIO_InitStruct.Pin = DEBUG2_GPIO_Pin;
 8000cb6:	930f      	str	r3, [sp, #60]	; 0x3c
  HAL_GPIO_Init(DEBUG2_GPIO_GPIO_Port, &GPIO_InitStruct);
 8000cb8:	a90f      	add	r1, sp, #60	; 0x3c
  GPIO_InitStruct.Pin = DEBUG_GPIO_Pin;
 8000cba:	f04f 0810 	mov.w	r8, #16
  GPIO_InitStruct.Pull = GPIO_NOPULL;
 8000cbe:	e9cd 6410 	strd	r6, r4, [sp, #64]	; 0x40
  GPIO_InitStruct.Speed = GPIO_SPEED_FREQ_LOW;
 8000cc2:	9412      	str	r4, [sp, #72]	; 0x48
  HAL_GPIO_Init(DEBUG2_GPIO_GPIO_Port, &GPIO_InitStruct);
 8000cc4:	f008 ff86 	bl	8009bd4 <HAL_GPIO_Init>
  HAL_GPIO_Init(DEBUG_GPIO_GPIO_Port, &GPIO_InitStruct);
 8000cc8:	4866      	ldr	r0, [pc, #408]	; (8000e64 <main+0x324>)
  GPIO_InitStruct.Speed = GPIO_SPEED_FREQ_LOW;
 8000cca:	9412      	str	r4, [sp, #72]	; 0x48
  HAL_GPIO_Init(DEBUG_GPIO_GPIO_Port, &GPIO_InitStruct);
 8000ccc:	a90f      	add	r1, sp, #60	; 0x3c
  GPIO_InitStruct.Pull = GPIO_NOPULL;
 8000cce:	e9cd 6410 	strd	r6, r4, [sp, #64]	; 0x40
  GPIO_InitStruct.Pin = DEBUG_GPIO_Pin;
 8000cd2:	f8cd 803c 	str.w	r8, [sp, #60]	; 0x3c
  HAL_GPIO_Init(DEBUG_GPIO_GPIO_Port, &GPIO_InitStruct);
 8000cd6:	f008 ff7d 	bl	8009bd4 <HAL_GPIO_Init>
  GPIO_InitStruct.Pin = GPIO_PIN_12;
 8000cda:	f44f 5380 	mov.w	r3, #4096	; 0x1000
  HAL_GPIO_Init(GPIOB, &GPIO_InitStruct);
 8000cde:	4863      	ldr	r0, [pc, #396]	; (8000e6c <main+0x32c>)
  GPIO_InitStruct.Pin = GPIO_PIN_12;
 8000ce0:	930f      	str	r3, [sp, #60]	; 0x3c
  HAL_GPIO_Init(GPIOB, &GPIO_InitStruct);
 8000ce2:	a90f      	add	r1, sp, #60	; 0x3c
  GPIO_InitStruct.Pull = GPIO_NOPULL;
 8000ce4:	e9cd 6410 	strd	r6, r4, [sp, #64]	; 0x40
  GPIO_InitStruct.Speed = GPIO_SPEED_FREQ_LOW;
 8000ce8:	9412      	str	r4, [sp, #72]	; 0x48
  HAL_GPIO_Init(GPIOB, &GPIO_InitStruct);
 8000cea:	f008 ff73 	bl	8009bd4 <HAL_GPIO_Init>
  GPIO_InitStruct.Pin = GPIO_PIN_12|GPIO_PIN_13;
 8000cee:	f44f 5240 	mov.w	r2, #12288	; 0x3000
  HAL_GPIO_Init(GPIOD, &GPIO_InitStruct);
 8000cf2:	485f      	ldr	r0, [pc, #380]	; (8000e70 <main+0x330>)
  GPIO_InitStruct.Pin = GPIO_PIN_12|GPIO_PIN_13;
 8000cf4:	920f      	str	r2, [sp, #60]	; 0x3c
  HAL_GPIO_Init(GPIOD, &GPIO_InitStruct);
 8000cf6:	a90f      	add	r1, sp, #60	; 0x3c
  GPIO_InitStruct.Pull = GPIO_NOPULL;
 8000cf8:	e9cd 6410 	strd	r6, r4, [sp, #64]	; 0x40
  GPIO_InitStruct.Speed = GPIO_SPEED_FREQ_HIGH;
 8000cfc:	9712      	str	r7, [sp, #72]	; 0x48
  HAL_GPIO_Init(GPIOD, &GPIO_InitStruct);
 8000cfe:	f008 ff69 	bl	8009bd4 <HAL_GPIO_Init>
  GPIO_InitStruct.Pin = GPIO_PIN_2|DEVICE_ON_Pin;
 8000d02:	f242 0204 	movw	r2, #8196	; 0x2004
  HAL_GPIO_Init(GPIOG, &GPIO_InitStruct);
 8000d06:	485b      	ldr	r0, [pc, #364]	; (8000e74 <main+0x334>)
  GPIO_InitStruct.Pin = GPIO_PIN_2|DEVICE_ON_Pin;
 8000d08:	920f      	str	r2, [sp, #60]	; 0x3c
  HAL_GPIO_Init(GPIOG, &GPIO_InitStruct);
 8000d0a:	a90f      	add	r1, sp, #60	; 0x3c
  GPIO_InitStruct.Pull = GPIO_NOPULL;
 8000d0c:	e9cd 6410 	strd	r6, r4, [sp, #64]	; 0x40
  GPIO_InitStruct.Speed = GPIO_SPEED_FREQ_LOW;
 8000d10:	9412      	str	r4, [sp, #72]	; 0x48
  HAL_GPIO_Init(GPIOG, &GPIO_InitStruct);
 8000d12:	f008 ff5f 	bl	8009bd4 <HAL_GPIO_Init>
  GPIO_InitStruct.Pin = GPIO_PIN_15;
 8000d16:	f44f 4200 	mov.w	r2, #32768	; 0x8000
  HAL_GPIO_Init(GPIOA, &GPIO_InitStruct);
 8000d1a:	4853      	ldr	r0, [pc, #332]	; (8000e68 <main+0x328>)
  GPIO_InitStruct.Pin = GPIO_PIN_15;
 8000d1c:	920f      	str	r2, [sp, #60]	; 0x3c
  HAL_GPIO_Init(GPIOA, &GPIO_InitStruct);
 8000d1e:	a90f      	add	r1, sp, #60	; 0x3c
  GPIO_InitStruct.Alternate = GPIO_AF15_EVENTOUT;
 8000d20:	220f      	movs	r2, #15
 8000d22:	9213      	str	r2, [sp, #76]	; 0x4c
  GPIO_InitStruct.Pull = GPIO_NOPULL;
 8000d24:	e9cd 7410 	strd	r7, r4, [sp, #64]	; 0x40
  GPIO_InitStruct.Speed = GPIO_SPEED_FREQ_LOW;
 8000d28:	9412      	str	r4, [sp, #72]	; 0x48
  HAL_GPIO_Init(GPIOA, &GPIO_InitStruct);
 8000d2a:	f008 ff53 	bl	8009bd4 <HAL_GPIO_Init>
  HAL_NVIC_SetPriority(EXTI3_IRQn, 5, 0);
 8000d2e:	2105      	movs	r1, #5
 8000d30:	4622      	mov	r2, r4
 8000d32:	2009      	movs	r0, #9
 8000d34:	f008 fce0 	bl	80096f8 <HAL_NVIC_SetPriority>
  HAL_NVIC_EnableIRQ(EXTI3_IRQn);
 8000d38:	2009      	movs	r0, #9
 8000d3a:	f008 fd1b 	bl	8009774 <HAL_NVIC_EnableIRQ>
  hcrc.Instance = CRC;
 8000d3e:	484e      	ldr	r0, [pc, #312]	; (8000e78 <main+0x338>)
 8000d40:	4a4e      	ldr	r2, [pc, #312]	; (8000e7c <main+0x33c>)
 8000d42:	6002      	str	r2, [r0, #0]
  if (HAL_CRC_Init(&hcrc) != HAL_OK)
 8000d44:	f008 fd24 	bl	8009790 <HAL_CRC_Init>
  hi2c3.Init.ClockSpeed = 100000;
 8000d48:	494d      	ldr	r1, [pc, #308]	; (8000e80 <main+0x340>)
 8000d4a:	4a4e      	ldr	r2, [pc, #312]	; (8000e84 <main+0x344>)
  if (HAL_I2C_Init(&hi2c3) != HAL_OK)
 8000d4c:	4628      	mov	r0, r5
  hi2c3.Init.ClockSpeed = 100000;
 8000d4e:	e9c5 1200 	strd	r1, r2, [r5]
  hi2c3.Init.AddressingMode = I2C_ADDRESSINGMODE_7BIT;
 8000d52:	f44f 4280 	mov.w	r2, #16384	; 0x4000
 8000d56:	612a      	str	r2, [r5, #16]
  hi2c3.Init.OwnAddress1 = 0;
 8000d58:	e9c5 4402 	strd	r4, r4, [r5, #8]
  hi2c3.Init.OwnAddress2 = 0;
 8000d5c:	e9c5 4405 	strd	r4, r4, [r5, #20]
  hi2c3.Init.NoStretchMode = I2C_NOSTRETCH_DISABLE;
 8000d60:	e9c5 4407 	strd	r4, r4, [r5, #28]
  if (HAL_I2C_Init(&hi2c3) != HAL_OK)
 8000d64:	f009 fae0 	bl	800a328 <HAL_I2C_Init>
  if (HAL_I2CEx_ConfigAnalogFilter(&hi2c3, I2C_ANALOGFILTER_DISABLE) != HAL_OK)
 8000d68:	4641      	mov	r1, r8
 8000d6a:	4628      	mov	r0, r5
 8000d6c:	f00a fca8 	bl	800b6c0 <HAL_I2CEx_ConfigAnalogFilter>
  if (HAL_I2CEx_ConfigDigitalFilter(&hi2c3, 0) != HAL_OK)
 8000d70:	4621      	mov	r1, r4
 8000d72:	4628      	mov	r0, r5
 8000d74:	f00a fcc4 	bl	800b700 <HAL_I2CEx_ConfigDigitalFilter>
  hspi5.Init.Mode = SPI_MODE_MASTER;
 8000d78:	f8df c11c 	ldr.w	ip, [pc, #284]	; 8000e98 <main+0x358>
  hspi5.Instance = SPI5;
 8000d7c:	4842      	ldr	r0, [pc, #264]	; (8000e88 <main+0x348>)
  hsdram1.Instance = FMC_SDRAM_DEVICE;
 8000d7e:	4d43      	ldr	r5, [pc, #268]	; (8000e8c <main+0x34c>)
  hspi5.Init.CRCCalculation = SPI_CRCCALCULATION_DISABLE;
 8000d80:	6284      	str	r4, [r0, #40]	; 0x28
  hspi5.Init.Mode = SPI_MODE_MASTER;
 8000d82:	f44f 7282 	mov.w	r2, #260	; 0x104
  hspi5.Init.BaudRatePrescaler = SPI_BAUDRATEPRESCALER_16;
 8000d86:	f44f 7e00 	mov.w	lr, #512	; 0x200
  hspi5.Init.Mode = SPI_MODE_MASTER;
 8000d8a:	e9c0 c200 	strd	ip, r2, [r0]
  hspi5.Init.BaudRatePrescaler = SPI_BAUDRATEPRESCALER_16;
 8000d8e:	2218      	movs	r2, #24
 8000d90:	e9c0 e206 	strd	lr, r2, [r0, #24]
  hspi5.Init.CRCPolynomial = 10;
 8000d94:	220a      	movs	r2, #10
 8000d96:	62c2      	str	r2, [r0, #44]	; 0x2c
  hspi5.Init.DataSize = SPI_DATASIZE_8BIT;
 8000d98:	e9c0 4402 	strd	r4, r4, [r0, #8]
  hspi5.Init.CLKPhase = SPI_PHASE_1EDGE;
 8000d9c:	e9c0 4404 	strd	r4, r4, [r0, #16]
  hspi5.Init.TIMode = SPI_TIMODE_DISABLE;
 8000da0:	e9c0 4408 	strd	r4, r4, [r0, #32]
  if (HAL_SPI_Init(&hspi5) != HAL_OK)
 8000da4:	f00b fb9e 	bl	800c4e4 <HAL_SPI_Init>
  SdramTiming.ExitSelfRefreshDelay = 7;
 8000da8:	2207      	movs	r2, #7
 8000daa:	9210      	str	r2, [sp, #64]	; 0x40
  SdramTiming.RowCycleDelay = 7;
 8000dac:	9212      	str	r2, [sp, #72]	; 0x48
  hsdram1.Instance = FMC_SDRAM_DEVICE;
 8000dae:	4a38      	ldr	r2, [pc, #224]	; (8000e90 <main+0x350>)
 8000db0:	602a      	str	r2, [r5, #0]
  hsdram1.Init.CASLatency = FMC_SDRAM_CAS_LATENCY_3;
 8000db2:	2040      	movs	r0, #64	; 0x40
 8000db4:	f44f 72c0 	mov.w	r2, #384	; 0x180
 8000db8:	e9c5 0205 	strd	r0, r2, [r5, #20]
  hsdram1.Init.SDClockPeriod = FMC_SDRAM_CLOCK_PERIOD_2;
 8000dbc:	f44f 6200 	mov.w	r2, #2048	; 0x800
 8000dc0:	622a      	str	r2, [r5, #32]
  if (HAL_SDRAM_Init(&hsdram1, &SdramTiming) != HAL_OK)
 8000dc2:	a90f      	add	r1, sp, #60	; 0x3c
  hsdram1.Init.ReadPipeDelay = FMC_SDRAM_RPIPE_DELAY_1;
 8000dc4:	f44f 5200 	mov.w	r2, #8192	; 0x2000
  if (HAL_SDRAM_Init(&hsdram1, &SdramTiming) != HAL_OK)
 8000dc8:	4628      	mov	r0, r5
  hsdram1.Init.ColumnBitsNumber = FMC_SDRAM_COLUMN_BITS_NUM_8;
 8000dca:	e9c5 6401 	strd	r6, r4, [r5, #4]
  hsdram1.Init.MemoryDataWidth = FMC_SDRAM_MEM_BUS_WIDTH_16;
 8000dce:	e9c5 a803 	strd	sl, r8, [r5, #12]
  hsdram1.Init.ReadPipeDelay = FMC_SDRAM_RPIPE_DELAY_1;
 8000dd2:	62aa      	str	r2, [r5, #40]	; 0x28
  SdramTiming.RPDelay = 2;
 8000dd4:	e9cd b713 	strd	fp, r7, [sp, #76]	; 0x4c
  hsdram1.Init.WriteProtection = FMC_SDRAM_WRITE_PROTECTION_DISABLE;
 8000dd8:	61ec      	str	r4, [r5, #28]
  hsdram1.Init.ReadBurst = FMC_SDRAM_RBURST_DISABLE;
 8000dda:	626c      	str	r4, [r5, #36]	; 0x24
  SdramTiming.SelfRefreshTime = 4;
 8000ddc:	f8cd a044 	str.w	sl, [sp, #68]	; 0x44
  SdramTiming.LoadToActiveDelay = 2;
 8000de0:	970f      	str	r7, [sp, #60]	; 0x3c
  SdramTiming.RCDDelay = 2;
 8000de2:	9715      	str	r7, [sp, #84]	; 0x54
  if (HAL_SDRAM_Init(&hsdram1, &SdramTiming) != HAL_OK)
 8000de4:	f00b fa8c 	bl	800c300 <HAL_SDRAM_Init>
  HAL_SDRAM_SendCommand(hsdram, Command, SDRAM_TIMEOUT);
 8000de8:	f64f 72ff 	movw	r2, #65535	; 0xffff
 8000dec:	a90b      	add	r1, sp, #44	; 0x2c
 8000dee:	4628      	mov	r0, r5
  Command->CommandTarget           = FMC_SDRAM_CMD_TARGET_BANK2;
 8000df0:	e9cd 690b 	strd	r6, r9, [sp, #44]	; 0x2c
  Command->ModeRegisterDefinition  = 0;
 8000df4:	e9cd 640d 	strd	r6, r4, [sp, #52]	; 0x34
 __IO uint32_t tmpmrd =0;
 8000df8:	9408      	str	r4, [sp, #32]
  HAL_SDRAM_SendCommand(hsdram, Command, SDRAM_TIMEOUT);
 8000dfa:	f00b faa3 	bl	800c344 <HAL_SDRAM_SendCommand>
  HAL_Delay(1);
 8000dfe:	4630      	mov	r0, r6
 8000e00:	f008 fc56 	bl	80096b0 <HAL_Delay>
  HAL_SDRAM_SendCommand(hsdram, Command, SDRAM_TIMEOUT);
 8000e04:	f64f 72ff 	movw	r2, #65535	; 0xffff
 8000e08:	a90b      	add	r1, sp, #44	; 0x2c
 8000e0a:	4628      	mov	r0, r5
  Command->CommandTarget           = FMC_SDRAM_CMD_TARGET_BANK2;
 8000e0c:	e9cd 790b 	strd	r7, r9, [sp, #44]	; 0x2c
  Command->ModeRegisterDefinition  = 0;
 8000e10:	e9cd 640d 	strd	r6, r4, [sp, #52]	; 0x34
  HAL_SDRAM_SendCommand(hsdram, Command, SDRAM_TIMEOUT);
 8000e14:	f00b fa96 	bl	800c344 <HAL_SDRAM_SendCommand>
  HAL_SDRAM_SendCommand(hsdram, Command, SDRAM_TIMEOUT);
 8000e18:	f64f 72ff 	movw	r2, #65535	; 0xffff
 8000e1c:	a90b      	add	r1, sp, #44	; 0x2c
 8000e1e:	4628      	mov	r0, r5
  Command->CommandTarget           = FMC_SDRAM_CMD_TARGET_BANK2;
 8000e20:	e9cd b90b 	strd	fp, r9, [sp, #44]	; 0x2c
  Command->ModeRegisterDefinition  = 0;
 8000e24:	e9cd a40d 	strd	sl, r4, [sp, #52]	; 0x34
  HAL_SDRAM_SendCommand(hsdram, Command, SDRAM_TIMEOUT);
 8000e28:	f00b fa8c 	bl	800c344 <HAL_SDRAM_SendCommand>
  tmpmrd = (uint32_t)SDRAM_MODEREG_BURST_LENGTH_1          |
 8000e2c:	f44f 720c 	mov.w	r2, #560	; 0x230
 8000e30:	9208      	str	r2, [sp, #32]
  Command->ModeRegisterDefinition  = tmpmrd;
 8000e32:	9908      	ldr	r1, [sp, #32]
 8000e34:	910e      	str	r1, [sp, #56]	; 0x38
  HAL_SDRAM_SendCommand(hsdram, Command, SDRAM_TIMEOUT);
 8000e36:	f64f 72ff 	movw	r2, #65535	; 0xffff
 8000e3a:	a90b      	add	r1, sp, #44	; 0x2c
 8000e3c:	4628      	mov	r0, r5
  Command->CommandTarget           = FMC_SDRAM_CMD_TARGET_BANK2;
 8000e3e:	e9cd a90b 	strd	sl, r9, [sp, #44]	; 0x2c
  Command->AutoRefreshNumber       = 1;
 8000e42:	960d      	str	r6, [sp, #52]	; 0x34
  HAL_SDRAM_SendCommand(hsdram, Command, SDRAM_TIMEOUT);
 8000e44:	f00b fa7e 	bl	800c344 <HAL_SDRAM_SendCommand>
  HAL_SDRAM_ProgramRefreshRate(hsdram, REFRESH_COUNT);
 8000e48:	4628      	mov	r0, r5
 8000e4a:	f240 516a 	movw	r1, #1386	; 0x56a
  hltdc.Instance = LTDC;
 8000e4e:	4d11      	ldr	r5, [pc, #68]	; (8000e94 <main+0x354>)
  HAL_SDRAM_ProgramRefreshRate(hsdram, REFRESH_COUNT);
 8000e50:	f00b fa96 	bl	800c380 <HAL_SDRAM_ProgramRefreshRate>
  LTDC_LayerCfgTypeDef pLayerCfg = {0};
 8000e54:	4621      	mov	r1, r4
 8000e56:	e021      	b.n	8000e9c <main+0x35c>
 8000e58:	40023800 	.word	0x40023800
 8000e5c:	40021000 	.word	0x40021000
 8000e60:	200001b4 	.word	0x200001b4
 8000e64:	40020800 	.word	0x40020800
 8000e68:	40020000 	.word	0x40020000
 8000e6c:	40020400 	.word	0x40020400
 8000e70:	40020c00 	.word	0x40020c00
 8000e74:	40021800 	.word	0x40021800
 8000e78:	200001ac 	.word	0x200001ac
 8000e7c:	40023000 	.word	0x40023000
 8000e80:	40005c00 	.word	0x40005c00
 8000e84:	000186a0 	.word	0x000186a0
 8000e88:	200002e4 	.word	0x200002e4
 8000e8c:	200002b0 	.word	0x200002b0
 8000e90:	a0000140 	.word	0xa0000140
 8000e94:	20000208 	.word	0x20000208
 8000e98:	40015000 	.word	0x40015000
 8000e9c:	2234      	movs	r2, #52	; 0x34
 8000e9e:	a80f      	add	r0, sp, #60	; 0x3c
 8000ea0:	f02a fc63 	bl	802b76a <memset>
  hltdc.Instance = LTDC;
 8000ea4:	4a6f      	ldr	r2, [pc, #444]	; (8001064 <main+0x524>)
 8000ea6:	602a      	str	r2, [r5, #0]
  hltdc.Init.AccumulatedHBP = 29;
 8000ea8:	221d      	movs	r2, #29
  hltdc.Init.AccumulatedVBP = 3;
 8000eaa:	f8c5 b020 	str.w	fp, [r5, #32]
  hltdc.Init.AccumulatedHBP = 29;
 8000eae:	61ea      	str	r2, [r5, #28]
  hltdc.Init.AccumulatedActiveH = 323;
 8000eb0:	f240 1b0d 	movw	fp, #269	; 0x10d
 8000eb4:	f240 1243 	movw	r2, #323	; 0x143
  hltdc.Init.TotalHeigh = 327;
 8000eb8:	f240 1317 	movw	r3, #279	; 0x117
  hltdc.Init.AccumulatedActiveH = 323;
 8000ebc:	e9c5 b209 	strd	fp, r2, [r5, #36]	; 0x24
  hltdc.Init.Backcolor.Blue = 0;
 8000ec0:	86ac      	strh	r4, [r5, #52]	; 0x34
  hltdc.Init.TotalHeigh = 327;
 8000ec2:	f240 1247 	movw	r2, #327	; 0x147
  hltdc.Init.HorizontalSync = 9;
 8000ec6:	f04f 0909 	mov.w	r9, #9
  if (HAL_LTDC_Init(&hltdc) != HAL_OK)
 8000eca:	4628      	mov	r0, r5
  hltdc.Init.TotalHeigh = 327;
 8000ecc:	e9c5 320b 	strd	r3, r2, [r5, #44]	; 0x2c
  hltdc.Init.VerticalSync = 1;
 8000ed0:	61ae      	str	r6, [r5, #24]
  hltdc.Init.VSPolarity = LTDC_VSPOLARITY_AL;
 8000ed2:	e9c5 4401 	strd	r4, r4, [r5, #4]
  hltdc.Init.PCPolarity = LTDC_PCPOLARITY_IPC;
 8000ed6:	e9c5 4403 	strd	r4, r4, [r5, #12]
  hltdc.Init.Backcolor.Red = 0;
 8000eda:	f885 4036 	strb.w	r4, [r5, #54]	; 0x36
  hltdc.Init.HorizontalSync = 9;
 8000ede:	f8c5 9014 	str.w	r9, [r5, #20]
  if (HAL_LTDC_Init(&hltdc) != HAL_OK)
 8000ee2:	f00a fc31 	bl	800b748 <HAL_LTDC_Init>
  if (HAL_LTDC_ConfigLayer(&hltdc, &pLayerCfg, 0) != HAL_OK)
 8000ee6:	4628      	mov	r0, r5
  pLayerCfg.WindowX1 = 240;
 8000ee8:	25f0      	movs	r5, #240	; 0xf0
 8000eea:	9510      	str	r5, [sp, #64]	; 0x40
  pLayerCfg.ImageWidth = 240;
 8000eec:	9519      	str	r5, [sp, #100]	; 0x64
  pLayerCfg.WindowY1 = 320;
 8000eee:	f44f 75a0 	mov.w	r5, #320	; 0x140
 8000ef2:	9512      	str	r5, [sp, #72]	; 0x48
  pLayerCfg.ImageHeight = 320;
 8000ef4:	951a      	str	r5, [sp, #104]	; 0x68
  pLayerCfg.Alpha = 255;
 8000ef6:	25ff      	movs	r5, #255	; 0xff
  pLayerCfg.BlendingFactor2 = LTDC_BLENDING_FACTOR2_CA;
 8000ef8:	f44f 6c80 	mov.w	ip, #1024	; 0x400
  if (HAL_LTDC_ConfigLayer(&hltdc, &pLayerCfg, 0) != HAL_OK)
 8000efc:	a90f      	add	r1, sp, #60	; 0x3c
 8000efe:	4622      	mov	r2, r4
  pLayerCfg.Alpha = 255;
 8000f00:	9514      	str	r5, [sp, #80]	; 0x50
  pLayerCfg.BlendingFactor2 = LTDC_BLENDING_FACTOR2_CA;
 8000f02:	2505      	movs	r5, #5
 8000f04:	e9cd c516 	strd	ip, r5, [sp, #88]	; 0x58
  pLayerCfg.WindowX0 = 0;
 8000f08:	940f      	str	r4, [sp, #60]	; 0x3c
  LcdDrv = &ili9341_drv;
 8000f0a:	4d57      	ldr	r5, [pc, #348]	; (8001068 <main+0x528>)
  pLayerCfg.WindowY0 = 0;
 8000f0c:	9411      	str	r4, [sp, #68]	; 0x44
  pLayerCfg.PixelFormat = LTDC_PIXEL_FORMAT_RGB565;
 8000f0e:	9713      	str	r7, [sp, #76]	; 0x4c
  pLayerCfg.Alpha0 = 0;
 8000f10:	9415      	str	r4, [sp, #84]	; 0x54
  pLayerCfg.FBStartAdress = 0;
 8000f12:	9418      	str	r4, [sp, #96]	; 0x60
  pLayerCfg.Backcolor.Blue = 0;
 8000f14:	f8ad 406c 	strh.w	r4, [sp, #108]	; 0x6c
  pLayerCfg.Backcolor.Red = 0;
 8000f18:	f88d 406e 	strb.w	r4, [sp, #110]	; 0x6e
  if (HAL_LTDC_ConfigLayer(&hltdc, &pLayerCfg, 0) != HAL_OK)
 8000f1c:	f00a fcea 	bl	800b8f4 <HAL_LTDC_ConfigLayer>
  LcdDrv = &ili9341_drv;
 8000f20:	4a52      	ldr	r2, [pc, #328]	; (800106c <main+0x52c>)
 8000f22:	602a      	str	r2, [r5, #0]
  LcdDrv->Init();
 8000f24:	6812      	ldr	r2, [r2, #0]
  htim1.Instance = TIM1;
 8000f26:	4e52      	ldr	r6, [pc, #328]	; (8001070 <main+0x530>)
  LcdDrv->Init();
 8000f28:	4790      	blx	r2
  LcdDrv->DisplayOff();
 8000f2a:	682a      	ldr	r2, [r5, #0]
  htim3.Instance = TIM3;
 8000f2c:	4d51      	ldr	r5, [pc, #324]	; (8001074 <main+0x534>)
  LcdDrv->DisplayOff();
 8000f2e:	68d2      	ldr	r2, [r2, #12]
 8000f30:	4790      	blx	r2
  htim1.Init.Period = 65535;
 8000f32:	f64f 7aff 	movw	sl, #65535	; 0xffff
  htim1.Instance = TIM1;
 8000f36:	4a50      	ldr	r2, [pc, #320]	; (8001078 <main+0x538>)
 8000f38:	6032      	str	r2, [r6, #0]
  if (HAL_TIM_Base_Init(&htim1) != HAL_OK)
 8000f3a:	4630      	mov	r0, r6
  htim1.Init.CounterMode = TIM_COUNTERMODE_UP;
 8000f3c:	e9c6 4401 	strd	r4, r4, [r6, #4]
  htim1.Init.RepetitionCounter = 0;
 8000f40:	e9c6 4404 	strd	r4, r4, [r6, #16]
  htim1.Init.AutoReloadPreload = TIM_AUTORELOAD_PRELOAD_DISABLE;
 8000f44:	61b4      	str	r4, [r6, #24]
  htim1.Init.Period = 65535;
 8000f46:	f8c6 a00c 	str.w	sl, [r6, #12]
  TIM_SlaveConfigTypeDef sSlaveConfig = {0};
 8000f4a:	e9cd 440f 	strd	r4, r4, [sp, #60]	; 0x3c
 8000f4e:	e9cd 4411 	strd	r4, r4, [sp, #68]	; 0x44
  TIM_MasterConfigTypeDef sMasterConfig = {0};
 8000f52:	e9cd 440b 	strd	r4, r4, [sp, #44]	; 0x2c
  TIM_SlaveConfigTypeDef sSlaveConfig = {0};
 8000f56:	9413      	str	r4, [sp, #76]	; 0x4c
  if (HAL_TIM_Base_Init(&htim1) != HAL_OK)
 8000f58:	f00b feb4 	bl	800ccc4 <HAL_TIM_Base_Init>
  if (HAL_TIM_SlaveConfigSynchro(&htim1, &sSlaveConfig) != HAL_OK)
 8000f5c:	a90f      	add	r1, sp, #60	; 0x3c
 8000f5e:	4630      	mov	r0, r6
  sSlaveConfig.InputTrigger = TIM_TS_ITR0;
 8000f60:	e9cd 440f 	strd	r4, r4, [sp, #60]	; 0x3c
  if (HAL_TIM_SlaveConfigSynchro(&htim1, &sSlaveConfig) != HAL_OK)
 8000f64:	f00c f828 	bl	800cfb8 <HAL_TIM_SlaveConfigSynchro>
  if (HAL_TIMEx_MasterConfigSynchronization(&htim1, &sMasterConfig) != HAL_OK)
 8000f68:	a90b      	add	r1, sp, #44	; 0x2c
 8000f6a:	4630      	mov	r0, r6
  sMasterConfig.MasterSlaveMode = TIM_MASTERSLAVEMODE_DISABLE;
 8000f6c:	e9cd 440b 	strd	r4, r4, [sp, #44]	; 0x2c
  if (HAL_TIMEx_MasterConfigSynchronization(&htim1, &sMasterConfig) != HAL_OK)
 8000f70:	f00c f960 	bl	800d234 <HAL_TIMEx_MasterConfigSynchronization>
  htim3.Instance = TIM3;
 8000f74:	4a41      	ldr	r2, [pc, #260]	; (800107c <main+0x53c>)
 8000f76:	602a      	str	r2, [r5, #0]
  if (HAL_TIM_Base_Init(&htim3) != HAL_OK)
 8000f78:	4628      	mov	r0, r5
  htim3.Init.CounterMode = TIM_COUNTERMODE_UP;
 8000f7a:	e9c5 4401 	strd	r4, r4, [r5, #4]
  htim3.Init.Period = 65535;
 8000f7e:	f8c5 a00c 	str.w	sl, [r5, #12]
  htim3.Init.ClockDivision = TIM_CLOCKDIVISION_DIV1;
 8000f82:	612c      	str	r4, [r5, #16]
  htim3.Init.AutoReloadPreload = TIM_AUTORELOAD_PRELOAD_DISABLE;
 8000f84:	61ac      	str	r4, [r5, #24]
  TIM_ClockConfigTypeDef sClockSourceConfig = {0};
 8000f86:	e9cd 440b 	strd	r4, r4, [sp, #44]	; 0x2c
 8000f8a:	e9cd 440d 	strd	r4, r4, [sp, #52]	; 0x34
  TIM_SlaveConfigTypeDef sSlaveConfig = {0};
 8000f8e:	e9cd 440f 	strd	r4, r4, [sp, #60]	; 0x3c
 8000f92:	e9cd 4411 	strd	r4, r4, [sp, #68]	; 0x44
 8000f96:	9413      	str	r4, [sp, #76]	; 0x4c
  TIM_MasterConfigTypeDef sMasterConfig = {0};
 8000f98:	9409      	str	r4, [sp, #36]	; 0x24
 8000f9a:	940a      	str	r4, [sp, #40]	; 0x28
  if (HAL_TIM_Base_Init(&htim3) != HAL_OK)
 8000f9c:	f00b fe92 	bl	800ccc4 <HAL_TIM_Base_Init>
  sClockSourceConfig.ClockSource = TIM_CLOCKSOURCE_INTERNAL;
 8000fa0:	f44f 5380 	mov.w	r3, #4096	; 0x1000
  if (HAL_TIM_ConfigClockSource(&htim3, &sClockSourceConfig) != HAL_OK)
 8000fa4:	a90b      	add	r1, sp, #44	; 0x2c
 8000fa6:	4628      	mov	r0, r5
  htim2.Instance = TIM2;
 8000fa8:	4e35      	ldr	r6, [pc, #212]	; (8001080 <main+0x540>)
  sClockSourceConfig.ClockSource = TIM_CLOCKSOURCE_INTERNAL;
 8000faa:	930b      	str	r3, [sp, #44]	; 0x2c
  if (HAL_TIM_ConfigClockSource(&htim3, &sClockSourceConfig) != HAL_OK)
 8000fac:	f00b ff54 	bl	800ce58 <HAL_TIM_ConfigClockSource>
  if (HAL_TIM_SlaveConfigSynchro(&htim3, &sSlaveConfig) != HAL_OK)
 8000fb0:	a90f      	add	r1, sp, #60	; 0x3c
 8000fb2:	4628      	mov	r0, r5
  sSlaveConfig.InputTrigger = TIM_TS_ITR0;
 8000fb4:	e9cd 440f 	strd	r4, r4, [sp, #60]	; 0x3c
  if (HAL_TIM_SlaveConfigSynchro(&htim3, &sSlaveConfig) != HAL_OK)
 8000fb8:	f00b fffe 	bl	800cfb8 <HAL_TIM_SlaveConfigSynchro>
  if (HAL_TIMEx_MasterConfigSynchronization(&htim3, &sMasterConfig) != HAL_OK)
 8000fbc:	a909      	add	r1, sp, #36	; 0x24
 8000fbe:	4628      	mov	r0, r5
  sMasterConfig.MasterSlaveMode = TIM_MASTERSLAVEMODE_DISABLE;
 8000fc0:	e9cd 4409 	strd	r4, r4, [sp, #36]	; 0x24
  if (HAL_TIMEx_MasterConfigSynchronization(&htim3, &sMasterConfig) != HAL_OK)
 8000fc4:	f00c f936 	bl	800d234 <HAL_TIMEx_MasterConfigSynchronization>
  htim2.Init.Prescaler = 13124;
 8000fc8:	f04f 4e80 	mov.w	lr, #1073741824	; 0x40000000
 8000fcc:	f243 3244 	movw	r2, #13124	; 0x3344
  htim2.Init.AutoReloadPreload = TIM_AUTORELOAD_PRELOAD_ENABLE;
 8000fd0:	2380      	movs	r3, #128	; 0x80
  if (HAL_TIM_Base_Init(&htim2) != HAL_OK)
 8000fd2:	4630      	mov	r0, r6
  htim2.Init.Prescaler = 13124;
 8000fd4:	e9c6 e200 	strd	lr, r2, [r6]
  htim2.Init.AutoReloadPreload = TIM_AUTORELOAD_PRELOAD_ENABLE;
 8000fd8:	61b3      	str	r3, [r6, #24]
  TIM_ClockConfigTypeDef sClockSourceConfig = {0};
 8000fda:	e9cd 440f 	strd	r4, r4, [sp, #60]	; 0x3c
 8000fde:	e9cd 4411 	strd	r4, r4, [sp, #68]	; 0x44
  TIM_MasterConfigTypeDef sMasterConfig = {0};
 8000fe2:	e9cd 440b 	strd	r4, r4, [sp, #44]	; 0x2c
  htim2.Init.Period = 9;
 8000fe6:	f8c6 900c 	str.w	r9, [r6, #12]
  htim2.Init.CounterMode = TIM_COUNTERMODE_UP;
 8000fea:	60b4      	str	r4, [r6, #8]
  htim2.Init.ClockDivision = TIM_CLOCKDIVISION_DIV1;
 8000fec:	6134      	str	r4, [r6, #16]
  if (HAL_TIM_Base_Init(&htim2) != HAL_OK)
 8000fee:	f00b fe69 	bl	800ccc4 <HAL_TIM_Base_Init>
  sClockSourceConfig.ClockSource = TIM_CLOCKSOURCE_INTERNAL;
 8000ff2:	f44f 5380 	mov.w	r3, #4096	; 0x1000
  if (HAL_TIM_ConfigClockSource(&htim2, &sClockSourceConfig) != HAL_OK)
 8000ff6:	a90f      	add	r1, sp, #60	; 0x3c
 8000ff8:	4630      	mov	r0, r6
  sClockSourceConfig.ClockSource = TIM_CLOCKSOURCE_INTERNAL;
 8000ffa:	930f      	str	r3, [sp, #60]	; 0x3c
  if (HAL_TIM_ConfigClockSource(&htim2, &sClockSourceConfig) != HAL_OK)
 8000ffc:	f00b ff2c 	bl	800ce58 <HAL_TIM_ConfigClockSource>
  if (HAL_TIMEx_MasterConfigSynchronization(&htim2, &sMasterConfig) != HAL_OK)
 8001000:	a90b      	add	r1, sp, #44	; 0x2c
 8001002:	4630      	mov	r0, r6
  sMasterConfig.MasterSlaveMode = TIM_MASTERSLAVEMODE_DISABLE;
 8001004:	e9cd 840b 	strd	r8, r4, [sp, #44]	; 0x2c
  if (HAL_TIMEx_MasterConfigSynchronization(&htim2, &sMasterConfig) != HAL_OK)
 8001008:	f00c f914 	bl	800d234 <HAL_TIMEx_MasterConfigSynchronization>
  MX_TouchGFX_Init();
 800100c:	f000 fdf0 	bl	8001bf0 <MX_TouchGFX_Init>
  MX_TouchGFX_PreOSInit();
 8001010:	f000 fdec 	bl	8001bec <MX_TouchGFX_PreOSInit>
  gyro_disable();
 8001014:	f7ff fce2 	bl	80009dc <gyro_disable>
  MEAS_GPIO_analog_init();         // Configure GPIOs in analog mode
 8001018:	f000 f94c 	bl	80012b4 <MEAS_GPIO_analog_init>
  MEAS_timer_init();               // Configure the timer
 800101c:	f000 f97e 	bl	800131c <MEAS_timer_init>
  osKernelInitialize();
 8001020:	f00c fa1a 	bl	800d458 <osKernelInitialize>
  TimeoutQueueHandle = osMessageQueueNew (16, sizeof(uint16_t), &TimeoutQueue_attributes);
 8001024:	4a17      	ldr	r2, [pc, #92]	; (8001084 <main+0x544>)
 8001026:	4639      	mov	r1, r7
 8001028:	4640      	mov	r0, r8
 800102a:	f00c fb4f 	bl	800d6cc <osMessageQueueNew>
 800102e:	4b16      	ldr	r3, [pc, #88]	; (8001088 <main+0x548>)
  defaultTaskHandle = osThreadNew(StartDefaultTask, NULL, &defaultTask_attributes);
 8001030:	4a16      	ldr	r2, [pc, #88]	; (800108c <main+0x54c>)
  TimeoutQueueHandle = osMessageQueueNew (16, sizeof(uint16_t), &TimeoutQueue_attributes);
 8001032:	6018      	str	r0, [r3, #0]
  defaultTaskHandle = osThreadNew(StartDefaultTask, NULL, &defaultTask_attributes);
 8001034:	4621      	mov	r1, r4
 8001036:	4816      	ldr	r0, [pc, #88]	; (8001090 <main+0x550>)
 8001038:	f00c fa3a 	bl	800d4b0 <osThreadNew>
 800103c:	4b15      	ldr	r3, [pc, #84]	; (8001094 <main+0x554>)
  GUI_TaskHandle = osThreadNew(TouchGFX_Task, NULL, &GUI_Task_attributes);
 800103e:	4a16      	ldr	r2, [pc, #88]	; (8001098 <main+0x558>)
  defaultTaskHandle = osThreadNew(StartDefaultTask, NULL, &defaultTask_attributes);
 8001040:	6018      	str	r0, [r3, #0]
  GUI_TaskHandle = osThreadNew(TouchGFX_Task, NULL, &GUI_Task_attributes);
 8001042:	4621      	mov	r1, r4
 8001044:	4815      	ldr	r0, [pc, #84]	; (800109c <main+0x55c>)
 8001046:	f00c fa33 	bl	800d4b0 <osThreadNew>
 800104a:	4b15      	ldr	r3, [pc, #84]	; (80010a0 <main+0x560>)
  TimeoutTaskHandle = osThreadNew(StartTimeoutTask, NULL, &TimeoutTask_attributes);
 800104c:	4a15      	ldr	r2, [pc, #84]	; (80010a4 <main+0x564>)
  GUI_TaskHandle = osThreadNew(TouchGFX_Task, NULL, &GUI_Task_attributes);
 800104e:	4605      	mov	r5, r0
  TimeoutTaskHandle = osThreadNew(StartTimeoutTask, NULL, &TimeoutTask_attributes);
 8001050:	4621      	mov	r1, r4
 8001052:	4815      	ldr	r0, [pc, #84]	; (80010a8 <main+0x568>)
  GUI_TaskHandle = osThreadNew(TouchGFX_Task, NULL, &GUI_Task_attributes);
 8001054:	601d      	str	r5, [r3, #0]
  TimeoutTaskHandle = osThreadNew(StartTimeoutTask, NULL, &TimeoutTask_attributes);
 8001056:	f00c fa2b 	bl	800d4b0 <osThreadNew>
 800105a:	4b14      	ldr	r3, [pc, #80]	; (80010ac <main+0x56c>)
 800105c:	6018      	str	r0, [r3, #0]
  osKernelStart();
 800105e:	f00c fa0d 	bl	800d47c <osKernelStart>
  while (1)
 8001062:	e7fe      	b.n	8001062 <main+0x522>
 8001064:	40016800 	.word	0x40016800
 8001068:	2000019c 	.word	0x2000019c
 800106c:	20000018 	.word	0x20000018
 8001070:	2000033c 	.word	0x2000033c
 8001074:	200003cc 	.word	0x200003cc
 8001078:	40010000 	.word	0x40010000
 800107c:	40000400 	.word	0x40000400
 8001080:	20000384 	.word	0x20000384
 8001084:	0802c510 	.word	0x0802c510
 8001088:	200001a0 	.word	0x200001a0
 800108c:	0802c54c 	.word	0x0802c54c
 8001090:	08000971 	.word	0x08000971
 8001094:	200001a8 	.word	0x200001a8
 8001098:	0802c4ec 	.word	0x0802c4ec
 800109c:	08001c01 	.word	0x08001c01
 80010a0:	20000198 	.word	0x20000198
 80010a4:	0802c528 	.word	0x0802c528
 80010a8:	0800097d 	.word	0x0800097d
 80010ac:	200001a4 	.word	0x200001a4

080010b0 <IOE_Init>:
 80010b0:	4770      	bx	lr
 80010b2:	bf00      	nop

080010b4 <IOE_ITConfig>:
 80010b4:	4770      	bx	lr
 80010b6:	bf00      	nop

080010b8 <IOE_Write>:
{
 80010b8:	b510      	push	{r4, lr}
  status = HAL_I2C_Mem_Write(&hi2c3, Addr, (uint16_t)Reg, I2C_MEMADD_SIZE_8BIT, &Value, 1, I2c3Timeout);
 80010ba:	4c09      	ldr	r4, [pc, #36]	; (80010e0 <IOE_Write+0x28>)
{
 80010bc:	b086      	sub	sp, #24
  status = HAL_I2C_Mem_Write(&hi2c3, Addr, (uint16_t)Reg, I2C_MEMADD_SIZE_8BIT, &Value, 1, I2c3Timeout);
 80010be:	6824      	ldr	r4, [r4, #0]
 80010c0:	9402      	str	r4, [sp, #8]
{
 80010c2:	4614      	mov	r4, r2
  status = HAL_I2C_Mem_Write(&hi2c3, Addr, (uint16_t)Reg, I2C_MEMADD_SIZE_8BIT, &Value, 1, I2c3Timeout);
 80010c4:	2301      	movs	r3, #1
 80010c6:	f88d 4017 	strb.w	r4, [sp, #23]
 80010ca:	f10d 0417 	add.w	r4, sp, #23
 80010ce:	460a      	mov	r2, r1
 80010d0:	9301      	str	r3, [sp, #4]
 80010d2:	4601      	mov	r1, r0
 80010d4:	9400      	str	r4, [sp, #0]
 80010d6:	4803      	ldr	r0, [pc, #12]	; (80010e4 <IOE_Write+0x2c>)
 80010d8:	f009 f9ee 	bl	800a4b8 <HAL_I2C_Mem_Write>
}
 80010dc:	b006      	add	sp, #24
 80010de:	bd10      	pop	{r4, pc}
 80010e0:	20000004 	.word	0x20000004
 80010e4:	200001b4 	.word	0x200001b4

080010e8 <IOE_Read>:
{
 80010e8:	b500      	push	{lr}
  status = HAL_I2C_Mem_Read(&hi2c3, Addr, Reg, I2C_MEMADD_SIZE_8BIT, &value, 1, I2c3Timeout);
 80010ea:	4b0b      	ldr	r3, [pc, #44]	; (8001118 <IOE_Read+0x30>)
{
 80010ec:	b087      	sub	sp, #28
  status = HAL_I2C_Mem_Read(&hi2c3, Addr, Reg, I2C_MEMADD_SIZE_8BIT, &value, 1, I2c3Timeout);
 80010ee:	681b      	ldr	r3, [r3, #0]
 80010f0:	9302      	str	r3, [sp, #8]
{
 80010f2:	4684      	mov	ip, r0
 80010f4:	460a      	mov	r2, r1
  status = HAL_I2C_Mem_Read(&hi2c3, Addr, Reg, I2C_MEMADD_SIZE_8BIT, &value, 1, I2c3Timeout);
 80010f6:	2301      	movs	r3, #1
 80010f8:	f10d 0117 	add.w	r1, sp, #23
  uint8_t value = 0;
 80010fc:	2000      	movs	r0, #0
  status = HAL_I2C_Mem_Read(&hi2c3, Addr, Reg, I2C_MEMADD_SIZE_8BIT, &value, 1, I2c3Timeout);
 80010fe:	e9cd 1300 	strd	r1, r3, [sp]
  uint8_t value = 0;
 8001102:	f88d 0017 	strb.w	r0, [sp, #23]
  status = HAL_I2C_Mem_Read(&hi2c3, Addr, Reg, I2C_MEMADD_SIZE_8BIT, &value, 1, I2c3Timeout);
 8001106:	4661      	mov	r1, ip
 8001108:	4804      	ldr	r0, [pc, #16]	; (800111c <IOE_Read+0x34>)
 800110a:	f009 fac7 	bl	800a69c <HAL_I2C_Mem_Read>
}
 800110e:	f89d 0017 	ldrb.w	r0, [sp, #23]
 8001112:	b007      	add	sp, #28
 8001114:	f85d fb04 	ldr.w	pc, [sp], #4
 8001118:	20000004 	.word	0x20000004
 800111c:	200001b4 	.word	0x200001b4

08001120 <IOE_ReadMultiple>:
{
 8001120:	b510      	push	{r4, lr}
  status = HAL_I2C_Mem_Read(&hi2c3, Addr, (uint16_t)Reg, I2C_MEMADD_SIZE_8BIT, pBuffer, Length, I2c3Timeout);
 8001122:	4c09      	ldr	r4, [pc, #36]	; (8001148 <IOE_ReadMultiple+0x28>)
{
 8001124:	b084      	sub	sp, #16
 8001126:	4684      	mov	ip, r0
  status = HAL_I2C_Mem_Read(&hi2c3, Addr, (uint16_t)Reg, I2C_MEMADD_SIZE_8BIT, pBuffer, Length, I2c3Timeout);
 8001128:	6820      	ldr	r0, [r4, #0]
 800112a:	9002      	str	r0, [sp, #8]
 800112c:	e9cd 2300 	strd	r2, r3, [sp]
 8001130:	4806      	ldr	r0, [pc, #24]	; (800114c <IOE_ReadMultiple+0x2c>)
 8001132:	460a      	mov	r2, r1
 8001134:	2301      	movs	r3, #1
 8001136:	4661      	mov	r1, ip
 8001138:	f009 fab0 	bl	800a69c <HAL_I2C_Mem_Read>
}
 800113c:	3800      	subs	r0, #0
 800113e:	bf18      	it	ne
 8001140:	2001      	movne	r0, #1
 8001142:	b004      	add	sp, #16
 8001144:	bd10      	pop	{r4, pc}
 8001146:	bf00      	nop
 8001148:	20000004 	.word	0x20000004
 800114c:	200001b4 	.word	0x200001b4

08001150 <IOE_Delay>:
 8001150:	f008 baae 	b.w	80096b0 <HAL_Delay>

08001154 <LCD_IO_Init>:
{
 8001154:	b508      	push	{r3, lr}
  HAL_GPIO_WritePin(GPIOC, GPIO_PIN_2, GPIO_PIN_RESET);
 8001156:	4806      	ldr	r0, [pc, #24]	; (8001170 <LCD_IO_Init+0x1c>)
 8001158:	2200      	movs	r2, #0
 800115a:	2104      	movs	r1, #4
 800115c:	f008 fe7e 	bl	8009e5c <HAL_GPIO_WritePin>
}
 8001160:	e8bd 4008 	ldmia.w	sp!, {r3, lr}
  HAL_GPIO_WritePin(GPIOC, GPIO_PIN_2, GPIO_PIN_SET);
 8001164:	4802      	ldr	r0, [pc, #8]	; (8001170 <LCD_IO_Init+0x1c>)
 8001166:	2201      	movs	r2, #1
 8001168:	2104      	movs	r1, #4
 800116a:	f008 be77 	b.w	8009e5c <HAL_GPIO_WritePin>
 800116e:	bf00      	nop
 8001170:	40020800 	.word	0x40020800

08001174 <LCD_IO_WriteData>:
{
 8001174:	b530      	push	{r4, r5, lr}
  HAL_GPIO_WritePin(GPIOC, GPIO_PIN_2, GPIO_PIN_RESET);
 8001176:	4d10      	ldr	r5, [pc, #64]	; (80011b8 <LCD_IO_WriteData+0x44>)
{
 8001178:	b083      	sub	sp, #12
 800117a:	4604      	mov	r4, r0
  HAL_GPIO_WritePin(GPIOD, GPIO_PIN_13, GPIO_PIN_SET);
 800117c:	2201      	movs	r2, #1
 800117e:	480f      	ldr	r0, [pc, #60]	; (80011bc <LCD_IO_WriteData+0x48>)
 8001180:	f44f 5100 	mov.w	r1, #8192	; 0x2000
 8001184:	f008 fe6a 	bl	8009e5c <HAL_GPIO_WritePin>
  HAL_GPIO_WritePin(GPIOC, GPIO_PIN_2, GPIO_PIN_RESET);
 8001188:	4628      	mov	r0, r5
 800118a:	2200      	movs	r2, #0
 800118c:	2104      	movs	r1, #4
 800118e:	f008 fe65 	bl	8009e5c <HAL_GPIO_WritePin>
  status = HAL_SPI_Transmit(&hspi5, (uint8_t*) &Value, 1, Spi5Timeout);
 8001192:	4b0b      	ldr	r3, [pc, #44]	; (80011c0 <LCD_IO_WriteData+0x4c>)
 8001194:	480b      	ldr	r0, [pc, #44]	; (80011c4 <LCD_IO_WriteData+0x50>)
 8001196:	681b      	ldr	r3, [r3, #0]
 8001198:	f8ad 4006 	strh.w	r4, [sp, #6]
 800119c:	f10d 0106 	add.w	r1, sp, #6
 80011a0:	2201      	movs	r2, #1
 80011a2:	f00b fa01 	bl	800c5a8 <HAL_SPI_Transmit>
  HAL_GPIO_WritePin(GPIOC, GPIO_PIN_2, GPIO_PIN_SET);
 80011a6:	2201      	movs	r2, #1
 80011a8:	2104      	movs	r1, #4
 80011aa:	4628      	mov	r0, r5
}
 80011ac:	b003      	add	sp, #12
 80011ae:	e8bd 4030 	ldmia.w	sp!, {r4, r5, lr}
  HAL_GPIO_WritePin(GPIOC, GPIO_PIN_2, GPIO_PIN_SET);
 80011b2:	f008 be53 	b.w	8009e5c <HAL_GPIO_WritePin>
 80011b6:	bf00      	nop
 80011b8:	40020800 	.word	0x40020800
 80011bc:	40020c00 	.word	0x40020c00
 80011c0:	20000008 	.word	0x20000008
 80011c4:	200002e4 	.word	0x200002e4

080011c8 <LCD_IO_WriteReg>:
{
 80011c8:	b530      	push	{r4, r5, lr}
  HAL_GPIO_WritePin(GPIOC, GPIO_PIN_2, GPIO_PIN_RESET);
 80011ca:	4d10      	ldr	r5, [pc, #64]	; (800120c <LCD_IO_WriteReg+0x44>)
{
 80011cc:	b083      	sub	sp, #12
 80011ce:	4604      	mov	r4, r0
  HAL_GPIO_WritePin(GPIOD, GPIO_PIN_13, GPIO_PIN_RESET);
 80011d0:	2200      	movs	r2, #0
 80011d2:	480f      	ldr	r0, [pc, #60]	; (8001210 <LCD_IO_WriteReg+0x48>)
 80011d4:	f44f 5100 	mov.w	r1, #8192	; 0x2000
 80011d8:	f008 fe40 	bl	8009e5c <HAL_GPIO_WritePin>
  HAL_GPIO_WritePin(GPIOC, GPIO_PIN_2, GPIO_PIN_RESET);
 80011dc:	4628      	mov	r0, r5
 80011de:	2200      	movs	r2, #0
 80011e0:	2104      	movs	r1, #4
 80011e2:	f008 fe3b 	bl	8009e5c <HAL_GPIO_WritePin>
  status = HAL_SPI_Transmit(&hspi5, (uint8_t*) &Value, 1, Spi5Timeout);
 80011e6:	4b0b      	ldr	r3, [pc, #44]	; (8001214 <LCD_IO_WriteReg+0x4c>)
 80011e8:	480b      	ldr	r0, [pc, #44]	; (8001218 <LCD_IO_WriteReg+0x50>)
 80011ea:	681b      	ldr	r3, [r3, #0]
  SPI5_Write(Reg);
 80011ec:	f8ad 4006 	strh.w	r4, [sp, #6]
  status = HAL_SPI_Transmit(&hspi5, (uint8_t*) &Value, 1, Spi5Timeout);
 80011f0:	f10d 0106 	add.w	r1, sp, #6
 80011f4:	2201      	movs	r2, #1
 80011f6:	f00b f9d7 	bl	800c5a8 <HAL_SPI_Transmit>
  HAL_GPIO_WritePin(GPIOC, GPIO_PIN_2, GPIO_PIN_SET);
 80011fa:	2201      	movs	r2, #1
 80011fc:	2104      	movs	r1, #4
 80011fe:	4628      	mov	r0, r5
}
 8001200:	b003      	add	sp, #12
 8001202:	e8bd 4030 	ldmia.w	sp!, {r4, r5, lr}
  HAL_GPIO_WritePin(GPIOC, GPIO_PIN_2, GPIO_PIN_SET);
 8001206:	f008 be29 	b.w	8009e5c <HAL_GPIO_WritePin>
 800120a:	bf00      	nop
 800120c:	40020800 	.word	0x40020800
 8001210:	40020c00 	.word	0x40020c00
 8001214:	20000008 	.word	0x20000008
 8001218:	200002e4 	.word	0x200002e4

0800121c <LCD_IO_ReadData>:
{
 800121c:	e92d 43f0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, lr}
  HAL_GPIO_WritePin(GPIOC, GPIO_PIN_2, GPIO_PIN_RESET);
 8001220:	4e19      	ldr	r6, [pc, #100]	; (8001288 <LCD_IO_ReadData+0x6c>)
  HAL_GPIO_WritePin(GPIOD, GPIO_PIN_13, GPIO_PIN_RESET);
 8001222:	4f1a      	ldr	r7, [pc, #104]	; (800128c <LCD_IO_ReadData+0x70>)
  status = HAL_SPI_Transmit(&hspi5, (uint8_t*) &Value, 1, Spi5Timeout);
 8001224:	f8df 9068 	ldr.w	r9, [pc, #104]	; 8001290 <LCD_IO_ReadData+0x74>
 8001228:	f8df 8068 	ldr.w	r8, [pc, #104]	; 8001294 <LCD_IO_ReadData+0x78>
{
 800122c:	b083      	sub	sp, #12
 800122e:	460c      	mov	r4, r1
 8001230:	4605      	mov	r5, r0
  HAL_GPIO_WritePin(GPIOC, GPIO_PIN_2, GPIO_PIN_RESET);
 8001232:	2200      	movs	r2, #0
 8001234:	4630      	mov	r0, r6
 8001236:	2104      	movs	r1, #4
 8001238:	f008 fe10 	bl	8009e5c <HAL_GPIO_WritePin>
  HAL_GPIO_WritePin(GPIOD, GPIO_PIN_13, GPIO_PIN_RESET);
 800123c:	4638      	mov	r0, r7
 800123e:	2200      	movs	r2, #0
 8001240:	f44f 5100 	mov.w	r1, #8192	; 0x2000
 8001244:	f008 fe0a 	bl	8009e5c <HAL_GPIO_WritePin>
  status = HAL_SPI_Transmit(&hspi5, (uint8_t*) &Value, 1, Spi5Timeout);
 8001248:	f8d9 3000 	ldr.w	r3, [r9]
 800124c:	f8ad 5004 	strh.w	r5, [sp, #4]
 8001250:	a901      	add	r1, sp, #4
 8001252:	2201      	movs	r2, #1
 8001254:	4640      	mov	r0, r8
 8001256:	f00b f9a7 	bl	800c5a8 <HAL_SPI_Transmit>
  status = HAL_SPI_Receive(&hspi5, (uint8_t*) &readvalue, ReadSize, Spi5Timeout);
 800125a:	f8d9 3000 	ldr.w	r3, [r9]
 800125e:	4622      	mov	r2, r4
 8001260:	a901      	add	r1, sp, #4
 8001262:	4640      	mov	r0, r8
 8001264:	f00b fc48 	bl	800caf8 <HAL_SPI_Receive>
  HAL_GPIO_WritePin(GPIOD, GPIO_PIN_13, GPIO_PIN_SET);
 8001268:	4638      	mov	r0, r7
 800126a:	2201      	movs	r2, #1
 800126c:	f44f 5100 	mov.w	r1, #8192	; 0x2000
  return readvalue;
 8001270:	9c01      	ldr	r4, [sp, #4]
  HAL_GPIO_WritePin(GPIOD, GPIO_PIN_13, GPIO_PIN_SET);
 8001272:	f008 fdf3 	bl	8009e5c <HAL_GPIO_WritePin>
  HAL_GPIO_WritePin(GPIOC, GPIO_PIN_2, GPIO_PIN_SET);
 8001276:	4630      	mov	r0, r6
 8001278:	2201      	movs	r2, #1
 800127a:	2104      	movs	r1, #4
 800127c:	f008 fdee 	bl	8009e5c <HAL_GPIO_WritePin>
}
 8001280:	4620      	mov	r0, r4
 8001282:	b003      	add	sp, #12
 8001284:	e8bd 83f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, pc}
 8001288:	40020800 	.word	0x40020800
 800128c:	40020c00 	.word	0x40020c00
 8001290:	20000008 	.word	0x20000008
 8001294:	200002e4 	.word	0x200002e4

08001298 <LCD_Delay>:
  HAL_Delay(Delay);
 8001298:	f008 ba0a 	b.w	80096b0 <HAL_Delay>

0800129c <HAL_TIM_PeriodElapsedCallback>:
void HAL_TIM_PeriodElapsedCallback(TIM_HandleTypeDef *htim)
{
  /* USER CODE BEGIN Callback 0 */

  /* USER CODE END Callback 0 */
  if (htim->Instance == TIM6) {
 800129c:	4b03      	ldr	r3, [pc, #12]	; (80012ac <HAL_TIM_PeriodElapsedCallback+0x10>)
 800129e:	6802      	ldr	r2, [r0, #0]
 80012a0:	429a      	cmp	r2, r3
 80012a2:	d000      	beq.n	80012a6 <HAL_TIM_PeriodElapsedCallback+0xa>
    HAL_IncTick();
  }
  /* USER CODE BEGIN Callback 1 */

  /* USER CODE END Callback 1 */
}
 80012a4:	4770      	bx	lr
    HAL_IncTick();
 80012a6:	f008 b9f1 	b.w	800968c <HAL_IncTick>
 80012aa:	bf00      	nop
 80012ac:	40001000 	.word	0x40001000

080012b0 <Error_Handler>:
{
  /* USER CODE BEGIN Error_Handler_Debug */
  /* User can add his own implementation to report the HAL error return state */

  /* USER CODE END Error_Handler_Debug */
}
 80012b0:	4770      	bx	lr
 80012b2:	bf00      	nop

080012b4 <MEAS_GPIO_analog_init>:
 * - ADC123_IN13 = GPIO PC3 (Pad right)
 * - ADC3_IN6 = GPIO PF8 (Hall sensor Left)
 * - ADC123_IN11 = GPIO PC1 (Hall sensor Right)
 *****************************************************************************/
void MEAS_GPIO_analog_init(void)
{
 80012b4:	b410      	push	{r4}
 80012b6:	b083      	sub	sp, #12
    __HAL_RCC_GPIOF_CLK_ENABLE();  // Enable Clock for GPIO port F
 80012b8:	4b15      	ldr	r3, [pc, #84]	; (8001310 <MEAS_GPIO_analog_init+0x5c>)
    GPIOF->MODER |= (3UL << GPIO_MODER_MODER6_Pos);  // Analog PF6 = ADC3_IN4
 80012ba:	4916      	ldr	r1, [pc, #88]	; (8001314 <MEAS_GPIO_analog_init+0x60>)
    __HAL_RCC_GPIOF_CLK_ENABLE();  // Enable Clock for GPIO port F
 80012bc:	2400      	movs	r4, #0
 80012be:	9400      	str	r4, [sp, #0]
 80012c0:	6b1a      	ldr	r2, [r3, #48]	; 0x30
 80012c2:	f042 0220 	orr.w	r2, r2, #32
 80012c6:	631a      	str	r2, [r3, #48]	; 0x30
 80012c8:	6b1a      	ldr	r2, [r3, #48]	; 0x30
 80012ca:	f002 0220 	and.w	r2, r2, #32
 80012ce:	9200      	str	r2, [sp, #0]
 80012d0:	9a00      	ldr	r2, [sp, #0]
    GPIOF->MODER |= (3UL << GPIO_MODER_MODER6_Pos);  // Analog PF6 = ADC3_IN4
 80012d2:	6808      	ldr	r0, [r1, #0]
    GPIOF->MODER |= (3UL << GPIO_MODER_MODER8_Pos);  // Analog PF8 = ADC3_IN6
    __HAL_RCC_GPIOC_CLK_ENABLE();  // Enable Clock for GPIO port C
    GPIOC->MODER |= (3UL << GPIO_MODER_MODER3_Pos);  // Analog PC3 = ADC3_IN13
 80012d4:	4a10      	ldr	r2, [pc, #64]	; (8001318 <MEAS_GPIO_analog_init+0x64>)
    GPIOF->MODER |= (3UL << GPIO_MODER_MODER6_Pos);  // Analog PF6 = ADC3_IN4
 80012d6:	f440 5040 	orr.w	r0, r0, #12288	; 0x3000
 80012da:	6008      	str	r0, [r1, #0]
    GPIOF->MODER |= (3UL << GPIO_MODER_MODER8_Pos);  // Analog PF8 = ADC3_IN6
 80012dc:	6808      	ldr	r0, [r1, #0]
 80012de:	f440 3040 	orr.w	r0, r0, #196608	; 0x30000
 80012e2:	6008      	str	r0, [r1, #0]
    __HAL_RCC_GPIOC_CLK_ENABLE();  // Enable Clock for GPIO port C
 80012e4:	9401      	str	r4, [sp, #4]
 80012e6:	6b19      	ldr	r1, [r3, #48]	; 0x30
 80012e8:	f041 0104 	orr.w	r1, r1, #4
 80012ec:	6319      	str	r1, [r3, #48]	; 0x30
 80012ee:	6b1b      	ldr	r3, [r3, #48]	; 0x30
 80012f0:	f003 0304 	and.w	r3, r3, #4
 80012f4:	9301      	str	r3, [sp, #4]
 80012f6:	9b01      	ldr	r3, [sp, #4]
    GPIOC->MODER |= (3UL << GPIO_MODER_MODER3_Pos);  // Analog PC3 = ADC3_IN13
 80012f8:	6813      	ldr	r3, [r2, #0]
 80012fa:	f043 03c0 	orr.w	r3, r3, #192	; 0xc0
 80012fe:	6013      	str	r3, [r2, #0]
    GPIOC->MODER |= (3UL << GPIO_MODER_MODER1_Pos);  // Analog PC1 = ADC3_IN11
 8001300:	6813      	ldr	r3, [r2, #0]
 8001302:	f043 030c 	orr.w	r3, r3, #12
 8001306:	6013      	str	r3, [r2, #0]
}
 8001308:	b003      	add	sp, #12
 800130a:	f85d 4b04 	ldr.w	r4, [sp], #4
 800130e:	4770      	bx	lr
 8001310:	40023800 	.word	0x40023800
 8001314:	40021400 	.word	0x40021400
 8001318:	40020800 	.word	0x40020800

0800131c <MEAS_timer_init>:
 * @brief Configure the timer to trigger the ADC(s)
 *
 * @note For debugging purposes the timer interrupt might be useful.
 *****************************************************************************/
void MEAS_timer_init(void)
{
 800131c:	b410      	push	{r4}
 800131e:	b083      	sub	sp, #12
    __HAL_RCC_TIM2_CLK_ENABLE();  // Enable Clock for TIM2
 8001320:	4a0e      	ldr	r2, [pc, #56]	; (800135c <MEAS_timer_init+0x40>)
 8001322:	2000      	movs	r0, #0
 8001324:	9001      	str	r0, [sp, #4]
 8001326:	6c11      	ldr	r1, [r2, #64]	; 0x40
 8001328:	f041 0101 	orr.w	r1, r1, #1
 800132c:	6411      	str	r1, [r2, #64]	; 0x40
 800132e:	6c12      	ldr	r2, [r2, #64]	; 0x40
    TIM2->PSC = TIM_PRESCALE;     // Prescaler for clock freq. = 1MHz
 8001330:	f04f 4380 	mov.w	r3, #1073741824	; 0x40000000
    __HAL_RCC_TIM2_CLK_ENABLE();  // Enable Clock for TIM2
 8001334:	f002 0201 	and.w	r2, r2, #1
 8001338:	9201      	str	r2, [sp, #4]
    TIM2->PSC = TIM_PRESCALE;     // Prescaler for clock freq. = 1MHz
 800133a:	f243 3144 	movw	r1, #13124	; 0x3344
    TIM2->ARR = TIM_TOP;          // Auto reload = counter top value
 800133e:	2209      	movs	r2, #9
    __HAL_RCC_TIM2_CLK_ENABLE();  // Enable Clock for TIM2
 8001340:	9c01      	ldr	r4, [sp, #4]
    TIM2->PSC = TIM_PRESCALE;     // Prescaler for clock freq. = 1MHz
 8001342:	6299      	str	r1, [r3, #40]	; 0x28
    TIM2->ARR = TIM_TOP;          // Auto reload = counter top value
 8001344:	62da      	str	r2, [r3, #44]	; 0x2c
    TIM2->CR2 |= TIM_CR2_MMS_1;   // TRGO on update
 8001346:	685a      	ldr	r2, [r3, #4]
 */
__STATIC_INLINE void __NVIC_SetPriority(IRQn_Type IRQn, uint32_t priority)
{
  if ((int32_t)(IRQn) >= 0)
  {
    NVIC->IP[((uint32_t)IRQn)]               = (uint8_t)((priority << (8U - __NVIC_PRIO_BITS)) & (uint32_t)0xFFUL);
 8001348:	4905      	ldr	r1, [pc, #20]	; (8001360 <MEAS_timer_init+0x44>)
 800134a:	f042 0220 	orr.w	r2, r2, #32
 800134e:	605a      	str	r2, [r3, #4]
 8001350:	f881 031c 	strb.w	r0, [r1, #796]	; 0x31c

    // set timer to highest priority
    NVIC_SetPriority(TIM2_IRQn, 0);
}
 8001354:	b003      	add	sp, #12
 8001356:	f85d 4b04 	ldr.w	r4, [sp], #4
 800135a:	4770      	bx	lr
 800135c:	40023800 	.word	0x40023800
 8001360:	e000e100 	.word	0xe000e100

08001364 <MEAS_ADC3_scan_init>:
 * @n The DMA triggers the transfer complete interrupt when all data is ready.
 * @n The inputs used are ADC3_IN4 = GPIO PF6 (Pad Right), ADC3_IN13 = GPIO PC3
 *(Pad Left), ADC_IN6 = GPIO PF8 (HS-Right), ADC3_IN11 = GPIO PC1 (HS-Left)
 *****************************************************************************/
void MEAS_ADC3_scan_init(void)
{
 8001364:	b410      	push	{r4}
 8001366:	b083      	sub	sp, #12
    __HAL_RCC_ADC3_CLK_ENABLE();               // Enable Clock for ADC3
 8001368:	4a36      	ldr	r2, [pc, #216]	; (8001444 <MEAS_ADC3_scan_init+0xe0>)
    ADC3->SQR1 |= (3UL << ADC_SQR1_L_Pos);     // Convert 4 inputs (4-1)
 800136a:	4b37      	ldr	r3, [pc, #220]	; (8001448 <MEAS_ADC3_scan_init+0xe4>)
 800136c:	4c37      	ldr	r4, [pc, #220]	; (800144c <MEAS_ADC3_scan_init+0xe8>)
    __HAL_RCC_ADC3_CLK_ENABLE();               // Enable Clock for ADC3
 800136e:	2100      	movs	r1, #0
 8001370:	9100      	str	r1, [sp, #0]
 8001372:	6c50      	ldr	r0, [r2, #68]	; 0x44
 8001374:	f440 6080 	orr.w	r0, r0, #1024	; 0x400
 8001378:	6450      	str	r0, [r2, #68]	; 0x44
 800137a:	6c50      	ldr	r0, [r2, #68]	; 0x44
 800137c:	f400 6080 	and.w	r0, r0, #1024	; 0x400
 8001380:	9000      	str	r0, [sp, #0]
 8001382:	9800      	ldr	r0, [sp, #0]
    ADC3->SQR1 |= (3UL << ADC_SQR1_L_Pos);     // Convert 4 inputs (4-1)
 8001384:	6ad8      	ldr	r0, [r3, #44]	; 0x2c
 8001386:	f440 1040 	orr.w	r0, r0, #3145728	; 0x300000
 800138a:	62d8      	str	r0, [r3, #44]	; 0x2c
    ADC3->SQR3 |= (4UL << ADC_SQR3_SQ1_Pos);   // Input 4 = first conversion
 800138c:	6b58      	ldr	r0, [r3, #52]	; 0x34
 800138e:	f040 0004 	orr.w	r0, r0, #4
 8001392:	6358      	str	r0, [r3, #52]	; 0x34
    ADC3->SQR3 |= (13UL << ADC_SQR3_SQ2_Pos);  // Input 13 = second conversion
 8001394:	6b58      	ldr	r0, [r3, #52]	; 0x34
 8001396:	f440 70d0 	orr.w	r0, r0, #416	; 0x1a0
 800139a:	6358      	str	r0, [r3, #52]	; 0x34
    ADC3->SQR3 |= (6UL << ADC_SQR3_SQ3_Pos);   // Input 6 = third conversion
 800139c:	6b58      	ldr	r0, [r3, #52]	; 0x34
 800139e:	f440 50c0 	orr.w	r0, r0, #6144	; 0x1800
 80013a2:	6358      	str	r0, [r3, #52]	; 0x34
    ADC3->SQR3 |= (11UL << ADC_SQR3_SQ4_Pos);  // Input 11 = fourth conversion
 80013a4:	6b58      	ldr	r0, [r3, #52]	; 0x34
 80013a6:	f440 20b0 	orr.w	r0, r0, #360448	; 0x58000
 80013aa:	6358      	str	r0, [r3, #52]	; 0x34
    ADC3->CR1 |= ADC_CR1_SCAN;                 // Enable scan mode
 80013ac:	6858      	ldr	r0, [r3, #4]
 80013ae:	f440 7080 	orr.w	r0, r0, #256	; 0x100
 80013b2:	6058      	str	r0, [r3, #4]
    ADC3->CR2 |= (1UL << ADC_CR2_EXTEN_Pos);   // En. ext. trigger on rising e.
 80013b4:	6898      	ldr	r0, [r3, #8]
 80013b6:	f040 5080 	orr.w	r0, r0, #268435456	; 0x10000000
 80013ba:	6098      	str	r0, [r3, #8]
    ADC3->CR2 |= (6UL << ADC_CR2_EXTSEL_Pos);  // Timer 2 TRGO event
 80013bc:	6898      	ldr	r0, [r3, #8]
 80013be:	f040 60c0 	orr.w	r0, r0, #100663296	; 0x6000000
 80013c2:	6098      	str	r0, [r3, #8]
    ADC3->CR2 |= ADC_CR2_DMA;                  // Enable DMA mode
 80013c4:	6898      	ldr	r0, [r3, #8]
 80013c6:	f440 7080 	orr.w	r0, r0, #256	; 0x100
 80013ca:	6098      	str	r0, [r3, #8]
    __HAL_RCC_DMA2_CLK_ENABLE();               // Enable Clock for DMA2
 80013cc:	9101      	str	r1, [sp, #4]
 80013ce:	6b10      	ldr	r0, [r2, #48]	; 0x30
 80013d0:	f440 0080 	orr.w	r0, r0, #4194304	; 0x400000
 80013d4:	6310      	str	r0, [r2, #48]	; 0x30
 80013d6:	6b12      	ldr	r2, [r2, #48]	; 0x30
 80013d8:	f402 0280 	and.w	r2, r2, #4194304	; 0x400000
 80013dc:	9201      	str	r2, [sp, #4]
    // set DMA to highest priority
    NVIC_SetPriority(DMA2_Stream1_IRQn, 0);
    DMA2_Stream1->CR &= ~DMA_SxCR_EN;          // Disable the DMA stream 1
 80013de:	f503 33a1 	add.w	r3, r3, #82432	; 0x14200
    __HAL_RCC_DMA2_CLK_ENABLE();               // Enable Clock for DMA2
 80013e2:	9a01      	ldr	r2, [sp, #4]
 80013e4:	f884 1339 	strb.w	r1, [r4, #825]	; 0x339
    DMA2_Stream1->CR &= ~DMA_SxCR_EN;          // Disable the DMA stream 1
 80013e8:	6a9a      	ldr	r2, [r3, #40]	; 0x28
 80013ea:	f022 0201 	bic.w	r2, r2, #1
 80013ee:	629a      	str	r2, [r3, #40]	; 0x28
    while (DMA2_Stream1->CR & DMA_SxCR_EN)
 80013f0:	6a9a      	ldr	r2, [r3, #40]	; 0x28
 80013f2:	07d2      	lsls	r2, r2, #31
 80013f4:	d4fc      	bmi.n	80013f0 <MEAS_ADC3_scan_init+0x8c>
    {

    }  // Wait for DMA to finish
    DMA2->LIFCR |= DMA_LIFCR_CTCIF1;  // Clear transfer complete interrupt fl.
 80013f6:	689a      	ldr	r2, [r3, #8]
    DMA2_Stream1->CR |= DMA_SxCR_PSIZE_1;  // Peripheral data size = 32 bit
    DMA2_Stream1->CR |= DMA_SxCR_MINC;     // Increment memory address pointer
    DMA2_Stream1->CR |= DMA_SxCR_TCIE;     // Transfer complete interrupt enable
    // Number of data items to transfer
    DMA2_Stream1->NDTR = INPUT_COUNT * ADC_NUMS;
    DMA2_Stream1->PAR = (uint32_t)&ADC3->DR;     // Peripheral register address
 80013f8:	4815      	ldr	r0, [pc, #84]	; (8001450 <MEAS_ADC3_scan_init+0xec>)
    DMA2_Stream1->M0AR = (uint32_t)ADC_samples;  // Buffer memory loc. address
 80013fa:	4916      	ldr	r1, [pc, #88]	; (8001454 <MEAS_ADC3_scan_init+0xf0>)
    DMA2->LIFCR |= DMA_LIFCR_CTCIF1;  // Clear transfer complete interrupt fl.
 80013fc:	f442 6200 	orr.w	r2, r2, #2048	; 0x800
 8001400:	609a      	str	r2, [r3, #8]
    DMA2_Stream1->CR |= (2UL << DMA_SxCR_CHSEL_Pos);  // Select channel 2
 8001402:	6a9a      	ldr	r2, [r3, #40]	; 0x28
 8001404:	f042 6280 	orr.w	r2, r2, #67108864	; 0x4000000
 8001408:	629a      	str	r2, [r3, #40]	; 0x28
    DMA2_Stream1->CR |= DMA_SxCR_PL_0;                // Priority high
 800140a:	6a9a      	ldr	r2, [r3, #40]	; 0x28
 800140c:	f442 3280 	orr.w	r2, r2, #65536	; 0x10000
 8001410:	629a      	str	r2, [r3, #40]	; 0x28
    DMA2_Stream1->CR |= DMA_SxCR_MSIZE_1;  // Memory data size = 32 bit
 8001412:	6a9a      	ldr	r2, [r3, #40]	; 0x28
 8001414:	f442 4280 	orr.w	r2, r2, #16384	; 0x4000
 8001418:	629a      	str	r2, [r3, #40]	; 0x28
    DMA2_Stream1->CR |= DMA_SxCR_PSIZE_1;  // Peripheral data size = 32 bit
 800141a:	6a9a      	ldr	r2, [r3, #40]	; 0x28
 800141c:	f442 5280 	orr.w	r2, r2, #4096	; 0x1000
 8001420:	629a      	str	r2, [r3, #40]	; 0x28
    DMA2_Stream1->CR |= DMA_SxCR_MINC;     // Increment memory address pointer
 8001422:	6a9a      	ldr	r2, [r3, #40]	; 0x28
 8001424:	f442 6280 	orr.w	r2, r2, #1024	; 0x400
 8001428:	629a      	str	r2, [r3, #40]	; 0x28
    DMA2_Stream1->CR |= DMA_SxCR_TCIE;     // Transfer complete interrupt enable
 800142a:	6a9a      	ldr	r2, [r3, #40]	; 0x28
    DMA2_Stream1->NDTR = INPUT_COUNT * ADC_NUMS;
 800142c:	f44f 7480 	mov.w	r4, #256	; 0x100
    DMA2_Stream1->CR |= DMA_SxCR_TCIE;     // Transfer complete interrupt enable
 8001430:	f042 0210 	orr.w	r2, r2, #16
 8001434:	629a      	str	r2, [r3, #40]	; 0x28
    DMA2_Stream1->NDTR = INPUT_COUNT * ADC_NUMS;
 8001436:	62dc      	str	r4, [r3, #44]	; 0x2c
    DMA2_Stream1->PAR = (uint32_t)&ADC3->DR;     // Peripheral register address
 8001438:	6318      	str	r0, [r3, #48]	; 0x30
    DMA2_Stream1->M0AR = (uint32_t)ADC_samples;  // Buffer memory loc. address
 800143a:	6359      	str	r1, [r3, #52]	; 0x34
}
 800143c:	b003      	add	sp, #12
 800143e:	f85d 4b04 	ldr.w	r4, [sp], #4
 8001442:	4770      	bx	lr
 8001444:	40023800 	.word	0x40023800
 8001448:	40012200 	.word	0x40012200
 800144c:	e000e100 	.word	0xe000e100
 8001450:	4001224c 	.word	0x4001224c
 8001454:	20000414 	.word	0x20000414

08001458 <DMA2_Stream1_IRQHandler>:
 * The samples from the ADC3 have been transfered to memory by the DMA2 Stream1
 * and are ready for processing.
 *****************************************************************************/
void DMA2_Stream1_IRQHandler(void)
{
	if (DMA2->LISR & DMA_LISR_TCIF1) // Stream1 transfer compl. interrupt f.
 8001458:	4b1b      	ldr	r3, [pc, #108]	; (80014c8 <DMA2_Stream1_IRQHandler+0x70>)
 800145a:	681a      	ldr	r2, [r3, #0]
 800145c:	0511      	lsls	r1, r2, #20
 800145e:	d400      	bmi.n	8001462 <DMA2_Stream1_IRQHandler+0xa>
        ADC3->CR2 &= ~ADC_CR2_ADON;  // Disable ADC3
        ADC3->CR2 &= ~ADC_CR2_DMA;   // Disable DMA mode

        MEAS_ADC_reset();
    }
}
 8001460:	4770      	bx	lr
    NVIC->ICER[(((uint32_t)IRQn) >> 5UL)] = (uint32_t)(1UL << (((uint32_t)IRQn) & 0x1FUL));
 8001462:	4a1a      	ldr	r2, [pc, #104]	; (80014cc <DMA2_Stream1_IRQHandler+0x74>)
 8001464:	f04f 7100 	mov.w	r1, #33554432	; 0x2000000
 8001468:	f8c2 1084 	str.w	r1, [r2, #132]	; 0x84
  \details Acts as a special kind of Data Memory Barrier.
           It completes when all explicit memory accesses before this instruction complete.
 */
__STATIC_FORCEINLINE void __DSB(void)
{
  __ASM volatile ("dsb 0xF":::"memory");
 800146c:	f3bf 8f4f 	dsb	sy
  __ASM volatile ("isb 0xF":::"memory");
 8001470:	f3bf 8f6f 	isb	sy
    NVIC->ICPR[(((uint32_t)IRQn) >> 5UL)] = (uint32_t)(1UL << (((uint32_t)IRQn) & 0x1FUL));
 8001474:	f8c2 1184 	str.w	r1, [r2, #388]	; 0x184
        DMA2_Stream1->CR &= ~DMA_SxCR_EN;         // Disable the DMA
 8001478:	6a9a      	ldr	r2, [r3, #40]	; 0x28
 800147a:	f022 0201 	bic.w	r2, r2, #1
 800147e:	629a      	str	r2, [r3, #40]	; 0x28
        while (DMA2_Stream1->CR & DMA_SxCR_EN)	  // Wait for DMA to finish
 8001480:	6a9a      	ldr	r2, [r3, #40]	; 0x28
 8001482:	07d2      	lsls	r2, r2, #31
 8001484:	d4fc      	bmi.n	8001480 <DMA2_Stream1_IRQHandler+0x28>
        DMA2->LIFCR |= DMA_LIFCR_CTCIF1;// clr transfer complete interrupt fl.
 8001486:	6899      	ldr	r1, [r3, #8]
        TIM2->CR1 &= ~TIM_CR1_CEN;   // Disable timer
 8001488:	f04f 4280 	mov.w	r2, #1073741824	; 0x40000000
        DMA2->LIFCR |= DMA_LIFCR_CTCIF1;// clr transfer complete interrupt fl.
 800148c:	f441 6100 	orr.w	r1, r1, #2048	; 0x800
 8001490:	6099      	str	r1, [r3, #8]
        TIM2->CR1 &= ~TIM_CR1_CEN;   // Disable timer
 8001492:	6813      	ldr	r3, [r2, #0]
        ADC3->CR2 &= ~ADC_CR2_ADON;  // Disable ADC3
 8001494:	490e      	ldr	r1, [pc, #56]	; (80014d0 <DMA2_Stream1_IRQHandler+0x78>)
        TIM2->CR1 &= ~TIM_CR1_CEN;   // Disable timer
 8001496:	f023 0301 	bic.w	r3, r3, #1
 800149a:	6013      	str	r3, [r2, #0]
        ADC3->CR2 &= ~ADC_CR2_ADON;  // Disable ADC3
 800149c:	6888      	ldr	r0, [r1, #8]
    RCC->APB2RSTR |= RCC_APB2RSTR_ADCRST;   // Reset ADCs
 800149e:	4b0d      	ldr	r3, [pc, #52]	; (80014d4 <DMA2_Stream1_IRQHandler+0x7c>)
        ADC3->CR2 &= ~ADC_CR2_ADON;  // Disable ADC3
 80014a0:	f020 0001 	bic.w	r0, r0, #1
 80014a4:	6088      	str	r0, [r1, #8]
        ADC3->CR2 &= ~ADC_CR2_DMA;   // Disable DMA mode
 80014a6:	6888      	ldr	r0, [r1, #8]
 80014a8:	f420 7080 	bic.w	r0, r0, #256	; 0x100
 80014ac:	6088      	str	r0, [r1, #8]
    RCC->APB2RSTR |= RCC_APB2RSTR_ADCRST;   // Reset ADCs
 80014ae:	6a59      	ldr	r1, [r3, #36]	; 0x24
 80014b0:	f441 7180 	orr.w	r1, r1, #256	; 0x100
 80014b4:	6259      	str	r1, [r3, #36]	; 0x24
    RCC->APB2RSTR &= ~RCC_APB2RSTR_ADCRST;  // Release reset of ADCs
 80014b6:	6a59      	ldr	r1, [r3, #36]	; 0x24
 80014b8:	f421 7180 	bic.w	r1, r1, #256	; 0x100
 80014bc:	6259      	str	r1, [r3, #36]	; 0x24
    TIM2->CR1 &= ~TIM_CR1_CEN;              // Disable timer
 80014be:	6813      	ldr	r3, [r2, #0]
 80014c0:	f023 0301 	bic.w	r3, r3, #1
 80014c4:	6013      	str	r3, [r2, #0]
}
 80014c6:	4770      	bx	lr
 80014c8:	40026400 	.word	0x40026400
 80014cc:	e000e100 	.word	0xe000e100
 80014d0:	40012200 	.word	0x40012200
 80014d4:	40023800 	.word	0x40023800

080014d8 <MEAS_start_measure>:
 *
 * @note The result is stored alternated e.g. every 4th is together.
 *****************************************************************************/
// Start the measurement procedure
uint32_t* MEAS_start_measure(void)
{
 80014d8:	b510      	push	{r4, lr}
        buffer[i] = 0;
 80014da:	f44f 6280 	mov.w	r2, #1024	; 0x400
 80014de:	2100      	movs	r1, #0
 80014e0:	480f      	ldr	r0, [pc, #60]	; (8001520 <MEAS_start_measure+0x48>)
 80014e2:	f02a f942 	bl	802b76a <memset>
	MEAS_Buffer_reset(INPUT_COUNT, ADC_samples);
	MEAS_ADC3_scan_init();
 80014e6:	f7ff ff3d 	bl	8001364 <MEAS_ADC3_scan_init>
    DMA2_Stream1->CR |= DMA_SxCR_EN;          // Enable DMA
 80014ea:	4a0e      	ldr	r2, [pc, #56]	; (8001524 <MEAS_start_measure+0x4c>)
 80014ec:	490e      	ldr	r1, [pc, #56]	; (8001528 <MEAS_start_measure+0x50>)
 80014ee:	6a93      	ldr	r3, [r2, #40]	; 0x28
    ADC3->CR2 |= ADC_CR2_ADON;          // Enable ADC3
 80014f0:	480e      	ldr	r0, [pc, #56]	; (800152c <MEAS_start_measure+0x54>)
 80014f2:	f04f 7400 	mov.w	r4, #33554432	; 0x2000000
    DMA2_Stream1->CR |= DMA_SxCR_EN;          // Enable DMA
 80014f6:	f043 0301 	orr.w	r3, r3, #1
 80014fa:	6293      	str	r3, [r2, #40]	; 0x28
 80014fc:	f8c1 4184 	str.w	r4, [r1, #388]	; 0x184
    NVIC->ISER[(((uint32_t)IRQn) >> 5UL)] = (uint32_t)(1UL << (((uint32_t)IRQn) & 0x1FUL));
 8001500:	604c      	str	r4, [r1, #4]
    ADC3->CR2 |= ADC_CR2_ADON;          // Enable ADC3
 8001502:	6883      	ldr	r3, [r0, #8]
    TIM2->CR1 |= TIM_CR1_CEN;           // Enable timer
 8001504:	f04f 4180 	mov.w	r1, #1073741824	; 0x40000000
    ADC3->CR2 |= ADC_CR2_ADON;          // Enable ADC3
 8001508:	f043 0301 	orr.w	r3, r3, #1
 800150c:	6083      	str	r3, [r0, #8]
    TIM2->CR1 |= TIM_CR1_CEN;           // Enable timer
 800150e:	680b      	ldr	r3, [r1, #0]
 8001510:	f043 0301 	orr.w	r3, r3, #1
 8001514:	600b      	str	r3, [r1, #0]
    MEAS_ADC3_scan_start();

    while (DMA2_Stream1->CR & DMA_SxCR_EN)	  // Wait for DMA to finish
 8001516:	6a93      	ldr	r3, [r2, #40]	; 0x28
 8001518:	07db      	lsls	r3, r3, #31
 800151a:	d4fc      	bmi.n	8001516 <MEAS_start_measure+0x3e>
	{

	}

     return ADC_samples;
}
 800151c:	4800      	ldr	r0, [pc, #0]	; (8001520 <MEAS_start_measure+0x48>)
 800151e:	bd10      	pop	{r4, pc}
 8001520:	20000414 	.word	0x20000414
 8001524:	40026400 	.word	0x40026400
 8001528:	e000e100 	.word	0xe000e100
 800152c:	40012200 	.word	0x40012200

08001530 <MEAS_get_num_of_chan>:
 * @return Number of channels
 *****************************************************************************/
uint8_t MEAS_get_num_of_chan(void)
{
	return INPUT_COUNT;
}
 8001530:	2004      	movs	r0, #4
 8001532:	4770      	bx	lr

08001534 <MEAS_get_num_of_samples>:
 * @return Number of samples
 *****************************************************************************/
uint8_t MEAS_get_num_of_samples(void)
{
	return ADC_NUMS;
}
 8001534:	2040      	movs	r0, #64	; 0x40
 8001536:	4770      	bx	lr

08001538 <MEAS_get_samp_freq>:
 * @return Sampling frequency
 *****************************************************************************/
uint16_t MEAS_get_samp_freq(void)
{
	return ADC_FS;
}
 8001538:	f44f 7020 	mov.w	r0, #640	; 0x280
 800153c:	4770      	bx	lr
 800153e:	bf00      	nop

08001540 <HAL_MspInit>:
/* USER CODE END 0 */
/**
  * Initializes the Global MSP.
  */
void HAL_MspInit(void)
{
 8001540:	b082      	sub	sp, #8
  /* USER CODE BEGIN MspInit 0 */

  /* USER CODE END MspInit 0 */

  __HAL_RCC_SYSCFG_CLK_ENABLE();
 8001542:	4b0e      	ldr	r3, [pc, #56]	; (800157c <HAL_MspInit+0x3c>)
 8001544:	2200      	movs	r2, #0
 8001546:	9200      	str	r2, [sp, #0]
 8001548:	6c59      	ldr	r1, [r3, #68]	; 0x44
 800154a:	f441 4180 	orr.w	r1, r1, #16384	; 0x4000
 800154e:	6459      	str	r1, [r3, #68]	; 0x44
 8001550:	6c58      	ldr	r0, [r3, #68]	; 0x44
 8001552:	f400 4080 	and.w	r0, r0, #16384	; 0x4000
 8001556:	9000      	str	r0, [sp, #0]
 8001558:	9800      	ldr	r0, [sp, #0]
  __HAL_RCC_PWR_CLK_ENABLE();
 800155a:	9201      	str	r2, [sp, #4]
 800155c:	6c18      	ldr	r0, [r3, #64]	; 0x40
 800155e:	f040 5080 	orr.w	r0, r0, #268435456	; 0x10000000
 8001562:	6418      	str	r0, [r3, #64]	; 0x40
 8001564:	6c1b      	ldr	r3, [r3, #64]	; 0x40
 8001566:	f003 5380 	and.w	r3, r3, #268435456	; 0x10000000
 800156a:	9301      	str	r3, [sp, #4]
 800156c:	9b01      	ldr	r3, [sp, #4]

  /* System interrupt init*/
  /* PendSV_IRQn interrupt configuration */
  HAL_NVIC_SetPriority(PendSV_IRQn, 15, 0);
 800156e:	210f      	movs	r1, #15
 8001570:	f06f 0001 	mvn.w	r0, #1

  /* USER CODE BEGIN MspInit 1 */

  /* USER CODE END MspInit 1 */
}
 8001574:	b002      	add	sp, #8
  HAL_NVIC_SetPriority(PendSV_IRQn, 15, 0);
 8001576:	f008 b8bf 	b.w	80096f8 <HAL_NVIC_SetPriority>
 800157a:	bf00      	nop
 800157c:	40023800 	.word	0x40023800

08001580 <HAL_CRC_MspInit>:
* @param hcrc: CRC handle pointer
* @retval None
*/
void HAL_CRC_MspInit(CRC_HandleTypeDef* hcrc)
{
  if(hcrc->Instance==CRC)
 8001580:	4b0b      	ldr	r3, [pc, #44]	; (80015b0 <HAL_CRC_MspInit+0x30>)
 8001582:	6802      	ldr	r2, [r0, #0]
 8001584:	429a      	cmp	r2, r3
 8001586:	d000      	beq.n	800158a <HAL_CRC_MspInit+0xa>
 8001588:	4770      	bx	lr
{
 800158a:	b082      	sub	sp, #8
  {
  /* USER CODE BEGIN CRC_MspInit 0 */

  /* USER CODE END CRC_MspInit 0 */
    /* Peripheral clock enable */
    __HAL_RCC_CRC_CLK_ENABLE();
 800158c:	2200      	movs	r2, #0
 800158e:	9201      	str	r2, [sp, #4]
 8001590:	f8d3 2830 	ldr.w	r2, [r3, #2096]	; 0x830
 8001594:	f442 5280 	orr.w	r2, r2, #4096	; 0x1000
 8001598:	f8c3 2830 	str.w	r2, [r3, #2096]	; 0x830
 800159c:	f503 6300 	add.w	r3, r3, #2048	; 0x800
 80015a0:	6b1b      	ldr	r3, [r3, #48]	; 0x30
 80015a2:	f403 5380 	and.w	r3, r3, #4096	; 0x1000
 80015a6:	9301      	str	r3, [sp, #4]
 80015a8:	9b01      	ldr	r3, [sp, #4]
  /* USER CODE BEGIN CRC_MspInit 1 */

  /* USER CODE END CRC_MspInit 1 */
  }

}
 80015aa:	b002      	add	sp, #8
 80015ac:	4770      	bx	lr
 80015ae:	bf00      	nop
 80015b0:	40023000 	.word	0x40023000

080015b4 <HAL_I2C_MspInit>:
* This function configures the hardware resources used in this example
* @param hi2c: I2C handle pointer
* @retval None
*/
void HAL_I2C_MspInit(I2C_HandleTypeDef* hi2c)
{
 80015b4:	e92d 4370 	stmdb	sp!, {r4, r5, r6, r8, r9, lr}
  GPIO_InitTypeDef GPIO_InitStruct = {0};
  if(hi2c->Instance==I2C3)
 80015b8:	4b2e      	ldr	r3, [pc, #184]	; (8001674 <HAL_I2C_MspInit+0xc0>)
 80015ba:	6802      	ldr	r2, [r0, #0]
{
 80015bc:	b08a      	sub	sp, #40	; 0x28
  GPIO_InitTypeDef GPIO_InitStruct = {0};
 80015be:	2400      	movs	r4, #0
  if(hi2c->Instance==I2C3)
 80015c0:	429a      	cmp	r2, r3
  GPIO_InitTypeDef GPIO_InitStruct = {0};
 80015c2:	e9cd 4404 	strd	r4, r4, [sp, #16]
 80015c6:	e9cd 4406 	strd	r4, r4, [sp, #24]
 80015ca:	9408      	str	r4, [sp, #32]
  if(hi2c->Instance==I2C3)
 80015cc:	d002      	beq.n	80015d4 <HAL_I2C_MspInit+0x20>
    /* Release the I2C Peripheral Clock Reset */  
    __HAL_RCC_I2C3_RELEASE_RESET(); 
  /* USER CODE END I2C3_MspInit 1 */
  }

}
 80015ce:	b00a      	add	sp, #40	; 0x28
 80015d0:	e8bd 8370 	ldmia.w	sp!, {r4, r5, r6, r8, r9, pc}
    __HAL_RCC_GPIOC_CLK_ENABLE();
 80015d4:	4d28      	ldr	r5, [pc, #160]	; (8001678 <HAL_I2C_MspInit+0xc4>)
 80015d6:	9401      	str	r4, [sp, #4]
 80015d8:	6b2b      	ldr	r3, [r5, #48]	; 0x30
    HAL_GPIO_Init(GPIOC, &GPIO_InitStruct);
 80015da:	4828      	ldr	r0, [pc, #160]	; (800167c <HAL_I2C_MspInit+0xc8>)
    __HAL_RCC_GPIOC_CLK_ENABLE();
 80015dc:	f043 0304 	orr.w	r3, r3, #4
 80015e0:	632b      	str	r3, [r5, #48]	; 0x30
 80015e2:	6b2b      	ldr	r3, [r5, #48]	; 0x30
 80015e4:	f003 0304 	and.w	r3, r3, #4
 80015e8:	9301      	str	r3, [sp, #4]
 80015ea:	9b01      	ldr	r3, [sp, #4]
    __HAL_RCC_GPIOA_CLK_ENABLE();
 80015ec:	9402      	str	r4, [sp, #8]
 80015ee:	6b2b      	ldr	r3, [r5, #48]	; 0x30
 80015f0:	f043 0301 	orr.w	r3, r3, #1
 80015f4:	632b      	str	r3, [r5, #48]	; 0x30
 80015f6:	6b2b      	ldr	r3, [r5, #48]	; 0x30
 80015f8:	f003 0301 	and.w	r3, r3, #1
 80015fc:	9302      	str	r3, [sp, #8]
    GPIO_InitStruct.Pin = GPIO_PIN_9;
 80015fe:	f44f 7200 	mov.w	r2, #512	; 0x200
 8001602:	f04f 0801 	mov.w	r8, #1
 8001606:	f04f 0903 	mov.w	r9, #3
    GPIO_InitStruct.Alternate = GPIO_AF4_I2C3;
 800160a:	2604      	movs	r6, #4
    HAL_GPIO_Init(GPIOC, &GPIO_InitStruct);
 800160c:	a904      	add	r1, sp, #16
    GPIO_InitStruct.Pin = GPIO_PIN_9;
 800160e:	2312      	movs	r3, #18
 8001610:	e9cd 2304 	strd	r2, r3, [sp, #16]
 8001614:	e9cd 8906 	strd	r8, r9, [sp, #24]
    __HAL_RCC_GPIOA_CLK_ENABLE();
 8001618:	9b02      	ldr	r3, [sp, #8]
    GPIO_InitStruct.Alternate = GPIO_AF4_I2C3;
 800161a:	9608      	str	r6, [sp, #32]
    HAL_GPIO_Init(GPIOC, &GPIO_InitStruct);
 800161c:	f008 fada 	bl	8009bd4 <HAL_GPIO_Init>
    HAL_GPIO_Init(GPIOA, &GPIO_InitStruct);
 8001620:	a904      	add	r1, sp, #16
    GPIO_InitStruct.Pin = GPIO_PIN_8;
 8001622:	f44f 7280 	mov.w	r2, #256	; 0x100
 8001626:	2312      	movs	r3, #18
    HAL_GPIO_Init(GPIOA, &GPIO_InitStruct);
 8001628:	4815      	ldr	r0, [pc, #84]	; (8001680 <HAL_I2C_MspInit+0xcc>)
    GPIO_InitStruct.Alternate = GPIO_AF4_I2C3;
 800162a:	9608      	str	r6, [sp, #32]
    GPIO_InitStruct.Pin = GPIO_PIN_8;
 800162c:	e9cd 2304 	strd	r2, r3, [sp, #16]
 8001630:	e9cd 8906 	strd	r8, r9, [sp, #24]
    HAL_GPIO_Init(GPIOA, &GPIO_InitStruct);
 8001634:	f008 face 	bl	8009bd4 <HAL_GPIO_Init>
    __HAL_RCC_I2C3_CLK_ENABLE();
 8001638:	9403      	str	r4, [sp, #12]
 800163a:	6c2b      	ldr	r3, [r5, #64]	; 0x40
 800163c:	f443 0300 	orr.w	r3, r3, #8388608	; 0x800000
 8001640:	642b      	str	r3, [r5, #64]	; 0x40
 8001642:	6c2b      	ldr	r3, [r5, #64]	; 0x40
 8001644:	f403 0300 	and.w	r3, r3, #8388608	; 0x800000
    HAL_NVIC_SetPriority(I2C3_EV_IRQn, 5, 0);
 8001648:	4622      	mov	r2, r4
 800164a:	2105      	movs	r1, #5
    __HAL_RCC_I2C3_CLK_ENABLE();
 800164c:	9303      	str	r3, [sp, #12]
    HAL_NVIC_SetPriority(I2C3_EV_IRQn, 5, 0);
 800164e:	2048      	movs	r0, #72	; 0x48
    __HAL_RCC_I2C3_CLK_ENABLE();
 8001650:	9b03      	ldr	r3, [sp, #12]
    HAL_NVIC_SetPriority(I2C3_EV_IRQn, 5, 0);
 8001652:	f008 f851 	bl	80096f8 <HAL_NVIC_SetPriority>
    HAL_NVIC_EnableIRQ(I2C3_EV_IRQn);
 8001656:	2048      	movs	r0, #72	; 0x48
 8001658:	f008 f88c 	bl	8009774 <HAL_NVIC_EnableIRQ>
    __HAL_RCC_I2C3_FORCE_RESET();
 800165c:	6a2b      	ldr	r3, [r5, #32]
 800165e:	f443 0300 	orr.w	r3, r3, #8388608	; 0x800000
 8001662:	622b      	str	r3, [r5, #32]
    __HAL_RCC_I2C3_RELEASE_RESET(); 
 8001664:	6a2b      	ldr	r3, [r5, #32]
 8001666:	f423 0300 	bic.w	r3, r3, #8388608	; 0x800000
 800166a:	622b      	str	r3, [r5, #32]
}
 800166c:	b00a      	add	sp, #40	; 0x28
 800166e:	e8bd 8370 	ldmia.w	sp!, {r4, r5, r6, r8, r9, pc}
 8001672:	bf00      	nop
 8001674:	40005c00 	.word	0x40005c00
 8001678:	40023800 	.word	0x40023800
 800167c:	40020800 	.word	0x40020800
 8001680:	40020000 	.word	0x40020000

08001684 <HAL_LTDC_MspInit>:
* This function configures the hardware resources used in this example
* @param hltdc: LTDC handle pointer
* @retval None
*/
void HAL_LTDC_MspInit(LTDC_HandleTypeDef* hltdc)
{
 8001684:	e92d 41f0 	stmdb	sp!, {r4, r5, r6, r7, r8, lr}
 8001688:	4604      	mov	r4, r0
 800168a:	b09a      	sub	sp, #104	; 0x68
  GPIO_InitTypeDef GPIO_InitStruct = {0};
 800168c:	2100      	movs	r1, #0
  RCC_PeriphCLKInitTypeDef PeriphClkInitStruct = {0};
 800168e:	2230      	movs	r2, #48	; 0x30
 8001690:	a80e      	add	r0, sp, #56	; 0x38
  GPIO_InitTypeDef GPIO_InitStruct = {0};
 8001692:	e9cd 1108 	strd	r1, r1, [sp, #32]
 8001696:	e9cd 110a 	strd	r1, r1, [sp, #40]	; 0x28
 800169a:	910c      	str	r1, [sp, #48]	; 0x30
  RCC_PeriphCLKInitTypeDef PeriphClkInitStruct = {0};
 800169c:	f02a f865 	bl	802b76a <memset>
  if(hltdc->Instance==LTDC)
 80016a0:	4b67      	ldr	r3, [pc, #412]	; (8001840 <HAL_LTDC_MspInit+0x1bc>)
 80016a2:	6822      	ldr	r2, [r4, #0]
 80016a4:	429a      	cmp	r2, r3
 80016a6:	d002      	beq.n	80016ae <HAL_LTDC_MspInit+0x2a>
  /* USER CODE BEGIN LTDC_MspInit 1 */

  /* USER CODE END LTDC_MspInit 1 */
  }

}
 80016a8:	b01a      	add	sp, #104	; 0x68
 80016aa:	e8bd 81f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, pc}
    PeriphClkInitStruct.PLLSAI.PLLSAIN = 192;
 80016ae:	23c0      	movs	r3, #192	; 0xc0
    PeriphClkInitStruct.PeriphClockSelection = RCC_PERIPHCLK_LTDC;
 80016b0:	2108      	movs	r1, #8
    PeriphClkInitStruct.PLLSAI.PLLSAIR = 4;
 80016b2:	2204      	movs	r2, #4
    PeriphClkInitStruct.PLLSAI.PLLSAIN = 192;
 80016b4:	9312      	str	r3, [sp, #72]	; 0x48
    if (HAL_RCCEx_PeriphCLKConfig(&PeriphClkInitStruct) != HAL_OK)
 80016b6:	a80e      	add	r0, sp, #56	; 0x38
    PeriphClkInitStruct.PLLSAIDivR = RCC_PLLSAIDIVR_8;
 80016b8:	f44f 3300 	mov.w	r3, #131072	; 0x20000
    PeriphClkInitStruct.PeriphClockSelection = RCC_PERIPHCLK_LTDC;
 80016bc:	910e      	str	r1, [sp, #56]	; 0x38
    PeriphClkInitStruct.PLLSAI.PLLSAIR = 4;
 80016be:	9214      	str	r2, [sp, #80]	; 0x50
    PeriphClkInitStruct.PLLSAIDivR = RCC_PLLSAIDIVR_8;
 80016c0:	9317      	str	r3, [sp, #92]	; 0x5c
    if (HAL_RCCEx_PeriphCLKConfig(&PeriphClkInitStruct) != HAL_OK)
 80016c2:	f00a fcf1 	bl	800c0a8 <HAL_RCCEx_PeriphCLKConfig>
 80016c6:	2800      	cmp	r0, #0
 80016c8:	f040 80b7 	bne.w	800183a <HAL_LTDC_MspInit+0x1b6>
    __HAL_RCC_LTDC_CLK_ENABLE();
 80016cc:	4b5d      	ldr	r3, [pc, #372]	; (8001844 <HAL_LTDC_MspInit+0x1c0>)
    HAL_GPIO_Init(GPIOF, &GPIO_InitStruct);
 80016ce:	485e      	ldr	r0, [pc, #376]	; (8001848 <HAL_LTDC_MspInit+0x1c4>)
    __HAL_RCC_LTDC_CLK_ENABLE();
 80016d0:	2400      	movs	r4, #0
 80016d2:	9401      	str	r4, [sp, #4]
 80016d4:	6c5a      	ldr	r2, [r3, #68]	; 0x44
 80016d6:	f042 6280 	orr.w	r2, r2, #67108864	; 0x4000000
 80016da:	645a      	str	r2, [r3, #68]	; 0x44
 80016dc:	6c5a      	ldr	r2, [r3, #68]	; 0x44
 80016de:	f002 6280 	and.w	r2, r2, #67108864	; 0x4000000
 80016e2:	9201      	str	r2, [sp, #4]
 80016e4:	9a01      	ldr	r2, [sp, #4]
    __HAL_RCC_GPIOF_CLK_ENABLE();
 80016e6:	9402      	str	r4, [sp, #8]
 80016e8:	6b1a      	ldr	r2, [r3, #48]	; 0x30
 80016ea:	f042 0220 	orr.w	r2, r2, #32
 80016ee:	631a      	str	r2, [r3, #48]	; 0x30
 80016f0:	6b1a      	ldr	r2, [r3, #48]	; 0x30
 80016f2:	f002 0220 	and.w	r2, r2, #32
 80016f6:	9202      	str	r2, [sp, #8]
 80016f8:	9a02      	ldr	r2, [sp, #8]
    __HAL_RCC_GPIOA_CLK_ENABLE();
 80016fa:	9403      	str	r4, [sp, #12]
 80016fc:	6b1a      	ldr	r2, [r3, #48]	; 0x30
 80016fe:	f042 0201 	orr.w	r2, r2, #1
 8001702:	631a      	str	r2, [r3, #48]	; 0x30
 8001704:	6b1a      	ldr	r2, [r3, #48]	; 0x30
 8001706:	f002 0201 	and.w	r2, r2, #1
 800170a:	9203      	str	r2, [sp, #12]
 800170c:	9a03      	ldr	r2, [sp, #12]
    __HAL_RCC_GPIOB_CLK_ENABLE();
 800170e:	9404      	str	r4, [sp, #16]
 8001710:	6b1a      	ldr	r2, [r3, #48]	; 0x30
 8001712:	f042 0202 	orr.w	r2, r2, #2
 8001716:	631a      	str	r2, [r3, #48]	; 0x30
 8001718:	6b1a      	ldr	r2, [r3, #48]	; 0x30
 800171a:	f002 0202 	and.w	r2, r2, #2
 800171e:	9204      	str	r2, [sp, #16]
 8001720:	9a04      	ldr	r2, [sp, #16]
    __HAL_RCC_GPIOG_CLK_ENABLE();
 8001722:	9405      	str	r4, [sp, #20]
 8001724:	6b1a      	ldr	r2, [r3, #48]	; 0x30
 8001726:	f042 0240 	orr.w	r2, r2, #64	; 0x40
 800172a:	631a      	str	r2, [r3, #48]	; 0x30
 800172c:	6b1a      	ldr	r2, [r3, #48]	; 0x30
 800172e:	f002 0240 	and.w	r2, r2, #64	; 0x40
 8001732:	9205      	str	r2, [sp, #20]
 8001734:	9a05      	ldr	r2, [sp, #20]
    __HAL_RCC_GPIOC_CLK_ENABLE();
 8001736:	9406      	str	r4, [sp, #24]
 8001738:	6b1a      	ldr	r2, [r3, #48]	; 0x30
 800173a:	f042 0204 	orr.w	r2, r2, #4
 800173e:	631a      	str	r2, [r3, #48]	; 0x30
 8001740:	6b1a      	ldr	r2, [r3, #48]	; 0x30
 8001742:	f002 0204 	and.w	r2, r2, #4
 8001746:	9206      	str	r2, [sp, #24]
 8001748:	9a06      	ldr	r2, [sp, #24]
    __HAL_RCC_GPIOD_CLK_ENABLE();
 800174a:	9407      	str	r4, [sp, #28]
 800174c:	6b1a      	ldr	r2, [r3, #48]	; 0x30
 800174e:	f042 0208 	orr.w	r2, r2, #8
 8001752:	631a      	str	r2, [r3, #48]	; 0x30
 8001754:	6b1b      	ldr	r3, [r3, #48]	; 0x30
 8001756:	f003 0308 	and.w	r3, r3, #8
    GPIO_InitStruct.Pin = GPIO_PIN_10;
 800175a:	2600      	movs	r6, #0
 800175c:	2702      	movs	r7, #2
    GPIO_InitStruct.Alternate = GPIO_AF14_LTDC;
 800175e:	250e      	movs	r5, #14
    __HAL_RCC_GPIOD_CLK_ENABLE();
 8001760:	9307      	str	r3, [sp, #28]
    HAL_GPIO_Init(GPIOF, &GPIO_InitStruct);
 8001762:	a908      	add	r1, sp, #32
    GPIO_InitStruct.Pin = GPIO_PIN_10;
 8001764:	f44f 6280 	mov.w	r2, #1024	; 0x400
 8001768:	2302      	movs	r3, #2
 800176a:	e9cd 2308 	strd	r2, r3, [sp, #32]
 800176e:	e9cd 670a 	strd	r6, r7, [sp, #40]	; 0x28
    __HAL_RCC_GPIOD_CLK_ENABLE();
 8001772:	9b07      	ldr	r3, [sp, #28]
    GPIO_InitStruct.Alternate = GPIO_AF14_LTDC;
 8001774:	950c      	str	r5, [sp, #48]	; 0x30
    HAL_GPIO_Init(GPIOF, &GPIO_InitStruct);
 8001776:	f008 fa2d 	bl	8009bd4 <HAL_GPIO_Init>
    HAL_GPIO_Init(GPIOA, &GPIO_InitStruct);
 800177a:	a908      	add	r1, sp, #32
    GPIO_InitStruct.Pin = GPIO_PIN_3|GPIO_PIN_4|GPIO_PIN_6|GPIO_PIN_11
 800177c:	f641 0258 	movw	r2, #6232	; 0x1858
 8001780:	2302      	movs	r3, #2
    HAL_GPIO_Init(GPIOA, &GPIO_InitStruct);
 8001782:	4832      	ldr	r0, [pc, #200]	; (800184c <HAL_LTDC_MspInit+0x1c8>)
    GPIO_InitStruct.Alternate = GPIO_AF14_LTDC;
 8001784:	950c      	str	r5, [sp, #48]	; 0x30
    GPIO_InitStruct.Pin = GPIO_PIN_3|GPIO_PIN_4|GPIO_PIN_6|GPIO_PIN_11
 8001786:	e9cd 2308 	strd	r2, r3, [sp, #32]
    GPIO_InitStruct.Alternate = GPIO_AF9_LTDC;
 800178a:	f04f 0809 	mov.w	r8, #9
    GPIO_InitStruct.Pin = GPIO_PIN_3|GPIO_PIN_4|GPIO_PIN_6|GPIO_PIN_11
 800178e:	e9cd 670a 	strd	r6, r7, [sp, #40]	; 0x28
    HAL_GPIO_Init(GPIOA, &GPIO_InitStruct);
 8001792:	f008 fa1f 	bl	8009bd4 <HAL_GPIO_Init>
    HAL_GPIO_Init(GPIOB, &GPIO_InitStruct);
 8001796:	a908      	add	r1, sp, #32
    GPIO_InitStruct.Pin = GPIO_PIN_0|GPIO_PIN_1;
 8001798:	2203      	movs	r2, #3
 800179a:	2302      	movs	r3, #2
    HAL_GPIO_Init(GPIOB, &GPIO_InitStruct);
 800179c:	482c      	ldr	r0, [pc, #176]	; (8001850 <HAL_LTDC_MspInit+0x1cc>)
    GPIO_InitStruct.Alternate = GPIO_AF9_LTDC;
 800179e:	f8cd 8030 	str.w	r8, [sp, #48]	; 0x30
    GPIO_InitStruct.Pin = GPIO_PIN_0|GPIO_PIN_1;
 80017a2:	e9cd 2308 	strd	r2, r3, [sp, #32]
 80017a6:	e9cd 670a 	strd	r6, r7, [sp, #40]	; 0x28
    HAL_GPIO_Init(GPIOB, &GPIO_InitStruct);
 80017aa:	f008 fa13 	bl	8009bd4 <HAL_GPIO_Init>
    HAL_GPIO_Init(GPIOB, &GPIO_InitStruct);
 80017ae:	a908      	add	r1, sp, #32
    GPIO_InitStruct.Pin = GPIO_PIN_10|GPIO_PIN_11|GPIO_PIN_8|GPIO_PIN_9;
 80017b0:	f44f 6270 	mov.w	r2, #3840	; 0xf00
 80017b4:	2302      	movs	r3, #2
    HAL_GPIO_Init(GPIOB, &GPIO_InitStruct);
 80017b6:	4826      	ldr	r0, [pc, #152]	; (8001850 <HAL_LTDC_MspInit+0x1cc>)
    GPIO_InitStruct.Alternate = GPIO_AF14_LTDC;
 80017b8:	950c      	str	r5, [sp, #48]	; 0x30
    GPIO_InitStruct.Pin = GPIO_PIN_10|GPIO_PIN_11|GPIO_PIN_8|GPIO_PIN_9;
 80017ba:	e9cd 2308 	strd	r2, r3, [sp, #32]
 80017be:	e9cd 670a 	strd	r6, r7, [sp, #40]	; 0x28
    HAL_GPIO_Init(GPIOB, &GPIO_InitStruct);
 80017c2:	f008 fa07 	bl	8009bd4 <HAL_GPIO_Init>
    HAL_GPIO_Init(GPIOG, &GPIO_InitStruct);
 80017c6:	a908      	add	r1, sp, #32
    GPIO_InitStruct.Pin = GPIO_PIN_6|GPIO_PIN_7|GPIO_PIN_11;
 80017c8:	f44f 620c 	mov.w	r2, #2240	; 0x8c0
 80017cc:	2302      	movs	r3, #2
    HAL_GPIO_Init(GPIOG, &GPIO_InitStruct);
 80017ce:	4821      	ldr	r0, [pc, #132]	; (8001854 <HAL_LTDC_MspInit+0x1d0>)
    GPIO_InitStruct.Alternate = GPIO_AF14_LTDC;
 80017d0:	950c      	str	r5, [sp, #48]	; 0x30
    GPIO_InitStruct.Pin = GPIO_PIN_6|GPIO_PIN_7|GPIO_PIN_11;
 80017d2:	e9cd 2308 	strd	r2, r3, [sp, #32]
 80017d6:	e9cd 670a 	strd	r6, r7, [sp, #40]	; 0x28
    HAL_GPIO_Init(GPIOG, &GPIO_InitStruct);
 80017da:	f008 f9fb 	bl	8009bd4 <HAL_GPIO_Init>
    HAL_GPIO_Init(GPIOC, &GPIO_InitStruct);
 80017de:	a908      	add	r1, sp, #32
    GPIO_InitStruct.Pin = GPIO_PIN_6|GPIO_PIN_7;
 80017e0:	22c0      	movs	r2, #192	; 0xc0
 80017e2:	2302      	movs	r3, #2
    HAL_GPIO_Init(GPIOC, &GPIO_InitStruct);
 80017e4:	481c      	ldr	r0, [pc, #112]	; (8001858 <HAL_LTDC_MspInit+0x1d4>)
    GPIO_InitStruct.Alternate = GPIO_AF14_LTDC;
 80017e6:	950c      	str	r5, [sp, #48]	; 0x30
    GPIO_InitStruct.Pin = GPIO_PIN_6|GPIO_PIN_7;
 80017e8:	e9cd 2308 	strd	r2, r3, [sp, #32]
 80017ec:	e9cd 670a 	strd	r6, r7, [sp, #40]	; 0x28
    HAL_GPIO_Init(GPIOC, &GPIO_InitStruct);
 80017f0:	f008 f9f0 	bl	8009bd4 <HAL_GPIO_Init>
    HAL_GPIO_Init(GPIOD, &GPIO_InitStruct);
 80017f4:	a908      	add	r1, sp, #32
    GPIO_InitStruct.Pin = GPIO_PIN_3;
 80017f6:	2208      	movs	r2, #8
 80017f8:	2302      	movs	r3, #2
    HAL_GPIO_Init(GPIOD, &GPIO_InitStruct);
 80017fa:	4818      	ldr	r0, [pc, #96]	; (800185c <HAL_LTDC_MspInit+0x1d8>)
    GPIO_InitStruct.Alternate = GPIO_AF14_LTDC;
 80017fc:	950c      	str	r5, [sp, #48]	; 0x30
    GPIO_InitStruct.Pin = GPIO_PIN_3;
 80017fe:	e9cd 2308 	strd	r2, r3, [sp, #32]
 8001802:	e9cd 670a 	strd	r6, r7, [sp, #40]	; 0x28
    HAL_GPIO_Init(GPIOD, &GPIO_InitStruct);
 8001806:	f008 f9e5 	bl	8009bd4 <HAL_GPIO_Init>
    GPIO_InitStruct.Pin = GPIO_PIN_10|GPIO_PIN_12;
 800180a:	2302      	movs	r3, #2
    HAL_GPIO_Init(GPIOG, &GPIO_InitStruct);
 800180c:	a908      	add	r1, sp, #32
    GPIO_InitStruct.Pin = GPIO_PIN_10|GPIO_PIN_12;
 800180e:	f44f 52a0 	mov.w	r2, #5120	; 0x1400
    HAL_GPIO_Init(GPIOG, &GPIO_InitStruct);
 8001812:	4810      	ldr	r0, [pc, #64]	; (8001854 <HAL_LTDC_MspInit+0x1d0>)
    GPIO_InitStruct.Alternate = GPIO_AF9_LTDC;
 8001814:	f8cd 8030 	str.w	r8, [sp, #48]	; 0x30
    GPIO_InitStruct.Pin = GPIO_PIN_10|GPIO_PIN_12;
 8001818:	e9cd 2308 	strd	r2, r3, [sp, #32]
 800181c:	e9cd 670a 	strd	r6, r7, [sp, #40]	; 0x28
    HAL_GPIO_Init(GPIOG, &GPIO_InitStruct);
 8001820:	f008 f9d8 	bl	8009bd4 <HAL_GPIO_Init>
    HAL_NVIC_SetPriority(LTDC_IRQn, 5, 0);
 8001824:	4622      	mov	r2, r4
 8001826:	2105      	movs	r1, #5
 8001828:	2058      	movs	r0, #88	; 0x58
 800182a:	f007 ff65 	bl	80096f8 <HAL_NVIC_SetPriority>
    HAL_NVIC_EnableIRQ(LTDC_IRQn);
 800182e:	2058      	movs	r0, #88	; 0x58
 8001830:	f007 ffa0 	bl	8009774 <HAL_NVIC_EnableIRQ>
}
 8001834:	b01a      	add	sp, #104	; 0x68
 8001836:	e8bd 81f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, pc}
      Error_Handler();
 800183a:	f7ff fd39 	bl	80012b0 <Error_Handler>
 800183e:	e745      	b.n	80016cc <HAL_LTDC_MspInit+0x48>
 8001840:	40016800 	.word	0x40016800
 8001844:	40023800 	.word	0x40023800
 8001848:	40021400 	.word	0x40021400
 800184c:	40020000 	.word	0x40020000
 8001850:	40020400 	.word	0x40020400
 8001854:	40021800 	.word	0x40021800
 8001858:	40020800 	.word	0x40020800
 800185c:	40020c00 	.word	0x40020c00

08001860 <HAL_SPI_MspInit>:
* This function configures the hardware resources used in this example
* @param hspi: SPI handle pointer
* @retval None
*/
void HAL_SPI_MspInit(SPI_HandleTypeDef* hspi)
{
 8001860:	b510      	push	{r4, lr}
  GPIO_InitTypeDef GPIO_InitStruct = {0};
  if(hspi->Instance==SPI5)
 8001862:	4a1b      	ldr	r2, [pc, #108]	; (80018d0 <HAL_SPI_MspInit+0x70>)
 8001864:	6801      	ldr	r1, [r0, #0]
{
 8001866:	b088      	sub	sp, #32
  GPIO_InitTypeDef GPIO_InitStruct = {0};
 8001868:	2300      	movs	r3, #0
  if(hspi->Instance==SPI5)
 800186a:	4291      	cmp	r1, r2
  GPIO_InitTypeDef GPIO_InitStruct = {0};
 800186c:	e9cd 3302 	strd	r3, r3, [sp, #8]
 8001870:	e9cd 3304 	strd	r3, r3, [sp, #16]
 8001874:	9306      	str	r3, [sp, #24]
  if(hspi->Instance==SPI5)
 8001876:	d001      	beq.n	800187c <HAL_SPI_MspInit+0x1c>
  /* USER CODE BEGIN SPI5_MspInit 1 */

  /* USER CODE END SPI5_MspInit 1 */
  }

}
 8001878:	b008      	add	sp, #32
 800187a:	bd10      	pop	{r4, pc}
    __HAL_RCC_SPI5_CLK_ENABLE();
 800187c:	f502 4268 	add.w	r2, r2, #59392	; 0xe800
 8001880:	9300      	str	r3, [sp, #0]
 8001882:	6c50      	ldr	r0, [r2, #68]	; 0x44
 8001884:	f440 1080 	orr.w	r0, r0, #1048576	; 0x100000
 8001888:	6450      	str	r0, [r2, #68]	; 0x44
 800188a:	6c50      	ldr	r0, [r2, #68]	; 0x44
 800188c:	f400 1080 	and.w	r0, r0, #1048576	; 0x100000
 8001890:	9000      	str	r0, [sp, #0]
 8001892:	9800      	ldr	r0, [sp, #0]
    __HAL_RCC_GPIOF_CLK_ENABLE();
 8001894:	9301      	str	r3, [sp, #4]
 8001896:	6b13      	ldr	r3, [r2, #48]	; 0x30
    HAL_GPIO_Init(GPIOF, &GPIO_InitStruct);
 8001898:	480e      	ldr	r0, [pc, #56]	; (80018d4 <HAL_SPI_MspInit+0x74>)
    __HAL_RCC_GPIOF_CLK_ENABLE();
 800189a:	f043 0320 	orr.w	r3, r3, #32
 800189e:	6313      	str	r3, [r2, #48]	; 0x30
 80018a0:	6b13      	ldr	r3, [r2, #48]	; 0x30
    GPIO_InitStruct.Pin = GPIO_PIN_7|GPIO_PIN_8|GPIO_PIN_9;
 80018a2:	ed9f 7b09 	vldr	d7, [pc, #36]	; 80018c8 <HAL_SPI_MspInit+0x68>
    __HAL_RCC_GPIOF_CLK_ENABLE();
 80018a6:	f003 0320 	and.w	r3, r3, #32
 80018aa:	9301      	str	r3, [sp, #4]
    GPIO_InitStruct.Speed = GPIO_SPEED_FREQ_VERY_HIGH;
 80018ac:	2203      	movs	r2, #3
    GPIO_InitStruct.Alternate = GPIO_AF5_SPI5;
 80018ae:	2305      	movs	r3, #5
    HAL_GPIO_Init(GPIOF, &GPIO_InitStruct);
 80018b0:	a902      	add	r1, sp, #8
    GPIO_InitStruct.Pin = GPIO_PIN_7|GPIO_PIN_8|GPIO_PIN_9;
 80018b2:	ed8d 7b02 	vstr	d7, [sp, #8]
    GPIO_InitStruct.Alternate = GPIO_AF5_SPI5;
 80018b6:	e9cd 2305 	strd	r2, r3, [sp, #20]
    __HAL_RCC_GPIOF_CLK_ENABLE();
 80018ba:	9c01      	ldr	r4, [sp, #4]
    HAL_GPIO_Init(GPIOF, &GPIO_InitStruct);
 80018bc:	f008 f98a 	bl	8009bd4 <HAL_GPIO_Init>
}
 80018c0:	b008      	add	sp, #32
 80018c2:	bd10      	pop	{r4, pc}
 80018c4:	f3af 8000 	nop.w
 80018c8:	00000380 	.word	0x00000380
 80018cc:	00000002 	.word	0x00000002
 80018d0:	40015000 	.word	0x40015000
 80018d4:	40021400 	.word	0x40021400

080018d8 <HAL_TIM_Base_MspInit>:
* This function configures the hardware resources used in this example
* @param htim_base: TIM_Base handle pointer
* @retval None
*/
void HAL_TIM_Base_MspInit(TIM_HandleTypeDef* htim_base)
{
 80018d8:	b500      	push	{lr}
  if(htim_base->Instance==TIM1)
 80018da:	4a21      	ldr	r2, [pc, #132]	; (8001960 <HAL_TIM_Base_MspInit+0x88>)
 80018dc:	6803      	ldr	r3, [r0, #0]
 80018de:	4293      	cmp	r3, r2
{
 80018e0:	b085      	sub	sp, #20
  if(htim_base->Instance==TIM1)
 80018e2:	d008      	beq.n	80018f6 <HAL_TIM_Base_MspInit+0x1e>
    __HAL_RCC_TIM1_CLK_ENABLE();
  /* USER CODE BEGIN TIM1_MspInit 1 */

  /* USER CODE END TIM1_MspInit 1 */
  }
  else if(htim_base->Instance==TIM2)
 80018e4:	f1b3 4f80 	cmp.w	r3, #1073741824	; 0x40000000
 80018e8:	d023      	beq.n	8001932 <HAL_TIM_Base_MspInit+0x5a>
    HAL_NVIC_EnableIRQ(TIM2_IRQn);
  /* USER CODE BEGIN TIM2_MspInit 1 */

  /* USER CODE END TIM2_MspInit 1 */
  }
  else if(htim_base->Instance==TIM3)
 80018ea:	4a1e      	ldr	r2, [pc, #120]	; (8001964 <HAL_TIM_Base_MspInit+0x8c>)
 80018ec:	4293      	cmp	r3, r2
 80018ee:	d011      	beq.n	8001914 <HAL_TIM_Base_MspInit+0x3c>
  /* USER CODE BEGIN TIM3_MspInit 1 */

  /* USER CODE END TIM3_MspInit 1 */
  }

}
 80018f0:	b005      	add	sp, #20
 80018f2:	f85d fb04 	ldr.w	pc, [sp], #4
    __HAL_RCC_TIM1_CLK_ENABLE();
 80018f6:	4b1c      	ldr	r3, [pc, #112]	; (8001968 <HAL_TIM_Base_MspInit+0x90>)
 80018f8:	2200      	movs	r2, #0
 80018fa:	9201      	str	r2, [sp, #4]
 80018fc:	6c5a      	ldr	r2, [r3, #68]	; 0x44
 80018fe:	f042 0201 	orr.w	r2, r2, #1
 8001902:	645a      	str	r2, [r3, #68]	; 0x44
 8001904:	6c5b      	ldr	r3, [r3, #68]	; 0x44
 8001906:	f003 0301 	and.w	r3, r3, #1
 800190a:	9301      	str	r3, [sp, #4]
 800190c:	9b01      	ldr	r3, [sp, #4]
}
 800190e:	b005      	add	sp, #20
 8001910:	f85d fb04 	ldr.w	pc, [sp], #4
    __HAL_RCC_TIM3_CLK_ENABLE();
 8001914:	4b14      	ldr	r3, [pc, #80]	; (8001968 <HAL_TIM_Base_MspInit+0x90>)
 8001916:	2200      	movs	r2, #0
 8001918:	9203      	str	r2, [sp, #12]
 800191a:	6c1a      	ldr	r2, [r3, #64]	; 0x40
 800191c:	f042 0202 	orr.w	r2, r2, #2
 8001920:	641a      	str	r2, [r3, #64]	; 0x40
 8001922:	6c1b      	ldr	r3, [r3, #64]	; 0x40
 8001924:	f003 0302 	and.w	r3, r3, #2
 8001928:	9303      	str	r3, [sp, #12]
 800192a:	9b03      	ldr	r3, [sp, #12]
}
 800192c:	b005      	add	sp, #20
 800192e:	f85d fb04 	ldr.w	pc, [sp], #4
    __HAL_RCC_TIM2_CLK_ENABLE();
 8001932:	f503 330e 	add.w	r3, r3, #145408	; 0x23800
 8001936:	2200      	movs	r2, #0
 8001938:	9202      	str	r2, [sp, #8]
 800193a:	6c19      	ldr	r1, [r3, #64]	; 0x40
 800193c:	f041 0101 	orr.w	r1, r1, #1
 8001940:	6419      	str	r1, [r3, #64]	; 0x40
 8001942:	6c1b      	ldr	r3, [r3, #64]	; 0x40
 8001944:	f003 0301 	and.w	r3, r3, #1
 8001948:	9302      	str	r3, [sp, #8]
    HAL_NVIC_SetPriority(TIM2_IRQn, 5, 0);
 800194a:	201c      	movs	r0, #28
 800194c:	2105      	movs	r1, #5
    __HAL_RCC_TIM2_CLK_ENABLE();
 800194e:	9b02      	ldr	r3, [sp, #8]
    HAL_NVIC_SetPriority(TIM2_IRQn, 5, 0);
 8001950:	f007 fed2 	bl	80096f8 <HAL_NVIC_SetPriority>
    HAL_NVIC_EnableIRQ(TIM2_IRQn);
 8001954:	201c      	movs	r0, #28
}
 8001956:	b005      	add	sp, #20
 8001958:	f85d eb04 	ldr.w	lr, [sp], #4
    HAL_NVIC_EnableIRQ(TIM2_IRQn);
 800195c:	f007 bf0a 	b.w	8009774 <HAL_NVIC_EnableIRQ>
 8001960:	40010000 	.word	0x40010000
 8001964:	40000400 	.word	0x40000400
 8001968:	40023800 	.word	0x40023800

0800196c <HAL_SDRAM_MspInit>:
  /* USER CODE BEGIN FMC_MspInit 1 */

  /* USER CODE END FMC_MspInit 1 */
}

void HAL_SDRAM_MspInit(SDRAM_HandleTypeDef* hsdram){
 800196c:	b5f0      	push	{r4, r5, r6, r7, lr}
  if (FMC_Initialized) {
 800196e:	4b2b      	ldr	r3, [pc, #172]	; (8001a1c <HAL_SDRAM_MspInit+0xb0>)
void HAL_SDRAM_MspInit(SDRAM_HandleTypeDef* hsdram){
 8001970:	b089      	sub	sp, #36	; 0x24
  if (FMC_Initialized) {
 8001972:	681c      	ldr	r4, [r3, #0]
  GPIO_InitTypeDef GPIO_InitStruct ={0};
 8001974:	2200      	movs	r2, #0
 8001976:	9204      	str	r2, [sp, #16]
  if (FMC_Initialized) {
 8001978:	2c00      	cmp	r4, #0
 800197a:	d14c      	bne.n	8001a16 <HAL_SDRAM_MspInit+0xaa>
  FMC_Initialized = 1;
 800197c:	2701      	movs	r7, #1
  __HAL_RCC_FMC_CLK_ENABLE();
 800197e:	4a28      	ldr	r2, [pc, #160]	; (8001a20 <HAL_SDRAM_MspInit+0xb4>)
 8001980:	9401      	str	r4, [sp, #4]
  FMC_Initialized = 1;
 8001982:	601f      	str	r7, [r3, #0]
  __HAL_RCC_FMC_CLK_ENABLE();
 8001984:	6b93      	ldr	r3, [r2, #56]	; 0x38
  HAL_GPIO_Init(GPIOF, &GPIO_InitStruct);
 8001986:	4827      	ldr	r0, [pc, #156]	; (8001a24 <HAL_SDRAM_MspInit+0xb8>)
  __HAL_RCC_FMC_CLK_ENABLE();
 8001988:	433b      	orrs	r3, r7
 800198a:	6393      	str	r3, [r2, #56]	; 0x38
 800198c:	6b93      	ldr	r3, [r2, #56]	; 0x38
 800198e:	403b      	ands	r3, r7
  GPIO_InitStruct.Speed = GPIO_SPEED_FREQ_VERY_HIGH;
 8001990:	2603      	movs	r6, #3
  GPIO_InitStruct.Alternate = GPIO_AF12_FMC;
 8001992:	250c      	movs	r5, #12
  GPIO_InitStruct.Pin = GPIO_PIN_0|GPIO_PIN_1|GPIO_PIN_2|GPIO_PIN_3
 8001994:	f64f 023f 	movw	r2, #63551	; 0xf83f
  __HAL_RCC_FMC_CLK_ENABLE();
 8001998:	9301      	str	r3, [sp, #4]
  HAL_GPIO_Init(GPIOF, &GPIO_InitStruct);
 800199a:	a902      	add	r1, sp, #8
  GPIO_InitStruct.Pin = GPIO_PIN_0|GPIO_PIN_1|GPIO_PIN_2|GPIO_PIN_3
 800199c:	2302      	movs	r3, #2
 800199e:	e9cd 2302 	strd	r2, r3, [sp, #8]
  GPIO_InitStruct.Alternate = GPIO_AF12_FMC;
 80019a2:	e9cd 6505 	strd	r6, r5, [sp, #20]
  __HAL_RCC_FMC_CLK_ENABLE();
 80019a6:	9b01      	ldr	r3, [sp, #4]
  HAL_GPIO_Init(GPIOF, &GPIO_InitStruct);
 80019a8:	f008 f914 	bl	8009bd4 <HAL_GPIO_Init>
  HAL_GPIO_Init(GPIOC, &GPIO_InitStruct);
 80019ac:	481e      	ldr	r0, [pc, #120]	; (8001a28 <HAL_SDRAM_MspInit+0xbc>)
  GPIO_InitStruct.Pin = GPIO_PIN_0;
 80019ae:	9702      	str	r7, [sp, #8]
  HAL_GPIO_Init(GPIOC, &GPIO_InitStruct);
 80019b0:	a902      	add	r1, sp, #8
  GPIO_InitStruct.Mode = GPIO_MODE_AF_PP;
 80019b2:	2702      	movs	r7, #2
  GPIO_InitStruct.Pull = GPIO_NOPULL;
 80019b4:	e9cd 7403 	strd	r7, r4, [sp, #12]
  GPIO_InitStruct.Alternate = GPIO_AF12_FMC;
 80019b8:	e9cd 6505 	strd	r6, r5, [sp, #20]
  HAL_GPIO_Init(GPIOC, &GPIO_InitStruct);
 80019bc:	f008 f90a 	bl	8009bd4 <HAL_GPIO_Init>
  GPIO_InitStruct.Pin = GPIO_PIN_0|GPIO_PIN_1|GPIO_PIN_4|GPIO_PIN_5
 80019c0:	f248 1333 	movw	r3, #33075	; 0x8133
  HAL_GPIO_Init(GPIOG, &GPIO_InitStruct);
 80019c4:	4819      	ldr	r0, [pc, #100]	; (8001a2c <HAL_SDRAM_MspInit+0xc0>)
  GPIO_InitStruct.Pin = GPIO_PIN_0|GPIO_PIN_1|GPIO_PIN_4|GPIO_PIN_5
 80019c6:	9302      	str	r3, [sp, #8]
  HAL_GPIO_Init(GPIOG, &GPIO_InitStruct);
 80019c8:	a902      	add	r1, sp, #8
  GPIO_InitStruct.Pull = GPIO_NOPULL;
 80019ca:	e9cd 7403 	strd	r7, r4, [sp, #12]
  GPIO_InitStruct.Alternate = GPIO_AF12_FMC;
 80019ce:	e9cd 6505 	strd	r6, r5, [sp, #20]
  HAL_GPIO_Init(GPIOG, &GPIO_InitStruct);
 80019d2:	f008 f8ff 	bl	8009bd4 <HAL_GPIO_Init>
  GPIO_InitStruct.Pin = GPIO_PIN_7|GPIO_PIN_8|GPIO_PIN_9|GPIO_PIN_10
 80019d6:	f64f 7383 	movw	r3, #65411	; 0xff83
  HAL_GPIO_Init(GPIOE, &GPIO_InitStruct);
 80019da:	4815      	ldr	r0, [pc, #84]	; (8001a30 <HAL_SDRAM_MspInit+0xc4>)
  GPIO_InitStruct.Pin = GPIO_PIN_7|GPIO_PIN_8|GPIO_PIN_9|GPIO_PIN_10
 80019dc:	9302      	str	r3, [sp, #8]
  HAL_GPIO_Init(GPIOE, &GPIO_InitStruct);
 80019de:	a902      	add	r1, sp, #8
  GPIO_InitStruct.Pull = GPIO_NOPULL;
 80019e0:	e9cd 7403 	strd	r7, r4, [sp, #12]
  GPIO_InitStruct.Alternate = GPIO_AF12_FMC;
 80019e4:	e9cd 6505 	strd	r6, r5, [sp, #20]
  HAL_GPIO_Init(GPIOE, &GPIO_InitStruct);
 80019e8:	f008 f8f4 	bl	8009bd4 <HAL_GPIO_Init>
  GPIO_InitStruct.Pin = GPIO_PIN_8|GPIO_PIN_9|GPIO_PIN_10|GPIO_PIN_14
 80019ec:	f24c 7303 	movw	r3, #50947	; 0xc703
  HAL_GPIO_Init(GPIOD, &GPIO_InitStruct);
 80019f0:	4810      	ldr	r0, [pc, #64]	; (8001a34 <HAL_SDRAM_MspInit+0xc8>)
  GPIO_InitStruct.Pin = GPIO_PIN_8|GPIO_PIN_9|GPIO_PIN_10|GPIO_PIN_14
 80019f2:	9302      	str	r3, [sp, #8]
  HAL_GPIO_Init(GPIOD, &GPIO_InitStruct);
 80019f4:	a902      	add	r1, sp, #8
  GPIO_InitStruct.Pull = GPIO_NOPULL;
 80019f6:	e9cd 7403 	strd	r7, r4, [sp, #12]
  GPIO_InitStruct.Alternate = GPIO_AF12_FMC;
 80019fa:	e9cd 6505 	strd	r6, r5, [sp, #20]
  HAL_GPIO_Init(GPIOD, &GPIO_InitStruct);
 80019fe:	f008 f8e9 	bl	8009bd4 <HAL_GPIO_Init>
  GPIO_InitStruct.Pin = GPIO_PIN_5|GPIO_PIN_6;
 8001a02:	2360      	movs	r3, #96	; 0x60
  HAL_GPIO_Init(GPIOB, &GPIO_InitStruct);
 8001a04:	480c      	ldr	r0, [pc, #48]	; (8001a38 <HAL_SDRAM_MspInit+0xcc>)
  GPIO_InitStruct.Mode = GPIO_MODE_AF_PP;
 8001a06:	9703      	str	r7, [sp, #12]
  HAL_GPIO_Init(GPIOB, &GPIO_InitStruct);
 8001a08:	a902      	add	r1, sp, #8
  GPIO_InitStruct.Speed = GPIO_SPEED_FREQ_VERY_HIGH;
 8001a0a:	e9cd 4604 	strd	r4, r6, [sp, #16]
  GPIO_InitStruct.Alternate = GPIO_AF12_FMC;
 8001a0e:	9506      	str	r5, [sp, #24]
  GPIO_InitStruct.Pin = GPIO_PIN_5|GPIO_PIN_6;
 8001a10:	9302      	str	r3, [sp, #8]
  HAL_GPIO_Init(GPIOB, &GPIO_InitStruct);
 8001a12:	f008 f8df 	bl	8009bd4 <HAL_GPIO_Init>
  /* USER CODE END SDRAM_MspInit 0 */
  HAL_FMC_MspInit();
  /* USER CODE BEGIN SDRAM_MspInit 1 */

  /* USER CODE END SDRAM_MspInit 1 */
}
 8001a16:	b009      	add	sp, #36	; 0x24
 8001a18:	bdf0      	pop	{r4, r5, r6, r7, pc}
 8001a1a:	bf00      	nop
 8001a1c:	20000814 	.word	0x20000814
 8001a20:	40023800 	.word	0x40023800
 8001a24:	40021400 	.word	0x40021400
 8001a28:	40020800 	.word	0x40020800
 8001a2c:	40021800 	.word	0x40021800
 8001a30:	40021000 	.word	0x40021000
 8001a34:	40020c00 	.word	0x40020c00
 8001a38:	40020400 	.word	0x40020400

08001a3c <HAL_InitTick>:
  *         reset by HAL_Init() or at any time when clock is configured, by HAL_RCC_ClockConfig().
  * @param  TickPriority: Tick interrupt priority.
  * @retval HAL status
  */
HAL_StatusTypeDef HAL_InitTick(uint32_t TickPriority)
{
 8001a3c:	b570      	push	{r4, r5, r6, lr}
 8001a3e:	b088      	sub	sp, #32
  uint32_t              uwPrescalerValue = 0U;
  uint32_t              pFLatency;
  HAL_StatusTypeDef     status;

  /* Enable TIM6 clock */
  __HAL_RCC_TIM6_CLK_ENABLE();
 8001a40:	4b23      	ldr	r3, [pc, #140]	; (8001ad0 <HAL_InitTick+0x94>)
 8001a42:	2200      	movs	r2, #0
 8001a44:	9202      	str	r2, [sp, #8]
 8001a46:	6c1a      	ldr	r2, [r3, #64]	; 0x40
 8001a48:	f042 0210 	orr.w	r2, r2, #16
 8001a4c:	641a      	str	r2, [r3, #64]	; 0x40
 8001a4e:	6c1b      	ldr	r3, [r3, #64]	; 0x40
 8001a50:	f003 0310 	and.w	r3, r3, #16
 8001a54:	9302      	str	r3, [sp, #8]
{
 8001a56:	4605      	mov	r5, r0

  /* Get clock configuration */
  HAL_RCC_GetClockConfig(&clkconfig, &pFLatency);
 8001a58:	a901      	add	r1, sp, #4
 8001a5a:	a803      	add	r0, sp, #12
  __HAL_RCC_TIM6_CLK_ENABLE();
 8001a5c:	9b02      	ldr	r3, [sp, #8]
  HAL_RCC_GetClockConfig(&clkconfig, &pFLatency);
 8001a5e:	f00a fb01 	bl	800c064 <HAL_RCC_GetClockConfig>

  /* Get APB1 prescaler */
  uwAPB1Prescaler = clkconfig.APB1CLKDivider;
  /* Compute TIM6 clock */
  if (uwAPB1Prescaler == RCC_HCLK_DIV1)
 8001a62:	9b06      	ldr	r3, [sp, #24]
 8001a64:	b9d3      	cbnz	r3, 8001a9c <HAL_InitTick+0x60>
  {
    uwTimclock = HAL_RCC_GetPCLK1Freq();
 8001a66:	f00a faed 	bl	800c044 <HAL_RCC_GetPCLK1Freq>
 8001a6a:	4603      	mov	r3, r0
  {
    uwTimclock = 2UL * HAL_RCC_GetPCLK1Freq();
  }

  /* Compute the prescaler value to have TIM6 counter clock equal to 1MHz */
  uwPrescalerValue = (uint32_t) ((uwTimclock / 1000000U) - 1U);
 8001a6c:	4a19      	ldr	r2, [pc, #100]	; (8001ad4 <HAL_InitTick+0x98>)

  /* Initialize TIM6 */
  htim6.Instance = TIM6;
 8001a6e:	4c1a      	ldr	r4, [pc, #104]	; (8001ad8 <HAL_InitTick+0x9c>)
 8001a70:	491a      	ldr	r1, [pc, #104]	; (8001adc <HAL_InitTick+0xa0>)
  uwPrescalerValue = (uint32_t) ((uwTimclock / 1000000U) - 1U);
 8001a72:	fba2 2303 	umull	r2, r3, r2, r3
 8001a76:	0c9b      	lsrs	r3, r3, #18
 8001a78:	3b01      	subs	r3, #1
  + ClockDivision = 0
  + Counter direction = Up
  */
  htim6.Init.Period = (1000000U / 1000U) - 1U;
  htim6.Init.Prescaler = uwPrescalerValue;
  htim6.Init.ClockDivision = 0;
 8001a7a:	2200      	movs	r2, #0
  htim6.Init.Prescaler = uwPrescalerValue;
 8001a7c:	e9c4 1300 	strd	r1, r3, [r4]
  htim6.Init.CounterMode = TIM_COUNTERMODE_UP;
  htim6.Init.AutoReloadPreload = TIM_AUTORELOAD_PRELOAD_DISABLE;

  status = HAL_TIM_Base_Init(&htim6);
 8001a80:	4620      	mov	r0, r4
  htim6.Init.Period = (1000000U / 1000U) - 1U;
 8001a82:	f240 33e7 	movw	r3, #999	; 0x3e7
  htim6.Init.ClockDivision = 0;
 8001a86:	6122      	str	r2, [r4, #16]
  htim6.Init.CounterMode = TIM_COUNTERMODE_UP;
 8001a88:	60a2      	str	r2, [r4, #8]
  htim6.Init.AutoReloadPreload = TIM_AUTORELOAD_PRELOAD_DISABLE;
 8001a8a:	61a2      	str	r2, [r4, #24]
  htim6.Init.Period = (1000000U / 1000U) - 1U;
 8001a8c:	60e3      	str	r3, [r4, #12]
  status = HAL_TIM_Base_Init(&htim6);
 8001a8e:	f00b f919 	bl	800ccc4 <HAL_TIM_Base_Init>
  if (status == HAL_OK)
 8001a92:	4606      	mov	r6, r0
 8001a94:	b130      	cbz	r0, 8001aa4 <HAL_InitTick+0x68>
    }
  }

 /* Return function status */
  return status;
}
 8001a96:	4630      	mov	r0, r6
 8001a98:	b008      	add	sp, #32
 8001a9a:	bd70      	pop	{r4, r5, r6, pc}
    uwTimclock = 2UL * HAL_RCC_GetPCLK1Freq();
 8001a9c:	f00a fad2 	bl	800c044 <HAL_RCC_GetPCLK1Freq>
 8001aa0:	0043      	lsls	r3, r0, #1
 8001aa2:	e7e3      	b.n	8001a6c <HAL_InitTick+0x30>
    status = HAL_TIM_Base_Start_IT(&htim6);
 8001aa4:	4620      	mov	r0, r4
 8001aa6:	f00b f99b 	bl	800cde0 <HAL_TIM_Base_Start_IT>
    if (status == HAL_OK)
 8001aaa:	4606      	mov	r6, r0
 8001aac:	2800      	cmp	r0, #0
 8001aae:	d1f2      	bne.n	8001a96 <HAL_InitTick+0x5a>
        HAL_NVIC_EnableIRQ(TIM6_DAC_IRQn);
 8001ab0:	2036      	movs	r0, #54	; 0x36
 8001ab2:	f007 fe5f 	bl	8009774 <HAL_NVIC_EnableIRQ>
      if (TickPriority < (1UL << __NVIC_PRIO_BITS))
 8001ab6:	2d0f      	cmp	r5, #15
 8001ab8:	d901      	bls.n	8001abe <HAL_InitTick+0x82>
        status = HAL_ERROR;
 8001aba:	2601      	movs	r6, #1
 8001abc:	e7eb      	b.n	8001a96 <HAL_InitTick+0x5a>
        HAL_NVIC_SetPriority(TIM6_DAC_IRQn, TickPriority, 0U);
 8001abe:	4632      	mov	r2, r6
 8001ac0:	4629      	mov	r1, r5
 8001ac2:	2036      	movs	r0, #54	; 0x36
 8001ac4:	f007 fe18 	bl	80096f8 <HAL_NVIC_SetPriority>
        uwTickPrio = TickPriority;
 8001ac8:	4b05      	ldr	r3, [pc, #20]	; (8001ae0 <HAL_InitTick+0xa4>)
 8001aca:	601d      	str	r5, [r3, #0]
 8001acc:	e7e3      	b.n	8001a96 <HAL_InitTick+0x5a>
 8001ace:	bf00      	nop
 8001ad0:	40023800 	.word	0x40023800
 8001ad4:	431bde83 	.word	0x431bde83
 8001ad8:	20000818 	.word	0x20000818
 8001adc:	40001000 	.word	0x40001000
 8001ae0:	20000080 	.word	0x20000080

08001ae4 <NMI_Handler>:

  /* USER CODE END NonMaskableInt_IRQn 0 */
  /* USER CODE BEGIN NonMaskableInt_IRQn 1 */

  /* USER CODE END NonMaskableInt_IRQn 1 */
}
 8001ae4:	4770      	bx	lr
 8001ae6:	bf00      	nop

08001ae8 <HardFault_Handler>:
void HardFault_Handler(void)
{
  /* USER CODE BEGIN HardFault_IRQn 0 */

  /* USER CODE END HardFault_IRQn 0 */
  while (1)
 8001ae8:	e7fe      	b.n	8001ae8 <HardFault_Handler>
 8001aea:	bf00      	nop

08001aec <MemManage_Handler>:
void MemManage_Handler(void)
{
  /* USER CODE BEGIN MemoryManagement_IRQn 0 */

  /* USER CODE END MemoryManagement_IRQn 0 */
  while (1)
 8001aec:	e7fe      	b.n	8001aec <MemManage_Handler>
 8001aee:	bf00      	nop

08001af0 <BusFault_Handler>:
void BusFault_Handler(void)
{
  /* USER CODE BEGIN BusFault_IRQn 0 */

  /* USER CODE END BusFault_IRQn 0 */
  while (1)
 8001af0:	e7fe      	b.n	8001af0 <BusFault_Handler>
 8001af2:	bf00      	nop

08001af4 <UsageFault_Handler>:
void UsageFault_Handler(void)
{
  /* USER CODE BEGIN UsageFault_IRQn 0 */

  /* USER CODE END UsageFault_IRQn 0 */
  while (1)
 8001af4:	e7fe      	b.n	8001af4 <UsageFault_Handler>
 8001af6:	bf00      	nop

08001af8 <DebugMon_Handler>:
 8001af8:	4770      	bx	lr
 8001afa:	bf00      	nop

08001afc <EXTI3_IRQHandler>:

/**
  * @brief This function handles EXTI line3 interrupt.
  */
void EXTI3_IRQHandler(void)
{
 8001afc:	b508      	push	{r3, lr}
  /* USER CODE BEGIN EXTI3_IRQn 0 */

  HAL_Delay(200);
 8001afe:	20c8      	movs	r0, #200	; 0xc8
 8001b00:	f007 fdd6 	bl	80096b0 <HAL_Delay>
  HAL_GPIO_WritePin(GPIOE, GPIO_PIN_5, GPIO_PIN_RESET);
 8001b04:	4804      	ldr	r0, [pc, #16]	; (8001b18 <EXTI3_IRQHandler+0x1c>)
 8001b06:	2200      	movs	r2, #0
 8001b08:	2120      	movs	r1, #32
 8001b0a:	f008 f9a7 	bl	8009e5c <HAL_GPIO_WritePin>
  /* USER CODE END EXTI3_IRQn 0 */
  HAL_GPIO_EXTI_IRQHandler(DEVICE_ON_OFF_TRIGGER_Pin);
  /* USER CODE BEGIN EXTI3_IRQn 1 */

  /* USER CODE END EXTI3_IRQn 1 */
}
 8001b0e:	e8bd 4008 	ldmia.w	sp!, {r3, lr}
  HAL_GPIO_EXTI_IRQHandler(DEVICE_ON_OFF_TRIGGER_Pin);
 8001b12:	2008      	movs	r0, #8
 8001b14:	f008 b9b2 	b.w	8009e7c <HAL_GPIO_EXTI_IRQHandler>
 8001b18:	40021000 	.word	0x40021000

08001b1c <TIM6_DAC_IRQHandler>:
void TIM6_DAC_IRQHandler(void)
{
  /* USER CODE BEGIN TIM6_DAC_IRQn 0 */

  /* USER CODE END TIM6_DAC_IRQn 0 */
  HAL_TIM_IRQHandler(&htim6);
 8001b1c:	4801      	ldr	r0, [pc, #4]	; (8001b24 <TIM6_DAC_IRQHandler+0x8>)
 8001b1e:	f00b badf 	b.w	800d0e0 <HAL_TIM_IRQHandler>
 8001b22:	bf00      	nop
 8001b24:	20000818 	.word	0x20000818

08001b28 <I2C3_EV_IRQHandler>:
void I2C3_EV_IRQHandler(void)
{
  /* USER CODE BEGIN I2C3_EV_IRQn 0 */

  /* USER CODE END I2C3_EV_IRQn 0 */
  HAL_I2C_EV_IRQHandler(&hi2c3);
 8001b28:	4801      	ldr	r0, [pc, #4]	; (8001b30 <I2C3_EV_IRQHandler+0x8>)
 8001b2a:	f009 b907 	b.w	800ad3c <HAL_I2C_EV_IRQHandler>
 8001b2e:	bf00      	nop
 8001b30:	200001b4 	.word	0x200001b4

08001b34 <LTDC_IRQHandler>:
void LTDC_IRQHandler(void)
{
  /* USER CODE BEGIN LTDC_IRQn 0 */

  /* USER CODE END LTDC_IRQn 0 */
  HAL_LTDC_IRQHandler(&hltdc);
 8001b34:	4801      	ldr	r0, [pc, #4]	; (8001b3c <LTDC_IRQHandler+0x8>)
 8001b36:	f009 be7b 	b.w	800b830 <HAL_LTDC_IRQHandler>
 8001b3a:	bf00      	nop
 8001b3c:	20000208 	.word	0x20000208

08001b40 <_getpid>:
}

int _getpid(void)
{
	return 1;
}
 8001b40:	2001      	movs	r0, #1
 8001b42:	4770      	bx	lr

08001b44 <_kill>:

int _kill(int pid, int sig)
{
 8001b44:	b508      	push	{r3, lr}
	errno = EINVAL;
 8001b46:	f029 ff09 	bl	802b95c <__errno>
 8001b4a:	2316      	movs	r3, #22
 8001b4c:	6003      	str	r3, [r0, #0]
	return -1;
}
 8001b4e:	f04f 30ff 	mov.w	r0, #4294967295
 8001b52:	bd08      	pop	{r3, pc}

08001b54 <_exit>:

void _exit (int status)
{
 8001b54:	b508      	push	{r3, lr}
	errno = EINVAL;
 8001b56:	f029 ff01 	bl	802b95c <__errno>
 8001b5a:	2316      	movs	r3, #22
 8001b5c:	6003      	str	r3, [r0, #0]
	_kill(status, -1);
	while (1) {}		/* Make sure we hang here */
 8001b5e:	e7fe      	b.n	8001b5e <_exit+0xa>

08001b60 <_read>:
}

__attribute__((weak)) int _read(int file, char *ptr, int len)
{
 8001b60:	b570      	push	{r4, r5, r6, lr}
	int DataIdx;

	for (DataIdx = 0; DataIdx < len; DataIdx++)
 8001b62:	1e16      	subs	r6, r2, #0
 8001b64:	dd07      	ble.n	8001b76 <_read+0x16>
 8001b66:	460c      	mov	r4, r1
 8001b68:	198d      	adds	r5, r1, r6
	{
		*ptr++ = __io_getchar();
 8001b6a:	f3af 8000 	nop.w
 8001b6e:	f804 0b01 	strb.w	r0, [r4], #1
	for (DataIdx = 0; DataIdx < len; DataIdx++)
 8001b72:	42a5      	cmp	r5, r4
 8001b74:	d1f9      	bne.n	8001b6a <_read+0xa>
	}

return len;
}
 8001b76:	4630      	mov	r0, r6
 8001b78:	bd70      	pop	{r4, r5, r6, pc}
 8001b7a:	bf00      	nop

08001b7c <_write>:

__attribute__((weak)) int _write(int file, char *ptr, int len)
{
 8001b7c:	b570      	push	{r4, r5, r6, lr}
	int DataIdx;

	for (DataIdx = 0; DataIdx < len; DataIdx++)
 8001b7e:	1e16      	subs	r6, r2, #0
 8001b80:	dd07      	ble.n	8001b92 <_write+0x16>
 8001b82:	460c      	mov	r4, r1
 8001b84:	198d      	adds	r5, r1, r6
	{
		__io_putchar(*ptr++);
 8001b86:	f814 0b01 	ldrb.w	r0, [r4], #1
 8001b8a:	f3af 8000 	nop.w
	for (DataIdx = 0; DataIdx < len; DataIdx++)
 8001b8e:	42ac      	cmp	r4, r5
 8001b90:	d1f9      	bne.n	8001b86 <_write+0xa>
	}
	return len;
}
 8001b92:	4630      	mov	r0, r6
 8001b94:	bd70      	pop	{r4, r5, r6, pc}
 8001b96:	bf00      	nop

08001b98 <_close>:

int _close(int file)
{
	return -1;
}
 8001b98:	f04f 30ff 	mov.w	r0, #4294967295
 8001b9c:	4770      	bx	lr
 8001b9e:	bf00      	nop

08001ba0 <_fstat>:


int _fstat(int file, struct stat *st)
{
	st->st_mode = S_IFCHR;
 8001ba0:	f44f 5300 	mov.w	r3, #8192	; 0x2000
 8001ba4:	604b      	str	r3, [r1, #4]
	return 0;
}
 8001ba6:	2000      	movs	r0, #0
 8001ba8:	4770      	bx	lr
 8001baa:	bf00      	nop

08001bac <_isatty>:

int _isatty(int file)
{
	return 1;
}
 8001bac:	2001      	movs	r0, #1
 8001bae:	4770      	bx	lr

08001bb0 <_lseek>:

int _lseek(int file, int ptr, int dir)
{
	return 0;
}
 8001bb0:	2000      	movs	r0, #0
 8001bb2:	4770      	bx	lr

08001bb4 <_sbrk>:
{
	extern char end asm("end");
	static char *heap_end;
	char *prev_heap_end;

	if (heap_end == 0)
 8001bb4:	4a0b      	ldr	r2, [pc, #44]	; (8001be4 <_sbrk+0x30>)
{
 8001bb6:	b508      	push	{r3, lr}
 8001bb8:	4603      	mov	r3, r0
	if (heap_end == 0)
 8001bba:	6810      	ldr	r0, [r2, #0]
 8001bbc:	b128      	cbz	r0, 8001bca <_sbrk+0x16>
		heap_end = &end;

	prev_heap_end = heap_end;
	if (heap_end + incr > stack_ptr)
 8001bbe:	4403      	add	r3, r0
 8001bc0:	4669      	mov	r1, sp
 8001bc2:	428b      	cmp	r3, r1
 8001bc4:	d807      	bhi.n	8001bd6 <_sbrk+0x22>
	{
		errno = ENOMEM;
		return (caddr_t) -1;
	}

	heap_end += incr;
 8001bc6:	6013      	str	r3, [r2, #0]

	return (caddr_t) prev_heap_end;
}
 8001bc8:	bd08      	pop	{r3, pc}
		heap_end = &end;
 8001bca:	4807      	ldr	r0, [pc, #28]	; (8001be8 <_sbrk+0x34>)
 8001bcc:	6010      	str	r0, [r2, #0]
	if (heap_end + incr > stack_ptr)
 8001bce:	4403      	add	r3, r0
 8001bd0:	4669      	mov	r1, sp
 8001bd2:	428b      	cmp	r3, r1
 8001bd4:	d9f7      	bls.n	8001bc6 <_sbrk+0x12>
		errno = ENOMEM;
 8001bd6:	f029 fec1 	bl	802b95c <__errno>
 8001bda:	230c      	movs	r3, #12
 8001bdc:	6003      	str	r3, [r0, #0]
		return (caddr_t) -1;
 8001bde:	f04f 30ff 	mov.w	r0, #4294967295
}
 8001be2:	bd08      	pop	{r3, pc}
 8001be4:	20000860 	.word	0x20000860
 8001be8:	20014458 	.word	0x20014458

08001bec <MX_TouchGFX_PreOSInit>:
/**
 * PreOS Initialization function
 */
void MX_TouchGFX_PreOSInit(void)
{
}
 8001bec:	4770      	bx	lr
 8001bee:	bf00      	nop

08001bf0 <MX_TouchGFX_Init>:

/**
 * Initialize TouchGFX application
 */
void MX_TouchGFX_Init(void)
{
 8001bf0:	b508      	push	{r3, lr}
  // Calling forward to touchgfx_init in C++ domain
  touchgfx_components_init();
 8001bf2:	f000 fbab 	bl	800234c <touchgfx_components_init>
  touchgfx_init();
}
 8001bf6:	e8bd 4008 	ldmia.w	sp!, {r3, lr}
  touchgfx_init();
 8001bfa:	f000 bb33 	b.w	8002264 <touchgfx_init>
 8001bfe:	bf00      	nop

08001c00 <TouchGFX_Task>:
 * TouchGFX application thread
 */
void TouchGFX_Task(void *argument)
{
  // Calling forward to touchgfx_taskEntry in C++ domain
  touchgfx_taskEntry();
 8001c00:	f000 bba6 	b.w	8002350 <touchgfx_taskEntry>

08001c04 <_ZN20STM32TouchControllerD1Ev>:
 * @brief This class specializes TouchController Interface.
 *
 * @sa touchgfx::TouchController
 */

class STM32TouchController : public touchgfx::TouchController
 8001c04:	4770      	bx	lr

08001c06 <_ZN20STM32TouchControllerD0Ev>:
 8001c06:	b510      	push	{r4, lr}
 8001c08:	2104      	movs	r1, #4
 8001c0a:	4604      	mov	r4, r0
 8001c0c:	f028 fd95 	bl	802a73a <_ZdlPvj>
 8001c10:	4620      	mov	r0, r4
 8001c12:	bd10      	pop	{r4, pc}

08001c14 <_Z11BSP_TS_Inittt>:
  * @param  XSize: The maximum X size of the TS area on LCD
  * @param  YSize: The maximum Y size of the TS area on LCD
  * @retval TS_OK: if all initializations are OK. Other value if error.
  */
uint8_t BSP_TS_Init(uint16_t XSize, uint16_t YSize)
{
 8001c14:	b538      	push	{r3, r4, r5, lr}
    uint8_t ret = TS_ERROR;

    /* Initialize x and y positions boundaries */
    TsXBoundary = XSize;
 8001c16:	4b0c      	ldr	r3, [pc, #48]	; (8001c48 <_Z11BSP_TS_Inittt+0x34>)
    TsYBoundary = YSize;

    /* Read ID and verify if the IO expander is ready */
    if (stmpe811_ts_drv.ReadID(TS_I2C_ADDRESS) == STMPE811_ID)
 8001c18:	4c0c      	ldr	r4, [pc, #48]	; (8001c4c <_Z11BSP_TS_Inittt+0x38>)
    TsXBoundary = XSize;
 8001c1a:	8018      	strh	r0, [r3, #0]
    TsYBoundary = YSize;
 8001c1c:	4b0c      	ldr	r3, [pc, #48]	; (8001c50 <_Z11BSP_TS_Inittt+0x3c>)
    if (stmpe811_ts_drv.ReadID(TS_I2C_ADDRESS) == STMPE811_ID)
 8001c1e:	2082      	movs	r0, #130	; 0x82
    TsYBoundary = YSize;
 8001c20:	8019      	strh	r1, [r3, #0]
    if (stmpe811_ts_drv.ReadID(TS_I2C_ADDRESS) == STMPE811_ID)
 8001c22:	6863      	ldr	r3, [r4, #4]
 8001c24:	4798      	blx	r3
 8001c26:	f640 0311 	movw	r3, #2065	; 0x811
 8001c2a:	4298      	cmp	r0, r3
 8001c2c:	d10a      	bne.n	8001c44 <_Z11BSP_TS_Inittt+0x30>
    {
        /* Initialize the TS driver structure */
        TsDrv = &stmpe811_ts_drv;
 8001c2e:	4d09      	ldr	r5, [pc, #36]	; (8001c54 <_Z11BSP_TS_Inittt+0x40>)
    }

    if (ret == TS_OK)
    {
        /* Initialize the LL TS Driver */
        TsDrv->Init(TS_I2C_ADDRESS);
 8001c30:	6823      	ldr	r3, [r4, #0]
        TsDrv = &stmpe811_ts_drv;
 8001c32:	602c      	str	r4, [r5, #0]
        TsDrv->Init(TS_I2C_ADDRESS);
 8001c34:	2082      	movs	r0, #130	; 0x82
 8001c36:	4798      	blx	r3
        TsDrv->Start(TS_I2C_ADDRESS);
 8001c38:	682b      	ldr	r3, [r5, #0]
 8001c3a:	2082      	movs	r0, #130	; 0x82
 8001c3c:	68db      	ldr	r3, [r3, #12]
 8001c3e:	4798      	blx	r3
 8001c40:	2000      	movs	r0, #0
    }

    return ret;
}
 8001c42:	bd38      	pop	{r3, r4, r5, pc}
    uint8_t ret = TS_ERROR;
 8001c44:	2001      	movs	r0, #1
 8001c46:	e7fc      	b.n	8001c42 <_Z11BSP_TS_Inittt+0x2e>
 8001c48:	20000864 	.word	0x20000864
 8001c4c:	20000050 	.word	0x20000050
 8001c50:	20000866 	.word	0x20000866
 8001c54:	20000868 	.word	0x20000868

08001c58 <_ZN20STM32TouchController4initEv>:
    BSP_TS_Init(240, 320);
 8001c58:	f44f 71a0 	mov.w	r1, #320	; 0x140
 8001c5c:	20f0      	movs	r0, #240	; 0xf0
 8001c5e:	f7ff bfd9 	b.w	8001c14 <_Z11BSP_TS_Inittt>
	...

08001c64 <_Z15BSP_TS_GetStateP15TS_StateTypeDef>:
/**
  * @brief  Returns status and positions of the touch screen.
  * @param  TsState: Pointer to touch screen current state structure
  */
void BSP_TS_GetState(TS_StateTypeDef* TsState)
{
 8001c64:	b5f7      	push	{r0, r1, r2, r4, r5, r6, r7, lr}
    static uint32_t _x = 0, _y = 0;
    uint16_t xDiff, yDiff, x, y, xr, yr;

    TsState->TouchDetected = TsDrv->DetectTouch(TS_I2C_ADDRESS);
 8001c66:	4d33      	ldr	r5, [pc, #204]	; (8001d34 <_Z15BSP_TS_GetStateP15TS_StateTypeDef+0xd0>)
 8001c68:	682b      	ldr	r3, [r5, #0]
{
 8001c6a:	4604      	mov	r4, r0
    TsState->TouchDetected = TsDrv->DetectTouch(TS_I2C_ADDRESS);
 8001c6c:	691b      	ldr	r3, [r3, #16]
 8001c6e:	2082      	movs	r0, #130	; 0x82
 8001c70:	4798      	blx	r3
 8001c72:	b280      	uxth	r0, r0
 8001c74:	8020      	strh	r0, [r4, #0]

    if (TsState->TouchDetected)
 8001c76:	2800      	cmp	r0, #0
 8001c78:	d04a      	beq.n	8001d10 <_Z15BSP_TS_GetStateP15TS_StateTypeDef+0xac>
    {
        TsDrv->GetXY(TS_I2C_ADDRESS, &x, &y);
 8001c7a:	682b      	ldr	r3, [r5, #0]
 8001c7c:	f10d 0206 	add.w	r2, sp, #6
 8001c80:	695b      	ldr	r3, [r3, #20]
 8001c82:	a901      	add	r1, sp, #4
 8001c84:	2082      	movs	r0, #130	; 0x82
 8001c86:	4798      	blx	r3

        //Ensures the coordinates is within the screen
        if (y > 3700)
 8001c88:	f8bd 3006 	ldrh.w	r3, [sp, #6]
 8001c8c:	f640 6274 	movw	r2, #3700	; 0xe74
 8001c90:	4293      	cmp	r3, r2
 8001c92:	d93f      	bls.n	8001d14 <_Z15BSP_TS_GetStateP15TS_StateTypeDef+0xb0>
        {
            y = 3700;
 8001c94:	f8ad 2006 	strh.w	r2, [sp, #6]

        /* Y value first correction */
        y -= 180;

        /* Y value second correction */
        y = 3520 - y;
 8001c98:	f8bd 3006 	ldrh.w	r3, [sp, #6]
 8001c9c:	1ad2      	subs	r2, r2, r3
 8001c9e:	b292      	uxth	r2, r2

        /* Y value third correction */
        yr = y / 11;

        /* Return y position value */
        if (yr <= 0)
 8001ca0:	2a0a      	cmp	r2, #10
 8001ca2:	d93d      	bls.n	8001d20 <_Z15BSP_TS_GetStateP15TS_StateTypeDef+0xbc>
        yr = y / 11;
 8001ca4:	230b      	movs	r3, #11
 8001ca6:	fbb2 f2f3 	udiv	r2, r2, r3
        {
            yr = 0;
        }
        else if (yr > TsYBoundary)
 8001caa:	4b23      	ldr	r3, [pc, #140]	; (8001d38 <_Z15BSP_TS_GetStateP15TS_StateTypeDef+0xd4>)
 8001cac:	881b      	ldrh	r3, [r3, #0]
 8001cae:	429a      	cmp	r2, r3
 8001cb0:	d901      	bls.n	8001cb6 <_Z15BSP_TS_GetStateP15TS_StateTypeDef+0x52>
        {
            yr = TsYBoundary - 1;
 8001cb2:	3b01      	subs	r3, #1
 8001cb4:	b29a      	uxth	r2, r3
        {
        }
        y = yr;

        /* X value first correction */
        if (x <= 3000)
 8001cb6:	f8bd 3004 	ldrh.w	r3, [sp, #4]
 8001cba:	f640 31b8 	movw	r1, #3000	; 0xbb8
 8001cbe:	428b      	cmp	r3, r1
 8001cc0:	d830      	bhi.n	8001d24 <_Z15BSP_TS_GetStateP15TS_StateTypeDef+0xc0>
        {
            x = 3870 - x;
 8001cc2:	f5c3 6371 	rsb	r3, r3, #3856	; 0xf10
 8001cc6:	330e      	adds	r3, #14
 8001cc8:	b29b      	uxth	r3, r3
        {
            x = 3800 - x;
        }

        /* X value second correction */
        xr = x / 15;
 8001cca:	210f      	movs	r1, #15
 8001ccc:	fbb3 f3f1 	udiv	r3, r3, r1
        /* Return X position value */
        if (xr <= 0)
        {
            xr = 0;
        }
        else if (xr > TsXBoundary)
 8001cd0:	491a      	ldr	r1, [pc, #104]	; (8001d3c <_Z15BSP_TS_GetStateP15TS_StateTypeDef+0xd8>)
 8001cd2:	8809      	ldrh	r1, [r1, #0]
 8001cd4:	428b      	cmp	r3, r1
 8001cd6:	d901      	bls.n	8001cdc <_Z15BSP_TS_GetStateP15TS_StateTypeDef+0x78>
        {
            xr = TsXBoundary - 1;
 8001cd8:	3901      	subs	r1, #1
 8001cda:	b28b      	uxth	r3, r1
        else
        {
        }

        x = xr;
        xDiff = x > _x ? (x - _x) : (_x - x);
 8001cdc:	4e18      	ldr	r6, [pc, #96]	; (8001d40 <_Z15BSP_TS_GetStateP15TS_StateTypeDef+0xdc>)
        yDiff = y > _y ? (y - _y) : (_y - y);
 8001cde:	4d19      	ldr	r5, [pc, #100]	; (8001d44 <_Z15BSP_TS_GetStateP15TS_StateTypeDef+0xe0>)
        xDiff = x > _x ? (x - _x) : (_x - x);
 8001ce0:	6830      	ldr	r0, [r6, #0]
        yDiff = y > _y ? (y - _y) : (_y - y);
 8001ce2:	682f      	ldr	r7, [r5, #0]
        xDiff = x > _x ? (x - _x) : (_x - x);
 8001ce4:	4283      	cmp	r3, r0
 8001ce6:	b281      	uxth	r1, r0
 8001ce8:	bf8c      	ite	hi
 8001cea:	1a59      	subhi	r1, r3, r1
 8001cec:	1ac9      	subls	r1, r1, r3
        yDiff = y > _y ? (y - _y) : (_y - y);
 8001cee:	b2b8      	uxth	r0, r7
 8001cf0:	42ba      	cmp	r2, r7
 8001cf2:	bf8c      	ite	hi
 8001cf4:	1a10      	subhi	r0, r2, r0
 8001cf6:	1a80      	subls	r0, r0, r2
        xDiff = x > _x ? (x - _x) : (_x - x);
 8001cf8:	b289      	uxth	r1, r1
        yDiff = y > _y ? (y - _y) : (_y - y);
 8001cfa:	b280      	uxth	r0, r0

        if (xDiff + yDiff > 5)
 8001cfc:	4401      	add	r1, r0
 8001cfe:	2905      	cmp	r1, #5
        {
            _x = x;
 8001d00:	bfc8      	it	gt
 8001d02:	6033      	strgt	r3, [r6, #0]
            _y = y;
        }

        /* Update the X position */
        TsState->X = _x;
 8001d04:	6833      	ldr	r3, [r6, #0]
            _y = y;
 8001d06:	bfc8      	it	gt
 8001d08:	602a      	strgt	r2, [r5, #0]
        TsState->X = _x;
 8001d0a:	8063      	strh	r3, [r4, #2]

        /* Update the Y position */
        TsState->Y = _y;
 8001d0c:	682b      	ldr	r3, [r5, #0]
 8001d0e:	80a3      	strh	r3, [r4, #4]
    }
}
 8001d10:	b003      	add	sp, #12
 8001d12:	bdf0      	pop	{r4, r5, r6, r7, pc}
        else if (y < 180)
 8001d14:	2bb3      	cmp	r3, #179	; 0xb3
            y = 180;
 8001d16:	bf9c      	itt	ls
 8001d18:	23b4      	movls	r3, #180	; 0xb4
 8001d1a:	f8ad 3006 	strhls.w	r3, [sp, #6]
 8001d1e:	e7bb      	b.n	8001c98 <_Z15BSP_TS_GetStateP15TS_StateTypeDef+0x34>
            yr = 0;
 8001d20:	2200      	movs	r2, #0
 8001d22:	e7c8      	b.n	8001cb6 <_Z15BSP_TS_GetStateP15TS_StateTypeDef+0x52>
            x = 3800 - x;
 8001d24:	f5c3 636d 	rsb	r3, r3, #3792	; 0xed0
 8001d28:	3308      	adds	r3, #8
 8001d2a:	b29b      	uxth	r3, r3
        if (xr <= 0)
 8001d2c:	2b0e      	cmp	r3, #14
 8001d2e:	d8cc      	bhi.n	8001cca <_Z15BSP_TS_GetStateP15TS_StateTypeDef+0x66>
            xr = 0;
 8001d30:	2300      	movs	r3, #0
 8001d32:	e7d3      	b.n	8001cdc <_Z15BSP_TS_GetStateP15TS_StateTypeDef+0x78>
 8001d34:	20000868 	.word	0x20000868
 8001d38:	20000866 	.word	0x20000866
 8001d3c:	20000864 	.word	0x20000864
 8001d40:	2000086c 	.word	0x2000086c
 8001d44:	20000870 	.word	0x20000870

08001d48 <_ZN20STM32TouchController11sampleTouchERlS0_>:
{
 8001d48:	b537      	push	{r0, r1, r2, r4, r5, lr}
    BSP_TS_GetState(&state);
 8001d4a:	4668      	mov	r0, sp
{
 8001d4c:	460d      	mov	r5, r1
 8001d4e:	4614      	mov	r4, r2
    BSP_TS_GetState(&state);
 8001d50:	f7ff ff88 	bl	8001c64 <_Z15BSP_TS_GetStateP15TS_StateTypeDef>
    if (state.TouchDetected)
 8001d54:	f8bd 0000 	ldrh.w	r0, [sp]
 8001d58:	b148      	cbz	r0, 8001d6e <_ZN20STM32TouchController11sampleTouchERlS0_+0x26>
        x = state.X;
 8001d5a:	f8bd 3002 	ldrh.w	r3, [sp, #2]
 8001d5e:	602b      	str	r3, [r5, #0]
        y = state.Y;
 8001d60:	f8bd 3004 	ldrh.w	r3, [sp, #4]
 8001d64:	6023      	str	r3, [r4, #0]
        sleep_timeout_value = 60;
 8001d66:	4b03      	ldr	r3, [pc, #12]	; (8001d74 <_ZN20STM32TouchController11sampleTouchERlS0_+0x2c>)
 8001d68:	223c      	movs	r2, #60	; 0x3c
 8001d6a:	601a      	str	r2, [r3, #0]
        return true;
 8001d6c:	2001      	movs	r0, #1
}
 8001d6e:	b003      	add	sp, #12
 8001d70:	bd30      	pop	{r4, r5, pc}
 8001d72:	bf00      	nop
 8001d74:	2000000c 	.word	0x2000000c

08001d78 <_ZN8touchgfx4GPIO3setENS0_7GPIO_IDE>:
/*
 * Sets a pin high.
 */
void GPIO::set(GPIO_ID id)
{
    switch (id)
 8001d78:	b110      	cbz	r0, 8001d80 <_ZN8touchgfx4GPIO3setENS0_7GPIO_IDE+0x8>
 8001d7a:	2802      	cmp	r0, #2
 8001d7c:	d009      	beq.n	8001d92 <_ZN8touchgfx4GPIO3setENS0_7GPIO_IDE+0x1a>
 8001d7e:	4770      	bx	lr
    {
    case GPIO::VSYNC_FREQ:
#if defined(VSYNC_FREQ_GPIO_Port) && defined(VSYNC_FREQ_Pin)
        HAL_GPIO_WritePin(VSYNC_FREQ_GPIO_Port, VSYNC_FREQ_Pin, M_GPIO_PIN_SET(id));
 8001d80:	4b07      	ldr	r3, [pc, #28]	; (8001da0 <_ZN8touchgfx4GPIO3setENS0_7GPIO_IDE+0x28>)
 8001d82:	681a      	ldr	r2, [r3, #0]
 8001d84:	fab2 f282 	clz	r2, r2
 8001d88:	0952      	lsrs	r2, r2, #5
 8001d8a:	2104      	movs	r1, #4
        HAL_GPIO_WritePin(RENDER_TIME_GPIO_Port, RENDER_TIME_Pin, M_GPIO_PIN_SET(id));
#endif
        break;
    case GPIO::FRAME_RATE:
#if defined(FRAME_RATE_GPIO_Port) && defined(FRAME_RATE_Pin)
        HAL_GPIO_WritePin(FRAME_RATE_GPIO_Port, FRAME_RATE_Pin, M_GPIO_PIN_SET(id));
 8001d8c:	4805      	ldr	r0, [pc, #20]	; (8001da4 <_ZN8touchgfx4GPIO3setENS0_7GPIO_IDE+0x2c>)
 8001d8e:	f008 b865 	b.w	8009e5c <HAL_GPIO_WritePin>
 8001d92:	4b03      	ldr	r3, [pc, #12]	; (8001da0 <_ZN8touchgfx4GPIO3setENS0_7GPIO_IDE+0x28>)
 8001d94:	689a      	ldr	r2, [r3, #8]
 8001d96:	fab2 f282 	clz	r2, r2
 8001d9a:	0952      	lsrs	r2, r2, #5
 8001d9c:	2110      	movs	r1, #16
 8001d9e:	e7f5      	b.n	8001d8c <_ZN8touchgfx4GPIO3setENS0_7GPIO_IDE+0x14>
 8001da0:	20000874 	.word	0x20000874
 8001da4:	40021000 	.word	0x40021000

08001da8 <_ZN8touchgfx4GPIO5clearENS0_7GPIO_IDE>:
/*
 * Sets a pin low.
 */
void GPIO::clear(GPIO_ID id)
{
    switch (id)
 8001da8:	b110      	cbz	r0, 8001db0 <_ZN8touchgfx4GPIO5clearENS0_7GPIO_IDE+0x8>
 8001daa:	2802      	cmp	r0, #2
 8001dac:	d009      	beq.n	8001dc2 <_ZN8touchgfx4GPIO5clearENS0_7GPIO_IDE+0x1a>
 8001dae:	4770      	bx	lr
    {
    case GPIO::VSYNC_FREQ:
#if defined(VSYNC_FREQ_GPIO_Port) && defined(VSYNC_FREQ_Pin)
        HAL_GPIO_WritePin(VSYNC_FREQ_GPIO_Port, VSYNC_FREQ_Pin, M_GPIO_PIN_RESET(id));
 8001db0:	4b07      	ldr	r3, [pc, #28]	; (8001dd0 <_ZN8touchgfx4GPIO5clearENS0_7GPIO_IDE+0x28>)
 8001db2:	681a      	ldr	r2, [r3, #0]
 8001db4:	3a00      	subs	r2, #0
 8001db6:	bf18      	it	ne
 8001db8:	2201      	movne	r2, #1
 8001dba:	2104      	movs	r1, #4
        HAL_GPIO_WritePin(RENDER_TIME_GPIO_Port, RENDER_TIME_Pin, M_GPIO_PIN_RESET(id));
#endif
        break;
    case GPIO::FRAME_RATE:
#if defined(FRAME_RATE_GPIO_Port) && defined(FRAME_RATE_Pin)
        HAL_GPIO_WritePin(FRAME_RATE_GPIO_Port, FRAME_RATE_Pin, M_GPIO_PIN_RESET(id));
 8001dbc:	4805      	ldr	r0, [pc, #20]	; (8001dd4 <_ZN8touchgfx4GPIO5clearENS0_7GPIO_IDE+0x2c>)
 8001dbe:	f008 b84d 	b.w	8009e5c <HAL_GPIO_WritePin>
 8001dc2:	4b03      	ldr	r3, [pc, #12]	; (8001dd0 <_ZN8touchgfx4GPIO5clearENS0_7GPIO_IDE+0x28>)
 8001dc4:	689a      	ldr	r2, [r3, #8]
 8001dc6:	3a00      	subs	r2, #0
 8001dc8:	bf18      	it	ne
 8001dca:	2201      	movne	r2, #1
 8001dcc:	2110      	movs	r1, #16
 8001dce:	e7f5      	b.n	8001dbc <_ZN8touchgfx4GPIO5clearENS0_7GPIO_IDE+0x14>
 8001dd0:	20000874 	.word	0x20000874
 8001dd4:	40021000 	.word	0x40021000

08001dd8 <_ZN8touchgfx4GPIO6toggleENS0_7GPIO_IDE>:
/*
 * Toggles a pin.
 */
void GPIO::toggle(GPIO_ID id)
{
    switch (id)
 8001dd8:	b110      	cbz	r0, 8001de0 <_ZN8touchgfx4GPIO6toggleENS0_7GPIO_IDE+0x8>
 8001dda:	2802      	cmp	r0, #2
 8001ddc:	d004      	beq.n	8001de8 <_ZN8touchgfx4GPIO6toggleENS0_7GPIO_IDE+0x10>
 8001dde:	4770      	bx	lr
    {
    case GPIO::VSYNC_FREQ:
#if defined(VSYNC_FREQ_GPIO_Port) && defined(VSYNC_FREQ_Pin)
        HAL_GPIO_TogglePin(VSYNC_FREQ_GPIO_Port, VSYNC_FREQ_Pin);
 8001de0:	2104      	movs	r1, #4
        HAL_GPIO_TogglePin(RENDER_TIME_GPIO_Port, RENDER_TIME_Pin);
#endif
        break;
    case GPIO::FRAME_RATE:
#if defined(FRAME_RATE_GPIO_Port) && defined(FRAME_RATE_Pin)
        HAL_GPIO_TogglePin(FRAME_RATE_GPIO_Port, FRAME_RATE_Pin);
 8001de2:	4802      	ldr	r0, [pc, #8]	; (8001dec <_ZN8touchgfx4GPIO6toggleENS0_7GPIO_IDE+0x14>)
 8001de4:	f008 b83e 	b.w	8009e64 <HAL_GPIO_TogglePin>
 8001de8:	2110      	movs	r1, #16
 8001dea:	e7fa      	b.n	8001de2 <_ZN8touchgfx4GPIO6toggleENS0_7GPIO_IDE+0xa>
 8001dec:	40021000 	.word	0x40021000

08001df0 <_ZN8touchgfx4GPIO3getENS0_7GPIO_IDE>:

/*
 * Gets the state of a pin.
 */
bool GPIO::get(GPIO_ID id)
{
 8001df0:	b508      	push	{r3, lr}
    GPIO_PinState bitstatus = GPIO_PIN_RESET;
    switch (id)
 8001df2:	b130      	cbz	r0, 8001e02 <_ZN8touchgfx4GPIO3getENS0_7GPIO_IDE+0x12>
 8001df4:	2802      	cmp	r0, #2
 8001df6:	d009      	beq.n	8001e0c <_ZN8touchgfx4GPIO3getENS0_7GPIO_IDE+0x1c>
 8001df8:	2000      	movs	r0, #0
        bitstatus = HAL_GPIO_ReadPin(MCU_ACTIVE_GPIO_Port, MCU_ACTIVE_Pin);
#endif
        break;
    }
    return (bitstatus == GPIO_PIN_SET);
}
 8001dfa:	1e43      	subs	r3, r0, #1
 8001dfc:	4258      	negs	r0, r3
 8001dfe:	4158      	adcs	r0, r3
 8001e00:	bd08      	pop	{r3, pc}
        bitstatus = HAL_GPIO_ReadPin(VSYNC_FREQ_GPIO_Port, VSYNC_FREQ_Pin);
 8001e02:	2104      	movs	r1, #4
        bitstatus = HAL_GPIO_ReadPin(FRAME_RATE_GPIO_Port, FRAME_RATE_Pin);
 8001e04:	4802      	ldr	r0, [pc, #8]	; (8001e10 <_ZN8touchgfx4GPIO3getENS0_7GPIO_IDE+0x20>)
 8001e06:	f008 f823 	bl	8009e50 <HAL_GPIO_ReadPin>
        break;
 8001e0a:	e7f6      	b.n	8001dfa <_ZN8touchgfx4GPIO3getENS0_7GPIO_IDE+0xa>
        bitstatus = HAL_GPIO_ReadPin(FRAME_RATE_GPIO_Port, FRAME_RATE_Pin);
 8001e0c:	2110      	movs	r1, #16
 8001e0e:	e7f9      	b.n	8001e04 <_ZN8touchgfx4GPIO3getENS0_7GPIO_IDE+0x14>
 8001e10:	40021000 	.word	0x40021000

08001e14 <_ZN8touchgfx4GPIO4initEv>:
{
 8001e14:	b570      	push	{r4, r5, r6, lr}
 8001e16:	4d08      	ldr	r5, [pc, #32]	; (8001e38 <_ZN8touchgfx4GPIO4initEv+0x24>)
    for (int id = 0; id <= 4; id++)
 8001e18:	2400      	movs	r4, #0
                GPIO_InvertedLevels[id] = 1;
 8001e1a:	2601      	movs	r6, #1
        if (GPIO::get(static_cast<GPIO_ID>(id)))
 8001e1c:	b2e0      	uxtb	r0, r4
 8001e1e:	f7ff ffe7 	bl	8001df0 <_ZN8touchgfx4GPIO3getENS0_7GPIO_IDE>
 8001e22:	b118      	cbz	r0, 8001e2c <_ZN8touchgfx4GPIO4initEv+0x18>
            if (GPIO_InvertedLevels[id] != 1)
 8001e24:	682b      	ldr	r3, [r5, #0]
 8001e26:	2b01      	cmp	r3, #1
                GPIO_InvertedLevels[id] = 1;
 8001e28:	bf18      	it	ne
 8001e2a:	602e      	strne	r6, [r5, #0]
    for (int id = 0; id <= 4; id++)
 8001e2c:	3401      	adds	r4, #1
 8001e2e:	2c05      	cmp	r4, #5
 8001e30:	f105 0504 	add.w	r5, r5, #4
 8001e34:	d1f2      	bne.n	8001e1c <_ZN8touchgfx4GPIO4initEv+0x8>
}
 8001e36:	bd70      	pop	{r4, r5, r6, pc}
 8001e38:	20000874 	.word	0x20000874

08001e3c <_ZN8touchgfx3HAL21setDisplayOrientationENS_18DisplayOrientationE>:
     * @note A screen transition must occur before this takes effect!
     */
    virtual void setDisplayOrientation(DisplayOrientation orientation)
    {
        requestedOrientation = orientation;
        displayOrientationChangeRequested = true;
 8001e3c:	2301      	movs	r3, #1
        requestedOrientation = orientation;
 8001e3e:	f880 1078 	strb.w	r1, [r0, #120]	; 0x78
        displayOrientationChangeRequested = true;
 8001e42:	f880 3079 	strb.w	r3, [r0, #121]	; 0x79
    }
 8001e46:	4770      	bx	lr

08001e48 <_ZN8touchgfx3HAL9sampleKeyERh>:
     */
    virtual bool sampleKey(uint8_t& key)
    {
        (void)key; // Unused variable
        return false;
    }
 8001e48:	2000      	movs	r0, #0
 8001e4a:	4770      	bx	lr

08001e4c <_ZN8touchgfx3HAL19setAnimationStorageEPv>:
     * @see setFrameBufferStartAddresses
     */
    virtual void setAnimationStorage(void* animationStorage)
    {
        frameBuffer2 = reinterpret_cast<uint16_t*>(animationStorage);
        USE_ANIMATION_STORAGE = animationStorage != 0;
 8001e4c:	4b03      	ldr	r3, [pc, #12]	; (8001e5c <_ZN8touchgfx3HAL19setAnimationStorageEPv+0x10>)
        frameBuffer2 = reinterpret_cast<uint16_t*>(animationStorage);
 8001e4e:	6441      	str	r1, [r0, #68]	; 0x44
        USE_ANIMATION_STORAGE = animationStorage != 0;
 8001e50:	3900      	subs	r1, #0
 8001e52:	bf18      	it	ne
 8001e54:	2101      	movne	r1, #1
 8001e56:	7019      	strb	r1, [r3, #0]
    }
 8001e58:	4770      	bx	lr
 8001e5a:	bf00      	nop
 8001e5c:	2001381b 	.word	0x2001381b

08001e60 <_ZNK8touchgfx3HAL18getFlashDataReaderEv>:
     * @return the FlashDataReader.
     */
    virtual FlashDataReader* getFlashDataReader() const
    {
        return 0;
    }
 8001e60:	2000      	movs	r0, #0
 8001e62:	4770      	bx	lr

08001e64 <_ZN8touchgfx3HAL9taskDelayEt>:
     *
     * @see registerTaskDelayFunction
     */
    virtual void taskDelay(uint16_t ms)
    {
        if (taskDelayFunc)
 8001e64:	6b83      	ldr	r3, [r0, #56]	; 0x38
 8001e66:	b10b      	cbz	r3, 8001e6c <_ZN8touchgfx3HAL9taskDelayEt+0x8>
        {
            taskDelayFunc(ms);
 8001e68:	4608      	mov	r0, r1
 8001e6a:	4718      	bx	r3
        }
    }
 8001e6c:	4770      	bx	lr

08001e6e <_ZN8touchgfx3HAL17getTFTCurrentLineEv>:
     *         implemented".
     */
    virtual uint16_t getTFTCurrentLine()
    {
        return 0xFFFFu;
    }
 8001e6e:	f64f 70ff 	movw	r0, #65535	; 0xffff
 8001e72:	4770      	bx	lr

08001e74 <_ZN8touchgfx3HAL10getDMATypeEv>:
     *
     * @return a DMAType value of the concrete DMA implementation.
     */
    virtual DMAType getDMAType()
    {
        return dma.getDMAType();
 8001e74:	6840      	ldr	r0, [r0, #4]
 8001e76:	6803      	ldr	r3, [r0, #0]
 8001e78:	699b      	ldr	r3, [r3, #24]
 8001e7a:	4718      	bx	r3

08001e7c <_ZN8touchgfx3HAL15InvalidateCacheEv>:
     * Called by setRenderingMethod when changing rendering method
     * from Hardware to Software indicating the cache should be invalidated.
     */
    virtual void InvalidateCache()
    {
    }
 8001e7c:	4770      	bx	lr

08001e7e <_ZN8touchgfx3HAL10FlushCacheEv>:
     * Called by setRenderingMethod when changing rendering method
     * from Software to Hardware indicating the cache should be invalidated.
     */
    virtual void FlushCache()
    {
    }
 8001e7e:	4770      	bx	lr

08001e80 <_ZN11TouchGFXHALD1Ev>:
 *
 * @brief HAL implementation for TouchGFX.
 *
 * @sa HAL
 */
class TouchGFXHAL : public TouchGFXGeneratedHAL
 8001e80:	4770      	bx	lr
	...

08001e84 <_ZN11TouchGFXHAL10initializeEv>:
LOCATION_PRAGMA("TouchGFX_Framebuffer")
uint32_t animationStorage[(240 * 320 * 2 + 3) / 4] LOCATION_ATTRIBUTE("TouchGFX_Framebuffer");
}

void TouchGFXHAL::initialize()
{
 8001e84:	b510      	push	{r4, lr}
 8001e86:	4604      	mov	r4, r0
    //
    // To overwrite the generated implementation, omit call to parent function
    // and implemented needed functionality here.
    // Please note, HAL::initialize() must be called to initialize the framework.

    TouchGFXGeneratedHAL::initialize();
 8001e88:	f000 fb4e 	bl	8002528 <_ZN20TouchGFXGeneratedHAL10initializeEv>

    // Add animation storage
    setAnimationStorage((void*)animationStorage);
 8001e8c:	6823      	ldr	r3, [r4, #0]
 8001e8e:	4903      	ldr	r1, [pc, #12]	; (8001e9c <_ZN11TouchGFXHAL10initializeEv+0x18>)
 8001e90:	f8d3 308c 	ldr.w	r3, [r3, #140]	; 0x8c
 8001e94:	4620      	mov	r0, r4
}
 8001e96:	e8bd 4010 	ldmia.w	sp!, {r4, lr}
    setAnimationStorage((void*)animationStorage);
 8001e9a:	4718      	bx	r3
 8001e9c:	d0000000 	.word	0xd0000000

08001ea0 <_ZN11TouchGFXHAL9taskEntryEv>:

void TouchGFXHAL::taskEntry()
{
 8001ea0:	b508      	push	{r3, lr}
    enableLCDControllerInterrupt();
 8001ea2:	6803      	ldr	r3, [r0, #0]
{
 8001ea4:	4604      	mov	r4, r0
    enableLCDControllerInterrupt();
 8001ea6:	f8d3 3080 	ldr.w	r3, [r3, #128]	; 0x80
 8001eaa:	4798      	blx	r3
    enableInterrupts();
 8001eac:	6823      	ldr	r3, [r4, #0]
 8001eae:	4620      	mov	r0, r4
 8001eb0:	6f9b      	ldr	r3, [r3, #120]	; 0x78
 8001eb2:	4798      	blx	r3

    OSWrappers::waitForVSync();
 8001eb4:	f000 f8ec 	bl	8002090 <_ZN8touchgfx10OSWrappers12waitForVSyncEv>
    backPorchExited();
 8001eb8:	6823      	ldr	r3, [r4, #0]
 8001eba:	4620      	mov	r0, r4
 8001ebc:	6f1b      	ldr	r3, [r3, #112]	; 0x70
 8001ebe:	4798      	blx	r3

    LCD_IO_WriteReg(0x29);
 8001ec0:	2029      	movs	r0, #41	; 0x29
 8001ec2:	f7ff f981 	bl	80011c8 <LCD_IO_WriteReg>

    for (;;)
    {
        OSWrappers::waitForVSync();
 8001ec6:	f000 f8e3 	bl	8002090 <_ZN8touchgfx10OSWrappers12waitForVSyncEv>
        backPorchExited();
 8001eca:	6823      	ldr	r3, [r4, #0]
 8001ecc:	4620      	mov	r0, r4
 8001ece:	6f1b      	ldr	r3, [r3, #112]	; 0x70
 8001ed0:	4798      	blx	r3
    for (;;)
 8001ed2:	e7f8      	b.n	8001ec6 <_ZN11TouchGFXHAL9taskEntryEv+0x26>

08001ed4 <_ZN8touchgfx3HAL15backPorchExitedEv>:
    virtual void backPorchExited()
 8001ed4:	b510      	push	{r4, lr}
 8001ed6:	4604      	mov	r4, r0
        swapFrameBuffers();
 8001ed8:	f00f ff40 	bl	8011d5c <_ZN8touchgfx3HAL16swapFrameBuffersEv>
        tick();
 8001edc:	6823      	ldr	r3, [r4, #0]
 8001ede:	4620      	mov	r0, r4
 8001ee0:	f8d3 30ac 	ldr.w	r3, [r3, #172]	; 0xac
    }
 8001ee4:	e8bd 4010 	ldmia.w	sp!, {r4, lr}
        tick();
 8001ee8:	4718      	bx	r3

08001eea <_ZNK11TouchGFXHAL17getTFTFrameBufferEv>:
    // Calling parent implementation of getTFTFrameBuffer().
    //
    // To overwrite the generated implementation, omit call to parent function
    // and implemented needed functionality here.

    return TouchGFXGeneratedHAL::getTFTFrameBuffer();
 8001eea:	f000 bb0f 	b.w	800250c <_ZNK20TouchGFXGeneratedHAL17getTFTFrameBufferEv>

08001eee <_ZN11TouchGFXHAL17setTFTFrameBufferEPt>:
    // Calling parent implementation of setTFTFrameBuffer(uint16_t* address).
    //
    // To overwrite the generated implementation, omit call to parent function
    // and implemented needed functionality here.

    TouchGFXGeneratedHAL::setTFTFrameBuffer(address);
 8001eee:	f000 bb13 	b.w	8002518 <_ZN20TouchGFXGeneratedHAL17setTFTFrameBufferEPt>

08001ef2 <_ZN11TouchGFXHAL16flushFrameBufferERKN8touchgfx4RectE>:
    // To overwrite the generated implementation, omit call to parent function
    // and implemented needed functionality here.
    // Please note, HAL::flushFrameBuffer(const touchgfx::Rect& rect) must
    // be called to notify the touchgfx framework that flush has been performed.

    TouchGFXGeneratedHAL::flushFrameBuffer(rect);
 8001ef2:	f000 bb37 	b.w	8002564 <_ZN20TouchGFXGeneratedHAL16flushFrameBufferERKN8touchgfx4RectE>

08001ef6 <_ZN11TouchGFXHAL19configureInterruptsEv>:
    // Calling parent implementation of configureInterrupts().
    //
    // To overwrite the generated implementation, omit call to parent function
    // and implemented needed functionality here.

    TouchGFXGeneratedHAL::configureInterrupts();
 8001ef6:	f000 badf 	b.w	80024b8 <_ZN20TouchGFXGeneratedHAL19configureInterruptsEv>

08001efa <_ZN11TouchGFXHAL16enableInterruptsEv>:
    // Calling parent implementation of enableInterrupts().
    //
    // To overwrite the generated implementation, omit call to parent function
    // and implemented needed functionality here.

    TouchGFXGeneratedHAL::enableInterrupts();
 8001efa:	f000 bae5 	b.w	80024c8 <_ZN20TouchGFXGeneratedHAL16enableInterruptsEv>

08001efe <_ZN11TouchGFXHAL17disableInterruptsEv>:
    // Calling parent implementation of disableInterrupts().
    //
    // To overwrite the generated implementation, omit call to parent function
    // and implemented needed functionality here.

    TouchGFXGeneratedHAL::disableInterrupts();
 8001efe:	f000 bb3d 	b.w	800257c <_ZN20TouchGFXGeneratedHAL17disableInterruptsEv>

08001f02 <_ZN11TouchGFXHAL28enableLCDControllerInterruptEv>:
    // Calling parent implementation of enableLCDControllerInterrupt().
    //
    // To overwrite the generated implementation, omit call to parent function
    // and implemented needed functionality here.

    TouchGFXGeneratedHAL::enableLCDControllerInterrupt();
 8001f02:	f000 bae9 	b.w	80024d8 <_ZN20TouchGFXGeneratedHAL28enableLCDControllerInterruptEv>

08001f06 <_ZN11TouchGFXHAL16flushFrameBufferEv>:
     * Rect version.
     * @see HAL::flushFrameBuffer
     */
    virtual void flushFrameBuffer()
    {
        HAL::flushFrameBuffer();
 8001f06:	f00f b994 	b.w	8011232 <_ZN8touchgfx3HAL16flushFrameBufferEv>

08001f0a <_ZN11TouchGFXHALD0Ev>:
 8001f0a:	b510      	push	{r4, lr}
 8001f0c:	217c      	movs	r1, #124	; 0x7c
 8001f0e:	4604      	mov	r4, r0
 8001f10:	f028 fc13 	bl	802a73a <_ZdlPvj>
 8001f14:	4620      	mov	r0, r4
 8001f16:	bd10      	pop	{r4, pc}

08001f18 <_ZN8touchgfx3HAL11getBlitCapsEv>:
        if (useDMAAcceleration)
 8001f18:	f890 307a 	ldrb.w	r3, [r0, #122]	; 0x7a
 8001f1c:	b11b      	cbz	r3, 8001f26 <_ZN8touchgfx3HAL11getBlitCapsEv+0xe>
            return dma.getBlitCaps();
 8001f1e:	6840      	ldr	r0, [r0, #4]
 8001f20:	6803      	ldr	r3, [r0, #0]
 8001f22:	681b      	ldr	r3, [r3, #0]
 8001f24:	4718      	bx	r3
    }
 8001f26:	4618      	mov	r0, r3
 8001f28:	4770      	bx	lr
	...

08001f2c <_ZN8touchgfx3HAL31performDisplayOrientationChangeEv>:
    virtual void performDisplayOrientationChange()
 8001f2c:	b510      	push	{r4, lr}
        if (requestedOrientation != nativeDisplayOrientation)
 8001f2e:	f890 1034 	ldrb.w	r1, [r0, #52]	; 0x34
 8001f32:	f890 4078 	ldrb.w	r4, [r0, #120]	; 0x78
            if (DISPLAY_ROTATION == rotate0)
 8001f36:	4b0c      	ldr	r3, [pc, #48]	; (8001f68 <_ZN8touchgfx3HAL31performDisplayOrientationChangeEv+0x3c>)
        if (requestedOrientation != nativeDisplayOrientation)
 8001f38:	428c      	cmp	r4, r1
            if (DISPLAY_ROTATION == rotate0)
 8001f3a:	781a      	ldrb	r2, [r3, #0]
        if (requestedOrientation != nativeDisplayOrientation)
 8001f3c:	d009      	beq.n	8001f52 <_ZN8touchgfx3HAL31performDisplayOrientationChangeEv+0x26>
            if (DISPLAY_ROTATION == rotate0)
 8001f3e:	b93a      	cbnz	r2, 8001f50 <_ZN8touchgfx3HAL31performDisplayOrientationChangeEv+0x24>
                DISPLAY_HEIGHT = DISPLAY_WIDTH;
 8001f40:	4a0a      	ldr	r2, [pc, #40]	; (8001f6c <_ZN8touchgfx3HAL31performDisplayOrientationChangeEv+0x40>)
                const uint16_t tmp = DISPLAY_HEIGHT;
 8001f42:	490b      	ldr	r1, [pc, #44]	; (8001f70 <_ZN8touchgfx3HAL31performDisplayOrientationChangeEv+0x44>)
                DISPLAY_HEIGHT = DISPLAY_WIDTH;
 8001f44:	8814      	ldrh	r4, [r2, #0]
                const uint16_t tmp = DISPLAY_HEIGHT;
 8001f46:	8808      	ldrh	r0, [r1, #0]
                DISPLAY_WIDTH = tmp;
 8001f48:	8010      	strh	r0, [r2, #0]
                DISPLAY_HEIGHT = DISPLAY_WIDTH;
 8001f4a:	800c      	strh	r4, [r1, #0]
                DISPLAY_ROTATION = rotate90;
 8001f4c:	2201      	movs	r2, #1
            DISPLAY_ROTATION = rotate0;
 8001f4e:	701a      	strb	r2, [r3, #0]
    }
 8001f50:	bd10      	pop	{r4, pc}
        else if (DISPLAY_ROTATION != rotate0)
 8001f52:	2a00      	cmp	r2, #0
 8001f54:	d0fc      	beq.n	8001f50 <_ZN8touchgfx3HAL31performDisplayOrientationChangeEv+0x24>
            DISPLAY_HEIGHT = DISPLAY_WIDTH;
 8001f56:	4a05      	ldr	r2, [pc, #20]	; (8001f6c <_ZN8touchgfx3HAL31performDisplayOrientationChangeEv+0x40>)
            const uint16_t tmp = DISPLAY_HEIGHT;
 8001f58:	4905      	ldr	r1, [pc, #20]	; (8001f70 <_ZN8touchgfx3HAL31performDisplayOrientationChangeEv+0x44>)
            DISPLAY_HEIGHT = DISPLAY_WIDTH;
 8001f5a:	8814      	ldrh	r4, [r2, #0]
            const uint16_t tmp = DISPLAY_HEIGHT;
 8001f5c:	8808      	ldrh	r0, [r1, #0]
            DISPLAY_WIDTH = tmp;
 8001f5e:	8010      	strh	r0, [r2, #0]
            DISPLAY_HEIGHT = DISPLAY_WIDTH;
 8001f60:	800c      	strh	r4, [r1, #0]
            DISPLAY_ROTATION = rotate0;
 8001f62:	2200      	movs	r2, #0
 8001f64:	e7f3      	b.n	8001f4e <_ZN8touchgfx3HAL31performDisplayOrientationChangeEv+0x22>
 8001f66:	bf00      	nop
 8001f68:	20013814 	.word	0x20013814
 8001f6c:	20013810 	.word	0x20013810
 8001f70:	20013812 	.word	0x20013812

08001f74 <_ZN8touchgfx3HAL28setFrameBufferStartAddressesEPvS1_S1_>:
    virtual void setFrameBufferStartAddresses(void* frameBuffer, void* doubleBuffer, void* animationStorage)
 8001f74:	b570      	push	{r4, r5, r6, lr}
 8001f76:	460d      	mov	r5, r1
 8001f78:	4619      	mov	r1, r3
        assert(frameBuffer != 0 && "A framebuffer address must be set");
 8001f7a:	b935      	cbnz	r5, 8001f8a <_ZN8touchgfx3HAL28setFrameBufferStartAddressesEPvS1_S1_+0x16>
 8001f7c:	4b09      	ldr	r3, [pc, #36]	; (8001fa4 <_ZN8touchgfx3HAL28setFrameBufferStartAddressesEPvS1_S1_+0x30>)
 8001f7e:	4a0a      	ldr	r2, [pc, #40]	; (8001fa8 <_ZN8touchgfx3HAL28setFrameBufferStartAddressesEPvS1_S1_+0x34>)
 8001f80:	480a      	ldr	r0, [pc, #40]	; (8001fac <_ZN8touchgfx3HAL28setFrameBufferStartAddressesEPvS1_S1_+0x38>)
 8001f82:	f240 21d2 	movw	r1, #722	; 0x2d2
 8001f86:	f029 f9eb 	bl	802b360 <__assert_func>
        frameBuffer1 = reinterpret_cast<uint16_t*>(doubleBuffer);
 8001f8a:	e9c0 520f 	strd	r5, r2, [r0, #60]	; 0x3c
        USE_DOUBLE_BUFFERING = doubleBuffer != 0;
 8001f8e:	4b08      	ldr	r3, [pc, #32]	; (8001fb0 <_ZN8touchgfx3HAL28setFrameBufferStartAddressesEPvS1_S1_+0x3c>)
 8001f90:	3a00      	subs	r2, #0
 8001f92:	bf18      	it	ne
 8001f94:	2201      	movne	r2, #1
 8001f96:	701a      	strb	r2, [r3, #0]
        setAnimationStorage(animationStorage);
 8001f98:	6803      	ldr	r3, [r0, #0]
    }
 8001f9a:	e8bd 4070 	ldmia.w	sp!, {r4, r5, r6, lr}
        setAnimationStorage(animationStorage);
 8001f9e:	f8d3 308c 	ldr.w	r3, [r3, #140]	; 0x8c
 8001fa2:	4718      	bx	r3
 8001fa4:	0802c588 	.word	0x0802c588
 8001fa8:	0802c5c0 	.word	0x0802c5c0
 8001fac:	0802c60e 	.word	0x0802c60e
 8001fb0:	2001381a 	.word	0x2001381a

08001fb4 <_ZN8touchgfx3HAL18setFrameBufferSizeEtt>:
    virtual void setFrameBufferSize(uint16_t width, uint16_t height)
 8001fb4:	b508      	push	{r3, lr}
        assert(width >= DISPLAY_WIDTH && height >= DISPLAY_HEIGHT && "Framebuffer cannot be smaller than display");
 8001fb6:	4b09      	ldr	r3, [pc, #36]	; (8001fdc <_ZN8touchgfx3HAL18setFrameBufferSizeEtt+0x28>)
 8001fb8:	881b      	ldrh	r3, [r3, #0]
 8001fba:	428b      	cmp	r3, r1
 8001fbc:	d803      	bhi.n	8001fc6 <_ZN8touchgfx3HAL18setFrameBufferSizeEtt+0x12>
 8001fbe:	4b08      	ldr	r3, [pc, #32]	; (8001fe0 <_ZN8touchgfx3HAL18setFrameBufferSizeEtt+0x2c>)
 8001fc0:	881b      	ldrh	r3, [r3, #0]
 8001fc2:	4293      	cmp	r3, r2
 8001fc4:	d905      	bls.n	8001fd2 <_ZN8touchgfx3HAL18setFrameBufferSizeEtt+0x1e>
 8001fc6:	4b07      	ldr	r3, [pc, #28]	; (8001fe4 <_ZN8touchgfx3HAL18setFrameBufferSizeEtt+0x30>)
 8001fc8:	4a07      	ldr	r2, [pc, #28]	; (8001fe8 <_ZN8touchgfx3HAL18setFrameBufferSizeEtt+0x34>)
 8001fca:	4808      	ldr	r0, [pc, #32]	; (8001fec <_ZN8touchgfx3HAL18setFrameBufferSizeEtt+0x38>)
 8001fcc:	219e      	movs	r1, #158	; 0x9e
 8001fce:	f029 f9c7 	bl	802b360 <__assert_func>
        FRAME_BUFFER_WIDTH = width;
 8001fd2:	4b07      	ldr	r3, [pc, #28]	; (8001ff0 <_ZN8touchgfx3HAL18setFrameBufferSizeEtt+0x3c>)
 8001fd4:	8019      	strh	r1, [r3, #0]
        FRAME_BUFFER_HEIGHT = height;
 8001fd6:	4b07      	ldr	r3, [pc, #28]	; (8001ff4 <_ZN8touchgfx3HAL18setFrameBufferSizeEtt+0x40>)
 8001fd8:	801a      	strh	r2, [r3, #0]
    }
 8001fda:	bd08      	pop	{r3, pc}
 8001fdc:	20013810 	.word	0x20013810
 8001fe0:	20013812 	.word	0x20013812
 8001fe4:	0802c653 	.word	0x0802c653
 8001fe8:	0802c6b6 	.word	0x0802c6b6
 8001fec:	0802c60e 	.word	0x0802c60e
 8001ff0:	20013816 	.word	0x20013816
 8001ff4:	20013818 	.word	0x20013818

08001ff8 <_ZN8touchgfx10OSWrappers10initializeEv>:
 * Initialize frame buffer semaphore and queue/mutex for VSYNC signal.
 */
void OSWrappers::initialize()
{
    // Create a queue of length 1
    frame_buffer_sem = osSemaphoreNew(1, 1, NULL); // Binary semaphore
 8001ff8:	2101      	movs	r1, #1
{
 8001ffa:	b508      	push	{r3, lr}
    frame_buffer_sem = osSemaphoreNew(1, 1, NULL); // Binary semaphore
 8001ffc:	2200      	movs	r2, #0
 8001ffe:	4608      	mov	r0, r1
 8002000:	f00b fab0 	bl	800d564 <osSemaphoreNew>
 8002004:	4b0a      	ldr	r3, [pc, #40]	; (8002030 <_ZN8touchgfx10OSWrappers10initializeEv+0x38>)
 8002006:	6018      	str	r0, [r3, #0]
    assert((frame_buffer_sem != NULL) && "Creation of framebuffer semaphore failed");
 8002008:	b928      	cbnz	r0, 8002016 <_ZN8touchgfx10OSWrappers10initializeEv+0x1e>
 800200a:	4b0a      	ldr	r3, [pc, #40]	; (8002034 <_ZN8touchgfx10OSWrappers10initializeEv+0x3c>)
 800200c:	4a0a      	ldr	r2, [pc, #40]	; (8002038 <_ZN8touchgfx10OSWrappers10initializeEv+0x40>)
 800200e:	2128      	movs	r1, #40	; 0x28

    // Create a queue of length 1
    vsync_queue = osMessageQueueNew(1, 4, NULL);
    assert((vsync_queue != NULL) && "Creation of vsync message queue failed");
 8002010:	480a      	ldr	r0, [pc, #40]	; (800203c <_ZN8touchgfx10OSWrappers10initializeEv+0x44>)
 8002012:	f029 f9a5 	bl	802b360 <__assert_func>
    vsync_queue = osMessageQueueNew(1, 4, NULL);
 8002016:	2200      	movs	r2, #0
 8002018:	2104      	movs	r1, #4
 800201a:	2001      	movs	r0, #1
 800201c:	f00b fb56 	bl	800d6cc <osMessageQueueNew>
 8002020:	4b07      	ldr	r3, [pc, #28]	; (8002040 <_ZN8touchgfx10OSWrappers10initializeEv+0x48>)
 8002022:	6018      	str	r0, [r3, #0]
    assert((vsync_queue != NULL) && "Creation of vsync message queue failed");
 8002024:	b918      	cbnz	r0, 800202e <_ZN8touchgfx10OSWrappers10initializeEv+0x36>
 8002026:	4b07      	ldr	r3, [pc, #28]	; (8002044 <_ZN8touchgfx10OSWrappers10initializeEv+0x4c>)
 8002028:	4a03      	ldr	r2, [pc, #12]	; (8002038 <_ZN8touchgfx10OSWrappers10initializeEv+0x40>)
 800202a:	212c      	movs	r1, #44	; 0x2c
 800202c:	e7f0      	b.n	8002010 <_ZN8touchgfx10OSWrappers10initializeEv+0x18>
}
 800202e:	bd08      	pop	{r3, pc}
 8002030:	20000888 	.word	0x20000888
 8002034:	0802c7d4 	.word	0x0802c7d4
 8002038:	0802c81d 	.word	0x0802c81d
 800203c:	0802c84c 	.word	0x0802c84c
 8002040:	20000884 	.word	0x20000884
 8002044:	0802c8c6 	.word	0x0802c8c6

08002048 <_ZN8touchgfx10OSWrappers24takeFrameBufferSemaphoreEv>:
/*
 * Take the frame buffer semaphore. Blocks until semaphore is available.
 */
void OSWrappers::takeFrameBufferSemaphore()
{
    osSemaphoreAcquire(frame_buffer_sem, osWaitForever);
 8002048:	4b02      	ldr	r3, [pc, #8]	; (8002054 <_ZN8touchgfx10OSWrappers24takeFrameBufferSemaphoreEv+0xc>)
 800204a:	f04f 31ff 	mov.w	r1, #4294967295
 800204e:	6818      	ldr	r0, [r3, #0]
 8002050:	f00b badc 	b.w	800d60c <osSemaphoreAcquire>
 8002054:	20000888 	.word	0x20000888

08002058 <_ZN8touchgfx10OSWrappers24giveFrameBufferSemaphoreEv>:
/*
 * Release the frame buffer semaphore.
 */
void OSWrappers::giveFrameBufferSemaphore()
{
    osSemaphoreRelease(frame_buffer_sem);
 8002058:	4b01      	ldr	r3, [pc, #4]	; (8002060 <_ZN8touchgfx10OSWrappers24giveFrameBufferSemaphoreEv+0x8>)
 800205a:	6818      	ldr	r0, [r3, #0]
 800205c:	f00b bb0a 	b.w	800d674 <osSemaphoreRelease>
 8002060:	20000888 	.word	0x20000888

08002064 <_ZN8touchgfx10OSWrappers27tryTakeFrameBufferSemaphoreEv>:
 * Note must return immediately! This function does not care who has the taken the semaphore,
 * it only serves to make sure that the semaphore is taken by someone.
 */
void OSWrappers::tryTakeFrameBufferSemaphore()
{
    osSemaphoreAcquire(frame_buffer_sem, 0);
 8002064:	4b02      	ldr	r3, [pc, #8]	; (8002070 <_ZN8touchgfx10OSWrappers27tryTakeFrameBufferSemaphoreEv+0xc>)
 8002066:	2100      	movs	r1, #0
 8002068:	6818      	ldr	r0, [r3, #0]
 800206a:	f00b bacf 	b.w	800d60c <osSemaphoreAcquire>
 800206e:	bf00      	nop
 8002070:	20000888 	.word	0x20000888

08002074 <_ZN8touchgfx10OSWrappers31giveFrameBufferSemaphoreFromISREv>:
 8002074:	f7ff bff0 	b.w	8002058 <_ZN8touchgfx10OSWrappers24giveFrameBufferSemaphoreEv>

08002078 <_ZN8touchgfx10OSWrappers11signalVSyncEv>:
 * Note This function is called from an ISR, and should (depending on OS) trigger a
 * scheduling.
 */
void OSWrappers::signalVSync()
{
    osMessageQueuePut(vsync_queue, &dummy, 0, 0);
 8002078:	4803      	ldr	r0, [pc, #12]	; (8002088 <_ZN8touchgfx10OSWrappers11signalVSyncEv+0x10>)
 800207a:	4904      	ldr	r1, [pc, #16]	; (800208c <_ZN8touchgfx10OSWrappers11signalVSyncEv+0x14>)
 800207c:	6800      	ldr	r0, [r0, #0]
 800207e:	2300      	movs	r3, #0
 8002080:	461a      	mov	r2, r3
 8002082:	f00b bb5d 	b.w	800d740 <osMessageQueuePut>
 8002086:	bf00      	nop
 8002088:	20000884 	.word	0x20000884
 800208c:	20000010 	.word	0x20000010

08002090 <_ZN8touchgfx10OSWrappers12waitForVSyncEv>:
 *
 * Note This function must first clear the mutex/queue and then wait for the next one to
 * occur.
 */
void OSWrappers::waitForVSync()
{
 8002090:	b513      	push	{r0, r1, r4, lr}
    uint32_t dummyGet;
    // First make sure the queue is empty, by trying to remove an element with 0 timeout.
    osMessageQueueGet(vsync_queue, &dummyGet, 0, 0);
 8002092:	4c08      	ldr	r4, [pc, #32]	; (80020b4 <_ZN8touchgfx10OSWrappers12waitForVSyncEv+0x24>)
 8002094:	2300      	movs	r3, #0
 8002096:	461a      	mov	r2, r3
 8002098:	a901      	add	r1, sp, #4
 800209a:	6820      	ldr	r0, [r4, #0]
 800209c:	f00b fb86 	bl	800d7ac <osMessageQueueGet>

    // Then, wait for next VSYNC to occur.
    osMessageQueueGet(vsync_queue, &dummyGet, 0, osWaitForever);
 80020a0:	6820      	ldr	r0, [r4, #0]
 80020a2:	f04f 33ff 	mov.w	r3, #4294967295
 80020a6:	2200      	movs	r2, #0
 80020a8:	a901      	add	r1, sp, #4
 80020aa:	f00b fb7f 	bl	800d7ac <osMessageQueueGet>
}
 80020ae:	b002      	add	sp, #8
 80020b0:	bd10      	pop	{r4, pc}
 80020b2:	bf00      	nop
 80020b4:	20000884 	.word	0x20000884

080020b8 <_ZN8touchgfx13DMA_Interface10initializeEv>:
    }

    /** Perform initialization. Does nothing in this base class. */
    virtual void initialize()
    {
    }
 80020b8:	4770      	bx	lr

080020ba <_ZN8touchgfx13DMA_Interface10getDMATypeEv>:
     * @return a DMAType value of the concrete DMA_Interface implementation.
     */
    virtual DMAType getDMAType()
    {
        return DMA_TYPE_GENERIC;
    }
 80020ba:	2000      	movs	r0, #0
 80020bc:	4770      	bx	lr

080020be <_ZN8STM32DMA18signalDMAInterruptEv>:
     *
     * @brief Does nothing.
     */
    virtual void signalDMAInterrupt()
    {
    }
 80020be:	4770      	bx	lr

080020c0 <_ZN8STM32DMA5flushEv>:
     * @brief Block until all DMA transfers are complete. Since this particular DMA does not do
     * anything, return immediately.
     */
    virtual void flush()
    {
    }
 80020c0:	4770      	bx	lr

080020c2 <_ZN8STM32DMA11getBlitCapsEv>:
}

touchgfx::BlitOperations STM32DMA::getBlitCaps()
{
    return static_cast<touchgfx::BlitOperations>(0);
}
 80020c2:	2000      	movs	r0, #0
 80020c4:	4770      	bx	lr

080020c6 <_ZN8STM32DMAD1Ev>:
class STM32DMA : public touchgfx::DMA_Interface
 80020c6:	4770      	bx	lr

080020c8 <_ZN8STM32DMA13setupDataCopyERKN8touchgfx6BlitOpE>:

void STM32DMA::setupDataCopy(const touchgfx::BlitOp& blitOp)
{
 80020c8:	b508      	push	{r3, lr}
    assert(0 && "DMA operation not supported");
 80020ca:	4a03      	ldr	r2, [pc, #12]	; (80020d8 <_ZN8STM32DMA13setupDataCopyERKN8touchgfx6BlitOpE+0x10>)
 80020cc:	4b03      	ldr	r3, [pc, #12]	; (80020dc <_ZN8STM32DMA13setupDataCopyERKN8touchgfx6BlitOpE+0x14>)
 80020ce:	4804      	ldr	r0, [pc, #16]	; (80020e0 <_ZN8STM32DMA13setupDataCopyERKN8touchgfx6BlitOpE+0x18>)
 80020d0:	2122      	movs	r1, #34	; 0x22
 80020d2:	f029 f945 	bl	802b360 <__assert_func>
 80020d6:	bf00      	nop
 80020d8:	0802c92b 	.word	0x0802c92b
 80020dc:	0802c908 	.word	0x0802c908
 80020e0:	0802c969 	.word	0x0802c969

080020e4 <_ZN8STM32DMA13setupDataFillERKN8touchgfx6BlitOpE>:
}

void STM32DMA::setupDataFill(const touchgfx::BlitOp& blitOp)
{
 80020e4:	b508      	push	{r3, lr}
    assert(0 && "DMA operation not supported");
 80020e6:	4a03      	ldr	r2, [pc, #12]	; (80020f4 <_ZN8STM32DMA13setupDataFillERKN8touchgfx6BlitOpE+0x10>)
 80020e8:	4b03      	ldr	r3, [pc, #12]	; (80020f8 <_ZN8STM32DMA13setupDataFillERKN8touchgfx6BlitOpE+0x14>)
 80020ea:	4804      	ldr	r0, [pc, #16]	; (80020fc <_ZN8STM32DMA13setupDataFillERKN8touchgfx6BlitOpE+0x18>)
 80020ec:	2127      	movs	r1, #39	; 0x27
 80020ee:	f029 f937 	bl	802b360 <__assert_func>
 80020f2:	bf00      	nop
 80020f4:	0802c9e1 	.word	0x0802c9e1
 80020f8:	0802c908 	.word	0x0802c908
 80020fc:	0802c969 	.word	0x0802c969

08002100 <_ZN8STM32DMAD0Ev>:
 8002100:	b510      	push	{r4, lr}
 8002102:	2144      	movs	r1, #68	; 0x44
 8002104:	4604      	mov	r4, r0
 8002106:	f028 fb18 	bl	802a73a <_ZdlPvj>
 800210a:	4620      	mov	r0, r4
 800210c:	bd10      	pop	{r4, pc}
	...

08002110 <_ZN8STM32DMAC1Ev>:
STM32DMA::STM32DMA()
 8002110:	b538      	push	{r3, r4, r5, lr}
 8002112:	4604      	mov	r4, r0
    : DMA_Interface(q), q(&b, 1)
 8002114:	4621      	mov	r1, r4
     * Constructs a DMA Interface object.
     *
     * @param [in] dmaQueue Reference to the queue of DMA operations.
     */
    DMA_Interface(DMA_Queue& dmaQueue)
        : queue(dmaQueue), isRunning(false), isAllowed(false)
 8002116:	2500      	movs	r5, #0
 8002118:	4b06      	ldr	r3, [pc, #24]	; (8002134 <_ZN8STM32DMAC1Ev+0x24>)
 800211a:	7225      	strb	r5, [r4, #8]
 800211c:	300c      	adds	r0, #12
 800211e:	6060      	str	r0, [r4, #4]
 8002120:	7265      	strb	r5, [r4, #9]
 8002122:	2201      	movs	r2, #1
 8002124:	f841 3b20 	str.w	r3, [r1], #32
 8002128:	f00f ff70 	bl	801200c <_ZN8touchgfx17LockFreeDMA_QueueC1EPNS_6BlitOpEi>
 */
struct colortype
{
    /** Default constructor. Creates a black (0) color. */
    colortype()
        : color(0)
 800212c:	62e5      	str	r5, [r4, #44]	; 0x2c
}
 800212e:	4620      	mov	r0, r4
 8002130:	bd38      	pop	{r3, r4, r5, pc}
 8002132:	bf00      	nop
 8002134:	0802ca28 	.word	0x0802ca28

08002138 <_ZNK8touchgfx9PartitionINS_4meta8TypeListINS_14WipeTransitionILNS_9DirectionE3EEENS2_INS1_3NilES6_EEEELt1EE8capacityEv>:
    };

    virtual uint16_t capacity() const
    {
        return NUMBER_OF_ELEMENTS;
    }
 8002138:	2001      	movs	r0, #1
 800213a:	4770      	bx	lr

0800213c <_ZN8touchgfx9PartitionINS_4meta8TypeListINS_14WipeTransitionILNS_9DirectionE3EEENS2_INS1_3NilES6_EEEELt1EE12element_sizeEv>:

    virtual uint32_t element_size()
    {
        return sizeof(stBlocks[0]);
    }
 800213c:	2038      	movs	r0, #56	; 0x38
 800213e:	4770      	bx	lr

08002140 <_ZN8touchgfx9PartitionINS_4meta8TypeListINS_14WipeTransitionILNS_9DirectionE3EEENS2_INS1_3NilES6_EEEELt1EE7elementEt>:

protected:
    virtual void* element(uint16_t index)
    {
        return &stBlocks[index];
 8002140:	2338      	movs	r3, #56	; 0x38
 8002142:	fb03 0001 	mla	r0, r3, r1, r0
    }
 8002146:	3008      	adds	r0, #8
 8002148:	4770      	bx	lr

0800214a <_ZNK8touchgfx9PartitionINS_4meta8TypeListINS_14WipeTransitionILNS_9DirectionE3EEENS2_INS1_3NilES6_EEEELt1EE7elementEt>:

    virtual const void* element(uint16_t index) const
    {
        return &stBlocks[index];
 800214a:	2338      	movs	r3, #56	; 0x38
 800214c:	fb03 0001 	mla	r0, r3, r1, r0
    }
 8002150:	3008      	adds	r0, #8
 8002152:	4770      	bx	lr

08002154 <_ZNK8touchgfx9PartitionINS_4meta8TypeListI19Calibration_PadViewNS2_INS1_3NilES4_EEEELt1EE8capacityEv>:
    }
 8002154:	2001      	movs	r0, #1
 8002156:	4770      	bx	lr

08002158 <_ZN8touchgfx9PartitionINS_4meta8TypeListI19Calibration_PadViewNS2_INS1_3NilES4_EEEELt1EE12element_sizeEv>:
    }
 8002158:	f641 5064 	movw	r0, #7524	; 0x1d64
 800215c:	4770      	bx	lr

0800215e <_ZN8touchgfx9PartitionINS_4meta8TypeListI19Calibration_PadViewNS2_INS1_3NilES4_EEEELt1EE7elementEt>:
        return &stBlocks[index];
 800215e:	f641 5364 	movw	r3, #7524	; 0x1d64
 8002162:	fb03 0001 	mla	r0, r3, r1, r0
    }
 8002166:	3008      	adds	r0, #8
 8002168:	4770      	bx	lr

0800216a <_ZNK8touchgfx9PartitionINS_4meta8TypeListI19Calibration_PadViewNS2_INS1_3NilES4_EEEELt1EE7elementEt>:
        return &stBlocks[index];
 800216a:	f641 5364 	movw	r3, #7524	; 0x1d64
 800216e:	fb03 0001 	mla	r0, r3, r1, r0
    }
 8002172:	3008      	adds	r0, #8
 8002174:	4770      	bx	lr

08002176 <_ZNK8touchgfx9PartitionINS_4meta8TypeListI21Shutting_OffPresenterNS2_INS1_3NilES4_EEEELt1EE8capacityEv>:
    }
 8002176:	2001      	movs	r0, #1
 8002178:	4770      	bx	lr

0800217a <_ZN8touchgfx9PartitionINS_4meta8TypeListI21Shutting_OffPresenterNS2_INS1_3NilES4_EEEELt1EE12element_sizeEv>:
    }
 800217a:	2010      	movs	r0, #16
 800217c:	4770      	bx	lr

0800217e <_ZN8touchgfx9PartitionINS_4meta8TypeListI21Shutting_OffPresenterNS2_INS1_3NilES4_EEEELt1EE7elementEt>:
        return &stBlocks[index];
 800217e:	eb00 1001 	add.w	r0, r0, r1, lsl #4
    }
 8002182:	3008      	adds	r0, #8
 8002184:	4770      	bx	lr

08002186 <_ZNK8touchgfx9PartitionINS_4meta8TypeListI21Shutting_OffPresenterNS2_INS1_3NilES4_EEEELt1EE7elementEt>:
        return &stBlocks[index];
 8002186:	eb00 1001 	add.w	r0, r0, r1, lsl #4
    }
 800218a:	3008      	adds	r0, #8
 800218c:	4770      	bx	lr

0800218e <_ZN16FrontendHeapBase15gotoStartScreenER19FrontendApplication>:
     */
    typedef touchgfx::meta::select_type_maxsize< GeneratedTransitionTypes >::type MaxGeneratedTransitionType;

    virtual void gotoStartScreen(FrontendApplication& app)
    {
        app.gotoMain_MenuScreenNoTransition();
 800218e:	4608      	mov	r0, r1
 8002190:	f002 ba98 	b.w	80046c4 <_ZN23FrontendApplicationBase31gotoMain_MenuScreenNoTransitionEv>

08002194 <_ZN8touchgfx9PartitionINS_4meta8TypeListINS_14WipeTransitionILNS_9DirectionE3EEENS2_INS1_3NilES6_EEEELt1EED1Ev>:
class Partition : public AbstractPartition
 8002194:	b510      	push	{r4, lr}
 8002196:	4b03      	ldr	r3, [pc, #12]	; (80021a4 <_ZN8touchgfx9PartitionINS_4meta8TypeListINS_14WipeTransitionILNS_9DirectionE3EEENS2_INS1_3NilES6_EEEELt1EED1Ev+0x10>)
 8002198:	6003      	str	r3, [r0, #0]
 800219a:	4604      	mov	r4, r0
 800219c:	f00d ff5f 	bl	801005e <_ZN8touchgfx17AbstractPartitionD1Ev>
 80021a0:	4620      	mov	r0, r4
 80021a2:	bd10      	pop	{r4, pc}
 80021a4:	0802cae0 	.word	0x0802cae0

080021a8 <_ZN8touchgfx9PartitionINS_4meta8TypeListINS_14WipeTransitionILNS_9DirectionE3EEENS2_INS1_3NilES6_EEEELt1EED0Ev>:
 80021a8:	b510      	push	{r4, lr}
 80021aa:	4604      	mov	r4, r0
 80021ac:	f7ff fff2 	bl	8002194 <_ZN8touchgfx9PartitionINS_4meta8TypeListINS_14WipeTransitionILNS_9DirectionE3EEENS2_INS1_3NilES6_EEEELt1EED1Ev>
 80021b0:	4620      	mov	r0, r4
 80021b2:	2140      	movs	r1, #64	; 0x40
 80021b4:	f028 fac1 	bl	802a73a <_ZdlPvj>
 80021b8:	4620      	mov	r0, r4
 80021ba:	bd10      	pop	{r4, pc}

080021bc <_ZN8touchgfx9PartitionINS_4meta8TypeListI19Calibration_PadViewNS2_INS1_3NilES4_EEEELt1EED1Ev>:
 80021bc:	b510      	push	{r4, lr}
 80021be:	4b03      	ldr	r3, [pc, #12]	; (80021cc <_ZN8touchgfx9PartitionINS_4meta8TypeListI19Calibration_PadViewNS2_INS1_3NilES4_EEEELt1EED1Ev+0x10>)
 80021c0:	6003      	str	r3, [r0, #0]
 80021c2:	4604      	mov	r4, r0
 80021c4:	f00d ff4b 	bl	801005e <_ZN8touchgfx17AbstractPartitionD1Ev>
 80021c8:	4620      	mov	r0, r4
 80021ca:	bd10      	pop	{r4, pc}
 80021cc:	0802caac 	.word	0x0802caac

080021d0 <_ZN8touchgfx9PartitionINS_4meta8TypeListI19Calibration_PadViewNS2_INS1_3NilES4_EEEELt1EED0Ev>:
 80021d0:	b510      	push	{r4, lr}
 80021d2:	4604      	mov	r4, r0
 80021d4:	f7ff fff2 	bl	80021bc <_ZN8touchgfx9PartitionINS_4meta8TypeListI19Calibration_PadViewNS2_INS1_3NilES4_EEEELt1EED1Ev>
 80021d8:	4620      	mov	r0, r4
 80021da:	f641 516c 	movw	r1, #7532	; 0x1d6c
 80021de:	f028 faac 	bl	802a73a <_ZdlPvj>
 80021e2:	4620      	mov	r0, r4
 80021e4:	bd10      	pop	{r4, pc}
	...

080021e8 <_ZN8touchgfx9PartitionINS_4meta8TypeListI21Shutting_OffPresenterNS2_INS1_3NilES4_EEEELt1EED1Ev>:
 80021e8:	b510      	push	{r4, lr}
 80021ea:	4b03      	ldr	r3, [pc, #12]	; (80021f8 <_ZN8touchgfx9PartitionINS_4meta8TypeListI21Shutting_OffPresenterNS2_INS1_3NilES4_EEEELt1EED1Ev+0x10>)
 80021ec:	6003      	str	r3, [r0, #0]
 80021ee:	4604      	mov	r4, r0
 80021f0:	f00d ff35 	bl	801005e <_ZN8touchgfx17AbstractPartitionD1Ev>
 80021f4:	4620      	mov	r0, r4
 80021f6:	bd10      	pop	{r4, pc}
 80021f8:	0802ca78 	.word	0x0802ca78

080021fc <_ZN8touchgfx9PartitionINS_4meta8TypeListI21Shutting_OffPresenterNS2_INS1_3NilES4_EEEELt1EED0Ev>:
 80021fc:	b510      	push	{r4, lr}
 80021fe:	4604      	mov	r4, r0
 8002200:	f7ff fff2 	bl	80021e8 <_ZN8touchgfx9PartitionINS_4meta8TypeListI21Shutting_OffPresenterNS2_INS1_3NilES4_EEEELt1EED1Ev>
 8002204:	4620      	mov	r0, r4
 8002206:	2118      	movs	r1, #24
 8002208:	f028 fa97 	bl	802a73a <_ZdlPvj>
 800220c:	4620      	mov	r0, r4
 800220e:	bd10      	pop	{r4, pc}

08002210 <_ZN12FrontendHeapD1Ev>:
#ifndef FRONTENDHEAP_HPP
#define FRONTENDHEAP_HPP

#include <gui_generated/common/FrontendHeapBase.hpp>

class FrontendHeap : public FrontendHeapBase
 8002210:	b510      	push	{r4, lr}
 8002212:	4b09      	ldr	r3, [pc, #36]	; (8002238 <_ZN12FrontendHeapD1Ev+0x28>)
 8002214:	6003      	str	r3, [r0, #0]
 8002216:	4604      	mov	r4, r0
 8002218:	f500 50ec 	add.w	r0, r0, #7552	; 0x1d80
 800221c:	3018      	adds	r0, #24
 800221e:	f7ff ffb9 	bl	8002194 <_ZN8touchgfx9PartitionINS_4meta8TypeListINS_14WipeTransitionILNS_9DirectionE3EEENS2_INS1_3NilES6_EEEELt1EED1Ev>
 8002222:	f104 002c 	add.w	r0, r4, #44	; 0x2c
 8002226:	f7ff ffc9 	bl	80021bc <_ZN8touchgfx9PartitionINS_4meta8TypeListI19Calibration_PadViewNS2_INS1_3NilES4_EEEELt1EED1Ev>
 800222a:	f104 0014 	add.w	r0, r4, #20
 800222e:	f7ff ffdb 	bl	80021e8 <_ZN8touchgfx9PartitionINS_4meta8TypeListI21Shutting_OffPresenterNS2_INS1_3NilES4_EEEELt1EED1Ev>
 8002232:	4620      	mov	r0, r4
 8002234:	bd10      	pop	{r4, pc}
 8002236:	bf00      	nop
 8002238:	0802cb14 	.word	0x0802cb14

0800223c <__tcf_0>:
                            > > CombinedTransitionTypes;
    typedef touchgfx::meta::select_type_maxsize< CombinedTransitionTypes >::type MaxTransitionType;

    static FrontendHeap& getInstance()
    {
        static FrontendHeap instance;
 800223c:	b508      	push	{r3, lr}
 800223e:	4802      	ldr	r0, [pc, #8]	; (8002248 <__tcf_0+0xc>)
 8002240:	f7ff ffe6 	bl	8002210 <_ZN12FrontendHeapD1Ev>
 8002244:	bd08      	pop	{r3, pc}
 8002246:	bf00      	nop
 8002248:	20000890 	.word	0x20000890

0800224c <_ZN12FrontendHeapD0Ev>:
class FrontendHeap : public FrontendHeapBase
 800224c:	b510      	push	{r4, lr}
 800224e:	4604      	mov	r4, r0
 8002250:	f7ff ffde 	bl	8002210 <_ZN12FrontendHeapD1Ev>
 8002254:	4620      	mov	r0, r4
 8002256:	f641 713c 	movw	r1, #7996	; 0x1f3c
 800225a:	f028 fa6e 	bl	802a73a <_ZdlPvj>
 800225e:	4620      	mov	r0, r4
 8002260:	bd10      	pop	{r4, pc}
	...

08002264 <touchgfx_init>:
static ApplicationFontProvider fontProvider;
static Texts texts;
static TouchGFXHAL hal(dma, display, tc, 240, 320);

void touchgfx_init()
{
 8002264:	e92d 41f3 	stmdb	sp!, {r0, r1, r4, r5, r6, r7, r8, lr}
    Bitmap::registerBitmapDatabase(BitmapDatabase::getInstance(), BitmapDatabase::getInstanceSize());
 8002268:	f000 fa5c 	bl	8002724 <_ZN14BitmapDatabase11getInstanceEv>
 800226c:	4605      	mov	r5, r0
 800226e:	f000 fa5d 	bl	800272c <_ZN14BitmapDatabase15getInstanceSizeEv>
 8002272:	2400      	movs	r4, #0
 8002274:	4601      	mov	r1, r0
 8002276:	4623      	mov	r3, r4
 8002278:	4628      	mov	r0, r5
 800227a:	4622      	mov	r2, r4
 800227c:	9400      	str	r4, [sp, #0]
 800227e:	f017 fde3 	bl	8019e48 <_ZN8touchgfx6Bitmap22registerBitmapDatabaseEPKNS0_10BitmapDataEtPtmm>
     *
     * @param  t The array of texts.
     */
    static void registerTexts(const Texts* t)
    {
        texts = t;
 8002282:	4b26      	ldr	r3, [pc, #152]	; (800231c <touchgfx_init+0xb8>)
 8002284:	4a26      	ldr	r2, [pc, #152]	; (8002320 <touchgfx_init+0xbc>)
        static FrontendHeap instance;
 8002286:	4d27      	ldr	r5, [pc, #156]	; (8002324 <touchgfx_init+0xc0>)
 8002288:	601a      	str	r2, [r3, #0]
    TypedText::registerTexts(&texts);
    Texts::setLanguage(0);
 800228a:	4620      	mov	r0, r4
 800228c:	f006 fa20 	bl	80086d0 <_ZN8touchgfx5Texts11setLanguageEt>

    FontManager::setFontProvider(&fontProvider);
 8002290:	4825      	ldr	r0, [pc, #148]	; (8002328 <touchgfx_init+0xc4>)
 8002292:	f017 fd41 	bl	8019d18 <_ZN8touchgfx11FontManager15setFontProviderEPNS_12FontProviderE>
 8002296:	682b      	ldr	r3, [r5, #0]
 8002298:	f3bf 8f5b 	dmb	ish
 800229c:	07db      	lsls	r3, r3, #31
 800229e:	d436      	bmi.n	800230e <touchgfx_init+0xaa>
 80022a0:	4628      	mov	r0, r5
 80022a2:	f028 fa4c 	bl	802a73e <__cxa_guard_acquire>
 80022a6:	b390      	cbz	r0, 800230e <touchgfx_init+0xaa>
     */
    MVPHeap(AbstractPartition& pres,
            AbstractPartition& scr,
            AbstractPartition& tra,
            MVPApplication& app)
        : presenterStorage(pres),
 80022a8:	4c20      	ldr	r4, [pc, #128]	; (800232c <touchgfx_init+0xc8>)
    Model model;
    FrontendApplication app;

private:
    FrontendHeap() : FrontendHeapBase(presenters, views, transitions, app),
                     app(model, *this)
 80022aa:	4b21      	ldr	r3, [pc, #132]	; (8002330 <touchgfx_init+0xcc>)
          screenStorage(scr),
          transitionStorage(tra),
 80022ac:	4f21      	ldr	r7, [pc, #132]	; (8002334 <touchgfx_init+0xd0>)
 80022ae:	6023      	str	r3, [r4, #0]
          frontendApplication(app)
 80022b0:	f504 56ef 	add.w	r6, r4, #7648	; 0x1de0
        : presenterStorage(pres),
 80022b4:	f104 0014 	add.w	r0, r4, #20
          screenStorage(scr),
 80022b8:	f104 082c 	add.w	r8, r4, #44	; 0x2c
        : presenterStorage(pres),
 80022bc:	6060      	str	r0, [r4, #4]
          screenStorage(scr),
 80022be:	f8c4 8008 	str.w	r8, [r4, #8]
          transitionStorage(tra),
 80022c2:	60e7      	str	r7, [r4, #12]
          frontendApplication(app)
 80022c4:	6126      	str	r6, [r4, #16]
 80022c6:	f00d fecb 	bl	8010060 <_ZN8touchgfx17AbstractPartitionC1Ev>
 80022ca:	4b1b      	ldr	r3, [pc, #108]	; (8002338 <touchgfx_init+0xd4>)
 80022cc:	6163      	str	r3, [r4, #20]
 80022ce:	4640      	mov	r0, r8
 80022d0:	f00d fec6 	bl	8010060 <_ZN8touchgfx17AbstractPartitionC1Ev>
 80022d4:	4b19      	ldr	r3, [pc, #100]	; (800233c <touchgfx_init+0xd8>)
 80022d6:	62e3      	str	r3, [r4, #44]	; 0x2c
 80022d8:	4638      	mov	r0, r7
 80022da:	f00d fec1 	bl	8010060 <_ZN8touchgfx17AbstractPartitionC1Ev>
 80022de:	f504 5380 	add.w	r3, r4, #4096	; 0x1000
 80022e2:	4a17      	ldr	r2, [pc, #92]	; (8002340 <touchgfx_init+0xdc>)
 80022e4:	f8c3 2d98 	str.w	r2, [r3, #3480]	; 0xd98
 80022e8:	f603 50d8 	addw	r0, r3, #3544	; 0xdd8
 80022ec:	f006 fe66 	bl	8008fbc <_ZN5ModelC1Ev>
 80022f0:	4622      	mov	r2, r4
 80022f2:	f1a6 0108 	sub.w	r1, r6, #8
 80022f6:	4630      	mov	r0, r6
 80022f8:	f006 fb70 	bl	80089dc <_ZN19FrontendApplicationC1ER5ModelR12FrontendHeap>
 80022fc:	4630      	mov	r0, r6
 80022fe:	f002 f9e1 	bl	80046c4 <_ZN23FrontendApplicationBase31gotoMain_MenuScreenNoTransitionEv>
        static FrontendHeap instance;
 8002302:	4810      	ldr	r0, [pc, #64]	; (8002344 <touchgfx_init+0xe0>)
 8002304:	f029 f84a 	bl	802b39c <atexit>
 8002308:	4628      	mov	r0, r5
 800230a:	f028 fa24 	bl	802a756 <__cxa_guard_release>
    (void)heap;

    /*
     * Initialize TouchGFX
     */
    hal.initialize();
 800230e:	480e      	ldr	r0, [pc, #56]	; (8002348 <touchgfx_init+0xe4>)
}
 8002310:	b002      	add	sp, #8
 8002312:	e8bd 41f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, lr}
    hal.initialize();
 8002316:	f7ff bdb5 	b.w	8001e84 <_ZN11TouchGFXHAL10initializeEv>
 800231a:	bf00      	nop
 800231c:	20013880 	.word	0x20013880
 8002320:	20002890 	.word	0x20002890
 8002324:	2000088c 	.word	0x2000088c
 8002328:	20000014 	.word	0x20000014
 800232c:	20000890 	.word	0x20000890
 8002330:	0802cb14 	.word	0x0802cb14
 8002334:	20002628 	.word	0x20002628
 8002338:	0802ca78 	.word	0x0802ca78
 800233c:	0802caac 	.word	0x0802caac
 8002340:	0802cae0 	.word	0x0802cae0
 8002344:	0800223d 	.word	0x0800223d
 8002348:	20002814 	.word	0x20002814

0800234c <touchgfx_components_init>:

void touchgfx_components_init()
{
}
 800234c:	4770      	bx	lr
	...

08002350 <touchgfx_taskEntry>:
     * Main event loop. Will wait for VSYNC signal, and then process next frame. Call
     * this function from your GUI task.
     *
     * Note This function never returns
     */
    hal.taskEntry();
 8002350:	4801      	ldr	r0, [pc, #4]	; (8002358 <touchgfx_taskEntry+0x8>)
 8002352:	f7ff bda5 	b.w	8001ea0 <_ZN11TouchGFXHAL9taskEntryEv>
 8002356:	bf00      	nop
 8002358:	20002814 	.word	0x20002814

0800235c <_GLOBAL__sub_I_touchgfx_init>:
}
 800235c:	b570      	push	{r4, r5, r6, lr}
static STM32DMA dma;
 800235e:	4e22      	ldr	r6, [pc, #136]	; (80023e8 <_GLOBAL__sub_I_touchgfx_init+0x8c>)
{
public:

    STM32TouchController() {}
 8002360:	4c22      	ldr	r4, [pc, #136]	; (80023ec <_GLOBAL__sub_I_touchgfx_init+0x90>)
static LCD16bpp display;
 8002362:	4d23      	ldr	r5, [pc, #140]	; (80023f0 <_GLOBAL__sub_I_touchgfx_init+0x94>)
 8002364:	4b23      	ldr	r3, [pc, #140]	; (80023f4 <_GLOBAL__sub_I_touchgfx_init+0x98>)
 8002366:	6023      	str	r3, [r4, #0]
static STM32DMA dma;
 8002368:	4630      	mov	r0, r6
 800236a:	f7ff fed1 	bl	8002110 <_ZN8STM32DMAC1Ev>
static LCD16bpp display;
 800236e:	4628      	mov	r0, r5
 8002370:	f01c f836 	bl	801e3e0 <_ZN8touchgfx8LCD16bppC1Ev>
        : dma(dmaInterface),
 8002374:	4b20      	ldr	r3, [pc, #128]	; (80023f8 <_GLOBAL__sub_I_touchgfx_init+0x9c>)
        FRAME_BUFFER_WIDTH = DISPLAY_WIDTH = width;
 8002376:	4821      	ldr	r0, [pc, #132]	; (80023fc <_GLOBAL__sub_I_touchgfx_init+0xa0>)
          touchController(touchCtrl),
 8002378:	60dc      	str	r4, [r3, #12]
          mcuInstrumentation(0),
 800237a:	2200      	movs	r2, #0
          refreshStrategy(REFRESH_STRATEGY_DEFAULT),
 800237c:	f44f 7180 	mov.w	r1, #256	; 0x100
          auxiliaryLCD(0),
 8002380:	e9c3 1212 	strd	r1, r2, [r3, #72]	; 0x48
          touchSampleRate(1),
 8002384:	491e      	ldr	r1, [pc, #120]	; (8002400 <_GLOBAL__sub_I_touchgfx_init+0xa4>)
    };

public:
    /** Default constructor. Does nothing. */
    Gestures()
        : drag(), listener(0), dragThresholdValue(0)
 8002386:	861a      	strh	r2, [r3, #48]	; 0x30
          vSyncCompensationEnabled(false),
 8002388:	e9c3 121a 	strd	r1, r2, [r3, #104]	; 0x68
          requestedOrientation(ORIENTATION_LANDSCAPE),
 800238c:	491d      	ldr	r1, [pc, #116]	; (8002404 <_GLOBAL__sub_I_touchgfx_init+0xa8>)
 800238e:	6799      	str	r1, [r3, #120]	; 0x78
        instance = this;
 8002390:	491d      	ldr	r1, [pc, #116]	; (8002408 <_GLOBAL__sub_I_touchgfx_init+0xac>)
          useAuxiliaryLCD(false),
 8002392:	f883 2058 	strb.w	r2, [r3, #88]	; 0x58
        instance = this;
 8002396:	600b      	str	r3, [r1, #0]
        FRAME_BUFFER_WIDTH = DISPLAY_WIDTH = width;
 8002398:	21f0      	movs	r1, #240	; 0xf0
 800239a:	8001      	strh	r1, [r0, #0]
 800239c:	481b      	ldr	r0, [pc, #108]	; (800240c <_GLOBAL__sub_I_touchgfx_init+0xb0>)
          lastY(0),
 800239e:	665a      	str	r2, [r3, #100]	; 0x64
        FRAME_BUFFER_WIDTH = DISPLAY_WIDTH = width;
 80023a0:	8001      	strh	r1, [r0, #0]
        FRAME_BUFFER_HEIGHT = DISPLAY_HEIGHT = height;
 80023a2:	481b      	ldr	r0, [pc, #108]	; (8002410 <_GLOBAL__sub_I_touchgfx_init+0xb4>)
          updateMCULoad(0),
 80023a4:	f883 2070 	strb.w	r2, [r3, #112]	; 0x70
        FRAME_BUFFER_HEIGHT = DISPLAY_HEIGHT = height;
 80023a8:	f44f 71a0 	mov.w	r1, #320	; 0x140
          buttonController(0),
 80023ac:	e9c3 2204 	strd	r2, r2, [r3, #16]
 80023b0:	e9c3 2206 	strd	r2, r2, [r3, #24]
 80023b4:	e9c3 2208 	strd	r2, r2, [r3, #32]
 80023b8:	e9c3 220a 	strd	r2, r2, [r3, #40]	; 0x28
          frameBuffer0(0),
 80023bc:	e9c3 220e 	strd	r2, r2, [r3, #56]	; 0x38
          frameBuffer2(0),
 80023c0:	e9c3 2210 	strd	r2, r2, [r3, #64]	; 0x40
class Rect
{
public:
    /** Default constructor. Resulting in an empty Rect with coordinates 0,0. */
    Rect()
        : x(0), y(0), width(0), height(0)
 80023c4:	e9c3 2214 	strd	r2, r2, [r3, #80]	; 0x50
          lastX(0),
 80023c8:	e9c3 2217 	strd	r2, r2, [r3, #92]	; 0x5c
          cc_begin(0),
 80023cc:	675a      	str	r2, [r3, #116]	; 0x74
          lcdRef(display),
 80023ce:	e9c3 6501 	strd	r6, r5, [r3, #4]
        FRAME_BUFFER_HEIGHT = DISPLAY_HEIGHT = height;
 80023d2:	8001      	strh	r1, [r0, #0]
 80023d4:	480f      	ldr	r0, [pc, #60]	; (8002414 <_GLOBAL__sub_I_touchgfx_init+0xb8>)
 80023d6:	8001      	strh	r1, [r0, #0]
        DISPLAY_ROTATION = rotate0;
 80023d8:	490f      	ldr	r1, [pc, #60]	; (8002418 <_GLOBAL__sub_I_touchgfx_init+0xbc>)
 80023da:	700a      	strb	r2, [r1, #0]
        nativeDisplayOrientation = ((width >= height) ? ORIENTATION_LANDSCAPE : ORIENTATION_PORTRAIT);
 80023dc:	2201      	movs	r2, #1
 80023de:	f883 2034 	strb.w	r2, [r3, #52]	; 0x34
     * @param [in,out] display Reference to LCD interface.
     * @param [in,out] tc      Reference to Touch Controller driver.
     * @param width            Width of the display.
     * @param height           Height of the display.
     */
    TouchGFXHAL(touchgfx::DMA_Interface& dma, touchgfx::LCD& display, touchgfx::TouchController& tc, uint16_t width, uint16_t height) : TouchGFXGeneratedHAL(dma, display, tc, width, height)
 80023e2:	4a0e      	ldr	r2, [pc, #56]	; (800241c <_GLOBAL__sub_I_touchgfx_init+0xc0>)
 80023e4:	601a      	str	r2, [r3, #0]
}
 80023e6:	bd70      	pop	{r4, r5, r6, pc}
 80023e8:	200027d0 	.word	0x200027d0
 80023ec:	200027cc 	.word	0x200027cc
 80023f0:	20002894 	.word	0x20002894
 80023f4:	0802c578 	.word	0x0802c578
 80023f8:	20002814 	.word	0x20002814
 80023fc:	20013810 	.word	0x20013810
 8002400:	01000001 	.word	0x01000001
 8002404:	01010000 	.word	0x01010000
 8002408:	2001381c 	.word	0x2001381c
 800240c:	20013816 	.word	0x20013816
 8002410:	20013812 	.word	0x20013812
 8002414:	20013818 	.word	0x20013818
 8002418:	20013814 	.word	0x20013814
 800241c:	0802c704 	.word	0x0802c704

08002420 <_ZN8touchgfx8Drawable13getFirstChildEv>:
     * @see Container::getFirstChild
     */
    virtual Drawable* getFirstChild()
    {
        return 0;
    }
 8002420:	2000      	movs	r0, #0
 8002422:	4770      	bx	lr

08002424 <_ZN8touchgfx8Drawable4setXEs>:
     *
     * @note For most Drawable widgets, changing this does normally not automatically yield a redraw.
     */
    virtual void setX(int16_t x)
    {
        rect.x = x;
 8002424:	8081      	strh	r1, [r0, #4]
    }
 8002426:	4770      	bx	lr

08002428 <_ZN8touchgfx8Drawable4setYEs>:
     *
     * @note For most Drawable widgets, changing this does normally not automatically yield a redraw.
     */
    virtual void setY(int16_t y)
    {
        rect.y = y;
 8002428:	80c1      	strh	r1, [r0, #6]
    }
 800242a:	4770      	bx	lr

0800242c <_ZN8touchgfx8Drawable8setWidthEs>:
     *
     * @note For most Drawable widgets, changing this does normally not automatically yield a redraw.
     */
    virtual void setWidth(int16_t width)
    {
        rect.width = width;
 800242c:	8101      	strh	r1, [r0, #8]
    }
 800242e:	4770      	bx	lr

08002430 <_ZN8touchgfx8Drawable9setHeightEs>:
     *
     * @note For most Drawable widgets, changing this does normally not automatically yield a redraw.
     */
    virtual void setHeight(int16_t height)
    {
        rect.height = height;
 8002430:	8141      	strh	r1, [r0, #10]
    }
 8002432:	4770      	bx	lr

08002434 <_ZN8touchgfx8Drawable20childGeometryChangedEv>:
     * one or more of its children has changed. Currently only used in ScrollableContainer
     * to redraw scrollbars when the size of the scrolling contents changes.
     */
    virtual void childGeometryChanged()
    {
    }
 8002434:	4770      	bx	lr

08002436 <_ZN8touchgfx8Drawable16handleClickEventERKNS_10ClickEventE>:
     * @param  event The ClickEvent received from the HAL.
     */
    virtual void handleClickEvent(const ClickEvent& event)
    {
        (void)event; // Unused variable
    }
 8002436:	4770      	bx	lr

08002438 <_ZN8touchgfx8Drawable18handleGestureEventERKNS_12GestureEventE>:
     * @param  event The GestureEvent received from the HAL.
     */
    virtual void handleGestureEvent(const GestureEvent& event)
    {
        (void)event; // Unused variable
    }
 8002438:	4770      	bx	lr

0800243a <_ZN8touchgfx8Drawable15handleDragEventERKNS_9DragEventE>:
     * @param  event The DragEvent received from the HAL.
     */
    virtual void handleDragEvent(const DragEvent& event)
    {
        (void)event; // Unused variable
    }
 800243a:	4770      	bx	lr

0800243c <_ZN8touchgfx8Drawable15handleTickEventEv>:
     *
     * @see Application::registerTimerWidget
     */
    virtual void handleTickEvent()
    {
    }
 800243c:	4770      	bx	lr

0800243e <_ZN8touchgfx8Drawable6moveToEss>:
     *
     * @see moveRelative, setXY
     *
     * @note Will redraw the appropriate areas of the screen.
     */
    virtual void moveTo(int16_t x, int16_t y)
 800243e:	b410      	push	{r4}
    {
        moveRelative(x - rect.x, y - rect.y);
 8002440:	88c4      	ldrh	r4, [r0, #6]
 8002442:	6803      	ldr	r3, [r0, #0]
 8002444:	1b12      	subs	r2, r2, r4
 8002446:	8884      	ldrh	r4, [r0, #4]
 8002448:	6d5b      	ldr	r3, [r3, #84]	; 0x54
 800244a:	1b09      	subs	r1, r1, r4
 800244c:	b212      	sxth	r2, r2
    }
 800244e:	f85d 4b04 	ldr.w	r4, [sp], #4
        moveRelative(x - rect.x, y - rect.y);
 8002452:	b209      	sxth	r1, r1
 8002454:	4718      	bx	r3

08002456 <_ZN8touchgfx8Drawable14setupDrawChainERKNS_4RectEPPS0_>:
     * @note For TouchGFX internal use only.
     */
    void resetDrawChainCache()
    {
        // Resetting the cached indicators
        cachedVisibleRect.x = UNCACHED_INDICATOR;
 8002456:	f64f 73ff 	movw	r3, #65535	; 0xffff
 800245a:	8183      	strh	r3, [r0, #12]
        cachedAbsX = UNCACHED_INDICATOR;
 800245c:	f04f 33ff 	mov.w	r3, #4294967295
 8002460:	6203      	str	r3, [r0, #32]
     */
    virtual void setupDrawChain(const Rect& invalidatedArea, Drawable** nextPreviousElement)
    {
        (void)invalidatedArea; // Unused variable
        resetDrawChainCache();
        nextDrawChainElement = *nextPreviousElement;
 8002462:	6813      	ldr	r3, [r2, #0]
 8002464:	61c3      	str	r3, [r0, #28]
        *nextPreviousElement = this;
 8002466:	6010      	str	r0, [r2, #0]
    }
 8002468:	4770      	bx	lr

0800246a <_ZN8touchgfx6Widget12getLastChildEssPPNS_8DrawableE>:
     *
     * @param [out] last Result, the address of the actual instance of the Widget.
     */
    virtual void getLastChild(int16_t /*x*/, int16_t /*y*/, Drawable** last)
    {
        if (isVisible() && isTouchable())
 800246a:	f890 2025 	ldrb.w	r2, [r0, #37]	; 0x25
 800246e:	b11a      	cbz	r2, 8002478 <_ZN8touchgfx6Widget12getLastChildEssPPNS_8DrawableE+0xe>
 8002470:	f890 2024 	ldrb.w	r2, [r0, #36]	; 0x24
 8002474:	b102      	cbz	r2, 8002478 <_ZN8touchgfx6Widget12getLastChildEssPPNS_8DrawableE+0xe>
        {
            *last = this;
 8002476:	6018      	str	r0, [r3, #0]
        }
    }
 8002478:	4770      	bx	lr

0800247a <_ZNK8touchgfx15AbstractPainter18getRenderingMethodEv>:
     * @return HARDWARE if painter uses hardware based drawing, SOFTWARE otherwise.
     */
    virtual HAL::RenderingMethod getRenderingMethod() const
    {
        return HAL::SOFTWARE;
    }
 800247a:	2000      	movs	r0, #0
 800247c:	4770      	bx	lr

0800247e <_ZNK8touchgfx15AbstractPainter5setupERKNS_4RectE>:
     *
     * @see AbstractPainter::paint, AbstractPainter::tearDown
     */
    virtual bool setup(const Rect& widgetRect) const
    {
        widgetWidth = widgetRect.width;
 800247e:	888b      	ldrh	r3, [r1, #4]
 8002480:	8083      	strh	r3, [r0, #4]
        return true;
    }
 8002482:	2001      	movs	r0, #1
 8002484:	4770      	bx	lr

08002486 <_ZNK8touchgfx15AbstractPainter8tearDownEv>:
     * @see AbstractPainter::paint, AbstractPainter::setup
     */
    virtual void tearDown() const
    {
        return;
    }
 8002486:	4770      	bx	lr

08002488 <_ZN8touchgfx12CanvasWidget8setAlphaEh>:
    }

    /** @copydoc Image::setAlpha */
    virtual void setAlpha(uint8_t newAlpha)
    {
        alpha = newAlpha;
 8002488:	f880 1026 	strb.w	r1, [r0, #38]	; 0x26
    }
 800248c:	4770      	bx	lr

0800248e <_ZNK8touchgfx12CanvasWidget8getAlphaEv>:

    /** @copydoc Image::getAlpha() */
    virtual uint8_t getAlpha() const
    {
        return alpha;
    }
 800248e:	f890 0026 	ldrb.w	r0, [r0, #38]	; 0x26
 8002492:	4770      	bx	lr

08002494 <_ZNK8touchgfx12CanvasWidget14getMinimalRectEv>:
     * overwritten in subclasses and return the minimal rectangle containing the shape. See
     * classes such as Circle for example implementations.
     *
     * @return The minimal rectangle containing the shape drawn.
     */
    virtual Rect getMinimalRect() const
 8002494:	b510      	push	{r4, lr}
     * @param  rectY      The y coordinate.
     * @param  rectWidth  The width.
     * @param  rectHeight The height.
     */
    Rect(int16_t rectX, int16_t rectY, int16_t rectWidth, int16_t rectHeight)
        : x(rectX), y(rectY), width(rectWidth), height(rectHeight)
 8002496:	2200      	movs	r2, #0
        return rect.width;
 8002498:	f9b1 4008 	ldrsh.w	r4, [r1, #8]
        return rect.height;
 800249c:	f9b1 100a 	ldrsh.w	r1, [r1, #10]
 80024a0:	8002      	strh	r2, [r0, #0]
 80024a2:	8042      	strh	r2, [r0, #2]
 80024a4:	8084      	strh	r4, [r0, #4]
 80024a6:	80c1      	strh	r1, [r0, #6]
    {
        return Rect(0, 0, getWidth(), getHeight());
    }
 80024a8:	bd10      	pop	{r4, pc}

080024aa <_ZNK8touchgfx12CanvasWidget12getSolidRectEv>:
        : x(0), y(0), width(0), height(0)
 80024aa:	2200      	movs	r2, #0
 80024ac:	8002      	strh	r2, [r0, #0]
 80024ae:	8042      	strh	r2, [r0, #2]
 80024b0:	8082      	strh	r2, [r0, #4]
 80024b2:	80c2      	strh	r2, [r0, #6]
     *       lines will not be drawn and may cause strange display artifacts.
     */
    virtual Rect getSolidRect() const
    {
        return Rect();
    }
 80024b4:	4770      	bx	lr
	...

080024b8 <_ZN20TouchGFXGeneratedHAL19configureInterruptsEv>:
    NVIC->IP[((uint32_t)IRQn)]               = (uint8_t)((priority << (8U - __NVIC_PRIO_BITS)) & (uint32_t)0xFFUL);
 80024b8:	4b02      	ldr	r3, [pc, #8]	; (80024c4 <_ZN20TouchGFXGeneratedHAL19configureInterruptsEv+0xc>)
 80024ba:	2290      	movs	r2, #144	; 0x90
 80024bc:	f883 2358 	strb.w	r2, [r3, #856]	; 0x358
}

void TouchGFXGeneratedHAL::configureInterrupts()
{
    NVIC_SetPriority(LTDC_IRQn, 9);
}
 80024c0:	4770      	bx	lr
 80024c2:	bf00      	nop
 80024c4:	e000e100 	.word	0xe000e100

080024c8 <_ZN20TouchGFXGeneratedHAL16enableInterruptsEv>:
    NVIC->ISER[(((uint32_t)IRQn) >> 5UL)] = (uint32_t)(1UL << (((uint32_t)IRQn) & 0x1FUL));
 80024c8:	4b02      	ldr	r3, [pc, #8]	; (80024d4 <_ZN20TouchGFXGeneratedHAL16enableInterruptsEv+0xc>)
 80024ca:	f04f 7280 	mov.w	r2, #16777216	; 0x1000000
 80024ce:	609a      	str	r2, [r3, #8]

void TouchGFXGeneratedHAL::enableInterrupts()
{
    NVIC_EnableIRQ(LTDC_IRQn);
}
 80024d0:	4770      	bx	lr
 80024d2:	bf00      	nop
 80024d4:	e000e100 	.word	0xe000e100

080024d8 <_ZN20TouchGFXGeneratedHAL28enableLCDControllerInterruptEv>:
    NVIC_DisableIRQ(LTDC_IRQn);
}

void TouchGFXGeneratedHAL::enableLCDControllerInterrupt()
{
    lcd_int_active_line = (LTDC->BPCR & 0x7FF) - 1;
 80024d8:	4a09      	ldr	r2, [pc, #36]	; (8002500 <_ZN20TouchGFXGeneratedHAL28enableLCDControllerInterruptEv+0x28>)
 80024da:	490a      	ldr	r1, [pc, #40]	; (8002504 <_ZN20TouchGFXGeneratedHAL28enableLCDControllerInterruptEv+0x2c>)
 80024dc:	68d3      	ldr	r3, [r2, #12]
    lcd_int_porch_line = (LTDC->AWCR & 0x7FF) - 1;
 80024de:	480a      	ldr	r0, [pc, #40]	; (8002508 <_ZN20TouchGFXGeneratedHAL28enableLCDControllerInterruptEv+0x30>)
    lcd_int_active_line = (LTDC->BPCR & 0x7FF) - 1;
 80024e0:	f3c3 030a 	ubfx	r3, r3, #0, #11
 80024e4:	3b01      	subs	r3, #1
 80024e6:	b29b      	uxth	r3, r3
 80024e8:	800b      	strh	r3, [r1, #0]
    lcd_int_porch_line = (LTDC->AWCR & 0x7FF) - 1;
 80024ea:	6911      	ldr	r1, [r2, #16]
 80024ec:	f3c1 010a 	ubfx	r1, r1, #0, #11
 80024f0:	3901      	subs	r1, #1
 80024f2:	8001      	strh	r1, [r0, #0]

    /* Sets the Line Interrupt position */
    LTDC->LIPCR = lcd_int_active_line;
 80024f4:	6413      	str	r3, [r2, #64]	; 0x40
    /* Line Interrupt Enable            */
    LTDC->IER |= LTDC_IER_LIE;
 80024f6:	6b53      	ldr	r3, [r2, #52]	; 0x34
 80024f8:	f043 0301 	orr.w	r3, r3, #1
 80024fc:	6353      	str	r3, [r2, #52]	; 0x34
}
 80024fe:	4770      	bx	lr
 8002500:	40016800 	.word	0x40016800
 8002504:	2000291a 	.word	0x2000291a
 8002508:	20002918 	.word	0x20002918

0800250c <_ZNK20TouchGFXGeneratedHAL17getTFTFrameBufferEv>:
    HAL::endFrame();
}

uint16_t* TouchGFXGeneratedHAL::getTFTFrameBuffer() const
{
    return (uint16_t*)LTDC_Layer1->CFBAR;
 800250c:	4b01      	ldr	r3, [pc, #4]	; (8002514 <_ZNK20TouchGFXGeneratedHAL17getTFTFrameBufferEv+0x8>)
 800250e:	f8d3 00ac 	ldr.w	r0, [r3, #172]	; 0xac
}
 8002512:	4770      	bx	lr
 8002514:	40016800 	.word	0x40016800

08002518 <_ZN20TouchGFXGeneratedHAL17setTFTFrameBufferEPt>:

void TouchGFXGeneratedHAL::setTFTFrameBuffer(uint16_t* adr)
{
    LTDC_Layer1->CFBAR = (uint32_t)adr;
 8002518:	4b02      	ldr	r3, [pc, #8]	; (8002524 <_ZN20TouchGFXGeneratedHAL17setTFTFrameBufferEPt+0xc>)

    /* Reload immediate */
    LTDC->SRCR = (uint32_t)LTDC_SRCR_IMR;
 800251a:	2201      	movs	r2, #1
    LTDC_Layer1->CFBAR = (uint32_t)adr;
 800251c:	f8c3 10ac 	str.w	r1, [r3, #172]	; 0xac
    LTDC->SRCR = (uint32_t)LTDC_SRCR_IMR;
 8002520:	625a      	str	r2, [r3, #36]	; 0x24
}
 8002522:	4770      	bx	lr
 8002524:	40016800 	.word	0x40016800

08002528 <_ZN20TouchGFXGeneratedHAL10initializeEv>:
{
 8002528:	b570      	push	{r4, r5, r6, lr}
 800252a:	4604      	mov	r4, r0
    HAL::initialize();
 800252c:	f00e fed7 	bl	80112de <_ZN8touchgfx3HAL10initializeEv>
    registerEventListener(*(Application::getInstance()));
 8002530:	6823      	ldr	r3, [r4, #0]
 8002532:	6e5d      	ldr	r5, [r3, #100]	; 0x64
 8002534:	f014 f84c 	bl	80165d0 <_ZN8touchgfx11Application11getInstanceEv>
 8002538:	4601      	mov	r1, r0
 800253a:	4620      	mov	r0, r4
 800253c:	47a8      	blx	r5
    setFrameBufferStartAddresses((void*)frameBuf, (void*)(frameBuf + sizeof(frameBuf) / (sizeof(uint32_t) * 2)), (void*)0);
 800253e:	6823      	ldr	r3, [r4, #0]
 8002540:	4a05      	ldr	r2, [pc, #20]	; (8002558 <_ZN20TouchGFXGeneratedHAL10initializeEv+0x30>)
 8002542:	f8d3 5088 	ldr.w	r5, [r3, #136]	; 0x88
 8002546:	4620      	mov	r0, r4
 8002548:	46ac      	mov	ip, r5
 800254a:	2300      	movs	r3, #0
}
 800254c:	e8bd 4070 	ldmia.w	sp!, {r4, r5, r6, lr}
    setFrameBufferStartAddresses((void*)frameBuf, (void*)(frameBuf + sizeof(frameBuf) / (sizeof(uint32_t) * 2)), (void*)0);
 8002550:	f5a2 3116 	sub.w	r1, r2, #153600	; 0x25800
 8002554:	4760      	bx	ip
 8002556:	bf00      	nop
 8002558:	d004b000 	.word	0xd004b000

0800255c <_ZN20TouchGFXGeneratedHAL10beginFrameEv>:
    return HAL::beginFrame();
 800255c:	f00e bea6 	b.w	80112ac <_ZN8touchgfx3HAL10beginFrameEv>

08002560 <_ZN20TouchGFXGeneratedHAL8endFrameEv>:
    HAL::endFrame();
 8002560:	f00e beb0 	b.w	80112c4 <_ZN8touchgfx3HAL8endFrameEv>

08002564 <_ZN20TouchGFXGeneratedHAL16flushFrameBufferERKN8touchgfx4RectE>:

void TouchGFXGeneratedHAL::flushFrameBuffer(const touchgfx::Rect& rect)
{
    HAL::flushFrameBuffer(rect);
 8002564:	f00e be6b 	b.w	801123e <_ZN8touchgfx3HAL16flushFrameBufferERKNS_4RectE>

08002568 <_ZN20TouchGFXGeneratedHAL9blockCopyEPvPKvm>:
}

bool TouchGFXGeneratedHAL::blockCopy(void* RESTRICT dest, const void* RESTRICT src, uint32_t numBytes)
{
    return HAL::blockCopy(dest, src, numBytes);
 8002568:	f00e bfcd 	b.w	8011506 <_ZN8touchgfx3HAL9blockCopyEPvPKvm>

0800256c <_ZNK8touchgfx8Drawable17invalidateContentEv>:
        if (visible)
 800256c:	f890 2025 	ldrb.w	r2, [r0, #37]	; 0x25
 8002570:	b112      	cbz	r2, 8002578 <_ZNK8touchgfx8Drawable17invalidateContentEv+0xc>
            invalidate();
 8002572:	6803      	ldr	r3, [r0, #0]
 8002574:	695b      	ldr	r3, [r3, #20]
 8002576:	4718      	bx	r3
    }
 8002578:	4770      	bx	lr
	...

0800257c <_ZN20TouchGFXGeneratedHAL17disableInterruptsEv>:
    NVIC->ICER[(((uint32_t)IRQn) >> 5UL)] = (uint32_t)(1UL << (((uint32_t)IRQn) & 0x1FUL));
 800257c:	4b04      	ldr	r3, [pc, #16]	; (8002590 <_ZN20TouchGFXGeneratedHAL17disableInterruptsEv+0x14>)
 800257e:	f04f 7280 	mov.w	r2, #16777216	; 0x1000000
 8002582:	f8c3 2088 	str.w	r2, [r3, #136]	; 0x88
  __ASM volatile ("dsb 0xF":::"memory");
 8002586:	f3bf 8f4f 	dsb	sy
  __ASM volatile ("isb 0xF":::"memory");
 800258a:	f3bf 8f6f 	isb	sy
}
 800258e:	4770      	bx	lr
 8002590:	e000e100 	.word	0xe000e100

08002594 <_ZN8touchgfx21AbstractPainterRGB565C1Ev>:
public:
    static const uint16_t RMASK = 0xF800; ///< Mask for red   (1111100000000000)
    static const uint16_t GMASK = 0x07E0; ///< Mask for green (0000011111100000)
    static const uint16_t BMASK = 0x001F; ///< Mask for blue  (0000000000011111)

    AbstractPainterRGB565()
 8002594:	b570      	push	{r4, r5, r6, lr}
        : widgetWidth(0)
 8002596:	2300      	movs	r3, #0
        if (instance->useAuxiliaryLCD && instance->auxiliaryLCD)
 8002598:	4e12      	ldr	r6, [pc, #72]	; (80025e4 <_ZN8touchgfx21AbstractPainterRGB565C1Ev+0x50>)
 800259a:	8083      	strh	r3, [r0, #4]
        : AbstractPainter()
 800259c:	4b12      	ldr	r3, [pc, #72]	; (80025e8 <_ZN8touchgfx21AbstractPainterRGB565C1Ev+0x54>)
 800259e:	6003      	str	r3, [r0, #0]
 80025a0:	6833      	ldr	r3, [r6, #0]
 80025a2:	f893 2058 	ldrb.w	r2, [r3, #88]	; 0x58
    AbstractPainterRGB565()
 80025a6:	4605      	mov	r5, r0
 80025a8:	b10a      	cbz	r2, 80025ae <_ZN8touchgfx21AbstractPainterRGB565C1Ev+0x1a>
 80025aa:	6cd8      	ldr	r0, [r3, #76]	; 0x4c
 80025ac:	b900      	cbnz	r0, 80025b0 <_ZN8touchgfx21AbstractPainterRGB565C1Ev+0x1c>
        return instance->lcdRef;
 80025ae:	6898      	ldr	r0, [r3, #8]
     *
     * @return True if the format matches the framebuffer format, false otherwise.
     */
    FORCE_INLINE_FUNCTION static bool compatibleFramebuffer(Bitmap::BitmapFormat format)
    {
        bool compat = HAL::lcd().framebufferFormat() == format;
 80025b0:	6803      	ldr	r3, [r0, #0]
 80025b2:	6adb      	ldr	r3, [r3, #44]	; 0x2c
 80025b4:	4798      	blx	r3
        return auxiliaryLCD;
 80025b6:	6833      	ldr	r3, [r6, #0]
 80025b8:	fab0 f480 	clz	r4, r0
 80025bc:	6cd8      	ldr	r0, [r3, #76]	; 0x4c
 80025be:	0964      	lsrs	r4, r4, #5
        if (HAL::getInstance()->getAuxiliaryLCD())
 80025c0:	b130      	cbz	r0, 80025d0 <_ZN8touchgfx21AbstractPainterRGB565C1Ev+0x3c>
        {
            compat |= HAL::getInstance()->getAuxiliaryLCD()->framebufferFormat() == format;
 80025c2:	6803      	ldr	r3, [r0, #0]
 80025c4:	6adb      	ldr	r3, [r3, #44]	; 0x2c
 80025c6:	4798      	blx	r3
 80025c8:	2800      	cmp	r0, #0
 80025ca:	bf08      	it	eq
 80025cc:	f044 0401 	orreq.w	r4, r4, #1
    {
        assert(compatibleFramebuffer(Bitmap::RGB565) && "The chosen painter only works with RGB565 displays");
 80025d0:	b92c      	cbnz	r4, 80025de <_ZN8touchgfx21AbstractPainterRGB565C1Ev+0x4a>
 80025d2:	4b06      	ldr	r3, [pc, #24]	; (80025ec <_ZN8touchgfx21AbstractPainterRGB565C1Ev+0x58>)
 80025d4:	4a06      	ldr	r2, [pc, #24]	; (80025f0 <_ZN8touchgfx21AbstractPainterRGB565C1Ev+0x5c>)
 80025d6:	4807      	ldr	r0, [pc, #28]	; (80025f4 <_ZN8touchgfx21AbstractPainterRGB565C1Ev+0x60>)
 80025d8:	212c      	movs	r1, #44	; 0x2c
 80025da:	f028 fec1 	bl	802b360 <__assert_func>
    }
 80025de:	4628      	mov	r0, r5
 80025e0:	bd70      	pop	{r4, r5, r6, pc}
 80025e2:	bf00      	nop
 80025e4:	2001381c 	.word	0x2001381c
 80025e8:	0802cc24 	.word	0x0802cc24
 80025ec:	0802cb20 	.word	0x0802cb20
 80025f0:	0802cb7e 	.word	0x0802cb7e
 80025f4:	0802cbb7 	.word	0x0802cbb7

080025f8 <_ZN8touchgfx5paint8tearDownEv>:
    blendL8CLUT = data;
}

void tearDown()
{
}
 80025f8:	4770      	bx	lr
	...

080025fc <_ZN8touchgfx5paint6rgb56513lineFromColorEPtjmhm>:
{
    return ((color >> 8) & 0xF800) | ((color >> 5) & 0x07E0) | ((color >> 3) & 0x001F);
}

void lineFromColor(uint16_t* const ptr, const unsigned count, const uint32_t color, const uint8_t alpha, const uint32_t color565)
{
 80025fc:	e92d 41f0 	stmdb	sp!, {r4, r5, r6, r7, r8, lr}
    uint16_t* framebuffer = ptr;
    const uint16_t* const lineEnd = framebuffer + count;
    if (alpha == 0xFF)
 8002600:	2bff      	cmp	r3, #255	; 0xff
    {
        do
        {
            *framebuffer = color565;
 8002602:	f8bd 4018 	ldrh.w	r4, [sp, #24]
    const uint16_t* const lineEnd = framebuffer + count;
 8002606:	eb00 0141 	add.w	r1, r0, r1, lsl #1
    if (alpha == 0xFF)
 800260a:	d105      	bne.n	8002618 <_ZN8touchgfx5paint6rgb56513lineFromColorEPtjmhm+0x1c>
            *framebuffer = color565;
 800260c:	f820 4b02 	strh.w	r4, [r0], #2
        } while (++framebuffer < lineEnd);
 8002610:	4281      	cmp	r1, r0
 8002612:	d8fb      	bhi.n	800260c <_ZN8touchgfx5paint6rgb56513lineFromColorEPtjmhm+0x10>
        do
        {
            *framebuffer = alphaBlend(color565, *framebuffer, alpha);
        } while (++framebuffer < lineEnd);
    }
}
 8002614:	e8bd 81f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, pc}
    return alphaBlend(newpix & RMASK, newpix & GMASK, newpix & BMASK, bufpix, alpha);
 8002618:	4f17      	ldr	r7, [pc, #92]	; (8002678 <_ZN8touchgfx5paint6rgb56513lineFromColorEPtjmhm+0x7c>)
           (((G * alpha + (bufpix & GMASK) * ialpha) / 255) & GMASK) |
 800261a:	f404 66fc 	and.w	r6, r4, #2016	; 0x7e0
    return (((R * alpha + (bufpix & RMASK) * ialpha) / 255) & RMASK) |
 800261e:	ea04 0c07 	and.w	ip, r4, r7
           (((B * alpha + (bufpix & BMASK) * ialpha) / 255) & BMASK);
 8002622:	f004 041f 	and.w	r4, r4, #31
    return (((R * alpha + (bufpix & RMASK) * ialpha) / 255) & RMASK) |
 8002626:	fb03 fc0c 	mul.w	ip, r3, ip
           (((G * alpha + (bufpix & GMASK) * ialpha) / 255) & GMASK) |
 800262a:	435e      	muls	r6, r3
           (((B * alpha + (bufpix & BMASK) * ialpha) / 255) & BMASK);
 800262c:	435c      	muls	r4, r3
    const uint8_t ialpha = 0xFF - alpha;
 800262e:	43db      	mvns	r3, r3
    return (((R * alpha + (bufpix & RMASK) * ialpha) / 255) & RMASK) |
 8002630:	b2db      	uxtb	r3, r3
 8002632:	25ff      	movs	r5, #255	; 0xff
            *framebuffer = alphaBlend(color565, *framebuffer, alpha);
 8002634:	f8b0 e000 	ldrh.w	lr, [r0]
    return (((R * alpha + (bufpix & RMASK) * ialpha) / 255) & RMASK) |
 8002638:	ea0e 0207 	and.w	r2, lr, r7
           (((G * alpha + (bufpix & GMASK) * ialpha) / 255) & GMASK) |
 800263c:	f40e 68fc 	and.w	r8, lr, #2016	; 0x7e0
    return (((R * alpha + (bufpix & RMASK) * ialpha) / 255) & RMASK) |
 8002640:	fb03 c202 	mla	r2, r3, r2, ip
           (((G * alpha + (bufpix & GMASK) * ialpha) / 255) & GMASK) |
 8002644:	fb03 6808 	mla	r8, r3, r8, r6
           (((B * alpha + (bufpix & BMASK) * ialpha) / 255) & BMASK);
 8002648:	f00e 0e1f 	and.w	lr, lr, #31
    return (((R * alpha + (bufpix & RMASK) * ialpha) / 255) & RMASK) |
 800264c:	fbb2 f2f5 	udiv	r2, r2, r5
           (((G * alpha + (bufpix & GMASK) * ialpha) / 255) & GMASK) |
 8002650:	fbb8 f8f5 	udiv	r8, r8, r5
    return (((R * alpha + (bufpix & RMASK) * ialpha) / 255) & RMASK) |
 8002654:	403a      	ands	r2, r7
           (((G * alpha + (bufpix & GMASK) * ialpha) / 255) & GMASK) |
 8002656:	f408 68fc 	and.w	r8, r8, #2016	; 0x7e0
    return (((R * alpha + (bufpix & RMASK) * ialpha) / 255) & RMASK) |
 800265a:	ea42 0208 	orr.w	r2, r2, r8
           (((B * alpha + (bufpix & BMASK) * ialpha) / 255) & BMASK);
 800265e:	fb03 4e0e 	mla	lr, r3, lr, r4
 8002662:	fbbe fef5 	udiv	lr, lr, r5
 8002666:	f00e 0e1f 	and.w	lr, lr, #31
           (((G * alpha + (bufpix & GMASK) * ialpha) / 255) & GMASK) |
 800266a:	ea42 020e 	orr.w	r2, r2, lr
            *framebuffer = alphaBlend(color565, *framebuffer, alpha);
 800266e:	f820 2b02 	strh.w	r2, [r0], #2
        } while (++framebuffer < lineEnd);
 8002672:	4281      	cmp	r1, r0
 8002674:	d8de      	bhi.n	8002634 <_ZN8touchgfx5paint6rgb56513lineFromColorEPtjmhm+0x38>
 8002676:	e7cd      	b.n	8002614 <_ZN8touchgfx5paint6rgb56513lineFromColorEPtjmhm+0x18>
 8002678:	fffff800 	.word	0xfffff800

0800267c <HAL_LTDC_LineEventCallback>:
}

extern "C"
{
    void HAL_LTDC_LineEventCallback(LTDC_HandleTypeDef* hltdc)
    {
 800267c:	b510      	push	{r4, lr}
        return instance;
 800267e:	4c14      	ldr	r4, [pc, #80]	; (80026d0 <HAL_LTDC_LineEventCallback+0x54>)
        if (!HAL::getInstance())
 8002680:	6823      	ldr	r3, [r4, #0]
 8002682:	b323      	cbz	r3, 80026ce <HAL_LTDC_LineEventCallback+0x52>
        {
            return;
        }

        if (LTDC->LIPCR == lcd_int_active_line)
 8002684:	4b13      	ldr	r3, [pc, #76]	; (80026d4 <HAL_LTDC_LineEventCallback+0x58>)
 8002686:	4a14      	ldr	r2, [pc, #80]	; (80026d8 <HAL_LTDC_LineEventCallback+0x5c>)
 8002688:	6c1b      	ldr	r3, [r3, #64]	; 0x40
 800268a:	8811      	ldrh	r1, [r2, #0]
 800268c:	428b      	cmp	r3, r1
 800268e:	d113      	bne.n	80026b8 <HAL_LTDC_LineEventCallback+0x3c>
        {
            //entering active area
            HAL_LTDC_ProgramLineEvent(hltdc, lcd_int_porch_line);
 8002690:	4b12      	ldr	r3, [pc, #72]	; (80026dc <HAL_LTDC_LineEventCallback+0x60>)
 8002692:	8819      	ldrh	r1, [r3, #0]
 8002694:	f009 f9fe 	bl	800ba94 <HAL_LTDC_ProgramLineEvent>
 8002698:	6822      	ldr	r2, [r4, #0]
        vSyncCnt++;
 800269a:	f892 306a 	ldrb.w	r3, [r2, #106]	; 0x6a
 800269e:	3301      	adds	r3, #1
 80026a0:	f882 306a 	strb.w	r3, [r2, #106]	; 0x6a
            HAL::getInstance()->vSync();
            OSWrappers::signalVSync();
 80026a4:	f7ff fce8 	bl	8002078 <_ZN8touchgfx10OSWrappers11signalVSyncEv>

            // Swap frame buffers immediately instead of waiting for the task to be scheduled in.
            // Note: task will also swap when it wakes up, but that operation is guarded and will not have
            // any effect if already swapped.
            HAL::getInstance()->swapFrameBuffers();
 80026a8:	6820      	ldr	r0, [r4, #0]
 80026aa:	f00f fb57 	bl	8011d5c <_ZN8touchgfx3HAL16swapFrameBuffersEv>

            // Signal to the framework that display update has finished.
            HAL::getInstance()->frontPorchEntered();
            GPIO::clear(GPIO::VSYNC_FREQ);
        }
    }
 80026ae:	e8bd 4010 	ldmia.w	sp!, {r4, lr}
            GPIO::set(GPIO::VSYNC_FREQ);
 80026b2:	2000      	movs	r0, #0
 80026b4:	f7ff bb60 	b.w	8001d78 <_ZN8touchgfx4GPIO3setENS0_7GPIO_IDE>
            HAL_LTDC_ProgramLineEvent(hltdc, lcd_int_active_line);
 80026b8:	f009 f9ec 	bl	800ba94 <HAL_LTDC_ProgramLineEvent>
        return instance;
 80026bc:	6820      	ldr	r0, [r4, #0]
        allowDMATransfers();
 80026be:	6803      	ldr	r3, [r0, #0]
 80026c0:	6a1b      	ldr	r3, [r3, #32]
 80026c2:	4798      	blx	r3
    }
 80026c4:	e8bd 4010 	ldmia.w	sp!, {r4, lr}
            GPIO::clear(GPIO::VSYNC_FREQ);
 80026c8:	2000      	movs	r0, #0
 80026ca:	f7ff bb6d 	b.w	8001da8 <_ZN8touchgfx4GPIO5clearENS0_7GPIO_IDE>
    }
 80026ce:	bd10      	pop	{r4, pc}
 80026d0:	2001381c 	.word	0x2001381c
 80026d4:	40016800 	.word	0x40016800
 80026d8:	2000291a 	.word	0x2000291a
 80026dc:	20002918 	.word	0x20002918

080026e0 <_ZN23ApplicationFontProviderD1Ev>:
    static const touchgfx::FontId SMALL = 2;     // verdana_10_4bpp
    static const touchgfx::FontId NORMAL_12 = 3; // verdana_12_4bpp
    static const uint16_t NUMBER_OF_FONTS = 4;
};

class ApplicationFontProvider : public touchgfx::FontProvider
 80026e0:	4770      	bx	lr

080026e2 <_ZN23ApplicationFontProviderD0Ev>:
 80026e2:	b510      	push	{r4, lr}
 80026e4:	2104      	movs	r1, #4
 80026e6:	4604      	mov	r4, r0
 80026e8:	f028 f827 	bl	802a73a <_ZdlPvj>
 80026ec:	4620      	mov	r0, r4
 80026ee:	bd10      	pop	{r4, pc}

080026f0 <_ZN23ApplicationFontProvider7getFontEt>:
#include <fonts/ApplicationFontProvider.hpp>
#include <fonts/GeneratedFont.hpp>
#include <texts/TypedTextDatabase.hpp>

touchgfx::Font* ApplicationFontProvider::getFont(touchgfx::FontId typography)
{
 80026f0:	b508      	push	{r3, lr}
    switch (typography)
 80026f2:	2903      	cmp	r1, #3
 80026f4:	d813      	bhi.n	800271e <_ZN23ApplicationFontProvider7getFontEt+0x2e>
 80026f6:	e8df f001 	tbb	[pc, r1]
 80026fa:	0602      	.short	0x0602
 80026fc:	0e0a      	.short	0x0e0a
    {
    case Typography::DEFAULT:
        // verdana_19_4bpp
        return const_cast<touchgfx::Font*>(TypedTextDatabase::getFonts()[0]);
 80026fe:	f006 f833 	bl	8008768 <_ZN17TypedTextDatabase8getFontsEv>
 8002702:	6800      	ldr	r0, [r0, #0]
        // verdana_12_4bpp
        return const_cast<touchgfx::Font*>(TypedTextDatabase::getFonts()[3]);
    default:
        return 0;
    }
}
 8002704:	bd08      	pop	{r3, pc}
        return const_cast<touchgfx::Font*>(TypedTextDatabase::getFonts()[1]);
 8002706:	f006 f82f 	bl	8008768 <_ZN17TypedTextDatabase8getFontsEv>
 800270a:	6840      	ldr	r0, [r0, #4]
 800270c:	e7fa      	b.n	8002704 <_ZN23ApplicationFontProvider7getFontEt+0x14>
        return const_cast<touchgfx::Font*>(TypedTextDatabase::getFonts()[2]);
 800270e:	f006 f82b 	bl	8008768 <_ZN17TypedTextDatabase8getFontsEv>
 8002712:	6880      	ldr	r0, [r0, #8]
 8002714:	e7f6      	b.n	8002704 <_ZN23ApplicationFontProvider7getFontEt+0x14>
        return const_cast<touchgfx::Font*>(TypedTextDatabase::getFonts()[3]);
 8002716:	f006 f827 	bl	8008768 <_ZN17TypedTextDatabase8getFontsEv>
 800271a:	68c0      	ldr	r0, [r0, #12]
 800271c:	e7f2      	b.n	8002704 <_ZN23ApplicationFontProvider7getFontEt+0x14>
    switch (typography)
 800271e:	2000      	movs	r0, #0
 8002720:	e7f0      	b.n	8002704 <_ZN23ApplicationFontProvider7getFontEt+0x14>
	...

08002724 <_ZN14BitmapDatabase11getInstanceEv>:
namespace BitmapDatabase
{
const touchgfx::Bitmap::BitmapData* getInstance()
{
    return bitmap_database;
}
 8002724:	4800      	ldr	r0, [pc, #0]	; (8002728 <_ZN14BitmapDatabase11getInstanceEv+0x4>)
 8002726:	4770      	bx	lr
 8002728:	0802cc50 	.word	0x0802cc50

0800272c <_ZN14BitmapDatabase15getInstanceSizeEv>:

uint16_t getInstanceSize()
{
    return (uint16_t)(sizeof(bitmap_database) / sizeof(touchgfx::Bitmap::BitmapData));
}
 800272c:	200c      	movs	r0, #12
 800272e:	4770      	bx	lr

08002730 <_ZNK8touchgfx4Font8getGlyphEt>:
     *
     * @return A pointer to the glyph node or null if the glyph was not found.
     *
     * @see TextProvider::getNextLigature
     */
    virtual const GlyphNode* getGlyph(Unicode::UnicodeChar unicode) const
 8002730:	b513      	push	{r0, r1, r4, lr}
 8002732:	2400      	movs	r4, #0
    {
        if (unicode == 0)
 8002734:	b151      	cbz	r1, 800274c <_ZNK8touchgfx4Font8getGlyphEt+0x1c>
        {
            return 0;
        }
        const uint8_t* dummyPixelDataPointer = 0;
        uint8_t bitsPerPixelDummy = 0;
        const GlyphNode* glyph = getGlyph(unicode, dummyPixelDataPointer, bitsPerPixelDummy);
 8002736:	6803      	ldr	r3, [r0, #0]
        const uint8_t* dummyPixelDataPointer = 0;
 8002738:	9401      	str	r4, [sp, #4]
        uint8_t bitsPerPixelDummy = 0;
 800273a:	f88d 4003 	strb.w	r4, [sp, #3]
        const GlyphNode* glyph = getGlyph(unicode, dummyPixelDataPointer, bitsPerPixelDummy);
 800273e:	aa01      	add	r2, sp, #4
 8002740:	689c      	ldr	r4, [r3, #8]
 8002742:	f10d 0303 	add.w	r3, sp, #3
 8002746:	47a0      	blx	r4
        return glyph;
    }
 8002748:	b002      	add	sp, #8
 800274a:	bd10      	pop	{r4, pc}
            return 0;
 800274c:	4608      	mov	r0, r1
 800274e:	e7fb      	b.n	8002748 <_ZNK8touchgfx4Font8getGlyphEt+0x18>

08002750 <_ZNK8touchgfx4Font15getFallbackCharEv>:
     * @return The default character for the typography in case no glyph is available.
     */
    virtual Unicode::UnicodeChar getFallbackChar() const
    {
        return fallbackCharacter;
    }
 8002750:	89c0      	ldrh	r0, [r0, #14]
 8002752:	4770      	bx	lr

08002754 <_ZNK8touchgfx4Font15getEllipsisCharEv>:
     * @see TextArea::setWideTextAction
     */
    virtual Unicode::UnicodeChar getEllipsisChar() const
    {
        return ellipsisCharacter;
    }
 8002754:	8a00      	ldrh	r0, [r0, #16]
 8002756:	4770      	bx	lr

08002758 <_ZNK8touchgfx4Font11getBaselineEv>:
     *       getHeight for this.
     */
    FORCE_INLINE_FUNCTION virtual uint16_t getBaseline() const
    {
        return baselineHeight;
    }
 8002758:	88c0      	ldrh	r0, [r0, #6]
 800275a:	4770      	bx	lr

0800275c <_ZNK8touchgfx4Font9getHeightEv>:
     * @return The font height.
     */
    FORCE_INLINE_FUNCTION virtual uint16_t getHeight() const
    {
        return fontHeight;
    }
 800275c:	8880      	ldrh	r0, [r0, #4]
 800275e:	4770      	bx	lr

08002760 <_ZNK8touchgfx4Font15getBitsPerPixelEv>:
     *
     * @return The number of bits used per pixel in this font.
     */
    FORCE_INLINE_FUNCTION virtual uint8_t getBitsPerPixel() const
    {
        return bPerPixel;
 8002760:	7a80      	ldrb	r0, [r0, #10]
    }
 8002762:	f000 007f 	and.w	r0, r0, #127	; 0x7f
 8002766:	4770      	bx	lr

08002768 <_ZNK8touchgfx4Font15getByteAlignRowEv>:
     *
     * @return True if each glyph row is stored byte aligned, false otherwise.
     */
    FORCE_INLINE_FUNCTION virtual uint8_t getByteAlignRow() const
    {
        return bAlignRow;
 8002768:	7a80      	ldrb	r0, [r0, #10]
    }
 800276a:	09c0      	lsrs	r0, r0, #7
 800276c:	4770      	bx	lr

0800276e <_ZN8touchgfx9Container13getFirstChildEv>:
     * @see getNextSibling
     */
    virtual Drawable* getFirstChild()
    {
        return firstChild;
    }
 800276e:	6a80      	ldr	r0, [r0, #40]	; 0x28
 8002770:	4770      	bx	lr

08002772 <_ZN8touchgfx6Screen11setupScreenEv>:
     *
     * @see Application::switchScreen
     */
    virtual void setupScreen()
    {
    }
 8002772:	4770      	bx	lr

08002774 <_ZN8touchgfx6Screen15afterTransitionEv>:
     *
     * @see Application::handleTickEvent
     */
    virtual void afterTransition()
    {
    }
 8002774:	4770      	bx	lr

08002776 <_ZN8touchgfx6Screen14tearDownScreenEv>:
     *
     * @see Application::switchScreen
     */
    virtual void tearDownScreen()
    {
    }
 8002776:	4770      	bx	lr

08002778 <_ZN8touchgfx6Screen15handleTickEventEv>:
     * Called by the Application on the current screen with a frequency of
     * Application::TICK_INTERVAL_MS.
     */
    virtual void handleTickEvent()
    {
    }
 8002778:	4770      	bx	lr

0800277a <_ZN8touchgfx6Screen14handleKeyEventEh>:
     * @param  key The key to handle.
     */
    virtual void handleKeyEvent(uint8_t key)
    {
        (void)key; // Unused variable
    }
 800277a:	4770      	bx	lr

0800277c <_ZN8touchgfx9TypedTextD1Ev>:
    }
 800277c:	4770      	bx	lr

0800277e <_ZN8touchgfx8TextArea8setWidthEs>:
    TextArea()
        : Widget(), typedText(TYPED_TEXT_INVALID), color(0), linespace(0), alpha(255), indentation(0), rotation(TEXT_ROTATE_0), wideTextAction(WIDE_TEXT_NONE), boundingArea()
    {
    }

    virtual void setWidth(int16_t width)
 800277e:	b530      	push	{r4, r5, lr}
    {
        Widget::setWidth(width);
        boundingArea = calculateBoundingArea();
 8002780:	6803      	ldr	r3, [r0, #0]
        rect.width = width;
 8002782:	8101      	strh	r1, [r0, #8]
    virtual void setWidth(int16_t width)
 8002784:	b085      	sub	sp, #20
        boundingArea = calculateBoundingArea();
 8002786:	466d      	mov	r5, sp
 8002788:	4601      	mov	r1, r0
 800278a:	f8d3 3084 	ldr.w	r3, [r3, #132]	; 0x84
    virtual void setWidth(int16_t width)
 800278e:	4604      	mov	r4, r0
        boundingArea = calculateBoundingArea();
 8002790:	4628      	mov	r0, r5
 8002792:	4798      	blx	r3
 8002794:	e895 0007 	ldmia.w	r5, {r0, r1, r2}
 8002798:	343c      	adds	r4, #60	; 0x3c
 800279a:	e884 0007 	stmia.w	r4, {r0, r1, r2}
    }
 800279e:	b005      	add	sp, #20
 80027a0:	bd30      	pop	{r4, r5, pc}

080027a2 <_ZN8touchgfx8TextArea9setHeightEs>:

    virtual void setHeight(int16_t height)
 80027a2:	b530      	push	{r4, r5, lr}
    {
        Widget::setHeight(height);
        boundingArea = calculateBoundingArea();
 80027a4:	6803      	ldr	r3, [r0, #0]
        rect.height = height;
 80027a6:	8141      	strh	r1, [r0, #10]
    virtual void setHeight(int16_t height)
 80027a8:	b085      	sub	sp, #20
        boundingArea = calculateBoundingArea();
 80027aa:	466d      	mov	r5, sp
 80027ac:	4601      	mov	r1, r0
 80027ae:	f8d3 3084 	ldr.w	r3, [r3, #132]	; 0x84
    virtual void setHeight(int16_t height)
 80027b2:	4604      	mov	r4, r0
        boundingArea = calculateBoundingArea();
 80027b4:	4628      	mov	r0, r5
 80027b6:	4798      	blx	r3
 80027b8:	e895 0007 	ldmia.w	r5, {r0, r1, r2}
 80027bc:	343c      	adds	r4, #60	; 0x3c
 80027be:	e884 0007 	stmia.w	r4, {r0, r1, r2}
    }
 80027c2:	b005      	add	sp, #20
 80027c4:	bd30      	pop	{r4, r5, pc}

080027c6 <_ZNK8touchgfx8TextArea12getSolidRectEv>:
 80027c6:	2200      	movs	r2, #0
 80027c8:	8002      	strh	r2, [r0, #0]
 80027ca:	8042      	strh	r2, [r0, #2]
 80027cc:	8082      	strh	r2, [r0, #4]
 80027ce:	80c2      	strh	r2, [r0, #6]

    virtual Rect getSolidRect() const
    {
        return Rect();
    }
 80027d0:	4770      	bx	lr

080027d2 <_ZN8touchgfx8TextArea8setAlphaEh>:
    /**
     * @copydoc Image::setAlpha
     */
    virtual void setAlpha(uint8_t newAlpha)
    {
        alpha = newAlpha;
 80027d2:	f880 1036 	strb.w	r1, [r0, #54]	; 0x36
    }
 80027d6:	4770      	bx	lr

080027d8 <_ZN8touchgfx8TextArea13setXBaselineYEss>:
     * @param  x         The x coordinate of the TextArea.
     * @param  baselineY The y coordinate of the baseline of the text.
     *
     * @note setTypedText() must be called prior to setting the baseline.
     */
    virtual void setXBaselineY(int16_t x, int16_t baselineY)
 80027d8:	b570      	push	{r4, r5, r6, lr}
    {
        setX(x);
 80027da:	6803      	ldr	r3, [r0, #0]
    virtual void setXBaselineY(int16_t x, int16_t baselineY)
 80027dc:	4604      	mov	r4, r0
        setX(x);
 80027de:	6b1b      	ldr	r3, [r3, #48]	; 0x30
    virtual void setXBaselineY(int16_t x, int16_t baselineY)
 80027e0:	4615      	mov	r5, r2
        setX(x);
 80027e2:	4798      	blx	r3
        setBaselineY(baselineY);
 80027e4:	6823      	ldr	r3, [r4, #0]
 80027e6:	4629      	mov	r1, r5
 80027e8:	4620      	mov	r0, r4
 80027ea:	6e5b      	ldr	r3, [r3, #100]	; 0x64
    }
 80027ec:	e8bd 4070 	ldmia.w	sp!, {r4, r5, r6, lr}
        setBaselineY(baselineY);
 80027f0:	4718      	bx	r3

080027f2 <_ZNK8touchgfx8TextArea12getWildcard2Ev>:
     * @see TextAreaWithOneWildcard, TextAreaWithTwoWildcards
     */
    virtual const Unicode::UnicodeChar* getWildcard2() const
    {
        return 0;
    }
 80027f2:	2000      	movs	r0, #0
 80027f4:	4770      	bx	lr

080027f6 <_ZNK8touchgfx23TextAreaWithOneWildcard12getWildcard1Ev>:
    }

    virtual const Unicode::UnicodeChar* getWildcard1() const
    {
        return wc1;
    }
 80027f6:	6c80      	ldr	r0, [r0, #72]	; 0x48
 80027f8:	4770      	bx	lr

080027fa <_ZN23Calibration_PadViewBase17Load_FLASH_ValuesEv>:
     * Virtual Action Handlers
     */
    virtual void Load_FLASH_Values()
    {
        // Override and implement this function in Calibration_Pad
    }
 80027fa:	4770      	bx	lr

080027fc <_ZN23Calibration_PadViewBase11setupScreenEv>:
    touchgfx::CanvasWidgetRenderer::resetBuffer();
}

void Calibration_PadViewBase::setupScreen()
{
    transitionBegins();
 80027fc:	6803      	ldr	r3, [r0, #0]
 80027fe:	6adb      	ldr	r3, [r3, #44]	; 0x2c
 8002800:	4718      	bx	r3

08002802 <_ZN23Calibration_PadViewBase16transitionBeginsEv>:
void Calibration_PadViewBase::transitionBegins()
{
    //Interaction2
    //When screen transition begins call virtual function
    //Call Load_FLASH_Values
    Load_FLASH_Values();
 8002802:	6803      	ldr	r3, [r0, #0]
 8002804:	6b1b      	ldr	r3, [r3, #48]	; 0x30
 8002806:	4718      	bx	r3

08002808 <_ZN8touchgfx8CallbackI23Calibration_PadViewBaseRKNS_14AbstractButtonEvvED1Ev>:
 *
 * @note The member function to call must return void. The function can have zero, one, two or
 *       three arguments of any type.
 */
template <class dest_type, typename T1>
struct Callback<dest_type, T1, void, void> : public GenericCallback<T1>
 8002808:	4770      	bx	lr

0800280a <_ZN8touchgfx23TextAreaWithOneWildcardD1Ev>:
class TextAreaWithOneWildcard : public TextAreaWithWildcardBase
 800280a:	4770      	bx	lr

0800280c <_ZN8touchgfx14SwipeContainer13PageIndicatorD1Ev>:
    void animateSwipeCancelledLeft();
    void animateSwipeCancelledRight();
    void animateLeft();
    void animateRight();

    class PageIndicator : public Container
 800280c:	4770      	bx	lr

0800280e <_ZN8touchgfx8CallbackI23Calibration_PadViewBaseRKNS_14AbstractButtonEvvE7executeES4_>:
     *
     * @param  t1 This value will be passed as the first argument in the function call.
     *
     * @see isValid
     */
    virtual void execute(T1 t1)
 800280e:	b430      	push	{r4, r5}
    {
        (pobject->*pmemfun)(t1);
 8002810:	68c2      	ldr	r2, [r0, #12]
 8002812:	6844      	ldr	r4, [r0, #4]
 8002814:	1055      	asrs	r5, r2, #1
    virtual void execute(T1 t1)
 8002816:	4603      	mov	r3, r0
        (pobject->*pmemfun)(t1);
 8002818:	eb04 0062 	add.w	r0, r4, r2, asr #1
 800281c:	07d2      	lsls	r2, r2, #31
 800281e:	bf48      	it	mi
 8002820:	5962      	ldrmi	r2, [r4, r5]
 8002822:	689b      	ldr	r3, [r3, #8]
    }
 8002824:	bc30      	pop	{r4, r5}
        (pobject->*pmemfun)(t1);
 8002826:	bf48      	it	mi
 8002828:	58d3      	ldrmi	r3, [r2, r3]
 800282a:	4718      	bx	r3

0800282c <_ZNK8touchgfx8CallbackI23Calibration_PadViewBaseRKNS_14AbstractButtonEvvE7isValidEv>:
     *
     * @return true if valid, false if not.
     */
    virtual bool isValid() const
    {
        return (pobject != 0) && (pmemfun != 0);
 800282c:	6843      	ldr	r3, [r0, #4]
 800282e:	b12b      	cbz	r3, 800283c <_ZNK8touchgfx8CallbackI23Calibration_PadViewBaseRKNS_14AbstractButtonEvvE7isValidEv+0x10>
 8002830:	6883      	ldr	r3, [r0, #8]
 8002832:	b92b      	cbnz	r3, 8002840 <_ZNK8touchgfx8CallbackI23Calibration_PadViewBaseRKNS_14AbstractButtonEvvE7isValidEv+0x14>
 8002834:	68c0      	ldr	r0, [r0, #12]
 8002836:	f000 0001 	and.w	r0, r0, #1
 800283a:	4770      	bx	lr
 800283c:	4618      	mov	r0, r3
 800283e:	4770      	bx	lr
 8002840:	2001      	movs	r0, #1
    }
 8002842:	4770      	bx	lr

08002844 <_ZN8touchgfx9TypedTextD0Ev>:
    virtual ~TypedText()
 8002844:	b510      	push	{r4, lr}
    }
 8002846:	2108      	movs	r1, #8
    virtual ~TypedText()
 8002848:	4604      	mov	r4, r0
    }
 800284a:	f027 ff76 	bl	802a73a <_ZdlPvj>
 800284e:	4620      	mov	r0, r4
 8002850:	bd10      	pop	{r4, pc}

08002852 <_ZN8touchgfx23TextAreaWithOneWildcardD0Ev>:
 8002852:	b510      	push	{r4, lr}
 8002854:	214c      	movs	r1, #76	; 0x4c
 8002856:	4604      	mov	r4, r0
 8002858:	f027 ff6f 	bl	802a73a <_ZdlPvj>
 800285c:	4620      	mov	r0, r4
 800285e:	bd10      	pop	{r4, pc}

08002860 <_ZN8touchgfx8CallbackI23Calibration_PadViewBaseRKNS_14AbstractButtonEvvED0Ev>:
struct Callback<dest_type, T1, void, void> : public GenericCallback<T1>
 8002860:	b510      	push	{r4, lr}
 8002862:	2110      	movs	r1, #16
 8002864:	4604      	mov	r4, r0
 8002866:	f027 ff68 	bl	802a73a <_ZdlPvj>
 800286a:	4620      	mov	r0, r4
 800286c:	bd10      	pop	{r4, pc}

0800286e <_ZN8touchgfx14SwipeContainer13PageIndicatorD0Ev>:
 800286e:	b510      	push	{r4, lr}
 8002870:	218c      	movs	r1, #140	; 0x8c
 8002872:	4604      	mov	r4, r0
 8002874:	f027 ff61 	bl	802a73a <_ZdlPvj>
 8002878:	4620      	mov	r0, r4
 800287a:	bd10      	pop	{r4, pc}

0800287c <_ZN23Calibration_PadViewBaseD1Ev>:
Calibration_PadViewBase::~Calibration_PadViewBase()
 800287c:	b538      	push	{r3, r4, r5, lr}
 800287e:	4605      	mov	r5, r0
 8002880:	4b05      	ldr	r3, [pc, #20]	; (8002898 <_ZN23Calibration_PadViewBaseD1Ev+0x1c>)
 8002882:	f845 3be0 	str.w	r3, [r5], #224
 8002886:	4604      	mov	r4, r0
    touchgfx::CanvasWidgetRenderer::resetBuffer();
 8002888:	f012 f9a0 	bl	8014bcc <_ZN8touchgfx20CanvasWidgetRenderer11resetBufferEv>
Calibration_PadViewBase::~Calibration_PadViewBase()
 800288c:	4628      	mov	r0, r5
 800288e:	f00e f855 	bl	801093c <_ZN8touchgfx14SwipeContainerD1Ev>
}
 8002892:	4620      	mov	r0, r4
 8002894:	bd38      	pop	{r3, r4, r5, pc}
 8002896:	bf00      	nop
 8002898:	0802d038 	.word	0x0802d038

0800289c <_ZN23Calibration_PadViewBaseD0Ev>:
Calibration_PadViewBase::~Calibration_PadViewBase()
 800289c:	b510      	push	{r4, lr}
 800289e:	4604      	mov	r4, r0
}
 80028a0:	f7ff ffec 	bl	800287c <_ZN23Calibration_PadViewBaseD1Ev>
 80028a4:	4620      	mov	r0, r4
 80028a6:	f641 5164 	movw	r1, #7524	; 0x1d64
 80028aa:	f027 ff46 	bl	802a73a <_ZdlPvj>
 80028ae:	4620      	mov	r0, r4
 80028b0:	bd10      	pop	{r4, pc}

080028b2 <_ZNK8touchgfx24TextAreaWithWildcardBase17invalidateContentEv>:
    virtual void invalidateContent() const
 80028b2:	b508      	push	{r3, lr}
        Widget::invalidateContent();
 80028b4:	f7ff fe5a 	bl	800256c <_ZNK8touchgfx8Drawable17invalidateContentEv>
    }
 80028b8:	bd08      	pop	{r3, pc}
	...

080028bc <_ZN8touchgfx8TextArea12setBaselineYEs>:
        setY(baselineY - getTypedText().getFont()->getBaseline());
 80028bc:	6803      	ldr	r3, [r0, #0]
    virtual void setBaselineY(int16_t baselineY)
 80028be:	b570      	push	{r4, r5, r6, lr}
        setY(baselineY - getTypedText().getFont()->getBaseline());
 80028c0:	6b5e      	ldr	r6, [r3, #52]	; 0x34
        assert(typedTexts != 0 && "TypedText database has not been initialized.");
 80028c2:	4b12      	ldr	r3, [pc, #72]	; (800290c <_ZN8touchgfx8TextArea12setBaselineYEs+0x50>)
 80028c4:	681b      	ldr	r3, [r3, #0]
    virtual void setBaselineY(int16_t baselineY)
 80028c6:	4604      	mov	r4, r0
        setY(baselineY - getTypedText().getFont()->getBaseline());
 80028c8:	b28d      	uxth	r5, r1
 80028ca:	b92b      	cbnz	r3, 80028d8 <_ZN8touchgfx8TextArea12setBaselineYEs+0x1c>
 80028cc:	4b10      	ldr	r3, [pc, #64]	; (8002910 <_ZN8touchgfx8TextArea12setBaselineYEs+0x54>)
 80028ce:	4a11      	ldr	r2, [pc, #68]	; (8002914 <_ZN8touchgfx8TextArea12setBaselineYEs+0x58>)
 80028d0:	216c      	movs	r1, #108	; 0x6c
        assert(hasValidId() && "typedTextId larger than numberOfTypedTexts.");
 80028d2:	4811      	ldr	r0, [pc, #68]	; (8002918 <_ZN8touchgfx8TextArea12setBaselineYEs+0x5c>)
 80028d4:	f028 fd44 	bl	802b360 <__assert_func>
        return typedTextId < numberOfTypedTexts;
 80028d8:	4910      	ldr	r1, [pc, #64]	; (800291c <_ZN8touchgfx8TextArea12setBaselineYEs+0x60>)
 80028da:	8d82      	ldrh	r2, [r0, #44]	; 0x2c
        assert(hasValidId() && "typedTextId larger than numberOfTypedTexts.");
 80028dc:	8809      	ldrh	r1, [r1, #0]
 80028de:	4291      	cmp	r1, r2
 80028e0:	d803      	bhi.n	80028ea <_ZN8touchgfx8TextArea12setBaselineYEs+0x2e>
 80028e2:	4b0f      	ldr	r3, [pc, #60]	; (8002920 <_ZN8touchgfx8TextArea12setBaselineYEs+0x64>)
 80028e4:	4a0b      	ldr	r2, [pc, #44]	; (8002914 <_ZN8touchgfx8TextArea12setBaselineYEs+0x58>)
 80028e6:	216d      	movs	r1, #109	; 0x6d
 80028e8:	e7f3      	b.n	80028d2 <_ZN8touchgfx8TextArea12setBaselineYEs+0x16>
        return fonts[typedTexts[typedTextId].fontIdx];
 80028ea:	f813 2012 	ldrb.w	r2, [r3, r2, lsl #1]
 80028ee:	4b0d      	ldr	r3, [pc, #52]	; (8002924 <_ZN8touchgfx8TextArea12setBaselineYEs+0x68>)
 80028f0:	681b      	ldr	r3, [r3, #0]
 80028f2:	f853 0022 	ldr.w	r0, [r3, r2, lsl #2]
 80028f6:	6803      	ldr	r3, [r0, #0]
 80028f8:	6b1b      	ldr	r3, [r3, #48]	; 0x30
 80028fa:	4798      	blx	r3
 80028fc:	1a28      	subs	r0, r5, r0
 80028fe:	b201      	sxth	r1, r0
 8002900:	4633      	mov	r3, r6
 8002902:	4620      	mov	r0, r4
    }
 8002904:	e8bd 4070 	ldmia.w	sp!, {r4, r5, r6, lr}
        setY(baselineY - getTypedText().getFont()->getBaseline());
 8002908:	4718      	bx	r3
 800290a:	bf00      	nop
 800290c:	20013874 	.word	0x20013874
 8002910:	0802cd40 	.word	0x0802cd40
 8002914:	0802cd82 	.word	0x0802cd82
 8002918:	0802cdbd 	.word	0x0802cdbd
 800291c:	20013878 	.word	0x20013878
 8002920:	0802ce04 	.word	0x0802ce04
 8002924:	2001387c 	.word	0x2001387c

08002928 <_ZN8touchgfx8Drawable5setXYEss>:
    void setXY(int16_t x, int16_t y)
 8002928:	b570      	push	{r4, r5, r6, lr}
        setX(x);
 800292a:	6803      	ldr	r3, [r0, #0]
    void setXY(int16_t x, int16_t y)
 800292c:	4604      	mov	r4, r0
        setX(x);
 800292e:	6b1b      	ldr	r3, [r3, #48]	; 0x30
    void setXY(int16_t x, int16_t y)
 8002930:	4615      	mov	r5, r2
        setX(x);
 8002932:	4798      	blx	r3
        setY(y);
 8002934:	6823      	ldr	r3, [r4, #0]
 8002936:	4629      	mov	r1, r5
 8002938:	4620      	mov	r0, r4
 800293a:	6b5b      	ldr	r3, [r3, #52]	; 0x34
    }
 800293c:	e8bd 4070 	ldmia.w	sp!, {r4, r5, r6, lr}
        setY(y);
 8002940:	4718      	bx	r3

08002942 <_ZN8touchgfx8Drawable11setPositionEssss>:
    void setPosition(int16_t x, int16_t y, int16_t width, int16_t height)
 8002942:	b570      	push	{r4, r5, r6, lr}
 8002944:	4604      	mov	r4, r0
 8002946:	461d      	mov	r5, r3
 8002948:	f9bd 6010 	ldrsh.w	r6, [sp, #16]
        setXY(x, y);
 800294c:	f7ff ffec 	bl	8002928 <_ZN8touchgfx8Drawable5setXYEss>
        setWidth(width);
 8002950:	6823      	ldr	r3, [r4, #0]
 8002952:	4629      	mov	r1, r5
 8002954:	4620      	mov	r0, r4
 8002956:	6b9b      	ldr	r3, [r3, #56]	; 0x38
 8002958:	4798      	blx	r3
        setHeight(height);
 800295a:	6823      	ldr	r3, [r4, #0]
 800295c:	4631      	mov	r1, r6
 800295e:	4620      	mov	r0, r4
 8002960:	6bdb      	ldr	r3, [r3, #60]	; 0x3c
    }
 8002962:	e8bd 4070 	ldmia.w	sp!, {r4, r5, r6, lr}
        setHeight(height);
 8002966:	4718      	bx	r3

08002968 <_ZN8touchgfx9ContainerC1Ev>:
          touchable(false),
 8002968:	f44f 7180 	mov.w	r1, #256	; 0x100
 800296c:	2200      	movs	r2, #0
 800296e:	8481      	strh	r1, [r0, #36]	; 0x24
          firstChild(0)
 8002970:	4905      	ldr	r1, [pc, #20]	; (8002988 <_ZN8touchgfx9ContainerC1Ev+0x20>)
 8002972:	6001      	str	r1, [r0, #0]
 8002974:	e9c0 2201 	strd	r2, r2, [r0, #4]
 8002978:	e9c0 2203 	strd	r2, r2, [r0, #12]
          nextSibling(0),
 800297c:	e9c0 2205 	strd	r2, r2, [r0, #20]
          cachedAbsX(0),
 8002980:	e9c0 2207 	strd	r2, r2, [r0, #28]
 8002984:	6282      	str	r2, [r0, #40]	; 0x28
    }
 8002986:	4770      	bx	lr
 8002988:	0802ef5c 	.word	0x0802ef5c

0800298c <_ZN8touchgfx6WidgetC1Ev>:
 800298c:	2200      	movs	r2, #0
 800298e:	e9c0 2201 	strd	r2, r2, [r0, #4]
 8002992:	e9c0 2203 	strd	r2, r2, [r0, #12]
          nextSibling(0),
 8002996:	e9c0 2205 	strd	r2, r2, [r0, #20]
          cachedAbsX(0),
 800299a:	e9c0 2207 	strd	r2, r2, [r0, #28]
          touchable(false),
 800299e:	f44f 7280 	mov.w	r2, #256	; 0x100
 80029a2:	8482      	strh	r2, [r0, #36]	; 0x24
class Widget : public Drawable
 80029a4:	4a01      	ldr	r2, [pc, #4]	; (80029ac <_ZN8touchgfx6WidgetC1Ev+0x20>)
 80029a6:	6002      	str	r2, [r0, #0]
 80029a8:	4770      	bx	lr
 80029aa:	bf00      	nop
 80029ac:	0802ce88 	.word	0x0802ce88

080029b0 <_ZN8touchgfx15ButtonWithLabel18updateTextPositionEv>:
        return typedTextId < numberOfTypedTexts;
 80029b0:	4b1a      	ldr	r3, [pc, #104]	; (8002a1c <_ZN8touchgfx15ButtonWithLabel18updateTextPositionEv+0x6c>)
     * change you may need to reposition the label text by calling this function to keep the
     * text horizontally centered.
     *
     * @note The user code must call invalidate() in order to update the button on the display.
     */
    void updateTextPosition()
 80029b2:	b573      	push	{r0, r1, r4, r5, r6, lr}
    {
        if (typedText.hasValidId())
 80029b4:	881b      	ldrh	r3, [r3, #0]
 80029b6:	8f01      	ldrh	r1, [r0, #56]	; 0x38
 80029b8:	428b      	cmp	r3, r1
    void updateTextPosition()
 80029ba:	4606      	mov	r6, r0
        if (typedText.hasValidId())
 80029bc:	d92b      	bls.n	8002a16 <_ZN8touchgfx15ButtonWithLabel18updateTextPositionEv+0x66>
        assert(typedTexts != 0 && "TypedText database has not been initialized.");
 80029be:	4b18      	ldr	r3, [pc, #96]	; (8002a20 <_ZN8touchgfx15ButtonWithLabel18updateTextPositionEv+0x70>)
 80029c0:	681b      	ldr	r3, [r3, #0]
 80029c2:	b92b      	cbnz	r3, 80029d0 <_ZN8touchgfx15ButtonWithLabel18updateTextPositionEv+0x20>
 80029c4:	4b17      	ldr	r3, [pc, #92]	; (8002a24 <_ZN8touchgfx15ButtonWithLabel18updateTextPositionEv+0x74>)
 80029c6:	4a18      	ldr	r2, [pc, #96]	; (8002a28 <_ZN8touchgfx15ButtonWithLabel18updateTextPositionEv+0x78>)
 80029c8:	4818      	ldr	r0, [pc, #96]	; (8002a2c <_ZN8touchgfx15ButtonWithLabel18updateTextPositionEv+0x7c>)
 80029ca:	216c      	movs	r1, #108	; 0x6c
 80029cc:	f028 fcc8 	bl	802b360 <__assert_func>
        return fonts[typedTexts[typedTextId].fontIdx];
 80029d0:	f813 2011 	ldrb.w	r2, [r3, r1, lsl #1]
 80029d4:	4b16      	ldr	r3, [pc, #88]	; (8002a30 <_ZN8touchgfx15ButtonWithLabel18updateTextPositionEv+0x80>)
 80029d6:	681b      	ldr	r3, [r3, #0]
 80029d8:	f853 5022 	ldr.w	r5, [r3, r2, lsl #2]
        return texts->getText(typedTextId);
 80029dc:	4b15      	ldr	r3, [pc, #84]	; (8002a34 <_ZN8touchgfx15ButtonWithLabel18updateTextPositionEv+0x84>)
 80029de:	6818      	ldr	r0, [r3, #0]
 80029e0:	f005 feb2 	bl	8008748 <_ZNK8touchgfx5Texts7getTextEt>
        {
            const Font* f = typedText.getFont();
            const Unicode::UnicodeChar* s = typedText.getText();
            textHeightIncludingSpacing = f->getHeight() * f->getNumberOfLines(s) + f->getSpacingAbove(s);
 80029e4:	682b      	ldr	r3, [r5, #0]
 80029e6:	9001      	str	r0, [sp, #4]
 80029e8:	6b9b      	ldr	r3, [r3, #56]	; 0x38
 80029ea:	4628      	mov	r0, r5
 80029ec:	4798      	blx	r3
 80029ee:	682b      	ldr	r3, [r5, #0]
 80029f0:	9901      	ldr	r1, [sp, #4]
 80029f2:	6c9b      	ldr	r3, [r3, #72]	; 0x48
 80029f4:	4604      	mov	r4, r0
 80029f6:	4628      	mov	r0, r5
 80029f8:	4798      	blx	r3
 80029fa:	682b      	ldr	r3, [r5, #0]
 80029fc:	9901      	ldr	r1, [sp, #4]
 80029fe:	6a5b      	ldr	r3, [r3, #36]	; 0x24
 8002a00:	fb14 f400 	smulbb	r4, r4, r0
 8002a04:	4628      	mov	r0, r5
 8002a06:	4798      	blx	r3
 8002a08:	b2a4      	uxth	r4, r4
 8002a0a:	1823      	adds	r3, r4, r0
 8002a0c:	b21b      	sxth	r3, r3
 8002a0e:	f8a6 3046 	strh.w	r3, [r6, #70]	; 0x46
        }
        else
        {
            textHeightIncludingSpacing = 0;
        }
    }
 8002a12:	b002      	add	sp, #8
 8002a14:	bd70      	pop	{r4, r5, r6, pc}
 8002a16:	2300      	movs	r3, #0
 8002a18:	e7f9      	b.n	8002a0e <_ZN8touchgfx15ButtonWithLabel18updateTextPositionEv+0x5e>
 8002a1a:	bf00      	nop
 8002a1c:	20013878 	.word	0x20013878
 8002a20:	20013874 	.word	0x20013874
 8002a24:	0802cd40 	.word	0x0802cd40
 8002a28:	0802cd82 	.word	0x0802cd82
 8002a2c:	0802cdbd 	.word	0x0802cdbd
 8002a30:	2001387c 	.word	0x2001387c
 8002a34:	20013880 	.word	0x20013880

08002a38 <_ZN8touchgfx8TextArea12BoundingAreaC1Ev>:
        : x(rectX), y(rectY), width(rectWidth), height(rectHeight)
 8002a38:	2200      	movs	r2, #0
 8002a3a:	f04f 31ff 	mov.w	r1, #4294967295
 8002a3e:	e9c0 2100 	strd	r2, r1, [r0]
        /**
         * Initializes a new instance of the BoundingArea class which is invalid by default.
         */
        BoundingArea()
            : rect(Rect(0, 0, -1, -1)), // Negative width and height means invalid rectangle
              text(0)
 8002a42:	6082      	str	r2, [r0, #8]
        {
        }
 8002a44:	4770      	bx	lr

08002a46 <_ZNK8touchgfx24TextAreaWithWildcardBase21calculateBoundingAreaEv>:
    virtual TextArea::BoundingArea calculateBoundingArea() const
 8002a46:	b510      	push	{r4, lr}
 8002a48:	4604      	mov	r4, r0
        return TextArea::BoundingArea();
 8002a4a:	f7ff fff5 	bl	8002a38 <_ZN8touchgfx8TextArea12BoundingAreaC1Ev>
    }
 8002a4e:	4620      	mov	r0, r4
 8002a50:	bd10      	pop	{r4, pc}
	...

08002a54 <_ZN8touchgfx8TextAreaC1Ev>:
    TextArea()
 8002a54:	b510      	push	{r4, lr}
        : Widget(), typedText(TYPED_TEXT_INVALID), color(0), linespace(0), alpha(255), indentation(0), rotation(TEXT_ROTATE_0), wideTextAction(WIDE_TEXT_NONE), boundingArea()
 8002a56:	2100      	movs	r1, #0
    TextArea()
 8002a58:	4604      	mov	r4, r0
        : Widget(), typedText(TYPED_TEXT_INVALID), color(0), linespace(0), alpha(255), indentation(0), rotation(TEXT_ROTATE_0), wideTextAction(WIDE_TEXT_NONE), boundingArea()
 8002a5a:	2226      	movs	r2, #38	; 0x26
 8002a5c:	f028 fe85 	bl	802b76a <memset>
 8002a60:	4620      	mov	r0, r4
 8002a62:	f7ff ff93 	bl	800298c <_ZN8touchgfx6WidgetC1Ev>
 8002a66:	4b09      	ldr	r3, [pc, #36]	; (8002a8c <_ZN8touchgfx8TextAreaC1Ev+0x38>)
 8002a68:	6023      	str	r3, [r4, #0]
        : typedTextId(id)
 8002a6a:	4b09      	ldr	r3, [pc, #36]	; (8002a90 <_ZN8touchgfx8TextAreaC1Ev+0x3c>)
 8002a6c:	62a3      	str	r3, [r4, #40]	; 0x28
 8002a6e:	f64f 73ff 	movw	r3, #65535	; 0xffff
 8002a72:	85a3      	strh	r3, [r4, #44]	; 0x2c
 8002a74:	f44f 027f 	mov.w	r2, #16711680	; 0xff0000
 8002a78:	2300      	movs	r3, #0
 8002a7a:	e9c4 320c 	strd	r3, r2, [r4, #48]	; 0x30
 8002a7e:	8723      	strh	r3, [r4, #56]	; 0x38
 8002a80:	f104 003c 	add.w	r0, r4, #60	; 0x3c
 8002a84:	f7ff ffd8 	bl	8002a38 <_ZN8touchgfx8TextArea12BoundingAreaC1Ev>
    }
 8002a88:	4620      	mov	r0, r4
 8002a8a:	bd10      	pop	{r4, pc}
 8002a8c:	0802f3b4 	.word	0x0802f3b4
 8002a90:	0802cef0 	.word	0x0802cef0

08002a94 <_ZN8touchgfx23TextAreaWithOneWildcardC1Ev>:
    TextAreaWithOneWildcard()
 8002a94:	b510      	push	{r4, lr}
 8002a96:	4604      	mov	r4, r0
        : TextArea()
 8002a98:	f7ff ffdc 	bl	8002a54 <_ZN8touchgfx8TextAreaC1Ev>
        : TextAreaWithWildcardBase(), wc1(0)
 8002a9c:	4b02      	ldr	r3, [pc, #8]	; (8002aa8 <_ZN8touchgfx23TextAreaWithOneWildcardC1Ev+0x14>)
 8002a9e:	6023      	str	r3, [r4, #0]
 8002aa0:	2300      	movs	r3, #0
 8002aa2:	64a3      	str	r3, [r4, #72]	; 0x48
    }
 8002aa4:	4620      	mov	r0, r4
 8002aa6:	bd10      	pop	{r4, pc}
 8002aa8:	0802cf90 	.word	0x0802cf90

08002aac <_ZN8touchgfx8DrawableC1ERKS0_>:
class Drawable
 8002aac:	b510      	push	{r4, lr}
 8002aae:	4604      	mov	r4, r0
 8002ab0:	460b      	mov	r3, r1
 8002ab2:	490d      	ldr	r1, [pc, #52]	; (8002ae8 <_ZN8touchgfx8DrawableC1ERKS0_+0x3c>)
 8002ab4:	f844 1b04 	str.w	r1, [r4], #4
 8002ab8:	4602      	mov	r2, r0
 8002aba:	e9d3 0101 	ldrd	r0, r1, [r3, #4]
 8002abe:	e884 0003 	stmia.w	r4, {r0, r1}
 8002ac2:	e9d3 0103 	ldrd	r0, r1, [r3, #12]
 8002ac6:	f102 040c 	add.w	r4, r2, #12
 8002aca:	e884 0003 	stmia.w	r4, {r0, r1}
 8002ace:	e9d3 0106 	ldrd	r0, r1, [r3, #24]
 8002ad2:	695c      	ldr	r4, [r3, #20]
 8002ad4:	61d1      	str	r1, [r2, #28]
 8002ad6:	6a19      	ldr	r1, [r3, #32]
 8002ad8:	8c9b      	ldrh	r3, [r3, #36]	; 0x24
 8002ada:	6211      	str	r1, [r2, #32]
 8002adc:	e9c2 4005 	strd	r4, r0, [r2, #20]
 8002ae0:	8493      	strh	r3, [r2, #36]	; 0x24
 8002ae2:	4610      	mov	r0, r2
 8002ae4:	bd10      	pop	{r4, pc}
 8002ae6:	bf00      	nop
 8002ae8:	0802f7d4 	.word	0x0802f7d4

08002aec <_ZN8touchgfx14SwipeContainerC1ERKS0_>:
class SwipeContainer : public Container
 8002aec:	b538      	push	{r3, r4, r5, lr}
 8002aee:	460d      	mov	r5, r1
 8002af0:	4604      	mov	r4, r0
class Container : public Drawable
 8002af2:	f7ff ffdb 	bl	8002aac <_ZN8touchgfx8DrawableC1ERKS0_>
 8002af6:	6aab      	ldr	r3, [r5, #40]	; 0x28
 8002af8:	62a3      	str	r3, [r4, #40]	; 0x28
 8002afa:	4b2b      	ldr	r3, [pc, #172]	; (8002ba8 <_ZN8touchgfx14SwipeContainerC1ERKS0_+0xbc>)
 8002afc:	6023      	str	r3, [r4, #0]
 8002afe:	6aeb      	ldr	r3, [r5, #44]	; 0x2c
 8002b00:	62e3      	str	r3, [r4, #44]	; 0x2c
 8002b02:	6b2b      	ldr	r3, [r5, #48]	; 0x30
 8002b04:	6323      	str	r3, [r4, #48]	; 0x30
 8002b06:	6b6b      	ldr	r3, [r5, #52]	; 0x34
 8002b08:	6363      	str	r3, [r4, #52]	; 0x34
 8002b0a:	f105 0138 	add.w	r1, r5, #56	; 0x38
 8002b0e:	f104 0038 	add.w	r0, r4, #56	; 0x38
 8002b12:	f7ff ffcb 	bl	8002aac <_ZN8touchgfx8DrawableC1ERKS0_>
 8002b16:	6e2b      	ldr	r3, [r5, #96]	; 0x60
 8002b18:	6623      	str	r3, [r4, #96]	; 0x60
 * dimensions of the physical screen. Place the ListLayout inside e.g. a
 * ScrollableContainer to allow all the children to be viewed.
 *
 * @see ScrollableContainer
 */
class ListLayout : public Container
 8002b1a:	4b24      	ldr	r3, [pc, #144]	; (8002bac <_ZN8touchgfx14SwipeContainerC1ERKS0_+0xc0>)
 8002b1c:	63a3      	str	r3, [r4, #56]	; 0x38
 8002b1e:	f895 3064 	ldrb.w	r3, [r5, #100]	; 0x64
 8002b22:	f884 3064 	strb.w	r3, [r4, #100]	; 0x64
 8002b26:	f8b5 3066 	ldrh.w	r3, [r5, #102]	; 0x66
 8002b2a:	f8a4 3066 	strh.w	r3, [r4, #102]	; 0x66
 8002b2e:	f105 0168 	add.w	r1, r5, #104	; 0x68
 8002b32:	f104 0068 	add.w	r0, r4, #104	; 0x68
 8002b36:	f7ff ffb9 	bl	8002aac <_ZN8touchgfx8DrawableC1ERKS0_>
 8002b3a:	f8d5 3090 	ldr.w	r3, [r5, #144]	; 0x90
 8002b3e:	f8c4 3090 	str.w	r3, [r4, #144]	; 0x90
    class PageIndicator : public Container
 8002b42:	4b1b      	ldr	r3, [pc, #108]	; (8002bb0 <_ZN8touchgfx14SwipeContainerC1ERKS0_+0xc4>)
 8002b44:	66a3      	str	r3, [r4, #104]	; 0x68
 8002b46:	f105 0194 	add.w	r1, r5, #148	; 0x94
 8002b4a:	f104 0094 	add.w	r0, r4, #148	; 0x94
 8002b4e:	f7ff ffad 	bl	8002aac <_ZN8touchgfx8DrawableC1ERKS0_>
 * is handled by the Image Converter as part of compiling the project. Each image is
 * assigned a unique BITMAP identifier which.
 *
 * @see Bitmap
 */
class Image : public Widget
 8002b52:	f8b5 30ba 	ldrh.w	r3, [r5, #186]	; 0xba
 8002b56:	f8a4 30ba 	strh.w	r3, [r4, #186]	; 0xba
 8002b5a:	f895 30bc 	ldrb.w	r3, [r5, #188]	; 0xbc
 8002b5e:	f884 30bc 	strb.w	r3, [r4, #188]	; 0xbc
 * Simple widget capable of showing a bitmap tiled indefinitely horizontally and vertically.
 * This means that when the TiledImage Widget is larger than the provided Bitmap, the
 * Bitmap is repeated over and over horizontally and vertically. The bitmap can be alpha-
 * blended with the background and have areas of transparency.
 */
class TiledImage : public Image
 8002b62:	4b14      	ldr	r3, [pc, #80]	; (8002bb4 <_ZN8touchgfx14SwipeContainerC1ERKS0_+0xc8>)
 8002b64:	f8c4 3094 	str.w	r3, [r4, #148]	; 0x94
 8002b68:	f8b5 30be 	ldrh.w	r3, [r5, #190]	; 0xbe
 8002b6c:	f8a4 30be 	strh.w	r3, [r4, #190]	; 0xbe
 8002b70:	f8b5 30c0 	ldrh.w	r3, [r5, #192]	; 0xc0
 8002b74:	f8a4 30c0 	strh.w	r3, [r4, #192]	; 0xc0
 8002b78:	f105 01c4 	add.w	r1, r5, #196	; 0xc4
 8002b7c:	f104 00c4 	add.w	r0, r4, #196	; 0xc4
 8002b80:	f7ff ff94 	bl	8002aac <_ZN8touchgfx8DrawableC1ERKS0_>
 8002b84:	4b0c      	ldr	r3, [pc, #48]	; (8002bb8 <_ZN8touchgfx14SwipeContainerC1ERKS0_+0xcc>)
 8002b86:	f8c4 30c4 	str.w	r3, [r4, #196]	; 0xc4
 8002b8a:	f8b5 30ea 	ldrh.w	r3, [r5, #234]	; 0xea
 8002b8e:	f8a4 30ea 	strh.w	r3, [r4, #234]	; 0xea
 8002b92:	f895 30ec 	ldrb.w	r3, [r5, #236]	; 0xec
 8002b96:	f884 30ec 	strb.w	r3, [r4, #236]	; 0xec
 8002b9a:	f8b5 30f0 	ldrh.w	r3, [r5, #240]	; 0xf0
 8002b9e:	f8a4 30f0 	strh.w	r3, [r4, #240]	; 0xf0
class SwipeContainer : public Container
 8002ba2:	4620      	mov	r0, r4
 8002ba4:	bd38      	pop	{r3, r4, r5, pc}
 8002ba6:	bf00      	nop
 8002ba8:	0802efec 	.word	0x0802efec
 8002bac:	0802f0b0 	.word	0x0802f0b0
 8002bb0:	0802cf00 	.word	0x0802cf00
 8002bb4:	0802f4ac 	.word	0x0802f4ac
 8002bb8:	0802f690 	.word	0x0802f690

08002bbc <_ZN23Calibration_PadViewBase21buttonCallbackHandlerERKN8touchgfx14AbstractButtonE>:
{
 8002bbc:	b5f0      	push	{r4, r5, r6, r7, lr}
    if (&src == &buttonWithLabel3)
 8002bbe:	f100 0398 	add.w	r3, r0, #152	; 0x98
 8002bc2:	4299      	cmp	r1, r3
{
 8002bc4:	b0c1      	sub	sp, #260	; 0x104
 8002bc6:	4604      	mov	r4, r0
 8002bc8:	460d      	mov	r5, r1
    if (&src == &buttonWithLabel3)
 8002bca:	d103      	bne.n	8002bd4 <_ZN23Calibration_PadViewBase21buttonCallbackHandlerERKN8touchgfx14AbstractButtonE+0x18>

protected:
    FrontendApplication& application() {
        return *static_cast<FrontendApplication*>(touchgfx::Application::getInstance());
 8002bcc:	f013 fd00 	bl	80165d0 <_ZN8touchgfx11Application11getInstanceEv>
        application().gotoMain_MenuScreenWipeTransitionWest();
 8002bd0:	f001 fd88 	bl	80046e4 <_ZN23FrontendApplicationBase37gotoMain_MenuScreenWipeTransitionWestEv>
    if (&src == &buttonWithIcon_LP1)
 8002bd4:	f504 7331 	add.w	r3, r4, #708	; 0x2c4
 8002bd8:	429d      	cmp	r5, r3
 8002bda:	d128      	bne.n	8002c2e <_ZN23Calibration_PadViewBase21buttonCallbackHandlerERKN8touchgfx14AbstractButtonE+0x72>
        SwipeContainer swipeContainer = swipeContainer1;
 8002bdc:	f104 07e0 	add.w	r7, r4, #224	; 0xe0
 8002be0:	4639      	mov	r1, r7
 8002be2:	a803      	add	r0, sp, #12
 8002be4:	f7ff ff82 	bl	8002aec <_ZN8touchgfx14SwipeContainerC1ERKS0_>
        uint32_t* Samples = MEAS_start_measure();
 8002be8:	f7fe fc76 	bl	80014d8 <MEAS_start_measure>
        FFT fft = calculate_freq_and_signalstrength(1, Samples, 50);
 8002bec:	2232      	movs	r2, #50	; 0x32
        uint32_t* Samples = MEAS_start_measure();
 8002bee:	4601      	mov	r1, r0
        FFT fft = calculate_freq_and_signalstrength(1, Samples, 50);
 8002bf0:	2001      	movs	r0, #1
 8002bf2:	f7fd fe39 	bl	8000868 <calculate_freq_and_signalstrength>
        setCalibrationFlashValues(SECTOR_23_ADDR, (uint32_t)fft.signal_strength, 0, 12);
 8002bf6:	eefc 7ae0 	vcvt.u32.f32	s15, s1
 8002bfa:	487e      	ldr	r0, [pc, #504]	; (8002df4 <_ZN23Calibration_PadViewBase21buttonCallbackHandlerERKN8touchgfx14AbstractButtonE+0x238>)
        FFT fft = calculate_freq_and_signalstrength(1, Samples, 50);
 8002bfc:	ed8d 0a01 	vstr	s0, [sp, #4]
        setCalibrationFlashValues(SECTOR_23_ADDR, (uint32_t)fft.signal_strength, 0, 12);
 8002c00:	ee17 6a90 	vmov	r6, s15
 8002c04:	ee17 1a90 	vmov	r1, s15
 8002c08:	230c      	movs	r3, #12
 8002c0a:	2200      	movs	r2, #0
        FFT fft = calculate_freq_and_signalstrength(1, Samples, 50);
 8002c0c:	edcd 0a02 	vstr	s1, [sp, #8]
        setCalibrationFlashValues(SECTOR_23_ADDR, (uint32_t)fft.signal_strength, 0, 12);
 8002c10:	f7fd ff2c 	bl	8000a6c <setCalibrationFlashValues>
        Unicode::snprintf(textAreaCal_LP1Buffer, TEXTAREACAL_LP1_SIZE, "%d", (uint32_t)fft.signal_strength);
 8002c14:	4a78      	ldr	r2, [pc, #480]	; (8002df8 <_ZN23Calibration_PadViewBase21buttonCallbackHandlerERKN8touchgfx14AbstractButtonE+0x23c>)
 8002c16:	4633      	mov	r3, r6
 8002c18:	210a      	movs	r1, #10
 8002c1a:	f604 607c 	addw	r0, r4, #3708	; 0xe7c
 8002c1e:	f016 fe85 	bl	801992c <_ZN8touchgfx7Unicode8snprintfEPttPKcz>
        swipeContainer1.invalidate();
 8002c22:	4638      	mov	r0, r7
 8002c24:	f014 fdbc 	bl	80177a0 <_ZNK8touchgfx8Drawable10invalidateEv>
    }
 8002c28:	a803      	add	r0, sp, #12
 8002c2a:	f00d fe87 	bl	801093c <_ZN8touchgfx14SwipeContainerD1Ev>
    if (&src == &buttonWithIcon_LP2)
 8002c2e:	f504 7322 	add.w	r3, r4, #648	; 0x288
 8002c32:	429d      	cmp	r5, r3
 8002c34:	d128      	bne.n	8002c88 <_ZN23Calibration_PadViewBase21buttonCallbackHandlerERKN8touchgfx14AbstractButtonE+0xcc>
        SwipeContainer swipeContainer = swipeContainer1;
 8002c36:	f104 07e0 	add.w	r7, r4, #224	; 0xe0
 8002c3a:	4639      	mov	r1, r7
 8002c3c:	a803      	add	r0, sp, #12
 8002c3e:	f7ff ff55 	bl	8002aec <_ZN8touchgfx14SwipeContainerC1ERKS0_>
        uint32_t* Samples = MEAS_start_measure();
 8002c42:	f7fe fc49 	bl	80014d8 <MEAS_start_measure>
        FFT fft = calculate_freq_and_signalstrength(1, Samples, 50);
 8002c46:	2232      	movs	r2, #50	; 0x32
        uint32_t* Samples = MEAS_start_measure();
 8002c48:	4601      	mov	r1, r0
        FFT fft = calculate_freq_and_signalstrength(1, Samples, 50);
 8002c4a:	2001      	movs	r0, #1
 8002c4c:	f7fd fe0c 	bl	8000868 <calculate_freq_and_signalstrength>
        setCalibrationFlashValues(SECTOR_23_ADDR, (uint32_t)fft.signal_strength, 1, 12);
 8002c50:	eefc 7ae0 	vcvt.u32.f32	s15, s1
 8002c54:	4867      	ldr	r0, [pc, #412]	; (8002df4 <_ZN23Calibration_PadViewBase21buttonCallbackHandlerERKN8touchgfx14AbstractButtonE+0x238>)
        FFT fft = calculate_freq_and_signalstrength(1, Samples, 50);
 8002c56:	ed8d 0a01 	vstr	s0, [sp, #4]
        setCalibrationFlashValues(SECTOR_23_ADDR, (uint32_t)fft.signal_strength, 1, 12);
 8002c5a:	ee17 6a90 	vmov	r6, s15
 8002c5e:	ee17 1a90 	vmov	r1, s15
 8002c62:	230c      	movs	r3, #12
 8002c64:	2201      	movs	r2, #1
        FFT fft = calculate_freq_and_signalstrength(1, Samples, 50);
 8002c66:	edcd 0a02 	vstr	s1, [sp, #8]
        setCalibrationFlashValues(SECTOR_23_ADDR, (uint32_t)fft.signal_strength, 1, 12);
 8002c6a:	f7fd feff 	bl	8000a6c <setCalibrationFlashValues>
        Unicode::snprintf(textAreaCal_LP2Buffer, TEXTAREACAL_LP2_SIZE, "%d", (uint32_t)fft.signal_strength);
 8002c6e:	4a62      	ldr	r2, [pc, #392]	; (8002df8 <_ZN23Calibration_PadViewBase21buttonCallbackHandlerERKN8touchgfx14AbstractButtonE+0x23c>)
 8002c70:	4633      	mov	r3, r6
 8002c72:	210a      	movs	r1, #10
 8002c74:	f604 6068 	addw	r0, r4, #3688	; 0xe68
 8002c78:	f016 fe58 	bl	801992c <_ZN8touchgfx7Unicode8snprintfEPttPKcz>
        swipeContainer1.invalidate();
 8002c7c:	4638      	mov	r0, r7
 8002c7e:	f014 fd8f 	bl	80177a0 <_ZNK8touchgfx8Drawable10invalidateEv>
    }
 8002c82:	a803      	add	r0, sp, #12
 8002c84:	f00d fe5a 	bl	801093c <_ZN8touchgfx14SwipeContainerD1Ev>
    if (&src == &buttonWithIcon_LP3)
 8002c88:	f504 7313 	add.w	r3, r4, #588	; 0x24c
 8002c8c:	429d      	cmp	r5, r3
 8002c8e:	d128      	bne.n	8002ce2 <_ZN23Calibration_PadViewBase21buttonCallbackHandlerERKN8touchgfx14AbstractButtonE+0x126>
        SwipeContainer swipeContainer = swipeContainer1;
 8002c90:	f104 07e0 	add.w	r7, r4, #224	; 0xe0
 8002c94:	4639      	mov	r1, r7
 8002c96:	a803      	add	r0, sp, #12
 8002c98:	f7ff ff28 	bl	8002aec <_ZN8touchgfx14SwipeContainerC1ERKS0_>
        uint32_t* Samples = MEAS_start_measure();
 8002c9c:	f7fe fc1c 	bl	80014d8 <MEAS_start_measure>
        FFT fft = calculate_freq_and_signalstrength(1, Samples, 50);
 8002ca0:	2232      	movs	r2, #50	; 0x32
        uint32_t* Samples = MEAS_start_measure();
 8002ca2:	4601      	mov	r1, r0
        FFT fft = calculate_freq_and_signalstrength(1, Samples, 50);
 8002ca4:	2001      	movs	r0, #1
 8002ca6:	f7fd fddf 	bl	8000868 <calculate_freq_and_signalstrength>
        setCalibrationFlashValues(SECTOR_23_ADDR, (uint32_t)fft.signal_strength, 2, 12);
 8002caa:	eefc 7ae0 	vcvt.u32.f32	s15, s1
 8002cae:	4851      	ldr	r0, [pc, #324]	; (8002df4 <_ZN23Calibration_PadViewBase21buttonCallbackHandlerERKN8touchgfx14AbstractButtonE+0x238>)
        FFT fft = calculate_freq_and_signalstrength(1, Samples, 50);
 8002cb0:	ed8d 0a01 	vstr	s0, [sp, #4]
        setCalibrationFlashValues(SECTOR_23_ADDR, (uint32_t)fft.signal_strength, 2, 12);
 8002cb4:	ee17 6a90 	vmov	r6, s15
 8002cb8:	ee17 1a90 	vmov	r1, s15
 8002cbc:	230c      	movs	r3, #12
 8002cbe:	2202      	movs	r2, #2
        FFT fft = calculate_freq_and_signalstrength(1, Samples, 50);
 8002cc0:	edcd 0a02 	vstr	s1, [sp, #8]
        setCalibrationFlashValues(SECTOR_23_ADDR, (uint32_t)fft.signal_strength, 2, 12);
 8002cc4:	f7fd fed2 	bl	8000a6c <setCalibrationFlashValues>
        Unicode::snprintf(textAreaCal_LP3Buffer, TEXTAREACAL_LP3_SIZE, "%d", (uint32_t)fft.signal_strength);
 8002cc8:	4a4b      	ldr	r2, [pc, #300]	; (8002df8 <_ZN23Calibration_PadViewBase21buttonCallbackHandlerERKN8touchgfx14AbstractButtonE+0x23c>)
 8002cca:	4633      	mov	r3, r6
 8002ccc:	210a      	movs	r1, #10
 8002cce:	f604 6054 	addw	r0, r4, #3668	; 0xe54
 8002cd2:	f016 fe2b 	bl	801992c <_ZN8touchgfx7Unicode8snprintfEPttPKcz>
        swipeContainer1.invalidate();
 8002cd6:	4638      	mov	r0, r7
 8002cd8:	f014 fd62 	bl	80177a0 <_ZNK8touchgfx8Drawable10invalidateEv>
    }
 8002cdc:	a803      	add	r0, sp, #12
 8002cde:	f00d fe2d 	bl	801093c <_ZN8touchgfx14SwipeContainerD1Ev>
    if (&src == &buttonWithIcon_RP1)
 8002ce2:	f204 5354 	addw	r3, r4, #1364	; 0x554
 8002ce6:	429d      	cmp	r5, r3
 8002ce8:	d128      	bne.n	8002d3c <_ZN23Calibration_PadViewBase21buttonCallbackHandlerERKN8touchgfx14AbstractButtonE+0x180>
        SwipeContainer swipeContainer = swipeContainer1;
 8002cea:	f104 07e0 	add.w	r7, r4, #224	; 0xe0
 8002cee:	4639      	mov	r1, r7
 8002cf0:	a803      	add	r0, sp, #12
 8002cf2:	f7ff fefb 	bl	8002aec <_ZN8touchgfx14SwipeContainerC1ERKS0_>
        uint32_t* Samples = MEAS_start_measure();
 8002cf6:	f7fe fbef 	bl	80014d8 <MEAS_start_measure>
        FFT fft = calculate_freq_and_signalstrength(1, Samples, 50);
 8002cfa:	2232      	movs	r2, #50	; 0x32
        uint32_t* Samples = MEAS_start_measure();
 8002cfc:	4601      	mov	r1, r0
        FFT fft = calculate_freq_and_signalstrength(1, Samples, 50);
 8002cfe:	2001      	movs	r0, #1
 8002d00:	f7fd fdb2 	bl	8000868 <calculate_freq_and_signalstrength>
        setCalibrationFlashValues(SECTOR_23_ADDR, (uint32_t)fft.signal_strength, 3, 12);
 8002d04:	eefc 7ae0 	vcvt.u32.f32	s15, s1
 8002d08:	483a      	ldr	r0, [pc, #232]	; (8002df4 <_ZN23Calibration_PadViewBase21buttonCallbackHandlerERKN8touchgfx14AbstractButtonE+0x238>)
        FFT fft = calculate_freq_and_signalstrength(1, Samples, 50);
 8002d0a:	ed8d 0a01 	vstr	s0, [sp, #4]
        setCalibrationFlashValues(SECTOR_23_ADDR, (uint32_t)fft.signal_strength, 3, 12);
 8002d0e:	ee17 6a90 	vmov	r6, s15
 8002d12:	ee17 1a90 	vmov	r1, s15
 8002d16:	230c      	movs	r3, #12
 8002d18:	2203      	movs	r2, #3
        FFT fft = calculate_freq_and_signalstrength(1, Samples, 50);
 8002d1a:	edcd 0a02 	vstr	s1, [sp, #8]
        setCalibrationFlashValues(SECTOR_23_ADDR, (uint32_t)fft.signal_strength, 3, 12);
 8002d1e:	f7fd fea5 	bl	8000a6c <setCalibrationFlashValues>
        Unicode::snprintf(textAreaCal_RP1Buffer, TEXTAREACAL_RP1_SIZE, "%d", (uint32_t)fft.signal_strength);
 8002d22:	4a35      	ldr	r2, [pc, #212]	; (8002df8 <_ZN23Calibration_PadViewBase21buttonCallbackHandlerERKN8touchgfx14AbstractButtonE+0x23c>)
 8002d24:	4633      	mov	r3, r6
 8002d26:	210a      	movs	r1, #10
 8002d28:	f604 60b8 	addw	r0, r4, #3768	; 0xeb8
 8002d2c:	f016 fdfe 	bl	801992c <_ZN8touchgfx7Unicode8snprintfEPttPKcz>
        swipeContainer1.invalidate();
 8002d30:	4638      	mov	r0, r7
 8002d32:	f014 fd35 	bl	80177a0 <_ZNK8touchgfx8Drawable10invalidateEv>
    }
 8002d36:	a803      	add	r0, sp, #12
 8002d38:	f00d fe00 	bl	801093c <_ZN8touchgfx14SwipeContainerD1Ev>
    if (&src == &buttonWithIcon_RP2)
 8002d3c:	f504 63a3 	add.w	r3, r4, #1304	; 0x518
 8002d40:	429d      	cmp	r5, r3
 8002d42:	d128      	bne.n	8002d96 <_ZN23Calibration_PadViewBase21buttonCallbackHandlerERKN8touchgfx14AbstractButtonE+0x1da>
        SwipeContainer swipeContainer = swipeContainer1;
 8002d44:	f104 07e0 	add.w	r7, r4, #224	; 0xe0
 8002d48:	4639      	mov	r1, r7
 8002d4a:	a803      	add	r0, sp, #12
 8002d4c:	f7ff fece 	bl	8002aec <_ZN8touchgfx14SwipeContainerC1ERKS0_>
        uint32_t* Samples = MEAS_start_measure();
 8002d50:	f7fe fbc2 	bl	80014d8 <MEAS_start_measure>
        FFT fft = calculate_freq_and_signalstrength(1, Samples, 50);
 8002d54:	2232      	movs	r2, #50	; 0x32
        uint32_t* Samples = MEAS_start_measure();
 8002d56:	4601      	mov	r1, r0
        FFT fft = calculate_freq_and_signalstrength(1, Samples, 50);
 8002d58:	2001      	movs	r0, #1
 8002d5a:	f7fd fd85 	bl	8000868 <calculate_freq_and_signalstrength>
        setCalibrationFlashValues(SECTOR_23_ADDR, (uint32_t)fft.signal_strength, 4, 12);
 8002d5e:	eefc 7ae0 	vcvt.u32.f32	s15, s1
 8002d62:	4824      	ldr	r0, [pc, #144]	; (8002df4 <_ZN23Calibration_PadViewBase21buttonCallbackHandlerERKN8touchgfx14AbstractButtonE+0x238>)
        FFT fft = calculate_freq_and_signalstrength(1, Samples, 50);
 8002d64:	ed8d 0a01 	vstr	s0, [sp, #4]
        setCalibrationFlashValues(SECTOR_23_ADDR, (uint32_t)fft.signal_strength, 4, 12);
 8002d68:	ee17 6a90 	vmov	r6, s15
 8002d6c:	ee17 1a90 	vmov	r1, s15
 8002d70:	230c      	movs	r3, #12
 8002d72:	2204      	movs	r2, #4
        FFT fft = calculate_freq_and_signalstrength(1, Samples, 50);
 8002d74:	edcd 0a02 	vstr	s1, [sp, #8]
        setCalibrationFlashValues(SECTOR_23_ADDR, (uint32_t)fft.signal_strength, 4, 12);
 8002d78:	f7fd fe78 	bl	8000a6c <setCalibrationFlashValues>
        Unicode::snprintf(textAreaCal_RP2Buffer, TEXTAREACAL_RP2_SIZE, "%d", (uint32_t)fft.signal_strength);
 8002d7c:	4a1e      	ldr	r2, [pc, #120]	; (8002df8 <_ZN23Calibration_PadViewBase21buttonCallbackHandlerERKN8touchgfx14AbstractButtonE+0x23c>)
 8002d7e:	4633      	mov	r3, r6
 8002d80:	210a      	movs	r1, #10
 8002d82:	f604 60a4 	addw	r0, r4, #3748	; 0xea4
 8002d86:	f016 fdd1 	bl	801992c <_ZN8touchgfx7Unicode8snprintfEPttPKcz>
        swipeContainer1.invalidate();
 8002d8a:	4638      	mov	r0, r7
 8002d8c:	f014 fd08 	bl	80177a0 <_ZNK8touchgfx8Drawable10invalidateEv>
    }
 8002d90:	a803      	add	r0, sp, #12
 8002d92:	f00d fdd3 	bl	801093c <_ZN8touchgfx14SwipeContainerD1Ev>
    if (&src == &buttonWithIcon_RP3)
 8002d96:	f204 43dc 	addw	r3, r4, #1244	; 0x4dc
 8002d9a:	429d      	cmp	r5, r3
 8002d9c:	d128      	bne.n	8002df0 <_ZN23Calibration_PadViewBase21buttonCallbackHandlerERKN8touchgfx14AbstractButtonE+0x234>
        SwipeContainer swipeContainer = swipeContainer1;
 8002d9e:	f104 06e0 	add.w	r6, r4, #224	; 0xe0
 8002da2:	4631      	mov	r1, r6
 8002da4:	a803      	add	r0, sp, #12
 8002da6:	f7ff fea1 	bl	8002aec <_ZN8touchgfx14SwipeContainerC1ERKS0_>
        uint32_t* Samples = MEAS_start_measure();
 8002daa:	f7fe fb95 	bl	80014d8 <MEAS_start_measure>
        FFT fft = calculate_freq_and_signalstrength(1, Samples, 50);
 8002dae:	2232      	movs	r2, #50	; 0x32
        uint32_t* Samples = MEAS_start_measure();
 8002db0:	4601      	mov	r1, r0
        FFT fft = calculate_freq_and_signalstrength(1, Samples, 50);
 8002db2:	2001      	movs	r0, #1
 8002db4:	f7fd fd58 	bl	8000868 <calculate_freq_and_signalstrength>
        setCalibrationFlashValues(SECTOR_23_ADDR, (uint32_t)fft.signal_strength, 5, 12);
 8002db8:	eefc 7ae0 	vcvt.u32.f32	s15, s1
 8002dbc:	480d      	ldr	r0, [pc, #52]	; (8002df4 <_ZN23Calibration_PadViewBase21buttonCallbackHandlerERKN8touchgfx14AbstractButtonE+0x238>)
        FFT fft = calculate_freq_and_signalstrength(1, Samples, 50);
 8002dbe:	ed8d 0a01 	vstr	s0, [sp, #4]
        setCalibrationFlashValues(SECTOR_23_ADDR, (uint32_t)fft.signal_strength, 5, 12);
 8002dc2:	ee17 5a90 	vmov	r5, s15
 8002dc6:	ee17 1a90 	vmov	r1, s15
 8002dca:	230c      	movs	r3, #12
 8002dcc:	2205      	movs	r2, #5
        FFT fft = calculate_freq_and_signalstrength(1, Samples, 50);
 8002dce:	edcd 0a02 	vstr	s1, [sp, #8]
        setCalibrationFlashValues(SECTOR_23_ADDR, (uint32_t)fft.signal_strength, 5, 12);
 8002dd2:	f7fd fe4b 	bl	8000a6c <setCalibrationFlashValues>
        Unicode::snprintf(textAreaCal_RP3Buffer, TEXTAREACAL_RP3_SIZE, "%d", (uint32_t)fft.signal_strength);
 8002dd6:	4a08      	ldr	r2, [pc, #32]	; (8002df8 <_ZN23Calibration_PadViewBase21buttonCallbackHandlerERKN8touchgfx14AbstractButtonE+0x23c>)
 8002dd8:	462b      	mov	r3, r5
 8002dda:	210a      	movs	r1, #10
 8002ddc:	f504 6069 	add.w	r0, r4, #3728	; 0xe90
 8002de0:	f016 fda4 	bl	801992c <_ZN8touchgfx7Unicode8snprintfEPttPKcz>
        swipeContainer1.invalidate();
 8002de4:	4630      	mov	r0, r6
 8002de6:	f014 fcdb 	bl	80177a0 <_ZNK8touchgfx8Drawable10invalidateEv>
    }
 8002dea:	a803      	add	r0, sp, #12
 8002dec:	f00d fda6 	bl	801093c <_ZN8touchgfx14SwipeContainerD1Ev>
}
 8002df0:	b041      	add	sp, #260	; 0x104
 8002df2:	bdf0      	pop	{r4, r5, r6, r7, pc}
 8002df4:	081e0000 	.word	0x081e0000
 8002df8:	0802ce42 	.word	0x0802ce42

08002dfc <_ZN8touchgfx4Line8setStartIiEEvT_S2_>:
     * @note The area containing the Line is not invalidated.
     */
    template <typename T>
    void setStart(T x, T y)
    {
        setStart(CWRUtil::toQ5<T>(x), CWRUtil::toQ5<T>(y));
 8002dfc:	0152      	lsls	r2, r2, #5
 8002dfe:	0149      	lsls	r1, r1, #5
 8002e00:	f00f bcf0 	b.w	80127e4 <_ZN8touchgfx4Line8setStartENS_7CWRUtil2Q5ES2_>

08002e04 <_ZN8touchgfx4Line6setEndIiEEvT_S2_>:
     * @note The area containing the Line is not invalidated.
     */
    template <typename T>
    void setEnd(T x, T y)
    {
        setEnd(CWRUtil::toQ5<T>(x), CWRUtil::toQ5<T>(y));
 8002e04:	0152      	lsls	r2, r2, #5
 8002e06:	0149      	lsls	r1, r1, #5
 8002e08:	f00f bcf7 	b.w	80127fa <_ZN8touchgfx4Line6setEndENS_7CWRUtil2Q5ES2_>

08002e0c <_ZN8touchgfx4Line12setLineWidthIiEEvT_>:
     * @see updateLineWidth
     *
     * @note The area containing the Line is not invalidated.
     */
    template <typename T>
    void setLineWidth(T width)
 8002e0c:	b410      	push	{r4}
     *
     * @note The area containing the Line is not invalidated.
     */
    void setLineWidth(CWRUtil::Q5 widthQ5)
    {
        if (lineWidthQ5 == widthQ5)
 8002e0e:	6bc4      	ldr	r4, [r0, #60]	; 0x3c
 8002e10:	ebb4 1f41 	cmp.w	r4, r1, lsl #5
    template <typename T>
    FORCE_INLINE_FUNCTION
#endif
    static Q5 toQ5(T value)
    {
        return Q5((int)(value * Rasterizer::POLY_BASE_SIZE));
 8002e14:	ea4f 1241 	mov.w	r2, r1, lsl #5
 8002e18:	d004      	beq.n	8002e24 <_ZN8touchgfx4Line12setLineWidthIiEEvT_+0x18>
    }
 8002e1a:	f85d 4b04 	ldr.w	r4, [sp], #4
        {
            return;
        }

        lineWidthQ5 = widthQ5;
 8002e1e:	63c2      	str	r2, [r0, #60]	; 0x3c

        updateCachedShape();
 8002e20:	f00f bbea 	b.w	80125f8 <_ZN8touchgfx4Line17updateCachedShapeEv>
    }
 8002e24:	f85d 4b04 	ldr.w	r4, [sp], #4
 8002e28:	4770      	bx	lr
	...

08002e2c <_ZN23Calibration_PadViewBaseC1Ev>:
Calibration_PadViewBase::Calibration_PadViewBase() :
 8002e2c:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 8002e30:	ed2d 8b10 	vpush	{d8-d15}
 8002e34:	4604      	mov	r4, r0
 8002e36:	b0af      	sub	sp, #188	; 0xbc
    buttonCallback(this, &Calibration_PadViewBase::buttonCallbackHandler)
 8002e38:	46a3      	mov	fp, r4
template <class T>
class View : public Screen
{
public:
    View()
        : presenter(0)
 8002e3a:	2500      	movs	r5, #0
 8002e3c:	f015 f848 	bl	8017ed0 <_ZN8touchgfx6ScreenC1Ev>
 8002e40:	4be7      	ldr	r3, [pc, #924]	; (80031e0 <_ZN23Calibration_PadViewBaseC1Ev+0x3b4>)
 8002e42:	63e5      	str	r5, [r4, #60]	; 0x3c
 8002e44:	f84b 3b40 	str.w	r3, [fp], #64
class Box : public Widget
{
public:
    /** Construct a new Box with a default alpha value of 255 (solid) */
    Box()
        : Widget(), alpha(255), color(0)
 8002e48:	2226      	movs	r2, #38	; 0x26
 8002e4a:	4629      	mov	r1, r5
 8002e4c:	4658      	mov	r0, fp
 8002e4e:	f028 fc8c 	bl	802b76a <memset>
 8002e52:	4658      	mov	r0, fp
 8002e54:	f7ff fd9a 	bl	800298c <_ZN8touchgfx6WidgetC1Ev>
 8002e58:	f104 086c 	add.w	r8, r4, #108	; 0x6c
 8002e5c:	26ff      	movs	r6, #255	; 0xff
 8002e5e:	4be1      	ldr	r3, [pc, #900]	; (80031e4 <_ZN23Calibration_PadViewBaseC1Ev+0x3b8>)
 8002e60:	6423      	str	r3, [r4, #64]	; 0x40
     * @param   bmp (Optional) The bitmap to display.
     *
     * @see setBitmap
     */
    Image(const Bitmap& bmp = Bitmap())
        : Widget(), bitmap(bmp), alpha(255)
 8002e62:	2226      	movs	r2, #38	; 0x26
     * array.
     *
     * @param  id (Optional) The unique bitmap identifier.
     */
    Bitmap(const BitmapId id = BITMAP_INVALID)
        : bitmapId(id)
 8002e64:	f64f 73ff 	movw	r3, #65535	; 0xffff
 8002e68:	4629      	mov	r1, r5
 8002e6a:	f884 6066 	strb.w	r6, [r4, #102]	; 0x66
 8002e6e:	4640      	mov	r0, r8
        : color(col)
 8002e70:	66a5      	str	r5, [r4, #104]	; 0x68
 8002e72:	f8ad 30ac 	strh.w	r3, [sp, #172]	; 0xac
 8002e76:	f028 fc78 	bl	802b76a <memset>
 8002e7a:	4640      	mov	r0, r8
 8002e7c:	f7ff fd86 	bl	800298c <_ZN8touchgfx6WidgetC1Ev>
 8002e80:	4bd9      	ldr	r3, [pc, #868]	; (80031e8 <_ZN23Calibration_PadViewBaseC1Ev+0x3bc>)
 8002e82:	66e3      	str	r3, [r4, #108]	; 0x6c
    {
        Image::setBitmap(bmp);
 8002e84:	f10d 09ac 	add.w	r9, sp, #172	; 0xac
        : Widget(), bitmap(bmp), alpha(255)
 8002e88:	f8bd 30ac 	ldrh.w	r3, [sp, #172]	; 0xac
 8002e8c:	f8a4 3092 	strh.w	r3, [r4, #146]	; 0x92
        Image::setBitmap(bmp);
 8002e90:	4649      	mov	r1, r9
 8002e92:	4640      	mov	r0, r8
        : Widget(), bitmap(bmp), alpha(255)
 8002e94:	f884 6094 	strb.w	r6, [r4, #148]	; 0x94
        Image::setBitmap(bmp);
 8002e98:	f010 fe9b 	bl	8013bd2 <_ZN8touchgfx5Image9setBitmapERKNS_6BitmapE>
 8002e9c:	f104 0398 	add.w	r3, r4, #152	; 0x98
 8002ea0:	4618      	mov	r0, r3
 8002ea2:	9307      	str	r3, [sp, #28]
 8002ea4:	f010 ffcc 	bl	8013e40 <_ZN8touchgfx15ButtonWithLabelC1Ev>
 8002ea8:	f104 03e0 	add.w	r3, r4, #224	; 0xe0
 8002eac:	f504 7aea 	add.w	sl, r4, #468	; 0x1d4
 8002eb0:	4618      	mov	r0, r3
 8002eb2:	ee08 3a10 	vmov	s16, r3
 8002eb6:	f504 7700 	add.w	r7, r4, #512	; 0x200
 8002eba:	f00d fe6d 	bl	8010b98 <_ZN8touchgfx14SwipeContainerC1Ev>
 8002ebe:	4650      	mov	r0, sl
 8002ec0:	f7ff fd52 	bl	8002968 <_ZN8touchgfx9ContainerC1Ev>
 8002ec4:	4638      	mov	r0, r7
 8002ec6:	f7ff fde5 	bl	8002a94 <_ZN8touchgfx23TextAreaWithOneWildcardC1Ev>
 8002eca:	f504 7313 	add.w	r3, r4, #588	; 0x24c
 8002ece:	4618      	mov	r0, r3
 8002ed0:	9312      	str	r3, [sp, #72]	; 0x48
 8002ed2:	f010 fe57 	bl	8013b84 <_ZN8touchgfx14ButtonWithIconC1Ev>
 8002ed6:	f504 7322 	add.w	r3, r4, #648	; 0x288
 8002eda:	4618      	mov	r0, r3
 8002edc:	9313      	str	r3, [sp, #76]	; 0x4c
 8002ede:	f010 fe51 	bl	8013b84 <_ZN8touchgfx14ButtonWithIconC1Ev>
 8002ee2:	f504 7331 	add.w	r3, r4, #708	; 0x2c4
 8002ee6:	4618      	mov	r0, r3
 8002ee8:	9314      	str	r3, [sp, #80]	; 0x50
 8002eea:	f010 fe4b 	bl	8013b84 <_ZN8touchgfx14ButtonWithIconC1Ev>
 8002eee:	f504 7340 	add.w	r3, r4, #768	; 0x300
 8002ef2:	4618      	mov	r0, r3
 8002ef4:	ee0d 3a90 	vmov	s27, r3
 8002ef8:	f7ff fdcc 	bl	8002a94 <_ZN8touchgfx23TextAreaWithOneWildcardC1Ev>
 8002efc:	f504 7353 	add.w	r3, r4, #844	; 0x34c
 8002f00:	4618      	mov	r0, r3
 8002f02:	ee0e 3a10 	vmov	s28, r3
 8002f06:	f7ff fdc5 	bl	8002a94 <_ZN8touchgfx23TextAreaWithOneWildcardC1Ev>
 8002f0a:	f504 7366 	add.w	r3, r4, #920	; 0x398
 8002f0e:	4618      	mov	r0, r3
 8002f10:	ee0e 3a90 	vmov	s29, r3
 8002f14:	f7ff fdbe 	bl	8002a94 <_ZN8touchgfx23TextAreaWithOneWildcardC1Ev>
 8002f18:	f504 7379 	add.w	r3, r4, #996	; 0x3e4
 8002f1c:	4618      	mov	r0, r3
     * Initializes a new instance of the PainterRGB565 class.
     *
     * @param  color (Optional) the color, default is black.
     */
    PainterRGB565(colortype color = 0)
        : AbstractPainterRGB565(), AbstractPainterColor(color)
 8002f1e:	4eb3      	ldr	r6, [pc, #716]	; (80031ec <_ZN23Calibration_PadViewBaseC1Ev+0x3c0>)
 8002f20:	ee0a 3a90 	vmov	s21, r3
 8002f24:	f00f fb48 	bl	80125b8 <_ZN8touchgfx4LineC1Ev>
 8002f28:	f204 4354 	addw	r3, r4, #1108	; 0x454
 8002f2c:	4618      	mov	r0, r3
 8002f2e:	931e      	str	r3, [sp, #120]	; 0x78
 8002f30:	f7ff fb30 	bl	8002594 <_ZN8touchgfx21AbstractPainterRGB565C1Ev>
 8002f34:	f106 0324 	add.w	r3, r6, #36	; 0x24
 8002f38:	f504 628d 	add.w	r2, r4, #1128	; 0x468
 8002f3c:	f8c4 345c 	str.w	r3, [r4, #1116]	; 0x45c
 8002f40:	f8c4 6454 	str.w	r6, [r4, #1108]	; 0x454
 8002f44:	4610      	mov	r0, r2
     *
     * @param  color The color.
     */
    virtual void setColor(colortype color)
    {
        painterColor = color;
 8002f46:	f8c4 5460 	str.w	r5, [r4, #1120]	; 0x460
 8002f4a:	9208      	str	r2, [sp, #32]
 8002f4c:	f7ff fd82 	bl	8002a54 <_ZN8touchgfx8TextAreaC1Ev>
 8002f50:	f504 6296 	add.w	r2, r4, #1200	; 0x4b0
 8002f54:	4610      	mov	r0, r2
 8002f56:	ee08 2a90 	vmov	s17, r2
 8002f5a:	f7ff fd05 	bl	8002968 <_ZN8touchgfx9ContainerC1Ev>
 8002f5e:	f204 42dc 	addw	r2, r4, #1244	; 0x4dc
 8002f62:	4610      	mov	r0, r2
 8002f64:	9215      	str	r2, [sp, #84]	; 0x54
 8002f66:	f010 fe0d 	bl	8013b84 <_ZN8touchgfx14ButtonWithIconC1Ev>
 8002f6a:	f504 62a3 	add.w	r2, r4, #1304	; 0x518
 8002f6e:	4610      	mov	r0, r2
 8002f70:	9216      	str	r2, [sp, #88]	; 0x58
 8002f72:	f010 fe07 	bl	8013b84 <_ZN8touchgfx14ButtonWithIconC1Ev>
 8002f76:	f204 5254 	addw	r2, r4, #1364	; 0x554
 8002f7a:	4610      	mov	r0, r2
 8002f7c:	9217      	str	r2, [sp, #92]	; 0x5c
 8002f7e:	f010 fe01 	bl	8013b84 <_ZN8touchgfx14ButtonWithIconC1Ev>
 8002f82:	f504 62b2 	add.w	r2, r4, #1424	; 0x590
 8002f86:	4610      	mov	r0, r2
 8002f88:	9209      	str	r2, [sp, #36]	; 0x24
 8002f8a:	f7ff fd83 	bl	8002a94 <_ZN8touchgfx23TextAreaWithOneWildcardC1Ev>
 8002f8e:	f204 52dc 	addw	r2, r4, #1500	; 0x5dc
 8002f92:	4610      	mov	r0, r2
 8002f94:	920a      	str	r2, [sp, #40]	; 0x28
 8002f96:	f7ff fd7d 	bl	8002a94 <_ZN8touchgfx23TextAreaWithOneWildcardC1Ev>
 8002f9a:	f504 62c5 	add.w	r2, r4, #1576	; 0x628
 8002f9e:	4610      	mov	r0, r2
 8002fa0:	920b      	str	r2, [sp, #44]	; 0x2c
 8002fa2:	f7ff fd77 	bl	8002a94 <_ZN8touchgfx23TextAreaWithOneWildcardC1Ev>
 8002fa6:	f204 6274 	addw	r2, r4, #1652	; 0x674
 8002faa:	4610      	mov	r0, r2
 8002fac:	ee0b 2a10 	vmov	s22, r2
 8002fb0:	f00f fb02 	bl	80125b8 <_ZN8touchgfx4LineC1Ev>
 8002fb4:	f204 62e4 	addw	r2, r4, #1764	; 0x6e4
 8002fb8:	4610      	mov	r0, r2
 8002fba:	921f      	str	r2, [sp, #124]	; 0x7c
 8002fbc:	f7ff faea 	bl	8002594 <_ZN8touchgfx21AbstractPainterRGB565C1Ev>
 8002fc0:	f106 0324 	add.w	r3, r6, #36	; 0x24
 8002fc4:	f504 62df 	add.w	r2, r4, #1784	; 0x6f8
 8002fc8:	f8c4 36ec 	str.w	r3, [r4, #1772]	; 0x6ec
 8002fcc:	f8c4 66e4 	str.w	r6, [r4, #1764]	; 0x6e4
 8002fd0:	4610      	mov	r0, r2
 8002fd2:	f8c4 56f0 	str.w	r5, [r4, #1776]	; 0x6f0
 8002fd6:	ee0f 2a10 	vmov	s30, r2
 8002fda:	f7ff fd3b 	bl	8002a54 <_ZN8touchgfx8TextAreaC1Ev>
 8002fde:	f504 62e8 	add.w	r2, r4, #1856	; 0x740
 8002fe2:	4610      	mov	r0, r2
 8002fe4:	ee09 2a10 	vmov	s18, r2
 8002fe8:	f7ff fcbe 	bl	8002968 <_ZN8touchgfx9ContainerC1Ev>
 8002fec:	f204 726c 	addw	r2, r4, #1900	; 0x76c
 8002ff0:	4610      	mov	r0, r2
 8002ff2:	9218      	str	r2, [sp, #96]	; 0x60
 8002ff4:	f010 fdc6 	bl	8013b84 <_ZN8touchgfx14ButtonWithIconC1Ev>
 8002ff8:	f504 62f5 	add.w	r2, r4, #1960	; 0x7a8
 8002ffc:	4610      	mov	r0, r2
 8002ffe:	9219      	str	r2, [sp, #100]	; 0x64
 8003000:	f010 fdc0 	bl	8013b84 <_ZN8touchgfx14ButtonWithIconC1Ev>
 8003004:	f204 72e4 	addw	r2, r4, #2020	; 0x7e4
 8003008:	4610      	mov	r0, r2
 800300a:	921a      	str	r2, [sp, #104]	; 0x68
 800300c:	f010 fdba 	bl	8013b84 <_ZN8touchgfx14ButtonWithIconC1Ev>
 8003010:	f504 6202 	add.w	r2, r4, #2080	; 0x820
 8003014:	4610      	mov	r0, r2
 8003016:	920c      	str	r2, [sp, #48]	; 0x30
 8003018:	f7ff fd3c 	bl	8002a94 <_ZN8touchgfx23TextAreaWithOneWildcardC1Ev>
 800301c:	f604 026c 	addw	r2, r4, #2156	; 0x86c
 8003020:	4610      	mov	r0, r2
 8003022:	920d      	str	r2, [sp, #52]	; 0x34
 8003024:	f7ff fd36 	bl	8002a94 <_ZN8touchgfx23TextAreaWithOneWildcardC1Ev>
 8003028:	f604 02b8 	addw	r2, r4, #2232	; 0x8b8
 800302c:	4610      	mov	r0, r2
 800302e:	920e      	str	r2, [sp, #56]	; 0x38
 8003030:	f7ff fd30 	bl	8002a94 <_ZN8touchgfx23TextAreaWithOneWildcardC1Ev>
 8003034:	f604 1204 	addw	r2, r4, #2308	; 0x904
 8003038:	4610      	mov	r0, r2
 800303a:	ee0b 2a90 	vmov	s23, r2
 800303e:	f00f fabb 	bl	80125b8 <_ZN8touchgfx4LineC1Ev>
 8003042:	f604 1274 	addw	r2, r4, #2420	; 0x974
 8003046:	4610      	mov	r0, r2
 8003048:	9220      	str	r2, [sp, #128]	; 0x80
 800304a:	f7ff faa3 	bl	8002594 <_ZN8touchgfx21AbstractPainterRGB565C1Ev>
 800304e:	f106 0324 	add.w	r3, r6, #36	; 0x24
 8003052:	f604 1288 	addw	r2, r4, #2440	; 0x988
 8003056:	f8c4 397c 	str.w	r3, [r4, #2428]	; 0x97c
 800305a:	f8c4 6974 	str.w	r6, [r4, #2420]	; 0x974
 800305e:	4610      	mov	r0, r2
 8003060:	f8c4 5980 	str.w	r5, [r4, #2432]	; 0x980
 8003064:	ee0f 2a90 	vmov	s31, r2
 8003068:	f7ff fcf4 	bl	8002a54 <_ZN8touchgfx8TextAreaC1Ev>
 800306c:	f504 621d 	add.w	r2, r4, #2512	; 0x9d0
 8003070:	4610      	mov	r0, r2
 8003072:	ee09 2a90 	vmov	s19, r2
 8003076:	f7ff fc77 	bl	8002968 <_ZN8touchgfx9ContainerC1Ev>
 800307a:	f604 12fc 	addw	r2, r4, #2556	; 0x9fc
 800307e:	4610      	mov	r0, r2
 8003080:	921b      	str	r2, [sp, #108]	; 0x6c
 8003082:	f010 fd7f 	bl	8013b84 <_ZN8touchgfx14ButtonWithIconC1Ev>
 8003086:	f604 2238 	addw	r2, r4, #2616	; 0xa38
 800308a:	4610      	mov	r0, r2
 800308c:	921c      	str	r2, [sp, #112]	; 0x70
 800308e:	f010 fd79 	bl	8013b84 <_ZN8touchgfx14ButtonWithIconC1Ev>
 8003092:	f604 2274 	addw	r2, r4, #2676	; 0xa74
 8003096:	4610      	mov	r0, r2
 8003098:	921d      	str	r2, [sp, #116]	; 0x74
 800309a:	f010 fd73 	bl	8013b84 <_ZN8touchgfx14ButtonWithIconC1Ev>
 800309e:	f504 622b 	add.w	r2, r4, #2736	; 0xab0
 80030a2:	4610      	mov	r0, r2
 80030a4:	920f      	str	r2, [sp, #60]	; 0x3c
 80030a6:	f7ff fcf5 	bl	8002a94 <_ZN8touchgfx23TextAreaWithOneWildcardC1Ev>
 80030aa:	f604 22fc 	addw	r2, r4, #2812	; 0xafc
 80030ae:	4610      	mov	r0, r2
 80030b0:	9210      	str	r2, [sp, #64]	; 0x40
 80030b2:	f7ff fcef 	bl	8002a94 <_ZN8touchgfx23TextAreaWithOneWildcardC1Ev>
 80030b6:	f604 3248 	addw	r2, r4, #2888	; 0xb48
 80030ba:	4610      	mov	r0, r2
 80030bc:	9211      	str	r2, [sp, #68]	; 0x44
 80030be:	f7ff fce9 	bl	8002a94 <_ZN8touchgfx23TextAreaWithOneWildcardC1Ev>
 80030c2:	f604 3294 	addw	r2, r4, #2964	; 0xb94
 80030c6:	4610      	mov	r0, r2
 80030c8:	ee0c 2a10 	vmov	s24, r2
 80030cc:	f00f fa74 	bl	80125b8 <_ZN8touchgfx4LineC1Ev>
 80030d0:	f604 4204 	addw	r2, r4, #3076	; 0xc04
 80030d4:	4610      	mov	r0, r2
 80030d6:	9221      	str	r2, [sp, #132]	; 0x84
 80030d8:	f7ff fa5c 	bl	8002594 <_ZN8touchgfx21AbstractPainterRGB565C1Ev>
 80030dc:	f106 0324 	add.w	r3, r6, #36	; 0x24
 80030e0:	f604 4218 	addw	r2, r4, #3096	; 0xc18
 80030e4:	f8c4 3c0c 	str.w	r3, [r4, #3084]	; 0xc0c
 80030e8:	f8c4 6c04 	str.w	r6, [r4, #3076]	; 0xc04
 80030ec:	4610      	mov	r0, r2
 80030ee:	f8c4 5c10 	str.w	r5, [r4, #3088]	; 0xc10
 80030f2:	9203      	str	r2, [sp, #12]
 80030f4:	f7ff fcae 	bl	8002a54 <_ZN8touchgfx8TextAreaC1Ev>
 80030f8:	f504 6246 	add.w	r2, r4, #3168	; 0xc60
 80030fc:	4610      	mov	r0, r2
 80030fe:	ee0c 2a90 	vmov	s25, r2
 8003102:	f00f fa59 	bl	80125b8 <_ZN8touchgfx4LineC1Ev>
 8003106:	f504 624d 	add.w	r2, r4, #3280	; 0xcd0
 800310a:	4610      	mov	r0, r2
 800310c:	9222      	str	r2, [sp, #136]	; 0x88
 800310e:	f7ff fa41 	bl	8002594 <_ZN8touchgfx21AbstractPainterRGB565C1Ev>
 8003112:	f106 0324 	add.w	r3, r6, #36	; 0x24
 8003116:	f604 42e4 	addw	r2, r4, #3300	; 0xce4
 800311a:	f8c4 3cd8 	str.w	r3, [r4, #3288]	; 0xcd8
 800311e:	f8c4 6cd0 	str.w	r6, [r4, #3280]	; 0xcd0
 8003122:	4610      	mov	r0, r2
 8003124:	f8c4 5cdc 	str.w	r5, [r4, #3292]	; 0xcdc
 8003128:	9204      	str	r2, [sp, #16]
 800312a:	f7ff fc93 	bl	8002a54 <_ZN8touchgfx8TextAreaC1Ev>
 800312e:	f604 522c 	addw	r2, r4, #3372	; 0xd2c
 8003132:	4610      	mov	r0, r2
 8003134:	ee0d 2a10 	vmov	s26, r2
 8003138:	f00f fa3e 	bl	80125b8 <_ZN8touchgfx4LineC1Ev>
 800313c:	f604 529c 	addw	r2, r4, #3484	; 0xd9c
 8003140:	4610      	mov	r0, r2
 8003142:	9223      	str	r2, [sp, #140]	; 0x8c
 8003144:	f7ff fa26 	bl	8002594 <_ZN8touchgfx21AbstractPainterRGB565C1Ev>
 8003148:	f106 0324 	add.w	r3, r6, #36	; 0x24
 800314c:	f8c4 3da4 	str.w	r3, [r4, #3492]	; 0xda4
 8003150:	f504 635b 	add.w	r3, r4, #3504	; 0xdb0
 8003154:	f8c4 6d9c 	str.w	r6, [r4, #3484]	; 0xd9c
 8003158:	4618      	mov	r0, r3
 800315a:	f8c4 5da8 	str.w	r5, [r4, #3496]	; 0xda8
 800315e:	9305      	str	r3, [sp, #20]
 8003160:	f7ff fc78 	bl	8002a54 <_ZN8touchgfx8TextAreaC1Ev>
 8003164:	f604 53f8 	addw	r3, r4, #3576	; 0xdf8
 8003168:	4618      	mov	r0, r3
 800316a:	9306      	str	r3, [sp, #24]
 800316c:	f7ff fc72 	bl	8002a54 <_ZN8touchgfx8TextAreaC1Ev>
        : pobject(pObject), pmemfun(pmemfun_1)
 8003170:	f504 5380 	add.w	r3, r4, #4096	; 0x1000
 8003174:	4a1e      	ldr	r2, [pc, #120]	; (80031f0 <_ZN23Calibration_PadViewBaseC1Ev+0x3c4>)
 8003176:	f8c3 2d54 	str.w	r2, [r3, #3412]	; 0xd54
 800317a:	4a1e      	ldr	r2, [pc, #120]	; (80031f4 <_ZN23Calibration_PadViewBaseC1Ev+0x3c8>)
 800317c:	f8c3 2d5c 	str.w	r2, [r3, #3420]	; 0xd5c
 8003180:	f8c3 4d58 	str.w	r4, [r3, #3416]	; 0xd58
 8003184:	f8c3 5d60 	str.w	r5, [r3, #3424]	; 0xd60
    touchgfx::CanvasWidgetRenderer::setupBuffer(canvasBuffer, CANVAS_BUFFER_SIZE);
 8003188:	f44f 6161 	mov.w	r1, #3600	; 0xe10
 800318c:	f604 7044 	addw	r0, r4, #3908	; 0xf44
 8003190:	f011 fd12 	bl	8014bb8 <_ZN8touchgfx20CanvasWidgetRenderer11setupBufferEPhj>
    __background.setPosition(0, 0, 240, 320);
 8003194:	f44f 73a0 	mov.w	r3, #320	; 0x140
 8003198:	462a      	mov	r2, r5
 800319a:	4658      	mov	r0, fp
 800319c:	9300      	str	r3, [sp, #0]
 800319e:	4629      	mov	r1, r5
 80031a0:	23f0      	movs	r3, #240	; 0xf0
 80031a2:	f7ff fbce 	bl	8002942 <_ZN8touchgfx8Drawable11setPositionEssss>
     *
     * @see getColor, Color::getColorFromRGB
     */
    void setColor(colortype newColor)
    {
        color = newColor;
 80031a6:	f04f 437f 	mov.w	r3, #4278190080	; 0xff000000
 80031aa:	66a3      	str	r3, [r4, #104]	; 0x68
     * @note Must not be called with a Drawable that was already added to the screen. If in doubt,
     *       call remove() first.
     */
    void add(Drawable& d)
    {
        container.add(d);
 80031ac:	1d23      	adds	r3, r4, #4
 80031ae:	4618      	mov	r0, r3
 80031b0:	4659      	mov	r1, fp
 80031b2:	ee0a 3a10 	vmov	s20, r3
 80031b6:	f00d f933 	bl	8010420 <_ZN8touchgfx9Container3addERNS_8DrawableE>
    image1.setXY(0, 0);
 80031ba:	462a      	mov	r2, r5
 80031bc:	4640      	mov	r0, r8
 80031be:	4629      	mov	r1, r5
 80031c0:	f7ff fbb2 	bl	8002928 <_ZN8touchgfx8Drawable5setXYEss>
 80031c4:	f04f 0308 	mov.w	r3, #8
    image1.setBitmap(touchgfx::Bitmap(BITMAP_BACKGROUND_2_RESIZED_4_ID));
 80031c8:	4640      	mov	r0, r8
 80031ca:	4649      	mov	r1, r9
 80031cc:	f8ad 30ac 	strh.w	r3, [sp, #172]	; 0xac
 80031d0:	f010 fcff 	bl	8013bd2 <_ZN8touchgfx5Image9setBitmapERKNS_6BitmapE>
 80031d4:	4641      	mov	r1, r8
 80031d6:	ee1a 0a10 	vmov	r0, s20
 80031da:	f00d f921 	bl	8010420 <_ZN8touchgfx9Container3addERNS_8DrawableE>
 80031de:	e00b      	b.n	80031f8 <_ZN23Calibration_PadViewBaseC1Ev+0x3cc>
 80031e0:	0802d038 	.word	0x0802d038
 80031e4:	0802f444 	.word	0x0802f444
 80031e8:	0802f690 	.word	0x0802f690
 80031ec:	0802f178 	.word	0x0802f178
 80031f0:	0802d020 	.word	0x0802d020
 80031f4:	08002bbd 	.word	0x08002bbd
    buttonWithLabel3.setXY(33, 257);
 80031f8:	9807      	ldr	r0, [sp, #28]
 80031fa:	f240 1201 	movw	r2, #257	; 0x101
 80031fe:	2121      	movs	r1, #33	; 0x21
 8003200:	f7ff fb92 	bl	8002928 <_ZN8touchgfx8Drawable5setXYEss>
 8003204:	2303      	movs	r3, #3
    buttonWithLabel3.setBitmaps(touchgfx::Bitmap(BITMAP_ALTERNATE_THEME_IMAGES_WIDGETS_BUTTON_REGULAR_HEIGHT_50_SMALL_ROUND_PRESSED_ID), touchgfx::Bitmap(BITMAP_ALTERNATE_THEME_IMAGES_WIDGETS_BUTTON_REGULAR_HEIGHT_50_SMALL_ROUND_NORMAL_ID));
 8003206:	464a      	mov	r2, r9
 8003208:	a92a      	add	r1, sp, #168	; 0xa8
 800320a:	9807      	ldr	r0, [sp, #28]
 800320c:	f8ad 30a8 	strh.w	r3, [sp, #168]	; 0xa8
 8003210:	2302      	movs	r3, #2
 8003212:	f8ad 30ac 	strh.w	r3, [sp, #172]	; 0xac
 8003216:	f010 fae6 	bl	80137e6 <_ZN8touchgfx6Button10setBitmapsERKNS_6BitmapES3_>
class TypedText
 800321a:	231f      	movs	r3, #31
        updateTextPosition();
 800321c:	9807      	ldr	r0, [sp, #28]
 800321e:	f8a4 30d0 	strh.w	r3, [r4, #208]	; 0xd0
 8003222:	f7ff fbc5 	bl	80029b0 <_ZN8touchgfx15ButtonWithLabel18updateTextPositionEv>
        color = col;
 8003226:	f04f 33ff 	mov.w	r3, #4294967295
        colorPressed = col;
 800322a:	e9c4 3335 	strd	r3, r3, [r4, #212]	; 0xd4
    buttonWithLabel3.setAction(buttonCallback);
 800322e:	f504 53ea 	add.w	r3, r4, #7488	; 0x1d40
 8003232:	3314      	adds	r3, #20
     *
     * @see GenericCallback, handleClickEvent, ClickEvent
     */
    void setAction(GenericCallback<const AbstractButton&>& callback)
    {
        action = &callback;
 8003234:	f8c4 30c0 	str.w	r3, [r4, #192]	; 0xc0
 8003238:	9907      	ldr	r1, [sp, #28]
 800323a:	9302      	str	r3, [sp, #8]
 800323c:	ee1a 0a10 	vmov	r0, s20
 8003240:	f00d f8ee 	bl	8010420 <_ZN8touchgfx9Container3addERNS_8DrawableE>
    swipeContainer1.setXY(0, 85);
 8003244:	ee18 0a10 	vmov	r0, s16
 8003248:	2255      	movs	r2, #85	; 0x55
 800324a:	4629      	mov	r1, r5
 800324c:	f7ff fb6c 	bl	8002928 <_ZN8touchgfx8Drawable5setXYEss>
 8003250:	2306      	movs	r3, #6
    swipeContainer1.setPageIndicatorBitmaps(touchgfx::Bitmap(BITMAP_ALTERNATE_THEME_IMAGES_WIDGETS_SWIPECONTAINER_MEDIUM_OFF_NORMAL_ID), touchgfx::Bitmap(BITMAP_ALTERNATE_THEME_IMAGES_WIDGETS_SWIPECONTAINER_MEDIUM_ON_ACTIVE_ID));
 8003252:	ee18 0a10 	vmov	r0, s16
 8003256:	f8ad 30a8 	strh.w	r3, [sp, #168]	; 0xa8
 800325a:	464a      	mov	r2, r9
 800325c:	2307      	movs	r3, #7
 800325e:	a92a      	add	r1, sp, #168	; 0xa8
 8003260:	f8ad 30ac 	strh.w	r3, [sp, #172]	; 0xac
 8003264:	f00d fd36 	bl	8010cd4 <_ZN8touchgfx14SwipeContainer23setPageIndicatorBitmapsERKNS_6BitmapES3_>
    swipeContainer1.setPageIndicatorXY(80, 140);
 8003268:	228c      	movs	r2, #140	; 0x8c
 800326a:	ee18 0a10 	vmov	r0, s16
 800326e:	2150      	movs	r1, #80	; 0x50
 8003270:	f00d fbde 	bl	8010a30 <_ZN8touchgfx14SwipeContainer18setPageIndicatorXYEss>
    swipeContainer1.setSwipeCutoff(50);
 8003274:	ee18 0a10 	vmov	r0, s16
 8003278:	2132      	movs	r1, #50	; 0x32
 800327a:	f00d fb5c 	bl	8010936 <_ZN8touchgfx14SwipeContainer14setSwipeCutoffEt>
    swipeContainer1.setEndSwipeElasticWidth(50);
 800327e:	ee18 0a10 	vmov	r0, s16
 8003282:	2132      	movs	r1, #50	; 0x32
 8003284:	f00d fbd2 	bl	8010a2c <_ZN8touchgfx14SwipeContainer23setEndSwipeElasticWidthEt>
        rect.width = width;
 8003288:	4b5e      	ldr	r3, [pc, #376]	; (8003404 <_ZN23Calibration_PadViewBaseC1Ev+0x5d8>)
 800328a:	f8c4 31dc 	str.w	r3, [r4, #476]	; 0x1dc
    textAreaCal_LP1_1.setXY(22, 32);
 800328e:	2220      	movs	r2, #32
 8003290:	4638      	mov	r0, r7
 8003292:	2116      	movs	r1, #22
 8003294:	f7ff fb48 	bl	8002928 <_ZN8touchgfx8Drawable5setXYEss>
        color = newColor;
 8003298:	f04f 33ff 	mov.w	r3, #4294967295
 800329c:	f8c4 3230 	str.w	r3, [r4, #560]	; 0x230
        boundingArea = calculateBoundingArea();
 80032a0:	f8d4 3200 	ldr.w	r3, [r4, #512]	; 0x200
        linespace = space;
 80032a4:	f8a4 5234 	strh.w	r5, [r4, #564]	; 0x234
        boundingArea = calculateBoundingArea();
 80032a8:	ae24      	add	r6, sp, #144	; 0x90
 80032aa:	4639      	mov	r1, r7
 80032ac:	f8d3 3084 	ldr.w	r3, [r3, #132]	; 0x84
 80032b0:	4630      	mov	r0, r6
 80032b2:	4798      	blx	r3
 80032b4:	e896 0007 	ldmia.w	r6, {r0, r1, r2}
 80032b8:	f504 730f 	add.w	r3, r4, #572	; 0x23c
 80032bc:	e883 0007 	stmia.w	r3, {r0, r1, r2}
    textAreaCal_LP1_1.setWildcard(textAreaCal_LP1_1Buffer);
 80032c0:	f504 6364 	add.w	r3, r4, #3648	; 0xe40
    textAreaCal_LP1_1.resizeToCurrentText();
 80032c4:	4638      	mov	r0, r7
        wc1 = value;
 80032c6:	f8c4 3248 	str.w	r3, [r4, #584]	; 0x248
    textAreaCal_LP1_1Buffer[0] = 0;
 80032ca:	f8a4 5e40 	strh.w	r5, [r4, #3648]	; 0xe40
    textAreaCal_LP1_1.resizeToCurrentText();
 80032ce:	f00f feaf 	bl	8013030 <_ZN8touchgfx8TextArea19resizeToCurrentTextEv>
        : typedTextId(id)
 80032d2:	4b4d      	ldr	r3, [pc, #308]	; (8003408 <_ZN23Calibration_PadViewBaseC1Ev+0x5dc>)
 80032d4:	932b      	str	r3, [sp, #172]	; 0xac
    textAreaCal_LP1_1.setTypedText(touchgfx::TypedText(T_TEXTAREACAL_RH1));
 80032d6:	4638      	mov	r0, r7
 80032d8:	f04f 0314 	mov.w	r3, #20
 80032dc:	4649      	mov	r1, r9
 80032de:	f8ad 30b0 	strh.w	r3, [sp, #176]	; 0xb0
 80032e2:	f00f fec5 	bl	8013070 <_ZN8touchgfx8TextArea12setTypedTextERKNS_9TypedTextE>
    swipeContainerPadLeft.add(textAreaCal_LP1_1);
 80032e6:	4639      	mov	r1, r7
 80032e8:	4650      	mov	r0, sl
 80032ea:	f00d f899 	bl	8010420 <_ZN8touchgfx9Container3addERNS_8DrawableE>
    buttonWithIcon_LP3.setXY(194, 97);
 80032ee:	9812      	ldr	r0, [sp, #72]	; 0x48
 80032f0:	2261      	movs	r2, #97	; 0x61
 80032f2:	21c2      	movs	r1, #194	; 0xc2
 80032f4:	f7ff fb18 	bl	8002928 <_ZN8touchgfx8Drawable5setXYEss>
 80032f8:	2709      	movs	r7, #9
 80032fa:	f04f 0b01 	mov.w	fp, #1
    buttonWithIcon_LP3.setBitmaps(touchgfx::Bitmap(BITMAP_ALTERNATE_THEME_IMAGES_WIDGETS_BUTTON_ICON_ROUND_MICRO_OUTLINE_NORMAL_ID), touchgfx::Bitmap(BITMAP_ALTERNATE_THEME_IMAGES_WIDGETS_BUTTON_ICON_ROUND_MICRO_OUTLINE_PRESSED_ID), touchgfx::Bitmap(BITMAP_CHECKMARK_ID), touchgfx::Bitmap(BITMAP_CHECKMARK_ID));
 80032fe:	aa29      	add	r2, sp, #164	; 0xa4
 8003300:	9812      	ldr	r0, [sp, #72]	; 0x48
 8003302:	f8cd 9000 	str.w	r9, [sp]
 8003306:	ab2a      	add	r3, sp, #168	; 0xa8
 8003308:	a928      	add	r1, sp, #160	; 0xa0
 800330a:	f8ad 50a0 	strh.w	r5, [sp, #160]	; 0xa0
 800330e:	f8ad b0a4 	strh.w	fp, [sp, #164]	; 0xa4
 8003312:	f8ad 70a8 	strh.w	r7, [sp, #168]	; 0xa8
 8003316:	f8ad 70ac 	strh.w	r7, [sp, #172]	; 0xac
 800331a:	f010 fb9e 	bl	8013a5a <_ZN8touchgfx14ButtonWithIcon10setBitmapsERKNS_6BitmapES3_S3_S3_>
 800331e:	9b02      	ldr	r3, [sp, #8]
 8003320:	f8c4 3274 	str.w	r3, [r4, #628]	; 0x274
    swipeContainerPadLeft.add(buttonWithIcon_LP3);
 8003324:	9912      	ldr	r1, [sp, #72]	; 0x48
     * @note The user code must call invalidate() in order to update the button on the display.
     * @note The value set is overwritten on a subsequent call to setBitmaps.
     */
    void setIconX(int16_t x)
    {
        iconX = x;
 8003326:	f8c4 5284 	str.w	r5, [r4, #644]	; 0x284
 800332a:	4650      	mov	r0, sl
 800332c:	f00d f878 	bl	8010420 <_ZN8touchgfx9Container3addERNS_8DrawableE>
    buttonWithIcon_LP2.setXY(194, 61);
 8003330:	9813      	ldr	r0, [sp, #76]	; 0x4c
 8003332:	223d      	movs	r2, #61	; 0x3d
 8003334:	21c2      	movs	r1, #194	; 0xc2
 8003336:	f7ff faf7 	bl	8002928 <_ZN8touchgfx8Drawable5setXYEss>
    buttonWithIcon_LP2.setBitmaps(touchgfx::Bitmap(BITMAP_ALTERNATE_THEME_IMAGES_WIDGETS_BUTTON_ICON_ROUND_MICRO_OUTLINE_NORMAL_ID), touchgfx::Bitmap(BITMAP_ALTERNATE_THEME_IMAGES_WIDGETS_BUTTON_ICON_ROUND_MICRO_OUTLINE_PRESSED_ID), touchgfx::Bitmap(BITMAP_CHECKMARK_ID), touchgfx::Bitmap(BITMAP_CHECKMARK_ID));
 800333a:	aa29      	add	r2, sp, #164	; 0xa4
 800333c:	9813      	ldr	r0, [sp, #76]	; 0x4c
 800333e:	f8cd 9000 	str.w	r9, [sp]
 8003342:	ab2a      	add	r3, sp, #168	; 0xa8
 8003344:	a928      	add	r1, sp, #160	; 0xa0
 8003346:	f8ad 50a0 	strh.w	r5, [sp, #160]	; 0xa0
 800334a:	f8ad b0a4 	strh.w	fp, [sp, #164]	; 0xa4
 800334e:	f8ad 70a8 	strh.w	r7, [sp, #168]	; 0xa8
 8003352:	f8ad 70ac 	strh.w	r7, [sp, #172]	; 0xac
 8003356:	f010 fb80 	bl	8013a5a <_ZN8touchgfx14ButtonWithIcon10setBitmapsERKNS_6BitmapES3_S3_S3_>
 800335a:	9b02      	ldr	r3, [sp, #8]
 800335c:	f8c4 32b0 	str.w	r3, [r4, #688]	; 0x2b0
    swipeContainerPadLeft.add(buttonWithIcon_LP2);
 8003360:	9913      	ldr	r1, [sp, #76]	; 0x4c
 8003362:	f8c4 52c0 	str.w	r5, [r4, #704]	; 0x2c0
 8003366:	4650      	mov	r0, sl
 8003368:	f00d f85a 	bl	8010420 <_ZN8touchgfx9Container3addERNS_8DrawableE>
    buttonWithIcon_LP1.setXY(194, 25);
 800336c:	9814      	ldr	r0, [sp, #80]	; 0x50
 800336e:	2219      	movs	r2, #25
 8003370:	21c2      	movs	r1, #194	; 0xc2
 8003372:	f7ff fad9 	bl	8002928 <_ZN8touchgfx8Drawable5setXYEss>
    buttonWithIcon_LP1.setBitmaps(touchgfx::Bitmap(BITMAP_ALTERNATE_THEME_IMAGES_WIDGETS_BUTTON_ICON_ROUND_MICRO_OUTLINE_NORMAL_ID), touchgfx::Bitmap(BITMAP_ALTERNATE_THEME_IMAGES_WIDGETS_BUTTON_ICON_ROUND_MICRO_OUTLINE_PRESSED_ID), touchgfx::Bitmap(BITMAP_CHECKMARK_ID), touchgfx::Bitmap(BITMAP_CHECKMARK_ID));
 8003376:	aa29      	add	r2, sp, #164	; 0xa4
 8003378:	9814      	ldr	r0, [sp, #80]	; 0x50
 800337a:	f8cd 9000 	str.w	r9, [sp]
 800337e:	ab2a      	add	r3, sp, #168	; 0xa8
 8003380:	a928      	add	r1, sp, #160	; 0xa0
 8003382:	f8ad 50a0 	strh.w	r5, [sp, #160]	; 0xa0
 8003386:	f8ad b0a4 	strh.w	fp, [sp, #164]	; 0xa4
 800338a:	f8ad 70a8 	strh.w	r7, [sp, #168]	; 0xa8
 800338e:	f8ad 70ac 	strh.w	r7, [sp, #172]	; 0xac
 8003392:	f010 fb62 	bl	8013a5a <_ZN8touchgfx14ButtonWithIcon10setBitmapsERKNS_6BitmapES3_S3_S3_>
 8003396:	9b02      	ldr	r3, [sp, #8]
 8003398:	f8c4 32ec 	str.w	r3, [r4, #748]	; 0x2ec
    swipeContainerPadLeft.add(buttonWithIcon_LP1);
 800339c:	9914      	ldr	r1, [sp, #80]	; 0x50
 800339e:	f8c4 52fc 	str.w	r5, [r4, #764]	; 0x2fc
 80033a2:	4650      	mov	r0, sl
 80033a4:	f00d f83c 	bl	8010420 <_ZN8touchgfx9Container3addERNS_8DrawableE>
    textAreaCal_LP3.setXY(10, 104);
 80033a8:	2268      	movs	r2, #104	; 0x68
 80033aa:	ee1d 0a90 	vmov	r0, s27
 80033ae:	210a      	movs	r1, #10
 80033b0:	f7ff faba 	bl	8002928 <_ZN8touchgfx8Drawable5setXYEss>
        color = newColor;
 80033b4:	f04f 33ff 	mov.w	r3, #4294967295
 80033b8:	f8c4 3330 	str.w	r3, [r4, #816]	; 0x330
        boundingArea = calculateBoundingArea();
 80033bc:	f8d4 3300 	ldr.w	r3, [r4, #768]	; 0x300
        linespace = space;
 80033c0:	f8a4 5334 	strh.w	r5, [r4, #820]	; 0x334
        boundingArea = calculateBoundingArea();
 80033c4:	f8d3 3084 	ldr.w	r3, [r3, #132]	; 0x84
 80033c8:	ee1d 1a90 	vmov	r1, s27
 80033cc:	4630      	mov	r0, r6
 80033ce:	4798      	blx	r3
 80033d0:	e896 0007 	ldmia.w	r6, {r0, r1, r2}
 80033d4:	f504 734f 	add.w	r3, r4, #828	; 0x33c
 80033d8:	e883 0007 	stmia.w	r3, {r0, r1, r2}
        assert(typedTexts != 0 && "TypedText database has not been initialized.");
 80033dc:	4b0b      	ldr	r3, [pc, #44]	; (800340c <_ZN23Calibration_PadViewBaseC1Ev+0x5e0>)
 80033de:	681b      	ldr	r3, [r3, #0]
    Unicode::snprintf(textAreaCal_LP3Buffer, TEXTAREACAL_LP3_SIZE, "%s", touchgfx::TypedText(T___SINGLEUSE_12P5).getText());
 80033e0:	f604 6854 	addw	r8, r4, #3668	; 0xe54
 80033e4:	b92b      	cbnz	r3, 80033f2 <_ZN23Calibration_PadViewBaseC1Ev+0x5c6>
 80033e6:	4b0a      	ldr	r3, [pc, #40]	; (8003410 <_ZN23Calibration_PadViewBaseC1Ev+0x5e4>)
 80033e8:	4a0a      	ldr	r2, [pc, #40]	; (8003414 <_ZN23Calibration_PadViewBaseC1Ev+0x5e8>)
 80033ea:	2160      	movs	r1, #96	; 0x60
        assert(hasValidId() && "typedTextId larger than numberOfTypedTexts.");
 80033ec:	480a      	ldr	r0, [pc, #40]	; (8003418 <_ZN23Calibration_PadViewBaseC1Ev+0x5ec>)
 80033ee:	f027 ffb7 	bl	802b360 <__assert_func>
 80033f2:	4b0a      	ldr	r3, [pc, #40]	; (800341c <_ZN23Calibration_PadViewBaseC1Ev+0x5f0>)
 80033f4:	881b      	ldrh	r3, [r3, #0]
 80033f6:	2b09      	cmp	r3, #9
 80033f8:	d814      	bhi.n	8003424 <_ZN23Calibration_PadViewBaseC1Ev+0x5f8>
 80033fa:	4b09      	ldr	r3, [pc, #36]	; (8003420 <_ZN23Calibration_PadViewBaseC1Ev+0x5f4>)
 80033fc:	4a05      	ldr	r2, [pc, #20]	; (8003414 <_ZN23Calibration_PadViewBaseC1Ev+0x5e8>)
 80033fe:	2161      	movs	r1, #97	; 0x61
 8003400:	e7f4      	b.n	80033ec <_ZN23Calibration_PadViewBaseC1Ev+0x5c0>
 8003402:	bf00      	nop
 8003404:	00ac00f0 	.word	0x00ac00f0
 8003408:	0802cef0 	.word	0x0802cef0
 800340c:	20013874 	.word	0x20013874
 8003410:	0802cd40 	.word	0x0802cd40
 8003414:	0802ce45 	.word	0x0802ce45
 8003418:	0802cdbd 	.word	0x0802cdbd
 800341c:	20013878 	.word	0x20013878
 8003420:	0802ce04 	.word	0x0802ce04
        return texts->getText(typedTextId);
 8003424:	4bd9      	ldr	r3, [pc, #868]	; (800378c <_ZN23Calibration_PadViewBaseC1Ev+0x960>)
 8003426:	4639      	mov	r1, r7
 8003428:	6818      	ldr	r0, [r3, #0]
 800342a:	f005 f98d 	bl	8008748 <_ZNK8touchgfx5Texts7getTextEt>
 800342e:	4ad8      	ldr	r2, [pc, #864]	; (8003790 <_ZN23Calibration_PadViewBaseC1Ev+0x964>)
 8003430:	4603      	mov	r3, r0
 8003432:	210a      	movs	r1, #10
 8003434:	4640      	mov	r0, r8
 8003436:	f016 fa79 	bl	801992c <_ZN8touchgfx7Unicode8snprintfEPttPKcz>
    textAreaCal_LP3.resizeToCurrentText();
 800343a:	ee1d 0a90 	vmov	r0, s27
 800343e:	f8c4 8348 	str.w	r8, [r4, #840]	; 0x348
 8003442:	f00f fdf5 	bl	8013030 <_ZN8touchgfx8TextArea19resizeToCurrentTextEv>
        : typedTextId(id)
 8003446:	f04f 080a 	mov.w	r8, #10
 800344a:	4bd2      	ldr	r3, [pc, #840]	; (8003794 <_ZN23Calibration_PadViewBaseC1Ev+0x968>)
 800344c:	932b      	str	r3, [sp, #172]	; 0xac
    textAreaCal_LP3.setTypedText(touchgfx::TypedText(T_TEXTAREACAL1_LP3));
 800344e:	ee1d 0a90 	vmov	r0, s27
 8003452:	4649      	mov	r1, r9
 8003454:	f8ad 80b0 	strh.w	r8, [sp, #176]	; 0xb0
 8003458:	f00f fe0a 	bl	8013070 <_ZN8touchgfx8TextArea12setTypedTextERKNS_9TypedTextE>
    swipeContainerPadLeft.add(textAreaCal_LP3);
 800345c:	ee1d 1a90 	vmov	r1, s27
 8003460:	4650      	mov	r0, sl
 8003462:	f00c ffdd 	bl	8010420 <_ZN8touchgfx9Container3addERNS_8DrawableE>
    textAreaCal_LP2.setXY(22, 68);
 8003466:	ee1e 0a10 	vmov	r0, s28
 800346a:	2244      	movs	r2, #68	; 0x44
 800346c:	2116      	movs	r1, #22
 800346e:	f7ff fa5b 	bl	8002928 <_ZN8touchgfx8Drawable5setXYEss>
 8003472:	f8d4 334c 	ldr.w	r3, [r4, #844]	; 0x34c
        linespace = space;
 8003476:	f8a4 5380 	strh.w	r5, [r4, #896]	; 0x380
        color = newColor;
 800347a:	f04f 32ff 	mov.w	r2, #4294967295
        boundingArea = calculateBoundingArea();
 800347e:	f8d3 3084 	ldr.w	r3, [r3, #132]	; 0x84
        color = newColor;
 8003482:	f8c4 237c 	str.w	r2, [r4, #892]	; 0x37c
        boundingArea = calculateBoundingArea();
 8003486:	ee1e 1a10 	vmov	r1, s28
 800348a:	4630      	mov	r0, r6
 800348c:	4798      	blx	r3
 800348e:	e896 0007 	ldmia.w	r6, {r0, r1, r2}
 8003492:	f504 7362 	add.w	r3, r4, #904	; 0x388
 8003496:	e883 0007 	stmia.w	r3, {r0, r1, r2}
    Unicode::snprintf(textAreaCal_LP2Buffer, TEXTAREACAL_LP2_SIZE, "%s", touchgfx::TypedText(T___SINGLEUSE_01G5).getText());
 800349a:	f604 6268 	addw	r2, r4, #3688	; 0xe68
 800349e:	9207      	str	r2, [sp, #28]
        assert(typedTexts != 0 && "TypedText database has not been initialized.");
 80034a0:	4abd      	ldr	r2, [pc, #756]	; (8003798 <_ZN23Calibration_PadViewBaseC1Ev+0x96c>)
 80034a2:	6813      	ldr	r3, [r2, #0]
 80034a4:	2b00      	cmp	r3, #0
 80034a6:	d09e      	beq.n	80033e6 <_ZN23Calibration_PadViewBaseC1Ev+0x5ba>
        assert(hasValidId() && "typedTextId larger than numberOfTypedTexts.");
 80034a8:	4abc      	ldr	r2, [pc, #752]	; (800379c <_ZN23Calibration_PadViewBaseC1Ev+0x970>)
 80034aa:	8813      	ldrh	r3, [r2, #0]
 80034ac:	2b0b      	cmp	r3, #11
 80034ae:	d9a4      	bls.n	80033fa <_ZN23Calibration_PadViewBaseC1Ev+0x5ce>
        return texts->getText(typedTextId);
 80034b0:	48b6      	ldr	r0, [pc, #728]	; (800378c <_ZN23Calibration_PadViewBaseC1Ev+0x960>)
 80034b2:	210b      	movs	r1, #11
 80034b4:	6800      	ldr	r0, [r0, #0]
 80034b6:	f005 f947 	bl	8008748 <_ZNK8touchgfx5Texts7getTextEt>
 80034ba:	4ab5      	ldr	r2, [pc, #724]	; (8003790 <_ZN23Calibration_PadViewBaseC1Ev+0x964>)
 80034bc:	4603      	mov	r3, r0
 80034be:	4641      	mov	r1, r8
 80034c0:	9807      	ldr	r0, [sp, #28]
 80034c2:	f016 fa33 	bl	801992c <_ZN8touchgfx7Unicode8snprintfEPttPKcz>
 80034c6:	9907      	ldr	r1, [sp, #28]
 80034c8:	f8c4 1394 	str.w	r1, [r4, #916]	; 0x394
    textAreaCal_LP2.resizeToCurrentText();
 80034cc:	ee1e 0a10 	vmov	r0, s28
 80034d0:	f00f fdae 	bl	8013030 <_ZN8touchgfx8TextArea19resizeToCurrentTextEv>
        : typedTextId(id)
 80034d4:	4baf      	ldr	r3, [pc, #700]	; (8003794 <_ZN23Calibration_PadViewBaseC1Ev+0x968>)
 80034d6:	932b      	str	r3, [sp, #172]	; 0xac
    textAreaCal_LP2.setTypedText(touchgfx::TypedText(T_TEXTAREACAL1_LP2));
 80034d8:	ee1e 0a10 	vmov	r0, s28
 80034dc:	230c      	movs	r3, #12
 80034de:	4649      	mov	r1, r9
 80034e0:	f8ad 30b0 	strh.w	r3, [sp, #176]	; 0xb0
 80034e4:	f00f fdc4 	bl	8013070 <_ZN8touchgfx8TextArea12setTypedTextERKNS_9TypedTextE>
    swipeContainerPadLeft.add(textAreaCal_LP2);
 80034e8:	ee1e 1a10 	vmov	r1, s28
 80034ec:	4650      	mov	r0, sl
 80034ee:	f00c ff97 	bl	8010420 <_ZN8touchgfx9Container3addERNS_8DrawableE>
    textAreaCal_LP1.setXY(22, 32);
 80034f2:	2220      	movs	r2, #32
 80034f4:	ee1e 0a90 	vmov	r0, s29
 80034f8:	2116      	movs	r1, #22
 80034fa:	f7ff fa15 	bl	8002928 <_ZN8touchgfx8Drawable5setXYEss>
 80034fe:	f8d4 3398 	ldr.w	r3, [r4, #920]	; 0x398
        linespace = space;
 8003502:	f8a4 53cc 	strh.w	r5, [r4, #972]	; 0x3cc
        color = newColor;
 8003506:	f04f 31ff 	mov.w	r1, #4294967295
        boundingArea = calculateBoundingArea();
 800350a:	f8d3 3084 	ldr.w	r3, [r3, #132]	; 0x84
        color = newColor;
 800350e:	f8c4 13c8 	str.w	r1, [r4, #968]	; 0x3c8
        boundingArea = calculateBoundingArea();
 8003512:	4630      	mov	r0, r6
 8003514:	ee1e 1a90 	vmov	r1, s29
 8003518:	4798      	blx	r3
 800351a:	e896 0007 	ldmia.w	r6, {r0, r1, r2}
 800351e:	f504 7375 	add.w	r3, r4, #980	; 0x3d4
 8003522:	e883 0007 	stmia.w	r3, {r0, r1, r2}
    Unicode::snprintf(textAreaCal_LP1Buffer, TEXTAREACAL_LP1_SIZE, "%s", touchgfx::TypedText(T___SINGLEUSE_TG06).getText());
 8003526:	f604 617c 	addw	r1, r4, #3708	; 0xe7c
 800352a:	9107      	str	r1, [sp, #28]
        assert(typedTexts != 0 && "TypedText database has not been initialized.");
 800352c:	499a      	ldr	r1, [pc, #616]	; (8003798 <_ZN23Calibration_PadViewBaseC1Ev+0x96c>)
 800352e:	680b      	ldr	r3, [r1, #0]
 8003530:	2b00      	cmp	r3, #0
 8003532:	f43f af58 	beq.w	80033e6 <_ZN23Calibration_PadViewBaseC1Ev+0x5ba>
        assert(hasValidId() && "typedTextId larger than numberOfTypedTexts.");
 8003536:	4a99      	ldr	r2, [pc, #612]	; (800379c <_ZN23Calibration_PadViewBaseC1Ev+0x970>)
 8003538:	8813      	ldrh	r3, [r2, #0]
 800353a:	2b0d      	cmp	r3, #13
 800353c:	f67f af5d 	bls.w	80033fa <_ZN23Calibration_PadViewBaseC1Ev+0x5ce>
        return texts->getText(typedTextId);
 8003540:	4892      	ldr	r0, [pc, #584]	; (800378c <_ZN23Calibration_PadViewBaseC1Ev+0x960>)
 8003542:	210d      	movs	r1, #13
 8003544:	6800      	ldr	r0, [r0, #0]
 8003546:	f005 f8ff 	bl	8008748 <_ZNK8touchgfx5Texts7getTextEt>
 800354a:	4641      	mov	r1, r8
 800354c:	4603      	mov	r3, r0
 800354e:	4a90      	ldr	r2, [pc, #576]	; (8003790 <_ZN23Calibration_PadViewBaseC1Ev+0x964>)
 8003550:	9807      	ldr	r0, [sp, #28]
 8003552:	f016 f9eb 	bl	801992c <_ZN8touchgfx7Unicode8snprintfEPttPKcz>
 8003556:	9a07      	ldr	r2, [sp, #28]
 8003558:	f8c4 23e0 	str.w	r2, [r4, #992]	; 0x3e0
    textAreaCal_LP1.resizeToCurrentText();
 800355c:	ee1e 0a90 	vmov	r0, s29
 8003560:	f00f fd66 	bl	8013030 <_ZN8touchgfx8TextArea19resizeToCurrentTextEv>
        : typedTextId(id)
 8003564:	f04f 0c14 	mov.w	ip, #20
 8003568:	4b8a      	ldr	r3, [pc, #552]	; (8003794 <_ZN23Calibration_PadViewBaseC1Ev+0x968>)
 800356a:	f8ad c0b0 	strh.w	ip, [sp, #176]	; 0xb0
    textAreaCal_LP1.setTypedText(touchgfx::TypedText(T_TEXTAREACAL_RH1));
 800356e:	ee1e 0a90 	vmov	r0, s29
 8003572:	4649      	mov	r1, r9
 8003574:	932b      	str	r3, [sp, #172]	; 0xac
 8003576:	f00f fd7b 	bl	8013070 <_ZN8touchgfx8TextArea12setTypedTextERKNS_9TypedTextE>
    swipeContainerPadLeft.add(textAreaCal_LP1);
 800357a:	4650      	mov	r0, sl
 800357c:	ee1e 1a90 	vmov	r1, s29
 8003580:	f00c ff4e 	bl	8010420 <_ZN8touchgfx9Container3addERNS_8DrawableE>
    line1_1_2_1.setPosition(0, 15, 240, 10);
 8003584:	23f0      	movs	r3, #240	; 0xf0
 8003586:	ee1a 0a90 	vmov	r0, s21
 800358a:	220f      	movs	r2, #15
 800358c:	4629      	mov	r1, r5
 800358e:	f8cd 8000 	str.w	r8, [sp]
 8003592:	f7ff f9d6 	bl	8002942 <_ZN8touchgfx8Drawable11setPositionEssss>
        canvasPainter = &painter;
 8003596:	9a1e      	ldr	r2, [sp, #120]	; 0x78
 8003598:	f8c4 240c 	str.w	r2, [r4, #1036]	; 0x40c
 800359c:	f04f 3eff 	mov.w	lr, #4294967295
    line1_1_2_1.setStart(5, 5);
 80035a0:	2205      	movs	r2, #5
 80035a2:	f8c4 e460 	str.w	lr, [r4, #1120]	; 0x460
    }

    virtual void setColor(colortype color)
    {
        AbstractPainterColor::setColor(color);
        color565 = LCD16bpp::getNativeColor(painterColor);
 80035a6:	f8a4 e464 	strh.w	lr, [r4, #1124]	; 0x464
 80035aa:	4611      	mov	r1, r2
 80035ac:	ee1a 0a90 	vmov	r0, s21
 80035b0:	f7ff fc24 	bl	8002dfc <_ZN8touchgfx4Line8setStartIiEEvT_S2_>
    line1_1_2_1.setEnd(235, 5);
 80035b4:	2205      	movs	r2, #5
 80035b6:	ee1a 0a90 	vmov	r0, s21
 80035ba:	21eb      	movs	r1, #235	; 0xeb
 80035bc:	f7ff fc22 	bl	8002e04 <_ZN8touchgfx4Line6setEndIiEEvT_S2_>
    line1_1_2_1.setLineWidth(1);
 80035c0:	ee1a 0a90 	vmov	r0, s21
 80035c4:	4659      	mov	r1, fp
 80035c6:	f7ff fc21 	bl	8002e0c <_ZN8touchgfx4Line12setLineWidthIiEEvT_>
    line1_1_2_1.setLineEndingStyle(touchgfx::Line::ROUND_CAP_ENDING);
 80035ca:	ee1a 0a90 	vmov	r0, s21
 80035ce:	4659      	mov	r1, fp
 80035d0:	f00f f91e 	bl	8012810 <_ZN8touchgfx4Line18setLineEndingStyleENS0_17LINE_ENDING_STYLEE>
    swipeContainerPadLeft.add(line1_1_2_1);
 80035d4:	4650      	mov	r0, sl
 80035d6:	ee1a 1a90 	vmov	r1, s21
 80035da:	f00c ff21 	bl	8010420 <_ZN8touchgfx9Container3addERNS_8DrawableE>
    textArea3_2_1.setXY(96, 0);
 80035de:	9808      	ldr	r0, [sp, #32]
 80035e0:	462a      	mov	r2, r5
 80035e2:	2160      	movs	r1, #96	; 0x60
 80035e4:	f7ff f9a0 	bl	8002928 <_ZN8touchgfx8Drawable5setXYEss>
        color = newColor;
 80035e8:	f04f 32ff 	mov.w	r2, #4294967295
        boundingArea = calculateBoundingArea();
 80035ec:	4630      	mov	r0, r6
 80035ee:	9908      	ldr	r1, [sp, #32]
        color = newColor;
 80035f0:	f8c4 2498 	str.w	r2, [r4, #1176]	; 0x498
        linespace = space;
 80035f4:	f8a4 549c 	strh.w	r5, [r4, #1180]	; 0x49c
        boundingArea = calculateBoundingArea();
 80035f8:	f00f faa0 	bl	8012b3c <_ZNK8touchgfx8TextArea21calculateBoundingAreaEv>
 80035fc:	e896 0007 	ldmia.w	r6, {r0, r1, r2}
 8003600:	f204 43a4 	addw	r3, r4, #1188	; 0x4a4
 8003604:	e883 0007 	stmia.w	r3, {r0, r1, r2}
 8003608:	4b62      	ldr	r3, [pc, #392]	; (8003794 <_ZN23Calibration_PadViewBaseC1Ev+0x968>)
    textArea3_2_1.setTypedText(touchgfx::TypedText(T___SINGLEUSE_Q2TU));
 800360a:	9808      	ldr	r0, [sp, #32]
 800360c:	932b      	str	r3, [sp, #172]	; 0xac
 800360e:	4649      	mov	r1, r9
 8003610:	f04f 0308 	mov.w	r3, #8
 8003614:	f8ad 30b0 	strh.w	r3, [sp, #176]	; 0xb0
 8003618:	f00f fd2a 	bl	8013070 <_ZN8touchgfx8TextArea12setTypedTextERKNS_9TypedTextE>
    swipeContainerPadLeft.add(textArea3_2_1);
 800361c:	4650      	mov	r0, sl
 800361e:	9908      	ldr	r1, [sp, #32]
 8003620:	f00c fefe 	bl	8010420 <_ZN8touchgfx9Container3addERNS_8DrawableE>
    swipeContainer1.add(swipeContainerPadLeft);
 8003624:	4651      	mov	r1, sl
 8003626:	ee18 0a10 	vmov	r0, s16
 800362a:	f00d fbdc 	bl	8010de6 <_ZN8touchgfx14SwipeContainer3addERNS_8DrawableE>
 800362e:	4b5c      	ldr	r3, [pc, #368]	; (80037a0 <_ZN23Calibration_PadViewBaseC1Ev+0x974>)
    buttonWithIcon_RP3.setXY(194, 97);
 8003630:	9815      	ldr	r0, [sp, #84]	; 0x54
 8003632:	f8c4 34b8 	str.w	r3, [r4, #1208]	; 0x4b8
 8003636:	2261      	movs	r2, #97	; 0x61
 8003638:	21c2      	movs	r1, #194	; 0xc2
    buttonWithIcon_RP3.setBitmaps(touchgfx::Bitmap(BITMAP_ALTERNATE_THEME_IMAGES_WIDGETS_BUTTON_ICON_ROUND_MICRO_OUTLINE_NORMAL_ID), touchgfx::Bitmap(BITMAP_ALTERNATE_THEME_IMAGES_WIDGETS_BUTTON_ICON_ROUND_MICRO_OUTLINE_PRESSED_ID), touchgfx::Bitmap(BITMAP_CHECKMARK_ID), touchgfx::Bitmap(BITMAP_CHECKMARK_ID));
 800363a:	f10d 0aa8 	add.w	sl, sp, #168	; 0xa8
    buttonWithIcon_RP3.setXY(194, 97);
 800363e:	f7ff f973 	bl	8002928 <_ZN8touchgfx8Drawable5setXYEss>
    buttonWithIcon_RP3.setBitmaps(touchgfx::Bitmap(BITMAP_ALTERNATE_THEME_IMAGES_WIDGETS_BUTTON_ICON_ROUND_MICRO_OUTLINE_NORMAL_ID), touchgfx::Bitmap(BITMAP_ALTERNATE_THEME_IMAGES_WIDGETS_BUTTON_ICON_ROUND_MICRO_OUTLINE_PRESSED_ID), touchgfx::Bitmap(BITMAP_CHECKMARK_ID), touchgfx::Bitmap(BITMAP_CHECKMARK_ID));
 8003642:	4653      	mov	r3, sl
 8003644:	f10d 0aa4 	add.w	sl, sp, #164	; 0xa4
 8003648:	4652      	mov	r2, sl
 800364a:	f10d 0aa0 	add.w	sl, sp, #160	; 0xa0
 800364e:	4651      	mov	r1, sl
 8003650:	9815      	ldr	r0, [sp, #84]	; 0x54
 8003652:	f8cd 9000 	str.w	r9, [sp]
 8003656:	f8ad 50a0 	strh.w	r5, [sp, #160]	; 0xa0
 800365a:	f8ad b0a4 	strh.w	fp, [sp, #164]	; 0xa4
 800365e:	f8ad 70a8 	strh.w	r7, [sp, #168]	; 0xa8
 8003662:	f8ad 70ac 	strh.w	r7, [sp, #172]	; 0xac
 8003666:	f010 f9f8 	bl	8013a5a <_ZN8touchgfx14ButtonWithIcon10setBitmapsERKNS_6BitmapES3_S3_S3_>
 800366a:	9a02      	ldr	r2, [sp, #8]
    swipeContainerPadRight.add(buttonWithIcon_RP3);
 800366c:	9915      	ldr	r1, [sp, #84]	; 0x54
 800366e:	f8c4 2504 	str.w	r2, [r4, #1284]	; 0x504
 8003672:	ee18 0a90 	vmov	r0, s17
 8003676:	f8c4 5514 	str.w	r5, [r4, #1300]	; 0x514
 800367a:	f00c fed1 	bl	8010420 <_ZN8touchgfx9Container3addERNS_8DrawableE>
    buttonWithIcon_RP2.setBitmaps(touchgfx::Bitmap(BITMAP_ALTERNATE_THEME_IMAGES_WIDGETS_BUTTON_ICON_ROUND_MICRO_OUTLINE_NORMAL_ID), touchgfx::Bitmap(BITMAP_ALTERNATE_THEME_IMAGES_WIDGETS_BUTTON_ICON_ROUND_MICRO_OUTLINE_PRESSED_ID), touchgfx::Bitmap(BITMAP_CHECKMARK_ID), touchgfx::Bitmap(BITMAP_CHECKMARK_ID));
 800367e:	f10d 0aa8 	add.w	sl, sp, #168	; 0xa8
    buttonWithIcon_RP2.setXY(194, 61);
 8003682:	9816      	ldr	r0, [sp, #88]	; 0x58
 8003684:	223d      	movs	r2, #61	; 0x3d
 8003686:	21c2      	movs	r1, #194	; 0xc2
 8003688:	f7ff f94e 	bl	8002928 <_ZN8touchgfx8Drawable5setXYEss>
    buttonWithIcon_RP2.setBitmaps(touchgfx::Bitmap(BITMAP_ALTERNATE_THEME_IMAGES_WIDGETS_BUTTON_ICON_ROUND_MICRO_OUTLINE_NORMAL_ID), touchgfx::Bitmap(BITMAP_ALTERNATE_THEME_IMAGES_WIDGETS_BUTTON_ICON_ROUND_MICRO_OUTLINE_PRESSED_ID), touchgfx::Bitmap(BITMAP_CHECKMARK_ID), touchgfx::Bitmap(BITMAP_CHECKMARK_ID));
 800368c:	4653      	mov	r3, sl
 800368e:	f10d 0aa4 	add.w	sl, sp, #164	; 0xa4
 8003692:	4652      	mov	r2, sl
 8003694:	f10d 0aa0 	add.w	sl, sp, #160	; 0xa0
 8003698:	4651      	mov	r1, sl
 800369a:	9816      	ldr	r0, [sp, #88]	; 0x58
 800369c:	f8cd 9000 	str.w	r9, [sp]
 80036a0:	f8ad 50a0 	strh.w	r5, [sp, #160]	; 0xa0
 80036a4:	f8ad b0a4 	strh.w	fp, [sp, #164]	; 0xa4
 80036a8:	f8ad 70a8 	strh.w	r7, [sp, #168]	; 0xa8
 80036ac:	f8ad 70ac 	strh.w	r7, [sp, #172]	; 0xac
 80036b0:	f010 f9d3 	bl	8013a5a <_ZN8touchgfx14ButtonWithIcon10setBitmapsERKNS_6BitmapES3_S3_S3_>
 80036b4:	9a02      	ldr	r2, [sp, #8]
    swipeContainerPadRight.add(buttonWithIcon_RP2);
 80036b6:	9916      	ldr	r1, [sp, #88]	; 0x58
 80036b8:	f8c4 2540 	str.w	r2, [r4, #1344]	; 0x540
 80036bc:	ee18 0a90 	vmov	r0, s17
 80036c0:	f8c4 5550 	str.w	r5, [r4, #1360]	; 0x550
 80036c4:	f00c feac 	bl	8010420 <_ZN8touchgfx9Container3addERNS_8DrawableE>
    buttonWithIcon_RP1.setBitmaps(touchgfx::Bitmap(BITMAP_ALTERNATE_THEME_IMAGES_WIDGETS_BUTTON_ICON_ROUND_MICRO_OUTLINE_NORMAL_ID), touchgfx::Bitmap(BITMAP_ALTERNATE_THEME_IMAGES_WIDGETS_BUTTON_ICON_ROUND_MICRO_OUTLINE_PRESSED_ID), touchgfx::Bitmap(BITMAP_CHECKMARK_ID), touchgfx::Bitmap(BITMAP_CHECKMARK_ID));
 80036c8:	f10d 0aa8 	add.w	sl, sp, #168	; 0xa8
    buttonWithIcon_RP1.setXY(194, 25);
 80036cc:	9817      	ldr	r0, [sp, #92]	; 0x5c
 80036ce:	2219      	movs	r2, #25
 80036d0:	21c2      	movs	r1, #194	; 0xc2
 80036d2:	f7ff f929 	bl	8002928 <_ZN8touchgfx8Drawable5setXYEss>
    buttonWithIcon_RP1.setBitmaps(touchgfx::Bitmap(BITMAP_ALTERNATE_THEME_IMAGES_WIDGETS_BUTTON_ICON_ROUND_MICRO_OUTLINE_NORMAL_ID), touchgfx::Bitmap(BITMAP_ALTERNATE_THEME_IMAGES_WIDGETS_BUTTON_ICON_ROUND_MICRO_OUTLINE_PRESSED_ID), touchgfx::Bitmap(BITMAP_CHECKMARK_ID), touchgfx::Bitmap(BITMAP_CHECKMARK_ID));
 80036d6:	4653      	mov	r3, sl
 80036d8:	f10d 0aa4 	add.w	sl, sp, #164	; 0xa4
 80036dc:	4652      	mov	r2, sl
 80036de:	f10d 0aa0 	add.w	sl, sp, #160	; 0xa0
 80036e2:	4651      	mov	r1, sl
 80036e4:	9817      	ldr	r0, [sp, #92]	; 0x5c
 80036e6:	f8cd 9000 	str.w	r9, [sp]
 80036ea:	f8ad 50a0 	strh.w	r5, [sp, #160]	; 0xa0
 80036ee:	f8ad b0a4 	strh.w	fp, [sp, #164]	; 0xa4
 80036f2:	f8ad 70a8 	strh.w	r7, [sp, #168]	; 0xa8
 80036f6:	f8ad 70ac 	strh.w	r7, [sp, #172]	; 0xac
 80036fa:	f010 f9ae 	bl	8013a5a <_ZN8touchgfx14ButtonWithIcon10setBitmapsERKNS_6BitmapES3_S3_S3_>
 80036fe:	9a02      	ldr	r2, [sp, #8]
    swipeContainerPadRight.add(buttonWithIcon_RP1);
 8003700:	9917      	ldr	r1, [sp, #92]	; 0x5c
 8003702:	f8c4 257c 	str.w	r2, [r4, #1404]	; 0x57c
 8003706:	ee18 0a90 	vmov	r0, s17
 800370a:	f8c4 558c 	str.w	r5, [r4, #1420]	; 0x58c
 800370e:	f00c fe87 	bl	8010420 <_ZN8touchgfx9Container3addERNS_8DrawableE>
        color = newColor;
 8003712:	f04f 3aff 	mov.w	sl, #4294967295
    textAreaCal_RP3.setXY(10, 104);
 8003716:	2268      	movs	r2, #104	; 0x68
 8003718:	4641      	mov	r1, r8
 800371a:	9809      	ldr	r0, [sp, #36]	; 0x24
 800371c:	f7ff f904 	bl	8002928 <_ZN8touchgfx8Drawable5setXYEss>
 8003720:	f8c4 a5c0 	str.w	sl, [r4, #1472]	; 0x5c0
        linespace = space;
 8003724:	f8a4 55c4 	strh.w	r5, [r4, #1476]	; 0x5c4
        return TextArea::BoundingArea();
 8003728:	4648      	mov	r0, r9
 800372a:	f7ff f985 	bl	8002a38 <_ZN8touchgfx8TextArea12BoundingAreaC1Ev>
        boundingArea = calculateBoundingArea();
 800372e:	e899 0007 	ldmia.w	r9, {r0, r1, r2}
 8003732:	f204 53cc 	addw	r3, r4, #1484	; 0x5cc
 8003736:	e883 0007 	stmia.w	r3, {r0, r1, r2}
        assert(typedTexts != 0 && "TypedText database has not been initialized.");
 800373a:	4917      	ldr	r1, [pc, #92]	; (8003798 <_ZN23Calibration_PadViewBaseC1Ev+0x96c>)
 800373c:	680b      	ldr	r3, [r1, #0]
    Unicode::snprintf(textAreaCal_RP3Buffer, TEXTAREACAL_RP3_SIZE, "%s", touchgfx::TypedText(T___SINGLEUSE_8T3Q).getText());
 800373e:	f504 6669 	add.w	r6, r4, #3728	; 0xe90
 8003742:	2b00      	cmp	r3, #0
 8003744:	f43f ae4f 	beq.w	80033e6 <_ZN23Calibration_PadViewBaseC1Ev+0x5ba>
        assert(hasValidId() && "typedTextId larger than numberOfTypedTexts.");
 8003748:	4f14      	ldr	r7, [pc, #80]	; (800379c <_ZN23Calibration_PadViewBaseC1Ev+0x970>)
 800374a:	883b      	ldrh	r3, [r7, #0]
 800374c:	2b12      	cmp	r3, #18
 800374e:	f67f ae54 	bls.w	80033fa <_ZN23Calibration_PadViewBaseC1Ev+0x5ce>
        return texts->getText(typedTextId);
 8003752:	480e      	ldr	r0, [pc, #56]	; (800378c <_ZN23Calibration_PadViewBaseC1Ev+0x960>)
 8003754:	2112      	movs	r1, #18
 8003756:	6800      	ldr	r0, [r0, #0]
 8003758:	f004 fff6 	bl	8008748 <_ZNK8touchgfx5Texts7getTextEt>
 800375c:	4a0c      	ldr	r2, [pc, #48]	; (8003790 <_ZN23Calibration_PadViewBaseC1Ev+0x964>)
 800375e:	4603      	mov	r3, r0
 8003760:	4641      	mov	r1, r8
 8003762:	4630      	mov	r0, r6
 8003764:	f016 f8e2 	bl	801992c <_ZN8touchgfx7Unicode8snprintfEPttPKcz>
    textAreaCal_RP3.resizeToCurrentText();
 8003768:	9809      	ldr	r0, [sp, #36]	; 0x24
        wc1 = value;
 800376a:	f8c4 65d8 	str.w	r6, [r4, #1496]	; 0x5d8
 800376e:	f00f fc5f 	bl	8013030 <_ZN8touchgfx8TextArea19resizeToCurrentTextEv>
        : typedTextId(id)
 8003772:	4e08      	ldr	r6, [pc, #32]	; (8003794 <_ZN23Calibration_PadViewBaseC1Ev+0x968>)
    textAreaCal_RP3.setTypedText(touchgfx::TypedText(T_TEXTAREACAL_RH3));
 8003774:	9809      	ldr	r0, [sp, #36]	; 0x24
 8003776:	962b      	str	r6, [sp, #172]	; 0xac
 8003778:	2313      	movs	r3, #19
 800377a:	4649      	mov	r1, r9
 800377c:	f8ad 30b0 	strh.w	r3, [sp, #176]	; 0xb0
 8003780:	f00f fc76 	bl	8013070 <_ZN8touchgfx8TextArea12setTypedTextERKNS_9TypedTextE>
    swipeContainerPadRight.add(textAreaCal_RP3);
 8003784:	9909      	ldr	r1, [sp, #36]	; 0x24
 8003786:	ee18 0a90 	vmov	r0, s17
 800378a:	e00b      	b.n	80037a4 <_ZN23Calibration_PadViewBaseC1Ev+0x978>
 800378c:	20013880 	.word	0x20013880
 8003790:	0802ce7d 	.word	0x0802ce7d
 8003794:	0802cef0 	.word	0x0802cef0
 8003798:	20013874 	.word	0x20013874
 800379c:	20013878 	.word	0x20013878
 80037a0:	00ac00f0 	.word	0x00ac00f0
 80037a4:	f00c fe3c 	bl	8010420 <_ZN8touchgfx9Container3addERNS_8DrawableE>
    textAreaCal_RP2.setXY(22, 68);
 80037a8:	2244      	movs	r2, #68	; 0x44
 80037aa:	2116      	movs	r1, #22
 80037ac:	980a      	ldr	r0, [sp, #40]	; 0x28
 80037ae:	f7ff f8bb 	bl	8002928 <_ZN8touchgfx8Drawable5setXYEss>
        linespace = space;
 80037b2:	f8a4 5610 	strh.w	r5, [r4, #1552]	; 0x610
        color = newColor;
 80037b6:	f8c4 a60c 	str.w	sl, [r4, #1548]	; 0x60c
        return TextArea::BoundingArea();
 80037ba:	4648      	mov	r0, r9
 80037bc:	f7ff f93c 	bl	8002a38 <_ZN8touchgfx8TextArea12BoundingAreaC1Ev>
        boundingArea = calculateBoundingArea();
 80037c0:	e899 0007 	ldmia.w	r9, {r0, r1, r2}
 80037c4:	f504 63c3 	add.w	r3, r4, #1560	; 0x618
 80037c8:	e883 0007 	stmia.w	r3, {r0, r1, r2}
        assert(typedTexts != 0 && "TypedText database has not been initialized.");
 80037cc:	49dc      	ldr	r1, [pc, #880]	; (8003b40 <_ZN23Calibration_PadViewBaseC1Ev+0xd14>)
 80037ce:	680b      	ldr	r3, [r1, #0]
    Unicode::snprintf(textAreaCal_RP2Buffer, TEXTAREACAL_RP2_SIZE, "%s", touchgfx::TypedText(T___SINGLEUSE_NZZI).getText());
 80037d0:	f604 65a4 	addw	r5, r4, #3748	; 0xea4
 80037d4:	2b00      	cmp	r3, #0
 80037d6:	f43f ae06 	beq.w	80033e6 <_ZN23Calibration_PadViewBaseC1Ev+0x5ba>
        assert(hasValidId() && "typedTextId larger than numberOfTypedTexts.");
 80037da:	883b      	ldrh	r3, [r7, #0]
 80037dc:	2b10      	cmp	r3, #16
 80037de:	f67f ae0c 	bls.w	80033fa <_ZN23Calibration_PadViewBaseC1Ev+0x5ce>
        return texts->getText(typedTextId);
 80037e2:	48d8      	ldr	r0, [pc, #864]	; (8003b44 <_ZN23Calibration_PadViewBaseC1Ev+0xd18>)
        assert(typedTexts != 0 && "TypedText database has not been initialized.");
 80037e4:	f8df b358 	ldr.w	fp, [pc, #856]	; 8003b40 <_ZN23Calibration_PadViewBaseC1Ev+0xd14>
        return texts->getText(typedTextId);
 80037e8:	6800      	ldr	r0, [r0, #0]
 80037ea:	2110      	movs	r1, #16
 80037ec:	f004 ffac 	bl	8008748 <_ZNK8touchgfx5Texts7getTextEt>
 80037f0:	4ad5      	ldr	r2, [pc, #852]	; (8003b48 <_ZN23Calibration_PadViewBaseC1Ev+0xd1c>)
 80037f2:	4603      	mov	r3, r0
 80037f4:	4641      	mov	r1, r8
 80037f6:	4628      	mov	r0, r5
 80037f8:	f016 f898 	bl	801992c <_ZN8touchgfx7Unicode8snprintfEPttPKcz>
    textAreaCal_RP2.resizeToCurrentText();
 80037fc:	980a      	ldr	r0, [sp, #40]	; 0x28
        wc1 = value;
 80037fe:	f8c4 5624 	str.w	r5, [r4, #1572]	; 0x624
    textAreaCal_RP2.setTypedText(touchgfx::TypedText(T_TEXTAREACAL_RH2));
 8003802:	ad2b      	add	r5, sp, #172	; 0xac
    textAreaCal_RP2.resizeToCurrentText();
 8003804:	f00f fc14 	bl	8013030 <_ZN8touchgfx8TextArea19resizeToCurrentTextEv>
        : typedTextId(id)
 8003808:	f04f 0211 	mov.w	r2, #17
    textAreaCal_RP2.setTypedText(touchgfx::TypedText(T_TEXTAREACAL_RH2));
 800380c:	980a      	ldr	r0, [sp, #40]	; 0x28
 800380e:	f8ad 20b0 	strh.w	r2, [sp, #176]	; 0xb0
 8003812:	4629      	mov	r1, r5
 8003814:	962b      	str	r6, [sp, #172]	; 0xac
 8003816:	f00f fc2b 	bl	8013070 <_ZN8touchgfx8TextArea12setTypedTextERKNS_9TypedTextE>
    swipeContainerPadRight.add(textAreaCal_RP2);
 800381a:	990a      	ldr	r1, [sp, #40]	; 0x28
 800381c:	ee18 0a90 	vmov	r0, s17
 8003820:	f00c fdfe 	bl	8010420 <_ZN8touchgfx9Container3addERNS_8DrawableE>
        linespace = space;
 8003824:	2600      	movs	r6, #0
    textAreaCal_RP1.setXY(22, 32);
 8003826:	2220      	movs	r2, #32
 8003828:	2116      	movs	r1, #22
 800382a:	980b      	ldr	r0, [sp, #44]	; 0x2c
 800382c:	f7ff f87c 	bl	8002928 <_ZN8touchgfx8Drawable5setXYEss>
        color = newColor;
 8003830:	f8c4 a658 	str.w	sl, [r4, #1624]	; 0x658
        linespace = space;
 8003834:	f8a4 665c 	strh.w	r6, [r4, #1628]	; 0x65c
        return TextArea::BoundingArea();
 8003838:	4628      	mov	r0, r5
 800383a:	f7ff f8fd 	bl	8002a38 <_ZN8touchgfx8TextArea12BoundingAreaC1Ev>
        boundingArea = calculateBoundingArea();
 800383e:	e895 0007 	ldmia.w	r5, {r0, r1, r2}
 8003842:	f204 6364 	addw	r3, r4, #1636	; 0x664
 8003846:	e883 0007 	stmia.w	r3, {r0, r1, r2}
        assert(typedTexts != 0 && "TypedText database has not been initialized.");
 800384a:	f8db 3000 	ldr.w	r3, [fp]
    Unicode::snprintf(textAreaCal_RP1Buffer, TEXTAREACAL_RP1_SIZE, "%s", touchgfx::TypedText(T___SINGLEUSE_XVN8).getText());
 800384e:	f604 67b8 	addw	r7, r4, #3768	; 0xeb8
 8003852:	2b00      	cmp	r3, #0
 8003854:	f43f adc7 	beq.w	80033e6 <_ZN23Calibration_PadViewBaseC1Ev+0x5ba>
        assert(hasValidId() && "typedTextId larger than numberOfTypedTexts.");
 8003858:	4bbc      	ldr	r3, [pc, #752]	; (8003b4c <_ZN23Calibration_PadViewBaseC1Ev+0xd20>)
 800385a:	881b      	ldrh	r3, [r3, #0]
 800385c:	2b0f      	cmp	r3, #15
 800385e:	f67f adcc 	bls.w	80033fa <_ZN23Calibration_PadViewBaseC1Ev+0x5ce>
        return texts->getText(typedTextId);
 8003862:	48b8      	ldr	r0, [pc, #736]	; (8003b44 <_ZN23Calibration_PadViewBaseC1Ev+0xd18>)
 8003864:	210f      	movs	r1, #15
 8003866:	6800      	ldr	r0, [r0, #0]
 8003868:	f004 ff6e 	bl	8008748 <_ZNK8touchgfx5Texts7getTextEt>
 800386c:	4ab6      	ldr	r2, [pc, #728]	; (8003b48 <_ZN23Calibration_PadViewBaseC1Ev+0xd1c>)
 800386e:	4603      	mov	r3, r0
 8003870:	4641      	mov	r1, r8
 8003872:	4638      	mov	r0, r7
 8003874:	f016 f85a 	bl	801992c <_ZN8touchgfx7Unicode8snprintfEPttPKcz>
    textAreaCal_RP1.resizeToCurrentText();
 8003878:	980b      	ldr	r0, [sp, #44]	; 0x2c
        wc1 = value;
 800387a:	f8c4 7670 	str.w	r7, [r4, #1648]	; 0x670
 800387e:	f00f fbd7 	bl	8013030 <_ZN8touchgfx8TextArea19resizeToCurrentTextEv>
        : typedTextId(id)
 8003882:	4fb3      	ldr	r7, [pc, #716]	; (8003b50 <_ZN23Calibration_PadViewBaseC1Ev+0xd24>)
    textAreaCal_RP1.setTypedText(touchgfx::TypedText(T_TEXTAREACAL_RH1));
 8003884:	980b      	ldr	r0, [sp, #44]	; 0x2c
 8003886:	972b      	str	r7, [sp, #172]	; 0xac
 8003888:	f04f 0c14 	mov.w	ip, #20
 800388c:	4629      	mov	r1, r5
 800388e:	f8ad c0b0 	strh.w	ip, [sp, #176]	; 0xb0
 8003892:	f00f fbed 	bl	8013070 <_ZN8touchgfx8TextArea12setTypedTextERKNS_9TypedTextE>
    swipeContainerPadRight.add(textAreaCal_RP1);
 8003896:	990b      	ldr	r1, [sp, #44]	; 0x2c
 8003898:	ee18 0a90 	vmov	r0, s17
 800389c:	f00c fdc0 	bl	8010420 <_ZN8touchgfx9Container3addERNS_8DrawableE>
    line1_1_2.setPosition(0, 15, 240, 10);
 80038a0:	23f0      	movs	r3, #240	; 0xf0
 80038a2:	ee1b 0a10 	vmov	r0, s22
 80038a6:	f8cd 8000 	str.w	r8, [sp]
 80038aa:	220f      	movs	r2, #15
 80038ac:	4631      	mov	r1, r6
 80038ae:	f7ff f848 	bl	8002942 <_ZN8touchgfx8Drawable11setPositionEssss>
 80038b2:	9a1f      	ldr	r2, [sp, #124]	; 0x7c
 80038b4:	f8c4 269c 	str.w	r2, [r4, #1692]	; 0x69c
 80038b8:	f04f 3eff 	mov.w	lr, #4294967295
    line1_1_2.setStart(5, 5);
 80038bc:	2205      	movs	r2, #5
 80038be:	f8a4 e6f4 	strh.w	lr, [r4, #1780]	; 0x6f4
 80038c2:	4611      	mov	r1, r2
 80038c4:	ee1b 0a10 	vmov	r0, s22
 80038c8:	f8c4 a6f0 	str.w	sl, [r4, #1776]	; 0x6f0
 80038cc:	f7ff fa96 	bl	8002dfc <_ZN8touchgfx4Line8setStartIiEEvT_S2_>
    line1_1_2.setEnd(235, 5);
 80038d0:	2205      	movs	r2, #5
 80038d2:	ee1b 0a10 	vmov	r0, s22
 80038d6:	21eb      	movs	r1, #235	; 0xeb
 80038d8:	f7ff fa94 	bl	8002e04 <_ZN8touchgfx4Line6setEndIiEEvT_S2_>
    line1_1_2.setLineWidth(1);
 80038dc:	ee1b 0a10 	vmov	r0, s22
 80038e0:	2101      	movs	r1, #1
 80038e2:	f7ff fa93 	bl	8002e0c <_ZN8touchgfx4Line12setLineWidthIiEEvT_>
    line1_1_2.setLineEndingStyle(touchgfx::Line::ROUND_CAP_ENDING);
 80038e6:	ee1b 0a10 	vmov	r0, s22
 80038ea:	2101      	movs	r1, #1
 80038ec:	f00e ff90 	bl	8012810 <_ZN8touchgfx4Line18setLineEndingStyleENS0_17LINE_ENDING_STYLEE>
    swipeContainerPadRight.add(line1_1_2);
 80038f0:	ee1b 1a10 	vmov	r1, s22
 80038f4:	ee18 0a90 	vmov	r0, s17
 80038f8:	f00c fd92 	bl	8010420 <_ZN8touchgfx9Container3addERNS_8DrawableE>
    line1_1_2.setPosition(0, 15, 240, 10);
 80038fc:	46c1      	mov	r9, r8
    textArea3_2.setXY(92, 0);
 80038fe:	4632      	mov	r2, r6
 8003900:	f10d 0890 	add.w	r8, sp, #144	; 0x90
 8003904:	ee1f 0a10 	vmov	r0, s30
 8003908:	215c      	movs	r1, #92	; 0x5c
 800390a:	f7ff f80d 	bl	8002928 <_ZN8touchgfx8Drawable5setXYEss>
 800390e:	4640      	mov	r0, r8
 8003910:	ee1f 1a10 	vmov	r1, s30
        color = newColor;
 8003914:	f8c4 a728 	str.w	sl, [r4, #1832]	; 0x728
        linespace = space;
 8003918:	f8a4 672c 	strh.w	r6, [r4, #1836]	; 0x72c
        boundingArea = calculateBoundingArea();
 800391c:	f00f f90e 	bl	8012b3c <_ZNK8touchgfx8TextArea21calculateBoundingAreaEv>
 8003920:	ee1f 2a10 	vmov	r2, s30
 8003924:	f102 033c 	add.w	r3, r2, #60	; 0x3c
 8003928:	e898 0007 	ldmia.w	r8, {r0, r1, r2}
 800392c:	e883 0007 	stmia.w	r3, {r0, r1, r2}
 8003930:	230e      	movs	r3, #14
    textArea3_2.setTypedText(touchgfx::TypedText(T___SINGLEUSE_L8ZM));
 8003932:	ee1f 0a10 	vmov	r0, s30
 8003936:	4629      	mov	r1, r5
 8003938:	f8ad 30b0 	strh.w	r3, [sp, #176]	; 0xb0
 800393c:	972b      	str	r7, [sp, #172]	; 0xac
 800393e:	f00f fb97 	bl	8013070 <_ZN8touchgfx8TextArea12setTypedTextERKNS_9TypedTextE>
    swipeContainerPadRight.add(textArea3_2);
 8003942:	ee1f 1a10 	vmov	r1, s30
 8003946:	ee18 0a90 	vmov	r0, s17
 800394a:	f00c fd69 	bl	8010420 <_ZN8touchgfx9Container3addERNS_8DrawableE>
    swipeContainer1.add(swipeContainerPadRight);
 800394e:	ee18 1a90 	vmov	r1, s17
 8003952:	ee18 0a10 	vmov	r0, s16
 8003956:	f00d fa46 	bl	8010de6 <_ZN8touchgfx14SwipeContainer3addERNS_8DrawableE>
 800395a:	497e      	ldr	r1, [pc, #504]	; (8003b54 <_ZN23Calibration_PadViewBaseC1Ev+0xd28>)
    buttonWithIcon_LH3.setXY(194, 97);
 800395c:	9818      	ldr	r0, [sp, #96]	; 0x60
 800395e:	f8c4 1748 	str.w	r1, [r4, #1864]	; 0x748
 8003962:	2261      	movs	r2, #97	; 0x61
 8003964:	21c2      	movs	r1, #194	; 0xc2
    buttonWithIcon_LH3.setBitmaps(touchgfx::Bitmap(BITMAP_ALTERNATE_THEME_IMAGES_WIDGETS_BUTTON_ICON_ROUND_MICRO_OUTLINE_NORMAL_ID), touchgfx::Bitmap(BITMAP_ALTERNATE_THEME_IMAGES_WIDGETS_BUTTON_ICON_ROUND_MICRO_OUTLINE_PRESSED_ID), touchgfx::Bitmap(BITMAP_CHECKMARK_ID), touchgfx::Bitmap(BITMAP_CHECKMARK_ID));
 8003966:	f10d 0aa8 	add.w	sl, sp, #168	; 0xa8
    buttonWithIcon_LH3.setXY(194, 97);
 800396a:	f7fe ffdd 	bl	8002928 <_ZN8touchgfx8Drawable5setXYEss>
    buttonWithIcon_LH3.setBitmaps(touchgfx::Bitmap(BITMAP_ALTERNATE_THEME_IMAGES_WIDGETS_BUTTON_ICON_ROUND_MICRO_OUTLINE_NORMAL_ID), touchgfx::Bitmap(BITMAP_ALTERNATE_THEME_IMAGES_WIDGETS_BUTTON_ICON_ROUND_MICRO_OUTLINE_PRESSED_ID), touchgfx::Bitmap(BITMAP_CHECKMARK_ID), touchgfx::Bitmap(BITMAP_CHECKMARK_ID));
 800396e:	4653      	mov	r3, sl
 8003970:	f10d 0aa4 	add.w	sl, sp, #164	; 0xa4
 8003974:	4652      	mov	r2, sl
 8003976:	f10d 0aa0 	add.w	sl, sp, #160	; 0xa0
 800397a:	2709      	movs	r7, #9
 800397c:	f04f 0801 	mov.w	r8, #1
 8003980:	4651      	mov	r1, sl
 8003982:	9818      	ldr	r0, [sp, #96]	; 0x60
 8003984:	9500      	str	r5, [sp, #0]
 8003986:	f8ad 60a0 	strh.w	r6, [sp, #160]	; 0xa0
 800398a:	f8ad 80a4 	strh.w	r8, [sp, #164]	; 0xa4
 800398e:	f8ad 70a8 	strh.w	r7, [sp, #168]	; 0xa8
 8003992:	f8ad 70ac 	strh.w	r7, [sp, #172]	; 0xac
 8003996:	f010 f860 	bl	8013a5a <_ZN8touchgfx14ButtonWithIcon10setBitmapsERKNS_6BitmapES3_S3_S3_>
    swipeContainerHallLeft.add(buttonWithIcon_LH3);
 800399a:	9918      	ldr	r1, [sp, #96]	; 0x60
 800399c:	f8c4 67a4 	str.w	r6, [r4, #1956]	; 0x7a4
 80039a0:	ee19 0a10 	vmov	r0, s18
 80039a4:	f00c fd3c 	bl	8010420 <_ZN8touchgfx9Container3addERNS_8DrawableE>
    buttonWithIcon_LH2.setBitmaps(touchgfx::Bitmap(BITMAP_ALTERNATE_THEME_IMAGES_WIDGETS_BUTTON_ICON_ROUND_MICRO_OUTLINE_NORMAL_ID), touchgfx::Bitmap(BITMAP_ALTERNATE_THEME_IMAGES_WIDGETS_BUTTON_ICON_ROUND_MICRO_OUTLINE_PRESSED_ID), touchgfx::Bitmap(BITMAP_CHECKMARK_ID), touchgfx::Bitmap(BITMAP_CHECKMARK_ID));
 80039a8:	f10d 0aa8 	add.w	sl, sp, #168	; 0xa8
    buttonWithIcon_LH2.setXY(194, 61);
 80039ac:	9819      	ldr	r0, [sp, #100]	; 0x64
 80039ae:	223d      	movs	r2, #61	; 0x3d
 80039b0:	21c2      	movs	r1, #194	; 0xc2
 80039b2:	f7fe ffb9 	bl	8002928 <_ZN8touchgfx8Drawable5setXYEss>
    buttonWithIcon_LH2.setBitmaps(touchgfx::Bitmap(BITMAP_ALTERNATE_THEME_IMAGES_WIDGETS_BUTTON_ICON_ROUND_MICRO_OUTLINE_NORMAL_ID), touchgfx::Bitmap(BITMAP_ALTERNATE_THEME_IMAGES_WIDGETS_BUTTON_ICON_ROUND_MICRO_OUTLINE_PRESSED_ID), touchgfx::Bitmap(BITMAP_CHECKMARK_ID), touchgfx::Bitmap(BITMAP_CHECKMARK_ID));
 80039b6:	4653      	mov	r3, sl
 80039b8:	f10d 0aa4 	add.w	sl, sp, #164	; 0xa4
 80039bc:	4652      	mov	r2, sl
 80039be:	f10d 0aa0 	add.w	sl, sp, #160	; 0xa0
 80039c2:	4651      	mov	r1, sl
 80039c4:	9819      	ldr	r0, [sp, #100]	; 0x64
 80039c6:	9500      	str	r5, [sp, #0]
 80039c8:	f8ad 60a0 	strh.w	r6, [sp, #160]	; 0xa0
 80039cc:	f8ad 80a4 	strh.w	r8, [sp, #164]	; 0xa4
 80039d0:	f8ad 70a8 	strh.w	r7, [sp, #168]	; 0xa8
 80039d4:	f8ad 70ac 	strh.w	r7, [sp, #172]	; 0xac
 80039d8:	f010 f83f 	bl	8013a5a <_ZN8touchgfx14ButtonWithIcon10setBitmapsERKNS_6BitmapES3_S3_S3_>
    swipeContainerHallLeft.add(buttonWithIcon_LH2);
 80039dc:	9919      	ldr	r1, [sp, #100]	; 0x64
 80039de:	f8c4 67e0 	str.w	r6, [r4, #2016]	; 0x7e0
 80039e2:	ee19 0a10 	vmov	r0, s18
 80039e6:	f00c fd1b 	bl	8010420 <_ZN8touchgfx9Container3addERNS_8DrawableE>
    buttonWithIcon_LH1.setBitmaps(touchgfx::Bitmap(BITMAP_ALTERNATE_THEME_IMAGES_WIDGETS_BUTTON_ICON_ROUND_MICRO_OUTLINE_NORMAL_ID), touchgfx::Bitmap(BITMAP_ALTERNATE_THEME_IMAGES_WIDGETS_BUTTON_ICON_ROUND_MICRO_OUTLINE_PRESSED_ID), touchgfx::Bitmap(BITMAP_CHECKMARK_ID), touchgfx::Bitmap(BITMAP_CHECKMARK_ID));
 80039ea:	f10d 0aa8 	add.w	sl, sp, #168	; 0xa8
    buttonWithIcon_LH1.setXY(194, 25);
 80039ee:	981a      	ldr	r0, [sp, #104]	; 0x68
 80039f0:	2219      	movs	r2, #25
 80039f2:	21c2      	movs	r1, #194	; 0xc2
 80039f4:	f7fe ff98 	bl	8002928 <_ZN8touchgfx8Drawable5setXYEss>
    buttonWithIcon_LH1.setBitmaps(touchgfx::Bitmap(BITMAP_ALTERNATE_THEME_IMAGES_WIDGETS_BUTTON_ICON_ROUND_MICRO_OUTLINE_NORMAL_ID), touchgfx::Bitmap(BITMAP_ALTERNATE_THEME_IMAGES_WIDGETS_BUTTON_ICON_ROUND_MICRO_OUTLINE_PRESSED_ID), touchgfx::Bitmap(BITMAP_CHECKMARK_ID), touchgfx::Bitmap(BITMAP_CHECKMARK_ID));
 80039f8:	4653      	mov	r3, sl
 80039fa:	f10d 0aa4 	add.w	sl, sp, #164	; 0xa4
 80039fe:	4652      	mov	r2, sl
 8003a00:	f10d 0aa0 	add.w	sl, sp, #160	; 0xa0
 8003a04:	4651      	mov	r1, sl
 8003a06:	981a      	ldr	r0, [sp, #104]	; 0x68
 8003a08:	9500      	str	r5, [sp, #0]
 8003a0a:	f8ad 60a0 	strh.w	r6, [sp, #160]	; 0xa0
 8003a0e:	f8ad 80a4 	strh.w	r8, [sp, #164]	; 0xa4
 8003a12:	f8ad 70a8 	strh.w	r7, [sp, #168]	; 0xa8
 8003a16:	f8ad 70ac 	strh.w	r7, [sp, #172]	; 0xac
 8003a1a:	f010 f81e 	bl	8013a5a <_ZN8touchgfx14ButtonWithIcon10setBitmapsERKNS_6BitmapES3_S3_S3_>
    swipeContainerHallLeft.add(buttonWithIcon_LH1);
 8003a1e:	991a      	ldr	r1, [sp, #104]	; 0x68
 8003a20:	f8c4 681c 	str.w	r6, [r4, #2076]	; 0x81c
 8003a24:	ee19 0a10 	vmov	r0, s18
 8003a28:	f00c fcfa 	bl	8010420 <_ZN8touchgfx9Container3addERNS_8DrawableE>
        color = newColor;
 8003a2c:	f04f 3aff 	mov.w	sl, #4294967295
    textAreaCal_LH3.setXY(10, 104);
 8003a30:	2268      	movs	r2, #104	; 0x68
 8003a32:	4649      	mov	r1, r9
 8003a34:	980c      	ldr	r0, [sp, #48]	; 0x30
 8003a36:	f7fe ff77 	bl	8002928 <_ZN8touchgfx8Drawable5setXYEss>
 8003a3a:	f8c4 a850 	str.w	sl, [r4, #2128]	; 0x850
        linespace = space;
 8003a3e:	f8a4 6854 	strh.w	r6, [r4, #2132]	; 0x854
        return TextArea::BoundingArea();
 8003a42:	4628      	mov	r0, r5
 8003a44:	f7fe fff8 	bl	8002a38 <_ZN8touchgfx8TextArea12BoundingAreaC1Ev>
        boundingArea = calculateBoundingArea();
 8003a48:	e895 0007 	ldmia.w	r5, {r0, r1, r2}
 8003a4c:	f604 035c 	addw	r3, r4, #2140	; 0x85c
 8003a50:	e883 0007 	stmia.w	r3, {r0, r1, r2}
        assert(typedTexts != 0 && "TypedText database has not been initialized.");
 8003a54:	f8db 3000 	ldr.w	r3, [fp]
    Unicode::snprintf(textAreaCal_LH3Buffer, TEXTAREACAL_LH3_SIZE, "%s", touchgfx::TypedText(T___SINGLEUSE_97K6).getText());
 8003a58:	f604 6acc 	addw	sl, r4, #3788	; 0xecc
 8003a5c:	2b00      	cmp	r3, #0
 8003a5e:	f43f acc2 	beq.w	80033e6 <_ZN23Calibration_PadViewBaseC1Ev+0x5ba>
        assert(hasValidId() && "typedTextId larger than numberOfTypedTexts.");
 8003a62:	4a3a      	ldr	r2, [pc, #232]	; (8003b4c <_ZN23Calibration_PadViewBaseC1Ev+0xd20>)
 8003a64:	8813      	ldrh	r3, [r2, #0]
 8003a66:	2b07      	cmp	r3, #7
 8003a68:	f67f acc7 	bls.w	80033fa <_ZN23Calibration_PadViewBaseC1Ev+0x5ce>
        return texts->getText(typedTextId);
 8003a6c:	4835      	ldr	r0, [pc, #212]	; (8003b44 <_ZN23Calibration_PadViewBaseC1Ev+0xd18>)
 8003a6e:	2107      	movs	r1, #7
 8003a70:	6800      	ldr	r0, [r0, #0]
 8003a72:	f004 fe69 	bl	8008748 <_ZNK8touchgfx5Texts7getTextEt>
 8003a76:	4a34      	ldr	r2, [pc, #208]	; (8003b48 <_ZN23Calibration_PadViewBaseC1Ev+0xd1c>)
 8003a78:	4603      	mov	r3, r0
 8003a7a:	4649      	mov	r1, r9
 8003a7c:	4650      	mov	r0, sl
 8003a7e:	f015 ff55 	bl	801992c <_ZN8touchgfx7Unicode8snprintfEPttPKcz>
    textAreaCal_LH3.resizeToCurrentText();
 8003a82:	980c      	ldr	r0, [sp, #48]	; 0x30
        wc1 = value;
 8003a84:	f8c4 a868 	str.w	sl, [r4, #2152]	; 0x868
 8003a88:	f00f fad2 	bl	8013030 <_ZN8touchgfx8TextArea19resizeToCurrentTextEv>
        : typedTextId(id)
 8003a8c:	4b30      	ldr	r3, [pc, #192]	; (8003b50 <_ZN23Calibration_PadViewBaseC1Ev+0xd24>)
    textAreaCal_LH3.setTypedText(touchgfx::TypedText(T_TEXTAREACAL_RH3));
 8003a8e:	980c      	ldr	r0, [sp, #48]	; 0x30
 8003a90:	932b      	str	r3, [sp, #172]	; 0xac
 8003a92:	4629      	mov	r1, r5
 8003a94:	2313      	movs	r3, #19
 8003a96:	f8ad 30b0 	strh.w	r3, [sp, #176]	; 0xb0
 8003a9a:	f00f fae9 	bl	8013070 <_ZN8touchgfx8TextArea12setTypedTextERKNS_9TypedTextE>
    swipeContainerHallLeft.add(textAreaCal_LH3);
 8003a9e:	990c      	ldr	r1, [sp, #48]	; 0x30
 8003aa0:	ee19 0a10 	vmov	r0, s18
 8003aa4:	f00c fcbc 	bl	8010420 <_ZN8touchgfx9Container3addERNS_8DrawableE>
        color = newColor;
 8003aa8:	f04f 3aff 	mov.w	sl, #4294967295
    textAreaCal_LH2.setXY(22, 68);
 8003aac:	2244      	movs	r2, #68	; 0x44
 8003aae:	2116      	movs	r1, #22
 8003ab0:	980d      	ldr	r0, [sp, #52]	; 0x34
 8003ab2:	f7fe ff39 	bl	8002928 <_ZN8touchgfx8Drawable5setXYEss>
 8003ab6:	f8c4 a89c 	str.w	sl, [r4, #2204]	; 0x89c
        linespace = space;
 8003aba:	f8a4 68a0 	strh.w	r6, [r4, #2208]	; 0x8a0
        return TextArea::BoundingArea();
 8003abe:	4628      	mov	r0, r5
 8003ac0:	f7fe ffba 	bl	8002a38 <_ZN8touchgfx8TextArea12BoundingAreaC1Ev>
        boundingArea = calculateBoundingArea();
 8003ac4:	e895 0007 	ldmia.w	r5, {r0, r1, r2}
 8003ac8:	f604 03a8 	addw	r3, r4, #2216	; 0x8a8
 8003acc:	e883 0007 	stmia.w	r3, {r0, r1, r2}
        assert(typedTexts != 0 && "TypedText database has not been initialized.");
 8003ad0:	f8db 3000 	ldr.w	r3, [fp]
    Unicode::snprintf(textAreaCal_LH2Buffer, TEXTAREACAL_LH2_SIZE, "%s", touchgfx::TypedText(T___SINGLEUSE_NV24).getText());
 8003ad4:	f504 6a6e 	add.w	sl, r4, #3808	; 0xee0
 8003ad8:	2b00      	cmp	r3, #0
 8003ada:	f43f ac84 	beq.w	80033e6 <_ZN23Calibration_PadViewBaseC1Ev+0x5ba>
        assert(hasValidId() && "typedTextId larger than numberOfTypedTexts.");
 8003ade:	4a1b      	ldr	r2, [pc, #108]	; (8003b4c <_ZN23Calibration_PadViewBaseC1Ev+0xd20>)
 8003ae0:	8813      	ldrh	r3, [r2, #0]
 8003ae2:	2b06      	cmp	r3, #6
 8003ae4:	f67f ac89 	bls.w	80033fa <_ZN23Calibration_PadViewBaseC1Ev+0x5ce>
        return texts->getText(typedTextId);
 8003ae8:	4816      	ldr	r0, [pc, #88]	; (8003b44 <_ZN23Calibration_PadViewBaseC1Ev+0xd18>)
 8003aea:	2106      	movs	r1, #6
 8003aec:	6800      	ldr	r0, [r0, #0]
 8003aee:	f004 fe2b 	bl	8008748 <_ZNK8touchgfx5Texts7getTextEt>
 8003af2:	4a15      	ldr	r2, [pc, #84]	; (8003b48 <_ZN23Calibration_PadViewBaseC1Ev+0xd1c>)
 8003af4:	4603      	mov	r3, r0
 8003af6:	4649      	mov	r1, r9
 8003af8:	4650      	mov	r0, sl
 8003afa:	f015 ff17 	bl	801992c <_ZN8touchgfx7Unicode8snprintfEPttPKcz>
    textAreaCal_LH2.resizeToCurrentText();
 8003afe:	980d      	ldr	r0, [sp, #52]	; 0x34
        wc1 = value;
 8003b00:	f8c4 a8b4 	str.w	sl, [r4, #2228]	; 0x8b4
 8003b04:	f00f fa94 	bl	8013030 <_ZN8touchgfx8TextArea19resizeToCurrentTextEv>
        : typedTextId(id)
 8003b08:	4b11      	ldr	r3, [pc, #68]	; (8003b50 <_ZN23Calibration_PadViewBaseC1Ev+0xd24>)
    textAreaCal_LH2.setTypedText(touchgfx::TypedText(T_TEXTAREACAL_RH2));
 8003b0a:	980d      	ldr	r0, [sp, #52]	; 0x34
 8003b0c:	932b      	str	r3, [sp, #172]	; 0xac
 8003b0e:	f04f 0e11 	mov.w	lr, #17
 8003b12:	4629      	mov	r1, r5
 8003b14:	f8ad e0b0 	strh.w	lr, [sp, #176]	; 0xb0
 8003b18:	f00f faaa 	bl	8013070 <_ZN8touchgfx8TextArea12setTypedTextERKNS_9TypedTextE>
    swipeContainerHallLeft.add(textAreaCal_LH2);
 8003b1c:	990d      	ldr	r1, [sp, #52]	; 0x34
 8003b1e:	ee19 0a10 	vmov	r0, s18
 8003b22:	f00c fc7d 	bl	8010420 <_ZN8touchgfx9Container3addERNS_8DrawableE>
    textAreaCal_LH1.setXY(22, 32);
 8003b26:	2220      	movs	r2, #32
 8003b28:	2116      	movs	r1, #22
 8003b2a:	980e      	ldr	r0, [sp, #56]	; 0x38
 8003b2c:	f7fe fefc 	bl	8002928 <_ZN8touchgfx8Drawable5setXYEss>
        color = newColor;
 8003b30:	f04f 3eff 	mov.w	lr, #4294967295
 8003b34:	f8c4 e8e8 	str.w	lr, [r4, #2280]	; 0x8e8
        linespace = space;
 8003b38:	f8a4 68ec 	strh.w	r6, [r4, #2284]	; 0x8ec
 8003b3c:	e00c      	b.n	8003b58 <_ZN23Calibration_PadViewBaseC1Ev+0xd2c>
 8003b3e:	bf00      	nop
 8003b40:	20013874 	.word	0x20013874
 8003b44:	20013880 	.word	0x20013880
 8003b48:	0802ce7d 	.word	0x0802ce7d
 8003b4c:	20013878 	.word	0x20013878
 8003b50:	0802cef0 	.word	0x0802cef0
 8003b54:	00ac00f0 	.word	0x00ac00f0
        return TextArea::BoundingArea();
 8003b58:	4628      	mov	r0, r5
 8003b5a:	f7fe ff6d 	bl	8002a38 <_ZN8touchgfx8TextArea12BoundingAreaC1Ev>
        boundingArea = calculateBoundingArea();
 8003b5e:	e895 0007 	ldmia.w	r5, {r0, r1, r2}
 8003b62:	f604 03f4 	addw	r3, r4, #2292	; 0x8f4
 8003b66:	e883 0007 	stmia.w	r3, {r0, r1, r2}
        assert(typedTexts != 0 && "TypedText database has not been initialized.");
 8003b6a:	f8db 3000 	ldr.w	r3, [fp]
    Unicode::snprintf(textAreaCal_LH1Buffer, TEXTAREACAL_LH1_SIZE, "%s", touchgfx::TypedText(T___SINGLEUSE_P0AV).getText());
 8003b6e:	f604 6af4 	addw	sl, r4, #3828	; 0xef4
 8003b72:	2b00      	cmp	r3, #0
 8003b74:	f43f ac37 	beq.w	80033e6 <_ZN23Calibration_PadViewBaseC1Ev+0x5ba>
        assert(hasValidId() && "typedTextId larger than numberOfTypedTexts.");
 8003b78:	4adc      	ldr	r2, [pc, #880]	; (8003eec <_ZN23Calibration_PadViewBaseC1Ev+0x10c0>)
 8003b7a:	8813      	ldrh	r3, [r2, #0]
 8003b7c:	2b05      	cmp	r3, #5
 8003b7e:	f67f ac3c 	bls.w	80033fa <_ZN23Calibration_PadViewBaseC1Ev+0x5ce>
        return texts->getText(typedTextId);
 8003b82:	48db      	ldr	r0, [pc, #876]	; (8003ef0 <_ZN23Calibration_PadViewBaseC1Ev+0x10c4>)
 8003b84:	2105      	movs	r1, #5
 8003b86:	6800      	ldr	r0, [r0, #0]
 8003b88:	f004 fdde 	bl	8008748 <_ZNK8touchgfx5Texts7getTextEt>
 8003b8c:	4ad9      	ldr	r2, [pc, #868]	; (8003ef4 <_ZN23Calibration_PadViewBaseC1Ev+0x10c8>)
 8003b8e:	4603      	mov	r3, r0
 8003b90:	4649      	mov	r1, r9
 8003b92:	4650      	mov	r0, sl
 8003b94:	f015 feca 	bl	801992c <_ZN8touchgfx7Unicode8snprintfEPttPKcz>
    textAreaCal_LH1.resizeToCurrentText();
 8003b98:	980e      	ldr	r0, [sp, #56]	; 0x38
        wc1 = value;
 8003b9a:	f8c4 a900 	str.w	sl, [r4, #2304]	; 0x900
 8003b9e:	f00f fa47 	bl	8013030 <_ZN8touchgfx8TextArea19resizeToCurrentTextEv>
        : typedTextId(id)
 8003ba2:	f04f 0c14 	mov.w	ip, #20
 8003ba6:	4bd4      	ldr	r3, [pc, #848]	; (8003ef8 <_ZN23Calibration_PadViewBaseC1Ev+0x10cc>)
    textAreaCal_LH1.setTypedText(touchgfx::TypedText(T_TEXTAREACAL_RH1));
 8003ba8:	980e      	ldr	r0, [sp, #56]	; 0x38
 8003baa:	f8ad c0b0 	strh.w	ip, [sp, #176]	; 0xb0
 8003bae:	4629      	mov	r1, r5
 8003bb0:	932b      	str	r3, [sp, #172]	; 0xac
 8003bb2:	f00f fa5d 	bl	8013070 <_ZN8touchgfx8TextArea12setTypedTextERKNS_9TypedTextE>
    swipeContainerHallLeft.add(textAreaCal_LH1);
 8003bb6:	990e      	ldr	r1, [sp, #56]	; 0x38
 8003bb8:	ee19 0a10 	vmov	r0, s18
 8003bbc:	f00c fc30 	bl	8010420 <_ZN8touchgfx9Container3addERNS_8DrawableE>
    line1_1_2_2.setPosition(0, 15, 240, 10);
 8003bc0:	ee1b 0a90 	vmov	r0, s23
 8003bc4:	23f0      	movs	r3, #240	; 0xf0
 8003bc6:	220f      	movs	r2, #15
 8003bc8:	4631      	mov	r1, r6
 8003bca:	f8cd 9000 	str.w	r9, [sp]
 8003bce:	f7fe feb8 	bl	8002942 <_ZN8touchgfx8Drawable11setPositionEssss>
 8003bd2:	f04f 30ff 	mov.w	r0, #4294967295
 8003bd6:	f64f 73ff 	movw	r3, #65535	; 0xffff
    line1_1_2_2.setStart(5, 5);
 8003bda:	2205      	movs	r2, #5
 8003bdc:	f8c4 0980 	str.w	r0, [r4, #2432]	; 0x980
 8003be0:	9820      	ldr	r0, [sp, #128]	; 0x80
 8003be2:	f8a4 3984 	strh.w	r3, [r4, #2436]	; 0x984
 8003be6:	4611      	mov	r1, r2
 8003be8:	f8c4 092c 	str.w	r0, [r4, #2348]	; 0x92c
 8003bec:	ee1b 0a90 	vmov	r0, s23
 8003bf0:	f7ff f904 	bl	8002dfc <_ZN8touchgfx4Line8setStartIiEEvT_S2_>
    line1_1_2_2.setEnd(235, 5);
 8003bf4:	2205      	movs	r2, #5
 8003bf6:	ee1b 0a90 	vmov	r0, s23
 8003bfa:	21eb      	movs	r1, #235	; 0xeb
 8003bfc:	f7ff f902 	bl	8002e04 <_ZN8touchgfx4Line6setEndIiEEvT_S2_>
    line1_1_2_2.setLineWidth(1);
 8003c00:	ee1b 0a90 	vmov	r0, s23
 8003c04:	4641      	mov	r1, r8
 8003c06:	f7ff f901 	bl	8002e0c <_ZN8touchgfx4Line12setLineWidthIiEEvT_>
    line1_1_2_2.setLineEndingStyle(touchgfx::Line::ROUND_CAP_ENDING);
 8003c0a:	ee1b 0a90 	vmov	r0, s23
 8003c0e:	4641      	mov	r1, r8
 8003c10:	f00e fdfe 	bl	8012810 <_ZN8touchgfx4Line18setLineEndingStyleENS0_17LINE_ENDING_STYLEE>
    swipeContainerHallLeft.add(line1_1_2_2);
 8003c14:	ee1b 1a90 	vmov	r1, s23
 8003c18:	ee19 0a10 	vmov	r0, s18
 8003c1c:	f00c fc00 	bl	8010420 <_ZN8touchgfx9Container3addERNS_8DrawableE>
    textArea3_2_2.setXY(73, 0);
 8003c20:	4632      	mov	r2, r6
 8003c22:	ee1f 0a90 	vmov	r0, s31
 8003c26:	2149      	movs	r1, #73	; 0x49
 8003c28:	f7fe fe7e 	bl	8002928 <_ZN8touchgfx8Drawable5setXYEss>
        color = newColor;
 8003c2c:	f04f 30ff 	mov.w	r0, #4294967295
        boundingArea = calculateBoundingArea();
 8003c30:	ee1f 1a90 	vmov	r1, s31
        color = newColor;
 8003c34:	f8c4 09b8 	str.w	r0, [r4, #2488]	; 0x9b8
        linespace = space;
 8003c38:	f8a4 69bc 	strh.w	r6, [r4, #2492]	; 0x9bc
        boundingArea = calculateBoundingArea();
 8003c3c:	a824      	add	r0, sp, #144	; 0x90
 8003c3e:	f00e ff7d 	bl	8012b3c <_ZNK8touchgfx8TextArea21calculateBoundingAreaEv>
 8003c42:	ee1f 0a90 	vmov	r0, s31
 8003c46:	f100 033c 	add.w	r3, r0, #60	; 0x3c
 8003c4a:	a824      	add	r0, sp, #144	; 0x90
 8003c4c:	c807      	ldmia	r0, {r0, r1, r2}
 8003c4e:	e883 0007 	stmia.w	r3, {r0, r1, r2}
 8003c52:	4ba9      	ldr	r3, [pc, #676]	; (8003ef8 <_ZN23Calibration_PadViewBaseC1Ev+0x10cc>)
 8003c54:	932b      	str	r3, [sp, #172]	; 0xac
    textArea3_2_2.setTypedText(touchgfx::TypedText(T___SINGLEUSE_FW37));
 8003c56:	4629      	mov	r1, r5
 8003c58:	2304      	movs	r3, #4
 8003c5a:	ee1f 0a90 	vmov	r0, s31
 8003c5e:	f8ad 30b0 	strh.w	r3, [sp, #176]	; 0xb0
 8003c62:	f00f fa05 	bl	8013070 <_ZN8touchgfx8TextArea12setTypedTextERKNS_9TypedTextE>
    swipeContainerHallLeft.add(textArea3_2_2);
 8003c66:	ee1f 1a90 	vmov	r1, s31
 8003c6a:	ee19 0a10 	vmov	r0, s18
 8003c6e:	f00c fbd7 	bl	8010420 <_ZN8touchgfx9Container3addERNS_8DrawableE>
    swipeContainer1.add(swipeContainerHallLeft);
 8003c72:	ee19 1a10 	vmov	r1, s18
 8003c76:	ee18 0a10 	vmov	r0, s16
 8003c7a:	f00d f8b4 	bl	8010de6 <_ZN8touchgfx14SwipeContainer3addERNS_8DrawableE>
 8003c7e:	499f      	ldr	r1, [pc, #636]	; (8003efc <_ZN23Calibration_PadViewBaseC1Ev+0x10d0>)
    buttonWithIcon_RH3.setXY(194, 97);
 8003c80:	981b      	ldr	r0, [sp, #108]	; 0x6c
 8003c82:	f8c4 19d8 	str.w	r1, [r4, #2520]	; 0x9d8
 8003c86:	2261      	movs	r2, #97	; 0x61
 8003c88:	21c2      	movs	r1, #194	; 0xc2
 8003c8a:	f7fe fe4d 	bl	8002928 <_ZN8touchgfx8Drawable5setXYEss>
    buttonWithIcon_RH3.setBitmaps(touchgfx::Bitmap(BITMAP_ALTERNATE_THEME_IMAGES_WIDGETS_BUTTON_ICON_ROUND_MICRO_OUTLINE_NORMAL_ID), touchgfx::Bitmap(BITMAP_ALTERNATE_THEME_IMAGES_WIDGETS_BUTTON_ICON_ROUND_MICRO_OUTLINE_PRESSED_ID), touchgfx::Bitmap(BITMAP_CHECKMARK_ID), touchgfx::Bitmap(BITMAP_CHECKMARK_ID));
 8003c8e:	a929      	add	r1, sp, #164	; 0xa4
 8003c90:	ab2a      	add	r3, sp, #168	; 0xa8
 8003c92:	460a      	mov	r2, r1
 8003c94:	981b      	ldr	r0, [sp, #108]	; 0x6c
 8003c96:	9500      	str	r5, [sp, #0]
 8003c98:	a928      	add	r1, sp, #160	; 0xa0
 8003c9a:	f8ad 60a0 	strh.w	r6, [sp, #160]	; 0xa0
 8003c9e:	f8ad 80a4 	strh.w	r8, [sp, #164]	; 0xa4
 8003ca2:	f8ad 70a8 	strh.w	r7, [sp, #168]	; 0xa8
 8003ca6:	f8ad 70ac 	strh.w	r7, [sp, #172]	; 0xac
 8003caa:	f00f fed6 	bl	8013a5a <_ZN8touchgfx14ButtonWithIcon10setBitmapsERKNS_6BitmapES3_S3_S3_>
    swipeContainerHallRight.add(buttonWithIcon_RH3);
 8003cae:	991b      	ldr	r1, [sp, #108]	; 0x6c
 8003cb0:	f8c4 6a34 	str.w	r6, [r4, #2612]	; 0xa34
 8003cb4:	ee19 0a90 	vmov	r0, s19
 8003cb8:	f00c fbb2 	bl	8010420 <_ZN8touchgfx9Container3addERNS_8DrawableE>
    buttonWithIcon_RH2.setXY(194, 61);
 8003cbc:	981c      	ldr	r0, [sp, #112]	; 0x70
 8003cbe:	223d      	movs	r2, #61	; 0x3d
 8003cc0:	21c2      	movs	r1, #194	; 0xc2
 8003cc2:	f7fe fe31 	bl	8002928 <_ZN8touchgfx8Drawable5setXYEss>
    buttonWithIcon_RH2.setBitmaps(touchgfx::Bitmap(BITMAP_ALTERNATE_THEME_IMAGES_WIDGETS_BUTTON_ICON_ROUND_MICRO_OUTLINE_NORMAL_ID), touchgfx::Bitmap(BITMAP_ALTERNATE_THEME_IMAGES_WIDGETS_BUTTON_ICON_ROUND_MICRO_OUTLINE_PRESSED_ID), touchgfx::Bitmap(BITMAP_CHECKMARK_ID), touchgfx::Bitmap(BITMAP_CHECKMARK_ID));
 8003cc6:	a929      	add	r1, sp, #164	; 0xa4
 8003cc8:	ab2a      	add	r3, sp, #168	; 0xa8
 8003cca:	460a      	mov	r2, r1
 8003ccc:	981c      	ldr	r0, [sp, #112]	; 0x70
 8003cce:	9500      	str	r5, [sp, #0]
 8003cd0:	a928      	add	r1, sp, #160	; 0xa0
 8003cd2:	f8ad 60a0 	strh.w	r6, [sp, #160]	; 0xa0
 8003cd6:	f8ad 80a4 	strh.w	r8, [sp, #164]	; 0xa4
 8003cda:	f8ad 70a8 	strh.w	r7, [sp, #168]	; 0xa8
 8003cde:	f8ad 70ac 	strh.w	r7, [sp, #172]	; 0xac
 8003ce2:	f00f feba 	bl	8013a5a <_ZN8touchgfx14ButtonWithIcon10setBitmapsERKNS_6BitmapES3_S3_S3_>
    swipeContainerHallRight.add(buttonWithIcon_RH2);
 8003ce6:	991c      	ldr	r1, [sp, #112]	; 0x70
 8003ce8:	f8c4 6a70 	str.w	r6, [r4, #2672]	; 0xa70
 8003cec:	ee19 0a90 	vmov	r0, s19
 8003cf0:	f00c fb96 	bl	8010420 <_ZN8touchgfx9Container3addERNS_8DrawableE>
    buttonWithIcon_RH1.setXY(194, 25);
 8003cf4:	981d      	ldr	r0, [sp, #116]	; 0x74
 8003cf6:	2219      	movs	r2, #25
 8003cf8:	21c2      	movs	r1, #194	; 0xc2
 8003cfa:	f7fe fe15 	bl	8002928 <_ZN8touchgfx8Drawable5setXYEss>
    buttonWithIcon_RH1.setBitmaps(touchgfx::Bitmap(BITMAP_ALTERNATE_THEME_IMAGES_WIDGETS_BUTTON_ICON_ROUND_MICRO_OUTLINE_NORMAL_ID), touchgfx::Bitmap(BITMAP_ALTERNATE_THEME_IMAGES_WIDGETS_BUTTON_ICON_ROUND_MICRO_OUTLINE_PRESSED_ID), touchgfx::Bitmap(BITMAP_CHECKMARK_ID), touchgfx::Bitmap(BITMAP_CHECKMARK_ID));
 8003cfe:	a929      	add	r1, sp, #164	; 0xa4
 8003d00:	ab2a      	add	r3, sp, #168	; 0xa8
 8003d02:	460a      	mov	r2, r1
 8003d04:	981d      	ldr	r0, [sp, #116]	; 0x74
 8003d06:	9500      	str	r5, [sp, #0]
 8003d08:	a928      	add	r1, sp, #160	; 0xa0
 8003d0a:	f8ad 60a0 	strh.w	r6, [sp, #160]	; 0xa0
 8003d0e:	f8ad 80a4 	strh.w	r8, [sp, #164]	; 0xa4
 8003d12:	f8ad 70a8 	strh.w	r7, [sp, #168]	; 0xa8
 8003d16:	f8ad 70ac 	strh.w	r7, [sp, #172]	; 0xac
 8003d1a:	f00f fe9e 	bl	8013a5a <_ZN8touchgfx14ButtonWithIcon10setBitmapsERKNS_6BitmapES3_S3_S3_>
    swipeContainerHallRight.add(buttonWithIcon_RH1);
 8003d1e:	991d      	ldr	r1, [sp, #116]	; 0x74
 8003d20:	f8c4 6aac 	str.w	r6, [r4, #2732]	; 0xaac
 8003d24:	ee19 0a90 	vmov	r0, s19
 8003d28:	f00c fb7a 	bl	8010420 <_ZN8touchgfx9Container3addERNS_8DrawableE>
    textAreaCal_RH3.setXY(10, 104);
 8003d2c:	2268      	movs	r2, #104	; 0x68
 8003d2e:	4649      	mov	r1, r9
 8003d30:	980f      	ldr	r0, [sp, #60]	; 0x3c
 8003d32:	f7fe fdf9 	bl	8002928 <_ZN8touchgfx8Drawable5setXYEss>
        color = newColor;
 8003d36:	f04f 33ff 	mov.w	r3, #4294967295
 8003d3a:	f8c4 3ae0 	str.w	r3, [r4, #2784]	; 0xae0
        return TextArea::BoundingArea();
 8003d3e:	4628      	mov	r0, r5
        linespace = space;
 8003d40:	f8a4 6ae4 	strh.w	r6, [r4, #2788]	; 0xae4
 8003d44:	f7fe fe78 	bl	8002a38 <_ZN8touchgfx8TextArea12BoundingAreaC1Ev>
        boundingArea = calculateBoundingArea();
 8003d48:	e895 0007 	ldmia.w	r5, {r0, r1, r2}
 8003d4c:	f604 23ec 	addw	r3, r4, #2796	; 0xaec
 8003d50:	e883 0007 	stmia.w	r3, {r0, r1, r2}
        assert(typedTexts != 0 && "TypedText database has not been initialized.");
 8003d54:	f8db 3000 	ldr.w	r3, [fp]
    Unicode::snprintf(textAreaCal_RH3Buffer, TEXTAREACAL_RH3_SIZE, "%s", touchgfx::TypedText(T___SINGLEUSE_XWKA).getText());
 8003d58:	f604 7508 	addw	r5, r4, #3848	; 0xf08
 8003d5c:	2b00      	cmp	r3, #0
 8003d5e:	f43f ab42 	beq.w	80033e6 <_ZN23Calibration_PadViewBaseC1Ev+0x5ba>
        assert(hasValidId() && "typedTextId larger than numberOfTypedTexts.");
 8003d62:	4a62      	ldr	r2, [pc, #392]	; (8003eec <_ZN23Calibration_PadViewBaseC1Ev+0x10c0>)
 8003d64:	8813      	ldrh	r3, [r2, #0]
 8003d66:	2b03      	cmp	r3, #3
 8003d68:	f67f ab47 	bls.w	80033fa <_ZN23Calibration_PadViewBaseC1Ev+0x5ce>
        return texts->getText(typedTextId);
 8003d6c:	f8df 8180 	ldr.w	r8, [pc, #384]	; 8003ef0 <_ZN23Calibration_PadViewBaseC1Ev+0x10c4>
        : typedTextId(id)
 8003d70:	f8df a184 	ldr.w	sl, [pc, #388]	; 8003ef8 <_ZN23Calibration_PadViewBaseC1Ev+0x10cc>
        return texts->getText(typedTextId);
 8003d74:	f8d8 0000 	ldr.w	r0, [r8]
 8003d78:	2103      	movs	r1, #3
 8003d7a:	f004 fce5 	bl	8008748 <_ZNK8touchgfx5Texts7getTextEt>
 8003d7e:	4a5d      	ldr	r2, [pc, #372]	; (8003ef4 <_ZN23Calibration_PadViewBaseC1Ev+0x10c8>)
 8003d80:	4603      	mov	r3, r0
 8003d82:	4649      	mov	r1, r9
 8003d84:	4628      	mov	r0, r5
 8003d86:	f015 fdd1 	bl	801992c <_ZN8touchgfx7Unicode8snprintfEPttPKcz>
    textAreaCal_RH3.resizeToCurrentText();
 8003d8a:	980f      	ldr	r0, [sp, #60]	; 0x3c
        wc1 = value;
 8003d8c:	f8c4 5af8 	str.w	r5, [r4, #2808]	; 0xaf8
    textAreaCal_RH3.setTypedText(touchgfx::TypedText(T_TEXTAREACAL_RH3));
 8003d90:	ad2b      	add	r5, sp, #172	; 0xac
    textAreaCal_RH3.resizeToCurrentText();
 8003d92:	f00f f94d 	bl	8013030 <_ZN8touchgfx8TextArea19resizeToCurrentTextEv>
        : typedTextId(id)
 8003d96:	2313      	movs	r3, #19
    textAreaCal_RH3.setTypedText(touchgfx::TypedText(T_TEXTAREACAL_RH3));
 8003d98:	980f      	ldr	r0, [sp, #60]	; 0x3c
 8003d9a:	f8ad 30b0 	strh.w	r3, [sp, #176]	; 0xb0
 8003d9e:	4629      	mov	r1, r5
 8003da0:	f8cd a0ac 	str.w	sl, [sp, #172]	; 0xac
 8003da4:	f00f f964 	bl	8013070 <_ZN8touchgfx8TextArea12setTypedTextERKNS_9TypedTextE>
    swipeContainerHallRight.add(textAreaCal_RH3);
 8003da8:	990f      	ldr	r1, [sp, #60]	; 0x3c
 8003daa:	ee19 0a90 	vmov	r0, s19
 8003dae:	f00c fb37 	bl	8010420 <_ZN8touchgfx9Container3addERNS_8DrawableE>
        color = newColor;
 8003db2:	f04f 37ff 	mov.w	r7, #4294967295
    textAreaCal_RH2.setXY(22, 68);
 8003db6:	2244      	movs	r2, #68	; 0x44
 8003db8:	2116      	movs	r1, #22
 8003dba:	9810      	ldr	r0, [sp, #64]	; 0x40
 8003dbc:	f7fe fdb4 	bl	8002928 <_ZN8touchgfx8Drawable5setXYEss>
 8003dc0:	f8c4 7b2c 	str.w	r7, [r4, #2860]	; 0xb2c
        linespace = space;
 8003dc4:	f8a4 6b30 	strh.w	r6, [r4, #2864]	; 0xb30
        return TextArea::BoundingArea();
 8003dc8:	4628      	mov	r0, r5
 8003dca:	f7fe fe35 	bl	8002a38 <_ZN8touchgfx8TextArea12BoundingAreaC1Ev>
        boundingArea = calculateBoundingArea();
 8003dce:	e895 0007 	ldmia.w	r5, {r0, r1, r2}
 8003dd2:	f604 3338 	addw	r3, r4, #2872	; 0xb38
 8003dd6:	e883 0007 	stmia.w	r3, {r0, r1, r2}
        assert(typedTexts != 0 && "TypedText database has not been initialized.");
 8003dda:	f8db 3000 	ldr.w	r3, [fp]
    Unicode::snprintf(textAreaCal_RH2Buffer, TEXTAREACAL_RH2_SIZE, "%s", touchgfx::TypedText(T___SINGLEUSE_9IK4).getText());
 8003dde:	f604 791c 	addw	r9, r4, #3868	; 0xf1c
 8003de2:	2b00      	cmp	r3, #0
 8003de4:	f43f aaff 	beq.w	80033e6 <_ZN23Calibration_PadViewBaseC1Ev+0x5ba>
        assert(hasValidId() && "typedTextId larger than numberOfTypedTexts.");
 8003de8:	4a40      	ldr	r2, [pc, #256]	; (8003eec <_ZN23Calibration_PadViewBaseC1Ev+0x10c0>)
 8003dea:	8813      	ldrh	r3, [r2, #0]
 8003dec:	2b02      	cmp	r3, #2
 8003dee:	f67f ab04 	bls.w	80033fa <_ZN23Calibration_PadViewBaseC1Ev+0x5ce>
        return texts->getText(typedTextId);
 8003df2:	2102      	movs	r1, #2
 8003df4:	f8d8 0000 	ldr.w	r0, [r8]
 8003df8:	f004 fca6 	bl	8008748 <_ZNK8touchgfx5Texts7getTextEt>
 8003dfc:	4a3d      	ldr	r2, [pc, #244]	; (8003ef4 <_ZN23Calibration_PadViewBaseC1Ev+0x10c8>)
 8003dfe:	4603      	mov	r3, r0
 8003e00:	210a      	movs	r1, #10
 8003e02:	4648      	mov	r0, r9
 8003e04:	f015 fd92 	bl	801992c <_ZN8touchgfx7Unicode8snprintfEPttPKcz>
    textAreaCal_RH2.resizeToCurrentText();
 8003e08:	9810      	ldr	r0, [sp, #64]	; 0x40
        wc1 = value;
 8003e0a:	f8c4 9b44 	str.w	r9, [r4, #2884]	; 0xb44
 8003e0e:	f00f f90f 	bl	8013030 <_ZN8touchgfx8TextArea19resizeToCurrentTextEv>
        : typedTextId(id)
 8003e12:	2311      	movs	r3, #17
    textAreaCal_RH2.setTypedText(touchgfx::TypedText(T_TEXTAREACAL_RH2));
 8003e14:	9810      	ldr	r0, [sp, #64]	; 0x40
 8003e16:	f8ad 30b0 	strh.w	r3, [sp, #176]	; 0xb0
 8003e1a:	4629      	mov	r1, r5
 8003e1c:	f8cd a0ac 	str.w	sl, [sp, #172]	; 0xac
 8003e20:	f00f f926 	bl	8013070 <_ZN8touchgfx8TextArea12setTypedTextERKNS_9TypedTextE>
    swipeContainerHallRight.add(textAreaCal_RH2);
 8003e24:	9910      	ldr	r1, [sp, #64]	; 0x40
 8003e26:	ee19 0a90 	vmov	r0, s19
 8003e2a:	f00c faf9 	bl	8010420 <_ZN8touchgfx9Container3addERNS_8DrawableE>
    textAreaCal_RH1.setXY(22, 32);
 8003e2e:	2220      	movs	r2, #32
 8003e30:	2116      	movs	r1, #22
 8003e32:	9811      	ldr	r0, [sp, #68]	; 0x44
 8003e34:	f7fe fd78 	bl	8002928 <_ZN8touchgfx8Drawable5setXYEss>
        color = newColor;
 8003e38:	f8c4 7b78 	str.w	r7, [r4, #2936]	; 0xb78
        linespace = space;
 8003e3c:	f8a4 6b7c 	strh.w	r6, [r4, #2940]	; 0xb7c
        return TextArea::BoundingArea();
 8003e40:	4628      	mov	r0, r5
 8003e42:	f7fe fdf9 	bl	8002a38 <_ZN8touchgfx8TextArea12BoundingAreaC1Ev>
        boundingArea = calculateBoundingArea();
 8003e46:	e895 0007 	ldmia.w	r5, {r0, r1, r2}
 8003e4a:	f604 3384 	addw	r3, r4, #2948	; 0xb84
 8003e4e:	e883 0007 	stmia.w	r3, {r0, r1, r2}
        assert(typedTexts != 0 && "TypedText database has not been initialized.");
 8003e52:	f8db 3000 	ldr.w	r3, [fp]
    Unicode::snprintf(textAreaCal_RH1Buffer, TEXTAREACAL_RH1_SIZE, "%s", touchgfx::TypedText(T___SINGLEUSE_CX8L).getText());
 8003e56:	f504 6973 	add.w	r9, r4, #3888	; 0xf30
 8003e5a:	2b00      	cmp	r3, #0
 8003e5c:	f43f aac3 	beq.w	80033e6 <_ZN23Calibration_PadViewBaseC1Ev+0x5ba>
        assert(hasValidId() && "typedTextId larger than numberOfTypedTexts.");
 8003e60:	4a22      	ldr	r2, [pc, #136]	; (8003eec <_ZN23Calibration_PadViewBaseC1Ev+0x10c0>)
 8003e62:	8813      	ldrh	r3, [r2, #0]
 8003e64:	2b01      	cmp	r3, #1
 8003e66:	f67f aac8 	bls.w	80033fa <_ZN23Calibration_PadViewBaseC1Ev+0x5ce>
        return texts->getText(typedTextId);
 8003e6a:	f8d8 0000 	ldr.w	r0, [r8]
 8003e6e:	2101      	movs	r1, #1
 8003e70:	f004 fc6a 	bl	8008748 <_ZNK8touchgfx5Texts7getTextEt>
 8003e74:	4a1f      	ldr	r2, [pc, #124]	; (8003ef4 <_ZN23Calibration_PadViewBaseC1Ev+0x10c8>)
 8003e76:	4603      	mov	r3, r0
 8003e78:	210a      	movs	r1, #10
 8003e7a:	4648      	mov	r0, r9
 8003e7c:	f015 fd56 	bl	801992c <_ZN8touchgfx7Unicode8snprintfEPttPKcz>
    textAreaCal_RH1.resizeToCurrentText();
 8003e80:	9811      	ldr	r0, [sp, #68]	; 0x44
        wc1 = value;
 8003e82:	f8c4 9b90 	str.w	r9, [r4, #2960]	; 0xb90
 8003e86:	f00f f8d3 	bl	8013030 <_ZN8touchgfx8TextArea19resizeToCurrentTextEv>
        : typedTextId(id)
 8003e8a:	2314      	movs	r3, #20
    textAreaCal_RH1.setTypedText(touchgfx::TypedText(T_TEXTAREACAL_RH1));
 8003e8c:	9811      	ldr	r0, [sp, #68]	; 0x44
 8003e8e:	f8ad 30b0 	strh.w	r3, [sp, #176]	; 0xb0
 8003e92:	4629      	mov	r1, r5
    line1_1_2_3.setPosition(0, 15, 240, 10);
 8003e94:	f04f 090a 	mov.w	r9, #10
 8003e98:	f8cd a0ac 	str.w	sl, [sp, #172]	; 0xac
    textAreaCal_RH1.setTypedText(touchgfx::TypedText(T_TEXTAREACAL_RH1));
 8003e9c:	f00f f8e8 	bl	8013070 <_ZN8touchgfx8TextArea12setTypedTextERKNS_9TypedTextE>
    swipeContainerHallRight.add(textAreaCal_RH1);
 8003ea0:	9911      	ldr	r1, [sp, #68]	; 0x44
 8003ea2:	ee19 0a90 	vmov	r0, s19
 8003ea6:	f00c fabb 	bl	8010420 <_ZN8touchgfx9Container3addERNS_8DrawableE>
    line1_1_2_3.setPosition(0, 15, 240, 10);
 8003eaa:	ee1c 0a10 	vmov	r0, s24
 8003eae:	4631      	mov	r1, r6
 8003eb0:	f8cd 9000 	str.w	r9, [sp]
 8003eb4:	23f0      	movs	r3, #240	; 0xf0
 8003eb6:	220f      	movs	r2, #15
 8003eb8:	f7fe fd43 	bl	8002942 <_ZN8touchgfx8Drawable11setPositionEssss>
 8003ebc:	9b21      	ldr	r3, [sp, #132]	; 0x84
 8003ebe:	f8c4 3bbc 	str.w	r3, [r4, #3004]	; 0xbbc
    line1_1_2_3.setStart(5, 5);
 8003ec2:	2205      	movs	r2, #5
 8003ec4:	ee1c 0a10 	vmov	r0, s24
 8003ec8:	4611      	mov	r1, r2
 8003eca:	f8c4 7c10 	str.w	r7, [r4, #3088]	; 0xc10
 8003ece:	f8a4 7c14 	strh.w	r7, [r4, #3092]	; 0xc14
 8003ed2:	f7fe ff93 	bl	8002dfc <_ZN8touchgfx4Line8setStartIiEEvT_S2_>
    line1_1_2_3.setEnd(235, 5);
 8003ed6:	2205      	movs	r2, #5
 8003ed8:	ee1c 0a10 	vmov	r0, s24
 8003edc:	21eb      	movs	r1, #235	; 0xeb
 8003ede:	f7fe ff91 	bl	8002e04 <_ZN8touchgfx4Line6setEndIiEEvT_S2_>
    line1_1_2_3.setLineWidth(1);
 8003ee2:	ee1c 0a10 	vmov	r0, s24
 8003ee6:	2101      	movs	r1, #1
 8003ee8:	e00a      	b.n	8003f00 <_ZN23Calibration_PadViewBaseC1Ev+0x10d4>
 8003eea:	bf00      	nop
 8003eec:	20013878 	.word	0x20013878
 8003ef0:	20013880 	.word	0x20013880
 8003ef4:	0802ce7d 	.word	0x0802ce7d
 8003ef8:	0802cef0 	.word	0x0802cef0
 8003efc:	00ac00f0 	.word	0x00ac00f0
 8003f00:	f7fe ff84 	bl	8002e0c <_ZN8touchgfx4Line12setLineWidthIiEEvT_>
    line1_1_2_3.setLineEndingStyle(touchgfx::Line::ROUND_CAP_ENDING);
 8003f04:	ee1c 0a10 	vmov	r0, s24
 8003f08:	2101      	movs	r1, #1
 8003f0a:	f00e fc81 	bl	8012810 <_ZN8touchgfx4Line18setLineEndingStyleENS0_17LINE_ENDING_STYLEE>
    swipeContainerHallRight.add(line1_1_2_3);
 8003f0e:	ee1c 1a10 	vmov	r1, s24
 8003f12:	ee19 0a90 	vmov	r0, s19
 8003f16:	f10d 0890 	add.w	r8, sp, #144	; 0x90
 8003f1a:	f00c fa81 	bl	8010420 <_ZN8touchgfx9Container3addERNS_8DrawableE>
    textArea3_2_3.setXY(69, 0);
 8003f1e:	4632      	mov	r2, r6
 8003f20:	9803      	ldr	r0, [sp, #12]
 8003f22:	2145      	movs	r1, #69	; 0x45
 8003f24:	f7fe fd00 	bl	8002928 <_ZN8touchgfx8Drawable5setXYEss>
 8003f28:	9903      	ldr	r1, [sp, #12]
        color = newColor;
 8003f2a:	f8c4 7c48 	str.w	r7, [r4, #3144]	; 0xc48
        boundingArea = calculateBoundingArea();
 8003f2e:	4640      	mov	r0, r8
        linespace = space;
 8003f30:	f8a4 6c4c 	strh.w	r6, [r4, #3148]	; 0xc4c
        boundingArea = calculateBoundingArea();
 8003f34:	f00e fe02 	bl	8012b3c <_ZNK8touchgfx8TextArea21calculateBoundingAreaEv>
 8003f38:	e898 0007 	ldmia.w	r8, {r0, r1, r2}
 8003f3c:	9b03      	ldr	r3, [sp, #12]
 8003f3e:	f8cd a0ac 	str.w	sl, [sp, #172]	; 0xac
 8003f42:	333c      	adds	r3, #60	; 0x3c
 8003f44:	e883 0007 	stmia.w	r3, {r0, r1, r2}
    textArea3_2_3.setTypedText(touchgfx::TypedText(T___SINGLEUSE_846K));
 8003f48:	9803      	ldr	r0, [sp, #12]
 8003f4a:	f8ad 60b0 	strh.w	r6, [sp, #176]	; 0xb0
 8003f4e:	4629      	mov	r1, r5
 8003f50:	f00f f88e 	bl	8013070 <_ZN8touchgfx8TextArea12setTypedTextERKNS_9TypedTextE>
    swipeContainerHallRight.add(textArea3_2_3);
 8003f54:	9903      	ldr	r1, [sp, #12]
 8003f56:	ee19 0a90 	vmov	r0, s19
 8003f5a:	f00c fa61 	bl	8010420 <_ZN8touchgfx9Container3addERNS_8DrawableE>
    swipeContainer1.add(swipeContainerHallRight);
 8003f5e:	ee19 1a90 	vmov	r1, s19
 8003f62:	ee18 0a10 	vmov	r0, s16
 8003f66:	f00c ff3e 	bl	8010de6 <_ZN8touchgfx14SwipeContainer3addERNS_8DrawableE>
    swipeContainer1.setSelectedPage(1);
 8003f6a:	ee18 0a10 	vmov	r0, s16
 8003f6e:	2101      	movs	r1, #1
 8003f70:	f00c ff2a 	bl	8010dc8 <_ZN8touchgfx14SwipeContainer15setSelectedPageEh>
 8003f74:	ee18 1a10 	vmov	r1, s16
 8003f78:	ee1a 0a10 	vmov	r0, s20
 8003f7c:	f00c fa50 	bl	8010420 <_ZN8touchgfx9Container3addERNS_8DrawableE>
    line1_1.setPosition(0, 75, 240, 10);
 8003f80:	ee1c 0a90 	vmov	r0, s25
 8003f84:	4631      	mov	r1, r6
 8003f86:	f8cd 9000 	str.w	r9, [sp]
 8003f8a:	23f0      	movs	r3, #240	; 0xf0
 8003f8c:	224b      	movs	r2, #75	; 0x4b
 8003f8e:	f7fe fcd8 	bl	8002942 <_ZN8touchgfx8Drawable11setPositionEssss>
 8003f92:	f64f 73ff 	movw	r3, #65535	; 0xffff
 8003f96:	f8a4 3ce0 	strh.w	r3, [r4, #3296]	; 0xce0
    line1_1.setStart(5, 5);
 8003f9a:	2205      	movs	r2, #5
 8003f9c:	9b22      	ldr	r3, [sp, #136]	; 0x88
 8003f9e:	f8c4 3c88 	str.w	r3, [r4, #3208]	; 0xc88
 8003fa2:	ee1c 0a90 	vmov	r0, s25
 8003fa6:	4611      	mov	r1, r2
 8003fa8:	f8c4 7cdc 	str.w	r7, [r4, #3292]	; 0xcdc
 8003fac:	f7fe ff26 	bl	8002dfc <_ZN8touchgfx4Line8setStartIiEEvT_S2_>
    line1_1.setEnd(235, 5);
 8003fb0:	2205      	movs	r2, #5
 8003fb2:	ee1c 0a90 	vmov	r0, s25
 8003fb6:	21eb      	movs	r1, #235	; 0xeb
 8003fb8:	f7fe ff24 	bl	8002e04 <_ZN8touchgfx4Line6setEndIiEEvT_S2_>
    line1_1.setLineWidth(1);
 8003fbc:	ee1c 0a90 	vmov	r0, s25
 8003fc0:	2101      	movs	r1, #1
 8003fc2:	f7fe ff23 	bl	8002e0c <_ZN8touchgfx4Line12setLineWidthIiEEvT_>
    line1_1.setLineEndingStyle(touchgfx::Line::ROUND_CAP_ENDING);
 8003fc6:	ee1c 0a90 	vmov	r0, s25
 8003fca:	2101      	movs	r1, #1
 8003fcc:	f00e fc20 	bl	8012810 <_ZN8touchgfx4Line18setLineEndingStyleENS0_17LINE_ENDING_STYLEE>
 8003fd0:	ee1c 1a90 	vmov	r1, s25
 8003fd4:	ee1a 0a10 	vmov	r0, s20
 8003fd8:	f00c fa22 	bl	8010420 <_ZN8touchgfx9Container3addERNS_8DrawableE>
    textArea3.setXY(70, 60);
 8003fdc:	9804      	ldr	r0, [sp, #16]
 8003fde:	223c      	movs	r2, #60	; 0x3c
 8003fe0:	2146      	movs	r1, #70	; 0x46
 8003fe2:	f7fe fca1 	bl	8002928 <_ZN8touchgfx8Drawable5setXYEss>
 8003fe6:	9904      	ldr	r1, [sp, #16]
        color = newColor;
 8003fe8:	f8c4 7d14 	str.w	r7, [r4, #3348]	; 0xd14
        boundingArea = calculateBoundingArea();
 8003fec:	4640      	mov	r0, r8
        linespace = space;
 8003fee:	f8a4 6d18 	strh.w	r6, [r4, #3352]	; 0xd18
        boundingArea = calculateBoundingArea();
 8003ff2:	f00e fda3 	bl	8012b3c <_ZNK8touchgfx8TextArea21calculateBoundingAreaEv>
 8003ff6:	e898 0007 	ldmia.w	r8, {r0, r1, r2}
 8003ffa:	9b04      	ldr	r3, [sp, #16]
 8003ffc:	f8cd a0ac 	str.w	sl, [sp, #172]	; 0xac
 8004000:	333c      	adds	r3, #60	; 0x3c
 8004002:	e883 0007 	stmia.w	r3, {r0, r1, r2}
 8004006:	231e      	movs	r3, #30
    textArea3.setTypedText(touchgfx::TypedText(T___SINGLEUSE_X786));
 8004008:	9804      	ldr	r0, [sp, #16]
 800400a:	f8ad 30b0 	strh.w	r3, [sp, #176]	; 0xb0
 800400e:	4629      	mov	r1, r5
 8004010:	f00f f82e 	bl	8013070 <_ZN8touchgfx8TextArea12setTypedTextERKNS_9TypedTextE>
 8004014:	9904      	ldr	r1, [sp, #16]
 8004016:	ee1a 0a10 	vmov	r0, s20
 800401a:	f00c fa01 	bl	8010420 <_ZN8touchgfx9Container3addERNS_8DrawableE>
    line1.setPosition(0, 50, 240, 10);
 800401e:	ee1d 0a10 	vmov	r0, s26
 8004022:	4631      	mov	r1, r6
 8004024:	f8cd 9000 	str.w	r9, [sp]
 8004028:	23f0      	movs	r3, #240	; 0xf0
 800402a:	2232      	movs	r2, #50	; 0x32
 800402c:	f7fe fc89 	bl	8002942 <_ZN8touchgfx8Drawable11setPositionEssss>
 8004030:	9b23      	ldr	r3, [sp, #140]	; 0x8c
 8004032:	f8c4 3d54 	str.w	r3, [r4, #3412]	; 0xd54
    line1.setStart(5, 5);
 8004036:	2205      	movs	r2, #5
 8004038:	ee1d 0a10 	vmov	r0, s26
 800403c:	4611      	mov	r1, r2
 800403e:	f8c4 7da8 	str.w	r7, [r4, #3496]	; 0xda8
 8004042:	f8a4 7dac 	strh.w	r7, [r4, #3500]	; 0xdac
 8004046:	f7fe fed9 	bl	8002dfc <_ZN8touchgfx4Line8setStartIiEEvT_S2_>
    line1.setEnd(235, 5);
 800404a:	2205      	movs	r2, #5
 800404c:	ee1d 0a10 	vmov	r0, s26
 8004050:	21eb      	movs	r1, #235	; 0xeb
 8004052:	f7fe fed7 	bl	8002e04 <_ZN8touchgfx4Line6setEndIiEEvT_S2_>
    line1.setLineWidth(1);
 8004056:	ee1d 0a10 	vmov	r0, s26
 800405a:	2101      	movs	r1, #1
 800405c:	f7fe fed6 	bl	8002e0c <_ZN8touchgfx4Line12setLineWidthIiEEvT_>
    line1.setLineEndingStyle(touchgfx::Line::ROUND_CAP_ENDING);
 8004060:	ee1d 0a10 	vmov	r0, s26
 8004064:	2101      	movs	r1, #1
 8004066:	f00e fbd3 	bl	8012810 <_ZN8touchgfx4Line18setLineEndingStyleENS0_17LINE_ENDING_STYLEE>
 800406a:	ee1d 1a10 	vmov	r1, s26
 800406e:	ee1a 0a10 	vmov	r0, s20
 8004072:	f00c f9d5 	bl	8010420 <_ZN8touchgfx9Container3addERNS_8DrawableE>
    textArea2.setXY(69, 35);
 8004076:	9805      	ldr	r0, [sp, #20]
 8004078:	2223      	movs	r2, #35	; 0x23
 800407a:	2145      	movs	r1, #69	; 0x45
 800407c:	f7fe fc54 	bl	8002928 <_ZN8touchgfx8Drawable5setXYEss>
 8004080:	9905      	ldr	r1, [sp, #20]
        color = newColor;
 8004082:	f8c4 7de0 	str.w	r7, [r4, #3552]	; 0xde0
        boundingArea = calculateBoundingArea();
 8004086:	4640      	mov	r0, r8
        linespace = space;
 8004088:	f8a4 6de4 	strh.w	r6, [r4, #3556]	; 0xde4
        boundingArea = calculateBoundingArea();
 800408c:	f00e fd56 	bl	8012b3c <_ZNK8touchgfx8TextArea21calculateBoundingAreaEv>
 8004090:	e898 0007 	ldmia.w	r8, {r0, r1, r2}
 8004094:	9b05      	ldr	r3, [sp, #20]
 8004096:	f8cd a0ac 	str.w	sl, [sp, #172]	; 0xac
 800409a:	333c      	adds	r3, #60	; 0x3c
 800409c:	e883 0007 	stmia.w	r3, {r0, r1, r2}
 80040a0:	2320      	movs	r3, #32
    textArea2.setTypedText(touchgfx::TypedText(T___SINGLEUSE_FJID));
 80040a2:	9805      	ldr	r0, [sp, #20]
 80040a4:	f8ad 30b0 	strh.w	r3, [sp, #176]	; 0xb0
 80040a8:	4629      	mov	r1, r5
 80040aa:	f00e ffe1 	bl	8013070 <_ZN8touchgfx8TextArea12setTypedTextERKNS_9TypedTextE>
 80040ae:	9905      	ldr	r1, [sp, #20]
 80040b0:	ee1a 0a10 	vmov	r0, s20
 80040b4:	f00c f9b4 	bl	8010420 <_ZN8touchgfx9Container3addERNS_8DrawableE>
    textArea1.setXY(54, 12);
 80040b8:	9806      	ldr	r0, [sp, #24]
 80040ba:	220c      	movs	r2, #12
 80040bc:	2136      	movs	r1, #54	; 0x36
 80040be:	f7fe fc33 	bl	8002928 <_ZN8touchgfx8Drawable5setXYEss>
 80040c2:	9906      	ldr	r1, [sp, #24]
        color = newColor;
 80040c4:	f8c4 7e28 	str.w	r7, [r4, #3624]	; 0xe28
        boundingArea = calculateBoundingArea();
 80040c8:	4640      	mov	r0, r8
        linespace = space;
 80040ca:	f8a4 6e2c 	strh.w	r6, [r4, #3628]	; 0xe2c
        boundingArea = calculateBoundingArea();
 80040ce:	f00e fd35 	bl	8012b3c <_ZNK8touchgfx8TextArea21calculateBoundingAreaEv>
 80040d2:	e898 0007 	ldmia.w	r8, {r0, r1, r2}
 80040d6:	9b06      	ldr	r3, [sp, #24]
 80040d8:	f8cd a0ac 	str.w	sl, [sp, #172]	; 0xac
 80040dc:	333c      	adds	r3, #60	; 0x3c
 80040de:	e883 0007 	stmia.w	r3, {r0, r1, r2}
 80040e2:	2321      	movs	r3, #33	; 0x21
    textArea1.setTypedText(touchgfx::TypedText(T___SINGLEUSE_EAAK));
 80040e4:	9806      	ldr	r0, [sp, #24]
 80040e6:	f8ad 30b0 	strh.w	r3, [sp, #176]	; 0xb0
 80040ea:	4629      	mov	r1, r5
 80040ec:	f00e ffc0 	bl	8013070 <_ZN8touchgfx8TextArea12setTypedTextERKNS_9TypedTextE>
 80040f0:	ee1a 0a10 	vmov	r0, s20
 80040f4:	9906      	ldr	r1, [sp, #24]
 80040f6:	f00c f993 	bl	8010420 <_ZN8touchgfx9Container3addERNS_8DrawableE>
}
 80040fa:	4620      	mov	r0, r4
 80040fc:	b02f      	add	sp, #188	; 0xbc
 80040fe:	ecbd 8b10 	vpop	{d8-d15}
 8004102:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
 8004106:	bf00      	nop

08004108 <_ZN8touchgfx11Application19changeToStartScreenEv>:
     *       this is explicitly done in your
     *       FrontendApplication::changeToStartScreen().
     */
    virtual void changeToStartScreen()
    {
    }
 8004108:	4770      	bx	lr

0800410a <_ZN8touchgfx11Application15appSwitchScreenEh>:
     * @param screenId An id that maps to the desired screen.
     */
    virtual void appSwitchScreen(uint8_t screenId)
    {
        (void)screenId; // Unused variable
    }
 800410a:	4770      	bx	lr

0800410c <_ZN8touchgfx11Application13requestRedrawERNS_4RectE>:
     *
     * @param [in,out] rect The Rect that must be redrawn.
     */
    virtual void requestRedraw(Rect& rect)
    {
        redraw = rect;
 800410c:	f500 7398 	add.w	r3, r0, #304	; 0x130
 8004110:	6808      	ldr	r0, [r1, #0]
 8004112:	6849      	ldr	r1, [r1, #4]
 8004114:	c303      	stmia	r3!, {r0, r1}
    }
 8004116:	4770      	bx	lr

08004118 <_ZN8touchgfx10Transition8tearDownEv>:
     * Tears down the Animation. Called before the destructor is called, when the
     * application changes the transition.
     */
    virtual void tearDown()
    {
    }
 8004118:	4770      	bx	lr

0800411a <_ZN8touchgfx10Transition4initEv>:
     * Initializes the transition. Called after the constructor is called, when the
     * application changes the transition.
     */
    virtual void init()
    {
    }
 800411a:	4770      	bx	lr

0800411c <_ZN8touchgfx10Transition18setScreenContainerERNS_9ContainerE>:
     *
     * @param [in] cont The Container the transition should have access to.
     */
    virtual void setScreenContainer(Container& cont)
    {
        screenContainer = &cont;
 800411c:	6041      	str	r1, [r0, #4]
    }
 800411e:	4770      	bx	lr

08004120 <_ZNK8touchgfx10Transition13FullSolidRect12getSolidRectEv>:
     * A Widget that reports solid and but does not draw anything.
     */
    class FullSolidRect : public Widget
    {
    public:
        virtual Rect getSolidRect() const
 8004120:	b510      	push	{r4, lr}
        : x(rectX), y(rectY), width(rectWidth), height(rectHeight)
 8004122:	2200      	movs	r2, #0
        {
            return Rect(0, 0, rect.width, rect.height);
 8004124:	f9b1 4008 	ldrsh.w	r4, [r1, #8]
 8004128:	f9b1 100a 	ldrsh.w	r1, [r1, #10]
 800412c:	8002      	strh	r2, [r0, #0]
 800412e:	8042      	strh	r2, [r0, #2]
 8004130:	8084      	strh	r4, [r0, #4]
 8004132:	80c1      	strh	r1, [r0, #6]
        }
 8004134:	bd10      	pop	{r4, pc}

08004136 <_ZNK8touchgfx10Transition13FullSolidRect4drawERKNS_4RectE>:

        virtual void draw(const Rect& area) const
        {
        }
 8004136:	4770      	bx	lr

08004138 <_ZN23FrontendApplicationBaseD1Ev>:

class FrontendApplicationBase : public touchgfx::MVPApplication
{
public:
    FrontendApplicationBase(Model& m, FrontendHeap& heap);
    virtual ~FrontendApplicationBase() { }
 8004138:	4770      	bx	lr
	...

0800413c <_ZN23FrontendApplicationBase19changeToStartScreenEv>:
 *
 * @note The member function to call must return void. The function can have zero, one, two or
 *       three arguments of any type.
 */
template <class dest_type>
struct Callback<dest_type, void, void, void> : public GenericCallback<>
 800413c:	4b06      	ldr	r3, [pc, #24]	; (8004158 <_ZN23FrontendApplicationBase19changeToStartScreenEv+0x1c>)
 800413e:	f8c0 314c 	str.w	r3, [r0, #332]	; 0x14c
 8004142:	2300      	movs	r3, #0
 8004144:	f8c0 3150 	str.w	r3, [r0, #336]	; 0x150
// Main_Menu

void FrontendApplicationBase::gotoMain_MenuScreenNoTransition()
{
    transitionCallback = touchgfx::Callback<FrontendApplicationBase>(this, &FrontendApplicationBase::gotoMain_MenuScreenNoTransitionImpl);
    pendingScreenTransitionCallback = &transitionCallback;
 8004148:	f500 73a2 	add.w	r3, r0, #324	; 0x144
 800414c:	f8c0 0148 	str.w	r0, [r0, #328]	; 0x148
 8004150:	f8c0 3140 	str.w	r3, [r0, #320]	; 0x140

    virtual void changeToStartScreen()
    {
        gotoMain_MenuScreenNoTransition();
    }
 8004154:	4770      	bx	lr
 8004156:	bf00      	nop
 8004158:	080044f9 	.word	0x080044f9

0800415c <_ZN8touchgfx12NoTransition15handleTickEventEv>:
{
public:
    /** Indicates that the transition is done after the first tick. */
    virtual void handleTickEvent()
    {
        done = true;
 800415c:	2301      	movs	r3, #1
 800415e:	7203      	strb	r3, [r0, #8]
    }
 8004160:	4770      	bx	lr

08004162 <_ZN8touchgfx10Transition13FullSolidRectD1Ev>:
    class FullSolidRect : public Widget
 8004162:	4770      	bx	lr

08004164 <_ZN8touchgfx14WipeTransitionILNS_9DirectionE3EED1Ev>:
 * the given direction.  This transition only draws the pixels in the
 * framebuffer once, and never moves any pixels. It is therefore very
 * useful on MCUs with limited performance.
 */
template <Direction templateDirection>
class WipeTransition : public Transition
 8004164:	4770      	bx	lr

08004166 <_ZN8touchgfx14WipeTransitionILNS_9DirectionE2EED1Ev>:
 8004166:	4770      	bx	lr

08004168 <_ZN8touchgfx12NoTransitionD1Ev>:
class NoTransition : public Transition
 8004168:	4770      	bx	lr

0800416a <_ZN8touchgfx8CallbackI23FrontendApplicationBasevvvED1Ev>:
 800416a:	4770      	bx	lr

0800416c <_ZN8touchgfx14WipeTransitionILNS_9DirectionE3EE8tearDownEv>:
            // Synchronize framebuffers
            Application::getInstance()->copyInvalidatedAreasFromTFTToClientBuffer();
        }
    }

    virtual void tearDown()
 800416c:	4601      	mov	r1, r0
    {
        screenContainer->remove(solid);
 800416e:	6840      	ldr	r0, [r0, #4]
 8004170:	6803      	ldr	r3, [r0, #0]
 8004172:	3110      	adds	r1, #16
 8004174:	6e5b      	ldr	r3, [r3, #100]	; 0x64
 8004176:	4718      	bx	r3

08004178 <_ZN8touchgfx14WipeTransitionILNS_9DirectionE3EE4initEv>:
    }

    virtual void init()
 8004178:	4601      	mov	r1, r0
    {
        Transition::init();
        // Add the solid (and not-drawing-anything) widget on top to cover the other widgets
        screenContainer->add(solid);
 800417a:	6840      	ldr	r0, [r0, #4]
 800417c:	6803      	ldr	r3, [r0, #0]
 800417e:	3110      	adds	r1, #16
 8004180:	6e1b      	ldr	r3, [r3, #96]	; 0x60
 8004182:	4718      	bx	r3

08004184 <_ZN8touchgfx14WipeTransitionILNS_9DirectionE3EE10invalidateEv>:
     * Wipe transition does not require an invalidation. Invalidation
     * is handled by the class. Do no invalidation initially.
     */
    virtual void invalidate()
    {
    }
 8004184:	4770      	bx	lr

08004186 <_ZN8touchgfx14WipeTransitionILNS_9DirectionE2EE8tearDownEv>:
    virtual void tearDown()
 8004186:	4601      	mov	r1, r0
        screenContainer->remove(solid);
 8004188:	6840      	ldr	r0, [r0, #4]
 800418a:	6803      	ldr	r3, [r0, #0]
 800418c:	3110      	adds	r1, #16
 800418e:	6e5b      	ldr	r3, [r3, #100]	; 0x64
 8004190:	4718      	bx	r3

08004192 <_ZN8touchgfx14WipeTransitionILNS_9DirectionE2EE4initEv>:
    virtual void init()
 8004192:	4601      	mov	r1, r0
        screenContainer->add(solid);
 8004194:	6840      	ldr	r0, [r0, #4]
 8004196:	6803      	ldr	r3, [r0, #0]
 8004198:	3110      	adds	r1, #16
 800419a:	6e1b      	ldr	r3, [r3, #96]	; 0x60
 800419c:	4718      	bx	r3

0800419e <_ZN8touchgfx14WipeTransitionILNS_9DirectionE2EE10invalidateEv>:
    }
 800419e:	4770      	bx	lr

080041a0 <_ZN8touchgfx8CallbackI23FrontendApplicationBasevvvE7executeEv>:

    /**
     * Calls the member function. Do not call execute unless isValid() returns true (ie. a
     * pointer to the object and the function has been set).
     */
    virtual void execute()
 80041a0:	b410      	push	{r4}
    {
        (pobject->*pmemfun)();
 80041a2:	68c2      	ldr	r2, [r0, #12]
 80041a4:	6841      	ldr	r1, [r0, #4]
 80041a6:	1054      	asrs	r4, r2, #1
    virtual void execute()
 80041a8:	4603      	mov	r3, r0
        (pobject->*pmemfun)();
 80041aa:	eb01 0062 	add.w	r0, r1, r2, asr #1
 80041ae:	07d2      	lsls	r2, r2, #31
 80041b0:	bf48      	it	mi
 80041b2:	590a      	ldrmi	r2, [r1, r4]
 80041b4:	689b      	ldr	r3, [r3, #8]
    }
 80041b6:	f85d 4b04 	ldr.w	r4, [sp], #4
        (pobject->*pmemfun)();
 80041ba:	bf48      	it	mi
 80041bc:	58d3      	ldrmi	r3, [r2, r3]
 80041be:	4718      	bx	r3

080041c0 <_ZNK8touchgfx8CallbackI23FrontendApplicationBasevvvE7isValidEv>:
     *
     * @return true If the callback is valid (i.e. safe to call execute).
     */
    virtual bool isValid() const
    {
        return (pobject != 0) && (pmemfun != 0);
 80041c0:	6843      	ldr	r3, [r0, #4]
 80041c2:	b12b      	cbz	r3, 80041d0 <_ZNK8touchgfx8CallbackI23FrontendApplicationBasevvvE7isValidEv+0x10>
 80041c4:	6883      	ldr	r3, [r0, #8]
 80041c6:	b92b      	cbnz	r3, 80041d4 <_ZNK8touchgfx8CallbackI23FrontendApplicationBasevvvE7isValidEv+0x14>
 80041c8:	68c0      	ldr	r0, [r0, #12]
 80041ca:	f000 0001 	and.w	r0, r0, #1
 80041ce:	4770      	bx	lr
 80041d0:	4618      	mov	r0, r3
 80041d2:	4770      	bx	lr
 80041d4:	2001      	movs	r0, #1
    }
 80041d6:	4770      	bx	lr

080041d8 <_ZN8touchgfx12NoTransitionD0Ev>:
 80041d8:	b510      	push	{r4, lr}
 80041da:	210c      	movs	r1, #12
 80041dc:	4604      	mov	r4, r0
 80041de:	f026 faac 	bl	802a73a <_ZdlPvj>
 80041e2:	4620      	mov	r0, r4
 80041e4:	bd10      	pop	{r4, pc}

080041e6 <_ZN8touchgfx8CallbackI23FrontendApplicationBasevvvED0Ev>:
struct Callback<dest_type, void, void, void> : public GenericCallback<>
 80041e6:	b510      	push	{r4, lr}
 80041e8:	2110      	movs	r1, #16
 80041ea:	4604      	mov	r4, r0
 80041ec:	f026 faa5 	bl	802a73a <_ZdlPvj>
 80041f0:	4620      	mov	r0, r4
 80041f2:	bd10      	pop	{r4, pc}

080041f4 <_ZN23FrontendApplicationBaseD0Ev>:
    virtual ~FrontendApplicationBase() { }
 80041f4:	b510      	push	{r4, lr}
 80041f6:	f44f 71ae 	mov.w	r1, #348	; 0x15c
 80041fa:	4604      	mov	r4, r0
 80041fc:	f026 fa9d 	bl	802a73a <_ZdlPvj>
 8004200:	4620      	mov	r0, r4
 8004202:	bd10      	pop	{r4, pc}

08004204 <_ZN8touchgfx14WipeTransitionILNS_9DirectionE3EED0Ev>:
class WipeTransition : public Transition
 8004204:	b510      	push	{r4, lr}
 8004206:	2138      	movs	r1, #56	; 0x38
 8004208:	4604      	mov	r4, r0
 800420a:	f026 fa96 	bl	802a73a <_ZdlPvj>
 800420e:	4620      	mov	r0, r4
 8004210:	bd10      	pop	{r4, pc}

08004212 <_ZN8touchgfx10Transition13FullSolidRectD0Ev>:
 8004212:	b510      	push	{r4, lr}
 8004214:	2128      	movs	r1, #40	; 0x28
 8004216:	4604      	mov	r4, r0
 8004218:	f026 fa8f 	bl	802a73a <_ZdlPvj>
 800421c:	4620      	mov	r0, r4
 800421e:	bd10      	pop	{r4, pc}

08004220 <_ZN8touchgfx14WipeTransitionILNS_9DirectionE2EED0Ev>:
 8004220:	b510      	push	{r4, lr}
 8004222:	2138      	movs	r1, #56	; 0x38
 8004224:	4604      	mov	r4, r0
 8004226:	f026 fa88 	bl	802a73a <_ZdlPvj>
 800422a:	4620      	mov	r0, r4
 800422c:	bd10      	pop	{r4, pc}

0800422e <_ZN8touchgfx10Transition10invalidateEv>:
    virtual void invalidate()
 800422e:	b510      	push	{r4, lr}
        Application::getInstance()->invalidate();
 8004230:	f012 f9ce 	bl	80165d0 <_ZN8touchgfx11Application11getInstanceEv>
 8004234:	6803      	ldr	r3, [r0, #0]
    }
 8004236:	e8bd 4010 	ldmia.w	sp!, {r4, lr}
        Application::getInstance()->invalidate();
 800423a:	6bdb      	ldr	r3, [r3, #60]	; 0x3c
 800423c:	4718      	bx	r3
	...

08004240 <_ZN8touchgfx14WipeTransitionILNS_9DirectionE3EE15handleTickEventEv>:
    virtual void handleTickEvent()
 8004240:	b513      	push	{r0, r1, r4, lr}
 8004242:	4604      	mov	r4, r0
        animationCounter++;
 8004244:	7a80      	ldrb	r0, [r0, #10]
        if (animationCounter > animationSteps)
 8004246:	7a63      	ldrb	r3, [r4, #9]
        animationCounter++;
 8004248:	3001      	adds	r0, #1
 800424a:	b2c0      	uxtb	r0, r0
        if (animationCounter > animationSteps)
 800424c:	4298      	cmp	r0, r3
        animationCounter++;
 800424e:	72a0      	strb	r0, [r4, #10]
        if (animationCounter > animationSteps)
 8004250:	d905      	bls.n	800425e <_ZN8touchgfx14WipeTransitionILNS_9DirectionE3EE15handleTickEventEv+0x1e>
            done = true;
 8004252:	2301      	movs	r3, #1
 8004254:	7223      	strb	r3, [r4, #8]
            animationCounter = 0;
 8004256:	2300      	movs	r3, #0
 8004258:	72a3      	strb	r3, [r4, #10]
    }
 800425a:	b002      	add	sp, #8
 800425c:	bd10      	pop	{r4, pc}
        calculatedValue = EasingEquations::cubicEaseOut(animationCounter, 0, targetValue, animationSteps);
 800425e:	f9b4 200c 	ldrsh.w	r2, [r4, #12]
 8004262:	2100      	movs	r1, #0
 8004264:	f014 f824 	bl	80182b0 <_ZN8touchgfx15EasingEquations12cubicEaseOutEtsst>
        if ((calculatedValue % 2) != 0)
 8004268:	f010 0201 	ands.w	r2, r0, #1
 800426c:	b283      	uxth	r3, r0
 800426e:	d12a      	bne.n	80042c6 <_ZN8touchgfx14WipeTransitionILNS_9DirectionE3EE15handleTickEventEv+0x86>
        calculatedValue = EasingEquations::cubicEaseOut(animationCounter, 0, targetValue, animationSteps);
 8004270:	81e0      	strh	r0, [r4, #14]
                solid.setWidth(HAL::DISPLAY_WIDTH - calculatedValue);
 8004272:	4a19      	ldr	r2, [pc, #100]	; (80042d8 <_ZN8touchgfx14WipeTransitionILNS_9DirectionE3EE15handleTickEventEv+0x98>)
 8004274:	f9b4 000e 	ldrsh.w	r0, [r4, #14]
 8004278:	89e3      	ldrh	r3, [r4, #14]
 800427a:	8812      	ldrh	r2, [r2, #0]
        return rect.x;
 800427c:	f9b4 1014 	ldrsh.w	r1, [r4, #20]
        rect.x = x;
 8004280:	82a0      	strh	r0, [r4, #20]
 8004282:	2000      	movs	r0, #0
 8004284:	1ad2      	subs	r2, r2, r3
 8004286:	f8ad 0002 	strh.w	r0, [sp, #2]
                screenContainer->invalidateRect(r);
 800428a:	6860      	ldr	r0, [r4, #4]
        rect.width = width;
 800428c:	8322      	strh	r2, [r4, #24]
                const uint16_t delta = calculatedValue - prevSolidPos;
 800428e:	1a5b      	subs	r3, r3, r1
                Rect r(prevSolidPos, 0, delta, HAL::DISPLAY_HEIGHT);
 8004290:	4a12      	ldr	r2, [pc, #72]	; (80042dc <_ZN8touchgfx14WipeTransitionILNS_9DirectionE3EE15handleTickEventEv+0x9c>)
 8004292:	f8ad 3004 	strh.w	r3, [sp, #4]
                screenContainer->invalidateRect(r);
 8004296:	6803      	ldr	r3, [r0, #0]
                Rect r(prevSolidPos, 0, delta, HAL::DISPLAY_HEIGHT);
 8004298:	f9b2 2000 	ldrsh.w	r2, [r2]
                screenContainer->invalidateRect(r);
 800429c:	691b      	ldr	r3, [r3, #16]
 800429e:	f8ad 1000 	strh.w	r1, [sp]
 80042a2:	f8ad 2006 	strh.w	r2, [sp, #6]
 80042a6:	4669      	mov	r1, sp
 80042a8:	4798      	blx	r3
        if (animationCounter == 1 && HAL::USE_DOUBLE_BUFFERING)
 80042aa:	7aa3      	ldrb	r3, [r4, #10]
 80042ac:	2b01      	cmp	r3, #1
 80042ae:	d1d4      	bne.n	800425a <_ZN8touchgfx14WipeTransitionILNS_9DirectionE3EE15handleTickEventEv+0x1a>
 80042b0:	4b0b      	ldr	r3, [pc, #44]	; (80042e0 <_ZN8touchgfx14WipeTransitionILNS_9DirectionE3EE15handleTickEventEv+0xa0>)
 80042b2:	781b      	ldrb	r3, [r3, #0]
 80042b4:	2b00      	cmp	r3, #0
 80042b6:	d0d0      	beq.n	800425a <_ZN8touchgfx14WipeTransitionILNS_9DirectionE3EE15handleTickEventEv+0x1a>
            Application::getInstance()->copyInvalidatedAreasFromTFTToClientBuffer();
 80042b8:	f012 f98a 	bl	80165d0 <_ZN8touchgfx11Application11getInstanceEv>
    }
 80042bc:	b002      	add	sp, #8
 80042be:	e8bd 4010 	ldmia.w	sp!, {r4, lr}
            Application::getInstance()->copyInvalidatedAreasFromTFTToClientBuffer();
 80042c2:	f012 b98b 	b.w	80165dc <_ZN8touchgfx11Application41copyInvalidatedAreasFromTFTToClientBufferEv>
            calculatedValue += (calculatedValue > 0 ? 1 : -1);
 80042c6:	f64f 71ff 	movw	r1, #65535	; 0xffff
 80042ca:	2800      	cmp	r0, #0
 80042cc:	bfd8      	it	le
 80042ce:	460a      	movle	r2, r1
 80042d0:	4413      	add	r3, r2
 80042d2:	81e3      	strh	r3, [r4, #14]
 80042d4:	e7cd      	b.n	8004272 <_ZN8touchgfx14WipeTransitionILNS_9DirectionE3EE15handleTickEventEv+0x32>
 80042d6:	bf00      	nop
 80042d8:	20013810 	.word	0x20013810
 80042dc:	20013812 	.word	0x20013812
 80042e0:	2001381a 	.word	0x2001381a

080042e4 <_ZN8touchgfx14MVPApplication29handlePendingScreenTransitionEv>:
    /**
     * Handles the pending screen transition.
     *
     * Delegates the work to evaluatePendingScreenTransition()
     */
    virtual void handlePendingScreenTransition()
 80042e4:	b510      	push	{r4, lr}
 80042e6:	4604      	mov	r4, r0
     * Evaluates the pending Callback instances. If a callback is valid, it is executed and
     * a Screen transition is executed.
     */
    void evaluatePendingScreenTransition()
    {
        if (pendingScreenTransitionCallback && pendingScreenTransitionCallback->isValid())
 80042e8:	f8d0 0140 	ldr.w	r0, [r0, #320]	; 0x140
 80042ec:	b158      	cbz	r0, 8004306 <_ZN8touchgfx14MVPApplication29handlePendingScreenTransitionEv+0x22>
 80042ee:	6803      	ldr	r3, [r0, #0]
 80042f0:	68db      	ldr	r3, [r3, #12]
 80042f2:	4798      	blx	r3
 80042f4:	b138      	cbz	r0, 8004306 <_ZN8touchgfx14MVPApplication29handlePendingScreenTransitionEv+0x22>
        {
            pendingScreenTransitionCallback->execute();
 80042f6:	f8d4 0140 	ldr.w	r0, [r4, #320]	; 0x140
 80042fa:	6803      	ldr	r3, [r0, #0]
 80042fc:	689b      	ldr	r3, [r3, #8]
 80042fe:	4798      	blx	r3
            pendingScreenTransitionCallback = 0;
 8004300:	2300      	movs	r3, #0
 8004302:	f8c4 3140 	str.w	r3, [r4, #320]	; 0x140
    }
 8004306:	bd10      	pop	{r4, pc}

08004308 <_ZN23FrontendApplicationBase38gotoShutting_OffScreenNoTransitionImplEv>:
    transitionCallback = touchgfx::Callback<FrontendApplicationBase>(this, &FrontendApplicationBase::gotoShutting_OffScreenNoTransitionImpl);
    pendingScreenTransitionCallback = &transitionCallback;
}

void FrontendApplicationBase::gotoShutting_OffScreenNoTransitionImpl()
{
 8004308:	e92d 4ff1 	stmdb	sp!, {r0, r4, r5, r6, r7, r8, r9, sl, fp, lr}
    touchgfx::makeTransition<Shutting_OffView, Shutting_OffPresenter, touchgfx::NoTransition, Model >(&currentScreen, &currentPresenter, frontendHeap, &currentTransition, &model);
 800430c:	e9d0 5a55 	ldrd	r5, sl, [r0, #340]	; 0x154
{
 8004310:	4607      	mov	r7, r0
 *         value as the old presenter due to memory reuse.
 */
template <class ScreenType, class PresenterType, class TransType, class ModelType>
PresenterType* makeTransition(Screen** currentScreen, Presenter** currentPresenter, MVPHeap& heap, Transition** currentTrans, ModelType* model)
{
    assert(sizeof(ScreenType) <= heap.screenStorage.element_size() && "View allocation error: Check that all views are added to FrontendHeap::ViewTypes");
 8004312:	68a8      	ldr	r0, [r5, #8]
 8004314:	6803      	ldr	r3, [r0, #0]
 8004316:	6a1b      	ldr	r3, [r3, #32]
 8004318:	4798      	blx	r3
 800431a:	2897      	cmp	r0, #151	; 0x97
 800431c:	d805      	bhi.n	800432a <_ZN23FrontendApplicationBase38gotoShutting_OffScreenNoTransitionImplEv+0x22>
 800431e:	4b46      	ldr	r3, [pc, #280]	; (8004438 <_ZN23FrontendApplicationBase38gotoShutting_OffScreenNoTransitionImplEv+0x130>)
 8004320:	4a46      	ldr	r2, [pc, #280]	; (800443c <_ZN23FrontendApplicationBase38gotoShutting_OffScreenNoTransitionImplEv+0x134>)
 8004322:	21a3      	movs	r1, #163	; 0xa3
    assert(sizeof(PresenterType) <= heap.presenterStorage.element_size() && "Presenter allocation error: Check that all presenters are added to FrontendHeap::PresenterTypes");
 8004324:	4846      	ldr	r0, [pc, #280]	; (8004440 <_ZN23FrontendApplicationBase38gotoShutting_OffScreenNoTransitionImplEv+0x138>)
 8004326:	f027 f81b 	bl	802b360 <__assert_func>
 800432a:	6868      	ldr	r0, [r5, #4]
 800432c:	6803      	ldr	r3, [r0, #0]
 800432e:	6a1b      	ldr	r3, [r3, #32]
 8004330:	4798      	blx	r3
 8004332:	280f      	cmp	r0, #15
 8004334:	d803      	bhi.n	800433e <_ZN23FrontendApplicationBase38gotoShutting_OffScreenNoTransitionImplEv+0x36>
 8004336:	4b43      	ldr	r3, [pc, #268]	; (8004444 <_ZN23FrontendApplicationBase38gotoShutting_OffScreenNoTransitionImplEv+0x13c>)
 8004338:	4a40      	ldr	r2, [pc, #256]	; (800443c <_ZN23FrontendApplicationBase38gotoShutting_OffScreenNoTransitionImplEv+0x134>)
 800433a:	21a4      	movs	r1, #164	; 0xa4
 800433c:	e7f2      	b.n	8004324 <_ZN23FrontendApplicationBase38gotoShutting_OffScreenNoTransitionImplEv+0x1c>
    assert(sizeof(TransType) <= heap.transitionStorage.element_size() && "Transition allocation error: Check that all transitions are added to FrontendHeap::TransitionTypes");
 800433e:	68e8      	ldr	r0, [r5, #12]
 8004340:	6803      	ldr	r3, [r0, #0]
 8004342:	6a1b      	ldr	r3, [r3, #32]
 8004344:	4798      	blx	r3
 8004346:	280b      	cmp	r0, #11
 8004348:	d803      	bhi.n	8004352 <_ZN23FrontendApplicationBase38gotoShutting_OffScreenNoTransitionImplEv+0x4a>
 800434a:	4b3f      	ldr	r3, [pc, #252]	; (8004448 <_ZN23FrontendApplicationBase38gotoShutting_OffScreenNoTransitionImplEv+0x140>)
 800434c:	4a3b      	ldr	r2, [pc, #236]	; (800443c <_ZN23FrontendApplicationBase38gotoShutting_OffScreenNoTransitionImplEv+0x134>)
 800434e:	21a5      	movs	r1, #165	; 0xa5
 8004350:	e7e8      	b.n	8004324 <_ZN23FrontendApplicationBase38gotoShutting_OffScreenNoTransitionImplEv+0x1c>
    Application::getInstance()->clearAllTimerWidgets();
 8004352:	f012 f93d 	bl	80165d0 <_ZN8touchgfx11Application11getInstanceEv>
    if (*currentTrans)
 8004356:	f8df 90f8 	ldr.w	r9, [pc, #248]	; 8004450 <_ZN23FrontendApplicationBase38gotoShutting_OffScreenNoTransitionImplEv+0x148>

    /** Clears all currently registered timer widgets. */

    void clearAllTimerWidgets()
    {
        timerWidgets.clear();
 800435a:	3004      	adds	r0, #4
 800435c:	f012 f99e 	bl	801669c <_ZN8touchgfx11Application12TimerWidgets5clearEv>
 8004360:	f8d9 0000 	ldr.w	r0, [r9]
 8004364:	b110      	cbz	r0, 800436c <_ZN23FrontendApplicationBase38gotoShutting_OffScreenNoTransitionImplEv+0x64>
        (*currentTrans)->tearDown();
 8004366:	6803      	ldr	r3, [r0, #0]
 8004368:	68db      	ldr	r3, [r3, #12]
 800436a:	4798      	blx	r3
    if (*currentTrans)
 800436c:	f8d9 0000 	ldr.w	r0, [r9]
 8004370:	b110      	cbz	r0, 8004378 <_ZN23FrontendApplicationBase38gotoShutting_OffScreenNoTransitionImplEv+0x70>
        (*currentTrans)->~Transition();
 8004372:	6803      	ldr	r3, [r0, #0]
 8004374:	681b      	ldr	r3, [r3, #0]
 8004376:	4798      	blx	r3
    if (*currentScreen)
 8004378:	f8df 80d8 	ldr.w	r8, [pc, #216]	; 8004454 <_ZN23FrontendApplicationBase38gotoShutting_OffScreenNoTransitionImplEv+0x14c>
 800437c:	f8d8 0000 	ldr.w	r0, [r8]
 8004380:	b110      	cbz	r0, 8004388 <_ZN23FrontendApplicationBase38gotoShutting_OffScreenNoTransitionImplEv+0x80>
        (*currentScreen)->tearDownScreen();
 8004382:	6803      	ldr	r3, [r0, #0]
 8004384:	695b      	ldr	r3, [r3, #20]
 8004386:	4798      	blx	r3
    if (*currentPresenter)
 8004388:	f8d7 013c 	ldr.w	r0, [r7, #316]	; 0x13c
 800438c:	b110      	cbz	r0, 8004394 <_ZN23FrontendApplicationBase38gotoShutting_OffScreenNoTransitionImplEv+0x8c>
        (*currentPresenter)->deactivate();
 800438e:	6803      	ldr	r3, [r0, #0]
 8004390:	685b      	ldr	r3, [r3, #4]
 8004392:	4798      	blx	r3
    if (*currentScreen)
 8004394:	f8d8 0000 	ldr.w	r0, [r8]
 8004398:	b110      	cbz	r0, 80043a0 <_ZN23FrontendApplicationBase38gotoShutting_OffScreenNoTransitionImplEv+0x98>
        (*currentScreen)->~Screen();
 800439a:	6803      	ldr	r3, [r0, #0]
 800439c:	681b      	ldr	r3, [r3, #0]
 800439e:	4798      	blx	r3
    if (*currentPresenter)
 80043a0:	f8d7 013c 	ldr.w	r0, [r7, #316]	; 0x13c
 80043a4:	b110      	cbz	r0, 80043ac <_ZN23FrontendApplicationBase38gotoShutting_OffScreenNoTransitionImplEv+0xa4>
        (*currentPresenter)->~Presenter();
 80043a6:	6803      	ldr	r3, [r0, #0]
 80043a8:	689b      	ldr	r3, [r3, #8]
 80043aa:	4798      	blx	r3

    prepareTransition(currentScreen, currentPresenter, currentTrans);

    TransType* newTransition = new (&heap.transitionStorage.at<TransType>(0)) TransType;
 80043ac:	68e8      	ldr	r0, [r5, #12]
     * @return A typed reference to the object at the specified index.
     */
    template <typename T>
    T& at(const uint16_t index)
    {
        return *static_cast<T*>(element(index));
 80043ae:	6803      	ldr	r3, [r0, #0]
 80043b0:	2100      	movs	r1, #0
 80043b2:	6a5b      	ldr	r3, [r3, #36]	; 0x24
 80043b4:	4798      	blx	r3
        : screenContainer(0), done(false)
 80043b6:	f04f 0b00 	mov.w	fp, #0
 80043ba:	4b24      	ldr	r3, [pc, #144]	; (800444c <_ZN23FrontendApplicationBase38gotoShutting_OffScreenNoTransitionImplEv+0x144>)
 80043bc:	6003      	str	r3, [r0, #0]
 80043be:	4604      	mov	r4, r0
 80043c0:	f8c0 b004 	str.w	fp, [r0, #4]
 80043c4:	f880 b008 	strb.w	fp, [r0, #8]
    ScreenType* newScreen = new (&heap.screenStorage.at<ScreenType>(0)) ScreenType;
 80043c8:	68a8      	ldr	r0, [r5, #8]
 80043ca:	6803      	ldr	r3, [r0, #0]
 80043cc:	4659      	mov	r1, fp
 80043ce:	6a5b      	ldr	r3, [r3, #36]	; 0x24
 80043d0:	4798      	blx	r3
 80043d2:	4606      	mov	r6, r0
 80043d4:	f004 fea4 	bl	8009120 <_ZN16Shutting_OffViewC1Ev>
    PresenterType* newPresenter = new (&heap.presenterStorage.at<PresenterType>(0)) PresenterType(*newScreen);
 80043d8:	6868      	ldr	r0, [r5, #4]
 80043da:	6803      	ldr	r3, [r0, #0]
 80043dc:	4659      	mov	r1, fp
 80043de:	6a5b      	ldr	r3, [r3, #36]	; 0x24
 80043e0:	4798      	blx	r3
 80043e2:	4631      	mov	r1, r6
 80043e4:	4605      	mov	r5, r0
 80043e6:	f004 fe77 	bl	80090d8 <_ZN21Shutting_OffPresenterC1ER16Shutting_OffView>
    *currentTrans = newTransition;
 80043ea:	f8c9 4000 	str.w	r4, [r9]
    *currentPresenter = newPresenter;
 80043ee:	f8c7 513c 	str.w	r5, [r7, #316]	; 0x13c
    *currentScreen = newScreen;
 80043f2:	f8c8 6000 	str.w	r6, [r8]
    model->bind(newPresenter);
 80043f6:	b1e5      	cbz	r5, 8004432 <_ZN23FrontendApplicationBase38gotoShutting_OffScreenNoTransitionImplEv+0x12a>
 80043f8:	1d2b      	adds	r3, r5, #4
public:
    Model();

    void bind(ModelListener* listener)
    {
        modelListener = listener;
 80043fa:	f8ca 3000 	str.w	r3, [sl]
    newScreen->setupScreen();
 80043fe:	6833      	ldr	r3, [r6, #0]
    
    virtual ~ModelListener() {}

    void bind(Model* m)
    {
        model = m;
 8004400:	f8c5 a008 	str.w	sl, [r5, #8]
 8004404:	4630      	mov	r0, r6
 8004406:	68db      	ldr	r3, [r3, #12]
     *
     * @param [in] newPresenter The specific Presenter to be associated with the View.
     */
    void bind(T& newPresenter)
    {
        presenter = &newPresenter;
 8004408:	63f5      	str	r5, [r6, #60]	; 0x3c
 800440a:	4798      	blx	r3
    newPresenter->activate();
 800440c:	682b      	ldr	r3, [r5, #0]
 800440e:	4628      	mov	r0, r5
 8004410:	681b      	ldr	r3, [r3, #0]
 8004412:	4798      	blx	r3
    newScreen->bindTransition(*newTransition);
 8004414:	4621      	mov	r1, r4
 8004416:	4630      	mov	r0, r6
 8004418:	f013 ff06 	bl	8018228 <_ZN8touchgfx6Screen14bindTransitionERNS_10TransitionE>
    newTransition->init();
 800441c:	6823      	ldr	r3, [r4, #0]
 800441e:	4620      	mov	r0, r4
 8004420:	691b      	ldr	r3, [r3, #16]
 8004422:	4798      	blx	r3
    newTransition->invalidate();
 8004424:	6823      	ldr	r3, [r4, #0]
 8004426:	695b      	ldr	r3, [r3, #20]
 8004428:	4620      	mov	r0, r4
}
 800442a:	b001      	add	sp, #4
 800442c:	e8bd 4ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 8004430:	4718      	bx	r3
    model->bind(newPresenter);
 8004432:	462b      	mov	r3, r5
 8004434:	e7e1      	b.n	80043fa <_ZN23FrontendApplicationBase38gotoShutting_OffScreenNoTransitionImplEv+0xf2>
 8004436:	bf00      	nop
 8004438:	0802d06c 	.word	0x0802d06c
 800443c:	0802d0fa 	.word	0x0802d0fa
 8004440:	0802d208 	.word	0x0802d208
 8004444:	0802d24f 	.word	0x0802d24f
 8004448:	0802d2f2 	.word	0x0802d2f2
 800444c:	0802e3ac 	.word	0x0802e3ac
 8004450:	20013864 	.word	0x20013864
 8004454:	20013860 	.word	0x20013860

08004458 <_ZN8touchgfx14WipeTransitionILNS_9DirectionE2EE15handleTickEventEv>:
    virtual void handleTickEvent()
 8004458:	b537      	push	{r0, r1, r2, r4, r5, lr}
 800445a:	4604      	mov	r4, r0
        animationCounter++;
 800445c:	7a80      	ldrb	r0, [r0, #10]
        if (animationCounter > animationSteps)
 800445e:	7a63      	ldrb	r3, [r4, #9]
        animationCounter++;
 8004460:	3001      	adds	r0, #1
 8004462:	b2c0      	uxtb	r0, r0
        if (animationCounter > animationSteps)
 8004464:	4298      	cmp	r0, r3
        animationCounter++;
 8004466:	72a0      	strb	r0, [r4, #10]
        if (animationCounter > animationSteps)
 8004468:	d905      	bls.n	8004476 <_ZN8touchgfx14WipeTransitionILNS_9DirectionE2EE15handleTickEventEv+0x1e>
            done = true;
 800446a:	2301      	movs	r3, #1
 800446c:	7223      	strb	r3, [r4, #8]
            animationCounter = 0;
 800446e:	2300      	movs	r3, #0
 8004470:	72a3      	strb	r3, [r4, #10]
    }
 8004472:	b003      	add	sp, #12
 8004474:	bd30      	pop	{r4, r5, pc}
        calculatedValue = EasingEquations::cubicEaseOut(animationCounter, 0, targetValue, animationSteps);
 8004476:	f9b4 200c 	ldrsh.w	r2, [r4, #12]
 800447a:	2100      	movs	r1, #0
 800447c:	f013 ff18 	bl	80182b0 <_ZN8touchgfx15EasingEquations12cubicEaseOutEtsst>
        if ((calculatedValue % 2) != 0)
 8004480:	f010 0201 	ands.w	r2, r0, #1
 8004484:	b283      	uxth	r3, r0
 8004486:	d128      	bne.n	80044da <_ZN8touchgfx14WipeTransitionILNS_9DirectionE2EE15handleTickEventEv+0x82>
        calculatedValue = EasingEquations::cubicEaseOut(animationCounter, 0, targetValue, animationSteps);
 8004488:	81e0      	strh	r0, [r4, #14]
                solid.setWidth(HAL::DISPLAY_WIDTH - calculatedValue);
 800448a:	4b18      	ldr	r3, [pc, #96]	; (80044ec <_ZN8touchgfx14WipeTransitionILNS_9DirectionE2EE15handleTickEventEv+0x94>)
                Rect r(solid.getWidth(), 0, delta, HAL::DISPLAY_HEIGHT);
 800448c:	4818      	ldr	r0, [pc, #96]	; (80044f0 <_ZN8touchgfx14WipeTransitionILNS_9DirectionE2EE15handleTickEventEv+0x98>)
                solid.setWidth(HAL::DISPLAY_WIDTH - calculatedValue);
 800448e:	8819      	ldrh	r1, [r3, #0]
                const uint16_t prevSolidWidth = solid.getWidth();
 8004490:	8b25      	ldrh	r5, [r4, #24]
                solid.setWidth(HAL::DISPLAY_WIDTH - calculatedValue);
 8004492:	89e3      	ldrh	r3, [r4, #14]
                Rect r(solid.getWidth(), 0, delta, HAL::DISPLAY_HEIGHT);
 8004494:	f9b0 0000 	ldrsh.w	r0, [r0]
 8004498:	f8ad 0006 	strh.w	r0, [sp, #6]
                solid.setWidth(HAL::DISPLAY_WIDTH - calculatedValue);
 800449c:	1aca      	subs	r2, r1, r3
                screenContainer->invalidateRect(r);
 800449e:	6860      	ldr	r0, [r4, #4]
                const uint16_t delta = prevSolidWidth - solid.getWidth();
 80044a0:	442b      	add	r3, r5
 80044a2:	1a5b      	subs	r3, r3, r1
                solid.setWidth(HAL::DISPLAY_WIDTH - calculatedValue);
 80044a4:	b212      	sxth	r2, r2
 80044a6:	f8ad 3004 	strh.w	r3, [sp, #4]
                screenContainer->invalidateRect(r);
 80044aa:	6803      	ldr	r3, [r0, #0]
 80044ac:	8322      	strh	r2, [r4, #24]
 80044ae:	f8ad 2000 	strh.w	r2, [sp]
 80044b2:	2200      	movs	r2, #0
 80044b4:	691b      	ldr	r3, [r3, #16]
 80044b6:	f8ad 2002 	strh.w	r2, [sp, #2]
 80044ba:	4669      	mov	r1, sp
 80044bc:	4798      	blx	r3
        if (animationCounter == 1 && HAL::USE_DOUBLE_BUFFERING)
 80044be:	7aa3      	ldrb	r3, [r4, #10]
 80044c0:	2b01      	cmp	r3, #1
 80044c2:	d1d6      	bne.n	8004472 <_ZN8touchgfx14WipeTransitionILNS_9DirectionE2EE15handleTickEventEv+0x1a>
 80044c4:	4b0b      	ldr	r3, [pc, #44]	; (80044f4 <_ZN8touchgfx14WipeTransitionILNS_9DirectionE2EE15handleTickEventEv+0x9c>)
 80044c6:	781b      	ldrb	r3, [r3, #0]
 80044c8:	2b00      	cmp	r3, #0
 80044ca:	d0d2      	beq.n	8004472 <_ZN8touchgfx14WipeTransitionILNS_9DirectionE2EE15handleTickEventEv+0x1a>
            Application::getInstance()->copyInvalidatedAreasFromTFTToClientBuffer();
 80044cc:	f012 f880 	bl	80165d0 <_ZN8touchgfx11Application11getInstanceEv>
    }
 80044d0:	b003      	add	sp, #12
 80044d2:	e8bd 4030 	ldmia.w	sp!, {r4, r5, lr}
            Application::getInstance()->copyInvalidatedAreasFromTFTToClientBuffer();
 80044d6:	f012 b881 	b.w	80165dc <_ZN8touchgfx11Application41copyInvalidatedAreasFromTFTToClientBufferEv>
            calculatedValue += (calculatedValue > 0 ? 1 : -1);
 80044da:	f64f 71ff 	movw	r1, #65535	; 0xffff
 80044de:	2800      	cmp	r0, #0
 80044e0:	bfd8      	it	le
 80044e2:	460a      	movle	r2, r1
 80044e4:	4413      	add	r3, r2
 80044e6:	81e3      	strh	r3, [r4, #14]
 80044e8:	e7cf      	b.n	800448a <_ZN8touchgfx14WipeTransitionILNS_9DirectionE2EE15handleTickEventEv+0x32>
 80044ea:	bf00      	nop
 80044ec:	20013810 	.word	0x20013810
 80044f0:	20013812 	.word	0x20013812
 80044f4:	2001381a 	.word	0x2001381a

080044f8 <_ZN23FrontendApplicationBase35gotoMain_MenuScreenNoTransitionImplEv>:
{
 80044f8:	e92d 4ff1 	stmdb	sp!, {r0, r4, r5, r6, r7, r8, r9, sl, fp, lr}
    touchgfx::makeTransition<Main_MenuView, Main_MenuPresenter, touchgfx::NoTransition, Model >(&currentScreen, &currentPresenter, frontendHeap, &currentTransition, &model);
 80044fc:	e9d0 5a55 	ldrd	r5, sl, [r0, #340]	; 0x154
{
 8004500:	4607      	mov	r7, r0
    assert(sizeof(ScreenType) <= heap.screenStorage.element_size() && "View allocation error: Check that all views are added to FrontendHeap::ViewTypes");
 8004502:	68a8      	ldr	r0, [r5, #8]
 8004504:	6803      	ldr	r3, [r0, #0]
 8004506:	6a1b      	ldr	r3, [r3, #32]
 8004508:	4798      	blx	r3
 800450a:	f241 137b 	movw	r3, #4475	; 0x117b
 800450e:	4298      	cmp	r0, r3
 8004510:	d805      	bhi.n	800451e <_ZN23FrontendApplicationBase35gotoMain_MenuScreenNoTransitionImplEv+0x26>
 8004512:	4b46      	ldr	r3, [pc, #280]	; (800462c <_ZN23FrontendApplicationBase35gotoMain_MenuScreenNoTransitionImplEv+0x134>)
 8004514:	4a46      	ldr	r2, [pc, #280]	; (8004630 <_ZN23FrontendApplicationBase35gotoMain_MenuScreenNoTransitionImplEv+0x138>)
 8004516:	21a3      	movs	r1, #163	; 0xa3
    assert(sizeof(PresenterType) <= heap.presenterStorage.element_size() && "Presenter allocation error: Check that all presenters are added to FrontendHeap::PresenterTypes");
 8004518:	4846      	ldr	r0, [pc, #280]	; (8004634 <_ZN23FrontendApplicationBase35gotoMain_MenuScreenNoTransitionImplEv+0x13c>)
 800451a:	f026 ff21 	bl	802b360 <__assert_func>
 800451e:	6868      	ldr	r0, [r5, #4]
 8004520:	6803      	ldr	r3, [r0, #0]
 8004522:	6a1b      	ldr	r3, [r3, #32]
 8004524:	4798      	blx	r3
 8004526:	280f      	cmp	r0, #15
 8004528:	d803      	bhi.n	8004532 <_ZN23FrontendApplicationBase35gotoMain_MenuScreenNoTransitionImplEv+0x3a>
 800452a:	4b43      	ldr	r3, [pc, #268]	; (8004638 <_ZN23FrontendApplicationBase35gotoMain_MenuScreenNoTransitionImplEv+0x140>)
 800452c:	4a40      	ldr	r2, [pc, #256]	; (8004630 <_ZN23FrontendApplicationBase35gotoMain_MenuScreenNoTransitionImplEv+0x138>)
 800452e:	21a4      	movs	r1, #164	; 0xa4
 8004530:	e7f2      	b.n	8004518 <_ZN23FrontendApplicationBase35gotoMain_MenuScreenNoTransitionImplEv+0x20>
    assert(sizeof(TransType) <= heap.transitionStorage.element_size() && "Transition allocation error: Check that all transitions are added to FrontendHeap::TransitionTypes");
 8004532:	68e8      	ldr	r0, [r5, #12]
 8004534:	6803      	ldr	r3, [r0, #0]
 8004536:	6a1b      	ldr	r3, [r3, #32]
 8004538:	4798      	blx	r3
 800453a:	280b      	cmp	r0, #11
 800453c:	d803      	bhi.n	8004546 <_ZN23FrontendApplicationBase35gotoMain_MenuScreenNoTransitionImplEv+0x4e>
 800453e:	4b3f      	ldr	r3, [pc, #252]	; (800463c <_ZN23FrontendApplicationBase35gotoMain_MenuScreenNoTransitionImplEv+0x144>)
 8004540:	4a3b      	ldr	r2, [pc, #236]	; (8004630 <_ZN23FrontendApplicationBase35gotoMain_MenuScreenNoTransitionImplEv+0x138>)
 8004542:	21a5      	movs	r1, #165	; 0xa5
 8004544:	e7e8      	b.n	8004518 <_ZN23FrontendApplicationBase35gotoMain_MenuScreenNoTransitionImplEv+0x20>
    Application::getInstance()->clearAllTimerWidgets();
 8004546:	f012 f843 	bl	80165d0 <_ZN8touchgfx11Application11getInstanceEv>
    if (*currentTrans)
 800454a:	f8df 90f8 	ldr.w	r9, [pc, #248]	; 8004644 <_ZN23FrontendApplicationBase35gotoMain_MenuScreenNoTransitionImplEv+0x14c>
 800454e:	3004      	adds	r0, #4
 8004550:	f012 f8a4 	bl	801669c <_ZN8touchgfx11Application12TimerWidgets5clearEv>
 8004554:	f8d9 0000 	ldr.w	r0, [r9]
 8004558:	b110      	cbz	r0, 8004560 <_ZN23FrontendApplicationBase35gotoMain_MenuScreenNoTransitionImplEv+0x68>
        (*currentTrans)->tearDown();
 800455a:	6803      	ldr	r3, [r0, #0]
 800455c:	68db      	ldr	r3, [r3, #12]
 800455e:	4798      	blx	r3
    if (*currentTrans)
 8004560:	f8d9 0000 	ldr.w	r0, [r9]
 8004564:	b110      	cbz	r0, 800456c <_ZN23FrontendApplicationBase35gotoMain_MenuScreenNoTransitionImplEv+0x74>
        (*currentTrans)->~Transition();
 8004566:	6803      	ldr	r3, [r0, #0]
 8004568:	681b      	ldr	r3, [r3, #0]
 800456a:	4798      	blx	r3
    if (*currentScreen)
 800456c:	f8df 80d8 	ldr.w	r8, [pc, #216]	; 8004648 <_ZN23FrontendApplicationBase35gotoMain_MenuScreenNoTransitionImplEv+0x150>
 8004570:	f8d8 0000 	ldr.w	r0, [r8]
 8004574:	b110      	cbz	r0, 800457c <_ZN23FrontendApplicationBase35gotoMain_MenuScreenNoTransitionImplEv+0x84>
        (*currentScreen)->tearDownScreen();
 8004576:	6803      	ldr	r3, [r0, #0]
 8004578:	695b      	ldr	r3, [r3, #20]
 800457a:	4798      	blx	r3
    if (*currentPresenter)
 800457c:	f8d7 013c 	ldr.w	r0, [r7, #316]	; 0x13c
 8004580:	b110      	cbz	r0, 8004588 <_ZN23FrontendApplicationBase35gotoMain_MenuScreenNoTransitionImplEv+0x90>
        (*currentPresenter)->deactivate();
 8004582:	6803      	ldr	r3, [r0, #0]
 8004584:	685b      	ldr	r3, [r3, #4]
 8004586:	4798      	blx	r3
    if (*currentScreen)
 8004588:	f8d8 0000 	ldr.w	r0, [r8]
 800458c:	b110      	cbz	r0, 8004594 <_ZN23FrontendApplicationBase35gotoMain_MenuScreenNoTransitionImplEv+0x9c>
        (*currentScreen)->~Screen();
 800458e:	6803      	ldr	r3, [r0, #0]
 8004590:	681b      	ldr	r3, [r3, #0]
 8004592:	4798      	blx	r3
    if (*currentPresenter)
 8004594:	f8d7 013c 	ldr.w	r0, [r7, #316]	; 0x13c
 8004598:	b110      	cbz	r0, 80045a0 <_ZN23FrontendApplicationBase35gotoMain_MenuScreenNoTransitionImplEv+0xa8>
        (*currentPresenter)->~Presenter();
 800459a:	6803      	ldr	r3, [r0, #0]
 800459c:	689b      	ldr	r3, [r3, #8]
 800459e:	4798      	blx	r3
    TransType* newTransition = new (&heap.transitionStorage.at<TransType>(0)) TransType;
 80045a0:	68e8      	ldr	r0, [r5, #12]
 80045a2:	6803      	ldr	r3, [r0, #0]
 80045a4:	2100      	movs	r1, #0
 80045a6:	6a5b      	ldr	r3, [r3, #36]	; 0x24
 80045a8:	4798      	blx	r3
 80045aa:	f04f 0b00 	mov.w	fp, #0
 80045ae:	4b24      	ldr	r3, [pc, #144]	; (8004640 <_ZN23FrontendApplicationBase35gotoMain_MenuScreenNoTransitionImplEv+0x148>)
 80045b0:	6003      	str	r3, [r0, #0]
 80045b2:	4604      	mov	r4, r0
 80045b4:	f8c0 b004 	str.w	fp, [r0, #4]
 80045b8:	f880 b008 	strb.w	fp, [r0, #8]
    ScreenType* newScreen = new (&heap.screenStorage.at<ScreenType>(0)) ScreenType;
 80045bc:	68a8      	ldr	r0, [r5, #8]
 80045be:	6803      	ldr	r3, [r0, #0]
 80045c0:	4659      	mov	r1, fp
 80045c2:	6a5b      	ldr	r3, [r3, #36]	; 0x24
 80045c4:	4798      	blx	r3
 80045c6:	4606      	mov	r6, r0
 80045c8:	f004 fa4e 	bl	8008a68 <_ZN13Main_MenuViewC1Ev>
    PresenterType* newPresenter = new (&heap.presenterStorage.at<PresenterType>(0)) PresenterType(*newScreen);
 80045cc:	6868      	ldr	r0, [r5, #4]
 80045ce:	6803      	ldr	r3, [r0, #0]
 80045d0:	4659      	mov	r1, fp
 80045d2:	6a5b      	ldr	r3, [r3, #36]	; 0x24
 80045d4:	4798      	blx	r3
 80045d6:	4631      	mov	r1, r6
 80045d8:	4605      	mov	r5, r0
 80045da:	f004 fa1f 	bl	8008a1c <_ZN18Main_MenuPresenterC1ER13Main_MenuView>
    *currentTrans = newTransition;
 80045de:	f8c9 4000 	str.w	r4, [r9]
    *currentPresenter = newPresenter;
 80045e2:	f8c7 513c 	str.w	r5, [r7, #316]	; 0x13c
    *currentScreen = newScreen;
 80045e6:	f8c8 6000 	str.w	r6, [r8]
    model->bind(newPresenter);
 80045ea:	b1e5      	cbz	r5, 8004626 <_ZN23FrontendApplicationBase35gotoMain_MenuScreenNoTransitionImplEv+0x12e>
 80045ec:	1d2b      	adds	r3, r5, #4
 80045ee:	f8ca 3000 	str.w	r3, [sl]
    newScreen->setupScreen();
 80045f2:	6833      	ldr	r3, [r6, #0]
 80045f4:	f8c5 a008 	str.w	sl, [r5, #8]
 80045f8:	4630      	mov	r0, r6
 80045fa:	68db      	ldr	r3, [r3, #12]
 80045fc:	63f5      	str	r5, [r6, #60]	; 0x3c
 80045fe:	4798      	blx	r3
    newPresenter->activate();
 8004600:	682b      	ldr	r3, [r5, #0]
 8004602:	4628      	mov	r0, r5
 8004604:	681b      	ldr	r3, [r3, #0]
 8004606:	4798      	blx	r3
    newScreen->bindTransition(*newTransition);
 8004608:	4621      	mov	r1, r4
 800460a:	4630      	mov	r0, r6
 800460c:	f013 fe0c 	bl	8018228 <_ZN8touchgfx6Screen14bindTransitionERNS_10TransitionE>
    newTransition->init();
 8004610:	6823      	ldr	r3, [r4, #0]
 8004612:	4620      	mov	r0, r4
 8004614:	691b      	ldr	r3, [r3, #16]
 8004616:	4798      	blx	r3
    newTransition->invalidate();
 8004618:	6823      	ldr	r3, [r4, #0]
 800461a:	695b      	ldr	r3, [r3, #20]
 800461c:	4620      	mov	r0, r4
}
 800461e:	b001      	add	sp, #4
 8004620:	e8bd 4ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 8004624:	4718      	bx	r3
    model->bind(newPresenter);
 8004626:	462b      	mov	r3, r5
 8004628:	e7e1      	b.n	80045ee <_ZN23FrontendApplicationBase35gotoMain_MenuScreenNoTransitionImplEv+0xf6>
 800462a:	bf00      	nop
 800462c:	0802d06c 	.word	0x0802d06c
 8004630:	0802d395 	.word	0x0802d395
 8004634:	0802d208 	.word	0x0802d208
 8004638:	0802d24f 	.word	0x0802d24f
 800463c:	0802d2f2 	.word	0x0802d2f2
 8004640:	0802e3ac 	.word	0x0802e3ac
 8004644:	20013864 	.word	0x20013864
 8004648:	20013860 	.word	0x20013860

0800464c <_ZN8touchgfx3HAL3lcdEv>:
        if (instance->useAuxiliaryLCD && instance->auxiliaryLCD)
 800464c:	4b04      	ldr	r3, [pc, #16]	; (8004660 <_ZN8touchgfx3HAL3lcdEv+0x14>)
 800464e:	681b      	ldr	r3, [r3, #0]
 8004650:	f893 2058 	ldrb.w	r2, [r3, #88]	; 0x58
 8004654:	b10a      	cbz	r2, 800465a <_ZN8touchgfx3HAL3lcdEv+0xe>
 8004656:	6cd8      	ldr	r0, [r3, #76]	; 0x4c
 8004658:	b900      	cbnz	r0, 800465c <_ZN8touchgfx3HAL3lcdEv+0x10>
        return instance->lcdRef;
 800465a:	6898      	ldr	r0, [r3, #8]
    }
 800465c:	4770      	bx	lr
 800465e:	bf00      	nop
 8004660:	2001381c 	.word	0x2001381c

08004664 <_ZN23FrontendApplicationBaseC1ER5ModelR12FrontendHeap>:
FrontendApplicationBase::FrontendApplicationBase(Model& m, FrontendHeap& heap)
 8004664:	b5f8      	push	{r3, r4, r5, r6, r7, lr}
 8004666:	4604      	mov	r4, r0
 8004668:	4617      	mov	r7, r2
 800466a:	460e      	mov	r6, r1
          pendingScreenTransitionCallback(0)
 800466c:	f012 f8e4 	bl	8016838 <_ZN8touchgfx11ApplicationC1Ev>
        instance = this;
 8004670:	4b10      	ldr	r3, [pc, #64]	; (80046b4 <_ZN23FrontendApplicationBaseC1ER5ModelR12FrontendHeap+0x50>)
 8004672:	601c      	str	r4, [r3, #0]
      model(m)
 8004674:	4b10      	ldr	r3, [pc, #64]	; (80046b8 <_ZN23FrontendApplicationBaseC1ER5ModelR12FrontendHeap+0x54>)
 8004676:	6023      	str	r3, [r4, #0]
        : pobject(0), pmemfun(0)
 8004678:	4b10      	ldr	r3, [pc, #64]	; (80046bc <_ZN23FrontendApplicationBaseC1ER5ModelR12FrontendHeap+0x58>)
        : currentPresenter(0),
 800467a:	2500      	movs	r5, #0
 800467c:	e9c4 3551 	strd	r3, r5, [r4, #324]	; 0x144
        return instance;
 8004680:	4b0f      	ldr	r3, [pc, #60]	; (80046c0 <_ZN23FrontendApplicationBaseC1ER5ModelR12FrontendHeap+0x5c>)
 8004682:	e9c4 5553 	strd	r5, r5, [r4, #332]	; 0x14c
 8004686:	6818      	ldr	r0, [r3, #0]
    touchgfx::HAL::getInstance()->setDisplayOrientation(touchgfx::ORIENTATION_PORTRAIT);
 8004688:	6803      	ldr	r3, [r0, #0]
 800468a:	2101      	movs	r1, #1
 800468c:	689b      	ldr	r3, [r3, #8]
          pendingScreenTransitionCallback(0)
 800468e:	e9c4 554f 	strd	r5, r5, [r4, #316]	; 0x13c
      model(m)
 8004692:	e9c4 7655 	strd	r7, r6, [r4, #340]	; 0x154
    touchgfx::HAL::getInstance()->setDisplayOrientation(touchgfx::ORIENTATION_PORTRAIT);
 8004696:	4798      	blx	r3
    touchgfx::Texts::setLanguage(GB);
 8004698:	4628      	mov	r0, r5
 800469a:	f004 f819 	bl	80086d0 <_ZN8touchgfx5Texts11setLanguageEt>
    reinterpret_cast<touchgfx::LCD16bpp&>(touchgfx::HAL::lcd()).enableTextureMapperAll();
 800469e:	f7ff ffd5 	bl	800464c <_ZN8touchgfx3HAL3lcdEv>
 80046a2:	f01b fccc 	bl	802003e <_ZN8touchgfx8LCD16bpp22enableTextureMapperAllEv>
    reinterpret_cast<touchgfx::LCD16bpp&>(touchgfx::HAL::lcd()).enableDecompressorL8_All();
 80046a6:	f7ff ffd1 	bl	800464c <_ZN8touchgfx3HAL3lcdEv>
 80046aa:	f01b fd43 	bl	8020134 <_ZN8touchgfx8LCD16bpp24enableDecompressorL8_AllEv>
}
 80046ae:	4620      	mov	r0, r4
 80046b0:	bdf8      	pop	{r3, r4, r5, r6, r7, pc}
 80046b2:	bf00      	nop
 80046b4:	20013870 	.word	0x20013870
 80046b8:	0802e358 	.word	0x0802e358
 80046bc:	0802e340 	.word	0x0802e340
 80046c0:	2001381c 	.word	0x2001381c

080046c4 <_ZN23FrontendApplicationBase31gotoMain_MenuScreenNoTransitionEv>:
struct Callback<dest_type, void, void, void> : public GenericCallback<>
 80046c4:	4b06      	ldr	r3, [pc, #24]	; (80046e0 <_ZN23FrontendApplicationBase31gotoMain_MenuScreenNoTransitionEv+0x1c>)
 80046c6:	f8c0 314c 	str.w	r3, [r0, #332]	; 0x14c
 80046ca:	2300      	movs	r3, #0
 80046cc:	f8c0 3150 	str.w	r3, [r0, #336]	; 0x150
    pendingScreenTransitionCallback = &transitionCallback;
 80046d0:	f500 73a2 	add.w	r3, r0, #324	; 0x144
 80046d4:	f8c0 0148 	str.w	r0, [r0, #328]	; 0x148
 80046d8:	f8c0 3140 	str.w	r3, [r0, #320]	; 0x140
}
 80046dc:	4770      	bx	lr
 80046de:	bf00      	nop
 80046e0:	080044f9 	.word	0x080044f9

080046e4 <_ZN23FrontendApplicationBase37gotoMain_MenuScreenWipeTransitionWestEv>:
 80046e4:	4b06      	ldr	r3, [pc, #24]	; (8004700 <_ZN23FrontendApplicationBase37gotoMain_MenuScreenWipeTransitionWestEv+0x1c>)
 80046e6:	f8c0 314c 	str.w	r3, [r0, #332]	; 0x14c
 80046ea:	2300      	movs	r3, #0
 80046ec:	f8c0 3150 	str.w	r3, [r0, #336]	; 0x150
    pendingScreenTransitionCallback = &transitionCallback;
 80046f0:	f500 73a2 	add.w	r3, r0, #324	; 0x144
 80046f4:	f8c0 0148 	str.w	r0, [r0, #328]	; 0x148
 80046f8:	f8c0 3140 	str.w	r3, [r0, #320]	; 0x140
}
 80046fc:	4770      	bx	lr
 80046fe:	bf00      	nop
 8004700:	08004b69 	.word	0x08004b69

08004704 <_ZN23FrontendApplicationBase39gotoMeasurementScreenWipeTransitionEastEv>:
 8004704:	4b06      	ldr	r3, [pc, #24]	; (8004720 <_ZN23FrontendApplicationBase39gotoMeasurementScreenWipeTransitionEastEv+0x1c>)
 8004706:	f8c0 314c 	str.w	r3, [r0, #332]	; 0x14c
 800470a:	2300      	movs	r3, #0
 800470c:	f8c0 3150 	str.w	r3, [r0, #336]	; 0x150
    pendingScreenTransitionCallback = &transitionCallback;
 8004710:	f500 73a2 	add.w	r3, r0, #324	; 0x144
 8004714:	f8c0 0148 	str.w	r0, [r0, #328]	; 0x148
 8004718:	f8c0 3140 	str.w	r3, [r0, #320]	; 0x140
}
 800471c:	4770      	bx	lr
 800471e:	bf00      	nop
 8004720:	0800570d 	.word	0x0800570d

08004724 <_ZN23FrontendApplicationBase39gotoMeasurementScreenWipeTransitionWestEv>:
 8004724:	4b06      	ldr	r3, [pc, #24]	; (8004740 <_ZN23FrontendApplicationBase39gotoMeasurementScreenWipeTransitionWestEv+0x1c>)
 8004726:	f8c0 314c 	str.w	r3, [r0, #332]	; 0x14c
 800472a:	2300      	movs	r3, #0
 800472c:	f8c0 3150 	str.w	r3, [r0, #336]	; 0x150
    pendingScreenTransitionCallback = &transitionCallback;
 8004730:	f500 73a2 	add.w	r3, r0, #324	; 0x144
 8004734:	f8c0 0148 	str.w	r0, [r0, #328]	; 0x148
 8004738:	f8c0 3140 	str.w	r3, [r0, #320]	; 0x140
}
 800473c:	4770      	bx	lr
 800473e:	bf00      	nop
 8004740:	08004a29 	.word	0x08004a29

08004744 <_ZN23FrontendApplicationBase46gotoMeasurement_SingleScreenWipeTransitionEastEv>:
 8004744:	4b06      	ldr	r3, [pc, #24]	; (8004760 <_ZN23FrontendApplicationBase46gotoMeasurement_SingleScreenWipeTransitionEastEv+0x1c>)
 8004746:	f8c0 314c 	str.w	r3, [r0, #332]	; 0x14c
 800474a:	2300      	movs	r3, #0
 800474c:	f8c0 3150 	str.w	r3, [r0, #336]	; 0x150
    pendingScreenTransitionCallback = &transitionCallback;
 8004750:	f500 73a2 	add.w	r3, r0, #324	; 0x144
 8004754:	f8c0 0148 	str.w	r0, [r0, #328]	; 0x148
 8004758:	f8c0 3140 	str.w	r3, [r0, #320]	; 0x140
}
 800475c:	4770      	bx	lr
 800475e:	bf00      	nop
 8004760:	080055cd 	.word	0x080055cd

08004764 <_ZN23FrontendApplicationBase57gotoMeasurement_Single_Display_1PScreenWipeTransitionEastEv>:
 8004764:	4b06      	ldr	r3, [pc, #24]	; (8004780 <_ZN23FrontendApplicationBase57gotoMeasurement_Single_Display_1PScreenWipeTransitionEastEv+0x1c>)
 8004766:	f8c0 314c 	str.w	r3, [r0, #332]	; 0x14c
 800476a:	2300      	movs	r3, #0
 800476c:	f8c0 3150 	str.w	r3, [r0, #336]	; 0x150
    pendingScreenTransitionCallback = &transitionCallback;
 8004770:	f500 73a2 	add.w	r3, r0, #324	; 0x144
 8004774:	f8c0 0148 	str.w	r0, [r0, #328]	; 0x148
 8004778:	f8c0 3140 	str.w	r3, [r0, #320]	; 0x140
}
 800477c:	4770      	bx	lr
 800477e:	bf00      	nop
 8004780:	0800548d 	.word	0x0800548d

08004784 <_ZN23FrontendApplicationBase57gotoMeasurement_Single_Display_3PScreenWipeTransitionEastEv>:
 8004784:	4b06      	ldr	r3, [pc, #24]	; (80047a0 <_ZN23FrontendApplicationBase57gotoMeasurement_Single_Display_3PScreenWipeTransitionEastEv+0x1c>)
 8004786:	f8c0 314c 	str.w	r3, [r0, #332]	; 0x14c
 800478a:	2300      	movs	r3, #0
 800478c:	f8c0 3150 	str.w	r3, [r0, #336]	; 0x150
    pendingScreenTransitionCallback = &transitionCallback;
 8004790:	f500 73a2 	add.w	r3, r0, #324	; 0x144
 8004794:	f8c0 0148 	str.w	r0, [r0, #328]	; 0x148
 8004798:	f8c0 3140 	str.w	r3, [r0, #320]	; 0x140
}
 800479c:	4770      	bx	lr
 800479e:	bf00      	nop
 80047a0:	0800534d 	.word	0x0800534d

080047a4 <_ZN23FrontendApplicationBase48gotoMeasurement_AccurateScreenWipeTransitionEastEv>:
 80047a4:	4b06      	ldr	r3, [pc, #24]	; (80047c0 <_ZN23FrontendApplicationBase48gotoMeasurement_AccurateScreenWipeTransitionEastEv+0x1c>)
 80047a6:	f8c0 314c 	str.w	r3, [r0, #332]	; 0x14c
 80047aa:	2300      	movs	r3, #0
 80047ac:	f8c0 3150 	str.w	r3, [r0, #336]	; 0x150
    pendingScreenTransitionCallback = &transitionCallback;
 80047b0:	f500 73a2 	add.w	r3, r0, #324	; 0x144
 80047b4:	f8c0 0148 	str.w	r0, [r0, #328]	; 0x148
 80047b8:	f8c0 3140 	str.w	r3, [r0, #320]	; 0x140
}
 80047bc:	4770      	bx	lr
 80047be:	bf00      	nop
 80047c0:	0800520d 	.word	0x0800520d

080047c4 <_ZN23FrontendApplicationBase48gotoMeasurement_AccurateScreenWipeTransitionWestEv>:
 80047c4:	4b06      	ldr	r3, [pc, #24]	; (80047e0 <_ZN23FrontendApplicationBase48gotoMeasurement_AccurateScreenWipeTransitionWestEv+0x1c>)
 80047c6:	f8c0 314c 	str.w	r3, [r0, #332]	; 0x14c
 80047ca:	2300      	movs	r3, #0
 80047cc:	f8c0 3150 	str.w	r3, [r0, #336]	; 0x150
    pendingScreenTransitionCallback = &transitionCallback;
 80047d0:	f500 73a2 	add.w	r3, r0, #324	; 0x144
 80047d4:	f8c0 0148 	str.w	r0, [r0, #328]	; 0x148
 80047d8:	f8c0 3140 	str.w	r3, [r0, #320]	; 0x140
}
 80047dc:	4770      	bx	lr
 80047de:	bf00      	nop
 80047e0:	080048e9 	.word	0x080048e9

080047e4 <_ZN23FrontendApplicationBase56gotoMeasurement_Accurate_DisplayScreenWipeTransitionEastEv>:
 80047e4:	4b06      	ldr	r3, [pc, #24]	; (8004800 <_ZN23FrontendApplicationBase56gotoMeasurement_Accurate_DisplayScreenWipeTransitionEastEv+0x1c>)
 80047e6:	f8c0 314c 	str.w	r3, [r0, #332]	; 0x14c
 80047ea:	2300      	movs	r3, #0
 80047ec:	f8c0 3150 	str.w	r3, [r0, #336]	; 0x150
    pendingScreenTransitionCallback = &transitionCallback;
 80047f0:	f500 73a2 	add.w	r3, r0, #324	; 0x144
 80047f4:	f8c0 0148 	str.w	r0, [r0, #328]	; 0x148
 80047f8:	f8c0 3140 	str.w	r3, [r0, #320]	; 0x140
}
 80047fc:	4770      	bx	lr
 80047fe:	bf00      	nop
 8004800:	080050cd 	.word	0x080050cd

08004804 <_ZN23FrontendApplicationBase58gotoMeasurement_Accurate_Display_2ScreenWipeTransitionEastEv>:
 8004804:	4b06      	ldr	r3, [pc, #24]	; (8004820 <_ZN23FrontendApplicationBase58gotoMeasurement_Accurate_Display_2ScreenWipeTransitionEastEv+0x1c>)
 8004806:	f8c0 314c 	str.w	r3, [r0, #332]	; 0x14c
 800480a:	2300      	movs	r3, #0
 800480c:	f8c0 3150 	str.w	r3, [r0, #336]	; 0x150
    pendingScreenTransitionCallback = &transitionCallback;
 8004810:	f500 73a2 	add.w	r3, r0, #324	; 0x144
 8004814:	f8c0 0148 	str.w	r0, [r0, #328]	; 0x148
 8004818:	f8c0 3140 	str.w	r3, [r0, #320]	; 0x140
}
 800481c:	4770      	bx	lr
 800481e:	bf00      	nop
 8004820:	08004f8d 	.word	0x08004f8d

08004824 <_ZN23FrontendApplicationBase43gotoCalibration_PadScreenWipeTransitionEastEv>:
 8004824:	4b06      	ldr	r3, [pc, #24]	; (8004840 <_ZN23FrontendApplicationBase43gotoCalibration_PadScreenWipeTransitionEastEv+0x1c>)
 8004826:	f8c0 314c 	str.w	r3, [r0, #332]	; 0x14c
 800482a:	2300      	movs	r3, #0
 800482c:	f8c0 3150 	str.w	r3, [r0, #336]	; 0x150
    pendingScreenTransitionCallback = &transitionCallback;
 8004830:	f500 73a2 	add.w	r3, r0, #324	; 0x144
 8004834:	f8c0 0148 	str.w	r0, [r0, #328]	; 0x148
 8004838:	f8c0 3140 	str.w	r3, [r0, #320]	; 0x140
}
 800483c:	4770      	bx	lr
 800483e:	bf00      	nop
 8004840:	08004e4d 	.word	0x08004e4d

08004844 <_ZN23FrontendApplicationBase40gotoProject_InfoScreenWipeTransitionEastEv>:
 8004844:	4b06      	ldr	r3, [pc, #24]	; (8004860 <_ZN23FrontendApplicationBase40gotoProject_InfoScreenWipeTransitionEastEv+0x1c>)
 8004846:	f8c0 314c 	str.w	r3, [r0, #332]	; 0x14c
 800484a:	2300      	movs	r3, #0
 800484c:	f8c0 3150 	str.w	r3, [r0, #336]	; 0x150
    pendingScreenTransitionCallback = &transitionCallback;
 8004850:	f500 73a2 	add.w	r3, r0, #324	; 0x144
 8004854:	f8c0 0148 	str.w	r0, [r0, #328]	; 0x148
 8004858:	f8c0 3140 	str.w	r3, [r0, #320]	; 0x140
}
 800485c:	4770      	bx	lr
 800485e:	bf00      	nop
 8004860:	08004d0d 	.word	0x08004d0d

08004864 <_ZN23FrontendApplicationBase34gotoShutting_OffScreenNoTransitionEv>:
 8004864:	4b06      	ldr	r3, [pc, #24]	; (8004880 <_ZN23FrontendApplicationBase34gotoShutting_OffScreenNoTransitionEv+0x1c>)
 8004866:	f8c0 314c 	str.w	r3, [r0, #332]	; 0x14c
 800486a:	2300      	movs	r3, #0
 800486c:	f8c0 3150 	str.w	r3, [r0, #336]	; 0x150
    pendingScreenTransitionCallback = &transitionCallback;
 8004870:	f500 73a2 	add.w	r3, r0, #324	; 0x144
 8004874:	f8c0 0148 	str.w	r0, [r0, #328]	; 0x148
 8004878:	f8c0 3140 	str.w	r3, [r0, #320]	; 0x140
}
 800487c:	4770      	bx	lr
 800487e:	bf00      	nop
 8004880:	08004309 	.word	0x08004309

08004884 <_ZN8touchgfx17AbstractPartition2atINS_14WipeTransitionILNS_9DirectionE3EEEEERT_t>:
 8004884:	6803      	ldr	r3, [r0, #0]
 8004886:	6a5b      	ldr	r3, [r3, #36]	; 0x24
 8004888:	4718      	bx	r3
	...

0800488c <_ZN8touchgfx14WipeTransitionILNS_9DirectionE3EEC1Eh>:
          solid()
 800488c:	4b12      	ldr	r3, [pc, #72]	; (80048d8 <_ZN8touchgfx14WipeTransitionILNS_9DirectionE3EEC1Eh+0x4c>)
    WipeTransition(const uint8_t transitionSteps = 20)
 800488e:	b513      	push	{r0, r1, r4, lr}
          solid()
 8004890:	6003      	str	r3, [r0, #0]
 8004892:	f44f 7380 	mov.w	r3, #256	; 0x100
 8004896:	6343      	str	r3, [r0, #52]	; 0x34
    class FullSolidRect : public Widget
 8004898:	4b10      	ldr	r3, [pc, #64]	; (80048dc <_ZN8touchgfx14WipeTransitionILNS_9DirectionE3EEC1Eh+0x50>)
          animationSteps(transitionSteps),
 800489a:	7241      	strb	r1, [r0, #9]
 800489c:	6103      	str	r3, [r0, #16]
        solid.setPosition(0, 0, HAL::DISPLAY_WIDTH, HAL::DISPLAY_HEIGHT);
 800489e:	4910      	ldr	r1, [pc, #64]	; (80048e0 <_ZN8touchgfx14WipeTransitionILNS_9DirectionE3EEC1Eh+0x54>)
            targetValue = HAL::DISPLAY_WIDTH;
 80048a0:	4b10      	ldr	r3, [pc, #64]	; (80048e4 <_ZN8touchgfx14WipeTransitionILNS_9DirectionE3EEC1Eh+0x58>)
        solid.setPosition(0, 0, HAL::DISPLAY_WIDTH, HAL::DISPLAY_HEIGHT);
 80048a2:	f9b1 1000 	ldrsh.w	r1, [r1]
            targetValue = HAL::DISPLAY_WIDTH;
 80048a6:	f9b3 3000 	ldrsh.w	r3, [r3]
 80048aa:	8183      	strh	r3, [r0, #12]
        : screenContainer(0), done(false)
 80048ac:	2200      	movs	r2, #0
 80048ae:	6042      	str	r2, [r0, #4]
 80048b0:	7202      	strb	r2, [r0, #8]
          animationCounter(0),
 80048b2:	7282      	strb	r2, [r0, #10]
          calculatedValue(0),
 80048b4:	81c2      	strh	r2, [r0, #14]
          solid()
 80048b6:	e9c0 2205 	strd	r2, r2, [r0, #20]
 80048ba:	e9c0 2207 	strd	r2, r2, [r0, #28]
 80048be:	e9c0 2209 	strd	r2, r2, [r0, #36]	; 0x24
 80048c2:	e9c0 220b 	strd	r2, r2, [r0, #44]	; 0x2c
    WipeTransition(const uint8_t transitionSteps = 20)
 80048c6:	4604      	mov	r4, r0
        solid.setPosition(0, 0, HAL::DISPLAY_WIDTH, HAL::DISPLAY_HEIGHT);
 80048c8:	9100      	str	r1, [sp, #0]
 80048ca:	3010      	adds	r0, #16
 80048cc:	4611      	mov	r1, r2
 80048ce:	f7fe f838 	bl	8002942 <_ZN8touchgfx8Drawable11setPositionEssss>
    }
 80048d2:	4620      	mov	r0, r4
 80048d4:	b002      	add	sp, #8
 80048d6:	bd10      	pop	{r4, pc}
 80048d8:	0802e3f4 	.word	0x0802e3f4
 80048dc:	0802e2d8 	.word	0x0802e2d8
 80048e0:	20013812 	.word	0x20013812
 80048e4:	20013810 	.word	0x20013810

080048e8 <_ZN23FrontendApplicationBase52gotoMeasurement_AccurateScreenWipeTransitionWestImplEv>:
{
 80048e8:	e92d 47f0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, lr}
    touchgfx::makeTransition<Measurement_AccurateView, Measurement_AccuratePresenter, touchgfx::WipeTransition<WEST>, Model >(&currentScreen, &currentPresenter, frontendHeap, &currentTransition, &model);
 80048ec:	e9d0 4a55 	ldrd	r4, sl, [r0, #340]	; 0x154
{
 80048f0:	4607      	mov	r7, r0
    assert(sizeof(ScreenType) <= heap.screenStorage.element_size() && "View allocation error: Check that all views are added to FrontendHeap::ViewTypes");
 80048f2:	68a0      	ldr	r0, [r4, #8]
 80048f4:	6803      	ldr	r3, [r0, #0]
 80048f6:	6a1b      	ldr	r3, [r3, #32]
 80048f8:	4798      	blx	r3
 80048fa:	f5b0 5f8a 	cmp.w	r0, #4416	; 0x1140
 80048fe:	d205      	bcs.n	800490c <_ZN23FrontendApplicationBase52gotoMeasurement_AccurateScreenWipeTransitionWestImplEv+0x24>
 8004900:	4b42      	ldr	r3, [pc, #264]	; (8004a0c <_ZN23FrontendApplicationBase52gotoMeasurement_AccurateScreenWipeTransitionWestImplEv+0x124>)
 8004902:	4a43      	ldr	r2, [pc, #268]	; (8004a10 <_ZN23FrontendApplicationBase52gotoMeasurement_AccurateScreenWipeTransitionWestImplEv+0x128>)
 8004904:	21a3      	movs	r1, #163	; 0xa3
    assert(sizeof(PresenterType) <= heap.presenterStorage.element_size() && "Presenter allocation error: Check that all presenters are added to FrontendHeap::PresenterTypes");
 8004906:	4843      	ldr	r0, [pc, #268]	; (8004a14 <_ZN23FrontendApplicationBase52gotoMeasurement_AccurateScreenWipeTransitionWestImplEv+0x12c>)
 8004908:	f026 fd2a 	bl	802b360 <__assert_func>
 800490c:	6860      	ldr	r0, [r4, #4]
 800490e:	6803      	ldr	r3, [r0, #0]
 8004910:	6a1b      	ldr	r3, [r3, #32]
 8004912:	4798      	blx	r3
 8004914:	280f      	cmp	r0, #15
 8004916:	d803      	bhi.n	8004920 <_ZN23FrontendApplicationBase52gotoMeasurement_AccurateScreenWipeTransitionWestImplEv+0x38>
 8004918:	4b3f      	ldr	r3, [pc, #252]	; (8004a18 <_ZN23FrontendApplicationBase52gotoMeasurement_AccurateScreenWipeTransitionWestImplEv+0x130>)
 800491a:	4a3d      	ldr	r2, [pc, #244]	; (8004a10 <_ZN23FrontendApplicationBase52gotoMeasurement_AccurateScreenWipeTransitionWestImplEv+0x128>)
 800491c:	21a4      	movs	r1, #164	; 0xa4
 800491e:	e7f2      	b.n	8004906 <_ZN23FrontendApplicationBase52gotoMeasurement_AccurateScreenWipeTransitionWestImplEv+0x1e>
    assert(sizeof(TransType) <= heap.transitionStorage.element_size() && "Transition allocation error: Check that all transitions are added to FrontendHeap::TransitionTypes");
 8004920:	68e0      	ldr	r0, [r4, #12]
 8004922:	6803      	ldr	r3, [r0, #0]
 8004924:	6a1b      	ldr	r3, [r3, #32]
 8004926:	4798      	blx	r3
 8004928:	2837      	cmp	r0, #55	; 0x37
 800492a:	d803      	bhi.n	8004934 <_ZN23FrontendApplicationBase52gotoMeasurement_AccurateScreenWipeTransitionWestImplEv+0x4c>
 800492c:	4b3b      	ldr	r3, [pc, #236]	; (8004a1c <_ZN23FrontendApplicationBase52gotoMeasurement_AccurateScreenWipeTransitionWestImplEv+0x134>)
 800492e:	4a38      	ldr	r2, [pc, #224]	; (8004a10 <_ZN23FrontendApplicationBase52gotoMeasurement_AccurateScreenWipeTransitionWestImplEv+0x128>)
 8004930:	21a5      	movs	r1, #165	; 0xa5
 8004932:	e7e8      	b.n	8004906 <_ZN23FrontendApplicationBase52gotoMeasurement_AccurateScreenWipeTransitionWestImplEv+0x1e>
    Application::getInstance()->clearAllTimerWidgets();
 8004934:	f011 fe4c 	bl	80165d0 <_ZN8touchgfx11Application11getInstanceEv>
    if (*currentTrans)
 8004938:	f8df 90e4 	ldr.w	r9, [pc, #228]	; 8004a20 <_ZN23FrontendApplicationBase52gotoMeasurement_AccurateScreenWipeTransitionWestImplEv+0x138>
 800493c:	3004      	adds	r0, #4
 800493e:	f011 fead 	bl	801669c <_ZN8touchgfx11Application12TimerWidgets5clearEv>
 8004942:	f8d9 0000 	ldr.w	r0, [r9]
 8004946:	b110      	cbz	r0, 800494e <_ZN23FrontendApplicationBase52gotoMeasurement_AccurateScreenWipeTransitionWestImplEv+0x66>
        (*currentTrans)->tearDown();
 8004948:	6803      	ldr	r3, [r0, #0]
 800494a:	68db      	ldr	r3, [r3, #12]
 800494c:	4798      	blx	r3
    if (*currentTrans)
 800494e:	f8d9 0000 	ldr.w	r0, [r9]
 8004952:	b110      	cbz	r0, 800495a <_ZN23FrontendApplicationBase52gotoMeasurement_AccurateScreenWipeTransitionWestImplEv+0x72>
        (*currentTrans)->~Transition();
 8004954:	6803      	ldr	r3, [r0, #0]
 8004956:	681b      	ldr	r3, [r3, #0]
 8004958:	4798      	blx	r3
    if (*currentScreen)
 800495a:	f8df 80c8 	ldr.w	r8, [pc, #200]	; 8004a24 <_ZN23FrontendApplicationBase52gotoMeasurement_AccurateScreenWipeTransitionWestImplEv+0x13c>
 800495e:	f8d8 0000 	ldr.w	r0, [r8]
 8004962:	b110      	cbz	r0, 800496a <_ZN23FrontendApplicationBase52gotoMeasurement_AccurateScreenWipeTransitionWestImplEv+0x82>
        (*currentScreen)->tearDownScreen();
 8004964:	6803      	ldr	r3, [r0, #0]
 8004966:	695b      	ldr	r3, [r3, #20]
 8004968:	4798      	blx	r3
    if (*currentPresenter)
 800496a:	f8d7 013c 	ldr.w	r0, [r7, #316]	; 0x13c
 800496e:	b110      	cbz	r0, 8004976 <_ZN23FrontendApplicationBase52gotoMeasurement_AccurateScreenWipeTransitionWestImplEv+0x8e>
        (*currentPresenter)->deactivate();
 8004970:	6803      	ldr	r3, [r0, #0]
 8004972:	685b      	ldr	r3, [r3, #4]
 8004974:	4798      	blx	r3
    if (*currentScreen)
 8004976:	f8d8 0000 	ldr.w	r0, [r8]
 800497a:	b110      	cbz	r0, 8004982 <_ZN23FrontendApplicationBase52gotoMeasurement_AccurateScreenWipeTransitionWestImplEv+0x9a>
        (*currentScreen)->~Screen();
 800497c:	6803      	ldr	r3, [r0, #0]
 800497e:	681b      	ldr	r3, [r3, #0]
 8004980:	4798      	blx	r3
    if (*currentPresenter)
 8004982:	f8d7 013c 	ldr.w	r0, [r7, #316]	; 0x13c
 8004986:	b110      	cbz	r0, 800498e <_ZN23FrontendApplicationBase52gotoMeasurement_AccurateScreenWipeTransitionWestImplEv+0xa6>
        (*currentPresenter)->~Presenter();
 8004988:	6803      	ldr	r3, [r0, #0]
 800498a:	689b      	ldr	r3, [r3, #8]
 800498c:	4798      	blx	r3
    TransType* newTransition = new (&heap.transitionStorage.at<TransType>(0)) TransType;
 800498e:	68e0      	ldr	r0, [r4, #12]
 8004990:	2100      	movs	r1, #0
 8004992:	f7ff ff77 	bl	8004884 <_ZN8touchgfx17AbstractPartition2atINS_14WipeTransitionILNS_9DirectionE3EEEEERT_t>
 8004996:	2114      	movs	r1, #20
 8004998:	4605      	mov	r5, r0
 800499a:	f7ff ff77 	bl	800488c <_ZN8touchgfx14WipeTransitionILNS_9DirectionE3EEC1Eh>
    ScreenType* newScreen = new (&heap.screenStorage.at<ScreenType>(0)) ScreenType;
 800499e:	68a0      	ldr	r0, [r4, #8]
 80049a0:	6803      	ldr	r3, [r0, #0]
 80049a2:	2100      	movs	r1, #0
 80049a4:	6a5b      	ldr	r3, [r3, #36]	; 0x24
 80049a6:	4798      	blx	r3
 80049a8:	4606      	mov	r6, r0
 80049aa:	f004 f91d 	bl	8008be8 <_ZN24Measurement_AccurateViewC1Ev>
    PresenterType* newPresenter = new (&heap.presenterStorage.at<PresenterType>(0)) PresenterType(*newScreen);
 80049ae:	6860      	ldr	r0, [r4, #4]
 80049b0:	6803      	ldr	r3, [r0, #0]
 80049b2:	2100      	movs	r1, #0
 80049b4:	6a5b      	ldr	r3, [r3, #36]	; 0x24
 80049b6:	4798      	blx	r3
 80049b8:	4631      	mov	r1, r6
 80049ba:	4604      	mov	r4, r0
 80049bc:	f004 f8ee 	bl	8008b9c <_ZN29Measurement_AccuratePresenterC1ER24Measurement_AccurateView>
    *currentTrans = newTransition;
 80049c0:	f8c9 5000 	str.w	r5, [r9]
    *currentPresenter = newPresenter;
 80049c4:	f8c7 413c 	str.w	r4, [r7, #316]	; 0x13c
    *currentScreen = newScreen;
 80049c8:	f8c8 6000 	str.w	r6, [r8]
    model->bind(newPresenter);
 80049cc:	b1dc      	cbz	r4, 8004a06 <_ZN23FrontendApplicationBase52gotoMeasurement_AccurateScreenWipeTransitionWestImplEv+0x11e>
 80049ce:	1d23      	adds	r3, r4, #4
 80049d0:	f8ca 3000 	str.w	r3, [sl]
    newScreen->setupScreen();
 80049d4:	6833      	ldr	r3, [r6, #0]
 80049d6:	f8c4 a008 	str.w	sl, [r4, #8]
 80049da:	4630      	mov	r0, r6
 80049dc:	68db      	ldr	r3, [r3, #12]
 80049de:	63f4      	str	r4, [r6, #60]	; 0x3c
 80049e0:	4798      	blx	r3
    newPresenter->activate();
 80049e2:	6823      	ldr	r3, [r4, #0]
 80049e4:	4620      	mov	r0, r4
 80049e6:	681b      	ldr	r3, [r3, #0]
 80049e8:	4798      	blx	r3
    newScreen->bindTransition(*newTransition);
 80049ea:	4629      	mov	r1, r5
 80049ec:	4630      	mov	r0, r6
 80049ee:	f013 fc1b 	bl	8018228 <_ZN8touchgfx6Screen14bindTransitionERNS_10TransitionE>
    newTransition->init();
 80049f2:	682b      	ldr	r3, [r5, #0]
 80049f4:	4628      	mov	r0, r5
 80049f6:	691b      	ldr	r3, [r3, #16]
 80049f8:	4798      	blx	r3
    newTransition->invalidate();
 80049fa:	682b      	ldr	r3, [r5, #0]
 80049fc:	4628      	mov	r0, r5
 80049fe:	695b      	ldr	r3, [r3, #20]
}
 8004a00:	e8bd 47f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, lr}
 8004a04:	4718      	bx	r3
    model->bind(newPresenter);
 8004a06:	4623      	mov	r3, r4
 8004a08:	e7e2      	b.n	80049d0 <_ZN23FrontendApplicationBase52gotoMeasurement_AccurateScreenWipeTransitionWestImplEv+0xe8>
 8004a0a:	bf00      	nop
 8004a0c:	0802d06c 	.word	0x0802d06c
 8004a10:	0802d49d 	.word	0x0802d49d
 8004a14:	0802d208 	.word	0x0802d208
 8004a18:	0802d24f 	.word	0x0802d24f
 8004a1c:	0802d2f2 	.word	0x0802d2f2
 8004a20:	20013864 	.word	0x20013864
 8004a24:	20013860 	.word	0x20013860

08004a28 <_ZN23FrontendApplicationBase43gotoMeasurementScreenWipeTransitionWestImplEv>:
{
 8004a28:	e92d 47f0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, lr}
    touchgfx::makeTransition<MeasurementView, MeasurementPresenter, touchgfx::WipeTransition<WEST>, Model >(&currentScreen, &currentPresenter, frontendHeap, &currentTransition, &model);
 8004a2c:	e9d0 4a55 	ldrd	r4, sl, [r0, #340]	; 0x154
{
 8004a30:	4607      	mov	r7, r0
    assert(sizeof(ScreenType) <= heap.screenStorage.element_size() && "View allocation error: Check that all views are added to FrontendHeap::ViewTypes");
 8004a32:	68a0      	ldr	r0, [r4, #8]
 8004a34:	6803      	ldr	r3, [r0, #0]
 8004a36:	6a1b      	ldr	r3, [r3, #32]
 8004a38:	4798      	blx	r3
 8004a3a:	f5b0 5f8a 	cmp.w	r0, #4416	; 0x1140
 8004a3e:	d205      	bcs.n	8004a4c <_ZN23FrontendApplicationBase43gotoMeasurementScreenWipeTransitionWestImplEv+0x24>
 8004a40:	4b42      	ldr	r3, [pc, #264]	; (8004b4c <_ZN23FrontendApplicationBase43gotoMeasurementScreenWipeTransitionWestImplEv+0x124>)
 8004a42:	4a43      	ldr	r2, [pc, #268]	; (8004b50 <_ZN23FrontendApplicationBase43gotoMeasurementScreenWipeTransitionWestImplEv+0x128>)
 8004a44:	21a3      	movs	r1, #163	; 0xa3
    assert(sizeof(PresenterType) <= heap.presenterStorage.element_size() && "Presenter allocation error: Check that all presenters are added to FrontendHeap::PresenterTypes");
 8004a46:	4843      	ldr	r0, [pc, #268]	; (8004b54 <_ZN23FrontendApplicationBase43gotoMeasurementScreenWipeTransitionWestImplEv+0x12c>)
 8004a48:	f026 fc8a 	bl	802b360 <__assert_func>
 8004a4c:	6860      	ldr	r0, [r4, #4]
 8004a4e:	6803      	ldr	r3, [r0, #0]
 8004a50:	6a1b      	ldr	r3, [r3, #32]
 8004a52:	4798      	blx	r3
 8004a54:	280f      	cmp	r0, #15
 8004a56:	d803      	bhi.n	8004a60 <_ZN23FrontendApplicationBase43gotoMeasurementScreenWipeTransitionWestImplEv+0x38>
 8004a58:	4b3f      	ldr	r3, [pc, #252]	; (8004b58 <_ZN23FrontendApplicationBase43gotoMeasurementScreenWipeTransitionWestImplEv+0x130>)
 8004a5a:	4a3d      	ldr	r2, [pc, #244]	; (8004b50 <_ZN23FrontendApplicationBase43gotoMeasurementScreenWipeTransitionWestImplEv+0x128>)
 8004a5c:	21a4      	movs	r1, #164	; 0xa4
 8004a5e:	e7f2      	b.n	8004a46 <_ZN23FrontendApplicationBase43gotoMeasurementScreenWipeTransitionWestImplEv+0x1e>
    assert(sizeof(TransType) <= heap.transitionStorage.element_size() && "Transition allocation error: Check that all transitions are added to FrontendHeap::TransitionTypes");
 8004a60:	68e0      	ldr	r0, [r4, #12]
 8004a62:	6803      	ldr	r3, [r0, #0]
 8004a64:	6a1b      	ldr	r3, [r3, #32]
 8004a66:	4798      	blx	r3
 8004a68:	2837      	cmp	r0, #55	; 0x37
 8004a6a:	d803      	bhi.n	8004a74 <_ZN23FrontendApplicationBase43gotoMeasurementScreenWipeTransitionWestImplEv+0x4c>
 8004a6c:	4b3b      	ldr	r3, [pc, #236]	; (8004b5c <_ZN23FrontendApplicationBase43gotoMeasurementScreenWipeTransitionWestImplEv+0x134>)
 8004a6e:	4a38      	ldr	r2, [pc, #224]	; (8004b50 <_ZN23FrontendApplicationBase43gotoMeasurementScreenWipeTransitionWestImplEv+0x128>)
 8004a70:	21a5      	movs	r1, #165	; 0xa5
 8004a72:	e7e8      	b.n	8004a46 <_ZN23FrontendApplicationBase43gotoMeasurementScreenWipeTransitionWestImplEv+0x1e>
    Application::getInstance()->clearAllTimerWidgets();
 8004a74:	f011 fdac 	bl	80165d0 <_ZN8touchgfx11Application11getInstanceEv>
    if (*currentTrans)
 8004a78:	f8df 90e4 	ldr.w	r9, [pc, #228]	; 8004b60 <_ZN23FrontendApplicationBase43gotoMeasurementScreenWipeTransitionWestImplEv+0x138>
 8004a7c:	3004      	adds	r0, #4
 8004a7e:	f011 fe0d 	bl	801669c <_ZN8touchgfx11Application12TimerWidgets5clearEv>
 8004a82:	f8d9 0000 	ldr.w	r0, [r9]
 8004a86:	b110      	cbz	r0, 8004a8e <_ZN23FrontendApplicationBase43gotoMeasurementScreenWipeTransitionWestImplEv+0x66>
        (*currentTrans)->tearDown();
 8004a88:	6803      	ldr	r3, [r0, #0]
 8004a8a:	68db      	ldr	r3, [r3, #12]
 8004a8c:	4798      	blx	r3
    if (*currentTrans)
 8004a8e:	f8d9 0000 	ldr.w	r0, [r9]
 8004a92:	b110      	cbz	r0, 8004a9a <_ZN23FrontendApplicationBase43gotoMeasurementScreenWipeTransitionWestImplEv+0x72>
        (*currentTrans)->~Transition();
 8004a94:	6803      	ldr	r3, [r0, #0]
 8004a96:	681b      	ldr	r3, [r3, #0]
 8004a98:	4798      	blx	r3
    if (*currentScreen)
 8004a9a:	f8df 80c8 	ldr.w	r8, [pc, #200]	; 8004b64 <_ZN23FrontendApplicationBase43gotoMeasurementScreenWipeTransitionWestImplEv+0x13c>
 8004a9e:	f8d8 0000 	ldr.w	r0, [r8]
 8004aa2:	b110      	cbz	r0, 8004aaa <_ZN23FrontendApplicationBase43gotoMeasurementScreenWipeTransitionWestImplEv+0x82>
        (*currentScreen)->tearDownScreen();
 8004aa4:	6803      	ldr	r3, [r0, #0]
 8004aa6:	695b      	ldr	r3, [r3, #20]
 8004aa8:	4798      	blx	r3
    if (*currentPresenter)
 8004aaa:	f8d7 013c 	ldr.w	r0, [r7, #316]	; 0x13c
 8004aae:	b110      	cbz	r0, 8004ab6 <_ZN23FrontendApplicationBase43gotoMeasurementScreenWipeTransitionWestImplEv+0x8e>
        (*currentPresenter)->deactivate();
 8004ab0:	6803      	ldr	r3, [r0, #0]
 8004ab2:	685b      	ldr	r3, [r3, #4]
 8004ab4:	4798      	blx	r3
    if (*currentScreen)
 8004ab6:	f8d8 0000 	ldr.w	r0, [r8]
 8004aba:	b110      	cbz	r0, 8004ac2 <_ZN23FrontendApplicationBase43gotoMeasurementScreenWipeTransitionWestImplEv+0x9a>
        (*currentScreen)->~Screen();
 8004abc:	6803      	ldr	r3, [r0, #0]
 8004abe:	681b      	ldr	r3, [r3, #0]
 8004ac0:	4798      	blx	r3
    if (*currentPresenter)
 8004ac2:	f8d7 013c 	ldr.w	r0, [r7, #316]	; 0x13c
 8004ac6:	b110      	cbz	r0, 8004ace <_ZN23FrontendApplicationBase43gotoMeasurementScreenWipeTransitionWestImplEv+0xa6>
        (*currentPresenter)->~Presenter();
 8004ac8:	6803      	ldr	r3, [r0, #0]
 8004aca:	689b      	ldr	r3, [r3, #8]
 8004acc:	4798      	blx	r3
    TransType* newTransition = new (&heap.transitionStorage.at<TransType>(0)) TransType;
 8004ace:	68e0      	ldr	r0, [r4, #12]
 8004ad0:	2100      	movs	r1, #0
 8004ad2:	f7ff fed7 	bl	8004884 <_ZN8touchgfx17AbstractPartition2atINS_14WipeTransitionILNS_9DirectionE3EEEEERT_t>
 8004ad6:	2114      	movs	r1, #20
 8004ad8:	4605      	mov	r5, r0
 8004ada:	f7ff fed7 	bl	800488c <_ZN8touchgfx14WipeTransitionILNS_9DirectionE3EEC1Eh>
    ScreenType* newScreen = new (&heap.screenStorage.at<ScreenType>(0)) ScreenType;
 8004ade:	68a0      	ldr	r0, [r4, #8]
 8004ae0:	6803      	ldr	r3, [r0, #0]
 8004ae2:	2100      	movs	r1, #0
 8004ae4:	6a5b      	ldr	r3, [r3, #36]	; 0x24
 8004ae6:	4798      	blx	r3
 8004ae8:	4606      	mov	r6, r0
 8004aea:	f004 f81d 	bl	8008b28 <_ZN15MeasurementViewC1Ev>
    PresenterType* newPresenter = new (&heap.presenterStorage.at<PresenterType>(0)) PresenterType(*newScreen);
 8004aee:	6860      	ldr	r0, [r4, #4]
 8004af0:	6803      	ldr	r3, [r0, #0]
 8004af2:	2100      	movs	r1, #0
 8004af4:	6a5b      	ldr	r3, [r3, #36]	; 0x24
 8004af6:	4798      	blx	r3
 8004af8:	4631      	mov	r1, r6
 8004afa:	4604      	mov	r4, r0
 8004afc:	f003 ffee 	bl	8008adc <_ZN20MeasurementPresenterC1ER15MeasurementView>
    *currentTrans = newTransition;
 8004b00:	f8c9 5000 	str.w	r5, [r9]
    *currentPresenter = newPresenter;
 8004b04:	f8c7 413c 	str.w	r4, [r7, #316]	; 0x13c
    *currentScreen = newScreen;
 8004b08:	f8c8 6000 	str.w	r6, [r8]
    model->bind(newPresenter);
 8004b0c:	b1dc      	cbz	r4, 8004b46 <_ZN23FrontendApplicationBase43gotoMeasurementScreenWipeTransitionWestImplEv+0x11e>
 8004b0e:	1d23      	adds	r3, r4, #4
 8004b10:	f8ca 3000 	str.w	r3, [sl]
    newScreen->setupScreen();
 8004b14:	6833      	ldr	r3, [r6, #0]
 8004b16:	f8c4 a008 	str.w	sl, [r4, #8]
 8004b1a:	4630      	mov	r0, r6
 8004b1c:	68db      	ldr	r3, [r3, #12]
 8004b1e:	63f4      	str	r4, [r6, #60]	; 0x3c
 8004b20:	4798      	blx	r3
    newPresenter->activate();
 8004b22:	6823      	ldr	r3, [r4, #0]
 8004b24:	4620      	mov	r0, r4
 8004b26:	681b      	ldr	r3, [r3, #0]
 8004b28:	4798      	blx	r3
    newScreen->bindTransition(*newTransition);
 8004b2a:	4629      	mov	r1, r5
 8004b2c:	4630      	mov	r0, r6
 8004b2e:	f013 fb7b 	bl	8018228 <_ZN8touchgfx6Screen14bindTransitionERNS_10TransitionE>
    newTransition->init();
 8004b32:	682b      	ldr	r3, [r5, #0]
 8004b34:	4628      	mov	r0, r5
 8004b36:	691b      	ldr	r3, [r3, #16]
 8004b38:	4798      	blx	r3
    newTransition->invalidate();
 8004b3a:	682b      	ldr	r3, [r5, #0]
 8004b3c:	4628      	mov	r0, r5
 8004b3e:	695b      	ldr	r3, [r3, #20]
}
 8004b40:	e8bd 47f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, lr}
 8004b44:	4718      	bx	r3
    model->bind(newPresenter);
 8004b46:	4623      	mov	r3, r4
 8004b48:	e7e2      	b.n	8004b10 <_ZN23FrontendApplicationBase43gotoMeasurementScreenWipeTransitionWestImplEv+0xe8>
 8004b4a:	bf00      	nop
 8004b4c:	0802d06c 	.word	0x0802d06c
 8004b50:	0802d5cd 	.word	0x0802d5cd
 8004b54:	0802d208 	.word	0x0802d208
 8004b58:	0802d24f 	.word	0x0802d24f
 8004b5c:	0802d2f2 	.word	0x0802d2f2
 8004b60:	20013864 	.word	0x20013864
 8004b64:	20013860 	.word	0x20013860

08004b68 <_ZN23FrontendApplicationBase41gotoMain_MenuScreenWipeTransitionWestImplEv>:
{
 8004b68:	e92d 47f0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, lr}
    touchgfx::makeTransition<Main_MenuView, Main_MenuPresenter, touchgfx::WipeTransition<WEST>, Model >(&currentScreen, &currentPresenter, frontendHeap, &currentTransition, &model);
 8004b6c:	e9d0 4a55 	ldrd	r4, sl, [r0, #340]	; 0x154
{
 8004b70:	4607      	mov	r7, r0
    assert(sizeof(ScreenType) <= heap.screenStorage.element_size() && "View allocation error: Check that all views are added to FrontendHeap::ViewTypes");
 8004b72:	68a0      	ldr	r0, [r4, #8]
 8004b74:	6803      	ldr	r3, [r0, #0]
 8004b76:	6a1b      	ldr	r3, [r3, #32]
 8004b78:	4798      	blx	r3
 8004b7a:	f241 137b 	movw	r3, #4475	; 0x117b
 8004b7e:	4298      	cmp	r0, r3
 8004b80:	d805      	bhi.n	8004b8e <_ZN23FrontendApplicationBase41gotoMain_MenuScreenWipeTransitionWestImplEv+0x26>
 8004b82:	4b42      	ldr	r3, [pc, #264]	; (8004c8c <_ZN23FrontendApplicationBase41gotoMain_MenuScreenWipeTransitionWestImplEv+0x124>)
 8004b84:	4a42      	ldr	r2, [pc, #264]	; (8004c90 <_ZN23FrontendApplicationBase41gotoMain_MenuScreenWipeTransitionWestImplEv+0x128>)
 8004b86:	21a3      	movs	r1, #163	; 0xa3
    assert(sizeof(PresenterType) <= heap.presenterStorage.element_size() && "Presenter allocation error: Check that all presenters are added to FrontendHeap::PresenterTypes");
 8004b88:	4842      	ldr	r0, [pc, #264]	; (8004c94 <_ZN23FrontendApplicationBase41gotoMain_MenuScreenWipeTransitionWestImplEv+0x12c>)
 8004b8a:	f026 fbe9 	bl	802b360 <__assert_func>
 8004b8e:	6860      	ldr	r0, [r4, #4]
 8004b90:	6803      	ldr	r3, [r0, #0]
 8004b92:	6a1b      	ldr	r3, [r3, #32]
 8004b94:	4798      	blx	r3
 8004b96:	280f      	cmp	r0, #15
 8004b98:	d803      	bhi.n	8004ba2 <_ZN23FrontendApplicationBase41gotoMain_MenuScreenWipeTransitionWestImplEv+0x3a>
 8004b9a:	4b3f      	ldr	r3, [pc, #252]	; (8004c98 <_ZN23FrontendApplicationBase41gotoMain_MenuScreenWipeTransitionWestImplEv+0x130>)
 8004b9c:	4a3c      	ldr	r2, [pc, #240]	; (8004c90 <_ZN23FrontendApplicationBase41gotoMain_MenuScreenWipeTransitionWestImplEv+0x128>)
 8004b9e:	21a4      	movs	r1, #164	; 0xa4
 8004ba0:	e7f2      	b.n	8004b88 <_ZN23FrontendApplicationBase41gotoMain_MenuScreenWipeTransitionWestImplEv+0x20>
    assert(sizeof(TransType) <= heap.transitionStorage.element_size() && "Transition allocation error: Check that all transitions are added to FrontendHeap::TransitionTypes");
 8004ba2:	68e0      	ldr	r0, [r4, #12]
 8004ba4:	6803      	ldr	r3, [r0, #0]
 8004ba6:	6a1b      	ldr	r3, [r3, #32]
 8004ba8:	4798      	blx	r3
 8004baa:	2837      	cmp	r0, #55	; 0x37
 8004bac:	d803      	bhi.n	8004bb6 <_ZN23FrontendApplicationBase41gotoMain_MenuScreenWipeTransitionWestImplEv+0x4e>
 8004bae:	4b3b      	ldr	r3, [pc, #236]	; (8004c9c <_ZN23FrontendApplicationBase41gotoMain_MenuScreenWipeTransitionWestImplEv+0x134>)
 8004bb0:	4a37      	ldr	r2, [pc, #220]	; (8004c90 <_ZN23FrontendApplicationBase41gotoMain_MenuScreenWipeTransitionWestImplEv+0x128>)
 8004bb2:	21a5      	movs	r1, #165	; 0xa5
 8004bb4:	e7e8      	b.n	8004b88 <_ZN23FrontendApplicationBase41gotoMain_MenuScreenWipeTransitionWestImplEv+0x20>
    Application::getInstance()->clearAllTimerWidgets();
 8004bb6:	f011 fd0b 	bl	80165d0 <_ZN8touchgfx11Application11getInstanceEv>
    if (*currentTrans)
 8004bba:	f8df 90e4 	ldr.w	r9, [pc, #228]	; 8004ca0 <_ZN23FrontendApplicationBase41gotoMain_MenuScreenWipeTransitionWestImplEv+0x138>
 8004bbe:	3004      	adds	r0, #4
 8004bc0:	f011 fd6c 	bl	801669c <_ZN8touchgfx11Application12TimerWidgets5clearEv>
 8004bc4:	f8d9 0000 	ldr.w	r0, [r9]
 8004bc8:	b110      	cbz	r0, 8004bd0 <_ZN23FrontendApplicationBase41gotoMain_MenuScreenWipeTransitionWestImplEv+0x68>
        (*currentTrans)->tearDown();
 8004bca:	6803      	ldr	r3, [r0, #0]
 8004bcc:	68db      	ldr	r3, [r3, #12]
 8004bce:	4798      	blx	r3
    if (*currentTrans)
 8004bd0:	f8d9 0000 	ldr.w	r0, [r9]
 8004bd4:	b110      	cbz	r0, 8004bdc <_ZN23FrontendApplicationBase41gotoMain_MenuScreenWipeTransitionWestImplEv+0x74>
        (*currentTrans)->~Transition();
 8004bd6:	6803      	ldr	r3, [r0, #0]
 8004bd8:	681b      	ldr	r3, [r3, #0]
 8004bda:	4798      	blx	r3
    if (*currentScreen)
 8004bdc:	f8df 80c4 	ldr.w	r8, [pc, #196]	; 8004ca4 <_ZN23FrontendApplicationBase41gotoMain_MenuScreenWipeTransitionWestImplEv+0x13c>
 8004be0:	f8d8 0000 	ldr.w	r0, [r8]
 8004be4:	b110      	cbz	r0, 8004bec <_ZN23FrontendApplicationBase41gotoMain_MenuScreenWipeTransitionWestImplEv+0x84>
        (*currentScreen)->tearDownScreen();
 8004be6:	6803      	ldr	r3, [r0, #0]
 8004be8:	695b      	ldr	r3, [r3, #20]
 8004bea:	4798      	blx	r3
    if (*currentPresenter)
 8004bec:	f8d7 013c 	ldr.w	r0, [r7, #316]	; 0x13c
 8004bf0:	b110      	cbz	r0, 8004bf8 <_ZN23FrontendApplicationBase41gotoMain_MenuScreenWipeTransitionWestImplEv+0x90>
        (*currentPresenter)->deactivate();
 8004bf2:	6803      	ldr	r3, [r0, #0]
 8004bf4:	685b      	ldr	r3, [r3, #4]
 8004bf6:	4798      	blx	r3
    if (*currentScreen)
 8004bf8:	f8d8 0000 	ldr.w	r0, [r8]
 8004bfc:	b110      	cbz	r0, 8004c04 <_ZN23FrontendApplicationBase41gotoMain_MenuScreenWipeTransitionWestImplEv+0x9c>
        (*currentScreen)->~Screen();
 8004bfe:	6803      	ldr	r3, [r0, #0]
 8004c00:	681b      	ldr	r3, [r3, #0]
 8004c02:	4798      	blx	r3
    if (*currentPresenter)
 8004c04:	f8d7 013c 	ldr.w	r0, [r7, #316]	; 0x13c
 8004c08:	b110      	cbz	r0, 8004c10 <_ZN23FrontendApplicationBase41gotoMain_MenuScreenWipeTransitionWestImplEv+0xa8>
        (*currentPresenter)->~Presenter();
 8004c0a:	6803      	ldr	r3, [r0, #0]
 8004c0c:	689b      	ldr	r3, [r3, #8]
 8004c0e:	4798      	blx	r3
    TransType* newTransition = new (&heap.transitionStorage.at<TransType>(0)) TransType;
 8004c10:	68e0      	ldr	r0, [r4, #12]
 8004c12:	2100      	movs	r1, #0
 8004c14:	f7ff fe36 	bl	8004884 <_ZN8touchgfx17AbstractPartition2atINS_14WipeTransitionILNS_9DirectionE3EEEEERT_t>
 8004c18:	2114      	movs	r1, #20
 8004c1a:	4605      	mov	r5, r0
 8004c1c:	f7ff fe36 	bl	800488c <_ZN8touchgfx14WipeTransitionILNS_9DirectionE3EEC1Eh>
    ScreenType* newScreen = new (&heap.screenStorage.at<ScreenType>(0)) ScreenType;
 8004c20:	68a0      	ldr	r0, [r4, #8]
 8004c22:	6803      	ldr	r3, [r0, #0]
 8004c24:	2100      	movs	r1, #0
 8004c26:	6a5b      	ldr	r3, [r3, #36]	; 0x24
 8004c28:	4798      	blx	r3
 8004c2a:	4606      	mov	r6, r0
 8004c2c:	f003 ff1c 	bl	8008a68 <_ZN13Main_MenuViewC1Ev>
    PresenterType* newPresenter = new (&heap.presenterStorage.at<PresenterType>(0)) PresenterType(*newScreen);
 8004c30:	6860      	ldr	r0, [r4, #4]
 8004c32:	6803      	ldr	r3, [r0, #0]
 8004c34:	2100      	movs	r1, #0
 8004c36:	6a5b      	ldr	r3, [r3, #36]	; 0x24
 8004c38:	4798      	blx	r3
 8004c3a:	4631      	mov	r1, r6
 8004c3c:	4604      	mov	r4, r0
 8004c3e:	f003 feed 	bl	8008a1c <_ZN18Main_MenuPresenterC1ER13Main_MenuView>
    *currentTrans = newTransition;
 8004c42:	f8c9 5000 	str.w	r5, [r9]
    *currentPresenter = newPresenter;
 8004c46:	f8c7 413c 	str.w	r4, [r7, #316]	; 0x13c
    *currentScreen = newScreen;
 8004c4a:	f8c8 6000 	str.w	r6, [r8]
    model->bind(newPresenter);
 8004c4e:	b1dc      	cbz	r4, 8004c88 <_ZN23FrontendApplicationBase41gotoMain_MenuScreenWipeTransitionWestImplEv+0x120>
 8004c50:	1d23      	adds	r3, r4, #4
 8004c52:	f8ca 3000 	str.w	r3, [sl]
    newScreen->setupScreen();
 8004c56:	6833      	ldr	r3, [r6, #0]
 8004c58:	f8c4 a008 	str.w	sl, [r4, #8]
 8004c5c:	4630      	mov	r0, r6
 8004c5e:	68db      	ldr	r3, [r3, #12]
 8004c60:	63f4      	str	r4, [r6, #60]	; 0x3c
 8004c62:	4798      	blx	r3
    newPresenter->activate();
 8004c64:	6823      	ldr	r3, [r4, #0]
 8004c66:	4620      	mov	r0, r4
 8004c68:	681b      	ldr	r3, [r3, #0]
 8004c6a:	4798      	blx	r3
    newScreen->bindTransition(*newTransition);
 8004c6c:	4629      	mov	r1, r5
 8004c6e:	4630      	mov	r0, r6
 8004c70:	f013 fada 	bl	8018228 <_ZN8touchgfx6Screen14bindTransitionERNS_10TransitionE>
    newTransition->init();
 8004c74:	682b      	ldr	r3, [r5, #0]
 8004c76:	4628      	mov	r0, r5
 8004c78:	691b      	ldr	r3, [r3, #16]
 8004c7a:	4798      	blx	r3
    newTransition->invalidate();
 8004c7c:	682b      	ldr	r3, [r5, #0]
 8004c7e:	4628      	mov	r0, r5
 8004c80:	695b      	ldr	r3, [r3, #20]
}
 8004c82:	e8bd 47f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, lr}
 8004c86:	4718      	bx	r3
    model->bind(newPresenter);
 8004c88:	4623      	mov	r3, r4
 8004c8a:	e7e2      	b.n	8004c52 <_ZN23FrontendApplicationBase41gotoMain_MenuScreenWipeTransitionWestImplEv+0xea>
 8004c8c:	0802d06c 	.word	0x0802d06c
 8004c90:	0802d6eb 	.word	0x0802d6eb
 8004c94:	0802d208 	.word	0x0802d208
 8004c98:	0802d24f 	.word	0x0802d24f
 8004c9c:	0802d2f2 	.word	0x0802d2f2
 8004ca0:	20013864 	.word	0x20013864
 8004ca4:	20013860 	.word	0x20013860

08004ca8 <_ZN8touchgfx17AbstractPartition2atINS_14WipeTransitionILNS_9DirectionE2EEEEERT_t>:
 8004ca8:	6803      	ldr	r3, [r0, #0]
 8004caa:	6a5b      	ldr	r3, [r3, #36]	; 0x24
 8004cac:	4718      	bx	r3
	...

08004cb0 <_ZN8touchgfx14WipeTransitionILNS_9DirectionE2EEC1Eh>:
          solid()
 8004cb0:	4b12      	ldr	r3, [pc, #72]	; (8004cfc <_ZN8touchgfx14WipeTransitionILNS_9DirectionE2EEC1Eh+0x4c>)
    WipeTransition(const uint8_t transitionSteps = 20)
 8004cb2:	b513      	push	{r0, r1, r4, lr}
          solid()
 8004cb4:	6003      	str	r3, [r0, #0]
 8004cb6:	f44f 7380 	mov.w	r3, #256	; 0x100
 8004cba:	6343      	str	r3, [r0, #52]	; 0x34
    class FullSolidRect : public Widget
 8004cbc:	4b10      	ldr	r3, [pc, #64]	; (8004d00 <_ZN8touchgfx14WipeTransitionILNS_9DirectionE2EEC1Eh+0x50>)
          animationSteps(transitionSteps),
 8004cbe:	7241      	strb	r1, [r0, #9]
 8004cc0:	6103      	str	r3, [r0, #16]
        solid.setPosition(0, 0, HAL::DISPLAY_WIDTH, HAL::DISPLAY_HEIGHT);
 8004cc2:	4910      	ldr	r1, [pc, #64]	; (8004d04 <_ZN8touchgfx14WipeTransitionILNS_9DirectionE2EEC1Eh+0x54>)
            targetValue = HAL::DISPLAY_WIDTH;
 8004cc4:	4b10      	ldr	r3, [pc, #64]	; (8004d08 <_ZN8touchgfx14WipeTransitionILNS_9DirectionE2EEC1Eh+0x58>)
        solid.setPosition(0, 0, HAL::DISPLAY_WIDTH, HAL::DISPLAY_HEIGHT);
 8004cc6:	f9b1 1000 	ldrsh.w	r1, [r1]
            targetValue = HAL::DISPLAY_WIDTH;
 8004cca:	f9b3 3000 	ldrsh.w	r3, [r3]
 8004cce:	8183      	strh	r3, [r0, #12]
        : screenContainer(0), done(false)
 8004cd0:	2200      	movs	r2, #0
 8004cd2:	6042      	str	r2, [r0, #4]
 8004cd4:	7202      	strb	r2, [r0, #8]
          animationCounter(0),
 8004cd6:	7282      	strb	r2, [r0, #10]
          calculatedValue(0),
 8004cd8:	81c2      	strh	r2, [r0, #14]
          solid()
 8004cda:	e9c0 2205 	strd	r2, r2, [r0, #20]
 8004cde:	e9c0 2207 	strd	r2, r2, [r0, #28]
 8004ce2:	e9c0 2209 	strd	r2, r2, [r0, #36]	; 0x24
 8004ce6:	e9c0 220b 	strd	r2, r2, [r0, #44]	; 0x2c
    WipeTransition(const uint8_t transitionSteps = 20)
 8004cea:	4604      	mov	r4, r0
        solid.setPosition(0, 0, HAL::DISPLAY_WIDTH, HAL::DISPLAY_HEIGHT);
 8004cec:	9100      	str	r1, [sp, #0]
 8004cee:	3010      	adds	r0, #16
 8004cf0:	4611      	mov	r1, r2
 8004cf2:	f7fd fe26 	bl	8002942 <_ZN8touchgfx8Drawable11setPositionEssss>
    }
 8004cf6:	4620      	mov	r0, r4
 8004cf8:	b002      	add	sp, #8
 8004cfa:	bd10      	pop	{r4, pc}
 8004cfc:	0802e3d0 	.word	0x0802e3d0
 8004d00:	0802e2d8 	.word	0x0802e2d8
 8004d04:	20013812 	.word	0x20013812
 8004d08:	20013810 	.word	0x20013810

08004d0c <_ZN23FrontendApplicationBase44gotoProject_InfoScreenWipeTransitionEastImplEv>:
{
 8004d0c:	e92d 47f0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, lr}
    touchgfx::makeTransition<Project_InfoView, Project_InfoPresenter, touchgfx::WipeTransition<EAST>, Model >(&currentScreen, &currentPresenter, frontendHeap, &currentTransition, &model);
 8004d10:	e9d0 4a55 	ldrd	r4, sl, [r0, #340]	; 0x154
{
 8004d14:	4607      	mov	r7, r0
    assert(sizeof(ScreenType) <= heap.screenStorage.element_size() && "View allocation error: Check that all views are added to FrontendHeap::ViewTypes");
 8004d16:	68a0      	ldr	r0, [r4, #8]
 8004d18:	6803      	ldr	r3, [r0, #0]
 8004d1a:	6a1b      	ldr	r3, [r3, #32]
 8004d1c:	4798      	blx	r3
 8004d1e:	f241 03af 	movw	r3, #4271	; 0x10af
 8004d22:	4298      	cmp	r0, r3
 8004d24:	d805      	bhi.n	8004d32 <_ZN23FrontendApplicationBase44gotoProject_InfoScreenWipeTransitionEastImplEv+0x26>
 8004d26:	4b42      	ldr	r3, [pc, #264]	; (8004e30 <_ZN23FrontendApplicationBase44gotoProject_InfoScreenWipeTransitionEastImplEv+0x124>)
 8004d28:	4a42      	ldr	r2, [pc, #264]	; (8004e34 <_ZN23FrontendApplicationBase44gotoProject_InfoScreenWipeTransitionEastImplEv+0x128>)
 8004d2a:	21a3      	movs	r1, #163	; 0xa3
    assert(sizeof(PresenterType) <= heap.presenterStorage.element_size() && "Presenter allocation error: Check that all presenters are added to FrontendHeap::PresenterTypes");
 8004d2c:	4842      	ldr	r0, [pc, #264]	; (8004e38 <_ZN23FrontendApplicationBase44gotoProject_InfoScreenWipeTransitionEastImplEv+0x12c>)
 8004d2e:	f026 fb17 	bl	802b360 <__assert_func>
 8004d32:	6860      	ldr	r0, [r4, #4]
 8004d34:	6803      	ldr	r3, [r0, #0]
 8004d36:	6a1b      	ldr	r3, [r3, #32]
 8004d38:	4798      	blx	r3
 8004d3a:	280f      	cmp	r0, #15
 8004d3c:	d803      	bhi.n	8004d46 <_ZN23FrontendApplicationBase44gotoProject_InfoScreenWipeTransitionEastImplEv+0x3a>
 8004d3e:	4b3f      	ldr	r3, [pc, #252]	; (8004e3c <_ZN23FrontendApplicationBase44gotoProject_InfoScreenWipeTransitionEastImplEv+0x130>)
 8004d40:	4a3c      	ldr	r2, [pc, #240]	; (8004e34 <_ZN23FrontendApplicationBase44gotoProject_InfoScreenWipeTransitionEastImplEv+0x128>)
 8004d42:	21a4      	movs	r1, #164	; 0xa4
 8004d44:	e7f2      	b.n	8004d2c <_ZN23FrontendApplicationBase44gotoProject_InfoScreenWipeTransitionEastImplEv+0x20>
    assert(sizeof(TransType) <= heap.transitionStorage.element_size() && "Transition allocation error: Check that all transitions are added to FrontendHeap::TransitionTypes");
 8004d46:	68e0      	ldr	r0, [r4, #12]
 8004d48:	6803      	ldr	r3, [r0, #0]
 8004d4a:	6a1b      	ldr	r3, [r3, #32]
 8004d4c:	4798      	blx	r3
 8004d4e:	2837      	cmp	r0, #55	; 0x37
 8004d50:	d803      	bhi.n	8004d5a <_ZN23FrontendApplicationBase44gotoProject_InfoScreenWipeTransitionEastImplEv+0x4e>
 8004d52:	4b3b      	ldr	r3, [pc, #236]	; (8004e40 <_ZN23FrontendApplicationBase44gotoProject_InfoScreenWipeTransitionEastImplEv+0x134>)
 8004d54:	4a37      	ldr	r2, [pc, #220]	; (8004e34 <_ZN23FrontendApplicationBase44gotoProject_InfoScreenWipeTransitionEastImplEv+0x128>)
 8004d56:	21a5      	movs	r1, #165	; 0xa5
 8004d58:	e7e8      	b.n	8004d2c <_ZN23FrontendApplicationBase44gotoProject_InfoScreenWipeTransitionEastImplEv+0x20>
    Application::getInstance()->clearAllTimerWidgets();
 8004d5a:	f011 fc39 	bl	80165d0 <_ZN8touchgfx11Application11getInstanceEv>
    if (*currentTrans)
 8004d5e:	f8df 90e4 	ldr.w	r9, [pc, #228]	; 8004e44 <_ZN23FrontendApplicationBase44gotoProject_InfoScreenWipeTransitionEastImplEv+0x138>
 8004d62:	3004      	adds	r0, #4
 8004d64:	f011 fc9a 	bl	801669c <_ZN8touchgfx11Application12TimerWidgets5clearEv>
 8004d68:	f8d9 0000 	ldr.w	r0, [r9]
 8004d6c:	b110      	cbz	r0, 8004d74 <_ZN23FrontendApplicationBase44gotoProject_InfoScreenWipeTransitionEastImplEv+0x68>
        (*currentTrans)->tearDown();
 8004d6e:	6803      	ldr	r3, [r0, #0]
 8004d70:	68db      	ldr	r3, [r3, #12]
 8004d72:	4798      	blx	r3
    if (*currentTrans)
 8004d74:	f8d9 0000 	ldr.w	r0, [r9]
 8004d78:	b110      	cbz	r0, 8004d80 <_ZN23FrontendApplicationBase44gotoProject_InfoScreenWipeTransitionEastImplEv+0x74>
        (*currentTrans)->~Transition();
 8004d7a:	6803      	ldr	r3, [r0, #0]
 8004d7c:	681b      	ldr	r3, [r3, #0]
 8004d7e:	4798      	blx	r3
    if (*currentScreen)
 8004d80:	f8df 80c4 	ldr.w	r8, [pc, #196]	; 8004e48 <_ZN23FrontendApplicationBase44gotoProject_InfoScreenWipeTransitionEastImplEv+0x13c>
 8004d84:	f8d8 0000 	ldr.w	r0, [r8]
 8004d88:	b110      	cbz	r0, 8004d90 <_ZN23FrontendApplicationBase44gotoProject_InfoScreenWipeTransitionEastImplEv+0x84>
        (*currentScreen)->tearDownScreen();
 8004d8a:	6803      	ldr	r3, [r0, #0]
 8004d8c:	695b      	ldr	r3, [r3, #20]
 8004d8e:	4798      	blx	r3
    if (*currentPresenter)
 8004d90:	f8d7 013c 	ldr.w	r0, [r7, #316]	; 0x13c
 8004d94:	b110      	cbz	r0, 8004d9c <_ZN23FrontendApplicationBase44gotoProject_InfoScreenWipeTransitionEastImplEv+0x90>
        (*currentPresenter)->deactivate();
 8004d96:	6803      	ldr	r3, [r0, #0]
 8004d98:	685b      	ldr	r3, [r3, #4]
 8004d9a:	4798      	blx	r3
    if (*currentScreen)
 8004d9c:	f8d8 0000 	ldr.w	r0, [r8]
 8004da0:	b110      	cbz	r0, 8004da8 <_ZN23FrontendApplicationBase44gotoProject_InfoScreenWipeTransitionEastImplEv+0x9c>
        (*currentScreen)->~Screen();
 8004da2:	6803      	ldr	r3, [r0, #0]
 8004da4:	681b      	ldr	r3, [r3, #0]
 8004da6:	4798      	blx	r3
    if (*currentPresenter)
 8004da8:	f8d7 013c 	ldr.w	r0, [r7, #316]	; 0x13c
 8004dac:	b110      	cbz	r0, 8004db4 <_ZN23FrontendApplicationBase44gotoProject_InfoScreenWipeTransitionEastImplEv+0xa8>
        (*currentPresenter)->~Presenter();
 8004dae:	6803      	ldr	r3, [r0, #0]
 8004db0:	689b      	ldr	r3, [r3, #8]
 8004db2:	4798      	blx	r3
    TransType* newTransition = new (&heap.transitionStorage.at<TransType>(0)) TransType;
 8004db4:	68e0      	ldr	r0, [r4, #12]
 8004db6:	2100      	movs	r1, #0
 8004db8:	f7ff ff76 	bl	8004ca8 <_ZN8touchgfx17AbstractPartition2atINS_14WipeTransitionILNS_9DirectionE2EEEEERT_t>
 8004dbc:	2114      	movs	r1, #20
 8004dbe:	4605      	mov	r5, r0
 8004dc0:	f7ff ff76 	bl	8004cb0 <_ZN8touchgfx14WipeTransitionILNS_9DirectionE2EEC1Eh>
    ScreenType* newScreen = new (&heap.screenStorage.at<ScreenType>(0)) ScreenType;
 8004dc4:	68a0      	ldr	r0, [r4, #8]
 8004dc6:	6803      	ldr	r3, [r0, #0]
 8004dc8:	2100      	movs	r1, #0
 8004dca:	6a5b      	ldr	r3, [r3, #36]	; 0x24
 8004dcc:	4798      	blx	r3
 8004dce:	4606      	mov	r6, r0
 8004dd0:	f004 f94e 	bl	8009070 <_ZN16Project_InfoViewC1Ev>
    PresenterType* newPresenter = new (&heap.presenterStorage.at<PresenterType>(0)) PresenterType(*newScreen);
 8004dd4:	6860      	ldr	r0, [r4, #4]
 8004dd6:	6803      	ldr	r3, [r0, #0]
 8004dd8:	2100      	movs	r1, #0
 8004dda:	6a5b      	ldr	r3, [r3, #36]	; 0x24
 8004ddc:	4798      	blx	r3
 8004dde:	4631      	mov	r1, r6
 8004de0:	4604      	mov	r4, r0
 8004de2:	f004 f91f 	bl	8009024 <_ZN21Project_InfoPresenterC1ER16Project_InfoView>
    *currentTrans = newTransition;
 8004de6:	f8c9 5000 	str.w	r5, [r9]
    *currentPresenter = newPresenter;
 8004dea:	f8c7 413c 	str.w	r4, [r7, #316]	; 0x13c
    *currentScreen = newScreen;
 8004dee:	f8c8 6000 	str.w	r6, [r8]
    model->bind(newPresenter);
 8004df2:	b1dc      	cbz	r4, 8004e2c <_ZN23FrontendApplicationBase44gotoProject_InfoScreenWipeTransitionEastImplEv+0x120>
 8004df4:	1d23      	adds	r3, r4, #4
 8004df6:	f8ca 3000 	str.w	r3, [sl]
    newScreen->setupScreen();
 8004dfa:	6833      	ldr	r3, [r6, #0]
 8004dfc:	f8c4 a008 	str.w	sl, [r4, #8]
 8004e00:	4630      	mov	r0, r6
 8004e02:	68db      	ldr	r3, [r3, #12]
 8004e04:	63f4      	str	r4, [r6, #60]	; 0x3c
 8004e06:	4798      	blx	r3
    newPresenter->activate();
 8004e08:	6823      	ldr	r3, [r4, #0]
 8004e0a:	4620      	mov	r0, r4
 8004e0c:	681b      	ldr	r3, [r3, #0]
 8004e0e:	4798      	blx	r3
    newScreen->bindTransition(*newTransition);
 8004e10:	4629      	mov	r1, r5
 8004e12:	4630      	mov	r0, r6
 8004e14:	f013 fa08 	bl	8018228 <_ZN8touchgfx6Screen14bindTransitionERNS_10TransitionE>
    newTransition->init();
 8004e18:	682b      	ldr	r3, [r5, #0]
 8004e1a:	4628      	mov	r0, r5
 8004e1c:	691b      	ldr	r3, [r3, #16]
 8004e1e:	4798      	blx	r3
    newTransition->invalidate();
 8004e20:	682b      	ldr	r3, [r5, #0]
 8004e22:	4628      	mov	r0, r5
 8004e24:	695b      	ldr	r3, [r3, #20]
}
 8004e26:	e8bd 47f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, lr}
 8004e2a:	4718      	bx	r3
    model->bind(newPresenter);
 8004e2c:	4623      	mov	r3, r4
 8004e2e:	e7e2      	b.n	8004df6 <_ZN23FrontendApplicationBase44gotoProject_InfoScreenWipeTransitionEastImplEv+0xea>
 8004e30:	0802d06c 	.word	0x0802d06c
 8004e34:	0802d805 	.word	0x0802d805
 8004e38:	0802d208 	.word	0x0802d208
 8004e3c:	0802d24f 	.word	0x0802d24f
 8004e40:	0802d2f2 	.word	0x0802d2f2
 8004e44:	20013864 	.word	0x20013864
 8004e48:	20013860 	.word	0x20013860

08004e4c <_ZN23FrontendApplicationBase47gotoCalibration_PadScreenWipeTransitionEastImplEv>:
{
 8004e4c:	e92d 47f0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, lr}
    touchgfx::makeTransition<Calibration_PadView, Calibration_PadPresenter, touchgfx::WipeTransition<EAST>, Model >(&currentScreen, &currentPresenter, frontendHeap, &currentTransition, &model);
 8004e50:	e9d0 4a55 	ldrd	r4, sl, [r0, #340]	; 0x154
{
 8004e54:	4607      	mov	r7, r0
    assert(sizeof(ScreenType) <= heap.screenStorage.element_size() && "View allocation error: Check that all views are added to FrontendHeap::ViewTypes");
 8004e56:	68a0      	ldr	r0, [r4, #8]
 8004e58:	6803      	ldr	r3, [r0, #0]
 8004e5a:	6a1b      	ldr	r3, [r3, #32]
 8004e5c:	4798      	blx	r3
 8004e5e:	f641 5363 	movw	r3, #7523	; 0x1d63
 8004e62:	4298      	cmp	r0, r3
 8004e64:	d805      	bhi.n	8004e72 <_ZN23FrontendApplicationBase47gotoCalibration_PadScreenWipeTransitionEastImplEv+0x26>
 8004e66:	4b42      	ldr	r3, [pc, #264]	; (8004f70 <_ZN23FrontendApplicationBase47gotoCalibration_PadScreenWipeTransitionEastImplEv+0x124>)
 8004e68:	4a42      	ldr	r2, [pc, #264]	; (8004f74 <_ZN23FrontendApplicationBase47gotoCalibration_PadScreenWipeTransitionEastImplEv+0x128>)
 8004e6a:	21a3      	movs	r1, #163	; 0xa3
    assert(sizeof(PresenterType) <= heap.presenterStorage.element_size() && "Presenter allocation error: Check that all presenters are added to FrontendHeap::PresenterTypes");
 8004e6c:	4842      	ldr	r0, [pc, #264]	; (8004f78 <_ZN23FrontendApplicationBase47gotoCalibration_PadScreenWipeTransitionEastImplEv+0x12c>)
 8004e6e:	f026 fa77 	bl	802b360 <__assert_func>
 8004e72:	6860      	ldr	r0, [r4, #4]
 8004e74:	6803      	ldr	r3, [r0, #0]
 8004e76:	6a1b      	ldr	r3, [r3, #32]
 8004e78:	4798      	blx	r3
 8004e7a:	280f      	cmp	r0, #15
 8004e7c:	d803      	bhi.n	8004e86 <_ZN23FrontendApplicationBase47gotoCalibration_PadScreenWipeTransitionEastImplEv+0x3a>
 8004e7e:	4b3f      	ldr	r3, [pc, #252]	; (8004f7c <_ZN23FrontendApplicationBase47gotoCalibration_PadScreenWipeTransitionEastImplEv+0x130>)
 8004e80:	4a3c      	ldr	r2, [pc, #240]	; (8004f74 <_ZN23FrontendApplicationBase47gotoCalibration_PadScreenWipeTransitionEastImplEv+0x128>)
 8004e82:	21a4      	movs	r1, #164	; 0xa4
 8004e84:	e7f2      	b.n	8004e6c <_ZN23FrontendApplicationBase47gotoCalibration_PadScreenWipeTransitionEastImplEv+0x20>
    assert(sizeof(TransType) <= heap.transitionStorage.element_size() && "Transition allocation error: Check that all transitions are added to FrontendHeap::TransitionTypes");
 8004e86:	68e0      	ldr	r0, [r4, #12]
 8004e88:	6803      	ldr	r3, [r0, #0]
 8004e8a:	6a1b      	ldr	r3, [r3, #32]
 8004e8c:	4798      	blx	r3
 8004e8e:	2837      	cmp	r0, #55	; 0x37
 8004e90:	d803      	bhi.n	8004e9a <_ZN23FrontendApplicationBase47gotoCalibration_PadScreenWipeTransitionEastImplEv+0x4e>
 8004e92:	4b3b      	ldr	r3, [pc, #236]	; (8004f80 <_ZN23FrontendApplicationBase47gotoCalibration_PadScreenWipeTransitionEastImplEv+0x134>)
 8004e94:	4a37      	ldr	r2, [pc, #220]	; (8004f74 <_ZN23FrontendApplicationBase47gotoCalibration_PadScreenWipeTransitionEastImplEv+0x128>)
 8004e96:	21a5      	movs	r1, #165	; 0xa5
 8004e98:	e7e8      	b.n	8004e6c <_ZN23FrontendApplicationBase47gotoCalibration_PadScreenWipeTransitionEastImplEv+0x20>
    Application::getInstance()->clearAllTimerWidgets();
 8004e9a:	f011 fb99 	bl	80165d0 <_ZN8touchgfx11Application11getInstanceEv>
    if (*currentTrans)
 8004e9e:	f8df 90e4 	ldr.w	r9, [pc, #228]	; 8004f84 <_ZN23FrontendApplicationBase47gotoCalibration_PadScreenWipeTransitionEastImplEv+0x138>
 8004ea2:	3004      	adds	r0, #4
 8004ea4:	f011 fbfa 	bl	801669c <_ZN8touchgfx11Application12TimerWidgets5clearEv>
 8004ea8:	f8d9 0000 	ldr.w	r0, [r9]
 8004eac:	b110      	cbz	r0, 8004eb4 <_ZN23FrontendApplicationBase47gotoCalibration_PadScreenWipeTransitionEastImplEv+0x68>
        (*currentTrans)->tearDown();
 8004eae:	6803      	ldr	r3, [r0, #0]
 8004eb0:	68db      	ldr	r3, [r3, #12]
 8004eb2:	4798      	blx	r3
    if (*currentTrans)
 8004eb4:	f8d9 0000 	ldr.w	r0, [r9]
 8004eb8:	b110      	cbz	r0, 8004ec0 <_ZN23FrontendApplicationBase47gotoCalibration_PadScreenWipeTransitionEastImplEv+0x74>
        (*currentTrans)->~Transition();
 8004eba:	6803      	ldr	r3, [r0, #0]
 8004ebc:	681b      	ldr	r3, [r3, #0]
 8004ebe:	4798      	blx	r3
    if (*currentScreen)
 8004ec0:	f8df 80c4 	ldr.w	r8, [pc, #196]	; 8004f88 <_ZN23FrontendApplicationBase47gotoCalibration_PadScreenWipeTransitionEastImplEv+0x13c>
 8004ec4:	f8d8 0000 	ldr.w	r0, [r8]
 8004ec8:	b110      	cbz	r0, 8004ed0 <_ZN23FrontendApplicationBase47gotoCalibration_PadScreenWipeTransitionEastImplEv+0x84>
        (*currentScreen)->tearDownScreen();
 8004eca:	6803      	ldr	r3, [r0, #0]
 8004ecc:	695b      	ldr	r3, [r3, #20]
 8004ece:	4798      	blx	r3
    if (*currentPresenter)
 8004ed0:	f8d7 013c 	ldr.w	r0, [r7, #316]	; 0x13c
 8004ed4:	b110      	cbz	r0, 8004edc <_ZN23FrontendApplicationBase47gotoCalibration_PadScreenWipeTransitionEastImplEv+0x90>
        (*currentPresenter)->deactivate();
 8004ed6:	6803      	ldr	r3, [r0, #0]
 8004ed8:	685b      	ldr	r3, [r3, #4]
 8004eda:	4798      	blx	r3
    if (*currentScreen)
 8004edc:	f8d8 0000 	ldr.w	r0, [r8]
 8004ee0:	b110      	cbz	r0, 8004ee8 <_ZN23FrontendApplicationBase47gotoCalibration_PadScreenWipeTransitionEastImplEv+0x9c>
        (*currentScreen)->~Screen();
 8004ee2:	6803      	ldr	r3, [r0, #0]
 8004ee4:	681b      	ldr	r3, [r3, #0]
 8004ee6:	4798      	blx	r3
    if (*currentPresenter)
 8004ee8:	f8d7 013c 	ldr.w	r0, [r7, #316]	; 0x13c
 8004eec:	b110      	cbz	r0, 8004ef4 <_ZN23FrontendApplicationBase47gotoCalibration_PadScreenWipeTransitionEastImplEv+0xa8>
        (*currentPresenter)->~Presenter();
 8004eee:	6803      	ldr	r3, [r0, #0]
 8004ef0:	689b      	ldr	r3, [r3, #8]
 8004ef2:	4798      	blx	r3
    TransType* newTransition = new (&heap.transitionStorage.at<TransType>(0)) TransType;
 8004ef4:	68e0      	ldr	r0, [r4, #12]
 8004ef6:	2100      	movs	r1, #0
 8004ef8:	f7ff fed6 	bl	8004ca8 <_ZN8touchgfx17AbstractPartition2atINS_14WipeTransitionILNS_9DirectionE2EEEEERT_t>
 8004efc:	2114      	movs	r1, #20
 8004efe:	4605      	mov	r5, r0
 8004f00:	f7ff fed6 	bl	8004cb0 <_ZN8touchgfx14WipeTransitionILNS_9DirectionE2EEC1Eh>
    ScreenType* newScreen = new (&heap.screenStorage.at<ScreenType>(0)) ScreenType;
 8004f04:	68a0      	ldr	r0, [r4, #8]
 8004f06:	6803      	ldr	r3, [r0, #0]
 8004f08:	2100      	movs	r1, #0
 8004f0a:	6a5b      	ldr	r3, [r3, #36]	; 0x24
 8004f0c:	4798      	blx	r3
 8004f0e:	4606      	mov	r6, r0
 8004f10:	f003 fc76 	bl	8008800 <_ZN19Calibration_PadViewC1Ev>
    PresenterType* newPresenter = new (&heap.presenterStorage.at<PresenterType>(0)) PresenterType(*newScreen);
 8004f14:	6860      	ldr	r0, [r4, #4]
 8004f16:	6803      	ldr	r3, [r0, #0]
 8004f18:	2100      	movs	r1, #0
 8004f1a:	6a5b      	ldr	r3, [r3, #36]	; 0x24
 8004f1c:	4798      	blx	r3
 8004f1e:	4631      	mov	r1, r6
 8004f20:	4604      	mov	r4, r0
 8004f22:	f003 fc47 	bl	80087b4 <_ZN24Calibration_PadPresenterC1ER19Calibration_PadView>
    *currentTrans = newTransition;
 8004f26:	f8c9 5000 	str.w	r5, [r9]
    *currentPresenter = newPresenter;
 8004f2a:	f8c7 413c 	str.w	r4, [r7, #316]	; 0x13c
    *currentScreen = newScreen;
 8004f2e:	f8c8 6000 	str.w	r6, [r8]
    model->bind(newPresenter);
 8004f32:	b1dc      	cbz	r4, 8004f6c <_ZN23FrontendApplicationBase47gotoCalibration_PadScreenWipeTransitionEastImplEv+0x120>
 8004f34:	1d23      	adds	r3, r4, #4
 8004f36:	f8ca 3000 	str.w	r3, [sl]
    newScreen->setupScreen();
 8004f3a:	6833      	ldr	r3, [r6, #0]
 8004f3c:	f8c4 a008 	str.w	sl, [r4, #8]
 8004f40:	4630      	mov	r0, r6
 8004f42:	68db      	ldr	r3, [r3, #12]
 8004f44:	63f4      	str	r4, [r6, #60]	; 0x3c
 8004f46:	4798      	blx	r3
    newPresenter->activate();
 8004f48:	6823      	ldr	r3, [r4, #0]
 8004f4a:	4620      	mov	r0, r4
 8004f4c:	681b      	ldr	r3, [r3, #0]
 8004f4e:	4798      	blx	r3
    newScreen->bindTransition(*newTransition);
 8004f50:	4629      	mov	r1, r5
 8004f52:	4630      	mov	r0, r6
 8004f54:	f013 f968 	bl	8018228 <_ZN8touchgfx6Screen14bindTransitionERNS_10TransitionE>
    newTransition->init();
 8004f58:	682b      	ldr	r3, [r5, #0]
 8004f5a:	4628      	mov	r0, r5
 8004f5c:	691b      	ldr	r3, [r3, #16]
 8004f5e:	4798      	blx	r3
    newTransition->invalidate();
 8004f60:	682b      	ldr	r3, [r5, #0]
 8004f62:	4628      	mov	r0, r5
 8004f64:	695b      	ldr	r3, [r3, #20]
}
 8004f66:	e8bd 47f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, lr}
 8004f6a:	4718      	bx	r3
    model->bind(newPresenter);
 8004f6c:	4623      	mov	r3, r4
 8004f6e:	e7e2      	b.n	8004f36 <_ZN23FrontendApplicationBase47gotoCalibration_PadScreenWipeTransitionEastImplEv+0xea>
 8004f70:	0802d06c 	.word	0x0802d06c
 8004f74:	0802d925 	.word	0x0802d925
 8004f78:	0802d208 	.word	0x0802d208
 8004f7c:	0802d24f 	.word	0x0802d24f
 8004f80:	0802d2f2 	.word	0x0802d2f2
 8004f84:	20013864 	.word	0x20013864
 8004f88:	20013860 	.word	0x20013860

08004f8c <_ZN23FrontendApplicationBase62gotoMeasurement_Accurate_Display_2ScreenWipeTransitionEastImplEv>:
{
 8004f8c:	e92d 47f0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, lr}
    touchgfx::makeTransition<Measurement_Accurate_Display_2View, Measurement_Accurate_Display_2Presenter, touchgfx::WipeTransition<EAST>, Model >(&currentScreen, &currentPresenter, frontendHeap, &currentTransition, &model);
 8004f90:	e9d0 4a55 	ldrd	r4, sl, [r0, #340]	; 0x154
{
 8004f94:	4607      	mov	r7, r0
    assert(sizeof(ScreenType) <= heap.screenStorage.element_size() && "View allocation error: Check that all views are added to FrontendHeap::ViewTypes");
 8004f96:	68a0      	ldr	r0, [r4, #8]
 8004f98:	6803      	ldr	r3, [r0, #0]
 8004f9a:	6a1b      	ldr	r3, [r3, #32]
 8004f9c:	4798      	blx	r3
 8004f9e:	f241 035b 	movw	r3, #4187	; 0x105b
 8004fa2:	4298      	cmp	r0, r3
 8004fa4:	d805      	bhi.n	8004fb2 <_ZN23FrontendApplicationBase62gotoMeasurement_Accurate_Display_2ScreenWipeTransitionEastImplEv+0x26>
 8004fa6:	4b42      	ldr	r3, [pc, #264]	; (80050b0 <_ZN23FrontendApplicationBase62gotoMeasurement_Accurate_Display_2ScreenWipeTransitionEastImplEv+0x124>)
 8004fa8:	4a42      	ldr	r2, [pc, #264]	; (80050b4 <_ZN23FrontendApplicationBase62gotoMeasurement_Accurate_Display_2ScreenWipeTransitionEastImplEv+0x128>)
 8004faa:	21a3      	movs	r1, #163	; 0xa3
    assert(sizeof(PresenterType) <= heap.presenterStorage.element_size() && "Presenter allocation error: Check that all presenters are added to FrontendHeap::PresenterTypes");
 8004fac:	4842      	ldr	r0, [pc, #264]	; (80050b8 <_ZN23FrontendApplicationBase62gotoMeasurement_Accurate_Display_2ScreenWipeTransitionEastImplEv+0x12c>)
 8004fae:	f026 f9d7 	bl	802b360 <__assert_func>
 8004fb2:	6860      	ldr	r0, [r4, #4]
 8004fb4:	6803      	ldr	r3, [r0, #0]
 8004fb6:	6a1b      	ldr	r3, [r3, #32]
 8004fb8:	4798      	blx	r3
 8004fba:	280f      	cmp	r0, #15
 8004fbc:	d803      	bhi.n	8004fc6 <_ZN23FrontendApplicationBase62gotoMeasurement_Accurate_Display_2ScreenWipeTransitionEastImplEv+0x3a>
 8004fbe:	4b3f      	ldr	r3, [pc, #252]	; (80050bc <_ZN23FrontendApplicationBase62gotoMeasurement_Accurate_Display_2ScreenWipeTransitionEastImplEv+0x130>)
 8004fc0:	4a3c      	ldr	r2, [pc, #240]	; (80050b4 <_ZN23FrontendApplicationBase62gotoMeasurement_Accurate_Display_2ScreenWipeTransitionEastImplEv+0x128>)
 8004fc2:	21a4      	movs	r1, #164	; 0xa4
 8004fc4:	e7f2      	b.n	8004fac <_ZN23FrontendApplicationBase62gotoMeasurement_Accurate_Display_2ScreenWipeTransitionEastImplEv+0x20>
    assert(sizeof(TransType) <= heap.transitionStorage.element_size() && "Transition allocation error: Check that all transitions are added to FrontendHeap::TransitionTypes");
 8004fc6:	68e0      	ldr	r0, [r4, #12]
 8004fc8:	6803      	ldr	r3, [r0, #0]
 8004fca:	6a1b      	ldr	r3, [r3, #32]
 8004fcc:	4798      	blx	r3
 8004fce:	2837      	cmp	r0, #55	; 0x37
 8004fd0:	d803      	bhi.n	8004fda <_ZN23FrontendApplicationBase62gotoMeasurement_Accurate_Display_2ScreenWipeTransitionEastImplEv+0x4e>
 8004fd2:	4b3b      	ldr	r3, [pc, #236]	; (80050c0 <_ZN23FrontendApplicationBase62gotoMeasurement_Accurate_Display_2ScreenWipeTransitionEastImplEv+0x134>)
 8004fd4:	4a37      	ldr	r2, [pc, #220]	; (80050b4 <_ZN23FrontendApplicationBase62gotoMeasurement_Accurate_Display_2ScreenWipeTransitionEastImplEv+0x128>)
 8004fd6:	21a5      	movs	r1, #165	; 0xa5
 8004fd8:	e7e8      	b.n	8004fac <_ZN23FrontendApplicationBase62gotoMeasurement_Accurate_Display_2ScreenWipeTransitionEastImplEv+0x20>
    Application::getInstance()->clearAllTimerWidgets();
 8004fda:	f011 faf9 	bl	80165d0 <_ZN8touchgfx11Application11getInstanceEv>
    if (*currentTrans)
 8004fde:	f8df 90e4 	ldr.w	r9, [pc, #228]	; 80050c4 <_ZN23FrontendApplicationBase62gotoMeasurement_Accurate_Display_2ScreenWipeTransitionEastImplEv+0x138>
 8004fe2:	3004      	adds	r0, #4
 8004fe4:	f011 fb5a 	bl	801669c <_ZN8touchgfx11Application12TimerWidgets5clearEv>
 8004fe8:	f8d9 0000 	ldr.w	r0, [r9]
 8004fec:	b110      	cbz	r0, 8004ff4 <_ZN23FrontendApplicationBase62gotoMeasurement_Accurate_Display_2ScreenWipeTransitionEastImplEv+0x68>
        (*currentTrans)->tearDown();
 8004fee:	6803      	ldr	r3, [r0, #0]
 8004ff0:	68db      	ldr	r3, [r3, #12]
 8004ff2:	4798      	blx	r3
    if (*currentTrans)
 8004ff4:	f8d9 0000 	ldr.w	r0, [r9]
 8004ff8:	b110      	cbz	r0, 8005000 <_ZN23FrontendApplicationBase62gotoMeasurement_Accurate_Display_2ScreenWipeTransitionEastImplEv+0x74>
        (*currentTrans)->~Transition();
 8004ffa:	6803      	ldr	r3, [r0, #0]
 8004ffc:	681b      	ldr	r3, [r3, #0]
 8004ffe:	4798      	blx	r3
    if (*currentScreen)
 8005000:	f8df 80c4 	ldr.w	r8, [pc, #196]	; 80050c8 <_ZN23FrontendApplicationBase62gotoMeasurement_Accurate_Display_2ScreenWipeTransitionEastImplEv+0x13c>
 8005004:	f8d8 0000 	ldr.w	r0, [r8]
 8005008:	b110      	cbz	r0, 8005010 <_ZN23FrontendApplicationBase62gotoMeasurement_Accurate_Display_2ScreenWipeTransitionEastImplEv+0x84>
        (*currentScreen)->tearDownScreen();
 800500a:	6803      	ldr	r3, [r0, #0]
 800500c:	695b      	ldr	r3, [r3, #20]
 800500e:	4798      	blx	r3
    if (*currentPresenter)
 8005010:	f8d7 013c 	ldr.w	r0, [r7, #316]	; 0x13c
 8005014:	b110      	cbz	r0, 800501c <_ZN23FrontendApplicationBase62gotoMeasurement_Accurate_Display_2ScreenWipeTransitionEastImplEv+0x90>
        (*currentPresenter)->deactivate();
 8005016:	6803      	ldr	r3, [r0, #0]
 8005018:	685b      	ldr	r3, [r3, #4]
 800501a:	4798      	blx	r3
    if (*currentScreen)
 800501c:	f8d8 0000 	ldr.w	r0, [r8]
 8005020:	b110      	cbz	r0, 8005028 <_ZN23FrontendApplicationBase62gotoMeasurement_Accurate_Display_2ScreenWipeTransitionEastImplEv+0x9c>
        (*currentScreen)->~Screen();
 8005022:	6803      	ldr	r3, [r0, #0]
 8005024:	681b      	ldr	r3, [r3, #0]
 8005026:	4798      	blx	r3
    if (*currentPresenter)
 8005028:	f8d7 013c 	ldr.w	r0, [r7, #316]	; 0x13c
 800502c:	b110      	cbz	r0, 8005034 <_ZN23FrontendApplicationBase62gotoMeasurement_Accurate_Display_2ScreenWipeTransitionEastImplEv+0xa8>
        (*currentPresenter)->~Presenter();
 800502e:	6803      	ldr	r3, [r0, #0]
 8005030:	689b      	ldr	r3, [r3, #8]
 8005032:	4798      	blx	r3
    TransType* newTransition = new (&heap.transitionStorage.at<TransType>(0)) TransType;
 8005034:	68e0      	ldr	r0, [r4, #12]
 8005036:	2100      	movs	r1, #0
 8005038:	f7ff fe36 	bl	8004ca8 <_ZN8touchgfx17AbstractPartition2atINS_14WipeTransitionILNS_9DirectionE2EEEEERT_t>
 800503c:	2114      	movs	r1, #20
 800503e:	4605      	mov	r5, r0
 8005040:	f7ff fe36 	bl	8004cb0 <_ZN8touchgfx14WipeTransitionILNS_9DirectionE2EEC1Eh>
    ScreenType* newScreen = new (&heap.screenStorage.at<ScreenType>(0)) ScreenType;
 8005044:	68a0      	ldr	r0, [r4, #8]
 8005046:	6803      	ldr	r3, [r0, #0]
 8005048:	2100      	movs	r1, #0
 800504a:	6a5b      	ldr	r3, [r3, #36]	; 0x24
 800504c:	4798      	blx	r3
 800504e:	4606      	mov	r6, r0
 8005050:	f003 fe66 	bl	8008d20 <_ZN34Measurement_Accurate_Display_2ViewC1Ev>
    PresenterType* newPresenter = new (&heap.presenterStorage.at<PresenterType>(0)) PresenterType(*newScreen);
 8005054:	6860      	ldr	r0, [r4, #4]
 8005056:	6803      	ldr	r3, [r0, #0]
 8005058:	2100      	movs	r1, #0
 800505a:	6a5b      	ldr	r3, [r3, #36]	; 0x24
 800505c:	4798      	blx	r3
 800505e:	4631      	mov	r1, r6
 8005060:	4604      	mov	r4, r0
 8005062:	f003 fe37 	bl	8008cd4 <_ZN39Measurement_Accurate_Display_2PresenterC1ER34Measurement_Accurate_Display_2View>
    *currentTrans = newTransition;
 8005066:	f8c9 5000 	str.w	r5, [r9]
    *currentPresenter = newPresenter;
 800506a:	f8c7 413c 	str.w	r4, [r7, #316]	; 0x13c
    *currentScreen = newScreen;
 800506e:	f8c8 6000 	str.w	r6, [r8]
    model->bind(newPresenter);
 8005072:	b1dc      	cbz	r4, 80050ac <_ZN23FrontendApplicationBase62gotoMeasurement_Accurate_Display_2ScreenWipeTransitionEastImplEv+0x120>
 8005074:	1d23      	adds	r3, r4, #4
 8005076:	f8ca 3000 	str.w	r3, [sl]
    newScreen->setupScreen();
 800507a:	6833      	ldr	r3, [r6, #0]
 800507c:	f8c4 a008 	str.w	sl, [r4, #8]
 8005080:	4630      	mov	r0, r6
 8005082:	68db      	ldr	r3, [r3, #12]
 8005084:	63f4      	str	r4, [r6, #60]	; 0x3c
 8005086:	4798      	blx	r3
    newPresenter->activate();
 8005088:	6823      	ldr	r3, [r4, #0]
 800508a:	4620      	mov	r0, r4
 800508c:	681b      	ldr	r3, [r3, #0]
 800508e:	4798      	blx	r3
    newScreen->bindTransition(*newTransition);
 8005090:	4629      	mov	r1, r5
 8005092:	4630      	mov	r0, r6
 8005094:	f013 f8c8 	bl	8018228 <_ZN8touchgfx6Screen14bindTransitionERNS_10TransitionE>
    newTransition->init();
 8005098:	682b      	ldr	r3, [r5, #0]
 800509a:	4628      	mov	r0, r5
 800509c:	691b      	ldr	r3, [r3, #16]
 800509e:	4798      	blx	r3
    newTransition->invalidate();
 80050a0:	682b      	ldr	r3, [r5, #0]
 80050a2:	4628      	mov	r0, r5
 80050a4:	695b      	ldr	r3, [r3, #20]
}
 80050a6:	e8bd 47f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, lr}
 80050aa:	4718      	bx	r3
    model->bind(newPresenter);
 80050ac:	4623      	mov	r3, r4
 80050ae:	e7e2      	b.n	8005076 <_ZN23FrontendApplicationBase62gotoMeasurement_Accurate_Display_2ScreenWipeTransitionEastImplEv+0xea>
 80050b0:	0802d06c 	.word	0x0802d06c
 80050b4:	0802da4b 	.word	0x0802da4b
 80050b8:	0802d208 	.word	0x0802d208
 80050bc:	0802d24f 	.word	0x0802d24f
 80050c0:	0802d2f2 	.word	0x0802d2f2
 80050c4:	20013864 	.word	0x20013864
 80050c8:	20013860 	.word	0x20013860

080050cc <_ZN23FrontendApplicationBase60gotoMeasurement_Accurate_DisplayScreenWipeTransitionEastImplEv>:
{
 80050cc:	e92d 47f0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, lr}
    touchgfx::makeTransition<Measurement_Accurate_DisplayView, Measurement_Accurate_DisplayPresenter, touchgfx::WipeTransition<EAST>, Model >(&currentScreen, &currentPresenter, frontendHeap, &currentTransition, &model);
 80050d0:	e9d0 4a55 	ldrd	r4, sl, [r0, #340]	; 0x154
{
 80050d4:	4607      	mov	r7, r0
    assert(sizeof(ScreenType) <= heap.screenStorage.element_size() && "View allocation error: Check that all views are added to FrontendHeap::ViewTypes");
 80050d6:	68a0      	ldr	r0, [r4, #8]
 80050d8:	6803      	ldr	r3, [r0, #0]
 80050da:	6a1b      	ldr	r3, [r3, #32]
 80050dc:	4798      	blx	r3
 80050de:	f241 035b 	movw	r3, #4187	; 0x105b
 80050e2:	4298      	cmp	r0, r3
 80050e4:	d805      	bhi.n	80050f2 <_ZN23FrontendApplicationBase60gotoMeasurement_Accurate_DisplayScreenWipeTransitionEastImplEv+0x26>
 80050e6:	4b42      	ldr	r3, [pc, #264]	; (80051f0 <_ZN23FrontendApplicationBase60gotoMeasurement_Accurate_DisplayScreenWipeTransitionEastImplEv+0x124>)
 80050e8:	4a42      	ldr	r2, [pc, #264]	; (80051f4 <_ZN23FrontendApplicationBase60gotoMeasurement_Accurate_DisplayScreenWipeTransitionEastImplEv+0x128>)
 80050ea:	21a3      	movs	r1, #163	; 0xa3
    assert(sizeof(PresenterType) <= heap.presenterStorage.element_size() && "Presenter allocation error: Check that all presenters are added to FrontendHeap::PresenterTypes");
 80050ec:	4842      	ldr	r0, [pc, #264]	; (80051f8 <_ZN23FrontendApplicationBase60gotoMeasurement_Accurate_DisplayScreenWipeTransitionEastImplEv+0x12c>)
 80050ee:	f026 f937 	bl	802b360 <__assert_func>
 80050f2:	6860      	ldr	r0, [r4, #4]
 80050f4:	6803      	ldr	r3, [r0, #0]
 80050f6:	6a1b      	ldr	r3, [r3, #32]
 80050f8:	4798      	blx	r3
 80050fa:	280f      	cmp	r0, #15
 80050fc:	d803      	bhi.n	8005106 <_ZN23FrontendApplicationBase60gotoMeasurement_Accurate_DisplayScreenWipeTransitionEastImplEv+0x3a>
 80050fe:	4b3f      	ldr	r3, [pc, #252]	; (80051fc <_ZN23FrontendApplicationBase60gotoMeasurement_Accurate_DisplayScreenWipeTransitionEastImplEv+0x130>)
 8005100:	4a3c      	ldr	r2, [pc, #240]	; (80051f4 <_ZN23FrontendApplicationBase60gotoMeasurement_Accurate_DisplayScreenWipeTransitionEastImplEv+0x128>)
 8005102:	21a4      	movs	r1, #164	; 0xa4
 8005104:	e7f2      	b.n	80050ec <_ZN23FrontendApplicationBase60gotoMeasurement_Accurate_DisplayScreenWipeTransitionEastImplEv+0x20>
    assert(sizeof(TransType) <= heap.transitionStorage.element_size() && "Transition allocation error: Check that all transitions are added to FrontendHeap::TransitionTypes");
 8005106:	68e0      	ldr	r0, [r4, #12]
 8005108:	6803      	ldr	r3, [r0, #0]
 800510a:	6a1b      	ldr	r3, [r3, #32]
 800510c:	4798      	blx	r3
 800510e:	2837      	cmp	r0, #55	; 0x37
 8005110:	d803      	bhi.n	800511a <_ZN23FrontendApplicationBase60gotoMeasurement_Accurate_DisplayScreenWipeTransitionEastImplEv+0x4e>
 8005112:	4b3b      	ldr	r3, [pc, #236]	; (8005200 <_ZN23FrontendApplicationBase60gotoMeasurement_Accurate_DisplayScreenWipeTransitionEastImplEv+0x134>)
 8005114:	4a37      	ldr	r2, [pc, #220]	; (80051f4 <_ZN23FrontendApplicationBase60gotoMeasurement_Accurate_DisplayScreenWipeTransitionEastImplEv+0x128>)
 8005116:	21a5      	movs	r1, #165	; 0xa5
 8005118:	e7e8      	b.n	80050ec <_ZN23FrontendApplicationBase60gotoMeasurement_Accurate_DisplayScreenWipeTransitionEastImplEv+0x20>
    Application::getInstance()->clearAllTimerWidgets();
 800511a:	f011 fa59 	bl	80165d0 <_ZN8touchgfx11Application11getInstanceEv>
    if (*currentTrans)
 800511e:	f8df 90e4 	ldr.w	r9, [pc, #228]	; 8005204 <_ZN23FrontendApplicationBase60gotoMeasurement_Accurate_DisplayScreenWipeTransitionEastImplEv+0x138>
 8005122:	3004      	adds	r0, #4
 8005124:	f011 faba 	bl	801669c <_ZN8touchgfx11Application12TimerWidgets5clearEv>
 8005128:	f8d9 0000 	ldr.w	r0, [r9]
 800512c:	b110      	cbz	r0, 8005134 <_ZN23FrontendApplicationBase60gotoMeasurement_Accurate_DisplayScreenWipeTransitionEastImplEv+0x68>
        (*currentTrans)->tearDown();
 800512e:	6803      	ldr	r3, [r0, #0]
 8005130:	68db      	ldr	r3, [r3, #12]
 8005132:	4798      	blx	r3
    if (*currentTrans)
 8005134:	f8d9 0000 	ldr.w	r0, [r9]
 8005138:	b110      	cbz	r0, 8005140 <_ZN23FrontendApplicationBase60gotoMeasurement_Accurate_DisplayScreenWipeTransitionEastImplEv+0x74>
        (*currentTrans)->~Transition();
 800513a:	6803      	ldr	r3, [r0, #0]
 800513c:	681b      	ldr	r3, [r3, #0]
 800513e:	4798      	blx	r3
    if (*currentScreen)
 8005140:	f8df 80c4 	ldr.w	r8, [pc, #196]	; 8005208 <_ZN23FrontendApplicationBase60gotoMeasurement_Accurate_DisplayScreenWipeTransitionEastImplEv+0x13c>
 8005144:	f8d8 0000 	ldr.w	r0, [r8]
 8005148:	b110      	cbz	r0, 8005150 <_ZN23FrontendApplicationBase60gotoMeasurement_Accurate_DisplayScreenWipeTransitionEastImplEv+0x84>
        (*currentScreen)->tearDownScreen();
 800514a:	6803      	ldr	r3, [r0, #0]
 800514c:	695b      	ldr	r3, [r3, #20]
 800514e:	4798      	blx	r3
    if (*currentPresenter)
 8005150:	f8d7 013c 	ldr.w	r0, [r7, #316]	; 0x13c
 8005154:	b110      	cbz	r0, 800515c <_ZN23FrontendApplicationBase60gotoMeasurement_Accurate_DisplayScreenWipeTransitionEastImplEv+0x90>
        (*currentPresenter)->deactivate();
 8005156:	6803      	ldr	r3, [r0, #0]
 8005158:	685b      	ldr	r3, [r3, #4]
 800515a:	4798      	blx	r3
    if (*currentScreen)
 800515c:	f8d8 0000 	ldr.w	r0, [r8]
 8005160:	b110      	cbz	r0, 8005168 <_ZN23FrontendApplicationBase60gotoMeasurement_Accurate_DisplayScreenWipeTransitionEastImplEv+0x9c>
        (*currentScreen)->~Screen();
 8005162:	6803      	ldr	r3, [r0, #0]
 8005164:	681b      	ldr	r3, [r3, #0]
 8005166:	4798      	blx	r3
    if (*currentPresenter)
 8005168:	f8d7 013c 	ldr.w	r0, [r7, #316]	; 0x13c
 800516c:	b110      	cbz	r0, 8005174 <_ZN23FrontendApplicationBase60gotoMeasurement_Accurate_DisplayScreenWipeTransitionEastImplEv+0xa8>
        (*currentPresenter)->~Presenter();
 800516e:	6803      	ldr	r3, [r0, #0]
 8005170:	689b      	ldr	r3, [r3, #8]
 8005172:	4798      	blx	r3
    TransType* newTransition = new (&heap.transitionStorage.at<TransType>(0)) TransType;
 8005174:	68e0      	ldr	r0, [r4, #12]
 8005176:	2100      	movs	r1, #0
 8005178:	f7ff fd96 	bl	8004ca8 <_ZN8touchgfx17AbstractPartition2atINS_14WipeTransitionILNS_9DirectionE2EEEEERT_t>
 800517c:	2114      	movs	r1, #20
 800517e:	4605      	mov	r5, r0
 8005180:	f7ff fd96 	bl	8004cb0 <_ZN8touchgfx14WipeTransitionILNS_9DirectionE2EEC1Eh>
    ScreenType* newScreen = new (&heap.screenStorage.at<ScreenType>(0)) ScreenType;
 8005184:	68a0      	ldr	r0, [r4, #8]
 8005186:	6803      	ldr	r3, [r0, #0]
 8005188:	2100      	movs	r1, #0
 800518a:	6a5b      	ldr	r3, [r3, #36]	; 0x24
 800518c:	4798      	blx	r3
 800518e:	4606      	mov	r6, r0
 8005190:	f003 fd84 	bl	8008c9c <_ZN32Measurement_Accurate_DisplayViewC1Ev>
    PresenterType* newPresenter = new (&heap.presenterStorage.at<PresenterType>(0)) PresenterType(*newScreen);
 8005194:	6860      	ldr	r0, [r4, #4]
 8005196:	6803      	ldr	r3, [r0, #0]
 8005198:	2100      	movs	r1, #0
 800519a:	6a5b      	ldr	r3, [r3, #36]	; 0x24
 800519c:	4798      	blx	r3
 800519e:	4631      	mov	r1, r6
 80051a0:	4604      	mov	r4, r0
 80051a2:	f003 fd55 	bl	8008c50 <_ZN37Measurement_Accurate_DisplayPresenterC1ER32Measurement_Accurate_DisplayView>
    *currentTrans = newTransition;
 80051a6:	f8c9 5000 	str.w	r5, [r9]
    *currentPresenter = newPresenter;
 80051aa:	f8c7 413c 	str.w	r4, [r7, #316]	; 0x13c
    *currentScreen = newScreen;
 80051ae:	f8c8 6000 	str.w	r6, [r8]
    model->bind(newPresenter);
 80051b2:	b1dc      	cbz	r4, 80051ec <_ZN23FrontendApplicationBase60gotoMeasurement_Accurate_DisplayScreenWipeTransitionEastImplEv+0x120>
 80051b4:	1d23      	adds	r3, r4, #4
 80051b6:	f8ca 3000 	str.w	r3, [sl]
    newScreen->setupScreen();
 80051ba:	6833      	ldr	r3, [r6, #0]
 80051bc:	f8c4 a008 	str.w	sl, [r4, #8]
 80051c0:	4630      	mov	r0, r6
 80051c2:	68db      	ldr	r3, [r3, #12]
 80051c4:	63f4      	str	r4, [r6, #60]	; 0x3c
 80051c6:	4798      	blx	r3
    newPresenter->activate();
 80051c8:	6823      	ldr	r3, [r4, #0]
 80051ca:	4620      	mov	r0, r4
 80051cc:	681b      	ldr	r3, [r3, #0]
 80051ce:	4798      	blx	r3
    newScreen->bindTransition(*newTransition);
 80051d0:	4629      	mov	r1, r5
 80051d2:	4630      	mov	r0, r6
 80051d4:	f013 f828 	bl	8018228 <_ZN8touchgfx6Screen14bindTransitionERNS_10TransitionE>
    newTransition->init();
 80051d8:	682b      	ldr	r3, [r5, #0]
 80051da:	4628      	mov	r0, r5
 80051dc:	691b      	ldr	r3, [r3, #16]
 80051de:	4798      	blx	r3
    newTransition->invalidate();
 80051e0:	682b      	ldr	r3, [r5, #0]
 80051e2:	4628      	mov	r0, r5
 80051e4:	695b      	ldr	r3, [r3, #20]
}
 80051e6:	e8bd 47f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, lr}
 80051ea:	4718      	bx	r3
    model->bind(newPresenter);
 80051ec:	4623      	mov	r3, r4
 80051ee:	e7e2      	b.n	80051b6 <_ZN23FrontendApplicationBase60gotoMeasurement_Accurate_DisplayScreenWipeTransitionEastImplEv+0xea>
 80051f0:	0802d06c 	.word	0x0802d06c
 80051f4:	0802db8f 	.word	0x0802db8f
 80051f8:	0802d208 	.word	0x0802d208
 80051fc:	0802d24f 	.word	0x0802d24f
 8005200:	0802d2f2 	.word	0x0802d2f2
 8005204:	20013864 	.word	0x20013864
 8005208:	20013860 	.word	0x20013860

0800520c <_ZN23FrontendApplicationBase52gotoMeasurement_AccurateScreenWipeTransitionEastImplEv>:
{
 800520c:	e92d 47f0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, lr}
    touchgfx::makeTransition<Measurement_AccurateView, Measurement_AccuratePresenter, touchgfx::WipeTransition<EAST>, Model >(&currentScreen, &currentPresenter, frontendHeap, &currentTransition, &model);
 8005210:	e9d0 4a55 	ldrd	r4, sl, [r0, #340]	; 0x154
{
 8005214:	4607      	mov	r7, r0
    assert(sizeof(ScreenType) <= heap.screenStorage.element_size() && "View allocation error: Check that all views are added to FrontendHeap::ViewTypes");
 8005216:	68a0      	ldr	r0, [r4, #8]
 8005218:	6803      	ldr	r3, [r0, #0]
 800521a:	6a1b      	ldr	r3, [r3, #32]
 800521c:	4798      	blx	r3
 800521e:	f5b0 5f8a 	cmp.w	r0, #4416	; 0x1140
 8005222:	d205      	bcs.n	8005230 <_ZN23FrontendApplicationBase52gotoMeasurement_AccurateScreenWipeTransitionEastImplEv+0x24>
 8005224:	4b42      	ldr	r3, [pc, #264]	; (8005330 <_ZN23FrontendApplicationBase52gotoMeasurement_AccurateScreenWipeTransitionEastImplEv+0x124>)
 8005226:	4a43      	ldr	r2, [pc, #268]	; (8005334 <_ZN23FrontendApplicationBase52gotoMeasurement_AccurateScreenWipeTransitionEastImplEv+0x128>)
 8005228:	21a3      	movs	r1, #163	; 0xa3
    assert(sizeof(PresenterType) <= heap.presenterStorage.element_size() && "Presenter allocation error: Check that all presenters are added to FrontendHeap::PresenterTypes");
 800522a:	4843      	ldr	r0, [pc, #268]	; (8005338 <_ZN23FrontendApplicationBase52gotoMeasurement_AccurateScreenWipeTransitionEastImplEv+0x12c>)
 800522c:	f026 f898 	bl	802b360 <__assert_func>
 8005230:	6860      	ldr	r0, [r4, #4]
 8005232:	6803      	ldr	r3, [r0, #0]
 8005234:	6a1b      	ldr	r3, [r3, #32]
 8005236:	4798      	blx	r3
 8005238:	280f      	cmp	r0, #15
 800523a:	d803      	bhi.n	8005244 <_ZN23FrontendApplicationBase52gotoMeasurement_AccurateScreenWipeTransitionEastImplEv+0x38>
 800523c:	4b3f      	ldr	r3, [pc, #252]	; (800533c <_ZN23FrontendApplicationBase52gotoMeasurement_AccurateScreenWipeTransitionEastImplEv+0x130>)
 800523e:	4a3d      	ldr	r2, [pc, #244]	; (8005334 <_ZN23FrontendApplicationBase52gotoMeasurement_AccurateScreenWipeTransitionEastImplEv+0x128>)
 8005240:	21a4      	movs	r1, #164	; 0xa4
 8005242:	e7f2      	b.n	800522a <_ZN23FrontendApplicationBase52gotoMeasurement_AccurateScreenWipeTransitionEastImplEv+0x1e>
    assert(sizeof(TransType) <= heap.transitionStorage.element_size() && "Transition allocation error: Check that all transitions are added to FrontendHeap::TransitionTypes");
 8005244:	68e0      	ldr	r0, [r4, #12]
 8005246:	6803      	ldr	r3, [r0, #0]
 8005248:	6a1b      	ldr	r3, [r3, #32]
 800524a:	4798      	blx	r3
 800524c:	2837      	cmp	r0, #55	; 0x37
 800524e:	d803      	bhi.n	8005258 <_ZN23FrontendApplicationBase52gotoMeasurement_AccurateScreenWipeTransitionEastImplEv+0x4c>
 8005250:	4b3b      	ldr	r3, [pc, #236]	; (8005340 <_ZN23FrontendApplicationBase52gotoMeasurement_AccurateScreenWipeTransitionEastImplEv+0x134>)
 8005252:	4a38      	ldr	r2, [pc, #224]	; (8005334 <_ZN23FrontendApplicationBase52gotoMeasurement_AccurateScreenWipeTransitionEastImplEv+0x128>)
 8005254:	21a5      	movs	r1, #165	; 0xa5
 8005256:	e7e8      	b.n	800522a <_ZN23FrontendApplicationBase52gotoMeasurement_AccurateScreenWipeTransitionEastImplEv+0x1e>
    Application::getInstance()->clearAllTimerWidgets();
 8005258:	f011 f9ba 	bl	80165d0 <_ZN8touchgfx11Application11getInstanceEv>
    if (*currentTrans)
 800525c:	f8df 90e4 	ldr.w	r9, [pc, #228]	; 8005344 <_ZN23FrontendApplicationBase52gotoMeasurement_AccurateScreenWipeTransitionEastImplEv+0x138>
 8005260:	3004      	adds	r0, #4
 8005262:	f011 fa1b 	bl	801669c <_ZN8touchgfx11Application12TimerWidgets5clearEv>
 8005266:	f8d9 0000 	ldr.w	r0, [r9]
 800526a:	b110      	cbz	r0, 8005272 <_ZN23FrontendApplicationBase52gotoMeasurement_AccurateScreenWipeTransitionEastImplEv+0x66>
        (*currentTrans)->tearDown();
 800526c:	6803      	ldr	r3, [r0, #0]
 800526e:	68db      	ldr	r3, [r3, #12]
 8005270:	4798      	blx	r3
    if (*currentTrans)
 8005272:	f8d9 0000 	ldr.w	r0, [r9]
 8005276:	b110      	cbz	r0, 800527e <_ZN23FrontendApplicationBase52gotoMeasurement_AccurateScreenWipeTransitionEastImplEv+0x72>
        (*currentTrans)->~Transition();
 8005278:	6803      	ldr	r3, [r0, #0]
 800527a:	681b      	ldr	r3, [r3, #0]
 800527c:	4798      	blx	r3
    if (*currentScreen)
 800527e:	f8df 80c8 	ldr.w	r8, [pc, #200]	; 8005348 <_ZN23FrontendApplicationBase52gotoMeasurement_AccurateScreenWipeTransitionEastImplEv+0x13c>
 8005282:	f8d8 0000 	ldr.w	r0, [r8]
 8005286:	b110      	cbz	r0, 800528e <_ZN23FrontendApplicationBase52gotoMeasurement_AccurateScreenWipeTransitionEastImplEv+0x82>
        (*currentScreen)->tearDownScreen();
 8005288:	6803      	ldr	r3, [r0, #0]
 800528a:	695b      	ldr	r3, [r3, #20]
 800528c:	4798      	blx	r3
    if (*currentPresenter)
 800528e:	f8d7 013c 	ldr.w	r0, [r7, #316]	; 0x13c
 8005292:	b110      	cbz	r0, 800529a <_ZN23FrontendApplicationBase52gotoMeasurement_AccurateScreenWipeTransitionEastImplEv+0x8e>
        (*currentPresenter)->deactivate();
 8005294:	6803      	ldr	r3, [r0, #0]
 8005296:	685b      	ldr	r3, [r3, #4]
 8005298:	4798      	blx	r3
    if (*currentScreen)
 800529a:	f8d8 0000 	ldr.w	r0, [r8]
 800529e:	b110      	cbz	r0, 80052a6 <_ZN23FrontendApplicationBase52gotoMeasurement_AccurateScreenWipeTransitionEastImplEv+0x9a>
        (*currentScreen)->~Screen();
 80052a0:	6803      	ldr	r3, [r0, #0]
 80052a2:	681b      	ldr	r3, [r3, #0]
 80052a4:	4798      	blx	r3
    if (*currentPresenter)
 80052a6:	f8d7 013c 	ldr.w	r0, [r7, #316]	; 0x13c
 80052aa:	b110      	cbz	r0, 80052b2 <_ZN23FrontendApplicationBase52gotoMeasurement_AccurateScreenWipeTransitionEastImplEv+0xa6>
        (*currentPresenter)->~Presenter();
 80052ac:	6803      	ldr	r3, [r0, #0]
 80052ae:	689b      	ldr	r3, [r3, #8]
 80052b0:	4798      	blx	r3
    TransType* newTransition = new (&heap.transitionStorage.at<TransType>(0)) TransType;
 80052b2:	68e0      	ldr	r0, [r4, #12]
 80052b4:	2100      	movs	r1, #0
 80052b6:	f7ff fcf7 	bl	8004ca8 <_ZN8touchgfx17AbstractPartition2atINS_14WipeTransitionILNS_9DirectionE2EEEEERT_t>
 80052ba:	2114      	movs	r1, #20
 80052bc:	4605      	mov	r5, r0
 80052be:	f7ff fcf7 	bl	8004cb0 <_ZN8touchgfx14WipeTransitionILNS_9DirectionE2EEC1Eh>
    ScreenType* newScreen = new (&heap.screenStorage.at<ScreenType>(0)) ScreenType;
 80052c2:	68a0      	ldr	r0, [r4, #8]
 80052c4:	6803      	ldr	r3, [r0, #0]
 80052c6:	2100      	movs	r1, #0
 80052c8:	6a5b      	ldr	r3, [r3, #36]	; 0x24
 80052ca:	4798      	blx	r3
 80052cc:	4606      	mov	r6, r0
 80052ce:	f003 fc8b 	bl	8008be8 <_ZN24Measurement_AccurateViewC1Ev>
    PresenterType* newPresenter = new (&heap.presenterStorage.at<PresenterType>(0)) PresenterType(*newScreen);
 80052d2:	6860      	ldr	r0, [r4, #4]
 80052d4:	6803      	ldr	r3, [r0, #0]
 80052d6:	2100      	movs	r1, #0
 80052d8:	6a5b      	ldr	r3, [r3, #36]	; 0x24
 80052da:	4798      	blx	r3
 80052dc:	4631      	mov	r1, r6
 80052de:	4604      	mov	r4, r0
 80052e0:	f003 fc5c 	bl	8008b9c <_ZN29Measurement_AccuratePresenterC1ER24Measurement_AccurateView>
    *currentTrans = newTransition;
 80052e4:	f8c9 5000 	str.w	r5, [r9]
    *currentPresenter = newPresenter;
 80052e8:	f8c7 413c 	str.w	r4, [r7, #316]	; 0x13c
    *currentScreen = newScreen;
 80052ec:	f8c8 6000 	str.w	r6, [r8]
    model->bind(newPresenter);
 80052f0:	b1dc      	cbz	r4, 800532a <_ZN23FrontendApplicationBase52gotoMeasurement_AccurateScreenWipeTransitionEastImplEv+0x11e>
 80052f2:	1d23      	adds	r3, r4, #4
 80052f4:	f8ca 3000 	str.w	r3, [sl]
    newScreen->setupScreen();
 80052f8:	6833      	ldr	r3, [r6, #0]
 80052fa:	f8c4 a008 	str.w	sl, [r4, #8]
 80052fe:	4630      	mov	r0, r6
 8005300:	68db      	ldr	r3, [r3, #12]
 8005302:	63f4      	str	r4, [r6, #60]	; 0x3c
 8005304:	4798      	blx	r3
    newPresenter->activate();
 8005306:	6823      	ldr	r3, [r4, #0]
 8005308:	4620      	mov	r0, r4
 800530a:	681b      	ldr	r3, [r3, #0]
 800530c:	4798      	blx	r3
    newScreen->bindTransition(*newTransition);
 800530e:	4629      	mov	r1, r5
 8005310:	4630      	mov	r0, r6
 8005312:	f012 ff89 	bl	8018228 <_ZN8touchgfx6Screen14bindTransitionERNS_10TransitionE>
    newTransition->init();
 8005316:	682b      	ldr	r3, [r5, #0]
 8005318:	4628      	mov	r0, r5
 800531a:	691b      	ldr	r3, [r3, #16]
 800531c:	4798      	blx	r3
    newTransition->invalidate();
 800531e:	682b      	ldr	r3, [r5, #0]
 8005320:	4628      	mov	r0, r5
 8005322:	695b      	ldr	r3, [r3, #20]
}
 8005324:	e8bd 47f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, lr}
 8005328:	4718      	bx	r3
    model->bind(newPresenter);
 800532a:	4623      	mov	r3, r4
 800532c:	e7e2      	b.n	80052f4 <_ZN23FrontendApplicationBase52gotoMeasurement_AccurateScreenWipeTransitionEastImplEv+0xe8>
 800532e:	bf00      	nop
 8005330:	0802d06c 	.word	0x0802d06c
 8005334:	0802dccf 	.word	0x0802dccf
 8005338:	0802d208 	.word	0x0802d208
 800533c:	0802d24f 	.word	0x0802d24f
 8005340:	0802d2f2 	.word	0x0802d2f2
 8005344:	20013864 	.word	0x20013864
 8005348:	20013860 	.word	0x20013860

0800534c <_ZN23FrontendApplicationBase61gotoMeasurement_Single_Display_3PScreenWipeTransitionEastImplEv>:
{
 800534c:	e92d 47f0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, lr}
    touchgfx::makeTransition<Measurement_Single_Display_3PView, Measurement_Single_Display_3PPresenter, touchgfx::WipeTransition<EAST>, Model >(&currentScreen, &currentPresenter, frontendHeap, &currentTransition, &model);
 8005350:	e9d0 4a55 	ldrd	r4, sl, [r0, #340]	; 0x154
{
 8005354:	4607      	mov	r7, r0
    assert(sizeof(ScreenType) <= heap.screenStorage.element_size() && "View allocation error: Check that all views are added to FrontendHeap::ViewTypes");
 8005356:	68a0      	ldr	r0, [r4, #8]
 8005358:	6803      	ldr	r3, [r0, #0]
 800535a:	6a1b      	ldr	r3, [r3, #32]
 800535c:	4798      	blx	r3
 800535e:	f241 035b 	movw	r3, #4187	; 0x105b
 8005362:	4298      	cmp	r0, r3
 8005364:	d805      	bhi.n	8005372 <_ZN23FrontendApplicationBase61gotoMeasurement_Single_Display_3PScreenWipeTransitionEastImplEv+0x26>
 8005366:	4b42      	ldr	r3, [pc, #264]	; (8005470 <_ZN23FrontendApplicationBase61gotoMeasurement_Single_Display_3PScreenWipeTransitionEastImplEv+0x124>)
 8005368:	4a42      	ldr	r2, [pc, #264]	; (8005474 <_ZN23FrontendApplicationBase61gotoMeasurement_Single_Display_3PScreenWipeTransitionEastImplEv+0x128>)
 800536a:	21a3      	movs	r1, #163	; 0xa3
    assert(sizeof(PresenterType) <= heap.presenterStorage.element_size() && "Presenter allocation error: Check that all presenters are added to FrontendHeap::PresenterTypes");
 800536c:	4842      	ldr	r0, [pc, #264]	; (8005478 <_ZN23FrontendApplicationBase61gotoMeasurement_Single_Display_3PScreenWipeTransitionEastImplEv+0x12c>)
 800536e:	f025 fff7 	bl	802b360 <__assert_func>
 8005372:	6860      	ldr	r0, [r4, #4]
 8005374:	6803      	ldr	r3, [r0, #0]
 8005376:	6a1b      	ldr	r3, [r3, #32]
 8005378:	4798      	blx	r3
 800537a:	280f      	cmp	r0, #15
 800537c:	d803      	bhi.n	8005386 <_ZN23FrontendApplicationBase61gotoMeasurement_Single_Display_3PScreenWipeTransitionEastImplEv+0x3a>
 800537e:	4b3f      	ldr	r3, [pc, #252]	; (800547c <_ZN23FrontendApplicationBase61gotoMeasurement_Single_Display_3PScreenWipeTransitionEastImplEv+0x130>)
 8005380:	4a3c      	ldr	r2, [pc, #240]	; (8005474 <_ZN23FrontendApplicationBase61gotoMeasurement_Single_Display_3PScreenWipeTransitionEastImplEv+0x128>)
 8005382:	21a4      	movs	r1, #164	; 0xa4
 8005384:	e7f2      	b.n	800536c <_ZN23FrontendApplicationBase61gotoMeasurement_Single_Display_3PScreenWipeTransitionEastImplEv+0x20>
    assert(sizeof(TransType) <= heap.transitionStorage.element_size() && "Transition allocation error: Check that all transitions are added to FrontendHeap::TransitionTypes");
 8005386:	68e0      	ldr	r0, [r4, #12]
 8005388:	6803      	ldr	r3, [r0, #0]
 800538a:	6a1b      	ldr	r3, [r3, #32]
 800538c:	4798      	blx	r3
 800538e:	2837      	cmp	r0, #55	; 0x37
 8005390:	d803      	bhi.n	800539a <_ZN23FrontendApplicationBase61gotoMeasurement_Single_Display_3PScreenWipeTransitionEastImplEv+0x4e>
 8005392:	4b3b      	ldr	r3, [pc, #236]	; (8005480 <_ZN23FrontendApplicationBase61gotoMeasurement_Single_Display_3PScreenWipeTransitionEastImplEv+0x134>)
 8005394:	4a37      	ldr	r2, [pc, #220]	; (8005474 <_ZN23FrontendApplicationBase61gotoMeasurement_Single_Display_3PScreenWipeTransitionEastImplEv+0x128>)
 8005396:	21a5      	movs	r1, #165	; 0xa5
 8005398:	e7e8      	b.n	800536c <_ZN23FrontendApplicationBase61gotoMeasurement_Single_Display_3PScreenWipeTransitionEastImplEv+0x20>
    Application::getInstance()->clearAllTimerWidgets();
 800539a:	f011 f919 	bl	80165d0 <_ZN8touchgfx11Application11getInstanceEv>
    if (*currentTrans)
 800539e:	f8df 90e4 	ldr.w	r9, [pc, #228]	; 8005484 <_ZN23FrontendApplicationBase61gotoMeasurement_Single_Display_3PScreenWipeTransitionEastImplEv+0x138>
 80053a2:	3004      	adds	r0, #4
 80053a4:	f011 f97a 	bl	801669c <_ZN8touchgfx11Application12TimerWidgets5clearEv>
 80053a8:	f8d9 0000 	ldr.w	r0, [r9]
 80053ac:	b110      	cbz	r0, 80053b4 <_ZN23FrontendApplicationBase61gotoMeasurement_Single_Display_3PScreenWipeTransitionEastImplEv+0x68>
        (*currentTrans)->tearDown();
 80053ae:	6803      	ldr	r3, [r0, #0]
 80053b0:	68db      	ldr	r3, [r3, #12]
 80053b2:	4798      	blx	r3
    if (*currentTrans)
 80053b4:	f8d9 0000 	ldr.w	r0, [r9]
 80053b8:	b110      	cbz	r0, 80053c0 <_ZN23FrontendApplicationBase61gotoMeasurement_Single_Display_3PScreenWipeTransitionEastImplEv+0x74>
        (*currentTrans)->~Transition();
 80053ba:	6803      	ldr	r3, [r0, #0]
 80053bc:	681b      	ldr	r3, [r3, #0]
 80053be:	4798      	blx	r3
    if (*currentScreen)
 80053c0:	f8df 80c4 	ldr.w	r8, [pc, #196]	; 8005488 <_ZN23FrontendApplicationBase61gotoMeasurement_Single_Display_3PScreenWipeTransitionEastImplEv+0x13c>
 80053c4:	f8d8 0000 	ldr.w	r0, [r8]
 80053c8:	b110      	cbz	r0, 80053d0 <_ZN23FrontendApplicationBase61gotoMeasurement_Single_Display_3PScreenWipeTransitionEastImplEv+0x84>
        (*currentScreen)->tearDownScreen();
 80053ca:	6803      	ldr	r3, [r0, #0]
 80053cc:	695b      	ldr	r3, [r3, #20]
 80053ce:	4798      	blx	r3
    if (*currentPresenter)
 80053d0:	f8d7 013c 	ldr.w	r0, [r7, #316]	; 0x13c
 80053d4:	b110      	cbz	r0, 80053dc <_ZN23FrontendApplicationBase61gotoMeasurement_Single_Display_3PScreenWipeTransitionEastImplEv+0x90>
        (*currentPresenter)->deactivate();
 80053d6:	6803      	ldr	r3, [r0, #0]
 80053d8:	685b      	ldr	r3, [r3, #4]
 80053da:	4798      	blx	r3
    if (*currentScreen)
 80053dc:	f8d8 0000 	ldr.w	r0, [r8]
 80053e0:	b110      	cbz	r0, 80053e8 <_ZN23FrontendApplicationBase61gotoMeasurement_Single_Display_3PScreenWipeTransitionEastImplEv+0x9c>
        (*currentScreen)->~Screen();
 80053e2:	6803      	ldr	r3, [r0, #0]
 80053e4:	681b      	ldr	r3, [r3, #0]
 80053e6:	4798      	blx	r3
    if (*currentPresenter)
 80053e8:	f8d7 013c 	ldr.w	r0, [r7, #316]	; 0x13c
 80053ec:	b110      	cbz	r0, 80053f4 <_ZN23FrontendApplicationBase61gotoMeasurement_Single_Display_3PScreenWipeTransitionEastImplEv+0xa8>
        (*currentPresenter)->~Presenter();
 80053ee:	6803      	ldr	r3, [r0, #0]
 80053f0:	689b      	ldr	r3, [r3, #8]
 80053f2:	4798      	blx	r3
    TransType* newTransition = new (&heap.transitionStorage.at<TransType>(0)) TransType;
 80053f4:	68e0      	ldr	r0, [r4, #12]
 80053f6:	2100      	movs	r1, #0
 80053f8:	f7ff fc56 	bl	8004ca8 <_ZN8touchgfx17AbstractPartition2atINS_14WipeTransitionILNS_9DirectionE2EEEEERT_t>
 80053fc:	2114      	movs	r1, #20
 80053fe:	4605      	mov	r5, r0
 8005400:	f7ff fc56 	bl	8004cb0 <_ZN8touchgfx14WipeTransitionILNS_9DirectionE2EEC1Eh>
    ScreenType* newScreen = new (&heap.screenStorage.at<ScreenType>(0)) ScreenType;
 8005404:	68a0      	ldr	r0, [r4, #8]
 8005406:	6803      	ldr	r3, [r0, #0]
 8005408:	2100      	movs	r1, #0
 800540a:	6a5b      	ldr	r3, [r3, #36]	; 0x24
 800540c:	4798      	blx	r3
 800540e:	4606      	mov	r6, r0
 8005410:	f003 fdc8 	bl	8008fa4 <_ZN33Measurement_Single_Display_3PViewC1Ev>
    PresenterType* newPresenter = new (&heap.presenterStorage.at<PresenterType>(0)) PresenterType(*newScreen);
 8005414:	6860      	ldr	r0, [r4, #4]
 8005416:	6803      	ldr	r3, [r0, #0]
 8005418:	2100      	movs	r1, #0
 800541a:	6a5b      	ldr	r3, [r3, #36]	; 0x24
 800541c:	4798      	blx	r3
 800541e:	4631      	mov	r1, r6
 8005420:	4604      	mov	r4, r0
 8005422:	f003 fd99 	bl	8008f58 <_ZN38Measurement_Single_Display_3PPresenterC1ER33Measurement_Single_Display_3PView>
    *currentTrans = newTransition;
 8005426:	f8c9 5000 	str.w	r5, [r9]
    *currentPresenter = newPresenter;
 800542a:	f8c7 413c 	str.w	r4, [r7, #316]	; 0x13c
    *currentScreen = newScreen;
 800542e:	f8c8 6000 	str.w	r6, [r8]
    model->bind(newPresenter);
 8005432:	b1dc      	cbz	r4, 800546c <_ZN23FrontendApplicationBase61gotoMeasurement_Single_Display_3PScreenWipeTransitionEastImplEv+0x120>
 8005434:	1d23      	adds	r3, r4, #4
 8005436:	f8ca 3000 	str.w	r3, [sl]
    newScreen->setupScreen();
 800543a:	6833      	ldr	r3, [r6, #0]
 800543c:	f8c4 a008 	str.w	sl, [r4, #8]
 8005440:	4630      	mov	r0, r6
 8005442:	68db      	ldr	r3, [r3, #12]
 8005444:	63f4      	str	r4, [r6, #60]	; 0x3c
 8005446:	4798      	blx	r3
    newPresenter->activate();
 8005448:	6823      	ldr	r3, [r4, #0]
 800544a:	4620      	mov	r0, r4
 800544c:	681b      	ldr	r3, [r3, #0]
 800544e:	4798      	blx	r3
    newScreen->bindTransition(*newTransition);
 8005450:	4629      	mov	r1, r5
 8005452:	4630      	mov	r0, r6
 8005454:	f012 fee8 	bl	8018228 <_ZN8touchgfx6Screen14bindTransitionERNS_10TransitionE>
    newTransition->init();
 8005458:	682b      	ldr	r3, [r5, #0]
 800545a:	4628      	mov	r0, r5
 800545c:	691b      	ldr	r3, [r3, #16]
 800545e:	4798      	blx	r3
    newTransition->invalidate();
 8005460:	682b      	ldr	r3, [r5, #0]
 8005462:	4628      	mov	r0, r5
 8005464:	695b      	ldr	r3, [r3, #20]
}
 8005466:	e8bd 47f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, lr}
 800546a:	4718      	bx	r3
    model->bind(newPresenter);
 800546c:	4623      	mov	r3, r4
 800546e:	e7e2      	b.n	8005436 <_ZN23FrontendApplicationBase61gotoMeasurement_Single_Display_3PScreenWipeTransitionEastImplEv+0xea>
 8005470:	0802d06c 	.word	0x0802d06c
 8005474:	0802ddff 	.word	0x0802ddff
 8005478:	0802d208 	.word	0x0802d208
 800547c:	0802d24f 	.word	0x0802d24f
 8005480:	0802d2f2 	.word	0x0802d2f2
 8005484:	20013864 	.word	0x20013864
 8005488:	20013860 	.word	0x20013860

0800548c <_ZN23FrontendApplicationBase61gotoMeasurement_Single_Display_1PScreenWipeTransitionEastImplEv>:
{
 800548c:	e92d 47f0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, lr}
    touchgfx::makeTransition<Measurement_Single_Display_1PView, Measurement_Single_Display_1PPresenter, touchgfx::WipeTransition<EAST>, Model >(&currentScreen, &currentPresenter, frontendHeap, &currentTransition, &model);
 8005490:	e9d0 4a55 	ldrd	r4, sl, [r0, #340]	; 0x154
{
 8005494:	4607      	mov	r7, r0
    assert(sizeof(ScreenType) <= heap.screenStorage.element_size() && "View allocation error: Check that all views are added to FrontendHeap::ViewTypes");
 8005496:	68a0      	ldr	r0, [r4, #8]
 8005498:	6803      	ldr	r3, [r0, #0]
 800549a:	6a1b      	ldr	r3, [r3, #32]
 800549c:	4798      	blx	r3
 800549e:	f241 33f7 	movw	r3, #5111	; 0x13f7
 80054a2:	4298      	cmp	r0, r3
 80054a4:	d805      	bhi.n	80054b2 <_ZN23FrontendApplicationBase61gotoMeasurement_Single_Display_1PScreenWipeTransitionEastImplEv+0x26>
 80054a6:	4b42      	ldr	r3, [pc, #264]	; (80055b0 <_ZN23FrontendApplicationBase61gotoMeasurement_Single_Display_1PScreenWipeTransitionEastImplEv+0x124>)
 80054a8:	4a42      	ldr	r2, [pc, #264]	; (80055b4 <_ZN23FrontendApplicationBase61gotoMeasurement_Single_Display_1PScreenWipeTransitionEastImplEv+0x128>)
 80054aa:	21a3      	movs	r1, #163	; 0xa3
    assert(sizeof(PresenterType) <= heap.presenterStorage.element_size() && "Presenter allocation error: Check that all presenters are added to FrontendHeap::PresenterTypes");
 80054ac:	4842      	ldr	r0, [pc, #264]	; (80055b8 <_ZN23FrontendApplicationBase61gotoMeasurement_Single_Display_1PScreenWipeTransitionEastImplEv+0x12c>)
 80054ae:	f025 ff57 	bl	802b360 <__assert_func>
 80054b2:	6860      	ldr	r0, [r4, #4]
 80054b4:	6803      	ldr	r3, [r0, #0]
 80054b6:	6a1b      	ldr	r3, [r3, #32]
 80054b8:	4798      	blx	r3
 80054ba:	280f      	cmp	r0, #15
 80054bc:	d803      	bhi.n	80054c6 <_ZN23FrontendApplicationBase61gotoMeasurement_Single_Display_1PScreenWipeTransitionEastImplEv+0x3a>
 80054be:	4b3f      	ldr	r3, [pc, #252]	; (80055bc <_ZN23FrontendApplicationBase61gotoMeasurement_Single_Display_1PScreenWipeTransitionEastImplEv+0x130>)
 80054c0:	4a3c      	ldr	r2, [pc, #240]	; (80055b4 <_ZN23FrontendApplicationBase61gotoMeasurement_Single_Display_1PScreenWipeTransitionEastImplEv+0x128>)
 80054c2:	21a4      	movs	r1, #164	; 0xa4
 80054c4:	e7f2      	b.n	80054ac <_ZN23FrontendApplicationBase61gotoMeasurement_Single_Display_1PScreenWipeTransitionEastImplEv+0x20>
    assert(sizeof(TransType) <= heap.transitionStorage.element_size() && "Transition allocation error: Check that all transitions are added to FrontendHeap::TransitionTypes");
 80054c6:	68e0      	ldr	r0, [r4, #12]
 80054c8:	6803      	ldr	r3, [r0, #0]
 80054ca:	6a1b      	ldr	r3, [r3, #32]
 80054cc:	4798      	blx	r3
 80054ce:	2837      	cmp	r0, #55	; 0x37
 80054d0:	d803      	bhi.n	80054da <_ZN23FrontendApplicationBase61gotoMeasurement_Single_Display_1PScreenWipeTransitionEastImplEv+0x4e>
 80054d2:	4b3b      	ldr	r3, [pc, #236]	; (80055c0 <_ZN23FrontendApplicationBase61gotoMeasurement_Single_Display_1PScreenWipeTransitionEastImplEv+0x134>)
 80054d4:	4a37      	ldr	r2, [pc, #220]	; (80055b4 <_ZN23FrontendApplicationBase61gotoMeasurement_Single_Display_1PScreenWipeTransitionEastImplEv+0x128>)
 80054d6:	21a5      	movs	r1, #165	; 0xa5
 80054d8:	e7e8      	b.n	80054ac <_ZN23FrontendApplicationBase61gotoMeasurement_Single_Display_1PScreenWipeTransitionEastImplEv+0x20>
    Application::getInstance()->clearAllTimerWidgets();
 80054da:	f011 f879 	bl	80165d0 <_ZN8touchgfx11Application11getInstanceEv>
    if (*currentTrans)
 80054de:	f8df 90e4 	ldr.w	r9, [pc, #228]	; 80055c4 <_ZN23FrontendApplicationBase61gotoMeasurement_Single_Display_1PScreenWipeTransitionEastImplEv+0x138>
 80054e2:	3004      	adds	r0, #4
 80054e4:	f011 f8da 	bl	801669c <_ZN8touchgfx11Application12TimerWidgets5clearEv>
 80054e8:	f8d9 0000 	ldr.w	r0, [r9]
 80054ec:	b110      	cbz	r0, 80054f4 <_ZN23FrontendApplicationBase61gotoMeasurement_Single_Display_1PScreenWipeTransitionEastImplEv+0x68>
        (*currentTrans)->tearDown();
 80054ee:	6803      	ldr	r3, [r0, #0]
 80054f0:	68db      	ldr	r3, [r3, #12]
 80054f2:	4798      	blx	r3
    if (*currentTrans)
 80054f4:	f8d9 0000 	ldr.w	r0, [r9]
 80054f8:	b110      	cbz	r0, 8005500 <_ZN23FrontendApplicationBase61gotoMeasurement_Single_Display_1PScreenWipeTransitionEastImplEv+0x74>
        (*currentTrans)->~Transition();
 80054fa:	6803      	ldr	r3, [r0, #0]
 80054fc:	681b      	ldr	r3, [r3, #0]
 80054fe:	4798      	blx	r3
    if (*currentScreen)
 8005500:	f8df 80c4 	ldr.w	r8, [pc, #196]	; 80055c8 <_ZN23FrontendApplicationBase61gotoMeasurement_Single_Display_1PScreenWipeTransitionEastImplEv+0x13c>
 8005504:	f8d8 0000 	ldr.w	r0, [r8]
 8005508:	b110      	cbz	r0, 8005510 <_ZN23FrontendApplicationBase61gotoMeasurement_Single_Display_1PScreenWipeTransitionEastImplEv+0x84>
        (*currentScreen)->tearDownScreen();
 800550a:	6803      	ldr	r3, [r0, #0]
 800550c:	695b      	ldr	r3, [r3, #20]
 800550e:	4798      	blx	r3
    if (*currentPresenter)
 8005510:	f8d7 013c 	ldr.w	r0, [r7, #316]	; 0x13c
 8005514:	b110      	cbz	r0, 800551c <_ZN23FrontendApplicationBase61gotoMeasurement_Single_Display_1PScreenWipeTransitionEastImplEv+0x90>
        (*currentPresenter)->deactivate();
 8005516:	6803      	ldr	r3, [r0, #0]
 8005518:	685b      	ldr	r3, [r3, #4]
 800551a:	4798      	blx	r3
    if (*currentScreen)
 800551c:	f8d8 0000 	ldr.w	r0, [r8]
 8005520:	b110      	cbz	r0, 8005528 <_ZN23FrontendApplicationBase61gotoMeasurement_Single_Display_1PScreenWipeTransitionEastImplEv+0x9c>
        (*currentScreen)->~Screen();
 8005522:	6803      	ldr	r3, [r0, #0]
 8005524:	681b      	ldr	r3, [r3, #0]
 8005526:	4798      	blx	r3
    if (*currentPresenter)
 8005528:	f8d7 013c 	ldr.w	r0, [r7, #316]	; 0x13c
 800552c:	b110      	cbz	r0, 8005534 <_ZN23FrontendApplicationBase61gotoMeasurement_Single_Display_1PScreenWipeTransitionEastImplEv+0xa8>
        (*currentPresenter)->~Presenter();
 800552e:	6803      	ldr	r3, [r0, #0]
 8005530:	689b      	ldr	r3, [r3, #8]
 8005532:	4798      	blx	r3
    TransType* newTransition = new (&heap.transitionStorage.at<TransType>(0)) TransType;
 8005534:	68e0      	ldr	r0, [r4, #12]
 8005536:	2100      	movs	r1, #0
 8005538:	f7ff fbb6 	bl	8004ca8 <_ZN8touchgfx17AbstractPartition2atINS_14WipeTransitionILNS_9DirectionE2EEEEERT_t>
 800553c:	2114      	movs	r1, #20
 800553e:	4605      	mov	r5, r0
 8005540:	f7ff fbb6 	bl	8004cb0 <_ZN8touchgfx14WipeTransitionILNS_9DirectionE2EEC1Eh>
    ScreenType* newScreen = new (&heap.screenStorage.at<ScreenType>(0)) ScreenType;
 8005544:	68a0      	ldr	r0, [r4, #8]
 8005546:	6803      	ldr	r3, [r0, #0]
 8005548:	2100      	movs	r1, #0
 800554a:	6a5b      	ldr	r3, [r3, #36]	; 0x24
 800554c:	4798      	blx	r3
 800554e:	4606      	mov	r6, r0
 8005550:	f003 fc88 	bl	8008e64 <_ZN33Measurement_Single_Display_1PViewC1Ev>
    PresenterType* newPresenter = new (&heap.presenterStorage.at<PresenterType>(0)) PresenterType(*newScreen);
 8005554:	6860      	ldr	r0, [r4, #4]
 8005556:	6803      	ldr	r3, [r0, #0]
 8005558:	2100      	movs	r1, #0
 800555a:	6a5b      	ldr	r3, [r3, #36]	; 0x24
 800555c:	4798      	blx	r3
 800555e:	4631      	mov	r1, r6
 8005560:	4604      	mov	r4, r0
 8005562:	f003 fc59 	bl	8008e18 <_ZN38Measurement_Single_Display_1PPresenterC1ER33Measurement_Single_Display_1PView>
    *currentTrans = newTransition;
 8005566:	f8c9 5000 	str.w	r5, [r9]
    *currentPresenter = newPresenter;
 800556a:	f8c7 413c 	str.w	r4, [r7, #316]	; 0x13c
    *currentScreen = newScreen;
 800556e:	f8c8 6000 	str.w	r6, [r8]
    model->bind(newPresenter);
 8005572:	b1dc      	cbz	r4, 80055ac <_ZN23FrontendApplicationBase61gotoMeasurement_Single_Display_1PScreenWipeTransitionEastImplEv+0x120>
 8005574:	1d23      	adds	r3, r4, #4
 8005576:	f8ca 3000 	str.w	r3, [sl]
    newScreen->setupScreen();
 800557a:	6833      	ldr	r3, [r6, #0]
 800557c:	f8c4 a008 	str.w	sl, [r4, #8]
 8005580:	4630      	mov	r0, r6
 8005582:	68db      	ldr	r3, [r3, #12]
 8005584:	63f4      	str	r4, [r6, #60]	; 0x3c
 8005586:	4798      	blx	r3
    newPresenter->activate();
 8005588:	6823      	ldr	r3, [r4, #0]
 800558a:	4620      	mov	r0, r4
 800558c:	681b      	ldr	r3, [r3, #0]
 800558e:	4798      	blx	r3
    newScreen->bindTransition(*newTransition);
 8005590:	4629      	mov	r1, r5
 8005592:	4630      	mov	r0, r6
 8005594:	f012 fe48 	bl	8018228 <_ZN8touchgfx6Screen14bindTransitionERNS_10TransitionE>
    newTransition->init();
 8005598:	682b      	ldr	r3, [r5, #0]
 800559a:	4628      	mov	r0, r5
 800559c:	691b      	ldr	r3, [r3, #16]
 800559e:	4798      	blx	r3
    newTransition->invalidate();
 80055a0:	682b      	ldr	r3, [r5, #0]
 80055a2:	4628      	mov	r0, r5
 80055a4:	695b      	ldr	r3, [r3, #20]
}
 80055a6:	e8bd 47f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, lr}
 80055aa:	4718      	bx	r3
    model->bind(newPresenter);
 80055ac:	4623      	mov	r3, r4
 80055ae:	e7e2      	b.n	8005576 <_ZN23FrontendApplicationBase61gotoMeasurement_Single_Display_1PScreenWipeTransitionEastImplEv+0xea>
 80055b0:	0802d06c 	.word	0x0802d06c
 80055b4:	0802df41 	.word	0x0802df41
 80055b8:	0802d208 	.word	0x0802d208
 80055bc:	0802d24f 	.word	0x0802d24f
 80055c0:	0802d2f2 	.word	0x0802d2f2
 80055c4:	20013864 	.word	0x20013864
 80055c8:	20013860 	.word	0x20013860

080055cc <_ZN23FrontendApplicationBase50gotoMeasurement_SingleScreenWipeTransitionEastImplEv>:
{
 80055cc:	e92d 47f0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, lr}
    touchgfx::makeTransition<Measurement_SingleView, Measurement_SinglePresenter, touchgfx::WipeTransition<EAST>, Model >(&currentScreen, &currentPresenter, frontendHeap, &currentTransition, &model);
 80055d0:	e9d0 4a55 	ldrd	r4, sl, [r0, #340]	; 0x154
{
 80055d4:	4607      	mov	r7, r0
    assert(sizeof(ScreenType) <= heap.screenStorage.element_size() && "View allocation error: Check that all views are added to FrontendHeap::ViewTypes");
 80055d6:	68a0      	ldr	r0, [r4, #8]
 80055d8:	6803      	ldr	r3, [r0, #0]
 80055da:	6a1b      	ldr	r3, [r3, #32]
 80055dc:	4798      	blx	r3
 80055de:	f5b0 5f8a 	cmp.w	r0, #4416	; 0x1140
 80055e2:	d205      	bcs.n	80055f0 <_ZN23FrontendApplicationBase50gotoMeasurement_SingleScreenWipeTransitionEastImplEv+0x24>
 80055e4:	4b42      	ldr	r3, [pc, #264]	; (80056f0 <_ZN23FrontendApplicationBase50gotoMeasurement_SingleScreenWipeTransitionEastImplEv+0x124>)
 80055e6:	4a43      	ldr	r2, [pc, #268]	; (80056f4 <_ZN23FrontendApplicationBase50gotoMeasurement_SingleScreenWipeTransitionEastImplEv+0x128>)
 80055e8:	21a3      	movs	r1, #163	; 0xa3
    assert(sizeof(PresenterType) <= heap.presenterStorage.element_size() && "Presenter allocation error: Check that all presenters are added to FrontendHeap::PresenterTypes");
 80055ea:	4843      	ldr	r0, [pc, #268]	; (80056f8 <_ZN23FrontendApplicationBase50gotoMeasurement_SingleScreenWipeTransitionEastImplEv+0x12c>)
 80055ec:	f025 feb8 	bl	802b360 <__assert_func>
 80055f0:	6860      	ldr	r0, [r4, #4]
 80055f2:	6803      	ldr	r3, [r0, #0]
 80055f4:	6a1b      	ldr	r3, [r3, #32]
 80055f6:	4798      	blx	r3
 80055f8:	280f      	cmp	r0, #15
 80055fa:	d803      	bhi.n	8005604 <_ZN23FrontendApplicationBase50gotoMeasurement_SingleScreenWipeTransitionEastImplEv+0x38>
 80055fc:	4b3f      	ldr	r3, [pc, #252]	; (80056fc <_ZN23FrontendApplicationBase50gotoMeasurement_SingleScreenWipeTransitionEastImplEv+0x130>)
 80055fe:	4a3d      	ldr	r2, [pc, #244]	; (80056f4 <_ZN23FrontendApplicationBase50gotoMeasurement_SingleScreenWipeTransitionEastImplEv+0x128>)
 8005600:	21a4      	movs	r1, #164	; 0xa4
 8005602:	e7f2      	b.n	80055ea <_ZN23FrontendApplicationBase50gotoMeasurement_SingleScreenWipeTransitionEastImplEv+0x1e>
    assert(sizeof(TransType) <= heap.transitionStorage.element_size() && "Transition allocation error: Check that all transitions are added to FrontendHeap::TransitionTypes");
 8005604:	68e0      	ldr	r0, [r4, #12]
 8005606:	6803      	ldr	r3, [r0, #0]
 8005608:	6a1b      	ldr	r3, [r3, #32]
 800560a:	4798      	blx	r3
 800560c:	2837      	cmp	r0, #55	; 0x37
 800560e:	d803      	bhi.n	8005618 <_ZN23FrontendApplicationBase50gotoMeasurement_SingleScreenWipeTransitionEastImplEv+0x4c>
 8005610:	4b3b      	ldr	r3, [pc, #236]	; (8005700 <_ZN23FrontendApplicationBase50gotoMeasurement_SingleScreenWipeTransitionEastImplEv+0x134>)
 8005612:	4a38      	ldr	r2, [pc, #224]	; (80056f4 <_ZN23FrontendApplicationBase50gotoMeasurement_SingleScreenWipeTransitionEastImplEv+0x128>)
 8005614:	21a5      	movs	r1, #165	; 0xa5
 8005616:	e7e8      	b.n	80055ea <_ZN23FrontendApplicationBase50gotoMeasurement_SingleScreenWipeTransitionEastImplEv+0x1e>
    Application::getInstance()->clearAllTimerWidgets();
 8005618:	f010 ffda 	bl	80165d0 <_ZN8touchgfx11Application11getInstanceEv>
    if (*currentTrans)
 800561c:	f8df 90e4 	ldr.w	r9, [pc, #228]	; 8005704 <_ZN23FrontendApplicationBase50gotoMeasurement_SingleScreenWipeTransitionEastImplEv+0x138>
 8005620:	3004      	adds	r0, #4
 8005622:	f011 f83b 	bl	801669c <_ZN8touchgfx11Application12TimerWidgets5clearEv>
 8005626:	f8d9 0000 	ldr.w	r0, [r9]
 800562a:	b110      	cbz	r0, 8005632 <_ZN23FrontendApplicationBase50gotoMeasurement_SingleScreenWipeTransitionEastImplEv+0x66>
        (*currentTrans)->tearDown();
 800562c:	6803      	ldr	r3, [r0, #0]
 800562e:	68db      	ldr	r3, [r3, #12]
 8005630:	4798      	blx	r3
    if (*currentTrans)
 8005632:	f8d9 0000 	ldr.w	r0, [r9]
 8005636:	b110      	cbz	r0, 800563e <_ZN23FrontendApplicationBase50gotoMeasurement_SingleScreenWipeTransitionEastImplEv+0x72>
        (*currentTrans)->~Transition();
 8005638:	6803      	ldr	r3, [r0, #0]
 800563a:	681b      	ldr	r3, [r3, #0]
 800563c:	4798      	blx	r3
    if (*currentScreen)
 800563e:	f8df 80c8 	ldr.w	r8, [pc, #200]	; 8005708 <_ZN23FrontendApplicationBase50gotoMeasurement_SingleScreenWipeTransitionEastImplEv+0x13c>
 8005642:	f8d8 0000 	ldr.w	r0, [r8]
 8005646:	b110      	cbz	r0, 800564e <_ZN23FrontendApplicationBase50gotoMeasurement_SingleScreenWipeTransitionEastImplEv+0x82>
        (*currentScreen)->tearDownScreen();
 8005648:	6803      	ldr	r3, [r0, #0]
 800564a:	695b      	ldr	r3, [r3, #20]
 800564c:	4798      	blx	r3
    if (*currentPresenter)
 800564e:	f8d7 013c 	ldr.w	r0, [r7, #316]	; 0x13c
 8005652:	b110      	cbz	r0, 800565a <_ZN23FrontendApplicationBase50gotoMeasurement_SingleScreenWipeTransitionEastImplEv+0x8e>
        (*currentPresenter)->deactivate();
 8005654:	6803      	ldr	r3, [r0, #0]
 8005656:	685b      	ldr	r3, [r3, #4]
 8005658:	4798      	blx	r3
    if (*currentScreen)
 800565a:	f8d8 0000 	ldr.w	r0, [r8]
 800565e:	b110      	cbz	r0, 8005666 <_ZN23FrontendApplicationBase50gotoMeasurement_SingleScreenWipeTransitionEastImplEv+0x9a>
        (*currentScreen)->~Screen();
 8005660:	6803      	ldr	r3, [r0, #0]
 8005662:	681b      	ldr	r3, [r3, #0]
 8005664:	4798      	blx	r3
    if (*currentPresenter)
 8005666:	f8d7 013c 	ldr.w	r0, [r7, #316]	; 0x13c
 800566a:	b110      	cbz	r0, 8005672 <_ZN23FrontendApplicationBase50gotoMeasurement_SingleScreenWipeTransitionEastImplEv+0xa6>
        (*currentPresenter)->~Presenter();
 800566c:	6803      	ldr	r3, [r0, #0]
 800566e:	689b      	ldr	r3, [r3, #8]
 8005670:	4798      	blx	r3
    TransType* newTransition = new (&heap.transitionStorage.at<TransType>(0)) TransType;
 8005672:	68e0      	ldr	r0, [r4, #12]
 8005674:	2100      	movs	r1, #0
 8005676:	f7ff fb17 	bl	8004ca8 <_ZN8touchgfx17AbstractPartition2atINS_14WipeTransitionILNS_9DirectionE2EEEEERT_t>
 800567a:	2114      	movs	r1, #20
 800567c:	4605      	mov	r5, r0
 800567e:	f7ff fb17 	bl	8004cb0 <_ZN8touchgfx14WipeTransitionILNS_9DirectionE2EEC1Eh>
    ScreenType* newScreen = new (&heap.screenStorage.at<ScreenType>(0)) ScreenType;
 8005682:	68a0      	ldr	r0, [r4, #8]
 8005684:	6803      	ldr	r3, [r0, #0]
 8005686:	2100      	movs	r1, #0
 8005688:	6a5b      	ldr	r3, [r3, #36]	; 0x24
 800568a:	4798      	blx	r3
 800568c:	4606      	mov	r6, r0
 800568e:	f003 fb8f 	bl	8008db0 <_ZN22Measurement_SingleViewC1Ev>
    PresenterType* newPresenter = new (&heap.presenterStorage.at<PresenterType>(0)) PresenterType(*newScreen);
 8005692:	6860      	ldr	r0, [r4, #4]
 8005694:	6803      	ldr	r3, [r0, #0]
 8005696:	2100      	movs	r1, #0
 8005698:	6a5b      	ldr	r3, [r3, #36]	; 0x24
 800569a:	4798      	blx	r3
 800569c:	4631      	mov	r1, r6
 800569e:	4604      	mov	r4, r0
 80056a0:	f003 fb60 	bl	8008d64 <_ZN27Measurement_SinglePresenterC1ER22Measurement_SingleView>
    *currentTrans = newTransition;
 80056a4:	f8c9 5000 	str.w	r5, [r9]
    *currentPresenter = newPresenter;
 80056a8:	f8c7 413c 	str.w	r4, [r7, #316]	; 0x13c
    *currentScreen = newScreen;
 80056ac:	f8c8 6000 	str.w	r6, [r8]
    model->bind(newPresenter);
 80056b0:	b1dc      	cbz	r4, 80056ea <_ZN23FrontendApplicationBase50gotoMeasurement_SingleScreenWipeTransitionEastImplEv+0x11e>
 80056b2:	1d23      	adds	r3, r4, #4
 80056b4:	f8ca 3000 	str.w	r3, [sl]
    newScreen->setupScreen();
 80056b8:	6833      	ldr	r3, [r6, #0]
 80056ba:	f8c4 a008 	str.w	sl, [r4, #8]
 80056be:	4630      	mov	r0, r6
 80056c0:	68db      	ldr	r3, [r3, #12]
 80056c2:	63f4      	str	r4, [r6, #60]	; 0x3c
 80056c4:	4798      	blx	r3
    newPresenter->activate();
 80056c6:	6823      	ldr	r3, [r4, #0]
 80056c8:	4620      	mov	r0, r4
 80056ca:	681b      	ldr	r3, [r3, #0]
 80056cc:	4798      	blx	r3
    newScreen->bindTransition(*newTransition);
 80056ce:	4629      	mov	r1, r5
 80056d0:	4630      	mov	r0, r6
 80056d2:	f012 fda9 	bl	8018228 <_ZN8touchgfx6Screen14bindTransitionERNS_10TransitionE>
    newTransition->init();
 80056d6:	682b      	ldr	r3, [r5, #0]
 80056d8:	4628      	mov	r0, r5
 80056da:	691b      	ldr	r3, [r3, #16]
 80056dc:	4798      	blx	r3
    newTransition->invalidate();
 80056de:	682b      	ldr	r3, [r5, #0]
 80056e0:	4628      	mov	r0, r5
 80056e2:	695b      	ldr	r3, [r3, #20]
}
 80056e4:	e8bd 47f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, lr}
 80056e8:	4718      	bx	r3
    model->bind(newPresenter);
 80056ea:	4623      	mov	r3, r4
 80056ec:	e7e2      	b.n	80056b4 <_ZN23FrontendApplicationBase50gotoMeasurement_SingleScreenWipeTransitionEastImplEv+0xe8>
 80056ee:	bf00      	nop
 80056f0:	0802d06c 	.word	0x0802d06c
 80056f4:	0802e083 	.word	0x0802e083
 80056f8:	0802d208 	.word	0x0802d208
 80056fc:	0802d24f 	.word	0x0802d24f
 8005700:	0802d2f2 	.word	0x0802d2f2
 8005704:	20013864 	.word	0x20013864
 8005708:	20013860 	.word	0x20013860

0800570c <_ZN23FrontendApplicationBase43gotoMeasurementScreenWipeTransitionEastImplEv>:
{
 800570c:	e92d 47f0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, lr}
    touchgfx::makeTransition<MeasurementView, MeasurementPresenter, touchgfx::WipeTransition<EAST>, Model >(&currentScreen, &currentPresenter, frontendHeap, &currentTransition, &model);
 8005710:	e9d0 4a55 	ldrd	r4, sl, [r0, #340]	; 0x154
{
 8005714:	4607      	mov	r7, r0
    assert(sizeof(ScreenType) <= heap.screenStorage.element_size() && "View allocation error: Check that all views are added to FrontendHeap::ViewTypes");
 8005716:	68a0      	ldr	r0, [r4, #8]
 8005718:	6803      	ldr	r3, [r0, #0]
 800571a:	6a1b      	ldr	r3, [r3, #32]
 800571c:	4798      	blx	r3
 800571e:	f5b0 5f8a 	cmp.w	r0, #4416	; 0x1140
 8005722:	d205      	bcs.n	8005730 <_ZN23FrontendApplicationBase43gotoMeasurementScreenWipeTransitionEastImplEv+0x24>
 8005724:	4b42      	ldr	r3, [pc, #264]	; (8005830 <_ZN23FrontendApplicationBase43gotoMeasurementScreenWipeTransitionEastImplEv+0x124>)
 8005726:	4a43      	ldr	r2, [pc, #268]	; (8005834 <_ZN23FrontendApplicationBase43gotoMeasurementScreenWipeTransitionEastImplEv+0x128>)
 8005728:	21a3      	movs	r1, #163	; 0xa3
    assert(sizeof(PresenterType) <= heap.presenterStorage.element_size() && "Presenter allocation error: Check that all presenters are added to FrontendHeap::PresenterTypes");
 800572a:	4843      	ldr	r0, [pc, #268]	; (8005838 <_ZN23FrontendApplicationBase43gotoMeasurementScreenWipeTransitionEastImplEv+0x12c>)
 800572c:	f025 fe18 	bl	802b360 <__assert_func>
 8005730:	6860      	ldr	r0, [r4, #4]
 8005732:	6803      	ldr	r3, [r0, #0]
 8005734:	6a1b      	ldr	r3, [r3, #32]
 8005736:	4798      	blx	r3
 8005738:	280f      	cmp	r0, #15
 800573a:	d803      	bhi.n	8005744 <_ZN23FrontendApplicationBase43gotoMeasurementScreenWipeTransitionEastImplEv+0x38>
 800573c:	4b3f      	ldr	r3, [pc, #252]	; (800583c <_ZN23FrontendApplicationBase43gotoMeasurementScreenWipeTransitionEastImplEv+0x130>)
 800573e:	4a3d      	ldr	r2, [pc, #244]	; (8005834 <_ZN23FrontendApplicationBase43gotoMeasurementScreenWipeTransitionEastImplEv+0x128>)
 8005740:	21a4      	movs	r1, #164	; 0xa4
 8005742:	e7f2      	b.n	800572a <_ZN23FrontendApplicationBase43gotoMeasurementScreenWipeTransitionEastImplEv+0x1e>
    assert(sizeof(TransType) <= heap.transitionStorage.element_size() && "Transition allocation error: Check that all transitions are added to FrontendHeap::TransitionTypes");
 8005744:	68e0      	ldr	r0, [r4, #12]
 8005746:	6803      	ldr	r3, [r0, #0]
 8005748:	6a1b      	ldr	r3, [r3, #32]
 800574a:	4798      	blx	r3
 800574c:	2837      	cmp	r0, #55	; 0x37
 800574e:	d803      	bhi.n	8005758 <_ZN23FrontendApplicationBase43gotoMeasurementScreenWipeTransitionEastImplEv+0x4c>
 8005750:	4b3b      	ldr	r3, [pc, #236]	; (8005840 <_ZN23FrontendApplicationBase43gotoMeasurementScreenWipeTransitionEastImplEv+0x134>)
 8005752:	4a38      	ldr	r2, [pc, #224]	; (8005834 <_ZN23FrontendApplicationBase43gotoMeasurementScreenWipeTransitionEastImplEv+0x128>)
 8005754:	21a5      	movs	r1, #165	; 0xa5
 8005756:	e7e8      	b.n	800572a <_ZN23FrontendApplicationBase43gotoMeasurementScreenWipeTransitionEastImplEv+0x1e>
    Application::getInstance()->clearAllTimerWidgets();
 8005758:	f010 ff3a 	bl	80165d0 <_ZN8touchgfx11Application11getInstanceEv>
    if (*currentTrans)
 800575c:	f8df 90e4 	ldr.w	r9, [pc, #228]	; 8005844 <_ZN23FrontendApplicationBase43gotoMeasurementScreenWipeTransitionEastImplEv+0x138>
 8005760:	3004      	adds	r0, #4
 8005762:	f010 ff9b 	bl	801669c <_ZN8touchgfx11Application12TimerWidgets5clearEv>
 8005766:	f8d9 0000 	ldr.w	r0, [r9]
 800576a:	b110      	cbz	r0, 8005772 <_ZN23FrontendApplicationBase43gotoMeasurementScreenWipeTransitionEastImplEv+0x66>
        (*currentTrans)->tearDown();
 800576c:	6803      	ldr	r3, [r0, #0]
 800576e:	68db      	ldr	r3, [r3, #12]
 8005770:	4798      	blx	r3
    if (*currentTrans)
 8005772:	f8d9 0000 	ldr.w	r0, [r9]
 8005776:	b110      	cbz	r0, 800577e <_ZN23FrontendApplicationBase43gotoMeasurementScreenWipeTransitionEastImplEv+0x72>
        (*currentTrans)->~Transition();
 8005778:	6803      	ldr	r3, [r0, #0]
 800577a:	681b      	ldr	r3, [r3, #0]
 800577c:	4798      	blx	r3
    if (*currentScreen)
 800577e:	f8df 80c8 	ldr.w	r8, [pc, #200]	; 8005848 <_ZN23FrontendApplicationBase43gotoMeasurementScreenWipeTransitionEastImplEv+0x13c>
 8005782:	f8d8 0000 	ldr.w	r0, [r8]
 8005786:	b110      	cbz	r0, 800578e <_ZN23FrontendApplicationBase43gotoMeasurementScreenWipeTransitionEastImplEv+0x82>
        (*currentScreen)->tearDownScreen();
 8005788:	6803      	ldr	r3, [r0, #0]
 800578a:	695b      	ldr	r3, [r3, #20]
 800578c:	4798      	blx	r3
    if (*currentPresenter)
 800578e:	f8d7 013c 	ldr.w	r0, [r7, #316]	; 0x13c
 8005792:	b110      	cbz	r0, 800579a <_ZN23FrontendApplicationBase43gotoMeasurementScreenWipeTransitionEastImplEv+0x8e>
        (*currentPresenter)->deactivate();
 8005794:	6803      	ldr	r3, [r0, #0]
 8005796:	685b      	ldr	r3, [r3, #4]
 8005798:	4798      	blx	r3
    if (*currentScreen)
 800579a:	f8d8 0000 	ldr.w	r0, [r8]
 800579e:	b110      	cbz	r0, 80057a6 <_ZN23FrontendApplicationBase43gotoMeasurementScreenWipeTransitionEastImplEv+0x9a>
        (*currentScreen)->~Screen();
 80057a0:	6803      	ldr	r3, [r0, #0]
 80057a2:	681b      	ldr	r3, [r3, #0]
 80057a4:	4798      	blx	r3
    if (*currentPresenter)
 80057a6:	f8d7 013c 	ldr.w	r0, [r7, #316]	; 0x13c
 80057aa:	b110      	cbz	r0, 80057b2 <_ZN23FrontendApplicationBase43gotoMeasurementScreenWipeTransitionEastImplEv+0xa6>
        (*currentPresenter)->~Presenter();
 80057ac:	6803      	ldr	r3, [r0, #0]
 80057ae:	689b      	ldr	r3, [r3, #8]
 80057b0:	4798      	blx	r3
    TransType* newTransition = new (&heap.transitionStorage.at<TransType>(0)) TransType;
 80057b2:	68e0      	ldr	r0, [r4, #12]
 80057b4:	2100      	movs	r1, #0
 80057b6:	f7ff fa77 	bl	8004ca8 <_ZN8touchgfx17AbstractPartition2atINS_14WipeTransitionILNS_9DirectionE2EEEEERT_t>
 80057ba:	2114      	movs	r1, #20
 80057bc:	4605      	mov	r5, r0
 80057be:	f7ff fa77 	bl	8004cb0 <_ZN8touchgfx14WipeTransitionILNS_9DirectionE2EEC1Eh>
    ScreenType* newScreen = new (&heap.screenStorage.at<ScreenType>(0)) ScreenType;
 80057c2:	68a0      	ldr	r0, [r4, #8]
 80057c4:	6803      	ldr	r3, [r0, #0]
 80057c6:	2100      	movs	r1, #0
 80057c8:	6a5b      	ldr	r3, [r3, #36]	; 0x24
 80057ca:	4798      	blx	r3
 80057cc:	4606      	mov	r6, r0
 80057ce:	f003 f9ab 	bl	8008b28 <_ZN15MeasurementViewC1Ev>
    PresenterType* newPresenter = new (&heap.presenterStorage.at<PresenterType>(0)) PresenterType(*newScreen);
 80057d2:	6860      	ldr	r0, [r4, #4]
 80057d4:	6803      	ldr	r3, [r0, #0]
 80057d6:	2100      	movs	r1, #0
 80057d8:	6a5b      	ldr	r3, [r3, #36]	; 0x24
 80057da:	4798      	blx	r3
 80057dc:	4631      	mov	r1, r6
 80057de:	4604      	mov	r4, r0
 80057e0:	f003 f97c 	bl	8008adc <_ZN20MeasurementPresenterC1ER15MeasurementView>
    *currentTrans = newTransition;
 80057e4:	f8c9 5000 	str.w	r5, [r9]
    *currentPresenter = newPresenter;
 80057e8:	f8c7 413c 	str.w	r4, [r7, #316]	; 0x13c
    *currentScreen = newScreen;
 80057ec:	f8c8 6000 	str.w	r6, [r8]
    model->bind(newPresenter);
 80057f0:	b1dc      	cbz	r4, 800582a <_ZN23FrontendApplicationBase43gotoMeasurementScreenWipeTransitionEastImplEv+0x11e>
 80057f2:	1d23      	adds	r3, r4, #4
 80057f4:	f8ca 3000 	str.w	r3, [sl]
    newScreen->setupScreen();
 80057f8:	6833      	ldr	r3, [r6, #0]
 80057fa:	f8c4 a008 	str.w	sl, [r4, #8]
 80057fe:	4630      	mov	r0, r6
 8005800:	68db      	ldr	r3, [r3, #12]
 8005802:	63f4      	str	r4, [r6, #60]	; 0x3c
 8005804:	4798      	blx	r3
    newPresenter->activate();
 8005806:	6823      	ldr	r3, [r4, #0]
 8005808:	4620      	mov	r0, r4
 800580a:	681b      	ldr	r3, [r3, #0]
 800580c:	4798      	blx	r3
    newScreen->bindTransition(*newTransition);
 800580e:	4629      	mov	r1, r5
 8005810:	4630      	mov	r0, r6
 8005812:	f012 fd09 	bl	8018228 <_ZN8touchgfx6Screen14bindTransitionERNS_10TransitionE>
    newTransition->init();
 8005816:	682b      	ldr	r3, [r5, #0]
 8005818:	4628      	mov	r0, r5
 800581a:	691b      	ldr	r3, [r3, #16]
 800581c:	4798      	blx	r3
    newTransition->invalidate();
 800581e:	682b      	ldr	r3, [r5, #0]
 8005820:	4628      	mov	r0, r5
 8005822:	695b      	ldr	r3, [r3, #20]
}
 8005824:	e8bd 47f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, lr}
 8005828:	4718      	bx	r3
    model->bind(newPresenter);
 800582a:	4623      	mov	r3, r4
 800582c:	e7e2      	b.n	80057f4 <_ZN23FrontendApplicationBase43gotoMeasurementScreenWipeTransitionEastImplEv+0xe8>
 800582e:	bf00      	nop
 8005830:	0802d06c 	.word	0x0802d06c
 8005834:	0802e1af 	.word	0x0802e1af
 8005838:	0802d208 	.word	0x0802d208
 800583c:	0802d24f 	.word	0x0802d24f
 8005840:	0802d2f2 	.word	0x0802d2f2
 8005844:	20013864 	.word	0x20013864
 8005848:	20013860 	.word	0x20013860

0800584c <_ZNK8touchgfx13GeneratedFont12getGSUBTableEv>:
    virtual int8_t getKerning(Unicode::UnicodeChar prevChar, const GlyphNode* glyph) const;

    virtual const uint16_t* getGSUBTable() const
    {
        return gsubTable;
    }
 800584c:	6a40      	ldr	r0, [r0, #36]	; 0x24
 800584e:	4770      	bx	lr

08005850 <_ZNK8touchgfx13GeneratedFont23getContextualFormsTableEv>:

    virtual const FontContextualFormsTable* getContextualFormsTable() const
    {
        return arabicTable;
    }
 8005850:	6a80      	ldr	r0, [r0, #40]	; 0x28
 8005852:	4770      	bx	lr

08005854 <_ZN8touchgfx13GeneratedFontD1Ev>:
class GeneratedFont : public ConstFont
 8005854:	4770      	bx	lr

08005856 <_ZNK8touchgfx13GeneratedFont12getPixelDataEPKNS_9GlyphNodeE>:
}

const uint8_t* GeneratedFont::getPixelData(const GlyphNode* glyph) const
{
    const uint8_t* const* table = (const uint8_t* const*)glyphData;
    return &(table[glyph->unicode / 2048][glyph->dataOffset]);
 8005856:	888b      	ldrh	r3, [r1, #4]
 8005858:	69c0      	ldr	r0, [r0, #28]
 800585a:	680a      	ldr	r2, [r1, #0]
 800585c:	0adb      	lsrs	r3, r3, #11
 800585e:	f850 0023 	ldr.w	r0, [r0, r3, lsl #2]
}
 8005862:	4410      	add	r0, r2
 8005864:	4770      	bx	lr

08005866 <_ZNK8touchgfx13GeneratedFont10getKerningEtPKNS_9GlyphNodeE>:

int8_t GeneratedFont::getKerning(Unicode::UnicodeChar prevChar, const GlyphNode* glyph) const
{
 8005866:	b510      	push	{r4, lr}
    if (!glyph || glyph->kerningTableSize == 0)
 8005868:	b1c2      	cbz	r2, 800589c <_ZNK8touchgfx13GeneratedFont10getKerningEtPKNS_9GlyphNodeE+0x36>
 800586a:	7b13      	ldrb	r3, [r2, #12]
 800586c:	b1b3      	cbz	r3, 800589c <_ZNK8touchgfx13GeneratedFont10getKerningEtPKNS_9GlyphNodeE+0x36>
        return ((flags & GLYPH_DATA_KERNINGTABLEPOS_BIT8_10) << 8) | _kerningTablePos;
 800586e:	7b54      	ldrb	r4, [r2, #13]
 8005870:	7ad2      	ldrb	r2, [r2, #11]
 8005872:	0224      	lsls	r4, r4, #8
 8005874:	f404 64e0 	and.w	r4, r4, #1792	; 0x700
    {
        return 0;
    }

    const KerningNode* kerndata = kerningData + glyph->kerningTablePos();
 8005878:	4314      	orrs	r4, r2
 800587a:	6a02      	ldr	r2, [r0, #32]
    for (uint16_t i = glyph->kerningTableSize; i > 0; i--, kerndata++)
 800587c:	b298      	uxth	r0, r3
    const KerningNode* kerndata = kerningData + glyph->kerningTablePos();
 800587e:	eb02 0284 	add.w	r2, r2, r4, lsl #2
    {
        if (prevChar == kerndata->unicodePrevChar)
 8005882:	8813      	ldrh	r3, [r2, #0]
 8005884:	428b      	cmp	r3, r1
 8005886:	d102      	bne.n	800588e <_ZNK8touchgfx13GeneratedFont10getKerningEtPKNS_9GlyphNodeE+0x28>
        {
            return kerndata->distance;
 8005888:	f992 0002 	ldrsb.w	r0, [r2, #2]
        {
            break;
        }
    }
    return 0;
}
 800588c:	bd10      	pop	{r4, pc}
        if (prevChar < kerndata->unicodePrevChar)
 800588e:	d805      	bhi.n	800589c <_ZNK8touchgfx13GeneratedFont10getKerningEtPKNS_9GlyphNodeE+0x36>
    for (uint16_t i = glyph->kerningTableSize; i > 0; i--, kerndata++)
 8005890:	3801      	subs	r0, #1
 8005892:	b280      	uxth	r0, r0
 8005894:	3204      	adds	r2, #4
 8005896:	2800      	cmp	r0, #0
 8005898:	d1f3      	bne.n	8005882 <_ZNK8touchgfx13GeneratedFont10getKerningEtPKNS_9GlyphNodeE+0x1c>
 800589a:	e7f7      	b.n	800588c <_ZNK8touchgfx13GeneratedFont10getKerningEtPKNS_9GlyphNodeE+0x26>
        return 0;
 800589c:	2000      	movs	r0, #0
 800589e:	e7f5      	b.n	800588c <_ZNK8touchgfx13GeneratedFont10getKerningEtPKNS_9GlyphNodeE+0x26>

080058a0 <_ZN8touchgfx13GeneratedFontD0Ev>:
 80058a0:	b510      	push	{r4, lr}
 80058a2:	212c      	movs	r1, #44	; 0x2c
 80058a4:	4604      	mov	r4, r0
 80058a6:	f024 ff48 	bl	802a73a <_ZdlPvj>
 80058aa:	4620      	mov	r0, r4
 80058ac:	bd10      	pop	{r4, pc}
	...

080058b0 <_ZN8touchgfx13GeneratedFontC1EPKNS_9GlyphNodeEttthhhhhhPKPKhPKNS_11KerningNodeEttPKtPKNS_24FontContextualFormsTableE>:
GeneratedFont::GeneratedFont(const GlyphNode* glyphs, uint16_t numGlyphs, uint16_t height, uint16_t baseline, uint8_t pixAboveTop, uint8_t pixBelowBottom, uint8_t bitsPerPixel, uint8_t byteAlignRow, uint8_t maxLeft, uint8_t maxRight, const uint8_t* const* glyphDataInternalFlash, const KerningNode* kerningList, const Unicode::UnicodeChar fallbackChar, const Unicode::UnicodeChar ellipsisChar, const uint16_t* const gsubData, const FontContextualFormsTable* formsTable)
 80058b0:	b530      	push	{r4, r5, lr}
 80058b2:	b08b      	sub	sp, #44	; 0x2c
 80058b4:	4604      	mov	r4, r0
      arabicTable(formsTable)
 80058b6:	f8bd 5060 	ldrh.w	r5, [sp, #96]	; 0x60
 80058ba:	9508      	str	r5, [sp, #32]
 80058bc:	f8bd 505c 	ldrh.w	r5, [sp, #92]	; 0x5c
 80058c0:	9507      	str	r5, [sp, #28]
 80058c2:	f89d 5050 	ldrb.w	r5, [sp, #80]	; 0x50
 80058c6:	9506      	str	r5, [sp, #24]
 80058c8:	f89d 504c 	ldrb.w	r5, [sp, #76]	; 0x4c
 80058cc:	9505      	str	r5, [sp, #20]
 80058ce:	f89d 5048 	ldrb.w	r5, [sp, #72]	; 0x48
 80058d2:	9504      	str	r5, [sp, #16]
 80058d4:	f89d 5044 	ldrb.w	r5, [sp, #68]	; 0x44
 80058d8:	9503      	str	r5, [sp, #12]
 80058da:	f89d 5040 	ldrb.w	r5, [sp, #64]	; 0x40
 80058de:	9502      	str	r5, [sp, #8]
 80058e0:	f89d 503c 	ldrb.w	r5, [sp, #60]	; 0x3c
 80058e4:	9501      	str	r5, [sp, #4]
 80058e6:	f8bd 5038 	ldrh.w	r5, [sp, #56]	; 0x38
 80058ea:	9500      	str	r5, [sp, #0]
 80058ec:	f012 f806 	bl	80178fc <_ZN8touchgfx9ConstFontC1EPKNS_9GlyphNodeEttthhhhhhtt>
 80058f0:	4b06      	ldr	r3, [pc, #24]	; (800590c <_ZN8touchgfx13GeneratedFontC1EPKNS_9GlyphNodeEttthhhhhhPKPKhPKNS_11KerningNodeEttPKtPKNS_24FontContextualFormsTableE+0x5c>)
 80058f2:	6023      	str	r3, [r4, #0]
      glyphData(glyphDataInternalFlash),
 80058f4:	9b15      	ldr	r3, [sp, #84]	; 0x54
 80058f6:	61e3      	str	r3, [r4, #28]
      kerningData(kerningList),
 80058f8:	9b16      	ldr	r3, [sp, #88]	; 0x58
 80058fa:	6223      	str	r3, [r4, #32]
      gsubTable(gsubData),
 80058fc:	9b19      	ldr	r3, [sp, #100]	; 0x64
 80058fe:	6263      	str	r3, [r4, #36]	; 0x24
      arabicTable(formsTable)
 8005900:	9b1a      	ldr	r3, [sp, #104]	; 0x68
 8005902:	62a3      	str	r3, [r4, #40]	; 0x28
}
 8005904:	4620      	mov	r0, r4
 8005906:	b00b      	add	sp, #44	; 0x2c
 8005908:	bd30      	pop	{r4, r5, pc}
 800590a:	bf00      	nop
 800590c:	0802e418 	.word	0x0802e418

08005910 <_ZN17Main_MenuViewBase11setupScreenEv>:
}

void Main_MenuViewBase::setupScreen()
{

}
 8005910:	4770      	bx	lr

08005912 <_ZN8touchgfx8CallbackI17Main_MenuViewBaseRKNS_14AbstractButtonEvvED1Ev>:
struct Callback<dest_type, T1, void, void> : public GenericCallback<T1>
 8005912:	4770      	bx	lr

08005914 <_ZN8touchgfx8CallbackI17Main_MenuViewBaseRKNS_14AbstractButtonEvvE7executeES4_>:
    virtual void execute(T1 t1)
 8005914:	b430      	push	{r4, r5}
        (pobject->*pmemfun)(t1);
 8005916:	68c2      	ldr	r2, [r0, #12]
 8005918:	6844      	ldr	r4, [r0, #4]
 800591a:	1055      	asrs	r5, r2, #1
    virtual void execute(T1 t1)
 800591c:	4603      	mov	r3, r0
        (pobject->*pmemfun)(t1);
 800591e:	eb04 0062 	add.w	r0, r4, r2, asr #1
 8005922:	07d2      	lsls	r2, r2, #31
 8005924:	bf48      	it	mi
 8005926:	5962      	ldrmi	r2, [r4, r5]
 8005928:	689b      	ldr	r3, [r3, #8]
    }
 800592a:	bc30      	pop	{r4, r5}
        (pobject->*pmemfun)(t1);
 800592c:	bf48      	it	mi
 800592e:	58d3      	ldrmi	r3, [r2, r3]
 8005930:	4718      	bx	r3

08005932 <_ZNK8touchgfx8CallbackI17Main_MenuViewBaseRKNS_14AbstractButtonEvvE7isValidEv>:
        return (pobject != 0) && (pmemfun != 0);
 8005932:	6843      	ldr	r3, [r0, #4]
 8005934:	b12b      	cbz	r3, 8005942 <_ZNK8touchgfx8CallbackI17Main_MenuViewBaseRKNS_14AbstractButtonEvvE7isValidEv+0x10>
 8005936:	6883      	ldr	r3, [r0, #8]
 8005938:	b92b      	cbnz	r3, 8005946 <_ZNK8touchgfx8CallbackI17Main_MenuViewBaseRKNS_14AbstractButtonEvvE7isValidEv+0x14>
 800593a:	68c0      	ldr	r0, [r0, #12]
 800593c:	f000 0001 	and.w	r0, r0, #1
 8005940:	4770      	bx	lr
 8005942:	4618      	mov	r0, r3
 8005944:	4770      	bx	lr
 8005946:	2001      	movs	r0, #1
    }
 8005948:	4770      	bx	lr

0800594a <_ZN8touchgfx8CallbackI17Main_MenuViewBaseRKNS_14AbstractButtonEvvED0Ev>:
struct Callback<dest_type, T1, void, void> : public GenericCallback<T1>
 800594a:	b510      	push	{r4, lr}
 800594c:	2110      	movs	r1, #16
 800594e:	4604      	mov	r4, r0
 8005950:	f024 fef3 	bl	802a73a <_ZdlPvj>
 8005954:	4620      	mov	r0, r4
 8005956:	bd10      	pop	{r4, pc}

08005958 <_ZN17Main_MenuViewBaseD1Ev>:
Main_MenuViewBase::~Main_MenuViewBase()
 8005958:	b510      	push	{r4, lr}
 800595a:	4b03      	ldr	r3, [pc, #12]	; (8005968 <_ZN17Main_MenuViewBaseD1Ev+0x10>)
 800595c:	6003      	str	r3, [r0, #0]
 800595e:	4604      	mov	r4, r0
    touchgfx::CanvasWidgetRenderer::resetBuffer();
 8005960:	f00f f934 	bl	8014bcc <_ZN8touchgfx20CanvasWidgetRenderer11resetBufferEv>
}
 8005964:	4620      	mov	r0, r4
 8005966:	bd10      	pop	{r4, pc}
 8005968:	0802e490 	.word	0x0802e490

0800596c <_ZN17Main_MenuViewBaseD0Ev>:
Main_MenuViewBase::~Main_MenuViewBase()
 800596c:	b507      	push	{r0, r1, r2, lr}
 800596e:	4b07      	ldr	r3, [pc, #28]	; (800598c <_ZN17Main_MenuViewBaseD0Ev+0x20>)
 8005970:	6003      	str	r3, [r0, #0]
 8005972:	9001      	str	r0, [sp, #4]
    touchgfx::CanvasWidgetRenderer::resetBuffer();
 8005974:	f00f f92a 	bl	8014bcc <_ZN8touchgfx20CanvasWidgetRenderer11resetBufferEv>
}
 8005978:	9801      	ldr	r0, [sp, #4]
 800597a:	f241 117c 	movw	r1, #4476	; 0x117c
 800597e:	f024 fedc 	bl	802a73a <_ZdlPvj>
 8005982:	9801      	ldr	r0, [sp, #4]
 8005984:	b003      	add	sp, #12
 8005986:	f85d fb04 	ldr.w	pc, [sp], #4
 800598a:	bf00      	nop
 800598c:	0802e490 	.word	0x0802e490

08005990 <_ZN17Main_MenuViewBase21buttonCallbackHandlerERKN8touchgfx14AbstractButtonE>:

void Main_MenuViewBase::buttonCallbackHandler(const touchgfx::AbstractButton& src)
{
 8005990:	b538      	push	{r3, r4, r5, lr}
    if (&src == &buttonWithLabel1)
 8005992:	f500 7334 	add.w	r3, r0, #720	; 0x2d0
 8005996:	4299      	cmp	r1, r3
{
 8005998:	4604      	mov	r4, r0
 800599a:	460d      	mov	r5, r1
    if (&src == &buttonWithLabel1)
 800599c:	d103      	bne.n	80059a6 <_ZN17Main_MenuViewBase21buttonCallbackHandlerERKN8touchgfx14AbstractButtonE+0x16>
    virtual ~Main_MenuViewBase();
    virtual void setupScreen();

protected:
    FrontendApplication& application() {
        return *static_cast<FrontendApplication*>(touchgfx::Application::getInstance());
 800599e:	f010 fe17 	bl	80165d0 <_ZN8touchgfx11Application11getInstanceEv>
    {
        //Interaction1
        //When buttonWithLabel1 clicked change screen to Measurement
        //Go to Measurement with screen transition towards East
        application().gotoMeasurementScreenWipeTransitionEast();
 80059a2:	f7fe feaf 	bl	8004704 <_ZN23FrontendApplicationBase39gotoMeasurementScreenWipeTransitionEastEv>
    }
    if (&src == &buttonWithLabel2)
 80059a6:	f504 7322 	add.w	r3, r4, #648	; 0x288
 80059aa:	429d      	cmp	r5, r3
 80059ac:	d103      	bne.n	80059b6 <_ZN17Main_MenuViewBase21buttonCallbackHandlerERKN8touchgfx14AbstractButtonE+0x26>
 80059ae:	f010 fe0f 	bl	80165d0 <_ZN8touchgfx11Application11getInstanceEv>
    {
        //Interaction2
        //When buttonWithLabel2 clicked change screen to Calibration_Pad
        //Go to Calibration_Pad with screen transition towards East
        application().gotoCalibration_PadScreenWipeTransitionEast();
 80059b2:	f7fe ff37 	bl	8004824 <_ZN23FrontendApplicationBase43gotoCalibration_PadScreenWipeTransitionEastEv>
    }
    if (&src == &buttonWithLabel3)
 80059b6:	f504 7310 	add.w	r3, r4, #576	; 0x240
 80059ba:	429d      	cmp	r5, r3
 80059bc:	d103      	bne.n	80059c6 <_ZN17Main_MenuViewBase21buttonCallbackHandlerERKN8touchgfx14AbstractButtonE+0x36>
 80059be:	f010 fe07 	bl	80165d0 <_ZN8touchgfx11Application11getInstanceEv>
    {
        //Interaction3
        //When buttonWithLabel3 clicked change screen to Project_Info
        //Go to Project_Info with screen transition towards East
        application().gotoProject_InfoScreenWipeTransitionEast();
 80059c2:	f7fe ff3f 	bl	8004844 <_ZN23FrontendApplicationBase40gotoProject_InfoScreenWipeTransitionEastEv>
    }
    if (&src == &buttonWithIcon1)
 80059c6:	f504 7446 	add.w	r4, r4, #792	; 0x318
 80059ca:	42a5      	cmp	r5, r4
 80059cc:	d10a      	bne.n	80059e4 <_ZN17Main_MenuViewBase21buttonCallbackHandlerERKN8touchgfx14AbstractButtonE+0x54>
    {
        //Interaction4
        //When buttonWithIcon1 clicked execute C++ code
        //Execute C++ code
        #ifndef SIMULATOR
        HAL_GPIO_WritePin(GPIOE, GPIO_PIN_5, GPIO_PIN_RESET);
 80059ce:	4806      	ldr	r0, [pc, #24]	; (80059e8 <_ZN17Main_MenuViewBase21buttonCallbackHandlerERKN8touchgfx14AbstractButtonE+0x58>)
 80059d0:	2200      	movs	r2, #0
 80059d2:	2120      	movs	r1, #32
 80059d4:	f004 fa42 	bl	8009e5c <HAL_GPIO_WritePin>
 80059d8:	f010 fdfa 	bl	80165d0 <_ZN8touchgfx11Application11getInstanceEv>
        //Interaction5
        //When buttonWithIcon1 clicked change screen to Shutting_Off
        //Go to Shutting_Off with no screen transition
        application().gotoShutting_OffScreenNoTransition();
    }
}
 80059dc:	e8bd 4038 	ldmia.w	sp!, {r3, r4, r5, lr}
        application().gotoShutting_OffScreenNoTransition();
 80059e0:	f7fe bf40 	b.w	8004864 <_ZN23FrontendApplicationBase34gotoShutting_OffScreenNoTransitionEv>
}
 80059e4:	bd38      	pop	{r3, r4, r5, pc}
 80059e6:	bf00      	nop
 80059e8:	40021000 	.word	0x40021000

080059ec <_ZN17Main_MenuViewBaseC1Ev>:
Main_MenuViewBase::Main_MenuViewBase() :
 80059ec:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 80059f0:	ed2d 8b06 	vpush	{d8-d10}
 80059f4:	4604      	mov	r4, r0
 80059f6:	b08f      	sub	sp, #60	; 0x3c
    buttonCallback(this, &Main_MenuViewBase::buttonCallbackHandler)
 80059f8:	46a3      	mov	fp, r4
        : presenter(0)
 80059fa:	2500      	movs	r5, #0
 80059fc:	f012 fa68 	bl	8017ed0 <_ZN8touchgfx6ScreenC1Ev>
 8005a00:	4b6a      	ldr	r3, [pc, #424]	; (8005bac <_ZN17Main_MenuViewBaseC1Ev+0x1c0>)
 8005a02:	63e5      	str	r5, [r4, #60]	; 0x3c
 8005a04:	f84b 3b40 	str.w	r3, [fp], #64
        : Widget(), alpha(255), color(0)
 8005a08:	2226      	movs	r2, #38	; 0x26
 8005a0a:	4629      	mov	r1, r5
 8005a0c:	4658      	mov	r0, fp
 8005a0e:	f025 feac 	bl	802b76a <memset>
 8005a12:	4658      	mov	r0, fp
 8005a14:	f7fc ffba 	bl	800298c <_ZN8touchgfx6WidgetC1Ev>
 8005a18:	f104 0a6c 	add.w	sl, r4, #108	; 0x6c
 8005a1c:	26ff      	movs	r6, #255	; 0xff
 8005a1e:	4b64      	ldr	r3, [pc, #400]	; (8005bb0 <_ZN17Main_MenuViewBaseC1Ev+0x1c4>)
 8005a20:	6423      	str	r3, [r4, #64]	; 0x40
        : Widget(), bitmap(bmp), alpha(255)
 8005a22:	2226      	movs	r2, #38	; 0x26
 8005a24:	f64f 73ff 	movw	r3, #65535	; 0xffff
 8005a28:	4629      	mov	r1, r5
 8005a2a:	f884 6066 	strb.w	r6, [r4, #102]	; 0x66
 8005a2e:	4650      	mov	r0, sl
        : color(col)
 8005a30:	66a5      	str	r5, [r4, #104]	; 0x68
 8005a32:	f8ad 3030 	strh.w	r3, [sp, #48]	; 0x30
 8005a36:	f025 fe98 	bl	802b76a <memset>
 8005a3a:	4650      	mov	r0, sl
 8005a3c:	f7fc ffa6 	bl	800298c <_ZN8touchgfx6WidgetC1Ev>
 8005a40:	4b5c      	ldr	r3, [pc, #368]	; (8005bb4 <_ZN17Main_MenuViewBaseC1Ev+0x1c8>)
 8005a42:	66e3      	str	r3, [r4, #108]	; 0x6c
 8005a44:	f8bd 3030 	ldrh.w	r3, [sp, #48]	; 0x30
 8005a48:	f8a4 3092 	strh.w	r3, [r4, #146]	; 0x92
        Image::setBitmap(bmp);
 8005a4c:	a90c      	add	r1, sp, #48	; 0x30
 8005a4e:	4650      	mov	r0, sl
 8005a50:	f104 0998 	add.w	r9, r4, #152	; 0x98
        : Widget(), bitmap(bmp), alpha(255)
 8005a54:	f884 6094 	strb.w	r6, [r4, #148]	; 0x94
        Image::setBitmap(bmp);
 8005a58:	f00e f8bb 	bl	8013bd2 <_ZN8touchgfx5Image9setBitmapERKNS_6BitmapE>
        : TextArea()
 8005a5c:	4648      	mov	r0, r9
 8005a5e:	f7fc fff9 	bl	8002a54 <_ZN8touchgfx8TextAreaC1Ev>
 8005a62:	f104 07e4 	add.w	r7, r4, #228	; 0xe4
        : TextAreaWithWildcardBase(), wc1(0)
 8005a66:	4b54      	ldr	r3, [pc, #336]	; (8005bb8 <_ZN17Main_MenuViewBaseC1Ev+0x1cc>)
 8005a68:	f8c4 3098 	str.w	r3, [r4, #152]	; 0x98
 8005a6c:	f8c4 50e0 	str.w	r5, [r4, #224]	; 0xe0
 8005a70:	4638      	mov	r0, r7
 8005a72:	f00c fda1 	bl	80125b8 <_ZN8touchgfx4LineC1Ev>
 8005a76:	f504 73aa 	add.w	r3, r4, #340	; 0x154
        : AbstractPainterRGB565(), AbstractPainterColor(color)
 8005a7a:	4618      	mov	r0, r3
 8005a7c:	9303      	str	r3, [sp, #12]
 8005a7e:	f7fc fd89 	bl	8002594 <_ZN8touchgfx21AbstractPainterRGB565C1Ev>
 8005a82:	4b4e      	ldr	r3, [pc, #312]	; (8005bbc <_ZN17Main_MenuViewBaseC1Ev+0x1d0>)
 8005a84:	f8c4 3154 	str.w	r3, [r4, #340]	; 0x154
 8005a88:	f504 78b4 	add.w	r8, r4, #360	; 0x168
 8005a8c:	3324      	adds	r3, #36	; 0x24
 8005a8e:	f8c4 315c 	str.w	r3, [r4, #348]	; 0x15c
 8005a92:	f8c4 5160 	str.w	r5, [r4, #352]	; 0x160
 8005a96:	4640      	mov	r0, r8
 8005a98:	f7fc ffdc 	bl	8002a54 <_ZN8touchgfx8TextAreaC1Ev>
 8005a9c:	f504 73d8 	add.w	r3, r4, #432	; 0x1b0
 8005aa0:	4618      	mov	r0, r3
 8005aa2:	ee08 3a10 	vmov	s16, r3
 8005aa6:	f7fc ffd5 	bl	8002a54 <_ZN8touchgfx8TextAreaC1Ev>
 8005aaa:	f504 73fc 	add.w	r3, r4, #504	; 0x1f8
 8005aae:	4618      	mov	r0, r3
 8005ab0:	ee08 3a90 	vmov	s17, r3
 8005ab4:	f7fc ffce 	bl	8002a54 <_ZN8touchgfx8TextAreaC1Ev>
 8005ab8:	f504 7310 	add.w	r3, r4, #576	; 0x240
 8005abc:	4618      	mov	r0, r3
 8005abe:	ee09 3a10 	vmov	s18, r3
 8005ac2:	f00e f9bd 	bl	8013e40 <_ZN8touchgfx15ButtonWithLabelC1Ev>
 8005ac6:	f504 7322 	add.w	r3, r4, #648	; 0x288
 8005aca:	4618      	mov	r0, r3
 8005acc:	ee09 3a90 	vmov	s19, r3
 8005ad0:	f00e f9b6 	bl	8013e40 <_ZN8touchgfx15ButtonWithLabelC1Ev>
 8005ad4:	f504 7334 	add.w	r3, r4, #720	; 0x2d0
 8005ad8:	4618      	mov	r0, r3
 8005ada:	ee0a 3a10 	vmov	s20, r3
 8005ade:	f00e f9af 	bl	8013e40 <_ZN8touchgfx15ButtonWithLabelC1Ev>
 8005ae2:	f504 7346 	add.w	r3, r4, #792	; 0x318
 8005ae6:	4618      	mov	r0, r3
 8005ae8:	ee0a 3a90 	vmov	s21, r3
 8005aec:	f00e f84a 	bl	8013b84 <_ZN8touchgfx14ButtonWithIconC1Ev>
        : pobject(pObject), pmemfun(pmemfun_1)
 8005af0:	4a33      	ldr	r2, [pc, #204]	; (8005bc0 <_ZN17Main_MenuViewBaseC1Ev+0x1d4>)
 8005af2:	f504 5380 	add.w	r3, r4, #4096	; 0x1000
 8005af6:	e9c3 245b 	strd	r2, r4, [r3, #364]	; 0x16c
 8005afa:	4a32      	ldr	r2, [pc, #200]	; (8005bc4 <_ZN17Main_MenuViewBaseC1Ev+0x1d8>)
    touchgfx::CanvasWidgetRenderer::setupBuffer(canvasBuffer, CANVAS_BUFFER_SIZE);
 8005afc:	f44f 6161 	mov.w	r1, #3600	; 0xe10
 8005b00:	e9c3 255d 	strd	r2, r5, [r3, #372]	; 0x174
 8005b04:	f504 7057 	add.w	r0, r4, #860	; 0x35c
 8005b08:	f00f f856 	bl	8014bb8 <_ZN8touchgfx20CanvasWidgetRenderer11setupBufferEPhj>
    __background.setPosition(0, 0, 240, 320);
 8005b0c:	f44f 73a0 	mov.w	r3, #320	; 0x140
 8005b10:	462a      	mov	r2, r5
 8005b12:	4658      	mov	r0, fp
 8005b14:	9300      	str	r3, [sp, #0]
 8005b16:	4629      	mov	r1, r5
 8005b18:	23f0      	movs	r3, #240	; 0xf0
 8005b1a:	f7fc ff12 	bl	8002942 <_ZN8touchgfx8Drawable11setPositionEssss>
 8005b1e:	1d26      	adds	r6, r4, #4
        color = newColor;
 8005b20:	f04f 437f 	mov.w	r3, #4278190080	; 0xff000000
 8005b24:	66a3      	str	r3, [r4, #104]	; 0x68
 8005b26:	4659      	mov	r1, fp
 8005b28:	4630      	mov	r0, r6
 8005b2a:	f00a fc79 	bl	8010420 <_ZN8touchgfx9Container3addERNS_8DrawableE>
    image1.setXY(0, 0);
 8005b2e:	462a      	mov	r2, r5
 8005b30:	4650      	mov	r0, sl
 8005b32:	4629      	mov	r1, r5
 8005b34:	f7fc fef8 	bl	8002928 <_ZN8touchgfx8Drawable5setXYEss>
 8005b38:	2308      	movs	r3, #8
    image1.setBitmap(touchgfx::Bitmap(BITMAP_BACKGROUND_2_RESIZED_4_ID));
 8005b3a:	4650      	mov	r0, sl
 8005b3c:	a90c      	add	r1, sp, #48	; 0x30
 8005b3e:	f8ad 3030 	strh.w	r3, [sp, #48]	; 0x30
 8005b42:	f00e f846 	bl	8013bd2 <_ZN8touchgfx5Image9setBitmapERKNS_6BitmapE>
 8005b46:	4651      	mov	r1, sl
 8005b48:	4630      	mov	r0, r6
 8005b4a:	f00a fc69 	bl	8010420 <_ZN8touchgfx9Container3addERNS_8DrawableE>
    textArea3.setXY(86, 308);
 8005b4e:	f44f 729a 	mov.w	r2, #308	; 0x134
 8005b52:	2156      	movs	r1, #86	; 0x56
 8005b54:	4648      	mov	r0, r9
 8005b56:	f7fc fee7 	bl	8002928 <_ZN8touchgfx8Drawable5setXYEss>
 8005b5a:	f8d4 3098 	ldr.w	r3, [r4, #152]	; 0x98
        linespace = space;
 8005b5e:	f8a4 50cc 	strh.w	r5, [r4, #204]	; 0xcc
        boundingArea = calculateBoundingArea();
 8005b62:	f10d 0a10 	add.w	sl, sp, #16
        color = newColor;
 8005b66:	f04f 3bff 	mov.w	fp, #4294967295
        boundingArea = calculateBoundingArea();
 8005b6a:	4650      	mov	r0, sl
 8005b6c:	f8d3 3084 	ldr.w	r3, [r3, #132]	; 0x84
        color = newColor;
 8005b70:	f8c4 b0c8 	str.w	fp, [r4, #200]	; 0xc8
        boundingArea = calculateBoundingArea();
 8005b74:	4649      	mov	r1, r9
 8005b76:	4798      	blx	r3
 8005b78:	e89a 0007 	ldmia.w	sl, {r0, r1, r2}
 8005b7c:	f104 03d4 	add.w	r3, r4, #212	; 0xd4
 8005b80:	e883 0007 	stmia.w	r3, {r0, r1, r2}
        assert(typedTexts != 0 && "TypedText database has not been initialized.");
 8005b84:	4b10      	ldr	r3, [pc, #64]	; (8005bc8 <_ZN17Main_MenuViewBaseC1Ev+0x1dc>)
 8005b86:	681b      	ldr	r3, [r3, #0]
    Unicode::snprintf(textArea3Buffer, TEXTAREA3_SIZE, "%s", touchgfx::TypedText(T___SINGLEUSE_UQO1).getText());
 8005b88:	f504 7a55 	add.w	sl, r4, #852	; 0x354
 8005b8c:	b92b      	cbnz	r3, 8005b9a <_ZN17Main_MenuViewBaseC1Ev+0x1ae>
 8005b8e:	4b0f      	ldr	r3, [pc, #60]	; (8005bcc <_ZN17Main_MenuViewBaseC1Ev+0x1e0>)
 8005b90:	4a0f      	ldr	r2, [pc, #60]	; (8005bd0 <_ZN17Main_MenuViewBaseC1Ev+0x1e4>)
 8005b92:	2160      	movs	r1, #96	; 0x60
        assert(hasValidId() && "typedTextId larger than numberOfTypedTexts.");
 8005b94:	480f      	ldr	r0, [pc, #60]	; (8005bd4 <_ZN17Main_MenuViewBaseC1Ev+0x1e8>)
 8005b96:	f025 fbe3 	bl	802b360 <__assert_func>
        return typedTextId < numberOfTypedTexts;
 8005b9a:	4b0f      	ldr	r3, [pc, #60]	; (8005bd8 <_ZN17Main_MenuViewBaseC1Ev+0x1ec>)
        assert(hasValidId() && "typedTextId larger than numberOfTypedTexts.");
 8005b9c:	881b      	ldrh	r3, [r3, #0]
 8005b9e:	2b38      	cmp	r3, #56	; 0x38
 8005ba0:	d81e      	bhi.n	8005be0 <_ZN17Main_MenuViewBaseC1Ev+0x1f4>
 8005ba2:	4b0e      	ldr	r3, [pc, #56]	; (8005bdc <_ZN17Main_MenuViewBaseC1Ev+0x1f0>)
 8005ba4:	4a0a      	ldr	r2, [pc, #40]	; (8005bd0 <_ZN17Main_MenuViewBaseC1Ev+0x1e4>)
 8005ba6:	2161      	movs	r1, #97	; 0x61
 8005ba8:	e7f4      	b.n	8005b94 <_ZN17Main_MenuViewBaseC1Ev+0x1a8>
 8005baa:	bf00      	nop
 8005bac:	0802e490 	.word	0x0802e490
 8005bb0:	0802f444 	.word	0x0802f444
 8005bb4:	0802f690 	.word	0x0802f690
 8005bb8:	0802cf90 	.word	0x0802cf90
 8005bbc:	0802f178 	.word	0x0802f178
 8005bc0:	0802e478 	.word	0x0802e478
 8005bc4:	08005991 	.word	0x08005991
 8005bc8:	20013874 	.word	0x20013874
 8005bcc:	0802cd40 	.word	0x0802cd40
 8005bd0:	0802ce45 	.word	0x0802ce45
 8005bd4:	0802cdbd 	.word	0x0802cdbd
 8005bd8:	20013878 	.word	0x20013878
 8005bdc:	0802ce04 	.word	0x0802ce04
        return texts->getText(typedTextId);
 8005be0:	4ba5      	ldr	r3, [pc, #660]	; (8005e78 <_ZN17Main_MenuViewBaseC1Ev+0x48c>)
 8005be2:	2138      	movs	r1, #56	; 0x38
 8005be4:	6818      	ldr	r0, [r3, #0]
 8005be6:	f002 fdaf 	bl	8008748 <_ZNK8touchgfx5Texts7getTextEt>
 8005bea:	4aa4      	ldr	r2, [pc, #656]	; (8005e7c <_ZN17Main_MenuViewBaseC1Ev+0x490>)
 8005bec:	4603      	mov	r3, r0
 8005bee:	2104      	movs	r1, #4
 8005bf0:	4650      	mov	r0, sl
 8005bf2:	f013 fe9b 	bl	801992c <_ZN8touchgfx7Unicode8snprintfEPttPKcz>
    textArea3.resizeToCurrentText();
 8005bf6:	4648      	mov	r0, r9
        wc1 = value;
 8005bf8:	f8c4 a0e0 	str.w	sl, [r4, #224]	; 0xe0
 8005bfc:	f00d fa18 	bl	8013030 <_ZN8touchgfx8TextArea19resizeToCurrentTextEv>
        : typedTextId(id)
 8005c00:	4b9f      	ldr	r3, [pc, #636]	; (8005e80 <_ZN17Main_MenuViewBaseC1Ev+0x494>)
 8005c02:	930c      	str	r3, [sp, #48]	; 0x30
    textArea3.setTypedText(touchgfx::TypedText(T___SINGLEUSE_2SIJ));
 8005c04:	a90c      	add	r1, sp, #48	; 0x30
 8005c06:	2339      	movs	r3, #57	; 0x39
 8005c08:	4648      	mov	r0, r9
 8005c0a:	f8ad 3034 	strh.w	r3, [sp, #52]	; 0x34
 8005c0e:	f00d fa2f 	bl	8013070 <_ZN8touchgfx8TextArea12setTypedTextERKNS_9TypedTextE>
 8005c12:	4649      	mov	r1, r9
 8005c14:	4630      	mov	r0, r6
 8005c16:	f00a fc03 	bl	8010420 <_ZN8touchgfx9Container3addERNS_8DrawableE>
    line1.setPosition(0, 50, 240, 10);
 8005c1a:	230a      	movs	r3, #10
 8005c1c:	9300      	str	r3, [sp, #0]
 8005c1e:	2232      	movs	r2, #50	; 0x32
 8005c20:	23f0      	movs	r3, #240	; 0xf0
 8005c22:	4629      	mov	r1, r5
 8005c24:	4638      	mov	r0, r7
 8005c26:	f7fc fe8c 	bl	8002942 <_ZN8touchgfx8Drawable11setPositionEssss>
 8005c2a:	9b03      	ldr	r3, [sp, #12]
 8005c2c:	f8c4 310c 	str.w	r3, [r4, #268]	; 0x10c
        setStart(CWRUtil::toQ5<T>(x), CWRUtil::toQ5<T>(y));
 8005c30:	22a0      	movs	r2, #160	; 0xa0
 8005c32:	4611      	mov	r1, r2
 8005c34:	4638      	mov	r0, r7
 8005c36:	f8c4 b160 	str.w	fp, [r4, #352]	; 0x160
        color565 = LCD16bpp::getNativeColor(painterColor);
 8005c3a:	f8a4 b164 	strh.w	fp, [r4, #356]	; 0x164
 8005c3e:	f00c fdd1 	bl	80127e4 <_ZN8touchgfx4Line8setStartENS_7CWRUtil2Q5ES2_>
        setEnd(CWRUtil::toQ5<T>(x), CWRUtil::toQ5<T>(y));
 8005c42:	22a0      	movs	r2, #160	; 0xa0
 8005c44:	f44f 51eb 	mov.w	r1, #7520	; 0x1d60
 8005c48:	4638      	mov	r0, r7
 8005c4a:	f00c fdd6 	bl	80127fa <_ZN8touchgfx4Line6setEndENS_7CWRUtil2Q5ES2_>
        if (lineWidthQ5 == widthQ5)
 8005c4e:	f8d4 3120 	ldr.w	r3, [r4, #288]	; 0x120
 8005c52:	2b20      	cmp	r3, #32
 8005c54:	d005      	beq.n	8005c62 <_ZN17Main_MenuViewBaseC1Ev+0x276>
        lineWidthQ5 = widthQ5;
 8005c56:	2320      	movs	r3, #32
 8005c58:	f8c4 3120 	str.w	r3, [r4, #288]	; 0x120
        updateCachedShape();
 8005c5c:	4638      	mov	r0, r7
 8005c5e:	f00c fccb 	bl	80125f8 <_ZN8touchgfx4Line17updateCachedShapeEv>
    line1.setLineEndingStyle(touchgfx::Line::ROUND_CAP_ENDING);
 8005c62:	4638      	mov	r0, r7
 8005c64:	2101      	movs	r1, #1
 8005c66:	f00c fdd3 	bl	8012810 <_ZN8touchgfx4Line18setLineEndingStyleENS0_17LINE_ENDING_STYLEE>
 8005c6a:	4639      	mov	r1, r7
 8005c6c:	4630      	mov	r0, r6
 8005c6e:	ad04      	add	r5, sp, #16
        color = newColor;
 8005c70:	f04f 37ff 	mov.w	r7, #4294967295
 8005c74:	f00a fbd4 	bl	8010420 <_ZN8touchgfx9Container3addERNS_8DrawableE>
        linespace = space;
 8005c78:	f04f 0a00 	mov.w	sl, #0
    textArea2.setXY(69, 35);
 8005c7c:	2223      	movs	r2, #35	; 0x23
 8005c7e:	4640      	mov	r0, r8
 8005c80:	2145      	movs	r1, #69	; 0x45
 8005c82:	f7fc fe51 	bl	8002928 <_ZN8touchgfx8Drawable5setXYEss>
        boundingArea = calculateBoundingArea();
 8005c86:	4641      	mov	r1, r8
 8005c88:	4628      	mov	r0, r5
        color = newColor;
 8005c8a:	f8c4 7198 	str.w	r7, [r4, #408]	; 0x198
        linespace = space;
 8005c8e:	f8a4 a19c 	strh.w	sl, [r4, #412]	; 0x19c
        boundingArea = calculateBoundingArea();
 8005c92:	f00c ff53 	bl	8012b3c <_ZNK8touchgfx8TextArea21calculateBoundingAreaEv>
 8005c96:	e895 0007 	ldmia.w	r5, {r0, r1, r2}
    textArea2.setTypedText(touchgfx::TypedText(T___SINGLEUSE_6D7Z));
 8005c9a:	f10d 0930 	add.w	r9, sp, #48	; 0x30
 8005c9e:	f108 033c 	add.w	r3, r8, #60	; 0x3c
 8005ca2:	e883 0007 	stmia.w	r3, {r0, r1, r2}
 8005ca6:	f8df b1d8 	ldr.w	fp, [pc, #472]	; 8005e80 <_ZN17Main_MenuViewBaseC1Ev+0x494>
 8005caa:	f8cd b030 	str.w	fp, [sp, #48]	; 0x30
 8005cae:	2353      	movs	r3, #83	; 0x53
 8005cb0:	4649      	mov	r1, r9
 8005cb2:	4640      	mov	r0, r8
 8005cb4:	f8ad 3034 	strh.w	r3, [sp, #52]	; 0x34
 8005cb8:	f00d f9da 	bl	8013070 <_ZN8touchgfx8TextArea12setTypedTextERKNS_9TypedTextE>
 8005cbc:	4641      	mov	r1, r8
 8005cbe:	4630      	mov	r0, r6
 8005cc0:	f00a fbae 	bl	8010420 <_ZN8touchgfx9Container3addERNS_8DrawableE>
    textArea1.setXY(54, 12);
 8005cc4:	ee18 0a10 	vmov	r0, s16
 8005cc8:	220c      	movs	r2, #12
 8005cca:	2136      	movs	r1, #54	; 0x36
 8005ccc:	f7fc fe2c 	bl	8002928 <_ZN8touchgfx8Drawable5setXYEss>
 8005cd0:	ee18 1a10 	vmov	r1, s16
 8005cd4:	4628      	mov	r0, r5
        color = newColor;
 8005cd6:	f8c4 71e0 	str.w	r7, [r4, #480]	; 0x1e0
        linespace = space;
 8005cda:	f8a4 a1e4 	strh.w	sl, [r4, #484]	; 0x1e4
        boundingArea = calculateBoundingArea();
 8005cde:	f00c ff2d 	bl	8012b3c <_ZNK8touchgfx8TextArea21calculateBoundingAreaEv>
 8005ce2:	e895 0007 	ldmia.w	r5, {r0, r1, r2}
 8005ce6:	ee18 3a10 	vmov	r3, s16
 8005cea:	333c      	adds	r3, #60	; 0x3c
 8005cec:	e883 0007 	stmia.w	r3, {r0, r1, r2}
 8005cf0:	2354      	movs	r3, #84	; 0x54
    textArea1.setTypedText(touchgfx::TypedText(T___SINGLEUSE_9K1W));
 8005cf2:	ee18 0a10 	vmov	r0, s16
 8005cf6:	4649      	mov	r1, r9
 8005cf8:	f8ad 3034 	strh.w	r3, [sp, #52]	; 0x34
 8005cfc:	f8cd b030 	str.w	fp, [sp, #48]	; 0x30
 8005d00:	f00d f9b6 	bl	8013070 <_ZN8touchgfx8TextArea12setTypedTextERKNS_9TypedTextE>
 8005d04:	ee18 1a10 	vmov	r1, s16
 8005d08:	4630      	mov	r0, r6
 8005d0a:	f00a fb89 	bl	8010420 <_ZN8touchgfx9Container3addERNS_8DrawableE>
    textArea3_1.setXY(88, 60);
 8005d0e:	ee18 0a90 	vmov	r0, s17
 8005d12:	223c      	movs	r2, #60	; 0x3c
 8005d14:	2158      	movs	r1, #88	; 0x58
 8005d16:	f7fc fe07 	bl	8002928 <_ZN8touchgfx8Drawable5setXYEss>
 8005d1a:	ee18 1a90 	vmov	r1, s17
 8005d1e:	4628      	mov	r0, r5
        color = newColor;
 8005d20:	f8c4 7228 	str.w	r7, [r4, #552]	; 0x228
        linespace = space;
 8005d24:	f8a4 a22c 	strh.w	sl, [r4, #556]	; 0x22c
        boundingArea = calculateBoundingArea();
 8005d28:	f00c ff08 	bl	8012b3c <_ZNK8touchgfx8TextArea21calculateBoundingAreaEv>
 8005d2c:	e895 0007 	ldmia.w	r5, {r0, r1, r2}
 8005d30:	ee18 3a90 	vmov	r3, s17
 8005d34:	333c      	adds	r3, #60	; 0x3c
 8005d36:	e883 0007 	stmia.w	r3, {r0, r1, r2}
 8005d3a:	2328      	movs	r3, #40	; 0x28
    textArea3_1.setTypedText(touchgfx::TypedText(T___SINGLEUSE_L4HV));
 8005d3c:	ee18 0a90 	vmov	r0, s17
 8005d40:	4649      	mov	r1, r9
 8005d42:	f8ad 3034 	strh.w	r3, [sp, #52]	; 0x34
 8005d46:	f8cd b030 	str.w	fp, [sp, #48]	; 0x30
 8005d4a:	f00d f991 	bl	8013070 <_ZN8touchgfx8TextArea12setTypedTextERKNS_9TypedTextE>
 8005d4e:	ee18 1a90 	vmov	r1, s17
 8005d52:	4630      	mov	r0, r6
 8005d54:	f00a fb64 	bl	8010420 <_ZN8touchgfx9Container3addERNS_8DrawableE>
    buttonWithLabel3.setXY(33, 240);
 8005d58:	ee19 0a10 	vmov	r0, s18
 8005d5c:	22f0      	movs	r2, #240	; 0xf0
 8005d5e:	2121      	movs	r1, #33	; 0x21
 8005d60:	f7fc fde2 	bl	8002928 <_ZN8touchgfx8Drawable5setXYEss>
 8005d64:	f04f 0b03 	mov.w	fp, #3
    buttonWithLabel3.setBitmaps(touchgfx::Bitmap(BITMAP_ALTERNATE_THEME_IMAGES_WIDGETS_BUTTON_REGULAR_HEIGHT_50_SMALL_ROUND_PRESSED_ID), touchgfx::Bitmap(BITMAP_ALTERNATE_THEME_IMAGES_WIDGETS_BUTTON_REGULAR_HEIGHT_50_SMALL_ROUND_NORMAL_ID));
 8005d68:	464a      	mov	r2, r9
 8005d6a:	f04f 0802 	mov.w	r8, #2
 8005d6e:	a90b      	add	r1, sp, #44	; 0x2c
 8005d70:	ee19 0a10 	vmov	r0, s18
 8005d74:	f8ad b02c 	strh.w	fp, [sp, #44]	; 0x2c
 8005d78:	f8ad 8030 	strh.w	r8, [sp, #48]	; 0x30
    buttonWithLabel3.setAction(buttonCallback);
 8005d7c:	f504 558b 	add.w	r5, r4, #4448	; 0x1160
    buttonWithLabel3.setBitmaps(touchgfx::Bitmap(BITMAP_ALTERNATE_THEME_IMAGES_WIDGETS_BUTTON_REGULAR_HEIGHT_50_SMALL_ROUND_PRESSED_ID), touchgfx::Bitmap(BITMAP_ALTERNATE_THEME_IMAGES_WIDGETS_BUTTON_REGULAR_HEIGHT_50_SMALL_ROUND_NORMAL_ID));
 8005d80:	f00d fd31 	bl	80137e6 <_ZN8touchgfx6Button10setBitmapsERKNS_6BitmapES3_>
class TypedText
 8005d84:	2355      	movs	r3, #85	; 0x55
 8005d86:	f8a4 3278 	strh.w	r3, [r4, #632]	; 0x278
    buttonWithLabel3.setAction(buttonCallback);
 8005d8a:	350c      	adds	r5, #12
        updateTextPosition();
 8005d8c:	ee19 0a10 	vmov	r0, s18
 8005d90:	f7fc fe0e 	bl	80029b0 <_ZN8touchgfx15ButtonWithLabel18updateTextPositionEv>
 8005d94:	ee19 1a10 	vmov	r1, s18
 8005d98:	4630      	mov	r0, r6
        colorPressed = col;
 8005d9a:	e9c4 779f 	strd	r7, r7, [r4, #636]	; 0x27c
 8005d9e:	f8c4 5268 	str.w	r5, [r4, #616]	; 0x268
 8005da2:	f00a fb3d 	bl	8010420 <_ZN8touchgfx9Container3addERNS_8DrawableE>
    buttonWithLabel2.setXY(33, 170);
 8005da6:	ee19 0a90 	vmov	r0, s19
 8005daa:	22aa      	movs	r2, #170	; 0xaa
 8005dac:	2121      	movs	r1, #33	; 0x21
 8005dae:	f7fc fdbb 	bl	8002928 <_ZN8touchgfx8Drawable5setXYEss>
    buttonWithLabel2.setBitmaps(touchgfx::Bitmap(BITMAP_ALTERNATE_THEME_IMAGES_WIDGETS_BUTTON_REGULAR_HEIGHT_50_SMALL_ROUND_PRESSED_ID), touchgfx::Bitmap(BITMAP_ALTERNATE_THEME_IMAGES_WIDGETS_BUTTON_REGULAR_HEIGHT_50_SMALL_ROUND_NORMAL_ID));
 8005db2:	464a      	mov	r2, r9
 8005db4:	a90b      	add	r1, sp, #44	; 0x2c
 8005db6:	ee19 0a90 	vmov	r0, s19
 8005dba:	f8ad b02c 	strh.w	fp, [sp, #44]	; 0x2c
 8005dbe:	f8ad 8030 	strh.w	r8, [sp, #48]	; 0x30
 8005dc2:	f00d fd10 	bl	80137e6 <_ZN8touchgfx6Button10setBitmapsERKNS_6BitmapES3_>
 8005dc6:	2356      	movs	r3, #86	; 0x56
 8005dc8:	f8a4 32c0 	strh.w	r3, [r4, #704]	; 0x2c0
        updateTextPosition();
 8005dcc:	ee19 0a90 	vmov	r0, s19
 8005dd0:	f7fc fdee 	bl	80029b0 <_ZN8touchgfx15ButtonWithLabel18updateTextPositionEv>
 8005dd4:	ee19 1a90 	vmov	r1, s19
 8005dd8:	4630      	mov	r0, r6
        colorPressed = col;
 8005dda:	e9c4 77b1 	strd	r7, r7, [r4, #708]	; 0x2c4
 8005dde:	f8c4 52b0 	str.w	r5, [r4, #688]	; 0x2b0
 8005de2:	f00a fb1d 	bl	8010420 <_ZN8touchgfx9Container3addERNS_8DrawableE>
    buttonWithLabel1.setXY(33, 100);
 8005de6:	ee1a 0a10 	vmov	r0, s20
 8005dea:	2264      	movs	r2, #100	; 0x64
 8005dec:	2121      	movs	r1, #33	; 0x21
 8005dee:	f7fc fd9b 	bl	8002928 <_ZN8touchgfx8Drawable5setXYEss>
    buttonWithLabel1.setBitmaps(touchgfx::Bitmap(BITMAP_ALTERNATE_THEME_IMAGES_WIDGETS_BUTTON_REGULAR_HEIGHT_50_SMALL_ROUND_PRESSED_ID), touchgfx::Bitmap(BITMAP_ALTERNATE_THEME_IMAGES_WIDGETS_BUTTON_REGULAR_HEIGHT_50_SMALL_ROUND_NORMAL_ID));
 8005df2:	464a      	mov	r2, r9
 8005df4:	a90b      	add	r1, sp, #44	; 0x2c
 8005df6:	ee1a 0a10 	vmov	r0, s20
 8005dfa:	f8ad b02c 	strh.w	fp, [sp, #44]	; 0x2c
 8005dfe:	f8ad 8030 	strh.w	r8, [sp, #48]	; 0x30
 8005e02:	f00d fcf0 	bl	80137e6 <_ZN8touchgfx6Button10setBitmapsERKNS_6BitmapES3_>
 8005e06:	2357      	movs	r3, #87	; 0x57
 8005e08:	f8a4 3308 	strh.w	r3, [r4, #776]	; 0x308
        updateTextPosition();
 8005e0c:	ee1a 0a10 	vmov	r0, s20
 8005e10:	f7fc fdce 	bl	80029b0 <_ZN8touchgfx15ButtonWithLabel18updateTextPositionEv>
 8005e14:	ee1a 1a10 	vmov	r1, s20
 8005e18:	4630      	mov	r0, r6
        colorPressed = col;
 8005e1a:	e9c4 77c3 	strd	r7, r7, [r4, #780]	; 0x30c
 8005e1e:	f8c4 52f8 	str.w	r5, [r4, #760]	; 0x2f8
 8005e22:	f00a fafd 	bl	8010420 <_ZN8touchgfx9Container3addERNS_8DrawableE>
    buttonWithIcon1.setXY(198, 5);
 8005e26:	ee1a 0a90 	vmov	r0, s21
 8005e2a:	2205      	movs	r2, #5
 8005e2c:	21c6      	movs	r1, #198	; 0xc6
 8005e2e:	f7fc fd7b 	bl	8002928 <_ZN8touchgfx8Drawable5setXYEss>
 8005e32:	2301      	movs	r3, #1
 8005e34:	f8ad 3028 	strh.w	r3, [sp, #40]	; 0x28
 8005e38:	230a      	movs	r3, #10
    buttonWithIcon1.setBitmaps(touchgfx::Bitmap(BITMAP_ALTERNATE_THEME_IMAGES_WIDGETS_BUTTON_ICON_ROUND_MICRO_OUTLINE_NORMAL_ID), touchgfx::Bitmap(BITMAP_ALTERNATE_THEME_IMAGES_WIDGETS_BUTTON_ICON_ROUND_MICRO_OUTLINE_PRESSED_ID), touchgfx::Bitmap(BITMAP_POWER_OFF_36X36_ID), touchgfx::Bitmap(BITMAP_POWER_OFF_36X36_ID));
 8005e3a:	ee1a 0a90 	vmov	r0, s21
 8005e3e:	f8ad 302c 	strh.w	r3, [sp, #44]	; 0x2c
 8005e42:	f8ad 3030 	strh.w	r3, [sp, #48]	; 0x30
 8005e46:	aa0a      	add	r2, sp, #40	; 0x28
 8005e48:	ab0b      	add	r3, sp, #44	; 0x2c
 8005e4a:	a909      	add	r1, sp, #36	; 0x24
 8005e4c:	f8cd 9000 	str.w	r9, [sp]
 8005e50:	f8ad a024 	strh.w	sl, [sp, #36]	; 0x24
 8005e54:	f00d fe01 	bl	8013a5a <_ZN8touchgfx14ButtonWithIcon10setBitmapsERKNS_6BitmapES3_S3_S3_>
 8005e58:	4630      	mov	r0, r6
 8005e5a:	ee1a 1a90 	vmov	r1, s21
 8005e5e:	f8c4 a350 	str.w	sl, [r4, #848]	; 0x350
 8005e62:	f8c4 5340 	str.w	r5, [r4, #832]	; 0x340
 8005e66:	f00a fadb 	bl	8010420 <_ZN8touchgfx9Container3addERNS_8DrawableE>
}
 8005e6a:	4620      	mov	r0, r4
 8005e6c:	b00f      	add	sp, #60	; 0x3c
 8005e6e:	ecbd 8b06 	vpop	{d8-d10}
 8005e72:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
 8005e76:	bf00      	nop
 8005e78:	20013880 	.word	0x20013880
 8005e7c:	0802ce7d 	.word	0x0802ce7d
 8005e80:	0802cef0 	.word	0x0802cef0

08005e84 <_ZN19MeasurementViewBase11setupScreenEv>:
}

void MeasurementViewBase::setupScreen()
{

}
 8005e84:	4770      	bx	lr

08005e86 <_ZN8touchgfx8CallbackI19MeasurementViewBaseRKNS_14AbstractButtonEvvED1Ev>:
struct Callback<dest_type, T1, void, void> : public GenericCallback<T1>
 8005e86:	4770      	bx	lr

08005e88 <_ZN8touchgfx8CallbackI19MeasurementViewBaseRKNS_14AbstractButtonEvvE7executeES4_>:
    virtual void execute(T1 t1)
 8005e88:	b430      	push	{r4, r5}
        (pobject->*pmemfun)(t1);
 8005e8a:	68c2      	ldr	r2, [r0, #12]
 8005e8c:	6844      	ldr	r4, [r0, #4]
 8005e8e:	1055      	asrs	r5, r2, #1
    virtual void execute(T1 t1)
 8005e90:	4603      	mov	r3, r0
        (pobject->*pmemfun)(t1);
 8005e92:	eb04 0062 	add.w	r0, r4, r2, asr #1
 8005e96:	07d2      	lsls	r2, r2, #31
 8005e98:	bf48      	it	mi
 8005e9a:	5962      	ldrmi	r2, [r4, r5]
 8005e9c:	689b      	ldr	r3, [r3, #8]
    }
 8005e9e:	bc30      	pop	{r4, r5}
        (pobject->*pmemfun)(t1);
 8005ea0:	bf48      	it	mi
 8005ea2:	58d3      	ldrmi	r3, [r2, r3]
 8005ea4:	4718      	bx	r3

08005ea6 <_ZNK8touchgfx8CallbackI19MeasurementViewBaseRKNS_14AbstractButtonEvvE7isValidEv>:
        return (pobject != 0) && (pmemfun != 0);
 8005ea6:	6843      	ldr	r3, [r0, #4]
 8005ea8:	b12b      	cbz	r3, 8005eb6 <_ZNK8touchgfx8CallbackI19MeasurementViewBaseRKNS_14AbstractButtonEvvE7isValidEv+0x10>
 8005eaa:	6883      	ldr	r3, [r0, #8]
 8005eac:	b92b      	cbnz	r3, 8005eba <_ZNK8touchgfx8CallbackI19MeasurementViewBaseRKNS_14AbstractButtonEvvE7isValidEv+0x14>
 8005eae:	68c0      	ldr	r0, [r0, #12]
 8005eb0:	f000 0001 	and.w	r0, r0, #1
 8005eb4:	4770      	bx	lr
 8005eb6:	4618      	mov	r0, r3
 8005eb8:	4770      	bx	lr
 8005eba:	2001      	movs	r0, #1
    }
 8005ebc:	4770      	bx	lr

08005ebe <_ZN8touchgfx8CallbackI19MeasurementViewBaseRKNS_14AbstractButtonEvvED0Ev>:
struct Callback<dest_type, T1, void, void> : public GenericCallback<T1>
 8005ebe:	b510      	push	{r4, lr}
 8005ec0:	2110      	movs	r1, #16
 8005ec2:	4604      	mov	r4, r0
 8005ec4:	f024 fc39 	bl	802a73a <_ZdlPvj>
 8005ec8:	4620      	mov	r0, r4
 8005eca:	bd10      	pop	{r4, pc}

08005ecc <_ZN19MeasurementViewBaseD1Ev>:
MeasurementViewBase::~MeasurementViewBase()
 8005ecc:	b510      	push	{r4, lr}
 8005ece:	4b03      	ldr	r3, [pc, #12]	; (8005edc <_ZN19MeasurementViewBaseD1Ev+0x10>)
 8005ed0:	6003      	str	r3, [r0, #0]
 8005ed2:	4604      	mov	r4, r0
    touchgfx::CanvasWidgetRenderer::resetBuffer();
 8005ed4:	f00e fe7a 	bl	8014bcc <_ZN8touchgfx20CanvasWidgetRenderer11resetBufferEv>
}
 8005ed8:	4620      	mov	r0, r4
 8005eda:	bd10      	pop	{r4, pc}
 8005edc:	0802e4dc 	.word	0x0802e4dc

08005ee0 <_ZN19MeasurementViewBaseD0Ev>:
MeasurementViewBase::~MeasurementViewBase()
 8005ee0:	b507      	push	{r0, r1, r2, lr}
 8005ee2:	4b07      	ldr	r3, [pc, #28]	; (8005f00 <_ZN19MeasurementViewBaseD0Ev+0x20>)
 8005ee4:	6003      	str	r3, [r0, #0]
 8005ee6:	9001      	str	r0, [sp, #4]
    touchgfx::CanvasWidgetRenderer::resetBuffer();
 8005ee8:	f00e fe70 	bl	8014bcc <_ZN8touchgfx20CanvasWidgetRenderer11resetBufferEv>
}
 8005eec:	9801      	ldr	r0, [sp, #4]
 8005eee:	f44f 518a 	mov.w	r1, #4416	; 0x1140
 8005ef2:	f024 fc22 	bl	802a73a <_ZdlPvj>
 8005ef6:	9801      	ldr	r0, [sp, #4]
 8005ef8:	b003      	add	sp, #12
 8005efa:	f85d fb04 	ldr.w	pc, [sp], #4
 8005efe:	bf00      	nop
 8005f00:	0802e4dc 	.word	0x0802e4dc

08005f04 <_ZN19MeasurementViewBase21buttonCallbackHandlerERKN8touchgfx14AbstractButtonE>:

void MeasurementViewBase::buttonCallbackHandler(const touchgfx::AbstractButton& src)
{
 8005f04:	b538      	push	{r3, r4, r5, lr}
    if (&src == &buttonWithLabel3)
 8005f06:	f500 7310 	add.w	r3, r0, #576	; 0x240
 8005f0a:	4299      	cmp	r1, r3
{
 8005f0c:	4604      	mov	r4, r0
 8005f0e:	460d      	mov	r5, r1
    if (&src == &buttonWithLabel3)
 8005f10:	d103      	bne.n	8005f1a <_ZN19MeasurementViewBase21buttonCallbackHandlerERKN8touchgfx14AbstractButtonE+0x16>
    virtual ~MeasurementViewBase();
    virtual void setupScreen();

protected:
    FrontendApplication& application() {
        return *static_cast<FrontendApplication*>(touchgfx::Application::getInstance());
 8005f12:	f010 fb5d 	bl	80165d0 <_ZN8touchgfx11Application11getInstanceEv>
    {
        //Interaction1
        //When buttonWithLabel3 clicked change screen to Main_Menu
        //Go to Main_Menu with screen transition towards West
        application().gotoMain_MenuScreenWipeTransitionWest();
 8005f16:	f7fe fbe5 	bl	80046e4 <_ZN23FrontendApplicationBase37gotoMain_MenuScreenWipeTransitionWestEv>
    }
    if (&src == &buttonWithLabel1)
 8005f1a:	f504 7334 	add.w	r3, r4, #720	; 0x2d0
 8005f1e:	429d      	cmp	r5, r3
 8005f20:	d103      	bne.n	8005f2a <_ZN19MeasurementViewBase21buttonCallbackHandlerERKN8touchgfx14AbstractButtonE+0x26>
 8005f22:	f010 fb55 	bl	80165d0 <_ZN8touchgfx11Application11getInstanceEv>
    {
        //Interaction2
        //When buttonWithLabel1 clicked change screen to Measurement_Single
        //Go to Measurement_Single with screen transition towards East
        application().gotoMeasurement_SingleScreenWipeTransitionEast();
 8005f26:	f7fe fc0d 	bl	8004744 <_ZN23FrontendApplicationBase46gotoMeasurement_SingleScreenWipeTransitionEastEv>
    }
    if (&src == &buttonWithLabel2)
 8005f2a:	f504 7422 	add.w	r4, r4, #648	; 0x288
 8005f2e:	42a5      	cmp	r5, r4
 8005f30:	d105      	bne.n	8005f3e <_ZN19MeasurementViewBase21buttonCallbackHandlerERKN8touchgfx14AbstractButtonE+0x3a>
 8005f32:	f010 fb4d 	bl	80165d0 <_ZN8touchgfx11Application11getInstanceEv>
        //Interaction3
        //When buttonWithLabel2 clicked change screen to Measurement_Accurate
        //Go to Measurement_Accurate with screen transition towards East
        application().gotoMeasurement_AccurateScreenWipeTransitionEast();
    }
}
 8005f36:	e8bd 4038 	ldmia.w	sp!, {r3, r4, r5, lr}
        application().gotoMeasurement_AccurateScreenWipeTransitionEast();
 8005f3a:	f7fe bc33 	b.w	80047a4 <_ZN23FrontendApplicationBase48gotoMeasurement_AccurateScreenWipeTransitionEastEv>
}
 8005f3e:	bd38      	pop	{r3, r4, r5, pc}

08005f40 <_ZN19MeasurementViewBaseC1Ev>:
MeasurementViewBase::MeasurementViewBase() :
 8005f40:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 8005f44:	ed2d 8b06 	vpush	{d8-d10}
 8005f48:	4604      	mov	r4, r0
 8005f4a:	b08d      	sub	sp, #52	; 0x34
    buttonCallback(this, &MeasurementViewBase::buttonCallbackHandler)
 8005f4c:	46a3      	mov	fp, r4
 8005f4e:	2500      	movs	r5, #0
 8005f50:	f011 ffbe 	bl	8017ed0 <_ZN8touchgfx6ScreenC1Ev>
 8005f54:	4b66      	ldr	r3, [pc, #408]	; (80060f0 <_ZN19MeasurementViewBaseC1Ev+0x1b0>)
 8005f56:	63e5      	str	r5, [r4, #60]	; 0x3c
 8005f58:	f84b 3b40 	str.w	r3, [fp], #64
        : Widget(), alpha(255), color(0)
 8005f5c:	2226      	movs	r2, #38	; 0x26
 8005f5e:	4629      	mov	r1, r5
 8005f60:	4658      	mov	r0, fp
 8005f62:	f025 fc02 	bl	802b76a <memset>
 8005f66:	4658      	mov	r0, fp
 8005f68:	f7fc fd10 	bl	800298c <_ZN8touchgfx6WidgetC1Ev>
 8005f6c:	f104 0a6c 	add.w	sl, r4, #108	; 0x6c
 8005f70:	26ff      	movs	r6, #255	; 0xff
 8005f72:	4b60      	ldr	r3, [pc, #384]	; (80060f4 <_ZN19MeasurementViewBaseC1Ev+0x1b4>)
 8005f74:	6423      	str	r3, [r4, #64]	; 0x40
        : Widget(), bitmap(bmp), alpha(255)
 8005f76:	2226      	movs	r2, #38	; 0x26
 8005f78:	f64f 73ff 	movw	r3, #65535	; 0xffff
 8005f7c:	4629      	mov	r1, r5
 8005f7e:	f884 6066 	strb.w	r6, [r4, #102]	; 0x66
 8005f82:	4650      	mov	r0, sl
 8005f84:	66a5      	str	r5, [r4, #104]	; 0x68
 8005f86:	f8ad 3028 	strh.w	r3, [sp, #40]	; 0x28
 8005f8a:	f025 fbee 	bl	802b76a <memset>
 8005f8e:	4650      	mov	r0, sl
 8005f90:	f7fc fcfc 	bl	800298c <_ZN8touchgfx6WidgetC1Ev>
 8005f94:	4b58      	ldr	r3, [pc, #352]	; (80060f8 <_ZN19MeasurementViewBaseC1Ev+0x1b8>)
 8005f96:	66e3      	str	r3, [r4, #108]	; 0x6c
 8005f98:	f8bd 3028 	ldrh.w	r3, [sp, #40]	; 0x28
 8005f9c:	f8a4 3092 	strh.w	r3, [r4, #146]	; 0x92
        Image::setBitmap(bmp);
 8005fa0:	a90a      	add	r1, sp, #40	; 0x28
 8005fa2:	4650      	mov	r0, sl
 8005fa4:	f104 0998 	add.w	r9, r4, #152	; 0x98
        : Widget(), bitmap(bmp), alpha(255)
 8005fa8:	f884 6094 	strb.w	r6, [r4, #148]	; 0x94
        Image::setBitmap(bmp);
 8005fac:	f00d fe11 	bl	8013bd2 <_ZN8touchgfx5Image9setBitmapERKNS_6BitmapE>
        : TextArea()
 8005fb0:	4648      	mov	r0, r9
 8005fb2:	f7fc fd4f 	bl	8002a54 <_ZN8touchgfx8TextAreaC1Ev>
        : TextAreaWithWildcardBase(), wc1(0)
 8005fb6:	4b51      	ldr	r3, [pc, #324]	; (80060fc <_ZN19MeasurementViewBaseC1Ev+0x1bc>)
 8005fb8:	f8c4 3098 	str.w	r3, [r4, #152]	; 0x98
 8005fbc:	f104 03e4 	add.w	r3, r4, #228	; 0xe4
 8005fc0:	4618      	mov	r0, r3
 8005fc2:	f8c4 50e0 	str.w	r5, [r4, #224]	; 0xe0
 8005fc6:	f504 7796 	add.w	r7, r4, #300	; 0x12c
 8005fca:	ee08 3a90 	vmov	s17, r3
 8005fce:	f7fc fd41 	bl	8002a54 <_ZN8touchgfx8TextAreaC1Ev>
 8005fd2:	4638      	mov	r0, r7
 8005fd4:	f00c faf0 	bl	80125b8 <_ZN8touchgfx4LineC1Ev>
 8005fd8:	f504 73ce 	add.w	r3, r4, #412	; 0x19c
        : AbstractPainterRGB565(), AbstractPainterColor(color)
 8005fdc:	4618      	mov	r0, r3
 8005fde:	9303      	str	r3, [sp, #12]
 8005fe0:	f7fc fad8 	bl	8002594 <_ZN8touchgfx21AbstractPainterRGB565C1Ev>
 8005fe4:	4b46      	ldr	r3, [pc, #280]	; (8006100 <_ZN19MeasurementViewBaseC1Ev+0x1c0>)
 8005fe6:	f8c4 319c 	str.w	r3, [r4, #412]	; 0x19c
 8005fea:	f504 78d8 	add.w	r8, r4, #432	; 0x1b0
 8005fee:	3324      	adds	r3, #36	; 0x24
 8005ff0:	f8c4 31a4 	str.w	r3, [r4, #420]	; 0x1a4
 8005ff4:	f8c4 51a8 	str.w	r5, [r4, #424]	; 0x1a8
 8005ff8:	4640      	mov	r0, r8
 8005ffa:	f7fc fd2b 	bl	8002a54 <_ZN8touchgfx8TextAreaC1Ev>
 8005ffe:	f504 73fc 	add.w	r3, r4, #504	; 0x1f8
 8006002:	4618      	mov	r0, r3
 8006004:	ee08 3a10 	vmov	s16, r3
 8006008:	f7fc fd24 	bl	8002a54 <_ZN8touchgfx8TextAreaC1Ev>
 800600c:	f504 7310 	add.w	r3, r4, #576	; 0x240
 8006010:	4618      	mov	r0, r3
 8006012:	ee09 3a10 	vmov	s18, r3
 8006016:	f00d ff13 	bl	8013e40 <_ZN8touchgfx15ButtonWithLabelC1Ev>
 800601a:	f504 7322 	add.w	r3, r4, #648	; 0x288
 800601e:	4618      	mov	r0, r3
 8006020:	ee09 3a90 	vmov	s19, r3
 8006024:	f00d ff0c 	bl	8013e40 <_ZN8touchgfx15ButtonWithLabelC1Ev>
 8006028:	f504 7334 	add.w	r3, r4, #720	; 0x2d0
 800602c:	4618      	mov	r0, r3
 800602e:	ee0a 3a10 	vmov	s20, r3
 8006032:	f00d ff05 	bl	8013e40 <_ZN8touchgfx15ButtonWithLabelC1Ev>
        : pobject(pObject), pmemfun(pmemfun_1)
 8006036:	4a33      	ldr	r2, [pc, #204]	; (8006104 <_ZN19MeasurementViewBaseC1Ev+0x1c4>)
 8006038:	f504 5380 	add.w	r3, r4, #4096	; 0x1000
 800603c:	e9c3 244c 	strd	r2, r4, [r3, #304]	; 0x130
 8006040:	4a31      	ldr	r2, [pc, #196]	; (8006108 <_ZN19MeasurementViewBaseC1Ev+0x1c8>)
    touchgfx::CanvasWidgetRenderer::setupBuffer(canvasBuffer, CANVAS_BUFFER_SIZE);
 8006042:	f44f 6161 	mov.w	r1, #3600	; 0xe10
 8006046:	e9c3 254e 	strd	r2, r5, [r3, #312]	; 0x138
 800604a:	f504 7048 	add.w	r0, r4, #800	; 0x320
 800604e:	f00e fdb3 	bl	8014bb8 <_ZN8touchgfx20CanvasWidgetRenderer11setupBufferEPhj>
    __background.setPosition(0, 0, 240, 320);
 8006052:	f44f 73a0 	mov.w	r3, #320	; 0x140
 8006056:	462a      	mov	r2, r5
 8006058:	4658      	mov	r0, fp
 800605a:	9300      	str	r3, [sp, #0]
 800605c:	4629      	mov	r1, r5
 800605e:	23f0      	movs	r3, #240	; 0xf0
 8006060:	f7fc fc6f 	bl	8002942 <_ZN8touchgfx8Drawable11setPositionEssss>
 8006064:	1d26      	adds	r6, r4, #4
        color = newColor;
 8006066:	f04f 437f 	mov.w	r3, #4278190080	; 0xff000000
 800606a:	66a3      	str	r3, [r4, #104]	; 0x68
 800606c:	4659      	mov	r1, fp
 800606e:	4630      	mov	r0, r6
 8006070:	f00a f9d6 	bl	8010420 <_ZN8touchgfx9Container3addERNS_8DrawableE>
    image1.setXY(0, 0);
 8006074:	462a      	mov	r2, r5
 8006076:	4650      	mov	r0, sl
 8006078:	4629      	mov	r1, r5
 800607a:	f7fc fc55 	bl	8002928 <_ZN8touchgfx8Drawable5setXYEss>
 800607e:	2308      	movs	r3, #8
    image1.setBitmap(touchgfx::Bitmap(BITMAP_BACKGROUND_2_RESIZED_4_ID));
 8006080:	4650      	mov	r0, sl
 8006082:	a90a      	add	r1, sp, #40	; 0x28
 8006084:	f8ad 3028 	strh.w	r3, [sp, #40]	; 0x28
 8006088:	f00d fda3 	bl	8013bd2 <_ZN8touchgfx5Image9setBitmapERKNS_6BitmapE>
 800608c:	4651      	mov	r1, sl
 800608e:	4630      	mov	r0, r6
 8006090:	f00a f9c6 	bl	8010420 <_ZN8touchgfx9Container3addERNS_8DrawableE>
    textArea3_1.setXY(86, 308);
 8006094:	f44f 729a 	mov.w	r2, #308	; 0x134
 8006098:	2156      	movs	r1, #86	; 0x56
 800609a:	4648      	mov	r0, r9
 800609c:	f7fc fc44 	bl	8002928 <_ZN8touchgfx8Drawable5setXYEss>
        color = newColor;
 80060a0:	f04f 33ff 	mov.w	r3, #4294967295
 80060a4:	f8c4 30c8 	str.w	r3, [r4, #200]	; 0xc8
        boundingArea = calculateBoundingArea();
 80060a8:	f8d4 3098 	ldr.w	r3, [r4, #152]	; 0x98
        linespace = space;
 80060ac:	f8a4 50cc 	strh.w	r5, [r4, #204]	; 0xcc
        boundingArea = calculateBoundingArea();
 80060b0:	f10d 0b10 	add.w	fp, sp, #16
 80060b4:	f8d3 3084 	ldr.w	r3, [r3, #132]	; 0x84
 80060b8:	4649      	mov	r1, r9
 80060ba:	4658      	mov	r0, fp
 80060bc:	4798      	blx	r3
 80060be:	e89b 0007 	ldmia.w	fp, {r0, r1, r2}
 80060c2:	f104 03d4 	add.w	r3, r4, #212	; 0xd4
 80060c6:	e883 0007 	stmia.w	r3, {r0, r1, r2}
        assert(typedTexts != 0 && "TypedText database has not been initialized.");
 80060ca:	4b10      	ldr	r3, [pc, #64]	; (800610c <_ZN19MeasurementViewBaseC1Ev+0x1cc>)
 80060cc:	681b      	ldr	r3, [r3, #0]
    Unicode::snprintf(textArea3_1Buffer, TEXTAREA3_1_SIZE, "%s", touchgfx::TypedText(T___SINGLEUSE_0CQH).getText());
 80060ce:	f504 7a46 	add.w	sl, r4, #792	; 0x318
 80060d2:	b92b      	cbnz	r3, 80060e0 <_ZN19MeasurementViewBaseC1Ev+0x1a0>
 80060d4:	4b0e      	ldr	r3, [pc, #56]	; (8006110 <_ZN19MeasurementViewBaseC1Ev+0x1d0>)
 80060d6:	4a0f      	ldr	r2, [pc, #60]	; (8006114 <_ZN19MeasurementViewBaseC1Ev+0x1d4>)
 80060d8:	2160      	movs	r1, #96	; 0x60
        assert(hasValidId() && "typedTextId larger than numberOfTypedTexts.");
 80060da:	480f      	ldr	r0, [pc, #60]	; (8006118 <_ZN19MeasurementViewBaseC1Ev+0x1d8>)
 80060dc:	f025 f940 	bl	802b360 <__assert_func>
        return typedTextId < numberOfTypedTexts;
 80060e0:	4b0e      	ldr	r3, [pc, #56]	; (800611c <_ZN19MeasurementViewBaseC1Ev+0x1dc>)
        assert(hasValidId() && "typedTextId larger than numberOfTypedTexts.");
 80060e2:	881b      	ldrh	r3, [r3, #0]
 80060e4:	2b29      	cmp	r3, #41	; 0x29
 80060e6:	d81d      	bhi.n	8006124 <_ZN19MeasurementViewBaseC1Ev+0x1e4>
 80060e8:	4b0d      	ldr	r3, [pc, #52]	; (8006120 <_ZN19MeasurementViewBaseC1Ev+0x1e0>)
 80060ea:	4a0a      	ldr	r2, [pc, #40]	; (8006114 <_ZN19MeasurementViewBaseC1Ev+0x1d4>)
 80060ec:	2161      	movs	r1, #97	; 0x61
 80060ee:	e7f4      	b.n	80060da <_ZN19MeasurementViewBaseC1Ev+0x19a>
 80060f0:	0802e4dc 	.word	0x0802e4dc
 80060f4:	0802f444 	.word	0x0802f444
 80060f8:	0802f690 	.word	0x0802f690
 80060fc:	0802cf90 	.word	0x0802cf90
 8006100:	0802f178 	.word	0x0802f178
 8006104:	0802e4c4 	.word	0x0802e4c4
 8006108:	08005f05 	.word	0x08005f05
 800610c:	20013874 	.word	0x20013874
 8006110:	0802cd40 	.word	0x0802cd40
 8006114:	0802ce45 	.word	0x0802ce45
 8006118:	0802cdbd 	.word	0x0802cdbd
 800611c:	20013878 	.word	0x20013878
 8006120:	0802ce04 	.word	0x0802ce04
        return texts->getText(typedTextId);
 8006124:	4b95      	ldr	r3, [pc, #596]	; (800637c <_ZN19MeasurementViewBaseC1Ev+0x43c>)
 8006126:	2129      	movs	r1, #41	; 0x29
 8006128:	6818      	ldr	r0, [r3, #0]
 800612a:	f002 fb0d 	bl	8008748 <_ZNK8touchgfx5Texts7getTextEt>
 800612e:	4a94      	ldr	r2, [pc, #592]	; (8006380 <_ZN19MeasurementViewBaseC1Ev+0x440>)
 8006130:	4603      	mov	r3, r0
 8006132:	2104      	movs	r1, #4
 8006134:	4650      	mov	r0, sl
 8006136:	f013 fbf9 	bl	801992c <_ZN8touchgfx7Unicode8snprintfEPttPKcz>
        wc1 = value;
 800613a:	f8c4 a0e0 	str.w	sl, [r4, #224]	; 0xe0
    textArea3_1.resizeToCurrentText();
 800613e:	4648      	mov	r0, r9
 8006140:	f00c ff76 	bl	8013030 <_ZN8touchgfx8TextArea19resizeToCurrentTextEv>
        : typedTextId(id)
 8006144:	f8df a23c 	ldr.w	sl, [pc, #572]	; 8006384 <_ZN19MeasurementViewBaseC1Ev+0x444>
 8006148:	f8cd a028 	str.w	sl, [sp, #40]	; 0x28
 800614c:	232a      	movs	r3, #42	; 0x2a
    textArea3_1.setTypedText(touchgfx::TypedText(T___SINGLEUSE_TOET));
 800614e:	a90a      	add	r1, sp, #40	; 0x28
 8006150:	4648      	mov	r0, r9
 8006152:	f8ad 302c 	strh.w	r3, [sp, #44]	; 0x2c
 8006156:	f00c ff8b 	bl	8013070 <_ZN8touchgfx8TextArea12setTypedTextERKNS_9TypedTextE>
 800615a:	4649      	mov	r1, r9
 800615c:	4630      	mov	r0, r6
 800615e:	f00a f95f 	bl	8010420 <_ZN8touchgfx9Container3addERNS_8DrawableE>
    textArea3.setXY(61, 60);
 8006162:	223c      	movs	r2, #60	; 0x3c
 8006164:	ee18 0a90 	vmov	r0, s17
 8006168:	213d      	movs	r1, #61	; 0x3d
 800616a:	f7fc fbdd 	bl	8002928 <_ZN8touchgfx8Drawable5setXYEss>
        color = newColor;
 800616e:	f04f 33ff 	mov.w	r3, #4294967295
        boundingArea = calculateBoundingArea();
 8006172:	ee18 1a90 	vmov	r1, s17
        color = newColor;
 8006176:	f8c4 3114 	str.w	r3, [r4, #276]	; 0x114
        boundingArea = calculateBoundingArea();
 800617a:	4658      	mov	r0, fp
        linespace = space;
 800617c:	f8a4 5118 	strh.w	r5, [r4, #280]	; 0x118
        boundingArea = calculateBoundingArea();
 8006180:	f00c fcdc 	bl	8012b3c <_ZNK8touchgfx8TextArea21calculateBoundingAreaEv>
 8006184:	e89b 0007 	ldmia.w	fp, {r0, r1, r2}
 8006188:	f504 7390 	add.w	r3, r4, #288	; 0x120
 800618c:	e883 0007 	stmia.w	r3, {r0, r1, r2}
 8006190:	2337      	movs	r3, #55	; 0x37
    textArea3.setTypedText(touchgfx::TypedText(T___SINGLEUSE_Q8CP));
 8006192:	ee18 0a90 	vmov	r0, s17
 8006196:	a90a      	add	r1, sp, #40	; 0x28
 8006198:	f8ad 302c 	strh.w	r3, [sp, #44]	; 0x2c
 800619c:	f8cd a028 	str.w	sl, [sp, #40]	; 0x28
 80061a0:	f00c ff66 	bl	8013070 <_ZN8touchgfx8TextArea12setTypedTextERKNS_9TypedTextE>
 80061a4:	ee18 1a90 	vmov	r1, s17
 80061a8:	4630      	mov	r0, r6
 80061aa:	f00a f939 	bl	8010420 <_ZN8touchgfx9Container3addERNS_8DrawableE>
    line1.setPosition(0, 50, 240, 10);
 80061ae:	230a      	movs	r3, #10
 80061b0:	9300      	str	r3, [sp, #0]
 80061b2:	2232      	movs	r2, #50	; 0x32
 80061b4:	23f0      	movs	r3, #240	; 0xf0
 80061b6:	4629      	mov	r1, r5
 80061b8:	4638      	mov	r0, r7
 80061ba:	f7fc fbc2 	bl	8002942 <_ZN8touchgfx8Drawable11setPositionEssss>
 80061be:	f04f 33ff 	mov.w	r3, #4294967295
        setStart(CWRUtil::toQ5<T>(x), CWRUtil::toQ5<T>(y));
 80061c2:	22a0      	movs	r2, #160	; 0xa0
 80061c4:	f8c4 31a8 	str.w	r3, [r4, #424]	; 0x1a8
        color565 = LCD16bpp::getNativeColor(painterColor);
 80061c8:	f8a4 31ac 	strh.w	r3, [r4, #428]	; 0x1ac
 80061cc:	9b03      	ldr	r3, [sp, #12]
 80061ce:	f8c4 3154 	str.w	r3, [r4, #340]	; 0x154
 80061d2:	4611      	mov	r1, r2
 80061d4:	4638      	mov	r0, r7
 80061d6:	f00c fb05 	bl	80127e4 <_ZN8touchgfx4Line8setStartENS_7CWRUtil2Q5ES2_>
        setEnd(CWRUtil::toQ5<T>(x), CWRUtil::toQ5<T>(y));
 80061da:	22a0      	movs	r2, #160	; 0xa0
 80061dc:	f44f 51eb 	mov.w	r1, #7520	; 0x1d60
 80061e0:	4638      	mov	r0, r7
 80061e2:	f00c fb0a 	bl	80127fa <_ZN8touchgfx4Line6setEndENS_7CWRUtil2Q5ES2_>
        if (lineWidthQ5 == widthQ5)
 80061e6:	f8d4 3168 	ldr.w	r3, [r4, #360]	; 0x168
 80061ea:	2b20      	cmp	r3, #32
 80061ec:	d005      	beq.n	80061fa <_ZN19MeasurementViewBaseC1Ev+0x2ba>
        lineWidthQ5 = widthQ5;
 80061ee:	2320      	movs	r3, #32
 80061f0:	f8c4 3168 	str.w	r3, [r4, #360]	; 0x168
        updateCachedShape();
 80061f4:	4638      	mov	r0, r7
 80061f6:	f00c f9ff 	bl	80125f8 <_ZN8touchgfx4Line17updateCachedShapeEv>
    line1.setLineEndingStyle(touchgfx::Line::ROUND_CAP_ENDING);
 80061fa:	4638      	mov	r0, r7
 80061fc:	2101      	movs	r1, #1
 80061fe:	f00c fb07 	bl	8012810 <_ZN8touchgfx4Line18setLineEndingStyleENS0_17LINE_ENDING_STYLEE>
 8006202:	4639      	mov	r1, r7
 8006204:	4630      	mov	r0, r6
 8006206:	f00a f90b 	bl	8010420 <_ZN8touchgfx9Container3addERNS_8DrawableE>
        color = newColor;
 800620a:	f04f 35ff 	mov.w	r5, #4294967295
        boundingArea = calculateBoundingArea();
 800620e:	af04      	add	r7, sp, #16
    textArea2.setXY(69, 35);
 8006210:	2223      	movs	r2, #35	; 0x23
 8006212:	4640      	mov	r0, r8
        linespace = space;
 8006214:	f04f 0a00 	mov.w	sl, #0
 8006218:	2145      	movs	r1, #69	; 0x45
 800621a:	f7fc fb85 	bl	8002928 <_ZN8touchgfx8Drawable5setXYEss>
        boundingArea = calculateBoundingArea();
 800621e:	4641      	mov	r1, r8
 8006220:	4638      	mov	r0, r7
        color = newColor;
 8006222:	f8c4 51e0 	str.w	r5, [r4, #480]	; 0x1e0
        linespace = space;
 8006226:	f8a4 a1e4 	strh.w	sl, [r4, #484]	; 0x1e4
        boundingArea = calculateBoundingArea();
 800622a:	f00c fc87 	bl	8012b3c <_ZNK8touchgfx8TextArea21calculateBoundingAreaEv>
 800622e:	e897 0007 	ldmia.w	r7, {r0, r1, r2}
 8006232:	f108 033c 	add.w	r3, r8, #60	; 0x3c
 8006236:	e883 0007 	stmia.w	r3, {r0, r1, r2}
 800623a:	f8df 9148 	ldr.w	r9, [pc, #328]	; 8006384 <_ZN19MeasurementViewBaseC1Ev+0x444>
 800623e:	f8cd 9028 	str.w	r9, [sp, #40]	; 0x28
 8006242:	2351      	movs	r3, #81	; 0x51
    textArea2.setTypedText(touchgfx::TypedText(T___SINGLEUSE_V2L5));
 8006244:	a90a      	add	r1, sp, #40	; 0x28
 8006246:	4640      	mov	r0, r8
 8006248:	f8ad 302c 	strh.w	r3, [sp, #44]	; 0x2c
 800624c:	f00c ff10 	bl	8013070 <_ZN8touchgfx8TextArea12setTypedTextERKNS_9TypedTextE>
 8006250:	4641      	mov	r1, r8
 8006252:	4630      	mov	r0, r6
 8006254:	f00a f8e4 	bl	8010420 <_ZN8touchgfx9Container3addERNS_8DrawableE>
    textArea1.setXY(54, 12);
 8006258:	ee18 0a10 	vmov	r0, s16
 800625c:	220c      	movs	r2, #12
 800625e:	2136      	movs	r1, #54	; 0x36
 8006260:	f7fc fb62 	bl	8002928 <_ZN8touchgfx8Drawable5setXYEss>
 8006264:	ee18 1a10 	vmov	r1, s16
 8006268:	4638      	mov	r0, r7
        color = newColor;
 800626a:	f8c4 5228 	str.w	r5, [r4, #552]	; 0x228
        linespace = space;
 800626e:	f8a4 a22c 	strh.w	sl, [r4, #556]	; 0x22c
        boundingArea = calculateBoundingArea();
 8006272:	f00c fc63 	bl	8012b3c <_ZNK8touchgfx8TextArea21calculateBoundingAreaEv>
 8006276:	e897 0007 	ldmia.w	r7, {r0, r1, r2}
 800627a:	ee18 3a10 	vmov	r3, s16
 800627e:	333c      	adds	r3, #60	; 0x3c
 8006280:	e883 0007 	stmia.w	r3, {r0, r1, r2}
 8006284:	2352      	movs	r3, #82	; 0x52
    textArea1.setTypedText(touchgfx::TypedText(T___SINGLEUSE_FIV6));
 8006286:	ee18 0a10 	vmov	r0, s16
 800628a:	a90a      	add	r1, sp, #40	; 0x28
 800628c:	f8ad 302c 	strh.w	r3, [sp, #44]	; 0x2c
 8006290:	f8cd 9028 	str.w	r9, [sp, #40]	; 0x28
 8006294:	f00c feec 	bl	8013070 <_ZN8touchgfx8TextArea12setTypedTextERKNS_9TypedTextE>
 8006298:	ee18 1a10 	vmov	r1, s16
 800629c:	4630      	mov	r0, r6
 800629e:	f00a f8bf 	bl	8010420 <_ZN8touchgfx9Container3addERNS_8DrawableE>
    buttonWithLabel3.setXY(33, 240);
 80062a2:	ee19 0a10 	vmov	r0, s18
 80062a6:	22f0      	movs	r2, #240	; 0xf0
 80062a8:	2121      	movs	r1, #33	; 0x21
 80062aa:	f7fc fb3d 	bl	8002928 <_ZN8touchgfx8Drawable5setXYEss>
 80062ae:	f04f 0903 	mov.w	r9, #3
    buttonWithLabel3.setBitmaps(touchgfx::Bitmap(BITMAP_ALTERNATE_THEME_IMAGES_WIDGETS_BUTTON_REGULAR_HEIGHT_50_SMALL_ROUND_PRESSED_ID), touchgfx::Bitmap(BITMAP_ALTERNATE_THEME_IMAGES_WIDGETS_BUTTON_REGULAR_HEIGHT_50_SMALL_ROUND_NORMAL_ID));
 80062b2:	aa0a      	add	r2, sp, #40	; 0x28
 80062b4:	f04f 0802 	mov.w	r8, #2
 80062b8:	a909      	add	r1, sp, #36	; 0x24
 80062ba:	ee19 0a10 	vmov	r0, s18
 80062be:	f8ad 9024 	strh.w	r9, [sp, #36]	; 0x24
 80062c2:	f8ad 8028 	strh.w	r8, [sp, #40]	; 0x28
    buttonWithLabel3.setAction(buttonCallback);
 80062c6:	f504 5789 	add.w	r7, r4, #4384	; 0x1120
    buttonWithLabel3.setBitmaps(touchgfx::Bitmap(BITMAP_ALTERNATE_THEME_IMAGES_WIDGETS_BUTTON_REGULAR_HEIGHT_50_SMALL_ROUND_PRESSED_ID), touchgfx::Bitmap(BITMAP_ALTERNATE_THEME_IMAGES_WIDGETS_BUTTON_REGULAR_HEIGHT_50_SMALL_ROUND_NORMAL_ID));
 80062ca:	f00d fa8c 	bl	80137e6 <_ZN8touchgfx6Button10setBitmapsERKNS_6BitmapES3_>
class TypedText
 80062ce:	2350      	movs	r3, #80	; 0x50
 80062d0:	f8a4 3278 	strh.w	r3, [r4, #632]	; 0x278
    buttonWithLabel3.setAction(buttonCallback);
 80062d4:	3710      	adds	r7, #16
        updateTextPosition();
 80062d6:	ee19 0a10 	vmov	r0, s18
 80062da:	f7fc fb69 	bl	80029b0 <_ZN8touchgfx15ButtonWithLabel18updateTextPositionEv>
 80062de:	ee19 1a10 	vmov	r1, s18
 80062e2:	4630      	mov	r0, r6
        colorPressed = col;
 80062e4:	e9c4 559f 	strd	r5, r5, [r4, #636]	; 0x27c
 80062e8:	f8c4 7268 	str.w	r7, [r4, #616]	; 0x268
 80062ec:	f00a f898 	bl	8010420 <_ZN8touchgfx9Container3addERNS_8DrawableE>
    buttonWithLabel2.setXY(33, 170);
 80062f0:	ee19 0a90 	vmov	r0, s19
 80062f4:	22aa      	movs	r2, #170	; 0xaa
 80062f6:	2121      	movs	r1, #33	; 0x21
 80062f8:	f7fc fb16 	bl	8002928 <_ZN8touchgfx8Drawable5setXYEss>
    buttonWithLabel2.setBitmaps(touchgfx::Bitmap(BITMAP_ALTERNATE_THEME_IMAGES_WIDGETS_BUTTON_REGULAR_HEIGHT_50_SMALL_ROUND_PRESSED_ID), touchgfx::Bitmap(BITMAP_ALTERNATE_THEME_IMAGES_WIDGETS_BUTTON_REGULAR_HEIGHT_50_SMALL_ROUND_NORMAL_ID));
 80062fc:	aa0a      	add	r2, sp, #40	; 0x28
 80062fe:	a909      	add	r1, sp, #36	; 0x24
 8006300:	ee19 0a90 	vmov	r0, s19
 8006304:	f8ad 9024 	strh.w	r9, [sp, #36]	; 0x24
 8006308:	f8ad 8028 	strh.w	r8, [sp, #40]	; 0x28
 800630c:	f00d fa6b 	bl	80137e6 <_ZN8touchgfx6Button10setBitmapsERKNS_6BitmapES3_>
 8006310:	234f      	movs	r3, #79	; 0x4f
 8006312:	f8a4 32c0 	strh.w	r3, [r4, #704]	; 0x2c0
        updateTextPosition();
 8006316:	ee19 0a90 	vmov	r0, s19
 800631a:	f7fc fb49 	bl	80029b0 <_ZN8touchgfx15ButtonWithLabel18updateTextPositionEv>
 800631e:	ee19 1a90 	vmov	r1, s19
 8006322:	4630      	mov	r0, r6
        colorPressed = col;
 8006324:	e9c4 55b1 	strd	r5, r5, [r4, #708]	; 0x2c4
 8006328:	f8c4 72b0 	str.w	r7, [r4, #688]	; 0x2b0
 800632c:	f00a f878 	bl	8010420 <_ZN8touchgfx9Container3addERNS_8DrawableE>
    buttonWithLabel1.setXY(33, 100);
 8006330:	ee1a 0a10 	vmov	r0, s20
 8006334:	2264      	movs	r2, #100	; 0x64
 8006336:	2121      	movs	r1, #33	; 0x21
 8006338:	f7fc faf6 	bl	8002928 <_ZN8touchgfx8Drawable5setXYEss>
    buttonWithLabel1.setBitmaps(touchgfx::Bitmap(BITMAP_ALTERNATE_THEME_IMAGES_WIDGETS_BUTTON_REGULAR_HEIGHT_50_SMALL_ROUND_PRESSED_ID), touchgfx::Bitmap(BITMAP_ALTERNATE_THEME_IMAGES_WIDGETS_BUTTON_REGULAR_HEIGHT_50_SMALL_ROUND_NORMAL_ID));
 800633c:	aa0a      	add	r2, sp, #40	; 0x28
 800633e:	a909      	add	r1, sp, #36	; 0x24
 8006340:	ee1a 0a10 	vmov	r0, s20
 8006344:	f8ad 9024 	strh.w	r9, [sp, #36]	; 0x24
 8006348:	f8ad 8028 	strh.w	r8, [sp, #40]	; 0x28
 800634c:	f00d fa4b 	bl	80137e6 <_ZN8touchgfx6Button10setBitmapsERKNS_6BitmapES3_>
 8006350:	234e      	movs	r3, #78	; 0x4e
        updateTextPosition();
 8006352:	ee1a 0a10 	vmov	r0, s20
 8006356:	f8a4 3308 	strh.w	r3, [r4, #776]	; 0x308
 800635a:	f7fc fb29 	bl	80029b0 <_ZN8touchgfx15ButtonWithLabel18updateTextPositionEv>
 800635e:	4630      	mov	r0, r6
        colorPressed = col;
 8006360:	e9c4 55c3 	strd	r5, r5, [r4, #780]	; 0x30c
 8006364:	ee1a 1a10 	vmov	r1, s20
 8006368:	f8c4 72f8 	str.w	r7, [r4, #760]	; 0x2f8
 800636c:	f00a f858 	bl	8010420 <_ZN8touchgfx9Container3addERNS_8DrawableE>
}
 8006370:	4620      	mov	r0, r4
 8006372:	b00d      	add	sp, #52	; 0x34
 8006374:	ecbd 8b06 	vpop	{d8-d10}
 8006378:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
 800637c:	20013880 	.word	0x20013880
 8006380:	0802ce7d 	.word	0x0802ce7d
 8006384:	0802cef0 	.word	0x0802cef0

08006388 <_ZN28Measurement_AccurateViewBase11setupScreenEv>:
}

void Measurement_AccurateViewBase::setupScreen()
{

}
 8006388:	4770      	bx	lr

0800638a <_ZN8touchgfx8CallbackI28Measurement_AccurateViewBaseRKNS_14AbstractButtonEvvED1Ev>:
struct Callback<dest_type, T1, void, void> : public GenericCallback<T1>
 800638a:	4770      	bx	lr

0800638c <_ZN8touchgfx8CallbackI28Measurement_AccurateViewBaseRKNS_14AbstractButtonEvvE7executeES4_>:
    virtual void execute(T1 t1)
 800638c:	b430      	push	{r4, r5}
        (pobject->*pmemfun)(t1);
 800638e:	68c2      	ldr	r2, [r0, #12]
 8006390:	6844      	ldr	r4, [r0, #4]
 8006392:	1055      	asrs	r5, r2, #1
    virtual void execute(T1 t1)
 8006394:	4603      	mov	r3, r0
        (pobject->*pmemfun)(t1);
 8006396:	eb04 0062 	add.w	r0, r4, r2, asr #1
 800639a:	07d2      	lsls	r2, r2, #31
 800639c:	bf48      	it	mi
 800639e:	5962      	ldrmi	r2, [r4, r5]
 80063a0:	689b      	ldr	r3, [r3, #8]
    }
 80063a2:	bc30      	pop	{r4, r5}
        (pobject->*pmemfun)(t1);
 80063a4:	bf48      	it	mi
 80063a6:	58d3      	ldrmi	r3, [r2, r3]
 80063a8:	4718      	bx	r3

080063aa <_ZNK8touchgfx8CallbackI28Measurement_AccurateViewBaseRKNS_14AbstractButtonEvvE7isValidEv>:
        return (pobject != 0) && (pmemfun != 0);
 80063aa:	6843      	ldr	r3, [r0, #4]
 80063ac:	b12b      	cbz	r3, 80063ba <_ZNK8touchgfx8CallbackI28Measurement_AccurateViewBaseRKNS_14AbstractButtonEvvE7isValidEv+0x10>
 80063ae:	6883      	ldr	r3, [r0, #8]
 80063b0:	b92b      	cbnz	r3, 80063be <_ZNK8touchgfx8CallbackI28Measurement_AccurateViewBaseRKNS_14AbstractButtonEvvE7isValidEv+0x14>
 80063b2:	68c0      	ldr	r0, [r0, #12]
 80063b4:	f000 0001 	and.w	r0, r0, #1
 80063b8:	4770      	bx	lr
 80063ba:	4618      	mov	r0, r3
 80063bc:	4770      	bx	lr
 80063be:	2001      	movs	r0, #1
    }
 80063c0:	4770      	bx	lr

080063c2 <_ZN8touchgfx8CallbackI28Measurement_AccurateViewBaseRKNS_14AbstractButtonEvvED0Ev>:
struct Callback<dest_type, T1, void, void> : public GenericCallback<T1>
 80063c2:	b510      	push	{r4, lr}
 80063c4:	2110      	movs	r1, #16
 80063c6:	4604      	mov	r4, r0
 80063c8:	f024 f9b7 	bl	802a73a <_ZdlPvj>
 80063cc:	4620      	mov	r0, r4
 80063ce:	bd10      	pop	{r4, pc}

080063d0 <_ZN28Measurement_AccurateViewBaseD1Ev>:
Measurement_AccurateViewBase::~Measurement_AccurateViewBase()
 80063d0:	b510      	push	{r4, lr}
 80063d2:	4b03      	ldr	r3, [pc, #12]	; (80063e0 <_ZN28Measurement_AccurateViewBaseD1Ev+0x10>)
 80063d4:	6003      	str	r3, [r0, #0]
 80063d6:	4604      	mov	r4, r0
    touchgfx::CanvasWidgetRenderer::resetBuffer();
 80063d8:	f00e fbf8 	bl	8014bcc <_ZN8touchgfx20CanvasWidgetRenderer11resetBufferEv>
}
 80063dc:	4620      	mov	r0, r4
 80063de:	bd10      	pop	{r4, pc}
 80063e0:	0802e528 	.word	0x0802e528

080063e4 <_ZN28Measurement_AccurateViewBaseD0Ev>:
Measurement_AccurateViewBase::~Measurement_AccurateViewBase()
 80063e4:	b507      	push	{r0, r1, r2, lr}
 80063e6:	4b07      	ldr	r3, [pc, #28]	; (8006404 <_ZN28Measurement_AccurateViewBaseD0Ev+0x20>)
 80063e8:	6003      	str	r3, [r0, #0]
 80063ea:	9001      	str	r0, [sp, #4]
    touchgfx::CanvasWidgetRenderer::resetBuffer();
 80063ec:	f00e fbee 	bl	8014bcc <_ZN8touchgfx20CanvasWidgetRenderer11resetBufferEv>
}
 80063f0:	9801      	ldr	r0, [sp, #4]
 80063f2:	f44f 518a 	mov.w	r1, #4416	; 0x1140
 80063f6:	f024 f9a0 	bl	802a73a <_ZdlPvj>
 80063fa:	9801      	ldr	r0, [sp, #4]
 80063fc:	b003      	add	sp, #12
 80063fe:	f85d fb04 	ldr.w	pc, [sp], #4
 8006402:	bf00      	nop
 8006404:	0802e528 	.word	0x0802e528

08006408 <_ZN28Measurement_AccurateViewBase21buttonCallbackHandlerERKN8touchgfx14AbstractButtonE>:

void Measurement_AccurateViewBase::buttonCallbackHandler(const touchgfx::AbstractButton& src)
{
 8006408:	b538      	push	{r3, r4, r5, lr}
    if (&src == &buttonWithLabel3)
 800640a:	f500 7310 	add.w	r3, r0, #576	; 0x240
 800640e:	4299      	cmp	r1, r3
{
 8006410:	4604      	mov	r4, r0
 8006412:	460d      	mov	r5, r1
    if (&src == &buttonWithLabel3)
 8006414:	d103      	bne.n	800641e <_ZN28Measurement_AccurateViewBase21buttonCallbackHandlerERKN8touchgfx14AbstractButtonE+0x16>
    virtual ~Measurement_AccurateViewBase();
    virtual void setupScreen();

protected:
    FrontendApplication& application() {
        return *static_cast<FrontendApplication*>(touchgfx::Application::getInstance());
 8006416:	f010 f8db 	bl	80165d0 <_ZN8touchgfx11Application11getInstanceEv>
    {
        //Interaction1
        //When buttonWithLabel3 clicked change screen to Measurement
        //Go to Measurement with screen transition towards West
        application().gotoMeasurementScreenWipeTransitionWest();
 800641a:	f7fe f983 	bl	8004724 <_ZN23FrontendApplicationBase39gotoMeasurementScreenWipeTransitionWestEv>
    }
    if (&src == &buttonWithLabel2)
 800641e:	f504 7322 	add.w	r3, r4, #648	; 0x288
 8006422:	429d      	cmp	r5, r3
 8006424:	d103      	bne.n	800642e <_ZN28Measurement_AccurateViewBase21buttonCallbackHandlerERKN8touchgfx14AbstractButtonE+0x26>
 8006426:	f010 f8d3 	bl	80165d0 <_ZN8touchgfx11Application11getInstanceEv>
    {
        //Interaction2
        //When buttonWithLabel2 clicked change screen to Measurement_Accurate_Display_2
        //Go to Measurement_Accurate_Display_2 with screen transition towards East
        application().gotoMeasurement_Accurate_Display_2ScreenWipeTransitionEast();
 800642a:	f7fe f9eb 	bl	8004804 <_ZN23FrontendApplicationBase58gotoMeasurement_Accurate_Display_2ScreenWipeTransitionEastEv>
    }
    if (&src == &buttonWithLabel1)
 800642e:	f504 7434 	add.w	r4, r4, #720	; 0x2d0
 8006432:	42a5      	cmp	r5, r4
 8006434:	d105      	bne.n	8006442 <_ZN28Measurement_AccurateViewBase21buttonCallbackHandlerERKN8touchgfx14AbstractButtonE+0x3a>
 8006436:	f010 f8cb 	bl	80165d0 <_ZN8touchgfx11Application11getInstanceEv>
        //Interaction3
        //When buttonWithLabel1 clicked change screen to Measurement_Accurate_Display
        //Go to Measurement_Accurate_Display with screen transition towards East
        application().gotoMeasurement_Accurate_DisplayScreenWipeTransitionEast();
    }
}
 800643a:	e8bd 4038 	ldmia.w	sp!, {r3, r4, r5, lr}
        application().gotoMeasurement_Accurate_DisplayScreenWipeTransitionEast();
 800643e:	f7fe b9d1 	b.w	80047e4 <_ZN23FrontendApplicationBase56gotoMeasurement_Accurate_DisplayScreenWipeTransitionEastEv>
}
 8006442:	bd38      	pop	{r3, r4, r5, pc}

08006444 <_ZN28Measurement_AccurateViewBaseC1Ev>:
Measurement_AccurateViewBase::Measurement_AccurateViewBase() :
 8006444:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 8006448:	ed2d 8b06 	vpush	{d8-d10}
 800644c:	4604      	mov	r4, r0
 800644e:	b08d      	sub	sp, #52	; 0x34
    buttonCallback(this, &Measurement_AccurateViewBase::buttonCallbackHandler)
 8006450:	46a3      	mov	fp, r4
 8006452:	2500      	movs	r5, #0
 8006454:	f011 fd3c 	bl	8017ed0 <_ZN8touchgfx6ScreenC1Ev>
 8006458:	4b66      	ldr	r3, [pc, #408]	; (80065f4 <_ZN28Measurement_AccurateViewBaseC1Ev+0x1b0>)
 800645a:	63e5      	str	r5, [r4, #60]	; 0x3c
 800645c:	f84b 3b40 	str.w	r3, [fp], #64
        : Widget(), alpha(255), color(0)
 8006460:	2226      	movs	r2, #38	; 0x26
 8006462:	4629      	mov	r1, r5
 8006464:	4658      	mov	r0, fp
 8006466:	f025 f980 	bl	802b76a <memset>
 800646a:	4658      	mov	r0, fp
 800646c:	f7fc fa8e 	bl	800298c <_ZN8touchgfx6WidgetC1Ev>
 8006470:	f104 0a6c 	add.w	sl, r4, #108	; 0x6c
 8006474:	26ff      	movs	r6, #255	; 0xff
 8006476:	4b60      	ldr	r3, [pc, #384]	; (80065f8 <_ZN28Measurement_AccurateViewBaseC1Ev+0x1b4>)
 8006478:	6423      	str	r3, [r4, #64]	; 0x40
        : Widget(), bitmap(bmp), alpha(255)
 800647a:	2226      	movs	r2, #38	; 0x26
 800647c:	f64f 73ff 	movw	r3, #65535	; 0xffff
 8006480:	4629      	mov	r1, r5
 8006482:	f884 6066 	strb.w	r6, [r4, #102]	; 0x66
 8006486:	4650      	mov	r0, sl
 8006488:	66a5      	str	r5, [r4, #104]	; 0x68
 800648a:	f8ad 3028 	strh.w	r3, [sp, #40]	; 0x28
 800648e:	f025 f96c 	bl	802b76a <memset>
 8006492:	4650      	mov	r0, sl
 8006494:	f7fc fa7a 	bl	800298c <_ZN8touchgfx6WidgetC1Ev>
 8006498:	4b58      	ldr	r3, [pc, #352]	; (80065fc <_ZN28Measurement_AccurateViewBaseC1Ev+0x1b8>)
 800649a:	66e3      	str	r3, [r4, #108]	; 0x6c
 800649c:	f8bd 3028 	ldrh.w	r3, [sp, #40]	; 0x28
 80064a0:	f8a4 3092 	strh.w	r3, [r4, #146]	; 0x92
        Image::setBitmap(bmp);
 80064a4:	a90a      	add	r1, sp, #40	; 0x28
 80064a6:	4650      	mov	r0, sl
 80064a8:	f104 0998 	add.w	r9, r4, #152	; 0x98
        : Widget(), bitmap(bmp), alpha(255)
 80064ac:	f884 6094 	strb.w	r6, [r4, #148]	; 0x94
        Image::setBitmap(bmp);
 80064b0:	f00d fb8f 	bl	8013bd2 <_ZN8touchgfx5Image9setBitmapERKNS_6BitmapE>
        : TextArea()
 80064b4:	4648      	mov	r0, r9
 80064b6:	f7fc facd 	bl	8002a54 <_ZN8touchgfx8TextAreaC1Ev>
 80064ba:	f104 07e4 	add.w	r7, r4, #228	; 0xe4
        : TextAreaWithWildcardBase(), wc1(0)
 80064be:	4b50      	ldr	r3, [pc, #320]	; (8006600 <_ZN28Measurement_AccurateViewBaseC1Ev+0x1bc>)
 80064c0:	f8c4 3098 	str.w	r3, [r4, #152]	; 0x98
 80064c4:	f8c4 50e0 	str.w	r5, [r4, #224]	; 0xe0
 80064c8:	4638      	mov	r0, r7
 80064ca:	f00c f875 	bl	80125b8 <_ZN8touchgfx4LineC1Ev>
 80064ce:	f504 73aa 	add.w	r3, r4, #340	; 0x154
        : AbstractPainterRGB565(), AbstractPainterColor(color)
 80064d2:	4618      	mov	r0, r3
 80064d4:	9303      	str	r3, [sp, #12]
 80064d6:	f7fc f85d 	bl	8002594 <_ZN8touchgfx21AbstractPainterRGB565C1Ev>
 80064da:	4b4a      	ldr	r3, [pc, #296]	; (8006604 <_ZN28Measurement_AccurateViewBaseC1Ev+0x1c0>)
 80064dc:	f8c4 3154 	str.w	r3, [r4, #340]	; 0x154
 80064e0:	f504 78b4 	add.w	r8, r4, #360	; 0x168
 80064e4:	3324      	adds	r3, #36	; 0x24
 80064e6:	f8c4 315c 	str.w	r3, [r4, #348]	; 0x15c
 80064ea:	f8c4 5160 	str.w	r5, [r4, #352]	; 0x160
 80064ee:	4640      	mov	r0, r8
 80064f0:	f7fc fab0 	bl	8002a54 <_ZN8touchgfx8TextAreaC1Ev>
 80064f4:	f504 73d8 	add.w	r3, r4, #432	; 0x1b0
 80064f8:	4618      	mov	r0, r3
 80064fa:	ee08 3a10 	vmov	s16, r3
 80064fe:	f7fc faa9 	bl	8002a54 <_ZN8touchgfx8TextAreaC1Ev>
 8006502:	f504 73fc 	add.w	r3, r4, #504	; 0x1f8
 8006506:	4618      	mov	r0, r3
 8006508:	ee08 3a90 	vmov	s17, r3
 800650c:	f7fc faa2 	bl	8002a54 <_ZN8touchgfx8TextAreaC1Ev>
 8006510:	f504 7310 	add.w	r3, r4, #576	; 0x240
 8006514:	4618      	mov	r0, r3
 8006516:	ee09 3a10 	vmov	s18, r3
 800651a:	f00d fc91 	bl	8013e40 <_ZN8touchgfx15ButtonWithLabelC1Ev>
 800651e:	f504 7322 	add.w	r3, r4, #648	; 0x288
 8006522:	4618      	mov	r0, r3
 8006524:	ee09 3a90 	vmov	s19, r3
 8006528:	f00d fc8a 	bl	8013e40 <_ZN8touchgfx15ButtonWithLabelC1Ev>
 800652c:	f504 7334 	add.w	r3, r4, #720	; 0x2d0
 8006530:	4618      	mov	r0, r3
 8006532:	ee0a 3a10 	vmov	s20, r3
 8006536:	f00d fc83 	bl	8013e40 <_ZN8touchgfx15ButtonWithLabelC1Ev>
        : pobject(pObject), pmemfun(pmemfun_1)
 800653a:	4a33      	ldr	r2, [pc, #204]	; (8006608 <_ZN28Measurement_AccurateViewBaseC1Ev+0x1c4>)
 800653c:	f504 5380 	add.w	r3, r4, #4096	; 0x1000
 8006540:	e9c3 244c 	strd	r2, r4, [r3, #304]	; 0x130
 8006544:	4a31      	ldr	r2, [pc, #196]	; (800660c <_ZN28Measurement_AccurateViewBaseC1Ev+0x1c8>)
    touchgfx::CanvasWidgetRenderer::setupBuffer(canvasBuffer, CANVAS_BUFFER_SIZE);
 8006546:	f44f 6161 	mov.w	r1, #3600	; 0xe10
 800654a:	e9c3 254e 	strd	r2, r5, [r3, #312]	; 0x138
 800654e:	f504 7048 	add.w	r0, r4, #800	; 0x320
 8006552:	f00e fb31 	bl	8014bb8 <_ZN8touchgfx20CanvasWidgetRenderer11setupBufferEPhj>
    __background.setPosition(0, 0, 240, 320);
 8006556:	f44f 73a0 	mov.w	r3, #320	; 0x140
 800655a:	462a      	mov	r2, r5
 800655c:	4658      	mov	r0, fp
 800655e:	9300      	str	r3, [sp, #0]
 8006560:	4629      	mov	r1, r5
 8006562:	23f0      	movs	r3, #240	; 0xf0
 8006564:	f7fc f9ed 	bl	8002942 <_ZN8touchgfx8Drawable11setPositionEssss>
 8006568:	1d26      	adds	r6, r4, #4
        color = newColor;
 800656a:	f04f 437f 	mov.w	r3, #4278190080	; 0xff000000
 800656e:	66a3      	str	r3, [r4, #104]	; 0x68
 8006570:	4659      	mov	r1, fp
 8006572:	4630      	mov	r0, r6
 8006574:	f009 ff54 	bl	8010420 <_ZN8touchgfx9Container3addERNS_8DrawableE>
    image1.setXY(0, 0);
 8006578:	462a      	mov	r2, r5
 800657a:	4650      	mov	r0, sl
 800657c:	4629      	mov	r1, r5
 800657e:	f7fc f9d3 	bl	8002928 <_ZN8touchgfx8Drawable5setXYEss>
 8006582:	2308      	movs	r3, #8
    image1.setBitmap(touchgfx::Bitmap(BITMAP_BACKGROUND_2_RESIZED_4_ID));
 8006584:	4650      	mov	r0, sl
 8006586:	a90a      	add	r1, sp, #40	; 0x28
 8006588:	f8ad 3028 	strh.w	r3, [sp, #40]	; 0x28
 800658c:	f00d fb21 	bl	8013bd2 <_ZN8touchgfx5Image9setBitmapERKNS_6BitmapE>
 8006590:	4651      	mov	r1, sl
 8006592:	4630      	mov	r0, r6
 8006594:	f009 ff44 	bl	8010420 <_ZN8touchgfx9Container3addERNS_8DrawableE>
    textArea3_1.setXY(86, 308);
 8006598:	f44f 729a 	mov.w	r2, #308	; 0x134
 800659c:	2156      	movs	r1, #86	; 0x56
 800659e:	4648      	mov	r0, r9
 80065a0:	f7fc f9c2 	bl	8002928 <_ZN8touchgfx8Drawable5setXYEss>
 80065a4:	f8d4 3098 	ldr.w	r3, [r4, #152]	; 0x98
        linespace = space;
 80065a8:	f8a4 50cc 	strh.w	r5, [r4, #204]	; 0xcc
        boundingArea = calculateBoundingArea();
 80065ac:	f10d 0a10 	add.w	sl, sp, #16
        color = newColor;
 80065b0:	f04f 3bff 	mov.w	fp, #4294967295
        boundingArea = calculateBoundingArea();
 80065b4:	4650      	mov	r0, sl
 80065b6:	f8d3 3084 	ldr.w	r3, [r3, #132]	; 0x84
        color = newColor;
 80065ba:	f8c4 b0c8 	str.w	fp, [r4, #200]	; 0xc8
        boundingArea = calculateBoundingArea();
 80065be:	4649      	mov	r1, r9
 80065c0:	4798      	blx	r3
 80065c2:	e89a 0007 	ldmia.w	sl, {r0, r1, r2}
 80065c6:	f104 03d4 	add.w	r3, r4, #212	; 0xd4
 80065ca:	e883 0007 	stmia.w	r3, {r0, r1, r2}
        assert(typedTexts != 0 && "TypedText database has not been initialized.");
 80065ce:	4b10      	ldr	r3, [pc, #64]	; (8006610 <_ZN28Measurement_AccurateViewBaseC1Ev+0x1cc>)
 80065d0:	681b      	ldr	r3, [r3, #0]
    Unicode::snprintf(textArea3_1Buffer, TEXTAREA3_1_SIZE, "%s", touchgfx::TypedText(T___SINGLEUSE_CUW4).getText());
 80065d2:	f504 7a46 	add.w	sl, r4, #792	; 0x318
 80065d6:	b92b      	cbnz	r3, 80065e4 <_ZN28Measurement_AccurateViewBaseC1Ev+0x1a0>
 80065d8:	4b0e      	ldr	r3, [pc, #56]	; (8006614 <_ZN28Measurement_AccurateViewBaseC1Ev+0x1d0>)
 80065da:	4a0f      	ldr	r2, [pc, #60]	; (8006618 <_ZN28Measurement_AccurateViewBaseC1Ev+0x1d4>)
 80065dc:	2160      	movs	r1, #96	; 0x60
        assert(hasValidId() && "typedTextId larger than numberOfTypedTexts.");
 80065de:	480f      	ldr	r0, [pc, #60]	; (800661c <_ZN28Measurement_AccurateViewBaseC1Ev+0x1d8>)
 80065e0:	f024 febe 	bl	802b360 <__assert_func>
        return typedTextId < numberOfTypedTexts;
 80065e4:	4b0e      	ldr	r3, [pc, #56]	; (8006620 <_ZN28Measurement_AccurateViewBaseC1Ev+0x1dc>)
        assert(hasValidId() && "typedTextId larger than numberOfTypedTexts.");
 80065e6:	881b      	ldrh	r3, [r3, #0]
 80065e8:	2b24      	cmp	r3, #36	; 0x24
 80065ea:	d81d      	bhi.n	8006628 <_ZN28Measurement_AccurateViewBaseC1Ev+0x1e4>
 80065ec:	4b0d      	ldr	r3, [pc, #52]	; (8006624 <_ZN28Measurement_AccurateViewBaseC1Ev+0x1e0>)
 80065ee:	4a0a      	ldr	r2, [pc, #40]	; (8006618 <_ZN28Measurement_AccurateViewBaseC1Ev+0x1d4>)
 80065f0:	2161      	movs	r1, #97	; 0x61
 80065f2:	e7f4      	b.n	80065de <_ZN28Measurement_AccurateViewBaseC1Ev+0x19a>
 80065f4:	0802e528 	.word	0x0802e528
 80065f8:	0802f444 	.word	0x0802f444
 80065fc:	0802f690 	.word	0x0802f690
 8006600:	0802cf90 	.word	0x0802cf90
 8006604:	0802f178 	.word	0x0802f178
 8006608:	0802e510 	.word	0x0802e510
 800660c:	08006409 	.word	0x08006409
 8006610:	20013874 	.word	0x20013874
 8006614:	0802cd40 	.word	0x0802cd40
 8006618:	0802ce45 	.word	0x0802ce45
 800661c:	0802cdbd 	.word	0x0802cdbd
 8006620:	20013878 	.word	0x20013878
 8006624:	0802ce04 	.word	0x0802ce04
        return texts->getText(typedTextId);
 8006628:	4b93      	ldr	r3, [pc, #588]	; (8006878 <_ZN28Measurement_AccurateViewBaseC1Ev+0x434>)
 800662a:	2124      	movs	r1, #36	; 0x24
 800662c:	6818      	ldr	r0, [r3, #0]
 800662e:	f002 f88b 	bl	8008748 <_ZNK8touchgfx5Texts7getTextEt>
 8006632:	4a92      	ldr	r2, [pc, #584]	; (800687c <_ZN28Measurement_AccurateViewBaseC1Ev+0x438>)
 8006634:	4603      	mov	r3, r0
 8006636:	2104      	movs	r1, #4
 8006638:	4650      	mov	r0, sl
 800663a:	f013 f977 	bl	801992c <_ZN8touchgfx7Unicode8snprintfEPttPKcz>
    textArea3_1.resizeToCurrentText();
 800663e:	4648      	mov	r0, r9
        wc1 = value;
 8006640:	f8c4 a0e0 	str.w	sl, [r4, #224]	; 0xe0
 8006644:	f00c fcf4 	bl	8013030 <_ZN8touchgfx8TextArea19resizeToCurrentTextEv>
        : typedTextId(id)
 8006648:	4b8d      	ldr	r3, [pc, #564]	; (8006880 <_ZN28Measurement_AccurateViewBaseC1Ev+0x43c>)
 800664a:	930a      	str	r3, [sp, #40]	; 0x28
    textArea3_1.setTypedText(touchgfx::TypedText(T___SINGLEUSE_SQC7));
 800664c:	a90a      	add	r1, sp, #40	; 0x28
 800664e:	2325      	movs	r3, #37	; 0x25
 8006650:	4648      	mov	r0, r9
 8006652:	f8ad 302c 	strh.w	r3, [sp, #44]	; 0x2c
 8006656:	f00c fd0b 	bl	8013070 <_ZN8touchgfx8TextArea12setTypedTextERKNS_9TypedTextE>
 800665a:	4649      	mov	r1, r9
 800665c:	4630      	mov	r0, r6
 800665e:	f009 fedf 	bl	8010420 <_ZN8touchgfx9Container3addERNS_8DrawableE>
    line1.setPosition(0, 50, 240, 10);
 8006662:	230a      	movs	r3, #10
 8006664:	9300      	str	r3, [sp, #0]
 8006666:	2232      	movs	r2, #50	; 0x32
 8006668:	23f0      	movs	r3, #240	; 0xf0
 800666a:	4629      	mov	r1, r5
 800666c:	4638      	mov	r0, r7
 800666e:	f7fc f968 	bl	8002942 <_ZN8touchgfx8Drawable11setPositionEssss>
 8006672:	9b03      	ldr	r3, [sp, #12]
 8006674:	f8c4 310c 	str.w	r3, [r4, #268]	; 0x10c
        setStart(CWRUtil::toQ5<T>(x), CWRUtil::toQ5<T>(y));
 8006678:	22a0      	movs	r2, #160	; 0xa0
 800667a:	4611      	mov	r1, r2
 800667c:	4638      	mov	r0, r7
 800667e:	f8c4 b160 	str.w	fp, [r4, #352]	; 0x160
        color565 = LCD16bpp::getNativeColor(painterColor);
 8006682:	f8a4 b164 	strh.w	fp, [r4, #356]	; 0x164
 8006686:	f00c f8ad 	bl	80127e4 <_ZN8touchgfx4Line8setStartENS_7CWRUtil2Q5ES2_>
        setEnd(CWRUtil::toQ5<T>(x), CWRUtil::toQ5<T>(y));
 800668a:	22a0      	movs	r2, #160	; 0xa0
 800668c:	f44f 51eb 	mov.w	r1, #7520	; 0x1d60
 8006690:	4638      	mov	r0, r7
 8006692:	f00c f8b2 	bl	80127fa <_ZN8touchgfx4Line6setEndENS_7CWRUtil2Q5ES2_>
        if (lineWidthQ5 == widthQ5)
 8006696:	f8d4 3120 	ldr.w	r3, [r4, #288]	; 0x120
 800669a:	2b20      	cmp	r3, #32
 800669c:	d005      	beq.n	80066aa <_ZN28Measurement_AccurateViewBaseC1Ev+0x266>
        lineWidthQ5 = widthQ5;
 800669e:	2320      	movs	r3, #32
 80066a0:	f8c4 3120 	str.w	r3, [r4, #288]	; 0x120
        updateCachedShape();
 80066a4:	4638      	mov	r0, r7
 80066a6:	f00b ffa7 	bl	80125f8 <_ZN8touchgfx4Line17updateCachedShapeEv>
    line1.setLineEndingStyle(touchgfx::Line::ROUND_CAP_ENDING);
 80066aa:	4638      	mov	r0, r7
 80066ac:	2101      	movs	r1, #1
 80066ae:	f00c f8af 	bl	8012810 <_ZN8touchgfx4Line18setLineEndingStyleENS0_17LINE_ENDING_STYLEE>
 80066b2:	4639      	mov	r1, r7
 80066b4:	4630      	mov	r0, r6
 80066b6:	ad04      	add	r5, sp, #16
        color = newColor;
 80066b8:	f04f 37ff 	mov.w	r7, #4294967295
 80066bc:	f009 feb0 	bl	8010420 <_ZN8touchgfx9Container3addERNS_8DrawableE>
        linespace = space;
 80066c0:	f04f 0a00 	mov.w	sl, #0
    textArea2.setXY(69, 35);
 80066c4:	2223      	movs	r2, #35	; 0x23
 80066c6:	4640      	mov	r0, r8
 80066c8:	2145      	movs	r1, #69	; 0x45
 80066ca:	f7fc f92d 	bl	8002928 <_ZN8touchgfx8Drawable5setXYEss>
        boundingArea = calculateBoundingArea();
 80066ce:	4641      	mov	r1, r8
 80066d0:	4628      	mov	r0, r5
        color = newColor;
 80066d2:	f8c4 7198 	str.w	r7, [r4, #408]	; 0x198
        linespace = space;
 80066d6:	f8a4 a19c 	strh.w	sl, [r4, #412]	; 0x19c
        boundingArea = calculateBoundingArea();
 80066da:	f00c fa2f 	bl	8012b3c <_ZNK8touchgfx8TextArea21calculateBoundingAreaEv>
 80066de:	e895 0007 	ldmia.w	r5, {r0, r1, r2}
 80066e2:	f108 033c 	add.w	r3, r8, #60	; 0x3c
 80066e6:	e883 0007 	stmia.w	r3, {r0, r1, r2}
 80066ea:	f8df 9194 	ldr.w	r9, [pc, #404]	; 8006880 <_ZN28Measurement_AccurateViewBaseC1Ev+0x43c>
 80066ee:	f8cd 9028 	str.w	r9, [sp, #40]	; 0x28
 80066f2:	2344      	movs	r3, #68	; 0x44
    textArea2.setTypedText(touchgfx::TypedText(T___SINGLEUSE_UWMX));
 80066f4:	a90a      	add	r1, sp, #40	; 0x28
 80066f6:	4640      	mov	r0, r8
 80066f8:	f8ad 302c 	strh.w	r3, [sp, #44]	; 0x2c
 80066fc:	f00c fcb8 	bl	8013070 <_ZN8touchgfx8TextArea12setTypedTextERKNS_9TypedTextE>
 8006700:	4641      	mov	r1, r8
 8006702:	4630      	mov	r0, r6
 8006704:	f009 fe8c 	bl	8010420 <_ZN8touchgfx9Container3addERNS_8DrawableE>
    textArea1.setXY(54, 12);
 8006708:	ee18 0a10 	vmov	r0, s16
 800670c:	220c      	movs	r2, #12
 800670e:	2136      	movs	r1, #54	; 0x36
 8006710:	f7fc f90a 	bl	8002928 <_ZN8touchgfx8Drawable5setXYEss>
 8006714:	ee18 1a10 	vmov	r1, s16
 8006718:	4628      	mov	r0, r5
        color = newColor;
 800671a:	f8c4 71e0 	str.w	r7, [r4, #480]	; 0x1e0
        linespace = space;
 800671e:	f8a4 a1e4 	strh.w	sl, [r4, #484]	; 0x1e4
        boundingArea = calculateBoundingArea();
 8006722:	f00c fa0b 	bl	8012b3c <_ZNK8touchgfx8TextArea21calculateBoundingAreaEv>
 8006726:	e895 0007 	ldmia.w	r5, {r0, r1, r2}
 800672a:	ee18 3a10 	vmov	r3, s16
 800672e:	333c      	adds	r3, #60	; 0x3c
 8006730:	e883 0007 	stmia.w	r3, {r0, r1, r2}
 8006734:	2343      	movs	r3, #67	; 0x43
    textArea1.setTypedText(touchgfx::TypedText(T___SINGLEUSE_1X41));
 8006736:	ee18 0a10 	vmov	r0, s16
 800673a:	a90a      	add	r1, sp, #40	; 0x28
 800673c:	f8ad 302c 	strh.w	r3, [sp, #44]	; 0x2c
 8006740:	f8cd 9028 	str.w	r9, [sp, #40]	; 0x28
 8006744:	f00c fc94 	bl	8013070 <_ZN8touchgfx8TextArea12setTypedTextERKNS_9TypedTextE>
 8006748:	ee18 1a10 	vmov	r1, s16
 800674c:	4630      	mov	r0, r6
 800674e:	f009 fe67 	bl	8010420 <_ZN8touchgfx9Container3addERNS_8DrawableE>
    textArea3.setXY(33, 60);
 8006752:	ee18 0a90 	vmov	r0, s17
 8006756:	223c      	movs	r2, #60	; 0x3c
 8006758:	2121      	movs	r1, #33	; 0x21
 800675a:	f7fc f8e5 	bl	8002928 <_ZN8touchgfx8Drawable5setXYEss>
 800675e:	ee18 1a90 	vmov	r1, s17
 8006762:	4628      	mov	r0, r5
        color = newColor;
 8006764:	f8c4 7228 	str.w	r7, [r4, #552]	; 0x228
        linespace = space;
 8006768:	f8a4 a22c 	strh.w	sl, [r4, #556]	; 0x22c
        boundingArea = calculateBoundingArea();
 800676c:	f00c f9e6 	bl	8012b3c <_ZNK8touchgfx8TextArea21calculateBoundingAreaEv>
 8006770:	e895 0007 	ldmia.w	r5, {r0, r1, r2}
 8006774:	ee18 3a90 	vmov	r3, s17
 8006778:	333c      	adds	r3, #60	; 0x3c
 800677a:	e883 0007 	stmia.w	r3, {r0, r1, r2}
 800677e:	2333      	movs	r3, #51	; 0x33
    textArea3.setTypedText(touchgfx::TypedText(T___SINGLEUSE_D7H9));
 8006780:	ee18 0a90 	vmov	r0, s17
 8006784:	a90a      	add	r1, sp, #40	; 0x28
 8006786:	f8ad 302c 	strh.w	r3, [sp, #44]	; 0x2c
 800678a:	f8cd 9028 	str.w	r9, [sp, #40]	; 0x28
 800678e:	f00c fc6f 	bl	8013070 <_ZN8touchgfx8TextArea12setTypedTextERKNS_9TypedTextE>
 8006792:	ee18 1a90 	vmov	r1, s17
 8006796:	4630      	mov	r0, r6
 8006798:	f009 fe42 	bl	8010420 <_ZN8touchgfx9Container3addERNS_8DrawableE>
    buttonWithLabel3.setXY(33, 240);
 800679c:	ee19 0a10 	vmov	r0, s18
 80067a0:	22f0      	movs	r2, #240	; 0xf0
 80067a2:	2121      	movs	r1, #33	; 0x21
 80067a4:	f7fc f8c0 	bl	8002928 <_ZN8touchgfx8Drawable5setXYEss>
 80067a8:	f04f 0903 	mov.w	r9, #3
    buttonWithLabel3.setBitmaps(touchgfx::Bitmap(BITMAP_ALTERNATE_THEME_IMAGES_WIDGETS_BUTTON_REGULAR_HEIGHT_50_SMALL_ROUND_PRESSED_ID), touchgfx::Bitmap(BITMAP_ALTERNATE_THEME_IMAGES_WIDGETS_BUTTON_REGULAR_HEIGHT_50_SMALL_ROUND_NORMAL_ID));
 80067ac:	aa0a      	add	r2, sp, #40	; 0x28
 80067ae:	f04f 0802 	mov.w	r8, #2
 80067b2:	a909      	add	r1, sp, #36	; 0x24
 80067b4:	ee19 0a10 	vmov	r0, s18
 80067b8:	f8ad 9024 	strh.w	r9, [sp, #36]	; 0x24
 80067bc:	f8ad 8028 	strh.w	r8, [sp, #40]	; 0x28
    buttonWithLabel3.setAction(buttonCallback);
 80067c0:	f504 5589 	add.w	r5, r4, #4384	; 0x1120
    buttonWithLabel3.setBitmaps(touchgfx::Bitmap(BITMAP_ALTERNATE_THEME_IMAGES_WIDGETS_BUTTON_REGULAR_HEIGHT_50_SMALL_ROUND_PRESSED_ID), touchgfx::Bitmap(BITMAP_ALTERNATE_THEME_IMAGES_WIDGETS_BUTTON_REGULAR_HEIGHT_50_SMALL_ROUND_NORMAL_ID));
 80067c4:	f00d f80f 	bl	80137e6 <_ZN8touchgfx6Button10setBitmapsERKNS_6BitmapES3_>
class TypedText
 80067c8:	2342      	movs	r3, #66	; 0x42
 80067ca:	f8a4 3278 	strh.w	r3, [r4, #632]	; 0x278
    buttonWithLabel3.setAction(buttonCallback);
 80067ce:	3510      	adds	r5, #16
        updateTextPosition();
 80067d0:	ee19 0a10 	vmov	r0, s18
 80067d4:	f7fc f8ec 	bl	80029b0 <_ZN8touchgfx15ButtonWithLabel18updateTextPositionEv>
 80067d8:	ee19 1a10 	vmov	r1, s18
 80067dc:	4630      	mov	r0, r6
        colorPressed = col;
 80067de:	e9c4 779f 	strd	r7, r7, [r4, #636]	; 0x27c
 80067e2:	f8c4 5268 	str.w	r5, [r4, #616]	; 0x268
 80067e6:	f009 fe1b 	bl	8010420 <_ZN8touchgfx9Container3addERNS_8DrawableE>
    buttonWithLabel2.setXY(33, 170);
 80067ea:	ee19 0a90 	vmov	r0, s19
 80067ee:	22aa      	movs	r2, #170	; 0xaa
 80067f0:	2121      	movs	r1, #33	; 0x21
 80067f2:	f7fc f899 	bl	8002928 <_ZN8touchgfx8Drawable5setXYEss>
    buttonWithLabel2.setBitmaps(touchgfx::Bitmap(BITMAP_ALTERNATE_THEME_IMAGES_WIDGETS_BUTTON_REGULAR_HEIGHT_50_SMALL_ROUND_PRESSED_ID), touchgfx::Bitmap(BITMAP_ALTERNATE_THEME_IMAGES_WIDGETS_BUTTON_REGULAR_HEIGHT_50_SMALL_ROUND_NORMAL_ID));
 80067f6:	aa0a      	add	r2, sp, #40	; 0x28
 80067f8:	a909      	add	r1, sp, #36	; 0x24
 80067fa:	ee19 0a90 	vmov	r0, s19
 80067fe:	f8ad 9024 	strh.w	r9, [sp, #36]	; 0x24
 8006802:	f8ad 8028 	strh.w	r8, [sp, #40]	; 0x28
 8006806:	f00c ffee 	bl	80137e6 <_ZN8touchgfx6Button10setBitmapsERKNS_6BitmapES3_>
 800680a:	2341      	movs	r3, #65	; 0x41
 800680c:	f8a4 32c0 	strh.w	r3, [r4, #704]	; 0x2c0
        updateTextPosition();
 8006810:	ee19 0a90 	vmov	r0, s19
 8006814:	f7fc f8cc 	bl	80029b0 <_ZN8touchgfx15ButtonWithLabel18updateTextPositionEv>
 8006818:	ee19 1a90 	vmov	r1, s19
 800681c:	4630      	mov	r0, r6
        colorPressed = col;
 800681e:	e9c4 77b1 	strd	r7, r7, [r4, #708]	; 0x2c4
 8006822:	f8c4 52b0 	str.w	r5, [r4, #688]	; 0x2b0
 8006826:	f009 fdfb 	bl	8010420 <_ZN8touchgfx9Container3addERNS_8DrawableE>
    buttonWithLabel1.setXY(33, 100);
 800682a:	ee1a 0a10 	vmov	r0, s20
 800682e:	2264      	movs	r2, #100	; 0x64
 8006830:	2121      	movs	r1, #33	; 0x21
 8006832:	f7fc f879 	bl	8002928 <_ZN8touchgfx8Drawable5setXYEss>
    buttonWithLabel1.setBitmaps(touchgfx::Bitmap(BITMAP_ALTERNATE_THEME_IMAGES_WIDGETS_BUTTON_REGULAR_HEIGHT_50_SMALL_ROUND_PRESSED_ID), touchgfx::Bitmap(BITMAP_ALTERNATE_THEME_IMAGES_WIDGETS_BUTTON_REGULAR_HEIGHT_50_SMALL_ROUND_NORMAL_ID));
 8006836:	aa0a      	add	r2, sp, #40	; 0x28
 8006838:	a909      	add	r1, sp, #36	; 0x24
 800683a:	ee1a 0a10 	vmov	r0, s20
 800683e:	f8ad 9024 	strh.w	r9, [sp, #36]	; 0x24
 8006842:	f8ad 8028 	strh.w	r8, [sp, #40]	; 0x28
 8006846:	f00c ffce 	bl	80137e6 <_ZN8touchgfx6Button10setBitmapsERKNS_6BitmapES3_>
 800684a:	2340      	movs	r3, #64	; 0x40
        updateTextPosition();
 800684c:	ee1a 0a10 	vmov	r0, s20
 8006850:	f8a4 3308 	strh.w	r3, [r4, #776]	; 0x308
 8006854:	f7fc f8ac 	bl	80029b0 <_ZN8touchgfx15ButtonWithLabel18updateTextPositionEv>
 8006858:	4630      	mov	r0, r6
        colorPressed = col;
 800685a:	e9c4 77c3 	strd	r7, r7, [r4, #780]	; 0x30c
 800685e:	ee1a 1a10 	vmov	r1, s20
 8006862:	f8c4 52f8 	str.w	r5, [r4, #760]	; 0x2f8
 8006866:	f009 fddb 	bl	8010420 <_ZN8touchgfx9Container3addERNS_8DrawableE>
}
 800686a:	4620      	mov	r0, r4
 800686c:	b00d      	add	sp, #52	; 0x34
 800686e:	ecbd 8b06 	vpop	{d8-d10}
 8006872:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
 8006876:	bf00      	nop
 8006878:	20013880 	.word	0x20013880
 800687c:	0802ce7d 	.word	0x0802ce7d
 8006880:	0802cef0 	.word	0x0802cef0

08006884 <_ZN36Measurement_Accurate_DisplayViewBase11setupScreenEv>:
}

void Measurement_Accurate_DisplayViewBase::setupScreen()
{

}
 8006884:	4770      	bx	lr

08006886 <_ZN8touchgfx8CallbackI36Measurement_Accurate_DisplayViewBaseRKNS_14AbstractButtonEvvED1Ev>:
struct Callback<dest_type, T1, void, void> : public GenericCallback<T1>
 8006886:	4770      	bx	lr

08006888 <_ZN8touchgfx8CallbackI36Measurement_Accurate_DisplayViewBaseRKNS_14AbstractButtonEvvE7executeES4_>:
    virtual void execute(T1 t1)
 8006888:	b430      	push	{r4, r5}
        (pobject->*pmemfun)(t1);
 800688a:	68c2      	ldr	r2, [r0, #12]
 800688c:	6844      	ldr	r4, [r0, #4]
 800688e:	1055      	asrs	r5, r2, #1
    virtual void execute(T1 t1)
 8006890:	4603      	mov	r3, r0
        (pobject->*pmemfun)(t1);
 8006892:	eb04 0062 	add.w	r0, r4, r2, asr #1
 8006896:	07d2      	lsls	r2, r2, #31
 8006898:	bf48      	it	mi
 800689a:	5962      	ldrmi	r2, [r4, r5]
 800689c:	689b      	ldr	r3, [r3, #8]
    }
 800689e:	bc30      	pop	{r4, r5}
        (pobject->*pmemfun)(t1);
 80068a0:	bf48      	it	mi
 80068a2:	58d3      	ldrmi	r3, [r2, r3]
 80068a4:	4718      	bx	r3

080068a6 <_ZNK8touchgfx8CallbackI36Measurement_Accurate_DisplayViewBaseRKNS_14AbstractButtonEvvE7isValidEv>:
        return (pobject != 0) && (pmemfun != 0);
 80068a6:	6843      	ldr	r3, [r0, #4]
 80068a8:	b12b      	cbz	r3, 80068b6 <_ZNK8touchgfx8CallbackI36Measurement_Accurate_DisplayViewBaseRKNS_14AbstractButtonEvvE7isValidEv+0x10>
 80068aa:	6883      	ldr	r3, [r0, #8]
 80068ac:	b92b      	cbnz	r3, 80068ba <_ZNK8touchgfx8CallbackI36Measurement_Accurate_DisplayViewBaseRKNS_14AbstractButtonEvvE7isValidEv+0x14>
 80068ae:	68c0      	ldr	r0, [r0, #12]
 80068b0:	f000 0001 	and.w	r0, r0, #1
 80068b4:	4770      	bx	lr
 80068b6:	4618      	mov	r0, r3
 80068b8:	4770      	bx	lr
 80068ba:	2001      	movs	r0, #1
    }
 80068bc:	4770      	bx	lr

080068be <_ZN8touchgfx8CallbackI36Measurement_Accurate_DisplayViewBaseRKNS_14AbstractButtonEvvED0Ev>:
struct Callback<dest_type, T1, void, void> : public GenericCallback<T1>
 80068be:	b510      	push	{r4, lr}
 80068c0:	2110      	movs	r1, #16
 80068c2:	4604      	mov	r4, r0
 80068c4:	f023 ff39 	bl	802a73a <_ZdlPvj>
 80068c8:	4620      	mov	r0, r4
 80068ca:	bd10      	pop	{r4, pc}

080068cc <_ZN36Measurement_Accurate_DisplayViewBaseD1Ev>:
Measurement_Accurate_DisplayViewBase::~Measurement_Accurate_DisplayViewBase()
 80068cc:	b510      	push	{r4, lr}
 80068ce:	4b03      	ldr	r3, [pc, #12]	; (80068dc <_ZN36Measurement_Accurate_DisplayViewBaseD1Ev+0x10>)
 80068d0:	6003      	str	r3, [r0, #0]
 80068d2:	4604      	mov	r4, r0
    touchgfx::CanvasWidgetRenderer::resetBuffer();
 80068d4:	f00e f97a 	bl	8014bcc <_ZN8touchgfx20CanvasWidgetRenderer11resetBufferEv>
}
 80068d8:	4620      	mov	r0, r4
 80068da:	bd10      	pop	{r4, pc}
 80068dc:	0802e574 	.word	0x0802e574

080068e0 <_ZN36Measurement_Accurate_DisplayViewBaseD0Ev>:
Measurement_Accurate_DisplayViewBase::~Measurement_Accurate_DisplayViewBase()
 80068e0:	b507      	push	{r0, r1, r2, lr}
 80068e2:	4b07      	ldr	r3, [pc, #28]	; (8006900 <_ZN36Measurement_Accurate_DisplayViewBaseD0Ev+0x20>)
 80068e4:	6003      	str	r3, [r0, #0]
 80068e6:	9001      	str	r0, [sp, #4]
    touchgfx::CanvasWidgetRenderer::resetBuffer();
 80068e8:	f00e f970 	bl	8014bcc <_ZN8touchgfx20CanvasWidgetRenderer11resetBufferEv>
}
 80068ec:	9801      	ldr	r0, [sp, #4]
 80068ee:	f241 015c 	movw	r1, #4188	; 0x105c
 80068f2:	f023 ff22 	bl	802a73a <_ZdlPvj>
 80068f6:	9801      	ldr	r0, [sp, #4]
 80068f8:	b003      	add	sp, #12
 80068fa:	f85d fb04 	ldr.w	pc, [sp], #4
 80068fe:	bf00      	nop
 8006900:	0802e574 	.word	0x0802e574

08006904 <_ZN36Measurement_Accurate_DisplayViewBase21buttonCallbackHandlerERKN8touchgfx14AbstractButtonE>:

void Measurement_Accurate_DisplayViewBase::buttonCallbackHandler(const touchgfx::AbstractButton& src)
{
    if (&src == &buttonWithLabel3)
 8006904:	3098      	adds	r0, #152	; 0x98
 8006906:	4288      	cmp	r0, r1
{
 8006908:	b508      	push	{r3, lr}
    if (&src == &buttonWithLabel3)
 800690a:	d105      	bne.n	8006918 <_ZN36Measurement_Accurate_DisplayViewBase21buttonCallbackHandlerERKN8touchgfx14AbstractButtonE+0x14>
    virtual ~Measurement_Accurate_DisplayViewBase();
    virtual void setupScreen();

protected:
    FrontendApplication& application() {
        return *static_cast<FrontendApplication*>(touchgfx::Application::getInstance());
 800690c:	f00f fe60 	bl	80165d0 <_ZN8touchgfx11Application11getInstanceEv>
        //Interaction1
        //When buttonWithLabel3 clicked change screen to Measurement_Accurate
        //Go to Measurement_Accurate with screen transition towards West
        application().gotoMeasurement_AccurateScreenWipeTransitionWest();
    }
}
 8006910:	e8bd 4008 	ldmia.w	sp!, {r3, lr}
        application().gotoMeasurement_AccurateScreenWipeTransitionWest();
 8006914:	f7fd bf56 	b.w	80047c4 <_ZN23FrontendApplicationBase48gotoMeasurement_AccurateScreenWipeTransitionWestEv>
}
 8006918:	bd08      	pop	{r3, pc}
	...

0800691c <_ZN36Measurement_Accurate_DisplayViewBaseC1Ev>:
Measurement_Accurate_DisplayViewBase::Measurement_Accurate_DisplayViewBase() :
 800691c:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 8006920:	ed2d 8b02 	vpush	{d8}
 8006924:	4604      	mov	r4, r0
 8006926:	b08d      	sub	sp, #52	; 0x34
    buttonCallback(this, &Measurement_Accurate_DisplayViewBase::buttonCallbackHandler)
 8006928:	46a1      	mov	r9, r4
 800692a:	2500      	movs	r5, #0
 800692c:	f011 fad0 	bl	8017ed0 <_ZN8touchgfx6ScreenC1Ev>
 8006930:	4ba5      	ldr	r3, [pc, #660]	; (8006bc8 <_ZN36Measurement_Accurate_DisplayViewBaseC1Ev+0x2ac>)
 8006932:	63e5      	str	r5, [r4, #60]	; 0x3c
 8006934:	f849 3b40 	str.w	r3, [r9], #64
        : Widget(), alpha(255), color(0)
 8006938:	2226      	movs	r2, #38	; 0x26
 800693a:	4629      	mov	r1, r5
 800693c:	4648      	mov	r0, r9
 800693e:	f024 ff14 	bl	802b76a <memset>
 8006942:	4648      	mov	r0, r9
 8006944:	f7fc f822 	bl	800298c <_ZN8touchgfx6WidgetC1Ev>
 8006948:	f104 086c 	add.w	r8, r4, #108	; 0x6c
 800694c:	26ff      	movs	r6, #255	; 0xff
 800694e:	4b9f      	ldr	r3, [pc, #636]	; (8006bcc <_ZN36Measurement_Accurate_DisplayViewBaseC1Ev+0x2b0>)
 8006950:	6423      	str	r3, [r4, #64]	; 0x40
        : Widget(), bitmap(bmp), alpha(255)
 8006952:	2226      	movs	r2, #38	; 0x26
 8006954:	f64f 73ff 	movw	r3, #65535	; 0xffff
 8006958:	4629      	mov	r1, r5
 800695a:	f884 6066 	strb.w	r6, [r4, #102]	; 0x66
 800695e:	4640      	mov	r0, r8
 8006960:	66a5      	str	r5, [r4, #104]	; 0x68
 8006962:	f8ad 3028 	strh.w	r3, [sp, #40]	; 0x28
 8006966:	f024 ff00 	bl	802b76a <memset>
 800696a:	4640      	mov	r0, r8
 800696c:	f7fc f80e 	bl	800298c <_ZN8touchgfx6WidgetC1Ev>
 8006970:	4b97      	ldr	r3, [pc, #604]	; (8006bd0 <_ZN36Measurement_Accurate_DisplayViewBaseC1Ev+0x2b4>)
 8006972:	66e3      	str	r3, [r4, #108]	; 0x6c
 8006974:	f8bd 3028 	ldrh.w	r3, [sp, #40]	; 0x28
 8006978:	f8a4 3092 	strh.w	r3, [r4, #146]	; 0x92
        Image::setBitmap(bmp);
 800697c:	a90a      	add	r1, sp, #40	; 0x28
 800697e:	f104 0b98 	add.w	fp, r4, #152	; 0x98
 8006982:	4640      	mov	r0, r8
        : Widget(), bitmap(bmp), alpha(255)
 8006984:	f884 6094 	strb.w	r6, [r4, #148]	; 0x94
        Image::setBitmap(bmp);
 8006988:	f00d f923 	bl	8013bd2 <_ZN8touchgfx5Image9setBitmapERKNS_6BitmapE>
 800698c:	4658      	mov	r0, fp
 800698e:	f00d fa57 	bl	8013e40 <_ZN8touchgfx15ButtonWithLabelC1Ev>
 8006992:	f104 03e0 	add.w	r3, r4, #224	; 0xe0
 8006996:	f504 7794 	add.w	r7, r4, #296	; 0x128
 800699a:	4618      	mov	r0, r3
 800699c:	ee08 3a90 	vmov	s17, r3
 80069a0:	f7fc f858 	bl	8002a54 <_ZN8touchgfx8TextAreaC1Ev>
 80069a4:	4638      	mov	r0, r7
 80069a6:	f00b fe07 	bl	80125b8 <_ZN8touchgfx4LineC1Ev>
 80069aa:	f504 73cc 	add.w	r3, r4, #408	; 0x198
        : AbstractPainterRGB565(), AbstractPainterColor(color)
 80069ae:	4618      	mov	r0, r3
 80069b0:	9303      	str	r3, [sp, #12]
 80069b2:	f7fb fdef 	bl	8002594 <_ZN8touchgfx21AbstractPainterRGB565C1Ev>
 80069b6:	4b87      	ldr	r3, [pc, #540]	; (8006bd4 <_ZN36Measurement_Accurate_DisplayViewBaseC1Ev+0x2b8>)
 80069b8:	f8c4 3198 	str.w	r3, [r4, #408]	; 0x198
 80069bc:	3324      	adds	r3, #36	; 0x24
 80069be:	f8c4 31a0 	str.w	r3, [r4, #416]	; 0x1a0
 80069c2:	f504 73d6 	add.w	r3, r4, #428	; 0x1ac
 80069c6:	4618      	mov	r0, r3
 80069c8:	f8c4 51a4 	str.w	r5, [r4, #420]	; 0x1a4
 80069cc:	f504 7afa 	add.w	sl, r4, #500	; 0x1f4
 80069d0:	ee08 3a10 	vmov	s16, r3
 80069d4:	f7fc f83e 	bl	8002a54 <_ZN8touchgfx8TextAreaC1Ev>
 80069d8:	4650      	mov	r0, sl
 80069da:	f7fc f83b 	bl	8002a54 <_ZN8touchgfx8TextAreaC1Ev>
        : pobject(pObject), pmemfun(pmemfun_1)
 80069de:	4a7e      	ldr	r2, [pc, #504]	; (8006bd8 <_ZN36Measurement_Accurate_DisplayViewBaseC1Ev+0x2bc>)
 80069e0:	f504 5380 	add.w	r3, r4, #4096	; 0x1000
 80069e4:	e9c3 2413 	strd	r2, r4, [r3, #76]	; 0x4c
 80069e8:	4a7c      	ldr	r2, [pc, #496]	; (8006bdc <_ZN36Measurement_Accurate_DisplayViewBaseC1Ev+0x2c0>)
    touchgfx::CanvasWidgetRenderer::setupBuffer(canvasBuffer, CANVAS_BUFFER_SIZE);
 80069ea:	f44f 6161 	mov.w	r1, #3600	; 0xe10
 80069ee:	e9c3 2515 	strd	r2, r5, [r3, #84]	; 0x54
 80069f2:	f504 700f 	add.w	r0, r4, #572	; 0x23c
 80069f6:	f00e f8df 	bl	8014bb8 <_ZN8touchgfx20CanvasWidgetRenderer11setupBufferEPhj>
    __background.setPosition(0, 0, 240, 320);
 80069fa:	f44f 73a0 	mov.w	r3, #320	; 0x140
 80069fe:	462a      	mov	r2, r5
 8006a00:	4648      	mov	r0, r9
 8006a02:	9300      	str	r3, [sp, #0]
 8006a04:	4629      	mov	r1, r5
 8006a06:	23f0      	movs	r3, #240	; 0xf0
 8006a08:	f7fb ff9b 	bl	8002942 <_ZN8touchgfx8Drawable11setPositionEssss>
 8006a0c:	1d26      	adds	r6, r4, #4
        color = newColor;
 8006a0e:	f04f 437f 	mov.w	r3, #4278190080	; 0xff000000
 8006a12:	66a3      	str	r3, [r4, #104]	; 0x68
 8006a14:	4649      	mov	r1, r9
 8006a16:	4630      	mov	r0, r6
 8006a18:	f009 fd02 	bl	8010420 <_ZN8touchgfx9Container3addERNS_8DrawableE>
    image1.setXY(0, 0);
 8006a1c:	462a      	mov	r2, r5
 8006a1e:	4640      	mov	r0, r8
 8006a20:	4629      	mov	r1, r5
 8006a22:	f7fb ff81 	bl	8002928 <_ZN8touchgfx8Drawable5setXYEss>
 8006a26:	2308      	movs	r3, #8
    image1.setBitmap(touchgfx::Bitmap(BITMAP_BACKGROUND_2_RESIZED_4_ID));
 8006a28:	4640      	mov	r0, r8
 8006a2a:	a90a      	add	r1, sp, #40	; 0x28
 8006a2c:	f8ad 3028 	strh.w	r3, [sp, #40]	; 0x28
 8006a30:	f00d f8cf 	bl	8013bd2 <_ZN8touchgfx5Image9setBitmapERKNS_6BitmapE>
 8006a34:	4641      	mov	r1, r8
 8006a36:	4630      	mov	r0, r6
 8006a38:	f009 fcf2 	bl	8010420 <_ZN8touchgfx9Container3addERNS_8DrawableE>
    buttonWithLabel3.setXY(33, 257);
 8006a3c:	4658      	mov	r0, fp
 8006a3e:	f240 1201 	movw	r2, #257	; 0x101
 8006a42:	2121      	movs	r1, #33	; 0x21
 8006a44:	f7fb ff70 	bl	8002928 <_ZN8touchgfx8Drawable5setXYEss>
 8006a48:	2303      	movs	r3, #3
    buttonWithLabel3.setBitmaps(touchgfx::Bitmap(BITMAP_ALTERNATE_THEME_IMAGES_WIDGETS_BUTTON_REGULAR_HEIGHT_50_SMALL_ROUND_PRESSED_ID), touchgfx::Bitmap(BITMAP_ALTERNATE_THEME_IMAGES_WIDGETS_BUTTON_REGULAR_HEIGHT_50_SMALL_ROUND_NORMAL_ID));
 8006a4a:	aa0a      	add	r2, sp, #40	; 0x28
 8006a4c:	a909      	add	r1, sp, #36	; 0x24
 8006a4e:	4658      	mov	r0, fp
 8006a50:	f8ad 3024 	strh.w	r3, [sp, #36]	; 0x24
 8006a54:	2302      	movs	r3, #2
 8006a56:	f8ad 3028 	strh.w	r3, [sp, #40]	; 0x28
 8006a5a:	f00c fec4 	bl	80137e6 <_ZN8touchgfx6Button10setBitmapsERKNS_6BitmapES3_>
 8006a5e:	232f      	movs	r3, #47	; 0x2f
        updateTextPosition();
 8006a60:	4658      	mov	r0, fp
 8006a62:	f8a4 30d0 	strh.w	r3, [r4, #208]	; 0xd0
 8006a66:	f7fb ffa3 	bl	80029b0 <_ZN8touchgfx15ButtonWithLabel18updateTextPositionEv>
    buttonWithLabel3.setAction(buttonCallback);
 8006a6a:	f504 5382 	add.w	r3, r4, #4160	; 0x1040
 8006a6e:	330c      	adds	r3, #12
        color = col;
 8006a70:	f04f 39ff 	mov.w	r9, #4294967295
 8006a74:	f8c4 30c0 	str.w	r3, [r4, #192]	; 0xc0
 8006a78:	4659      	mov	r1, fp
 8006a7a:	4630      	mov	r0, r6
        colorPressed = col;
 8006a7c:	e9c4 9935 	strd	r9, r9, [r4, #212]	; 0xd4
 8006a80:	f009 fcce 	bl	8010420 <_ZN8touchgfx9Container3addERNS_8DrawableE>
 8006a84:	f10d 0810 	add.w	r8, sp, #16
    textArea3.setXY(23, 60);
 8006a88:	223c      	movs	r2, #60	; 0x3c
 8006a8a:	ee18 0a90 	vmov	r0, s17
 8006a8e:	2117      	movs	r1, #23
 8006a90:	f7fb ff4a 	bl	8002928 <_ZN8touchgfx8Drawable5setXYEss>
 8006a94:	ee18 1a90 	vmov	r1, s17
 8006a98:	4640      	mov	r0, r8
        color = newColor;
 8006a9a:	f8c4 9110 	str.w	r9, [r4, #272]	; 0x110
        linespace = space;
 8006a9e:	f8a4 5114 	strh.w	r5, [r4, #276]	; 0x114
        boundingArea = calculateBoundingArea();
 8006aa2:	f00c f84b 	bl	8012b3c <_ZNK8touchgfx8TextArea21calculateBoundingAreaEv>
 8006aa6:	e898 0007 	ldmia.w	r8, {r0, r1, r2}
 8006aaa:	f504 738e 	add.w	r3, r4, #284	; 0x11c
 8006aae:	e883 0007 	stmia.w	r3, {r0, r1, r2}
        : typedTextId(id)
 8006ab2:	f8df b12c 	ldr.w	fp, [pc, #300]	; 8006be0 <_ZN36Measurement_Accurate_DisplayViewBaseC1Ev+0x2c4>
 8006ab6:	f8cd b028 	str.w	fp, [sp, #40]	; 0x28
 8006aba:	2330      	movs	r3, #48	; 0x30
    textArea3.setTypedText(touchgfx::TypedText(T___SINGLEUSE_ZR32));
 8006abc:	ee18 0a90 	vmov	r0, s17
 8006ac0:	a90a      	add	r1, sp, #40	; 0x28
 8006ac2:	f8ad 302c 	strh.w	r3, [sp, #44]	; 0x2c
 8006ac6:	f00c fad3 	bl	8013070 <_ZN8touchgfx8TextArea12setTypedTextERKNS_9TypedTextE>
 8006aca:	ee18 1a90 	vmov	r1, s17
 8006ace:	4630      	mov	r0, r6
 8006ad0:	f009 fca6 	bl	8010420 <_ZN8touchgfx9Container3addERNS_8DrawableE>
    line1.setPosition(0, 50, 240, 10);
 8006ad4:	230a      	movs	r3, #10
 8006ad6:	9300      	str	r3, [sp, #0]
 8006ad8:	2232      	movs	r2, #50	; 0x32
 8006ada:	23f0      	movs	r3, #240	; 0xf0
 8006adc:	4629      	mov	r1, r5
 8006ade:	4638      	mov	r0, r7
 8006ae0:	f7fb ff2f 	bl	8002942 <_ZN8touchgfx8Drawable11setPositionEssss>
 8006ae4:	9b03      	ldr	r3, [sp, #12]
 8006ae6:	f8c4 3150 	str.w	r3, [r4, #336]	; 0x150
        setStart(CWRUtil::toQ5<T>(x), CWRUtil::toQ5<T>(y));
 8006aea:	22a0      	movs	r2, #160	; 0xa0
 8006aec:	4611      	mov	r1, r2
 8006aee:	4638      	mov	r0, r7
 8006af0:	f8c4 91a4 	str.w	r9, [r4, #420]	; 0x1a4
        color565 = LCD16bpp::getNativeColor(painterColor);
 8006af4:	f8a4 91a8 	strh.w	r9, [r4, #424]	; 0x1a8
 8006af8:	f00b fe74 	bl	80127e4 <_ZN8touchgfx4Line8setStartENS_7CWRUtil2Q5ES2_>
        setEnd(CWRUtil::toQ5<T>(x), CWRUtil::toQ5<T>(y));
 8006afc:	22a0      	movs	r2, #160	; 0xa0
 8006afe:	f44f 51eb 	mov.w	r1, #7520	; 0x1d60
 8006b02:	4638      	mov	r0, r7
 8006b04:	f00b fe79 	bl	80127fa <_ZN8touchgfx4Line6setEndENS_7CWRUtil2Q5ES2_>
        if (lineWidthQ5 == widthQ5)
 8006b08:	f8d4 3164 	ldr.w	r3, [r4, #356]	; 0x164
 8006b0c:	2b20      	cmp	r3, #32
 8006b0e:	d005      	beq.n	8006b1c <_ZN36Measurement_Accurate_DisplayViewBaseC1Ev+0x200>
        lineWidthQ5 = widthQ5;
 8006b10:	2320      	movs	r3, #32
 8006b12:	f8c4 3164 	str.w	r3, [r4, #356]	; 0x164
        updateCachedShape();
 8006b16:	4638      	mov	r0, r7
 8006b18:	f00b fd6e 	bl	80125f8 <_ZN8touchgfx4Line17updateCachedShapeEv>
    line1.setLineEndingStyle(touchgfx::Line::ROUND_CAP_ENDING);
 8006b1c:	4638      	mov	r0, r7
 8006b1e:	2101      	movs	r1, #1
 8006b20:	f00b fe76 	bl	8012810 <_ZN8touchgfx4Line18setLineEndingStyleENS0_17LINE_ENDING_STYLEE>
 8006b24:	4639      	mov	r1, r7
 8006b26:	4630      	mov	r0, r6
 8006b28:	f009 fc7a 	bl	8010420 <_ZN8touchgfx9Container3addERNS_8DrawableE>
        color = newColor;
 8006b2c:	f04f 37ff 	mov.w	r7, #4294967295
    textArea2.setXY(69, 35);
 8006b30:	ee18 0a10 	vmov	r0, s16
 8006b34:	2223      	movs	r2, #35	; 0x23
        linespace = space;
 8006b36:	2500      	movs	r5, #0
 8006b38:	2145      	movs	r1, #69	; 0x45
 8006b3a:	f7fb fef5 	bl	8002928 <_ZN8touchgfx8Drawable5setXYEss>
        boundingArea = calculateBoundingArea();
 8006b3e:	ee18 1a10 	vmov	r1, s16
 8006b42:	4640      	mov	r0, r8
        color = newColor;
 8006b44:	f8c4 71dc 	str.w	r7, [r4, #476]	; 0x1dc
        linespace = space;
 8006b48:	f8a4 51e0 	strh.w	r5, [r4, #480]	; 0x1e0
        boundingArea = calculateBoundingArea();
 8006b4c:	f00b fff6 	bl	8012b3c <_ZNK8touchgfx8TextArea21calculateBoundingAreaEv>
 8006b50:	e898 0007 	ldmia.w	r8, {r0, r1, r2}
 8006b54:	ee18 3a10 	vmov	r3, s16
 8006b58:	333c      	adds	r3, #60	; 0x3c
 8006b5a:	e883 0007 	stmia.w	r3, {r0, r1, r2}
 8006b5e:	2331      	movs	r3, #49	; 0x31
    textArea2.setTypedText(touchgfx::TypedText(T___SINGLEUSE_K7UP));
 8006b60:	ee18 0a10 	vmov	r0, s16
 8006b64:	a90a      	add	r1, sp, #40	; 0x28
 8006b66:	f8ad 302c 	strh.w	r3, [sp, #44]	; 0x2c
 8006b6a:	f8cd b028 	str.w	fp, [sp, #40]	; 0x28
 8006b6e:	f00c fa7f 	bl	8013070 <_ZN8touchgfx8TextArea12setTypedTextERKNS_9TypedTextE>
 8006b72:	ee18 1a10 	vmov	r1, s16
 8006b76:	4630      	mov	r0, r6
 8006b78:	f009 fc52 	bl	8010420 <_ZN8touchgfx9Container3addERNS_8DrawableE>
    textArea1.setXY(54, 12);
 8006b7c:	220c      	movs	r2, #12
 8006b7e:	4650      	mov	r0, sl
 8006b80:	2136      	movs	r1, #54	; 0x36
 8006b82:	f7fb fed1 	bl	8002928 <_ZN8touchgfx8Drawable5setXYEss>
 8006b86:	4651      	mov	r1, sl
 8006b88:	4640      	mov	r0, r8
        color = newColor;
 8006b8a:	f8c4 7224 	str.w	r7, [r4, #548]	; 0x224
        linespace = space;
 8006b8e:	f8a4 5228 	strh.w	r5, [r4, #552]	; 0x228
        boundingArea = calculateBoundingArea();
 8006b92:	f00b ffd3 	bl	8012b3c <_ZNK8touchgfx8TextArea21calculateBoundingAreaEv>
 8006b96:	e898 0007 	ldmia.w	r8, {r0, r1, r2}
 8006b9a:	f10a 033c 	add.w	r3, sl, #60	; 0x3c
 8006b9e:	e883 0007 	stmia.w	r3, {r0, r1, r2}
 8006ba2:	2332      	movs	r3, #50	; 0x32
    textArea1.setTypedText(touchgfx::TypedText(T___SINGLEUSE_0GAY));
 8006ba4:	a90a      	add	r1, sp, #40	; 0x28
 8006ba6:	4650      	mov	r0, sl
 8006ba8:	f8ad 302c 	strh.w	r3, [sp, #44]	; 0x2c
 8006bac:	f8cd b028 	str.w	fp, [sp, #40]	; 0x28
 8006bb0:	f00c fa5e 	bl	8013070 <_ZN8touchgfx8TextArea12setTypedTextERKNS_9TypedTextE>
 8006bb4:	4630      	mov	r0, r6
 8006bb6:	4651      	mov	r1, sl
 8006bb8:	f009 fc32 	bl	8010420 <_ZN8touchgfx9Container3addERNS_8DrawableE>
}
 8006bbc:	4620      	mov	r0, r4
 8006bbe:	b00d      	add	sp, #52	; 0x34
 8006bc0:	ecbd 8b02 	vpop	{d8}
 8006bc4:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
 8006bc8:	0802e574 	.word	0x0802e574
 8006bcc:	0802f444 	.word	0x0802f444
 8006bd0:	0802f690 	.word	0x0802f690
 8006bd4:	0802f178 	.word	0x0802f178
 8006bd8:	0802e55c 	.word	0x0802e55c
 8006bdc:	08006905 	.word	0x08006905
 8006be0:	0802cef0 	.word	0x0802cef0

08006be4 <_ZN38Measurement_Accurate_Display_2ViewBase11setupScreenEv>:
}

void Measurement_Accurate_Display_2ViewBase::setupScreen()
{

}
 8006be4:	4770      	bx	lr

08006be6 <_ZN8touchgfx8CallbackI38Measurement_Accurate_Display_2ViewBaseRKNS_14AbstractButtonEvvED1Ev>:
struct Callback<dest_type, T1, void, void> : public GenericCallback<T1>
 8006be6:	4770      	bx	lr

08006be8 <_ZN8touchgfx8CallbackI38Measurement_Accurate_Display_2ViewBaseRKNS_14AbstractButtonEvvE7executeES4_>:
    virtual void execute(T1 t1)
 8006be8:	b430      	push	{r4, r5}
        (pobject->*pmemfun)(t1);
 8006bea:	68c2      	ldr	r2, [r0, #12]
 8006bec:	6844      	ldr	r4, [r0, #4]
 8006bee:	1055      	asrs	r5, r2, #1
    virtual void execute(T1 t1)
 8006bf0:	4603      	mov	r3, r0
        (pobject->*pmemfun)(t1);
 8006bf2:	eb04 0062 	add.w	r0, r4, r2, asr #1
 8006bf6:	07d2      	lsls	r2, r2, #31
 8006bf8:	bf48      	it	mi
 8006bfa:	5962      	ldrmi	r2, [r4, r5]
 8006bfc:	689b      	ldr	r3, [r3, #8]
    }
 8006bfe:	bc30      	pop	{r4, r5}
        (pobject->*pmemfun)(t1);
 8006c00:	bf48      	it	mi
 8006c02:	58d3      	ldrmi	r3, [r2, r3]
 8006c04:	4718      	bx	r3

08006c06 <_ZNK8touchgfx8CallbackI38Measurement_Accurate_Display_2ViewBaseRKNS_14AbstractButtonEvvE7isValidEv>:
        return (pobject != 0) && (pmemfun != 0);
 8006c06:	6843      	ldr	r3, [r0, #4]
 8006c08:	b12b      	cbz	r3, 8006c16 <_ZNK8touchgfx8CallbackI38Measurement_Accurate_Display_2ViewBaseRKNS_14AbstractButtonEvvE7isValidEv+0x10>
 8006c0a:	6883      	ldr	r3, [r0, #8]
 8006c0c:	b92b      	cbnz	r3, 8006c1a <_ZNK8touchgfx8CallbackI38Measurement_Accurate_Display_2ViewBaseRKNS_14AbstractButtonEvvE7isValidEv+0x14>
 8006c0e:	68c0      	ldr	r0, [r0, #12]
 8006c10:	f000 0001 	and.w	r0, r0, #1
 8006c14:	4770      	bx	lr
 8006c16:	4618      	mov	r0, r3
 8006c18:	4770      	bx	lr
 8006c1a:	2001      	movs	r0, #1
    }
 8006c1c:	4770      	bx	lr

08006c1e <_ZN8touchgfx8CallbackI38Measurement_Accurate_Display_2ViewBaseRKNS_14AbstractButtonEvvED0Ev>:
struct Callback<dest_type, T1, void, void> : public GenericCallback<T1>
 8006c1e:	b510      	push	{r4, lr}
 8006c20:	2110      	movs	r1, #16
 8006c22:	4604      	mov	r4, r0
 8006c24:	f023 fd89 	bl	802a73a <_ZdlPvj>
 8006c28:	4620      	mov	r0, r4
 8006c2a:	bd10      	pop	{r4, pc}

08006c2c <_ZN38Measurement_Accurate_Display_2ViewBaseD1Ev>:
Measurement_Accurate_Display_2ViewBase::~Measurement_Accurate_Display_2ViewBase()
 8006c2c:	b510      	push	{r4, lr}
 8006c2e:	4b03      	ldr	r3, [pc, #12]	; (8006c3c <_ZN38Measurement_Accurate_Display_2ViewBaseD1Ev+0x10>)
 8006c30:	6003      	str	r3, [r0, #0]
 8006c32:	4604      	mov	r4, r0
    touchgfx::CanvasWidgetRenderer::resetBuffer();
 8006c34:	f00d ffca 	bl	8014bcc <_ZN8touchgfx20CanvasWidgetRenderer11resetBufferEv>
}
 8006c38:	4620      	mov	r0, r4
 8006c3a:	bd10      	pop	{r4, pc}
 8006c3c:	0802e5c0 	.word	0x0802e5c0

08006c40 <_ZN38Measurement_Accurate_Display_2ViewBaseD0Ev>:
Measurement_Accurate_Display_2ViewBase::~Measurement_Accurate_Display_2ViewBase()
 8006c40:	b507      	push	{r0, r1, r2, lr}
 8006c42:	4b07      	ldr	r3, [pc, #28]	; (8006c60 <_ZN38Measurement_Accurate_Display_2ViewBaseD0Ev+0x20>)
 8006c44:	6003      	str	r3, [r0, #0]
 8006c46:	9001      	str	r0, [sp, #4]
    touchgfx::CanvasWidgetRenderer::resetBuffer();
 8006c48:	f00d ffc0 	bl	8014bcc <_ZN8touchgfx20CanvasWidgetRenderer11resetBufferEv>
}
 8006c4c:	9801      	ldr	r0, [sp, #4]
 8006c4e:	f241 015c 	movw	r1, #4188	; 0x105c
 8006c52:	f023 fd72 	bl	802a73a <_ZdlPvj>
 8006c56:	9801      	ldr	r0, [sp, #4]
 8006c58:	b003      	add	sp, #12
 8006c5a:	f85d fb04 	ldr.w	pc, [sp], #4
 8006c5e:	bf00      	nop
 8006c60:	0802e5c0 	.word	0x0802e5c0

08006c64 <_ZN38Measurement_Accurate_Display_2ViewBase21buttonCallbackHandlerERKN8touchgfx14AbstractButtonE>:

void Measurement_Accurate_Display_2ViewBase::buttonCallbackHandler(const touchgfx::AbstractButton& src)
{
    if (&src == &buttonWithLabel3)
 8006c64:	3098      	adds	r0, #152	; 0x98
 8006c66:	4288      	cmp	r0, r1
{
 8006c68:	b508      	push	{r3, lr}
    if (&src == &buttonWithLabel3)
 8006c6a:	d105      	bne.n	8006c78 <_ZN38Measurement_Accurate_Display_2ViewBase21buttonCallbackHandlerERKN8touchgfx14AbstractButtonE+0x14>
    virtual ~Measurement_Accurate_Display_2ViewBase();
    virtual void setupScreen();

protected:
    FrontendApplication& application() {
        return *static_cast<FrontendApplication*>(touchgfx::Application::getInstance());
 8006c6c:	f00f fcb0 	bl	80165d0 <_ZN8touchgfx11Application11getInstanceEv>
        //Interaction1
        //When buttonWithLabel3 clicked change screen to Measurement_Accurate
        //Go to Measurement_Accurate with screen transition towards West
        application().gotoMeasurement_AccurateScreenWipeTransitionWest();
    }
}
 8006c70:	e8bd 4008 	ldmia.w	sp!, {r3, lr}
        application().gotoMeasurement_AccurateScreenWipeTransitionWest();
 8006c74:	f7fd bda6 	b.w	80047c4 <_ZN23FrontendApplicationBase48gotoMeasurement_AccurateScreenWipeTransitionWestEv>
}
 8006c78:	bd08      	pop	{r3, pc}
	...

08006c7c <_ZN38Measurement_Accurate_Display_2ViewBaseC1Ev>:
Measurement_Accurate_Display_2ViewBase::Measurement_Accurate_Display_2ViewBase() :
 8006c7c:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 8006c80:	ed2d 8b02 	vpush	{d8}
 8006c84:	4604      	mov	r4, r0
 8006c86:	b08d      	sub	sp, #52	; 0x34
    buttonCallback(this, &Measurement_Accurate_Display_2ViewBase::buttonCallbackHandler)
 8006c88:	46a1      	mov	r9, r4
 8006c8a:	2500      	movs	r5, #0
 8006c8c:	f011 f920 	bl	8017ed0 <_ZN8touchgfx6ScreenC1Ev>
 8006c90:	4ba5      	ldr	r3, [pc, #660]	; (8006f28 <_ZN38Measurement_Accurate_Display_2ViewBaseC1Ev+0x2ac>)
 8006c92:	63e5      	str	r5, [r4, #60]	; 0x3c
 8006c94:	f849 3b40 	str.w	r3, [r9], #64
        : Widget(), alpha(255), color(0)
 8006c98:	2226      	movs	r2, #38	; 0x26
 8006c9a:	4629      	mov	r1, r5
 8006c9c:	4648      	mov	r0, r9
 8006c9e:	f024 fd64 	bl	802b76a <memset>
 8006ca2:	4648      	mov	r0, r9
 8006ca4:	f7fb fe72 	bl	800298c <_ZN8touchgfx6WidgetC1Ev>
 8006ca8:	f104 086c 	add.w	r8, r4, #108	; 0x6c
 8006cac:	26ff      	movs	r6, #255	; 0xff
 8006cae:	4b9f      	ldr	r3, [pc, #636]	; (8006f2c <_ZN38Measurement_Accurate_Display_2ViewBaseC1Ev+0x2b0>)
 8006cb0:	6423      	str	r3, [r4, #64]	; 0x40
        : Widget(), bitmap(bmp), alpha(255)
 8006cb2:	2226      	movs	r2, #38	; 0x26
 8006cb4:	f64f 73ff 	movw	r3, #65535	; 0xffff
 8006cb8:	4629      	mov	r1, r5
 8006cba:	f884 6066 	strb.w	r6, [r4, #102]	; 0x66
 8006cbe:	4640      	mov	r0, r8
 8006cc0:	66a5      	str	r5, [r4, #104]	; 0x68
 8006cc2:	f8ad 3028 	strh.w	r3, [sp, #40]	; 0x28
 8006cc6:	f024 fd50 	bl	802b76a <memset>
 8006cca:	4640      	mov	r0, r8
 8006ccc:	f7fb fe5e 	bl	800298c <_ZN8touchgfx6WidgetC1Ev>
 8006cd0:	4b97      	ldr	r3, [pc, #604]	; (8006f30 <_ZN38Measurement_Accurate_Display_2ViewBaseC1Ev+0x2b4>)
 8006cd2:	66e3      	str	r3, [r4, #108]	; 0x6c
 8006cd4:	f8bd 3028 	ldrh.w	r3, [sp, #40]	; 0x28
 8006cd8:	f8a4 3092 	strh.w	r3, [r4, #146]	; 0x92
        Image::setBitmap(bmp);
 8006cdc:	a90a      	add	r1, sp, #40	; 0x28
 8006cde:	f104 0b98 	add.w	fp, r4, #152	; 0x98
 8006ce2:	4640      	mov	r0, r8
        : Widget(), bitmap(bmp), alpha(255)
 8006ce4:	f884 6094 	strb.w	r6, [r4, #148]	; 0x94
        Image::setBitmap(bmp);
 8006ce8:	f00c ff73 	bl	8013bd2 <_ZN8touchgfx5Image9setBitmapERKNS_6BitmapE>
 8006cec:	4658      	mov	r0, fp
 8006cee:	f00d f8a7 	bl	8013e40 <_ZN8touchgfx15ButtonWithLabelC1Ev>
 8006cf2:	f104 03e0 	add.w	r3, r4, #224	; 0xe0
 8006cf6:	f504 7794 	add.w	r7, r4, #296	; 0x128
 8006cfa:	4618      	mov	r0, r3
 8006cfc:	ee08 3a90 	vmov	s17, r3
 8006d00:	f7fb fea8 	bl	8002a54 <_ZN8touchgfx8TextAreaC1Ev>
 8006d04:	4638      	mov	r0, r7
 8006d06:	f00b fc57 	bl	80125b8 <_ZN8touchgfx4LineC1Ev>
 8006d0a:	f504 73cc 	add.w	r3, r4, #408	; 0x198
        : AbstractPainterRGB565(), AbstractPainterColor(color)
 8006d0e:	4618      	mov	r0, r3
 8006d10:	9303      	str	r3, [sp, #12]
 8006d12:	f7fb fc3f 	bl	8002594 <_ZN8touchgfx21AbstractPainterRGB565C1Ev>
 8006d16:	4b87      	ldr	r3, [pc, #540]	; (8006f34 <_ZN38Measurement_Accurate_Display_2ViewBaseC1Ev+0x2b8>)
 8006d18:	f8c4 3198 	str.w	r3, [r4, #408]	; 0x198
 8006d1c:	3324      	adds	r3, #36	; 0x24
 8006d1e:	f8c4 31a0 	str.w	r3, [r4, #416]	; 0x1a0
 8006d22:	f504 73d6 	add.w	r3, r4, #428	; 0x1ac
 8006d26:	4618      	mov	r0, r3
 8006d28:	f8c4 51a4 	str.w	r5, [r4, #420]	; 0x1a4
 8006d2c:	f504 7afa 	add.w	sl, r4, #500	; 0x1f4
 8006d30:	ee08 3a10 	vmov	s16, r3
 8006d34:	f7fb fe8e 	bl	8002a54 <_ZN8touchgfx8TextAreaC1Ev>
 8006d38:	4650      	mov	r0, sl
 8006d3a:	f7fb fe8b 	bl	8002a54 <_ZN8touchgfx8TextAreaC1Ev>
        : pobject(pObject), pmemfun(pmemfun_1)
 8006d3e:	4a7e      	ldr	r2, [pc, #504]	; (8006f38 <_ZN38Measurement_Accurate_Display_2ViewBaseC1Ev+0x2bc>)
 8006d40:	f504 5380 	add.w	r3, r4, #4096	; 0x1000
 8006d44:	e9c3 2413 	strd	r2, r4, [r3, #76]	; 0x4c
 8006d48:	4a7c      	ldr	r2, [pc, #496]	; (8006f3c <_ZN38Measurement_Accurate_Display_2ViewBaseC1Ev+0x2c0>)
    touchgfx::CanvasWidgetRenderer::setupBuffer(canvasBuffer, CANVAS_BUFFER_SIZE);
 8006d4a:	f44f 6161 	mov.w	r1, #3600	; 0xe10
 8006d4e:	e9c3 2515 	strd	r2, r5, [r3, #84]	; 0x54
 8006d52:	f504 700f 	add.w	r0, r4, #572	; 0x23c
 8006d56:	f00d ff2f 	bl	8014bb8 <_ZN8touchgfx20CanvasWidgetRenderer11setupBufferEPhj>
    __background.setPosition(0, 0, 240, 320);
 8006d5a:	f44f 73a0 	mov.w	r3, #320	; 0x140
 8006d5e:	462a      	mov	r2, r5
 8006d60:	4648      	mov	r0, r9
 8006d62:	9300      	str	r3, [sp, #0]
 8006d64:	4629      	mov	r1, r5
 8006d66:	23f0      	movs	r3, #240	; 0xf0
 8006d68:	f7fb fdeb 	bl	8002942 <_ZN8touchgfx8Drawable11setPositionEssss>
 8006d6c:	1d26      	adds	r6, r4, #4
        color = newColor;
 8006d6e:	f04f 437f 	mov.w	r3, #4278190080	; 0xff000000
 8006d72:	66a3      	str	r3, [r4, #104]	; 0x68
 8006d74:	4649      	mov	r1, r9
 8006d76:	4630      	mov	r0, r6
 8006d78:	f009 fb52 	bl	8010420 <_ZN8touchgfx9Container3addERNS_8DrawableE>
    image1.setXY(0, 0);
 8006d7c:	462a      	mov	r2, r5
 8006d7e:	4640      	mov	r0, r8
 8006d80:	4629      	mov	r1, r5
 8006d82:	f7fb fdd1 	bl	8002928 <_ZN8touchgfx8Drawable5setXYEss>
 8006d86:	2308      	movs	r3, #8
    image1.setBitmap(touchgfx::Bitmap(BITMAP_BACKGROUND_2_RESIZED_4_ID));
 8006d88:	4640      	mov	r0, r8
 8006d8a:	a90a      	add	r1, sp, #40	; 0x28
 8006d8c:	f8ad 3028 	strh.w	r3, [sp, #40]	; 0x28
 8006d90:	f00c ff1f 	bl	8013bd2 <_ZN8touchgfx5Image9setBitmapERKNS_6BitmapE>
 8006d94:	4641      	mov	r1, r8
 8006d96:	4630      	mov	r0, r6
 8006d98:	f009 fb42 	bl	8010420 <_ZN8touchgfx9Container3addERNS_8DrawableE>
    buttonWithLabel3.setXY(33, 257);
 8006d9c:	4658      	mov	r0, fp
 8006d9e:	f240 1201 	movw	r2, #257	; 0x101
 8006da2:	2121      	movs	r1, #33	; 0x21
 8006da4:	f7fb fdc0 	bl	8002928 <_ZN8touchgfx8Drawable5setXYEss>
 8006da8:	2303      	movs	r3, #3
    buttonWithLabel3.setBitmaps(touchgfx::Bitmap(BITMAP_ALTERNATE_THEME_IMAGES_WIDGETS_BUTTON_REGULAR_HEIGHT_50_SMALL_ROUND_PRESSED_ID), touchgfx::Bitmap(BITMAP_ALTERNATE_THEME_IMAGES_WIDGETS_BUTTON_REGULAR_HEIGHT_50_SMALL_ROUND_NORMAL_ID));
 8006daa:	aa0a      	add	r2, sp, #40	; 0x28
 8006dac:	a909      	add	r1, sp, #36	; 0x24
 8006dae:	4658      	mov	r0, fp
 8006db0:	f8ad 3024 	strh.w	r3, [sp, #36]	; 0x24
 8006db4:	2302      	movs	r3, #2
 8006db6:	f8ad 3028 	strh.w	r3, [sp, #40]	; 0x28
 8006dba:	f00c fd14 	bl	80137e6 <_ZN8touchgfx6Button10setBitmapsERKNS_6BitmapES3_>
class TypedText
 8006dbe:	232b      	movs	r3, #43	; 0x2b
        updateTextPosition();
 8006dc0:	4658      	mov	r0, fp
 8006dc2:	f8a4 30d0 	strh.w	r3, [r4, #208]	; 0xd0
 8006dc6:	f7fb fdf3 	bl	80029b0 <_ZN8touchgfx15ButtonWithLabel18updateTextPositionEv>
    buttonWithLabel3.setAction(buttonCallback);
 8006dca:	f504 5382 	add.w	r3, r4, #4160	; 0x1040
 8006dce:	330c      	adds	r3, #12
        color = col;
 8006dd0:	f04f 39ff 	mov.w	r9, #4294967295
 8006dd4:	f8c4 30c0 	str.w	r3, [r4, #192]	; 0xc0
 8006dd8:	4659      	mov	r1, fp
 8006dda:	4630      	mov	r0, r6
        colorPressed = col;
 8006ddc:	e9c4 9935 	strd	r9, r9, [r4, #212]	; 0xd4
 8006de0:	f009 fb1e 	bl	8010420 <_ZN8touchgfx9Container3addERNS_8DrawableE>
 8006de4:	f10d 0810 	add.w	r8, sp, #16
    textArea3.setXY(23, 60);
 8006de8:	223c      	movs	r2, #60	; 0x3c
 8006dea:	ee18 0a90 	vmov	r0, s17
 8006dee:	2117      	movs	r1, #23
 8006df0:	f7fb fd9a 	bl	8002928 <_ZN8touchgfx8Drawable5setXYEss>
 8006df4:	ee18 1a90 	vmov	r1, s17
 8006df8:	4640      	mov	r0, r8
        color = newColor;
 8006dfa:	f8c4 9110 	str.w	r9, [r4, #272]	; 0x110
        linespace = space;
 8006dfe:	f8a4 5114 	strh.w	r5, [r4, #276]	; 0x114
        boundingArea = calculateBoundingArea();
 8006e02:	f00b fe9b 	bl	8012b3c <_ZNK8touchgfx8TextArea21calculateBoundingAreaEv>
 8006e06:	e898 0007 	ldmia.w	r8, {r0, r1, r2}
 8006e0a:	f504 738e 	add.w	r3, r4, #284	; 0x11c
 8006e0e:	e883 0007 	stmia.w	r3, {r0, r1, r2}
        : typedTextId(id)
 8006e12:	f8df b12c 	ldr.w	fp, [pc, #300]	; 8006f40 <_ZN38Measurement_Accurate_Display_2ViewBaseC1Ev+0x2c4>
 8006e16:	f8cd b028 	str.w	fp, [sp, #40]	; 0x28
 8006e1a:	232c      	movs	r3, #44	; 0x2c
    textArea3.setTypedText(touchgfx::TypedText(T___SINGLEUSE_TF2A));
 8006e1c:	ee18 0a90 	vmov	r0, s17
 8006e20:	a90a      	add	r1, sp, #40	; 0x28
 8006e22:	f8ad 302c 	strh.w	r3, [sp, #44]	; 0x2c
 8006e26:	f00c f923 	bl	8013070 <_ZN8touchgfx8TextArea12setTypedTextERKNS_9TypedTextE>
 8006e2a:	ee18 1a90 	vmov	r1, s17
 8006e2e:	4630      	mov	r0, r6
 8006e30:	f009 faf6 	bl	8010420 <_ZN8touchgfx9Container3addERNS_8DrawableE>
    line1.setPosition(0, 50, 240, 10);
 8006e34:	230a      	movs	r3, #10
 8006e36:	9300      	str	r3, [sp, #0]
 8006e38:	2232      	movs	r2, #50	; 0x32
 8006e3a:	23f0      	movs	r3, #240	; 0xf0
 8006e3c:	4629      	mov	r1, r5
 8006e3e:	4638      	mov	r0, r7
 8006e40:	f7fb fd7f 	bl	8002942 <_ZN8touchgfx8Drawable11setPositionEssss>
 8006e44:	9b03      	ldr	r3, [sp, #12]
 8006e46:	f8c4 3150 	str.w	r3, [r4, #336]	; 0x150
        setStart(CWRUtil::toQ5<T>(x), CWRUtil::toQ5<T>(y));
 8006e4a:	22a0      	movs	r2, #160	; 0xa0
 8006e4c:	4611      	mov	r1, r2
 8006e4e:	4638      	mov	r0, r7
 8006e50:	f8c4 91a4 	str.w	r9, [r4, #420]	; 0x1a4
        color565 = LCD16bpp::getNativeColor(painterColor);
 8006e54:	f8a4 91a8 	strh.w	r9, [r4, #424]	; 0x1a8
 8006e58:	f00b fcc4 	bl	80127e4 <_ZN8touchgfx4Line8setStartENS_7CWRUtil2Q5ES2_>
        setEnd(CWRUtil::toQ5<T>(x), CWRUtil::toQ5<T>(y));
 8006e5c:	22a0      	movs	r2, #160	; 0xa0
 8006e5e:	f44f 51eb 	mov.w	r1, #7520	; 0x1d60
 8006e62:	4638      	mov	r0, r7
 8006e64:	f00b fcc9 	bl	80127fa <_ZN8touchgfx4Line6setEndENS_7CWRUtil2Q5ES2_>
        if (lineWidthQ5 == widthQ5)
 8006e68:	f8d4 3164 	ldr.w	r3, [r4, #356]	; 0x164
 8006e6c:	2b20      	cmp	r3, #32
 8006e6e:	d005      	beq.n	8006e7c <_ZN38Measurement_Accurate_Display_2ViewBaseC1Ev+0x200>
        lineWidthQ5 = widthQ5;
 8006e70:	2320      	movs	r3, #32
 8006e72:	f8c4 3164 	str.w	r3, [r4, #356]	; 0x164
        updateCachedShape();
 8006e76:	4638      	mov	r0, r7
 8006e78:	f00b fbbe 	bl	80125f8 <_ZN8touchgfx4Line17updateCachedShapeEv>
    line1.setLineEndingStyle(touchgfx::Line::ROUND_CAP_ENDING);
 8006e7c:	4638      	mov	r0, r7
 8006e7e:	2101      	movs	r1, #1
 8006e80:	f00b fcc6 	bl	8012810 <_ZN8touchgfx4Line18setLineEndingStyleENS0_17LINE_ENDING_STYLEE>
 8006e84:	4639      	mov	r1, r7
 8006e86:	4630      	mov	r0, r6
 8006e88:	f009 faca 	bl	8010420 <_ZN8touchgfx9Container3addERNS_8DrawableE>
        color = newColor;
 8006e8c:	f04f 37ff 	mov.w	r7, #4294967295
    textArea2.setXY(69, 35);
 8006e90:	ee18 0a10 	vmov	r0, s16
 8006e94:	2223      	movs	r2, #35	; 0x23
        linespace = space;
 8006e96:	2500      	movs	r5, #0
 8006e98:	2145      	movs	r1, #69	; 0x45
 8006e9a:	f7fb fd45 	bl	8002928 <_ZN8touchgfx8Drawable5setXYEss>
        boundingArea = calculateBoundingArea();
 8006e9e:	ee18 1a10 	vmov	r1, s16
 8006ea2:	4640      	mov	r0, r8
        color = newColor;
 8006ea4:	f8c4 71dc 	str.w	r7, [r4, #476]	; 0x1dc
        linespace = space;
 8006ea8:	f8a4 51e0 	strh.w	r5, [r4, #480]	; 0x1e0
        boundingArea = calculateBoundingArea();
 8006eac:	f00b fe46 	bl	8012b3c <_ZNK8touchgfx8TextArea21calculateBoundingAreaEv>
 8006eb0:	e898 0007 	ldmia.w	r8, {r0, r1, r2}
 8006eb4:	ee18 3a10 	vmov	r3, s16
 8006eb8:	333c      	adds	r3, #60	; 0x3c
 8006eba:	e883 0007 	stmia.w	r3, {r0, r1, r2}
 8006ebe:	232d      	movs	r3, #45	; 0x2d
    textArea2.setTypedText(touchgfx::TypedText(T___SINGLEUSE_A08K));
 8006ec0:	ee18 0a10 	vmov	r0, s16
 8006ec4:	a90a      	add	r1, sp, #40	; 0x28
 8006ec6:	f8ad 302c 	strh.w	r3, [sp, #44]	; 0x2c
 8006eca:	f8cd b028 	str.w	fp, [sp, #40]	; 0x28
 8006ece:	f00c f8cf 	bl	8013070 <_ZN8touchgfx8TextArea12setTypedTextERKNS_9TypedTextE>
 8006ed2:	ee18 1a10 	vmov	r1, s16
 8006ed6:	4630      	mov	r0, r6
 8006ed8:	f009 faa2 	bl	8010420 <_ZN8touchgfx9Container3addERNS_8DrawableE>
    textArea1.setXY(54, 12);
 8006edc:	220c      	movs	r2, #12
 8006ede:	4650      	mov	r0, sl
 8006ee0:	2136      	movs	r1, #54	; 0x36
 8006ee2:	f7fb fd21 	bl	8002928 <_ZN8touchgfx8Drawable5setXYEss>
 8006ee6:	4651      	mov	r1, sl
 8006ee8:	4640      	mov	r0, r8
        color = newColor;
 8006eea:	f8c4 7224 	str.w	r7, [r4, #548]	; 0x224
        linespace = space;
 8006eee:	f8a4 5228 	strh.w	r5, [r4, #552]	; 0x228
        boundingArea = calculateBoundingArea();
 8006ef2:	f00b fe23 	bl	8012b3c <_ZNK8touchgfx8TextArea21calculateBoundingAreaEv>
 8006ef6:	e898 0007 	ldmia.w	r8, {r0, r1, r2}
 8006efa:	f10a 033c 	add.w	r3, sl, #60	; 0x3c
 8006efe:	e883 0007 	stmia.w	r3, {r0, r1, r2}
 8006f02:	232e      	movs	r3, #46	; 0x2e
    textArea1.setTypedText(touchgfx::TypedText(T___SINGLEUSE_IJWA));
 8006f04:	a90a      	add	r1, sp, #40	; 0x28
 8006f06:	4650      	mov	r0, sl
 8006f08:	f8ad 302c 	strh.w	r3, [sp, #44]	; 0x2c
 8006f0c:	f8cd b028 	str.w	fp, [sp, #40]	; 0x28
 8006f10:	f00c f8ae 	bl	8013070 <_ZN8touchgfx8TextArea12setTypedTextERKNS_9TypedTextE>
 8006f14:	4630      	mov	r0, r6
 8006f16:	4651      	mov	r1, sl
 8006f18:	f009 fa82 	bl	8010420 <_ZN8touchgfx9Container3addERNS_8DrawableE>
}
 8006f1c:	4620      	mov	r0, r4
 8006f1e:	b00d      	add	sp, #52	; 0x34
 8006f20:	ecbd 8b02 	vpop	{d8}
 8006f24:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
 8006f28:	0802e5c0 	.word	0x0802e5c0
 8006f2c:	0802f444 	.word	0x0802f444
 8006f30:	0802f690 	.word	0x0802f690
 8006f34:	0802f178 	.word	0x0802f178
 8006f38:	0802e5a8 	.word	0x0802e5a8
 8006f3c:	08006c65 	.word	0x08006c65
 8006f40:	0802cef0 	.word	0x0802cef0

08006f44 <_ZN26Measurement_SingleViewBase11setupScreenEv>:
}

void Measurement_SingleViewBase::setupScreen()
{

}
 8006f44:	4770      	bx	lr

08006f46 <_ZN8touchgfx8CallbackI26Measurement_SingleViewBaseRKNS_14AbstractButtonEvvED1Ev>:
struct Callback<dest_type, T1, void, void> : public GenericCallback<T1>
 8006f46:	4770      	bx	lr

08006f48 <_ZN8touchgfx8CallbackI26Measurement_SingleViewBaseRKNS_14AbstractButtonEvvE7executeES4_>:
    virtual void execute(T1 t1)
 8006f48:	b430      	push	{r4, r5}
        (pobject->*pmemfun)(t1);
 8006f4a:	68c2      	ldr	r2, [r0, #12]
 8006f4c:	6844      	ldr	r4, [r0, #4]
 8006f4e:	1055      	asrs	r5, r2, #1
    virtual void execute(T1 t1)
 8006f50:	4603      	mov	r3, r0
        (pobject->*pmemfun)(t1);
 8006f52:	eb04 0062 	add.w	r0, r4, r2, asr #1
 8006f56:	07d2      	lsls	r2, r2, #31
 8006f58:	bf48      	it	mi
 8006f5a:	5962      	ldrmi	r2, [r4, r5]
 8006f5c:	689b      	ldr	r3, [r3, #8]
    }
 8006f5e:	bc30      	pop	{r4, r5}
        (pobject->*pmemfun)(t1);
 8006f60:	bf48      	it	mi
 8006f62:	58d3      	ldrmi	r3, [r2, r3]
 8006f64:	4718      	bx	r3

08006f66 <_ZNK8touchgfx8CallbackI26Measurement_SingleViewBaseRKNS_14AbstractButtonEvvE7isValidEv>:
        return (pobject != 0) && (pmemfun != 0);
 8006f66:	6843      	ldr	r3, [r0, #4]
 8006f68:	b12b      	cbz	r3, 8006f76 <_ZNK8touchgfx8CallbackI26Measurement_SingleViewBaseRKNS_14AbstractButtonEvvE7isValidEv+0x10>
 8006f6a:	6883      	ldr	r3, [r0, #8]
 8006f6c:	b92b      	cbnz	r3, 8006f7a <_ZNK8touchgfx8CallbackI26Measurement_SingleViewBaseRKNS_14AbstractButtonEvvE7isValidEv+0x14>
 8006f6e:	68c0      	ldr	r0, [r0, #12]
 8006f70:	f000 0001 	and.w	r0, r0, #1
 8006f74:	4770      	bx	lr
 8006f76:	4618      	mov	r0, r3
 8006f78:	4770      	bx	lr
 8006f7a:	2001      	movs	r0, #1
    }
 8006f7c:	4770      	bx	lr

08006f7e <_ZN8touchgfx8CallbackI26Measurement_SingleViewBaseRKNS_14AbstractButtonEvvED0Ev>:
struct Callback<dest_type, T1, void, void> : public GenericCallback<T1>
 8006f7e:	b510      	push	{r4, lr}
 8006f80:	2110      	movs	r1, #16
 8006f82:	4604      	mov	r4, r0
 8006f84:	f023 fbd9 	bl	802a73a <_ZdlPvj>
 8006f88:	4620      	mov	r0, r4
 8006f8a:	bd10      	pop	{r4, pc}

08006f8c <_ZN26Measurement_SingleViewBaseD1Ev>:
Measurement_SingleViewBase::~Measurement_SingleViewBase()
 8006f8c:	b510      	push	{r4, lr}
 8006f8e:	4b03      	ldr	r3, [pc, #12]	; (8006f9c <_ZN26Measurement_SingleViewBaseD1Ev+0x10>)
 8006f90:	6003      	str	r3, [r0, #0]
 8006f92:	4604      	mov	r4, r0
    touchgfx::CanvasWidgetRenderer::resetBuffer();
 8006f94:	f00d fe1a 	bl	8014bcc <_ZN8touchgfx20CanvasWidgetRenderer11resetBufferEv>
}
 8006f98:	4620      	mov	r0, r4
 8006f9a:	bd10      	pop	{r4, pc}
 8006f9c:	0802e60c 	.word	0x0802e60c

08006fa0 <_ZN26Measurement_SingleViewBaseD0Ev>:
Measurement_SingleViewBase::~Measurement_SingleViewBase()
 8006fa0:	b507      	push	{r0, r1, r2, lr}
 8006fa2:	4b07      	ldr	r3, [pc, #28]	; (8006fc0 <_ZN26Measurement_SingleViewBaseD0Ev+0x20>)
 8006fa4:	6003      	str	r3, [r0, #0]
 8006fa6:	9001      	str	r0, [sp, #4]
    touchgfx::CanvasWidgetRenderer::resetBuffer();
 8006fa8:	f00d fe10 	bl	8014bcc <_ZN8touchgfx20CanvasWidgetRenderer11resetBufferEv>
}
 8006fac:	9801      	ldr	r0, [sp, #4]
 8006fae:	f44f 518a 	mov.w	r1, #4416	; 0x1140
 8006fb2:	f023 fbc2 	bl	802a73a <_ZdlPvj>
 8006fb6:	9801      	ldr	r0, [sp, #4]
 8006fb8:	b003      	add	sp, #12
 8006fba:	f85d fb04 	ldr.w	pc, [sp], #4
 8006fbe:	bf00      	nop
 8006fc0:	0802e60c 	.word	0x0802e60c

08006fc4 <_ZN26Measurement_SingleViewBase21buttonCallbackHandlerERKN8touchgfx14AbstractButtonE>:

void Measurement_SingleViewBase::buttonCallbackHandler(const touchgfx::AbstractButton& src)
{
 8006fc4:	b538      	push	{r3, r4, r5, lr}
    if (&src == &buttonWithLabel3)
 8006fc6:	f500 7310 	add.w	r3, r0, #576	; 0x240
 8006fca:	4299      	cmp	r1, r3
{
 8006fcc:	4604      	mov	r4, r0
 8006fce:	460d      	mov	r5, r1
    if (&src == &buttonWithLabel3)
 8006fd0:	d103      	bne.n	8006fda <_ZN26Measurement_SingleViewBase21buttonCallbackHandlerERKN8touchgfx14AbstractButtonE+0x16>
    virtual ~Measurement_SingleViewBase();
    virtual void setupScreen();

protected:
    FrontendApplication& application() {
        return *static_cast<FrontendApplication*>(touchgfx::Application::getInstance());
 8006fd2:	f00f fafd 	bl	80165d0 <_ZN8touchgfx11Application11getInstanceEv>
    {
        //Interaction1
        //When buttonWithLabel3 clicked change screen to Measurement
        //Go to Measurement with screen transition towards West
        application().gotoMeasurementScreenWipeTransitionWest();
 8006fd6:	f7fd fba5 	bl	8004724 <_ZN23FrontendApplicationBase39gotoMeasurementScreenWipeTransitionWestEv>
    }
    if (&src == &buttonWithLabel1)
 8006fda:	f504 7334 	add.w	r3, r4, #720	; 0x2d0
 8006fde:	429d      	cmp	r5, r3
 8006fe0:	d103      	bne.n	8006fea <_ZN26Measurement_SingleViewBase21buttonCallbackHandlerERKN8touchgfx14AbstractButtonE+0x26>
 8006fe2:	f00f faf5 	bl	80165d0 <_ZN8touchgfx11Application11getInstanceEv>
    {
        //Interaction2
        //When buttonWithLabel1 clicked change screen to Measurement_Single_Display_1P
        //Go to Measurement_Single_Display_1P with screen transition towards East
        application().gotoMeasurement_Single_Display_1PScreenWipeTransitionEast();
 8006fe6:	f7fd fbbd 	bl	8004764 <_ZN23FrontendApplicationBase57gotoMeasurement_Single_Display_1PScreenWipeTransitionEastEv>
    }
    if (&src == &buttonWithLabel2)
 8006fea:	f504 7422 	add.w	r4, r4, #648	; 0x288
 8006fee:	42a5      	cmp	r5, r4
 8006ff0:	d105      	bne.n	8006ffe <_ZN26Measurement_SingleViewBase21buttonCallbackHandlerERKN8touchgfx14AbstractButtonE+0x3a>
 8006ff2:	f00f faed 	bl	80165d0 <_ZN8touchgfx11Application11getInstanceEv>
        //Interaction3
        //When buttonWithLabel2 clicked change screen to Measurement_Single_Display_3P
        //Go to Measurement_Single_Display_3P with screen transition towards East
        application().gotoMeasurement_Single_Display_3PScreenWipeTransitionEast();
    }
}
 8006ff6:	e8bd 4038 	ldmia.w	sp!, {r3, r4, r5, lr}
        application().gotoMeasurement_Single_Display_3PScreenWipeTransitionEast();
 8006ffa:	f7fd bbc3 	b.w	8004784 <_ZN23FrontendApplicationBase57gotoMeasurement_Single_Display_3PScreenWipeTransitionEastEv>
}
 8006ffe:	bd38      	pop	{r3, r4, r5, pc}

08007000 <_ZN26Measurement_SingleViewBaseC1Ev>:
Measurement_SingleViewBase::Measurement_SingleViewBase() :
 8007000:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 8007004:	ed2d 8b06 	vpush	{d8-d10}
 8007008:	4604      	mov	r4, r0
 800700a:	b08d      	sub	sp, #52	; 0x34
    buttonCallback(this, &Measurement_SingleViewBase::buttonCallbackHandler)
 800700c:	46a3      	mov	fp, r4
 800700e:	2500      	movs	r5, #0
 8007010:	f010 ff5e 	bl	8017ed0 <_ZN8touchgfx6ScreenC1Ev>
 8007014:	4b66      	ldr	r3, [pc, #408]	; (80071b0 <_ZN26Measurement_SingleViewBaseC1Ev+0x1b0>)
 8007016:	63e5      	str	r5, [r4, #60]	; 0x3c
 8007018:	f84b 3b40 	str.w	r3, [fp], #64
        : Widget(), alpha(255), color(0)
 800701c:	2226      	movs	r2, #38	; 0x26
 800701e:	4629      	mov	r1, r5
 8007020:	4658      	mov	r0, fp
 8007022:	f024 fba2 	bl	802b76a <memset>
 8007026:	4658      	mov	r0, fp
 8007028:	f7fb fcb0 	bl	800298c <_ZN8touchgfx6WidgetC1Ev>
 800702c:	f104 0a6c 	add.w	sl, r4, #108	; 0x6c
 8007030:	26ff      	movs	r6, #255	; 0xff
 8007032:	4b60      	ldr	r3, [pc, #384]	; (80071b4 <_ZN26Measurement_SingleViewBaseC1Ev+0x1b4>)
 8007034:	6423      	str	r3, [r4, #64]	; 0x40
        : Widget(), bitmap(bmp), alpha(255)
 8007036:	2226      	movs	r2, #38	; 0x26
 8007038:	f64f 73ff 	movw	r3, #65535	; 0xffff
 800703c:	4629      	mov	r1, r5
 800703e:	f884 6066 	strb.w	r6, [r4, #102]	; 0x66
 8007042:	4650      	mov	r0, sl
 8007044:	66a5      	str	r5, [r4, #104]	; 0x68
 8007046:	f8ad 3028 	strh.w	r3, [sp, #40]	; 0x28
 800704a:	f024 fb8e 	bl	802b76a <memset>
 800704e:	4650      	mov	r0, sl
 8007050:	f7fb fc9c 	bl	800298c <_ZN8touchgfx6WidgetC1Ev>
 8007054:	4b58      	ldr	r3, [pc, #352]	; (80071b8 <_ZN26Measurement_SingleViewBaseC1Ev+0x1b8>)
 8007056:	66e3      	str	r3, [r4, #108]	; 0x6c
 8007058:	f8bd 3028 	ldrh.w	r3, [sp, #40]	; 0x28
 800705c:	f8a4 3092 	strh.w	r3, [r4, #146]	; 0x92
        Image::setBitmap(bmp);
 8007060:	a90a      	add	r1, sp, #40	; 0x28
 8007062:	4650      	mov	r0, sl
 8007064:	f104 0998 	add.w	r9, r4, #152	; 0x98
        : Widget(), bitmap(bmp), alpha(255)
 8007068:	f884 6094 	strb.w	r6, [r4, #148]	; 0x94
        Image::setBitmap(bmp);
 800706c:	f00c fdb1 	bl	8013bd2 <_ZN8touchgfx5Image9setBitmapERKNS_6BitmapE>
        : TextArea()
 8007070:	4648      	mov	r0, r9
 8007072:	f7fb fcef 	bl	8002a54 <_ZN8touchgfx8TextAreaC1Ev>
        : TextAreaWithWildcardBase(), wc1(0)
 8007076:	4b51      	ldr	r3, [pc, #324]	; (80071bc <_ZN26Measurement_SingleViewBaseC1Ev+0x1bc>)
 8007078:	f8c4 3098 	str.w	r3, [r4, #152]	; 0x98
 800707c:	f104 03e4 	add.w	r3, r4, #228	; 0xe4
 8007080:	4618      	mov	r0, r3
 8007082:	f8c4 50e0 	str.w	r5, [r4, #224]	; 0xe0
 8007086:	f504 7796 	add.w	r7, r4, #300	; 0x12c
 800708a:	ee08 3a90 	vmov	s17, r3
 800708e:	f7fb fce1 	bl	8002a54 <_ZN8touchgfx8TextAreaC1Ev>
 8007092:	4638      	mov	r0, r7
 8007094:	f00b fa90 	bl	80125b8 <_ZN8touchgfx4LineC1Ev>
 8007098:	f504 73ce 	add.w	r3, r4, #412	; 0x19c
        : AbstractPainterRGB565(), AbstractPainterColor(color)
 800709c:	4618      	mov	r0, r3
 800709e:	9303      	str	r3, [sp, #12]
 80070a0:	f7fb fa78 	bl	8002594 <_ZN8touchgfx21AbstractPainterRGB565C1Ev>
 80070a4:	4b46      	ldr	r3, [pc, #280]	; (80071c0 <_ZN26Measurement_SingleViewBaseC1Ev+0x1c0>)
 80070a6:	f8c4 319c 	str.w	r3, [r4, #412]	; 0x19c
 80070aa:	f504 78d8 	add.w	r8, r4, #432	; 0x1b0
 80070ae:	3324      	adds	r3, #36	; 0x24
 80070b0:	f8c4 31a4 	str.w	r3, [r4, #420]	; 0x1a4
 80070b4:	f8c4 51a8 	str.w	r5, [r4, #424]	; 0x1a8
 80070b8:	4640      	mov	r0, r8
 80070ba:	f7fb fccb 	bl	8002a54 <_ZN8touchgfx8TextAreaC1Ev>
 80070be:	f504 73fc 	add.w	r3, r4, #504	; 0x1f8
 80070c2:	4618      	mov	r0, r3
 80070c4:	ee08 3a10 	vmov	s16, r3
 80070c8:	f7fb fcc4 	bl	8002a54 <_ZN8touchgfx8TextAreaC1Ev>
 80070cc:	f504 7310 	add.w	r3, r4, #576	; 0x240
 80070d0:	4618      	mov	r0, r3
 80070d2:	ee09 3a10 	vmov	s18, r3
 80070d6:	f00c feb3 	bl	8013e40 <_ZN8touchgfx15ButtonWithLabelC1Ev>
 80070da:	f504 7322 	add.w	r3, r4, #648	; 0x288
 80070de:	4618      	mov	r0, r3
 80070e0:	ee09 3a90 	vmov	s19, r3
 80070e4:	f00c feac 	bl	8013e40 <_ZN8touchgfx15ButtonWithLabelC1Ev>
 80070e8:	f504 7334 	add.w	r3, r4, #720	; 0x2d0
 80070ec:	4618      	mov	r0, r3
 80070ee:	ee0a 3a10 	vmov	s20, r3
 80070f2:	f00c fea5 	bl	8013e40 <_ZN8touchgfx15ButtonWithLabelC1Ev>
        : pobject(pObject), pmemfun(pmemfun_1)
 80070f6:	4a33      	ldr	r2, [pc, #204]	; (80071c4 <_ZN26Measurement_SingleViewBaseC1Ev+0x1c4>)
 80070f8:	f504 5380 	add.w	r3, r4, #4096	; 0x1000
 80070fc:	e9c3 244c 	strd	r2, r4, [r3, #304]	; 0x130
 8007100:	4a31      	ldr	r2, [pc, #196]	; (80071c8 <_ZN26Measurement_SingleViewBaseC1Ev+0x1c8>)
    touchgfx::CanvasWidgetRenderer::setupBuffer(canvasBuffer, CANVAS_BUFFER_SIZE);
 8007102:	f44f 6161 	mov.w	r1, #3600	; 0xe10
 8007106:	e9c3 254e 	strd	r2, r5, [r3, #312]	; 0x138
 800710a:	f504 7048 	add.w	r0, r4, #800	; 0x320
 800710e:	f00d fd53 	bl	8014bb8 <_ZN8touchgfx20CanvasWidgetRenderer11setupBufferEPhj>
    __background.setPosition(0, 0, 240, 320);
 8007112:	f44f 73a0 	mov.w	r3, #320	; 0x140
 8007116:	462a      	mov	r2, r5
 8007118:	4658      	mov	r0, fp
 800711a:	9300      	str	r3, [sp, #0]
 800711c:	4629      	mov	r1, r5
 800711e:	23f0      	movs	r3, #240	; 0xf0
 8007120:	f7fb fc0f 	bl	8002942 <_ZN8touchgfx8Drawable11setPositionEssss>
 8007124:	1d26      	adds	r6, r4, #4
        color = newColor;
 8007126:	f04f 437f 	mov.w	r3, #4278190080	; 0xff000000
 800712a:	66a3      	str	r3, [r4, #104]	; 0x68
 800712c:	4659      	mov	r1, fp
 800712e:	4630      	mov	r0, r6
 8007130:	f009 f976 	bl	8010420 <_ZN8touchgfx9Container3addERNS_8DrawableE>
    image1.setXY(0, 0);
 8007134:	462a      	mov	r2, r5
 8007136:	4650      	mov	r0, sl
 8007138:	4629      	mov	r1, r5
 800713a:	f7fb fbf5 	bl	8002928 <_ZN8touchgfx8Drawable5setXYEss>
 800713e:	2308      	movs	r3, #8
    image1.setBitmap(touchgfx::Bitmap(BITMAP_BACKGROUND_2_RESIZED_4_ID));
 8007140:	4650      	mov	r0, sl
 8007142:	a90a      	add	r1, sp, #40	; 0x28
 8007144:	f8ad 3028 	strh.w	r3, [sp, #40]	; 0x28
 8007148:	f00c fd43 	bl	8013bd2 <_ZN8touchgfx5Image9setBitmapERKNS_6BitmapE>
 800714c:	4651      	mov	r1, sl
 800714e:	4630      	mov	r0, r6
 8007150:	f009 f966 	bl	8010420 <_ZN8touchgfx9Container3addERNS_8DrawableE>
    textArea3_1.setXY(86, 308);
 8007154:	f44f 729a 	mov.w	r2, #308	; 0x134
 8007158:	2156      	movs	r1, #86	; 0x56
 800715a:	4648      	mov	r0, r9
 800715c:	f7fb fbe4 	bl	8002928 <_ZN8touchgfx8Drawable5setXYEss>
        color = newColor;
 8007160:	f04f 33ff 	mov.w	r3, #4294967295
 8007164:	f8c4 30c8 	str.w	r3, [r4, #200]	; 0xc8
        boundingArea = calculateBoundingArea();
 8007168:	f8d4 3098 	ldr.w	r3, [r4, #152]	; 0x98
        linespace = space;
 800716c:	f8a4 50cc 	strh.w	r5, [r4, #204]	; 0xcc
        boundingArea = calculateBoundingArea();
 8007170:	f10d 0b10 	add.w	fp, sp, #16
 8007174:	f8d3 3084 	ldr.w	r3, [r3, #132]	; 0x84
 8007178:	4649      	mov	r1, r9
 800717a:	4658      	mov	r0, fp
 800717c:	4798      	blx	r3
 800717e:	e89b 0007 	ldmia.w	fp, {r0, r1, r2}
 8007182:	f104 03d4 	add.w	r3, r4, #212	; 0xd4
 8007186:	e883 0007 	stmia.w	r3, {r0, r1, r2}
        assert(typedTexts != 0 && "TypedText database has not been initialized.");
 800718a:	4b10      	ldr	r3, [pc, #64]	; (80071cc <_ZN26Measurement_SingleViewBaseC1Ev+0x1cc>)
 800718c:	681b      	ldr	r3, [r3, #0]
    Unicode::snprintf(textArea3_1Buffer, TEXTAREA3_1_SIZE, "%s", touchgfx::TypedText(T___SINGLEUSE_DTDC).getText());
 800718e:	f504 7a46 	add.w	sl, r4, #792	; 0x318
 8007192:	b92b      	cbnz	r3, 80071a0 <_ZN26Measurement_SingleViewBaseC1Ev+0x1a0>
 8007194:	4b0e      	ldr	r3, [pc, #56]	; (80071d0 <_ZN26Measurement_SingleViewBaseC1Ev+0x1d0>)
 8007196:	4a0f      	ldr	r2, [pc, #60]	; (80071d4 <_ZN26Measurement_SingleViewBaseC1Ev+0x1d4>)
 8007198:	2160      	movs	r1, #96	; 0x60
        assert(hasValidId() && "typedTextId larger than numberOfTypedTexts.");
 800719a:	480f      	ldr	r0, [pc, #60]	; (80071d8 <_ZN26Measurement_SingleViewBaseC1Ev+0x1d8>)
 800719c:	f024 f8e0 	bl	802b360 <__assert_func>
        return typedTextId < numberOfTypedTexts;
 80071a0:	4b0e      	ldr	r3, [pc, #56]	; (80071dc <_ZN26Measurement_SingleViewBaseC1Ev+0x1dc>)
        assert(hasValidId() && "typedTextId larger than numberOfTypedTexts.");
 80071a2:	881b      	ldrh	r3, [r3, #0]
 80071a4:	2b26      	cmp	r3, #38	; 0x26
 80071a6:	d81d      	bhi.n	80071e4 <_ZN26Measurement_SingleViewBaseC1Ev+0x1e4>
 80071a8:	4b0d      	ldr	r3, [pc, #52]	; (80071e0 <_ZN26Measurement_SingleViewBaseC1Ev+0x1e0>)
 80071aa:	4a0a      	ldr	r2, [pc, #40]	; (80071d4 <_ZN26Measurement_SingleViewBaseC1Ev+0x1d4>)
 80071ac:	2161      	movs	r1, #97	; 0x61
 80071ae:	e7f4      	b.n	800719a <_ZN26Measurement_SingleViewBaseC1Ev+0x19a>
 80071b0:	0802e60c 	.word	0x0802e60c
 80071b4:	0802f444 	.word	0x0802f444
 80071b8:	0802f690 	.word	0x0802f690
 80071bc:	0802cf90 	.word	0x0802cf90
 80071c0:	0802f178 	.word	0x0802f178
 80071c4:	0802e5f4 	.word	0x0802e5f4
 80071c8:	08006fc5 	.word	0x08006fc5
 80071cc:	20013874 	.word	0x20013874
 80071d0:	0802cd40 	.word	0x0802cd40
 80071d4:	0802ce45 	.word	0x0802ce45
 80071d8:	0802cdbd 	.word	0x0802cdbd
 80071dc:	20013878 	.word	0x20013878
 80071e0:	0802ce04 	.word	0x0802ce04
        return texts->getText(typedTextId);
 80071e4:	4b95      	ldr	r3, [pc, #596]	; (800743c <_ZN26Measurement_SingleViewBaseC1Ev+0x43c>)
 80071e6:	2126      	movs	r1, #38	; 0x26
 80071e8:	6818      	ldr	r0, [r3, #0]
 80071ea:	f001 faad 	bl	8008748 <_ZNK8touchgfx5Texts7getTextEt>
 80071ee:	4a94      	ldr	r2, [pc, #592]	; (8007440 <_ZN26Measurement_SingleViewBaseC1Ev+0x440>)
 80071f0:	4603      	mov	r3, r0
 80071f2:	2104      	movs	r1, #4
 80071f4:	4650      	mov	r0, sl
 80071f6:	f012 fb99 	bl	801992c <_ZN8touchgfx7Unicode8snprintfEPttPKcz>
        wc1 = value;
 80071fa:	f8c4 a0e0 	str.w	sl, [r4, #224]	; 0xe0
    textArea3_1.resizeToCurrentText();
 80071fe:	4648      	mov	r0, r9
 8007200:	f00b ff16 	bl	8013030 <_ZN8touchgfx8TextArea19resizeToCurrentTextEv>
        : typedTextId(id)
 8007204:	f8df a23c 	ldr.w	sl, [pc, #572]	; 8007444 <_ZN26Measurement_SingleViewBaseC1Ev+0x444>
 8007208:	f8cd a028 	str.w	sl, [sp, #40]	; 0x28
 800720c:	2327      	movs	r3, #39	; 0x27
    textArea3_1.setTypedText(touchgfx::TypedText(T___SINGLEUSE_VDD5));
 800720e:	a90a      	add	r1, sp, #40	; 0x28
 8007210:	4648      	mov	r0, r9
 8007212:	f8ad 302c 	strh.w	r3, [sp, #44]	; 0x2c
 8007216:	f00b ff2b 	bl	8013070 <_ZN8touchgfx8TextArea12setTypedTextERKNS_9TypedTextE>
 800721a:	4649      	mov	r1, r9
 800721c:	4630      	mov	r0, r6
 800721e:	f009 f8ff 	bl	8010420 <_ZN8touchgfx9Container3addERNS_8DrawableE>
    textArea3.setXY(41, 60);
 8007222:	223c      	movs	r2, #60	; 0x3c
 8007224:	ee18 0a90 	vmov	r0, s17
 8007228:	2129      	movs	r1, #41	; 0x29
 800722a:	f7fb fb7d 	bl	8002928 <_ZN8touchgfx8Drawable5setXYEss>
        color = newColor;
 800722e:	f04f 33ff 	mov.w	r3, #4294967295
        boundingArea = calculateBoundingArea();
 8007232:	ee18 1a90 	vmov	r1, s17
        color = newColor;
 8007236:	f8c4 3114 	str.w	r3, [r4, #276]	; 0x114
        boundingArea = calculateBoundingArea();
 800723a:	4658      	mov	r0, fp
        linespace = space;
 800723c:	f8a4 5118 	strh.w	r5, [r4, #280]	; 0x118
        boundingArea = calculateBoundingArea();
 8007240:	f00b fc7c 	bl	8012b3c <_ZNK8touchgfx8TextArea21calculateBoundingAreaEv>
 8007244:	e89b 0007 	ldmia.w	fp, {r0, r1, r2}
 8007248:	f504 7390 	add.w	r3, r4, #288	; 0x120
 800724c:	e883 0007 	stmia.w	r3, {r0, r1, r2}
 8007250:	2336      	movs	r3, #54	; 0x36
    textArea3.setTypedText(touchgfx::TypedText(T___SINGLEUSE_1QNY));
 8007252:	ee18 0a90 	vmov	r0, s17
 8007256:	a90a      	add	r1, sp, #40	; 0x28
 8007258:	f8ad 302c 	strh.w	r3, [sp, #44]	; 0x2c
 800725c:	f8cd a028 	str.w	sl, [sp, #40]	; 0x28
 8007260:	f00b ff06 	bl	8013070 <_ZN8touchgfx8TextArea12setTypedTextERKNS_9TypedTextE>
 8007264:	ee18 1a90 	vmov	r1, s17
 8007268:	4630      	mov	r0, r6
 800726a:	f009 f8d9 	bl	8010420 <_ZN8touchgfx9Container3addERNS_8DrawableE>
    line1.setPosition(0, 50, 240, 10);
 800726e:	230a      	movs	r3, #10
 8007270:	9300      	str	r3, [sp, #0]
 8007272:	2232      	movs	r2, #50	; 0x32
 8007274:	23f0      	movs	r3, #240	; 0xf0
 8007276:	4629      	mov	r1, r5
 8007278:	4638      	mov	r0, r7
 800727a:	f7fb fb62 	bl	8002942 <_ZN8touchgfx8Drawable11setPositionEssss>
 800727e:	f04f 33ff 	mov.w	r3, #4294967295
        setStart(CWRUtil::toQ5<T>(x), CWRUtil::toQ5<T>(y));
 8007282:	22a0      	movs	r2, #160	; 0xa0
 8007284:	f8c4 31a8 	str.w	r3, [r4, #424]	; 0x1a8
        color565 = LCD16bpp::getNativeColor(painterColor);
 8007288:	f8a4 31ac 	strh.w	r3, [r4, #428]	; 0x1ac
 800728c:	9b03      	ldr	r3, [sp, #12]
 800728e:	f8c4 3154 	str.w	r3, [r4, #340]	; 0x154
 8007292:	4611      	mov	r1, r2
 8007294:	4638      	mov	r0, r7
 8007296:	f00b faa5 	bl	80127e4 <_ZN8touchgfx4Line8setStartENS_7CWRUtil2Q5ES2_>
        setEnd(CWRUtil::toQ5<T>(x), CWRUtil::toQ5<T>(y));
 800729a:	22a0      	movs	r2, #160	; 0xa0
 800729c:	f44f 51eb 	mov.w	r1, #7520	; 0x1d60
 80072a0:	4638      	mov	r0, r7
 80072a2:	f00b faaa 	bl	80127fa <_ZN8touchgfx4Line6setEndENS_7CWRUtil2Q5ES2_>
        if (lineWidthQ5 == widthQ5)
 80072a6:	f8d4 3168 	ldr.w	r3, [r4, #360]	; 0x168
 80072aa:	2b20      	cmp	r3, #32
 80072ac:	d005      	beq.n	80072ba <_ZN26Measurement_SingleViewBaseC1Ev+0x2ba>
        lineWidthQ5 = widthQ5;
 80072ae:	2320      	movs	r3, #32
 80072b0:	f8c4 3168 	str.w	r3, [r4, #360]	; 0x168
        updateCachedShape();
 80072b4:	4638      	mov	r0, r7
 80072b6:	f00b f99f 	bl	80125f8 <_ZN8touchgfx4Line17updateCachedShapeEv>
    line1.setLineEndingStyle(touchgfx::Line::ROUND_CAP_ENDING);
 80072ba:	4638      	mov	r0, r7
 80072bc:	2101      	movs	r1, #1
 80072be:	f00b faa7 	bl	8012810 <_ZN8touchgfx4Line18setLineEndingStyleENS0_17LINE_ENDING_STYLEE>
 80072c2:	4639      	mov	r1, r7
 80072c4:	4630      	mov	r0, r6
 80072c6:	f009 f8ab 	bl	8010420 <_ZN8touchgfx9Container3addERNS_8DrawableE>
        color = newColor;
 80072ca:	f04f 35ff 	mov.w	r5, #4294967295
        boundingArea = calculateBoundingArea();
 80072ce:	af04      	add	r7, sp, #16
    textArea2.setXY(69, 35);
 80072d0:	2223      	movs	r2, #35	; 0x23
 80072d2:	4640      	mov	r0, r8
        linespace = space;
 80072d4:	f04f 0a00 	mov.w	sl, #0
 80072d8:	2145      	movs	r1, #69	; 0x45
 80072da:	f7fb fb25 	bl	8002928 <_ZN8touchgfx8Drawable5setXYEss>
        boundingArea = calculateBoundingArea();
 80072de:	4641      	mov	r1, r8
 80072e0:	4638      	mov	r0, r7
        color = newColor;
 80072e2:	f8c4 51e0 	str.w	r5, [r4, #480]	; 0x1e0
        linespace = space;
 80072e6:	f8a4 a1e4 	strh.w	sl, [r4, #484]	; 0x1e4
        boundingArea = calculateBoundingArea();
 80072ea:	f00b fc27 	bl	8012b3c <_ZNK8touchgfx8TextArea21calculateBoundingAreaEv>
 80072ee:	e897 0007 	ldmia.w	r7, {r0, r1, r2}
 80072f2:	f108 033c 	add.w	r3, r8, #60	; 0x3c
 80072f6:	e883 0007 	stmia.w	r3, {r0, r1, r2}
 80072fa:	f8df 9148 	ldr.w	r9, [pc, #328]	; 8007444 <_ZN26Measurement_SingleViewBaseC1Ev+0x444>
 80072fe:	f8cd 9028 	str.w	r9, [sp, #40]	; 0x28
 8007302:	2349      	movs	r3, #73	; 0x49
    textArea2.setTypedText(touchgfx::TypedText(T___SINGLEUSE_T0FJ));
 8007304:	a90a      	add	r1, sp, #40	; 0x28
 8007306:	4640      	mov	r0, r8
 8007308:	f8ad 302c 	strh.w	r3, [sp, #44]	; 0x2c
 800730c:	f00b feb0 	bl	8013070 <_ZN8touchgfx8TextArea12setTypedTextERKNS_9TypedTextE>
 8007310:	4641      	mov	r1, r8
 8007312:	4630      	mov	r0, r6
 8007314:	f009 f884 	bl	8010420 <_ZN8touchgfx9Container3addERNS_8DrawableE>
    textArea1.setXY(54, 12);
 8007318:	ee18 0a10 	vmov	r0, s16
 800731c:	220c      	movs	r2, #12
 800731e:	2136      	movs	r1, #54	; 0x36
 8007320:	f7fb fb02 	bl	8002928 <_ZN8touchgfx8Drawable5setXYEss>
 8007324:	ee18 1a10 	vmov	r1, s16
 8007328:	4638      	mov	r0, r7
        color = newColor;
 800732a:	f8c4 5228 	str.w	r5, [r4, #552]	; 0x228
        linespace = space;
 800732e:	f8a4 a22c 	strh.w	sl, [r4, #556]	; 0x22c
        boundingArea = calculateBoundingArea();
 8007332:	f00b fc03 	bl	8012b3c <_ZNK8touchgfx8TextArea21calculateBoundingAreaEv>
 8007336:	e897 0007 	ldmia.w	r7, {r0, r1, r2}
 800733a:	ee18 3a10 	vmov	r3, s16
 800733e:	333c      	adds	r3, #60	; 0x3c
 8007340:	e883 0007 	stmia.w	r3, {r0, r1, r2}
 8007344:	2348      	movs	r3, #72	; 0x48
    textArea1.setTypedText(touchgfx::TypedText(T___SINGLEUSE_3BUV));
 8007346:	ee18 0a10 	vmov	r0, s16
 800734a:	a90a      	add	r1, sp, #40	; 0x28
 800734c:	f8ad 302c 	strh.w	r3, [sp, #44]	; 0x2c
 8007350:	f8cd 9028 	str.w	r9, [sp, #40]	; 0x28
 8007354:	f00b fe8c 	bl	8013070 <_ZN8touchgfx8TextArea12setTypedTextERKNS_9TypedTextE>
 8007358:	ee18 1a10 	vmov	r1, s16
 800735c:	4630      	mov	r0, r6
 800735e:	f009 f85f 	bl	8010420 <_ZN8touchgfx9Container3addERNS_8DrawableE>
    buttonWithLabel3.setXY(33, 240);
 8007362:	ee19 0a10 	vmov	r0, s18
 8007366:	22f0      	movs	r2, #240	; 0xf0
 8007368:	2121      	movs	r1, #33	; 0x21
 800736a:	f7fb fadd 	bl	8002928 <_ZN8touchgfx8Drawable5setXYEss>
 800736e:	f04f 0903 	mov.w	r9, #3
    buttonWithLabel3.setBitmaps(touchgfx::Bitmap(BITMAP_ALTERNATE_THEME_IMAGES_WIDGETS_BUTTON_REGULAR_HEIGHT_50_SMALL_ROUND_PRESSED_ID), touchgfx::Bitmap(BITMAP_ALTERNATE_THEME_IMAGES_WIDGETS_BUTTON_REGULAR_HEIGHT_50_SMALL_ROUND_NORMAL_ID));
 8007372:	aa0a      	add	r2, sp, #40	; 0x28
 8007374:	f04f 0802 	mov.w	r8, #2
 8007378:	a909      	add	r1, sp, #36	; 0x24
 800737a:	ee19 0a10 	vmov	r0, s18
 800737e:	f8ad 9024 	strh.w	r9, [sp, #36]	; 0x24
 8007382:	f8ad 8028 	strh.w	r8, [sp, #40]	; 0x28
    buttonWithLabel3.setAction(buttonCallback);
 8007386:	f504 5789 	add.w	r7, r4, #4384	; 0x1120
    buttonWithLabel3.setBitmaps(touchgfx::Bitmap(BITMAP_ALTERNATE_THEME_IMAGES_WIDGETS_BUTTON_REGULAR_HEIGHT_50_SMALL_ROUND_PRESSED_ID), touchgfx::Bitmap(BITMAP_ALTERNATE_THEME_IMAGES_WIDGETS_BUTTON_REGULAR_HEIGHT_50_SMALL_ROUND_NORMAL_ID));
 800738a:	f00c fa2c 	bl	80137e6 <_ZN8touchgfx6Button10setBitmapsERKNS_6BitmapES3_>
class TypedText
 800738e:	2347      	movs	r3, #71	; 0x47
 8007390:	f8a4 3278 	strh.w	r3, [r4, #632]	; 0x278
    buttonWithLabel3.setAction(buttonCallback);
 8007394:	3710      	adds	r7, #16
        updateTextPosition();
 8007396:	ee19 0a10 	vmov	r0, s18
 800739a:	f7fb fb09 	bl	80029b0 <_ZN8touchgfx15ButtonWithLabel18updateTextPositionEv>
 800739e:	ee19 1a10 	vmov	r1, s18
 80073a2:	4630      	mov	r0, r6
        colorPressed = col;
 80073a4:	e9c4 559f 	strd	r5, r5, [r4, #636]	; 0x27c
 80073a8:	f8c4 7268 	str.w	r7, [r4, #616]	; 0x268
 80073ac:	f009 f838 	bl	8010420 <_ZN8touchgfx9Container3addERNS_8DrawableE>
    buttonWithLabel2.setXY(33, 170);
 80073b0:	ee19 0a90 	vmov	r0, s19
 80073b4:	22aa      	movs	r2, #170	; 0xaa
 80073b6:	2121      	movs	r1, #33	; 0x21
 80073b8:	f7fb fab6 	bl	8002928 <_ZN8touchgfx8Drawable5setXYEss>
    buttonWithLabel2.setBitmaps(touchgfx::Bitmap(BITMAP_ALTERNATE_THEME_IMAGES_WIDGETS_BUTTON_REGULAR_HEIGHT_50_SMALL_ROUND_PRESSED_ID), touchgfx::Bitmap(BITMAP_ALTERNATE_THEME_IMAGES_WIDGETS_BUTTON_REGULAR_HEIGHT_50_SMALL_ROUND_NORMAL_ID));
 80073bc:	aa0a      	add	r2, sp, #40	; 0x28
 80073be:	a909      	add	r1, sp, #36	; 0x24
 80073c0:	ee19 0a90 	vmov	r0, s19
 80073c4:	f8ad 9024 	strh.w	r9, [sp, #36]	; 0x24
 80073c8:	f8ad 8028 	strh.w	r8, [sp, #40]	; 0x28
 80073cc:	f00c fa0b 	bl	80137e6 <_ZN8touchgfx6Button10setBitmapsERKNS_6BitmapES3_>
 80073d0:	2346      	movs	r3, #70	; 0x46
 80073d2:	f8a4 32c0 	strh.w	r3, [r4, #704]	; 0x2c0
        updateTextPosition();
 80073d6:	ee19 0a90 	vmov	r0, s19
 80073da:	f7fb fae9 	bl	80029b0 <_ZN8touchgfx15ButtonWithLabel18updateTextPositionEv>
 80073de:	ee19 1a90 	vmov	r1, s19
 80073e2:	4630      	mov	r0, r6
        colorPressed = col;
 80073e4:	e9c4 55b1 	strd	r5, r5, [r4, #708]	; 0x2c4
 80073e8:	f8c4 72b0 	str.w	r7, [r4, #688]	; 0x2b0
 80073ec:	f009 f818 	bl	8010420 <_ZN8touchgfx9Container3addERNS_8DrawableE>
    buttonWithLabel1.setXY(33, 100);
 80073f0:	ee1a 0a10 	vmov	r0, s20
 80073f4:	2264      	movs	r2, #100	; 0x64
 80073f6:	2121      	movs	r1, #33	; 0x21
 80073f8:	f7fb fa96 	bl	8002928 <_ZN8touchgfx8Drawable5setXYEss>
    buttonWithLabel1.setBitmaps(touchgfx::Bitmap(BITMAP_ALTERNATE_THEME_IMAGES_WIDGETS_BUTTON_REGULAR_HEIGHT_50_SMALL_ROUND_PRESSED_ID), touchgfx::Bitmap(BITMAP_ALTERNATE_THEME_IMAGES_WIDGETS_BUTTON_REGULAR_HEIGHT_50_SMALL_ROUND_NORMAL_ID));
 80073fc:	aa0a      	add	r2, sp, #40	; 0x28
 80073fe:	a909      	add	r1, sp, #36	; 0x24
 8007400:	ee1a 0a10 	vmov	r0, s20
 8007404:	f8ad 9024 	strh.w	r9, [sp, #36]	; 0x24
 8007408:	f8ad 8028 	strh.w	r8, [sp, #40]	; 0x28
 800740c:	f00c f9eb 	bl	80137e6 <_ZN8touchgfx6Button10setBitmapsERKNS_6BitmapES3_>
 8007410:	2345      	movs	r3, #69	; 0x45
        updateTextPosition();
 8007412:	ee1a 0a10 	vmov	r0, s20
 8007416:	f8a4 3308 	strh.w	r3, [r4, #776]	; 0x308
 800741a:	f7fb fac9 	bl	80029b0 <_ZN8touchgfx15ButtonWithLabel18updateTextPositionEv>
 800741e:	4630      	mov	r0, r6
        colorPressed = col;
 8007420:	e9c4 55c3 	strd	r5, r5, [r4, #780]	; 0x30c
 8007424:	ee1a 1a10 	vmov	r1, s20
 8007428:	f8c4 72f8 	str.w	r7, [r4, #760]	; 0x2f8
 800742c:	f008 fff8 	bl	8010420 <_ZN8touchgfx9Container3addERNS_8DrawableE>
}
 8007430:	4620      	mov	r0, r4
 8007432:	b00d      	add	sp, #52	; 0x34
 8007434:	ecbd 8b06 	vpop	{d8-d10}
 8007438:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
 800743c:	20013880 	.word	0x20013880
 8007440:	0802ce7d 	.word	0x0802ce7d
 8007444:	0802cef0 	.word	0x0802cef0

08007448 <_ZN37Measurement_Single_Display_1PViewBase7testGuiEv>:
     * Virtual Action Handlers
     */
    virtual void testGui()
    {
        // Override and implement this function in Measurement_Single_Display_1P
    }
 8007448:	4770      	bx	lr

0800744a <_ZN37Measurement_Single_Display_1PViewBase11setupScreenEv>:
}

void Measurement_Single_Display_1PViewBase::setupScreen()
{

}
 800744a:	4770      	bx	lr

0800744c <_ZN8touchgfx8CallbackI37Measurement_Single_Display_1PViewBaseRKNS_14AbstractButtonEvvED1Ev>:
struct Callback<dest_type, T1, void, void> : public GenericCallback<T1>
 800744c:	4770      	bx	lr

0800744e <_ZN8touchgfx8CallbackI37Measurement_Single_Display_1PViewBaseRKNS_14AbstractButtonEvvE7executeES4_>:
    virtual void execute(T1 t1)
 800744e:	b430      	push	{r4, r5}
        (pobject->*pmemfun)(t1);
 8007450:	68c2      	ldr	r2, [r0, #12]
 8007452:	6844      	ldr	r4, [r0, #4]
 8007454:	1055      	asrs	r5, r2, #1
    virtual void execute(T1 t1)
 8007456:	4603      	mov	r3, r0
        (pobject->*pmemfun)(t1);
 8007458:	eb04 0062 	add.w	r0, r4, r2, asr #1
 800745c:	07d2      	lsls	r2, r2, #31
 800745e:	bf48      	it	mi
 8007460:	5962      	ldrmi	r2, [r4, r5]
 8007462:	689b      	ldr	r3, [r3, #8]
    }
 8007464:	bc30      	pop	{r4, r5}
        (pobject->*pmemfun)(t1);
 8007466:	bf48      	it	mi
 8007468:	58d3      	ldrmi	r3, [r2, r3]
 800746a:	4718      	bx	r3

0800746c <_ZNK8touchgfx8CallbackI37Measurement_Single_Display_1PViewBaseRKNS_14AbstractButtonEvvE7isValidEv>:
        return (pobject != 0) && (pmemfun != 0);
 800746c:	6843      	ldr	r3, [r0, #4]
 800746e:	b12b      	cbz	r3, 800747c <_ZNK8touchgfx8CallbackI37Measurement_Single_Display_1PViewBaseRKNS_14AbstractButtonEvvE7isValidEv+0x10>
 8007470:	6883      	ldr	r3, [r0, #8]
 8007472:	b92b      	cbnz	r3, 8007480 <_ZNK8touchgfx8CallbackI37Measurement_Single_Display_1PViewBaseRKNS_14AbstractButtonEvvE7isValidEv+0x14>
 8007474:	68c0      	ldr	r0, [r0, #12]
 8007476:	f000 0001 	and.w	r0, r0, #1
 800747a:	4770      	bx	lr
 800747c:	4618      	mov	r0, r3
 800747e:	4770      	bx	lr
 8007480:	2001      	movs	r0, #1
    }
 8007482:	4770      	bx	lr

08007484 <_ZN8touchgfx8CallbackI37Measurement_Single_Display_1PViewBaseRKNS_14AbstractButtonEvvED0Ev>:
struct Callback<dest_type, T1, void, void> : public GenericCallback<T1>
 8007484:	b510      	push	{r4, lr}
 8007486:	2110      	movs	r1, #16
 8007488:	4604      	mov	r4, r0
 800748a:	f023 f956 	bl	802a73a <_ZdlPvj>
 800748e:	4620      	mov	r0, r4
 8007490:	bd10      	pop	{r4, pc}
	...

08007494 <_ZN37Measurement_Single_Display_1PViewBaseD1Ev>:
Measurement_Single_Display_1PViewBase::~Measurement_Single_Display_1PViewBase()
 8007494:	b510      	push	{r4, lr}
 8007496:	4b03      	ldr	r3, [pc, #12]	; (80074a4 <_ZN37Measurement_Single_Display_1PViewBaseD1Ev+0x10>)
 8007498:	6003      	str	r3, [r0, #0]
 800749a:	4604      	mov	r4, r0
    touchgfx::CanvasWidgetRenderer::resetBuffer();
 800749c:	f00d fb96 	bl	8014bcc <_ZN8touchgfx20CanvasWidgetRenderer11resetBufferEv>
}
 80074a0:	4620      	mov	r0, r4
 80074a2:	bd10      	pop	{r4, pc}
 80074a4:	0802e658 	.word	0x0802e658

080074a8 <_ZN37Measurement_Single_Display_1PViewBaseD0Ev>:
Measurement_Single_Display_1PViewBase::~Measurement_Single_Display_1PViewBase()
 80074a8:	b507      	push	{r0, r1, r2, lr}
 80074aa:	4b07      	ldr	r3, [pc, #28]	; (80074c8 <_ZN37Measurement_Single_Display_1PViewBaseD0Ev+0x20>)
 80074ac:	6003      	str	r3, [r0, #0]
 80074ae:	9001      	str	r0, [sp, #4]
    touchgfx::CanvasWidgetRenderer::resetBuffer();
 80074b0:	f00d fb8c 	bl	8014bcc <_ZN8touchgfx20CanvasWidgetRenderer11resetBufferEv>
}
 80074b4:	9801      	ldr	r0, [sp, #4]
 80074b6:	f241 31f8 	movw	r1, #5112	; 0x13f8
 80074ba:	f023 f93e 	bl	802a73a <_ZdlPvj>
 80074be:	9801      	ldr	r0, [sp, #4]
 80074c0:	b003      	add	sp, #12
 80074c2:	f85d fb04 	ldr.w	pc, [sp], #4
 80074c6:	bf00      	nop
 80074c8:	0802e658 	.word	0x0802e658

080074cc <_ZN37Measurement_Single_Display_1PViewBase15handleTickEventEv>:
        application().gotoMeasurement_SingleScreenWipeTransitionEast();
    }
}

void Measurement_Single_Display_1PViewBase::handleTickEvent()
{
 80074cc:	b510      	push	{r4, lr}
    frameCountInteraction2Interval++;
 80074ce:	f500 5480 	add.w	r4, r0, #4096	; 0x1000
 80074d2:	f8d4 23f4 	ldr.w	r2, [r4, #1012]	; 0x3f4
 80074d6:	3201      	adds	r2, #1
    if(frameCountInteraction2Interval == TICK_INTERACTION2_INTERVAL)
 80074d8:	2a05      	cmp	r2, #5
    frameCountInteraction2Interval++;
 80074da:	f8c4 23f4 	str.w	r2, [r4, #1012]	; 0x3f4
    if(frameCountInteraction2Interval == TICK_INTERACTION2_INTERVAL)
 80074de:	d105      	bne.n	80074ec <_ZN37Measurement_Single_Display_1PViewBase15handleTickEventEv+0x20>
    {
        //Interaction2
        //When every N tick call virtual function
        //Call testGui
        testGui();
 80074e0:	6803      	ldr	r3, [r0, #0]
 80074e2:	6adb      	ldr	r3, [r3, #44]	; 0x2c
 80074e4:	4798      	blx	r3
        frameCountInteraction2Interval = 0;
 80074e6:	2300      	movs	r3, #0
 80074e8:	f8c4 33f4 	str.w	r3, [r4, #1012]	; 0x3f4
    }
}
 80074ec:	bd10      	pop	{r4, pc}

080074ee <_ZN37Measurement_Single_Display_1PViewBase21buttonCallbackHandlerERKN8touchgfx14AbstractButtonE>:
    if (&src == &buttonWithLabel3)
 80074ee:	f500 60aa 	add.w	r0, r0, #1360	; 0x550
 80074f2:	4288      	cmp	r0, r1
{
 80074f4:	b508      	push	{r3, lr}
    if (&src == &buttonWithLabel3)
 80074f6:	d105      	bne.n	8007504 <_ZN37Measurement_Single_Display_1PViewBase21buttonCallbackHandlerERKN8touchgfx14AbstractButtonE+0x16>

protected:
    FrontendApplication& application() {
        return *static_cast<FrontendApplication*>(touchgfx::Application::getInstance());
 80074f8:	f00f f86a 	bl	80165d0 <_ZN8touchgfx11Application11getInstanceEv>
}
 80074fc:	e8bd 4008 	ldmia.w	sp!, {r3, lr}
        application().gotoMeasurement_SingleScreenWipeTransitionEast();
 8007500:	f7fd b920 	b.w	8004744 <_ZN23FrontendApplicationBase46gotoMeasurement_SingleScreenWipeTransitionEastEv>
}
 8007504:	bd08      	pop	{r3, pc}
	...

08007508 <_ZN37Measurement_Single_Display_1PViewBaseC1Ev>:
Measurement_Single_Display_1PViewBase::Measurement_Single_Display_1PViewBase() :
 8007508:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 800750c:	ed2d 8b0a 	vpush	{d8-d12}
 8007510:	4604      	mov	r4, r0
 8007512:	b08d      	sub	sp, #52	; 0x34
    frameCountInteraction2Interval(0)
 8007514:	46a3      	mov	fp, r4
 8007516:	2500      	movs	r5, #0
 8007518:	f010 fcda 	bl	8017ed0 <_ZN8touchgfx6ScreenC1Ev>
 800751c:	4baa      	ldr	r3, [pc, #680]	; (80077c8 <_ZN37Measurement_Single_Display_1PViewBaseC1Ev+0x2c0>)
 800751e:	63e5      	str	r5, [r4, #60]	; 0x3c
 8007520:	f84b 3b40 	str.w	r3, [fp], #64
        : Widget(), alpha(255), color(0)
 8007524:	2226      	movs	r2, #38	; 0x26
 8007526:	4629      	mov	r1, r5
 8007528:	4658      	mov	r0, fp
 800752a:	f024 f91e 	bl	802b76a <memset>
 800752e:	4658      	mov	r0, fp
 8007530:	f7fb fa2c 	bl	800298c <_ZN8touchgfx6WidgetC1Ev>
 8007534:	f104 066c 	add.w	r6, r4, #108	; 0x6c
 8007538:	27ff      	movs	r7, #255	; 0xff
 800753a:	4ba4      	ldr	r3, [pc, #656]	; (80077cc <_ZN37Measurement_Single_Display_1PViewBaseC1Ev+0x2c4>)
 800753c:	6423      	str	r3, [r4, #64]	; 0x40
        : Widget(), bitmap(bmp), alpha(255)
 800753e:	2226      	movs	r2, #38	; 0x26
 8007540:	f64f 73ff 	movw	r3, #65535	; 0xffff
 8007544:	4629      	mov	r1, r5
 8007546:	f884 7066 	strb.w	r7, [r4, #102]	; 0x66
 800754a:	4630      	mov	r0, r6
 800754c:	66a5      	str	r5, [r4, #104]	; 0x68
 800754e:	f8ad 3028 	strh.w	r3, [sp, #40]	; 0x28
 8007552:	f024 f90a 	bl	802b76a <memset>
 8007556:	4630      	mov	r0, r6
 8007558:	f7fb fa18 	bl	800298c <_ZN8touchgfx6WidgetC1Ev>
 800755c:	4b9c      	ldr	r3, [pc, #624]	; (80077d0 <_ZN37Measurement_Single_Display_1PViewBaseC1Ev+0x2c8>)
 800755e:	66e3      	str	r3, [r4, #108]	; 0x6c
 8007560:	f8bd 3028 	ldrh.w	r3, [sp, #40]	; 0x28
 8007564:	f8a4 3092 	strh.w	r3, [r4, #146]	; 0x92
        Image::setBitmap(bmp);
 8007568:	a90a      	add	r1, sp, #40	; 0x28
 800756a:	4630      	mov	r0, r6
        : Widget(), bitmap(bmp), alpha(255)
 800756c:	f884 7094 	strb.w	r7, [r4, #148]	; 0x94
        Image::setBitmap(bmp);
 8007570:	f00c fb2f 	bl	8013bd2 <_ZN8touchgfx5Image9setBitmapERKNS_6BitmapE>
 8007574:	f104 0398 	add.w	r3, r4, #152	; 0x98
 8007578:	f104 08e0 	add.w	r8, r4, #224	; 0xe0
 800757c:	4618      	mov	r0, r3
 800757e:	ee09 3a10 	vmov	s18, r3
 8007582:	f504 7920 	add.w	r9, r4, #640	; 0x280
 8007586:	f7fb fa65 	bl	8002a54 <_ZN8touchgfx8TextAreaC1Ev>
 800758a:	4640      	mov	r0, r8
 800758c:	f00b ffe4 	bl	8013558 <_ZN8touchgfx5GaugeC1Ev>
        : TextArea()
 8007590:	4648      	mov	r0, r9
 8007592:	f7fb fa5f 	bl	8002a54 <_ZN8touchgfx8TextAreaC1Ev>
        : TextAreaWithWildcardBase(), wc1(0)
 8007596:	4f8f      	ldr	r7, [pc, #572]	; (80077d4 <_ZN37Measurement_Single_Display_1PViewBaseC1Ev+0x2cc>)
 8007598:	f8c4 7280 	str.w	r7, [r4, #640]	; 0x280
 800759c:	f504 7333 	add.w	r3, r4, #716	; 0x2cc
        : TextArea()
 80075a0:	4618      	mov	r0, r3
        : TextAreaWithWildcardBase(), wc1(0)
 80075a2:	f8c4 52c8 	str.w	r5, [r4, #712]	; 0x2c8
 80075a6:	ee09 3a90 	vmov	s19, r3
        : TextArea()
 80075aa:	f7fb fa53 	bl	8002a54 <_ZN8touchgfx8TextAreaC1Ev>
 80075ae:	f504 7346 	add.w	r3, r4, #792	; 0x318
        : TextAreaWithWildcardBase(), wc1(0)
 80075b2:	f8c4 72cc 	str.w	r7, [r4, #716]	; 0x2cc
        : TextArea()
 80075b6:	4618      	mov	r0, r3
        : TextAreaWithWildcardBase(), wc1(0)
 80075b8:	f8c4 5314 	str.w	r5, [r4, #788]	; 0x314
 80075bc:	ee0a 3a10 	vmov	s20, r3
        : TextArea()
 80075c0:	f7fb fa48 	bl	8002a54 <_ZN8touchgfx8TextAreaC1Ev>
 80075c4:	f504 7359 	add.w	r3, r4, #868	; 0x364
        : TextAreaWithWildcardBase(), wc1(0)
 80075c8:	f8c4 7318 	str.w	r7, [r4, #792]	; 0x318
 80075cc:	4618      	mov	r0, r3
 80075ce:	f8c4 5360 	str.w	r5, [r4, #864]	; 0x360
 80075d2:	ee0a 3a90 	vmov	s21, r3
 80075d6:	f7fb fa3d 	bl	8002a54 <_ZN8touchgfx8TextAreaC1Ev>
 80075da:	f504 736b 	add.w	r3, r4, #940	; 0x3ac
 80075de:	4618      	mov	r0, r3
 80075e0:	ee0b 3a10 	vmov	s22, r3
 80075e4:	f7fb fa36 	bl	8002a54 <_ZN8touchgfx8TextAreaC1Ev>
 80075e8:	f504 737d 	add.w	r3, r4, #1012	; 0x3f4
 80075ec:	4618      	mov	r0, r3
 80075ee:	f204 4a3c 	addw	sl, r4, #1084	; 0x43c
 80075f2:	ee0b 3a90 	vmov	s23, r3
 80075f6:	f7fb fa2d 	bl	8002a54 <_ZN8touchgfx8TextAreaC1Ev>
 80075fa:	4650      	mov	r0, sl
 80075fc:	f00a ffdc 	bl	80125b8 <_ZN8touchgfx4LineC1Ev>
 8007600:	f204 43ac 	addw	r3, r4, #1196	; 0x4ac
        : AbstractPainterRGB565(), AbstractPainterColor(color)
 8007604:	4618      	mov	r0, r3
 8007606:	9302      	str	r3, [sp, #8]
 8007608:	f7fa ffc4 	bl	8002594 <_ZN8touchgfx21AbstractPainterRGB565C1Ev>
 800760c:	4b72      	ldr	r3, [pc, #456]	; (80077d8 <_ZN37Measurement_Single_Display_1PViewBaseC1Ev+0x2d0>)
 800760e:	f8c4 34ac 	str.w	r3, [r4, #1196]	; 0x4ac
 8007612:	3324      	adds	r3, #36	; 0x24
 8007614:	f8c4 34b4 	str.w	r3, [r4, #1204]	; 0x4b4
 8007618:	f504 6398 	add.w	r3, r4, #1216	; 0x4c0
 800761c:	4618      	mov	r0, r3
 800761e:	f8c4 54b8 	str.w	r5, [r4, #1208]	; 0x4b8
 8007622:	ee08 3a10 	vmov	s16, r3
 8007626:	f7fb fa15 	bl	8002a54 <_ZN8touchgfx8TextAreaC1Ev>
 800762a:	f504 63a1 	add.w	r3, r4, #1288	; 0x508
 800762e:	4618      	mov	r0, r3
 8007630:	ee08 3a90 	vmov	s17, r3
 8007634:	f7fb fa0e 	bl	8002a54 <_ZN8touchgfx8TextAreaC1Ev>
 8007638:	f504 63aa 	add.w	r3, r4, #1360	; 0x550
 800763c:	4618      	mov	r0, r3
 800763e:	ee0c 3a10 	vmov	s24, r3
 8007642:	f00c fbfd 	bl	8013e40 <_ZN8touchgfx15ButtonWithLabelC1Ev>
        : pobject(pObject), pmemfun(pmemfun_1)
 8007646:	4a65      	ldr	r2, [pc, #404]	; (80077dc <_ZN37Measurement_Single_Display_1PViewBaseC1Ev+0x2d4>)
 8007648:	f504 5380 	add.w	r3, r4, #4096	; 0x1000
 800764c:	e9c3 24f9 	strd	r2, r4, [r3, #996]	; 0x3e4
 8007650:	4a63      	ldr	r2, [pc, #396]	; (80077e0 <_ZN37Measurement_Single_Display_1PViewBaseC1Ev+0x2d8>)
 8007652:	f8c3 53f4 	str.w	r5, [r3, #1012]	; 0x3f4
 8007656:	e9c3 25fb 	strd	r2, r5, [r3, #1004]	; 0x3ec
    touchgfx::CanvasWidgetRenderer::setupBuffer(canvasBuffer, CANVAS_BUFFER_SIZE);
 800765a:	f44f 6161 	mov.w	r1, #3600	; 0xe10
 800765e:	f204 50d4 	addw	r0, r4, #1492	; 0x5d4
 8007662:	f00d faa9 	bl	8014bb8 <_ZN8touchgfx20CanvasWidgetRenderer11setupBufferEPhj>
    __background.setPosition(0, 0, 240, 320);
 8007666:	f44f 73a0 	mov.w	r3, #320	; 0x140
 800766a:	462a      	mov	r2, r5
 800766c:	4658      	mov	r0, fp
 800766e:	9300      	str	r3, [sp, #0]
 8007670:	4629      	mov	r1, r5
 8007672:	23f0      	movs	r3, #240	; 0xf0
 8007674:	f7fb f965 	bl	8002942 <_ZN8touchgfx8Drawable11setPositionEssss>
 8007678:	1d27      	adds	r7, r4, #4
        color = newColor;
 800767a:	f04f 437f 	mov.w	r3, #4278190080	; 0xff000000
 800767e:	66a3      	str	r3, [r4, #104]	; 0x68
 8007680:	4659      	mov	r1, fp
 8007682:	4638      	mov	r0, r7
 8007684:	f008 fecc 	bl	8010420 <_ZN8touchgfx9Container3addERNS_8DrawableE>
    image1.setXY(0, 0);
 8007688:	462a      	mov	r2, r5
 800768a:	4630      	mov	r0, r6
 800768c:	4629      	mov	r1, r5
 800768e:	f7fb f94b 	bl	8002928 <_ZN8touchgfx8Drawable5setXYEss>
 8007692:	f04f 0308 	mov.w	r3, #8
    image1.setBitmap(touchgfx::Bitmap(BITMAP_BACKGROUND_2_RESIZED_4_ID));
 8007696:	4630      	mov	r0, r6
 8007698:	a90a      	add	r1, sp, #40	; 0x28
 800769a:	f8ad 3028 	strh.w	r3, [sp, #40]	; 0x28
 800769e:	f00c fa98 	bl	8013bd2 <_ZN8touchgfx5Image9setBitmapERKNS_6BitmapE>
 80076a2:	4631      	mov	r1, r6
 80076a4:	4638      	mov	r0, r7
 80076a6:	f008 febb 	bl	8010420 <_ZN8touchgfx9Container3addERNS_8DrawableE>
 80076aa:	ae04      	add	r6, sp, #16
    textArea3.setXY(31, 60);
 80076ac:	223c      	movs	r2, #60	; 0x3c
 80076ae:	ee19 0a10 	vmov	r0, s18
 80076b2:	211f      	movs	r1, #31
        color = newColor;
 80076b4:	f04f 3bff 	mov.w	fp, #4294967295
 80076b8:	f7fb f936 	bl	8002928 <_ZN8touchgfx8Drawable5setXYEss>
        boundingArea = calculateBoundingArea();
 80076bc:	ee19 1a10 	vmov	r1, s18
 80076c0:	4630      	mov	r0, r6
        color = newColor;
 80076c2:	f8c4 b0c8 	str.w	fp, [r4, #200]	; 0xc8
        linespace = space;
 80076c6:	f8a4 50cc 	strh.w	r5, [r4, #204]	; 0xcc
        boundingArea = calculateBoundingArea();
 80076ca:	f00b fa37 	bl	8012b3c <_ZNK8touchgfx8TextArea21calculateBoundingAreaEv>
 80076ce:	e896 0007 	ldmia.w	r6, {r0, r1, r2}
 80076d2:	f104 03d4 	add.w	r3, r4, #212	; 0xd4
 80076d6:	e883 0007 	stmia.w	r3, {r0, r1, r2}
        : typedTextId(id)
 80076da:	4b42      	ldr	r3, [pc, #264]	; (80077e4 <_ZN37Measurement_Single_Display_1PViewBaseC1Ev+0x2dc>)
 80076dc:	930a      	str	r3, [sp, #40]	; 0x28
    textArea3.setTypedText(touchgfx::TypedText(T___SINGLEUSE_M3QF));
 80076de:	ee19 0a10 	vmov	r0, s18
 80076e2:	f04f 0335 	mov.w	r3, #53	; 0x35
 80076e6:	a90a      	add	r1, sp, #40	; 0x28
 80076e8:	f8ad 302c 	strh.w	r3, [sp, #44]	; 0x2c
 80076ec:	f00b fcc0 	bl	8013070 <_ZN8touchgfx8TextArea12setTypedTextERKNS_9TypedTextE>
 80076f0:	ee19 1a10 	vmov	r1, s18
 80076f4:	4638      	mov	r0, r7
 80076f6:	f008 fe93 	bl	8010420 <_ZN8touchgfx9Container3addERNS_8DrawableE>
 80076fa:	2304      	movs	r3, #4
    SMD1_gauge.setBackground(touchgfx::Bitmap(BITMAP_ALTERNATE_THEME_IMAGES_WIDGETS_GAUGE_SMALL_BACKGROUNDS_LIGHT_PRECISION_ID));
 80076fc:	4640      	mov	r0, r8
 80076fe:	a90a      	add	r1, sp, #40	; 0x28
 8007700:	f8ad 3028 	strh.w	r3, [sp, #40]	; 0x28
 8007704:	f008 fe1e 	bl	8010344 <_ZN8touchgfx25AbstractProgressIndicator13setBackgroundERKNS_6BitmapE>
    SMD1_gauge.setPosition(28, 94, 184, 106);
 8007708:	236a      	movs	r3, #106	; 0x6a
 800770a:	4640      	mov	r0, r8
 800770c:	9300      	str	r3, [sp, #0]
 800770e:	225e      	movs	r2, #94	; 0x5e
 8007710:	23b8      	movs	r3, #184	; 0xb8
 8007712:	211c      	movs	r1, #28
 8007714:	f7fb f915 	bl	8002942 <_ZN8touchgfx8Drawable11setPositionEssss>
    SMD1_gauge.setCenter(92, 92);
 8007718:	225c      	movs	r2, #92	; 0x5c
 800771a:	4611      	mov	r1, r2
 800771c:	4640      	mov	r0, r8
 800771e:	f00b ffc6 	bl	80136ae <_ZN8touchgfx5Gauge9setCenterEii>
    SMD1_gauge.setStartEndAngle(-90, 90);
 8007722:	4640      	mov	r0, r8
 8007724:	225a      	movs	r2, #90	; 0x5a
 8007726:	f06f 0159 	mvn.w	r1, #89	; 0x59
 800772a:	f00c f845 	bl	80137b8 <_ZN8touchgfx5Gauge16setStartEndAngleEii>
    SMD1_gauge.setRange(-90, 90);
 800772e:	462b      	mov	r3, r5
 8007730:	225a      	movs	r2, #90	; 0x5a
 8007732:	4640      	mov	r0, r8
 8007734:	f06f 0159 	mvn.w	r1, #89	; 0x59
 8007738:	9500      	str	r5, [sp, #0]
 800773a:	f008 fcb0 	bl	801009e <_ZN8touchgfx25AbstractProgressIndicator8setRangeEiitt>
    SMD1_gauge.setValue(0);
 800773e:	4640      	mov	r0, r8
 8007740:	4629      	mov	r1, r5
 8007742:	f00b ffe3 	bl	801370c <_ZN8touchgfx5Gauge8setValueEi>
    SMD1_gauge.setNeedle(BITMAP_ALTERNATE_THEME_IMAGES_WIDGETS_GAUGE_SMALL_NEEDLES_ROUGH_ID, 8, 53);
 8007746:	2335      	movs	r3, #53	; 0x35
 8007748:	2208      	movs	r2, #8
 800774a:	4640      	mov	r0, r8
 800774c:	2105      	movs	r1, #5
 800774e:	f00b ff99 	bl	8013684 <_ZN8touchgfx5Gauge9setNeedleEtss>
    SMD1_gauge.setMovingNeedleRenderingAlgorithm(touchgfx::TextureMapper::BILINEAR_INTERPOLATION);
 8007752:	4640      	mov	r0, r8
 8007754:	2101      	movs	r1, #1
 8007756:	f00b ff37 	bl	80135c8 <_ZN8touchgfx5Gauge33setMovingNeedleRenderingAlgorithmENS_13TextureMapper18RenderingAlgorithmE>
    SMD1_gauge.setSteadyNeedleRenderingAlgorithm(touchgfx::TextureMapper::BILINEAR_INTERPOLATION);
 800775a:	4640      	mov	r0, r8
 800775c:	2101      	movs	r1, #1
 800775e:	f00b ff36 	bl	80135ce <_ZN8touchgfx5Gauge33setSteadyNeedleRenderingAlgorithmENS_13TextureMapper18RenderingAlgorithmE>
 8007762:	4641      	mov	r1, r8
 8007764:	4638      	mov	r0, r7
 8007766:	f008 fe5b 	bl	8010420 <_ZN8touchgfx9Container3addERNS_8DrawableE>
    SMD1_Current.setPosition(0, 230, 240, 15);
 800776a:	230f      	movs	r3, #15
 800776c:	22e6      	movs	r2, #230	; 0xe6
 800776e:	9300      	str	r3, [sp, #0]
 8007770:	4629      	mov	r1, r5
 8007772:	23f0      	movs	r3, #240	; 0xf0
 8007774:	4648      	mov	r0, r9
 8007776:	f7fb f8e4 	bl	8002942 <_ZN8touchgfx8Drawable11setPositionEssss>
 800777a:	f8d4 3280 	ldr.w	r3, [r4, #640]	; 0x280
        color = newColor;
 800777e:	f8c4 b2b0 	str.w	fp, [r4, #688]	; 0x2b0
        boundingArea = calculateBoundingArea();
 8007782:	f8d3 3084 	ldr.w	r3, [r3, #132]	; 0x84
        linespace = space;
 8007786:	f8a4 52b4 	strh.w	r5, [r4, #692]	; 0x2b4
        boundingArea = calculateBoundingArea();
 800778a:	4649      	mov	r1, r9
 800778c:	4630      	mov	r0, r6
 800778e:	4798      	blx	r3
 8007790:	e896 0007 	ldmia.w	r6, {r0, r1, r2}
 8007794:	f504 732f 	add.w	r3, r4, #700	; 0x2bc
        assert(typedTexts != 0 && "TypedText database has not been initialized.");
 8007798:	f8df 8060 	ldr.w	r8, [pc, #96]	; 80077fc <_ZN37Measurement_Single_Display_1PViewBaseC1Ev+0x2f4>
 800779c:	e883 0007 	stmia.w	r3, {r0, r1, r2}
    Unicode::snprintf(SMD1_CurrentBuffer, SMD1_CURRENT_SIZE, "%s", touchgfx::TypedText(T___SINGLEUSE_1WKT).getText());
 80077a0:	f504 63b3 	add.w	r3, r4, #1432	; 0x598
 80077a4:	9303      	str	r3, [sp, #12]
 80077a6:	f8d8 3000 	ldr.w	r3, [r8]
 80077aa:	b92b      	cbnz	r3, 80077b8 <_ZN37Measurement_Single_Display_1PViewBaseC1Ev+0x2b0>
 80077ac:	4b0e      	ldr	r3, [pc, #56]	; (80077e8 <_ZN37Measurement_Single_Display_1PViewBaseC1Ev+0x2e0>)
 80077ae:	4a0f      	ldr	r2, [pc, #60]	; (80077ec <_ZN37Measurement_Single_Display_1PViewBaseC1Ev+0x2e4>)
 80077b0:	2160      	movs	r1, #96	; 0x60
        assert(hasValidId() && "typedTextId larger than numberOfTypedTexts.");
 80077b2:	480f      	ldr	r0, [pc, #60]	; (80077f0 <_ZN37Measurement_Single_Display_1PViewBaseC1Ev+0x2e8>)
 80077b4:	f023 fdd4 	bl	802b360 <__assert_func>
 80077b8:	4b0e      	ldr	r3, [pc, #56]	; (80077f4 <_ZN37Measurement_Single_Display_1PViewBaseC1Ev+0x2ec>)
 80077ba:	881b      	ldrh	r3, [r3, #0]
 80077bc:	2b15      	cmp	r3, #21
 80077be:	d81f      	bhi.n	8007800 <_ZN37Measurement_Single_Display_1PViewBaseC1Ev+0x2f8>
 80077c0:	4b0d      	ldr	r3, [pc, #52]	; (80077f8 <_ZN37Measurement_Single_Display_1PViewBaseC1Ev+0x2f0>)
 80077c2:	4a0a      	ldr	r2, [pc, #40]	; (80077ec <_ZN37Measurement_Single_Display_1PViewBaseC1Ev+0x2e4>)
 80077c4:	2161      	movs	r1, #97	; 0x61
 80077c6:	e7f4      	b.n	80077b2 <_ZN37Measurement_Single_Display_1PViewBaseC1Ev+0x2aa>
 80077c8:	0802e658 	.word	0x0802e658
 80077cc:	0802f444 	.word	0x0802f444
 80077d0:	0802f690 	.word	0x0802f690
 80077d4:	0802cf90 	.word	0x0802cf90
 80077d8:	0802f178 	.word	0x0802f178
 80077dc:	0802e640 	.word	0x0802e640
 80077e0:	080074ef 	.word	0x080074ef
 80077e4:	0802cef0 	.word	0x0802cef0
 80077e8:	0802cd40 	.word	0x0802cd40
 80077ec:	0802ce45 	.word	0x0802ce45
 80077f0:	0802cdbd 	.word	0x0802cdbd
 80077f4:	20013878 	.word	0x20013878
 80077f8:	0802ce04 	.word	0x0802ce04
 80077fc:	20013874 	.word	0x20013874
        return texts->getText(typedTextId);
 8007800:	4bdb      	ldr	r3, [pc, #876]	; (8007b70 <_ZN37Measurement_Single_Display_1PViewBaseC1Ev+0x668>)
 8007802:	2115      	movs	r1, #21
 8007804:	6818      	ldr	r0, [r3, #0]
 8007806:	f000 ff9f 	bl	8008748 <_ZNK8touchgfx5Texts7getTextEt>
 800780a:	4ada      	ldr	r2, [pc, #872]	; (8007b74 <_ZN37Measurement_Single_Display_1PViewBaseC1Ev+0x66c>)
 800780c:	4603      	mov	r3, r0
 800780e:	210a      	movs	r1, #10
 8007810:	9803      	ldr	r0, [sp, #12]
 8007812:	f012 f88b 	bl	801992c <_ZN8touchgfx7Unicode8snprintfEPttPKcz>
        wc1 = value;
 8007816:	9903      	ldr	r1, [sp, #12]
        : typedTextId(id)
 8007818:	4bd7      	ldr	r3, [pc, #860]	; (8007b78 <_ZN37Measurement_Single_Display_1PViewBaseC1Ev+0x670>)
 800781a:	f8c4 12c8 	str.w	r1, [r4, #712]	; 0x2c8
    SMD1_Current.setTypedText(touchgfx::TypedText(T___SINGLEUSE_Y5P8));
 800781e:	4648      	mov	r0, r9
 8007820:	930a      	str	r3, [sp, #40]	; 0x28
 8007822:	a90a      	add	r1, sp, #40	; 0x28
 8007824:	2318      	movs	r3, #24
 8007826:	f8ad 302c 	strh.w	r3, [sp, #44]	; 0x2c
 800782a:	f00b fc21 	bl	8013070 <_ZN8touchgfx8TextArea12setTypedTextERKNS_9TypedTextE>
 800782e:	4649      	mov	r1, r9
 8007830:	4638      	mov	r0, r7
 8007832:	f008 fdf5 	bl	8010420 <_ZN8touchgfx9Container3addERNS_8DrawableE>
    SMD1_Frequency.setPosition(0, 215, 240, 15);
 8007836:	210f      	movs	r1, #15
 8007838:	22d7      	movs	r2, #215	; 0xd7
 800783a:	ee19 0a90 	vmov	r0, s19
 800783e:	9100      	str	r1, [sp, #0]
 8007840:	23f0      	movs	r3, #240	; 0xf0
 8007842:	4629      	mov	r1, r5
 8007844:	f7fb f87d 	bl	8002942 <_ZN8touchgfx8Drawable11setPositionEssss>
 8007848:	f8d4 32cc 	ldr.w	r3, [r4, #716]	; 0x2cc
        color = newColor;
 800784c:	f8c4 b2fc 	str.w	fp, [r4, #764]	; 0x2fc
        boundingArea = calculateBoundingArea();
 8007850:	f8d3 3084 	ldr.w	r3, [r3, #132]	; 0x84
        linespace = space;
 8007854:	f8a4 5300 	strh.w	r5, [r4, #768]	; 0x300
        boundingArea = calculateBoundingArea();
 8007858:	ee19 1a90 	vmov	r1, s19
 800785c:	4630      	mov	r0, r6
 800785e:	4798      	blx	r3
 8007860:	e896 0007 	ldmia.w	r6, {r0, r1, r2}
 8007864:	f504 7342 	add.w	r3, r4, #776	; 0x308
 8007868:	e883 0007 	stmia.w	r3, {r0, r1, r2}
        assert(typedTexts != 0 && "TypedText database has not been initialized.");
 800786c:	f8d8 3000 	ldr.w	r3, [r8]
    Unicode::snprintf(SMD1_FrequencyBuffer, SMD1_FREQUENCY_SIZE, "%s", touchgfx::TypedText(T___SINGLEUSE_9OHS).getText());
 8007870:	f204 59ac 	addw	r9, r4, #1452	; 0x5ac
 8007874:	2b00      	cmp	r3, #0
 8007876:	d099      	beq.n	80077ac <_ZN37Measurement_Single_Display_1PViewBaseC1Ev+0x2a4>
        assert(hasValidId() && "typedTextId larger than numberOfTypedTexts.");
 8007878:	49c0      	ldr	r1, [pc, #768]	; (8007b7c <_ZN37Measurement_Single_Display_1PViewBaseC1Ev+0x674>)
 800787a:	880b      	ldrh	r3, [r1, #0]
 800787c:	2b16      	cmp	r3, #22
 800787e:	d99f      	bls.n	80077c0 <_ZN37Measurement_Single_Display_1PViewBaseC1Ev+0x2b8>
        return texts->getText(typedTextId);
 8007880:	4abb      	ldr	r2, [pc, #748]	; (8007b70 <_ZN37Measurement_Single_Display_1PViewBaseC1Ev+0x668>)
 8007882:	2116      	movs	r1, #22
 8007884:	6810      	ldr	r0, [r2, #0]
 8007886:	f000 ff5f 	bl	8008748 <_ZNK8touchgfx5Texts7getTextEt>
 800788a:	4aba      	ldr	r2, [pc, #744]	; (8007b74 <_ZN37Measurement_Single_Display_1PViewBaseC1Ev+0x66c>)
 800788c:	4603      	mov	r3, r0
 800788e:	210a      	movs	r1, #10
 8007890:	4648      	mov	r0, r9
 8007892:	f012 f84b 	bl	801992c <_ZN8touchgfx7Unicode8snprintfEPttPKcz>
        : typedTextId(id)
 8007896:	4bb8      	ldr	r3, [pc, #736]	; (8007b78 <_ZN37Measurement_Single_Display_1PViewBaseC1Ev+0x670>)
 8007898:	f8c4 9314 	str.w	r9, [r4, #788]	; 0x314
    SMD1_Frequency.setTypedText(touchgfx::TypedText(T___SINGLEUSE_PCCW));
 800789c:	a80a      	add	r0, sp, #40	; 0x28
 800789e:	4601      	mov	r1, r0
 80078a0:	930a      	str	r3, [sp, #40]	; 0x28
 80078a2:	ee19 0a90 	vmov	r0, s19
 80078a6:	2319      	movs	r3, #25
 80078a8:	f8ad 302c 	strh.w	r3, [sp, #44]	; 0x2c
 80078ac:	f00b fbe0 	bl	8013070 <_ZN8touchgfx8TextArea12setTypedTextERKNS_9TypedTextE>
 80078b0:	ee19 1a90 	vmov	r1, s19
 80078b4:	4638      	mov	r0, r7
 80078b6:	f008 fdb3 	bl	8010420 <_ZN8touchgfx9Container3addERNS_8DrawableE>
    SMD1_Distance.setPosition(0, 200, 240, 15);
 80078ba:	200f      	movs	r0, #15
 80078bc:	22c8      	movs	r2, #200	; 0xc8
 80078be:	9000      	str	r0, [sp, #0]
 80078c0:	23f0      	movs	r3, #240	; 0xf0
 80078c2:	ee1a 0a10 	vmov	r0, s20
 80078c6:	4629      	mov	r1, r5
 80078c8:	f7fb f83b 	bl	8002942 <_ZN8touchgfx8Drawable11setPositionEssss>
 80078cc:	f8d4 3318 	ldr.w	r3, [r4, #792]	; 0x318
        color = newColor;
 80078d0:	f8c4 b348 	str.w	fp, [r4, #840]	; 0x348
        boundingArea = calculateBoundingArea();
 80078d4:	f8d3 3084 	ldr.w	r3, [r3, #132]	; 0x84
        linespace = space;
 80078d8:	f8a4 534c 	strh.w	r5, [r4, #844]	; 0x34c
        boundingArea = calculateBoundingArea();
 80078dc:	ee1a 1a10 	vmov	r1, s20
 80078e0:	4630      	mov	r0, r6
 80078e2:	4798      	blx	r3
 80078e4:	e896 0007 	ldmia.w	r6, {r0, r1, r2}
 80078e8:	f504 7355 	add.w	r3, r4, #852	; 0x354
 80078ec:	e883 0007 	stmia.w	r3, {r0, r1, r2}
        assert(typedTexts != 0 && "TypedText database has not been initialized.");
 80078f0:	f8d8 3000 	ldr.w	r3, [r8]
    Unicode::snprintf(SMD1_DistanceBuffer, SMD1_DISTANCE_SIZE, "%s", touchgfx::TypedText(T___SINGLEUSE_LVUK).getText());
 80078f4:	f504 69b8 	add.w	r9, r4, #1472	; 0x5c0
 80078f8:	2b00      	cmp	r3, #0
 80078fa:	f43f af57 	beq.w	80077ac <_ZN37Measurement_Single_Display_1PViewBaseC1Ev+0x2a4>
        assert(hasValidId() && "typedTextId larger than numberOfTypedTexts.");
 80078fe:	499f      	ldr	r1, [pc, #636]	; (8007b7c <_ZN37Measurement_Single_Display_1PViewBaseC1Ev+0x674>)
 8007900:	880b      	ldrh	r3, [r1, #0]
 8007902:	2b17      	cmp	r3, #23
 8007904:	f67f af5c 	bls.w	80077c0 <_ZN37Measurement_Single_Display_1PViewBaseC1Ev+0x2b8>
        return texts->getText(typedTextId);
 8007908:	4a99      	ldr	r2, [pc, #612]	; (8007b70 <_ZN37Measurement_Single_Display_1PViewBaseC1Ev+0x668>)
 800790a:	2117      	movs	r1, #23
 800790c:	6810      	ldr	r0, [r2, #0]
 800790e:	f000 ff1b 	bl	8008748 <_ZNK8touchgfx5Texts7getTextEt>
 8007912:	4a98      	ldr	r2, [pc, #608]	; (8007b74 <_ZN37Measurement_Single_Display_1PViewBaseC1Ev+0x66c>)
 8007914:	4603      	mov	r3, r0
 8007916:	210a      	movs	r1, #10
 8007918:	4648      	mov	r0, r9
 800791a:	f012 f807 	bl	801992c <_ZN8touchgfx7Unicode8snprintfEPttPKcz>
        : typedTextId(id)
 800791e:	4b96      	ldr	r3, [pc, #600]	; (8007b78 <_ZN37Measurement_Single_Display_1PViewBaseC1Ev+0x670>)
 8007920:	930a      	str	r3, [sp, #40]	; 0x28
    SMD1_Distance.setTypedText(touchgfx::TypedText(T_SMD1_DISTANCE));
 8007922:	ee1a 0a10 	vmov	r0, s20
 8007926:	231a      	movs	r3, #26
 8007928:	a90a      	add	r1, sp, #40	; 0x28
 800792a:	f8c4 9360 	str.w	r9, [r4, #864]	; 0x360
 800792e:	f8ad 302c 	strh.w	r3, [sp, #44]	; 0x2c
 8007932:	f00b fb9d 	bl	8013070 <_ZN8touchgfx8TextArea12setTypedTextERKNS_9TypedTextE>
 8007936:	ee1a 1a10 	vmov	r1, s20
 800793a:	4638      	mov	r0, r7
 800793c:	f008 fd70 	bl	8010420 <_ZN8touchgfx9Container3addERNS_8DrawableE>
    textArea4.setXY(113, 76);
 8007940:	224c      	movs	r2, #76	; 0x4c
 8007942:	ee1a 0a90 	vmov	r0, s21
 8007946:	2171      	movs	r1, #113	; 0x71
 8007948:	f7fa ffee 	bl	8002928 <_ZN8touchgfx8Drawable5setXYEss>
 800794c:	ee1a 1a90 	vmov	r1, s21
 8007950:	4630      	mov	r0, r6
        color = newColor;
 8007952:	f8c4 b394 	str.w	fp, [r4, #916]	; 0x394
        linespace = space;
 8007956:	f8a4 5398 	strh.w	r5, [r4, #920]	; 0x398
        boundingArea = calculateBoundingArea();
 800795a:	f00b f8ef 	bl	8012b3c <_ZNK8touchgfx8TextArea21calculateBoundingAreaEv>
 800795e:	e896 0007 	ldmia.w	r6, {r0, r1, r2}
 8007962:	f504 7368 	add.w	r3, r4, #928	; 0x3a0
 8007966:	e883 0007 	stmia.w	r3, {r0, r1, r2}
 800796a:	4b83      	ldr	r3, [pc, #524]	; (8007b78 <_ZN37Measurement_Single_Display_1PViewBaseC1Ev+0x670>)
 800796c:	930a      	str	r3, [sp, #40]	; 0x28
    textArea4.setTypedText(touchgfx::TypedText(T___SINGLEUSE_Q5GP));
 800796e:	ee1a 0a90 	vmov	r0, s21
 8007972:	231b      	movs	r3, #27
 8007974:	a90a      	add	r1, sp, #40	; 0x28
 8007976:	f8ad 302c 	strh.w	r3, [sp, #44]	; 0x2c
 800797a:	f00b fb79 	bl	8013070 <_ZN8touchgfx8TextArea12setTypedTextERKNS_9TypedTextE>
 800797e:	ee1a 1a90 	vmov	r1, s21
 8007982:	4638      	mov	r0, r7
 8007984:	f008 fd4c 	bl	8010420 <_ZN8touchgfx9Container3addERNS_8DrawableE>
    textArea4_1.setXY(0, 185);
 8007988:	22b9      	movs	r2, #185	; 0xb9
 800798a:	ee1b 0a10 	vmov	r0, s22
 800798e:	4629      	mov	r1, r5
 8007990:	f7fa ffca 	bl	8002928 <_ZN8touchgfx8Drawable5setXYEss>
 8007994:	ee1b 1a10 	vmov	r1, s22
 8007998:	4630      	mov	r0, r6
        color = newColor;
 800799a:	f8c4 b3dc 	str.w	fp, [r4, #988]	; 0x3dc
        linespace = space;
 800799e:	f8a4 53e0 	strh.w	r5, [r4, #992]	; 0x3e0
        boundingArea = calculateBoundingArea();
 80079a2:	f00b f8cb 	bl	8012b3c <_ZNK8touchgfx8TextArea21calculateBoundingAreaEv>
 80079a6:	e896 0007 	ldmia.w	r6, {r0, r1, r2}
 80079aa:	f504 737a 	add.w	r3, r4, #1000	; 0x3e8
 80079ae:	e883 0007 	stmia.w	r3, {r0, r1, r2}
 80079b2:	4b71      	ldr	r3, [pc, #452]	; (8007b78 <_ZN37Measurement_Single_Display_1PViewBaseC1Ev+0x670>)
 80079b4:	930a      	str	r3, [sp, #40]	; 0x28
    textArea4_1.setTypedText(touchgfx::TypedText(T___SINGLEUSE_VCZH));
 80079b6:	ee1b 0a10 	vmov	r0, s22
 80079ba:	231c      	movs	r3, #28
 80079bc:	a90a      	add	r1, sp, #40	; 0x28
 80079be:	f8ad 302c 	strh.w	r3, [sp, #44]	; 0x2c
 80079c2:	f00b fb55 	bl	8013070 <_ZN8touchgfx8TextArea12setTypedTextERKNS_9TypedTextE>
 80079c6:	ee1b 1a10 	vmov	r1, s22
 80079ca:	4638      	mov	r0, r7
 80079cc:	f008 fd28 	bl	8010420 <_ZN8touchgfx9Container3addERNS_8DrawableE>
    textArea4_2.setXY(217, 185);
 80079d0:	22b9      	movs	r2, #185	; 0xb9
 80079d2:	ee1b 0a90 	vmov	r0, s23
 80079d6:	21d9      	movs	r1, #217	; 0xd9
 80079d8:	f7fa ffa6 	bl	8002928 <_ZN8touchgfx8Drawable5setXYEss>
 80079dc:	ee1b 1a90 	vmov	r1, s23
 80079e0:	4630      	mov	r0, r6
        color = newColor;
 80079e2:	f8c4 b424 	str.w	fp, [r4, #1060]	; 0x424
        linespace = space;
 80079e6:	f8a4 5428 	strh.w	r5, [r4, #1064]	; 0x428
        boundingArea = calculateBoundingArea();
 80079ea:	f00b f8a7 	bl	8012b3c <_ZNK8touchgfx8TextArea21calculateBoundingAreaEv>
 80079ee:	e896 0007 	ldmia.w	r6, {r0, r1, r2}
 80079f2:	f504 6386 	add.w	r3, r4, #1072	; 0x430
 80079f6:	e883 0007 	stmia.w	r3, {r0, r1, r2}
 80079fa:	4b5f      	ldr	r3, [pc, #380]	; (8007b78 <_ZN37Measurement_Single_Display_1PViewBaseC1Ev+0x670>)
 80079fc:	930a      	str	r3, [sp, #40]	; 0x28
    textArea4_2.setTypedText(touchgfx::TypedText(T___SINGLEUSE_B5GD));
 80079fe:	ee1b 0a90 	vmov	r0, s23
 8007a02:	231d      	movs	r3, #29
 8007a04:	a90a      	add	r1, sp, #40	; 0x28
 8007a06:	f8ad 302c 	strh.w	r3, [sp, #44]	; 0x2c
 8007a0a:	f00b fb31 	bl	8013070 <_ZN8touchgfx8TextArea12setTypedTextERKNS_9TypedTextE>
 8007a0e:	ee1b 1a90 	vmov	r1, s23
 8007a12:	4638      	mov	r0, r7
 8007a14:	f008 fd04 	bl	8010420 <_ZN8touchgfx9Container3addERNS_8DrawableE>
    line1.setPosition(0, 50, 240, 10);
 8007a18:	230a      	movs	r3, #10
 8007a1a:	9300      	str	r3, [sp, #0]
 8007a1c:	2232      	movs	r2, #50	; 0x32
 8007a1e:	23f0      	movs	r3, #240	; 0xf0
 8007a20:	4629      	mov	r1, r5
 8007a22:	4650      	mov	r0, sl
 8007a24:	f7fa ff8d 	bl	8002942 <_ZN8touchgfx8Drawable11setPositionEssss>
 8007a28:	9b02      	ldr	r3, [sp, #8]
 8007a2a:	f8c4 3464 	str.w	r3, [r4, #1124]	; 0x464
        setStart(CWRUtil::toQ5<T>(x), CWRUtil::toQ5<T>(y));
 8007a2e:	22a0      	movs	r2, #160	; 0xa0
 8007a30:	4611      	mov	r1, r2
 8007a32:	4650      	mov	r0, sl
 8007a34:	f8c4 b4b8 	str.w	fp, [r4, #1208]	; 0x4b8
        color565 = LCD16bpp::getNativeColor(painterColor);
 8007a38:	f8a4 b4bc 	strh.w	fp, [r4, #1212]	; 0x4bc
 8007a3c:	f00a fed2 	bl	80127e4 <_ZN8touchgfx4Line8setStartENS_7CWRUtil2Q5ES2_>
        setEnd(CWRUtil::toQ5<T>(x), CWRUtil::toQ5<T>(y));
 8007a40:	22a0      	movs	r2, #160	; 0xa0
 8007a42:	f44f 51eb 	mov.w	r1, #7520	; 0x1d60
 8007a46:	4650      	mov	r0, sl
 8007a48:	f00a fed7 	bl	80127fa <_ZN8touchgfx4Line6setEndENS_7CWRUtil2Q5ES2_>
        if (lineWidthQ5 == widthQ5)
 8007a4c:	f8d4 3478 	ldr.w	r3, [r4, #1144]	; 0x478
 8007a50:	2b20      	cmp	r3, #32
 8007a52:	d005      	beq.n	8007a60 <_ZN37Measurement_Single_Display_1PViewBaseC1Ev+0x558>
        lineWidthQ5 = widthQ5;
 8007a54:	2320      	movs	r3, #32
 8007a56:	f8c4 3478 	str.w	r3, [r4, #1144]	; 0x478
        updateCachedShape();
 8007a5a:	4650      	mov	r0, sl
 8007a5c:	f00a fdcc 	bl	80125f8 <_ZN8touchgfx4Line17updateCachedShapeEv>
    line1.setLineEndingStyle(touchgfx::Line::ROUND_CAP_ENDING);
 8007a60:	4650      	mov	r0, sl
 8007a62:	2101      	movs	r1, #1
 8007a64:	f00a fed4 	bl	8012810 <_ZN8touchgfx4Line18setLineEndingStyleENS0_17LINE_ENDING_STYLEE>
 8007a68:	4651      	mov	r1, sl
 8007a6a:	4638      	mov	r0, r7
 8007a6c:	f008 fcd8 	bl	8010420 <_ZN8touchgfx9Container3addERNS_8DrawableE>
        color = newColor;
 8007a70:	f04f 36ff 	mov.w	r6, #4294967295
        boundingArea = calculateBoundingArea();
 8007a74:	ad04      	add	r5, sp, #16
    textArea2.setXY(69, 35);
 8007a76:	ee18 0a10 	vmov	r0, s16
 8007a7a:	2223      	movs	r2, #35	; 0x23
        linespace = space;
 8007a7c:	f04f 0900 	mov.w	r9, #0
 8007a80:	2145      	movs	r1, #69	; 0x45
 8007a82:	f7fa ff51 	bl	8002928 <_ZN8touchgfx8Drawable5setXYEss>
        boundingArea = calculateBoundingArea();
 8007a86:	ee18 1a10 	vmov	r1, s16
 8007a8a:	4628      	mov	r0, r5
        color = newColor;
 8007a8c:	f8c4 64f0 	str.w	r6, [r4, #1264]	; 0x4f0
        linespace = space;
 8007a90:	f8a4 94f4 	strh.w	r9, [r4, #1268]	; 0x4f4
        boundingArea = calculateBoundingArea();
 8007a94:	f00b f852 	bl	8012b3c <_ZNK8touchgfx8TextArea21calculateBoundingAreaEv>
 8007a98:	e895 0007 	ldmia.w	r5, {r0, r1, r2}
 8007a9c:	ee18 3a10 	vmov	r3, s16
 8007aa0:	333c      	adds	r3, #60	; 0x3c
 8007aa2:	e883 0007 	stmia.w	r3, {r0, r1, r2}
 8007aa6:	f8df 80d0 	ldr.w	r8, [pc, #208]	; 8007b78 <_ZN37Measurement_Single_Display_1PViewBaseC1Ev+0x670>
 8007aaa:	f8cd 8028 	str.w	r8, [sp, #40]	; 0x28
 8007aae:	233c      	movs	r3, #60	; 0x3c
    textArea2.setTypedText(touchgfx::TypedText(T___SINGLEUSE_9O3K));
 8007ab0:	ee18 0a10 	vmov	r0, s16
 8007ab4:	a90a      	add	r1, sp, #40	; 0x28
 8007ab6:	f8ad 302c 	strh.w	r3, [sp, #44]	; 0x2c
 8007aba:	f00b fad9 	bl	8013070 <_ZN8touchgfx8TextArea12setTypedTextERKNS_9TypedTextE>
 8007abe:	ee18 1a10 	vmov	r1, s16
 8007ac2:	4638      	mov	r0, r7
 8007ac4:	f008 fcac 	bl	8010420 <_ZN8touchgfx9Container3addERNS_8DrawableE>
    textArea1.setXY(54, 12);
 8007ac8:	ee18 0a90 	vmov	r0, s17
 8007acc:	220c      	movs	r2, #12
 8007ace:	2136      	movs	r1, #54	; 0x36
 8007ad0:	f7fa ff2a 	bl	8002928 <_ZN8touchgfx8Drawable5setXYEss>
 8007ad4:	ee18 1a90 	vmov	r1, s17
 8007ad8:	4628      	mov	r0, r5
        color = newColor;
 8007ada:	f8c4 6538 	str.w	r6, [r4, #1336]	; 0x538
        linespace = space;
 8007ade:	f8a4 953c 	strh.w	r9, [r4, #1340]	; 0x53c
        boundingArea = calculateBoundingArea();
 8007ae2:	f00b f82b 	bl	8012b3c <_ZNK8touchgfx8TextArea21calculateBoundingAreaEv>
 8007ae6:	e895 0007 	ldmia.w	r5, {r0, r1, r2}
 8007aea:	ee18 3a90 	vmov	r3, s17
 8007aee:	333c      	adds	r3, #60	; 0x3c
 8007af0:	e883 0007 	stmia.w	r3, {r0, r1, r2}
 8007af4:	233b      	movs	r3, #59	; 0x3b
    textArea1.setTypedText(touchgfx::TypedText(T___SINGLEUSE_T27V));
 8007af6:	ee18 0a90 	vmov	r0, s17
 8007afa:	a90a      	add	r1, sp, #40	; 0x28
 8007afc:	f8ad 302c 	strh.w	r3, [sp, #44]	; 0x2c
 8007b00:	f8cd 8028 	str.w	r8, [sp, #40]	; 0x28
 8007b04:	f00b fab4 	bl	8013070 <_ZN8touchgfx8TextArea12setTypedTextERKNS_9TypedTextE>
 8007b08:	ee18 1a90 	vmov	r1, s17
 8007b0c:	4638      	mov	r0, r7
 8007b0e:	f008 fc87 	bl	8010420 <_ZN8touchgfx9Container3addERNS_8DrawableE>
    buttonWithLabel3.setXY(33, 256);
 8007b12:	ee1c 0a10 	vmov	r0, s24
 8007b16:	f44f 7280 	mov.w	r2, #256	; 0x100
 8007b1a:	2121      	movs	r1, #33	; 0x21
 8007b1c:	f7fa ff04 	bl	8002928 <_ZN8touchgfx8Drawable5setXYEss>
 8007b20:	2303      	movs	r3, #3
    buttonWithLabel3.setBitmaps(touchgfx::Bitmap(BITMAP_ALTERNATE_THEME_IMAGES_WIDGETS_BUTTON_REGULAR_HEIGHT_50_SMALL_ROUND_PRESSED_ID), touchgfx::Bitmap(BITMAP_ALTERNATE_THEME_IMAGES_WIDGETS_BUTTON_REGULAR_HEIGHT_50_SMALL_ROUND_NORMAL_ID));
 8007b22:	aa0a      	add	r2, sp, #40	; 0x28
 8007b24:	a909      	add	r1, sp, #36	; 0x24
 8007b26:	ee1c 0a10 	vmov	r0, s24
 8007b2a:	f8ad 3024 	strh.w	r3, [sp, #36]	; 0x24
 8007b2e:	2302      	movs	r3, #2
 8007b30:	f8ad 3028 	strh.w	r3, [sp, #40]	; 0x28
 8007b34:	f00b fe57 	bl	80137e6 <_ZN8touchgfx6Button10setBitmapsERKNS_6BitmapES3_>
class TypedText
 8007b38:	233a      	movs	r3, #58	; 0x3a
        updateTextPosition();
 8007b3a:	ee1c 0a10 	vmov	r0, s24
 8007b3e:	f8a4 3588 	strh.w	r3, [r4, #1416]	; 0x588
 8007b42:	f7fa ff35 	bl	80029b0 <_ZN8touchgfx15ButtonWithLabel18updateTextPositionEv>
    buttonWithLabel3.setAction(buttonCallback);
 8007b46:	f504 539f 	add.w	r3, r4, #5088	; 0x13e0
 8007b4a:	3304      	adds	r3, #4
 8007b4c:	4638      	mov	r0, r7
 8007b4e:	ee1c 1a10 	vmov	r1, s24
        color = col;
 8007b52:	f8c4 658c 	str.w	r6, [r4, #1420]	; 0x58c
        colorPressed = col;
 8007b56:	f8c4 6590 	str.w	r6, [r4, #1424]	; 0x590
 8007b5a:	f8c4 3578 	str.w	r3, [r4, #1400]	; 0x578
 8007b5e:	f008 fc5f 	bl	8010420 <_ZN8touchgfx9Container3addERNS_8DrawableE>
}
 8007b62:	4620      	mov	r0, r4
 8007b64:	b00d      	add	sp, #52	; 0x34
 8007b66:	ecbd 8b0a 	vpop	{d8-d12}
 8007b6a:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
 8007b6e:	bf00      	nop
 8007b70:	20013880 	.word	0x20013880
 8007b74:	0802ce7d 	.word	0x0802ce7d
 8007b78:	0802cef0 	.word	0x0802cef0
 8007b7c:	20013878 	.word	0x20013878

08007b80 <_ZN37Measurement_Single_Display_3PViewBase11setupScreenEv>:
}

void Measurement_Single_Display_3PViewBase::setupScreen()
{

}
 8007b80:	4770      	bx	lr

08007b82 <_ZN8touchgfx8CallbackI37Measurement_Single_Display_3PViewBaseRKNS_14AbstractButtonEvvED1Ev>:
struct Callback<dest_type, T1, void, void> : public GenericCallback<T1>
 8007b82:	4770      	bx	lr

08007b84 <_ZN8touchgfx8CallbackI37Measurement_Single_Display_3PViewBaseRKNS_14AbstractButtonEvvE7executeES4_>:
    virtual void execute(T1 t1)
 8007b84:	b430      	push	{r4, r5}
        (pobject->*pmemfun)(t1);
 8007b86:	68c2      	ldr	r2, [r0, #12]
 8007b88:	6844      	ldr	r4, [r0, #4]
 8007b8a:	1055      	asrs	r5, r2, #1
    virtual void execute(T1 t1)
 8007b8c:	4603      	mov	r3, r0
        (pobject->*pmemfun)(t1);
 8007b8e:	eb04 0062 	add.w	r0, r4, r2, asr #1
 8007b92:	07d2      	lsls	r2, r2, #31
 8007b94:	bf48      	it	mi
 8007b96:	5962      	ldrmi	r2, [r4, r5]
 8007b98:	689b      	ldr	r3, [r3, #8]
    }
 8007b9a:	bc30      	pop	{r4, r5}
        (pobject->*pmemfun)(t1);
 8007b9c:	bf48      	it	mi
 8007b9e:	58d3      	ldrmi	r3, [r2, r3]
 8007ba0:	4718      	bx	r3

08007ba2 <_ZNK8touchgfx8CallbackI37Measurement_Single_Display_3PViewBaseRKNS_14AbstractButtonEvvE7isValidEv>:
        return (pobject != 0) && (pmemfun != 0);
 8007ba2:	6843      	ldr	r3, [r0, #4]
 8007ba4:	b12b      	cbz	r3, 8007bb2 <_ZNK8touchgfx8CallbackI37Measurement_Single_Display_3PViewBaseRKNS_14AbstractButtonEvvE7isValidEv+0x10>
 8007ba6:	6883      	ldr	r3, [r0, #8]
 8007ba8:	b92b      	cbnz	r3, 8007bb6 <_ZNK8touchgfx8CallbackI37Measurement_Single_Display_3PViewBaseRKNS_14AbstractButtonEvvE7isValidEv+0x14>
 8007baa:	68c0      	ldr	r0, [r0, #12]
 8007bac:	f000 0001 	and.w	r0, r0, #1
 8007bb0:	4770      	bx	lr
 8007bb2:	4618      	mov	r0, r3
 8007bb4:	4770      	bx	lr
 8007bb6:	2001      	movs	r0, #1
    }
 8007bb8:	4770      	bx	lr

08007bba <_ZN8touchgfx8CallbackI37Measurement_Single_Display_3PViewBaseRKNS_14AbstractButtonEvvED0Ev>:
struct Callback<dest_type, T1, void, void> : public GenericCallback<T1>
 8007bba:	b510      	push	{r4, lr}
 8007bbc:	2110      	movs	r1, #16
 8007bbe:	4604      	mov	r4, r0
 8007bc0:	f022 fdbb 	bl	802a73a <_ZdlPvj>
 8007bc4:	4620      	mov	r0, r4
 8007bc6:	bd10      	pop	{r4, pc}

08007bc8 <_ZN37Measurement_Single_Display_3PViewBaseD1Ev>:
Measurement_Single_Display_3PViewBase::~Measurement_Single_Display_3PViewBase()
 8007bc8:	b510      	push	{r4, lr}
 8007bca:	4b03      	ldr	r3, [pc, #12]	; (8007bd8 <_ZN37Measurement_Single_Display_3PViewBaseD1Ev+0x10>)
 8007bcc:	6003      	str	r3, [r0, #0]
 8007bce:	4604      	mov	r4, r0
    touchgfx::CanvasWidgetRenderer::resetBuffer();
 8007bd0:	f00c fffc 	bl	8014bcc <_ZN8touchgfx20CanvasWidgetRenderer11resetBufferEv>
}
 8007bd4:	4620      	mov	r0, r4
 8007bd6:	bd10      	pop	{r4, pc}
 8007bd8:	0802e6a8 	.word	0x0802e6a8

08007bdc <_ZN37Measurement_Single_Display_3PViewBaseD0Ev>:
Measurement_Single_Display_3PViewBase::~Measurement_Single_Display_3PViewBase()
 8007bdc:	b507      	push	{r0, r1, r2, lr}
 8007bde:	4b07      	ldr	r3, [pc, #28]	; (8007bfc <_ZN37Measurement_Single_Display_3PViewBaseD0Ev+0x20>)
 8007be0:	6003      	str	r3, [r0, #0]
 8007be2:	9001      	str	r0, [sp, #4]
    touchgfx::CanvasWidgetRenderer::resetBuffer();
 8007be4:	f00c fff2 	bl	8014bcc <_ZN8touchgfx20CanvasWidgetRenderer11resetBufferEv>
}
 8007be8:	9801      	ldr	r0, [sp, #4]
 8007bea:	f241 015c 	movw	r1, #4188	; 0x105c
 8007bee:	f022 fda4 	bl	802a73a <_ZdlPvj>
 8007bf2:	9801      	ldr	r0, [sp, #4]
 8007bf4:	b003      	add	sp, #12
 8007bf6:	f85d fb04 	ldr.w	pc, [sp], #4
 8007bfa:	bf00      	nop
 8007bfc:	0802e6a8 	.word	0x0802e6a8

08007c00 <_ZN37Measurement_Single_Display_3PViewBase21buttonCallbackHandlerERKN8touchgfx14AbstractButtonE>:

void Measurement_Single_Display_3PViewBase::buttonCallbackHandler(const touchgfx::AbstractButton& src)
{
    if (&src == &buttonWithLabel3)
 8007c00:	f500 70fa 	add.w	r0, r0, #500	; 0x1f4
 8007c04:	4288      	cmp	r0, r1
{
 8007c06:	b508      	push	{r3, lr}
    if (&src == &buttonWithLabel3)
 8007c08:	d105      	bne.n	8007c16 <_ZN37Measurement_Single_Display_3PViewBase21buttonCallbackHandlerERKN8touchgfx14AbstractButtonE+0x16>
    virtual ~Measurement_Single_Display_3PViewBase();
    virtual void setupScreen();

protected:
    FrontendApplication& application() {
        return *static_cast<FrontendApplication*>(touchgfx::Application::getInstance());
 8007c0a:	f00e fce1 	bl	80165d0 <_ZN8touchgfx11Application11getInstanceEv>
        //Interaction1
        //When buttonWithLabel3 clicked change screen to Measurement_Single
        //Go to Measurement_Single with screen transition towards East
        application().gotoMeasurement_SingleScreenWipeTransitionEast();
    }
}
 8007c0e:	e8bd 4008 	ldmia.w	sp!, {r3, lr}
        application().gotoMeasurement_SingleScreenWipeTransitionEast();
 8007c12:	f7fc bd97 	b.w	8004744 <_ZN23FrontendApplicationBase46gotoMeasurement_SingleScreenWipeTransitionEastEv>
}
 8007c16:	bd08      	pop	{r3, pc}

08007c18 <_ZN37Measurement_Single_Display_3PViewBaseC1Ev>:
Measurement_Single_Display_3PViewBase::Measurement_Single_Display_3PViewBase() :
 8007c18:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 8007c1c:	ed2d 8b02 	vpush	{d8}
 8007c20:	4604      	mov	r4, r0
 8007c22:	b08d      	sub	sp, #52	; 0x34
 8007c24:	f010 f954 	bl	8017ed0 <_ZN8touchgfx6ScreenC1Ev>
    buttonCallback(this, &Measurement_Single_Display_3PViewBase::buttonCallbackHandler)
 8007c28:	4622      	mov	r2, r4
 8007c2a:	2500      	movs	r5, #0
 8007c2c:	4ba4      	ldr	r3, [pc, #656]	; (8007ec0 <_ZN37Measurement_Single_Display_3PViewBaseC1Ev+0x2a8>)
 8007c2e:	63e5      	str	r5, [r4, #60]	; 0x3c
 8007c30:	f842 3b40 	str.w	r3, [r2], #64
 8007c34:	ee08 2a10 	vmov	s16, r2
        : Widget(), alpha(255), color(0)
 8007c38:	4629      	mov	r1, r5
 8007c3a:	2226      	movs	r2, #38	; 0x26
 8007c3c:	ee18 0a10 	vmov	r0, s16
 8007c40:	f023 fd93 	bl	802b76a <memset>
 8007c44:	ee18 0a10 	vmov	r0, s16
 8007c48:	f7fa fea0 	bl	800298c <_ZN8touchgfx6WidgetC1Ev>
 8007c4c:	f104 0b6c 	add.w	fp, r4, #108	; 0x6c
 8007c50:	26ff      	movs	r6, #255	; 0xff
 8007c52:	4b9c      	ldr	r3, [pc, #624]	; (8007ec4 <_ZN37Measurement_Single_Display_3PViewBaseC1Ev+0x2ac>)
 8007c54:	6423      	str	r3, [r4, #64]	; 0x40
        : Widget(), bitmap(bmp), alpha(255)
 8007c56:	2226      	movs	r2, #38	; 0x26
 8007c58:	f64f 73ff 	movw	r3, #65535	; 0xffff
 8007c5c:	4629      	mov	r1, r5
 8007c5e:	f884 6066 	strb.w	r6, [r4, #102]	; 0x66
 8007c62:	66a5      	str	r5, [r4, #104]	; 0x68
 8007c64:	4658      	mov	r0, fp
 8007c66:	f8ad 3028 	strh.w	r3, [sp, #40]	; 0x28
 8007c6a:	f023 fd7e 	bl	802b76a <memset>
 8007c6e:	4658      	mov	r0, fp
 8007c70:	f7fa fe8c 	bl	800298c <_ZN8touchgfx6WidgetC1Ev>
 8007c74:	4b94      	ldr	r3, [pc, #592]	; (8007ec8 <_ZN37Measurement_Single_Display_3PViewBaseC1Ev+0x2b0>)
 8007c76:	66e3      	str	r3, [r4, #108]	; 0x6c
 8007c78:	f8bd 3028 	ldrh.w	r3, [sp, #40]	; 0x28
 8007c7c:	f8a4 3092 	strh.w	r3, [r4, #146]	; 0x92
        Image::setBitmap(bmp);
 8007c80:	a90a      	add	r1, sp, #40	; 0x28
 8007c82:	f104 0798 	add.w	r7, r4, #152	; 0x98
        : Widget(), bitmap(bmp), alpha(255)
 8007c86:	f884 6094 	strb.w	r6, [r4, #148]	; 0x94
        Image::setBitmap(bmp);
 8007c8a:	4658      	mov	r0, fp
 8007c8c:	f00b ffa1 	bl	8013bd2 <_ZN8touchgfx5Image9setBitmapERKNS_6BitmapE>
 8007c90:	4638      	mov	r0, r7
 8007c92:	f00a fc91 	bl	80125b8 <_ZN8touchgfx4LineC1Ev>
 8007c96:	f504 7384 	add.w	r3, r4, #264	; 0x108
        : AbstractPainterRGB565(), AbstractPainterColor(color)
 8007c9a:	4618      	mov	r0, r3
 8007c9c:	9303      	str	r3, [sp, #12]
 8007c9e:	f7fa fc79 	bl	8002594 <_ZN8touchgfx21AbstractPainterRGB565C1Ev>
 8007ca2:	4b8a      	ldr	r3, [pc, #552]	; (8007ecc <_ZN37Measurement_Single_Display_3PViewBaseC1Ev+0x2b4>)
 8007ca4:	f8c4 3108 	str.w	r3, [r4, #264]	; 0x108
 8007ca8:	f504 7a8e 	add.w	sl, r4, #284	; 0x11c
 8007cac:	3324      	adds	r3, #36	; 0x24
 8007cae:	f8c4 3110 	str.w	r3, [r4, #272]	; 0x110
 8007cb2:	f8c4 5114 	str.w	r5, [r4, #276]	; 0x114
 8007cb6:	4650      	mov	r0, sl
 8007cb8:	f504 79b2 	add.w	r9, r4, #356	; 0x164
 8007cbc:	f7fa feca 	bl	8002a54 <_ZN8touchgfx8TextAreaC1Ev>
 8007cc0:	f504 78d6 	add.w	r8, r4, #428	; 0x1ac
 8007cc4:	4648      	mov	r0, r9
 8007cc6:	f7fa fec5 	bl	8002a54 <_ZN8touchgfx8TextAreaC1Ev>
 8007cca:	4640      	mov	r0, r8
 8007ccc:	f7fa fec2 	bl	8002a54 <_ZN8touchgfx8TextAreaC1Ev>
 8007cd0:	f504 73fa 	add.w	r3, r4, #500	; 0x1f4
 8007cd4:	4618      	mov	r0, r3
 8007cd6:	ee08 3a90 	vmov	s17, r3
 8007cda:	f00c f8b1 	bl	8013e40 <_ZN8touchgfx15ButtonWithLabelC1Ev>
        : pobject(pObject), pmemfun(pmemfun_1)
 8007cde:	4a7c      	ldr	r2, [pc, #496]	; (8007ed0 <_ZN37Measurement_Single_Display_3PViewBaseC1Ev+0x2b8>)
 8007ce0:	f504 5380 	add.w	r3, r4, #4096	; 0x1000
 8007ce4:	e9c3 2413 	strd	r2, r4, [r3, #76]	; 0x4c
 8007ce8:	4a7a      	ldr	r2, [pc, #488]	; (8007ed4 <_ZN37Measurement_Single_Display_3PViewBaseC1Ev+0x2bc>)
    touchgfx::CanvasWidgetRenderer::setupBuffer(canvasBuffer, CANVAS_BUFFER_SIZE);
 8007cea:	f44f 6161 	mov.w	r1, #3600	; 0xe10
 8007cee:	e9c3 2515 	strd	r2, r5, [r3, #84]	; 0x54
 8007cf2:	f504 700f 	add.w	r0, r4, #572	; 0x23c
 8007cf6:	f00c ff5f 	bl	8014bb8 <_ZN8touchgfx20CanvasWidgetRenderer11setupBufferEPhj>
    __background.setPosition(0, 0, 240, 320);
 8007cfa:	f44f 73a0 	mov.w	r3, #320	; 0x140
 8007cfe:	462a      	mov	r2, r5
 8007d00:	ee18 0a10 	vmov	r0, s16
 8007d04:	9300      	str	r3, [sp, #0]
 8007d06:	4629      	mov	r1, r5
 8007d08:	23f0      	movs	r3, #240	; 0xf0
 8007d0a:	f7fa fe1a 	bl	8002942 <_ZN8touchgfx8Drawable11setPositionEssss>
 8007d0e:	1d26      	adds	r6, r4, #4
        color = newColor;
 8007d10:	f04f 437f 	mov.w	r3, #4278190080	; 0xff000000
 8007d14:	66a3      	str	r3, [r4, #104]	; 0x68
 8007d16:	ee18 1a10 	vmov	r1, s16
 8007d1a:	4630      	mov	r0, r6
 8007d1c:	f008 fb80 	bl	8010420 <_ZN8touchgfx9Container3addERNS_8DrawableE>
    image1.setXY(0, 0);
 8007d20:	462a      	mov	r2, r5
 8007d22:	4629      	mov	r1, r5
 8007d24:	4658      	mov	r0, fp
 8007d26:	f7fa fdff 	bl	8002928 <_ZN8touchgfx8Drawable5setXYEss>
 8007d2a:	2308      	movs	r3, #8
    image1.setBitmap(touchgfx::Bitmap(BITMAP_BACKGROUND_2_RESIZED_4_ID));
 8007d2c:	a90a      	add	r1, sp, #40	; 0x28
 8007d2e:	4658      	mov	r0, fp
 8007d30:	f8ad 3028 	strh.w	r3, [sp, #40]	; 0x28
 8007d34:	f00b ff4d 	bl	8013bd2 <_ZN8touchgfx5Image9setBitmapERKNS_6BitmapE>
 8007d38:	4659      	mov	r1, fp
 8007d3a:	4630      	mov	r0, r6
 8007d3c:	f008 fb70 	bl	8010420 <_ZN8touchgfx9Container3addERNS_8DrawableE>
    line1.setPosition(0, 50, 240, 10);
 8007d40:	230a      	movs	r3, #10
 8007d42:	9300      	str	r3, [sp, #0]
 8007d44:	2232      	movs	r2, #50	; 0x32
 8007d46:	23f0      	movs	r3, #240	; 0xf0
 8007d48:	4629      	mov	r1, r5
 8007d4a:	4638      	mov	r0, r7
 8007d4c:	f7fa fdf9 	bl	8002942 <_ZN8touchgfx8Drawable11setPositionEssss>
 8007d50:	f04f 33ff 	mov.w	r3, #4294967295
        setStart(CWRUtil::toQ5<T>(x), CWRUtil::toQ5<T>(y));
 8007d54:	22a0      	movs	r2, #160	; 0xa0
 8007d56:	f8c4 3114 	str.w	r3, [r4, #276]	; 0x114
        color565 = LCD16bpp::getNativeColor(painterColor);
 8007d5a:	f8a4 3118 	strh.w	r3, [r4, #280]	; 0x118
 8007d5e:	9b03      	ldr	r3, [sp, #12]
 8007d60:	f8c4 30c0 	str.w	r3, [r4, #192]	; 0xc0
 8007d64:	4611      	mov	r1, r2
 8007d66:	4638      	mov	r0, r7
 8007d68:	f00a fd3c 	bl	80127e4 <_ZN8touchgfx4Line8setStartENS_7CWRUtil2Q5ES2_>
        setEnd(CWRUtil::toQ5<T>(x), CWRUtil::toQ5<T>(y));
 8007d6c:	22a0      	movs	r2, #160	; 0xa0
 8007d6e:	f44f 51eb 	mov.w	r1, #7520	; 0x1d60
 8007d72:	4638      	mov	r0, r7
 8007d74:	f00a fd41 	bl	80127fa <_ZN8touchgfx4Line6setEndENS_7CWRUtil2Q5ES2_>
        if (lineWidthQ5 == widthQ5)
 8007d78:	f8d4 30d4 	ldr.w	r3, [r4, #212]	; 0xd4
 8007d7c:	2b20      	cmp	r3, #32
 8007d7e:	d005      	beq.n	8007d8c <_ZN37Measurement_Single_Display_3PViewBaseC1Ev+0x174>
        lineWidthQ5 = widthQ5;
 8007d80:	2320      	movs	r3, #32
 8007d82:	f8c4 30d4 	str.w	r3, [r4, #212]	; 0xd4
        updateCachedShape();
 8007d86:	4638      	mov	r0, r7
 8007d88:	f00a fc36 	bl	80125f8 <_ZN8touchgfx4Line17updateCachedShapeEv>
    line1.setLineEndingStyle(touchgfx::Line::ROUND_CAP_ENDING);
 8007d8c:	4638      	mov	r0, r7
 8007d8e:	2101      	movs	r1, #1
 8007d90:	f00a fd3e 	bl	8012810 <_ZN8touchgfx4Line18setLineEndingStyleENS0_17LINE_ENDING_STYLEE>
 8007d94:	4639      	mov	r1, r7
 8007d96:	4630      	mov	r0, r6
 8007d98:	f008 fb42 	bl	8010420 <_ZN8touchgfx9Container3addERNS_8DrawableE>
 8007d9c:	ad04      	add	r5, sp, #16
        color = newColor;
 8007d9e:	f04f 37ff 	mov.w	r7, #4294967295
        linespace = space;
 8007da2:	f04f 0b00 	mov.w	fp, #0
    textArea2.setXY(69, 35);
 8007da6:	2223      	movs	r2, #35	; 0x23
 8007da8:	4650      	mov	r0, sl
 8007daa:	2145      	movs	r1, #69	; 0x45
 8007dac:	f7fa fdbc 	bl	8002928 <_ZN8touchgfx8Drawable5setXYEss>
        boundingArea = calculateBoundingArea();
 8007db0:	4651      	mov	r1, sl
 8007db2:	4628      	mov	r0, r5
        color = newColor;
 8007db4:	f8c4 714c 	str.w	r7, [r4, #332]	; 0x14c
        linespace = space;
 8007db8:	f8a4 b150 	strh.w	fp, [r4, #336]	; 0x150
        boundingArea = calculateBoundingArea();
 8007dbc:	f00a febe 	bl	8012b3c <_ZNK8touchgfx8TextArea21calculateBoundingAreaEv>
 8007dc0:	e895 0007 	ldmia.w	r5, {r0, r1, r2}
 8007dc4:	f10a 033c 	add.w	r3, sl, #60	; 0x3c
 8007dc8:	e883 0007 	stmia.w	r3, {r0, r1, r2}
        : typedTextId(id)
 8007dcc:	4b42      	ldr	r3, [pc, #264]	; (8007ed8 <_ZN37Measurement_Single_Display_3PViewBaseC1Ev+0x2c0>)
 8007dce:	930a      	str	r3, [sp, #40]	; 0x28
 8007dd0:	223f      	movs	r2, #63	; 0x3f
    textArea2.setTypedText(touchgfx::TypedText(T___SINGLEUSE_DCTT));
 8007dd2:	a90a      	add	r1, sp, #40	; 0x28
 8007dd4:	4650      	mov	r0, sl
 8007dd6:	f8ad 202c 	strh.w	r2, [sp, #44]	; 0x2c
 8007dda:	f00b f949 	bl	8013070 <_ZN8touchgfx8TextArea12setTypedTextERKNS_9TypedTextE>
 8007dde:	4651      	mov	r1, sl
 8007de0:	4630      	mov	r0, r6
 8007de2:	f008 fb1d 	bl	8010420 <_ZN8touchgfx9Container3addERNS_8DrawableE>
    textArea3.setXY(31, 60);
 8007de6:	223c      	movs	r2, #60	; 0x3c
 8007de8:	4648      	mov	r0, r9
 8007dea:	211f      	movs	r1, #31
 8007dec:	f7fa fd9c 	bl	8002928 <_ZN8touchgfx8Drawable5setXYEss>
 8007df0:	4649      	mov	r1, r9
 8007df2:	4628      	mov	r0, r5
        color = newColor;
 8007df4:	f8c4 7194 	str.w	r7, [r4, #404]	; 0x194
        linespace = space;
 8007df8:	f8a4 b198 	strh.w	fp, [r4, #408]	; 0x198
        boundingArea = calculateBoundingArea();
 8007dfc:	f00a fe9e 	bl	8012b3c <_ZNK8touchgfx8TextArea21calculateBoundingAreaEv>
 8007e00:	e895 0007 	ldmia.w	r5, {r0, r1, r2}
 8007e04:	f109 0c3c 	add.w	ip, r9, #60	; 0x3c
 8007e08:	e88c 0007 	stmia.w	ip, {r0, r1, r2}
 8007e0c:	4b32      	ldr	r3, [pc, #200]	; (8007ed8 <_ZN37Measurement_Single_Display_3PViewBaseC1Ev+0x2c0>)
 8007e0e:	930a      	str	r3, [sp, #40]	; 0x28
 8007e10:	2234      	movs	r2, #52	; 0x34
    textArea3.setTypedText(touchgfx::TypedText(T___SINGLEUSE_0LJ7));
 8007e12:	a90a      	add	r1, sp, #40	; 0x28
 8007e14:	4648      	mov	r0, r9
 8007e16:	f8ad 202c 	strh.w	r2, [sp, #44]	; 0x2c
 8007e1a:	f00b f929 	bl	8013070 <_ZN8touchgfx8TextArea12setTypedTextERKNS_9TypedTextE>
 8007e1e:	4649      	mov	r1, r9
 8007e20:	4630      	mov	r0, r6
 8007e22:	f008 fafd 	bl	8010420 <_ZN8touchgfx9Container3addERNS_8DrawableE>
    textArea1.setXY(54, 12);
 8007e26:	220c      	movs	r2, #12
 8007e28:	4640      	mov	r0, r8
 8007e2a:	2136      	movs	r1, #54	; 0x36
 8007e2c:	f7fa fd7c 	bl	8002928 <_ZN8touchgfx8Drawable5setXYEss>
 8007e30:	4641      	mov	r1, r8
 8007e32:	4628      	mov	r0, r5
        color = newColor;
 8007e34:	f8c4 71dc 	str.w	r7, [r4, #476]	; 0x1dc
        linespace = space;
 8007e38:	f8a4 b1e0 	strh.w	fp, [r4, #480]	; 0x1e0
        boundingArea = calculateBoundingArea();
 8007e3c:	f00a fe7e 	bl	8012b3c <_ZNK8touchgfx8TextArea21calculateBoundingAreaEv>
 8007e40:	e895 0007 	ldmia.w	r5, {r0, r1, r2}
 8007e44:	f108 0c3c 	add.w	ip, r8, #60	; 0x3c
 8007e48:	4b23      	ldr	r3, [pc, #140]	; (8007ed8 <_ZN37Measurement_Single_Display_3PViewBaseC1Ev+0x2c0>)
 8007e4a:	930a      	str	r3, [sp, #40]	; 0x28
 8007e4c:	e88c 0007 	stmia.w	ip, {r0, r1, r2}
 8007e50:	233e      	movs	r3, #62	; 0x3e
    textArea1.setTypedText(touchgfx::TypedText(T___SINGLEUSE_SPOY));
 8007e52:	a90a      	add	r1, sp, #40	; 0x28
 8007e54:	4640      	mov	r0, r8
 8007e56:	f8ad 302c 	strh.w	r3, [sp, #44]	; 0x2c
 8007e5a:	f00b f909 	bl	8013070 <_ZN8touchgfx8TextArea12setTypedTextERKNS_9TypedTextE>
 8007e5e:	4641      	mov	r1, r8
 8007e60:	4630      	mov	r0, r6
 8007e62:	f008 fadd 	bl	8010420 <_ZN8touchgfx9Container3addERNS_8DrawableE>
    buttonWithLabel3.setXY(33, 257);
 8007e66:	ee18 0a90 	vmov	r0, s17
 8007e6a:	f240 1201 	movw	r2, #257	; 0x101
 8007e6e:	2121      	movs	r1, #33	; 0x21
 8007e70:	f7fa fd5a 	bl	8002928 <_ZN8touchgfx8Drawable5setXYEss>
 8007e74:	2303      	movs	r3, #3
    buttonWithLabel3.setBitmaps(touchgfx::Bitmap(BITMAP_ALTERNATE_THEME_IMAGES_WIDGETS_BUTTON_REGULAR_HEIGHT_50_SMALL_ROUND_PRESSED_ID), touchgfx::Bitmap(BITMAP_ALTERNATE_THEME_IMAGES_WIDGETS_BUTTON_REGULAR_HEIGHT_50_SMALL_ROUND_NORMAL_ID));
 8007e76:	aa0a      	add	r2, sp, #40	; 0x28
 8007e78:	a909      	add	r1, sp, #36	; 0x24
 8007e7a:	ee18 0a90 	vmov	r0, s17
 8007e7e:	f8ad 3024 	strh.w	r3, [sp, #36]	; 0x24
 8007e82:	2302      	movs	r3, #2
 8007e84:	f8ad 3028 	strh.w	r3, [sp, #40]	; 0x28
 8007e88:	f00b fcad 	bl	80137e6 <_ZN8touchgfx6Button10setBitmapsERKNS_6BitmapES3_>
class TypedText
 8007e8c:	233d      	movs	r3, #61	; 0x3d
        updateTextPosition();
 8007e8e:	ee18 0a90 	vmov	r0, s17
 8007e92:	f8a4 322c 	strh.w	r3, [r4, #556]	; 0x22c
 8007e96:	f7fa fd8b 	bl	80029b0 <_ZN8touchgfx15ButtonWithLabel18updateTextPositionEv>
    buttonWithLabel3.setAction(buttonCallback);
 8007e9a:	f504 5382 	add.w	r3, r4, #4160	; 0x1040
 8007e9e:	330c      	adds	r3, #12
 8007ea0:	4630      	mov	r0, r6
        colorPressed = col;
 8007ea2:	e9c4 778c 	strd	r7, r7, [r4, #560]	; 0x230
 8007ea6:	ee18 1a90 	vmov	r1, s17
 8007eaa:	f8c4 321c 	str.w	r3, [r4, #540]	; 0x21c
 8007eae:	f008 fab7 	bl	8010420 <_ZN8touchgfx9Container3addERNS_8DrawableE>
}
 8007eb2:	4620      	mov	r0, r4
 8007eb4:	b00d      	add	sp, #52	; 0x34
 8007eb6:	ecbd 8b02 	vpop	{d8}
 8007eba:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
 8007ebe:	bf00      	nop
 8007ec0:	0802e6a8 	.word	0x0802e6a8
 8007ec4:	0802f444 	.word	0x0802f444
 8007ec8:	0802f690 	.word	0x0802f690
 8007ecc:	0802f178 	.word	0x0802f178
 8007ed0:	0802e690 	.word	0x0802e690
 8007ed4:	08007c01 	.word	0x08007c01
 8007ed8:	0802cef0 	.word	0x0802cef0

08007edc <_ZN20Project_InfoViewBase11setupScreenEv>:
}

void Project_InfoViewBase::setupScreen()
{

}
 8007edc:	4770      	bx	lr

08007ede <_ZN8touchgfx8CallbackI20Project_InfoViewBaseRKNS_14AbstractButtonEvvED1Ev>:
struct Callback<dest_type, T1, void, void> : public GenericCallback<T1>
 8007ede:	4770      	bx	lr

08007ee0 <_ZN8touchgfx8CallbackI20Project_InfoViewBaseRKNS_14AbstractButtonEvvE7executeES4_>:
    virtual void execute(T1 t1)
 8007ee0:	b430      	push	{r4, r5}
        (pobject->*pmemfun)(t1);
 8007ee2:	68c2      	ldr	r2, [r0, #12]
 8007ee4:	6844      	ldr	r4, [r0, #4]
 8007ee6:	1055      	asrs	r5, r2, #1
    virtual void execute(T1 t1)
 8007ee8:	4603      	mov	r3, r0
        (pobject->*pmemfun)(t1);
 8007eea:	eb04 0062 	add.w	r0, r4, r2, asr #1
 8007eee:	07d2      	lsls	r2, r2, #31
 8007ef0:	bf48      	it	mi
 8007ef2:	5962      	ldrmi	r2, [r4, r5]
 8007ef4:	689b      	ldr	r3, [r3, #8]
    }
 8007ef6:	bc30      	pop	{r4, r5}
        (pobject->*pmemfun)(t1);
 8007ef8:	bf48      	it	mi
 8007efa:	58d3      	ldrmi	r3, [r2, r3]
 8007efc:	4718      	bx	r3

08007efe <_ZNK8touchgfx8CallbackI20Project_InfoViewBaseRKNS_14AbstractButtonEvvE7isValidEv>:
        return (pobject != 0) && (pmemfun != 0);
 8007efe:	6843      	ldr	r3, [r0, #4]
 8007f00:	b12b      	cbz	r3, 8007f0e <_ZNK8touchgfx8CallbackI20Project_InfoViewBaseRKNS_14AbstractButtonEvvE7isValidEv+0x10>
 8007f02:	6883      	ldr	r3, [r0, #8]
 8007f04:	b92b      	cbnz	r3, 8007f12 <_ZNK8touchgfx8CallbackI20Project_InfoViewBaseRKNS_14AbstractButtonEvvE7isValidEv+0x14>
 8007f06:	68c0      	ldr	r0, [r0, #12]
 8007f08:	f000 0001 	and.w	r0, r0, #1
 8007f0c:	4770      	bx	lr
 8007f0e:	4618      	mov	r0, r3
 8007f10:	4770      	bx	lr
 8007f12:	2001      	movs	r0, #1
    }
 8007f14:	4770      	bx	lr

08007f16 <_ZN8touchgfx8CallbackI20Project_InfoViewBaseRKNS_14AbstractButtonEvvED0Ev>:
struct Callback<dest_type, T1, void, void> : public GenericCallback<T1>
 8007f16:	b510      	push	{r4, lr}
 8007f18:	2110      	movs	r1, #16
 8007f1a:	4604      	mov	r4, r0
 8007f1c:	f022 fc0d 	bl	802a73a <_ZdlPvj>
 8007f20:	4620      	mov	r0, r4
 8007f22:	bd10      	pop	{r4, pc}

08007f24 <_ZN20Project_InfoViewBaseD1Ev>:
Project_InfoViewBase::~Project_InfoViewBase()
 8007f24:	b510      	push	{r4, lr}
 8007f26:	4b03      	ldr	r3, [pc, #12]	; (8007f34 <_ZN20Project_InfoViewBaseD1Ev+0x10>)
 8007f28:	6003      	str	r3, [r0, #0]
 8007f2a:	4604      	mov	r4, r0
    touchgfx::CanvasWidgetRenderer::resetBuffer();
 8007f2c:	f00c fe4e 	bl	8014bcc <_ZN8touchgfx20CanvasWidgetRenderer11resetBufferEv>
}
 8007f30:	4620      	mov	r0, r4
 8007f32:	bd10      	pop	{r4, pc}
 8007f34:	0802e6f4 	.word	0x0802e6f4

08007f38 <_ZN20Project_InfoViewBaseD0Ev>:
Project_InfoViewBase::~Project_InfoViewBase()
 8007f38:	b507      	push	{r0, r1, r2, lr}
 8007f3a:	4b07      	ldr	r3, [pc, #28]	; (8007f58 <_ZN20Project_InfoViewBaseD0Ev+0x20>)
 8007f3c:	6003      	str	r3, [r0, #0]
 8007f3e:	9001      	str	r0, [sp, #4]
    touchgfx::CanvasWidgetRenderer::resetBuffer();
 8007f40:	f00c fe44 	bl	8014bcc <_ZN8touchgfx20CanvasWidgetRenderer11resetBufferEv>
}
 8007f44:	9801      	ldr	r0, [sp, #4]
 8007f46:	f241 01b0 	movw	r1, #4272	; 0x10b0
 8007f4a:	f022 fbf6 	bl	802a73a <_ZdlPvj>
 8007f4e:	9801      	ldr	r0, [sp, #4]
 8007f50:	b003      	add	sp, #12
 8007f52:	f85d fb04 	ldr.w	pc, [sp], #4
 8007f56:	bf00      	nop
 8007f58:	0802e6f4 	.word	0x0802e6f4

08007f5c <_ZN20Project_InfoViewBase21buttonCallbackHandlerERKN8touchgfx14AbstractButtonE>:

void Project_InfoViewBase::buttonCallbackHandler(const touchgfx::AbstractButton& src)
{
    if (&src == &buttonWithLabel3)
 8007f5c:	f500 70b4 	add.w	r0, r0, #360	; 0x168
 8007f60:	4288      	cmp	r0, r1
{
 8007f62:	b508      	push	{r3, lr}
    if (&src == &buttonWithLabel3)
 8007f64:	d105      	bne.n	8007f72 <_ZN20Project_InfoViewBase21buttonCallbackHandlerERKN8touchgfx14AbstractButtonE+0x16>
    virtual ~Project_InfoViewBase();
    virtual void setupScreen();

protected:
    FrontendApplication& application() {
        return *static_cast<FrontendApplication*>(touchgfx::Application::getInstance());
 8007f66:	f00e fb33 	bl	80165d0 <_ZN8touchgfx11Application11getInstanceEv>
        //Interaction1
        //When buttonWithLabel3 clicked change screen to Main_Menu
        //Go to Main_Menu with screen transition towards West
        application().gotoMain_MenuScreenWipeTransitionWest();
    }
}
 8007f6a:	e8bd 4008 	ldmia.w	sp!, {r3, lr}
        application().gotoMain_MenuScreenWipeTransitionWest();
 8007f6e:	f7fc bbb9 	b.w	80046e4 <_ZN23FrontendApplicationBase37gotoMain_MenuScreenWipeTransitionWestEv>
}
 8007f72:	bd08      	pop	{r3, pc}

08007f74 <_ZN20Project_InfoViewBaseC1Ev>:
Project_InfoViewBase::Project_InfoViewBase() :
 8007f74:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 8007f78:	ed2d 8b04 	vpush	{d8-d9}
 8007f7c:	4604      	mov	r4, r0
 8007f7e:	b08d      	sub	sp, #52	; 0x34
    buttonCallback(this, &Project_InfoViewBase::buttonCallbackHandler)
 8007f80:	46a3      	mov	fp, r4
 8007f82:	2500      	movs	r5, #0
 8007f84:	f00f ffa4 	bl	8017ed0 <_ZN8touchgfx6ScreenC1Ev>
 8007f88:	4bd1      	ldr	r3, [pc, #836]	; (80082d0 <_ZN20Project_InfoViewBaseC1Ev+0x35c>)
 8007f8a:	63e5      	str	r5, [r4, #60]	; 0x3c
 8007f8c:	f84b 3b40 	str.w	r3, [fp], #64
        : Widget(), alpha(255), color(0)
 8007f90:	2226      	movs	r2, #38	; 0x26
 8007f92:	4629      	mov	r1, r5
 8007f94:	4658      	mov	r0, fp
 8007f96:	f023 fbe8 	bl	802b76a <memset>
 8007f9a:	4658      	mov	r0, fp
 8007f9c:	f7fa fcf6 	bl	800298c <_ZN8touchgfx6WidgetC1Ev>
 8007fa0:	f104 0a6c 	add.w	sl, r4, #108	; 0x6c
 8007fa4:	26ff      	movs	r6, #255	; 0xff
 8007fa6:	4bcb      	ldr	r3, [pc, #812]	; (80082d4 <_ZN20Project_InfoViewBaseC1Ev+0x360>)
 8007fa8:	6423      	str	r3, [r4, #64]	; 0x40
        : Widget(), bitmap(bmp), alpha(255)
 8007faa:	2226      	movs	r2, #38	; 0x26
 8007fac:	f64f 73ff 	movw	r3, #65535	; 0xffff
 8007fb0:	4629      	mov	r1, r5
 8007fb2:	f884 6066 	strb.w	r6, [r4, #102]	; 0x66
 8007fb6:	4650      	mov	r0, sl
 8007fb8:	66a5      	str	r5, [r4, #104]	; 0x68
 8007fba:	f8ad 3028 	strh.w	r3, [sp, #40]	; 0x28
 8007fbe:	f023 fbd4 	bl	802b76a <memset>
 8007fc2:	4650      	mov	r0, sl
 8007fc4:	f7fa fce2 	bl	800298c <_ZN8touchgfx6WidgetC1Ev>
 8007fc8:	4bc3      	ldr	r3, [pc, #780]	; (80082d8 <_ZN20Project_InfoViewBaseC1Ev+0x364>)
 8007fca:	66e3      	str	r3, [r4, #108]	; 0x6c
 8007fcc:	f8bd 3028 	ldrh.w	r3, [sp, #40]	; 0x28
 8007fd0:	f8a4 3092 	strh.w	r3, [r4, #146]	; 0x92
        Image::setBitmap(bmp);
 8007fd4:	a90a      	add	r1, sp, #40	; 0x28
 8007fd6:	4650      	mov	r0, sl
 8007fd8:	f104 0998 	add.w	r9, r4, #152	; 0x98
        : Widget(), bitmap(bmp), alpha(255)
 8007fdc:	f884 6094 	strb.w	r6, [r4, #148]	; 0x94
        Image::setBitmap(bmp);
 8007fe0:	f00b fdf7 	bl	8013bd2 <_ZN8touchgfx5Image9setBitmapERKNS_6BitmapE>
        : TextArea()
 8007fe4:	4648      	mov	r0, r9
 8007fe6:	f7fa fd35 	bl	8002a54 <_ZN8touchgfx8TextAreaC1Ev>
 8007fea:	f104 07e4 	add.w	r7, r4, #228	; 0xe4
        : TextAreaWithWildcardBase(), wc1(0)
 8007fee:	4bbb      	ldr	r3, [pc, #748]	; (80082dc <_ZN20Project_InfoViewBaseC1Ev+0x368>)
 8007ff0:	f8c4 3098 	str.w	r3, [r4, #152]	; 0x98
 8007ff4:	f8c4 50e0 	str.w	r5, [r4, #224]	; 0xe0
 8007ff8:	4638      	mov	r0, r7
 8007ffa:	f00a fadd 	bl	80125b8 <_ZN8touchgfx4LineC1Ev>
 8007ffe:	f504 73aa 	add.w	r3, r4, #340	; 0x154
        : AbstractPainterRGB565(), AbstractPainterColor(color)
 8008002:	4618      	mov	r0, r3
 8008004:	9303      	str	r3, [sp, #12]
 8008006:	f7fa fac5 	bl	8002594 <_ZN8touchgfx21AbstractPainterRGB565C1Ev>
 800800a:	4bb5      	ldr	r3, [pc, #724]	; (80082e0 <_ZN20Project_InfoViewBaseC1Ev+0x36c>)
 800800c:	f8c4 3154 	str.w	r3, [r4, #340]	; 0x154
 8008010:	3324      	adds	r3, #36	; 0x24
 8008012:	f8c4 315c 	str.w	r3, [r4, #348]	; 0x15c
 8008016:	f504 73b4 	add.w	r3, r4, #360	; 0x168
 800801a:	4618      	mov	r0, r3
 800801c:	f8c4 5160 	str.w	r5, [r4, #352]	; 0x160
 8008020:	f504 78d8 	add.w	r8, r4, #432	; 0x1b0
 8008024:	ee09 3a10 	vmov	s18, r3
 8008028:	f00b ff0a 	bl	8013e40 <_ZN8touchgfx15ButtonWithLabelC1Ev>
 800802c:	4640      	mov	r0, r8
 800802e:	f7fa fd11 	bl	8002a54 <_ZN8touchgfx8TextAreaC1Ev>
 8008032:	f504 73fc 	add.w	r3, r4, #504	; 0x1f8
 8008036:	4618      	mov	r0, r3
 8008038:	ee08 3a10 	vmov	s16, r3
 800803c:	f7fa fd0a 	bl	8002a54 <_ZN8touchgfx8TextAreaC1Ev>
 8008040:	f504 7310 	add.w	r3, r4, #576	; 0x240
 8008044:	4618      	mov	r0, r3
 8008046:	ee08 3a90 	vmov	s17, r3
 800804a:	f7fa fd03 	bl	8002a54 <_ZN8touchgfx8TextAreaC1Ev>
        : pobject(pObject), pmemfun(pmemfun_1)
 800804e:	4aa5      	ldr	r2, [pc, #660]	; (80082e4 <_ZN20Project_InfoViewBaseC1Ev+0x370>)
 8008050:	f504 5380 	add.w	r3, r4, #4096	; 0x1000
 8008054:	e9c3 2428 	strd	r2, r4, [r3, #160]	; 0xa0
 8008058:	4aa3      	ldr	r2, [pc, #652]	; (80082e8 <_ZN20Project_InfoViewBaseC1Ev+0x374>)
    touchgfx::CanvasWidgetRenderer::setupBuffer(canvasBuffer, CANVAS_BUFFER_SIZE);
 800805a:	f44f 6161 	mov.w	r1, #3600	; 0xe10
 800805e:	e9c3 252a 	strd	r2, r5, [r3, #168]	; 0xa8
 8008062:	f504 7024 	add.w	r0, r4, #656	; 0x290
 8008066:	f00c fda7 	bl	8014bb8 <_ZN8touchgfx20CanvasWidgetRenderer11setupBufferEPhj>
    __background.setPosition(0, 0, 240, 320);
 800806a:	f44f 73a0 	mov.w	r3, #320	; 0x140
 800806e:	462a      	mov	r2, r5
 8008070:	4658      	mov	r0, fp
 8008072:	9300      	str	r3, [sp, #0]
 8008074:	4629      	mov	r1, r5
 8008076:	23f0      	movs	r3, #240	; 0xf0
 8008078:	f7fa fc63 	bl	8002942 <_ZN8touchgfx8Drawable11setPositionEssss>
 800807c:	1d26      	adds	r6, r4, #4
        color = newColor;
 800807e:	f04f 437f 	mov.w	r3, #4278190080	; 0xff000000
 8008082:	66a3      	str	r3, [r4, #104]	; 0x68
 8008084:	4659      	mov	r1, fp
 8008086:	4630      	mov	r0, r6
 8008088:	f008 f9ca 	bl	8010420 <_ZN8touchgfx9Container3addERNS_8DrawableE>
    image1.setXY(0, 0);
 800808c:	462a      	mov	r2, r5
 800808e:	4650      	mov	r0, sl
 8008090:	4629      	mov	r1, r5
 8008092:	f7fa fc49 	bl	8002928 <_ZN8touchgfx8Drawable5setXYEss>
 8008096:	2308      	movs	r3, #8
    image1.setBitmap(touchgfx::Bitmap(BITMAP_BACKGROUND_2_RESIZED_4_ID));
 8008098:	4650      	mov	r0, sl
 800809a:	a90a      	add	r1, sp, #40	; 0x28
 800809c:	f8ad 3028 	strh.w	r3, [sp, #40]	; 0x28
 80080a0:	f00b fd97 	bl	8013bd2 <_ZN8touchgfx5Image9setBitmapERKNS_6BitmapE>
 80080a4:	4651      	mov	r1, sl
 80080a6:	4630      	mov	r0, r6
 80080a8:	f008 f9ba 	bl	8010420 <_ZN8touchgfx9Container3addERNS_8DrawableE>
    textArea3_1.setXY(86, 308);
 80080ac:	f44f 729a 	mov.w	r2, #308	; 0x134
 80080b0:	2156      	movs	r1, #86	; 0x56
 80080b2:	4648      	mov	r0, r9
 80080b4:	f7fa fc38 	bl	8002928 <_ZN8touchgfx8Drawable5setXYEss>
 80080b8:	f8d4 3098 	ldr.w	r3, [r4, #152]	; 0x98
        linespace = space;
 80080bc:	f8a4 50cc 	strh.w	r5, [r4, #204]	; 0xcc
        boundingArea = calculateBoundingArea();
 80080c0:	f10d 0a10 	add.w	sl, sp, #16
        color = newColor;
 80080c4:	f04f 3bff 	mov.w	fp, #4294967295
        boundingArea = calculateBoundingArea();
 80080c8:	4650      	mov	r0, sl
 80080ca:	f8d3 3084 	ldr.w	r3, [r3, #132]	; 0x84
        color = newColor;
 80080ce:	f8c4 b0c8 	str.w	fp, [r4, #200]	; 0xc8
        boundingArea = calculateBoundingArea();
 80080d2:	4649      	mov	r1, r9
 80080d4:	4798      	blx	r3
 80080d6:	e89a 0007 	ldmia.w	sl, {r0, r1, r2}
 80080da:	f104 03d4 	add.w	r3, r4, #212	; 0xd4
 80080de:	e883 0007 	stmia.w	r3, {r0, r1, r2}
        assert(typedTexts != 0 && "TypedText database has not been initialized.");
 80080e2:	4b82      	ldr	r3, [pc, #520]	; (80082ec <_ZN20Project_InfoViewBaseC1Ev+0x378>)
 80080e4:	681b      	ldr	r3, [r3, #0]
    Unicode::snprintf(textArea3_1Buffer, TEXTAREA3_1_SIZE, "%s", touchgfx::TypedText(T___SINGLEUSE_5C9S).getText());
 80080e6:	f504 7a22 	add.w	sl, r4, #648	; 0x288
 80080ea:	b92b      	cbnz	r3, 80080f8 <_ZN20Project_InfoViewBaseC1Ev+0x184>
 80080ec:	4b80      	ldr	r3, [pc, #512]	; (80082f0 <_ZN20Project_InfoViewBaseC1Ev+0x37c>)
 80080ee:	4a81      	ldr	r2, [pc, #516]	; (80082f4 <_ZN20Project_InfoViewBaseC1Ev+0x380>)
 80080f0:	2160      	movs	r1, #96	; 0x60
        assert(hasValidId() && "typedTextId larger than numberOfTypedTexts.");
 80080f2:	4881      	ldr	r0, [pc, #516]	; (80082f8 <_ZN20Project_InfoViewBaseC1Ev+0x384>)
 80080f4:	f023 f934 	bl	802b360 <__assert_func>
        return typedTextId < numberOfTypedTexts;
 80080f8:	4b80      	ldr	r3, [pc, #512]	; (80082fc <_ZN20Project_InfoViewBaseC1Ev+0x388>)
        assert(hasValidId() && "typedTextId larger than numberOfTypedTexts.");
 80080fa:	881b      	ldrh	r3, [r3, #0]
 80080fc:	2b22      	cmp	r3, #34	; 0x22
 80080fe:	d803      	bhi.n	8008108 <_ZN20Project_InfoViewBaseC1Ev+0x194>
 8008100:	4b7f      	ldr	r3, [pc, #508]	; (8008300 <_ZN20Project_InfoViewBaseC1Ev+0x38c>)
 8008102:	4a7c      	ldr	r2, [pc, #496]	; (80082f4 <_ZN20Project_InfoViewBaseC1Ev+0x380>)
 8008104:	2161      	movs	r1, #97	; 0x61
 8008106:	e7f4      	b.n	80080f2 <_ZN20Project_InfoViewBaseC1Ev+0x17e>
        return texts->getText(typedTextId);
 8008108:	4b7e      	ldr	r3, [pc, #504]	; (8008304 <_ZN20Project_InfoViewBaseC1Ev+0x390>)
 800810a:	2122      	movs	r1, #34	; 0x22
 800810c:	6818      	ldr	r0, [r3, #0]
 800810e:	f000 fb1b 	bl	8008748 <_ZNK8touchgfx5Texts7getTextEt>
 8008112:	4a7d      	ldr	r2, [pc, #500]	; (8008308 <_ZN20Project_InfoViewBaseC1Ev+0x394>)
 8008114:	4603      	mov	r3, r0
 8008116:	2104      	movs	r1, #4
 8008118:	4650      	mov	r0, sl
 800811a:	f011 fc07 	bl	801992c <_ZN8touchgfx7Unicode8snprintfEPttPKcz>
    textArea3_1.resizeToCurrentText();
 800811e:	4648      	mov	r0, r9
        wc1 = value;
 8008120:	f8c4 a0e0 	str.w	sl, [r4, #224]	; 0xe0
 8008124:	f00a ff84 	bl	8013030 <_ZN8touchgfx8TextArea19resizeToCurrentTextEv>
        : typedTextId(id)
 8008128:	4b78      	ldr	r3, [pc, #480]	; (800830c <_ZN20Project_InfoViewBaseC1Ev+0x398>)
 800812a:	930a      	str	r3, [sp, #40]	; 0x28
    textArea3_1.setTypedText(touchgfx::TypedText(T___SINGLEUSE_KYIO));
 800812c:	a90a      	add	r1, sp, #40	; 0x28
 800812e:	2323      	movs	r3, #35	; 0x23
 8008130:	4648      	mov	r0, r9
 8008132:	f8ad 302c 	strh.w	r3, [sp, #44]	; 0x2c
 8008136:	f00a ff9b 	bl	8013070 <_ZN8touchgfx8TextArea12setTypedTextERKNS_9TypedTextE>
 800813a:	4649      	mov	r1, r9
 800813c:	4630      	mov	r0, r6
 800813e:	f008 f96f 	bl	8010420 <_ZN8touchgfx9Container3addERNS_8DrawableE>
    line1.setPosition(0, 50, 240, 10);
 8008142:	230a      	movs	r3, #10
 8008144:	9300      	str	r3, [sp, #0]
 8008146:	2232      	movs	r2, #50	; 0x32
 8008148:	23f0      	movs	r3, #240	; 0xf0
 800814a:	4629      	mov	r1, r5
 800814c:	4638      	mov	r0, r7
 800814e:	f7fa fbf8 	bl	8002942 <_ZN8touchgfx8Drawable11setPositionEssss>
 8008152:	9b03      	ldr	r3, [sp, #12]
 8008154:	f8c4 310c 	str.w	r3, [r4, #268]	; 0x10c
        setStart(CWRUtil::toQ5<T>(x), CWRUtil::toQ5<T>(y));
 8008158:	22a0      	movs	r2, #160	; 0xa0
 800815a:	4611      	mov	r1, r2
 800815c:	4638      	mov	r0, r7
 800815e:	f8c4 b160 	str.w	fp, [r4, #352]	; 0x160
        color565 = LCD16bpp::getNativeColor(painterColor);
 8008162:	f8a4 b164 	strh.w	fp, [r4, #356]	; 0x164
 8008166:	f00a fb3d 	bl	80127e4 <_ZN8touchgfx4Line8setStartENS_7CWRUtil2Q5ES2_>
        setEnd(CWRUtil::toQ5<T>(x), CWRUtil::toQ5<T>(y));
 800816a:	22a0      	movs	r2, #160	; 0xa0
 800816c:	f44f 51eb 	mov.w	r1, #7520	; 0x1d60
 8008170:	4638      	mov	r0, r7
 8008172:	f00a fb42 	bl	80127fa <_ZN8touchgfx4Line6setEndENS_7CWRUtil2Q5ES2_>
        if (lineWidthQ5 == widthQ5)
 8008176:	f8d4 3120 	ldr.w	r3, [r4, #288]	; 0x120
 800817a:	2b20      	cmp	r3, #32
 800817c:	d005      	beq.n	800818a <_ZN20Project_InfoViewBaseC1Ev+0x216>
        lineWidthQ5 = widthQ5;
 800817e:	2320      	movs	r3, #32
 8008180:	f8c4 3120 	str.w	r3, [r4, #288]	; 0x120
        updateCachedShape();
 8008184:	4638      	mov	r0, r7
 8008186:	f00a fa37 	bl	80125f8 <_ZN8touchgfx4Line17updateCachedShapeEv>
    line1.setLineEndingStyle(touchgfx::Line::ROUND_CAP_ENDING);
 800818a:	4638      	mov	r0, r7
 800818c:	2101      	movs	r1, #1
 800818e:	f00a fb3f 	bl	8012810 <_ZN8touchgfx4Line18setLineEndingStyleENS0_17LINE_ENDING_STYLEE>
 8008192:	4639      	mov	r1, r7
 8008194:	4630      	mov	r0, r6
 8008196:	f008 f943 	bl	8010420 <_ZN8touchgfx9Container3addERNS_8DrawableE>
    buttonWithLabel3.setXY(33, 240);
 800819a:	ee19 0a10 	vmov	r0, s18
 800819e:	22f0      	movs	r2, #240	; 0xf0
 80081a0:	2121      	movs	r1, #33	; 0x21
 80081a2:	f7fa fbc1 	bl	8002928 <_ZN8touchgfx8Drawable5setXYEss>
 80081a6:	2303      	movs	r3, #3
    buttonWithLabel3.setBitmaps(touchgfx::Bitmap(BITMAP_ALTERNATE_THEME_IMAGES_WIDGETS_BUTTON_REGULAR_HEIGHT_50_SMALL_ROUND_PRESSED_ID), touchgfx::Bitmap(BITMAP_ALTERNATE_THEME_IMAGES_WIDGETS_BUTTON_REGULAR_HEIGHT_50_SMALL_ROUND_NORMAL_ID));
 80081a8:	aa0a      	add	r2, sp, #40	; 0x28
 80081aa:	a909      	add	r1, sp, #36	; 0x24
 80081ac:	ee19 0a10 	vmov	r0, s18
 80081b0:	f8ad 3024 	strh.w	r3, [sp, #36]	; 0x24
 80081b4:	2302      	movs	r3, #2
 80081b6:	f8ad 3028 	strh.w	r3, [sp, #40]	; 0x28
 80081ba:	f00b fb14 	bl	80137e6 <_ZN8touchgfx6Button10setBitmapsERKNS_6BitmapES3_>
class TypedText
 80081be:	234a      	movs	r3, #74	; 0x4a
        updateTextPosition();
 80081c0:	ee19 0a10 	vmov	r0, s18
 80081c4:	f8a4 31a0 	strh.w	r3, [r4, #416]	; 0x1a0
 80081c8:	f7fa fbf2 	bl	80029b0 <_ZN8touchgfx15ButtonWithLabel18updateTextPositionEv>
        color = col;
 80081cc:	f04f 37ff 	mov.w	r7, #4294967295
    buttonWithLabel3.setAction(buttonCallback);
 80081d0:	f504 5385 	add.w	r3, r4, #4256	; 0x10a0
 80081d4:	f8c4 3190 	str.w	r3, [r4, #400]	; 0x190
 80081d8:	ee19 1a10 	vmov	r1, s18
 80081dc:	4630      	mov	r0, r6
        colorPressed = col;
 80081de:	e9c4 7769 	strd	r7, r7, [r4, #420]	; 0x1a4
 80081e2:	ad04      	add	r5, sp, #16
 80081e4:	f008 f91c 	bl	8010420 <_ZN8touchgfx9Container3addERNS_8DrawableE>
        linespace = space;
 80081e8:	f04f 0a00 	mov.w	sl, #0
    textArea3.setXY(5, 91);
 80081ec:	225b      	movs	r2, #91	; 0x5b
 80081ee:	4640      	mov	r0, r8
 80081f0:	2105      	movs	r1, #5
 80081f2:	f7fa fb99 	bl	8002928 <_ZN8touchgfx8Drawable5setXYEss>
        boundingArea = calculateBoundingArea();
 80081f6:	4641      	mov	r1, r8
 80081f8:	4628      	mov	r0, r5
        color = newColor;
 80081fa:	f8c4 71e0 	str.w	r7, [r4, #480]	; 0x1e0
        linespace = space;
 80081fe:	f8a4 a1e4 	strh.w	sl, [r4, #484]	; 0x1e4
        boundingArea = calculateBoundingArea();
 8008202:	f00a fc9b 	bl	8012b3c <_ZNK8touchgfx8TextArea21calculateBoundingAreaEv>
 8008206:	e895 0007 	ldmia.w	r5, {r0, r1, r2}
 800820a:	f108 033c 	add.w	r3, r8, #60	; 0x3c
 800820e:	e883 0007 	stmia.w	r3, {r0, r1, r2}
        : typedTextId(id)
 8008212:	f8df 90f8 	ldr.w	r9, [pc, #248]	; 800830c <_ZN20Project_InfoViewBaseC1Ev+0x398>
 8008216:	f8cd 9028 	str.w	r9, [sp, #40]	; 0x28
 800821a:	234b      	movs	r3, #75	; 0x4b
    textArea3.setTypedText(touchgfx::TypedText(T___SINGLEUSE_9J9T));
 800821c:	a90a      	add	r1, sp, #40	; 0x28
 800821e:	4640      	mov	r0, r8
 8008220:	f8ad 302c 	strh.w	r3, [sp, #44]	; 0x2c
 8008224:	f00a ff24 	bl	8013070 <_ZN8touchgfx8TextArea12setTypedTextERKNS_9TypedTextE>
 8008228:	4641      	mov	r1, r8
 800822a:	4630      	mov	r0, r6
 800822c:	f008 f8f8 	bl	8010420 <_ZN8touchgfx9Container3addERNS_8DrawableE>
    textArea2.setXY(69, 35);
 8008230:	ee18 0a10 	vmov	r0, s16
 8008234:	2223      	movs	r2, #35	; 0x23
 8008236:	2145      	movs	r1, #69	; 0x45
 8008238:	f7fa fb76 	bl	8002928 <_ZN8touchgfx8Drawable5setXYEss>
 800823c:	ee18 1a10 	vmov	r1, s16
 8008240:	4628      	mov	r0, r5
        color = newColor;
 8008242:	f8c4 7228 	str.w	r7, [r4, #552]	; 0x228
        linespace = space;
 8008246:	f8a4 a22c 	strh.w	sl, [r4, #556]	; 0x22c
        boundingArea = calculateBoundingArea();
 800824a:	f00a fc77 	bl	8012b3c <_ZNK8touchgfx8TextArea21calculateBoundingAreaEv>
 800824e:	e895 0007 	ldmia.w	r5, {r0, r1, r2}
 8008252:	ee18 3a10 	vmov	r3, s16
 8008256:	333c      	adds	r3, #60	; 0x3c
 8008258:	e883 0007 	stmia.w	r3, {r0, r1, r2}
 800825c:	234d      	movs	r3, #77	; 0x4d
    textArea2.setTypedText(touchgfx::TypedText(T___SINGLEUSE_8N0V));
 800825e:	ee18 0a10 	vmov	r0, s16
 8008262:	a90a      	add	r1, sp, #40	; 0x28
 8008264:	f8ad 302c 	strh.w	r3, [sp, #44]	; 0x2c
 8008268:	f8cd 9028 	str.w	r9, [sp, #40]	; 0x28
 800826c:	f00a ff00 	bl	8013070 <_ZN8touchgfx8TextArea12setTypedTextERKNS_9TypedTextE>
 8008270:	ee18 1a10 	vmov	r1, s16
 8008274:	4630      	mov	r0, r6
 8008276:	f008 f8d3 	bl	8010420 <_ZN8touchgfx9Container3addERNS_8DrawableE>
    textArea1.setXY(54, 12);
 800827a:	ee18 0a90 	vmov	r0, s17
 800827e:	220c      	movs	r2, #12
 8008280:	2136      	movs	r1, #54	; 0x36
 8008282:	f7fa fb51 	bl	8002928 <_ZN8touchgfx8Drawable5setXYEss>
 8008286:	ee18 1a90 	vmov	r1, s17
 800828a:	4628      	mov	r0, r5
        color = newColor;
 800828c:	f8c4 7270 	str.w	r7, [r4, #624]	; 0x270
        linespace = space;
 8008290:	f8a4 a274 	strh.w	sl, [r4, #628]	; 0x274
        boundingArea = calculateBoundingArea();
 8008294:	f00a fc52 	bl	8012b3c <_ZNK8touchgfx8TextArea21calculateBoundingAreaEv>
 8008298:	e895 0007 	ldmia.w	r5, {r0, r1, r2}
 800829c:	ee18 3a90 	vmov	r3, s17
 80082a0:	333c      	adds	r3, #60	; 0x3c
 80082a2:	e883 0007 	stmia.w	r3, {r0, r1, r2}
 80082a6:	234c      	movs	r3, #76	; 0x4c
    textArea1.setTypedText(touchgfx::TypedText(T___SINGLEUSE_SSFQ));
 80082a8:	ee18 0a90 	vmov	r0, s17
 80082ac:	a90a      	add	r1, sp, #40	; 0x28
 80082ae:	f8ad 302c 	strh.w	r3, [sp, #44]	; 0x2c
 80082b2:	f8cd 9028 	str.w	r9, [sp, #40]	; 0x28
 80082b6:	f00a fedb 	bl	8013070 <_ZN8touchgfx8TextArea12setTypedTextERKNS_9TypedTextE>
 80082ba:	4630      	mov	r0, r6
 80082bc:	ee18 1a90 	vmov	r1, s17
 80082c0:	f008 f8ae 	bl	8010420 <_ZN8touchgfx9Container3addERNS_8DrawableE>
}
 80082c4:	4620      	mov	r0, r4
 80082c6:	b00d      	add	sp, #52	; 0x34
 80082c8:	ecbd 8b04 	vpop	{d8-d9}
 80082cc:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
 80082d0:	0802e6f4 	.word	0x0802e6f4
 80082d4:	0802f444 	.word	0x0802f444
 80082d8:	0802f690 	.word	0x0802f690
 80082dc:	0802cf90 	.word	0x0802cf90
 80082e0:	0802f178 	.word	0x0802f178
 80082e4:	0802e6dc 	.word	0x0802e6dc
 80082e8:	08007f5d 	.word	0x08007f5d
 80082ec:	20013874 	.word	0x20013874
 80082f0:	0802cd40 	.word	0x0802cd40
 80082f4:	0802ce45 	.word	0x0802ce45
 80082f8:	0802cdbd 	.word	0x0802cdbd
 80082fc:	20013878 	.word	0x20013878
 8008300:	0802ce04 	.word	0x0802ce04
 8008304:	20013880 	.word	0x20013880
 8008308:	0802ce7d 	.word	0x0802ce7d
 800830c:	0802cef0 	.word	0x0802cef0

08008310 <_ZN20Shutting_OffViewBaseD1Ev>:
}

Shutting_OffViewBase::~Shutting_OffViewBase()
{

}
 8008310:	4770      	bx	lr

08008312 <_ZN20Shutting_OffViewBase11setupScreenEv>:

void Shutting_OffViewBase::setupScreen()
{

}
 8008312:	4770      	bx	lr

08008314 <_ZN20Shutting_OffViewBaseD0Ev>:
Shutting_OffViewBase::~Shutting_OffViewBase()
 8008314:	b510      	push	{r4, lr}
}
 8008316:	2198      	movs	r1, #152	; 0x98
Shutting_OffViewBase::~Shutting_OffViewBase()
 8008318:	4604      	mov	r4, r0
}
 800831a:	f022 fa0e 	bl	802a73a <_ZdlPvj>
 800831e:	4620      	mov	r0, r4
 8008320:	bd10      	pop	{r4, pc}
	...

08008324 <_ZN20Shutting_OffViewBaseC1Ev>:
Shutting_OffViewBase::Shutting_OffViewBase()
 8008324:	e92d 41f3 	stmdb	sp!, {r0, r1, r4, r5, r6, r7, r8, lr}
 8008328:	4604      	mov	r4, r0
 800832a:	4626      	mov	r6, r4
 800832c:	f00f fdd0 	bl	8017ed0 <_ZN8touchgfx6ScreenC1Ev>
 8008330:	2500      	movs	r5, #0
 8008332:	4b2e      	ldr	r3, [pc, #184]	; (80083ec <_ZN20Shutting_OffViewBaseC1Ev+0xc8>)
 8008334:	63e5      	str	r5, [r4, #60]	; 0x3c
 8008336:	f846 3b40 	str.w	r3, [r6], #64
        : Widget(), alpha(255), color(0)
 800833a:	4b2d      	ldr	r3, [pc, #180]	; (80083f0 <_ZN20Shutting_OffViewBaseC1Ev+0xcc>)
          cachedAbsX(0),
 800833c:	6625      	str	r5, [r4, #96]	; 0x60
        : x(0), y(0), width(0), height(0)
 800833e:	e9c4 3510 	strd	r3, r5, [r4, #64]	; 0x40
          touchable(false),
 8008342:	f44f 7280 	mov.w	r2, #256	; 0x100
 8008346:	23ff      	movs	r3, #255	; 0xff
 8008348:	f104 076c 	add.w	r7, r4, #108	; 0x6c
 800834c:	f8a4 2064 	strh.w	r2, [r4, #100]	; 0x64
 8008350:	f884 3066 	strb.w	r3, [r4, #102]	; 0x66
 8008354:	f8a4 2090 	strh.w	r2, [r4, #144]	; 0x90
 8008358:	f64f 73ff 	movw	r3, #65535	; 0xffff
        : Widget(), bitmap(bmp), alpha(255)
 800835c:	4a25      	ldr	r2, [pc, #148]	; (80083f4 <_ZN20Shutting_OffViewBaseC1Ev+0xd0>)
 800835e:	f8a4 3092 	strh.w	r3, [r4, #146]	; 0x92
 8008362:	f884 3094 	strb.w	r3, [r4, #148]	; 0x94
 8008366:	66e2      	str	r2, [r4, #108]	; 0x6c
        Image::setBitmap(bmp);
 8008368:	a901      	add	r1, sp, #4
 800836a:	4638      	mov	r0, r7
 800836c:	e9c4 5512 	strd	r5, r5, [r4, #72]	; 0x48
          parent(0),
 8008370:	e9c4 5514 	strd	r5, r5, [r4, #80]	; 0x50
          nextDrawChainElement(0),
 8008374:	e9c4 5516 	strd	r5, r5, [r4, #88]	; 0x58
 8008378:	e9c4 551c 	strd	r5, r5, [r4, #112]	; 0x70
 800837c:	e9c4 551e 	strd	r5, r5, [r4, #120]	; 0x78
          nextSibling(0),
 8008380:	e9c4 5520 	strd	r5, r5, [r4, #128]	; 0x80
          cachedAbsX(0),
 8008384:	e9c4 5522 	strd	r5, r5, [r4, #136]	; 0x88
        : color(col)
 8008388:	66a5      	str	r5, [r4, #104]	; 0x68
 800838a:	f8ad 3004 	strh.w	r3, [sp, #4]
 800838e:	f00b fc20 	bl	8013bd2 <_ZN8touchgfx5Image9setBitmapERKNS_6BitmapE>
        setXY(x, y);
 8008392:	462a      	mov	r2, r5
 8008394:	4629      	mov	r1, r5
 8008396:	4630      	mov	r0, r6
 8008398:	f7fa fac6 	bl	8002928 <_ZN8touchgfx8Drawable5setXYEss>
        setWidth(width);
 800839c:	4630      	mov	r0, r6
 800839e:	21f0      	movs	r1, #240	; 0xf0
 80083a0:	f7fa f844 	bl	800242c <_ZN8touchgfx8Drawable8setWidthEs>
        setHeight(height);
 80083a4:	4630      	mov	r0, r6
 80083a6:	f44f 71a0 	mov.w	r1, #320	; 0x140
 80083aa:	f7fa f841 	bl	8002430 <_ZN8touchgfx8Drawable9setHeightEs>
 80083ae:	f104 0804 	add.w	r8, r4, #4
        color = newColor;
 80083b2:	f04f 437f 	mov.w	r3, #4278190080	; 0xff000000
 80083b6:	66a3      	str	r3, [r4, #104]	; 0x68
 80083b8:	4631      	mov	r1, r6
 80083ba:	4640      	mov	r0, r8
 80083bc:	f008 f830 	bl	8010420 <_ZN8touchgfx9Container3addERNS_8DrawableE>
    image1.setXY(-3, 0);
 80083c0:	462a      	mov	r2, r5
 80083c2:	4638      	mov	r0, r7
 80083c4:	f06f 0102 	mvn.w	r1, #2
 80083c8:	f7fa faae 	bl	8002928 <_ZN8touchgfx8Drawable5setXYEss>
 80083cc:	230b      	movs	r3, #11
    image1.setBitmap(touchgfx::Bitmap(BITMAP_SHUTDOWN_ID));
 80083ce:	a901      	add	r1, sp, #4
 80083d0:	4638      	mov	r0, r7
 80083d2:	f8ad 3004 	strh.w	r3, [sp, #4]
 80083d6:	f00b fbfc 	bl	8013bd2 <_ZN8touchgfx5Image9setBitmapERKNS_6BitmapE>
 80083da:	4640      	mov	r0, r8
 80083dc:	4639      	mov	r1, r7
 80083de:	f008 f81f 	bl	8010420 <_ZN8touchgfx9Container3addERNS_8DrawableE>
}
 80083e2:	4620      	mov	r0, r4
 80083e4:	b002      	add	sp, #8
 80083e6:	e8bd 81f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, pc}
 80083ea:	bf00      	nop
 80083ec:	0802e728 	.word	0x0802e728
 80083f0:	0802f444 	.word	0x0802f444
 80083f4:	0802f690 	.word	0x0802f690

080083f8 <__tcf_0>:
KEEP extern const touchgfx::KerningNode kerning_verdana_10_4bpp[] FONT_KERNING_LOCATION_FLASH_ATTRIBUTE;
touchgfx::GeneratedFont& getFont_verdana_10_4bpp();

touchgfx::GeneratedFont& getFont_verdana_10_4bpp()
{
    static touchgfx::GeneratedFont verdana_10_4bpp(glyphs_verdana_10_4bpp, 95, 12, 10, 0, 0, 4, 1, 1, 1, unicodes_verdana_10_4bpp, kerning_verdana_10_4bpp, 63, 0, 0, 0);
 80083f8:	4770      	bx	lr
	...

080083fc <_Z23getFont_verdana_10_4bppv>:
{
 80083fc:	b530      	push	{r4, r5, lr}
    static touchgfx::GeneratedFont verdana_10_4bpp(glyphs_verdana_10_4bpp, 95, 12, 10, 0, 0, 4, 1, 1, 1, unicodes_verdana_10_4bpp, kerning_verdana_10_4bpp, 63, 0, 0, 0);
 80083fe:	4d17      	ldr	r5, [pc, #92]	; (800845c <_Z23getFont_verdana_10_4bppv+0x60>)
 8008400:	682c      	ldr	r4, [r5, #0]
 8008402:	f3bf 8f5b 	dmb	ish
 8008406:	f014 0401 	ands.w	r4, r4, #1
{
 800840a:	b08f      	sub	sp, #60	; 0x3c
    static touchgfx::GeneratedFont verdana_10_4bpp(glyphs_verdana_10_4bpp, 95, 12, 10, 0, 0, 4, 1, 1, 1, unicodes_verdana_10_4bpp, kerning_verdana_10_4bpp, 63, 0, 0, 0);
 800840c:	d122      	bne.n	8008454 <_Z23getFont_verdana_10_4bppv+0x58>
 800840e:	4628      	mov	r0, r5
 8008410:	f022 f995 	bl	802a73e <__cxa_guard_acquire>
 8008414:	b1f0      	cbz	r0, 8008454 <_Z23getFont_verdana_10_4bppv+0x58>
 8008416:	233f      	movs	r3, #63	; 0x3f
 8008418:	9309      	str	r3, [sp, #36]	; 0x24
 800841a:	4b11      	ldr	r3, [pc, #68]	; (8008460 <_Z23getFont_verdana_10_4bppv+0x64>)
 800841c:	9308      	str	r3, [sp, #32]
 800841e:	4b11      	ldr	r3, [pc, #68]	; (8008464 <_Z23getFont_verdana_10_4bppv+0x68>)
 8008420:	9307      	str	r3, [sp, #28]
 8008422:	2301      	movs	r3, #1
 8008424:	e9cd 3305 	strd	r3, r3, [sp, #20]
 8008428:	9304      	str	r3, [sp, #16]
 800842a:	2304      	movs	r3, #4
 800842c:	e9cd 4302 	strd	r4, r3, [sp, #8]
 8008430:	230a      	movs	r3, #10
 8008432:	490d      	ldr	r1, [pc, #52]	; (8008468 <_Z23getFont_verdana_10_4bppv+0x6c>)
 8008434:	9300      	str	r3, [sp, #0]
 8008436:	225f      	movs	r2, #95	; 0x5f
 8008438:	230c      	movs	r3, #12
 800843a:	e9cd 440b 	strd	r4, r4, [sp, #44]	; 0x2c
 800843e:	480b      	ldr	r0, [pc, #44]	; (800846c <_Z23getFont_verdana_10_4bppv+0x70>)
 8008440:	940a      	str	r4, [sp, #40]	; 0x28
 8008442:	9401      	str	r4, [sp, #4]
 8008444:	f7fd fa34 	bl	80058b0 <_ZN8touchgfx13GeneratedFontC1EPKNS_9GlyphNodeEttthhhhhhPKPKhPKNS_11KerningNodeEttPKtPKNS_24FontContextualFormsTableE>
 8008448:	4809      	ldr	r0, [pc, #36]	; (8008470 <_Z23getFont_verdana_10_4bppv+0x74>)
 800844a:	f022 ffa7 	bl	802b39c <atexit>
 800844e:	4628      	mov	r0, r5
 8008450:	f022 f981 	bl	802a756 <__cxa_guard_release>
    return verdana_10_4bpp;
}
 8008454:	4805      	ldr	r0, [pc, #20]	; (800846c <_Z23getFont_verdana_10_4bppv+0x70>)
 8008456:	b00f      	add	sp, #60	; 0x3c
 8008458:	bd30      	pop	{r4, r5, pc}
 800845a:	bf00      	nop
 800845c:	2000291c 	.word	0x2000291c
 8008460:	08047314 	.word	0x08047314
 8008464:	08047550 	.word	0x08047550
 8008468:	0804635c 	.word	0x0804635c
 800846c:	20002920 	.word	0x20002920
 8008470:	080083f9 	.word	0x080083f9

08008474 <__tcf_0>:
KEEP extern const touchgfx::KerningNode kerning_verdana_12_4bpp[] FONT_KERNING_LOCATION_FLASH_ATTRIBUTE;
touchgfx::GeneratedFont& getFont_verdana_12_4bpp();

touchgfx::GeneratedFont& getFont_verdana_12_4bpp()
{
    static touchgfx::GeneratedFont verdana_12_4bpp(glyphs_verdana_12_4bpp, 96, 15, 12, 0, 0, 4, 1, 1, 1, unicodes_verdana_12_4bpp, kerning_verdana_12_4bpp, 63, 0, 0, 0);
 8008474:	4770      	bx	lr
	...

08008478 <_Z23getFont_verdana_12_4bppv>:
{
 8008478:	b530      	push	{r4, r5, lr}
    static touchgfx::GeneratedFont verdana_12_4bpp(glyphs_verdana_12_4bpp, 96, 15, 12, 0, 0, 4, 1, 1, 1, unicodes_verdana_12_4bpp, kerning_verdana_12_4bpp, 63, 0, 0, 0);
 800847a:	4d17      	ldr	r5, [pc, #92]	; (80084d8 <_Z23getFont_verdana_12_4bppv+0x60>)
 800847c:	682c      	ldr	r4, [r5, #0]
 800847e:	f3bf 8f5b 	dmb	ish
 8008482:	f014 0401 	ands.w	r4, r4, #1
{
 8008486:	b08f      	sub	sp, #60	; 0x3c
    static touchgfx::GeneratedFont verdana_12_4bpp(glyphs_verdana_12_4bpp, 96, 15, 12, 0, 0, 4, 1, 1, 1, unicodes_verdana_12_4bpp, kerning_verdana_12_4bpp, 63, 0, 0, 0);
 8008488:	d122      	bne.n	80084d0 <_Z23getFont_verdana_12_4bppv+0x58>
 800848a:	4628      	mov	r0, r5
 800848c:	f022 f957 	bl	802a73e <__cxa_guard_acquire>
 8008490:	b1f0      	cbz	r0, 80084d0 <_Z23getFont_verdana_12_4bppv+0x58>
 8008492:	233f      	movs	r3, #63	; 0x3f
 8008494:	9309      	str	r3, [sp, #36]	; 0x24
 8008496:	4b11      	ldr	r3, [pc, #68]	; (80084dc <_Z23getFont_verdana_12_4bppv+0x64>)
 8008498:	9308      	str	r3, [sp, #32]
 800849a:	4b11      	ldr	r3, [pc, #68]	; (80084e0 <_Z23getFont_verdana_12_4bppv+0x68>)
 800849c:	9307      	str	r3, [sp, #28]
 800849e:	2301      	movs	r3, #1
 80084a0:	e9cd 3305 	strd	r3, r3, [sp, #20]
 80084a4:	9304      	str	r3, [sp, #16]
 80084a6:	2304      	movs	r3, #4
 80084a8:	e9cd 4302 	strd	r4, r3, [sp, #8]
 80084ac:	230c      	movs	r3, #12
 80084ae:	490d      	ldr	r1, [pc, #52]	; (80084e4 <_Z23getFont_verdana_12_4bppv+0x6c>)
 80084b0:	9300      	str	r3, [sp, #0]
 80084b2:	2260      	movs	r2, #96	; 0x60
 80084b4:	230f      	movs	r3, #15
 80084b6:	e9cd 440b 	strd	r4, r4, [sp, #44]	; 0x2c
 80084ba:	480b      	ldr	r0, [pc, #44]	; (80084e8 <_Z23getFont_verdana_12_4bppv+0x70>)
 80084bc:	940a      	str	r4, [sp, #40]	; 0x28
 80084be:	9401      	str	r4, [sp, #4]
 80084c0:	f7fd f9f6 	bl	80058b0 <_ZN8touchgfx13GeneratedFontC1EPKNS_9GlyphNodeEttthhhhhhPKPKhPKNS_11KerningNodeEttPKtPKNS_24FontContextualFormsTableE>
 80084c4:	4809      	ldr	r0, [pc, #36]	; (80084ec <_Z23getFont_verdana_12_4bppv+0x74>)
 80084c6:	f022 ff69 	bl	802b39c <atexit>
 80084ca:	4628      	mov	r0, r5
 80084cc:	f022 f943 	bl	802a756 <__cxa_guard_release>
    return verdana_12_4bpp;
}
 80084d0:	4805      	ldr	r0, [pc, #20]	; (80084e8 <_Z23getFont_verdana_12_4bppv+0x70>)
 80084d2:	b00f      	add	sp, #60	; 0x3c
 80084d4:	bd30      	pop	{r4, r5, pc}
 80084d6:	bf00      	nop
 80084d8:	2000294c 	.word	0x2000294c
 80084dc:	08047348 	.word	0x08047348
 80084e0:	08047554 	.word	0x08047554
 80084e4:	08046890 	.word	0x08046890
 80084e8:	20002950 	.word	0x20002950
 80084ec:	08008475 	.word	0x08008475

080084f0 <__tcf_0>:
KEEP extern const touchgfx::KerningNode kerning_verdana_19_4bpp[] FONT_KERNING_LOCATION_FLASH_ATTRIBUTE;
touchgfx::GeneratedFont& getFont_verdana_19_4bpp();

touchgfx::GeneratedFont& getFont_verdana_19_4bpp()
{
    static touchgfx::GeneratedFont verdana_19_4bpp(glyphs_verdana_19_4bpp, 95, 23, 19, 0, 0, 4, 1, 1, 1, unicodes_verdana_19_4bpp, kerning_verdana_19_4bpp, 63, 0, 0, 0);
 80084f0:	4770      	bx	lr
	...

080084f4 <_Z23getFont_verdana_19_4bppv>:
{
 80084f4:	b530      	push	{r4, r5, lr}
    static touchgfx::GeneratedFont verdana_19_4bpp(glyphs_verdana_19_4bpp, 95, 23, 19, 0, 0, 4, 1, 1, 1, unicodes_verdana_19_4bpp, kerning_verdana_19_4bpp, 63, 0, 0, 0);
 80084f6:	4d17      	ldr	r5, [pc, #92]	; (8008554 <_Z23getFont_verdana_19_4bppv+0x60>)
 80084f8:	682c      	ldr	r4, [r5, #0]
 80084fa:	f3bf 8f5b 	dmb	ish
 80084fe:	f014 0401 	ands.w	r4, r4, #1
{
 8008502:	b08f      	sub	sp, #60	; 0x3c
    static touchgfx::GeneratedFont verdana_19_4bpp(glyphs_verdana_19_4bpp, 95, 23, 19, 0, 0, 4, 1, 1, 1, unicodes_verdana_19_4bpp, kerning_verdana_19_4bpp, 63, 0, 0, 0);
 8008504:	d122      	bne.n	800854c <_Z23getFont_verdana_19_4bppv+0x58>
 8008506:	4628      	mov	r0, r5
 8008508:	f022 f919 	bl	802a73e <__cxa_guard_acquire>
 800850c:	b1f0      	cbz	r0, 800854c <_Z23getFont_verdana_19_4bppv+0x58>
 800850e:	233f      	movs	r3, #63	; 0x3f
 8008510:	9309      	str	r3, [sp, #36]	; 0x24
 8008512:	4b11      	ldr	r3, [pc, #68]	; (8008558 <_Z23getFont_verdana_19_4bppv+0x64>)
 8008514:	9308      	str	r3, [sp, #32]
 8008516:	4b11      	ldr	r3, [pc, #68]	; (800855c <_Z23getFont_verdana_19_4bppv+0x68>)
 8008518:	9307      	str	r3, [sp, #28]
 800851a:	2301      	movs	r3, #1
 800851c:	e9cd 3305 	strd	r3, r3, [sp, #20]
 8008520:	9304      	str	r3, [sp, #16]
 8008522:	2304      	movs	r3, #4
 8008524:	e9cd 4302 	strd	r4, r3, [sp, #8]
 8008528:	2313      	movs	r3, #19
 800852a:	490d      	ldr	r1, [pc, #52]	; (8008560 <_Z23getFont_verdana_19_4bppv+0x6c>)
 800852c:	9300      	str	r3, [sp, #0]
 800852e:	225f      	movs	r2, #95	; 0x5f
 8008530:	2317      	movs	r3, #23
 8008532:	e9cd 440b 	strd	r4, r4, [sp, #44]	; 0x2c
 8008536:	480b      	ldr	r0, [pc, #44]	; (8008564 <_Z23getFont_verdana_19_4bppv+0x70>)
 8008538:	940a      	str	r4, [sp, #40]	; 0x28
 800853a:	9401      	str	r4, [sp, #4]
 800853c:	f7fd f9b8 	bl	80058b0 <_ZN8touchgfx13GeneratedFontC1EPKNS_9GlyphNodeEttthhhhhhPKPKhPKNS_11KerningNodeEttPKtPKNS_24FontContextualFormsTableE>
 8008540:	4809      	ldr	r0, [pc, #36]	; (8008568 <_Z23getFont_verdana_19_4bppv+0x74>)
 8008542:	f022 ff2b 	bl	802b39c <atexit>
 8008546:	4628      	mov	r0, r5
 8008548:	f022 f905 	bl	802a756 <__cxa_guard_release>
    return verdana_19_4bpp;
}
 800854c:	4805      	ldr	r0, [pc, #20]	; (8008564 <_Z23getFont_verdana_19_4bppv+0x70>)
 800854e:	b00f      	add	sp, #60	; 0x3c
 8008550:	bd30      	pop	{r4, r5, pc}
 8008552:	bf00      	nop
 8008554:	2000297c 	.word	0x2000297c
 8008558:	080473cc 	.word	0x080473cc
 800855c:	08047558 	.word	0x08047558
 8008560:	08046dd0 	.word	0x08046dd0
 8008564:	20002980 	.word	0x20002980
 8008568:	080084f1 	.word	0x080084f1

0800856c <__tcf_0>:
KEEP extern const touchgfx::KerningNode kerning_verdana_40_4bpp[] FONT_KERNING_LOCATION_FLASH_ATTRIBUTE;
touchgfx::GeneratedFont& getFont_verdana_40_4bpp();

touchgfx::GeneratedFont& getFont_verdana_40_4bpp()
{
    static touchgfx::GeneratedFont verdana_40_4bpp(glyphs_verdana_40_4bpp, 1, 40, 40, 0, 0, 4, 1, 0, 0, unicodes_verdana_40_4bpp, kerning_verdana_40_4bpp, 63, 0, 0, 0);
 800856c:	4770      	bx	lr
	...

08008570 <_Z23getFont_verdana_40_4bppv>:
{
 8008570:	b530      	push	{r4, r5, lr}
    static touchgfx::GeneratedFont verdana_40_4bpp(glyphs_verdana_40_4bpp, 1, 40, 40, 0, 0, 4, 1, 0, 0, unicodes_verdana_40_4bpp, kerning_verdana_40_4bpp, 63, 0, 0, 0);
 8008572:	4d16      	ldr	r5, [pc, #88]	; (80085cc <_Z23getFont_verdana_40_4bppv+0x5c>)
 8008574:	682c      	ldr	r4, [r5, #0]
 8008576:	f3bf 8f5b 	dmb	ish
 800857a:	f014 0401 	ands.w	r4, r4, #1
{
 800857e:	b08f      	sub	sp, #60	; 0x3c
    static touchgfx::GeneratedFont verdana_40_4bpp(glyphs_verdana_40_4bpp, 1, 40, 40, 0, 0, 4, 1, 0, 0, unicodes_verdana_40_4bpp, kerning_verdana_40_4bpp, 63, 0, 0, 0);
 8008580:	d120      	bne.n	80085c4 <_Z23getFont_verdana_40_4bppv+0x54>
 8008582:	4628      	mov	r0, r5
 8008584:	f022 f8db 	bl	802a73e <__cxa_guard_acquire>
 8008588:	b1e0      	cbz	r0, 80085c4 <_Z23getFont_verdana_40_4bppv+0x54>
 800858a:	233f      	movs	r3, #63	; 0x3f
 800858c:	9309      	str	r3, [sp, #36]	; 0x24
 800858e:	4b10      	ldr	r3, [pc, #64]	; (80085d0 <_Z23getFont_verdana_40_4bppv+0x60>)
 8008590:	9308      	str	r3, [sp, #32]
 8008592:	4b10      	ldr	r3, [pc, #64]	; (80085d4 <_Z23getFont_verdana_40_4bppv+0x64>)
 8008594:	4910      	ldr	r1, [pc, #64]	; (80085d8 <_Z23getFont_verdana_40_4bppv+0x68>)
 8008596:	4811      	ldr	r0, [pc, #68]	; (80085dc <_Z23getFont_verdana_40_4bppv+0x6c>)
 8008598:	940a      	str	r4, [sp, #40]	; 0x28
 800859a:	2201      	movs	r2, #1
 800859c:	e9cd 4306 	strd	r4, r3, [sp, #24]
 80085a0:	2304      	movs	r3, #4
 80085a2:	e9cd 3203 	strd	r3, r2, [sp, #12]
 80085a6:	2328      	movs	r3, #40	; 0x28
 80085a8:	9300      	str	r3, [sp, #0]
 80085aa:	e9cd 440b 	strd	r4, r4, [sp, #44]	; 0x2c
 80085ae:	e9cd 4401 	strd	r4, r4, [sp, #4]
 80085b2:	9405      	str	r4, [sp, #20]
 80085b4:	f7fd f97c 	bl	80058b0 <_ZN8touchgfx13GeneratedFontC1EPKNS_9GlyphNodeEttthhhhhhPKPKhPKNS_11KerningNodeEttPKtPKNS_24FontContextualFormsTableE>
 80085b8:	4809      	ldr	r0, [pc, #36]	; (80085e0 <_Z23getFont_verdana_40_4bppv+0x70>)
 80085ba:	f022 feef 	bl	802b39c <atexit>
 80085be:	4628      	mov	r0, r5
 80085c0:	f022 f8c9 	bl	802a756 <__cxa_guard_release>
    return verdana_40_4bpp;
}
 80085c4:	4805      	ldr	r0, [pc, #20]	; (80085dc <_Z23getFont_verdana_40_4bppv+0x6c>)
 80085c6:	b00f      	add	sp, #60	; 0x3c
 80085c8:	bd30      	pop	{r4, r5, pc}
 80085ca:	bf00      	nop
 80085cc:	200029ac 	.word	0x200029ac
 80085d0:	0804754c 	.word	0x0804754c
 80085d4:	0804755c 	.word	0x0804755c
 80085d8:	08047304 	.word	0x08047304
 80085dc:	200029b0 	.word	0x200029b0
 80085e0:	0800856d 	.word	0x0800856d

080085e4 <_ZNK8touchgfx4Font12getGSUBTableEv>:
     * @return The GSUB table or null if font has GSUB no table.
     */
    virtual const uint16_t* getGSUBTable() const
    {
        return 0;
    }
 80085e4:	2000      	movs	r0, #0
 80085e6:	4770      	bx	lr

080085e8 <_ZNK8touchgfx4Font23getContextualFormsTableEv>:
     * @return The FontContextualFormsTable or null if the font has no table.
     */
    virtual const FontContextualFormsTable* getContextualFormsTable() const
    {
        return 0;
    }
 80085e8:	2000      	movs	r0, #0
 80085ea:	4770      	bx	lr

080085ec <_ZNK8touchgfx4Font14getStringWidthEPKtz>:
#include <touchgfx/hal/HAL.hpp>
#include <touchgfx/lcd/LCD.hpp>
#include <texts/TypedTextDatabase.hpp>

uint16_t touchgfx::Font::getStringWidth(const touchgfx::Unicode::UnicodeChar* text, ...) const
{
 80085ec:	b40e      	push	{r1, r2, r3}
 80085ee:	b503      	push	{r0, r1, lr}
 80085f0:	ab03      	add	r3, sp, #12
    va_list pArg;
    va_start(pArg, text);
    uint16_t width = getStringWidthLTR(TEXT_DIRECTION_LTR, text, pArg);
 80085f2:	2100      	movs	r1, #0
{
 80085f4:	f853 2b04 	ldr.w	r2, [r3], #4
    va_start(pArg, text);
 80085f8:	9301      	str	r3, [sp, #4]
    uint16_t width = getStringWidthLTR(TEXT_DIRECTION_LTR, text, pArg);
 80085fa:	f00e ffa7 	bl	801754c <_ZNK8touchgfx4Font17getStringWidthLTREhPKtSt9__va_list>
    va_end(pArg);
    return width;
}
 80085fe:	b002      	add	sp, #8
 8008600:	f85d eb04 	ldr.w	lr, [sp], #4
 8008604:	b003      	add	sp, #12
 8008606:	4770      	bx	lr

08008608 <_ZNK8touchgfx4Font14getStringWidthEhPKtz>:

uint16_t touchgfx::Font::getStringWidth(touchgfx::TextDirection textDirection, const touchgfx::Unicode::UnicodeChar* text, ...) const
{
 8008608:	b40c      	push	{r2, r3}
 800860a:	b507      	push	{r0, r1, r2, lr}
 800860c:	ab04      	add	r3, sp, #16
 800860e:	f853 2b04 	ldr.w	r2, [r3], #4
    va_list pArg;
    va_start(pArg, text);
 8008612:	9301      	str	r3, [sp, #4]
    uint16_t width = getStringWidthLTR(textDirection, text, pArg);
 8008614:	f00e ff9a 	bl	801754c <_ZNK8touchgfx4Font17getStringWidthLTREhPKtSt9__va_list>
    va_end(pArg);
    return width;
}
 8008618:	b003      	add	sp, #12
 800861a:	f85d eb04 	ldr.w	lr, [sp], #4
 800861e:	b002      	add	sp, #8
 8008620:	4770      	bx	lr
	...

08008624 <_ZN8touchgfx12TextProvider15getNextLigatureEh>:

touchgfx::Unicode::UnicodeChar touchgfx::TextProvider::getNextLigature(TextDirection direction)
{
    if (fontGsubTable && nextCharacters.peekChar())
 8008624:	6c43      	ldr	r3, [r0, #68]	; 0x44
{
 8008626:	b510      	push	{r4, lr}
 8008628:	4604      	mov	r4, r0
    if (fontGsubTable && nextCharacters.peekChar())
 800862a:	b373      	cbz	r3, 800868a <_ZN8touchgfx12TextProvider15getNextLigatureEh+0x66>
            return used == size;
        }

        FORCE_INLINE_FUNCTION Unicode::UnicodeChar peekChar()
        {
            assert(used > 0);
 800862c:	8f03      	ldrh	r3, [r0, #56]	; 0x38
 800862e:	b92b      	cbnz	r3, 800863c <_ZN8touchgfx12TextProvider15getNextLigatureEh+0x18>
 8008630:	4b18      	ldr	r3, [pc, #96]	; (8008694 <_ZN8touchgfx12TextProvider15getNextLigatureEh+0x70>)
 8008632:	4a19      	ldr	r2, [pc, #100]	; (8008698 <_ZN8touchgfx12TextProvider15getNextLigatureEh+0x74>)
 8008634:	21c5      	movs	r1, #197	; 0xc5
            return buffer[pos];
        }

        FORCE_INLINE_FUNCTION Unicode::UnicodeChar peekChar(uint16_t offset)
        {
            assert(offset < used);
 8008636:	4819      	ldr	r0, [pc, #100]	; (800869c <_ZN8touchgfx12TextProvider15getNextLigatureEh+0x78>)
 8008638:	f022 fe92 	bl	802b360 <__assert_func>
            return buffer[pos];
 800863c:	8ec3      	ldrh	r3, [r0, #54]	; 0x36
 800863e:	eb00 0343 	add.w	r3, r0, r3, lsl #1
 8008642:	8c5b      	ldrh	r3, [r3, #34]	; 0x22
 8008644:	b30b      	cbz	r3, 800868a <_ZN8touchgfx12TextProvider15getNextLigatureEh+0x66>
    {
        substituteGlyphs();
 8008646:	f010 fbbc 	bl	8018dc2 <_ZN8touchgfx12TextProvider16substituteGlyphsEv>
            assert(offset < used);
 800864a:	8f23      	ldrh	r3, [r4, #56]	; 0x38
 800864c:	2b01      	cmp	r3, #1
 800864e:	d803      	bhi.n	8008658 <_ZN8touchgfx12TextProvider15getNextLigatureEh+0x34>
 8008650:	4b13      	ldr	r3, [pc, #76]	; (80086a0 <_ZN8touchgfx12TextProvider15getNextLigatureEh+0x7c>)
 8008652:	4a14      	ldr	r2, [pc, #80]	; (80086a4 <_ZN8touchgfx12TextProvider15getNextLigatureEh+0x80>)
 8008654:	21cb      	movs	r1, #203	; 0xcb
 8008656:	e7ee      	b.n	8008636 <_ZN8touchgfx12TextProvider15getNextLigatureEh+0x12>
            const uint16_t index = pos + offset;
 8008658:	8ee2      	ldrh	r2, [r4, #54]	; 0x36
 800865a:	1c53      	adds	r3, r2, #1
 800865c:	b29b      	uxth	r3, r3
            return buffer[index < size ? index : index - size];
 800865e:	2b09      	cmp	r3, #9
 8008660:	4619      	mov	r1, r3
 8008662:	bf88      	it	hi
 8008664:	f1a3 010a 	subhi.w	r1, r3, #10
 8008668:	eb04 0141 	add.w	r1, r4, r1, lsl #1
        if (nextCharacters.peekChar(1) == 0x093F) // Hindi I-matra
 800866c:	f640 103f 	movw	r0, #2367	; 0x93f
 8008670:	8c49      	ldrh	r1, [r1, #34]	; 0x22
 8008672:	4281      	cmp	r1, r0
 8008674:	d109      	bne.n	800868a <_ZN8touchgfx12TextProvider15getNextLigatureEh+0x66>
        FORCE_INLINE_FUNCTION Unicode::UnicodeChar peekChar()
 8008676:	2b0a      	cmp	r3, #10
 8008678:	eb04 0242 	add.w	r2, r4, r2, lsl #1
 800867c:	bf28      	it	cs
 800867e:	2300      	movcs	r3, #0

        FORCE_INLINE_FUNCTION void replaceAt1(Unicode::UnicodeChar newChar)
        {
            assert(used > 1);
            const uint16_t index = pos + 1;
            buffer[index < size ? index : 0] = newChar;
 8008680:	eb04 0343 	add.w	r3, r4, r3, lsl #1
            return buffer[pos];
 8008684:	8c50      	ldrh	r0, [r2, #34]	; 0x22
            buffer[index < size ? index : 0] = newChar;
 8008686:	8458      	strh	r0, [r3, #34]	; 0x22
            buffer[pos] = newChar;
 8008688:	8451      	strh	r1, [r2, #34]	; 0x22
        {
            nextCharacters.replaceAt1(nextCharacters.peekChar());
            nextCharacters.replaceAt0(0x093F);
        }
    }
    return getNextChar();
 800868a:	4620      	mov	r0, r4
}
 800868c:	e8bd 4010 	ldmia.w	sp!, {r4, lr}
    return getNextChar();
 8008690:	f010 ba9a 	b.w	8018bc8 <_ZN8touchgfx12TextProvider11getNextCharEv>
 8008694:	0802e754 	.word	0x0802e754
 8008698:	0802e75d 	.word	0x0802e75d
 800869c:	0802e808 	.word	0x0802e808
 80086a0:	0802e852 	.word	0x0802e852
 80086a4:	0802e860 	.word	0x0802e860

080086a8 <_ZN8touchgfx12TextProvider18initializeInternalEv>:

void touchgfx::TextProvider::initializeInternal()
{
    fillInputBuffer();
 80086a8:	f010 ba55 	b.w	8018b56 <_ZN8touchgfx12TextProvider15fillInputBufferEv>

080086ac <_ZN8touchgfx3LCD10drawStringENS_4RectERKS1_RKNS0_13StringVisualsEPKtz>:
}

void touchgfx::LCD::drawString(touchgfx::Rect widgetArea, const touchgfx::Rect& invalidatedArea, const touchgfx::LCD::StringVisuals& stringVisuals, const touchgfx::Unicode::UnicodeChar* format, ...)
{
 80086ac:	b510      	push	{r4, lr}
 80086ae:	b086      	sub	sp, #24
 80086b0:	ac02      	add	r4, sp, #8
 80086b2:	e884 0006 	stmia.w	r4, {r1, r2}
 80086b6:	461a      	mov	r2, r3
    va_list pArg;
    va_start(pArg, format);
 80086b8:	ab0a      	add	r3, sp, #40	; 0x28
 80086ba:	9305      	str	r3, [sp, #20]
    drawStringLTR(widgetArea, invalidatedArea, stringVisuals, format, pArg);
 80086bc:	9301      	str	r3, [sp, #4]
 80086be:	9b09      	ldr	r3, [sp, #36]	; 0x24
 80086c0:	9300      	str	r3, [sp, #0]
 80086c2:	4621      	mov	r1, r4
 80086c4:	9b08      	ldr	r3, [sp, #32]
 80086c6:	f00d fb05 	bl	8015cd4 <_ZN8touchgfx3LCD13drawStringLTRERKNS_4RectES3_RKNS0_13StringVisualsEPKtSt9__va_list>
    va_end(pArg);
}
 80086ca:	b006      	add	sp, #24
 80086cc:	bd10      	pop	{r4, pc}
	...

080086d0 <_ZN8touchgfx5Texts11setLanguageEt>:
touchgfx::LanguageId touchgfx::Texts::currentLanguage = static_cast<touchgfx::LanguageId>(0);
static const touchgfx::Unicode::UnicodeChar* currentLanguagePtr = 0;
static const uint32_t* currentLanguageIndices = 0;

void touchgfx::Texts::setLanguage(touchgfx::LanguageId id)
{
 80086d0:	b538      	push	{r3, r4, r5, lr}
    const touchgfx::TypedText::TypedTextData* currentLanguageTypedText = 0;
    if (id < 1)
 80086d2:	bb18      	cbnz	r0, 800871c <_ZN8touchgfx5Texts11setLanguageEt+0x4c>
    {
        if (languagesArray[id] != 0)
 80086d4:	4b12      	ldr	r3, [pc, #72]	; (8008720 <_ZN8touchgfx5Texts11setLanguageEt+0x50>)
 80086d6:	4813      	ldr	r0, [pc, #76]	; (8008724 <_ZN8touchgfx5Texts11setLanguageEt+0x54>)
 80086d8:	681c      	ldr	r4, [r3, #0]
 80086da:	4913      	ldr	r1, [pc, #76]	; (8008728 <_ZN8touchgfx5Texts11setLanguageEt+0x58>)
 80086dc:	b1b4      	cbz	r4, 800870c <_ZN8touchgfx5Texts11setLanguageEt+0x3c>
        {
            // Dynamic translation is added
            const TranslationHeader* translation = languagesArray[id];
            currentLanguagePtr = (const touchgfx::Unicode::UnicodeChar*)(((const uint8_t*)translation) + translation->offset_to_texts);
 80086de:	6822      	ldr	r2, [r4, #0]
 80086e0:	4422      	add	r2, r4
 80086e2:	6002      	str	r2, [r0, #0]
            currentLanguageIndices = (const uint32_t*)(((const uint8_t*)translation) + translation->offset_to_indices);
 80086e4:	6862      	ldr	r2, [r4, #4]
 80086e6:	4422      	add	r2, r4
 80086e8:	600a      	str	r2, [r1, #0]
            currentLanguageTypedText = (const touchgfx::TypedText::TypedTextData*)(((const uint8_t*)translation) + translation->offset_to_typedtext);
 80086ea:	68a2      	ldr	r2, [r4, #8]
 80086ec:	4414      	add	r4, r2
        }
    }

    if (currentLanguageTypedText)
    {
        currentLanguage = id;
 80086ee:	4b0f      	ldr	r3, [pc, #60]	; (800872c <_ZN8touchgfx5Texts11setLanguageEt+0x5c>)
 80086f0:	2200      	movs	r2, #0
 80086f2:	801a      	strh	r2, [r3, #0]
        touchgfx::TypedText::registerTypedTextDatabase(currentLanguageTypedText,
                                                       TypedTextDatabase::getFonts(), TypedTextDatabase::getInstanceSize());
 80086f4:	f000 f838 	bl	8008768 <_ZN17TypedTextDatabase8getFontsEv>
 80086f8:	4605      	mov	r5, r0
        touchgfx::TypedText::registerTypedTextDatabase(currentLanguageTypedText,
 80086fa:	f000 f833 	bl	8008764 <_ZN17TypedTextDatabase15getInstanceSizeEv>
        typedTexts = data;
 80086fe:	4b0c      	ldr	r3, [pc, #48]	; (8008730 <_ZN8touchgfx5Texts11setLanguageEt+0x60>)
 8008700:	601c      	str	r4, [r3, #0]
        fonts = f;
 8008702:	4b0c      	ldr	r3, [pc, #48]	; (8008734 <_ZN8touchgfx5Texts11setLanguageEt+0x64>)
 8008704:	601d      	str	r5, [r3, #0]
        numberOfTypedTexts = n;
 8008706:	4b0c      	ldr	r3, [pc, #48]	; (8008738 <_ZN8touchgfx5Texts11setLanguageEt+0x68>)
 8008708:	8018      	strh	r0, [r3, #0]
    }
}
 800870a:	e007      	b.n	800871c <_ZN8touchgfx5Texts11setLanguageEt+0x4c>
            currentLanguagePtr = texts_all_languages;
 800870c:	4b0b      	ldr	r3, [pc, #44]	; (800873c <_ZN8touchgfx5Texts11setLanguageEt+0x6c>)
 800870e:	6003      	str	r3, [r0, #0]
            currentLanguageIndices = staticLanguageIndices[id];
 8008710:	4b0b      	ldr	r3, [pc, #44]	; (8008740 <_ZN8touchgfx5Texts11setLanguageEt+0x70>)
 8008712:	600b      	str	r3, [r1, #0]
            currentLanguageTypedText = typedTextDatabaseArray[id];
 8008714:	4b0b      	ldr	r3, [pc, #44]	; (8008744 <_ZN8touchgfx5Texts11setLanguageEt+0x74>)
 8008716:	681c      	ldr	r4, [r3, #0]
    if (currentLanguageTypedText)
 8008718:	2c00      	cmp	r4, #0
 800871a:	d1e8      	bne.n	80086ee <_ZN8touchgfx5Texts11setLanguageEt+0x1e>
}
 800871c:	bd38      	pop	{r3, r4, r5, pc}
 800871e:	bf00      	nop
 8008720:	200029dc 	.word	0x200029dc
 8008724:	200029e0 	.word	0x200029e0
 8008728:	200029e4 	.word	0x200029e4
 800872c:	200029e8 	.word	0x200029e8
 8008730:	20013874 	.word	0x20013874
 8008734:	2001387c 	.word	0x2001387c
 8008738:	20013878 	.word	0x20013878
 800873c:	080476c0 	.word	0x080476c0
 8008740:	08047560 	.word	0x08047560
 8008744:	08047c00 	.word	0x08047c00

08008748 <_ZNK8touchgfx5Texts7getTextEt>:
    languagesArray[id] = (const TranslationHeader*)translation;
}

const touchgfx::Unicode::UnicodeChar* touchgfx::Texts::getText(TypedTextId id) const
{
    return &currentLanguagePtr[currentLanguageIndices[id]];
 8008748:	4b04      	ldr	r3, [pc, #16]	; (800875c <_ZNK8touchgfx5Texts7getTextEt+0x14>)
 800874a:	681b      	ldr	r3, [r3, #0]
 800874c:	f853 0021 	ldr.w	r0, [r3, r1, lsl #2]
 8008750:	4b03      	ldr	r3, [pc, #12]	; (8008760 <_ZNK8touchgfx5Texts7getTextEt+0x18>)
 8008752:	681b      	ldr	r3, [r3, #0]
}
 8008754:	eb03 0040 	add.w	r0, r3, r0, lsl #1
 8008758:	4770      	bx	lr
 800875a:	bf00      	nop
 800875c:	200029e4 	.word	0x200029e4
 8008760:	200029e0 	.word	0x200029e0

08008764 <_ZN17TypedTextDatabase15getInstanceSizeEv>:
}

uint16_t getInstanceSize()
{
    return sizeof(typedText_database_DEFAULT) / sizeof(touchgfx::TypedText::TypedTextData);
}
 8008764:	2058      	movs	r0, #88	; 0x58
 8008766:	4770      	bx	lr

08008768 <_ZN17TypedTextDatabase8getFontsEv>:

const touchgfx::Font** getFonts()
{
    return touchgfx_fonts;
}
 8008768:	4800      	ldr	r0, [pc, #0]	; (800876c <_ZN17TypedTextDatabase8getFontsEv+0x4>)
 800876a:	4770      	bx	lr
 800876c:	200029ec 	.word	0x200029ec

08008770 <_GLOBAL__sub_I_touchgfx_fonts>:
    case 3:
        touchgfx_fonts[3] = &(getFont_verdana_12_4bpp());
        break;
    }
}
} // namespace TypedTextDatabase
 8008770:	b510      	push	{r4, lr}
    &(getFont_verdana_19_4bpp()),
 8008772:	f7ff febf 	bl	80084f4 <_Z23getFont_verdana_19_4bppv>
};
 8008776:	4c06      	ldr	r4, [pc, #24]	; (8008790 <_GLOBAL__sub_I_touchgfx_fonts+0x20>)
 8008778:	6020      	str	r0, [r4, #0]
    &(getFont_verdana_40_4bpp()),
 800877a:	f7ff fef9 	bl	8008570 <_Z23getFont_verdana_40_4bppv>
};
 800877e:	6060      	str	r0, [r4, #4]
    &(getFont_verdana_10_4bpp()),
 8008780:	f7ff fe3c 	bl	80083fc <_Z23getFont_verdana_10_4bppv>
};
 8008784:	60a0      	str	r0, [r4, #8]
    &(getFont_verdana_12_4bpp())
 8008786:	f7ff fe77 	bl	8008478 <_Z23getFont_verdana_12_4bppv>
};
 800878a:	60e0      	str	r0, [r4, #12]
} // namespace TypedTextDatabase
 800878c:	bd10      	pop	{r4, pc}
 800878e:	bf00      	nop
 8008790:	200029ec 	.word	0x200029ec

08008794 <_ZN24Calibration_PadPresenterD1Ev>:
     * The deactivate function is called automatically when this screen is "switched out"
     * (ie. made inactive). Teardown functionality can be placed here.
     */
    virtual void deactivate();

    virtual ~Calibration_PadPresenter() {}
 8008794:	4770      	bx	lr

08008796 <_ZThn4_N24Calibration_PadPresenterD1Ev>:
 8008796:	3804      	subs	r0, #4
 8008798:	4770      	bx	lr

0800879a <_ZN24Calibration_PadPresenter10deactivateEv>:
}

void Calibration_PadPresenter::activate()
{

}
 800879a:	4770      	bx	lr

0800879c <_ZN24Calibration_PadPresenter15setTimeoutValueEi>:
}

void Calibration_PadPresenter::setTimeoutValue(int value)
{

}
 800879c:	4770      	bx	lr

0800879e <_ZN24Calibration_PadPresenterD0Ev>:
 800879e:	b510      	push	{r4, lr}
 80087a0:	2110      	movs	r1, #16
 80087a2:	4604      	mov	r4, r0
 80087a4:	f021 ffc9 	bl	802a73a <_ZdlPvj>
 80087a8:	4620      	mov	r0, r4
 80087aa:	bd10      	pop	{r4, pc}

080087ac <_ZThn4_N24Calibration_PadPresenterD0Ev>:
 80087ac:	f1a0 0004 	sub.w	r0, r0, #4
 80087b0:	e7f5      	b.n	800879e <_ZN24Calibration_PadPresenterD0Ev>

080087b2 <_ZThn4_N24Calibration_PadPresenter15setTimeoutValueEi>:
 80087b2:	4770      	bx	lr

080087b4 <_ZN24Calibration_PadPresenterC1ER19Calibration_PadView>:
Calibration_PadPresenter::Calibration_PadPresenter(Calibration_PadView& v)
 80087b4:	b510      	push	{r4, lr}
    ModelListener() : model(0) {}
 80087b6:	2200      	movs	r2, #0
 80087b8:	6082      	str	r2, [r0, #8]
    : view(v)
 80087ba:	4a04      	ldr	r2, [pc, #16]	; (80087cc <_ZN24Calibration_PadPresenterC1ER19Calibration_PadView+0x18>)
 80087bc:	60c1      	str	r1, [r0, #12]
 80087be:	f102 0408 	add.w	r4, r2, #8
 80087c2:	3224      	adds	r2, #36	; 0x24
 80087c4:	6004      	str	r4, [r0, #0]
 80087c6:	6042      	str	r2, [r0, #4]
}
 80087c8:	bd10      	pop	{r4, pc}
 80087ca:	bf00      	nop
 80087cc:	0802e934 	.word	0x0802e934

080087d0 <_ZN19Calibration_PadView14tearDownScreenEv>:
}

void Calibration_PadView::tearDownScreen()
{
    Calibration_PadViewBase::tearDownScreen();
}
 80087d0:	4770      	bx	lr

080087d2 <_ZN19Calibration_PadView15setTimeoutValueEi>:

void Calibration_PadView::setTimeoutValue(int value)
{

}
 80087d2:	4770      	bx	lr

080087d4 <_ZN19Calibration_PadViewD1Ev>:

class Calibration_PadView : public Calibration_PadViewBase
{
public:
    Calibration_PadView();
    virtual ~Calibration_PadView() {}
 80087d4:	b510      	push	{r4, lr}
 80087d6:	4b03      	ldr	r3, [pc, #12]	; (80087e4 <_ZN19Calibration_PadViewD1Ev+0x10>)
 80087d8:	6003      	str	r3, [r0, #0]
 80087da:	4604      	mov	r4, r0
 80087dc:	f7fa f84e 	bl	800287c <_ZN23Calibration_PadViewBaseD1Ev>
 80087e0:	4620      	mov	r0, r4
 80087e2:	bd10      	pop	{r4, pc}
 80087e4:	0802e96c 	.word	0x0802e96c

080087e8 <_ZN19Calibration_PadViewD0Ev>:
 80087e8:	b510      	push	{r4, lr}
 80087ea:	4604      	mov	r4, r0
 80087ec:	f7ff fff2 	bl	80087d4 <_ZN19Calibration_PadViewD1Ev>
 80087f0:	4620      	mov	r0, r4
 80087f2:	f641 5164 	movw	r1, #7524	; 0x1d64
 80087f6:	f021 ffa0 	bl	802a73a <_ZdlPvj>
 80087fa:	4620      	mov	r0, r4
 80087fc:	bd10      	pop	{r4, pc}
	...

08008800 <_ZN19Calibration_PadViewC1Ev>:
Calibration_PadView::Calibration_PadView()
 8008800:	b510      	push	{r4, lr}
 8008802:	4604      	mov	r4, r0
 8008804:	f7fa fb12 	bl	8002e2c <_ZN23Calibration_PadViewBaseC1Ev>
 8008808:	4b01      	ldr	r3, [pc, #4]	; (8008810 <_ZN19Calibration_PadViewC1Ev+0x10>)
 800880a:	6023      	str	r3, [r4, #0]
}
 800880c:	4620      	mov	r0, r4
 800880e:	bd10      	pop	{r4, pc}
 8008810:	0802e96c 	.word	0x0802e96c

08008814 <_ZN19Calibration_PadView17Load_FLASH_ValuesEv>:

void Calibration_PadView::Load_FLASH_Values()
{
 8008814:	b570      	push	{r4, r5, r6, lr}
 8008816:	4604      	mov	r4, r0
 8008818:	b0ca      	sub	sp, #296	; 0x128
 800881a:	f100 06e0 	add.w	r6, r0, #224	; 0xe0
 800881e:	4631      	mov	r1, r6
 8008820:	a80d      	add	r0, sp, #52	; 0x34
 8008822:	f7fa f943 	bl	8002aac <_ZN8touchgfx8DrawableC1ERKS0_>
 8008826:	f8d4 3108 	ldr.w	r3, [r4, #264]	; 0x108
 800882a:	9317      	str	r3, [sp, #92]	; 0x5c
 800882c:	f8d4 310c 	ldr.w	r3, [r4, #268]	; 0x10c
 8008830:	9318      	str	r3, [sp, #96]	; 0x60
 8008832:	f8d4 3110 	ldr.w	r3, [r4, #272]	; 0x110
 8008836:	4a57      	ldr	r2, [pc, #348]	; (8008994 <_ZN19Calibration_PadView17Load_FLASH_ValuesEv+0x180>)
 8008838:	9319      	str	r3, [sp, #100]	; 0x64
 800883a:	f504 718c 	add.w	r1, r4, #280	; 0x118
 800883e:	f8d4 3114 	ldr.w	r3, [r4, #276]	; 0x114
 8008842:	920d      	str	r2, [sp, #52]	; 0x34
 8008844:	a81b      	add	r0, sp, #108	; 0x6c
 8008846:	931a      	str	r3, [sp, #104]	; 0x68
 8008848:	f7fa f930 	bl	8002aac <_ZN8touchgfx8DrawableC1ERKS0_>
 800884c:	f8d4 3140 	ldr.w	r3, [r4, #320]	; 0x140
 8008850:	9325      	str	r3, [sp, #148]	; 0x94
 8008852:	4b51      	ldr	r3, [pc, #324]	; (8008998 <_ZN19Calibration_PadView17Load_FLASH_ValuesEv+0x184>)
 8008854:	931b      	str	r3, [sp, #108]	; 0x6c
 8008856:	f894 3144 	ldrb.w	r3, [r4, #324]	; 0x144
 800885a:	f88d 3098 	strb.w	r3, [sp, #152]	; 0x98
 800885e:	f504 71a4 	add.w	r1, r4, #328	; 0x148
 8008862:	f8b4 3146 	ldrh.w	r3, [r4, #326]	; 0x146
 8008866:	f8ad 309a 	strh.w	r3, [sp, #154]	; 0x9a
 800886a:	a827      	add	r0, sp, #156	; 0x9c
 800886c:	f7fa f91e 	bl	8002aac <_ZN8touchgfx8DrawableC1ERKS0_>
 8008870:	f8d4 3170 	ldr.w	r3, [r4, #368]	; 0x170
 8008874:	9331      	str	r3, [sp, #196]	; 0xc4
 8008876:	f504 71ba 	add.w	r1, r4, #372	; 0x174
    class PageIndicator : public Container
 800887a:	4b48      	ldr	r3, [pc, #288]	; (800899c <_ZN19Calibration_PadView17Load_FLASH_ValuesEv+0x188>)
 800887c:	9327      	str	r3, [sp, #156]	; 0x9c
 800887e:	a832      	add	r0, sp, #200	; 0xc8
 8008880:	f7fa f914 	bl	8002aac <_ZN8touchgfx8DrawableC1ERKS0_>
class Image : public Widget
 8008884:	f8b4 319a 	ldrh.w	r3, [r4, #410]	; 0x19a
 8008888:	f8ad 30ee 	strh.w	r3, [sp, #238]	; 0xee
 800888c:	f894 319c 	ldrb.w	r3, [r4, #412]	; 0x19c
 8008890:	f88d 30f0 	strb.w	r3, [sp, #240]	; 0xf0
 8008894:	4b42      	ldr	r3, [pc, #264]	; (80089a0 <_ZN19Calibration_PadView17Load_FLASH_ValuesEv+0x18c>)
 8008896:	9332      	str	r3, [sp, #200]	; 0xc8
 8008898:	f8b4 319e 	ldrh.w	r3, [r4, #414]	; 0x19e
 800889c:	f8ad 30f2 	strh.w	r3, [sp, #242]	; 0xf2
 80088a0:	f504 71d2 	add.w	r1, r4, #420	; 0x1a4
 80088a4:	f8b4 31a0 	ldrh.w	r3, [r4, #416]	; 0x1a0
 80088a8:	f8ad 30f4 	strh.w	r3, [sp, #244]	; 0xf4
 80088ac:	a83e      	add	r0, sp, #248	; 0xf8
 80088ae:	f7fa f8fd 	bl	8002aac <_ZN8touchgfx8DrawableC1ERKS0_>
 80088b2:	4b3c      	ldr	r3, [pc, #240]	; (80089a4 <_ZN19Calibration_PadView17Load_FLASH_ValuesEv+0x190>)
 80088b4:	933e      	str	r3, [sp, #248]	; 0xf8
 80088b6:	f8b4 31ca 	ldrh.w	r3, [r4, #458]	; 0x1ca
	//Load the 6 Calibration Values from the Flash
	Flash_Read_Data(0x081E0000, Rx_Data, 12);

	// Write current Data stored in the Flash to the GUI
	//Left Pad
	Unicode::snprintf(textAreaCal_LP1Buffer, TEXTAREACAL_LP1_SIZE, "%d", Rx_Data[0]);
 80088ba:	4d3b      	ldr	r5, [pc, #236]	; (80089a8 <_ZN19Calibration_PadView17Load_FLASH_ValuesEv+0x194>)
 80088bc:	f8ad 311e 	strh.w	r3, [sp, #286]	; 0x11e
 80088c0:	f894 31cc 	ldrb.w	r3, [r4, #460]	; 0x1cc
 80088c4:	f88d 3120 	strb.w	r3, [sp, #288]	; 0x120
	Flash_Read_Data(0x081E0000, Rx_Data, 12);
 80088c8:	a901      	add	r1, sp, #4
 80088ca:	f8b4 31d0 	ldrh.w	r3, [r4, #464]	; 0x1d0
 80088ce:	4837      	ldr	r0, [pc, #220]	; (80089ac <_ZN19Calibration_PadView17Load_FLASH_ValuesEv+0x198>)
 80088d0:	f8ad 3124 	strh.w	r3, [sp, #292]	; 0x124
 80088d4:	220c      	movs	r2, #12
 80088d6:	f7f7 ffbb 	bl	8000850 <Flash_Read_Data>
	Unicode::snprintf(textAreaCal_LP1Buffer, TEXTAREACAL_LP1_SIZE, "%d", Rx_Data[0]);
 80088da:	9b01      	ldr	r3, [sp, #4]
 80088dc:	462a      	mov	r2, r5
 80088de:	210a      	movs	r1, #10
 80088e0:	f604 607c 	addw	r0, r4, #3708	; 0xe7c
 80088e4:	f011 f822 	bl	801992c <_ZN8touchgfx7Unicode8snprintfEPttPKcz>
	Unicode::snprintf(textAreaCal_LP2Buffer, TEXTAREACAL_LP2_SIZE, "%d", Rx_Data[1]);
 80088e8:	9b02      	ldr	r3, [sp, #8]
 80088ea:	462a      	mov	r2, r5
 80088ec:	210a      	movs	r1, #10
 80088ee:	f604 6068 	addw	r0, r4, #3688	; 0xe68
 80088f2:	f011 f81b 	bl	801992c <_ZN8touchgfx7Unicode8snprintfEPttPKcz>
	Unicode::snprintf(textAreaCal_LP3Buffer, TEXTAREACAL_LP3_SIZE, "%d", Rx_Data[2]);
 80088f6:	9b03      	ldr	r3, [sp, #12]
 80088f8:	462a      	mov	r2, r5
 80088fa:	210a      	movs	r1, #10
 80088fc:	f604 6054 	addw	r0, r4, #3668	; 0xe54
 8008900:	f011 f814 	bl	801992c <_ZN8touchgfx7Unicode8snprintfEPttPKcz>
	//Right Pad
	Unicode::snprintf(textAreaCal_RP1Buffer, TEXTAREACAL_RP1_SIZE, "%d", Rx_Data[3]);
 8008904:	9b04      	ldr	r3, [sp, #16]
 8008906:	462a      	mov	r2, r5
 8008908:	210a      	movs	r1, #10
 800890a:	f604 60b8 	addw	r0, r4, #3768	; 0xeb8
 800890e:	f011 f80d 	bl	801992c <_ZN8touchgfx7Unicode8snprintfEPttPKcz>
	Unicode::snprintf(textAreaCal_RP2Buffer, TEXTAREACAL_RP2_SIZE, "%d", Rx_Data[4]);
 8008912:	9b05      	ldr	r3, [sp, #20]
 8008914:	462a      	mov	r2, r5
 8008916:	210a      	movs	r1, #10
 8008918:	f604 60a4 	addw	r0, r4, #3748	; 0xea4
 800891c:	f011 f806 	bl	801992c <_ZN8touchgfx7Unicode8snprintfEPttPKcz>
	Unicode::snprintf(textAreaCal_RP3Buffer, TEXTAREACAL_RP3_SIZE, "%d", Rx_Data[5]);
 8008920:	9b06      	ldr	r3, [sp, #24]
 8008922:	462a      	mov	r2, r5
 8008924:	210a      	movs	r1, #10
 8008926:	f504 6069 	add.w	r0, r4, #3728	; 0xe90
 800892a:	f010 ffff 	bl	801992c <_ZN8touchgfx7Unicode8snprintfEPttPKcz>

	//Left Pad
	Unicode::snprintf(textAreaCal_LH1Buffer, TEXTAREACAL_LH1_SIZE, "%d", Rx_Data[6]);
 800892e:	9b07      	ldr	r3, [sp, #28]
 8008930:	462a      	mov	r2, r5
 8008932:	210a      	movs	r1, #10
 8008934:	f604 60f4 	addw	r0, r4, #3828	; 0xef4
 8008938:	f010 fff8 	bl	801992c <_ZN8touchgfx7Unicode8snprintfEPttPKcz>
	Unicode::snprintf(textAreaCal_LH2Buffer, TEXTAREACAL_LH2_SIZE, "%d", Rx_Data[7]);
 800893c:	9b08      	ldr	r3, [sp, #32]
 800893e:	462a      	mov	r2, r5
 8008940:	210a      	movs	r1, #10
 8008942:	f504 606e 	add.w	r0, r4, #3808	; 0xee0
 8008946:	f010 fff1 	bl	801992c <_ZN8touchgfx7Unicode8snprintfEPttPKcz>
	Unicode::snprintf(textAreaCal_LH3Buffer, TEXTAREACAL_LH3_SIZE, "%d", Rx_Data[8]);
 800894a:	9b09      	ldr	r3, [sp, #36]	; 0x24
 800894c:	462a      	mov	r2, r5
 800894e:	210a      	movs	r1, #10
 8008950:	f604 60cc 	addw	r0, r4, #3788	; 0xecc
 8008954:	f010 ffea 	bl	801992c <_ZN8touchgfx7Unicode8snprintfEPttPKcz>
	//Right Pad
	Unicode::snprintf(textAreaCal_RH1Buffer, TEXTAREACAL_RH1_SIZE, "%d", Rx_Data[9]);
 8008958:	9b0a      	ldr	r3, [sp, #40]	; 0x28
 800895a:	462a      	mov	r2, r5
 800895c:	210a      	movs	r1, #10
 800895e:	f504 6073 	add.w	r0, r4, #3888	; 0xf30
 8008962:	f010 ffe3 	bl	801992c <_ZN8touchgfx7Unicode8snprintfEPttPKcz>
	Unicode::snprintf(textAreaCal_RH2Buffer, TEXTAREACAL_RH2_SIZE, "%d", Rx_Data[10]);
 8008966:	9b0b      	ldr	r3, [sp, #44]	; 0x2c
 8008968:	462a      	mov	r2, r5
 800896a:	210a      	movs	r1, #10
 800896c:	f604 701c 	addw	r0, r4, #3868	; 0xf1c
 8008970:	f010 ffdc 	bl	801992c <_ZN8touchgfx7Unicode8snprintfEPttPKcz>
	Unicode::snprintf(textAreaCal_RH3Buffer, TEXTAREACAL_RH3_SIZE, "%d", Rx_Data[11]);
 8008974:	9b0c      	ldr	r3, [sp, #48]	; 0x30
 8008976:	462a      	mov	r2, r5
 8008978:	210a      	movs	r1, #10
 800897a:	f604 7008 	addw	r0, r4, #3848	; 0xf08
 800897e:	f010 ffd5 	bl	801992c <_ZN8touchgfx7Unicode8snprintfEPttPKcz>
	swipeContainer1.invalidate();
 8008982:	4630      	mov	r0, r6
 8008984:	f00e ff0c 	bl	80177a0 <_ZNK8touchgfx8Drawable10invalidateEv>


#endif
}
 8008988:	a80d      	add	r0, sp, #52	; 0x34
 800898a:	f007 ffd7 	bl	801093c <_ZN8touchgfx14SwipeContainerD1Ev>
 800898e:	b04a      	add	sp, #296	; 0x128
 8008990:	bd70      	pop	{r4, r5, r6, pc}
 8008992:	bf00      	nop
 8008994:	0802efec 	.word	0x0802efec
 8008998:	0802f0b0 	.word	0x0802f0b0
 800899c:	0802cf00 	.word	0x0802cf00
 80089a0:	0802f4ac 	.word	0x0802f4ac
 80089a4:	0802f690 	.word	0x0802f690
 80089a8:	0802ce42 	.word	0x0802ce42
 80089ac:	081e0000 	.word	0x081e0000

080089b0 <_ZN19Calibration_PadView11setupScreenEv>:
    Calibration_PadViewBase::setupScreen();
 80089b0:	f7f9 bf24 	b.w	80027fc <_ZN23Calibration_PadViewBase11setupScreenEv>

080089b4 <_ZN19FrontendApplicationD1Ev>:

class FrontendApplication : public FrontendApplicationBase
{
public:
    FrontendApplication(Model& m, FrontendHeap& heap);
    virtual ~FrontendApplication() { }
 80089b4:	4770      	bx	lr

080089b6 <_ZN19FrontendApplicationD0Ev>:
 80089b6:	b510      	push	{r4, lr}
 80089b8:	f44f 71ae 	mov.w	r1, #348	; 0x15c
 80089bc:	4604      	mov	r4, r0
 80089be:	f021 febc 	bl	802a73a <_ZdlPvj>
 80089c2:	4620      	mov	r0, r4
 80089c4:	bd10      	pop	{r4, pc}

080089c6 <_ZN19FrontendApplication15handleTickEventEv>:

    virtual void handleTickEvent()
 80089c6:	b510      	push	{r4, lr}
 80089c8:	4604      	mov	r4, r0
    {
        model.tick();
 80089ca:	f8d0 0158 	ldr.w	r0, [r0, #344]	; 0x158
 80089ce:	f000 fafb 	bl	8008fc8 <_ZN5Model4tickEv>
        FrontendApplicationBase::handleTickEvent();
 80089d2:	4620      	mov	r0, r4
    }
 80089d4:	e8bd 4010 	ldmia.w	sp!, {r4, lr}
        FrontendApplicationBase::handleTickEvent();
 80089d8:	f00d bebe 	b.w	8016758 <_ZN8touchgfx11Application15handleTickEventEv>

080089dc <_ZN19FrontendApplicationC1ER5ModelR12FrontendHeap>:
#include <gui/common/FrontendApplication.hpp>

FrontendApplication::FrontendApplication(Model& m, FrontendHeap& heap)
 80089dc:	b510      	push	{r4, lr}
 80089de:	4604      	mov	r4, r0
    : FrontendApplicationBase(m, heap)
 80089e0:	f7fb fe40 	bl	8004664 <_ZN23FrontendApplicationBaseC1ER5ModelR12FrontendHeap>
 80089e4:	4b01      	ldr	r3, [pc, #4]	; (80089ec <_ZN19FrontendApplicationC1ER5ModelR12FrontendHeap+0x10>)
 80089e6:	6023      	str	r3, [r4, #0]
{

}
 80089e8:	4620      	mov	r0, r4
 80089ea:	bd10      	pop	{r4, pc}
 80089ec:	0802e9ac 	.word	0x0802e9ac

080089f0 <_ZN18Main_MenuPresenterD1Ev>:
     * The deactivate function is called automatically when this screen is "switched out"
     * (ie. made inactive). Teardown functionality can be placed here.
     */
    virtual void deactivate();

    virtual ~Main_MenuPresenter() {}
 80089f0:	4770      	bx	lr

080089f2 <_ZThn4_N18Main_MenuPresenterD1Ev>:
 80089f2:	3804      	subs	r0, #4
 80089f4:	4770      	bx	lr

080089f6 <_ZN18Main_MenuPresenter10deactivateEv>:
}

void Main_MenuPresenter::activate()
{

}
 80089f6:	4770      	bx	lr

080089f8 <_ZN18Main_MenuPresenter15setTimeoutValueEi>:

}

void Main_MenuPresenter::setTimeoutValue(int value)
{
	view.setTimeoutValue(value);
 80089f8:	68c0      	ldr	r0, [r0, #12]
 80089fa:	6803      	ldr	r3, [r0, #0]
 80089fc:	6adb      	ldr	r3, [r3, #44]	; 0x2c
 80089fe:	4718      	bx	r3

08008a00 <_ZThn4_N18Main_MenuPresenter15setTimeoutValueEi>:

    virtual void setTimeoutValue(int value);
 8008a00:	f1a0 0004 	sub.w	r0, r0, #4
 8008a04:	f7ff bff8 	b.w	80089f8 <_ZN18Main_MenuPresenter15setTimeoutValueEi>

08008a08 <_ZN18Main_MenuPresenterD0Ev>:
    virtual ~Main_MenuPresenter() {}
 8008a08:	b510      	push	{r4, lr}
 8008a0a:	2110      	movs	r1, #16
 8008a0c:	4604      	mov	r4, r0
 8008a0e:	f021 fe94 	bl	802a73a <_ZdlPvj>
 8008a12:	4620      	mov	r0, r4
 8008a14:	bd10      	pop	{r4, pc}

08008a16 <_ZThn4_N18Main_MenuPresenterD0Ev>:
 8008a16:	f1a0 0004 	sub.w	r0, r0, #4
 8008a1a:	e7f5      	b.n	8008a08 <_ZN18Main_MenuPresenterD0Ev>

08008a1c <_ZN18Main_MenuPresenterC1ER13Main_MenuView>:
Main_MenuPresenter::Main_MenuPresenter(Main_MenuView& v)
 8008a1c:	b510      	push	{r4, lr}
 8008a1e:	2200      	movs	r2, #0
 8008a20:	6082      	str	r2, [r0, #8]
    : view(v)
 8008a22:	4a04      	ldr	r2, [pc, #16]	; (8008a34 <_ZN18Main_MenuPresenterC1ER13Main_MenuView+0x18>)
 8008a24:	60c1      	str	r1, [r0, #12]
 8008a26:	f102 0408 	add.w	r4, r2, #8
 8008a2a:	3224      	adds	r2, #36	; 0x24
 8008a2c:	6004      	str	r4, [r0, #0]
 8008a2e:	6042      	str	r2, [r0, #4]
}
 8008a30:	bd10      	pop	{r4, pc}
 8008a32:	bf00      	nop
 8008a34:	0802e9f8 	.word	0x0802e9f8

08008a38 <_ZN13Main_MenuView14tearDownScreenEv>:
}

void Main_MenuView::tearDownScreen()
{
    Main_MenuViewBase::tearDownScreen();
}
 8008a38:	4770      	bx	lr
	...

08008a3c <_ZN13Main_MenuViewD1Ev>:

class Main_MenuView : public Main_MenuViewBase
{
public:
    Main_MenuView();
    virtual ~Main_MenuView() {}
 8008a3c:	b510      	push	{r4, lr}
 8008a3e:	4b03      	ldr	r3, [pc, #12]	; (8008a4c <_ZN13Main_MenuViewD1Ev+0x10>)
 8008a40:	6003      	str	r3, [r0, #0]
 8008a42:	4604      	mov	r4, r0
 8008a44:	f7fc ff88 	bl	8005958 <_ZN17Main_MenuViewBaseD1Ev>
 8008a48:	4620      	mov	r0, r4
 8008a4a:	bd10      	pop	{r4, pc}
 8008a4c:	0802ea30 	.word	0x0802ea30

08008a50 <_ZN13Main_MenuViewD0Ev>:
 8008a50:	b510      	push	{r4, lr}
 8008a52:	4604      	mov	r4, r0
 8008a54:	f7ff fff2 	bl	8008a3c <_ZN13Main_MenuViewD1Ev>
 8008a58:	4620      	mov	r0, r4
 8008a5a:	f241 117c 	movw	r1, #4476	; 0x117c
 8008a5e:	f021 fe6c 	bl	802a73a <_ZdlPvj>
 8008a62:	4620      	mov	r0, r4
 8008a64:	bd10      	pop	{r4, pc}
	...

08008a68 <_ZN13Main_MenuViewC1Ev>:
Main_MenuView::Main_MenuView()
 8008a68:	b510      	push	{r4, lr}
 8008a6a:	4604      	mov	r4, r0
 8008a6c:	f7fc ffbe 	bl	80059ec <_ZN17Main_MenuViewBaseC1Ev>
 8008a70:	4b01      	ldr	r3, [pc, #4]	; (8008a78 <_ZN13Main_MenuViewC1Ev+0x10>)
 8008a72:	6023      	str	r3, [r4, #0]
}
 8008a74:	4620      	mov	r0, r4
 8008a76:	bd10      	pop	{r4, pc}
 8008a78:	0802ea30 	.word	0x0802ea30

08008a7c <_ZN13Main_MenuView11setupScreenEv>:
    Main_MenuViewBase::setupScreen();
 8008a7c:	f7fc bf48 	b.w	8005910 <_ZN17Main_MenuViewBase11setupScreenEv>

08008a80 <_ZN13Main_MenuView15setTimeoutValueEi>:

void Main_MenuView::setTimeoutValue(int value)
{
 8008a80:	b538      	push	{r3, r4, r5, lr}
	//display the timeout value on the GUI
	Unicode::snprintf(textArea3Buffer, TEXTAREA3_SIZE, "%d", value);
 8008a82:	4a0a      	ldr	r2, [pc, #40]	; (8008aac <_ZN13Main_MenuView15setTimeoutValueEi+0x2c>)
{
 8008a84:	4605      	mov	r5, r0
 8008a86:	460c      	mov	r4, r1
	Unicode::snprintf(textArea3Buffer, TEXTAREA3_SIZE, "%d", value);
 8008a88:	460b      	mov	r3, r1
 8008a8a:	f500 7055 	add.w	r0, r0, #852	; 0x354
 8008a8e:	2104      	movs	r1, #4
 8008a90:	f010 ff4c 	bl	801992c <_ZN8touchgfx7Unicode8snprintfEPttPKcz>
	textArea3.invalidate();
 8008a94:	f105 0098 	add.w	r0, r5, #152	; 0x98
 8008a98:	f00e fe82 	bl	80177a0 <_ZNK8touchgfx8Drawable10invalidateEv>

	if(value == 0)
 8008a9c:	b92c      	cbnz	r4, 8008aaa <_ZN13Main_MenuView15setTimeoutValueEi+0x2a>
 8008a9e:	f00d fd97 	bl	80165d0 <_ZN8touchgfx11Application11getInstanceEv>
	{
		//application().gotoMeasurement_SingleScreenSlideTransitionWest();
		application().gotoShutting_OffScreenNoTransition();
	}
}
 8008aa2:	e8bd 4038 	ldmia.w	sp!, {r3, r4, r5, lr}
		application().gotoShutting_OffScreenNoTransition();
 8008aa6:	f7fb bedd 	b.w	8004864 <_ZN23FrontendApplicationBase34gotoShutting_OffScreenNoTransitionEv>
}
 8008aaa:	bd38      	pop	{r3, r4, r5, pc}
 8008aac:	0802ce42 	.word	0x0802ce42

08008ab0 <_ZN20MeasurementPresenterD1Ev>:
     * The deactivate function is called automatically when this screen is "switched out"
     * (ie. made inactive). Teardown functionality can be placed here.
     */
    virtual void deactivate();

    virtual ~MeasurementPresenter() {}
 8008ab0:	4770      	bx	lr

08008ab2 <_ZThn4_N20MeasurementPresenterD1Ev>:
 8008ab2:	3804      	subs	r0, #4
 8008ab4:	4770      	bx	lr

08008ab6 <_ZN20MeasurementPresenter10deactivateEv>:
}

void MeasurementPresenter::activate()
{

}
 8008ab6:	4770      	bx	lr

08008ab8 <_ZN20MeasurementPresenter15setTimeoutValueEi>:

}

void MeasurementPresenter::setTimeoutValue(int value)
{
	view.setTimeoutValue(value);
 8008ab8:	68c0      	ldr	r0, [r0, #12]
 8008aba:	6803      	ldr	r3, [r0, #0]
 8008abc:	6adb      	ldr	r3, [r3, #44]	; 0x2c
 8008abe:	4718      	bx	r3

08008ac0 <_ZThn4_N20MeasurementPresenter15setTimeoutValueEi>:

    virtual void setTimeoutValue(int value);
 8008ac0:	f1a0 0004 	sub.w	r0, r0, #4
 8008ac4:	f7ff bff8 	b.w	8008ab8 <_ZN20MeasurementPresenter15setTimeoutValueEi>

08008ac8 <_ZN20MeasurementPresenterD0Ev>:
    virtual ~MeasurementPresenter() {}
 8008ac8:	b510      	push	{r4, lr}
 8008aca:	2110      	movs	r1, #16
 8008acc:	4604      	mov	r4, r0
 8008ace:	f021 fe34 	bl	802a73a <_ZdlPvj>
 8008ad2:	4620      	mov	r0, r4
 8008ad4:	bd10      	pop	{r4, pc}

08008ad6 <_ZThn4_N20MeasurementPresenterD0Ev>:
 8008ad6:	f1a0 0004 	sub.w	r0, r0, #4
 8008ada:	e7f5      	b.n	8008ac8 <_ZN20MeasurementPresenterD0Ev>

08008adc <_ZN20MeasurementPresenterC1ER15MeasurementView>:
MeasurementPresenter::MeasurementPresenter(MeasurementView& v)
 8008adc:	b510      	push	{r4, lr}
 8008ade:	2200      	movs	r2, #0
 8008ae0:	6082      	str	r2, [r0, #8]
    : view(v)
 8008ae2:	4a04      	ldr	r2, [pc, #16]	; (8008af4 <_ZN20MeasurementPresenterC1ER15MeasurementView+0x18>)
 8008ae4:	60c1      	str	r1, [r0, #12]
 8008ae6:	f102 0408 	add.w	r4, r2, #8
 8008aea:	3224      	adds	r2, #36	; 0x24
 8008aec:	6004      	str	r4, [r0, #0]
 8008aee:	6042      	str	r2, [r0, #4]
}
 8008af0:	bd10      	pop	{r4, pc}
 8008af2:	bf00      	nop
 8008af4:	0802ea60 	.word	0x0802ea60

08008af8 <_ZN15MeasurementView14tearDownScreenEv>:
}

void MeasurementView::tearDownScreen()
{
    MeasurementViewBase::tearDownScreen();
}
 8008af8:	4770      	bx	lr
	...

08008afc <_ZN15MeasurementViewD1Ev>:

class MeasurementView : public MeasurementViewBase
{
public:
    MeasurementView();
    virtual ~MeasurementView() {}
 8008afc:	b510      	push	{r4, lr}
 8008afe:	4b03      	ldr	r3, [pc, #12]	; (8008b0c <_ZN15MeasurementViewD1Ev+0x10>)
 8008b00:	6003      	str	r3, [r0, #0]
 8008b02:	4604      	mov	r4, r0
 8008b04:	f7fd f9e2 	bl	8005ecc <_ZN19MeasurementViewBaseD1Ev>
 8008b08:	4620      	mov	r0, r4
 8008b0a:	bd10      	pop	{r4, pc}
 8008b0c:	0802ea98 	.word	0x0802ea98

08008b10 <_ZN15MeasurementViewD0Ev>:
 8008b10:	b510      	push	{r4, lr}
 8008b12:	4604      	mov	r4, r0
 8008b14:	f7ff fff2 	bl	8008afc <_ZN15MeasurementViewD1Ev>
 8008b18:	4620      	mov	r0, r4
 8008b1a:	f44f 518a 	mov.w	r1, #4416	; 0x1140
 8008b1e:	f021 fe0c 	bl	802a73a <_ZdlPvj>
 8008b22:	4620      	mov	r0, r4
 8008b24:	bd10      	pop	{r4, pc}
	...

08008b28 <_ZN15MeasurementViewC1Ev>:
MeasurementView::MeasurementView()
 8008b28:	b510      	push	{r4, lr}
 8008b2a:	4604      	mov	r4, r0
 8008b2c:	f7fd fa08 	bl	8005f40 <_ZN19MeasurementViewBaseC1Ev>
 8008b30:	4b01      	ldr	r3, [pc, #4]	; (8008b38 <_ZN15MeasurementViewC1Ev+0x10>)
 8008b32:	6023      	str	r3, [r4, #0]
}
 8008b34:	4620      	mov	r0, r4
 8008b36:	bd10      	pop	{r4, pc}
 8008b38:	0802ea98 	.word	0x0802ea98

08008b3c <_ZN15MeasurementView11setupScreenEv>:
    MeasurementViewBase::setupScreen();
 8008b3c:	f7fd b9a2 	b.w	8005e84 <_ZN19MeasurementViewBase11setupScreenEv>

08008b40 <_ZN15MeasurementView15setTimeoutValueEi>:

void MeasurementView::setTimeoutValue(int value)
{
 8008b40:	b538      	push	{r3, r4, r5, lr}
	//display the timeout value on the GUI
	Unicode::snprintf(textArea3_1Buffer, TEXTAREA3_1_SIZE, "%d", value);
 8008b42:	4a0a      	ldr	r2, [pc, #40]	; (8008b6c <_ZN15MeasurementView15setTimeoutValueEi+0x2c>)
{
 8008b44:	4605      	mov	r5, r0
 8008b46:	460c      	mov	r4, r1
	Unicode::snprintf(textArea3_1Buffer, TEXTAREA3_1_SIZE, "%d", value);
 8008b48:	460b      	mov	r3, r1
 8008b4a:	f500 7046 	add.w	r0, r0, #792	; 0x318
 8008b4e:	2104      	movs	r1, #4
 8008b50:	f010 feec 	bl	801992c <_ZN8touchgfx7Unicode8snprintfEPttPKcz>
	textArea3_1.invalidate();
 8008b54:	f105 0098 	add.w	r0, r5, #152	; 0x98
 8008b58:	f00e fe22 	bl	80177a0 <_ZNK8touchgfx8Drawable10invalidateEv>

	if(value == 0)
 8008b5c:	b92c      	cbnz	r4, 8008b6a <_ZN15MeasurementView15setTimeoutValueEi+0x2a>
 8008b5e:	f00d fd37 	bl	80165d0 <_ZN8touchgfx11Application11getInstanceEv>
	{
		//application().gotoMeasurement_SingleScreenSlideTransitionWest();
		application().gotoShutting_OffScreenNoTransition();
	}
}
 8008b62:	e8bd 4038 	ldmia.w	sp!, {r3, r4, r5, lr}
		application().gotoShutting_OffScreenNoTransition();
 8008b66:	f7fb be7d 	b.w	8004864 <_ZN23FrontendApplicationBase34gotoShutting_OffScreenNoTransitionEv>
}
 8008b6a:	bd38      	pop	{r3, r4, r5, pc}
 8008b6c:	0802ce42 	.word	0x0802ce42

08008b70 <_ZN29Measurement_AccuratePresenterD1Ev>:
     * The deactivate function is called automatically when this screen is "switched out"
     * (ie. made inactive). Teardown functionality can be placed here.
     */
    virtual void deactivate();

    virtual ~Measurement_AccuratePresenter() {}
 8008b70:	4770      	bx	lr

08008b72 <_ZThn4_N29Measurement_AccuratePresenterD1Ev>:
 8008b72:	3804      	subs	r0, #4
 8008b74:	4770      	bx	lr

08008b76 <_ZN29Measurement_AccuratePresenter10deactivateEv>:
}

void Measurement_AccuratePresenter::activate()
{

}
 8008b76:	4770      	bx	lr

08008b78 <_ZN29Measurement_AccuratePresenter15setTimeoutValueEi>:

}

void Measurement_AccuratePresenter::setTimeoutValue(int value)
{
	view.setTimeoutValue(value);
 8008b78:	68c0      	ldr	r0, [r0, #12]
 8008b7a:	6803      	ldr	r3, [r0, #0]
 8008b7c:	6adb      	ldr	r3, [r3, #44]	; 0x2c
 8008b7e:	4718      	bx	r3

08008b80 <_ZThn4_N29Measurement_AccuratePresenter15setTimeoutValueEi>:

    virtual void setTimeoutValue(int value);
 8008b80:	f1a0 0004 	sub.w	r0, r0, #4
 8008b84:	f7ff bff8 	b.w	8008b78 <_ZN29Measurement_AccuratePresenter15setTimeoutValueEi>

08008b88 <_ZN29Measurement_AccuratePresenterD0Ev>:
    virtual ~Measurement_AccuratePresenter() {}
 8008b88:	b510      	push	{r4, lr}
 8008b8a:	2110      	movs	r1, #16
 8008b8c:	4604      	mov	r4, r0
 8008b8e:	f021 fdd4 	bl	802a73a <_ZdlPvj>
 8008b92:	4620      	mov	r0, r4
 8008b94:	bd10      	pop	{r4, pc}

08008b96 <_ZThn4_N29Measurement_AccuratePresenterD0Ev>:
 8008b96:	f1a0 0004 	sub.w	r0, r0, #4
 8008b9a:	e7f5      	b.n	8008b88 <_ZN29Measurement_AccuratePresenterD0Ev>

08008b9c <_ZN29Measurement_AccuratePresenterC1ER24Measurement_AccurateView>:
Measurement_AccuratePresenter::Measurement_AccuratePresenter(Measurement_AccurateView& v)
 8008b9c:	b510      	push	{r4, lr}
 8008b9e:	2200      	movs	r2, #0
 8008ba0:	6082      	str	r2, [r0, #8]
    : view(v)
 8008ba2:	4a04      	ldr	r2, [pc, #16]	; (8008bb4 <_ZN29Measurement_AccuratePresenterC1ER24Measurement_AccurateView+0x18>)
 8008ba4:	60c1      	str	r1, [r0, #12]
 8008ba6:	f102 0408 	add.w	r4, r2, #8
 8008baa:	3224      	adds	r2, #36	; 0x24
 8008bac:	6004      	str	r4, [r0, #0]
 8008bae:	6042      	str	r2, [r0, #4]
}
 8008bb0:	bd10      	pop	{r4, pc}
 8008bb2:	bf00      	nop
 8008bb4:	0802eac8 	.word	0x0802eac8

08008bb8 <_ZN24Measurement_AccurateView14tearDownScreenEv>:
}

void Measurement_AccurateView::tearDownScreen()
{
    Measurement_AccurateViewBase::tearDownScreen();
}
 8008bb8:	4770      	bx	lr
	...

08008bbc <_ZN24Measurement_AccurateViewD1Ev>:

class Measurement_AccurateView : public Measurement_AccurateViewBase
{
public:
    Measurement_AccurateView();
    virtual ~Measurement_AccurateView() {}
 8008bbc:	b510      	push	{r4, lr}
 8008bbe:	4b03      	ldr	r3, [pc, #12]	; (8008bcc <_ZN24Measurement_AccurateViewD1Ev+0x10>)
 8008bc0:	6003      	str	r3, [r0, #0]
 8008bc2:	4604      	mov	r4, r0
 8008bc4:	f7fd fc04 	bl	80063d0 <_ZN28Measurement_AccurateViewBaseD1Ev>
 8008bc8:	4620      	mov	r0, r4
 8008bca:	bd10      	pop	{r4, pc}
 8008bcc:	0802eb00 	.word	0x0802eb00

08008bd0 <_ZN24Measurement_AccurateViewD0Ev>:
 8008bd0:	b510      	push	{r4, lr}
 8008bd2:	4604      	mov	r4, r0
 8008bd4:	f7ff fff2 	bl	8008bbc <_ZN24Measurement_AccurateViewD1Ev>
 8008bd8:	4620      	mov	r0, r4
 8008bda:	f44f 518a 	mov.w	r1, #4416	; 0x1140
 8008bde:	f021 fdac 	bl	802a73a <_ZdlPvj>
 8008be2:	4620      	mov	r0, r4
 8008be4:	bd10      	pop	{r4, pc}
	...

08008be8 <_ZN24Measurement_AccurateViewC1Ev>:
Measurement_AccurateView::Measurement_AccurateView()
 8008be8:	b510      	push	{r4, lr}
 8008bea:	4604      	mov	r4, r0
 8008bec:	f7fd fc2a 	bl	8006444 <_ZN28Measurement_AccurateViewBaseC1Ev>
 8008bf0:	4b01      	ldr	r3, [pc, #4]	; (8008bf8 <_ZN24Measurement_AccurateViewC1Ev+0x10>)
 8008bf2:	6023      	str	r3, [r4, #0]
}
 8008bf4:	4620      	mov	r0, r4
 8008bf6:	bd10      	pop	{r4, pc}
 8008bf8:	0802eb00 	.word	0x0802eb00

08008bfc <_ZN24Measurement_AccurateView11setupScreenEv>:
    Measurement_AccurateViewBase::setupScreen();
 8008bfc:	f7fd bbc4 	b.w	8006388 <_ZN28Measurement_AccurateViewBase11setupScreenEv>

08008c00 <_ZN24Measurement_AccurateView15setTimeoutValueEi>:

void Measurement_AccurateView::setTimeoutValue(int value)
{
 8008c00:	b538      	push	{r3, r4, r5, lr}
	//display the timeout value on the GUI
	Unicode::snprintf(textArea3_1Buffer, TEXTAREA3_1_SIZE, "%d", value);
 8008c02:	4a0a      	ldr	r2, [pc, #40]	; (8008c2c <_ZN24Measurement_AccurateView15setTimeoutValueEi+0x2c>)
{
 8008c04:	4605      	mov	r5, r0
 8008c06:	460c      	mov	r4, r1
	Unicode::snprintf(textArea3_1Buffer, TEXTAREA3_1_SIZE, "%d", value);
 8008c08:	460b      	mov	r3, r1
 8008c0a:	f500 7046 	add.w	r0, r0, #792	; 0x318
 8008c0e:	2104      	movs	r1, #4
 8008c10:	f010 fe8c 	bl	801992c <_ZN8touchgfx7Unicode8snprintfEPttPKcz>
	textArea3_1.invalidate();
 8008c14:	f105 0098 	add.w	r0, r5, #152	; 0x98
 8008c18:	f00e fdc2 	bl	80177a0 <_ZNK8touchgfx8Drawable10invalidateEv>

	if(value == 0)
 8008c1c:	b92c      	cbnz	r4, 8008c2a <_ZN24Measurement_AccurateView15setTimeoutValueEi+0x2a>
 8008c1e:	f00d fcd7 	bl	80165d0 <_ZN8touchgfx11Application11getInstanceEv>
	{
		//application().gotoMeasurement_SingleScreenSlideTransitionWest();
		application().gotoShutting_OffScreenNoTransition();
	}
}
 8008c22:	e8bd 4038 	ldmia.w	sp!, {r3, r4, r5, lr}
		application().gotoShutting_OffScreenNoTransition();
 8008c26:	f7fb be1d 	b.w	8004864 <_ZN23FrontendApplicationBase34gotoShutting_OffScreenNoTransitionEv>
}
 8008c2a:	bd38      	pop	{r3, r4, r5, pc}
 8008c2c:	0802ce42 	.word	0x0802ce42

08008c30 <_ZN37Measurement_Accurate_DisplayPresenterD1Ev>:
     * The deactivate function is called automatically when this screen is "switched out"
     * (ie. made inactive). Teardown functionality can be placed here.
     */
    virtual void deactivate();

    virtual ~Measurement_Accurate_DisplayPresenter() {}
 8008c30:	4770      	bx	lr

08008c32 <_ZThn4_N37Measurement_Accurate_DisplayPresenterD1Ev>:
 8008c32:	3804      	subs	r0, #4
 8008c34:	4770      	bx	lr

08008c36 <_ZN37Measurement_Accurate_DisplayPresenter10deactivateEv>:
}

void Measurement_Accurate_DisplayPresenter::activate()
{

}
 8008c36:	4770      	bx	lr

08008c38 <_ZN37Measurement_Accurate_DisplayPresenter15setTimeoutValueEi>:
}

void Measurement_Accurate_DisplayPresenter::setTimeoutValue(int value)
{

}
 8008c38:	4770      	bx	lr

08008c3a <_ZN37Measurement_Accurate_DisplayPresenterD0Ev>:
 8008c3a:	b510      	push	{r4, lr}
 8008c3c:	2110      	movs	r1, #16
 8008c3e:	4604      	mov	r4, r0
 8008c40:	f021 fd7b 	bl	802a73a <_ZdlPvj>
 8008c44:	4620      	mov	r0, r4
 8008c46:	bd10      	pop	{r4, pc}

08008c48 <_ZThn4_N37Measurement_Accurate_DisplayPresenterD0Ev>:
 8008c48:	f1a0 0004 	sub.w	r0, r0, #4
 8008c4c:	e7f5      	b.n	8008c3a <_ZN37Measurement_Accurate_DisplayPresenterD0Ev>

08008c4e <_ZThn4_N37Measurement_Accurate_DisplayPresenter15setTimeoutValueEi>:
 8008c4e:	4770      	bx	lr

08008c50 <_ZN37Measurement_Accurate_DisplayPresenterC1ER32Measurement_Accurate_DisplayView>:
Measurement_Accurate_DisplayPresenter::Measurement_Accurate_DisplayPresenter(Measurement_Accurate_DisplayView& v)
 8008c50:	b510      	push	{r4, lr}
 8008c52:	2200      	movs	r2, #0
 8008c54:	6082      	str	r2, [r0, #8]
    : view(v)
 8008c56:	4a04      	ldr	r2, [pc, #16]	; (8008c68 <_ZN37Measurement_Accurate_DisplayPresenterC1ER32Measurement_Accurate_DisplayView+0x18>)
 8008c58:	60c1      	str	r1, [r0, #12]
 8008c5a:	f102 0408 	add.w	r4, r2, #8
 8008c5e:	3224      	adds	r2, #36	; 0x24
 8008c60:	6004      	str	r4, [r0, #0]
 8008c62:	6042      	str	r2, [r0, #4]
}
 8008c64:	bd10      	pop	{r4, pc}
 8008c66:	bf00      	nop
 8008c68:	0802eb30 	.word	0x0802eb30

08008c6c <_ZN32Measurement_Accurate_DisplayView14tearDownScreenEv>:
}

void Measurement_Accurate_DisplayView::tearDownScreen()
{
    Measurement_Accurate_DisplayViewBase::tearDownScreen();
}
 8008c6c:	4770      	bx	lr
	...

08008c70 <_ZN32Measurement_Accurate_DisplayViewD1Ev>:

class Measurement_Accurate_DisplayView : public Measurement_Accurate_DisplayViewBase
{
public:
    Measurement_Accurate_DisplayView();
    virtual ~Measurement_Accurate_DisplayView() {}
 8008c70:	b510      	push	{r4, lr}
 8008c72:	4b03      	ldr	r3, [pc, #12]	; (8008c80 <_ZN32Measurement_Accurate_DisplayViewD1Ev+0x10>)
 8008c74:	6003      	str	r3, [r0, #0]
 8008c76:	4604      	mov	r4, r0
 8008c78:	f7fd fe28 	bl	80068cc <_ZN36Measurement_Accurate_DisplayViewBaseD1Ev>
 8008c7c:	4620      	mov	r0, r4
 8008c7e:	bd10      	pop	{r4, pc}
 8008c80:	0802eb68 	.word	0x0802eb68

08008c84 <_ZN32Measurement_Accurate_DisplayViewD0Ev>:
 8008c84:	b510      	push	{r4, lr}
 8008c86:	4604      	mov	r4, r0
 8008c88:	f7ff fff2 	bl	8008c70 <_ZN32Measurement_Accurate_DisplayViewD1Ev>
 8008c8c:	4620      	mov	r0, r4
 8008c8e:	f241 015c 	movw	r1, #4188	; 0x105c
 8008c92:	f021 fd52 	bl	802a73a <_ZdlPvj>
 8008c96:	4620      	mov	r0, r4
 8008c98:	bd10      	pop	{r4, pc}
	...

08008c9c <_ZN32Measurement_Accurate_DisplayViewC1Ev>:
Measurement_Accurate_DisplayView::Measurement_Accurate_DisplayView()
 8008c9c:	b510      	push	{r4, lr}
 8008c9e:	4604      	mov	r4, r0
 8008ca0:	f7fd fe3c 	bl	800691c <_ZN36Measurement_Accurate_DisplayViewBaseC1Ev>
 8008ca4:	4b01      	ldr	r3, [pc, #4]	; (8008cac <_ZN32Measurement_Accurate_DisplayViewC1Ev+0x10>)
 8008ca6:	6023      	str	r3, [r4, #0]
}
 8008ca8:	4620      	mov	r0, r4
 8008caa:	bd10      	pop	{r4, pc}
 8008cac:	0802eb68 	.word	0x0802eb68

08008cb0 <_ZN32Measurement_Accurate_DisplayView11setupScreenEv>:
    Measurement_Accurate_DisplayViewBase::setupScreen();
 8008cb0:	f7fd bde8 	b.w	8006884 <_ZN36Measurement_Accurate_DisplayViewBase11setupScreenEv>

08008cb4 <_ZN39Measurement_Accurate_Display_2PresenterD1Ev>:
     * The deactivate function is called automatically when this screen is "switched out"
     * (ie. made inactive). Teardown functionality can be placed here.
     */
    virtual void deactivate();

    virtual ~Measurement_Accurate_Display_2Presenter() {}
 8008cb4:	4770      	bx	lr

08008cb6 <_ZThn4_N39Measurement_Accurate_Display_2PresenterD1Ev>:
 8008cb6:	3804      	subs	r0, #4
 8008cb8:	4770      	bx	lr

08008cba <_ZN39Measurement_Accurate_Display_2Presenter10deactivateEv>:
}

void Measurement_Accurate_Display_2Presenter::activate()
{

}
 8008cba:	4770      	bx	lr

08008cbc <_ZN39Measurement_Accurate_Display_2Presenter15setTimeoutValueEi>:
}

void Measurement_Accurate_Display_2Presenter::setTimeoutValue(int value)
{

}
 8008cbc:	4770      	bx	lr

08008cbe <_ZN39Measurement_Accurate_Display_2PresenterD0Ev>:
 8008cbe:	b510      	push	{r4, lr}
 8008cc0:	2110      	movs	r1, #16
 8008cc2:	4604      	mov	r4, r0
 8008cc4:	f021 fd39 	bl	802a73a <_ZdlPvj>
 8008cc8:	4620      	mov	r0, r4
 8008cca:	bd10      	pop	{r4, pc}

08008ccc <_ZThn4_N39Measurement_Accurate_Display_2PresenterD0Ev>:
 8008ccc:	f1a0 0004 	sub.w	r0, r0, #4
 8008cd0:	e7f5      	b.n	8008cbe <_ZN39Measurement_Accurate_Display_2PresenterD0Ev>

08008cd2 <_ZThn4_N39Measurement_Accurate_Display_2Presenter15setTimeoutValueEi>:
 8008cd2:	4770      	bx	lr

08008cd4 <_ZN39Measurement_Accurate_Display_2PresenterC1ER34Measurement_Accurate_Display_2View>:
Measurement_Accurate_Display_2Presenter::Measurement_Accurate_Display_2Presenter(Measurement_Accurate_Display_2View& v)
 8008cd4:	b510      	push	{r4, lr}
 8008cd6:	2200      	movs	r2, #0
 8008cd8:	6082      	str	r2, [r0, #8]
    : view(v)
 8008cda:	4a04      	ldr	r2, [pc, #16]	; (8008cec <_ZN39Measurement_Accurate_Display_2PresenterC1ER34Measurement_Accurate_Display_2View+0x18>)
 8008cdc:	60c1      	str	r1, [r0, #12]
 8008cde:	f102 0408 	add.w	r4, r2, #8
 8008ce2:	3224      	adds	r2, #36	; 0x24
 8008ce4:	6004      	str	r4, [r0, #0]
 8008ce6:	6042      	str	r2, [r0, #4]
}
 8008ce8:	bd10      	pop	{r4, pc}
 8008cea:	bf00      	nop
 8008cec:	0802eb94 	.word	0x0802eb94

08008cf0 <_ZN34Measurement_Accurate_Display_2View14tearDownScreenEv>:
}

void Measurement_Accurate_Display_2View::tearDownScreen()
{
    Measurement_Accurate_Display_2ViewBase::tearDownScreen();
}
 8008cf0:	4770      	bx	lr
	...

08008cf4 <_ZN34Measurement_Accurate_Display_2ViewD1Ev>:

class Measurement_Accurate_Display_2View : public Measurement_Accurate_Display_2ViewBase
{
public:
    Measurement_Accurate_Display_2View();
    virtual ~Measurement_Accurate_Display_2View() {}
 8008cf4:	b510      	push	{r4, lr}
 8008cf6:	4b03      	ldr	r3, [pc, #12]	; (8008d04 <_ZN34Measurement_Accurate_Display_2ViewD1Ev+0x10>)
 8008cf8:	6003      	str	r3, [r0, #0]
 8008cfa:	4604      	mov	r4, r0
 8008cfc:	f7fd ff96 	bl	8006c2c <_ZN38Measurement_Accurate_Display_2ViewBaseD1Ev>
 8008d00:	4620      	mov	r0, r4
 8008d02:	bd10      	pop	{r4, pc}
 8008d04:	0802ebcc 	.word	0x0802ebcc

08008d08 <_ZN34Measurement_Accurate_Display_2ViewD0Ev>:
 8008d08:	b510      	push	{r4, lr}
 8008d0a:	4604      	mov	r4, r0
 8008d0c:	f7ff fff2 	bl	8008cf4 <_ZN34Measurement_Accurate_Display_2ViewD1Ev>
 8008d10:	4620      	mov	r0, r4
 8008d12:	f241 015c 	movw	r1, #4188	; 0x105c
 8008d16:	f021 fd10 	bl	802a73a <_ZdlPvj>
 8008d1a:	4620      	mov	r0, r4
 8008d1c:	bd10      	pop	{r4, pc}
	...

08008d20 <_ZN34Measurement_Accurate_Display_2ViewC1Ev>:
Measurement_Accurate_Display_2View::Measurement_Accurate_Display_2View()
 8008d20:	b510      	push	{r4, lr}
 8008d22:	4604      	mov	r4, r0
 8008d24:	f7fd ffaa 	bl	8006c7c <_ZN38Measurement_Accurate_Display_2ViewBaseC1Ev>
 8008d28:	4b01      	ldr	r3, [pc, #4]	; (8008d30 <_ZN34Measurement_Accurate_Display_2ViewC1Ev+0x10>)
 8008d2a:	6023      	str	r3, [r4, #0]
}
 8008d2c:	4620      	mov	r0, r4
 8008d2e:	bd10      	pop	{r4, pc}
 8008d30:	0802ebcc 	.word	0x0802ebcc

08008d34 <_ZN34Measurement_Accurate_Display_2View11setupScreenEv>:
    Measurement_Accurate_Display_2ViewBase::setupScreen();
 8008d34:	f7fd bf56 	b.w	8006be4 <_ZN38Measurement_Accurate_Display_2ViewBase11setupScreenEv>

08008d38 <_ZN27Measurement_SinglePresenterD1Ev>:
     * The deactivate function is called automatically when this screen is "switched out"
     * (ie. made inactive). Teardown functionality can be placed here.
     */
    virtual void deactivate();

    virtual ~Measurement_SinglePresenter() {}
 8008d38:	4770      	bx	lr

08008d3a <_ZThn4_N27Measurement_SinglePresenterD1Ev>:
 8008d3a:	3804      	subs	r0, #4
 8008d3c:	4770      	bx	lr

08008d3e <_ZN27Measurement_SinglePresenter10deactivateEv>:
}

void Measurement_SinglePresenter::activate()
{

}
 8008d3e:	4770      	bx	lr

08008d40 <_ZN27Measurement_SinglePresenter15setTimeoutValueEi>:

}

void Measurement_SinglePresenter::setTimeoutValue(int value)
{
	view.setTimeoutValue(value);
 8008d40:	68c0      	ldr	r0, [r0, #12]
 8008d42:	6803      	ldr	r3, [r0, #0]
 8008d44:	6adb      	ldr	r3, [r3, #44]	; 0x2c
 8008d46:	4718      	bx	r3

08008d48 <_ZThn4_N27Measurement_SinglePresenter15setTimeoutValueEi>:

    virtual void setTimeoutValue(int value);
 8008d48:	f1a0 0004 	sub.w	r0, r0, #4
 8008d4c:	f7ff bff8 	b.w	8008d40 <_ZN27Measurement_SinglePresenter15setTimeoutValueEi>

08008d50 <_ZN27Measurement_SinglePresenterD0Ev>:
    virtual ~Measurement_SinglePresenter() {}
 8008d50:	b510      	push	{r4, lr}
 8008d52:	2110      	movs	r1, #16
 8008d54:	4604      	mov	r4, r0
 8008d56:	f021 fcf0 	bl	802a73a <_ZdlPvj>
 8008d5a:	4620      	mov	r0, r4
 8008d5c:	bd10      	pop	{r4, pc}

08008d5e <_ZThn4_N27Measurement_SinglePresenterD0Ev>:
 8008d5e:	f1a0 0004 	sub.w	r0, r0, #4
 8008d62:	e7f5      	b.n	8008d50 <_ZN27Measurement_SinglePresenterD0Ev>

08008d64 <_ZN27Measurement_SinglePresenterC1ER22Measurement_SingleView>:
Measurement_SinglePresenter::Measurement_SinglePresenter(Measurement_SingleView& v)
 8008d64:	b510      	push	{r4, lr}
 8008d66:	2200      	movs	r2, #0
 8008d68:	6082      	str	r2, [r0, #8]
    : view(v)
 8008d6a:	4a04      	ldr	r2, [pc, #16]	; (8008d7c <_ZN27Measurement_SinglePresenterC1ER22Measurement_SingleView+0x18>)
 8008d6c:	60c1      	str	r1, [r0, #12]
 8008d6e:	f102 0408 	add.w	r4, r2, #8
 8008d72:	3224      	adds	r2, #36	; 0x24
 8008d74:	6004      	str	r4, [r0, #0]
 8008d76:	6042      	str	r2, [r0, #4]
}
 8008d78:	bd10      	pop	{r4, pc}
 8008d7a:	bf00      	nop
 8008d7c:	0802ebf8 	.word	0x0802ebf8

08008d80 <_ZN22Measurement_SingleView14tearDownScreenEv>:
}

void Measurement_SingleView::tearDownScreen()
{
    Measurement_SingleViewBase::tearDownScreen();
}
 8008d80:	4770      	bx	lr
	...

08008d84 <_ZN22Measurement_SingleViewD1Ev>:

class Measurement_SingleView : public Measurement_SingleViewBase
{
public:
    Measurement_SingleView();
    virtual ~Measurement_SingleView() {}
 8008d84:	b510      	push	{r4, lr}
 8008d86:	4b03      	ldr	r3, [pc, #12]	; (8008d94 <_ZN22Measurement_SingleViewD1Ev+0x10>)
 8008d88:	6003      	str	r3, [r0, #0]
 8008d8a:	4604      	mov	r4, r0
 8008d8c:	f7fe f8fe 	bl	8006f8c <_ZN26Measurement_SingleViewBaseD1Ev>
 8008d90:	4620      	mov	r0, r4
 8008d92:	bd10      	pop	{r4, pc}
 8008d94:	0802ec30 	.word	0x0802ec30

08008d98 <_ZN22Measurement_SingleViewD0Ev>:
 8008d98:	b510      	push	{r4, lr}
 8008d9a:	4604      	mov	r4, r0
 8008d9c:	f7ff fff2 	bl	8008d84 <_ZN22Measurement_SingleViewD1Ev>
 8008da0:	4620      	mov	r0, r4
 8008da2:	f44f 518a 	mov.w	r1, #4416	; 0x1140
 8008da6:	f021 fcc8 	bl	802a73a <_ZdlPvj>
 8008daa:	4620      	mov	r0, r4
 8008dac:	bd10      	pop	{r4, pc}
	...

08008db0 <_ZN22Measurement_SingleViewC1Ev>:
Measurement_SingleView::Measurement_SingleView()
 8008db0:	b510      	push	{r4, lr}
 8008db2:	4604      	mov	r4, r0
 8008db4:	f7fe f924 	bl	8007000 <_ZN26Measurement_SingleViewBaseC1Ev>
 8008db8:	4b01      	ldr	r3, [pc, #4]	; (8008dc0 <_ZN22Measurement_SingleViewC1Ev+0x10>)
 8008dba:	6023      	str	r3, [r4, #0]
}
 8008dbc:	4620      	mov	r0, r4
 8008dbe:	bd10      	pop	{r4, pc}
 8008dc0:	0802ec30 	.word	0x0802ec30

08008dc4 <_ZN22Measurement_SingleView11setupScreenEv>:
    Measurement_SingleViewBase::setupScreen();
 8008dc4:	f7fe b8be 	b.w	8006f44 <_ZN26Measurement_SingleViewBase11setupScreenEv>

08008dc8 <_ZN22Measurement_SingleView15setTimeoutValueEi>:

void Measurement_SingleView::setTimeoutValue(int value)
{
 8008dc8:	b538      	push	{r3, r4, r5, lr}
	//display the timeout value on the GUI
	Unicode::snprintf(textArea3_1Buffer, TEXTAREA3_1_SIZE, "%d", value);
 8008dca:	4a0a      	ldr	r2, [pc, #40]	; (8008df4 <_ZN22Measurement_SingleView15setTimeoutValueEi+0x2c>)
{
 8008dcc:	4605      	mov	r5, r0
 8008dce:	460c      	mov	r4, r1
	Unicode::snprintf(textArea3_1Buffer, TEXTAREA3_1_SIZE, "%d", value);
 8008dd0:	460b      	mov	r3, r1
 8008dd2:	f500 7046 	add.w	r0, r0, #792	; 0x318
 8008dd6:	2104      	movs	r1, #4
 8008dd8:	f010 fda8 	bl	801992c <_ZN8touchgfx7Unicode8snprintfEPttPKcz>
	textArea3_1.invalidate();
 8008ddc:	f105 0098 	add.w	r0, r5, #152	; 0x98
 8008de0:	f00e fcde 	bl	80177a0 <_ZNK8touchgfx8Drawable10invalidateEv>

	if(value == 0)
 8008de4:	b92c      	cbnz	r4, 8008df2 <_ZN22Measurement_SingleView15setTimeoutValueEi+0x2a>
 8008de6:	f00d fbf3 	bl	80165d0 <_ZN8touchgfx11Application11getInstanceEv>
	{
		//application().gotoMeasurement_SingleScreenSlideTransitionWest();
		application().gotoShutting_OffScreenNoTransition();
	}
}
 8008dea:	e8bd 4038 	ldmia.w	sp!, {r3, r4, r5, lr}
		application().gotoShutting_OffScreenNoTransition();
 8008dee:	f7fb bd39 	b.w	8004864 <_ZN23FrontendApplicationBase34gotoShutting_OffScreenNoTransitionEv>
}
 8008df2:	bd38      	pop	{r3, r4, r5, pc}
 8008df4:	0802ce42 	.word	0x0802ce42

08008df8 <_ZN38Measurement_Single_Display_1PPresenterD1Ev>:
     * The deactivate function is called automatically when this screen is "switched out"
     * (ie. made inactive). Teardown functionality can be placed here.
     */
    virtual void deactivate();

    virtual ~Measurement_Single_Display_1PPresenter() {}
 8008df8:	4770      	bx	lr

08008dfa <_ZThn4_N38Measurement_Single_Display_1PPresenterD1Ev>:
 8008dfa:	3804      	subs	r0, #4
 8008dfc:	4770      	bx	lr

08008dfe <_ZN38Measurement_Single_Display_1PPresenter10deactivateEv>:
}

void Measurement_Single_Display_1PPresenter::activate()
{

}
 8008dfe:	4770      	bx	lr

08008e00 <_ZN38Measurement_Single_Display_1PPresenter15setTimeoutValueEi>:
}

void Measurement_Single_Display_1PPresenter::setTimeoutValue(int value)
{

}
 8008e00:	4770      	bx	lr

08008e02 <_ZN38Measurement_Single_Display_1PPresenterD0Ev>:
 8008e02:	b510      	push	{r4, lr}
 8008e04:	2110      	movs	r1, #16
 8008e06:	4604      	mov	r4, r0
 8008e08:	f021 fc97 	bl	802a73a <_ZdlPvj>
 8008e0c:	4620      	mov	r0, r4
 8008e0e:	bd10      	pop	{r4, pc}

08008e10 <_ZThn4_N38Measurement_Single_Display_1PPresenterD0Ev>:
 8008e10:	f1a0 0004 	sub.w	r0, r0, #4
 8008e14:	e7f5      	b.n	8008e02 <_ZN38Measurement_Single_Display_1PPresenterD0Ev>

08008e16 <_ZThn4_N38Measurement_Single_Display_1PPresenter15setTimeoutValueEi>:
 8008e16:	4770      	bx	lr

08008e18 <_ZN38Measurement_Single_Display_1PPresenterC1ER33Measurement_Single_Display_1PView>:
Measurement_Single_Display_1PPresenter::Measurement_Single_Display_1PPresenter(Measurement_Single_Display_1PView& v)
 8008e18:	b510      	push	{r4, lr}
 8008e1a:	2200      	movs	r2, #0
 8008e1c:	6082      	str	r2, [r0, #8]
    : view(v)
 8008e1e:	4a04      	ldr	r2, [pc, #16]	; (8008e30 <_ZN38Measurement_Single_Display_1PPresenterC1ER33Measurement_Single_Display_1PView+0x18>)
 8008e20:	60c1      	str	r1, [r0, #12]
 8008e22:	f102 0408 	add.w	r4, r2, #8
 8008e26:	3224      	adds	r2, #36	; 0x24
 8008e28:	6004      	str	r4, [r0, #0]
 8008e2a:	6042      	str	r2, [r0, #4]
}
 8008e2c:	bd10      	pop	{r4, pc}
 8008e2e:	bf00      	nop
 8008e30:	0802ec60 	.word	0x0802ec60

08008e34 <_ZN33Measurement_Single_Display_1PView14tearDownScreenEv>:
}

void Measurement_Single_Display_1PView::tearDownScreen()
{
    Measurement_Single_Display_1PViewBase::tearDownScreen();
}
 8008e34:	4770      	bx	lr
	...

08008e38 <_ZN33Measurement_Single_Display_1PViewD1Ev>:

class Measurement_Single_Display_1PView : public Measurement_Single_Display_1PViewBase
{
public:
    Measurement_Single_Display_1PView();
    virtual ~Measurement_Single_Display_1PView() {}
 8008e38:	b510      	push	{r4, lr}
 8008e3a:	4b03      	ldr	r3, [pc, #12]	; (8008e48 <_ZN33Measurement_Single_Display_1PViewD1Ev+0x10>)
 8008e3c:	6003      	str	r3, [r0, #0]
 8008e3e:	4604      	mov	r4, r0
 8008e40:	f7fe fb28 	bl	8007494 <_ZN37Measurement_Single_Display_1PViewBaseD1Ev>
 8008e44:	4620      	mov	r0, r4
 8008e46:	bd10      	pop	{r4, pc}
 8008e48:	0802eca0 	.word	0x0802eca0

08008e4c <_ZN33Measurement_Single_Display_1PViewD0Ev>:
 8008e4c:	b510      	push	{r4, lr}
 8008e4e:	4604      	mov	r4, r0
 8008e50:	f7ff fff2 	bl	8008e38 <_ZN33Measurement_Single_Display_1PViewD1Ev>
 8008e54:	4620      	mov	r0, r4
 8008e56:	f241 31f8 	movw	r1, #5112	; 0x13f8
 8008e5a:	f021 fc6e 	bl	802a73a <_ZdlPvj>
 8008e5e:	4620      	mov	r0, r4
 8008e60:	bd10      	pop	{r4, pc}
	...

08008e64 <_ZN33Measurement_Single_Display_1PViewC1Ev>:
Measurement_Single_Display_1PView::Measurement_Single_Display_1PView()
 8008e64:	b510      	push	{r4, lr}
 8008e66:	4604      	mov	r4, r0
 8008e68:	f7fe fb4e 	bl	8007508 <_ZN37Measurement_Single_Display_1PViewBaseC1Ev>
 8008e6c:	4b01      	ldr	r3, [pc, #4]	; (8008e74 <_ZN33Measurement_Single_Display_1PViewC1Ev+0x10>)
 8008e6e:	6023      	str	r3, [r4, #0]
}
 8008e70:	4620      	mov	r0, r4
 8008e72:	bd10      	pop	{r4, pc}
 8008e74:	0802eca0 	.word	0x0802eca0

08008e78 <_ZN33Measurement_Single_Display_1PView11setupScreenEv>:
    Measurement_Single_Display_1PViewBase::setupScreen();
 8008e78:	f7fe bae7 	b.w	800744a <_ZN37Measurement_Single_Display_1PViewBase11setupScreenEv>

08008e7c <_ZN33Measurement_Single_Display_1PView7testGuiEv>:

void Measurement_Single_Display_1PView::testGui()
{
 8008e7c:	b5f0      	push	{r4, r5, r6, r7, lr}
 8008e7e:	4e2a      	ldr	r6, [pc, #168]	; (8008f28 <_ZN33Measurement_Single_Display_1PView7testGuiEv+0xac>)
	// Disable Touchgfx tasks to avoid interference
	touchgfx::HAL::getInstance()->disableInterrupts();

	int test = 	0;

	HAL_GPIO_WritePin(GPIOA, GPIO_PIN_7, GPIO_PIN_SET);
 8008e80:	4f2a      	ldr	r7, [pc, #168]	; (8008f2c <_ZN33Measurement_Single_Display_1PView7testGuiEv+0xb0>)
{
 8008e82:	4604      	mov	r4, r0
 8008e84:	6830      	ldr	r0, [r6, #0]
	touchgfx::HAL::getInstance()->disableInterrupts();
 8008e86:	6803      	ldr	r3, [r0, #0]
{
 8008e88:	b087      	sub	sp, #28
	touchgfx::HAL::getInstance()->disableInterrupts();
 8008e8a:	6fdb      	ldr	r3, [r3, #124]	; 0x7c
 8008e8c:	4798      	blx	r3
	HAL_GPIO_WritePin(GPIOA, GPIO_PIN_7, GPIO_PIN_SET);
 8008e8e:	2201      	movs	r2, #1
 8008e90:	2180      	movs	r1, #128	; 0x80
 8008e92:	4638      	mov	r0, r7
 8008e94:	f000 ffe2 	bl	8009e5c <HAL_GPIO_WritePin>

	test = updateGUI_test();
 8008e98:	f7f7 fd9a 	bl	80009d0 <updateGUI_test>
 8008e9c:	4605      	mov	r5, r0

	uint32_t* Samples = MEAS_start_measure();
 8008e9e:	f7f8 fb1b 	bl	80014d8 <MEAS_start_measure>

	//callback to fft
	FFT fft = calculate_freq_and_signalstrength(1, Samples, 50);
 8008ea2:	2232      	movs	r2, #50	; 0x32
	uint32_t* Samples = MEAS_start_measure();
 8008ea4:	4601      	mov	r1, r0
	FFT fft = calculate_freq_and_signalstrength(1, Samples, 50);
 8008ea6:	2001      	movs	r0, #1
 8008ea8:	f7f7 fcde 	bl	8000868 <calculate_freq_and_signalstrength>

	//update GUI values
	//set gauge angle
	SMD1_gauge.setValue(test);
 8008eac:	f104 00e0 	add.w	r0, r4, #224	; 0xe0
 8008eb0:	4629      	mov	r1, r5
	FFT fft = calculate_freq_and_signalstrength(1, Samples, 50);
 8008eb2:	ed8d 0a04 	vstr	s0, [sp, #16]
 8008eb6:	edcd 0a05 	vstr	s1, [sp, #20]
	SMD1_gauge.setValue(test);
 8008eba:	9001      	str	r0, [sp, #4]
 8008ebc:	f00a fc26 	bl	801370c <_ZN8touchgfx5Gauge8setValueEi>
	SMD1_gauge.invalidate();
 8008ec0:	9801      	ldr	r0, [sp, #4]
 8008ec2:	f00e fc6d 	bl	80177a0 <_ZNK8touchgfx8Drawable10invalidateEv>

	//set current value
	Unicode::snprintf(SMD1_CurrentBuffer, SMD1_CURRENT_SIZE, "%d", test);
 8008ec6:	462b      	mov	r3, r5
 8008ec8:	4a19      	ldr	r2, [pc, #100]	; (8008f30 <_ZN33Measurement_Single_Display_1PView7testGuiEv+0xb4>)
 8008eca:	210a      	movs	r1, #10
 8008ecc:	f504 60b3 	add.w	r0, r4, #1432	; 0x598
 8008ed0:	f010 fd2c 	bl	801992c <_ZN8touchgfx7Unicode8snprintfEPttPKcz>
	SMD1_Current.invalidate();
 8008ed4:	f504 7020 	add.w	r0, r4, #640	; 0x280
 8008ed8:	f00e fc62 	bl	80177a0 <_ZNK8touchgfx8Drawable10invalidateEv>

	//set frequency value
	Unicode::snprintfFloat(SMD1_FrequencyBuffer, SMD1_FREQUENCY_SIZE, "%.2f", fft.main_freq);
 8008edc:	9b04      	ldr	r3, [sp, #16]
     *
     * @see snprintf, snprintfFloats
     */
    static UnicodeChar* snprintfFloat(UnicodeChar* dst, uint16_t dstSize, const char* format, const float value)
    {
        return snprintfFloats(dst, dstSize, format, &value);
 8008ede:	4a15      	ldr	r2, [pc, #84]	; (8008f34 <_ZN33Measurement_Single_Display_1PView7testGuiEv+0xb8>)
 8008ee0:	9303      	str	r3, [sp, #12]
 8008ee2:	210a      	movs	r1, #10
 8008ee4:	ab03      	add	r3, sp, #12
 8008ee6:	f204 50ac 	addw	r0, r4, #1452	; 0x5ac
 8008eea:	f010 ff0b 	bl	8019d04 <_ZN8touchgfx7Unicode14snprintfFloatsEPttPKcPKf>
	SMD1_Frequency.invalidate();
 8008eee:	f504 7033 	add.w	r0, r4, #716	; 0x2cc
 8008ef2:	f00e fc55 	bl	80177a0 <_ZNK8touchgfx8Drawable10invalidateEv>

	//set distance value
	Unicode::snprintfFloat(SMD1_DistanceBuffer, SMD1_DISTANCE_SIZE, "%.2f", fft.signal_strength);
 8008ef6:	9b05      	ldr	r3, [sp, #20]
 8008ef8:	4a0e      	ldr	r2, [pc, #56]	; (8008f34 <_ZN33Measurement_Single_Display_1PView7testGuiEv+0xb8>)
 8008efa:	9303      	str	r3, [sp, #12]
 8008efc:	210a      	movs	r1, #10
 8008efe:	ab03      	add	r3, sp, #12
 8008f00:	f504 60b8 	add.w	r0, r4, #1472	; 0x5c0
 8008f04:	f010 fefe 	bl	8019d04 <_ZN8touchgfx7Unicode14snprintfFloatsEPttPKcPKf>
	SMD1_Distance.invalidate();
 8008f08:	f504 7046 	add.w	r0, r4, #792	; 0x318
 8008f0c:	f00e fc48 	bl	80177a0 <_ZNK8touchgfx8Drawable10invalidateEv>

	HAL_GPIO_WritePin(GPIOA, GPIO_PIN_7, GPIO_PIN_RESET);
 8008f10:	4638      	mov	r0, r7
 8008f12:	2200      	movs	r2, #0
 8008f14:	2180      	movs	r1, #128	; 0x80
 8008f16:	f000 ffa1 	bl	8009e5c <HAL_GPIO_WritePin>
 8008f1a:	6830      	ldr	r0, [r6, #0]

	// Enable Touchgfx tasks
	touchgfx::HAL::getInstance()->enableInterrupts();
 8008f1c:	6803      	ldr	r3, [r0, #0]
 8008f1e:	6f9b      	ldr	r3, [r3, #120]	; 0x78

#endif
}
 8008f20:	b007      	add	sp, #28
 8008f22:	e8bd 40f0 	ldmia.w	sp!, {r4, r5, r6, r7, lr}
	touchgfx::HAL::getInstance()->enableInterrupts();
 8008f26:	4718      	bx	r3
 8008f28:	2001381c 	.word	0x2001381c
 8008f2c:	40020000 	.word	0x40020000
 8008f30:	0802ce42 	.word	0x0802ce42
 8008f34:	0802ec90 	.word	0x0802ec90

08008f38 <_ZN38Measurement_Single_Display_3PPresenterD1Ev>:
     * The deactivate function is called automatically when this screen is "switched out"
     * (ie. made inactive). Teardown functionality can be placed here.
     */
    virtual void deactivate();

    virtual ~Measurement_Single_Display_3PPresenter() {}
 8008f38:	4770      	bx	lr

08008f3a <_ZThn4_N38Measurement_Single_Display_3PPresenterD1Ev>:
 8008f3a:	3804      	subs	r0, #4
 8008f3c:	4770      	bx	lr

08008f3e <_ZN38Measurement_Single_Display_3PPresenter10deactivateEv>:
}

void Measurement_Single_Display_3PPresenter::activate()
{

}
 8008f3e:	4770      	bx	lr

08008f40 <_ZN38Measurement_Single_Display_3PPresenter15setTimeoutValueEi>:
}

void Measurement_Single_Display_3PPresenter::setTimeoutValue(int value)
{

}
 8008f40:	4770      	bx	lr

08008f42 <_ZN38Measurement_Single_Display_3PPresenterD0Ev>:
 8008f42:	b510      	push	{r4, lr}
 8008f44:	2110      	movs	r1, #16
 8008f46:	4604      	mov	r4, r0
 8008f48:	f021 fbf7 	bl	802a73a <_ZdlPvj>
 8008f4c:	4620      	mov	r0, r4
 8008f4e:	bd10      	pop	{r4, pc}

08008f50 <_ZThn4_N38Measurement_Single_Display_3PPresenterD0Ev>:
 8008f50:	f1a0 0004 	sub.w	r0, r0, #4
 8008f54:	e7f5      	b.n	8008f42 <_ZN38Measurement_Single_Display_3PPresenterD0Ev>

08008f56 <_ZThn4_N38Measurement_Single_Display_3PPresenter15setTimeoutValueEi>:
 8008f56:	4770      	bx	lr

08008f58 <_ZN38Measurement_Single_Display_3PPresenterC1ER33Measurement_Single_Display_3PView>:
Measurement_Single_Display_3PPresenter::Measurement_Single_Display_3PPresenter(Measurement_Single_Display_3PView& v)
 8008f58:	b510      	push	{r4, lr}
 8008f5a:	2200      	movs	r2, #0
 8008f5c:	6082      	str	r2, [r0, #8]
    : view(v)
 8008f5e:	4a04      	ldr	r2, [pc, #16]	; (8008f70 <_ZN38Measurement_Single_Display_3PPresenterC1ER33Measurement_Single_Display_3PView+0x18>)
 8008f60:	60c1      	str	r1, [r0, #12]
 8008f62:	f102 0408 	add.w	r4, r2, #8
 8008f66:	3224      	adds	r2, #36	; 0x24
 8008f68:	6004      	str	r4, [r0, #0]
 8008f6a:	6042      	str	r2, [r0, #4]
}
 8008f6c:	bd10      	pop	{r4, pc}
 8008f6e:	bf00      	nop
 8008f70:	0802ecd0 	.word	0x0802ecd0

08008f74 <_ZN33Measurement_Single_Display_3PView14tearDownScreenEv>:
}

void Measurement_Single_Display_3PView::tearDownScreen()
{
    Measurement_Single_Display_3PViewBase::tearDownScreen();
}
 8008f74:	4770      	bx	lr
	...

08008f78 <_ZN33Measurement_Single_Display_3PViewD1Ev>:

class Measurement_Single_Display_3PView : public Measurement_Single_Display_3PViewBase
{
public:
    Measurement_Single_Display_3PView();
    virtual ~Measurement_Single_Display_3PView() {}
 8008f78:	b510      	push	{r4, lr}
 8008f7a:	4b03      	ldr	r3, [pc, #12]	; (8008f88 <_ZN33Measurement_Single_Display_3PViewD1Ev+0x10>)
 8008f7c:	6003      	str	r3, [r0, #0]
 8008f7e:	4604      	mov	r4, r0
 8008f80:	f7fe fe22 	bl	8007bc8 <_ZN37Measurement_Single_Display_3PViewBaseD1Ev>
 8008f84:	4620      	mov	r0, r4
 8008f86:	bd10      	pop	{r4, pc}
 8008f88:	0802ed08 	.word	0x0802ed08

08008f8c <_ZN33Measurement_Single_Display_3PViewD0Ev>:
 8008f8c:	b510      	push	{r4, lr}
 8008f8e:	4604      	mov	r4, r0
 8008f90:	f7ff fff2 	bl	8008f78 <_ZN33Measurement_Single_Display_3PViewD1Ev>
 8008f94:	4620      	mov	r0, r4
 8008f96:	f241 015c 	movw	r1, #4188	; 0x105c
 8008f9a:	f021 fbce 	bl	802a73a <_ZdlPvj>
 8008f9e:	4620      	mov	r0, r4
 8008fa0:	bd10      	pop	{r4, pc}
	...

08008fa4 <_ZN33Measurement_Single_Display_3PViewC1Ev>:
Measurement_Single_Display_3PView::Measurement_Single_Display_3PView()
 8008fa4:	b510      	push	{r4, lr}
 8008fa6:	4604      	mov	r4, r0
 8008fa8:	f7fe fe36 	bl	8007c18 <_ZN37Measurement_Single_Display_3PViewBaseC1Ev>
 8008fac:	4b01      	ldr	r3, [pc, #4]	; (8008fb4 <_ZN33Measurement_Single_Display_3PViewC1Ev+0x10>)
 8008fae:	6023      	str	r3, [r4, #0]
}
 8008fb0:	4620      	mov	r0, r4
 8008fb2:	bd10      	pop	{r4, pc}
 8008fb4:	0802ed08 	.word	0x0802ed08

08008fb8 <_ZN33Measurement_Single_Display_3PView11setupScreenEv>:
    Measurement_Single_Display_3PViewBase::setupScreen();
 8008fb8:	f7fe bde2 	b.w	8007b80 <_ZN37Measurement_Single_Display_3PViewBase11setupScreenEv>

08008fbc <_ZN5ModelC1Ev>:
}
#endif



Model::Model() : modelListener(0), Timeout_Value(60)
 8008fbc:	2100      	movs	r1, #0
 8008fbe:	223c      	movs	r2, #60	; 0x3c
 8008fc0:	e9c0 1200 	strd	r1, r2, [r0]
{

}
 8008fc4:	4770      	bx	lr
	...

08008fc8 <_ZN5Model4tickEv>:

void Model::tick()
{
 8008fc8:	b570      	push	{r4, r5, r6, lr}
#ifndef SIMULATOR

	if(osMessageQueueGetCount(TimeoutQueueHandle) > 0)
 8008fca:	4d0a      	ldr	r5, [pc, #40]	; (8008ff4 <_ZN5Model4tickEv+0x2c>)
{
 8008fcc:	4604      	mov	r4, r0
	if(osMessageQueueGetCount(TimeoutQueueHandle) > 0)
 8008fce:	6828      	ldr	r0, [r5, #0]
 8008fd0:	f004 fc20 	bl	800d814 <osMessageQueueGetCount>
 8008fd4:	b168      	cbz	r0, 8008ff2 <_ZN5Model4tickEv+0x2a>
	{
		if(osMessageQueueGet(TimeoutQueueHandle, &Timeout_Value, 0, 0) == osOK)
 8008fd6:	2300      	movs	r3, #0
 8008fd8:	6828      	ldr	r0, [r5, #0]
 8008fda:	461a      	mov	r2, r3
 8008fdc:	1d21      	adds	r1, r4, #4
 8008fde:	f004 fbe5 	bl	800d7ac <osMessageQueueGet>
 8008fe2:	b930      	cbnz	r0, 8008ff2 <_ZN5Model4tickEv+0x2a>
		{
			modelListener->setTimeoutValue(Timeout_Value);
 8008fe4:	6820      	ldr	r0, [r4, #0]
 8008fe6:	6861      	ldr	r1, [r4, #4]
 8008fe8:	6803      	ldr	r3, [r0, #0]
		}
	}
#endif
}
 8008fea:	e8bd 4070 	ldmia.w	sp!, {r4, r5, r6, lr}
			modelListener->setTimeoutValue(Timeout_Value);
 8008fee:	689b      	ldr	r3, [r3, #8]
 8008ff0:	4718      	bx	r3
}
 8008ff2:	bd70      	pop	{r4, r5, r6, pc}
 8008ff4:	200001a0 	.word	0x200001a0

08008ff8 <_ZN21Project_InfoPresenterD1Ev>:
     * The deactivate function is called automatically when this screen is "switched out"
     * (ie. made inactive). Teardown functionality can be placed here.
     */
    virtual void deactivate();

    virtual ~Project_InfoPresenter() {}
 8008ff8:	4770      	bx	lr

08008ffa <_ZThn4_N21Project_InfoPresenterD1Ev>:
 8008ffa:	3804      	subs	r0, #4
 8008ffc:	4770      	bx	lr

08008ffe <_ZN21Project_InfoPresenter10deactivateEv>:
}

void Project_InfoPresenter::activate()
{

}
 8008ffe:	4770      	bx	lr

08009000 <_ZN21Project_InfoPresenter15setTimeoutValueEi>:

}

void Project_InfoPresenter::setTimeoutValue(int value)
{
	view.setTimeoutValue(value);
 8009000:	68c0      	ldr	r0, [r0, #12]
 8009002:	6803      	ldr	r3, [r0, #0]
 8009004:	6adb      	ldr	r3, [r3, #44]	; 0x2c
 8009006:	4718      	bx	r3

08009008 <_ZThn4_N21Project_InfoPresenter15setTimeoutValueEi>:

    virtual void setTimeoutValue(int value);
 8009008:	f1a0 0004 	sub.w	r0, r0, #4
 800900c:	f7ff bff8 	b.w	8009000 <_ZN21Project_InfoPresenter15setTimeoutValueEi>

08009010 <_ZN21Project_InfoPresenterD0Ev>:
    virtual ~Project_InfoPresenter() {}
 8009010:	b510      	push	{r4, lr}
 8009012:	2110      	movs	r1, #16
 8009014:	4604      	mov	r4, r0
 8009016:	f021 fb90 	bl	802a73a <_ZdlPvj>
 800901a:	4620      	mov	r0, r4
 800901c:	bd10      	pop	{r4, pc}

0800901e <_ZThn4_N21Project_InfoPresenterD0Ev>:
 800901e:	f1a0 0004 	sub.w	r0, r0, #4
 8009022:	e7f5      	b.n	8009010 <_ZN21Project_InfoPresenterD0Ev>

08009024 <_ZN21Project_InfoPresenterC1ER16Project_InfoView>:
Project_InfoPresenter::Project_InfoPresenter(Project_InfoView& v)
 8009024:	b510      	push	{r4, lr}
 8009026:	2200      	movs	r2, #0
 8009028:	6082      	str	r2, [r0, #8]
    : view(v)
 800902a:	4a04      	ldr	r2, [pc, #16]	; (800903c <_ZN21Project_InfoPresenterC1ER16Project_InfoView+0x18>)
 800902c:	60c1      	str	r1, [r0, #12]
 800902e:	f102 0408 	add.w	r4, r2, #8
 8009032:	3224      	adds	r2, #36	; 0x24
 8009034:	6004      	str	r4, [r0, #0]
 8009036:	6042      	str	r2, [r0, #4]
}
 8009038:	bd10      	pop	{r4, pc}
 800903a:	bf00      	nop
 800903c:	0802ed34 	.word	0x0802ed34

08009040 <_ZN16Project_InfoView14tearDownScreenEv>:
}

void Project_InfoView::tearDownScreen()
{
    Project_InfoViewBase::tearDownScreen();
}
 8009040:	4770      	bx	lr
	...

08009044 <_ZN16Project_InfoViewD1Ev>:

class Project_InfoView : public Project_InfoViewBase
{
public:
    Project_InfoView();
    virtual ~Project_InfoView() {}
 8009044:	b510      	push	{r4, lr}
 8009046:	4b03      	ldr	r3, [pc, #12]	; (8009054 <_ZN16Project_InfoViewD1Ev+0x10>)
 8009048:	6003      	str	r3, [r0, #0]
 800904a:	4604      	mov	r4, r0
 800904c:	f7fe ff6a 	bl	8007f24 <_ZN20Project_InfoViewBaseD1Ev>
 8009050:	4620      	mov	r0, r4
 8009052:	bd10      	pop	{r4, pc}
 8009054:	0802ed6c 	.word	0x0802ed6c

08009058 <_ZN16Project_InfoViewD0Ev>:
 8009058:	b510      	push	{r4, lr}
 800905a:	4604      	mov	r4, r0
 800905c:	f7ff fff2 	bl	8009044 <_ZN16Project_InfoViewD1Ev>
 8009060:	4620      	mov	r0, r4
 8009062:	f241 01b0 	movw	r1, #4272	; 0x10b0
 8009066:	f021 fb68 	bl	802a73a <_ZdlPvj>
 800906a:	4620      	mov	r0, r4
 800906c:	bd10      	pop	{r4, pc}
	...

08009070 <_ZN16Project_InfoViewC1Ev>:
Project_InfoView::Project_InfoView()
 8009070:	b510      	push	{r4, lr}
 8009072:	4604      	mov	r4, r0
 8009074:	f7fe ff7e 	bl	8007f74 <_ZN20Project_InfoViewBaseC1Ev>
 8009078:	4b01      	ldr	r3, [pc, #4]	; (8009080 <_ZN16Project_InfoViewC1Ev+0x10>)
 800907a:	6023      	str	r3, [r4, #0]
}
 800907c:	4620      	mov	r0, r4
 800907e:	bd10      	pop	{r4, pc}
 8009080:	0802ed6c 	.word	0x0802ed6c

08009084 <_ZN16Project_InfoView11setupScreenEv>:
    Project_InfoViewBase::setupScreen();
 8009084:	f7fe bf2a 	b.w	8007edc <_ZN20Project_InfoViewBase11setupScreenEv>

08009088 <_ZN16Project_InfoView15setTimeoutValueEi>:

void Project_InfoView::setTimeoutValue(int value)
{
 8009088:	b538      	push	{r3, r4, r5, lr}
	//display the timeout value on the GUI
	Unicode::snprintf(textArea3_1Buffer, TEXTAREA3_1_SIZE, "%d", value);
 800908a:	4a0a      	ldr	r2, [pc, #40]	; (80090b4 <_ZN16Project_InfoView15setTimeoutValueEi+0x2c>)
{
 800908c:	4605      	mov	r5, r0
 800908e:	460c      	mov	r4, r1
	Unicode::snprintf(textArea3_1Buffer, TEXTAREA3_1_SIZE, "%d", value);
 8009090:	460b      	mov	r3, r1
 8009092:	f500 7022 	add.w	r0, r0, #648	; 0x288
 8009096:	2104      	movs	r1, #4
 8009098:	f010 fc48 	bl	801992c <_ZN8touchgfx7Unicode8snprintfEPttPKcz>
	textArea3_1.invalidate();
 800909c:	f105 0098 	add.w	r0, r5, #152	; 0x98
 80090a0:	f00e fb7e 	bl	80177a0 <_ZNK8touchgfx8Drawable10invalidateEv>

	if (value == 0) {
 80090a4:	b92c      	cbnz	r4, 80090b2 <_ZN16Project_InfoView15setTimeoutValueEi+0x2a>
 80090a6:	f00d fa93 	bl	80165d0 <_ZN8touchgfx11Application11getInstanceEv>
		//application().gotoMeasurement_SingleScreenSlideTransitionWest();
		application().gotoShutting_OffScreenNoTransition();
	}
}
 80090aa:	e8bd 4038 	ldmia.w	sp!, {r3, r4, r5, lr}
		application().gotoShutting_OffScreenNoTransition();
 80090ae:	f7fb bbd9 	b.w	8004864 <_ZN23FrontendApplicationBase34gotoShutting_OffScreenNoTransitionEv>
}
 80090b2:	bd38      	pop	{r3, r4, r5, pc}
 80090b4:	0802ce42 	.word	0x0802ce42

080090b8 <_ZN21Shutting_OffPresenterD1Ev>:
     * The deactivate function is called automatically when this screen is "switched out"
     * (ie. made inactive). Teardown functionality can be placed here.
     */
    virtual void deactivate();

    virtual ~Shutting_OffPresenter() {}
 80090b8:	4770      	bx	lr

080090ba <_ZThn4_N21Shutting_OffPresenterD1Ev>:
 80090ba:	3804      	subs	r0, #4
 80090bc:	4770      	bx	lr

080090be <_ZN21Shutting_OffPresenter10deactivateEv>:
}

void Shutting_OffPresenter::activate()
{

}
 80090be:	4770      	bx	lr

080090c0 <_ZN21Shutting_OffPresenter15setTimeoutValueEi>:
}

void Shutting_OffPresenter::setTimeoutValue(int value)
{

}
 80090c0:	4770      	bx	lr

080090c2 <_ZN21Shutting_OffPresenterD0Ev>:
 80090c2:	b510      	push	{r4, lr}
 80090c4:	2110      	movs	r1, #16
 80090c6:	4604      	mov	r4, r0
 80090c8:	f021 fb37 	bl	802a73a <_ZdlPvj>
 80090cc:	4620      	mov	r0, r4
 80090ce:	bd10      	pop	{r4, pc}

080090d0 <_ZThn4_N21Shutting_OffPresenterD0Ev>:
 80090d0:	f1a0 0004 	sub.w	r0, r0, #4
 80090d4:	e7f5      	b.n	80090c2 <_ZN21Shutting_OffPresenterD0Ev>

080090d6 <_ZThn4_N21Shutting_OffPresenter15setTimeoutValueEi>:
 80090d6:	4770      	bx	lr

080090d8 <_ZN21Shutting_OffPresenterC1ER16Shutting_OffView>:
Shutting_OffPresenter::Shutting_OffPresenter(Shutting_OffView& v)
 80090d8:	b510      	push	{r4, lr}
 80090da:	2200      	movs	r2, #0
 80090dc:	6082      	str	r2, [r0, #8]
    : view(v)
 80090de:	4a04      	ldr	r2, [pc, #16]	; (80090f0 <_ZN21Shutting_OffPresenterC1ER16Shutting_OffView+0x18>)
 80090e0:	60c1      	str	r1, [r0, #12]
 80090e2:	f102 0408 	add.w	r4, r2, #8
 80090e6:	3224      	adds	r2, #36	; 0x24
 80090e8:	6004      	str	r4, [r0, #0]
 80090ea:	6042      	str	r2, [r0, #4]
}
 80090ec:	bd10      	pop	{r4, pc}
 80090ee:	bf00      	nop
 80090f0:	0802ed9c 	.word	0x0802ed9c

080090f4 <_ZN16Shutting_OffView14tearDownScreenEv>:
}

void Shutting_OffView::tearDownScreen()
{
    Shutting_OffViewBase::tearDownScreen();
}
 80090f4:	4770      	bx	lr
	...

080090f8 <_ZN16Shutting_OffViewD1Ev>:

class Shutting_OffView : public Shutting_OffViewBase
{
public:
    Shutting_OffView();
    virtual ~Shutting_OffView() {}
 80090f8:	b510      	push	{r4, lr}
 80090fa:	4b03      	ldr	r3, [pc, #12]	; (8009108 <_ZN16Shutting_OffViewD1Ev+0x10>)
 80090fc:	6003      	str	r3, [r0, #0]
 80090fe:	4604      	mov	r4, r0
 8009100:	f7ff f906 	bl	8008310 <_ZN20Shutting_OffViewBaseD1Ev>
 8009104:	4620      	mov	r0, r4
 8009106:	bd10      	pop	{r4, pc}
 8009108:	0802edd4 	.word	0x0802edd4

0800910c <_ZN16Shutting_OffViewD0Ev>:
 800910c:	b510      	push	{r4, lr}
 800910e:	4604      	mov	r4, r0
 8009110:	f7ff fff2 	bl	80090f8 <_ZN16Shutting_OffViewD1Ev>
 8009114:	4620      	mov	r0, r4
 8009116:	2198      	movs	r1, #152	; 0x98
 8009118:	f021 fb0f 	bl	802a73a <_ZdlPvj>
 800911c:	4620      	mov	r0, r4
 800911e:	bd10      	pop	{r4, pc}

08009120 <_ZN16Shutting_OffViewC1Ev>:
Shutting_OffView::Shutting_OffView()
 8009120:	b510      	push	{r4, lr}
 8009122:	4604      	mov	r4, r0
 8009124:	f7ff f8fe 	bl	8008324 <_ZN20Shutting_OffViewBaseC1Ev>
 8009128:	4b01      	ldr	r3, [pc, #4]	; (8009130 <_ZN16Shutting_OffViewC1Ev+0x10>)
 800912a:	6023      	str	r3, [r4, #0]
}
 800912c:	4620      	mov	r0, r4
 800912e:	bd10      	pop	{r4, pc}
 8009130:	0802edd4 	.word	0x0802edd4

08009134 <_ZN16Shutting_OffView11setupScreenEv>:
    Shutting_OffViewBase::setupScreen();
 8009134:	f7ff b8ed 	b.w	8008312 <_ZN20Shutting_OffViewBase11setupScreenEv>

08009138 <ili9341_GetLcdPixelWidth>:
  */
uint16_t ili9341_GetLcdPixelWidth(void)
{
  /* Return LCD PIXEL WIDTH */
  return ILI9341_LCD_PIXEL_WIDTH;
}
 8009138:	20f0      	movs	r0, #240	; 0xf0
 800913a:	4770      	bx	lr

0800913c <ili9341_GetLcdPixelHeight>:
  */
uint16_t ili9341_GetLcdPixelHeight(void)
{
  /* Return LCD PIXEL HEIGHT */
  return ILI9341_LCD_PIXEL_HEIGHT;
}
 800913c:	f44f 70a0 	mov.w	r0, #320	; 0x140
 8009140:	4770      	bx	lr
 8009142:	bf00      	nop

08009144 <ili9341_DisplayOn>:
  LCD_IO_WriteReg(LCD_Reg);
 8009144:	2029      	movs	r0, #41	; 0x29
 8009146:	f7f8 b83f 	b.w	80011c8 <LCD_IO_WriteReg>
 800914a:	bf00      	nop

0800914c <ili9341_DisplayOff>:
 800914c:	2028      	movs	r0, #40	; 0x28
 800914e:	f7f8 b83b 	b.w	80011c8 <LCD_IO_WriteReg>
 8009152:	bf00      	nop

08009154 <ili9341_Init>:
{
 8009154:	b508      	push	{r3, lr}
  LCD_IO_Init();
 8009156:	f7f7 fffd 	bl	8001154 <LCD_IO_Init>
  LCD_IO_WriteReg(LCD_Reg);
 800915a:	20ca      	movs	r0, #202	; 0xca
 800915c:	f7f8 f834 	bl	80011c8 <LCD_IO_WriteReg>
  LCD_IO_WriteData(RegValue);
 8009160:	20c3      	movs	r0, #195	; 0xc3
 8009162:	f7f8 f807 	bl	8001174 <LCD_IO_WriteData>
 8009166:	2008      	movs	r0, #8
 8009168:	f7f8 f804 	bl	8001174 <LCD_IO_WriteData>
 800916c:	2050      	movs	r0, #80	; 0x50
 800916e:	f7f8 f801 	bl	8001174 <LCD_IO_WriteData>
  LCD_IO_WriteReg(LCD_Reg);
 8009172:	20cf      	movs	r0, #207	; 0xcf
 8009174:	f7f8 f828 	bl	80011c8 <LCD_IO_WriteReg>
  LCD_IO_WriteData(RegValue);
 8009178:	2000      	movs	r0, #0
 800917a:	f7f7 fffb 	bl	8001174 <LCD_IO_WriteData>
 800917e:	20c1      	movs	r0, #193	; 0xc1
 8009180:	f7f7 fff8 	bl	8001174 <LCD_IO_WriteData>
 8009184:	2030      	movs	r0, #48	; 0x30
 8009186:	f7f7 fff5 	bl	8001174 <LCD_IO_WriteData>
  LCD_IO_WriteReg(LCD_Reg);
 800918a:	20ed      	movs	r0, #237	; 0xed
 800918c:	f7f8 f81c 	bl	80011c8 <LCD_IO_WriteReg>
  LCD_IO_WriteData(RegValue);
 8009190:	2064      	movs	r0, #100	; 0x64
 8009192:	f7f7 ffef 	bl	8001174 <LCD_IO_WriteData>
 8009196:	2003      	movs	r0, #3
 8009198:	f7f7 ffec 	bl	8001174 <LCD_IO_WriteData>
 800919c:	2012      	movs	r0, #18
 800919e:	f7f7 ffe9 	bl	8001174 <LCD_IO_WriteData>
 80091a2:	2081      	movs	r0, #129	; 0x81
 80091a4:	f7f7 ffe6 	bl	8001174 <LCD_IO_WriteData>
  LCD_IO_WriteReg(LCD_Reg);
 80091a8:	20e8      	movs	r0, #232	; 0xe8
 80091aa:	f7f8 f80d 	bl	80011c8 <LCD_IO_WriteReg>
  LCD_IO_WriteData(RegValue);
 80091ae:	2085      	movs	r0, #133	; 0x85
 80091b0:	f7f7 ffe0 	bl	8001174 <LCD_IO_WriteData>
 80091b4:	2000      	movs	r0, #0
 80091b6:	f7f7 ffdd 	bl	8001174 <LCD_IO_WriteData>
 80091ba:	2078      	movs	r0, #120	; 0x78
 80091bc:	f7f7 ffda 	bl	8001174 <LCD_IO_WriteData>
  LCD_IO_WriteReg(LCD_Reg);
 80091c0:	20cb      	movs	r0, #203	; 0xcb
 80091c2:	f7f8 f801 	bl	80011c8 <LCD_IO_WriteReg>
  LCD_IO_WriteData(RegValue);
 80091c6:	2039      	movs	r0, #57	; 0x39
 80091c8:	f7f7 ffd4 	bl	8001174 <LCD_IO_WriteData>
 80091cc:	202c      	movs	r0, #44	; 0x2c
 80091ce:	f7f7 ffd1 	bl	8001174 <LCD_IO_WriteData>
 80091d2:	2000      	movs	r0, #0
 80091d4:	f7f7 ffce 	bl	8001174 <LCD_IO_WriteData>
 80091d8:	2034      	movs	r0, #52	; 0x34
 80091da:	f7f7 ffcb 	bl	8001174 <LCD_IO_WriteData>
 80091de:	2002      	movs	r0, #2
 80091e0:	f7f7 ffc8 	bl	8001174 <LCD_IO_WriteData>
  LCD_IO_WriteReg(LCD_Reg);
 80091e4:	20f7      	movs	r0, #247	; 0xf7
 80091e6:	f7f7 ffef 	bl	80011c8 <LCD_IO_WriteReg>
  LCD_IO_WriteData(RegValue);
 80091ea:	2020      	movs	r0, #32
 80091ec:	f7f7 ffc2 	bl	8001174 <LCD_IO_WriteData>
  LCD_IO_WriteReg(LCD_Reg);
 80091f0:	20ea      	movs	r0, #234	; 0xea
 80091f2:	f7f7 ffe9 	bl	80011c8 <LCD_IO_WriteReg>
  LCD_IO_WriteData(RegValue);
 80091f6:	2000      	movs	r0, #0
 80091f8:	f7f7 ffbc 	bl	8001174 <LCD_IO_WriteData>
 80091fc:	2000      	movs	r0, #0
 80091fe:	f7f7 ffb9 	bl	8001174 <LCD_IO_WriteData>
  LCD_IO_WriteReg(LCD_Reg);
 8009202:	20b1      	movs	r0, #177	; 0xb1
 8009204:	f7f7 ffe0 	bl	80011c8 <LCD_IO_WriteReg>
  LCD_IO_WriteData(RegValue);
 8009208:	2000      	movs	r0, #0
 800920a:	f7f7 ffb3 	bl	8001174 <LCD_IO_WriteData>
 800920e:	201b      	movs	r0, #27
 8009210:	f7f7 ffb0 	bl	8001174 <LCD_IO_WriteData>
  LCD_IO_WriteReg(LCD_Reg);
 8009214:	20b6      	movs	r0, #182	; 0xb6
 8009216:	f7f7 ffd7 	bl	80011c8 <LCD_IO_WriteReg>
  LCD_IO_WriteData(RegValue);
 800921a:	200a      	movs	r0, #10
 800921c:	f7f7 ffaa 	bl	8001174 <LCD_IO_WriteData>
 8009220:	20a2      	movs	r0, #162	; 0xa2
 8009222:	f7f7 ffa7 	bl	8001174 <LCD_IO_WriteData>
  LCD_IO_WriteReg(LCD_Reg);
 8009226:	20c0      	movs	r0, #192	; 0xc0
 8009228:	f7f7 ffce 	bl	80011c8 <LCD_IO_WriteReg>
  LCD_IO_WriteData(RegValue);
 800922c:	2010      	movs	r0, #16
 800922e:	f7f7 ffa1 	bl	8001174 <LCD_IO_WriteData>
  LCD_IO_WriteReg(LCD_Reg);
 8009232:	20c1      	movs	r0, #193	; 0xc1
 8009234:	f7f7 ffc8 	bl	80011c8 <LCD_IO_WriteReg>
  LCD_IO_WriteData(RegValue);
 8009238:	2010      	movs	r0, #16
 800923a:	f7f7 ff9b 	bl	8001174 <LCD_IO_WriteData>
  LCD_IO_WriteReg(LCD_Reg);
 800923e:	20c5      	movs	r0, #197	; 0xc5
 8009240:	f7f7 ffc2 	bl	80011c8 <LCD_IO_WriteReg>
  LCD_IO_WriteData(RegValue);
 8009244:	2045      	movs	r0, #69	; 0x45
 8009246:	f7f7 ff95 	bl	8001174 <LCD_IO_WriteData>
 800924a:	2015      	movs	r0, #21
 800924c:	f7f7 ff92 	bl	8001174 <LCD_IO_WriteData>
  LCD_IO_WriteReg(LCD_Reg);
 8009250:	20c7      	movs	r0, #199	; 0xc7
 8009252:	f7f7 ffb9 	bl	80011c8 <LCD_IO_WriteReg>
  LCD_IO_WriteData(RegValue);
 8009256:	2090      	movs	r0, #144	; 0x90
 8009258:	f7f7 ff8c 	bl	8001174 <LCD_IO_WriteData>
  LCD_IO_WriteReg(LCD_Reg);
 800925c:	2036      	movs	r0, #54	; 0x36
 800925e:	f7f7 ffb3 	bl	80011c8 <LCD_IO_WriteReg>
  LCD_IO_WriteData(RegValue);
 8009262:	20c8      	movs	r0, #200	; 0xc8
 8009264:	f7f7 ff86 	bl	8001174 <LCD_IO_WriteData>
  LCD_IO_WriteReg(LCD_Reg);
 8009268:	20f2      	movs	r0, #242	; 0xf2
 800926a:	f7f7 ffad 	bl	80011c8 <LCD_IO_WriteReg>
  LCD_IO_WriteData(RegValue);
 800926e:	2000      	movs	r0, #0
 8009270:	f7f7 ff80 	bl	8001174 <LCD_IO_WriteData>
  LCD_IO_WriteReg(LCD_Reg);
 8009274:	20b0      	movs	r0, #176	; 0xb0
 8009276:	f7f7 ffa7 	bl	80011c8 <LCD_IO_WriteReg>
  LCD_IO_WriteData(RegValue);
 800927a:	20c2      	movs	r0, #194	; 0xc2
 800927c:	f7f7 ff7a 	bl	8001174 <LCD_IO_WriteData>
  LCD_IO_WriteReg(LCD_Reg);
 8009280:	20b6      	movs	r0, #182	; 0xb6
 8009282:	f7f7 ffa1 	bl	80011c8 <LCD_IO_WriteReg>
  LCD_IO_WriteData(RegValue);
 8009286:	200a      	movs	r0, #10
 8009288:	f7f7 ff74 	bl	8001174 <LCD_IO_WriteData>
 800928c:	20a7      	movs	r0, #167	; 0xa7
 800928e:	f7f7 ff71 	bl	8001174 <LCD_IO_WriteData>
 8009292:	2027      	movs	r0, #39	; 0x27
 8009294:	f7f7 ff6e 	bl	8001174 <LCD_IO_WriteData>
 8009298:	2004      	movs	r0, #4
 800929a:	f7f7 ff6b 	bl	8001174 <LCD_IO_WriteData>
  LCD_IO_WriteReg(LCD_Reg);
 800929e:	202a      	movs	r0, #42	; 0x2a
 80092a0:	f7f7 ff92 	bl	80011c8 <LCD_IO_WriteReg>
  LCD_IO_WriteData(RegValue);
 80092a4:	2000      	movs	r0, #0
 80092a6:	f7f7 ff65 	bl	8001174 <LCD_IO_WriteData>
 80092aa:	2000      	movs	r0, #0
 80092ac:	f7f7 ff62 	bl	8001174 <LCD_IO_WriteData>
 80092b0:	2000      	movs	r0, #0
 80092b2:	f7f7 ff5f 	bl	8001174 <LCD_IO_WriteData>
 80092b6:	20ef      	movs	r0, #239	; 0xef
 80092b8:	f7f7 ff5c 	bl	8001174 <LCD_IO_WriteData>
  LCD_IO_WriteReg(LCD_Reg);
 80092bc:	202b      	movs	r0, #43	; 0x2b
 80092be:	f7f7 ff83 	bl	80011c8 <LCD_IO_WriteReg>
  LCD_IO_WriteData(RegValue);
 80092c2:	2000      	movs	r0, #0
 80092c4:	f7f7 ff56 	bl	8001174 <LCD_IO_WriteData>
 80092c8:	2000      	movs	r0, #0
 80092ca:	f7f7 ff53 	bl	8001174 <LCD_IO_WriteData>
 80092ce:	2001      	movs	r0, #1
 80092d0:	f7f7 ff50 	bl	8001174 <LCD_IO_WriteData>
 80092d4:	203f      	movs	r0, #63	; 0x3f
 80092d6:	f7f7 ff4d 	bl	8001174 <LCD_IO_WriteData>
  LCD_IO_WriteReg(LCD_Reg);
 80092da:	20f6      	movs	r0, #246	; 0xf6
 80092dc:	f7f7 ff74 	bl	80011c8 <LCD_IO_WriteReg>
  LCD_IO_WriteData(RegValue);
 80092e0:	2001      	movs	r0, #1
 80092e2:	f7f7 ff47 	bl	8001174 <LCD_IO_WriteData>
 80092e6:	2000      	movs	r0, #0
 80092e8:	f7f7 ff44 	bl	8001174 <LCD_IO_WriteData>
 80092ec:	2006      	movs	r0, #6
 80092ee:	f7f7 ff41 	bl	8001174 <LCD_IO_WriteData>
  LCD_IO_WriteReg(LCD_Reg);
 80092f2:	202c      	movs	r0, #44	; 0x2c
 80092f4:	f7f7 ff68 	bl	80011c8 <LCD_IO_WriteReg>
  LCD_Delay(200);
 80092f8:	20c8      	movs	r0, #200	; 0xc8
 80092fa:	f7f7 ffcd 	bl	8001298 <LCD_Delay>
  LCD_IO_WriteReg(LCD_Reg);
 80092fe:	2026      	movs	r0, #38	; 0x26
 8009300:	f7f7 ff62 	bl	80011c8 <LCD_IO_WriteReg>
  LCD_IO_WriteData(RegValue);
 8009304:	2001      	movs	r0, #1
 8009306:	f7f7 ff35 	bl	8001174 <LCD_IO_WriteData>
  LCD_IO_WriteReg(LCD_Reg);
 800930a:	20e0      	movs	r0, #224	; 0xe0
 800930c:	f7f7 ff5c 	bl	80011c8 <LCD_IO_WriteReg>
  LCD_IO_WriteData(RegValue);
 8009310:	200f      	movs	r0, #15
 8009312:	f7f7 ff2f 	bl	8001174 <LCD_IO_WriteData>
 8009316:	2029      	movs	r0, #41	; 0x29
 8009318:	f7f7 ff2c 	bl	8001174 <LCD_IO_WriteData>
 800931c:	2024      	movs	r0, #36	; 0x24
 800931e:	f7f7 ff29 	bl	8001174 <LCD_IO_WriteData>
 8009322:	200c      	movs	r0, #12
 8009324:	f7f7 ff26 	bl	8001174 <LCD_IO_WriteData>
 8009328:	200e      	movs	r0, #14
 800932a:	f7f7 ff23 	bl	8001174 <LCD_IO_WriteData>
 800932e:	2009      	movs	r0, #9
 8009330:	f7f7 ff20 	bl	8001174 <LCD_IO_WriteData>
 8009334:	204e      	movs	r0, #78	; 0x4e
 8009336:	f7f7 ff1d 	bl	8001174 <LCD_IO_WriteData>
 800933a:	2078      	movs	r0, #120	; 0x78
 800933c:	f7f7 ff1a 	bl	8001174 <LCD_IO_WriteData>
 8009340:	203c      	movs	r0, #60	; 0x3c
 8009342:	f7f7 ff17 	bl	8001174 <LCD_IO_WriteData>
 8009346:	2009      	movs	r0, #9
 8009348:	f7f7 ff14 	bl	8001174 <LCD_IO_WriteData>
 800934c:	2013      	movs	r0, #19
 800934e:	f7f7 ff11 	bl	8001174 <LCD_IO_WriteData>
 8009352:	2005      	movs	r0, #5
 8009354:	f7f7 ff0e 	bl	8001174 <LCD_IO_WriteData>
 8009358:	2017      	movs	r0, #23
 800935a:	f7f7 ff0b 	bl	8001174 <LCD_IO_WriteData>
 800935e:	2011      	movs	r0, #17
 8009360:	f7f7 ff08 	bl	8001174 <LCD_IO_WriteData>
 8009364:	2000      	movs	r0, #0
 8009366:	f7f7 ff05 	bl	8001174 <LCD_IO_WriteData>
  LCD_IO_WriteReg(LCD_Reg);
 800936a:	20e1      	movs	r0, #225	; 0xe1
 800936c:	f7f7 ff2c 	bl	80011c8 <LCD_IO_WriteReg>
  LCD_IO_WriteData(RegValue);
 8009370:	2000      	movs	r0, #0
 8009372:	f7f7 feff 	bl	8001174 <LCD_IO_WriteData>
 8009376:	2016      	movs	r0, #22
 8009378:	f7f7 fefc 	bl	8001174 <LCD_IO_WriteData>
 800937c:	201b      	movs	r0, #27
 800937e:	f7f7 fef9 	bl	8001174 <LCD_IO_WriteData>
 8009382:	2004      	movs	r0, #4
 8009384:	f7f7 fef6 	bl	8001174 <LCD_IO_WriteData>
 8009388:	2011      	movs	r0, #17
 800938a:	f7f7 fef3 	bl	8001174 <LCD_IO_WriteData>
 800938e:	2007      	movs	r0, #7
 8009390:	f7f7 fef0 	bl	8001174 <LCD_IO_WriteData>
 8009394:	2031      	movs	r0, #49	; 0x31
 8009396:	f7f7 feed 	bl	8001174 <LCD_IO_WriteData>
 800939a:	2033      	movs	r0, #51	; 0x33
 800939c:	f7f7 feea 	bl	8001174 <LCD_IO_WriteData>
 80093a0:	2042      	movs	r0, #66	; 0x42
 80093a2:	f7f7 fee7 	bl	8001174 <LCD_IO_WriteData>
 80093a6:	2005      	movs	r0, #5
 80093a8:	f7f7 fee4 	bl	8001174 <LCD_IO_WriteData>
 80093ac:	200c      	movs	r0, #12
 80093ae:	f7f7 fee1 	bl	8001174 <LCD_IO_WriteData>
 80093b2:	200a      	movs	r0, #10
 80093b4:	f7f7 fede 	bl	8001174 <LCD_IO_WriteData>
 80093b8:	2028      	movs	r0, #40	; 0x28
 80093ba:	f7f7 fedb 	bl	8001174 <LCD_IO_WriteData>
 80093be:	202f      	movs	r0, #47	; 0x2f
 80093c0:	f7f7 fed8 	bl	8001174 <LCD_IO_WriteData>
 80093c4:	200f      	movs	r0, #15
 80093c6:	f7f7 fed5 	bl	8001174 <LCD_IO_WriteData>
  LCD_IO_WriteReg(LCD_Reg);
 80093ca:	2011      	movs	r0, #17
 80093cc:	f7f7 fefc 	bl	80011c8 <LCD_IO_WriteReg>
  LCD_Delay(200);
 80093d0:	20c8      	movs	r0, #200	; 0xc8
 80093d2:	f7f7 ff61 	bl	8001298 <LCD_Delay>
  LCD_IO_WriteReg(LCD_Reg);
 80093d6:	2029      	movs	r0, #41	; 0x29
 80093d8:	f7f7 fef6 	bl	80011c8 <LCD_IO_WriteReg>
}
 80093dc:	e8bd 4008 	ldmia.w	sp!, {r3, lr}
  LCD_IO_WriteReg(LCD_Reg);
 80093e0:	202c      	movs	r0, #44	; 0x2c
 80093e2:	f7f7 bef1 	b.w	80011c8 <LCD_IO_WriteReg>
 80093e6:	bf00      	nop

080093e8 <ili9341_ReadID>:
{
 80093e8:	b508      	push	{r3, lr}
  LCD_IO_Init();
 80093ea:	f7f7 feb3 	bl	8001154 <LCD_IO_Init>
  return (LCD_IO_ReadData(RegValue, ReadSize));
 80093ee:	2103      	movs	r1, #3
 80093f0:	20d3      	movs	r0, #211	; 0xd3
 80093f2:	f7f7 ff13 	bl	800121c <LCD_IO_ReadData>
}
 80093f6:	b280      	uxth	r0, r0
 80093f8:	bd08      	pop	{r3, pc}
 80093fa:	bf00      	nop

080093fc <stmpe811_TS_ClearIT>:
  * @retval None
  */
void stmpe811_ClearGlobalIT(uint16_t DeviceAddr, uint8_t Source)
{
  /* Write 1 to the bits that have to be cleared */
  IOE_Write(DeviceAddr, STMPE811_REG_INT_STA, Source);
 80093fc:	221f      	movs	r2, #31
 80093fe:	210b      	movs	r1, #11
 8009400:	b2c0      	uxtb	r0, r0
 8009402:	f7f7 be59 	b.w	80010b8 <IOE_Write>
 8009406:	bf00      	nop

08009408 <stmpe811_Reset>:
{
 8009408:	b510      	push	{r4, lr}
  IOE_Write(DeviceAddr, STMPE811_REG_SYS_CTRL1, 2);
 800940a:	b2c4      	uxtb	r4, r0
 800940c:	2202      	movs	r2, #2
 800940e:	2103      	movs	r1, #3
 8009410:	4620      	mov	r0, r4
 8009412:	f7f7 fe51 	bl	80010b8 <IOE_Write>
  IOE_Delay(10); 
 8009416:	200a      	movs	r0, #10
 8009418:	f7f7 fe9a 	bl	8001150 <IOE_Delay>
  IOE_Write(DeviceAddr, STMPE811_REG_SYS_CTRL1, 0);
 800941c:	4620      	mov	r0, r4
 800941e:	2200      	movs	r2, #0
 8009420:	2103      	movs	r1, #3
 8009422:	f7f7 fe49 	bl	80010b8 <IOE_Write>
}
 8009426:	e8bd 4010 	ldmia.w	sp!, {r4, lr}
  IOE_Delay(2); 
 800942a:	2002      	movs	r0, #2
 800942c:	f7f7 be90 	b.w	8001150 <IOE_Delay>

08009430 <stmpe811_ReadID>:
{
 8009430:	b510      	push	{r4, lr}
  return ((IOE_Read(DeviceAddr, STMPE811_REG_CHP_ID_LSB) << 8) |\
 8009432:	b2c4      	uxtb	r4, r0
  IOE_Init(); 
 8009434:	f7f7 fe3c 	bl	80010b0 <IOE_Init>
  return ((IOE_Read(DeviceAddr, STMPE811_REG_CHP_ID_LSB) << 8) |\
 8009438:	2100      	movs	r1, #0
 800943a:	4620      	mov	r0, r4
 800943c:	f7f7 fe54 	bl	80010e8 <IOE_Read>
          (IOE_Read(DeviceAddr, STMPE811_REG_CHP_ID_MSB)));
 8009440:	2101      	movs	r1, #1
  return ((IOE_Read(DeviceAddr, STMPE811_REG_CHP_ID_LSB) << 8) |\
 8009442:	4603      	mov	r3, r0
          (IOE_Read(DeviceAddr, STMPE811_REG_CHP_ID_MSB)));
 8009444:	4620      	mov	r0, r4
  return ((IOE_Read(DeviceAddr, STMPE811_REG_CHP_ID_LSB) << 8) |\
 8009446:	461c      	mov	r4, r3
          (IOE_Read(DeviceAddr, STMPE811_REG_CHP_ID_MSB)));
 8009448:	f7f7 fe4e 	bl	80010e8 <IOE_Read>
  return ((IOE_Read(DeviceAddr, STMPE811_REG_CHP_ID_LSB) << 8) |\
 800944c:	ea40 2004 	orr.w	r0, r0, r4, lsl #8
}
 8009450:	b280      	uxth	r0, r0
 8009452:	bd10      	pop	{r4, pc}

08009454 <stmpe811_TS_DetectTouch>:
  * @brief  Return if there is touch detected or not.
  * @param  DeviceAddr: Device address on communication Bus.
  * @retval Touch detected state.
  */
uint8_t stmpe811_TS_DetectTouch(uint16_t DeviceAddr)
{
 8009454:	b510      	push	{r4, lr}
  uint8_t state;
  uint8_t ret = 0;
  
  state = ((IOE_Read(DeviceAddr, STMPE811_REG_TSC_CTRL) & (uint8_t)STMPE811_TS_CTRL_STATUS) == (uint8_t)0x80);
 8009456:	b2c4      	uxtb	r4, r0
 8009458:	2140      	movs	r1, #64	; 0x40
 800945a:	4620      	mov	r0, r4
 800945c:	f7f7 fe44 	bl	80010e8 <IOE_Read>
  
  if(state > 0)
 8009460:	0603      	lsls	r3, r0, #24
 8009462:	d40b      	bmi.n	800947c <stmpe811_TS_DetectTouch+0x28>
    }
  }
  else
  {
    /* Reset FIFO */
    IOE_Write(DeviceAddr, STMPE811_REG_FIFO_STA, 0x01);
 8009464:	4620      	mov	r0, r4
 8009466:	2201      	movs	r2, #1
 8009468:	214b      	movs	r1, #75	; 0x4b
 800946a:	f7f7 fe25 	bl	80010b8 <IOE_Write>
    /* Enable the FIFO again */
    IOE_Write(DeviceAddr, STMPE811_REG_FIFO_STA, 0x00);
 800946e:	4620      	mov	r0, r4
 8009470:	2200      	movs	r2, #0
 8009472:	214b      	movs	r1, #75	; 0x4b
 8009474:	f7f7 fe20 	bl	80010b8 <IOE_Write>
  uint8_t ret = 0;
 8009478:	2000      	movs	r0, #0
  }
  
  return ret;
}
 800947a:	bd10      	pop	{r4, pc}
    if(IOE_Read(DeviceAddr, STMPE811_REG_FIFO_SIZE) > 0)
 800947c:	214c      	movs	r1, #76	; 0x4c
 800947e:	4620      	mov	r0, r4
 8009480:	f7f7 fe32 	bl	80010e8 <IOE_Read>
      ret = 1;
 8009484:	3800      	subs	r0, #0
 8009486:	bf18      	it	ne
 8009488:	2001      	movne	r0, #1
}
 800948a:	bd10      	pop	{r4, pc}

0800948c <stmpe811_TS_ITStatus>:
  * @brief  Configure the selected source to generate a global interrupt or not
  * @param  DeviceAddr: Device address on communication Bus.    
  * @retval TS interrupts status
  */
uint8_t stmpe811_TS_ITStatus(uint16_t DeviceAddr)
{
 800948c:	b508      	push	{r3, lr}
  return((IOE_Read(DeviceAddr, STMPE811_REG_INT_STA) & Source));
 800948e:	210b      	movs	r1, #11
 8009490:	b2c0      	uxtb	r0, r0
 8009492:	f7f7 fe29 	bl	80010e8 <IOE_Read>
  /* Return TS interrupts status */
  return(stmpe811_ReadGITStatus(DeviceAddr, STMPE811_TS_IT));
}
 8009496:	f000 001f 	and.w	r0, r0, #31
 800949a:	bd08      	pop	{r3, pc}

0800949c <stmpe811_TS_GetXY>:
{
 800949c:	b570      	push	{r4, r5, r6, lr}
  IOE_ReadMultiple(DeviceAddr, STMPE811_REG_TSC_DATA_NON_INC, dataXYZ, sizeof(dataXYZ)) ;
 800949e:	2304      	movs	r3, #4
{
 80094a0:	b082      	sub	sp, #8
  IOE_ReadMultiple(DeviceAddr, STMPE811_REG_TSC_DATA_NON_INC, dataXYZ, sizeof(dataXYZ)) ;
 80094a2:	b2c4      	uxtb	r4, r0
{
 80094a4:	4615      	mov	r5, r2
 80094a6:	460e      	mov	r6, r1
  IOE_ReadMultiple(DeviceAddr, STMPE811_REG_TSC_DATA_NON_INC, dataXYZ, sizeof(dataXYZ)) ;
 80094a8:	eb0d 0203 	add.w	r2, sp, r3
 80094ac:	21d7      	movs	r1, #215	; 0xd7
 80094ae:	4620      	mov	r0, r4
 80094b0:	f7f7 fe36 	bl	8001120 <IOE_ReadMultiple>
  uldataXYZ = (dataXYZ[0] << 24)|(dataXYZ[1] << 16)|(dataXYZ[2] << 8)|(dataXYZ[3] << 0);     
 80094b4:	9b01      	ldr	r3, [sp, #4]
 80094b6:	ba1b      	rev	r3, r3
  *X = (uldataXYZ >> 20) & 0x00000FFF;     
 80094b8:	0d1a      	lsrs	r2, r3, #20
  *Y = (uldataXYZ >>  8) & 0x00000FFF;     
 80094ba:	f3c3 230b 	ubfx	r3, r3, #8, #12
  *X = (uldataXYZ >> 20) & 0x00000FFF;     
 80094be:	8032      	strh	r2, [r6, #0]
  IOE_Write(DeviceAddr, STMPE811_REG_FIFO_STA, 0x01);
 80094c0:	4620      	mov	r0, r4
  *Y = (uldataXYZ >>  8) & 0x00000FFF;     
 80094c2:	802b      	strh	r3, [r5, #0]
  IOE_Write(DeviceAddr, STMPE811_REG_FIFO_STA, 0x01);
 80094c4:	2201      	movs	r2, #1
 80094c6:	214b      	movs	r1, #75	; 0x4b
 80094c8:	f7f7 fdf6 	bl	80010b8 <IOE_Write>
  IOE_Write(DeviceAddr, STMPE811_REG_FIFO_STA, 0x00);
 80094cc:	2200      	movs	r2, #0
 80094ce:	214b      	movs	r1, #75	; 0x4b
 80094d0:	4620      	mov	r0, r4
 80094d2:	f7f7 fdf1 	bl	80010b8 <IOE_Write>
}
 80094d6:	b002      	add	sp, #8
 80094d8:	bd70      	pop	{r4, r5, r6, pc}
 80094da:	bf00      	nop

080094dc <stmpe811_TS_Start>:
{
 80094dc:	b538      	push	{r3, r4, r5, lr}
  mode = IOE_Read(DeviceAddr, STMPE811_REG_SYS_CTRL2);
 80094de:	b2c4      	uxtb	r4, r0
 80094e0:	2104      	movs	r1, #4
 80094e2:	4620      	mov	r0, r4
 80094e4:	f7f7 fe00 	bl	80010e8 <IOE_Read>
  IOE_Write(DeviceAddr, STMPE811_REG_SYS_CTRL2, mode); 
 80094e8:	2104      	movs	r1, #4
 80094ea:	f000 02fb 	and.w	r2, r0, #251	; 0xfb
  mode = IOE_Read(DeviceAddr, STMPE811_REG_SYS_CTRL2);
 80094ee:	4605      	mov	r5, r0
  IOE_Write(DeviceAddr, STMPE811_REG_SYS_CTRL2, mode); 
 80094f0:	4620      	mov	r0, r4
 80094f2:	f7f7 fde1 	bl	80010b8 <IOE_Write>
  tmp = IOE_Read(DeviceAddr, STMPE811_REG_IO_AF);
 80094f6:	2117      	movs	r1, #23
 80094f8:	4620      	mov	r0, r4
 80094fa:	f7f7 fdf5 	bl	80010e8 <IOE_Read>
  IOE_Write(DeviceAddr, STMPE811_REG_IO_AF, tmp); 
 80094fe:	2117      	movs	r1, #23
 8009500:	f000 020f 	and.w	r2, r0, #15
 8009504:	4620      	mov	r0, r4
 8009506:	f7f7 fdd7 	bl	80010b8 <IOE_Write>
  IOE_Write(DeviceAddr, STMPE811_REG_SYS_CTRL2, mode); 
 800950a:	f005 02f8 	and.w	r2, r5, #248	; 0xf8
 800950e:	4620      	mov	r0, r4
 8009510:	2104      	movs	r1, #4
 8009512:	f7f7 fdd1 	bl	80010b8 <IOE_Write>
  IOE_Write(DeviceAddr, STMPE811_REG_ADC_CTRL1, 0x49);
 8009516:	2249      	movs	r2, #73	; 0x49
 8009518:	2120      	movs	r1, #32
 800951a:	4620      	mov	r0, r4
 800951c:	f7f7 fdcc 	bl	80010b8 <IOE_Write>
  IOE_Delay(2); 
 8009520:	2002      	movs	r0, #2
 8009522:	f7f7 fe15 	bl	8001150 <IOE_Delay>
  IOE_Write(DeviceAddr, STMPE811_REG_ADC_CTRL2, 0x01);
 8009526:	4620      	mov	r0, r4
 8009528:	2201      	movs	r2, #1
 800952a:	2121      	movs	r1, #33	; 0x21
 800952c:	f7f7 fdc4 	bl	80010b8 <IOE_Write>
  IOE_Write(DeviceAddr, STMPE811_REG_TSC_CFG, 0x9A); 
 8009530:	4620      	mov	r0, r4
 8009532:	229a      	movs	r2, #154	; 0x9a
 8009534:	2141      	movs	r1, #65	; 0x41
 8009536:	f7f7 fdbf 	bl	80010b8 <IOE_Write>
  IOE_Write(DeviceAddr, STMPE811_REG_FIFO_TH, 0x01);
 800953a:	4620      	mov	r0, r4
 800953c:	2201      	movs	r2, #1
 800953e:	214a      	movs	r1, #74	; 0x4a
 8009540:	f7f7 fdba 	bl	80010b8 <IOE_Write>
  IOE_Write(DeviceAddr, STMPE811_REG_FIFO_STA, 0x01);
 8009544:	4620      	mov	r0, r4
 8009546:	2201      	movs	r2, #1
 8009548:	214b      	movs	r1, #75	; 0x4b
 800954a:	f7f7 fdb5 	bl	80010b8 <IOE_Write>
  IOE_Write(DeviceAddr, STMPE811_REG_FIFO_STA, 0x00);
 800954e:	4620      	mov	r0, r4
 8009550:	2200      	movs	r2, #0
 8009552:	214b      	movs	r1, #75	; 0x4b
 8009554:	f7f7 fdb0 	bl	80010b8 <IOE_Write>
  IOE_Write(DeviceAddr, STMPE811_REG_TSC_FRACT_XYZ, 0x01);
 8009558:	4620      	mov	r0, r4
 800955a:	2201      	movs	r2, #1
 800955c:	2156      	movs	r1, #86	; 0x56
 800955e:	f7f7 fdab 	bl	80010b8 <IOE_Write>
  IOE_Write(DeviceAddr, STMPE811_REG_TSC_I_DRIVE, 0x01);
 8009562:	4620      	mov	r0, r4
 8009564:	2201      	movs	r2, #1
 8009566:	2158      	movs	r1, #88	; 0x58
 8009568:	f7f7 fda6 	bl	80010b8 <IOE_Write>
  IOE_Write(DeviceAddr, STMPE811_REG_TSC_CTRL, 0x01);
 800956c:	4620      	mov	r0, r4
 800956e:	2201      	movs	r2, #1
 8009570:	2140      	movs	r1, #64	; 0x40
 8009572:	f7f7 fda1 	bl	80010b8 <IOE_Write>
  IOE_Write(DeviceAddr, STMPE811_REG_INT_STA, 0xFF);
 8009576:	4620      	mov	r0, r4
 8009578:	22ff      	movs	r2, #255	; 0xff
 800957a:	210b      	movs	r1, #11
 800957c:	f7f7 fd9c 	bl	80010b8 <IOE_Write>
}
 8009580:	e8bd 4038 	ldmia.w	sp!, {r3, r4, r5, lr}
  IOE_Delay(2); 
 8009584:	2002      	movs	r0, #2
 8009586:	f7f7 bde3 	b.w	8001150 <IOE_Delay>
 800958a:	bf00      	nop

0800958c <stmpe811_TS_DisableIT>:
{
 800958c:	b510      	push	{r4, lr}
  tmp = IOE_Read(DeviceAddr, STMPE811_REG_INT_CTRL);
 800958e:	b2c4      	uxtb	r4, r0
 8009590:	2109      	movs	r1, #9
 8009592:	4620      	mov	r0, r4
 8009594:	f7f7 fda8 	bl	80010e8 <IOE_Read>
  IOE_Write(DeviceAddr, STMPE811_REG_INT_CTRL, tmp);
 8009598:	2109      	movs	r1, #9
 800959a:	f000 02fe 	and.w	r2, r0, #254	; 0xfe
 800959e:	4620      	mov	r0, r4
 80095a0:	f7f7 fd8a 	bl	80010b8 <IOE_Write>
  tmp = IOE_Read(DeviceAddr, STMPE811_REG_INT_EN);
 80095a4:	210a      	movs	r1, #10
 80095a6:	4620      	mov	r0, r4
 80095a8:	f7f7 fd9e 	bl	80010e8 <IOE_Read>
  IOE_Write(DeviceAddr, STMPE811_REG_INT_EN, tmp);   
 80095ac:	210a      	movs	r1, #10
 80095ae:	f000 02e0 	and.w	r2, r0, #224	; 0xe0
 80095b2:	4620      	mov	r0, r4
}
 80095b4:	e8bd 4010 	ldmia.w	sp!, {r4, lr}
  IOE_Write(DeviceAddr, STMPE811_REG_INT_EN, tmp);   
 80095b8:	f7f7 bd7e 	b.w	80010b8 <IOE_Write>

080095bc <stmpe811_TS_EnableIT>:
{
 80095bc:	b510      	push	{r4, lr}
  tmp = IOE_Read(DeviceAddr, STMPE811_REG_INT_EN);
 80095be:	b2c4      	uxtb	r4, r0
  IOE_ITConfig();
 80095c0:	f7f7 fd78 	bl	80010b4 <IOE_ITConfig>
  tmp = IOE_Read(DeviceAddr, STMPE811_REG_INT_EN);
 80095c4:	210a      	movs	r1, #10
 80095c6:	4620      	mov	r0, r4
 80095c8:	f7f7 fd8e 	bl	80010e8 <IOE_Read>
  tmp |= Source; 
 80095cc:	f040 001f 	orr.w	r0, r0, #31
  IOE_Write(DeviceAddr, STMPE811_REG_INT_EN, tmp);   
 80095d0:	b2c2      	uxtb	r2, r0
 80095d2:	210a      	movs	r1, #10
 80095d4:	4620      	mov	r0, r4
 80095d6:	f7f7 fd6f 	bl	80010b8 <IOE_Write>
  tmp = IOE_Read(DeviceAddr, STMPE811_REG_INT_CTRL);
 80095da:	2109      	movs	r1, #9
 80095dc:	4620      	mov	r0, r4
 80095de:	f7f7 fd83 	bl	80010e8 <IOE_Read>
  tmp |= (uint8_t)STMPE811_GIT_EN;
 80095e2:	f040 0001 	orr.w	r0, r0, #1
  IOE_Write(DeviceAddr, STMPE811_REG_INT_CTRL, tmp); 
 80095e6:	b2c2      	uxtb	r2, r0
 80095e8:	2109      	movs	r1, #9
 80095ea:	4620      	mov	r0, r4
}
 80095ec:	e8bd 4010 	ldmia.w	sp!, {r4, lr}
  IOE_Write(DeviceAddr, STMPE811_REG_INT_CTRL, tmp); 
 80095f0:	f7f7 bd62 	b.w	80010b8 <IOE_Write>

080095f4 <stmpe811_Init>:
  uint8_t idx = 0;
  
  /* Check all the registered instances */
  for(idx = 0; idx < STMPE811_MAX_INSTANCE ; idx ++)
  {
    if(stmpe811[idx] == DeviceAddr)
 80095f4:	4a10      	ldr	r2, [pc, #64]	; (8009638 <stmpe811_Init+0x44>)
 80095f6:	7813      	ldrb	r3, [r2, #0]
 80095f8:	4298      	cmp	r0, r3
 80095fa:	d004      	beq.n	8009606 <stmpe811_Init+0x12>
 80095fc:	7851      	ldrb	r1, [r2, #1]
 80095fe:	4288      	cmp	r0, r1
 8009600:	d001      	beq.n	8009606 <stmpe811_Init+0x12>
 8009602:	b113      	cbz	r3, 800960a <stmpe811_Init+0x16>
 8009604:	b101      	cbz	r1, 8009608 <stmpe811_Init+0x14>
 8009606:	4770      	bx	lr
 8009608:	2301      	movs	r3, #1
{
 800960a:	b510      	push	{r4, lr}
      stmpe811[empty] = DeviceAddr;
 800960c:	b2c4      	uxtb	r4, r0
 800960e:	54d4      	strb	r4, [r2, r3]
      IOE_Init(); 
 8009610:	f7f7 fd4e 	bl	80010b0 <IOE_Init>
  IOE_Write(DeviceAddr, STMPE811_REG_SYS_CTRL1, 2);
 8009614:	2202      	movs	r2, #2
 8009616:	2103      	movs	r1, #3
 8009618:	4620      	mov	r0, r4
 800961a:	f7f7 fd4d 	bl	80010b8 <IOE_Write>
  IOE_Delay(10); 
 800961e:	200a      	movs	r0, #10
 8009620:	f7f7 fd96 	bl	8001150 <IOE_Delay>
  IOE_Write(DeviceAddr, STMPE811_REG_SYS_CTRL1, 0);
 8009624:	4620      	mov	r0, r4
 8009626:	2200      	movs	r2, #0
 8009628:	2103      	movs	r1, #3
 800962a:	f7f7 fd45 	bl	80010b8 <IOE_Write>
}
 800962e:	e8bd 4010 	ldmia.w	sp!, {r4, lr}
  IOE_Delay(2); 
 8009632:	2002      	movs	r0, #2
 8009634:	f7f7 bd8c 	b.w	8001150 <IOE_Delay>
 8009638:	200029fc 	.word	0x200029fc

0800963c <SystemInit>:
  */
void SystemInit(void)
{
  /* FPU settings ------------------------------------------------------------*/
  #if (__FPU_PRESENT == 1) && (__FPU_USED == 1)
    SCB->CPACR |= ((3UL << 10*2)|(3UL << 11*2));  /* set CP10 and CP11 Full Access */
 800963c:	4b05      	ldr	r3, [pc, #20]	; (8009654 <SystemInit+0x18>)
 800963e:	f8d3 2088 	ldr.w	r2, [r3, #136]	; 0x88

  /* Configure the Vector Table location add offset address ------------------*/
#ifdef VECT_TAB_SRAM
  SCB->VTOR = SRAM_BASE | VECT_TAB_OFFSET; /* Vector Table Relocation in Internal SRAM */
#else
  SCB->VTOR = FLASH_BASE | VECT_TAB_OFFSET; /* Vector Table Relocation in Internal FLASH */
 8009642:	f04f 6100 	mov.w	r1, #134217728	; 0x8000000
    SCB->CPACR |= ((3UL << 10*2)|(3UL << 11*2));  /* set CP10 and CP11 Full Access */
 8009646:	f442 0270 	orr.w	r2, r2, #15728640	; 0xf00000
 800964a:	f8c3 2088 	str.w	r2, [r3, #136]	; 0x88
  SCB->VTOR = FLASH_BASE | VECT_TAB_OFFSET; /* Vector Table Relocation in Internal FLASH */
 800964e:	6099      	str	r1, [r3, #8]
#endif
}
 8009650:	4770      	bx	lr
 8009652:	bf00      	nop
 8009654:	e000ed00 	.word	0xe000ed00

08009658 <HAL_Init>:
  *         need to ensure that the SysTick time base is always set to 1 millisecond
  *         to have correct HAL operation.
  * @retval HAL status
  */
HAL_StatusTypeDef HAL_Init(void)
{
 8009658:	b508      	push	{r3, lr}
  /* Configure Flash prefetch, Instruction cache, Data cache */ 
#if (INSTRUCTION_CACHE_ENABLE != 0U)
  __HAL_FLASH_INSTRUCTION_CACHE_ENABLE();
 800965a:	4b0b      	ldr	r3, [pc, #44]	; (8009688 <HAL_Init+0x30>)
 800965c:	681a      	ldr	r2, [r3, #0]
 800965e:	f442 7200 	orr.w	r2, r2, #512	; 0x200
 8009662:	601a      	str	r2, [r3, #0]
#endif /* INSTRUCTION_CACHE_ENABLE */

#if (DATA_CACHE_ENABLE != 0U)
  __HAL_FLASH_DATA_CACHE_ENABLE();
 8009664:	681a      	ldr	r2, [r3, #0]
 8009666:	f442 6280 	orr.w	r2, r2, #1024	; 0x400
 800966a:	601a      	str	r2, [r3, #0]
#endif /* DATA_CACHE_ENABLE */

#if (PREFETCH_ENABLE != 0U)
  __HAL_FLASH_PREFETCH_BUFFER_ENABLE();
 800966c:	681a      	ldr	r2, [r3, #0]
 800966e:	f442 7280 	orr.w	r2, r2, #256	; 0x100
 8009672:	601a      	str	r2, [r3, #0]
#endif /* PREFETCH_ENABLE */

  /* Set Interrupt Group Priority */
  HAL_NVIC_SetPriorityGrouping(NVIC_PRIORITYGROUP_4);
 8009674:	2003      	movs	r0, #3
 8009676:	f000 f82d 	bl	80096d4 <HAL_NVIC_SetPriorityGrouping>

  /* Use systick as time base source and configure 1ms tick (default clock after Reset is HSI) */
  HAL_InitTick(TICK_INT_PRIORITY);
 800967a:	2000      	movs	r0, #0
 800967c:	f7f8 f9de 	bl	8001a3c <HAL_InitTick>

  /* Init the low level hardware */
  HAL_MspInit();
 8009680:	f7f7 ff5e 	bl	8001540 <HAL_MspInit>

  /* Return function status */
  return HAL_OK;
}
 8009684:	2000      	movs	r0, #0
 8009686:	bd08      	pop	{r3, pc}
 8009688:	40023c00 	.word	0x40023c00

0800968c <HAL_IncTick>:
  *      implementations in user file.
  * @retval None
  */
__weak void HAL_IncTick(void)
{
  uwTick += uwTickFreq;
 800968c:	4a03      	ldr	r2, [pc, #12]	; (800969c <HAL_IncTick+0x10>)
 800968e:	4b04      	ldr	r3, [pc, #16]	; (80096a0 <HAL_IncTick+0x14>)
 8009690:	6811      	ldr	r1, [r2, #0]
 8009692:	781b      	ldrb	r3, [r3, #0]
 8009694:	440b      	add	r3, r1
 8009696:	6013      	str	r3, [r2, #0]
}
 8009698:	4770      	bx	lr
 800969a:	bf00      	nop
 800969c:	20002a00 	.word	0x20002a00
 80096a0:	2000007c 	.word	0x2000007c

080096a4 <HAL_GetTick>:
  *       implementations in user file.
  * @retval tick value
  */
__weak uint32_t HAL_GetTick(void)
{
  return uwTick;
 80096a4:	4b01      	ldr	r3, [pc, #4]	; (80096ac <HAL_GetTick+0x8>)
 80096a6:	6818      	ldr	r0, [r3, #0]
}
 80096a8:	4770      	bx	lr
 80096aa:	bf00      	nop
 80096ac:	20002a00 	.word	0x20002a00

080096b0 <HAL_Delay>:
  *       implementations in user file.
  * @param Delay specifies the delay time length, in milliseconds.
  * @retval None
  */
__weak void HAL_Delay(uint32_t Delay)
{
 80096b0:	b538      	push	{r3, r4, r5, lr}
 80096b2:	4604      	mov	r4, r0
  uint32_t tickstart = HAL_GetTick();
 80096b4:	f7ff fff6 	bl	80096a4 <HAL_GetTick>
  uint32_t wait = Delay;

  /* Add a freq to guarantee minimum wait */
  if (wait < HAL_MAX_DELAY)
 80096b8:	1c63      	adds	r3, r4, #1
  uint32_t tickstart = HAL_GetTick();
 80096ba:	4605      	mov	r5, r0
  if (wait < HAL_MAX_DELAY)
 80096bc:	d002      	beq.n	80096c4 <HAL_Delay+0x14>
  {
    wait += (uint32_t)(uwTickFreq);
 80096be:	4b04      	ldr	r3, [pc, #16]	; (80096d0 <HAL_Delay+0x20>)
 80096c0:	781b      	ldrb	r3, [r3, #0]
 80096c2:	441c      	add	r4, r3
  }

  while((HAL_GetTick() - tickstart) < wait)
 80096c4:	f7ff ffee 	bl	80096a4 <HAL_GetTick>
 80096c8:	1b43      	subs	r3, r0, r5
 80096ca:	42a3      	cmp	r3, r4
 80096cc:	d3fa      	bcc.n	80096c4 <HAL_Delay+0x14>
  {
  }
}
 80096ce:	bd38      	pop	{r3, r4, r5, pc}
 80096d0:	2000007c 	.word	0x2000007c

080096d4 <HAL_NVIC_SetPriorityGrouping>:
  reg_value  =  SCB->AIRCR;                                                   /* read old register configuration    */
 80096d4:	4907      	ldr	r1, [pc, #28]	; (80096f4 <HAL_NVIC_SetPriorityGrouping+0x20>)
 80096d6:	68ca      	ldr	r2, [r1, #12]
                (PriorityGroupTmp << SCB_AIRCR_PRIGROUP_Pos)  );              /* Insert write key and priority group */
 80096d8:	0203      	lsls	r3, r0, #8
  reg_value &= ~((uint32_t)(SCB_AIRCR_VECTKEY_Msk | SCB_AIRCR_PRIGROUP_Msk)); /* clear bits to change               */
 80096da:	f64f 00ff 	movw	r0, #63743	; 0xf8ff
                (PriorityGroupTmp << SCB_AIRCR_PRIGROUP_Pos)  );              /* Insert write key and priority group */
 80096de:	f403 63e0 	and.w	r3, r3, #1792	; 0x700
  reg_value &= ~((uint32_t)(SCB_AIRCR_VECTKEY_Msk | SCB_AIRCR_PRIGROUP_Msk)); /* clear bits to change               */
 80096e2:	4002      	ands	r2, r0
                ((uint32_t)0x5FAUL << SCB_AIRCR_VECTKEY_Pos) |
 80096e4:	4313      	orrs	r3, r2
  reg_value  =  (reg_value                                   |
 80096e6:	f043 63bf 	orr.w	r3, r3, #100139008	; 0x5f80000
 80096ea:	f443 3300 	orr.w	r3, r3, #131072	; 0x20000
  SCB->AIRCR =  reg_value;
 80096ee:	60cb      	str	r3, [r1, #12]
  /* Check the parameters */
  assert_param(IS_NVIC_PRIORITY_GROUP(PriorityGroup));
  
  /* Set the PRIGROUP[10:8] bits according to the PriorityGroup parameter value */
  NVIC_SetPriorityGrouping(PriorityGroup);
}
 80096f0:	4770      	bx	lr
 80096f2:	bf00      	nop
 80096f4:	e000ed00 	.word	0xe000ed00

080096f8 <HAL_NVIC_SetPriority>:
  return ((uint32_t)((SCB->AIRCR & SCB_AIRCR_PRIGROUP_Msk) >> SCB_AIRCR_PRIGROUP_Pos));
 80096f8:	4b1c      	ldr	r3, [pc, #112]	; (800976c <HAL_NVIC_SetPriority+0x74>)
 80096fa:	68db      	ldr	r3, [r3, #12]
 80096fc:	f3c3 2302 	ubfx	r3, r3, #8, #3
  *         This parameter can be a value between 0 and 15
  *         A lower priority value indicates a higher priority.          
  * @retval None
  */
void HAL_NVIC_SetPriority(IRQn_Type IRQn, uint32_t PreemptPriority, uint32_t SubPriority)
{ 
 8009700:	b500      	push	{lr}
{
  uint32_t PriorityGroupTmp = (PriorityGroup & (uint32_t)0x07UL);   /* only values 0..7 are used          */
  uint32_t PreemptPriorityBits;
  uint32_t SubPriorityBits;

  PreemptPriorityBits = ((7UL - PriorityGroupTmp) > (uint32_t)(__NVIC_PRIO_BITS)) ? (uint32_t)(__NVIC_PRIO_BITS) : (uint32_t)(7UL - PriorityGroupTmp);
 8009702:	f1c3 0e07 	rsb	lr, r3, #7
 8009706:	f1be 0f04 	cmp.w	lr, #4
  SubPriorityBits     = ((PriorityGroupTmp + (uint32_t)(__NVIC_PRIO_BITS)) < (uint32_t)7UL) ? (uint32_t)0UL : (uint32_t)((PriorityGroupTmp - 7UL) + (uint32_t)(__NVIC_PRIO_BITS));
 800970a:	f103 0c04 	add.w	ip, r3, #4
  PreemptPriorityBits = ((7UL - PriorityGroupTmp) > (uint32_t)(__NVIC_PRIO_BITS)) ? (uint32_t)(__NVIC_PRIO_BITS) : (uint32_t)(7UL - PriorityGroupTmp);
 800970e:	bf28      	it	cs
 8009710:	f04f 0e04 	movcs.w	lr, #4
  SubPriorityBits     = ((PriorityGroupTmp + (uint32_t)(__NVIC_PRIO_BITS)) < (uint32_t)7UL) ? (uint32_t)0UL : (uint32_t)((PriorityGroupTmp - 7UL) + (uint32_t)(__NVIC_PRIO_BITS));
 8009714:	f1bc 0f06 	cmp.w	ip, #6
 8009718:	d91b      	bls.n	8009752 <HAL_NVIC_SetPriority+0x5a>
 800971a:	3b03      	subs	r3, #3

  return (
           ((PreemptPriority & (uint32_t)((1UL << (PreemptPriorityBits)) - 1UL)) << SubPriorityBits) |
           ((SubPriority     & (uint32_t)((1UL << (SubPriorityBits    )) - 1UL)))
 800971c:	f04f 3cff 	mov.w	ip, #4294967295
 8009720:	fa0c fc03 	lsl.w	ip, ip, r3
 8009724:	ea22 020c 	bic.w	r2, r2, ip
           ((PreemptPriority & (uint32_t)((1UL << (PreemptPriorityBits)) - 1UL)) << SubPriorityBits) |
 8009728:	f04f 3cff 	mov.w	ip, #4294967295
 800972c:	fa0c fc0e 	lsl.w	ip, ip, lr
 8009730:	ea21 010c 	bic.w	r1, r1, ip
 8009734:	4099      	lsls	r1, r3
  if ((int32_t)(IRQn) >= 0)
 8009736:	2800      	cmp	r0, #0
           ((PreemptPriority & (uint32_t)((1UL << (PreemptPriorityBits)) - 1UL)) << SubPriorityBits) |
 8009738:	ea41 0102 	orr.w	r1, r1, r2
  if ((int32_t)(IRQn) >= 0)
 800973c:	db0c      	blt.n	8009758 <HAL_NVIC_SetPriority+0x60>
    NVIC->IP[((uint32_t)IRQn)]               = (uint8_t)((priority << (8U - __NVIC_PRIO_BITS)) & (uint32_t)0xFFUL);
 800973e:	f100 4060 	add.w	r0, r0, #3758096384	; 0xe0000000
 8009742:	0109      	lsls	r1, r1, #4
 8009744:	f500 4061 	add.w	r0, r0, #57600	; 0xe100
 8009748:	b2c9      	uxtb	r1, r1
 800974a:	f880 1300 	strb.w	r1, [r0, #768]	; 0x300
  assert_param(IS_NVIC_PREEMPTION_PRIORITY(PreemptPriority));
  
  prioritygroup = NVIC_GetPriorityGrouping();
  
  NVIC_SetPriority(IRQn, NVIC_EncodePriority(prioritygroup, PreemptPriority, SubPriority));
}
 800974e:	f85d fb04 	ldr.w	pc, [sp], #4
 8009752:	2200      	movs	r2, #0
  SubPriorityBits     = ((PriorityGroupTmp + (uint32_t)(__NVIC_PRIO_BITS)) < (uint32_t)7UL) ? (uint32_t)0UL : (uint32_t)((PriorityGroupTmp - 7UL) + (uint32_t)(__NVIC_PRIO_BITS));
 8009754:	4613      	mov	r3, r2
 8009756:	e7e7      	b.n	8009728 <HAL_NVIC_SetPriority+0x30>
    SCB->SHP[(((uint32_t)IRQn) & 0xFUL)-4UL] = (uint8_t)((priority << (8U - __NVIC_PRIO_BITS)) & (uint32_t)0xFFUL);
 8009758:	4b05      	ldr	r3, [pc, #20]	; (8009770 <HAL_NVIC_SetPriority+0x78>)
 800975a:	f000 000f 	and.w	r0, r0, #15
 800975e:	0109      	lsls	r1, r1, #4
 8009760:	4403      	add	r3, r0
 8009762:	b2c9      	uxtb	r1, r1
 8009764:	7619      	strb	r1, [r3, #24]
 8009766:	f85d fb04 	ldr.w	pc, [sp], #4
 800976a:	bf00      	nop
 800976c:	e000ed00 	.word	0xe000ed00
 8009770:	e000ecfc 	.word	0xe000ecfc

08009774 <HAL_NVIC_EnableIRQ>:
  if ((int32_t)(IRQn) >= 0)
 8009774:	2800      	cmp	r0, #0
 8009776:	db07      	blt.n	8009788 <HAL_NVIC_EnableIRQ+0x14>
    NVIC->ISER[(((uint32_t)IRQn) >> 5UL)] = (uint32_t)(1UL << (((uint32_t)IRQn) & 0x1FUL));
 8009778:	0941      	lsrs	r1, r0, #5
 800977a:	4a04      	ldr	r2, [pc, #16]	; (800978c <HAL_NVIC_EnableIRQ+0x18>)
 800977c:	f000 001f 	and.w	r0, r0, #31
 8009780:	2301      	movs	r3, #1
 8009782:	4083      	lsls	r3, r0
 8009784:	f842 3021 	str.w	r3, [r2, r1, lsl #2]
  /* Check the parameters */
  assert_param(IS_NVIC_DEVICE_IRQ(IRQn));
  
  /* Enable interrupt */
  NVIC_EnableIRQ(IRQn);
}
 8009788:	4770      	bx	lr
 800978a:	bf00      	nop
 800978c:	e000e100 	.word	0xe000e100

08009790 <HAL_CRC_Init>:
  * @retval HAL status
  */
HAL_StatusTypeDef HAL_CRC_Init(CRC_HandleTypeDef *hcrc)
{
  /* Check the CRC handle allocation */
  if (hcrc == NULL)
 8009790:	b180      	cbz	r0, 80097b4 <HAL_CRC_Init+0x24>
{
 8009792:	b510      	push	{r4, lr}
  }

  /* Check the parameters */
  assert_param(IS_CRC_ALL_INSTANCE(hcrc->Instance));

  if (hcrc->State == HAL_CRC_STATE_RESET)
 8009794:	7943      	ldrb	r3, [r0, #5]
 8009796:	4604      	mov	r4, r0
 8009798:	f003 02ff 	and.w	r2, r3, #255	; 0xff
 800979c:	b11b      	cbz	r3, 80097a6 <HAL_CRC_Init+0x16>
    /* Init the low level hardware */
    HAL_CRC_MspInit(hcrc);
  }

  /* Change CRC peripheral state */
  hcrc->State = HAL_CRC_STATE_READY;
 800979e:	2301      	movs	r3, #1
 80097a0:	7163      	strb	r3, [r4, #5]

  /* Return function status */
  return HAL_OK;
 80097a2:	2000      	movs	r0, #0
}
 80097a4:	bd10      	pop	{r4, pc}
    hcrc->Lock = HAL_UNLOCKED;
 80097a6:	7102      	strb	r2, [r0, #4]
    HAL_CRC_MspInit(hcrc);
 80097a8:	f7f7 feea 	bl	8001580 <HAL_CRC_MspInit>
  hcrc->State = HAL_CRC_STATE_READY;
 80097ac:	2301      	movs	r3, #1
 80097ae:	7163      	strb	r3, [r4, #5]
  return HAL_OK;
 80097b0:	2000      	movs	r0, #0
}
 80097b2:	bd10      	pop	{r4, pc}
    return HAL_ERROR;
 80097b4:	2001      	movs	r0, #1
}
 80097b6:	4770      	bx	lr

080097b8 <HAL_DMA_Abort_IT>:
  *                 the configuration information for the specified DMA Stream.
  * @retval HAL status
  */
HAL_StatusTypeDef HAL_DMA_Abort_IT(DMA_HandleTypeDef *hdma)
{
  if(hdma->State != HAL_DMA_STATE_BUSY)
 80097b8:	f890 3035 	ldrb.w	r3, [r0, #53]	; 0x35
 80097bc:	2b02      	cmp	r3, #2
 80097be:	d003      	beq.n	80097c8 <HAL_DMA_Abort_IT+0x10>
  {
    hdma->ErrorCode = HAL_DMA_ERROR_NO_XFER;
 80097c0:	2380      	movs	r3, #128	; 0x80
 80097c2:	6543      	str	r3, [r0, #84]	; 0x54
    return HAL_ERROR;
 80097c4:	2001      	movs	r0, #1
 80097c6:	4770      	bx	lr
  {
    /* Set Abort State  */
    hdma->State = HAL_DMA_STATE_ABORT;
    
    /* Disable the stream */
    __HAL_DMA_DISABLE(hdma);
 80097c8:	6802      	ldr	r2, [r0, #0]
    hdma->State = HAL_DMA_STATE_ABORT;
 80097ca:	2305      	movs	r3, #5
 80097cc:	f880 3035 	strb.w	r3, [r0, #53]	; 0x35
    __HAL_DMA_DISABLE(hdma);
 80097d0:	6813      	ldr	r3, [r2, #0]
 80097d2:	f023 0301 	bic.w	r3, r3, #1
  }

  return HAL_OK;
 80097d6:	2000      	movs	r0, #0
    __HAL_DMA_DISABLE(hdma);
 80097d8:	6013      	str	r3, [r2, #0]
}
 80097da:	4770      	bx	lr

080097dc <HAL_DMA_GetState>:
  *               the configuration information for the specified DMA Stream.
  * @retval HAL state
  */
HAL_DMA_StateTypeDef HAL_DMA_GetState(DMA_HandleTypeDef *hdma)
{
  return hdma->State;
 80097dc:	f890 0035 	ldrb.w	r0, [r0, #53]	; 0x35
}
 80097e0:	4770      	bx	lr
 80097e2:	bf00      	nop

080097e4 <FLASH_SetErrorCode>:
  * @brief  Set the specific FLASH error flag.
  * @retval None
  */
static void FLASH_SetErrorCode(void)
{ 
  if(__HAL_FLASH_GET_FLAG(FLASH_FLAG_WRPERR) != RESET)
 80097e4:	4b21      	ldr	r3, [pc, #132]	; (800986c <FLASH_SetErrorCode+0x88>)
 80097e6:	68da      	ldr	r2, [r3, #12]
 80097e8:	06d0      	lsls	r0, r2, #27
 80097ea:	d505      	bpl.n	80097f8 <FLASH_SetErrorCode+0x14>
  {
   pFlash.ErrorCode |= HAL_FLASH_ERROR_WRP;
 80097ec:	4920      	ldr	r1, [pc, #128]	; (8009870 <FLASH_SetErrorCode+0x8c>)
 80097ee:	69ca      	ldr	r2, [r1, #28]
   
   /* Clear FLASH write protection error pending bit */
   __HAL_FLASH_CLEAR_FLAG(FLASH_FLAG_WRPERR);
 80097f0:	2010      	movs	r0, #16
   pFlash.ErrorCode |= HAL_FLASH_ERROR_WRP;
 80097f2:	4302      	orrs	r2, r0
 80097f4:	61ca      	str	r2, [r1, #28]
   __HAL_FLASH_CLEAR_FLAG(FLASH_FLAG_WRPERR);
 80097f6:	60d8      	str	r0, [r3, #12]
  }
  
  if(__HAL_FLASH_GET_FLAG(FLASH_FLAG_PGAERR) != RESET)
 80097f8:	4b1c      	ldr	r3, [pc, #112]	; (800986c <FLASH_SetErrorCode+0x88>)
 80097fa:	68da      	ldr	r2, [r3, #12]
 80097fc:	0691      	lsls	r1, r2, #26
 80097fe:	d506      	bpl.n	800980e <FLASH_SetErrorCode+0x2a>
  {
   pFlash.ErrorCode |= HAL_FLASH_ERROR_PGA;
 8009800:	491b      	ldr	r1, [pc, #108]	; (8009870 <FLASH_SetErrorCode+0x8c>)
 8009802:	69ca      	ldr	r2, [r1, #28]
   
   /* Clear FLASH Programming alignment error pending bit */
   __HAL_FLASH_CLEAR_FLAG(FLASH_FLAG_PGAERR);
 8009804:	2020      	movs	r0, #32
   pFlash.ErrorCode |= HAL_FLASH_ERROR_PGA;
 8009806:	f042 0208 	orr.w	r2, r2, #8
 800980a:	61ca      	str	r2, [r1, #28]
   __HAL_FLASH_CLEAR_FLAG(FLASH_FLAG_PGAERR);
 800980c:	60d8      	str	r0, [r3, #12]
  }
  
  if(__HAL_FLASH_GET_FLAG(FLASH_FLAG_PGPERR) != RESET)
 800980e:	4b17      	ldr	r3, [pc, #92]	; (800986c <FLASH_SetErrorCode+0x88>)
 8009810:	68da      	ldr	r2, [r3, #12]
 8009812:	0652      	lsls	r2, r2, #25
 8009814:	d506      	bpl.n	8009824 <FLASH_SetErrorCode+0x40>
  {
    pFlash.ErrorCode |= HAL_FLASH_ERROR_PGP;
 8009816:	4916      	ldr	r1, [pc, #88]	; (8009870 <FLASH_SetErrorCode+0x8c>)
 8009818:	69ca      	ldr	r2, [r1, #28]
    
    /* Clear FLASH Programming parallelism error pending bit */
    __HAL_FLASH_CLEAR_FLAG(FLASH_FLAG_PGPERR);
 800981a:	2040      	movs	r0, #64	; 0x40
    pFlash.ErrorCode |= HAL_FLASH_ERROR_PGP;
 800981c:	f042 0204 	orr.w	r2, r2, #4
 8009820:	61ca      	str	r2, [r1, #28]
    __HAL_FLASH_CLEAR_FLAG(FLASH_FLAG_PGPERR);
 8009822:	60d8      	str	r0, [r3, #12]
  }
  
  if(__HAL_FLASH_GET_FLAG(FLASH_FLAG_PGSERR) != RESET)
 8009824:	4b11      	ldr	r3, [pc, #68]	; (800986c <FLASH_SetErrorCode+0x88>)
 8009826:	68da      	ldr	r2, [r3, #12]
 8009828:	0610      	lsls	r0, r2, #24
 800982a:	d506      	bpl.n	800983a <FLASH_SetErrorCode+0x56>
  {
    pFlash.ErrorCode |= HAL_FLASH_ERROR_PGS;
 800982c:	4910      	ldr	r1, [pc, #64]	; (8009870 <FLASH_SetErrorCode+0x8c>)
 800982e:	69ca      	ldr	r2, [r1, #28]
    
    /* Clear FLASH Programming sequence error pending bit */
    __HAL_FLASH_CLEAR_FLAG(FLASH_FLAG_PGSERR);
 8009830:	2080      	movs	r0, #128	; 0x80
    pFlash.ErrorCode |= HAL_FLASH_ERROR_PGS;
 8009832:	f042 0202 	orr.w	r2, r2, #2
 8009836:	61ca      	str	r2, [r1, #28]
    __HAL_FLASH_CLEAR_FLAG(FLASH_FLAG_PGSERR);
 8009838:	60d8      	str	r0, [r3, #12]
  }
#if defined(FLASH_SR_RDERR) 
  if(__HAL_FLASH_GET_FLAG(FLASH_FLAG_RDERR) != RESET)
 800983a:	4b0c      	ldr	r3, [pc, #48]	; (800986c <FLASH_SetErrorCode+0x88>)
 800983c:	68da      	ldr	r2, [r3, #12]
 800983e:	05d1      	lsls	r1, r2, #23
 8009840:	d507      	bpl.n	8009852 <FLASH_SetErrorCode+0x6e>
  {
    pFlash.ErrorCode |= HAL_FLASH_ERROR_RD;
 8009842:	490b      	ldr	r1, [pc, #44]	; (8009870 <FLASH_SetErrorCode+0x8c>)
 8009844:	69ca      	ldr	r2, [r1, #28]
    
    /* Clear FLASH Proprietary readout protection error pending bit */
    __HAL_FLASH_CLEAR_FLAG(FLASH_FLAG_RDERR);
 8009846:	f44f 7080 	mov.w	r0, #256	; 0x100
    pFlash.ErrorCode |= HAL_FLASH_ERROR_RD;
 800984a:	f042 0201 	orr.w	r2, r2, #1
 800984e:	61ca      	str	r2, [r1, #28]
    __HAL_FLASH_CLEAR_FLAG(FLASH_FLAG_RDERR);
 8009850:	60d8      	str	r0, [r3, #12]
  }
#endif /* FLASH_SR_RDERR */  
  if(__HAL_FLASH_GET_FLAG(FLASH_FLAG_OPERR) != RESET)
 8009852:	4b06      	ldr	r3, [pc, #24]	; (800986c <FLASH_SetErrorCode+0x88>)
 8009854:	68da      	ldr	r2, [r3, #12]
 8009856:	0792      	lsls	r2, r2, #30
 8009858:	d506      	bpl.n	8009868 <FLASH_SetErrorCode+0x84>
  {
    pFlash.ErrorCode |= HAL_FLASH_ERROR_OPERATION;
 800985a:	4905      	ldr	r1, [pc, #20]	; (8009870 <FLASH_SetErrorCode+0x8c>)
 800985c:	69ca      	ldr	r2, [r1, #28]
    
    /* Clear FLASH Operation error pending bit */
    __HAL_FLASH_CLEAR_FLAG(FLASH_FLAG_OPERR);
 800985e:	2002      	movs	r0, #2
    pFlash.ErrorCode |= HAL_FLASH_ERROR_OPERATION;
 8009860:	f042 0220 	orr.w	r2, r2, #32
 8009864:	61ca      	str	r2, [r1, #28]
    __HAL_FLASH_CLEAR_FLAG(FLASH_FLAG_OPERR);
 8009866:	60d8      	str	r0, [r3, #12]
  }
}
 8009868:	4770      	bx	lr
 800986a:	bf00      	nop
 800986c:	40023c00 	.word	0x40023c00
 8009870:	20002a04 	.word	0x20002a04

08009874 <HAL_FLASH_Program>:
{
 8009874:	e92d 4ff8 	stmdb	sp!, {r3, r4, r5, r6, r7, r8, r9, sl, fp, lr}
  __HAL_LOCK(&pFlash);
 8009878:	4f4d      	ldr	r7, [pc, #308]	; (80099b0 <HAL_FLASH_Program+0x13c>)
{
 800987a:	469b      	mov	fp, r3
  __HAL_LOCK(&pFlash);
 800987c:	7e3b      	ldrb	r3, [r7, #24]
 800987e:	2b01      	cmp	r3, #1
 8009880:	d060      	beq.n	8009944 <HAL_FLASH_Program+0xd0>
 8009882:	2301      	movs	r3, #1
 8009884:	763b      	strb	r3, [r7, #24]
  pFlash.ErrorCode = HAL_FLASH_ERROR_NONE;
 8009886:	2300      	movs	r3, #0
 8009888:	4681      	mov	r9, r0
 800988a:	468a      	mov	sl, r1
 800988c:	4690      	mov	r8, r2
 800988e:	61fb      	str	r3, [r7, #28]
  tickstart = HAL_GetTick();
 8009890:	f7ff ff08 	bl	80096a4 <HAL_GetTick>
  while(__HAL_FLASH_GET_FLAG(FLASH_FLAG_BSY) != RESET) 
 8009894:	4d47      	ldr	r5, [pc, #284]	; (80099b4 <HAL_FLASH_Program+0x140>)
  tickstart = HAL_GetTick();
 8009896:	4604      	mov	r4, r0
      if((Timeout == 0U)||((HAL_GetTick() - tickstart ) > Timeout))
 8009898:	f24c 3650 	movw	r6, #50000	; 0xc350
  while(__HAL_FLASH_GET_FLAG(FLASH_FLAG_BSY) != RESET) 
 800989c:	e004      	b.n	80098a8 <HAL_FLASH_Program+0x34>
      if((Timeout == 0U)||((HAL_GetTick() - tickstart ) > Timeout))
 800989e:	f7ff ff01 	bl	80096a4 <HAL_GetTick>
 80098a2:	1b00      	subs	r0, r0, r4
 80098a4:	42b0      	cmp	r0, r6
 80098a6:	d848      	bhi.n	800993a <HAL_FLASH_Program+0xc6>
  while(__HAL_FLASH_GET_FLAG(FLASH_FLAG_BSY) != RESET) 
 80098a8:	68eb      	ldr	r3, [r5, #12]
 80098aa:	03d8      	lsls	r0, r3, #15
 80098ac:	d4f7      	bmi.n	800989e <HAL_FLASH_Program+0x2a>
  if (__HAL_FLASH_GET_FLAG(FLASH_FLAG_EOP) != RESET)
 80098ae:	68eb      	ldr	r3, [r5, #12]
 80098b0:	07d9      	lsls	r1, r3, #31
    __HAL_FLASH_CLEAR_FLAG(FLASH_FLAG_EOP);
 80098b2:	bf44      	itt	mi
 80098b4:	2301      	movmi	r3, #1
 80098b6:	60eb      	strmi	r3, [r5, #12]
  if(__HAL_FLASH_GET_FLAG((FLASH_FLAG_OPERR | FLASH_FLAG_WRPERR | FLASH_FLAG_PGAERR | \
 80098b8:	4b3e      	ldr	r3, [pc, #248]	; (80099b4 <HAL_FLASH_Program+0x140>)
 80098ba:	68da      	ldr	r2, [r3, #12]
 80098bc:	f412 7ff9 	tst.w	r2, #498	; 0x1f2
 80098c0:	d154      	bne.n	800996c <HAL_FLASH_Program+0xf8>
    if(TypeProgram == FLASH_TYPEPROGRAM_BYTE)
 80098c2:	f1b9 0f00 	cmp.w	r9, #0
 80098c6:	d040      	beq.n	800994a <HAL_FLASH_Program+0xd6>
    else if(TypeProgram == FLASH_TYPEPROGRAM_HALFWORD)
 80098c8:	f1b9 0f01 	cmp.w	r9, #1
  CLEAR_BIT(FLASH->CR, FLASH_CR_PSIZE);
 80098cc:	691a      	ldr	r2, [r3, #16]
    else if(TypeProgram == FLASH_TYPEPROGRAM_HALFWORD)
 80098ce:	d051      	beq.n	8009974 <HAL_FLASH_Program+0x100>
  CLEAR_BIT(FLASH->CR, FLASH_CR_PSIZE);
 80098d0:	f422 7240 	bic.w	r2, r2, #768	; 0x300
 80098d4:	611a      	str	r2, [r3, #16]
    else if(TypeProgram == FLASH_TYPEPROGRAM_WORD)
 80098d6:	f1b9 0f02 	cmp.w	r9, #2
  FLASH->CR |= FLASH_PSIZE_WORD;
 80098da:	691a      	ldr	r2, [r3, #16]
    else if(TypeProgram == FLASH_TYPEPROGRAM_WORD)
 80098dc:	d05e      	beq.n	800999c <HAL_FLASH_Program+0x128>
  FLASH->CR |= FLASH_PSIZE_DOUBLE_WORD;
 80098de:	f442 7240 	orr.w	r2, r2, #768	; 0x300
 80098e2:	611a      	str	r2, [r3, #16]
  FLASH->CR |= FLASH_CR_PG;
 80098e4:	691a      	ldr	r2, [r3, #16]
 80098e6:	f042 0201 	orr.w	r2, r2, #1
 80098ea:	611a      	str	r2, [r3, #16]
  *(__IO uint32_t*)Address = (uint32_t)Data;
 80098ec:	f8ca 8000 	str.w	r8, [sl]
 80098f0:	f3bf 8f6f 	isb	sy
  *(__IO uint32_t*)(Address+4) = (uint32_t)(Data >> 32);
 80098f4:	f8ca b004 	str.w	fp, [sl, #4]
  pFlash.ErrorCode = HAL_FLASH_ERROR_NONE;
 80098f8:	2300      	movs	r3, #0
 80098fa:	61fb      	str	r3, [r7, #28]
  tickstart = HAL_GetTick();
 80098fc:	f7ff fed2 	bl	80096a4 <HAL_GetTick>
  while(__HAL_FLASH_GET_FLAG(FLASH_FLAG_BSY) != RESET) 
 8009900:	4d2c      	ldr	r5, [pc, #176]	; (80099b4 <HAL_FLASH_Program+0x140>)
  tickstart = HAL_GetTick();
 8009902:	4604      	mov	r4, r0
      if((Timeout == 0U)||((HAL_GetTick() - tickstart ) > Timeout))
 8009904:	f24c 3650 	movw	r6, #50000	; 0xc350
  while(__HAL_FLASH_GET_FLAG(FLASH_FLAG_BSY) != RESET) 
 8009908:	e004      	b.n	8009914 <HAL_FLASH_Program+0xa0>
      if((Timeout == 0U)||((HAL_GetTick() - tickstart ) > Timeout))
 800990a:	f7ff fecb 	bl	80096a4 <HAL_GetTick>
 800990e:	1b00      	subs	r0, r0, r4
 8009910:	42b0      	cmp	r0, r6
 8009912:	d829      	bhi.n	8009968 <HAL_FLASH_Program+0xf4>
  while(__HAL_FLASH_GET_FLAG(FLASH_FLAG_BSY) != RESET) 
 8009914:	68eb      	ldr	r3, [r5, #12]
 8009916:	03da      	lsls	r2, r3, #15
 8009918:	d4f7      	bmi.n	800990a <HAL_FLASH_Program+0x96>
  if (__HAL_FLASH_GET_FLAG(FLASH_FLAG_EOP) != RESET)
 800991a:	68eb      	ldr	r3, [r5, #12]
 800991c:	07db      	lsls	r3, r3, #31
    __HAL_FLASH_CLEAR_FLAG(FLASH_FLAG_EOP);
 800991e:	bf44      	itt	mi
 8009920:	2301      	movmi	r3, #1
 8009922:	60eb      	strmi	r3, [r5, #12]
  if(__HAL_FLASH_GET_FLAG((FLASH_FLAG_OPERR | FLASH_FLAG_WRPERR | FLASH_FLAG_PGAERR | \
 8009924:	4b23      	ldr	r3, [pc, #140]	; (80099b4 <HAL_FLASH_Program+0x140>)
 8009926:	68d8      	ldr	r0, [r3, #12]
 8009928:	f410 70f9 	ands.w	r0, r0, #498	; 0x1f2
 800992c:	d132      	bne.n	8009994 <HAL_FLASH_Program+0x120>
    FLASH->CR &= (~FLASH_CR_PG);  
 800992e:	4a21      	ldr	r2, [pc, #132]	; (80099b4 <HAL_FLASH_Program+0x140>)
 8009930:	6913      	ldr	r3, [r2, #16]
 8009932:	f023 0301 	bic.w	r3, r3, #1
 8009936:	6113      	str	r3, [r2, #16]
 8009938:	e000      	b.n	800993c <HAL_FLASH_Program+0xc8>
 800993a:	2003      	movs	r0, #3
  __HAL_UNLOCK(&pFlash);
 800993c:	2300      	movs	r3, #0
 800993e:	763b      	strb	r3, [r7, #24]
}
 8009940:	e8bd 8ff8 	ldmia.w	sp!, {r3, r4, r5, r6, r7, r8, r9, sl, fp, pc}
  __HAL_LOCK(&pFlash);
 8009944:	2002      	movs	r0, #2
}
 8009946:	e8bd 8ff8 	ldmia.w	sp!, {r3, r4, r5, r6, r7, r8, r9, sl, fp, pc}
  CLEAR_BIT(FLASH->CR, FLASH_CR_PSIZE);
 800994a:	691a      	ldr	r2, [r3, #16]
 800994c:	f422 7240 	bic.w	r2, r2, #768	; 0x300
 8009950:	611a      	str	r2, [r3, #16]
  FLASH->CR |= FLASH_PSIZE_BYTE;
 8009952:	691a      	ldr	r2, [r3, #16]
 8009954:	611a      	str	r2, [r3, #16]
  FLASH->CR |= FLASH_CR_PG;
 8009956:	691a      	ldr	r2, [r3, #16]
      FLASH_Program_Byte(Address, (uint8_t) Data);
 8009958:	fa5f f888 	uxtb.w	r8, r8
  FLASH->CR |= FLASH_CR_PG;
 800995c:	f042 0201 	orr.w	r2, r2, #1
 8009960:	611a      	str	r2, [r3, #16]
  *(__IO uint8_t*)Address = Data;
 8009962:	f88a 8000 	strb.w	r8, [sl]
}
 8009966:	e7c7      	b.n	80098f8 <HAL_FLASH_Program+0x84>
        return HAL_TIMEOUT;
 8009968:	2003      	movs	r0, #3
 800996a:	e7e0      	b.n	800992e <HAL_FLASH_Program+0xba>
    FLASH_SetErrorCode();
 800996c:	f7ff ff3a 	bl	80097e4 <FLASH_SetErrorCode>
    return HAL_ERROR;
 8009970:	2001      	movs	r0, #1
 8009972:	e7e3      	b.n	800993c <HAL_FLASH_Program+0xc8>
  CLEAR_BIT(FLASH->CR, FLASH_CR_PSIZE);
 8009974:	f422 7240 	bic.w	r2, r2, #768	; 0x300
 8009978:	611a      	str	r2, [r3, #16]
  FLASH->CR |= FLASH_PSIZE_HALF_WORD;
 800997a:	691a      	ldr	r2, [r3, #16]
 800997c:	f442 7280 	orr.w	r2, r2, #256	; 0x100
 8009980:	611a      	str	r2, [r3, #16]
  FLASH->CR |= FLASH_CR_PG;
 8009982:	691a      	ldr	r2, [r3, #16]
      FLASH_Program_HalfWord(Address, (uint16_t) Data);
 8009984:	fa1f f888 	uxth.w	r8, r8
  FLASH->CR |= FLASH_CR_PG;
 8009988:	f042 0201 	orr.w	r2, r2, #1
 800998c:	611a      	str	r2, [r3, #16]
  *(__IO uint16_t*)Address = Data;
 800998e:	f8aa 8000 	strh.w	r8, [sl]
}
 8009992:	e7b1      	b.n	80098f8 <HAL_FLASH_Program+0x84>
    FLASH_SetErrorCode();
 8009994:	f7ff ff26 	bl	80097e4 <FLASH_SetErrorCode>
    return HAL_ERROR;
 8009998:	2001      	movs	r0, #1
 800999a:	e7c8      	b.n	800992e <HAL_FLASH_Program+0xba>
  FLASH->CR |= FLASH_PSIZE_WORD;
 800999c:	f442 7200 	orr.w	r2, r2, #512	; 0x200
 80099a0:	611a      	str	r2, [r3, #16]
  FLASH->CR |= FLASH_CR_PG;
 80099a2:	691a      	ldr	r2, [r3, #16]
 80099a4:	f042 0201 	orr.w	r2, r2, #1
 80099a8:	611a      	str	r2, [r3, #16]
  *(__IO uint32_t*)Address = Data;
 80099aa:	f8ca 8000 	str.w	r8, [sl]
}
 80099ae:	e7a3      	b.n	80098f8 <HAL_FLASH_Program+0x84>
 80099b0:	20002a04 	.word	0x20002a04
 80099b4:	40023c00 	.word	0x40023c00

080099b8 <HAL_FLASH_Unlock>:
  if(READ_BIT(FLASH->CR, FLASH_CR_LOCK) != RESET)
 80099b8:	4b06      	ldr	r3, [pc, #24]	; (80099d4 <HAL_FLASH_Unlock+0x1c>)
 80099ba:	691a      	ldr	r2, [r3, #16]
 80099bc:	2a00      	cmp	r2, #0
 80099be:	db01      	blt.n	80099c4 <HAL_FLASH_Unlock+0xc>
  HAL_StatusTypeDef status = HAL_OK;
 80099c0:	2000      	movs	r0, #0
}
 80099c2:	4770      	bx	lr
    WRITE_REG(FLASH->KEYR, FLASH_KEY1);
 80099c4:	4904      	ldr	r1, [pc, #16]	; (80099d8 <HAL_FLASH_Unlock+0x20>)
    WRITE_REG(FLASH->KEYR, FLASH_KEY2);
 80099c6:	4a05      	ldr	r2, [pc, #20]	; (80099dc <HAL_FLASH_Unlock+0x24>)
    WRITE_REG(FLASH->KEYR, FLASH_KEY1);
 80099c8:	6059      	str	r1, [r3, #4]
    WRITE_REG(FLASH->KEYR, FLASH_KEY2);
 80099ca:	605a      	str	r2, [r3, #4]
    if(READ_BIT(FLASH->CR, FLASH_CR_LOCK) != RESET)
 80099cc:	6918      	ldr	r0, [r3, #16]
  HAL_StatusTypeDef status = HAL_OK;
 80099ce:	0fc0      	lsrs	r0, r0, #31
 80099d0:	4770      	bx	lr
 80099d2:	bf00      	nop
 80099d4:	40023c00 	.word	0x40023c00
 80099d8:	45670123 	.word	0x45670123
 80099dc:	cdef89ab 	.word	0xcdef89ab

080099e0 <HAL_FLASH_Lock>:
  FLASH->CR |= FLASH_CR_LOCK;
 80099e0:	4a03      	ldr	r2, [pc, #12]	; (80099f0 <HAL_FLASH_Lock+0x10>)
 80099e2:	6913      	ldr	r3, [r2, #16]
 80099e4:	f043 4300 	orr.w	r3, r3, #2147483648	; 0x80000000
}
 80099e8:	2000      	movs	r0, #0
  FLASH->CR |= FLASH_CR_LOCK;
 80099ea:	6113      	str	r3, [r2, #16]
}
 80099ec:	4770      	bx	lr
 80099ee:	bf00      	nop
 80099f0:	40023c00 	.word	0x40023c00

080099f4 <HAL_FLASH_GetError>:
   return pFlash.ErrorCode;
 80099f4:	4b01      	ldr	r3, [pc, #4]	; (80099fc <HAL_FLASH_GetError+0x8>)
 80099f6:	69d8      	ldr	r0, [r3, #28]
}  
 80099f8:	4770      	bx	lr
 80099fa:	bf00      	nop
 80099fc:	20002a04 	.word	0x20002a04

08009a00 <FLASH_WaitForLastOperation>:
  pFlash.ErrorCode = HAL_FLASH_ERROR_NONE;
 8009a00:	4b14      	ldr	r3, [pc, #80]	; (8009a54 <FLASH_WaitForLastOperation+0x54>)
{ 
 8009a02:	b570      	push	{r4, r5, r6, lr}
  pFlash.ErrorCode = HAL_FLASH_ERROR_NONE;
 8009a04:	2200      	movs	r2, #0
{ 
 8009a06:	4604      	mov	r4, r0
  pFlash.ErrorCode = HAL_FLASH_ERROR_NONE;
 8009a08:	61da      	str	r2, [r3, #28]
  tickstart = HAL_GetTick();
 8009a0a:	f7ff fe4b 	bl	80096a4 <HAL_GetTick>
  while(__HAL_FLASH_GET_FLAG(FLASH_FLAG_BSY) != RESET) 
 8009a0e:	4e12      	ldr	r6, [pc, #72]	; (8009a58 <FLASH_WaitForLastOperation+0x58>)
  tickstart = HAL_GetTick();
 8009a10:	4605      	mov	r5, r0
  while(__HAL_FLASH_GET_FLAG(FLASH_FLAG_BSY) != RESET) 
 8009a12:	1c63      	adds	r3, r4, #1
 8009a14:	d10f      	bne.n	8009a36 <FLASH_WaitForLastOperation+0x36>
 8009a16:	4a10      	ldr	r2, [pc, #64]	; (8009a58 <FLASH_WaitForLastOperation+0x58>)
 8009a18:	68d3      	ldr	r3, [r2, #12]
 8009a1a:	03d8      	lsls	r0, r3, #15
 8009a1c:	d4fc      	bmi.n	8009a18 <FLASH_WaitForLastOperation+0x18>
  if (__HAL_FLASH_GET_FLAG(FLASH_FLAG_EOP) != RESET)
 8009a1e:	4b0e      	ldr	r3, [pc, #56]	; (8009a58 <FLASH_WaitForLastOperation+0x58>)
 8009a20:	68da      	ldr	r2, [r3, #12]
 8009a22:	07d2      	lsls	r2, r2, #31
    __HAL_FLASH_CLEAR_FLAG(FLASH_FLAG_EOP);
 8009a24:	bf44      	itt	mi
 8009a26:	2201      	movmi	r2, #1
 8009a28:	60da      	strmi	r2, [r3, #12]
  if(__HAL_FLASH_GET_FLAG((FLASH_FLAG_OPERR | FLASH_FLAG_WRPERR | FLASH_FLAG_PGAERR | \
 8009a2a:	4b0b      	ldr	r3, [pc, #44]	; (8009a58 <FLASH_WaitForLastOperation+0x58>)
 8009a2c:	68d8      	ldr	r0, [r3, #12]
 8009a2e:	f410 70f9 	ands.w	r0, r0, #498	; 0x1f2
 8009a32:	d10b      	bne.n	8009a4c <FLASH_WaitForLastOperation+0x4c>
}  
 8009a34:	bd70      	pop	{r4, r5, r6, pc}
  while(__HAL_FLASH_GET_FLAG(FLASH_FLAG_BSY) != RESET) 
 8009a36:	68f3      	ldr	r3, [r6, #12]
 8009a38:	03d9      	lsls	r1, r3, #15
 8009a3a:	d5f0      	bpl.n	8009a1e <FLASH_WaitForLastOperation+0x1e>
      if((Timeout == 0U)||((HAL_GetTick() - tickstart ) > Timeout))
 8009a3c:	b124      	cbz	r4, 8009a48 <FLASH_WaitForLastOperation+0x48>
 8009a3e:	f7ff fe31 	bl	80096a4 <HAL_GetTick>
 8009a42:	1b40      	subs	r0, r0, r5
 8009a44:	42a0      	cmp	r0, r4
 8009a46:	d9e4      	bls.n	8009a12 <FLASH_WaitForLastOperation+0x12>
        return HAL_TIMEOUT;
 8009a48:	2003      	movs	r0, #3
}  
 8009a4a:	bd70      	pop	{r4, r5, r6, pc}
    FLASH_SetErrorCode();
 8009a4c:	f7ff feca 	bl	80097e4 <FLASH_SetErrorCode>
    return HAL_ERROR;
 8009a50:	2001      	movs	r0, #1
}  
 8009a52:	bd70      	pop	{r4, r5, r6, pc}
 8009a54:	20002a04 	.word	0x20002a04
 8009a58:	40023c00 	.word	0x40023c00

08009a5c <FLASH_FlushCaches>:
  * @retval None
  */
void FLASH_FlushCaches(void)
{
  /* Flush instruction cache  */
  if (READ_BIT(FLASH->ACR, FLASH_ACR_ICEN) != RESET)
 8009a5c:	4b14      	ldr	r3, [pc, #80]	; (8009ab0 <FLASH_FlushCaches+0x54>)
 8009a5e:	681a      	ldr	r2, [r3, #0]
 8009a60:	0591      	lsls	r1, r2, #22
 8009a62:	d50f      	bpl.n	8009a84 <FLASH_FlushCaches+0x28>
  {
    /* Disable instruction cache  */
    __HAL_FLASH_INSTRUCTION_CACHE_DISABLE();
 8009a64:	681a      	ldr	r2, [r3, #0]
 8009a66:	f422 7200 	bic.w	r2, r2, #512	; 0x200
 8009a6a:	601a      	str	r2, [r3, #0]
    /* Reset instruction cache */
    __HAL_FLASH_INSTRUCTION_CACHE_RESET();
 8009a6c:	681a      	ldr	r2, [r3, #0]
 8009a6e:	f442 6200 	orr.w	r2, r2, #2048	; 0x800
 8009a72:	601a      	str	r2, [r3, #0]
 8009a74:	681a      	ldr	r2, [r3, #0]
 8009a76:	f422 6200 	bic.w	r2, r2, #2048	; 0x800
 8009a7a:	601a      	str	r2, [r3, #0]
    /* Enable instruction cache */
    __HAL_FLASH_INSTRUCTION_CACHE_ENABLE();
 8009a7c:	681a      	ldr	r2, [r3, #0]
 8009a7e:	f442 7200 	orr.w	r2, r2, #512	; 0x200
 8009a82:	601a      	str	r2, [r3, #0]
  }

  /* Flush data cache */
  if (READ_BIT(FLASH->ACR, FLASH_ACR_DCEN) != RESET)
 8009a84:	4b0a      	ldr	r3, [pc, #40]	; (8009ab0 <FLASH_FlushCaches+0x54>)
 8009a86:	681a      	ldr	r2, [r3, #0]
 8009a88:	0552      	lsls	r2, r2, #21
 8009a8a:	d50f      	bpl.n	8009aac <FLASH_FlushCaches+0x50>
  {
    /* Disable data cache  */
    __HAL_FLASH_DATA_CACHE_DISABLE();
 8009a8c:	681a      	ldr	r2, [r3, #0]
 8009a8e:	f422 6280 	bic.w	r2, r2, #1024	; 0x400
 8009a92:	601a      	str	r2, [r3, #0]
    /* Reset data cache */
    __HAL_FLASH_DATA_CACHE_RESET();
 8009a94:	681a      	ldr	r2, [r3, #0]
 8009a96:	f442 5280 	orr.w	r2, r2, #4096	; 0x1000
 8009a9a:	601a      	str	r2, [r3, #0]
 8009a9c:	681a      	ldr	r2, [r3, #0]
 8009a9e:	f422 5280 	bic.w	r2, r2, #4096	; 0x1000
 8009aa2:	601a      	str	r2, [r3, #0]
    /* Enable data cache */
    __HAL_FLASH_DATA_CACHE_ENABLE();
 8009aa4:	681a      	ldr	r2, [r3, #0]
 8009aa6:	f442 6280 	orr.w	r2, r2, #1024	; 0x400
 8009aaa:	601a      	str	r2, [r3, #0]
  }
}
 8009aac:	4770      	bx	lr
 8009aae:	bf00      	nop
 8009ab0:	40023c00 	.word	0x40023c00

08009ab4 <HAL_FLASHEx_Erase>:
{
 8009ab4:	e92d 43f8 	stmdb	sp!, {r3, r4, r5, r6, r7, r8, r9, lr}
  __HAL_LOCK(&pFlash);
 8009ab8:	4f44      	ldr	r7, [pc, #272]	; (8009bcc <HAL_FLASHEx_Erase+0x118>)
 8009aba:	7e3b      	ldrb	r3, [r7, #24]
 8009abc:	2b01      	cmp	r3, #1
 8009abe:	d053      	beq.n	8009b68 <HAL_FLASHEx_Erase+0xb4>
 8009ac0:	2301      	movs	r3, #1
 8009ac2:	4681      	mov	r9, r0
  status = FLASH_WaitForLastOperation((uint32_t)FLASH_TIMEOUT_VALUE);
 8009ac4:	f24c 3050 	movw	r0, #50000	; 0xc350
 8009ac8:	4688      	mov	r8, r1
  __HAL_LOCK(&pFlash);
 8009aca:	763b      	strb	r3, [r7, #24]
  status = FLASH_WaitForLastOperation((uint32_t)FLASH_TIMEOUT_VALUE);
 8009acc:	f7ff ff98 	bl	8009a00 <FLASH_WaitForLastOperation>
  if (status == HAL_OK)
 8009ad0:	4606      	mov	r6, r0
 8009ad2:	2800      	cmp	r0, #0
 8009ad4:	d143      	bne.n	8009b5e <HAL_FLASHEx_Erase+0xaa>
    *SectorError = 0xFFFFFFFFU;
 8009ad6:	f04f 33ff 	mov.w	r3, #4294967295
 8009ada:	f8c8 3000 	str.w	r3, [r8]
    if (pEraseInit->TypeErase == FLASH_TYPEERASE_MASSERASE)
 8009ade:	f8d9 3000 	ldr.w	r3, [r9]
 8009ae2:	2b01      	cmp	r3, #1
 8009ae4:	d044      	beq.n	8009b70 <HAL_FLASHEx_Erase+0xbc>
      for (index = pEraseInit->Sector; index < (pEraseInit->NbSectors + pEraseInit->Sector); index++)
 8009ae6:	e9d9 5302 	ldrd	r5, r3, [r9, #8]
 8009aea:	442b      	add	r3, r5
 8009aec:	429d      	cmp	r5, r3
 8009aee:	d234      	bcs.n	8009b5a <HAL_FLASHEx_Erase+0xa6>
  CLEAR_BIT(FLASH->CR, FLASH_CR_PSIZE);
 8009af0:	4c37      	ldr	r4, [pc, #220]	; (8009bd0 <HAL_FLASHEx_Erase+0x11c>)
 8009af2:	e005      	b.n	8009b00 <HAL_FLASHEx_Erase+0x4c>
      for (index = pEraseInit->Sector; index < (pEraseInit->NbSectors + pEraseInit->Sector); index++)
 8009af4:	e9d9 2302 	ldrd	r2, r3, [r9, #8]
 8009af8:	3501      	adds	r5, #1
 8009afa:	4413      	add	r3, r2
 8009afc:	42ab      	cmp	r3, r5
 8009afe:	d92c      	bls.n	8009b5a <HAL_FLASHEx_Erase+0xa6>
  if (VoltageRange == FLASH_VOLTAGE_RANGE_1)
 8009b00:	f899 3010 	ldrb.w	r3, [r9, #16]
 8009b04:	2b02      	cmp	r3, #2
        FLASH_Erase_Sector(index, (uint8_t) pEraseInit->VoltageRange);
 8009b06:	f44f 7140 	mov.w	r1, #768	; 0x300
 8009b0a:	bf98      	it	ls
 8009b0c:	0219      	lslls	r1, r3, #8
  CLEAR_BIT(FLASH->CR, FLASH_CR_PSIZE);
 8009b0e:	6923      	ldr	r3, [r4, #16]
 8009b10:	f423 7340 	bic.w	r3, r3, #768	; 0x300
 8009b14:	6123      	str	r3, [r4, #16]
  FLASH->CR |= tmp_psize;
 8009b16:	6923      	ldr	r3, [r4, #16]
 8009b18:	430b      	orrs	r3, r1
 8009b1a:	6123      	str	r3, [r4, #16]
  CLEAR_BIT(FLASH->CR, FLASH_CR_SNB);
 8009b1c:	6923      	ldr	r3, [r4, #16]
 8009b1e:	f023 03f8 	bic.w	r3, r3, #248	; 0xf8
 8009b22:	6123      	str	r3, [r4, #16]
  FLASH->CR |= FLASH_CR_SER | (Sector << FLASH_CR_SNB_Pos);
 8009b24:	6923      	ldr	r3, [r4, #16]
  if (Sector > FLASH_SECTOR_11)
 8009b26:	2d0b      	cmp	r5, #11
    Sector += 4U;
 8009b28:	bf8c      	ite	hi
 8009b2a:	1d2a      	addhi	r2, r5, #4
 8009b2c:	462a      	movls	r2, r5
  FLASH->CR |= FLASH_CR_SER | (Sector << FLASH_CR_SNB_Pos);
 8009b2e:	ea43 03c2 	orr.w	r3, r3, r2, lsl #3
 8009b32:	f043 0302 	orr.w	r3, r3, #2
 8009b36:	6123      	str	r3, [r4, #16]
  FLASH->CR |= FLASH_CR_STRT;
 8009b38:	6923      	ldr	r3, [r4, #16]
 8009b3a:	f443 3380 	orr.w	r3, r3, #65536	; 0x10000
 8009b3e:	6123      	str	r3, [r4, #16]
        status = FLASH_WaitForLastOperation((uint32_t)FLASH_TIMEOUT_VALUE);
 8009b40:	f24c 3050 	movw	r0, #50000	; 0xc350
 8009b44:	f7ff ff5c 	bl	8009a00 <FLASH_WaitForLastOperation>
        CLEAR_BIT(FLASH->CR, (FLASH_CR_SER | FLASH_CR_SNB));
 8009b48:	6923      	ldr	r3, [r4, #16]
 8009b4a:	f023 03fa 	bic.w	r3, r3, #250	; 0xfa
 8009b4e:	6123      	str	r3, [r4, #16]
        if (status != HAL_OK)
 8009b50:	2800      	cmp	r0, #0
 8009b52:	d0cf      	beq.n	8009af4 <HAL_FLASHEx_Erase+0x40>
          *SectorError = index;
 8009b54:	f8c8 5000 	str.w	r5, [r8]
        status = FLASH_WaitForLastOperation((uint32_t)FLASH_TIMEOUT_VALUE);
 8009b58:	4606      	mov	r6, r0
    FLASH_FlushCaches();
 8009b5a:	f7ff ff7f 	bl	8009a5c <FLASH_FlushCaches>
  __HAL_UNLOCK(&pFlash);
 8009b5e:	2300      	movs	r3, #0
 8009b60:	763b      	strb	r3, [r7, #24]
}
 8009b62:	4630      	mov	r0, r6
 8009b64:	e8bd 83f8 	ldmia.w	sp!, {r3, r4, r5, r6, r7, r8, r9, pc}
  __HAL_LOCK(&pFlash);
 8009b68:	2602      	movs	r6, #2
}
 8009b6a:	4630      	mov	r0, r6
 8009b6c:	e8bd 83f8 	ldmia.w	sp!, {r3, r4, r5, r6, r7, r8, r9, pc}
  CLEAR_BIT(FLASH->CR, FLASH_CR_PSIZE);
 8009b70:	4a17      	ldr	r2, [pc, #92]	; (8009bd0 <HAL_FLASHEx_Erase+0x11c>)
      FLASH_MassErase((uint8_t) pEraseInit->VoltageRange, pEraseInit->Banks);
 8009b72:	f8d9 0004 	ldr.w	r0, [r9, #4]
  CLEAR_BIT(FLASH->CR, FLASH_CR_PSIZE);
 8009b76:	6911      	ldr	r1, [r2, #16]
      FLASH_MassErase((uint8_t) pEraseInit->VoltageRange, pEraseInit->Banks);
 8009b78:	f8d9 3010 	ldr.w	r3, [r9, #16]
  CLEAR_BIT(FLASH->CR, FLASH_CR_PSIZE);
 8009b7c:	f421 7140 	bic.w	r1, r1, #768	; 0x300
 8009b80:	6111      	str	r1, [r2, #16]
  if (Banks == FLASH_BANK_BOTH)
 8009b82:	2803      	cmp	r0, #3
    FLASH->CR |= FLASH_MER_BIT;
 8009b84:	6911      	ldr	r1, [r2, #16]
  if (Banks == FLASH_BANK_BOTH)
 8009b86:	d01a      	beq.n	8009bbe <HAL_FLASHEx_Erase+0x10a>
  else if (Banks == FLASH_BANK_1)
 8009b88:	2801      	cmp	r0, #1
    FLASH->CR |= FLASH_CR_MER1;
 8009b8a:	bf0c      	ite	eq
 8009b8c:	f041 0104 	orreq.w	r1, r1, #4
    FLASH->CR |= FLASH_CR_MER2;
 8009b90:	f441 4100 	orrne.w	r1, r1, #32768	; 0x8000
 8009b94:	6111      	str	r1, [r2, #16]
  FLASH->CR |= FLASH_CR_STRT | ((uint32_t)VoltageRange << 8U);
 8009b96:	4c0e      	ldr	r4, [pc, #56]	; (8009bd0 <HAL_FLASHEx_Erase+0x11c>)
 8009b98:	021b      	lsls	r3, r3, #8
 8009b9a:	6922      	ldr	r2, [r4, #16]
 8009b9c:	b29b      	uxth	r3, r3
 8009b9e:	4313      	orrs	r3, r2
 8009ba0:	f443 3380 	orr.w	r3, r3, #65536	; 0x10000
 8009ba4:	6123      	str	r3, [r4, #16]
      status = FLASH_WaitForLastOperation((uint32_t)FLASH_TIMEOUT_VALUE);
 8009ba6:	f24c 3050 	movw	r0, #50000	; 0xc350
 8009baa:	f7ff ff29 	bl	8009a00 <FLASH_WaitForLastOperation>
      FLASH->CR &= (~FLASH_MER_BIT);
 8009bae:	6923      	ldr	r3, [r4, #16]
 8009bb0:	f423 4300 	bic.w	r3, r3, #32768	; 0x8000
 8009bb4:	f023 0304 	bic.w	r3, r3, #4
      status = FLASH_WaitForLastOperation((uint32_t)FLASH_TIMEOUT_VALUE);
 8009bb8:	4606      	mov	r6, r0
      FLASH->CR &= (~FLASH_MER_BIT);
 8009bba:	6123      	str	r3, [r4, #16]
 8009bbc:	e7cd      	b.n	8009b5a <HAL_FLASHEx_Erase+0xa6>
    FLASH->CR |= FLASH_MER_BIT;
 8009bbe:	f441 4100 	orr.w	r1, r1, #32768	; 0x8000
 8009bc2:	f041 0104 	orr.w	r1, r1, #4
 8009bc6:	6111      	str	r1, [r2, #16]
 8009bc8:	e7e5      	b.n	8009b96 <HAL_FLASHEx_Erase+0xe2>
 8009bca:	bf00      	nop
 8009bcc:	20002a04 	.word	0x20002a04
 8009bd0:	40023c00 	.word	0x40023c00

08009bd4 <HAL_GPIO_Init>:
  * @param  GPIO_Init pointer to a GPIO_InitTypeDef structure that contains
  *         the configuration information for the specified GPIO peripheral.
  * @retval None
  */
void HAL_GPIO_Init(GPIO_TypeDef  *GPIOx, GPIO_InitTypeDef *GPIO_Init)
{
 8009bd4:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
  for(position = 0U; position < GPIO_NUMBER; position++)
  {
    /* Get the IO position */
    ioposition = 0x01U << position;
    /* Get the current IO position */
    iocurrent = (uint32_t)(GPIO_Init->Pin) & ioposition;
 8009bd8:	2200      	movs	r2, #0
 8009bda:	680c      	ldr	r4, [r1, #0]
      /*--------------------- EXTI Mode Configuration ------------------------*/
      /* Configure the External Interrupt or event for the current IO */
      if((GPIO_Init->Mode & EXTI_MODE) != 0x00U)
      {
        /* Enable SYSCFG Clock */
        __HAL_RCC_SYSCFG_CLK_ENABLE();
 8009bdc:	f8df a260 	ldr.w	sl, [pc, #608]	; 8009e40 <HAL_GPIO_Init+0x26c>
        temp &= ~(0x0FU << (4U * (position & 0x03U)));
        temp |= ((uint32_t)(GPIO_GET_INDEX(GPIOx)) << (4U * (position & 0x03U)));
        SYSCFG->EXTICR[position >> 2U] = temp;

        /* Clear Rising Falling edge configuration */
        temp = EXTI->RTSR;
 8009be0:	4e90      	ldr	r6, [pc, #576]	; (8009e24 <HAL_GPIO_Init+0x250>)
{
 8009be2:	b085      	sub	sp, #20
  for(position = 0U; position < GPIO_NUMBER; position++)
 8009be4:	4613      	mov	r3, r2
        temp |= ((uint32_t)(GPIO_GET_INDEX(GPIOx)) << (4U * (position & 0x03U)));
 8009be6:	4689      	mov	r9, r1
 8009be8:	e005      	b.n	8009bf6 <HAL_GPIO_Init+0x22>
  for(position = 0U; position < GPIO_NUMBER; position++)
 8009bea:	3301      	adds	r3, #1
 8009bec:	2b10      	cmp	r3, #16
 8009bee:	f102 0202 	add.w	r2, r2, #2
 8009bf2:	f000 8095 	beq.w	8009d20 <HAL_GPIO_Init+0x14c>
    ioposition = 0x01U << position;
 8009bf6:	2101      	movs	r1, #1
 8009bf8:	4099      	lsls	r1, r3
    iocurrent = (uint32_t)(GPIO_Init->Pin) & ioposition;
 8009bfa:	ea01 0b04 	and.w	fp, r1, r4
    if(iocurrent == ioposition)
 8009bfe:	43a1      	bics	r1, r4
 8009c00:	d1f3      	bne.n	8009bea <HAL_GPIO_Init+0x16>
      if(((GPIO_Init->Mode & GPIO_MODE) == MODE_OUTPUT) || \
 8009c02:	f8d9 c004 	ldr.w	ip, [r9, #4]
 8009c06:	f00c 0103 	and.w	r1, ip, #3
 8009c0a:	1e4d      	subs	r5, r1, #1
 8009c0c:	2d01      	cmp	r5, #1
 8009c0e:	f240 808a 	bls.w	8009d26 <HAL_GPIO_Init+0x152>
      if((GPIO_Init->Mode & GPIO_MODE) != MODE_ANALOG)
 8009c12:	2903      	cmp	r1, #3
 8009c14:	f040 80ca 	bne.w	8009dac <HAL_GPIO_Init+0x1d8>
        temp &= ~(GPIO_OSPEEDER_OSPEEDR0 << (position * 2U));
 8009c18:	4091      	lsls	r1, r2
 8009c1a:	43cd      	mvns	r5, r1
      temp = GPIOx->MODER;
 8009c1c:	6807      	ldr	r7, [r0, #0]
      temp &= ~(GPIO_MODER_MODER0 << (position * 2U));
 8009c1e:	403d      	ands	r5, r7
      temp |= ((GPIO_Init->Mode & GPIO_MODE) << (position * 2U));
 8009c20:	4329      	orrs	r1, r5
      if((GPIO_Init->Mode & EXTI_MODE) != 0x00U)
 8009c22:	f41c 3f40 	tst.w	ip, #196608	; 0x30000
      GPIOx->MODER = temp;
 8009c26:	6001      	str	r1, [r0, #0]
      if((GPIO_Init->Mode & EXTI_MODE) != 0x00U)
 8009c28:	d0df      	beq.n	8009bea <HAL_GPIO_Init+0x16>
        __HAL_RCC_SYSCFG_CLK_ENABLE();
 8009c2a:	2100      	movs	r1, #0
 8009c2c:	9103      	str	r1, [sp, #12]
 8009c2e:	f8da 1044 	ldr.w	r1, [sl, #68]	; 0x44
 8009c32:	f441 4180 	orr.w	r1, r1, #16384	; 0x4000
 8009c36:	f8ca 1044 	str.w	r1, [sl, #68]	; 0x44
 8009c3a:	f8da 1044 	ldr.w	r1, [sl, #68]	; 0x44
 8009c3e:	f401 4180 	and.w	r1, r1, #16384	; 0x4000
 8009c42:	9103      	str	r1, [sp, #12]
 8009c44:	9903      	ldr	r1, [sp, #12]
        temp = SYSCFG->EXTICR[position >> 2U];
 8009c46:	f023 0103 	bic.w	r1, r3, #3
 8009c4a:	f101 4180 	add.w	r1, r1, #1073741824	; 0x40000000
 8009c4e:	f501 319c 	add.w	r1, r1, #79872	; 0x13800
        temp &= ~(0x0FU << (4U * (position & 0x03U)));
 8009c52:	f003 0703 	and.w	r7, r3, #3
        temp = SYSCFG->EXTICR[position >> 2U];
 8009c56:	688d      	ldr	r5, [r1, #8]
        temp &= ~(0x0FU << (4U * (position & 0x03U)));
 8009c58:	00bf      	lsls	r7, r7, #2
 8009c5a:	f04f 0e0f 	mov.w	lr, #15
 8009c5e:	fa0e fe07 	lsl.w	lr, lr, r7
 8009c62:	ea25 080e 	bic.w	r8, r5, lr
        temp |= ((uint32_t)(GPIO_GET_INDEX(GPIOx)) << (4U * (position & 0x03U)));
 8009c66:	4d70      	ldr	r5, [pc, #448]	; (8009e28 <HAL_GPIO_Init+0x254>)
 8009c68:	42a8      	cmp	r0, r5
 8009c6a:	d02e      	beq.n	8009cca <HAL_GPIO_Init+0xf6>
 8009c6c:	f505 6580 	add.w	r5, r5, #1024	; 0x400
 8009c70:	42a8      	cmp	r0, r5
 8009c72:	f000 809f 	beq.w	8009db4 <HAL_GPIO_Init+0x1e0>
 8009c76:	4d6d      	ldr	r5, [pc, #436]	; (8009e2c <HAL_GPIO_Init+0x258>)
 8009c78:	42a8      	cmp	r0, r5
 8009c7a:	f000 80a2 	beq.w	8009dc2 <HAL_GPIO_Init+0x1ee>
 8009c7e:	4d6c      	ldr	r5, [pc, #432]	; (8009e30 <HAL_GPIO_Init+0x25c>)
 8009c80:	42a8      	cmp	r0, r5
 8009c82:	f000 80a5 	beq.w	8009dd0 <HAL_GPIO_Init+0x1fc>
 8009c86:	4d6b      	ldr	r5, [pc, #428]	; (8009e34 <HAL_GPIO_Init+0x260>)
 8009c88:	42a8      	cmp	r0, r5
 8009c8a:	f000 80a8 	beq.w	8009dde <HAL_GPIO_Init+0x20a>
 8009c8e:	4d6a      	ldr	r5, [pc, #424]	; (8009e38 <HAL_GPIO_Init+0x264>)
 8009c90:	42a8      	cmp	r0, r5
 8009c92:	f000 80b2 	beq.w	8009dfa <HAL_GPIO_Init+0x226>
 8009c96:	4d69      	ldr	r5, [pc, #420]	; (8009e3c <HAL_GPIO_Init+0x268>)
 8009c98:	42a8      	cmp	r0, r5
 8009c9a:	f000 80b5 	beq.w	8009e08 <HAL_GPIO_Init+0x234>
 8009c9e:	f8df e1a4 	ldr.w	lr, [pc, #420]	; 8009e44 <HAL_GPIO_Init+0x270>
 8009ca2:	4570      	cmp	r0, lr
 8009ca4:	f000 80a2 	beq.w	8009dec <HAL_GPIO_Init+0x218>
 8009ca8:	f8df e19c 	ldr.w	lr, [pc, #412]	; 8009e48 <HAL_GPIO_Init+0x274>
 8009cac:	4570      	cmp	r0, lr
 8009cae:	f000 80b2 	beq.w	8009e16 <HAL_GPIO_Init+0x242>
 8009cb2:	f8df e198 	ldr.w	lr, [pc, #408]	; 8009e4c <HAL_GPIO_Init+0x278>
 8009cb6:	4570      	cmp	r0, lr
 8009cb8:	bf0c      	ite	eq
 8009cba:	f04f 0e09 	moveq.w	lr, #9
 8009cbe:	f04f 0e0a 	movne.w	lr, #10
 8009cc2:	fa0e f707 	lsl.w	r7, lr, r7
 8009cc6:	ea48 0807 	orr.w	r8, r8, r7
        SYSCFG->EXTICR[position >> 2U] = temp;
 8009cca:	f8c1 8008 	str.w	r8, [r1, #8]
        temp = EXTI->RTSR;
 8009cce:	68b1      	ldr	r1, [r6, #8]
        temp &= ~((uint32_t)iocurrent);
 8009cd0:	ea6f 050b 	mvn.w	r5, fp
        if((GPIO_Init->Mode & TRIGGER_RISING) != 0x00U)
 8009cd4:	f41c 1f80 	tst.w	ip, #1048576	; 0x100000
        temp &= ~((uint32_t)iocurrent);
 8009cd8:	bf0c      	ite	eq
 8009cda:	4029      	andeq	r1, r5
        {
          temp |= iocurrent;
 8009cdc:	ea4b 0101 	orrne.w	r1, fp, r1
        }
        EXTI->RTSR = temp;
 8009ce0:	60b1      	str	r1, [r6, #8]

        temp = EXTI->FTSR;
 8009ce2:	68f1      	ldr	r1, [r6, #12]
        temp &= ~((uint32_t)iocurrent);
        if((GPIO_Init->Mode & TRIGGER_FALLING) != 0x00U)
 8009ce4:	f41c 1f00 	tst.w	ip, #2097152	; 0x200000
        temp &= ~((uint32_t)iocurrent);
 8009ce8:	bf0c      	ite	eq
 8009cea:	4029      	andeq	r1, r5
        {
          temp |= iocurrent;
 8009cec:	ea4b 0101 	orrne.w	r1, fp, r1
        }
        EXTI->FTSR = temp;
 8009cf0:	60f1      	str	r1, [r6, #12]

        temp = EXTI->EMR;
 8009cf2:	6871      	ldr	r1, [r6, #4]
        temp &= ~((uint32_t)iocurrent);
        if((GPIO_Init->Mode & EXTI_EVT) != 0x00U)
 8009cf4:	f41c 3f00 	tst.w	ip, #131072	; 0x20000
        temp &= ~((uint32_t)iocurrent);
 8009cf8:	bf0c      	ite	eq
 8009cfa:	4029      	andeq	r1, r5
        {
          temp |= iocurrent;
 8009cfc:	ea4b 0101 	orrne.w	r1, fp, r1
        }
        EXTI->EMR = temp;
 8009d00:	6071      	str	r1, [r6, #4]

        /* Clear EXTI line configuration */
        temp = EXTI->IMR;
 8009d02:	6831      	ldr	r1, [r6, #0]
        temp &= ~((uint32_t)iocurrent);
        if((GPIO_Init->Mode & EXTI_IT) != 0x00U)
 8009d04:	f41c 3f80 	tst.w	ip, #65536	; 0x10000
  for(position = 0U; position < GPIO_NUMBER; position++)
 8009d08:	f103 0301 	add.w	r3, r3, #1
        temp &= ~((uint32_t)iocurrent);
 8009d0c:	bf0c      	ite	eq
 8009d0e:	4029      	andeq	r1, r5
        {
          temp |= iocurrent;
 8009d10:	ea4b 0101 	orrne.w	r1, fp, r1
  for(position = 0U; position < GPIO_NUMBER; position++)
 8009d14:	2b10      	cmp	r3, #16
        }
        EXTI->IMR = temp;
 8009d16:	6031      	str	r1, [r6, #0]
  for(position = 0U; position < GPIO_NUMBER; position++)
 8009d18:	f102 0202 	add.w	r2, r2, #2
 8009d1c:	f47f af6b 	bne.w	8009bf6 <HAL_GPIO_Init+0x22>
      }
    }
  }
}
 8009d20:	b005      	add	sp, #20
 8009d22:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
        temp |= (GPIO_Init->Speed << (position * 2U));
 8009d26:	f8d9 500c 	ldr.w	r5, [r9, #12]
        temp = GPIOx->OSPEEDR; 
 8009d2a:	f8d0 e008 	ldr.w	lr, [r0, #8]
        temp |= (GPIO_Init->Speed << (position * 2U));
 8009d2e:	fa05 f702 	lsl.w	r7, r5, r2
        temp &= ~(GPIO_OSPEEDER_OSPEEDR0 << (position * 2U));
 8009d32:	2503      	movs	r5, #3
 8009d34:	fa05 f802 	lsl.w	r8, r5, r2
 8009d38:	ea2e 0e08 	bic.w	lr, lr, r8
        temp |= (GPIO_Init->Speed << (position * 2U));
 8009d3c:	ea47 070e 	orr.w	r7, r7, lr
        GPIOx->OSPEEDR = temp;
 8009d40:	6087      	str	r7, [r0, #8]
        temp = GPIOx->OTYPER;
 8009d42:	6847      	ldr	r7, [r0, #4]
        temp &= ~(GPIO_OTYPER_OT_0 << position) ;
 8009d44:	ea27 0e0b 	bic.w	lr, r7, fp
        temp |= (((GPIO_Init->Mode & OUTPUT_TYPE) >> OUTPUT_TYPE_Pos) << position);
 8009d48:	f3cc 1700 	ubfx	r7, ip, #4, #1
 8009d4c:	409f      	lsls	r7, r3
 8009d4e:	ea47 070e 	orr.w	r7, r7, lr
        temp &= ~(GPIO_OSPEEDER_OSPEEDR0 << (position * 2U));
 8009d52:	ea6f 0508 	mvn.w	r5, r8
        GPIOx->OTYPER = temp;
 8009d56:	6047      	str	r7, [r0, #4]
        temp = GPIOx->PUPDR;
 8009d58:	68c7      	ldr	r7, [r0, #12]
        temp &= ~(GPIO_PUPDR_PUPDR0 << (position * 2U));
 8009d5a:	ea07 0e05 	and.w	lr, r7, r5
        temp |= ((GPIO_Init->Pull) << (position * 2U));
 8009d5e:	f8d9 7008 	ldr.w	r7, [r9, #8]
 8009d62:	4097      	lsls	r7, r2
 8009d64:	ea47 070e 	orr.w	r7, r7, lr
      if((GPIO_Init->Mode & GPIO_MODE) == MODE_AF)
 8009d68:	2902      	cmp	r1, #2
        GPIOx->PUPDR = temp;
 8009d6a:	60c7      	str	r7, [r0, #12]
      if((GPIO_Init->Mode & GPIO_MODE) == MODE_AF)
 8009d6c:	fa01 f102 	lsl.w	r1, r1, r2
 8009d70:	f47f af54 	bne.w	8009c1c <HAL_GPIO_Init+0x48>
        temp = GPIOx->AFR[position >> 3U];
 8009d74:	ea4f 0ed3 	mov.w	lr, r3, lsr #3
 8009d78:	eb00 0e8e 	add.w	lr, r0, lr, lsl #2
        temp &= ~(0xFU << ((uint32_t)(position & 0x07U) * 4U)) ;
 8009d7c:	f003 0807 	and.w	r8, r3, #7
        temp = GPIOx->AFR[position >> 3U];
 8009d80:	f8de 7020 	ldr.w	r7, [lr, #32]
 8009d84:	9700      	str	r7, [sp, #0]
        temp |= ((uint32_t)(GPIO_Init->Alternate) << (((uint32_t)position & 0x07U) * 4U));
 8009d86:	f8d9 7010 	ldr.w	r7, [r9, #16]
        temp &= ~(0xFU << ((uint32_t)(position & 0x07U) * 4U)) ;
 8009d8a:	ea4f 0888 	mov.w	r8, r8, lsl #2
        temp |= ((uint32_t)(GPIO_Init->Alternate) << (((uint32_t)position & 0x07U) * 4U));
 8009d8e:	fa07 f708 	lsl.w	r7, r7, r8
 8009d92:	9701      	str	r7, [sp, #4]
        temp &= ~(0xFU << ((uint32_t)(position & 0x07U) * 4U)) ;
 8009d94:	270f      	movs	r7, #15
 8009d96:	fa07 f808 	lsl.w	r8, r7, r8
 8009d9a:	9f00      	ldr	r7, [sp, #0]
 8009d9c:	ea27 0808 	bic.w	r8, r7, r8
        temp |= ((uint32_t)(GPIO_Init->Alternate) << (((uint32_t)position & 0x07U) * 4U));
 8009da0:	9f01      	ldr	r7, [sp, #4]
 8009da2:	ea47 0708 	orr.w	r7, r7, r8
        GPIOx->AFR[position >> 3U] = temp;
 8009da6:	f8ce 7020 	str.w	r7, [lr, #32]
 8009daa:	e737      	b.n	8009c1c <HAL_GPIO_Init+0x48>
        temp &= ~(GPIO_OSPEEDER_OSPEEDR0 << (position * 2U));
 8009dac:	2503      	movs	r5, #3
 8009dae:	4095      	lsls	r5, r2
 8009db0:	43ed      	mvns	r5, r5
 8009db2:	e7d1      	b.n	8009d58 <HAL_GPIO_Init+0x184>
        temp |= ((uint32_t)(GPIO_GET_INDEX(GPIOx)) << (4U * (position & 0x03U)));
 8009db4:	f04f 0e01 	mov.w	lr, #1
 8009db8:	fa0e f707 	lsl.w	r7, lr, r7
 8009dbc:	ea48 0807 	orr.w	r8, r8, r7
 8009dc0:	e783      	b.n	8009cca <HAL_GPIO_Init+0xf6>
 8009dc2:	f04f 0e02 	mov.w	lr, #2
 8009dc6:	fa0e f707 	lsl.w	r7, lr, r7
 8009dca:	ea48 0807 	orr.w	r8, r8, r7
 8009dce:	e77c      	b.n	8009cca <HAL_GPIO_Init+0xf6>
 8009dd0:	f04f 0e03 	mov.w	lr, #3
 8009dd4:	fa0e f707 	lsl.w	r7, lr, r7
 8009dd8:	ea48 0807 	orr.w	r8, r8, r7
 8009ddc:	e775      	b.n	8009cca <HAL_GPIO_Init+0xf6>
 8009dde:	f04f 0e04 	mov.w	lr, #4
 8009de2:	fa0e f707 	lsl.w	r7, lr, r7
 8009de6:	ea48 0807 	orr.w	r8, r8, r7
 8009dea:	e76e      	b.n	8009cca <HAL_GPIO_Init+0xf6>
 8009dec:	f04f 0e07 	mov.w	lr, #7
 8009df0:	fa0e f707 	lsl.w	r7, lr, r7
 8009df4:	ea48 0807 	orr.w	r8, r8, r7
 8009df8:	e767      	b.n	8009cca <HAL_GPIO_Init+0xf6>
 8009dfa:	f04f 0e05 	mov.w	lr, #5
 8009dfe:	fa0e f707 	lsl.w	r7, lr, r7
 8009e02:	ea48 0807 	orr.w	r8, r8, r7
 8009e06:	e760      	b.n	8009cca <HAL_GPIO_Init+0xf6>
 8009e08:	f04f 0e06 	mov.w	lr, #6
 8009e0c:	fa0e f707 	lsl.w	r7, lr, r7
 8009e10:	ea48 0807 	orr.w	r8, r8, r7
 8009e14:	e759      	b.n	8009cca <HAL_GPIO_Init+0xf6>
 8009e16:	f04f 0e08 	mov.w	lr, #8
 8009e1a:	fa0e f707 	lsl.w	r7, lr, r7
 8009e1e:	ea48 0807 	orr.w	r8, r8, r7
 8009e22:	e752      	b.n	8009cca <HAL_GPIO_Init+0xf6>
 8009e24:	40013c00 	.word	0x40013c00
 8009e28:	40020000 	.word	0x40020000
 8009e2c:	40020800 	.word	0x40020800
 8009e30:	40020c00 	.word	0x40020c00
 8009e34:	40021000 	.word	0x40021000
 8009e38:	40021400 	.word	0x40021400
 8009e3c:	40021800 	.word	0x40021800
 8009e40:	40023800 	.word	0x40023800
 8009e44:	40021c00 	.word	0x40021c00
 8009e48:	40022000 	.word	0x40022000
 8009e4c:	40022400 	.word	0x40022400

08009e50 <HAL_GPIO_ReadPin>:
  GPIO_PinState bitstatus;

  /* Check the parameters */
  assert_param(IS_GPIO_PIN(GPIO_Pin));

  if((GPIOx->IDR & GPIO_Pin) != (uint32_t)GPIO_PIN_RESET)
 8009e50:	6903      	ldr	r3, [r0, #16]
 8009e52:	4219      	tst	r1, r3
  else
  {
    bitstatus = GPIO_PIN_RESET;
  }
  return bitstatus;
}
 8009e54:	bf14      	ite	ne
 8009e56:	2001      	movne	r0, #1
 8009e58:	2000      	moveq	r0, #0
 8009e5a:	4770      	bx	lr

08009e5c <HAL_GPIO_WritePin>:
{
  /* Check the parameters */
  assert_param(IS_GPIO_PIN(GPIO_Pin));
  assert_param(IS_GPIO_PIN_ACTION(PinState));

  if(PinState != GPIO_PIN_RESET)
 8009e5c:	b902      	cbnz	r2, 8009e60 <HAL_GPIO_WritePin+0x4>
  {
    GPIOx->BSRR = GPIO_Pin;
  }
  else
  {
    GPIOx->BSRR = (uint32_t)GPIO_Pin << 16U;
 8009e5e:	0409      	lsls	r1, r1, #16
 8009e60:	6181      	str	r1, [r0, #24]
  }
}
 8009e62:	4770      	bx	lr

08009e64 <HAL_GPIO_TogglePin>:

  /* Check the parameters */
  assert_param(IS_GPIO_PIN(GPIO_Pin));

  /* get current Output Data Register value */
  odr = GPIOx->ODR;
 8009e64:	6943      	ldr	r3, [r0, #20]

  /* Set selected pins that were at low level, and reset ones that were high */
  GPIOx->BSRR = ((odr & GPIO_Pin) << GPIO_NUMBER) | (~odr & GPIO_Pin);
 8009e66:	ea01 0203 	and.w	r2, r1, r3
 8009e6a:	ea21 0103 	bic.w	r1, r1, r3
 8009e6e:	ea41 4102 	orr.w	r1, r1, r2, lsl #16
 8009e72:	6181      	str	r1, [r0, #24]
}
 8009e74:	4770      	bx	lr
 8009e76:	bf00      	nop

08009e78 <HAL_GPIO_EXTI_Callback>:
  /* Prevent unused argument(s) compilation warning */
  UNUSED(GPIO_Pin);
  /* NOTE: This function Should not be modified, when the callback is needed,
           the HAL_GPIO_EXTI_Callback could be implemented in the user file
   */
}
 8009e78:	4770      	bx	lr
 8009e7a:	bf00      	nop

08009e7c <HAL_GPIO_EXTI_IRQHandler>:
  if(__HAL_GPIO_EXTI_GET_IT(GPIO_Pin) != RESET)
 8009e7c:	4a04      	ldr	r2, [pc, #16]	; (8009e90 <HAL_GPIO_EXTI_IRQHandler+0x14>)
 8009e7e:	6951      	ldr	r1, [r2, #20]
 8009e80:	4201      	tst	r1, r0
 8009e82:	d100      	bne.n	8009e86 <HAL_GPIO_EXTI_IRQHandler+0xa>
 8009e84:	4770      	bx	lr
{
 8009e86:	b508      	push	{r3, lr}
    __HAL_GPIO_EXTI_CLEAR_IT(GPIO_Pin);
 8009e88:	6150      	str	r0, [r2, #20]
    HAL_GPIO_EXTI_Callback(GPIO_Pin);
 8009e8a:	f7ff fff5 	bl	8009e78 <HAL_GPIO_EXTI_Callback>
}
 8009e8e:	bd08      	pop	{r3, pc}
 8009e90:	40013c00 	.word	0x40013c00

08009e94 <I2C_RequestMemoryWrite>:
  * @param  Timeout Timeout duration
  * @param  Tickstart Tick start value
  * @retval HAL status
  */
static HAL_StatusTypeDef I2C_RequestMemoryWrite(I2C_HandleTypeDef *hi2c, uint16_t DevAddress, uint16_t MemAddress, uint16_t MemAddSize, uint32_t Timeout, uint32_t Tickstart)
{
 8009e94:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
  /* Generate Start */
  SET_BIT(hi2c->Instance->CR1, I2C_CR1_START);
 8009e98:	6804      	ldr	r4, [r0, #0]
{
 8009e9a:	b083      	sub	sp, #12
 8009e9c:	4698      	mov	r8, r3
  SET_BIT(hi2c->Instance->CR1, I2C_CR1_START);
 8009e9e:	6823      	ldr	r3, [r4, #0]
{
 8009ea0:	f8dd 9030 	ldr.w	r9, [sp, #48]	; 0x30
 8009ea4:	f8dd b034 	ldr.w	fp, [sp, #52]	; 0x34
  SET_BIT(hi2c->Instance->CR1, I2C_CR1_START);
 8009ea8:	f443 7380 	orr.w	r3, r3, #256	; 0x100
{
 8009eac:	4606      	mov	r6, r0
 8009eae:	468a      	mov	sl, r1
 8009eb0:	4617      	mov	r7, r2
  SET_BIT(hi2c->Instance->CR1, I2C_CR1_START);
 8009eb2:	6023      	str	r3, [r4, #0]
  * @param  Status The new Flag status (SET or RESET).
  * @param  Timeout Timeout duration
  * @param  Tickstart Tick start value
  * @retval HAL status
  */
static HAL_StatusTypeDef I2C_WaitOnFlagUntilTimeout(I2C_HandleTypeDef *hi2c, uint32_t Flag, FlagStatus Status, uint32_t Timeout, uint32_t Tickstart)
 8009eb4:	f1b9 3fff 	cmp.w	r9, #4294967295
 8009eb8:	d136      	bne.n	8009f28 <I2C_RequestMemoryWrite+0x94>
{
  /* Wait until flag is set */
  while (__HAL_I2C_GET_FLAG(hi2c, Flag) == Status)
 8009eba:	6965      	ldr	r5, [r4, #20]
 8009ebc:	07e8      	lsls	r0, r5, #31
 8009ebe:	d5fc      	bpl.n	8009eba <I2C_RequestMemoryWrite+0x26>
  hi2c->Instance->DR = I2C_7BIT_ADD_WRITE(DevAddress);
 8009ec0:	f00a 03fe 	and.w	r3, sl, #254	; 0xfe
 8009ec4:	6123      	str	r3, [r4, #16]
  * @param  Flag specifies the I2C flag to check.
  * @param  Timeout Timeout duration
  * @param  Tickstart Tick start value
  * @retval HAL status
  */
static HAL_StatusTypeDef I2C_WaitOnMasterAddressFlagUntilTimeout(I2C_HandleTypeDef *hi2c, uint32_t Flag, uint32_t Timeout, uint32_t Tickstart)
 8009ec6:	f1b9 3fff 	cmp.w	r9, #4294967295
 8009eca:	d003      	beq.n	8009ed4 <I2C_RequestMemoryWrite+0x40>
 8009ecc:	e04f      	b.n	8009f6e <I2C_RequestMemoryWrite+0xda>
{
  while (__HAL_I2C_GET_FLAG(hi2c, Flag) == RESET)
  {
    if (__HAL_I2C_GET_FLAG(hi2c, I2C_FLAG_AF) == SET)
 8009ece:	6961      	ldr	r1, [r4, #20]
 8009ed0:	054d      	lsls	r5, r1, #21
 8009ed2:	d45d      	bmi.n	8009f90 <I2C_RequestMemoryWrite+0xfc>
  while (__HAL_I2C_GET_FLAG(hi2c, Flag) == RESET)
 8009ed4:	6961      	ldr	r1, [r4, #20]
 8009ed6:	078b      	lsls	r3, r1, #30
 8009ed8:	d5f9      	bpl.n	8009ece <I2C_RequestMemoryWrite+0x3a>
  __HAL_I2C_CLEAR_ADDRFLAG(hi2c);
 8009eda:	2300      	movs	r3, #0
 8009edc:	9301      	str	r3, [sp, #4]
 8009ede:	6963      	ldr	r3, [r4, #20]
 8009ee0:	9301      	str	r3, [sp, #4]
 8009ee2:	69a3      	ldr	r3, [r4, #24]
 8009ee4:	9301      	str	r3, [sp, #4]
 8009ee6:	9b01      	ldr	r3, [sp, #4]
  * @param  Tickstart Tick start value
  * @retval HAL status
  */
static HAL_StatusTypeDef I2C_WaitOnTXEFlagUntilTimeout(I2C_HandleTypeDef *hi2c, uint32_t Timeout, uint32_t Tickstart)
{
  while (__HAL_I2C_GET_FLAG(hi2c, I2C_FLAG_TXE) == RESET)
 8009ee8:	f1b9 3fff 	cmp.w	r9, #4294967295
 8009eec:	f040 8088 	bne.w	800a000 <I2C_RequestMemoryWrite+0x16c>
 8009ef0:	6963      	ldr	r3, [r4, #20]
 8009ef2:	061a      	lsls	r2, r3, #24
 8009ef4:	d464      	bmi.n	8009fc0 <I2C_RequestMemoryWrite+0x12c>
  *                the configuration information for the specified I2C.
  * @retval HAL status
  */
static HAL_StatusTypeDef I2C_IsAcknowledgeFailed(I2C_HandleTypeDef *hi2c)
{
  if (__HAL_I2C_GET_FLAG(hi2c, I2C_FLAG_AF) == SET)
 8009ef6:	6963      	ldr	r3, [r4, #20]
 8009ef8:	055b      	lsls	r3, r3, #21
 8009efa:	d5f9      	bpl.n	8009ef0 <I2C_RequestMemoryWrite+0x5c>
  {
    /* Clear NACKF Flag */
    __HAL_I2C_CLEAR_FLAG(hi2c, I2C_FLAG_AF);

    hi2c->PreviousState       = I2C_STATE_NONE;
 8009efc:	2300      	movs	r3, #0
    __HAL_I2C_CLEAR_FLAG(hi2c, I2C_FLAG_AF);
 8009efe:	f46f 6180 	mvn.w	r1, #1024	; 0x400
    hi2c->State               = HAL_I2C_STATE_READY;
 8009f02:	2220      	movs	r2, #32
    __HAL_I2C_CLEAR_FLAG(hi2c, I2C_FLAG_AF);
 8009f04:	6161      	str	r1, [r4, #20]
    hi2c->PreviousState       = I2C_STATE_NONE;
 8009f06:	6333      	str	r3, [r6, #48]	; 0x30
    hi2c->State               = HAL_I2C_STATE_READY;
 8009f08:	f886 203d 	strb.w	r2, [r6, #61]	; 0x3d
    hi2c->Mode                = HAL_I2C_MODE_NONE;
 8009f0c:	f886 303e 	strb.w	r3, [r6, #62]	; 0x3e
    hi2c->ErrorCode           |= HAL_I2C_ERROR_AF;
 8009f10:	6c33      	ldr	r3, [r6, #64]	; 0x40
 8009f12:	f043 0304 	orr.w	r3, r3, #4
 8009f16:	6433      	str	r3, [r6, #64]	; 0x40
    if (hi2c->ErrorCode == HAL_I2C_ERROR_AF)
 8009f18:	6c33      	ldr	r3, [r6, #64]	; 0x40

    /* Process Unlocked */
    __HAL_UNLOCK(hi2c);
 8009f1a:	2200      	movs	r2, #0
    if (hi2c->ErrorCode == HAL_I2C_ERROR_AF)
 8009f1c:	2b04      	cmp	r3, #4
    __HAL_UNLOCK(hi2c);
 8009f1e:	f886 203c 	strb.w	r2, [r6, #60]	; 0x3c
    if (hi2c->ErrorCode == HAL_I2C_ERROR_AF)
 8009f22:	d066      	beq.n	8009ff2 <I2C_RequestMemoryWrite+0x15e>
    return HAL_ERROR;
 8009f24:	2001      	movs	r0, #1
 8009f26:	e01f      	b.n	8009f68 <I2C_RequestMemoryWrite+0xd4>
  while (__HAL_I2C_GET_FLAG(hi2c, Flag) == Status)
 8009f28:	6963      	ldr	r3, [r4, #20]
 8009f2a:	07d9      	lsls	r1, r3, #31
 8009f2c:	d4c8      	bmi.n	8009ec0 <I2C_RequestMemoryWrite+0x2c>
      if (((HAL_GetTick() - Tickstart) > Timeout) || (Timeout == 0U))
 8009f2e:	f7ff fbb9 	bl	80096a4 <HAL_GetTick>
 8009f32:	eba0 000b 	sub.w	r0, r0, fp
 8009f36:	4581      	cmp	r9, r0
 8009f38:	d304      	bcc.n	8009f44 <I2C_RequestMemoryWrite+0xb0>
 8009f3a:	f1b9 0f00 	cmp.w	r9, #0
 8009f3e:	d001      	beq.n	8009f44 <I2C_RequestMemoryWrite+0xb0>
    if (READ_BIT(hi2c->Instance->CR1, I2C_CR1_START) == I2C_CR1_START)
 8009f40:	6834      	ldr	r4, [r6, #0]
 8009f42:	e7b7      	b.n	8009eb4 <I2C_RequestMemoryWrite+0x20>
        hi2c->PreviousState     = I2C_STATE_NONE;
 8009f44:	2300      	movs	r3, #0
        hi2c->State             = HAL_I2C_STATE_READY;
 8009f46:	2220      	movs	r2, #32
        hi2c->PreviousState     = I2C_STATE_NONE;
 8009f48:	6333      	str	r3, [r6, #48]	; 0x30
        hi2c->State             = HAL_I2C_STATE_READY;
 8009f4a:	f886 203d 	strb.w	r2, [r6, #61]	; 0x3d
        hi2c->Mode              = HAL_I2C_MODE_NONE;
 8009f4e:	f886 303e 	strb.w	r3, [r6, #62]	; 0x3e
        hi2c->ErrorCode         |= HAL_I2C_ERROR_TIMEOUT;
 8009f52:	6c32      	ldr	r2, [r6, #64]	; 0x40
    if (READ_BIT(hi2c->Instance->CR1, I2C_CR1_START) == I2C_CR1_START)
 8009f54:	6831      	ldr	r1, [r6, #0]
        __HAL_UNLOCK(hi2c);
 8009f56:	f886 303c 	strb.w	r3, [r6, #60]	; 0x3c
        hi2c->ErrorCode         |= HAL_I2C_ERROR_TIMEOUT;
 8009f5a:	f042 0220 	orr.w	r2, r2, #32
 8009f5e:	6432      	str	r2, [r6, #64]	; 0x40
    if (READ_BIT(hi2c->Instance->CR1, I2C_CR1_START) == I2C_CR1_START)
 8009f60:	680b      	ldr	r3, [r1, #0]
 8009f62:	05dc      	lsls	r4, r3, #23
 8009f64:	d435      	bmi.n	8009fd2 <I2C_RequestMemoryWrite+0x13e>
    return HAL_TIMEOUT;
 8009f66:	2003      	movs	r0, #3
}
 8009f68:	b003      	add	sp, #12
 8009f6a:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
  while (__HAL_I2C_GET_FLAG(hi2c, Flag) == RESET)
 8009f6e:	6963      	ldr	r3, [r4, #20]
 8009f70:	0798      	lsls	r0, r3, #30
 8009f72:	d4b2      	bmi.n	8009eda <I2C_RequestMemoryWrite+0x46>
    if (__HAL_I2C_GET_FLAG(hi2c, I2C_FLAG_AF) == SET)
 8009f74:	6963      	ldr	r3, [r4, #20]
 8009f76:	055a      	lsls	r2, r3, #21
 8009f78:	d40a      	bmi.n	8009f90 <I2C_RequestMemoryWrite+0xfc>
      if (((HAL_GetTick() - Tickstart) > Timeout) || (Timeout == 0U))
 8009f7a:	f7ff fb93 	bl	80096a4 <HAL_GetTick>
 8009f7e:	eba0 000b 	sub.w	r0, r0, fp
 8009f82:	4581      	cmp	r9, r0
 8009f84:	d34e      	bcc.n	800a024 <I2C_RequestMemoryWrite+0x190>
 8009f86:	f1b9 0f00 	cmp.w	r9, #0
 8009f8a:	d04b      	beq.n	800a024 <I2C_RequestMemoryWrite+0x190>
  while (__HAL_I2C_GET_FLAG(hi2c, Flag) == RESET)
 8009f8c:	6834      	ldr	r4, [r6, #0]
 8009f8e:	e79a      	b.n	8009ec6 <I2C_RequestMemoryWrite+0x32>
      SET_BIT(hi2c->Instance->CR1, I2C_CR1_STOP);
 8009f90:	6823      	ldr	r3, [r4, #0]
 8009f92:	f443 7300 	orr.w	r3, r3, #512	; 0x200
 8009f96:	6023      	str	r3, [r4, #0]
      hi2c->PreviousState       = I2C_STATE_NONE;
 8009f98:	2200      	movs	r2, #0
      __HAL_I2C_CLEAR_FLAG(hi2c, I2C_FLAG_AF);
 8009f9a:	f46f 6180 	mvn.w	r1, #1024	; 0x400
      hi2c->State               = HAL_I2C_STATE_READY;
 8009f9e:	2320      	movs	r3, #32
      __HAL_I2C_CLEAR_FLAG(hi2c, I2C_FLAG_AF);
 8009fa0:	6161      	str	r1, [r4, #20]
      hi2c->PreviousState       = I2C_STATE_NONE;
 8009fa2:	6332      	str	r2, [r6, #48]	; 0x30
      hi2c->State               = HAL_I2C_STATE_READY;
 8009fa4:	f886 303d 	strb.w	r3, [r6, #61]	; 0x3d
      hi2c->Mode                = HAL_I2C_MODE_NONE;
 8009fa8:	f886 203e 	strb.w	r2, [r6, #62]	; 0x3e
      hi2c->ErrorCode           |= HAL_I2C_ERROR_AF;
 8009fac:	6c33      	ldr	r3, [r6, #64]	; 0x40
      __HAL_UNLOCK(hi2c);
 8009fae:	f886 203c 	strb.w	r2, [r6, #60]	; 0x3c
      hi2c->ErrorCode           |= HAL_I2C_ERROR_AF;
 8009fb2:	f043 0304 	orr.w	r3, r3, #4
    return HAL_ERROR;
 8009fb6:	2001      	movs	r0, #1
      hi2c->ErrorCode           |= HAL_I2C_ERROR_AF;
 8009fb8:	6433      	str	r3, [r6, #64]	; 0x40
}
 8009fba:	b003      	add	sp, #12
 8009fbc:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
  if (MemAddSize == I2C_MEMADD_SIZE_8BIT)
 8009fc0:	f1b8 0f01 	cmp.w	r8, #1
 8009fc4:	d109      	bne.n	8009fda <I2C_RequestMemoryWrite+0x146>
    hi2c->Instance->DR = I2C_MEM_ADD_LSB(MemAddress);
 8009fc6:	b2ff      	uxtb	r7, r7
  return HAL_OK;
 8009fc8:	2000      	movs	r0, #0
    hi2c->Instance->DR = I2C_MEM_ADD_LSB(MemAddress);
 8009fca:	6127      	str	r7, [r4, #16]
}
 8009fcc:	b003      	add	sp, #12
 8009fce:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
      hi2c->ErrorCode = HAL_I2C_WRONG_START;
 8009fd2:	f44f 7300 	mov.w	r3, #512	; 0x200
 8009fd6:	6433      	str	r3, [r6, #64]	; 0x40
 8009fd8:	e7c5      	b.n	8009f66 <I2C_RequestMemoryWrite+0xd2>
    hi2c->Instance->DR = I2C_MEM_ADD_MSB(MemAddress);
 8009fda:	0a3b      	lsrs	r3, r7, #8
 8009fdc:	6123      	str	r3, [r4, #16]
  while (__HAL_I2C_GET_FLAG(hi2c, I2C_FLAG_TXE) == RESET)
 8009fde:	f1b9 3fff 	cmp.w	r9, #4294967295
 8009fe2:	d12e      	bne.n	800a042 <I2C_RequestMemoryWrite+0x1ae>
 8009fe4:	6963      	ldr	r3, [r4, #20]
 8009fe6:	0619      	lsls	r1, r3, #24
 8009fe8:	d4ed      	bmi.n	8009fc6 <I2C_RequestMemoryWrite+0x132>
  if (__HAL_I2C_GET_FLAG(hi2c, I2C_FLAG_AF) == SET)
 8009fea:	6963      	ldr	r3, [r4, #20]
 8009fec:	055a      	lsls	r2, r3, #21
 8009fee:	d5f9      	bpl.n	8009fe4 <I2C_RequestMemoryWrite+0x150>
 8009ff0:	e784      	b.n	8009efc <I2C_RequestMemoryWrite+0x68>
        SET_BIT(hi2c->Instance->CR1, I2C_CR1_STOP);
 8009ff2:	6832      	ldr	r2, [r6, #0]
 8009ff4:	6813      	ldr	r3, [r2, #0]
 8009ff6:	f443 7300 	orr.w	r3, r3, #512	; 0x200
      return HAL_ERROR;
 8009ffa:	2001      	movs	r0, #1
        SET_BIT(hi2c->Instance->CR1, I2C_CR1_STOP);
 8009ffc:	6013      	str	r3, [r2, #0]
 8009ffe:	e7b3      	b.n	8009f68 <I2C_RequestMemoryWrite+0xd4>
  while (__HAL_I2C_GET_FLAG(hi2c, I2C_FLAG_TXE) == RESET)
 800a000:	6963      	ldr	r3, [r4, #20]
 800a002:	061d      	lsls	r5, r3, #24
 800a004:	d4dc      	bmi.n	8009fc0 <I2C_RequestMemoryWrite+0x12c>
  if (__HAL_I2C_GET_FLAG(hi2c, I2C_FLAG_AF) == SET)
 800a006:	6963      	ldr	r3, [r4, #20]
 800a008:	0559      	lsls	r1, r3, #21
 800a00a:	f53f af77 	bmi.w	8009efc <I2C_RequestMemoryWrite+0x68>
      if (((HAL_GetTick() - Tickstart) > Timeout) || (Timeout == 0U))
 800a00e:	f7ff fb49 	bl	80096a4 <HAL_GetTick>
 800a012:	eba0 000b 	sub.w	r0, r0, fp
 800a016:	4581      	cmp	r9, r0
 800a018:	d325      	bcc.n	800a066 <I2C_RequestMemoryWrite+0x1d2>
 800a01a:	f1b9 0f00 	cmp.w	r9, #0
 800a01e:	d022      	beq.n	800a066 <I2C_RequestMemoryWrite+0x1d2>
  while (__HAL_I2C_GET_FLAG(hi2c, I2C_FLAG_TXE) == RESET)
 800a020:	6834      	ldr	r4, [r6, #0]
 800a022:	e761      	b.n	8009ee8 <I2C_RequestMemoryWrite+0x54>
        hi2c->PreviousState       = I2C_STATE_NONE;
 800a024:	2200      	movs	r2, #0
        hi2c->State               = HAL_I2C_STATE_READY;
 800a026:	2320      	movs	r3, #32
        hi2c->PreviousState       = I2C_STATE_NONE;
 800a028:	6332      	str	r2, [r6, #48]	; 0x30
        hi2c->State               = HAL_I2C_STATE_READY;
 800a02a:	f886 303d 	strb.w	r3, [r6, #61]	; 0x3d
        hi2c->Mode                = HAL_I2C_MODE_NONE;
 800a02e:	f886 203e 	strb.w	r2, [r6, #62]	; 0x3e
        hi2c->ErrorCode           |= HAL_I2C_ERROR_TIMEOUT;
 800a032:	6c33      	ldr	r3, [r6, #64]	; 0x40
        __HAL_UNLOCK(hi2c);
 800a034:	f886 203c 	strb.w	r2, [r6, #60]	; 0x3c
        hi2c->ErrorCode           |= HAL_I2C_ERROR_TIMEOUT;
 800a038:	f043 0320 	orr.w	r3, r3, #32
 800a03c:	6433      	str	r3, [r6, #64]	; 0x40
    return HAL_ERROR;
 800a03e:	2001      	movs	r0, #1
 800a040:	e792      	b.n	8009f68 <I2C_RequestMemoryWrite+0xd4>
  while (__HAL_I2C_GET_FLAG(hi2c, I2C_FLAG_TXE) == RESET)
 800a042:	6963      	ldr	r3, [r4, #20]
 800a044:	061b      	lsls	r3, r3, #24
 800a046:	d4be      	bmi.n	8009fc6 <I2C_RequestMemoryWrite+0x132>
  if (__HAL_I2C_GET_FLAG(hi2c, I2C_FLAG_AF) == SET)
 800a048:	6963      	ldr	r3, [r4, #20]
 800a04a:	0558      	lsls	r0, r3, #21
 800a04c:	f53f af56 	bmi.w	8009efc <I2C_RequestMemoryWrite+0x68>
      if (((HAL_GetTick() - Tickstart) > Timeout) || (Timeout == 0U))
 800a050:	f7ff fb28 	bl	80096a4 <HAL_GetTick>
 800a054:	eba0 000b 	sub.w	r0, r0, fp
 800a058:	4581      	cmp	r9, r0
 800a05a:	d304      	bcc.n	800a066 <I2C_RequestMemoryWrite+0x1d2>
 800a05c:	f1b9 0f00 	cmp.w	r9, #0
 800a060:	d001      	beq.n	800a066 <I2C_RequestMemoryWrite+0x1d2>
  while (__HAL_I2C_GET_FLAG(hi2c, I2C_FLAG_TXE) == RESET)
 800a062:	6834      	ldr	r4, [r6, #0]
 800a064:	e7bb      	b.n	8009fde <I2C_RequestMemoryWrite+0x14a>
        hi2c->PreviousState     = I2C_STATE_NONE;
 800a066:	2300      	movs	r3, #0
        hi2c->State             = HAL_I2C_STATE_READY;
 800a068:	2220      	movs	r2, #32
        hi2c->PreviousState     = I2C_STATE_NONE;
 800a06a:	6333      	str	r3, [r6, #48]	; 0x30
        hi2c->State             = HAL_I2C_STATE_READY;
 800a06c:	f886 203d 	strb.w	r2, [r6, #61]	; 0x3d
        hi2c->Mode              = HAL_I2C_MODE_NONE;
 800a070:	f886 303e 	strb.w	r3, [r6, #62]	; 0x3e
        hi2c->ErrorCode         |= HAL_I2C_ERROR_TIMEOUT;
 800a074:	6c33      	ldr	r3, [r6, #64]	; 0x40
 800a076:	4313      	orrs	r3, r2
 800a078:	6433      	str	r3, [r6, #64]	; 0x40
        return HAL_ERROR;
 800a07a:	e74d      	b.n	8009f18 <I2C_RequestMemoryWrite+0x84>

0800a07c <I2C_RequestMemoryRead>:
{
 800a07c:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
  SET_BIT(hi2c->Instance->CR1, I2C_CR1_ACK);
 800a080:	6804      	ldr	r4, [r0, #0]
{
 800a082:	4698      	mov	r8, r3
  SET_BIT(hi2c->Instance->CR1, I2C_CR1_ACK);
 800a084:	6823      	ldr	r3, [r4, #0]
 800a086:	f443 6380 	orr.w	r3, r3, #1024	; 0x400
 800a08a:	6023      	str	r3, [r4, #0]
  SET_BIT(hi2c->Instance->CR1, I2C_CR1_START);
 800a08c:	6823      	ldr	r3, [r4, #0]
{
 800a08e:	b083      	sub	sp, #12
  SET_BIT(hi2c->Instance->CR1, I2C_CR1_START);
 800a090:	f443 7380 	orr.w	r3, r3, #256	; 0x100
{
 800a094:	f8dd a030 	ldr.w	sl, [sp, #48]	; 0x30
 800a098:	f8dd 9034 	ldr.w	r9, [sp, #52]	; 0x34
  SET_BIT(hi2c->Instance->CR1, I2C_CR1_START);
 800a09c:	6023      	str	r3, [r4, #0]
{
 800a09e:	4606      	mov	r6, r0
 800a0a0:	468b      	mov	fp, r1
 800a0a2:	4617      	mov	r7, r2
 800a0a4:	f1ba 3fff 	cmp.w	sl, #4294967295
 800a0a8:	d13a      	bne.n	800a120 <I2C_RequestMemoryRead+0xa4>
  while (__HAL_I2C_GET_FLAG(hi2c, Flag) == Status)
 800a0aa:	6965      	ldr	r5, [r4, #20]
 800a0ac:	07eb      	lsls	r3, r5, #31
 800a0ae:	d5fc      	bpl.n	800a0aa <I2C_RequestMemoryRead+0x2e>
  hi2c->Instance->DR = I2C_7BIT_ADD_WRITE(DevAddress);
 800a0b0:	f00b 03fe 	and.w	r3, fp, #254	; 0xfe
 800a0b4:	6123      	str	r3, [r4, #16]
 800a0b6:	fa5f fb8b 	uxtb.w	fp, fp
 800a0ba:	f1ba 3fff 	cmp.w	sl, #4294967295
 800a0be:	d003      	beq.n	800a0c8 <I2C_RequestMemoryRead+0x4c>
 800a0c0:	e069      	b.n	800a196 <I2C_RequestMemoryRead+0x11a>
    if (__HAL_I2C_GET_FLAG(hi2c, I2C_FLAG_AF) == SET)
 800a0c2:	6965      	ldr	r5, [r4, #20]
 800a0c4:	056a      	lsls	r2, r5, #21
 800a0c6:	d44e      	bmi.n	800a166 <I2C_RequestMemoryRead+0xea>
  while (__HAL_I2C_GET_FLAG(hi2c, Flag) == RESET)
 800a0c8:	6965      	ldr	r5, [r4, #20]
 800a0ca:	07a9      	lsls	r1, r5, #30
 800a0cc:	d5f9      	bpl.n	800a0c2 <I2C_RequestMemoryRead+0x46>
  __HAL_I2C_CLEAR_ADDRFLAG(hi2c);
 800a0ce:	2300      	movs	r3, #0
 800a0d0:	9301      	str	r3, [sp, #4]
 800a0d2:	6963      	ldr	r3, [r4, #20]
 800a0d4:	9301      	str	r3, [sp, #4]
 800a0d6:	69a3      	ldr	r3, [r4, #24]
 800a0d8:	9301      	str	r3, [sp, #4]
 800a0da:	9b01      	ldr	r3, [sp, #4]
  while (__HAL_I2C_GET_FLAG(hi2c, I2C_FLAG_TXE) == RESET)
 800a0dc:	f1ba 3fff 	cmp.w	sl, #4294967295
 800a0e0:	f040 80bd 	bne.w	800a25e <I2C_RequestMemoryRead+0x1e2>
 800a0e4:	6963      	ldr	r3, [r4, #20]
 800a0e6:	0618      	lsls	r0, r3, #24
 800a0e8:	d468      	bmi.n	800a1bc <I2C_RequestMemoryRead+0x140>
  if (__HAL_I2C_GET_FLAG(hi2c, I2C_FLAG_AF) == SET)
 800a0ea:	6963      	ldr	r3, [r4, #20]
 800a0ec:	0559      	lsls	r1, r3, #21
 800a0ee:	d5f9      	bpl.n	800a0e4 <I2C_RequestMemoryRead+0x68>
    hi2c->PreviousState       = I2C_STATE_NONE;
 800a0f0:	2300      	movs	r3, #0
    __HAL_I2C_CLEAR_FLAG(hi2c, I2C_FLAG_AF);
 800a0f2:	f46f 6180 	mvn.w	r1, #1024	; 0x400
    hi2c->State               = HAL_I2C_STATE_READY;
 800a0f6:	2220      	movs	r2, #32
    __HAL_I2C_CLEAR_FLAG(hi2c, I2C_FLAG_AF);
 800a0f8:	6161      	str	r1, [r4, #20]
    hi2c->PreviousState       = I2C_STATE_NONE;
 800a0fa:	6333      	str	r3, [r6, #48]	; 0x30
    hi2c->State               = HAL_I2C_STATE_READY;
 800a0fc:	f886 203d 	strb.w	r2, [r6, #61]	; 0x3d
    hi2c->Mode                = HAL_I2C_MODE_NONE;
 800a100:	f886 303e 	strb.w	r3, [r6, #62]	; 0x3e
    hi2c->ErrorCode           |= HAL_I2C_ERROR_AF;
 800a104:	6c33      	ldr	r3, [r6, #64]	; 0x40
 800a106:	f043 0304 	orr.w	r3, r3, #4
 800a10a:	6433      	str	r3, [r6, #64]	; 0x40
    if (hi2c->ErrorCode == HAL_I2C_ERROR_AF)
 800a10c:	6c33      	ldr	r3, [r6, #64]	; 0x40
    __HAL_UNLOCK(hi2c);
 800a10e:	2200      	movs	r2, #0
    if (hi2c->ErrorCode == HAL_I2C_ERROR_AF)
 800a110:	2b04      	cmp	r3, #4
    __HAL_UNLOCK(hi2c);
 800a112:	f886 203c 	strb.w	r2, [r6, #60]	; 0x3c
    if (hi2c->ErrorCode == HAL_I2C_ERROR_AF)
 800a116:	d070      	beq.n	800a1fa <I2C_RequestMemoryRead+0x17e>
    return HAL_ERROR;
 800a118:	2001      	movs	r0, #1
}
 800a11a:	b003      	add	sp, #12
 800a11c:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
  while (__HAL_I2C_GET_FLAG(hi2c, Flag) == Status)
 800a120:	6963      	ldr	r3, [r4, #20]
 800a122:	07dd      	lsls	r5, r3, #31
 800a124:	d4c4      	bmi.n	800a0b0 <I2C_RequestMemoryRead+0x34>
      if (((HAL_GetTick() - Tickstart) > Timeout) || (Timeout == 0U))
 800a126:	f7ff fabd 	bl	80096a4 <HAL_GetTick>
 800a12a:	eba0 0009 	sub.w	r0, r0, r9
 800a12e:	4582      	cmp	sl, r0
 800a130:	d304      	bcc.n	800a13c <I2C_RequestMemoryRead+0xc0>
 800a132:	f1ba 0f00 	cmp.w	sl, #0
 800a136:	d001      	beq.n	800a13c <I2C_RequestMemoryRead+0xc0>
    if (READ_BIT(hi2c->Instance->CR1, I2C_CR1_START) == I2C_CR1_START)
 800a138:	6834      	ldr	r4, [r6, #0]
 800a13a:	e7b3      	b.n	800a0a4 <I2C_RequestMemoryRead+0x28>
        hi2c->PreviousState     = I2C_STATE_NONE;
 800a13c:	2300      	movs	r3, #0
        hi2c->State             = HAL_I2C_STATE_READY;
 800a13e:	2220      	movs	r2, #32
        hi2c->PreviousState     = I2C_STATE_NONE;
 800a140:	6333      	str	r3, [r6, #48]	; 0x30
        hi2c->State             = HAL_I2C_STATE_READY;
 800a142:	f886 203d 	strb.w	r2, [r6, #61]	; 0x3d
        hi2c->Mode              = HAL_I2C_MODE_NONE;
 800a146:	f886 303e 	strb.w	r3, [r6, #62]	; 0x3e
        hi2c->ErrorCode         |= HAL_I2C_ERROR_TIMEOUT;
 800a14a:	6c32      	ldr	r2, [r6, #64]	; 0x40
    if (READ_BIT(hi2c->Instance->CR1, I2C_CR1_START) == I2C_CR1_START)
 800a14c:	6831      	ldr	r1, [r6, #0]
        __HAL_UNLOCK(hi2c);
 800a14e:	f886 303c 	strb.w	r3, [r6, #60]	; 0x3c
        hi2c->ErrorCode         |= HAL_I2C_ERROR_TIMEOUT;
 800a152:	f042 0220 	orr.w	r2, r2, #32
 800a156:	6432      	str	r2, [r6, #64]	; 0x40
    if (READ_BIT(hi2c->Instance->CR1, I2C_CR1_START) == I2C_CR1_START)
 800a158:	680b      	ldr	r3, [r1, #0]
 800a15a:	05dc      	lsls	r4, r3, #23
 800a15c:	d43d      	bmi.n	800a1da <I2C_RequestMemoryRead+0x15e>
    return HAL_TIMEOUT;
 800a15e:	2003      	movs	r0, #3
}
 800a160:	b003      	add	sp, #12
 800a162:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
      SET_BIT(hi2c->Instance->CR1, I2C_CR1_STOP);
 800a166:	6823      	ldr	r3, [r4, #0]
 800a168:	f443 7300 	orr.w	r3, r3, #512	; 0x200
 800a16c:	6023      	str	r3, [r4, #0]
      hi2c->PreviousState       = I2C_STATE_NONE;
 800a16e:	2200      	movs	r2, #0
      __HAL_I2C_CLEAR_FLAG(hi2c, I2C_FLAG_AF);
 800a170:	f46f 6180 	mvn.w	r1, #1024	; 0x400
      hi2c->State               = HAL_I2C_STATE_READY;
 800a174:	2320      	movs	r3, #32
      __HAL_I2C_CLEAR_FLAG(hi2c, I2C_FLAG_AF);
 800a176:	6161      	str	r1, [r4, #20]
      hi2c->PreviousState       = I2C_STATE_NONE;
 800a178:	6332      	str	r2, [r6, #48]	; 0x30
      hi2c->State               = HAL_I2C_STATE_READY;
 800a17a:	f886 303d 	strb.w	r3, [r6, #61]	; 0x3d
      hi2c->Mode                = HAL_I2C_MODE_NONE;
 800a17e:	f886 203e 	strb.w	r2, [r6, #62]	; 0x3e
      hi2c->ErrorCode           |= HAL_I2C_ERROR_AF;
 800a182:	6c33      	ldr	r3, [r6, #64]	; 0x40
      __HAL_UNLOCK(hi2c);
 800a184:	f886 203c 	strb.w	r2, [r6, #60]	; 0x3c
      hi2c->ErrorCode           |= HAL_I2C_ERROR_AF;
 800a188:	f043 0304 	orr.w	r3, r3, #4
    return HAL_ERROR;
 800a18c:	2001      	movs	r0, #1
      hi2c->ErrorCode           |= HAL_I2C_ERROR_AF;
 800a18e:	6433      	str	r3, [r6, #64]	; 0x40
}
 800a190:	b003      	add	sp, #12
 800a192:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
  while (__HAL_I2C_GET_FLAG(hi2c, Flag) == RESET)
 800a196:	6963      	ldr	r3, [r4, #20]
 800a198:	079b      	lsls	r3, r3, #30
 800a19a:	d498      	bmi.n	800a0ce <I2C_RequestMemoryRead+0x52>
    if (__HAL_I2C_GET_FLAG(hi2c, I2C_FLAG_AF) == SET)
 800a19c:	6963      	ldr	r3, [r4, #20]
 800a19e:	0558      	lsls	r0, r3, #21
 800a1a0:	d4e1      	bmi.n	800a166 <I2C_RequestMemoryRead+0xea>
      if (((HAL_GetTick() - Tickstart) > Timeout) || (Timeout == 0U))
 800a1a2:	f7ff fa7f 	bl	80096a4 <HAL_GetTick>
 800a1a6:	eba0 0009 	sub.w	r0, r0, r9
 800a1aa:	4582      	cmp	sl, r0
 800a1ac:	f0c0 808f 	bcc.w	800a2ce <I2C_RequestMemoryRead+0x252>
 800a1b0:	f1ba 0f00 	cmp.w	sl, #0
 800a1b4:	f000 808b 	beq.w	800a2ce <I2C_RequestMemoryRead+0x252>
  while (__HAL_I2C_GET_FLAG(hi2c, Flag) == RESET)
 800a1b8:	6834      	ldr	r4, [r6, #0]
 800a1ba:	e77e      	b.n	800a0ba <I2C_RequestMemoryRead+0x3e>
  if (MemAddSize == I2C_MEMADD_SIZE_8BIT)
 800a1bc:	f1b8 0f01 	cmp.w	r8, #1
 800a1c0:	d10f      	bne.n	800a1e2 <I2C_RequestMemoryRead+0x166>
    hi2c->Instance->DR = I2C_MEM_ADD_LSB(MemAddress);
 800a1c2:	b2ff      	uxtb	r7, r7
 800a1c4:	6127      	str	r7, [r4, #16]
 800a1c6:	f1ba 3fff 	cmp.w	sl, #4294967295
 800a1ca:	d16e      	bne.n	800a2aa <I2C_RequestMemoryRead+0x22e>
  while (__HAL_I2C_GET_FLAG(hi2c, I2C_FLAG_TXE) == RESET)
 800a1cc:	6963      	ldr	r3, [r4, #20]
 800a1ce:	061b      	lsls	r3, r3, #24
 800a1d0:	d41a      	bmi.n	800a208 <I2C_RequestMemoryRead+0x18c>
  if (__HAL_I2C_GET_FLAG(hi2c, I2C_FLAG_AF) == SET)
 800a1d2:	6963      	ldr	r3, [r4, #20]
 800a1d4:	055f      	lsls	r7, r3, #21
 800a1d6:	d5f9      	bpl.n	800a1cc <I2C_RequestMemoryRead+0x150>
 800a1d8:	e78a      	b.n	800a0f0 <I2C_RequestMemoryRead+0x74>
      hi2c->ErrorCode = HAL_I2C_WRONG_START;
 800a1da:	f44f 7300 	mov.w	r3, #512	; 0x200
 800a1de:	6433      	str	r3, [r6, #64]	; 0x40
 800a1e0:	e7bd      	b.n	800a15e <I2C_RequestMemoryRead+0xe2>
    hi2c->Instance->DR = I2C_MEM_ADD_MSB(MemAddress);
 800a1e2:	0a3b      	lsrs	r3, r7, #8
 800a1e4:	6123      	str	r3, [r4, #16]
  while (__HAL_I2C_GET_FLAG(hi2c, I2C_FLAG_TXE) == RESET)
 800a1e6:	f1ba 3fff 	cmp.w	sl, #4294967295
 800a1ea:	d17e      	bne.n	800a2ea <I2C_RequestMemoryRead+0x26e>
 800a1ec:	6963      	ldr	r3, [r4, #20]
 800a1ee:	061d      	lsls	r5, r3, #24
 800a1f0:	d4e7      	bmi.n	800a1c2 <I2C_RequestMemoryRead+0x146>
  if (__HAL_I2C_GET_FLAG(hi2c, I2C_FLAG_AF) == SET)
 800a1f2:	6963      	ldr	r3, [r4, #20]
 800a1f4:	0558      	lsls	r0, r3, #21
 800a1f6:	d5f9      	bpl.n	800a1ec <I2C_RequestMemoryRead+0x170>
 800a1f8:	e77a      	b.n	800a0f0 <I2C_RequestMemoryRead+0x74>
      SET_BIT(hi2c->Instance->CR1, I2C_CR1_STOP);
 800a1fa:	6832      	ldr	r2, [r6, #0]
 800a1fc:	6813      	ldr	r3, [r2, #0]
 800a1fe:	f443 7300 	orr.w	r3, r3, #512	; 0x200
    return HAL_ERROR;
 800a202:	2001      	movs	r0, #1
      SET_BIT(hi2c->Instance->CR1, I2C_CR1_STOP);
 800a204:	6013      	str	r3, [r2, #0]
 800a206:	e7ab      	b.n	800a160 <I2C_RequestMemoryRead+0xe4>
  SET_BIT(hi2c->Instance->CR1, I2C_CR1_START);
 800a208:	6823      	ldr	r3, [r4, #0]
 800a20a:	f443 7380 	orr.w	r3, r3, #256	; 0x100
 800a20e:	6023      	str	r3, [r4, #0]
static HAL_StatusTypeDef I2C_WaitOnFlagUntilTimeout(I2C_HandleTypeDef *hi2c, uint32_t Flag, FlagStatus Status, uint32_t Timeout, uint32_t Tickstart)
 800a210:	f1ba 3fff 	cmp.w	sl, #4294967295
 800a214:	d113      	bne.n	800a23e <I2C_RequestMemoryRead+0x1c2>
  while (__HAL_I2C_GET_FLAG(hi2c, Flag) == Status)
 800a216:	6963      	ldr	r3, [r4, #20]
 800a218:	07d8      	lsls	r0, r3, #31
 800a21a:	d5fc      	bpl.n	800a216 <I2C_RequestMemoryRead+0x19a>
  hi2c->Instance->DR = I2C_7BIT_ADD_READ(DevAddress);
 800a21c:	f04b 0301 	orr.w	r3, fp, #1
 800a220:	6123      	str	r3, [r4, #16]
static HAL_StatusTypeDef I2C_WaitOnMasterAddressFlagUntilTimeout(I2C_HandleTypeDef *hi2c, uint32_t Flag, uint32_t Timeout, uint32_t Tickstart)
 800a222:	f1ba 3fff 	cmp.w	sl, #4294967295
 800a226:	d003      	beq.n	800a230 <I2C_RequestMemoryRead+0x1b4>
 800a228:	e02b      	b.n	800a282 <I2C_RequestMemoryRead+0x206>
    if (__HAL_I2C_GET_FLAG(hi2c, I2C_FLAG_AF) == SET)
 800a22a:	6963      	ldr	r3, [r4, #20]
 800a22c:	055b      	lsls	r3, r3, #21
 800a22e:	d49a      	bmi.n	800a166 <I2C_RequestMemoryRead+0xea>
  while (__HAL_I2C_GET_FLAG(hi2c, Flag) == RESET)
 800a230:	6963      	ldr	r3, [r4, #20]
 800a232:	43db      	mvns	r3, r3
 800a234:	f013 0302 	ands.w	r3, r3, #2
 800a238:	d1f7      	bne.n	800a22a <I2C_RequestMemoryRead+0x1ae>
  return HAL_OK;
 800a23a:	4618      	mov	r0, r3
 800a23c:	e790      	b.n	800a160 <I2C_RequestMemoryRead+0xe4>
  while (__HAL_I2C_GET_FLAG(hi2c, Flag) == Status)
 800a23e:	6963      	ldr	r3, [r4, #20]
 800a240:	07d9      	lsls	r1, r3, #31
 800a242:	d4eb      	bmi.n	800a21c <I2C_RequestMemoryRead+0x1a0>
      if (((HAL_GetTick() - Tickstart) > Timeout) || (Timeout == 0U))
 800a244:	f7ff fa2e 	bl	80096a4 <HAL_GetTick>
 800a248:	eba0 0009 	sub.w	r0, r0, r9
 800a24c:	4582      	cmp	sl, r0
 800a24e:	f4ff af75 	bcc.w	800a13c <I2C_RequestMemoryRead+0xc0>
 800a252:	f1ba 0f00 	cmp.w	sl, #0
 800a256:	f43f af71 	beq.w	800a13c <I2C_RequestMemoryRead+0xc0>
    if (READ_BIT(hi2c->Instance->CR1, I2C_CR1_START) == I2C_CR1_START)
 800a25a:	6834      	ldr	r4, [r6, #0]
 800a25c:	e7d8      	b.n	800a210 <I2C_RequestMemoryRead+0x194>
  while (__HAL_I2C_GET_FLAG(hi2c, I2C_FLAG_TXE) == RESET)
 800a25e:	6963      	ldr	r3, [r4, #20]
 800a260:	061a      	lsls	r2, r3, #24
 800a262:	d4ab      	bmi.n	800a1bc <I2C_RequestMemoryRead+0x140>
  if (__HAL_I2C_GET_FLAG(hi2c, I2C_FLAG_AF) == SET)
 800a264:	6963      	ldr	r3, [r4, #20]
 800a266:	055d      	lsls	r5, r3, #21
 800a268:	f53f af42 	bmi.w	800a0f0 <I2C_RequestMemoryRead+0x74>
      if (((HAL_GetTick() - Tickstart) > Timeout) || (Timeout == 0U))
 800a26c:	f7ff fa1a 	bl	80096a4 <HAL_GetTick>
 800a270:	eba0 0009 	sub.w	r0, r0, r9
 800a274:	4582      	cmp	sl, r0
 800a276:	d34b      	bcc.n	800a310 <I2C_RequestMemoryRead+0x294>
 800a278:	f1ba 0f00 	cmp.w	sl, #0
 800a27c:	d048      	beq.n	800a310 <I2C_RequestMemoryRead+0x294>
  while (__HAL_I2C_GET_FLAG(hi2c, I2C_FLAG_TXE) == RESET)
 800a27e:	6834      	ldr	r4, [r6, #0]
 800a280:	e72c      	b.n	800a0dc <I2C_RequestMemoryRead+0x60>
  while (__HAL_I2C_GET_FLAG(hi2c, Flag) == RESET)
 800a282:	6963      	ldr	r3, [r4, #20]
 800a284:	43db      	mvns	r3, r3
 800a286:	f013 0302 	ands.w	r3, r3, #2
 800a28a:	d0d6      	beq.n	800a23a <I2C_RequestMemoryRead+0x1be>
    if (__HAL_I2C_GET_FLAG(hi2c, I2C_FLAG_AF) == SET)
 800a28c:	6963      	ldr	r3, [r4, #20]
 800a28e:	055a      	lsls	r2, r3, #21
 800a290:	f53f af69 	bmi.w	800a166 <I2C_RequestMemoryRead+0xea>
      if (((HAL_GetTick() - Tickstart) > Timeout) || (Timeout == 0U))
 800a294:	f7ff fa06 	bl	80096a4 <HAL_GetTick>
 800a298:	eba0 0009 	sub.w	r0, r0, r9
 800a29c:	4582      	cmp	sl, r0
 800a29e:	d316      	bcc.n	800a2ce <I2C_RequestMemoryRead+0x252>
 800a2a0:	f1ba 0f00 	cmp.w	sl, #0
 800a2a4:	d013      	beq.n	800a2ce <I2C_RequestMemoryRead+0x252>
  while (__HAL_I2C_GET_FLAG(hi2c, Flag) == RESET)
 800a2a6:	6834      	ldr	r4, [r6, #0]
 800a2a8:	e7bb      	b.n	800a222 <I2C_RequestMemoryRead+0x1a6>
  while (__HAL_I2C_GET_FLAG(hi2c, I2C_FLAG_TXE) == RESET)
 800a2aa:	6963      	ldr	r3, [r4, #20]
 800a2ac:	061d      	lsls	r5, r3, #24
 800a2ae:	d4ab      	bmi.n	800a208 <I2C_RequestMemoryRead+0x18c>
  if (__HAL_I2C_GET_FLAG(hi2c, I2C_FLAG_AF) == SET)
 800a2b0:	6963      	ldr	r3, [r4, #20]
 800a2b2:	055a      	lsls	r2, r3, #21
 800a2b4:	f53f af1c 	bmi.w	800a0f0 <I2C_RequestMemoryRead+0x74>
      if (((HAL_GetTick() - Tickstart) > Timeout) || (Timeout == 0U))
 800a2b8:	f7ff f9f4 	bl	80096a4 <HAL_GetTick>
 800a2bc:	eba0 0009 	sub.w	r0, r0, r9
 800a2c0:	4582      	cmp	sl, r0
 800a2c2:	d325      	bcc.n	800a310 <I2C_RequestMemoryRead+0x294>
 800a2c4:	f1ba 0f00 	cmp.w	sl, #0
 800a2c8:	d022      	beq.n	800a310 <I2C_RequestMemoryRead+0x294>
  while (__HAL_I2C_GET_FLAG(hi2c, I2C_FLAG_TXE) == RESET)
 800a2ca:	6834      	ldr	r4, [r6, #0]
 800a2cc:	e77b      	b.n	800a1c6 <I2C_RequestMemoryRead+0x14a>
        hi2c->PreviousState       = I2C_STATE_NONE;
 800a2ce:	2200      	movs	r2, #0
        hi2c->State               = HAL_I2C_STATE_READY;
 800a2d0:	2320      	movs	r3, #32
        hi2c->PreviousState       = I2C_STATE_NONE;
 800a2d2:	6332      	str	r2, [r6, #48]	; 0x30
        hi2c->State               = HAL_I2C_STATE_READY;
 800a2d4:	f886 303d 	strb.w	r3, [r6, #61]	; 0x3d
        hi2c->Mode                = HAL_I2C_MODE_NONE;
 800a2d8:	f886 203e 	strb.w	r2, [r6, #62]	; 0x3e
        hi2c->ErrorCode           |= HAL_I2C_ERROR_TIMEOUT;
 800a2dc:	6c33      	ldr	r3, [r6, #64]	; 0x40
        __HAL_UNLOCK(hi2c);
 800a2de:	f886 203c 	strb.w	r2, [r6, #60]	; 0x3c
        hi2c->ErrorCode           |= HAL_I2C_ERROR_TIMEOUT;
 800a2e2:	f043 0320 	orr.w	r3, r3, #32
 800a2e6:	6433      	str	r3, [r6, #64]	; 0x40
 800a2e8:	e716      	b.n	800a118 <I2C_RequestMemoryRead+0x9c>
  while (__HAL_I2C_GET_FLAG(hi2c, I2C_FLAG_TXE) == RESET)
 800a2ea:	6963      	ldr	r3, [r4, #20]
 800a2ec:	0619      	lsls	r1, r3, #24
 800a2ee:	f53f af68 	bmi.w	800a1c2 <I2C_RequestMemoryRead+0x146>
  if (__HAL_I2C_GET_FLAG(hi2c, I2C_FLAG_AF) == SET)
 800a2f2:	6963      	ldr	r3, [r4, #20]
 800a2f4:	055b      	lsls	r3, r3, #21
 800a2f6:	f53f aefb 	bmi.w	800a0f0 <I2C_RequestMemoryRead+0x74>
      if (((HAL_GetTick() - Tickstart) > Timeout) || (Timeout == 0U))
 800a2fa:	f7ff f9d3 	bl	80096a4 <HAL_GetTick>
 800a2fe:	eba0 0009 	sub.w	r0, r0, r9
 800a302:	4582      	cmp	sl, r0
 800a304:	d304      	bcc.n	800a310 <I2C_RequestMemoryRead+0x294>
 800a306:	f1ba 0f00 	cmp.w	sl, #0
 800a30a:	d001      	beq.n	800a310 <I2C_RequestMemoryRead+0x294>
  while (__HAL_I2C_GET_FLAG(hi2c, I2C_FLAG_TXE) == RESET)
 800a30c:	6834      	ldr	r4, [r6, #0]
 800a30e:	e76a      	b.n	800a1e6 <I2C_RequestMemoryRead+0x16a>
        hi2c->PreviousState     = I2C_STATE_NONE;
 800a310:	2300      	movs	r3, #0
        hi2c->State             = HAL_I2C_STATE_READY;
 800a312:	2220      	movs	r2, #32
        hi2c->PreviousState     = I2C_STATE_NONE;
 800a314:	6333      	str	r3, [r6, #48]	; 0x30
        hi2c->State             = HAL_I2C_STATE_READY;
 800a316:	f886 203d 	strb.w	r2, [r6, #61]	; 0x3d
        hi2c->Mode              = HAL_I2C_MODE_NONE;
 800a31a:	f886 303e 	strb.w	r3, [r6, #62]	; 0x3e
        hi2c->ErrorCode         |= HAL_I2C_ERROR_TIMEOUT;
 800a31e:	6c33      	ldr	r3, [r6, #64]	; 0x40
 800a320:	4313      	orrs	r3, r2
 800a322:	6433      	str	r3, [r6, #64]	; 0x40
        return HAL_ERROR;
 800a324:	e6f2      	b.n	800a10c <I2C_RequestMemoryRead+0x90>
 800a326:	bf00      	nop

0800a328 <HAL_I2C_Init>:
  if (hi2c == NULL)
 800a328:	2800      	cmp	r0, #0
 800a32a:	f000 80b9 	beq.w	800a4a0 <HAL_I2C_Init+0x178>
{
 800a32e:	b570      	push	{r4, r5, r6, lr}
  if (hi2c->State == HAL_I2C_STATE_RESET)
 800a330:	f890 303d 	ldrb.w	r3, [r0, #61]	; 0x3d
 800a334:	4604      	mov	r4, r0
 800a336:	f003 02ff 	and.w	r2, r3, #255	; 0xff
 800a33a:	2b00      	cmp	r3, #0
 800a33c:	f000 8098 	beq.w	800a470 <HAL_I2C_Init+0x148>
  __HAL_I2C_DISABLE(hi2c);
 800a340:	6823      	ldr	r3, [r4, #0]
  hi2c->State = HAL_I2C_STATE_BUSY;
 800a342:	2224      	movs	r2, #36	; 0x24
 800a344:	f884 203d 	strb.w	r2, [r4, #61]	; 0x3d
  __HAL_I2C_DISABLE(hi2c);
 800a348:	681a      	ldr	r2, [r3, #0]
 800a34a:	f022 0201 	bic.w	r2, r2, #1
 800a34e:	601a      	str	r2, [r3, #0]
  hi2c->Instance->CR1 |= I2C_CR1_SWRST;
 800a350:	681a      	ldr	r2, [r3, #0]
 800a352:	f442 4200 	orr.w	r2, r2, #32768	; 0x8000
 800a356:	601a      	str	r2, [r3, #0]
  hi2c->Instance->CR1 &= ~I2C_CR1_SWRST;
 800a358:	681a      	ldr	r2, [r3, #0]
 800a35a:	f422 4200 	bic.w	r2, r2, #32768	; 0x8000
 800a35e:	601a      	str	r2, [r3, #0]
  pclk1 = HAL_RCC_GetPCLK1Freq();
 800a360:	f001 fe70 	bl	800c044 <HAL_RCC_GetPCLK1Freq>
  if (I2C_MIN_PCLK_FREQ(pclk1, hi2c->Init.ClockSpeed) == 1U)
 800a364:	6865      	ldr	r5, [r4, #4]
 800a366:	4b4f      	ldr	r3, [pc, #316]	; (800a4a4 <HAL_I2C_Init+0x17c>)
 800a368:	429d      	cmp	r5, r3
 800a36a:	d84f      	bhi.n	800a40c <HAL_I2C_Init+0xe4>
 800a36c:	4b4e      	ldr	r3, [pc, #312]	; (800a4a8 <HAL_I2C_Init+0x180>)
 800a36e:	4298      	cmp	r0, r3
 800a370:	d97c      	bls.n	800a46c <HAL_I2C_Init+0x144>
  freqrange = I2C_FREQRANGE(pclk1);
 800a372:	4b4e      	ldr	r3, [pc, #312]	; (800a4ac <HAL_I2C_Init+0x184>)
  MODIFY_REG(hi2c->Instance->CCR, (I2C_CCR_FS | I2C_CCR_DUTY | I2C_CCR_CCR), I2C_SPEED(pclk1, hi2c->Init.ClockSpeed, hi2c->Init.DutyCycle));
 800a374:	006a      	lsls	r2, r5, #1
  freqrange = I2C_FREQRANGE(pclk1);
 800a376:	fba3 3500 	umull	r3, r5, r3, r0
  MODIFY_REG(hi2c->Instance->CCR, (I2C_CCR_FS | I2C_CCR_DUTY | I2C_CCR_CCR), I2C_SPEED(pclk1, hi2c->Init.ClockSpeed, hi2c->Init.DutyCycle));
 800a37a:	1e43      	subs	r3, r0, #1
 800a37c:	fbb3 f3f2 	udiv	r3, r3, r2
  MODIFY_REG(hi2c->Instance->CR2, I2C_CR2_FREQ, freqrange);
 800a380:	6822      	ldr	r2, [r4, #0]
 800a382:	6851      	ldr	r1, [r2, #4]
 800a384:	f021 013f 	bic.w	r1, r1, #63	; 0x3f
 800a388:	ea41 4195 	orr.w	r1, r1, r5, lsr #18
 800a38c:	6051      	str	r1, [r2, #4]
  MODIFY_REG(hi2c->Instance->TRISE, I2C_TRISE_TRISE, I2C_RISE_TIME(freqrange, hi2c->Init.ClockSpeed));
 800a38e:	6a11      	ldr	r1, [r2, #32]
  freqrange = I2C_FREQRANGE(pclk1);
 800a390:	ea4f 4c95 	mov.w	ip, r5, lsr #18
  MODIFY_REG(hi2c->Instance->TRISE, I2C_TRISE_TRISE, I2C_RISE_TIME(freqrange, hi2c->Init.ClockSpeed));
 800a394:	f10c 0c01 	add.w	ip, ip, #1
 800a398:	f021 013f 	bic.w	r1, r1, #63	; 0x3f
 800a39c:	ea41 010c 	orr.w	r1, r1, ip
 800a3a0:	6211      	str	r1, [r2, #32]
  MODIFY_REG(hi2c->Instance->CCR, (I2C_CCR_FS | I2C_CCR_DUTY | I2C_CCR_CCR), I2C_SPEED(pclk1, hi2c->Init.ClockSpeed, hi2c->Init.DutyCycle));
 800a3a2:	69d1      	ldr	r1, [r2, #28]
 800a3a4:	f640 70fc 	movw	r0, #4092	; 0xffc
 800a3a8:	3301      	adds	r3, #1
 800a3aa:	f421 414f 	bic.w	r1, r1, #52992	; 0xcf00
 800a3ae:	4203      	tst	r3, r0
 800a3b0:	f021 01ff 	bic.w	r1, r1, #255	; 0xff
 800a3b4:	d161      	bne.n	800a47a <HAL_I2C_Init+0x152>
 800a3b6:	2304      	movs	r3, #4
 800a3b8:	430b      	orrs	r3, r1
 800a3ba:	61d3      	str	r3, [r2, #28]
  MODIFY_REG(hi2c->Instance->CR1, (I2C_CR1_ENGC | I2C_CR1_NOSTRETCH), (hi2c->Init.GeneralCallMode | hi2c->Init.NoStretchMode));
 800a3bc:	e9d4 3007 	ldrd	r3, r0, [r4, #28]
 800a3c0:	6811      	ldr	r1, [r2, #0]
 800a3c2:	4303      	orrs	r3, r0
 800a3c4:	f021 01c0 	bic.w	r1, r1, #192	; 0xc0
 800a3c8:	430b      	orrs	r3, r1
 800a3ca:	6013      	str	r3, [r2, #0]
  MODIFY_REG(hi2c->Instance->OAR1, (I2C_OAR1_ADDMODE | I2C_OAR1_ADD8_9 | I2C_OAR1_ADD1_7 | I2C_OAR1_ADD0), (hi2c->Init.AddressingMode | hi2c->Init.OwnAddress1));
 800a3cc:	6891      	ldr	r1, [r2, #8]
 800a3ce:	e9d4 0303 	ldrd	r0, r3, [r4, #12]
 800a3d2:	f421 4103 	bic.w	r1, r1, #33536	; 0x8300
 800a3d6:	4303      	orrs	r3, r0
 800a3d8:	f021 01ff 	bic.w	r1, r1, #255	; 0xff
 800a3dc:	430b      	orrs	r3, r1
 800a3de:	6093      	str	r3, [r2, #8]
  MODIFY_REG(hi2c->Instance->OAR2, (I2C_OAR2_ENDUAL | I2C_OAR2_ADD2), (hi2c->Init.DualAddressMode | hi2c->Init.OwnAddress2));
 800a3e0:	e9d4 3005 	ldrd	r3, r0, [r4, #20]
 800a3e4:	68d1      	ldr	r1, [r2, #12]
 800a3e6:	4303      	orrs	r3, r0
 800a3e8:	f021 01ff 	bic.w	r1, r1, #255	; 0xff
 800a3ec:	430b      	orrs	r3, r1
 800a3ee:	60d3      	str	r3, [r2, #12]
  __HAL_I2C_ENABLE(hi2c);
 800a3f0:	6811      	ldr	r1, [r2, #0]
  hi2c->ErrorCode = HAL_I2C_ERROR_NONE;
 800a3f2:	2300      	movs	r3, #0
  __HAL_I2C_ENABLE(hi2c);
 800a3f4:	f041 0101 	orr.w	r1, r1, #1
  hi2c->State = HAL_I2C_STATE_READY;
 800a3f8:	2020      	movs	r0, #32
  __HAL_I2C_ENABLE(hi2c);
 800a3fa:	6011      	str	r1, [r2, #0]
  hi2c->ErrorCode = HAL_I2C_ERROR_NONE;
 800a3fc:	6423      	str	r3, [r4, #64]	; 0x40
  hi2c->State = HAL_I2C_STATE_READY;
 800a3fe:	f884 003d 	strb.w	r0, [r4, #61]	; 0x3d
  hi2c->PreviousState = I2C_STATE_NONE;
 800a402:	6323      	str	r3, [r4, #48]	; 0x30
  hi2c->Mode = HAL_I2C_MODE_NONE;
 800a404:	f884 303e 	strb.w	r3, [r4, #62]	; 0x3e
  return HAL_OK;
 800a408:	4618      	mov	r0, r3
}
 800a40a:	bd70      	pop	{r4, r5, r6, pc}
  if (I2C_MIN_PCLK_FREQ(pclk1, hi2c->Init.ClockSpeed) == 1U)
 800a40c:	4b28      	ldr	r3, [pc, #160]	; (800a4b0 <HAL_I2C_Init+0x188>)
 800a40e:	4298      	cmp	r0, r3
 800a410:	d92c      	bls.n	800a46c <HAL_I2C_Init+0x144>
  MODIFY_REG(hi2c->Instance->CR2, I2C_CR2_FREQ, freqrange);
 800a412:	6822      	ldr	r2, [r4, #0]
  freqrange = I2C_FREQRANGE(pclk1);
 800a414:	4b25      	ldr	r3, [pc, #148]	; (800a4ac <HAL_I2C_Init+0x184>)
  MODIFY_REG(hi2c->Instance->CR2, I2C_CR2_FREQ, freqrange);
 800a416:	6851      	ldr	r1, [r2, #4]
  MODIFY_REG(hi2c->Instance->TRISE, I2C_TRISE_TRISE, I2C_RISE_TIME(freqrange, hi2c->Init.ClockSpeed));
 800a418:	4e26      	ldr	r6, [pc, #152]	; (800a4b4 <HAL_I2C_Init+0x18c>)
  freqrange = I2C_FREQRANGE(pclk1);
 800a41a:	fba3 3c00 	umull	r3, ip, r3, r0
  MODIFY_REG(hi2c->Instance->CR2, I2C_CR2_FREQ, freqrange);
 800a41e:	f021 013f 	bic.w	r1, r1, #63	; 0x3f
 800a422:	ea41 419c 	orr.w	r1, r1, ip, lsr #18
 800a426:	6051      	str	r1, [r2, #4]
  freqrange = I2C_FREQRANGE(pclk1);
 800a428:	ea4f 439c 	mov.w	r3, ip, lsr #18
  MODIFY_REG(hi2c->Instance->TRISE, I2C_TRISE_TRISE, I2C_RISE_TIME(freqrange, hi2c->Init.ClockSpeed));
 800a42c:	f44f 7196 	mov.w	r1, #300	; 0x12c
 800a430:	fb01 f303 	mul.w	r3, r1, r3
 800a434:	fba6 6303 	umull	r6, r3, r6, r3
 800a438:	6a11      	ldr	r1, [r2, #32]
 800a43a:	099b      	lsrs	r3, r3, #6
 800a43c:	f021 013f 	bic.w	r1, r1, #63	; 0x3f
 800a440:	3301      	adds	r3, #1
 800a442:	430b      	orrs	r3, r1
 800a444:	6213      	str	r3, [r2, #32]
  MODIFY_REG(hi2c->Instance->CCR, (I2C_CCR_FS | I2C_CCR_DUTY | I2C_CCR_CCR), I2C_SPEED(pclk1, hi2c->Init.ClockSpeed, hi2c->Init.DutyCycle));
 800a446:	69d1      	ldr	r1, [r2, #28]
 800a448:	68a3      	ldr	r3, [r4, #8]
 800a44a:	f421 414f 	bic.w	r1, r1, #52992	; 0xcf00
 800a44e:	f021 01ff 	bic.w	r1, r1, #255	; 0xff
 800a452:	b9ab      	cbnz	r3, 800a480 <HAL_I2C_Init+0x158>
 800a454:	1e43      	subs	r3, r0, #1
 800a456:	eb05 0545 	add.w	r5, r5, r5, lsl #1
 800a45a:	fbb3 f3f5 	udiv	r3, r3, r5
 800a45e:	3301      	adds	r3, #1
 800a460:	f3c3 030b 	ubfx	r3, r3, #0, #12
 800a464:	b1d3      	cbz	r3, 800a49c <HAL_I2C_Init+0x174>
 800a466:	f443 4300 	orr.w	r3, r3, #32768	; 0x8000
 800a46a:	e7a5      	b.n	800a3b8 <HAL_I2C_Init+0x90>
    return HAL_ERROR;
 800a46c:	2001      	movs	r0, #1
}
 800a46e:	bd70      	pop	{r4, r5, r6, pc}
    hi2c->Lock = HAL_UNLOCKED;
 800a470:	f880 203c 	strb.w	r2, [r0, #60]	; 0x3c
    HAL_I2C_MspInit(hi2c);
 800a474:	f7f7 f89e 	bl	80015b4 <HAL_I2C_MspInit>
 800a478:	e762      	b.n	800a340 <HAL_I2C_Init+0x18>
  MODIFY_REG(hi2c->Instance->CCR, (I2C_CCR_FS | I2C_CCR_DUTY | I2C_CCR_CCR), I2C_SPEED(pclk1, hi2c->Init.ClockSpeed, hi2c->Init.DutyCycle));
 800a47a:	f3c3 030b 	ubfx	r3, r3, #0, #12
 800a47e:	e79b      	b.n	800a3b8 <HAL_I2C_Init+0x90>
 800a480:	eb05 0585 	add.w	r5, r5, r5, lsl #2
 800a484:	1e43      	subs	r3, r0, #1
 800a486:	eb05 0585 	add.w	r5, r5, r5, lsl #2
 800a48a:	fbb3 f3f5 	udiv	r3, r3, r5
 800a48e:	3301      	adds	r3, #1
 800a490:	f3c3 030b 	ubfx	r3, r3, #0, #12
 800a494:	b113      	cbz	r3, 800a49c <HAL_I2C_Init+0x174>
 800a496:	f443 4340 	orr.w	r3, r3, #49152	; 0xc000
 800a49a:	e78d      	b.n	800a3b8 <HAL_I2C_Init+0x90>
 800a49c:	2301      	movs	r3, #1
 800a49e:	e78b      	b.n	800a3b8 <HAL_I2C_Init+0x90>
    return HAL_ERROR;
 800a4a0:	2001      	movs	r0, #1
}
 800a4a2:	4770      	bx	lr
 800a4a4:	000186a0 	.word	0x000186a0
 800a4a8:	001e847f 	.word	0x001e847f
 800a4ac:	431bde83 	.word	0x431bde83
 800a4b0:	003d08ff 	.word	0x003d08ff
 800a4b4:	10624dd3 	.word	0x10624dd3

0800a4b8 <HAL_I2C_Mem_Write>:
{
 800a4b8:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 800a4bc:	4604      	mov	r4, r0
 800a4be:	b083      	sub	sp, #12
 800a4c0:	4699      	mov	r9, r3
 800a4c2:	f8bd a034 	ldrh.w	sl, [sp, #52]	; 0x34
 800a4c6:	9e0e      	ldr	r6, [sp, #56]	; 0x38
 800a4c8:	460f      	mov	r7, r1
 800a4ca:	4690      	mov	r8, r2
  uint32_t tickstart = HAL_GetTick();
 800a4cc:	f7ff f8ea 	bl	80096a4 <HAL_GetTick>
  if (hi2c->State == HAL_I2C_STATE_READY)
 800a4d0:	f894 303d 	ldrb.w	r3, [r4, #61]	; 0x3d
 800a4d4:	2b20      	cmp	r3, #32
 800a4d6:	d004      	beq.n	800a4e2 <HAL_I2C_Mem_Write+0x2a>
      return HAL_BUSY;
 800a4d8:	2702      	movs	r7, #2
}
 800a4da:	4638      	mov	r0, r7
 800a4dc:	b003      	add	sp, #12
 800a4de:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
 800a4e2:	4605      	mov	r5, r0
 800a4e4:	e005      	b.n	800a4f2 <HAL_I2C_Mem_Write+0x3a>
      if (((HAL_GetTick() - Tickstart) > Timeout) || (Timeout == 0U))
 800a4e6:	f7ff f8dd 	bl	80096a4 <HAL_GetTick>
 800a4ea:	1b40      	subs	r0, r0, r5
 800a4ec:	2819      	cmp	r0, #25
 800a4ee:	f200 80a8 	bhi.w	800a642 <HAL_I2C_Mem_Write+0x18a>
  while (__HAL_I2C_GET_FLAG(hi2c, Flag) == Status)
 800a4f2:	6820      	ldr	r0, [r4, #0]
 800a4f4:	6983      	ldr	r3, [r0, #24]
 800a4f6:	ea6f 0c03 	mvn.w	ip, r3
 800a4fa:	f01c 0b02 	ands.w	fp, ip, #2
 800a4fe:	d0f2      	beq.n	800a4e6 <HAL_I2C_Mem_Write+0x2e>
    __HAL_LOCK(hi2c);
 800a500:	f894 303c 	ldrb.w	r3, [r4, #60]	; 0x3c
 800a504:	2b01      	cmp	r3, #1
 800a506:	d0e7      	beq.n	800a4d8 <HAL_I2C_Mem_Write+0x20>
 800a508:	2301      	movs	r3, #1
 800a50a:	f884 303c 	strb.w	r3, [r4, #60]	; 0x3c
    if ((hi2c->Instance->CR1 & I2C_CR1_PE) != I2C_CR1_PE)
 800a50e:	6803      	ldr	r3, [r0, #0]
 800a510:	07db      	lsls	r3, r3, #31
 800a512:	d572      	bpl.n	800a5fa <HAL_I2C_Mem_Write+0x142>
    if (I2C_RequestMemoryWrite(hi2c, DevAddress, MemAddress, MemAddSize, Timeout, tickstart) != HAL_OK)
 800a514:	4639      	mov	r1, r7
    CLEAR_BIT(hi2c->Instance->CR1, I2C_CR1_POS);
 800a516:	6807      	ldr	r7, [r0, #0]
 800a518:	f427 6700 	bic.w	r7, r7, #2048	; 0x800
 800a51c:	6007      	str	r7, [r0, #0]
    hi2c->pBuffPtr    = pData;
 800a51e:	980c      	ldr	r0, [sp, #48]	; 0x30
 800a520:	6260      	str	r0, [r4, #36]	; 0x24
    hi2c->State     = HAL_I2C_STATE_BUSY_TX;
 800a522:	2021      	movs	r0, #33	; 0x21
    if (I2C_RequestMemoryWrite(hi2c, DevAddress, MemAddress, MemAddSize, Timeout, tickstart) != HAL_OK)
 800a524:	e9cd 6500 	strd	r6, r5, [sp]
    hi2c->State     = HAL_I2C_STATE_BUSY_TX;
 800a528:	f884 003d 	strb.w	r0, [r4, #61]	; 0x3d
    hi2c->Mode      = HAL_I2C_MODE_MEM;
 800a52c:	2040      	movs	r0, #64	; 0x40
 800a52e:	f884 003e 	strb.w	r0, [r4, #62]	; 0x3e
    hi2c->ErrorCode = HAL_I2C_ERROR_NONE;
 800a532:	2000      	movs	r0, #0
 800a534:	6420      	str	r0, [r4, #64]	; 0x40
    hi2c->XferCount   = Size;
 800a536:	f8a4 a02a 	strh.w	sl, [r4, #42]	; 0x2a
    hi2c->XferSize    = hi2c->XferCount;
 800a53a:	8d60      	ldrh	r0, [r4, #42]	; 0x2a
 800a53c:	8520      	strh	r0, [r4, #40]	; 0x28
    hi2c->XferOptions = I2C_NO_OPTION_FRAME;
 800a53e:	4856      	ldr	r0, [pc, #344]	; (800a698 <HAL_I2C_Mem_Write+0x1e0>)
 800a540:	62e0      	str	r0, [r4, #44]	; 0x2c
    if (I2C_RequestMemoryWrite(hi2c, DevAddress, MemAddress, MemAddSize, Timeout, tickstart) != HAL_OK)
 800a542:	464b      	mov	r3, r9
 800a544:	4642      	mov	r2, r8
 800a546:	4620      	mov	r0, r4
 800a548:	f7ff fca4 	bl	8009e94 <I2C_RequestMemoryWrite>
 800a54c:	4607      	mov	r7, r0
 800a54e:	bb00      	cbnz	r0, 800a592 <HAL_I2C_Mem_Write+0xda>
    while (hi2c->XferSize > 0U)
 800a550:	8d23      	ldrh	r3, [r4, #40]	; 0x28
 800a552:	2b00      	cmp	r3, #0
 800a554:	f000 809e 	beq.w	800a694 <HAL_I2C_Mem_Write+0x1dc>
  while (__HAL_I2C_GET_FLAG(hi2c, I2C_FLAG_BTF) == RESET)
 800a558:	6823      	ldr	r3, [r4, #0]
 800a55a:	1c72      	adds	r2, r6, #1
 800a55c:	d159      	bne.n	800a612 <HAL_I2C_Mem_Write+0x15a>
  while (__HAL_I2C_GET_FLAG(hi2c, I2C_FLAG_TXE) == RESET)
 800a55e:	695a      	ldr	r2, [r3, #20]
 800a560:	0610      	lsls	r0, r2, #24
 800a562:	d41b      	bmi.n	800a59c <HAL_I2C_Mem_Write+0xe4>
  if (__HAL_I2C_GET_FLAG(hi2c, I2C_FLAG_AF) == SET)
 800a564:	695a      	ldr	r2, [r3, #20]
 800a566:	0551      	lsls	r1, r2, #21
 800a568:	d5f9      	bpl.n	800a55e <HAL_I2C_Mem_Write+0xa6>
    hi2c->PreviousState       = I2C_STATE_NONE;
 800a56a:	2200      	movs	r2, #0
    __HAL_I2C_CLEAR_FLAG(hi2c, I2C_FLAG_AF);
 800a56c:	f46f 6080 	mvn.w	r0, #1024	; 0x400
    hi2c->State               = HAL_I2C_STATE_READY;
 800a570:	2120      	movs	r1, #32
    __HAL_I2C_CLEAR_FLAG(hi2c, I2C_FLAG_AF);
 800a572:	6158      	str	r0, [r3, #20]
    hi2c->PreviousState       = I2C_STATE_NONE;
 800a574:	6322      	str	r2, [r4, #48]	; 0x30
    hi2c->State               = HAL_I2C_STATE_READY;
 800a576:	f884 103d 	strb.w	r1, [r4, #61]	; 0x3d
    hi2c->Mode                = HAL_I2C_MODE_NONE;
 800a57a:	f884 203e 	strb.w	r2, [r4, #62]	; 0x3e
    hi2c->ErrorCode           |= HAL_I2C_ERROR_AF;
 800a57e:	6c23      	ldr	r3, [r4, #64]	; 0x40
 800a580:	f043 0304 	orr.w	r3, r3, #4
 800a584:	6423      	str	r3, [r4, #64]	; 0x40
      if (hi2c->ErrorCode == HAL_I2C_ERROR_AF)
 800a586:	6c23      	ldr	r3, [r4, #64]	; 0x40
    __HAL_UNLOCK(hi2c);
 800a588:	2200      	movs	r2, #0
      if (hi2c->ErrorCode == HAL_I2C_ERROR_AF)
 800a58a:	2b04      	cmp	r3, #4
    __HAL_UNLOCK(hi2c);
 800a58c:	f884 203c 	strb.w	r2, [r4, #60]	; 0x3c
      if (hi2c->ErrorCode == HAL_I2C_ERROR_AF)
 800a590:	d038      	beq.n	800a604 <HAL_I2C_Mem_Write+0x14c>
      return HAL_ERROR;
 800a592:	2701      	movs	r7, #1
}
 800a594:	4638      	mov	r0, r7
 800a596:	b003      	add	sp, #12
 800a598:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
      hi2c->Instance->DR = *hi2c->pBuffPtr;
 800a59c:	f8d4 c024 	ldr.w	ip, [r4, #36]	; 0x24
      hi2c->XferSize--;
 800a5a0:	f8b4 e028 	ldrh.w	lr, [r4, #40]	; 0x28
      hi2c->Instance->DR = *hi2c->pBuffPtr;
 800a5a4:	4661      	mov	r1, ip
      hi2c->XferSize--;
 800a5a6:	f10e 30ff 	add.w	r0, lr, #4294967295
      hi2c->Instance->DR = *hi2c->pBuffPtr;
 800a5aa:	f811 2b01 	ldrb.w	r2, [r1], #1
 800a5ae:	611a      	str	r2, [r3, #16]
      hi2c->XferCount--;
 800a5b0:	8d62      	ldrh	r2, [r4, #42]	; 0x2a
      hi2c->pBuffPtr++;
 800a5b2:	6261      	str	r1, [r4, #36]	; 0x24
      hi2c->XferCount--;
 800a5b4:	3a01      	subs	r2, #1
 800a5b6:	b292      	uxth	r2, r2
 800a5b8:	8562      	strh	r2, [r4, #42]	; 0x2a
      hi2c->XferSize--;
 800a5ba:	b282      	uxth	r2, r0
      if ((__HAL_I2C_GET_FLAG(hi2c, I2C_FLAG_BTF) == SET) && (hi2c->XferSize != 0U))
 800a5bc:	6958      	ldr	r0, [r3, #20]
      hi2c->XferSize--;
 800a5be:	8522      	strh	r2, [r4, #40]	; 0x28
      if ((__HAL_I2C_GET_FLAG(hi2c, I2C_FLAG_BTF) == SET) && (hi2c->XferSize != 0U))
 800a5c0:	0740      	lsls	r0, r0, #29
 800a5c2:	d517      	bpl.n	800a5f4 <HAL_I2C_Mem_Write+0x13c>
 800a5c4:	b942      	cbnz	r2, 800a5d8 <HAL_I2C_Mem_Write+0x120>
 800a5c6:	1c72      	adds	r2, r6, #1
 800a5c8:	d156      	bne.n	800a678 <HAL_I2C_Mem_Write+0x1c0>
  while (__HAL_I2C_GET_FLAG(hi2c, I2C_FLAG_BTF) == RESET)
 800a5ca:	695a      	ldr	r2, [r3, #20]
 800a5cc:	0750      	lsls	r0, r2, #29
 800a5ce:	d446      	bmi.n	800a65e <HAL_I2C_Mem_Write+0x1a6>
  if (__HAL_I2C_GET_FLAG(hi2c, I2C_FLAG_AF) == SET)
 800a5d0:	695a      	ldr	r2, [r3, #20]
 800a5d2:	0551      	lsls	r1, r2, #21
 800a5d4:	d5f9      	bpl.n	800a5ca <HAL_I2C_Mem_Write+0x112>
 800a5d6:	e7c8      	b.n	800a56a <HAL_I2C_Mem_Write+0xb2>
        hi2c->Instance->DR = *hi2c->pBuffPtr;
 800a5d8:	f89c 1001 	ldrb.w	r1, [ip, #1]
 800a5dc:	6119      	str	r1, [r3, #16]
        hi2c->pBuffPtr++;
 800a5de:	f10c 0102 	add.w	r1, ip, #2
 800a5e2:	6261      	str	r1, [r4, #36]	; 0x24
        hi2c->XferCount--;
 800a5e4:	8d61      	ldrh	r1, [r4, #42]	; 0x2a
        hi2c->XferSize--;
 800a5e6:	f1ae 0202 	sub.w	r2, lr, #2
        hi2c->XferCount--;
 800a5ea:	3901      	subs	r1, #1
        hi2c->XferSize--;
 800a5ec:	b292      	uxth	r2, r2
        hi2c->XferCount--;
 800a5ee:	b289      	uxth	r1, r1
        hi2c->XferSize--;
 800a5f0:	8522      	strh	r2, [r4, #40]	; 0x28
        hi2c->XferCount--;
 800a5f2:	8561      	strh	r1, [r4, #42]	; 0x2a
    while (hi2c->XferSize > 0U)
 800a5f4:	2a00      	cmp	r2, #0
 800a5f6:	d1b0      	bne.n	800a55a <HAL_I2C_Mem_Write+0xa2>
 800a5f8:	e7e5      	b.n	800a5c6 <HAL_I2C_Mem_Write+0x10e>
      __HAL_I2C_ENABLE(hi2c);
 800a5fa:	6803      	ldr	r3, [r0, #0]
 800a5fc:	f043 0301 	orr.w	r3, r3, #1
 800a600:	6003      	str	r3, [r0, #0]
 800a602:	e787      	b.n	800a514 <HAL_I2C_Mem_Write+0x5c>
        SET_BIT(hi2c->Instance->CR1, I2C_CR1_STOP);
 800a604:	6822      	ldr	r2, [r4, #0]
 800a606:	6813      	ldr	r3, [r2, #0]
 800a608:	f443 7300 	orr.w	r3, r3, #512	; 0x200
      return HAL_ERROR;
 800a60c:	2701      	movs	r7, #1
        SET_BIT(hi2c->Instance->CR1, I2C_CR1_STOP);
 800a60e:	6013      	str	r3, [r2, #0]
 800a610:	e763      	b.n	800a4da <HAL_I2C_Mem_Write+0x22>
  while (__HAL_I2C_GET_FLAG(hi2c, I2C_FLAG_TXE) == RESET)
 800a612:	695a      	ldr	r2, [r3, #20]
 800a614:	0612      	lsls	r2, r2, #24
 800a616:	d4c1      	bmi.n	800a59c <HAL_I2C_Mem_Write+0xe4>
  if (__HAL_I2C_GET_FLAG(hi2c, I2C_FLAG_AF) == SET)
 800a618:	695a      	ldr	r2, [r3, #20]
 800a61a:	0551      	lsls	r1, r2, #21
 800a61c:	d4a5      	bmi.n	800a56a <HAL_I2C_Mem_Write+0xb2>
      if (((HAL_GetTick() - Tickstart) > Timeout) || (Timeout == 0U))
 800a61e:	f7ff f841 	bl	80096a4 <HAL_GetTick>
 800a622:	1b40      	subs	r0, r0, r5
 800a624:	4286      	cmp	r6, r0
 800a626:	d301      	bcc.n	800a62c <HAL_I2C_Mem_Write+0x174>
 800a628:	2e00      	cmp	r6, #0
 800a62a:	d195      	bne.n	800a558 <HAL_I2C_Mem_Write+0xa0>
        hi2c->PreviousState     = I2C_STATE_NONE;
 800a62c:	2300      	movs	r3, #0
        hi2c->State             = HAL_I2C_STATE_READY;
 800a62e:	2220      	movs	r2, #32
        hi2c->PreviousState     = I2C_STATE_NONE;
 800a630:	6323      	str	r3, [r4, #48]	; 0x30
        hi2c->State             = HAL_I2C_STATE_READY;
 800a632:	f884 203d 	strb.w	r2, [r4, #61]	; 0x3d
        hi2c->Mode              = HAL_I2C_MODE_NONE;
 800a636:	f884 303e 	strb.w	r3, [r4, #62]	; 0x3e
        hi2c->ErrorCode         |= HAL_I2C_ERROR_TIMEOUT;
 800a63a:	6c23      	ldr	r3, [r4, #64]	; 0x40
 800a63c:	4313      	orrs	r3, r2
 800a63e:	6423      	str	r3, [r4, #64]	; 0x40
        return HAL_ERROR;
 800a640:	e7a1      	b.n	800a586 <HAL_I2C_Mem_Write+0xce>
        hi2c->State             = HAL_I2C_STATE_READY;
 800a642:	2320      	movs	r3, #32
        hi2c->PreviousState     = I2C_STATE_NONE;
 800a644:	f8c4 b030 	str.w	fp, [r4, #48]	; 0x30
        hi2c->State             = HAL_I2C_STATE_READY;
 800a648:	f884 303d 	strb.w	r3, [r4, #61]	; 0x3d
        hi2c->Mode              = HAL_I2C_MODE_NONE;
 800a64c:	f884 b03e 	strb.w	fp, [r4, #62]	; 0x3e
        hi2c->ErrorCode         |= HAL_I2C_ERROR_TIMEOUT;
 800a650:	6c23      	ldr	r3, [r4, #64]	; 0x40
        __HAL_UNLOCK(hi2c);
 800a652:	f884 b03c 	strb.w	fp, [r4, #60]	; 0x3c
        hi2c->ErrorCode         |= HAL_I2C_ERROR_TIMEOUT;
 800a656:	f043 0320 	orr.w	r3, r3, #32
 800a65a:	6423      	str	r3, [r4, #64]	; 0x40
 800a65c:	e73c      	b.n	800a4d8 <HAL_I2C_Mem_Write+0x20>
    SET_BIT(hi2c->Instance->CR1, I2C_CR1_STOP);
 800a65e:	681a      	ldr	r2, [r3, #0]
    hi2c->Mode = HAL_I2C_MODE_NONE;
 800a660:	2100      	movs	r1, #0
    SET_BIT(hi2c->Instance->CR1, I2C_CR1_STOP);
 800a662:	f442 7200 	orr.w	r2, r2, #512	; 0x200
    hi2c->State = HAL_I2C_STATE_READY;
 800a666:	2020      	movs	r0, #32
    SET_BIT(hi2c->Instance->CR1, I2C_CR1_STOP);
 800a668:	601a      	str	r2, [r3, #0]
    hi2c->State = HAL_I2C_STATE_READY;
 800a66a:	f884 003d 	strb.w	r0, [r4, #61]	; 0x3d
    __HAL_UNLOCK(hi2c);
 800a66e:	f884 103c 	strb.w	r1, [r4, #60]	; 0x3c
    hi2c->Mode = HAL_I2C_MODE_NONE;
 800a672:	f884 103e 	strb.w	r1, [r4, #62]	; 0x3e
    return HAL_OK;
 800a676:	e730      	b.n	800a4da <HAL_I2C_Mem_Write+0x22>
  while (__HAL_I2C_GET_FLAG(hi2c, I2C_FLAG_BTF) == RESET)
 800a678:	695a      	ldr	r2, [r3, #20]
 800a67a:	0752      	lsls	r2, r2, #29
 800a67c:	d4ef      	bmi.n	800a65e <HAL_I2C_Mem_Write+0x1a6>
  if (__HAL_I2C_GET_FLAG(hi2c, I2C_FLAG_AF) == SET)
 800a67e:	695a      	ldr	r2, [r3, #20]
 800a680:	0551      	lsls	r1, r2, #21
 800a682:	f53f af72 	bmi.w	800a56a <HAL_I2C_Mem_Write+0xb2>
      if (((HAL_GetTick() - Tickstart) > Timeout) || (Timeout == 0U))
 800a686:	f7ff f80d 	bl	80096a4 <HAL_GetTick>
 800a68a:	1b40      	subs	r0, r0, r5
 800a68c:	4286      	cmp	r6, r0
 800a68e:	d3cd      	bcc.n	800a62c <HAL_I2C_Mem_Write+0x174>
 800a690:	2e00      	cmp	r6, #0
 800a692:	d0cb      	beq.n	800a62c <HAL_I2C_Mem_Write+0x174>
  while (__HAL_I2C_GET_FLAG(hi2c, I2C_FLAG_BTF) == RESET)
 800a694:	6823      	ldr	r3, [r4, #0]
 800a696:	e796      	b.n	800a5c6 <HAL_I2C_Mem_Write+0x10e>
 800a698:	ffff0000 	.word	0xffff0000

0800a69c <HAL_I2C_Mem_Read>:
{
 800a69c:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 800a6a0:	4604      	mov	r4, r0
 800a6a2:	b087      	sub	sp, #28
 800a6a4:	4699      	mov	r9, r3
 800a6a6:	f8bd a044 	ldrh.w	sl, [sp, #68]	; 0x44
 800a6aa:	9d12      	ldr	r5, [sp, #72]	; 0x48
 800a6ac:	460f      	mov	r7, r1
 800a6ae:	4690      	mov	r8, r2
  uint32_t tickstart = HAL_GetTick();
 800a6b0:	f7fe fff8 	bl	80096a4 <HAL_GetTick>
  if (hi2c->State == HAL_I2C_STATE_READY)
 800a6b4:	f894 303d 	ldrb.w	r3, [r4, #61]	; 0x3d
 800a6b8:	2b20      	cmp	r3, #32
 800a6ba:	d004      	beq.n	800a6c6 <HAL_I2C_Mem_Read+0x2a>
      return HAL_BUSY;
 800a6bc:	2702      	movs	r7, #2
}
 800a6be:	4638      	mov	r0, r7
 800a6c0:	b007      	add	sp, #28
 800a6c2:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
 800a6c6:	4606      	mov	r6, r0
 800a6c8:	e005      	b.n	800a6d6 <HAL_I2C_Mem_Read+0x3a>
      if (((HAL_GetTick() - Tickstart) > Timeout) || (Timeout == 0U))
 800a6ca:	f7fe ffeb 	bl	80096a4 <HAL_GetTick>
 800a6ce:	1b80      	subs	r0, r0, r6
 800a6d0:	2819      	cmp	r0, #25
 800a6d2:	f200 80d2 	bhi.w	800a87a <HAL_I2C_Mem_Read+0x1de>
  while (__HAL_I2C_GET_FLAG(hi2c, Flag) == Status)
 800a6d6:	f8d4 c000 	ldr.w	ip, [r4]
 800a6da:	f8dc 0018 	ldr.w	r0, [ip, #24]
 800a6de:	43c0      	mvns	r0, r0
 800a6e0:	f010 0b02 	ands.w	fp, r0, #2
 800a6e4:	d0f1      	beq.n	800a6ca <HAL_I2C_Mem_Read+0x2e>
    __HAL_LOCK(hi2c);
 800a6e6:	f894 303c 	ldrb.w	r3, [r4, #60]	; 0x3c
 800a6ea:	2b01      	cmp	r3, #1
 800a6ec:	d0e6      	beq.n	800a6bc <HAL_I2C_Mem_Read+0x20>
 800a6ee:	2301      	movs	r3, #1
 800a6f0:	f884 303c 	strb.w	r3, [r4, #60]	; 0x3c
    if ((hi2c->Instance->CR1 & I2C_CR1_PE) != I2C_CR1_PE)
 800a6f4:	f8dc 3000 	ldr.w	r3, [ip]
 800a6f8:	07d9      	lsls	r1, r3, #31
 800a6fa:	d537      	bpl.n	800a76c <HAL_I2C_Mem_Read+0xd0>
    CLEAR_BIT(hi2c->Instance->CR1, I2C_CR1_POS);
 800a6fc:	f8dc 0000 	ldr.w	r0, [ip]
 800a700:	f420 6000 	bic.w	r0, r0, #2048	; 0x800
 800a704:	f8cc 0000 	str.w	r0, [ip]
    hi2c->pBuffPtr    = pData;
 800a708:	9810      	ldr	r0, [sp, #64]	; 0x40
 800a70a:	6260      	str	r0, [r4, #36]	; 0x24
    hi2c->State     = HAL_I2C_STATE_BUSY_RX;
 800a70c:	2022      	movs	r0, #34	; 0x22
    if (I2C_RequestMemoryRead(hi2c, DevAddress, MemAddress, MemAddSize, Timeout, tickstart) != HAL_OK)
 800a70e:	e9cd 5600 	strd	r5, r6, [sp]
    hi2c->State     = HAL_I2C_STATE_BUSY_RX;
 800a712:	f884 003d 	strb.w	r0, [r4, #61]	; 0x3d
    hi2c->Mode      = HAL_I2C_MODE_MEM;
 800a716:	2040      	movs	r0, #64	; 0x40
 800a718:	f884 003e 	strb.w	r0, [r4, #62]	; 0x3e
    hi2c->ErrorCode = HAL_I2C_ERROR_NONE;
 800a71c:	2000      	movs	r0, #0
 800a71e:	6420      	str	r0, [r4, #64]	; 0x40
    hi2c->XferCount   = Size;
 800a720:	f8a4 a02a 	strh.w	sl, [r4, #42]	; 0x2a
    hi2c->XferSize    = hi2c->XferCount;
 800a724:	8d60      	ldrh	r0, [r4, #42]	; 0x2a
 800a726:	8520      	strh	r0, [r4, #40]	; 0x28
    hi2c->XferOptions = I2C_NO_OPTION_FRAME;
 800a728:	4893      	ldr	r0, [pc, #588]	; (800a978 <HAL_I2C_Mem_Read+0x2dc>)
 800a72a:	62e0      	str	r0, [r4, #44]	; 0x2c
    if (I2C_RequestMemoryRead(hi2c, DevAddress, MemAddress, MemAddSize, Timeout, tickstart) != HAL_OK)
 800a72c:	4639      	mov	r1, r7
 800a72e:	464b      	mov	r3, r9
 800a730:	4642      	mov	r2, r8
 800a732:	4620      	mov	r0, r4
 800a734:	f7ff fca2 	bl	800a07c <I2C_RequestMemoryRead>
 800a738:	4607      	mov	r7, r0
 800a73a:	2800      	cmp	r0, #0
 800a73c:	f040 80ab 	bne.w	800a896 <HAL_I2C_Mem_Read+0x1fa>
    if (hi2c->XferSize == 0U)
 800a740:	8d22      	ldrh	r2, [r4, #40]	; 0x28
 800a742:	b9d2      	cbnz	r2, 800a77a <HAL_I2C_Mem_Read+0xde>
      __HAL_I2C_CLEAR_ADDRFLAG(hi2c);
 800a744:	6823      	ldr	r3, [r4, #0]
 800a746:	9002      	str	r0, [sp, #8]
 800a748:	695a      	ldr	r2, [r3, #20]
 800a74a:	9202      	str	r2, [sp, #8]
 800a74c:	699a      	ldr	r2, [r3, #24]
 800a74e:	9202      	str	r2, [sp, #8]
 800a750:	9a02      	ldr	r2, [sp, #8]
      SET_BIT(hi2c->Instance->CR1, I2C_CR1_STOP);
 800a752:	681a      	ldr	r2, [r3, #0]
 800a754:	f442 7200 	orr.w	r2, r2, #512	; 0x200
 800a758:	601a      	str	r2, [r3, #0]
    hi2c->Mode = HAL_I2C_MODE_NONE;
 800a75a:	2300      	movs	r3, #0
    hi2c->State = HAL_I2C_STATE_READY;
 800a75c:	2220      	movs	r2, #32
 800a75e:	f884 203d 	strb.w	r2, [r4, #61]	; 0x3d
    __HAL_UNLOCK(hi2c);
 800a762:	f884 303c 	strb.w	r3, [r4, #60]	; 0x3c
    hi2c->Mode = HAL_I2C_MODE_NONE;
 800a766:	f884 303e 	strb.w	r3, [r4, #62]	; 0x3e
    return HAL_OK;
 800a76a:	e7a8      	b.n	800a6be <HAL_I2C_Mem_Read+0x22>
      __HAL_I2C_ENABLE(hi2c);
 800a76c:	f8dc 3000 	ldr.w	r3, [ip]
 800a770:	f043 0301 	orr.w	r3, r3, #1
 800a774:	f8cc 3000 	str.w	r3, [ip]
 800a778:	e7c0      	b.n	800a6fc <HAL_I2C_Mem_Read+0x60>
    else if (hi2c->XferSize == 1U)
 800a77a:	2a01      	cmp	r2, #1
 800a77c:	f000 812c 	beq.w	800a9d8 <HAL_I2C_Mem_Read+0x33c>
    else if (hi2c->XferSize == 2U)
 800a780:	2a02      	cmp	r2, #2
 800a782:	f000 80bd 	beq.w	800a900 <HAL_I2C_Mem_Read+0x264>
      __HAL_I2C_CLEAR_ADDRFLAG(hi2c);
 800a786:	6823      	ldr	r3, [r4, #0]
 800a788:	9005      	str	r0, [sp, #20]
 800a78a:	6959      	ldr	r1, [r3, #20]
 800a78c:	9105      	str	r1, [sp, #20]
 800a78e:	6999      	ldr	r1, [r3, #24]
 800a790:	9105      	str	r1, [sp, #20]
 800a792:	9905      	ldr	r1, [sp, #20]
      if (hi2c->XferSize <= 3U)
 800a794:	2a03      	cmp	r2, #3
 800a796:	d849      	bhi.n	800a82c <HAL_I2C_Mem_Read+0x190>
        if (hi2c->XferSize == 1U)
 800a798:	2a01      	cmp	r2, #1
 800a79a:	f000 80eb 	beq.w	800a974 <HAL_I2C_Mem_Read+0x2d8>
        else if (hi2c->XferSize == 2U)
 800a79e:	2a02      	cmp	r2, #2
 800a7a0:	f000 8089 	beq.w	800a8b6 <HAL_I2C_Mem_Read+0x21a>
 800a7a4:	1c69      	adds	r1, r5, #1
 800a7a6:	f040 80bb 	bne.w	800a920 <HAL_I2C_Mem_Read+0x284>
  while (__HAL_I2C_GET_FLAG(hi2c, Flag) == Status)
 800a7aa:	695a      	ldr	r2, [r3, #20]
 800a7ac:	0752      	lsls	r2, r2, #29
 800a7ae:	d5fc      	bpl.n	800a7aa <HAL_I2C_Mem_Read+0x10e>
          CLEAR_BIT(hi2c->Instance->CR1, I2C_CR1_ACK);
 800a7b0:	681a      	ldr	r2, [r3, #0]
          *hi2c->pBuffPtr = (uint8_t)hi2c->Instance->DR;
 800a7b2:	6a61      	ldr	r1, [r4, #36]	; 0x24
          CLEAR_BIT(hi2c->Instance->CR1, I2C_CR1_ACK);
 800a7b4:	f422 6280 	bic.w	r2, r2, #1024	; 0x400
 800a7b8:	601a      	str	r2, [r3, #0]
          *hi2c->pBuffPtr = (uint8_t)hi2c->Instance->DR;
 800a7ba:	691b      	ldr	r3, [r3, #16]
 800a7bc:	700b      	strb	r3, [r1, #0]
          hi2c->XferCount--;
 800a7be:	8d63      	ldrh	r3, [r4, #42]	; 0x2a
          hi2c->pBuffPtr++;
 800a7c0:	6a61      	ldr	r1, [r4, #36]	; 0x24
          hi2c->XferSize--;
 800a7c2:	8d22      	ldrh	r2, [r4, #40]	; 0x28
          hi2c->XferCount--;
 800a7c4:	3b01      	subs	r3, #1
          hi2c->pBuffPtr++;
 800a7c6:	3101      	adds	r1, #1
          hi2c->XferSize--;
 800a7c8:	3a01      	subs	r2, #1
          hi2c->XferCount--;
 800a7ca:	b29b      	uxth	r3, r3
          hi2c->pBuffPtr++;
 800a7cc:	6261      	str	r1, [r4, #36]	; 0x24
          hi2c->XferSize--;
 800a7ce:	8522      	strh	r2, [r4, #40]	; 0x28
          hi2c->XferCount--;
 800a7d0:	8563      	strh	r3, [r4, #42]	; 0x2a
static HAL_StatusTypeDef I2C_WaitOnFlagUntilTimeout(I2C_HandleTypeDef *hi2c, uint32_t Flag, FlagStatus Status, uint32_t Timeout, uint32_t Tickstart)
 800a7d2:	1c69      	adds	r1, r5, #1
  while (__HAL_I2C_GET_FLAG(hi2c, Flag) == Status)
 800a7d4:	6822      	ldr	r2, [r4, #0]
 800a7d6:	f040 80af 	bne.w	800a938 <HAL_I2C_Mem_Read+0x29c>
 800a7da:	6953      	ldr	r3, [r2, #20]
 800a7dc:	075b      	lsls	r3, r3, #29
 800a7de:	d5fc      	bpl.n	800a7da <HAL_I2C_Mem_Read+0x13e>
          SET_BIT(hi2c->Instance->CR1, I2C_CR1_STOP);
 800a7e0:	6813      	ldr	r3, [r2, #0]
          *hi2c->pBuffPtr = (uint8_t)hi2c->Instance->DR;
 800a7e2:	6a61      	ldr	r1, [r4, #36]	; 0x24
          SET_BIT(hi2c->Instance->CR1, I2C_CR1_STOP);
 800a7e4:	f443 7300 	orr.w	r3, r3, #512	; 0x200
 800a7e8:	6013      	str	r3, [r2, #0]
          *hi2c->pBuffPtr = (uint8_t)hi2c->Instance->DR;
 800a7ea:	6913      	ldr	r3, [r2, #16]
 800a7ec:	700b      	strb	r3, [r1, #0]
          hi2c->XferCount--;
 800a7ee:	8d63      	ldrh	r3, [r4, #42]	; 0x2a
          hi2c->XferSize--;
 800a7f0:	8d22      	ldrh	r2, [r4, #40]	; 0x28
          hi2c->pBuffPtr++;
 800a7f2:	6a60      	ldr	r0, [r4, #36]	; 0x24
          *hi2c->pBuffPtr = (uint8_t)hi2c->Instance->DR;
 800a7f4:	6821      	ldr	r1, [r4, #0]
          hi2c->XferCount--;
 800a7f6:	3b01      	subs	r3, #1
 800a7f8:	b29b      	uxth	r3, r3
 800a7fa:	8563      	strh	r3, [r4, #42]	; 0x2a
          *hi2c->pBuffPtr = (uint8_t)hi2c->Instance->DR;
 800a7fc:	6909      	ldr	r1, [r1, #16]
          hi2c->XferSize--;
 800a7fe:	1e53      	subs	r3, r2, #1
          hi2c->pBuffPtr++;
 800a800:	f100 0c01 	add.w	ip, r0, #1
          hi2c->XferSize--;
 800a804:	8523      	strh	r3, [r4, #40]	; 0x28
          hi2c->pBuffPtr++;
 800a806:	f8c4 c024 	str.w	ip, [r4, #36]	; 0x24
          *hi2c->pBuffPtr = (uint8_t)hi2c->Instance->DR;
 800a80a:	7041      	strb	r1, [r0, #1]
          hi2c->XferSize--;
 800a80c:	8d22      	ldrh	r2, [r4, #40]	; 0x28
          hi2c->XferCount--;
 800a80e:	8d63      	ldrh	r3, [r4, #42]	; 0x2a
          hi2c->pBuffPtr++;
 800a810:	6a61      	ldr	r1, [r4, #36]	; 0x24
          hi2c->XferSize--;
 800a812:	3a01      	subs	r2, #1
          hi2c->XferCount--;
 800a814:	3b01      	subs	r3, #1
          hi2c->pBuffPtr++;
 800a816:	3101      	adds	r1, #1
          hi2c->XferSize--;
 800a818:	b292      	uxth	r2, r2
          hi2c->XferCount--;
 800a81a:	b29b      	uxth	r3, r3
          hi2c->pBuffPtr++;
 800a81c:	6261      	str	r1, [r4, #36]	; 0x24
          hi2c->XferSize--;
 800a81e:	8522      	strh	r2, [r4, #40]	; 0x28
          hi2c->XferCount--;
 800a820:	8563      	strh	r3, [r4, #42]	; 0x2a
    while (hi2c->XferSize > 0U)
 800a822:	2a00      	cmp	r2, #0
 800a824:	d099      	beq.n	800a75a <HAL_I2C_Mem_Read+0xbe>
      if (hi2c->XferSize <= 3U)
 800a826:	2a03      	cmp	r2, #3
  while (__HAL_I2C_GET_FLAG(hi2c, I2C_FLAG_RXNE) == RESET)
 800a828:	6823      	ldr	r3, [r4, #0]
      if (hi2c->XferSize <= 3U)
 800a82a:	d9b5      	bls.n	800a798 <HAL_I2C_Mem_Read+0xfc>
 800a82c:	b95d      	cbnz	r5, 800a846 <HAL_I2C_Mem_Read+0x1aa>
 800a82e:	e0c5      	b.n	800a9bc <HAL_I2C_Mem_Read+0x320>
    if (__HAL_I2C_GET_FLAG(hi2c, I2C_FLAG_STOPF) == SET)
 800a830:	695a      	ldr	r2, [r3, #20]
 800a832:	06d0      	lsls	r0, r2, #27
 800a834:	f100 80b2 	bmi.w	800a99c <HAL_I2C_Mem_Read+0x300>
    if (((HAL_GetTick() - Tickstart) > Timeout) || (Timeout == 0U))
 800a838:	f7fe ff34 	bl	80096a4 <HAL_GetTick>
 800a83c:	1b80      	subs	r0, r0, r6
 800a83e:	4285      	cmp	r5, r0
 800a840:	f0c0 8086 	bcc.w	800a950 <HAL_I2C_Mem_Read+0x2b4>
  while (__HAL_I2C_GET_FLAG(hi2c, I2C_FLAG_RXNE) == RESET)
 800a844:	6823      	ldr	r3, [r4, #0]
 800a846:	695a      	ldr	r2, [r3, #20]
 800a848:	0652      	lsls	r2, r2, #25
 800a84a:	d5f1      	bpl.n	800a830 <HAL_I2C_Mem_Read+0x194>
        *hi2c->pBuffPtr = (uint8_t)hi2c->Instance->DR;
 800a84c:	6a62      	ldr	r2, [r4, #36]	; 0x24
 800a84e:	691b      	ldr	r3, [r3, #16]
 800a850:	7013      	strb	r3, [r2, #0]
        hi2c->XferCount--;
 800a852:	8d63      	ldrh	r3, [r4, #42]	; 0x2a
        if (__HAL_I2C_GET_FLAG(hi2c, I2C_FLAG_BTF) == SET)
 800a854:	6820      	ldr	r0, [r4, #0]
        hi2c->XferSize--;
 800a856:	8d22      	ldrh	r2, [r4, #40]	; 0x28
        hi2c->pBuffPtr++;
 800a858:	6a61      	ldr	r1, [r4, #36]	; 0x24
        hi2c->XferCount--;
 800a85a:	3b01      	subs	r3, #1
 800a85c:	b29b      	uxth	r3, r3
 800a85e:	8563      	strh	r3, [r4, #42]	; 0x2a
        if (__HAL_I2C_GET_FLAG(hi2c, I2C_FLAG_BTF) == SET)
 800a860:	6943      	ldr	r3, [r0, #20]
        hi2c->XferSize--;
 800a862:	3a01      	subs	r2, #1
 800a864:	b292      	uxth	r2, r2
        hi2c->pBuffPtr++;
 800a866:	f101 0c01 	add.w	ip, r1, #1
        if (__HAL_I2C_GET_FLAG(hi2c, I2C_FLAG_BTF) == SET)
 800a86a:	075b      	lsls	r3, r3, #29
        hi2c->XferSize--;
 800a86c:	8522      	strh	r2, [r4, #40]	; 0x28
        hi2c->pBuffPtr++;
 800a86e:	f8c4 c024 	str.w	ip, [r4, #36]	; 0x24
        if (__HAL_I2C_GET_FLAG(hi2c, I2C_FLAG_BTF) == SET)
 800a872:	d5d6      	bpl.n	800a822 <HAL_I2C_Mem_Read+0x186>
          *hi2c->pBuffPtr = (uint8_t)hi2c->Instance->DR;
 800a874:	6903      	ldr	r3, [r0, #16]
 800a876:	704b      	strb	r3, [r1, #1]
 800a878:	e036      	b.n	800a8e8 <HAL_I2C_Mem_Read+0x24c>
        hi2c->State             = HAL_I2C_STATE_READY;
 800a87a:	2320      	movs	r3, #32
        hi2c->PreviousState     = I2C_STATE_NONE;
 800a87c:	f8c4 b030 	str.w	fp, [r4, #48]	; 0x30
        hi2c->State             = HAL_I2C_STATE_READY;
 800a880:	f884 303d 	strb.w	r3, [r4, #61]	; 0x3d
        hi2c->Mode              = HAL_I2C_MODE_NONE;
 800a884:	f884 b03e 	strb.w	fp, [r4, #62]	; 0x3e
        hi2c->ErrorCode         |= HAL_I2C_ERROR_TIMEOUT;
 800a888:	6c23      	ldr	r3, [r4, #64]	; 0x40
        __HAL_UNLOCK(hi2c);
 800a88a:	f884 b03c 	strb.w	fp, [r4, #60]	; 0x3c
        hi2c->ErrorCode         |= HAL_I2C_ERROR_TIMEOUT;
 800a88e:	f043 0320 	orr.w	r3, r3, #32
 800a892:	6423      	str	r3, [r4, #64]	; 0x40
 800a894:	e712      	b.n	800a6bc <HAL_I2C_Mem_Read+0x20>
      return HAL_ERROR;
 800a896:	2701      	movs	r7, #1
}
 800a898:	4638      	mov	r0, r7
 800a89a:	b007      	add	sp, #28
 800a89c:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
  while (__HAL_I2C_GET_FLAG(hi2c, Flag) == Status)
 800a8a0:	695a      	ldr	r2, [r3, #20]
 800a8a2:	0750      	lsls	r0, r2, #29
 800a8a4:	d40c      	bmi.n	800a8c0 <HAL_I2C_Mem_Read+0x224>
      if (((HAL_GetTick() - Tickstart) > Timeout) || (Timeout == 0U))
 800a8a6:	f7fe fefd 	bl	80096a4 <HAL_GetTick>
 800a8aa:	1b80      	subs	r0, r0, r6
 800a8ac:	4285      	cmp	r5, r0
 800a8ae:	d34f      	bcc.n	800a950 <HAL_I2C_Mem_Read+0x2b4>
 800a8b0:	2d00      	cmp	r5, #0
 800a8b2:	d04d      	beq.n	800a950 <HAL_I2C_Mem_Read+0x2b4>
  while (__HAL_I2C_GET_FLAG(hi2c, Flag) == Status)
 800a8b4:	6823      	ldr	r3, [r4, #0]
 800a8b6:	1c69      	adds	r1, r5, #1
 800a8b8:	d1f2      	bne.n	800a8a0 <HAL_I2C_Mem_Read+0x204>
 800a8ba:	695a      	ldr	r2, [r3, #20]
 800a8bc:	0752      	lsls	r2, r2, #29
 800a8be:	d5fc      	bpl.n	800a8ba <HAL_I2C_Mem_Read+0x21e>
          SET_BIT(hi2c->Instance->CR1, I2C_CR1_STOP);
 800a8c0:	681a      	ldr	r2, [r3, #0]
 800a8c2:	f442 7200 	orr.w	r2, r2, #512	; 0x200
 800a8c6:	601a      	str	r2, [r3, #0]
          *hi2c->pBuffPtr = (uint8_t)hi2c->Instance->DR;
 800a8c8:	691a      	ldr	r2, [r3, #16]
 800a8ca:	6a63      	ldr	r3, [r4, #36]	; 0x24
 800a8cc:	701a      	strb	r2, [r3, #0]
          hi2c->XferCount--;
 800a8ce:	8d63      	ldrh	r3, [r4, #42]	; 0x2a
          hi2c->pBuffPtr++;
 800a8d0:	6a62      	ldr	r2, [r4, #36]	; 0x24
          hi2c->XferCount--;
 800a8d2:	3b01      	subs	r3, #1
 800a8d4:	b29b      	uxth	r3, r3
 800a8d6:	8563      	strh	r3, [r4, #42]	; 0x2a
          hi2c->XferSize--;
 800a8d8:	8d23      	ldrh	r3, [r4, #40]	; 0x28
 800a8da:	3b01      	subs	r3, #1
 800a8dc:	8523      	strh	r3, [r4, #40]	; 0x28
          *hi2c->pBuffPtr = (uint8_t)hi2c->Instance->DR;
 800a8de:	6823      	ldr	r3, [r4, #0]
          hi2c->pBuffPtr++;
 800a8e0:	1c51      	adds	r1, r2, #1
          *hi2c->pBuffPtr = (uint8_t)hi2c->Instance->DR;
 800a8e2:	691b      	ldr	r3, [r3, #16]
          hi2c->pBuffPtr++;
 800a8e4:	6261      	str	r1, [r4, #36]	; 0x24
          *hi2c->pBuffPtr = (uint8_t)hi2c->Instance->DR;
 800a8e6:	7053      	strb	r3, [r2, #1]
          hi2c->pBuffPtr++;
 800a8e8:	6a63      	ldr	r3, [r4, #36]	; 0x24
          hi2c->XferSize--;
 800a8ea:	8d22      	ldrh	r2, [r4, #40]	; 0x28
          hi2c->pBuffPtr++;
 800a8ec:	3301      	adds	r3, #1
 800a8ee:	6263      	str	r3, [r4, #36]	; 0x24
          hi2c->XferCount--;
 800a8f0:	8d63      	ldrh	r3, [r4, #42]	; 0x2a
          hi2c->XferSize--;
 800a8f2:	3a01      	subs	r2, #1
          hi2c->XferCount--;
 800a8f4:	3b01      	subs	r3, #1
          hi2c->XferSize--;
 800a8f6:	b292      	uxth	r2, r2
          hi2c->XferCount--;
 800a8f8:	b29b      	uxth	r3, r3
          hi2c->XferSize--;
 800a8fa:	8522      	strh	r2, [r4, #40]	; 0x28
          hi2c->XferCount--;
 800a8fc:	8563      	strh	r3, [r4, #42]	; 0x2a
 800a8fe:	e790      	b.n	800a822 <HAL_I2C_Mem_Read+0x186>
      CLEAR_BIT(hi2c->Instance->CR1, I2C_CR1_ACK);
 800a900:	6823      	ldr	r3, [r4, #0]
 800a902:	6819      	ldr	r1, [r3, #0]
 800a904:	f421 6180 	bic.w	r1, r1, #1024	; 0x400
 800a908:	6019      	str	r1, [r3, #0]
      SET_BIT(hi2c->Instance->CR1, I2C_CR1_POS);
 800a90a:	6819      	ldr	r1, [r3, #0]
 800a90c:	f441 6100 	orr.w	r1, r1, #2048	; 0x800
 800a910:	6019      	str	r1, [r3, #0]
      __HAL_I2C_CLEAR_ADDRFLAG(hi2c);
 800a912:	9004      	str	r0, [sp, #16]
 800a914:	6959      	ldr	r1, [r3, #20]
 800a916:	9104      	str	r1, [sp, #16]
 800a918:	6999      	ldr	r1, [r3, #24]
 800a91a:	9104      	str	r1, [sp, #16]
 800a91c:	9904      	ldr	r1, [sp, #16]
 800a91e:	e739      	b.n	800a794 <HAL_I2C_Mem_Read+0xf8>
  while (__HAL_I2C_GET_FLAG(hi2c, Flag) == Status)
 800a920:	695a      	ldr	r2, [r3, #20]
 800a922:	0750      	lsls	r0, r2, #29
 800a924:	f53f af44 	bmi.w	800a7b0 <HAL_I2C_Mem_Read+0x114>
      if (((HAL_GetTick() - Tickstart) > Timeout) || (Timeout == 0U))
 800a928:	f7fe febc 	bl	80096a4 <HAL_GetTick>
 800a92c:	1b80      	subs	r0, r0, r6
 800a92e:	4285      	cmp	r5, r0
 800a930:	d30e      	bcc.n	800a950 <HAL_I2C_Mem_Read+0x2b4>
 800a932:	b16d      	cbz	r5, 800a950 <HAL_I2C_Mem_Read+0x2b4>
  while (__HAL_I2C_GET_FLAG(hi2c, Flag) == Status)
 800a934:	6823      	ldr	r3, [r4, #0]
 800a936:	e735      	b.n	800a7a4 <HAL_I2C_Mem_Read+0x108>
 800a938:	6953      	ldr	r3, [r2, #20]
 800a93a:	0758      	lsls	r0, r3, #29
 800a93c:	f53f af50 	bmi.w	800a7e0 <HAL_I2C_Mem_Read+0x144>
      if (((HAL_GetTick() - Tickstart) > Timeout) || (Timeout == 0U))
 800a940:	f7fe feb0 	bl	80096a4 <HAL_GetTick>
 800a944:	1b80      	subs	r0, r0, r6
 800a946:	4285      	cmp	r5, r0
 800a948:	d302      	bcc.n	800a950 <HAL_I2C_Mem_Read+0x2b4>
 800a94a:	2d00      	cmp	r5, #0
 800a94c:	f47f af41 	bne.w	800a7d2 <HAL_I2C_Mem_Read+0x136>
        hi2c->PreviousState     = I2C_STATE_NONE;
 800a950:	2200      	movs	r2, #0
        hi2c->State             = HAL_I2C_STATE_READY;
 800a952:	2320      	movs	r3, #32
        hi2c->PreviousState     = I2C_STATE_NONE;
 800a954:	6322      	str	r2, [r4, #48]	; 0x30
        hi2c->State             = HAL_I2C_STATE_READY;
 800a956:	f884 303d 	strb.w	r3, [r4, #61]	; 0x3d
        hi2c->Mode              = HAL_I2C_MODE_NONE;
 800a95a:	f884 203e 	strb.w	r2, [r4, #62]	; 0x3e
        hi2c->ErrorCode         |= HAL_I2C_ERROR_TIMEOUT;
 800a95e:	6c23      	ldr	r3, [r4, #64]	; 0x40
        __HAL_UNLOCK(hi2c);
 800a960:	f884 203c 	strb.w	r2, [r4, #60]	; 0x3c
          return HAL_ERROR;
 800a964:	2701      	movs	r7, #1
        hi2c->ErrorCode         |= HAL_I2C_ERROR_TIMEOUT;
 800a966:	f043 0320 	orr.w	r3, r3, #32
}
 800a96a:	4638      	mov	r0, r7
        hi2c->ErrorCode         |= HAL_I2C_ERROR_TIMEOUT;
 800a96c:	6423      	str	r3, [r4, #64]	; 0x40
}
 800a96e:	b007      	add	sp, #28
 800a970:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
 800a974:	b95d      	cbnz	r5, 800a98e <HAL_I2C_Mem_Read+0x2f2>
 800a976:	e02b      	b.n	800a9d0 <HAL_I2C_Mem_Read+0x334>
 800a978:	ffff0000 	.word	0xffff0000
    if (__HAL_I2C_GET_FLAG(hi2c, I2C_FLAG_STOPF) == SET)
 800a97c:	695a      	ldr	r2, [r3, #20]
 800a97e:	06d2      	lsls	r2, r2, #27
 800a980:	d40c      	bmi.n	800a99c <HAL_I2C_Mem_Read+0x300>
    if (((HAL_GetTick() - Tickstart) > Timeout) || (Timeout == 0U))
 800a982:	f7fe fe8f 	bl	80096a4 <HAL_GetTick>
 800a986:	1b80      	subs	r0, r0, r6
 800a988:	4285      	cmp	r5, r0
 800a98a:	d3e1      	bcc.n	800a950 <HAL_I2C_Mem_Read+0x2b4>
  while (__HAL_I2C_GET_FLAG(hi2c, I2C_FLAG_RXNE) == RESET)
 800a98c:	6823      	ldr	r3, [r4, #0]
 800a98e:	695a      	ldr	r2, [r3, #20]
 800a990:	0651      	lsls	r1, r2, #25
 800a992:	d5f3      	bpl.n	800a97c <HAL_I2C_Mem_Read+0x2e0>
          *hi2c->pBuffPtr = (uint8_t)hi2c->Instance->DR;
 800a994:	691a      	ldr	r2, [r3, #16]
 800a996:	6a63      	ldr	r3, [r4, #36]	; 0x24
 800a998:	701a      	strb	r2, [r3, #0]
          hi2c->pBuffPtr++;
 800a99a:	e7a5      	b.n	800a8e8 <HAL_I2C_Mem_Read+0x24c>
      hi2c->PreviousState       = I2C_STATE_NONE;
 800a99c:	2200      	movs	r2, #0
      __HAL_I2C_CLEAR_FLAG(hi2c, I2C_FLAG_STOPF);
 800a99e:	f06f 0010 	mvn.w	r0, #16
      hi2c->State               = HAL_I2C_STATE_READY;
 800a9a2:	2120      	movs	r1, #32
      __HAL_I2C_CLEAR_FLAG(hi2c, I2C_FLAG_STOPF);
 800a9a4:	6158      	str	r0, [r3, #20]
      hi2c->PreviousState       = I2C_STATE_NONE;
 800a9a6:	6322      	str	r2, [r4, #48]	; 0x30
      hi2c->State               = HAL_I2C_STATE_READY;
 800a9a8:	f884 103d 	strb.w	r1, [r4, #61]	; 0x3d
      hi2c->Mode                = HAL_I2C_MODE_NONE;
 800a9ac:	f884 203e 	strb.w	r2, [r4, #62]	; 0x3e
      hi2c->ErrorCode           |= HAL_I2C_ERROR_NONE;
 800a9b0:	6c23      	ldr	r3, [r4, #64]	; 0x40
 800a9b2:	6423      	str	r3, [r4, #64]	; 0x40
      __HAL_UNLOCK(hi2c);
 800a9b4:	f884 203c 	strb.w	r2, [r4, #60]	; 0x3c
          return HAL_ERROR;
 800a9b8:	2701      	movs	r7, #1
 800a9ba:	e680      	b.n	800a6be <HAL_I2C_Mem_Read+0x22>
  while (__HAL_I2C_GET_FLAG(hi2c, I2C_FLAG_RXNE) == RESET)
 800a9bc:	695a      	ldr	r2, [r3, #20]
 800a9be:	0652      	lsls	r2, r2, #25
 800a9c0:	f53f af44 	bmi.w	800a84c <HAL_I2C_Mem_Read+0x1b0>
    if (__HAL_I2C_GET_FLAG(hi2c, I2C_FLAG_STOPF) == SET)
 800a9c4:	695a      	ldr	r2, [r3, #20]
 800a9c6:	06d1      	lsls	r1, r2, #27
 800a9c8:	d4e8      	bmi.n	800a99c <HAL_I2C_Mem_Read+0x300>
    if (((HAL_GetTick() - Tickstart) > Timeout) || (Timeout == 0U))
 800a9ca:	f7fe fe6b 	bl	80096a4 <HAL_GetTick>
 800a9ce:	e7bf      	b.n	800a950 <HAL_I2C_Mem_Read+0x2b4>
  while (__HAL_I2C_GET_FLAG(hi2c, I2C_FLAG_RXNE) == RESET)
 800a9d0:	695a      	ldr	r2, [r3, #20]
 800a9d2:	0650      	lsls	r0, r2, #25
 800a9d4:	d5f6      	bpl.n	800a9c4 <HAL_I2C_Mem_Read+0x328>
 800a9d6:	e7dd      	b.n	800a994 <HAL_I2C_Mem_Read+0x2f8>
      CLEAR_BIT(hi2c->Instance->CR1, I2C_CR1_ACK);
 800a9d8:	6823      	ldr	r3, [r4, #0]
 800a9da:	6819      	ldr	r1, [r3, #0]
 800a9dc:	f421 6180 	bic.w	r1, r1, #1024	; 0x400
 800a9e0:	6019      	str	r1, [r3, #0]
      __HAL_I2C_CLEAR_ADDRFLAG(hi2c);
 800a9e2:	9003      	str	r0, [sp, #12]
 800a9e4:	6959      	ldr	r1, [r3, #20]
 800a9e6:	9103      	str	r1, [sp, #12]
 800a9e8:	6999      	ldr	r1, [r3, #24]
 800a9ea:	9103      	str	r1, [sp, #12]
 800a9ec:	9903      	ldr	r1, [sp, #12]
      SET_BIT(hi2c->Instance->CR1, I2C_CR1_STOP);
 800a9ee:	6819      	ldr	r1, [r3, #0]
 800a9f0:	f441 7100 	orr.w	r1, r1, #512	; 0x200
 800a9f4:	6019      	str	r1, [r3, #0]
 800a9f6:	e6cd      	b.n	800a794 <HAL_I2C_Mem_Read+0xf8>

0800a9f8 <HAL_I2C_MasterTxCpltCallback>:
 800a9f8:	4770      	bx	lr
 800a9fa:	bf00      	nop

0800a9fc <HAL_I2C_MasterRxCpltCallback>:
 800a9fc:	4770      	bx	lr
 800a9fe:	bf00      	nop

0800aa00 <HAL_I2C_SlaveTxCpltCallback>:
 800aa00:	4770      	bx	lr
 800aa02:	bf00      	nop

0800aa04 <HAL_I2C_SlaveRxCpltCallback>:
 800aa04:	4770      	bx	lr
 800aa06:	bf00      	nop

0800aa08 <HAL_I2C_AddrCallback>:
}
 800aa08:	4770      	bx	lr
 800aa0a:	bf00      	nop

0800aa0c <HAL_I2C_ListenCpltCallback>:
 800aa0c:	4770      	bx	lr
 800aa0e:	bf00      	nop

0800aa10 <HAL_I2C_MemTxCpltCallback>:
 800aa10:	4770      	bx	lr
 800aa12:	bf00      	nop

0800aa14 <I2C_MemoryTransmit_TXE_BTF>:
  HAL_I2C_StateTypeDef CurrentState = hi2c->State;
 800aa14:	f890 203d 	ldrb.w	r2, [r0, #61]	; 0x3d
  if (hi2c->EventCount == 0U)
 800aa18:	6d01      	ldr	r1, [r0, #80]	; 0x50
{
 800aa1a:	4603      	mov	r3, r0
  if (hi2c->EventCount == 0U)
 800aa1c:	b959      	cbnz	r1, 800aa36 <I2C_MemoryTransmit_TXE_BTF+0x22>
    if (hi2c->MemaddSize == I2C_MEMADD_SIZE_8BIT)
 800aa1e:	6cc2      	ldr	r2, [r0, #76]	; 0x4c
      hi2c->Instance->DR = I2C_MEM_ADD_LSB(hi2c->Memaddress);
 800aa20:	6801      	ldr	r1, [r0, #0]
    if (hi2c->MemaddSize == I2C_MEMADD_SIZE_8BIT)
 800aa22:	2a01      	cmp	r2, #1
      hi2c->Instance->DR = I2C_MEM_ADD_LSB(hi2c->Memaddress);
 800aa24:	6c82      	ldr	r2, [r0, #72]	; 0x48
    if (hi2c->MemaddSize == I2C_MEMADD_SIZE_8BIT)
 800aa26:	d00d      	beq.n	800aa44 <I2C_MemoryTransmit_TXE_BTF+0x30>
      hi2c->Instance->DR = I2C_MEM_ADD_MSB(hi2c->Memaddress);
 800aa28:	f3c2 2207 	ubfx	r2, r2, #8, #8
 800aa2c:	610a      	str	r2, [r1, #16]
      hi2c->EventCount++;
 800aa2e:	6d02      	ldr	r2, [r0, #80]	; 0x50
 800aa30:	3201      	adds	r2, #1
 800aa32:	6502      	str	r2, [r0, #80]	; 0x50
 800aa34:	4770      	bx	lr
  else if (hi2c->EventCount == 1U)
 800aa36:	6d01      	ldr	r1, [r0, #80]	; 0x50
 800aa38:	2901      	cmp	r1, #1
 800aa3a:	d009      	beq.n	800aa50 <I2C_MemoryTransmit_TXE_BTF+0x3c>
  else if (hi2c->EventCount == 2U)
 800aa3c:	6d01      	ldr	r1, [r0, #80]	; 0x50
 800aa3e:	2902      	cmp	r1, #2
 800aa40:	d00e      	beq.n	800aa60 <I2C_MemoryTransmit_TXE_BTF+0x4c>
 800aa42:	4770      	bx	lr
      hi2c->Instance->DR = I2C_MEM_ADD_LSB(hi2c->Memaddress);
 800aa44:	b2d2      	uxtb	r2, r2
 800aa46:	610a      	str	r2, [r1, #16]
      hi2c->EventCount += 2U;
 800aa48:	6d02      	ldr	r2, [r0, #80]	; 0x50
 800aa4a:	3202      	adds	r2, #2
 800aa4c:	6502      	str	r2, [r0, #80]	; 0x50
 800aa4e:	4770      	bx	lr
    hi2c->Instance->DR = I2C_MEM_ADD_LSB(hi2c->Memaddress);
 800aa50:	6c82      	ldr	r2, [r0, #72]	; 0x48
 800aa52:	6801      	ldr	r1, [r0, #0]
 800aa54:	b2d2      	uxtb	r2, r2
 800aa56:	610a      	str	r2, [r1, #16]
    hi2c->EventCount++;
 800aa58:	6d02      	ldr	r2, [r0, #80]	; 0x50
 800aa5a:	3201      	adds	r2, #1
 800aa5c:	6502      	str	r2, [r0, #80]	; 0x50
 800aa5e:	4770      	bx	lr
 800aa60:	b2d2      	uxtb	r2, r2
    if (CurrentState == HAL_I2C_STATE_BUSY_RX)
 800aa62:	2a22      	cmp	r2, #34	; 0x22
 800aa64:	d01f      	beq.n	800aaa6 <I2C_MemoryTransmit_TXE_BTF+0x92>
    else if ((hi2c->XferCount > 0U) && (CurrentState == HAL_I2C_STATE_BUSY_TX))
 800aa66:	8d41      	ldrh	r1, [r0, #42]	; 0x2a
 800aa68:	b289      	uxth	r1, r1
 800aa6a:	b9c1      	cbnz	r1, 800aa9e <I2C_MemoryTransmit_TXE_BTF+0x8a>
    else if ((hi2c->XferCount == 0U) && (CurrentState == HAL_I2C_STATE_BUSY_TX))
 800aa6c:	8d41      	ldrh	r1, [r0, #42]	; 0x2a
 800aa6e:	b289      	uxth	r1, r1
 800aa70:	2900      	cmp	r1, #0
 800aa72:	d1e6      	bne.n	800aa42 <I2C_MemoryTransmit_TXE_BTF+0x2e>
 800aa74:	2a21      	cmp	r2, #33	; 0x21
 800aa76:	d1e4      	bne.n	800aa42 <I2C_MemoryTransmit_TXE_BTF+0x2e>
      __HAL_I2C_DISABLE_IT(hi2c, I2C_IT_EVT | I2C_IT_BUF | I2C_IT_ERR);
 800aa78:	6802      	ldr	r2, [r0, #0]
{
 800aa7a:	b510      	push	{r4, lr}
      __HAL_I2C_DISABLE_IT(hi2c, I2C_IT_EVT | I2C_IT_BUF | I2C_IT_ERR);
 800aa7c:	6854      	ldr	r4, [r2, #4]
 800aa7e:	f424 64e0 	bic.w	r4, r4, #1792	; 0x700
 800aa82:	6054      	str	r4, [r2, #4]
      SET_BIT(hi2c->Instance->CR1, I2C_CR1_STOP);
 800aa84:	6814      	ldr	r4, [r2, #0]
 800aa86:	f444 7400 	orr.w	r4, r4, #512	; 0x200
 800aa8a:	6014      	str	r4, [r2, #0]
      hi2c->State = HAL_I2C_STATE_READY;
 800aa8c:	2220      	movs	r2, #32
      hi2c->PreviousState = I2C_STATE_NONE;
 800aa8e:	6301      	str	r1, [r0, #48]	; 0x30
      hi2c->State = HAL_I2C_STATE_READY;
 800aa90:	f880 203d 	strb.w	r2, [r0, #61]	; 0x3d
      hi2c->Mode = HAL_I2C_MODE_NONE;
 800aa94:	f880 103e 	strb.w	r1, [r0, #62]	; 0x3e
      HAL_I2C_MemTxCpltCallback(hi2c);
 800aa98:	f7ff ffba 	bl	800aa10 <HAL_I2C_MemTxCpltCallback>
}
 800aa9c:	bd10      	pop	{r4, pc}
    else if ((hi2c->XferCount > 0U) && (CurrentState == HAL_I2C_STATE_BUSY_TX))
 800aa9e:	2a21      	cmp	r2, #33	; 0x21
 800aaa0:	d00a      	beq.n	800aab8 <I2C_MemoryTransmit_TXE_BTF+0xa4>
    else if ((hi2c->XferCount == 0U) && (CurrentState == HAL_I2C_STATE_BUSY_TX))
 800aaa2:	8d5b      	ldrh	r3, [r3, #42]	; 0x2a
 800aaa4:	4770      	bx	lr
      hi2c->Instance->CR1 |= I2C_CR1_START;
 800aaa6:	6801      	ldr	r1, [r0, #0]
 800aaa8:	680a      	ldr	r2, [r1, #0]
 800aaaa:	f442 7280 	orr.w	r2, r2, #256	; 0x100
 800aaae:	600a      	str	r2, [r1, #0]
      hi2c->EventCount++;
 800aab0:	6d02      	ldr	r2, [r0, #80]	; 0x50
 800aab2:	3201      	adds	r2, #1
 800aab4:	6502      	str	r2, [r0, #80]	; 0x50
 800aab6:	4770      	bx	lr
      hi2c->Instance->DR = *hi2c->pBuffPtr;
 800aab8:	6a41      	ldr	r1, [r0, #36]	; 0x24
 800aaba:	6802      	ldr	r2, [r0, #0]
 800aabc:	f811 0b01 	ldrb.w	r0, [r1], #1
 800aac0:	6110      	str	r0, [r2, #16]
      hi2c->XferCount--;
 800aac2:	8d5a      	ldrh	r2, [r3, #42]	; 0x2a
      hi2c->pBuffPtr++;
 800aac4:	6259      	str	r1, [r3, #36]	; 0x24
      hi2c->XferCount--;
 800aac6:	3a01      	subs	r2, #1
 800aac8:	b292      	uxth	r2, r2
 800aaca:	855a      	strh	r2, [r3, #42]	; 0x2a
 800aacc:	4770      	bx	lr
 800aace:	bf00      	nop

0800aad0 <HAL_I2C_MemRxCpltCallback>:
 800aad0:	4770      	bx	lr
 800aad2:	bf00      	nop

0800aad4 <HAL_I2C_ErrorCallback>:
 800aad4:	4770      	bx	lr
 800aad6:	bf00      	nop

0800aad8 <HAL_I2C_AbortCpltCallback>:
 800aad8:	4770      	bx	lr
 800aada:	bf00      	nop

0800aadc <I2C_DMAAbort>:
{
 800aadc:	b570      	push	{r4, r5, r6, lr}
  count = I2C_TIMEOUT_FLAG * (SystemCoreClock / 25U / 1000U);
 800aade:	4b3a      	ldr	r3, [pc, #232]	; (800abc8 <I2C_DMAAbort+0xec>)
 800aae0:	4a3a      	ldr	r2, [pc, #232]	; (800abcc <I2C_DMAAbort+0xf0>)
 800aae2:	681b      	ldr	r3, [r3, #0]
  I2C_HandleTypeDef *hi2c = (I2C_HandleTypeDef *)((DMA_HandleTypeDef *)hdma)->Parent; /* Derogation MISRAC2012-Rule-11.5 */
 800aae4:	6b80      	ldr	r0, [r0, #56]	; 0x38
{
 800aae6:	b082      	sub	sp, #8
  count = I2C_TIMEOUT_FLAG * (SystemCoreClock / 25U / 1000U);
 800aae8:	08db      	lsrs	r3, r3, #3
  __IO uint32_t count = 0U;
 800aaea:	2100      	movs	r1, #0
  count = I2C_TIMEOUT_FLAG * (SystemCoreClock / 25U / 1000U);
 800aaec:	fba2 2303 	umull	r2, r3, r2, r3
  __IO uint32_t count = 0U;
 800aaf0:	9101      	str	r1, [sp, #4]
  count = I2C_TIMEOUT_FLAG * (SystemCoreClock / 25U / 1000U);
 800aaf2:	0a1b      	lsrs	r3, r3, #8
  HAL_I2C_StateTypeDef CurrentState = hi2c->State;
 800aaf4:	f890 103d 	ldrb.w	r1, [r0, #61]	; 0x3d
  while (READ_BIT(hi2c->Instance->CR1, I2C_CR1_STOP) == I2C_CR1_STOP);
 800aaf8:	6802      	ldr	r2, [r0, #0]
  count = I2C_TIMEOUT_FLAG * (SystemCoreClock / 25U / 1000U);
 800aafa:	eb03 0383 	add.w	r3, r3, r3, lsl #2
 800aafe:	ebc3 03c3 	rsb	r3, r3, r3, lsl #3
  HAL_I2C_StateTypeDef CurrentState = hi2c->State;
 800ab02:	b2c9      	uxtb	r1, r1
  count = I2C_TIMEOUT_FLAG * (SystemCoreClock / 25U / 1000U);
 800ab04:	9301      	str	r3, [sp, #4]
 800ab06:	e005      	b.n	800ab14 <I2C_DMAAbort+0x38>
    count--;
 800ab08:	9b01      	ldr	r3, [sp, #4]
 800ab0a:	3b01      	subs	r3, #1
 800ab0c:	9301      	str	r3, [sp, #4]
  while (READ_BIT(hi2c->Instance->CR1, I2C_CR1_STOP) == I2C_CR1_STOP);
 800ab0e:	6813      	ldr	r3, [r2, #0]
 800ab10:	059b      	lsls	r3, r3, #22
 800ab12:	d506      	bpl.n	800ab22 <I2C_DMAAbort+0x46>
    if (count == 0U)
 800ab14:	9b01      	ldr	r3, [sp, #4]
 800ab16:	2b00      	cmp	r3, #0
 800ab18:	d1f6      	bne.n	800ab08 <I2C_DMAAbort+0x2c>
      hi2c->ErrorCode |= HAL_I2C_ERROR_TIMEOUT;
 800ab1a:	6c03      	ldr	r3, [r0, #64]	; 0x40
 800ab1c:	f043 0320 	orr.w	r3, r3, #32
 800ab20:	6403      	str	r3, [r0, #64]	; 0x40
  if (hi2c->hdmatx != NULL)
 800ab22:	6b44      	ldr	r4, [r0, #52]	; 0x34
 800ab24:	b34c      	cbz	r4, 800ab7a <I2C_DMAAbort+0x9e>
  if (hi2c->hdmarx != NULL)
 800ab26:	6b83      	ldr	r3, [r0, #56]	; 0x38
    hi2c->hdmatx->XferCpltCallback = NULL;
 800ab28:	2500      	movs	r5, #0
 800ab2a:	63e5      	str	r5, [r4, #60]	; 0x3c
  if (hi2c->hdmarx != NULL)
 800ab2c:	b1f3      	cbz	r3, 800ab6c <I2C_DMAAbort+0x90>
  CLEAR_BIT(hi2c->Instance->CR1, I2C_CR1_ACK);
 800ab2e:	6816      	ldr	r6, [r2, #0]
    hi2c->hdmarx->XferCpltCallback = NULL;
 800ab30:	63dd      	str	r5, [r3, #60]	; 0x3c
  CLEAR_BIT(hi2c->Instance->CR1, I2C_CR1_ACK);
 800ab32:	f426 6680 	bic.w	r6, r6, #1024	; 0x400
 800ab36:	6016      	str	r6, [r2, #0]
  hi2c->XferCount = 0U;
 800ab38:	8545      	strh	r5, [r0, #42]	; 0x2a
    hi2c->hdmatx->XferAbortCallback = NULL;
 800ab3a:	6525      	str	r5, [r4, #80]	; 0x50
    hi2c->hdmarx->XferAbortCallback = NULL;
 800ab3c:	2400      	movs	r4, #0
 800ab3e:	651c      	str	r4, [r3, #80]	; 0x50
  __HAL_I2C_DISABLE(hi2c);
 800ab40:	6813      	ldr	r3, [r2, #0]
 800ab42:	f023 0301 	bic.w	r3, r3, #1
 800ab46:	6013      	str	r3, [r2, #0]
  if (hi2c->State == HAL_I2C_STATE_ABORT)
 800ab48:	f890 303d 	ldrb.w	r3, [r0, #61]	; 0x3d
 800ab4c:	2b60      	cmp	r3, #96	; 0x60
 800ab4e:	d02a      	beq.n	800aba6 <I2C_DMAAbort+0xca>
    if (((uint32_t)CurrentState & (uint32_t)HAL_I2C_STATE_LISTEN) == (uint32_t)HAL_I2C_STATE_LISTEN)
 800ab50:	f001 0128 	and.w	r1, r1, #40	; 0x28
 800ab54:	2928      	cmp	r1, #40	; 0x28
 800ab56:	d019      	beq.n	800ab8c <I2C_DMAAbort+0xb0>
      hi2c->State = HAL_I2C_STATE_READY;
 800ab58:	2220      	movs	r2, #32
      hi2c->Mode = HAL_I2C_MODE_NONE;
 800ab5a:	2300      	movs	r3, #0
      hi2c->State = HAL_I2C_STATE_READY;
 800ab5c:	f880 203d 	strb.w	r2, [r0, #61]	; 0x3d
      hi2c->Mode = HAL_I2C_MODE_NONE;
 800ab60:	f880 303e 	strb.w	r3, [r0, #62]	; 0x3e
    HAL_I2C_ErrorCallback(hi2c);
 800ab64:	f7ff ffb6 	bl	800aad4 <HAL_I2C_ErrorCallback>
}
 800ab68:	b002      	add	sp, #8
 800ab6a:	bd70      	pop	{r4, r5, r6, pc}
  CLEAR_BIT(hi2c->Instance->CR1, I2C_CR1_ACK);
 800ab6c:	6815      	ldr	r5, [r2, #0]
 800ab6e:	f425 6580 	bic.w	r5, r5, #1024	; 0x400
 800ab72:	6015      	str	r5, [r2, #0]
  hi2c->XferCount = 0U;
 800ab74:	8543      	strh	r3, [r0, #42]	; 0x2a
    hi2c->hdmatx->XferAbortCallback = NULL;
 800ab76:	6523      	str	r3, [r4, #80]	; 0x50
  if (hi2c->hdmarx != NULL)
 800ab78:	e7e2      	b.n	800ab40 <I2C_DMAAbort+0x64>
  if (hi2c->hdmarx != NULL)
 800ab7a:	6b83      	ldr	r3, [r0, #56]	; 0x38
 800ab7c:	b1f3      	cbz	r3, 800abbc <I2C_DMAAbort+0xe0>
  CLEAR_BIT(hi2c->Instance->CR1, I2C_CR1_ACK);
 800ab7e:	6815      	ldr	r5, [r2, #0]
    hi2c->hdmarx->XferCpltCallback = NULL;
 800ab80:	63dc      	str	r4, [r3, #60]	; 0x3c
  CLEAR_BIT(hi2c->Instance->CR1, I2C_CR1_ACK);
 800ab82:	f425 6580 	bic.w	r5, r5, #1024	; 0x400
 800ab86:	6015      	str	r5, [r2, #0]
  hi2c->XferCount = 0U;
 800ab88:	8544      	strh	r4, [r0, #42]	; 0x2a
  if (hi2c->hdmatx != NULL)
 800ab8a:	e7d7      	b.n	800ab3c <I2C_DMAAbort+0x60>
      __HAL_I2C_ENABLE(hi2c);
 800ab8c:	6813      	ldr	r3, [r2, #0]
 800ab8e:	f043 0301 	orr.w	r3, r3, #1
 800ab92:	6013      	str	r3, [r2, #0]
      SET_BIT(hi2c->Instance->CR1, I2C_CR1_ACK);
 800ab94:	6813      	ldr	r3, [r2, #0]
      hi2c->PreviousState = I2C_STATE_NONE;
 800ab96:	2400      	movs	r4, #0
      SET_BIT(hi2c->Instance->CR1, I2C_CR1_ACK);
 800ab98:	f443 6380 	orr.w	r3, r3, #1024	; 0x400
 800ab9c:	6013      	str	r3, [r2, #0]
      hi2c->PreviousState = I2C_STATE_NONE;
 800ab9e:	6304      	str	r4, [r0, #48]	; 0x30
      hi2c->State = HAL_I2C_STATE_LISTEN;
 800aba0:	f880 103d 	strb.w	r1, [r0, #61]	; 0x3d
 800aba4:	e7de      	b.n	800ab64 <I2C_DMAAbort+0x88>
    hi2c->Mode          = HAL_I2C_MODE_NONE;
 800aba6:	2300      	movs	r3, #0
    hi2c->State         = HAL_I2C_STATE_READY;
 800aba8:	2220      	movs	r2, #32
 800abaa:	f880 203d 	strb.w	r2, [r0, #61]	; 0x3d
    hi2c->Mode          = HAL_I2C_MODE_NONE;
 800abae:	f880 303e 	strb.w	r3, [r0, #62]	; 0x3e
    hi2c->ErrorCode     = HAL_I2C_ERROR_NONE;
 800abb2:	6403      	str	r3, [r0, #64]	; 0x40
    HAL_I2C_AbortCpltCallback(hi2c);
 800abb4:	f7ff ff90 	bl	800aad8 <HAL_I2C_AbortCpltCallback>
}
 800abb8:	b002      	add	sp, #8
 800abba:	bd70      	pop	{r4, r5, r6, pc}
  CLEAR_BIT(hi2c->Instance->CR1, I2C_CR1_ACK);
 800abbc:	6814      	ldr	r4, [r2, #0]
 800abbe:	f424 6480 	bic.w	r4, r4, #1024	; 0x400
 800abc2:	6014      	str	r4, [r2, #0]
  hi2c->XferCount = 0U;
 800abc4:	8543      	strh	r3, [r0, #42]	; 0x2a
  if (hi2c->hdmatx != NULL)
 800abc6:	e7bb      	b.n	800ab40 <I2C_DMAAbort+0x64>
 800abc8:	20000078 	.word	0x20000078
 800abcc:	14f8b589 	.word	0x14f8b589

0800abd0 <I2C_ITError>:
{
 800abd0:	b510      	push	{r4, lr}
  HAL_I2C_StateTypeDef CurrentState = hi2c->State;
 800abd2:	f890 203d 	ldrb.w	r2, [r0, #61]	; 0x3d
  HAL_I2C_ModeTypeDef CurrentMode = hi2c->Mode;
 800abd6:	f890 303e 	ldrb.w	r3, [r0, #62]	; 0x3e
  if (((CurrentMode == HAL_I2C_MODE_MASTER) || (CurrentMode == HAL_I2C_MODE_MEM)) && (CurrentState == HAL_I2C_STATE_BUSY_RX))
 800abda:	2b10      	cmp	r3, #16
{
 800abdc:	4604      	mov	r4, r0
  HAL_I2C_StateTypeDef CurrentState = hi2c->State;
 800abde:	b2d2      	uxtb	r2, r2
  if (((CurrentMode == HAL_I2C_MODE_MASTER) || (CurrentMode == HAL_I2C_MODE_MEM)) && (CurrentState == HAL_I2C_STATE_BUSY_RX))
 800abe0:	d039      	beq.n	800ac56 <I2C_ITError+0x86>
 800abe2:	b2d9      	uxtb	r1, r3
 800abe4:	2940      	cmp	r1, #64	; 0x40
 800abe6:	d036      	beq.n	800ac56 <I2C_ITError+0x86>
  if (((uint32_t)CurrentState & (uint32_t)HAL_I2C_STATE_LISTEN) == (uint32_t)HAL_I2C_STATE_LISTEN)
 800abe8:	f002 0128 	and.w	r1, r2, #40	; 0x28
 800abec:	2928      	cmp	r1, #40	; 0x28
 800abee:	d03d      	beq.n	800ac6c <I2C_ITError+0x9c>
    hi2c->Instance->CR1 &= ~I2C_CR1_POS;
 800abf0:	6823      	ldr	r3, [r4, #0]
    if ((READ_BIT(hi2c->Instance->CR2, I2C_CR2_DMAEN) != I2C_CR2_DMAEN) && (CurrentState != HAL_I2C_STATE_ABORT))
 800abf2:	6859      	ldr	r1, [r3, #4]
 800abf4:	0508      	lsls	r0, r1, #20
 800abf6:	d407      	bmi.n	800ac08 <I2C_ITError+0x38>
 800abf8:	2a60      	cmp	r2, #96	; 0x60
 800abfa:	d005      	beq.n	800ac08 <I2C_ITError+0x38>
      hi2c->State = HAL_I2C_STATE_READY;
 800abfc:	2120      	movs	r1, #32
      hi2c->Mode = HAL_I2C_MODE_NONE;
 800abfe:	2200      	movs	r2, #0
      hi2c->State = HAL_I2C_STATE_READY;
 800ac00:	f884 103d 	strb.w	r1, [r4, #61]	; 0x3d
      hi2c->Mode = HAL_I2C_MODE_NONE;
 800ac04:	f884 203e 	strb.w	r2, [r4, #62]	; 0x3e
    hi2c->PreviousState = I2C_STATE_NONE;
 800ac08:	2200      	movs	r2, #0
 800ac0a:	6322      	str	r2, [r4, #48]	; 0x30
  if (READ_BIT(hi2c->Instance->CR2, I2C_CR2_DMAEN) == I2C_CR2_DMAEN)
 800ac0c:	685a      	ldr	r2, [r3, #4]
 800ac0e:	f412 6200 	ands.w	r2, r2, #2048	; 0x800
 800ac12:	d134      	bne.n	800ac7e <I2C_ITError+0xae>
  else if (hi2c->State == HAL_I2C_STATE_ABORT)
 800ac14:	f894 103d 	ldrb.w	r1, [r4, #61]	; 0x3d
 800ac18:	2960      	cmp	r1, #96	; 0x60
 800ac1a:	d075      	beq.n	800ad08 <I2C_ITError+0x138>
    if (__HAL_I2C_GET_FLAG(hi2c, I2C_FLAG_RXNE) == SET)
 800ac1c:	695a      	ldr	r2, [r3, #20]
 800ac1e:	0650      	lsls	r0, r2, #25
 800ac20:	d505      	bpl.n	800ac2e <I2C_ITError+0x5e>
      *hi2c->pBuffPtr = (uint8_t)hi2c->Instance->DR;
 800ac22:	6a62      	ldr	r2, [r4, #36]	; 0x24
 800ac24:	691b      	ldr	r3, [r3, #16]
 800ac26:	7013      	strb	r3, [r2, #0]
      hi2c->pBuffPtr++;
 800ac28:	6a63      	ldr	r3, [r4, #36]	; 0x24
 800ac2a:	3301      	adds	r3, #1
 800ac2c:	6263      	str	r3, [r4, #36]	; 0x24
    HAL_I2C_ErrorCallback(hi2c);
 800ac2e:	4620      	mov	r0, r4
 800ac30:	f7ff ff50 	bl	800aad4 <HAL_I2C_ErrorCallback>
  CurrentError = hi2c->ErrorCode;
 800ac34:	6c23      	ldr	r3, [r4, #64]	; 0x40
  if (((CurrentError & HAL_I2C_ERROR_BERR) == HAL_I2C_ERROR_BERR) || \
 800ac36:	0719      	lsls	r1, r3, #28
 800ac38:	d004      	beq.n	800ac44 <I2C_ITError+0x74>
    __HAL_I2C_DISABLE_IT(hi2c, I2C_IT_EVT | I2C_IT_BUF | I2C_IT_ERR);
 800ac3a:	6822      	ldr	r2, [r4, #0]
 800ac3c:	6853      	ldr	r3, [r2, #4]
 800ac3e:	f423 63e0 	bic.w	r3, r3, #1792	; 0x700
 800ac42:	6053      	str	r3, [r2, #4]
  CurrentState = hi2c->State;
 800ac44:	f894 303d 	ldrb.w	r3, [r4, #61]	; 0x3d
  if (((hi2c->ErrorCode & HAL_I2C_ERROR_AF) == HAL_I2C_ERROR_AF) && (CurrentState == HAL_I2C_STATE_LISTEN))
 800ac48:	6c22      	ldr	r2, [r4, #64]	; 0x40
 800ac4a:	0752      	lsls	r2, r2, #29
  CurrentState = hi2c->State;
 800ac4c:	b2db      	uxtb	r3, r3
  if (((hi2c->ErrorCode & HAL_I2C_ERROR_AF) == HAL_I2C_ERROR_AF) && (CurrentState == HAL_I2C_STATE_LISTEN))
 800ac4e:	d501      	bpl.n	800ac54 <I2C_ITError+0x84>
 800ac50:	2b28      	cmp	r3, #40	; 0x28
 800ac52:	d02f      	beq.n	800acb4 <I2C_ITError+0xe4>
}
 800ac54:	bd10      	pop	{r4, pc}
  if (((CurrentMode == HAL_I2C_MODE_MASTER) || (CurrentMode == HAL_I2C_MODE_MEM)) && (CurrentState == HAL_I2C_STATE_BUSY_RX))
 800ac56:	2a22      	cmp	r2, #34	; 0x22
 800ac58:	d1c6      	bne.n	800abe8 <I2C_ITError+0x18>
    hi2c->Instance->CR1 &= ~I2C_CR1_POS;
 800ac5a:	6823      	ldr	r3, [r4, #0]
 800ac5c:	681a      	ldr	r2, [r3, #0]
 800ac5e:	f422 6200 	bic.w	r2, r2, #2048	; 0x800
 800ac62:	601a      	str	r2, [r3, #0]
    if ((READ_BIT(hi2c->Instance->CR2, I2C_CR2_DMAEN) != I2C_CR2_DMAEN) && (CurrentState != HAL_I2C_STATE_ABORT))
 800ac64:	685a      	ldr	r2, [r3, #4]
 800ac66:	0512      	lsls	r2, r2, #20
 800ac68:	d5c8      	bpl.n	800abfc <I2C_ITError+0x2c>
 800ac6a:	e7cd      	b.n	800ac08 <I2C_ITError+0x38>
    hi2c->PreviousState = I2C_STATE_NONE;
 800ac6c:	2300      	movs	r3, #0
 800ac6e:	6323      	str	r3, [r4, #48]	; 0x30
    hi2c->Instance->CR1 &= ~I2C_CR1_POS;
 800ac70:	6823      	ldr	r3, [r4, #0]
    hi2c->State = HAL_I2C_STATE_LISTEN;
 800ac72:	f884 103d 	strb.w	r1, [r4, #61]	; 0x3d
  if (READ_BIT(hi2c->Instance->CR2, I2C_CR2_DMAEN) == I2C_CR2_DMAEN)
 800ac76:	685a      	ldr	r2, [r3, #4]
 800ac78:	f412 6200 	ands.w	r2, r2, #2048	; 0x800
 800ac7c:	d0ca      	beq.n	800ac14 <I2C_ITError+0x44>
    hi2c->Instance->CR2 &= ~I2C_CR2_DMAEN;
 800ac7e:	685a      	ldr	r2, [r3, #4]
    if (hi2c->hdmatx->State != HAL_DMA_STATE_READY)
 800ac80:	6b60      	ldr	r0, [r4, #52]	; 0x34
    hi2c->Instance->CR2 &= ~I2C_CR2_DMAEN;
 800ac82:	f422 6200 	bic.w	r2, r2, #2048	; 0x800
 800ac86:	605a      	str	r2, [r3, #4]
    if (hi2c->hdmatx->State != HAL_DMA_STATE_READY)
 800ac88:	f890 3035 	ldrb.w	r3, [r0, #53]	; 0x35
 800ac8c:	2b01      	cmp	r3, #1
 800ac8e:	d01e      	beq.n	800acce <I2C_ITError+0xfe>
      hi2c->hdmatx->XferAbortCallback = I2C_DMAAbort;
 800ac90:	4b28      	ldr	r3, [pc, #160]	; (800ad34 <I2C_ITError+0x164>)
 800ac92:	6503      	str	r3, [r0, #80]	; 0x50
      if (HAL_DMA_Abort_IT(hi2c->hdmatx) != HAL_OK)
 800ac94:	f7fe fd90 	bl	80097b8 <HAL_DMA_Abort_IT>
 800ac98:	2800      	cmp	r0, #0
 800ac9a:	d0cb      	beq.n	800ac34 <I2C_ITError+0x64>
        __HAL_I2C_DISABLE(hi2c);
 800ac9c:	6822      	ldr	r2, [r4, #0]
        hi2c->hdmatx->XferAbortCallback(hi2c->hdmatx);
 800ac9e:	6b60      	ldr	r0, [r4, #52]	; 0x34
        __HAL_I2C_DISABLE(hi2c);
 800aca0:	6813      	ldr	r3, [r2, #0]
        hi2c->State = HAL_I2C_STATE_READY;
 800aca2:	2120      	movs	r1, #32
        __HAL_I2C_DISABLE(hi2c);
 800aca4:	f023 0301 	bic.w	r3, r3, #1
 800aca8:	6013      	str	r3, [r2, #0]
        hi2c->State = HAL_I2C_STATE_READY;
 800acaa:	f884 103d 	strb.w	r1, [r4, #61]	; 0x3d
        hi2c->hdmatx->XferAbortCallback(hi2c->hdmatx);
 800acae:	6d03      	ldr	r3, [r0, #80]	; 0x50
 800acb0:	4798      	blx	r3
 800acb2:	e7bf      	b.n	800ac34 <I2C_ITError+0x64>
    hi2c->PreviousState = I2C_STATE_NONE;
 800acb4:	2300      	movs	r3, #0
    hi2c->XferOptions   = I2C_NO_OPTION_FRAME;
 800acb6:	4920      	ldr	r1, [pc, #128]	; (800ad38 <I2C_ITError+0x168>)
 800acb8:	62e1      	str	r1, [r4, #44]	; 0x2c
    hi2c->State         = HAL_I2C_STATE_READY;
 800acba:	2220      	movs	r2, #32
    hi2c->PreviousState = I2C_STATE_NONE;
 800acbc:	6323      	str	r3, [r4, #48]	; 0x30
    HAL_I2C_ListenCpltCallback(hi2c);
 800acbe:	4620      	mov	r0, r4
    hi2c->State         = HAL_I2C_STATE_READY;
 800acc0:	f884 203d 	strb.w	r2, [r4, #61]	; 0x3d
    hi2c->Mode          = HAL_I2C_MODE_NONE;
 800acc4:	f884 303e 	strb.w	r3, [r4, #62]	; 0x3e
    HAL_I2C_ListenCpltCallback(hi2c);
 800acc8:	f7ff fea0 	bl	800aa0c <HAL_I2C_ListenCpltCallback>
}
 800accc:	bd10      	pop	{r4, pc}
      hi2c->hdmarx->XferAbortCallback = I2C_DMAAbort;
 800acce:	6ba0      	ldr	r0, [r4, #56]	; 0x38
 800acd0:	4b18      	ldr	r3, [pc, #96]	; (800ad34 <I2C_ITError+0x164>)
 800acd2:	6503      	str	r3, [r0, #80]	; 0x50
      if (HAL_DMA_Abort_IT(hi2c->hdmarx) != HAL_OK)
 800acd4:	f7fe fd70 	bl	80097b8 <HAL_DMA_Abort_IT>
 800acd8:	2800      	cmp	r0, #0
 800acda:	d0ab      	beq.n	800ac34 <I2C_ITError+0x64>
        if (__HAL_I2C_GET_FLAG(hi2c, I2C_FLAG_RXNE) == SET)
 800acdc:	6823      	ldr	r3, [r4, #0]
 800acde:	695a      	ldr	r2, [r3, #20]
 800ace0:	0651      	lsls	r1, r2, #25
 800ace2:	d506      	bpl.n	800acf2 <I2C_ITError+0x122>
          *hi2c->pBuffPtr = (uint8_t)hi2c->Instance->DR;
 800ace4:	6a62      	ldr	r2, [r4, #36]	; 0x24
 800ace6:	691b      	ldr	r3, [r3, #16]
 800ace8:	7013      	strb	r3, [r2, #0]
          hi2c->pBuffPtr++;
 800acea:	6a62      	ldr	r2, [r4, #36]	; 0x24
        __HAL_I2C_DISABLE(hi2c);
 800acec:	6823      	ldr	r3, [r4, #0]
          hi2c->pBuffPtr++;
 800acee:	3201      	adds	r2, #1
 800acf0:	6262      	str	r2, [r4, #36]	; 0x24
        __HAL_I2C_DISABLE(hi2c);
 800acf2:	681a      	ldr	r2, [r3, #0]
        hi2c->hdmarx->XferAbortCallback(hi2c->hdmarx);
 800acf4:	6ba0      	ldr	r0, [r4, #56]	; 0x38
        __HAL_I2C_DISABLE(hi2c);
 800acf6:	f022 0201 	bic.w	r2, r2, #1
        hi2c->State = HAL_I2C_STATE_READY;
 800acfa:	2120      	movs	r1, #32
        __HAL_I2C_DISABLE(hi2c);
 800acfc:	601a      	str	r2, [r3, #0]
        hi2c->State = HAL_I2C_STATE_READY;
 800acfe:	f884 103d 	strb.w	r1, [r4, #61]	; 0x3d
        hi2c->hdmarx->XferAbortCallback(hi2c->hdmarx);
 800ad02:	6d03      	ldr	r3, [r0, #80]	; 0x50
 800ad04:	4798      	blx	r3
 800ad06:	e795      	b.n	800ac34 <I2C_ITError+0x64>
    hi2c->State = HAL_I2C_STATE_READY;
 800ad08:	2120      	movs	r1, #32
 800ad0a:	f884 103d 	strb.w	r1, [r4, #61]	; 0x3d
    hi2c->ErrorCode = HAL_I2C_ERROR_NONE;
 800ad0e:	6422      	str	r2, [r4, #64]	; 0x40
    if (__HAL_I2C_GET_FLAG(hi2c, I2C_FLAG_RXNE) == SET)
 800ad10:	695a      	ldr	r2, [r3, #20]
 800ad12:	0652      	lsls	r2, r2, #25
 800ad14:	d506      	bpl.n	800ad24 <I2C_ITError+0x154>
      *hi2c->pBuffPtr = (uint8_t)hi2c->Instance->DR;
 800ad16:	6a62      	ldr	r2, [r4, #36]	; 0x24
 800ad18:	691b      	ldr	r3, [r3, #16]
 800ad1a:	7013      	strb	r3, [r2, #0]
      hi2c->pBuffPtr++;
 800ad1c:	6a62      	ldr	r2, [r4, #36]	; 0x24
    __HAL_I2C_DISABLE(hi2c);
 800ad1e:	6823      	ldr	r3, [r4, #0]
      hi2c->pBuffPtr++;
 800ad20:	3201      	adds	r2, #1
 800ad22:	6262      	str	r2, [r4, #36]	; 0x24
    __HAL_I2C_DISABLE(hi2c);
 800ad24:	681a      	ldr	r2, [r3, #0]
 800ad26:	f022 0201 	bic.w	r2, r2, #1
    HAL_I2C_AbortCpltCallback(hi2c);
 800ad2a:	4620      	mov	r0, r4
    __HAL_I2C_DISABLE(hi2c);
 800ad2c:	601a      	str	r2, [r3, #0]
    HAL_I2C_AbortCpltCallback(hi2c);
 800ad2e:	f7ff fed3 	bl	800aad8 <HAL_I2C_AbortCpltCallback>
 800ad32:	e77f      	b.n	800ac34 <I2C_ITError+0x64>
 800ad34:	0800aadd 	.word	0x0800aadd
 800ad38:	ffff0000 	.word	0xffff0000

0800ad3c <HAL_I2C_EV_IRQHandler>:
{
 800ad3c:	b570      	push	{r4, r5, r6, lr}
  uint32_t itsources                = READ_REG(hi2c->Instance->CR2);
 800ad3e:	6803      	ldr	r3, [r0, #0]
{
 800ad40:	4604      	mov	r4, r0
  uint32_t itsources                = READ_REG(hi2c->Instance->CR2);
 800ad42:	6858      	ldr	r0, [r3, #4]
  uint32_t CurrentXferOptions       = hi2c->XferOptions;
 800ad44:	6ae5      	ldr	r5, [r4, #44]	; 0x2c
  HAL_I2C_ModeTypeDef CurrentMode   = hi2c->Mode;
 800ad46:	f894 103e 	ldrb.w	r1, [r4, #62]	; 0x3e
  HAL_I2C_StateTypeDef CurrentState = hi2c->State;
 800ad4a:	f894 203d 	ldrb.w	r2, [r4, #61]	; 0x3d
  if ((CurrentMode == HAL_I2C_MODE_MASTER) || (CurrentMode == HAL_I2C_MODE_MEM))
 800ad4e:	2910      	cmp	r1, #16
{
 800ad50:	b08e      	sub	sp, #56	; 0x38
  HAL_I2C_StateTypeDef CurrentState = hi2c->State;
 800ad52:	b2d2      	uxtb	r2, r2
  HAL_I2C_ModeTypeDef CurrentMode   = hi2c->Mode;
 800ad54:	fa5f fc81 	uxtb.w	ip, r1
  if ((CurrentMode == HAL_I2C_MODE_MASTER) || (CurrentMode == HAL_I2C_MODE_MEM))
 800ad58:	d022      	beq.n	800ada0 <HAL_I2C_EV_IRQHandler+0x64>
 800ad5a:	f1bc 0f40 	cmp.w	ip, #64	; 0x40
 800ad5e:	d01f      	beq.n	800ada0 <HAL_I2C_EV_IRQHandler+0x64>
    if (hi2c->ErrorCode != HAL_I2C_ERROR_NONE)
 800ad60:	6c21      	ldr	r1, [r4, #64]	; 0x40
 800ad62:	2900      	cmp	r1, #0
 800ad64:	f000 8094 	beq.w	800ae90 <HAL_I2C_EV_IRQHandler+0x154>
      sr1itflags   = READ_REG(hi2c->Instance->SR1);
 800ad68:	6959      	ldr	r1, [r3, #20]
  uint32_t sr2itflags               = 0U;
 800ad6a:	2500      	movs	r5, #0
    if ((I2C_CHECK_FLAG(sr1itflags, I2C_FLAG_ADDR) != RESET) && (I2C_CHECK_IT_SOURCE(itsources, I2C_IT_EVT) != RESET))
 800ad6c:	f011 0602 	ands.w	r6, r1, #2
 800ad70:	d059      	beq.n	800ae26 <HAL_I2C_EV_IRQHandler+0xea>
 800ad72:	0586      	lsls	r6, r0, #22
 800ad74:	d559      	bpl.n	800ae2a <HAL_I2C_EV_IRQHandler+0xee>
      if (hi2c->ErrorCode != HAL_I2C_ERROR_NONE)
 800ad76:	6c22      	ldr	r2, [r4, #64]	; 0x40
 800ad78:	b102      	cbz	r2, 800ad7c <HAL_I2C_EV_IRQHandler+0x40>
        sr2itflags   = READ_REG(hi2c->Instance->SR2);
 800ad7a:	699d      	ldr	r5, [r3, #24]
  if (((uint32_t)hi2c->State & (uint32_t)HAL_I2C_STATE_LISTEN) == (uint32_t)HAL_I2C_STATE_LISTEN)
 800ad7c:	f894 203d 	ldrb.w	r2, [r4, #61]	; 0x3d
 800ad80:	f002 0228 	and.w	r2, r2, #40	; 0x28
 800ad84:	2a28      	cmp	r2, #40	; 0x28
 800ad86:	f000 821e 	beq.w	800b1c6 <HAL_I2C_EV_IRQHandler+0x48a>
    __HAL_I2C_CLEAR_ADDRFLAG(hi2c);
 800ad8a:	2200      	movs	r2, #0
 800ad8c:	920c      	str	r2, [sp, #48]	; 0x30
 800ad8e:	6959      	ldr	r1, [r3, #20]
 800ad90:	910c      	str	r1, [sp, #48]	; 0x30
 800ad92:	699b      	ldr	r3, [r3, #24]
 800ad94:	930c      	str	r3, [sp, #48]	; 0x30
 800ad96:	9b0c      	ldr	r3, [sp, #48]	; 0x30
    __HAL_UNLOCK(hi2c);
 800ad98:	f884 203c 	strb.w	r2, [r4, #60]	; 0x3c
}
 800ad9c:	b00e      	add	sp, #56	; 0x38
 800ad9e:	bd70      	pop	{r4, r5, r6, pc}
    sr2itflags   = READ_REG(hi2c->Instance->SR2);
 800ada0:	699e      	ldr	r6, [r3, #24]
    sr1itflags   = READ_REG(hi2c->Instance->SR1);
 800ada2:	6959      	ldr	r1, [r3, #20]
    if ((I2C_CHECK_FLAG(sr1itflags, I2C_FLAG_SB) == RESET) && (IS_I2C_TRANSFER_OTHER_OPTIONS_REQUEST(CurrentXferOptions) == 1U))
 800ada4:	f011 0f01 	tst.w	r1, #1
 800ada8:	d11a      	bne.n	800ade0 <HAL_I2C_EV_IRQHandler+0xa4>
 800adaa:	f5b5 0f2a 	cmp.w	r5, #11141120	; 0xaa0000
 800adae:	d0f5      	beq.n	800ad9c <HAL_I2C_EV_IRQHandler+0x60>
 800adb0:	f1b5 4f2a 	cmp.w	r5, #2852126720	; 0xaa000000
 800adb4:	d0f2      	beq.n	800ad9c <HAL_I2C_EV_IRQHandler+0x60>
    else if ((I2C_CHECK_FLAG(sr1itflags, I2C_FLAG_ADD10) != RESET) && (I2C_CHECK_IT_SOURCE(itsources, I2C_IT_EVT) != RESET))
 800adb6:	070d      	lsls	r5, r1, #28
 800adb8:	d56d      	bpl.n	800ae96 <HAL_I2C_EV_IRQHandler+0x15a>
 800adba:	0585      	lsls	r5, r0, #22
 800adbc:	f140 8083 	bpl.w	800aec6 <HAL_I2C_EV_IRQHandler+0x18a>
  hi2c->Instance->DR = I2C_10BIT_ADDRESS(hi2c->Devaddress);
 800adc0:	6c62      	ldr	r2, [r4, #68]	; 0x44
  if (((hi2c->hdmatx != NULL) && (hi2c->hdmatx->XferCpltCallback != NULL))
 800adc2:	6b61      	ldr	r1, [r4, #52]	; 0x34
 800adc4:	b2d2      	uxtb	r2, r2
  hi2c->Instance->DR = I2C_10BIT_ADDRESS(hi2c->Devaddress);
 800adc6:	611a      	str	r2, [r3, #16]
  if (((hi2c->hdmatx != NULL) && (hi2c->hdmatx->XferCpltCallback != NULL))
 800adc8:	2900      	cmp	r1, #0
 800adca:	f000 81e3 	beq.w	800b194 <HAL_I2C_EV_IRQHandler+0x458>
 800adce:	6bca      	ldr	r2, [r1, #60]	; 0x3c
 800add0:	2a00      	cmp	r2, #0
 800add2:	f000 81df 	beq.w	800b194 <HAL_I2C_EV_IRQHandler+0x458>
    SET_BIT(hi2c->Instance->CR2, I2C_CR2_DMAEN);
 800add6:	685a      	ldr	r2, [r3, #4]
 800add8:	f442 6200 	orr.w	r2, r2, #2048	; 0x800
 800addc:	605a      	str	r2, [r3, #4]
 800adde:	e7dd      	b.n	800ad9c <HAL_I2C_EV_IRQHandler+0x60>
    if ((I2C_CHECK_FLAG(sr1itflags, I2C_FLAG_SB) != RESET) && (I2C_CHECK_IT_SOURCE(itsources, I2C_IT_EVT) != RESET))
 800ade0:	0585      	lsls	r5, r0, #22
 800ade2:	d56e      	bpl.n	800aec2 <HAL_I2C_EV_IRQHandler+0x186>
static void I2C_ConvertOtherXferOptions(I2C_HandleTypeDef *hi2c)
{
  /* if user set XferOptions to I2C_OTHER_FRAME            */
  /* it request implicitly to generate a restart condition */
  /* set XferOptions to I2C_FIRST_FRAME                    */
  if (hi2c->XferOptions == I2C_OTHER_FRAME)
 800ade4:	6ae2      	ldr	r2, [r4, #44]	; 0x2c
 800ade6:	f5b2 0f2a 	cmp.w	r2, #11141120	; 0xaa0000
 800adea:	f000 81e9 	beq.w	800b1c0 <HAL_I2C_EV_IRQHandler+0x484>
  }
  /* else if user set XferOptions to I2C_OTHER_AND_LAST_FRAME */
  /* it request implicitly to generate a restart condition    */
  /* then generate a stop condition at the end of transfer    */
  /* set XferOptions to I2C_FIRST_AND_LAST_FRAME              */
  else if (hi2c->XferOptions == I2C_OTHER_AND_LAST_FRAME)
 800adee:	6ae2      	ldr	r2, [r4, #44]	; 0x2c
 800adf0:	f1b2 4f2a 	cmp.w	r2, #2852126720	; 0xaa000000
  {
    hi2c->XferOptions = I2C_FIRST_AND_LAST_FRAME;
 800adf4:	bf04      	itt	eq
 800adf6:	2208      	moveq	r2, #8
 800adf8:	62e2      	streq	r2, [r4, #44]	; 0x2c
  if (hi2c->Mode == HAL_I2C_MODE_MEM)
 800adfa:	f894 203e 	ldrb.w	r2, [r4, #62]	; 0x3e
 800adfe:	2a40      	cmp	r2, #64	; 0x40
 800ae00:	f000 81d7 	beq.w	800b1b2 <HAL_I2C_EV_IRQHandler+0x476>
    if (hi2c->Init.AddressingMode == I2C_ADDRESSINGMODE_7BIT)
 800ae04:	6922      	ldr	r2, [r4, #16]
 800ae06:	f5b2 4f80 	cmp.w	r2, #16384	; 0x4000
 800ae0a:	f000 81b2 	beq.w	800b172 <HAL_I2C_EV_IRQHandler+0x436>
      if (hi2c->EventCount == 0U)
 800ae0e:	6d22      	ldr	r2, [r4, #80]	; 0x50
 800ae10:	2a00      	cmp	r2, #0
 800ae12:	f040 81ef 	bne.w	800b1f4 <HAL_I2C_EV_IRQHandler+0x4b8>
        hi2c->Instance->DR = I2C_10BIT_HEADER_WRITE(hi2c->Devaddress);
 800ae16:	6c62      	ldr	r2, [r4, #68]	; 0x44
 800ae18:	11d2      	asrs	r2, r2, #7
 800ae1a:	f002 0206 	and.w	r2, r2, #6
 800ae1e:	f042 02f0 	orr.w	r2, r2, #240	; 0xf0
 800ae22:	611a      	str	r2, [r3, #16]
 800ae24:	e7ba      	b.n	800ad9c <HAL_I2C_EV_IRQHandler+0x60>
    else if ((I2C_CHECK_FLAG(sr1itflags, I2C_FLAG_STOPF) != RESET) && (I2C_CHECK_IT_SOURCE(itsources, I2C_IT_EVT) != RESET))
 800ae26:	06cd      	lsls	r5, r1, #27
 800ae28:	d47c      	bmi.n	800af24 <HAL_I2C_EV_IRQHandler+0x1e8>
    else if ((CurrentState == HAL_I2C_STATE_BUSY_TX) || (CurrentState == HAL_I2C_STATE_BUSY_TX_LISTEN))
 800ae2a:	f002 02f7 	and.w	r2, r2, #247	; 0xf7
 800ae2e:	2a21      	cmp	r2, #33	; 0x21
 800ae30:	f000 80f5 	beq.w	800b01e <HAL_I2C_EV_IRQHandler+0x2e2>
      if ((I2C_CHECK_FLAG(sr1itflags, I2C_FLAG_RXNE) != RESET) && (I2C_CHECK_IT_SOURCE(itsources, I2C_IT_BUF) != RESET) && (I2C_CHECK_FLAG(sr1itflags, I2C_FLAG_BTF) == RESET))
 800ae34:	064e      	lsls	r6, r1, #25
 800ae36:	f140 8132 	bpl.w	800b09e <HAL_I2C_EV_IRQHandler+0x362>
 800ae3a:	0545      	lsls	r5, r0, #21
 800ae3c:	f140 812f 	bpl.w	800b09e <HAL_I2C_EV_IRQHandler+0x362>
 800ae40:	0749      	lsls	r1, r1, #29
 800ae42:	f100 812f 	bmi.w	800b0a4 <HAL_I2C_EV_IRQHandler+0x368>
  HAL_I2C_StateTypeDef CurrentState = hi2c->State;
 800ae46:	f894 103d 	ldrb.w	r1, [r4, #61]	; 0x3d
  if (hi2c->XferCount != 0U)
 800ae4a:	8d62      	ldrh	r2, [r4, #42]	; 0x2a
 800ae4c:	b292      	uxth	r2, r2
  HAL_I2C_StateTypeDef CurrentState = hi2c->State;
 800ae4e:	b2c9      	uxtb	r1, r1
  if (hi2c->XferCount != 0U)
 800ae50:	2a00      	cmp	r2, #0
 800ae52:	d0a3      	beq.n	800ad9c <HAL_I2C_EV_IRQHandler+0x60>
    *hi2c->pBuffPtr = (uint8_t)hi2c->Instance->DR;
 800ae54:	6a62      	ldr	r2, [r4, #36]	; 0x24
 800ae56:	691b      	ldr	r3, [r3, #16]
 800ae58:	7013      	strb	r3, [r2, #0]
    hi2c->XferCount--;
 800ae5a:	8d63      	ldrh	r3, [r4, #42]	; 0x2a
    hi2c->pBuffPtr++;
 800ae5c:	6a62      	ldr	r2, [r4, #36]	; 0x24
    hi2c->XferCount--;
 800ae5e:	3b01      	subs	r3, #1
 800ae60:	b29b      	uxth	r3, r3
 800ae62:	8563      	strh	r3, [r4, #42]	; 0x2a
    if ((hi2c->XferCount == 0U) && (CurrentState == HAL_I2C_STATE_BUSY_RX_LISTEN))
 800ae64:	8d63      	ldrh	r3, [r4, #42]	; 0x2a
    hi2c->pBuffPtr++;
 800ae66:	3201      	adds	r2, #1
    if ((hi2c->XferCount == 0U) && (CurrentState == HAL_I2C_STATE_BUSY_RX_LISTEN))
 800ae68:	b29b      	uxth	r3, r3
    hi2c->pBuffPtr++;
 800ae6a:	6262      	str	r2, [r4, #36]	; 0x24
    if ((hi2c->XferCount == 0U) && (CurrentState == HAL_I2C_STATE_BUSY_RX_LISTEN))
 800ae6c:	2b00      	cmp	r3, #0
 800ae6e:	d195      	bne.n	800ad9c <HAL_I2C_EV_IRQHandler+0x60>
 800ae70:	292a      	cmp	r1, #42	; 0x2a
 800ae72:	d193      	bne.n	800ad9c <HAL_I2C_EV_IRQHandler+0x60>
      __HAL_I2C_DISABLE_IT(hi2c, I2C_IT_BUF);
 800ae74:	6822      	ldr	r2, [r4, #0]
 800ae76:	6853      	ldr	r3, [r2, #4]
      hi2c->PreviousState = I2C_STATE_SLAVE_BUSY_RX;
 800ae78:	2522      	movs	r5, #34	; 0x22
      hi2c->State = HAL_I2C_STATE_LISTEN;
 800ae7a:	2128      	movs	r1, #40	; 0x28
      __HAL_I2C_DISABLE_IT(hi2c, I2C_IT_BUF);
 800ae7c:	f423 6380 	bic.w	r3, r3, #1024	; 0x400
 800ae80:	6053      	str	r3, [r2, #4]
      HAL_I2C_SlaveRxCpltCallback(hi2c);
 800ae82:	4620      	mov	r0, r4
      hi2c->PreviousState = I2C_STATE_SLAVE_BUSY_RX;
 800ae84:	6325      	str	r5, [r4, #48]	; 0x30
      hi2c->State = HAL_I2C_STATE_LISTEN;
 800ae86:	f884 103d 	strb.w	r1, [r4, #61]	; 0x3d
      HAL_I2C_SlaveRxCpltCallback(hi2c);
 800ae8a:	f7ff fdbb 	bl	800aa04 <HAL_I2C_SlaveRxCpltCallback>
 800ae8e:	e785      	b.n	800ad9c <HAL_I2C_EV_IRQHandler+0x60>
      sr2itflags   = READ_REG(hi2c->Instance->SR2);
 800ae90:	699d      	ldr	r5, [r3, #24]
      sr1itflags   = READ_REG(hi2c->Instance->SR1);
 800ae92:	6959      	ldr	r1, [r3, #20]
 800ae94:	e76a      	b.n	800ad6c <HAL_I2C_EV_IRQHandler+0x30>
    else if ((I2C_CHECK_FLAG(sr1itflags, I2C_FLAG_ADDR) != RESET) && (I2C_CHECK_IT_SOURCE(itsources, I2C_IT_EVT) != RESET))
 800ae96:	078d      	lsls	r5, r1, #30
 800ae98:	d515      	bpl.n	800aec6 <HAL_I2C_EV_IRQHandler+0x18a>
 800ae9a:	0585      	lsls	r5, r0, #22
 800ae9c:	d513      	bpl.n	800aec6 <HAL_I2C_EV_IRQHandler+0x18a>
  HAL_I2C_ModeTypeDef CurrentMode       = hi2c->Mode;
 800ae9e:	f894 203e 	ldrb.w	r2, [r4, #62]	; 0x3e
  uint32_t CurrentXferOptions           = hi2c->XferOptions;
 800aea2:	6ae0      	ldr	r0, [r4, #44]	; 0x2c
  uint32_t Prev_State                   = hi2c->PreviousState;
 800aea4:	6b25      	ldr	r5, [r4, #48]	; 0x30
  if (hi2c->State == HAL_I2C_STATE_BUSY_RX)
 800aea6:	f894 103d 	ldrb.w	r1, [r4, #61]	; 0x3d
 800aeaa:	2922      	cmp	r1, #34	; 0x22
  HAL_I2C_ModeTypeDef CurrentMode       = hi2c->Mode;
 800aeac:	b2d2      	uxtb	r2, r2
  if (hi2c->State == HAL_I2C_STATE_BUSY_RX)
 800aeae:	f000 81b3 	beq.w	800b218 <HAL_I2C_EV_IRQHandler+0x4dc>
    __HAL_I2C_CLEAR_ADDRFLAG(hi2c);
 800aeb2:	2200      	movs	r2, #0
 800aeb4:	920a      	str	r2, [sp, #40]	; 0x28
 800aeb6:	695a      	ldr	r2, [r3, #20]
 800aeb8:	920a      	str	r2, [sp, #40]	; 0x28
 800aeba:	699b      	ldr	r3, [r3, #24]
 800aebc:	930a      	str	r3, [sp, #40]	; 0x28
 800aebe:	9b0a      	ldr	r3, [sp, #40]	; 0x28
 800aec0:	e76c      	b.n	800ad9c <HAL_I2C_EV_IRQHandler+0x60>
    else if ((I2C_CHECK_FLAG(sr1itflags, I2C_FLAG_ADD10) != RESET) && (I2C_CHECK_IT_SOURCE(itsources, I2C_IT_EVT) != RESET))
 800aec2:	070d      	lsls	r5, r1, #28
 800aec4:	d5e7      	bpl.n	800ae96 <HAL_I2C_EV_IRQHandler+0x15a>
    else if (I2C_CHECK_FLAG(sr2itflags, I2C_FLAG_TRA) != RESET)
 800aec6:	0776      	lsls	r6, r6, #29
 800aec8:	f140 80f5 	bpl.w	800b0b6 <HAL_I2C_EV_IRQHandler+0x37a>
      if (READ_BIT(hi2c->Instance->CR2, I2C_CR2_DMAEN) != I2C_CR2_DMAEN)
 800aecc:	685d      	ldr	r5, [r3, #4]
 800aece:	052d      	lsls	r5, r5, #20
 800aed0:	f53f af64 	bmi.w	800ad9c <HAL_I2C_EV_IRQHandler+0x60>
        if ((I2C_CHECK_FLAG(sr1itflags, I2C_FLAG_TXE) != RESET) && (I2C_CHECK_IT_SOURCE(itsources, I2C_IT_BUF) != RESET) && (I2C_CHECK_FLAG(sr1itflags, I2C_FLAG_BTF) == RESET))
 800aed4:	060e      	lsls	r6, r1, #24
 800aed6:	f140 8115 	bpl.w	800b104 <HAL_I2C_EV_IRQHandler+0x3c8>
 800aeda:	0545      	lsls	r5, r0, #21
 800aedc:	f140 8112 	bpl.w	800b104 <HAL_I2C_EV_IRQHandler+0x3c8>
 800aee0:	074e      	lsls	r6, r1, #29
 800aee2:	f100 8112 	bmi.w	800b10a <HAL_I2C_EV_IRQHandler+0x3ce>
  HAL_I2C_StateTypeDef CurrentState = hi2c->State;
 800aee6:	f894 203d 	ldrb.w	r2, [r4, #61]	; 0x3d
  if ((hi2c->XferSize == 0U) && (CurrentState == HAL_I2C_STATE_BUSY_TX))
 800aeea:	8d20      	ldrh	r0, [r4, #40]	; 0x28
  HAL_I2C_ModeTypeDef CurrentMode   = hi2c->Mode;
 800aeec:	f894 103e 	ldrb.w	r1, [r4, #62]	; 0x3e
  uint32_t CurrentXferOptions       = hi2c->XferOptions;
 800aef0:	6ae5      	ldr	r5, [r4, #44]	; 0x2c
  HAL_I2C_StateTypeDef CurrentState = hi2c->State;
 800aef2:	b2d2      	uxtb	r2, r2
  HAL_I2C_ModeTypeDef CurrentMode   = hi2c->Mode;
 800aef4:	b2c9      	uxtb	r1, r1
  if ((hi2c->XferSize == 0U) && (CurrentState == HAL_I2C_STATE_BUSY_TX))
 800aef6:	2800      	cmp	r0, #0
 800aef8:	f040 8235 	bne.w	800b366 <HAL_I2C_EV_IRQHandler+0x62a>
 800aefc:	2a21      	cmp	r2, #33	; 0x21
 800aefe:	f000 8347 	beq.w	800b590 <HAL_I2C_EV_IRQHandler+0x854>
  else if ((CurrentState == HAL_I2C_STATE_BUSY_TX) || \
 800af02:	2940      	cmp	r1, #64	; 0x40
 800af04:	f47f af4a 	bne.w	800ad9c <HAL_I2C_EV_IRQHandler+0x60>
           ((CurrentMode == HAL_I2C_MODE_MEM) && (CurrentState == HAL_I2C_STATE_BUSY_RX)))
 800af08:	2a22      	cmp	r2, #34	; 0x22
 800af0a:	f47f af47 	bne.w	800ad9c <HAL_I2C_EV_IRQHandler+0x60>
    if (hi2c->XferCount == 0U)
 800af0e:	8d62      	ldrh	r2, [r4, #42]	; 0x2a
 800af10:	b292      	uxth	r2, r2
 800af12:	2a00      	cmp	r2, #0
 800af14:	f000 8268 	beq.w	800b3e8 <HAL_I2C_EV_IRQHandler+0x6ac>
      if (hi2c->Mode == HAL_I2C_MODE_MEM)
 800af18:	f894 203e 	ldrb.w	r2, [r4, #62]	; 0x3e
 800af1c:	2a40      	cmp	r2, #64	; 0x40
 800af1e:	f040 80b4 	bne.w	800b08a <HAL_I2C_EV_IRQHandler+0x34e>
 800af22:	e0fc      	b.n	800b11e <HAL_I2C_EV_IRQHandler+0x3e2>
    else if ((I2C_CHECK_FLAG(sr1itflags, I2C_FLAG_STOPF) != RESET) && (I2C_CHECK_IT_SOURCE(itsources, I2C_IT_EVT) != RESET))
 800af24:	0585      	lsls	r5, r0, #22
 800af26:	d580      	bpl.n	800ae2a <HAL_I2C_EV_IRQHandler+0xee>
  HAL_I2C_StateTypeDef CurrentState = hi2c->State;
 800af28:	f894 503d 	ldrb.w	r5, [r4, #61]	; 0x3d
  __HAL_I2C_DISABLE_IT(hi2c, I2C_IT_EVT | I2C_IT_BUF | I2C_IT_ERR);
 800af2c:	685a      	ldr	r2, [r3, #4]
 800af2e:	f422 62e0 	bic.w	r2, r2, #1792	; 0x700
 800af32:	605a      	str	r2, [r3, #4]
  __HAL_I2C_CLEAR_STOPFLAG(hi2c);
 800af34:	960d      	str	r6, [sp, #52]	; 0x34
 800af36:	695a      	ldr	r2, [r3, #20]
 800af38:	920d      	str	r2, [sp, #52]	; 0x34
 800af3a:	681a      	ldr	r2, [r3, #0]
 800af3c:	f042 0201 	orr.w	r2, r2, #1
 800af40:	601a      	str	r2, [r3, #0]
 800af42:	9a0d      	ldr	r2, [sp, #52]	; 0x34
  CLEAR_BIT(hi2c->Instance->CR1, I2C_CR1_ACK);
 800af44:	681a      	ldr	r2, [r3, #0]
 800af46:	f422 6280 	bic.w	r2, r2, #1024	; 0x400
 800af4a:	601a      	str	r2, [r3, #0]
  if ((hi2c->Instance->CR2 & I2C_CR2_DMAEN) == I2C_CR2_DMAEN)
 800af4c:	685a      	ldr	r2, [r3, #4]
 800af4e:	0511      	lsls	r1, r2, #20
  HAL_I2C_StateTypeDef CurrentState = hi2c->State;
 800af50:	b2ed      	uxtb	r5, r5
  if ((hi2c->Instance->CR2 & I2C_CR2_DMAEN) == I2C_CR2_DMAEN)
 800af52:	d521      	bpl.n	800af98 <HAL_I2C_EV_IRQHandler+0x25c>
    if ((CurrentState == HAL_I2C_STATE_BUSY_RX) || (CurrentState == HAL_I2C_STATE_BUSY_RX_LISTEN))
 800af54:	f005 02f7 	and.w	r2, r5, #247	; 0xf7
 800af58:	2a22      	cmp	r2, #34	; 0x22
 800af5a:	f000 817a 	beq.w	800b252 <HAL_I2C_EV_IRQHandler+0x516>
      hi2c->XferCount = (uint16_t)(__HAL_DMA_GET_COUNTER(hi2c->hdmatx));
 800af5e:	6b60      	ldr	r0, [r4, #52]	; 0x34
 800af60:	6802      	ldr	r2, [r0, #0]
 800af62:	6852      	ldr	r2, [r2, #4]
 800af64:	b292      	uxth	r2, r2
 800af66:	8562      	strh	r2, [r4, #42]	; 0x2a
      if (hi2c->XferCount != 0U)
 800af68:	8d62      	ldrh	r2, [r4, #42]	; 0x2a
 800af6a:	b292      	uxth	r2, r2
 800af6c:	b11a      	cbz	r2, 800af76 <HAL_I2C_EV_IRQHandler+0x23a>
        hi2c->ErrorCode |= HAL_I2C_ERROR_AF;
 800af6e:	6c22      	ldr	r2, [r4, #64]	; 0x40
 800af70:	f042 0204 	orr.w	r2, r2, #4
 800af74:	6422      	str	r2, [r4, #64]	; 0x40
      CLEAR_BIT(hi2c->Instance->CR2, I2C_CR2_DMAEN);
 800af76:	685a      	ldr	r2, [r3, #4]
 800af78:	f422 6200 	bic.w	r2, r2, #2048	; 0x800
 800af7c:	605a      	str	r2, [r3, #4]
      if (HAL_DMA_GetState(hi2c->hdmatx) != HAL_DMA_STATE_READY)
 800af7e:	f7fe fc2d 	bl	80097dc <HAL_DMA_GetState>
 800af82:	2801      	cmp	r0, #1
 800af84:	d008      	beq.n	800af98 <HAL_I2C_EV_IRQHandler+0x25c>
        hi2c->hdmatx->XferAbortCallback = I2C_DMAAbort;
 800af86:	6b60      	ldr	r0, [r4, #52]	; 0x34
 800af88:	4b99      	ldr	r3, [pc, #612]	; (800b1f0 <HAL_I2C_EV_IRQHandler+0x4b4>)
 800af8a:	6503      	str	r3, [r0, #80]	; 0x50
        if (HAL_DMA_Abort_IT(hi2c->hdmatx) != HAL_OK)
 800af8c:	f7fe fc14 	bl	80097b8 <HAL_DMA_Abort_IT>
 800af90:	b110      	cbz	r0, 800af98 <HAL_I2C_EV_IRQHandler+0x25c>
          hi2c->hdmatx->XferAbortCallback(hi2c->hdmatx);
 800af92:	6b60      	ldr	r0, [r4, #52]	; 0x34
 800af94:	6d03      	ldr	r3, [r0, #80]	; 0x50
 800af96:	4798      	blx	r3
  if (hi2c->XferCount != 0U)
 800af98:	8d63      	ldrh	r3, [r4, #42]	; 0x2a
 800af9a:	b29b      	uxth	r3, r3
 800af9c:	b313      	cbz	r3, 800afe4 <HAL_I2C_EV_IRQHandler+0x2a8>
    if (__HAL_I2C_GET_FLAG(hi2c, I2C_FLAG_BTF) == SET)
 800af9e:	6823      	ldr	r3, [r4, #0]
 800afa0:	695a      	ldr	r2, [r3, #20]
 800afa2:	0752      	lsls	r2, r2, #29
 800afa4:	d50a      	bpl.n	800afbc <HAL_I2C_EV_IRQHandler+0x280>
      *hi2c->pBuffPtr = (uint8_t)hi2c->Instance->DR;
 800afa6:	6a62      	ldr	r2, [r4, #36]	; 0x24
 800afa8:	691b      	ldr	r3, [r3, #16]
 800afaa:	7013      	strb	r3, [r2, #0]
      hi2c->XferCount--;
 800afac:	8d62      	ldrh	r2, [r4, #42]	; 0x2a
      hi2c->pBuffPtr++;
 800afae:	6a63      	ldr	r3, [r4, #36]	; 0x24
      hi2c->XferCount--;
 800afb0:	3a01      	subs	r2, #1
      hi2c->pBuffPtr++;
 800afb2:	1c59      	adds	r1, r3, #1
      hi2c->XferCount--;
 800afb4:	b292      	uxth	r2, r2
    if (__HAL_I2C_GET_FLAG(hi2c, I2C_FLAG_RXNE) == SET)
 800afb6:	6823      	ldr	r3, [r4, #0]
      hi2c->pBuffPtr++;
 800afb8:	6261      	str	r1, [r4, #36]	; 0x24
      hi2c->XferCount--;
 800afba:	8562      	strh	r2, [r4, #42]	; 0x2a
    if (__HAL_I2C_GET_FLAG(hi2c, I2C_FLAG_RXNE) == SET)
 800afbc:	695a      	ldr	r2, [r3, #20]
 800afbe:	0656      	lsls	r6, r2, #25
 800afc0:	d509      	bpl.n	800afd6 <HAL_I2C_EV_IRQHandler+0x29a>
      *hi2c->pBuffPtr = (uint8_t)hi2c->Instance->DR;
 800afc2:	6a62      	ldr	r2, [r4, #36]	; 0x24
 800afc4:	691b      	ldr	r3, [r3, #16]
 800afc6:	7013      	strb	r3, [r2, #0]
      hi2c->XferCount--;
 800afc8:	8d63      	ldrh	r3, [r4, #42]	; 0x2a
      hi2c->pBuffPtr++;
 800afca:	6a62      	ldr	r2, [r4, #36]	; 0x24
      hi2c->XferCount--;
 800afcc:	3b01      	subs	r3, #1
      hi2c->pBuffPtr++;
 800afce:	3201      	adds	r2, #1
      hi2c->XferCount--;
 800afd0:	b29b      	uxth	r3, r3
      hi2c->pBuffPtr++;
 800afd2:	6262      	str	r2, [r4, #36]	; 0x24
      hi2c->XferCount--;
 800afd4:	8563      	strh	r3, [r4, #42]	; 0x2a
    if (hi2c->XferCount != 0U)
 800afd6:	8d63      	ldrh	r3, [r4, #42]	; 0x2a
 800afd8:	b29b      	uxth	r3, r3
 800afda:	b11b      	cbz	r3, 800afe4 <HAL_I2C_EV_IRQHandler+0x2a8>
      hi2c->ErrorCode |= HAL_I2C_ERROR_AF;
 800afdc:	6c23      	ldr	r3, [r4, #64]	; 0x40
 800afde:	f043 0304 	orr.w	r3, r3, #4
 800afe2:	6423      	str	r3, [r4, #64]	; 0x40
  if (hi2c->ErrorCode != HAL_I2C_ERROR_NONE)
 800afe4:	6c23      	ldr	r3, [r4, #64]	; 0x40
 800afe6:	2b00      	cmp	r3, #0
 800afe8:	f040 80dd 	bne.w	800b1a6 <HAL_I2C_EV_IRQHandler+0x46a>
    if (CurrentState == HAL_I2C_STATE_BUSY_RX_LISTEN)
 800afec:	2d2a      	cmp	r5, #42	; 0x2a
 800afee:	f000 8151 	beq.w	800b294 <HAL_I2C_EV_IRQHandler+0x558>
    if (hi2c->State == HAL_I2C_STATE_LISTEN)
 800aff2:	f894 303d 	ldrb.w	r3, [r4, #61]	; 0x3d
 800aff6:	2b28      	cmp	r3, #40	; 0x28
 800aff8:	f000 8154 	beq.w	800b2a4 <HAL_I2C_EV_IRQHandler+0x568>
      if ((hi2c->PreviousState  == I2C_STATE_SLAVE_BUSY_RX) || (CurrentState == HAL_I2C_STATE_BUSY_RX))
 800affc:	6b23      	ldr	r3, [r4, #48]	; 0x30
 800affe:	2b22      	cmp	r3, #34	; 0x22
 800b000:	d002      	beq.n	800b008 <HAL_I2C_EV_IRQHandler+0x2cc>
 800b002:	2d22      	cmp	r5, #34	; 0x22
 800b004:	f47f aeca 	bne.w	800ad9c <HAL_I2C_EV_IRQHandler+0x60>
        hi2c->PreviousState = I2C_STATE_NONE;
 800b008:	2300      	movs	r3, #0
        hi2c->State = HAL_I2C_STATE_READY;
 800b00a:	2220      	movs	r2, #32
        hi2c->PreviousState = I2C_STATE_NONE;
 800b00c:	6323      	str	r3, [r4, #48]	; 0x30
        HAL_I2C_SlaveRxCpltCallback(hi2c);
 800b00e:	4620      	mov	r0, r4
        hi2c->State = HAL_I2C_STATE_READY;
 800b010:	f884 203d 	strb.w	r2, [r4, #61]	; 0x3d
        hi2c->Mode = HAL_I2C_MODE_NONE;
 800b014:	f884 303e 	strb.w	r3, [r4, #62]	; 0x3e
        HAL_I2C_SlaveRxCpltCallback(hi2c);
 800b018:	f7ff fcf4 	bl	800aa04 <HAL_I2C_SlaveRxCpltCallback>
 800b01c:	e6be      	b.n	800ad9c <HAL_I2C_EV_IRQHandler+0x60>
      if ((I2C_CHECK_FLAG(sr1itflags, I2C_FLAG_TXE) != RESET) && (I2C_CHECK_IT_SOURCE(itsources, I2C_IT_BUF) != RESET) && (I2C_CHECK_FLAG(sr1itflags, I2C_FLAG_BTF) == RESET))
 800b01e:	060d      	lsls	r5, r1, #24
 800b020:	d528      	bpl.n	800b074 <HAL_I2C_EV_IRQHandler+0x338>
 800b022:	0546      	lsls	r6, r0, #21
 800b024:	d526      	bpl.n	800b074 <HAL_I2C_EV_IRQHandler+0x338>
 800b026:	074d      	lsls	r5, r1, #29
 800b028:	d427      	bmi.n	800b07a <HAL_I2C_EV_IRQHandler+0x33e>
  HAL_I2C_StateTypeDef CurrentState = hi2c->State;
 800b02a:	f894 003d 	ldrb.w	r0, [r4, #61]	; 0x3d
  if (hi2c->XferCount != 0U)
 800b02e:	8d61      	ldrh	r1, [r4, #42]	; 0x2a
 800b030:	b289      	uxth	r1, r1
  HAL_I2C_StateTypeDef CurrentState = hi2c->State;
 800b032:	b2c0      	uxtb	r0, r0
  if (hi2c->XferCount != 0U)
 800b034:	2900      	cmp	r1, #0
 800b036:	f43f aeb1 	beq.w	800ad9c <HAL_I2C_EV_IRQHandler+0x60>
    hi2c->Instance->DR = *hi2c->pBuffPtr;
 800b03a:	6a61      	ldr	r1, [r4, #36]	; 0x24
 800b03c:	f811 5b01 	ldrb.w	r5, [r1], #1
 800b040:	611d      	str	r5, [r3, #16]
    hi2c->pBuffPtr++;
 800b042:	6261      	str	r1, [r4, #36]	; 0x24
    hi2c->XferCount--;
 800b044:	8d61      	ldrh	r1, [r4, #42]	; 0x2a
 800b046:	3901      	subs	r1, #1
 800b048:	b289      	uxth	r1, r1
 800b04a:	8561      	strh	r1, [r4, #42]	; 0x2a
    if ((hi2c->XferCount == 0U) && (CurrentState == HAL_I2C_STATE_BUSY_TX_LISTEN))
 800b04c:	8d61      	ldrh	r1, [r4, #42]	; 0x2a
 800b04e:	b289      	uxth	r1, r1
 800b050:	2900      	cmp	r1, #0
 800b052:	f47f aea3 	bne.w	800ad9c <HAL_I2C_EV_IRQHandler+0x60>
 800b056:	2829      	cmp	r0, #41	; 0x29
 800b058:	f47f aea0 	bne.w	800ad9c <HAL_I2C_EV_IRQHandler+0x60>
      __HAL_I2C_DISABLE_IT(hi2c, I2C_IT_BUF);
 800b05c:	6859      	ldr	r1, [r3, #4]
      hi2c->State = HAL_I2C_STATE_LISTEN;
 800b05e:	2528      	movs	r5, #40	; 0x28
      __HAL_I2C_DISABLE_IT(hi2c, I2C_IT_BUF);
 800b060:	f421 6180 	bic.w	r1, r1, #1024	; 0x400
 800b064:	6059      	str	r1, [r3, #4]
      HAL_I2C_SlaveTxCpltCallback(hi2c);
 800b066:	4620      	mov	r0, r4
      hi2c->PreviousState = I2C_STATE_SLAVE_BUSY_TX;
 800b068:	6322      	str	r2, [r4, #48]	; 0x30
      hi2c->State = HAL_I2C_STATE_LISTEN;
 800b06a:	f884 503d 	strb.w	r5, [r4, #61]	; 0x3d
      HAL_I2C_SlaveTxCpltCallback(hi2c);
 800b06e:	f7ff fcc7 	bl	800aa00 <HAL_I2C_SlaveTxCpltCallback>
 800b072:	e693      	b.n	800ad9c <HAL_I2C_EV_IRQHandler+0x60>
      else if ((I2C_CHECK_FLAG(sr1itflags, I2C_FLAG_BTF) != RESET) && (I2C_CHECK_IT_SOURCE(itsources, I2C_IT_EVT) != RESET))
 800b074:	0749      	lsls	r1, r1, #29
 800b076:	f57f ae91 	bpl.w	800ad9c <HAL_I2C_EV_IRQHandler+0x60>
 800b07a:	0582      	lsls	r2, r0, #22
 800b07c:	f57f ae8e 	bpl.w	800ad9c <HAL_I2C_EV_IRQHandler+0x60>
  if (hi2c->XferCount != 0U)
 800b080:	8d62      	ldrh	r2, [r4, #42]	; 0x2a
 800b082:	b292      	uxth	r2, r2
 800b084:	2a00      	cmp	r2, #0
 800b086:	f43f ae89 	beq.w	800ad9c <HAL_I2C_EV_IRQHandler+0x60>
    hi2c->Instance->DR = *hi2c->pBuffPtr;
 800b08a:	6a62      	ldr	r2, [r4, #36]	; 0x24
 800b08c:	f812 1b01 	ldrb.w	r1, [r2], #1
 800b090:	6119      	str	r1, [r3, #16]
    hi2c->XferCount--;
 800b092:	8d63      	ldrh	r3, [r4, #42]	; 0x2a
    hi2c->pBuffPtr++;
 800b094:	6262      	str	r2, [r4, #36]	; 0x24
    hi2c->XferCount--;
 800b096:	3b01      	subs	r3, #1
 800b098:	b29b      	uxth	r3, r3
 800b09a:	8563      	strh	r3, [r4, #42]	; 0x2a
 800b09c:	e67e      	b.n	800ad9c <HAL_I2C_EV_IRQHandler+0x60>
      else if ((I2C_CHECK_FLAG(sr1itflags, I2C_FLAG_BTF) != RESET) && (I2C_CHECK_IT_SOURCE(itsources, I2C_IT_EVT) != RESET))
 800b09e:	074a      	lsls	r2, r1, #29
 800b0a0:	f57f ae7c 	bpl.w	800ad9c <HAL_I2C_EV_IRQHandler+0x60>
 800b0a4:	0586      	lsls	r6, r0, #22
 800b0a6:	f57f ae79 	bpl.w	800ad9c <HAL_I2C_EV_IRQHandler+0x60>
  if (hi2c->XferCount != 0U)
 800b0aa:	8d62      	ldrh	r2, [r4, #42]	; 0x2a
 800b0ac:	b292      	uxth	r2, r2
 800b0ae:	2a00      	cmp	r2, #0
 800b0b0:	f43f ae74 	beq.w	800ad9c <HAL_I2C_EV_IRQHandler+0x60>
 800b0b4:	e01b      	b.n	800b0ee <HAL_I2C_EV_IRQHandler+0x3b2>
      if (READ_BIT(hi2c->Instance->CR2, I2C_CR2_DMAEN) != I2C_CR2_DMAEN)
 800b0b6:	685a      	ldr	r2, [r3, #4]
 800b0b8:	0512      	lsls	r2, r2, #20
 800b0ba:	f53f ae6f 	bmi.w	800ad9c <HAL_I2C_EV_IRQHandler+0x60>
        if ((I2C_CHECK_FLAG(sr1itflags, I2C_FLAG_RXNE) != RESET) && (I2C_CHECK_IT_SOURCE(itsources, I2C_IT_BUF) != RESET) && (I2C_CHECK_FLAG(sr1itflags, I2C_FLAG_BTF) == RESET))
 800b0be:	064e      	lsls	r6, r1, #25
 800b0c0:	d433      	bmi.n	800b12a <HAL_I2C_EV_IRQHandler+0x3ee>
        else if ((I2C_CHECK_FLAG(sr1itflags, I2C_FLAG_BTF) != RESET) && (I2C_CHECK_IT_SOURCE(itsources, I2C_IT_EVT) != RESET))
 800b0c2:	0749      	lsls	r1, r1, #29
 800b0c4:	f57f ae6a 	bpl.w	800ad9c <HAL_I2C_EV_IRQHandler+0x60>
 800b0c8:	0582      	lsls	r2, r0, #22
 800b0ca:	f57f ae67 	bpl.w	800ad9c <HAL_I2C_EV_IRQHandler+0x60>
  uint32_t CurrentXferOptions = hi2c->XferOptions;
 800b0ce:	6ae1      	ldr	r1, [r4, #44]	; 0x2c
  if (hi2c->XferCount == 4U)
 800b0d0:	8d62      	ldrh	r2, [r4, #42]	; 0x2a
 800b0d2:	b292      	uxth	r2, r2
 800b0d4:	2a04      	cmp	r2, #4
 800b0d6:	f000 8113 	beq.w	800b300 <HAL_I2C_EV_IRQHandler+0x5c4>
  else if (hi2c->XferCount == 3U)
 800b0da:	8d62      	ldrh	r2, [r4, #42]	; 0x2a
 800b0dc:	b292      	uxth	r2, r2
 800b0de:	2a03      	cmp	r2, #3
 800b0e0:	f000 8153 	beq.w	800b38a <HAL_I2C_EV_IRQHandler+0x64e>
  else if (hi2c->XferCount == 2U)
 800b0e4:	8d62      	ldrh	r2, [r4, #42]	; 0x2a
 800b0e6:	b292      	uxth	r2, r2
 800b0e8:	2a02      	cmp	r2, #2
 800b0ea:	f000 8182 	beq.w	800b3f2 <HAL_I2C_EV_IRQHandler+0x6b6>
    *hi2c->pBuffPtr = (uint8_t)hi2c->Instance->DR;
 800b0ee:	6a62      	ldr	r2, [r4, #36]	; 0x24
 800b0f0:	691b      	ldr	r3, [r3, #16]
 800b0f2:	7013      	strb	r3, [r2, #0]
    hi2c->XferCount--;
 800b0f4:	8d63      	ldrh	r3, [r4, #42]	; 0x2a
    hi2c->pBuffPtr++;
 800b0f6:	6a62      	ldr	r2, [r4, #36]	; 0x24
    hi2c->XferCount--;
 800b0f8:	3b01      	subs	r3, #1
    hi2c->pBuffPtr++;
 800b0fa:	3201      	adds	r2, #1
    hi2c->XferCount--;
 800b0fc:	b29b      	uxth	r3, r3
    hi2c->pBuffPtr++;
 800b0fe:	6262      	str	r2, [r4, #36]	; 0x24
    hi2c->XferCount--;
 800b100:	8563      	strh	r3, [r4, #42]	; 0x2a
      }
 800b102:	e64b      	b.n	800ad9c <HAL_I2C_EV_IRQHandler+0x60>
        else if ((I2C_CHECK_FLAG(sr1itflags, I2C_FLAG_BTF) != RESET) && (I2C_CHECK_IT_SOURCE(itsources, I2C_IT_EVT) != RESET))
 800b104:	074d      	lsls	r5, r1, #29
 800b106:	f57f ae49 	bpl.w	800ad9c <HAL_I2C_EV_IRQHandler+0x60>
 800b10a:	0581      	lsls	r1, r0, #22
 800b10c:	f57f ae46 	bpl.w	800ad9c <HAL_I2C_EV_IRQHandler+0x60>
          if (CurrentState == HAL_I2C_STATE_BUSY_TX)
 800b110:	2a21      	cmp	r2, #33	; 0x21
 800b112:	f000 80fd 	beq.w	800b310 <HAL_I2C_EV_IRQHandler+0x5d4>
            if (CurrentMode == HAL_I2C_MODE_MEM)
 800b116:	f1bc 0f40 	cmp.w	ip, #64	; 0x40
 800b11a:	f47f ae3f 	bne.w	800ad9c <HAL_I2C_EV_IRQHandler+0x60>
        I2C_MemoryTransmit_TXE_BTF(hi2c);
 800b11e:	4620      	mov	r0, r4
}
 800b120:	b00e      	add	sp, #56	; 0x38
 800b122:	e8bd 4070 	ldmia.w	sp!, {r4, r5, r6, lr}
        I2C_MemoryTransmit_TXE_BTF(hi2c);
 800b126:	f7ff bc75 	b.w	800aa14 <I2C_MemoryTransmit_TXE_BTF>
        if ((I2C_CHECK_FLAG(sr1itflags, I2C_FLAG_RXNE) != RESET) && (I2C_CHECK_IT_SOURCE(itsources, I2C_IT_BUF) != RESET) && (I2C_CHECK_FLAG(sr1itflags, I2C_FLAG_BTF) == RESET))
 800b12a:	0545      	lsls	r5, r0, #21
 800b12c:	d5c9      	bpl.n	800b0c2 <HAL_I2C_EV_IRQHandler+0x386>
 800b12e:	f011 0104 	ands.w	r1, r1, #4
 800b132:	d1c9      	bne.n	800b0c8 <HAL_I2C_EV_IRQHandler+0x38c>
  if (hi2c->State == HAL_I2C_STATE_BUSY_RX)
 800b134:	f894 203d 	ldrb.w	r2, [r4, #61]	; 0x3d
 800b138:	2a22      	cmp	r2, #34	; 0x22
 800b13a:	f47f ae2f 	bne.w	800ad9c <HAL_I2C_EV_IRQHandler+0x60>
    tmp = hi2c->XferCount;
 800b13e:	8d62      	ldrh	r2, [r4, #42]	; 0x2a
 800b140:	b292      	uxth	r2, r2
    if (tmp > 3U)
 800b142:	2a03      	cmp	r2, #3
 800b144:	f240 81ec 	bls.w	800b520 <HAL_I2C_EV_IRQHandler+0x7e4>
      *hi2c->pBuffPtr = (uint8_t)hi2c->Instance->DR;
 800b148:	6a62      	ldr	r2, [r4, #36]	; 0x24
 800b14a:	691b      	ldr	r3, [r3, #16]
 800b14c:	7013      	strb	r3, [r2, #0]
      hi2c->XferCount--;
 800b14e:	8d63      	ldrh	r3, [r4, #42]	; 0x2a
      hi2c->pBuffPtr++;
 800b150:	6a62      	ldr	r2, [r4, #36]	; 0x24
      hi2c->XferCount--;
 800b152:	3b01      	subs	r3, #1
 800b154:	b29b      	uxth	r3, r3
 800b156:	8563      	strh	r3, [r4, #42]	; 0x2a
      if (hi2c->XferCount == (uint16_t)3)
 800b158:	8d63      	ldrh	r3, [r4, #42]	; 0x2a
 800b15a:	b29b      	uxth	r3, r3
      hi2c->pBuffPtr++;
 800b15c:	3201      	adds	r2, #1
      if (hi2c->XferCount == (uint16_t)3)
 800b15e:	2b03      	cmp	r3, #3
      hi2c->pBuffPtr++;
 800b160:	6262      	str	r2, [r4, #36]	; 0x24
      if (hi2c->XferCount == (uint16_t)3)
 800b162:	f47f ae1b 	bne.w	800ad9c <HAL_I2C_EV_IRQHandler+0x60>
        __HAL_I2C_DISABLE_IT(hi2c, I2C_IT_BUF);
 800b166:	6822      	ldr	r2, [r4, #0]
 800b168:	6853      	ldr	r3, [r2, #4]
 800b16a:	f423 6380 	bic.w	r3, r3, #1024	; 0x400
 800b16e:	6053      	str	r3, [r2, #4]
 800b170:	e614      	b.n	800ad9c <HAL_I2C_EV_IRQHandler+0x60>
      if (hi2c->State == HAL_I2C_STATE_BUSY_TX)
 800b172:	f894 203d 	ldrb.w	r2, [r4, #61]	; 0x3d
 800b176:	2a21      	cmp	r2, #33	; 0x21
        hi2c->Instance->DR = I2C_7BIT_ADD_WRITE(hi2c->Devaddress);
 800b178:	6c62      	ldr	r2, [r4, #68]	; 0x44
        hi2c->Instance->DR = I2C_7BIT_ADD_READ(hi2c->Devaddress);
 800b17a:	bf16      	itet	ne
 800b17c:	f042 0201 	orrne.w	r2, r2, #1
        hi2c->Instance->DR = I2C_7BIT_ADD_WRITE(hi2c->Devaddress);
 800b180:	f002 02fe 	andeq.w	r2, r2, #254	; 0xfe
        hi2c->Instance->DR = I2C_7BIT_ADD_READ(hi2c->Devaddress);
 800b184:	b2d2      	uxtbne	r2, r2
 800b186:	611a      	str	r2, [r3, #16]
      if (((hi2c->hdmatx != NULL) && (hi2c->hdmatx->XferCpltCallback != NULL))
 800b188:	6b62      	ldr	r2, [r4, #52]	; 0x34
 800b18a:	b11a      	cbz	r2, 800b194 <HAL_I2C_EV_IRQHandler+0x458>
 800b18c:	6bd2      	ldr	r2, [r2, #60]	; 0x3c
 800b18e:	2a00      	cmp	r2, #0
 800b190:	f47f ae21 	bne.w	800add6 <HAL_I2C_EV_IRQHandler+0x9a>
      || ((hi2c->hdmarx != NULL) && (hi2c->hdmarx->XferCpltCallback != NULL)))
 800b194:	6ba2      	ldr	r2, [r4, #56]	; 0x38
 800b196:	2a00      	cmp	r2, #0
 800b198:	f43f ae00 	beq.w	800ad9c <HAL_I2C_EV_IRQHandler+0x60>
 800b19c:	6bd2      	ldr	r2, [r2, #60]	; 0x3c
 800b19e:	2a00      	cmp	r2, #0
 800b1a0:	f47f ae19 	bne.w	800add6 <HAL_I2C_EV_IRQHandler+0x9a>
 800b1a4:	e5fa      	b.n	800ad9c <HAL_I2C_EV_IRQHandler+0x60>
    I2C_ITError(hi2c);
 800b1a6:	4620      	mov	r0, r4
}
 800b1a8:	b00e      	add	sp, #56	; 0x38
 800b1aa:	e8bd 4070 	ldmia.w	sp!, {r4, r5, r6, lr}
    I2C_ITError(hi2c);
 800b1ae:	f7ff bd0f 	b.w	800abd0 <I2C_ITError>
    if (hi2c->EventCount == 0U)
 800b1b2:	6d22      	ldr	r2, [r4, #80]	; 0x50
 800b1b4:	bb52      	cbnz	r2, 800b20c <HAL_I2C_EV_IRQHandler+0x4d0>
      hi2c->Instance->DR = I2C_7BIT_ADD_WRITE(hi2c->Devaddress);
 800b1b6:	6c62      	ldr	r2, [r4, #68]	; 0x44
 800b1b8:	f002 02fe 	and.w	r2, r2, #254	; 0xfe
 800b1bc:	611a      	str	r2, [r3, #16]
 800b1be:	e5ed      	b.n	800ad9c <HAL_I2C_EV_IRQHandler+0x60>
    hi2c->XferOptions = I2C_FIRST_FRAME;
 800b1c0:	2201      	movs	r2, #1
 800b1c2:	62e2      	str	r2, [r4, #44]	; 0x2c
 800b1c4:	e619      	b.n	800adfa <HAL_I2C_EV_IRQHandler+0xbe>
    __HAL_I2C_DISABLE_IT(hi2c, (I2C_IT_BUF));
 800b1c6:	685a      	ldr	r2, [r3, #4]
 800b1c8:	f422 6280 	bic.w	r2, r2, #1024	; 0x400
 800b1cc:	605a      	str	r2, [r3, #4]
    if (I2C_CHECK_FLAG(IT2Flags, I2C_FLAG_DUALF) == RESET)
 800b1ce:	062e      	lsls	r6, r5, #24
    if (I2C_CHECK_FLAG(IT2Flags, I2C_FLAG_TRA) == RESET)
 800b1d0:	f085 0104 	eor.w	r1, r5, #4
    __HAL_UNLOCK(hi2c);
 800b1d4:	f04f 0300 	mov.w	r3, #0
      SlaveAddrCode = (uint16_t)hi2c->Init.OwnAddress1;
 800b1d8:	bf54      	ite	pl
 800b1da:	89a2      	ldrhpl	r2, [r4, #12]
      SlaveAddrCode = (uint16_t)hi2c->Init.OwnAddress2;
 800b1dc:	8b22      	ldrhmi	r2, [r4, #24]
    __HAL_UNLOCK(hi2c);
 800b1de:	f884 303c 	strb.w	r3, [r4, #60]	; 0x3c
  uint8_t TransferDirection = I2C_DIRECTION_RECEIVE;
 800b1e2:	f3c1 0180 	ubfx	r1, r1, #2, #1
    HAL_I2C_AddrCallback(hi2c, TransferDirection, SlaveAddrCode);
 800b1e6:	4620      	mov	r0, r4
 800b1e8:	f7ff fc0e 	bl	800aa08 <HAL_I2C_AddrCallback>
 800b1ec:	e5d6      	b.n	800ad9c <HAL_I2C_EV_IRQHandler+0x60>
 800b1ee:	bf00      	nop
 800b1f0:	0800aadd 	.word	0x0800aadd
      else if (hi2c->EventCount == 1U)
 800b1f4:	6d22      	ldr	r2, [r4, #80]	; 0x50
 800b1f6:	2a01      	cmp	r2, #1
 800b1f8:	f47f add0 	bne.w	800ad9c <HAL_I2C_EV_IRQHandler+0x60>
        hi2c->Instance->DR = I2C_10BIT_HEADER_READ(hi2c->Devaddress);
 800b1fc:	6c62      	ldr	r2, [r4, #68]	; 0x44
 800b1fe:	11d2      	asrs	r2, r2, #7
 800b200:	f002 0206 	and.w	r2, r2, #6
 800b204:	f042 02f1 	orr.w	r2, r2, #241	; 0xf1
 800b208:	611a      	str	r2, [r3, #16]
 800b20a:	e5c7      	b.n	800ad9c <HAL_I2C_EV_IRQHandler+0x60>
      hi2c->Instance->DR = I2C_7BIT_ADD_READ(hi2c->Devaddress);
 800b20c:	6c62      	ldr	r2, [r4, #68]	; 0x44
 800b20e:	f042 0201 	orr.w	r2, r2, #1
 800b212:	b2d2      	uxtb	r2, r2
 800b214:	611a      	str	r2, [r3, #16]
 800b216:	e5c1      	b.n	800ad9c <HAL_I2C_EV_IRQHandler+0x60>
    if ((hi2c->EventCount == 0U) && (CurrentMode == HAL_I2C_MODE_MEM))
 800b218:	6d21      	ldr	r1, [r4, #80]	; 0x50
 800b21a:	b911      	cbnz	r1, 800b222 <HAL_I2C_EV_IRQHandler+0x4e6>
 800b21c:	2a40      	cmp	r2, #64	; 0x40
 800b21e:	f000 809b 	beq.w	800b358 <HAL_I2C_EV_IRQHandler+0x61c>
    else if ((hi2c->EventCount == 0U) && (hi2c->Init.AddressingMode == I2C_ADDRESSINGMODE_10BIT))
 800b222:	6d22      	ldr	r2, [r4, #80]	; 0x50
 800b224:	b922      	cbnz	r2, 800b230 <HAL_I2C_EV_IRQHandler+0x4f4>
 800b226:	6921      	ldr	r1, [r4, #16]
 800b228:	f5b1 4f40 	cmp.w	r1, #49152	; 0xc000
 800b22c:	f000 809f 	beq.w	800b36e <HAL_I2C_EV_IRQHandler+0x632>
      if (hi2c->XferCount == 0U)
 800b230:	8d62      	ldrh	r2, [r4, #42]	; 0x2a
 800b232:	b292      	uxth	r2, r2
 800b234:	2a00      	cmp	r2, #0
 800b236:	d142      	bne.n	800b2be <HAL_I2C_EV_IRQHandler+0x582>
        __HAL_I2C_CLEAR_ADDRFLAG(hi2c);
 800b238:	9203      	str	r2, [sp, #12]
 800b23a:	695a      	ldr	r2, [r3, #20]
 800b23c:	9203      	str	r2, [sp, #12]
 800b23e:	699a      	ldr	r2, [r3, #24]
 800b240:	9203      	str	r2, [sp, #12]
 800b242:	9a03      	ldr	r2, [sp, #12]
        SET_BIT(hi2c->Instance->CR1, I2C_CR1_STOP);
 800b244:	681a      	ldr	r2, [r3, #0]
 800b246:	f442 7200 	orr.w	r2, r2, #512	; 0x200
 800b24a:	601a      	str	r2, [r3, #0]
      hi2c->EventCount = 0U;
 800b24c:	2300      	movs	r3, #0
 800b24e:	6523      	str	r3, [r4, #80]	; 0x50
 800b250:	e5a4      	b.n	800ad9c <HAL_I2C_EV_IRQHandler+0x60>
      hi2c->XferCount = (uint16_t)(__HAL_DMA_GET_COUNTER(hi2c->hdmarx));
 800b252:	6ba0      	ldr	r0, [r4, #56]	; 0x38
 800b254:	6802      	ldr	r2, [r0, #0]
 800b256:	6852      	ldr	r2, [r2, #4]
 800b258:	b292      	uxth	r2, r2
 800b25a:	8562      	strh	r2, [r4, #42]	; 0x2a
      if (hi2c->XferCount != 0U)
 800b25c:	8d62      	ldrh	r2, [r4, #42]	; 0x2a
 800b25e:	b292      	uxth	r2, r2
 800b260:	b11a      	cbz	r2, 800b26a <HAL_I2C_EV_IRQHandler+0x52e>
        hi2c->ErrorCode |= HAL_I2C_ERROR_AF;
 800b262:	6c22      	ldr	r2, [r4, #64]	; 0x40
 800b264:	f042 0204 	orr.w	r2, r2, #4
 800b268:	6422      	str	r2, [r4, #64]	; 0x40
      CLEAR_BIT(hi2c->Instance->CR2, I2C_CR2_DMAEN);
 800b26a:	685a      	ldr	r2, [r3, #4]
 800b26c:	f422 6200 	bic.w	r2, r2, #2048	; 0x800
 800b270:	605a      	str	r2, [r3, #4]
      if (HAL_DMA_GetState(hi2c->hdmarx) != HAL_DMA_STATE_READY)
 800b272:	f7fe fab3 	bl	80097dc <HAL_DMA_GetState>
 800b276:	2801      	cmp	r0, #1
 800b278:	f43f ae8e 	beq.w	800af98 <HAL_I2C_EV_IRQHandler+0x25c>
        hi2c->hdmarx->XferAbortCallback = I2C_DMAAbort;
 800b27c:	6ba0      	ldr	r0, [r4, #56]	; 0x38
 800b27e:	4b98      	ldr	r3, [pc, #608]	; (800b4e0 <HAL_I2C_EV_IRQHandler+0x7a4>)
 800b280:	6503      	str	r3, [r0, #80]	; 0x50
        if (HAL_DMA_Abort_IT(hi2c->hdmarx) != HAL_OK)
 800b282:	f7fe fa99 	bl	80097b8 <HAL_DMA_Abort_IT>
 800b286:	2800      	cmp	r0, #0
 800b288:	f43f ae86 	beq.w	800af98 <HAL_I2C_EV_IRQHandler+0x25c>
          hi2c->hdmarx->XferAbortCallback(hi2c->hdmarx);
 800b28c:	6ba0      	ldr	r0, [r4, #56]	; 0x38
 800b28e:	6d03      	ldr	r3, [r0, #80]	; 0x50
 800b290:	4798      	blx	r3
 800b292:	e681      	b.n	800af98 <HAL_I2C_EV_IRQHandler+0x25c>
      hi2c->State = HAL_I2C_STATE_LISTEN;
 800b294:	2228      	movs	r2, #40	; 0x28
      hi2c->PreviousState = I2C_STATE_NONE;
 800b296:	6323      	str	r3, [r4, #48]	; 0x30
      HAL_I2C_SlaveRxCpltCallback(hi2c);
 800b298:	4620      	mov	r0, r4
      hi2c->State = HAL_I2C_STATE_LISTEN;
 800b29a:	f884 203d 	strb.w	r2, [r4, #61]	; 0x3d
      HAL_I2C_SlaveRxCpltCallback(hi2c);
 800b29e:	f7ff fbb1 	bl	800aa04 <HAL_I2C_SlaveRxCpltCallback>
 800b2a2:	e6a6      	b.n	800aff2 <HAL_I2C_EV_IRQHandler+0x2b6>
      hi2c->PreviousState = I2C_STATE_NONE;
 800b2a4:	2300      	movs	r3, #0
      hi2c->XferOptions = I2C_NO_OPTION_FRAME;
 800b2a6:	498f      	ldr	r1, [pc, #572]	; (800b4e4 <HAL_I2C_EV_IRQHandler+0x7a8>)
 800b2a8:	62e1      	str	r1, [r4, #44]	; 0x2c
      hi2c->State = HAL_I2C_STATE_READY;
 800b2aa:	2220      	movs	r2, #32
      hi2c->PreviousState = I2C_STATE_NONE;
 800b2ac:	6323      	str	r3, [r4, #48]	; 0x30
      HAL_I2C_ListenCpltCallback(hi2c);
 800b2ae:	4620      	mov	r0, r4
      hi2c->State = HAL_I2C_STATE_READY;
 800b2b0:	f884 203d 	strb.w	r2, [r4, #61]	; 0x3d
      hi2c->Mode = HAL_I2C_MODE_NONE;
 800b2b4:	f884 303e 	strb.w	r3, [r4, #62]	; 0x3e
      HAL_I2C_ListenCpltCallback(hi2c);
 800b2b8:	f7ff fba8 	bl	800aa0c <HAL_I2C_ListenCpltCallback>
 800b2bc:	e56e      	b.n	800ad9c <HAL_I2C_EV_IRQHandler+0x60>
      else if (hi2c->XferCount == 1U)
 800b2be:	8d62      	ldrh	r2, [r4, #42]	; 0x2a
 800b2c0:	b292      	uxth	r2, r2
 800b2c2:	2a01      	cmp	r2, #1
 800b2c4:	d070      	beq.n	800b3a8 <HAL_I2C_EV_IRQHandler+0x66c>
      else if (hi2c->XferCount == 2U)
 800b2c6:	8d62      	ldrh	r2, [r4, #42]	; 0x2a
 800b2c8:	b292      	uxth	r2, r2
 800b2ca:	2a02      	cmp	r2, #2
 800b2cc:	f000 80d6 	beq.w	800b47c <HAL_I2C_EV_IRQHandler+0x740>
        SET_BIT(hi2c->Instance->CR1, I2C_CR1_ACK);
 800b2d0:	681a      	ldr	r2, [r3, #0]
 800b2d2:	f442 6280 	orr.w	r2, r2, #1024	; 0x400
 800b2d6:	601a      	str	r2, [r3, #0]
        if (((hi2c->Instance->CR2 & I2C_CR2_DMAEN) == I2C_CR2_DMAEN) && ((CurrentXferOptions == I2C_NO_OPTION_FRAME) || (CurrentXferOptions == I2C_FIRST_FRAME) || (CurrentXferOptions == I2C_FIRST_AND_LAST_FRAME) || (CurrentXferOptions == I2C_LAST_FRAME_NO_STOP) || (CurrentXferOptions == I2C_LAST_FRAME)))
 800b2d8:	685a      	ldr	r2, [r3, #4]
 800b2da:	0511      	lsls	r1, r2, #20
 800b2dc:	d508      	bpl.n	800b2f0 <HAL_I2C_EV_IRQHandler+0x5b4>
 800b2de:	2820      	cmp	r0, #32
 800b2e0:	f200 80f8 	bhi.w	800b4d4 <HAL_I2C_EV_IRQHandler+0x798>
 800b2e4:	2807      	cmp	r0, #7
 800b2e6:	f200 80ea 	bhi.w	800b4be <HAL_I2C_EV_IRQHandler+0x782>
 800b2ea:	2801      	cmp	r0, #1
 800b2ec:	f000 80ed 	beq.w	800b4ca <HAL_I2C_EV_IRQHandler+0x78e>
        __HAL_I2C_CLEAR_ADDRFLAG(hi2c);
 800b2f0:	2200      	movs	r2, #0
 800b2f2:	9209      	str	r2, [sp, #36]	; 0x24
 800b2f4:	695a      	ldr	r2, [r3, #20]
 800b2f6:	9209      	str	r2, [sp, #36]	; 0x24
 800b2f8:	699b      	ldr	r3, [r3, #24]
 800b2fa:	9309      	str	r3, [sp, #36]	; 0x24
 800b2fc:	9b09      	ldr	r3, [sp, #36]	; 0x24
 800b2fe:	e7a5      	b.n	800b24c <HAL_I2C_EV_IRQHandler+0x510>
    __HAL_I2C_DISABLE_IT(hi2c, I2C_IT_BUF);
 800b300:	685a      	ldr	r2, [r3, #4]
    *hi2c->pBuffPtr = (uint8_t)hi2c->Instance->DR;
 800b302:	6a61      	ldr	r1, [r4, #36]	; 0x24
    __HAL_I2C_DISABLE_IT(hi2c, I2C_IT_BUF);
 800b304:	f422 6280 	bic.w	r2, r2, #1024	; 0x400
 800b308:	605a      	str	r2, [r3, #4]
    *hi2c->pBuffPtr = (uint8_t)hi2c->Instance->DR;
 800b30a:	691b      	ldr	r3, [r3, #16]
 800b30c:	700b      	strb	r3, [r1, #0]
    hi2c->pBuffPtr++;
 800b30e:	e6f1      	b.n	800b0f4 <HAL_I2C_EV_IRQHandler+0x3b8>
  uint32_t CurrentXferOptions = hi2c->XferOptions;
 800b310:	6ae1      	ldr	r1, [r4, #44]	; 0x2c
  if (hi2c->State == HAL_I2C_STATE_BUSY_TX)
 800b312:	f894 203d 	ldrb.w	r2, [r4, #61]	; 0x3d
 800b316:	2a21      	cmp	r2, #33	; 0x21
 800b318:	f47f ad40 	bne.w	800ad9c <HAL_I2C_EV_IRQHandler+0x60>
    if (hi2c->XferCount != 0U)
 800b31c:	8d62      	ldrh	r2, [r4, #42]	; 0x2a
 800b31e:	b292      	uxth	r2, r2
 800b320:	2a00      	cmp	r2, #0
 800b322:	f47f aeb2 	bne.w	800b08a <HAL_I2C_EV_IRQHandler+0x34e>
      if ((CurrentXferOptions != I2C_FIRST_AND_LAST_FRAME) && (CurrentXferOptions != I2C_LAST_FRAME) && (CurrentXferOptions != I2C_NO_OPTION_FRAME))
 800b326:	2908      	cmp	r1, #8
 800b328:	f000 80e2 	beq.w	800b4f0 <HAL_I2C_EV_IRQHandler+0x7b4>
 800b32c:	2920      	cmp	r1, #32
 800b32e:	f000 80df 	beq.w	800b4f0 <HAL_I2C_EV_IRQHandler+0x7b4>
 800b332:	f511 3f80 	cmn.w	r1, #65536	; 0x10000
 800b336:	f000 80db 	beq.w	800b4f0 <HAL_I2C_EV_IRQHandler+0x7b4>
        __HAL_I2C_DISABLE_IT(hi2c, I2C_IT_EVT | I2C_IT_BUF | I2C_IT_ERR);
 800b33a:	6859      	ldr	r1, [r3, #4]
 800b33c:	f421 61e0 	bic.w	r1, r1, #1792	; 0x700
 800b340:	6059      	str	r1, [r3, #4]
        hi2c->PreviousState = I2C_STATE_MASTER_BUSY_TX;
 800b342:	2011      	movs	r0, #17
        hi2c->State = HAL_I2C_STATE_READY;
 800b344:	2320      	movs	r3, #32
        hi2c->PreviousState = I2C_STATE_MASTER_BUSY_TX;
 800b346:	6320      	str	r0, [r4, #48]	; 0x30
        hi2c->Mode = HAL_I2C_MODE_NONE;
 800b348:	f884 203e 	strb.w	r2, [r4, #62]	; 0x3e
        HAL_I2C_MasterTxCpltCallback(hi2c);
 800b34c:	4620      	mov	r0, r4
        hi2c->State = HAL_I2C_STATE_READY;
 800b34e:	f884 303d 	strb.w	r3, [r4, #61]	; 0x3d
        HAL_I2C_MasterTxCpltCallback(hi2c);
 800b352:	f7ff fb51 	bl	800a9f8 <HAL_I2C_MasterTxCpltCallback>
 800b356:	e521      	b.n	800ad9c <HAL_I2C_EV_IRQHandler+0x60>
      __HAL_I2C_CLEAR_ADDRFLAG(hi2c);
 800b358:	9101      	str	r1, [sp, #4]
 800b35a:	695a      	ldr	r2, [r3, #20]
 800b35c:	9201      	str	r2, [sp, #4]
 800b35e:	699b      	ldr	r3, [r3, #24]
 800b360:	9301      	str	r3, [sp, #4]
 800b362:	9b01      	ldr	r3, [sp, #4]
 800b364:	e51a      	b.n	800ad9c <HAL_I2C_EV_IRQHandler+0x60>
  else if ((CurrentState == HAL_I2C_STATE_BUSY_TX) || \
 800b366:	2a21      	cmp	r2, #33	; 0x21
 800b368:	f43f add1 	beq.w	800af0e <HAL_I2C_EV_IRQHandler+0x1d2>
 800b36c:	e5c9      	b.n	800af02 <HAL_I2C_EV_IRQHandler+0x1c6>
      __HAL_I2C_CLEAR_ADDRFLAG(hi2c);
 800b36e:	9202      	str	r2, [sp, #8]
 800b370:	695a      	ldr	r2, [r3, #20]
 800b372:	9202      	str	r2, [sp, #8]
 800b374:	699a      	ldr	r2, [r3, #24]
 800b376:	9202      	str	r2, [sp, #8]
 800b378:	9a02      	ldr	r2, [sp, #8]
      SET_BIT(hi2c->Instance->CR1, I2C_CR1_START);
 800b37a:	681a      	ldr	r2, [r3, #0]
 800b37c:	f442 7280 	orr.w	r2, r2, #256	; 0x100
 800b380:	601a      	str	r2, [r3, #0]
      hi2c->EventCount++;
 800b382:	6d23      	ldr	r3, [r4, #80]	; 0x50
 800b384:	3301      	adds	r3, #1
 800b386:	6523      	str	r3, [r4, #80]	; 0x50
 800b388:	e508      	b.n	800ad9c <HAL_I2C_EV_IRQHandler+0x60>
    __HAL_I2C_DISABLE_IT(hi2c, I2C_IT_BUF);
 800b38a:	685a      	ldr	r2, [r3, #4]
    if ((CurrentXferOptions != I2C_NEXT_FRAME) && (CurrentXferOptions != I2C_FIRST_AND_NEXT_FRAME))
 800b38c:	2904      	cmp	r1, #4
    __HAL_I2C_DISABLE_IT(hi2c, I2C_IT_BUF);
 800b38e:	f422 6280 	bic.w	r2, r2, #1024	; 0x400
 800b392:	605a      	str	r2, [r3, #4]
    if ((CurrentXferOptions != I2C_NEXT_FRAME) && (CurrentXferOptions != I2C_FIRST_AND_NEXT_FRAME))
 800b394:	f43f aeab 	beq.w	800b0ee <HAL_I2C_EV_IRQHandler+0x3b2>
 800b398:	2902      	cmp	r1, #2
 800b39a:	f43f aea8 	beq.w	800b0ee <HAL_I2C_EV_IRQHandler+0x3b2>
      CLEAR_BIT(hi2c->Instance->CR1, I2C_CR1_ACK);
 800b39e:	681a      	ldr	r2, [r3, #0]
 800b3a0:	f422 6280 	bic.w	r2, r2, #1024	; 0x400
 800b3a4:	601a      	str	r2, [r3, #0]
 800b3a6:	e6a2      	b.n	800b0ee <HAL_I2C_EV_IRQHandler+0x3b2>
        if (CurrentXferOptions == I2C_NO_OPTION_FRAME)
 800b3a8:	f510 3f80 	cmn.w	r0, #65536	; 0x10000
 800b3ac:	f000 811b 	beq.w	800b5e6 <HAL_I2C_EV_IRQHandler+0x8aa>
        else if ((CurrentXferOptions != I2C_FIRST_AND_LAST_FRAME) && (CurrentXferOptions != I2C_LAST_FRAME) \
 800b3b0:	2808      	cmp	r0, #8
 800b3b2:	f000 8108 	beq.w	800b5c6 <HAL_I2C_EV_IRQHandler+0x88a>
 800b3b6:	2820      	cmp	r0, #32
 800b3b8:	f000 8105 	beq.w	800b5c6 <HAL_I2C_EV_IRQHandler+0x88a>
                 && ((Prev_State != I2C_STATE_MASTER_BUSY_RX) || (CurrentXferOptions == I2C_FIRST_FRAME)))
 800b3bc:	2d12      	cmp	r5, #18
 800b3be:	f000 80ff 	beq.w	800b5c0 <HAL_I2C_EV_IRQHandler+0x884>
          if ((CurrentXferOptions != I2C_NEXT_FRAME) && (CurrentXferOptions != I2C_FIRST_AND_NEXT_FRAME) && (CurrentXferOptions != I2C_LAST_FRAME_NO_STOP))
 800b3c2:	2810      	cmp	r0, #16
 800b3c4:	d804      	bhi.n	800b3d0 <HAL_I2C_EV_IRQHandler+0x694>
 800b3c6:	4a48      	ldr	r2, [pc, #288]	; (800b4e8 <HAL_I2C_EV_IRQHandler+0x7ac>)
 800b3c8:	40c2      	lsrs	r2, r0
 800b3ca:	07d1      	lsls	r1, r2, #31
 800b3cc:	f100 814c 	bmi.w	800b668 <HAL_I2C_EV_IRQHandler+0x92c>
            CLEAR_BIT(hi2c->Instance->CR1, I2C_CR1_ACK);
 800b3d0:	681a      	ldr	r2, [r3, #0]
 800b3d2:	f422 6280 	bic.w	r2, r2, #1024	; 0x400
 800b3d6:	601a      	str	r2, [r3, #0]
          __HAL_I2C_CLEAR_ADDRFLAG(hi2c);
 800b3d8:	2200      	movs	r2, #0
 800b3da:	9206      	str	r2, [sp, #24]
 800b3dc:	695a      	ldr	r2, [r3, #20]
 800b3de:	9206      	str	r2, [sp, #24]
 800b3e0:	699b      	ldr	r3, [r3, #24]
 800b3e2:	9306      	str	r3, [sp, #24]
 800b3e4:	9b06      	ldr	r3, [sp, #24]
 800b3e6:	e731      	b.n	800b24c <HAL_I2C_EV_IRQHandler+0x510>
      __HAL_I2C_DISABLE_IT(hi2c, I2C_IT_BUF);
 800b3e8:	685a      	ldr	r2, [r3, #4]
 800b3ea:	f422 6280 	bic.w	r2, r2, #1024	; 0x400
 800b3ee:	605a      	str	r2, [r3, #4]
 800b3f0:	e4d4      	b.n	800ad9c <HAL_I2C_EV_IRQHandler+0x60>
    if ((CurrentXferOptions == I2C_FIRST_FRAME) || (CurrentXferOptions == I2C_LAST_FRAME_NO_STOP))
 800b3f2:	3901      	subs	r1, #1
 800b3f4:	290f      	cmp	r1, #15
 800b3f6:	d809      	bhi.n	800b40c <HAL_I2C_EV_IRQHandler+0x6d0>
 800b3f8:	e8df f001 	tbb	[pc, r1]
 800b3fc:	3608363b 	.word	0x3608363b
 800b400:	08080808 	.word	0x08080808
 800b404:	08080808 	.word	0x08080808
 800b408:	3b080808 	.word	0x3b080808
      SET_BIT(hi2c->Instance->CR1, I2C_CR1_STOP);
 800b40c:	681a      	ldr	r2, [r3, #0]
 800b40e:	f442 7200 	orr.w	r2, r2, #512	; 0x200
 800b412:	601a      	str	r2, [r3, #0]
    *hi2c->pBuffPtr = (uint8_t)hi2c->Instance->DR;
 800b414:	6a62      	ldr	r2, [r4, #36]	; 0x24
 800b416:	691b      	ldr	r3, [r3, #16]
 800b418:	7013      	strb	r3, [r2, #0]
    hi2c->XferCount--;
 800b41a:	8d63      	ldrh	r3, [r4, #42]	; 0x2a
    hi2c->pBuffPtr++;
 800b41c:	6a62      	ldr	r2, [r4, #36]	; 0x24
    *hi2c->pBuffPtr = (uint8_t)hi2c->Instance->DR;
 800b41e:	6821      	ldr	r1, [r4, #0]
    hi2c->XferCount--;
 800b420:	3b01      	subs	r3, #1
 800b422:	b29b      	uxth	r3, r3
 800b424:	8563      	strh	r3, [r4, #42]	; 0x2a
    *hi2c->pBuffPtr = (uint8_t)hi2c->Instance->DR;
 800b426:	690b      	ldr	r3, [r1, #16]
    hi2c->pBuffPtr++;
 800b428:	1c51      	adds	r1, r2, #1
 800b42a:	6261      	str	r1, [r4, #36]	; 0x24
    *hi2c->pBuffPtr = (uint8_t)hi2c->Instance->DR;
 800b42c:	7053      	strb	r3, [r2, #1]
    hi2c->XferCount--;
 800b42e:	8d63      	ldrh	r3, [r4, #42]	; 0x2a
    __HAL_I2C_DISABLE_IT(hi2c, I2C_IT_EVT | I2C_IT_ERR);
 800b430:	6821      	ldr	r1, [r4, #0]
    hi2c->pBuffPtr++;
 800b432:	6a62      	ldr	r2, [r4, #36]	; 0x24
    hi2c->XferCount--;
 800b434:	3b01      	subs	r3, #1
 800b436:	b29b      	uxth	r3, r3
 800b438:	8563      	strh	r3, [r4, #42]	; 0x2a
    __HAL_I2C_DISABLE_IT(hi2c, I2C_IT_EVT | I2C_IT_ERR);
 800b43a:	684b      	ldr	r3, [r1, #4]
    hi2c->pBuffPtr++;
 800b43c:	3201      	adds	r2, #1
    __HAL_I2C_DISABLE_IT(hi2c, I2C_IT_EVT | I2C_IT_ERR);
 800b43e:	f423 7340 	bic.w	r3, r3, #768	; 0x300
    hi2c->State = HAL_I2C_STATE_READY;
 800b442:	2020      	movs	r0, #32
    hi2c->pBuffPtr++;
 800b444:	6262      	str	r2, [r4, #36]	; 0x24
    __HAL_I2C_DISABLE_IT(hi2c, I2C_IT_EVT | I2C_IT_ERR);
 800b446:	604b      	str	r3, [r1, #4]
    hi2c->State = HAL_I2C_STATE_READY;
 800b448:	f884 003d 	strb.w	r0, [r4, #61]	; 0x3d
    if (hi2c->Mode == HAL_I2C_MODE_MEM)
 800b44c:	f894 303e 	ldrb.w	r3, [r4, #62]	; 0x3e
 800b450:	2b40      	cmp	r3, #64	; 0x40
 800b452:	f000 80f5 	beq.w	800b640 <HAL_I2C_EV_IRQHandler+0x904>
      hi2c->Mode = HAL_I2C_MODE_NONE;
 800b456:	2200      	movs	r2, #0
      hi2c->PreviousState = I2C_STATE_MASTER_BUSY_RX;
 800b458:	2312      	movs	r3, #18
      hi2c->Mode = HAL_I2C_MODE_NONE;
 800b45a:	f884 203e 	strb.w	r2, [r4, #62]	; 0x3e
      HAL_I2C_MasterRxCpltCallback(hi2c);
 800b45e:	4620      	mov	r0, r4
      hi2c->PreviousState = I2C_STATE_MASTER_BUSY_RX;
 800b460:	6323      	str	r3, [r4, #48]	; 0x30
      HAL_I2C_MasterRxCpltCallback(hi2c);
 800b462:	f7ff facb 	bl	800a9fc <HAL_I2C_MasterRxCpltCallback>
 800b466:	e499      	b.n	800ad9c <HAL_I2C_EV_IRQHandler+0x60>
      SET_BIT(hi2c->Instance->CR1, I2C_CR1_ACK);
 800b468:	681a      	ldr	r2, [r3, #0]
 800b46a:	f442 6280 	orr.w	r2, r2, #1024	; 0x400
 800b46e:	601a      	str	r2, [r3, #0]
 800b470:	e7d0      	b.n	800b414 <HAL_I2C_EV_IRQHandler+0x6d8>
      CLEAR_BIT(hi2c->Instance->CR1, I2C_CR1_ACK);
 800b472:	681a      	ldr	r2, [r3, #0]
 800b474:	f422 6280 	bic.w	r2, r2, #1024	; 0x400
 800b478:	601a      	str	r2, [r3, #0]
 800b47a:	e7cb      	b.n	800b414 <HAL_I2C_EV_IRQHandler+0x6d8>
        if ((CurrentXferOptions != I2C_NEXT_FRAME) && (CurrentXferOptions != I2C_FIRST_AND_NEXT_FRAME) && (CurrentXferOptions != I2C_LAST_FRAME_NO_STOP))
 800b47c:	2810      	cmp	r0, #16
 800b47e:	d804      	bhi.n	800b48a <HAL_I2C_EV_IRQHandler+0x74e>
 800b480:	4a19      	ldr	r2, [pc, #100]	; (800b4e8 <HAL_I2C_EV_IRQHandler+0x7ac>)
 800b482:	40c2      	lsrs	r2, r0
 800b484:	07d2      	lsls	r2, r2, #31
 800b486:	f100 80c2 	bmi.w	800b60e <HAL_I2C_EV_IRQHandler+0x8d2>
          CLEAR_BIT(hi2c->Instance->CR1, I2C_CR1_ACK);
 800b48a:	681a      	ldr	r2, [r3, #0]
 800b48c:	f422 6280 	bic.w	r2, r2, #1024	; 0x400
 800b490:	601a      	str	r2, [r3, #0]
          SET_BIT(hi2c->Instance->CR1, I2C_CR1_POS);
 800b492:	681a      	ldr	r2, [r3, #0]
 800b494:	f442 6200 	orr.w	r2, r2, #2048	; 0x800
 800b498:	601a      	str	r2, [r3, #0]
        if (((hi2c->Instance->CR2 & I2C_CR2_DMAEN) == I2C_CR2_DMAEN) && ((CurrentXferOptions == I2C_NO_OPTION_FRAME) || (CurrentXferOptions == I2C_FIRST_FRAME) || (CurrentXferOptions == I2C_FIRST_AND_LAST_FRAME) || (CurrentXferOptions == I2C_LAST_FRAME_NO_STOP) || (CurrentXferOptions == I2C_LAST_FRAME)))
 800b49a:	685a      	ldr	r2, [r3, #4]
 800b49c:	0516      	lsls	r6, r2, #20
 800b49e:	d506      	bpl.n	800b4ae <HAL_I2C_EV_IRQHandler+0x772>
 800b4a0:	2820      	cmp	r0, #32
 800b4a2:	f240 80bc 	bls.w	800b61e <HAL_I2C_EV_IRQHandler+0x8e2>
 800b4a6:	f510 3f80 	cmn.w	r0, #65536	; 0x10000
 800b4aa:	f000 80bd 	beq.w	800b628 <HAL_I2C_EV_IRQHandler+0x8ec>
        __HAL_I2C_CLEAR_ADDRFLAG(hi2c);
 800b4ae:	2200      	movs	r2, #0
 800b4b0:	9208      	str	r2, [sp, #32]
 800b4b2:	695a      	ldr	r2, [r3, #20]
 800b4b4:	9208      	str	r2, [sp, #32]
 800b4b6:	699b      	ldr	r3, [r3, #24]
 800b4b8:	9308      	str	r3, [sp, #32]
 800b4ba:	9b08      	ldr	r3, [sp, #32]
 800b4bc:	e6c6      	b.n	800b24c <HAL_I2C_EV_IRQHandler+0x510>
 800b4be:	4a0b      	ldr	r2, [pc, #44]	; (800b4ec <HAL_I2C_EV_IRQHandler+0x7b0>)
 800b4c0:	3808      	subs	r0, #8
 800b4c2:	40c2      	lsrs	r2, r0
 800b4c4:	07d2      	lsls	r2, r2, #31
 800b4c6:	f57f af13 	bpl.w	800b2f0 <HAL_I2C_EV_IRQHandler+0x5b4>
          SET_BIT(hi2c->Instance->CR2, I2C_CR2_LAST);
 800b4ca:	685a      	ldr	r2, [r3, #4]
 800b4cc:	f442 5280 	orr.w	r2, r2, #4096	; 0x1000
 800b4d0:	605a      	str	r2, [r3, #4]
 800b4d2:	e70d      	b.n	800b2f0 <HAL_I2C_EV_IRQHandler+0x5b4>
 800b4d4:	f510 3f80 	cmn.w	r0, #65536	; 0x10000
 800b4d8:	f47f af0a 	bne.w	800b2f0 <HAL_I2C_EV_IRQHandler+0x5b4>
 800b4dc:	e7f5      	b.n	800b4ca <HAL_I2C_EV_IRQHandler+0x78e>
 800b4de:	bf00      	nop
 800b4e0:	0800aadd 	.word	0x0800aadd
 800b4e4:	ffff0000 	.word	0xffff0000
 800b4e8:	00010014 	.word	0x00010014
 800b4ec:	01000101 	.word	0x01000101
        __HAL_I2C_DISABLE_IT(hi2c, I2C_IT_EVT | I2C_IT_BUF | I2C_IT_ERR);
 800b4f0:	6859      	ldr	r1, [r3, #4]
 800b4f2:	f421 61e0 	bic.w	r1, r1, #1792	; 0x700
 800b4f6:	6059      	str	r1, [r3, #4]
        SET_BIT(hi2c->Instance->CR1, I2C_CR1_STOP);
 800b4f8:	6819      	ldr	r1, [r3, #0]
        hi2c->PreviousState = I2C_STATE_NONE;
 800b4fa:	2200      	movs	r2, #0
        hi2c->State = HAL_I2C_STATE_READY;
 800b4fc:	2020      	movs	r0, #32
        SET_BIT(hi2c->Instance->CR1, I2C_CR1_STOP);
 800b4fe:	f441 7100 	orr.w	r1, r1, #512	; 0x200
 800b502:	6019      	str	r1, [r3, #0]
        hi2c->PreviousState = I2C_STATE_NONE;
 800b504:	6322      	str	r2, [r4, #48]	; 0x30
        hi2c->State = HAL_I2C_STATE_READY;
 800b506:	f884 003d 	strb.w	r0, [r4, #61]	; 0x3d
        if (hi2c->Mode == HAL_I2C_MODE_MEM)
 800b50a:	f894 303e 	ldrb.w	r3, [r4, #62]	; 0x3e
          hi2c->Mode = HAL_I2C_MODE_NONE;
 800b50e:	f884 203e 	strb.w	r2, [r4, #62]	; 0x3e
        if (hi2c->Mode == HAL_I2C_MODE_MEM)
 800b512:	2b40      	cmp	r3, #64	; 0x40
          HAL_I2C_MemTxCpltCallback(hi2c);
 800b514:	4620      	mov	r0, r4
        if (hi2c->Mode == HAL_I2C_MODE_MEM)
 800b516:	f47f af1c 	bne.w	800b352 <HAL_I2C_EV_IRQHandler+0x616>
          HAL_I2C_MemTxCpltCallback(hi2c);
 800b51a:	f7ff fa79 	bl	800aa10 <HAL_I2C_MemTxCpltCallback>
 800b51e:	e43d      	b.n	800ad9c <HAL_I2C_EV_IRQHandler+0x60>
    else if ((hi2c->XferOptions != I2C_FIRST_AND_NEXT_FRAME) && ((tmp == 1U) || (tmp == 0U)))
 800b520:	6ae0      	ldr	r0, [r4, #44]	; 0x2c
 800b522:	2802      	cmp	r0, #2
 800b524:	f43f af60 	beq.w	800b3e8 <HAL_I2C_EV_IRQHandler+0x6ac>
 800b528:	2a01      	cmp	r2, #1
 800b52a:	f63f af5d 	bhi.w	800b3e8 <HAL_I2C_EV_IRQHandler+0x6ac>
  count = I2C_TIMEOUT_STOP_FLAG * (SystemCoreClock / 25U / 1000U);
 800b52e:	4a62      	ldr	r2, [pc, #392]	; (800b6b8 <HAL_I2C_EV_IRQHandler+0x97c>)
  __IO uint32_t count = 0U;
 800b530:	910b      	str	r1, [sp, #44]	; 0x2c
  count = I2C_TIMEOUT_STOP_FLAG * (SystemCoreClock / 25U / 1000U);
 800b532:	6812      	ldr	r2, [r2, #0]
 800b534:	f246 10a8 	movw	r0, #25000	; 0x61a8
 800b538:	fbb2 f2f0 	udiv	r2, r2, r0
 800b53c:	eb02 0282 	add.w	r2, r2, r2, lsl #2
 800b540:	920b      	str	r2, [sp, #44]	; 0x2c
 800b542:	e004      	b.n	800b54e <HAL_I2C_EV_IRQHandler+0x812>
  while (READ_BIT(hi2c->Instance->CR1, I2C_CR1_STOP) == I2C_CR1_STOP);
 800b544:	681a      	ldr	r2, [r3, #0]
 800b546:	f412 7200 	ands.w	r2, r2, #512	; 0x200
 800b54a:	f000 8092 	beq.w	800b672 <HAL_I2C_EV_IRQHandler+0x936>
    count--;
 800b54e:	9a0b      	ldr	r2, [sp, #44]	; 0x2c
 800b550:	3a01      	subs	r2, #1
 800b552:	920b      	str	r2, [sp, #44]	; 0x2c
    if (count == 0U)
 800b554:	990b      	ldr	r1, [sp, #44]	; 0x2c
 800b556:	2900      	cmp	r1, #0
 800b558:	d1f4      	bne.n	800b544 <HAL_I2C_EV_IRQHandler+0x808>
      hi2c->ErrorCode           |= HAL_I2C_ERROR_TIMEOUT;
 800b55a:	6c22      	ldr	r2, [r4, #64]	; 0x40
        *hi2c->pBuffPtr = (uint8_t)hi2c->Instance->DR;
 800b55c:	6a60      	ldr	r0, [r4, #36]	; 0x24
      hi2c->ErrorCode           |= HAL_I2C_ERROR_TIMEOUT;
 800b55e:	f042 0220 	orr.w	r2, r2, #32
 800b562:	6422      	str	r2, [r4, #64]	; 0x40
        __HAL_I2C_DISABLE_IT(hi2c, I2C_IT_EVT | I2C_IT_BUF | I2C_IT_ERR);
 800b564:	685a      	ldr	r2, [r3, #4]
 800b566:	f422 62e0 	bic.w	r2, r2, #1792	; 0x700
 800b56a:	605a      	str	r2, [r3, #4]
        *hi2c->pBuffPtr = (uint8_t)hi2c->Instance->DR;
 800b56c:	691b      	ldr	r3, [r3, #16]
 800b56e:	7003      	strb	r3, [r0, #0]
        hi2c->XferCount--;
 800b570:	8d63      	ldrh	r3, [r4, #42]	; 0x2a
        hi2c->pBuffPtr++;
 800b572:	6a62      	ldr	r2, [r4, #36]	; 0x24
        hi2c->XferCount--;
 800b574:	3b01      	subs	r3, #1
        hi2c->pBuffPtr++;
 800b576:	3201      	adds	r2, #1
        hi2c->XferCount--;
 800b578:	b29b      	uxth	r3, r3
        hi2c->State = HAL_I2C_STATE_READY;
 800b57a:	2020      	movs	r0, #32
        hi2c->XferCount--;
 800b57c:	8563      	strh	r3, [r4, #42]	; 0x2a
        hi2c->pBuffPtr++;
 800b57e:	6262      	str	r2, [r4, #36]	; 0x24
        hi2c->State = HAL_I2C_STATE_READY;
 800b580:	f884 003d 	strb.w	r0, [r4, #61]	; 0x3d
        HAL_I2C_ErrorCallback(hi2c);
 800b584:	4620      	mov	r0, r4
        hi2c->Mode = HAL_I2C_MODE_NONE;
 800b586:	f884 103e 	strb.w	r1, [r4, #62]	; 0x3e
        HAL_I2C_ErrorCallback(hi2c);
 800b58a:	f7ff faa3 	bl	800aad4 <HAL_I2C_ErrorCallback>
 800b58e:	e405      	b.n	800ad9c <HAL_I2C_EV_IRQHandler+0x60>
    if ((CurrentXferOptions != I2C_FIRST_AND_LAST_FRAME) && (CurrentXferOptions != I2C_LAST_FRAME) && (CurrentXferOptions != I2C_NO_OPTION_FRAME))
 800b590:	2d08      	cmp	r5, #8
 800b592:	d0ad      	beq.n	800b4f0 <HAL_I2C_EV_IRQHandler+0x7b4>
 800b594:	2d20      	cmp	r5, #32
 800b596:	d0ab      	beq.n	800b4f0 <HAL_I2C_EV_IRQHandler+0x7b4>
 800b598:	f515 3f80 	cmn.w	r5, #65536	; 0x10000
 800b59c:	d0a8      	beq.n	800b4f0 <HAL_I2C_EV_IRQHandler+0x7b4>
      __HAL_I2C_DISABLE_IT(hi2c, I2C_IT_EVT | I2C_IT_BUF | I2C_IT_ERR);
 800b59e:	685a      	ldr	r2, [r3, #4]
 800b5a0:	f422 62e0 	bic.w	r2, r2, #1792	; 0x700
 800b5a4:	605a      	str	r2, [r3, #4]
      hi2c->PreviousState = I2C_STATE_MASTER_BUSY_TX;
 800b5a6:	2011      	movs	r0, #17
      hi2c->Mode = HAL_I2C_MODE_NONE;
 800b5a8:	2100      	movs	r1, #0
      hi2c->State = HAL_I2C_STATE_READY;
 800b5aa:	2320      	movs	r3, #32
      hi2c->PreviousState = I2C_STATE_MASTER_BUSY_TX;
 800b5ac:	6320      	str	r0, [r4, #48]	; 0x30
      hi2c->Mode = HAL_I2C_MODE_NONE;
 800b5ae:	f884 103e 	strb.w	r1, [r4, #62]	; 0x3e
      HAL_I2C_MasterTxCpltCallback(hi2c);
 800b5b2:	4620      	mov	r0, r4
      hi2c->State = HAL_I2C_STATE_READY;
 800b5b4:	f884 303d 	strb.w	r3, [r4, #61]	; 0x3d
      HAL_I2C_MasterTxCpltCallback(hi2c);
 800b5b8:	f7ff fa1e 	bl	800a9f8 <HAL_I2C_MasterTxCpltCallback>
 800b5bc:	f7ff bbee 	b.w	800ad9c <HAL_I2C_EV_IRQHandler+0x60>
                 && ((Prev_State != I2C_STATE_MASTER_BUSY_RX) || (CurrentXferOptions == I2C_FIRST_FRAME)))
 800b5c0:	2801      	cmp	r0, #1
 800b5c2:	f43f af05 	beq.w	800b3d0 <HAL_I2C_EV_IRQHandler+0x694>
          CLEAR_BIT(hi2c->Instance->CR1, I2C_CR1_ACK);
 800b5c6:	681a      	ldr	r2, [r3, #0]
          __HAL_I2C_CLEAR_ADDRFLAG(hi2c);
 800b5c8:	2100      	movs	r1, #0
          CLEAR_BIT(hi2c->Instance->CR1, I2C_CR1_ACK);
 800b5ca:	f422 6280 	bic.w	r2, r2, #1024	; 0x400
 800b5ce:	601a      	str	r2, [r3, #0]
          __HAL_I2C_CLEAR_ADDRFLAG(hi2c);
 800b5d0:	9107      	str	r1, [sp, #28]
 800b5d2:	695a      	ldr	r2, [r3, #20]
 800b5d4:	9207      	str	r2, [sp, #28]
 800b5d6:	699a      	ldr	r2, [r3, #24]
 800b5d8:	9207      	str	r2, [sp, #28]
 800b5da:	9a07      	ldr	r2, [sp, #28]
          SET_BIT(hi2c->Instance->CR1, I2C_CR1_STOP);
 800b5dc:	681a      	ldr	r2, [r3, #0]
 800b5de:	f442 7200 	orr.w	r2, r2, #512	; 0x200
 800b5e2:	601a      	str	r2, [r3, #0]
 800b5e4:	e632      	b.n	800b24c <HAL_I2C_EV_IRQHandler+0x510>
          CLEAR_BIT(hi2c->Instance->CR1, I2C_CR1_ACK);
 800b5e6:	681a      	ldr	r2, [r3, #0]
 800b5e8:	f422 6280 	bic.w	r2, r2, #1024	; 0x400
 800b5ec:	601a      	str	r2, [r3, #0]
          if ((hi2c->Instance->CR2 & I2C_CR2_DMAEN) == I2C_CR2_DMAEN)
 800b5ee:	685a      	ldr	r2, [r3, #4]
 800b5f0:	f412 6200 	ands.w	r2, r2, #2048	; 0x800
 800b5f4:	d02d      	beq.n	800b652 <HAL_I2C_EV_IRQHandler+0x916>
            CLEAR_BIT(hi2c->Instance->CR1, I2C_CR1_ACK);
 800b5f6:	681a      	ldr	r2, [r3, #0]
            __HAL_I2C_CLEAR_ADDRFLAG(hi2c);
 800b5f8:	2100      	movs	r1, #0
            CLEAR_BIT(hi2c->Instance->CR1, I2C_CR1_ACK);
 800b5fa:	f422 6280 	bic.w	r2, r2, #1024	; 0x400
 800b5fe:	601a      	str	r2, [r3, #0]
            __HAL_I2C_CLEAR_ADDRFLAG(hi2c);
 800b600:	9104      	str	r1, [sp, #16]
 800b602:	695a      	ldr	r2, [r3, #20]
 800b604:	9204      	str	r2, [sp, #16]
 800b606:	699b      	ldr	r3, [r3, #24]
 800b608:	9304      	str	r3, [sp, #16]
 800b60a:	9b04      	ldr	r3, [sp, #16]
 800b60c:	e61e      	b.n	800b24c <HAL_I2C_EV_IRQHandler+0x510>
          SET_BIT(hi2c->Instance->CR1, I2C_CR1_ACK);
 800b60e:	681a      	ldr	r2, [r3, #0]
 800b610:	f442 6280 	orr.w	r2, r2, #1024	; 0x400
 800b614:	601a      	str	r2, [r3, #0]
        if (((hi2c->Instance->CR2 & I2C_CR2_DMAEN) == I2C_CR2_DMAEN) && ((CurrentXferOptions == I2C_NO_OPTION_FRAME) || (CurrentXferOptions == I2C_FIRST_FRAME) || (CurrentXferOptions == I2C_FIRST_AND_LAST_FRAME) || (CurrentXferOptions == I2C_LAST_FRAME_NO_STOP) || (CurrentXferOptions == I2C_LAST_FRAME)))
 800b616:	685a      	ldr	r2, [r3, #4]
 800b618:	0515      	lsls	r5, r2, #20
 800b61a:	f57f af48 	bpl.w	800b4ae <HAL_I2C_EV_IRQHandler+0x772>
 800b61e:	2807      	cmp	r0, #7
 800b620:	d807      	bhi.n	800b632 <HAL_I2C_EV_IRQHandler+0x8f6>
 800b622:	2801      	cmp	r0, #1
 800b624:	f47f af43 	bne.w	800b4ae <HAL_I2C_EV_IRQHandler+0x772>
          SET_BIT(hi2c->Instance->CR2, I2C_CR2_LAST);
 800b628:	685a      	ldr	r2, [r3, #4]
 800b62a:	f442 5280 	orr.w	r2, r2, #4096	; 0x1000
 800b62e:	605a      	str	r2, [r3, #4]
 800b630:	e73d      	b.n	800b4ae <HAL_I2C_EV_IRQHandler+0x772>
 800b632:	4a22      	ldr	r2, [pc, #136]	; (800b6bc <HAL_I2C_EV_IRQHandler+0x980>)
 800b634:	3808      	subs	r0, #8
 800b636:	40c2      	lsrs	r2, r0
 800b638:	07d0      	lsls	r0, r2, #31
 800b63a:	f57f af38 	bpl.w	800b4ae <HAL_I2C_EV_IRQHandler+0x772>
 800b63e:	e7f3      	b.n	800b628 <HAL_I2C_EV_IRQHandler+0x8ec>
      hi2c->Mode = HAL_I2C_MODE_NONE;
 800b640:	2300      	movs	r3, #0
 800b642:	f884 303e 	strb.w	r3, [r4, #62]	; 0x3e
      HAL_I2C_MemRxCpltCallback(hi2c);
 800b646:	4620      	mov	r0, r4
      hi2c->PreviousState = I2C_STATE_NONE;
 800b648:	6323      	str	r3, [r4, #48]	; 0x30
      HAL_I2C_MemRxCpltCallback(hi2c);
 800b64a:	f7ff fa41 	bl	800aad0 <HAL_I2C_MemRxCpltCallback>
 800b64e:	f7ff bba5 	b.w	800ad9c <HAL_I2C_EV_IRQHandler+0x60>
            __HAL_I2C_CLEAR_ADDRFLAG(hi2c);
 800b652:	9205      	str	r2, [sp, #20]
 800b654:	695a      	ldr	r2, [r3, #20]
 800b656:	9205      	str	r2, [sp, #20]
 800b658:	699a      	ldr	r2, [r3, #24]
 800b65a:	9205      	str	r2, [sp, #20]
 800b65c:	9a05      	ldr	r2, [sp, #20]
            SET_BIT(hi2c->Instance->CR1, I2C_CR1_STOP);
 800b65e:	681a      	ldr	r2, [r3, #0]
 800b660:	f442 7200 	orr.w	r2, r2, #512	; 0x200
 800b664:	601a      	str	r2, [r3, #0]
 800b666:	e5f1      	b.n	800b24c <HAL_I2C_EV_IRQHandler+0x510>
            SET_BIT(hi2c->Instance->CR1, I2C_CR1_ACK);
 800b668:	681a      	ldr	r2, [r3, #0]
 800b66a:	f442 6280 	orr.w	r2, r2, #1024	; 0x400
 800b66e:	601a      	str	r2, [r3, #0]
 800b670:	e6b2      	b.n	800b3d8 <HAL_I2C_EV_IRQHandler+0x69c>
        CLEAR_BIT(hi2c->Instance->CR1, I2C_CR1_ACK);
 800b672:	6819      	ldr	r1, [r3, #0]
        *hi2c->pBuffPtr = (uint8_t)hi2c->Instance->DR;
 800b674:	6a60      	ldr	r0, [r4, #36]	; 0x24
        CLEAR_BIT(hi2c->Instance->CR1, I2C_CR1_ACK);
 800b676:	f421 6180 	bic.w	r1, r1, #1024	; 0x400
 800b67a:	6019      	str	r1, [r3, #0]
        __HAL_I2C_DISABLE_IT(hi2c, I2C_IT_EVT | I2C_IT_BUF | I2C_IT_ERR);
 800b67c:	6859      	ldr	r1, [r3, #4]
 800b67e:	f421 61e0 	bic.w	r1, r1, #1792	; 0x700
 800b682:	6059      	str	r1, [r3, #4]
        *hi2c->pBuffPtr = (uint8_t)hi2c->Instance->DR;
 800b684:	691b      	ldr	r3, [r3, #16]
 800b686:	7003      	strb	r3, [r0, #0]
        hi2c->XferCount--;
 800b688:	8d63      	ldrh	r3, [r4, #42]	; 0x2a
 800b68a:	3b01      	subs	r3, #1
        hi2c->State = HAL_I2C_STATE_READY;
 800b68c:	2120      	movs	r1, #32
        hi2c->XferCount--;
 800b68e:	b29b      	uxth	r3, r3
 800b690:	8563      	strh	r3, [r4, #42]	; 0x2a
        hi2c->State = HAL_I2C_STATE_READY;
 800b692:	f884 103d 	strb.w	r1, [r4, #61]	; 0x3d
        hi2c->pBuffPtr++;
 800b696:	6a63      	ldr	r3, [r4, #36]	; 0x24
        if (hi2c->Mode == HAL_I2C_MODE_MEM)
 800b698:	f894 103e 	ldrb.w	r1, [r4, #62]	; 0x3e
        hi2c->pBuffPtr++;
 800b69c:	3301      	adds	r3, #1
        if (hi2c->Mode == HAL_I2C_MODE_MEM)
 800b69e:	2940      	cmp	r1, #64	; 0x40
        hi2c->pBuffPtr++;
 800b6a0:	6263      	str	r3, [r4, #36]	; 0x24
        if (hi2c->Mode == HAL_I2C_MODE_MEM)
 800b6a2:	f47f aed9 	bne.w	800b458 <HAL_I2C_EV_IRQHandler+0x71c>
          hi2c->Mode = HAL_I2C_MODE_NONE;
 800b6a6:	f884 203e 	strb.w	r2, [r4, #62]	; 0x3e
          HAL_I2C_MemRxCpltCallback(hi2c);
 800b6aa:	4620      	mov	r0, r4
          hi2c->PreviousState = I2C_STATE_NONE;
 800b6ac:	6322      	str	r2, [r4, #48]	; 0x30
          HAL_I2C_MemRxCpltCallback(hi2c);
 800b6ae:	f7ff fa0f 	bl	800aad0 <HAL_I2C_MemRxCpltCallback>
 800b6b2:	f7ff bb73 	b.w	800ad9c <HAL_I2C_EV_IRQHandler+0x60>
 800b6b6:	bf00      	nop
 800b6b8:	20000078 	.word	0x20000078
 800b6bc:	01000101 	.word	0x01000101

0800b6c0 <HAL_I2CEx_ConfigAnalogFilter>:
{
  /* Check the parameters */
  assert_param(IS_I2C_ALL_INSTANCE(hi2c->Instance));
  assert_param(IS_I2C_ANALOG_FILTER(AnalogFilter));

  if (hi2c->State == HAL_I2C_STATE_READY)
 800b6c0:	f890 203d 	ldrb.w	r2, [r0, #61]	; 0x3d
 800b6c4:	2a20      	cmp	r2, #32
{
 800b6c6:	4603      	mov	r3, r0
  if (hi2c->State == HAL_I2C_STATE_READY)
 800b6c8:	fa5f fc82 	uxtb.w	ip, r2
 800b6cc:	d001      	beq.n	800b6d2 <HAL_I2CEx_ConfigAnalogFilter+0x12>

    return HAL_OK;
  }
  else
  {
    return HAL_BUSY;
 800b6ce:	2002      	movs	r0, #2
  }
}
 800b6d0:	4770      	bx	lr
    __HAL_I2C_DISABLE(hi2c);
 800b6d2:	6802      	ldr	r2, [r0, #0]
    hi2c->State = HAL_I2C_STATE_BUSY;
 800b6d4:	2024      	movs	r0, #36	; 0x24
 800b6d6:	f883 003d 	strb.w	r0, [r3, #61]	; 0x3d
    __HAL_I2C_DISABLE(hi2c);
 800b6da:	6810      	ldr	r0, [r2, #0]
 800b6dc:	f020 0001 	bic.w	r0, r0, #1
 800b6e0:	6010      	str	r0, [r2, #0]
    hi2c->Instance->FLTR &= ~(I2C_FLTR_ANOFF);
 800b6e2:	6a50      	ldr	r0, [r2, #36]	; 0x24
 800b6e4:	f020 0010 	bic.w	r0, r0, #16
 800b6e8:	6250      	str	r0, [r2, #36]	; 0x24
    hi2c->Instance->FLTR |= AnalogFilter;
 800b6ea:	6a50      	ldr	r0, [r2, #36]	; 0x24
 800b6ec:	4301      	orrs	r1, r0
 800b6ee:	6251      	str	r1, [r2, #36]	; 0x24
    __HAL_I2C_ENABLE(hi2c);
 800b6f0:	6811      	ldr	r1, [r2, #0]
 800b6f2:	f041 0101 	orr.w	r1, r1, #1
 800b6f6:	6011      	str	r1, [r2, #0]
    return HAL_OK;
 800b6f8:	2000      	movs	r0, #0
    hi2c->State = HAL_I2C_STATE_READY;
 800b6fa:	f883 c03d 	strb.w	ip, [r3, #61]	; 0x3d
    return HAL_OK;
 800b6fe:	4770      	bx	lr

0800b700 <HAL_I2CEx_ConfigDigitalFilter>:

  /* Check the parameters */
  assert_param(IS_I2C_ALL_INSTANCE(hi2c->Instance));
  assert_param(IS_I2C_DIGITAL_FILTER(DigitalFilter));

  if (hi2c->State == HAL_I2C_STATE_READY)
 800b700:	f890 203d 	ldrb.w	r2, [r0, #61]	; 0x3d
 800b704:	2a20      	cmp	r2, #32
 800b706:	d001      	beq.n	800b70c <HAL_I2CEx_ConfigDigitalFilter+0xc>

    return HAL_OK;
  }
  else
  {
    return HAL_BUSY;
 800b708:	2002      	movs	r0, #2
  }
}
 800b70a:	4770      	bx	lr
{
 800b70c:	b410      	push	{r4}
 800b70e:	fa5f fc82 	uxtb.w	ip, r2
    __HAL_I2C_DISABLE(hi2c);
 800b712:	6804      	ldr	r4, [r0, #0]
    hi2c->State = HAL_I2C_STATE_BUSY;
 800b714:	2224      	movs	r2, #36	; 0x24
 800b716:	f880 203d 	strb.w	r2, [r0, #61]	; 0x3d
    __HAL_I2C_DISABLE(hi2c);
 800b71a:	6822      	ldr	r2, [r4, #0]
 800b71c:	f022 0201 	bic.w	r2, r2, #1
 800b720:	6022      	str	r2, [r4, #0]
    tmpreg = hi2c->Instance->FLTR;
 800b722:	4603      	mov	r3, r0
 800b724:	6a60      	ldr	r0, [r4, #36]	; 0x24
    tmpreg &= ~(I2C_FLTR_DNF);
 800b726:	f64f 72f0 	movw	r2, #65520	; 0xfff0
 800b72a:	4002      	ands	r2, r0
    tmpreg |= DigitalFilter;
 800b72c:	4311      	orrs	r1, r2
    hi2c->Instance->FLTR = tmpreg;
 800b72e:	b289      	uxth	r1, r1
 800b730:	6261      	str	r1, [r4, #36]	; 0x24
    __HAL_I2C_ENABLE(hi2c);
 800b732:	6822      	ldr	r2, [r4, #0]
 800b734:	f042 0201 	orr.w	r2, r2, #1
 800b738:	6022      	str	r2, [r4, #0]
    hi2c->State = HAL_I2C_STATE_READY;
 800b73a:	f883 c03d 	strb.w	ip, [r3, #61]	; 0x3d
    return HAL_OK;
 800b73e:	2000      	movs	r0, #0
}
 800b740:	f85d 4b04 	ldr.w	r4, [sp], #4
 800b744:	4770      	bx	lr
 800b746:	bf00      	nop

0800b748 <HAL_LTDC_Init>:
{
  uint32_t tmp;
  uint32_t tmp1;

  /* Check the LTDC peripheral state */
  if (hltdc == NULL)
 800b748:	2800      	cmp	r0, #0
 800b74a:	d069      	beq.n	800b820 <HAL_LTDC_Init+0xd8>
{
 800b74c:	b538      	push	{r3, r4, r5, lr}
    }
    /* Init the low level hardware */
    hltdc->MspInitCallback(hltdc);
  }
#else
  if (hltdc->State == HAL_LTDC_STATE_RESET)
 800b74e:	f890 30a1 	ldrb.w	r3, [r0, #161]	; 0xa1
 800b752:	4604      	mov	r4, r0
 800b754:	f003 02ff 	and.w	r2, r3, #255	; 0xff
 800b758:	2b00      	cmp	r3, #0
 800b75a:	d05c      	beq.n	800b816 <HAL_LTDC_Init+0xce>
    HAL_LTDC_MspInit(hltdc);
  }
#endif /* USE_HAL_LTDC_REGISTER_CALLBACKS */

  /* Change LTDC peripheral state */
  hltdc->State = HAL_LTDC_STATE_BUSY;
 800b75c:	2202      	movs	r2, #2

  /* Configure the HS, VS, DE and PC polarity */
  hltdc->Instance->GCR &= ~(LTDC_GCR_HSPOL | LTDC_GCR_VSPOL | LTDC_GCR_DEPOL | LTDC_GCR_PCPOL);
 800b75e:	6823      	ldr	r3, [r4, #0]
  hltdc->State = HAL_LTDC_STATE_BUSY;
 800b760:	f884 20a1 	strb.w	r2, [r4, #161]	; 0xa1
  hltdc->Instance->GCR |= (uint32_t)(hltdc->Init.HSPolarity | hltdc->Init.VSPolarity | \
 800b764:	e9d4 2001 	ldrd	r2, r0, [r4, #4]
  hltdc->Instance->GCR &= ~(LTDC_GCR_HSPOL | LTDC_GCR_VSPOL | LTDC_GCR_DEPOL | LTDC_GCR_PCPOL);
 800b768:	6999      	ldr	r1, [r3, #24]
  hltdc->Instance->GCR |= (uint32_t)(hltdc->Init.HSPolarity | hltdc->Init.VSPolarity | \
 800b76a:	4302      	orrs	r2, r0
                                     hltdc->Init.DEPolarity | hltdc->Init.PCPolarity);
 800b76c:	e9d4 5003 	ldrd	r5, r0, [r4, #12]
  hltdc->Instance->GCR &= ~(LTDC_GCR_HSPOL | LTDC_GCR_VSPOL | LTDC_GCR_DEPOL | LTDC_GCR_PCPOL);
 800b770:	f021 4170 	bic.w	r1, r1, #4026531840	; 0xf0000000
 800b774:	6199      	str	r1, [r3, #24]
  hltdc->Instance->GCR |= (uint32_t)(hltdc->Init.HSPolarity | hltdc->Init.VSPolarity | \
 800b776:	6999      	ldr	r1, [r3, #24]
 800b778:	432a      	orrs	r2, r5
                                     hltdc->Init.DEPolarity | hltdc->Init.PCPolarity);
 800b77a:	4302      	orrs	r2, r0
  hltdc->Instance->GCR |= (uint32_t)(hltdc->Init.HSPolarity | hltdc->Init.VSPolarity | \
 800b77c:	430a      	orrs	r2, r1
 800b77e:	619a      	str	r2, [r3, #24]

  /* Set Synchronization size */
  hltdc->Instance->SSCR &= ~(LTDC_SSCR_VSH | LTDC_SSCR_HSW);
 800b780:	689a      	ldr	r2, [r3, #8]
 800b782:	4928      	ldr	r1, [pc, #160]	; (800b824 <HAL_LTDC_Init+0xdc>)
  tmp = (hltdc->Init.HorizontalSync << 16U);
 800b784:	6960      	ldr	r0, [r4, #20]
  hltdc->Instance->SSCR &= ~(LTDC_SSCR_VSH | LTDC_SSCR_HSW);
 800b786:	400a      	ands	r2, r1
 800b788:	609a      	str	r2, [r3, #8]
  hltdc->Instance->SSCR |= (tmp | hltdc->Init.VerticalSync);
 800b78a:	689a      	ldr	r2, [r3, #8]
 800b78c:	ea42 4200 	orr.w	r2, r2, r0, lsl #16
 800b790:	69a0      	ldr	r0, [r4, #24]
 800b792:	4302      	orrs	r2, r0
 800b794:	609a      	str	r2, [r3, #8]

  /* Set Accumulated Back porch */
  hltdc->Instance->BPCR &= ~(LTDC_BPCR_AVBP | LTDC_BPCR_AHBP);
 800b796:	68da      	ldr	r2, [r3, #12]
  tmp = (hltdc->Init.AccumulatedHBP << 16U);
 800b798:	69e0      	ldr	r0, [r4, #28]
  hltdc->Instance->BPCR &= ~(LTDC_BPCR_AVBP | LTDC_BPCR_AHBP);
 800b79a:	400a      	ands	r2, r1
 800b79c:	60da      	str	r2, [r3, #12]
  hltdc->Instance->BPCR |= (tmp | hltdc->Init.AccumulatedVBP);
 800b79e:	68da      	ldr	r2, [r3, #12]
 800b7a0:	ea42 4200 	orr.w	r2, r2, r0, lsl #16
 800b7a4:	6a20      	ldr	r0, [r4, #32]
 800b7a6:	4302      	orrs	r2, r0
 800b7a8:	60da      	str	r2, [r3, #12]

  /* Set Accumulated Active Width */
  hltdc->Instance->AWCR &= ~(LTDC_AWCR_AAH | LTDC_AWCR_AAW);
 800b7aa:	691a      	ldr	r2, [r3, #16]
  tmp = (hltdc->Init.AccumulatedActiveW << 16U);
 800b7ac:	6a60      	ldr	r0, [r4, #36]	; 0x24
  hltdc->Instance->AWCR &= ~(LTDC_AWCR_AAH | LTDC_AWCR_AAW);
 800b7ae:	400a      	ands	r2, r1
 800b7b0:	611a      	str	r2, [r3, #16]
  hltdc->Instance->AWCR |= (tmp | hltdc->Init.AccumulatedActiveH);
 800b7b2:	691a      	ldr	r2, [r3, #16]
 800b7b4:	ea42 4200 	orr.w	r2, r2, r0, lsl #16
 800b7b8:	6aa0      	ldr	r0, [r4, #40]	; 0x28
 800b7ba:	4302      	orrs	r2, r0
 800b7bc:	611a      	str	r2, [r3, #16]

  /* Set Total Width */
  hltdc->Instance->TWCR &= ~(LTDC_TWCR_TOTALH | LTDC_TWCR_TOTALW);
 800b7be:	695a      	ldr	r2, [r3, #20]
  tmp = (hltdc->Init.TotalWidth << 16U);
 800b7c0:	6ae0      	ldr	r0, [r4, #44]	; 0x2c
  hltdc->Instance->TWCR &= ~(LTDC_TWCR_TOTALH | LTDC_TWCR_TOTALW);
 800b7c2:	400a      	ands	r2, r1
 800b7c4:	615a      	str	r2, [r3, #20]
  hltdc->Instance->TWCR |= (tmp | hltdc->Init.TotalHeigh);
 800b7c6:	695a      	ldr	r2, [r3, #20]
 800b7c8:	6b21      	ldr	r1, [r4, #48]	; 0x30
 800b7ca:	ea42 4200 	orr.w	r2, r2, r0, lsl #16
 800b7ce:	430a      	orrs	r2, r1
 800b7d0:	615a      	str	r2, [r3, #20]

  /* Set the background color value */
  tmp = ((uint32_t)(hltdc->Init.Backcolor.Green) << 8U);
  tmp1 = ((uint32_t)(hltdc->Init.Backcolor.Red) << 16U);
  hltdc->Instance->BCCR &= ~(LTDC_BCCR_BCBLUE | LTDC_BCCR_BCGREEN | LTDC_BCCR_BCRED);
 800b7d2:	6ada      	ldr	r2, [r3, #44]	; 0x2c
  tmp = ((uint32_t)(hltdc->Init.Backcolor.Green) << 8U);
 800b7d4:	f894 0035 	ldrb.w	r0, [r4, #53]	; 0x35
  tmp1 = ((uint32_t)(hltdc->Init.Backcolor.Red) << 16U);
 800b7d8:	f894 1036 	ldrb.w	r1, [r4, #54]	; 0x36
  hltdc->Instance->BCCR &= ~(LTDC_BCCR_BCBLUE | LTDC_BCCR_BCGREEN | LTDC_BCCR_BCRED);
 800b7dc:	f002 427f 	and.w	r2, r2, #4278190080	; 0xff000000
 800b7e0:	62da      	str	r2, [r3, #44]	; 0x2c
  hltdc->Instance->BCCR |= (tmp1 | tmp | hltdc->Init.Backcolor.Blue);
 800b7e2:	6add      	ldr	r5, [r3, #44]	; 0x2c
 800b7e4:	f894 2034 	ldrb.w	r2, [r4, #52]	; 0x34
 800b7e8:	432a      	orrs	r2, r5
 800b7ea:	ea42 2200 	orr.w	r2, r2, r0, lsl #8
 800b7ee:	ea42 4201 	orr.w	r2, r2, r1, lsl #16
 800b7f2:	62da      	str	r2, [r3, #44]	; 0x2c

  /* Enable the Transfer Error and FIFO underrun interrupts */
  __HAL_LTDC_ENABLE_IT(hltdc, LTDC_IT_TE | LTDC_IT_FU);
 800b7f4:	6b5a      	ldr	r2, [r3, #52]	; 0x34
 800b7f6:	f042 0206 	orr.w	r2, r2, #6
 800b7fa:	635a      	str	r2, [r3, #52]	; 0x34

  /* Enable LTDC by setting LTDCEN bit */
  __HAL_LTDC_ENABLE(hltdc);
 800b7fc:	699a      	ldr	r2, [r3, #24]

  /* Initialize the error code */
  hltdc->ErrorCode = HAL_LTDC_ERROR_NONE;

  /* Initialize the LTDC state*/
  hltdc->State = HAL_LTDC_STATE_READY;
 800b7fe:	f04f 0c01 	mov.w	ip, #1
  hltdc->ErrorCode = HAL_LTDC_ERROR_NONE;
 800b802:	2100      	movs	r1, #0
  __HAL_LTDC_ENABLE(hltdc);
 800b804:	ea42 020c 	orr.w	r2, r2, ip
 800b808:	619a      	str	r2, [r3, #24]
  hltdc->ErrorCode = HAL_LTDC_ERROR_NONE;
 800b80a:	f8c4 10a4 	str.w	r1, [r4, #164]	; 0xa4
  hltdc->State = HAL_LTDC_STATE_READY;
 800b80e:	f884 c0a1 	strb.w	ip, [r4, #161]	; 0xa1

  return HAL_OK;
 800b812:	4608      	mov	r0, r1
}
 800b814:	bd38      	pop	{r3, r4, r5, pc}
    hltdc->Lock = HAL_UNLOCKED;
 800b816:	f880 20a0 	strb.w	r2, [r0, #160]	; 0xa0
    HAL_LTDC_MspInit(hltdc);
 800b81a:	f7f5 ff33 	bl	8001684 <HAL_LTDC_MspInit>
 800b81e:	e79d      	b.n	800b75c <HAL_LTDC_Init+0x14>
    return HAL_ERROR;
 800b820:	2001      	movs	r0, #1
}
 800b822:	4770      	bx	lr
 800b824:	f000f800 	.word	0xf000f800

0800b828 <HAL_LTDC_ErrorCallback>:
 800b828:	4770      	bx	lr
 800b82a:	bf00      	nop

0800b82c <HAL_LTDC_ReloadEventCallback>:
 800b82c:	4770      	bx	lr
 800b82e:	bf00      	nop

0800b830 <HAL_LTDC_IRQHandler>:
  *                the configuration information for the LTDC.
  * @retval HAL status
  */
void HAL_LTDC_IRQHandler(LTDC_HandleTypeDef *hltdc)
{
  uint32_t isrflags  = READ_REG(hltdc->Instance->ISR);
 800b830:	6803      	ldr	r3, [r0, #0]
{
 800b832:	b570      	push	{r4, r5, r6, lr}
  uint32_t isrflags  = READ_REG(hltdc->Instance->ISR);
 800b834:	6b9d      	ldr	r5, [r3, #56]	; 0x38
  uint32_t itsources = READ_REG(hltdc->Instance->IER);
 800b836:	6b5e      	ldr	r6, [r3, #52]	; 0x34

  /* Transfer Error Interrupt management ***************************************/
  if (((isrflags & LTDC_ISR_TERRIF) != 0U) && ((itsources & LTDC_IER_TERRIE) != 0U))
 800b838:	076a      	lsls	r2, r5, #29
{
 800b83a:	4604      	mov	r4, r0
  if (((isrflags & LTDC_ISR_TERRIF) != 0U) && ((itsources & LTDC_IER_TERRIE) != 0U))
 800b83c:	d501      	bpl.n	800b842 <HAL_LTDC_IRQHandler+0x12>
 800b83e:	0771      	lsls	r1, r6, #29
 800b840:	d41d      	bmi.n	800b87e <HAL_LTDC_IRQHandler+0x4e>
    HAL_LTDC_ErrorCallback(hltdc);
#endif /* USE_HAL_LTDC_REGISTER_CALLBACKS */
  }

  /* FIFO underrun Interrupt management ***************************************/
  if (((isrflags & LTDC_ISR_FUIF) != 0U) && ((itsources & LTDC_IER_FUIE) != 0U))
 800b842:	07aa      	lsls	r2, r5, #30
 800b844:	d501      	bpl.n	800b84a <HAL_LTDC_IRQHandler+0x1a>
 800b846:	07b3      	lsls	r3, r6, #30
 800b848:	d42d      	bmi.n	800b8a6 <HAL_LTDC_IRQHandler+0x76>
    HAL_LTDC_ErrorCallback(hltdc);
#endif /* USE_HAL_LTDC_REGISTER_CALLBACKS */
  }

  /* Line Interrupt management ************************************************/
  if (((isrflags & LTDC_ISR_LIF) != 0U) && ((itsources & LTDC_IER_LIE) != 0U))
 800b84a:	07e8      	lsls	r0, r5, #31
 800b84c:	d501      	bpl.n	800b852 <HAL_LTDC_IRQHandler+0x22>
 800b84e:	07f1      	lsls	r1, r6, #31
 800b850:	d440      	bmi.n	800b8d4 <HAL_LTDC_IRQHandler+0xa4>
    HAL_LTDC_LineEventCallback(hltdc);
#endif /* USE_HAL_LTDC_REGISTER_CALLBACKS */
  }

  /* Register reload Interrupt management ***************************************/
  if (((isrflags & LTDC_ISR_RRIF) != 0U) && ((itsources & LTDC_IER_RRIE) != 0U))
 800b852:	072a      	lsls	r2, r5, #28
 800b854:	d501      	bpl.n	800b85a <HAL_LTDC_IRQHandler+0x2a>
 800b856:	0733      	lsls	r3, r6, #28
 800b858:	d400      	bmi.n	800b85c <HAL_LTDC_IRQHandler+0x2c>
#else
    /*Call Legacy Reload Event callback */
    HAL_LTDC_ReloadEventCallback(hltdc);
#endif /* USE_HAL_LTDC_REGISTER_CALLBACKS */
  }
}
 800b85a:	bd70      	pop	{r4, r5, r6, pc}
    __HAL_LTDC_DISABLE_IT(hltdc, LTDC_IT_RR);
 800b85c:	6823      	ldr	r3, [r4, #0]
 800b85e:	6b5a      	ldr	r2, [r3, #52]	; 0x34
    __HAL_LTDC_CLEAR_FLAG(hltdc, LTDC_FLAG_RR);
 800b860:	2008      	movs	r0, #8
    __HAL_LTDC_DISABLE_IT(hltdc, LTDC_IT_RR);
 800b862:	f022 0208 	bic.w	r2, r2, #8
 800b866:	635a      	str	r2, [r3, #52]	; 0x34
    hltdc->State = HAL_LTDC_STATE_READY;
 800b868:	2101      	movs	r1, #1
    __HAL_LTDC_CLEAR_FLAG(hltdc, LTDC_FLAG_RR);
 800b86a:	63d8      	str	r0, [r3, #60]	; 0x3c
    __HAL_UNLOCK(hltdc);
 800b86c:	2300      	movs	r3, #0
    hltdc->State = HAL_LTDC_STATE_READY;
 800b86e:	f884 10a1 	strb.w	r1, [r4, #161]	; 0xa1
    __HAL_UNLOCK(hltdc);
 800b872:	f884 30a0 	strb.w	r3, [r4, #160]	; 0xa0
    HAL_LTDC_ReloadEventCallback(hltdc);
 800b876:	4620      	mov	r0, r4
 800b878:	f7ff ffd8 	bl	800b82c <HAL_LTDC_ReloadEventCallback>
}
 800b87c:	bd70      	pop	{r4, r5, r6, pc}
    __HAL_LTDC_DISABLE_IT(hltdc, LTDC_IT_TE);
 800b87e:	6b5a      	ldr	r2, [r3, #52]	; 0x34
 800b880:	f022 0204 	bic.w	r2, r2, #4
 800b884:	635a      	str	r2, [r3, #52]	; 0x34
    __HAL_LTDC_CLEAR_FLAG(hltdc, LTDC_FLAG_TE);
 800b886:	2204      	movs	r2, #4
 800b888:	63da      	str	r2, [r3, #60]	; 0x3c
    hltdc->ErrorCode |= HAL_LTDC_ERROR_TE;
 800b88a:	f8d0 30a4 	ldr.w	r3, [r0, #164]	; 0xa4
 800b88e:	f043 0301 	orr.w	r3, r3, #1
 800b892:	f8c0 30a4 	str.w	r3, [r0, #164]	; 0xa4
    __HAL_UNLOCK(hltdc);
 800b896:	2300      	movs	r3, #0
    hltdc->State = HAL_LTDC_STATE_ERROR;
 800b898:	f880 20a1 	strb.w	r2, [r0, #161]	; 0xa1
    __HAL_UNLOCK(hltdc);
 800b89c:	f880 30a0 	strb.w	r3, [r0, #160]	; 0xa0
    HAL_LTDC_ErrorCallback(hltdc);
 800b8a0:	f7ff ffc2 	bl	800b828 <HAL_LTDC_ErrorCallback>
 800b8a4:	e7cd      	b.n	800b842 <HAL_LTDC_IRQHandler+0x12>
    __HAL_LTDC_DISABLE_IT(hltdc, LTDC_IT_FU);
 800b8a6:	6823      	ldr	r3, [r4, #0]
 800b8a8:	6b5a      	ldr	r2, [r3, #52]	; 0x34
 800b8aa:	f022 0202 	bic.w	r2, r2, #2
 800b8ae:	635a      	str	r2, [r3, #52]	; 0x34
    __HAL_LTDC_CLEAR_FLAG(hltdc, LTDC_FLAG_FU);
 800b8b0:	2202      	movs	r2, #2
 800b8b2:	63da      	str	r2, [r3, #60]	; 0x3c
    hltdc->ErrorCode |= HAL_LTDC_ERROR_FU;
 800b8b4:	f8d4 30a4 	ldr.w	r3, [r4, #164]	; 0xa4
 800b8b8:	f043 0302 	orr.w	r3, r3, #2
 800b8bc:	f8c4 30a4 	str.w	r3, [r4, #164]	; 0xa4
    hltdc->State = HAL_LTDC_STATE_ERROR;
 800b8c0:	2204      	movs	r2, #4
    __HAL_UNLOCK(hltdc);
 800b8c2:	2300      	movs	r3, #0
    hltdc->State = HAL_LTDC_STATE_ERROR;
 800b8c4:	f884 20a1 	strb.w	r2, [r4, #161]	; 0xa1
    __HAL_UNLOCK(hltdc);
 800b8c8:	f884 30a0 	strb.w	r3, [r4, #160]	; 0xa0
    HAL_LTDC_ErrorCallback(hltdc);
 800b8cc:	4620      	mov	r0, r4
 800b8ce:	f7ff ffab 	bl	800b828 <HAL_LTDC_ErrorCallback>
 800b8d2:	e7ba      	b.n	800b84a <HAL_LTDC_IRQHandler+0x1a>
    __HAL_LTDC_DISABLE_IT(hltdc, LTDC_IT_LI);
 800b8d4:	6823      	ldr	r3, [r4, #0]
 800b8d6:	6b5a      	ldr	r2, [r3, #52]	; 0x34
 800b8d8:	f022 0201 	bic.w	r2, r2, #1
 800b8dc:	635a      	str	r2, [r3, #52]	; 0x34
    __HAL_LTDC_CLEAR_FLAG(hltdc, LTDC_FLAG_LI);
 800b8de:	2201      	movs	r2, #1
 800b8e0:	63da      	str	r2, [r3, #60]	; 0x3c
    __HAL_UNLOCK(hltdc);
 800b8e2:	2300      	movs	r3, #0
    hltdc->State = HAL_LTDC_STATE_READY;
 800b8e4:	f884 20a1 	strb.w	r2, [r4, #161]	; 0xa1
    __HAL_UNLOCK(hltdc);
 800b8e8:	f884 30a0 	strb.w	r3, [r4, #160]	; 0xa0
    HAL_LTDC_LineEventCallback(hltdc);
 800b8ec:	4620      	mov	r0, r4
 800b8ee:	f7f6 fec5 	bl	800267c <HAL_LTDC_LineEventCallback>
 800b8f2:	e7ae      	b.n	800b852 <HAL_LTDC_IRQHandler+0x22>

0800b8f4 <HAL_LTDC_ConfigLayer>:
  assert_param(IS_LTDC_BLENDING_FACTOR2(pLayerCfg->BlendingFactor2));
  assert_param(IS_LTDC_CFBLL(pLayerCfg->ImageWidth));
  assert_param(IS_LTDC_CFBLNBR(pLayerCfg->ImageHeight));

  /* Process locked */
  __HAL_LOCK(hltdc);
 800b8f4:	f890 30a0 	ldrb.w	r3, [r0, #160]	; 0xa0
 800b8f8:	2b01      	cmp	r3, #1
 800b8fa:	f000 80c2 	beq.w	800ba82 <HAL_LTDC_ConfigLayer+0x18e>
{
 800b8fe:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}

  /* Change LTDC peripheral state */
  hltdc->State = HAL_LTDC_STATE_BUSY;

  /* Copy new layer configuration into handle structure */
  hltdc->LayerCfg[LayerIdx] = *pLayerCfg;
 800b902:	f04f 0e34 	mov.w	lr, #52	; 0x34
  uint32_t tmp;
  uint32_t tmp1;
  uint32_t tmp2;

  /* Configure the horizontal start and stop position */
  tmp = ((pLayerCfg->WindowX1 + ((hltdc->Instance->BPCR & LTDC_BPCR_AHBP) >> 16U)) << 16U);
 800b906:	f8d0 9000 	ldr.w	r9, [r0]
  hltdc->LayerCfg[LayerIdx] = *pLayerCfg;
 800b90a:	fb0e 0e02 	mla	lr, lr, r2, r0
  hltdc->State = HAL_LTDC_STATE_BUSY;
 800b90e:	2302      	movs	r3, #2
  LTDC_LAYER(hltdc, LayerIdx)->WHPCR &= ~(LTDC_LxWHPCR_WHSTPOS | LTDC_LxWHPCR_WHSPPOS);
 800b910:	01d2      	lsls	r2, r2, #7
  hltdc->State = HAL_LTDC_STATE_BUSY;
 800b912:	f880 30a1 	strb.w	r3, [r0, #161]	; 0xa1
  LTDC_LAYER(hltdc, LayerIdx)->WHPCR &= ~(LTDC_LxWHPCR_WHSTPOS | LTDC_LxWHPCR_WHSPPOS);
 800b916:	f102 0684 	add.w	r6, r2, #132	; 0x84
 800b91a:	eb09 0c06 	add.w	ip, r9, r6
  tmp = ((pLayerCfg->WindowX1 + ((hltdc->Instance->BPCR & LTDC_BPCR_AHBP) >> 16U)) << 16U);
 800b91e:	f8d9 300c 	ldr.w	r3, [r9, #12]
 800b922:	f3c3 4a0b 	ubfx	sl, r3, #16, #12
  LTDC_LAYER(hltdc, LayerIdx)->WHPCR &= ~(LTDC_LxWHPCR_WHSTPOS | LTDC_LxWHPCR_WHSPPOS);
 800b926:	f8dc 3004 	ldr.w	r3, [ip, #4]
{
 800b92a:	b083      	sub	sp, #12
  LTDC_LAYER(hltdc, LayerIdx)->WHPCR &= ~(LTDC_LxWHPCR_WHSTPOS | LTDC_LxWHPCR_WHSPPOS);
 800b92c:	f403 4370 	and.w	r3, r3, #61440	; 0xf000
  hltdc->LayerCfg[LayerIdx] = *pLayerCfg;
 800b930:	460c      	mov	r4, r1
 800b932:	460d      	mov	r5, r1
  LTDC_LAYER(hltdc, LayerIdx)->WHPCR &= ~(LTDC_LxWHPCR_WHSTPOS | LTDC_LxWHPCR_WHSPPOS);
 800b934:	9301      	str	r3, [sp, #4]
 800b936:	4680      	mov	r8, r0
  hltdc->LayerCfg[LayerIdx] = *pLayerCfg;
 800b938:	cc0f      	ldmia	r4!, {r0, r1, r2, r3}
 800b93a:	f10e 0e38 	add.w	lr, lr, #56	; 0x38
 800b93e:	e8ae 000f 	stmia.w	lr!, {r0, r1, r2, r3}
 800b942:	cc0f      	ldmia	r4!, {r0, r1, r2, r3}
  tmp = ((pLayerCfg->WindowX1 + ((hltdc->Instance->BPCR & LTDC_BPCR_AHBP) >> 16U)) << 16U);
 800b944:	686f      	ldr	r7, [r5, #4]
  hltdc->LayerCfg[LayerIdx] = *pLayerCfg;
 800b946:	e8ae 000f 	stmia.w	lr!, {r0, r1, r2, r3}
 800b94a:	cc0f      	ldmia	r4!, {r0, r1, r2, r3}
 800b94c:	e8ae 000f 	stmia.w	lr!, {r0, r1, r2, r3}
 800b950:	6823      	ldr	r3, [r4, #0]
 800b952:	f8ce 3000 	str.w	r3, [lr]
  LTDC_LAYER(hltdc, LayerIdx)->WHPCR &= ~(LTDC_LxWHPCR_WHSTPOS | LTDC_LxWHPCR_WHSPPOS);
 800b956:	9b01      	ldr	r3, [sp, #4]
 800b958:	f8cc 3004 	str.w	r3, [ip, #4]
  LTDC_LAYER(hltdc, LayerIdx)->WHPCR = ((pLayerCfg->WindowX0 + \
                                         ((hltdc->Instance->BPCR & LTDC_BPCR_AHBP) >> 16U) + 1U) | tmp);
 800b95c:	f8d9 300c 	ldr.w	r3, [r9, #12]
  LTDC_LAYER(hltdc, LayerIdx)->WHPCR = ((pLayerCfg->WindowX0 + \
 800b960:	682a      	ldr	r2, [r5, #0]

  /* Configure the vertical start and stop position */
  tmp = ((pLayerCfg->WindowY1 + (hltdc->Instance->BPCR & LTDC_BPCR_AVBP)) << 16U);
 800b962:	68e8      	ldr	r0, [r5, #12]
  LTDC_LAYER(hltdc, LayerIdx)->PFCR = (pLayerCfg->PixelFormat);

  /* Configure the default color values */
  tmp = ((uint32_t)(pLayerCfg->Backcolor.Green) << 8U);
  tmp1 = ((uint32_t)(pLayerCfg->Backcolor.Red) << 16U);
  tmp2 = (pLayerCfg->Alpha0 << 24U);
 800b964:	f8d5 e018 	ldr.w	lr, [r5, #24]
                                         ((hltdc->Instance->BPCR & LTDC_BPCR_AHBP) >> 16U) + 1U) | tmp);
 800b968:	1c51      	adds	r1, r2, #1
 800b96a:	f3c3 430b 	ubfx	r3, r3, #16, #12
 800b96e:	440b      	add	r3, r1
  tmp = ((pLayerCfg->WindowX1 + ((hltdc->Instance->BPCR & LTDC_BPCR_AHBP) >> 16U)) << 16U);
 800b970:	44ba      	add	sl, r7
                                         ((hltdc->Instance->BPCR & LTDC_BPCR_AHBP) >> 16U) + 1U) | tmp);
 800b972:	ea43 430a 	orr.w	r3, r3, sl, lsl #16
  LTDC_LAYER(hltdc, LayerIdx)->WHPCR = ((pLayerCfg->WindowX0 + \
 800b976:	f8cc 3004 	str.w	r3, [ip, #4]
  tmp = ((pLayerCfg->WindowY1 + (hltdc->Instance->BPCR & LTDC_BPCR_AVBP)) << 16U);
 800b97a:	f8d9 100c 	ldr.w	r1, [r9, #12]
  LTDC_LAYER(hltdc, LayerIdx)->WVPCR &= ~(LTDC_LxWVPCR_WVSTPOS | LTDC_LxWVPCR_WVSPPOS);
 800b97e:	f8dc 3008 	ldr.w	r3, [ip, #8]
 800b982:	f403 4370 	and.w	r3, r3, #61440	; 0xf000
 800b986:	f8cc 3008 	str.w	r3, [ip, #8]
  tmp = ((pLayerCfg->WindowY1 + (hltdc->Instance->BPCR & LTDC_BPCR_AVBP)) << 16U);
 800b98a:	f3c1 010a 	ubfx	r1, r1, #0, #11
  LTDC_LAYER(hltdc, LayerIdx)->WVPCR  = ((pLayerCfg->WindowY0 + (hltdc->Instance->BPCR & LTDC_BPCR_AVBP) + 1U) | tmp);
 800b98e:	68ab      	ldr	r3, [r5, #8]
  tmp = ((pLayerCfg->WindowY1 + (hltdc->Instance->BPCR & LTDC_BPCR_AVBP)) << 16U);
 800b990:	4401      	add	r1, r0
  LTDC_LAYER(hltdc, LayerIdx)->WVPCR  = ((pLayerCfg->WindowY0 + (hltdc->Instance->BPCR & LTDC_BPCR_AVBP) + 1U) | tmp);
 800b992:	f8d9 000c 	ldr.w	r0, [r9, #12]
 800b996:	3301      	adds	r3, #1
 800b998:	f3c0 000a 	ubfx	r0, r0, #0, #11
 800b99c:	4403      	add	r3, r0
 800b99e:	ea43 4301 	orr.w	r3, r3, r1, lsl #16
 800b9a2:	f8cc 3008 	str.w	r3, [ip, #8]
  LTDC_LAYER(hltdc, LayerIdx)->PFCR &= ~(LTDC_LxPFCR_PF);
 800b9a6:	f8dc 3010 	ldr.w	r3, [ip, #16]
  LTDC_LAYER(hltdc, LayerIdx)->PFCR = (pLayerCfg->PixelFormat);
 800b9aa:	6929      	ldr	r1, [r5, #16]
  LTDC_LAYER(hltdc, LayerIdx)->PFCR &= ~(LTDC_LxPFCR_PF);
 800b9ac:	f023 0307 	bic.w	r3, r3, #7
 800b9b0:	f8cc 3010 	str.w	r3, [ip, #16]
  LTDC_LAYER(hltdc, LayerIdx)->DCCR &= ~(LTDC_LxDCCR_DCBLUE | LTDC_LxDCCR_DCGREEN | LTDC_LxDCCR_DCRED |
 800b9b4:	f04f 0b00 	mov.w	fp, #0
  LTDC_LAYER(hltdc, LayerIdx)->PFCR = (pLayerCfg->PixelFormat);
 800b9b8:	f8cc 1010 	str.w	r1, [ip, #16]
  LTDC_LAYER(hltdc, LayerIdx)->DCCR &= ~(LTDC_LxDCCR_DCBLUE | LTDC_LxDCCR_DCGREEN | LTDC_LxDCCR_DCRED |
 800b9bc:	f8dc 3018 	ldr.w	r3, [ip, #24]
  tmp1 = ((uint32_t)(pLayerCfg->Backcolor.Red) << 16U);
 800b9c0:	f895 0032 	ldrb.w	r0, [r5, #50]	; 0x32
  tmp = ((uint32_t)(pLayerCfg->Backcolor.Green) << 8U);
 800b9c4:	f895 4031 	ldrb.w	r4, [r5, #49]	; 0x31
  LTDC_LAYER(hltdc, LayerIdx)->DCCR &= ~(LTDC_LxDCCR_DCBLUE | LTDC_LxDCCR_DCGREEN | LTDC_LxDCCR_DCRED |
 800b9c8:	f8cc b018 	str.w	fp, [ip, #24]
                                         LTDC_LxDCCR_DCALPHA);
  LTDC_LAYER(hltdc, LayerIdx)->DCCR = (pLayerCfg->Backcolor.Blue | tmp | tmp1 | tmp2);
 800b9cc:	f895 3030 	ldrb.w	r3, [r5, #48]	; 0x30
 800b9d0:	ea43 630e 	orr.w	r3, r3, lr, lsl #24
 800b9d4:	ea43 2304 	orr.w	r3, r3, r4, lsl #8
 800b9d8:	ea43 4300 	orr.w	r3, r3, r0, lsl #16
 800b9dc:	f8cc 3018 	str.w	r3, [ip, #24]

  /* Specifies the constant alpha value */
  LTDC_LAYER(hltdc, LayerIdx)->CACR &= ~(LTDC_LxCACR_CONSTA);
 800b9e0:	f8dc 3014 	ldr.w	r3, [ip, #20]
 800b9e4:	f023 03ff 	bic.w	r3, r3, #255	; 0xff
 800b9e8:	f8cc 3014 	str.w	r3, [ip, #20]
  LTDC_LAYER(hltdc, LayerIdx)->CACR = (pLayerCfg->Alpha);
 800b9ec:	696b      	ldr	r3, [r5, #20]
 800b9ee:	f8cc 3014 	str.w	r3, [ip, #20]

  /* Specifies the blending factors */
  LTDC_LAYER(hltdc, LayerIdx)->BFCR &= ~(LTDC_LxBFCR_BF2 | LTDC_LxBFCR_BF1);
 800b9f2:	f8dc 301c 	ldr.w	r3, [ip, #28]
 800b9f6:	f423 63e0 	bic.w	r3, r3, #1792	; 0x700
 800b9fa:	f023 0307 	bic.w	r3, r3, #7
 800b9fe:	f8cc 301c 	str.w	r3, [ip, #28]
  LTDC_LAYER(hltdc, LayerIdx)->BFCR = (pLayerCfg->BlendingFactor1 | pLayerCfg->BlendingFactor2);
 800ba02:	e9d5 3007 	ldrd	r3, r0, [r5, #28]
 800ba06:	4303      	orrs	r3, r0
 800ba08:	f8cc 301c 	str.w	r3, [ip, #28]

  /* Configure the color frame buffer start address */
  LTDC_LAYER(hltdc, LayerIdx)->CFBAR &= ~(LTDC_LxCFBAR_CFBADD);
 800ba0c:	f8dc 3028 	ldr.w	r3, [ip, #40]	; 0x28
  LTDC_LAYER(hltdc, LayerIdx)->CFBAR = (pLayerCfg->FBStartAdress);
 800ba10:	6a6b      	ldr	r3, [r5, #36]	; 0x24
  LTDC_LAYER(hltdc, LayerIdx)->CFBAR &= ~(LTDC_LxCFBAR_CFBADD);
 800ba12:	f8cc b028 	str.w	fp, [ip, #40]	; 0x28
  LTDC_LAYER(hltdc, LayerIdx)->CFBAR = (pLayerCfg->FBStartAdress);
 800ba16:	f8cc 3028 	str.w	r3, [ip, #40]	; 0x28

  if (pLayerCfg->PixelFormat == LTDC_PIXEL_FORMAT_ARGB8888)
 800ba1a:	bb69      	cbnz	r1, 800ba78 <HAL_LTDC_ConfigLayer+0x184>
  {
    tmp = 4U;
 800ba1c:	2304      	movs	r3, #4
  }

  /* Configure the color frame buffer pitch in byte */
  LTDC_LAYER(hltdc, LayerIdx)->CFBLR  &= ~(LTDC_LxCFBLR_CFBLL | LTDC_LxCFBLR_CFBP);
  LTDC_LAYER(hltdc, LayerIdx)->CFBLR  = (((pLayerCfg->ImageWidth * tmp) << 16U) | \
                                         (((pLayerCfg->WindowX1 - pLayerCfg->WindowX0) * tmp)  + 3U));
 800ba1e:	1abf      	subs	r7, r7, r2
  LTDC_LAYER(hltdc, LayerIdx)->CFBLR  = (((pLayerCfg->ImageWidth * tmp) << 16U) | \
 800ba20:	6aaa      	ldr	r2, [r5, #40]	; 0x28
                                         (((pLayerCfg->WindowX1 - pLayerCfg->WindowX0) * tmp)  + 3U));
 800ba22:	fb03 f707 	mul.w	r7, r3, r7
 800ba26:	3703      	adds	r7, #3
  LTDC_LAYER(hltdc, LayerIdx)->CFBLR  = (((pLayerCfg->ImageWidth * tmp) << 16U) | \
 800ba28:	fb02 f303 	mul.w	r3, r2, r3
 800ba2c:	ea47 4703 	orr.w	r7, r7, r3, lsl #16
  LTDC_LAYER(hltdc, LayerIdx)->CFBLR  &= ~(LTDC_LxCFBLR_CFBLL | LTDC_LxCFBLR_CFBP);
 800ba30:	f8dc 302c 	ldr.w	r3, [ip, #44]	; 0x2c
  /* Configure the frame buffer line number */
  LTDC_LAYER(hltdc, LayerIdx)->CFBLNR  &= ~(LTDC_LxCFBLNR_CFBLNBR);
  LTDC_LAYER(hltdc, LayerIdx)->CFBLNR  = (pLayerCfg->ImageHeight);
 800ba34:	6aea      	ldr	r2, [r5, #44]	; 0x2c
  LTDC_LAYER(hltdc, LayerIdx)->CFBLR  &= ~(LTDC_LxCFBLR_CFBLL | LTDC_LxCFBLR_CFBP);
 800ba36:	f003 23e0 	and.w	r3, r3, #3758153728	; 0xe000e000
 800ba3a:	f8cc 302c 	str.w	r3, [ip, #44]	; 0x2c
  LTDC_LAYER(hltdc, LayerIdx)->CFBLR  = (((pLayerCfg->ImageWidth * tmp) << 16U) | \
 800ba3e:	f8cc 702c 	str.w	r7, [ip, #44]	; 0x2c
  LTDC_LAYER(hltdc, LayerIdx)->CFBLNR  &= ~(LTDC_LxCFBLNR_CFBLNBR);
 800ba42:	f8dc 3030 	ldr.w	r3, [ip, #48]	; 0x30
 800ba46:	f423 63ff 	bic.w	r3, r3, #2040	; 0x7f8
 800ba4a:	f023 0307 	bic.w	r3, r3, #7
 800ba4e:	f8cc 3030 	str.w	r3, [ip, #48]	; 0x30
  LTDC_LAYER(hltdc, LayerIdx)->CFBLNR  = (pLayerCfg->ImageHeight);
 800ba52:	f8cc 2030 	str.w	r2, [ip, #48]	; 0x30

  /* Enable LTDC_Layer by setting LEN bit */
  LTDC_LAYER(hltdc, LayerIdx)->CR |= (uint32_t)LTDC_LxCR_LEN;
 800ba56:	f859 3006 	ldr.w	r3, [r9, r6]
  hltdc->Instance->SRCR = LTDC_SRCR_IMR;
 800ba5a:	2201      	movs	r2, #1
  LTDC_LAYER(hltdc, LayerIdx)->CR |= (uint32_t)LTDC_LxCR_LEN;
 800ba5c:	4313      	orrs	r3, r2
 800ba5e:	f849 3006 	str.w	r3, [r9, r6]
  __HAL_UNLOCK(hltdc);
 800ba62:	2300      	movs	r3, #0
  return HAL_OK;
 800ba64:	4618      	mov	r0, r3
  hltdc->Instance->SRCR = LTDC_SRCR_IMR;
 800ba66:	f8c9 2024 	str.w	r2, [r9, #36]	; 0x24
  hltdc->State  = HAL_LTDC_STATE_READY;
 800ba6a:	f888 20a1 	strb.w	r2, [r8, #161]	; 0xa1
  __HAL_UNLOCK(hltdc);
 800ba6e:	f888 30a0 	strb.w	r3, [r8, #160]	; 0xa0
}
 800ba72:	b003      	add	sp, #12
 800ba74:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
  else if (pLayerCfg->PixelFormat == LTDC_PIXEL_FORMAT_RGB888)
 800ba78:	3901      	subs	r1, #1
 800ba7a:	2906      	cmp	r1, #6
 800ba7c:	d903      	bls.n	800ba86 <HAL_LTDC_ConfigLayer+0x192>
  if (pLayerCfg->PixelFormat == LTDC_PIXEL_FORMAT_ARGB8888)
 800ba7e:	2301      	movs	r3, #1
 800ba80:	e7cd      	b.n	800ba1e <HAL_LTDC_ConfigLayer+0x12a>
  __HAL_LOCK(hltdc);
 800ba82:	2002      	movs	r0, #2
}
 800ba84:	4770      	bx	lr
 800ba86:	4b02      	ldr	r3, [pc, #8]	; (800ba90 <HAL_LTDC_ConfigLayer+0x19c>)
 800ba88:	f853 3021 	ldr.w	r3, [r3, r1, lsl #2]
 800ba8c:	e7c7      	b.n	800ba1e <HAL_LTDC_ConfigLayer+0x12a>
 800ba8e:	bf00      	nop
 800ba90:	0802ee18 	.word	0x0802ee18

0800ba94 <HAL_LTDC_ProgramLineEvent>:
  __HAL_LOCK(hltdc);
 800ba94:	f890 30a0 	ldrb.w	r3, [r0, #160]	; 0xa0
 800ba98:	2b01      	cmp	r3, #1
 800ba9a:	d019      	beq.n	800bad0 <HAL_LTDC_ProgramLineEvent+0x3c>
  __HAL_LTDC_DISABLE_IT(hltdc, LTDC_IT_LI);
 800ba9c:	6802      	ldr	r2, [r0, #0]
  hltdc->State = HAL_LTDC_STATE_BUSY;
 800ba9e:	2302      	movs	r3, #2
{
 800baa0:	b410      	push	{r4}
  hltdc->State = HAL_LTDC_STATE_BUSY;
 800baa2:	f880 30a1 	strb.w	r3, [r0, #161]	; 0xa1
  __HAL_LTDC_DISABLE_IT(hltdc, LTDC_IT_LI);
 800baa6:	6b53      	ldr	r3, [r2, #52]	; 0x34
  LTDC->LIPCR = (uint32_t)Line;
 800baa8:	4c0a      	ldr	r4, [pc, #40]	; (800bad4 <HAL_LTDC_ProgramLineEvent+0x40>)
  __HAL_LTDC_DISABLE_IT(hltdc, LTDC_IT_LI);
 800baaa:	f023 0301 	bic.w	r3, r3, #1
 800baae:	6353      	str	r3, [r2, #52]	; 0x34
  LTDC->LIPCR = (uint32_t)Line;
 800bab0:	6421      	str	r1, [r4, #64]	; 0x40
  __HAL_LTDC_ENABLE_IT(hltdc, LTDC_IT_LI);
 800bab2:	6b51      	ldr	r1, [r2, #52]	; 0x34
  __HAL_UNLOCK(hltdc);
 800bab4:	2300      	movs	r3, #0
  __HAL_LTDC_ENABLE_IT(hltdc, LTDC_IT_LI);
 800bab6:	f041 0101 	orr.w	r1, r1, #1
  hltdc->State = HAL_LTDC_STATE_READY;
 800baba:	f04f 0c01 	mov.w	ip, #1
  __HAL_LTDC_ENABLE_IT(hltdc, LTDC_IT_LI);
 800babe:	6351      	str	r1, [r2, #52]	; 0x34
  hltdc->State = HAL_LTDC_STATE_READY;
 800bac0:	f880 c0a1 	strb.w	ip, [r0, #161]	; 0xa1
  __HAL_UNLOCK(hltdc);
 800bac4:	f880 30a0 	strb.w	r3, [r0, #160]	; 0xa0
}
 800bac8:	f85d 4b04 	ldr.w	r4, [sp], #4
  return HAL_OK;
 800bacc:	4618      	mov	r0, r3
}
 800bace:	4770      	bx	lr
  __HAL_LOCK(hltdc);
 800bad0:	2002      	movs	r0, #2
}
 800bad2:	4770      	bx	lr
 800bad4:	40016800 	.word	0x40016800

0800bad8 <HAL_RCC_OscConfig>:
__weak HAL_StatusTypeDef HAL_RCC_OscConfig(RCC_OscInitTypeDef  *RCC_OscInitStruct)
{
  uint32_t tickstart, pll_config;

  /* Check Null pointer */
  if(RCC_OscInitStruct == NULL)
 800bad8:	2800      	cmp	r0, #0
 800bada:	f000 81a2 	beq.w	800be22 <HAL_RCC_OscConfig+0x34a>
{
 800bade:	e92d 41f0 	stmdb	sp!, {r4, r5, r6, r7, r8, lr}
  }

  /* Check the parameters */
  assert_param(IS_RCC_OSCILLATORTYPE(RCC_OscInitStruct->OscillatorType));
  /*------------------------------- HSE Configuration ------------------------*/
  if(((RCC_OscInitStruct->OscillatorType) & RCC_OSCILLATORTYPE_HSE) == RCC_OSCILLATORTYPE_HSE)
 800bae2:	6803      	ldr	r3, [r0, #0]
 800bae4:	07dd      	lsls	r5, r3, #31
{
 800bae6:	b082      	sub	sp, #8
 800bae8:	4604      	mov	r4, r0
  if(((RCC_OscInitStruct->OscillatorType) & RCC_OSCILLATORTYPE_HSE) == RCC_OSCILLATORTYPE_HSE)
 800baea:	d52f      	bpl.n	800bb4c <HAL_RCC_OscConfig+0x74>
  {
    /* Check the parameters */
    assert_param(IS_RCC_HSE(RCC_OscInitStruct->HSEState));
    /* When the HSE is used as system clock or clock source for PLL in these cases HSE will not disabled */
    if((__HAL_RCC_GET_SYSCLK_SOURCE() == RCC_CFGR_SWS_HSE) ||\
 800baec:	499e      	ldr	r1, [pc, #632]	; (800bd68 <HAL_RCC_OscConfig+0x290>)
 800baee:	688a      	ldr	r2, [r1, #8]
 800baf0:	f002 020c 	and.w	r2, r2, #12
 800baf4:	2a04      	cmp	r2, #4
 800baf6:	f000 80ed 	beq.w	800bcd4 <HAL_RCC_OscConfig+0x1fc>
      ((__HAL_RCC_GET_SYSCLK_SOURCE() == RCC_CFGR_SWS_PLL) && ((RCC->PLLCFGR & RCC_PLLCFGR_PLLSRC) == RCC_PLLCFGR_PLLSRC_HSE)))
 800bafa:	688a      	ldr	r2, [r1, #8]
 800bafc:	f002 020c 	and.w	r2, r2, #12
    if((__HAL_RCC_GET_SYSCLK_SOURCE() == RCC_CFGR_SWS_HSE) ||\
 800bb00:	2a08      	cmp	r2, #8
 800bb02:	f000 80e3 	beq.w	800bccc <HAL_RCC_OscConfig+0x1f4>
      }
    }
    else
    {
      /* Set the new HSE configuration ---------------------------------------*/
      __HAL_RCC_HSE_CONFIG(RCC_OscInitStruct->HSEState);
 800bb06:	6863      	ldr	r3, [r4, #4]
 800bb08:	f5b3 3f80 	cmp.w	r3, #65536	; 0x10000
 800bb0c:	f000 80ec 	beq.w	800bce8 <HAL_RCC_OscConfig+0x210>
 800bb10:	f5b3 2fa0 	cmp.w	r3, #327680	; 0x50000
 800bb14:	f000 8175 	beq.w	800be02 <HAL_RCC_OscConfig+0x32a>
 800bb18:	4d93      	ldr	r5, [pc, #588]	; (800bd68 <HAL_RCC_OscConfig+0x290>)
 800bb1a:	682a      	ldr	r2, [r5, #0]
 800bb1c:	f422 3280 	bic.w	r2, r2, #65536	; 0x10000
 800bb20:	602a      	str	r2, [r5, #0]
 800bb22:	682a      	ldr	r2, [r5, #0]
 800bb24:	f422 2280 	bic.w	r2, r2, #262144	; 0x40000
 800bb28:	602a      	str	r2, [r5, #0]

      /* Check the HSE State */
      if((RCC_OscInitStruct->HSEState) != RCC_HSE_OFF)
 800bb2a:	2b00      	cmp	r3, #0
 800bb2c:	f040 80e1 	bne.w	800bcf2 <HAL_RCC_OscConfig+0x21a>
        }
      }
      else
      {
        /* Get Start Tick */
        tickstart = HAL_GetTick();
 800bb30:	f7fd fdb8 	bl	80096a4 <HAL_GetTick>
 800bb34:	4606      	mov	r6, r0

        /* Wait till HSE is bypassed or disabled */
        while(__HAL_RCC_GET_FLAG(RCC_FLAG_HSERDY) != RESET)
 800bb36:	e005      	b.n	800bb44 <HAL_RCC_OscConfig+0x6c>
        {
          if((HAL_GetTick() - tickstart ) > HSE_TIMEOUT_VALUE)
 800bb38:	f7fd fdb4 	bl	80096a4 <HAL_GetTick>
 800bb3c:	1b80      	subs	r0, r0, r6
 800bb3e:	2864      	cmp	r0, #100	; 0x64
 800bb40:	f200 8101 	bhi.w	800bd46 <HAL_RCC_OscConfig+0x26e>
        while(__HAL_RCC_GET_FLAG(RCC_FLAG_HSERDY) != RESET)
 800bb44:	682b      	ldr	r3, [r5, #0]
 800bb46:	039b      	lsls	r3, r3, #14
 800bb48:	d4f6      	bmi.n	800bb38 <HAL_RCC_OscConfig+0x60>
        }
      }
    }
  }
  /*----------------------------- HSI Configuration --------------------------*/
  if(((RCC_OscInitStruct->OscillatorType) & RCC_OSCILLATORTYPE_HSI) == RCC_OSCILLATORTYPE_HSI)
 800bb4a:	6823      	ldr	r3, [r4, #0]
 800bb4c:	079f      	lsls	r7, r3, #30
 800bb4e:	d528      	bpl.n	800bba2 <HAL_RCC_OscConfig+0xca>
    /* Check the parameters */
    assert_param(IS_RCC_HSI(RCC_OscInitStruct->HSIState));
    assert_param(IS_RCC_CALIBRATION_VALUE(RCC_OscInitStruct->HSICalibrationValue));

    /* Check if HSI is used as system clock or as PLL source when PLL is selected as system clock */
    if((__HAL_RCC_GET_SYSCLK_SOURCE() == RCC_CFGR_SWS_HSI) ||\
 800bb50:	4a85      	ldr	r2, [pc, #532]	; (800bd68 <HAL_RCC_OscConfig+0x290>)
 800bb52:	6891      	ldr	r1, [r2, #8]
 800bb54:	f011 0f0c 	tst.w	r1, #12
 800bb58:	f000 8090 	beq.w	800bc7c <HAL_RCC_OscConfig+0x1a4>
      ((__HAL_RCC_GET_SYSCLK_SOURCE() == RCC_CFGR_SWS_PLL) && ((RCC->PLLCFGR & RCC_PLLCFGR_PLLSRC) == RCC_PLLCFGR_PLLSRC_HSI)))
 800bb5c:	6891      	ldr	r1, [r2, #8]
 800bb5e:	f001 010c 	and.w	r1, r1, #12
    if((__HAL_RCC_GET_SYSCLK_SOURCE() == RCC_CFGR_SWS_HSI) ||\
 800bb62:	2908      	cmp	r1, #8
 800bb64:	f000 8086 	beq.w	800bc74 <HAL_RCC_OscConfig+0x19c>
      }
    }
    else
    {
      /* Check the HSI State */
      if((RCC_OscInitStruct->HSIState)!= RCC_HSI_OFF)
 800bb68:	68e3      	ldr	r3, [r4, #12]
 800bb6a:	2b00      	cmp	r3, #0
 800bb6c:	f000 810e 	beq.w	800bd8c <HAL_RCC_OscConfig+0x2b4>
      {
        /* Enable the Internal High Speed oscillator (HSI). */
        __HAL_RCC_HSI_ENABLE();
 800bb70:	4b7e      	ldr	r3, [pc, #504]	; (800bd6c <HAL_RCC_OscConfig+0x294>)

        /* Get Start Tick*/
        tickstart = HAL_GetTick();

        /* Wait till HSI is ready */
        while(__HAL_RCC_GET_FLAG(RCC_FLAG_HSIRDY) == RESET)
 800bb72:	4e7d      	ldr	r6, [pc, #500]	; (800bd68 <HAL_RCC_OscConfig+0x290>)
        __HAL_RCC_HSI_ENABLE();
 800bb74:	2201      	movs	r2, #1
 800bb76:	601a      	str	r2, [r3, #0]
        tickstart = HAL_GetTick();
 800bb78:	f7fd fd94 	bl	80096a4 <HAL_GetTick>
 800bb7c:	4605      	mov	r5, r0
        while(__HAL_RCC_GET_FLAG(RCC_FLAG_HSIRDY) == RESET)
 800bb7e:	e005      	b.n	800bb8c <HAL_RCC_OscConfig+0xb4>
        {
          if((HAL_GetTick() - tickstart ) > HSI_TIMEOUT_VALUE)
 800bb80:	f7fd fd90 	bl	80096a4 <HAL_GetTick>
 800bb84:	1b40      	subs	r0, r0, r5
 800bb86:	2802      	cmp	r0, #2
 800bb88:	f200 80dd 	bhi.w	800bd46 <HAL_RCC_OscConfig+0x26e>
        while(__HAL_RCC_GET_FLAG(RCC_FLAG_HSIRDY) == RESET)
 800bb8c:	6833      	ldr	r3, [r6, #0]
 800bb8e:	0798      	lsls	r0, r3, #30
 800bb90:	d5f6      	bpl.n	800bb80 <HAL_RCC_OscConfig+0xa8>
            return HAL_TIMEOUT;
          }
        }

        /* Adjusts the Internal High Speed oscillator (HSI) calibration value. */
        __HAL_RCC_HSI_CALIBRATIONVALUE_ADJUST(RCC_OscInitStruct->HSICalibrationValue);
 800bb92:	6833      	ldr	r3, [r6, #0]
 800bb94:	6922      	ldr	r2, [r4, #16]
 800bb96:	f023 03f8 	bic.w	r3, r3, #248	; 0xf8
 800bb9a:	ea43 03c2 	orr.w	r3, r3, r2, lsl #3
 800bb9e:	6033      	str	r3, [r6, #0]
        }
      }
    }
  }
  /*------------------------------ LSI Configuration -------------------------*/
  if(((RCC_OscInitStruct->OscillatorType) & RCC_OSCILLATORTYPE_LSI) == RCC_OSCILLATORTYPE_LSI)
 800bba0:	6823      	ldr	r3, [r4, #0]
 800bba2:	071a      	lsls	r2, r3, #28
 800bba4:	d451      	bmi.n	800bc4a <HAL_RCC_OscConfig+0x172>
        }
      }
    }
  }
  /*------------------------------ LSE Configuration -------------------------*/
  if(((RCC_OscInitStruct->OscillatorType) & RCC_OSCILLATORTYPE_LSE) == RCC_OSCILLATORTYPE_LSE)
 800bba6:	0758      	lsls	r0, r3, #29
 800bba8:	d52f      	bpl.n	800bc0a <HAL_RCC_OscConfig+0x132>
    /* Check the parameters */
    assert_param(IS_RCC_LSE(RCC_OscInitStruct->LSEState));

    /* Update LSE configuration in Backup Domain control register    */
    /* Requires to enable write access to Backup Domain of necessary */
    if(__HAL_RCC_PWR_IS_CLK_DISABLED())
 800bbaa:	4a6f      	ldr	r2, [pc, #444]	; (800bd68 <HAL_RCC_OscConfig+0x290>)
 800bbac:	6c13      	ldr	r3, [r2, #64]	; 0x40
 800bbae:	f013 5380 	ands.w	r3, r3, #268435456	; 0x10000000
 800bbb2:	d07f      	beq.n	800bcb4 <HAL_RCC_OscConfig+0x1dc>
    FlagStatus       pwrclkchanged = RESET;
 800bbb4:	2500      	movs	r5, #0
    {
      __HAL_RCC_PWR_CLK_ENABLE();
      pwrclkchanged = SET;
    }

    if(HAL_IS_BIT_CLR(PWR->CR, PWR_CR_DBP))
 800bbb6:	4e6e      	ldr	r6, [pc, #440]	; (800bd70 <HAL_RCC_OscConfig+0x298>)
 800bbb8:	6833      	ldr	r3, [r6, #0]
 800bbba:	05d9      	lsls	r1, r3, #23
 800bbbc:	f140 80b3 	bpl.w	800bd26 <HAL_RCC_OscConfig+0x24e>
        }
      }
    }

    /* Set the new LSE configuration -----------------------------------------*/
    __HAL_RCC_LSE_CONFIG(RCC_OscInitStruct->LSEState);
 800bbc0:	68a3      	ldr	r3, [r4, #8]
 800bbc2:	2b01      	cmp	r3, #1
 800bbc4:	f000 80c3 	beq.w	800bd4e <HAL_RCC_OscConfig+0x276>
 800bbc8:	2b05      	cmp	r3, #5
 800bbca:	f000 812c 	beq.w	800be26 <HAL_RCC_OscConfig+0x34e>
 800bbce:	4e66      	ldr	r6, [pc, #408]	; (800bd68 <HAL_RCC_OscConfig+0x290>)
 800bbd0:	6f32      	ldr	r2, [r6, #112]	; 0x70
 800bbd2:	f022 0201 	bic.w	r2, r2, #1
 800bbd6:	6732      	str	r2, [r6, #112]	; 0x70
 800bbd8:	6f32      	ldr	r2, [r6, #112]	; 0x70
 800bbda:	f022 0204 	bic.w	r2, r2, #4
 800bbde:	6732      	str	r2, [r6, #112]	; 0x70
    /* Check the LSE State */
    if((RCC_OscInitStruct->LSEState) != RCC_LSE_OFF)
 800bbe0:	2b00      	cmp	r3, #0
 800bbe2:	f040 80b9 	bne.w	800bd58 <HAL_RCC_OscConfig+0x280>
      }
    }
    else
    {
      /* Get Start Tick */
      tickstart = HAL_GetTick();
 800bbe6:	f7fd fd5d 	bl	80096a4 <HAL_GetTick>

      /* Wait till LSE is ready */
      while(__HAL_RCC_GET_FLAG(RCC_FLAG_LSERDY) != RESET)
      {
        if((HAL_GetTick() - tickstart ) > RCC_LSE_TIMEOUT_VALUE)
 800bbea:	f241 3888 	movw	r8, #5000	; 0x1388
      tickstart = HAL_GetTick();
 800bbee:	4607      	mov	r7, r0
      while(__HAL_RCC_GET_FLAG(RCC_FLAG_LSERDY) != RESET)
 800bbf0:	e005      	b.n	800bbfe <HAL_RCC_OscConfig+0x126>
        if((HAL_GetTick() - tickstart ) > RCC_LSE_TIMEOUT_VALUE)
 800bbf2:	f7fd fd57 	bl	80096a4 <HAL_GetTick>
 800bbf6:	1bc0      	subs	r0, r0, r7
 800bbf8:	4540      	cmp	r0, r8
 800bbfa:	f200 80a4 	bhi.w	800bd46 <HAL_RCC_OscConfig+0x26e>
      while(__HAL_RCC_GET_FLAG(RCC_FLAG_LSERDY) != RESET)
 800bbfe:	6f33      	ldr	r3, [r6, #112]	; 0x70
 800bc00:	0798      	lsls	r0, r3, #30
 800bc02:	d4f6      	bmi.n	800bbf2 <HAL_RCC_OscConfig+0x11a>
        }
      }
    }

    /* Restore clock configuration if changed */
    if(pwrclkchanged == SET)
 800bc04:	2d00      	cmp	r5, #0
 800bc06:	f040 8106 	bne.w	800be16 <HAL_RCC_OscConfig+0x33e>
    }
  }
  /*-------------------------------- PLL Configuration -----------------------*/
  /* Check the parameters */
  assert_param(IS_RCC_PLL(RCC_OscInitStruct->PLL.PLLState));
  if ((RCC_OscInitStruct->PLL.PLLState) != RCC_PLL_NONE)
 800bc0a:	69a0      	ldr	r0, [r4, #24]
 800bc0c:	b1c8      	cbz	r0, 800bc42 <HAL_RCC_OscConfig+0x16a>
  {
    /* Check if the PLL is used as system clock or not */
    if(__HAL_RCC_GET_SYSCLK_SOURCE() != RCC_CFGR_SWS_PLL)
 800bc0e:	4d56      	ldr	r5, [pc, #344]	; (800bd68 <HAL_RCC_OscConfig+0x290>)
 800bc10:	68ab      	ldr	r3, [r5, #8]
 800bc12:	f003 030c 	and.w	r3, r3, #12
 800bc16:	2b08      	cmp	r3, #8
 800bc18:	f000 80c9 	beq.w	800bdae <HAL_RCC_OscConfig+0x2d6>
        assert_param(IS_RCC_PLLN_VALUE(RCC_OscInitStruct->PLL.PLLN));
        assert_param(IS_RCC_PLLP_VALUE(RCC_OscInitStruct->PLL.PLLP));
        assert_param(IS_RCC_PLLQ_VALUE(RCC_OscInitStruct->PLL.PLLQ));

        /* Disable the main PLL. */
        __HAL_RCC_PLL_DISABLE();
 800bc1c:	4b53      	ldr	r3, [pc, #332]	; (800bd6c <HAL_RCC_OscConfig+0x294>)
 800bc1e:	2200      	movs	r2, #0
      if((RCC_OscInitStruct->PLL.PLLState) == RCC_PLL_ON)
 800bc20:	2802      	cmp	r0, #2
        __HAL_RCC_PLL_DISABLE();
 800bc22:	661a      	str	r2, [r3, #96]	; 0x60
      if((RCC_OscInitStruct->PLL.PLLState) == RCC_PLL_ON)
 800bc24:	f000 8109 	beq.w	800be3a <HAL_RCC_OscConfig+0x362>
      {
        /* Disable the main PLL. */
        __HAL_RCC_PLL_DISABLE();

        /* Get Start Tick */
        tickstart = HAL_GetTick();
 800bc28:	f7fd fd3c 	bl	80096a4 <HAL_GetTick>
 800bc2c:	4604      	mov	r4, r0

        /* Wait till PLL is ready */
        while(__HAL_RCC_GET_FLAG(RCC_FLAG_PLLRDY) != RESET)
 800bc2e:	e005      	b.n	800bc3c <HAL_RCC_OscConfig+0x164>
        {
          if((HAL_GetTick() - tickstart ) > PLL_TIMEOUT_VALUE)
 800bc30:	f7fd fd38 	bl	80096a4 <HAL_GetTick>
 800bc34:	1b00      	subs	r0, r0, r4
 800bc36:	2802      	cmp	r0, #2
 800bc38:	f200 8085 	bhi.w	800bd46 <HAL_RCC_OscConfig+0x26e>
        while(__HAL_RCC_GET_FLAG(RCC_FLAG_PLLRDY) != RESET)
 800bc3c:	682b      	ldr	r3, [r5, #0]
 800bc3e:	019b      	lsls	r3, r3, #6
 800bc40:	d4f6      	bmi.n	800bc30 <HAL_RCC_OscConfig+0x158>
          return HAL_ERROR;
        }
      }
    }
  }
  return HAL_OK;
 800bc42:	2000      	movs	r0, #0
}
 800bc44:	b002      	add	sp, #8
 800bc46:	e8bd 81f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, pc}
    if((RCC_OscInitStruct->LSIState)!= RCC_LSI_OFF)
 800bc4a:	6963      	ldr	r3, [r4, #20]
 800bc4c:	b30b      	cbz	r3, 800bc92 <HAL_RCC_OscConfig+0x1ba>
      __HAL_RCC_LSI_ENABLE();
 800bc4e:	4b47      	ldr	r3, [pc, #284]	; (800bd6c <HAL_RCC_OscConfig+0x294>)
      while(__HAL_RCC_GET_FLAG(RCC_FLAG_LSIRDY) == RESET)
 800bc50:	4e45      	ldr	r6, [pc, #276]	; (800bd68 <HAL_RCC_OscConfig+0x290>)
      __HAL_RCC_LSI_ENABLE();
 800bc52:	2201      	movs	r2, #1
 800bc54:	f8c3 2e80 	str.w	r2, [r3, #3712]	; 0xe80
      tickstart = HAL_GetTick();
 800bc58:	f7fd fd24 	bl	80096a4 <HAL_GetTick>
 800bc5c:	4605      	mov	r5, r0
      while(__HAL_RCC_GET_FLAG(RCC_FLAG_LSIRDY) == RESET)
 800bc5e:	e004      	b.n	800bc6a <HAL_RCC_OscConfig+0x192>
        if((HAL_GetTick() - tickstart ) > LSI_TIMEOUT_VALUE)
 800bc60:	f7fd fd20 	bl	80096a4 <HAL_GetTick>
 800bc64:	1b40      	subs	r0, r0, r5
 800bc66:	2802      	cmp	r0, #2
 800bc68:	d86d      	bhi.n	800bd46 <HAL_RCC_OscConfig+0x26e>
      while(__HAL_RCC_GET_FLAG(RCC_FLAG_LSIRDY) == RESET)
 800bc6a:	6f73      	ldr	r3, [r6, #116]	; 0x74
 800bc6c:	079b      	lsls	r3, r3, #30
 800bc6e:	d5f7      	bpl.n	800bc60 <HAL_RCC_OscConfig+0x188>
  if(((RCC_OscInitStruct->OscillatorType) & RCC_OSCILLATORTYPE_LSE) == RCC_OSCILLATORTYPE_LSE)
 800bc70:	6823      	ldr	r3, [r4, #0]
 800bc72:	e798      	b.n	800bba6 <HAL_RCC_OscConfig+0xce>
      ((__HAL_RCC_GET_SYSCLK_SOURCE() == RCC_CFGR_SWS_PLL) && ((RCC->PLLCFGR & RCC_PLLCFGR_PLLSRC) == RCC_PLLCFGR_PLLSRC_HSI)))
 800bc74:	6852      	ldr	r2, [r2, #4]
 800bc76:	0256      	lsls	r6, r2, #9
 800bc78:	f53f af76 	bmi.w	800bb68 <HAL_RCC_OscConfig+0x90>
      if((__HAL_RCC_GET_FLAG(RCC_FLAG_HSIRDY) != RESET) && (RCC_OscInitStruct->HSIState != RCC_HSI_ON))
 800bc7c:	4a3a      	ldr	r2, [pc, #232]	; (800bd68 <HAL_RCC_OscConfig+0x290>)
 800bc7e:	6812      	ldr	r2, [r2, #0]
 800bc80:	0795      	lsls	r5, r2, #30
 800bc82:	d544      	bpl.n	800bd0e <HAL_RCC_OscConfig+0x236>
 800bc84:	68e2      	ldr	r2, [r4, #12]
 800bc86:	2a01      	cmp	r2, #1
 800bc88:	d041      	beq.n	800bd0e <HAL_RCC_OscConfig+0x236>
        return HAL_ERROR;
 800bc8a:	2001      	movs	r0, #1
}
 800bc8c:	b002      	add	sp, #8
 800bc8e:	e8bd 81f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, pc}
      __HAL_RCC_LSI_DISABLE();
 800bc92:	4a36      	ldr	r2, [pc, #216]	; (800bd6c <HAL_RCC_OscConfig+0x294>)
      while(__HAL_RCC_GET_FLAG(RCC_FLAG_LSIRDY) != RESET)
 800bc94:	4e34      	ldr	r6, [pc, #208]	; (800bd68 <HAL_RCC_OscConfig+0x290>)
      __HAL_RCC_LSI_DISABLE();
 800bc96:	f8c2 3e80 	str.w	r3, [r2, #3712]	; 0xe80
      tickstart = HAL_GetTick();
 800bc9a:	f7fd fd03 	bl	80096a4 <HAL_GetTick>
 800bc9e:	4605      	mov	r5, r0
      while(__HAL_RCC_GET_FLAG(RCC_FLAG_LSIRDY) != RESET)
 800bca0:	e004      	b.n	800bcac <HAL_RCC_OscConfig+0x1d4>
        if((HAL_GetTick() - tickstart ) > LSI_TIMEOUT_VALUE)
 800bca2:	f7fd fcff 	bl	80096a4 <HAL_GetTick>
 800bca6:	1b40      	subs	r0, r0, r5
 800bca8:	2802      	cmp	r0, #2
 800bcaa:	d84c      	bhi.n	800bd46 <HAL_RCC_OscConfig+0x26e>
      while(__HAL_RCC_GET_FLAG(RCC_FLAG_LSIRDY) != RESET)
 800bcac:	6f73      	ldr	r3, [r6, #116]	; 0x74
 800bcae:	079f      	lsls	r7, r3, #30
 800bcb0:	d4f7      	bmi.n	800bca2 <HAL_RCC_OscConfig+0x1ca>
 800bcb2:	e7dd      	b.n	800bc70 <HAL_RCC_OscConfig+0x198>
      __HAL_RCC_PWR_CLK_ENABLE();
 800bcb4:	9301      	str	r3, [sp, #4]
 800bcb6:	6c13      	ldr	r3, [r2, #64]	; 0x40
 800bcb8:	f043 5380 	orr.w	r3, r3, #268435456	; 0x10000000
 800bcbc:	6413      	str	r3, [r2, #64]	; 0x40
 800bcbe:	6c13      	ldr	r3, [r2, #64]	; 0x40
 800bcc0:	f003 5380 	and.w	r3, r3, #268435456	; 0x10000000
 800bcc4:	9301      	str	r3, [sp, #4]
 800bcc6:	9b01      	ldr	r3, [sp, #4]
      pwrclkchanged = SET;
 800bcc8:	2501      	movs	r5, #1
 800bcca:	e774      	b.n	800bbb6 <HAL_RCC_OscConfig+0xde>
      ((__HAL_RCC_GET_SYSCLK_SOURCE() == RCC_CFGR_SWS_PLL) && ((RCC->PLLCFGR & RCC_PLLCFGR_PLLSRC) == RCC_PLLCFGR_PLLSRC_HSE)))
 800bccc:	684a      	ldr	r2, [r1, #4]
 800bcce:	0250      	lsls	r0, r2, #9
 800bcd0:	f57f af19 	bpl.w	800bb06 <HAL_RCC_OscConfig+0x2e>
      if((__HAL_RCC_GET_FLAG(RCC_FLAG_HSERDY) != RESET) && (RCC_OscInitStruct->HSEState == RCC_HSE_OFF))
 800bcd4:	4a24      	ldr	r2, [pc, #144]	; (800bd68 <HAL_RCC_OscConfig+0x290>)
 800bcd6:	6812      	ldr	r2, [r2, #0]
 800bcd8:	0391      	lsls	r1, r2, #14
 800bcda:	f57f af37 	bpl.w	800bb4c <HAL_RCC_OscConfig+0x74>
 800bcde:	6862      	ldr	r2, [r4, #4]
 800bce0:	2a00      	cmp	r2, #0
 800bce2:	f47f af33 	bne.w	800bb4c <HAL_RCC_OscConfig+0x74>
 800bce6:	e7d0      	b.n	800bc8a <HAL_RCC_OscConfig+0x1b2>
      __HAL_RCC_HSE_CONFIG(RCC_OscInitStruct->HSEState);
 800bce8:	4a1f      	ldr	r2, [pc, #124]	; (800bd68 <HAL_RCC_OscConfig+0x290>)
 800bcea:	6813      	ldr	r3, [r2, #0]
 800bcec:	f443 3380 	orr.w	r3, r3, #65536	; 0x10000
 800bcf0:	6013      	str	r3, [r2, #0]
        tickstart = HAL_GetTick();
 800bcf2:	f7fd fcd7 	bl	80096a4 <HAL_GetTick>
        while(__HAL_RCC_GET_FLAG(RCC_FLAG_HSERDY) == RESET)
 800bcf6:	4e1c      	ldr	r6, [pc, #112]	; (800bd68 <HAL_RCC_OscConfig+0x290>)
        tickstart = HAL_GetTick();
 800bcf8:	4605      	mov	r5, r0
        while(__HAL_RCC_GET_FLAG(RCC_FLAG_HSERDY) == RESET)
 800bcfa:	e004      	b.n	800bd06 <HAL_RCC_OscConfig+0x22e>
          if((HAL_GetTick() - tickstart ) > HSE_TIMEOUT_VALUE)
 800bcfc:	f7fd fcd2 	bl	80096a4 <HAL_GetTick>
 800bd00:	1b40      	subs	r0, r0, r5
 800bd02:	2864      	cmp	r0, #100	; 0x64
 800bd04:	d81f      	bhi.n	800bd46 <HAL_RCC_OscConfig+0x26e>
        while(__HAL_RCC_GET_FLAG(RCC_FLAG_HSERDY) == RESET)
 800bd06:	6833      	ldr	r3, [r6, #0]
 800bd08:	039a      	lsls	r2, r3, #14
 800bd0a:	d5f7      	bpl.n	800bcfc <HAL_RCC_OscConfig+0x224>
 800bd0c:	e71d      	b.n	800bb4a <HAL_RCC_OscConfig+0x72>
        __HAL_RCC_HSI_CALIBRATIONVALUE_ADJUST(RCC_OscInitStruct->HSICalibrationValue);
 800bd0e:	4916      	ldr	r1, [pc, #88]	; (800bd68 <HAL_RCC_OscConfig+0x290>)
 800bd10:	6920      	ldr	r0, [r4, #16]
 800bd12:	680a      	ldr	r2, [r1, #0]
 800bd14:	f022 02f8 	bic.w	r2, r2, #248	; 0xf8
 800bd18:	ea42 02c0 	orr.w	r2, r2, r0, lsl #3
 800bd1c:	600a      	str	r2, [r1, #0]
  if(((RCC_OscInitStruct->OscillatorType) & RCC_OSCILLATORTYPE_LSI) == RCC_OSCILLATORTYPE_LSI)
 800bd1e:	071a      	lsls	r2, r3, #28
 800bd20:	f57f af41 	bpl.w	800bba6 <HAL_RCC_OscConfig+0xce>
 800bd24:	e791      	b.n	800bc4a <HAL_RCC_OscConfig+0x172>
      SET_BIT(PWR->CR, PWR_CR_DBP);
 800bd26:	6833      	ldr	r3, [r6, #0]
 800bd28:	f443 7380 	orr.w	r3, r3, #256	; 0x100
 800bd2c:	6033      	str	r3, [r6, #0]
      tickstart = HAL_GetTick();
 800bd2e:	f7fd fcb9 	bl	80096a4 <HAL_GetTick>
 800bd32:	4607      	mov	r7, r0
      while(HAL_IS_BIT_CLR(PWR->CR, PWR_CR_DBP))
 800bd34:	6833      	ldr	r3, [r6, #0]
 800bd36:	05da      	lsls	r2, r3, #23
 800bd38:	f53f af42 	bmi.w	800bbc0 <HAL_RCC_OscConfig+0xe8>
        if((HAL_GetTick() - tickstart) > RCC_DBP_TIMEOUT_VALUE)
 800bd3c:	f7fd fcb2 	bl	80096a4 <HAL_GetTick>
 800bd40:	1bc0      	subs	r0, r0, r7
 800bd42:	2802      	cmp	r0, #2
 800bd44:	d9f6      	bls.n	800bd34 <HAL_RCC_OscConfig+0x25c>
            return HAL_TIMEOUT;
 800bd46:	2003      	movs	r0, #3
}
 800bd48:	b002      	add	sp, #8
 800bd4a:	e8bd 81f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, pc}
    __HAL_RCC_LSE_CONFIG(RCC_OscInitStruct->LSEState);
 800bd4e:	4a06      	ldr	r2, [pc, #24]	; (800bd68 <HAL_RCC_OscConfig+0x290>)
 800bd50:	6f13      	ldr	r3, [r2, #112]	; 0x70
 800bd52:	f043 0301 	orr.w	r3, r3, #1
 800bd56:	6713      	str	r3, [r2, #112]	; 0x70
      tickstart = HAL_GetTick();
 800bd58:	f7fd fca4 	bl	80096a4 <HAL_GetTick>
      while(__HAL_RCC_GET_FLAG(RCC_FLAG_LSERDY) == RESET)
 800bd5c:	4f02      	ldr	r7, [pc, #8]	; (800bd68 <HAL_RCC_OscConfig+0x290>)
      tickstart = HAL_GetTick();
 800bd5e:	4606      	mov	r6, r0
        if((HAL_GetTick() - tickstart ) > RCC_LSE_TIMEOUT_VALUE)
 800bd60:	f241 3888 	movw	r8, #5000	; 0x1388
      while(__HAL_RCC_GET_FLAG(RCC_FLAG_LSERDY) == RESET)
 800bd64:	e00b      	b.n	800bd7e <HAL_RCC_OscConfig+0x2a6>
 800bd66:	bf00      	nop
 800bd68:	40023800 	.word	0x40023800
 800bd6c:	42470000 	.word	0x42470000
 800bd70:	40007000 	.word	0x40007000
        if((HAL_GetTick() - tickstart ) > RCC_LSE_TIMEOUT_VALUE)
 800bd74:	f7fd fc96 	bl	80096a4 <HAL_GetTick>
 800bd78:	1b80      	subs	r0, r0, r6
 800bd7a:	4540      	cmp	r0, r8
 800bd7c:	d8e3      	bhi.n	800bd46 <HAL_RCC_OscConfig+0x26e>
      while(__HAL_RCC_GET_FLAG(RCC_FLAG_LSERDY) == RESET)
 800bd7e:	6f3b      	ldr	r3, [r7, #112]	; 0x70
 800bd80:	079b      	lsls	r3, r3, #30
 800bd82:	d5f7      	bpl.n	800bd74 <HAL_RCC_OscConfig+0x29c>
    if(pwrclkchanged == SET)
 800bd84:	2d00      	cmp	r5, #0
 800bd86:	f43f af40 	beq.w	800bc0a <HAL_RCC_OscConfig+0x132>
 800bd8a:	e044      	b.n	800be16 <HAL_RCC_OscConfig+0x33e>
        __HAL_RCC_HSI_DISABLE();
 800bd8c:	4a42      	ldr	r2, [pc, #264]	; (800be98 <HAL_RCC_OscConfig+0x3c0>)
        while(__HAL_RCC_GET_FLAG(RCC_FLAG_HSIRDY) != RESET)
 800bd8e:	4e43      	ldr	r6, [pc, #268]	; (800be9c <HAL_RCC_OscConfig+0x3c4>)
        __HAL_RCC_HSI_DISABLE();
 800bd90:	6013      	str	r3, [r2, #0]
        tickstart = HAL_GetTick();
 800bd92:	f7fd fc87 	bl	80096a4 <HAL_GetTick>
 800bd96:	4605      	mov	r5, r0
        while(__HAL_RCC_GET_FLAG(RCC_FLAG_HSIRDY) != RESET)
 800bd98:	e004      	b.n	800bda4 <HAL_RCC_OscConfig+0x2cc>
          if((HAL_GetTick() - tickstart ) > HSI_TIMEOUT_VALUE)
 800bd9a:	f7fd fc83 	bl	80096a4 <HAL_GetTick>
 800bd9e:	1b40      	subs	r0, r0, r5
 800bda0:	2802      	cmp	r0, #2
 800bda2:	d8d0      	bhi.n	800bd46 <HAL_RCC_OscConfig+0x26e>
        while(__HAL_RCC_GET_FLAG(RCC_FLAG_HSIRDY) != RESET)
 800bda4:	6833      	ldr	r3, [r6, #0]
 800bda6:	0799      	lsls	r1, r3, #30
 800bda8:	d4f7      	bmi.n	800bd9a <HAL_RCC_OscConfig+0x2c2>
  if(((RCC_OscInitStruct->OscillatorType) & RCC_OSCILLATORTYPE_LSI) == RCC_OSCILLATORTYPE_LSI)
 800bdaa:	6823      	ldr	r3, [r4, #0]
 800bdac:	e6f9      	b.n	800bba2 <HAL_RCC_OscConfig+0xca>
      if((RCC_OscInitStruct->PLL.PLLState) == RCC_PLL_OFF)
 800bdae:	2801      	cmp	r0, #1
 800bdb0:	f43f af48 	beq.w	800bc44 <HAL_RCC_OscConfig+0x16c>
        pll_config = RCC->PLLCFGR;
 800bdb4:	686b      	ldr	r3, [r5, #4]
        if (((RCC_OscInitStruct->PLL.PLLState) == RCC_PLL_OFF) ||
 800bdb6:	69e2      	ldr	r2, [r4, #28]
            (READ_BIT(pll_config, RCC_PLLCFGR_PLLSRC) != RCC_OscInitStruct->PLL.PLLSource) ||
 800bdb8:	f403 0180 	and.w	r1, r3, #4194304	; 0x400000
        if (((RCC_OscInitStruct->PLL.PLLState) == RCC_PLL_OFF) ||
 800bdbc:	4291      	cmp	r1, r2
 800bdbe:	f47f af64 	bne.w	800bc8a <HAL_RCC_OscConfig+0x1b2>
            (READ_BIT(pll_config, RCC_PLLCFGR_PLLSRC) != RCC_OscInitStruct->PLL.PLLSource) ||
 800bdc2:	6a22      	ldr	r2, [r4, #32]
            (READ_BIT(pll_config, RCC_PLLCFGR_PLLM) != (RCC_OscInitStruct->PLL.PLLM) << RCC_PLLCFGR_PLLM_Pos) ||
 800bdc4:	f003 013f 	and.w	r1, r3, #63	; 0x3f
            (READ_BIT(pll_config, RCC_PLLCFGR_PLLSRC) != RCC_OscInitStruct->PLL.PLLSource) ||
 800bdc8:	4291      	cmp	r1, r2
 800bdca:	f47f af5e 	bne.w	800bc8a <HAL_RCC_OscConfig+0x1b2>
            (READ_BIT(pll_config, RCC_PLLCFGR_PLLN) != (RCC_OscInitStruct->PLL.PLLN) << RCC_PLLCFGR_PLLN_Pos) ||
 800bdce:	6a61      	ldr	r1, [r4, #36]	; 0x24
 800bdd0:	f647 72c0 	movw	r2, #32704	; 0x7fc0
 800bdd4:	401a      	ands	r2, r3
            (READ_BIT(pll_config, RCC_PLLCFGR_PLLM) != (RCC_OscInitStruct->PLL.PLLM) << RCC_PLLCFGR_PLLM_Pos) ||
 800bdd6:	ebb2 1f81 	cmp.w	r2, r1, lsl #6
 800bdda:	f47f af56 	bne.w	800bc8a <HAL_RCC_OscConfig+0x1b2>
            (READ_BIT(pll_config, RCC_PLLCFGR_PLLP) != (((RCC_OscInitStruct->PLL.PLLP >> 1U) - 1U)) << RCC_PLLCFGR_PLLP_Pos) ||
 800bdde:	6aa2      	ldr	r2, [r4, #40]	; 0x28
 800bde0:	0852      	lsrs	r2, r2, #1
 800bde2:	f403 3140 	and.w	r1, r3, #196608	; 0x30000
 800bde6:	3a01      	subs	r2, #1
            (READ_BIT(pll_config, RCC_PLLCFGR_PLLN) != (RCC_OscInitStruct->PLL.PLLN) << RCC_PLLCFGR_PLLN_Pos) ||
 800bde8:	ebb1 4f02 	cmp.w	r1, r2, lsl #16
 800bdec:	f47f af4d 	bne.w	800bc8a <HAL_RCC_OscConfig+0x1b2>
            (READ_BIT(pll_config, RCC_PLLCFGR_PLLQ) != (RCC_OscInitStruct->PLL.PLLQ << RCC_PLLCFGR_PLLQ_Pos)))
 800bdf0:	6ae2      	ldr	r2, [r4, #44]	; 0x2c
 800bdf2:	f003 6370 	and.w	r3, r3, #251658240	; 0xf000000
            (READ_BIT(pll_config, RCC_PLLCFGR_PLLP) != (((RCC_OscInitStruct->PLL.PLLP >> 1U) - 1U)) << RCC_PLLCFGR_PLLP_Pos) ||
 800bdf6:	ebb3 6f02 	cmp.w	r3, r2, lsl #24
    return HAL_ERROR;
 800bdfa:	bf14      	ite	ne
 800bdfc:	2001      	movne	r0, #1
 800bdfe:	2000      	moveq	r0, #0
 800be00:	e720      	b.n	800bc44 <HAL_RCC_OscConfig+0x16c>
      __HAL_RCC_HSE_CONFIG(RCC_OscInitStruct->HSEState);
 800be02:	4b26      	ldr	r3, [pc, #152]	; (800be9c <HAL_RCC_OscConfig+0x3c4>)
 800be04:	681a      	ldr	r2, [r3, #0]
 800be06:	f442 2280 	orr.w	r2, r2, #262144	; 0x40000
 800be0a:	601a      	str	r2, [r3, #0]
 800be0c:	681a      	ldr	r2, [r3, #0]
 800be0e:	f442 3280 	orr.w	r2, r2, #65536	; 0x10000
 800be12:	601a      	str	r2, [r3, #0]
      if((RCC_OscInitStruct->HSEState) != RCC_HSE_OFF)
 800be14:	e76d      	b.n	800bcf2 <HAL_RCC_OscConfig+0x21a>
      __HAL_RCC_PWR_CLK_DISABLE();
 800be16:	4a21      	ldr	r2, [pc, #132]	; (800be9c <HAL_RCC_OscConfig+0x3c4>)
 800be18:	6c13      	ldr	r3, [r2, #64]	; 0x40
 800be1a:	f023 5380 	bic.w	r3, r3, #268435456	; 0x10000000
 800be1e:	6413      	str	r3, [r2, #64]	; 0x40
 800be20:	e6f3      	b.n	800bc0a <HAL_RCC_OscConfig+0x132>
    return HAL_ERROR;
 800be22:	2001      	movs	r0, #1
}
 800be24:	4770      	bx	lr
    __HAL_RCC_LSE_CONFIG(RCC_OscInitStruct->LSEState);
 800be26:	4b1d      	ldr	r3, [pc, #116]	; (800be9c <HAL_RCC_OscConfig+0x3c4>)
 800be28:	6f1a      	ldr	r2, [r3, #112]	; 0x70
 800be2a:	f042 0204 	orr.w	r2, r2, #4
 800be2e:	671a      	str	r2, [r3, #112]	; 0x70
 800be30:	6f1a      	ldr	r2, [r3, #112]	; 0x70
 800be32:	f042 0201 	orr.w	r2, r2, #1
 800be36:	671a      	str	r2, [r3, #112]	; 0x70
    if((RCC_OscInitStruct->LSEState) != RCC_LSE_OFF)
 800be38:	e78e      	b.n	800bd58 <HAL_RCC_OscConfig+0x280>
        tickstart = HAL_GetTick();
 800be3a:	f7fd fc33 	bl	80096a4 <HAL_GetTick>
 800be3e:	4606      	mov	r6, r0
        while(__HAL_RCC_GET_FLAG(RCC_FLAG_PLLRDY) != RESET)
 800be40:	e005      	b.n	800be4e <HAL_RCC_OscConfig+0x376>
          if((HAL_GetTick() - tickstart ) > PLL_TIMEOUT_VALUE)
 800be42:	f7fd fc2f 	bl	80096a4 <HAL_GetTick>
 800be46:	1b80      	subs	r0, r0, r6
 800be48:	2802      	cmp	r0, #2
 800be4a:	f63f af7c 	bhi.w	800bd46 <HAL_RCC_OscConfig+0x26e>
        while(__HAL_RCC_GET_FLAG(RCC_FLAG_PLLRDY) != RESET)
 800be4e:	682b      	ldr	r3, [r5, #0]
 800be50:	0199      	lsls	r1, r3, #6
 800be52:	d4f6      	bmi.n	800be42 <HAL_RCC_OscConfig+0x36a>
        WRITE_REG(RCC->PLLCFGR, (RCC_OscInitStruct->PLL.PLLSource                                            | \
 800be54:	e9d4 3107 	ldrd	r3, r1, [r4, #28]
 800be58:	6a62      	ldr	r2, [r4, #36]	; 0x24
 800be5a:	430b      	orrs	r3, r1
 800be5c:	ea43 1382 	orr.w	r3, r3, r2, lsl #6
 800be60:	e9d4 210a 	ldrd	r2, r1, [r4, #40]	; 0x28
 800be64:	0852      	lsrs	r2, r2, #1
 800be66:	ea43 6301 	orr.w	r3, r3, r1, lsl #24
 800be6a:	3a01      	subs	r2, #1
        __HAL_RCC_PLL_ENABLE();
 800be6c:	490a      	ldr	r1, [pc, #40]	; (800be98 <HAL_RCC_OscConfig+0x3c0>)
        WRITE_REG(RCC->PLLCFGR, (RCC_OscInitStruct->PLL.PLLSource                                            | \
 800be6e:	ea43 4302 	orr.w	r3, r3, r2, lsl #16
        __HAL_RCC_PLL_ENABLE();
 800be72:	2201      	movs	r2, #1
        WRITE_REG(RCC->PLLCFGR, (RCC_OscInitStruct->PLL.PLLSource                                            | \
 800be74:	606b      	str	r3, [r5, #4]
        __HAL_RCC_PLL_ENABLE();
 800be76:	660a      	str	r2, [r1, #96]	; 0x60
        tickstart = HAL_GetTick();
 800be78:	f7fd fc14 	bl	80096a4 <HAL_GetTick>
        while(__HAL_RCC_GET_FLAG(RCC_FLAG_PLLRDY) == RESET)
 800be7c:	4d07      	ldr	r5, [pc, #28]	; (800be9c <HAL_RCC_OscConfig+0x3c4>)
        tickstart = HAL_GetTick();
 800be7e:	4604      	mov	r4, r0
        while(__HAL_RCC_GET_FLAG(RCC_FLAG_PLLRDY) == RESET)
 800be80:	e005      	b.n	800be8e <HAL_RCC_OscConfig+0x3b6>
          if((HAL_GetTick() - tickstart ) > PLL_TIMEOUT_VALUE)
 800be82:	f7fd fc0f 	bl	80096a4 <HAL_GetTick>
 800be86:	1b00      	subs	r0, r0, r4
 800be88:	2802      	cmp	r0, #2
 800be8a:	f63f af5c 	bhi.w	800bd46 <HAL_RCC_OscConfig+0x26e>
        while(__HAL_RCC_GET_FLAG(RCC_FLAG_PLLRDY) == RESET)
 800be8e:	682b      	ldr	r3, [r5, #0]
 800be90:	019a      	lsls	r2, r3, #6
 800be92:	d5f6      	bpl.n	800be82 <HAL_RCC_OscConfig+0x3aa>
 800be94:	e6d5      	b.n	800bc42 <HAL_RCC_OscConfig+0x16a>
 800be96:	bf00      	nop
 800be98:	42470000 	.word	0x42470000
 800be9c:	40023800 	.word	0x40023800

0800bea0 <HAL_RCC_GetSysClockFreq>:
{
  uint32_t pllm = 0U, pllvco = 0U, pllp = 0U;
  uint32_t sysclockfreq = 0U;

  /* Get SYSCLK source -------------------------------------------------------*/
  switch (RCC->CFGR & RCC_CFGR_SWS)
 800bea0:	4916      	ldr	r1, [pc, #88]	; (800befc <HAL_RCC_GetSysClockFreq+0x5c>)
{
 800bea2:	b508      	push	{r3, lr}
  switch (RCC->CFGR & RCC_CFGR_SWS)
 800bea4:	688b      	ldr	r3, [r1, #8]
 800bea6:	f003 030c 	and.w	r3, r3, #12
 800beaa:	2b04      	cmp	r3, #4
 800beac:	d01b      	beq.n	800bee6 <HAL_RCC_GetSysClockFreq+0x46>
 800beae:	2b08      	cmp	r3, #8
 800beb0:	d117      	bne.n	800bee2 <HAL_RCC_GetSysClockFreq+0x42>
    }
    case RCC_CFGR_SWS_PLL:  /* PLL used as system clock  source */
    {
      /* PLL_VCO = (HSE_VALUE or HSI_VALUE / PLLM) * PLLN
      SYSCLK = PLL_VCO / PLLP */
      pllm = RCC->PLLCFGR & RCC_PLLCFGR_PLLM;
 800beb2:	684a      	ldr	r2, [r1, #4]
      if(__HAL_RCC_GET_PLL_OSCSOURCE() != RCC_PLLSOURCE_HSI)
 800beb4:	684b      	ldr	r3, [r1, #4]
      {
        /* HSE used as PLL clock source */
        pllvco = (uint32_t) ((((uint64_t) HSE_VALUE * ((uint64_t) ((RCC->PLLCFGR & RCC_PLLCFGR_PLLN) >> RCC_PLLCFGR_PLLN_Pos)))) / (uint64_t)pllm);
 800beb6:	6849      	ldr	r1, [r1, #4]
      if(__HAL_RCC_GET_PLL_OSCSOURCE() != RCC_PLLSOURCE_HSI)
 800beb8:	f413 0380 	ands.w	r3, r3, #4194304	; 0x400000
      pllm = RCC->PLLCFGR & RCC_PLLCFGR_PLLM;
 800bebc:	f002 023f 	and.w	r2, r2, #63	; 0x3f
      if(__HAL_RCC_GET_PLL_OSCSOURCE() != RCC_PLLSOURCE_HSI)
 800bec0:	d113      	bne.n	800beea <HAL_RCC_GetSysClockFreq+0x4a>
      }
      else
      {
        /* HSI used as PLL clock source */
        pllvco = (uint32_t) ((((uint64_t) HSI_VALUE * ((uint64_t) ((RCC->PLLCFGR & RCC_PLLCFGR_PLLN) >> RCC_PLLCFGR_PLLN_Pos)))) / (uint64_t)pllm);
 800bec2:	480f      	ldr	r0, [pc, #60]	; (800bf00 <HAL_RCC_GetSysClockFreq+0x60>)
 800bec4:	f3c1 1188 	ubfx	r1, r1, #6, #9
 800bec8:	fba1 0100 	umull	r0, r1, r1, r0
 800becc:	f7f4 fa40 	bl	8000350 <__aeabi_uldivmod>
      }
      pllp = ((((RCC->PLLCFGR & RCC_PLLCFGR_PLLP) >> RCC_PLLCFGR_PLLP_Pos) + 1U) *2U);
 800bed0:	4b0a      	ldr	r3, [pc, #40]	; (800befc <HAL_RCC_GetSysClockFreq+0x5c>)
 800bed2:	685b      	ldr	r3, [r3, #4]
 800bed4:	f3c3 4301 	ubfx	r3, r3, #16, #2
 800bed8:	3301      	adds	r3, #1
 800beda:	005b      	lsls	r3, r3, #1

      sysclockfreq = pllvco/pllp;
 800bedc:	fbb0 f0f3 	udiv	r0, r0, r3
      sysclockfreq = HSI_VALUE;
      break;
    }
  }
  return sysclockfreq;
}
 800bee0:	bd08      	pop	{r3, pc}
      sysclockfreq = HSI_VALUE;
 800bee2:	4807      	ldr	r0, [pc, #28]	; (800bf00 <HAL_RCC_GetSysClockFreq+0x60>)
}
 800bee4:	bd08      	pop	{r3, pc}
  switch (RCC->CFGR & RCC_CFGR_SWS)
 800bee6:	4807      	ldr	r0, [pc, #28]	; (800bf04 <HAL_RCC_GetSysClockFreq+0x64>)
}
 800bee8:	bd08      	pop	{r3, pc}
        pllvco = (uint32_t) ((((uint64_t) HSE_VALUE * ((uint64_t) ((RCC->PLLCFGR & RCC_PLLCFGR_PLLN) >> RCC_PLLCFGR_PLLN_Pos)))) / (uint64_t)pllm);
 800beea:	4806      	ldr	r0, [pc, #24]	; (800bf04 <HAL_RCC_GetSysClockFreq+0x64>)
 800beec:	f3c1 1188 	ubfx	r1, r1, #6, #9
 800bef0:	2300      	movs	r3, #0
 800bef2:	fba1 0100 	umull	r0, r1, r1, r0
 800bef6:	f7f4 fa2b 	bl	8000350 <__aeabi_uldivmod>
 800befa:	e7e9      	b.n	800bed0 <HAL_RCC_GetSysClockFreq+0x30>
 800befc:	40023800 	.word	0x40023800
 800bf00:	00f42400 	.word	0x00f42400
 800bf04:	007a1200 	.word	0x007a1200

0800bf08 <HAL_RCC_ClockConfig>:
  if(RCC_ClkInitStruct == NULL)
 800bf08:	2800      	cmp	r0, #0
 800bf0a:	f000 8087 	beq.w	800c01c <HAL_RCC_ClockConfig+0x114>
  if(FLatency > __HAL_FLASH_GET_LATENCY())
 800bf0e:	4a48      	ldr	r2, [pc, #288]	; (800c030 <HAL_RCC_ClockConfig+0x128>)
 800bf10:	6813      	ldr	r3, [r2, #0]
 800bf12:	f003 030f 	and.w	r3, r3, #15
 800bf16:	428b      	cmp	r3, r1
{
 800bf18:	e92d 41f0 	stmdb	sp!, {r4, r5, r6, r7, r8, lr}
 800bf1c:	460d      	mov	r5, r1
 800bf1e:	4604      	mov	r4, r0
  if(FLatency > __HAL_FLASH_GET_LATENCY())
 800bf20:	d209      	bcs.n	800bf36 <HAL_RCC_ClockConfig+0x2e>
    __HAL_FLASH_SET_LATENCY(FLatency);
 800bf22:	b2cb      	uxtb	r3, r1
 800bf24:	7013      	strb	r3, [r2, #0]
    if(__HAL_FLASH_GET_LATENCY() != FLatency)
 800bf26:	6813      	ldr	r3, [r2, #0]
 800bf28:	f003 030f 	and.w	r3, r3, #15
 800bf2c:	428b      	cmp	r3, r1
 800bf2e:	d002      	beq.n	800bf36 <HAL_RCC_ClockConfig+0x2e>
    return HAL_ERROR;
 800bf30:	2001      	movs	r0, #1
}
 800bf32:	e8bd 81f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, pc}
  if(((RCC_ClkInitStruct->ClockType) & RCC_CLOCKTYPE_HCLK) == RCC_CLOCKTYPE_HCLK)
 800bf36:	6823      	ldr	r3, [r4, #0]
 800bf38:	0798      	lsls	r0, r3, #30
 800bf3a:	d514      	bpl.n	800bf66 <HAL_RCC_ClockConfig+0x5e>
    if(((RCC_ClkInitStruct->ClockType) & RCC_CLOCKTYPE_PCLK1) == RCC_CLOCKTYPE_PCLK1)
 800bf3c:	0759      	lsls	r1, r3, #29
 800bf3e:	d504      	bpl.n	800bf4a <HAL_RCC_ClockConfig+0x42>
      MODIFY_REG(RCC->CFGR, RCC_CFGR_PPRE1, RCC_HCLK_DIV16);
 800bf40:	493c      	ldr	r1, [pc, #240]	; (800c034 <HAL_RCC_ClockConfig+0x12c>)
 800bf42:	688a      	ldr	r2, [r1, #8]
 800bf44:	f442 52e0 	orr.w	r2, r2, #7168	; 0x1c00
 800bf48:	608a      	str	r2, [r1, #8]
    if(((RCC_ClkInitStruct->ClockType) & RCC_CLOCKTYPE_PCLK2) == RCC_CLOCKTYPE_PCLK2)
 800bf4a:	071a      	lsls	r2, r3, #28
 800bf4c:	d504      	bpl.n	800bf58 <HAL_RCC_ClockConfig+0x50>
      MODIFY_REG(RCC->CFGR, RCC_CFGR_PPRE2, (RCC_HCLK_DIV16 << 3));
 800bf4e:	4939      	ldr	r1, [pc, #228]	; (800c034 <HAL_RCC_ClockConfig+0x12c>)
 800bf50:	688a      	ldr	r2, [r1, #8]
 800bf52:	f442 4260 	orr.w	r2, r2, #57344	; 0xe000
 800bf56:	608a      	str	r2, [r1, #8]
    MODIFY_REG(RCC->CFGR, RCC_CFGR_HPRE, RCC_ClkInitStruct->AHBCLKDivider);
 800bf58:	4936      	ldr	r1, [pc, #216]	; (800c034 <HAL_RCC_ClockConfig+0x12c>)
 800bf5a:	68a0      	ldr	r0, [r4, #8]
 800bf5c:	688a      	ldr	r2, [r1, #8]
 800bf5e:	f022 02f0 	bic.w	r2, r2, #240	; 0xf0
 800bf62:	4302      	orrs	r2, r0
 800bf64:	608a      	str	r2, [r1, #8]
  if(((RCC_ClkInitStruct->ClockType) & RCC_CLOCKTYPE_SYSCLK) == RCC_CLOCKTYPE_SYSCLK)
 800bf66:	07df      	lsls	r7, r3, #31
 800bf68:	d521      	bpl.n	800bfae <HAL_RCC_ClockConfig+0xa6>
    if(RCC_ClkInitStruct->SYSCLKSource == RCC_SYSCLKSOURCE_HSE)
 800bf6a:	6862      	ldr	r2, [r4, #4]
 800bf6c:	2a01      	cmp	r2, #1
 800bf6e:	d057      	beq.n	800c020 <HAL_RCC_ClockConfig+0x118>
    else if((RCC_ClkInitStruct->SYSCLKSource == RCC_SYSCLKSOURCE_PLLCLK)   ||
 800bf70:	1e93      	subs	r3, r2, #2
 800bf72:	2b01      	cmp	r3, #1
      if(__HAL_RCC_GET_FLAG(RCC_FLAG_PLLRDY) == RESET)
 800bf74:	4b2f      	ldr	r3, [pc, #188]	; (800c034 <HAL_RCC_ClockConfig+0x12c>)
 800bf76:	681b      	ldr	r3, [r3, #0]
    else if((RCC_ClkInitStruct->SYSCLKSource == RCC_SYSCLKSOURCE_PLLCLK)   ||
 800bf78:	d94d      	bls.n	800c016 <HAL_RCC_ClockConfig+0x10e>
      if(__HAL_RCC_GET_FLAG(RCC_FLAG_HSIRDY) == RESET)
 800bf7a:	0799      	lsls	r1, r3, #30
 800bf7c:	d5d8      	bpl.n	800bf30 <HAL_RCC_ClockConfig+0x28>
    __HAL_RCC_SYSCLK_CONFIG(RCC_ClkInitStruct->SYSCLKSource);
 800bf7e:	4e2d      	ldr	r6, [pc, #180]	; (800c034 <HAL_RCC_ClockConfig+0x12c>)
 800bf80:	68b3      	ldr	r3, [r6, #8]
 800bf82:	f023 0303 	bic.w	r3, r3, #3
 800bf86:	4313      	orrs	r3, r2
 800bf88:	60b3      	str	r3, [r6, #8]
    tickstart = HAL_GetTick();
 800bf8a:	f7fd fb8b 	bl	80096a4 <HAL_GetTick>
      if ((HAL_GetTick() - tickstart) > CLOCKSWITCH_TIMEOUT_VALUE)
 800bf8e:	f241 3888 	movw	r8, #5000	; 0x1388
    tickstart = HAL_GetTick();
 800bf92:	4607      	mov	r7, r0
    while (__HAL_RCC_GET_SYSCLK_SOURCE() != (RCC_ClkInitStruct->SYSCLKSource << RCC_CFGR_SWS_Pos))
 800bf94:	e004      	b.n	800bfa0 <HAL_RCC_ClockConfig+0x98>
      if ((HAL_GetTick() - tickstart) > CLOCKSWITCH_TIMEOUT_VALUE)
 800bf96:	f7fd fb85 	bl	80096a4 <HAL_GetTick>
 800bf9a:	1bc0      	subs	r0, r0, r7
 800bf9c:	4540      	cmp	r0, r8
 800bf9e:	d844      	bhi.n	800c02a <HAL_RCC_ClockConfig+0x122>
    while (__HAL_RCC_GET_SYSCLK_SOURCE() != (RCC_ClkInitStruct->SYSCLKSource << RCC_CFGR_SWS_Pos))
 800bfa0:	68b3      	ldr	r3, [r6, #8]
 800bfa2:	6862      	ldr	r2, [r4, #4]
 800bfa4:	f003 030c 	and.w	r3, r3, #12
 800bfa8:	ebb3 0f82 	cmp.w	r3, r2, lsl #2
 800bfac:	d1f3      	bne.n	800bf96 <HAL_RCC_ClockConfig+0x8e>
  if(FLatency < __HAL_FLASH_GET_LATENCY())
 800bfae:	4a20      	ldr	r2, [pc, #128]	; (800c030 <HAL_RCC_ClockConfig+0x128>)
 800bfb0:	6813      	ldr	r3, [r2, #0]
 800bfb2:	f003 030f 	and.w	r3, r3, #15
 800bfb6:	42ab      	cmp	r3, r5
 800bfb8:	d906      	bls.n	800bfc8 <HAL_RCC_ClockConfig+0xc0>
    __HAL_FLASH_SET_LATENCY(FLatency);
 800bfba:	b2eb      	uxtb	r3, r5
 800bfbc:	7013      	strb	r3, [r2, #0]
    if(__HAL_FLASH_GET_LATENCY() != FLatency)
 800bfbe:	6813      	ldr	r3, [r2, #0]
 800bfc0:	f003 030f 	and.w	r3, r3, #15
 800bfc4:	42ab      	cmp	r3, r5
 800bfc6:	d1b3      	bne.n	800bf30 <HAL_RCC_ClockConfig+0x28>
  if(((RCC_ClkInitStruct->ClockType) & RCC_CLOCKTYPE_PCLK1) == RCC_CLOCKTYPE_PCLK1)
 800bfc8:	6823      	ldr	r3, [r4, #0]
 800bfca:	075a      	lsls	r2, r3, #29
 800bfcc:	d506      	bpl.n	800bfdc <HAL_RCC_ClockConfig+0xd4>
    MODIFY_REG(RCC->CFGR, RCC_CFGR_PPRE1, RCC_ClkInitStruct->APB1CLKDivider);
 800bfce:	4919      	ldr	r1, [pc, #100]	; (800c034 <HAL_RCC_ClockConfig+0x12c>)
 800bfd0:	68e0      	ldr	r0, [r4, #12]
 800bfd2:	688a      	ldr	r2, [r1, #8]
 800bfd4:	f422 52e0 	bic.w	r2, r2, #7168	; 0x1c00
 800bfd8:	4302      	orrs	r2, r0
 800bfda:	608a      	str	r2, [r1, #8]
  if(((RCC_ClkInitStruct->ClockType) & RCC_CLOCKTYPE_PCLK2) == RCC_CLOCKTYPE_PCLK2)
 800bfdc:	071b      	lsls	r3, r3, #28
 800bfde:	d507      	bpl.n	800bff0 <HAL_RCC_ClockConfig+0xe8>
    MODIFY_REG(RCC->CFGR, RCC_CFGR_PPRE2, ((RCC_ClkInitStruct->APB2CLKDivider) << 3U));
 800bfe0:	4a14      	ldr	r2, [pc, #80]	; (800c034 <HAL_RCC_ClockConfig+0x12c>)
 800bfe2:	6921      	ldr	r1, [r4, #16]
 800bfe4:	6893      	ldr	r3, [r2, #8]
 800bfe6:	f423 4360 	bic.w	r3, r3, #57344	; 0xe000
 800bfea:	ea43 03c1 	orr.w	r3, r3, r1, lsl #3
 800bfee:	6093      	str	r3, [r2, #8]
  SystemCoreClock = HAL_RCC_GetSysClockFreq() >> AHBPrescTable[(RCC->CFGR & RCC_CFGR_HPRE)>> RCC_CFGR_HPRE_Pos];
 800bff0:	f7ff ff56 	bl	800bea0 <HAL_RCC_GetSysClockFreq>
 800bff4:	4a0f      	ldr	r2, [pc, #60]	; (800c034 <HAL_RCC_ClockConfig+0x12c>)
 800bff6:	4c10      	ldr	r4, [pc, #64]	; (800c038 <HAL_RCC_ClockConfig+0x130>)
 800bff8:	6892      	ldr	r2, [r2, #8]
 800bffa:	4910      	ldr	r1, [pc, #64]	; (800c03c <HAL_RCC_ClockConfig+0x134>)
 800bffc:	f3c2 1203 	ubfx	r2, r2, #4, #4
 800c000:	4603      	mov	r3, r0
 800c002:	5ca2      	ldrb	r2, [r4, r2]
  HAL_InitTick (uwTickPrio);
 800c004:	480e      	ldr	r0, [pc, #56]	; (800c040 <HAL_RCC_ClockConfig+0x138>)
  SystemCoreClock = HAL_RCC_GetSysClockFreq() >> AHBPrescTable[(RCC->CFGR & RCC_CFGR_HPRE)>> RCC_CFGR_HPRE_Pos];
 800c006:	40d3      	lsrs	r3, r2
  HAL_InitTick (uwTickPrio);
 800c008:	6800      	ldr	r0, [r0, #0]
  SystemCoreClock = HAL_RCC_GetSysClockFreq() >> AHBPrescTable[(RCC->CFGR & RCC_CFGR_HPRE)>> RCC_CFGR_HPRE_Pos];
 800c00a:	600b      	str	r3, [r1, #0]
  HAL_InitTick (uwTickPrio);
 800c00c:	f7f5 fd16 	bl	8001a3c <HAL_InitTick>
  return HAL_OK;
 800c010:	2000      	movs	r0, #0
}
 800c012:	e8bd 81f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, pc}
      if(__HAL_RCC_GET_FLAG(RCC_FLAG_PLLRDY) == RESET)
 800c016:	0198      	lsls	r0, r3, #6
 800c018:	d4b1      	bmi.n	800bf7e <HAL_RCC_ClockConfig+0x76>
 800c01a:	e789      	b.n	800bf30 <HAL_RCC_ClockConfig+0x28>
    return HAL_ERROR;
 800c01c:	2001      	movs	r0, #1
}
 800c01e:	4770      	bx	lr
      if(__HAL_RCC_GET_FLAG(RCC_FLAG_HSERDY) == RESET)
 800c020:	4b04      	ldr	r3, [pc, #16]	; (800c034 <HAL_RCC_ClockConfig+0x12c>)
 800c022:	681b      	ldr	r3, [r3, #0]
 800c024:	039e      	lsls	r6, r3, #14
 800c026:	d4aa      	bmi.n	800bf7e <HAL_RCC_ClockConfig+0x76>
 800c028:	e782      	b.n	800bf30 <HAL_RCC_ClockConfig+0x28>
        return HAL_TIMEOUT;
 800c02a:	2003      	movs	r0, #3
 800c02c:	e781      	b.n	800bf32 <HAL_RCC_ClockConfig+0x2a>
 800c02e:	bf00      	nop
 800c030:	40023c00 	.word	0x40023c00
 800c034:	40023800 	.word	0x40023800
 800c038:	0802ee00 	.word	0x0802ee00
 800c03c:	20000078 	.word	0x20000078
 800c040:	20000080 	.word	0x20000080

0800c044 <HAL_RCC_GetPCLK1Freq>:
  * @retval PCLK1 frequency
  */
uint32_t HAL_RCC_GetPCLK1Freq(void)
{
  /* Get HCLK source and Compute PCLK1 frequency ---------------------------*/
  return (HAL_RCC_GetHCLKFreq() >> APBPrescTable[(RCC->CFGR & RCC_CFGR_PPRE1)>> RCC_CFGR_PPRE1_Pos]);
 800c044:	4b04      	ldr	r3, [pc, #16]	; (800c058 <HAL_RCC_GetPCLK1Freq+0x14>)
  return SystemCoreClock;
 800c046:	4905      	ldr	r1, [pc, #20]	; (800c05c <HAL_RCC_GetPCLK1Freq+0x18>)
  return (HAL_RCC_GetHCLKFreq() >> APBPrescTable[(RCC->CFGR & RCC_CFGR_PPRE1)>> RCC_CFGR_PPRE1_Pos]);
 800c048:	689b      	ldr	r3, [r3, #8]
 800c04a:	4a05      	ldr	r2, [pc, #20]	; (800c060 <HAL_RCC_GetPCLK1Freq+0x1c>)
 800c04c:	6808      	ldr	r0, [r1, #0]
 800c04e:	f3c3 2382 	ubfx	r3, r3, #10, #3
 800c052:	5cd3      	ldrb	r3, [r2, r3]
}
 800c054:	40d8      	lsrs	r0, r3
 800c056:	4770      	bx	lr
 800c058:	40023800 	.word	0x40023800
 800c05c:	20000078 	.word	0x20000078
 800c060:	0802ee10 	.word	0x0802ee10

0800c064 <HAL_RCC_GetClockConfig>:
{
  /* Set all possible values for the Clock type parameter --------------------*/
  RCC_ClkInitStruct->ClockType = RCC_CLOCKTYPE_SYSCLK | RCC_CLOCKTYPE_HCLK | RCC_CLOCKTYPE_PCLK1 | RCC_CLOCKTYPE_PCLK2;

  /* Get the SYSCLK configuration --------------------------------------------*/
  RCC_ClkInitStruct->SYSCLKSource = (uint32_t)(RCC->CFGR & RCC_CFGR_SW);
 800c064:	4b0e      	ldr	r3, [pc, #56]	; (800c0a0 <HAL_RCC_GetClockConfig+0x3c>)
  RCC_ClkInitStruct->ClockType = RCC_CLOCKTYPE_SYSCLK | RCC_CLOCKTYPE_HCLK | RCC_CLOCKTYPE_PCLK1 | RCC_CLOCKTYPE_PCLK2;
 800c066:	220f      	movs	r2, #15
 800c068:	6002      	str	r2, [r0, #0]
  RCC_ClkInitStruct->SYSCLKSource = (uint32_t)(RCC->CFGR & RCC_CFGR_SW);
 800c06a:	689a      	ldr	r2, [r3, #8]
 800c06c:	f002 0203 	and.w	r2, r2, #3
 800c070:	6042      	str	r2, [r0, #4]

  /* Get the HCLK configuration ----------------------------------------------*/
  RCC_ClkInitStruct->AHBCLKDivider = (uint32_t)(RCC->CFGR & RCC_CFGR_HPRE);
 800c072:	689a      	ldr	r2, [r3, #8]
 800c074:	f002 02f0 	and.w	r2, r2, #240	; 0xf0
 800c078:	6082      	str	r2, [r0, #8]

  /* Get the APB1 configuration ----------------------------------------------*/
  RCC_ClkInitStruct->APB1CLKDivider = (uint32_t)(RCC->CFGR & RCC_CFGR_PPRE1);
 800c07a:	689a      	ldr	r2, [r3, #8]
 800c07c:	f402 52e0 	and.w	r2, r2, #7168	; 0x1c00
 800c080:	60c2      	str	r2, [r0, #12]

  /* Get the APB2 configuration ----------------------------------------------*/
  RCC_ClkInitStruct->APB2CLKDivider = (uint32_t)((RCC->CFGR & RCC_CFGR_PPRE2) >> 3U);
 800c082:	689b      	ldr	r3, [r3, #8]
 800c084:	08db      	lsrs	r3, r3, #3
{
 800c086:	b410      	push	{r4}
  RCC_ClkInitStruct->APB2CLKDivider = (uint32_t)((RCC->CFGR & RCC_CFGR_PPRE2) >> 3U);
 800c088:	f403 53e0 	and.w	r3, r3, #7168	; 0x1c00

  /* Get the Flash Wait State (Latency) configuration ------------------------*/
  *pFLatency = (uint32_t)(FLASH->ACR & FLASH_ACR_LATENCY);
 800c08c:	4c05      	ldr	r4, [pc, #20]	; (800c0a4 <HAL_RCC_GetClockConfig+0x40>)
  RCC_ClkInitStruct->APB2CLKDivider = (uint32_t)((RCC->CFGR & RCC_CFGR_PPRE2) >> 3U);
 800c08e:	6103      	str	r3, [r0, #16]
  *pFLatency = (uint32_t)(FLASH->ACR & FLASH_ACR_LATENCY);
 800c090:	6823      	ldr	r3, [r4, #0]
}
 800c092:	f85d 4b04 	ldr.w	r4, [sp], #4
  *pFLatency = (uint32_t)(FLASH->ACR & FLASH_ACR_LATENCY);
 800c096:	f003 030f 	and.w	r3, r3, #15
 800c09a:	600b      	str	r3, [r1, #0]
}
 800c09c:	4770      	bx	lr
 800c09e:	bf00      	nop
 800c0a0:	40023800 	.word	0x40023800
 800c0a4:	40023c00 	.word	0x40023c00

0800c0a8 <HAL_RCCEx_PeriphCLKConfig>:
  *         the backup registers) and RCC_BDCR register are set to their reset values.
  *
  * @retval HAL status
  */
HAL_StatusTypeDef HAL_RCCEx_PeriphCLKConfig(RCC_PeriphCLKInitTypeDef  *PeriphClkInit)
{
 800c0a8:	b5f0      	push	{r4, r5, r6, r7, lr}
  /*----------------------- SAI/I2S Configuration (PLLI2S) -------------------*/
  /*----------------------- Common configuration SAI/I2S ---------------------*/
  /* In Case of SAI or I2S Clock Configuration through PLLI2S, PLLI2SN division
     factor is common parameters for both peripherals */
  if((((PeriphClkInit->PeriphClockSelection) & RCC_PERIPHCLK_I2S) == RCC_PERIPHCLK_I2S) ||
     (((PeriphClkInit->PeriphClockSelection) & RCC_PERIPHCLK_SAI_PLLI2S) == RCC_PERIPHCLK_SAI_PLLI2S) ||
 800c0aa:	6803      	ldr	r3, [r0, #0]
  if((((PeriphClkInit->PeriphClockSelection) & RCC_PERIPHCLK_I2S) == RCC_PERIPHCLK_I2S) ||
 800c0ac:	f013 0f43 	tst.w	r3, #67	; 0x43
{
 800c0b0:	b083      	sub	sp, #12
 800c0b2:	4604      	mov	r4, r0
  if((((PeriphClkInit->PeriphClockSelection) & RCC_PERIPHCLK_I2S) == RCC_PERIPHCLK_I2S) ||
 800c0b4:	d111      	bne.n	800c0da <HAL_RCCEx_PeriphCLKConfig+0x32>

  /*----------------------- SAI/LTDC Configuration (PLLSAI) ------------------*/
  /*----------------------- Common configuration SAI/LTDC --------------------*/
  /* In Case of SAI or LTDC Clock Configuration through PLLSAI, PLLSAIN division
     factor is common parameters for both peripherals */
  if((((PeriphClkInit->PeriphClockSelection) & RCC_PERIPHCLK_SAI_PLLSAI) == RCC_PERIPHCLK_SAI_PLLSAI) ||
 800c0b6:	f013 0f0c 	tst.w	r3, #12
 800c0ba:	d16f      	bne.n	800c19c <HAL_RCCEx_PeriphCLKConfig+0xf4>
    }
  }
  /*--------------------------------------------------------------------------*/

  /*---------------------------- RTC configuration ---------------------------*/
  if(((PeriphClkInit->PeriphClockSelection) & RCC_PERIPHCLK_RTC) == (RCC_PERIPHCLK_RTC))
 800c0bc:	0698      	lsls	r0, r3, #26
 800c0be:	f100 80c2 	bmi.w	800c246 <HAL_RCCEx_PeriphCLKConfig+0x19e>
    __HAL_RCC_RTC_CONFIG(PeriphClkInit->RTCClockSelection);
  }
  /*--------------------------------------------------------------------------*/

  /*---------------------------- TIM configuration ---------------------------*/
  if(((PeriphClkInit->PeriphClockSelection) & RCC_PERIPHCLK_TIM) == (RCC_PERIPHCLK_TIM))
 800c0c2:	f013 0310 	ands.w	r3, r3, #16
 800c0c6:	f000 80bb 	beq.w	800c240 <HAL_RCCEx_PeriphCLKConfig+0x198>
  {
    __HAL_RCC_TIMCLKPRESCALER(PeriphClkInit->TIMPresSelection);
 800c0ca:	4b89      	ldr	r3, [pc, #548]	; (800c2f0 <HAL_RCCEx_PeriphCLKConfig+0x248>)
 800c0cc:	f894 202c 	ldrb.w	r2, [r4, #44]	; 0x2c
 800c0d0:	f8c3 21e0 	str.w	r2, [r3, #480]	; 0x1e0
  }
  return HAL_OK;
 800c0d4:	2000      	movs	r0, #0
}
 800c0d6:	b003      	add	sp, #12
 800c0d8:	bdf0      	pop	{r4, r5, r6, r7, pc}
    __HAL_RCC_PLLI2S_DISABLE();
 800c0da:	4b86      	ldr	r3, [pc, #536]	; (800c2f4 <HAL_RCCEx_PeriphCLKConfig+0x24c>)
    while(__HAL_RCC_GET_FLAG(RCC_FLAG_PLLI2SRDY)  != RESET)
 800c0dc:	4e86      	ldr	r6, [pc, #536]	; (800c2f8 <HAL_RCCEx_PeriphCLKConfig+0x250>)
    __HAL_RCC_PLLI2S_DISABLE();
 800c0de:	2200      	movs	r2, #0
 800c0e0:	669a      	str	r2, [r3, #104]	; 0x68
    tickstart = HAL_GetTick();
 800c0e2:	f7fd fadf 	bl	80096a4 <HAL_GetTick>
 800c0e6:	4605      	mov	r5, r0
    while(__HAL_RCC_GET_FLAG(RCC_FLAG_PLLI2SRDY)  != RESET)
 800c0e8:	e004      	b.n	800c0f4 <HAL_RCCEx_PeriphCLKConfig+0x4c>
      if((HAL_GetTick() - tickstart ) > PLLI2S_TIMEOUT_VALUE)
 800c0ea:	f7fd fadb 	bl	80096a4 <HAL_GetTick>
 800c0ee:	1b43      	subs	r3, r0, r5
 800c0f0:	2b02      	cmp	r3, #2
 800c0f2:	d850      	bhi.n	800c196 <HAL_RCCEx_PeriphCLKConfig+0xee>
    while(__HAL_RCC_GET_FLAG(RCC_FLAG_PLLI2SRDY)  != RESET)
 800c0f4:	6833      	ldr	r3, [r6, #0]
 800c0f6:	0118      	lsls	r0, r3, #4
 800c0f8:	d4f7      	bmi.n	800c0ea <HAL_RCCEx_PeriphCLKConfig+0x42>
    if(((PeriphClkInit->PeriphClockSelection) & RCC_PERIPHCLK_I2S) == (RCC_PERIPHCLK_I2S))
 800c0fa:	6823      	ldr	r3, [r4, #0]
 800c0fc:	07d9      	lsls	r1, r3, #31
 800c0fe:	d506      	bpl.n	800c10e <HAL_RCCEx_PeriphCLKConfig+0x66>
      __HAL_RCC_PLLI2S_CONFIG(PeriphClkInit->PLLI2S.PLLI2SN , PeriphClkInit->PLLI2S.PLLI2SR);
 800c100:	e9d4 1201 	ldrd	r1, r2, [r4, #4]
 800c104:	0712      	lsls	r2, r2, #28
 800c106:	ea42 1281 	orr.w	r2, r2, r1, lsl #6
 800c10a:	f8c6 2084 	str.w	r2, [r6, #132]	; 0x84
    if(((PeriphClkInit->PeriphClockSelection) & RCC_PERIPHCLK_SAI_PLLI2S) == (RCC_PERIPHCLK_SAI_PLLI2S))
 800c10e:	079a      	lsls	r2, r3, #30
 800c110:	d515      	bpl.n	800c13e <HAL_RCCEx_PeriphCLKConfig+0x96>
      tmpreg1 = ((RCC->PLLI2SCFGR & RCC_PLLI2SCFGR_PLLI2SR) >> RCC_PLLI2SCFGR_PLLI2SR_Pos);
 800c112:	4979      	ldr	r1, [pc, #484]	; (800c2f8 <HAL_RCCEx_PeriphCLKConfig+0x250>)
      __HAL_RCC_PLLI2S_SAICLK_CONFIG(PeriphClkInit->PLLI2S.PLLI2SN , PeriphClkInit->PLLI2S.PLLI2SQ , tmpreg1);
 800c114:	68e2      	ldr	r2, [r4, #12]
      tmpreg1 = ((RCC->PLLI2SCFGR & RCC_PLLI2SCFGR_PLLI2SR) >> RCC_PLLI2SCFGR_PLLI2SR_Pos);
 800c116:	f8d1 0084 	ldr.w	r0, [r1, #132]	; 0x84
      __HAL_RCC_PLLI2S_SAICLK_CONFIG(PeriphClkInit->PLLI2S.PLLI2SN , PeriphClkInit->PLLI2S.PLLI2SQ , tmpreg1);
 800c11a:	6865      	ldr	r5, [r4, #4]
 800c11c:	0612      	lsls	r2, r2, #24
 800c11e:	f000 40e0 	and.w	r0, r0, #1879048192	; 0x70000000
 800c122:	ea42 1285 	orr.w	r2, r2, r5, lsl #6
 800c126:	4302      	orrs	r2, r0
 800c128:	f8c1 2084 	str.w	r2, [r1, #132]	; 0x84
      __HAL_RCC_PLLI2S_PLLSAICLKDIVQ_CONFIG(PeriphClkInit->PLLI2SDivQ);
 800c12c:	f8d1 008c 	ldr.w	r0, [r1, #140]	; 0x8c
 800c130:	69e2      	ldr	r2, [r4, #28]
 800c132:	f020 001f 	bic.w	r0, r0, #31
 800c136:	3a01      	subs	r2, #1
 800c138:	4302      	orrs	r2, r0
 800c13a:	f8c1 208c 	str.w	r2, [r1, #140]	; 0x8c
    if((PeriphClkInit->PeriphClockSelection & RCC_PERIPHCLK_PLLI2S) == RCC_PERIPHCLK_PLLI2S)
 800c13e:	065b      	lsls	r3, r3, #25
 800c140:	d509      	bpl.n	800c156 <HAL_RCCEx_PeriphCLKConfig+0xae>
      __HAL_RCC_PLLI2S_SAICLK_CONFIG(PeriphClkInit->PLLI2S.PLLI2SN, PeriphClkInit->PLLI2S.PLLI2SQ, PeriphClkInit->PLLI2S.PLLI2SR);
 800c142:	1d20      	adds	r0, r4, #4
 800c144:	c80b      	ldmia	r0, {r0, r1, r3}
 800c146:	061b      	lsls	r3, r3, #24
 800c148:	4a6b      	ldr	r2, [pc, #428]	; (800c2f8 <HAL_RCCEx_PeriphCLKConfig+0x250>)
 800c14a:	ea43 1380 	orr.w	r3, r3, r0, lsl #6
 800c14e:	ea43 7301 	orr.w	r3, r3, r1, lsl #28
 800c152:	f8c2 3084 	str.w	r3, [r2, #132]	; 0x84
    __HAL_RCC_PLLI2S_ENABLE();
 800c156:	4b67      	ldr	r3, [pc, #412]	; (800c2f4 <HAL_RCCEx_PeriphCLKConfig+0x24c>)
    while(__HAL_RCC_GET_FLAG(RCC_FLAG_PLLI2SRDY)  == RESET)
 800c158:	4e67      	ldr	r6, [pc, #412]	; (800c2f8 <HAL_RCCEx_PeriphCLKConfig+0x250>)
    __HAL_RCC_PLLI2S_ENABLE();
 800c15a:	2201      	movs	r2, #1
 800c15c:	669a      	str	r2, [r3, #104]	; 0x68
    tickstart = HAL_GetTick();
 800c15e:	f7fd faa1 	bl	80096a4 <HAL_GetTick>
 800c162:	4605      	mov	r5, r0
    while(__HAL_RCC_GET_FLAG(RCC_FLAG_PLLI2SRDY)  == RESET)
 800c164:	e004      	b.n	800c170 <HAL_RCCEx_PeriphCLKConfig+0xc8>
      if((HAL_GetTick() - tickstart ) > PLLI2S_TIMEOUT_VALUE)
 800c166:	f7fd fa9d 	bl	80096a4 <HAL_GetTick>
 800c16a:	1b40      	subs	r0, r0, r5
 800c16c:	2802      	cmp	r0, #2
 800c16e:	d812      	bhi.n	800c196 <HAL_RCCEx_PeriphCLKConfig+0xee>
    while(__HAL_RCC_GET_FLAG(RCC_FLAG_PLLI2SRDY)  == RESET)
 800c170:	6833      	ldr	r3, [r6, #0]
 800c172:	011f      	lsls	r7, r3, #4
 800c174:	d5f7      	bpl.n	800c166 <HAL_RCCEx_PeriphCLKConfig+0xbe>
  if((((PeriphClkInit->PeriphClockSelection) & RCC_PERIPHCLK_SAI_PLLSAI) == RCC_PERIPHCLK_SAI_PLLSAI) ||
 800c176:	6823      	ldr	r3, [r4, #0]
 800c178:	e79d      	b.n	800c0b6 <HAL_RCCEx_PeriphCLKConfig+0xe>
        tickstart = HAL_GetTick();
 800c17a:	f7fd fa93 	bl	80096a4 <HAL_GetTick>
          if((HAL_GetTick() - tickstart ) > RCC_LSE_TIMEOUT_VALUE)
 800c17e:	f241 3788 	movw	r7, #5000	; 0x1388
        tickstart = HAL_GetTick();
 800c182:	4606      	mov	r6, r0
        while(__HAL_RCC_GET_FLAG(RCC_FLAG_LSERDY) == RESET)
 800c184:	6f2b      	ldr	r3, [r5, #112]	; 0x70
 800c186:	079b      	lsls	r3, r3, #30
 800c188:	f100 80a5 	bmi.w	800c2d6 <HAL_RCCEx_PeriphCLKConfig+0x22e>
          if((HAL_GetTick() - tickstart ) > RCC_LSE_TIMEOUT_VALUE)
 800c18c:	f7fd fa8a 	bl	80096a4 <HAL_GetTick>
 800c190:	1b80      	subs	r0, r0, r6
 800c192:	42b8      	cmp	r0, r7
 800c194:	d9f6      	bls.n	800c184 <HAL_RCCEx_PeriphCLKConfig+0xdc>
        return HAL_TIMEOUT;
 800c196:	2003      	movs	r0, #3
}
 800c198:	b003      	add	sp, #12
 800c19a:	bdf0      	pop	{r4, r5, r6, r7, pc}
    __HAL_RCC_PLLSAI_DISABLE();
 800c19c:	4b55      	ldr	r3, [pc, #340]	; (800c2f4 <HAL_RCCEx_PeriphCLKConfig+0x24c>)
    while(__HAL_RCC_PLLSAI_GET_FLAG() != RESET)
 800c19e:	4e56      	ldr	r6, [pc, #344]	; (800c2f8 <HAL_RCCEx_PeriphCLKConfig+0x250>)
    __HAL_RCC_PLLSAI_DISABLE();
 800c1a0:	2200      	movs	r2, #0
 800c1a2:	671a      	str	r2, [r3, #112]	; 0x70
    tickstart = HAL_GetTick();
 800c1a4:	f7fd fa7e 	bl	80096a4 <HAL_GetTick>
 800c1a8:	4605      	mov	r5, r0
    while(__HAL_RCC_PLLSAI_GET_FLAG() != RESET)
 800c1aa:	e004      	b.n	800c1b6 <HAL_RCCEx_PeriphCLKConfig+0x10e>
      if((HAL_GetTick() - tickstart ) > PLLSAI_TIMEOUT_VALUE)
 800c1ac:	f7fd fa7a 	bl	80096a4 <HAL_GetTick>
 800c1b0:	1b43      	subs	r3, r0, r5
 800c1b2:	2b02      	cmp	r3, #2
 800c1b4:	d8ef      	bhi.n	800c196 <HAL_RCCEx_PeriphCLKConfig+0xee>
    while(__HAL_RCC_PLLSAI_GET_FLAG() != RESET)
 800c1b6:	6833      	ldr	r3, [r6, #0]
 800c1b8:	0098      	lsls	r0, r3, #2
 800c1ba:	d4f7      	bmi.n	800c1ac <HAL_RCCEx_PeriphCLKConfig+0x104>
    if(((PeriphClkInit->PeriphClockSelection) & RCC_PERIPHCLK_SAI_PLLSAI) == (RCC_PERIPHCLK_SAI_PLLSAI))
 800c1bc:	6822      	ldr	r2, [r4, #0]
 800c1be:	0751      	lsls	r1, r2, #29
 800c1c0:	d515      	bpl.n	800c1ee <HAL_RCCEx_PeriphCLKConfig+0x146>
      __HAL_RCC_PLLSAI_CONFIG(PeriphClkInit->PLLSAI.PLLSAIN , PeriphClkInit->PLLSAI.PLLSAIQ, tmpreg1);
 800c1c2:	6963      	ldr	r3, [r4, #20]
      tmpreg1 = ((RCC->PLLSAICFGR & RCC_PLLSAICFGR_PLLSAIR) >> RCC_PLLSAICFGR_PLLSAIR_Pos);
 800c1c4:	f8d6 1088 	ldr.w	r1, [r6, #136]	; 0x88
      __HAL_RCC_PLLSAI_CONFIG(PeriphClkInit->PLLSAI.PLLSAIN , PeriphClkInit->PLLSAI.PLLSAIQ, tmpreg1);
 800c1c8:	6920      	ldr	r0, [r4, #16]
 800c1ca:	061b      	lsls	r3, r3, #24
 800c1cc:	f001 41e0 	and.w	r1, r1, #1879048192	; 0x70000000
 800c1d0:	ea43 1380 	orr.w	r3, r3, r0, lsl #6
 800c1d4:	430b      	orrs	r3, r1
 800c1d6:	f8c6 3088 	str.w	r3, [r6, #136]	; 0x88
      __HAL_RCC_PLLSAI_PLLSAICLKDIVQ_CONFIG(PeriphClkInit->PLLSAIDivQ);
 800c1da:	f8d6 308c 	ldr.w	r3, [r6, #140]	; 0x8c
 800c1de:	6a21      	ldr	r1, [r4, #32]
 800c1e0:	f423 53f8 	bic.w	r3, r3, #7936	; 0x1f00
 800c1e4:	3901      	subs	r1, #1
 800c1e6:	ea43 2301 	orr.w	r3, r3, r1, lsl #8
 800c1ea:	f8c6 308c 	str.w	r3, [r6, #140]	; 0x8c
    if(((PeriphClkInit->PeriphClockSelection) & RCC_PERIPHCLK_LTDC) == (RCC_PERIPHCLK_LTDC))
 800c1ee:	0713      	lsls	r3, r2, #28
 800c1f0:	d514      	bpl.n	800c21c <HAL_RCCEx_PeriphCLKConfig+0x174>
      tmpreg1 = ((RCC->PLLSAICFGR & RCC_PLLSAICFGR_PLLSAIQ) >> RCC_PLLSAICFGR_PLLSAIQ_Pos);
 800c1f2:	4a41      	ldr	r2, [pc, #260]	; (800c2f8 <HAL_RCCEx_PeriphCLKConfig+0x250>)
      __HAL_RCC_PLLSAI_CONFIG(PeriphClkInit->PLLSAI.PLLSAIN , tmpreg1, PeriphClkInit->PLLSAI.PLLSAIR);
 800c1f4:	69a3      	ldr	r3, [r4, #24]
      tmpreg1 = ((RCC->PLLSAICFGR & RCC_PLLSAICFGR_PLLSAIQ) >> RCC_PLLSAICFGR_PLLSAIQ_Pos);
 800c1f6:	f8d2 1088 	ldr.w	r1, [r2, #136]	; 0x88
      __HAL_RCC_PLLSAI_CONFIG(PeriphClkInit->PLLSAI.PLLSAIN , tmpreg1, PeriphClkInit->PLLSAI.PLLSAIR);
 800c1fa:	6920      	ldr	r0, [r4, #16]
 800c1fc:	071b      	lsls	r3, r3, #28
 800c1fe:	f001 6170 	and.w	r1, r1, #251658240	; 0xf000000
 800c202:	ea43 1380 	orr.w	r3, r3, r0, lsl #6
 800c206:	430b      	orrs	r3, r1
 800c208:	f8c2 3088 	str.w	r3, [r2, #136]	; 0x88
      __HAL_RCC_PLLSAI_PLLSAICLKDIVR_CONFIG(PeriphClkInit->PLLSAIDivR);
 800c20c:	f8d2 308c 	ldr.w	r3, [r2, #140]	; 0x8c
 800c210:	6a61      	ldr	r1, [r4, #36]	; 0x24
 800c212:	f423 3340 	bic.w	r3, r3, #196608	; 0x30000
 800c216:	430b      	orrs	r3, r1
 800c218:	f8c2 308c 	str.w	r3, [r2, #140]	; 0x8c
    __HAL_RCC_PLLSAI_ENABLE();
 800c21c:	4b35      	ldr	r3, [pc, #212]	; (800c2f4 <HAL_RCCEx_PeriphCLKConfig+0x24c>)
    while(__HAL_RCC_PLLSAI_GET_FLAG() == RESET)
 800c21e:	4e36      	ldr	r6, [pc, #216]	; (800c2f8 <HAL_RCCEx_PeriphCLKConfig+0x250>)
    __HAL_RCC_PLLSAI_ENABLE();
 800c220:	2201      	movs	r2, #1
 800c222:	671a      	str	r2, [r3, #112]	; 0x70
    tickstart = HAL_GetTick();
 800c224:	f7fd fa3e 	bl	80096a4 <HAL_GetTick>
 800c228:	4605      	mov	r5, r0
    while(__HAL_RCC_PLLSAI_GET_FLAG() == RESET)
 800c22a:	e004      	b.n	800c236 <HAL_RCCEx_PeriphCLKConfig+0x18e>
      if((HAL_GetTick() - tickstart ) > PLLSAI_TIMEOUT_VALUE)
 800c22c:	f7fd fa3a 	bl	80096a4 <HAL_GetTick>
 800c230:	1b40      	subs	r0, r0, r5
 800c232:	2802      	cmp	r0, #2
 800c234:	d8af      	bhi.n	800c196 <HAL_RCCEx_PeriphCLKConfig+0xee>
    while(__HAL_RCC_PLLSAI_GET_FLAG() == RESET)
 800c236:	6833      	ldr	r3, [r6, #0]
 800c238:	009f      	lsls	r7, r3, #2
 800c23a:	d5f7      	bpl.n	800c22c <HAL_RCCEx_PeriphCLKConfig+0x184>
  if(((PeriphClkInit->PeriphClockSelection) & RCC_PERIPHCLK_RTC) == (RCC_PERIPHCLK_RTC))
 800c23c:	6823      	ldr	r3, [r4, #0]
 800c23e:	e73d      	b.n	800c0bc <HAL_RCCEx_PeriphCLKConfig+0x14>
  return HAL_OK;
 800c240:	4618      	mov	r0, r3
}
 800c242:	b003      	add	sp, #12
 800c244:	bdf0      	pop	{r4, r5, r6, r7, pc}
    __HAL_RCC_PWR_CLK_ENABLE();
 800c246:	4b2c      	ldr	r3, [pc, #176]	; (800c2f8 <HAL_RCCEx_PeriphCLKConfig+0x250>)
    PWR->CR |= PWR_CR_DBP;
 800c248:	4d2c      	ldr	r5, [pc, #176]	; (800c2fc <HAL_RCCEx_PeriphCLKConfig+0x254>)
    __HAL_RCC_PWR_CLK_ENABLE();
 800c24a:	2200      	movs	r2, #0
 800c24c:	9201      	str	r2, [sp, #4]
 800c24e:	6c1a      	ldr	r2, [r3, #64]	; 0x40
 800c250:	f042 5280 	orr.w	r2, r2, #268435456	; 0x10000000
 800c254:	641a      	str	r2, [r3, #64]	; 0x40
 800c256:	6c1b      	ldr	r3, [r3, #64]	; 0x40
 800c258:	f003 5380 	and.w	r3, r3, #268435456	; 0x10000000
 800c25c:	9301      	str	r3, [sp, #4]
 800c25e:	9b01      	ldr	r3, [sp, #4]
    PWR->CR |= PWR_CR_DBP;
 800c260:	682b      	ldr	r3, [r5, #0]
 800c262:	f443 7380 	orr.w	r3, r3, #256	; 0x100
 800c266:	602b      	str	r3, [r5, #0]
    tickstart = HAL_GetTick();
 800c268:	f7fd fa1c 	bl	80096a4 <HAL_GetTick>
 800c26c:	4606      	mov	r6, r0
    while((PWR->CR & PWR_CR_DBP) == RESET)
 800c26e:	e004      	b.n	800c27a <HAL_RCCEx_PeriphCLKConfig+0x1d2>
      if((HAL_GetTick() - tickstart ) > RCC_DBP_TIMEOUT_VALUE)
 800c270:	f7fd fa18 	bl	80096a4 <HAL_GetTick>
 800c274:	1b83      	subs	r3, r0, r6
 800c276:	2b02      	cmp	r3, #2
 800c278:	d88d      	bhi.n	800c196 <HAL_RCCEx_PeriphCLKConfig+0xee>
    while((PWR->CR & PWR_CR_DBP) == RESET)
 800c27a:	682b      	ldr	r3, [r5, #0]
 800c27c:	05d9      	lsls	r1, r3, #23
 800c27e:	d5f7      	bpl.n	800c270 <HAL_RCCEx_PeriphCLKConfig+0x1c8>
    tmpreg1 = (RCC->BDCR & RCC_BDCR_RTCSEL);
 800c280:	4d1d      	ldr	r5, [pc, #116]	; (800c2f8 <HAL_RCCEx_PeriphCLKConfig+0x250>)
    if((tmpreg1 != 0x00000000U) && ((tmpreg1) != (PeriphClkInit->RTCClockSelection & RCC_BDCR_RTCSEL)))
 800c282:	6aa3      	ldr	r3, [r4, #40]	; 0x28
    tmpreg1 = (RCC->BDCR & RCC_BDCR_RTCSEL);
 800c284:	6f2a      	ldr	r2, [r5, #112]	; 0x70
    if((tmpreg1 != 0x00000000U) && ((tmpreg1) != (PeriphClkInit->RTCClockSelection & RCC_BDCR_RTCSEL)))
 800c286:	f412 7240 	ands.w	r2, r2, #768	; 0x300
 800c28a:	d111      	bne.n	800c2b0 <HAL_RCCEx_PeriphCLKConfig+0x208>
    __HAL_RCC_RTC_CONFIG(PeriphClkInit->RTCClockSelection);
 800c28c:	f403 7240 	and.w	r2, r3, #768	; 0x300
 800c290:	f5b2 7f40 	cmp.w	r2, #768	; 0x300
 800c294:	d021      	beq.n	800c2da <HAL_RCCEx_PeriphCLKConfig+0x232>
 800c296:	4918      	ldr	r1, [pc, #96]	; (800c2f8 <HAL_RCCEx_PeriphCLKConfig+0x250>)
 800c298:	688a      	ldr	r2, [r1, #8]
 800c29a:	f422 12f8 	bic.w	r2, r2, #2031616	; 0x1f0000
 800c29e:	608a      	str	r2, [r1, #8]
 800c2a0:	4a15      	ldr	r2, [pc, #84]	; (800c2f8 <HAL_RCCEx_PeriphCLKConfig+0x250>)
 800c2a2:	6f11      	ldr	r1, [r2, #112]	; 0x70
 800c2a4:	f3c3 030b 	ubfx	r3, r3, #0, #12
 800c2a8:	430b      	orrs	r3, r1
 800c2aa:	6713      	str	r3, [r2, #112]	; 0x70
  if(((PeriphClkInit->PeriphClockSelection) & RCC_PERIPHCLK_TIM) == (RCC_PERIPHCLK_TIM))
 800c2ac:	6823      	ldr	r3, [r4, #0]
 800c2ae:	e708      	b.n	800c0c2 <HAL_RCCEx_PeriphCLKConfig+0x1a>
    if((tmpreg1 != 0x00000000U) && ((tmpreg1) != (PeriphClkInit->RTCClockSelection & RCC_BDCR_RTCSEL)))
 800c2b0:	f403 7140 	and.w	r1, r3, #768	; 0x300
 800c2b4:	4291      	cmp	r1, r2
 800c2b6:	d0eb      	beq.n	800c290 <HAL_RCCEx_PeriphCLKConfig+0x1e8>
      tmpreg1 = (RCC->BDCR & ~(RCC_BDCR_RTCSEL));
 800c2b8:	6f2b      	ldr	r3, [r5, #112]	; 0x70
      __HAL_RCC_BACKUPRESET_FORCE();
 800c2ba:	4a0e      	ldr	r2, [pc, #56]	; (800c2f4 <HAL_RCCEx_PeriphCLKConfig+0x24c>)
 800c2bc:	2101      	movs	r1, #1
 800c2be:	f8c2 1e40 	str.w	r1, [r2, #3648]	; 0xe40
      tmpreg1 = (RCC->BDCR & ~(RCC_BDCR_RTCSEL));
 800c2c2:	f423 7340 	bic.w	r3, r3, #768	; 0x300
      __HAL_RCC_BACKUPRESET_RELEASE();
 800c2c6:	2100      	movs	r1, #0
 800c2c8:	f8c2 1e40 	str.w	r1, [r2, #3648]	; 0xe40
      RCC->BDCR = tmpreg1;
 800c2cc:	672b      	str	r3, [r5, #112]	; 0x70
      if(HAL_IS_BIT_SET(RCC->BDCR, RCC_BDCR_LSEON))
 800c2ce:	6f2b      	ldr	r3, [r5, #112]	; 0x70
 800c2d0:	07da      	lsls	r2, r3, #31
 800c2d2:	f53f af52 	bmi.w	800c17a <HAL_RCCEx_PeriphCLKConfig+0xd2>
    __HAL_RCC_RTC_CONFIG(PeriphClkInit->RTCClockSelection);
 800c2d6:	6aa3      	ldr	r3, [r4, #40]	; 0x28
 800c2d8:	e7d8      	b.n	800c28c <HAL_RCCEx_PeriphCLKConfig+0x1e4>
 800c2da:	4807      	ldr	r0, [pc, #28]	; (800c2f8 <HAL_RCCEx_PeriphCLKConfig+0x250>)
 800c2dc:	6882      	ldr	r2, [r0, #8]
 800c2de:	f023 4170 	bic.w	r1, r3, #4026531840	; 0xf0000000
 800c2e2:	f421 7140 	bic.w	r1, r1, #768	; 0x300
 800c2e6:	f422 12f8 	bic.w	r2, r2, #2031616	; 0x1f0000
 800c2ea:	430a      	orrs	r2, r1
 800c2ec:	6082      	str	r2, [r0, #8]
 800c2ee:	e7d7      	b.n	800c2a0 <HAL_RCCEx_PeriphCLKConfig+0x1f8>
 800c2f0:	42471000 	.word	0x42471000
 800c2f4:	42470000 	.word	0x42470000
 800c2f8:	40023800 	.word	0x40023800
 800c2fc:	40007000 	.word	0x40007000

0800c300 <HAL_SDRAM_Init>:
  * @retval HAL status
  */
HAL_StatusTypeDef HAL_SDRAM_Init(SDRAM_HandleTypeDef *hsdram, FMC_SDRAM_TimingTypeDef *Timing)
{
  /* Check the SDRAM handle parameter */
  if (hsdram == NULL)
 800c300:	b1f0      	cbz	r0, 800c340 <HAL_SDRAM_Init+0x40>
{
 800c302:	b538      	push	{r3, r4, r5, lr}
  {
    return HAL_ERROR;
  }

  if (hsdram->State == HAL_SDRAM_STATE_RESET)
 800c304:	f890 302c 	ldrb.w	r3, [r0, #44]	; 0x2c
 800c308:	460d      	mov	r5, r1
 800c30a:	4604      	mov	r4, r0
 800c30c:	f003 02ff 	and.w	r2, r3, #255	; 0xff
 800c310:	b18b      	cbz	r3, 800c336 <HAL_SDRAM_Init+0x36>

  /* Initialize the SDRAM controller state */
  hsdram->State = HAL_SDRAM_STATE_BUSY;

  /* Initialize SDRAM control Interface */
  (void)FMC_SDRAM_Init(hsdram->Instance, &(hsdram->Init));
 800c312:	4621      	mov	r1, r4
  hsdram->State = HAL_SDRAM_STATE_BUSY;
 800c314:	2302      	movs	r3, #2
 800c316:	f884 302c 	strb.w	r3, [r4, #44]	; 0x2c
  (void)FMC_SDRAM_Init(hsdram->Instance, &(hsdram->Init));
 800c31a:	f851 0b04 	ldr.w	r0, [r1], #4
 800c31e:	f000 ffcd 	bl	800d2bc <FMC_SDRAM_Init>

  /* Initialize SDRAM timing Interface */
  (void)FMC_SDRAM_Timing_Init(hsdram->Instance, Timing, hsdram->Init.SDBank);
 800c322:	e9d4 0200 	ldrd	r0, r2, [r4]
 800c326:	4629      	mov	r1, r5
 800c328:	f001 f806 	bl	800d338 <FMC_SDRAM_Timing_Init>
  /* Update the SDRAM controller state */
  hsdram->State = HAL_SDRAM_STATE_READY;
 800c32c:	2301      	movs	r3, #1
 800c32e:	f884 302c 	strb.w	r3, [r4, #44]	; 0x2c

  return HAL_OK;
 800c332:	2000      	movs	r0, #0
}
 800c334:	bd38      	pop	{r3, r4, r5, pc}
    hsdram->Lock = HAL_UNLOCKED;
 800c336:	f880 202d 	strb.w	r2, [r0, #45]	; 0x2d
    HAL_SDRAM_MspInit(hsdram);
 800c33a:	f7f5 fb17 	bl	800196c <HAL_SDRAM_MspInit>
 800c33e:	e7e8      	b.n	800c312 <HAL_SDRAM_Init+0x12>
    return HAL_ERROR;
 800c340:	2001      	movs	r0, #1
}
 800c342:	4770      	bx	lr

0800c344 <HAL_SDRAM_SendCommand>:
  * @param  Timeout Timeout duration
  * @retval HAL status
  */
HAL_StatusTypeDef HAL_SDRAM_SendCommand(SDRAM_HandleTypeDef *hsdram, FMC_SDRAM_CommandTypeDef *Command,
                                        uint32_t Timeout)
{
 800c344:	b570      	push	{r4, r5, r6, lr}
  HAL_SDRAM_StateTypeDef state = hsdram->State;
 800c346:	f890 302c 	ldrb.w	r3, [r0, #44]	; 0x2c

  /* Check the SDRAM controller state */
  if (state == HAL_SDRAM_STATE_BUSY)
 800c34a:	2b02      	cmp	r3, #2
{
 800c34c:	4605      	mov	r5, r0
  HAL_SDRAM_StateTypeDef state = hsdram->State;
 800c34e:	b2d8      	uxtb	r0, r3
  if (state == HAL_SDRAM_STATE_BUSY)
 800c350:	d004      	beq.n	800c35c <HAL_SDRAM_SendCommand+0x18>
  {
    return HAL_BUSY;
  }
  else if ((state == HAL_SDRAM_STATE_READY) || (state == HAL_SDRAM_STATE_PRECHARGED))
 800c352:	f000 04fb 	and.w	r4, r0, #251	; 0xfb
 800c356:	2c01      	cmp	r4, #1
 800c358:	d001      	beq.n	800c35e <HAL_SDRAM_SendCommand+0x1a>
      hsdram->State = HAL_SDRAM_STATE_READY;
    }
  }
  else
  {
    return HAL_ERROR;
 800c35a:	2001      	movs	r0, #1
  }

  return HAL_OK;
}
 800c35c:	bd70      	pop	{r4, r5, r6, pc}
    hsdram->State = HAL_SDRAM_STATE_BUSY;
 800c35e:	460e      	mov	r6, r1
 800c360:	2302      	movs	r3, #2
 800c362:	f885 302c 	strb.w	r3, [r5, #44]	; 0x2c
    (void)FMC_SDRAM_SendCommand(hsdram->Instance, Command, Timeout);
 800c366:	6828      	ldr	r0, [r5, #0]
 800c368:	f001 f832 	bl	800d3d0 <FMC_SDRAM_SendCommand>
    if (Command->CommandMode == FMC_SDRAM_CMD_PALL)
 800c36c:	6833      	ldr	r3, [r6, #0]
 800c36e:	2b02      	cmp	r3, #2
      hsdram->State = HAL_SDRAM_STATE_PRECHARGED;
 800c370:	bf06      	itte	eq
 800c372:	2305      	moveq	r3, #5
 800c374:	f885 302c 	strbeq.w	r3, [r5, #44]	; 0x2c
      hsdram->State = HAL_SDRAM_STATE_READY;
 800c378:	f885 402c 	strbne.w	r4, [r5, #44]	; 0x2c
  return HAL_OK;
 800c37c:	2000      	movs	r0, #0
}
 800c37e:	bd70      	pop	{r4, r5, r6, pc}

0800c380 <HAL_SDRAM_ProgramRefreshRate>:
  *                the configuration information for SDRAM module.
  * @param  RefreshRate The SDRAM refresh rate value
  * @retval HAL status
  */
HAL_StatusTypeDef HAL_SDRAM_ProgramRefreshRate(SDRAM_HandleTypeDef *hsdram, uint32_t RefreshRate)
{
 800c380:	b538      	push	{r3, r4, r5, lr}
  /* Check the SDRAM controller state */
  if (hsdram->State == HAL_SDRAM_STATE_BUSY)
 800c382:	f890 302c 	ldrb.w	r3, [r0, #44]	; 0x2c
 800c386:	2b02      	cmp	r3, #2
{
 800c388:	4604      	mov	r4, r0
  if (hsdram->State == HAL_SDRAM_STATE_BUSY)
 800c38a:	b2d8      	uxtb	r0, r3
 800c38c:	d005      	beq.n	800c39a <HAL_SDRAM_ProgramRefreshRate+0x1a>
  {
    return HAL_BUSY;
  }
  else if (hsdram->State == HAL_SDRAM_STATE_READY)
 800c38e:	f894 302c 	ldrb.w	r3, [r4, #44]	; 0x2c
 800c392:	2b01      	cmp	r3, #1
 800c394:	b2dd      	uxtb	r5, r3
 800c396:	d001      	beq.n	800c39c <HAL_SDRAM_ProgramRefreshRate+0x1c>
    /* Update the SDRAM state */
    hsdram->State = HAL_SDRAM_STATE_READY;
  }
  else
  {
    return HAL_ERROR;
 800c398:	2001      	movs	r0, #1
  }

  return HAL_OK;
}
 800c39a:	bd38      	pop	{r3, r4, r5, pc}
    hsdram->State = HAL_SDRAM_STATE_BUSY;
 800c39c:	2302      	movs	r3, #2
    (void)FMC_SDRAM_ProgramRefreshRate(hsdram->Instance, RefreshRate);
 800c39e:	6820      	ldr	r0, [r4, #0]
    hsdram->State = HAL_SDRAM_STATE_BUSY;
 800c3a0:	f884 302c 	strb.w	r3, [r4, #44]	; 0x2c
    (void)FMC_SDRAM_ProgramRefreshRate(hsdram->Instance, RefreshRate);
 800c3a4:	f001 f83e 	bl	800d424 <FMC_SDRAM_ProgramRefreshRate>
    hsdram->State = HAL_SDRAM_STATE_READY;
 800c3a8:	f884 502c 	strb.w	r5, [r4, #44]	; 0x2c
  return HAL_OK;
 800c3ac:	2000      	movs	r0, #0
}
 800c3ae:	bd38      	pop	{r3, r4, r5, pc}

0800c3b0 <SPI_WaitFlagStateUntilTimeout.constprop.0>:
  * @param  State flag state to check
  * @param  Timeout Timeout duration
  * @param  Tickstart tick start value
  * @retval HAL status
  */
static HAL_StatusTypeDef SPI_WaitFlagStateUntilTimeout(SPI_HandleTypeDef *hspi, uint32_t Flag, FlagStatus State,
 800c3b0:	e92d 41f0 	stmdb	sp!, {r4, r5, r6, r7, r8, lr}
 800c3b4:	b082      	sub	sp, #8
 800c3b6:	461d      	mov	r5, r3
 800c3b8:	4616      	mov	r6, r2
 800c3ba:	460c      	mov	r4, r1
 800c3bc:	4607      	mov	r7, r0
  __IO uint32_t count;
  uint32_t tmp_timeout;
  uint32_t tmp_tickstart;

  /* Adjust Timeout value  in case of end of transfer */
  tmp_timeout   = Timeout - (HAL_GetTick() - Tickstart);
 800c3be:	f7fd f971 	bl	80096a4 <HAL_GetTick>
 800c3c2:	4435      	add	r5, r6
 800c3c4:	1a2d      	subs	r5, r5, r0
  tmp_tickstart = HAL_GetTick();
 800c3c6:	f7fd f96d 	bl	80096a4 <HAL_GetTick>

  /* Calculate Timeout based on a software loop to avoid blocking issue if Systick is disabled */
  count = tmp_timeout * ((SystemCoreClock * 32U) >> 20U);
 800c3ca:	4b27      	ldr	r3, [pc, #156]	; (800c468 <SPI_WaitFlagStateUntilTimeout.constprop.0+0xb8>)
 800c3cc:	681b      	ldr	r3, [r3, #0]
 800c3ce:	f3c3 33cb 	ubfx	r3, r3, #15, #12
 800c3d2:	fb05 f303 	mul.w	r3, r5, r3
  tmp_tickstart = HAL_GetTick();
 800c3d6:	4680      	mov	r8, r0
  count = tmp_timeout * ((SystemCoreClock * 32U) >> 20U);
 800c3d8:	9301      	str	r3, [sp, #4]

  while ((__HAL_SPI_GET_FLAG(hspi, Flag) ? SET : RESET) != State)
 800c3da:	1c73      	adds	r3, r6, #1
 800c3dc:	6839      	ldr	r1, [r7, #0]
 800c3de:	d107      	bne.n	800c3f0 <SPI_WaitFlagStateUntilTimeout.constprop.0+0x40>
 800c3e0:	688b      	ldr	r3, [r1, #8]
 800c3e2:	ea34 0303 	bics.w	r3, r4, r3
 800c3e6:	d0fb      	beq.n	800c3e0 <SPI_WaitFlagStateUntilTimeout.constprop.0+0x30>
      }
      count--;
    }
  }

  return HAL_OK;
 800c3e8:	2000      	movs	r0, #0
}
 800c3ea:	b002      	add	sp, #8
 800c3ec:	e8bd 81f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, pc}
  while ((__HAL_SPI_GET_FLAG(hspi, Flag) ? SET : RESET) != State)
 800c3f0:	688b      	ldr	r3, [r1, #8]
 800c3f2:	ea34 0303 	bics.w	r3, r4, r3
 800c3f6:	d1f7      	bne.n	800c3e8 <SPI_WaitFlagStateUntilTimeout.constprop.0+0x38>
      if (((HAL_GetTick() - tmp_tickstart) >= tmp_timeout) || (tmp_timeout == 0U))
 800c3f8:	f7fd f954 	bl	80096a4 <HAL_GetTick>
 800c3fc:	eba0 0008 	sub.w	r0, r0, r8
 800c400:	42a8      	cmp	r0, r5
 800c402:	d208      	bcs.n	800c416 <SPI_WaitFlagStateUntilTimeout.constprop.0+0x66>
      if (count == 0U)
 800c404:	9b01      	ldr	r3, [sp, #4]
        tmp_timeout = 0U;
 800c406:	2b00      	cmp	r3, #0
      count--;
 800c408:	9b01      	ldr	r3, [sp, #4]
 800c40a:	f103 33ff 	add.w	r3, r3, #4294967295
        tmp_timeout = 0U;
 800c40e:	bf08      	it	eq
 800c410:	2500      	moveq	r5, #0
      count--;
 800c412:	9301      	str	r3, [sp, #4]
 800c414:	e7e1      	b.n	800c3da <SPI_WaitFlagStateUntilTimeout.constprop.0+0x2a>
        if ((hspi->Init.Mode == SPI_MODE_MASTER) && ((hspi->Init.Direction == SPI_DIRECTION_1LINE)
 800c416:	e9d7 3100 	ldrd	r3, r1, [r7]
        __HAL_SPI_DISABLE_IT(hspi, (SPI_IT_TXE | SPI_IT_RXNE | SPI_IT_ERR));
 800c41a:	685a      	ldr	r2, [r3, #4]
        if ((hspi->Init.Mode == SPI_MODE_MASTER) && ((hspi->Init.Direction == SPI_DIRECTION_1LINE)
 800c41c:	f5b1 7f82 	cmp.w	r1, #260	; 0x104
        __HAL_SPI_DISABLE_IT(hspi, (SPI_IT_TXE | SPI_IT_RXNE | SPI_IT_ERR));
 800c420:	f022 02e0 	bic.w	r2, r2, #224	; 0xe0
 800c424:	605a      	str	r2, [r3, #4]
        if ((hspi->Init.Mode == SPI_MODE_MASTER) && ((hspi->Init.Direction == SPI_DIRECTION_1LINE)
 800c426:	d013      	beq.n	800c450 <SPI_WaitFlagStateUntilTimeout.constprop.0+0xa0>
        if (hspi->Init.CRCCalculation == SPI_CRCCALCULATION_ENABLE)
 800c428:	6aba      	ldr	r2, [r7, #40]	; 0x28
 800c42a:	f5b2 5f00 	cmp.w	r2, #8192	; 0x2000
 800c42e:	d107      	bne.n	800c440 <SPI_WaitFlagStateUntilTimeout.constprop.0+0x90>
          SPI_RESET_CRC(hspi);
 800c430:	681a      	ldr	r2, [r3, #0]
 800c432:	f422 5200 	bic.w	r2, r2, #8192	; 0x2000
 800c436:	601a      	str	r2, [r3, #0]
 800c438:	681a      	ldr	r2, [r3, #0]
 800c43a:	f442 5200 	orr.w	r2, r2, #8192	; 0x2000
 800c43e:	601a      	str	r2, [r3, #0]
        hspi->State = HAL_SPI_STATE_READY;
 800c440:	2201      	movs	r2, #1
        __HAL_UNLOCK(hspi);
 800c442:	2300      	movs	r3, #0
        hspi->State = HAL_SPI_STATE_READY;
 800c444:	f887 2051 	strb.w	r2, [r7, #81]	; 0x51
        __HAL_UNLOCK(hspi);
 800c448:	f887 3050 	strb.w	r3, [r7, #80]	; 0x50
 800c44c:	2003      	movs	r0, #3
 800c44e:	e7cc      	b.n	800c3ea <SPI_WaitFlagStateUntilTimeout.constprop.0+0x3a>
        if ((hspi->Init.Mode == SPI_MODE_MASTER) && ((hspi->Init.Direction == SPI_DIRECTION_1LINE)
 800c450:	68ba      	ldr	r2, [r7, #8]
 800c452:	f5b2 4f00 	cmp.w	r2, #32768	; 0x8000
 800c456:	d002      	beq.n	800c45e <SPI_WaitFlagStateUntilTimeout.constprop.0+0xae>
                                                     || (hspi->Init.Direction == SPI_DIRECTION_2LINES_RXONLY)))
 800c458:	f5b2 6f80 	cmp.w	r2, #1024	; 0x400
 800c45c:	d1e4      	bne.n	800c428 <SPI_WaitFlagStateUntilTimeout.constprop.0+0x78>
          __HAL_SPI_DISABLE(hspi);
 800c45e:	681a      	ldr	r2, [r3, #0]
 800c460:	f022 0240 	bic.w	r2, r2, #64	; 0x40
 800c464:	601a      	str	r2, [r3, #0]
 800c466:	e7df      	b.n	800c428 <SPI_WaitFlagStateUntilTimeout.constprop.0+0x78>
 800c468:	20000078 	.word	0x20000078

0800c46c <SPI_EndRxTransaction>:
  * @param  Timeout Timeout duration
  * @param  Tickstart tick start value
  * @retval HAL status
  */
static HAL_StatusTypeDef SPI_EndRxTransaction(SPI_HandleTypeDef *hspi,  uint32_t Timeout, uint32_t Tickstart)
{
 800c46c:	b538      	push	{r3, r4, r5, lr}
 800c46e:	4613      	mov	r3, r2
  if ((hspi->Init.Mode == SPI_MODE_MASTER) && ((hspi->Init.Direction == SPI_DIRECTION_1LINE)
 800c470:	6842      	ldr	r2, [r0, #4]
 800c472:	f5b2 7f82 	cmp.w	r2, #260	; 0x104
{
 800c476:	4604      	mov	r4, r0
  if ((hspi->Init.Mode == SPI_MODE_MASTER) && ((hspi->Init.Direction == SPI_DIRECTION_1LINE)
 800c478:	d006      	beq.n	800c488 <SPI_EndRxTransaction+0x1c>
    }
  }
  else
  {
    /* Wait the RXNE reset */
    if (SPI_WaitFlagStateUntilTimeout(hspi, SPI_FLAG_RXNE, RESET, Timeout, Tickstart) != HAL_OK)
 800c47a:	460a      	mov	r2, r1
 800c47c:	2101      	movs	r1, #1
 800c47e:	f7ff ff97 	bl	800c3b0 <SPI_WaitFlagStateUntilTimeout.constprop.0>
 800c482:	b978      	cbnz	r0, 800c4a4 <SPI_EndRxTransaction+0x38>
    {
      SET_BIT(hspi->ErrorCode, HAL_SPI_ERROR_FLAG);
      return HAL_TIMEOUT;
    }
  }
  return HAL_OK;
 800c484:	2000      	movs	r0, #0
}
 800c486:	bd38      	pop	{r3, r4, r5, pc}
  if ((hspi->Init.Mode == SPI_MODE_MASTER) && ((hspi->Init.Direction == SPI_DIRECTION_1LINE)
 800c488:	6882      	ldr	r2, [r0, #8]
 800c48a:	f5b2 4f00 	cmp.w	r2, #32768	; 0x8000
 800c48e:	d01c      	beq.n	800c4ca <SPI_EndRxTransaction+0x5e>
                                               || (hspi->Init.Direction == SPI_DIRECTION_2LINES_RXONLY)))
 800c490:	f5b2 6f80 	cmp.w	r2, #1024	; 0x400
 800c494:	d00c      	beq.n	800c4b0 <SPI_EndRxTransaction+0x44>
      if (SPI_WaitFlagStateUntilTimeout(hspi, SPI_FLAG_BSY, RESET, Timeout, Tickstart) != HAL_OK)
 800c496:	460a      	mov	r2, r1
 800c498:	4620      	mov	r0, r4
 800c49a:	2180      	movs	r1, #128	; 0x80
 800c49c:	f7ff ff88 	bl	800c3b0 <SPI_WaitFlagStateUntilTimeout.constprop.0>
 800c4a0:	2800      	cmp	r0, #0
 800c4a2:	d0ef      	beq.n	800c484 <SPI_EndRxTransaction+0x18>
      SET_BIT(hspi->ErrorCode, HAL_SPI_ERROR_FLAG);
 800c4a4:	6d63      	ldr	r3, [r4, #84]	; 0x54
 800c4a6:	f043 0320 	orr.w	r3, r3, #32
      return HAL_TIMEOUT;
 800c4aa:	2003      	movs	r0, #3
      SET_BIT(hspi->ErrorCode, HAL_SPI_ERROR_FLAG);
 800c4ac:	6563      	str	r3, [r4, #84]	; 0x54
}
 800c4ae:	bd38      	pop	{r3, r4, r5, pc}
    __HAL_SPI_DISABLE(hspi);
 800c4b0:	6805      	ldr	r5, [r0, #0]
      if (SPI_WaitFlagStateUntilTimeout(hspi, SPI_FLAG_RXNE, RESET, Timeout, Tickstart) != HAL_OK)
 800c4b2:	460a      	mov	r2, r1
    __HAL_SPI_DISABLE(hspi);
 800c4b4:	6829      	ldr	r1, [r5, #0]
 800c4b6:	f021 0140 	bic.w	r1, r1, #64	; 0x40
 800c4ba:	6029      	str	r1, [r5, #0]
      if (SPI_WaitFlagStateUntilTimeout(hspi, SPI_FLAG_RXNE, RESET, Timeout, Tickstart) != HAL_OK)
 800c4bc:	2101      	movs	r1, #1
 800c4be:	f7ff ff77 	bl	800c3b0 <SPI_WaitFlagStateUntilTimeout.constprop.0>
 800c4c2:	2800      	cmp	r0, #0
 800c4c4:	d1ee      	bne.n	800c4a4 <SPI_EndRxTransaction+0x38>
  return HAL_OK;
 800c4c6:	2000      	movs	r0, #0
 800c4c8:	e7dd      	b.n	800c486 <SPI_EndRxTransaction+0x1a>
    __HAL_SPI_DISABLE(hspi);
 800c4ca:	6800      	ldr	r0, [r0, #0]
 800c4cc:	6802      	ldr	r2, [r0, #0]
 800c4ce:	f022 0240 	bic.w	r2, r2, #64	; 0x40
 800c4d2:	6002      	str	r2, [r0, #0]
      if (SPI_WaitFlagStateUntilTimeout(hspi, SPI_FLAG_BSY, RESET, Timeout, Tickstart) != HAL_OK)
 800c4d4:	460a      	mov	r2, r1
 800c4d6:	4620      	mov	r0, r4
 800c4d8:	2180      	movs	r1, #128	; 0x80
 800c4da:	f7ff ff69 	bl	800c3b0 <SPI_WaitFlagStateUntilTimeout.constprop.0>
 800c4de:	2800      	cmp	r0, #0
 800c4e0:	d0d0      	beq.n	800c484 <SPI_EndRxTransaction+0x18>
 800c4e2:	e7df      	b.n	800c4a4 <SPI_EndRxTransaction+0x38>

0800c4e4 <HAL_SPI_Init>:
  if (hspi == NULL)
 800c4e4:	2800      	cmp	r0, #0
 800c4e6:	d05c      	beq.n	800c5a2 <HAL_SPI_Init+0xbe>
{
 800c4e8:	b570      	push	{r4, r5, r6, lr}
 800c4ea:	4604      	mov	r4, r0
  if (hspi->Init.TIMode == SPI_TIMODE_DISABLE)
 800c4ec:	6a40      	ldr	r0, [r0, #36]	; 0x24
 800c4ee:	2800      	cmp	r0, #0
 800c4f0:	d047      	beq.n	800c582 <HAL_SPI_Init+0x9e>
    hspi->Init.CLKPolarity = SPI_POLARITY_LOW;
 800c4f2:	2300      	movs	r3, #0
    hspi->Init.CLKPhase    = SPI_PHASE_1EDGE;
 800c4f4:	e9c4 3304 	strd	r3, r3, [r4, #16]
  if (hspi->State == HAL_SPI_STATE_RESET)
 800c4f8:	f894 3051 	ldrb.w	r3, [r4, #81]	; 0x51
  hspi->Init.CRCCalculation = SPI_CRCCALCULATION_DISABLE;
 800c4fc:	2200      	movs	r2, #0
 800c4fe:	62a2      	str	r2, [r4, #40]	; 0x28
  if (hspi->State == HAL_SPI_STATE_RESET)
 800c500:	f003 01ff 	and.w	r1, r3, #255	; 0xff
 800c504:	2b00      	cmp	r3, #0
 800c506:	d042      	beq.n	800c58e <HAL_SPI_Init+0xaa>
 800c508:	4694      	mov	ip, r2
  __HAL_SPI_DISABLE(hspi);
 800c50a:	6821      	ldr	r1, [r4, #0]
  WRITE_REG(hspi->Instance->CR1, ((hspi->Init.Mode & (SPI_CR1_MSTR | SPI_CR1_SSI)) |
 800c50c:	68a5      	ldr	r5, [r4, #8]
 800c50e:	69a2      	ldr	r2, [r4, #24]
 800c510:	6a26      	ldr	r6, [r4, #32]
  hspi->State = HAL_SPI_STATE_BUSY;
 800c512:	2302      	movs	r3, #2
 800c514:	f884 3051 	strb.w	r3, [r4, #81]	; 0x51
  __HAL_SPI_DISABLE(hspi);
 800c518:	680b      	ldr	r3, [r1, #0]
 800c51a:	f023 0340 	bic.w	r3, r3, #64	; 0x40
 800c51e:	600b      	str	r3, [r1, #0]
  WRITE_REG(hspi->Instance->CR1, ((hspi->Init.Mode & (SPI_CR1_MSTR | SPI_CR1_SSI)) |
 800c520:	6863      	ldr	r3, [r4, #4]
 800c522:	f405 4504 	and.w	r5, r5, #33792	; 0x8400
 800c526:	f403 7382 	and.w	r3, r3, #260	; 0x104
 800c52a:	432b      	orrs	r3, r5
 800c52c:	68e5      	ldr	r5, [r4, #12]
 800c52e:	f405 6500 	and.w	r5, r5, #2048	; 0x800
 800c532:	432b      	orrs	r3, r5
 800c534:	6925      	ldr	r5, [r4, #16]
 800c536:	f005 0502 	and.w	r5, r5, #2
 800c53a:	432b      	orrs	r3, r5
 800c53c:	6965      	ldr	r5, [r4, #20]
 800c53e:	f005 0501 	and.w	r5, r5, #1
 800c542:	432b      	orrs	r3, r5
 800c544:	69e5      	ldr	r5, [r4, #28]
 800c546:	f006 0e80 	and.w	lr, r6, #128	; 0x80
 800c54a:	f402 7600 	and.w	r6, r2, #512	; 0x200
 800c54e:	f005 0538 	and.w	r5, r5, #56	; 0x38
 800c552:	4333      	orrs	r3, r6
 800c554:	432b      	orrs	r3, r5
  WRITE_REG(hspi->Instance->CR2, (((hspi->Init.NSS >> 16U) & SPI_CR2_SSOE) | (hspi->Init.TIMode & SPI_CR2_FRF)));
 800c556:	0c12      	lsrs	r2, r2, #16
 800c558:	f000 0010 	and.w	r0, r0, #16
  WRITE_REG(hspi->Instance->CR1, ((hspi->Init.Mode & (SPI_CR1_MSTR | SPI_CR1_SSI)) |
 800c55c:	ea43 030e 	orr.w	r3, r3, lr
  WRITE_REG(hspi->Instance->CR2, (((hspi->Init.NSS >> 16U) & SPI_CR2_SSOE) | (hspi->Init.TIMode & SPI_CR2_FRF)));
 800c560:	f002 0204 	and.w	r2, r2, #4
  WRITE_REG(hspi->Instance->CR1, ((hspi->Init.Mode & (SPI_CR1_MSTR | SPI_CR1_SSI)) |
 800c564:	ea43 030c 	orr.w	r3, r3, ip
  WRITE_REG(hspi->Instance->CR2, (((hspi->Init.NSS >> 16U) & SPI_CR2_SSOE) | (hspi->Init.TIMode & SPI_CR2_FRF)));
 800c568:	4302      	orrs	r2, r0
  WRITE_REG(hspi->Instance->CR1, ((hspi->Init.Mode & (SPI_CR1_MSTR | SPI_CR1_SSI)) |
 800c56a:	600b      	str	r3, [r1, #0]
  WRITE_REG(hspi->Instance->CR2, (((hspi->Init.NSS >> 16U) & SPI_CR2_SSOE) | (hspi->Init.TIMode & SPI_CR2_FRF)));
 800c56c:	604a      	str	r2, [r1, #4]
  CLEAR_BIT(hspi->Instance->I2SCFGR, SPI_I2SCFGR_I2SMOD);
 800c56e:	69cb      	ldr	r3, [r1, #28]
  hspi->ErrorCode = HAL_SPI_ERROR_NONE;
 800c570:	2000      	movs	r0, #0
  CLEAR_BIT(hspi->Instance->I2SCFGR, SPI_I2SCFGR_I2SMOD);
 800c572:	f423 6300 	bic.w	r3, r3, #2048	; 0x800
  hspi->State     = HAL_SPI_STATE_READY;
 800c576:	2201      	movs	r2, #1
  CLEAR_BIT(hspi->Instance->I2SCFGR, SPI_I2SCFGR_I2SMOD);
 800c578:	61cb      	str	r3, [r1, #28]
  hspi->ErrorCode = HAL_SPI_ERROR_NONE;
 800c57a:	6560      	str	r0, [r4, #84]	; 0x54
  hspi->State     = HAL_SPI_STATE_READY;
 800c57c:	f884 2051 	strb.w	r2, [r4, #81]	; 0x51
}
 800c580:	bd70      	pop	{r4, r5, r6, pc}
    if (hspi->Init.Mode == SPI_MODE_MASTER)
 800c582:	6863      	ldr	r3, [r4, #4]
 800c584:	f5b3 7f82 	cmp.w	r3, #260	; 0x104
 800c588:	d0b6      	beq.n	800c4f8 <HAL_SPI_Init+0x14>
      hspi->Init.BaudRatePrescaler = SPI_BAUDRATEPRESCALER_2;
 800c58a:	61e0      	str	r0, [r4, #28]
 800c58c:	e7b4      	b.n	800c4f8 <HAL_SPI_Init+0x14>
    HAL_SPI_MspInit(hspi);
 800c58e:	4620      	mov	r0, r4
    hspi->Lock = HAL_UNLOCKED;
 800c590:	f884 1050 	strb.w	r1, [r4, #80]	; 0x50
    HAL_SPI_MspInit(hspi);
 800c594:	f7f5 f964 	bl	8001860 <HAL_SPI_MspInit>
  WRITE_REG(hspi->Instance->CR2, (((hspi->Init.NSS >> 16U) & SPI_CR2_SSOE) | (hspi->Init.TIMode & SPI_CR2_FRF)));
 800c598:	e9d4 0309 	ldrd	r0, r3, [r4, #36]	; 0x24
  WRITE_REG(hspi->Instance->CR1, ((hspi->Init.Mode & (SPI_CR1_MSTR | SPI_CR1_SSI)) |
 800c59c:	f403 5c00 	and.w	ip, r3, #8192	; 0x2000
 800c5a0:	e7b3      	b.n	800c50a <HAL_SPI_Init+0x26>
    return HAL_ERROR;
 800c5a2:	2001      	movs	r0, #1
}
 800c5a4:	4770      	bx	lr
 800c5a6:	bf00      	nop

0800c5a8 <HAL_SPI_Transmit>:
{
 800c5a8:	e92d 41f0 	stmdb	sp!, {r4, r5, r6, r7, r8, lr}
 800c5ac:	4604      	mov	r4, r0
  __HAL_LOCK(hspi);
 800c5ae:	f890 0050 	ldrb.w	r0, [r0, #80]	; 0x50
 800c5b2:	2801      	cmp	r0, #1
{
 800c5b4:	b082      	sub	sp, #8
  __HAL_LOCK(hspi);
 800c5b6:	f000 8085 	beq.w	800c6c4 <HAL_SPI_Transmit+0x11c>
 800c5ba:	461d      	mov	r5, r3
 800c5bc:	2301      	movs	r3, #1
 800c5be:	f884 3050 	strb.w	r3, [r4, #80]	; 0x50
  tickstart = HAL_GetTick();
 800c5c2:	4688      	mov	r8, r1
 800c5c4:	4617      	mov	r7, r2
 800c5c6:	f7fd f86d 	bl	80096a4 <HAL_GetTick>
  if (hspi->State != HAL_SPI_STATE_READY)
 800c5ca:	f894 3051 	ldrb.w	r3, [r4, #81]	; 0x51
 800c5ce:	2b01      	cmp	r3, #1
  tickstart = HAL_GetTick();
 800c5d0:	4606      	mov	r6, r0
  if (hspi->State != HAL_SPI_STATE_READY)
 800c5d2:	b2d8      	uxtb	r0, r3
 800c5d4:	d009      	beq.n	800c5ea <HAL_SPI_Transmit+0x42>
    errorcode = HAL_BUSY;
 800c5d6:	2002      	movs	r0, #2
  hspi->State = HAL_SPI_STATE_READY;
 800c5d8:	2201      	movs	r2, #1
  __HAL_UNLOCK(hspi);
 800c5da:	2300      	movs	r3, #0
  hspi->State = HAL_SPI_STATE_READY;
 800c5dc:	f884 2051 	strb.w	r2, [r4, #81]	; 0x51
  __HAL_UNLOCK(hspi);
 800c5e0:	f884 3050 	strb.w	r3, [r4, #80]	; 0x50
}
 800c5e4:	b002      	add	sp, #8
 800c5e6:	e8bd 81f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, pc}
  if ((pData == NULL) || (Size == 0U))
 800c5ea:	f1b8 0f00 	cmp.w	r8, #0
 800c5ee:	d0f3      	beq.n	800c5d8 <HAL_SPI_Transmit+0x30>
 800c5f0:	2f00      	cmp	r7, #0
 800c5f2:	d0f1      	beq.n	800c5d8 <HAL_SPI_Transmit+0x30>
  if (hspi->Init.Direction == SPI_DIRECTION_1LINE)
 800c5f4:	68a2      	ldr	r2, [r4, #8]
    __HAL_SPI_DISABLE(hspi);
 800c5f6:	6820      	ldr	r0, [r4, #0]
  hspi->pTxBuffPtr  = (uint8_t *)pData;
 800c5f8:	f8c4 8030 	str.w	r8, [r4, #48]	; 0x30
  hspi->ErrorCode   = HAL_SPI_ERROR_NONE;
 800c5fc:	2300      	movs	r3, #0
  hspi->State       = HAL_SPI_STATE_BUSY_TX;
 800c5fe:	2103      	movs	r1, #3
  if (hspi->Init.Direction == SPI_DIRECTION_1LINE)
 800c600:	f5b2 4f00 	cmp.w	r2, #32768	; 0x8000
  hspi->State       = HAL_SPI_STATE_BUSY_TX;
 800c604:	f884 1051 	strb.w	r1, [r4, #81]	; 0x51
  hspi->RxISR       = NULL;
 800c608:	e9c4 3310 	strd	r3, r3, [r4, #64]	; 0x40
  hspi->ErrorCode   = HAL_SPI_ERROR_NONE;
 800c60c:	6563      	str	r3, [r4, #84]	; 0x54
  hspi->TxXferSize  = Size;
 800c60e:	86a7      	strh	r7, [r4, #52]	; 0x34
  hspi->TxXferCount = Size;
 800c610:	86e7      	strh	r7, [r4, #54]	; 0x36
  hspi->pRxBuffPtr  = (uint8_t *)NULL;
 800c612:	63a3      	str	r3, [r4, #56]	; 0x38
  hspi->RxXferSize  = 0U;
 800c614:	87a3      	strh	r3, [r4, #60]	; 0x3c
  hspi->RxXferCount = 0U;
 800c616:	87e3      	strh	r3, [r4, #62]	; 0x3e
  if (hspi->Init.Direction == SPI_DIRECTION_1LINE)
 800c618:	f000 8085 	beq.w	800c726 <HAL_SPI_Transmit+0x17e>
  if ((hspi->Instance->CR1 & SPI_CR1_SPE) != SPI_CR1_SPE)
 800c61c:	6803      	ldr	r3, [r0, #0]
 800c61e:	065b      	lsls	r3, r3, #25
    __HAL_SPI_DISABLE(hspi);
 800c620:	4602      	mov	r2, r0
  if ((hspi->Instance->CR1 & SPI_CR1_SPE) != SPI_CR1_SPE)
 800c622:	d403      	bmi.n	800c62c <HAL_SPI_Transmit+0x84>
    __HAL_SPI_ENABLE(hspi);
 800c624:	6803      	ldr	r3, [r0, #0]
 800c626:	f043 0340 	orr.w	r3, r3, #64	; 0x40
 800c62a:	6003      	str	r3, [r0, #0]
  if (hspi->Init.DataSize == SPI_DATASIZE_16BIT)
 800c62c:	68e3      	ldr	r3, [r4, #12]
 800c62e:	f5b3 6f00 	cmp.w	r3, #2048	; 0x800
 800c632:	d04b      	beq.n	800c6cc <HAL_SPI_Transmit+0x124>
    if ((hspi->Init.Mode == SPI_MODE_SLAVE) || (initial_TxXferCount == 0x01U))
 800c634:	6863      	ldr	r3, [r4, #4]
 800c636:	2b00      	cmp	r3, #0
 800c638:	f000 8097 	beq.w	800c76a <HAL_SPI_Transmit+0x1c2>
 800c63c:	2f01      	cmp	r7, #1
 800c63e:	f000 8094 	beq.w	800c76a <HAL_SPI_Transmit+0x1c2>
    while (hspi->TxXferCount > 0U)
 800c642:	8ee3      	ldrh	r3, [r4, #54]	; 0x36
 800c644:	b29b      	uxth	r3, r3
 800c646:	b1ab      	cbz	r3, 800c674 <HAL_SPI_Transmit+0xcc>
 800c648:	1c68      	adds	r0, r5, #1
 800c64a:	f040 8083 	bne.w	800c754 <HAL_SPI_Transmit+0x1ac>
      if (__HAL_SPI_GET_FLAG(hspi, SPI_FLAG_TXE))
 800c64e:	6823      	ldr	r3, [r4, #0]
 800c650:	689a      	ldr	r2, [r3, #8]
 800c652:	0791      	lsls	r1, r2, #30
 800c654:	f140 8094 	bpl.w	800c780 <HAL_SPI_Transmit+0x1d8>
        *((__IO uint8_t *)&hspi->Instance->DR) = (*hspi->pTxBuffPtr);
 800c658:	6b22      	ldr	r2, [r4, #48]	; 0x30
 800c65a:	7812      	ldrb	r2, [r2, #0]
 800c65c:	731a      	strb	r2, [r3, #12]
        hspi->TxXferCount--;
 800c65e:	8ee1      	ldrh	r1, [r4, #54]	; 0x36
        hspi->pTxBuffPtr += sizeof(uint8_t);
 800c660:	6b23      	ldr	r3, [r4, #48]	; 0x30
        hspi->TxXferCount--;
 800c662:	3901      	subs	r1, #1
 800c664:	b289      	uxth	r1, r1
 800c666:	86e1      	strh	r1, [r4, #54]	; 0x36
    while (hspi->TxXferCount > 0U)
 800c668:	8ee1      	ldrh	r1, [r4, #54]	; 0x36
        hspi->pTxBuffPtr += sizeof(uint8_t);
 800c66a:	3301      	adds	r3, #1
    while (hspi->TxXferCount > 0U)
 800c66c:	b289      	uxth	r1, r1
        hspi->pTxBuffPtr += sizeof(uint8_t);
 800c66e:	6323      	str	r3, [r4, #48]	; 0x30
    while (hspi->TxXferCount > 0U)
 800c670:	2900      	cmp	r1, #0
 800c672:	d1ec      	bne.n	800c64e <HAL_SPI_Transmit+0xa6>
static HAL_StatusTypeDef SPI_EndRxTxTransaction(SPI_HandleTypeDef *hspi, uint32_t Timeout, uint32_t Tickstart)
{
  /* Timeout in µs */
  __IO uint32_t count = SPI_BSY_FLAG_WORKAROUND_TIMEOUT * (SystemCoreClock / 24U / 1000000U);
  /* Erratasheet: BSY bit may stay high at the end of a data transfer in Slave mode */
  if (hspi->Init.Mode == SPI_MODE_MASTER)
 800c674:	6861      	ldr	r1, [r4, #4]
  __IO uint32_t count = SPI_BSY_FLAG_WORKAROUND_TIMEOUT * (SystemCoreClock / 24U / 1000000U);
 800c676:	4b5b      	ldr	r3, [pc, #364]	; (800c7e4 <HAL_SPI_Transmit+0x23c>)
 800c678:	4a5b      	ldr	r2, [pc, #364]	; (800c7e8 <HAL_SPI_Transmit+0x240>)
 800c67a:	681b      	ldr	r3, [r3, #0]
 800c67c:	fba2 2303 	umull	r2, r3, r2, r3
 800c680:	0d5b      	lsrs	r3, r3, #21
 800c682:	f44f 727a 	mov.w	r2, #1000	; 0x3e8
 800c686:	fb02 f303 	mul.w	r3, r2, r3
  if (hspi->Init.Mode == SPI_MODE_MASTER)
 800c68a:	f5b1 7f82 	cmp.w	r1, #260	; 0x104
  __IO uint32_t count = SPI_BSY_FLAG_WORKAROUND_TIMEOUT * (SystemCoreClock / 24U / 1000000U);
 800c68e:	9301      	str	r3, [sp, #4]
  if (hspi->Init.Mode == SPI_MODE_MASTER)
 800c690:	d107      	bne.n	800c6a2 <HAL_SPI_Transmit+0xfa>
 800c692:	e098      	b.n	800c7c6 <HAL_SPI_Transmit+0x21e>
    {
      if (count == 0U)
      {
        break;
      }
      count--;
 800c694:	9b01      	ldr	r3, [sp, #4]
    } while (__HAL_SPI_GET_FLAG(hspi, SPI_FLAG_BSY) != RESET);
 800c696:	6822      	ldr	r2, [r4, #0]
      count--;
 800c698:	3b01      	subs	r3, #1
 800c69a:	9301      	str	r3, [sp, #4]
    } while (__HAL_SPI_GET_FLAG(hspi, SPI_FLAG_BSY) != RESET);
 800c69c:	6893      	ldr	r3, [r2, #8]
 800c69e:	061b      	lsls	r3, r3, #24
 800c6a0:	d502      	bpl.n	800c6a8 <HAL_SPI_Transmit+0x100>
      if (count == 0U)
 800c6a2:	9b01      	ldr	r3, [sp, #4]
 800c6a4:	2b00      	cmp	r3, #0
 800c6a6:	d1f5      	bne.n	800c694 <HAL_SPI_Transmit+0xec>
  if (hspi->Init.Direction == SPI_DIRECTION_2LINES)
 800c6a8:	68a3      	ldr	r3, [r4, #8]
 800c6aa:	b933      	cbnz	r3, 800c6ba <HAL_SPI_Transmit+0x112>
    __HAL_SPI_CLEAR_OVRFLAG(hspi);
 800c6ac:	6822      	ldr	r2, [r4, #0]
 800c6ae:	9300      	str	r3, [sp, #0]
 800c6b0:	68d3      	ldr	r3, [r2, #12]
 800c6b2:	9300      	str	r3, [sp, #0]
 800c6b4:	6893      	ldr	r3, [r2, #8]
 800c6b6:	9300      	str	r3, [sp, #0]
 800c6b8:	9b00      	ldr	r3, [sp, #0]
  if (hspi->ErrorCode != HAL_SPI_ERROR_NONE)
 800c6ba:	6d60      	ldr	r0, [r4, #84]	; 0x54
    errorcode = HAL_BUSY;
 800c6bc:	3800      	subs	r0, #0
 800c6be:	bf18      	it	ne
 800c6c0:	2001      	movne	r0, #1
error:
 800c6c2:	e789      	b.n	800c5d8 <HAL_SPI_Transmit+0x30>
  __HAL_LOCK(hspi);
 800c6c4:	2002      	movs	r0, #2
}
 800c6c6:	b002      	add	sp, #8
 800c6c8:	e8bd 81f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, pc}
    if ((hspi->Init.Mode == SPI_MODE_SLAVE) || (initial_TxXferCount == 0x01U))
 800c6cc:	6861      	ldr	r1, [r4, #4]
 800c6ce:	2900      	cmp	r1, #0
 800c6d0:	d176      	bne.n	800c7c0 <HAL_SPI_Transmit+0x218>
      hspi->Instance->DR = *((uint16_t *)hspi->pTxBuffPtr);
 800c6d2:	4643      	mov	r3, r8
 800c6d4:	f833 7b02 	ldrh.w	r7, [r3], #2
 800c6d8:	60c7      	str	r7, [r0, #12]
      hspi->pTxBuffPtr += sizeof(uint16_t);
 800c6da:	6323      	str	r3, [r4, #48]	; 0x30
      hspi->TxXferCount--;
 800c6dc:	8ee3      	ldrh	r3, [r4, #54]	; 0x36
 800c6de:	3b01      	subs	r3, #1
 800c6e0:	b29b      	uxth	r3, r3
 800c6e2:	86e3      	strh	r3, [r4, #54]	; 0x36
    while (hspi->TxXferCount > 0U)
 800c6e4:	8ee3      	ldrh	r3, [r4, #54]	; 0x36
 800c6e6:	b29b      	uxth	r3, r3
 800c6e8:	2b00      	cmp	r3, #0
 800c6ea:	d0c4      	beq.n	800c676 <HAL_SPI_Transmit+0xce>
 800c6ec:	1c6b      	adds	r3, r5, #1
 800c6ee:	d15e      	bne.n	800c7ae <HAL_SPI_Transmit+0x206>
      if (__HAL_SPI_GET_FLAG(hspi, SPI_FLAG_TXE))
 800c6f0:	6883      	ldr	r3, [r0, #8]
 800c6f2:	079f      	lsls	r7, r3, #30
 800c6f4:	d50f      	bpl.n	800c716 <HAL_SPI_Transmit+0x16e>
        hspi->Instance->DR = *((uint16_t *)hspi->pTxBuffPtr);
 800c6f6:	6b22      	ldr	r2, [r4, #48]	; 0x30
 800c6f8:	f832 3b02 	ldrh.w	r3, [r2], #2
 800c6fc:	60c3      	str	r3, [r0, #12]
        hspi->TxXferCount--;
 800c6fe:	8ee3      	ldrh	r3, [r4, #54]	; 0x36
        hspi->pTxBuffPtr += sizeof(uint16_t);
 800c700:	6322      	str	r2, [r4, #48]	; 0x30
        hspi->TxXferCount--;
 800c702:	3b01      	subs	r3, #1
 800c704:	b29b      	uxth	r3, r3
 800c706:	86e3      	strh	r3, [r4, #54]	; 0x36
    while (hspi->TxXferCount > 0U)
 800c708:	8ee3      	ldrh	r3, [r4, #54]	; 0x36
 800c70a:	b29b      	uxth	r3, r3
 800c70c:	2b00      	cmp	r3, #0
 800c70e:	d0b1      	beq.n	800c674 <HAL_SPI_Transmit+0xcc>
      if (__HAL_SPI_GET_FLAG(hspi, SPI_FLAG_TXE))
 800c710:	6883      	ldr	r3, [r0, #8]
 800c712:	079f      	lsls	r7, r3, #30
 800c714:	d4ef      	bmi.n	800c6f6 <HAL_SPI_Transmit+0x14e>
        if ((((HAL_GetTick() - tickstart) >=  Timeout) && (Timeout != HAL_MAX_DELAY)) || (Timeout == 0U))
 800c716:	f7fc ffc5 	bl	80096a4 <HAL_GetTick>
    while (hspi->TxXferCount > 0U)
 800c71a:	8ee3      	ldrh	r3, [r4, #54]	; 0x36
 800c71c:	b29b      	uxth	r3, r3
 800c71e:	2b00      	cmp	r3, #0
 800c720:	d0a8      	beq.n	800c674 <HAL_SPI_Transmit+0xcc>
 800c722:	6820      	ldr	r0, [r4, #0]
 800c724:	e7e4      	b.n	800c6f0 <HAL_SPI_Transmit+0x148>
    __HAL_SPI_DISABLE(hspi);
 800c726:	6803      	ldr	r3, [r0, #0]
 800c728:	f023 0340 	bic.w	r3, r3, #64	; 0x40
 800c72c:	6003      	str	r3, [r0, #0]
    SPI_1LINE_TX(hspi);
 800c72e:	6803      	ldr	r3, [r0, #0]
 800c730:	f443 4380 	orr.w	r3, r3, #16384	; 0x4000
 800c734:	6003      	str	r3, [r0, #0]
 800c736:	e771      	b.n	800c61c <HAL_SPI_Transmit+0x74>
        *((__IO uint8_t *)&hspi->Instance->DR) = (*hspi->pTxBuffPtr);
 800c738:	6b22      	ldr	r2, [r4, #48]	; 0x30
 800c73a:	7812      	ldrb	r2, [r2, #0]
 800c73c:	731a      	strb	r2, [r3, #12]
        hspi->TxXferCount--;
 800c73e:	8ee3      	ldrh	r3, [r4, #54]	; 0x36
        hspi->pTxBuffPtr += sizeof(uint8_t);
 800c740:	6b22      	ldr	r2, [r4, #48]	; 0x30
        hspi->TxXferCount--;
 800c742:	3b01      	subs	r3, #1
        hspi->pTxBuffPtr += sizeof(uint8_t);
 800c744:	3201      	adds	r2, #1
        hspi->TxXferCount--;
 800c746:	b29b      	uxth	r3, r3
        hspi->pTxBuffPtr += sizeof(uint8_t);
 800c748:	6322      	str	r2, [r4, #48]	; 0x30
        hspi->TxXferCount--;
 800c74a:	86e3      	strh	r3, [r4, #54]	; 0x36
    while (hspi->TxXferCount > 0U)
 800c74c:	8ee3      	ldrh	r3, [r4, #54]	; 0x36
 800c74e:	b29b      	uxth	r3, r3
 800c750:	2b00      	cmp	r3, #0
 800c752:	d08f      	beq.n	800c674 <HAL_SPI_Transmit+0xcc>
      if (__HAL_SPI_GET_FLAG(hspi, SPI_FLAG_TXE))
 800c754:	6823      	ldr	r3, [r4, #0]
 800c756:	689a      	ldr	r2, [r3, #8]
 800c758:	0792      	lsls	r2, r2, #30
 800c75a:	d4ed      	bmi.n	800c738 <HAL_SPI_Transmit+0x190>
        if ((((HAL_GetTick() - tickstart) >=  Timeout) && (Timeout != HAL_MAX_DELAY)) || (Timeout == 0U))
 800c75c:	f7fc ffa2 	bl	80096a4 <HAL_GetTick>
 800c760:	1b80      	subs	r0, r0, r6
 800c762:	42a8      	cmp	r0, r5
 800c764:	d3f2      	bcc.n	800c74c <HAL_SPI_Transmit+0x1a4>
          errorcode = HAL_TIMEOUT;
 800c766:	2003      	movs	r0, #3
 800c768:	e736      	b.n	800c5d8 <HAL_SPI_Transmit+0x30>
      *((__IO uint8_t *)&hspi->Instance->DR) = (*hspi->pTxBuffPtr);
 800c76a:	f898 3000 	ldrb.w	r3, [r8]
 800c76e:	7303      	strb	r3, [r0, #12]
      hspi->TxXferCount--;
 800c770:	8ee3      	ldrh	r3, [r4, #54]	; 0x36
      hspi->pTxBuffPtr += sizeof(uint8_t);
 800c772:	6b22      	ldr	r2, [r4, #48]	; 0x30
      hspi->TxXferCount--;
 800c774:	3b01      	subs	r3, #1
      hspi->pTxBuffPtr += sizeof(uint8_t);
 800c776:	3201      	adds	r2, #1
      hspi->TxXferCount--;
 800c778:	b29b      	uxth	r3, r3
      hspi->pTxBuffPtr += sizeof(uint8_t);
 800c77a:	6322      	str	r2, [r4, #48]	; 0x30
      hspi->TxXferCount--;
 800c77c:	86e3      	strh	r3, [r4, #54]	; 0x36
 800c77e:	e760      	b.n	800c642 <HAL_SPI_Transmit+0x9a>
        if ((((HAL_GetTick() - tickstart) >=  Timeout) && (Timeout != HAL_MAX_DELAY)) || (Timeout == 0U))
 800c780:	f7fc ff90 	bl	80096a4 <HAL_GetTick>
    while (hspi->TxXferCount > 0U)
 800c784:	8ee3      	ldrh	r3, [r4, #54]	; 0x36
 800c786:	b29b      	uxth	r3, r3
 800c788:	2b00      	cmp	r3, #0
 800c78a:	f47f af60 	bne.w	800c64e <HAL_SPI_Transmit+0xa6>
 800c78e:	e771      	b.n	800c674 <HAL_SPI_Transmit+0xcc>
        hspi->Instance->DR = *((uint16_t *)hspi->pTxBuffPtr);
 800c790:	6b21      	ldr	r1, [r4, #48]	; 0x30
 800c792:	f831 3b02 	ldrh.w	r3, [r1], #2
 800c796:	60d3      	str	r3, [r2, #12]
        hspi->TxXferCount--;
 800c798:	8ee3      	ldrh	r3, [r4, #54]	; 0x36
        hspi->pTxBuffPtr += sizeof(uint16_t);
 800c79a:	6321      	str	r1, [r4, #48]	; 0x30
        hspi->TxXferCount--;
 800c79c:	3b01      	subs	r3, #1
 800c79e:	b29b      	uxth	r3, r3
 800c7a0:	86e3      	strh	r3, [r4, #54]	; 0x36
    while (hspi->TxXferCount > 0U)
 800c7a2:	8ee3      	ldrh	r3, [r4, #54]	; 0x36
 800c7a4:	b29b      	uxth	r3, r3
 800c7a6:	2b00      	cmp	r3, #0
 800c7a8:	f43f af64 	beq.w	800c674 <HAL_SPI_Transmit+0xcc>
      if (__HAL_SPI_GET_FLAG(hspi, SPI_FLAG_TXE))
 800c7ac:	6822      	ldr	r2, [r4, #0]
 800c7ae:	6893      	ldr	r3, [r2, #8]
 800c7b0:	0799      	lsls	r1, r3, #30
 800c7b2:	d4ed      	bmi.n	800c790 <HAL_SPI_Transmit+0x1e8>
        if ((((HAL_GetTick() - tickstart) >=  Timeout) && (Timeout != HAL_MAX_DELAY)) || (Timeout == 0U))
 800c7b4:	f7fc ff76 	bl	80096a4 <HAL_GetTick>
 800c7b8:	1b80      	subs	r0, r0, r6
 800c7ba:	42a8      	cmp	r0, r5
 800c7bc:	d3f1      	bcc.n	800c7a2 <HAL_SPI_Transmit+0x1fa>
 800c7be:	e7d2      	b.n	800c766 <HAL_SPI_Transmit+0x1be>
    if ((hspi->Init.Mode == SPI_MODE_SLAVE) || (initial_TxXferCount == 0x01U))
 800c7c0:	2f01      	cmp	r7, #1
 800c7c2:	d18f      	bne.n	800c6e4 <HAL_SPI_Transmit+0x13c>
 800c7c4:	e785      	b.n	800c6d2 <HAL_SPI_Transmit+0x12a>
    if (SPI_WaitFlagStateUntilTimeout(hspi, SPI_FLAG_BSY, RESET, Timeout, Tickstart) != HAL_OK)
 800c7c6:	4633      	mov	r3, r6
 800c7c8:	462a      	mov	r2, r5
 800c7ca:	2180      	movs	r1, #128	; 0x80
 800c7cc:	4620      	mov	r0, r4
 800c7ce:	f7ff fdef 	bl	800c3b0 <SPI_WaitFlagStateUntilTimeout.constprop.0>
 800c7d2:	2800      	cmp	r0, #0
 800c7d4:	f43f af68 	beq.w	800c6a8 <HAL_SPI_Transmit+0x100>
      SET_BIT(hspi->ErrorCode, HAL_SPI_ERROR_FLAG);
 800c7d8:	6d63      	ldr	r3, [r4, #84]	; 0x54
    hspi->ErrorCode = HAL_SPI_ERROR_FLAG;
 800c7da:	2220      	movs	r2, #32
      SET_BIT(hspi->ErrorCode, HAL_SPI_ERROR_FLAG);
 800c7dc:	4313      	orrs	r3, r2
 800c7de:	6563      	str	r3, [r4, #84]	; 0x54
    hspi->ErrorCode = HAL_SPI_ERROR_FLAG;
 800c7e0:	6562      	str	r2, [r4, #84]	; 0x54
 800c7e2:	e761      	b.n	800c6a8 <HAL_SPI_Transmit+0x100>
 800c7e4:	20000078 	.word	0x20000078
 800c7e8:	165e9f81 	.word	0x165e9f81

0800c7ec <HAL_SPI_TransmitReceive>:
{
 800c7ec:	e92d 41f0 	stmdb	sp!, {r4, r5, r6, r7, r8, lr}
 800c7f0:	4604      	mov	r4, r0
  __HAL_LOCK(hspi);
 800c7f2:	f890 0050 	ldrb.w	r0, [r0, #80]	; 0x50
 800c7f6:	2801      	cmp	r0, #1
{
 800c7f8:	b082      	sub	sp, #8
  __HAL_LOCK(hspi);
 800c7fa:	f000 80ac 	beq.w	800c956 <HAL_SPI_TransmitReceive+0x16a>
 800c7fe:	461e      	mov	r6, r3
 800c800:	2301      	movs	r3, #1
 800c802:	f884 3050 	strb.w	r3, [r4, #80]	; 0x50
  tickstart = HAL_GetTick();
 800c806:	4690      	mov	r8, r2
 800c808:	460f      	mov	r7, r1
 800c80a:	f7fc ff4b 	bl	80096a4 <HAL_GetTick>
 800c80e:	4605      	mov	r5, r0
  tmp_state           = hspi->State;
 800c810:	f894 0051 	ldrb.w	r0, [r4, #81]	; 0x51
  tmp_mode            = hspi->Init.Mode;
 800c814:	6863      	ldr	r3, [r4, #4]
  if (!((tmp_state == HAL_SPI_STATE_READY) || \
 800c816:	2801      	cmp	r0, #1
  tmp_state           = hspi->State;
 800c818:	b2c2      	uxtb	r2, r0
  if (!((tmp_state == HAL_SPI_STATE_READY) || \
 800c81a:	d011      	beq.n	800c840 <HAL_SPI_TransmitReceive+0x54>
 800c81c:	f5b3 7f82 	cmp.w	r3, #260	; 0x104
 800c820:	d009      	beq.n	800c836 <HAL_SPI_TransmitReceive+0x4a>
    errorcode = HAL_BUSY;
 800c822:	2002      	movs	r0, #2
  hspi->State = HAL_SPI_STATE_READY;
 800c824:	2201      	movs	r2, #1
  __HAL_UNLOCK(hspi);
 800c826:	2300      	movs	r3, #0
  hspi->State = HAL_SPI_STATE_READY;
 800c828:	f884 2051 	strb.w	r2, [r4, #81]	; 0x51
  __HAL_UNLOCK(hspi);
 800c82c:	f884 3050 	strb.w	r3, [r4, #80]	; 0x50
}
 800c830:	b002      	add	sp, #8
 800c832:	e8bd 81f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, pc}
        ((tmp_mode == SPI_MODE_MASTER) && (hspi->Init.Direction == SPI_DIRECTION_2LINES) && (tmp_state == HAL_SPI_STATE_BUSY_RX))))
 800c836:	68a1      	ldr	r1, [r4, #8]
 800c838:	2900      	cmp	r1, #0
 800c83a:	d1f2      	bne.n	800c822 <HAL_SPI_TransmitReceive+0x36>
 800c83c:	2a04      	cmp	r2, #4
 800c83e:	d1f0      	bne.n	800c822 <HAL_SPI_TransmitReceive+0x36>
  if ((pTxData == NULL) || (pRxData == NULL) || (Size == 0U))
 800c840:	2f00      	cmp	r7, #0
 800c842:	f000 808c 	beq.w	800c95e <HAL_SPI_TransmitReceive+0x172>
 800c846:	f1b8 0f00 	cmp.w	r8, #0
 800c84a:	f000 8088 	beq.w	800c95e <HAL_SPI_TransmitReceive+0x172>
 800c84e:	2e00      	cmp	r6, #0
 800c850:	f000 8085 	beq.w	800c95e <HAL_SPI_TransmitReceive+0x172>
  if (hspi->State != HAL_SPI_STATE_BUSY_RX)
 800c854:	f894 2051 	ldrb.w	r2, [r4, #81]	; 0x51
  hspi->pRxBuffPtr  = (uint8_t *)pRxData;
 800c858:	f8c4 8038 	str.w	r8, [r4, #56]	; 0x38
  if (hspi->State != HAL_SPI_STATE_BUSY_RX)
 800c85c:	2a04      	cmp	r2, #4
    hspi->State = HAL_SPI_STATE_BUSY_TX_RX;
 800c85e:	bf1c      	itt	ne
 800c860:	2205      	movne	r2, #5
 800c862:	f884 2051 	strbne.w	r2, [r4, #81]	; 0x51
  hspi->ErrorCode   = HAL_SPI_ERROR_NONE;
 800c866:	2200      	movs	r2, #0
 800c868:	6562      	str	r2, [r4, #84]	; 0x54
  hspi->TxISR       = NULL;
 800c86a:	e9c4 2210 	strd	r2, r2, [r4, #64]	; 0x40
  if ((hspi->Instance->CR1 & SPI_CR1_SPE) != SPI_CR1_SPE)
 800c86e:	6822      	ldr	r2, [r4, #0]
  hspi->RxXferCount = Size;
 800c870:	87e6      	strh	r6, [r4, #62]	; 0x3e
  hspi->TxXferCount = Size;
 800c872:	86e6      	strh	r6, [r4, #54]	; 0x36
  if ((hspi->Instance->CR1 & SPI_CR1_SPE) != SPI_CR1_SPE)
 800c874:	6811      	ldr	r1, [r2, #0]
  hspi->RxXferSize  = Size;
 800c876:	87a6      	strh	r6, [r4, #60]	; 0x3c
  if ((hspi->Instance->CR1 & SPI_CR1_SPE) != SPI_CR1_SPE)
 800c878:	0649      	lsls	r1, r1, #25
  hspi->pTxBuffPtr  = (uint8_t *)pTxData;
 800c87a:	6327      	str	r7, [r4, #48]	; 0x30
  hspi->TxXferSize  = Size;
 800c87c:	86a6      	strh	r6, [r4, #52]	; 0x34
  if ((hspi->Instance->CR1 & SPI_CR1_SPE) != SPI_CR1_SPE)
 800c87e:	d403      	bmi.n	800c888 <HAL_SPI_TransmitReceive+0x9c>
    __HAL_SPI_ENABLE(hspi);
 800c880:	6811      	ldr	r1, [r2, #0]
 800c882:	f041 0140 	orr.w	r1, r1, #64	; 0x40
 800c886:	6011      	str	r1, [r2, #0]
  if (hspi->Init.DataSize == SPI_DATASIZE_16BIT)
 800c888:	68e1      	ldr	r1, [r4, #12]
 800c88a:	f5b1 6f00 	cmp.w	r1, #2048	; 0x800
 800c88e:	f000 809e 	beq.w	800c9ce <HAL_SPI_TransmitReceive+0x1e2>
    if ((hspi->Init.Mode == SPI_MODE_SLAVE) || (initial_TxXferCount == 0x01U))
 800c892:	2b00      	cmp	r3, #0
 800c894:	f000 8091 	beq.w	800c9ba <HAL_SPI_TransmitReceive+0x1ce>
 800c898:	2e01      	cmp	r6, #1
 800c89a:	f000 808e 	beq.w	800c9ba <HAL_SPI_TransmitReceive+0x1ce>
 800c89e:	9b08      	ldr	r3, [sp, #32]
 800c8a0:	3301      	adds	r3, #1
        txallowed = 1U;
 800c8a2:	f04f 0601 	mov.w	r6, #1
 800c8a6:	d028      	beq.n	800c8fa <HAL_SPI_TransmitReceive+0x10e>
 800c8a8:	e05b      	b.n	800c962 <HAL_SPI_TransmitReceive+0x176>
      if ((__HAL_SPI_GET_FLAG(hspi, SPI_FLAG_TXE)) && (hspi->TxXferCount > 0U) && (txallowed == 1U))
 800c8aa:	6821      	ldr	r1, [r4, #0]
 800c8ac:	688b      	ldr	r3, [r1, #8]
 800c8ae:	0798      	lsls	r0, r3, #30
 800c8b0:	d50f      	bpl.n	800c8d2 <HAL_SPI_TransmitReceive+0xe6>
 800c8b2:	8ee3      	ldrh	r3, [r4, #54]	; 0x36
 800c8b4:	b29b      	uxth	r3, r3
 800c8b6:	b163      	cbz	r3, 800c8d2 <HAL_SPI_TransmitReceive+0xe6>
 800c8b8:	b15e      	cbz	r6, 800c8d2 <HAL_SPI_TransmitReceive+0xe6>
        *(__IO uint8_t *)&hspi->Instance->DR = (*hspi->pTxBuffPtr);
 800c8ba:	6b23      	ldr	r3, [r4, #48]	; 0x30
 800c8bc:	781b      	ldrb	r3, [r3, #0]
 800c8be:	730b      	strb	r3, [r1, #12]
        hspi->TxXferCount--;
 800c8c0:	8ee3      	ldrh	r3, [r4, #54]	; 0x36
        hspi->pTxBuffPtr++;
 800c8c2:	6b22      	ldr	r2, [r4, #48]	; 0x30
      if ((__HAL_SPI_GET_FLAG(hspi, SPI_FLAG_RXNE)) && (hspi->RxXferCount > 0U))
 800c8c4:	6821      	ldr	r1, [r4, #0]
        hspi->TxXferCount--;
 800c8c6:	3b01      	subs	r3, #1
        hspi->pTxBuffPtr++;
 800c8c8:	3201      	adds	r2, #1
        hspi->TxXferCount--;
 800c8ca:	b29b      	uxth	r3, r3
        txallowed = 0U;
 800c8cc:	2600      	movs	r6, #0
        hspi->TxXferCount--;
 800c8ce:	86e3      	strh	r3, [r4, #54]	; 0x36
        hspi->pTxBuffPtr++;
 800c8d0:	6322      	str	r2, [r4, #48]	; 0x30
      if ((__HAL_SPI_GET_FLAG(hspi, SPI_FLAG_RXNE)) && (hspi->RxXferCount > 0U))
 800c8d2:	688a      	ldr	r2, [r1, #8]
 800c8d4:	f012 0201 	ands.w	r2, r2, #1
 800c8d8:	d00d      	beq.n	800c8f6 <HAL_SPI_TransmitReceive+0x10a>
 800c8da:	8fe3      	ldrh	r3, [r4, #62]	; 0x3e
 800c8dc:	b29b      	uxth	r3, r3
 800c8de:	b153      	cbz	r3, 800c8f6 <HAL_SPI_TransmitReceive+0x10a>
        (*(uint8_t *)hspi->pRxBuffPtr) = hspi->Instance->DR;
 800c8e0:	6ba3      	ldr	r3, [r4, #56]	; 0x38
 800c8e2:	68c9      	ldr	r1, [r1, #12]
 800c8e4:	7019      	strb	r1, [r3, #0]
        hspi->RxXferCount--;
 800c8e6:	8fe3      	ldrh	r3, [r4, #62]	; 0x3e
        hspi->pRxBuffPtr++;
 800c8e8:	6ba1      	ldr	r1, [r4, #56]	; 0x38
        hspi->RxXferCount--;
 800c8ea:	3b01      	subs	r3, #1
        hspi->pRxBuffPtr++;
 800c8ec:	3101      	adds	r1, #1
        hspi->RxXferCount--;
 800c8ee:	b29b      	uxth	r3, r3
        hspi->pRxBuffPtr++;
 800c8f0:	63a1      	str	r1, [r4, #56]	; 0x38
        hspi->RxXferCount--;
 800c8f2:	87e3      	strh	r3, [r4, #62]	; 0x3e
        txallowed = 1U;
 800c8f4:	4616      	mov	r6, r2
      if ((((HAL_GetTick() - tickstart) >=  Timeout) && ((Timeout != HAL_MAX_DELAY))) || (Timeout == 0U))
 800c8f6:	f7fc fed5 	bl	80096a4 <HAL_GetTick>
    while ((hspi->TxXferCount > 0U) || (hspi->RxXferCount > 0U))
 800c8fa:	8ee2      	ldrh	r2, [r4, #54]	; 0x36
 800c8fc:	b292      	uxth	r2, r2
 800c8fe:	2a00      	cmp	r2, #0
 800c900:	d1d3      	bne.n	800c8aa <HAL_SPI_TransmitReceive+0xbe>
 800c902:	8fe3      	ldrh	r3, [r4, #62]	; 0x3e
 800c904:	b29b      	uxth	r3, r3
 800c906:	2b00      	cmp	r3, #0
 800c908:	d1cf      	bne.n	800c8aa <HAL_SPI_TransmitReceive+0xbe>
  __IO uint32_t count = SPI_BSY_FLAG_WORKAROUND_TIMEOUT * (SystemCoreClock / 24U / 1000000U);
 800c90a:	4b79      	ldr	r3, [pc, #484]	; (800caf0 <HAL_SPI_TransmitReceive+0x304>)
 800c90c:	4a79      	ldr	r2, [pc, #484]	; (800caf4 <HAL_SPI_TransmitReceive+0x308>)
 800c90e:	681b      	ldr	r3, [r3, #0]
 800c910:	fba2 2303 	umull	r2, r3, r2, r3
  if (hspi->Init.Mode == SPI_MODE_MASTER)
 800c914:	6862      	ldr	r2, [r4, #4]
  __IO uint32_t count = SPI_BSY_FLAG_WORKAROUND_TIMEOUT * (SystemCoreClock / 24U / 1000000U);
 800c916:	f44f 717a 	mov.w	r1, #1000	; 0x3e8
 800c91a:	0d5b      	lsrs	r3, r3, #21
 800c91c:	fb01 f303 	mul.w	r3, r1, r3
  if (hspi->Init.Mode == SPI_MODE_MASTER)
 800c920:	f5b2 7f82 	cmp.w	r2, #260	; 0x104
  __IO uint32_t count = SPI_BSY_FLAG_WORKAROUND_TIMEOUT * (SystemCoreClock / 24U / 1000000U);
 800c924:	9301      	str	r3, [sp, #4]
  if (hspi->Init.Mode == SPI_MODE_MASTER)
 800c926:	d107      	bne.n	800c938 <HAL_SPI_TransmitReceive+0x14c>
 800c928:	e0d2      	b.n	800cad0 <HAL_SPI_TransmitReceive+0x2e4>
      count--;
 800c92a:	9b01      	ldr	r3, [sp, #4]
    } while (__HAL_SPI_GET_FLAG(hspi, SPI_FLAG_BSY) != RESET);
 800c92c:	6822      	ldr	r2, [r4, #0]
      count--;
 800c92e:	3b01      	subs	r3, #1
 800c930:	9301      	str	r3, [sp, #4]
    } while (__HAL_SPI_GET_FLAG(hspi, SPI_FLAG_BSY) != RESET);
 800c932:	6893      	ldr	r3, [r2, #8]
 800c934:	061b      	lsls	r3, r3, #24
 800c936:	d502      	bpl.n	800c93e <HAL_SPI_TransmitReceive+0x152>
      if (count == 0U)
 800c938:	9b01      	ldr	r3, [sp, #4]
 800c93a:	2b00      	cmp	r3, #0
 800c93c:	d1f5      	bne.n	800c92a <HAL_SPI_TransmitReceive+0x13e>
  if (hspi->Init.Direction == SPI_DIRECTION_2LINES)
 800c93e:	68a0      	ldr	r0, [r4, #8]
 800c940:	2800      	cmp	r0, #0
 800c942:	f040 8082 	bne.w	800ca4a <HAL_SPI_TransmitReceive+0x25e>
    __HAL_SPI_CLEAR_OVRFLAG(hspi);
 800c946:	6823      	ldr	r3, [r4, #0]
 800c948:	9000      	str	r0, [sp, #0]
 800c94a:	68da      	ldr	r2, [r3, #12]
 800c94c:	9200      	str	r2, [sp, #0]
 800c94e:	689b      	ldr	r3, [r3, #8]
 800c950:	9300      	str	r3, [sp, #0]
 800c952:	9b00      	ldr	r3, [sp, #0]
 800c954:	e766      	b.n	800c824 <HAL_SPI_TransmitReceive+0x38>
  __HAL_LOCK(hspi);
 800c956:	2002      	movs	r0, #2
}
 800c958:	b002      	add	sp, #8
 800c95a:	e8bd 81f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, pc}
    errorcode = HAL_ERROR;
 800c95e:	2001      	movs	r0, #1
 800c960:	e760      	b.n	800c824 <HAL_SPI_TransmitReceive+0x38>
    while ((hspi->TxXferCount > 0U) || (hspi->RxXferCount > 0U))
 800c962:	8ee3      	ldrh	r3, [r4, #54]	; 0x36
 800c964:	b29b      	uxth	r3, r3
 800c966:	b91b      	cbnz	r3, 800c970 <HAL_SPI_TransmitReceive+0x184>
 800c968:	8fe3      	ldrh	r3, [r4, #62]	; 0x3e
 800c96a:	b29b      	uxth	r3, r3
 800c96c:	2b00      	cmp	r3, #0
 800c96e:	d0cc      	beq.n	800c90a <HAL_SPI_TransmitReceive+0x11e>
      if ((__HAL_SPI_GET_FLAG(hspi, SPI_FLAG_TXE)) && (hspi->TxXferCount > 0U) && (txallowed == 1U))
 800c970:	6822      	ldr	r2, [r4, #0]
 800c972:	6893      	ldr	r3, [r2, #8]
 800c974:	0799      	lsls	r1, r3, #30
 800c976:	d50f      	bpl.n	800c998 <HAL_SPI_TransmitReceive+0x1ac>
 800c978:	8ee3      	ldrh	r3, [r4, #54]	; 0x36
 800c97a:	b29b      	uxth	r3, r3
 800c97c:	b163      	cbz	r3, 800c998 <HAL_SPI_TransmitReceive+0x1ac>
 800c97e:	b15e      	cbz	r6, 800c998 <HAL_SPI_TransmitReceive+0x1ac>
        *(__IO uint8_t *)&hspi->Instance->DR = (*hspi->pTxBuffPtr);
 800c980:	6b23      	ldr	r3, [r4, #48]	; 0x30
 800c982:	781b      	ldrb	r3, [r3, #0]
 800c984:	7313      	strb	r3, [r2, #12]
        hspi->TxXferCount--;
 800c986:	8ee3      	ldrh	r3, [r4, #54]	; 0x36
        hspi->pTxBuffPtr++;
 800c988:	6b22      	ldr	r2, [r4, #48]	; 0x30
        hspi->TxXferCount--;
 800c98a:	3b01      	subs	r3, #1
        hspi->pTxBuffPtr++;
 800c98c:	3201      	adds	r2, #1
        hspi->TxXferCount--;
 800c98e:	b29b      	uxth	r3, r3
        hspi->pTxBuffPtr++;
 800c990:	6322      	str	r2, [r4, #48]	; 0x30
      if ((__HAL_SPI_GET_FLAG(hspi, SPI_FLAG_RXNE)) && (hspi->RxXferCount > 0U))
 800c992:	6822      	ldr	r2, [r4, #0]
        hspi->TxXferCount--;
 800c994:	86e3      	strh	r3, [r4, #54]	; 0x36
        txallowed = 0U;
 800c996:	2600      	movs	r6, #0
      if ((__HAL_SPI_GET_FLAG(hspi, SPI_FLAG_RXNE)) && (hspi->RxXferCount > 0U))
 800c998:	6893      	ldr	r3, [r2, #8]
 800c99a:	f013 0301 	ands.w	r3, r3, #1
 800c99e:	d004      	beq.n	800c9aa <HAL_SPI_TransmitReceive+0x1be>
 800c9a0:	8fe1      	ldrh	r1, [r4, #62]	; 0x3e
 800c9a2:	b289      	uxth	r1, r1
 800c9a4:	2900      	cmp	r1, #0
 800c9a6:	f040 8087 	bne.w	800cab8 <HAL_SPI_TransmitReceive+0x2cc>
      if ((((HAL_GetTick() - tickstart) >=  Timeout) && ((Timeout != HAL_MAX_DELAY))) || (Timeout == 0U))
 800c9aa:	f7fc fe7b 	bl	80096a4 <HAL_GetTick>
 800c9ae:	9b08      	ldr	r3, [sp, #32]
 800c9b0:	1b40      	subs	r0, r0, r5
 800c9b2:	4298      	cmp	r0, r3
 800c9b4:	d3d5      	bcc.n	800c962 <HAL_SPI_TransmitReceive+0x176>
        errorcode = HAL_TIMEOUT;
 800c9b6:	2003      	movs	r0, #3
 800c9b8:	e734      	b.n	800c824 <HAL_SPI_TransmitReceive+0x38>
      *((__IO uint8_t *)&hspi->Instance->DR) = (*hspi->pTxBuffPtr);
 800c9ba:	783b      	ldrb	r3, [r7, #0]
 800c9bc:	7313      	strb	r3, [r2, #12]
      hspi->TxXferCount--;
 800c9be:	8ee3      	ldrh	r3, [r4, #54]	; 0x36
      hspi->pTxBuffPtr += sizeof(uint8_t);
 800c9c0:	6b22      	ldr	r2, [r4, #48]	; 0x30
      hspi->TxXferCount--;
 800c9c2:	3b01      	subs	r3, #1
      hspi->pTxBuffPtr += sizeof(uint8_t);
 800c9c4:	3201      	adds	r2, #1
      hspi->TxXferCount--;
 800c9c6:	b29b      	uxth	r3, r3
      hspi->pTxBuffPtr += sizeof(uint8_t);
 800c9c8:	6322      	str	r2, [r4, #48]	; 0x30
      hspi->TxXferCount--;
 800c9ca:	86e3      	strh	r3, [r4, #54]	; 0x36
 800c9cc:	e767      	b.n	800c89e <HAL_SPI_TransmitReceive+0xb2>
    if ((hspi->Init.Mode == SPI_MODE_SLAVE) || (initial_TxXferCount == 0x01U))
 800c9ce:	2b00      	cmp	r3, #0
 800c9d0:	d13d      	bne.n	800ca4e <HAL_SPI_TransmitReceive+0x262>
      hspi->Instance->DR = *((uint16_t *)hspi->pTxBuffPtr);
 800c9d2:	f837 3b02 	ldrh.w	r3, [r7], #2
 800c9d6:	60d3      	str	r3, [r2, #12]
      hspi->TxXferCount--;
 800c9d8:	8ee3      	ldrh	r3, [r4, #54]	; 0x36
      hspi->pTxBuffPtr += sizeof(uint16_t);
 800c9da:	6327      	str	r7, [r4, #48]	; 0x30
      hspi->TxXferCount--;
 800c9dc:	3b01      	subs	r3, #1
 800c9de:	b29b      	uxth	r3, r3
 800c9e0:	86e3      	strh	r3, [r4, #54]	; 0x36
 800c9e2:	9b08      	ldr	r3, [sp, #32]
 800c9e4:	3301      	adds	r3, #1
{
 800c9e6:	f04f 0601 	mov.w	r6, #1
 800c9ea:	d025      	beq.n	800ca38 <HAL_SPI_TransmitReceive+0x24c>
 800c9ec:	e032      	b.n	800ca54 <HAL_SPI_TransmitReceive+0x268>
      if ((__HAL_SPI_GET_FLAG(hspi, SPI_FLAG_TXE)) && (hspi->TxXferCount > 0U) && (txallowed == 1U))
 800c9ee:	6823      	ldr	r3, [r4, #0]
 800c9f0:	689a      	ldr	r2, [r3, #8]
 800c9f2:	0792      	lsls	r2, r2, #30
 800c9f4:	d50d      	bpl.n	800ca12 <HAL_SPI_TransmitReceive+0x226>
 800c9f6:	8ee2      	ldrh	r2, [r4, #54]	; 0x36
 800c9f8:	b292      	uxth	r2, r2
 800c9fa:	b152      	cbz	r2, 800ca12 <HAL_SPI_TransmitReceive+0x226>
 800c9fc:	b14e      	cbz	r6, 800ca12 <HAL_SPI_TransmitReceive+0x226>
        hspi->Instance->DR = *((uint16_t *)hspi->pTxBuffPtr);
 800c9fe:	6b21      	ldr	r1, [r4, #48]	; 0x30
 800ca00:	f831 2b02 	ldrh.w	r2, [r1], #2
 800ca04:	60da      	str	r2, [r3, #12]
        hspi->TxXferCount--;
 800ca06:	8ee2      	ldrh	r2, [r4, #54]	; 0x36
        hspi->pTxBuffPtr += sizeof(uint16_t);
 800ca08:	6321      	str	r1, [r4, #48]	; 0x30
        hspi->TxXferCount--;
 800ca0a:	3a01      	subs	r2, #1
 800ca0c:	b292      	uxth	r2, r2
        txallowed = 0U;
 800ca0e:	2600      	movs	r6, #0
        hspi->TxXferCount--;
 800ca10:	86e2      	strh	r2, [r4, #54]	; 0x36
      if ((__HAL_SPI_GET_FLAG(hspi, SPI_FLAG_RXNE)) && (hspi->RxXferCount > 0U))
 800ca12:	689a      	ldr	r2, [r3, #8]
 800ca14:	f012 0201 	ands.w	r2, r2, #1
 800ca18:	d00c      	beq.n	800ca34 <HAL_SPI_TransmitReceive+0x248>
 800ca1a:	8fe1      	ldrh	r1, [r4, #62]	; 0x3e
 800ca1c:	b289      	uxth	r1, r1
 800ca1e:	b149      	cbz	r1, 800ca34 <HAL_SPI_TransmitReceive+0x248>
        *((uint16_t *)hspi->pRxBuffPtr) = (uint16_t)hspi->Instance->DR;
 800ca20:	6ba1      	ldr	r1, [r4, #56]	; 0x38
 800ca22:	68db      	ldr	r3, [r3, #12]
 800ca24:	f821 3b02 	strh.w	r3, [r1], #2
        hspi->RxXferCount--;
 800ca28:	8fe3      	ldrh	r3, [r4, #62]	; 0x3e
        hspi->pRxBuffPtr += sizeof(uint16_t);
 800ca2a:	63a1      	str	r1, [r4, #56]	; 0x38
        hspi->RxXferCount--;
 800ca2c:	3b01      	subs	r3, #1
 800ca2e:	b29b      	uxth	r3, r3
        txallowed = 1U;
 800ca30:	4616      	mov	r6, r2
        hspi->RxXferCount--;
 800ca32:	87e3      	strh	r3, [r4, #62]	; 0x3e
      if (((HAL_GetTick() - tickstart) >=  Timeout) && (Timeout != HAL_MAX_DELAY))
 800ca34:	f7fc fe36 	bl	80096a4 <HAL_GetTick>
    while ((hspi->TxXferCount > 0U) || (hspi->RxXferCount > 0U))
 800ca38:	8ee3      	ldrh	r3, [r4, #54]	; 0x36
 800ca3a:	b29b      	uxth	r3, r3
 800ca3c:	2b00      	cmp	r3, #0
 800ca3e:	d1d6      	bne.n	800c9ee <HAL_SPI_TransmitReceive+0x202>
 800ca40:	8fe3      	ldrh	r3, [r4, #62]	; 0x3e
 800ca42:	b29b      	uxth	r3, r3
 800ca44:	2b00      	cmp	r3, #0
 800ca46:	d1d2      	bne.n	800c9ee <HAL_SPI_TransmitReceive+0x202>
 800ca48:	e75f      	b.n	800c90a <HAL_SPI_TransmitReceive+0x11e>
  HAL_StatusTypeDef    errorcode = HAL_OK;
 800ca4a:	2000      	movs	r0, #0
 800ca4c:	e6ea      	b.n	800c824 <HAL_SPI_TransmitReceive+0x38>
    if ((hspi->Init.Mode == SPI_MODE_SLAVE) || (initial_TxXferCount == 0x01U))
 800ca4e:	2e01      	cmp	r6, #1
 800ca50:	d1c7      	bne.n	800c9e2 <HAL_SPI_TransmitReceive+0x1f6>
 800ca52:	e7be      	b.n	800c9d2 <HAL_SPI_TransmitReceive+0x1e6>
    while ((hspi->TxXferCount > 0U) || (hspi->RxXferCount > 0U))
 800ca54:	8ee3      	ldrh	r3, [r4, #54]	; 0x36
 800ca56:	b29b      	uxth	r3, r3
 800ca58:	b923      	cbnz	r3, 800ca64 <HAL_SPI_TransmitReceive+0x278>
 800ca5a:	8fe3      	ldrh	r3, [r4, #62]	; 0x3e
 800ca5c:	b29b      	uxth	r3, r3
 800ca5e:	2b00      	cmp	r3, #0
 800ca60:	f43f af53 	beq.w	800c90a <HAL_SPI_TransmitReceive+0x11e>
      if ((__HAL_SPI_GET_FLAG(hspi, SPI_FLAG_TXE)) && (hspi->TxXferCount > 0U) && (txallowed == 1U))
 800ca64:	6822      	ldr	r2, [r4, #0]
 800ca66:	6893      	ldr	r3, [r2, #8]
 800ca68:	079f      	lsls	r7, r3, #30
 800ca6a:	d50d      	bpl.n	800ca88 <HAL_SPI_TransmitReceive+0x29c>
 800ca6c:	8ee3      	ldrh	r3, [r4, #54]	; 0x36
 800ca6e:	b29b      	uxth	r3, r3
 800ca70:	b153      	cbz	r3, 800ca88 <HAL_SPI_TransmitReceive+0x29c>
 800ca72:	b14e      	cbz	r6, 800ca88 <HAL_SPI_TransmitReceive+0x29c>
        hspi->Instance->DR = *((uint16_t *)hspi->pTxBuffPtr);
 800ca74:	6b21      	ldr	r1, [r4, #48]	; 0x30
 800ca76:	f831 3b02 	ldrh.w	r3, [r1], #2
 800ca7a:	60d3      	str	r3, [r2, #12]
        hspi->TxXferCount--;
 800ca7c:	8ee3      	ldrh	r3, [r4, #54]	; 0x36
        hspi->pTxBuffPtr += sizeof(uint16_t);
 800ca7e:	6321      	str	r1, [r4, #48]	; 0x30
        hspi->TxXferCount--;
 800ca80:	3b01      	subs	r3, #1
 800ca82:	b29b      	uxth	r3, r3
 800ca84:	86e3      	strh	r3, [r4, #54]	; 0x36
        txallowed = 0U;
 800ca86:	2600      	movs	r6, #0
      if ((__HAL_SPI_GET_FLAG(hspi, SPI_FLAG_RXNE)) && (hspi->RxXferCount > 0U))
 800ca88:	6893      	ldr	r3, [r2, #8]
 800ca8a:	f013 0301 	ands.w	r3, r3, #1
 800ca8e:	d00c      	beq.n	800caaa <HAL_SPI_TransmitReceive+0x2be>
 800ca90:	8fe1      	ldrh	r1, [r4, #62]	; 0x3e
 800ca92:	b289      	uxth	r1, r1
 800ca94:	b149      	cbz	r1, 800caaa <HAL_SPI_TransmitReceive+0x2be>
        *((uint16_t *)hspi->pRxBuffPtr) = (uint16_t)hspi->Instance->DR;
 800ca96:	68d1      	ldr	r1, [r2, #12]
 800ca98:	6ba2      	ldr	r2, [r4, #56]	; 0x38
 800ca9a:	f822 1b02 	strh.w	r1, [r2], #2
        txallowed = 1U;
 800ca9e:	461e      	mov	r6, r3
        hspi->RxXferCount--;
 800caa0:	8fe3      	ldrh	r3, [r4, #62]	; 0x3e
        hspi->pRxBuffPtr += sizeof(uint16_t);
 800caa2:	63a2      	str	r2, [r4, #56]	; 0x38
        hspi->RxXferCount--;
 800caa4:	3b01      	subs	r3, #1
 800caa6:	b29b      	uxth	r3, r3
 800caa8:	87e3      	strh	r3, [r4, #62]	; 0x3e
      if (((HAL_GetTick() - tickstart) >=  Timeout) && (Timeout != HAL_MAX_DELAY))
 800caaa:	f7fc fdfb 	bl	80096a4 <HAL_GetTick>
 800caae:	9b08      	ldr	r3, [sp, #32]
 800cab0:	1b40      	subs	r0, r0, r5
 800cab2:	4298      	cmp	r0, r3
 800cab4:	d3ce      	bcc.n	800ca54 <HAL_SPI_TransmitReceive+0x268>
 800cab6:	e77e      	b.n	800c9b6 <HAL_SPI_TransmitReceive+0x1ca>
        (*(uint8_t *)hspi->pRxBuffPtr) = hspi->Instance->DR;
 800cab8:	6ba1      	ldr	r1, [r4, #56]	; 0x38
 800caba:	68d2      	ldr	r2, [r2, #12]
 800cabc:	700a      	strb	r2, [r1, #0]
        hspi->RxXferCount--;
 800cabe:	8fe2      	ldrh	r2, [r4, #62]	; 0x3e
        hspi->pRxBuffPtr++;
 800cac0:	6ba1      	ldr	r1, [r4, #56]	; 0x38
        hspi->RxXferCount--;
 800cac2:	3a01      	subs	r2, #1
        hspi->pRxBuffPtr++;
 800cac4:	3101      	adds	r1, #1
        hspi->RxXferCount--;
 800cac6:	b292      	uxth	r2, r2
        hspi->pRxBuffPtr++;
 800cac8:	63a1      	str	r1, [r4, #56]	; 0x38
        hspi->RxXferCount--;
 800caca:	87e2      	strh	r2, [r4, #62]	; 0x3e
        txallowed = 1U;
 800cacc:	461e      	mov	r6, r3
 800cace:	e76c      	b.n	800c9aa <HAL_SPI_TransmitReceive+0x1be>
    if (SPI_WaitFlagStateUntilTimeout(hspi, SPI_FLAG_BSY, RESET, Timeout, Tickstart) != HAL_OK)
 800cad0:	9a08      	ldr	r2, [sp, #32]
 800cad2:	462b      	mov	r3, r5
 800cad4:	2180      	movs	r1, #128	; 0x80
 800cad6:	4620      	mov	r0, r4
 800cad8:	f7ff fc6a 	bl	800c3b0 <SPI_WaitFlagStateUntilTimeout.constprop.0>
 800cadc:	2800      	cmp	r0, #0
 800cade:	f43f af2e 	beq.w	800c93e <HAL_SPI_TransmitReceive+0x152>
      SET_BIT(hspi->ErrorCode, HAL_SPI_ERROR_FLAG);
 800cae2:	6d63      	ldr	r3, [r4, #84]	; 0x54
    hspi->ErrorCode = HAL_SPI_ERROR_FLAG;
 800cae4:	2220      	movs	r2, #32
      SET_BIT(hspi->ErrorCode, HAL_SPI_ERROR_FLAG);
 800cae6:	4313      	orrs	r3, r2
 800cae8:	6563      	str	r3, [r4, #84]	; 0x54
    errorcode = HAL_ERROR;
 800caea:	2001      	movs	r0, #1
    hspi->ErrorCode = HAL_SPI_ERROR_FLAG;
 800caec:	6562      	str	r2, [r4, #84]	; 0x54
    goto error;
 800caee:	e699      	b.n	800c824 <HAL_SPI_TransmitReceive+0x38>
 800caf0:	20000078 	.word	0x20000078
 800caf4:	165e9f81 	.word	0x165e9f81

0800caf8 <HAL_SPI_Receive>:
{
 800caf8:	e92d 41f0 	stmdb	sp!, {r4, r5, r6, r7, r8, lr}
  if ((hspi->Init.Mode == SPI_MODE_MASTER) && (hspi->Init.Direction == SPI_DIRECTION_2LINES))
 800cafc:	6846      	ldr	r6, [r0, #4]
 800cafe:	f5b6 7f82 	cmp.w	r6, #260	; 0x104
{
 800cb02:	b082      	sub	sp, #8
 800cb04:	4604      	mov	r4, r0
 800cb06:	4690      	mov	r8, r2
 800cb08:	461d      	mov	r5, r3
 800cb0a:	460f      	mov	r7, r1
  if ((hspi->Init.Mode == SPI_MODE_MASTER) && (hspi->Init.Direction == SPI_DIRECTION_2LINES))
 800cb0c:	d06e      	beq.n	800cbec <HAL_SPI_Receive+0xf4>
  __HAL_LOCK(hspi);
 800cb0e:	f894 3050 	ldrb.w	r3, [r4, #80]	; 0x50
 800cb12:	2b01      	cmp	r3, #1
 800cb14:	d076      	beq.n	800cc04 <HAL_SPI_Receive+0x10c>
 800cb16:	2301      	movs	r3, #1
 800cb18:	f884 3050 	strb.w	r3, [r4, #80]	; 0x50
  tickstart = HAL_GetTick();
 800cb1c:	f7fc fdc2 	bl	80096a4 <HAL_GetTick>
  if (hspi->State != HAL_SPI_STATE_READY)
 800cb20:	f894 c051 	ldrb.w	ip, [r4, #81]	; 0x51
 800cb24:	f1bc 0f01 	cmp.w	ip, #1
  tickstart = HAL_GetTick();
 800cb28:	4606      	mov	r6, r0
  if (hspi->State != HAL_SPI_STATE_READY)
 800cb2a:	fa5f f08c 	uxtb.w	r0, ip
 800cb2e:	d009      	beq.n	800cb44 <HAL_SPI_Receive+0x4c>
    errorcode = HAL_BUSY;
 800cb30:	2002      	movs	r0, #2
  hspi->State = HAL_SPI_STATE_READY;
 800cb32:	2201      	movs	r2, #1
  __HAL_UNLOCK(hspi);
 800cb34:	2300      	movs	r3, #0
  hspi->State = HAL_SPI_STATE_READY;
 800cb36:	f884 2051 	strb.w	r2, [r4, #81]	; 0x51
  __HAL_UNLOCK(hspi);
 800cb3a:	f884 3050 	strb.w	r3, [r4, #80]	; 0x50
}
 800cb3e:	b002      	add	sp, #8
 800cb40:	e8bd 81f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, pc}
  if ((pData == NULL) || (Size == 0U))
 800cb44:	2f00      	cmp	r7, #0
 800cb46:	d0f4      	beq.n	800cb32 <HAL_SPI_Receive+0x3a>
 800cb48:	f1b8 0f00 	cmp.w	r8, #0
 800cb4c:	d0f1      	beq.n	800cb32 <HAL_SPI_Receive+0x3a>
  if (hspi->Init.Direction == SPI_DIRECTION_1LINE)
 800cb4e:	68a2      	ldr	r2, [r4, #8]
  hspi->pRxBuffPtr  = (uint8_t *)pData;
 800cb50:	63a7      	str	r7, [r4, #56]	; 0x38
  if (hspi->Init.Direction == SPI_DIRECTION_1LINE)
 800cb52:	f5b2 4f00 	cmp.w	r2, #32768	; 0x8000
    __HAL_SPI_DISABLE(hspi);
 800cb56:	6822      	ldr	r2, [r4, #0]
  hspi->RxXferSize  = Size;
 800cb58:	f8a4 803c 	strh.w	r8, [r4, #60]	; 0x3c
  hspi->ErrorCode   = HAL_SPI_ERROR_NONE;
 800cb5c:	f04f 0300 	mov.w	r3, #0
  hspi->State       = HAL_SPI_STATE_BUSY_RX;
 800cb60:	f04f 0104 	mov.w	r1, #4
 800cb64:	f884 1051 	strb.w	r1, [r4, #81]	; 0x51
  hspi->TxISR       = NULL;
 800cb68:	e9c4 3310 	strd	r3, r3, [r4, #64]	; 0x40
  hspi->ErrorCode   = HAL_SPI_ERROR_NONE;
 800cb6c:	6563      	str	r3, [r4, #84]	; 0x54
  hspi->pTxBuffPtr  = (uint8_t *)NULL;
 800cb6e:	6323      	str	r3, [r4, #48]	; 0x30
  hspi->TxXferSize  = 0U;
 800cb70:	86a3      	strh	r3, [r4, #52]	; 0x34
  hspi->RxXferCount = Size;
 800cb72:	f8a4 803e 	strh.w	r8, [r4, #62]	; 0x3e
  hspi->TxXferCount = 0U;
 800cb76:	86e3      	strh	r3, [r4, #54]	; 0x36
    __HAL_SPI_DISABLE(hspi);
 800cb78:	4613      	mov	r3, r2
  if (hspi->Init.Direction == SPI_DIRECTION_1LINE)
 800cb7a:	d107      	bne.n	800cb8c <HAL_SPI_Receive+0x94>
    __HAL_SPI_DISABLE(hspi);
 800cb7c:	6811      	ldr	r1, [r2, #0]
 800cb7e:	f021 0140 	bic.w	r1, r1, #64	; 0x40
 800cb82:	6011      	str	r1, [r2, #0]
    SPI_1LINE_RX(hspi);
 800cb84:	6811      	ldr	r1, [r2, #0]
 800cb86:	f421 4180 	bic.w	r1, r1, #16384	; 0x4000
 800cb8a:	6011      	str	r1, [r2, #0]
  if ((hspi->Instance->CR1 & SPI_CR1_SPE) != SPI_CR1_SPE)
 800cb8c:	6811      	ldr	r1, [r2, #0]
 800cb8e:	0648      	lsls	r0, r1, #25
 800cb90:	d403      	bmi.n	800cb9a <HAL_SPI_Receive+0xa2>
    __HAL_SPI_ENABLE(hspi);
 800cb92:	6811      	ldr	r1, [r2, #0]
 800cb94:	f041 0140 	orr.w	r1, r1, #64	; 0x40
 800cb98:	6011      	str	r1, [r2, #0]
  if (hspi->Init.DataSize == SPI_DATASIZE_8BIT)
 800cb9a:	68e1      	ldr	r1, [r4, #12]
 800cb9c:	2900      	cmp	r1, #0
 800cb9e:	d054      	beq.n	800cc4a <HAL_SPI_Receive+0x152>
    while (hspi->RxXferCount > 0U)
 800cba0:	8fe1      	ldrh	r1, [r4, #62]	; 0x3e
 800cba2:	b289      	uxth	r1, r1
 800cba4:	b1a9      	cbz	r1, 800cbd2 <HAL_SPI_Receive+0xda>
 800cba6:	1c69      	adds	r1, r5, #1
 800cba8:	d13e      	bne.n	800cc28 <HAL_SPI_Receive+0x130>
      if (__HAL_SPI_GET_FLAG(hspi, SPI_FLAG_RXNE))
 800cbaa:	6893      	ldr	r3, [r2, #8]
 800cbac:	07db      	lsls	r3, r3, #31
 800cbae:	d544      	bpl.n	800cc3a <HAL_SPI_Receive+0x142>
        *((uint16_t *)hspi->pRxBuffPtr) = (uint16_t)hspi->Instance->DR;
 800cbb0:	6ba3      	ldr	r3, [r4, #56]	; 0x38
 800cbb2:	68d1      	ldr	r1, [r2, #12]
 800cbb4:	f823 1b02 	strh.w	r1, [r3], #2
        hspi->RxXferCount--;
 800cbb8:	f8b4 c03e 	ldrh.w	ip, [r4, #62]	; 0x3e
        hspi->pRxBuffPtr += sizeof(uint16_t);
 800cbbc:	63a3      	str	r3, [r4, #56]	; 0x38
        hspi->RxXferCount--;
 800cbbe:	f10c 3cff 	add.w	ip, ip, #4294967295
 800cbc2:	fa1f fc8c 	uxth.w	ip, ip
 800cbc6:	f8a4 c03e 	strh.w	ip, [r4, #62]	; 0x3e
    while (hspi->RxXferCount > 0U)
 800cbca:	8fe3      	ldrh	r3, [r4, #62]	; 0x3e
 800cbcc:	b29b      	uxth	r3, r3
 800cbce:	2b00      	cmp	r3, #0
 800cbd0:	d1eb      	bne.n	800cbaa <HAL_SPI_Receive+0xb2>
  if (SPI_EndRxTransaction(hspi, Timeout, tickstart) != HAL_OK)
 800cbd2:	4632      	mov	r2, r6
 800cbd4:	4629      	mov	r1, r5
 800cbd6:	4620      	mov	r0, r4
 800cbd8:	f7ff fc48 	bl	800c46c <SPI_EndRxTransaction>
 800cbdc:	b108      	cbz	r0, 800cbe2 <HAL_SPI_Receive+0xea>
    hspi->ErrorCode = HAL_SPI_ERROR_FLAG;
 800cbde:	2320      	movs	r3, #32
 800cbe0:	6563      	str	r3, [r4, #84]	; 0x54
  if (hspi->ErrorCode != HAL_SPI_ERROR_NONE)
 800cbe2:	6d60      	ldr	r0, [r4, #84]	; 0x54
    errorcode = HAL_BUSY;
 800cbe4:	3800      	subs	r0, #0
 800cbe6:	bf18      	it	ne
 800cbe8:	2001      	movne	r0, #1
error :
 800cbea:	e7a2      	b.n	800cb32 <HAL_SPI_Receive+0x3a>
  if ((hspi->Init.Mode == SPI_MODE_MASTER) && (hspi->Init.Direction == SPI_DIRECTION_2LINES))
 800cbec:	6883      	ldr	r3, [r0, #8]
 800cbee:	2b00      	cmp	r3, #0
 800cbf0:	d18d      	bne.n	800cb0e <HAL_SPI_Receive+0x16>
    return HAL_SPI_TransmitReceive(hspi, pData, pData, Size, Timeout);
 800cbf2:	9500      	str	r5, [sp, #0]
    hspi->State = HAL_SPI_STATE_BUSY_RX;
 800cbf4:	2504      	movs	r5, #4
    return HAL_SPI_TransmitReceive(hspi, pData, pData, Size, Timeout);
 800cbf6:	4613      	mov	r3, r2
    hspi->State = HAL_SPI_STATE_BUSY_RX;
 800cbf8:	f880 5051 	strb.w	r5, [r0, #81]	; 0x51
    return HAL_SPI_TransmitReceive(hspi, pData, pData, Size, Timeout);
 800cbfc:	460a      	mov	r2, r1
 800cbfe:	f7ff fdf5 	bl	800c7ec <HAL_SPI_TransmitReceive>
 800cc02:	e79c      	b.n	800cb3e <HAL_SPI_Receive+0x46>
  __HAL_LOCK(hspi);
 800cc04:	2002      	movs	r0, #2
}
 800cc06:	b002      	add	sp, #8
 800cc08:	e8bd 81f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, pc}
        *((uint16_t *)hspi->pRxBuffPtr) = (uint16_t)hspi->Instance->DR;
 800cc0c:	6ba2      	ldr	r2, [r4, #56]	; 0x38
 800cc0e:	68db      	ldr	r3, [r3, #12]
 800cc10:	f822 3b02 	strh.w	r3, [r2], #2
        hspi->RxXferCount--;
 800cc14:	8fe3      	ldrh	r3, [r4, #62]	; 0x3e
        hspi->pRxBuffPtr += sizeof(uint16_t);
 800cc16:	63a2      	str	r2, [r4, #56]	; 0x38
        hspi->RxXferCount--;
 800cc18:	3b01      	subs	r3, #1
 800cc1a:	b29b      	uxth	r3, r3
 800cc1c:	87e3      	strh	r3, [r4, #62]	; 0x3e
    while (hspi->RxXferCount > 0U)
 800cc1e:	8fe3      	ldrh	r3, [r4, #62]	; 0x3e
 800cc20:	b29b      	uxth	r3, r3
 800cc22:	2b00      	cmp	r3, #0
 800cc24:	d0d5      	beq.n	800cbd2 <HAL_SPI_Receive+0xda>
      if (__HAL_SPI_GET_FLAG(hspi, SPI_FLAG_RXNE))
 800cc26:	6823      	ldr	r3, [r4, #0]
 800cc28:	689a      	ldr	r2, [r3, #8]
 800cc2a:	07d2      	lsls	r2, r2, #31
 800cc2c:	d4ee      	bmi.n	800cc0c <HAL_SPI_Receive+0x114>
        if ((((HAL_GetTick() - tickstart) >=  Timeout) && (Timeout != HAL_MAX_DELAY)) || (Timeout == 0U))
 800cc2e:	f7fc fd39 	bl	80096a4 <HAL_GetTick>
 800cc32:	1b80      	subs	r0, r0, r6
 800cc34:	42a8      	cmp	r0, r5
 800cc36:	d243      	bcs.n	800ccc0 <HAL_SPI_Receive+0x1c8>
 800cc38:	e7f1      	b.n	800cc1e <HAL_SPI_Receive+0x126>
 800cc3a:	f7fc fd33 	bl	80096a4 <HAL_GetTick>
    while (hspi->RxXferCount > 0U)
 800cc3e:	8fe3      	ldrh	r3, [r4, #62]	; 0x3e
 800cc40:	b29b      	uxth	r3, r3
 800cc42:	2b00      	cmp	r3, #0
 800cc44:	d0c5      	beq.n	800cbd2 <HAL_SPI_Receive+0xda>
 800cc46:	6822      	ldr	r2, [r4, #0]
 800cc48:	e7af      	b.n	800cbaa <HAL_SPI_Receive+0xb2>
    while (hspi->RxXferCount > 0U)
 800cc4a:	8fe2      	ldrh	r2, [r4, #62]	; 0x3e
 800cc4c:	b292      	uxth	r2, r2
 800cc4e:	2a00      	cmp	r2, #0
 800cc50:	d0bf      	beq.n	800cbd2 <HAL_SPI_Receive+0xda>
 800cc52:	1c6f      	adds	r7, r5, #1
 800cc54:	d013      	beq.n	800cc7e <HAL_SPI_Receive+0x186>
 800cc56:	e02b      	b.n	800ccb0 <HAL_SPI_Receive+0x1b8>
        (* (uint8_t *)hspi->pRxBuffPtr) = *(__IO uint8_t *)&hspi->Instance->DR;
 800cc58:	6ba2      	ldr	r2, [r4, #56]	; 0x38
 800cc5a:	7b1b      	ldrb	r3, [r3, #12]
 800cc5c:	7013      	strb	r3, [r2, #0]
        hspi->RxXferCount--;
 800cc5e:	f8b4 c03e 	ldrh.w	ip, [r4, #62]	; 0x3e
        hspi->pRxBuffPtr += sizeof(uint8_t);
 800cc62:	6ba2      	ldr	r2, [r4, #56]	; 0x38
        hspi->RxXferCount--;
 800cc64:	f10c 3cff 	add.w	ip, ip, #4294967295
 800cc68:	fa1f fc8c 	uxth.w	ip, ip
 800cc6c:	f8a4 c03e 	strh.w	ip, [r4, #62]	; 0x3e
    while (hspi->RxXferCount > 0U)
 800cc70:	8fe3      	ldrh	r3, [r4, #62]	; 0x3e
        hspi->pRxBuffPtr += sizeof(uint8_t);
 800cc72:	3201      	adds	r2, #1
    while (hspi->RxXferCount > 0U)
 800cc74:	b29b      	uxth	r3, r3
        hspi->pRxBuffPtr += sizeof(uint8_t);
 800cc76:	63a2      	str	r2, [r4, #56]	; 0x38
    while (hspi->RxXferCount > 0U)
 800cc78:	2b00      	cmp	r3, #0
 800cc7a:	d0aa      	beq.n	800cbd2 <HAL_SPI_Receive+0xda>
      if (__HAL_SPI_GET_FLAG(hspi, SPI_FLAG_RXNE))
 800cc7c:	6823      	ldr	r3, [r4, #0]
 800cc7e:	689a      	ldr	r2, [r3, #8]
 800cc80:	07d0      	lsls	r0, r2, #31
 800cc82:	d4e9      	bmi.n	800cc58 <HAL_SPI_Receive+0x160>
        if ((((HAL_GetTick() - tickstart) >=  Timeout) && (Timeout != HAL_MAX_DELAY)) || (Timeout == 0U))
 800cc84:	f7fc fd0e 	bl	80096a4 <HAL_GetTick>
    while (hspi->RxXferCount > 0U)
 800cc88:	8fe3      	ldrh	r3, [r4, #62]	; 0x3e
 800cc8a:	b29b      	uxth	r3, r3
 800cc8c:	2b00      	cmp	r3, #0
 800cc8e:	d1f5      	bne.n	800cc7c <HAL_SPI_Receive+0x184>
 800cc90:	e79f      	b.n	800cbd2 <HAL_SPI_Receive+0xda>
        (* (uint8_t *)hspi->pRxBuffPtr) = *(__IO uint8_t *)&hspi->Instance->DR;
 800cc92:	6ba2      	ldr	r2, [r4, #56]	; 0x38
 800cc94:	7b1b      	ldrb	r3, [r3, #12]
 800cc96:	7013      	strb	r3, [r2, #0]
        hspi->RxXferCount--;
 800cc98:	8fe3      	ldrh	r3, [r4, #62]	; 0x3e
        hspi->pRxBuffPtr += sizeof(uint8_t);
 800cc9a:	6ba2      	ldr	r2, [r4, #56]	; 0x38
        hspi->RxXferCount--;
 800cc9c:	3b01      	subs	r3, #1
        hspi->pRxBuffPtr += sizeof(uint8_t);
 800cc9e:	3201      	adds	r2, #1
        hspi->RxXferCount--;
 800cca0:	b29b      	uxth	r3, r3
        hspi->pRxBuffPtr += sizeof(uint8_t);
 800cca2:	63a2      	str	r2, [r4, #56]	; 0x38
        hspi->RxXferCount--;
 800cca4:	87e3      	strh	r3, [r4, #62]	; 0x3e
    while (hspi->RxXferCount > 0U)
 800cca6:	8fe3      	ldrh	r3, [r4, #62]	; 0x3e
 800cca8:	b29b      	uxth	r3, r3
 800ccaa:	2b00      	cmp	r3, #0
 800ccac:	d091      	beq.n	800cbd2 <HAL_SPI_Receive+0xda>
      if (__HAL_SPI_GET_FLAG(hspi, SPI_FLAG_RXNE))
 800ccae:	6823      	ldr	r3, [r4, #0]
 800ccb0:	689a      	ldr	r2, [r3, #8]
 800ccb2:	07d1      	lsls	r1, r2, #31
 800ccb4:	d4ed      	bmi.n	800cc92 <HAL_SPI_Receive+0x19a>
        if ((((HAL_GetTick() - tickstart) >=  Timeout) && (Timeout != HAL_MAX_DELAY)) || (Timeout == 0U))
 800ccb6:	f7fc fcf5 	bl	80096a4 <HAL_GetTick>
 800ccba:	1b80      	subs	r0, r0, r6
 800ccbc:	42a8      	cmp	r0, r5
 800ccbe:	d3f2      	bcc.n	800cca6 <HAL_SPI_Receive+0x1ae>
          errorcode = HAL_TIMEOUT;
 800ccc0:	2003      	movs	r0, #3
 800ccc2:	e736      	b.n	800cb32 <HAL_SPI_Receive+0x3a>

0800ccc4 <HAL_TIM_Base_Init>:
  * @retval HAL status
  */
HAL_StatusTypeDef HAL_TIM_Base_Init(TIM_HandleTypeDef *htim)
{
  /* Check the TIM handle allocation */
  if (htim == NULL)
 800ccc4:	2800      	cmp	r0, #0
 800ccc6:	f000 8087 	beq.w	800cdd8 <HAL_TIM_Base_Init+0x114>
{
 800ccca:	b510      	push	{r4, lr}
  assert_param(IS_TIM_INSTANCE(htim->Instance));
  assert_param(IS_TIM_COUNTER_MODE(htim->Init.CounterMode));
  assert_param(IS_TIM_CLOCKDIVISION_DIV(htim->Init.ClockDivision));
  assert_param(IS_TIM_AUTORELOAD_PRELOAD(htim->Init.AutoReloadPreload));

  if (htim->State == HAL_TIM_STATE_RESET)
 800cccc:	f890 303d 	ldrb.w	r3, [r0, #61]	; 0x3d
 800ccd0:	4604      	mov	r4, r0
 800ccd2:	f003 02ff 	and.w	r2, r3, #255	; 0xff
 800ccd6:	2b00      	cmp	r3, #0
 800ccd8:	d079      	beq.n	800cdce <HAL_TIM_Base_Init+0x10a>

  /* Set the TIM state */
  htim->State = HAL_TIM_STATE_BUSY;

  /* Set the Time Base configuration */
  TIM_Base_SetConfig(htim->Instance, &htim->Init);
 800ccda:	6822      	ldr	r2, [r4, #0]
{
  uint32_t tmpcr1;
  tmpcr1 = TIMx->CR1;

  /* Set TIM Time Base Unit parameters ---------------------------------------*/
  if (IS_TIM_COUNTER_MODE_SELECT_INSTANCE(TIMx))
 800ccdc:	493f      	ldr	r1, [pc, #252]	; (800cddc <HAL_TIM_Base_Init+0x118>)
  htim->State = HAL_TIM_STATE_BUSY;
 800ccde:	2302      	movs	r3, #2
 800cce0:	f884 303d 	strb.w	r3, [r4, #61]	; 0x3d
  if (IS_TIM_COUNTER_MODE_SELECT_INSTANCE(TIMx))
 800cce4:	428a      	cmp	r2, r1
  tmpcr1 = TIMx->CR1;
 800cce6:	6813      	ldr	r3, [r2, #0]
  if (IS_TIM_COUNTER_MODE_SELECT_INSTANCE(TIMx))
 800cce8:	d05d      	beq.n	800cda6 <HAL_TIM_Base_Init+0xe2>
 800ccea:	f1b2 4f80 	cmp.w	r2, #1073741824	; 0x40000000
 800ccee:	d031      	beq.n	800cd54 <HAL_TIM_Base_Init+0x90>
 800ccf0:	f5a1 417c 	sub.w	r1, r1, #64512	; 0xfc00
 800ccf4:	428a      	cmp	r2, r1
 800ccf6:	d02d      	beq.n	800cd54 <HAL_TIM_Base_Init+0x90>
 800ccf8:	f501 6180 	add.w	r1, r1, #1024	; 0x400
 800ccfc:	428a      	cmp	r2, r1
 800ccfe:	d029      	beq.n	800cd54 <HAL_TIM_Base_Init+0x90>
 800cd00:	f501 6180 	add.w	r1, r1, #1024	; 0x400
 800cd04:	428a      	cmp	r2, r1
 800cd06:	d025      	beq.n	800cd54 <HAL_TIM_Base_Init+0x90>
 800cd08:	f501 4178 	add.w	r1, r1, #63488	; 0xf800
 800cd0c:	428a      	cmp	r2, r1
 800cd0e:	d04a      	beq.n	800cda6 <HAL_TIM_Base_Init+0xe2>
    /* Select the Counter Mode */
    tmpcr1 &= ~(TIM_CR1_DIR | TIM_CR1_CMS);
    tmpcr1 |= Structure->CounterMode;
  }

  if (IS_TIM_CLOCK_DIVISION_INSTANCE(TIMx))
 800cd10:	f501 5170 	add.w	r1, r1, #15360	; 0x3c00
 800cd14:	428a      	cmp	r2, r1
 800cd16:	d021      	beq.n	800cd5c <HAL_TIM_Base_Init+0x98>
 800cd18:	f501 6180 	add.w	r1, r1, #1024	; 0x400
 800cd1c:	428a      	cmp	r2, r1
 800cd1e:	d01d      	beq.n	800cd5c <HAL_TIM_Base_Init+0x98>
 800cd20:	f501 6180 	add.w	r1, r1, #1024	; 0x400
 800cd24:	428a      	cmp	r2, r1
 800cd26:	d019      	beq.n	800cd5c <HAL_TIM_Base_Init+0x98>
 800cd28:	f5a1 3198 	sub.w	r1, r1, #77824	; 0x13000
 800cd2c:	428a      	cmp	r2, r1
 800cd2e:	d015      	beq.n	800cd5c <HAL_TIM_Base_Init+0x98>
 800cd30:	f501 6180 	add.w	r1, r1, #1024	; 0x400
 800cd34:	428a      	cmp	r2, r1
 800cd36:	d011      	beq.n	800cd5c <HAL_TIM_Base_Init+0x98>
 800cd38:	f501 6180 	add.w	r1, r1, #1024	; 0x400
 800cd3c:	428a      	cmp	r2, r1
 800cd3e:	d00d      	beq.n	800cd5c <HAL_TIM_Base_Init+0x98>
    tmpcr1 &= ~TIM_CR1_CKD;
    tmpcr1 |= (uint32_t)Structure->ClockDivision;
  }

  /* Set the auto-reload preload */
  MODIFY_REG(tmpcr1, TIM_CR1_ARPE, Structure->AutoReloadPreload);
 800cd40:	69a0      	ldr	r0, [r4, #24]

  TIMx->CR1 = tmpcr1;

  /* Set the Autoreload value */
  TIMx->ARR = (uint32_t)Structure->Period ;
 800cd42:	68e1      	ldr	r1, [r4, #12]
  MODIFY_REG(tmpcr1, TIM_CR1_ARPE, Structure->AutoReloadPreload);
 800cd44:	f023 0380 	bic.w	r3, r3, #128	; 0x80
 800cd48:	4303      	orrs	r3, r0
  TIMx->CR1 = tmpcr1;
 800cd4a:	6013      	str	r3, [r2, #0]

  /* Set the Prescaler value */
  TIMx->PSC = Structure->Prescaler;
 800cd4c:	6863      	ldr	r3, [r4, #4]
  TIMx->ARR = (uint32_t)Structure->Period ;
 800cd4e:	62d1      	str	r1, [r2, #44]	; 0x2c
  TIMx->PSC = Structure->Prescaler;
 800cd50:	6293      	str	r3, [r2, #40]	; 0x28

  if (IS_TIM_REPETITION_COUNTER_INSTANCE(TIMx))
 800cd52:	e010      	b.n	800cd76 <HAL_TIM_Base_Init+0xb2>
    tmpcr1 |= Structure->CounterMode;
 800cd54:	68a1      	ldr	r1, [r4, #8]
    tmpcr1 &= ~(TIM_CR1_DIR | TIM_CR1_CMS);
 800cd56:	f023 0370 	bic.w	r3, r3, #112	; 0x70
    tmpcr1 |= Structure->CounterMode;
 800cd5a:	430b      	orrs	r3, r1
    tmpcr1 |= (uint32_t)Structure->ClockDivision;
 800cd5c:	6920      	ldr	r0, [r4, #16]
  MODIFY_REG(tmpcr1, TIM_CR1_ARPE, Structure->AutoReloadPreload);
 800cd5e:	69a1      	ldr	r1, [r4, #24]
    tmpcr1 &= ~TIM_CR1_CKD;
 800cd60:	f423 7340 	bic.w	r3, r3, #768	; 0x300
    tmpcr1 |= (uint32_t)Structure->ClockDivision;
 800cd64:	4303      	orrs	r3, r0
  MODIFY_REG(tmpcr1, TIM_CR1_ARPE, Structure->AutoReloadPreload);
 800cd66:	f023 0380 	bic.w	r3, r3, #128	; 0x80
  TIMx->ARR = (uint32_t)Structure->Period ;
 800cd6a:	68e0      	ldr	r0, [r4, #12]
  MODIFY_REG(tmpcr1, TIM_CR1_ARPE, Structure->AutoReloadPreload);
 800cd6c:	430b      	orrs	r3, r1
  TIMx->PSC = Structure->Prescaler;
 800cd6e:	6861      	ldr	r1, [r4, #4]
  TIMx->CR1 = tmpcr1;
 800cd70:	6013      	str	r3, [r2, #0]
  TIMx->ARR = (uint32_t)Structure->Period ;
 800cd72:	62d0      	str	r0, [r2, #44]	; 0x2c
  TIMx->PSC = Structure->Prescaler;
 800cd74:	6291      	str	r1, [r2, #40]	; 0x28
    TIMx->RCR = Structure->RepetitionCounter;
  }

  /* Generate an update event to reload the Prescaler
     and the repetition counter (only for advanced timer) value immediately */
  TIMx->EGR = TIM_EGR_UG;
 800cd76:	2301      	movs	r3, #1
 800cd78:	6153      	str	r3, [r2, #20]
  htim->DMABurstState = HAL_DMA_BURST_STATE_READY;
 800cd7a:	f884 3046 	strb.w	r3, [r4, #70]	; 0x46
  TIM_CHANNEL_STATE_SET_ALL(htim, HAL_TIM_CHANNEL_STATE_READY);
 800cd7e:	f884 303e 	strb.w	r3, [r4, #62]	; 0x3e
 800cd82:	f884 303f 	strb.w	r3, [r4, #63]	; 0x3f
 800cd86:	f884 3040 	strb.w	r3, [r4, #64]	; 0x40
 800cd8a:	f884 3041 	strb.w	r3, [r4, #65]	; 0x41
  TIM_CHANNEL_N_STATE_SET_ALL(htim, HAL_TIM_CHANNEL_STATE_READY);
 800cd8e:	f884 3042 	strb.w	r3, [r4, #66]	; 0x42
 800cd92:	f884 3043 	strb.w	r3, [r4, #67]	; 0x43
 800cd96:	f884 3044 	strb.w	r3, [r4, #68]	; 0x44
 800cd9a:	f884 3045 	strb.w	r3, [r4, #69]	; 0x45
  htim->State = HAL_TIM_STATE_READY;
 800cd9e:	f884 303d 	strb.w	r3, [r4, #61]	; 0x3d
  return HAL_OK;
 800cda2:	2000      	movs	r0, #0
}
 800cda4:	bd10      	pop	{r4, pc}
    tmpcr1 |= Structure->CounterMode;
 800cda6:	68a0      	ldr	r0, [r4, #8]
    tmpcr1 |= (uint32_t)Structure->ClockDivision;
 800cda8:	6921      	ldr	r1, [r4, #16]
    tmpcr1 &= ~(TIM_CR1_DIR | TIM_CR1_CMS);
 800cdaa:	f023 0370 	bic.w	r3, r3, #112	; 0x70
    tmpcr1 |= Structure->CounterMode;
 800cdae:	4303      	orrs	r3, r0
    tmpcr1 &= ~TIM_CR1_CKD;
 800cdb0:	f423 7340 	bic.w	r3, r3, #768	; 0x300
    tmpcr1 |= (uint32_t)Structure->ClockDivision;
 800cdb4:	430b      	orrs	r3, r1
  MODIFY_REG(tmpcr1, TIM_CR1_ARPE, Structure->AutoReloadPreload);
 800cdb6:	69a1      	ldr	r1, [r4, #24]
 800cdb8:	f023 0380 	bic.w	r3, r3, #128	; 0x80
 800cdbc:	430b      	orrs	r3, r1
  TIMx->CR1 = tmpcr1;
 800cdbe:	6013      	str	r3, [r2, #0]
  TIMx->ARR = (uint32_t)Structure->Period ;
 800cdc0:	68e3      	ldr	r3, [r4, #12]
 800cdc2:	62d3      	str	r3, [r2, #44]	; 0x2c
  TIMx->PSC = Structure->Prescaler;
 800cdc4:	6863      	ldr	r3, [r4, #4]
 800cdc6:	6293      	str	r3, [r2, #40]	; 0x28
    TIMx->RCR = Structure->RepetitionCounter;
 800cdc8:	6963      	ldr	r3, [r4, #20]
 800cdca:	6313      	str	r3, [r2, #48]	; 0x30
 800cdcc:	e7d3      	b.n	800cd76 <HAL_TIM_Base_Init+0xb2>
    htim->Lock = HAL_UNLOCKED;
 800cdce:	f880 203c 	strb.w	r2, [r0, #60]	; 0x3c
    HAL_TIM_Base_MspInit(htim);
 800cdd2:	f7f4 fd81 	bl	80018d8 <HAL_TIM_Base_MspInit>
 800cdd6:	e780      	b.n	800ccda <HAL_TIM_Base_Init+0x16>
    return HAL_ERROR;
 800cdd8:	2001      	movs	r0, #1
}
 800cdda:	4770      	bx	lr
 800cddc:	40010000 	.word	0x40010000

0800cde0 <HAL_TIM_Base_Start_IT>:
  if (htim->State != HAL_TIM_STATE_READY)
 800cde0:	f890 303d 	ldrb.w	r3, [r0, #61]	; 0x3d
 800cde4:	2b01      	cmp	r3, #1
 800cde6:	d12f      	bne.n	800ce48 <HAL_TIM_Base_Start_IT+0x68>
  __HAL_TIM_ENABLE_IT(htim, TIM_IT_UPDATE);
 800cde8:	6803      	ldr	r3, [r0, #0]
  if (IS_TIM_SLAVE_INSTANCE(htim->Instance))
 800cdea:	4919      	ldr	r1, [pc, #100]	; (800ce50 <HAL_TIM_Base_Start_IT+0x70>)
  htim->State = HAL_TIM_STATE_BUSY;
 800cdec:	2202      	movs	r2, #2
 800cdee:	f880 203d 	strb.w	r2, [r0, #61]	; 0x3d
  __HAL_TIM_ENABLE_IT(htim, TIM_IT_UPDATE);
 800cdf2:	68da      	ldr	r2, [r3, #12]
  if (IS_TIM_SLAVE_INSTANCE(htim->Instance))
 800cdf4:	428b      	cmp	r3, r1
  __HAL_TIM_ENABLE_IT(htim, TIM_IT_UPDATE);
 800cdf6:	f042 0201 	orr.w	r2, r2, #1
 800cdfa:	60da      	str	r2, [r3, #12]
  if (IS_TIM_SLAVE_INSTANCE(htim->Instance))
 800cdfc:	d019      	beq.n	800ce32 <HAL_TIM_Base_Start_IT+0x52>
 800cdfe:	f1b3 4f80 	cmp.w	r3, #1073741824	; 0x40000000
 800ce02:	d016      	beq.n	800ce32 <HAL_TIM_Base_Start_IT+0x52>
 800ce04:	4a13      	ldr	r2, [pc, #76]	; (800ce54 <HAL_TIM_Base_Start_IT+0x74>)
 800ce06:	4293      	cmp	r3, r2
 800ce08:	d013      	beq.n	800ce32 <HAL_TIM_Base_Start_IT+0x52>
 800ce0a:	f502 6280 	add.w	r2, r2, #1024	; 0x400
 800ce0e:	4293      	cmp	r3, r2
 800ce10:	d00f      	beq.n	800ce32 <HAL_TIM_Base_Start_IT+0x52>
 800ce12:	f502 6280 	add.w	r2, r2, #1024	; 0x400
 800ce16:	4293      	cmp	r3, r2
 800ce18:	d00b      	beq.n	800ce32 <HAL_TIM_Base_Start_IT+0x52>
 800ce1a:	f502 4278 	add.w	r2, r2, #63488	; 0xf800
 800ce1e:	4293      	cmp	r3, r2
 800ce20:	d007      	beq.n	800ce32 <HAL_TIM_Base_Start_IT+0x52>
 800ce22:	f502 5270 	add.w	r2, r2, #15360	; 0x3c00
 800ce26:	4293      	cmp	r3, r2
 800ce28:	d003      	beq.n	800ce32 <HAL_TIM_Base_Start_IT+0x52>
 800ce2a:	f5a2 3294 	sub.w	r2, r2, #75776	; 0x12800
 800ce2e:	4293      	cmp	r3, r2
 800ce30:	d104      	bne.n	800ce3c <HAL_TIM_Base_Start_IT+0x5c>
    tmpsmcr = htim->Instance->SMCR & TIM_SMCR_SMS;
 800ce32:	689a      	ldr	r2, [r3, #8]
 800ce34:	f002 0207 	and.w	r2, r2, #7
    if (!IS_TIM_SLAVEMODE_TRIGGER_ENABLED(tmpsmcr))
 800ce38:	2a06      	cmp	r2, #6
 800ce3a:	d007      	beq.n	800ce4c <HAL_TIM_Base_Start_IT+0x6c>
    __HAL_TIM_ENABLE(htim);
 800ce3c:	681a      	ldr	r2, [r3, #0]
 800ce3e:	f042 0201 	orr.w	r2, r2, #1
  return HAL_OK;
 800ce42:	2000      	movs	r0, #0
    __HAL_TIM_ENABLE(htim);
 800ce44:	601a      	str	r2, [r3, #0]
 800ce46:	4770      	bx	lr
    return HAL_ERROR;
 800ce48:	2001      	movs	r0, #1
 800ce4a:	4770      	bx	lr
  return HAL_OK;
 800ce4c:	2000      	movs	r0, #0
}
 800ce4e:	4770      	bx	lr
 800ce50:	40010000 	.word	0x40010000
 800ce54:	40000400 	.word	0x40000400

0800ce58 <HAL_TIM_ConfigClockSource>:
  __HAL_LOCK(htim);
 800ce58:	f890 303c 	ldrb.w	r3, [r0, #60]	; 0x3c
 800ce5c:	2b01      	cmp	r3, #1
 800ce5e:	d075      	beq.n	800cf4c <HAL_TIM_ConfigClockSource+0xf4>
 800ce60:	4602      	mov	r2, r0
{
 800ce62:	b430      	push	{r4, r5}
  htim->State = HAL_TIM_STATE_BUSY;
 800ce64:	2302      	movs	r3, #2
  tmpsmcr = htim->Instance->SMCR;
 800ce66:	6804      	ldr	r4, [r0, #0]
  htim->State = HAL_TIM_STATE_BUSY;
 800ce68:	f882 303d 	strb.w	r3, [r2, #61]	; 0x3d
  __HAL_LOCK(htim);
 800ce6c:	2001      	movs	r0, #1
 800ce6e:	f882 003c 	strb.w	r0, [r2, #60]	; 0x3c
  tmpsmcr = htim->Instance->SMCR;
 800ce72:	68a3      	ldr	r3, [r4, #8]
  tmpsmcr &= ~(TIM_SMCR_ETF | TIM_SMCR_ETPS | TIM_SMCR_ECE | TIM_SMCR_ETP);
 800ce74:	f423 437f 	bic.w	r3, r3, #65280	; 0xff00
 800ce78:	f023 0377 	bic.w	r3, r3, #119	; 0x77
  htim->Instance->SMCR = tmpsmcr;
 800ce7c:	60a3      	str	r3, [r4, #8]
  switch (sClockSourceConfig->ClockSource)
 800ce7e:	680b      	ldr	r3, [r1, #0]
 800ce80:	2b60      	cmp	r3, #96	; 0x60
 800ce82:	d065      	beq.n	800cf50 <HAL_TIM_ConfigClockSource+0xf8>
 800ce84:	d824      	bhi.n	800ced0 <HAL_TIM_ConfigClockSource+0x78>
 800ce86:	2b40      	cmp	r3, #64	; 0x40
 800ce88:	d07c      	beq.n	800cf84 <HAL_TIM_ConfigClockSource+0x12c>
 800ce8a:	d94b      	bls.n	800cf24 <HAL_TIM_ConfigClockSource+0xcc>
 800ce8c:	2b50      	cmp	r3, #80	; 0x50
 800ce8e:	d117      	bne.n	800cec0 <HAL_TIM_ConfigClockSource+0x68>
      TIM_TI1_ConfigInputStage(htim->Instance,
 800ce90:	684b      	ldr	r3, [r1, #4]
 800ce92:	68cd      	ldr	r5, [r1, #12]
{
  uint32_t tmpccmr1;
  uint32_t tmpccer;

  /* Disable the Channel 1: Reset the CC1E Bit */
  tmpccer = TIMx->CCER;
 800ce94:	6a21      	ldr	r1, [r4, #32]
  /* Set the filter */
  tmpccmr1 &= ~TIM_CCMR1_IC1F;
  tmpccmr1 |= (TIM_ICFilter << 4U);

  /* Select the Polarity and set the CC1E Bit */
  tmpccer &= ~(TIM_CCER_CC1P | TIM_CCER_CC1NP);
 800ce96:	f021 010a 	bic.w	r1, r1, #10
  tmpccer |= TIM_ICPolarity;
 800ce9a:	4319      	orrs	r1, r3
  TIMx->CCER &= ~TIM_CCER_CC1E;
 800ce9c:	6a23      	ldr	r3, [r4, #32]
 800ce9e:	f023 0301 	bic.w	r3, r3, #1
 800cea2:	6223      	str	r3, [r4, #32]
  tmpccmr1 = TIMx->CCMR1;
 800cea4:	69a3      	ldr	r3, [r4, #24]
  tmpccmr1 &= ~TIM_CCMR1_IC1F;
 800cea6:	f023 03f0 	bic.w	r3, r3, #240	; 0xf0
  tmpccmr1 |= (TIM_ICFilter << 4U);
 800ceaa:	ea43 1305 	orr.w	r3, r3, r5, lsl #4

  /* Write to TIMx CCMR1 and CCER registers */
  TIMx->CCMR1 = tmpccmr1;
 800ceae:	61a3      	str	r3, [r4, #24]
  TIMx->CCER = tmpccer;
 800ceb0:	6221      	str	r1, [r4, #32]
static void TIM_ITRx_SetConfig(TIM_TypeDef *TIMx, uint32_t InputTriggerSource)
{
  uint32_t tmpsmcr;

  /* Get the TIMx SMCR register value */
  tmpsmcr = TIMx->SMCR;
 800ceb2:	68a3      	ldr	r3, [r4, #8]
  /* Reset the TS Bits */
  tmpsmcr &= ~TIM_SMCR_TS;
 800ceb4:	f023 0370 	bic.w	r3, r3, #112	; 0x70
  /* Set the Input Trigger source and the slave mode*/
  tmpsmcr |= (InputTriggerSource | TIM_SLAVEMODE_EXTERNAL1);
 800ceb8:	f043 0357 	orr.w	r3, r3, #87	; 0x57
  HAL_StatusTypeDef status = HAL_OK;
 800cebc:	2000      	movs	r0, #0
  /* Write to TIMx SMCR */
  TIMx->SMCR = tmpsmcr;
 800cebe:	60a3      	str	r3, [r4, #8]
  htim->State = HAL_TIM_STATE_READY;
 800cec0:	2101      	movs	r1, #1
  __HAL_UNLOCK(htim);
 800cec2:	2300      	movs	r3, #0
  htim->State = HAL_TIM_STATE_READY;
 800cec4:	f882 103d 	strb.w	r1, [r2, #61]	; 0x3d
  __HAL_UNLOCK(htim);
 800cec8:	f882 303c 	strb.w	r3, [r2, #60]	; 0x3c
}
 800cecc:	bc30      	pop	{r4, r5}
 800cece:	4770      	bx	lr
  switch (sClockSourceConfig->ClockSource)
 800ced0:	f5b3 5f80 	cmp.w	r3, #4096	; 0x1000
 800ced4:	d038      	beq.n	800cf48 <HAL_TIM_ConfigClockSource+0xf0>
 800ced6:	f5b3 5f00 	cmp.w	r3, #8192	; 0x2000
 800ceda:	d110      	bne.n	800cefe <HAL_TIM_ConfigClockSource+0xa6>

  /* Reset the ETR Bits */
  tmpsmcr &= ~(TIM_SMCR_ETF | TIM_SMCR_ETPS | TIM_SMCR_ECE | TIM_SMCR_ETP);

  /* Set the Prescaler, the Filter value and the Polarity */
  tmpsmcr |= (uint32_t)(TIM_ExtTRGPrescaler | (TIM_ExtTRGPolarity | (ExtTRGFilter << 8U)));
 800cedc:	e9d1 5301 	ldrd	r5, r3, [r1, #4]
  tmpsmcr = TIMx->SMCR;
 800cee0:	68a0      	ldr	r0, [r4, #8]
  tmpsmcr |= (uint32_t)(TIM_ExtTRGPrescaler | (TIM_ExtTRGPolarity | (ExtTRGFilter << 8U)));
 800cee2:	432b      	orrs	r3, r5
 800cee4:	68cd      	ldr	r5, [r1, #12]
  tmpsmcr &= ~(TIM_SMCR_ETF | TIM_SMCR_ETPS | TIM_SMCR_ECE | TIM_SMCR_ETP);
 800cee6:	f420 417f 	bic.w	r1, r0, #65280	; 0xff00
  tmpsmcr |= (uint32_t)(TIM_ExtTRGPrescaler | (TIM_ExtTRGPolarity | (ExtTRGFilter << 8U)));
 800ceea:	ea43 2305 	orr.w	r3, r3, r5, lsl #8
 800ceee:	430b      	orrs	r3, r1

  /* Write to TIMx SMCR */
  TIMx->SMCR = tmpsmcr;
 800cef0:	60a3      	str	r3, [r4, #8]
      htim->Instance->SMCR |= TIM_SMCR_ECE;
 800cef2:	68a3      	ldr	r3, [r4, #8]
 800cef4:	f443 4380 	orr.w	r3, r3, #16384	; 0x4000
  HAL_StatusTypeDef status = HAL_OK;
 800cef8:	2000      	movs	r0, #0
      htim->Instance->SMCR |= TIM_SMCR_ECE;
 800cefa:	60a3      	str	r3, [r4, #8]
      break;
 800cefc:	e7e0      	b.n	800cec0 <HAL_TIM_ConfigClockSource+0x68>
  switch (sClockSourceConfig->ClockSource)
 800cefe:	2b70      	cmp	r3, #112	; 0x70
 800cf00:	d1de      	bne.n	800cec0 <HAL_TIM_ConfigClockSource+0x68>
  tmpsmcr |= (uint32_t)(TIM_ExtTRGPrescaler | (TIM_ExtTRGPolarity | (ExtTRGFilter << 8U)));
 800cf02:	e9d1 5301 	ldrd	r5, r3, [r1, #4]
  tmpsmcr = TIMx->SMCR;
 800cf06:	68a0      	ldr	r0, [r4, #8]
  tmpsmcr |= (uint32_t)(TIM_ExtTRGPrescaler | (TIM_ExtTRGPolarity | (ExtTRGFilter << 8U)));
 800cf08:	432b      	orrs	r3, r5
 800cf0a:	68cd      	ldr	r5, [r1, #12]
  tmpsmcr &= ~(TIM_SMCR_ETF | TIM_SMCR_ETPS | TIM_SMCR_ECE | TIM_SMCR_ETP);
 800cf0c:	f420 417f 	bic.w	r1, r0, #65280	; 0xff00
  tmpsmcr |= (uint32_t)(TIM_ExtTRGPrescaler | (TIM_ExtTRGPolarity | (ExtTRGFilter << 8U)));
 800cf10:	ea43 2305 	orr.w	r3, r3, r5, lsl #8
 800cf14:	430b      	orrs	r3, r1
  TIMx->SMCR = tmpsmcr;
 800cf16:	60a3      	str	r3, [r4, #8]
      tmpsmcr = htim->Instance->SMCR;
 800cf18:	68a3      	ldr	r3, [r4, #8]
      tmpsmcr |= (TIM_SLAVEMODE_EXTERNAL1 | TIM_CLOCKSOURCE_ETRMODE1);
 800cf1a:	f043 0377 	orr.w	r3, r3, #119	; 0x77
  HAL_StatusTypeDef status = HAL_OK;
 800cf1e:	2000      	movs	r0, #0
      htim->Instance->SMCR = tmpsmcr;
 800cf20:	60a3      	str	r3, [r4, #8]
      break;
 800cf22:	e7cd      	b.n	800cec0 <HAL_TIM_ConfigClockSource+0x68>
  switch (sClockSourceConfig->ClockSource)
 800cf24:	2b20      	cmp	r3, #32
 800cf26:	d002      	beq.n	800cf2e <HAL_TIM_ConfigClockSource+0xd6>
 800cf28:	d90a      	bls.n	800cf40 <HAL_TIM_ConfigClockSource+0xe8>
 800cf2a:	2b30      	cmp	r3, #48	; 0x30
 800cf2c:	d1c8      	bne.n	800cec0 <HAL_TIM_ConfigClockSource+0x68>
  tmpsmcr = TIMx->SMCR;
 800cf2e:	68a1      	ldr	r1, [r4, #8]
  tmpsmcr &= ~TIM_SMCR_TS;
 800cf30:	f021 0170 	bic.w	r1, r1, #112	; 0x70
  tmpsmcr |= (InputTriggerSource | TIM_SLAVEMODE_EXTERNAL1);
 800cf34:	430b      	orrs	r3, r1
 800cf36:	f043 0307 	orr.w	r3, r3, #7
  HAL_StatusTypeDef status = HAL_OK;
 800cf3a:	2000      	movs	r0, #0
  TIMx->SMCR = tmpsmcr;
 800cf3c:	60a3      	str	r3, [r4, #8]
}
 800cf3e:	e7bf      	b.n	800cec0 <HAL_TIM_ConfigClockSource+0x68>
  switch (sClockSourceConfig->ClockSource)
 800cf40:	f033 0110 	bics.w	r1, r3, #16
 800cf44:	d1bc      	bne.n	800cec0 <HAL_TIM_ConfigClockSource+0x68>
 800cf46:	e7f2      	b.n	800cf2e <HAL_TIM_ConfigClockSource+0xd6>
  HAL_StatusTypeDef status = HAL_OK;
 800cf48:	2000      	movs	r0, #0
 800cf4a:	e7b9      	b.n	800cec0 <HAL_TIM_ConfigClockSource+0x68>
  __HAL_LOCK(htim);
 800cf4c:	2002      	movs	r0, #2
}
 800cf4e:	4770      	bx	lr
  TIMx->CCER &= ~TIM_CCER_CC2E;
 800cf50:	6a23      	ldr	r3, [r4, #32]
      TIM_TI2_ConfigInputStage(htim->Instance,
 800cf52:	6848      	ldr	r0, [r1, #4]
 800cf54:	68cd      	ldr	r5, [r1, #12]
  TIMx->CCER &= ~TIM_CCER_CC2E;
 800cf56:	f023 0310 	bic.w	r3, r3, #16
 800cf5a:	6223      	str	r3, [r4, #32]
  tmpccmr1 = TIMx->CCMR1;
 800cf5c:	69a1      	ldr	r1, [r4, #24]
  tmpccer = TIMx->CCER;
 800cf5e:	6a23      	ldr	r3, [r4, #32]
  tmpccmr1 &= ~TIM_CCMR1_IC2F;
 800cf60:	f421 4170 	bic.w	r1, r1, #61440	; 0xf000
  tmpccer &= ~(TIM_CCER_CC2P | TIM_CCER_CC2NP);
 800cf64:	f023 03a0 	bic.w	r3, r3, #160	; 0xa0
  tmpccer |= (TIM_ICPolarity << 4U);
 800cf68:	ea43 1300 	orr.w	r3, r3, r0, lsl #4
  tmpccmr1 |= (TIM_ICFilter << 12U);
 800cf6c:	ea41 3105 	orr.w	r1, r1, r5, lsl #12
  TIMx->CCMR1 = tmpccmr1 ;
 800cf70:	61a1      	str	r1, [r4, #24]
  TIMx->CCER = tmpccer;
 800cf72:	6223      	str	r3, [r4, #32]
  tmpsmcr = TIMx->SMCR;
 800cf74:	68a3      	ldr	r3, [r4, #8]
  tmpsmcr &= ~TIM_SMCR_TS;
 800cf76:	f023 0370 	bic.w	r3, r3, #112	; 0x70
  tmpsmcr |= (InputTriggerSource | TIM_SLAVEMODE_EXTERNAL1);
 800cf7a:	f043 0367 	orr.w	r3, r3, #103	; 0x67
  HAL_StatusTypeDef status = HAL_OK;
 800cf7e:	2000      	movs	r0, #0
  TIMx->SMCR = tmpsmcr;
 800cf80:	60a3      	str	r3, [r4, #8]
}
 800cf82:	e79d      	b.n	800cec0 <HAL_TIM_ConfigClockSource+0x68>
      TIM_TI1_ConfigInputStage(htim->Instance,
 800cf84:	684b      	ldr	r3, [r1, #4]
 800cf86:	68cd      	ldr	r5, [r1, #12]
  tmpccer = TIMx->CCER;
 800cf88:	6a21      	ldr	r1, [r4, #32]
  tmpccer &= ~(TIM_CCER_CC1P | TIM_CCER_CC1NP);
 800cf8a:	f021 010a 	bic.w	r1, r1, #10
  tmpccer |= TIM_ICPolarity;
 800cf8e:	4319      	orrs	r1, r3
  TIMx->CCER &= ~TIM_CCER_CC1E;
 800cf90:	6a23      	ldr	r3, [r4, #32]
 800cf92:	f023 0301 	bic.w	r3, r3, #1
 800cf96:	6223      	str	r3, [r4, #32]
  tmpccmr1 = TIMx->CCMR1;
 800cf98:	69a3      	ldr	r3, [r4, #24]
  tmpccmr1 &= ~TIM_CCMR1_IC1F;
 800cf9a:	f023 03f0 	bic.w	r3, r3, #240	; 0xf0
  tmpccmr1 |= (TIM_ICFilter << 4U);
 800cf9e:	ea43 1305 	orr.w	r3, r3, r5, lsl #4
  TIMx->CCMR1 = tmpccmr1;
 800cfa2:	61a3      	str	r3, [r4, #24]
  TIMx->CCER = tmpccer;
 800cfa4:	6221      	str	r1, [r4, #32]
  tmpsmcr = TIMx->SMCR;
 800cfa6:	68a3      	ldr	r3, [r4, #8]
  tmpsmcr &= ~TIM_SMCR_TS;
 800cfa8:	f023 0370 	bic.w	r3, r3, #112	; 0x70
  tmpsmcr |= (InputTriggerSource | TIM_SLAVEMODE_EXTERNAL1);
 800cfac:	f043 0347 	orr.w	r3, r3, #71	; 0x47
  HAL_StatusTypeDef status = HAL_OK;
 800cfb0:	2000      	movs	r0, #0
  TIMx->SMCR = tmpsmcr;
 800cfb2:	60a3      	str	r3, [r4, #8]
}
 800cfb4:	e784      	b.n	800cec0 <HAL_TIM_ConfigClockSource+0x68>
 800cfb6:	bf00      	nop

0800cfb8 <HAL_TIM_SlaveConfigSynchro>:
  __HAL_LOCK(htim);
 800cfb8:	f890 203c 	ldrb.w	r2, [r0, #60]	; 0x3c
 800cfbc:	2a01      	cmp	r2, #1
 800cfbe:	d050      	beq.n	800d062 <HAL_TIM_SlaveConfigSynchro+0xaa>
 800cfc0:	4603      	mov	r3, r0
{
 800cfc2:	b430      	push	{r4, r5}
  htim->State = HAL_TIM_STATE_BUSY;
 800cfc4:	2202      	movs	r2, #2
  tmpsmcr = htim->Instance->SMCR;
 800cfc6:	6804      	ldr	r4, [r0, #0]
  htim->State = HAL_TIM_STATE_BUSY;
 800cfc8:	f883 203d 	strb.w	r2, [r3, #61]	; 0x3d
  __HAL_LOCK(htim);
 800cfcc:	2001      	movs	r0, #1
 800cfce:	f883 003c 	strb.w	r0, [r3, #60]	; 0x3c
  tmpsmcr = htim->Instance->SMCR;
 800cfd2:	68a2      	ldr	r2, [r4, #8]
  tmpsmcr |= sSlaveConfig->InputTrigger;
 800cfd4:	6848      	ldr	r0, [r1, #4]
  tmpsmcr |= sSlaveConfig->SlaveMode;
 800cfd6:	680d      	ldr	r5, [r1, #0]
  tmpsmcr &= ~TIM_SMCR_TS;
 800cfd8:	f022 0270 	bic.w	r2, r2, #112	; 0x70
  tmpsmcr |= sSlaveConfig->InputTrigger;
 800cfdc:	4302      	orrs	r2, r0
  tmpsmcr &= ~TIM_SMCR_SMS;
 800cfde:	f022 0207 	bic.w	r2, r2, #7
  tmpsmcr |= sSlaveConfig->SlaveMode;
 800cfe2:	432a      	orrs	r2, r5
  switch (sSlaveConfig->InputTrigger)
 800cfe4:	2850      	cmp	r0, #80	; 0x50
  htim->Instance->SMCR = tmpsmcr;
 800cfe6:	60a2      	str	r2, [r4, #8]
  switch (sSlaveConfig->InputTrigger)
 800cfe8:	d060      	beq.n	800d0ac <HAL_TIM_SlaveConfigSynchro+0xf4>
 800cfea:	d90f      	bls.n	800d00c <HAL_TIM_SlaveConfigSynchro+0x54>
 800cfec:	2860      	cmp	r0, #96	; 0x60
 800cfee:	d03a      	beq.n	800d066 <HAL_TIM_SlaveConfigSynchro+0xae>
 800cff0:	2870      	cmp	r0, #112	; 0x70
 800cff2:	d10e      	bne.n	800d012 <HAL_TIM_SlaveConfigSynchro+0x5a>
  tmpsmcr |= (uint32_t)(TIM_ExtTRGPrescaler | (TIM_ExtTRGPolarity | (ExtTRGFilter << 8U)));
 800cff4:	e9d1 5202 	ldrd	r5, r2, [r1, #8]
  tmpsmcr = TIMx->SMCR;
 800cff8:	68a0      	ldr	r0, [r4, #8]
  tmpsmcr |= (uint32_t)(TIM_ExtTRGPrescaler | (TIM_ExtTRGPolarity | (ExtTRGFilter << 8U)));
 800cffa:	432a      	orrs	r2, r5
 800cffc:	690d      	ldr	r5, [r1, #16]
  tmpsmcr &= ~(TIM_SMCR_ETF | TIM_SMCR_ETPS | TIM_SMCR_ECE | TIM_SMCR_ETP);
 800cffe:	f420 417f 	bic.w	r1, r0, #65280	; 0xff00
  tmpsmcr |= (uint32_t)(TIM_ExtTRGPrescaler | (TIM_ExtTRGPolarity | (ExtTRGFilter << 8U)));
 800d002:	ea42 2205 	orr.w	r2, r2, r5, lsl #8
 800d006:	430a      	orrs	r2, r1
  TIMx->SMCR = tmpsmcr;
 800d008:	60a2      	str	r2, [r4, #8]
 800d00a:	e00f      	b.n	800d02c <HAL_TIM_SlaveConfigSynchro+0x74>
  switch (sSlaveConfig->InputTrigger)
 800d00c:	2840      	cmp	r0, #64	; 0x40
 800d00e:	d03d      	beq.n	800d08c <HAL_TIM_SlaveConfigSynchro+0xd4>
 800d010:	d907      	bls.n	800d022 <HAL_TIM_SlaveConfigSynchro+0x6a>
    htim->State = HAL_TIM_STATE_READY;
 800d012:	2001      	movs	r0, #1
    __HAL_UNLOCK(htim);
 800d014:	2200      	movs	r2, #0
    htim->State = HAL_TIM_STATE_READY;
 800d016:	f883 003d 	strb.w	r0, [r3, #61]	; 0x3d
    __HAL_UNLOCK(htim);
 800d01a:	f883 203c 	strb.w	r2, [r3, #60]	; 0x3c
}
 800d01e:	bc30      	pop	{r4, r5}
 800d020:	4770      	bx	lr
  switch (sSlaveConfig->InputTrigger)
 800d022:	2820      	cmp	r0, #32
 800d024:	d002      	beq.n	800d02c <HAL_TIM_SlaveConfigSynchro+0x74>
 800d026:	d912      	bls.n	800d04e <HAL_TIM_SlaveConfigSynchro+0x96>
 800d028:	2830      	cmp	r0, #48	; 0x30
 800d02a:	d1f2      	bne.n	800d012 <HAL_TIM_SlaveConfigSynchro+0x5a>
  __HAL_TIM_DISABLE_IT(htim, TIM_IT_TRIGGER);
 800d02c:	68e2      	ldr	r2, [r4, #12]
 800d02e:	f022 0240 	bic.w	r2, r2, #64	; 0x40
 800d032:	60e2      	str	r2, [r4, #12]
  __HAL_TIM_DISABLE_DMA(htim, TIM_DMA_TRIGGER);
 800d034:	68e2      	ldr	r2, [r4, #12]
  __HAL_UNLOCK(htim);
 800d036:	2100      	movs	r1, #0
  htim->State = HAL_TIM_STATE_READY;
 800d038:	2501      	movs	r5, #1
  __HAL_TIM_DISABLE_DMA(htim, TIM_DMA_TRIGGER);
 800d03a:	f422 4280 	bic.w	r2, r2, #16384	; 0x4000
 800d03e:	60e2      	str	r2, [r4, #12]
  htim->State = HAL_TIM_STATE_READY;
 800d040:	f883 503d 	strb.w	r5, [r3, #61]	; 0x3d
  __HAL_UNLOCK(htim);
 800d044:	f883 103c 	strb.w	r1, [r3, #60]	; 0x3c
  return HAL_OK;
 800d048:	4608      	mov	r0, r1
}
 800d04a:	bc30      	pop	{r4, r5}
 800d04c:	4770      	bx	lr
  switch (sSlaveConfig->InputTrigger)
 800d04e:	f030 0210 	bics.w	r2, r0, #16
 800d052:	d0eb      	beq.n	800d02c <HAL_TIM_SlaveConfigSynchro+0x74>
    htim->State = HAL_TIM_STATE_READY;
 800d054:	2001      	movs	r0, #1
    __HAL_UNLOCK(htim);
 800d056:	2200      	movs	r2, #0
    htim->State = HAL_TIM_STATE_READY;
 800d058:	f883 003d 	strb.w	r0, [r3, #61]	; 0x3d
    __HAL_UNLOCK(htim);
 800d05c:	f883 203c 	strb.w	r2, [r3, #60]	; 0x3c
    return HAL_ERROR;
 800d060:	e7dd      	b.n	800d01e <HAL_TIM_SlaveConfigSynchro+0x66>
  __HAL_LOCK(htim);
 800d062:	2002      	movs	r0, #2
}
 800d064:	4770      	bx	lr
  TIMx->CCER &= ~TIM_CCER_CC2E;
 800d066:	6a22      	ldr	r2, [r4, #32]
      TIM_TI2_ConfigInputStage(htim->Instance,
 800d068:	6888      	ldr	r0, [r1, #8]
 800d06a:	690d      	ldr	r5, [r1, #16]
  TIMx->CCER &= ~TIM_CCER_CC2E;
 800d06c:	f022 0210 	bic.w	r2, r2, #16
 800d070:	6222      	str	r2, [r4, #32]
  tmpccmr1 = TIMx->CCMR1;
 800d072:	69a1      	ldr	r1, [r4, #24]
  tmpccer = TIMx->CCER;
 800d074:	6a22      	ldr	r2, [r4, #32]
  tmpccmr1 &= ~TIM_CCMR1_IC2F;
 800d076:	f421 4170 	bic.w	r1, r1, #61440	; 0xf000
  tmpccer &= ~(TIM_CCER_CC2P | TIM_CCER_CC2NP);
 800d07a:	f022 02a0 	bic.w	r2, r2, #160	; 0xa0
  tmpccmr1 |= (TIM_ICFilter << 12U);
 800d07e:	ea41 3105 	orr.w	r1, r1, r5, lsl #12
  tmpccer |= (TIM_ICPolarity << 4U);
 800d082:	ea42 1200 	orr.w	r2, r2, r0, lsl #4
  TIMx->CCMR1 = tmpccmr1 ;
 800d086:	61a1      	str	r1, [r4, #24]
  TIMx->CCER = tmpccer;
 800d088:	6222      	str	r2, [r4, #32]
 800d08a:	e7cf      	b.n	800d02c <HAL_TIM_SlaveConfigSynchro+0x74>
      if (sSlaveConfig->SlaveMode == TIM_SLAVEMODE_GATED)
 800d08c:	2d05      	cmp	r5, #5
 800d08e:	d0c0      	beq.n	800d012 <HAL_TIM_SlaveConfigSynchro+0x5a>
      tmpccer = htim->Instance->CCER;
 800d090:	6a20      	ldr	r0, [r4, #32]
      htim->Instance->CCER &= ~TIM_CCER_CC1E;
 800d092:	6a22      	ldr	r2, [r4, #32]
      tmpccmr1 |= ((sSlaveConfig->TriggerFilter) << 4U);
 800d094:	6909      	ldr	r1, [r1, #16]
      htim->Instance->CCER &= ~TIM_CCER_CC1E;
 800d096:	f022 0201 	bic.w	r2, r2, #1
 800d09a:	6222      	str	r2, [r4, #32]
      tmpccmr1 = htim->Instance->CCMR1;
 800d09c:	69a2      	ldr	r2, [r4, #24]
      tmpccmr1 &= ~TIM_CCMR1_IC1F;
 800d09e:	f022 02f0 	bic.w	r2, r2, #240	; 0xf0
      tmpccmr1 |= ((sSlaveConfig->TriggerFilter) << 4U);
 800d0a2:	ea42 1201 	orr.w	r2, r2, r1, lsl #4
      htim->Instance->CCMR1 = tmpccmr1;
 800d0a6:	61a2      	str	r2, [r4, #24]
      htim->Instance->CCER = tmpccer;
 800d0a8:	6220      	str	r0, [r4, #32]
      break;
 800d0aa:	e7bf      	b.n	800d02c <HAL_TIM_SlaveConfigSynchro+0x74>
      TIM_TI1_ConfigInputStage(htim->Instance,
 800d0ac:	688a      	ldr	r2, [r1, #8]
 800d0ae:	6908      	ldr	r0, [r1, #16]
  tmpccer = TIMx->CCER;
 800d0b0:	6a21      	ldr	r1, [r4, #32]
  tmpccer &= ~(TIM_CCER_CC1P | TIM_CCER_CC1NP);
 800d0b2:	f021 010a 	bic.w	r1, r1, #10
  tmpccer |= TIM_ICPolarity;
 800d0b6:	4311      	orrs	r1, r2
  TIMx->CCER &= ~TIM_CCER_CC1E;
 800d0b8:	6a22      	ldr	r2, [r4, #32]
 800d0ba:	f022 0201 	bic.w	r2, r2, #1
 800d0be:	6222      	str	r2, [r4, #32]
  tmpccmr1 = TIMx->CCMR1;
 800d0c0:	69a2      	ldr	r2, [r4, #24]
  tmpccmr1 &= ~TIM_CCMR1_IC1F;
 800d0c2:	f022 02f0 	bic.w	r2, r2, #240	; 0xf0
  tmpccmr1 |= (TIM_ICFilter << 4U);
 800d0c6:	ea42 1200 	orr.w	r2, r2, r0, lsl #4
  TIMx->CCMR1 = tmpccmr1;
 800d0ca:	61a2      	str	r2, [r4, #24]
  TIMx->CCER = tmpccer;
 800d0cc:	6221      	str	r1, [r4, #32]
 800d0ce:	e7ad      	b.n	800d02c <HAL_TIM_SlaveConfigSynchro+0x74>

0800d0d0 <HAL_TIM_OC_DelayElapsedCallback>:
 800d0d0:	4770      	bx	lr
 800d0d2:	bf00      	nop

0800d0d4 <HAL_TIM_IC_CaptureCallback>:
 800d0d4:	4770      	bx	lr
 800d0d6:	bf00      	nop

0800d0d8 <HAL_TIM_PWM_PulseFinishedCallback>:
 800d0d8:	4770      	bx	lr
 800d0da:	bf00      	nop

0800d0dc <HAL_TIM_TriggerCallback>:
 800d0dc:	4770      	bx	lr
 800d0de:	bf00      	nop

0800d0e0 <HAL_TIM_IRQHandler>:
  if (__HAL_TIM_GET_FLAG(htim, TIM_FLAG_CC1) != RESET)
 800d0e0:	6803      	ldr	r3, [r0, #0]
 800d0e2:	691a      	ldr	r2, [r3, #16]
 800d0e4:	0791      	lsls	r1, r2, #30
{
 800d0e6:	b510      	push	{r4, lr}
 800d0e8:	4604      	mov	r4, r0
  if (__HAL_TIM_GET_FLAG(htim, TIM_FLAG_CC1) != RESET)
 800d0ea:	d502      	bpl.n	800d0f2 <HAL_TIM_IRQHandler+0x12>
    if (__HAL_TIM_GET_IT_SOURCE(htim, TIM_IT_CC1) != RESET)
 800d0ec:	68da      	ldr	r2, [r3, #12]
 800d0ee:	0792      	lsls	r2, r2, #30
 800d0f0:	d45f      	bmi.n	800d1b2 <HAL_TIM_IRQHandler+0xd2>
  if (__HAL_TIM_GET_FLAG(htim, TIM_FLAG_CC2) != RESET)
 800d0f2:	691a      	ldr	r2, [r3, #16]
 800d0f4:	0750      	lsls	r0, r2, #29
 800d0f6:	d502      	bpl.n	800d0fe <HAL_TIM_IRQHandler+0x1e>
    if (__HAL_TIM_GET_IT_SOURCE(htim, TIM_IT_CC2) != RESET)
 800d0f8:	68da      	ldr	r2, [r3, #12]
 800d0fa:	0751      	lsls	r1, r2, #29
 800d0fc:	d446      	bmi.n	800d18c <HAL_TIM_IRQHandler+0xac>
  if (__HAL_TIM_GET_FLAG(htim, TIM_FLAG_CC3) != RESET)
 800d0fe:	691a      	ldr	r2, [r3, #16]
 800d100:	0712      	lsls	r2, r2, #28
 800d102:	d502      	bpl.n	800d10a <HAL_TIM_IRQHandler+0x2a>
    if (__HAL_TIM_GET_IT_SOURCE(htim, TIM_IT_CC3) != RESET)
 800d104:	68da      	ldr	r2, [r3, #12]
 800d106:	0710      	lsls	r0, r2, #28
 800d108:	d42e      	bmi.n	800d168 <HAL_TIM_IRQHandler+0x88>
  if (__HAL_TIM_GET_FLAG(htim, TIM_FLAG_CC4) != RESET)
 800d10a:	691a      	ldr	r2, [r3, #16]
 800d10c:	06d2      	lsls	r2, r2, #27
 800d10e:	d502      	bpl.n	800d116 <HAL_TIM_IRQHandler+0x36>
    if (__HAL_TIM_GET_IT_SOURCE(htim, TIM_IT_CC4) != RESET)
 800d110:	68da      	ldr	r2, [r3, #12]
 800d112:	06d0      	lsls	r0, r2, #27
 800d114:	d418      	bmi.n	800d148 <HAL_TIM_IRQHandler+0x68>
  if (__HAL_TIM_GET_FLAG(htim, TIM_FLAG_UPDATE) != RESET)
 800d116:	691a      	ldr	r2, [r3, #16]
 800d118:	07d1      	lsls	r1, r2, #31
 800d11a:	d502      	bpl.n	800d122 <HAL_TIM_IRQHandler+0x42>
    if (__HAL_TIM_GET_IT_SOURCE(htim, TIM_IT_UPDATE) != RESET)
 800d11c:	68da      	ldr	r2, [r3, #12]
 800d11e:	07d2      	lsls	r2, r2, #31
 800d120:	d45d      	bmi.n	800d1de <HAL_TIM_IRQHandler+0xfe>
  if (__HAL_TIM_GET_FLAG(htim, TIM_FLAG_BREAK) != RESET)
 800d122:	691a      	ldr	r2, [r3, #16]
 800d124:	0610      	lsls	r0, r2, #24
 800d126:	d502      	bpl.n	800d12e <HAL_TIM_IRQHandler+0x4e>
    if (__HAL_TIM_GET_IT_SOURCE(htim, TIM_IT_BREAK) != RESET)
 800d128:	68da      	ldr	r2, [r3, #12]
 800d12a:	0611      	lsls	r1, r2, #24
 800d12c:	d45f      	bmi.n	800d1ee <HAL_TIM_IRQHandler+0x10e>
  if (__HAL_TIM_GET_FLAG(htim, TIM_FLAG_TRIGGER) != RESET)
 800d12e:	691a      	ldr	r2, [r3, #16]
 800d130:	0652      	lsls	r2, r2, #25
 800d132:	d502      	bpl.n	800d13a <HAL_TIM_IRQHandler+0x5a>
    if (__HAL_TIM_GET_IT_SOURCE(htim, TIM_IT_TRIGGER) != RESET)
 800d134:	68da      	ldr	r2, [r3, #12]
 800d136:	0650      	lsls	r0, r2, #25
 800d138:	d461      	bmi.n	800d1fe <HAL_TIM_IRQHandler+0x11e>
  if (__HAL_TIM_GET_FLAG(htim, TIM_FLAG_COM) != RESET)
 800d13a:	691a      	ldr	r2, [r3, #16]
 800d13c:	0691      	lsls	r1, r2, #26
 800d13e:	d502      	bpl.n	800d146 <HAL_TIM_IRQHandler+0x66>
    if (__HAL_TIM_GET_IT_SOURCE(htim, TIM_IT_COM) != RESET)
 800d140:	68da      	ldr	r2, [r3, #12]
 800d142:	0692      	lsls	r2, r2, #26
 800d144:	d443      	bmi.n	800d1ce <HAL_TIM_IRQHandler+0xee>
}
 800d146:	bd10      	pop	{r4, pc}
      __HAL_TIM_CLEAR_IT(htim, TIM_IT_CC4);
 800d148:	f06f 0110 	mvn.w	r1, #16
      htim->Channel = HAL_TIM_ACTIVE_CHANNEL_4;
 800d14c:	2208      	movs	r2, #8
      __HAL_TIM_CLEAR_IT(htim, TIM_IT_CC4);
 800d14e:	6119      	str	r1, [r3, #16]
      htim->Channel = HAL_TIM_ACTIVE_CHANNEL_4;
 800d150:	7722      	strb	r2, [r4, #28]
      if ((htim->Instance->CCMR2 & TIM_CCMR2_CC4S) != 0x00U)
 800d152:	69db      	ldr	r3, [r3, #28]
 800d154:	f413 7f40 	tst.w	r3, #768	; 0x300
        HAL_TIM_IC_CaptureCallback(htim);
 800d158:	4620      	mov	r0, r4
      if ((htim->Instance->CCMR2 & TIM_CCMR2_CC4S) != 0x00U)
 800d15a:	d064      	beq.n	800d226 <HAL_TIM_IRQHandler+0x146>
        HAL_TIM_IC_CaptureCallback(htim);
 800d15c:	f7ff ffba 	bl	800d0d4 <HAL_TIM_IC_CaptureCallback>
      htim->Channel = HAL_TIM_ACTIVE_CHANNEL_CLEARED;
 800d160:	2200      	movs	r2, #0
  if (__HAL_TIM_GET_FLAG(htim, TIM_FLAG_UPDATE) != RESET)
 800d162:	6823      	ldr	r3, [r4, #0]
      htim->Channel = HAL_TIM_ACTIVE_CHANNEL_CLEARED;
 800d164:	7722      	strb	r2, [r4, #28]
 800d166:	e7d6      	b.n	800d116 <HAL_TIM_IRQHandler+0x36>
      __HAL_TIM_CLEAR_IT(htim, TIM_IT_CC3);
 800d168:	f06f 0108 	mvn.w	r1, #8
      htim->Channel = HAL_TIM_ACTIVE_CHANNEL_3;
 800d16c:	2204      	movs	r2, #4
      __HAL_TIM_CLEAR_IT(htim, TIM_IT_CC3);
 800d16e:	6119      	str	r1, [r3, #16]
      htim->Channel = HAL_TIM_ACTIVE_CHANNEL_3;
 800d170:	7722      	strb	r2, [r4, #28]
      if ((htim->Instance->CCMR2 & TIM_CCMR2_CC3S) != 0x00U)
 800d172:	69db      	ldr	r3, [r3, #28]
 800d174:	0799      	lsls	r1, r3, #30
        HAL_TIM_IC_CaptureCallback(htim);
 800d176:	4620      	mov	r0, r4
      if ((htim->Instance->CCMR2 & TIM_CCMR2_CC3S) != 0x00U)
 800d178:	d152      	bne.n	800d220 <HAL_TIM_IRQHandler+0x140>
        HAL_TIM_OC_DelayElapsedCallback(htim);
 800d17a:	f7ff ffa9 	bl	800d0d0 <HAL_TIM_OC_DelayElapsedCallback>
        HAL_TIM_PWM_PulseFinishedCallback(htim);
 800d17e:	4620      	mov	r0, r4
 800d180:	f7ff ffaa 	bl	800d0d8 <HAL_TIM_PWM_PulseFinishedCallback>
      htim->Channel = HAL_TIM_ACTIVE_CHANNEL_CLEARED;
 800d184:	2200      	movs	r2, #0
  if (__HAL_TIM_GET_FLAG(htim, TIM_FLAG_CC4) != RESET)
 800d186:	6823      	ldr	r3, [r4, #0]
      htim->Channel = HAL_TIM_ACTIVE_CHANNEL_CLEARED;
 800d188:	7722      	strb	r2, [r4, #28]
 800d18a:	e7be      	b.n	800d10a <HAL_TIM_IRQHandler+0x2a>
      __HAL_TIM_CLEAR_IT(htim, TIM_IT_CC2);
 800d18c:	f06f 0104 	mvn.w	r1, #4
      htim->Channel = HAL_TIM_ACTIVE_CHANNEL_2;
 800d190:	2202      	movs	r2, #2
      __HAL_TIM_CLEAR_IT(htim, TIM_IT_CC2);
 800d192:	6119      	str	r1, [r3, #16]
      htim->Channel = HAL_TIM_ACTIVE_CHANNEL_2;
 800d194:	7722      	strb	r2, [r4, #28]
      if ((htim->Instance->CCMR1 & TIM_CCMR1_CC2S) != 0x00U)
 800d196:	699b      	ldr	r3, [r3, #24]
 800d198:	f413 7f40 	tst.w	r3, #768	; 0x300
        HAL_TIM_IC_CaptureCallback(htim);
 800d19c:	4620      	mov	r0, r4
      if ((htim->Instance->CCMR1 & TIM_CCMR1_CC2S) != 0x00U)
 800d19e:	d13c      	bne.n	800d21a <HAL_TIM_IRQHandler+0x13a>
        HAL_TIM_OC_DelayElapsedCallback(htim);
 800d1a0:	f7ff ff96 	bl	800d0d0 <HAL_TIM_OC_DelayElapsedCallback>
        HAL_TIM_PWM_PulseFinishedCallback(htim);
 800d1a4:	4620      	mov	r0, r4
 800d1a6:	f7ff ff97 	bl	800d0d8 <HAL_TIM_PWM_PulseFinishedCallback>
      htim->Channel = HAL_TIM_ACTIVE_CHANNEL_CLEARED;
 800d1aa:	2200      	movs	r2, #0
  if (__HAL_TIM_GET_FLAG(htim, TIM_FLAG_CC3) != RESET)
 800d1ac:	6823      	ldr	r3, [r4, #0]
      htim->Channel = HAL_TIM_ACTIVE_CHANNEL_CLEARED;
 800d1ae:	7722      	strb	r2, [r4, #28]
 800d1b0:	e7a5      	b.n	800d0fe <HAL_TIM_IRQHandler+0x1e>
        __HAL_TIM_CLEAR_IT(htim, TIM_IT_CC1);
 800d1b2:	f06f 0102 	mvn.w	r1, #2
        htim->Channel = HAL_TIM_ACTIVE_CHANNEL_1;
 800d1b6:	2201      	movs	r2, #1
        __HAL_TIM_CLEAR_IT(htim, TIM_IT_CC1);
 800d1b8:	6119      	str	r1, [r3, #16]
        htim->Channel = HAL_TIM_ACTIVE_CHANNEL_1;
 800d1ba:	7702      	strb	r2, [r0, #28]
        if ((htim->Instance->CCMR1 & TIM_CCMR1_CC1S) != 0x00U)
 800d1bc:	699b      	ldr	r3, [r3, #24]
 800d1be:	079b      	lsls	r3, r3, #30
 800d1c0:	d025      	beq.n	800d20e <HAL_TIM_IRQHandler+0x12e>
          HAL_TIM_IC_CaptureCallback(htim);
 800d1c2:	f7ff ff87 	bl	800d0d4 <HAL_TIM_IC_CaptureCallback>
        htim->Channel = HAL_TIM_ACTIVE_CHANNEL_CLEARED;
 800d1c6:	2200      	movs	r2, #0
  if (__HAL_TIM_GET_FLAG(htim, TIM_FLAG_CC2) != RESET)
 800d1c8:	6823      	ldr	r3, [r4, #0]
        htim->Channel = HAL_TIM_ACTIVE_CHANNEL_CLEARED;
 800d1ca:	7722      	strb	r2, [r4, #28]
 800d1cc:	e791      	b.n	800d0f2 <HAL_TIM_IRQHandler+0x12>
      __HAL_TIM_CLEAR_IT(htim, TIM_FLAG_COM);
 800d1ce:	f06f 0220 	mvn.w	r2, #32
      HAL_TIMEx_CommutCallback(htim);
 800d1d2:	4620      	mov	r0, r4
      __HAL_TIM_CLEAR_IT(htim, TIM_FLAG_COM);
 800d1d4:	611a      	str	r2, [r3, #16]
}
 800d1d6:	e8bd 4010 	ldmia.w	sp!, {r4, lr}
      HAL_TIMEx_CommutCallback(htim);
 800d1da:	f000 b86b 	b.w	800d2b4 <HAL_TIMEx_CommutCallback>
      __HAL_TIM_CLEAR_IT(htim, TIM_IT_UPDATE);
 800d1de:	f06f 0201 	mvn.w	r2, #1
 800d1e2:	611a      	str	r2, [r3, #16]
      HAL_TIM_PeriodElapsedCallback(htim);
 800d1e4:	4620      	mov	r0, r4
 800d1e6:	f7f4 f859 	bl	800129c <HAL_TIM_PeriodElapsedCallback>
  if (__HAL_TIM_GET_FLAG(htim, TIM_FLAG_BREAK) != RESET)
 800d1ea:	6823      	ldr	r3, [r4, #0]
 800d1ec:	e799      	b.n	800d122 <HAL_TIM_IRQHandler+0x42>
      __HAL_TIM_CLEAR_IT(htim, TIM_IT_BREAK);
 800d1ee:	f06f 0280 	mvn.w	r2, #128	; 0x80
 800d1f2:	611a      	str	r2, [r3, #16]
      HAL_TIMEx_BreakCallback(htim);
 800d1f4:	4620      	mov	r0, r4
 800d1f6:	f000 f85f 	bl	800d2b8 <HAL_TIMEx_BreakCallback>
  if (__HAL_TIM_GET_FLAG(htim, TIM_FLAG_TRIGGER) != RESET)
 800d1fa:	6823      	ldr	r3, [r4, #0]
 800d1fc:	e797      	b.n	800d12e <HAL_TIM_IRQHandler+0x4e>
      __HAL_TIM_CLEAR_IT(htim, TIM_IT_TRIGGER);
 800d1fe:	f06f 0240 	mvn.w	r2, #64	; 0x40
 800d202:	611a      	str	r2, [r3, #16]
      HAL_TIM_TriggerCallback(htim);
 800d204:	4620      	mov	r0, r4
 800d206:	f7ff ff69 	bl	800d0dc <HAL_TIM_TriggerCallback>
  if (__HAL_TIM_GET_FLAG(htim, TIM_FLAG_COM) != RESET)
 800d20a:	6823      	ldr	r3, [r4, #0]
 800d20c:	e795      	b.n	800d13a <HAL_TIM_IRQHandler+0x5a>
          HAL_TIM_OC_DelayElapsedCallback(htim);
 800d20e:	f7ff ff5f 	bl	800d0d0 <HAL_TIM_OC_DelayElapsedCallback>
          HAL_TIM_PWM_PulseFinishedCallback(htim);
 800d212:	4620      	mov	r0, r4
 800d214:	f7ff ff60 	bl	800d0d8 <HAL_TIM_PWM_PulseFinishedCallback>
 800d218:	e7d5      	b.n	800d1c6 <HAL_TIM_IRQHandler+0xe6>
        HAL_TIM_IC_CaptureCallback(htim);
 800d21a:	f7ff ff5b 	bl	800d0d4 <HAL_TIM_IC_CaptureCallback>
 800d21e:	e7c4      	b.n	800d1aa <HAL_TIM_IRQHandler+0xca>
        HAL_TIM_IC_CaptureCallback(htim);
 800d220:	f7ff ff58 	bl	800d0d4 <HAL_TIM_IC_CaptureCallback>
 800d224:	e7ae      	b.n	800d184 <HAL_TIM_IRQHandler+0xa4>
        HAL_TIM_OC_DelayElapsedCallback(htim);
 800d226:	f7ff ff53 	bl	800d0d0 <HAL_TIM_OC_DelayElapsedCallback>
        HAL_TIM_PWM_PulseFinishedCallback(htim);
 800d22a:	4620      	mov	r0, r4
 800d22c:	f7ff ff54 	bl	800d0d8 <HAL_TIM_PWM_PulseFinishedCallback>
 800d230:	e796      	b.n	800d160 <HAL_TIM_IRQHandler+0x80>
 800d232:	bf00      	nop

0800d234 <HAL_TIMEx_MasterConfigSynchronization>:
  assert_param(IS_TIM_MASTER_INSTANCE(htim->Instance));
  assert_param(IS_TIM_TRGO_SOURCE(sMasterConfig->MasterOutputTrigger));
  assert_param(IS_TIM_MSM_STATE(sMasterConfig->MasterSlaveMode));

  /* Check input state */
  __HAL_LOCK(htim);
 800d234:	f890 303c 	ldrb.w	r3, [r0, #60]	; 0x3c
 800d238:	2b01      	cmp	r3, #1
 800d23a:	d037      	beq.n	800d2ac <HAL_TIMEx_MasterConfigSynchronization+0x78>

  /* Change the handler state */
  htim->State = HAL_TIM_STATE_BUSY;

  /* Get the TIMx CR2 register value */
  tmpcr2 = htim->Instance->CR2;
 800d23c:	6803      	ldr	r3, [r0, #0]
  htim->State = HAL_TIM_STATE_BUSY;
 800d23e:	2202      	movs	r2, #2
{
 800d240:	b430      	push	{r4, r5}
  htim->State = HAL_TIM_STATE_BUSY;
 800d242:	f880 203d 	strb.w	r2, [r0, #61]	; 0x3d
  tmpcr2 = htim->Instance->CR2;
 800d246:	685a      	ldr	r2, [r3, #4]
  tmpsmcr = htim->Instance->SMCR;

  /* Reset the MMS Bits */
  tmpcr2 &= ~TIM_CR2_MMS;
  /* Select the TRGO source */
  tmpcr2 |=  sMasterConfig->MasterOutputTrigger;
 800d248:	680d      	ldr	r5, [r1, #0]
  tmpsmcr = htim->Instance->SMCR;
 800d24a:	689c      	ldr	r4, [r3, #8]
  tmpcr2 &= ~TIM_CR2_MMS;
 800d24c:	f022 0270 	bic.w	r2, r2, #112	; 0x70
  tmpcr2 |=  sMasterConfig->MasterOutputTrigger;
 800d250:	432a      	orrs	r2, r5

  /* Update TIMx CR2 */
  htim->Instance->CR2 = tmpcr2;
 800d252:	605a      	str	r2, [r3, #4]

  if (IS_TIM_SLAVE_INSTANCE(htim->Instance))
 800d254:	4a16      	ldr	r2, [pc, #88]	; (800d2b0 <HAL_TIMEx_MasterConfigSynchronization+0x7c>)
 800d256:	4293      	cmp	r3, r2
 800d258:	d01a      	beq.n	800d290 <HAL_TIMEx_MasterConfigSynchronization+0x5c>
 800d25a:	f1b3 4f80 	cmp.w	r3, #1073741824	; 0x40000000
 800d25e:	d017      	beq.n	800d290 <HAL_TIMEx_MasterConfigSynchronization+0x5c>
 800d260:	f5a2 427c 	sub.w	r2, r2, #64512	; 0xfc00
 800d264:	4293      	cmp	r3, r2
 800d266:	d013      	beq.n	800d290 <HAL_TIMEx_MasterConfigSynchronization+0x5c>
 800d268:	f502 6280 	add.w	r2, r2, #1024	; 0x400
 800d26c:	4293      	cmp	r3, r2
 800d26e:	d00f      	beq.n	800d290 <HAL_TIMEx_MasterConfigSynchronization+0x5c>
 800d270:	f502 6280 	add.w	r2, r2, #1024	; 0x400
 800d274:	4293      	cmp	r3, r2
 800d276:	d00b      	beq.n	800d290 <HAL_TIMEx_MasterConfigSynchronization+0x5c>
 800d278:	f502 4278 	add.w	r2, r2, #63488	; 0xf800
 800d27c:	4293      	cmp	r3, r2
 800d27e:	d007      	beq.n	800d290 <HAL_TIMEx_MasterConfigSynchronization+0x5c>
 800d280:	f502 5270 	add.w	r2, r2, #15360	; 0x3c00
 800d284:	4293      	cmp	r3, r2
 800d286:	d003      	beq.n	800d290 <HAL_TIMEx_MasterConfigSynchronization+0x5c>
 800d288:	f5a2 3294 	sub.w	r2, r2, #75776	; 0x12800
 800d28c:	4293      	cmp	r3, r2
 800d28e:	d104      	bne.n	800d29a <HAL_TIMEx_MasterConfigSynchronization+0x66>
  {
    /* Reset the MSM Bit */
    tmpsmcr &= ~TIM_SMCR_MSM;
    /* Set master mode */
    tmpsmcr |= sMasterConfig->MasterSlaveMode;
 800d290:	684a      	ldr	r2, [r1, #4]
    tmpsmcr &= ~TIM_SMCR_MSM;
 800d292:	f024 0480 	bic.w	r4, r4, #128	; 0x80
    tmpsmcr |= sMasterConfig->MasterSlaveMode;
 800d296:	4314      	orrs	r4, r2

    /* Update TIMx SMCR */
    htim->Instance->SMCR = tmpsmcr;
 800d298:	609c      	str	r4, [r3, #8]
  }

  /* Change the htim state */
  htim->State = HAL_TIM_STATE_READY;

  __HAL_UNLOCK(htim);
 800d29a:	2300      	movs	r3, #0
  htim->State = HAL_TIM_STATE_READY;
 800d29c:	2201      	movs	r2, #1
 800d29e:	f880 203d 	strb.w	r2, [r0, #61]	; 0x3d
  __HAL_UNLOCK(htim);
 800d2a2:	f880 303c 	strb.w	r3, [r0, #60]	; 0x3c

  return HAL_OK;
}
 800d2a6:	bc30      	pop	{r4, r5}
  return HAL_OK;
 800d2a8:	4618      	mov	r0, r3
}
 800d2aa:	4770      	bx	lr
  __HAL_LOCK(htim);
 800d2ac:	2002      	movs	r0, #2
}
 800d2ae:	4770      	bx	lr
 800d2b0:	40010000 	.word	0x40010000

0800d2b4 <HAL_TIMEx_CommutCallback>:
 800d2b4:	4770      	bx	lr
 800d2b6:	bf00      	nop

0800d2b8 <HAL_TIMEx_BreakCallback>:
 800d2b8:	4770      	bx	lr
 800d2ba:	bf00      	nop

0800d2bc <FMC_SDRAM_Init>:
  assert_param(IS_FMC_SDCLOCK_PERIOD(Init->SDClockPeriod));
  assert_param(IS_FMC_READ_BURST(Init->ReadBurst));
  assert_param(IS_FMC_READPIPE_DELAY(Init->ReadPipeDelay));

  /* Set SDRAM bank configuration parameters */
  if (Init->SDBank == FMC_SDRAM_BANK1)
 800d2bc:	680b      	ldr	r3, [r1, #0]
{
 800d2be:	b430      	push	{r4, r5}
  if (Init->SDBank == FMC_SDRAM_BANK1)
 800d2c0:	b9d3      	cbnz	r3, 800d2f8 <FMC_SDRAM_Init+0x3c>
  {
    MODIFY_REG(Device->SDCR[FMC_SDRAM_BANK1],
 800d2c2:	6803      	ldr	r3, [r0, #0]
 800d2c4:	684c      	ldr	r4, [r1, #4]
 800d2c6:	688a      	ldr	r2, [r1, #8]
 800d2c8:	f423 43ff 	bic.w	r3, r3, #32640	; 0x7f80
 800d2cc:	f023 037f 	bic.w	r3, r3, #127	; 0x7f
 800d2d0:	4323      	orrs	r3, r4
 800d2d2:	4313      	orrs	r3, r2
 800d2d4:	e9d1 4203 	ldrd	r4, r2, [r1, #12]
 800d2d8:	4323      	orrs	r3, r4
 800d2da:	4313      	orrs	r3, r2
 800d2dc:	e9d1 4205 	ldrd	r4, r2, [r1, #20]
 800d2e0:	4323      	orrs	r3, r4
 800d2e2:	e9d1 5407 	ldrd	r5, r4, [r1, #28]
 800d2e6:	4313      	orrs	r3, r2
 800d2e8:	432b      	orrs	r3, r5
 800d2ea:	6a4a      	ldr	r2, [r1, #36]	; 0x24
 800d2ec:	4323      	orrs	r3, r4
 800d2ee:	4313      	orrs	r3, r2
 800d2f0:	6003      	str	r3, [r0, #0]
                Init->CASLatency         |
                Init->WriteProtection));
  }

  return HAL_OK;
}
 800d2f2:	bc30      	pop	{r4, r5}
 800d2f4:	2000      	movs	r0, #0
 800d2f6:	4770      	bx	lr
    MODIFY_REG(Device->SDCR[FMC_SDRAM_BANK1],
 800d2f8:	e9d1 4207 	ldrd	r4, r2, [r1, #28]
 800d2fc:	6803      	ldr	r3, [r0, #0]
 800d2fe:	f423 43f8 	bic.w	r3, r3, #31744	; 0x7c00
 800d302:	4323      	orrs	r3, r4
 800d304:	6a4c      	ldr	r4, [r1, #36]	; 0x24
 800d306:	4313      	orrs	r3, r2
 800d308:	4323      	orrs	r3, r4
    MODIFY_REG(Device->SDCR[FMC_SDRAM_BANK2],
 800d30a:	684a      	ldr	r2, [r1, #4]
    MODIFY_REG(Device->SDCR[FMC_SDRAM_BANK1],
 800d30c:	6003      	str	r3, [r0, #0]
    MODIFY_REG(Device->SDCR[FMC_SDRAM_BANK2],
 800d30e:	6843      	ldr	r3, [r0, #4]
 800d310:	f423 43ff 	bic.w	r3, r3, #32640	; 0x7f80
 800d314:	f023 037f 	bic.w	r3, r3, #127	; 0x7f
 800d318:	4313      	orrs	r3, r2
 800d31a:	e9d1 4202 	ldrd	r4, r2, [r1, #8]
 800d31e:	4323      	orrs	r3, r4
 800d320:	e9d1 5404 	ldrd	r5, r4, [r1, #16]
 800d324:	4313      	orrs	r3, r2
 800d326:	432b      	orrs	r3, r5
 800d328:	698a      	ldr	r2, [r1, #24]
 800d32a:	4323      	orrs	r3, r4
 800d32c:	4313      	orrs	r3, r2
 800d32e:	6043      	str	r3, [r0, #4]
}
 800d330:	bc30      	pop	{r4, r5}
 800d332:	2000      	movs	r0, #0
 800d334:	4770      	bx	lr
 800d336:	bf00      	nop

0800d338 <FMC_SDRAM_Timing_Init>:
  * @param  Bank SDRAM bank number
  * @retval HAL status
  */
HAL_StatusTypeDef FMC_SDRAM_Timing_Init(FMC_SDRAM_TypeDef *Device,
                                        FMC_SDRAM_TimingTypeDef *Timing, uint32_t Bank)
{
 800d338:	b430      	push	{r4, r5}
  assert_param(IS_FMC_SDRAM_BANK(Bank));

  /* Set SDRAM device timing parameters */
  if (Bank == FMC_SDRAM_BANK1)
  {
    MODIFY_REG(Device->SDTR[FMC_SDRAM_BANK1],
 800d33a:	6883      	ldr	r3, [r0, #8]
  if (Bank == FMC_SDRAM_BANK1)
 800d33c:	bb02      	cbnz	r2, 800d380 <FMC_SDRAM_Timing_Init+0x48>
    MODIFY_REG(Device->SDTR[FMC_SDRAM_BANK1],
 800d33e:	e9d1 2400 	ldrd	r2, r4, [r1]
 800d342:	f003 4370 	and.w	r3, r3, #4026531840	; 0xf0000000
 800d346:	3c01      	subs	r4, #1
 800d348:	ea43 1304 	orr.w	r3, r3, r4, lsl #4
 800d34c:	3a01      	subs	r2, #1
 800d34e:	4313      	orrs	r3, r2
 800d350:	e9d1 4202 	ldrd	r4, r2, [r1, #8]
 800d354:	3c01      	subs	r4, #1
 800d356:	ea43 2304 	orr.w	r3, r3, r4, lsl #8
 800d35a:	e9d1 5404 	ldrd	r5, r4, [r1, #16]
 800d35e:	3a01      	subs	r2, #1
 800d360:	ea43 3302 	orr.w	r3, r3, r2, lsl #12
 800d364:	698a      	ldr	r2, [r1, #24]
 800d366:	1e69      	subs	r1, r5, #1
 800d368:	ea43 4301 	orr.w	r3, r3, r1, lsl #16
 800d36c:	1e61      	subs	r1, r4, #1
 800d36e:	ea43 5301 	orr.w	r3, r3, r1, lsl #20
 800d372:	3a01      	subs	r2, #1
 800d374:	ea43 6302 	orr.w	r3, r3, r2, lsl #24
 800d378:	6083      	str	r3, [r0, #8]
                (((Timing->WriteRecoveryTime) - 1U)    << FMC_SDTR1_TWR_Pos)  |
                (((Timing->RCDDelay) - 1U)             << FMC_SDTR1_TRCD_Pos)));
  }

  return HAL_OK;
}
 800d37a:	bc30      	pop	{r4, r5}
 800d37c:	2000      	movs	r0, #0
 800d37e:	4770      	bx	lr
    MODIFY_REG(Device->SDTR[FMC_SDRAM_BANK1],
 800d380:	68cc      	ldr	r4, [r1, #12]
 800d382:	694a      	ldr	r2, [r1, #20]
    MODIFY_REG(Device->SDTR[FMC_SDRAM_BANK2],
 800d384:	688d      	ldr	r5, [r1, #8]
    MODIFY_REG(Device->SDTR[FMC_SDRAM_BANK1],
 800d386:	f423 0370 	bic.w	r3, r3, #15728640	; 0xf00000
 800d38a:	3c01      	subs	r4, #1
 800d38c:	f423 4370 	bic.w	r3, r3, #61440	; 0xf000
 800d390:	ea43 3304 	orr.w	r3, r3, r4, lsl #12
 800d394:	3a01      	subs	r2, #1
 800d396:	ea43 5302 	orr.w	r3, r3, r2, lsl #20
 800d39a:	6083      	str	r3, [r0, #8]
    MODIFY_REG(Device->SDTR[FMC_SDRAM_BANK2],
 800d39c:	e9d1 2400 	ldrd	r2, r4, [r1]
 800d3a0:	68c3      	ldr	r3, [r0, #12]
 800d3a2:	3c01      	subs	r4, #1
 800d3a4:	f003 4370 	and.w	r3, r3, #4026531840	; 0xf0000000
 800d3a8:	ea43 1304 	orr.w	r3, r3, r4, lsl #4
 800d3ac:	3a01      	subs	r2, #1
 800d3ae:	690c      	ldr	r4, [r1, #16]
 800d3b0:	4313      	orrs	r3, r2
 800d3b2:	698a      	ldr	r2, [r1, #24]
 800d3b4:	1e69      	subs	r1, r5, #1
 800d3b6:	ea43 2301 	orr.w	r3, r3, r1, lsl #8
 800d3ba:	1e61      	subs	r1, r4, #1
 800d3bc:	ea43 4301 	orr.w	r3, r3, r1, lsl #16
 800d3c0:	3a01      	subs	r2, #1
 800d3c2:	ea43 6302 	orr.w	r3, r3, r2, lsl #24
 800d3c6:	60c3      	str	r3, [r0, #12]
}
 800d3c8:	bc30      	pop	{r4, r5}
 800d3ca:	2000      	movs	r0, #0
 800d3cc:	4770      	bx	lr
 800d3ce:	bf00      	nop

0800d3d0 <FMC_SDRAM_SendCommand>:
  * @param  Timeout Timeout wait value
  * @retval HAL state
  */
HAL_StatusTypeDef FMC_SDRAM_SendCommand(FMC_SDRAM_TypeDef *Device,
                                        FMC_SDRAM_CommandTypeDef *Command, uint32_t Timeout)
{
 800d3d0:	b570      	push	{r4, r5, r6, lr}
  assert_param(IS_FMC_COMMAND_TARGET(Command->CommandTarget));
  assert_param(IS_FMC_AUTOREFRESH_NUMBER(Command->AutoRefreshNumber));
  assert_param(IS_FMC_MODE_REGISTER(Command->ModeRegisterDefinition));

  /* Set command register */
  MODIFY_REG(Device->SDCMR, (FMC_SDCMR_MODE | FMC_SDCMR_CTB2 | FMC_SDCMR_CTB1 | FMC_SDCMR_NRFS | FMC_SDCMR_MRD),
 800d3d2:	680b      	ldr	r3, [r1, #0]
{
 800d3d4:	4615      	mov	r5, r2
  MODIFY_REG(Device->SDCMR, (FMC_SDCMR_MODE | FMC_SDCMR_CTB2 | FMC_SDCMR_CTB1 | FMC_SDCMR_NRFS | FMC_SDCMR_MRD),
 800d3d6:	684a      	ldr	r2, [r1, #4]
{
 800d3d8:	4604      	mov	r4, r0
  MODIFY_REG(Device->SDCMR, (FMC_SDCMR_MODE | FMC_SDCMR_CTB2 | FMC_SDCMR_CTB1 | FMC_SDCMR_NRFS | FMC_SDCMR_MRD),
 800d3da:	4313      	orrs	r3, r2
 800d3dc:	6900      	ldr	r0, [r0, #16]
 800d3de:	68ca      	ldr	r2, [r1, #12]
 800d3e0:	0d80      	lsrs	r0, r0, #22
 800d3e2:	ea43 2342 	orr.w	r3, r3, r2, lsl #9
 800d3e6:	688a      	ldr	r2, [r1, #8]
 800d3e8:	0580      	lsls	r0, r0, #22
 800d3ea:	4303      	orrs	r3, r0
 800d3ec:	3a01      	subs	r2, #1
 800d3ee:	ea43 1342 	orr.w	r3, r3, r2, lsl #5
 800d3f2:	6123      	str	r3, [r4, #16]
             ((Command->CommandMode) | (Command->CommandTarget) |
              (((Command->AutoRefreshNumber) - 1U) << FMC_SDCMR_NRFS_Pos) |
              ((Command->ModeRegisterDefinition) << FMC_SDCMR_MRD_Pos)));
  /* Get tick */
  tickstart = HAL_GetTick();
 800d3f4:	f7fc f956 	bl	80096a4 <HAL_GetTick>
 800d3f8:	4606      	mov	r6, r0

  /* wait until command is send */
  while (HAL_IS_BIT_SET(Device->SDSR, FMC_SDSR_BUSY))
 800d3fa:	1c6b      	adds	r3, r5, #1
 800d3fc:	d105      	bne.n	800d40a <FMC_SDRAM_SendCommand+0x3a>
 800d3fe:	69a3      	ldr	r3, [r4, #24]
 800d400:	f013 0320 	ands.w	r3, r3, #32
 800d404:	d1fb      	bne.n	800d3fe <FMC_SDRAM_SendCommand+0x2e>
      {
        return HAL_TIMEOUT;
      }
    }
  }
  return HAL_OK;
 800d406:	4618      	mov	r0, r3
}
 800d408:	bd70      	pop	{r4, r5, r6, pc}
  while (HAL_IS_BIT_SET(Device->SDSR, FMC_SDSR_BUSY))
 800d40a:	69a3      	ldr	r3, [r4, #24]
 800d40c:	f013 0320 	ands.w	r3, r3, #32
 800d410:	d0f9      	beq.n	800d406 <FMC_SDRAM_SendCommand+0x36>
      if ((Timeout == 0U) || ((HAL_GetTick() - tickstart) > Timeout))
 800d412:	b125      	cbz	r5, 800d41e <FMC_SDRAM_SendCommand+0x4e>
 800d414:	f7fc f946 	bl	80096a4 <HAL_GetTick>
 800d418:	1b80      	subs	r0, r0, r6
 800d41a:	42a8      	cmp	r0, r5
 800d41c:	d9ed      	bls.n	800d3fa <FMC_SDRAM_SendCommand+0x2a>
        return HAL_TIMEOUT;
 800d41e:	2003      	movs	r0, #3
}
 800d420:	bd70      	pop	{r4, r5, r6, pc}
 800d422:	bf00      	nop

0800d424 <FMC_SDRAM_ProgramRefreshRate>:
  /* Check the parameters */
  assert_param(IS_FMC_SDRAM_DEVICE(Device));
  assert_param(IS_FMC_REFRESH_RATE(RefreshRate));

  /* Set the refresh rate in command register */
  MODIFY_REG(Device->SDRTR, FMC_SDRTR_COUNT, (RefreshRate << FMC_SDRTR_COUNT_Pos));
 800d424:	6943      	ldr	r3, [r0, #20]
 800d426:	f423 537f 	bic.w	r3, r3, #16320	; 0x3fc0
{
 800d42a:	4602      	mov	r2, r0
  MODIFY_REG(Device->SDRTR, FMC_SDRTR_COUNT, (RefreshRate << FMC_SDRTR_COUNT_Pos));
 800d42c:	f023 033e 	bic.w	r3, r3, #62	; 0x3e
 800d430:	ea43 0141 	orr.w	r1, r3, r1, lsl #1

  return HAL_OK;
}
 800d434:	2000      	movs	r0, #0
  MODIFY_REG(Device->SDRTR, FMC_SDRTR_COUNT, (RefreshRate << FMC_SDRTR_COUNT_Pos));
 800d436:	6151      	str	r1, [r2, #20]
}
 800d438:	4770      	bx	lr
 800d43a:	bf00      	nop

0800d43c <SysTick_Handler>:

/*
  SysTick handler implementation that also clears overflow flag.
*/
#if (USE_CUSTOM_SYSTICK_HANDLER_IMPLEMENTATION == 0)
void SysTick_Handler (void) {
 800d43c:	b508      	push	{r3, lr}
  /* Clear overflow flag */
  SysTick->CTRL;
 800d43e:	f04f 23e0 	mov.w	r3, #3758153728	; 0xe000e000
 800d442:	691b      	ldr	r3, [r3, #16]

  if (xTaskGetSchedulerState() != taskSCHEDULER_NOT_STARTED) {
 800d444:	f002 fafe 	bl	800fa44 <xTaskGetSchedulerState>
 800d448:	2801      	cmp	r0, #1
 800d44a:	d100      	bne.n	800d44e <SysTick_Handler+0x12>
    /* Call tick handler */
    xPortSysTickHandler();
  }
}
 800d44c:	bd08      	pop	{r3, pc}
 800d44e:	e8bd 4008 	ldmia.w	sp!, {r3, lr}
    xPortSysTickHandler();
 800d452:	f000 bc3f 	b.w	800dcd4 <xPortSysTickHandler>
 800d456:	bf00      	nop

0800d458 <osKernelInitialize>:
  __ASM volatile ("MRS %0, ipsr" : "=r" (result) );
 800d458:	f3ef 8305 	mrs	r3, IPSR
/*---------------------------------------------------------------------------*/

osStatus_t osKernelInitialize (void) {
  osStatus_t stat;

  if (IS_IRQ()) {
 800d45c:	b92b      	cbnz	r3, 800d46a <osKernelInitialize+0x12>
    stat = osErrorISR;
  }
  else {
    if (KernelState == osKernelInactive) {
 800d45e:	4b06      	ldr	r3, [pc, #24]	; (800d478 <osKernelInitialize+0x20>)
 800d460:	6818      	ldr	r0, [r3, #0]
 800d462:	b928      	cbnz	r0, 800d470 <osKernelInitialize+0x18>
        EvrFreeRTOSSetup(0U);
      #endif
      #if defined(USE_FreeRTOS_HEAP_5) && (HEAP_5_REGION_SETUP == 1)
        vPortDefineHeapRegions (configHEAP_5_REGIONS);
      #endif
      KernelState = osKernelReady;
 800d464:	2201      	movs	r2, #1
 800d466:	601a      	str	r2, [r3, #0]
      stat = osOK;
 800d468:	4770      	bx	lr
    stat = osErrorISR;
 800d46a:	f06f 0005 	mvn.w	r0, #5
 800d46e:	4770      	bx	lr
    } else {
      stat = osError;
 800d470:	f04f 30ff 	mov.w	r0, #4294967295
    }
  }

  return (stat);
}
 800d474:	4770      	bx	lr
 800d476:	bf00      	nop
 800d478:	20002cd0 	.word	0x20002cd0

0800d47c <osKernelStart>:
  }

  return (state);
}

osStatus_t osKernelStart (void) {
 800d47c:	b510      	push	{r4, lr}
 800d47e:	f3ef 8405 	mrs	r4, IPSR
  osStatus_t stat;

  if (IS_IRQ()) {
 800d482:	b974      	cbnz	r4, 800d4a2 <osKernelStart+0x26>
    stat = osErrorISR;
  }
  else {
    if (KernelState == osKernelReady) {
 800d484:	4b08      	ldr	r3, [pc, #32]	; (800d4a8 <osKernelStart+0x2c>)
 800d486:	681a      	ldr	r2, [r3, #0]
 800d488:	2a01      	cmp	r2, #1
 800d48a:	d107      	bne.n	800d49c <osKernelStart+0x20>
    SCB->SHP[(((uint32_t)IRQn) & 0xFUL)-4UL] = (uint8_t)((priority << (8U - __NVIC_PRIO_BITS)) & (uint32_t)0xFFUL);
 800d48c:	4907      	ldr	r1, [pc, #28]	; (800d4ac <osKernelStart+0x30>)
      /* Ensure SVC priority is at the reset value */
      SVC_Setup();
      /* Change state to enable IRQ masking check */
      KernelState = osKernelRunning;
 800d48e:	2202      	movs	r2, #2
 800d490:	77cc      	strb	r4, [r1, #31]
 800d492:	601a      	str	r2, [r3, #0]
      /* Start the kernel scheduler */
      vTaskStartScheduler();
 800d494:	f002 f8b0 	bl	800f5f8 <vTaskStartScheduler>
      stat = osOK;
 800d498:	4620      	mov	r0, r4
      stat = osError;
    }
  }

  return (stat);
}
 800d49a:	bd10      	pop	{r4, pc}
      stat = osError;
 800d49c:	f04f 30ff 	mov.w	r0, #4294967295
}
 800d4a0:	bd10      	pop	{r4, pc}
    stat = osErrorISR;
 800d4a2:	f06f 0005 	mvn.w	r0, #5
}
 800d4a6:	bd10      	pop	{r4, pc}
 800d4a8:	20002cd0 	.word	0x20002cd0
 800d4ac:	e000ed00 	.word	0xe000ed00

0800d4b0 <osThreadNew>:
  return (configCPU_CLOCK_HZ);
}

/*---------------------------------------------------------------------------*/

osThreadId_t osThreadNew (osThreadFunc_t func, void *argument, const osThreadAttr_t *attr) {
 800d4b0:	b5f0      	push	{r4, r5, r6, r7, lr}
 800d4b2:	b087      	sub	sp, #28
  uint32_t stack;
  TaskHandle_t hTask;
  UBaseType_t prio;
  int32_t mem;

  hTask = NULL;
 800d4b4:	2400      	movs	r4, #0
osThreadId_t osThreadNew (osThreadFunc_t func, void *argument, const osThreadAttr_t *attr) {
 800d4b6:	4615      	mov	r5, r2
  hTask = NULL;
 800d4b8:	9405      	str	r4, [sp, #20]
 800d4ba:	f3ef 8205 	mrs	r2, IPSR

  if (!IS_IRQ() && (func != NULL)) {
 800d4be:	b9ea      	cbnz	r2, 800d4fc <osThreadNew+0x4c>
 800d4c0:	b350      	cbz	r0, 800d518 <osThreadNew+0x68>
    prio  = (UBaseType_t)osPriorityNormal;

    name = NULL;
    mem  = -1;

    if (attr != NULL) {
 800d4c2:	b1f5      	cbz	r5, 800d502 <osThreadNew+0x52>
      if (attr->name != NULL) {
        name = attr->name;
      }
      if (attr->priority != osPriorityNone) {
 800d4c4:	69ab      	ldr	r3, [r5, #24]
 800d4c6:	bb5b      	cbnz	r3, 800d520 <osThreadNew+0x70>
 800d4c8:	2318      	movs	r3, #24
        prio = (UBaseType_t)attr->priority;
      }

      if ((prio < osPriorityIdle) || (prio > osPriorityISR) || ((attr->attr_bits & osThreadJoinable) == osThreadJoinable)) {
 800d4ca:	686a      	ldr	r2, [r5, #4]
 800d4cc:	07d2      	lsls	r2, r2, #31
 800d4ce:	d423      	bmi.n	800d518 <osThreadNew+0x68>
        return (NULL);
      }

      if (attr->stack_size > 0U) {
 800d4d0:	696e      	ldr	r6, [r5, #20]
 800d4d2:	b34e      	cbz	r6, 800d528 <osThreadNew+0x78>
        /* In FreeRTOS stack is not in bytes, but in sizeof(StackType_t) which is 4 on ARM ports.       */
        /* Stack size should be therefore 4 byte aligned in order to avoid division caused side effects */
        stack = attr->stack_size / sizeof(StackType_t);
 800d4d4:	ea4f 0c96 	mov.w	ip, r6, lsr #2
      }

      if ((attr->cb_mem    != NULL) && (attr->cb_size    >= sizeof(StaticTask_t)) &&
 800d4d8:	68ac      	ldr	r4, [r5, #8]
      if (attr->name != NULL) {
 800d4da:	682f      	ldr	r7, [r5, #0]
      if ((attr->cb_mem    != NULL) && (attr->cb_size    >= sizeof(StaticTask_t)) &&
 800d4dc:	b34c      	cbz	r4, 800d532 <osThreadNew+0x82>
 800d4de:	68ea      	ldr	r2, [r5, #12]
 800d4e0:	2aab      	cmp	r2, #171	; 0xab
 800d4e2:	d919      	bls.n	800d518 <osThreadNew+0x68>
          (attr->stack_mem != NULL) && (attr->stack_size >  0U)) {
 800d4e4:	692d      	ldr	r5, [r5, #16]
      if ((attr->cb_mem    != NULL) && (attr->cb_size    >= sizeof(StaticTask_t)) &&
 800d4e6:	b1bd      	cbz	r5, 800d518 <osThreadNew+0x68>
          (attr->stack_mem != NULL) && (attr->stack_size >  0U)) {
 800d4e8:	b1b6      	cbz	r6, 800d518 <osThreadNew+0x68>
      mem = 0;
    }

    if (mem == 1) {
      #if (configSUPPORT_STATIC_ALLOCATION == 1)
        hTask = xTaskCreateStatic ((TaskFunction_t)func, name, stack, argument, prio, (StackType_t  *)attr->stack_mem,
 800d4ea:	e9cd 5401 	strd	r5, r4, [sp, #4]
 800d4ee:	9300      	str	r3, [sp, #0]
 800d4f0:	4662      	mov	r2, ip
 800d4f2:	460b      	mov	r3, r1
 800d4f4:	4639      	mov	r1, r7
 800d4f6:	f001 ffbd 	bl	800f474 <xTaskCreateStatic>
 800d4fa:	4604      	mov	r4, r0
      }
    }
  }

  return ((osThreadId_t)hTask);
}
 800d4fc:	4620      	mov	r0, r4
 800d4fe:	b007      	add	sp, #28
 800d500:	bdf0      	pop	{r4, r5, r6, r7, pc}
 800d502:	2280      	movs	r2, #128	; 0x80
    prio  = (UBaseType_t)osPriorityNormal;
 800d504:	2318      	movs	r3, #24
          if (xTaskCreate ((TaskFunction_t)func, name, (uint16_t)stack, argument, prio, &hTask) != pdPASS) {
 800d506:	ac05      	add	r4, sp, #20
 800d508:	9300      	str	r3, [sp, #0]
 800d50a:	9401      	str	r4, [sp, #4]
 800d50c:	460b      	mov	r3, r1
 800d50e:	4629      	mov	r1, r5
 800d510:	f001 ffea 	bl	800f4e8 <xTaskCreate>
 800d514:	2801      	cmp	r0, #1
 800d516:	d00a      	beq.n	800d52e <osThreadNew+0x7e>
        return (NULL);
 800d518:	2400      	movs	r4, #0
}
 800d51a:	4620      	mov	r0, r4
 800d51c:	b007      	add	sp, #28
 800d51e:	bdf0      	pop	{r4, r5, r6, r7, pc}
      if ((prio < osPriorityIdle) || (prio > osPriorityISR) || ((attr->attr_bits & osThreadJoinable) == osThreadJoinable)) {
 800d520:	1e5c      	subs	r4, r3, #1
 800d522:	2c37      	cmp	r4, #55	; 0x37
 800d524:	d9d1      	bls.n	800d4ca <osThreadNew+0x1a>
 800d526:	e7f7      	b.n	800d518 <osThreadNew+0x68>
    stack = configMINIMAL_STACK_SIZE;
 800d528:	f04f 0c80 	mov.w	ip, #128	; 0x80
 800d52c:	e7d4      	b.n	800d4d8 <osThreadNew+0x28>
  return ((osThreadId_t)hTask);
 800d52e:	9c05      	ldr	r4, [sp, #20]
 800d530:	e7e4      	b.n	800d4fc <osThreadNew+0x4c>
        if ((attr->cb_mem == NULL) && (attr->cb_size == 0U) && (attr->stack_mem == NULL)) {
 800d532:	68ee      	ldr	r6, [r5, #12]
 800d534:	2e00      	cmp	r6, #0
 800d536:	d1e1      	bne.n	800d4fc <osThreadNew+0x4c>
 800d538:	692d      	ldr	r5, [r5, #16]
 800d53a:	2d00      	cmp	r5, #0
 800d53c:	d1de      	bne.n	800d4fc <osThreadNew+0x4c>
          if (xTaskCreate ((TaskFunction_t)func, name, (uint16_t)stack, argument, prio, &hTask) != pdPASS) {
 800d53e:	fa1f f28c 	uxth.w	r2, ip
 800d542:	463d      	mov	r5, r7
 800d544:	e7df      	b.n	800d506 <osThreadNew+0x56>
 800d546:	bf00      	nop

0800d548 <osDelay>:
  /* Return flags before clearing */
  return (rflags);
}
#endif /* (configUSE_OS2_THREAD_FLAGS == 1) */

osStatus_t osDelay (uint32_t ticks) {
 800d548:	b510      	push	{r4, lr}
 800d54a:	f3ef 8405 	mrs	r4, IPSR
  osStatus_t stat;

  if (IS_IRQ()) {
 800d54e:	b92c      	cbnz	r4, 800d55c <osDelay+0x14>
    stat = osErrorISR;
  }
  else {
    stat = osOK;

    if (ticks != 0U) {
 800d550:	b900      	cbnz	r0, 800d554 <osDelay+0xc>
      vTaskDelay(ticks);
    }
  }

  return (stat);
}
 800d552:	bd10      	pop	{r4, pc}
      vTaskDelay(ticks);
 800d554:	f001 fffa 	bl	800f54c <vTaskDelay>
    stat = osOK;
 800d558:	4620      	mov	r0, r4
}
 800d55a:	bd10      	pop	{r4, pc}
    stat = osErrorISR;
 800d55c:	f06f 0005 	mvn.w	r0, #5
}
 800d560:	bd10      	pop	{r4, pc}
 800d562:	bf00      	nop

0800d564 <osSemaphoreNew>:
}
#endif /* (configUSE_OS2_MUTEX == 1) */

/*---------------------------------------------------------------------------*/

osSemaphoreId_t osSemaphoreNew (uint32_t max_count, uint32_t initial_count, const osSemaphoreAttr_t *attr) {
 800d564:	b5f0      	push	{r4, r5, r6, r7, lr}
 800d566:	b083      	sub	sp, #12
 800d568:	f3ef 8605 	mrs	r6, IPSR
  const char *name;
  #endif

  hSemaphore = NULL;

  if (!IS_IRQ() && (max_count > 0U) && (initial_count <= max_count)) {
 800d56c:	b9fe      	cbnz	r6, 800d5ae <osSemaphoreNew+0x4a>
 800d56e:	b1f0      	cbz	r0, 800d5ae <osSemaphoreNew+0x4a>
 800d570:	4288      	cmp	r0, r1
 800d572:	460f      	mov	r7, r1
 800d574:	d31b      	bcc.n	800d5ae <osSemaphoreNew+0x4a>
    mem = -1;

    if (attr != NULL) {
 800d576:	4615      	mov	r5, r2
 800d578:	b192      	cbz	r2, 800d5a0 <osSemaphoreNew+0x3c>
      if ((attr->cb_mem != NULL) && (attr->cb_size >= sizeof(StaticSemaphore_t))) {
 800d57a:	e9d2 2302 	ldrd	r2, r3, [r2, #8]
 800d57e:	b1d2      	cbz	r2, 800d5b6 <osSemaphoreNew+0x52>
 800d580:	2b4f      	cmp	r3, #79	; 0x4f
 800d582:	d914      	bls.n	800d5ae <osSemaphoreNew+0x4a>
    else {
      mem = 0;
    }

    if (mem != -1) {
      if (max_count == 1U) {
 800d584:	2801      	cmp	r0, #1
 800d586:	d038      	beq.n	800d5fa <osSemaphoreNew+0x96>
        }
      }
      else {
        if (mem == 1) {
          #if (configSUPPORT_STATIC_ALLOCATION == 1)
            hSemaphore = xSemaphoreCreateCountingStatic (max_count, initial_count, (StaticSemaphore_t *)attr->cb_mem);
 800d588:	f000 fd8a 	bl	800e0a0 <xQueueCreateCountingSemaphoreStatic>
          #endif
        }
      }
      
      #if (configQUEUE_REGISTRY_SIZE > 0)
      if (hSemaphore != NULL) {
 800d58c:	4604      	mov	r4, r0
 800d58e:	b170      	cbz	r0, 800d5ae <osSemaphoreNew+0x4a>
        if (attr != NULL) {
          name = attr->name;
 800d590:	682d      	ldr	r5, [r5, #0]
        } else {
          name = NULL;
        }
        vQueueAddToRegistry (hSemaphore, name);
 800d592:	4620      	mov	r0, r4
 800d594:	4629      	mov	r1, r5
 800d596:	f001 fc35 	bl	800ee04 <vQueueAddToRegistry>
      #endif
    }
  }

  return ((osSemaphoreId_t)hSemaphore);
}
 800d59a:	4620      	mov	r0, r4
 800d59c:	b003      	add	sp, #12
 800d59e:	bdf0      	pop	{r4, r5, r6, r7, pc}
      if (max_count == 1U) {
 800d5a0:	2801      	cmp	r0, #1
 800d5a2:	d012      	beq.n	800d5ca <osSemaphoreNew+0x66>
            hSemaphore = xSemaphoreCreateCounting (max_count, initial_count);
 800d5a4:	f000 fddc 	bl	800e160 <xQueueCreateCountingSemaphore>
      if (hSemaphore != NULL) {
 800d5a8:	4604      	mov	r4, r0
 800d5aa:	2800      	cmp	r0, #0
 800d5ac:	d1f1      	bne.n	800d592 <osSemaphoreNew+0x2e>
            hSemaphore = NULL;
 800d5ae:	2400      	movs	r4, #0
}
 800d5b0:	4620      	mov	r0, r4
 800d5b2:	b003      	add	sp, #12
 800d5b4:	bdf0      	pop	{r4, r5, r6, r7, pc}
        if ((attr->cb_mem == NULL) && (attr->cb_size == 0U)) {
 800d5b6:	2b00      	cmp	r3, #0
 800d5b8:	d1f9      	bne.n	800d5ae <osSemaphoreNew+0x4a>
      if (max_count == 1U) {
 800d5ba:	2801      	cmp	r0, #1
 800d5bc:	d005      	beq.n	800d5ca <osSemaphoreNew+0x66>
            hSemaphore = xSemaphoreCreateCounting (max_count, initial_count);
 800d5be:	f000 fdcf 	bl	800e160 <xQueueCreateCountingSemaphore>
      if (hSemaphore != NULL) {
 800d5c2:	4604      	mov	r4, r0
 800d5c4:	2800      	cmp	r0, #0
 800d5c6:	d1e3      	bne.n	800d590 <osSemaphoreNew+0x2c>
 800d5c8:	e7f1      	b.n	800d5ae <osSemaphoreNew+0x4a>
            hSemaphore = xSemaphoreCreateBinary();
 800d5ca:	2203      	movs	r2, #3
 800d5cc:	2100      	movs	r1, #0
 800d5ce:	2001      	movs	r0, #1
 800d5d0:	f000 fd24 	bl	800e01c <xQueueGenericCreate>
 800d5d4:	4604      	mov	r4, r0
        if ((hSemaphore != NULL) && (initial_count != 0U)) {
 800d5d6:	2c00      	cmp	r4, #0
 800d5d8:	d0e9      	beq.n	800d5ae <osSemaphoreNew+0x4a>
 800d5da:	b917      	cbnz	r7, 800d5e2 <osSemaphoreNew+0x7e>
        if (attr != NULL) {
 800d5dc:	2d00      	cmp	r5, #0
 800d5de:	d1d7      	bne.n	800d590 <osSemaphoreNew+0x2c>
 800d5e0:	e7d7      	b.n	800d592 <osSemaphoreNew+0x2e>
          if (xSemaphoreGive (hSemaphore) != pdPASS) {
 800d5e2:	2300      	movs	r3, #0
 800d5e4:	461a      	mov	r2, r3
 800d5e6:	4619      	mov	r1, r3
 800d5e8:	4620      	mov	r0, r4
 800d5ea:	f000 fdff 	bl	800e1ec <xQueueGenericSend>
 800d5ee:	2801      	cmp	r0, #1
 800d5f0:	d0f4      	beq.n	800d5dc <osSemaphoreNew+0x78>
            vSemaphoreDelete (hSemaphore);
 800d5f2:	4620      	mov	r0, r4
 800d5f4:	f001 fbc0 	bl	800ed78 <vQueueDelete>
 800d5f8:	e7d9      	b.n	800d5ae <osSemaphoreNew+0x4a>
            hSemaphore = xSemaphoreCreateBinaryStatic ((StaticSemaphore_t *)attr->cb_mem);
 800d5fa:	4613      	mov	r3, r2
 800d5fc:	2203      	movs	r2, #3
 800d5fe:	9200      	str	r2, [sp, #0]
 800d600:	4631      	mov	r1, r6
 800d602:	4632      	mov	r2, r6
 800d604:	f000 fc9c 	bl	800df40 <xQueueGenericCreateStatic>
 800d608:	4604      	mov	r4, r0
 800d60a:	e7e4      	b.n	800d5d6 <osSemaphoreNew+0x72>

0800d60c <osSemaphoreAcquire>:
  osStatus_t stat;
  BaseType_t yield;

  stat = osOK;

  if (hSemaphore == NULL) {
 800d60c:	b370      	cbz	r0, 800d66c <osSemaphoreAcquire+0x60>
osStatus_t osSemaphoreAcquire (osSemaphoreId_t semaphore_id, uint32_t timeout) {
 800d60e:	b510      	push	{r4, lr}
 800d610:	460c      	mov	r4, r1
 800d612:	b082      	sub	sp, #8
 800d614:	f3ef 8305 	mrs	r3, IPSR
    stat = osErrorParameter;
  }
  else if (IS_IRQ()) {
 800d618:	b1c3      	cbz	r3, 800d64c <osSemaphoreAcquire+0x40>
    if (timeout != 0U) {
 800d61a:	bb21      	cbnz	r1, 800d666 <osSemaphoreAcquire+0x5a>
      stat = osErrorParameter;
    }
    else {
      yield = pdFALSE;

      if (xSemaphoreTakeFromISR (hSemaphore, &yield) != pdPASS) {
 800d61c:	aa01      	add	r2, sp, #4
      yield = pdFALSE;
 800d61e:	9101      	str	r1, [sp, #4]
      if (xSemaphoreTakeFromISR (hSemaphore, &yield) != pdPASS) {
 800d620:	f001 fb28 	bl	800ec74 <xQueueReceiveFromISR>
 800d624:	2801      	cmp	r0, #1
 800d626:	d11a      	bne.n	800d65e <osSemaphoreAcquire+0x52>
        stat = osErrorResource;
      } else {
        portYIELD_FROM_ISR (yield);
 800d628:	9b01      	ldr	r3, [sp, #4]
 800d62a:	b913      	cbnz	r3, 800d632 <osSemaphoreAcquire+0x26>
  stat = osOK;
 800d62c:	2000      	movs	r0, #0
      }
    }
  }

  return (stat);
}
 800d62e:	b002      	add	sp, #8
 800d630:	bd10      	pop	{r4, pc}
        portYIELD_FROM_ISR (yield);
 800d632:	f04f 23e0 	mov.w	r3, #3758153728	; 0xe000e000
 800d636:	f04f 5280 	mov.w	r2, #268435456	; 0x10000000
 800d63a:	f8c3 2d04 	str.w	r2, [r3, #3332]	; 0xd04
 800d63e:	f3bf 8f4f 	dsb	sy
 800d642:	f3bf 8f6f 	isb	sy
  stat = osOK;
 800d646:	4620      	mov	r0, r4
}
 800d648:	b002      	add	sp, #8
 800d64a:	bd10      	pop	{r4, pc}
    if (xSemaphoreTake (hSemaphore, (TickType_t)timeout) != pdPASS) {
 800d64c:	f001 f988 	bl	800e960 <xQueueSemaphoreTake>
 800d650:	2801      	cmp	r0, #1
 800d652:	d0eb      	beq.n	800d62c <osSemaphoreAcquire+0x20>
      if (timeout != 0U) {
 800d654:	b11c      	cbz	r4, 800d65e <osSemaphoreAcquire+0x52>
        stat = osErrorTimeout;
 800d656:	f06f 0001 	mvn.w	r0, #1
}
 800d65a:	b002      	add	sp, #8
 800d65c:	bd10      	pop	{r4, pc}
        stat = osErrorResource;
 800d65e:	f06f 0002 	mvn.w	r0, #2
}
 800d662:	b002      	add	sp, #8
 800d664:	bd10      	pop	{r4, pc}
    stat = osErrorParameter;
 800d666:	f06f 0003 	mvn.w	r0, #3
 800d66a:	e7e0      	b.n	800d62e <osSemaphoreAcquire+0x22>
 800d66c:	f06f 0003 	mvn.w	r0, #3
}
 800d670:	4770      	bx	lr
 800d672:	bf00      	nop

0800d674 <osSemaphoreRelease>:
  osStatus_t stat;
  BaseType_t yield;

  stat = osOK;

  if (hSemaphore == NULL) {
 800d674:	b330      	cbz	r0, 800d6c4 <osSemaphoreRelease+0x50>
osStatus_t osSemaphoreRelease (osSemaphoreId_t semaphore_id) {
 800d676:	b510      	push	{r4, lr}
 800d678:	b082      	sub	sp, #8
 800d67a:	f3ef 8305 	mrs	r3, IPSR
    stat = osErrorParameter;
  }
  else if (IS_IRQ()) {
 800d67e:	b1ab      	cbz	r3, 800d6ac <osSemaphoreRelease+0x38>
    yield = pdFALSE;
 800d680:	2400      	movs	r4, #0

    if (xSemaphoreGiveFromISR (hSemaphore, &yield) != pdTRUE) {
 800d682:	a901      	add	r1, sp, #4
    yield = pdFALSE;
 800d684:	9401      	str	r4, [sp, #4]
    if (xSemaphoreGiveFromISR (hSemaphore, &yield) != pdTRUE) {
 800d686:	f000 ff95 	bl	800e5b4 <xQueueGiveFromISR>
 800d68a:	2801      	cmp	r0, #1
 800d68c:	d117      	bne.n	800d6be <osSemaphoreRelease+0x4a>
      stat = osErrorResource;
    } else {
      portYIELD_FROM_ISR (yield);
 800d68e:	9b01      	ldr	r3, [sp, #4]
 800d690:	b193      	cbz	r3, 800d6b8 <osSemaphoreRelease+0x44>
 800d692:	f04f 23e0 	mov.w	r3, #3758153728	; 0xe000e000
 800d696:	f04f 5280 	mov.w	r2, #268435456	; 0x10000000
 800d69a:	f8c3 2d04 	str.w	r2, [r3, #3332]	; 0xd04
 800d69e:	f3bf 8f4f 	dsb	sy
 800d6a2:	f3bf 8f6f 	isb	sy
  stat = osOK;
 800d6a6:	4620      	mov	r0, r4
      stat = osErrorResource;
    }
  }

  return (stat);
}
 800d6a8:	b002      	add	sp, #8
 800d6aa:	bd10      	pop	{r4, pc}
    if (xSemaphoreGive (hSemaphore) != pdPASS) {
 800d6ac:	461a      	mov	r2, r3
 800d6ae:	4619      	mov	r1, r3
 800d6b0:	f000 fd9c 	bl	800e1ec <xQueueGenericSend>
 800d6b4:	2801      	cmp	r0, #1
 800d6b6:	d102      	bne.n	800d6be <osSemaphoreRelease+0x4a>
  stat = osOK;
 800d6b8:	2000      	movs	r0, #0
}
 800d6ba:	b002      	add	sp, #8
 800d6bc:	bd10      	pop	{r4, pc}
      stat = osErrorResource;
 800d6be:	f06f 0002 	mvn.w	r0, #2
 800d6c2:	e7fa      	b.n	800d6ba <osSemaphoreRelease+0x46>
    stat = osErrorParameter;
 800d6c4:	f06f 0003 	mvn.w	r0, #3
}
 800d6c8:	4770      	bx	lr
 800d6ca:	bf00      	nop

0800d6cc <osMessageQueueNew>:
  return (stat);
}

/*---------------------------------------------------------------------------*/

osMessageQueueId_t osMessageQueueNew (uint32_t msg_count, uint32_t msg_size, const osMessageQueueAttr_t *attr) {
 800d6cc:	b5f0      	push	{r4, r5, r6, r7, lr}
 800d6ce:	b085      	sub	sp, #20
 800d6d0:	f3ef 8705 	mrs	r7, IPSR
  const char *name;
  #endif

  hQueue = NULL;

  if (!IS_IRQ() && (msg_count > 0U) && (msg_size > 0U)) {
 800d6d4:	b987      	cbnz	r7, 800d6f8 <osMessageQueueNew+0x2c>
 800d6d6:	4605      	mov	r5, r0
 800d6d8:	b170      	cbz	r0, 800d6f8 <osMessageQueueNew+0x2c>
 800d6da:	b169      	cbz	r1, 800d6f8 <osMessageQueueNew+0x2c>
    mem = -1;

    if (attr != NULL) {
 800d6dc:	4614      	mov	r4, r2
 800d6de:	b1ea      	cbz	r2, 800d71c <osMessageQueueNew+0x50>
      if ((attr->cb_mem != NULL) && (attr->cb_size >= sizeof(StaticQueue_t)) &&
 800d6e0:	6893      	ldr	r3, [r2, #8]
 800d6e2:	b163      	cbz	r3, 800d6fe <osMessageQueueNew+0x32>
 800d6e4:	68d2      	ldr	r2, [r2, #12]
 800d6e6:	2a4f      	cmp	r2, #79	; 0x4f
 800d6e8:	d906      	bls.n	800d6f8 <osMessageQueueNew+0x2c>
          (attr->mq_mem != NULL) && (attr->mq_size >= (msg_count * msg_size))) {
 800d6ea:	6922      	ldr	r2, [r4, #16]
      if ((attr->cb_mem != NULL) && (attr->cb_size >= sizeof(StaticQueue_t)) &&
 800d6ec:	b122      	cbz	r2, 800d6f8 <osMessageQueueNew+0x2c>
          (attr->mq_mem != NULL) && (attr->mq_size >= (msg_count * msg_size))) {
 800d6ee:	6966      	ldr	r6, [r4, #20]
 800d6f0:	fb01 f505 	mul.w	r5, r1, r5
 800d6f4:	42ae      	cmp	r6, r5
 800d6f6:	d21c      	bcs.n	800d732 <osMessageQueueNew+0x66>
  hQueue = NULL;
 800d6f8:	2000      	movs	r0, #0
    #endif

  }

  return ((osMessageQueueId_t)hQueue);
}
 800d6fa:	b005      	add	sp, #20
 800d6fc:	bdf0      	pop	{r4, r5, r6, r7, pc}
        if ((attr->cb_mem == NULL) && (attr->cb_size == 0U) &&
 800d6fe:	68d3      	ldr	r3, [r2, #12]
 800d700:	2b00      	cmp	r3, #0
 800d702:	d1f9      	bne.n	800d6f8 <osMessageQueueNew+0x2c>
 800d704:	6913      	ldr	r3, [r2, #16]
 800d706:	2b00      	cmp	r3, #0
 800d708:	d1f6      	bne.n	800d6f8 <osMessageQueueNew+0x2c>
            (attr->mq_mem == NULL) && (attr->mq_size == 0U)) {
 800d70a:	6952      	ldr	r2, [r2, #20]
 800d70c:	2a00      	cmp	r2, #0
 800d70e:	d1f3      	bne.n	800d6f8 <osMessageQueueNew+0x2c>
          hQueue = xQueueCreate (msg_count, msg_size);
 800d710:	f000 fc84 	bl	800e01c <xQueueGenericCreate>
    if (hQueue != NULL) {
 800d714:	2800      	cmp	r0, #0
 800d716:	d0ef      	beq.n	800d6f8 <osMessageQueueNew+0x2c>
        name = attr->name;
 800d718:	6824      	ldr	r4, [r4, #0]
 800d71a:	e003      	b.n	800d724 <osMessageQueueNew+0x58>
          hQueue = xQueueCreate (msg_count, msg_size);
 800d71c:	f000 fc7e 	bl	800e01c <xQueueGenericCreate>
    if (hQueue != NULL) {
 800d720:	2800      	cmp	r0, #0
 800d722:	d0e9      	beq.n	800d6f8 <osMessageQueueNew+0x2c>
      vQueueAddToRegistry (hQueue, name);
 800d724:	4621      	mov	r1, r4
 800d726:	9003      	str	r0, [sp, #12]
 800d728:	f001 fb6c 	bl	800ee04 <vQueueAddToRegistry>
  return ((osMessageQueueId_t)hQueue);
 800d72c:	9803      	ldr	r0, [sp, #12]
}
 800d72e:	b005      	add	sp, #20
 800d730:	bdf0      	pop	{r4, r5, r6, r7, pc}
        hQueue = xQueueCreateStatic (msg_count, msg_size, attr->mq_mem, attr->cb_mem);
 800d732:	9700      	str	r7, [sp, #0]
 800d734:	f000 fc04 	bl	800df40 <xQueueGenericCreateStatic>
    if (hQueue != NULL) {
 800d738:	2800      	cmp	r0, #0
 800d73a:	d1ed      	bne.n	800d718 <osMessageQueueNew+0x4c>
 800d73c:	e7dc      	b.n	800d6f8 <osMessageQueueNew+0x2c>
 800d73e:	bf00      	nop

0800d740 <osMessageQueuePut>:

osStatus_t osMessageQueuePut (osMessageQueueId_t mq_id, const void *msg_ptr, uint8_t msg_prio, uint32_t timeout) {
 800d740:	b570      	push	{r4, r5, r6, lr}
 800d742:	461c      	mov	r4, r3
 800d744:	b082      	sub	sp, #8
 800d746:	f3ef 8605 	mrs	r6, IPSR

  (void)msg_prio; /* Message priority is ignored */

  stat = osOK;

  if (IS_IRQ()) {
 800d74a:	b1be      	cbz	r6, 800d77c <osMessageQueuePut+0x3c>
    if ((hQueue == NULL) || (msg_ptr == NULL) || (timeout != 0U)) {
 800d74c:	b350      	cbz	r0, 800d7a4 <osMessageQueuePut+0x64>
 800d74e:	b349      	cbz	r1, 800d7a4 <osMessageQueuePut+0x64>
 800d750:	bb43      	cbnz	r3, 800d7a4 <osMessageQueuePut+0x64>
      stat = osErrorParameter;
    }
    else {
      yield = pdFALSE;

      if (xQueueSendToBackFromISR (hQueue, msg_ptr, &yield) != pdTRUE) {
 800d752:	aa01      	add	r2, sp, #4
      yield = pdFALSE;
 800d754:	9301      	str	r3, [sp, #4]
      if (xQueueSendToBackFromISR (hQueue, msg_ptr, &yield) != pdTRUE) {
 800d756:	f000 fec7 	bl	800e4e8 <xQueueGenericSendFromISR>
 800d75a:	2801      	cmp	r0, #1
 800d75c:	d11e      	bne.n	800d79c <osMessageQueuePut+0x5c>
        stat = osErrorResource;
      } else {
        portYIELD_FROM_ISR (yield);
 800d75e:	9b01      	ldr	r3, [sp, #4]
 800d760:	b1cb      	cbz	r3, 800d796 <osMessageQueuePut+0x56>
 800d762:	f04f 23e0 	mov.w	r3, #3758153728	; 0xe000e000
 800d766:	f04f 5280 	mov.w	r2, #268435456	; 0x10000000
 800d76a:	f8c3 2d04 	str.w	r2, [r3, #3332]	; 0xd04
 800d76e:	f3bf 8f4f 	dsb	sy
 800d772:	f3bf 8f6f 	isb	sy
  stat = osOK;
 800d776:	4620      	mov	r0, r4
      }
    }
  }

  return (stat);
}
 800d778:	b002      	add	sp, #8
 800d77a:	bd70      	pop	{r4, r5, r6, pc}
    if ((hQueue == NULL) || (msg_ptr == NULL)) {
 800d77c:	b190      	cbz	r0, 800d7a4 <osMessageQueuePut+0x64>
 800d77e:	b189      	cbz	r1, 800d7a4 <osMessageQueuePut+0x64>
      if (xQueueSendToBack (hQueue, msg_ptr, (TickType_t)timeout) != pdPASS) {
 800d780:	4633      	mov	r3, r6
 800d782:	4622      	mov	r2, r4
 800d784:	f000 fd32 	bl	800e1ec <xQueueGenericSend>
 800d788:	2801      	cmp	r0, #1
 800d78a:	d004      	beq.n	800d796 <osMessageQueuePut+0x56>
        if (timeout != 0U) {
 800d78c:	b134      	cbz	r4, 800d79c <osMessageQueuePut+0x5c>
          stat = osErrorTimeout;
 800d78e:	f06f 0001 	mvn.w	r0, #1
}
 800d792:	b002      	add	sp, #8
 800d794:	bd70      	pop	{r4, r5, r6, pc}
  stat = osOK;
 800d796:	2000      	movs	r0, #0
}
 800d798:	b002      	add	sp, #8
 800d79a:	bd70      	pop	{r4, r5, r6, pc}
          stat = osErrorResource;
 800d79c:	f06f 0002 	mvn.w	r0, #2
}
 800d7a0:	b002      	add	sp, #8
 800d7a2:	bd70      	pop	{r4, r5, r6, pc}
      stat = osErrorParameter;
 800d7a4:	f06f 0003 	mvn.w	r0, #3
 800d7a8:	e7e6      	b.n	800d778 <osMessageQueuePut+0x38>
 800d7aa:	bf00      	nop

0800d7ac <osMessageQueueGet>:

osStatus_t osMessageQueueGet (osMessageQueueId_t mq_id, void *msg_ptr, uint8_t *msg_prio, uint32_t timeout) {
 800d7ac:	b530      	push	{r4, r5, lr}
 800d7ae:	461c      	mov	r4, r3
 800d7b0:	b083      	sub	sp, #12
 800d7b2:	f3ef 8305 	mrs	r3, IPSR

  (void)msg_prio; /* Message priority is ignored */

  stat = osOK;

  if (IS_IRQ()) {
 800d7b6:	b1bb      	cbz	r3, 800d7e8 <osMessageQueueGet+0x3c>
    if ((hQueue == NULL) || (msg_ptr == NULL) || (timeout != 0U)) {
 800d7b8:	b348      	cbz	r0, 800d80e <osMessageQueueGet+0x62>
 800d7ba:	b341      	cbz	r1, 800d80e <osMessageQueueGet+0x62>
 800d7bc:	bb3c      	cbnz	r4, 800d80e <osMessageQueueGet+0x62>
      stat = osErrorParameter;
    }
    else {
      yield = pdFALSE;

      if (xQueueReceiveFromISR (hQueue, msg_ptr, &yield) != pdPASS) {
 800d7be:	aa01      	add	r2, sp, #4
      yield = pdFALSE;
 800d7c0:	9401      	str	r4, [sp, #4]
      if (xQueueReceiveFromISR (hQueue, msg_ptr, &yield) != pdPASS) {
 800d7c2:	f001 fa57 	bl	800ec74 <xQueueReceiveFromISR>
 800d7c6:	2801      	cmp	r0, #1
 800d7c8:	d11d      	bne.n	800d806 <osMessageQueueGet+0x5a>
        stat = osErrorResource;
      } else {
        portYIELD_FROM_ISR (yield);
 800d7ca:	9b01      	ldr	r3, [sp, #4]
 800d7cc:	b1c3      	cbz	r3, 800d800 <osMessageQueueGet+0x54>
 800d7ce:	f04f 23e0 	mov.w	r3, #3758153728	; 0xe000e000
 800d7d2:	f04f 5280 	mov.w	r2, #268435456	; 0x10000000
 800d7d6:	f8c3 2d04 	str.w	r2, [r3, #3332]	; 0xd04
 800d7da:	f3bf 8f4f 	dsb	sy
 800d7de:	f3bf 8f6f 	isb	sy
  stat = osOK;
 800d7e2:	4620      	mov	r0, r4
      }
    }
  }

  return (stat);
}
 800d7e4:	b003      	add	sp, #12
 800d7e6:	bd30      	pop	{r4, r5, pc}
    if ((hQueue == NULL) || (msg_ptr == NULL)) {
 800d7e8:	b188      	cbz	r0, 800d80e <osMessageQueueGet+0x62>
 800d7ea:	b181      	cbz	r1, 800d80e <osMessageQueueGet+0x62>
      if (xQueueReceive (hQueue, msg_ptr, (TickType_t)timeout) != pdPASS) {
 800d7ec:	4622      	mov	r2, r4
 800d7ee:	f000 ff39 	bl	800e664 <xQueueReceive>
 800d7f2:	2801      	cmp	r0, #1
 800d7f4:	d004      	beq.n	800d800 <osMessageQueueGet+0x54>
        if (timeout != 0U) {
 800d7f6:	b134      	cbz	r4, 800d806 <osMessageQueueGet+0x5a>
          stat = osErrorTimeout;
 800d7f8:	f06f 0001 	mvn.w	r0, #1
}
 800d7fc:	b003      	add	sp, #12
 800d7fe:	bd30      	pop	{r4, r5, pc}
  stat = osOK;
 800d800:	2000      	movs	r0, #0
}
 800d802:	b003      	add	sp, #12
 800d804:	bd30      	pop	{r4, r5, pc}
          stat = osErrorResource;
 800d806:	f06f 0002 	mvn.w	r0, #2
}
 800d80a:	b003      	add	sp, #12
 800d80c:	bd30      	pop	{r4, r5, pc}
      stat = osErrorParameter;
 800d80e:	f06f 0003 	mvn.w	r0, #3
 800d812:	e7e7      	b.n	800d7e4 <osMessageQueueGet+0x38>

0800d814 <osMessageQueueGetCount>:
 800d814:	b130      	cbz	r0, 800d824 <osMessageQueueGetCount+0x10>
 800d816:	f3ef 8305 	mrs	r3, IPSR
 800d81a:	b10b      	cbz	r3, 800d820 <osMessageQueueGetCount+0xc>
 800d81c:	f001 ba9e 	b.w	800ed5c <uxQueueMessagesWaitingFromISR>
 800d820:	f001 ba86 	b.w	800ed30 <uxQueueMessagesWaiting>
 800d824:	4770      	bx	lr
 800d826:	bf00      	nop

0800d828 <vApplicationGetIdleTaskMemory>:
__WEAK void vApplicationGetIdleTaskMemory (StaticTask_t **ppxIdleTaskTCBBuffer, StackType_t **ppxIdleTaskStackBuffer, uint32_t *pulIdleTaskStackSize) {
  /* Idle task control block and stack */
  static StaticTask_t Idle_TCB;
  static StackType_t  Idle_Stack[configMINIMAL_STACK_SIZE];

  *ppxIdleTaskTCBBuffer   = &Idle_TCB;
 800d828:	4b04      	ldr	r3, [pc, #16]	; (800d83c <vApplicationGetIdleTaskMemory+0x14>)
 800d82a:	6003      	str	r3, [r0, #0]
__WEAK void vApplicationGetIdleTaskMemory (StaticTask_t **ppxIdleTaskTCBBuffer, StackType_t **ppxIdleTaskStackBuffer, uint32_t *pulIdleTaskStackSize) {
 800d82c:	b410      	push	{r4}
  *ppxIdleTaskStackBuffer = &Idle_Stack[0];
  *pulIdleTaskStackSize   = (uint32_t)configMINIMAL_STACK_SIZE;
 800d82e:	2380      	movs	r3, #128	; 0x80
  *ppxIdleTaskStackBuffer = &Idle_Stack[0];
 800d830:	4c03      	ldr	r4, [pc, #12]	; (800d840 <vApplicationGetIdleTaskMemory+0x18>)
 800d832:	600c      	str	r4, [r1, #0]
}
 800d834:	f85d 4b04 	ldr.w	r4, [sp], #4
  *pulIdleTaskStackSize   = (uint32_t)configMINIMAL_STACK_SIZE;
 800d838:	6013      	str	r3, [r2, #0]
}
 800d83a:	4770      	bx	lr
 800d83c:	20002c24 	.word	0x20002c24
 800d840:	20002a24 	.word	0x20002a24

0800d844 <vApplicationGetTimerTaskMemory>:
__WEAK void vApplicationGetTimerTaskMemory (StaticTask_t **ppxTimerTaskTCBBuffer, StackType_t **ppxTimerTaskStackBuffer, uint32_t *pulTimerTaskStackSize) {
  /* Timer task control block and stack */
  static StaticTask_t Timer_TCB;
  static StackType_t  Timer_Stack[configTIMER_TASK_STACK_DEPTH];

  *ppxTimerTaskTCBBuffer   = &Timer_TCB;
 800d844:	4b05      	ldr	r3, [pc, #20]	; (800d85c <vApplicationGetTimerTaskMemory+0x18>)
 800d846:	6003      	str	r3, [r0, #0]
__WEAK void vApplicationGetTimerTaskMemory (StaticTask_t **ppxTimerTaskTCBBuffer, StackType_t **ppxTimerTaskStackBuffer, uint32_t *pulTimerTaskStackSize) {
 800d848:	b410      	push	{r4}
  *ppxTimerTaskStackBuffer = &Timer_Stack[0];
  *pulTimerTaskStackSize   = (uint32_t)configTIMER_TASK_STACK_DEPTH;
 800d84a:	f44f 7380 	mov.w	r3, #256	; 0x100
  *ppxTimerTaskStackBuffer = &Timer_Stack[0];
 800d84e:	4c04      	ldr	r4, [pc, #16]	; (800d860 <vApplicationGetTimerTaskMemory+0x1c>)
 800d850:	600c      	str	r4, [r1, #0]
}
 800d852:	f85d 4b04 	ldr.w	r4, [sp], #4
  *pulTimerTaskStackSize   = (uint32_t)configTIMER_TASK_STACK_DEPTH;
 800d856:	6013      	str	r3, [r2, #0]
}
 800d858:	4770      	bx	lr
 800d85a:	bf00      	nop
 800d85c:	200030d4 	.word	0x200030d4
 800d860:	20002cd4 	.word	0x20002cd4

0800d864 <pvPortMalloc>:
static size_t xBlockAllocatedBit = 0;

/*-----------------------------------------------------------*/

void *pvPortMalloc( size_t xWantedSize )
{
 800d864:	e92d 41f0 	stmdb	sp!, {r4, r5, r6, r7, r8, lr}
 800d868:	4605      	mov	r5, r0
BlockLink_t *pxBlock, *pxPreviousBlock, *pxNewBlockLink;
void *pvReturn = NULL;

	vTaskSuspendAll();
 800d86a:	f001 ff41 	bl	800f6f0 <vTaskSuspendAll>
	{
		/* If this is the first call to malloc then the heap will require
		initialisation to setup the list of free blocks. */
		if( pxEnd == NULL )
 800d86e:	4a54      	ldr	r2, [pc, #336]	; (800d9c0 <pvPortMalloc+0x15c>)
 800d870:	6816      	ldr	r6, [r2, #0]
 800d872:	2e00      	cmp	r6, #0
 800d874:	d06e      	beq.n	800d954 <pvPortMalloc+0xf0>

		/* Check the requested block size is not so large that the top bit is
		set.  The top bit of the block size member of the BlockLink_t structure
		is used to determine who owns the block - the application or the
		kernel, so it must be free. */
		if( ( xWantedSize & xBlockAllocatedBit ) == 0 )
 800d876:	4b53      	ldr	r3, [pc, #332]	; (800d9c4 <pvPortMalloc+0x160>)
 800d878:	681f      	ldr	r7, [r3, #0]
 800d87a:	423d      	tst	r5, r7
 800d87c:	d12e      	bne.n	800d8dc <pvPortMalloc+0x78>
		{
			/* The wanted size is increased so it can contain a BlockLink_t
			structure in addition to the requested amount of bytes. */
			if( xWantedSize > 0 )
 800d87e:	b36d      	cbz	r5, 800d8dc <pvPortMalloc+0x78>
			{
				xWantedSize += xHeapStructSize;
 800d880:	f105 0408 	add.w	r4, r5, #8

				/* Ensure that blocks are always aligned to the required number
				of bytes. */
				if( ( xWantedSize & portBYTE_ALIGNMENT_MASK ) != 0x00 )
 800d884:	076d      	lsls	r5, r5, #29
				{
					/* Byte alignment required. */
					xWantedSize += ( portBYTE_ALIGNMENT - ( xWantedSize & portBYTE_ALIGNMENT_MASK ) );
 800d886:	bf1c      	itt	ne
 800d888:	f024 0407 	bicne.w	r4, r4, #7
 800d88c:	3408      	addne	r4, #8
			else
			{
				mtCOVERAGE_TEST_MARKER();
			}

			if( ( xWantedSize > 0 ) && ( xWantedSize <= xFreeBytesRemaining ) )
 800d88e:	b32c      	cbz	r4, 800d8dc <pvPortMalloc+0x78>
 800d890:	f8df c144 	ldr.w	ip, [pc, #324]	; 800d9d8 <pvPortMalloc+0x174>
 800d894:	f8dc 5000 	ldr.w	r5, [ip]
 800d898:	42a5      	cmp	r5, r4
 800d89a:	d31f      	bcc.n	800d8dc <pvPortMalloc+0x78>
			{
				/* Traverse the list from the start	(lowest address) block until
				one	of adequate size is found. */
				pxPreviousBlock = &xStart;
				pxBlock = xStart.pxNextFreeBlock;
 800d89c:	484a      	ldr	r0, [pc, #296]	; (800d9c8 <pvPortMalloc+0x164>)
 800d89e:	6803      	ldr	r3, [r0, #0]
				while( ( pxBlock->xBlockSize < xWantedSize ) && ( pxBlock->pxNextFreeBlock != NULL ) )
 800d8a0:	e003      	b.n	800d8aa <pvPortMalloc+0x46>
 800d8a2:	681a      	ldr	r2, [r3, #0]
 800d8a4:	b122      	cbz	r2, 800d8b0 <pvPortMalloc+0x4c>
 800d8a6:	4618      	mov	r0, r3
 800d8a8:	4613      	mov	r3, r2
 800d8aa:	6859      	ldr	r1, [r3, #4]
 800d8ac:	42a1      	cmp	r1, r4
 800d8ae:	d3f8      	bcc.n	800d8a2 <pvPortMalloc+0x3e>
					pxBlock = pxBlock->pxNextFreeBlock;
				}

				/* If the end marker was reached then a block of adequate size
				was	not found. */
				if( pxBlock != pxEnd )
 800d8b0:	42b3      	cmp	r3, r6
 800d8b2:	d013      	beq.n	800d8dc <pvPortMalloc+0x78>
				{
					/* Return the memory space pointed to - jumping over the
					BlockLink_t structure at its start. */
					pvReturn = ( void * ) ( ( ( uint8_t * ) pxPreviousBlock->pxNextFreeBlock ) + xHeapStructSize );
 800d8b4:	4698      	mov	r8, r3
					of the list of free blocks. */
					pxPreviousBlock->pxNextFreeBlock = pxBlock->pxNextFreeBlock;

					/* If the block is larger than required it can be split into
					two. */
					if( ( pxBlock->xBlockSize - xWantedSize ) > heapMINIMUM_BLOCK_SIZE )
 800d8b6:	1b0a      	subs	r2, r1, r4
					pxPreviousBlock->pxNextFreeBlock = pxBlock->pxNextFreeBlock;
 800d8b8:	f858 eb08 	ldr.w	lr, [r8], #8
 800d8bc:	f8c0 e000 	str.w	lr, [r0]
					if( ( pxBlock->xBlockSize - xWantedSize ) > heapMINIMUM_BLOCK_SIZE )
 800d8c0:	2a10      	cmp	r2, #16
 800d8c2:	d929      	bls.n	800d918 <pvPortMalloc+0xb4>
					{
						/* This block is to be split into two.  Create a new
						block following the number of bytes requested. The void
						cast is used to prevent byte alignment warnings from the
						compiler. */
						pxNewBlockLink = ( void * ) ( ( ( uint8_t * ) pxBlock ) + xWantedSize );
 800d8c4:	1919      	adds	r1, r3, r4
						configASSERT( ( ( ( size_t ) pxNewBlockLink ) & portBYTE_ALIGNMENT_MASK ) == 0 );
 800d8c6:	0748      	lsls	r0, r1, #29
 800d8c8:	d00f      	beq.n	800d8ea <pvPortMalloc+0x86>

portFORCE_INLINE static void vPortRaiseBASEPRI( void )
{
uint32_t ulNewBASEPRI;

	__asm volatile
 800d8ca:	f04f 0350 	mov.w	r3, #80	; 0x50
 800d8ce:	f383 8811 	msr	BASEPRI, r3
 800d8d2:	f3bf 8f6f 	isb	sy
 800d8d6:	f3bf 8f4f 	dsb	sy
 800d8da:	e7fe      	b.n	800d8da <pvPortMalloc+0x76>
			mtCOVERAGE_TEST_MARKER();
		}

		traceMALLOC( pvReturn, xWantedSize );
	}
	( void ) xTaskResumeAll();
 800d8dc:	f001 ff10 	bl	800f700 <xTaskResumeAll>
 800d8e0:	f04f 0800 	mov.w	r8, #0
	}
	#endif

	configASSERT( ( ( ( size_t ) pvReturn ) & ( size_t ) portBYTE_ALIGNMENT_MASK ) == 0 );
	return pvReturn;
}
 800d8e4:	4640      	mov	r0, r8
 800d8e6:	e8bd 81f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, pc}
						pxNewBlockLink->xBlockSize = pxBlock->xBlockSize - xWantedSize;
 800d8ea:	604a      	str	r2, [r1, #4]
BlockLink_t *pxIterator;
uint8_t *puc;

	/* Iterate through the list until a block is found that has a higher address
	than the block being inserted. */
	for( pxIterator = &xStart; pxIterator->pxNextFreeBlock < pxBlockToInsert; pxIterator = pxIterator->pxNextFreeBlock )
 800d8ec:	4a36      	ldr	r2, [pc, #216]	; (800d9c8 <pvPortMalloc+0x164>)
						pxBlock->xBlockSize = xWantedSize;
 800d8ee:	605c      	str	r4, [r3, #4]
	for( pxIterator = &xStart; pxIterator->pxNextFreeBlock < pxBlockToInsert; pxIterator = pxIterator->pxNextFreeBlock )
 800d8f0:	4614      	mov	r4, r2
 800d8f2:	6812      	ldr	r2, [r2, #0]
 800d8f4:	4291      	cmp	r1, r2
 800d8f6:	d8fb      	bhi.n	800d8f0 <pvPortMalloc+0x8c>
	}

	/* Do the block being inserted, and the block it is being inserted after
	make a contiguous block of memory? */
	puc = ( uint8_t * ) pxIterator;
	if( ( puc + pxIterator->xBlockSize ) == ( uint8_t * ) pxBlockToInsert )
 800d8f8:	6860      	ldr	r0, [r4, #4]
 800d8fa:	eb04 0e00 	add.w	lr, r4, r0
 800d8fe:	4571      	cmp	r1, lr
 800d900:	d04b      	beq.n	800d99a <pvPortMalloc+0x136>
	{
		pxIterator->xBlockSize += pxBlockToInsert->xBlockSize;
 800d902:	f8d1 e004 	ldr.w	lr, [r1, #4]
	}

	/* Do the block being inserted, and the block it is being inserted before
	make a contiguous block of memory? */
	puc = ( uint8_t * ) pxBlockToInsert;
	if( ( puc + pxBlockToInsert->xBlockSize ) == ( uint8_t * ) pxIterator->pxNextFreeBlock )
 800d906:	eb01 000e 	add.w	r0, r1, lr
 800d90a:	4282      	cmp	r2, r0
 800d90c:	d051      	beq.n	800d9b2 <pvPortMalloc+0x14e>

	/* If the block being inserted plugged a gab, so was merged with the block
	before and the block after, then it's pxNextFreeBlock pointer will have
	already been set, and should not be set here as that would make it point
	to itself. */
	if( pxIterator != pxBlockToInsert )
 800d90e:	428c      	cmp	r4, r1
			pxBlockToInsert->pxNextFreeBlock = pxIterator->pxNextFreeBlock->pxNextFreeBlock;
 800d910:	600a      	str	r2, [r1, #0]
	{
		pxIterator->pxNextFreeBlock = pxBlockToInsert;
 800d912:	bf18      	it	ne
 800d914:	6021      	strne	r1, [r4, #0]
					xFreeBytesRemaining -= pxBlock->xBlockSize;
 800d916:	6859      	ldr	r1, [r3, #4]
					if( xFreeBytesRemaining < xMinimumEverFreeBytesRemaining )
 800d918:	4a2c      	ldr	r2, [pc, #176]	; (800d9cc <pvPortMalloc+0x168>)
 800d91a:	6810      	ldr	r0, [r2, #0]
					xFreeBytesRemaining -= pxBlock->xBlockSize;
 800d91c:	1a6d      	subs	r5, r5, r1
					if( xFreeBytesRemaining < xMinimumEverFreeBytesRemaining )
 800d91e:	4285      	cmp	r5, r0
						xMinimumEverFreeBytesRemaining = xFreeBytesRemaining;
 800d920:	bf38      	it	cc
 800d922:	6015      	strcc	r5, [r2, #0]
					xNumberOfSuccessfulAllocations++;
 800d924:	4a2a      	ldr	r2, [pc, #168]	; (800d9d0 <pvPortMalloc+0x16c>)
					xFreeBytesRemaining -= pxBlock->xBlockSize;
 800d926:	f8cc 5000 	str.w	r5, [ip]
					pxBlock->xBlockSize |= xBlockAllocatedBit;
 800d92a:	4339      	orrs	r1, r7
					pxBlock->pxNextFreeBlock = NULL;
 800d92c:	2000      	movs	r0, #0
 800d92e:	e9c3 0100 	strd	r0, r1, [r3]
					xNumberOfSuccessfulAllocations++;
 800d932:	6813      	ldr	r3, [r2, #0]
 800d934:	3301      	adds	r3, #1
 800d936:	6013      	str	r3, [r2, #0]
	( void ) xTaskResumeAll();
 800d938:	f001 fee2 	bl	800f700 <xTaskResumeAll>
	configASSERT( ( ( ( size_t ) pvReturn ) & ( size_t ) portBYTE_ALIGNMENT_MASK ) == 0 );
 800d93c:	f018 0f07 	tst.w	r8, #7
 800d940:	d0d0      	beq.n	800d8e4 <pvPortMalloc+0x80>
 800d942:	f04f 0350 	mov.w	r3, #80	; 0x50
 800d946:	f383 8811 	msr	BASEPRI, r3
 800d94a:	f3bf 8f6f 	isb	sy
 800d94e:	f3bf 8f4f 	dsb	sy
 800d952:	e7fe      	b.n	800d952 <pvPortMalloc+0xee>
	uxAddress = ( size_t ) ucHeap;
 800d954:	4b1f      	ldr	r3, [pc, #124]	; (800d9d4 <pvPortMalloc+0x170>)
	if( ( uxAddress & portBYTE_ALIGNMENT_MASK ) != 0 )
 800d956:	075e      	lsls	r6, r3, #29
 800d958:	d118      	bne.n	800d98c <pvPortMalloc+0x128>
 800d95a:	f503 3680 	add.w	r6, r3, #65536	; 0x10000
 800d95e:	4619      	mov	r1, r3
	uxAddress -= xHeapStructSize;
 800d960:	3e08      	subs	r6, #8
	uxAddress &= ~( ( size_t ) portBYTE_ALIGNMENT_MASK );
 800d962:	f026 0607 	bic.w	r6, r6, #7
	pxEnd = ( void * ) uxAddress;
 800d966:	6016      	str	r6, [r2, #0]
	xMinimumEverFreeBytesRemaining = pxFirstFreeBlock->xBlockSize;
 800d968:	4a18      	ldr	r2, [pc, #96]	; (800d9cc <pvPortMalloc+0x168>)
	xStart.pxNextFreeBlock = ( void * ) pucAlignedHeap;
 800d96a:	4817      	ldr	r0, [pc, #92]	; (800d9c8 <pvPortMalloc+0x164>)
	xBlockAllocatedBit = ( ( size_t ) 1 ) << ( ( sizeof( size_t ) * heapBITS_PER_BYTE ) - 1 );
 800d96c:	4c15      	ldr	r4, [pc, #84]	; (800d9c4 <pvPortMalloc+0x160>)
	xStart.pxNextFreeBlock = ( void * ) pucAlignedHeap;
 800d96e:	6001      	str	r1, [r0, #0]
	pxFirstFreeBlock->xBlockSize = uxAddress - ( size_t ) pxFirstFreeBlock;
 800d970:	1af3      	subs	r3, r6, r3
	xMinimumEverFreeBytesRemaining = pxFirstFreeBlock->xBlockSize;
 800d972:	6013      	str	r3, [r2, #0]
	xFreeBytesRemaining = pxFirstFreeBlock->xBlockSize;
 800d974:	4a18      	ldr	r2, [pc, #96]	; (800d9d8 <pvPortMalloc+0x174>)
	xBlockAllocatedBit = ( ( size_t ) 1 ) << ( ( sizeof( size_t ) * heapBITS_PER_BYTE ) - 1 );
 800d976:	f04f 4700 	mov.w	r7, #2147483648	; 0x80000000
	xFreeBytesRemaining = pxFirstFreeBlock->xBlockSize;
 800d97a:	6013      	str	r3, [r2, #0]
	xStart.xBlockSize = ( size_t ) 0;
 800d97c:	2200      	movs	r2, #0
 800d97e:	6042      	str	r2, [r0, #4]
	xBlockAllocatedBit = ( ( size_t ) 1 ) << ( ( sizeof( size_t ) * heapBITS_PER_BYTE ) - 1 );
 800d980:	6027      	str	r7, [r4, #0]
	pxEnd->pxNextFreeBlock = NULL;
 800d982:	e9c6 2200 	strd	r2, r2, [r6]
	pxFirstFreeBlock->pxNextFreeBlock = pxEnd;
 800d986:	e9c1 6300 	strd	r6, r3, [r1]
}
 800d98a:	e776      	b.n	800d87a <pvPortMalloc+0x16>
		uxAddress += ( portBYTE_ALIGNMENT - 1 );
 800d98c:	1dd9      	adds	r1, r3, #7
	pucAlignedHeap = ( uint8_t * ) uxAddress;
 800d98e:	f021 0107 	bic.w	r1, r1, #7
 800d992:	f503 3680 	add.w	r6, r3, #65536	; 0x10000
		uxAddress &= ~( ( size_t ) portBYTE_ALIGNMENT_MASK );
 800d996:	460b      	mov	r3, r1
 800d998:	e7e2      	b.n	800d960 <pvPortMalloc+0xfc>
		pxIterator->xBlockSize += pxBlockToInsert->xBlockSize;
 800d99a:	6849      	ldr	r1, [r1, #4]
 800d99c:	eb00 0e01 	add.w	lr, r0, r1
	if( ( puc + pxBlockToInsert->xBlockSize ) == ( uint8_t * ) pxIterator->pxNextFreeBlock )
 800d9a0:	eb04 010e 	add.w	r1, r4, lr
 800d9a4:	428a      	cmp	r2, r1
		pxIterator->xBlockSize += pxBlockToInsert->xBlockSize;
 800d9a6:	f8c4 e004 	str.w	lr, [r4, #4]
	if( ( puc + pxBlockToInsert->xBlockSize ) == ( uint8_t * ) pxIterator->pxNextFreeBlock )
 800d9aa:	d001      	beq.n	800d9b0 <pvPortMalloc+0x14c>
			pxBlockToInsert->pxNextFreeBlock = pxIterator->pxNextFreeBlock->pxNextFreeBlock;
 800d9ac:	6022      	str	r2, [r4, #0]
	if( pxIterator != pxBlockToInsert )
 800d9ae:	e7b2      	b.n	800d916 <pvPortMalloc+0xb2>
	if( ( puc + pxBlockToInsert->xBlockSize ) == ( uint8_t * ) pxIterator->pxNextFreeBlock )
 800d9b0:	4621      	mov	r1, r4
		if( pxIterator->pxNextFreeBlock != pxEnd )
 800d9b2:	42b2      	cmp	r2, r6
 800d9b4:	d0ab      	beq.n	800d90e <pvPortMalloc+0xaa>
			pxBlockToInsert->xBlockSize += pxIterator->pxNextFreeBlock->xBlockSize;
 800d9b6:	6850      	ldr	r0, [r2, #4]
			pxBlockToInsert->pxNextFreeBlock = pxIterator->pxNextFreeBlock->pxNextFreeBlock;
 800d9b8:	6812      	ldr	r2, [r2, #0]
			pxBlockToInsert->xBlockSize += pxIterator->pxNextFreeBlock->xBlockSize;
 800d9ba:	4470      	add	r0, lr
 800d9bc:	6048      	str	r0, [r1, #4]
			pxBlockToInsert->pxNextFreeBlock = pxIterator->pxNextFreeBlock->pxNextFreeBlock;
 800d9be:	e7a6      	b.n	800d90e <pvPortMalloc+0xaa>
 800d9c0:	20003180 	.word	0x20003180
 800d9c4:	20013184 	.word	0x20013184
 800d9c8:	20013198 	.word	0x20013198
 800d9cc:	2001318c 	.word	0x2001318c
 800d9d0:	20013190 	.word	0x20013190
 800d9d4:	20003184 	.word	0x20003184
 800d9d8:	20013188 	.word	0x20013188

0800d9dc <vPortFree>:
	if( pv != NULL )
 800d9dc:	b1d0      	cbz	r0, 800da14 <vPortFree+0x38>
		configASSERT( ( pxLink->xBlockSize & xBlockAllocatedBit ) != 0 );
 800d9de:	4a2c      	ldr	r2, [pc, #176]	; (800da90 <vPortFree+0xb4>)
 800d9e0:	f850 3c04 	ldr.w	r3, [r0, #-4]
 800d9e4:	6812      	ldr	r2, [r2, #0]
 800d9e6:	4213      	tst	r3, r2
 800d9e8:	d00b      	beq.n	800da02 <vPortFree+0x26>
		configASSERT( pxLink->pxNextFreeBlock == NULL );
 800d9ea:	f850 1c08 	ldr.w	r1, [r0, #-8]
 800d9ee:	b191      	cbz	r1, 800da16 <vPortFree+0x3a>
 800d9f0:	f04f 0350 	mov.w	r3, #80	; 0x50
 800d9f4:	f383 8811 	msr	BASEPRI, r3
 800d9f8:	f3bf 8f6f 	isb	sy
 800d9fc:	f3bf 8f4f 	dsb	sy
 800da00:	e7fe      	b.n	800da00 <vPortFree+0x24>
 800da02:	f04f 0350 	mov.w	r3, #80	; 0x50
 800da06:	f383 8811 	msr	BASEPRI, r3
 800da0a:	f3bf 8f6f 	isb	sy
 800da0e:	f3bf 8f4f 	dsb	sy
		configASSERT( ( pxLink->xBlockSize & xBlockAllocatedBit ) != 0 );
 800da12:	e7fe      	b.n	800da12 <vPortFree+0x36>
 800da14:	4770      	bx	lr
{
 800da16:	b510      	push	{r4, lr}
				pxLink->xBlockSize &= ~xBlockAllocatedBit;
 800da18:	ea23 0302 	bic.w	r3, r3, r2
{
 800da1c:	b082      	sub	sp, #8
				pxLink->xBlockSize &= ~xBlockAllocatedBit;
 800da1e:	f840 3c04 	str.w	r3, [r0, #-4]
					xFreeBytesRemaining += pxLink->xBlockSize;
 800da22:	4c1c      	ldr	r4, [pc, #112]	; (800da94 <vPortFree+0xb8>)
				pxLink->xBlockSize &= ~xBlockAllocatedBit;
 800da24:	9001      	str	r0, [sp, #4]
				vTaskSuspendAll();
 800da26:	f001 fe63 	bl	800f6f0 <vTaskSuspendAll>
					xFreeBytesRemaining += pxLink->xBlockSize;
 800da2a:	9801      	ldr	r0, [sp, #4]
 800da2c:	6822      	ldr	r2, [r4, #0]
 800da2e:	f850 1c04 	ldr.w	r1, [r0, #-4]
	for( pxIterator = &xStart; pxIterator->pxNextFreeBlock < pxBlockToInsert; pxIterator = pxIterator->pxNextFreeBlock )
 800da32:	4b19      	ldr	r3, [pc, #100]	; (800da98 <vPortFree+0xbc>)
					xFreeBytesRemaining += pxLink->xBlockSize;
 800da34:	440a      	add	r2, r1
		puc -= xHeapStructSize;
 800da36:	3808      	subs	r0, #8
					xFreeBytesRemaining += pxLink->xBlockSize;
 800da38:	6022      	str	r2, [r4, #0]
	for( pxIterator = &xStart; pxIterator->pxNextFreeBlock < pxBlockToInsert; pxIterator = pxIterator->pxNextFreeBlock )
 800da3a:	461a      	mov	r2, r3
 800da3c:	681b      	ldr	r3, [r3, #0]
 800da3e:	4298      	cmp	r0, r3
 800da40:	d8fb      	bhi.n	800da3a <vPortFree+0x5e>
	if( ( puc + pxIterator->xBlockSize ) == ( uint8_t * ) pxBlockToInsert )
 800da42:	6854      	ldr	r4, [r2, #4]
 800da44:	eb02 0e04 	add.w	lr, r2, r4
 800da48:	4570      	cmp	r0, lr
 800da4a:	d010      	beq.n	800da6e <vPortFree+0x92>
	if( ( puc + pxBlockToInsert->xBlockSize ) == ( uint8_t * ) pxIterator->pxNextFreeBlock )
 800da4c:	eb00 0c01 	add.w	ip, r0, r1
 800da50:	4563      	cmp	r3, ip
 800da52:	d014      	beq.n	800da7e <vPortFree+0xa2>
	if( pxIterator != pxBlockToInsert )
 800da54:	4282      	cmp	r2, r0
			pxBlockToInsert->pxNextFreeBlock = pxIterator->pxNextFreeBlock->pxNextFreeBlock;
 800da56:	6003      	str	r3, [r0, #0]
		pxIterator->pxNextFreeBlock = pxBlockToInsert;
 800da58:	bf18      	it	ne
 800da5a:	6010      	strne	r0, [r2, #0]
					xNumberOfSuccessfulFrees++;
 800da5c:	4a0f      	ldr	r2, [pc, #60]	; (800da9c <vPortFree+0xc0>)
 800da5e:	6813      	ldr	r3, [r2, #0]
 800da60:	3301      	adds	r3, #1
 800da62:	6013      	str	r3, [r2, #0]
}
 800da64:	b002      	add	sp, #8
 800da66:	e8bd 4010 	ldmia.w	sp!, {r4, lr}
				( void ) xTaskResumeAll();
 800da6a:	f001 be49 	b.w	800f700 <xTaskResumeAll>
		pxIterator->xBlockSize += pxBlockToInsert->xBlockSize;
 800da6e:	4421      	add	r1, r4
	if( ( puc + pxBlockToInsert->xBlockSize ) == ( uint8_t * ) pxIterator->pxNextFreeBlock )
 800da70:	1850      	adds	r0, r2, r1
 800da72:	4283      	cmp	r3, r0
		pxIterator->xBlockSize += pxBlockToInsert->xBlockSize;
 800da74:	6051      	str	r1, [r2, #4]
	if( ( puc + pxBlockToInsert->xBlockSize ) == ( uint8_t * ) pxIterator->pxNextFreeBlock )
 800da76:	d001      	beq.n	800da7c <vPortFree+0xa0>
			pxBlockToInsert->pxNextFreeBlock = pxIterator->pxNextFreeBlock->pxNextFreeBlock;
 800da78:	6013      	str	r3, [r2, #0]
	if( pxIterator != pxBlockToInsert )
 800da7a:	e7ef      	b.n	800da5c <vPortFree+0x80>
	if( ( puc + pxBlockToInsert->xBlockSize ) == ( uint8_t * ) pxIterator->pxNextFreeBlock )
 800da7c:	4610      	mov	r0, r2
		if( pxIterator->pxNextFreeBlock != pxEnd )
 800da7e:	4c08      	ldr	r4, [pc, #32]	; (800daa0 <vPortFree+0xc4>)
 800da80:	6824      	ldr	r4, [r4, #0]
 800da82:	42a3      	cmp	r3, r4
 800da84:	d0e6      	beq.n	800da54 <vPortFree+0x78>
			pxBlockToInsert->pxNextFreeBlock = pxIterator->pxNextFreeBlock->pxNextFreeBlock;
 800da86:	e9d3 3400 	ldrd	r3, r4, [r3]
			pxBlockToInsert->xBlockSize += pxIterator->pxNextFreeBlock->xBlockSize;
 800da8a:	4421      	add	r1, r4
 800da8c:	6041      	str	r1, [r0, #4]
			pxBlockToInsert->pxNextFreeBlock = pxIterator->pxNextFreeBlock->pxNextFreeBlock;
 800da8e:	e7e1      	b.n	800da54 <vPortFree+0x78>
 800da90:	20013184 	.word	0x20013184
 800da94:	20013188 	.word	0x20013188
 800da98:	20013198 	.word	0x20013198
 800da9c:	20013194 	.word	0x20013194
 800daa0:	20003180 	.word	0x20003180

0800daa4 <vListInitialise>:
void vListInitialise( List_t * const pxList )
{
	/* The list structure contains a list item which is used to mark the
	end of the list.  To initialise the list the list end is inserted
	as the only list entry. */
	pxList->pxIndex = ( ListItem_t * ) &( pxList->xListEnd );			/*lint !e826 !e740 !e9087 The mini list structure is used as the list end to save RAM.  This is checked and valid. */
 800daa4:	f100 0308 	add.w	r3, r0, #8

	/* The list end value is the highest possible value in the list to
	ensure it remains at the end of the list. */
	pxList->xListEnd.xItemValue = portMAX_DELAY;
 800daa8:	f04f 31ff 	mov.w	r1, #4294967295
	/* The list end next and previous pointers point to itself so we know
	when the list is empty. */
	pxList->xListEnd.pxNext = ( ListItem_t * ) &( pxList->xListEnd );	/*lint !e826 !e740 !e9087 The mini list structure is used as the list end to save RAM.  This is checked and valid. */
	pxList->xListEnd.pxPrevious = ( ListItem_t * ) &( pxList->xListEnd );/*lint !e826 !e740 !e9087 The mini list structure is used as the list end to save RAM.  This is checked and valid. */

	pxList->uxNumberOfItems = ( UBaseType_t ) 0U;
 800daac:	2200      	movs	r2, #0
	pxList->xListEnd.xItemValue = portMAX_DELAY;
 800daae:	e9c0 3101 	strd	r3, r1, [r0, #4]
	pxList->xListEnd.pxPrevious = ( ListItem_t * ) &( pxList->xListEnd );/*lint !e826 !e740 !e9087 The mini list structure is used as the list end to save RAM.  This is checked and valid. */
 800dab2:	e9c0 3303 	strd	r3, r3, [r0, #12]
	pxList->uxNumberOfItems = ( UBaseType_t ) 0U;
 800dab6:	6002      	str	r2, [r0, #0]

	/* Write known values into the list if
	configUSE_LIST_DATA_INTEGRITY_CHECK_BYTES is set to 1. */
	listSET_LIST_INTEGRITY_CHECK_1_VALUE( pxList );
	listSET_LIST_INTEGRITY_CHECK_2_VALUE( pxList );
}
 800dab8:	4770      	bx	lr
 800daba:	bf00      	nop

0800dabc <vListInitialiseItem>:
/*-----------------------------------------------------------*/

void vListInitialiseItem( ListItem_t * const pxItem )
{
	/* Make sure the list item is not recorded as being on a list. */
	pxItem->pxContainer = NULL;
 800dabc:	2300      	movs	r3, #0
 800dabe:	6103      	str	r3, [r0, #16]

	/* Write known values into the list item if
	configUSE_LIST_DATA_INTEGRITY_CHECK_BYTES is set to 1. */
	listSET_FIRST_LIST_ITEM_INTEGRITY_CHECK_VALUE( pxItem );
	listSET_SECOND_LIST_ITEM_INTEGRITY_CHECK_VALUE( pxItem );
}
 800dac0:	4770      	bx	lr
 800dac2:	bf00      	nop

0800dac4 <vListInsertEnd>:
/*-----------------------------------------------------------*/

void vListInsertEnd( List_t * const pxList, ListItem_t * const pxNewListItem )
{
ListItem_t * const pxIndex = pxList->pxIndex;
 800dac4:	6843      	ldr	r3, [r0, #4]

	/* Insert a new list item into pxList, but rather than sort the list,
	makes the new list item the last item to be removed by a call to
	listGET_OWNER_OF_NEXT_ENTRY(). */
	pxNewListItem->pxNext = pxIndex;
	pxNewListItem->pxPrevious = pxIndex->pxPrevious;
 800dac6:	689a      	ldr	r2, [r3, #8]
 800dac8:	608a      	str	r2, [r1, #8]
	pxIndex->pxPrevious = pxNewListItem;

	/* Remember which list the item is in. */
	pxNewListItem->pxContainer = pxList;

	( pxList->uxNumberOfItems )++;
 800daca:	6802      	ldr	r2, [r0, #0]
{
 800dacc:	b410      	push	{r4}
	pxIndex->pxPrevious->pxNext = pxNewListItem;
 800dace:	689c      	ldr	r4, [r3, #8]
	pxNewListItem->pxNext = pxIndex;
 800dad0:	604b      	str	r3, [r1, #4]
	( pxList->uxNumberOfItems )++;
 800dad2:	3201      	adds	r2, #1
	pxIndex->pxPrevious->pxNext = pxNewListItem;
 800dad4:	6061      	str	r1, [r4, #4]
	pxIndex->pxPrevious = pxNewListItem;
 800dad6:	6099      	str	r1, [r3, #8]
}
 800dad8:	f85d 4b04 	ldr.w	r4, [sp], #4
	pxNewListItem->pxContainer = pxList;
 800dadc:	6108      	str	r0, [r1, #16]
	( pxList->uxNumberOfItems )++;
 800dade:	6002      	str	r2, [r0, #0]
}
 800dae0:	4770      	bx	lr
 800dae2:	bf00      	nop

0800dae4 <vListInsert>:
/*-----------------------------------------------------------*/

void vListInsert( List_t * const pxList, ListItem_t * const pxNewListItem )
{
 800dae4:	b430      	push	{r4, r5}
ListItem_t *pxIterator;
const TickType_t xValueOfInsertion = pxNewListItem->xItemValue;
 800dae6:	680d      	ldr	r5, [r1, #0]
	new list item should be placed after it.  This ensures that TCBs which are
	stored in ready lists (all of which have the same xItemValue value) get a
	share of the CPU.  However, if the xItemValue is the same as the back marker
	the iteration loop below will not end.  Therefore the value is checked
	first, and the algorithm slightly modified if necessary. */
	if( xValueOfInsertion == portMAX_DELAY )
 800dae8:	1c6b      	adds	r3, r5, #1
 800daea:	d010      	beq.n	800db0e <vListInsert+0x2a>
			4) Using a queue or semaphore before it has been initialised or
			   before the scheduler has been started (are interrupts firing
			   before vTaskStartScheduler() has been called?).
		**********************************************************************/

		for( pxIterator = ( ListItem_t * ) &( pxList->xListEnd ); pxIterator->pxNext->xItemValue <= xValueOfInsertion; pxIterator = pxIterator->pxNext ) /*lint !e826 !e740 !e9087 The mini list structure is used as the list end to save RAM.  This is checked and valid. *//*lint !e440 The iterator moves to a different value, not xValueOfInsertion. */
 800daec:	f100 0308 	add.w	r3, r0, #8
 800daf0:	461c      	mov	r4, r3
 800daf2:	685b      	ldr	r3, [r3, #4]
 800daf4:	681a      	ldr	r2, [r3, #0]
 800daf6:	42aa      	cmp	r2, r5
 800daf8:	d9fa      	bls.n	800daf0 <vListInsert+0xc>

	/* Remember which list the item is in.  This allows fast removal of the
	item later. */
	pxNewListItem->pxContainer = pxList;

	( pxList->uxNumberOfItems )++;
 800dafa:	6802      	ldr	r2, [r0, #0]
	pxNewListItem->pxNext = pxIterator->pxNext;
 800dafc:	604b      	str	r3, [r1, #4]
	( pxList->uxNumberOfItems )++;
 800dafe:	3201      	adds	r2, #1
	pxNewListItem->pxNext->pxPrevious = pxNewListItem;
 800db00:	6099      	str	r1, [r3, #8]
	pxNewListItem->pxPrevious = pxIterator;
 800db02:	608c      	str	r4, [r1, #8]
	pxIterator->pxNext = pxNewListItem;
 800db04:	6061      	str	r1, [r4, #4]
	pxNewListItem->pxContainer = pxList;
 800db06:	6108      	str	r0, [r1, #16]
}
 800db08:	bc30      	pop	{r4, r5}
	( pxList->uxNumberOfItems )++;
 800db0a:	6002      	str	r2, [r0, #0]
}
 800db0c:	4770      	bx	lr
		pxIterator = pxList->xListEnd.pxPrevious;
 800db0e:	6904      	ldr	r4, [r0, #16]
	pxNewListItem->pxNext = pxIterator->pxNext;
 800db10:	6863      	ldr	r3, [r4, #4]
 800db12:	e7f2      	b.n	800dafa <vListInsert+0x16>

0800db14 <uxListRemove>:

UBaseType_t uxListRemove( ListItem_t * const pxItemToRemove )
{
/* The list item knows which list it is in.  Obtain the list from the list
item. */
List_t * const pxList = pxItemToRemove->pxContainer;
 800db14:	6903      	ldr	r3, [r0, #16]
{
 800db16:	b410      	push	{r4}

	pxItemToRemove->pxNext->pxPrevious = pxItemToRemove->pxPrevious;
 800db18:	e9d0 1201 	ldrd	r1, r2, [r0, #4]

	/* Only used during decision coverage testing. */
	mtCOVERAGE_TEST_DELAY();

	/* Make sure the index is left pointing to a valid item. */
	if( pxList->pxIndex == pxItemToRemove )
 800db1c:	685c      	ldr	r4, [r3, #4]
	pxItemToRemove->pxNext->pxPrevious = pxItemToRemove->pxPrevious;
 800db1e:	608a      	str	r2, [r1, #8]
	if( pxList->pxIndex == pxItemToRemove )
 800db20:	4284      	cmp	r4, r0
	pxItemToRemove->pxPrevious->pxNext = pxItemToRemove->pxNext;
 800db22:	6051      	str	r1, [r2, #4]
	{
		pxList->pxIndex = pxItemToRemove->pxPrevious;
 800db24:	bf08      	it	eq
 800db26:	605a      	streq	r2, [r3, #4]
	{
		mtCOVERAGE_TEST_MARKER();
	}

	pxItemToRemove->pxContainer = NULL;
	( pxList->uxNumberOfItems )--;
 800db28:	681a      	ldr	r2, [r3, #0]

	return pxList->uxNumberOfItems;
}
 800db2a:	f85d 4b04 	ldr.w	r4, [sp], #4
	pxItemToRemove->pxContainer = NULL;
 800db2e:	2100      	movs	r1, #0
	( pxList->uxNumberOfItems )--;
 800db30:	3a01      	subs	r2, #1
	pxItemToRemove->pxContainer = NULL;
 800db32:	6101      	str	r1, [r0, #16]
	( pxList->uxNumberOfItems )--;
 800db34:	601a      	str	r2, [r3, #0]
	return pxList->uxNumberOfItems;
 800db36:	6818      	ldr	r0, [r3, #0]
}
 800db38:	4770      	bx	lr
 800db3a:	bf00      	nop

0800db3c <prvPortStartFirstTask>:
{
	/* Start the first task.  This also clears the bit that indicates the FPU is
	in use in case the FPU was used before the scheduler was started - which
	would otherwise result in the unnecessary leaving of space in the SVC stack
	for lazy saving of FPU registers. */
	__asm volatile(
 800db3c:	4808      	ldr	r0, [pc, #32]	; (800db60 <prvPortStartFirstTask+0x24>)
 800db3e:	6800      	ldr	r0, [r0, #0]
 800db40:	6800      	ldr	r0, [r0, #0]
 800db42:	f380 8808 	msr	MSP, r0
 800db46:	f04f 0000 	mov.w	r0, #0
 800db4a:	f380 8814 	msr	CONTROL, r0
 800db4e:	b662      	cpsie	i
 800db50:	b661      	cpsie	f
 800db52:	f3bf 8f4f 	dsb	sy
 800db56:	f3bf 8f6f 	isb	sy
 800db5a:	df00      	svc	0
 800db5c:	bf00      	nop
					" dsb					\n"
					" isb					\n"
					" svc 0					\n" /* System call to start first task. */
					" nop					\n"
				);
}
 800db5e:	0000      	.short	0x0000
 800db60:	e000ed08 	.word	0xe000ed08

0800db64 <vPortEnableVFP>:
/*-----------------------------------------------------------*/

/* This is a naked function. */
static void vPortEnableVFP( void )
{
	__asm volatile
 800db64:	f8df 000c 	ldr.w	r0, [pc, #12]	; 800db74 <vPortEnableVFP+0x10>
 800db68:	6801      	ldr	r1, [r0, #0]
 800db6a:	f441 0170 	orr.w	r1, r1, #15728640	; 0xf00000
 800db6e:	6001      	str	r1, [r0, #0]
 800db70:	4770      	bx	lr
		"								\n"
		"	orr r1, r1, #( 0xf << 20 )	\n" /* Enable CP10 and CP11 coprocessors, then save back. */
		"	str r1, [r0]				\n"
		"	bx r14						"
	);
}
 800db72:	0000      	.short	0x0000
 800db74:	e000ed88 	.word	0xe000ed88

0800db78 <prvTaskExitError>:
	configASSERT( uxCriticalNesting == ~0UL );
 800db78:	4b0e      	ldr	r3, [pc, #56]	; (800dbb4 <prvTaskExitError+0x3c>)
 800db7a:	681b      	ldr	r3, [r3, #0]
{
 800db7c:	b082      	sub	sp, #8
volatile uint32_t ulDummy = 0;
 800db7e:	2200      	movs	r2, #0
	configASSERT( uxCriticalNesting == ~0UL );
 800db80:	3301      	adds	r3, #1
volatile uint32_t ulDummy = 0;
 800db82:	9201      	str	r2, [sp, #4]
	configASSERT( uxCriticalNesting == ~0UL );
 800db84:	d008      	beq.n	800db98 <prvTaskExitError+0x20>
 800db86:	f04f 0350 	mov.w	r3, #80	; 0x50
 800db8a:	f383 8811 	msr	BASEPRI, r3
 800db8e:	f3bf 8f6f 	isb	sy
 800db92:	f3bf 8f4f 	dsb	sy
 800db96:	e7fe      	b.n	800db96 <prvTaskExitError+0x1e>
 800db98:	f04f 0350 	mov.w	r3, #80	; 0x50
 800db9c:	f383 8811 	msr	BASEPRI, r3
 800dba0:	f3bf 8f6f 	isb	sy
 800dba4:	f3bf 8f4f 	dsb	sy
	while( ulDummy == 0 )
 800dba8:	9b01      	ldr	r3, [sp, #4]
 800dbaa:	2b00      	cmp	r3, #0
 800dbac:	d0fc      	beq.n	800dba8 <prvTaskExitError+0x30>
}
 800dbae:	b002      	add	sp, #8
 800dbb0:	4770      	bx	lr
 800dbb2:	bf00      	nop
 800dbb4:	20000084 	.word	0x20000084

0800dbb8 <pxPortInitialiseStack>:
{
 800dbb8:	b410      	push	{r4}
	*pxTopOfStack = portINITIAL_XPSR;	/* xPSR */
 800dbba:	f04f 7380 	mov.w	r3, #16777216	; 0x1000000
	*pxTopOfStack = ( StackType_t ) portTASK_RETURN_ADDRESS;	/* LR */
 800dbbe:	4c07      	ldr	r4, [pc, #28]	; (800dbdc <pxPortInitialiseStack+0x24>)
	*pxTopOfStack = portINITIAL_XPSR;	/* xPSR */
 800dbc0:	f840 3c04 	str.w	r3, [r0, #-4]
	*pxTopOfStack = ( ( StackType_t ) pxCode ) & portSTART_ADDRESS_MASK;	/* PC */
 800dbc4:	f021 0101 	bic.w	r1, r1, #1
	*pxTopOfStack = portINITIAL_EXC_RETURN;
 800dbc8:	f06f 0302 	mvn.w	r3, #2
	*pxTopOfStack = ( StackType_t ) portTASK_RETURN_ADDRESS;	/* LR */
 800dbcc:	e940 4103 	strd	r4, r1, [r0, #-12]
	*pxTopOfStack = portINITIAL_EXC_RETURN;
 800dbd0:	e940 3209 	strd	r3, r2, [r0, #-36]	; 0x24
}
 800dbd4:	f85d 4b04 	ldr.w	r4, [sp], #4
 800dbd8:	3844      	subs	r0, #68	; 0x44
 800dbda:	4770      	bx	lr
 800dbdc:	0800db79 	.word	0x0800db79

0800dbe0 <SVC_Handler>:
	__asm volatile (
 800dbe0:	4b07      	ldr	r3, [pc, #28]	; (800dc00 <pxCurrentTCBConst2>)
 800dbe2:	6819      	ldr	r1, [r3, #0]
 800dbe4:	6808      	ldr	r0, [r1, #0]
 800dbe6:	e8b0 4ff0 	ldmia.w	r0!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 800dbea:	f380 8809 	msr	PSP, r0
 800dbee:	f3bf 8f6f 	isb	sy
 800dbf2:	f04f 0000 	mov.w	r0, #0
 800dbf6:	f380 8811 	msr	BASEPRI, r0
 800dbfa:	4770      	bx	lr
 800dbfc:	f3af 8000 	nop.w

0800dc00 <pxCurrentTCBConst2>:
 800dc00:	200131e8 	.word	0x200131e8

0800dc04 <vPortEnterCritical>:
 800dc04:	f04f 0350 	mov.w	r3, #80	; 0x50
 800dc08:	f383 8811 	msr	BASEPRI, r3
 800dc0c:	f3bf 8f6f 	isb	sy
 800dc10:	f3bf 8f4f 	dsb	sy
	uxCriticalNesting++;
 800dc14:	4a0b      	ldr	r2, [pc, #44]	; (800dc44 <vPortEnterCritical+0x40>)
 800dc16:	6813      	ldr	r3, [r2, #0]
 800dc18:	3301      	adds	r3, #1
	if( uxCriticalNesting == 1 )
 800dc1a:	2b01      	cmp	r3, #1
	uxCriticalNesting++;
 800dc1c:	6013      	str	r3, [r2, #0]
	if( uxCriticalNesting == 1 )
 800dc1e:	d000      	beq.n	800dc22 <vPortEnterCritical+0x1e>
}
 800dc20:	4770      	bx	lr
		configASSERT( ( portNVIC_INT_CTRL_REG & portVECTACTIVE_MASK ) == 0 );
 800dc22:	f04f 23e0 	mov.w	r3, #3758153728	; 0xe000e000
 800dc26:	f8d3 3d04 	ldr.w	r3, [r3, #3332]	; 0xd04
 800dc2a:	b2db      	uxtb	r3, r3
 800dc2c:	2b00      	cmp	r3, #0
 800dc2e:	d0f7      	beq.n	800dc20 <vPortEnterCritical+0x1c>
 800dc30:	f04f 0350 	mov.w	r3, #80	; 0x50
 800dc34:	f383 8811 	msr	BASEPRI, r3
 800dc38:	f3bf 8f6f 	isb	sy
 800dc3c:	f3bf 8f4f 	dsb	sy
 800dc40:	e7fe      	b.n	800dc40 <vPortEnterCritical+0x3c>
 800dc42:	bf00      	nop
 800dc44:	20000084 	.word	0x20000084

0800dc48 <vPortExitCritical>:
	configASSERT( uxCriticalNesting );
 800dc48:	4a08      	ldr	r2, [pc, #32]	; (800dc6c <vPortExitCritical+0x24>)
 800dc4a:	6813      	ldr	r3, [r2, #0]
 800dc4c:	b943      	cbnz	r3, 800dc60 <vPortExitCritical+0x18>
 800dc4e:	f04f 0350 	mov.w	r3, #80	; 0x50
 800dc52:	f383 8811 	msr	BASEPRI, r3
 800dc56:	f3bf 8f6f 	isb	sy
 800dc5a:	f3bf 8f4f 	dsb	sy
 800dc5e:	e7fe      	b.n	800dc5e <vPortExitCritical+0x16>
	uxCriticalNesting--;
 800dc60:	3b01      	subs	r3, #1
 800dc62:	6013      	str	r3, [r2, #0]
	if( uxCriticalNesting == 0 )
 800dc64:	b90b      	cbnz	r3, 800dc6a <vPortExitCritical+0x22>
}
/*-----------------------------------------------------------*/

portFORCE_INLINE static void vPortSetBASEPRI( uint32_t ulNewMaskValue )
{
	__asm volatile
 800dc66:	f383 8811 	msr	BASEPRI, r3
}
 800dc6a:	4770      	bx	lr
 800dc6c:	20000084 	.word	0x20000084

0800dc70 <PendSV_Handler>:
	__asm volatile
 800dc70:	f3ef 8009 	mrs	r0, PSP
 800dc74:	f3bf 8f6f 	isb	sy
 800dc78:	4b15      	ldr	r3, [pc, #84]	; (800dcd0 <pxCurrentTCBConst>)
 800dc7a:	681a      	ldr	r2, [r3, #0]
 800dc7c:	f01e 0f10 	tst.w	lr, #16
 800dc80:	bf08      	it	eq
 800dc82:	ed20 8a10 	vstmdbeq	r0!, {s16-s31}
 800dc86:	e920 4ff0 	stmdb	r0!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 800dc8a:	6010      	str	r0, [r2, #0]
 800dc8c:	e92d 0009 	stmdb	sp!, {r0, r3}
 800dc90:	f04f 0050 	mov.w	r0, #80	; 0x50
 800dc94:	f380 8811 	msr	BASEPRI, r0
 800dc98:	f3bf 8f4f 	dsb	sy
 800dc9c:	f3bf 8f6f 	isb	sy
 800dca0:	f001 fd54 	bl	800f74c <vTaskSwitchContext>
 800dca4:	f04f 0000 	mov.w	r0, #0
 800dca8:	f380 8811 	msr	BASEPRI, r0
 800dcac:	bc09      	pop	{r0, r3}
 800dcae:	6819      	ldr	r1, [r3, #0]
 800dcb0:	6808      	ldr	r0, [r1, #0]
 800dcb2:	e8b0 4ff0 	ldmia.w	r0!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 800dcb6:	f01e 0f10 	tst.w	lr, #16
 800dcba:	bf08      	it	eq
 800dcbc:	ecb0 8a10 	vldmiaeq	r0!, {s16-s31}
 800dcc0:	f380 8809 	msr	PSP, r0
 800dcc4:	f3bf 8f6f 	isb	sy
 800dcc8:	4770      	bx	lr
 800dcca:	bf00      	nop
 800dccc:	f3af 8000 	nop.w

0800dcd0 <pxCurrentTCBConst>:
 800dcd0:	200131e8 	.word	0x200131e8

0800dcd4 <xPortSysTickHandler>:
{
 800dcd4:	b508      	push	{r3, lr}
	__asm volatile
 800dcd6:	f04f 0350 	mov.w	r3, #80	; 0x50
 800dcda:	f383 8811 	msr	BASEPRI, r3
 800dcde:	f3bf 8f6f 	isb	sy
 800dce2:	f3bf 8f4f 	dsb	sy
		if( xTaskIncrementTick() != pdFALSE )
 800dce6:	f001 fd21 	bl	800f72c <xTaskIncrementTick>
 800dcea:	b128      	cbz	r0, 800dcf8 <xPortSysTickHandler+0x24>
			portNVIC_INT_CTRL_REG = portNVIC_PENDSVSET_BIT;
 800dcec:	f04f 23e0 	mov.w	r3, #3758153728	; 0xe000e000
 800dcf0:	f04f 5280 	mov.w	r2, #268435456	; 0x10000000
 800dcf4:	f8c3 2d04 	str.w	r2, [r3, #3332]	; 0xd04
	__asm volatile
 800dcf8:	2300      	movs	r3, #0
 800dcfa:	f383 8811 	msr	BASEPRI, r3
}
 800dcfe:	bd08      	pop	{r3, pc}

0800dd00 <vPortSetupTimerInterrupt>:
	portNVIC_SYSTICK_CTRL_REG = 0UL;
 800dd00:	f04f 22e0 	mov.w	r2, #3758153728	; 0xe000e000
 800dd04:	2300      	movs	r3, #0
	portNVIC_SYSTICK_LOAD_REG = ( configSYSTICK_CLOCK_HZ / configTICK_RATE_HZ ) - 1UL;
 800dd06:	4906      	ldr	r1, [pc, #24]	; (800dd20 <vPortSetupTimerInterrupt+0x20>)
	portNVIC_SYSTICK_CTRL_REG = 0UL;
 800dd08:	6113      	str	r3, [r2, #16]
	portNVIC_SYSTICK_CURRENT_VALUE_REG = 0UL;
 800dd0a:	6193      	str	r3, [r2, #24]
	portNVIC_SYSTICK_LOAD_REG = ( configSYSTICK_CLOCK_HZ / configTICK_RATE_HZ ) - 1UL;
 800dd0c:	680b      	ldr	r3, [r1, #0]
 800dd0e:	4905      	ldr	r1, [pc, #20]	; (800dd24 <vPortSetupTimerInterrupt+0x24>)
 800dd10:	fba1 1303 	umull	r1, r3, r1, r3
 800dd14:	099b      	lsrs	r3, r3, #6
	portNVIC_SYSTICK_CTRL_REG = ( portNVIC_SYSTICK_CLK_BIT | portNVIC_SYSTICK_INT_BIT | portNVIC_SYSTICK_ENABLE_BIT );
 800dd16:	2007      	movs	r0, #7
	portNVIC_SYSTICK_LOAD_REG = ( configSYSTICK_CLOCK_HZ / configTICK_RATE_HZ ) - 1UL;
 800dd18:	3b01      	subs	r3, #1
 800dd1a:	6153      	str	r3, [r2, #20]
	portNVIC_SYSTICK_CTRL_REG = ( portNVIC_SYSTICK_CLK_BIT | portNVIC_SYSTICK_INT_BIT | portNVIC_SYSTICK_ENABLE_BIT );
 800dd1c:	6110      	str	r0, [r2, #16]
}
 800dd1e:	4770      	bx	lr
 800dd20:	20000078 	.word	0x20000078
 800dd24:	10624dd3 	.word	0x10624dd3

0800dd28 <xPortStartScheduler>:
	configASSERT( portCPUID != portCORTEX_M7_r0p1_ID );
 800dd28:	f04f 23e0 	mov.w	r3, #3758153728	; 0xe000e000
 800dd2c:	4a49      	ldr	r2, [pc, #292]	; (800de54 <xPortStartScheduler+0x12c>)
 800dd2e:	f8d3 1d00 	ldr.w	r1, [r3, #3328]	; 0xd00
 800dd32:	4291      	cmp	r1, r2
 800dd34:	d043      	beq.n	800ddbe <xPortStartScheduler+0x96>
	configASSERT( portCPUID != portCORTEX_M7_r0p0_ID );
 800dd36:	f8d3 2d00 	ldr.w	r2, [r3, #3328]	; 0xd00
 800dd3a:	4b47      	ldr	r3, [pc, #284]	; (800de58 <xPortStartScheduler+0x130>)
 800dd3c:	429a      	cmp	r2, r3
 800dd3e:	d035      	beq.n	800ddac <xPortStartScheduler+0x84>
{
 800dd40:	b570      	push	{r4, r5, r6, lr}
		ulOriginalPriority = *pucFirstUserPriorityRegister;
 800dd42:	4b46      	ldr	r3, [pc, #280]	; (800de5c <xPortStartScheduler+0x134>)
		ucMaxSysCallPriority = configMAX_SYSCALL_INTERRUPT_PRIORITY & ucMaxPriorityValue;
 800dd44:	4846      	ldr	r0, [pc, #280]	; (800de60 <xPortStartScheduler+0x138>)
		ulOriginalPriority = *pucFirstUserPriorityRegister;
 800dd46:	781a      	ldrb	r2, [r3, #0]
		ulMaxPRIGROUPValue = portMAX_PRIGROUP_BITS;
 800dd48:	4c46      	ldr	r4, [pc, #280]	; (800de64 <xPortStartScheduler+0x13c>)
{
 800dd4a:	b084      	sub	sp, #16
		*pucFirstUserPriorityRegister = portMAX_8_BIT_VALUE;
 800dd4c:	21ff      	movs	r1, #255	; 0xff
		ulOriginalPriority = *pucFirstUserPriorityRegister;
 800dd4e:	b2d2      	uxtb	r2, r2
 800dd50:	9202      	str	r2, [sp, #8]
		*pucFirstUserPriorityRegister = portMAX_8_BIT_VALUE;
 800dd52:	7019      	strb	r1, [r3, #0]
		ucMaxPriorityValue = *pucFirstUserPriorityRegister;
 800dd54:	781b      	ldrb	r3, [r3, #0]
 800dd56:	b2db      	uxtb	r3, r3
 800dd58:	f88d 3007 	strb.w	r3, [sp, #7]
		ucMaxSysCallPriority = configMAX_SYSCALL_INTERRUPT_PRIORITY & ucMaxPriorityValue;
 800dd5c:	f89d 3007 	ldrb.w	r3, [sp, #7]
		while( ( ucMaxPriorityValue & portTOP_BIT_OF_BYTE ) == portTOP_BIT_OF_BYTE )
 800dd60:	f89d 2007 	ldrb.w	r2, [sp, #7]
		ucMaxSysCallPriority = configMAX_SYSCALL_INTERRUPT_PRIORITY & ucMaxPriorityValue;
 800dd64:	f003 0350 	and.w	r3, r3, #80	; 0x50
		ulMaxPRIGROUPValue = portMAX_PRIGROUP_BITS;
 800dd68:	2107      	movs	r1, #7
		ucMaxSysCallPriority = configMAX_SYSCALL_INTERRUPT_PRIORITY & ucMaxPriorityValue;
 800dd6a:	7003      	strb	r3, [r0, #0]
		while( ( ucMaxPriorityValue & portTOP_BIT_OF_BYTE ) == portTOP_BIT_OF_BYTE )
 800dd6c:	0610      	lsls	r0, r2, #24
		ulMaxPRIGROUPValue = portMAX_PRIGROUP_BITS;
 800dd6e:	6021      	str	r1, [r4, #0]
		while( ( ucMaxPriorityValue & portTOP_BIT_OF_BYTE ) == portTOP_BIT_OF_BYTE )
 800dd70:	bf48      	it	mi
 800dd72:	2206      	movmi	r2, #6
 800dd74:	d511      	bpl.n	800dd9a <xPortStartScheduler+0x72>
			ucMaxPriorityValue <<= ( uint8_t ) 0x01;
 800dd76:	f89d 3007 	ldrb.w	r3, [sp, #7]
 800dd7a:	005b      	lsls	r3, r3, #1
 800dd7c:	b2db      	uxtb	r3, r3
 800dd7e:	f88d 3007 	strb.w	r3, [sp, #7]
		while( ( ucMaxPriorityValue & portTOP_BIT_OF_BYTE ) == portTOP_BIT_OF_BYTE )
 800dd82:	f89d 1007 	ldrb.w	r1, [sp, #7]
 800dd86:	0609      	lsls	r1, r1, #24
 800dd88:	4610      	mov	r0, r2
 800dd8a:	f102 32ff 	add.w	r2, r2, #4294967295
 800dd8e:	d4f2      	bmi.n	800dd76 <xPortStartScheduler+0x4e>
			configASSERT( ( portMAX_PRIGROUP_BITS - ulMaxPRIGROUPValue ) == configPRIO_BITS );
 800dd90:	2803      	cmp	r0, #3
 800dd92:	6020      	str	r0, [r4, #0]
 800dd94:	f88d 3007 	strb.w	r3, [sp, #7]
 800dd98:	d01a      	beq.n	800ddd0 <xPortStartScheduler+0xa8>
	__asm volatile
 800dd9a:	f04f 0350 	mov.w	r3, #80	; 0x50
 800dd9e:	f383 8811 	msr	BASEPRI, r3
 800dda2:	f3bf 8f6f 	isb	sy
 800dda6:	f3bf 8f4f 	dsb	sy
 800ddaa:	e7fe      	b.n	800ddaa <xPortStartScheduler+0x82>
 800ddac:	f04f 0350 	mov.w	r3, #80	; 0x50
 800ddb0:	f383 8811 	msr	BASEPRI, r3
 800ddb4:	f3bf 8f6f 	isb	sy
 800ddb8:	f3bf 8f4f 	dsb	sy
	configASSERT( portCPUID != portCORTEX_M7_r0p0_ID );
 800ddbc:	e7fe      	b.n	800ddbc <xPortStartScheduler+0x94>
 800ddbe:	f04f 0350 	mov.w	r3, #80	; 0x50
 800ddc2:	f383 8811 	msr	BASEPRI, r3
 800ddc6:	f3bf 8f6f 	isb	sy
 800ddca:	f3bf 8f4f 	dsb	sy
	configASSERT( portCPUID != portCORTEX_M7_r0p1_ID );
 800ddce:	e7fe      	b.n	800ddce <xPortStartScheduler+0xa6>
		*pucFirstUserPriorityRegister = ulOriginalPriority;
 800ddd0:	9b02      	ldr	r3, [sp, #8]
 800ddd2:	4a22      	ldr	r2, [pc, #136]	; (800de5c <xPortStartScheduler+0x134>)
	portNVIC_SYSPRI2_REG |= portNVIC_PENDSV_PRI;
 800ddd4:	f04f 25e0 	mov.w	r5, #3758153728	; 0xe000e000
		ulMaxPRIGROUPValue &= portPRIORITY_GROUP_MASK;
 800ddd8:	f44f 7140 	mov.w	r1, #768	; 0x300
		*pucFirstUserPriorityRegister = ulOriginalPriority;
 800dddc:	b2db      	uxtb	r3, r3
		ulMaxPRIGROUPValue &= portPRIORITY_GROUP_MASK;
 800ddde:	6021      	str	r1, [r4, #0]
		*pucFirstUserPriorityRegister = ulOriginalPriority;
 800dde0:	7013      	strb	r3, [r2, #0]
	portNVIC_SYSPRI2_REG |= portNVIC_PENDSV_PRI;
 800dde2:	f8d5 3d20 	ldr.w	r3, [r5, #3360]	; 0xd20
	uxCriticalNesting = 0;
 800dde6:	4c20      	ldr	r4, [pc, #128]	; (800de68 <xPortStartScheduler+0x140>)
	portNVIC_SYSPRI2_REG |= portNVIC_PENDSV_PRI;
 800dde8:	f443 0370 	orr.w	r3, r3, #15728640	; 0xf00000
 800ddec:	f8c5 3d20 	str.w	r3, [r5, #3360]	; 0xd20
	portNVIC_SYSPRI2_REG |= portNVIC_SYSTICK_PRI;
 800ddf0:	f8d5 3d20 	ldr.w	r3, [r5, #3360]	; 0xd20
 800ddf4:	f043 4370 	orr.w	r3, r3, #4026531840	; 0xf0000000
 800ddf8:	f8c5 3d20 	str.w	r3, [r5, #3360]	; 0xd20
	uxCriticalNesting = 0;
 800ddfc:	2600      	movs	r6, #0
	vPortSetupTimerInterrupt();
 800ddfe:	f7ff ff7f 	bl	800dd00 <vPortSetupTimerInterrupt>
	uxCriticalNesting = 0;
 800de02:	6026      	str	r6, [r4, #0]
	vPortEnableVFP();
 800de04:	f7ff feae 	bl	800db64 <vPortEnableVFP>
	*( portFPCCR ) |= portASPEN_AND_LSPEN_BITS;
 800de08:	f8d5 3f34 	ldr.w	r3, [r5, #3892]	; 0xf34
 800de0c:	f043 4340 	orr.w	r3, r3, #3221225472	; 0xc0000000
 800de10:	f8c5 3f34 	str.w	r3, [r5, #3892]	; 0xf34
	prvPortStartFirstTask();
 800de14:	f7ff fe92 	bl	800db3c <prvPortStartFirstTask>
	vTaskSwitchContext();
 800de18:	f001 fc98 	bl	800f74c <vTaskSwitchContext>
	configASSERT( uxCriticalNesting == ~0UL );
 800de1c:	6823      	ldr	r3, [r4, #0]
volatile uint32_t ulDummy = 0;
 800de1e:	9603      	str	r6, [sp, #12]
	configASSERT( uxCriticalNesting == ~0UL );
 800de20:	3301      	adds	r3, #1
 800de22:	d008      	beq.n	800de36 <xPortStartScheduler+0x10e>
 800de24:	f04f 0350 	mov.w	r3, #80	; 0x50
 800de28:	f383 8811 	msr	BASEPRI, r3
 800de2c:	f3bf 8f6f 	isb	sy
 800de30:	f3bf 8f4f 	dsb	sy
 800de34:	e7fe      	b.n	800de34 <xPortStartScheduler+0x10c>
 800de36:	f04f 0350 	mov.w	r3, #80	; 0x50
 800de3a:	f383 8811 	msr	BASEPRI, r3
 800de3e:	f3bf 8f6f 	isb	sy
 800de42:	f3bf 8f4f 	dsb	sy
	while( ulDummy == 0 )
 800de46:	9b03      	ldr	r3, [sp, #12]
 800de48:	2b00      	cmp	r3, #0
 800de4a:	d0fc      	beq.n	800de46 <xPortStartScheduler+0x11e>
}
 800de4c:	2000      	movs	r0, #0
 800de4e:	b004      	add	sp, #16
 800de50:	bd70      	pop	{r4, r5, r6, pc}
 800de52:	bf00      	nop
 800de54:	410fc271 	.word	0x410fc271
 800de58:	410fc270 	.word	0x410fc270
 800de5c:	e000e400 	.word	0xe000e400
 800de60:	200131a0 	.word	0x200131a0
 800de64:	200131a4 	.word	0x200131a4
 800de68:	20000084 	.word	0x20000084

0800de6c <vPortValidateInterruptPriority>:
	{
	uint32_t ulCurrentInterrupt;
	uint8_t ucCurrentPriority;

		/* Obtain the number of the currently executing interrupt. */
		__asm volatile( "mrs %0, ipsr" : "=r"( ulCurrentInterrupt ) :: "memory" );
 800de6c:	f3ef 8305 	mrs	r3, IPSR

		/* Is the interrupt number a user defined interrupt? */
		if( ulCurrentInterrupt >= portFIRST_USER_INTERRUPT_NUMBER )
 800de70:	2b0f      	cmp	r3, #15
 800de72:	d90e      	bls.n	800de92 <vPortValidateInterruptPriority+0x26>
		{
			/* Look up the interrupt's priority. */
			ucCurrentPriority = pcInterruptPriorityRegisters[ ulCurrentInterrupt ];
 800de74:	4911      	ldr	r1, [pc, #68]	; (800debc <vPortValidateInterruptPriority+0x50>)
			interrupt entry is as fast and simple as possible.

			The following links provide detailed information:
			http://www.freertos.org/RTOS-Cortex-M3-M4.html
			http://www.freertos.org/FAQHelp.html */
			configASSERT( ucCurrentPriority >= ucMaxSysCallPriority );
 800de76:	4a12      	ldr	r2, [pc, #72]	; (800dec0 <vPortValidateInterruptPriority+0x54>)
			ucCurrentPriority = pcInterruptPriorityRegisters[ ulCurrentInterrupt ];
 800de78:	5c5b      	ldrb	r3, [r3, r1]
			configASSERT( ucCurrentPriority >= ucMaxSysCallPriority );
 800de7a:	7812      	ldrb	r2, [r2, #0]
 800de7c:	429a      	cmp	r2, r3
 800de7e:	d908      	bls.n	800de92 <vPortValidateInterruptPriority+0x26>
 800de80:	f04f 0350 	mov.w	r3, #80	; 0x50
 800de84:	f383 8811 	msr	BASEPRI, r3
 800de88:	f3bf 8f6f 	isb	sy
 800de8c:	f3bf 8f4f 	dsb	sy
 800de90:	e7fe      	b.n	800de90 <vPortValidateInterruptPriority+0x24>
		configuration then the correct setting can be achieved on all Cortex-M
		devices by calling NVIC_SetPriorityGrouping( 0 ); before starting the
		scheduler.  Note however that some vendor specific peripheral libraries
		assume a non-zero priority group setting, in which cases using a value
		of zero will result in unpredictable behaviour. */
		configASSERT( ( portAIRCR_REG & portPRIORITY_GROUP_MASK ) <= ulMaxPRIGROUPValue );
 800de92:	f04f 23e0 	mov.w	r3, #3758153728	; 0xe000e000
 800de96:	4a0b      	ldr	r2, [pc, #44]	; (800dec4 <vPortValidateInterruptPriority+0x58>)
 800de98:	f8d3 3d0c 	ldr.w	r3, [r3, #3340]	; 0xd0c
 800de9c:	6812      	ldr	r2, [r2, #0]
 800de9e:	f403 63e0 	and.w	r3, r3, #1792	; 0x700
 800dea2:	4293      	cmp	r3, r2
 800dea4:	d908      	bls.n	800deb8 <vPortValidateInterruptPriority+0x4c>
 800dea6:	f04f 0350 	mov.w	r3, #80	; 0x50
 800deaa:	f383 8811 	msr	BASEPRI, r3
 800deae:	f3bf 8f6f 	isb	sy
 800deb2:	f3bf 8f4f 	dsb	sy
 800deb6:	e7fe      	b.n	800deb6 <vPortValidateInterruptPriority+0x4a>
	}
 800deb8:	4770      	bx	lr
 800deba:	bf00      	nop
 800debc:	e000e3f0 	.word	0xe000e3f0
 800dec0:	200131a0 	.word	0x200131a0
 800dec4:	200131a4 	.word	0x200131a4

0800dec8 <prvCopyDataToQueue>:

#endif /* configUSE_MUTEXES */
/*-----------------------------------------------------------*/

static BaseType_t prvCopyDataToQueue( Queue_t * const pxQueue, const void *pvItemToQueue, const BaseType_t xPosition )
{
 800dec8:	b570      	push	{r4, r5, r6, lr}
 800deca:	4604      	mov	r4, r0

	/* This function is called from a critical section. */

	uxMessagesWaiting = pxQueue->uxMessagesWaiting;

	if( pxQueue->uxItemSize == ( UBaseType_t ) 0 )
 800decc:	6c00      	ldr	r0, [r0, #64]	; 0x40
	uxMessagesWaiting = pxQueue->uxMessagesWaiting;
 800dece:	6ba6      	ldr	r6, [r4, #56]	; 0x38
	if( pxQueue->uxItemSize == ( UBaseType_t ) 0 )
 800ded0:	b920      	cbnz	r0, 800dedc <prvCopyDataToQueue+0x14>
	{
		#if ( configUSE_MUTEXES == 1 )
		{
			if( pxQueue->uxQueueType == queueQUEUE_IS_MUTEX )
 800ded2:	6825      	ldr	r5, [r4, #0]
 800ded4:	b34d      	cbz	r5, 800df2a <prvCopyDataToQueue+0x62>
		{
			mtCOVERAGE_TEST_MARKER();
		}
	}

	pxQueue->uxMessagesWaiting = uxMessagesWaiting + ( UBaseType_t ) 1;
 800ded6:	3601      	adds	r6, #1
 800ded8:	63a6      	str	r6, [r4, #56]	; 0x38

	return xReturn;
}
 800deda:	bd70      	pop	{r4, r5, r6, pc}
	else if( xPosition == queueSEND_TO_BACK )
 800dedc:	4615      	mov	r5, r2
		( void ) memcpy( ( void * ) pxQueue->pcWriteTo, pvItemToQueue, ( size_t ) pxQueue->uxItemSize ); /*lint !e961 !e418 !e9087 MISRA exception as the casts are only redundant for some ports, plus previous logic ensures a null pointer can only be passed to memcpy() if the copy size is 0.  Cast to void required by function signature and safe as no alignment requirement and copy length specified in bytes. */
 800dede:	4602      	mov	r2, r0
	else if( xPosition == queueSEND_TO_BACK )
 800dee0:	b97d      	cbnz	r5, 800df02 <prvCopyDataToQueue+0x3a>
		( void ) memcpy( ( void * ) pxQueue->pcWriteTo, pvItemToQueue, ( size_t ) pxQueue->uxItemSize ); /*lint !e961 !e418 !e9087 MISRA exception as the casts are only redundant for some ports, plus previous logic ensures a null pointer can only be passed to memcpy() if the copy size is 0.  Cast to void required by function signature and safe as no alignment requirement and copy length specified in bytes. */
 800dee2:	6860      	ldr	r0, [r4, #4]
 800dee4:	f01d fd67 	bl	802b9b6 <memcpy>
		pxQueue->pcWriteTo += pxQueue->uxItemSize; /*lint !e9016 Pointer arithmetic on char types ok, especially in this use case where it is the clearest way of conveying intent. */
 800dee8:	6863      	ldr	r3, [r4, #4]
 800deea:	6c22      	ldr	r2, [r4, #64]	; 0x40
 800deec:	4413      	add	r3, r2
		if( pxQueue->pcWriteTo >= pxQueue->u.xQueue.pcTail ) /*lint !e946 MISRA exception justified as comparison of pointers is the cleanest solution. */
 800deee:	68a2      	ldr	r2, [r4, #8]
		pxQueue->pcWriteTo += pxQueue->uxItemSize; /*lint !e9016 Pointer arithmetic on char types ok, especially in this use case where it is the clearest way of conveying intent. */
 800def0:	6063      	str	r3, [r4, #4]
		if( pxQueue->pcWriteTo >= pxQueue->u.xQueue.pcTail ) /*lint !e946 MISRA exception justified as comparison of pointers is the cleanest solution. */
 800def2:	4293      	cmp	r3, r2
			pxQueue->pcWriteTo = pxQueue->pcHead;
 800def4:	bf24      	itt	cs
 800def6:	6823      	ldrcs	r3, [r4, #0]
 800def8:	6063      	strcs	r3, [r4, #4]
	pxQueue->uxMessagesWaiting = uxMessagesWaiting + ( UBaseType_t ) 1;
 800defa:	3601      	adds	r6, #1
BaseType_t xReturn = pdFALSE;
 800defc:	4628      	mov	r0, r5
	pxQueue->uxMessagesWaiting = uxMessagesWaiting + ( UBaseType_t ) 1;
 800defe:	63a6      	str	r6, [r4, #56]	; 0x38
}
 800df00:	bd70      	pop	{r4, r5, r6, pc}
		( void ) memcpy( ( void * ) pxQueue->u.xQueue.pcReadFrom, pvItemToQueue, ( size_t ) pxQueue->uxItemSize ); /*lint !e961 !e9087 !e418 MISRA exception as the casts are only redundant for some ports.  Cast to void required by function signature and safe as no alignment requirement and copy length specified in bytes.  Assert checks null pointer only used when length is 0. */
 800df02:	68e0      	ldr	r0, [r4, #12]
 800df04:	f01d fd57 	bl	802b9b6 <memcpy>
		pxQueue->u.xQueue.pcReadFrom -= pxQueue->uxItemSize;
 800df08:	6c22      	ldr	r2, [r4, #64]	; 0x40
 800df0a:	68e3      	ldr	r3, [r4, #12]
 800df0c:	4251      	negs	r1, r2
 800df0e:	1a9b      	subs	r3, r3, r2
		if( pxQueue->u.xQueue.pcReadFrom < pxQueue->pcHead ) /*lint !e946 MISRA exception justified as comparison of pointers is the cleanest solution. */
 800df10:	6822      	ldr	r2, [r4, #0]
		pxQueue->u.xQueue.pcReadFrom -= pxQueue->uxItemSize;
 800df12:	60e3      	str	r3, [r4, #12]
		if( pxQueue->u.xQueue.pcReadFrom < pxQueue->pcHead ) /*lint !e946 MISRA exception justified as comparison of pointers is the cleanest solution. */
 800df14:	4293      	cmp	r3, r2
 800df16:	d202      	bcs.n	800df1e <prvCopyDataToQueue+0x56>
			pxQueue->u.xQueue.pcReadFrom = ( pxQueue->u.xQueue.pcTail - pxQueue->uxItemSize );
 800df18:	68a3      	ldr	r3, [r4, #8]
 800df1a:	440b      	add	r3, r1
 800df1c:	60e3      	str	r3, [r4, #12]
		if( xPosition == queueOVERWRITE )
 800df1e:	2d02      	cmp	r5, #2
 800df20:	d008      	beq.n	800df34 <prvCopyDataToQueue+0x6c>
	pxQueue->uxMessagesWaiting = uxMessagesWaiting + ( UBaseType_t ) 1;
 800df22:	3601      	adds	r6, #1
BaseType_t xReturn = pdFALSE;
 800df24:	2000      	movs	r0, #0
	pxQueue->uxMessagesWaiting = uxMessagesWaiting + ( UBaseType_t ) 1;
 800df26:	63a6      	str	r6, [r4, #56]	; 0x38
}
 800df28:	bd70      	pop	{r4, r5, r6, pc}
				xReturn = xTaskPriorityDisinherit( pxQueue->u.xSemaphore.xMutexHolder );
 800df2a:	68a0      	ldr	r0, [r4, #8]
 800df2c:	f001 fde0 	bl	800faf0 <xTaskPriorityDisinherit>
				pxQueue->u.xSemaphore.xMutexHolder = NULL;
 800df30:	60a5      	str	r5, [r4, #8]
 800df32:	e7d0      	b.n	800ded6 <prvCopyDataToQueue+0xe>
			if( uxMessagesWaiting > ( UBaseType_t ) 0 )
 800df34:	2e01      	cmp	r6, #1
 800df36:	bf38      	it	cc
 800df38:	2601      	movcc	r6, #1
BaseType_t xReturn = pdFALSE;
 800df3a:	2000      	movs	r0, #0
 800df3c:	e7cc      	b.n	800ded8 <prvCopyDataToQueue+0x10>
 800df3e:	bf00      	nop

0800df40 <xQueueGenericCreateStatic>:
	{
 800df40:	b530      	push	{r4, r5, lr}
 800df42:	b083      	sub	sp, #12
 800df44:	f89d 4018 	ldrb.w	r4, [sp, #24]
		configASSERT( uxQueueLength > ( UBaseType_t ) 0 );
 800df48:	b940      	cbnz	r0, 800df5c <xQueueGenericCreateStatic+0x1c>
 800df4a:	f04f 0350 	mov.w	r3, #80	; 0x50
 800df4e:	f383 8811 	msr	BASEPRI, r3
 800df52:	f3bf 8f6f 	isb	sy
 800df56:	f3bf 8f4f 	dsb	sy
 800df5a:	e7fe      	b.n	800df5a <xQueueGenericCreateStatic+0x1a>
		configASSERT( pxStaticQueue != NULL );
 800df5c:	461d      	mov	r5, r3
 800df5e:	b17b      	cbz	r3, 800df80 <xQueueGenericCreateStatic+0x40>
		configASSERT( !( ( pucQueueStorage != NULL ) && ( uxItemSize == 0 ) ) );
 800df60:	b302      	cbz	r2, 800dfa4 <xQueueGenericCreateStatic+0x64>
 800df62:	b1b1      	cbz	r1, 800df92 <xQueueGenericCreateStatic+0x52>
			volatile size_t xSize = sizeof( StaticQueue_t );
 800df64:	2350      	movs	r3, #80	; 0x50
 800df66:	9301      	str	r3, [sp, #4]
			configASSERT( xSize == sizeof( Queue_t ) );
 800df68:	9b01      	ldr	r3, [sp, #4]
 800df6a:	2b50      	cmp	r3, #80	; 0x50
 800df6c:	d023      	beq.n	800dfb6 <xQueueGenericCreateStatic+0x76>
 800df6e:	f04f 0350 	mov.w	r3, #80	; 0x50
 800df72:	f383 8811 	msr	BASEPRI, r3
 800df76:	f3bf 8f6f 	isb	sy
 800df7a:	f3bf 8f4f 	dsb	sy
 800df7e:	e7fe      	b.n	800df7e <xQueueGenericCreateStatic+0x3e>
 800df80:	f04f 0350 	mov.w	r3, #80	; 0x50
 800df84:	f383 8811 	msr	BASEPRI, r3
 800df88:	f3bf 8f6f 	isb	sy
 800df8c:	f3bf 8f4f 	dsb	sy
		configASSERT( pxStaticQueue != NULL );
 800df90:	e7fe      	b.n	800df90 <xQueueGenericCreateStatic+0x50>
 800df92:	f04f 0350 	mov.w	r3, #80	; 0x50
 800df96:	f383 8811 	msr	BASEPRI, r3
 800df9a:	f3bf 8f6f 	isb	sy
 800df9e:	f3bf 8f4f 	dsb	sy
		configASSERT( !( ( pucQueueStorage != NULL ) && ( uxItemSize == 0 ) ) );
 800dfa2:	e7fe      	b.n	800dfa2 <xQueueGenericCreateStatic+0x62>
		configASSERT( !( ( pucQueueStorage == NULL ) && ( uxItemSize != 0 ) ) );
 800dfa4:	bb89      	cbnz	r1, 800e00a <xQueueGenericCreateStatic+0xca>
			volatile size_t xSize = sizeof( StaticQueue_t );
 800dfa6:	2250      	movs	r2, #80	; 0x50
 800dfa8:	9201      	str	r2, [sp, #4]
			configASSERT( xSize == sizeof( Queue_t ) );
 800dfaa:	9a01      	ldr	r2, [sp, #4]
 800dfac:	2a50      	cmp	r2, #80	; 0x50
 800dfae:	d1de      	bne.n	800df6e <xQueueGenericCreateStatic+0x2e>
			( void ) xSize; /* Keeps lint quiet when configASSERT() is not defined. */
 800dfb0:	9a01      	ldr	r2, [sp, #4]
 800dfb2:	462a      	mov	r2, r5
 800dfb4:	e000      	b.n	800dfb8 <xQueueGenericCreateStatic+0x78>
 800dfb6:	9b01      	ldr	r3, [sp, #4]
	if( uxItemSize == ( UBaseType_t ) 0 )
 800dfb8:	602a      	str	r2, [r5, #0]
				pxNewQueue->ucStaticallyAllocated = pdTRUE;
 800dfba:	2201      	movs	r2, #1
	pxNewQueue->uxItemSize = uxItemSize;
 800dfbc:	e9c5 010f 	strd	r0, r1, [r5, #60]	; 0x3c
				pxNewQueue->ucStaticallyAllocated = pdTRUE;
 800dfc0:	f885 2046 	strb.w	r2, [r5, #70]	; 0x46
	taskENTER_CRITICAL();
 800dfc4:	f7ff fe1e 	bl	800dc04 <vPortEnterCritical>
		pxQueue->u.xQueue.pcTail = pxQueue->pcHead + ( pxQueue->uxLength * pxQueue->uxItemSize ); /*lint !e9016 Pointer arithmetic allowed on char types, especially when it assists conveying intent. */
 800dfc8:	e9d5 120f 	ldrd	r1, r2, [r5, #60]	; 0x3c
 800dfcc:	6828      	ldr	r0, [r5, #0]
		pxQueue->pcWriteTo = pxQueue->pcHead;
 800dfce:	6068      	str	r0, [r5, #4]
		pxQueue->u.xQueue.pcTail = pxQueue->pcHead + ( pxQueue->uxLength * pxQueue->uxItemSize ); /*lint !e9016 Pointer arithmetic allowed on char types, especially when it assists conveying intent. */
 800dfd0:	fb02 f101 	mul.w	r1, r2, r1
		pxQueue->u.xQueue.pcReadFrom = pxQueue->pcHead + ( ( pxQueue->uxLength - 1U ) * pxQueue->uxItemSize ); /*lint !e9016 Pointer arithmetic allowed on char types, especially when it assists conveying intent. */
 800dfd4:	1a8a      	subs	r2, r1, r2
		pxQueue->u.xQueue.pcTail = pxQueue->pcHead + ( pxQueue->uxLength * pxQueue->uxItemSize ); /*lint !e9016 Pointer arithmetic allowed on char types, especially when it assists conveying intent. */
 800dfd6:	4401      	add	r1, r0
 800dfd8:	60a9      	str	r1, [r5, #8]
		pxQueue->uxMessagesWaiting = ( UBaseType_t ) 0U;
 800dfda:	2100      	movs	r1, #0
		pxQueue->u.xQueue.pcReadFrom = pxQueue->pcHead + ( ( pxQueue->uxLength - 1U ) * pxQueue->uxItemSize ); /*lint !e9016 Pointer arithmetic allowed on char types, especially when it assists conveying intent. */
 800dfdc:	4402      	add	r2, r0
		pxQueue->uxMessagesWaiting = ( UBaseType_t ) 0U;
 800dfde:	63a9      	str	r1, [r5, #56]	; 0x38
		pxQueue->cRxLock = queueUNLOCKED;
 800dfe0:	21ff      	movs	r1, #255	; 0xff
 800dfe2:	f885 1044 	strb.w	r1, [r5, #68]	; 0x44
		pxQueue->u.xQueue.pcReadFrom = pxQueue->pcHead + ( ( pxQueue->uxLength - 1U ) * pxQueue->uxItemSize ); /*lint !e9016 Pointer arithmetic allowed on char types, especially when it assists conveying intent. */
 800dfe6:	60ea      	str	r2, [r5, #12]
		pxQueue->cTxLock = queueUNLOCKED;
 800dfe8:	f885 1045 	strb.w	r1, [r5, #69]	; 0x45
			vListInitialise( &( pxQueue->xTasksWaitingToSend ) );
 800dfec:	f105 0010 	add.w	r0, r5, #16
 800dff0:	f7ff fd58 	bl	800daa4 <vListInitialise>
			vListInitialise( &( pxQueue->xTasksWaitingToReceive ) );
 800dff4:	f105 0024 	add.w	r0, r5, #36	; 0x24
 800dff8:	f7ff fd54 	bl	800daa4 <vListInitialise>
	taskEXIT_CRITICAL();
 800dffc:	f7ff fe24 	bl	800dc48 <vPortExitCritical>
	}
 800e000:	4628      	mov	r0, r5
		pxNewQueue->ucQueueType = ucQueueType;
 800e002:	f885 404c 	strb.w	r4, [r5, #76]	; 0x4c
	}
 800e006:	b003      	add	sp, #12
 800e008:	bd30      	pop	{r4, r5, pc}
 800e00a:	f04f 0350 	mov.w	r3, #80	; 0x50
 800e00e:	f383 8811 	msr	BASEPRI, r3
 800e012:	f3bf 8f6f 	isb	sy
 800e016:	f3bf 8f4f 	dsb	sy
		configASSERT( !( ( pucQueueStorage == NULL ) && ( uxItemSize != 0 ) ) );
 800e01a:	e7fe      	b.n	800e01a <xQueueGenericCreateStatic+0xda>

0800e01c <xQueueGenericCreate>:
	{
 800e01c:	b5f8      	push	{r3, r4, r5, r6, r7, lr}
		configASSERT( uxQueueLength > ( UBaseType_t ) 0 );
 800e01e:	b940      	cbnz	r0, 800e032 <xQueueGenericCreate+0x16>
 800e020:	f04f 0350 	mov.w	r3, #80	; 0x50
 800e024:	f383 8811 	msr	BASEPRI, r3
 800e028:	f3bf 8f6f 	isb	sy
 800e02c:	f3bf 8f4f 	dsb	sy
 800e030:	e7fe      	b.n	800e030 <xQueueGenericCreate+0x14>
 800e032:	4605      	mov	r5, r0
		xQueueSizeInBytes = ( size_t ) ( uxQueueLength * uxItemSize ); /*lint !e961 MISRA exception as the casts are only redundant for some ports. */
 800e034:	fb01 f000 	mul.w	r0, r1, r0
		pxNewQueue = ( Queue_t * ) pvPortMalloc( sizeof( Queue_t ) + xQueueSizeInBytes ); /*lint !e9087 !e9079 see comment above. */
 800e038:	3050      	adds	r0, #80	; 0x50
 800e03a:	460e      	mov	r6, r1
 800e03c:	4617      	mov	r7, r2
 800e03e:	f7ff fc11 	bl	800d864 <pvPortMalloc>
		if( pxNewQueue != NULL )
 800e042:	4604      	mov	r4, r0
 800e044:	b340      	cbz	r0, 800e098 <xQueueGenericCreate+0x7c>
				pxNewQueue->ucStaticallyAllocated = pdFALSE;
 800e046:	2300      	movs	r3, #0
 800e048:	f880 3046 	strb.w	r3, [r0, #70]	; 0x46
	if( uxItemSize == ( UBaseType_t ) 0 )
 800e04c:	b336      	cbz	r6, 800e09c <xQueueGenericCreate+0x80>
			pucQueueStorage += sizeof( Queue_t ); /*lint !e9016 Pointer arithmetic allowed on char types, especially when it assists conveying intent. */
 800e04e:	f100 0350 	add.w	r3, r0, #80	; 0x50
		pxNewQueue->pcHead = ( int8_t * ) pucQueueStorage;
 800e052:	6023      	str	r3, [r4, #0]
	pxNewQueue->uxItemSize = uxItemSize;
 800e054:	e9c4 560f 	strd	r5, r6, [r4, #60]	; 0x3c
	taskENTER_CRITICAL();
 800e058:	f7ff fdd4 	bl	800dc04 <vPortEnterCritical>
		pxQueue->u.xQueue.pcTail = pxQueue->pcHead + ( pxQueue->uxLength * pxQueue->uxItemSize ); /*lint !e9016 Pointer arithmetic allowed on char types, especially when it assists conveying intent. */
 800e05c:	e9d4 230f 	ldrd	r2, r3, [r4, #60]	; 0x3c
 800e060:	6821      	ldr	r1, [r4, #0]
		pxQueue->pcWriteTo = pxQueue->pcHead;
 800e062:	6061      	str	r1, [r4, #4]
		pxQueue->u.xQueue.pcTail = pxQueue->pcHead + ( pxQueue->uxLength * pxQueue->uxItemSize ); /*lint !e9016 Pointer arithmetic allowed on char types, especially when it assists conveying intent. */
 800e064:	fb03 f202 	mul.w	r2, r3, r2
		pxQueue->u.xQueue.pcReadFrom = pxQueue->pcHead + ( ( pxQueue->uxLength - 1U ) * pxQueue->uxItemSize ); /*lint !e9016 Pointer arithmetic allowed on char types, especially when it assists conveying intent. */
 800e068:	1ad3      	subs	r3, r2, r3
		pxQueue->u.xQueue.pcTail = pxQueue->pcHead + ( pxQueue->uxLength * pxQueue->uxItemSize ); /*lint !e9016 Pointer arithmetic allowed on char types, especially when it assists conveying intent. */
 800e06a:	440a      	add	r2, r1
 800e06c:	60a2      	str	r2, [r4, #8]
		pxQueue->uxMessagesWaiting = ( UBaseType_t ) 0U;
 800e06e:	2200      	movs	r2, #0
		pxQueue->u.xQueue.pcReadFrom = pxQueue->pcHead + ( ( pxQueue->uxLength - 1U ) * pxQueue->uxItemSize ); /*lint !e9016 Pointer arithmetic allowed on char types, especially when it assists conveying intent. */
 800e070:	440b      	add	r3, r1
		pxQueue->uxMessagesWaiting = ( UBaseType_t ) 0U;
 800e072:	63a2      	str	r2, [r4, #56]	; 0x38
		pxQueue->cRxLock = queueUNLOCKED;
 800e074:	22ff      	movs	r2, #255	; 0xff
 800e076:	f884 2044 	strb.w	r2, [r4, #68]	; 0x44
		pxQueue->u.xQueue.pcReadFrom = pxQueue->pcHead + ( ( pxQueue->uxLength - 1U ) * pxQueue->uxItemSize ); /*lint !e9016 Pointer arithmetic allowed on char types, especially when it assists conveying intent. */
 800e07a:	60e3      	str	r3, [r4, #12]
		pxQueue->cTxLock = queueUNLOCKED;
 800e07c:	f884 2045 	strb.w	r2, [r4, #69]	; 0x45
			vListInitialise( &( pxQueue->xTasksWaitingToSend ) );
 800e080:	f104 0010 	add.w	r0, r4, #16
 800e084:	f7ff fd0e 	bl	800daa4 <vListInitialise>
			vListInitialise( &( pxQueue->xTasksWaitingToReceive ) );
 800e088:	f104 0024 	add.w	r0, r4, #36	; 0x24
 800e08c:	f7ff fd0a 	bl	800daa4 <vListInitialise>
	taskEXIT_CRITICAL();
 800e090:	f7ff fdda 	bl	800dc48 <vPortExitCritical>
		pxNewQueue->ucQueueType = ucQueueType;
 800e094:	f884 704c 	strb.w	r7, [r4, #76]	; 0x4c
	}
 800e098:	4620      	mov	r0, r4
 800e09a:	bdf8      	pop	{r3, r4, r5, r6, r7, pc}
 800e09c:	4603      	mov	r3, r0
 800e09e:	e7d8      	b.n	800e052 <xQueueGenericCreate+0x36>

0800e0a0 <xQueueCreateCountingSemaphoreStatic>:
		configASSERT( uxMaxCount != 0 );
 800e0a0:	b940      	cbnz	r0, 800e0b4 <xQueueCreateCountingSemaphoreStatic+0x14>
 800e0a2:	f04f 0350 	mov.w	r3, #80	; 0x50
 800e0a6:	f383 8811 	msr	BASEPRI, r3
 800e0aa:	f3bf 8f6f 	isb	sy
 800e0ae:	f3bf 8f4f 	dsb	sy
 800e0b2:	e7fe      	b.n	800e0b2 <xQueueCreateCountingSemaphoreStatic+0x12>
		configASSERT( uxInitialCount <= uxMaxCount );
 800e0b4:	4288      	cmp	r0, r1
 800e0b6:	d208      	bcs.n	800e0ca <xQueueCreateCountingSemaphoreStatic+0x2a>
 800e0b8:	f04f 0350 	mov.w	r3, #80	; 0x50
 800e0bc:	f383 8811 	msr	BASEPRI, r3
 800e0c0:	f3bf 8f6f 	isb	sy
 800e0c4:	f3bf 8f4f 	dsb	sy
 800e0c8:	e7fe      	b.n	800e0c8 <xQueueCreateCountingSemaphoreStatic+0x28>
	{
 800e0ca:	b530      	push	{r4, r5, lr}
 800e0cc:	4615      	mov	r5, r2
 800e0ce:	b085      	sub	sp, #20
		configASSERT( pxStaticQueue != NULL );
 800e0d0:	2a00      	cmp	r2, #0
 800e0d2:	d03c      	beq.n	800e14e <xQueueCreateCountingSemaphoreStatic+0xae>
			volatile size_t xSize = sizeof( StaticQueue_t );
 800e0d4:	2350      	movs	r3, #80	; 0x50
 800e0d6:	9303      	str	r3, [sp, #12]
			configASSERT( xSize == sizeof( Queue_t ) );
 800e0d8:	9b03      	ldr	r3, [sp, #12]
 800e0da:	2b50      	cmp	r3, #80	; 0x50
 800e0dc:	d008      	beq.n	800e0f0 <xQueueCreateCountingSemaphoreStatic+0x50>
 800e0de:	f04f 0350 	mov.w	r3, #80	; 0x50
 800e0e2:	f383 8811 	msr	BASEPRI, r3
 800e0e6:	f3bf 8f6f 	isb	sy
 800e0ea:	f3bf 8f4f 	dsb	sy
 800e0ee:	e7fe      	b.n	800e0ee <xQueueCreateCountingSemaphoreStatic+0x4e>
	pxNewQueue->uxItemSize = uxItemSize;
 800e0f0:	2400      	movs	r4, #0
				pxNewQueue->ucStaticallyAllocated = pdTRUE;
 800e0f2:	2301      	movs	r3, #1
 800e0f4:	f882 3046 	strb.w	r3, [r2, #70]	; 0x46
		pxNewQueue->pcHead = ( int8_t * ) pxNewQueue;
 800e0f8:	602a      	str	r2, [r5, #0]
	pxNewQueue->uxItemSize = uxItemSize;
 800e0fa:	e9c2 040f 	strd	r0, r4, [r2, #60]	; 0x3c
 800e0fe:	9101      	str	r1, [sp, #4]
			( void ) xSize; /* Keeps lint quiet when configASSERT() is not defined. */
 800e100:	9b03      	ldr	r3, [sp, #12]
	taskENTER_CRITICAL();
 800e102:	f7ff fd7f 	bl	800dc04 <vPortEnterCritical>
		pxQueue->u.xQueue.pcTail = pxQueue->pcHead + ( pxQueue->uxLength * pxQueue->uxItemSize ); /*lint !e9016 Pointer arithmetic allowed on char types, especially when it assists conveying intent. */
 800e106:	e9d5 030f 	ldrd	r0, r3, [r5, #60]	; 0x3c
 800e10a:	682a      	ldr	r2, [r5, #0]
		pxQueue->uxMessagesWaiting = ( UBaseType_t ) 0U;
 800e10c:	63ac      	str	r4, [r5, #56]	; 0x38
		pxQueue->u.xQueue.pcTail = pxQueue->pcHead + ( pxQueue->uxLength * pxQueue->uxItemSize ); /*lint !e9016 Pointer arithmetic allowed on char types, especially when it assists conveying intent. */
 800e10e:	fb03 f000 	mul.w	r0, r3, r0
		pxQueue->u.xQueue.pcReadFrom = pxQueue->pcHead + ( ( pxQueue->uxLength - 1U ) * pxQueue->uxItemSize ); /*lint !e9016 Pointer arithmetic allowed on char types, especially when it assists conveying intent. */
 800e112:	1ac3      	subs	r3, r0, r3
 800e114:	4413      	add	r3, r2
		pxQueue->u.xQueue.pcTail = pxQueue->pcHead + ( pxQueue->uxLength * pxQueue->uxItemSize ); /*lint !e9016 Pointer arithmetic allowed on char types, especially when it assists conveying intent. */
 800e116:	4410      	add	r0, r2
		pxQueue->cRxLock = queueUNLOCKED;
 800e118:	f04f 0eff 	mov.w	lr, #255	; 0xff
 800e11c:	f885 e044 	strb.w	lr, [r5, #68]	; 0x44
		pxQueue->u.xQueue.pcReadFrom = pxQueue->pcHead + ( ( pxQueue->uxLength - 1U ) * pxQueue->uxItemSize ); /*lint !e9016 Pointer arithmetic allowed on char types, especially when it assists conveying intent. */
 800e120:	60eb      	str	r3, [r5, #12]
		pxQueue->pcWriteTo = pxQueue->pcHead;
 800e122:	606a      	str	r2, [r5, #4]
		pxQueue->cTxLock = queueUNLOCKED;
 800e124:	f885 e045 	strb.w	lr, [r5, #69]	; 0x45
		pxQueue->u.xQueue.pcTail = pxQueue->pcHead + ( pxQueue->uxLength * pxQueue->uxItemSize ); /*lint !e9016 Pointer arithmetic allowed on char types, especially when it assists conveying intent. */
 800e128:	60a8      	str	r0, [r5, #8]
			vListInitialise( &( pxQueue->xTasksWaitingToSend ) );
 800e12a:	f105 0010 	add.w	r0, r5, #16
 800e12e:	f7ff fcb9 	bl	800daa4 <vListInitialise>
			vListInitialise( &( pxQueue->xTasksWaitingToReceive ) );
 800e132:	f105 0024 	add.w	r0, r5, #36	; 0x24
 800e136:	f7ff fcb5 	bl	800daa4 <vListInitialise>
	taskEXIT_CRITICAL();
 800e13a:	f7ff fd85 	bl	800dc48 <vPortExitCritical>
			( ( Queue_t * ) xHandle )->uxMessagesWaiting = uxInitialCount;
 800e13e:	9901      	ldr	r1, [sp, #4]
 800e140:	63a9      	str	r1, [r5, #56]	; 0x38
		pxNewQueue->ucQueueType = ucQueueType;
 800e142:	2302      	movs	r3, #2
	}
 800e144:	4628      	mov	r0, r5
		pxNewQueue->ucQueueType = ucQueueType;
 800e146:	f885 304c 	strb.w	r3, [r5, #76]	; 0x4c
	}
 800e14a:	b005      	add	sp, #20
 800e14c:	bd30      	pop	{r4, r5, pc}
 800e14e:	f04f 0350 	mov.w	r3, #80	; 0x50
 800e152:	f383 8811 	msr	BASEPRI, r3
 800e156:	f3bf 8f6f 	isb	sy
 800e15a:	f3bf 8f4f 	dsb	sy
		configASSERT( pxStaticQueue != NULL );
 800e15e:	e7fe      	b.n	800e15e <xQueueCreateCountingSemaphoreStatic+0xbe>

0800e160 <xQueueCreateCountingSemaphore>:
	{
 800e160:	b5f8      	push	{r3, r4, r5, r6, r7, lr}
		configASSERT( uxMaxCount != 0 );
 800e162:	b940      	cbnz	r0, 800e176 <xQueueCreateCountingSemaphore+0x16>
 800e164:	f04f 0350 	mov.w	r3, #80	; 0x50
 800e168:	f383 8811 	msr	BASEPRI, r3
 800e16c:	f3bf 8f6f 	isb	sy
 800e170:	f3bf 8f4f 	dsb	sy
 800e174:	e7fe      	b.n	800e174 <xQueueCreateCountingSemaphore+0x14>
		configASSERT( uxInitialCount <= uxMaxCount );
 800e176:	4288      	cmp	r0, r1
 800e178:	460e      	mov	r6, r1
 800e17a:	4604      	mov	r4, r0
 800e17c:	d208      	bcs.n	800e190 <xQueueCreateCountingSemaphore+0x30>
 800e17e:	f04f 0350 	mov.w	r3, #80	; 0x50
 800e182:	f383 8811 	msr	BASEPRI, r3
 800e186:	f3bf 8f6f 	isb	sy
 800e18a:	f3bf 8f4f 	dsb	sy
 800e18e:	e7fe      	b.n	800e18e <xQueueCreateCountingSemaphore+0x2e>
		pxNewQueue = ( Queue_t * ) pvPortMalloc( sizeof( Queue_t ) + xQueueSizeInBytes ); /*lint !e9087 !e9079 see comment above. */
 800e190:	2050      	movs	r0, #80	; 0x50
 800e192:	f7ff fb67 	bl	800d864 <pvPortMalloc>
		if( pxNewQueue != NULL )
 800e196:	4605      	mov	r5, r0
 800e198:	b330      	cbz	r0, 800e1e8 <xQueueCreateCountingSemaphore+0x88>
				pxNewQueue->ucStaticallyAllocated = pdFALSE;
 800e19a:	2700      	movs	r7, #0
	pxNewQueue->uxItemSize = uxItemSize;
 800e19c:	e9c0 470f 	strd	r4, r7, [r0, #60]	; 0x3c
				pxNewQueue->ucStaticallyAllocated = pdFALSE;
 800e1a0:	f880 7046 	strb.w	r7, [r0, #70]	; 0x46
		pxNewQueue->pcHead = ( int8_t * ) pxNewQueue;
 800e1a4:	6000      	str	r0, [r0, #0]
	taskENTER_CRITICAL();
 800e1a6:	f7ff fd2d 	bl	800dc04 <vPortEnterCritical>
		pxQueue->u.xQueue.pcTail = pxQueue->pcHead + ( pxQueue->uxLength * pxQueue->uxItemSize ); /*lint !e9016 Pointer arithmetic allowed on char types, especially when it assists conveying intent. */
 800e1aa:	e9d5 230f 	ldrd	r2, r3, [r5, #60]	; 0x3c
 800e1ae:	6829      	ldr	r1, [r5, #0]
		pxQueue->uxMessagesWaiting = ( UBaseType_t ) 0U;
 800e1b0:	63af      	str	r7, [r5, #56]	; 0x38
		pxQueue->u.xQueue.pcTail = pxQueue->pcHead + ( pxQueue->uxLength * pxQueue->uxItemSize ); /*lint !e9016 Pointer arithmetic allowed on char types, especially when it assists conveying intent. */
 800e1b2:	fb03 f202 	mul.w	r2, r3, r2
		pxQueue->u.xQueue.pcReadFrom = pxQueue->pcHead + ( ( pxQueue->uxLength - 1U ) * pxQueue->uxItemSize ); /*lint !e9016 Pointer arithmetic allowed on char types, especially when it assists conveying intent. */
 800e1b6:	1ad3      	subs	r3, r2, r3
		pxQueue->u.xQueue.pcTail = pxQueue->pcHead + ( pxQueue->uxLength * pxQueue->uxItemSize ); /*lint !e9016 Pointer arithmetic allowed on char types, especially when it assists conveying intent. */
 800e1b8:	440a      	add	r2, r1
		pxQueue->u.xQueue.pcReadFrom = pxQueue->pcHead + ( ( pxQueue->uxLength - 1U ) * pxQueue->uxItemSize ); /*lint !e9016 Pointer arithmetic allowed on char types, especially when it assists conveying intent. */
 800e1ba:	440b      	add	r3, r1
		pxQueue->u.xQueue.pcTail = pxQueue->pcHead + ( pxQueue->uxLength * pxQueue->uxItemSize ); /*lint !e9016 Pointer arithmetic allowed on char types, especially when it assists conveying intent. */
 800e1bc:	60aa      	str	r2, [r5, #8]
		pxQueue->cRxLock = queueUNLOCKED;
 800e1be:	22ff      	movs	r2, #255	; 0xff
 800e1c0:	f885 2044 	strb.w	r2, [r5, #68]	; 0x44
		pxQueue->u.xQueue.pcReadFrom = pxQueue->pcHead + ( ( pxQueue->uxLength - 1U ) * pxQueue->uxItemSize ); /*lint !e9016 Pointer arithmetic allowed on char types, especially when it assists conveying intent. */
 800e1c4:	60eb      	str	r3, [r5, #12]
		pxQueue->pcWriteTo = pxQueue->pcHead;
 800e1c6:	6069      	str	r1, [r5, #4]
		pxQueue->cTxLock = queueUNLOCKED;
 800e1c8:	f885 2045 	strb.w	r2, [r5, #69]	; 0x45
			vListInitialise( &( pxQueue->xTasksWaitingToSend ) );
 800e1cc:	f105 0010 	add.w	r0, r5, #16
 800e1d0:	f7ff fc68 	bl	800daa4 <vListInitialise>
			vListInitialise( &( pxQueue->xTasksWaitingToReceive ) );
 800e1d4:	f105 0024 	add.w	r0, r5, #36	; 0x24
 800e1d8:	f7ff fc64 	bl	800daa4 <vListInitialise>
	taskEXIT_CRITICAL();
 800e1dc:	f7ff fd34 	bl	800dc48 <vPortExitCritical>
		pxNewQueue->ucQueueType = ucQueueType;
 800e1e0:	2302      	movs	r3, #2
 800e1e2:	f885 304c 	strb.w	r3, [r5, #76]	; 0x4c
			( ( Queue_t * ) xHandle )->uxMessagesWaiting = uxInitialCount;
 800e1e6:	63ae      	str	r6, [r5, #56]	; 0x38
	}
 800e1e8:	4628      	mov	r0, r5
 800e1ea:	bdf8      	pop	{r3, r4, r5, r6, r7, pc}

0800e1ec <xQueueGenericSend>:
{
 800e1ec:	e92d 43f0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, lr}
 800e1f0:	b085      	sub	sp, #20
 800e1f2:	9201      	str	r2, [sp, #4]
	configASSERT( pxQueue );
 800e1f4:	2800      	cmp	r0, #0
 800e1f6:	f000 80a4 	beq.w	800e342 <xQueueGenericSend+0x156>
	configASSERT( !( ( pvItemToQueue == NULL ) && ( pxQueue->uxItemSize != ( UBaseType_t ) 0U ) ) );
 800e1fa:	4688      	mov	r8, r1
 800e1fc:	461f      	mov	r7, r3
 800e1fe:	4604      	mov	r4, r0
 800e200:	2900      	cmp	r1, #0
 800e202:	f000 8091 	beq.w	800e328 <xQueueGenericSend+0x13c>
	configASSERT( !( ( xCopyPosition == queueOVERWRITE ) && ( pxQueue->uxLength != 1 ) ) );
 800e206:	2f02      	cmp	r7, #2
 800e208:	d10b      	bne.n	800e222 <xQueueGenericSend+0x36>
 800e20a:	6be3      	ldr	r3, [r4, #60]	; 0x3c
 800e20c:	2b01      	cmp	r3, #1
 800e20e:	d008      	beq.n	800e222 <xQueueGenericSend+0x36>
 800e210:	f04f 0350 	mov.w	r3, #80	; 0x50
 800e214:	f383 8811 	msr	BASEPRI, r3
 800e218:	f3bf 8f6f 	isb	sy
 800e21c:	f3bf 8f4f 	dsb	sy
 800e220:	e7fe      	b.n	800e220 <xQueueGenericSend+0x34>
		configASSERT( !( ( xTaskGetSchedulerState() == taskSCHEDULER_SUSPENDED ) && ( xTicksToWait != 0 ) ) );
 800e222:	f001 fc0f 	bl	800fa44 <xTaskGetSchedulerState>
 800e226:	4605      	mov	r5, r0
 800e228:	2800      	cmp	r0, #0
 800e22a:	f000 8093 	beq.w	800e354 <xQueueGenericSend+0x168>
 800e22e:	2500      	movs	r5, #0
			{
				/* Tasks that are removed from the event list will get added to
				the pending ready list as the scheduler is still suspended. */
				if( listLIST_IS_EMPTY( &( pxQueue->xTasksWaitingToReceive ) ) == pdFALSE )
				{
					if( xTaskRemoveFromEventList( &( pxQueue->xTasksWaitingToReceive ) ) != pdFALSE )
 800e230:	f104 0624 	add.w	r6, r4, #36	; 0x24
		taskENTER_CRITICAL();
 800e234:	f7ff fce6 	bl	800dc04 <vPortEnterCritical>
			if( ( pxQueue->uxMessagesWaiting < pxQueue->uxLength ) || ( xCopyPosition == queueOVERWRITE ) )
 800e238:	6ba2      	ldr	r2, [r4, #56]	; 0x38
 800e23a:	6be3      	ldr	r3, [r4, #60]	; 0x3c
 800e23c:	429a      	cmp	r2, r3
 800e23e:	f0c0 80ef 	bcc.w	800e420 <xQueueGenericSend+0x234>
 800e242:	2f02      	cmp	r7, #2
 800e244:	f000 80ec 	beq.w	800e420 <xQueueGenericSend+0x234>
				if( xTicksToWait == ( TickType_t ) 0 )
 800e248:	9801      	ldr	r0, [sp, #4]
 800e24a:	2800      	cmp	r0, #0
 800e24c:	f000 8101 	beq.w	800e452 <xQueueGenericSend+0x266>
				else if( xEntryTimeSet == pdFALSE )
 800e250:	2d00      	cmp	r5, #0
 800e252:	f000 80e1 	beq.w	800e418 <xQueueGenericSend+0x22c>
		taskEXIT_CRITICAL();
 800e256:	f7ff fcf7 	bl	800dc48 <vPortExitCritical>
		vTaskSuspendAll();
 800e25a:	f001 fa49 	bl	800f6f0 <vTaskSuspendAll>
		prvLockQueue( pxQueue );
 800e25e:	f7ff fcd1 	bl	800dc04 <vPortEnterCritical>
 800e262:	f894 3044 	ldrb.w	r3, [r4, #68]	; 0x44
 800e266:	2bff      	cmp	r3, #255	; 0xff
 800e268:	bf04      	itt	eq
 800e26a:	2300      	moveq	r3, #0
 800e26c:	f884 3044 	strbeq.w	r3, [r4, #68]	; 0x44
 800e270:	f894 3045 	ldrb.w	r3, [r4, #69]	; 0x45
 800e274:	2bff      	cmp	r3, #255	; 0xff
 800e276:	bf04      	itt	eq
 800e278:	2300      	moveq	r3, #0
 800e27a:	f884 3045 	strbeq.w	r3, [r4, #69]	; 0x45
 800e27e:	f7ff fce3 	bl	800dc48 <vPortExitCritical>
		if( xTaskCheckForTimeOut( &xTimeOut, &xTicksToWait ) == pdFALSE )
 800e282:	a901      	add	r1, sp, #4
 800e284:	a802      	add	r0, sp, #8
 800e286:	f001 fb8f 	bl	800f9a8 <xTaskCheckForTimeOut>
 800e28a:	2800      	cmp	r0, #0
 800e28c:	f040 80e6 	bne.w	800e45c <xQueueGenericSend+0x270>

static BaseType_t prvIsQueueFull( const Queue_t *pxQueue )
{
BaseType_t xReturn;

	taskENTER_CRITICAL();
 800e290:	f7ff fcb8 	bl	800dc04 <vPortEnterCritical>
	{
		if( pxQueue->uxMessagesWaiting == pxQueue->uxLength )
 800e294:	6ba2      	ldr	r2, [r4, #56]	; 0x38
 800e296:	6be3      	ldr	r3, [r4, #60]	; 0x3c
 800e298:	429a      	cmp	r2, r3
 800e29a:	d068      	beq.n	800e36e <xQueueGenericSend+0x182>
		else
		{
			xReturn = pdFALSE;
		}
	}
	taskEXIT_CRITICAL();
 800e29c:	f7ff fcd4 	bl	800dc48 <vPortExitCritical>
	taskENTER_CRITICAL();
 800e2a0:	f7ff fcb0 	bl	800dc04 <vPortEnterCritical>
		int8_t cTxLock = pxQueue->cTxLock;
 800e2a4:	f894 2045 	ldrb.w	r2, [r4, #69]	; 0x45
 800e2a8:	b255      	sxtb	r5, r2
		while( cTxLock > queueLOCKED_UNMODIFIED )
 800e2aa:	2d00      	cmp	r5, #0
 800e2ac:	dc04      	bgt.n	800e2b8 <xQueueGenericSend+0xcc>
 800e2ae:	e011      	b.n	800e2d4 <xQueueGenericSend+0xe8>
			--cTxLock;
 800e2b0:	1e6a      	subs	r2, r5, #1
 800e2b2:	b2d3      	uxtb	r3, r2
 800e2b4:	b255      	sxtb	r5, r2
		while( cTxLock > queueLOCKED_UNMODIFIED )
 800e2b6:	b16b      	cbz	r3, 800e2d4 <xQueueGenericSend+0xe8>
				if( listLIST_IS_EMPTY( &( pxQueue->xTasksWaitingToReceive ) ) == pdFALSE )
 800e2b8:	6a63      	ldr	r3, [r4, #36]	; 0x24
					if( xTaskRemoveFromEventList( &( pxQueue->xTasksWaitingToReceive ) ) != pdFALSE )
 800e2ba:	4630      	mov	r0, r6
				if( listLIST_IS_EMPTY( &( pxQueue->xTasksWaitingToReceive ) ) == pdFALSE )
 800e2bc:	b153      	cbz	r3, 800e2d4 <xQueueGenericSend+0xe8>
					if( xTaskRemoveFromEventList( &( pxQueue->xTasksWaitingToReceive ) ) != pdFALSE )
 800e2be:	f001 fb1f 	bl	800f900 <xTaskRemoveFromEventList>
 800e2c2:	2800      	cmp	r0, #0
 800e2c4:	d0f4      	beq.n	800e2b0 <xQueueGenericSend+0xc4>
						vTaskMissedYield();
 800e2c6:	f001 fbb7 	bl	800fa38 <vTaskMissedYield>
			--cTxLock;
 800e2ca:	1e6a      	subs	r2, r5, #1
 800e2cc:	b2d3      	uxtb	r3, r2
 800e2ce:	b255      	sxtb	r5, r2
		while( cTxLock > queueLOCKED_UNMODIFIED )
 800e2d0:	2b00      	cmp	r3, #0
 800e2d2:	d1f1      	bne.n	800e2b8 <xQueueGenericSend+0xcc>
		pxQueue->cTxLock = queueUNLOCKED;
 800e2d4:	23ff      	movs	r3, #255	; 0xff
 800e2d6:	f884 3045 	strb.w	r3, [r4, #69]	; 0x45
	taskEXIT_CRITICAL();
 800e2da:	f7ff fcb5 	bl	800dc48 <vPortExitCritical>
	taskENTER_CRITICAL();
 800e2de:	f7ff fc91 	bl	800dc04 <vPortEnterCritical>
		int8_t cRxLock = pxQueue->cRxLock;
 800e2e2:	f894 2044 	ldrb.w	r2, [r4, #68]	; 0x44
 800e2e6:	b255      	sxtb	r5, r2
		while( cRxLock > queueLOCKED_UNMODIFIED )
 800e2e8:	2d00      	cmp	r5, #0
 800e2ea:	dd14      	ble.n	800e316 <xQueueGenericSend+0x12a>
				if( xTaskRemoveFromEventList( &( pxQueue->xTasksWaitingToSend ) ) != pdFALSE )
 800e2ec:	f104 0910 	add.w	r9, r4, #16
 800e2f0:	e003      	b.n	800e2fa <xQueueGenericSend+0x10e>
				--cRxLock;
 800e2f2:	1e6a      	subs	r2, r5, #1
 800e2f4:	b2d3      	uxtb	r3, r2
 800e2f6:	b255      	sxtb	r5, r2
		while( cRxLock > queueLOCKED_UNMODIFIED )
 800e2f8:	b16b      	cbz	r3, 800e316 <xQueueGenericSend+0x12a>
			if( listLIST_IS_EMPTY( &( pxQueue->xTasksWaitingToSend ) ) == pdFALSE )
 800e2fa:	6923      	ldr	r3, [r4, #16]
				if( xTaskRemoveFromEventList( &( pxQueue->xTasksWaitingToSend ) ) != pdFALSE )
 800e2fc:	4648      	mov	r0, r9
			if( listLIST_IS_EMPTY( &( pxQueue->xTasksWaitingToSend ) ) == pdFALSE )
 800e2fe:	b153      	cbz	r3, 800e316 <xQueueGenericSend+0x12a>
				if( xTaskRemoveFromEventList( &( pxQueue->xTasksWaitingToSend ) ) != pdFALSE )
 800e300:	f001 fafe 	bl	800f900 <xTaskRemoveFromEventList>
 800e304:	2800      	cmp	r0, #0
 800e306:	d0f4      	beq.n	800e2f2 <xQueueGenericSend+0x106>
					vTaskMissedYield();
 800e308:	f001 fb96 	bl	800fa38 <vTaskMissedYield>
				--cRxLock;
 800e30c:	1e6a      	subs	r2, r5, #1
 800e30e:	b2d3      	uxtb	r3, r2
 800e310:	b255      	sxtb	r5, r2
		while( cRxLock > queueLOCKED_UNMODIFIED )
 800e312:	2b00      	cmp	r3, #0
 800e314:	d1f1      	bne.n	800e2fa <xQueueGenericSend+0x10e>
		pxQueue->cRxLock = queueUNLOCKED;
 800e316:	23ff      	movs	r3, #255	; 0xff
 800e318:	f884 3044 	strb.w	r3, [r4, #68]	; 0x44
	taskEXIT_CRITICAL();
 800e31c:	f7ff fc94 	bl	800dc48 <vPortExitCritical>
				( void ) xTaskResumeAll();
 800e320:	f001 f9ee 	bl	800f700 <xTaskResumeAll>
 800e324:	2501      	movs	r5, #1
 800e326:	e785      	b.n	800e234 <xQueueGenericSend+0x48>
	configASSERT( !( ( pvItemToQueue == NULL ) && ( pxQueue->uxItemSize != ( UBaseType_t ) 0U ) ) );
 800e328:	6c03      	ldr	r3, [r0, #64]	; 0x40
 800e32a:	2b00      	cmp	r3, #0
 800e32c:	f43f af6b 	beq.w	800e206 <xQueueGenericSend+0x1a>
 800e330:	f04f 0350 	mov.w	r3, #80	; 0x50
 800e334:	f383 8811 	msr	BASEPRI, r3
 800e338:	f3bf 8f6f 	isb	sy
 800e33c:	f3bf 8f4f 	dsb	sy
 800e340:	e7fe      	b.n	800e340 <xQueueGenericSend+0x154>
 800e342:	f04f 0350 	mov.w	r3, #80	; 0x50
 800e346:	f383 8811 	msr	BASEPRI, r3
 800e34a:	f3bf 8f6f 	isb	sy
 800e34e:	f3bf 8f4f 	dsb	sy
	configASSERT( pxQueue );
 800e352:	e7fe      	b.n	800e352 <xQueueGenericSend+0x166>
		configASSERT( !( ( xTaskGetSchedulerState() == taskSCHEDULER_SUSPENDED ) && ( xTicksToWait != 0 ) ) );
 800e354:	9b01      	ldr	r3, [sp, #4]
 800e356:	2b00      	cmp	r3, #0
 800e358:	f43f af6a 	beq.w	800e230 <xQueueGenericSend+0x44>
 800e35c:	f04f 0350 	mov.w	r3, #80	; 0x50
 800e360:	f383 8811 	msr	BASEPRI, r3
 800e364:	f3bf 8f6f 	isb	sy
 800e368:	f3bf 8f4f 	dsb	sy
 800e36c:	e7fe      	b.n	800e36c <xQueueGenericSend+0x180>
				vTaskPlaceOnEventList( &( pxQueue->xTasksWaitingToSend ), xTicksToWait );
 800e36e:	f104 0910 	add.w	r9, r4, #16
	taskEXIT_CRITICAL();
 800e372:	f7ff fc69 	bl	800dc48 <vPortExitCritical>
				vTaskPlaceOnEventList( &( pxQueue->xTasksWaitingToSend ), xTicksToWait );
 800e376:	9901      	ldr	r1, [sp, #4]
 800e378:	4648      	mov	r0, r9
 800e37a:	f001 fa33 	bl	800f7e4 <vTaskPlaceOnEventList>
	taskENTER_CRITICAL();
 800e37e:	f7ff fc41 	bl	800dc04 <vPortEnterCritical>
		int8_t cTxLock = pxQueue->cTxLock;
 800e382:	f894 3045 	ldrb.w	r3, [r4, #69]	; 0x45
 800e386:	b25d      	sxtb	r5, r3
		while( cTxLock > queueLOCKED_UNMODIFIED )
 800e388:	2d00      	cmp	r5, #0
 800e38a:	dc04      	bgt.n	800e396 <xQueueGenericSend+0x1aa>
 800e38c:	e011      	b.n	800e3b2 <xQueueGenericSend+0x1c6>
			--cTxLock;
 800e38e:	1e6b      	subs	r3, r5, #1
 800e390:	b2da      	uxtb	r2, r3
 800e392:	b25d      	sxtb	r5, r3
		while( cTxLock > queueLOCKED_UNMODIFIED )
 800e394:	b16a      	cbz	r2, 800e3b2 <xQueueGenericSend+0x1c6>
				if( listLIST_IS_EMPTY( &( pxQueue->xTasksWaitingToReceive ) ) == pdFALSE )
 800e396:	6a63      	ldr	r3, [r4, #36]	; 0x24
					if( xTaskRemoveFromEventList( &( pxQueue->xTasksWaitingToReceive ) ) != pdFALSE )
 800e398:	4630      	mov	r0, r6
				if( listLIST_IS_EMPTY( &( pxQueue->xTasksWaitingToReceive ) ) == pdFALSE )
 800e39a:	b153      	cbz	r3, 800e3b2 <xQueueGenericSend+0x1c6>
					if( xTaskRemoveFromEventList( &( pxQueue->xTasksWaitingToReceive ) ) != pdFALSE )
 800e39c:	f001 fab0 	bl	800f900 <xTaskRemoveFromEventList>
 800e3a0:	2800      	cmp	r0, #0
 800e3a2:	d0f4      	beq.n	800e38e <xQueueGenericSend+0x1a2>
						vTaskMissedYield();
 800e3a4:	f001 fb48 	bl	800fa38 <vTaskMissedYield>
			--cTxLock;
 800e3a8:	1e6b      	subs	r3, r5, #1
 800e3aa:	b2da      	uxtb	r2, r3
 800e3ac:	b25d      	sxtb	r5, r3
		while( cTxLock > queueLOCKED_UNMODIFIED )
 800e3ae:	2a00      	cmp	r2, #0
 800e3b0:	d1f1      	bne.n	800e396 <xQueueGenericSend+0x1aa>
		pxQueue->cTxLock = queueUNLOCKED;
 800e3b2:	23ff      	movs	r3, #255	; 0xff
 800e3b4:	f884 3045 	strb.w	r3, [r4, #69]	; 0x45
	taskEXIT_CRITICAL();
 800e3b8:	f7ff fc46 	bl	800dc48 <vPortExitCritical>
	taskENTER_CRITICAL();
 800e3bc:	f7ff fc22 	bl	800dc04 <vPortEnterCritical>
		int8_t cRxLock = pxQueue->cRxLock;
 800e3c0:	f894 3044 	ldrb.w	r3, [r4, #68]	; 0x44
 800e3c4:	b25d      	sxtb	r5, r3
		while( cRxLock > queueLOCKED_UNMODIFIED )
 800e3c6:	2d00      	cmp	r5, #0
 800e3c8:	dc04      	bgt.n	800e3d4 <xQueueGenericSend+0x1e8>
 800e3ca:	e011      	b.n	800e3f0 <xQueueGenericSend+0x204>
				--cRxLock;
 800e3cc:	1e6b      	subs	r3, r5, #1
 800e3ce:	b2da      	uxtb	r2, r3
 800e3d0:	b25d      	sxtb	r5, r3
		while( cRxLock > queueLOCKED_UNMODIFIED )
 800e3d2:	b16a      	cbz	r2, 800e3f0 <xQueueGenericSend+0x204>
			if( listLIST_IS_EMPTY( &( pxQueue->xTasksWaitingToSend ) ) == pdFALSE )
 800e3d4:	6923      	ldr	r3, [r4, #16]
				if( xTaskRemoveFromEventList( &( pxQueue->xTasksWaitingToSend ) ) != pdFALSE )
 800e3d6:	4648      	mov	r0, r9
			if( listLIST_IS_EMPTY( &( pxQueue->xTasksWaitingToSend ) ) == pdFALSE )
 800e3d8:	b153      	cbz	r3, 800e3f0 <xQueueGenericSend+0x204>
				if( xTaskRemoveFromEventList( &( pxQueue->xTasksWaitingToSend ) ) != pdFALSE )
 800e3da:	f001 fa91 	bl	800f900 <xTaskRemoveFromEventList>
 800e3de:	2800      	cmp	r0, #0
 800e3e0:	d0f4      	beq.n	800e3cc <xQueueGenericSend+0x1e0>
					vTaskMissedYield();
 800e3e2:	f001 fb29 	bl	800fa38 <vTaskMissedYield>
				--cRxLock;
 800e3e6:	1e6b      	subs	r3, r5, #1
 800e3e8:	b2da      	uxtb	r2, r3
 800e3ea:	b25d      	sxtb	r5, r3
		while( cRxLock > queueLOCKED_UNMODIFIED )
 800e3ec:	2a00      	cmp	r2, #0
 800e3ee:	d1f1      	bne.n	800e3d4 <xQueueGenericSend+0x1e8>
		pxQueue->cRxLock = queueUNLOCKED;
 800e3f0:	23ff      	movs	r3, #255	; 0xff
 800e3f2:	f884 3044 	strb.w	r3, [r4, #68]	; 0x44
	taskEXIT_CRITICAL();
 800e3f6:	f7ff fc27 	bl	800dc48 <vPortExitCritical>
				if( xTaskResumeAll() == pdFALSE )
 800e3fa:	f001 f981 	bl	800f700 <xTaskResumeAll>
 800e3fe:	2800      	cmp	r0, #0
 800e400:	d190      	bne.n	800e324 <xQueueGenericSend+0x138>
					portYIELD_WITHIN_API();
 800e402:	f04f 23e0 	mov.w	r3, #3758153728	; 0xe000e000
 800e406:	f04f 5280 	mov.w	r2, #268435456	; 0x10000000
 800e40a:	f8c3 2d04 	str.w	r2, [r3, #3332]	; 0xd04
 800e40e:	f3bf 8f4f 	dsb	sy
 800e412:	f3bf 8f6f 	isb	sy
 800e416:	e785      	b.n	800e324 <xQueueGenericSend+0x138>
					vTaskInternalSetTimeOutState( &xTimeOut );
 800e418:	a802      	add	r0, sp, #8
 800e41a:	f001 fab9 	bl	800f990 <vTaskInternalSetTimeOutState>
					xEntryTimeSet = pdTRUE;
 800e41e:	e71a      	b.n	800e256 <xQueueGenericSend+0x6a>
					xYieldRequired = prvCopyDataToQueue( pxQueue, pvItemToQueue, xCopyPosition );
 800e420:	463a      	mov	r2, r7
 800e422:	4641      	mov	r1, r8
 800e424:	4620      	mov	r0, r4
 800e426:	f7ff fd4f 	bl	800dec8 <prvCopyDataToQueue>
					if( listLIST_IS_EMPTY( &( pxQueue->xTasksWaitingToReceive ) ) == pdFALSE )
 800e42a:	6a63      	ldr	r3, [r4, #36]	; 0x24
 800e42c:	2b00      	cmp	r3, #0
 800e42e:	d153      	bne.n	800e4d8 <xQueueGenericSend+0x2ec>
					else if( xYieldRequired != pdFALSE )
 800e430:	b148      	cbz	r0, 800e446 <xQueueGenericSend+0x25a>
						queueYIELD_IF_USING_PREEMPTION();
 800e432:	f04f 23e0 	mov.w	r3, #3758153728	; 0xe000e000
 800e436:	f04f 5280 	mov.w	r2, #268435456	; 0x10000000
 800e43a:	f8c3 2d04 	str.w	r2, [r3, #3332]	; 0xd04
 800e43e:	f3bf 8f4f 	dsb	sy
 800e442:	f3bf 8f6f 	isb	sy
				taskEXIT_CRITICAL();
 800e446:	f7ff fbff 	bl	800dc48 <vPortExitCritical>
				return pdPASS;
 800e44a:	2001      	movs	r0, #1
}
 800e44c:	b005      	add	sp, #20
 800e44e:	e8bd 83f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, pc}
 800e452:	9000      	str	r0, [sp, #0]
					taskEXIT_CRITICAL();
 800e454:	f7ff fbf8 	bl	800dc48 <vPortExitCritical>
					return errQUEUE_FULL;
 800e458:	9800      	ldr	r0, [sp, #0]
 800e45a:	e7f7      	b.n	800e44c <xQueueGenericSend+0x260>
	taskENTER_CRITICAL();
 800e45c:	f7ff fbd2 	bl	800dc04 <vPortEnterCritical>
		int8_t cTxLock = pxQueue->cTxLock;
 800e460:	f894 3045 	ldrb.w	r3, [r4, #69]	; 0x45
 800e464:	b25d      	sxtb	r5, r3
		while( cTxLock > queueLOCKED_UNMODIFIED )
 800e466:	2d00      	cmp	r5, #0
 800e468:	dd10      	ble.n	800e48c <xQueueGenericSend+0x2a0>
					if( xTaskRemoveFromEventList( &( pxQueue->xTasksWaitingToReceive ) ) != pdFALSE )
 800e46a:	f104 0624 	add.w	r6, r4, #36	; 0x24
 800e46e:	e003      	b.n	800e478 <xQueueGenericSend+0x28c>
			--cTxLock;
 800e470:	1e6b      	subs	r3, r5, #1
 800e472:	b2da      	uxtb	r2, r3
 800e474:	b25d      	sxtb	r5, r3
		while( cTxLock > queueLOCKED_UNMODIFIED )
 800e476:	b14a      	cbz	r2, 800e48c <xQueueGenericSend+0x2a0>
				if( listLIST_IS_EMPTY( &( pxQueue->xTasksWaitingToReceive ) ) == pdFALSE )
 800e478:	6a63      	ldr	r3, [r4, #36]	; 0x24
					if( xTaskRemoveFromEventList( &( pxQueue->xTasksWaitingToReceive ) ) != pdFALSE )
 800e47a:	4630      	mov	r0, r6
				if( listLIST_IS_EMPTY( &( pxQueue->xTasksWaitingToReceive ) ) == pdFALSE )
 800e47c:	b133      	cbz	r3, 800e48c <xQueueGenericSend+0x2a0>
					if( xTaskRemoveFromEventList( &( pxQueue->xTasksWaitingToReceive ) ) != pdFALSE )
 800e47e:	f001 fa3f 	bl	800f900 <xTaskRemoveFromEventList>
 800e482:	2800      	cmp	r0, #0
 800e484:	d0f4      	beq.n	800e470 <xQueueGenericSend+0x284>
						vTaskMissedYield();
 800e486:	f001 fad7 	bl	800fa38 <vTaskMissedYield>
 800e48a:	e7f1      	b.n	800e470 <xQueueGenericSend+0x284>
		pxQueue->cTxLock = queueUNLOCKED;
 800e48c:	23ff      	movs	r3, #255	; 0xff
 800e48e:	f884 3045 	strb.w	r3, [r4, #69]	; 0x45
	taskEXIT_CRITICAL();
 800e492:	f7ff fbd9 	bl	800dc48 <vPortExitCritical>
	taskENTER_CRITICAL();
 800e496:	f7ff fbb5 	bl	800dc04 <vPortEnterCritical>
		int8_t cRxLock = pxQueue->cRxLock;
 800e49a:	f894 3044 	ldrb.w	r3, [r4, #68]	; 0x44
 800e49e:	b25d      	sxtb	r5, r3
		while( cRxLock > queueLOCKED_UNMODIFIED )
 800e4a0:	2d00      	cmp	r5, #0
 800e4a2:	dd10      	ble.n	800e4c6 <xQueueGenericSend+0x2da>
				if( xTaskRemoveFromEventList( &( pxQueue->xTasksWaitingToSend ) ) != pdFALSE )
 800e4a4:	f104 0610 	add.w	r6, r4, #16
 800e4a8:	e003      	b.n	800e4b2 <xQueueGenericSend+0x2c6>
				--cRxLock;
 800e4aa:	1e6b      	subs	r3, r5, #1
 800e4ac:	b2da      	uxtb	r2, r3
 800e4ae:	b25d      	sxtb	r5, r3
		while( cRxLock > queueLOCKED_UNMODIFIED )
 800e4b0:	b14a      	cbz	r2, 800e4c6 <xQueueGenericSend+0x2da>
			if( listLIST_IS_EMPTY( &( pxQueue->xTasksWaitingToSend ) ) == pdFALSE )
 800e4b2:	6923      	ldr	r3, [r4, #16]
				if( xTaskRemoveFromEventList( &( pxQueue->xTasksWaitingToSend ) ) != pdFALSE )
 800e4b4:	4630      	mov	r0, r6
			if( listLIST_IS_EMPTY( &( pxQueue->xTasksWaitingToSend ) ) == pdFALSE )
 800e4b6:	b133      	cbz	r3, 800e4c6 <xQueueGenericSend+0x2da>
				if( xTaskRemoveFromEventList( &( pxQueue->xTasksWaitingToSend ) ) != pdFALSE )
 800e4b8:	f001 fa22 	bl	800f900 <xTaskRemoveFromEventList>
 800e4bc:	2800      	cmp	r0, #0
 800e4be:	d0f4      	beq.n	800e4aa <xQueueGenericSend+0x2be>
					vTaskMissedYield();
 800e4c0:	f001 faba 	bl	800fa38 <vTaskMissedYield>
 800e4c4:	e7f1      	b.n	800e4aa <xQueueGenericSend+0x2be>
		pxQueue->cRxLock = queueUNLOCKED;
 800e4c6:	23ff      	movs	r3, #255	; 0xff
 800e4c8:	f884 3044 	strb.w	r3, [r4, #68]	; 0x44
	taskEXIT_CRITICAL();
 800e4cc:	f7ff fbbc 	bl	800dc48 <vPortExitCritical>
			( void ) xTaskResumeAll();
 800e4d0:	f001 f916 	bl	800f700 <xTaskResumeAll>
			return errQUEUE_FULL;
 800e4d4:	2000      	movs	r0, #0
 800e4d6:	e7b9      	b.n	800e44c <xQueueGenericSend+0x260>
						if( xTaskRemoveFromEventList( &( pxQueue->xTasksWaitingToReceive ) ) != pdFALSE )
 800e4d8:	f104 0024 	add.w	r0, r4, #36	; 0x24
 800e4dc:	f001 fa10 	bl	800f900 <xTaskRemoveFromEventList>
 800e4e0:	2800      	cmp	r0, #0
 800e4e2:	d0b0      	beq.n	800e446 <xQueueGenericSend+0x25a>
 800e4e4:	e7a5      	b.n	800e432 <xQueueGenericSend+0x246>
 800e4e6:	bf00      	nop

0800e4e8 <xQueueGenericSendFromISR>:
	configASSERT( pxQueue );
 800e4e8:	2800      	cmp	r0, #0
 800e4ea:	d04b      	beq.n	800e584 <xQueueGenericSendFromISR+0x9c>
{
 800e4ec:	e92d 41f0 	stmdb	sp!, {r4, r5, r6, r7, r8, lr}
 800e4f0:	460e      	mov	r6, r1
 800e4f2:	4617      	mov	r7, r2
 800e4f4:	461d      	mov	r5, r3
 800e4f6:	4604      	mov	r4, r0
	configASSERT( !( ( pvItemToQueue == NULL ) && ( pxQueue->uxItemSize != ( UBaseType_t ) 0U ) ) );
 800e4f8:	b321      	cbz	r1, 800e544 <xQueueGenericSendFromISR+0x5c>
	configASSERT( !( ( xCopyPosition == queueOVERWRITE ) && ( pxQueue->uxLength != 1 ) ) );
 800e4fa:	2d02      	cmp	r5, #2
 800e4fc:	d10b      	bne.n	800e516 <xQueueGenericSendFromISR+0x2e>
 800e4fe:	6be3      	ldr	r3, [r4, #60]	; 0x3c
 800e500:	2b01      	cmp	r3, #1
 800e502:	d008      	beq.n	800e516 <xQueueGenericSendFromISR+0x2e>
 800e504:	f04f 0350 	mov.w	r3, #80	; 0x50
 800e508:	f383 8811 	msr	BASEPRI, r3
 800e50c:	f3bf 8f6f 	isb	sy
 800e510:	f3bf 8f4f 	dsb	sy
 800e514:	e7fe      	b.n	800e514 <xQueueGenericSendFromISR+0x2c>
	portASSERT_IF_INTERRUPT_PRIORITY_INVALID();
 800e516:	f7ff fca9 	bl	800de6c <vPortValidateInterruptPriority>
	__asm volatile
 800e51a:	f3ef 8811 	mrs	r8, BASEPRI
 800e51e:	f04f 0350 	mov.w	r3, #80	; 0x50
 800e522:	f383 8811 	msr	BASEPRI, r3
 800e526:	f3bf 8f6f 	isb	sy
 800e52a:	f3bf 8f4f 	dsb	sy
		if( ( pxQueue->uxMessagesWaiting < pxQueue->uxLength ) || ( xCopyPosition == queueOVERWRITE ) )
 800e52e:	6ba2      	ldr	r2, [r4, #56]	; 0x38
 800e530:	6be3      	ldr	r3, [r4, #60]	; 0x3c
 800e532:	429a      	cmp	r2, r3
 800e534:	d312      	bcc.n	800e55c <xQueueGenericSendFromISR+0x74>
 800e536:	2d02      	cmp	r5, #2
 800e538:	d010      	beq.n	800e55c <xQueueGenericSendFromISR+0x74>
			xReturn = errQUEUE_FULL;
 800e53a:	2000      	movs	r0, #0
	__asm volatile
 800e53c:	f388 8811 	msr	BASEPRI, r8
}
 800e540:	e8bd 81f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, pc}
	configASSERT( !( ( pvItemToQueue == NULL ) && ( pxQueue->uxItemSize != ( UBaseType_t ) 0U ) ) );
 800e544:	6c03      	ldr	r3, [r0, #64]	; 0x40
 800e546:	2b00      	cmp	r3, #0
 800e548:	d0d7      	beq.n	800e4fa <xQueueGenericSendFromISR+0x12>
	__asm volatile
 800e54a:	f04f 0350 	mov.w	r3, #80	; 0x50
 800e54e:	f383 8811 	msr	BASEPRI, r3
 800e552:	f3bf 8f6f 	isb	sy
 800e556:	f3bf 8f4f 	dsb	sy
 800e55a:	e7fe      	b.n	800e55a <xQueueGenericSendFromISR+0x72>
			( void ) prvCopyDataToQueue( pxQueue, pvItemToQueue, xCopyPosition );
 800e55c:	462a      	mov	r2, r5
			const int8_t cTxLock = pxQueue->cTxLock;
 800e55e:	f894 5045 	ldrb.w	r5, [r4, #69]	; 0x45
			const UBaseType_t uxPreviousMessagesWaiting = pxQueue->uxMessagesWaiting;
 800e562:	6ba3      	ldr	r3, [r4, #56]	; 0x38
			( void ) prvCopyDataToQueue( pxQueue, pvItemToQueue, xCopyPosition );
 800e564:	4631      	mov	r1, r6
			const int8_t cTxLock = pxQueue->cTxLock;
 800e566:	b26d      	sxtb	r5, r5
			( void ) prvCopyDataToQueue( pxQueue, pvItemToQueue, xCopyPosition );
 800e568:	4620      	mov	r0, r4
 800e56a:	f7ff fcad 	bl	800dec8 <prvCopyDataToQueue>
			if( cTxLock == queueUNLOCKED )
 800e56e:	1c6b      	adds	r3, r5, #1
 800e570:	d011      	beq.n	800e596 <xQueueGenericSendFromISR+0xae>
				pxQueue->cTxLock = ( int8_t ) ( cTxLock + 1 );
 800e572:	1c6b      	adds	r3, r5, #1
 800e574:	b25b      	sxtb	r3, r3
 800e576:	f884 3045 	strb.w	r3, [r4, #69]	; 0x45
			xReturn = pdPASS;
 800e57a:	2001      	movs	r0, #1
	__asm volatile
 800e57c:	f388 8811 	msr	BASEPRI, r8
}
 800e580:	e8bd 81f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, pc}
	__asm volatile
 800e584:	f04f 0350 	mov.w	r3, #80	; 0x50
 800e588:	f383 8811 	msr	BASEPRI, r3
 800e58c:	f3bf 8f6f 	isb	sy
 800e590:	f3bf 8f4f 	dsb	sy
	configASSERT( pxQueue );
 800e594:	e7fe      	b.n	800e594 <xQueueGenericSendFromISR+0xac>
					if( listLIST_IS_EMPTY( &( pxQueue->xTasksWaitingToReceive ) ) == pdFALSE )
 800e596:	6a63      	ldr	r3, [r4, #36]	; 0x24
 800e598:	2b00      	cmp	r3, #0
 800e59a:	d0ee      	beq.n	800e57a <xQueueGenericSendFromISR+0x92>
						if( xTaskRemoveFromEventList( &( pxQueue->xTasksWaitingToReceive ) ) != pdFALSE )
 800e59c:	f104 0024 	add.w	r0, r4, #36	; 0x24
 800e5a0:	f001 f9ae 	bl	800f900 <xTaskRemoveFromEventList>
 800e5a4:	2800      	cmp	r0, #0
 800e5a6:	d0e8      	beq.n	800e57a <xQueueGenericSendFromISR+0x92>
							if( pxHigherPriorityTaskWoken != NULL )
 800e5a8:	2f00      	cmp	r7, #0
 800e5aa:	d0e6      	beq.n	800e57a <xQueueGenericSendFromISR+0x92>
								*pxHigherPriorityTaskWoken = pdTRUE;
 800e5ac:	2001      	movs	r0, #1
 800e5ae:	6038      	str	r0, [r7, #0]
 800e5b0:	e7c4      	b.n	800e53c <xQueueGenericSendFromISR+0x54>
 800e5b2:	bf00      	nop

0800e5b4 <xQueueGiveFromISR>:
	configASSERT( pxQueue );
 800e5b4:	b370      	cbz	r0, 800e614 <xQueueGiveFromISR+0x60>
	configASSERT( pxQueue->uxItemSize == 0 );
 800e5b6:	6c03      	ldr	r3, [r0, #64]	; 0x40
{
 800e5b8:	b570      	push	{r4, r5, r6, lr}
 800e5ba:	4606      	mov	r6, r0
	configASSERT( pxQueue->uxItemSize == 0 );
 800e5bc:	b143      	cbz	r3, 800e5d0 <xQueueGiveFromISR+0x1c>
 800e5be:	f04f 0350 	mov.w	r3, #80	; 0x50
 800e5c2:	f383 8811 	msr	BASEPRI, r3
 800e5c6:	f3bf 8f6f 	isb	sy
 800e5ca:	f3bf 8f4f 	dsb	sy
 800e5ce:	e7fe      	b.n	800e5ce <xQueueGiveFromISR+0x1a>
	configASSERT( !( ( pxQueue->uxQueueType == queueQUEUE_IS_MUTEX ) && ( pxQueue->u.xSemaphore.xMutexHolder != NULL ) ) );
 800e5d0:	6803      	ldr	r3, [r0, #0]
 800e5d2:	460c      	mov	r4, r1
 800e5d4:	b33b      	cbz	r3, 800e626 <xQueueGiveFromISR+0x72>
	portASSERT_IF_INTERRUPT_PRIORITY_INVALID();
 800e5d6:	f7ff fc49 	bl	800de6c <vPortValidateInterruptPriority>
	__asm volatile
 800e5da:	f3ef 8511 	mrs	r5, BASEPRI
 800e5de:	f04f 0350 	mov.w	r3, #80	; 0x50
 800e5e2:	f383 8811 	msr	BASEPRI, r3
 800e5e6:	f3bf 8f6f 	isb	sy
 800e5ea:	f3bf 8f4f 	dsb	sy
		const UBaseType_t uxMessagesWaiting = pxQueue->uxMessagesWaiting;
 800e5ee:	6bb3      	ldr	r3, [r6, #56]	; 0x38
		if( uxMessagesWaiting < pxQueue->uxLength )
 800e5f0:	6bf2      	ldr	r2, [r6, #60]	; 0x3c
 800e5f2:	429a      	cmp	r2, r3
 800e5f4:	d923      	bls.n	800e63e <xQueueGiveFromISR+0x8a>
			const int8_t cTxLock = pxQueue->cTxLock;
 800e5f6:	f896 2045 	ldrb.w	r2, [r6, #69]	; 0x45
			pxQueue->uxMessagesWaiting = uxMessagesWaiting + ( UBaseType_t ) 1;
 800e5fa:	3301      	adds	r3, #1
			if( cTxLock == queueUNLOCKED )
 800e5fc:	2aff      	cmp	r2, #255	; 0xff
			pxQueue->uxMessagesWaiting = uxMessagesWaiting + ( UBaseType_t ) 1;
 800e5fe:	63b3      	str	r3, [r6, #56]	; 0x38
			const int8_t cTxLock = pxQueue->cTxLock;
 800e600:	b253      	sxtb	r3, r2
			if( cTxLock == queueUNLOCKED )
 800e602:	d020      	beq.n	800e646 <xQueueGiveFromISR+0x92>
				pxQueue->cTxLock = ( int8_t ) ( cTxLock + 1 );
 800e604:	3301      	adds	r3, #1
 800e606:	b25b      	sxtb	r3, r3
 800e608:	f886 3045 	strb.w	r3, [r6, #69]	; 0x45
			xReturn = pdPASS;
 800e60c:	2001      	movs	r0, #1
	__asm volatile
 800e60e:	f385 8811 	msr	BASEPRI, r5
}
 800e612:	bd70      	pop	{r4, r5, r6, pc}
	__asm volatile
 800e614:	f04f 0350 	mov.w	r3, #80	; 0x50
 800e618:	f383 8811 	msr	BASEPRI, r3
 800e61c:	f3bf 8f6f 	isb	sy
 800e620:	f3bf 8f4f 	dsb	sy
	configASSERT( pxQueue );
 800e624:	e7fe      	b.n	800e624 <xQueueGiveFromISR+0x70>
	configASSERT( !( ( pxQueue->uxQueueType == queueQUEUE_IS_MUTEX ) && ( pxQueue->u.xSemaphore.xMutexHolder != NULL ) ) );
 800e626:	6883      	ldr	r3, [r0, #8]
 800e628:	2b00      	cmp	r3, #0
 800e62a:	d0d4      	beq.n	800e5d6 <xQueueGiveFromISR+0x22>
 800e62c:	f04f 0350 	mov.w	r3, #80	; 0x50
 800e630:	f383 8811 	msr	BASEPRI, r3
 800e634:	f3bf 8f6f 	isb	sy
 800e638:	f3bf 8f4f 	dsb	sy
 800e63c:	e7fe      	b.n	800e63c <xQueueGiveFromISR+0x88>
			xReturn = errQUEUE_FULL;
 800e63e:	2000      	movs	r0, #0
	__asm volatile
 800e640:	f385 8811 	msr	BASEPRI, r5
}
 800e644:	bd70      	pop	{r4, r5, r6, pc}
					if( listLIST_IS_EMPTY( &( pxQueue->xTasksWaitingToReceive ) ) == pdFALSE )
 800e646:	6a73      	ldr	r3, [r6, #36]	; 0x24
 800e648:	2b00      	cmp	r3, #0
 800e64a:	d0df      	beq.n	800e60c <xQueueGiveFromISR+0x58>
						if( xTaskRemoveFromEventList( &( pxQueue->xTasksWaitingToReceive ) ) != pdFALSE )
 800e64c:	f106 0024 	add.w	r0, r6, #36	; 0x24
 800e650:	f001 f956 	bl	800f900 <xTaskRemoveFromEventList>
 800e654:	2800      	cmp	r0, #0
 800e656:	d0d9      	beq.n	800e60c <xQueueGiveFromISR+0x58>
							if( pxHigherPriorityTaskWoken != NULL )
 800e658:	2c00      	cmp	r4, #0
 800e65a:	d0d7      	beq.n	800e60c <xQueueGiveFromISR+0x58>
								*pxHigherPriorityTaskWoken = pdTRUE;
 800e65c:	2001      	movs	r0, #1
 800e65e:	6020      	str	r0, [r4, #0]
 800e660:	e7ee      	b.n	800e640 <xQueueGiveFromISR+0x8c>
 800e662:	bf00      	nop

0800e664 <xQueueReceive>:
{
 800e664:	e92d 43f0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, lr}
 800e668:	b085      	sub	sp, #20
 800e66a:	9201      	str	r2, [sp, #4]
	configASSERT( ( pxQueue ) );
 800e66c:	2800      	cmp	r0, #0
 800e66e:	f000 815c 	beq.w	800e92a <xQueueReceive+0x2c6>
	configASSERT( !( ( ( pvBuffer ) == NULL ) && ( ( pxQueue )->uxItemSize != ( UBaseType_t ) 0U ) ) );
 800e672:	460f      	mov	r7, r1
 800e674:	4604      	mov	r4, r0
 800e676:	2900      	cmp	r1, #0
 800e678:	d079      	beq.n	800e76e <xQueueReceive+0x10a>
		configASSERT( !( ( xTaskGetSchedulerState() == taskSCHEDULER_SUSPENDED ) && ( xTicksToWait != 0 ) ) );
 800e67a:	f001 f9e3 	bl	800fa44 <xTaskGetSchedulerState>
 800e67e:	2800      	cmp	r0, #0
 800e680:	f000 8081 	beq.w	800e786 <xQueueReceive+0x122>
		taskENTER_CRITICAL();
 800e684:	f7ff fabe 	bl	800dc04 <vPortEnterCritical>
			const UBaseType_t uxMessagesWaiting = pxQueue->uxMessagesWaiting;
 800e688:	6ba5      	ldr	r5, [r4, #56]	; 0x38
			if( uxMessagesWaiting > ( UBaseType_t ) 0 )
 800e68a:	2d00      	cmp	r5, #0
 800e68c:	f040 8138 	bne.w	800e900 <xQueueReceive+0x29c>
				if( xTicksToWait == ( TickType_t ) 0 )
 800e690:	9b01      	ldr	r3, [sp, #4]
 800e692:	2b00      	cmp	r3, #0
 800e694:	f000 80d5 	beq.w	800e842 <xQueueReceive+0x1de>
					vTaskInternalSetTimeOutState( &xTimeOut );
 800e698:	a802      	add	r0, sp, #8
 800e69a:	f001 f979 	bl	800f990 <vTaskInternalSetTimeOutState>
		prvLockQueue( pxQueue );
 800e69e:	46a8      	mov	r8, r5
					if( xTaskRemoveFromEventList( &( pxQueue->xTasksWaitingToReceive ) ) != pdFALSE )
 800e6a0:	f104 0624 	add.w	r6, r4, #36	; 0x24
		taskEXIT_CRITICAL();
 800e6a4:	f7ff fad0 	bl	800dc48 <vPortExitCritical>
		vTaskSuspendAll();
 800e6a8:	f001 f822 	bl	800f6f0 <vTaskSuspendAll>
		prvLockQueue( pxQueue );
 800e6ac:	f7ff faaa 	bl	800dc04 <vPortEnterCritical>
 800e6b0:	f894 3044 	ldrb.w	r3, [r4, #68]	; 0x44
 800e6b4:	2bff      	cmp	r3, #255	; 0xff
 800e6b6:	bf08      	it	eq
 800e6b8:	f884 8044 	strbeq.w	r8, [r4, #68]	; 0x44
 800e6bc:	f894 3045 	ldrb.w	r3, [r4, #69]	; 0x45
 800e6c0:	2bff      	cmp	r3, #255	; 0xff
 800e6c2:	bf08      	it	eq
 800e6c4:	f884 8045 	strbeq.w	r8, [r4, #69]	; 0x45
 800e6c8:	f7ff fabe 	bl	800dc48 <vPortExitCritical>
		if( xTaskCheckForTimeOut( &xTimeOut, &xTicksToWait ) == pdFALSE )
 800e6cc:	a901      	add	r1, sp, #4
 800e6ce:	a802      	add	r0, sp, #8
 800e6d0:	f001 f96a 	bl	800f9a8 <xTaskCheckForTimeOut>
 800e6d4:	2800      	cmp	r0, #0
 800e6d6:	d163      	bne.n	800e7a0 <xQueueReceive+0x13c>
	taskENTER_CRITICAL();
 800e6d8:	f7ff fa94 	bl	800dc04 <vPortEnterCritical>
		if( pxQueue->uxMessagesWaiting == ( UBaseType_t )  0 )
 800e6dc:	6ba3      	ldr	r3, [r4, #56]	; 0x38
 800e6de:	2b00      	cmp	r3, #0
 800e6e0:	f000 80b5 	beq.w	800e84e <xQueueReceive+0x1ea>
	taskEXIT_CRITICAL();
 800e6e4:	f7ff fab0 	bl	800dc48 <vPortExitCritical>
	taskENTER_CRITICAL();
 800e6e8:	f7ff fa8c 	bl	800dc04 <vPortEnterCritical>
		int8_t cTxLock = pxQueue->cTxLock;
 800e6ec:	f894 3045 	ldrb.w	r3, [r4, #69]	; 0x45
 800e6f0:	b25d      	sxtb	r5, r3
		while( cTxLock > queueLOCKED_UNMODIFIED )
 800e6f2:	2d00      	cmp	r5, #0
 800e6f4:	dc04      	bgt.n	800e700 <xQueueReceive+0x9c>
 800e6f6:	e011      	b.n	800e71c <xQueueReceive+0xb8>
			--cTxLock;
 800e6f8:	1e6b      	subs	r3, r5, #1
 800e6fa:	b2da      	uxtb	r2, r3
 800e6fc:	b25d      	sxtb	r5, r3
		while( cTxLock > queueLOCKED_UNMODIFIED )
 800e6fe:	b16a      	cbz	r2, 800e71c <xQueueReceive+0xb8>
				if( listLIST_IS_EMPTY( &( pxQueue->xTasksWaitingToReceive ) ) == pdFALSE )
 800e700:	6a63      	ldr	r3, [r4, #36]	; 0x24
					if( xTaskRemoveFromEventList( &( pxQueue->xTasksWaitingToReceive ) ) != pdFALSE )
 800e702:	4630      	mov	r0, r6
				if( listLIST_IS_EMPTY( &( pxQueue->xTasksWaitingToReceive ) ) == pdFALSE )
 800e704:	b153      	cbz	r3, 800e71c <xQueueReceive+0xb8>
					if( xTaskRemoveFromEventList( &( pxQueue->xTasksWaitingToReceive ) ) != pdFALSE )
 800e706:	f001 f8fb 	bl	800f900 <xTaskRemoveFromEventList>
 800e70a:	2800      	cmp	r0, #0
 800e70c:	d0f4      	beq.n	800e6f8 <xQueueReceive+0x94>
						vTaskMissedYield();
 800e70e:	f001 f993 	bl	800fa38 <vTaskMissedYield>
			--cTxLock;
 800e712:	1e6b      	subs	r3, r5, #1
 800e714:	b2da      	uxtb	r2, r3
 800e716:	b25d      	sxtb	r5, r3
		while( cTxLock > queueLOCKED_UNMODIFIED )
 800e718:	2a00      	cmp	r2, #0
 800e71a:	d1f1      	bne.n	800e700 <xQueueReceive+0x9c>
		pxQueue->cTxLock = queueUNLOCKED;
 800e71c:	23ff      	movs	r3, #255	; 0xff
 800e71e:	f884 3045 	strb.w	r3, [r4, #69]	; 0x45
	taskEXIT_CRITICAL();
 800e722:	f7ff fa91 	bl	800dc48 <vPortExitCritical>
	taskENTER_CRITICAL();
 800e726:	f7ff fa6d 	bl	800dc04 <vPortEnterCritical>
		int8_t cRxLock = pxQueue->cRxLock;
 800e72a:	f894 3044 	ldrb.w	r3, [r4, #68]	; 0x44
 800e72e:	b25d      	sxtb	r5, r3
		while( cRxLock > queueLOCKED_UNMODIFIED )
 800e730:	2d00      	cmp	r5, #0
 800e732:	dd14      	ble.n	800e75e <xQueueReceive+0xfa>
				if( xTaskRemoveFromEventList( &( pxQueue->xTasksWaitingToSend ) ) != pdFALSE )
 800e734:	f104 0910 	add.w	r9, r4, #16
 800e738:	e003      	b.n	800e742 <xQueueReceive+0xde>
				--cRxLock;
 800e73a:	1e6b      	subs	r3, r5, #1
 800e73c:	b2da      	uxtb	r2, r3
 800e73e:	b25d      	sxtb	r5, r3
		while( cRxLock > queueLOCKED_UNMODIFIED )
 800e740:	b16a      	cbz	r2, 800e75e <xQueueReceive+0xfa>
			if( listLIST_IS_EMPTY( &( pxQueue->xTasksWaitingToSend ) ) == pdFALSE )
 800e742:	6923      	ldr	r3, [r4, #16]
				if( xTaskRemoveFromEventList( &( pxQueue->xTasksWaitingToSend ) ) != pdFALSE )
 800e744:	4648      	mov	r0, r9
			if( listLIST_IS_EMPTY( &( pxQueue->xTasksWaitingToSend ) ) == pdFALSE )
 800e746:	b153      	cbz	r3, 800e75e <xQueueReceive+0xfa>
				if( xTaskRemoveFromEventList( &( pxQueue->xTasksWaitingToSend ) ) != pdFALSE )
 800e748:	f001 f8da 	bl	800f900 <xTaskRemoveFromEventList>
 800e74c:	2800      	cmp	r0, #0
 800e74e:	d0f4      	beq.n	800e73a <xQueueReceive+0xd6>
					vTaskMissedYield();
 800e750:	f001 f972 	bl	800fa38 <vTaskMissedYield>
				--cRxLock;
 800e754:	1e6b      	subs	r3, r5, #1
 800e756:	b2da      	uxtb	r2, r3
 800e758:	b25d      	sxtb	r5, r3
		while( cRxLock > queueLOCKED_UNMODIFIED )
 800e75a:	2a00      	cmp	r2, #0
 800e75c:	d1f1      	bne.n	800e742 <xQueueReceive+0xde>
		pxQueue->cRxLock = queueUNLOCKED;
 800e75e:	23ff      	movs	r3, #255	; 0xff
 800e760:	f884 3044 	strb.w	r3, [r4, #68]	; 0x44
	taskEXIT_CRITICAL();
 800e764:	f7ff fa70 	bl	800dc48 <vPortExitCritical>
				( void ) xTaskResumeAll();
 800e768:	f000 ffca 	bl	800f700 <xTaskResumeAll>
		taskENTER_CRITICAL();
 800e76c:	e060      	b.n	800e830 <xQueueReceive+0x1cc>
	configASSERT( !( ( ( pvBuffer ) == NULL ) && ( ( pxQueue )->uxItemSize != ( UBaseType_t ) 0U ) ) );
 800e76e:	6c03      	ldr	r3, [r0, #64]	; 0x40
 800e770:	2b00      	cmp	r3, #0
 800e772:	d082      	beq.n	800e67a <xQueueReceive+0x16>
	__asm volatile
 800e774:	f04f 0350 	mov.w	r3, #80	; 0x50
 800e778:	f383 8811 	msr	BASEPRI, r3
 800e77c:	f3bf 8f6f 	isb	sy
 800e780:	f3bf 8f4f 	dsb	sy
 800e784:	e7fe      	b.n	800e784 <xQueueReceive+0x120>
		configASSERT( !( ( xTaskGetSchedulerState() == taskSCHEDULER_SUSPENDED ) && ( xTicksToWait != 0 ) ) );
 800e786:	9b01      	ldr	r3, [sp, #4]
 800e788:	2b00      	cmp	r3, #0
 800e78a:	f43f af7b 	beq.w	800e684 <xQueueReceive+0x20>
 800e78e:	f04f 0350 	mov.w	r3, #80	; 0x50
 800e792:	f383 8811 	msr	BASEPRI, r3
 800e796:	f3bf 8f6f 	isb	sy
 800e79a:	f3bf 8f4f 	dsb	sy
 800e79e:	e7fe      	b.n	800e79e <xQueueReceive+0x13a>
	taskENTER_CRITICAL();
 800e7a0:	f7ff fa30 	bl	800dc04 <vPortEnterCritical>
		int8_t cTxLock = pxQueue->cTxLock;
 800e7a4:	f894 3045 	ldrb.w	r3, [r4, #69]	; 0x45
 800e7a8:	b25d      	sxtb	r5, r3
		while( cTxLock > queueLOCKED_UNMODIFIED )
 800e7aa:	2d00      	cmp	r5, #0
 800e7ac:	dc04      	bgt.n	800e7b8 <xQueueReceive+0x154>
 800e7ae:	e011      	b.n	800e7d4 <xQueueReceive+0x170>
			--cTxLock;
 800e7b0:	1e6b      	subs	r3, r5, #1
 800e7b2:	b2da      	uxtb	r2, r3
 800e7b4:	b25d      	sxtb	r5, r3
		while( cTxLock > queueLOCKED_UNMODIFIED )
 800e7b6:	b16a      	cbz	r2, 800e7d4 <xQueueReceive+0x170>
				if( listLIST_IS_EMPTY( &( pxQueue->xTasksWaitingToReceive ) ) == pdFALSE )
 800e7b8:	6a63      	ldr	r3, [r4, #36]	; 0x24
					if( xTaskRemoveFromEventList( &( pxQueue->xTasksWaitingToReceive ) ) != pdFALSE )
 800e7ba:	4630      	mov	r0, r6
				if( listLIST_IS_EMPTY( &( pxQueue->xTasksWaitingToReceive ) ) == pdFALSE )
 800e7bc:	b153      	cbz	r3, 800e7d4 <xQueueReceive+0x170>
					if( xTaskRemoveFromEventList( &( pxQueue->xTasksWaitingToReceive ) ) != pdFALSE )
 800e7be:	f001 f89f 	bl	800f900 <xTaskRemoveFromEventList>
 800e7c2:	2800      	cmp	r0, #0
 800e7c4:	d0f4      	beq.n	800e7b0 <xQueueReceive+0x14c>
						vTaskMissedYield();
 800e7c6:	f001 f937 	bl	800fa38 <vTaskMissedYield>
			--cTxLock;
 800e7ca:	1e6b      	subs	r3, r5, #1
 800e7cc:	b2da      	uxtb	r2, r3
 800e7ce:	b25d      	sxtb	r5, r3
		while( cTxLock > queueLOCKED_UNMODIFIED )
 800e7d0:	2a00      	cmp	r2, #0
 800e7d2:	d1f1      	bne.n	800e7b8 <xQueueReceive+0x154>
		pxQueue->cTxLock = queueUNLOCKED;
 800e7d4:	23ff      	movs	r3, #255	; 0xff
 800e7d6:	f884 3045 	strb.w	r3, [r4, #69]	; 0x45
	taskEXIT_CRITICAL();
 800e7da:	f7ff fa35 	bl	800dc48 <vPortExitCritical>
	taskENTER_CRITICAL();
 800e7de:	f7ff fa11 	bl	800dc04 <vPortEnterCritical>
		int8_t cRxLock = pxQueue->cRxLock;
 800e7e2:	f894 3044 	ldrb.w	r3, [r4, #68]	; 0x44
 800e7e6:	b25d      	sxtb	r5, r3
		while( cRxLock > queueLOCKED_UNMODIFIED )
 800e7e8:	2d00      	cmp	r5, #0
 800e7ea:	dd14      	ble.n	800e816 <xQueueReceive+0x1b2>
				if( xTaskRemoveFromEventList( &( pxQueue->xTasksWaitingToSend ) ) != pdFALSE )
 800e7ec:	f104 0910 	add.w	r9, r4, #16
 800e7f0:	e003      	b.n	800e7fa <xQueueReceive+0x196>
				--cRxLock;
 800e7f2:	1e6b      	subs	r3, r5, #1
 800e7f4:	b2da      	uxtb	r2, r3
 800e7f6:	b25d      	sxtb	r5, r3
		while( cRxLock > queueLOCKED_UNMODIFIED )
 800e7f8:	b16a      	cbz	r2, 800e816 <xQueueReceive+0x1b2>
			if( listLIST_IS_EMPTY( &( pxQueue->xTasksWaitingToSend ) ) == pdFALSE )
 800e7fa:	6923      	ldr	r3, [r4, #16]
				if( xTaskRemoveFromEventList( &( pxQueue->xTasksWaitingToSend ) ) != pdFALSE )
 800e7fc:	4648      	mov	r0, r9
			if( listLIST_IS_EMPTY( &( pxQueue->xTasksWaitingToSend ) ) == pdFALSE )
 800e7fe:	b153      	cbz	r3, 800e816 <xQueueReceive+0x1b2>
				if( xTaskRemoveFromEventList( &( pxQueue->xTasksWaitingToSend ) ) != pdFALSE )
 800e800:	f001 f87e 	bl	800f900 <xTaskRemoveFromEventList>
 800e804:	2800      	cmp	r0, #0
 800e806:	d0f4      	beq.n	800e7f2 <xQueueReceive+0x18e>
					vTaskMissedYield();
 800e808:	f001 f916 	bl	800fa38 <vTaskMissedYield>
				--cRxLock;
 800e80c:	1e6b      	subs	r3, r5, #1
 800e80e:	b2da      	uxtb	r2, r3
 800e810:	b25d      	sxtb	r5, r3
		while( cRxLock > queueLOCKED_UNMODIFIED )
 800e812:	2a00      	cmp	r2, #0
 800e814:	d1f1      	bne.n	800e7fa <xQueueReceive+0x196>
		pxQueue->cRxLock = queueUNLOCKED;
 800e816:	23ff      	movs	r3, #255	; 0xff
 800e818:	f884 3044 	strb.w	r3, [r4, #68]	; 0x44
	taskEXIT_CRITICAL();
 800e81c:	f7ff fa14 	bl	800dc48 <vPortExitCritical>
			( void ) xTaskResumeAll();
 800e820:	f000 ff6e 	bl	800f700 <xTaskResumeAll>
	taskENTER_CRITICAL();
 800e824:	f7ff f9ee 	bl	800dc04 <vPortEnterCritical>
		if( pxQueue->uxMessagesWaiting == ( UBaseType_t )  0 )
 800e828:	6ba3      	ldr	r3, [r4, #56]	; 0x38
 800e82a:	b153      	cbz	r3, 800e842 <xQueueReceive+0x1de>
	taskEXIT_CRITICAL();
 800e82c:	f7ff fa0c 	bl	800dc48 <vPortExitCritical>
		taskENTER_CRITICAL();
 800e830:	f7ff f9e8 	bl	800dc04 <vPortEnterCritical>
			const UBaseType_t uxMessagesWaiting = pxQueue->uxMessagesWaiting;
 800e834:	6ba5      	ldr	r5, [r4, #56]	; 0x38
			if( uxMessagesWaiting > ( UBaseType_t ) 0 )
 800e836:	2d00      	cmp	r5, #0
 800e838:	d162      	bne.n	800e900 <xQueueReceive+0x29c>
				if( xTicksToWait == ( TickType_t ) 0 )
 800e83a:	9b01      	ldr	r3, [sp, #4]
 800e83c:	2b00      	cmp	r3, #0
 800e83e:	f47f af31 	bne.w	800e6a4 <xQueueReceive+0x40>
					taskEXIT_CRITICAL();
 800e842:	f7ff fa01 	bl	800dc48 <vPortExitCritical>
					return errQUEUE_EMPTY;
 800e846:	2000      	movs	r0, #0
}
 800e848:	b005      	add	sp, #20
 800e84a:	e8bd 83f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, pc}
	taskEXIT_CRITICAL();
 800e84e:	f7ff f9fb 	bl	800dc48 <vPortExitCritical>
				vTaskPlaceOnEventList( &( pxQueue->xTasksWaitingToReceive ), xTicksToWait );
 800e852:	9901      	ldr	r1, [sp, #4]
 800e854:	4630      	mov	r0, r6
 800e856:	f000 ffc5 	bl	800f7e4 <vTaskPlaceOnEventList>
	taskENTER_CRITICAL();
 800e85a:	f7ff f9d3 	bl	800dc04 <vPortEnterCritical>
		int8_t cTxLock = pxQueue->cTxLock;
 800e85e:	f894 3045 	ldrb.w	r3, [r4, #69]	; 0x45
 800e862:	b25d      	sxtb	r5, r3
		while( cTxLock > queueLOCKED_UNMODIFIED )
 800e864:	2d00      	cmp	r5, #0
 800e866:	dc04      	bgt.n	800e872 <xQueueReceive+0x20e>
 800e868:	e011      	b.n	800e88e <xQueueReceive+0x22a>
			--cTxLock;
 800e86a:	1e6b      	subs	r3, r5, #1
 800e86c:	b2da      	uxtb	r2, r3
 800e86e:	b25d      	sxtb	r5, r3
		while( cTxLock > queueLOCKED_UNMODIFIED )
 800e870:	b16a      	cbz	r2, 800e88e <xQueueReceive+0x22a>
				if( listLIST_IS_EMPTY( &( pxQueue->xTasksWaitingToReceive ) ) == pdFALSE )
 800e872:	6a63      	ldr	r3, [r4, #36]	; 0x24
					if( xTaskRemoveFromEventList( &( pxQueue->xTasksWaitingToReceive ) ) != pdFALSE )
 800e874:	4630      	mov	r0, r6
				if( listLIST_IS_EMPTY( &( pxQueue->xTasksWaitingToReceive ) ) == pdFALSE )
 800e876:	b153      	cbz	r3, 800e88e <xQueueReceive+0x22a>
					if( xTaskRemoveFromEventList( &( pxQueue->xTasksWaitingToReceive ) ) != pdFALSE )
 800e878:	f001 f842 	bl	800f900 <xTaskRemoveFromEventList>
 800e87c:	2800      	cmp	r0, #0
 800e87e:	d0f4      	beq.n	800e86a <xQueueReceive+0x206>
						vTaskMissedYield();
 800e880:	f001 f8da 	bl	800fa38 <vTaskMissedYield>
			--cTxLock;
 800e884:	1e6b      	subs	r3, r5, #1
 800e886:	b2da      	uxtb	r2, r3
 800e888:	b25d      	sxtb	r5, r3
		while( cTxLock > queueLOCKED_UNMODIFIED )
 800e88a:	2a00      	cmp	r2, #0
 800e88c:	d1f1      	bne.n	800e872 <xQueueReceive+0x20e>
		pxQueue->cTxLock = queueUNLOCKED;
 800e88e:	23ff      	movs	r3, #255	; 0xff
 800e890:	f884 3045 	strb.w	r3, [r4, #69]	; 0x45
	taskEXIT_CRITICAL();
 800e894:	f7ff f9d8 	bl	800dc48 <vPortExitCritical>
	taskENTER_CRITICAL();
 800e898:	f7ff f9b4 	bl	800dc04 <vPortEnterCritical>
		int8_t cRxLock = pxQueue->cRxLock;
 800e89c:	f894 3044 	ldrb.w	r3, [r4, #68]	; 0x44
 800e8a0:	b25d      	sxtb	r5, r3
		while( cRxLock > queueLOCKED_UNMODIFIED )
 800e8a2:	2d00      	cmp	r5, #0
 800e8a4:	dd14      	ble.n	800e8d0 <xQueueReceive+0x26c>
				if( xTaskRemoveFromEventList( &( pxQueue->xTasksWaitingToSend ) ) != pdFALSE )
 800e8a6:	f104 0910 	add.w	r9, r4, #16
 800e8aa:	e003      	b.n	800e8b4 <xQueueReceive+0x250>
				--cRxLock;
 800e8ac:	1e6b      	subs	r3, r5, #1
 800e8ae:	b2da      	uxtb	r2, r3
 800e8b0:	b25d      	sxtb	r5, r3
		while( cRxLock > queueLOCKED_UNMODIFIED )
 800e8b2:	b16a      	cbz	r2, 800e8d0 <xQueueReceive+0x26c>
			if( listLIST_IS_EMPTY( &( pxQueue->xTasksWaitingToSend ) ) == pdFALSE )
 800e8b4:	6923      	ldr	r3, [r4, #16]
				if( xTaskRemoveFromEventList( &( pxQueue->xTasksWaitingToSend ) ) != pdFALSE )
 800e8b6:	4648      	mov	r0, r9
			if( listLIST_IS_EMPTY( &( pxQueue->xTasksWaitingToSend ) ) == pdFALSE )
 800e8b8:	b153      	cbz	r3, 800e8d0 <xQueueReceive+0x26c>
				if( xTaskRemoveFromEventList( &( pxQueue->xTasksWaitingToSend ) ) != pdFALSE )
 800e8ba:	f001 f821 	bl	800f900 <xTaskRemoveFromEventList>
 800e8be:	2800      	cmp	r0, #0
 800e8c0:	d0f4      	beq.n	800e8ac <xQueueReceive+0x248>
					vTaskMissedYield();
 800e8c2:	f001 f8b9 	bl	800fa38 <vTaskMissedYield>
				--cRxLock;
 800e8c6:	1e6b      	subs	r3, r5, #1
 800e8c8:	b2da      	uxtb	r2, r3
 800e8ca:	b25d      	sxtb	r5, r3
		while( cRxLock > queueLOCKED_UNMODIFIED )
 800e8cc:	2a00      	cmp	r2, #0
 800e8ce:	d1f1      	bne.n	800e8b4 <xQueueReceive+0x250>
		pxQueue->cRxLock = queueUNLOCKED;
 800e8d0:	23ff      	movs	r3, #255	; 0xff
 800e8d2:	f884 3044 	strb.w	r3, [r4, #68]	; 0x44
	taskEXIT_CRITICAL();
 800e8d6:	f7ff f9b7 	bl	800dc48 <vPortExitCritical>
				if( xTaskResumeAll() == pdFALSE )
 800e8da:	f000 ff11 	bl	800f700 <xTaskResumeAll>
 800e8de:	2800      	cmp	r0, #0
 800e8e0:	d1a6      	bne.n	800e830 <xQueueReceive+0x1cc>
					portYIELD_WITHIN_API();
 800e8e2:	f04f 23e0 	mov.w	r3, #3758153728	; 0xe000e000
 800e8e6:	f04f 5280 	mov.w	r2, #268435456	; 0x10000000
 800e8ea:	f8c3 2d04 	str.w	r2, [r3, #3332]	; 0xd04
 800e8ee:	f3bf 8f4f 	dsb	sy
 800e8f2:	f3bf 8f6f 	isb	sy
		taskENTER_CRITICAL();
 800e8f6:	f7ff f985 	bl	800dc04 <vPortEnterCritical>
			const UBaseType_t uxMessagesWaiting = pxQueue->uxMessagesWaiting;
 800e8fa:	6ba5      	ldr	r5, [r4, #56]	; 0x38
			if( uxMessagesWaiting > ( UBaseType_t ) 0 )
 800e8fc:	2d00      	cmp	r5, #0
 800e8fe:	d09c      	beq.n	800e83a <xQueueReceive+0x1d6>
	if( pxQueue->uxItemSize != ( UBaseType_t ) 0 )
 800e900:	6c22      	ldr	r2, [r4, #64]	; 0x40
 800e902:	b152      	cbz	r2, 800e91a <xQueueReceive+0x2b6>
		pxQueue->u.xQueue.pcReadFrom += pxQueue->uxItemSize; /*lint !e9016 Pointer arithmetic on char types ok, especially in this use case where it is the clearest way of conveying intent. */
 800e904:	68e1      	ldr	r1, [r4, #12]
		if( pxQueue->u.xQueue.pcReadFrom >= pxQueue->u.xQueue.pcTail ) /*lint !e946 MISRA exception justified as use of the relational operator is the cleanest solutions. */
 800e906:	68a3      	ldr	r3, [r4, #8]
		pxQueue->u.xQueue.pcReadFrom += pxQueue->uxItemSize; /*lint !e9016 Pointer arithmetic on char types ok, especially in this use case where it is the clearest way of conveying intent. */
 800e908:	4411      	add	r1, r2
		if( pxQueue->u.xQueue.pcReadFrom >= pxQueue->u.xQueue.pcTail ) /*lint !e946 MISRA exception justified as use of the relational operator is the cleanest solutions. */
 800e90a:	4299      	cmp	r1, r3
		pxQueue->u.xQueue.pcReadFrom += pxQueue->uxItemSize; /*lint !e9016 Pointer arithmetic on char types ok, especially in this use case where it is the clearest way of conveying intent. */
 800e90c:	60e1      	str	r1, [r4, #12]
			pxQueue->u.xQueue.pcReadFrom = pxQueue->pcHead;
 800e90e:	bf24      	itt	cs
 800e910:	6821      	ldrcs	r1, [r4, #0]
 800e912:	60e1      	strcs	r1, [r4, #12]
		( void ) memcpy( ( void * ) pvBuffer, ( void * ) pxQueue->u.xQueue.pcReadFrom, ( size_t ) pxQueue->uxItemSize ); /*lint !e961 !e418 !e9087 MISRA exception as the casts are only redundant for some ports.  Also previous logic ensures a null pointer can only be passed to memcpy() when the count is 0.  Cast to void required by function signature and safe as no alignment requirement and copy length specified in bytes. */
 800e914:	4638      	mov	r0, r7
 800e916:	f01d f84e 	bl	802b9b6 <memcpy>
				pxQueue->uxMessagesWaiting = uxMessagesWaiting - ( UBaseType_t ) 1;
 800e91a:	3d01      	subs	r5, #1
 800e91c:	63a5      	str	r5, [r4, #56]	; 0x38
				if( listLIST_IS_EMPTY( &( pxQueue->xTasksWaitingToSend ) ) == pdFALSE )
 800e91e:	6923      	ldr	r3, [r4, #16]
 800e920:	b963      	cbnz	r3, 800e93c <xQueueReceive+0x2d8>
				taskEXIT_CRITICAL();
 800e922:	f7ff f991 	bl	800dc48 <vPortExitCritical>
				return pdPASS;
 800e926:	2001      	movs	r0, #1
 800e928:	e78e      	b.n	800e848 <xQueueReceive+0x1e4>
 800e92a:	f04f 0350 	mov.w	r3, #80	; 0x50
 800e92e:	f383 8811 	msr	BASEPRI, r3
 800e932:	f3bf 8f6f 	isb	sy
 800e936:	f3bf 8f4f 	dsb	sy
	configASSERT( ( pxQueue ) );
 800e93a:	e7fe      	b.n	800e93a <xQueueReceive+0x2d6>
					if( xTaskRemoveFromEventList( &( pxQueue->xTasksWaitingToSend ) ) != pdFALSE )
 800e93c:	f104 0010 	add.w	r0, r4, #16
 800e940:	f000 ffde 	bl	800f900 <xTaskRemoveFromEventList>
 800e944:	2800      	cmp	r0, #0
 800e946:	d0ec      	beq.n	800e922 <xQueueReceive+0x2be>
						queueYIELD_IF_USING_PREEMPTION();
 800e948:	f04f 23e0 	mov.w	r3, #3758153728	; 0xe000e000
 800e94c:	f04f 5280 	mov.w	r2, #268435456	; 0x10000000
 800e950:	f8c3 2d04 	str.w	r2, [r3, #3332]	; 0xd04
 800e954:	f3bf 8f4f 	dsb	sy
 800e958:	f3bf 8f6f 	isb	sy
 800e95c:	e7e1      	b.n	800e922 <xQueueReceive+0x2be>
 800e95e:	bf00      	nop

0800e960 <xQueueSemaphoreTake>:
{
 800e960:	e92d 41f0 	stmdb	sp!, {r4, r5, r6, r7, r8, lr}
 800e964:	b084      	sub	sp, #16
 800e966:	9101      	str	r1, [sp, #4]
	configASSERT( ( pxQueue ) );
 800e968:	2800      	cmp	r0, #0
 800e96a:	d05c      	beq.n	800ea26 <xQueueSemaphoreTake+0xc6>
	configASSERT( pxQueue->uxItemSize == 0 );
 800e96c:	6c07      	ldr	r7, [r0, #64]	; 0x40
 800e96e:	4604      	mov	r4, r0
 800e970:	b147      	cbz	r7, 800e984 <xQueueSemaphoreTake+0x24>
 800e972:	f04f 0350 	mov.w	r3, #80	; 0x50
 800e976:	f383 8811 	msr	BASEPRI, r3
 800e97a:	f3bf 8f6f 	isb	sy
 800e97e:	f3bf 8f4f 	dsb	sy
 800e982:	e7fe      	b.n	800e982 <xQueueSemaphoreTake+0x22>
		configASSERT( !( ( xTaskGetSchedulerState() == taskSCHEDULER_SUSPENDED ) && ( xTicksToWait != 0 ) ) );
 800e984:	f001 f85e 	bl	800fa44 <xTaskGetSchedulerState>
 800e988:	4605      	mov	r5, r0
 800e98a:	2800      	cmp	r0, #0
 800e98c:	d054      	beq.n	800ea38 <xQueueSemaphoreTake+0xd8>
 800e98e:	463d      	mov	r5, r7
					if( xTaskRemoveFromEventList( &( pxQueue->xTasksWaitingToReceive ) ) != pdFALSE )
 800e990:	f104 0624 	add.w	r6, r4, #36	; 0x24
		taskENTER_CRITICAL();
 800e994:	f7ff f936 	bl	800dc04 <vPortEnterCritical>
			const UBaseType_t uxSemaphoreCount = pxQueue->uxMessagesWaiting;
 800e998:	6ba3      	ldr	r3, [r4, #56]	; 0x38
			if( uxSemaphoreCount > ( UBaseType_t ) 0 )
 800e99a:	2b00      	cmp	r3, #0
 800e99c:	f040 8148 	bne.w	800ec30 <xQueueSemaphoreTake+0x2d0>
				if( xTicksToWait == ( TickType_t ) 0 )
 800e9a0:	9b01      	ldr	r3, [sp, #4]
 800e9a2:	2b00      	cmp	r3, #0
 800e9a4:	f000 813a 	beq.w	800ec1c <xQueueSemaphoreTake+0x2bc>
				else if( xEntryTimeSet == pdFALSE )
 800e9a8:	2d00      	cmp	r5, #0
 800e9aa:	f000 809d 	beq.w	800eae8 <xQueueSemaphoreTake+0x188>
		taskEXIT_CRITICAL();
 800e9ae:	f7ff f94b 	bl	800dc48 <vPortExitCritical>
		vTaskSuspendAll();
 800e9b2:	f000 fe9d 	bl	800f6f0 <vTaskSuspendAll>
		prvLockQueue( pxQueue );
 800e9b6:	f7ff f925 	bl	800dc04 <vPortEnterCritical>
 800e9ba:	f894 3044 	ldrb.w	r3, [r4, #68]	; 0x44
 800e9be:	2bff      	cmp	r3, #255	; 0xff
 800e9c0:	bf04      	itt	eq
 800e9c2:	2300      	moveq	r3, #0
 800e9c4:	f884 3044 	strbeq.w	r3, [r4, #68]	; 0x44
 800e9c8:	f894 3045 	ldrb.w	r3, [r4, #69]	; 0x45
 800e9cc:	2bff      	cmp	r3, #255	; 0xff
 800e9ce:	bf04      	itt	eq
 800e9d0:	2300      	moveq	r3, #0
 800e9d2:	f884 3045 	strbeq.w	r3, [r4, #69]	; 0x45
 800e9d6:	f7ff f937 	bl	800dc48 <vPortExitCritical>
		if( xTaskCheckForTimeOut( &xTimeOut, &xTicksToWait ) == pdFALSE )
 800e9da:	a901      	add	r1, sp, #4
 800e9dc:	a802      	add	r0, sp, #8
 800e9de:	f000 ffe3 	bl	800f9a8 <xTaskCheckForTimeOut>
 800e9e2:	2800      	cmp	r0, #0
 800e9e4:	d135      	bne.n	800ea52 <xQueueSemaphoreTake+0xf2>
	taskENTER_CRITICAL();
 800e9e6:	f7ff f90d 	bl	800dc04 <vPortEnterCritical>
		if( pxQueue->uxMessagesWaiting == ( UBaseType_t )  0 )
 800e9ea:	6ba3      	ldr	r3, [r4, #56]	; 0x38
 800e9ec:	2b00      	cmp	r3, #0
 800e9ee:	f000 80a4 	beq.w	800eb3a <xQueueSemaphoreTake+0x1da>
	taskEXIT_CRITICAL();
 800e9f2:	f7ff f929 	bl	800dc48 <vPortExitCritical>
	taskENTER_CRITICAL();
 800e9f6:	f7ff f905 	bl	800dc04 <vPortEnterCritical>
		int8_t cTxLock = pxQueue->cTxLock;
 800e9fa:	f894 3045 	ldrb.w	r3, [r4, #69]	; 0x45
 800e9fe:	b25d      	sxtb	r5, r3
		while( cTxLock > queueLOCKED_UNMODIFIED )
 800ea00:	2d00      	cmp	r5, #0
 800ea02:	dc05      	bgt.n	800ea10 <xQueueSemaphoreTake+0xb0>
 800ea04:	e074      	b.n	800eaf0 <xQueueSemaphoreTake+0x190>
			--cTxLock;
 800ea06:	1e6b      	subs	r3, r5, #1
 800ea08:	b2da      	uxtb	r2, r3
 800ea0a:	b25d      	sxtb	r5, r3
		while( cTxLock > queueLOCKED_UNMODIFIED )
 800ea0c:	2a00      	cmp	r2, #0
 800ea0e:	d06f      	beq.n	800eaf0 <xQueueSemaphoreTake+0x190>
				if( listLIST_IS_EMPTY( &( pxQueue->xTasksWaitingToReceive ) ) == pdFALSE )
 800ea10:	6a63      	ldr	r3, [r4, #36]	; 0x24
					if( xTaskRemoveFromEventList( &( pxQueue->xTasksWaitingToReceive ) ) != pdFALSE )
 800ea12:	4630      	mov	r0, r6
				if( listLIST_IS_EMPTY( &( pxQueue->xTasksWaitingToReceive ) ) == pdFALSE )
 800ea14:	2b00      	cmp	r3, #0
 800ea16:	d06b      	beq.n	800eaf0 <xQueueSemaphoreTake+0x190>
					if( xTaskRemoveFromEventList( &( pxQueue->xTasksWaitingToReceive ) ) != pdFALSE )
 800ea18:	f000 ff72 	bl	800f900 <xTaskRemoveFromEventList>
 800ea1c:	2800      	cmp	r0, #0
 800ea1e:	d0f2      	beq.n	800ea06 <xQueueSemaphoreTake+0xa6>
						vTaskMissedYield();
 800ea20:	f001 f80a 	bl	800fa38 <vTaskMissedYield>
 800ea24:	e7ef      	b.n	800ea06 <xQueueSemaphoreTake+0xa6>
 800ea26:	f04f 0350 	mov.w	r3, #80	; 0x50
 800ea2a:	f383 8811 	msr	BASEPRI, r3
 800ea2e:	f3bf 8f6f 	isb	sy
 800ea32:	f3bf 8f4f 	dsb	sy
	configASSERT( ( pxQueue ) );
 800ea36:	e7fe      	b.n	800ea36 <xQueueSemaphoreTake+0xd6>
		configASSERT( !( ( xTaskGetSchedulerState() == taskSCHEDULER_SUSPENDED ) && ( xTicksToWait != 0 ) ) );
 800ea38:	9b01      	ldr	r3, [sp, #4]
 800ea3a:	2b00      	cmp	r3, #0
 800ea3c:	f000 80d4 	beq.w	800ebe8 <xQueueSemaphoreTake+0x288>
 800ea40:	f04f 0350 	mov.w	r3, #80	; 0x50
 800ea44:	f383 8811 	msr	BASEPRI, r3
 800ea48:	f3bf 8f6f 	isb	sy
 800ea4c:	f3bf 8f4f 	dsb	sy
 800ea50:	e7fe      	b.n	800ea50 <xQueueSemaphoreTake+0xf0>
	taskENTER_CRITICAL();
 800ea52:	f7ff f8d7 	bl	800dc04 <vPortEnterCritical>
		int8_t cTxLock = pxQueue->cTxLock;
 800ea56:	f894 3045 	ldrb.w	r3, [r4, #69]	; 0x45
 800ea5a:	b25d      	sxtb	r5, r3
		while( cTxLock > queueLOCKED_UNMODIFIED )
 800ea5c:	2d00      	cmp	r5, #0
 800ea5e:	dc04      	bgt.n	800ea6a <xQueueSemaphoreTake+0x10a>
 800ea60:	e011      	b.n	800ea86 <xQueueSemaphoreTake+0x126>
			--cTxLock;
 800ea62:	1e6b      	subs	r3, r5, #1
 800ea64:	b2da      	uxtb	r2, r3
 800ea66:	b25d      	sxtb	r5, r3
		while( cTxLock > queueLOCKED_UNMODIFIED )
 800ea68:	b16a      	cbz	r2, 800ea86 <xQueueSemaphoreTake+0x126>
				if( listLIST_IS_EMPTY( &( pxQueue->xTasksWaitingToReceive ) ) == pdFALSE )
 800ea6a:	6a63      	ldr	r3, [r4, #36]	; 0x24
					if( xTaskRemoveFromEventList( &( pxQueue->xTasksWaitingToReceive ) ) != pdFALSE )
 800ea6c:	4630      	mov	r0, r6
				if( listLIST_IS_EMPTY( &( pxQueue->xTasksWaitingToReceive ) ) == pdFALSE )
 800ea6e:	b153      	cbz	r3, 800ea86 <xQueueSemaphoreTake+0x126>
					if( xTaskRemoveFromEventList( &( pxQueue->xTasksWaitingToReceive ) ) != pdFALSE )
 800ea70:	f000 ff46 	bl	800f900 <xTaskRemoveFromEventList>
 800ea74:	2800      	cmp	r0, #0
 800ea76:	d0f4      	beq.n	800ea62 <xQueueSemaphoreTake+0x102>
						vTaskMissedYield();
 800ea78:	f000 ffde 	bl	800fa38 <vTaskMissedYield>
			--cTxLock;
 800ea7c:	1e6b      	subs	r3, r5, #1
 800ea7e:	b2da      	uxtb	r2, r3
 800ea80:	b25d      	sxtb	r5, r3
		while( cTxLock > queueLOCKED_UNMODIFIED )
 800ea82:	2a00      	cmp	r2, #0
 800ea84:	d1f1      	bne.n	800ea6a <xQueueSemaphoreTake+0x10a>
		pxQueue->cTxLock = queueUNLOCKED;
 800ea86:	23ff      	movs	r3, #255	; 0xff
 800ea88:	f884 3045 	strb.w	r3, [r4, #69]	; 0x45
	taskEXIT_CRITICAL();
 800ea8c:	f7ff f8dc 	bl	800dc48 <vPortExitCritical>
	taskENTER_CRITICAL();
 800ea90:	f7ff f8b8 	bl	800dc04 <vPortEnterCritical>
		int8_t cRxLock = pxQueue->cRxLock;
 800ea94:	f894 3044 	ldrb.w	r3, [r4, #68]	; 0x44
 800ea98:	b25d      	sxtb	r5, r3
		while( cRxLock > queueLOCKED_UNMODIFIED )
 800ea9a:	2d00      	cmp	r5, #0
 800ea9c:	dd14      	ble.n	800eac8 <xQueueSemaphoreTake+0x168>
				if( xTaskRemoveFromEventList( &( pxQueue->xTasksWaitingToSend ) ) != pdFALSE )
 800ea9e:	f104 0810 	add.w	r8, r4, #16
 800eaa2:	e003      	b.n	800eaac <xQueueSemaphoreTake+0x14c>
				--cRxLock;
 800eaa4:	1e6b      	subs	r3, r5, #1
 800eaa6:	b2da      	uxtb	r2, r3
 800eaa8:	b25d      	sxtb	r5, r3
		while( cRxLock > queueLOCKED_UNMODIFIED )
 800eaaa:	b16a      	cbz	r2, 800eac8 <xQueueSemaphoreTake+0x168>
			if( listLIST_IS_EMPTY( &( pxQueue->xTasksWaitingToSend ) ) == pdFALSE )
 800eaac:	6923      	ldr	r3, [r4, #16]
				if( xTaskRemoveFromEventList( &( pxQueue->xTasksWaitingToSend ) ) != pdFALSE )
 800eaae:	4640      	mov	r0, r8
			if( listLIST_IS_EMPTY( &( pxQueue->xTasksWaitingToSend ) ) == pdFALSE )
 800eab0:	b153      	cbz	r3, 800eac8 <xQueueSemaphoreTake+0x168>
				if( xTaskRemoveFromEventList( &( pxQueue->xTasksWaitingToSend ) ) != pdFALSE )
 800eab2:	f000 ff25 	bl	800f900 <xTaskRemoveFromEventList>
 800eab6:	2800      	cmp	r0, #0
 800eab8:	d0f4      	beq.n	800eaa4 <xQueueSemaphoreTake+0x144>
					vTaskMissedYield();
 800eaba:	f000 ffbd 	bl	800fa38 <vTaskMissedYield>
				--cRxLock;
 800eabe:	1e6b      	subs	r3, r5, #1
 800eac0:	b2da      	uxtb	r2, r3
 800eac2:	b25d      	sxtb	r5, r3
		while( cRxLock > queueLOCKED_UNMODIFIED )
 800eac4:	2a00      	cmp	r2, #0
 800eac6:	d1f1      	bne.n	800eaac <xQueueSemaphoreTake+0x14c>
		pxQueue->cRxLock = queueUNLOCKED;
 800eac8:	23ff      	movs	r3, #255	; 0xff
 800eaca:	f884 3044 	strb.w	r3, [r4, #68]	; 0x44
	taskEXIT_CRITICAL();
 800eace:	f7ff f8bb 	bl	800dc48 <vPortExitCritical>
			( void ) xTaskResumeAll();
 800ead2:	f000 fe15 	bl	800f700 <xTaskResumeAll>
	taskENTER_CRITICAL();
 800ead6:	f7ff f895 	bl	800dc04 <vPortEnterCritical>
		if( pxQueue->uxMessagesWaiting == ( UBaseType_t )  0 )
 800eada:	6ba3      	ldr	r3, [r4, #56]	; 0x38
 800eadc:	2b00      	cmp	r3, #0
 800eade:	d07c      	beq.n	800ebda <xQueueSemaphoreTake+0x27a>
	taskEXIT_CRITICAL();
 800eae0:	f7ff f8b2 	bl	800dc48 <vPortExitCritical>
	return xReturn;
 800eae4:	2501      	movs	r5, #1
 800eae6:	e755      	b.n	800e994 <xQueueSemaphoreTake+0x34>
					vTaskInternalSetTimeOutState( &xTimeOut );
 800eae8:	a802      	add	r0, sp, #8
 800eaea:	f000 ff51 	bl	800f990 <vTaskInternalSetTimeOutState>
					xEntryTimeSet = pdTRUE;
 800eaee:	e75e      	b.n	800e9ae <xQueueSemaphoreTake+0x4e>
		pxQueue->cTxLock = queueUNLOCKED;
 800eaf0:	23ff      	movs	r3, #255	; 0xff
 800eaf2:	f884 3045 	strb.w	r3, [r4, #69]	; 0x45
	taskEXIT_CRITICAL();
 800eaf6:	f7ff f8a7 	bl	800dc48 <vPortExitCritical>
	taskENTER_CRITICAL();
 800eafa:	f7ff f883 	bl	800dc04 <vPortEnterCritical>
		int8_t cRxLock = pxQueue->cRxLock;
 800eafe:	f894 3044 	ldrb.w	r3, [r4, #68]	; 0x44
 800eb02:	b25d      	sxtb	r5, r3
		while( cRxLock > queueLOCKED_UNMODIFIED )
 800eb04:	2d00      	cmp	r5, #0
 800eb06:	dd10      	ble.n	800eb2a <xQueueSemaphoreTake+0x1ca>
				if( xTaskRemoveFromEventList( &( pxQueue->xTasksWaitingToSend ) ) != pdFALSE )
 800eb08:	f104 0810 	add.w	r8, r4, #16
 800eb0c:	e003      	b.n	800eb16 <xQueueSemaphoreTake+0x1b6>
				--cRxLock;
 800eb0e:	1e6b      	subs	r3, r5, #1
 800eb10:	b2da      	uxtb	r2, r3
 800eb12:	b25d      	sxtb	r5, r3
		while( cRxLock > queueLOCKED_UNMODIFIED )
 800eb14:	b14a      	cbz	r2, 800eb2a <xQueueSemaphoreTake+0x1ca>
			if( listLIST_IS_EMPTY( &( pxQueue->xTasksWaitingToSend ) ) == pdFALSE )
 800eb16:	6923      	ldr	r3, [r4, #16]
				if( xTaskRemoveFromEventList( &( pxQueue->xTasksWaitingToSend ) ) != pdFALSE )
 800eb18:	4640      	mov	r0, r8
			if( listLIST_IS_EMPTY( &( pxQueue->xTasksWaitingToSend ) ) == pdFALSE )
 800eb1a:	b133      	cbz	r3, 800eb2a <xQueueSemaphoreTake+0x1ca>
				if( xTaskRemoveFromEventList( &( pxQueue->xTasksWaitingToSend ) ) != pdFALSE )
 800eb1c:	f000 fef0 	bl	800f900 <xTaskRemoveFromEventList>
 800eb20:	2800      	cmp	r0, #0
 800eb22:	d0f4      	beq.n	800eb0e <xQueueSemaphoreTake+0x1ae>
					vTaskMissedYield();
 800eb24:	f000 ff88 	bl	800fa38 <vTaskMissedYield>
 800eb28:	e7f1      	b.n	800eb0e <xQueueSemaphoreTake+0x1ae>
		pxQueue->cRxLock = queueUNLOCKED;
 800eb2a:	23ff      	movs	r3, #255	; 0xff
 800eb2c:	f884 3044 	strb.w	r3, [r4, #68]	; 0x44
	taskEXIT_CRITICAL();
 800eb30:	f7ff f88a 	bl	800dc48 <vPortExitCritical>
				( void ) xTaskResumeAll();
 800eb34:	f000 fde4 	bl	800f700 <xTaskResumeAll>
 800eb38:	e7d4      	b.n	800eae4 <xQueueSemaphoreTake+0x184>
	taskEXIT_CRITICAL();
 800eb3a:	f7ff f885 	bl	800dc48 <vPortExitCritical>
					if( pxQueue->uxQueueType == queueQUEUE_IS_MUTEX )
 800eb3e:	6823      	ldr	r3, [r4, #0]
 800eb40:	2b00      	cmp	r3, #0
 800eb42:	d062      	beq.n	800ec0a <xQueueSemaphoreTake+0x2aa>
				vTaskPlaceOnEventList( &( pxQueue->xTasksWaitingToReceive ), xTicksToWait );
 800eb44:	9901      	ldr	r1, [sp, #4]
 800eb46:	4630      	mov	r0, r6
 800eb48:	f000 fe4c 	bl	800f7e4 <vTaskPlaceOnEventList>
	taskENTER_CRITICAL();
 800eb4c:	f7ff f85a 	bl	800dc04 <vPortEnterCritical>
		int8_t cTxLock = pxQueue->cTxLock;
 800eb50:	f894 3045 	ldrb.w	r3, [r4, #69]	; 0x45
 800eb54:	b25d      	sxtb	r5, r3
		while( cTxLock > queueLOCKED_UNMODIFIED )
 800eb56:	2d00      	cmp	r5, #0
 800eb58:	dc04      	bgt.n	800eb64 <xQueueSemaphoreTake+0x204>
 800eb5a:	e00d      	b.n	800eb78 <xQueueSemaphoreTake+0x218>
			--cTxLock;
 800eb5c:	1e6b      	subs	r3, r5, #1
 800eb5e:	b2da      	uxtb	r2, r3
 800eb60:	b25d      	sxtb	r5, r3
		while( cTxLock > queueLOCKED_UNMODIFIED )
 800eb62:	b14a      	cbz	r2, 800eb78 <xQueueSemaphoreTake+0x218>
				if( listLIST_IS_EMPTY( &( pxQueue->xTasksWaitingToReceive ) ) == pdFALSE )
 800eb64:	6a63      	ldr	r3, [r4, #36]	; 0x24
					if( xTaskRemoveFromEventList( &( pxQueue->xTasksWaitingToReceive ) ) != pdFALSE )
 800eb66:	4630      	mov	r0, r6
				if( listLIST_IS_EMPTY( &( pxQueue->xTasksWaitingToReceive ) ) == pdFALSE )
 800eb68:	b133      	cbz	r3, 800eb78 <xQueueSemaphoreTake+0x218>
					if( xTaskRemoveFromEventList( &( pxQueue->xTasksWaitingToReceive ) ) != pdFALSE )
 800eb6a:	f000 fec9 	bl	800f900 <xTaskRemoveFromEventList>
 800eb6e:	2800      	cmp	r0, #0
 800eb70:	d0f4      	beq.n	800eb5c <xQueueSemaphoreTake+0x1fc>
						vTaskMissedYield();
 800eb72:	f000 ff61 	bl	800fa38 <vTaskMissedYield>
 800eb76:	e7f1      	b.n	800eb5c <xQueueSemaphoreTake+0x1fc>
		pxQueue->cTxLock = queueUNLOCKED;
 800eb78:	23ff      	movs	r3, #255	; 0xff
 800eb7a:	f884 3045 	strb.w	r3, [r4, #69]	; 0x45
	taskEXIT_CRITICAL();
 800eb7e:	f7ff f863 	bl	800dc48 <vPortExitCritical>
	taskENTER_CRITICAL();
 800eb82:	f7ff f83f 	bl	800dc04 <vPortEnterCritical>
		int8_t cRxLock = pxQueue->cRxLock;
 800eb86:	f894 3044 	ldrb.w	r3, [r4, #68]	; 0x44
 800eb8a:	b25d      	sxtb	r5, r3
		while( cRxLock > queueLOCKED_UNMODIFIED )
 800eb8c:	2d00      	cmp	r5, #0
 800eb8e:	dd10      	ble.n	800ebb2 <xQueueSemaphoreTake+0x252>
				if( xTaskRemoveFromEventList( &( pxQueue->xTasksWaitingToSend ) ) != pdFALSE )
 800eb90:	f104 0810 	add.w	r8, r4, #16
 800eb94:	e003      	b.n	800eb9e <xQueueSemaphoreTake+0x23e>
				--cRxLock;
 800eb96:	1e6b      	subs	r3, r5, #1
 800eb98:	b2da      	uxtb	r2, r3
 800eb9a:	b25d      	sxtb	r5, r3
		while( cRxLock > queueLOCKED_UNMODIFIED )
 800eb9c:	b14a      	cbz	r2, 800ebb2 <xQueueSemaphoreTake+0x252>
			if( listLIST_IS_EMPTY( &( pxQueue->xTasksWaitingToSend ) ) == pdFALSE )
 800eb9e:	6923      	ldr	r3, [r4, #16]
				if( xTaskRemoveFromEventList( &( pxQueue->xTasksWaitingToSend ) ) != pdFALSE )
 800eba0:	4640      	mov	r0, r8
			if( listLIST_IS_EMPTY( &( pxQueue->xTasksWaitingToSend ) ) == pdFALSE )
 800eba2:	b133      	cbz	r3, 800ebb2 <xQueueSemaphoreTake+0x252>
				if( xTaskRemoveFromEventList( &( pxQueue->xTasksWaitingToSend ) ) != pdFALSE )
 800eba4:	f000 feac 	bl	800f900 <xTaskRemoveFromEventList>
 800eba8:	2800      	cmp	r0, #0
 800ebaa:	d0f4      	beq.n	800eb96 <xQueueSemaphoreTake+0x236>
					vTaskMissedYield();
 800ebac:	f000 ff44 	bl	800fa38 <vTaskMissedYield>
 800ebb0:	e7f1      	b.n	800eb96 <xQueueSemaphoreTake+0x236>
		pxQueue->cRxLock = queueUNLOCKED;
 800ebb2:	23ff      	movs	r3, #255	; 0xff
 800ebb4:	f884 3044 	strb.w	r3, [r4, #68]	; 0x44
	taskEXIT_CRITICAL();
 800ebb8:	f7ff f846 	bl	800dc48 <vPortExitCritical>
				if( xTaskResumeAll() == pdFALSE )
 800ebbc:	f000 fda0 	bl	800f700 <xTaskResumeAll>
 800ebc0:	2800      	cmp	r0, #0
 800ebc2:	d18f      	bne.n	800eae4 <xQueueSemaphoreTake+0x184>
					portYIELD_WITHIN_API();
 800ebc4:	f04f 23e0 	mov.w	r3, #3758153728	; 0xe000e000
 800ebc8:	f04f 5280 	mov.w	r2, #268435456	; 0x10000000
 800ebcc:	f8c3 2d04 	str.w	r2, [r3, #3332]	; 0xd04
 800ebd0:	f3bf 8f4f 	dsb	sy
 800ebd4:	f3bf 8f6f 	isb	sy
 800ebd8:	e784      	b.n	800eae4 <xQueueSemaphoreTake+0x184>
	taskEXIT_CRITICAL();
 800ebda:	f7ff f835 	bl	800dc48 <vPortExitCritical>
					if( xInheritanceOccurred != pdFALSE )
 800ebde:	b92f      	cbnz	r7, 800ebec <xQueueSemaphoreTake+0x28c>
}
 800ebe0:	4638      	mov	r0, r7
 800ebe2:	b004      	add	sp, #16
 800ebe4:	e8bd 81f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, pc}
 800ebe8:	4607      	mov	r7, r0
 800ebea:	e6d1      	b.n	800e990 <xQueueSemaphoreTake+0x30>
						taskENTER_CRITICAL();
 800ebec:	f7ff f80a 	bl	800dc04 <vPortEnterCritical>
		if( listCURRENT_LIST_LENGTH( &( pxQueue->xTasksWaitingToReceive ) ) > 0U )
 800ebf0:	6a61      	ldr	r1, [r4, #36]	; 0x24
 800ebf2:	b119      	cbz	r1, 800ebfc <xQueueSemaphoreTake+0x29c>
			uxHighestPriorityOfWaitingTasks = ( UBaseType_t ) configMAX_PRIORITIES - ( UBaseType_t ) listGET_ITEM_VALUE_OF_HEAD_ENTRY( &( pxQueue->xTasksWaitingToReceive ) );
 800ebf4:	6b23      	ldr	r3, [r4, #48]	; 0x30
 800ebf6:	6819      	ldr	r1, [r3, #0]
 800ebf8:	f1c1 0138 	rsb	r1, r1, #56	; 0x38
							vTaskPriorityDisinheritAfterTimeout( pxQueue->u.xSemaphore.xMutexHolder, uxHighestWaitingPriority );
 800ebfc:	68a0      	ldr	r0, [r4, #8]
 800ebfe:	f000 ffbd 	bl	800fb7c <vTaskPriorityDisinheritAfterTimeout>
				return errQUEUE_EMPTY;
 800ec02:	2700      	movs	r7, #0
						taskEXIT_CRITICAL();
 800ec04:	f7ff f820 	bl	800dc48 <vPortExitCritical>
 800ec08:	e7ea      	b.n	800ebe0 <xQueueSemaphoreTake+0x280>
						taskENTER_CRITICAL();
 800ec0a:	f7fe fffb 	bl	800dc04 <vPortEnterCritical>
							xInheritanceOccurred = xTaskPriorityInherit( pxQueue->u.xSemaphore.xMutexHolder );
 800ec0e:	68a0      	ldr	r0, [r4, #8]
 800ec10:	f000 ff28 	bl	800fa64 <xTaskPriorityInherit>
 800ec14:	4607      	mov	r7, r0
						taskEXIT_CRITICAL();
 800ec16:	f7ff f817 	bl	800dc48 <vPortExitCritical>
 800ec1a:	e793      	b.n	800eb44 <xQueueSemaphoreTake+0x1e4>
						configASSERT( xInheritanceOccurred == pdFALSE );
 800ec1c:	b197      	cbz	r7, 800ec44 <xQueueSemaphoreTake+0x2e4>
 800ec1e:	f04f 0350 	mov.w	r3, #80	; 0x50
 800ec22:	f383 8811 	msr	BASEPRI, r3
 800ec26:	f3bf 8f6f 	isb	sy
 800ec2a:	f3bf 8f4f 	dsb	sy
 800ec2e:	e7fe      	b.n	800ec2e <xQueueSemaphoreTake+0x2ce>
					if( pxQueue->uxQueueType == queueQUEUE_IS_MUTEX )
 800ec30:	6822      	ldr	r2, [r4, #0]
				pxQueue->uxMessagesWaiting = uxSemaphoreCount - ( UBaseType_t ) 1;
 800ec32:	3b01      	subs	r3, #1
 800ec34:	63a3      	str	r3, [r4, #56]	; 0x38
					if( pxQueue->uxQueueType == queueQUEUE_IS_MUTEX )
 800ec36:	b1ca      	cbz	r2, 800ec6c <xQueueSemaphoreTake+0x30c>
				if( listLIST_IS_EMPTY( &( pxQueue->xTasksWaitingToSend ) ) == pdFALSE )
 800ec38:	6923      	ldr	r3, [r4, #16]
 800ec3a:	b933      	cbnz	r3, 800ec4a <xQueueSemaphoreTake+0x2ea>
				taskEXIT_CRITICAL();
 800ec3c:	f7ff f804 	bl	800dc48 <vPortExitCritical>
				return pdPASS;
 800ec40:	2701      	movs	r7, #1
 800ec42:	e7cd      	b.n	800ebe0 <xQueueSemaphoreTake+0x280>
					taskEXIT_CRITICAL();
 800ec44:	f7ff f800 	bl	800dc48 <vPortExitCritical>
					return errQUEUE_EMPTY;
 800ec48:	e7ca      	b.n	800ebe0 <xQueueSemaphoreTake+0x280>
					if( xTaskRemoveFromEventList( &( pxQueue->xTasksWaitingToSend ) ) != pdFALSE )
 800ec4a:	f104 0010 	add.w	r0, r4, #16
 800ec4e:	f000 fe57 	bl	800f900 <xTaskRemoveFromEventList>
 800ec52:	2800      	cmp	r0, #0
 800ec54:	d0f2      	beq.n	800ec3c <xQueueSemaphoreTake+0x2dc>
						queueYIELD_IF_USING_PREEMPTION();
 800ec56:	f04f 23e0 	mov.w	r3, #3758153728	; 0xe000e000
 800ec5a:	f04f 5280 	mov.w	r2, #268435456	; 0x10000000
 800ec5e:	f8c3 2d04 	str.w	r2, [r3, #3332]	; 0xd04
 800ec62:	f3bf 8f4f 	dsb	sy
 800ec66:	f3bf 8f6f 	isb	sy
 800ec6a:	e7e7      	b.n	800ec3c <xQueueSemaphoreTake+0x2dc>
						pxQueue->u.xSemaphore.xMutexHolder = pvTaskIncrementMutexHeldCount();
 800ec6c:	f000 ffda 	bl	800fc24 <pvTaskIncrementMutexHeldCount>
 800ec70:	60a0      	str	r0, [r4, #8]
 800ec72:	e7e1      	b.n	800ec38 <xQueueSemaphoreTake+0x2d8>

0800ec74 <xQueueReceiveFromISR>:
{
 800ec74:	e92d 43f8 	stmdb	sp!, {r3, r4, r5, r6, r7, r8, r9, lr}
	configASSERT( pxQueue );
 800ec78:	b310      	cbz	r0, 800ecc0 <xQueueReceiveFromISR+0x4c>
	configASSERT( !( ( pvBuffer == NULL ) && ( pxQueue->uxItemSize != ( UBaseType_t ) 0U ) ) );
 800ec7a:	460e      	mov	r6, r1
 800ec7c:	4617      	mov	r7, r2
 800ec7e:	4604      	mov	r4, r0
 800ec80:	b191      	cbz	r1, 800eca8 <xQueueReceiveFromISR+0x34>
	portASSERT_IF_INTERRUPT_PRIORITY_INVALID();
 800ec82:	f7ff f8f3 	bl	800de6c <vPortValidateInterruptPriority>
	__asm volatile
 800ec86:	f3ef 8911 	mrs	r9, BASEPRI
 800ec8a:	f04f 0350 	mov.w	r3, #80	; 0x50
 800ec8e:	f383 8811 	msr	BASEPRI, r3
 800ec92:	f3bf 8f6f 	isb	sy
 800ec96:	f3bf 8f4f 	dsb	sy
		const UBaseType_t uxMessagesWaiting = pxQueue->uxMessagesWaiting;
 800ec9a:	6ba5      	ldr	r5, [r4, #56]	; 0x38
		if( uxMessagesWaiting > ( UBaseType_t ) 0 )
 800ec9c:	b9cd      	cbnz	r5, 800ecd2 <xQueueReceiveFromISR+0x5e>
			xReturn = pdFAIL;
 800ec9e:	4628      	mov	r0, r5
	__asm volatile
 800eca0:	f389 8811 	msr	BASEPRI, r9
}
 800eca4:	e8bd 83f8 	ldmia.w	sp!, {r3, r4, r5, r6, r7, r8, r9, pc}
	configASSERT( !( ( pvBuffer == NULL ) && ( pxQueue->uxItemSize != ( UBaseType_t ) 0U ) ) );
 800eca8:	6c03      	ldr	r3, [r0, #64]	; 0x40
 800ecaa:	2b00      	cmp	r3, #0
 800ecac:	d0e9      	beq.n	800ec82 <xQueueReceiveFromISR+0xe>
	__asm volatile
 800ecae:	f04f 0350 	mov.w	r3, #80	; 0x50
 800ecb2:	f383 8811 	msr	BASEPRI, r3
 800ecb6:	f3bf 8f6f 	isb	sy
 800ecba:	f3bf 8f4f 	dsb	sy
 800ecbe:	e7fe      	b.n	800ecbe <xQueueReceiveFromISR+0x4a>
 800ecc0:	f04f 0350 	mov.w	r3, #80	; 0x50
 800ecc4:	f383 8811 	msr	BASEPRI, r3
 800ecc8:	f3bf 8f6f 	isb	sy
 800eccc:	f3bf 8f4f 	dsb	sy
	configASSERT( pxQueue );
 800ecd0:	e7fe      	b.n	800ecd0 <xQueueReceiveFromISR+0x5c>
			const int8_t cRxLock = pxQueue->cRxLock;
 800ecd2:	f894 8044 	ldrb.w	r8, [r4, #68]	; 0x44
	if( pxQueue->uxItemSize != ( UBaseType_t ) 0 )
 800ecd6:	6c22      	ldr	r2, [r4, #64]	; 0x40
			const int8_t cRxLock = pxQueue->cRxLock;
 800ecd8:	fa4f f888 	sxtb.w	r8, r8
	if( pxQueue->uxItemSize != ( UBaseType_t ) 0 )
 800ecdc:	b152      	cbz	r2, 800ecf4 <xQueueReceiveFromISR+0x80>
		pxQueue->u.xQueue.pcReadFrom += pxQueue->uxItemSize; /*lint !e9016 Pointer arithmetic on char types ok, especially in this use case where it is the clearest way of conveying intent. */
 800ecde:	68e1      	ldr	r1, [r4, #12]
		if( pxQueue->u.xQueue.pcReadFrom >= pxQueue->u.xQueue.pcTail ) /*lint !e946 MISRA exception justified as use of the relational operator is the cleanest solutions. */
 800ece0:	68a3      	ldr	r3, [r4, #8]
		pxQueue->u.xQueue.pcReadFrom += pxQueue->uxItemSize; /*lint !e9016 Pointer arithmetic on char types ok, especially in this use case where it is the clearest way of conveying intent. */
 800ece2:	4411      	add	r1, r2
		if( pxQueue->u.xQueue.pcReadFrom >= pxQueue->u.xQueue.pcTail ) /*lint !e946 MISRA exception justified as use of the relational operator is the cleanest solutions. */
 800ece4:	4299      	cmp	r1, r3
		pxQueue->u.xQueue.pcReadFrom += pxQueue->uxItemSize; /*lint !e9016 Pointer arithmetic on char types ok, especially in this use case where it is the clearest way of conveying intent. */
 800ece6:	60e1      	str	r1, [r4, #12]
			pxQueue->u.xQueue.pcReadFrom = pxQueue->pcHead;
 800ece8:	bf24      	itt	cs
 800ecea:	6821      	ldrcs	r1, [r4, #0]
 800ecec:	60e1      	strcs	r1, [r4, #12]
		( void ) memcpy( ( void * ) pvBuffer, ( void * ) pxQueue->u.xQueue.pcReadFrom, ( size_t ) pxQueue->uxItemSize ); /*lint !e961 !e418 !e9087 MISRA exception as the casts are only redundant for some ports.  Also previous logic ensures a null pointer can only be passed to memcpy() when the count is 0.  Cast to void required by function signature and safe as no alignment requirement and copy length specified in bytes. */
 800ecee:	4630      	mov	r0, r6
 800ecf0:	f01c fe61 	bl	802b9b6 <memcpy>
			pxQueue->uxMessagesWaiting = uxMessagesWaiting - ( UBaseType_t ) 1;
 800ecf4:	3d01      	subs	r5, #1
			if( cRxLock == queueUNLOCKED )
 800ecf6:	f1b8 3fff 	cmp.w	r8, #4294967295
			pxQueue->uxMessagesWaiting = uxMessagesWaiting - ( UBaseType_t ) 1;
 800ecfa:	63a5      	str	r5, [r4, #56]	; 0x38
			if( cRxLock == queueUNLOCKED )
 800ecfc:	d009      	beq.n	800ed12 <xQueueReceiveFromISR+0x9e>
				pxQueue->cRxLock = ( int8_t ) ( cRxLock + 1 );
 800ecfe:	f108 0301 	add.w	r3, r8, #1
 800ed02:	b25b      	sxtb	r3, r3
 800ed04:	f884 3044 	strb.w	r3, [r4, #68]	; 0x44
			xReturn = pdPASS;
 800ed08:	2001      	movs	r0, #1
	__asm volatile
 800ed0a:	f389 8811 	msr	BASEPRI, r9
}
 800ed0e:	e8bd 83f8 	ldmia.w	sp!, {r3, r4, r5, r6, r7, r8, r9, pc}
				if( listLIST_IS_EMPTY( &( pxQueue->xTasksWaitingToSend ) ) == pdFALSE )
 800ed12:	6923      	ldr	r3, [r4, #16]
 800ed14:	2b00      	cmp	r3, #0
 800ed16:	d0f7      	beq.n	800ed08 <xQueueReceiveFromISR+0x94>
					if( xTaskRemoveFromEventList( &( pxQueue->xTasksWaitingToSend ) ) != pdFALSE )
 800ed18:	f104 0010 	add.w	r0, r4, #16
 800ed1c:	f000 fdf0 	bl	800f900 <xTaskRemoveFromEventList>
 800ed20:	2800      	cmp	r0, #0
 800ed22:	d0f1      	beq.n	800ed08 <xQueueReceiveFromISR+0x94>
						if( pxHigherPriorityTaskWoken != NULL )
 800ed24:	2f00      	cmp	r7, #0
 800ed26:	d0ef      	beq.n	800ed08 <xQueueReceiveFromISR+0x94>
							*pxHigherPriorityTaskWoken = pdTRUE;
 800ed28:	2001      	movs	r0, #1
 800ed2a:	6038      	str	r0, [r7, #0]
 800ed2c:	e7b8      	b.n	800eca0 <xQueueReceiveFromISR+0x2c>
 800ed2e:	bf00      	nop

0800ed30 <uxQueueMessagesWaiting>:
	configASSERT( xQueue );
 800ed30:	b158      	cbz	r0, 800ed4a <uxQueueMessagesWaiting+0x1a>
{
 800ed32:	b510      	push	{r4, lr}
 800ed34:	4604      	mov	r4, r0
 800ed36:	b082      	sub	sp, #8
	taskENTER_CRITICAL();
 800ed38:	f7fe ff64 	bl	800dc04 <vPortEnterCritical>
		uxReturn = ( ( Queue_t * ) xQueue )->uxMessagesWaiting;
 800ed3c:	6ba0      	ldr	r0, [r4, #56]	; 0x38
 800ed3e:	9001      	str	r0, [sp, #4]
	taskEXIT_CRITICAL();
 800ed40:	f7fe ff82 	bl	800dc48 <vPortExitCritical>
} /*lint !e818 Pointer cannot be declared const as xQueue is a typedef not pointer. */
 800ed44:	9801      	ldr	r0, [sp, #4]
 800ed46:	b002      	add	sp, #8
 800ed48:	bd10      	pop	{r4, pc}
	__asm volatile
 800ed4a:	f04f 0350 	mov.w	r3, #80	; 0x50
 800ed4e:	f383 8811 	msr	BASEPRI, r3
 800ed52:	f3bf 8f6f 	isb	sy
 800ed56:	f3bf 8f4f 	dsb	sy
	configASSERT( xQueue );
 800ed5a:	e7fe      	b.n	800ed5a <uxQueueMessagesWaiting+0x2a>

0800ed5c <uxQueueMessagesWaitingFromISR>:
	configASSERT( pxQueue );
 800ed5c:	b108      	cbz	r0, 800ed62 <uxQueueMessagesWaitingFromISR+0x6>
	uxReturn = pxQueue->uxMessagesWaiting;
 800ed5e:	6b80      	ldr	r0, [r0, #56]	; 0x38
} /*lint !e818 Pointer cannot be declared const as xQueue is a typedef not pointer. */
 800ed60:	4770      	bx	lr
 800ed62:	f04f 0350 	mov.w	r3, #80	; 0x50
 800ed66:	f383 8811 	msr	BASEPRI, r3
 800ed6a:	f3bf 8f6f 	isb	sy
 800ed6e:	f3bf 8f4f 	dsb	sy
	configASSERT( pxQueue );
 800ed72:	e7fe      	b.n	800ed72 <uxQueueMessagesWaitingFromISR+0x16>
 800ed74:	0000      	movs	r0, r0
	...

0800ed78 <vQueueDelete>:
	configASSERT( pxQueue );
 800ed78:	b1f0      	cbz	r0, 800edb8 <vQueueDelete+0x40>

		/* See if the handle of the queue being unregistered in actually in the
		registry. */
		for( ux = ( UBaseType_t ) 0U; ux < ( UBaseType_t ) configQUEUE_REGISTRY_SIZE; ux++ )
		{
			if( xQueueRegistry[ ux ].xHandle == xQueue )
 800ed7a:	4b21      	ldr	r3, [pc, #132]	; (800ee00 <vQueueDelete+0x88>)
 800ed7c:	685a      	ldr	r2, [r3, #4]
 800ed7e:	4290      	cmp	r0, r2
 800ed80:	d025      	beq.n	800edce <vQueueDelete+0x56>
 800ed82:	68da      	ldr	r2, [r3, #12]
 800ed84:	4290      	cmp	r0, r2
 800ed86:	d02c      	beq.n	800ede2 <vQueueDelete+0x6a>
 800ed88:	695a      	ldr	r2, [r3, #20]
 800ed8a:	4290      	cmp	r0, r2
 800ed8c:	d02b      	beq.n	800ede6 <vQueueDelete+0x6e>
 800ed8e:	69da      	ldr	r2, [r3, #28]
 800ed90:	4290      	cmp	r0, r2
 800ed92:	d02a      	beq.n	800edea <vQueueDelete+0x72>
 800ed94:	6a5a      	ldr	r2, [r3, #36]	; 0x24
 800ed96:	4290      	cmp	r0, r2
 800ed98:	d029      	beq.n	800edee <vQueueDelete+0x76>
 800ed9a:	6ada      	ldr	r2, [r3, #44]	; 0x2c
 800ed9c:	4290      	cmp	r0, r2
 800ed9e:	d01e      	beq.n	800edde <vQueueDelete+0x66>
 800eda0:	6b5a      	ldr	r2, [r3, #52]	; 0x34
 800eda2:	4290      	cmp	r0, r2
 800eda4:	d025      	beq.n	800edf2 <vQueueDelete+0x7a>
 800eda6:	6bda      	ldr	r2, [r3, #60]	; 0x3c
 800eda8:	4290      	cmp	r0, r2
		for( ux = ( UBaseType_t ) 0U; ux < ( UBaseType_t ) configQUEUE_REGISTRY_SIZE; ux++ )
 800edaa:	bf08      	it	eq
 800edac:	2207      	moveq	r2, #7
			if( xQueueRegistry[ ux ].xHandle == xQueue )
 800edae:	d00f      	beq.n	800edd0 <vQueueDelete+0x58>
		if( pxQueue->ucStaticallyAllocated == ( uint8_t ) pdFALSE )
 800edb0:	f890 3046 	ldrb.w	r3, [r0, #70]	; 0x46
 800edb4:	b14b      	cbz	r3, 800edca <vQueueDelete+0x52>
}
 800edb6:	4770      	bx	lr
 800edb8:	f04f 0350 	mov.w	r3, #80	; 0x50
 800edbc:	f383 8811 	msr	BASEPRI, r3
 800edc0:	f3bf 8f6f 	isb	sy
 800edc4:	f3bf 8f4f 	dsb	sy
	configASSERT( pxQueue );
 800edc8:	e7fe      	b.n	800edc8 <vQueueDelete+0x50>
			vPortFree( pxQueue );
 800edca:	f7fe be07 	b.w	800d9dc <vPortFree>
		for( ux = ( UBaseType_t ) 0U; ux < ( UBaseType_t ) configQUEUE_REGISTRY_SIZE; ux++ )
 800edce:	2200      	movs	r2, #0
			{
				/* Set the name to NULL to show that this slot if free again. */
				xQueueRegistry[ ux ].pcQueueName = NULL;
 800edd0:	ed9f 7b09 	vldr	d7, [pc, #36]	; 800edf8 <vQueueDelete+0x80>
 800edd4:	eb03 03c2 	add.w	r3, r3, r2, lsl #3
 800edd8:	ed83 7b00 	vstr	d7, [r3]

				/* Set the handle to NULL to ensure the same queue handle cannot
				appear in the registry twice if it is added, removed, then
				added again. */
				xQueueRegistry[ ux ].xHandle = ( QueueHandle_t ) 0;
				break;
 800eddc:	e7e8      	b.n	800edb0 <vQueueDelete+0x38>
		for( ux = ( UBaseType_t ) 0U; ux < ( UBaseType_t ) configQUEUE_REGISTRY_SIZE; ux++ )
 800edde:	2205      	movs	r2, #5
 800ede0:	e7f6      	b.n	800edd0 <vQueueDelete+0x58>
 800ede2:	2201      	movs	r2, #1
 800ede4:	e7f4      	b.n	800edd0 <vQueueDelete+0x58>
 800ede6:	2202      	movs	r2, #2
 800ede8:	e7f2      	b.n	800edd0 <vQueueDelete+0x58>
 800edea:	2203      	movs	r2, #3
 800edec:	e7f0      	b.n	800edd0 <vQueueDelete+0x58>
 800edee:	2204      	movs	r2, #4
 800edf0:	e7ee      	b.n	800edd0 <vQueueDelete+0x58>
 800edf2:	2206      	movs	r2, #6
 800edf4:	e7ec      	b.n	800edd0 <vQueueDelete+0x58>
 800edf6:	bf00      	nop
	...
 800ee00:	200131a8 	.word	0x200131a8

0800ee04 <vQueueAddToRegistry>:
			if( xQueueRegistry[ ux ].pcQueueName == NULL )
 800ee04:	4b12      	ldr	r3, [pc, #72]	; (800ee50 <vQueueAddToRegistry+0x4c>)
 800ee06:	681a      	ldr	r2, [r3, #0]
 800ee08:	b17a      	cbz	r2, 800ee2a <vQueueAddToRegistry+0x26>
 800ee0a:	689a      	ldr	r2, [r3, #8]
 800ee0c:	b162      	cbz	r2, 800ee28 <vQueueAddToRegistry+0x24>
 800ee0e:	691a      	ldr	r2, [r3, #16]
 800ee10:	b192      	cbz	r2, 800ee38 <vQueueAddToRegistry+0x34>
 800ee12:	699a      	ldr	r2, [r3, #24]
 800ee14:	b192      	cbz	r2, 800ee3c <vQueueAddToRegistry+0x38>
 800ee16:	6a1a      	ldr	r2, [r3, #32]
 800ee18:	b192      	cbz	r2, 800ee40 <vQueueAddToRegistry+0x3c>
 800ee1a:	6a9a      	ldr	r2, [r3, #40]	; 0x28
 800ee1c:	b192      	cbz	r2, 800ee44 <vQueueAddToRegistry+0x40>
 800ee1e:	6b1a      	ldr	r2, [r3, #48]	; 0x30
 800ee20:	b192      	cbz	r2, 800ee48 <vQueueAddToRegistry+0x44>
 800ee22:	6b9a      	ldr	r2, [r3, #56]	; 0x38
 800ee24:	b192      	cbz	r2, 800ee4c <vQueueAddToRegistry+0x48>
	}
 800ee26:	4770      	bx	lr
		for( ux = ( UBaseType_t ) 0U; ux < ( UBaseType_t ) configQUEUE_REGISTRY_SIZE; ux++ )
 800ee28:	2201      	movs	r2, #1
				xQueueRegistry[ ux ].xHandle = xQueue;
 800ee2a:	eb03 0cc2 	add.w	ip, r3, r2, lsl #3
				xQueueRegistry[ ux ].pcQueueName = pcQueueName;
 800ee2e:	f843 1032 	str.w	r1, [r3, r2, lsl #3]
				xQueueRegistry[ ux ].xHandle = xQueue;
 800ee32:	f8cc 0004 	str.w	r0, [ip, #4]
	}
 800ee36:	4770      	bx	lr
		for( ux = ( UBaseType_t ) 0U; ux < ( UBaseType_t ) configQUEUE_REGISTRY_SIZE; ux++ )
 800ee38:	2202      	movs	r2, #2
 800ee3a:	e7f6      	b.n	800ee2a <vQueueAddToRegistry+0x26>
 800ee3c:	2203      	movs	r2, #3
 800ee3e:	e7f4      	b.n	800ee2a <vQueueAddToRegistry+0x26>
 800ee40:	2204      	movs	r2, #4
 800ee42:	e7f2      	b.n	800ee2a <vQueueAddToRegistry+0x26>
 800ee44:	2205      	movs	r2, #5
 800ee46:	e7f0      	b.n	800ee2a <vQueueAddToRegistry+0x26>
 800ee48:	2206      	movs	r2, #6
 800ee4a:	e7ee      	b.n	800ee2a <vQueueAddToRegistry+0x26>
 800ee4c:	2207      	movs	r2, #7
 800ee4e:	e7ec      	b.n	800ee2a <vQueueAddToRegistry+0x26>
 800ee50:	200131a8 	.word	0x200131a8

0800ee54 <vQueueWaitForMessageRestricted>:
/*-----------------------------------------------------------*/

#if ( configUSE_TIMERS == 1 )

	void vQueueWaitForMessageRestricted( QueueHandle_t xQueue, TickType_t xTicksToWait, const BaseType_t xWaitIndefinitely )
	{
 800ee54:	b570      	push	{r4, r5, r6, lr}
 800ee56:	4605      	mov	r5, r0
 800ee58:	460e      	mov	r6, r1
 800ee5a:	4614      	mov	r4, r2
		will not actually cause the task to block, just place it on a blocked
		list.  It will not block until the scheduler is unlocked - at which
		time a yield will be performed.  If an item is added to the queue while
		the queue is locked, and the calling task blocks on the queue, then the
		calling task will be immediately unblocked when the queue is unlocked. */
		prvLockQueue( pxQueue );
 800ee5c:	f7fe fed2 	bl	800dc04 <vPortEnterCritical>
 800ee60:	f895 3044 	ldrb.w	r3, [r5, #68]	; 0x44
 800ee64:	2bff      	cmp	r3, #255	; 0xff
 800ee66:	bf04      	itt	eq
 800ee68:	2300      	moveq	r3, #0
 800ee6a:	f885 3044 	strbeq.w	r3, [r5, #68]	; 0x44
 800ee6e:	f895 3045 	ldrb.w	r3, [r5, #69]	; 0x45
 800ee72:	2bff      	cmp	r3, #255	; 0xff
 800ee74:	bf04      	itt	eq
 800ee76:	2300      	moveq	r3, #0
 800ee78:	f885 3045 	strbeq.w	r3, [r5, #69]	; 0x45
 800ee7c:	f7fe fee4 	bl	800dc48 <vPortExitCritical>
		if( pxQueue->uxMessagesWaiting == ( UBaseType_t ) 0U )
 800ee80:	6bab      	ldr	r3, [r5, #56]	; 0x38
 800ee82:	2b00      	cmp	r3, #0
 800ee84:	d043      	beq.n	800ef0e <vQueueWaitForMessageRestricted+0xba>
	taskENTER_CRITICAL();
 800ee86:	f7fe febd 	bl	800dc04 <vPortEnterCritical>
		int8_t cTxLock = pxQueue->cTxLock;
 800ee8a:	f895 3045 	ldrb.w	r3, [r5, #69]	; 0x45
 800ee8e:	b25c      	sxtb	r4, r3
		while( cTxLock > queueLOCKED_UNMODIFIED )
 800ee90:	2c00      	cmp	r4, #0
 800ee92:	dd14      	ble.n	800eebe <vQueueWaitForMessageRestricted+0x6a>
					if( xTaskRemoveFromEventList( &( pxQueue->xTasksWaitingToReceive ) ) != pdFALSE )
 800ee94:	f105 0624 	add.w	r6, r5, #36	; 0x24
 800ee98:	e003      	b.n	800eea2 <vQueueWaitForMessageRestricted+0x4e>
			--cTxLock;
 800ee9a:	1e63      	subs	r3, r4, #1
 800ee9c:	b2da      	uxtb	r2, r3
 800ee9e:	b25c      	sxtb	r4, r3
		while( cTxLock > queueLOCKED_UNMODIFIED )
 800eea0:	b16a      	cbz	r2, 800eebe <vQueueWaitForMessageRestricted+0x6a>
				if( listLIST_IS_EMPTY( &( pxQueue->xTasksWaitingToReceive ) ) == pdFALSE )
 800eea2:	6a6b      	ldr	r3, [r5, #36]	; 0x24
					if( xTaskRemoveFromEventList( &( pxQueue->xTasksWaitingToReceive ) ) != pdFALSE )
 800eea4:	4630      	mov	r0, r6
				if( listLIST_IS_EMPTY( &( pxQueue->xTasksWaitingToReceive ) ) == pdFALSE )
 800eea6:	b153      	cbz	r3, 800eebe <vQueueWaitForMessageRestricted+0x6a>
					if( xTaskRemoveFromEventList( &( pxQueue->xTasksWaitingToReceive ) ) != pdFALSE )
 800eea8:	f000 fd2a 	bl	800f900 <xTaskRemoveFromEventList>
 800eeac:	2800      	cmp	r0, #0
 800eeae:	d0f4      	beq.n	800ee9a <vQueueWaitForMessageRestricted+0x46>
						vTaskMissedYield();
 800eeb0:	f000 fdc2 	bl	800fa38 <vTaskMissedYield>
			--cTxLock;
 800eeb4:	1e63      	subs	r3, r4, #1
 800eeb6:	b2da      	uxtb	r2, r3
 800eeb8:	b25c      	sxtb	r4, r3
		while( cTxLock > queueLOCKED_UNMODIFIED )
 800eeba:	2a00      	cmp	r2, #0
 800eebc:	d1f1      	bne.n	800eea2 <vQueueWaitForMessageRestricted+0x4e>
		pxQueue->cTxLock = queueUNLOCKED;
 800eebe:	23ff      	movs	r3, #255	; 0xff
 800eec0:	f885 3045 	strb.w	r3, [r5, #69]	; 0x45
	taskEXIT_CRITICAL();
 800eec4:	f7fe fec0 	bl	800dc48 <vPortExitCritical>
	taskENTER_CRITICAL();
 800eec8:	f7fe fe9c 	bl	800dc04 <vPortEnterCritical>
		int8_t cRxLock = pxQueue->cRxLock;
 800eecc:	f895 3044 	ldrb.w	r3, [r5, #68]	; 0x44
 800eed0:	b25c      	sxtb	r4, r3
		while( cRxLock > queueLOCKED_UNMODIFIED )
 800eed2:	2c00      	cmp	r4, #0
 800eed4:	dd14      	ble.n	800ef00 <vQueueWaitForMessageRestricted+0xac>
				if( xTaskRemoveFromEventList( &( pxQueue->xTasksWaitingToSend ) ) != pdFALSE )
 800eed6:	f105 0610 	add.w	r6, r5, #16
 800eeda:	e003      	b.n	800eee4 <vQueueWaitForMessageRestricted+0x90>
				--cRxLock;
 800eedc:	1e63      	subs	r3, r4, #1
 800eede:	b2da      	uxtb	r2, r3
 800eee0:	b25c      	sxtb	r4, r3
		while( cRxLock > queueLOCKED_UNMODIFIED )
 800eee2:	b16a      	cbz	r2, 800ef00 <vQueueWaitForMessageRestricted+0xac>
			if( listLIST_IS_EMPTY( &( pxQueue->xTasksWaitingToSend ) ) == pdFALSE )
 800eee4:	692b      	ldr	r3, [r5, #16]
				if( xTaskRemoveFromEventList( &( pxQueue->xTasksWaitingToSend ) ) != pdFALSE )
 800eee6:	4630      	mov	r0, r6
			if( listLIST_IS_EMPTY( &( pxQueue->xTasksWaitingToSend ) ) == pdFALSE )
 800eee8:	b153      	cbz	r3, 800ef00 <vQueueWaitForMessageRestricted+0xac>
				if( xTaskRemoveFromEventList( &( pxQueue->xTasksWaitingToSend ) ) != pdFALSE )
 800eeea:	f000 fd09 	bl	800f900 <xTaskRemoveFromEventList>
 800eeee:	2800      	cmp	r0, #0
 800eef0:	d0f4      	beq.n	800eedc <vQueueWaitForMessageRestricted+0x88>
					vTaskMissedYield();
 800eef2:	f000 fda1 	bl	800fa38 <vTaskMissedYield>
				--cRxLock;
 800eef6:	1e63      	subs	r3, r4, #1
 800eef8:	b2da      	uxtb	r2, r3
 800eefa:	b25c      	sxtb	r4, r3
		while( cRxLock > queueLOCKED_UNMODIFIED )
 800eefc:	2a00      	cmp	r2, #0
 800eefe:	d1f1      	bne.n	800eee4 <vQueueWaitForMessageRestricted+0x90>
		pxQueue->cRxLock = queueUNLOCKED;
 800ef00:	23ff      	movs	r3, #255	; 0xff
 800ef02:	f885 3044 	strb.w	r3, [r5, #68]	; 0x44
		else
		{
			mtCOVERAGE_TEST_MARKER();
		}
		prvUnlockQueue( pxQueue );
	}
 800ef06:	e8bd 4070 	ldmia.w	sp!, {r4, r5, r6, lr}
	taskEXIT_CRITICAL();
 800ef0a:	f7fe be9d 	b.w	800dc48 <vPortExitCritical>
			vTaskPlaceOnEventListRestricted( &( pxQueue->xTasksWaitingToReceive ), xTicksToWait, xWaitIndefinitely );
 800ef0e:	4622      	mov	r2, r4
 800ef10:	4631      	mov	r1, r6
 800ef12:	f105 0024 	add.w	r0, r5, #36	; 0x24
 800ef16:	f000 fca9 	bl	800f86c <vTaskPlaceOnEventListRestricted>
 800ef1a:	e7b4      	b.n	800ee86 <vQueueWaitForMessageRestricted+0x32>

0800ef1c <prvAddNewTaskToReadyList>:
	}
}
/*-----------------------------------------------------------*/

static void prvAddNewTaskToReadyList( TCB_t *pxNewTCB )
{
 800ef1c:	e92d 43f8 	stmdb	sp!, {r3, r4, r5, r6, r7, r8, r9, lr}
 800ef20:	4605      	mov	r5, r0
	/* Ensure interrupts don't access the task lists while the lists are being
	updated. */
	taskENTER_CRITICAL();
 800ef22:	f7fe fe6f 	bl	800dc04 <vPortEnterCritical>
	{
		uxCurrentNumberOfTasks++;
 800ef26:	4a34      	ldr	r2, [pc, #208]	; (800eff8 <prvAddNewTaskToReadyList+0xdc>)
		if( pxCurrentTCB == NULL )
 800ef28:	4e34      	ldr	r6, [pc, #208]	; (800effc <prvAddNewTaskToReadyList+0xe0>)
		uxCurrentNumberOfTasks++;
 800ef2a:	6813      	ldr	r3, [r2, #0]
 800ef2c:	3301      	adds	r3, #1
 800ef2e:	6013      	str	r3, [r2, #0]
		if( pxCurrentTCB == NULL )
 800ef30:	6833      	ldr	r3, [r6, #0]
 800ef32:	2b00      	cmp	r3, #0
 800ef34:	d032      	beq.n	800ef9c <prvAddNewTaskToReadyList+0x80>
		else
		{
			/* If the scheduler is not already running, make this task the
			current task if it is the highest priority task to be created
			so far. */
			if( xSchedulerRunning == pdFALSE )
 800ef36:	4c32      	ldr	r4, [pc, #200]	; (800f000 <prvAddNewTaskToReadyList+0xe4>)
 800ef38:	6823      	ldr	r3, [r4, #0]
 800ef3a:	b33b      	cbz	r3, 800ef8c <prvAddNewTaskToReadyList+0x70>
			{
				if( pxCurrentTCB->uxPriority <= pxNewTCB->uxPriority )
 800ef3c:	6ae8      	ldr	r0, [r5, #44]	; 0x2c
 800ef3e:	4f31      	ldr	r7, [pc, #196]	; (800f004 <prvAddNewTaskToReadyList+0xe8>)
			{
				mtCOVERAGE_TEST_MARKER();
			}
		}

		uxTaskNumber++;
 800ef40:	4a31      	ldr	r2, [pc, #196]	; (800f008 <prvAddNewTaskToReadyList+0xec>)
			pxNewTCB->uxTCBNumber = uxTaskNumber;
		}
		#endif /* configUSE_TRACE_FACILITY */
		traceTASK_CREATE( pxNewTCB );

		prvAddTaskToReadyList( pxNewTCB );
 800ef42:	4932      	ldr	r1, [pc, #200]	; (800f00c <prvAddNewTaskToReadyList+0xf0>)
		uxTaskNumber++;
 800ef44:	6813      	ldr	r3, [r2, #0]
 800ef46:	3301      	adds	r3, #1
 800ef48:	6013      	str	r3, [r2, #0]
			pxNewTCB->uxTCBNumber = uxTaskNumber;
 800ef4a:	646b      	str	r3, [r5, #68]	; 0x44
		prvAddTaskToReadyList( pxNewTCB );
 800ef4c:	680b      	ldr	r3, [r1, #0]
 800ef4e:	4283      	cmp	r3, r0
 800ef50:	bf38      	it	cc
 800ef52:	6008      	strcc	r0, [r1, #0]
 800ef54:	eb00 0080 	add.w	r0, r0, r0, lsl #2
 800ef58:	eb07 0080 	add.w	r0, r7, r0, lsl #2
 800ef5c:	1d29      	adds	r1, r5, #4
 800ef5e:	f7fe fdb1 	bl	800dac4 <vListInsertEnd>

		portSETUP_TCB( pxNewTCB );
	}
	taskEXIT_CRITICAL();
 800ef62:	f7fe fe71 	bl	800dc48 <vPortExitCritical>

	if( xSchedulerRunning != pdFALSE )
 800ef66:	6823      	ldr	r3, [r4, #0]
 800ef68:	b173      	cbz	r3, 800ef88 <prvAddNewTaskToReadyList+0x6c>
	{
		/* If the created task is of a higher priority than the current task
		then it should run now. */
		if( pxCurrentTCB->uxPriority < pxNewTCB->uxPriority )
 800ef6a:	6832      	ldr	r2, [r6, #0]
 800ef6c:	6aeb      	ldr	r3, [r5, #44]	; 0x2c
 800ef6e:	6ad2      	ldr	r2, [r2, #44]	; 0x2c
 800ef70:	429a      	cmp	r2, r3
 800ef72:	d209      	bcs.n	800ef88 <prvAddNewTaskToReadyList+0x6c>
		{
			taskYIELD_IF_USING_PREEMPTION();
 800ef74:	f04f 23e0 	mov.w	r3, #3758153728	; 0xe000e000
 800ef78:	f04f 5280 	mov.w	r2, #268435456	; 0x10000000
 800ef7c:	f8c3 2d04 	str.w	r2, [r3, #3332]	; 0xd04
 800ef80:	f3bf 8f4f 	dsb	sy
 800ef84:	f3bf 8f6f 	isb	sy
	}
	else
	{
		mtCOVERAGE_TEST_MARKER();
	}
}
 800ef88:	e8bd 83f8 	ldmia.w	sp!, {r3, r4, r5, r6, r7, r8, r9, pc}
				if( pxCurrentTCB->uxPriority <= pxNewTCB->uxPriority )
 800ef8c:	6833      	ldr	r3, [r6, #0]
 800ef8e:	6ae8      	ldr	r0, [r5, #44]	; 0x2c
 800ef90:	6adb      	ldr	r3, [r3, #44]	; 0x2c
 800ef92:	4f1c      	ldr	r7, [pc, #112]	; (800f004 <prvAddNewTaskToReadyList+0xe8>)
 800ef94:	4283      	cmp	r3, r0
					pxCurrentTCB = pxNewTCB;
 800ef96:	bf98      	it	ls
 800ef98:	6035      	strls	r5, [r6, #0]
 800ef9a:	e7d1      	b.n	800ef40 <prvAddNewTaskToReadyList+0x24>
			pxCurrentTCB = pxNewTCB;
 800ef9c:	6035      	str	r5, [r6, #0]
			if( uxCurrentNumberOfTasks == ( UBaseType_t ) 1 )
 800ef9e:	6813      	ldr	r3, [r2, #0]
 800efa0:	2b01      	cmp	r3, #1
 800efa2:	d003      	beq.n	800efac <prvAddNewTaskToReadyList+0x90>
				if( pxCurrentTCB->uxPriority <= pxNewTCB->uxPriority )
 800efa4:	6ae8      	ldr	r0, [r5, #44]	; 0x2c
 800efa6:	4f17      	ldr	r7, [pc, #92]	; (800f004 <prvAddNewTaskToReadyList+0xe8>)
 800efa8:	4c15      	ldr	r4, [pc, #84]	; (800f000 <prvAddNewTaskToReadyList+0xe4>)
 800efaa:	e7c9      	b.n	800ef40 <prvAddNewTaskToReadyList+0x24>
 800efac:	4f15      	ldr	r7, [pc, #84]	; (800f004 <prvAddNewTaskToReadyList+0xe8>)
 800efae:	463c      	mov	r4, r7
 800efb0:	f507 688c 	add.w	r8, r7, #1120	; 0x460
{
UBaseType_t uxPriority;

	for( uxPriority = ( UBaseType_t ) 0U; uxPriority < ( UBaseType_t ) configMAX_PRIORITIES; uxPriority++ )
	{
		vListInitialise( &( pxReadyTasksLists[ uxPriority ] ) );
 800efb4:	4620      	mov	r0, r4
	for( uxPriority = ( UBaseType_t ) 0U; uxPriority < ( UBaseType_t ) configMAX_PRIORITIES; uxPriority++ )
 800efb6:	3414      	adds	r4, #20
		vListInitialise( &( pxReadyTasksLists[ uxPriority ] ) );
 800efb8:	f7fe fd74 	bl	800daa4 <vListInitialise>
	for( uxPriority = ( UBaseType_t ) 0U; uxPriority < ( UBaseType_t ) configMAX_PRIORITIES; uxPriority++ )
 800efbc:	45a0      	cmp	r8, r4
 800efbe:	d1f9      	bne.n	800efb4 <prvAddNewTaskToReadyList+0x98>
	}

	vListInitialise( &xDelayedTaskList1 );
 800efc0:	f8df 9060 	ldr.w	r9, [pc, #96]	; 800f024 <prvAddNewTaskToReadyList+0x108>
	vListInitialise( &xDelayedTaskList2 );
 800efc4:	f8df 8060 	ldr.w	r8, [pc, #96]	; 800f028 <prvAddNewTaskToReadyList+0x10c>
 800efc8:	4c0d      	ldr	r4, [pc, #52]	; (800f000 <prvAddNewTaskToReadyList+0xe4>)
	vListInitialise( &xDelayedTaskList1 );
 800efca:	4648      	mov	r0, r9
 800efcc:	f7fe fd6a 	bl	800daa4 <vListInitialise>
	vListInitialise( &xDelayedTaskList2 );
 800efd0:	4640      	mov	r0, r8
 800efd2:	f7fe fd67 	bl	800daa4 <vListInitialise>
	vListInitialise( &xPendingReadyList );
 800efd6:	480e      	ldr	r0, [pc, #56]	; (800f010 <prvAddNewTaskToReadyList+0xf4>)
 800efd8:	f7fe fd64 	bl	800daa4 <vListInitialise>

	#if ( INCLUDE_vTaskDelete == 1 )
	{
		vListInitialise( &xTasksWaitingTermination );
 800efdc:	480d      	ldr	r0, [pc, #52]	; (800f014 <prvAddNewTaskToReadyList+0xf8>)
 800efde:	f7fe fd61 	bl	800daa4 <vListInitialise>
	}
	#endif /* INCLUDE_vTaskDelete */

	#if ( INCLUDE_vTaskSuspend == 1 )
	{
		vListInitialise( &xSuspendedTaskList );
 800efe2:	480d      	ldr	r0, [pc, #52]	; (800f018 <prvAddNewTaskToReadyList+0xfc>)
 800efe4:	f7fe fd5e 	bl	800daa4 <vListInitialise>
	}
	#endif /* INCLUDE_vTaskSuspend */

	/* Start with pxDelayedTaskList using list1 and the pxOverflowDelayedTaskList
	using list2. */
	pxDelayedTaskList = &xDelayedTaskList1;
 800efe8:	4b0c      	ldr	r3, [pc, #48]	; (800f01c <prvAddNewTaskToReadyList+0x100>)
		prvAddTaskToReadyList( pxNewTCB );
 800efea:	6ae8      	ldr	r0, [r5, #44]	; 0x2c
	pxDelayedTaskList = &xDelayedTaskList1;
 800efec:	f8c3 9000 	str.w	r9, [r3]
	pxOverflowDelayedTaskList = &xDelayedTaskList2;
 800eff0:	4b0b      	ldr	r3, [pc, #44]	; (800f020 <prvAddNewTaskToReadyList+0x104>)
 800eff2:	f8c3 8000 	str.w	r8, [r3]
}
 800eff6:	e7a3      	b.n	800ef40 <prvAddNewTaskToReadyList+0x24>
 800eff8:	20013654 	.word	0x20013654
 800effc:	200131e8 	.word	0x200131e8
 800f000:	200136b0 	.word	0x200136b0
 800f004:	200131f4 	.word	0x200131f4
 800f008:	20013660 	.word	0x20013660
 800f00c:	20013664 	.word	0x20013664
 800f010:	2001369c 	.word	0x2001369c
 800f014:	200136c8 	.word	0x200136c8
 800f018:	200136b4 	.word	0x200136b4
 800f01c:	200131ec 	.word	0x200131ec
 800f020:	200131f0 	.word	0x200131f0
 800f024:	20013668 	.word	0x20013668
 800f028:	2001367c 	.word	0x2001367c

0800f02c <prvInitialiseNewTask.constprop.0>:
static void prvInitialiseNewTask( 	TaskFunction_t pxTaskCode,
 800f02c:	e92d 47f0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, lr}
 800f030:	9c0a      	ldr	r4, [sp, #40]	; 0x28
 800f032:	f8dd 8024 	ldr.w	r8, [sp, #36]	; 0x24
		( void ) memset( pxNewTCB->pxStack, ( int ) tskSTACK_FILL_BYTE, ( size_t ) ulStackDepth * sizeof( StackType_t ) );
 800f036:	ea4f 0982 	mov.w	r9, r2, lsl #2
 800f03a:	464a      	mov	r2, r9
static void prvInitialiseNewTask( 	TaskFunction_t pxTaskCode,
 800f03c:	4606      	mov	r6, r0
 800f03e:	460d      	mov	r5, r1
		( void ) memset( pxNewTCB->pxStack, ( int ) tskSTACK_FILL_BYTE, ( size_t ) ulStackDepth * sizeof( StackType_t ) );
 800f040:	6b20      	ldr	r0, [r4, #48]	; 0x30
 800f042:	21a5      	movs	r1, #165	; 0xa5
static void prvInitialiseNewTask( 	TaskFunction_t pxTaskCode,
 800f044:	461f      	mov	r7, r3
		( void ) memset( pxNewTCB->pxStack, ( int ) tskSTACK_FILL_BYTE, ( size_t ) ulStackDepth * sizeof( StackType_t ) );
 800f046:	f01c fb90 	bl	802b76a <memset>
		pxTopOfStack = &( pxNewTCB->pxStack[ ulStackDepth - ( uint32_t ) 1 ] );
 800f04a:	6b23      	ldr	r3, [r4, #48]	; 0x30
 800f04c:	f1a9 0904 	sub.w	r9, r9, #4
 800f050:	444b      	add	r3, r9
		pxTopOfStack = ( StackType_t * ) ( ( ( portPOINTER_SIZE_TYPE ) pxTopOfStack ) & ( ~( ( portPOINTER_SIZE_TYPE ) portBYTE_ALIGNMENT_MASK ) ) ); /*lint !e923 !e9033 !e9078 MISRA exception.  Avoiding casts between pointers and integers is not practical.  Size differences accounted for using portPOINTER_SIZE_TYPE type.  Checked by assert(). */
 800f052:	f023 0907 	bic.w	r9, r3, #7
	if( pcName != NULL )
 800f056:	2d00      	cmp	r5, #0
 800f058:	d079      	beq.n	800f14e <prvInitialiseNewTask.constprop.0+0x122>
			pxNewTCB->pcTaskName[ x ] = pcName[ x ];
 800f05a:	782b      	ldrb	r3, [r5, #0]
 800f05c:	f884 3034 	strb.w	r3, [r4, #52]	; 0x34
			if( pcName[ x ] == ( char ) 0x00 )
 800f060:	2b00      	cmp	r3, #0
 800f062:	d03b      	beq.n	800f0dc <prvInitialiseNewTask.constprop.0+0xb0>
			pxNewTCB->pcTaskName[ x ] = pcName[ x ];
 800f064:	786b      	ldrb	r3, [r5, #1]
 800f066:	f884 3035 	strb.w	r3, [r4, #53]	; 0x35
			if( pcName[ x ] == ( char ) 0x00 )
 800f06a:	2b00      	cmp	r3, #0
 800f06c:	d036      	beq.n	800f0dc <prvInitialiseNewTask.constprop.0+0xb0>
			pxNewTCB->pcTaskName[ x ] = pcName[ x ];
 800f06e:	78ab      	ldrb	r3, [r5, #2]
 800f070:	f884 3036 	strb.w	r3, [r4, #54]	; 0x36
			if( pcName[ x ] == ( char ) 0x00 )
 800f074:	b393      	cbz	r3, 800f0dc <prvInitialiseNewTask.constprop.0+0xb0>
			pxNewTCB->pcTaskName[ x ] = pcName[ x ];
 800f076:	78eb      	ldrb	r3, [r5, #3]
 800f078:	f884 3037 	strb.w	r3, [r4, #55]	; 0x37
			if( pcName[ x ] == ( char ) 0x00 )
 800f07c:	b373      	cbz	r3, 800f0dc <prvInitialiseNewTask.constprop.0+0xb0>
			pxNewTCB->pcTaskName[ x ] = pcName[ x ];
 800f07e:	792b      	ldrb	r3, [r5, #4]
 800f080:	f884 3038 	strb.w	r3, [r4, #56]	; 0x38
			if( pcName[ x ] == ( char ) 0x00 )
 800f084:	b353      	cbz	r3, 800f0dc <prvInitialiseNewTask.constprop.0+0xb0>
			pxNewTCB->pcTaskName[ x ] = pcName[ x ];
 800f086:	796b      	ldrb	r3, [r5, #5]
 800f088:	f884 3039 	strb.w	r3, [r4, #57]	; 0x39
			if( pcName[ x ] == ( char ) 0x00 )
 800f08c:	b333      	cbz	r3, 800f0dc <prvInitialiseNewTask.constprop.0+0xb0>
			pxNewTCB->pcTaskName[ x ] = pcName[ x ];
 800f08e:	79ab      	ldrb	r3, [r5, #6]
 800f090:	f884 303a 	strb.w	r3, [r4, #58]	; 0x3a
			if( pcName[ x ] == ( char ) 0x00 )
 800f094:	b313      	cbz	r3, 800f0dc <prvInitialiseNewTask.constprop.0+0xb0>
			pxNewTCB->pcTaskName[ x ] = pcName[ x ];
 800f096:	79eb      	ldrb	r3, [r5, #7]
 800f098:	f884 303b 	strb.w	r3, [r4, #59]	; 0x3b
			if( pcName[ x ] == ( char ) 0x00 )
 800f09c:	b1f3      	cbz	r3, 800f0dc <prvInitialiseNewTask.constprop.0+0xb0>
			pxNewTCB->pcTaskName[ x ] = pcName[ x ];
 800f09e:	7a2b      	ldrb	r3, [r5, #8]
 800f0a0:	f884 303c 	strb.w	r3, [r4, #60]	; 0x3c
			if( pcName[ x ] == ( char ) 0x00 )
 800f0a4:	b1d3      	cbz	r3, 800f0dc <prvInitialiseNewTask.constprop.0+0xb0>
			pxNewTCB->pcTaskName[ x ] = pcName[ x ];
 800f0a6:	7a6b      	ldrb	r3, [r5, #9]
 800f0a8:	f884 303d 	strb.w	r3, [r4, #61]	; 0x3d
			if( pcName[ x ] == ( char ) 0x00 )
 800f0ac:	b1b3      	cbz	r3, 800f0dc <prvInitialiseNewTask.constprop.0+0xb0>
			pxNewTCB->pcTaskName[ x ] = pcName[ x ];
 800f0ae:	7aab      	ldrb	r3, [r5, #10]
 800f0b0:	f884 303e 	strb.w	r3, [r4, #62]	; 0x3e
			if( pcName[ x ] == ( char ) 0x00 )
 800f0b4:	b193      	cbz	r3, 800f0dc <prvInitialiseNewTask.constprop.0+0xb0>
			pxNewTCB->pcTaskName[ x ] = pcName[ x ];
 800f0b6:	7aeb      	ldrb	r3, [r5, #11]
 800f0b8:	f884 303f 	strb.w	r3, [r4, #63]	; 0x3f
			if( pcName[ x ] == ( char ) 0x00 )
 800f0bc:	b173      	cbz	r3, 800f0dc <prvInitialiseNewTask.constprop.0+0xb0>
			pxNewTCB->pcTaskName[ x ] = pcName[ x ];
 800f0be:	7b2b      	ldrb	r3, [r5, #12]
 800f0c0:	f884 3040 	strb.w	r3, [r4, #64]	; 0x40
			if( pcName[ x ] == ( char ) 0x00 )
 800f0c4:	b153      	cbz	r3, 800f0dc <prvInitialiseNewTask.constprop.0+0xb0>
			pxNewTCB->pcTaskName[ x ] = pcName[ x ];
 800f0c6:	7b6b      	ldrb	r3, [r5, #13]
 800f0c8:	f884 3041 	strb.w	r3, [r4, #65]	; 0x41
			if( pcName[ x ] == ( char ) 0x00 )
 800f0cc:	b133      	cbz	r3, 800f0dc <prvInitialiseNewTask.constprop.0+0xb0>
			pxNewTCB->pcTaskName[ x ] = pcName[ x ];
 800f0ce:	7bab      	ldrb	r3, [r5, #14]
 800f0d0:	f884 3042 	strb.w	r3, [r4, #66]	; 0x42
			if( pcName[ x ] == ( char ) 0x00 )
 800f0d4:	b113      	cbz	r3, 800f0dc <prvInitialiseNewTask.constprop.0+0xb0>
			pxNewTCB->pcTaskName[ x ] = pcName[ x ];
 800f0d6:	7beb      	ldrb	r3, [r5, #15]
 800f0d8:	f884 3043 	strb.w	r3, [r4, #67]	; 0x43
		pxNewTCB->pcTaskName[ configMAX_TASK_NAME_LEN - 1 ] = '\0';
 800f0dc:	2300      	movs	r3, #0
 800f0de:	f884 3043 	strb.w	r3, [r4, #67]	; 0x43
	if( uxPriority >= ( UBaseType_t ) configMAX_PRIORITIES )
 800f0e2:	9d08      	ldr	r5, [sp, #32]
 800f0e4:	2d37      	cmp	r5, #55	; 0x37
 800f0e6:	bf28      	it	cs
 800f0e8:	2537      	movcs	r5, #55	; 0x37
		pxNewTCB->uxMutexesHeld = 0;
 800f0ea:	f04f 0a00 	mov.w	sl, #0
	pxNewTCB->uxPriority = uxPriority;
 800f0ee:	62e5      	str	r5, [r4, #44]	; 0x2c
		pxNewTCB->uxBasePriority = uxPriority;
 800f0f0:	64e5      	str	r5, [r4, #76]	; 0x4c
	vListInitialiseItem( &( pxNewTCB->xStateListItem ) );
 800f0f2:	1d20      	adds	r0, r4, #4
		pxNewTCB->uxMutexesHeld = 0;
 800f0f4:	f8c4 a050 	str.w	sl, [r4, #80]	; 0x50
	vListInitialiseItem( &( pxNewTCB->xStateListItem ) );
 800f0f8:	f7fe fce0 	bl	800dabc <vListInitialiseItem>
	listSET_LIST_ITEM_VALUE( &( pxNewTCB->xEventListItem ), ( TickType_t ) configMAX_PRIORITIES - ( TickType_t ) uxPriority ); /*lint !e961 MISRA exception as the casts are only redundant for some ports. */
 800f0fc:	f1c5 0538 	rsb	r5, r5, #56	; 0x38
	vListInitialiseItem( &( pxNewTCB->xEventListItem ) );
 800f100:	f104 0018 	add.w	r0, r4, #24
 800f104:	f7fe fcda 	bl	800dabc <vListInitialiseItem>
	listSET_LIST_ITEM_VALUE( &( pxNewTCB->xEventListItem ), ( TickType_t ) configMAX_PRIORITIES - ( TickType_t ) uxPriority ); /*lint !e961 MISRA exception as the casts are only redundant for some ports. */
 800f108:	61a5      	str	r5, [r4, #24]
		pxNewTCB->ulNotifiedValue = 0;
 800f10a:	f8c4 a0a4 	str.w	sl, [r4, #164]	; 0xa4
		_REENT_INIT_PTR( ( &( pxNewTCB->xNewLib_reent ) ) );
 800f10e:	4651      	mov	r1, sl
 800f110:	224c      	movs	r2, #76	; 0x4c
	listSET_LIST_ITEM_OWNER( &( pxNewTCB->xStateListItem ), pxNewTCB );
 800f112:	6124      	str	r4, [r4, #16]
	listSET_LIST_ITEM_OWNER( &( pxNewTCB->xEventListItem ), pxNewTCB );
 800f114:	6264      	str	r4, [r4, #36]	; 0x24
		pxNewTCB->pxTaskTag = NULL;
 800f116:	f8c4 a054 	str.w	sl, [r4, #84]	; 0x54
		pxNewTCB->ucNotifyState = taskNOT_WAITING_NOTIFICATION;
 800f11a:	f884 a0a8 	strb.w	sl, [r4, #168]	; 0xa8
		_REENT_INIT_PTR( ( &( pxNewTCB->xNewLib_reent ) ) );
 800f11e:	f104 0058 	add.w	r0, r4, #88	; 0x58
 800f122:	f01c fb22 	bl	802b76a <memset>
 800f126:	4b0b      	ldr	r3, [pc, #44]	; (800f154 <prvInitialiseNewTask.constprop.0+0x128>)
 800f128:	65e3      	str	r3, [r4, #92]	; 0x5c
 800f12a:	f103 0568 	add.w	r5, r3, #104	; 0x68
 800f12e:	33d0      	adds	r3, #208	; 0xd0
			pxNewTCB->pxTopOfStack = pxPortInitialiseStack( pxTopOfStack, pxTaskCode, pvParameters );
 800f130:	463a      	mov	r2, r7
 800f132:	4631      	mov	r1, r6
 800f134:	4648      	mov	r0, r9
		_REENT_INIT_PTR( ( &( pxNewTCB->xNewLib_reent ) ) );
 800f136:	6625      	str	r5, [r4, #96]	; 0x60
 800f138:	6663      	str	r3, [r4, #100]	; 0x64
			pxNewTCB->pxTopOfStack = pxPortInitialiseStack( pxTopOfStack, pxTaskCode, pvParameters );
 800f13a:	f7fe fd3d 	bl	800dbb8 <pxPortInitialiseStack>
 800f13e:	6020      	str	r0, [r4, #0]
	if( pxCreatedTask != NULL )
 800f140:	f1b8 0f00 	cmp.w	r8, #0
 800f144:	d001      	beq.n	800f14a <prvInitialiseNewTask.constprop.0+0x11e>
		*pxCreatedTask = ( TaskHandle_t ) pxNewTCB;
 800f146:	f8c8 4000 	str.w	r4, [r8]
}
 800f14a:	e8bd 87f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, pc}
		pxNewTCB->pcTaskName[ 0 ] = 0x00;
 800f14e:	f884 5034 	strb.w	r5, [r4, #52]	; 0x34
 800f152:	e7c6      	b.n	800f0e2 <prvInitialiseNewTask.constprop.0+0xb6>
 800f154:	20014178 	.word	0x20014178

0800f158 <prvIdleTask>:
{
 800f158:	b580      	push	{r7, lr}
 800f15a:	4d23      	ldr	r5, [pc, #140]	; (800f1e8 <prvIdleTask+0x90>)
 800f15c:	4f23      	ldr	r7, [pc, #140]	; (800f1ec <prvIdleTask+0x94>)
 800f15e:	4e24      	ldr	r6, [pc, #144]	; (800f1f0 <prvIdleTask+0x98>)
 800f160:	f8df 8090 	ldr.w	r8, [pc, #144]	; 800f1f4 <prvIdleTask+0x9c>
				taskYIELD();
 800f164:	f04f 2ae0 	mov.w	sl, #3758153728	; 0xe000e000
 800f168:	f04f 5980 	mov.w	r9, #268435456	; 0x10000000
	{
		TCB_t *pxTCB;

		/* uxDeletedTasksWaitingCleanUp is used to prevent taskENTER_CRITICAL()
		being called too often in the idle task. */
		while( uxDeletedTasksWaitingCleanUp > ( UBaseType_t ) 0U )
 800f16c:	682b      	ldr	r3, [r5, #0]
 800f16e:	b35b      	cbz	r3, 800f1c8 <prvIdleTask+0x70>
		{
			taskENTER_CRITICAL();
 800f170:	f7fe fd48 	bl	800dc04 <vPortEnterCritical>
			{
				pxTCB = listGET_OWNER_OF_HEAD_ENTRY( ( &xTasksWaitingTermination ) ); /*lint !e9079 void * is used as this macro is used with timers and co-routines too.  Alignment is known to be fine as the type of the pointer stored and retrieved is the same. */
 800f174:	68fb      	ldr	r3, [r7, #12]
 800f176:	68dc      	ldr	r4, [r3, #12]
				( void ) uxListRemove( &( pxTCB->xStateListItem ) );
 800f178:	1d20      	adds	r0, r4, #4
 800f17a:	f7fe fccb 	bl	800db14 <uxListRemove>
				--uxCurrentNumberOfTasks;
 800f17e:	6833      	ldr	r3, [r6, #0]
 800f180:	3b01      	subs	r3, #1
 800f182:	6033      	str	r3, [r6, #0]
				--uxDeletedTasksWaitingCleanUp;
 800f184:	682b      	ldr	r3, [r5, #0]
 800f186:	3b01      	subs	r3, #1
 800f188:	602b      	str	r3, [r5, #0]
			}
			taskEXIT_CRITICAL();
 800f18a:	f7fe fd5d 	bl	800dc48 <vPortExitCritical>
		to the task to free any memory allocated at the application level.
		See the third party link http://www.nadler.com/embedded/newlibAndFreeRTOS.html
		for additional information. */
		#if ( configUSE_NEWLIB_REENTRANT == 1 )
		{
			_reclaim_reent( &( pxTCB->xNewLib_reent ) );
 800f18e:	f104 0058 	add.w	r0, r4, #88	; 0x58
 800f192:	f01c fb33 	bl	802b7fc <_reclaim_reent>
		#elif( tskSTATIC_AND_DYNAMIC_ALLOCATION_POSSIBLE != 0 ) /*lint !e731 !e9029 Macro has been consolidated for readability reasons. */
		{
			/* The task could have been allocated statically or dynamically, so
			check what was statically allocated before trying to free the
			memory. */
			if( pxTCB->ucStaticallyAllocated == tskDYNAMICALLY_ALLOCATED_STACK_AND_TCB )
 800f196:	f894 30a9 	ldrb.w	r3, [r4, #169]	; 0xa9
 800f19a:	b163      	cbz	r3, 800f1b6 <prvIdleTask+0x5e>
				/* Both the stack and TCB were allocated dynamically, so both
				must be freed. */
				vPortFree( pxTCB->pxStack );
				vPortFree( pxTCB );
			}
			else if( pxTCB->ucStaticallyAllocated == tskSTATICALLY_ALLOCATED_STACK_ONLY )
 800f19c:	2b01      	cmp	r3, #1
 800f19e:	d01e      	beq.n	800f1de <prvIdleTask+0x86>
			}
			else
			{
				/* Neither the stack nor the TCB were allocated dynamically, so
				nothing needs to be freed. */
				configASSERT( pxTCB->ucStaticallyAllocated == tskSTATICALLY_ALLOCATED_STACK_AND_TCB	);
 800f1a0:	2b02      	cmp	r3, #2
 800f1a2:	d0e3      	beq.n	800f16c <prvIdleTask+0x14>
 800f1a4:	f04f 0350 	mov.w	r3, #80	; 0x50
 800f1a8:	f383 8811 	msr	BASEPRI, r3
 800f1ac:	f3bf 8f6f 	isb	sy
 800f1b0:	f3bf 8f4f 	dsb	sy
 800f1b4:	e7fe      	b.n	800f1b4 <prvIdleTask+0x5c>
				vPortFree( pxTCB->pxStack );
 800f1b6:	6b20      	ldr	r0, [r4, #48]	; 0x30
 800f1b8:	f7fe fc10 	bl	800d9dc <vPortFree>
				vPortFree( pxTCB );
 800f1bc:	4620      	mov	r0, r4
 800f1be:	f7fe fc0d 	bl	800d9dc <vPortFree>
		while( uxDeletedTasksWaitingCleanUp > ( UBaseType_t ) 0U )
 800f1c2:	682b      	ldr	r3, [r5, #0]
 800f1c4:	2b00      	cmp	r3, #0
 800f1c6:	d1d3      	bne.n	800f170 <prvIdleTask+0x18>
			if( listCURRENT_LIST_LENGTH( &( pxReadyTasksLists[ tskIDLE_PRIORITY ] ) ) > ( UBaseType_t ) 1 )
 800f1c8:	f8d8 3000 	ldr.w	r3, [r8]
 800f1cc:	2b01      	cmp	r3, #1
 800f1ce:	d9cd      	bls.n	800f16c <prvIdleTask+0x14>
				taskYIELD();
 800f1d0:	f8ca 9d04 	str.w	r9, [sl, #3332]	; 0xd04
 800f1d4:	f3bf 8f4f 	dsb	sy
 800f1d8:	f3bf 8f6f 	isb	sy
 800f1dc:	e7c6      	b.n	800f16c <prvIdleTask+0x14>
				vPortFree( pxTCB );
 800f1de:	4620      	mov	r0, r4
 800f1e0:	f7fe fbfc 	bl	800d9dc <vPortFree>
 800f1e4:	e7c2      	b.n	800f16c <prvIdleTask+0x14>
 800f1e6:	bf00      	nop
 800f1e8:	20013658 	.word	0x20013658
 800f1ec:	200136c8 	.word	0x200136c8
 800f1f0:	20013654 	.word	0x20013654
 800f1f4:	200131f4 	.word	0x200131f4

0800f1f8 <xTaskIncrementTick.part.0>:
BaseType_t xTaskIncrementTick( void )
 800f1f8:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
		const TickType_t xConstTickCount = xTickCount + ( TickType_t ) 1;
 800f1fc:	4b47      	ldr	r3, [pc, #284]	; (800f31c <xTaskIncrementTick.part.0+0x124>)
 800f1fe:	681e      	ldr	r6, [r3, #0]
 800f200:	3601      	adds	r6, #1
BaseType_t xTaskIncrementTick( void )
 800f202:	b083      	sub	sp, #12
		xTickCount = xConstTickCount;
 800f204:	601e      	str	r6, [r3, #0]
		if( xConstTickCount == ( TickType_t ) 0U ) /*lint !e774 'if' does not always evaluate to false as it is looking for an overflow. */
 800f206:	2e00      	cmp	r6, #0
 800f208:	d040      	beq.n	800f28c <xTaskIncrementTick.part.0+0x94>
 800f20a:	f8df b124 	ldr.w	fp, [pc, #292]	; 800f330 <xTaskIncrementTick.part.0+0x138>
		if( xConstTickCount >= xNextTaskUnblockTime )
 800f20e:	f8db 3000 	ldr.w	r3, [fp]
 800f212:	429e      	cmp	r6, r3
 800f214:	d347      	bcc.n	800f2a6 <xTaskIncrementTick.part.0+0xae>
				if( listLIST_IS_EMPTY( pxDelayedTaskList ) != pdFALSE )
 800f216:	4f42      	ldr	r7, [pc, #264]	; (800f320 <xTaskIncrementTick.part.0+0x128>)
 800f218:	f8df 9118 	ldr.w	r9, [pc, #280]	; 800f334 <xTaskIncrementTick.part.0+0x13c>
 800f21c:	683b      	ldr	r3, [r7, #0]
 800f21e:	f8df a118 	ldr.w	sl, [pc, #280]	; 800f338 <xTaskIncrementTick.part.0+0x140>
 800f222:	681d      	ldr	r5, [r3, #0]
 800f224:	2d00      	cmp	r5, #0
 800f226:	d073      	beq.n	800f310 <xTaskIncrementTick.part.0+0x118>
					prvAddTaskToReadyList( pxTCB );
 800f228:	f8df 8110 	ldr.w	r8, [pc, #272]	; 800f33c <xTaskIncrementTick.part.0+0x144>
BaseType_t xSwitchRequired = pdFALSE;
 800f22c:	2500      	movs	r5, #0
 800f22e:	e022      	b.n	800f276 <xTaskIncrementTick.part.0+0x7e>
 800f230:	9101      	str	r1, [sp, #4]
					( void ) uxListRemove( &( pxTCB->xStateListItem ) );
 800f232:	f7fe fc6f 	bl	800db14 <uxListRemove>
					if( listLIST_ITEM_CONTAINER( &( pxTCB->xEventListItem ) ) != NULL )
 800f236:	6aa3      	ldr	r3, [r4, #40]	; 0x28
 800f238:	9901      	ldr	r1, [sp, #4]
						( void ) uxListRemove( &( pxTCB->xEventListItem ) );
 800f23a:	f104 0018 	add.w	r0, r4, #24
					if( listLIST_ITEM_CONTAINER( &( pxTCB->xEventListItem ) ) != NULL )
 800f23e:	b113      	cbz	r3, 800f246 <xTaskIncrementTick.part.0+0x4e>
						( void ) uxListRemove( &( pxTCB->xEventListItem ) );
 800f240:	f7fe fc68 	bl	800db14 <uxListRemove>
 800f244:	9901      	ldr	r1, [sp, #4]
					prvAddTaskToReadyList( pxTCB );
 800f246:	6ae3      	ldr	r3, [r4, #44]	; 0x2c
 800f248:	f8d8 2000 	ldr.w	r2, [r8]
 800f24c:	eb03 0083 	add.w	r0, r3, r3, lsl #2
 800f250:	4293      	cmp	r3, r2
 800f252:	eb09 0080 	add.w	r0, r9, r0, lsl #2
 800f256:	bf88      	it	hi
 800f258:	f8c8 3000 	strhi.w	r3, [r8]
 800f25c:	f7fe fc32 	bl	800dac4 <vListInsertEnd>
						if( pxTCB->uxPriority >= pxCurrentTCB->uxPriority )
 800f260:	f8da 2000 	ldr.w	r2, [sl]
				if( listLIST_IS_EMPTY( pxDelayedTaskList ) != pdFALSE )
 800f264:	683b      	ldr	r3, [r7, #0]
						if( pxTCB->uxPriority >= pxCurrentTCB->uxPriority )
 800f266:	6ae1      	ldr	r1, [r4, #44]	; 0x2c
 800f268:	6ad2      	ldr	r2, [r2, #44]	; 0x2c
				if( listLIST_IS_EMPTY( pxDelayedTaskList ) != pdFALSE )
 800f26a:	681b      	ldr	r3, [r3, #0]
							xSwitchRequired = pdTRUE;
 800f26c:	4291      	cmp	r1, r2
 800f26e:	bf28      	it	cs
 800f270:	2501      	movcs	r5, #1
				if( listLIST_IS_EMPTY( pxDelayedTaskList ) != pdFALSE )
 800f272:	2b00      	cmp	r3, #0
 800f274:	d04c      	beq.n	800f310 <xTaskIncrementTick.part.0+0x118>
					pxTCB = listGET_OWNER_OF_HEAD_ENTRY( pxDelayedTaskList ); /*lint !e9079 void * is used as this macro is used with timers and co-routines too.  Alignment is known to be fine as the type of the pointer stored and retrieved is the same. */
 800f276:	683b      	ldr	r3, [r7, #0]
 800f278:	68db      	ldr	r3, [r3, #12]
 800f27a:	68dc      	ldr	r4, [r3, #12]
					xItemValue = listGET_LIST_ITEM_VALUE( &( pxTCB->xStateListItem ) );
 800f27c:	6863      	ldr	r3, [r4, #4]
					( void ) uxListRemove( &( pxTCB->xStateListItem ) );
 800f27e:	1d21      	adds	r1, r4, #4
					if( xConstTickCount < xItemValue )
 800f280:	429e      	cmp	r6, r3
					( void ) uxListRemove( &( pxTCB->xStateListItem ) );
 800f282:	4608      	mov	r0, r1
					if( xConstTickCount < xItemValue )
 800f284:	d2d4      	bcs.n	800f230 <xTaskIncrementTick.part.0+0x38>
						xNextTaskUnblockTime = xItemValue;
 800f286:	f8cb 3000 	str.w	r3, [fp]
						break; /*lint !e9011 Code structure here is deedmed easier to understand with multiple breaks. */
 800f28a:	e011      	b.n	800f2b0 <xTaskIncrementTick.part.0+0xb8>
			taskSWITCH_DELAYED_LISTS();
 800f28c:	4b24      	ldr	r3, [pc, #144]	; (800f320 <xTaskIncrementTick.part.0+0x128>)
 800f28e:	681a      	ldr	r2, [r3, #0]
 800f290:	6812      	ldr	r2, [r2, #0]
 800f292:	b30a      	cbz	r2, 800f2d8 <xTaskIncrementTick.part.0+0xe0>
 800f294:	f04f 0350 	mov.w	r3, #80	; 0x50
 800f298:	f383 8811 	msr	BASEPRI, r3
 800f29c:	f3bf 8f6f 	isb	sy
 800f2a0:	f3bf 8f4f 	dsb	sy
 800f2a4:	e7fe      	b.n	800f2a4 <xTaskIncrementTick.part.0+0xac>
 800f2a6:	f8df 908c 	ldr.w	r9, [pc, #140]	; 800f334 <xTaskIncrementTick.part.0+0x13c>
 800f2aa:	f8df a08c 	ldr.w	sl, [pc, #140]	; 800f338 <xTaskIncrementTick.part.0+0x140>
BaseType_t xSwitchRequired = pdFALSE;
 800f2ae:	2500      	movs	r5, #0
			if( listCURRENT_LIST_LENGTH( &( pxReadyTasksLists[ pxCurrentTCB->uxPriority ] ) ) > ( UBaseType_t ) 1 )
 800f2b0:	f8da 3000 	ldr.w	r3, [sl]
			if( xYieldPending != pdFALSE )
 800f2b4:	491b      	ldr	r1, [pc, #108]	; (800f324 <xTaskIncrementTick.part.0+0x12c>)
			if( listCURRENT_LIST_LENGTH( &( pxReadyTasksLists[ pxCurrentTCB->uxPriority ] ) ) > ( UBaseType_t ) 1 )
 800f2b6:	6adb      	ldr	r3, [r3, #44]	; 0x2c
 800f2b8:	eb03 0383 	add.w	r3, r3, r3, lsl #2
 800f2bc:	009b      	lsls	r3, r3, #2
 800f2be:	f859 2003 	ldr.w	r2, [r9, r3]
			if( xYieldPending != pdFALSE )
 800f2c2:	680b      	ldr	r3, [r1, #0]
				xSwitchRequired = pdTRUE;
 800f2c4:	2a02      	cmp	r2, #2
 800f2c6:	bf28      	it	cs
 800f2c8:	2501      	movcs	r5, #1
				xSwitchRequired = pdTRUE;
 800f2ca:	2b00      	cmp	r3, #0
}
 800f2cc:	bf0c      	ite	eq
 800f2ce:	4628      	moveq	r0, r5
 800f2d0:	2001      	movne	r0, #1
 800f2d2:	b003      	add	sp, #12
 800f2d4:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
			taskSWITCH_DELAYED_LISTS();
 800f2d8:	4a13      	ldr	r2, [pc, #76]	; (800f328 <xTaskIncrementTick.part.0+0x130>)
 800f2da:	6818      	ldr	r0, [r3, #0]
 800f2dc:	6811      	ldr	r1, [r2, #0]
 800f2de:	6019      	str	r1, [r3, #0]
 800f2e0:	4912      	ldr	r1, [pc, #72]	; (800f32c <xTaskIncrementTick.part.0+0x134>)
 800f2e2:	6010      	str	r0, [r2, #0]
 800f2e4:	680a      	ldr	r2, [r1, #0]
 800f2e6:	3201      	adds	r2, #1
 800f2e8:	600a      	str	r2, [r1, #0]

static void prvResetNextTaskUnblockTime( void )
{
TCB_t *pxTCB;

	if( listLIST_IS_EMPTY( pxDelayedTaskList ) != pdFALSE )
 800f2ea:	681a      	ldr	r2, [r3, #0]
 800f2ec:	6812      	ldr	r2, [r2, #0]
 800f2ee:	b932      	cbnz	r2, 800f2fe <xTaskIncrementTick.part.0+0x106>
	{
		/* The new current delayed list is empty.  Set xNextTaskUnblockTime to
		the maximum possible value so it is	extremely unlikely that the
		if( xTickCount >= xNextTaskUnblockTime ) test will pass until
		there is an item in the delayed list. */
		xNextTaskUnblockTime = portMAX_DELAY;
 800f2f0:	f8df b03c 	ldr.w	fp, [pc, #60]	; 800f330 <xTaskIncrementTick.part.0+0x138>
 800f2f4:	f04f 33ff 	mov.w	r3, #4294967295
 800f2f8:	f8cb 3000 	str.w	r3, [fp]
 800f2fc:	e787      	b.n	800f20e <xTaskIncrementTick.part.0+0x16>
	{
		/* The new current delayed list is not empty, get the value of
		the item at the head of the delayed list.  This is the time at
		which the task at the head of the delayed list should be removed
		from the Blocked state. */
		( pxTCB ) = listGET_OWNER_OF_HEAD_ENTRY( pxDelayedTaskList ); /*lint !e9079 void * is used as this macro is used with timers and co-routines too.  Alignment is known to be fine as the type of the pointer stored and retrieved is the same. */
 800f2fe:	681b      	ldr	r3, [r3, #0]
		xNextTaskUnblockTime = listGET_LIST_ITEM_VALUE( &( ( pxTCB )->xStateListItem ) );
 800f300:	f8df b02c 	ldr.w	fp, [pc, #44]	; 800f330 <xTaskIncrementTick.part.0+0x138>
		( pxTCB ) = listGET_OWNER_OF_HEAD_ENTRY( pxDelayedTaskList ); /*lint !e9079 void * is used as this macro is used with timers and co-routines too.  Alignment is known to be fine as the type of the pointer stored and retrieved is the same. */
 800f304:	68db      	ldr	r3, [r3, #12]
		xNextTaskUnblockTime = listGET_LIST_ITEM_VALUE( &( ( pxTCB )->xStateListItem ) );
 800f306:	68db      	ldr	r3, [r3, #12]
 800f308:	685b      	ldr	r3, [r3, #4]
 800f30a:	f8cb 3000 	str.w	r3, [fp]
	}
}
 800f30e:	e77e      	b.n	800f20e <xTaskIncrementTick.part.0+0x16>
					xNextTaskUnblockTime = portMAX_DELAY; /*lint !e961 MISRA exception as the casts are only redundant for some ports. */
 800f310:	f04f 33ff 	mov.w	r3, #4294967295
 800f314:	f8cb 3000 	str.w	r3, [fp]
					break;
 800f318:	e7ca      	b.n	800f2b0 <xTaskIncrementTick.part.0+0xb8>
 800f31a:	bf00      	nop
 800f31c:	200136dc 	.word	0x200136dc
 800f320:	200131ec 	.word	0x200131ec
 800f324:	200136e0 	.word	0x200136e0
 800f328:	200131f0 	.word	0x200131f0
 800f32c:	20013694 	.word	0x20013694
 800f330:	20013690 	.word	0x20013690
 800f334:	200131f4 	.word	0x200131f4
 800f338:	200131e8 	.word	0x200131e8
 800f33c:	20013664 	.word	0x20013664

0800f340 <xTaskResumeAll.part.0>:
BaseType_t xTaskResumeAll( void )
 800f340:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
		--uxSchedulerSuspended;
 800f344:	4d41      	ldr	r5, [pc, #260]	; (800f44c <xTaskResumeAll.part.0+0x10c>)
BaseType_t xTaskResumeAll( void )
 800f346:	b083      	sub	sp, #12
	taskENTER_CRITICAL();
 800f348:	f7fe fc5c 	bl	800dc04 <vPortEnterCritical>
		--uxSchedulerSuspended;
 800f34c:	682b      	ldr	r3, [r5, #0]
 800f34e:	3b01      	subs	r3, #1
 800f350:	602b      	str	r3, [r5, #0]
		if( uxSchedulerSuspended == ( UBaseType_t ) pdFALSE )
 800f352:	682b      	ldr	r3, [r5, #0]
 800f354:	2b00      	cmp	r3, #0
 800f356:	d161      	bne.n	800f41c <xTaskResumeAll.part.0+0xdc>
			if( uxCurrentNumberOfTasks > ( UBaseType_t ) 0U )
 800f358:	4b3d      	ldr	r3, [pc, #244]	; (800f450 <xTaskResumeAll.part.0+0x110>)
 800f35a:	681b      	ldr	r3, [r3, #0]
 800f35c:	2b00      	cmp	r3, #0
 800f35e:	d05d      	beq.n	800f41c <xTaskResumeAll.part.0+0xdc>
				while( listLIST_IS_EMPTY( &xPendingReadyList ) == pdFALSE )
 800f360:	4e3c      	ldr	r6, [pc, #240]	; (800f454 <xTaskResumeAll.part.0+0x114>)
 800f362:	6833      	ldr	r3, [r6, #0]
 800f364:	2b00      	cmp	r3, #0
 800f366:	d06e      	beq.n	800f446 <xTaskResumeAll.part.0+0x106>
 800f368:	4f3b      	ldr	r7, [pc, #236]	; (800f458 <xTaskResumeAll.part.0+0x118>)
 800f36a:	f8df 90fc 	ldr.w	r9, [pc, #252]	; 800f468 <xTaskResumeAll.part.0+0x128>
 800f36e:	f8df 80fc 	ldr.w	r8, [pc, #252]	; 800f46c <xTaskResumeAll.part.0+0x12c>
 800f372:	f8df a0fc 	ldr.w	sl, [pc, #252]	; 800f470 <xTaskResumeAll.part.0+0x130>
					pxTCB = listGET_OWNER_OF_HEAD_ENTRY( ( &xPendingReadyList ) ); /*lint !e9079 void * is used as this macro is used with timers and co-routines too.  Alignment is known to be fine as the type of the pointer stored and retrieved is the same. */
 800f376:	68f3      	ldr	r3, [r6, #12]
 800f378:	68dc      	ldr	r4, [r3, #12]
					( void ) uxListRemove( &( pxTCB->xStateListItem ) );
 800f37a:	f104 0b04 	add.w	fp, r4, #4
					( void ) uxListRemove( &( pxTCB->xEventListItem ) );
 800f37e:	f104 0018 	add.w	r0, r4, #24
 800f382:	f7fe fbc7 	bl	800db14 <uxListRemove>
					( void ) uxListRemove( &( pxTCB->xStateListItem ) );
 800f386:	4658      	mov	r0, fp
 800f388:	f7fe fbc4 	bl	800db14 <uxListRemove>
					prvAddTaskToReadyList( pxTCB );
 800f38c:	6ae3      	ldr	r3, [r4, #44]	; 0x2c
 800f38e:	683a      	ldr	r2, [r7, #0]
 800f390:	eb03 0083 	add.w	r0, r3, r3, lsl #2
 800f394:	4293      	cmp	r3, r2
 800f396:	4659      	mov	r1, fp
 800f398:	eb09 0080 	add.w	r0, r9, r0, lsl #2
 800f39c:	bf88      	it	hi
 800f39e:	603b      	strhi	r3, [r7, #0]
 800f3a0:	f7fe fb90 	bl	800dac4 <vListInsertEnd>
					if( pxTCB->uxPriority >= pxCurrentTCB->uxPriority )
 800f3a4:	f8d8 3000 	ldr.w	r3, [r8]
 800f3a8:	6ae2      	ldr	r2, [r4, #44]	; 0x2c
 800f3aa:	6adb      	ldr	r3, [r3, #44]	; 0x2c
 800f3ac:	429a      	cmp	r2, r3
 800f3ae:	d33d      	bcc.n	800f42c <xTaskResumeAll.part.0+0xec>
						xYieldPending = pdTRUE;
 800f3b0:	2301      	movs	r3, #1
 800f3b2:	f8ca 3000 	str.w	r3, [sl]
				while( listLIST_IS_EMPTY( &xPendingReadyList ) == pdFALSE )
 800f3b6:	6833      	ldr	r3, [r6, #0]
 800f3b8:	2b00      	cmp	r3, #0
 800f3ba:	d1dc      	bne.n	800f376 <xTaskResumeAll.part.0+0x36>
	if( listLIST_IS_EMPTY( pxDelayedTaskList ) != pdFALSE )
 800f3bc:	4b27      	ldr	r3, [pc, #156]	; (800f45c <xTaskResumeAll.part.0+0x11c>)
 800f3be:	681a      	ldr	r2, [r3, #0]
 800f3c0:	6812      	ldr	r2, [r2, #0]
 800f3c2:	2a00      	cmp	r2, #0
 800f3c4:	d03a      	beq.n	800f43c <xTaskResumeAll.part.0+0xfc>
		( pxTCB ) = listGET_OWNER_OF_HEAD_ENTRY( pxDelayedTaskList ); /*lint !e9079 void * is used as this macro is used with timers and co-routines too.  Alignment is known to be fine as the type of the pointer stored and retrieved is the same. */
 800f3c6:	681a      	ldr	r2, [r3, #0]
		xNextTaskUnblockTime = listGET_LIST_ITEM_VALUE( &( ( pxTCB )->xStateListItem ) );
 800f3c8:	4b25      	ldr	r3, [pc, #148]	; (800f460 <xTaskResumeAll.part.0+0x120>)
		( pxTCB ) = listGET_OWNER_OF_HEAD_ENTRY( pxDelayedTaskList ); /*lint !e9079 void * is used as this macro is used with timers and co-routines too.  Alignment is known to be fine as the type of the pointer stored and retrieved is the same. */
 800f3ca:	68d2      	ldr	r2, [r2, #12]
		xNextTaskUnblockTime = listGET_LIST_ITEM_VALUE( &( ( pxTCB )->xStateListItem ) );
 800f3cc:	68d2      	ldr	r2, [r2, #12]
 800f3ce:	6852      	ldr	r2, [r2, #4]
 800f3d0:	601a      	str	r2, [r3, #0]
					TickType_t xPendedCounts = xPendedTicks; /* Non-volatile copy. */
 800f3d2:	4e24      	ldr	r6, [pc, #144]	; (800f464 <xTaskResumeAll.part.0+0x124>)
 800f3d4:	6834      	ldr	r4, [r6, #0]
					if( xPendedCounts > ( TickType_t ) 0U )
 800f3d6:	b194      	cbz	r4, 800f3fe <xTaskResumeAll.part.0+0xbe>
								xYieldPending = pdTRUE;
 800f3d8:	2701      	movs	r7, #1
 800f3da:	e006      	b.n	800f3ea <xTaskResumeAll.part.0+0xaa>
 800f3dc:	f7ff ff0c 	bl	800f1f8 <xTaskIncrementTick.part.0>
							if( xTaskIncrementTick() != pdFALSE )
 800f3e0:	b108      	cbz	r0, 800f3e6 <xTaskResumeAll.part.0+0xa6>
								xYieldPending = pdTRUE;
 800f3e2:	f8ca 7000 	str.w	r7, [sl]
						} while( xPendedCounts > ( TickType_t ) 0U );
 800f3e6:	3c01      	subs	r4, #1
 800f3e8:	d008      	beq.n	800f3fc <xTaskResumeAll.part.0+0xbc>
	if( uxSchedulerSuspended == ( UBaseType_t ) pdFALSE )
 800f3ea:	682b      	ldr	r3, [r5, #0]
 800f3ec:	2b00      	cmp	r3, #0
 800f3ee:	d0f5      	beq.n	800f3dc <xTaskResumeAll.part.0+0x9c>
		++xPendedTicks;
 800f3f0:	6833      	ldr	r3, [r6, #0]
						} while( xPendedCounts > ( TickType_t ) 0U );
 800f3f2:	3c01      	subs	r4, #1
		++xPendedTicks;
 800f3f4:	f103 0301 	add.w	r3, r3, #1
 800f3f8:	6033      	str	r3, [r6, #0]
						} while( xPendedCounts > ( TickType_t ) 0U );
 800f3fa:	d1f6      	bne.n	800f3ea <xTaskResumeAll.part.0+0xaa>
						xPendedTicks = 0;
 800f3fc:	6034      	str	r4, [r6, #0]
				if( xYieldPending != pdFALSE )
 800f3fe:	f8da 3000 	ldr.w	r3, [sl]
 800f402:	b15b      	cbz	r3, 800f41c <xTaskResumeAll.part.0+0xdc>
					taskYIELD_IF_USING_PREEMPTION();
 800f404:	f04f 23e0 	mov.w	r3, #3758153728	; 0xe000e000
 800f408:	f04f 5280 	mov.w	r2, #268435456	; 0x10000000
 800f40c:	f8c3 2d04 	str.w	r2, [r3, #3332]	; 0xd04
 800f410:	f3bf 8f4f 	dsb	sy
 800f414:	f3bf 8f6f 	isb	sy
						xAlreadyYielded = pdTRUE;
 800f418:	2001      	movs	r0, #1
 800f41a:	e000      	b.n	800f41e <xTaskResumeAll.part.0+0xde>
BaseType_t xAlreadyYielded = pdFALSE;
 800f41c:	2000      	movs	r0, #0
 800f41e:	9001      	str	r0, [sp, #4]
	taskEXIT_CRITICAL();
 800f420:	f7fe fc12 	bl	800dc48 <vPortExitCritical>
}
 800f424:	9801      	ldr	r0, [sp, #4]
 800f426:	b003      	add	sp, #12
 800f428:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
				while( listLIST_IS_EMPTY( &xPendingReadyList ) == pdFALSE )
 800f42c:	6833      	ldr	r3, [r6, #0]
 800f42e:	2b00      	cmp	r3, #0
 800f430:	d1a1      	bne.n	800f376 <xTaskResumeAll.part.0+0x36>
	if( listLIST_IS_EMPTY( pxDelayedTaskList ) != pdFALSE )
 800f432:	4b0a      	ldr	r3, [pc, #40]	; (800f45c <xTaskResumeAll.part.0+0x11c>)
 800f434:	681a      	ldr	r2, [r3, #0]
 800f436:	6812      	ldr	r2, [r2, #0]
 800f438:	2a00      	cmp	r2, #0
 800f43a:	d1c4      	bne.n	800f3c6 <xTaskResumeAll.part.0+0x86>
		xNextTaskUnblockTime = portMAX_DELAY;
 800f43c:	4b08      	ldr	r3, [pc, #32]	; (800f460 <xTaskResumeAll.part.0+0x120>)
 800f43e:	f04f 32ff 	mov.w	r2, #4294967295
 800f442:	601a      	str	r2, [r3, #0]
 800f444:	e7c5      	b.n	800f3d2 <xTaskResumeAll.part.0+0x92>
 800f446:	f8df a028 	ldr.w	sl, [pc, #40]	; 800f470 <xTaskResumeAll.part.0+0x130>
 800f44a:	e7c2      	b.n	800f3d2 <xTaskResumeAll.part.0+0x92>
 800f44c:	2001365c 	.word	0x2001365c
 800f450:	20013654 	.word	0x20013654
 800f454:	2001369c 	.word	0x2001369c
 800f458:	20013664 	.word	0x20013664
 800f45c:	200131ec 	.word	0x200131ec
 800f460:	20013690 	.word	0x20013690
 800f464:	20013698 	.word	0x20013698
 800f468:	200131f4 	.word	0x200131f4
 800f46c:	200131e8 	.word	0x200131e8
 800f470:	200136e0 	.word	0x200136e0

0800f474 <xTaskCreateStatic>:
	{
 800f474:	b530      	push	{r4, r5, lr}
 800f476:	b087      	sub	sp, #28
 800f478:	9c0b      	ldr	r4, [sp, #44]	; 0x2c
		configASSERT( puxStackBuffer != NULL );
 800f47a:	b1c4      	cbz	r4, 800f4ae <xTaskCreateStatic+0x3a>
		configASSERT( pxTaskBuffer != NULL );
 800f47c:	9d0c      	ldr	r5, [sp, #48]	; 0x30
 800f47e:	b16d      	cbz	r5, 800f49c <xTaskCreateStatic+0x28>
			volatile size_t xSize = sizeof( StaticTask_t );
 800f480:	25ac      	movs	r5, #172	; 0xac
 800f482:	9505      	str	r5, [sp, #20]
			configASSERT( xSize == sizeof( TCB_t ) );
 800f484:	9d05      	ldr	r5, [sp, #20]
 800f486:	2dac      	cmp	r5, #172	; 0xac
 800f488:	d01a      	beq.n	800f4c0 <xTaskCreateStatic+0x4c>
 800f48a:	f04f 0350 	mov.w	r3, #80	; 0x50
 800f48e:	f383 8811 	msr	BASEPRI, r3
 800f492:	f3bf 8f6f 	isb	sy
 800f496:	f3bf 8f4f 	dsb	sy
 800f49a:	e7fe      	b.n	800f49a <xTaskCreateStatic+0x26>
 800f49c:	f04f 0350 	mov.w	r3, #80	; 0x50
 800f4a0:	f383 8811 	msr	BASEPRI, r3
 800f4a4:	f3bf 8f6f 	isb	sy
 800f4a8:	f3bf 8f4f 	dsb	sy
		configASSERT( pxTaskBuffer != NULL );
 800f4ac:	e7fe      	b.n	800f4ac <xTaskCreateStatic+0x38>
 800f4ae:	f04f 0350 	mov.w	r3, #80	; 0x50
 800f4b2:	f383 8811 	msr	BASEPRI, r3
 800f4b6:	f3bf 8f6f 	isb	sy
 800f4ba:	f3bf 8f4f 	dsb	sy
		configASSERT( puxStackBuffer != NULL );
 800f4be:	e7fe      	b.n	800f4be <xTaskCreateStatic+0x4a>
			pxNewTCB->pxStack = ( StackType_t * ) puxStackBuffer;
 800f4c0:	9d0c      	ldr	r5, [sp, #48]	; 0x30
 800f4c2:	632c      	str	r4, [r5, #48]	; 0x30
				pxNewTCB->ucStaticallyAllocated = tskSTATICALLY_ALLOCATED_STACK_AND_TCB;
 800f4c4:	2402      	movs	r4, #2
 800f4c6:	f885 40a9 	strb.w	r4, [r5, #169]	; 0xa9
			prvInitialiseNewTask( pxTaskCode, pcName, ulStackDepth, pvParameters, uxPriority, &xReturn, pxNewTCB, NULL );
 800f4ca:	ac04      	add	r4, sp, #16
 800f4cc:	e9cd 4501 	strd	r4, r5, [sp, #4]
 800f4d0:	9c0a      	ldr	r4, [sp, #40]	; 0x28
 800f4d2:	9400      	str	r4, [sp, #0]
			( void ) xSize; /* Prevent lint warning when configASSERT() is not used. */
 800f4d4:	9c05      	ldr	r4, [sp, #20]
			prvInitialiseNewTask( pxTaskCode, pcName, ulStackDepth, pvParameters, uxPriority, &xReturn, pxNewTCB, NULL );
 800f4d6:	f7ff fda9 	bl	800f02c <prvInitialiseNewTask.constprop.0>
			prvAddNewTaskToReadyList( pxNewTCB );
 800f4da:	980c      	ldr	r0, [sp, #48]	; 0x30
 800f4dc:	f7ff fd1e 	bl	800ef1c <prvAddNewTaskToReadyList>
	}
 800f4e0:	9804      	ldr	r0, [sp, #16]
 800f4e2:	b007      	add	sp, #28
 800f4e4:	bd30      	pop	{r4, r5, pc}
 800f4e6:	bf00      	nop

0800f4e8 <xTaskCreate>:
	{
 800f4e8:	e92d 43f0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, lr}
 800f4ec:	4607      	mov	r7, r0
 800f4ee:	b085      	sub	sp, #20
			pxStack = pvPortMalloc( ( ( ( size_t ) usStackDepth ) * sizeof( StackType_t ) ) ); /*lint !e9079 All values returned by pvPortMalloc() have at least the alignment required by the MCU's stack and this allocation is the stack. */
 800f4f0:	0090      	lsls	r0, r2, #2
	{
 800f4f2:	4615      	mov	r5, r2
 800f4f4:	4688      	mov	r8, r1
 800f4f6:	4699      	mov	r9, r3
			pxStack = pvPortMalloc( ( ( ( size_t ) usStackDepth ) * sizeof( StackType_t ) ) ); /*lint !e9079 All values returned by pvPortMalloc() have at least the alignment required by the MCU's stack and this allocation is the stack. */
 800f4f8:	f7fe f9b4 	bl	800d864 <pvPortMalloc>
			if( pxStack != NULL )
 800f4fc:	b1d8      	cbz	r0, 800f536 <xTaskCreate+0x4e>
				pxNewTCB = ( TCB_t * ) pvPortMalloc( sizeof( TCB_t ) ); /*lint !e9087 !e9079 All values returned by pvPortMalloc() have at least the alignment required by the MCU's stack, and the first member of TCB_t is always a pointer to the task's stack. */
 800f4fe:	4604      	mov	r4, r0
 800f500:	20ac      	movs	r0, #172	; 0xac
 800f502:	f7fe f9af 	bl	800d864 <pvPortMalloc>
				if( pxNewTCB != NULL )
 800f506:	4606      	mov	r6, r0
 800f508:	b1d0      	cbz	r0, 800f540 <xTaskCreate+0x58>
					pxNewTCB->pxStack = pxStack;
 800f50a:	6304      	str	r4, [r0, #48]	; 0x30
				pxNewTCB->ucStaticallyAllocated = tskDYNAMICALLY_ALLOCATED_STACK_AND_TCB;
 800f50c:	2400      	movs	r4, #0
 800f50e:	f886 40a9 	strb.w	r4, [r6, #169]	; 0xa9
			prvInitialiseNewTask( pxTaskCode, pcName, ( uint32_t ) usStackDepth, pvParameters, uxPriority, pxCreatedTask, pxNewTCB, NULL );
 800f512:	9c0d      	ldr	r4, [sp, #52]	; 0x34
 800f514:	9401      	str	r4, [sp, #4]
 800f516:	9c0c      	ldr	r4, [sp, #48]	; 0x30
 800f518:	9602      	str	r6, [sp, #8]
 800f51a:	464b      	mov	r3, r9
 800f51c:	462a      	mov	r2, r5
 800f51e:	4641      	mov	r1, r8
 800f520:	4638      	mov	r0, r7
 800f522:	9400      	str	r4, [sp, #0]
 800f524:	f7ff fd82 	bl	800f02c <prvInitialiseNewTask.constprop.0>
			prvAddNewTaskToReadyList( pxNewTCB );
 800f528:	4630      	mov	r0, r6
 800f52a:	f7ff fcf7 	bl	800ef1c <prvAddNewTaskToReadyList>
			xReturn = pdPASS;
 800f52e:	2001      	movs	r0, #1
	}
 800f530:	b005      	add	sp, #20
 800f532:	e8bd 83f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, pc}
			xReturn = errCOULD_NOT_ALLOCATE_REQUIRED_MEMORY;
 800f536:	f04f 30ff 	mov.w	r0, #4294967295
	}
 800f53a:	b005      	add	sp, #20
 800f53c:	e8bd 83f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, pc}
					vPortFree( pxStack );
 800f540:	4620      	mov	r0, r4
 800f542:	f7fe fa4b 	bl	800d9dc <vPortFree>
			xReturn = errCOULD_NOT_ALLOCATE_REQUIRED_MEMORY;
 800f546:	f04f 30ff 	mov.w	r0, #4294967295
 800f54a:	e7f1      	b.n	800f530 <xTaskCreate+0x48>

0800f54c <vTaskDelay>:
	{
 800f54c:	b5f8      	push	{r3, r4, r5, r6, r7, lr}
		if( xTicksToDelay > ( TickType_t ) 0U )
 800f54e:	b950      	cbnz	r0, 800f566 <vTaskDelay+0x1a>
			portYIELD_WITHIN_API();
 800f550:	f04f 23e0 	mov.w	r3, #3758153728	; 0xe000e000
 800f554:	f04f 5280 	mov.w	r2, #268435456	; 0x10000000
 800f558:	f8c3 2d04 	str.w	r2, [r3, #3332]	; 0xd04
 800f55c:	f3bf 8f4f 	dsb	sy
 800f560:	f3bf 8f6f 	isb	sy
	}
 800f564:	bdf8      	pop	{r3, r4, r5, r6, r7, pc}
			configASSERT( uxSchedulerSuspended == 0 );
 800f566:	4d1e      	ldr	r5, [pc, #120]	; (800f5e0 <vTaskDelay+0x94>)
 800f568:	682b      	ldr	r3, [r5, #0]
 800f56a:	b143      	cbz	r3, 800f57e <vTaskDelay+0x32>
 800f56c:	f04f 0350 	mov.w	r3, #80	; 0x50
 800f570:	f383 8811 	msr	BASEPRI, r3
 800f574:	f3bf 8f6f 	isb	sy
 800f578:	f3bf 8f4f 	dsb	sy
 800f57c:	e7fe      	b.n	800f57c <vTaskDelay+0x30>
	++uxSchedulerSuspended;
 800f57e:	682b      	ldr	r3, [r5, #0]
 800f580:	3301      	adds	r3, #1
 800f582:	4604      	mov	r4, r0
 800f584:	602b      	str	r3, [r5, #0]
/*-----------------------------------------------------------*/

static void prvAddCurrentTaskToDelayedList( TickType_t xTicksToWait, const BaseType_t xCanBlockIndefinitely )
{
TickType_t xTimeToWake;
const TickType_t xConstTickCount = xTickCount;
 800f586:	4b17      	ldr	r3, [pc, #92]	; (800f5e4 <vTaskDelay+0x98>)
	}
	#endif

	/* Remove the task from the ready list before adding it to the blocked list
	as the same list item is used for both lists. */
	if( uxListRemove( &( pxCurrentTCB->xStateListItem ) ) == ( UBaseType_t ) 0 )
 800f588:	4e17      	ldr	r6, [pc, #92]	; (800f5e8 <vTaskDelay+0x9c>)
const TickType_t xConstTickCount = xTickCount;
 800f58a:	681f      	ldr	r7, [r3, #0]
	if( uxListRemove( &( pxCurrentTCB->xStateListItem ) ) == ( UBaseType_t ) 0 )
 800f58c:	6830      	ldr	r0, [r6, #0]
 800f58e:	3004      	adds	r0, #4
 800f590:	f7fe fac0 	bl	800db14 <uxListRemove>
			does not occur.  This may overflow but this doesn't matter, the
			kernel will manage it correctly. */
			xTimeToWake = xConstTickCount + xTicksToWait;

			/* The list item will be inserted in wake time order. */
			listSET_LIST_ITEM_VALUE( &( pxCurrentTCB->xStateListItem ), xTimeToWake );
 800f594:	6833      	ldr	r3, [r6, #0]
 800f596:	19e4      	adds	r4, r4, r7
 800f598:	605c      	str	r4, [r3, #4]

			if( xTimeToWake < xConstTickCount )
 800f59a:	d310      	bcc.n	800f5be <vTaskDelay+0x72>
			{
				/* Wake time has overflowed.  Place this item in the overflow
				list. */
				vListInsert( pxOverflowDelayedTaskList, &( pxCurrentTCB->xStateListItem ) );
 800f59c:	4b13      	ldr	r3, [pc, #76]	; (800f5ec <vTaskDelay+0xa0>)
 800f59e:	6818      	ldr	r0, [r3, #0]
 800f5a0:	6831      	ldr	r1, [r6, #0]
 800f5a2:	3104      	adds	r1, #4
 800f5a4:	f7fe fa9e 	bl	800dae4 <vListInsert>
	configASSERT( uxSchedulerSuspended );
 800f5a8:	682b      	ldr	r3, [r5, #0]
 800f5aa:	b9a3      	cbnz	r3, 800f5d6 <vTaskDelay+0x8a>
 800f5ac:	f04f 0350 	mov.w	r3, #80	; 0x50
 800f5b0:	f383 8811 	msr	BASEPRI, r3
 800f5b4:	f3bf 8f6f 	isb	sy
 800f5b8:	f3bf 8f4f 	dsb	sy
 800f5bc:	e7fe      	b.n	800f5bc <vTaskDelay+0x70>
			}
			else
			{
				/* The wake time has not overflowed, so the current block list
				is used. */
				vListInsert( pxDelayedTaskList, &( pxCurrentTCB->xStateListItem ) );
 800f5be:	4b0c      	ldr	r3, [pc, #48]	; (800f5f0 <vTaskDelay+0xa4>)
 800f5c0:	6818      	ldr	r0, [r3, #0]
 800f5c2:	6831      	ldr	r1, [r6, #0]
 800f5c4:	3104      	adds	r1, #4
 800f5c6:	f7fe fa8d 	bl	800dae4 <vListInsert>

				/* If the task entering the blocked state was placed at the
				head of the list of blocked tasks then xNextTaskUnblockTime
				needs to be updated too. */
				if( xTimeToWake < xNextTaskUnblockTime )
 800f5ca:	4b0a      	ldr	r3, [pc, #40]	; (800f5f4 <vTaskDelay+0xa8>)
 800f5cc:	681a      	ldr	r2, [r3, #0]
 800f5ce:	4294      	cmp	r4, r2
				{
					xNextTaskUnblockTime = xTimeToWake;
 800f5d0:	bf38      	it	cc
 800f5d2:	601c      	strcc	r4, [r3, #0]
 800f5d4:	e7e8      	b.n	800f5a8 <vTaskDelay+0x5c>
 800f5d6:	f7ff feb3 	bl	800f340 <xTaskResumeAll.part.0>
		if( xAlreadyYielded == pdFALSE )
 800f5da:	2800      	cmp	r0, #0
 800f5dc:	d0b8      	beq.n	800f550 <vTaskDelay+0x4>
	}
 800f5de:	bdf8      	pop	{r3, r4, r5, r6, r7, pc}
 800f5e0:	2001365c 	.word	0x2001365c
 800f5e4:	200136dc 	.word	0x200136dc
 800f5e8:	200131e8 	.word	0x200131e8
 800f5ec:	200131f0 	.word	0x200131f0
 800f5f0:	200131ec 	.word	0x200131ec
 800f5f4:	20013690 	.word	0x20013690

0800f5f8 <vTaskStartScheduler>:
{
 800f5f8:	b530      	push	{r4, r5, lr}
 800f5fa:	b08b      	sub	sp, #44	; 0x2c
		vApplicationGetIdleTaskMemory( &pxIdleTaskTCBBuffer, &pxIdleTaskStackBuffer, &ulIdleTaskStackSize );
 800f5fc:	aa07      	add	r2, sp, #28
		StaticTask_t *pxIdleTaskTCBBuffer = NULL;
 800f5fe:	2400      	movs	r4, #0
		vApplicationGetIdleTaskMemory( &pxIdleTaskTCBBuffer, &pxIdleTaskStackBuffer, &ulIdleTaskStackSize );
 800f600:	a906      	add	r1, sp, #24
 800f602:	a805      	add	r0, sp, #20
		StackType_t *pxIdleTaskStackBuffer = NULL;
 800f604:	e9cd 4405 	strd	r4, r4, [sp, #20]
		vApplicationGetIdleTaskMemory( &pxIdleTaskTCBBuffer, &pxIdleTaskStackBuffer, &ulIdleTaskStackSize );
 800f608:	f7fe f90e 	bl	800d828 <vApplicationGetIdleTaskMemory>
		xIdleTaskHandle = xTaskCreateStatic(	prvIdleTask,
 800f60c:	e9dd 3206 	ldrd	r3, r2, [sp, #24]
 800f610:	9d05      	ldr	r5, [sp, #20]
		configASSERT( puxStackBuffer != NULL );
 800f612:	b1bb      	cbz	r3, 800f644 <vTaskStartScheduler+0x4c>
		configASSERT( pxTaskBuffer != NULL );
 800f614:	b16d      	cbz	r5, 800f632 <vTaskStartScheduler+0x3a>
			volatile size_t xSize = sizeof( StaticTask_t );
 800f616:	21ac      	movs	r1, #172	; 0xac
 800f618:	9109      	str	r1, [sp, #36]	; 0x24
			configASSERT( xSize == sizeof( TCB_t ) );
 800f61a:	9909      	ldr	r1, [sp, #36]	; 0x24
 800f61c:	29ac      	cmp	r1, #172	; 0xac
 800f61e:	d01a      	beq.n	800f656 <vTaskStartScheduler+0x5e>
 800f620:	f04f 0350 	mov.w	r3, #80	; 0x50
 800f624:	f383 8811 	msr	BASEPRI, r3
 800f628:	f3bf 8f6f 	isb	sy
 800f62c:	f3bf 8f4f 	dsb	sy
 800f630:	e7fe      	b.n	800f630 <vTaskStartScheduler+0x38>
 800f632:	f04f 0350 	mov.w	r3, #80	; 0x50
 800f636:	f383 8811 	msr	BASEPRI, r3
 800f63a:	f3bf 8f6f 	isb	sy
 800f63e:	f3bf 8f4f 	dsb	sy
		configASSERT( pxTaskBuffer != NULL );
 800f642:	e7fe      	b.n	800f642 <vTaskStartScheduler+0x4a>
 800f644:	f04f 0350 	mov.w	r3, #80	; 0x50
 800f648:	f383 8811 	msr	BASEPRI, r3
 800f64c:	f3bf 8f6f 	isb	sy
 800f650:	f3bf 8f4f 	dsb	sy
		configASSERT( puxStackBuffer != NULL );
 800f654:	e7fe      	b.n	800f654 <vTaskStartScheduler+0x5c>
				pxNewTCB->ucStaticallyAllocated = tskSTATICALLY_ALLOCATED_STACK_AND_TCB;
 800f656:	2102      	movs	r1, #2
			prvInitialiseNewTask( pxTaskCode, pcName, ulStackDepth, pvParameters, uxPriority, &xReturn, pxNewTCB, NULL );
 800f658:	a808      	add	r0, sp, #32
			pxNewTCB->pxStack = ( StackType_t * ) puxStackBuffer;
 800f65a:	632b      	str	r3, [r5, #48]	; 0x30
				pxNewTCB->ucStaticallyAllocated = tskSTATICALLY_ALLOCATED_STACK_AND_TCB;
 800f65c:	f885 10a9 	strb.w	r1, [r5, #169]	; 0xa9
			prvInitialiseNewTask( pxTaskCode, pcName, ulStackDepth, pvParameters, uxPriority, &xReturn, pxNewTCB, NULL );
 800f660:	4623      	mov	r3, r4
 800f662:	e9cd 0501 	strd	r0, r5, [sp, #4]
 800f666:	491b      	ldr	r1, [pc, #108]	; (800f6d4 <vTaskStartScheduler+0xdc>)
			( void ) xSize; /* Prevent lint warning when configASSERT() is not used. */
 800f668:	9809      	ldr	r0, [sp, #36]	; 0x24
			prvInitialiseNewTask( pxTaskCode, pcName, ulStackDepth, pvParameters, uxPriority, &xReturn, pxNewTCB, NULL );
 800f66a:	9400      	str	r4, [sp, #0]
 800f66c:	481a      	ldr	r0, [pc, #104]	; (800f6d8 <vTaskStartScheduler+0xe0>)
 800f66e:	f7ff fcdd 	bl	800f02c <prvInitialiseNewTask.constprop.0>
			prvAddNewTaskToReadyList( pxNewTCB );
 800f672:	4628      	mov	r0, r5
 800f674:	f7ff fc52 	bl	800ef1c <prvAddNewTaskToReadyList>
		return xReturn;
 800f678:	9b08      	ldr	r3, [sp, #32]
		if( xIdleTaskHandle != NULL )
 800f67a:	b1eb      	cbz	r3, 800f6b8 <vTaskStartScheduler+0xc0>
			xReturn = xTimerCreateTimerTask();
 800f67c:	f000 fc6e 	bl	800ff5c <xTimerCreateTimerTask>
	if( xReturn == pdPASS )
 800f680:	2801      	cmp	r0, #1
 800f682:	d11b      	bne.n	800f6bc <vTaskStartScheduler+0xc4>
 800f684:	f04f 0350 	mov.w	r3, #80	; 0x50
 800f688:	f383 8811 	msr	BASEPRI, r3
 800f68c:	f3bf 8f6f 	isb	sy
 800f690:	f3bf 8f4f 	dsb	sy
			_impure_ptr = &( pxCurrentTCB->xNewLib_reent );
 800f694:	4b11      	ldr	r3, [pc, #68]	; (800f6dc <vTaskStartScheduler+0xe4>)
 800f696:	4a12      	ldr	r2, [pc, #72]	; (800f6e0 <vTaskStartScheduler+0xe8>)
 800f698:	681b      	ldr	r3, [r3, #0]
		xNextTaskUnblockTime = portMAX_DELAY;
 800f69a:	4912      	ldr	r1, [pc, #72]	; (800f6e4 <vTaskStartScheduler+0xec>)
			_impure_ptr = &( pxCurrentTCB->xNewLib_reent );
 800f69c:	3358      	adds	r3, #88	; 0x58
 800f69e:	6013      	str	r3, [r2, #0]
		xSchedulerRunning = pdTRUE;
 800f6a0:	4a11      	ldr	r2, [pc, #68]	; (800f6e8 <vTaskStartScheduler+0xf0>)
		xTickCount = ( TickType_t ) configINITIAL_TICK_COUNT;
 800f6a2:	4b12      	ldr	r3, [pc, #72]	; (800f6ec <vTaskStartScheduler+0xf4>)
		xNextTaskUnblockTime = portMAX_DELAY;
 800f6a4:	f04f 35ff 	mov.w	r5, #4294967295
 800f6a8:	600d      	str	r5, [r1, #0]
		xSchedulerRunning = pdTRUE;
 800f6aa:	6010      	str	r0, [r2, #0]
		xTickCount = ( TickType_t ) configINITIAL_TICK_COUNT;
 800f6ac:	601c      	str	r4, [r3, #0]
}
 800f6ae:	b00b      	add	sp, #44	; 0x2c
 800f6b0:	e8bd 4030 	ldmia.w	sp!, {r4, r5, lr}
		if( xPortStartScheduler() != pdFALSE )
 800f6b4:	f7fe bb38 	b.w	800dd28 <xPortStartScheduler>
}
 800f6b8:	b00b      	add	sp, #44	; 0x2c
 800f6ba:	bd30      	pop	{r4, r5, pc}
		configASSERT( xReturn != errCOULD_NOT_ALLOCATE_REQUIRED_MEMORY );
 800f6bc:	3001      	adds	r0, #1
 800f6be:	d1fb      	bne.n	800f6b8 <vTaskStartScheduler+0xc0>
 800f6c0:	f04f 0350 	mov.w	r3, #80	; 0x50
 800f6c4:	f383 8811 	msr	BASEPRI, r3
 800f6c8:	f3bf 8f6f 	isb	sy
 800f6cc:	f3bf 8f4f 	dsb	sy
 800f6d0:	e7fe      	b.n	800f6d0 <vTaskStartScheduler+0xd8>
 800f6d2:	bf00      	nop
 800f6d4:	0802ee34 	.word	0x0802ee34
 800f6d8:	0800f159 	.word	0x0800f159
 800f6dc:	200131e8 	.word	0x200131e8
 800f6e0:	20000160 	.word	0x20000160
 800f6e4:	20013690 	.word	0x20013690
 800f6e8:	200136b0 	.word	0x200136b0
 800f6ec:	200136dc 	.word	0x200136dc

0800f6f0 <vTaskSuspendAll>:
	++uxSchedulerSuspended;
 800f6f0:	4a02      	ldr	r2, [pc, #8]	; (800f6fc <vTaskSuspendAll+0xc>)
 800f6f2:	6813      	ldr	r3, [r2, #0]
 800f6f4:	3301      	adds	r3, #1
 800f6f6:	6013      	str	r3, [r2, #0]
}
 800f6f8:	4770      	bx	lr
 800f6fa:	bf00      	nop
 800f6fc:	2001365c 	.word	0x2001365c

0800f700 <xTaskResumeAll>:
	configASSERT( uxSchedulerSuspended );
 800f700:	4b06      	ldr	r3, [pc, #24]	; (800f71c <xTaskResumeAll+0x1c>)
 800f702:	681b      	ldr	r3, [r3, #0]
 800f704:	b943      	cbnz	r3, 800f718 <xTaskResumeAll+0x18>
 800f706:	f04f 0350 	mov.w	r3, #80	; 0x50
 800f70a:	f383 8811 	msr	BASEPRI, r3
 800f70e:	f3bf 8f6f 	isb	sy
 800f712:	f3bf 8f4f 	dsb	sy
 800f716:	e7fe      	b.n	800f716 <xTaskResumeAll+0x16>
 800f718:	f7ff be12 	b.w	800f340 <xTaskResumeAll.part.0>
 800f71c:	2001365c 	.word	0x2001365c

0800f720 <xTaskGetTickCount>:
		xTicks = xTickCount;
 800f720:	4b01      	ldr	r3, [pc, #4]	; (800f728 <xTaskGetTickCount+0x8>)
 800f722:	6818      	ldr	r0, [r3, #0]
}
 800f724:	4770      	bx	lr
 800f726:	bf00      	nop
 800f728:	200136dc 	.word	0x200136dc

0800f72c <xTaskIncrementTick>:
	if( uxSchedulerSuspended == ( UBaseType_t ) pdFALSE )
 800f72c:	4b05      	ldr	r3, [pc, #20]	; (800f744 <xTaskIncrementTick+0x18>)
 800f72e:	681b      	ldr	r3, [r3, #0]
 800f730:	b90b      	cbnz	r3, 800f736 <xTaskIncrementTick+0xa>
 800f732:	f7ff bd61 	b.w	800f1f8 <xTaskIncrementTick.part.0>
		++xPendedTicks;
 800f736:	4a04      	ldr	r2, [pc, #16]	; (800f748 <xTaskIncrementTick+0x1c>)
 800f738:	6813      	ldr	r3, [r2, #0]
 800f73a:	3301      	adds	r3, #1
}
 800f73c:	2000      	movs	r0, #0
		++xPendedTicks;
 800f73e:	6013      	str	r3, [r2, #0]
}
 800f740:	4770      	bx	lr
 800f742:	bf00      	nop
 800f744:	2001365c 	.word	0x2001365c
 800f748:	20013698 	.word	0x20013698

0800f74c <vTaskSwitchContext>:
	if( uxSchedulerSuspended != ( UBaseType_t ) pdFALSE )
 800f74c:	4b1f      	ldr	r3, [pc, #124]	; (800f7cc <vTaskSwitchContext+0x80>)
 800f74e:	681b      	ldr	r3, [r3, #0]
 800f750:	b11b      	cbz	r3, 800f75a <vTaskSwitchContext+0xe>
		xYieldPending = pdTRUE;
 800f752:	4b1f      	ldr	r3, [pc, #124]	; (800f7d0 <vTaskSwitchContext+0x84>)
 800f754:	2201      	movs	r2, #1
 800f756:	601a      	str	r2, [r3, #0]
 800f758:	4770      	bx	lr
		xYieldPending = pdFALSE;
 800f75a:	4a1d      	ldr	r2, [pc, #116]	; (800f7d0 <vTaskSwitchContext+0x84>)
		taskSELECT_HIGHEST_PRIORITY_TASK(); /*lint !e9079 void * is used as this macro is used with timers and co-routines too.  Alignment is known to be fine as the type of the pointer stored and retrieved is the same. */
 800f75c:	491d      	ldr	r1, [pc, #116]	; (800f7d4 <vTaskSwitchContext+0x88>)
{
 800f75e:	b410      	push	{r4}
		taskSELECT_HIGHEST_PRIORITY_TASK(); /*lint !e9079 void * is used as this macro is used with timers and co-routines too.  Alignment is known to be fine as the type of the pointer stored and retrieved is the same. */
 800f760:	4c1d      	ldr	r4, [pc, #116]	; (800f7d8 <vTaskSwitchContext+0x8c>)
		xYieldPending = pdFALSE;
 800f762:	6013      	str	r3, [r2, #0]
		taskSELECT_HIGHEST_PRIORITY_TASK(); /*lint !e9079 void * is used as this macro is used with timers and co-routines too.  Alignment is known to be fine as the type of the pointer stored and retrieved is the same. */
 800f764:	6823      	ldr	r3, [r4, #0]
 800f766:	eb03 0283 	add.w	r2, r3, r3, lsl #2
 800f76a:	0092      	lsls	r2, r2, #2
 800f76c:	0098      	lsls	r0, r3, #2
 800f76e:	588a      	ldr	r2, [r1, r2]
 800f770:	b942      	cbnz	r2, 800f784 <vTaskSwitchContext+0x38>
 800f772:	b313      	cbz	r3, 800f7ba <vTaskSwitchContext+0x6e>
 800f774:	3b01      	subs	r3, #1
 800f776:	eb03 0283 	add.w	r2, r3, r3, lsl #2
 800f77a:	0098      	lsls	r0, r3, #2
 800f77c:	f851 2022 	ldr.w	r2, [r1, r2, lsl #2]
 800f780:	2a00      	cmp	r2, #0
 800f782:	d0f6      	beq.n	800f772 <vTaskSwitchContext+0x26>
 800f784:	4418      	add	r0, r3
 800f786:	eb01 0c80 	add.w	ip, r1, r0, lsl #2
 800f78a:	4662      	mov	r2, ip
 800f78c:	f8dc 1004 	ldr.w	r1, [ip, #4]
 800f790:	6849      	ldr	r1, [r1, #4]
 800f792:	f8cc 1004 	str.w	r1, [ip, #4]
 800f796:	3208      	adds	r2, #8
 800f798:	4291      	cmp	r1, r2
 800f79a:	bf08      	it	eq
 800f79c:	6849      	ldreq	r1, [r1, #4]
 800f79e:	4a0f      	ldr	r2, [pc, #60]	; (800f7dc <vTaskSwitchContext+0x90>)
 800f7a0:	bf08      	it	eq
 800f7a2:	f8cc 1004 	streq.w	r1, [ip, #4]
 800f7a6:	68c9      	ldr	r1, [r1, #12]
 800f7a8:	6011      	str	r1, [r2, #0]
 800f7aa:	6023      	str	r3, [r4, #0]
			_impure_ptr = &( pxCurrentTCB->xNewLib_reent );
 800f7ac:	6813      	ldr	r3, [r2, #0]
 800f7ae:	4a0c      	ldr	r2, [pc, #48]	; (800f7e0 <vTaskSwitchContext+0x94>)
}
 800f7b0:	f85d 4b04 	ldr.w	r4, [sp], #4
			_impure_ptr = &( pxCurrentTCB->xNewLib_reent );
 800f7b4:	3358      	adds	r3, #88	; 0x58
 800f7b6:	6013      	str	r3, [r2, #0]
}
 800f7b8:	4770      	bx	lr
 800f7ba:	f04f 0350 	mov.w	r3, #80	; 0x50
 800f7be:	f383 8811 	msr	BASEPRI, r3
 800f7c2:	f3bf 8f6f 	isb	sy
 800f7c6:	f3bf 8f4f 	dsb	sy
		taskSELECT_HIGHEST_PRIORITY_TASK(); /*lint !e9079 void * is used as this macro is used with timers and co-routines too.  Alignment is known to be fine as the type of the pointer stored and retrieved is the same. */
 800f7ca:	e7fe      	b.n	800f7ca <vTaskSwitchContext+0x7e>
 800f7cc:	2001365c 	.word	0x2001365c
 800f7d0:	200136e0 	.word	0x200136e0
 800f7d4:	200131f4 	.word	0x200131f4
 800f7d8:	20013664 	.word	0x20013664
 800f7dc:	200131e8 	.word	0x200131e8
 800f7e0:	20000160 	.word	0x20000160

0800f7e4 <vTaskPlaceOnEventList>:
	configASSERT( pxEventList );
 800f7e4:	b1d0      	cbz	r0, 800f81c <vTaskPlaceOnEventList+0x38>
{
 800f7e6:	b570      	push	{r4, r5, r6, lr}
	vListInsert( pxEventList, &( pxCurrentTCB->xEventListItem ) );
 800f7e8:	4d1a      	ldr	r5, [pc, #104]	; (800f854 <vTaskPlaceOnEventList+0x70>)
 800f7ea:	460c      	mov	r4, r1
 800f7ec:	6829      	ldr	r1, [r5, #0]
 800f7ee:	3118      	adds	r1, #24
 800f7f0:	f7fe f978 	bl	800dae4 <vListInsert>
const TickType_t xConstTickCount = xTickCount;
 800f7f4:	4b18      	ldr	r3, [pc, #96]	; (800f858 <vTaskPlaceOnEventList+0x74>)
 800f7f6:	681e      	ldr	r6, [r3, #0]
	if( uxListRemove( &( pxCurrentTCB->xStateListItem ) ) == ( UBaseType_t ) 0 )
 800f7f8:	6828      	ldr	r0, [r5, #0]
 800f7fa:	3004      	adds	r0, #4
 800f7fc:	f7fe f98a 	bl	800db14 <uxListRemove>
		if( ( xTicksToWait == portMAX_DELAY ) && ( xCanBlockIndefinitely != pdFALSE ) )
 800f800:	1c63      	adds	r3, r4, #1
 800f802:	d014      	beq.n	800f82e <vTaskPlaceOnEventList+0x4a>
			listSET_LIST_ITEM_VALUE( &( pxCurrentTCB->xStateListItem ), xTimeToWake );
 800f804:	682b      	ldr	r3, [r5, #0]
 800f806:	19a4      	adds	r4, r4, r6
 800f808:	605c      	str	r4, [r3, #4]
			if( xTimeToWake < xConstTickCount )
 800f80a:	d317      	bcc.n	800f83c <vTaskPlaceOnEventList+0x58>
				vListInsert( pxOverflowDelayedTaskList, &( pxCurrentTCB->xStateListItem ) );
 800f80c:	4b13      	ldr	r3, [pc, #76]	; (800f85c <vTaskPlaceOnEventList+0x78>)
 800f80e:	6818      	ldr	r0, [r3, #0]
 800f810:	6829      	ldr	r1, [r5, #0]
}
 800f812:	e8bd 4070 	ldmia.w	sp!, {r4, r5, r6, lr}
				vListInsert( pxOverflowDelayedTaskList, &( pxCurrentTCB->xStateListItem ) );
 800f816:	3104      	adds	r1, #4
 800f818:	f7fe b964 	b.w	800dae4 <vListInsert>
 800f81c:	f04f 0350 	mov.w	r3, #80	; 0x50
 800f820:	f383 8811 	msr	BASEPRI, r3
 800f824:	f3bf 8f6f 	isb	sy
 800f828:	f3bf 8f4f 	dsb	sy
	configASSERT( pxEventList );
 800f82c:	e7fe      	b.n	800f82c <vTaskPlaceOnEventList+0x48>
			vListInsertEnd( &xSuspendedTaskList, &( pxCurrentTCB->xStateListItem ) );
 800f82e:	6829      	ldr	r1, [r5, #0]
 800f830:	480b      	ldr	r0, [pc, #44]	; (800f860 <vTaskPlaceOnEventList+0x7c>)
}
 800f832:	e8bd 4070 	ldmia.w	sp!, {r4, r5, r6, lr}
			vListInsertEnd( &xSuspendedTaskList, &( pxCurrentTCB->xStateListItem ) );
 800f836:	3104      	adds	r1, #4
 800f838:	f7fe b944 	b.w	800dac4 <vListInsertEnd>
				vListInsert( pxDelayedTaskList, &( pxCurrentTCB->xStateListItem ) );
 800f83c:	4b09      	ldr	r3, [pc, #36]	; (800f864 <vTaskPlaceOnEventList+0x80>)
 800f83e:	6818      	ldr	r0, [r3, #0]
 800f840:	6829      	ldr	r1, [r5, #0]
 800f842:	3104      	adds	r1, #4
 800f844:	f7fe f94e 	bl	800dae4 <vListInsert>
				if( xTimeToWake < xNextTaskUnblockTime )
 800f848:	4b07      	ldr	r3, [pc, #28]	; (800f868 <vTaskPlaceOnEventList+0x84>)
 800f84a:	681a      	ldr	r2, [r3, #0]
 800f84c:	4294      	cmp	r4, r2
					xNextTaskUnblockTime = xTimeToWake;
 800f84e:	bf38      	it	cc
 800f850:	601c      	strcc	r4, [r3, #0]
}
 800f852:	bd70      	pop	{r4, r5, r6, pc}
 800f854:	200131e8 	.word	0x200131e8
 800f858:	200136dc 	.word	0x200136dc
 800f85c:	200131f0 	.word	0x200131f0
 800f860:	200136b4 	.word	0x200136b4
 800f864:	200131ec 	.word	0x200131ec
 800f868:	20013690 	.word	0x20013690

0800f86c <vTaskPlaceOnEventListRestricted>:
		configASSERT( pxEventList );
 800f86c:	b330      	cbz	r0, 800f8bc <vTaskPlaceOnEventListRestricted+0x50>
	{
 800f86e:	b570      	push	{r4, r5, r6, lr}
		vListInsertEnd( pxEventList, &( pxCurrentTCB->xEventListItem ) );
 800f870:	4e1d      	ldr	r6, [pc, #116]	; (800f8e8 <vTaskPlaceOnEventListRestricted+0x7c>)
 800f872:	460c      	mov	r4, r1
 800f874:	6831      	ldr	r1, [r6, #0]
 800f876:	4615      	mov	r5, r2
 800f878:	3118      	adds	r1, #24
 800f87a:	f7fe f923 	bl	800dac4 <vListInsertEnd>
const TickType_t xConstTickCount = xTickCount;
 800f87e:	4b1b      	ldr	r3, [pc, #108]	; (800f8ec <vTaskPlaceOnEventListRestricted+0x80>)
		if( xWaitIndefinitely != pdFALSE )
 800f880:	b985      	cbnz	r5, 800f8a4 <vTaskPlaceOnEventListRestricted+0x38>
const TickType_t xConstTickCount = xTickCount;
 800f882:	681d      	ldr	r5, [r3, #0]
	if( uxListRemove( &( pxCurrentTCB->xStateListItem ) ) == ( UBaseType_t ) 0 )
 800f884:	6830      	ldr	r0, [r6, #0]
 800f886:	3004      	adds	r0, #4
 800f888:	f7fe f944 	bl	800db14 <uxListRemove>
			listSET_LIST_ITEM_VALUE( &( pxCurrentTCB->xStateListItem ), xTimeToWake );
 800f88c:	6833      	ldr	r3, [r6, #0]
 800f88e:	1964      	adds	r4, r4, r5
 800f890:	605c      	str	r4, [r3, #4]
			if( xTimeToWake < xConstTickCount )
 800f892:	d31c      	bcc.n	800f8ce <vTaskPlaceOnEventListRestricted+0x62>
				vListInsert( pxOverflowDelayedTaskList, &( pxCurrentTCB->xStateListItem ) );
 800f894:	4b16      	ldr	r3, [pc, #88]	; (800f8f0 <vTaskPlaceOnEventListRestricted+0x84>)
 800f896:	6818      	ldr	r0, [r3, #0]
 800f898:	6831      	ldr	r1, [r6, #0]
	}
 800f89a:	e8bd 4070 	ldmia.w	sp!, {r4, r5, r6, lr}
				vListInsert( pxOverflowDelayedTaskList, &( pxCurrentTCB->xStateListItem ) );
 800f89e:	3104      	adds	r1, #4
 800f8a0:	f7fe b920 	b.w	800dae4 <vListInsert>
const TickType_t xConstTickCount = xTickCount;
 800f8a4:	681b      	ldr	r3, [r3, #0]
	if( uxListRemove( &( pxCurrentTCB->xStateListItem ) ) == ( UBaseType_t ) 0 )
 800f8a6:	6830      	ldr	r0, [r6, #0]
 800f8a8:	3004      	adds	r0, #4
 800f8aa:	f7fe f933 	bl	800db14 <uxListRemove>
			vListInsertEnd( &xSuspendedTaskList, &( pxCurrentTCB->xStateListItem ) );
 800f8ae:	6831      	ldr	r1, [r6, #0]
 800f8b0:	4810      	ldr	r0, [pc, #64]	; (800f8f4 <vTaskPlaceOnEventListRestricted+0x88>)
	}
 800f8b2:	e8bd 4070 	ldmia.w	sp!, {r4, r5, r6, lr}
			vListInsertEnd( &xSuspendedTaskList, &( pxCurrentTCB->xStateListItem ) );
 800f8b6:	3104      	adds	r1, #4
 800f8b8:	f7fe b904 	b.w	800dac4 <vListInsertEnd>
 800f8bc:	f04f 0350 	mov.w	r3, #80	; 0x50
 800f8c0:	f383 8811 	msr	BASEPRI, r3
 800f8c4:	f3bf 8f6f 	isb	sy
 800f8c8:	f3bf 8f4f 	dsb	sy
		configASSERT( pxEventList );
 800f8cc:	e7fe      	b.n	800f8cc <vTaskPlaceOnEventListRestricted+0x60>
				vListInsert( pxDelayedTaskList, &( pxCurrentTCB->xStateListItem ) );
 800f8ce:	4b0a      	ldr	r3, [pc, #40]	; (800f8f8 <vTaskPlaceOnEventListRestricted+0x8c>)
 800f8d0:	6818      	ldr	r0, [r3, #0]
 800f8d2:	6831      	ldr	r1, [r6, #0]
 800f8d4:	3104      	adds	r1, #4
 800f8d6:	f7fe f905 	bl	800dae4 <vListInsert>
				if( xTimeToWake < xNextTaskUnblockTime )
 800f8da:	4b08      	ldr	r3, [pc, #32]	; (800f8fc <vTaskPlaceOnEventListRestricted+0x90>)
 800f8dc:	681a      	ldr	r2, [r3, #0]
 800f8de:	4294      	cmp	r4, r2
					xNextTaskUnblockTime = xTimeToWake;
 800f8e0:	bf38      	it	cc
 800f8e2:	601c      	strcc	r4, [r3, #0]
	}
 800f8e4:	bd70      	pop	{r4, r5, r6, pc}
 800f8e6:	bf00      	nop
 800f8e8:	200131e8 	.word	0x200131e8
 800f8ec:	200136dc 	.word	0x200136dc
 800f8f0:	200131f0 	.word	0x200131f0
 800f8f4:	200136b4 	.word	0x200136b4
 800f8f8:	200131ec 	.word	0x200131ec
 800f8fc:	20013690 	.word	0x20013690

0800f900 <xTaskRemoveFromEventList>:
{
 800f900:	b530      	push	{r4, r5, lr}
	pxUnblockedTCB = listGET_OWNER_OF_HEAD_ENTRY( pxEventList ); /*lint !e9079 void * is used as this macro is used with timers and co-routines too.  Alignment is known to be fine as the type of the pointer stored and retrieved is the same. */
 800f902:	68c3      	ldr	r3, [r0, #12]
 800f904:	68dc      	ldr	r4, [r3, #12]
{
 800f906:	b083      	sub	sp, #12
	configASSERT( pxUnblockedTCB );
 800f908:	2c00      	cmp	r4, #0
 800f90a:	d02b      	beq.n	800f964 <xTaskRemoveFromEventList+0x64>
	( void ) uxListRemove( &( pxUnblockedTCB->xEventListItem ) );
 800f90c:	f104 0518 	add.w	r5, r4, #24
 800f910:	4628      	mov	r0, r5
 800f912:	f7fe f8ff 	bl	800db14 <uxListRemove>
	if( uxSchedulerSuspended == ( UBaseType_t ) pdFALSE )
 800f916:	4b18      	ldr	r3, [pc, #96]	; (800f978 <xTaskRemoveFromEventList+0x78>)
 800f918:	681b      	ldr	r3, [r3, #0]
 800f91a:	b17b      	cbz	r3, 800f93c <xTaskRemoveFromEventList+0x3c>
		vListInsertEnd( &( xPendingReadyList ), &( pxUnblockedTCB->xEventListItem ) );
 800f91c:	4817      	ldr	r0, [pc, #92]	; (800f97c <xTaskRemoveFromEventList+0x7c>)
 800f91e:	4629      	mov	r1, r5
 800f920:	f7fe f8d0 	bl	800dac4 <vListInsertEnd>
	if( pxUnblockedTCB->uxPriority > pxCurrentTCB->uxPriority )
 800f924:	4b16      	ldr	r3, [pc, #88]	; (800f980 <xTaskRemoveFromEventList+0x80>)
 800f926:	6ae2      	ldr	r2, [r4, #44]	; 0x2c
 800f928:	681b      	ldr	r3, [r3, #0]
 800f92a:	6adb      	ldr	r3, [r3, #44]	; 0x2c
 800f92c:	429a      	cmp	r2, r3
		xYieldPending = pdTRUE;
 800f92e:	bf85      	ittet	hi
 800f930:	4b14      	ldrhi	r3, [pc, #80]	; (800f984 <xTaskRemoveFromEventList+0x84>)
 800f932:	2001      	movhi	r0, #1
		xReturn = pdFALSE;
 800f934:	2000      	movls	r0, #0
		xYieldPending = pdTRUE;
 800f936:	6018      	strhi	r0, [r3, #0]
}
 800f938:	b003      	add	sp, #12
 800f93a:	bd30      	pop	{r4, r5, pc}
		( void ) uxListRemove( &( pxUnblockedTCB->xStateListItem ) );
 800f93c:	1d21      	adds	r1, r4, #4
 800f93e:	4608      	mov	r0, r1
 800f940:	9101      	str	r1, [sp, #4]
 800f942:	f7fe f8e7 	bl	800db14 <uxListRemove>
		prvAddTaskToReadyList( pxUnblockedTCB );
 800f946:	4a10      	ldr	r2, [pc, #64]	; (800f988 <xTaskRemoveFromEventList+0x88>)
 800f948:	6ae3      	ldr	r3, [r4, #44]	; 0x2c
 800f94a:	6810      	ldr	r0, [r2, #0]
 800f94c:	9901      	ldr	r1, [sp, #4]
 800f94e:	4283      	cmp	r3, r0
 800f950:	480e      	ldr	r0, [pc, #56]	; (800f98c <xTaskRemoveFromEventList+0x8c>)
 800f952:	bf88      	it	hi
 800f954:	6013      	strhi	r3, [r2, #0]
 800f956:	eb03 0383 	add.w	r3, r3, r3, lsl #2
 800f95a:	eb00 0083 	add.w	r0, r0, r3, lsl #2
 800f95e:	f7fe f8b1 	bl	800dac4 <vListInsertEnd>
 800f962:	e7df      	b.n	800f924 <xTaskRemoveFromEventList+0x24>
 800f964:	f04f 0350 	mov.w	r3, #80	; 0x50
 800f968:	f383 8811 	msr	BASEPRI, r3
 800f96c:	f3bf 8f6f 	isb	sy
 800f970:	f3bf 8f4f 	dsb	sy
	configASSERT( pxUnblockedTCB );
 800f974:	e7fe      	b.n	800f974 <xTaskRemoveFromEventList+0x74>
 800f976:	bf00      	nop
 800f978:	2001365c 	.word	0x2001365c
 800f97c:	2001369c 	.word	0x2001369c
 800f980:	200131e8 	.word	0x200131e8
 800f984:	200136e0 	.word	0x200136e0
 800f988:	20013664 	.word	0x20013664
 800f98c:	200131f4 	.word	0x200131f4

0800f990 <vTaskInternalSetTimeOutState>:
	pxTimeOut->xOverflowCount = xNumOfOverflows;
 800f990:	4a03      	ldr	r2, [pc, #12]	; (800f9a0 <vTaskInternalSetTimeOutState+0x10>)
	pxTimeOut->xTimeOnEntering = xTickCount;
 800f992:	4b04      	ldr	r3, [pc, #16]	; (800f9a4 <vTaskInternalSetTimeOutState+0x14>)
	pxTimeOut->xOverflowCount = xNumOfOverflows;
 800f994:	6812      	ldr	r2, [r2, #0]
	pxTimeOut->xTimeOnEntering = xTickCount;
 800f996:	681b      	ldr	r3, [r3, #0]
 800f998:	e9c0 2300 	strd	r2, r3, [r0]
}
 800f99c:	4770      	bx	lr
 800f99e:	bf00      	nop
 800f9a0:	20013694 	.word	0x20013694
 800f9a4:	200136dc 	.word	0x200136dc

0800f9a8 <xTaskCheckForTimeOut>:
	configASSERT( pxTimeOut );
 800f9a8:	b328      	cbz	r0, 800f9f6 <xTaskCheckForTimeOut+0x4e>
{
 800f9aa:	b5f0      	push	{r4, r5, r6, r7, lr}
 800f9ac:	460d      	mov	r5, r1
 800f9ae:	b083      	sub	sp, #12
	configASSERT( pxTicksToWait );
 800f9b0:	b1c1      	cbz	r1, 800f9e4 <xTaskCheckForTimeOut+0x3c>
 800f9b2:	4604      	mov	r4, r0
	taskENTER_CRITICAL();
 800f9b4:	f7fe f926 	bl	800dc04 <vPortEnterCritical>
			if( *pxTicksToWait == portMAX_DELAY )
 800f9b8:	682b      	ldr	r3, [r5, #0]
		const TickType_t xConstTickCount = xTickCount;
 800f9ba:	4a1d      	ldr	r2, [pc, #116]	; (800fa30 <xTaskCheckForTimeOut+0x88>)
			if( *pxTicksToWait == portMAX_DELAY )
 800f9bc:	1c58      	adds	r0, r3, #1
		const TickType_t xConstTickCount = xTickCount;
 800f9be:	6811      	ldr	r1, [r2, #0]
			if( *pxTicksToWait == portMAX_DELAY )
 800f9c0:	d030      	beq.n	800fa24 <xTaskCheckForTimeOut+0x7c>
		if( ( xNumOfOverflows != pxTimeOut->xOverflowCount ) && ( xConstTickCount >= pxTimeOut->xTimeOnEntering ) ) /*lint !e525 Indentation preferred as is to make code within pre-processor directives clearer. */
 800f9c2:	f8df c070 	ldr.w	ip, [pc, #112]	; 800fa34 <xTaskCheckForTimeOut+0x8c>
 800f9c6:	e9d4 6000 	ldrd	r6, r0, [r4]
 800f9ca:	f8dc 7000 	ldr.w	r7, [ip]
 800f9ce:	42be      	cmp	r6, r7
 800f9d0:	d01a      	beq.n	800fa08 <xTaskCheckForTimeOut+0x60>
 800f9d2:	4288      	cmp	r0, r1
 800f9d4:	d818      	bhi.n	800fa08 <xTaskCheckForTimeOut+0x60>
			xReturn = pdTRUE;
 800f9d6:	2001      	movs	r0, #1
 800f9d8:	9001      	str	r0, [sp, #4]
	taskEXIT_CRITICAL();
 800f9da:	f7fe f935 	bl	800dc48 <vPortExitCritical>
}
 800f9de:	9801      	ldr	r0, [sp, #4]
 800f9e0:	b003      	add	sp, #12
 800f9e2:	bdf0      	pop	{r4, r5, r6, r7, pc}
 800f9e4:	f04f 0350 	mov.w	r3, #80	; 0x50
 800f9e8:	f383 8811 	msr	BASEPRI, r3
 800f9ec:	f3bf 8f6f 	isb	sy
 800f9f0:	f3bf 8f4f 	dsb	sy
	configASSERT( pxTicksToWait );
 800f9f4:	e7fe      	b.n	800f9f4 <xTaskCheckForTimeOut+0x4c>
 800f9f6:	f04f 0350 	mov.w	r3, #80	; 0x50
 800f9fa:	f383 8811 	msr	BASEPRI, r3
 800f9fe:	f3bf 8f6f 	isb	sy
 800fa02:	f3bf 8f4f 	dsb	sy
	configASSERT( pxTimeOut );
 800fa06:	e7fe      	b.n	800fa06 <xTaskCheckForTimeOut+0x5e>
		const TickType_t xElapsedTime = xConstTickCount - pxTimeOut->xTimeOnEntering;
 800fa08:	eba1 0e00 	sub.w	lr, r1, r0
		else if( xElapsedTime < *pxTicksToWait ) /*lint !e961 Explicit casting is only redundant with some compilers, whereas others require it to prevent integer conversion errors. */
 800fa0c:	4573      	cmp	r3, lr
 800fa0e:	d90b      	bls.n	800fa28 <xTaskCheckForTimeOut+0x80>
			*pxTicksToWait -= xElapsedTime;
 800fa10:	1a5b      	subs	r3, r3, r1
	pxTimeOut->xOverflowCount = xNumOfOverflows;
 800fa12:	f8dc 1000 	ldr.w	r1, [ip]
	pxTimeOut->xTimeOnEntering = xTickCount;
 800fa16:	6812      	ldr	r2, [r2, #0]
			*pxTicksToWait -= xElapsedTime;
 800fa18:	4403      	add	r3, r0
 800fa1a:	602b      	str	r3, [r5, #0]
			xReturn = pdFALSE;
 800fa1c:	2000      	movs	r0, #0
	pxTimeOut->xTimeOnEntering = xTickCount;
 800fa1e:	e9c4 1200 	strd	r1, r2, [r4]
			xReturn = pdFALSE;
 800fa22:	e7d9      	b.n	800f9d8 <xTaskCheckForTimeOut+0x30>
				xReturn = pdFALSE;
 800fa24:	2000      	movs	r0, #0
 800fa26:	e7d7      	b.n	800f9d8 <xTaskCheckForTimeOut+0x30>
			*pxTicksToWait = 0;
 800fa28:	2300      	movs	r3, #0
 800fa2a:	602b      	str	r3, [r5, #0]
			xReturn = pdTRUE;
 800fa2c:	2001      	movs	r0, #1
 800fa2e:	e7d3      	b.n	800f9d8 <xTaskCheckForTimeOut+0x30>
 800fa30:	200136dc 	.word	0x200136dc
 800fa34:	20013694 	.word	0x20013694

0800fa38 <vTaskMissedYield>:
	xYieldPending = pdTRUE;
 800fa38:	4b01      	ldr	r3, [pc, #4]	; (800fa40 <vTaskMissedYield+0x8>)
 800fa3a:	2201      	movs	r2, #1
 800fa3c:	601a      	str	r2, [r3, #0]
}
 800fa3e:	4770      	bx	lr
 800fa40:	200136e0 	.word	0x200136e0

0800fa44 <xTaskGetSchedulerState>:
		if( xSchedulerRunning == pdFALSE )
 800fa44:	4b05      	ldr	r3, [pc, #20]	; (800fa5c <xTaskGetSchedulerState+0x18>)
 800fa46:	681b      	ldr	r3, [r3, #0]
 800fa48:	b133      	cbz	r3, 800fa58 <xTaskGetSchedulerState+0x14>
			if( uxSchedulerSuspended == ( UBaseType_t ) pdFALSE )
 800fa4a:	4b05      	ldr	r3, [pc, #20]	; (800fa60 <xTaskGetSchedulerState+0x1c>)
 800fa4c:	6818      	ldr	r0, [r3, #0]
 800fa4e:	fab0 f080 	clz	r0, r0
 800fa52:	0940      	lsrs	r0, r0, #5
 800fa54:	0040      	lsls	r0, r0, #1
 800fa56:	4770      	bx	lr
			xReturn = taskSCHEDULER_NOT_STARTED;
 800fa58:	2001      	movs	r0, #1
	}
 800fa5a:	4770      	bx	lr
 800fa5c:	200136b0 	.word	0x200136b0
 800fa60:	2001365c 	.word	0x2001365c

0800fa64 <xTaskPriorityInherit>:
	{
 800fa64:	b570      	push	{r4, r5, r6, lr}
		if( pxMutexHolder != NULL )
 800fa66:	4604      	mov	r4, r0
	{
 800fa68:	b082      	sub	sp, #8
		if( pxMutexHolder != NULL )
 800fa6a:	b1c8      	cbz	r0, 800faa0 <xTaskPriorityInherit+0x3c>
			if( pxMutexHolderTCB->uxPriority < pxCurrentTCB->uxPriority )
 800fa6c:	4d1d      	ldr	r5, [pc, #116]	; (800fae4 <xTaskPriorityInherit+0x80>)
 800fa6e:	6ac3      	ldr	r3, [r0, #44]	; 0x2c
 800fa70:	682a      	ldr	r2, [r5, #0]
 800fa72:	6ad2      	ldr	r2, [r2, #44]	; 0x2c
 800fa74:	4293      	cmp	r3, r2
 800fa76:	d215      	bcs.n	800faa4 <xTaskPriorityInherit+0x40>
				if( ( listGET_LIST_ITEM_VALUE( &( pxMutexHolderTCB->xEventListItem ) ) & taskEVENT_LIST_ITEM_VALUE_IN_USE ) == 0UL )
 800fa78:	6982      	ldr	r2, [r0, #24]
 800fa7a:	2a00      	cmp	r2, #0
 800fa7c:	db04      	blt.n	800fa88 <xTaskPriorityInherit+0x24>
					listSET_LIST_ITEM_VALUE( &( pxMutexHolderTCB->xEventListItem ), ( TickType_t ) configMAX_PRIORITIES - ( TickType_t ) pxCurrentTCB->uxPriority ); /*lint !e961 MISRA exception as the casts are only redundant for some ports. */
 800fa7e:	682a      	ldr	r2, [r5, #0]
 800fa80:	6ad2      	ldr	r2, [r2, #44]	; 0x2c
 800fa82:	f1c2 0238 	rsb	r2, r2, #56	; 0x38
 800fa86:	6182      	str	r2, [r0, #24]
				if( listIS_CONTAINED_WITHIN( &( pxReadyTasksLists[ pxMutexHolderTCB->uxPriority ] ), &( pxMutexHolderTCB->xStateListItem ) ) != pdFALSE )
 800fa88:	4e17      	ldr	r6, [pc, #92]	; (800fae8 <xTaskPriorityInherit+0x84>)
 800fa8a:	6962      	ldr	r2, [r4, #20]
 800fa8c:	eb03 0383 	add.w	r3, r3, r3, lsl #2
 800fa90:	eb06 0383 	add.w	r3, r6, r3, lsl #2
 800fa94:	429a      	cmp	r2, r3
 800fa96:	d00e      	beq.n	800fab6 <xTaskPriorityInherit+0x52>
					pxMutexHolderTCB->uxPriority = pxCurrentTCB->uxPriority;
 800fa98:	682b      	ldr	r3, [r5, #0]
 800fa9a:	6adb      	ldr	r3, [r3, #44]	; 0x2c
 800fa9c:	62e3      	str	r3, [r4, #44]	; 0x2c
				xReturn = pdTRUE;
 800fa9e:	2001      	movs	r0, #1
	}
 800faa0:	b002      	add	sp, #8
 800faa2:	bd70      	pop	{r4, r5, r6, pc}
				if( pxMutexHolderTCB->uxBasePriority < pxCurrentTCB->uxPriority )
 800faa4:	682b      	ldr	r3, [r5, #0]
 800faa6:	6cc0      	ldr	r0, [r0, #76]	; 0x4c
 800faa8:	6adb      	ldr	r3, [r3, #44]	; 0x2c
 800faaa:	4298      	cmp	r0, r3
 800faac:	bf2c      	ite	cs
 800faae:	2000      	movcs	r0, #0
 800fab0:	2001      	movcc	r0, #1
	}
 800fab2:	b002      	add	sp, #8
 800fab4:	bd70      	pop	{r4, r5, r6, pc}
					if( uxListRemove( &( pxMutexHolderTCB->xStateListItem ) ) == ( UBaseType_t ) 0 )
 800fab6:	1d21      	adds	r1, r4, #4
 800fab8:	4608      	mov	r0, r1
 800faba:	9101      	str	r1, [sp, #4]
 800fabc:	f7fe f82a 	bl	800db14 <uxListRemove>
					pxMutexHolderTCB->uxPriority = pxCurrentTCB->uxPriority;
 800fac0:	682a      	ldr	r2, [r5, #0]
					prvAddTaskToReadyList( pxMutexHolderTCB );
 800fac2:	4b0a      	ldr	r3, [pc, #40]	; (800faec <xTaskPriorityInherit+0x88>)
					pxMutexHolderTCB->uxPriority = pxCurrentTCB->uxPriority;
 800fac4:	6ad0      	ldr	r0, [r2, #44]	; 0x2c
					prvAddTaskToReadyList( pxMutexHolderTCB );
 800fac6:	681a      	ldr	r2, [r3, #0]
					pxMutexHolderTCB->uxPriority = pxCurrentTCB->uxPriority;
 800fac8:	62e0      	str	r0, [r4, #44]	; 0x2c
					prvAddTaskToReadyList( pxMutexHolderTCB );
 800faca:	4290      	cmp	r0, r2
 800facc:	bf88      	it	hi
 800face:	6018      	strhi	r0, [r3, #0]
 800fad0:	eb00 0080 	add.w	r0, r0, r0, lsl #2
 800fad4:	eb06 0080 	add.w	r0, r6, r0, lsl #2
 800fad8:	9901      	ldr	r1, [sp, #4]
 800fada:	f7fd fff3 	bl	800dac4 <vListInsertEnd>
				xReturn = pdTRUE;
 800fade:	2001      	movs	r0, #1
 800fae0:	e7de      	b.n	800faa0 <xTaskPriorityInherit+0x3c>
 800fae2:	bf00      	nop
 800fae4:	200131e8 	.word	0x200131e8
 800fae8:	200131f4 	.word	0x200131f4
 800faec:	20013664 	.word	0x20013664

0800faf0 <xTaskPriorityDisinherit>:
		if( pxMutexHolder != NULL )
 800faf0:	b318      	cbz	r0, 800fb3a <xTaskPriorityDisinherit+0x4a>
	{
 800faf2:	b510      	push	{r4, lr}
			configASSERT( pxTCB == pxCurrentTCB );
 800faf4:	4b1e      	ldr	r3, [pc, #120]	; (800fb70 <xTaskPriorityDisinherit+0x80>)
 800faf6:	681c      	ldr	r4, [r3, #0]
 800faf8:	4284      	cmp	r4, r0
	{
 800fafa:	b082      	sub	sp, #8
			configASSERT( pxTCB == pxCurrentTCB );
 800fafc:	d008      	beq.n	800fb10 <xTaskPriorityDisinherit+0x20>
 800fafe:	f04f 0350 	mov.w	r3, #80	; 0x50
 800fb02:	f383 8811 	msr	BASEPRI, r3
 800fb06:	f3bf 8f6f 	isb	sy
 800fb0a:	f3bf 8f4f 	dsb	sy
 800fb0e:	e7fe      	b.n	800fb0e <xTaskPriorityDisinherit+0x1e>
			configASSERT( pxTCB->uxMutexesHeld );
 800fb10:	6d23      	ldr	r3, [r4, #80]	; 0x50
 800fb12:	b14b      	cbz	r3, 800fb28 <xTaskPriorityDisinherit+0x38>
			if( pxTCB->uxPriority != pxTCB->uxBasePriority )
 800fb14:	6ae1      	ldr	r1, [r4, #44]	; 0x2c
 800fb16:	6ce2      	ldr	r2, [r4, #76]	; 0x4c
			( pxTCB->uxMutexesHeld )--;
 800fb18:	3b01      	subs	r3, #1
			if( pxTCB->uxPriority != pxTCB->uxBasePriority )
 800fb1a:	4291      	cmp	r1, r2
			( pxTCB->uxMutexesHeld )--;
 800fb1c:	6523      	str	r3, [r4, #80]	; 0x50
			if( pxTCB->uxPriority != pxTCB->uxBasePriority )
 800fb1e:	d000      	beq.n	800fb22 <xTaskPriorityDisinherit+0x32>
				if( pxTCB->uxMutexesHeld == ( UBaseType_t ) 0 )
 800fb20:	b16b      	cbz	r3, 800fb3e <xTaskPriorityDisinherit+0x4e>
	BaseType_t xReturn = pdFALSE;
 800fb22:	2000      	movs	r0, #0
	}
 800fb24:	b002      	add	sp, #8
 800fb26:	bd10      	pop	{r4, pc}
 800fb28:	f04f 0350 	mov.w	r3, #80	; 0x50
 800fb2c:	f383 8811 	msr	BASEPRI, r3
 800fb30:	f3bf 8f6f 	isb	sy
 800fb34:	f3bf 8f4f 	dsb	sy
			configASSERT( pxTCB->uxMutexesHeld );
 800fb38:	e7fe      	b.n	800fb38 <xTaskPriorityDisinherit+0x48>
	BaseType_t xReturn = pdFALSE;
 800fb3a:	2000      	movs	r0, #0
	}
 800fb3c:	4770      	bx	lr
					if( uxListRemove( &( pxTCB->xStateListItem ) ) == ( UBaseType_t ) 0 )
 800fb3e:	1d21      	adds	r1, r4, #4
 800fb40:	4608      	mov	r0, r1
 800fb42:	9101      	str	r1, [sp, #4]
 800fb44:	f7fd ffe6 	bl	800db14 <uxListRemove>
					pxTCB->uxPriority = pxTCB->uxBasePriority;
 800fb48:	6ce3      	ldr	r3, [r4, #76]	; 0x4c
					prvAddTaskToReadyList( pxTCB );
 800fb4a:	4a0a      	ldr	r2, [pc, #40]	; (800fb74 <xTaskPriorityDisinherit+0x84>)
					pxTCB->uxPriority = pxTCB->uxBasePriority;
 800fb4c:	62e3      	str	r3, [r4, #44]	; 0x2c
					listSET_LIST_ITEM_VALUE( &( pxTCB->xEventListItem ), ( TickType_t ) configMAX_PRIORITIES - ( TickType_t ) pxTCB->uxPriority ); /*lint !e961 MISRA exception as the casts are only redundant for some ports. */
 800fb4e:	f1c3 0038 	rsb	r0, r3, #56	; 0x38
 800fb52:	61a0      	str	r0, [r4, #24]
					prvAddTaskToReadyList( pxTCB );
 800fb54:	6810      	ldr	r0, [r2, #0]
 800fb56:	9901      	ldr	r1, [sp, #4]
 800fb58:	4283      	cmp	r3, r0
 800fb5a:	4807      	ldr	r0, [pc, #28]	; (800fb78 <xTaskPriorityDisinherit+0x88>)
 800fb5c:	bf88      	it	hi
 800fb5e:	6013      	strhi	r3, [r2, #0]
 800fb60:	eb03 0383 	add.w	r3, r3, r3, lsl #2
 800fb64:	eb00 0083 	add.w	r0, r0, r3, lsl #2
 800fb68:	f7fd ffac 	bl	800dac4 <vListInsertEnd>
					xReturn = pdTRUE;
 800fb6c:	2001      	movs	r0, #1
		return xReturn;
 800fb6e:	e7d9      	b.n	800fb24 <xTaskPriorityDisinherit+0x34>
 800fb70:	200131e8 	.word	0x200131e8
 800fb74:	20013664 	.word	0x20013664
 800fb78:	200131f4 	.word	0x200131f4

0800fb7c <vTaskPriorityDisinheritAfterTimeout>:
		if( pxMutexHolder != NULL )
 800fb7c:	2800      	cmp	r0, #0
 800fb7e:	d041      	beq.n	800fc04 <vTaskPriorityDisinheritAfterTimeout+0x88>
	{
 800fb80:	b530      	push	{r4, r5, lr}
			configASSERT( pxTCB->uxMutexesHeld );
 800fb82:	6d03      	ldr	r3, [r0, #80]	; 0x50
	{
 800fb84:	b083      	sub	sp, #12
 800fb86:	4604      	mov	r4, r0
			configASSERT( pxTCB->uxMutexesHeld );
 800fb88:	b153      	cbz	r3, 800fba0 <vTaskPriorityDisinheritAfterTimeout+0x24>
			if( pxTCB->uxBasePriority < uxHighestPriorityWaitingTask )
 800fb8a:	6cc0      	ldr	r0, [r0, #76]	; 0x4c
			if( pxTCB->uxPriority != uxPriorityToUse )
 800fb8c:	6ae2      	ldr	r2, [r4, #44]	; 0x2c
 800fb8e:	4281      	cmp	r1, r0
 800fb90:	bf38      	it	cc
 800fb92:	4601      	movcc	r1, r0
 800fb94:	428a      	cmp	r2, r1
 800fb96:	d001      	beq.n	800fb9c <vTaskPriorityDisinheritAfterTimeout+0x20>
				if( pxTCB->uxMutexesHeld == uxOnlyOneMutexHeld )
 800fb98:	2b01      	cmp	r3, #1
 800fb9a:	d00a      	beq.n	800fbb2 <vTaskPriorityDisinheritAfterTimeout+0x36>
	}
 800fb9c:	b003      	add	sp, #12
 800fb9e:	bd30      	pop	{r4, r5, pc}
 800fba0:	f04f 0350 	mov.w	r3, #80	; 0x50
 800fba4:	f383 8811 	msr	BASEPRI, r3
 800fba8:	f3bf 8f6f 	isb	sy
 800fbac:	f3bf 8f4f 	dsb	sy
			configASSERT( pxTCB->uxMutexesHeld );
 800fbb0:	e7fe      	b.n	800fbb0 <vTaskPriorityDisinheritAfterTimeout+0x34>
					configASSERT( pxTCB != pxCurrentTCB );
 800fbb2:	4b19      	ldr	r3, [pc, #100]	; (800fc18 <vTaskPriorityDisinheritAfterTimeout+0x9c>)
 800fbb4:	681b      	ldr	r3, [r3, #0]
 800fbb6:	42a3      	cmp	r3, r4
 800fbb8:	d025      	beq.n	800fc06 <vTaskPriorityDisinheritAfterTimeout+0x8a>
					if( ( listGET_LIST_ITEM_VALUE( &( pxTCB->xEventListItem ) ) & taskEVENT_LIST_ITEM_VALUE_IN_USE ) == 0UL )
 800fbba:	69a3      	ldr	r3, [r4, #24]
					pxTCB->uxPriority = uxPriorityToUse;
 800fbbc:	62e1      	str	r1, [r4, #44]	; 0x2c
					if( ( listGET_LIST_ITEM_VALUE( &( pxTCB->xEventListItem ) ) & taskEVENT_LIST_ITEM_VALUE_IN_USE ) == 0UL )
 800fbbe:	2b00      	cmp	r3, #0
						listSET_LIST_ITEM_VALUE( &( pxTCB->xEventListItem ), ( TickType_t ) configMAX_PRIORITIES - ( TickType_t ) uxPriorityToUse ); /*lint !e961 MISRA exception as the casts are only redundant for some ports. */
 800fbc0:	bfa8      	it	ge
 800fbc2:	f1c1 0138 	rsbge	r1, r1, #56	; 0x38
					if( listIS_CONTAINED_WITHIN( &( pxReadyTasksLists[ uxPriorityUsedOnEntry ] ), &( pxTCB->xStateListItem ) ) != pdFALSE )
 800fbc6:	4d15      	ldr	r5, [pc, #84]	; (800fc1c <vTaskPriorityDisinheritAfterTimeout+0xa0>)
						listSET_LIST_ITEM_VALUE( &( pxTCB->xEventListItem ), ( TickType_t ) configMAX_PRIORITIES - ( TickType_t ) uxPriorityToUse ); /*lint !e961 MISRA exception as the casts are only redundant for some ports. */
 800fbc8:	bfa8      	it	ge
 800fbca:	61a1      	strge	r1, [r4, #24]
					if( listIS_CONTAINED_WITHIN( &( pxReadyTasksLists[ uxPriorityUsedOnEntry ] ), &( pxTCB->xStateListItem ) ) != pdFALSE )
 800fbcc:	eb02 0282 	add.w	r2, r2, r2, lsl #2
 800fbd0:	6961      	ldr	r1, [r4, #20]
 800fbd2:	eb05 0382 	add.w	r3, r5, r2, lsl #2
 800fbd6:	4299      	cmp	r1, r3
 800fbd8:	d1e0      	bne.n	800fb9c <vTaskPriorityDisinheritAfterTimeout+0x20>
						if( uxListRemove( &( pxTCB->xStateListItem ) ) == ( UBaseType_t ) 0 )
 800fbda:	1d21      	adds	r1, r4, #4
 800fbdc:	4608      	mov	r0, r1
 800fbde:	9101      	str	r1, [sp, #4]
 800fbe0:	f7fd ff98 	bl	800db14 <uxListRemove>
						prvAddTaskToReadyList( pxTCB );
 800fbe4:	4b0e      	ldr	r3, [pc, #56]	; (800fc20 <vTaskPriorityDisinheritAfterTimeout+0xa4>)
 800fbe6:	6ae0      	ldr	r0, [r4, #44]	; 0x2c
 800fbe8:	681a      	ldr	r2, [r3, #0]
 800fbea:	9901      	ldr	r1, [sp, #4]
 800fbec:	4290      	cmp	r0, r2
 800fbee:	bf88      	it	hi
 800fbf0:	6018      	strhi	r0, [r3, #0]
 800fbf2:	eb00 0080 	add.w	r0, r0, r0, lsl #2
 800fbf6:	eb05 0080 	add.w	r0, r5, r0, lsl #2
	}
 800fbfa:	b003      	add	sp, #12
 800fbfc:	e8bd 4030 	ldmia.w	sp!, {r4, r5, lr}
						prvAddTaskToReadyList( pxTCB );
 800fc00:	f7fd bf60 	b.w	800dac4 <vListInsertEnd>
 800fc04:	4770      	bx	lr
 800fc06:	f04f 0350 	mov.w	r3, #80	; 0x50
 800fc0a:	f383 8811 	msr	BASEPRI, r3
 800fc0e:	f3bf 8f6f 	isb	sy
 800fc12:	f3bf 8f4f 	dsb	sy
					configASSERT( pxTCB != pxCurrentTCB );
 800fc16:	e7fe      	b.n	800fc16 <vTaskPriorityDisinheritAfterTimeout+0x9a>
 800fc18:	200131e8 	.word	0x200131e8
 800fc1c:	200131f4 	.word	0x200131f4
 800fc20:	20013664 	.word	0x20013664

0800fc24 <pvTaskIncrementMutexHeldCount>:
		if( pxCurrentTCB != NULL )
 800fc24:	4b04      	ldr	r3, [pc, #16]	; (800fc38 <pvTaskIncrementMutexHeldCount+0x14>)
 800fc26:	681a      	ldr	r2, [r3, #0]
 800fc28:	b11a      	cbz	r2, 800fc32 <pvTaskIncrementMutexHeldCount+0xe>
			( pxCurrentTCB->uxMutexesHeld )++;
 800fc2a:	6819      	ldr	r1, [r3, #0]
 800fc2c:	6d0a      	ldr	r2, [r1, #80]	; 0x50
 800fc2e:	3201      	adds	r2, #1
 800fc30:	650a      	str	r2, [r1, #80]	; 0x50
		return pxCurrentTCB;
 800fc32:	6818      	ldr	r0, [r3, #0]
	}
 800fc34:	4770      	bx	lr
 800fc36:	bf00      	nop
 800fc38:	200131e8 	.word	0x200131e8

0800fc3c <prvSwitchTimerLists>:
	}
}
/*-----------------------------------------------------------*/

static void prvSwitchTimerLists( void )
{
 800fc3c:	e92d 43f0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, lr}
 800fc40:	4e22      	ldr	r6, [pc, #136]	; (800fccc <prvSwitchTimerLists+0x90>)
	if( xTimerQueue != NULL )
 800fc42:	f8df 9090 	ldr.w	r9, [pc, #144]	; 800fcd4 <prvSwitchTimerLists+0x98>
{
 800fc46:	b085      	sub	sp, #20
		xMessage.xMessageID = xCommandID;
 800fc48:	f04f 0800 	mov.w	r8, #0

	/* The tick count has overflowed.  The timer lists must be switched.
	If there are any timers still referenced from the current timer list
	then they must have expired and should be processed before the lists
	are switched. */
	while( listLIST_IS_EMPTY( pxCurrentTimerList ) == pdFALSE )
 800fc4c:	e00d      	b.n	800fc6a <prvSwitchTimerLists+0x2e>
	{
		xNextExpireTime = listGET_ITEM_VALUE_OF_HEAD_ENTRY( pxCurrentTimerList );
 800fc4e:	68db      	ldr	r3, [r3, #12]

		/* Remove the timer from the list. */
		pxTimer = ( Timer_t * ) listGET_OWNER_OF_HEAD_ENTRY( pxCurrentTimerList ); /*lint !e9087 !e9079 void * is used as this macro is used with tasks and co-routines too.  Alignment is known to be fine as the type of the pointer stored and retrieved is the same. */
 800fc50:	68dc      	ldr	r4, [r3, #12]
		xNextExpireTime = listGET_ITEM_VALUE_OF_HEAD_ENTRY( pxCurrentTimerList );
 800fc52:	681f      	ldr	r7, [r3, #0]
		( void ) uxListRemove( &( pxTimer->xTimerListItem ) );
 800fc54:	1d25      	adds	r5, r4, #4
 800fc56:	4628      	mov	r0, r5
 800fc58:	f7fd ff5c 	bl	800db14 <uxListRemove>
		traceTIMER_EXPIRED( pxTimer );

		/* Execute its callback, then send a command to restart the timer if
		it is an auto-reload timer.  It cannot be restarted here as the lists
		have not yet been switched. */
		pxTimer->pxCallbackFunction( ( TimerHandle_t ) pxTimer );
 800fc5c:	6a23      	ldr	r3, [r4, #32]
 800fc5e:	4620      	mov	r0, r4
 800fc60:	4798      	blx	r3

		if( ( pxTimer->ucStatus & tmrSTATUS_IS_AUTORELOAD ) != 0 )
 800fc62:	f894 3028 	ldrb.w	r3, [r4, #40]	; 0x28
 800fc66:	075b      	lsls	r3, r3, #29
 800fc68:	d40a      	bmi.n	800fc80 <prvSwitchTimerLists+0x44>
	while( listLIST_IS_EMPTY( pxCurrentTimerList ) == pdFALSE )
 800fc6a:	6833      	ldr	r3, [r6, #0]
 800fc6c:	681a      	ldr	r2, [r3, #0]
 800fc6e:	2a00      	cmp	r2, #0
 800fc70:	d1ed      	bne.n	800fc4e <prvSwitchTimerLists+0x12>
			mtCOVERAGE_TEST_MARKER();
		}
	}

	pxTemp = pxCurrentTimerList;
	pxCurrentTimerList = pxOverflowTimerList;
 800fc72:	4a17      	ldr	r2, [pc, #92]	; (800fcd0 <prvSwitchTimerLists+0x94>)
 800fc74:	6811      	ldr	r1, [r2, #0]
 800fc76:	6031      	str	r1, [r6, #0]
	pxOverflowTimerList = pxTemp;
 800fc78:	6013      	str	r3, [r2, #0]
}
 800fc7a:	b005      	add	sp, #20
 800fc7c:	e8bd 83f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, pc}
			xReloadTime = ( xNextExpireTime + pxTimer->xTimerPeriodInTicks );
 800fc80:	69a3      	ldr	r3, [r4, #24]
 800fc82:	443b      	add	r3, r7
			if( xReloadTime > xNextExpireTime )
 800fc84:	429f      	cmp	r7, r3
				vListInsert( pxCurrentTimerList, &( pxTimer->xTimerListItem ) );
 800fc86:	4629      	mov	r1, r5
			if( xReloadTime > xNextExpireTime )
 800fc88:	d205      	bcs.n	800fc96 <prvSwitchTimerLists+0x5a>
				vListInsert( pxCurrentTimerList, &( pxTimer->xTimerListItem ) );
 800fc8a:	6830      	ldr	r0, [r6, #0]
				listSET_LIST_ITEM_VALUE( &( pxTimer->xTimerListItem ), xReloadTime );
 800fc8c:	6063      	str	r3, [r4, #4]
				listSET_LIST_ITEM_OWNER( &( pxTimer->xTimerListItem ), pxTimer );
 800fc8e:	6124      	str	r4, [r4, #16]
				vListInsert( pxCurrentTimerList, &( pxTimer->xTimerListItem ) );
 800fc90:	f7fd ff28 	bl	800dae4 <vListInsert>
 800fc94:	e7e9      	b.n	800fc6a <prvSwitchTimerLists+0x2e>
	if( xTimerQueue != NULL )
 800fc96:	f8d9 3000 	ldr.w	r3, [r9]
 800fc9a:	b16b      	cbz	r3, 800fcb8 <prvSwitchTimerLists+0x7c>
		xMessage.u.xTimerParameters.xMessageValue = xOptionalValue;
 800fc9c:	e9cd 8700 	strd	r8, r7, [sp]
		xMessage.u.xTimerParameters.pxTimer = xTimer;
 800fca0:	9402      	str	r4, [sp, #8]
			if( xTaskGetSchedulerState() == taskSCHEDULER_RUNNING )
 800fca2:	f7ff fecf 	bl	800fa44 <xTaskGetSchedulerState>
				xReturn = xQueueSendToBack( xTimerQueue, &xMessage, xTicksToWait );
 800fca6:	2300      	movs	r3, #0
 800fca8:	f8d9 0000 	ldr.w	r0, [r9]
 800fcac:	461a      	mov	r2, r3
 800fcae:	4669      	mov	r1, sp
 800fcb0:	f7fe fa9c 	bl	800e1ec <xQueueGenericSend>
				configASSERT( xResult );
 800fcb4:	2800      	cmp	r0, #0
 800fcb6:	d1d8      	bne.n	800fc6a <prvSwitchTimerLists+0x2e>
 800fcb8:	f04f 0350 	mov.w	r3, #80	; 0x50
 800fcbc:	f383 8811 	msr	BASEPRI, r3
 800fcc0:	f3bf 8f6f 	isb	sy
 800fcc4:	f3bf 8f4f 	dsb	sy
 800fcc8:	e7fe      	b.n	800fcc8 <prvSwitchTimerLists+0x8c>
 800fcca:	bf00      	nop
 800fccc:	200136e4 	.word	0x200136e4
 800fcd0:	200136e8 	.word	0x200136e8
 800fcd4:	20013808 	.word	0x20013808

0800fcd8 <prvTimerTask>:
{
 800fcd8:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 800fcdc:	4e9b      	ldr	r6, [pc, #620]	; (800ff4c <prvTimerTask+0x274>)
 800fcde:	4d9c      	ldr	r5, [pc, #624]	; (800ff50 <prvTimerTask+0x278>)
 800fce0:	4c9c      	ldr	r4, [pc, #624]	; (800ff54 <prvTimerTask+0x27c>)
 800fce2:	b08b      	sub	sp, #44	; 0x2c
					portYIELD_WITHIN_API();
 800fce4:	f04f 29e0 	mov.w	r9, #3758153728	; 0xe000e000
 800fce8:	f04f 5880 	mov.w	r8, #268435456	; 0x10000000
	*pxListWasEmpty = listLIST_IS_EMPTY( pxCurrentTimerList );
 800fcec:	6833      	ldr	r3, [r6, #0]
 800fcee:	681f      	ldr	r7, [r3, #0]
 800fcf0:	2f00      	cmp	r7, #0
 800fcf2:	f000 80a8 	beq.w	800fe46 <prvTimerTask+0x16e>
		xNextExpireTime = listGET_ITEM_VALUE_OF_HEAD_ENTRY( pxCurrentTimerList );
 800fcf6:	68db      	ldr	r3, [r3, #12]
 800fcf8:	681f      	ldr	r7, [r3, #0]
	vTaskSuspendAll();
 800fcfa:	f7ff fcf9 	bl	800f6f0 <vTaskSuspendAll>
	xTimeNow = xTaskGetTickCount();
 800fcfe:	f7ff fd0f 	bl	800f720 <xTaskGetTickCount>
	if( xTimeNow < xLastTime )
 800fd02:	682a      	ldr	r2, [r5, #0]
 800fd04:	4290      	cmp	r0, r2
	xTimeNow = xTaskGetTickCount();
 800fd06:	4682      	mov	sl, r0
	if( xTimeNow < xLastTime )
 800fd08:	f0c0 80ae 	bcc.w	800fe68 <prvTimerTask+0x190>
			if( ( xListWasEmpty == pdFALSE ) && ( xNextExpireTime <= xTimeNow ) )
 800fd0c:	4287      	cmp	r7, r0
	xLastTime = xTimeNow;
 800fd0e:	6028      	str	r0, [r5, #0]
			if( ( xListWasEmpty == pdFALSE ) && ( xNextExpireTime <= xTimeNow ) )
 800fd10:	f240 80b4 	bls.w	800fe7c <prvTimerTask+0x1a4>
 800fd14:	2200      	movs	r2, #0
				vQueueWaitForMessageRestricted( xTimerQueue, ( xNextExpireTime - xTimeNow ), xListWasEmpty );
 800fd16:	6820      	ldr	r0, [r4, #0]
 800fd18:	eba7 010a 	sub.w	r1, r7, sl
 800fd1c:	f7ff f89a 	bl	800ee54 <vQueueWaitForMessageRestricted>
				if( xTaskResumeAll() == pdFALSE )
 800fd20:	f7ff fcee 	bl	800f700 <xTaskResumeAll>
 800fd24:	b928      	cbnz	r0, 800fd32 <prvTimerTask+0x5a>
					portYIELD_WITHIN_API();
 800fd26:	f8c9 8d04 	str.w	r8, [r9, #3332]	; 0xd04
 800fd2a:	f3bf 8f4f 	dsb	sy
 800fd2e:	f3bf 8f6f 	isb	sy
	while( xQueueReceive( xTimerQueue, &xMessage, tmrNO_DELAY ) != pdFAIL ) /*lint !e603 xMessage does not have to be initialised as it is passed out, not in, and it is not used unless xQueueReceive() returns pdTRUE. */
 800fd32:	6820      	ldr	r0, [r4, #0]
 800fd34:	2200      	movs	r2, #0
 800fd36:	a902      	add	r1, sp, #8
 800fd38:	f7fe fc94 	bl	800e664 <xQueueReceive>
 800fd3c:	2800      	cmp	r0, #0
 800fd3e:	d0d5      	beq.n	800fcec <prvTimerTask+0x14>
			if( xMessage.xMessageID < ( BaseType_t ) 0 )
 800fd40:	9b02      	ldr	r3, [sp, #8]
 800fd42:	2b00      	cmp	r3, #0
 800fd44:	db76      	blt.n	800fe34 <prvTimerTask+0x15c>
			pxTimer = xMessage.u.xTimerParameters.pxTimer;
 800fd46:	9f04      	ldr	r7, [sp, #16]
			if( listIS_CONTAINED_WITHIN( NULL, &( pxTimer->xTimerListItem ) ) == pdFALSE ) /*lint !e961. The cast is only redundant when NULL is passed into the macro. */
 800fd48:	697b      	ldr	r3, [r7, #20]
 800fd4a:	b113      	cbz	r3, 800fd52 <prvTimerTask+0x7a>
				( void ) uxListRemove( &( pxTimer->xTimerListItem ) );
 800fd4c:	1d38      	adds	r0, r7, #4
 800fd4e:	f7fd fee1 	bl	800db14 <uxListRemove>
	xTimeNow = xTaskGetTickCount();
 800fd52:	f7ff fce5 	bl	800f720 <xTaskGetTickCount>
	if( xTimeNow < xLastTime )
 800fd56:	682b      	ldr	r3, [r5, #0]
 800fd58:	4298      	cmp	r0, r3
	xTimeNow = xTaskGetTickCount();
 800fd5a:	4682      	mov	sl, r0
	if( xTimeNow < xLastTime )
 800fd5c:	f0c0 808b 	bcc.w	800fe76 <prvTimerTask+0x19e>
			switch( xMessage.xMessageID )
 800fd60:	9b02      	ldr	r3, [sp, #8]
	xLastTime = xTimeNow;
 800fd62:	f8c5 a000 	str.w	sl, [r5]
			switch( xMessage.xMessageID )
 800fd66:	2b09      	cmp	r3, #9
 800fd68:	d8e3      	bhi.n	800fd32 <prvTimerTask+0x5a>
 800fd6a:	e8df f003 	tbb	[pc, r3]
 800fd6e:	0505      	.short	0x0505
 800fd70:	5a3d5305 	.word	0x5a3d5305
 800fd74:	3d530505 	.word	0x3d530505
					pxTimer->ucStatus |= tmrSTATUS_IS_ACTIVE;
 800fd78:	f897 3028 	ldrb.w	r3, [r7, #40]	; 0x28
					if( prvInsertTimerInActiveList( pxTimer,  xMessage.u.xTimerParameters.xMessageValue + pxTimer->xTimerPeriodInTicks, xTimeNow, xMessage.u.xTimerParameters.xMessageValue ) != pdFALSE )
 800fd7c:	69ba      	ldr	r2, [r7, #24]
	listSET_LIST_ITEM_OWNER( &( pxTimer->xTimerListItem ), pxTimer );
 800fd7e:	613f      	str	r7, [r7, #16]
					pxTimer->ucStatus |= tmrSTATUS_IS_ACTIVE;
 800fd80:	f043 0301 	orr.w	r3, r3, #1
 800fd84:	f887 3028 	strb.w	r3, [r7, #40]	; 0x28
					if( prvInsertTimerInActiveList( pxTimer,  xMessage.u.xTimerParameters.xMessageValue + pxTimer->xTimerPeriodInTicks, xTimeNow, xMessage.u.xTimerParameters.xMessageValue ) != pdFALSE )
 800fd88:	9b03      	ldr	r3, [sp, #12]
 800fd8a:	1899      	adds	r1, r3, r2
 800fd8c:	bf2c      	ite	cs
 800fd8e:	2001      	movcs	r0, #1
 800fd90:	2000      	movcc	r0, #0
	if( xNextExpiryTime <= xTimeNow )
 800fd92:	4551      	cmp	r1, sl
	listSET_LIST_ITEM_VALUE( &( pxTimer->xTimerListItem ), xNextExpiryTime );
 800fd94:	6079      	str	r1, [r7, #4]
	if( xNextExpiryTime <= xTimeNow )
 800fd96:	f200 808c 	bhi.w	800feb2 <prvTimerTask+0x1da>
		if( ( ( TickType_t ) ( xTimeNow - xCommandTime ) ) >= pxTimer->xTimerPeriodInTicks ) /*lint !e961 MISRA exception as the casts are only redundant for some ports. */
 800fd9a:	ebaa 0303 	sub.w	r3, sl, r3
 800fd9e:	429a      	cmp	r2, r3
 800fda0:	d832      	bhi.n	800fe08 <prvTimerTask+0x130>
						pxTimer->pxCallbackFunction( ( TimerHandle_t ) pxTimer );
 800fda2:	6a3b      	ldr	r3, [r7, #32]
 800fda4:	4638      	mov	r0, r7
 800fda6:	4798      	blx	r3
						if( ( pxTimer->ucStatus & tmrSTATUS_IS_AUTORELOAD ) != 0 )
 800fda8:	f897 3028 	ldrb.w	r3, [r7, #40]	; 0x28
 800fdac:	075b      	lsls	r3, r3, #29
 800fdae:	d5c0      	bpl.n	800fd32 <prvTimerTask+0x5a>
	if( xTimerQueue != NULL )
 800fdb0:	6822      	ldr	r2, [r4, #0]
							xResult = xTimerGenericCommand( pxTimer, tmrCOMMAND_START_DONT_TRACE, xMessage.u.xTimerParameters.xMessageValue + pxTimer->xTimerPeriodInTicks, NULL, tmrNO_DELAY );
 800fdb2:	9903      	ldr	r1, [sp, #12]
 800fdb4:	69bb      	ldr	r3, [r7, #24]
	if( xTimerQueue != NULL )
 800fdb6:	b172      	cbz	r2, 800fdd6 <prvTimerTask+0xfe>
							xResult = xTimerGenericCommand( pxTimer, tmrCOMMAND_START_DONT_TRACE, xMessage.u.xTimerParameters.xMessageValue + pxTimer->xTimerPeriodInTicks, NULL, tmrNO_DELAY );
 800fdb8:	440b      	add	r3, r1
		xMessage.u.xTimerParameters.pxTimer = xTimer;
 800fdba:	e9cd 3707 	strd	r3, r7, [sp, #28]
		xMessage.xMessageID = xCommandID;
 800fdbe:	2300      	movs	r3, #0
 800fdc0:	9306      	str	r3, [sp, #24]
			if( xTaskGetSchedulerState() == taskSCHEDULER_RUNNING )
 800fdc2:	f7ff fe3f 	bl	800fa44 <xTaskGetSchedulerState>
				xReturn = xQueueSendToBack( xTimerQueue, &xMessage, xTicksToWait );
 800fdc6:	2300      	movs	r3, #0
 800fdc8:	6820      	ldr	r0, [r4, #0]
 800fdca:	461a      	mov	r2, r3
 800fdcc:	a906      	add	r1, sp, #24
 800fdce:	f7fe fa0d 	bl	800e1ec <xQueueGenericSend>
							configASSERT( xResult );
 800fdd2:	2800      	cmp	r0, #0
 800fdd4:	d1ad      	bne.n	800fd32 <prvTimerTask+0x5a>
 800fdd6:	f04f 0350 	mov.w	r3, #80	; 0x50
 800fdda:	f383 8811 	msr	BASEPRI, r3
 800fdde:	f3bf 8f6f 	isb	sy
 800fde2:	f3bf 8f4f 	dsb	sy
 800fde6:	e7fe      	b.n	800fde6 <prvTimerTask+0x10e>
					pxTimer->ucStatus |= tmrSTATUS_IS_ACTIVE;
 800fde8:	f897 3028 	ldrb.w	r3, [r7, #40]	; 0x28
 800fdec:	f043 0301 	orr.w	r3, r3, #1
 800fdf0:	f887 3028 	strb.w	r3, [r7, #40]	; 0x28
					pxTimer->xTimerPeriodInTicks = xMessage.u.xTimerParameters.xMessageValue;
 800fdf4:	9b03      	ldr	r3, [sp, #12]
 800fdf6:	61bb      	str	r3, [r7, #24]
					configASSERT( ( pxTimer->xTimerPeriodInTicks > 0 ) );
 800fdf8:	2b00      	cmp	r3, #0
 800fdfa:	f000 809d 	beq.w	800ff38 <prvTimerTask+0x260>
					( void ) prvInsertTimerInActiveList( pxTimer, ( xTimeNow + pxTimer->xTimerPeriodInTicks ), xTimeNow, xTimeNow );
 800fdfe:	4453      	add	r3, sl
	if( xNextExpiryTime <= xTimeNow )
 800fe00:	4553      	cmp	r3, sl
	listSET_LIST_ITEM_VALUE( &( pxTimer->xTimerListItem ), xNextExpiryTime );
 800fe02:	607b      	str	r3, [r7, #4]
	listSET_LIST_ITEM_OWNER( &( pxTimer->xTimerListItem ), pxTimer );
 800fe04:	613f      	str	r7, [r7, #16]
	if( xNextExpiryTime <= xTimeNow )
 800fe06:	d85e      	bhi.n	800fec6 <prvTimerTask+0x1ee>
			vListInsert( pxOverflowTimerList, &( pxTimer->xTimerListItem ) );
 800fe08:	4b53      	ldr	r3, [pc, #332]	; (800ff58 <prvTimerTask+0x280>)
 800fe0a:	1d39      	adds	r1, r7, #4
 800fe0c:	6818      	ldr	r0, [r3, #0]
 800fe0e:	f7fd fe69 	bl	800dae4 <vListInsert>
	return xProcessTimerNow;
 800fe12:	e78e      	b.n	800fd32 <prvTimerTask+0x5a>
					pxTimer->ucStatus &= ~tmrSTATUS_IS_ACTIVE;
 800fe14:	f897 3028 	ldrb.w	r3, [r7, #40]	; 0x28
 800fe18:	f023 0301 	bic.w	r3, r3, #1
 800fe1c:	f887 3028 	strb.w	r3, [r7, #40]	; 0x28
					break;
 800fe20:	e787      	b.n	800fd32 <prvTimerTask+0x5a>
						if( ( pxTimer->ucStatus & tmrSTATUS_IS_STATICALLY_ALLOCATED ) == ( uint8_t ) 0 )
 800fe22:	f897 3028 	ldrb.w	r3, [r7, #40]	; 0x28
 800fe26:	079a      	lsls	r2, r3, #30
 800fe28:	d552      	bpl.n	800fed0 <prvTimerTask+0x1f8>
							pxTimer->ucStatus &= ~tmrSTATUS_IS_ACTIVE;
 800fe2a:	f023 0301 	bic.w	r3, r3, #1
 800fe2e:	f887 3028 	strb.w	r3, [r7, #40]	; 0x28
 800fe32:	e77e      	b.n	800fd32 <prvTimerTask+0x5a>
				pxCallback->pxCallbackFunction( pxCallback->pvParameter1, pxCallback->ulParameter2 );
 800fe34:	9b03      	ldr	r3, [sp, #12]
 800fe36:	e9dd 0104 	ldrd	r0, r1, [sp, #16]
 800fe3a:	4798      	blx	r3
		if( xMessage.xMessageID >= ( BaseType_t ) 0 )
 800fe3c:	9b02      	ldr	r3, [sp, #8]
 800fe3e:	2b00      	cmp	r3, #0
 800fe40:	f6ff af77 	blt.w	800fd32 <prvTimerTask+0x5a>
 800fe44:	e77f      	b.n	800fd46 <prvTimerTask+0x6e>
	vTaskSuspendAll();
 800fe46:	f7ff fc53 	bl	800f6f0 <vTaskSuspendAll>
	xTimeNow = xTaskGetTickCount();
 800fe4a:	f7ff fc69 	bl	800f720 <xTaskGetTickCount>
	if( xTimeNow < xLastTime )
 800fe4e:	682a      	ldr	r2, [r5, #0]
 800fe50:	4282      	cmp	r2, r0
	xTimeNow = xTaskGetTickCount();
 800fe52:	4682      	mov	sl, r0
	if( xTimeNow < xLastTime )
 800fe54:	d808      	bhi.n	800fe68 <prvTimerTask+0x190>
					xListWasEmpty = listLIST_IS_EMPTY( pxOverflowTimerList );
 800fe56:	4b40      	ldr	r3, [pc, #256]	; (800ff58 <prvTimerTask+0x280>)
	xLastTime = xTimeNow;
 800fe58:	f8c5 a000 	str.w	sl, [r5]
					xListWasEmpty = listLIST_IS_EMPTY( pxOverflowTimerList );
 800fe5c:	681a      	ldr	r2, [r3, #0]
 800fe5e:	6812      	ldr	r2, [r2, #0]
 800fe60:	fab2 f282 	clz	r2, r2
 800fe64:	0952      	lsrs	r2, r2, #5
 800fe66:	e756      	b.n	800fd16 <prvTimerTask+0x3e>
		prvSwitchTimerLists();
 800fe68:	f7ff fee8 	bl	800fc3c <prvSwitchTimerLists>
	xLastTime = xTimeNow;
 800fe6c:	f8c5 a000 	str.w	sl, [r5]
			( void ) xTaskResumeAll();
 800fe70:	f7ff fc46 	bl	800f700 <xTaskResumeAll>
 800fe74:	e75d      	b.n	800fd32 <prvTimerTask+0x5a>
		prvSwitchTimerLists();
 800fe76:	f7ff fee1 	bl	800fc3c <prvSwitchTimerLists>
		*pxTimerListsWereSwitched = pdTRUE;
 800fe7a:	e771      	b.n	800fd60 <prvTimerTask+0x88>
				( void ) xTaskResumeAll();
 800fe7c:	f7ff fc40 	bl	800f700 <xTaskResumeAll>
Timer_t * const pxTimer = ( Timer_t * ) listGET_OWNER_OF_HEAD_ENTRY( pxCurrentTimerList ); /*lint !e9087 !e9079 void * is used as this macro is used with tasks and co-routines too.  Alignment is known to be fine as the type of the pointer stored and retrieved is the same. */
 800fe80:	6832      	ldr	r2, [r6, #0]
 800fe82:	68d2      	ldr	r2, [r2, #12]
 800fe84:	f8d2 b00c 	ldr.w	fp, [r2, #12]
	( void ) uxListRemove( &( pxTimer->xTimerListItem ) );
 800fe88:	f10b 0104 	add.w	r1, fp, #4
 800fe8c:	4608      	mov	r0, r1
 800fe8e:	9101      	str	r1, [sp, #4]
 800fe90:	f7fd fe40 	bl	800db14 <uxListRemove>
	if( ( pxTimer->ucStatus & tmrSTATUS_IS_AUTORELOAD ) != 0 )
 800fe94:	f89b 0028 	ldrb.w	r0, [fp, #40]	; 0x28
 800fe98:	9901      	ldr	r1, [sp, #4]
 800fe9a:	f010 0f04 	tst.w	r0, #4
 800fe9e:	d11b      	bne.n	800fed8 <prvTimerTask+0x200>
		pxTimer->ucStatus &= ~tmrSTATUS_IS_ACTIVE;
 800fea0:	f020 0001 	bic.w	r0, r0, #1
 800fea4:	f88b 0028 	strb.w	r0, [fp, #40]	; 0x28
	pxTimer->pxCallbackFunction( ( TimerHandle_t ) pxTimer );
 800fea8:	f8db 3020 	ldr.w	r3, [fp, #32]
 800feac:	4658      	mov	r0, fp
 800feae:	4798      	blx	r3
}
 800feb0:	e73f      	b.n	800fd32 <prvTimerTask+0x5a>
		if( ( xTimeNow < xCommandTime ) && ( xNextExpiryTime >= xCommandTime ) )
 800feb2:	4553      	cmp	r3, sl
 800feb4:	d902      	bls.n	800febc <prvTimerTask+0x1e4>
 800feb6:	2800      	cmp	r0, #0
 800feb8:	f43f af73 	beq.w	800fda2 <prvTimerTask+0xca>
			vListInsert( pxCurrentTimerList, &( pxTimer->xTimerListItem ) );
 800febc:	6830      	ldr	r0, [r6, #0]
 800febe:	1d39      	adds	r1, r7, #4
 800fec0:	f7fd fe10 	bl	800dae4 <vListInsert>
	return xProcessTimerNow;
 800fec4:	e735      	b.n	800fd32 <prvTimerTask+0x5a>
			vListInsert( pxCurrentTimerList, &( pxTimer->xTimerListItem ) );
 800fec6:	6830      	ldr	r0, [r6, #0]
 800fec8:	1d39      	adds	r1, r7, #4
 800feca:	f7fd fe0b 	bl	800dae4 <vListInsert>
 800fece:	e730      	b.n	800fd32 <prvTimerTask+0x5a>
							vPortFree( pxTimer );
 800fed0:	4638      	mov	r0, r7
 800fed2:	f7fd fd83 	bl	800d9dc <vPortFree>
 800fed6:	e72c      	b.n	800fd32 <prvTimerTask+0x5a>
		if( prvInsertTimerInActiveList( pxTimer, ( xNextExpireTime + pxTimer->xTimerPeriodInTicks ), xTimeNow, xNextExpireTime ) != pdFALSE )
 800fed8:	f8db 2018 	ldr.w	r2, [fp, #24]
	listSET_LIST_ITEM_OWNER( &( pxTimer->xTimerListItem ), pxTimer );
 800fedc:	f8cb b010 	str.w	fp, [fp, #16]
		if( prvInsertTimerInActiveList( pxTimer, ( xNextExpireTime + pxTimer->xTimerPeriodInTicks ), xTimeNow, xNextExpireTime ) != pdFALSE )
 800fee0:	18b8      	adds	r0, r7, r2
	if( xNextExpiryTime <= xTimeNow )
 800fee2:	4550      	cmp	r0, sl
	listSET_LIST_ITEM_VALUE( &( pxTimer->xTimerListItem ), xNextExpiryTime );
 800fee4:	f8cb 0004 	str.w	r0, [fp, #4]
	if( xNextExpiryTime <= xTimeNow )
 800fee8:	d903      	bls.n	800fef2 <prvTimerTask+0x21a>
			vListInsert( pxCurrentTimerList, &( pxTimer->xTimerListItem ) );
 800feea:	6830      	ldr	r0, [r6, #0]
 800feec:	f7fd fdfa 	bl	800dae4 <vListInsert>
	return xProcessTimerNow;
 800fef0:	e7da      	b.n	800fea8 <prvTimerTask+0x1d0>
		if( ( ( TickType_t ) ( xTimeNow - xCommandTime ) ) >= pxTimer->xTimerPeriodInTicks ) /*lint !e961 MISRA exception as the casts are only redundant for some ports. */
 800fef2:	ebaa 0307 	sub.w	r3, sl, r7
 800fef6:	429a      	cmp	r2, r3
 800fef8:	d819      	bhi.n	800ff2e <prvTimerTask+0x256>
	if( xTimerQueue != NULL )
 800fefa:	6823      	ldr	r3, [r4, #0]
 800fefc:	b173      	cbz	r3, 800ff1c <prvTimerTask+0x244>
		xMessage.xMessageID = xCommandID;
 800fefe:	2300      	movs	r3, #0
 800ff00:	9306      	str	r3, [sp, #24]
		xMessage.u.xTimerParameters.xMessageValue = xOptionalValue;
 800ff02:	9707      	str	r7, [sp, #28]
		xMessage.u.xTimerParameters.pxTimer = xTimer;
 800ff04:	f8cd b020 	str.w	fp, [sp, #32]
			if( xTaskGetSchedulerState() == taskSCHEDULER_RUNNING )
 800ff08:	f7ff fd9c 	bl	800fa44 <xTaskGetSchedulerState>
				xReturn = xQueueSendToBack( xTimerQueue, &xMessage, xTicksToWait );
 800ff0c:	2300      	movs	r3, #0
 800ff0e:	6820      	ldr	r0, [r4, #0]
 800ff10:	461a      	mov	r2, r3
 800ff12:	a906      	add	r1, sp, #24
 800ff14:	f7fe f96a 	bl	800e1ec <xQueueGenericSend>
			configASSERT( xResult );
 800ff18:	2800      	cmp	r0, #0
 800ff1a:	d1c5      	bne.n	800fea8 <prvTimerTask+0x1d0>
 800ff1c:	f04f 0350 	mov.w	r3, #80	; 0x50
 800ff20:	f383 8811 	msr	BASEPRI, r3
 800ff24:	f3bf 8f6f 	isb	sy
 800ff28:	f3bf 8f4f 	dsb	sy
 800ff2c:	e7fe      	b.n	800ff2c <prvTimerTask+0x254>
			vListInsert( pxOverflowTimerList, &( pxTimer->xTimerListItem ) );
 800ff2e:	4b0a      	ldr	r3, [pc, #40]	; (800ff58 <prvTimerTask+0x280>)
 800ff30:	6818      	ldr	r0, [r3, #0]
 800ff32:	f7fd fdd7 	bl	800dae4 <vListInsert>
	return xProcessTimerNow;
 800ff36:	e7b7      	b.n	800fea8 <prvTimerTask+0x1d0>
 800ff38:	f04f 0350 	mov.w	r3, #80	; 0x50
 800ff3c:	f383 8811 	msr	BASEPRI, r3
 800ff40:	f3bf 8f6f 	isb	sy
 800ff44:	f3bf 8f4f 	dsb	sy
					configASSERT( ( pxTimer->xTimerPeriodInTicks > 0 ) );
 800ff48:	e7fe      	b.n	800ff48 <prvTimerTask+0x270>
 800ff4a:	bf00      	nop
 800ff4c:	200136e4 	.word	0x200136e4
 800ff50:	200137b4 	.word	0x200137b4
 800ff54:	20013808 	.word	0x20013808
 800ff58:	200136e8 	.word	0x200136e8

0800ff5c <xTimerCreateTimerTask>:
{
 800ff5c:	b5f0      	push	{r4, r5, r6, r7, lr}
	/* Check that the list from which active timers are referenced, and the
	queue used to communicate with the timer service, have been
	initialised. */
	taskENTER_CRITICAL();
	{
		if( xTimerQueue == NULL )
 800ff5e:	4c23      	ldr	r4, [pc, #140]	; (800ffec <xTimerCreateTimerTask+0x90>)
{
 800ff60:	b089      	sub	sp, #36	; 0x24
	taskENTER_CRITICAL();
 800ff62:	f7fd fe4f 	bl	800dc04 <vPortEnterCritical>
		if( xTimerQueue == NULL )
 800ff66:	6825      	ldr	r5, [r4, #0]
 800ff68:	b335      	cbz	r5, 800ffb8 <xTimerCreateTimerTask+0x5c>
		else
		{
			mtCOVERAGE_TEST_MARKER();
		}
	}
	taskEXIT_CRITICAL();
 800ff6a:	f7fd fe6d 	bl	800dc48 <vPortExitCritical>
	if( xTimerQueue != NULL )
 800ff6e:	6823      	ldr	r3, [r4, #0]
 800ff70:	b1cb      	cbz	r3, 800ffa6 <xTimerCreateTimerTask+0x4a>
			StaticTask_t *pxTimerTaskTCBBuffer = NULL;
 800ff72:	2400      	movs	r4, #0
			vApplicationGetTimerTaskMemory( &pxTimerTaskTCBBuffer, &pxTimerTaskStackBuffer, &ulTimerTaskStackSize );
 800ff74:	aa07      	add	r2, sp, #28
 800ff76:	a906      	add	r1, sp, #24
 800ff78:	a805      	add	r0, sp, #20
			StackType_t *pxTimerTaskStackBuffer = NULL;
 800ff7a:	e9cd 4405 	strd	r4, r4, [sp, #20]
			vApplicationGetTimerTaskMemory( &pxTimerTaskTCBBuffer, &pxTimerTaskStackBuffer, &ulTimerTaskStackSize );
 800ff7e:	f7fd fc61 	bl	800d844 <vApplicationGetTimerTaskMemory>
			xTimerTaskHandle = xTaskCreateStatic(	prvTimerTask,
 800ff82:	e9dd 0105 	ldrd	r0, r1, [sp, #20]
 800ff86:	2302      	movs	r3, #2
 800ff88:	e9cd 1001 	strd	r1, r0, [sp, #4]
 800ff8c:	9300      	str	r3, [sp, #0]
 800ff8e:	9a07      	ldr	r2, [sp, #28]
 800ff90:	4917      	ldr	r1, [pc, #92]	; (800fff0 <xTimerCreateTimerTask+0x94>)
 800ff92:	4818      	ldr	r0, [pc, #96]	; (800fff4 <xTimerCreateTimerTask+0x98>)
 800ff94:	4623      	mov	r3, r4
 800ff96:	f7ff fa6d 	bl	800f474 <xTaskCreateStatic>
 800ff9a:	4b17      	ldr	r3, [pc, #92]	; (800fff8 <xTimerCreateTimerTask+0x9c>)
 800ff9c:	6018      	str	r0, [r3, #0]
			if( xTimerTaskHandle != NULL )
 800ff9e:	b110      	cbz	r0, 800ffa6 <xTimerCreateTimerTask+0x4a>
}
 800ffa0:	2001      	movs	r0, #1
 800ffa2:	b009      	add	sp, #36	; 0x24
 800ffa4:	bdf0      	pop	{r4, r5, r6, r7, pc}
 800ffa6:	f04f 0350 	mov.w	r3, #80	; 0x50
 800ffaa:	f383 8811 	msr	BASEPRI, r3
 800ffae:	f3bf 8f6f 	isb	sy
 800ffb2:	f3bf 8f4f 	dsb	sy
	configASSERT( xReturn );
 800ffb6:	e7fe      	b.n	800ffb6 <xTimerCreateTimerTask+0x5a>
			vListInitialise( &xActiveTimerList1 );
 800ffb8:	4f10      	ldr	r7, [pc, #64]	; (800fffc <xTimerCreateTimerTask+0xa0>)
			vListInitialise( &xActiveTimerList2 );
 800ffba:	4e11      	ldr	r6, [pc, #68]	; (8010000 <xTimerCreateTimerTask+0xa4>)
			vListInitialise( &xActiveTimerList1 );
 800ffbc:	4638      	mov	r0, r7
 800ffbe:	f7fd fd71 	bl	800daa4 <vListInitialise>
			vListInitialise( &xActiveTimerList2 );
 800ffc2:	4630      	mov	r0, r6
 800ffc4:	f7fd fd6e 	bl	800daa4 <vListInitialise>
			pxCurrentTimerList = &xActiveTimerList1;
 800ffc8:	4a0e      	ldr	r2, [pc, #56]	; (8010004 <xTimerCreateTimerTask+0xa8>)
				xTimerQueue = xQueueCreateStatic( ( UBaseType_t ) configTIMER_QUEUE_LENGTH, ( UBaseType_t ) sizeof( DaemonTaskMessage_t ), &( ucStaticTimerQueueStorage[ 0 ] ), &xStaticTimerQueue );
 800ffca:	9500      	str	r5, [sp, #0]
			pxCurrentTimerList = &xActiveTimerList1;
 800ffcc:	6017      	str	r7, [r2, #0]
			pxOverflowTimerList = &xActiveTimerList2;
 800ffce:	4a0e      	ldr	r2, [pc, #56]	; (8010008 <xTimerCreateTimerTask+0xac>)
				xTimerQueue = xQueueCreateStatic( ( UBaseType_t ) configTIMER_QUEUE_LENGTH, ( UBaseType_t ) sizeof( DaemonTaskMessage_t ), &( ucStaticTimerQueueStorage[ 0 ] ), &xStaticTimerQueue );
 800ffd0:	4b0e      	ldr	r3, [pc, #56]	; (801000c <xTimerCreateTimerTask+0xb0>)
			pxOverflowTimerList = &xActiveTimerList2;
 800ffd2:	6016      	str	r6, [r2, #0]
				xTimerQueue = xQueueCreateStatic( ( UBaseType_t ) configTIMER_QUEUE_LENGTH, ( UBaseType_t ) sizeof( DaemonTaskMessage_t ), &( ucStaticTimerQueueStorage[ 0 ] ), &xStaticTimerQueue );
 800ffd4:	2110      	movs	r1, #16
 800ffd6:	4a0e      	ldr	r2, [pc, #56]	; (8010010 <xTimerCreateTimerTask+0xb4>)
 800ffd8:	200a      	movs	r0, #10
 800ffda:	f7fd ffb1 	bl	800df40 <xQueueGenericCreateStatic>
 800ffde:	6020      	str	r0, [r4, #0]
				if( xTimerQueue != NULL )
 800ffe0:	2800      	cmp	r0, #0
 800ffe2:	d0c2      	beq.n	800ff6a <xTimerCreateTimerTask+0xe>
					vQueueAddToRegistry( xTimerQueue, "TmrQ" );
 800ffe4:	490b      	ldr	r1, [pc, #44]	; (8010014 <xTimerCreateTimerTask+0xb8>)
 800ffe6:	f7fe ff0d 	bl	800ee04 <vQueueAddToRegistry>
 800ffea:	e7be      	b.n	800ff6a <xTimerCreateTimerTask+0xe>
 800ffec:	20013808 	.word	0x20013808
 800fff0:	0802ee44 	.word	0x0802ee44
 800fff4:	0800fcd9 	.word	0x0800fcd9
 800fff8:	2001380c 	.word	0x2001380c
 800fffc:	2001378c 	.word	0x2001378c
 8010000:	200137a0 	.word	0x200137a0
 8010004:	200136e4 	.word	0x200136e4
 8010008:	200136e8 	.word	0x200136e8
 801000c:	200137b8 	.word	0x200137b8
 8010010:	200136ec 	.word	0x200136ec
 8010014:	0802ee3c 	.word	0x0802ee3c

08010018 <_ZNK8touchgfx17AbstractPartition18getAllocationCountEv>:
 8010018:	8880      	ldrh	r0, [r0, #4]
 801001a:	4770      	bx	lr

0801001c <_ZN8touchgfx17AbstractPartition7indexOfEPKv>:
 801001c:	b570      	push	{r4, r5, r6, lr}
 801001e:	6803      	ldr	r3, [r0, #0]
 8010020:	4605      	mov	r5, r0
 8010022:	460c      	mov	r4, r1
 8010024:	6a5b      	ldr	r3, [r3, #36]	; 0x24
 8010026:	2100      	movs	r1, #0
 8010028:	4798      	blx	r3
 801002a:	682b      	ldr	r3, [r5, #0]
 801002c:	4606      	mov	r6, r0
 801002e:	6a1b      	ldr	r3, [r3, #32]
 8010030:	4628      	mov	r0, r5
 8010032:	4798      	blx	r3
 8010034:	1ba4      	subs	r4, r4, r6
 8010036:	b2a4      	uxth	r4, r4
 8010038:	fbb4 f0f0 	udiv	r0, r4, r0
 801003c:	bd70      	pop	{r4, r5, r6, pc}

0801003e <_ZN8touchgfx17AbstractPartition5clearEv>:
 801003e:	2300      	movs	r3, #0
 8010040:	8083      	strh	r3, [r0, #4]
 8010042:	4770      	bx	lr

08010044 <_ZN8touchgfx17AbstractPartition8allocateEt>:
 8010044:	b510      	push	{r4, lr}
 8010046:	6803      	ldr	r3, [r0, #0]
 8010048:	8881      	ldrh	r1, [r0, #4]
 801004a:	6a5b      	ldr	r3, [r3, #36]	; 0x24
 801004c:	4604      	mov	r4, r0
 801004e:	4798      	blx	r3
 8010050:	88a3      	ldrh	r3, [r4, #4]
 8010052:	3301      	adds	r3, #1
 8010054:	80a3      	strh	r3, [r4, #4]
 8010056:	bd10      	pop	{r4, pc}

08010058 <_ZN8touchgfx17AbstractPartition10allocateAtEtt>:
 8010058:	6803      	ldr	r3, [r0, #0]
 801005a:	6a5b      	ldr	r3, [r3, #36]	; 0x24
 801005c:	4718      	bx	r3

0801005e <_ZN8touchgfx17AbstractPartitionD1Ev>:
 801005e:	4770      	bx	lr

08010060 <_ZN8touchgfx17AbstractPartitionC1Ev>:
 8010060:	4a02      	ldr	r2, [pc, #8]	; (801006c <_ZN8touchgfx17AbstractPartitionC1Ev+0xc>)
 8010062:	6002      	str	r2, [r0, #0]
 8010064:	2200      	movs	r2, #0
 8010066:	8082      	strh	r2, [r0, #4]
 8010068:	4770      	bx	lr
 801006a:	bf00      	nop
 801006c:	0802ee54 	.word	0x0802ee54

08010070 <_ZNK8touchgfx25AbstractProgressIndicator17invalidateContentEv>:
 8010070:	b510      	push	{r4, lr}
 8010072:	6803      	ldr	r3, [r0, #0]
 8010074:	f8d3 30c8 	ldr.w	r3, [r3, #200]	; 0xc8
 8010078:	4604      	mov	r4, r0
 801007a:	4798      	blx	r3
 801007c:	b110      	cbz	r0, 8010084 <_ZNK8touchgfx25AbstractProgressIndicator17invalidateContentEv+0x14>
 801007e:	4620      	mov	r0, r4
 8010080:	f7f2 fa74 	bl	800256c <_ZNK8touchgfx8Drawable17invalidateContentEv>
 8010084:	bd10      	pop	{r4, pc}

08010086 <_ZNK8touchgfx25AbstractProgressIndicator21getProgressIndicatorXEv>:
 8010086:	f9b0 005c 	ldrsh.w	r0, [r0, #92]	; 0x5c
 801008a:	4770      	bx	lr

0801008c <_ZNK8touchgfx25AbstractProgressIndicator21getProgressIndicatorYEv>:
 801008c:	f9b0 005e 	ldrsh.w	r0, [r0, #94]	; 0x5e
 8010090:	4770      	bx	lr

08010092 <_ZNK8touchgfx25AbstractProgressIndicator25getProgressIndicatorWidthEv>:
 8010092:	f9b0 0060 	ldrsh.w	r0, [r0, #96]	; 0x60
 8010096:	4770      	bx	lr

08010098 <_ZNK8touchgfx25AbstractProgressIndicator26getProgressIndicatorHeightEv>:
 8010098:	f9b0 0062 	ldrsh.w	r0, [r0, #98]	; 0x62
 801009c:	4770      	bx	lr

0801009e <_ZN8touchgfx25AbstractProgressIndicator8setRangeEiitt>:
 801009e:	b5f8      	push	{r3, r4, r5, r6, r7, lr}
 80100a0:	e9c0 1221 	strd	r1, r2, [r0, #132]	; 0x84
 80100a4:	461e      	mov	r6, r3
 80100a6:	6803      	ldr	r3, [r0, #0]
 80100a8:	460f      	mov	r7, r1
 80100aa:	f8d3 30b0 	ldr.w	r3, [r3, #176]	; 0xb0
 80100ae:	f8d0 108c 	ldr.w	r1, [r0, #140]	; 0x8c
 80100b2:	4604      	mov	r4, r0
 80100b4:	4615      	mov	r5, r2
 80100b6:	4798      	blx	r3
 80100b8:	b93e      	cbnz	r6, 80100ca <_ZN8touchgfx25AbstractProgressIndicator8setRangeEiitt+0x2c>
 80100ba:	1bed      	subs	r5, r5, r7
 80100bc:	f8a4 5090 	strh.w	r5, [r4, #144]	; 0x90
 80100c0:	f8bd 3018 	ldrh.w	r3, [sp, #24]
 80100c4:	f8a4 3092 	strh.w	r3, [r4, #146]	; 0x92
 80100c8:	bdf8      	pop	{r3, r4, r5, r6, r7, pc}
 80100ca:	f8a4 6090 	strh.w	r6, [r4, #144]	; 0x90
 80100ce:	e7f7      	b.n	80100c0 <_ZN8touchgfx25AbstractProgressIndicator8setRangeEiitt+0x22>

080100d0 <_ZNK8touchgfx25AbstractProgressIndicator8getRangeERiS1_RtS2_>:
 80100d0:	b510      	push	{r4, lr}
 80100d2:	f8d0 4084 	ldr.w	r4, [r0, #132]	; 0x84
 80100d6:	600c      	str	r4, [r1, #0]
 80100d8:	f8d0 1088 	ldr.w	r1, [r0, #136]	; 0x88
 80100dc:	6011      	str	r1, [r2, #0]
 80100de:	f8b0 2090 	ldrh.w	r2, [r0, #144]	; 0x90
 80100e2:	801a      	strh	r2, [r3, #0]
 80100e4:	9b02      	ldr	r3, [sp, #8]
 80100e6:	f8b0 2092 	ldrh.w	r2, [r0, #146]	; 0x92
 80100ea:	801a      	strh	r2, [r3, #0]
 80100ec:	bd10      	pop	{r4, pc}

080100ee <_ZNK8touchgfx25AbstractProgressIndicator8getRangeERiS1_Rt>:
 80100ee:	b510      	push	{r4, lr}
 80100f0:	f8d0 4084 	ldr.w	r4, [r0, #132]	; 0x84
 80100f4:	600c      	str	r4, [r1, #0]
 80100f6:	f8d0 1088 	ldr.w	r1, [r0, #136]	; 0x88
 80100fa:	6011      	str	r1, [r2, #0]
 80100fc:	f8b0 2090 	ldrh.w	r2, [r0, #144]	; 0x90
 8010100:	801a      	strh	r2, [r3, #0]
 8010102:	bd10      	pop	{r4, pc}

08010104 <_ZNK8touchgfx25AbstractProgressIndicator8getRangeERiS1_>:
 8010104:	f8d0 3084 	ldr.w	r3, [r0, #132]	; 0x84
 8010108:	600b      	str	r3, [r1, #0]
 801010a:	f8d0 3088 	ldr.w	r3, [r0, #136]	; 0x88
 801010e:	6013      	str	r3, [r2, #0]
 8010110:	4770      	bx	lr

08010112 <_ZN8touchgfx25AbstractProgressIndicator17setEasingEquationEPFstsstE>:
 8010112:	f8c0 1094 	str.w	r1, [r0, #148]	; 0x94
 8010116:	4770      	bx	lr

08010118 <_ZNK8touchgfx25AbstractProgressIndicator8getValueEv>:
 8010118:	f8d0 008c 	ldr.w	r0, [r0, #140]	; 0x8c
 801011c:	4770      	bx	lr

0801011e <_ZN8touchgfx25AbstractProgressIndicator8setAlphaEh>:
 801011e:	f880 1054 	strb.w	r1, [r0, #84]	; 0x54
 8010122:	4770      	bx	lr

08010124 <_ZNK8touchgfx25AbstractProgressIndicator8getAlphaEv>:
 8010124:	f890 0054 	ldrb.w	r0, [r0, #84]	; 0x54
 8010128:	4770      	bx	lr

0801012a <_ZN8touchgfx25AbstractProgressIndicatorD1Ev>:
 801012a:	4770      	bx	lr

0801012c <_ZN8touchgfx25AbstractProgressIndicatorD0Ev>:
 801012c:	b510      	push	{r4, lr}
 801012e:	21b4      	movs	r1, #180	; 0xb4
 8010130:	4604      	mov	r4, r0
 8010132:	f01a fb02 	bl	802a73a <_ZdlPvj>
 8010136:	4620      	mov	r0, r4
 8010138:	bd10      	pop	{r4, pc}

0801013a <_ZN8touchgfx25AbstractProgressIndicator11updateValueEit>:
 801013a:	b570      	push	{r4, r5, r6, lr}
 801013c:	f8d0 5084 	ldr.w	r5, [r0, #132]	; 0x84
 8010140:	428d      	cmp	r5, r1
 8010142:	bfb8      	it	lt
 8010144:	460d      	movlt	r5, r1
 8010146:	f8d0 1088 	ldr.w	r1, [r0, #136]	; 0x88
 801014a:	428d      	cmp	r5, r1
 801014c:	4604      	mov	r4, r0
 801014e:	bfa8      	it	ge
 8010150:	460d      	movge	r5, r1
 8010152:	4616      	mov	r6, r2
 8010154:	b99a      	cbnz	r2, 801017e <_ZN8touchgfx25AbstractProgressIndicator11updateValueEit+0x44>
 8010156:	6803      	ldr	r3, [r0, #0]
 8010158:	4629      	mov	r1, r5
 801015a:	f8d3 30b0 	ldr.w	r3, [r3, #176]	; 0xb0
 801015e:	4798      	blx	r3
 8010160:	f8d4 00b0 	ldr.w	r0, [r4, #176]	; 0xb0
 8010164:	b368      	cbz	r0, 80101c2 <_ZN8touchgfx25AbstractProgressIndicator11updateValueEit+0x88>
 8010166:	6803      	ldr	r3, [r0, #0]
 8010168:	68db      	ldr	r3, [r3, #12]
 801016a:	4798      	blx	r3
 801016c:	b348      	cbz	r0, 80101c2 <_ZN8touchgfx25AbstractProgressIndicator11updateValueEit+0x88>
 801016e:	f8d4 00b0 	ldr.w	r0, [r4, #176]	; 0xb0
 8010172:	6803      	ldr	r3, [r0, #0]
 8010174:	4621      	mov	r1, r4
 8010176:	689b      	ldr	r3, [r3, #8]
 8010178:	e8bd 4070 	ldmia.w	sp!, {r4, r5, r6, lr}
 801017c:	4718      	bx	r3
 801017e:	f8d0 30a4 	ldr.w	r3, [r0, #164]	; 0xa4
 8010182:	2b00      	cmp	r3, #0
 8010184:	dd08      	ble.n	8010198 <_ZN8touchgfx25AbstractProgressIndicator11updateValueEit+0x5e>
 8010186:	f006 fa23 	bl	80165d0 <_ZN8touchgfx11Application11getInstanceEv>
 801018a:	4621      	mov	r1, r4
 801018c:	3004      	adds	r0, #4
 801018e:	f006 fa6c 	bl	801666a <_ZN8touchgfx11Application12TimerWidgets6removeEPKNS_8DrawableE>
 8010192:	2300      	movs	r3, #0
 8010194:	f884 3098 	strb.w	r3, [r4, #152]	; 0x98
 8010198:	6823      	ldr	r3, [r4, #0]
 801019a:	4620      	mov	r0, r4
 801019c:	f8d3 30bc 	ldr.w	r3, [r3, #188]	; 0xbc
 80101a0:	4798      	blx	r3
 80101a2:	2300      	movs	r3, #0
 80101a4:	f8c4 30a8 	str.w	r3, [r4, #168]	; 0xa8
 80101a8:	e9c4 0527 	strd	r0, r5, [r4, #156]	; 0x9c
 80101ac:	f8c4 60a4 	str.w	r6, [r4, #164]	; 0xa4
 80101b0:	f006 fa0e 	bl	80165d0 <_ZN8touchgfx11Application11getInstanceEv>
 80101b4:	4621      	mov	r1, r4
 80101b6:	3004      	adds	r0, #4
 80101b8:	f006 fb00 	bl	80167bc <_ZN8touchgfx11Application12TimerWidgets3addEPNS_8DrawableE>
 80101bc:	2301      	movs	r3, #1
 80101be:	f884 3098 	strb.w	r3, [r4, #152]	; 0x98
 80101c2:	bd70      	pop	{r4, r5, r6, pc}

080101c4 <_ZN8touchgfx25AbstractProgressIndicator8setValueEi>:
 80101c4:	b510      	push	{r4, lr}
 80101c6:	f8d0 3084 	ldr.w	r3, [r0, #132]	; 0x84
 80101ca:	4299      	cmp	r1, r3
 80101cc:	bfb8      	it	lt
 80101ce:	4619      	movlt	r1, r3
 80101d0:	f8d0 3088 	ldr.w	r3, [r0, #136]	; 0x88
 80101d4:	4299      	cmp	r1, r3
 80101d6:	bfa8      	it	ge
 80101d8:	4619      	movge	r1, r3
 80101da:	f8d0 308c 	ldr.w	r3, [r0, #140]	; 0x8c
 80101de:	428b      	cmp	r3, r1
 80101e0:	4604      	mov	r4, r0
 80101e2:	d010      	beq.n	8010206 <_ZN8touchgfx25AbstractProgressIndicator8setValueEi+0x42>
 80101e4:	f8c0 108c 	str.w	r1, [r0, #140]	; 0x8c
 80101e8:	f8d0 00ac 	ldr.w	r0, [r0, #172]	; 0xac
 80101ec:	b158      	cbz	r0, 8010206 <_ZN8touchgfx25AbstractProgressIndicator8setValueEi+0x42>
 80101ee:	6803      	ldr	r3, [r0, #0]
 80101f0:	68db      	ldr	r3, [r3, #12]
 80101f2:	4798      	blx	r3
 80101f4:	b138      	cbz	r0, 8010206 <_ZN8touchgfx25AbstractProgressIndicator8setValueEi+0x42>
 80101f6:	f8d4 00ac 	ldr.w	r0, [r4, #172]	; 0xac
 80101fa:	6803      	ldr	r3, [r0, #0]
 80101fc:	4621      	mov	r1, r4
 80101fe:	689b      	ldr	r3, [r3, #8]
 8010200:	e8bd 4010 	ldmia.w	sp!, {r4, lr}
 8010204:	4718      	bx	r3
 8010206:	bd10      	pop	{r4, pc}

08010208 <_ZNK8touchgfx25AbstractProgressIndicator11getProgressEt>:
 8010208:	b5f7      	push	{r0, r1, r2, r4, r5, r6, r7, lr}
 801020a:	4604      	mov	r4, r0
 801020c:	460d      	mov	r5, r1
 801020e:	b1a9      	cbz	r1, 801023c <_ZNK8touchgfx25AbstractProgressIndicator11getProgressEt+0x34>
 8010210:	f8b0 6092 	ldrh.w	r6, [r0, #146]	; 0x92
 8010214:	f8b4 1090 	ldrh.w	r1, [r4, #144]	; 0x90
 8010218:	f8d4 708c 	ldr.w	r7, [r4, #140]	; 0x8c
 801021c:	e9d0 0221 	ldrd	r0, r2, [r0, #132]	; 0x84
 8010220:	ab01      	add	r3, sp, #4
 8010222:	1a12      	subs	r2, r2, r0
 8010224:	1b89      	subs	r1, r1, r6
 8010226:	1a38      	subs	r0, r7, r0
 8010228:	f007 fc88 	bl	8017b3c <_ZN8touchgfx6muldivElllRl>
 801022c:	4629      	mov	r1, r5
 801022e:	ab01      	add	r3, sp, #4
 8010230:	f8b4 2090 	ldrh.w	r2, [r4, #144]	; 0x90
 8010234:	4430      	add	r0, r6
 8010236:	f007 fc81 	bl	8017b3c <_ZN8touchgfx6muldivElllRl>
 801023a:	b285      	uxth	r5, r0
 801023c:	4628      	mov	r0, r5
 801023e:	b003      	add	sp, #12
 8010240:	bdf0      	pop	{r4, r5, r6, r7, pc}

08010242 <_ZN8touchgfx25AbstractProgressIndicator15handleTickEventEv>:
 8010242:	b570      	push	{r4, r5, r6, lr}
 8010244:	f890 3098 	ldrb.w	r3, [r0, #152]	; 0x98
 8010248:	4604      	mov	r4, r0
 801024a:	2b00      	cmp	r3, #0
 801024c:	d035      	beq.n	80102ba <_ZN8touchgfx25AbstractProgressIndicator15handleTickEventEv+0x78>
 801024e:	e9d4 3227 	ldrd	r3, r2, [r4, #156]	; 0x9c
 8010252:	f8d0 00a8 	ldr.w	r0, [r0, #168]	; 0xa8
 8010256:	f8d4 5094 	ldr.w	r5, [r4, #148]	; 0x94
 801025a:	3001      	adds	r0, #1
 801025c:	1ad2      	subs	r2, r2, r3
 801025e:	b212      	sxth	r2, r2
 8010260:	f8c4 00a8 	str.w	r0, [r4, #168]	; 0xa8
 8010264:	f8b4 30a4 	ldrh.w	r3, [r4, #164]	; 0xa4
 8010268:	2100      	movs	r1, #0
 801026a:	b280      	uxth	r0, r0
 801026c:	47a8      	blx	r5
 801026e:	f8d4 109c 	ldr.w	r1, [r4, #156]	; 0x9c
 8010272:	6823      	ldr	r3, [r4, #0]
 8010274:	4401      	add	r1, r0
 8010276:	f8d3 30b0 	ldr.w	r3, [r3, #176]	; 0xb0
 801027a:	4620      	mov	r0, r4
 801027c:	4798      	blx	r3
 801027e:	e9d4 3229 	ldrd	r3, r2, [r4, #164]	; 0xa4
 8010282:	429a      	cmp	r2, r3
 8010284:	db19      	blt.n	80102ba <_ZN8touchgfx25AbstractProgressIndicator15handleTickEventEv+0x78>
 8010286:	2500      	movs	r5, #0
 8010288:	e9c4 5529 	strd	r5, r5, [r4, #164]	; 0xa4
 801028c:	f006 f9a0 	bl	80165d0 <_ZN8touchgfx11Application11getInstanceEv>
 8010290:	4621      	mov	r1, r4
 8010292:	3004      	adds	r0, #4
 8010294:	f006 f9e9 	bl	801666a <_ZN8touchgfx11Application12TimerWidgets6removeEPKNS_8DrawableE>
 8010298:	f8d4 00b0 	ldr.w	r0, [r4, #176]	; 0xb0
 801029c:	f884 5098 	strb.w	r5, [r4, #152]	; 0x98
 80102a0:	b158      	cbz	r0, 80102ba <_ZN8touchgfx25AbstractProgressIndicator15handleTickEventEv+0x78>
 80102a2:	6803      	ldr	r3, [r0, #0]
 80102a4:	68db      	ldr	r3, [r3, #12]
 80102a6:	4798      	blx	r3
 80102a8:	b138      	cbz	r0, 80102ba <_ZN8touchgfx25AbstractProgressIndicator15handleTickEventEv+0x78>
 80102aa:	f8d4 00b0 	ldr.w	r0, [r4, #176]	; 0xb0
 80102ae:	6803      	ldr	r3, [r0, #0]
 80102b0:	4621      	mov	r1, r4
 80102b2:	689b      	ldr	r3, [r3, #8]
 80102b4:	e8bd 4070 	ldmia.w	sp!, {r4, r5, r6, lr}
 80102b8:	4718      	bx	r3
 80102ba:	bd70      	pop	{r4, r5, r6, pc}

080102bc <_ZN8touchgfx8DrawableC1Ev>:
 80102bc:	4a0a      	ldr	r2, [pc, #40]	; (80102e8 <_ZN8touchgfx8DrawableC1Ev+0x2c>)
 80102be:	6002      	str	r2, [r0, #0]
 80102c0:	2200      	movs	r2, #0
 80102c2:	8082      	strh	r2, [r0, #4]
 80102c4:	80c2      	strh	r2, [r0, #6]
 80102c6:	8102      	strh	r2, [r0, #8]
 80102c8:	8142      	strh	r2, [r0, #10]
 80102ca:	8182      	strh	r2, [r0, #12]
 80102cc:	81c2      	strh	r2, [r0, #14]
 80102ce:	8202      	strh	r2, [r0, #16]
 80102d0:	8242      	strh	r2, [r0, #18]
 80102d2:	e9c0 2205 	strd	r2, r2, [r0, #20]
 80102d6:	61c2      	str	r2, [r0, #28]
 80102d8:	8402      	strh	r2, [r0, #32]
 80102da:	8442      	strh	r2, [r0, #34]	; 0x22
 80102dc:	f880 2024 	strb.w	r2, [r0, #36]	; 0x24
 80102e0:	2201      	movs	r2, #1
 80102e2:	f880 2025 	strb.w	r2, [r0, #37]	; 0x25
 80102e6:	4770      	bx	lr
 80102e8:	0802f7d4 	.word	0x0802f7d4

080102ec <_ZN8touchgfx8Drawable14setWidthHeightEss>:
 80102ec:	b570      	push	{r4, r5, r6, lr}
 80102ee:	6803      	ldr	r3, [r0, #0]
 80102f0:	4604      	mov	r4, r0
 80102f2:	6b9b      	ldr	r3, [r3, #56]	; 0x38
 80102f4:	4615      	mov	r5, r2
 80102f6:	4798      	blx	r3
 80102f8:	6823      	ldr	r3, [r4, #0]
 80102fa:	4629      	mov	r1, r5
 80102fc:	4620      	mov	r0, r4
 80102fe:	6bdb      	ldr	r3, [r3, #60]	; 0x3c
 8010300:	e8bd 4070 	ldmia.w	sp!, {r4, r5, r6, lr}
 8010304:	4718      	bx	r3

08010306 <_ZN8touchgfx25AbstractProgressIndicator28setProgressIndicatorPositionEssss>:
 8010306:	e92d 41f0 	stmdb	sp!, {r4, r5, r6, r7, r8, lr}
 801030a:	4604      	mov	r4, r0
 801030c:	f9bd 7018 	ldrsh.w	r7, [sp, #24]
 8010310:	f8a4 105c 	strh.w	r1, [r4, #92]	; 0x5c
 8010314:	460e      	mov	r6, r1
 8010316:	4615      	mov	r5, r2
 8010318:	f8a4 205e 	strh.w	r2, [r4, #94]	; 0x5e
 801031c:	4619      	mov	r1, r3
 801031e:	463a      	mov	r2, r7
 8010320:	3058      	adds	r0, #88	; 0x58
 8010322:	4698      	mov	r8, r3
 8010324:	f7ff ffe2 	bl	80102ec <_ZN8touchgfx8Drawable14setWidthHeightEss>
 8010328:	f9b4 3008 	ldrsh.w	r3, [r4, #8]
 801032c:	4446      	add	r6, r8
 801032e:	42b3      	cmp	r3, r6
 8010330:	f9b4 300a 	ldrsh.w	r3, [r4, #10]
 8010334:	bfb8      	it	lt
 8010336:	8126      	strhlt	r6, [r4, #8]
 8010338:	443d      	add	r5, r7
 801033a:	42ab      	cmp	r3, r5
 801033c:	bfb8      	it	lt
 801033e:	8165      	strhlt	r5, [r4, #10]
 8010340:	e8bd 81f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, pc}

08010344 <_ZN8touchgfx25AbstractProgressIndicator13setBackgroundERKNS_6BitmapE>:
 8010344:	b510      	push	{r4, lr}
 8010346:	4604      	mov	r4, r0
 8010348:	302c      	adds	r0, #44	; 0x2c
 801034a:	f003 fc42 	bl	8013bd2 <_ZN8touchgfx5Image9setBitmapERKNS_6BitmapE>
 801034e:	f9b4 2036 	ldrsh.w	r2, [r4, #54]	; 0x36
 8010352:	f9b4 1034 	ldrsh.w	r1, [r4, #52]	; 0x34
 8010356:	4620      	mov	r0, r4
 8010358:	f7ff ffc8 	bl	80102ec <_ZN8touchgfx8Drawable14setWidthHeightEss>
 801035c:	bd10      	pop	{r4, pc}
	...

08010360 <_ZN8touchgfx25AbstractProgressIndicatorC1Ev>:
 8010360:	b5f7      	push	{r0, r1, r2, r4, r5, r6, r7, lr}
 8010362:	4604      	mov	r4, r0
 8010364:	4626      	mov	r6, r4
 8010366:	2500      	movs	r5, #0
 8010368:	f7ff ffa8 	bl	80102bc <_ZN8touchgfx8DrawableC1Ev>
 801036c:	4b23      	ldr	r3, [pc, #140]	; (80103fc <_ZN8touchgfx25AbstractProgressIndicatorC1Ev+0x9c>)
 801036e:	62a5      	str	r5, [r4, #40]	; 0x28
 8010370:	f846 3b2c 	str.w	r3, [r6], #44
 8010374:	2226      	movs	r2, #38	; 0x26
 8010376:	4629      	mov	r1, r5
 8010378:	f64f 77ff 	movw	r7, #65535	; 0xffff
 801037c:	4630      	mov	r0, r6
 801037e:	f8ad 7004 	strh.w	r7, [sp, #4]
 8010382:	f01b f9f2 	bl	802b76a <memset>
 8010386:	4630      	mov	r0, r6
 8010388:	f7ff ff98 	bl	80102bc <_ZN8touchgfx8DrawableC1Ev>
 801038c:	a902      	add	r1, sp, #8
 801038e:	4b1c      	ldr	r3, [pc, #112]	; (8010400 <_ZN8touchgfx25AbstractProgressIndicatorC1Ev+0xa0>)
 8010390:	62e3      	str	r3, [r4, #44]	; 0x2c
 8010392:	f831 3d04 	ldrh.w	r3, [r1, #-4]!
 8010396:	f8a4 3052 	strh.w	r3, [r4, #82]	; 0x52
 801039a:	f884 7054 	strb.w	r7, [r4, #84]	; 0x54
 801039e:	4630      	mov	r0, r6
 80103a0:	f104 0758 	add.w	r7, r4, #88	; 0x58
 80103a4:	f003 fc15 	bl	8013bd2 <_ZN8touchgfx5Image9setBitmapERKNS_6BitmapE>
 80103a8:	4638      	mov	r0, r7
 80103aa:	f7ff ff87 	bl	80102bc <_ZN8touchgfx8DrawableC1Ev>
 80103ae:	4b15      	ldr	r3, [pc, #84]	; (8010404 <_ZN8touchgfx25AbstractProgressIndicatorC1Ev+0xa4>)
 80103b0:	65a3      	str	r3, [r4, #88]	; 0x58
 80103b2:	2364      	movs	r3, #100	; 0x64
 80103b4:	e9c4 3522 	strd	r3, r5, [r4, #136]	; 0x88
 80103b8:	f8c4 3090 	str.w	r3, [r4, #144]	; 0x90
 80103bc:	4b12      	ldr	r3, [pc, #72]	; (8010408 <_ZN8touchgfx25AbstractProgressIndicatorC1Ev+0xa8>)
 80103be:	f8c4 3094 	str.w	r3, [r4, #148]	; 0x94
 80103c2:	4629      	mov	r1, r5
 80103c4:	4630      	mov	r0, r6
 80103c6:	e9c4 5520 	strd	r5, r5, [r4, #128]	; 0x80
 80103ca:	f884 5098 	strb.w	r5, [r4, #152]	; 0x98
 80103ce:	e9c4 5527 	strd	r5, r5, [r4, #156]	; 0x9c
 80103d2:	e9c4 5529 	strd	r5, r5, [r4, #164]	; 0xa4
 80103d6:	e9c4 552b 	strd	r5, r5, [r4, #172]	; 0xac
 80103da:	f7f2 f823 	bl	8002424 <_ZN8touchgfx8Drawable4setXEs>
 80103de:	4629      	mov	r1, r5
 80103e0:	4630      	mov	r0, r6
 80103e2:	f7f2 f821 	bl	8002428 <_ZN8touchgfx8Drawable4setYEs>
 80103e6:	4631      	mov	r1, r6
 80103e8:	4620      	mov	r0, r4
 80103ea:	f000 f819 	bl	8010420 <_ZN8touchgfx9Container3addERNS_8DrawableE>
 80103ee:	4620      	mov	r0, r4
 80103f0:	4639      	mov	r1, r7
 80103f2:	f000 f815 	bl	8010420 <_ZN8touchgfx9Container3addERNS_8DrawableE>
 80103f6:	4620      	mov	r0, r4
 80103f8:	b003      	add	sp, #12
 80103fa:	bdf0      	pop	{r4, r5, r6, r7, pc}
 80103fc:	0802ee88 	.word	0x0802ee88
 8010400:	0802f690 	.word	0x0802f690
 8010404:	0802ef5c 	.word	0x0802ef5c
 8010408:	08018317 	.word	0x08018317

0801040c <_ZN8touchgfx9Container8containsERKNS_8DrawableE>:
 801040c:	6a83      	ldr	r3, [r0, #40]	; 0x28
 801040e:	2000      	movs	r0, #0
 8010410:	b12b      	cbz	r3, 801041e <_ZN8touchgfx9Container8containsERKNS_8DrawableE+0x12>
 8010412:	b920      	cbnz	r0, 801041e <_ZN8touchgfx9Container8containsERKNS_8DrawableE+0x12>
 8010414:	1a5a      	subs	r2, r3, r1
 8010416:	4250      	negs	r0, r2
 8010418:	4150      	adcs	r0, r2
 801041a:	699b      	ldr	r3, [r3, #24]
 801041c:	e7f8      	b.n	8010410 <_ZN8touchgfx9Container8containsERKNS_8DrawableE+0x4>
 801041e:	4770      	bx	lr

08010420 <_ZN8touchgfx9Container3addERNS_8DrawableE>:
 8010420:	2300      	movs	r3, #0
 8010422:	6148      	str	r0, [r1, #20]
 8010424:	618b      	str	r3, [r1, #24]
 8010426:	6a83      	ldr	r3, [r0, #40]	; 0x28
 8010428:	b913      	cbnz	r3, 8010430 <_ZN8touchgfx9Container3addERNS_8DrawableE+0x10>
 801042a:	6281      	str	r1, [r0, #40]	; 0x28
 801042c:	4770      	bx	lr
 801042e:	4613      	mov	r3, r2
 8010430:	699a      	ldr	r2, [r3, #24]
 8010432:	2a00      	cmp	r2, #0
 8010434:	d1fb      	bne.n	801042e <_ZN8touchgfx9Container3addERNS_8DrawableE+0xe>
 8010436:	6199      	str	r1, [r3, #24]
 8010438:	4770      	bx	lr

0801043a <_ZN8touchgfx9Container9removeAllEv>:
 801043a:	2200      	movs	r2, #0
 801043c:	6a83      	ldr	r3, [r0, #40]	; 0x28
 801043e:	b123      	cbz	r3, 801044a <_ZN8touchgfx9Container9removeAllEv+0x10>
 8010440:	6999      	ldr	r1, [r3, #24]
 8010442:	6281      	str	r1, [r0, #40]	; 0x28
 8010444:	e9c3 2205 	strd	r2, r2, [r3, #20]
 8010448:	e7f8      	b.n	801043c <_ZN8touchgfx9Container9removeAllEv+0x2>
 801044a:	4770      	bx	lr

0801044c <_ZN8touchgfx9Container6unlinkEv>:
 801044c:	2300      	movs	r3, #0
 801044e:	6283      	str	r3, [r0, #40]	; 0x28
 8010450:	4770      	bx	lr

08010452 <_ZNK8touchgfx9Container12getSolidRectEv>:
 8010452:	2200      	movs	r2, #0
 8010454:	8002      	strh	r2, [r0, #0]
 8010456:	8042      	strh	r2, [r0, #2]
 8010458:	8082      	strh	r2, [r0, #4]
 801045a:	80c2      	strh	r2, [r0, #6]
 801045c:	4770      	bx	lr

0801045e <_ZN8touchgfx9Container20moveChildrenRelativeEss>:
 801045e:	b570      	push	{r4, r5, r6, lr}
 8010460:	6a84      	ldr	r4, [r0, #40]	; 0x28
 8010462:	460d      	mov	r5, r1
 8010464:	4616      	mov	r6, r2
 8010466:	b13c      	cbz	r4, 8010478 <_ZN8touchgfx9Container20moveChildrenRelativeEss+0x1a>
 8010468:	6823      	ldr	r3, [r4, #0]
 801046a:	4620      	mov	r0, r4
 801046c:	6d5b      	ldr	r3, [r3, #84]	; 0x54
 801046e:	4632      	mov	r2, r6
 8010470:	4629      	mov	r1, r5
 8010472:	4798      	blx	r3
 8010474:	69a4      	ldr	r4, [r4, #24]
 8010476:	e7f6      	b.n	8010466 <_ZN8touchgfx9Container20moveChildrenRelativeEss+0x8>
 8010478:	bd70      	pop	{r4, r5, r6, pc}

0801047a <_ZN8touchgfx9Container12forEachChildEPNS_15GenericCallbackIRNS_8DrawableEvvEE>:
 801047a:	b538      	push	{r3, r4, r5, lr}
 801047c:	6a84      	ldr	r4, [r0, #40]	; 0x28
 801047e:	460d      	mov	r5, r1
 8010480:	b134      	cbz	r4, 8010490 <_ZN8touchgfx9Container12forEachChildEPNS_15GenericCallbackIRNS_8DrawableEvvEE+0x16>
 8010482:	682b      	ldr	r3, [r5, #0]
 8010484:	4621      	mov	r1, r4
 8010486:	689b      	ldr	r3, [r3, #8]
 8010488:	4628      	mov	r0, r5
 801048a:	4798      	blx	r3
 801048c:	69a4      	ldr	r4, [r4, #24]
 801048e:	e7f7      	b.n	8010480 <_ZN8touchgfx9Container12forEachChildEPNS_15GenericCallbackIRNS_8DrawableEvvEE+0x6>
 8010490:	bd38      	pop	{r3, r4, r5, pc}

08010492 <_ZN8touchgfx9ContainerD1Ev>:
 8010492:	4770      	bx	lr

08010494 <_ZN8touchgfx9ContainerD0Ev>:
 8010494:	b510      	push	{r4, lr}
 8010496:	212c      	movs	r1, #44	; 0x2c
 8010498:	4604      	mov	r4, r0
 801049a:	f01a f94e 	bl	802a73a <_ZdlPvj>
 801049e:	4620      	mov	r0, r4
 80104a0:	bd10      	pop	{r4, pc}

080104a2 <_ZN8touchgfx9Container6removeERNS_8DrawableE>:
 80104a2:	6a83      	ldr	r3, [r0, #40]	; 0x28
 80104a4:	b19b      	cbz	r3, 80104ce <_ZN8touchgfx9Container6removeERNS_8DrawableE+0x2c>
 80104a6:	428b      	cmp	r3, r1
 80104a8:	d109      	bne.n	80104be <_ZN8touchgfx9Container6removeERNS_8DrawableE+0x1c>
 80104aa:	699a      	ldr	r2, [r3, #24]
 80104ac:	2100      	movs	r1, #0
 80104ae:	6159      	str	r1, [r3, #20]
 80104b0:	6282      	str	r2, [r0, #40]	; 0x28
 80104b2:	b902      	cbnz	r2, 80104b6 <_ZN8touchgfx9Container6removeERNS_8DrawableE+0x14>
 80104b4:	4770      	bx	lr
 80104b6:	6199      	str	r1, [r3, #24]
 80104b8:	4770      	bx	lr
 80104ba:	4613      	mov	r3, r2
 80104bc:	b13a      	cbz	r2, 80104ce <_ZN8touchgfx9Container6removeERNS_8DrawableE+0x2c>
 80104be:	699a      	ldr	r2, [r3, #24]
 80104c0:	428a      	cmp	r2, r1
 80104c2:	d1fa      	bne.n	80104ba <_ZN8touchgfx9Container6removeERNS_8DrawableE+0x18>
 80104c4:	698a      	ldr	r2, [r1, #24]
 80104c6:	619a      	str	r2, [r3, #24]
 80104c8:	2300      	movs	r3, #0
 80104ca:	e9c1 3305 	strd	r3, r3, [r1, #20]
 80104ce:	4770      	bx	lr

080104d0 <_ZN8touchgfx9Container6insertEPNS_8DrawableERS1_>:
 80104d0:	b410      	push	{r4}
 80104d2:	6a83      	ldr	r3, [r0, #40]	; 0x28
 80104d4:	4604      	mov	r4, r0
 80104d6:	b92b      	cbnz	r3, 80104e4 <_ZN8touchgfx9Container6insertEPNS_8DrawableERS1_+0x14>
 80104d8:	6803      	ldr	r3, [r0, #0]
 80104da:	f85d 4b04 	ldr.w	r4, [sp], #4
 80104de:	6e1b      	ldr	r3, [r3, #96]	; 0x60
 80104e0:	4611      	mov	r1, r2
 80104e2:	4718      	bx	r3
 80104e4:	b941      	cbnz	r1, 80104f8 <_ZN8touchgfx9Container6insertEPNS_8DrawableERS1_+0x28>
 80104e6:	6193      	str	r3, [r2, #24]
 80104e8:	6282      	str	r2, [r0, #40]	; 0x28
 80104ea:	6154      	str	r4, [r2, #20]
 80104ec:	f85d 4b04 	ldr.w	r4, [sp], #4
 80104f0:	4770      	bx	lr
 80104f2:	4603      	mov	r3, r0
 80104f4:	2800      	cmp	r0, #0
 80104f6:	d0f9      	beq.n	80104ec <_ZN8touchgfx9Container6insertEPNS_8DrawableERS1_+0x1c>
 80104f8:	4299      	cmp	r1, r3
 80104fa:	6998      	ldr	r0, [r3, #24]
 80104fc:	d1f9      	bne.n	80104f2 <_ZN8touchgfx9Container6insertEPNS_8DrawableERS1_+0x22>
 80104fe:	6190      	str	r0, [r2, #24]
 8010500:	618a      	str	r2, [r1, #24]
 8010502:	e7f2      	b.n	80104ea <_ZN8touchgfx9Container6insertEPNS_8DrawableERS1_+0x1a>

08010504 <_ZN8touchgfx9Container12getLastChildEssPPNS_8DrawableE>:
 8010504:	e92d 41f0 	stmdb	sp!, {r4, r5, r6, r7, r8, lr}
 8010508:	461f      	mov	r7, r3
 801050a:	f890 3024 	ldrb.w	r3, [r0, #36]	; 0x24
 801050e:	460d      	mov	r5, r1
 8010510:	4616      	mov	r6, r2
 8010512:	b103      	cbz	r3, 8010516 <_ZN8touchgfx9Container12getLastChildEssPPNS_8DrawableE+0x12>
 8010514:	6038      	str	r0, [r7, #0]
 8010516:	6a84      	ldr	r4, [r0, #40]	; 0x28
 8010518:	b314      	cbz	r4, 8010560 <_ZN8touchgfx9Container12getLastChildEssPPNS_8DrawableE+0x5c>
 801051a:	f894 3025 	ldrb.w	r3, [r4, #37]	; 0x25
 801051e:	b1eb      	cbz	r3, 801055c <_ZN8touchgfx9Container12getLastChildEssPPNS_8DrawableE+0x58>
 8010520:	f9b4 1004 	ldrsh.w	r1, [r4, #4]
 8010524:	428d      	cmp	r5, r1
 8010526:	db19      	blt.n	801055c <_ZN8touchgfx9Container12getLastChildEssPPNS_8DrawableE+0x58>
 8010528:	8923      	ldrh	r3, [r4, #8]
 801052a:	b289      	uxth	r1, r1
 801052c:	440b      	add	r3, r1
 801052e:	b21b      	sxth	r3, r3
 8010530:	429d      	cmp	r5, r3
 8010532:	da13      	bge.n	801055c <_ZN8touchgfx9Container12getLastChildEssPPNS_8DrawableE+0x58>
 8010534:	f9b4 2006 	ldrsh.w	r2, [r4, #6]
 8010538:	4296      	cmp	r6, r2
 801053a:	db0f      	blt.n	801055c <_ZN8touchgfx9Container12getLastChildEssPPNS_8DrawableE+0x58>
 801053c:	8963      	ldrh	r3, [r4, #10]
 801053e:	b292      	uxth	r2, r2
 8010540:	4413      	add	r3, r2
 8010542:	b21b      	sxth	r3, r3
 8010544:	429e      	cmp	r6, r3
 8010546:	da09      	bge.n	801055c <_ZN8touchgfx9Container12getLastChildEssPPNS_8DrawableE+0x58>
 8010548:	6823      	ldr	r3, [r4, #0]
 801054a:	1ab2      	subs	r2, r6, r2
 801054c:	1a69      	subs	r1, r5, r1
 801054e:	f8d3 8024 	ldr.w	r8, [r3, #36]	; 0x24
 8010552:	b212      	sxth	r2, r2
 8010554:	463b      	mov	r3, r7
 8010556:	b209      	sxth	r1, r1
 8010558:	4620      	mov	r0, r4
 801055a:	47c0      	blx	r8
 801055c:	69a4      	ldr	r4, [r4, #24]
 801055e:	e7db      	b.n	8010518 <_ZN8touchgfx9Container12getLastChildEssPPNS_8DrawableE+0x14>
 8010560:	e8bd 81f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, pc}

08010564 <_ZN8touchgfx9Container16getLastChildNearEssPPNS_8DrawableEPsS4_>:
 8010564:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 8010568:	4c6e      	ldr	r4, [pc, #440]	; (8010724 <_ZN8touchgfx9Container16getLastChildNearEssPPNS_8DrawableEPsS4_+0x1c0>)
 801056a:	b0a1      	sub	sp, #132	; 0x84
 801056c:	6824      	ldr	r4, [r4, #0]
 801056e:	9d2a      	ldr	r5, [sp, #168]	; 0xa8
 8010570:	f894 9049 	ldrb.w	r9, [r4, #73]	; 0x49
 8010574:	9303      	str	r3, [sp, #12]
 8010576:	2400      	movs	r4, #0
 8010578:	802c      	strh	r4, [r5, #0]
 801057a:	9d2b      	ldr	r5, [sp, #172]	; 0xac
 801057c:	802c      	strh	r4, [r5, #0]
 801057e:	601c      	str	r4, [r3, #0]
 8010580:	4606      	mov	r6, r0
 8010582:	e9cd 1201 	strd	r1, r2, [sp, #4]
 8010586:	f7ff ffbd 	bl	8010504 <_ZN8touchgfx9Container12getLastChildEssPPNS_8DrawableE>
 801058a:	f1b9 0f03 	cmp.w	r9, #3
 801058e:	f340 80c2 	ble.w	8010716 <_ZN8touchgfx9Container16getLastChildNearEssPPNS_8DrawableEPsS4_+0x1b2>
 8010592:	4631      	mov	r1, r6
 8010594:	a80c      	add	r0, sp, #48	; 0x30
 8010596:	f007 f99f 	bl	80178d8 <_ZNK8touchgfx8Drawable15getAbsoluteRectEv>
 801059a:	f9bd 3030 	ldrsh.w	r3, [sp, #48]	; 0x30
 801059e:	9306      	str	r3, [sp, #24]
 80105a0:	f9bd 3032 	ldrsh.w	r3, [sp, #50]	; 0x32
 80105a4:	9307      	str	r3, [sp, #28]
 80105a6:	9b03      	ldr	r3, [sp, #12]
 80105a8:	f8d3 a000 	ldr.w	sl, [r3]
 80105ac:	f1ba 0f00 	cmp.w	sl, #0
 80105b0:	f000 80b4 	beq.w	801071c <_ZN8touchgfx9Container16getLastChildNearEssPPNS_8DrawableEPsS4_+0x1b8>
 80105b4:	4651      	mov	r1, sl
 80105b6:	a810      	add	r0, sp, #64	; 0x40
 80105b8:	f007 f98e 	bl	80178d8 <_ZNK8touchgfx8Drawable15getAbsoluteRectEv>
 80105bc:	9b01      	ldr	r3, [sp, #4]
 80105be:	9a06      	ldr	r2, [sp, #24]
 80105c0:	f9bd 1044 	ldrsh.w	r1, [sp, #68]	; 0x44
 80105c4:	189d      	adds	r5, r3, r2
 80105c6:	f9bd 3040 	ldrsh.w	r3, [sp, #64]	; 0x40
 80105ca:	9a07      	ldr	r2, [sp, #28]
 80105cc:	2002      	movs	r0, #2
 80105ce:	fb91 f1f0 	sdiv	r1, r1, r0
 80105d2:	4419      	add	r1, r3
 80105d4:	1a6d      	subs	r5, r5, r1
 80105d6:	9b02      	ldr	r3, [sp, #8]
 80105d8:	f9bd 1042 	ldrsh.w	r1, [sp, #66]	; 0x42
 80105dc:	4413      	add	r3, r2
 80105de:	f9bd 2046 	ldrsh.w	r2, [sp, #70]	; 0x46
 80105e2:	fb92 f2f0 	sdiv	r2, r2, r0
 80105e6:	440a      	add	r2, r1
 80105e8:	1a9b      	subs	r3, r3, r2
 80105ea:	435b      	muls	r3, r3
 80105ec:	fb05 3505 	mla	r5, r5, r5, r3
 80105f0:	4f4d      	ldr	r7, [pc, #308]	; (8010728 <_ZN8touchgfx9Container16getLastChildNearEssPPNS_8DrawableEPsS4_+0x1c4>)
 80105f2:	cf0f      	ldmia	r7!, {r0, r1, r2, r3}
 80105f4:	ac10      	add	r4, sp, #64	; 0x40
 80105f6:	c40f      	stmia	r4!, {r0, r1, r2, r3}
 80105f8:	cf0f      	ldmia	r7!, {r0, r1, r2, r3}
 80105fa:	c40f      	stmia	r4!, {r0, r1, r2, r3}
 80105fc:	cf0f      	ldmia	r7!, {r0, r1, r2, r3}
 80105fe:	c40f      	stmia	r4!, {r0, r1, r2, r3}
 8010600:	e897 000f 	ldmia.w	r7, {r0, r1, r2, r3}
 8010604:	f1b9 0f0c 	cmp.w	r9, #12
 8010608:	e884 000f 	stmia.w	r4, {r0, r1, r2, r3}
 801060c:	f04f 0303 	mov.w	r3, #3
 8010610:	bfc8      	it	gt
 8010612:	4698      	movgt	r8, r3
 8010614:	f8cd 9000 	str.w	r9, [sp]
 8010618:	f04f 0400 	mov.w	r4, #0
 801061c:	bfdc      	itt	le
 801061e:	f109 32ff 	addle.w	r2, r9, #4294967295
 8010622:	fb92 f8f3 	sdivle	r8, r2, r3
 8010626:	1c63      	adds	r3, r4, #1
 8010628:	aa10      	add	r2, sp, #64	; 0x40
 801062a:	f004 0401 	and.w	r4, r4, #1
 801062e:	9308      	str	r3, [sp, #32]
 8010630:	eb02 1444 	add.w	r4, r2, r4, lsl #5
 8010634:	9b00      	ldr	r3, [sp, #0]
 8010636:	fb93 f3f8 	sdiv	r3, r3, r8
 801063a:	b29b      	uxth	r3, r3
 801063c:	3404      	adds	r4, #4
 801063e:	f04f 0b00 	mov.w	fp, #0
 8010642:	9304      	str	r3, [sp, #16]
 8010644:	9a04      	ldr	r2, [sp, #16]
 8010646:	f854 3c04 	ldr.w	r3, [r4, #-4]
 801064a:	fb13 f302 	smulbb	r3, r3, r2
 801064e:	9a01      	ldr	r2, [sp, #4]
 8010650:	b29b      	uxth	r3, r3
 8010652:	1899      	adds	r1, r3, r2
 8010654:	9305      	str	r3, [sp, #20]
 8010656:	f9b6 3004 	ldrsh.w	r3, [r6, #4]
 801065a:	b209      	sxth	r1, r1
 801065c:	4299      	cmp	r1, r3
 801065e:	db4d      	blt.n	80106fc <_ZN8touchgfx9Container16getLastChildNearEssPPNS_8DrawableEPsS4_+0x198>
 8010660:	8932      	ldrh	r2, [r6, #8]
 8010662:	4413      	add	r3, r2
 8010664:	b21b      	sxth	r3, r3
 8010666:	4299      	cmp	r1, r3
 8010668:	da48      	bge.n	80106fc <_ZN8touchgfx9Container16getLastChildNearEssPPNS_8DrawableEPsS4_+0x198>
 801066a:	9b04      	ldr	r3, [sp, #16]
 801066c:	6827      	ldr	r7, [r4, #0]
 801066e:	fb17 f703 	smulbb	r7, r7, r3
 8010672:	9b02      	ldr	r3, [sp, #8]
 8010674:	b2bf      	uxth	r7, r7
 8010676:	18fa      	adds	r2, r7, r3
 8010678:	f9b6 3006 	ldrsh.w	r3, [r6, #6]
 801067c:	b212      	sxth	r2, r2
 801067e:	429a      	cmp	r2, r3
 8010680:	db3c      	blt.n	80106fc <_ZN8touchgfx9Container16getLastChildNearEssPPNS_8DrawableEPsS4_+0x198>
 8010682:	8970      	ldrh	r0, [r6, #10]
 8010684:	4403      	add	r3, r0
 8010686:	b21b      	sxth	r3, r3
 8010688:	429a      	cmp	r2, r3
 801068a:	da37      	bge.n	80106fc <_ZN8touchgfx9Container16getLastChildNearEssPPNS_8DrawableEPsS4_+0x198>
 801068c:	2300      	movs	r3, #0
 801068e:	930b      	str	r3, [sp, #44]	; 0x2c
 8010690:	4630      	mov	r0, r6
 8010692:	ab0b      	add	r3, sp, #44	; 0x2c
 8010694:	f7ff ff36 	bl	8010504 <_ZN8touchgfx9Container12getLastChildEssPPNS_8DrawableE>
 8010698:	9a0b      	ldr	r2, [sp, #44]	; 0x2c
 801069a:	b37a      	cbz	r2, 80106fc <_ZN8touchgfx9Container16getLastChildNearEssPPNS_8DrawableEPsS4_+0x198>
 801069c:	4552      	cmp	r2, sl
 801069e:	d02d      	beq.n	80106fc <_ZN8touchgfx9Container16getLastChildNearEssPPNS_8DrawableEPsS4_+0x198>
 80106a0:	4611      	mov	r1, r2
 80106a2:	a80e      	add	r0, sp, #56	; 0x38
 80106a4:	9209      	str	r2, [sp, #36]	; 0x24
 80106a6:	f007 f917 	bl	80178d8 <_ZNK8touchgfx8Drawable15getAbsoluteRectEv>
 80106aa:	9a06      	ldr	r2, [sp, #24]
 80106ac:	f9bd 0038 	ldrsh.w	r0, [sp, #56]	; 0x38
 80106b0:	9b01      	ldr	r3, [sp, #4]
 80106b2:	f9bd 103c 	ldrsh.w	r1, [sp, #60]	; 0x3c
 80106b6:	f9bd c03e 	ldrsh.w	ip, [sp, #62]	; 0x3e
 80106ba:	4413      	add	r3, r2
 80106bc:	f04f 0e02 	mov.w	lr, #2
 80106c0:	fb91 f1fe 	sdiv	r1, r1, lr
 80106c4:	4401      	add	r1, r0
 80106c6:	1a58      	subs	r0, r3, r1
 80106c8:	9a07      	ldr	r2, [sp, #28]
 80106ca:	9b02      	ldr	r3, [sp, #8]
 80106cc:	f9bd 103a 	ldrsh.w	r1, [sp, #58]	; 0x3a
 80106d0:	fb9c fcfe 	sdiv	ip, ip, lr
 80106d4:	4413      	add	r3, r2
 80106d6:	448c      	add	ip, r1
 80106d8:	eba3 030c 	sub.w	r3, r3, ip
 80106dc:	435b      	muls	r3, r3
 80106de:	fb00 3300 	mla	r3, r0, r0, r3
 80106e2:	42ab      	cmp	r3, r5
 80106e4:	9a09      	ldr	r2, [sp, #36]	; 0x24
 80106e6:	d208      	bcs.n	80106fa <_ZN8touchgfx9Container16getLastChildNearEssPPNS_8DrawableEPsS4_+0x196>
 80106e8:	9803      	ldr	r0, [sp, #12]
 80106ea:	990b      	ldr	r1, [sp, #44]	; 0x2c
 80106ec:	6001      	str	r1, [r0, #0]
 80106ee:	992a      	ldr	r1, [sp, #168]	; 0xa8
 80106f0:	9805      	ldr	r0, [sp, #20]
 80106f2:	8008      	strh	r0, [r1, #0]
 80106f4:	992b      	ldr	r1, [sp, #172]	; 0xac
 80106f6:	461d      	mov	r5, r3
 80106f8:	800f      	strh	r7, [r1, #0]
 80106fa:	4692      	mov	sl, r2
 80106fc:	f10b 0b01 	add.w	fp, fp, #1
 8010700:	f1bb 0f04 	cmp.w	fp, #4
 8010704:	f104 0408 	add.w	r4, r4, #8
 8010708:	d19c      	bne.n	8010644 <_ZN8touchgfx9Container16getLastChildNearEssPPNS_8DrawableEPsS4_+0xe0>
 801070a:	9b00      	ldr	r3, [sp, #0]
 801070c:	9c08      	ldr	r4, [sp, #32]
 801070e:	444b      	add	r3, r9
 8010710:	4544      	cmp	r4, r8
 8010712:	9300      	str	r3, [sp, #0]
 8010714:	d187      	bne.n	8010626 <_ZN8touchgfx9Container16getLastChildNearEssPPNS_8DrawableEPsS4_+0xc2>
 8010716:	b021      	add	sp, #132	; 0x84
 8010718:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
 801071c:	f04f 35ff 	mov.w	r5, #4294967295
 8010720:	e766      	b.n	80105f0 <_ZN8touchgfx9Container16getLastChildNearEssPPNS_8DrawableEPsS4_+0x8c>
 8010722:	bf00      	nop
 8010724:	2001381c 	.word	0x2001381c
 8010728:	0802c478 	.word	0x0802c478

0801072c <_ZN8touchgfx4RectaNERKS0_>:
 801072c:	e92d 43f0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, lr}
 8010730:	f9b1 7000 	ldrsh.w	r7, [r1]
 8010734:	888c      	ldrh	r4, [r1, #4]
 8010736:	f9b0 9000 	ldrsh.w	r9, [r0]
 801073a:	443c      	add	r4, r7
 801073c:	b2a4      	uxth	r4, r4
 801073e:	fa0f f884 	sxth.w	r8, r4
 8010742:	45c1      	cmp	r9, r8
 8010744:	da2f      	bge.n	80107a6 <_ZN8touchgfx4RectaNERKS0_+0x7a>
 8010746:	8882      	ldrh	r2, [r0, #4]
 8010748:	444a      	add	r2, r9
 801074a:	b292      	uxth	r2, r2
 801074c:	fa0f fe82 	sxth.w	lr, r2
 8010750:	4577      	cmp	r7, lr
 8010752:	da28      	bge.n	80107a6 <_ZN8touchgfx4RectaNERKS0_+0x7a>
 8010754:	f9b1 5002 	ldrsh.w	r5, [r1, #2]
 8010758:	88cb      	ldrh	r3, [r1, #6]
 801075a:	f9b0 6002 	ldrsh.w	r6, [r0, #2]
 801075e:	442b      	add	r3, r5
 8010760:	b21b      	sxth	r3, r3
 8010762:	429e      	cmp	r6, r3
 8010764:	da1f      	bge.n	80107a6 <_ZN8touchgfx4RectaNERKS0_+0x7a>
 8010766:	88c3      	ldrh	r3, [r0, #6]
 8010768:	4433      	add	r3, r6
 801076a:	b29b      	uxth	r3, r3
 801076c:	fa0f fc83 	sxth.w	ip, r3
 8010770:	4565      	cmp	r5, ip
 8010772:	da18      	bge.n	80107a6 <_ZN8touchgfx4RectaNERKS0_+0x7a>
 8010774:	454f      	cmp	r7, r9
 8010776:	bfb8      	it	lt
 8010778:	464f      	movlt	r7, r9
 801077a:	42b5      	cmp	r5, r6
 801077c:	bfb8      	it	lt
 801077e:	4635      	movlt	r5, r6
 8010780:	45f0      	cmp	r8, lr
 8010782:	bfd8      	it	le
 8010784:	4622      	movle	r2, r4
 8010786:	1bd2      	subs	r2, r2, r7
 8010788:	8082      	strh	r2, [r0, #4]
 801078a:	884a      	ldrh	r2, [r1, #2]
 801078c:	88c9      	ldrh	r1, [r1, #6]
 801078e:	8007      	strh	r7, [r0, #0]
 8010790:	440a      	add	r2, r1
 8010792:	b292      	uxth	r2, r2
 8010794:	b211      	sxth	r1, r2
 8010796:	458c      	cmp	ip, r1
 8010798:	bfa8      	it	ge
 801079a:	4613      	movge	r3, r2
 801079c:	1b5b      	subs	r3, r3, r5
 801079e:	80c3      	strh	r3, [r0, #6]
 80107a0:	8045      	strh	r5, [r0, #2]
 80107a2:	e8bd 83f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, pc}
 80107a6:	2300      	movs	r3, #0
 80107a8:	8003      	strh	r3, [r0, #0]
 80107aa:	8043      	strh	r3, [r0, #2]
 80107ac:	8083      	strh	r3, [r0, #4]
 80107ae:	80c3      	strh	r3, [r0, #6]
 80107b0:	e7f7      	b.n	80107a2 <_ZN8touchgfx4RectaNERKS0_+0x76>

080107b2 <_ZNK8touchgfx4Rect7isEmptyEv>:
 80107b2:	f9b0 3004 	ldrsh.w	r3, [r0, #4]
 80107b6:	2b00      	cmp	r3, #0
 80107b8:	dd06      	ble.n	80107c8 <_ZNK8touchgfx4Rect7isEmptyEv+0x16>
 80107ba:	f9b0 0006 	ldrsh.w	r0, [r0, #6]
 80107be:	2800      	cmp	r0, #0
 80107c0:	bfcc      	ite	gt
 80107c2:	2000      	movgt	r0, #0
 80107c4:	2001      	movle	r0, #1
 80107c6:	4770      	bx	lr
 80107c8:	2001      	movs	r0, #1
 80107ca:	4770      	bx	lr

080107cc <_ZNK8touchgfx9Container16getContainedAreaEv>:
 80107cc:	e92d 41f0 	stmdb	sp!, {r4, r5, r6, r7, r8, lr}
 80107d0:	2300      	movs	r3, #0
 80107d2:	6a8d      	ldr	r5, [r1, #40]	; 0x28
 80107d4:	8003      	strh	r3, [r0, #0]
 80107d6:	4604      	mov	r4, r0
 80107d8:	8043      	strh	r3, [r0, #2]
 80107da:	8083      	strh	r3, [r0, #4]
 80107dc:	80c3      	strh	r3, [r0, #6]
 80107de:	2d00      	cmp	r5, #0
 80107e0:	d040      	beq.n	8010864 <_ZNK8touchgfx9Container16getContainedAreaEv+0x98>
 80107e2:	1d28      	adds	r0, r5, #4
 80107e4:	f7ff ffe5 	bl	80107b2 <_ZNK8touchgfx4Rect7isEmptyEv>
 80107e8:	b988      	cbnz	r0, 801080e <_ZNK8touchgfx9Container16getContainedAreaEv+0x42>
 80107ea:	4620      	mov	r0, r4
 80107ec:	f7ff ffe1 	bl	80107b2 <_ZNK8touchgfx4Rect7isEmptyEv>
 80107f0:	f9b5 2004 	ldrsh.w	r2, [r5, #4]
 80107f4:	f9b5 3006 	ldrsh.w	r3, [r5, #6]
 80107f8:	f9b5 e008 	ldrsh.w	lr, [r5, #8]
 80107fc:	f9b5 c00a 	ldrsh.w	ip, [r5, #10]
 8010800:	b138      	cbz	r0, 8010812 <_ZNK8touchgfx9Container16getContainedAreaEv+0x46>
 8010802:	8022      	strh	r2, [r4, #0]
 8010804:	8063      	strh	r3, [r4, #2]
 8010806:	f8a4 e004 	strh.w	lr, [r4, #4]
 801080a:	f8a4 c006 	strh.w	ip, [r4, #6]
 801080e:	69ad      	ldr	r5, [r5, #24]
 8010810:	e7e5      	b.n	80107de <_ZNK8touchgfx9Container16getContainedAreaEv+0x12>
 8010812:	f9b4 0000 	ldrsh.w	r0, [r4]
 8010816:	f9b4 1002 	ldrsh.w	r1, [r4, #2]
 801081a:	f8b4 8004 	ldrh.w	r8, [r4, #4]
 801081e:	4290      	cmp	r0, r2
 8010820:	4607      	mov	r7, r0
 8010822:	bfa8      	it	ge
 8010824:	4617      	movge	r7, r2
 8010826:	4472      	add	r2, lr
 8010828:	f8b4 e006 	ldrh.w	lr, [r4, #6]
 801082c:	8027      	strh	r7, [r4, #0]
 801082e:	4299      	cmp	r1, r3
 8010830:	460e      	mov	r6, r1
 8010832:	4440      	add	r0, r8
 8010834:	bfa8      	it	ge
 8010836:	461e      	movge	r6, r3
 8010838:	4471      	add	r1, lr
 801083a:	4463      	add	r3, ip
 801083c:	b200      	sxth	r0, r0
 801083e:	b212      	sxth	r2, r2
 8010840:	b209      	sxth	r1, r1
 8010842:	b21b      	sxth	r3, r3
 8010844:	4290      	cmp	r0, r2
 8010846:	bfac      	ite	ge
 8010848:	ebc7 0200 	rsbge	r2, r7, r0
 801084c:	ebc7 0202 	rsblt	r2, r7, r2
 8010850:	4299      	cmp	r1, r3
 8010852:	bfac      	ite	ge
 8010854:	ebc6 0301 	rsbge	r3, r6, r1
 8010858:	ebc6 0303 	rsblt	r3, r6, r3
 801085c:	8066      	strh	r6, [r4, #2]
 801085e:	80a2      	strh	r2, [r4, #4]
 8010860:	80e3      	strh	r3, [r4, #6]
 8010862:	e7d4      	b.n	801080e <_ZNK8touchgfx9Container16getContainedAreaEv+0x42>
 8010864:	4620      	mov	r0, r4
 8010866:	e8bd 81f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, pc}

0801086a <_ZNK8touchgfx9Container4drawERKNS_4RectE>:
 801086a:	e92d 41f3 	stmdb	sp!, {r0, r1, r4, r5, r6, r7, r8, lr}
 801086e:	f890 3025 	ldrb.w	r3, [r0, #37]	; 0x25
 8010872:	b383      	cbz	r3, 80108d6 <_ZNK8touchgfx9Container4drawERKNS_4RectE+0x6c>
 8010874:	6a84      	ldr	r4, [r0, #40]	; 0x28
 8010876:	b374      	cbz	r4, 80108d6 <_ZNK8touchgfx9Container4drawERKNS_4RectE+0x6c>
 8010878:	f9b1 5000 	ldrsh.w	r5, [r1]
 801087c:	f9b1 6002 	ldrsh.w	r6, [r1, #2]
 8010880:	f9b1 7004 	ldrsh.w	r7, [r1, #4]
 8010884:	f9b1 8006 	ldrsh.w	r8, [r1, #6]
 8010888:	f894 3025 	ldrb.w	r3, [r4, #37]	; 0x25
 801088c:	b303      	cbz	r3, 80108d0 <_ZNK8touchgfx9Container4drawERKNS_4RectE+0x66>
 801088e:	4668      	mov	r0, sp
 8010890:	1d21      	adds	r1, r4, #4
 8010892:	f8ad 5000 	strh.w	r5, [sp]
 8010896:	f8ad 6002 	strh.w	r6, [sp, #2]
 801089a:	f8ad 7004 	strh.w	r7, [sp, #4]
 801089e:	f8ad 8006 	strh.w	r8, [sp, #6]
 80108a2:	f7ff ff43 	bl	801072c <_ZN8touchgfx4RectaNERKS0_>
 80108a6:	4668      	mov	r0, sp
 80108a8:	f7ff ff83 	bl	80107b2 <_ZNK8touchgfx4Rect7isEmptyEv>
 80108ac:	b980      	cbnz	r0, 80108d0 <_ZNK8touchgfx9Container4drawERKNS_4RectE+0x66>
 80108ae:	f8bd 3000 	ldrh.w	r3, [sp]
 80108b2:	88a2      	ldrh	r2, [r4, #4]
 80108b4:	1a9b      	subs	r3, r3, r2
 80108b6:	f8ad 3000 	strh.w	r3, [sp]
 80108ba:	88e2      	ldrh	r2, [r4, #6]
 80108bc:	f8bd 3002 	ldrh.w	r3, [sp, #2]
 80108c0:	1a9b      	subs	r3, r3, r2
 80108c2:	f8ad 3002 	strh.w	r3, [sp, #2]
 80108c6:	6823      	ldr	r3, [r4, #0]
 80108c8:	4669      	mov	r1, sp
 80108ca:	689b      	ldr	r3, [r3, #8]
 80108cc:	4620      	mov	r0, r4
 80108ce:	4798      	blx	r3
 80108d0:	69a4      	ldr	r4, [r4, #24]
 80108d2:	2c00      	cmp	r4, #0
 80108d4:	d1d8      	bne.n	8010888 <_ZNK8touchgfx9Container4drawERKNS_4RectE+0x1e>
 80108d6:	b002      	add	sp, #8
 80108d8:	e8bd 81f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, pc}

080108dc <_ZN8touchgfx9Container14setupDrawChainERKNS_4RectEPPNS_8DrawableE>:
 80108dc:	b573      	push	{r0, r1, r4, r5, r6, lr}
 80108de:	f890 3025 	ldrb.w	r3, [r0, #37]	; 0x25
 80108e2:	460d      	mov	r5, r1
 80108e4:	4616      	mov	r6, r2
 80108e6:	b323      	cbz	r3, 8010932 <_ZN8touchgfx9Container14setupDrawChainERKNS_4RectEPPNS_8DrawableE+0x56>
 80108e8:	6a84      	ldr	r4, [r0, #40]	; 0x28
 80108ea:	b314      	cbz	r4, 8010932 <_ZN8touchgfx9Container14setupDrawChainERKNS_4RectEPPNS_8DrawableE+0x56>
 80108ec:	f894 3025 	ldrb.w	r3, [r4, #37]	; 0x25
 80108f0:	b1eb      	cbz	r3, 801092e <_ZN8touchgfx9Container14setupDrawChainERKNS_4RectEPPNS_8DrawableE+0x52>
 80108f2:	6828      	ldr	r0, [r5, #0]
 80108f4:	6869      	ldr	r1, [r5, #4]
 80108f6:	466b      	mov	r3, sp
 80108f8:	c303      	stmia	r3!, {r0, r1}
 80108fa:	4668      	mov	r0, sp
 80108fc:	1d21      	adds	r1, r4, #4
 80108fe:	f7ff ff15 	bl	801072c <_ZN8touchgfx4RectaNERKS0_>
 8010902:	4668      	mov	r0, sp
 8010904:	f7ff ff55 	bl	80107b2 <_ZNK8touchgfx4Rect7isEmptyEv>
 8010908:	b988      	cbnz	r0, 801092e <_ZN8touchgfx9Container14setupDrawChainERKNS_4RectEPPNS_8DrawableE+0x52>
 801090a:	f8bd 3000 	ldrh.w	r3, [sp]
 801090e:	88a2      	ldrh	r2, [r4, #4]
 8010910:	1a9b      	subs	r3, r3, r2
 8010912:	f8ad 3000 	strh.w	r3, [sp]
 8010916:	88e2      	ldrh	r2, [r4, #6]
 8010918:	f8bd 3002 	ldrh.w	r3, [sp, #2]
 801091c:	1a9b      	subs	r3, r3, r2
 801091e:	f8ad 3002 	strh.w	r3, [sp, #2]
 8010922:	6823      	ldr	r3, [r4, #0]
 8010924:	4632      	mov	r2, r6
 8010926:	6ddb      	ldr	r3, [r3, #92]	; 0x5c
 8010928:	4669      	mov	r1, sp
 801092a:	4620      	mov	r0, r4
 801092c:	4798      	blx	r3
 801092e:	69a4      	ldr	r4, [r4, #24]
 8010930:	e7db      	b.n	80108ea <_ZN8touchgfx9Container14setupDrawChainERKNS_4RectEPPNS_8DrawableE+0xe>
 8010932:	b002      	add	sp, #8
 8010934:	bd70      	pop	{r4, r5, r6, pc}

08010936 <_ZN8touchgfx14SwipeContainer14setSwipeCutoffEt>:
 8010936:	85c1      	strh	r1, [r0, #46]	; 0x2e
 8010938:	4770      	bx	lr
	...

0801093c <_ZN8touchgfx14SwipeContainerD1Ev>:
 801093c:	4b05      	ldr	r3, [pc, #20]	; (8010954 <_ZN8touchgfx14SwipeContainerD1Ev+0x18>)
 801093e:	b510      	push	{r4, lr}
 8010940:	6003      	str	r3, [r0, #0]
 8010942:	4604      	mov	r4, r0
 8010944:	f005 fe44 	bl	80165d0 <_ZN8touchgfx11Application11getInstanceEv>
 8010948:	4621      	mov	r1, r4
 801094a:	3004      	adds	r0, #4
 801094c:	f005 fe8d 	bl	801666a <_ZN8touchgfx11Application12TimerWidgets6removeEPKNS_8DrawableE>
 8010950:	4620      	mov	r0, r4
 8010952:	bd10      	pop	{r4, pc}
 8010954:	0802efec 	.word	0x0802efec

08010958 <_ZN8touchgfx14SwipeContainerD0Ev>:
 8010958:	b510      	push	{r4, lr}
 801095a:	4604      	mov	r4, r0
 801095c:	f7ff ffee 	bl	801093c <_ZN8touchgfx14SwipeContainerD1Ev>
 8010960:	4620      	mov	r0, r4
 8010962:	21f4      	movs	r1, #244	; 0xf4
 8010964:	f019 fee9 	bl	802a73a <_ZdlPvj>
 8010968:	4620      	mov	r0, r4
 801096a:	bd10      	pop	{r4, pc}

0801096c <_ZN8touchgfx14SwipeContainer16handleClickEventERKNS_10ClickEventE>:
 801096c:	f890 302c 	ldrb.w	r3, [r0, #44]	; 0x2c
 8010970:	2b04      	cmp	r3, #4
 8010972:	d117      	bne.n	80109a4 <_ZN8touchgfx14SwipeContainer16handleClickEventERKNS_10ClickEventE+0x38>
 8010974:	790b      	ldrb	r3, [r1, #4]
 8010976:	2b01      	cmp	r3, #1
 8010978:	d114      	bne.n	80109a4 <_ZN8touchgfx14SwipeContainer16handleClickEventERKNS_10ClickEventE+0x38>
 801097a:	f9b0 3030 	ldrsh.w	r3, [r0, #48]	; 0x30
 801097e:	8f82      	ldrh	r2, [r0, #60]	; 0x3c
 8010980:	8643      	strh	r3, [r0, #50]	; 0x32
 8010982:	2b00      	cmp	r3, #0
 8010984:	8682      	strh	r2, [r0, #52]	; 0x34
 8010986:	f890 10f1 	ldrb.w	r1, [r0, #241]	; 0xf1
 801098a:	da0e      	bge.n	80109aa <_ZN8touchgfx14SwipeContainer16handleClickEventERKNS_10ClickEventE+0x3e>
 801098c:	f890 20f0 	ldrb.w	r2, [r0, #240]	; 0xf0
 8010990:	3a01      	subs	r2, #1
 8010992:	4291      	cmp	r1, r2
 8010994:	d007      	beq.n	80109a6 <_ZN8touchgfx14SwipeContainer16handleClickEventERKNS_10ClickEventE+0x3a>
 8010996:	8dc2      	ldrh	r2, [r0, #46]	; 0x2e
 8010998:	4252      	negs	r2, r2
 801099a:	4293      	cmp	r3, r2
 801099c:	dc03      	bgt.n	80109a6 <_ZN8touchgfx14SwipeContainer16handleClickEventERKNS_10ClickEventE+0x3a>
 801099e:	2302      	movs	r3, #2
 80109a0:	f880 302c 	strb.w	r3, [r0, #44]	; 0x2c
 80109a4:	4770      	bx	lr
 80109a6:	2300      	movs	r3, #0
 80109a8:	e7fa      	b.n	80109a0 <_ZN8touchgfx14SwipeContainer16handleClickEventERKNS_10ClickEventE+0x34>
 80109aa:	d0fb      	beq.n	80109a4 <_ZN8touchgfx14SwipeContainer16handleClickEventERKNS_10ClickEventE+0x38>
 80109ac:	b111      	cbz	r1, 80109b4 <_ZN8touchgfx14SwipeContainer16handleClickEventERKNS_10ClickEventE+0x48>
 80109ae:	8dc2      	ldrh	r2, [r0, #46]	; 0x2e
 80109b0:	4293      	cmp	r3, r2
 80109b2:	da01      	bge.n	80109b8 <_ZN8touchgfx14SwipeContainer16handleClickEventERKNS_10ClickEventE+0x4c>
 80109b4:	2301      	movs	r3, #1
 80109b6:	e7f3      	b.n	80109a0 <_ZN8touchgfx14SwipeContainer16handleClickEventERKNS_10ClickEventE+0x34>
 80109b8:	2303      	movs	r3, #3
 80109ba:	e7f1      	b.n	80109a0 <_ZN8touchgfx14SwipeContainer16handleClickEventERKNS_10ClickEventE+0x34>

080109bc <_ZN8touchgfx14SwipeContainer18handleGestureEventERKNS_12GestureEventE>:
 80109bc:	f890 302c 	ldrb.w	r3, [r0, #44]	; 0x2c
 80109c0:	2b04      	cmp	r3, #4
 80109c2:	d113      	bne.n	80109ec <_ZN8touchgfx14SwipeContainer18handleGestureEventERKNS_12GestureEventE+0x30>
 80109c4:	790b      	ldrb	r3, [r1, #4]
 80109c6:	b98b      	cbnz	r3, 80109ec <_ZN8touchgfx14SwipeContainer18handleGestureEventERKNS_12GestureEventE+0x30>
 80109c8:	8e03      	ldrh	r3, [r0, #48]	; 0x30
 80109ca:	8643      	strh	r3, [r0, #50]	; 0x32
 80109cc:	8f83      	ldrh	r3, [r0, #60]	; 0x3c
 80109ce:	8683      	strh	r3, [r0, #52]	; 0x34
 80109d0:	f9b1 3006 	ldrsh.w	r3, [r1, #6]
 80109d4:	f890 20f1 	ldrb.w	r2, [r0, #241]	; 0xf1
 80109d8:	2b00      	cmp	r3, #0
 80109da:	da08      	bge.n	80109ee <_ZN8touchgfx14SwipeContainer18handleGestureEventERKNS_12GestureEventE+0x32>
 80109dc:	f890 30f0 	ldrb.w	r3, [r0, #240]	; 0xf0
 80109e0:	3b01      	subs	r3, #1
 80109e2:	429a      	cmp	r2, r3
 80109e4:	da02      	bge.n	80109ec <_ZN8touchgfx14SwipeContainer18handleGestureEventERKNS_12GestureEventE+0x30>
 80109e6:	2302      	movs	r3, #2
 80109e8:	f880 302c 	strb.w	r3, [r0, #44]	; 0x2c
 80109ec:	4770      	bx	lr
 80109ee:	d0fd      	beq.n	80109ec <_ZN8touchgfx14SwipeContainer18handleGestureEventERKNS_12GestureEventE+0x30>
 80109f0:	2a00      	cmp	r2, #0
 80109f2:	d0fb      	beq.n	80109ec <_ZN8touchgfx14SwipeContainer18handleGestureEventERKNS_12GestureEventE+0x30>
 80109f4:	2303      	movs	r3, #3
 80109f6:	e7f7      	b.n	80109e8 <_ZN8touchgfx14SwipeContainer18handleGestureEventERKNS_12GestureEventE+0x2c>

080109f8 <_ZN8touchgfx5ImageC1ERKNS_6BitmapE>:
 80109f8:	b538      	push	{r3, r4, r5, lr}
 80109fa:	2226      	movs	r2, #38	; 0x26
 80109fc:	4604      	mov	r4, r0
 80109fe:	460d      	mov	r5, r1
 8010a00:	2100      	movs	r1, #0
 8010a02:	f01a feb2 	bl	802b76a <memset>
 8010a06:	4620      	mov	r0, r4
 8010a08:	f7ff fc58 	bl	80102bc <_ZN8touchgfx8DrawableC1Ev>
 8010a0c:	4b06      	ldr	r3, [pc, #24]	; (8010a28 <_ZN8touchgfx5ImageC1ERKNS_6BitmapE+0x30>)
 8010a0e:	6023      	str	r3, [r4, #0]
 8010a10:	882b      	ldrh	r3, [r5, #0]
 8010a12:	84e3      	strh	r3, [r4, #38]	; 0x26
 8010a14:	23ff      	movs	r3, #255	; 0xff
 8010a16:	4620      	mov	r0, r4
 8010a18:	f884 3028 	strb.w	r3, [r4, #40]	; 0x28
 8010a1c:	4629      	mov	r1, r5
 8010a1e:	f003 f8d8 	bl	8013bd2 <_ZN8touchgfx5Image9setBitmapERKNS_6BitmapE>
 8010a22:	4620      	mov	r0, r4
 8010a24:	bd38      	pop	{r3, r4, r5, pc}
 8010a26:	bf00      	nop
 8010a28:	0802f690 	.word	0x0802f690

08010a2c <_ZN8touchgfx14SwipeContainer23setEndSwipeElasticWidthEt>:
 8010a2c:	86c1      	strh	r1, [r0, #54]	; 0x36
 8010a2e:	4770      	bx	lr

08010a30 <_ZN8touchgfx14SwipeContainer18setPageIndicatorXYEss>:
 8010a30:	b508      	push	{r3, lr}
 8010a32:	3068      	adds	r0, #104	; 0x68
 8010a34:	f7f1 ff78 	bl	8002928 <_ZN8touchgfx8Drawable5setXYEss>
 8010a38:	bd08      	pop	{r3, pc}

08010a3a <_ZN8touchgfx14SwipeContainer11adjustPagesEv>:
 8010a3a:	b508      	push	{r3, lr}
 8010a3c:	8e02      	ldrh	r2, [r0, #48]	; 0x30
 8010a3e:	f890 10f1 	ldrb.w	r1, [r0, #241]	; 0xf1
 8010a42:	f9b0 3008 	ldrsh.w	r3, [r0, #8]
 8010a46:	fb03 2111 	mls	r1, r3, r1, r2
 8010a4a:	b209      	sxth	r1, r1
 8010a4c:	2200      	movs	r2, #0
 8010a4e:	3038      	adds	r0, #56	; 0x38
 8010a50:	f7f1 fcf5 	bl	800243e <_ZN8touchgfx8Drawable6moveToEss>
 8010a54:	bd08      	pop	{r3, pc}

08010a56 <_ZN8touchgfx14SwipeContainer15handleDragEventERKNS_9DragEventE>:
 8010a56:	f890 302c 	ldrb.w	r3, [r0, #44]	; 0x2c
 8010a5a:	2b04      	cmp	r3, #4
 8010a5c:	d119      	bne.n	8010a92 <_ZN8touchgfx14SwipeContainer15handleDragEventERKNS_9DragEventE+0x3c>
 8010a5e:	88ca      	ldrh	r2, [r1, #6]
 8010a60:	8e03      	ldrh	r3, [r0, #48]	; 0x30
 8010a62:	1a9b      	subs	r3, r3, r2
 8010a64:	894a      	ldrh	r2, [r1, #10]
 8010a66:	f890 10f1 	ldrb.w	r1, [r0, #241]	; 0xf1
 8010a6a:	4413      	add	r3, r2
 8010a6c:	b21b      	sxth	r3, r3
 8010a6e:	8603      	strh	r3, [r0, #48]	; 0x30
 8010a70:	b921      	cbnz	r1, 8010a7c <_ZN8touchgfx14SwipeContainer15handleDragEventERKNS_9DragEventE+0x26>
 8010a72:	8ec2      	ldrh	r2, [r0, #54]	; 0x36
 8010a74:	4293      	cmp	r3, r2
 8010a76:	dd01      	ble.n	8010a7c <_ZN8touchgfx14SwipeContainer15handleDragEventERKNS_9DragEventE+0x26>
 8010a78:	8602      	strh	r2, [r0, #48]	; 0x30
 8010a7a:	e008      	b.n	8010a8e <_ZN8touchgfx14SwipeContainer15handleDragEventERKNS_9DragEventE+0x38>
 8010a7c:	f890 20f0 	ldrb.w	r2, [r0, #240]	; 0xf0
 8010a80:	3a01      	subs	r2, #1
 8010a82:	4291      	cmp	r1, r2
 8010a84:	d103      	bne.n	8010a8e <_ZN8touchgfx14SwipeContainer15handleDragEventERKNS_9DragEventE+0x38>
 8010a86:	8ec2      	ldrh	r2, [r0, #54]	; 0x36
 8010a88:	4252      	negs	r2, r2
 8010a8a:	4293      	cmp	r3, r2
 8010a8c:	dbf4      	blt.n	8010a78 <_ZN8touchgfx14SwipeContainer15handleDragEventERKNS_9DragEventE+0x22>
 8010a8e:	f7ff bfd4 	b.w	8010a3a <_ZN8touchgfx14SwipeContainer11adjustPagesEv>
 8010a92:	4770      	bx	lr

08010a94 <_ZN8touchgfx14SwipeContainer25animateSwipeCancelledLeftEv>:
 8010a94:	b538      	push	{r3, r4, r5, lr}
 8010a96:	f890 502d 	ldrb.w	r5, [r0, #45]	; 0x2d
 8010a9a:	2d0e      	cmp	r5, #14
 8010a9c:	4604      	mov	r4, r0
 8010a9e:	d813      	bhi.n	8010ac8 <_ZN8touchgfx14SwipeContainer25animateSwipeCancelledLeftEv+0x34>
 8010aa0:	8e42      	ldrh	r2, [r0, #50]	; 0x32
 8010aa2:	4252      	negs	r2, r2
 8010aa4:	230e      	movs	r3, #14
 8010aa6:	b212      	sxth	r2, r2
 8010aa8:	2100      	movs	r1, #0
 8010aaa:	4628      	mov	r0, r5
 8010aac:	f007 fbc2 	bl	8018234 <_ZN8touchgfx15EasingEquations11backEaseOutEtsst>
 8010ab0:	8e63      	ldrh	r3, [r4, #50]	; 0x32
 8010ab2:	4418      	add	r0, r3
 8010ab4:	8620      	strh	r0, [r4, #48]	; 0x30
 8010ab6:	4620      	mov	r0, r4
 8010ab8:	f7ff ffbf 	bl	8010a3a <_ZN8touchgfx14SwipeContainer11adjustPagesEv>
 8010abc:	f894 302d 	ldrb.w	r3, [r4, #45]	; 0x2d
 8010ac0:	3301      	adds	r3, #1
 8010ac2:	f884 302d 	strb.w	r3, [r4, #45]	; 0x2d
 8010ac6:	bd38      	pop	{r3, r4, r5, pc}
 8010ac8:	2304      	movs	r3, #4
 8010aca:	f880 302c 	strb.w	r3, [r0, #44]	; 0x2c
 8010ace:	2300      	movs	r3, #0
 8010ad0:	f880 302d 	strb.w	r3, [r0, #45]	; 0x2d
 8010ad4:	8603      	strh	r3, [r0, #48]	; 0x30
 8010ad6:	e7ef      	b.n	8010ab8 <_ZN8touchgfx14SwipeContainer25animateSwipeCancelledLeftEv+0x24>

08010ad8 <_ZN8touchgfx14SwipeContainer26animateSwipeCancelledRightEv>:
 8010ad8:	b538      	push	{r3, r4, r5, lr}
 8010ada:	f890 502d 	ldrb.w	r5, [r0, #45]	; 0x2d
 8010ade:	2d0e      	cmp	r5, #14
 8010ae0:	4604      	mov	r4, r0
 8010ae2:	d812      	bhi.n	8010b0a <_ZN8touchgfx14SwipeContainer26animateSwipeCancelledRightEv+0x32>
 8010ae4:	230e      	movs	r3, #14
 8010ae6:	f9b0 2032 	ldrsh.w	r2, [r0, #50]	; 0x32
 8010aea:	2100      	movs	r1, #0
 8010aec:	4628      	mov	r0, r5
 8010aee:	f007 fba1 	bl	8018234 <_ZN8touchgfx15EasingEquations11backEaseOutEtsst>
 8010af2:	8e63      	ldrh	r3, [r4, #50]	; 0x32
 8010af4:	1a18      	subs	r0, r3, r0
 8010af6:	8620      	strh	r0, [r4, #48]	; 0x30
 8010af8:	4620      	mov	r0, r4
 8010afa:	f7ff ff9e 	bl	8010a3a <_ZN8touchgfx14SwipeContainer11adjustPagesEv>
 8010afe:	f894 302d 	ldrb.w	r3, [r4, #45]	; 0x2d
 8010b02:	3301      	adds	r3, #1
 8010b04:	f884 302d 	strb.w	r3, [r4, #45]	; 0x2d
 8010b08:	bd38      	pop	{r3, r4, r5, pc}
 8010b0a:	2304      	movs	r3, #4
 8010b0c:	f880 302c 	strb.w	r3, [r0, #44]	; 0x2c
 8010b10:	2300      	movs	r3, #0
 8010b12:	f880 302d 	strb.w	r3, [r0, #45]	; 0x2d
 8010b16:	8603      	strh	r3, [r0, #48]	; 0x30
 8010b18:	e7ef      	b.n	8010afa <_ZN8touchgfx14SwipeContainer26animateSwipeCancelledRightEv+0x22>
	...

08010b1c <_ZN8touchgfx14SwipeContainer13PageIndicatorC1Ev>:
 8010b1c:	e92d 43f7 	stmdb	sp!, {r0, r1, r2, r4, r5, r6, r7, r8, r9, lr}
 8010b20:	4604      	mov	r4, r0
 8010b22:	4626      	mov	r6, r4
 8010b24:	af02      	add	r7, sp, #8
 8010b26:	f7ff fbc9 	bl	80102bc <_ZN8touchgfx8DrawableC1Ev>
 8010b2a:	2500      	movs	r5, #0
 8010b2c:	4b18      	ldr	r3, [pc, #96]	; (8010b90 <_ZN8touchgfx14SwipeContainer13PageIndicatorC1Ev+0x74>)
 8010b2e:	62a5      	str	r5, [r4, #40]	; 0x28
 8010b30:	f64f 79ff 	movw	r9, #65535	; 0xffff
 8010b34:	f846 3b2c 	str.w	r3, [r6], #44
 8010b38:	f827 9d04 	strh.w	r9, [r7, #-4]!
 8010b3c:	4630      	mov	r0, r6
 8010b3e:	4639      	mov	r1, r7
 8010b40:	f7ff ff5a 	bl	80109f8 <_ZN8touchgfx5ImageC1ERKNS_6BitmapE>
 8010b44:	f104 085c 	add.w	r8, r4, #92	; 0x5c
 8010b48:	4b12      	ldr	r3, [pc, #72]	; (8010b94 <_ZN8touchgfx14SwipeContainer13PageIndicatorC1Ev+0x78>)
 8010b4a:	62e3      	str	r3, [r4, #44]	; 0x2c
 8010b4c:	4639      	mov	r1, r7
 8010b4e:	f8a4 5056 	strh.w	r5, [r4, #86]	; 0x56
 8010b52:	f8a4 5058 	strh.w	r5, [r4, #88]	; 0x58
 8010b56:	4640      	mov	r0, r8
 8010b58:	f8ad 9004 	strh.w	r9, [sp, #4]
 8010b5c:	f7ff ff4c 	bl	80109f8 <_ZN8touchgfx5ImageC1ERKNS_6BitmapE>
 8010b60:	462a      	mov	r2, r5
 8010b62:	4629      	mov	r1, r5
 8010b64:	4630      	mov	r0, r6
 8010b66:	f8a4 5088 	strh.w	r5, [r4, #136]	; 0x88
 8010b6a:	f7f1 fedd 	bl	8002928 <_ZN8touchgfx8Drawable5setXYEss>
 8010b6e:	462a      	mov	r2, r5
 8010b70:	4629      	mov	r1, r5
 8010b72:	4640      	mov	r0, r8
 8010b74:	f7f1 fed8 	bl	8002928 <_ZN8touchgfx8Drawable5setXYEss>
 8010b78:	4631      	mov	r1, r6
 8010b7a:	4620      	mov	r0, r4
 8010b7c:	f7ff fc50 	bl	8010420 <_ZN8touchgfx9Container3addERNS_8DrawableE>
 8010b80:	4620      	mov	r0, r4
 8010b82:	4641      	mov	r1, r8
 8010b84:	f7ff fc4c 	bl	8010420 <_ZN8touchgfx9Container3addERNS_8DrawableE>
 8010b88:	4620      	mov	r0, r4
 8010b8a:	b003      	add	sp, #12
 8010b8c:	e8bd 83f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, pc}
 8010b90:	0802cf00 	.word	0x0802cf00
 8010b94:	0802f4ac 	.word	0x0802f4ac

08010b98 <_ZN8touchgfx14SwipeContainerC1Ev>:
 8010b98:	b570      	push	{r4, r5, r6, lr}
 8010b9a:	4604      	mov	r4, r0
 8010b9c:	f7ff fb8e 	bl	80102bc <_ZN8touchgfx8DrawableC1Ev>
 8010ba0:	4b1a      	ldr	r3, [pc, #104]	; (8010c0c <_ZN8touchgfx14SwipeContainerC1Ev+0x74>)
 8010ba2:	6023      	str	r3, [r4, #0]
 8010ba4:	2304      	movs	r3, #4
 8010ba6:	f884 302c 	strb.w	r3, [r4, #44]	; 0x2c
 8010baa:	2350      	movs	r3, #80	; 0x50
 8010bac:	2500      	movs	r5, #0
 8010bae:	85e3      	strh	r3, [r4, #46]	; 0x2e
 8010bb0:	f104 0638 	add.w	r6, r4, #56	; 0x38
 8010bb4:	231e      	movs	r3, #30
 8010bb6:	62a5      	str	r5, [r4, #40]	; 0x28
 8010bb8:	f884 502d 	strb.w	r5, [r4, #45]	; 0x2d
 8010bbc:	8625      	strh	r5, [r4, #48]	; 0x30
 8010bbe:	8665      	strh	r5, [r4, #50]	; 0x32
 8010bc0:	86a5      	strh	r5, [r4, #52]	; 0x34
 8010bc2:	86e3      	strh	r3, [r4, #54]	; 0x36
 8010bc4:	4630      	mov	r0, r6
 8010bc6:	f7ff fb79 	bl	80102bc <_ZN8touchgfx8DrawableC1Ev>
 8010bca:	4b11      	ldr	r3, [pc, #68]	; (8010c10 <_ZN8touchgfx14SwipeContainerC1Ev+0x78>)
 8010bcc:	6625      	str	r5, [r4, #96]	; 0x60
 8010bce:	63a3      	str	r3, [r4, #56]	; 0x38
 8010bd0:	f8a4 5066 	strh.w	r5, [r4, #102]	; 0x66
 8010bd4:	2302      	movs	r3, #2
 8010bd6:	f104 0568 	add.w	r5, r4, #104	; 0x68
 8010bda:	f884 3064 	strb.w	r3, [r4, #100]	; 0x64
 8010bde:	4628      	mov	r0, r5
 8010be0:	f7ff ff9c 	bl	8010b1c <_ZN8touchgfx14SwipeContainer13PageIndicatorC1Ev>
 8010be4:	f005 fcf4 	bl	80165d0 <_ZN8touchgfx11Application11getInstanceEv>
 8010be8:	4621      	mov	r1, r4
 8010bea:	3004      	adds	r0, #4
 8010bec:	f005 fde6 	bl	80167bc <_ZN8touchgfx11Application12TimerWidgets3addEPNS_8DrawableE>
 8010bf0:	2301      	movs	r3, #1
 8010bf2:	f884 3024 	strb.w	r3, [r4, #36]	; 0x24
 8010bf6:	4631      	mov	r1, r6
 8010bf8:	4620      	mov	r0, r4
 8010bfa:	f7ff fc11 	bl	8010420 <_ZN8touchgfx9Container3addERNS_8DrawableE>
 8010bfe:	4620      	mov	r0, r4
 8010c00:	4629      	mov	r1, r5
 8010c02:	f7ff fc0d 	bl	8010420 <_ZN8touchgfx9Container3addERNS_8DrawableE>
 8010c06:	4620      	mov	r0, r4
 8010c08:	bd70      	pop	{r4, r5, r6, pc}
 8010c0a:	bf00      	nop
 8010c0c:	0802efec 	.word	0x0802efec
 8010c10:	0802f0b0 	.word	0x0802f0b0

08010c14 <_ZN8touchgfx14SwipeContainer13PageIndicator14setCurrentPageEh>:
 8010c14:	b537      	push	{r0, r1, r2, r4, r5, lr}
 8010c16:	f890 3088 	ldrb.w	r3, [r0, #136]	; 0x88
 8010c1a:	428b      	cmp	r3, r1
 8010c1c:	4604      	mov	r4, r0
 8010c1e:	460d      	mov	r5, r1
 8010c20:	d915      	bls.n	8010c4e <_ZN8touchgfx14SwipeContainer13PageIndicator14setCurrentPageEh+0x3a>
 8010c22:	f890 3089 	ldrb.w	r3, [r0, #137]	; 0x89
 8010c26:	428b      	cmp	r3, r1
 8010c28:	d011      	beq.n	8010c4e <_ZN8touchgfx14SwipeContainer13PageIndicator14setCurrentPageEh+0x3a>
 8010c2a:	f884 1089 	strb.w	r1, [r4, #137]	; 0x89
 8010c2e:	f8b0 3052 	ldrh.w	r3, [r0, #82]	; 0x52
 8010c32:	a802      	add	r0, sp, #8
 8010c34:	f820 3d04 	strh.w	r3, [r0, #-4]!
 8010c38:	f009 f91a 	bl	8019e70 <_ZNK8touchgfx6Bitmap8getWidthEv>
 8010c3c:	fb15 f100 	smulbb	r1, r5, r0
 8010c40:	f9b4 2062 	ldrsh.w	r2, [r4, #98]	; 0x62
 8010c44:	b209      	sxth	r1, r1
 8010c46:	f104 005c 	add.w	r0, r4, #92	; 0x5c
 8010c4a:	f7f1 fbf8 	bl	800243e <_ZN8touchgfx8Drawable6moveToEss>
 8010c4e:	b003      	add	sp, #12
 8010c50:	bd30      	pop	{r4, r5, pc}

08010c52 <_ZN8touchgfx14SwipeContainer13PageIndicator16setNumberOfPagesEh>:
 8010c52:	b537      	push	{r0, r1, r2, r4, r5, lr}
 8010c54:	4604      	mov	r4, r0
 8010c56:	f64f 72ff 	movw	r2, #65535	; 0xffff
 8010c5a:	f884 1088 	strb.w	r1, [r4, #136]	; 0x88
 8010c5e:	f8b0 3052 	ldrh.w	r3, [r0, #82]	; 0x52
 8010c62:	4293      	cmp	r3, r2
 8010c64:	460d      	mov	r5, r1
 8010c66:	d01e      	beq.n	8010ca6 <_ZN8touchgfx14SwipeContainer13PageIndicator16setNumberOfPagesEh+0x54>
 8010c68:	a802      	add	r0, sp, #8
 8010c6a:	f820 3d04 	strh.w	r3, [r0, #-4]!
 8010c6e:	f009 f8ff 	bl	8019e70 <_ZNK8touchgfx6Bitmap8getWidthEv>
 8010c72:	6823      	ldr	r3, [r4, #0]
 8010c74:	fb15 f000 	smulbb	r0, r5, r0
 8010c78:	86a0      	strh	r0, [r4, #52]	; 0x34
 8010c7a:	695b      	ldr	r3, [r3, #20]
 8010c7c:	4620      	mov	r0, r4
 8010c7e:	4798      	blx	r3
 8010c80:	f9b4 2036 	ldrsh.w	r2, [r4, #54]	; 0x36
 8010c84:	f9b4 1034 	ldrsh.w	r1, [r4, #52]	; 0x34
 8010c88:	4620      	mov	r0, r4
 8010c8a:	f7ff fb2f 	bl	80102ec <_ZN8touchgfx8Drawable14setWidthHeightEss>
 8010c8e:	f894 1089 	ldrb.w	r1, [r4, #137]	; 0x89
 8010c92:	42a9      	cmp	r1, r5
 8010c94:	4620      	mov	r0, r4
 8010c96:	bf28      	it	cs
 8010c98:	4629      	movcs	r1, r5
 8010c9a:	f7ff ffbb 	bl	8010c14 <_ZN8touchgfx14SwipeContainer13PageIndicator14setCurrentPageEh>
 8010c9e:	6823      	ldr	r3, [r4, #0]
 8010ca0:	4620      	mov	r0, r4
 8010ca2:	695b      	ldr	r3, [r3, #20]
 8010ca4:	4798      	blx	r3
 8010ca6:	b003      	add	sp, #12
 8010ca8:	bd30      	pop	{r4, r5, pc}

08010caa <_ZN8touchgfx14SwipeContainer13PageIndicator10setBitmapsERKNS_6BitmapES4_>:
 8010caa:	b538      	push	{r3, r4, r5, lr}
 8010cac:	4604      	mov	r4, r0
 8010cae:	460d      	mov	r5, r1
 8010cb0:	305c      	adds	r0, #92	; 0x5c
 8010cb2:	4611      	mov	r1, r2
 8010cb4:	f002 ff8d 	bl	8013bd2 <_ZN8touchgfx5Image9setBitmapERKNS_6BitmapE>
 8010cb8:	4629      	mov	r1, r5
 8010cba:	f104 002c 	add.w	r0, r4, #44	; 0x2c
 8010cbe:	f002 fa53 	bl	8013168 <_ZN8touchgfx10TiledImage9setBitmapERKNS_6BitmapE>
 8010cc2:	f894 1088 	ldrb.w	r1, [r4, #136]	; 0x88
 8010cc6:	b121      	cbz	r1, 8010cd2 <_ZN8touchgfx14SwipeContainer13PageIndicator10setBitmapsERKNS_6BitmapES4_+0x28>
 8010cc8:	4620      	mov	r0, r4
 8010cca:	e8bd 4038 	ldmia.w	sp!, {r3, r4, r5, lr}
 8010cce:	f7ff bfc0 	b.w	8010c52 <_ZN8touchgfx14SwipeContainer13PageIndicator16setNumberOfPagesEh>
 8010cd2:	bd38      	pop	{r3, r4, r5, pc}

08010cd4 <_ZN8touchgfx14SwipeContainer23setPageIndicatorBitmapsERKNS_6BitmapES3_>:
 8010cd4:	3068      	adds	r0, #104	; 0x68
 8010cd6:	f7ff bfe8 	b.w	8010caa <_ZN8touchgfx14SwipeContainer13PageIndicator10setBitmapsERKNS_6BitmapES4_>

08010cda <_ZN8touchgfx14SwipeContainer13PageIndicator7goRightEv>:
 8010cda:	f890 1089 	ldrb.w	r1, [r0, #137]	; 0x89
 8010cde:	f890 2088 	ldrb.w	r2, [r0, #136]	; 0x88
 8010ce2:	3101      	adds	r1, #1
 8010ce4:	fb91 f3f2 	sdiv	r3, r1, r2
 8010ce8:	fb02 1113 	mls	r1, r2, r3, r1
 8010cec:	b2c9      	uxtb	r1, r1
 8010cee:	f7ff bf91 	b.w	8010c14 <_ZN8touchgfx14SwipeContainer13PageIndicator14setCurrentPageEh>

08010cf2 <_ZN8touchgfx14SwipeContainer11animateLeftEv>:
 8010cf2:	b510      	push	{r4, lr}
 8010cf4:	4604      	mov	r4, r0
 8010cf6:	f890 002d 	ldrb.w	r0, [r0, #45]	; 0x2d
 8010cfa:	280a      	cmp	r0, #10
 8010cfc:	d813      	bhi.n	8010d26 <_ZN8touchgfx14SwipeContainer11animateLeftEv+0x34>
 8010cfe:	8e63      	ldrh	r3, [r4, #50]	; 0x32
 8010d00:	8922      	ldrh	r2, [r4, #8]
 8010d02:	441a      	add	r2, r3
 8010d04:	b212      	sxth	r2, r2
 8010d06:	230a      	movs	r3, #10
 8010d08:	2100      	movs	r1, #0
 8010d0a:	f007 fad1 	bl	80182b0 <_ZN8touchgfx15EasingEquations12cubicEaseOutEtsst>
 8010d0e:	8e63      	ldrh	r3, [r4, #50]	; 0x32
 8010d10:	1a18      	subs	r0, r3, r0
 8010d12:	8620      	strh	r0, [r4, #48]	; 0x30
 8010d14:	4620      	mov	r0, r4
 8010d16:	f7ff fe90 	bl	8010a3a <_ZN8touchgfx14SwipeContainer11adjustPagesEv>
 8010d1a:	f894 302d 	ldrb.w	r3, [r4, #45]	; 0x2d
 8010d1e:	3301      	adds	r3, #1
 8010d20:	f884 302d 	strb.w	r3, [r4, #45]	; 0x2d
 8010d24:	bd10      	pop	{r4, pc}
 8010d26:	2304      	movs	r3, #4
 8010d28:	f884 302c 	strb.w	r3, [r4, #44]	; 0x2c
 8010d2c:	2300      	movs	r3, #0
 8010d2e:	f884 302d 	strb.w	r3, [r4, #45]	; 0x2d
 8010d32:	8623      	strh	r3, [r4, #48]	; 0x30
 8010d34:	f104 0068 	add.w	r0, r4, #104	; 0x68
 8010d38:	f7ff ffcf 	bl	8010cda <_ZN8touchgfx14SwipeContainer13PageIndicator7goRightEv>
 8010d3c:	e7ea      	b.n	8010d14 <_ZN8touchgfx14SwipeContainer11animateLeftEv+0x22>

08010d3e <_ZN8touchgfx14SwipeContainer13PageIndicator6goLeftEv>:
 8010d3e:	f890 2088 	ldrb.w	r2, [r0, #136]	; 0x88
 8010d42:	f890 1089 	ldrb.w	r1, [r0, #137]	; 0x89
 8010d46:	4411      	add	r1, r2
 8010d48:	3901      	subs	r1, #1
 8010d4a:	fb91 f3f2 	sdiv	r3, r1, r2
 8010d4e:	fb02 1113 	mls	r1, r2, r3, r1
 8010d52:	b2c9      	uxtb	r1, r1
 8010d54:	f7ff bf5e 	b.w	8010c14 <_ZN8touchgfx14SwipeContainer13PageIndicator14setCurrentPageEh>

08010d58 <_ZN8touchgfx14SwipeContainer12animateRightEv>:
 8010d58:	b510      	push	{r4, lr}
 8010d5a:	4604      	mov	r4, r0
 8010d5c:	f890 002d 	ldrb.w	r0, [r0, #45]	; 0x2d
 8010d60:	280a      	cmp	r0, #10
 8010d62:	d813      	bhi.n	8010d8c <_ZN8touchgfx14SwipeContainer12animateRightEv+0x34>
 8010d64:	8e63      	ldrh	r3, [r4, #50]	; 0x32
 8010d66:	8922      	ldrh	r2, [r4, #8]
 8010d68:	1ad2      	subs	r2, r2, r3
 8010d6a:	b212      	sxth	r2, r2
 8010d6c:	230a      	movs	r3, #10
 8010d6e:	2100      	movs	r1, #0
 8010d70:	f007 fa9e 	bl	80182b0 <_ZN8touchgfx15EasingEquations12cubicEaseOutEtsst>
 8010d74:	8e63      	ldrh	r3, [r4, #50]	; 0x32
 8010d76:	4418      	add	r0, r3
 8010d78:	8620      	strh	r0, [r4, #48]	; 0x30
 8010d7a:	4620      	mov	r0, r4
 8010d7c:	f7ff fe5d 	bl	8010a3a <_ZN8touchgfx14SwipeContainer11adjustPagesEv>
 8010d80:	f894 302d 	ldrb.w	r3, [r4, #45]	; 0x2d
 8010d84:	3301      	adds	r3, #1
 8010d86:	f884 302d 	strb.w	r3, [r4, #45]	; 0x2d
 8010d8a:	bd10      	pop	{r4, pc}
 8010d8c:	2304      	movs	r3, #4
 8010d8e:	f884 302c 	strb.w	r3, [r4, #44]	; 0x2c
 8010d92:	2300      	movs	r3, #0
 8010d94:	f884 302d 	strb.w	r3, [r4, #45]	; 0x2d
 8010d98:	8623      	strh	r3, [r4, #48]	; 0x30
 8010d9a:	f104 0068 	add.w	r0, r4, #104	; 0x68
 8010d9e:	f7ff ffce 	bl	8010d3e <_ZN8touchgfx14SwipeContainer13PageIndicator6goLeftEv>
 8010da2:	e7ea      	b.n	8010d7a <_ZN8touchgfx14SwipeContainer12animateRightEv+0x22>

08010da4 <_ZN8touchgfx14SwipeContainer15handleTickEventEv>:
 8010da4:	f890 302c 	ldrb.w	r3, [r0, #44]	; 0x2c
 8010da8:	b90b      	cbnz	r3, 8010dae <_ZN8touchgfx14SwipeContainer15handleTickEventEv+0xa>
 8010daa:	f7ff be73 	b.w	8010a94 <_ZN8touchgfx14SwipeContainer25animateSwipeCancelledLeftEv>
 8010dae:	2b01      	cmp	r3, #1
 8010db0:	d101      	bne.n	8010db6 <_ZN8touchgfx14SwipeContainer15handleTickEventEv+0x12>
 8010db2:	f7ff be91 	b.w	8010ad8 <_ZN8touchgfx14SwipeContainer26animateSwipeCancelledRightEv>
 8010db6:	2b02      	cmp	r3, #2
 8010db8:	d101      	bne.n	8010dbe <_ZN8touchgfx14SwipeContainer15handleTickEventEv+0x1a>
 8010dba:	f7ff bf9a 	b.w	8010cf2 <_ZN8touchgfx14SwipeContainer11animateLeftEv>
 8010dbe:	2b03      	cmp	r3, #3
 8010dc0:	d101      	bne.n	8010dc6 <_ZN8touchgfx14SwipeContainer15handleTickEventEv+0x22>
 8010dc2:	f7ff bfc9 	b.w	8010d58 <_ZN8touchgfx14SwipeContainer12animateRightEv>
 8010dc6:	4770      	bx	lr

08010dc8 <_ZN8touchgfx14SwipeContainer15setSelectedPageEh>:
 8010dc8:	b510      	push	{r4, lr}
 8010dca:	f890 30f0 	ldrb.w	r3, [r0, #240]	; 0xf0
 8010dce:	428b      	cmp	r3, r1
 8010dd0:	4604      	mov	r4, r0
 8010dd2:	d907      	bls.n	8010de4 <_ZN8touchgfx14SwipeContainer15setSelectedPageEh+0x1c>
 8010dd4:	3068      	adds	r0, #104	; 0x68
 8010dd6:	f7ff ff1d 	bl	8010c14 <_ZN8touchgfx14SwipeContainer13PageIndicator14setCurrentPageEh>
 8010dda:	4620      	mov	r0, r4
 8010ddc:	e8bd 4010 	ldmia.w	sp!, {r4, lr}
 8010de0:	f7ff be2b 	b.w	8010a3a <_ZN8touchgfx14SwipeContainer11adjustPagesEv>
 8010de4:	bd10      	pop	{r4, pc}

08010de6 <_ZN8touchgfx14SwipeContainer3addERNS_8DrawableE>:
 8010de6:	b538      	push	{r3, r4, r5, lr}
 8010de8:	4604      	mov	r4, r0
 8010dea:	3038      	adds	r0, #56	; 0x38
 8010dec:	460d      	mov	r5, r1
 8010dee:	f000 f963 	bl	80110b8 <_ZN8touchgfx10ListLayout3addERNS_8DrawableE>
 8010df2:	f894 10f0 	ldrb.w	r1, [r4, #240]	; 0xf0
 8010df6:	3101      	adds	r1, #1
 8010df8:	f104 0068 	add.w	r0, r4, #104	; 0x68
 8010dfc:	b2c9      	uxtb	r1, r1
 8010dfe:	f7ff ff28 	bl	8010c52 <_ZN8touchgfx14SwipeContainer13PageIndicator16setNumberOfPagesEh>
 8010e02:	f894 10f1 	ldrb.w	r1, [r4, #241]	; 0xf1
 8010e06:	4620      	mov	r0, r4
 8010e08:	f7ff ffde 	bl	8010dc8 <_ZN8touchgfx14SwipeContainer15setSelectedPageEh>
 8010e0c:	f9b5 200a 	ldrsh.w	r2, [r5, #10]
 8010e10:	f9b5 1008 	ldrsh.w	r1, [r5, #8]
 8010e14:	4620      	mov	r0, r4
 8010e16:	f7ff fa69 	bl	80102ec <_ZN8touchgfx8Drawable14setWidthHeightEss>
 8010e1a:	bd38      	pop	{r3, r4, r5, pc}

08010e1c <_ZN8touchgfx14SwipeContainer6removeERNS_8DrawableE>:
 8010e1c:	b538      	push	{r3, r4, r5, lr}
 8010e1e:	f890 30f0 	ldrb.w	r3, [r0, #240]	; 0xf0
 8010e22:	4604      	mov	r4, r0
 8010e24:	b1e3      	cbz	r3, 8010e60 <_ZN8touchgfx14SwipeContainer6removeERNS_8DrawableE+0x44>
 8010e26:	6e03      	ldr	r3, [r0, #96]	; 0x60
 8010e28:	b1d3      	cbz	r3, 8010e60 <_ZN8touchgfx14SwipeContainer6removeERNS_8DrawableE+0x44>
 8010e2a:	428b      	cmp	r3, r1
 8010e2c:	d125      	bne.n	8010e7a <_ZN8touchgfx14SwipeContainer6removeERNS_8DrawableE+0x5e>
 8010e2e:	4619      	mov	r1, r3
 8010e30:	f104 0038 	add.w	r0, r4, #56	; 0x38
 8010e34:	f000 f9c0 	bl	80111b8 <_ZN8touchgfx10ListLayout6removeERNS_8DrawableE>
 8010e38:	f894 10f0 	ldrb.w	r1, [r4, #240]	; 0xf0
 8010e3c:	3901      	subs	r1, #1
 8010e3e:	b2c9      	uxtb	r1, r1
 8010e40:	f104 0068 	add.w	r0, r4, #104	; 0x68
 8010e44:	f7ff ff05 	bl	8010c52 <_ZN8touchgfx14SwipeContainer13PageIndicator16setNumberOfPagesEh>
 8010e48:	f894 50f0 	ldrb.w	r5, [r4, #240]	; 0xf0
 8010e4c:	b94d      	cbnz	r5, 8010e62 <_ZN8touchgfx14SwipeContainer6removeERNS_8DrawableE+0x46>
 8010e4e:	6823      	ldr	r3, [r4, #0]
 8010e50:	4620      	mov	r0, r4
 8010e52:	695b      	ldr	r3, [r3, #20]
 8010e54:	4798      	blx	r3
 8010e56:	462a      	mov	r2, r5
 8010e58:	4629      	mov	r1, r5
 8010e5a:	4620      	mov	r0, r4
 8010e5c:	f7ff fa46 	bl	80102ec <_ZN8touchgfx8Drawable14setWidthHeightEss>
 8010e60:	bd38      	pop	{r3, r4, r5, pc}
 8010e62:	f894 10f1 	ldrb.w	r1, [r4, #241]	; 0xf1
 8010e66:	3d01      	subs	r5, #1
 8010e68:	42a9      	cmp	r1, r5
 8010e6a:	bfa8      	it	ge
 8010e6c:	4629      	movge	r1, r5
 8010e6e:	4620      	mov	r0, r4
 8010e70:	b2c9      	uxtb	r1, r1
 8010e72:	e8bd 4038 	ldmia.w	sp!, {r3, r4, r5, lr}
 8010e76:	f7ff bfa7 	b.w	8010dc8 <_ZN8touchgfx14SwipeContainer15setSelectedPageEh>
 8010e7a:	699b      	ldr	r3, [r3, #24]
 8010e7c:	e7d4      	b.n	8010e28 <_ZN8touchgfx14SwipeContainer6removeERNS_8DrawableE+0xc>

08010e7e <_ZNK8touchgfx10ListLayout12getDirectionEv>:
 8010e7e:	f890 002c 	ldrb.w	r0, [r0, #44]	; 0x2c
 8010e82:	4770      	bx	lr

08010e84 <_ZN8touchgfx14AdjustElements12handleRemoveERNS_8DrawableE>:
 8010e84:	b538      	push	{r3, r4, r5, lr}
 8010e86:	7882      	ldrb	r2, [r0, #2]
 8010e88:	6843      	ldr	r3, [r0, #4]
 8010e8a:	4604      	mov	r4, r0
 8010e8c:	460d      	mov	r5, r1
 8010e8e:	b98a      	cbnz	r2, 8010eb4 <_ZN8touchgfx14AdjustElements12handleRemoveERNS_8DrawableE+0x30>
 8010e90:	4299      	cmp	r1, r3
 8010e92:	d101      	bne.n	8010e98 <_ZN8touchgfx14AdjustElements12handleRemoveERNS_8DrawableE+0x14>
 8010e94:	2301      	movs	r3, #1
 8010e96:	7083      	strb	r3, [r0, #2]
 8010e98:	6863      	ldr	r3, [r4, #4]
 8010e9a:	42ab      	cmp	r3, r5
 8010e9c:	d009      	beq.n	8010eb2 <_ZN8touchgfx14AdjustElements12handleRemoveERNS_8DrawableE+0x2e>
 8010e9e:	7a23      	ldrb	r3, [r4, #8]
 8010ea0:	2b01      	cmp	r3, #1
 8010ea2:	d11b      	bne.n	8010edc <_ZN8touchgfx14AdjustElements12handleRemoveERNS_8DrawableE+0x58>
 8010ea4:	f9b5 3008 	ldrsh.w	r3, [r5, #8]
 8010ea8:	f9b4 2000 	ldrsh.w	r2, [r4]
 8010eac:	429a      	cmp	r2, r3
 8010eae:	bfb8      	it	lt
 8010eb0:	8023      	strhlt	r3, [r4, #0]
 8010eb2:	bd38      	pop	{r3, r4, r5, pc}
 8010eb4:	7a02      	ldrb	r2, [r0, #8]
 8010eb6:	2a01      	cmp	r2, #1
 8010eb8:	d108      	bne.n	8010ecc <_ZN8touchgfx14AdjustElements12handleRemoveERNS_8DrawableE+0x48>
 8010eba:	895b      	ldrh	r3, [r3, #10]
 8010ebc:	88c9      	ldrh	r1, [r1, #6]
 8010ebe:	1ac9      	subs	r1, r1, r3
 8010ec0:	682b      	ldr	r3, [r5, #0]
 8010ec2:	6b5b      	ldr	r3, [r3, #52]	; 0x34
 8010ec4:	b209      	sxth	r1, r1
 8010ec6:	4628      	mov	r0, r5
 8010ec8:	4798      	blx	r3
 8010eca:	e7e5      	b.n	8010e98 <_ZN8touchgfx14AdjustElements12handleRemoveERNS_8DrawableE+0x14>
 8010ecc:	2a02      	cmp	r2, #2
 8010ece:	d1e3      	bne.n	8010e98 <_ZN8touchgfx14AdjustElements12handleRemoveERNS_8DrawableE+0x14>
 8010ed0:	891b      	ldrh	r3, [r3, #8]
 8010ed2:	8889      	ldrh	r1, [r1, #4]
 8010ed4:	1ac9      	subs	r1, r1, r3
 8010ed6:	682b      	ldr	r3, [r5, #0]
 8010ed8:	6b1b      	ldr	r3, [r3, #48]	; 0x30
 8010eda:	e7f3      	b.n	8010ec4 <_ZN8touchgfx14AdjustElements12handleRemoveERNS_8DrawableE+0x40>
 8010edc:	2b02      	cmp	r3, #2
 8010ede:	d1e8      	bne.n	8010eb2 <_ZN8touchgfx14AdjustElements12handleRemoveERNS_8DrawableE+0x2e>
 8010ee0:	f9b5 300a 	ldrsh.w	r3, [r5, #10]
 8010ee4:	e7e0      	b.n	8010ea8 <_ZN8touchgfx14AdjustElements12handleRemoveERNS_8DrawableE+0x24>

08010ee6 <_ZN8touchgfx8CallbackINS_14AdjustElementsERNS_8DrawableEvvED1Ev>:
 8010ee6:	4770      	bx	lr

08010ee8 <_ZN8touchgfx8CallbackINS_10ListLayoutERNS_8DrawableEvvED1Ev>:
 8010ee8:	4770      	bx	lr

08010eea <_ZN8touchgfx10ListLayoutD1Ev>:
 8010eea:	4770      	bx	lr

08010eec <_ZN8touchgfx8CallbackINS_14AdjustElementsERNS_8DrawableEvvE7executeES3_>:
 8010eec:	b430      	push	{r4, r5}
 8010eee:	68c5      	ldr	r5, [r0, #12]
 8010ef0:	6844      	ldr	r4, [r0, #4]
 8010ef2:	106a      	asrs	r2, r5, #1
 8010ef4:	4603      	mov	r3, r0
 8010ef6:	07ed      	lsls	r5, r5, #31
 8010ef8:	eb04 0002 	add.w	r0, r4, r2
 8010efc:	689b      	ldr	r3, [r3, #8]
 8010efe:	bf48      	it	mi
 8010f00:	58a2      	ldrmi	r2, [r4, r2]
 8010f02:	bc30      	pop	{r4, r5}
 8010f04:	bf48      	it	mi
 8010f06:	58d3      	ldrmi	r3, [r2, r3]
 8010f08:	4718      	bx	r3

08010f0a <_ZNK8touchgfx8CallbackINS_14AdjustElementsERNS_8DrawableEvvE7isValidEv>:
 8010f0a:	6843      	ldr	r3, [r0, #4]
 8010f0c:	b12b      	cbz	r3, 8010f1a <_ZNK8touchgfx8CallbackINS_14AdjustElementsERNS_8DrawableEvvE7isValidEv+0x10>
 8010f0e:	6883      	ldr	r3, [r0, #8]
 8010f10:	b92b      	cbnz	r3, 8010f1e <_ZNK8touchgfx8CallbackINS_14AdjustElementsERNS_8DrawableEvvE7isValidEv+0x14>
 8010f12:	68c0      	ldr	r0, [r0, #12]
 8010f14:	f000 0001 	and.w	r0, r0, #1
 8010f18:	4770      	bx	lr
 8010f1a:	4618      	mov	r0, r3
 8010f1c:	4770      	bx	lr
 8010f1e:	2001      	movs	r0, #1
 8010f20:	4770      	bx	lr

08010f22 <_ZN8touchgfx8CallbackINS_10ListLayoutERNS_8DrawableEvvE7executeES3_>:
 8010f22:	b430      	push	{r4, r5}
 8010f24:	68c5      	ldr	r5, [r0, #12]
 8010f26:	6844      	ldr	r4, [r0, #4]
 8010f28:	106a      	asrs	r2, r5, #1
 8010f2a:	4603      	mov	r3, r0
 8010f2c:	07ed      	lsls	r5, r5, #31
 8010f2e:	eb04 0002 	add.w	r0, r4, r2
 8010f32:	689b      	ldr	r3, [r3, #8]
 8010f34:	bf48      	it	mi
 8010f36:	58a2      	ldrmi	r2, [r4, r2]
 8010f38:	bc30      	pop	{r4, r5}
 8010f3a:	bf48      	it	mi
 8010f3c:	58d3      	ldrmi	r3, [r2, r3]
 8010f3e:	4718      	bx	r3

08010f40 <_ZNK8touchgfx8CallbackINS_10ListLayoutERNS_8DrawableEvvE7isValidEv>:
 8010f40:	6843      	ldr	r3, [r0, #4]
 8010f42:	b12b      	cbz	r3, 8010f50 <_ZNK8touchgfx8CallbackINS_10ListLayoutERNS_8DrawableEvvE7isValidEv+0x10>
 8010f44:	6883      	ldr	r3, [r0, #8]
 8010f46:	b92b      	cbnz	r3, 8010f54 <_ZNK8touchgfx8CallbackINS_10ListLayoutERNS_8DrawableEvvE7isValidEv+0x14>
 8010f48:	68c0      	ldr	r0, [r0, #12]
 8010f4a:	f000 0001 	and.w	r0, r0, #1
 8010f4e:	4770      	bx	lr
 8010f50:	4618      	mov	r0, r3
 8010f52:	4770      	bx	lr
 8010f54:	2001      	movs	r0, #1
 8010f56:	4770      	bx	lr

08010f58 <_ZN8touchgfx10ListLayoutD0Ev>:
 8010f58:	b510      	push	{r4, lr}
 8010f5a:	2130      	movs	r1, #48	; 0x30
 8010f5c:	4604      	mov	r4, r0
 8010f5e:	f019 fbec 	bl	802a73a <_ZdlPvj>
 8010f62:	4620      	mov	r0, r4
 8010f64:	bd10      	pop	{r4, pc}

08010f66 <_ZN8touchgfx8CallbackINS_10ListLayoutERNS_8DrawableEvvED0Ev>:
 8010f66:	b510      	push	{r4, lr}
 8010f68:	2110      	movs	r1, #16
 8010f6a:	4604      	mov	r4, r0
 8010f6c:	f019 fbe5 	bl	802a73a <_ZdlPvj>
 8010f70:	4620      	mov	r0, r4
 8010f72:	bd10      	pop	{r4, pc}

08010f74 <_ZN8touchgfx8CallbackINS_14AdjustElementsERNS_8DrawableEvvED0Ev>:
 8010f74:	b510      	push	{r4, lr}
 8010f76:	2110      	movs	r1, #16
 8010f78:	4604      	mov	r4, r0
 8010f7a:	f019 fbde 	bl	802a73a <_ZdlPvj>
 8010f7e:	4620      	mov	r0, r4
 8010f80:	bd10      	pop	{r4, pc}

08010f82 <_ZN8touchgfx14AdjustElements12handleInsertERNS_8DrawableE>:
 8010f82:	4603      	mov	r3, r0
 8010f84:	4608      	mov	r0, r1
 8010f86:	789a      	ldrb	r2, [r3, #2]
 8010f88:	b992      	cbnz	r2, 8010fb0 <_ZN8touchgfx14AdjustElements12handleInsertERNS_8DrawableE+0x2e>
 8010f8a:	685a      	ldr	r2, [r3, #4]
 8010f8c:	428a      	cmp	r2, r1
 8010f8e:	d102      	bne.n	8010f96 <_ZN8touchgfx14AdjustElements12handleInsertERNS_8DrawableE+0x14>
 8010f90:	2201      	movs	r2, #1
 8010f92:	709a      	strb	r2, [r3, #2]
 8010f94:	4770      	bx	lr
 8010f96:	7a1a      	ldrb	r2, [r3, #8]
 8010f98:	2a01      	cmp	r2, #1
 8010f9a:	d104      	bne.n	8010fa6 <_ZN8touchgfx14AdjustElements12handleInsertERNS_8DrawableE+0x24>
 8010f9c:	88ca      	ldrh	r2, [r1, #6]
 8010f9e:	8949      	ldrh	r1, [r1, #10]
 8010fa0:	440a      	add	r2, r1
 8010fa2:	801a      	strh	r2, [r3, #0]
 8010fa4:	4770      	bx	lr
 8010fa6:	2a02      	cmp	r2, #2
 8010fa8:	d116      	bne.n	8010fd8 <_ZN8touchgfx14AdjustElements12handleInsertERNS_8DrawableE+0x56>
 8010faa:	888a      	ldrh	r2, [r1, #4]
 8010fac:	8909      	ldrh	r1, [r1, #8]
 8010fae:	e7f7      	b.n	8010fa0 <_ZN8touchgfx14AdjustElements12handleInsertERNS_8DrawableE+0x1e>
 8010fb0:	7a1a      	ldrb	r2, [r3, #8]
 8010fb2:	2a01      	cmp	r2, #1
 8010fb4:	d107      	bne.n	8010fc6 <_ZN8touchgfx14AdjustElements12handleInsertERNS_8DrawableE+0x44>
 8010fb6:	685b      	ldr	r3, [r3, #4]
 8010fb8:	8959      	ldrh	r1, [r3, #10]
 8010fba:	88c3      	ldrh	r3, [r0, #6]
 8010fbc:	4419      	add	r1, r3
 8010fbe:	6803      	ldr	r3, [r0, #0]
 8010fc0:	6b5b      	ldr	r3, [r3, #52]	; 0x34
 8010fc2:	b209      	sxth	r1, r1
 8010fc4:	4718      	bx	r3
 8010fc6:	2a02      	cmp	r2, #2
 8010fc8:	d106      	bne.n	8010fd8 <_ZN8touchgfx14AdjustElements12handleInsertERNS_8DrawableE+0x56>
 8010fca:	685b      	ldr	r3, [r3, #4]
 8010fcc:	8919      	ldrh	r1, [r3, #8]
 8010fce:	8883      	ldrh	r3, [r0, #4]
 8010fd0:	4419      	add	r1, r3
 8010fd2:	6803      	ldr	r3, [r0, #0]
 8010fd4:	6b1b      	ldr	r3, [r3, #48]	; 0x30
 8010fd6:	e7f4      	b.n	8010fc2 <_ZN8touchgfx14AdjustElements12handleInsertERNS_8DrawableE+0x40>
 8010fd8:	4770      	bx	lr

08010fda <_ZN8touchgfx10ListLayout9removeAllEv>:
 8010fda:	2200      	movs	r2, #0
 8010fdc:	b510      	push	{r4, lr}
 8010fde:	4611      	mov	r1, r2
 8010fe0:	4604      	mov	r4, r0
 8010fe2:	85c2      	strh	r2, [r0, #46]	; 0x2e
 8010fe4:	f7ff f982 	bl	80102ec <_ZN8touchgfx8Drawable14setWidthHeightEss>
 8010fe8:	4620      	mov	r0, r4
 8010fea:	f7ff fa26 	bl	801043a <_ZN8touchgfx9Container9removeAllEv>
 8010fee:	6960      	ldr	r0, [r4, #20]
 8010ff0:	b120      	cbz	r0, 8010ffc <_ZN8touchgfx10ListLayout9removeAllEv+0x22>
 8010ff2:	6803      	ldr	r3, [r0, #0]
 8010ff4:	e8bd 4010 	ldmia.w	sp!, {r4, lr}
 8010ff8:	6c1b      	ldr	r3, [r3, #64]	; 0x40
 8010ffa:	4718      	bx	r3
 8010ffc:	bd10      	pop	{r4, pc}
	...

08011000 <_ZN8touchgfx10ListLayout12setDirectionENS_9DirectionE>:
 8011000:	b530      	push	{r4, r5, lr}
 8011002:	f890 302c 	ldrb.w	r3, [r0, #44]	; 0x2c
 8011006:	428b      	cmp	r3, r1
 8011008:	b085      	sub	sp, #20
 801100a:	4604      	mov	r4, r0
 801100c:	d017      	beq.n	801103e <_ZN8touchgfx10ListLayout12setDirectionENS_9DirectionE+0x3e>
 801100e:	2500      	movs	r5, #0
 8011010:	f880 102c 	strb.w	r1, [r0, #44]	; 0x2c
 8011014:	85c5      	strh	r5, [r0, #46]	; 0x2e
 8011016:	462a      	mov	r2, r5
 8011018:	4629      	mov	r1, r5
 801101a:	f7ff f967 	bl	80102ec <_ZN8touchgfx8Drawable14setWidthHeightEss>
 801101e:	4b09      	ldr	r3, [pc, #36]	; (8011044 <_ZN8touchgfx10ListLayout12setDirectionENS_9DirectionE+0x44>)
 8011020:	e9cd 3400 	strd	r3, r4, [sp]
 8011024:	4b08      	ldr	r3, [pc, #32]	; (8011048 <_ZN8touchgfx10ListLayout12setDirectionENS_9DirectionE+0x48>)
 8011026:	e9cd 3502 	strd	r3, r5, [sp, #8]
 801102a:	6823      	ldr	r3, [r4, #0]
 801102c:	4620      	mov	r0, r4
 801102e:	6fdb      	ldr	r3, [r3, #124]	; 0x7c
 8011030:	4669      	mov	r1, sp
 8011032:	4798      	blx	r3
 8011034:	6960      	ldr	r0, [r4, #20]
 8011036:	b110      	cbz	r0, 801103e <_ZN8touchgfx10ListLayout12setDirectionENS_9DirectionE+0x3e>
 8011038:	6803      	ldr	r3, [r0, #0]
 801103a:	6c1b      	ldr	r3, [r3, #64]	; 0x40
 801103c:	4798      	blx	r3
 801103e:	b005      	add	sp, #20
 8011040:	bd30      	pop	{r4, r5, pc}
 8011042:	bf00      	nop
 8011044:	0802f080 	.word	0x0802f080
 8011048:	080110b1 	.word	0x080110b1

0801104c <_ZN8touchgfx10ListLayout20internalAddElementAtERNS_8DrawableEs>:
 801104c:	b538      	push	{r3, r4, r5, lr}
 801104e:	f890 302c 	ldrb.w	r3, [r0, #44]	; 0x2c
 8011052:	2b01      	cmp	r3, #1
 8011054:	460d      	mov	r5, r1
 8011056:	4604      	mov	r4, r0
 8011058:	4611      	mov	r1, r2
 801105a:	d002      	beq.n	8011062 <_ZN8touchgfx10ListLayout20internalAddElementAtERNS_8DrawableEs+0x16>
 801105c:	2b02      	cmp	r3, #2
 801105e:	d015      	beq.n	801108c <_ZN8touchgfx10ListLayout20internalAddElementAtERNS_8DrawableEs+0x40>
 8011060:	bd38      	pop	{r3, r4, r5, pc}
 8011062:	f9b5 3008 	ldrsh.w	r3, [r5, #8]
 8011066:	f9b0 2008 	ldrsh.w	r2, [r0, #8]
 801106a:	429a      	cmp	r2, r3
 801106c:	bfb8      	it	lt
 801106e:	8103      	strhlt	r3, [r0, #8]
 8011070:	896a      	ldrh	r2, [r5, #10]
 8011072:	8943      	ldrh	r3, [r0, #10]
 8011074:	4413      	add	r3, r2
 8011076:	8143      	strh	r3, [r0, #10]
 8011078:	460a      	mov	r2, r1
 801107a:	4628      	mov	r0, r5
 801107c:	2100      	movs	r1, #0
 801107e:	f7f1 fc53 	bl	8002928 <_ZN8touchgfx8Drawable5setXYEss>
 8011082:	8de3      	ldrh	r3, [r4, #46]	; 0x2e
 8011084:	896a      	ldrh	r2, [r5, #10]
 8011086:	4413      	add	r3, r2
 8011088:	85e3      	strh	r3, [r4, #46]	; 0x2e
 801108a:	e7e9      	b.n	8011060 <_ZN8touchgfx10ListLayout20internalAddElementAtERNS_8DrawableEs+0x14>
 801108c:	f9b5 300a 	ldrsh.w	r3, [r5, #10]
 8011090:	f9b0 200a 	ldrsh.w	r2, [r0, #10]
 8011094:	429a      	cmp	r2, r3
 8011096:	bfb8      	it	lt
 8011098:	8143      	strhlt	r3, [r0, #10]
 801109a:	892a      	ldrh	r2, [r5, #8]
 801109c:	8903      	ldrh	r3, [r0, #8]
 801109e:	4413      	add	r3, r2
 80110a0:	8103      	strh	r3, [r0, #8]
 80110a2:	2200      	movs	r2, #0
 80110a4:	4628      	mov	r0, r5
 80110a6:	f7f1 fc3f 	bl	8002928 <_ZN8touchgfx8Drawable5setXYEss>
 80110aa:	8de3      	ldrh	r3, [r4, #46]	; 0x2e
 80110ac:	892a      	ldrh	r2, [r5, #8]
 80110ae:	e7ea      	b.n	8011086 <_ZN8touchgfx10ListLayout20internalAddElementAtERNS_8DrawableEs+0x3a>

080110b0 <_ZN8touchgfx10ListLayout18internalAddElementERNS_8DrawableE>:
 80110b0:	f9b0 202e 	ldrsh.w	r2, [r0, #46]	; 0x2e
 80110b4:	f7ff bfca 	b.w	801104c <_ZN8touchgfx10ListLayout20internalAddElementAtERNS_8DrawableEs>

080110b8 <_ZN8touchgfx10ListLayout3addERNS_8DrawableE>:
 80110b8:	b570      	push	{r4, r5, r6, lr}
 80110ba:	4604      	mov	r4, r0
 80110bc:	460d      	mov	r5, r1
 80110be:	f7ff fff7 	bl	80110b0 <_ZN8touchgfx10ListLayout18internalAddElementERNS_8DrawableE>
 80110c2:	4620      	mov	r0, r4
 80110c4:	4629      	mov	r1, r5
 80110c6:	f7ff f9ab 	bl	8010420 <_ZN8touchgfx9Container3addERNS_8DrawableE>
 80110ca:	6960      	ldr	r0, [r4, #20]
 80110cc:	b120      	cbz	r0, 80110d8 <_ZN8touchgfx10ListLayout3addERNS_8DrawableE+0x20>
 80110ce:	6803      	ldr	r3, [r0, #0]
 80110d0:	e8bd 4070 	ldmia.w	sp!, {r4, r5, r6, lr}
 80110d4:	6c1b      	ldr	r3, [r3, #64]	; 0x40
 80110d6:	4718      	bx	r3
 80110d8:	bd70      	pop	{r4, r5, r6, pc}
	...

080110dc <_ZN8touchgfx10ListLayout6insertEPNS_8DrawableERS1_>:
 80110dc:	b530      	push	{r4, r5, lr}
 80110de:	6a83      	ldr	r3, [r0, #40]	; 0x28
 80110e0:	b089      	sub	sp, #36	; 0x24
 80110e2:	4604      	mov	r4, r0
 80110e4:	4615      	mov	r5, r2
 80110e6:	b92b      	cbnz	r3, 80110f4 <_ZN8touchgfx10ListLayout6insertEPNS_8DrawableERS1_+0x18>
 80110e8:	6803      	ldr	r3, [r0, #0]
 80110ea:	4611      	mov	r1, r2
 80110ec:	6e1b      	ldr	r3, [r3, #96]	; 0x60
 80110ee:	4798      	blx	r3
 80110f0:	b009      	add	sp, #36	; 0x24
 80110f2:	bd30      	pop	{r4, r5, pc}
 80110f4:	f7ff f9ec 	bl	80104d0 <_ZN8touchgfx9Container6insertEPNS_8DrawableERS1_>
 80110f8:	f894 202c 	ldrb.w	r2, [r4, #44]	; 0x2c
 80110fc:	f88d 200c 	strb.w	r2, [sp, #12]
 8011100:	4a0f      	ldr	r2, [pc, #60]	; (8011140 <_ZN8touchgfx10ListLayout6insertEPNS_8DrawableERS1_+0x64>)
 8011102:	9204      	str	r2, [sp, #16]
 8011104:	aa01      	add	r2, sp, #4
 8011106:	9205      	str	r2, [sp, #20]
 8011108:	4a0e      	ldr	r2, [pc, #56]	; (8011144 <_ZN8touchgfx10ListLayout6insertEPNS_8DrawableERS1_+0x68>)
 801110a:	9502      	str	r5, [sp, #8]
 801110c:	2300      	movs	r3, #0
 801110e:	e9cd 2306 	strd	r2, r3, [sp, #24]
 8011112:	f8ad 3004 	strh.w	r3, [sp, #4]
 8011116:	f88d 3006 	strb.w	r3, [sp, #6]
 801111a:	6823      	ldr	r3, [r4, #0]
 801111c:	a904      	add	r1, sp, #16
 801111e:	6fdb      	ldr	r3, [r3, #124]	; 0x7c
 8011120:	4620      	mov	r0, r4
 8011122:	4798      	blx	r3
 8011124:	4620      	mov	r0, r4
 8011126:	f9bd 2004 	ldrsh.w	r2, [sp, #4]
 801112a:	4629      	mov	r1, r5
 801112c:	f7ff ff8e 	bl	801104c <_ZN8touchgfx10ListLayout20internalAddElementAtERNS_8DrawableEs>
 8011130:	6960      	ldr	r0, [r4, #20]
 8011132:	2800      	cmp	r0, #0
 8011134:	d0dc      	beq.n	80110f0 <_ZN8touchgfx10ListLayout6insertEPNS_8DrawableERS1_+0x14>
 8011136:	6803      	ldr	r3, [r0, #0]
 8011138:	6c1b      	ldr	r3, [r3, #64]	; 0x40
 801113a:	4798      	blx	r3
 801113c:	e7d8      	b.n	80110f0 <_ZN8touchgfx10ListLayout6insertEPNS_8DrawableERS1_+0x14>
 801113e:	bf00      	nop
 8011140:	0802f098 	.word	0x0802f098
 8011144:	08010f83 	.word	0x08010f83

08011148 <_ZN8touchgfx10ListLayout21internalRemoveElementERNS_8DrawableEs>:
 8011148:	b538      	push	{r3, r4, r5, lr}
 801114a:	f890 302c 	ldrb.w	r3, [r0, #44]	; 0x2c
 801114e:	2b01      	cmp	r3, #1
 8011150:	4604      	mov	r4, r0
 8011152:	460d      	mov	r5, r1
 8011154:	d002      	beq.n	801115c <_ZN8touchgfx10ListLayout21internalRemoveElementERNS_8DrawableEs+0x14>
 8011156:	2b02      	cmp	r3, #2
 8011158:	d018      	beq.n	801118c <_ZN8touchgfx10ListLayout21internalRemoveElementERNS_8DrawableEs+0x44>
 801115a:	bd38      	pop	{r3, r4, r5, pc}
 801115c:	f9b0 3008 	ldrsh.w	r3, [r0, #8]
 8011160:	4293      	cmp	r3, r2
 8011162:	bfc8      	it	gt
 8011164:	8102      	strhgt	r2, [r0, #8]
 8011166:	894a      	ldrh	r2, [r1, #10]
 8011168:	8943      	ldrh	r3, [r0, #10]
 801116a:	1a9b      	subs	r3, r3, r2
 801116c:	8143      	strh	r3, [r0, #10]
 801116e:	680b      	ldr	r3, [r1, #0]
 8011170:	4628      	mov	r0, r5
 8011172:	6b1b      	ldr	r3, [r3, #48]	; 0x30
 8011174:	2100      	movs	r1, #0
 8011176:	4798      	blx	r3
 8011178:	682b      	ldr	r3, [r5, #0]
 801117a:	2100      	movs	r1, #0
 801117c:	6b5b      	ldr	r3, [r3, #52]	; 0x34
 801117e:	4628      	mov	r0, r5
 8011180:	4798      	blx	r3
 8011182:	8de3      	ldrh	r3, [r4, #46]	; 0x2e
 8011184:	896a      	ldrh	r2, [r5, #10]
 8011186:	1a9b      	subs	r3, r3, r2
 8011188:	85e3      	strh	r3, [r4, #46]	; 0x2e
 801118a:	e7e6      	b.n	801115a <_ZN8touchgfx10ListLayout21internalRemoveElementERNS_8DrawableEs+0x12>
 801118c:	f9b0 300a 	ldrsh.w	r3, [r0, #10]
 8011190:	4293      	cmp	r3, r2
 8011192:	bfc8      	it	gt
 8011194:	8142      	strhgt	r2, [r0, #10]
 8011196:	890a      	ldrh	r2, [r1, #8]
 8011198:	8903      	ldrh	r3, [r0, #8]
 801119a:	1a9b      	subs	r3, r3, r2
 801119c:	8103      	strh	r3, [r0, #8]
 801119e:	680b      	ldr	r3, [r1, #0]
 80111a0:	4628      	mov	r0, r5
 80111a2:	6b1b      	ldr	r3, [r3, #48]	; 0x30
 80111a4:	2100      	movs	r1, #0
 80111a6:	4798      	blx	r3
 80111a8:	682b      	ldr	r3, [r5, #0]
 80111aa:	2100      	movs	r1, #0
 80111ac:	6b5b      	ldr	r3, [r3, #52]	; 0x34
 80111ae:	4628      	mov	r0, r5
 80111b0:	4798      	blx	r3
 80111b2:	8de3      	ldrh	r3, [r4, #46]	; 0x2e
 80111b4:	892a      	ldrh	r2, [r5, #8]
 80111b6:	e7e6      	b.n	8011186 <_ZN8touchgfx10ListLayout21internalRemoveElementERNS_8DrawableEs+0x3e>

080111b8 <_ZN8touchgfx10ListLayout6removeERNS_8DrawableE>:
 80111b8:	b530      	push	{r4, r5, lr}
 80111ba:	b089      	sub	sp, #36	; 0x24
 80111bc:	f890 202c 	ldrb.w	r2, [r0, #44]	; 0x2c
 80111c0:	f88d 200c 	strb.w	r2, [sp, #12]
 80111c4:	4a13      	ldr	r2, [pc, #76]	; (8011214 <_ZN8touchgfx10ListLayout6removeERNS_8DrawableE+0x5c>)
 80111c6:	9204      	str	r2, [sp, #16]
 80111c8:	aa01      	add	r2, sp, #4
 80111ca:	9205      	str	r2, [sp, #20]
 80111cc:	4a12      	ldr	r2, [pc, #72]	; (8011218 <_ZN8touchgfx10ListLayout6removeERNS_8DrawableE+0x60>)
 80111ce:	9102      	str	r1, [sp, #8]
 80111d0:	2300      	movs	r3, #0
 80111d2:	f8ad 3004 	strh.w	r3, [sp, #4]
 80111d6:	f88d 3006 	strb.w	r3, [sp, #6]
 80111da:	e9cd 2306 	strd	r2, r3, [sp, #24]
 80111de:	6803      	ldr	r3, [r0, #0]
 80111e0:	460d      	mov	r5, r1
 80111e2:	6fdb      	ldr	r3, [r3, #124]	; 0x7c
 80111e4:	a904      	add	r1, sp, #16
 80111e6:	4604      	mov	r4, r0
 80111e8:	4798      	blx	r3
 80111ea:	f89d 3006 	ldrb.w	r3, [sp, #6]
 80111ee:	b14b      	cbz	r3, 8011204 <_ZN8touchgfx10ListLayout6removeERNS_8DrawableE+0x4c>
 80111f0:	4629      	mov	r1, r5
 80111f2:	4620      	mov	r0, r4
 80111f4:	f9bd 2004 	ldrsh.w	r2, [sp, #4]
 80111f8:	f7ff ffa6 	bl	8011148 <_ZN8touchgfx10ListLayout21internalRemoveElementERNS_8DrawableEs>
 80111fc:	4629      	mov	r1, r5
 80111fe:	4620      	mov	r0, r4
 8011200:	f7ff f94f 	bl	80104a2 <_ZN8touchgfx9Container6removeERNS_8DrawableE>
 8011204:	6960      	ldr	r0, [r4, #20]
 8011206:	b110      	cbz	r0, 801120e <_ZN8touchgfx10ListLayout6removeERNS_8DrawableE+0x56>
 8011208:	6803      	ldr	r3, [r0, #0]
 801120a:	6c1b      	ldr	r3, [r3, #64]	; 0x40
 801120c:	4798      	blx	r3
 801120e:	b009      	add	sp, #36	; 0x24
 8011210:	bd30      	pop	{r4, r5, pc}
 8011212:	bf00      	nop
 8011214:	0802f098 	.word	0x0802f098
 8011218:	08010e85 	.word	0x08010e85

0801121c <_ZN8touchgfx3HAL27drawDrawableInDynamicBitmapERNS_8DrawableEt>:
 801121c:	b513      	push	{r0, r1, r4, lr}
 801121e:	6803      	ldr	r3, [r0, #0]
 8011220:	f8d3 40a8 	ldr.w	r4, [r3, #168]	; 0xa8
 8011224:	2300      	movs	r3, #0
 8011226:	e9cd 3300 	strd	r3, r3, [sp]
 801122a:	466b      	mov	r3, sp
 801122c:	47a0      	blx	r4
 801122e:	b002      	add	sp, #8
 8011230:	bd10      	pop	{r4, pc}

08011232 <_ZN8touchgfx3HAL16flushFrameBufferEv>:
 8011232:	2301      	movs	r3, #1
 8011234:	f880 304b 	strb.w	r3, [r0, #75]	; 0x4b
 8011238:	f880 306d 	strb.w	r3, [r0, #109]	; 0x6d
 801123c:	4770      	bx	lr

0801123e <_ZN8touchgfx3HAL16flushFrameBufferERKNS_4RectE>:
 801123e:	2301      	movs	r3, #1
 8011240:	f880 304b 	strb.w	r3, [r0, #75]	; 0x4b
 8011244:	f880 306d 	strb.w	r3, [r0, #109]	; 0x6d
 8011248:	4770      	bx	lr

0801124a <_ZN8touchgfx3HAL17allowDMATransfersEv>:
 801124a:	6843      	ldr	r3, [r0, #4]
 801124c:	2201      	movs	r2, #1
 801124e:	725a      	strb	r2, [r3, #9]
 8011250:	6840      	ldr	r0, [r0, #4]
 8011252:	6803      	ldr	r3, [r0, #0]
 8011254:	691b      	ldr	r3, [r3, #16]
 8011256:	4718      	bx	r3

08011258 <_ZN8touchgfx3HAL8flushDMAEv>:
 8011258:	6840      	ldr	r0, [r0, #4]
 801125a:	6803      	ldr	r3, [r0, #0]
 801125c:	689b      	ldr	r3, [r3, #8]
 801125e:	4718      	bx	r3

08011260 <_ZN8touchgfx3HAL8blitCopyEPKtttttthbtNS_6Bitmap12BitmapFormatES4_b>:
 8011260:	b530      	push	{r4, r5, lr}
 8011262:	b08b      	sub	sp, #44	; 0x2c
 8011264:	6804      	ldr	r4, [r0, #0]
 8011266:	f89d 5058 	ldrb.w	r5, [sp, #88]	; 0x58
 801126a:	9509      	str	r5, [sp, #36]	; 0x24
 801126c:	f89d 5054 	ldrb.w	r5, [sp, #84]	; 0x54
 8011270:	9508      	str	r5, [sp, #32]
 8011272:	f89d 5050 	ldrb.w	r5, [sp, #80]	; 0x50
 8011276:	9507      	str	r5, [sp, #28]
 8011278:	f8bd 504c 	ldrh.w	r5, [sp, #76]	; 0x4c
 801127c:	9506      	str	r5, [sp, #24]
 801127e:	f89d 5048 	ldrb.w	r5, [sp, #72]	; 0x48
 8011282:	9505      	str	r5, [sp, #20]
 8011284:	f89d 5044 	ldrb.w	r5, [sp, #68]	; 0x44
 8011288:	9504      	str	r5, [sp, #16]
 801128a:	f8bd 5040 	ldrh.w	r5, [sp, #64]	; 0x40
 801128e:	9503      	str	r5, [sp, #12]
 8011290:	f8bd 503c 	ldrh.w	r5, [sp, #60]	; 0x3c
 8011294:	9502      	str	r5, [sp, #8]
 8011296:	f8bd 5038 	ldrh.w	r5, [sp, #56]	; 0x38
 801129a:	e9cd 3500 	strd	r3, r5, [sp]
 801129e:	4613      	mov	r3, r2
 80112a0:	6be4      	ldr	r4, [r4, #60]	; 0x3c
 80112a2:	2200      	movs	r2, #0
 80112a4:	47a0      	blx	r4
 80112a6:	b00b      	add	sp, #44	; 0x2c
 80112a8:	bd30      	pop	{r4, r5, pc}
	...

080112ac <_ZN8touchgfx3HAL10beginFrameEv>:
 80112ac:	4b04      	ldr	r3, [pc, #16]	; (80112c0 <_ZN8touchgfx3HAL10beginFrameEv+0x14>)
 80112ae:	781b      	ldrb	r3, [r3, #0]
 80112b0:	b123      	cbz	r3, 80112bc <_ZN8touchgfx3HAL10beginFrameEv+0x10>
 80112b2:	f890 006e 	ldrb.w	r0, [r0, #110]	; 0x6e
 80112b6:	f080 0001 	eor.w	r0, r0, #1
 80112ba:	4770      	bx	lr
 80112bc:	2001      	movs	r0, #1
 80112be:	4770      	bx	lr
 80112c0:	2001381a 	.word	0x2001381a

080112c4 <_ZN8touchgfx3HAL8endFrameEv>:
 80112c4:	b510      	push	{r4, lr}
 80112c6:	4604      	mov	r4, r0
 80112c8:	6840      	ldr	r0, [r0, #4]
 80112ca:	6803      	ldr	r3, [r0, #0]
 80112cc:	689b      	ldr	r3, [r3, #8]
 80112ce:	4798      	blx	r3
 80112d0:	f894 306d 	ldrb.w	r3, [r4, #109]	; 0x6d
 80112d4:	b113      	cbz	r3, 80112dc <_ZN8touchgfx3HAL8endFrameEv+0x18>
 80112d6:	2301      	movs	r3, #1
 80112d8:	f884 306e 	strb.w	r3, [r4, #110]	; 0x6e
 80112dc:	bd10      	pop	{r4, pc}

080112de <_ZN8touchgfx3HAL10initializeEv>:
 80112de:	b510      	push	{r4, lr}
 80112e0:	4604      	mov	r4, r0
 80112e2:	f7f0 fe89 	bl	8001ff8 <_ZN8touchgfx10OSWrappers10initializeEv>
 80112e6:	f7f0 fd95 	bl	8001e14 <_ZN8touchgfx4GPIO4initEv>
 80112ea:	6860      	ldr	r0, [r4, #4]
 80112ec:	6803      	ldr	r3, [r0, #0]
 80112ee:	68db      	ldr	r3, [r3, #12]
 80112f0:	4798      	blx	r3
 80112f2:	68e0      	ldr	r0, [r4, #12]
 80112f4:	6803      	ldr	r3, [r0, #0]
 80112f6:	689b      	ldr	r3, [r3, #8]
 80112f8:	4798      	blx	r3
 80112fa:	6823      	ldr	r3, [r4, #0]
 80112fc:	4620      	mov	r0, r4
 80112fe:	6f5b      	ldr	r3, [r3, #116]	; 0x74
 8011300:	e8bd 4010 	ldmia.w	sp!, {r4, lr}
 8011304:	4718      	bx	r3
	...

08011308 <_ZN8touchgfx3HAL4tickEv>:
 8011308:	b57f      	push	{r0, r1, r2, r3, r4, r5, r6, lr}
 801130a:	6803      	ldr	r3, [r0, #0]
 801130c:	4d5b      	ldr	r5, [pc, #364]	; (801147c <_ZN8touchgfx3HAL4tickEv+0x174>)
 801130e:	f8d3 30b0 	ldr.w	r3, [r3, #176]	; 0xb0
 8011312:	4604      	mov	r4, r0
 8011314:	4798      	blx	r3
 8011316:	2800      	cmp	r0, #0
 8011318:	f000 8095 	beq.w	8011446 <_ZN8touchgfx3HAL4tickEv+0x13e>
 801131c:	2001      	movs	r0, #1
 801131e:	f7f0 fd2b 	bl	8001d78 <_ZN8touchgfx4GPIO3setENS0_7GPIO_IDE>
 8011322:	f894 306a 	ldrb.w	r3, [r4, #106]	; 0x6a
 8011326:	f884 306b 	strb.w	r3, [r4, #107]	; 0x6b
 801132a:	f894 3079 	ldrb.w	r3, [r4, #121]	; 0x79
 801132e:	2600      	movs	r6, #0
 8011330:	f884 606a 	strb.w	r6, [r4, #106]	; 0x6a
 8011334:	f884 604b 	strb.w	r6, [r4, #75]	; 0x4b
 8011338:	b133      	cbz	r3, 8011348 <_ZN8touchgfx3HAL4tickEv+0x40>
 801133a:	6823      	ldr	r3, [r4, #0]
 801133c:	4620      	mov	r0, r4
 801133e:	f8d3 30c4 	ldr.w	r3, [r3, #196]	; 0xc4
 8011342:	4798      	blx	r3
 8011344:	f884 6079 	strb.w	r6, [r4, #121]	; 0x79
 8011348:	f894 304a 	ldrb.w	r3, [r4, #74]	; 0x4a
 801134c:	6862      	ldr	r2, [r4, #4]
 801134e:	f083 0301 	eor.w	r3, r3, #1
 8011352:	7253      	strb	r3, [r2, #9]
 8011354:	2601      	movs	r6, #1
 8011356:	702e      	strb	r6, [r5, #0]
 8011358:	f005 f93a 	bl	80165d0 <_ZN8touchgfx11Application11getInstanceEv>
 801135c:	6803      	ldr	r3, [r0, #0]
 801135e:	6b5b      	ldr	r3, [r3, #52]	; 0x34
 8011360:	4798      	blx	r3
 8011362:	f894 306b 	ldrb.w	r3, [r4, #107]	; 0x6b
 8011366:	b90b      	cbnz	r3, 801136c <_ZN8touchgfx3HAL4tickEv+0x64>
 8011368:	f884 606b 	strb.w	r6, [r4, #107]	; 0x6b
 801136c:	f005 f930 	bl	80165d0 <_ZN8touchgfx11Application11getInstanceEv>
 8011370:	6803      	ldr	r3, [r0, #0]
 8011372:	695b      	ldr	r3, [r3, #20]
 8011374:	4798      	blx	r3
 8011376:	6de0      	ldr	r0, [r4, #92]	; 0x5c
 8011378:	6803      	ldr	r3, [r0, #0]
 801137a:	691b      	ldr	r3, [r3, #16]
 801137c:	4798      	blx	r3
 801137e:	f894 306b 	ldrb.w	r3, [r4, #107]	; 0x6b
 8011382:	f894 206c 	ldrb.w	r2, [r4, #108]	; 0x6c
 8011386:	3b01      	subs	r3, #1
 8011388:	b2db      	uxtb	r3, r3
 801138a:	f884 306b 	strb.w	r3, [r4, #107]	; 0x6b
 801138e:	b10a      	cbz	r2, 8011394 <_ZN8touchgfx3HAL4tickEv+0x8c>
 8011390:	2b00      	cmp	r3, #0
 8011392:	d1eb      	bne.n	801136c <_ZN8touchgfx3HAL4tickEv+0x64>
 8011394:	4a3a      	ldr	r2, [pc, #232]	; (8011480 <_ZN8touchgfx3HAL4tickEv+0x178>)
 8011396:	f994 1068 	ldrsb.w	r1, [r4, #104]	; 0x68
 801139a:	7813      	ldrb	r3, [r2, #0]
 801139c:	3301      	adds	r3, #1
 801139e:	b25b      	sxtb	r3, r3
 80113a0:	4299      	cmp	r1, r3
 80113a2:	7013      	strb	r3, [r2, #0]
 80113a4:	dc10      	bgt.n	80113c8 <_ZN8touchgfx3HAL4tickEv+0xc0>
 80113a6:	68e0      	ldr	r0, [r4, #12]
 80113a8:	2300      	movs	r3, #0
 80113aa:	7013      	strb	r3, [r2, #0]
 80113ac:	6803      	ldr	r3, [r0, #0]
 80113ae:	aa03      	add	r2, sp, #12
 80113b0:	68db      	ldr	r3, [r3, #12]
 80113b2:	a902      	add	r1, sp, #8
 80113b4:	4798      	blx	r3
 80113b6:	6823      	ldr	r3, [r4, #0]
 80113b8:	2800      	cmp	r0, #0
 80113ba:	d050      	beq.n	801145e <_ZN8touchgfx3HAL4tickEv+0x156>
 80113bc:	f8d3 30bc 	ldr.w	r3, [r3, #188]	; 0xbc
 80113c0:	e9dd 1202 	ldrd	r1, r2, [sp, #8]
 80113c4:	4620      	mov	r0, r4
 80113c6:	4798      	blx	r3
 80113c8:	6960      	ldr	r0, [r4, #20]
 80113ca:	2300      	movs	r3, #0
 80113cc:	f88d 3007 	strb.w	r3, [sp, #7]
 80113d0:	b158      	cbz	r0, 80113ea <_ZN8touchgfx3HAL4tickEv+0xe2>
 80113d2:	6803      	ldr	r3, [r0, #0]
 80113d4:	f10d 0107 	add.w	r1, sp, #7
 80113d8:	68db      	ldr	r3, [r3, #12]
 80113da:	4798      	blx	r3
 80113dc:	b128      	cbz	r0, 80113ea <_ZN8touchgfx3HAL4tickEv+0xe2>
 80113de:	6de0      	ldr	r0, [r4, #92]	; 0x5c
 80113e0:	f89d 1007 	ldrb.w	r1, [sp, #7]
 80113e4:	6803      	ldr	r3, [r0, #0]
 80113e6:	68db      	ldr	r3, [r3, #12]
 80113e8:	4798      	blx	r3
 80113ea:	f104 001c 	add.w	r0, r4, #28
 80113ee:	f016 f8c3 	bl	8027578 <_ZN8touchgfx8Gestures4tickEv>
 80113f2:	f894 3070 	ldrb.w	r3, [r4, #112]	; 0x70
 80113f6:	b30b      	cbz	r3, 801143c <_ZN8touchgfx3HAL4tickEv+0x134>
 80113f8:	6920      	ldr	r0, [r4, #16]
 80113fa:	6803      	ldr	r3, [r0, #0]
 80113fc:	691b      	ldr	r3, [r3, #16]
 80113fe:	4798      	blx	r3
 8011400:	6f63      	ldr	r3, [r4, #116]	; 0x74
 8011402:	4606      	mov	r6, r0
 8011404:	b903      	cbnz	r3, 8011408 <_ZN8touchgfx3HAL4tickEv+0x100>
 8011406:	6760      	str	r0, [r4, #116]	; 0x74
 8011408:	6f63      	ldr	r3, [r4, #116]	; 0x74
 801140a:	4a1e      	ldr	r2, [pc, #120]	; (8011484 <_ZN8touchgfx3HAL4tickEv+0x17c>)
 801140c:	1af3      	subs	r3, r6, r3
 801140e:	4293      	cmp	r3, r2
 8011410:	d914      	bls.n	801143c <_ZN8touchgfx3HAL4tickEv+0x134>
 8011412:	6920      	ldr	r0, [r4, #16]
 8011414:	6803      	ldr	r3, [r0, #0]
 8011416:	699b      	ldr	r3, [r3, #24]
 8011418:	4798      	blx	r3
 801141a:	6f63      	ldr	r3, [r4, #116]	; 0x74
 801141c:	2264      	movs	r2, #100	; 0x64
 801141e:	1af3      	subs	r3, r6, r3
 8011420:	fbb3 f3f2 	udiv	r3, r3, r2
 8011424:	fbb0 f0f3 	udiv	r0, r0, r3
 8011428:	2800      	cmp	r0, #0
 801142a:	dc1d      	bgt.n	8011468 <_ZN8touchgfx3HAL4tickEv+0x160>
 801142c:	f884 2069 	strb.w	r2, [r4, #105]	; 0x69
 8011430:	6920      	ldr	r0, [r4, #16]
 8011432:	6803      	ldr	r3, [r0, #0]
 8011434:	2100      	movs	r1, #0
 8011436:	69db      	ldr	r3, [r3, #28]
 8011438:	4798      	blx	r3
 801143a:	6766      	str	r6, [r4, #116]	; 0x74
 801143c:	f005 f8c8 	bl	80165d0 <_ZN8touchgfx11Application11getInstanceEv>
 8011440:	6803      	ldr	r3, [r0, #0]
 8011442:	6b9b      	ldr	r3, [r3, #56]	; 0x38
 8011444:	4798      	blx	r3
 8011446:	6823      	ldr	r3, [r4, #0]
 8011448:	4620      	mov	r0, r4
 801144a:	f8d3 30b4 	ldr.w	r3, [r3, #180]	; 0xb4
 801144e:	4798      	blx	r3
 8011450:	2001      	movs	r0, #1
 8011452:	f7f0 fca9 	bl	8001da8 <_ZN8touchgfx4GPIO5clearENS0_7GPIO_IDE>
 8011456:	2300      	movs	r3, #0
 8011458:	702b      	strb	r3, [r5, #0]
 801145a:	b004      	add	sp, #16
 801145c:	bd70      	pop	{r4, r5, r6, pc}
 801145e:	f8d3 30c0 	ldr.w	r3, [r3, #192]	; 0xc0
 8011462:	4620      	mov	r0, r4
 8011464:	4798      	blx	r3
 8011466:	e7af      	b.n	80113c8 <_ZN8touchgfx3HAL4tickEv+0xc0>
 8011468:	2863      	cmp	r0, #99	; 0x63
 801146a:	bfcb      	itete	gt
 801146c:	2300      	movgt	r3, #0
 801146e:	f1c0 0064 	rsble	r0, r0, #100	; 0x64
 8011472:	f884 3069 	strbgt.w	r3, [r4, #105]	; 0x69
 8011476:	f884 0069 	strble.w	r0, [r4, #105]	; 0x69
 801147a:	e7d9      	b.n	8011430 <_ZN8touchgfx3HAL4tickEv+0x128>
 801147c:	20013820 	.word	0x20013820
 8011480:	20013821 	.word	0x20013821
 8011484:	05f5e100 	.word	0x05f5e100

08011488 <_ZN8touchgfx3HAL17unlockFrameBufferEv>:
 8011488:	b510      	push	{r4, lr}
 801148a:	4604      	mov	r4, r0
 801148c:	f7f0 fde4 	bl	8002058 <_ZN8touchgfx10OSWrappers24giveFrameBufferSemaphoreEv>
 8011490:	6863      	ldr	r3, [r4, #4]
 8011492:	2200      	movs	r2, #0
 8011494:	729a      	strb	r2, [r3, #10]
 8011496:	bd10      	pop	{r4, pc}

08011498 <_ZN8touchgfx3HAL21registerEventListenerERNS_15UIEventListenerE>:
 8011498:	65c1      	str	r1, [r0, #92]	; 0x5c
 801149a:	301c      	adds	r0, #28
 801149c:	f016 b86a 	b.w	8027574 <_ZN8touchgfx8Gestures21registerEventListenerERNS_15UIEventListenerE>

080114a0 <_ZN8touchgfx3HAL5touchEll>:
 80114a0:	b530      	push	{r4, r5, lr}
 80114a2:	b087      	sub	sp, #28
 80114a4:	4604      	mov	r4, r0
 80114a6:	a804      	add	r0, sp, #16
 80114a8:	e9cd 1204 	strd	r1, r2, [sp, #16]
 80114ac:	f004 fe5c 	bl	8016168 <_ZN8touchgfx16TouchCalibration14translatePointERNS_5PointE>
 80114b0:	9b04      	ldr	r3, [sp, #16]
 80114b2:	f8ad 300c 	strh.w	r3, [sp, #12]
 80114b6:	a906      	add	r1, sp, #24
 80114b8:	9b05      	ldr	r3, [sp, #20]
 80114ba:	f821 3d0a 	strh.w	r3, [r1, #-10]!
 80114be:	a803      	add	r0, sp, #12
 80114c0:	f004 fea4 	bl	801620c <_ZN8touchgfx21DisplayTransformation29transformFrameBufferToDisplayERsS1_>
 80114c4:	f894 106f 	ldrb.w	r1, [r4, #111]	; 0x6f
 80114c8:	f8bd 200c 	ldrh.w	r2, [sp, #12]
 80114cc:	f8bd 300e 	ldrh.w	r3, [sp, #14]
 80114d0:	f104 001c 	add.w	r0, r4, #28
 80114d4:	b189      	cbz	r1, 80114fa <_ZN8touchgfx3HAL5touchEll+0x5a>
 80114d6:	f8b4 5064 	ldrh.w	r5, [r4, #100]	; 0x64
 80114da:	9300      	str	r3, [sp, #0]
 80114dc:	f8b4 1060 	ldrh.w	r1, [r4, #96]	; 0x60
 80114e0:	4613      	mov	r3, r2
 80114e2:	462a      	mov	r2, r5
 80114e4:	f016 f856 	bl	8027594 <_ZN8touchgfx8Gestures17registerDragEventEtttt>
 80114e8:	b128      	cbz	r0, 80114f6 <_ZN8touchgfx3HAL5touchEll+0x56>
 80114ea:	f9bd 300c 	ldrsh.w	r3, [sp, #12]
 80114ee:	6623      	str	r3, [r4, #96]	; 0x60
 80114f0:	f9bd 300e 	ldrsh.w	r3, [sp, #14]
 80114f4:	6663      	str	r3, [r4, #100]	; 0x64
 80114f6:	b007      	add	sp, #28
 80114f8:	bd30      	pop	{r4, r5, pc}
 80114fa:	f016 f88b 	bl	8027614 <_ZN8touchgfx8Gestures18registerClickEventENS_10ClickEvent14ClickEventTypeEtt>
 80114fe:	2301      	movs	r3, #1
 8011500:	f884 306f 	strb.w	r3, [r4, #111]	; 0x6f
 8011504:	e7f1      	b.n	80114ea <_ZN8touchgfx3HAL5touchEll+0x4a>

08011506 <_ZN8touchgfx3HAL9blockCopyEPvPKvm>:
 8011506:	b510      	push	{r4, lr}
 8011508:	2b00      	cmp	r3, #0
 801150a:	d046      	beq.n	801159a <_ZN8touchgfx3HAL9blockCopyEPvPKvm+0x94>
 801150c:	ea81 0002 	eor.w	r0, r1, r2
 8011510:	07c4      	lsls	r4, r0, #31
 8011512:	d508      	bpl.n	8011526 <_ZN8touchgfx3HAL9blockCopyEPvPKvm+0x20>
 8011514:	440b      	add	r3, r1
 8011516:	3a01      	subs	r2, #1
 8011518:	428b      	cmp	r3, r1
 801151a:	d93e      	bls.n	801159a <_ZN8touchgfx3HAL9blockCopyEPvPKvm+0x94>
 801151c:	f812 0f01 	ldrb.w	r0, [r2, #1]!
 8011520:	f801 0b01 	strb.w	r0, [r1], #1
 8011524:	e7f8      	b.n	8011518 <_ZN8touchgfx3HAL9blockCopyEPvPKvm+0x12>
 8011526:	07d0      	lsls	r0, r2, #31
 8011528:	bf42      	ittt	mi
 801152a:	f812 0b01 	ldrbmi.w	r0, [r2], #1
 801152e:	f801 0b01 	strbmi.w	r0, [r1], #1
 8011532:	f103 33ff 	addmi.w	r3, r3, #4294967295
 8011536:	2b01      	cmp	r3, #1
 8011538:	d911      	bls.n	801155e <_ZN8touchgfx3HAL9blockCopyEPvPKvm+0x58>
 801153a:	ea81 0402 	eor.w	r4, r1, r2
 801153e:	07a4      	lsls	r4, r4, #30
 8011540:	4610      	mov	r0, r2
 8011542:	d022      	beq.n	801158a <_ZN8touchgfx3HAL9blockCopyEPvPKvm+0x84>
 8011544:	f023 0401 	bic.w	r4, r3, #1
 8011548:	440c      	add	r4, r1
 801154a:	428c      	cmp	r4, r1
 801154c:	4602      	mov	r2, r0
 801154e:	d904      	bls.n	801155a <_ZN8touchgfx3HAL9blockCopyEPvPKvm+0x54>
 8011550:	8812      	ldrh	r2, [r2, #0]
 8011552:	f821 2b02 	strh.w	r2, [r1], #2
 8011556:	3002      	adds	r0, #2
 8011558:	e7f7      	b.n	801154a <_ZN8touchgfx3HAL9blockCopyEPvPKvm+0x44>
 801155a:	f003 0301 	and.w	r3, r3, #1
 801155e:	f023 0003 	bic.w	r0, r3, #3
 8011562:	4408      	add	r0, r1
 8011564:	4288      	cmp	r0, r1
 8011566:	4614      	mov	r4, r2
 8011568:	d904      	bls.n	8011574 <_ZN8touchgfx3HAL9blockCopyEPvPKvm+0x6e>
 801156a:	6824      	ldr	r4, [r4, #0]
 801156c:	f841 4b04 	str.w	r4, [r1], #4
 8011570:	3204      	adds	r2, #4
 8011572:	e7f7      	b.n	8011564 <_ZN8touchgfx3HAL9blockCopyEPvPKvm+0x5e>
 8011574:	f003 0303 	and.w	r3, r3, #3
 8011578:	440b      	add	r3, r1
 801157a:	3a01      	subs	r2, #1
 801157c:	428b      	cmp	r3, r1
 801157e:	d90c      	bls.n	801159a <_ZN8touchgfx3HAL9blockCopyEPvPKvm+0x94>
 8011580:	f812 0f01 	ldrb.w	r0, [r2, #1]!
 8011584:	f801 0b01 	strb.w	r0, [r1], #1
 8011588:	e7f8      	b.n	801157c <_ZN8touchgfx3HAL9blockCopyEPvPKvm+0x76>
 801158a:	0790      	lsls	r0, r2, #30
 801158c:	d0e7      	beq.n	801155e <_ZN8touchgfx3HAL9blockCopyEPvPKvm+0x58>
 801158e:	f832 0b02 	ldrh.w	r0, [r2], #2
 8011592:	f821 0b02 	strh.w	r0, [r1], #2
 8011596:	3b02      	subs	r3, #2
 8011598:	e7e1      	b.n	801155e <_ZN8touchgfx3HAL9blockCopyEPvPKvm+0x58>
 801159a:	2001      	movs	r0, #1
 801159c:	bd10      	pop	{r4, pc}

0801159e <_ZN8touchgfx3HAL7noTouchEv>:
 801159e:	b510      	push	{r4, lr}
 80115a0:	f890 306f 	ldrb.w	r3, [r0, #111]	; 0x6f
 80115a4:	4604      	mov	r4, r0
 80115a6:	b153      	cbz	r3, 80115be <_ZN8touchgfx3HAL7noTouchEv+0x20>
 80115a8:	f8b0 3064 	ldrh.w	r3, [r0, #100]	; 0x64
 80115ac:	f8b0 2060 	ldrh.w	r2, [r0, #96]	; 0x60
 80115b0:	2101      	movs	r1, #1
 80115b2:	301c      	adds	r0, #28
 80115b4:	f016 f82e 	bl	8027614 <_ZN8touchgfx8Gestures18registerClickEventENS_10ClickEvent14ClickEventTypeEtt>
 80115b8:	2300      	movs	r3, #0
 80115ba:	f884 306f 	strb.w	r3, [r4, #111]	; 0x6f
 80115be:	bd10      	pop	{r4, pc}

080115c0 <_ZN8touchgfx3HAL27configurePartialFrameBufferEtttt>:
 80115c0:	e92d 43f0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, lr}
 80115c4:	b085      	sub	sp, #20
 80115c6:	ad04      	add	r5, sp, #16
 80115c8:	4604      	mov	r4, r0
 80115ca:	2000      	movs	r0, #0
 80115cc:	f845 0d04 	str.w	r0, [r5, #-4]!
 80115d0:	69a0      	ldr	r0, [r4, #24]
 80115d2:	6806      	ldr	r6, [r0, #0]
 80115d4:	9501      	str	r5, [sp, #4]
 80115d6:	f8bd 5030 	ldrh.w	r5, [sp, #48]	; 0x30
 80115da:	9500      	str	r5, [sp, #0]
 80115dc:	6835      	ldr	r5, [r6, #0]
 80115de:	4699      	mov	r9, r3
 80115e0:	460f      	mov	r7, r1
 80115e2:	4690      	mov	r8, r2
 80115e4:	47a8      	blx	r5
 80115e6:	4d10      	ldr	r5, [pc, #64]	; (8011628 <_ZN8touchgfx3HAL27configurePartialFrameBufferEtttt+0x68>)
 80115e8:	4606      	mov	r6, r0
 80115ea:	f8a5 9000 	strh.w	r9, [r5]
 80115ee:	f7f3 f82d 	bl	800464c <_ZN8touchgfx3HAL3lcdEv>
 80115f2:	6803      	ldr	r3, [r0, #0]
 80115f4:	6adb      	ldr	r3, [r3, #44]	; 0x2c
 80115f6:	4798      	blx	r3
 80115f8:	b128      	cbz	r0, 8011606 <_ZN8touchgfx3HAL27configurePartialFrameBufferEtttt+0x46>
 80115fa:	2801      	cmp	r0, #1
 80115fc:	d00b      	beq.n	8011616 <_ZN8touchgfx3HAL27configurePartialFrameBufferEtttt+0x56>
 80115fe:	4630      	mov	r0, r6
 8011600:	b005      	add	sp, #20
 8011602:	e8bd 83f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, pc}
 8011606:	882b      	ldrh	r3, [r5, #0]
 8011608:	fb08 7203 	mla	r2, r8, r3, r7
 801160c:	9b03      	ldr	r3, [sp, #12]
 801160e:	eba3 0342 	sub.w	r3, r3, r2, lsl #1
 8011612:	63e3      	str	r3, [r4, #60]	; 0x3c
 8011614:	e7f3      	b.n	80115fe <_ZN8touchgfx3HAL27configurePartialFrameBufferEtttt+0x3e>
 8011616:	882a      	ldrh	r2, [r5, #0]
 8011618:	9b03      	ldr	r3, [sp, #12]
 801161a:	fb08 7202 	mla	r2, r8, r2, r7
 801161e:	eb02 0242 	add.w	r2, r2, r2, lsl #1
 8011622:	1a9a      	subs	r2, r3, r2
 8011624:	63e2      	str	r2, [r4, #60]	; 0x3c
 8011626:	e7ea      	b.n	80115fe <_ZN8touchgfx3HAL27configurePartialFrameBufferEtttt+0x3e>
 8011628:	20013816 	.word	0x20013816

0801162c <_ZN8touchgfx3HAL8blitCopyEPKtttttthbb>:
 801162c:	b5f0      	push	{r4, r5, r6, r7, lr}
 801162e:	b08b      	sub	sp, #44	; 0x2c
 8011630:	4617      	mov	r7, r2
 8011632:	4604      	mov	r4, r0
 8011634:	460e      	mov	r6, r1
 8011636:	461d      	mov	r5, r3
 8011638:	f7f3 f808 	bl	800464c <_ZN8touchgfx3HAL3lcdEv>
 801163c:	6803      	ldr	r3, [r0, #0]
 801163e:	6adb      	ldr	r3, [r3, #44]	; 0x2c
 8011640:	4798      	blx	r3
 8011642:	f89d 3054 	ldrb.w	r3, [sp, #84]	; 0x54
 8011646:	9007      	str	r0, [sp, #28]
 8011648:	e9cd 0308 	strd	r0, r3, [sp, #32]
 801164c:	4b0d      	ldr	r3, [pc, #52]	; (8011684 <_ZN8touchgfx3HAL8blitCopyEPKtttttthbb+0x58>)
 801164e:	6822      	ldr	r2, [r4, #0]
 8011650:	881b      	ldrh	r3, [r3, #0]
 8011652:	9306      	str	r3, [sp, #24]
 8011654:	f89d 3050 	ldrb.w	r3, [sp, #80]	; 0x50
 8011658:	9305      	str	r3, [sp, #20]
 801165a:	f89d 304c 	ldrb.w	r3, [sp, #76]	; 0x4c
 801165e:	9304      	str	r3, [sp, #16]
 8011660:	f8bd 3048 	ldrh.w	r3, [sp, #72]	; 0x48
 8011664:	9303      	str	r3, [sp, #12]
 8011666:	f8bd 3044 	ldrh.w	r3, [sp, #68]	; 0x44
 801166a:	9302      	str	r3, [sp, #8]
 801166c:	f8bd 3040 	ldrh.w	r3, [sp, #64]	; 0x40
 8011670:	e9cd 5300 	strd	r5, r3, [sp]
 8011674:	4631      	mov	r1, r6
 8011676:	6bd5      	ldr	r5, [r2, #60]	; 0x3c
 8011678:	463b      	mov	r3, r7
 801167a:	2200      	movs	r2, #0
 801167c:	4620      	mov	r0, r4
 801167e:	47a8      	blx	r5
 8011680:	b00b      	add	sp, #44	; 0x2c
 8011682:	bdf0      	pop	{r4, r5, r6, r7, pc}
 8011684:	20013816 	.word	0x20013816

08011688 <_ZN8touchgfx3HAL16blitCopyARGB8888EPKtttttthb>:
 8011688:	e92d 43f0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, lr}
 801168c:	4698      	mov	r8, r3
 801168e:	6803      	ldr	r3, [r0, #0]
 8011690:	6bdd      	ldr	r5, [r3, #60]	; 0x3c
 8011692:	4b15      	ldr	r3, [pc, #84]	; (80116e8 <_ZN8touchgfx3HAL16blitCopyARGB8888EPKtttttthb+0x60>)
 8011694:	b08b      	sub	sp, #44	; 0x2c
 8011696:	4617      	mov	r7, r2
 8011698:	f8b3 9000 	ldrh.w	r9, [r3]
 801169c:	460e      	mov	r6, r1
 801169e:	4604      	mov	r4, r0
 80116a0:	f7f2 ffd4 	bl	800464c <_ZN8touchgfx3HAL3lcdEv>
 80116a4:	6803      	ldr	r3, [r0, #0]
 80116a6:	6adb      	ldr	r3, [r3, #44]	; 0x2c
 80116a8:	4798      	blx	r3
 80116aa:	f89d 3058 	ldrb.w	r3, [sp, #88]	; 0x58
 80116ae:	e9cd 0308 	strd	r0, r3, [sp, #32]
 80116b2:	2302      	movs	r3, #2
 80116b4:	e9cd 9306 	strd	r9, r3, [sp, #24]
 80116b8:	2301      	movs	r3, #1
 80116ba:	9305      	str	r3, [sp, #20]
 80116bc:	f89d 3054 	ldrb.w	r3, [sp, #84]	; 0x54
 80116c0:	9304      	str	r3, [sp, #16]
 80116c2:	f8bd 3050 	ldrh.w	r3, [sp, #80]	; 0x50
 80116c6:	9303      	str	r3, [sp, #12]
 80116c8:	f8bd 304c 	ldrh.w	r3, [sp, #76]	; 0x4c
 80116cc:	9302      	str	r3, [sp, #8]
 80116ce:	f8bd 3048 	ldrh.w	r3, [sp, #72]	; 0x48
 80116d2:	2200      	movs	r2, #0
 80116d4:	e9cd 8300 	strd	r8, r3, [sp]
 80116d8:	4631      	mov	r1, r6
 80116da:	463b      	mov	r3, r7
 80116dc:	4620      	mov	r0, r4
 80116de:	47a8      	blx	r5
 80116e0:	b00b      	add	sp, #44	; 0x2c
 80116e2:	e8bd 83f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, pc}
 80116e6:	bf00      	nop
 80116e8:	20013816 	.word	0x20013816

080116ec <_ZN8touchgfx3HAL8blitFillENS_9colortypeEtttthb>:
 80116ec:	e92d 43f0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, lr}
 80116f0:	4698      	mov	r8, r3
 80116f2:	6803      	ldr	r3, [r0, #0]
 80116f4:	6d9d      	ldr	r5, [r3, #88]	; 0x58
 80116f6:	4b11      	ldr	r3, [pc, #68]	; (801173c <_ZN8touchgfx3HAL8blitFillENS_9colortypeEtttthb+0x50>)
 80116f8:	b087      	sub	sp, #28
 80116fa:	f8b3 9000 	ldrh.w	r9, [r3]
 80116fe:	460e      	mov	r6, r1
 8011700:	4617      	mov	r7, r2
 8011702:	4604      	mov	r4, r0
 8011704:	f7f2 ffa2 	bl	800464c <_ZN8touchgfx3HAL3lcdEv>
 8011708:	6803      	ldr	r3, [r0, #0]
 801170a:	6adb      	ldr	r3, [r3, #44]	; 0x2c
 801170c:	4798      	blx	r3
 801170e:	f89d 3044 	ldrb.w	r3, [sp, #68]	; 0x44
 8011712:	f8cd 900c 	str.w	r9, [sp, #12]
 8011716:	e9cd 0304 	strd	r0, r3, [sp, #16]
 801171a:	f89d 3040 	ldrb.w	r3, [sp, #64]	; 0x40
 801171e:	9302      	str	r3, [sp, #8]
 8011720:	f8bd 303c 	ldrh.w	r3, [sp, #60]	; 0x3c
 8011724:	9301      	str	r3, [sp, #4]
 8011726:	f8bd 3038 	ldrh.w	r3, [sp, #56]	; 0x38
 801172a:	9300      	str	r3, [sp, #0]
 801172c:	463a      	mov	r2, r7
 801172e:	4643      	mov	r3, r8
 8011730:	4631      	mov	r1, r6
 8011732:	4620      	mov	r0, r4
 8011734:	47a8      	blx	r5
 8011736:	b007      	add	sp, #28
 8011738:	e8bd 83f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, pc}
 801173c:	20013816 	.word	0x20013816

08011740 <_ZN8touchgfx3HAL27drawDrawableInDynamicBitmapERNS_8DrawableEtRKNS_4RectE>:
 8011740:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 8011744:	4604      	mov	r4, r0
 8011746:	b08f      	sub	sp, #60	; 0x3c
 8011748:	4610      	mov	r0, r2
 801174a:	460d      	mov	r5, r1
 801174c:	4691      	mov	r9, r2
 801174e:	461e      	mov	r6, r3
 8011750:	f008 fafa 	bl	8019d48 <_ZN8touchgfx6Bitmap23dynamicBitmapGetAddressEt>
 8011754:	2800      	cmp	r0, #0
 8011756:	f000 809d 	beq.w	8011894 <_ZN8touchgfx3HAL27drawDrawableInDynamicBitmapERNS_8DrawableEtRKNS_4RectE+0x154>
 801175a:	6823      	ldr	r3, [r4, #0]
 801175c:	f8df b198 	ldr.w	fp, [pc, #408]	; 80118f8 <_ZN8touchgfx3HAL27drawDrawableInDynamicBitmapERNS_8DrawableEtRKNS_4RectE+0x1b8>
 8011760:	6a9b      	ldr	r3, [r3, #40]	; 0x28
 8011762:	f8df a198 	ldr.w	sl, [pc, #408]	; 80118fc <_ZN8touchgfx3HAL27drawDrawableInDynamicBitmapERNS_8DrawableEtRKNS_4RectE+0x1bc>
 8011766:	4f61      	ldr	r7, [pc, #388]	; (80118ec <_ZN8touchgfx3HAL27drawDrawableInDynamicBitmapERNS_8DrawableEtRKNS_4RectE+0x1ac>)
 8011768:	4620      	mov	r0, r4
 801176a:	4798      	blx	r3
 801176c:	6823      	ldr	r3, [r4, #0]
 801176e:	4620      	mov	r0, r4
 8011770:	6adb      	ldr	r3, [r3, #44]	; 0x2c
 8011772:	4798      	blx	r3
 8011774:	f8bb 3000 	ldrh.w	r3, [fp]
 8011778:	9301      	str	r3, [sp, #4]
 801177a:	f10d 0838 	add.w	r8, sp, #56	; 0x38
 801177e:	f8ba 3000 	ldrh.w	r3, [sl]
 8011782:	9302      	str	r3, [sp, #8]
 8011784:	883b      	ldrh	r3, [r7, #0]
 8011786:	f828 9d1c 	strh.w	r9, [r8, #-28]!
 801178a:	9303      	str	r3, [sp, #12]
 801178c:	4b58      	ldr	r3, [pc, #352]	; (80118f0 <_ZN8touchgfx3HAL27drawDrawableInDynamicBitmapERNS_8DrawableEtRKNS_4RectE+0x1b0>)
 801178e:	9305      	str	r3, [sp, #20]
 8011790:	881a      	ldrh	r2, [r3, #0]
 8011792:	9204      	str	r2, [sp, #16]
 8011794:	4640      	mov	r0, r8
 8011796:	f008 fb6b 	bl	8019e70 <_ZNK8touchgfx6Bitmap8getWidthEv>
 801179a:	8038      	strh	r0, [r7, #0]
 801179c:	4640      	mov	r0, r8
 801179e:	f008 fb9b 	bl	8019ed8 <_ZNK8touchgfx6Bitmap9getHeightEv>
 80117a2:	9b05      	ldr	r3, [sp, #20]
 80117a4:	b280      	uxth	r0, r0
 80117a6:	8018      	strh	r0, [r3, #0]
 80117a8:	4b52      	ldr	r3, [pc, #328]	; (80118f4 <_ZN8touchgfx3HAL27drawDrawableInDynamicBitmapERNS_8DrawableEtRKNS_4RectE+0x1b4>)
 80117aa:	781b      	ldrb	r3, [r3, #0]
 80117ac:	2b00      	cmp	r3, #0
 80117ae:	d174      	bne.n	801189a <_ZN8touchgfx3HAL27drawDrawableInDynamicBitmapERNS_8DrawableEtRKNS_4RectE+0x15a>
 80117b0:	883b      	ldrh	r3, [r7, #0]
 80117b2:	f8ab 3000 	strh.w	r3, [fp]
 80117b6:	f8aa 0000 	strh.w	r0, [sl]
 80117ba:	4648      	mov	r0, r9
 80117bc:	e9d4 870f 	ldrd	r8, r7, [r4, #60]	; 0x3c
 80117c0:	f008 fac2 	bl	8019d48 <_ZN8touchgfx6Bitmap23dynamicBitmapGetAddressEt>
 80117c4:	e9c4 000f 	strd	r0, r0, [r4, #60]	; 0x3c
 80117c8:	2200      	movs	r2, #0
 80117ca:	4611      	mov	r1, r2
 80117cc:	4628      	mov	r0, r5
 80117ce:	f9b5 9004 	ldrsh.w	r9, [r5, #4]
 80117d2:	f9b5 a006 	ldrsh.w	sl, [r5, #6]
 80117d6:	f7f1 f8a7 	bl	8002928 <_ZN8touchgfx8Drawable5setXYEss>
 80117da:	2301      	movs	r3, #1
 80117dc:	f895 b025 	ldrb.w	fp, [r5, #37]	; 0x25
 80117e0:	f885 3025 	strb.w	r3, [r5, #37]	; 0x25
 80117e4:	f9b6 3004 	ldrsh.w	r3, [r6, #4]
 80117e8:	2b00      	cmp	r3, #0
 80117ea:	dd5c      	ble.n	80118a6 <_ZN8touchgfx3HAL27drawDrawableInDynamicBitmapERNS_8DrawableEtRKNS_4RectE+0x166>
 80117ec:	f9b6 3006 	ldrsh.w	r3, [r6, #6]
 80117f0:	2b00      	cmp	r3, #0
 80117f2:	dd58      	ble.n	80118a6 <_ZN8touchgfx3HAL27drawDrawableInDynamicBitmapERNS_8DrawableEtRKNS_4RectE+0x166>
 80117f4:	462a      	mov	r2, r5
 80117f6:	ab0a      	add	r3, sp, #40	; 0x28
 80117f8:	f852 0f04 	ldr.w	r0, [r2, #4]!
 80117fc:	6851      	ldr	r1, [r2, #4]
 80117fe:	c303      	stmia	r3!, {r0, r1}
 8011800:	4631      	mov	r1, r6
 8011802:	a80a      	add	r0, sp, #40	; 0x28
 8011804:	f7fe ff92 	bl	801072c <_ZN8touchgfx4RectaNERKS0_>
 8011808:	4b38      	ldr	r3, [pc, #224]	; (80118ec <_ZN8touchgfx3HAL27drawDrawableInDynamicBitmapERNS_8DrawableEtRKNS_4RectE+0x1ac>)
 801180a:	f9b3 2000 	ldrsh.w	r2, [r3]
 801180e:	f8ad 2034 	strh.w	r2, [sp, #52]	; 0x34
 8011812:	2100      	movs	r1, #0
 8011814:	aa0a      	add	r2, sp, #40	; 0x28
 8011816:	4b36      	ldr	r3, [pc, #216]	; (80118f0 <_ZN8touchgfx3HAL27drawDrawableInDynamicBitmapERNS_8DrawableEtRKNS_4RectE+0x1b0>)
 8011818:	910c      	str	r1, [sp, #48]	; 0x30
 801181a:	e892 0003 	ldmia.w	r2, {r0, r1}
 801181e:	f9b3 3000 	ldrsh.w	r3, [r3]
 8011822:	f8ad 3036 	strh.w	r3, [sp, #54]	; 0x36
 8011826:	ab08      	add	r3, sp, #32
 8011828:	e883 0003 	stmia.w	r3, {r0, r1}
 801182c:	4618      	mov	r0, r3
 801182e:	a90c      	add	r1, sp, #48	; 0x30
 8011830:	f7fe ff7c 	bl	801072c <_ZN8touchgfx4RectaNERKS0_>
 8011834:	6ce3      	ldr	r3, [r4, #76]	; 0x4c
 8011836:	2b00      	cmp	r3, #0
 8011838:	d13c      	bne.n	80118b4 <_ZN8touchgfx3HAL27drawDrawableInDynamicBitmapERNS_8DrawableEtRKNS_4RectE+0x174>
 801183a:	2000      	movs	r0, #0
 801183c:	f884 0058 	strb.w	r0, [r4, #88]	; 0x58
 8011840:	2600      	movs	r6, #0
 8011842:	682a      	ldr	r2, [r5, #0]
 8011844:	696b      	ldr	r3, [r5, #20]
 8011846:	616e      	str	r6, [r5, #20]
 8011848:	9305      	str	r3, [sp, #20]
 801184a:	6892      	ldr	r2, [r2, #8]
 801184c:	a908      	add	r1, sp, #32
 801184e:	4628      	mov	r0, r5
 8011850:	4790      	blx	r2
 8011852:	9b05      	ldr	r3, [sp, #20]
 8011854:	616b      	str	r3, [r5, #20]
 8011856:	4652      	mov	r2, sl
 8011858:	f884 6058 	strb.w	r6, [r4, #88]	; 0x58
 801185c:	4649      	mov	r1, r9
 801185e:	4628      	mov	r0, r5
 8011860:	f885 b025 	strb.w	fp, [r5, #37]	; 0x25
 8011864:	f7f1 f860 	bl	8002928 <_ZN8touchgfx8Drawable5setXYEss>
 8011868:	4b23      	ldr	r3, [pc, #140]	; (80118f8 <_ZN8touchgfx3HAL27drawDrawableInDynamicBitmapERNS_8DrawableEtRKNS_4RectE+0x1b8>)
 801186a:	9a01      	ldr	r2, [sp, #4]
 801186c:	801a      	strh	r2, [r3, #0]
 801186e:	4b23      	ldr	r3, [pc, #140]	; (80118fc <_ZN8touchgfx3HAL27drawDrawableInDynamicBitmapERNS_8DrawableEtRKNS_4RectE+0x1bc>)
 8011870:	9a02      	ldr	r2, [sp, #8]
 8011872:	801a      	strh	r2, [r3, #0]
 8011874:	4b1d      	ldr	r3, [pc, #116]	; (80118ec <_ZN8touchgfx3HAL27drawDrawableInDynamicBitmapERNS_8DrawableEtRKNS_4RectE+0x1ac>)
 8011876:	9a03      	ldr	r2, [sp, #12]
 8011878:	801a      	strh	r2, [r3, #0]
 801187a:	4b1d      	ldr	r3, [pc, #116]	; (80118f0 <_ZN8touchgfx3HAL27drawDrawableInDynamicBitmapERNS_8DrawableEtRKNS_4RectE+0x1b0>)
 801187c:	9a04      	ldr	r2, [sp, #16]
 801187e:	801a      	strh	r2, [r3, #0]
 8011880:	e9c4 870f 	strd	r8, r7, [r4, #60]	; 0x3c
 8011884:	6823      	ldr	r3, [r4, #0]
 8011886:	4620      	mov	r0, r4
 8011888:	6a9b      	ldr	r3, [r3, #40]	; 0x28
 801188a:	4798      	blx	r3
 801188c:	6823      	ldr	r3, [r4, #0]
 801188e:	4620      	mov	r0, r4
 8011890:	6adb      	ldr	r3, [r3, #44]	; 0x2c
 8011892:	4798      	blx	r3
 8011894:	b00f      	add	sp, #60	; 0x3c
 8011896:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
 801189a:	883b      	ldrh	r3, [r7, #0]
 801189c:	f8ab 0000 	strh.w	r0, [fp]
 80118a0:	f8aa 3000 	strh.w	r3, [sl]
 80118a4:	e789      	b.n	80117ba <_ZN8touchgfx3HAL27drawDrawableInDynamicBitmapERNS_8DrawableEtRKNS_4RectE+0x7a>
 80118a6:	462a      	mov	r2, r5
 80118a8:	ab0a      	add	r3, sp, #40	; 0x28
 80118aa:	f852 0f04 	ldr.w	r0, [r2, #4]!
 80118ae:	6851      	ldr	r1, [r2, #4]
 80118b0:	c303      	stmia	r3!, {r0, r1}
 80118b2:	e7a9      	b.n	8011808 <_ZN8touchgfx3HAL27drawDrawableInDynamicBitmapERNS_8DrawableEtRKNS_4RectE+0xc8>
 80118b4:	a807      	add	r0, sp, #28
 80118b6:	f008 fc4b 	bl	801a150 <_ZNK8touchgfx6Bitmap9getFormatEv>
 80118ba:	4606      	mov	r6, r0
 80118bc:	6ce0      	ldr	r0, [r4, #76]	; 0x4c
 80118be:	6803      	ldr	r3, [r0, #0]
 80118c0:	6adb      	ldr	r3, [r3, #44]	; 0x2c
 80118c2:	4798      	blx	r3
 80118c4:	4286      	cmp	r6, r0
 80118c6:	d1b8      	bne.n	801183a <_ZN8touchgfx3HAL27drawDrawableInDynamicBitmapERNS_8DrawableEtRKNS_4RectE+0xfa>
 80118c8:	f7f2 fec0 	bl	800464c <_ZN8touchgfx3HAL3lcdEv>
 80118cc:	6803      	ldr	r3, [r0, #0]
 80118ce:	4606      	mov	r6, r0
 80118d0:	6b5b      	ldr	r3, [r3, #52]	; 0x34
 80118d2:	9305      	str	r3, [sp, #20]
 80118d4:	a807      	add	r0, sp, #28
 80118d6:	f008 fc3b 	bl	801a150 <_ZNK8touchgfx6Bitmap9getFormatEv>
 80118da:	9b05      	ldr	r3, [sp, #20]
 80118dc:	4601      	mov	r1, r0
 80118de:	4630      	mov	r0, r6
 80118e0:	4798      	blx	r3
 80118e2:	f080 0001 	eor.w	r0, r0, #1
 80118e6:	b2c0      	uxtb	r0, r0
 80118e8:	e7a8      	b.n	801183c <_ZN8touchgfx3HAL27drawDrawableInDynamicBitmapERNS_8DrawableEtRKNS_4RectE+0xfc>
 80118ea:	bf00      	nop
 80118ec:	20013810 	.word	0x20013810
 80118f0:	20013812 	.word	0x20013812
 80118f4:	20013814 	.word	0x20013814
 80118f8:	20013816 	.word	0x20013816
 80118fc:	20013818 	.word	0x20013818

08011900 <_ZN8touchgfx3HAL20getClientFrameBufferEv>:
 8011900:	b510      	push	{r4, lr}
 8011902:	4b07      	ldr	r3, [pc, #28]	; (8011920 <_ZN8touchgfx3HAL20getClientFrameBufferEv+0x20>)
 8011904:	781b      	ldrb	r3, [r3, #0]
 8011906:	4604      	mov	r4, r0
 8011908:	b13b      	cbz	r3, 801191a <_ZN8touchgfx3HAL20getClientFrameBufferEv+0x1a>
 801190a:	6803      	ldr	r3, [r0, #0]
 801190c:	6b1b      	ldr	r3, [r3, #48]	; 0x30
 801190e:	4798      	blx	r3
 8011910:	6be3      	ldr	r3, [r4, #60]	; 0x3c
 8011912:	4283      	cmp	r3, r0
 8011914:	d101      	bne.n	801191a <_ZN8touchgfx3HAL20getClientFrameBufferEv+0x1a>
 8011916:	6c20      	ldr	r0, [r4, #64]	; 0x40
 8011918:	bd10      	pop	{r4, pc}
 801191a:	6be0      	ldr	r0, [r4, #60]	; 0x3c
 801191c:	e7fc      	b.n	8011918 <_ZN8touchgfx3HAL20getClientFrameBufferEv+0x18>
 801191e:	bf00      	nop
 8011920:	2001381a 	.word	0x2001381a

08011924 <_ZN8touchgfx3HAL12blitCopyWordEPKttttttt>:
 8011924:	e92d 41f0 	stmdb	sp!, {r4, r5, r6, r7, r8, lr}
 8011928:	b08a      	sub	sp, #40	; 0x28
 801192a:	461d      	mov	r5, r3
 801192c:	f44f 6380 	mov.w	r3, #1024	; 0x400
 8011930:	e9cd 3101 	strd	r3, r1, [sp, #4]
 8011934:	f8bd 3040 	ldrh.w	r3, [sp, #64]	; 0x40
 8011938:	f8ad 3018 	strh.w	r3, [sp, #24]
 801193c:	f8bd 3044 	ldrh.w	r3, [sp, #68]	; 0x44
 8011940:	f8ad 301a 	strh.w	r3, [sp, #26]
 8011944:	2400      	movs	r4, #0
 8011946:	f8bd 3048 	ldrh.w	r3, [sp, #72]	; 0x48
 801194a:	f8bd 604c 	ldrh.w	r6, [sp, #76]	; 0x4c
 801194e:	f8ad 301c 	strh.w	r3, [sp, #28]
 8011952:	4690      	mov	r8, r2
 8011954:	4607      	mov	r7, r0
 8011956:	9404      	str	r4, [sp, #16]
 8011958:	f88d 4020 	strb.w	r4, [sp, #32]
 801195c:	f7ff ffd0 	bl	8011900 <_ZN8touchgfx3HAL20getClientFrameBufferEv>
 8011960:	fb06 8505 	mla	r5, r6, r5, r8
 8011964:	eb00 0545 	add.w	r5, r0, r5, lsl #1
 8011968:	6878      	ldr	r0, [r7, #4]
 801196a:	9505      	str	r5, [sp, #20]
 801196c:	f8ad 601e 	strh.w	r6, [sp, #30]
 8011970:	f88d 4022 	strb.w	r4, [sp, #34]	; 0x22
 8011974:	f88d 4021 	strb.w	r4, [sp, #33]	; 0x21
 8011978:	f88d 4023 	strb.w	r4, [sp, #35]	; 0x23
 801197c:	f88d 4024 	strb.w	r4, [sp, #36]	; 0x24
 8011980:	6803      	ldr	r3, [r0, #0]
 8011982:	a901      	add	r1, sp, #4
 8011984:	685b      	ldr	r3, [r3, #4]
 8011986:	4798      	blx	r3
 8011988:	b00a      	add	sp, #40	; 0x28
 801198a:	e8bd 81f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, pc}

0801198e <_ZN8touchgfx3HAL12blitFillWordEtttttt>:
 801198e:	e92d 43f0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, lr}
 8011992:	b08b      	sub	sp, #44	; 0x2c
 8011994:	2400      	movs	r4, #0
 8011996:	461d      	mov	r5, r3
 8011998:	f44f 6300 	mov.w	r3, #2048	; 0x800
 801199c:	4688      	mov	r8, r1
 801199e:	4691      	mov	r9, r2
 80119a0:	f8bd 6050 	ldrh.w	r6, [sp, #80]	; 0x50
 80119a4:	9404      	str	r4, [sp, #16]
 80119a6:	4607      	mov	r7, r0
 80119a8:	e9cd 3401 	strd	r3, r4, [sp, #4]
 80119ac:	f7ff ffa8 	bl	8011900 <_ZN8touchgfx3HAL20getClientFrameBufferEv>
 80119b0:	fb06 9505 	mla	r5, r6, r5, r9
 80119b4:	f8bd 3048 	ldrh.w	r3, [sp, #72]	; 0x48
 80119b8:	f8ad 3018 	strh.w	r3, [sp, #24]
 80119bc:	eb00 0545 	add.w	r5, r0, r5, lsl #1
 80119c0:	f8bd 304c 	ldrh.w	r3, [sp, #76]	; 0x4c
 80119c4:	6878      	ldr	r0, [r7, #4]
 80119c6:	9505      	str	r5, [sp, #20]
 80119c8:	f8ad 301a 	strh.w	r3, [sp, #26]
 80119cc:	f8ad 401c 	strh.w	r4, [sp, #28]
 80119d0:	f8ad 601e 	strh.w	r6, [sp, #30]
 80119d4:	f8cd 8010 	str.w	r8, [sp, #16]
 80119d8:	f8ad 4020 	strh.w	r4, [sp, #32]
 80119dc:	f88d 4022 	strb.w	r4, [sp, #34]	; 0x22
 80119e0:	f88d 4023 	strb.w	r4, [sp, #35]	; 0x23
 80119e4:	f88d 4024 	strb.w	r4, [sp, #36]	; 0x24
 80119e8:	6803      	ldr	r3, [r0, #0]
 80119ea:	a901      	add	r1, sp, #4
 80119ec:	685b      	ldr	r3, [r3, #4]
 80119ee:	4798      	blx	r3
 80119f0:	b00b      	add	sp, #44	; 0x2c
 80119f2:	e8bd 83f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, pc}
	...

080119f8 <_ZN8touchgfx3HAL8blitCopyEPKtPKhttttthbtNS_6Bitmap12BitmapFormatES6_b>:
 80119f8:	e92d 41f0 	stmdb	sp!, {r4, r5, r6, r7, r8, lr}
 80119fc:	b08a      	sub	sp, #40	; 0x28
 80119fe:	4698      	mov	r8, r3
 8011a00:	f89d 505c 	ldrb.w	r5, [sp, #92]	; 0x5c
 8011a04:	f89d c054 	ldrb.w	ip, [sp, #84]	; 0x54
 8011a08:	f8bd 7058 	ldrh.w	r7, [sp, #88]	; 0x58
 8011a0c:	f89d 4060 	ldrb.w	r4, [sp, #96]	; 0x60
 8011a10:	2300      	movs	r3, #0
 8011a12:	2d0b      	cmp	r5, #11
 8011a14:	4606      	mov	r6, r0
 8011a16:	9304      	str	r3, [sp, #16]
 8011a18:	f89d 0050 	ldrb.w	r0, [sp, #80]	; 0x50
 8011a1c:	d138      	bne.n	8011a90 <_ZN8touchgfx3HAL8blitCopyEPKtPKhttttthbtNS_6Bitmap12BitmapFormatES6_b+0x98>
 8011a1e:	2380      	movs	r3, #128	; 0x80
 8011a20:	e9cd 3101 	strd	r3, r1, [sp, #4]
 8011a24:	f8bd 3044 	ldrh.w	r3, [sp, #68]	; 0x44
 8011a28:	f8ad 3018 	strh.w	r3, [sp, #24]
 8011a2c:	f8bd 3048 	ldrh.w	r3, [sp, #72]	; 0x48
 8011a30:	f8ad 301a 	strh.w	r3, [sp, #26]
 8011a34:	f88d 0020 	strb.w	r0, [sp, #32]
 8011a38:	f8bd 304c 	ldrh.w	r3, [sp, #76]	; 0x4c
 8011a3c:	f8ad 301c 	strh.w	r3, [sp, #28]
 8011a40:	4630      	mov	r0, r6
 8011a42:	9203      	str	r2, [sp, #12]
 8011a44:	f7ff ff5c 	bl	8011900 <_ZN8touchgfx3HAL20getClientFrameBufferEv>
 8011a48:	2c0b      	cmp	r4, #11
 8011a4a:	bf98      	it	ls
 8011a4c:	4b1b      	ldrls	r3, [pc, #108]	; (8011abc <_ZN8touchgfx3HAL8blitCopyEPKtPKhttttthbtNS_6Bitmap12BitmapFormatES6_b+0xc4>)
 8011a4e:	f8bd 2040 	ldrh.w	r2, [sp, #64]	; 0x40
 8011a52:	bf98      	it	ls
 8011a54:	5d19      	ldrbls	r1, [r3, r4]
 8011a56:	f8ad 701e 	strh.w	r7, [sp, #30]
 8011a5a:	bf88      	it	hi
 8011a5c:	2100      	movhi	r1, #0
 8011a5e:	fb02 8307 	mla	r3, r2, r7, r8
 8011a62:	10c9      	asrs	r1, r1, #3
 8011a64:	fb01 0003 	mla	r0, r1, r3, r0
 8011a68:	f89d 3064 	ldrb.w	r3, [sp, #100]	; 0x64
 8011a6c:	9005      	str	r0, [sp, #20]
 8011a6e:	f88d 3023 	strb.w	r3, [sp, #35]	; 0x23
 8011a72:	6870      	ldr	r0, [r6, #4]
 8011a74:	f88d 5021 	strb.w	r5, [sp, #33]	; 0x21
 8011a78:	2300      	movs	r3, #0
 8011a7a:	f88d 4022 	strb.w	r4, [sp, #34]	; 0x22
 8011a7e:	f88d 3024 	strb.w	r3, [sp, #36]	; 0x24
 8011a82:	6803      	ldr	r3, [r0, #0]
 8011a84:	a901      	add	r1, sp, #4
 8011a86:	685b      	ldr	r3, [r3, #4]
 8011a88:	4798      	blx	r3
 8011a8a:	b00a      	add	sp, #40	; 0x28
 8011a8c:	e8bd 81f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, pc}
 8011a90:	2d02      	cmp	r5, #2
 8011a92:	d109      	bne.n	8011aa8 <_ZN8touchgfx3HAL8blitCopyEPKtPKhttttthbtNS_6Bitmap12BitmapFormatES6_b+0xb0>
 8011a94:	28ff      	cmp	r0, #255	; 0xff
 8011a96:	d105      	bne.n	8011aa4 <_ZN8touchgfx3HAL8blitCopyEPKtPKhttttthbtNS_6Bitmap12BitmapFormatES6_b+0xac>
 8011a98:	f1bc 0f00 	cmp.w	ip, #0
 8011a9c:	bf14      	ite	ne
 8011a9e:	2340      	movne	r3, #64	; 0x40
 8011aa0:	2320      	moveq	r3, #32
 8011aa2:	e7bd      	b.n	8011a20 <_ZN8touchgfx3HAL8blitCopyEPKtPKhttttthbtNS_6Bitmap12BitmapFormatES6_b+0x28>
 8011aa4:	2340      	movs	r3, #64	; 0x40
 8011aa6:	e7bb      	b.n	8011a20 <_ZN8touchgfx3HAL8blitCopyEPKtPKhttttthbtNS_6Bitmap12BitmapFormatES6_b+0x28>
 8011aa8:	28ff      	cmp	r0, #255	; 0xff
 8011aaa:	d105      	bne.n	8011ab8 <_ZN8touchgfx3HAL8blitCopyEPKtPKhttttthbtNS_6Bitmap12BitmapFormatES6_b+0xc0>
 8011aac:	f1bc 0f00 	cmp.w	ip, #0
 8011ab0:	bf14      	ite	ne
 8011ab2:	2304      	movne	r3, #4
 8011ab4:	2301      	moveq	r3, #1
 8011ab6:	e7b3      	b.n	8011a20 <_ZN8touchgfx3HAL8blitCopyEPKtPKhttttthbtNS_6Bitmap12BitmapFormatES6_b+0x28>
 8011ab8:	2304      	movs	r3, #4
 8011aba:	e7b1      	b.n	8011a20 <_ZN8touchgfx3HAL8blitCopyEPKtPKhttttthbtNS_6Bitmap12BitmapFormatES6_b+0x28>
 8011abc:	0802f140 	.word	0x0802f140

08011ac0 <_ZN8touchgfx3HAL8blitFillENS_9colortypeEtttthtNS_6Bitmap12BitmapFormatEb>:
 8011ac0:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 8011ac4:	b08b      	sub	sp, #44	; 0x2c
 8011ac6:	461d      	mov	r5, r3
 8011ac8:	f89d 9058 	ldrb.w	r9, [sp, #88]	; 0x58
 8011acc:	f89d 6060 	ldrb.w	r6, [sp, #96]	; 0x60
 8011ad0:	f8bd a05c 	ldrh.w	sl, [sp, #92]	; 0x5c
 8011ad4:	f1b9 0fff 	cmp.w	r9, #255	; 0xff
 8011ad8:	bf14      	ite	ne
 8011ada:	2308      	movne	r3, #8
 8011adc:	2302      	moveq	r3, #2
 8011ade:	2400      	movs	r4, #0
 8011ae0:	e9cd 3401 	strd	r3, r4, [sp, #4]
 8011ae4:	4688      	mov	r8, r1
 8011ae6:	4693      	mov	fp, r2
 8011ae8:	9404      	str	r4, [sp, #16]
 8011aea:	4607      	mov	r7, r0
 8011aec:	f7ff ff08 	bl	8011900 <_ZN8touchgfx3HAL20getClientFrameBufferEv>
 8011af0:	2e0b      	cmp	r6, #11
 8011af2:	bf98      	it	ls
 8011af4:	4b15      	ldrls	r3, [pc, #84]	; (8011b4c <_ZN8touchgfx3HAL8blitFillENS_9colortypeEtttthtNS_6Bitmap12BitmapFormatEb+0x8c>)
 8011af6:	f89d 2064 	ldrb.w	r2, [sp, #100]	; 0x64
 8011afa:	bf98      	it	ls
 8011afc:	5d9c      	ldrbls	r4, [r3, r6]
 8011afe:	f8bd 3050 	ldrh.w	r3, [sp, #80]	; 0x50
 8011b02:	f8ad 3018 	strh.w	r3, [sp, #24]
 8011b06:	fb05 b50a 	mla	r5, r5, sl, fp
 8011b0a:	f8bd 3054 	ldrh.w	r3, [sp, #84]	; 0x54
 8011b0e:	f8ad 301a 	strh.w	r3, [sp, #26]
 8011b12:	10e4      	asrs	r4, r4, #3
 8011b14:	fb04 0405 	mla	r4, r4, r5, r0
 8011b18:	2300      	movs	r3, #0
 8011b1a:	6878      	ldr	r0, [r7, #4]
 8011b1c:	9405      	str	r4, [sp, #20]
 8011b1e:	f8ad 301c 	strh.w	r3, [sp, #28]
 8011b22:	f8ad a01e 	strh.w	sl, [sp, #30]
 8011b26:	f8cd 8010 	str.w	r8, [sp, #16]
 8011b2a:	f88d 9020 	strb.w	r9, [sp, #32]
 8011b2e:	f88d 2023 	strb.w	r2, [sp, #35]	; 0x23
 8011b32:	f88d 3024 	strb.w	r3, [sp, #36]	; 0x24
 8011b36:	f88d 6021 	strb.w	r6, [sp, #33]	; 0x21
 8011b3a:	f88d 6022 	strb.w	r6, [sp, #34]	; 0x22
 8011b3e:	6803      	ldr	r3, [r0, #0]
 8011b40:	a901      	add	r1, sp, #4
 8011b42:	685b      	ldr	r3, [r3, #4]
 8011b44:	4798      	blx	r3
 8011b46:	b00b      	add	sp, #44	; 0x2c
 8011b48:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
 8011b4c:	0802f140 	.word	0x0802f140

08011b50 <_ZNK8touchgfx3HAL13getDstAddressEttPt>:
 8011b50:	e92d 41f0 	stmdb	sp!, {r4, r5, r6, r7, r8, lr}
 8011b54:	461e      	mov	r6, r3
 8011b56:	4b0a      	ldr	r3, [pc, #40]	; (8011b80 <_ZNK8touchgfx3HAL13getDstAddressEttPt+0x30>)
 8011b58:	460f      	mov	r7, r1
 8011b5a:	881d      	ldrh	r5, [r3, #0]
 8011b5c:	4690      	mov	r8, r2
 8011b5e:	f7f2 fd75 	bl	800464c <_ZN8touchgfx3HAL3lcdEv>
 8011b62:	6803      	ldr	r3, [r0, #0]
 8011b64:	6adb      	ldr	r3, [r3, #44]	; 0x2c
 8011b66:	4798      	blx	r3
 8011b68:	280b      	cmp	r0, #11
 8011b6a:	bf9a      	itte	ls
 8011b6c:	4b05      	ldrls	r3, [pc, #20]	; (8011b84 <_ZNK8touchgfx3HAL13getDstAddressEttPt+0x34>)
 8011b6e:	5c1c      	ldrbls	r4, [r3, r0]
 8011b70:	2400      	movhi	r4, #0
 8011b72:	fb08 7005 	mla	r0, r8, r5, r7
 8011b76:	10e4      	asrs	r4, r4, #3
 8011b78:	fb04 6000 	mla	r0, r4, r0, r6
 8011b7c:	e8bd 81f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, pc}
 8011b80:	20013816 	.word	0x20013816
 8011b84:	0802f140 	.word	0x0802f140

08011b88 <_ZN8touchgfx3HAL13blitCopyGlyphEPKhtttttNS_9colortypeEhNS_14BlitOperationsEb>:
 8011b88:	b5f0      	push	{r4, r5, r6, r7, lr}
 8011b8a:	b08b      	sub	sp, #44	; 0x2c
 8011b8c:	461f      	mov	r7, r3
 8011b8e:	f8bd 3054 	ldrh.w	r3, [sp, #84]	; 0x54
 8011b92:	e9cd 3101 	strd	r3, r1, [sp, #4]
 8011b96:	f8bd 3040 	ldrh.w	r3, [sp, #64]	; 0x40
 8011b9a:	f8ad 3018 	strh.w	r3, [sp, #24]
 8011b9e:	f8bd 3044 	ldrh.w	r3, [sp, #68]	; 0x44
 8011ba2:	f8ad 301a 	strh.w	r3, [sp, #26]
 8011ba6:	f8bd 3048 	ldrh.w	r3, [sp, #72]	; 0x48
 8011baa:	f8ad 301c 	strh.w	r3, [sp, #28]
 8011bae:	2500      	movs	r5, #0
 8011bb0:	f89d 3050 	ldrb.w	r3, [sp, #80]	; 0x50
 8011bb4:	f88d 3020 	strb.w	r3, [sp, #32]
 8011bb8:	4604      	mov	r4, r0
 8011bba:	4616      	mov	r6, r2
 8011bbc:	9504      	str	r5, [sp, #16]
 8011bbe:	f7ff fe9f 	bl	8011900 <_ZN8touchgfx3HAL20getClientFrameBufferEv>
 8011bc2:	463a      	mov	r2, r7
 8011bc4:	4631      	mov	r1, r6
 8011bc6:	4603      	mov	r3, r0
 8011bc8:	4620      	mov	r0, r4
 8011bca:	f7ff ffc1 	bl	8011b50 <_ZNK8touchgfx3HAL13getDstAddressEttPt>
 8011bce:	4b0e      	ldr	r3, [pc, #56]	; (8011c08 <_ZN8touchgfx3HAL13blitCopyGlyphEPKhtttttNS_9colortypeEhNS_14BlitOperationsEb+0x80>)
 8011bd0:	9005      	str	r0, [sp, #20]
 8011bd2:	881b      	ldrh	r3, [r3, #0]
 8011bd4:	f8ad 301e 	strh.w	r3, [sp, #30]
 8011bd8:	f7f2 fd38 	bl	800464c <_ZN8touchgfx3HAL3lcdEv>
 8011bdc:	6803      	ldr	r3, [r0, #0]
 8011bde:	6adb      	ldr	r3, [r3, #44]	; 0x2c
 8011be0:	4798      	blx	r3
 8011be2:	9b13      	ldr	r3, [sp, #76]	; 0x4c
 8011be4:	f88d 0022 	strb.w	r0, [sp, #34]	; 0x22
 8011be8:	f88d 0021 	strb.w	r0, [sp, #33]	; 0x21
 8011bec:	9304      	str	r3, [sp, #16]
 8011bee:	6860      	ldr	r0, [r4, #4]
 8011bf0:	f89d 3058 	ldrb.w	r3, [sp, #88]	; 0x58
 8011bf4:	f88d 3023 	strb.w	r3, [sp, #35]	; 0x23
 8011bf8:	f88d 5024 	strb.w	r5, [sp, #36]	; 0x24
 8011bfc:	6803      	ldr	r3, [r0, #0]
 8011bfe:	a901      	add	r1, sp, #4
 8011c00:	685b      	ldr	r3, [r3, #4]
 8011c02:	4798      	blx	r3
 8011c04:	b00b      	add	sp, #44	; 0x2c
 8011c06:	bdf0      	pop	{r4, r5, r6, r7, pc}
 8011c08:	20013816 	.word	0x20013816

08011c0c <_ZN8touchgfx3HAL20copyFBRegionToMemoryENS_4RectE>:
 8011c0c:	b5f0      	push	{r4, r5, r6, r7, lr}
 8011c0e:	b08d      	sub	sp, #52	; 0x34
 8011c10:	466b      	mov	r3, sp
 8011c12:	e883 0006 	stmia.w	r3, {r1, r2}
 8011c16:	2300      	movs	r3, #0
 8011c18:	9306      	str	r3, [sp, #24]
 8011c1a:	6803      	ldr	r3, [r0, #0]
 8011c1c:	f8bd 6000 	ldrh.w	r6, [sp]
 8011c20:	6b1b      	ldr	r3, [r3, #48]	; 0x30
 8011c22:	f8bd 7002 	ldrh.w	r7, [sp, #2]
 8011c26:	2501      	movs	r5, #1
 8011c28:	9503      	str	r5, [sp, #12]
 8011c2a:	4604      	mov	r4, r0
 8011c2c:	4798      	blx	r3
 8011c2e:	463a      	mov	r2, r7
 8011c30:	4631      	mov	r1, r6
 8011c32:	4603      	mov	r3, r0
 8011c34:	4620      	mov	r0, r4
 8011c36:	f7ff ff8b 	bl	8011b50 <_ZNK8touchgfx3HAL13getDstAddressEttPt>
 8011c3a:	6c63      	ldr	r3, [r4, #68]	; 0x44
 8011c3c:	9307      	str	r3, [sp, #28]
 8011c3e:	f8bd 3004 	ldrh.w	r3, [sp, #4]
 8011c42:	f8ad 3020 	strh.w	r3, [sp, #32]
 8011c46:	f8bd 3006 	ldrh.w	r3, [sp, #6]
 8011c4a:	f8ad 3022 	strh.w	r3, [sp, #34]	; 0x22
 8011c4e:	4b0f      	ldr	r3, [pc, #60]	; (8011c8c <_ZN8touchgfx3HAL20copyFBRegionToMemoryENS_4RectE+0x80>)
 8011c50:	9004      	str	r0, [sp, #16]
 8011c52:	881b      	ldrh	r3, [r3, #0]
 8011c54:	f8ad 3024 	strh.w	r3, [sp, #36]	; 0x24
 8011c58:	f8ad 3026 	strh.w	r3, [sp, #38]	; 0x26
 8011c5c:	f7f2 fcf6 	bl	800464c <_ZN8touchgfx3HAL3lcdEv>
 8011c60:	6803      	ldr	r3, [r0, #0]
 8011c62:	6adb      	ldr	r3, [r3, #44]	; 0x2c
 8011c64:	4798      	blx	r3
 8011c66:	23ff      	movs	r3, #255	; 0xff
 8011c68:	f88d 0029 	strb.w	r0, [sp, #41]	; 0x29
 8011c6c:	f88d 002a 	strb.w	r0, [sp, #42]	; 0x2a
 8011c70:	6860      	ldr	r0, [r4, #4]
 8011c72:	f88d 3028 	strb.w	r3, [sp, #40]	; 0x28
 8011c76:	f88d 502b 	strb.w	r5, [sp, #43]	; 0x2b
 8011c7a:	f88d 502c 	strb.w	r5, [sp, #44]	; 0x2c
 8011c7e:	6803      	ldr	r3, [r0, #0]
 8011c80:	a903      	add	r1, sp, #12
 8011c82:	685b      	ldr	r3, [r3, #4]
 8011c84:	4798      	blx	r3
 8011c86:	6c60      	ldr	r0, [r4, #68]	; 0x44
 8011c88:	b00d      	add	sp, #52	; 0x34
 8011c8a:	bdf0      	pop	{r4, r5, r6, r7, pc}
 8011c8c:	20013816 	.word	0x20013816

08011c90 <_ZN8touchgfx3HAL20copyFBRegionToMemoryENS_4RectEPtm>:
 8011c90:	e92d 41f0 	stmdb	sp!, {r4, r5, r6, r7, r8, lr}
 8011c94:	b08c      	sub	sp, #48	; 0x30
 8011c96:	461e      	mov	r6, r3
 8011c98:	466d      	mov	r5, sp
 8011c9a:	2300      	movs	r3, #0
 8011c9c:	e885 0006 	stmia.w	r5, {r1, r2}
 8011ca0:	9306      	str	r3, [sp, #24]
 8011ca2:	6803      	ldr	r3, [r0, #0]
 8011ca4:	f8bd 7000 	ldrh.w	r7, [sp]
 8011ca8:	6b1b      	ldr	r3, [r3, #48]	; 0x30
 8011caa:	f8bd 8002 	ldrh.w	r8, [sp, #2]
 8011cae:	2501      	movs	r5, #1
 8011cb0:	9503      	str	r5, [sp, #12]
 8011cb2:	4604      	mov	r4, r0
 8011cb4:	4798      	blx	r3
 8011cb6:	4642      	mov	r2, r8
 8011cb8:	4639      	mov	r1, r7
 8011cba:	4603      	mov	r3, r0
 8011cbc:	4620      	mov	r0, r4
 8011cbe:	f7ff ff47 	bl	8011b50 <_ZNK8touchgfx3HAL13getDstAddressEttPt>
 8011cc2:	f8bd 3004 	ldrh.w	r3, [sp, #4]
 8011cc6:	f8ad 3020 	strh.w	r3, [sp, #32]
 8011cca:	f8bd 3006 	ldrh.w	r3, [sp, #6]
 8011cce:	f8ad 3022 	strh.w	r3, [sp, #34]	; 0x22
 8011cd2:	4b11      	ldr	r3, [pc, #68]	; (8011d18 <_ZN8touchgfx3HAL20copyFBRegionToMemoryENS_4RectEPtm+0x88>)
 8011cd4:	9004      	str	r0, [sp, #16]
 8011cd6:	881b      	ldrh	r3, [r3, #0]
 8011cd8:	f8ad 3024 	strh.w	r3, [sp, #36]	; 0x24
 8011cdc:	9b12      	ldr	r3, [sp, #72]	; 0x48
 8011cde:	f8ad 3026 	strh.w	r3, [sp, #38]	; 0x26
 8011ce2:	9607      	str	r6, [sp, #28]
 8011ce4:	f7f2 fcb2 	bl	800464c <_ZN8touchgfx3HAL3lcdEv>
 8011ce8:	6803      	ldr	r3, [r0, #0]
 8011cea:	6adb      	ldr	r3, [r3, #44]	; 0x2c
 8011cec:	4798      	blx	r3
 8011cee:	23ff      	movs	r3, #255	; 0xff
 8011cf0:	f88d 0029 	strb.w	r0, [sp, #41]	; 0x29
 8011cf4:	f88d 002a 	strb.w	r0, [sp, #42]	; 0x2a
 8011cf8:	6860      	ldr	r0, [r4, #4]
 8011cfa:	f88d 3028 	strb.w	r3, [sp, #40]	; 0x28
 8011cfe:	f88d 502b 	strb.w	r5, [sp, #43]	; 0x2b
 8011d02:	f88d 502c 	strb.w	r5, [sp, #44]	; 0x2c
 8011d06:	6803      	ldr	r3, [r0, #0]
 8011d08:	a903      	add	r1, sp, #12
 8011d0a:	685b      	ldr	r3, [r3, #4]
 8011d0c:	4798      	blx	r3
 8011d0e:	4630      	mov	r0, r6
 8011d10:	b00c      	add	sp, #48	; 0x30
 8011d12:	e8bd 81f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, pc}
 8011d16:	bf00      	nop
 8011d18:	20013816 	.word	0x20013816

08011d1c <_ZN8touchgfx3HAL25copyFromTFTToClientBufferENS_4RectE>:
 8011d1c:	b5f0      	push	{r4, r5, r6, r7, lr}
 8011d1e:	b085      	sub	sp, #20
 8011d20:	ac02      	add	r4, sp, #8
 8011d22:	e884 0006 	stmia.w	r4, {r1, r2}
 8011d26:	4605      	mov	r5, r0
 8011d28:	f8bd 6008 	ldrh.w	r6, [sp, #8]
 8011d2c:	f8bd 700a 	ldrh.w	r7, [sp, #10]
 8011d30:	f7ff fde6 	bl	8011900 <_ZN8touchgfx3HAL20getClientFrameBufferEv>
 8011d34:	463a      	mov	r2, r7
 8011d36:	4603      	mov	r3, r0
 8011d38:	4631      	mov	r1, r6
 8011d3a:	4628      	mov	r0, r5
 8011d3c:	f7ff ff08 	bl	8011b50 <_ZNK8touchgfx3HAL13getDstAddressEttPt>
 8011d40:	4a05      	ldr	r2, [pc, #20]	; (8011d58 <_ZN8touchgfx3HAL25copyFromTFTToClientBufferENS_4RectE+0x3c>)
 8011d42:	682b      	ldr	r3, [r5, #0]
 8011d44:	8812      	ldrh	r2, [r2, #0]
 8011d46:	9200      	str	r2, [sp, #0]
 8011d48:	6ede      	ldr	r6, [r3, #108]	; 0x6c
 8011d4a:	e894 0006 	ldmia.w	r4, {r1, r2}
 8011d4e:	4603      	mov	r3, r0
 8011d50:	4628      	mov	r0, r5
 8011d52:	47b0      	blx	r6
 8011d54:	b005      	add	sp, #20
 8011d56:	bdf0      	pop	{r4, r5, r6, r7, pc}
 8011d58:	20013816 	.word	0x20013816

08011d5c <_ZN8touchgfx3HAL16swapFrameBuffersEv>:
 8011d5c:	b570      	push	{r4, r5, r6, lr}
 8011d5e:	f890 306e 	ldrb.w	r3, [r0, #110]	; 0x6e
 8011d62:	4604      	mov	r4, r0
 8011d64:	b19b      	cbz	r3, 8011d8e <_ZN8touchgfx3HAL16swapFrameBuffersEv+0x32>
 8011d66:	2002      	movs	r0, #2
 8011d68:	f7f0 f836 	bl	8001dd8 <_ZN8touchgfx4GPIO6toggleENS0_7GPIO_IDE>
 8011d6c:	2300      	movs	r3, #0
 8011d6e:	f884 306e 	strb.w	r3, [r4, #110]	; 0x6e
 8011d72:	f884 306d 	strb.w	r3, [r4, #109]	; 0x6d
 8011d76:	6823      	ldr	r3, [r4, #0]
 8011d78:	4620      	mov	r0, r4
 8011d7a:	f8d3 50b8 	ldr.w	r5, [r3, #184]	; 0xb8
 8011d7e:	f7ff fdbf 	bl	8011900 <_ZN8touchgfx3HAL20getClientFrameBufferEv>
 8011d82:	462b      	mov	r3, r5
 8011d84:	4601      	mov	r1, r0
 8011d86:	4620      	mov	r0, r4
 8011d88:	e8bd 4070 	ldmia.w	sp!, {r4, r5, r6, lr}
 8011d8c:	4718      	bx	r3
 8011d8e:	bd70      	pop	{r4, r5, r6, pc}

08011d90 <_ZN8touchgfx3HAL18setRenderingMethodENS0_15RenderingMethodE>:
 8011d90:	b538      	push	{r3, r4, r5, lr}
 8011d92:	f890 307b 	ldrb.w	r3, [r0, #123]	; 0x7b
 8011d96:	428b      	cmp	r3, r1
 8011d98:	4604      	mov	r4, r0
 8011d9a:	460d      	mov	r5, r1
 8011d9c:	d006      	beq.n	8011dac <_ZN8touchgfx3HAL18setRenderingMethodENS0_15RenderingMethodE+0x1c>
 8011d9e:	6803      	ldr	r3, [r0, #0]
 8011da0:	b929      	cbnz	r1, 8011dae <_ZN8touchgfx3HAL18setRenderingMethodENS0_15RenderingMethodE+0x1e>
 8011da2:	f8d3 30c8 	ldr.w	r3, [r3, #200]	; 0xc8
 8011da6:	4798      	blx	r3
 8011da8:	f884 507b 	strb.w	r5, [r4, #123]	; 0x7b
 8011dac:	bd38      	pop	{r3, r4, r5, pc}
 8011dae:	f8d3 30cc 	ldr.w	r3, [r3, #204]	; 0xcc
 8011db2:	e7f8      	b.n	8011da6 <_ZN8touchgfx3HAL18setRenderingMethodENS0_15RenderingMethodE+0x16>

08011db4 <_ZN8touchgfx3HAL15lockFrameBufferEv>:
 8011db4:	b510      	push	{r4, lr}
 8011db6:	4b0d      	ldr	r3, [pc, #52]	; (8011dec <_ZN8touchgfx3HAL15lockFrameBufferEv+0x38>)
 8011db8:	781b      	ldrb	r3, [r3, #0]
 8011dba:	4604      	mov	r4, r0
 8011dbc:	b95b      	cbnz	r3, 8011dd6 <_ZN8touchgfx3HAL15lockFrameBufferEv+0x22>
 8011dbe:	f890 3048 	ldrb.w	r3, [r0, #72]	; 0x48
 8011dc2:	2b02      	cmp	r3, #2
 8011dc4:	d007      	beq.n	8011dd6 <_ZN8touchgfx3HAL15lockFrameBufferEv+0x22>
 8011dc6:	6840      	ldr	r0, [r0, #4]
 8011dc8:	f000 f92c 	bl	8012024 <_ZN8touchgfx13DMA_Interface15isDmaQueueEmptyEv>
 8011dcc:	b118      	cbz	r0, 8011dd6 <_ZN8touchgfx3HAL15lockFrameBufferEv+0x22>
 8011dce:	6862      	ldr	r2, [r4, #4]
 8011dd0:	7a53      	ldrb	r3, [r2, #9]
 8011dd2:	2b00      	cmp	r3, #0
 8011dd4:	d0fc      	beq.n	8011dd0 <_ZN8touchgfx3HAL15lockFrameBufferEv+0x1c>
 8011dd6:	f7f0 f937 	bl	8002048 <_ZN8touchgfx10OSWrappers24takeFrameBufferSemaphoreEv>
 8011dda:	4620      	mov	r0, r4
 8011ddc:	2100      	movs	r1, #0
 8011dde:	f7ff ffd7 	bl	8011d90 <_ZN8touchgfx3HAL18setRenderingMethodENS0_15RenderingMethodE>
 8011de2:	4620      	mov	r0, r4
 8011de4:	f7ff fd8c 	bl	8011900 <_ZN8touchgfx3HAL20getClientFrameBufferEv>
 8011de8:	bd10      	pop	{r4, pc}
 8011dea:	bf00      	nop
 8011dec:	2001381a 	.word	0x2001381a

08011df0 <_ZN8touchgfx3HAL33lockFrameBufferForRenderingMethodENS0_15RenderingMethodE>:
 8011df0:	b570      	push	{r4, r5, r6, lr}
 8011df2:	4604      	mov	r4, r0
 8011df4:	6803      	ldr	r3, [r0, #0]
 8011df6:	b919      	cbnz	r1, 8011e00 <_ZN8touchgfx3HAL33lockFrameBufferForRenderingMethodENS0_15RenderingMethodE+0x10>
 8011df8:	6a9b      	ldr	r3, [r3, #40]	; 0x28
 8011dfa:	e8bd 4070 	ldmia.w	sp!, {r4, r5, r6, lr}
 8011dfe:	4718      	bx	r3
 8011e00:	2200      	movs	r2, #0
 8011e02:	f890 607b 	ldrb.w	r6, [r0, #123]	; 0x7b
 8011e06:	f880 207b 	strb.w	r2, [r0, #123]	; 0x7b
 8011e0a:	6a9b      	ldr	r3, [r3, #40]	; 0x28
 8011e0c:	4798      	blx	r3
 8011e0e:	6863      	ldr	r3, [r4, #4]
 8011e10:	2101      	movs	r1, #1
 8011e12:	4605      	mov	r5, r0
 8011e14:	7299      	strb	r1, [r3, #10]
 8011e16:	4620      	mov	r0, r4
 8011e18:	f884 607b 	strb.w	r6, [r4, #123]	; 0x7b
 8011e1c:	f7ff ffb8 	bl	8011d90 <_ZN8touchgfx3HAL18setRenderingMethodENS0_15RenderingMethodE>
 8011e20:	4628      	mov	r0, r5
 8011e22:	bd70      	pop	{r4, r5, r6, pc}

08011e24 <_ZN8touchgfx17LockFreeDMA_Queue7isEmptyEv>:
 8011e24:	e9d0 2003 	ldrd	r2, r0, [r0, #12]
 8011e28:	1a13      	subs	r3, r2, r0
 8011e2a:	4258      	negs	r0, r3
 8011e2c:	4158      	adcs	r0, r3
 8011e2e:	4770      	bx	lr

08011e30 <_ZN8touchgfx17LockFreeDMA_Queue6isFullEv>:
 8011e30:	e9d0 2303 	ldrd	r2, r3, [r0, #12]
 8011e34:	1a9b      	subs	r3, r3, r2
 8011e36:	2b00      	cmp	r3, #0
 8011e38:	bfdc      	itt	le
 8011e3a:	6882      	ldrle	r2, [r0, #8]
 8011e3c:	189b      	addle	r3, r3, r2
 8011e3e:	2b01      	cmp	r3, #1
 8011e40:	bfcc      	ite	gt
 8011e42:	2000      	movgt	r0, #0
 8011e44:	2001      	movle	r0, #1
 8011e46:	4770      	bx	lr

08011e48 <_ZN8touchgfx17LockFreeDMA_Queue5firstEv>:
 8011e48:	6902      	ldr	r2, [r0, #16]
 8011e4a:	6843      	ldr	r3, [r0, #4]
 8011e4c:	2024      	movs	r0, #36	; 0x24
 8011e4e:	fb00 3002 	mla	r0, r0, r2, r3
 8011e52:	4770      	bx	lr

08011e54 <_ZN8touchgfx13DMA_Interface13seedExecutionEv>:
 8011e54:	6803      	ldr	r3, [r0, #0]
 8011e56:	691b      	ldr	r3, [r3, #16]
 8011e58:	4718      	bx	r3

08011e5a <_ZN8touchgfx13DMA_Interface7executeEv>:
 8011e5a:	b570      	push	{r4, r5, r6, lr}
 8011e5c:	2301      	movs	r3, #1
 8011e5e:	7203      	strb	r3, [r0, #8]
 8011e60:	4604      	mov	r4, r0
 8011e62:	6840      	ldr	r0, [r0, #4]
 8011e64:	6803      	ldr	r3, [r0, #0]
 8011e66:	699b      	ldr	r3, [r3, #24]
 8011e68:	4798      	blx	r3
 8011e6a:	6803      	ldr	r3, [r0, #0]
 8011e6c:	2b40      	cmp	r3, #64	; 0x40
 8011e6e:	4605      	mov	r5, r0
 8011e70:	d00c      	beq.n	8011e8c <_ZN8touchgfx13DMA_Interface7executeEv+0x32>
 8011e72:	d810      	bhi.n	8011e96 <_ZN8touchgfx13DMA_Interface7executeEv+0x3c>
 8011e74:	2b04      	cmp	r3, #4
 8011e76:	d01d      	beq.n	8011eb4 <_ZN8touchgfx13DMA_Interface7executeEv+0x5a>
 8011e78:	d804      	bhi.n	8011e84 <_ZN8touchgfx13DMA_Interface7executeEv+0x2a>
 8011e7a:	2b01      	cmp	r3, #1
 8011e7c:	d006      	beq.n	8011e8c <_ZN8touchgfx13DMA_Interface7executeEv+0x32>
 8011e7e:	2b02      	cmp	r3, #2
 8011e80:	d02c      	beq.n	8011edc <_ZN8touchgfx13DMA_Interface7executeEv+0x82>
 8011e82:	bd70      	pop	{r4, r5, r6, pc}
 8011e84:	2b08      	cmp	r3, #8
 8011e86:	d01d      	beq.n	8011ec4 <_ZN8touchgfx13DMA_Interface7executeEv+0x6a>
 8011e88:	2b20      	cmp	r3, #32
 8011e8a:	d1fa      	bne.n	8011e82 <_ZN8touchgfx13DMA_Interface7executeEv+0x28>
 8011e8c:	6823      	ldr	r3, [r4, #0]
 8011e8e:	4620      	mov	r0, r4
 8011e90:	6bdb      	ldr	r3, [r3, #60]	; 0x3c
 8011e92:	4798      	blx	r3
 8011e94:	e013      	b.n	8011ebe <_ZN8touchgfx13DMA_Interface7executeEv+0x64>
 8011e96:	f5b3 7f00 	cmp.w	r3, #512	; 0x200
 8011e9a:	d0f7      	beq.n	8011e8c <_ZN8touchgfx13DMA_Interface7executeEv+0x32>
 8011e9c:	d804      	bhi.n	8011ea8 <_ZN8touchgfx13DMA_Interface7executeEv+0x4e>
 8011e9e:	2b80      	cmp	r3, #128	; 0x80
 8011ea0:	d0f4      	beq.n	8011e8c <_ZN8touchgfx13DMA_Interface7executeEv+0x32>
 8011ea2:	f5b3 7f80 	cmp.w	r3, #256	; 0x100
 8011ea6:	e7f0      	b.n	8011e8a <_ZN8touchgfx13DMA_Interface7executeEv+0x30>
 8011ea8:	f5b3 6f80 	cmp.w	r3, #1024	; 0x400
 8011eac:	d0ee      	beq.n	8011e8c <_ZN8touchgfx13DMA_Interface7executeEv+0x32>
 8011eae:	f5b3 6f00 	cmp.w	r3, #2048	; 0x800
 8011eb2:	e7e5      	b.n	8011e80 <_ZN8touchgfx13DMA_Interface7executeEv+0x26>
 8011eb4:	6823      	ldr	r3, [r4, #0]
 8011eb6:	7f01      	ldrb	r1, [r0, #28]
 8011eb8:	6b9b      	ldr	r3, [r3, #56]	; 0x38
 8011eba:	4620      	mov	r0, r4
 8011ebc:	4798      	blx	r3
 8011ebe:	6823      	ldr	r3, [r4, #0]
 8011ec0:	6b1b      	ldr	r3, [r3, #48]	; 0x30
 8011ec2:	e006      	b.n	8011ed2 <_ZN8touchgfx13DMA_Interface7executeEv+0x78>
 8011ec4:	6823      	ldr	r3, [r4, #0]
 8011ec6:	7f01      	ldrb	r1, [r0, #28]
 8011ec8:	6b9b      	ldr	r3, [r3, #56]	; 0x38
 8011eca:	4620      	mov	r0, r4
 8011ecc:	4798      	blx	r3
 8011ece:	6823      	ldr	r3, [r4, #0]
 8011ed0:	6b5b      	ldr	r3, [r3, #52]	; 0x34
 8011ed2:	4629      	mov	r1, r5
 8011ed4:	4620      	mov	r0, r4
 8011ed6:	e8bd 4070 	ldmia.w	sp!, {r4, r5, r6, lr}
 8011eda:	4718      	bx	r3
 8011edc:	6823      	ldr	r3, [r4, #0]
 8011ede:	4620      	mov	r0, r4
 8011ee0:	6bdb      	ldr	r3, [r3, #60]	; 0x3c
 8011ee2:	4798      	blx	r3
 8011ee4:	e7f3      	b.n	8011ece <_ZN8touchgfx13DMA_Interface7executeEv+0x74>

08011ee6 <_ZN8touchgfx13DMA_Interface11enableAlphaEh>:
 8011ee6:	4770      	bx	lr

08011ee8 <_ZN8touchgfx13DMA_Interface12disableAlphaEv>:
 8011ee8:	4770      	bx	lr

08011eea <_ZN8touchgfx17LockFreeDMA_QueueD1Ev>:
 8011eea:	4770      	bx	lr

08011eec <_ZN8touchgfx17LockFreeDMA_Queue10pushCopyOfERKNS_6BlitOpE>:
 8011eec:	e9d0 3203 	ldrd	r3, r2, [r0, #12]
 8011ef0:	1ad2      	subs	r2, r2, r3
 8011ef2:	2a00      	cmp	r2, #0
 8011ef4:	b510      	push	{r4, lr}
 8011ef6:	bfdc      	itt	le
 8011ef8:	6884      	ldrle	r4, [r0, #8]
 8011efa:	1912      	addle	r2, r2, r4
 8011efc:	2a01      	cmp	r2, #1
 8011efe:	dd16      	ble.n	8011f2e <_ZN8touchgfx17LockFreeDMA_Queue10pushCopyOfERKNS_6BlitOpE+0x42>
 8011f00:	6842      	ldr	r2, [r0, #4]
 8011f02:	2424      	movs	r4, #36	; 0x24
 8011f04:	fb04 2303 	mla	r3, r4, r3, r2
 8011f08:	f101 0220 	add.w	r2, r1, #32
 8011f0c:	f851 4b04 	ldr.w	r4, [r1], #4
 8011f10:	f843 4b04 	str.w	r4, [r3], #4
 8011f14:	4291      	cmp	r1, r2
 8011f16:	d1f9      	bne.n	8011f0c <_ZN8touchgfx17LockFreeDMA_Queue10pushCopyOfERKNS_6BlitOpE+0x20>
 8011f18:	780a      	ldrb	r2, [r1, #0]
 8011f1a:	701a      	strb	r2, [r3, #0]
 8011f1c:	68c3      	ldr	r3, [r0, #12]
 8011f1e:	6882      	ldr	r2, [r0, #8]
 8011f20:	f3bf 8f5b 	dmb	ish
 8011f24:	3301      	adds	r3, #1
 8011f26:	429a      	cmp	r2, r3
 8011f28:	bfd8      	it	le
 8011f2a:	1a9b      	suble	r3, r3, r2
 8011f2c:	60c3      	str	r3, [r0, #12]
 8011f2e:	bd10      	pop	{r4, pc}

08011f30 <_ZN8touchgfx17LockFreeDMA_Queue3popEv>:
 8011f30:	6903      	ldr	r3, [r0, #16]
 8011f32:	6882      	ldr	r2, [r0, #8]
 8011f34:	f3bf 8f5b 	dmb	ish
 8011f38:	3301      	adds	r3, #1
 8011f3a:	429a      	cmp	r2, r3
 8011f3c:	bfd8      	it	le
 8011f3e:	1a9b      	suble	r3, r3, r2
 8011f40:	6103      	str	r3, [r0, #16]
 8011f42:	4770      	bx	lr

08011f44 <_ZN8touchgfx13DMA_Interface10addToQueueERKNS_6BlitOpE>:
 8011f44:	b570      	push	{r4, r5, r6, lr}
 8011f46:	4604      	mov	r4, r0
 8011f48:	460e      	mov	r6, r1
 8011f4a:	6860      	ldr	r0, [r4, #4]
 8011f4c:	6803      	ldr	r3, [r0, #0]
 8011f4e:	685b      	ldr	r3, [r3, #4]
 8011f50:	4798      	blx	r3
 8011f52:	2800      	cmp	r0, #0
 8011f54:	d1f9      	bne.n	8011f4a <_ZN8touchgfx13DMA_Interface10addToQueueERKNS_6BlitOpE+0x6>
 8011f56:	4d0d      	ldr	r5, [pc, #52]	; (8011f8c <_ZN8touchgfx13DMA_Interface10addToQueueERKNS_6BlitOpE+0x48>)
 8011f58:	6828      	ldr	r0, [r5, #0]
 8011f5a:	6803      	ldr	r3, [r0, #0]
 8011f5c:	6fdb      	ldr	r3, [r3, #124]	; 0x7c
 8011f5e:	4798      	blx	r3
 8011f60:	f7f0 f880 	bl	8002064 <_ZN8touchgfx10OSWrappers27tryTakeFrameBufferSemaphoreEv>
 8011f64:	6828      	ldr	r0, [r5, #0]
 8011f66:	2101      	movs	r1, #1
 8011f68:	f7ff ff12 	bl	8011d90 <_ZN8touchgfx3HAL18setRenderingMethodENS0_15RenderingMethodE>
 8011f6c:	6860      	ldr	r0, [r4, #4]
 8011f6e:	6803      	ldr	r3, [r0, #0]
 8011f70:	4631      	mov	r1, r6
 8011f72:	689b      	ldr	r3, [r3, #8]
 8011f74:	4798      	blx	r3
 8011f76:	6823      	ldr	r3, [r4, #0]
 8011f78:	4620      	mov	r0, r4
 8011f7a:	6adb      	ldr	r3, [r3, #44]	; 0x2c
 8011f7c:	4798      	blx	r3
 8011f7e:	6828      	ldr	r0, [r5, #0]
 8011f80:	6803      	ldr	r3, [r0, #0]
 8011f82:	e8bd 4070 	ldmia.w	sp!, {r4, r5, r6, lr}
 8011f86:	6f9b      	ldr	r3, [r3, #120]	; 0x78
 8011f88:	4718      	bx	r3
 8011f8a:	bf00      	nop
 8011f8c:	2001381c 	.word	0x2001381c

08011f90 <_ZN8touchgfx13DMA_Interface27waitForFrameBufferSemaphoreEv>:
 8011f90:	b508      	push	{r3, lr}
 8011f92:	f7f0 f859 	bl	8002048 <_ZN8touchgfx10OSWrappers24takeFrameBufferSemaphoreEv>
 8011f96:	e8bd 4008 	ldmia.w	sp!, {r3, lr}
 8011f9a:	f7f0 b85d 	b.w	8002058 <_ZN8touchgfx10OSWrappers24giveFrameBufferSemaphoreEv>

08011f9e <_ZN8touchgfx17LockFreeDMA_QueueD0Ev>:
 8011f9e:	b510      	push	{r4, lr}
 8011fa0:	2114      	movs	r1, #20
 8011fa2:	4604      	mov	r4, r0
 8011fa4:	f018 fbc9 	bl	802a73a <_ZdlPvj>
 8011fa8:	4620      	mov	r0, r4
 8011faa:	bd10      	pop	{r4, pc}

08011fac <_ZN8touchgfx13DMA_Interface5startEv>:
 8011fac:	b510      	push	{r4, lr}
 8011fae:	4604      	mov	r4, r0
 8011fb0:	6840      	ldr	r0, [r0, #4]
 8011fb2:	6803      	ldr	r3, [r0, #0]
 8011fb4:	681b      	ldr	r3, [r3, #0]
 8011fb6:	4798      	blx	r3
 8011fb8:	b948      	cbnz	r0, 8011fce <_ZN8touchgfx13DMA_Interface5startEv+0x22>
 8011fba:	7a63      	ldrb	r3, [r4, #9]
 8011fbc:	b13b      	cbz	r3, 8011fce <_ZN8touchgfx13DMA_Interface5startEv+0x22>
 8011fbe:	7a23      	ldrb	r3, [r4, #8]
 8011fc0:	b92b      	cbnz	r3, 8011fce <_ZN8touchgfx13DMA_Interface5startEv+0x22>
 8011fc2:	6823      	ldr	r3, [r4, #0]
 8011fc4:	4620      	mov	r0, r4
 8011fc6:	6a5b      	ldr	r3, [r3, #36]	; 0x24
 8011fc8:	e8bd 4010 	ldmia.w	sp!, {r4, lr}
 8011fcc:	4718      	bx	r3
 8011fce:	bd10      	pop	{r4, pc}

08011fd0 <_ZN8touchgfx13DMA_Interface16executeCompletedEv>:
 8011fd0:	b570      	push	{r4, r5, r6, lr}
 8011fd2:	4604      	mov	r4, r0
 8011fd4:	6840      	ldr	r0, [r0, #4]
 8011fd6:	6803      	ldr	r3, [r0, #0]
 8011fd8:	681b      	ldr	r3, [r3, #0]
 8011fda:	4798      	blx	r3
 8011fdc:	4605      	mov	r5, r0
 8011fde:	b930      	cbnz	r0, 8011fee <_ZN8touchgfx13DMA_Interface16executeCompletedEv+0x1e>
 8011fe0:	7a23      	ldrb	r3, [r4, #8]
 8011fe2:	b123      	cbz	r3, 8011fee <_ZN8touchgfx13DMA_Interface16executeCompletedEv+0x1e>
 8011fe4:	6860      	ldr	r0, [r4, #4]
 8011fe6:	6803      	ldr	r3, [r0, #0]
 8011fe8:	695b      	ldr	r3, [r3, #20]
 8011fea:	4798      	blx	r3
 8011fec:	7225      	strb	r5, [r4, #8]
 8011fee:	6860      	ldr	r0, [r4, #4]
 8011ff0:	6803      	ldr	r3, [r0, #0]
 8011ff2:	681b      	ldr	r3, [r3, #0]
 8011ff4:	4798      	blx	r3
 8011ff6:	b928      	cbnz	r0, 8012004 <_ZN8touchgfx13DMA_Interface16executeCompletedEv+0x34>
 8011ff8:	6823      	ldr	r3, [r4, #0]
 8011ffa:	4620      	mov	r0, r4
 8011ffc:	6a5b      	ldr	r3, [r3, #36]	; 0x24
 8011ffe:	e8bd 4070 	ldmia.w	sp!, {r4, r5, r6, lr}
 8012002:	4718      	bx	r3
 8012004:	e8bd 4070 	ldmia.w	sp!, {r4, r5, r6, lr}
 8012008:	f7f0 b834 	b.w	8002074 <_ZN8touchgfx10OSWrappers31giveFrameBufferSemaphoreFromISREv>

0801200c <_ZN8touchgfx17LockFreeDMA_QueueC1EPNS_6BlitOpEi>:
 801200c:	b510      	push	{r4, lr}
 801200e:	4c04      	ldr	r4, [pc, #16]	; (8012020 <_ZN8touchgfx17LockFreeDMA_QueueC1EPNS_6BlitOpEi+0x14>)
 8012010:	6082      	str	r2, [r0, #8]
 8012012:	2200      	movs	r2, #0
 8012014:	e9c0 4100 	strd	r4, r1, [r0]
 8012018:	e9c0 2203 	strd	r2, r2, [r0, #12]
 801201c:	bd10      	pop	{r4, pc}
 801201e:	bf00      	nop
 8012020:	0802f154 	.word	0x0802f154

08012024 <_ZN8touchgfx13DMA_Interface15isDmaQueueEmptyEv>:
 8012024:	6840      	ldr	r0, [r0, #4]
 8012026:	6803      	ldr	r3, [r0, #0]
 8012028:	681b      	ldr	r3, [r3, #0]
 801202a:	4718      	bx	r3

0801202c <_ZN8touchgfx13PainterRGB5658setColorENS_9colortypeE>:
 801202c:	4b06      	ldr	r3, [pc, #24]	; (8012048 <_ZN8touchgfx13PainterRGB5658setColorENS_9colortypeE+0x1c>)
 801202e:	60c1      	str	r1, [r0, #12]
 8012030:	094a      	lsrs	r2, r1, #5
 8012032:	ea03 2311 	and.w	r3, r3, r1, lsr #8
 8012036:	f402 62fc 	and.w	r2, r2, #2016	; 0x7e0
 801203a:	4313      	orrs	r3, r2
 801203c:	f3c1 01c4 	ubfx	r1, r1, #3, #5
 8012040:	4319      	orrs	r1, r3
 8012042:	8201      	strh	r1, [r0, #16]
 8012044:	4770      	bx	lr
 8012046:	bf00      	nop
 8012048:	fffff800 	.word	0xfffff800

0801204c <_ZThn8_N8touchgfx13PainterRGB5658setColorENS_9colortypeE>:
 801204c:	f1a0 0008 	sub.w	r0, r0, #8
 8012050:	e7ec      	b.n	801202c <_ZN8touchgfx13PainterRGB5658setColorENS_9colortypeE>
 8012052:	bf00      	nop

08012054 <_ZNK8touchgfx13PainterRGB56518getRenderingMethodEv>:
 8012054:	b508      	push	{r3, lr}
 8012056:	4b05      	ldr	r3, [pc, #20]	; (801206c <_ZNK8touchgfx13PainterRGB56518getRenderingMethodEv+0x18>)
 8012058:	6818      	ldr	r0, [r3, #0]
 801205a:	6803      	ldr	r3, [r0, #0]
 801205c:	f8d3 30a0 	ldr.w	r3, [r3, #160]	; 0xa0
 8012060:	4798      	blx	r3
 8012062:	1e43      	subs	r3, r0, #1
 8012064:	4258      	negs	r0, r3
 8012066:	4158      	adcs	r0, r3
 8012068:	bd08      	pop	{r3, pc}
 801206a:	bf00      	nop
 801206c:	2001381c 	.word	0x2001381c

08012070 <_ZN8touchgfx13PainterRGB565D1Ev>:
 8012070:	4770      	bx	lr

08012072 <_ZThn8_N8touchgfx13PainterRGB565D1Ev>:
 8012072:	3808      	subs	r0, #8
 8012074:	4770      	bx	lr

08012076 <_ZNK8touchgfx13PainterRGB5655paintEPhssssh>:
 8012076:	b430      	push	{r4, r5}
 8012078:	eb01 0442 	add.w	r4, r1, r2, lsl #1
 801207c:	f9bd 500c 	ldrsh.w	r5, [sp, #12]
 8012080:	8a02      	ldrh	r2, [r0, #16]
 8012082:	9202      	str	r2, [sp, #8]
 8012084:	f89d 3010 	ldrb.w	r3, [sp, #16]
 8012088:	68c2      	ldr	r2, [r0, #12]
 801208a:	4629      	mov	r1, r5
 801208c:	4620      	mov	r0, r4
 801208e:	bc30      	pop	{r4, r5}
 8012090:	f7f0 bab4 	b.w	80025fc <_ZN8touchgfx5paint6rgb56513lineFromColorEPtjmhm>

08012094 <_ZNK8touchgfx13PainterRGB5658tearDownEv>:
 8012094:	f7f0 bab0 	b.w	80025f8 <_ZN8touchgfx5paint8tearDownEv>

08012098 <_ZN8touchgfx13PainterRGB565D0Ev>:
 8012098:	b510      	push	{r4, lr}
 801209a:	2114      	movs	r1, #20
 801209c:	4604      	mov	r4, r0
 801209e:	f018 fb4c 	bl	802a73a <_ZdlPvj>
 80120a2:	4620      	mov	r0, r4
 80120a4:	bd10      	pop	{r4, pc}

080120a6 <_ZThn8_N8touchgfx13PainterRGB565D0Ev>:
 80120a6:	f1a0 0008 	sub.w	r0, r0, #8
 80120aa:	e7f5      	b.n	8012098 <_ZN8touchgfx13PainterRGB565D0Ev>

080120ac <_ZNK8touchgfx12CanvasWidget4drawERKNS_4RectE>:
 80120ac:	b57f      	push	{r0, r1, r2, r3, r4, r5, r6, lr}
 80120ae:	6803      	ldr	r3, [r0, #0]
 80120b0:	460d      	mov	r5, r1
 80120b2:	4604      	mov	r4, r0
 80120b4:	4601      	mov	r1, r0
 80120b6:	6e9b      	ldr	r3, [r3, #104]	; 0x68
 80120b8:	a802      	add	r0, sp, #8
 80120ba:	4798      	blx	r3
 80120bc:	6828      	ldr	r0, [r5, #0]
 80120be:	6869      	ldr	r1, [r5, #4]
 80120c0:	466b      	mov	r3, sp
 80120c2:	c303      	stmia	r3!, {r0, r1}
 80120c4:	4668      	mov	r0, sp
 80120c6:	4619      	mov	r1, r3
 80120c8:	f7fe fb30 	bl	801072c <_ZN8touchgfx4RectaNERKS0_>
 80120cc:	6aa0      	ldr	r0, [r4, #40]	; 0x28
 80120ce:	b188      	cbz	r0, 80120f4 <_ZNK8touchgfx12CanvasWidget4drawERKNS_4RectE+0x48>
 80120d0:	6803      	ldr	r3, [r0, #0]
 80120d2:	1d21      	adds	r1, r4, #4
 80120d4:	68db      	ldr	r3, [r3, #12]
 80120d6:	4798      	blx	r3
 80120d8:	b160      	cbz	r0, 80120f4 <_ZNK8touchgfx12CanvasWidget4drawERKNS_4RectE+0x48>
 80120da:	f9bd 3004 	ldrsh.w	r3, [sp, #4]
 80120de:	2b00      	cmp	r3, #0
 80120e0:	dd08      	ble.n	80120f4 <_ZNK8touchgfx12CanvasWidget4drawERKNS_4RectE+0x48>
 80120e2:	f9bd 5006 	ldrsh.w	r5, [sp, #6]
 80120e6:	2d00      	cmp	r5, #0
 80120e8:	dd04      	ble.n	80120f4 <_ZNK8touchgfx12CanvasWidget4drawERKNS_4RectE+0x48>
 80120ea:	4a2b      	ldr	r2, [pc, #172]	; (8012198 <_ZNK8touchgfx12CanvasWidget4drawERKNS_4RectE+0xec>)
 80120ec:	7812      	ldrb	r2, [r2, #0]
 80120ee:	b11a      	cbz	r2, 80120f8 <_ZNK8touchgfx12CanvasWidget4drawERKNS_4RectE+0x4c>
 80120f0:	2a01      	cmp	r2, #1
 80120f2:	d029      	beq.n	8012148 <_ZNK8touchgfx12CanvasWidget4drawERKNS_4RectE+0x9c>
 80120f4:	b004      	add	sp, #16
 80120f6:	bd70      	pop	{r4, r5, r6, pc}
 80120f8:	f8bd 3002 	ldrh.w	r3, [sp, #2]
 80120fc:	441d      	add	r5, r3
 80120fe:	b2ad      	uxth	r5, r5
 8012100:	b22e      	sxth	r6, r5
 8012102:	f9bd 3002 	ldrsh.w	r3, [sp, #2]
 8012106:	42b3      	cmp	r3, r6
 8012108:	daf4      	bge.n	80120f4 <_ZNK8touchgfx12CanvasWidget4drawERKNS_4RectE+0x48>
 801210a:	6823      	ldr	r3, [r4, #0]
 801210c:	4669      	mov	r1, sp
 801210e:	6edb      	ldr	r3, [r3, #108]	; 0x6c
 8012110:	4620      	mov	r0, r4
 8012112:	4798      	blx	r3
 8012114:	b940      	cbnz	r0, 8012128 <_ZNK8touchgfx12CanvasWidget4drawERKNS_4RectE+0x7c>
 8012116:	f9bd 3006 	ldrsh.w	r3, [sp, #6]
 801211a:	2b01      	cmp	r3, #1
 801211c:	d004      	beq.n	8012128 <_ZNK8touchgfx12CanvasWidget4drawERKNS_4RectE+0x7c>
 801211e:	3301      	adds	r3, #1
 8012120:	105b      	asrs	r3, r3, #1
 8012122:	f8ad 3006 	strh.w	r3, [sp, #6]
 8012126:	e7f0      	b.n	801210a <_ZNK8touchgfx12CanvasWidget4drawERKNS_4RectE+0x5e>
 8012128:	f8bd 2006 	ldrh.w	r2, [sp, #6]
 801212c:	f8bd 3002 	ldrh.w	r3, [sp, #2]
 8012130:	4413      	add	r3, r2
 8012132:	b29b      	uxth	r3, r3
 8012134:	441a      	add	r2, r3
 8012136:	b212      	sxth	r2, r2
 8012138:	4296      	cmp	r6, r2
 801213a:	f8ad 3002 	strh.w	r3, [sp, #2]
 801213e:	dae0      	bge.n	8012102 <_ZNK8touchgfx12CanvasWidget4drawERKNS_4RectE+0x56>
 8012140:	1aeb      	subs	r3, r5, r3
 8012142:	f8ad 3006 	strh.w	r3, [sp, #6]
 8012146:	e7dc      	b.n	8012102 <_ZNK8touchgfx12CanvasWidget4drawERKNS_4RectE+0x56>
 8012148:	f8bd 5000 	ldrh.w	r5, [sp]
 801214c:	441d      	add	r5, r3
 801214e:	b2ad      	uxth	r5, r5
 8012150:	b22e      	sxth	r6, r5
 8012152:	f9bd 3000 	ldrsh.w	r3, [sp]
 8012156:	42b3      	cmp	r3, r6
 8012158:	dacc      	bge.n	80120f4 <_ZNK8touchgfx12CanvasWidget4drawERKNS_4RectE+0x48>
 801215a:	6823      	ldr	r3, [r4, #0]
 801215c:	4669      	mov	r1, sp
 801215e:	6edb      	ldr	r3, [r3, #108]	; 0x6c
 8012160:	4620      	mov	r0, r4
 8012162:	4798      	blx	r3
 8012164:	b940      	cbnz	r0, 8012178 <_ZNK8touchgfx12CanvasWidget4drawERKNS_4RectE+0xcc>
 8012166:	f9bd 3004 	ldrsh.w	r3, [sp, #4]
 801216a:	2b01      	cmp	r3, #1
 801216c:	d004      	beq.n	8012178 <_ZNK8touchgfx12CanvasWidget4drawERKNS_4RectE+0xcc>
 801216e:	3301      	adds	r3, #1
 8012170:	105b      	asrs	r3, r3, #1
 8012172:	f8ad 3004 	strh.w	r3, [sp, #4]
 8012176:	e7f0      	b.n	801215a <_ZNK8touchgfx12CanvasWidget4drawERKNS_4RectE+0xae>
 8012178:	f8bd 2004 	ldrh.w	r2, [sp, #4]
 801217c:	f8bd 3000 	ldrh.w	r3, [sp]
 8012180:	4413      	add	r3, r2
 8012182:	b29b      	uxth	r3, r3
 8012184:	441a      	add	r2, r3
 8012186:	b212      	sxth	r2, r2
 8012188:	4296      	cmp	r6, r2
 801218a:	f8ad 3000 	strh.w	r3, [sp]
 801218e:	dae0      	bge.n	8012152 <_ZNK8touchgfx12CanvasWidget4drawERKNS_4RectE+0xa6>
 8012190:	1aeb      	subs	r3, r5, r3
 8012192:	f8ad 3004 	strh.w	r3, [sp, #4]
 8012196:	e7dc      	b.n	8012152 <_ZNK8touchgfx12CanvasWidget4drawERKNS_4RectE+0xa6>
 8012198:	20013814 	.word	0x20013814

0801219c <_ZNK8touchgfx12CanvasWidget10invalidateEv>:
 801219c:	b51f      	push	{r0, r1, r2, r3, r4, lr}
 801219e:	6803      	ldr	r3, [r0, #0]
 80121a0:	4604      	mov	r4, r0
 80121a2:	4601      	mov	r1, r0
 80121a4:	6e9b      	ldr	r3, [r3, #104]	; 0x68
 80121a6:	4668      	mov	r0, sp
 80121a8:	4798      	blx	r3
 80121aa:	2100      	movs	r1, #0
 80121ac:	f9b4 2008 	ldrsh.w	r2, [r4, #8]
 80121b0:	f9b4 300a 	ldrsh.w	r3, [r4, #10]
 80121b4:	9102      	str	r1, [sp, #8]
 80121b6:	4668      	mov	r0, sp
 80121b8:	a902      	add	r1, sp, #8
 80121ba:	f8ad 200c 	strh.w	r2, [sp, #12]
 80121be:	f8ad 300e 	strh.w	r3, [sp, #14]
 80121c2:	f7fe fab3 	bl	801072c <_ZN8touchgfx4RectaNERKS0_>
 80121c6:	6823      	ldr	r3, [r4, #0]
 80121c8:	4669      	mov	r1, sp
 80121ca:	691b      	ldr	r3, [r3, #16]
 80121cc:	4620      	mov	r0, r4
 80121ce:	4798      	blx	r3
 80121d0:	b004      	add	sp, #16
 80121d2:	bd10      	pop	{r4, pc}

080121d4 <_ZN8touchgfx12CanvasWidgetC1Ev>:
 80121d4:	2101      	movs	r1, #1
 80121d6:	f880 1025 	strb.w	r1, [r0, #37]	; 0x25
 80121da:	490b      	ldr	r1, [pc, #44]	; (8012208 <_ZN8touchgfx12CanvasWidgetC1Ev+0x34>)
 80121dc:	6001      	str	r1, [r0, #0]
 80121de:	2200      	movs	r2, #0
 80121e0:	21ff      	movs	r1, #255	; 0xff
 80121e2:	8082      	strh	r2, [r0, #4]
 80121e4:	80c2      	strh	r2, [r0, #6]
 80121e6:	8102      	strh	r2, [r0, #8]
 80121e8:	8142      	strh	r2, [r0, #10]
 80121ea:	8182      	strh	r2, [r0, #12]
 80121ec:	81c2      	strh	r2, [r0, #14]
 80121ee:	8202      	strh	r2, [r0, #16]
 80121f0:	8242      	strh	r2, [r0, #18]
 80121f2:	e9c0 2205 	strd	r2, r2, [r0, #20]
 80121f6:	61c2      	str	r2, [r0, #28]
 80121f8:	8402      	strh	r2, [r0, #32]
 80121fa:	8442      	strh	r2, [r0, #34]	; 0x22
 80121fc:	f880 2024 	strb.w	r2, [r0, #36]	; 0x24
 8012200:	f880 1026 	strb.w	r1, [r0, #38]	; 0x26
 8012204:	6282      	str	r2, [r0, #40]	; 0x28
 8012206:	4770      	bx	lr
 8012208:	0802f1b0 	.word	0x0802f1b0

0801220c <_ZNK8touchgfx4Line14getMinimalRectEv>:
 801220c:	f101 0364 	add.w	r3, r1, #100	; 0x64
 8012210:	4602      	mov	r2, r0
 8012212:	cb03      	ldmia	r3!, {r0, r1}
 8012214:	6010      	str	r0, [r2, #0]
 8012216:	6051      	str	r1, [r2, #4]
 8012218:	4610      	mov	r0, r2
 801221a:	4770      	bx	lr

0801221c <_ZN8touchgfx4LineD1Ev>:
 801221c:	4770      	bx	lr

0801221e <_ZN8touchgfx4LineD0Ev>:
 801221e:	b510      	push	{r4, lr}
 8012220:	2170      	movs	r1, #112	; 0x70
 8012222:	4604      	mov	r4, r0
 8012224:	f018 fa89 	bl	802a73a <_ZdlPvj>
 8012228:	4620      	mov	r0, r4
 801222a:	bd10      	pop	{r4, pc}

0801222c <_ZNK8touchgfx7CWRUtil2Q5mlERKNS0_3Q15E>:
 801222c:	b507      	push	{r0, r1, r2, lr}
 801222e:	f44f 4200 	mov.w	r2, #32768	; 0x8000
 8012232:	ab01      	add	r3, sp, #4
 8012234:	6809      	ldr	r1, [r1, #0]
 8012236:	6800      	ldr	r0, [r0, #0]
 8012238:	f005 fc80 	bl	8017b3c <_ZN8touchgfx6muldivElllRl>
 801223c:	b003      	add	sp, #12
 801223e:	f85d fb04 	ldr.w	pc, [sp], #4

08012242 <_ZNK8touchgfx7CWRUtil2Q54ceilEv>:
 8012242:	6800      	ldr	r0, [r0, #0]
 8012244:	2800      	cmp	r0, #0
 8012246:	bfb9      	ittee	lt
 8012248:	2320      	movlt	r3, #32
 801224a:	fb90 f0f3 	sdivlt	r0, r0, r3
 801224e:	301f      	addge	r0, #31
 8012250:	1140      	asrge	r0, r0, #5
 8012252:	4770      	bx	lr

08012254 <_ZNK8touchgfx4Line17invalidateContentEv>:
 8012254:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 8012258:	f890 3026 	ldrb.w	r3, [r0, #38]	; 0x26
 801225c:	b089      	sub	sp, #36	; 0x24
 801225e:	4604      	mov	r4, r0
 8012260:	b353      	cbz	r3, 80122b8 <_ZNK8touchgfx4Line17invalidateContentEv+0x64>
 8012262:	6803      	ldr	r3, [r0, #0]
 8012264:	4601      	mov	r1, r0
 8012266:	6e9b      	ldr	r3, [r3, #104]	; 0x68
 8012268:	a802      	add	r0, sp, #8
 801226a:	4798      	blx	r3
 801226c:	2220      	movs	r2, #32
 801226e:	f8d4 a02c 	ldr.w	sl, [r4, #44]	; 0x2c
 8012272:	6b61      	ldr	r1, [r4, #52]	; 0x34
 8012274:	fb9a f0f2 	sdiv	r0, sl, r2
 8012278:	fb91 f5f2 	sdiv	r5, r1, r2
 801227c:	1b40      	subs	r0, r0, r5
 801227e:	2800      	cmp	r0, #0
 8012280:	6be3      	ldr	r3, [r4, #60]	; 0x3c
 8012282:	fb93 f6f2 	sdiv	r6, r3, r2
 8012286:	bfb8      	it	lt
 8012288:	4240      	neglt	r0, r0
 801228a:	0076      	lsls	r6, r6, #1
 801228c:	4286      	cmp	r6, r0
 801228e:	f8d4 b000 	ldr.w	fp, [r4]
 8012292:	dc0c      	bgt.n	80122ae <_ZNK8touchgfx4Line17invalidateContentEv+0x5a>
 8012294:	6b25      	ldr	r5, [r4, #48]	; 0x30
 8012296:	f8d4 8038 	ldr.w	r8, [r4, #56]	; 0x38
 801229a:	fb95 f0f2 	sdiv	r0, r5, r2
 801229e:	fb98 f7f2 	sdiv	r7, r8, r2
 80122a2:	1bc0      	subs	r0, r0, r7
 80122a4:	2800      	cmp	r0, #0
 80122a6:	bfb8      	it	lt
 80122a8:	4240      	neglt	r0, r0
 80122aa:	4286      	cmp	r6, r0
 80122ac:	dd07      	ble.n	80122be <_ZNK8touchgfx4Line17invalidateContentEv+0x6a>
 80122ae:	f8db 3010 	ldr.w	r3, [fp, #16]
 80122b2:	a902      	add	r1, sp, #8
 80122b4:	4620      	mov	r0, r4
 80122b6:	4798      	blx	r3
 80122b8:	b009      	add	sp, #36	; 0x24
 80122ba:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
 80122be:	3301      	adds	r3, #1
 80122c0:	2002      	movs	r0, #2
 80122c2:	f10d 0920 	add.w	r9, sp, #32
 80122c6:	eb03 0343 	add.w	r3, r3, r3, lsl #1
 80122ca:	4103      	asrs	r3, r0
 80122cc:	f849 3d08 	str.w	r3, [r9, #-8]!
 80122d0:	eb01 060a 	add.w	r6, r1, sl
 80122d4:	eb08 0705 	add.w	r7, r8, r5
 80122d8:	fb96 f6f0 	sdiv	r6, r6, r0
 80122dc:	fb97 f7f0 	sdiv	r7, r7, r0
 80122e0:	4648      	mov	r0, r9
 80122e2:	9101      	str	r1, [sp, #4]
 80122e4:	b236      	sxth	r6, r6
 80122e6:	b23f      	sxth	r7, r7
 80122e8:	fb96 f6f2 	sdiv	r6, r6, r2
 80122ec:	fb97 f7f2 	sdiv	r7, r7, r2
 80122f0:	f7ff ffa7 	bl	8012242 <_ZNK8touchgfx7CWRUtil2Q54ceilEv>
 80122f4:	f9bd 300c 	ldrsh.w	r3, [sp, #12]
 80122f8:	f9bd 200e 	ldrsh.w	r2, [sp, #14]
 80122fc:	9901      	ldr	r1, [sp, #4]
 80122fe:	4293      	cmp	r3, r2
 8012300:	fa1f fe87 	uxth.w	lr, r7
 8012304:	fa1f fc86 	uxth.w	ip, r6
 8012308:	eba1 0a0a 	sub.w	sl, r1, sl
 801230c:	b280      	uxth	r0, r0
 801230e:	da54      	bge.n	80123ba <_ZNK8touchgfx4Line17invalidateContentEv+0x166>
 8012310:	ebac 0100 	sub.w	r1, ip, r0
 8012314:	b289      	uxth	r1, r1
 8012316:	4460      	add	r0, ip
 8012318:	f1ba 0f00 	cmp.w	sl, #0
 801231c:	b20e      	sxth	r6, r1
 801231e:	b280      	uxth	r0, r0
 8012320:	f9bd a008 	ldrsh.w	sl, [sp, #8]
 8012324:	f9bd c00a 	ldrsh.w	ip, [sp, #10]
 8012328:	da29      	bge.n	801237e <_ZNK8touchgfx4Line17invalidateContentEv+0x12a>
 801232a:	eba8 0505 	sub.w	r5, r8, r5
 801232e:	2d00      	cmp	r5, #0
 8012330:	da2a      	bge.n	8012388 <_ZNK8touchgfx4Line17invalidateContentEv+0x134>
 8012332:	fa1f f88a 	uxth.w	r8, sl
 8012336:	eba0 0008 	sub.w	r0, r0, r8
 801233a:	fa1f f58c 	uxth.w	r5, ip
 801233e:	4443      	add	r3, r8
 8012340:	f8ad 0014 	strh.w	r0, [sp, #20]
 8012344:	1a59      	subs	r1, r3, r1
 8012346:	ebae 0005 	sub.w	r0, lr, r5
 801234a:	f8ad a010 	strh.w	sl, [sp, #16]
 801234e:	f8ad c012 	strh.w	ip, [sp, #18]
 8012352:	f8ad 0016 	strh.w	r0, [sp, #22]
 8012356:	f8ad 6018 	strh.w	r6, [sp, #24]
 801235a:	f8ad 701a 	strh.w	r7, [sp, #26]
 801235e:	f8ad 101c 	strh.w	r1, [sp, #28]
 8012362:	442a      	add	r2, r5
 8012364:	eba2 0e0e 	sub.w	lr, r2, lr
 8012368:	f8ad e01e 	strh.w	lr, [sp, #30]
 801236c:	f8db 3010 	ldr.w	r3, [fp, #16]
 8012370:	a904      	add	r1, sp, #16
 8012372:	4620      	mov	r0, r4
 8012374:	4798      	blx	r3
 8012376:	6823      	ldr	r3, [r4, #0]
 8012378:	4649      	mov	r1, r9
 801237a:	691b      	ldr	r3, [r3, #16]
 801237c:	e79a      	b.n	80122b4 <_ZNK8touchgfx4Line17invalidateContentEv+0x60>
 801237e:	d003      	beq.n	8012388 <_ZNK8touchgfx4Line17invalidateContentEv+0x134>
 8012380:	eba8 0505 	sub.w	r5, r8, r5
 8012384:	2d00      	cmp	r5, #0
 8012386:	dcd4      	bgt.n	8012332 <_ZNK8touchgfx4Line17invalidateContentEv+0xde>
 8012388:	fa1f f88a 	uxth.w	r8, sl
 801238c:	4443      	add	r3, r8
 801238e:	fa1f f58c 	uxth.w	r5, ip
 8012392:	1a59      	subs	r1, r3, r1
 8012394:	eba0 0008 	sub.w	r0, r0, r8
 8012398:	ebae 0305 	sub.w	r3, lr, r5
 801239c:	f8ad 6010 	strh.w	r6, [sp, #16]
 80123a0:	f8ad c012 	strh.w	ip, [sp, #18]
 80123a4:	f8ad 1014 	strh.w	r1, [sp, #20]
 80123a8:	f8ad 3016 	strh.w	r3, [sp, #22]
 80123ac:	f8ad a018 	strh.w	sl, [sp, #24]
 80123b0:	f8ad 701a 	strh.w	r7, [sp, #26]
 80123b4:	f8ad 001c 	strh.w	r0, [sp, #28]
 80123b8:	e7d3      	b.n	8012362 <_ZNK8touchgfx4Line17invalidateContentEv+0x10e>
 80123ba:	ebae 0100 	sub.w	r1, lr, r0
 80123be:	b289      	uxth	r1, r1
 80123c0:	4470      	add	r0, lr
 80123c2:	f1ba 0f00 	cmp.w	sl, #0
 80123c6:	b20f      	sxth	r7, r1
 80123c8:	b280      	uxth	r0, r0
 80123ca:	f9bd e008 	ldrsh.w	lr, [sp, #8]
 80123ce:	f9bd a00a 	ldrsh.w	sl, [sp, #10]
 80123d2:	da20      	bge.n	8012416 <_ZNK8touchgfx4Line17invalidateContentEv+0x1c2>
 80123d4:	eba8 0505 	sub.w	r5, r8, r5
 80123d8:	2d00      	cmp	r5, #0
 80123da:	da21      	bge.n	8012420 <_ZNK8touchgfx4Line17invalidateContentEv+0x1cc>
 80123dc:	fa1f f88e 	uxth.w	r8, lr
 80123e0:	fa1f f58a 	uxth.w	r5, sl
 80123e4:	4443      	add	r3, r8
 80123e6:	442a      	add	r2, r5
 80123e8:	f8ad e010 	strh.w	lr, [sp, #16]
 80123ec:	1b40      	subs	r0, r0, r5
 80123ee:	ebac 0e08 	sub.w	lr, ip, r8
 80123f2:	1a51      	subs	r1, r2, r1
 80123f4:	eba3 0c0c 	sub.w	ip, r3, ip
 80123f8:	f8ad a012 	strh.w	sl, [sp, #18]
 80123fc:	f8ad e014 	strh.w	lr, [sp, #20]
 8012400:	f8ad 0016 	strh.w	r0, [sp, #22]
 8012404:	f8ad 6018 	strh.w	r6, [sp, #24]
 8012408:	f8ad 701a 	strh.w	r7, [sp, #26]
 801240c:	f8ad c01c 	strh.w	ip, [sp, #28]
 8012410:	f8ad 101e 	strh.w	r1, [sp, #30]
 8012414:	e7aa      	b.n	801236c <_ZNK8touchgfx4Line17invalidateContentEv+0x118>
 8012416:	d003      	beq.n	8012420 <_ZNK8touchgfx4Line17invalidateContentEv+0x1cc>
 8012418:	eba8 0505 	sub.w	r5, r8, r5
 801241c:	2d00      	cmp	r5, #0
 801241e:	dcdd      	bgt.n	80123dc <_ZNK8touchgfx4Line17invalidateContentEv+0x188>
 8012420:	fa1f f58e 	uxth.w	r5, lr
 8012424:	fa1f f88a 	uxth.w	r8, sl
 8012428:	4442      	add	r2, r8
 801242a:	442b      	add	r3, r5
 801242c:	f8ad 7012 	strh.w	r7, [sp, #18]
 8012430:	1a51      	subs	r1, r2, r1
 8012432:	ebac 0705 	sub.w	r7, ip, r5
 8012436:	eba0 0008 	sub.w	r0, r0, r8
 801243a:	eba3 0c0c 	sub.w	ip, r3, ip
 801243e:	f8ad e010 	strh.w	lr, [sp, #16]
 8012442:	f8ad 7014 	strh.w	r7, [sp, #20]
 8012446:	f8ad 1016 	strh.w	r1, [sp, #22]
 801244a:	f8ad 6018 	strh.w	r6, [sp, #24]
 801244e:	f8ad a01a 	strh.w	sl, [sp, #26]
 8012452:	f8ad c01c 	strh.w	ip, [sp, #28]
 8012456:	f8ad 001e 	strh.w	r0, [sp, #30]
 801245a:	e787      	b.n	801236c <_ZNK8touchgfx4Line17invalidateContentEv+0x118>

0801245c <_ZN8touchgfx7CWRUtil4sineEi>:
 801245c:	f44f 73b4 	mov.w	r3, #360	; 0x168
 8012460:	fb90 f2f3 	sdiv	r2, r0, r3
 8012464:	fb02 0013 	mls	r0, r2, r3, r0
 8012468:	2800      	cmp	r0, #0
 801246a:	bfb8      	it	lt
 801246c:	18c0      	addlt	r0, r0, r3
 801246e:	285a      	cmp	r0, #90	; 0x5a
 8012470:	4b09      	ldr	r3, [pc, #36]	; (8012498 <_ZN8touchgfx7CWRUtil4sineEi+0x3c>)
 8012472:	dc02      	bgt.n	801247a <_ZN8touchgfx7CWRUtil4sineEi+0x1e>
 8012474:	f833 0010 	ldrh.w	r0, [r3, r0, lsl #1]
 8012478:	4770      	bx	lr
 801247a:	28b4      	cmp	r0, #180	; 0xb4
 801247c:	dc02      	bgt.n	8012484 <_ZN8touchgfx7CWRUtil4sineEi+0x28>
 801247e:	f1c0 00b4 	rsb	r0, r0, #180	; 0xb4
 8012482:	e7f7      	b.n	8012474 <_ZN8touchgfx7CWRUtil4sineEi+0x18>
 8012484:	f5b0 7f87 	cmp.w	r0, #270	; 0x10e
 8012488:	bfd4      	ite	le
 801248a:	38b4      	suble	r0, #180	; 0xb4
 801248c:	f5c0 70b4 	rsbgt	r0, r0, #360	; 0x168
 8012490:	f833 0010 	ldrh.w	r0, [r3, r0, lsl #1]
 8012494:	4240      	negs	r0, r0
 8012496:	4770      	bx	lr
 8012498:	0802f27c 	.word	0x0802f27c

0801249c <_ZN8touchgfx7CWRUtil4sineENS0_2Q5E>:
 801249c:	f44f 5334 	mov.w	r3, #11520	; 0x2d00
 80124a0:	b573      	push	{r0, r1, r4, r5, r6, lr}
 80124a2:	fb90 f2f3 	sdiv	r2, r0, r3
 80124a6:	fb02 0013 	mls	r0, r2, r3, r0
 80124aa:	2800      	cmp	r0, #0
 80124ac:	bfb8      	it	lt
 80124ae:	18c0      	addlt	r0, r0, r3
 80124b0:	1144      	asrs	r4, r0, #5
 80124b2:	f000 061f 	and.w	r6, r0, #31
 80124b6:	4620      	mov	r0, r4
 80124b8:	f7ff ffd0 	bl	801245c <_ZN8touchgfx7CWRUtil4sineEi>
 80124bc:	4605      	mov	r5, r0
 80124be:	b90e      	cbnz	r6, 80124c4 <_ZN8touchgfx7CWRUtil4sineENS0_2Q5E+0x28>
 80124c0:	b002      	add	sp, #8
 80124c2:	bd70      	pop	{r4, r5, r6, pc}
 80124c4:	1c60      	adds	r0, r4, #1
 80124c6:	f7ff ffc9 	bl	801245c <_ZN8touchgfx7CWRUtil4sineEi>
 80124ca:	ab01      	add	r3, sp, #4
 80124cc:	2220      	movs	r2, #32
 80124ce:	4631      	mov	r1, r6
 80124d0:	1b40      	subs	r0, r0, r5
 80124d2:	f005 fb33 	bl	8017b3c <_ZN8touchgfx6muldivElllRl>
 80124d6:	4428      	add	r0, r5
 80124d8:	e7f2      	b.n	80124c0 <_ZN8touchgfx7CWRUtil4sineENS0_2Q5E+0x24>

080124da <_ZN8touchgfx7CWRUtil5isqrtEm>:
 80124da:	f5b0 3f80 	cmp.w	r0, #65536	; 0x10000
 80124de:	bf2c      	ite	cs
 80124e0:	f04f 4280 	movcs.w	r2, #1073741824	; 0x40000000
 80124e4:	f44f 4280 	movcc.w	r2, #16384	; 0x4000
 80124e8:	2300      	movs	r3, #0
 80124ea:	1899      	adds	r1, r3, r2
 80124ec:	4288      	cmp	r0, r1
 80124ee:	bf24      	itt	cs
 80124f0:	1853      	addcs	r3, r2, r1
 80124f2:	1a40      	subcs	r0, r0, r1
 80124f4:	0892      	lsrs	r2, r2, #2
 80124f6:	ea4f 0353 	mov.w	r3, r3, lsr #1
 80124fa:	d1f6      	bne.n	80124ea <_ZN8touchgfx7CWRUtil5isqrtEm+0x10>
 80124fc:	4618      	mov	r0, r3
 80124fe:	4770      	bx	lr

08012500 <_ZN8touchgfx7CWRUtil6lengthENS0_2Q5ES1_>:
 8012500:	b510      	push	{r4, lr}
 8012502:	ea80 73e0 	eor.w	r3, r0, r0, asr #31
 8012506:	ea81 74e1 	eor.w	r4, r1, r1, asr #31
 801250a:	eba4 74e1 	sub.w	r4, r4, r1, asr #31
 801250e:	eba3 73e0 	sub.w	r3, r3, r0, asr #31
 8012512:	13a4      	asrs	r4, r4, #14
 8012514:	139b      	asrs	r3, r3, #14
 8012516:	429c      	cmp	r4, r3
 8012518:	bfb8      	it	lt
 801251a:	461c      	movlt	r4, r3
 801251c:	2c01      	cmp	r4, #1
 801251e:	dd07      	ble.n	8012530 <_ZN8touchgfx7CWRUtil6lengthENS0_2Q5ES1_+0x30>
 8012520:	fb91 f1f4 	sdiv	r1, r1, r4
 8012524:	fb90 f0f4 	sdiv	r0, r0, r4
 8012528:	f7ff ffea 	bl	8012500 <_ZN8touchgfx7CWRUtil6lengthENS0_2Q5ES1_>
 801252c:	4360      	muls	r0, r4
 801252e:	bd10      	pop	{r4, pc}
 8012530:	4340      	muls	r0, r0
 8012532:	fb01 0001 	mla	r0, r1, r1, r0
 8012536:	f7ff ffd0 	bl	80124da <_ZN8touchgfx7CWRUtil5isqrtEm>
 801253a:	e7f8      	b.n	801252e <_ZN8touchgfx7CWRUtil6lengthENS0_2Q5ES1_+0x2e>

0801253c <_ZN8touchgfx7CWRUtil7arcsineENS0_3Q10E>:
 801253c:	2800      	cmp	r0, #0
 801253e:	b508      	push	{r3, lr}
 8012540:	da05      	bge.n	801254e <_ZN8touchgfx7CWRUtil7arcsineENS0_3Q10E+0x12>
 8012542:	4240      	negs	r0, r0
 8012544:	f7ff fffa 	bl	801253c <_ZN8touchgfx7CWRUtil7arcsineENS0_3Q10E>
 8012548:	4240      	negs	r0, r0
 801254a:	b240      	sxtb	r0, r0
 801254c:	bd08      	pop	{r3, pc}
 801254e:	f5b0 6f80 	cmp.w	r0, #1024	; 0x400
 8012552:	dc11      	bgt.n	8012578 <_ZN8touchgfx7CWRUtil7arcsineENS0_3Q10E+0x3c>
 8012554:	f5b0 7f35 	cmp.w	r0, #724	; 0x2d4
 8012558:	dd09      	ble.n	801256e <_ZN8touchgfx7CWRUtil7arcsineENS0_3Q10E+0x32>
 801255a:	4340      	muls	r0, r0
 801255c:	f5c0 1080 	rsb	r0, r0, #1048576	; 0x100000
 8012560:	f7ff ffbb 	bl	80124da <_ZN8touchgfx7CWRUtil5isqrtEm>
 8012564:	f7ff ffea 	bl	801253c <_ZN8touchgfx7CWRUtil7arcsineENS0_3Q10E>
 8012568:	f1c0 005a 	rsb	r0, r0, #90	; 0x5a
 801256c:	e7ed      	b.n	801254a <_ZN8touchgfx7CWRUtil7arcsineENS0_3Q10E+0xe>
 801256e:	3003      	adds	r0, #3
 8012570:	10c0      	asrs	r0, r0, #3
 8012572:	4b02      	ldr	r3, [pc, #8]	; (801257c <_ZN8touchgfx7CWRUtil7arcsineENS0_3Q10E+0x40>)
 8012574:	5618      	ldrsb	r0, [r3, r0]
 8012576:	e7e9      	b.n	801254c <_ZN8touchgfx7CWRUtil7arcsineENS0_3Q10E+0x10>
 8012578:	2000      	movs	r0, #0
 801257a:	e7e7      	b.n	801254c <_ZN8touchgfx7CWRUtil7arcsineENS0_3Q10E+0x10>
 801257c:	0802f220 	.word	0x0802f220

08012580 <_ZN8touchgfx7CWRUtil6_angleENS0_2Q5ES1_RS1_>:
 8012580:	4281      	cmp	r1, r0
 8012582:	b537      	push	{r0, r1, r2, r4, r5, lr}
 8012584:	460c      	mov	r4, r1
 8012586:	4615      	mov	r5, r2
 8012588:	dd07      	ble.n	801259a <_ZN8touchgfx7CWRUtil6_angleENS0_2Q5ES1_RS1_+0x1a>
 801258a:	4601      	mov	r1, r0
 801258c:	4620      	mov	r0, r4
 801258e:	f7ff fff7 	bl	8012580 <_ZN8touchgfx7CWRUtil6_angleENS0_2Q5ES1_RS1_>
 8012592:	f1c0 005a 	rsb	r0, r0, #90	; 0x5a
 8012596:	b003      	add	sp, #12
 8012598:	bd30      	pop	{r4, r5, pc}
 801259a:	f7ff ffb1 	bl	8012500 <_ZN8touchgfx7CWRUtil6lengthENS0_2Q5ES1_>
 801259e:	6028      	str	r0, [r5, #0]
 80125a0:	2800      	cmp	r0, #0
 80125a2:	d0f8      	beq.n	8012596 <_ZN8touchgfx7CWRUtil6_angleENS0_2Q5ES1_RS1_+0x16>
 80125a4:	4602      	mov	r2, r0
 80125a6:	ab01      	add	r3, sp, #4
 80125a8:	f44f 6180 	mov.w	r1, #1024	; 0x400
 80125ac:	4620      	mov	r0, r4
 80125ae:	f005 fac5 	bl	8017b3c <_ZN8touchgfx6muldivElllRl>
 80125b2:	f7ff ffc3 	bl	801253c <_ZN8touchgfx7CWRUtil7arcsineENS0_3Q10E>
 80125b6:	e7ee      	b.n	8012596 <_ZN8touchgfx7CWRUtil6_angleENS0_2Q5ES1_RS1_+0x16>

080125b8 <_ZN8touchgfx4LineC1Ev>:
 80125b8:	b510      	push	{r4, lr}
 80125ba:	4604      	mov	r4, r0
 80125bc:	f7ff fe0a 	bl	80121d4 <_ZN8touchgfx12CanvasWidgetC1Ev>
 80125c0:	4b0c      	ldr	r3, [pc, #48]	; (80125f4 <_ZN8touchgfx4LineC1Ev+0x3c>)
 80125c2:	6023      	str	r3, [r4, #0]
 80125c4:	2220      	movs	r2, #32
 80125c6:	2300      	movs	r3, #0
 80125c8:	63e2      	str	r2, [r4, #60]	; 0x3c
 80125ca:	2212      	movs	r2, #18
 80125cc:	e9c4 330b 	strd	r3, r3, [r4, #44]	; 0x2c
 80125d0:	e9c4 330d 	strd	r3, r3, [r4, #52]	; 0x34
 80125d4:	f884 3040 	strb.w	r3, [r4, #64]	; 0x40
 80125d8:	e9c4 3311 	strd	r3, r3, [r4, #68]	; 0x44
 80125dc:	e9c4 3313 	strd	r3, r3, [r4, #76]	; 0x4c
 80125e0:	e9c4 3315 	strd	r3, r3, [r4, #84]	; 0x54
 80125e4:	e9c4 3317 	strd	r3, r3, [r4, #92]	; 0x5c
 80125e8:	e9c4 3319 	strd	r3, r3, [r4, #100]	; 0x64
 80125ec:	66e2      	str	r2, [r4, #108]	; 0x6c
 80125ee:	60a3      	str	r3, [r4, #8]
 80125f0:	4620      	mov	r0, r4
 80125f2:	bd10      	pop	{r4, pc}
 80125f4:	0802f33c 	.word	0x0802f33c

080125f8 <_ZN8touchgfx4Line17updateCachedShapeEv>:
 80125f8:	e92d 47f3 	stmdb	sp!, {r0, r1, r4, r5, r6, r7, r8, r9, sl, lr}
 80125fc:	6b47      	ldr	r7, [r0, #52]	; 0x34
 80125fe:	6ac3      	ldr	r3, [r0, #44]	; 0x2c
 8012600:	6b85      	ldr	r5, [r0, #56]	; 0x38
 8012602:	6b02      	ldr	r2, [r0, #48]	; 0x30
 8012604:	1aff      	subs	r7, r7, r3
 8012606:	4604      	mov	r4, r0
 8012608:	eba5 0502 	sub.w	r5, r5, r2
 801260c:	d142      	bne.n	8012694 <_ZN8touchgfx4Line17updateCachedShapeEv+0x9c>
 801260e:	b955      	cbnz	r5, 8012626 <_ZN8touchgfx4Line17updateCachedShapeEv+0x2e>
 8012610:	e9c0 3313 	strd	r3, r3, [r0, #76]	; 0x4c
 8012614:	e9c0 3311 	strd	r3, r3, [r0, #68]	; 0x44
 8012618:	e9c0 2217 	strd	r2, r2, [r0, #92]	; 0x5c
 801261c:	e9c0 2215 	strd	r2, r2, [r0, #84]	; 0x54
 8012620:	b002      	add	sp, #8
 8012622:	e8bd 87f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, pc}
 8012626:	ea85 78e5 	eor.w	r8, r5, r5, asr #31
 801262a:	eba8 78e5 	sub.w	r8, r8, r5, asr #31
 801262e:	4629      	mov	r1, r5
 8012630:	4642      	mov	r2, r8
 8012632:	6be0      	ldr	r0, [r4, #60]	; 0x3c
 8012634:	f005 faa1 	bl	8017b7a <_ZN8touchgfx6muldivElll>
 8012638:	2502      	movs	r5, #2
 801263a:	4642      	mov	r2, r8
 801263c:	fb90 f6f5 	sdiv	r6, r0, r5
 8012640:	4639      	mov	r1, r7
 8012642:	6be0      	ldr	r0, [r4, #60]	; 0x3c
 8012644:	f005 fa99 	bl	8017b7a <_ZN8touchgfx6muldivElll>
 8012648:	f894 9040 	ldrb.w	r9, [r4, #64]	; 0x40
 801264c:	fb90 f5f5 	sdiv	r5, r0, r5
 8012650:	f1b9 0f00 	cmp.w	r9, #0
 8012654:	d067      	beq.n	8012726 <_ZN8touchgfx4Line17updateCachedShapeEv+0x12e>
 8012656:	f1b9 0f02 	cmp.w	r9, #2
 801265a:	d878      	bhi.n	801274e <_ZN8touchgfx4Line17updateCachedShapeEv+0x156>
 801265c:	6ae2      	ldr	r2, [r4, #44]	; 0x2c
 801265e:	6b60      	ldr	r0, [r4, #52]	; 0x34
 8012660:	1b93      	subs	r3, r2, r6
 8012662:	1b5b      	subs	r3, r3, r5
 8012664:	6463      	str	r3, [r4, #68]	; 0x44
 8012666:	6b23      	ldr	r3, [r4, #48]	; 0x30
 8012668:	18e9      	adds	r1, r5, r3
 801266a:	1b89      	subs	r1, r1, r6
 801266c:	6561      	str	r1, [r4, #84]	; 0x54
 801266e:	1b81      	subs	r1, r0, r6
 8012670:	4429      	add	r1, r5
 8012672:	64a1      	str	r1, [r4, #72]	; 0x48
 8012674:	6ba1      	ldr	r1, [r4, #56]	; 0x38
 8012676:	4430      	add	r0, r6
 8012678:	186f      	adds	r7, r5, r1
 801267a:	4432      	add	r2, r6
 801267c:	1b49      	subs	r1, r1, r5
 801267e:	4437      	add	r7, r6
 8012680:	4428      	add	r0, r5
 8012682:	4431      	add	r1, r6
 8012684:	1b52      	subs	r2, r2, r5
 8012686:	1b5b      	subs	r3, r3, r5
 8012688:	65a7      	str	r7, [r4, #88]	; 0x58
 801268a:	64e0      	str	r0, [r4, #76]	; 0x4c
 801268c:	65e1      	str	r1, [r4, #92]	; 0x5c
 801268e:	6522      	str	r2, [r4, #80]	; 0x50
 8012690:	1b9b      	subs	r3, r3, r6
 8012692:	e05b      	b.n	801274c <_ZN8touchgfx4Line17updateCachedShapeEv+0x154>
 8012694:	ea87 78e7 	eor.w	r8, r7, r7, asr #31
 8012698:	eba8 78e7 	sub.w	r8, r8, r7, asr #31
 801269c:	2d00      	cmp	r5, #0
 801269e:	d0c6      	beq.n	801262e <_ZN8touchgfx4Line17updateCachedShapeEv+0x36>
 80126a0:	ea85 73e5 	eor.w	r3, r5, r5, asr #31
 80126a4:	eba3 73e5 	sub.w	r3, r3, r5, asr #31
 80126a8:	fb93 f2f8 	sdiv	r2, r3, r8
 80126ac:	fb08 3312 	mls	r3, r8, r2, r3
 80126b0:	b353      	cbz	r3, 8012708 <_ZN8touchgfx4Line17updateCachedShapeEv+0x110>
 80126b2:	fb98 f2f3 	sdiv	r2, r8, r3
 80126b6:	fb03 8812 	mls	r8, r3, r2, r8
 80126ba:	f1b8 0f00 	cmp.w	r8, #0
 80126be:	d1f3      	bne.n	80126a8 <_ZN8touchgfx4Line17updateCachedShapeEv+0xb0>
 80126c0:	2b01      	cmp	r3, #1
 80126c2:	bf1c      	itt	ne
 80126c4:	fb95 f5f3 	sdivne	r5, r5, r3
 80126c8:	fb97 f7f3 	sdivne	r7, r7, r3
 80126cc:	ea87 73e7 	eor.w	r3, r7, r7, asr #31
 80126d0:	f24b 5104 	movw	r1, #46340	; 0xb504
 80126d4:	eba3 73e7 	sub.w	r3, r3, r7, asr #31
 80126d8:	ea85 72e5 	eor.w	r2, r5, r5, asr #31
 80126dc:	428b      	cmp	r3, r1
 80126de:	eba2 72e5 	sub.w	r2, r2, r5, asr #31
 80126e2:	4608      	mov	r0, r1
 80126e4:	dd01      	ble.n	80126ea <_ZN8touchgfx4Line17updateCachedShapeEv+0xf2>
 80126e6:	428a      	cmp	r2, r1
 80126e8:	dc10      	bgt.n	801270c <_ZN8touchgfx4Line17updateCachedShapeEv+0x114>
 80126ea:	fb90 f3f3 	sdiv	r3, r0, r3
 80126ee:	fb90 f2f2 	sdiv	r2, r0, r2
 80126f2:	4293      	cmp	r3, r2
 80126f4:	bfa8      	it	ge
 80126f6:	4613      	movge	r3, r2
 80126f8:	435f      	muls	r7, r3
 80126fa:	435d      	muls	r5, r3
 80126fc:	4629      	mov	r1, r5
 80126fe:	4638      	mov	r0, r7
 8012700:	f7ff fefe 	bl	8012500 <_ZN8touchgfx7CWRUtil6lengthENS0_2Q5ES1_>
 8012704:	4680      	mov	r8, r0
 8012706:	e792      	b.n	801262e <_ZN8touchgfx4Line17updateCachedShapeEv+0x36>
 8012708:	4643      	mov	r3, r8
 801270a:	e7d9      	b.n	80126c0 <_ZN8touchgfx4Line17updateCachedShapeEv+0xc8>
 801270c:	fb93 f3f1 	sdiv	r3, r3, r1
 8012710:	fb92 f2f1 	sdiv	r2, r2, r1
 8012714:	4293      	cmp	r3, r2
 8012716:	bfcc      	ite	gt
 8012718:	3301      	addgt	r3, #1
 801271a:	1c53      	addle	r3, r2, #1
 801271c:	fb97 f7f3 	sdiv	r7, r7, r3
 8012720:	fb95 f5f3 	sdiv	r5, r5, r3
 8012724:	e7ea      	b.n	80126fc <_ZN8touchgfx4Line17updateCachedShapeEv+0x104>
 8012726:	6ae2      	ldr	r2, [r4, #44]	; 0x2c
 8012728:	6b60      	ldr	r0, [r4, #52]	; 0x34
 801272a:	1b93      	subs	r3, r2, r6
 801272c:	6463      	str	r3, [r4, #68]	; 0x44
 801272e:	6b23      	ldr	r3, [r4, #48]	; 0x30
 8012730:	18e9      	adds	r1, r5, r3
 8012732:	6561      	str	r1, [r4, #84]	; 0x54
 8012734:	1b81      	subs	r1, r0, r6
 8012736:	64a1      	str	r1, [r4, #72]	; 0x48
 8012738:	6ba1      	ldr	r1, [r4, #56]	; 0x38
 801273a:	4430      	add	r0, r6
 801273c:	186f      	adds	r7, r5, r1
 801273e:	4432      	add	r2, r6
 8012740:	1b49      	subs	r1, r1, r5
 8012742:	65a7      	str	r7, [r4, #88]	; 0x58
 8012744:	64e0      	str	r0, [r4, #76]	; 0x4c
 8012746:	65e1      	str	r1, [r4, #92]	; 0x5c
 8012748:	6522      	str	r2, [r4, #80]	; 0x50
 801274a:	1b5b      	subs	r3, r3, r5
 801274c:	6623      	str	r3, [r4, #96]	; 0x60
 801274e:	6c62      	ldr	r2, [r4, #68]	; 0x44
 8012750:	6d63      	ldr	r3, [r4, #84]	; 0x54
 8012752:	9200      	str	r2, [sp, #0]
 8012754:	9301      	str	r3, [sp, #4]
 8012756:	f104 0148 	add.w	r1, r4, #72	; 0x48
 801275a:	f104 0c54 	add.w	ip, r4, #84	; 0x54
 801275e:	680f      	ldr	r7, [r1, #0]
 8012760:	9800      	ldr	r0, [sp, #0]
 8012762:	42ba      	cmp	r2, r7
 8012764:	bfa8      	it	ge
 8012766:	463a      	movge	r2, r7
 8012768:	4287      	cmp	r7, r0
 801276a:	bfc8      	it	gt
 801276c:	9700      	strgt	r7, [sp, #0]
 801276e:	690f      	ldr	r7, [r1, #16]
 8012770:	9801      	ldr	r0, [sp, #4]
 8012772:	42bb      	cmp	r3, r7
 8012774:	bfa8      	it	ge
 8012776:	463b      	movge	r3, r7
 8012778:	3104      	adds	r1, #4
 801277a:	4287      	cmp	r7, r0
 801277c:	bfc8      	it	gt
 801277e:	9701      	strgt	r7, [sp, #4]
 8012780:	458c      	cmp	ip, r1
 8012782:	d1ec      	bne.n	801275e <_ZN8touchgfx4Line17updateCachedShapeEv+0x166>
 8012784:	4668      	mov	r0, sp
 8012786:	2720      	movs	r7, #32
 8012788:	fb92 f8f7 	sdiv	r8, r2, r7
 801278c:	fb93 f7f7 	sdiv	r7, r3, r7
 8012790:	f7ff fd57 	bl	8012242 <_ZNK8touchgfx7CWRUtil2Q54ceilEv>
 8012794:	4682      	mov	sl, r0
 8012796:	a801      	add	r0, sp, #4
 8012798:	f7ff fd53 	bl	8012242 <_ZNK8touchgfx7CWRUtil2Q54ceilEv>
 801279c:	ebaa 0208 	sub.w	r2, sl, r8
 80127a0:	1bc0      	subs	r0, r0, r7
 80127a2:	f1b9 0f01 	cmp.w	r9, #1
 80127a6:	f8a4 8064 	strh.w	r8, [r4, #100]	; 0x64
 80127aa:	f8a4 7066 	strh.w	r7, [r4, #102]	; 0x66
 80127ae:	f8a4 2068 	strh.w	r2, [r4, #104]	; 0x68
 80127b2:	f8a4 006a 	strh.w	r0, [r4, #106]	; 0x6a
 80127b6:	f47f af33 	bne.w	8012620 <_ZN8touchgfx4Line17updateCachedShapeEv+0x28>
 80127ba:	6ae0      	ldr	r0, [r4, #44]	; 0x2c
 80127bc:	6b61      	ldr	r1, [r4, #52]	; 0x34
 80127be:	1b83      	subs	r3, r0, r6
 80127c0:	6463      	str	r3, [r4, #68]	; 0x44
 80127c2:	6b23      	ldr	r3, [r4, #48]	; 0x30
 80127c4:	18ea      	adds	r2, r5, r3
 80127c6:	6562      	str	r2, [r4, #84]	; 0x54
 80127c8:	1b8a      	subs	r2, r1, r6
 80127ca:	64a2      	str	r2, [r4, #72]	; 0x48
 80127cc:	6ba2      	ldr	r2, [r4, #56]	; 0x38
 80127ce:	4431      	add	r1, r6
 80127d0:	18af      	adds	r7, r5, r2
 80127d2:	4406      	add	r6, r0
 80127d4:	1b52      	subs	r2, r2, r5
 80127d6:	1b5d      	subs	r5, r3, r5
 80127d8:	65a7      	str	r7, [r4, #88]	; 0x58
 80127da:	64e1      	str	r1, [r4, #76]	; 0x4c
 80127dc:	65e2      	str	r2, [r4, #92]	; 0x5c
 80127de:	6526      	str	r6, [r4, #80]	; 0x50
 80127e0:	6625      	str	r5, [r4, #96]	; 0x60
 80127e2:	e71d      	b.n	8012620 <_ZN8touchgfx4Line17updateCachedShapeEv+0x28>

080127e4 <_ZN8touchgfx4Line8setStartENS_7CWRUtil2Q5ES2_>:
 80127e4:	6ac3      	ldr	r3, [r0, #44]	; 0x2c
 80127e6:	428b      	cmp	r3, r1
 80127e8:	d102      	bne.n	80127f0 <_ZN8touchgfx4Line8setStartENS_7CWRUtil2Q5ES2_+0xc>
 80127ea:	6b03      	ldr	r3, [r0, #48]	; 0x30
 80127ec:	4293      	cmp	r3, r2
 80127ee:	d003      	beq.n	80127f8 <_ZN8touchgfx4Line8setStartENS_7CWRUtil2Q5ES2_+0x14>
 80127f0:	e9c0 120b 	strd	r1, r2, [r0, #44]	; 0x2c
 80127f4:	f7ff bf00 	b.w	80125f8 <_ZN8touchgfx4Line17updateCachedShapeEv>
 80127f8:	4770      	bx	lr

080127fa <_ZN8touchgfx4Line6setEndENS_7CWRUtil2Q5ES2_>:
 80127fa:	6b43      	ldr	r3, [r0, #52]	; 0x34
 80127fc:	428b      	cmp	r3, r1
 80127fe:	d102      	bne.n	8012806 <_ZN8touchgfx4Line6setEndENS_7CWRUtil2Q5ES2_+0xc>
 8012800:	6b83      	ldr	r3, [r0, #56]	; 0x38
 8012802:	4293      	cmp	r3, r2
 8012804:	d003      	beq.n	801280e <_ZN8touchgfx4Line6setEndENS_7CWRUtil2Q5ES2_+0x14>
 8012806:	e9c0 120d 	strd	r1, r2, [r0, #52]	; 0x34
 801280a:	f7ff bef5 	b.w	80125f8 <_ZN8touchgfx4Line17updateCachedShapeEv>
 801280e:	4770      	bx	lr

08012810 <_ZN8touchgfx4Line18setLineEndingStyleENS0_17LINE_ENDING_STYLEE>:
 8012810:	f880 1040 	strb.w	r1, [r0, #64]	; 0x40
 8012814:	f7ff bef0 	b.w	80125f8 <_ZN8touchgfx4Line17updateCachedShapeEv>

08012818 <_ZNK8touchgfx4Line16drawCanvasWidgetERKNS_4RectE>:
 8012818:	e92d 41f0 	stmdb	sp!, {r4, r5, r6, r7, r8, lr}
 801281c:	b0a0      	sub	sp, #128	; 0x80
 801281e:	4604      	mov	r4, r0
 8012820:	460a      	mov	r2, r1
 8012822:	4601      	mov	r1, r0
 8012824:	a804      	add	r0, sp, #16
 8012826:	f015 f845 	bl	80278b4 <_ZN8touchgfx6CanvasC1EPKNS_12CanvasWidgetERKNS_4RectE>
 801282a:	2300      	movs	r3, #0
 801282c:	9301      	str	r3, [sp, #4]
 801282e:	f894 3040 	ldrb.w	r3, [r4, #64]	; 0x40
 8012832:	2b01      	cmp	r3, #1
 8012834:	d17c      	bne.n	8012930 <_ZNK8touchgfx4Line16drawCanvasWidgetERKNS_4RectE+0x118>
 8012836:	6c60      	ldr	r0, [r4, #68]	; 0x44
 8012838:	6ae3      	ldr	r3, [r4, #44]	; 0x2c
 801283a:	6d61      	ldr	r1, [r4, #84]	; 0x54
 801283c:	6b22      	ldr	r2, [r4, #48]	; 0x30
 801283e:	1ac0      	subs	r0, r0, r3
 8012840:	eba1 0102 	sub.w	r1, r1, r2
 8012844:	d437      	bmi.n	80128b6 <_ZNK8touchgfx4Line16drawCanvasWidgetERKNS_4RectE+0x9e>
 8012846:	2900      	cmp	r1, #0
 8012848:	aa01      	add	r2, sp, #4
 801284a:	db2e      	blt.n	80128aa <_ZNK8touchgfx4Line16drawCanvasWidgetERKNS_4RectE+0x92>
 801284c:	f7ff fe98 	bl	8012580 <_ZN8touchgfx7CWRUtil6_angleENS0_2Q5ES1_RS1_>
 8012850:	f100 065a 	add.w	r6, r0, #90	; 0x5a
 8012854:	6d62      	ldr	r2, [r4, #84]	; 0x54
 8012856:	6c61      	ldr	r1, [r4, #68]	; 0x44
 8012858:	a804      	add	r0, sp, #16
 801285a:	f015 f9ab 	bl	8027bb4 <_ZN8touchgfx6Canvas6moveToENS_7CWRUtil2Q5ES2_>
 801285e:	6da2      	ldr	r2, [r4, #88]	; 0x58
 8012860:	6ca1      	ldr	r1, [r4, #72]	; 0x48
 8012862:	a804      	add	r0, sp, #16
 8012864:	f015 f9f3 	bl	8027c4e <_ZN8touchgfx6Canvas6lineToENS_7CWRUtil2Q5ES2_>
 8012868:	6ee5      	ldr	r5, [r4, #108]	; 0x6c
 801286a:	2db3      	cmp	r5, #179	; 0xb3
 801286c:	dc33      	bgt.n	80128d6 <_ZNK8touchgfx4Line16drawCanvasWidgetERKNS_4RectE+0xbe>
 801286e:	eba6 0805 	sub.w	r8, r6, r5
 8012872:	4640      	mov	r0, r8
 8012874:	f7ff fdf2 	bl	801245c <_ZN8touchgfx7CWRUtil4sineEi>
 8012878:	a902      	add	r1, sp, #8
 801287a:	9002      	str	r0, [sp, #8]
 801287c:	a801      	add	r0, sp, #4
 801287e:	f7ff fcd5 	bl	801222c <_ZNK8touchgfx7CWRUtil2Q5mlERKNS0_3Q15E>
 8012882:	6b61      	ldr	r1, [r4, #52]	; 0x34
 8012884:	1847      	adds	r7, r0, r1
 8012886:	f1c8 005a 	rsb	r0, r8, #90	; 0x5a
 801288a:	f7ff fde7 	bl	801245c <_ZN8touchgfx7CWRUtil4sineEi>
 801288e:	a903      	add	r1, sp, #12
 8012890:	9003      	str	r0, [sp, #12]
 8012892:	a801      	add	r0, sp, #4
 8012894:	f7ff fcca 	bl	801222c <_ZNK8touchgfx7CWRUtil2Q5mlERKNS0_3Q15E>
 8012898:	6ba2      	ldr	r2, [r4, #56]	; 0x38
 801289a:	4639      	mov	r1, r7
 801289c:	1a12      	subs	r2, r2, r0
 801289e:	a804      	add	r0, sp, #16
 80128a0:	f015 f9d5 	bl	8027c4e <_ZN8touchgfx6Canvas6lineToENS_7CWRUtil2Q5ES2_>
 80128a4:	6ee3      	ldr	r3, [r4, #108]	; 0x6c
 80128a6:	441d      	add	r5, r3
 80128a8:	e7df      	b.n	801286a <_ZNK8touchgfx4Line16drawCanvasWidgetERKNS_4RectE+0x52>
 80128aa:	4249      	negs	r1, r1
 80128ac:	f7ff fe68 	bl	8012580 <_ZN8touchgfx7CWRUtil6_angleENS0_2Q5ES1_RS1_>
 80128b0:	f1c0 065a 	rsb	r6, r0, #90	; 0x5a
 80128b4:	e7ce      	b.n	8012854 <_ZNK8touchgfx4Line16drawCanvasWidgetERKNS_4RectE+0x3c>
 80128b6:	2900      	cmp	r1, #0
 80128b8:	f1c0 0000 	rsb	r0, r0, #0
 80128bc:	aa01      	add	r2, sp, #4
 80128be:	db04      	blt.n	80128ca <_ZNK8touchgfx4Line16drawCanvasWidgetERKNS_4RectE+0xb2>
 80128c0:	f7ff fe5e 	bl	8012580 <_ZN8touchgfx7CWRUtil6_angleENS0_2Q5ES1_RS1_>
 80128c4:	f5c0 7687 	rsb	r6, r0, #270	; 0x10e
 80128c8:	e7c4      	b.n	8012854 <_ZNK8touchgfx4Line16drawCanvasWidgetERKNS_4RectE+0x3c>
 80128ca:	4249      	negs	r1, r1
 80128cc:	f7ff fe58 	bl	8012580 <_ZN8touchgfx7CWRUtil6_angleENS0_2Q5ES1_RS1_>
 80128d0:	f500 7687 	add.w	r6, r0, #270	; 0x10e
 80128d4:	e7be      	b.n	8012854 <_ZNK8touchgfx4Line16drawCanvasWidgetERKNS_4RectE+0x3c>
 80128d6:	6de2      	ldr	r2, [r4, #92]	; 0x5c
 80128d8:	6ce1      	ldr	r1, [r4, #76]	; 0x4c
 80128da:	a804      	add	r0, sp, #16
 80128dc:	f015 f9b7 	bl	8027c4e <_ZN8touchgfx6Canvas6lineToENS_7CWRUtil2Q5ES2_>
 80128e0:	6e22      	ldr	r2, [r4, #96]	; 0x60
 80128e2:	6d21      	ldr	r1, [r4, #80]	; 0x50
 80128e4:	a804      	add	r0, sp, #16
 80128e6:	f015 f9b2 	bl	8027c4e <_ZN8touchgfx6Canvas6lineToENS_7CWRUtil2Q5ES2_>
 80128ea:	6ee5      	ldr	r5, [r4, #108]	; 0x6c
 80128ec:	f1c5 05b4 	rsb	r5, r5, #180	; 0xb4
 80128f0:	2d00      	cmp	r5, #0
 80128f2:	dd31      	ble.n	8012958 <_ZNK8touchgfx4Line16drawCanvasWidgetERKNS_4RectE+0x140>
 80128f4:	eb05 0806 	add.w	r8, r5, r6
 80128f8:	4640      	mov	r0, r8
 80128fa:	f7ff fdaf 	bl	801245c <_ZN8touchgfx7CWRUtil4sineEi>
 80128fe:	a902      	add	r1, sp, #8
 8012900:	9002      	str	r0, [sp, #8]
 8012902:	a801      	add	r0, sp, #4
 8012904:	f7ff fc92 	bl	801222c <_ZNK8touchgfx7CWRUtil2Q5mlERKNS0_3Q15E>
 8012908:	6ae1      	ldr	r1, [r4, #44]	; 0x2c
 801290a:	1847      	adds	r7, r0, r1
 801290c:	f1c8 005a 	rsb	r0, r8, #90	; 0x5a
 8012910:	f7ff fda4 	bl	801245c <_ZN8touchgfx7CWRUtil4sineEi>
 8012914:	a903      	add	r1, sp, #12
 8012916:	9003      	str	r0, [sp, #12]
 8012918:	a801      	add	r0, sp, #4
 801291a:	f7ff fc87 	bl	801222c <_ZNK8touchgfx7CWRUtil2Q5mlERKNS0_3Q15E>
 801291e:	6b22      	ldr	r2, [r4, #48]	; 0x30
 8012920:	4639      	mov	r1, r7
 8012922:	1a12      	subs	r2, r2, r0
 8012924:	a804      	add	r0, sp, #16
 8012926:	f015 f992 	bl	8027c4e <_ZN8touchgfx6Canvas6lineToENS_7CWRUtil2Q5ES2_>
 801292a:	6ee3      	ldr	r3, [r4, #108]	; 0x6c
 801292c:	1aed      	subs	r5, r5, r3
 801292e:	e7df      	b.n	80128f0 <_ZNK8touchgfx4Line16drawCanvasWidgetERKNS_4RectE+0xd8>
 8012930:	6d62      	ldr	r2, [r4, #84]	; 0x54
 8012932:	6c61      	ldr	r1, [r4, #68]	; 0x44
 8012934:	a804      	add	r0, sp, #16
 8012936:	f015 f93d 	bl	8027bb4 <_ZN8touchgfx6Canvas6moveToENS_7CWRUtil2Q5ES2_>
 801293a:	6da2      	ldr	r2, [r4, #88]	; 0x58
 801293c:	6ca1      	ldr	r1, [r4, #72]	; 0x48
 801293e:	a804      	add	r0, sp, #16
 8012940:	f015 f985 	bl	8027c4e <_ZN8touchgfx6Canvas6lineToENS_7CWRUtil2Q5ES2_>
 8012944:	6de2      	ldr	r2, [r4, #92]	; 0x5c
 8012946:	6ce1      	ldr	r1, [r4, #76]	; 0x4c
 8012948:	a804      	add	r0, sp, #16
 801294a:	f015 f980 	bl	8027c4e <_ZN8touchgfx6Canvas6lineToENS_7CWRUtil2Q5ES2_>
 801294e:	6e22      	ldr	r2, [r4, #96]	; 0x60
 8012950:	6d21      	ldr	r1, [r4, #80]	; 0x50
 8012952:	a804      	add	r0, sp, #16
 8012954:	f015 f97b 	bl	8027c4e <_ZN8touchgfx6Canvas6lineToENS_7CWRUtil2Q5ES2_>
 8012958:	21ff      	movs	r1, #255	; 0xff
 801295a:	a804      	add	r0, sp, #16
 801295c:	f015 f866 	bl	8027a2c <_ZN8touchgfx6Canvas6renderEh>
 8012960:	4b04      	ldr	r3, [pc, #16]	; (8012974 <_ZNK8touchgfx4Line16drawCanvasWidgetERKNS_4RectE+0x15c>)
 8012962:	9304      	str	r3, [sp, #16]
 8012964:	4604      	mov	r4, r0
 8012966:	a80c      	add	r0, sp, #48	; 0x30
 8012968:	f001 fa98 	bl	8013e9c <_ZN8touchgfx7OutlineD1Ev>
 801296c:	4620      	mov	r0, r4
 801296e:	b020      	add	sp, #128	; 0x80
 8012970:	e8bd 81f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, pc}
 8012974:	0802fbe8 	.word	0x0802fbe8

08012978 <_ZNK8touchgfx8TextArea12getWildcard1Ev>:
 8012978:	2000      	movs	r0, #0
 801297a:	4770      	bx	lr

0801297c <_ZNK8touchgfx8TextArea12getAlignmentEv>:
 801297c:	4b07      	ldr	r3, [pc, #28]	; (801299c <_ZNK8touchgfx8TextArea12getAlignmentEv+0x20>)
 801297e:	8d82      	ldrh	r2, [r0, #44]	; 0x2c
 8012980:	881b      	ldrh	r3, [r3, #0]
 8012982:	4293      	cmp	r3, r2
 8012984:	bf81      	itttt	hi
 8012986:	4b06      	ldrhi	r3, [pc, #24]	; (80129a0 <_ZNK8touchgfx8TextArea12getAlignmentEv+0x24>)
 8012988:	681b      	ldrhi	r3, [r3, #0]
 801298a:	eb03 0342 	addhi.w	r3, r3, r2, lsl #1
 801298e:	7858      	ldrbhi	r0, [r3, #1]
 8012990:	bf8c      	ite	hi
 8012992:	f000 0003 	andhi.w	r0, r0, #3
 8012996:	2000      	movls	r0, #0
 8012998:	4770      	bx	lr
 801299a:	bf00      	nop
 801299c:	20013878 	.word	0x20013878
 80129a0:	20013874 	.word	0x20013874

080129a4 <_ZN8touchgfx8TextAreaD1Ev>:
 80129a4:	4770      	bx	lr
	...

080129a8 <_ZNK8touchgfx8TextArea13getTextHeightEv>:
 80129a8:	e92d 41f0 	stmdb	sp!, {r4, r5, r6, r7, r8, lr}
 80129ac:	4b10      	ldr	r3, [pc, #64]	; (80129f0 <_ZNK8touchgfx8TextArea13getTextHeightEv+0x48>)
 80129ae:	8d81      	ldrh	r1, [r0, #44]	; 0x2c
 80129b0:	881b      	ldrh	r3, [r3, #0]
 80129b2:	428b      	cmp	r3, r1
 80129b4:	4604      	mov	r4, r0
 80129b6:	d918      	bls.n	80129ea <_ZNK8touchgfx8TextArea13getTextHeightEv+0x42>
 80129b8:	6803      	ldr	r3, [r0, #0]
 80129ba:	6f9d      	ldr	r5, [r3, #120]	; 0x78
 80129bc:	4b0d      	ldr	r3, [pc, #52]	; (80129f4 <_ZNK8touchgfx8TextArea13getTextHeightEv+0x4c>)
 80129be:	6818      	ldr	r0, [r3, #0]
 80129c0:	f7f5 fec2 	bl	8008748 <_ZNK8touchgfx5Texts7getTextEt>
 80129c4:	6823      	ldr	r3, [r4, #0]
 80129c6:	4606      	mov	r6, r0
 80129c8:	6fdb      	ldr	r3, [r3, #124]	; 0x7c
 80129ca:	4620      	mov	r0, r4
 80129cc:	4798      	blx	r3
 80129ce:	6823      	ldr	r3, [r4, #0]
 80129d0:	4607      	mov	r7, r0
 80129d2:	f8d3 3080 	ldr.w	r3, [r3, #128]	; 0x80
 80129d6:	4620      	mov	r0, r4
 80129d8:	4798      	blx	r3
 80129da:	463a      	mov	r2, r7
 80129dc:	4603      	mov	r3, r0
 80129de:	4631      	mov	r1, r6
 80129e0:	4620      	mov	r0, r4
 80129e2:	46ac      	mov	ip, r5
 80129e4:	e8bd 41f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, lr}
 80129e8:	4760      	bx	ip
 80129ea:	2000      	movs	r0, #0
 80129ec:	e8bd 81f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, pc}
 80129f0:	20013878 	.word	0x20013878
 80129f4:	20013880 	.word	0x20013880

080129f8 <_ZNK8touchgfx8TextArea12getTextWidthEv>:
 80129f8:	e92d 43f7 	stmdb	sp!, {r0, r1, r2, r4, r5, r6, r7, r8, r9, lr}
 80129fc:	4b17      	ldr	r3, [pc, #92]	; (8012a5c <_ZNK8touchgfx8TextArea12getTextWidthEv+0x64>)
 80129fe:	8d81      	ldrh	r1, [r0, #44]	; 0x2c
 8012a00:	881b      	ldrh	r3, [r3, #0]
 8012a02:	428b      	cmp	r3, r1
 8012a04:	4604      	mov	r4, r0
 8012a06:	d926      	bls.n	8012a56 <_ZNK8touchgfx8TextArea12getTextWidthEv+0x5e>
 8012a08:	4b15      	ldr	r3, [pc, #84]	; (8012a60 <_ZNK8touchgfx8TextArea12getTextWidthEv+0x68>)
 8012a0a:	681b      	ldr	r3, [r3, #0]
 8012a0c:	eb03 0241 	add.w	r2, r3, r1, lsl #1
 8012a10:	f813 0011 	ldrb.w	r0, [r3, r1, lsl #1]
 8012a14:	4b13      	ldr	r3, [pc, #76]	; (8012a64 <_ZNK8touchgfx8TextArea12getTextWidthEv+0x6c>)
 8012a16:	7855      	ldrb	r5, [r2, #1]
 8012a18:	681b      	ldr	r3, [r3, #0]
 8012a1a:	f853 6020 	ldr.w	r6, [r3, r0, lsl #2]
 8012a1e:	6833      	ldr	r3, [r6, #0]
 8012a20:	69df      	ldr	r7, [r3, #28]
 8012a22:	4b11      	ldr	r3, [pc, #68]	; (8012a68 <_ZNK8touchgfx8TextArea12getTextWidthEv+0x70>)
 8012a24:	6818      	ldr	r0, [r3, #0]
 8012a26:	f7f5 fe8f 	bl	8008748 <_ZNK8touchgfx5Texts7getTextEt>
 8012a2a:	6823      	ldr	r3, [r4, #0]
 8012a2c:	4680      	mov	r8, r0
 8012a2e:	6fdb      	ldr	r3, [r3, #124]	; 0x7c
 8012a30:	4620      	mov	r0, r4
 8012a32:	4798      	blx	r3
 8012a34:	6823      	ldr	r3, [r4, #0]
 8012a36:	4681      	mov	r9, r0
 8012a38:	f8d3 3080 	ldr.w	r3, [r3, #128]	; 0x80
 8012a3c:	4620      	mov	r0, r4
 8012a3e:	4798      	blx	r3
 8012a40:	f3c5 0581 	ubfx	r5, r5, #2, #2
 8012a44:	9000      	str	r0, [sp, #0]
 8012a46:	464b      	mov	r3, r9
 8012a48:	4642      	mov	r2, r8
 8012a4a:	4629      	mov	r1, r5
 8012a4c:	4630      	mov	r0, r6
 8012a4e:	47b8      	blx	r7
 8012a50:	b003      	add	sp, #12
 8012a52:	e8bd 83f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, pc}
 8012a56:	2000      	movs	r0, #0
 8012a58:	e7fa      	b.n	8012a50 <_ZNK8touchgfx8TextArea12getTextWidthEv+0x58>
 8012a5a:	bf00      	nop
 8012a5c:	20013878 	.word	0x20013878
 8012a60:	20013874 	.word	0x20013874
 8012a64:	2001387c 	.word	0x2001387c
 8012a68:	20013880 	.word	0x20013880

08012a6c <_ZNK8touchgfx8TextArea19calculateTextHeightEPKtz>:
 8012a6c:	b40e      	push	{r1, r2, r3}
 8012a6e:	e92d 47f0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, lr}
 8012a72:	4b2f      	ldr	r3, [pc, #188]	; (8012b30 <_ZNK8touchgfx8TextArea19calculateTextHeightEPKtz+0xc4>)
 8012a74:	881a      	ldrh	r2, [r3, #0]
 8012a76:	8d83      	ldrh	r3, [r0, #44]	; 0x2c
 8012a78:	429a      	cmp	r2, r3
 8012a7a:	b09d      	sub	sp, #116	; 0x74
 8012a7c:	4604      	mov	r4, r0
 8012a7e:	d954      	bls.n	8012b2a <_ZNK8touchgfx8TextArea19calculateTextHeightEPKtz+0xbe>
 8012a80:	f8df 90b0 	ldr.w	r9, [pc, #176]	; 8012b34 <_ZNK8touchgfx8TextArea19calculateTextHeightEPKtz+0xc8>
 8012a84:	f8df 80b0 	ldr.w	r8, [pc, #176]	; 8012b38 <_ZNK8touchgfx8TextArea19calculateTextHeightEPKtz+0xcc>
 8012a88:	aa26      	add	r2, sp, #152	; 0x98
 8012a8a:	9202      	str	r2, [sp, #8]
 8012a8c:	f8d9 2000 	ldr.w	r2, [r9]
 8012a90:	f812 2013 	ldrb.w	r2, [r2, r3, lsl #1]
 8012a94:	f8d8 3000 	ldr.w	r3, [r8]
 8012a98:	f853 5022 	ldr.w	r5, [r3, r2, lsl #2]
 8012a9c:	682b      	ldr	r3, [r5, #0]
 8012a9e:	4628      	mov	r0, r5
 8012aa0:	6b9b      	ldr	r3, [r3, #56]	; 0x38
 8012aa2:	4798      	blx	r3
 8012aa4:	b207      	sxth	r7, r0
 8012aa6:	4606      	mov	r6, r0
 8012aa8:	a803      	add	r0, sp, #12
 8012aaa:	f005 fc61 	bl	8018370 <_ZN8touchgfx12TextProviderC1Ev>
 8012aae:	682b      	ldr	r3, [r5, #0]
 8012ab0:	4628      	mov	r0, r5
 8012ab2:	6cdb      	ldr	r3, [r3, #76]	; 0x4c
 8012ab4:	4798      	blx	r3
 8012ab6:	682b      	ldr	r3, [r5, #0]
 8012ab8:	4682      	mov	sl, r0
 8012aba:	6d1b      	ldr	r3, [r3, #80]	; 0x50
 8012abc:	4628      	mov	r0, r5
 8012abe:	4798      	blx	r3
 8012ac0:	4653      	mov	r3, sl
 8012ac2:	9000      	str	r0, [sp, #0]
 8012ac4:	9a02      	ldr	r2, [sp, #8]
 8012ac6:	9925      	ldr	r1, [sp, #148]	; 0x94
 8012ac8:	a803      	add	r0, sp, #12
 8012aca:	f005 fcac 	bl	8018426 <_ZN8touchgfx12TextProvider10initializeEPKtSt9__va_listS2_PKNS_24FontContextualFormsTableE>
 8012ace:	8da2      	ldrh	r2, [r4, #44]	; 0x2c
 8012ad0:	f8d9 3000 	ldr.w	r3, [r9]
 8012ad4:	f894 c037 	ldrb.w	ip, [r4, #55]	; 0x37
 8012ad8:	8925      	ldrh	r5, [r4, #8]
 8012ada:	f813 0012 	ldrb.w	r0, [r3, r2, lsl #1]
 8012ade:	eb03 0142 	add.w	r1, r3, r2, lsl #1
 8012ae2:	eba5 050c 	sub.w	r5, r5, ip
 8012ae6:	784a      	ldrb	r2, [r1, #1]
 8012ae8:	f8d8 3000 	ldr.w	r3, [r8]
 8012aec:	f894 1039 	ldrb.w	r1, [r4, #57]	; 0x39
 8012af0:	b22d      	sxth	r5, r5
 8012af2:	9500      	str	r5, [sp, #0]
 8012af4:	f853 3020 	ldr.w	r3, [r3, r0, lsl #2]
 8012af8:	f3c2 0281 	ubfx	r2, r2, #2, #2
 8012afc:	a803      	add	r0, sp, #12
 8012afe:	f003 f8b9 	bl	8015c74 <_ZN8touchgfx3LCD11getNumLinesERNS_12TextProviderENS_14WideTextActionEhPKNS_4FontEs>
 8012b02:	f9b4 2034 	ldrsh.w	r2, [r4, #52]	; 0x34
 8012b06:	18b9      	adds	r1, r7, r2
 8012b08:	2900      	cmp	r1, #0
 8012b0a:	b203      	sxth	r3, r0
 8012b0c:	dd0b      	ble.n	8012b26 <_ZNK8touchgfx8TextArea19calculateTextHeightEPKtz+0xba>
 8012b0e:	3b01      	subs	r3, #1
 8012b10:	fb13 f302 	smulbb	r3, r3, r2
 8012b14:	fb16 3300 	smlabb	r3, r6, r0, r3
 8012b18:	b21f      	sxth	r7, r3
 8012b1a:	4638      	mov	r0, r7
 8012b1c:	b01d      	add	sp, #116	; 0x74
 8012b1e:	e8bd 47f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, lr}
 8012b22:	b003      	add	sp, #12
 8012b24:	4770      	bx	lr
 8012b26:	2b00      	cmp	r3, #0
 8012b28:	dcf7      	bgt.n	8012b1a <_ZNK8touchgfx8TextArea19calculateTextHeightEPKtz+0xae>
 8012b2a:	2700      	movs	r7, #0
 8012b2c:	e7f5      	b.n	8012b1a <_ZNK8touchgfx8TextArea19calculateTextHeightEPKtz+0xae>
 8012b2e:	bf00      	nop
 8012b30:	20013878 	.word	0x20013878
 8012b34:	20013874 	.word	0x20013874
 8012b38:	2001387c 	.word	0x2001387c

08012b3c <_ZNK8touchgfx8TextArea21calculateBoundingAreaEv>:
 8012b3c:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 8012b40:	4bbc      	ldr	r3, [pc, #752]	; (8012e34 <_ZNK8touchgfx8TextArea21calculateBoundingAreaEv+0x2f8>)
 8012b42:	460c      	mov	r4, r1
 8012b44:	881b      	ldrh	r3, [r3, #0]
 8012b46:	8d89      	ldrh	r1, [r1, #44]	; 0x2c
 8012b48:	428b      	cmp	r3, r1
 8012b4a:	b0a9      	sub	sp, #164	; 0xa4
 8012b4c:	4680      	mov	r8, r0
 8012b4e:	d809      	bhi.n	8012b64 <_ZNK8touchgfx8TextArea21calculateBoundingAreaEv+0x28>
 8012b50:	2300      	movs	r3, #0
 8012b52:	f04f 32ff 	mov.w	r2, #4294967295
 8012b56:	e9c0 3200 	strd	r3, r2, [r0]
 8012b5a:	6083      	str	r3, [r0, #8]
 8012b5c:	4640      	mov	r0, r8
 8012b5e:	b029      	add	sp, #164	; 0xa4
 8012b60:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
 8012b64:	4eb4      	ldr	r6, [pc, #720]	; (8012e38 <_ZNK8touchgfx8TextArea21calculateBoundingAreaEv+0x2fc>)
 8012b66:	6833      	ldr	r3, [r6, #0]
 8012b68:	f813 2011 	ldrb.w	r2, [r3, r1, lsl #1]
 8012b6c:	4bb3      	ldr	r3, [pc, #716]	; (8012e3c <_ZNK8touchgfx8TextArea21calculateBoundingAreaEv+0x300>)
 8012b6e:	681b      	ldr	r3, [r3, #0]
 8012b70:	f853 5022 	ldr.w	r5, [r3, r2, lsl #2]
 8012b74:	4bb2      	ldr	r3, [pc, #712]	; (8012e40 <_ZNK8touchgfx8TextArea21calculateBoundingAreaEv+0x304>)
 8012b76:	6818      	ldr	r0, [r3, #0]
 8012b78:	f7f5 fde6 	bl	8008748 <_ZNK8touchgfx5Texts7getTextEt>
 8012b7c:	682b      	ldr	r3, [r5, #0]
 8012b7e:	4681      	mov	r9, r0
 8012b80:	6b9b      	ldr	r3, [r3, #56]	; 0x38
 8012b82:	4628      	mov	r0, r5
 8012b84:	4798      	blx	r3
 8012b86:	8ea7      	ldrh	r7, [r4, #52]	; 0x34
 8012b88:	b203      	sxth	r3, r0
 8012b8a:	4407      	add	r7, r0
 8012b8c:	9304      	str	r3, [sp, #16]
 8012b8e:	b2bb      	uxth	r3, r7
 8012b90:	9303      	str	r3, [sp, #12]
 8012b92:	f894 3039 	ldrb.w	r3, [r4, #57]	; 0x39
 8012b96:	4682      	mov	sl, r0
 8012b98:	a80f      	add	r0, sp, #60	; 0x3c
 8012b9a:	2b00      	cmp	r3, #0
 8012b9c:	f040 80a6 	bne.w	8012cec <_ZNK8touchgfx8TextArea21calculateBoundingAreaEv+0x1b0>
 8012ba0:	f005 fbe6 	bl	8018370 <_ZN8touchgfx12TextProviderC1Ev>
 8012ba4:	682b      	ldr	r3, [r5, #0]
 8012ba6:	4628      	mov	r0, r5
 8012ba8:	6cdb      	ldr	r3, [r3, #76]	; 0x4c
 8012baa:	4798      	blx	r3
 8012bac:	682b      	ldr	r3, [r5, #0]
 8012bae:	4606      	mov	r6, r0
 8012bb0:	6d1b      	ldr	r3, [r3, #80]	; 0x50
 8012bb2:	4628      	mov	r0, r5
 8012bb4:	4798      	blx	r3
 8012bb6:	6823      	ldr	r3, [r4, #0]
 8012bb8:	4607      	mov	r7, r0
 8012bba:	6fdb      	ldr	r3, [r3, #124]	; 0x7c
 8012bbc:	4620      	mov	r0, r4
 8012bbe:	4798      	blx	r3
 8012bc0:	6823      	ldr	r3, [r4, #0]
 8012bc2:	4683      	mov	fp, r0
 8012bc4:	f8d3 3080 	ldr.w	r3, [r3, #128]	; 0x80
 8012bc8:	4620      	mov	r0, r4
 8012bca:	4798      	blx	r3
 8012bcc:	463b      	mov	r3, r7
 8012bce:	e9cd b000 	strd	fp, r0, [sp]
 8012bd2:	4649      	mov	r1, r9
 8012bd4:	4632      	mov	r2, r6
 8012bd6:	a80f      	add	r0, sp, #60	; 0x3c
 8012bd8:	f005 fc3a 	bl	8018450 <_ZN8touchgfx12TextProvider10initializeEPKtS2_PKNS_24FontContextualFormsTableEz>
 8012bdc:	f894 3038 	ldrb.w	r3, [r4, #56]	; 0x38
 8012be0:	f8df b254 	ldr.w	fp, [pc, #596]	; 8012e38 <_ZNK8touchgfx8TextArea21calculateBoundingAreaEv+0x2fc>
 8012be4:	f013 0ffd 	tst.w	r3, #253	; 0xfd
 8012be8:	f04f 0600 	mov.w	r6, #0
 8012bec:	bf0c      	ite	eq
 8012bee:	f9b4 900a 	ldrsheq.w	r9, [r4, #10]
 8012bf2:	f9b4 9008 	ldrshne.w	r9, [r4, #8]
 8012bf6:	4637      	mov	r7, r6
 8012bf8:	8da2      	ldrh	r2, [r4, #44]	; 0x2c
 8012bfa:	f8db 3000 	ldr.w	r3, [fp]
 8012bfe:	eb03 0342 	add.w	r3, r3, r2, lsl #1
 8012c02:	4629      	mov	r1, r5
 8012c04:	785b      	ldrb	r3, [r3, #1]
 8012c06:	f647 72ff 	movw	r2, #32767	; 0x7fff
 8012c0a:	f3c3 0381 	ubfx	r3, r3, #2, #2
 8012c0e:	a80f      	add	r0, sp, #60	; 0x3c
 8012c10:	f002 fd4b 	bl	80156aa <_ZN8touchgfx3LCD11stringWidthERNS_12TextProviderERKNS_4FontEih>
 8012c14:	9b03      	ldr	r3, [sp, #12]
 8012c16:	4286      	cmp	r6, r0
 8012c18:	bfb8      	it	lt
 8012c1a:	4606      	movlt	r6, r0
 8012c1c:	3701      	adds	r7, #1
 8012c1e:	eba9 0903 	sub.w	r9, r9, r3
 8012c22:	a80f      	add	r0, sp, #60	; 0x3c
 8012c24:	b236      	sxth	r6, r6
 8012c26:	b2bf      	uxth	r7, r7
 8012c28:	fa0f f989 	sxth.w	r9, r9
 8012c2c:	f005 fbc7 	bl	80183be <_ZN8touchgfx12TextProvider11endOfStringEv>
 8012c30:	b918      	cbnz	r0, 8012c3a <_ZNK8touchgfx8TextArea21calculateBoundingAreaEv+0xfe>
 8012c32:	7a2b      	ldrb	r3, [r5, #8]
 8012c34:	444b      	add	r3, r9
 8012c36:	2b00      	cmp	r3, #0
 8012c38:	dcde      	bgt.n	8012bf8 <_ZNK8touchgfx8TextArea21calculateBoundingAreaEv+0xbc>
 8012c3a:	9b03      	ldr	r3, [sp, #12]
 8012c3c:	9a04      	ldr	r2, [sp, #16]
 8012c3e:	f895 9009 	ldrb.w	r9, [r5, #9]
 8012c42:	fb13 f707 	smulbb	r7, r3, r7
 8012c46:	8ea3      	ldrh	r3, [r4, #52]	; 0x34
 8012c48:	1aff      	subs	r7, r7, r3
 8012c4a:	b2bf      	uxth	r7, r7
 8012c4c:	b23b      	sxth	r3, r7
 8012c4e:	429a      	cmp	r2, r3
 8012c50:	bfa8      	it	ge
 8012c52:	4657      	movge	r7, sl
 8012c54:	f894 3038 	ldrb.w	r3, [r4, #56]	; 0x38
 8012c58:	f013 0ffd 	tst.w	r3, #253	; 0xfd
 8012c5c:	6823      	ldr	r3, [r4, #0]
 8012c5e:	bf08      	it	eq
 8012c60:	f9b4 a008 	ldrsheq.w	sl, [r4, #8]
 8012c64:	6edb      	ldr	r3, [r3, #108]	; 0x6c
 8012c66:	bf18      	it	ne
 8012c68:	f9b4 a00a 	ldrshne.w	sl, [r4, #10]
 8012c6c:	4620      	mov	r0, r4
 8012c6e:	4798      	blx	r3
 8012c70:	444f      	add	r7, r9
 8012c72:	fa1f f987 	uxth.w	r9, r7
 8012c76:	2801      	cmp	r0, #1
 8012c78:	fa0f f789 	sxth.w	r7, r9
 8012c7c:	b2b3      	uxth	r3, r6
 8012c7e:	f000 80e1 	beq.w	8012e44 <_ZNK8touchgfx8TextArea21calculateBoundingAreaEv+0x308>
 8012c82:	2802      	cmp	r0, #2
 8012c84:	f894 6037 	ldrb.w	r6, [r4, #55]	; 0x37
 8012c88:	f000 80e2 	beq.w	8012e50 <_ZNK8touchgfx8TextArea21calculateBoundingAreaEv+0x314>
 8012c8c:	7aea      	ldrb	r2, [r5, #11]
 8012c8e:	7b2d      	ldrb	r5, [r5, #12]
 8012c90:	b236      	sxth	r6, r6
 8012c92:	1ab6      	subs	r6, r6, r2
 8012c94:	442a      	add	r2, r5
 8012c96:	4413      	add	r3, r2
 8012c98:	f894 2038 	ldrb.w	r2, [r4, #56]	; 0x38
 8012c9c:	fa1f fa86 	uxth.w	sl, r6
 8012ca0:	b29b      	uxth	r3, r3
 8012ca2:	2a02      	cmp	r2, #2
 8012ca4:	fa0f fb8a 	sxth.w	fp, sl
 8012ca8:	b21e      	sxth	r6, r3
 8012caa:	f000 80d5 	beq.w	8012e58 <_ZNK8touchgfx8TextArea21calculateBoundingAreaEv+0x31c>
 8012cae:	2a03      	cmp	r2, #3
 8012cb0:	f000 80dd 	beq.w	8012e6e <_ZNK8touchgfx8TextArea21calculateBoundingAreaEv+0x332>
 8012cb4:	2a01      	cmp	r2, #1
 8012cb6:	f040 80e5 	bne.w	8012e84 <_ZNK8touchgfx8TextArea21calculateBoundingAreaEv+0x348>
 8012cba:	8925      	ldrh	r5, [r4, #8]
 8012cbc:	4633      	mov	r3, r6
 8012cbe:	eba5 0909 	sub.w	r9, r5, r9
 8012cc2:	463e      	mov	r6, r7
 8012cc4:	465d      	mov	r5, fp
 8012cc6:	461f      	mov	r7, r3
 8012cc8:	fa0f fb89 	sxth.w	fp, r9
 8012ccc:	4b5c      	ldr	r3, [pc, #368]	; (8012e40 <_ZNK8touchgfx8TextArea21calculateBoundingAreaEv+0x304>)
 8012cce:	8da1      	ldrh	r1, [r4, #44]	; 0x2c
 8012cd0:	6818      	ldr	r0, [r3, #0]
 8012cd2:	f7f5 fd39 	bl	8008748 <_ZNK8touchgfx5Texts7getTextEt>
 8012cd6:	f8a8 b000 	strh.w	fp, [r8]
 8012cda:	f8a8 5002 	strh.w	r5, [r8, #2]
 8012cde:	f8a8 6004 	strh.w	r6, [r8, #4]
 8012ce2:	f8a8 7006 	strh.w	r7, [r8, #6]
 8012ce6:	f8c8 0008 	str.w	r0, [r8, #8]
 8012cea:	e737      	b.n	8012b5c <_ZNK8touchgfx8TextArea21calculateBoundingAreaEv+0x20>
 8012cec:	f005 fb40 	bl	8018370 <_ZN8touchgfx12TextProviderC1Ev>
 8012cf0:	682b      	ldr	r3, [r5, #0]
 8012cf2:	4628      	mov	r0, r5
 8012cf4:	6cdb      	ldr	r3, [r3, #76]	; 0x4c
 8012cf6:	4798      	blx	r3
 8012cf8:	682b      	ldr	r3, [r5, #0]
 8012cfa:	4607      	mov	r7, r0
 8012cfc:	6d1b      	ldr	r3, [r3, #80]	; 0x50
 8012cfe:	4628      	mov	r0, r5
 8012d00:	4798      	blx	r3
 8012d02:	6823      	ldr	r3, [r4, #0]
 8012d04:	4683      	mov	fp, r0
 8012d06:	6fdb      	ldr	r3, [r3, #124]	; 0x7c
 8012d08:	4620      	mov	r0, r4
 8012d0a:	4798      	blx	r3
 8012d0c:	6822      	ldr	r2, [r4, #0]
 8012d0e:	9005      	str	r0, [sp, #20]
 8012d10:	f8d2 2080 	ldr.w	r2, [r2, #128]	; 0x80
 8012d14:	4620      	mov	r0, r4
 8012d16:	4790      	blx	r2
 8012d18:	9b05      	ldr	r3, [sp, #20]
 8012d1a:	9001      	str	r0, [sp, #4]
 8012d1c:	463a      	mov	r2, r7
 8012d1e:	4649      	mov	r1, r9
 8012d20:	9300      	str	r3, [sp, #0]
 8012d22:	a80f      	add	r0, sp, #60	; 0x3c
 8012d24:	465b      	mov	r3, fp
 8012d26:	f005 fb93 	bl	8018450 <_ZN8touchgfx12TextProvider10initializeEPKtS2_PKNS_24FontContextualFormsTableEz>
 8012d2a:	f894 3038 	ldrb.w	r3, [r4, #56]	; 0x38
 8012d2e:	f9b4 9008 	ldrsh.w	r9, [r4, #8]
 8012d32:	8da1      	ldrh	r1, [r4, #44]	; 0x2c
 8012d34:	f894 0039 	ldrb.w	r0, [r4, #57]	; 0x39
 8012d38:	f013 0ffd 	tst.w	r3, #253	; 0xfd
 8012d3c:	f9b4 300a 	ldrsh.w	r3, [r4, #10]
 8012d40:	bf0a      	itet	eq
 8012d42:	464a      	moveq	r2, r9
 8012d44:	461a      	movne	r2, r3
 8012d46:	4699      	moveq	r9, r3
 8012d48:	f894 3037 	ldrb.w	r3, [r4, #55]	; 0x37
 8012d4c:	1ad2      	subs	r2, r2, r3
 8012d4e:	6833      	ldr	r3, [r6, #0]
 8012d50:	f9b4 6034 	ldrsh.w	r6, [r4, #52]	; 0x34
 8012d54:	eb03 0341 	add.w	r3, r3, r1, lsl #1
 8012d58:	af0f      	add	r7, sp, #60	; 0x3c
 8012d5a:	7859      	ldrb	r1, [r3, #1]
 8012d5c:	9707      	str	r7, [sp, #28]
 8012d5e:	2300      	movs	r3, #0
 8012d60:	f3c1 0181 	ubfx	r1, r1, #2, #2
 8012d64:	f8ad 3018 	strh.w	r3, [sp, #24]
 8012d68:	f88d 1020 	strb.w	r1, [sp, #32]
 8012d6c:	f88d 0021 	strb.w	r0, [sp, #33]	; 0x21
 8012d70:	9509      	str	r5, [sp, #36]	; 0x24
 8012d72:	f8ad 2028 	strh.w	r2, [sp, #40]	; 0x28
 8012d76:	f8ad 902a 	strh.w	r9, [sp, #42]	; 0x2a
 8012d7a:	f8ad 602c 	strh.w	r6, [sp, #44]	; 0x2c
 8012d7e:	f8ad 302e 	strh.w	r3, [sp, #46]	; 0x2e
 8012d82:	f8ad 3030 	strh.w	r3, [sp, #48]	; 0x30
 8012d86:	f8ad 3032 	strh.w	r3, [sp, #50]	; 0x32
 8012d8a:	f8ad 3034 	strh.w	r3, [sp, #52]	; 0x34
 8012d8e:	f8ad 3036 	strh.w	r3, [sp, #54]	; 0x36
 8012d92:	f8ad 3038 	strh.w	r3, [sp, #56]	; 0x38
 8012d96:	f88d 303a 	strb.w	r3, [sp, #58]	; 0x3a
 8012d9a:	b350      	cbz	r0, 8012df2 <_ZNK8touchgfx8TextArea21calculateBoundingAreaEv+0x2b6>
 8012d9c:	682b      	ldr	r3, [r5, #0]
 8012d9e:	4628      	mov	r0, r5
 8012da0:	695b      	ldr	r3, [r3, #20]
 8012da2:	4798      	blx	r3
 8012da4:	4607      	mov	r7, r0
 8012da6:	b320      	cbz	r0, 8012df2 <_ZNK8touchgfx8TextArea21calculateBoundingAreaEv+0x2b6>
 8012da8:	9809      	ldr	r0, [sp, #36]	; 0x24
 8012daa:	6803      	ldr	r3, [r0, #0]
 8012dac:	4639      	mov	r1, r7
 8012dae:	68db      	ldr	r3, [r3, #12]
 8012db0:	4798      	blx	r3
 8012db2:	4606      	mov	r6, r0
 8012db4:	b1e8      	cbz	r0, 8012df2 <_ZNK8touchgfx8TextArea21calculateBoundingAreaEv+0x2b6>
 8012db6:	7b43      	ldrb	r3, [r0, #13]
 8012db8:	7a82      	ldrb	r2, [r0, #10]
 8012dba:	005b      	lsls	r3, r3, #1
 8012dbc:	f403 7380 	and.w	r3, r3, #256	; 0x100
 8012dc0:	4313      	orrs	r3, r2
 8012dc2:	f8ad 3038 	strh.w	r3, [sp, #56]	; 0x38
 8012dc6:	f89d 3021 	ldrb.w	r3, [sp, #33]	; 0x21
 8012dca:	2b06      	cmp	r3, #6
 8012dcc:	d111      	bne.n	8012df2 <_ZNK8touchgfx8TextArea21calculateBoundingAreaEv+0x2b6>
 8012dce:	9809      	ldr	r0, [sp, #36]	; 0x24
 8012dd0:	6803      	ldr	r3, [r0, #0]
 8012dd2:	4632      	mov	r2, r6
 8012dd4:	6c5b      	ldr	r3, [r3, #68]	; 0x44
 8012dd6:	4639      	mov	r1, r7
 8012dd8:	4798      	blx	r3
 8012dda:	7b73      	ldrb	r3, [r6, #13]
 8012ddc:	005b      	lsls	r3, r3, #1
 8012dde:	f403 7280 	and.w	r2, r3, #256	; 0x100
 8012de2:	7ab3      	ldrb	r3, [r6, #10]
 8012de4:	4313      	orrs	r3, r2
 8012de6:	4418      	add	r0, r3
 8012de8:	f8bd 3038 	ldrh.w	r3, [sp, #56]	; 0x38
 8012dec:	4418      	add	r0, r3
 8012dee:	f8ad 0038 	strh.w	r0, [sp, #56]	; 0x38
 8012df2:	2600      	movs	r6, #0
 8012df4:	4637      	mov	r7, r6
 8012df6:	a806      	add	r0, sp, #24
 8012df8:	f002 fe38 	bl	8015a6c <_ZN8touchgfx3LCD22WideTextInternalStruct23scanStringLengthForLineEv>
 8012dfc:	f8bd 0036 	ldrh.w	r0, [sp, #54]	; 0x36
 8012e00:	9b03      	ldr	r3, [sp, #12]
 8012e02:	4286      	cmp	r6, r0
 8012e04:	eba9 0903 	sub.w	r9, r9, r3
 8012e08:	f8bd 3018 	ldrh.w	r3, [sp, #24]
 8012e0c:	bfb8      	it	lt
 8012e0e:	4606      	movlt	r6, r0
 8012e10:	3701      	adds	r7, #1
 8012e12:	b236      	sxth	r6, r6
 8012e14:	b2bf      	uxth	r7, r7
 8012e16:	fa0f f989 	sxth.w	r9, r9
 8012e1a:	2b00      	cmp	r3, #0
 8012e1c:	f43f af0d 	beq.w	8012c3a <_ZNK8touchgfx8TextArea21calculateBoundingAreaEv+0xfe>
 8012e20:	f89d 303a 	ldrb.w	r3, [sp, #58]	; 0x3a
 8012e24:	2b00      	cmp	r3, #0
 8012e26:	f47f af08 	bne.w	8012c3a <_ZNK8touchgfx8TextArea21calculateBoundingAreaEv+0xfe>
 8012e2a:	7a2b      	ldrb	r3, [r5, #8]
 8012e2c:	444b      	add	r3, r9
 8012e2e:	2b00      	cmp	r3, #0
 8012e30:	dce1      	bgt.n	8012df6 <_ZNK8touchgfx8TextArea21calculateBoundingAreaEv+0x2ba>
 8012e32:	e702      	b.n	8012c3a <_ZNK8touchgfx8TextArea21calculateBoundingAreaEv+0xfe>
 8012e34:	20013878 	.word	0x20013878
 8012e38:	20013874 	.word	0x20013874
 8012e3c:	2001387c 	.word	0x2001387c
 8012e40:	20013880 	.word	0x20013880
 8012e44:	ebaa 0606 	sub.w	r6, sl, r6
 8012e48:	2002      	movs	r0, #2
 8012e4a:	fb96 f6f0 	sdiv	r6, r6, r0
 8012e4e:	e71d      	b.n	8012c8c <_ZNK8touchgfx8TextArea21calculateBoundingAreaEv+0x150>
 8012e50:	441e      	add	r6, r3
 8012e52:	ebaa 0606 	sub.w	r6, sl, r6
 8012e56:	e719      	b.n	8012c8c <_ZNK8touchgfx8TextArea21calculateBoundingAreaEv+0x150>
 8012e58:	8925      	ldrh	r5, [r4, #8]
 8012e5a:	1aed      	subs	r5, r5, r3
 8012e5c:	eba5 050a 	sub.w	r5, r5, sl
 8012e60:	fa0f fb85 	sxth.w	fp, r5
 8012e64:	8965      	ldrh	r5, [r4, #10]
 8012e66:	eba5 0509 	sub.w	r5, r5, r9
 8012e6a:	b22d      	sxth	r5, r5
 8012e6c:	e72e      	b.n	8012ccc <_ZNK8touchgfx8TextArea21calculateBoundingAreaEv+0x190>
 8012e6e:	8965      	ldrh	r5, [r4, #10]
 8012e70:	1aed      	subs	r5, r5, r3
 8012e72:	eba5 050a 	sub.w	r5, r5, sl
 8012e76:	4633      	mov	r3, r6
 8012e78:	b22d      	sxth	r5, r5
 8012e7a:	463e      	mov	r6, r7
 8012e7c:	f04f 0b00 	mov.w	fp, #0
 8012e80:	461f      	mov	r7, r3
 8012e82:	e723      	b.n	8012ccc <_ZNK8touchgfx8TextArea21calculateBoundingAreaEv+0x190>
 8012e84:	2500      	movs	r5, #0
 8012e86:	e721      	b.n	8012ccc <_ZNK8touchgfx8TextArea21calculateBoundingAreaEv+0x190>

08012e88 <_ZN8touchgfx8TextAreaD0Ev>:
 8012e88:	b510      	push	{r4, lr}
 8012e8a:	2148      	movs	r1, #72	; 0x48
 8012e8c:	4604      	mov	r4, r0
 8012e8e:	f017 fc54 	bl	802a73a <_ZdlPvj>
 8012e92:	4620      	mov	r0, r4
 8012e94:	bd10      	pop	{r4, pc}
	...

08012e98 <_ZNK8touchgfx8TextArea17invalidateContentEv>:
 8012e98:	b513      	push	{r0, r1, r4, lr}
 8012e9a:	f890 3036 	ldrb.w	r3, [r0, #54]	; 0x36
 8012e9e:	4604      	mov	r4, r0
 8012ea0:	b1fb      	cbz	r3, 8012ee2 <_ZNK8touchgfx8TextArea17invalidateContentEv+0x4a>
 8012ea2:	4b16      	ldr	r3, [pc, #88]	; (8012efc <_ZNK8touchgfx8TextArea17invalidateContentEv+0x64>)
 8012ea4:	8d81      	ldrh	r1, [r0, #44]	; 0x2c
 8012ea6:	881b      	ldrh	r3, [r3, #0]
 8012ea8:	428b      	cmp	r3, r1
 8012eaa:	d91a      	bls.n	8012ee2 <_ZNK8touchgfx8TextArea17invalidateContentEv+0x4a>
 8012eac:	f9b0 3008 	ldrsh.w	r3, [r0, #8]
 8012eb0:	2b00      	cmp	r3, #0
 8012eb2:	dd16      	ble.n	8012ee2 <_ZNK8touchgfx8TextArea17invalidateContentEv+0x4a>
 8012eb4:	f9b0 300a 	ldrsh.w	r3, [r0, #10]
 8012eb8:	2b00      	cmp	r3, #0
 8012eba:	dd12      	ble.n	8012ee2 <_ZNK8touchgfx8TextArea17invalidateContentEv+0x4a>
 8012ebc:	4b10      	ldr	r3, [pc, #64]	; (8012f00 <_ZNK8touchgfx8TextArea17invalidateContentEv+0x68>)
 8012ebe:	6818      	ldr	r0, [r3, #0]
 8012ec0:	f7f5 fc42 	bl	8008748 <_ZNK8touchgfx5Texts7getTextEt>
 8012ec4:	f9b4 3042 	ldrsh.w	r3, [r4, #66]	; 0x42
 8012ec8:	6822      	ldr	r2, [r4, #0]
 8012eca:	2b00      	cmp	r3, #0
 8012ecc:	db06      	blt.n	8012edc <_ZNK8touchgfx8TextArea17invalidateContentEv+0x44>
 8012ece:	f9b4 3040 	ldrsh.w	r3, [r4, #64]	; 0x40
 8012ed2:	2b00      	cmp	r3, #0
 8012ed4:	db02      	blt.n	8012edc <_ZNK8touchgfx8TextArea17invalidateContentEv+0x44>
 8012ed6:	6c63      	ldr	r3, [r4, #68]	; 0x44
 8012ed8:	4298      	cmp	r0, r3
 8012eda:	d004      	beq.n	8012ee6 <_ZNK8touchgfx8TextArea17invalidateContentEv+0x4e>
 8012edc:	6953      	ldr	r3, [r2, #20]
 8012ede:	4620      	mov	r0, r4
 8012ee0:	4798      	blx	r3
 8012ee2:	b002      	add	sp, #8
 8012ee4:	bd10      	pop	{r4, pc}
 8012ee6:	f104 013c 	add.w	r1, r4, #60	; 0x3c
 8012eea:	c903      	ldmia	r1, {r0, r1}
 8012eec:	466b      	mov	r3, sp
 8012eee:	e883 0003 	stmia.w	r3, {r0, r1}
 8012ef2:	6912      	ldr	r2, [r2, #16]
 8012ef4:	4619      	mov	r1, r3
 8012ef6:	4620      	mov	r0, r4
 8012ef8:	4790      	blx	r2
 8012efa:	e7f2      	b.n	8012ee2 <_ZNK8touchgfx8TextArea17invalidateContentEv+0x4a>
 8012efc:	20013878 	.word	0x20013878
 8012f00:	20013880 	.word	0x20013880

08012f04 <_ZNK8touchgfx8TextArea4drawERKNS_4RectE>:
 8012f04:	e92d 41f0 	stmdb	sp!, {r4, r5, r6, r7, r8, lr}
 8012f08:	4b44      	ldr	r3, [pc, #272]	; (801301c <_ZNK8touchgfx8TextArea4drawERKNS_4RectE+0x118>)
 8012f0a:	8d82      	ldrh	r2, [r0, #44]	; 0x2c
 8012f0c:	881b      	ldrh	r3, [r3, #0]
 8012f0e:	4293      	cmp	r3, r2
 8012f10:	b08e      	sub	sp, #56	; 0x38
 8012f12:	4604      	mov	r4, r0
 8012f14:	d97e      	bls.n	8013014 <_ZNK8touchgfx8TextArea4drawERKNS_4RectE+0x110>
 8012f16:	6808      	ldr	r0, [r1, #0]
 8012f18:	4d41      	ldr	r5, [pc, #260]	; (8013020 <_ZNK8touchgfx8TextArea4drawERKNS_4RectE+0x11c>)
 8012f1a:	6849      	ldr	r1, [r1, #4]
 8012f1c:	ab05      	add	r3, sp, #20
 8012f1e:	c303      	stmia	r3!, {r0, r1}
 8012f20:	4611      	mov	r1, r2
 8012f22:	6828      	ldr	r0, [r5, #0]
 8012f24:	f7f5 fc10 	bl	8008748 <_ZNK8touchgfx5Texts7getTextEt>
 8012f28:	f9b4 3042 	ldrsh.w	r3, [r4, #66]	; 0x42
 8012f2c:	2b00      	cmp	r3, #0
 8012f2e:	db11      	blt.n	8012f54 <_ZNK8touchgfx8TextArea4drawERKNS_4RectE+0x50>
 8012f30:	f9b4 3040 	ldrsh.w	r3, [r4, #64]	; 0x40
 8012f34:	2b00      	cmp	r3, #0
 8012f36:	db0d      	blt.n	8012f54 <_ZNK8touchgfx8TextArea4drawERKNS_4RectE+0x50>
 8012f38:	6c63      	ldr	r3, [r4, #68]	; 0x44
 8012f3a:	4298      	cmp	r0, r3
 8012f3c:	d10a      	bne.n	8012f54 <_ZNK8touchgfx8TextArea4drawERKNS_4RectE+0x50>
 8012f3e:	f104 023c 	add.w	r2, r4, #60	; 0x3c
 8012f42:	e892 0003 	ldmia.w	r2, {r0, r1}
 8012f46:	ab09      	add	r3, sp, #36	; 0x24
 8012f48:	e883 0003 	stmia.w	r3, {r0, r1}
 8012f4c:	4619      	mov	r1, r3
 8012f4e:	a805      	add	r0, sp, #20
 8012f50:	f7fd fbec 	bl	801072c <_ZN8touchgfx4RectaNERKS0_>
 8012f54:	f9bd 3018 	ldrsh.w	r3, [sp, #24]
 8012f58:	2b00      	cmp	r3, #0
 8012f5a:	dd5b      	ble.n	8013014 <_ZNK8touchgfx8TextArea4drawERKNS_4RectE+0x110>
 8012f5c:	f9bd 301a 	ldrsh.w	r3, [sp, #26]
 8012f60:	2b00      	cmp	r3, #0
 8012f62:	dd57      	ble.n	8013014 <_ZNK8touchgfx8TextArea4drawERKNS_4RectE+0x110>
 8012f64:	4f2f      	ldr	r7, [pc, #188]	; (8013024 <_ZNK8touchgfx8TextArea4drawERKNS_4RectE+0x120>)
 8012f66:	8da2      	ldrh	r2, [r4, #44]	; 0x2c
 8012f68:	683b      	ldr	r3, [r7, #0]
 8012f6a:	f813 2012 	ldrb.w	r2, [r3, r2, lsl #1]
 8012f6e:	4b2e      	ldr	r3, [pc, #184]	; (8013028 <_ZNK8touchgfx8TextArea4drawERKNS_4RectE+0x124>)
 8012f70:	681b      	ldr	r3, [r3, #0]
 8012f72:	f853 6022 	ldr.w	r6, [r3, r2, lsl #2]
 8012f76:	2e00      	cmp	r6, #0
 8012f78:	d04c      	beq.n	8013014 <_ZNK8touchgfx8TextArea4drawERKNS_4RectE+0x110>
 8012f7a:	6823      	ldr	r3, [r4, #0]
 8012f7c:	f894 8036 	ldrb.w	r8, [r4, #54]	; 0x36
 8012f80:	6edb      	ldr	r3, [r3, #108]	; 0x6c
 8012f82:	4620      	mov	r0, r4
 8012f84:	4798      	blx	r3
 8012f86:	8da2      	ldrh	r2, [r4, #44]	; 0x2c
 8012f88:	683b      	ldr	r3, [r7, #0]
 8012f8a:	f9b4 c034 	ldrsh.w	ip, [r4, #52]	; 0x34
 8012f8e:	f894 e038 	ldrb.w	lr, [r4, #56]	; 0x38
 8012f92:	f894 7037 	ldrb.w	r7, [r4, #55]	; 0x37
 8012f96:	6b21      	ldr	r1, [r4, #48]	; 0x30
 8012f98:	eb03 0342 	add.w	r3, r3, r2, lsl #1
 8012f9c:	f894 2039 	ldrb.w	r2, [r4, #57]	; 0x39
 8012fa0:	785b      	ldrb	r3, [r3, #1]
 8012fa2:	9609      	str	r6, [sp, #36]	; 0x24
 8012fa4:	f3c3 0381 	ubfx	r3, r3, #2, #2
 8012fa8:	f88d 3029 	strb.w	r3, [sp, #41]	; 0x29
 8012fac:	4b1f      	ldr	r3, [pc, #124]	; (801302c <_ZNK8touchgfx8TextArea4drawERKNS_4RectE+0x128>)
 8012fae:	f88d 0028 	strb.w	r0, [sp, #40]	; 0x28
 8012fb2:	681b      	ldr	r3, [r3, #0]
 8012fb4:	f88d e02a 	strb.w	lr, [sp, #42]	; 0x2a
 8012fb8:	910b      	str	r1, [sp, #44]	; 0x2c
 8012fba:	f8ad c030 	strh.w	ip, [sp, #48]	; 0x30
 8012fbe:	f88d 8032 	strb.w	r8, [sp, #50]	; 0x32
 8012fc2:	f88d 7033 	strb.w	r7, [sp, #51]	; 0x33
 8012fc6:	f88d 2034 	strb.w	r2, [sp, #52]	; 0x34
 8012fca:	f893 2058 	ldrb.w	r2, [r3, #88]	; 0x58
 8012fce:	b10a      	cbz	r2, 8012fd4 <_ZNK8touchgfx8TextArea4drawERKNS_4RectE+0xd0>
 8012fd0:	6cde      	ldr	r6, [r3, #76]	; 0x4c
 8012fd2:	b906      	cbnz	r6, 8012fd6 <_ZNK8touchgfx8TextArea4drawERKNS_4RectE+0xd2>
 8012fd4:	689e      	ldr	r6, [r3, #8]
 8012fd6:	af07      	add	r7, sp, #28
 8012fd8:	4621      	mov	r1, r4
 8012fda:	4638      	mov	r0, r7
 8012fdc:	f004 fc7c 	bl	80178d8 <_ZNK8touchgfx8Drawable15getAbsoluteRectEv>
 8012fe0:	8da1      	ldrh	r1, [r4, #44]	; 0x2c
 8012fe2:	6828      	ldr	r0, [r5, #0]
 8012fe4:	f7f5 fbb0 	bl	8008748 <_ZNK8touchgfx5Texts7getTextEt>
 8012fe8:	6823      	ldr	r3, [r4, #0]
 8012fea:	4605      	mov	r5, r0
 8012fec:	6fdb      	ldr	r3, [r3, #124]	; 0x7c
 8012fee:	4620      	mov	r0, r4
 8012ff0:	4798      	blx	r3
 8012ff2:	6823      	ldr	r3, [r4, #0]
 8012ff4:	4680      	mov	r8, r0
 8012ff6:	f8d3 3080 	ldr.w	r3, [r3, #128]	; 0x80
 8012ffa:	4620      	mov	r0, r4
 8012ffc:	4798      	blx	r3
 8012ffe:	e9cd 8002 	strd	r8, r0, [sp, #8]
 8013002:	ab09      	add	r3, sp, #36	; 0x24
 8013004:	9300      	str	r3, [sp, #0]
 8013006:	9501      	str	r5, [sp, #4]
 8013008:	ab05      	add	r3, sp, #20
 801300a:	e897 0006 	ldmia.w	r7, {r1, r2}
 801300e:	4630      	mov	r0, r6
 8013010:	f7f5 fb4c 	bl	80086ac <_ZN8touchgfx3LCD10drawStringENS_4RectERKS1_RKNS0_13StringVisualsEPKtz>
 8013014:	b00e      	add	sp, #56	; 0x38
 8013016:	e8bd 81f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, pc}
 801301a:	bf00      	nop
 801301c:	20013878 	.word	0x20013878
 8013020:	20013880 	.word	0x20013880
 8013024:	20013874 	.word	0x20013874
 8013028:	2001387c 	.word	0x2001387c
 801302c:	2001381c 	.word	0x2001381c

08013030 <_ZN8touchgfx8TextArea19resizeToCurrentTextEv>:
 8013030:	b538      	push	{r3, r4, r5, lr}
 8013032:	4b0e      	ldr	r3, [pc, #56]	; (801306c <_ZN8touchgfx8TextArea19resizeToCurrentTextEv+0x3c>)
 8013034:	8d82      	ldrh	r2, [r0, #44]	; 0x2c
 8013036:	881b      	ldrh	r3, [r3, #0]
 8013038:	429a      	cmp	r2, r3
 801303a:	4604      	mov	r4, r0
 801303c:	d214      	bcs.n	8013068 <_ZN8touchgfx8TextArea19resizeToCurrentTextEv+0x38>
 801303e:	6803      	ldr	r3, [r0, #0]
 8013040:	6f5b      	ldr	r3, [r3, #116]	; 0x74
 8013042:	4798      	blx	r3
 8013044:	6823      	ldr	r3, [r4, #0]
 8013046:	4605      	mov	r5, r0
 8013048:	6f1b      	ldr	r3, [r3, #112]	; 0x70
 801304a:	4620      	mov	r0, r4
 801304c:	4798      	blx	r3
 801304e:	f894 3038 	ldrb.w	r3, [r4, #56]	; 0x38
 8013052:	b22d      	sxth	r5, r5
 8013054:	f013 0ffd 	tst.w	r3, #253	; 0xfd
 8013058:	4601      	mov	r1, r0
 801305a:	bf06      	itte	eq
 801305c:	4602      	moveq	r2, r0
 801305e:	4629      	moveq	r1, r5
 8013060:	462a      	movne	r2, r5
 8013062:	4620      	mov	r0, r4
 8013064:	f7fd f942 	bl	80102ec <_ZN8touchgfx8Drawable14setWidthHeightEss>
 8013068:	bd38      	pop	{r3, r4, r5, pc}
 801306a:	bf00      	nop
 801306c:	20013878 	.word	0x20013878

08013070 <_ZN8touchgfx8TextArea12setTypedTextERKNS_9TypedTextE>:
 8013070:	b530      	push	{r4, r5, lr}
 8013072:	888b      	ldrh	r3, [r1, #4]
 8013074:	8583      	strh	r3, [r0, #44]	; 0x2c
 8013076:	f9b0 3008 	ldrsh.w	r3, [r0, #8]
 801307a:	b085      	sub	sp, #20
 801307c:	4604      	mov	r4, r0
 801307e:	b923      	cbnz	r3, 801308a <_ZN8touchgfx8TextArea12setTypedTextERKNS_9TypedTextE+0x1a>
 8013080:	f9b0 300a 	ldrsh.w	r3, [r0, #10]
 8013084:	b90b      	cbnz	r3, 801308a <_ZN8touchgfx8TextArea12setTypedTextERKNS_9TypedTextE+0x1a>
 8013086:	f7ff ffd3 	bl	8013030 <_ZN8touchgfx8TextArea19resizeToCurrentTextEv>
 801308a:	6823      	ldr	r3, [r4, #0]
 801308c:	466d      	mov	r5, sp
 801308e:	4621      	mov	r1, r4
 8013090:	4628      	mov	r0, r5
 8013092:	f8d3 3084 	ldr.w	r3, [r3, #132]	; 0x84
 8013096:	4798      	blx	r3
 8013098:	e895 0007 	ldmia.w	r5, {r0, r1, r2}
 801309c:	343c      	adds	r4, #60	; 0x3c
 801309e:	e884 0007 	stmia.w	r4, {r0, r1, r2}
 80130a2:	b005      	add	sp, #20
 80130a4:	bd30      	pop	{r4, r5, pc}

080130a6 <_ZNK8touchgfx3Box12getSolidRectEv>:
 80130a6:	2300      	movs	r3, #0
 80130a8:	8083      	strh	r3, [r0, #4]
 80130aa:	80c3      	strh	r3, [r0, #6]
 80130ac:	8003      	strh	r3, [r0, #0]
 80130ae:	8043      	strh	r3, [r0, #2]
 80130b0:	f891 3026 	ldrb.w	r3, [r1, #38]	; 0x26
 80130b4:	2bff      	cmp	r3, #255	; 0xff
 80130b6:	bf01      	itttt	eq
 80130b8:	890b      	ldrheq	r3, [r1, #8]
 80130ba:	8083      	strheq	r3, [r0, #4]
 80130bc:	894b      	ldrheq	r3, [r1, #10]
 80130be:	80c3      	strheq	r3, [r0, #6]
 80130c0:	4770      	bx	lr
	...

080130c4 <_ZNK8touchgfx3Box4drawERKNS_4RectE>:
 80130c4:	b537      	push	{r0, r1, r2, r4, r5, lr}
 80130c6:	4604      	mov	r4, r0
 80130c8:	6808      	ldr	r0, [r1, #0]
 80130ca:	6849      	ldr	r1, [r1, #4]
 80130cc:	466b      	mov	r3, sp
 80130ce:	c303      	stmia	r3!, {r0, r1}
 80130d0:	6823      	ldr	r3, [r4, #0]
 80130d2:	4669      	mov	r1, sp
 80130d4:	6adb      	ldr	r3, [r3, #44]	; 0x2c
 80130d6:	4620      	mov	r0, r4
 80130d8:	4798      	blx	r3
 80130da:	4b08      	ldr	r3, [pc, #32]	; (80130fc <_ZNK8touchgfx3Box4drawERKNS_4RectE+0x38>)
 80130dc:	681b      	ldr	r3, [r3, #0]
 80130de:	f893 2058 	ldrb.w	r2, [r3, #88]	; 0x58
 80130e2:	b10a      	cbz	r2, 80130e8 <_ZNK8touchgfx3Box4drawERKNS_4RectE+0x24>
 80130e4:	6cd8      	ldr	r0, [r3, #76]	; 0x4c
 80130e6:	b900      	cbnz	r0, 80130ea <_ZNK8touchgfx3Box4drawERKNS_4RectE+0x26>
 80130e8:	6898      	ldr	r0, [r3, #8]
 80130ea:	6803      	ldr	r3, [r0, #0]
 80130ec:	6aa2      	ldr	r2, [r4, #40]	; 0x28
 80130ee:	6a1d      	ldr	r5, [r3, #32]
 80130f0:	f894 3026 	ldrb.w	r3, [r4, #38]	; 0x26
 80130f4:	4669      	mov	r1, sp
 80130f6:	47a8      	blx	r5
 80130f8:	b003      	add	sp, #12
 80130fa:	bd30      	pop	{r4, r5, pc}
 80130fc:	2001381c 	.word	0x2001381c

08013100 <_ZN8touchgfx3BoxD1Ev>:
 8013100:	4770      	bx	lr

08013102 <_ZN8touchgfx3BoxD0Ev>:
 8013102:	b510      	push	{r4, lr}
 8013104:	212c      	movs	r1, #44	; 0x2c
 8013106:	4604      	mov	r4, r0
 8013108:	f017 fb17 	bl	802a73a <_ZdlPvj>
 801310c:	4620      	mov	r0, r4
 801310e:	bd10      	pop	{r4, pc}

08013110 <_ZNK8touchgfx3Box17invalidateContentEv>:
 8013110:	f890 2026 	ldrb.w	r2, [r0, #38]	; 0x26
 8013114:	b12a      	cbz	r2, 8013122 <_ZNK8touchgfx3Box17invalidateContentEv+0x12>
 8013116:	f890 2025 	ldrb.w	r2, [r0, #37]	; 0x25
 801311a:	b112      	cbz	r2, 8013122 <_ZNK8touchgfx3Box17invalidateContentEv+0x12>
 801311c:	6803      	ldr	r3, [r0, #0]
 801311e:	695b      	ldr	r3, [r3, #20]
 8013120:	4718      	bx	r3
 8013122:	4770      	bx	lr

08013124 <_ZN8touchgfx10TiledImage9setOffsetEss>:
 8013124:	b570      	push	{r4, r5, r6, lr}
 8013126:	6803      	ldr	r3, [r0, #0]
 8013128:	4604      	mov	r4, r0
 801312a:	6e9b      	ldr	r3, [r3, #104]	; 0x68
 801312c:	4615      	mov	r5, r2
 801312e:	4798      	blx	r3
 8013130:	6823      	ldr	r3, [r4, #0]
 8013132:	4629      	mov	r1, r5
 8013134:	4620      	mov	r0, r4
 8013136:	6edb      	ldr	r3, [r3, #108]	; 0x6c
 8013138:	e8bd 4070 	ldmia.w	sp!, {r4, r5, r6, lr}
 801313c:	4718      	bx	r3

0801313e <_ZN8touchgfx10TiledImage9getOffsetERsS1_>:
 801313e:	b570      	push	{r4, r5, r6, lr}
 8013140:	6803      	ldr	r3, [r0, #0]
 8013142:	6f5b      	ldr	r3, [r3, #116]	; 0x74
 8013144:	4604      	mov	r4, r0
 8013146:	460e      	mov	r6, r1
 8013148:	4615      	mov	r5, r2
 801314a:	4798      	blx	r3
 801314c:	8030      	strh	r0, [r6, #0]
 801314e:	6823      	ldr	r3, [r4, #0]
 8013150:	4620      	mov	r0, r4
 8013152:	6f9b      	ldr	r3, [r3, #120]	; 0x78
 8013154:	4798      	blx	r3
 8013156:	8028      	strh	r0, [r5, #0]
 8013158:	bd70      	pop	{r4, r5, r6, pc}

0801315a <_ZN8touchgfx10TiledImage10getXOffsetEv>:
 801315a:	f9b0 002a 	ldrsh.w	r0, [r0, #42]	; 0x2a
 801315e:	4770      	bx	lr

08013160 <_ZN8touchgfx10TiledImage10getYOffsetEv>:
 8013160:	f9b0 002c 	ldrsh.w	r0, [r0, #44]	; 0x2c
 8013164:	4770      	bx	lr

08013166 <_ZN8touchgfx10TiledImageD1Ev>:
 8013166:	4770      	bx	lr

08013168 <_ZN8touchgfx10TiledImage9setBitmapERKNS_6BitmapE>:
 8013168:	b510      	push	{r4, lr}
 801316a:	4604      	mov	r4, r0
 801316c:	f000 fd31 	bl	8013bd2 <_ZN8touchgfx5Image9setBitmapERKNS_6BitmapE>
 8013170:	6823      	ldr	r3, [r4, #0]
 8013172:	f9b4 202c 	ldrsh.w	r2, [r4, #44]	; 0x2c
 8013176:	f9b4 102a 	ldrsh.w	r1, [r4, #42]	; 0x2a
 801317a:	6e5b      	ldr	r3, [r3, #100]	; 0x64
 801317c:	4620      	mov	r0, r4
 801317e:	e8bd 4010 	ldmia.w	sp!, {r4, lr}
 8013182:	4718      	bx	r3

08013184 <_ZN8touchgfx10TiledImage10setXOffsetEs>:
 8013184:	b538      	push	{r3, r4, r5, lr}
 8013186:	f100 0526 	add.w	r5, r0, #38	; 0x26
 801318a:	4604      	mov	r4, r0
 801318c:	8541      	strh	r1, [r0, #42]	; 0x2a
 801318e:	4628      	mov	r0, r5
 8013190:	f006 fe6e 	bl	8019e70 <_ZNK8touchgfx6Bitmap8getWidthEv>
 8013194:	b188      	cbz	r0, 80131ba <_ZN8touchgfx10TiledImage10setXOffsetEs+0x36>
 8013196:	4628      	mov	r0, r5
 8013198:	f006 fe6a 	bl	8019e70 <_ZNK8touchgfx6Bitmap8getWidthEv>
 801319c:	f9b4 202a 	ldrsh.w	r2, [r4, #42]	; 0x2a
 80131a0:	fb92 f3f0 	sdiv	r3, r2, r0
 80131a4:	fb03 2010 	mls	r0, r3, r0, r2
 80131a8:	2800      	cmp	r0, #0
 80131aa:	8560      	strh	r0, [r4, #42]	; 0x2a
 80131ac:	da05      	bge.n	80131ba <_ZN8touchgfx10TiledImage10setXOffsetEs+0x36>
 80131ae:	4628      	mov	r0, r5
 80131b0:	f006 fe5e 	bl	8019e70 <_ZNK8touchgfx6Bitmap8getWidthEv>
 80131b4:	8d63      	ldrh	r3, [r4, #42]	; 0x2a
 80131b6:	4418      	add	r0, r3
 80131b8:	8560      	strh	r0, [r4, #42]	; 0x2a
 80131ba:	bd38      	pop	{r3, r4, r5, pc}

080131bc <_ZN8touchgfx10TiledImage10setYOffsetEs>:
 80131bc:	b538      	push	{r3, r4, r5, lr}
 80131be:	f100 0526 	add.w	r5, r0, #38	; 0x26
 80131c2:	4604      	mov	r4, r0
 80131c4:	8581      	strh	r1, [r0, #44]	; 0x2c
 80131c6:	4628      	mov	r0, r5
 80131c8:	f006 fe86 	bl	8019ed8 <_ZNK8touchgfx6Bitmap9getHeightEv>
 80131cc:	b188      	cbz	r0, 80131f2 <_ZN8touchgfx10TiledImage10setYOffsetEs+0x36>
 80131ce:	4628      	mov	r0, r5
 80131d0:	f006 fe82 	bl	8019ed8 <_ZNK8touchgfx6Bitmap9getHeightEv>
 80131d4:	f9b4 202c 	ldrsh.w	r2, [r4, #44]	; 0x2c
 80131d8:	fb92 f3f0 	sdiv	r3, r2, r0
 80131dc:	fb03 2010 	mls	r0, r3, r0, r2
 80131e0:	2800      	cmp	r0, #0
 80131e2:	85a0      	strh	r0, [r4, #44]	; 0x2c
 80131e4:	da05      	bge.n	80131f2 <_ZN8touchgfx10TiledImage10setYOffsetEs+0x36>
 80131e6:	4628      	mov	r0, r5
 80131e8:	f006 fe76 	bl	8019ed8 <_ZNK8touchgfx6Bitmap9getHeightEv>
 80131ec:	8da3      	ldrh	r3, [r4, #44]	; 0x2c
 80131ee:	4418      	add	r0, r3
 80131f0:	85a0      	strh	r0, [r4, #44]	; 0x2c
 80131f2:	bd38      	pop	{r3, r4, r5, pc}

080131f4 <_ZN8touchgfx10TiledImageD0Ev>:
 80131f4:	b510      	push	{r4, lr}
 80131f6:	2130      	movs	r1, #48	; 0x30
 80131f8:	4604      	mov	r4, r0
 80131fa:	f017 fa9e 	bl	802a73a <_ZdlPvj>
 80131fe:	4620      	mov	r0, r4
 8013200:	bd10      	pop	{r4, pc}
	...

08013204 <_ZNK8touchgfx10TiledImage4drawERKNS_4RectE>:
 8013204:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 8013208:	f100 0b26 	add.w	fp, r0, #38	; 0x26
 801320c:	b093      	sub	sp, #76	; 0x4c
 801320e:	4607      	mov	r7, r0
 8013210:	4658      	mov	r0, fp
 8013212:	460e      	mov	r6, r1
 8013214:	f006 fe2c 	bl	8019e70 <_ZNK8touchgfx6Bitmap8getWidthEv>
 8013218:	4681      	mov	r9, r0
 801321a:	4658      	mov	r0, fp
 801321c:	f006 fe5c 	bl	8019ed8 <_ZNK8touchgfx6Bitmap9getHeightEv>
 8013220:	4605      	mov	r5, r0
 8013222:	f1b9 0f00 	cmp.w	r9, #0
 8013226:	f000 80c4 	beq.w	80133b2 <_ZNK8touchgfx10TiledImage4drawERKNS_4RectE+0x1ae>
 801322a:	2800      	cmp	r0, #0
 801322c:	f000 80c1 	beq.w	80133b2 <_ZNK8touchgfx10TiledImage4drawERKNS_4RectE+0x1ae>
 8013230:	2300      	movs	r3, #0
 8013232:	e9cd 330e 	strd	r3, r3, [sp, #56]	; 0x38
 8013236:	683b      	ldr	r3, [r7, #0]
 8013238:	a90e      	add	r1, sp, #56	; 0x38
 801323a:	6adb      	ldr	r3, [r3, #44]	; 0x2c
 801323c:	4638      	mov	r0, r7
 801323e:	4798      	blx	r3
 8013240:	f9b7 202a 	ldrsh.w	r2, [r7, #42]	; 0x2a
 8013244:	f9b6 3000 	ldrsh.w	r3, [r6]
 8013248:	88b1      	ldrh	r1, [r6, #4]
 801324a:	fa1f f889 	uxth.w	r8, r9
 801324e:	189c      	adds	r4, r3, r2
 8013250:	440b      	add	r3, r1
 8013252:	fa02 f383 	sxtah	r3, r2, r3
 8013256:	fb94 f4f9 	sdiv	r4, r4, r9
 801325a:	fb14 f408 	smulbb	r4, r4, r8
 801325e:	1aa4      	subs	r4, r4, r2
 8013260:	3b01      	subs	r3, #1
 8013262:	b2aa      	uxth	r2, r5
 8013264:	fb93 f3f9 	sdiv	r3, r3, r9
 8013268:	fb13 f308 	smulbb	r3, r3, r8
 801326c:	b21b      	sxth	r3, r3
 801326e:	9205      	str	r2, [sp, #20]
 8013270:	f9b7 102c 	ldrsh.w	r1, [r7, #44]	; 0x2c
 8013274:	9805      	ldr	r0, [sp, #20]
 8013276:	930b      	str	r3, [sp, #44]	; 0x2c
 8013278:	f9b6 3002 	ldrsh.w	r3, [r6, #2]
 801327c:	185a      	adds	r2, r3, r1
 801327e:	fb92 f2f5 	sdiv	r2, r2, r5
 8013282:	fb12 f200 	smulbb	r2, r2, r0
 8013286:	1a52      	subs	r2, r2, r1
 8013288:	b212      	sxth	r2, r2
 801328a:	920c      	str	r2, [sp, #48]	; 0x30
 801328c:	88f2      	ldrh	r2, [r6, #6]
 801328e:	4413      	add	r3, r2
 8013290:	fa01 f383 	sxtah	r3, r1, r3
 8013294:	3b01      	subs	r3, #1
 8013296:	fb93 f3f5 	sdiv	r3, r3, r5
 801329a:	fb13 f300 	smulbb	r3, r3, r0
 801329e:	b2a4      	uxth	r4, r4
 80132a0:	b21b      	sxth	r3, r3
 80132a2:	930d      	str	r3, [sp, #52]	; 0x34
 80132a4:	eb08 0504 	add.w	r5, r8, r4
 80132a8:	9a0b      	ldr	r2, [sp, #44]	; 0x2c
 80132aa:	b223      	sxth	r3, r4
 80132ac:	4293      	cmp	r3, r2
 80132ae:	b2ad      	uxth	r5, r5
 80132b0:	9306      	str	r3, [sp, #24]
 80132b2:	dc7e      	bgt.n	80133b2 <_ZNK8touchgfx10TiledImage4drawERKNS_4RectE+0x1ae>
 80132b4:	b22b      	sxth	r3, r5
 80132b6:	f8dd 9030 	ldr.w	r9, [sp, #48]	; 0x30
 80132ba:	930a      	str	r3, [sp, #40]	; 0x28
 80132bc:	9b0d      	ldr	r3, [sp, #52]	; 0x34
 80132be:	4599      	cmp	r9, r3
 80132c0:	dd03      	ble.n	80132ca <_ZNK8touchgfx10TiledImage4drawERKNS_4RectE+0xc6>
 80132c2:	4444      	add	r4, r8
 80132c4:	b2a4      	uxth	r4, r4
 80132c6:	4445      	add	r5, r8
 80132c8:	e7ee      	b.n	80132a8 <_ZNK8touchgfx10TiledImage4drawERKNS_4RectE+0xa4>
 80132ca:	f9b6 c000 	ldrsh.w	ip, [r6]
 80132ce:	88b2      	ldrh	r2, [r6, #4]
 80132d0:	9806      	ldr	r0, [sp, #24]
 80132d2:	9905      	ldr	r1, [sp, #20]
 80132d4:	4462      	add	r2, ip
 80132d6:	b292      	uxth	r2, r2
 80132d8:	b213      	sxth	r3, r2
 80132da:	9308      	str	r3, [sp, #32]
 80132dc:	fa1f f389 	uxth.w	r3, r9
 80132e0:	4419      	add	r1, r3
 80132e2:	9307      	str	r3, [sp, #28]
 80132e4:	4603      	mov	r3, r0
 80132e6:	9808      	ldr	r0, [sp, #32]
 80132e8:	b289      	uxth	r1, r1
 80132ea:	4283      	cmp	r3, r0
 80132ec:	fa0f fa81 	sxth.w	sl, r1
 80132f0:	da5b      	bge.n	80133aa <_ZNK8touchgfx10TiledImage4drawERKNS_4RectE+0x1a6>
 80132f2:	980a      	ldr	r0, [sp, #40]	; 0x28
 80132f4:	4584      	cmp	ip, r0
 80132f6:	da58      	bge.n	80133aa <_ZNK8touchgfx10TiledImage4drawERKNS_4RectE+0x1a6>
 80132f8:	f9b6 0002 	ldrsh.w	r0, [r6, #2]
 80132fc:	f8b6 e006 	ldrh.w	lr, [r6, #6]
 8013300:	4486      	add	lr, r0
 8013302:	fa1f fe8e 	uxth.w	lr, lr
 8013306:	fa0f f38e 	sxth.w	r3, lr
 801330a:	4599      	cmp	r9, r3
 801330c:	9309      	str	r3, [sp, #36]	; 0x24
 801330e:	da4c      	bge.n	80133aa <_ZNK8touchgfx10TiledImage4drawERKNS_4RectE+0x1a6>
 8013310:	4550      	cmp	r0, sl
 8013312:	da4a      	bge.n	80133aa <_ZNK8touchgfx10TiledImage4drawERKNS_4RectE+0x1a6>
 8013314:	9b06      	ldr	r3, [sp, #24]
 8013316:	459c      	cmp	ip, r3
 8013318:	bfb8      	it	lt
 801331a:	469c      	movlt	ip, r3
 801331c:	9b08      	ldr	r3, [sp, #32]
 801331e:	f8ad c040 	strh.w	ip, [sp, #64]	; 0x40
 8013322:	4548      	cmp	r0, r9
 8013324:	bfb8      	it	lt
 8013326:	4648      	movlt	r0, r9
 8013328:	4699      	mov	r9, r3
 801332a:	9b0a      	ldr	r3, [sp, #40]	; 0x28
 801332c:	f8ad 0042 	strh.w	r0, [sp, #66]	; 0x42
 8013330:	4599      	cmp	r9, r3
 8013332:	bfc8      	it	gt
 8013334:	462a      	movgt	r2, r5
 8013336:	9b09      	ldr	r3, [sp, #36]	; 0x24
 8013338:	4553      	cmp	r3, sl
 801333a:	bfd8      	it	le
 801333c:	4671      	movle	r1, lr
 801333e:	eba2 020c 	sub.w	r2, r2, ip
 8013342:	1a09      	subs	r1, r1, r0
 8013344:	f8ad 2044 	strh.w	r2, [sp, #68]	; 0x44
 8013348:	f8ad 1046 	strh.w	r1, [sp, #70]	; 0x46
 801334c:	f8bd 2040 	ldrh.w	r2, [sp, #64]	; 0x40
 8013350:	9b07      	ldr	r3, [sp, #28]
 8013352:	1b12      	subs	r2, r2, r4
 8013354:	f8ad 2040 	strh.w	r2, [sp, #64]	; 0x40
 8013358:	f8bd 2042 	ldrh.w	r2, [sp, #66]	; 0x42
 801335c:	1ad2      	subs	r2, r2, r3
 801335e:	4b16      	ldr	r3, [pc, #88]	; (80133b8 <_ZNK8touchgfx10TiledImage4drawERKNS_4RectE+0x1b4>)
 8013360:	f8ad 2042 	strh.w	r2, [sp, #66]	; 0x42
 8013364:	681a      	ldr	r2, [r3, #0]
 8013366:	f892 1058 	ldrb.w	r1, [r2, #88]	; 0x58
 801336a:	b109      	cbz	r1, 8013370 <_ZNK8touchgfx10TiledImage4drawERKNS_4RectE+0x16c>
 801336c:	6cd0      	ldr	r0, [r2, #76]	; 0x4c
 801336e:	b900      	cbnz	r0, 8013372 <_ZNK8touchgfx10TiledImage4drawERKNS_4RectE+0x16e>
 8013370:	6890      	ldr	r0, [r2, #8]
 8013372:	f8bd 203a 	ldrh.w	r2, [sp, #58]	; 0x3a
 8013376:	9b07      	ldr	r3, [sp, #28]
 8013378:	6801      	ldr	r1, [r0, #0]
 801337a:	f04f 0c01 	mov.w	ip, #1
 801337e:	f8cd c008 	str.w	ip, [sp, #8]
 8013382:	f897 c028 	ldrb.w	ip, [r7, #40]	; 0x28
 8013386:	f8cd c004 	str.w	ip, [sp, #4]
 801338a:	4413      	add	r3, r2
 801338c:	f8bd 2038 	ldrh.w	r2, [sp, #56]	; 0x38
 8013390:	f10d 0c40 	add.w	ip, sp, #64	; 0x40
 8013394:	f8cd c000 	str.w	ip, [sp]
 8013398:	4422      	add	r2, r4
 801339a:	f8d1 9008 	ldr.w	r9, [r1, #8]
 801339e:	b21b      	sxth	r3, r3
 80133a0:	b212      	sxth	r2, r2
 80133a2:	4659      	mov	r1, fp
 80133a4:	47c8      	blx	r9
 80133a6:	46d1      	mov	r9, sl
 80133a8:	e788      	b.n	80132bc <_ZNK8touchgfx10TiledImage4drawERKNS_4RectE+0xb8>
 80133aa:	2300      	movs	r3, #0
 80133ac:	e9cd 3310 	strd	r3, r3, [sp, #64]	; 0x40
 80133b0:	e7cc      	b.n	801334c <_ZNK8touchgfx10TiledImage4drawERKNS_4RectE+0x148>
 80133b2:	b013      	add	sp, #76	; 0x4c
 80133b4:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
 80133b8:	2001381c 	.word	0x2001381c

080133bc <_ZNK8touchgfx10TiledImage12getSolidRectEv>:
 80133bc:	e92d 4ff7 	stmdb	sp!, {r0, r1, r2, r4, r5, r6, r7, r8, r9, sl, fp, lr}
 80133c0:	f891 3028 	ldrb.w	r3, [r1, #40]	; 0x28
 80133c4:	2bff      	cmp	r3, #255	; 0xff
 80133c6:	4606      	mov	r6, r0
 80133c8:	4689      	mov	r9, r1
 80133ca:	d008      	beq.n	80133de <_ZNK8touchgfx10TiledImage12getSolidRectEv+0x22>
 80133cc:	2300      	movs	r3, #0
 80133ce:	8003      	strh	r3, [r0, #0]
 80133d0:	8043      	strh	r3, [r0, #2]
 80133d2:	8083      	strh	r3, [r0, #4]
 80133d4:	4630      	mov	r0, r6
 80133d6:	80f3      	strh	r3, [r6, #6]
 80133d8:	b003      	add	sp, #12
 80133da:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
 80133de:	f101 0b26 	add.w	fp, r1, #38	; 0x26
 80133e2:	4659      	mov	r1, fp
 80133e4:	4668      	mov	r0, sp
 80133e6:	f006 fdab 	bl	8019f40 <_ZNK8touchgfx6Bitmap12getSolidRectEv>
 80133ea:	4658      	mov	r0, fp
 80133ec:	f9bd 4004 	ldrsh.w	r4, [sp, #4]
 80133f0:	f9bd 7000 	ldrsh.w	r7, [sp]
 80133f4:	f9bd a002 	ldrsh.w	sl, [sp, #2]
 80133f8:	f9bd 8006 	ldrsh.w	r8, [sp, #6]
 80133fc:	f006 fd38 	bl	8019e70 <_ZNK8touchgfx6Bitmap8getWidthEv>
 8013400:	4284      	cmp	r4, r0
 8013402:	d10d      	bne.n	8013420 <_ZNK8touchgfx10TiledImage12getSolidRectEv+0x64>
 8013404:	f9b9 5008 	ldrsh.w	r5, [r9, #8]
 8013408:	4658      	mov	r0, fp
 801340a:	f006 fd65 	bl	8019ed8 <_ZNK8touchgfx6Bitmap9getHeightEv>
 801340e:	4580      	cmp	r8, r0
 8013410:	d129      	bne.n	8013466 <_ZNK8touchgfx10TiledImage12getSolidRectEv+0xaa>
 8013412:	f9b9 300a 	ldrsh.w	r3, [r9, #10]
 8013416:	8037      	strh	r7, [r6, #0]
 8013418:	f8a6 a002 	strh.w	sl, [r6, #2]
 801341c:	80b5      	strh	r5, [r6, #4]
 801341e:	e7d9      	b.n	80133d4 <_ZNK8touchgfx10TiledImage12getSolidRectEv+0x18>
 8013420:	f8b9 502a 	ldrh.w	r5, [r9, #42]	; 0x2a
 8013424:	4658      	mov	r0, fp
 8013426:	f006 fd23 	bl	8019e70 <_ZNK8touchgfx6Bitmap8getWidthEv>
 801342a:	1b7f      	subs	r7, r7, r5
 801342c:	b2bd      	uxth	r5, r7
 801342e:	b22f      	sxth	r7, r5
 8013430:	4428      	add	r0, r5
 8013432:	2f00      	cmp	r7, #0
 8013434:	b2a3      	uxth	r3, r4
 8013436:	b280      	uxth	r0, r0
 8013438:	bfb8      	it	lt
 801343a:	18ed      	addlt	r5, r5, r3
 801343c:	4403      	add	r3, r0
 801343e:	b29b      	uxth	r3, r3
 8013440:	f9b9 2008 	ldrsh.w	r2, [r9, #8]
 8013444:	bfb8      	it	lt
 8013446:	b22d      	sxthlt	r5, r5
 8013448:	b219      	sxth	r1, r3
 801344a:	bfae      	itee	ge
 801344c:	4625      	movge	r5, r4
 801344e:	ea25 75e5 	biclt.w	r5, r5, r5, asr #31
 8013452:	2700      	movlt	r7, #0
 8013454:	4291      	cmp	r1, r2
 8013456:	bfc4      	itt	gt
 8013458:	1a9c      	subgt	r4, r3, r2
 801345a:	b224      	sxthgt	r4, r4
 801345c:	42ac      	cmp	r4, r5
 801345e:	bfc4      	itt	gt
 8013460:	b207      	sxthgt	r7, r0
 8013462:	4625      	movgt	r5, r4
 8013464:	e7d0      	b.n	8013408 <_ZNK8touchgfx10TiledImage12getSolidRectEv+0x4c>
 8013466:	f8b9 402c 	ldrh.w	r4, [r9, #44]	; 0x2c
 801346a:	4658      	mov	r0, fp
 801346c:	f006 fd34 	bl	8019ed8 <_ZNK8touchgfx6Bitmap9getHeightEv>
 8013470:	ebaa 0404 	sub.w	r4, sl, r4
 8013474:	b2a4      	uxth	r4, r4
 8013476:	fa0f fa84 	sxth.w	sl, r4
 801347a:	4420      	add	r0, r4
 801347c:	f1ba 0f00 	cmp.w	sl, #0
 8013480:	fa1f f288 	uxth.w	r2, r8
 8013484:	b280      	uxth	r0, r0
 8013486:	bfb8      	it	lt
 8013488:	18a3      	addlt	r3, r4, r2
 801348a:	4402      	add	r2, r0
 801348c:	b292      	uxth	r2, r2
 801348e:	f9b9 100a 	ldrsh.w	r1, [r9, #10]
 8013492:	bfb8      	it	lt
 8013494:	b21b      	sxthlt	r3, r3
 8013496:	b214      	sxth	r4, r2
 8013498:	bfae      	itee	ge
 801349a:	4643      	movge	r3, r8
 801349c:	ea23 73e3 	biclt.w	r3, r3, r3, asr #31
 80134a0:	f04f 0a00 	movlt.w	sl, #0
 80134a4:	428c      	cmp	r4, r1
 80134a6:	bfc4      	itt	gt
 80134a8:	eba2 0801 	subgt.w	r8, r2, r1
 80134ac:	fa0f f888 	sxthgt.w	r8, r8
 80134b0:	4598      	cmp	r8, r3
 80134b2:	bfc4      	itt	gt
 80134b4:	fa0f fa80 	sxthgt.w	sl, r0
 80134b8:	4643      	movgt	r3, r8
 80134ba:	e7ac      	b.n	8013416 <_ZNK8touchgfx10TiledImage12getSolidRectEv+0x5a>

080134bc <_ZNK8touchgfx5Image17invalidateContentEv>:
 80134bc:	f890 2028 	ldrb.w	r2, [r0, #40]	; 0x28
 80134c0:	b12a      	cbz	r2, 80134ce <_ZNK8touchgfx5Image17invalidateContentEv+0x12>
 80134c2:	f890 2025 	ldrb.w	r2, [r0, #37]	; 0x25
 80134c6:	b112      	cbz	r2, 80134ce <_ZNK8touchgfx5Image17invalidateContentEv+0x12>
 80134c8:	6803      	ldr	r3, [r0, #0]
 80134ca:	695b      	ldr	r3, [r3, #20]
 80134cc:	4718      	bx	r3
 80134ce:	4770      	bx	lr

080134d0 <_ZNK8touchgfx5Gauge9getCenterERiS1_>:
 80134d0:	f9b0 3150 	ldrsh.w	r3, [r0, #336]	; 0x150
 80134d4:	600b      	str	r3, [r1, #0]
 80134d6:	f9b0 3152 	ldrsh.w	r3, [r0, #338]	; 0x152
 80134da:	6013      	str	r3, [r2, #0]
 80134dc:	4770      	bx	lr

080134de <_ZN8touchgfx5Gauge8setWidthEs>:
 80134de:	8101      	strh	r1, [r0, #8]
 80134e0:	f8a0 10bc 	strh.w	r1, [r0, #188]	; 0xbc
 80134e4:	f8a0 1160 	strh.w	r1, [r0, #352]	; 0x160
 80134e8:	4770      	bx	lr

080134ea <_ZN8touchgfx5Gauge9setHeightEs>:
 80134ea:	8141      	strh	r1, [r0, #10]
 80134ec:	f8a0 10be 	strh.w	r1, [r0, #190]	; 0xbe
 80134f0:	f8a0 1162 	strh.w	r1, [r0, #354]	; 0x162
 80134f4:	4770      	bx	lr

080134f6 <_ZNK8touchgfx5Gauge13getStartAngleEv>:
 80134f6:	f8d0 0148 	ldr.w	r0, [r0, #328]	; 0x148
 80134fa:	4770      	bx	lr

080134fc <_ZNK8touchgfx5Gauge11getEndAngleEv>:
 80134fc:	f8d0 014c 	ldr.w	r0, [r0, #332]	; 0x14c
 8013500:	4770      	bx	lr

08013502 <_ZN8touchgfx5Gauge28setProgressIndicatorPositionEssss>:
 8013502:	4770      	bx	lr

08013504 <_ZN8touchgfx5GaugeD1Ev>:
 8013504:	4770      	bx	lr

08013506 <_ZN8touchgfx5Gauge8setAlphaEh>:
 8013506:	b538      	push	{r3, r4, r5, lr}
 8013508:	4604      	mov	r4, r0
 801350a:	460d      	mov	r5, r1
 801350c:	f7fc fe07 	bl	801011e <_ZN8touchgfx25AbstractProgressIndicator8setAlphaEh>
 8013510:	f884 50dc 	strb.w	r5, [r4, #220]	; 0xdc
 8013514:	f884 517e 	strb.w	r5, [r4, #382]	; 0x17e
 8013518:	bd38      	pop	{r3, r4, r5, pc}

0801351a <_ZN8touchgfx5GaugeD0Ev>:
 801351a:	b510      	push	{r4, lr}
 801351c:	f44f 71d0 	mov.w	r1, #416	; 0x1a0
 8013520:	4604      	mov	r4, r0
 8013522:	f017 f90a 	bl	802a73a <_ZdlPvj>
 8013526:	4620      	mov	r0, r4
 8013528:	bd10      	pop	{r4, pc}

0801352a <_ZNK8touchgfx5Gauge17invalidateContentEv>:
 801352a:	b510      	push	{r4, lr}
 801352c:	6803      	ldr	r3, [r0, #0]
 801352e:	f8d3 30c8 	ldr.w	r3, [r3, #200]	; 0xc8
 8013532:	4604      	mov	r4, r0
 8013534:	4798      	blx	r3
 8013536:	b170      	cbz	r0, 8013556 <_ZNK8touchgfx5Gauge17invalidateContentEv+0x2c>
 8013538:	6823      	ldr	r3, [r4, #0]
 801353a:	4620      	mov	r0, r4
 801353c:	f8d3 30c8 	ldr.w	r3, [r3, #200]	; 0xc8
 8013540:	4798      	blx	r3
 8013542:	b140      	cbz	r0, 8013556 <_ZNK8touchgfx5Gauge17invalidateContentEv+0x2c>
 8013544:	f894 3025 	ldrb.w	r3, [r4, #37]	; 0x25
 8013548:	b12b      	cbz	r3, 8013556 <_ZNK8touchgfx5Gauge17invalidateContentEv+0x2c>
 801354a:	6823      	ldr	r3, [r4, #0]
 801354c:	4620      	mov	r0, r4
 801354e:	695b      	ldr	r3, [r3, #20]
 8013550:	e8bd 4010 	ldmia.w	sp!, {r4, lr}
 8013554:	4718      	bx	r3
 8013556:	bd10      	pop	{r4, pc}

08013558 <_ZN8touchgfx5GaugeC1Ev>:
 8013558:	b5f7      	push	{r0, r1, r2, r4, r5, r6, r7, lr}
 801355a:	4604      	mov	r4, r0
 801355c:	4626      	mov	r6, r4
 801355e:	f7fc feff 	bl	8010360 <_ZN8touchgfx25AbstractProgressIndicatorC1Ev>
 8013562:	4b18      	ldr	r3, [pc, #96]	; (80135c4 <_ZN8touchgfx5GaugeC1Ev+0x6c>)
 8013564:	f846 3bb4 	str.w	r3, [r6], #180
 8013568:	a902      	add	r1, sp, #8
 801356a:	f64f 73ff 	movw	r3, #65535	; 0xffff
 801356e:	f821 3d04 	strh.w	r3, [r1, #-4]!
 8013572:	4630      	mov	r0, r6
 8013574:	f015 f9a4 	bl	80288c0 <_ZN8touchgfx13TextureMapperC1ERKNS_6BitmapE>
 8013578:	2500      	movs	r5, #0
 801357a:	2301      	movs	r3, #1
 801357c:	f504 77ac 	add.w	r7, r4, #344	; 0x158
 8013580:	f884 3144 	strb.w	r3, [r4, #324]	; 0x144
 8013584:	f884 3145 	strb.w	r3, [r4, #325]	; 0x145
 8013588:	f8c4 5148 	str.w	r5, [r4, #328]	; 0x148
 801358c:	f8c4 514c 	str.w	r5, [r4, #332]	; 0x14c
 8013590:	f8c4 5150 	str.w	r5, [r4, #336]	; 0x150
 8013594:	f8c4 5154 	str.w	r5, [r4, #340]	; 0x154
 8013598:	4638      	mov	r0, r7
 801359a:	f014 fbd5 	bl	8027d48 <_ZN8touchgfx6CircleC1Ev>
 801359e:	f104 0158 	add.w	r1, r4, #88	; 0x58
 80135a2:	4620      	mov	r0, r4
 80135a4:	f7fc ff7d 	bl	80104a2 <_ZN8touchgfx9Container6removeERNS_8DrawableE>
 80135a8:	4639      	mov	r1, r7
 80135aa:	4620      	mov	r0, r4
 80135ac:	f7fc ff38 	bl	8010420 <_ZN8touchgfx9Container3addERNS_8DrawableE>
 80135b0:	4620      	mov	r0, r4
 80135b2:	4631      	mov	r1, r6
 80135b4:	f7fc ff34 	bl	8010420 <_ZN8touchgfx9Container3addERNS_8DrawableE>
 80135b8:	4620      	mov	r0, r4
 80135ba:	f884 517d 	strb.w	r5, [r4, #381]	; 0x17d
 80135be:	b003      	add	sp, #12
 80135c0:	bdf0      	pop	{r4, r5, r6, r7, pc}
 80135c2:	bf00      	nop
 80135c4:	0802f530 	.word	0x0802f530

080135c8 <_ZN8touchgfx5Gauge33setMovingNeedleRenderingAlgorithmENS_13TextureMapper18RenderingAlgorithmE>:
 80135c8:	f880 1144 	strb.w	r1, [r0, #324]	; 0x144
 80135cc:	4770      	bx	lr

080135ce <_ZN8touchgfx5Gauge33setSteadyNeedleRenderingAlgorithmENS_13TextureMapper18RenderingAlgorithmE>:
 80135ce:	f880 1145 	strb.w	r1, [r0, #325]	; 0x145
 80135d2:	4770      	bx	lr

080135d4 <_ZN8touchgfx5Gauge24setupNeedleTextureMapperEv>:
 80135d4:	b538      	push	{r3, r4, r5, lr}
 80135d6:	8902      	ldrh	r2, [r0, #8]
 80135d8:	f9b0 300a 	ldrsh.w	r3, [r0, #10]
 80135dc:	f8a0 20bc 	strh.w	r2, [r0, #188]	; 0xbc
 80135e0:	4604      	mov	r4, r0
 80135e2:	f100 05b4 	add.w	r5, r0, #180	; 0xb4
 80135e6:	2200      	movs	r2, #0
 80135e8:	4611      	mov	r1, r2
 80135ea:	f8a0 30be 	strh.w	r3, [r0, #190]	; 0xbe
 80135ee:	4628      	mov	r0, r5
 80135f0:	f7ef f99a 	bl	8002928 <_ZN8touchgfx8Drawable5setXYEss>
 80135f4:	f9b4 2156 	ldrsh.w	r2, [r4, #342]	; 0x156
 80135f8:	f9b4 3152 	ldrsh.w	r3, [r4, #338]	; 0x152
 80135fc:	1a9b      	subs	r3, r3, r2
 80135fe:	ee07 3a90 	vmov	s15, r3
 8013602:	f9b4 2154 	ldrsh.w	r2, [r4, #340]	; 0x154
 8013606:	f9b4 3150 	ldrsh.w	r3, [r4, #336]	; 0x150
 801360a:	1a9b      	subs	r3, r3, r2
 801360c:	ee07 3a10 	vmov	s14, r3
 8013610:	eef8 7ae7 	vcvt.f32.s32	s15, s15
 8013614:	eeb8 7ac7 	vcvt.f32.s32	s14, s14
 8013618:	edc4 7a39 	vstr	s15, [r4, #228]	; 0xe4
 801361c:	ed84 7a38 	vstr	s14, [r4, #224]	; 0xe0
 8013620:	4628      	mov	r0, r5
 8013622:	f015 f999 	bl	8028958 <_ZN8touchgfx13TextureMapper19applyTransformationEv>
 8013626:	4b16      	ldr	r3, [pc, #88]	; (8013680 <_ZN8touchgfx5Gauge24setupNeedleTextureMapperEv+0xac>)
 8013628:	f8c4 310c 	str.w	r3, [r4, #268]	; 0x10c
 801362c:	4628      	mov	r0, r5
 801362e:	f015 f993 	bl	8028958 <_ZN8touchgfx13TextureMapper19applyTransformationEv>
 8013632:	f9b4 3152 	ldrsh.w	r3, [r4, #338]	; 0x152
 8013636:	f9b4 2150 	ldrsh.w	r2, [r4, #336]	; 0x150
 801363a:	ee07 3a90 	vmov	s15, r3
 801363e:	ee07 2a10 	vmov	s14, r2
 8013642:	eef8 7ae7 	vcvt.f32.s32	s15, s15
 8013646:	eeb8 7ac7 	vcvt.f32.s32	s14, s14
 801364a:	f8d4 310c 	ldr.w	r3, [r4, #268]	; 0x10c
 801364e:	ed84 7a3e 	vstr	s14, [r4, #248]	; 0xf8
 8013652:	edc4 7a3f 	vstr	s15, [r4, #252]	; 0xfc
 8013656:	f8c4 3100 	str.w	r3, [r4, #256]	; 0x100
 801365a:	4628      	mov	r0, r5
 801365c:	f015 f97c 	bl	8028958 <_ZN8touchgfx13TextureMapper19applyTransformationEv>
 8013660:	f8d4 30fc 	ldr.w	r3, [r4, #252]	; 0xfc
 8013664:	f8d4 20f8 	ldr.w	r2, [r4, #248]	; 0xf8
 8013668:	f8c4 3108 	str.w	r3, [r4, #264]	; 0x108
 801366c:	f8c4 2104 	str.w	r2, [r4, #260]	; 0x104
 8013670:	4628      	mov	r0, r5
 8013672:	f015 f971 	bl	8028958 <_ZN8touchgfx13TextureMapper19applyTransformationEv>
 8013676:	2301      	movs	r3, #1
 8013678:	f884 30dd 	strb.w	r3, [r4, #221]	; 0xdd
 801367c:	bd38      	pop	{r3, r4, r5, pc}
 801367e:	bf00      	nop
 8013680:	43960000 	.word	0x43960000

08013684 <_ZN8touchgfx5Gauge9setNeedleEtss>:
 8013684:	b573      	push	{r0, r1, r4, r5, r6, lr}
 8013686:	4604      	mov	r4, r0
 8013688:	a802      	add	r0, sp, #8
 801368a:	4616      	mov	r6, r2
 801368c:	f820 1d04 	strh.w	r1, [r0, #-4]!
 8013690:	461d      	mov	r5, r3
 8013692:	4601      	mov	r1, r0
 8013694:	f104 00b4 	add.w	r0, r4, #180	; 0xb4
 8013698:	f015 fab4 	bl	8028c04 <_ZN8touchgfx13TextureMapper9setBitmapERKNS_6BitmapE>
 801369c:	f8a4 6154 	strh.w	r6, [r4, #340]	; 0x154
 80136a0:	f8a4 5156 	strh.w	r5, [r4, #342]	; 0x156
 80136a4:	4620      	mov	r0, r4
 80136a6:	f7ff ff95 	bl	80135d4 <_ZN8touchgfx5Gauge24setupNeedleTextureMapperEv>
 80136aa:	b002      	add	sp, #8
 80136ac:	bd70      	pop	{r4, r5, r6, pc}

080136ae <_ZN8touchgfx5Gauge9setCenterEii>:
 80136ae:	b570      	push	{r4, r5, r6, lr}
 80136b0:	4606      	mov	r6, r0
 80136b2:	460d      	mov	r5, r1
 80136b4:	f8a6 1150 	strh.w	r1, [r6, #336]	; 0x150
 80136b8:	f8a6 2152 	strh.w	r2, [r6, #338]	; 0x152
 80136bc:	4614      	mov	r4, r2
 80136be:	f7ff ff89 	bl	80135d4 <_ZN8touchgfx5Gauge24setupNeedleTextureMapperEv>
 80136c2:	f9b6 215e 	ldrsh.w	r2, [r6, #350]	; 0x15e
 80136c6:	f9b6 115c 	ldrsh.w	r1, [r6, #348]	; 0x15c
 80136ca:	1aa4      	subs	r4, r4, r2
 80136cc:	1a6d      	subs	r5, r5, r1
 80136ce:	0164      	lsls	r4, r4, #5
 80136d0:	016d      	lsls	r5, r5, #5
 80136d2:	3410      	adds	r4, #16
 80136d4:	3510      	adds	r5, #16
 80136d6:	f8c6 5184 	str.w	r5, [r6, #388]	; 0x184
 80136da:	f8c6 4188 	str.w	r4, [r6, #392]	; 0x188
 80136de:	bd70      	pop	{r4, r5, r6, pc}

080136e0 <_ZN8touchgfx6Circle12updateArcEndIiEEvT_>:
 80136e0:	b51f      	push	{r0, r1, r2, r3, r4, lr}
 80136e2:	6bc3      	ldr	r3, [r0, #60]	; 0x3c
 80136e4:	0149      	lsls	r1, r1, #5
 80136e6:	4299      	cmp	r1, r3
 80136e8:	4604      	mov	r4, r0
 80136ea:	9101      	str	r1, [sp, #4]
 80136ec:	d00b      	beq.n	8013706 <_ZN8touchgfx6Circle12updateArcEndIiEEvT_+0x26>
 80136ee:	4601      	mov	r1, r0
 80136f0:	aa01      	add	r2, sp, #4
 80136f2:	a802      	add	r0, sp, #8
 80136f4:	f014 fd26 	bl	8028144 <_ZNK8touchgfx6Circle32getMinimalRectForUpdatedEndAngleERKNS_7CWRUtil2Q5E>
 80136f8:	9b01      	ldr	r3, [sp, #4]
 80136fa:	63e3      	str	r3, [r4, #60]	; 0x3c
 80136fc:	6823      	ldr	r3, [r4, #0]
 80136fe:	a902      	add	r1, sp, #8
 8013700:	691b      	ldr	r3, [r3, #16]
 8013702:	4620      	mov	r0, r4
 8013704:	4798      	blx	r3
 8013706:	b004      	add	sp, #16
 8013708:	bd10      	pop	{r4, pc}
	...

0801370c <_ZN8touchgfx5Gauge8setValueEi>:
 801370c:	b570      	push	{r4, r5, r6, lr}
 801370e:	4604      	mov	r4, r0
 8013710:	f7fc fd58 	bl	80101c4 <_ZN8touchgfx25AbstractProgressIndicator8setValueEi>
 8013714:	e9d4 3229 	ldrd	r3, r2, [r4, #164]	; 0xa4
 8013718:	429a      	cmp	r2, r3
 801371a:	bfac      	ite	ge
 801371c:	f894 3145 	ldrbge.w	r3, [r4, #325]	; 0x145
 8013720:	f894 3144 	ldrblt.w	r3, [r4, #324]	; 0x144
 8013724:	f884 30dd 	strb.w	r3, [r4, #221]	; 0xdd
 8013728:	f8d4 114c 	ldr.w	r1, [r4, #332]	; 0x14c
 801372c:	f8d4 3148 	ldr.w	r3, [r4, #328]	; 0x148
 8013730:	1ac9      	subs	r1, r1, r3
 8013732:	2900      	cmp	r1, #0
 8013734:	bfb8      	it	lt
 8013736:	4249      	neglt	r1, r1
 8013738:	b289      	uxth	r1, r1
 801373a:	4620      	mov	r0, r4
 801373c:	f7fc fd64 	bl	8010208 <_ZNK8touchgfx25AbstractProgressIndicator11getProgressEt>
 8013740:	f8d4 3148 	ldr.w	r3, [r4, #328]	; 0x148
 8013744:	f8d4 214c 	ldr.w	r2, [r4, #332]	; 0x14c
 8013748:	eddf 6a19 	vldr	s13, [pc, #100]	; 80137b0 <_ZN8touchgfx5Gauge8setValueEi+0xa4>
 801374c:	ed9f 7a19 	vldr	s14, [pc, #100]	; 80137b4 <_ZN8touchgfx5Gauge8setValueEi+0xa8>
 8013750:	429a      	cmp	r2, r3
 8013752:	4605      	mov	r5, r0
 8013754:	f504 76ac 	add.w	r6, r4, #344	; 0x158
 8013758:	f104 00b4 	add.w	r0, r4, #180	; 0xb4
 801375c:	da15      	bge.n	801378a <_ZN8touchgfx5Gauge8setValueEi+0x7e>
 801375e:	1b5b      	subs	r3, r3, r5
 8013760:	ee07 3a90 	vmov	s15, r3
 8013764:	eef8 7ae7 	vcvt.f32.s32	s15, s15
 8013768:	edd4 0a3b 	vldr	s1, [r4, #236]	; 0xec
 801376c:	ed94 0a3a 	vldr	s0, [r4, #232]	; 0xe8
 8013770:	ee87 1aa6 	vdiv.f32	s2, s15, s13
 8013774:	ee21 1a07 	vmul.f32	s2, s2, s14
 8013778:	f015 f85d 	bl	8028836 <_ZN8touchgfx13TextureMapper12updateAnglesEfff>
 801377c:	f8d4 1148 	ldr.w	r1, [r4, #328]	; 0x148
 8013780:	1b49      	subs	r1, r1, r5
 8013782:	4630      	mov	r0, r6
 8013784:	f7ff ffac 	bl	80136e0 <_ZN8touchgfx6Circle12updateArcEndIiEEvT_>
 8013788:	bd70      	pop	{r4, r5, r6, pc}
 801378a:	442b      	add	r3, r5
 801378c:	ee07 3a90 	vmov	s15, r3
 8013790:	eef8 7ae7 	vcvt.f32.s32	s15, s15
 8013794:	edd4 0a3b 	vldr	s1, [r4, #236]	; 0xec
 8013798:	ed94 0a3a 	vldr	s0, [r4, #232]	; 0xe8
 801379c:	ee87 1aa6 	vdiv.f32	s2, s15, s13
 80137a0:	ee21 1a07 	vmul.f32	s2, s2, s14
 80137a4:	f015 f847 	bl	8028836 <_ZN8touchgfx13TextureMapper12updateAnglesEfff>
 80137a8:	f8d4 1148 	ldr.w	r1, [r4, #328]	; 0x148
 80137ac:	4429      	add	r1, r5
 80137ae:	e7e8      	b.n	8013782 <_ZN8touchgfx5Gauge8setValueEi+0x76>
 80137b0:	43340000 	.word	0x43340000
 80137b4:	40490fdb 	.word	0x40490fdb

080137b8 <_ZN8touchgfx5Gauge16setStartEndAngleEii>:
 80137b8:	b510      	push	{r4, lr}
 80137ba:	f8c0 1148 	str.w	r1, [r0, #328]	; 0x148
 80137be:	f8c0 214c 	str.w	r2, [r0, #332]	; 0x14c
 80137c2:	0149      	lsls	r1, r1, #5
 80137c4:	0152      	lsls	r2, r2, #5
 80137c6:	f8c0 1190 	str.w	r1, [r0, #400]	; 0x190
 80137ca:	f8c0 2194 	str.w	r2, [r0, #404]	; 0x194
 80137ce:	4604      	mov	r4, r0
 80137d0:	f7fc fca2 	bl	8010118 <_ZNK8touchgfx25AbstractProgressIndicator8getValueEv>
 80137d4:	4601      	mov	r1, r0
 80137d6:	4620      	mov	r0, r4
 80137d8:	e8bd 4010 	ldmia.w	sp!, {r4, lr}
 80137dc:	f7ff bf96 	b.w	801370c <_ZN8touchgfx5Gauge8setValueEi>

080137e0 <_ZNK8touchgfx14AbstractButton15getPressedStateEv>:
 80137e0:	f890 002c 	ldrb.w	r0, [r0, #44]	; 0x2c
 80137e4:	4770      	bx	lr

080137e6 <_ZN8touchgfx6Button10setBitmapsERKNS_6BitmapES3_>:
 80137e6:	b570      	push	{r4, r5, r6, lr}
 80137e8:	880b      	ldrh	r3, [r1, #0]
 80137ea:	85c3      	strh	r3, [r0, #46]	; 0x2e
 80137ec:	4605      	mov	r5, r0
 80137ee:	8813      	ldrh	r3, [r2, #0]
 80137f0:	f825 3f30 	strh.w	r3, [r5, #48]!
 80137f4:	4604      	mov	r4, r0
 80137f6:	4628      	mov	r0, r5
 80137f8:	f006 fb3a 	bl	8019e70 <_ZNK8touchgfx6Bitmap8getWidthEv>
 80137fc:	4606      	mov	r6, r0
 80137fe:	4628      	mov	r0, r5
 8013800:	f006 fb6a 	bl	8019ed8 <_ZNK8touchgfx6Bitmap9getHeightEv>
 8013804:	6823      	ldr	r3, [r4, #0]
 8013806:	4605      	mov	r5, r0
 8013808:	4631      	mov	r1, r6
 801380a:	4620      	mov	r0, r4
 801380c:	6b9b      	ldr	r3, [r3, #56]	; 0x38
 801380e:	4798      	blx	r3
 8013810:	6823      	ldr	r3, [r4, #0]
 8013812:	4629      	mov	r1, r5
 8013814:	4620      	mov	r0, r4
 8013816:	6bdb      	ldr	r3, [r3, #60]	; 0x3c
 8013818:	e8bd 4070 	ldmia.w	sp!, {r4, r5, r6, lr}
 801381c:	4718      	bx	r3

0801381e <_ZN8touchgfx14AbstractButton13executeActionEv>:
 801381e:	b510      	push	{r4, lr}
 8013820:	4604      	mov	r4, r0
 8013822:	6a80      	ldr	r0, [r0, #40]	; 0x28
 8013824:	b150      	cbz	r0, 801383c <_ZN8touchgfx14AbstractButton13executeActionEv+0x1e>
 8013826:	6803      	ldr	r3, [r0, #0]
 8013828:	68db      	ldr	r3, [r3, #12]
 801382a:	4798      	blx	r3
 801382c:	b130      	cbz	r0, 801383c <_ZN8touchgfx14AbstractButton13executeActionEv+0x1e>
 801382e:	6aa0      	ldr	r0, [r4, #40]	; 0x28
 8013830:	6803      	ldr	r3, [r0, #0]
 8013832:	4621      	mov	r1, r4
 8013834:	689b      	ldr	r3, [r3, #8]
 8013836:	e8bd 4010 	ldmia.w	sp!, {r4, lr}
 801383a:	4718      	bx	r3
 801383c:	bd10      	pop	{r4, pc}

0801383e <_ZNK8touchgfx6Button12getSolidRectEv>:
 801383e:	b510      	push	{r4, lr}
 8013840:	f891 3032 	ldrb.w	r3, [r1, #50]	; 0x32
 8013844:	2bff      	cmp	r3, #255	; 0xff
 8013846:	4604      	mov	r4, r0
 8013848:	d006      	beq.n	8013858 <_ZNK8touchgfx6Button12getSolidRectEv+0x1a>
 801384a:	2300      	movs	r3, #0
 801384c:	8003      	strh	r3, [r0, #0]
 801384e:	8043      	strh	r3, [r0, #2]
 8013850:	8083      	strh	r3, [r0, #4]
 8013852:	80c3      	strh	r3, [r0, #6]
 8013854:	4620      	mov	r0, r4
 8013856:	bd10      	pop	{r4, pc}
 8013858:	f891 302c 	ldrb.w	r3, [r1, #44]	; 0x2c
 801385c:	b11b      	cbz	r3, 8013866 <_ZNK8touchgfx6Button12getSolidRectEv+0x28>
 801385e:	3130      	adds	r1, #48	; 0x30
 8013860:	f006 fb6e 	bl	8019f40 <_ZNK8touchgfx6Bitmap12getSolidRectEv>
 8013864:	e7f6      	b.n	8013854 <_ZNK8touchgfx6Button12getSolidRectEv+0x16>
 8013866:	312e      	adds	r1, #46	; 0x2e
 8013868:	e7fa      	b.n	8013860 <_ZNK8touchgfx6Button12getSolidRectEv+0x22>
	...

0801386c <_ZNK8touchgfx6Button4drawERKNS_4RectE>:
 801386c:	e92d 41f0 	stmdb	sp!, {r4, r5, r6, r7, r8, lr}
 8013870:	f890 302c 	ldrb.w	r3, [r0, #44]	; 0x2c
 8013874:	b08a      	sub	sp, #40	; 0x28
 8013876:	4604      	mov	r4, r0
 8013878:	4688      	mov	r8, r1
 801387a:	2b00      	cmp	r3, #0
 801387c:	d066      	beq.n	801394c <_ZNK8touchgfx6Button4drawERKNS_4RectE+0xe0>
 801387e:	8e03      	ldrh	r3, [r0, #48]	; 0x30
 8013880:	f8ad 3014 	strh.w	r3, [sp, #20]
 8013884:	a805      	add	r0, sp, #20
 8013886:	f006 faf3 	bl	8019e70 <_ZNK8touchgfx6Bitmap8getWidthEv>
 801388a:	4607      	mov	r7, r0
 801388c:	a805      	add	r0, sp, #20
 801388e:	f006 fb23 	bl	8019ed8 <_ZNK8touchgfx6Bitmap9getHeightEv>
 8013892:	f9b8 6000 	ldrsh.w	r6, [r8]
 8013896:	f8b8 2004 	ldrh.w	r2, [r8, #4]
 801389a:	4432      	add	r2, r6
 801389c:	b292      	uxth	r2, r2
 801389e:	2300      	movs	r3, #0
 80138a0:	fa0f fc82 	sxth.w	ip, r2
 80138a4:	459c      	cmp	ip, r3
 80138a6:	9306      	str	r3, [sp, #24]
 80138a8:	dd52      	ble.n	8013950 <_ZNK8touchgfx6Button4drawERKNS_4RectE+0xe4>
 80138aa:	42b7      	cmp	r7, r6
 80138ac:	dd50      	ble.n	8013950 <_ZNK8touchgfx6Button4drawERKNS_4RectE+0xe4>
 80138ae:	f9b8 5002 	ldrsh.w	r5, [r8, #2]
 80138b2:	f8b8 3006 	ldrh.w	r3, [r8, #6]
 80138b6:	442b      	add	r3, r5
 80138b8:	b29b      	uxth	r3, r3
 80138ba:	b219      	sxth	r1, r3
 80138bc:	2900      	cmp	r1, #0
 80138be:	dd47      	ble.n	8013950 <_ZNK8touchgfx6Button4drawERKNS_4RectE+0xe4>
 80138c0:	42a8      	cmp	r0, r5
 80138c2:	dd45      	ble.n	8013950 <_ZNK8touchgfx6Button4drawERKNS_4RectE+0xe4>
 80138c4:	4567      	cmp	r7, ip
 80138c6:	bfb8      	it	lt
 80138c8:	b2ba      	uxthlt	r2, r7
 80138ca:	4288      	cmp	r0, r1
 80138cc:	ea26 76e6 	bic.w	r6, r6, r6, asr #31
 80138d0:	ea25 75e5 	bic.w	r5, r5, r5, asr #31
 80138d4:	bfb8      	it	lt
 80138d6:	b283      	uxthlt	r3, r0
 80138d8:	1b92      	subs	r2, r2, r6
 80138da:	1b5b      	subs	r3, r3, r5
 80138dc:	f8ad 201c 	strh.w	r2, [sp, #28]
 80138e0:	f8ad 301e 	strh.w	r3, [sp, #30]
 80138e4:	f8ad 6018 	strh.w	r6, [sp, #24]
 80138e8:	f8ad 501a 	strh.w	r5, [sp, #26]
 80138ec:	f8bd 2014 	ldrh.w	r2, [sp, #20]
 80138f0:	f64f 73ff 	movw	r3, #65535	; 0xffff
 80138f4:	429a      	cmp	r2, r3
 80138f6:	d026      	beq.n	8013946 <_ZNK8touchgfx6Button4drawERKNS_4RectE+0xda>
 80138f8:	f9bd 301c 	ldrsh.w	r3, [sp, #28]
 80138fc:	2b00      	cmp	r3, #0
 80138fe:	dd22      	ble.n	8013946 <_ZNK8touchgfx6Button4drawERKNS_4RectE+0xda>
 8013900:	f9bd 301e 	ldrsh.w	r3, [sp, #30]
 8013904:	2b00      	cmp	r3, #0
 8013906:	dd1e      	ble.n	8013946 <_ZNK8touchgfx6Button4drawERKNS_4RectE+0xda>
 8013908:	2300      	movs	r3, #0
 801390a:	e9cd 3308 	strd	r3, r3, [sp, #32]
 801390e:	6823      	ldr	r3, [r4, #0]
 8013910:	a908      	add	r1, sp, #32
 8013912:	6adb      	ldr	r3, [r3, #44]	; 0x2c
 8013914:	4620      	mov	r0, r4
 8013916:	4798      	blx	r3
 8013918:	4b0f      	ldr	r3, [pc, #60]	; (8013958 <_ZNK8touchgfx6Button4drawERKNS_4RectE+0xec>)
 801391a:	681b      	ldr	r3, [r3, #0]
 801391c:	f893 2058 	ldrb.w	r2, [r3, #88]	; 0x58
 8013920:	b10a      	cbz	r2, 8013926 <_ZNK8touchgfx6Button4drawERKNS_4RectE+0xba>
 8013922:	6cd8      	ldr	r0, [r3, #76]	; 0x4c
 8013924:	b900      	cbnz	r0, 8013928 <_ZNK8touchgfx6Button4drawERKNS_4RectE+0xbc>
 8013926:	6898      	ldr	r0, [r3, #8]
 8013928:	6801      	ldr	r1, [r0, #0]
 801392a:	f9bd 3022 	ldrsh.w	r3, [sp, #34]	; 0x22
 801392e:	f9bd 2020 	ldrsh.w	r2, [sp, #32]
 8013932:	2501      	movs	r5, #1
 8013934:	9502      	str	r5, [sp, #8]
 8013936:	f894 4032 	ldrb.w	r4, [r4, #50]	; 0x32
 801393a:	9401      	str	r4, [sp, #4]
 801393c:	ac06      	add	r4, sp, #24
 801393e:	9400      	str	r4, [sp, #0]
 8013940:	688c      	ldr	r4, [r1, #8]
 8013942:	a905      	add	r1, sp, #20
 8013944:	47a0      	blx	r4
 8013946:	b00a      	add	sp, #40	; 0x28
 8013948:	e8bd 81f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, pc}
 801394c:	8dc3      	ldrh	r3, [r0, #46]	; 0x2e
 801394e:	e797      	b.n	8013880 <_ZNK8touchgfx6Button4drawERKNS_4RectE+0x14>
 8013950:	2300      	movs	r3, #0
 8013952:	9307      	str	r3, [sp, #28]
 8013954:	e7ca      	b.n	80138ec <_ZNK8touchgfx6Button4drawERKNS_4RectE+0x80>
 8013956:	bf00      	nop
 8013958:	2001381c 	.word	0x2001381c

0801395c <_ZNK8touchgfx6Button17invalidateContentEv>:
 801395c:	f890 2032 	ldrb.w	r2, [r0, #50]	; 0x32
 8013960:	b12a      	cbz	r2, 801396e <_ZNK8touchgfx6Button17invalidateContentEv+0x12>
 8013962:	f890 2025 	ldrb.w	r2, [r0, #37]	; 0x25
 8013966:	b112      	cbz	r2, 801396e <_ZNK8touchgfx6Button17invalidateContentEv+0x12>
 8013968:	6803      	ldr	r3, [r0, #0]
 801396a:	695b      	ldr	r3, [r3, #20]
 801396c:	4718      	bx	r3
 801396e:	4770      	bx	lr

08013970 <_ZNK8touchgfx24TextAreaWithWildcardBase4drawERKNS_4RectE>:
 8013970:	e92d 43f0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, lr}
 8013974:	4b2f      	ldr	r3, [pc, #188]	; (8013a34 <_ZNK8touchgfx24TextAreaWithWildcardBase4drawERKNS_4RectE+0xc4>)
 8013976:	8d82      	ldrh	r2, [r0, #44]	; 0x2c
 8013978:	881b      	ldrh	r3, [r3, #0]
 801397a:	4293      	cmp	r3, r2
 801397c:	b08d      	sub	sp, #52	; 0x34
 801397e:	4604      	mov	r4, r0
 8013980:	460f      	mov	r7, r1
 8013982:	d954      	bls.n	8013a2e <_ZNK8touchgfx24TextAreaWithWildcardBase4drawERKNS_4RectE+0xbe>
 8013984:	4b2c      	ldr	r3, [pc, #176]	; (8013a38 <_ZNK8touchgfx24TextAreaWithWildcardBase4drawERKNS_4RectE+0xc8>)
 8013986:	6819      	ldr	r1, [r3, #0]
 8013988:	eb01 0342 	add.w	r3, r1, r2, lsl #1
 801398c:	f811 1012 	ldrb.w	r1, [r1, r2, lsl #1]
 8013990:	4a2a      	ldr	r2, [pc, #168]	; (8013a3c <_ZNK8touchgfx24TextAreaWithWildcardBase4drawERKNS_4RectE+0xcc>)
 8013992:	6812      	ldr	r2, [r2, #0]
 8013994:	f852 1021 	ldr.w	r1, [r2, r1, lsl #2]
 8013998:	2900      	cmp	r1, #0
 801399a:	d048      	beq.n	8013a2e <_ZNK8touchgfx24TextAreaWithWildcardBase4drawERKNS_4RectE+0xbe>
 801399c:	785a      	ldrb	r2, [r3, #1]
 801399e:	f894 3039 	ldrb.w	r3, [r4, #57]	; 0x39
 80139a2:	f88d 302c 	strb.w	r3, [sp, #44]	; 0x2c
 80139a6:	4b26      	ldr	r3, [pc, #152]	; (8013a40 <_ZNK8touchgfx24TextAreaWithWildcardBase4drawERKNS_4RectE+0xd0>)
 80139a8:	f890 5036 	ldrb.w	r5, [r0, #54]	; 0x36
 80139ac:	f9b0 c034 	ldrsh.w	ip, [r0, #52]	; 0x34
 80139b0:	f890 e038 	ldrb.w	lr, [r0, #56]	; 0x38
 80139b4:	6b26      	ldr	r6, [r4, #48]	; 0x30
 80139b6:	f890 0037 	ldrb.w	r0, [r0, #55]	; 0x37
 80139ba:	9107      	str	r1, [sp, #28]
 80139bc:	f3c2 0801 	ubfx	r8, r2, #0, #2
 80139c0:	f3c2 0281 	ubfx	r2, r2, #2, #2
 80139c4:	f88d 2021 	strb.w	r2, [sp, #33]	; 0x21
 80139c8:	681a      	ldr	r2, [r3, #0]
 80139ca:	f88d 8020 	strb.w	r8, [sp, #32]
 80139ce:	f892 3058 	ldrb.w	r3, [r2, #88]	; 0x58
 80139d2:	f88d e022 	strb.w	lr, [sp, #34]	; 0x22
 80139d6:	9609      	str	r6, [sp, #36]	; 0x24
 80139d8:	f8ad c028 	strh.w	ip, [sp, #40]	; 0x28
 80139dc:	f88d 502a 	strb.w	r5, [sp, #42]	; 0x2a
 80139e0:	f88d 002b 	strb.w	r0, [sp, #43]	; 0x2b
 80139e4:	b10b      	cbz	r3, 80139ea <_ZNK8touchgfx24TextAreaWithWildcardBase4drawERKNS_4RectE+0x7a>
 80139e6:	6cd5      	ldr	r5, [r2, #76]	; 0x4c
 80139e8:	b905      	cbnz	r5, 80139ec <_ZNK8touchgfx24TextAreaWithWildcardBase4drawERKNS_4RectE+0x7c>
 80139ea:	6895      	ldr	r5, [r2, #8]
 80139ec:	ae05      	add	r6, sp, #20
 80139ee:	4621      	mov	r1, r4
 80139f0:	4630      	mov	r0, r6
 80139f2:	f003 ff71 	bl	80178d8 <_ZNK8touchgfx8Drawable15getAbsoluteRectEv>
 80139f6:	4b13      	ldr	r3, [pc, #76]	; (8013a44 <_ZNK8touchgfx24TextAreaWithWildcardBase4drawERKNS_4RectE+0xd4>)
 80139f8:	8da1      	ldrh	r1, [r4, #44]	; 0x2c
 80139fa:	6818      	ldr	r0, [r3, #0]
 80139fc:	f7f4 fea4 	bl	8008748 <_ZNK8touchgfx5Texts7getTextEt>
 8013a00:	6823      	ldr	r3, [r4, #0]
 8013a02:	4680      	mov	r8, r0
 8013a04:	6fdb      	ldr	r3, [r3, #124]	; 0x7c
 8013a06:	4620      	mov	r0, r4
 8013a08:	4798      	blx	r3
 8013a0a:	6823      	ldr	r3, [r4, #0]
 8013a0c:	4681      	mov	r9, r0
 8013a0e:	f8d3 3080 	ldr.w	r3, [r3, #128]	; 0x80
 8013a12:	4620      	mov	r0, r4
 8013a14:	4798      	blx	r3
 8013a16:	e9cd 9002 	strd	r9, r0, [sp, #8]
 8013a1a:	ab07      	add	r3, sp, #28
 8013a1c:	9300      	str	r3, [sp, #0]
 8013a1e:	f8cd 8004 	str.w	r8, [sp, #4]
 8013a22:	463b      	mov	r3, r7
 8013a24:	e896 0006 	ldmia.w	r6, {r1, r2}
 8013a28:	4628      	mov	r0, r5
 8013a2a:	f7f4 fe3f 	bl	80086ac <_ZN8touchgfx3LCD10drawStringENS_4RectERKS1_RKNS0_13StringVisualsEPKtz>
 8013a2e:	b00d      	add	sp, #52	; 0x34
 8013a30:	e8bd 83f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, pc}
 8013a34:	20013878 	.word	0x20013878
 8013a38:	20013874 	.word	0x20013874
 8013a3c:	2001387c 	.word	0x2001387c
 8013a40:	2001381c 	.word	0x2001381c
 8013a44:	20013880 	.word	0x20013880

08013a48 <_ZN8touchgfx14ButtonWithIcon10setBitmapsERKNS_6BitmapES3_>:
 8013a48:	4770      	bx	lr

08013a4a <_ZN8touchgfx14ButtonWithIconD1Ev>:
 8013a4a:	4770      	bx	lr

08013a4c <_ZN8touchgfx14ButtonWithIconD0Ev>:
 8013a4c:	b510      	push	{r4, lr}
 8013a4e:	213c      	movs	r1, #60	; 0x3c
 8013a50:	4604      	mov	r4, r0
 8013a52:	f016 fe72 	bl	802a73a <_ZdlPvj>
 8013a56:	4620      	mov	r0, r4
 8013a58:	bd10      	pop	{r4, pc}

08013a5a <_ZN8touchgfx14ButtonWithIcon10setBitmapsERKNS_6BitmapES3_S3_S3_>:
 8013a5a:	e92d 41f0 	stmdb	sp!, {r4, r5, r6, r7, r8, lr}
 8013a5e:	461c      	mov	r4, r3
 8013a60:	4606      	mov	r6, r0
 8013a62:	9f06      	ldr	r7, [sp, #24]
 8013a64:	f7ff febf 	bl	80137e6 <_ZN8touchgfx6Button10setBitmapsERKNS_6BitmapES3_>
 8013a68:	8823      	ldrh	r3, [r4, #0]
 8013a6a:	86b3      	strh	r3, [r6, #52]	; 0x34
 8013a6c:	883b      	ldrh	r3, [r7, #0]
 8013a6e:	86f3      	strh	r3, [r6, #54]	; 0x36
 8013a70:	4638      	mov	r0, r7
 8013a72:	f9b6 5008 	ldrsh.w	r5, [r6, #8]
 8013a76:	f006 f9fb 	bl	8019e70 <_ZNK8touchgfx6Bitmap8getWidthEv>
 8013a7a:	f04f 0802 	mov.w	r8, #2
 8013a7e:	fb95 f5f8 	sdiv	r5, r5, r8
 8013a82:	b2ad      	uxth	r5, r5
 8013a84:	fb90 f0f8 	sdiv	r0, r0, r8
 8013a88:	1a2d      	subs	r5, r5, r0
 8013a8a:	8735      	strh	r5, [r6, #56]	; 0x38
 8013a8c:	4638      	mov	r0, r7
 8013a8e:	f9b6 400a 	ldrsh.w	r4, [r6, #10]
 8013a92:	fb94 f4f8 	sdiv	r4, r4, r8
 8013a96:	f006 fa1f 	bl	8019ed8 <_ZNK8touchgfx6Bitmap9getHeightEv>
 8013a9a:	b2a4      	uxth	r4, r4
 8013a9c:	fb90 f0f8 	sdiv	r0, r0, r8
 8013aa0:	1a24      	subs	r4, r4, r0
 8013aa2:	8774      	strh	r4, [r6, #58]	; 0x3a
 8013aa4:	e8bd 81f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, pc}

08013aa8 <_ZNK8touchgfx14ButtonWithIcon4drawERKNS_4RectE>:
 8013aa8:	e92d 41f0 	stmdb	sp!, {r4, r5, r6, r7, r8, lr}
 8013aac:	4604      	mov	r4, r0
 8013aae:	b08c      	sub	sp, #48	; 0x30
 8013ab0:	460d      	mov	r5, r1
 8013ab2:	f7ff fedb 	bl	801386c <_ZNK8touchgfx6Button4drawERKNS_4RectE>
 8013ab6:	f894 302c 	ldrb.w	r3, [r4, #44]	; 0x2c
 8013aba:	2b00      	cmp	r3, #0
 8013abc:	d05d      	beq.n	8013b7a <_ZNK8touchgfx14ButtonWithIcon4drawERKNS_4RectE+0xd2>
 8013abe:	8ee3      	ldrh	r3, [r4, #54]	; 0x36
 8013ac0:	f8ad 3014 	strh.w	r3, [sp, #20]
 8013ac4:	a805      	add	r0, sp, #20
 8013ac6:	f9b4 8038 	ldrsh.w	r8, [r4, #56]	; 0x38
 8013aca:	f9b4 703a 	ldrsh.w	r7, [r4, #58]	; 0x3a
 8013ace:	f006 f9cf 	bl	8019e70 <_ZNK8touchgfx6Bitmap8getWidthEv>
 8013ad2:	4606      	mov	r6, r0
 8013ad4:	a805      	add	r0, sp, #20
 8013ad6:	f006 f9ff 	bl	8019ed8 <_ZNK8touchgfx6Bitmap9getHeightEv>
 8013ada:	6869      	ldr	r1, [r5, #4]
 8013adc:	f8ad 001e 	strh.w	r0, [sp, #30]
 8013ae0:	6828      	ldr	r0, [r5, #0]
 8013ae2:	f8ad 8018 	strh.w	r8, [sp, #24]
 8013ae6:	ab08      	add	r3, sp, #32
 8013ae8:	ad08      	add	r5, sp, #32
 8013aea:	c303      	stmia	r3!, {r0, r1}
 8013aec:	a906      	add	r1, sp, #24
 8013aee:	4628      	mov	r0, r5
 8013af0:	f8ad 701a 	strh.w	r7, [sp, #26]
 8013af4:	f8ad 601c 	strh.w	r6, [sp, #28]
 8013af8:	f7fc fe18 	bl	801072c <_ZN8touchgfx4RectaNERKS0_>
 8013afc:	f8bd 2014 	ldrh.w	r2, [sp, #20]
 8013b00:	f64f 73ff 	movw	r3, #65535	; 0xffff
 8013b04:	429a      	cmp	r2, r3
 8013b06:	d035      	beq.n	8013b74 <_ZNK8touchgfx14ButtonWithIcon4drawERKNS_4RectE+0xcc>
 8013b08:	f9bd 3024 	ldrsh.w	r3, [sp, #36]	; 0x24
 8013b0c:	2b00      	cmp	r3, #0
 8013b0e:	dd31      	ble.n	8013b74 <_ZNK8touchgfx14ButtonWithIcon4drawERKNS_4RectE+0xcc>
 8013b10:	f9bd 3026 	ldrsh.w	r3, [sp, #38]	; 0x26
 8013b14:	2b00      	cmp	r3, #0
 8013b16:	dd2d      	ble.n	8013b74 <_ZNK8touchgfx14ButtonWithIcon4drawERKNS_4RectE+0xcc>
 8013b18:	2300      	movs	r3, #0
 8013b1a:	e9cd 330a 	strd	r3, r3, [sp, #40]	; 0x28
 8013b1e:	6823      	ldr	r3, [r4, #0]
 8013b20:	a90a      	add	r1, sp, #40	; 0x28
 8013b22:	6adb      	ldr	r3, [r3, #44]	; 0x2c
 8013b24:	4620      	mov	r0, r4
 8013b26:	4798      	blx	r3
 8013b28:	f8bd 3020 	ldrh.w	r3, [sp, #32]
 8013b2c:	8f22      	ldrh	r2, [r4, #56]	; 0x38
 8013b2e:	f8bd 1022 	ldrh.w	r1, [sp, #34]	; 0x22
 8013b32:	1a9b      	subs	r3, r3, r2
 8013b34:	f8ad 3020 	strh.w	r3, [sp, #32]
 8013b38:	8f63      	ldrh	r3, [r4, #58]	; 0x3a
 8013b3a:	1ac9      	subs	r1, r1, r3
 8013b3c:	f8ad 1022 	strh.w	r1, [sp, #34]	; 0x22
 8013b40:	490f      	ldr	r1, [pc, #60]	; (8013b80 <_ZNK8touchgfx14ButtonWithIcon4drawERKNS_4RectE+0xd8>)
 8013b42:	6809      	ldr	r1, [r1, #0]
 8013b44:	f891 0058 	ldrb.w	r0, [r1, #88]	; 0x58
 8013b48:	b108      	cbz	r0, 8013b4e <_ZNK8touchgfx14ButtonWithIcon4drawERKNS_4RectE+0xa6>
 8013b4a:	6cc8      	ldr	r0, [r1, #76]	; 0x4c
 8013b4c:	b900      	cbnz	r0, 8013b50 <_ZNK8touchgfx14ButtonWithIcon4drawERKNS_4RectE+0xa8>
 8013b4e:	6888      	ldr	r0, [r1, #8]
 8013b50:	f8bd 102a 	ldrh.w	r1, [sp, #42]	; 0x2a
 8013b54:	440b      	add	r3, r1
 8013b56:	f8bd 1028 	ldrh.w	r1, [sp, #40]	; 0x28
 8013b5a:	2601      	movs	r6, #1
 8013b5c:	440a      	add	r2, r1
 8013b5e:	6801      	ldr	r1, [r0, #0]
 8013b60:	9602      	str	r6, [sp, #8]
 8013b62:	f894 4032 	ldrb.w	r4, [r4, #50]	; 0x32
 8013b66:	e9cd 5400 	strd	r5, r4, [sp]
 8013b6a:	b21b      	sxth	r3, r3
 8013b6c:	688c      	ldr	r4, [r1, #8]
 8013b6e:	b212      	sxth	r2, r2
 8013b70:	a905      	add	r1, sp, #20
 8013b72:	47a0      	blx	r4
 8013b74:	b00c      	add	sp, #48	; 0x30
 8013b76:	e8bd 81f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, pc}
 8013b7a:	8ea3      	ldrh	r3, [r4, #52]	; 0x34
 8013b7c:	e7a0      	b.n	8013ac0 <_ZNK8touchgfx14ButtonWithIcon4drawERKNS_4RectE+0x18>
 8013b7e:	bf00      	nop
 8013b80:	2001381c 	.word	0x2001381c

08013b84 <_ZN8touchgfx14ButtonWithIconC1Ev>:
 8013b84:	b510      	push	{r4, lr}
 8013b86:	2101      	movs	r1, #1
 8013b88:	2200      	movs	r2, #0
 8013b8a:	f880 1025 	strb.w	r1, [r0, #37]	; 0x25
 8013b8e:	f880 1024 	strb.w	r1, [r0, #36]	; 0x24
 8013b92:	4c0e      	ldr	r4, [pc, #56]	; (8013bcc <_ZN8touchgfx14ButtonWithIconC1Ev+0x48>)
 8013b94:	8082      	strh	r2, [r0, #4]
 8013b96:	f64f 71ff 	movw	r1, #65535	; 0xffff
 8013b9a:	80c2      	strh	r2, [r0, #6]
 8013b9c:	8102      	strh	r2, [r0, #8]
 8013b9e:	8142      	strh	r2, [r0, #10]
 8013ba0:	8182      	strh	r2, [r0, #12]
 8013ba2:	81c2      	strh	r2, [r0, #14]
 8013ba4:	8202      	strh	r2, [r0, #16]
 8013ba6:	8242      	strh	r2, [r0, #18]
 8013ba8:	e9c0 2205 	strd	r2, r2, [r0, #20]
 8013bac:	61c2      	str	r2, [r0, #28]
 8013bae:	8402      	strh	r2, [r0, #32]
 8013bb0:	8442      	strh	r2, [r0, #34]	; 0x22
 8013bb2:	6282      	str	r2, [r0, #40]	; 0x28
 8013bb4:	f880 202c 	strb.w	r2, [r0, #44]	; 0x2c
 8013bb8:	85c1      	strh	r1, [r0, #46]	; 0x2e
 8013bba:	8601      	strh	r1, [r0, #48]	; 0x30
 8013bbc:	f880 1032 	strb.w	r1, [r0, #50]	; 0x32
 8013bc0:	6004      	str	r4, [r0, #0]
 8013bc2:	8681      	strh	r1, [r0, #52]	; 0x34
 8013bc4:	86c1      	strh	r1, [r0, #54]	; 0x36
 8013bc6:	8702      	strh	r2, [r0, #56]	; 0x38
 8013bc8:	8742      	strh	r2, [r0, #58]	; 0x3a
 8013bca:	bd10      	pop	{r4, pc}
 8013bcc:	0802f618 	.word	0x0802f618

08013bd0 <_ZN8touchgfx5ImageD1Ev>:
 8013bd0:	4770      	bx	lr

08013bd2 <_ZN8touchgfx5Image9setBitmapERKNS_6BitmapE>:
 8013bd2:	b570      	push	{r4, r5, r6, lr}
 8013bd4:	880b      	ldrh	r3, [r1, #0]
 8013bd6:	84c3      	strh	r3, [r0, #38]	; 0x26
 8013bd8:	4604      	mov	r4, r0
 8013bda:	4608      	mov	r0, r1
 8013bdc:	460d      	mov	r5, r1
 8013bde:	f006 f947 	bl	8019e70 <_ZNK8touchgfx6Bitmap8getWidthEv>
 8013be2:	4606      	mov	r6, r0
 8013be4:	4628      	mov	r0, r5
 8013be6:	f006 f977 	bl	8019ed8 <_ZNK8touchgfx6Bitmap9getHeightEv>
 8013bea:	6823      	ldr	r3, [r4, #0]
 8013bec:	4605      	mov	r5, r0
 8013bee:	4631      	mov	r1, r6
 8013bf0:	4620      	mov	r0, r4
 8013bf2:	6b9b      	ldr	r3, [r3, #56]	; 0x38
 8013bf4:	4798      	blx	r3
 8013bf6:	6823      	ldr	r3, [r4, #0]
 8013bf8:	4629      	mov	r1, r5
 8013bfa:	4620      	mov	r0, r4
 8013bfc:	6bdb      	ldr	r3, [r3, #60]	; 0x3c
 8013bfe:	e8bd 4070 	ldmia.w	sp!, {r4, r5, r6, lr}
 8013c02:	4718      	bx	r3

08013c04 <_ZN8touchgfx5ImageD0Ev>:
 8013c04:	b510      	push	{r4, lr}
 8013c06:	212c      	movs	r1, #44	; 0x2c
 8013c08:	4604      	mov	r4, r0
 8013c0a:	f016 fd96 	bl	802a73a <_ZdlPvj>
 8013c0e:	4620      	mov	r0, r4
 8013c10:	bd10      	pop	{r4, pc}

08013c12 <_ZNK8touchgfx5Image12getSolidRectEv>:
 8013c12:	b510      	push	{r4, lr}
 8013c14:	f891 3028 	ldrb.w	r3, [r1, #40]	; 0x28
 8013c18:	2bff      	cmp	r3, #255	; 0xff
 8013c1a:	4604      	mov	r4, r0
 8013c1c:	d006      	beq.n	8013c2c <_ZNK8touchgfx5Image12getSolidRectEv+0x1a>
 8013c1e:	2300      	movs	r3, #0
 8013c20:	8003      	strh	r3, [r0, #0]
 8013c22:	8043      	strh	r3, [r0, #2]
 8013c24:	8083      	strh	r3, [r0, #4]
 8013c26:	80c3      	strh	r3, [r0, #6]
 8013c28:	4620      	mov	r0, r4
 8013c2a:	bd10      	pop	{r4, pc}
 8013c2c:	3126      	adds	r1, #38	; 0x26
 8013c2e:	f006 f987 	bl	8019f40 <_ZNK8touchgfx6Bitmap12getSolidRectEv>
 8013c32:	e7f9      	b.n	8013c28 <_ZNK8touchgfx5Image12getSolidRectEv+0x16>

08013c34 <_ZNK8touchgfx5Image4drawERKNS_4RectE>:
 8013c34:	e92d 41f0 	stmdb	sp!, {r4, r5, r6, r7, r8, lr}
 8013c38:	4604      	mov	r4, r0
 8013c3a:	b088      	sub	sp, #32
 8013c3c:	f854 3b26 	ldr.w	r3, [r4], #38
 8013c40:	2500      	movs	r5, #0
 8013c42:	6adb      	ldr	r3, [r3, #44]	; 0x2c
 8013c44:	460f      	mov	r7, r1
 8013c46:	e9cd 5504 	strd	r5, r5, [sp, #16]
 8013c4a:	a904      	add	r1, sp, #16
 8013c4c:	4606      	mov	r6, r0
 8013c4e:	4798      	blx	r3
 8013c50:	4620      	mov	r0, r4
 8013c52:	f006 f90d 	bl	8019e70 <_ZNK8touchgfx6Bitmap8getWidthEv>
 8013c56:	4680      	mov	r8, r0
 8013c58:	4620      	mov	r0, r4
 8013c5a:	f006 f93d 	bl	8019ed8 <_ZNK8touchgfx6Bitmap9getHeightEv>
 8013c5e:	9506      	str	r5, [sp, #24]
 8013c60:	ad06      	add	r5, sp, #24
 8013c62:	f8ad 001e 	strh.w	r0, [sp, #30]
 8013c66:	4639      	mov	r1, r7
 8013c68:	4628      	mov	r0, r5
 8013c6a:	f8ad 801c 	strh.w	r8, [sp, #28]
 8013c6e:	f7fc fd5d 	bl	801072c <_ZN8touchgfx4RectaNERKS0_>
 8013c72:	f9bd 301c 	ldrsh.w	r3, [sp, #28]
 8013c76:	2b00      	cmp	r3, #0
 8013c78:	dd19      	ble.n	8013cae <_ZNK8touchgfx5Image4drawERKNS_4RectE+0x7a>
 8013c7a:	f9bd 301e 	ldrsh.w	r3, [sp, #30]
 8013c7e:	2b00      	cmp	r3, #0
 8013c80:	dd15      	ble.n	8013cae <_ZNK8touchgfx5Image4drawERKNS_4RectE+0x7a>
 8013c82:	4b0c      	ldr	r3, [pc, #48]	; (8013cb4 <_ZNK8touchgfx5Image4drawERKNS_4RectE+0x80>)
 8013c84:	681b      	ldr	r3, [r3, #0]
 8013c86:	f893 2058 	ldrb.w	r2, [r3, #88]	; 0x58
 8013c8a:	b10a      	cbz	r2, 8013c90 <_ZNK8touchgfx5Image4drawERKNS_4RectE+0x5c>
 8013c8c:	6cd8      	ldr	r0, [r3, #76]	; 0x4c
 8013c8e:	b900      	cbnz	r0, 8013c92 <_ZNK8touchgfx5Image4drawERKNS_4RectE+0x5e>
 8013c90:	6898      	ldr	r0, [r3, #8]
 8013c92:	6801      	ldr	r1, [r0, #0]
 8013c94:	f9bd 3012 	ldrsh.w	r3, [sp, #18]
 8013c98:	f9bd 2010 	ldrsh.w	r2, [sp, #16]
 8013c9c:	2701      	movs	r7, #1
 8013c9e:	9702      	str	r7, [sp, #8]
 8013ca0:	f896 6028 	ldrb.w	r6, [r6, #40]	; 0x28
 8013ca4:	e9cd 5600 	strd	r5, r6, [sp]
 8013ca8:	688d      	ldr	r5, [r1, #8]
 8013caa:	4621      	mov	r1, r4
 8013cac:	47a8      	blx	r5
 8013cae:	b008      	add	sp, #32
 8013cb0:	e8bd 81f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, pc}
 8013cb4:	2001381c 	.word	0x2001381c

08013cb8 <_ZN8touchgfx15ButtonWithLabelD1Ev>:
 8013cb8:	4770      	bx	lr

08013cba <_ZN8touchgfx15ButtonWithLabelD0Ev>:
 8013cba:	b510      	push	{r4, lr}
 8013cbc:	2148      	movs	r1, #72	; 0x48
 8013cbe:	4604      	mov	r4, r0
 8013cc0:	f016 fd3b 	bl	802a73a <_ZdlPvj>
 8013cc4:	4620      	mov	r0, r4
 8013cc6:	bd10      	pop	{r4, pc}

08013cc8 <_ZNK8touchgfx15ButtonWithLabel4drawERKNS_4RectE>:
 8013cc8:	e92d 43f0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, lr}
 8013ccc:	b08d      	sub	sp, #52	; 0x34
 8013cce:	4604      	mov	r4, r0
 8013cd0:	460f      	mov	r7, r1
 8013cd2:	f7ff fdcb 	bl	801386c <_ZNK8touchgfx6Button4drawERKNS_4RectE>
 8013cd6:	4a55      	ldr	r2, [pc, #340]	; (8013e2c <_ZNK8touchgfx15ButtonWithLabel4drawERKNS_4RectE+0x164>)
 8013cd8:	8f23      	ldrh	r3, [r4, #56]	; 0x38
 8013cda:	8812      	ldrh	r2, [r2, #0]
 8013cdc:	429a      	cmp	r2, r3
 8013cde:	f240 8082 	bls.w	8013de6 <_ZNK8touchgfx15ButtonWithLabel4drawERKNS_4RectE+0x11e>
 8013ce2:	4d53      	ldr	r5, [pc, #332]	; (8013e30 <_ZNK8touchgfx15ButtonWithLabel4drawERKNS_4RectE+0x168>)
 8013ce4:	682a      	ldr	r2, [r5, #0]
 8013ce6:	f812 2013 	ldrb.w	r2, [r2, r3, lsl #1]
 8013cea:	4b52      	ldr	r3, [pc, #328]	; (8013e34 <_ZNK8touchgfx15ButtonWithLabel4drawERKNS_4RectE+0x16c>)
 8013cec:	681b      	ldr	r3, [r3, #0]
 8013cee:	f853 6022 	ldr.w	r6, [r3, r2, lsl #2]
 8013cf2:	f9b4 3046 	ldrsh.w	r3, [r4, #70]	; 0x46
 8013cf6:	2200      	movs	r2, #0
 8013cf8:	e9cd 2203 	strd	r2, r2, [sp, #12]
 8013cfc:	f894 2044 	ldrb.w	r2, [r4, #68]	; 0x44
 8013d00:	2a03      	cmp	r2, #3
 8013d02:	d811      	bhi.n	8013d28 <_ZNK8touchgfx15ButtonWithLabel4drawERKNS_4RectE+0x60>
 8013d04:	e8df f002 	tbb	[pc, r2]
 8013d08:	89727902 	.word	0x89727902
 8013d0c:	f9b4 200a 	ldrsh.w	r2, [r4, #10]
 8013d10:	f9b4 1008 	ldrsh.w	r1, [r4, #8]
 8013d14:	1ad2      	subs	r2, r2, r3
 8013d16:	2002      	movs	r0, #2
 8013d18:	f8ad 1010 	strh.w	r1, [sp, #16]
 8013d1c:	fb92 f2f0 	sdiv	r2, r2, r0
 8013d20:	f8ad 3012 	strh.w	r3, [sp, #18]
 8013d24:	f8ad 200e 	strh.w	r2, [sp, #14]
 8013d28:	f10d 080c 	add.w	r8, sp, #12
 8013d2c:	e898 0003 	ldmia.w	r8, {r0, r1}
 8013d30:	f10d 0914 	add.w	r9, sp, #20
 8013d34:	e889 0003 	stmia.w	r9, {r0, r1}
 8013d38:	4639      	mov	r1, r7
 8013d3a:	4648      	mov	r0, r9
 8013d3c:	f7fc fcf6 	bl	801072c <_ZN8touchgfx4RectaNERKS0_>
 8013d40:	f9bd 3018 	ldrsh.w	r3, [sp, #24]
 8013d44:	2b00      	cmp	r3, #0
 8013d46:	dd4e      	ble.n	8013de6 <_ZNK8touchgfx15ButtonWithLabel4drawERKNS_4RectE+0x11e>
 8013d48:	f9bd 301a 	ldrsh.w	r3, [sp, #26]
 8013d4c:	2b00      	cmp	r3, #0
 8013d4e:	dd4a      	ble.n	8013de6 <_ZNK8touchgfx15ButtonWithLabel4drawERKNS_4RectE+0x11e>
 8013d50:	f8bd 3014 	ldrh.w	r3, [sp, #20]
 8013d54:	f8bd 200c 	ldrh.w	r2, [sp, #12]
 8013d58:	1a9b      	subs	r3, r3, r2
 8013d5a:	f8ad 3014 	strh.w	r3, [sp, #20]
 8013d5e:	f8bd 200e 	ldrh.w	r2, [sp, #14]
 8013d62:	f8bd 3016 	ldrh.w	r3, [sp, #22]
 8013d66:	1a9b      	subs	r3, r3, r2
 8013d68:	f8ad 3016 	strh.w	r3, [sp, #22]
 8013d6c:	6823      	ldr	r3, [r4, #0]
 8013d6e:	4641      	mov	r1, r8
 8013d70:	6adb      	ldr	r3, [r3, #44]	; 0x2c
 8013d72:	4620      	mov	r0, r4
 8013d74:	4798      	blx	r3
 8013d76:	f894 302c 	ldrb.w	r3, [r4, #44]	; 0x2c
 8013d7a:	2b00      	cmp	r3, #0
 8013d7c:	d053      	beq.n	8013e26 <_ZNK8touchgfx15ButtonWithLabel4drawERKNS_4RectE+0x15e>
 8013d7e:	6c22      	ldr	r2, [r4, #64]	; 0x40
 8013d80:	8f21      	ldrh	r1, [r4, #56]	; 0x38
 8013d82:	682b      	ldr	r3, [r5, #0]
 8013d84:	f894 0032 	ldrb.w	r0, [r4, #50]	; 0x32
 8013d88:	f894 4044 	ldrb.w	r4, [r4, #68]	; 0x44
 8013d8c:	eb03 0341 	add.w	r3, r3, r1, lsl #1
 8013d90:	785b      	ldrb	r3, [r3, #1]
 8013d92:	9209      	str	r2, [sp, #36]	; 0x24
 8013d94:	f3c3 0501 	ubfx	r5, r3, #0, #2
 8013d98:	f3c3 0381 	ubfx	r3, r3, #2, #2
 8013d9c:	f88d 3021 	strb.w	r3, [sp, #33]	; 0x21
 8013da0:	2300      	movs	r3, #0
 8013da2:	f8ad 3028 	strh.w	r3, [sp, #40]	; 0x28
 8013da6:	f88d 302b 	strb.w	r3, [sp, #43]	; 0x2b
 8013daa:	f88d 302c 	strb.w	r3, [sp, #44]	; 0x2c
 8013dae:	4b22      	ldr	r3, [pc, #136]	; (8013e38 <_ZNK8touchgfx15ButtonWithLabel4drawERKNS_4RectE+0x170>)
 8013db0:	9607      	str	r6, [sp, #28]
 8013db2:	681b      	ldr	r3, [r3, #0]
 8013db4:	f88d 5020 	strb.w	r5, [sp, #32]
 8013db8:	f893 2058 	ldrb.w	r2, [r3, #88]	; 0x58
 8013dbc:	f88d 4022 	strb.w	r4, [sp, #34]	; 0x22
 8013dc0:	f88d 002a 	strb.w	r0, [sp, #42]	; 0x2a
 8013dc4:	b10a      	cbz	r2, 8013dca <_ZNK8touchgfx15ButtonWithLabel4drawERKNS_4RectE+0x102>
 8013dc6:	6cdc      	ldr	r4, [r3, #76]	; 0x4c
 8013dc8:	b904      	cbnz	r4, 8013dcc <_ZNK8touchgfx15ButtonWithLabel4drawERKNS_4RectE+0x104>
 8013dca:	689c      	ldr	r4, [r3, #8]
 8013dcc:	4b1b      	ldr	r3, [pc, #108]	; (8013e3c <_ZNK8touchgfx15ButtonWithLabel4drawERKNS_4RectE+0x174>)
 8013dce:	6818      	ldr	r0, [r3, #0]
 8013dd0:	f7f4 fcba 	bl	8008748 <_ZNK8touchgfx5Texts7getTextEt>
 8013dd4:	ab07      	add	r3, sp, #28
 8013dd6:	9001      	str	r0, [sp, #4]
 8013dd8:	9300      	str	r3, [sp, #0]
 8013dda:	e898 0006 	ldmia.w	r8, {r1, r2}
 8013dde:	464b      	mov	r3, r9
 8013de0:	4620      	mov	r0, r4
 8013de2:	f7f4 fc63 	bl	80086ac <_ZN8touchgfx3LCD10drawStringENS_4RectERKS1_RKNS0_13StringVisualsEPKtz>
 8013de6:	b00d      	add	sp, #52	; 0x34
 8013de8:	e8bd 83f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, pc}
 8013dec:	f9b4 200a 	ldrsh.w	r2, [r4, #10]
 8013df0:	f9b4 1008 	ldrsh.w	r1, [r4, #8]
 8013df4:	1ad2      	subs	r2, r2, r3
 8013df6:	3201      	adds	r2, #1
 8013df8:	e78d      	b.n	8013d16 <_ZNK8touchgfx15ButtonWithLabel4drawERKNS_4RectE+0x4e>
 8013dfa:	f9b4 2008 	ldrsh.w	r2, [r4, #8]
 8013dfe:	f9b4 100a 	ldrsh.w	r1, [r4, #10]
 8013e02:	1ad2      	subs	r2, r2, r3
 8013e04:	3201      	adds	r2, #1
 8013e06:	2002      	movs	r0, #2
 8013e08:	f8ad 3010 	strh.w	r3, [sp, #16]
 8013e0c:	fb92 f2f0 	sdiv	r2, r2, r0
 8013e10:	f8ad 1012 	strh.w	r1, [sp, #18]
 8013e14:	f8ad 200c 	strh.w	r2, [sp, #12]
 8013e18:	e786      	b.n	8013d28 <_ZNK8touchgfx15ButtonWithLabel4drawERKNS_4RectE+0x60>
 8013e1a:	f9b4 2008 	ldrsh.w	r2, [r4, #8]
 8013e1e:	f9b4 100a 	ldrsh.w	r1, [r4, #10]
 8013e22:	1ad2      	subs	r2, r2, r3
 8013e24:	e7ef      	b.n	8013e06 <_ZNK8touchgfx15ButtonWithLabel4drawERKNS_4RectE+0x13e>
 8013e26:	6be2      	ldr	r2, [r4, #60]	; 0x3c
 8013e28:	e7aa      	b.n	8013d80 <_ZNK8touchgfx15ButtonWithLabel4drawERKNS_4RectE+0xb8>
 8013e2a:	bf00      	nop
 8013e2c:	20013878 	.word	0x20013878
 8013e30:	20013874 	.word	0x20013874
 8013e34:	2001387c 	.word	0x2001387c
 8013e38:	2001381c 	.word	0x2001381c
 8013e3c:	20013880 	.word	0x20013880

08013e40 <_ZN8touchgfx15ButtonWithLabelC1Ev>:
 8013e40:	b510      	push	{r4, lr}
 8013e42:	2101      	movs	r1, #1
 8013e44:	4c13      	ldr	r4, [pc, #76]	; (8013e94 <_ZN8touchgfx15ButtonWithLabelC1Ev+0x54>)
 8013e46:	f880 1025 	strb.w	r1, [r0, #37]	; 0x25
 8013e4a:	2200      	movs	r2, #0
 8013e4c:	f880 1024 	strb.w	r1, [r0, #36]	; 0x24
 8013e50:	6004      	str	r4, [r0, #0]
 8013e52:	f64f 71ff 	movw	r1, #65535	; 0xffff
 8013e56:	4c10      	ldr	r4, [pc, #64]	; (8013e98 <_ZN8touchgfx15ButtonWithLabelC1Ev+0x58>)
 8013e58:	8082      	strh	r2, [r0, #4]
 8013e5a:	80c2      	strh	r2, [r0, #6]
 8013e5c:	8102      	strh	r2, [r0, #8]
 8013e5e:	8142      	strh	r2, [r0, #10]
 8013e60:	8182      	strh	r2, [r0, #12]
 8013e62:	81c2      	strh	r2, [r0, #14]
 8013e64:	8202      	strh	r2, [r0, #16]
 8013e66:	8242      	strh	r2, [r0, #18]
 8013e68:	e9c0 2205 	strd	r2, r2, [r0, #20]
 8013e6c:	61c2      	str	r2, [r0, #28]
 8013e6e:	8402      	strh	r2, [r0, #32]
 8013e70:	8442      	strh	r2, [r0, #34]	; 0x22
 8013e72:	6282      	str	r2, [r0, #40]	; 0x28
 8013e74:	f880 202c 	strb.w	r2, [r0, #44]	; 0x2c
 8013e78:	85c1      	strh	r1, [r0, #46]	; 0x2e
 8013e7a:	8601      	strh	r1, [r0, #48]	; 0x30
 8013e7c:	f880 1032 	strb.w	r1, [r0, #50]	; 0x32
 8013e80:	6344      	str	r4, [r0, #52]	; 0x34
 8013e82:	8701      	strh	r1, [r0, #56]	; 0x38
 8013e84:	e9c0 220f 	strd	r2, r2, [r0, #60]	; 0x3c
 8013e88:	f880 2044 	strb.w	r2, [r0, #68]	; 0x44
 8013e8c:	f8a0 2046 	strh.w	r2, [r0, #70]	; 0x46
 8013e90:	bd10      	pop	{r4, pc}
 8013e92:	bf00      	nop
 8013e94:	0802f6fc 	.word	0x0802f6fc
 8013e98:	0802cef0 	.word	0x0802cef0

08013e9c <_ZN8touchgfx7OutlineD1Ev>:
 8013e9c:	4770      	bx	lr

08013e9e <_ZN8touchgfx7OutlineD0Ev>:
 8013e9e:	b510      	push	{r4, lr}
 8013ea0:	2130      	movs	r1, #48	; 0x30
 8013ea2:	4604      	mov	r4, r0
 8013ea4:	f016 fc49 	bl	802a73a <_ZdlPvj>
 8013ea8:	4620      	mov	r0, r4
 8013eaa:	bd10      	pop	{r4, pc}

08013eac <_ZN8touchgfx7Outline5resetEv>:
 8013eac:	b510      	push	{r4, lr}
 8013eae:	4604      	mov	r4, r0
 8013eb0:	f000 fe96 	bl	8014be0 <_ZN8touchgfx20CanvasWidgetRenderer16getOutlineBufferEv>
 8013eb4:	60e0      	str	r0, [r4, #12]
 8013eb6:	f000 fe99 	bl	8014bec <_ZN8touchgfx20CanvasWidgetRenderer20getOutlineBufferSizeEv>
 8013eba:	68e3      	ldr	r3, [r4, #12]
 8013ebc:	6123      	str	r3, [r4, #16]
 8013ebe:	08c0      	lsrs	r0, r0, #3
 8013ec0:	2200      	movs	r2, #0
 8013ec2:	f647 71ff 	movw	r1, #32767	; 0x7fff
 8013ec6:	3801      	subs	r0, #1
 8013ec8:	6060      	str	r0, [r4, #4]
 8013eca:	60a2      	str	r2, [r4, #8]
 8013ecc:	8019      	strh	r1, [r3, #0]
 8013ece:	8059      	strh	r1, [r3, #2]
 8013ed0:	809a      	strh	r2, [r3, #4]
 8013ed2:	80da      	strh	r2, [r3, #6]
 8013ed4:	6a63      	ldr	r3, [r4, #36]	; 0x24
 8013ed6:	f023 0301 	bic.w	r3, r3, #1
 8013eda:	f043 0302 	orr.w	r3, r3, #2
 8013ede:	6263      	str	r3, [r4, #36]	; 0x24
 8013ee0:	bd10      	pop	{r4, pc}
	...

08013ee4 <_ZN8touchgfx7OutlineC1Ev>:
 8013ee4:	b510      	push	{r4, lr}
 8013ee6:	4b0a      	ldr	r3, [pc, #40]	; (8013f10 <_ZN8touchgfx7OutlineC1Ev+0x2c>)
 8013ee8:	6003      	str	r3, [r0, #0]
 8013eea:	2300      	movs	r3, #0
 8013eec:	e9c0 3301 	strd	r3, r3, [r0, #4]
 8013ef0:	e9c0 3303 	strd	r3, r3, [r0, #12]
 8013ef4:	e9c0 3305 	strd	r3, r3, [r0, #20]
 8013ef8:	e9c0 3307 	strd	r3, r3, [r0, #28]
 8013efc:	6243      	str	r3, [r0, #36]	; 0x24
 8013efe:	f06f 4300 	mvn.w	r3, #2147483648	; 0x80000000
 8013f02:	4604      	mov	r4, r0
 8013f04:	e9c0 330a 	strd	r3, r3, [r0, #40]	; 0x28
 8013f08:	f7ff ffd0 	bl	8013eac <_ZN8touchgfx7Outline5resetEv>
 8013f0c:	4620      	mov	r0, r4
 8013f0e:	bd10      	pop	{r4, pc}
 8013f10:	0802f770 	.word	0x0802f770

08013f14 <_ZN8touchgfx7Outline10renderLineEiiii>:
 8013f14:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 8013f18:	b093      	sub	sp, #76	; 0x4c
 8013f1a:	1156      	asrs	r6, r2, #5
 8013f1c:	9c1c      	ldr	r4, [sp, #112]	; 0x70
 8013f1e:	9305      	str	r3, [sp, #20]
 8013f20:	f004 051f 	and.w	r5, r4, #31
 8013f24:	1153      	asrs	r3, r2, #5
 8013f26:	9504      	str	r5, [sp, #16]
 8013f28:	1165      	asrs	r5, r4, #5
 8013f2a:	9303      	str	r3, [sp, #12]
 8013f2c:	42ae      	cmp	r6, r5
 8013f2e:	ea4f 1364 	mov.w	r3, r4, asr #5
 8013f32:	9306      	str	r3, [sp, #24]
 8013f34:	f002 031f 	and.w	r3, r2, #31
 8013f38:	f040 80f8 	bne.w	801412c <_ZN8touchgfx7Outline10renderLineEiiii+0x218>
 8013f3c:	9c04      	ldr	r4, [sp, #16]
 8013f3e:	9a05      	ldr	r2, [sp, #20]
 8013f40:	42a3      	cmp	r3, r4
 8013f42:	ea4f 1e62 	mov.w	lr, r2, asr #5
 8013f46:	6902      	ldr	r2, [r0, #16]
 8013f48:	d125      	bne.n	8013f96 <_ZN8touchgfx7Outline10renderLineEiiii+0x82>
 8013f4a:	f9b2 3000 	ldrsh.w	r3, [r2]
 8013f4e:	459e      	cmp	lr, r3
 8013f50:	d103      	bne.n	8013f5a <_ZN8touchgfx7Outline10renderLineEiiii+0x46>
 8013f52:	f9b2 3002 	ldrsh.w	r3, [r2, #2]
 8013f56:	429e      	cmp	r6, r3
 8013f58:	d035      	beq.n	8013fc6 <_ZN8touchgfx7Outline10renderLineEiiii+0xb2>
 8013f5a:	88d1      	ldrh	r1, [r2, #6]
 8013f5c:	8893      	ldrh	r3, [r2, #4]
 8013f5e:	430b      	orrs	r3, r1
 8013f60:	d010      	beq.n	8013f84 <_ZN8touchgfx7Outline10renderLineEiiii+0x70>
 8013f62:	f9b2 3002 	ldrsh.w	r3, [r2, #2]
 8013f66:	2b00      	cmp	r3, #0
 8013f68:	db0c      	blt.n	8013f84 <_ZN8touchgfx7Outline10renderLineEiiii+0x70>
 8013f6a:	6ac1      	ldr	r1, [r0, #44]	; 0x2c
 8013f6c:	428b      	cmp	r3, r1
 8013f6e:	da09      	bge.n	8013f84 <_ZN8touchgfx7Outline10renderLineEiiii+0x70>
 8013f70:	e9d0 1301 	ldrd	r1, r3, [r0, #4]
 8013f74:	428b      	cmp	r3, r1
 8013f76:	bf38      	it	cc
 8013f78:	3208      	addcc	r2, #8
 8013f7a:	f103 0301 	add.w	r3, r3, #1
 8013f7e:	bf38      	it	cc
 8013f80:	6102      	strcc	r2, [r0, #16]
 8013f82:	6083      	str	r3, [r0, #8]
 8013f84:	6903      	ldr	r3, [r0, #16]
 8013f86:	9a03      	ldr	r2, [sp, #12]
 8013f88:	f8a3 e000 	strh.w	lr, [r3]
 8013f8c:	805a      	strh	r2, [r3, #2]
 8013f8e:	2200      	movs	r2, #0
 8013f90:	809a      	strh	r2, [r3, #4]
 8013f92:	80da      	strh	r2, [r3, #6]
 8013f94:	e017      	b.n	8013fc6 <_ZN8touchgfx7Outline10renderLineEiiii+0xb2>
 8013f96:	9c05      	ldr	r4, [sp, #20]
 8013f98:	f8b2 8004 	ldrh.w	r8, [r2, #4]
 8013f9c:	f8b2 a006 	ldrh.w	sl, [r2, #6]
 8013fa0:	f004 041f 	and.w	r4, r4, #31
 8013fa4:	114e      	asrs	r6, r1, #5
 8013fa6:	9402      	str	r4, [sp, #8]
 8013fa8:	9c04      	ldr	r4, [sp, #16]
 8013faa:	4576      	cmp	r6, lr
 8013fac:	f001 0c1f 	and.w	ip, r1, #31
 8013fb0:	eba4 0403 	sub.w	r4, r4, r3
 8013fb4:	d10a      	bne.n	8013fcc <_ZN8touchgfx7Outline10renderLineEiiii+0xb8>
 8013fb6:	9b02      	ldr	r3, [sp, #8]
 8013fb8:	449c      	add	ip, r3
 8013fba:	44a0      	add	r8, r4
 8013fbc:	fb04 a40c 	mla	r4, r4, ip, sl
 8013fc0:	f8a2 8004 	strh.w	r8, [r2, #4]
 8013fc4:	80d4      	strh	r4, [r2, #6]
 8013fc6:	b013      	add	sp, #76	; 0x4c
 8013fc8:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
 8013fcc:	9d05      	ldr	r5, [sp, #20]
 8013fce:	1a69      	subs	r1, r5, r1
 8013fd0:	bf5b      	ittet	pl
 8013fd2:	f1cc 0520 	rsbpl	r5, ip, #32
 8013fd6:	436c      	mulpl	r4, r5
 8013fd8:	2500      	movmi	r5, #0
 8013fda:	2520      	movpl	r5, #32
 8013fdc:	bf44      	itt	mi
 8013fde:	fb04 f40c 	mulmi.w	r4, r4, ip
 8013fe2:	4249      	negmi	r1, r1
 8013fe4:	9501      	str	r5, [sp, #4]
 8013fe6:	9f01      	ldr	r7, [sp, #4]
 8013fe8:	fb94 f5f1 	sdiv	r5, r4, r1
 8013fec:	fb01 4415 	mls	r4, r1, r5, r4
 8013ff0:	bf54      	ite	pl
 8013ff2:	f04f 0901 	movpl.w	r9, #1
 8013ff6:	f04f 39ff 	movmi.w	r9, #4294967295
 8013ffa:	2c00      	cmp	r4, #0
 8013ffc:	bfb8      	it	lt
 8013ffe:	f105 35ff 	addlt.w	r5, r5, #4294967295
 8014002:	44bc      	add	ip, r7
 8014004:	44a8      	add	r8, r5
 8014006:	fb05 ac0c 	mla	ip, r5, ip, sl
 801400a:	f8a2 8004 	strh.w	r8, [r2, #4]
 801400e:	f8a2 c006 	strh.w	ip, [r2, #6]
 8014012:	f8d0 c010 	ldr.w	ip, [r0, #16]
 8014016:	f8bc 8006 	ldrh.w	r8, [ip, #6]
 801401a:	f8bc 2004 	ldrh.w	r2, [ip, #4]
 801401e:	bfb8      	it	lt
 8014020:	1864      	addlt	r4, r4, r1
 8014022:	ea58 0202 	orrs.w	r2, r8, r2
 8014026:	444e      	add	r6, r9
 8014028:	d011      	beq.n	801404e <_ZN8touchgfx7Outline10renderLineEiiii+0x13a>
 801402a:	f9bc 8002 	ldrsh.w	r8, [ip, #2]
 801402e:	f1b8 0f00 	cmp.w	r8, #0
 8014032:	db0c      	blt.n	801404e <_ZN8touchgfx7Outline10renderLineEiiii+0x13a>
 8014034:	6ac2      	ldr	r2, [r0, #44]	; 0x2c
 8014036:	4590      	cmp	r8, r2
 8014038:	da09      	bge.n	801404e <_ZN8touchgfx7Outline10renderLineEiiii+0x13a>
 801403a:	e9d0 2801 	ldrd	r2, r8, [r0, #4]
 801403e:	4590      	cmp	r8, r2
 8014040:	bf3c      	itt	cc
 8014042:	f10c 0208 	addcc.w	r2, ip, #8
 8014046:	6102      	strcc	r2, [r0, #16]
 8014048:	f108 0201 	add.w	r2, r8, #1
 801404c:	6082      	str	r2, [r0, #8]
 801404e:	f8d0 c010 	ldr.w	ip, [r0, #16]
 8014052:	f9bd 200c 	ldrsh.w	r2, [sp, #12]
 8014056:	f8ac 6000 	strh.w	r6, [ip]
 801405a:	2700      	movs	r7, #0
 801405c:	45b6      	cmp	lr, r6
 801405e:	f8ac 2002 	strh.w	r2, [ip, #2]
 8014062:	f8ac 7004 	strh.w	r7, [ip, #4]
 8014066:	f8ac 7006 	strh.w	r7, [ip, #6]
 801406a:	442b      	add	r3, r5
 801406c:	d04d      	beq.n	801410a <_ZN8touchgfx7Outline10renderLineEiiii+0x1f6>
 801406e:	9f04      	ldr	r7, [sp, #16]
 8014070:	1aff      	subs	r7, r7, r3
 8014072:	443d      	add	r5, r7
 8014074:	016d      	lsls	r5, r5, #5
 8014076:	fb95 f8f1 	sdiv	r8, r5, r1
 801407a:	fb01 5518 	mls	r5, r1, r8, r5
 801407e:	2d00      	cmp	r5, #0
 8014080:	bfb8      	it	lt
 8014082:	f108 38ff 	addlt.w	r8, r8, #4294967295
 8014086:	f108 0701 	add.w	r7, r8, #1
 801408a:	bfb8      	it	lt
 801408c:	186d      	addlt	r5, r5, r1
 801408e:	1a64      	subs	r4, r4, r1
 8014090:	9703      	str	r7, [sp, #12]
 8014092:	f04f 0a00 	mov.w	sl, #0
 8014096:	f8d0 c010 	ldr.w	ip, [r0, #16]
 801409a:	1964      	adds	r4, r4, r5
 801409c:	bf58      	it	pl
 801409e:	9f03      	ldrpl	r7, [sp, #12]
 80140a0:	f8bc b004 	ldrh.w	fp, [ip, #4]
 80140a4:	bf48      	it	mi
 80140a6:	4647      	movmi	r7, r8
 80140a8:	44bb      	add	fp, r7
 80140aa:	f8ac b004 	strh.w	fp, [ip, #4]
 80140ae:	f8bc b006 	ldrh.w	fp, [ip, #6]
 80140b2:	eb0b 1b47 	add.w	fp, fp, r7, lsl #5
 80140b6:	f8ac b006 	strh.w	fp, [ip, #6]
 80140ba:	f8d0 c010 	ldr.w	ip, [r0, #16]
 80140be:	443b      	add	r3, r7
 80140c0:	f8bc b006 	ldrh.w	fp, [ip, #6]
 80140c4:	f8bc 7004 	ldrh.w	r7, [ip, #4]
 80140c8:	bf58      	it	pl
 80140ca:	1a64      	subpl	r4, r4, r1
 80140cc:	ea5b 0707 	orrs.w	r7, fp, r7
 80140d0:	444e      	add	r6, r9
 80140d2:	d011      	beq.n	80140f8 <_ZN8touchgfx7Outline10renderLineEiiii+0x1e4>
 80140d4:	f9bc b002 	ldrsh.w	fp, [ip, #2]
 80140d8:	f1bb 0f00 	cmp.w	fp, #0
 80140dc:	db0c      	blt.n	80140f8 <_ZN8touchgfx7Outline10renderLineEiiii+0x1e4>
 80140de:	6ac7      	ldr	r7, [r0, #44]	; 0x2c
 80140e0:	45bb      	cmp	fp, r7
 80140e2:	da09      	bge.n	80140f8 <_ZN8touchgfx7Outline10renderLineEiiii+0x1e4>
 80140e4:	e9d0 7b01 	ldrd	r7, fp, [r0, #4]
 80140e8:	45bb      	cmp	fp, r7
 80140ea:	bf3c      	itt	cc
 80140ec:	f10c 0708 	addcc.w	r7, ip, #8
 80140f0:	6107      	strcc	r7, [r0, #16]
 80140f2:	f10b 0701 	add.w	r7, fp, #1
 80140f6:	6087      	str	r7, [r0, #8]
 80140f8:	6907      	ldr	r7, [r0, #16]
 80140fa:	45b6      	cmp	lr, r6
 80140fc:	803e      	strh	r6, [r7, #0]
 80140fe:	807a      	strh	r2, [r7, #2]
 8014100:	f8a7 a004 	strh.w	sl, [r7, #4]
 8014104:	f8a7 a006 	strh.w	sl, [r7, #6]
 8014108:	d1c5      	bne.n	8014096 <_ZN8touchgfx7Outline10renderLineEiiii+0x182>
 801410a:	9a04      	ldr	r2, [sp, #16]
 801410c:	1ad3      	subs	r3, r2, r3
 801410e:	6902      	ldr	r2, [r0, #16]
 8014110:	8891      	ldrh	r1, [r2, #4]
 8014112:	88d6      	ldrh	r6, [r2, #6]
 8014114:	4419      	add	r1, r3
 8014116:	8091      	strh	r1, [r2, #4]
 8014118:	9902      	ldr	r1, [sp, #8]
 801411a:	f101 0c20 	add.w	ip, r1, #32
 801411e:	9901      	ldr	r1, [sp, #4]
 8014120:	ebac 0c01 	sub.w	ip, ip, r1
 8014124:	fb03 630c 	mla	r3, r3, ip, r6
 8014128:	80d3      	strh	r3, [r2, #6]
 801412a:	e74c      	b.n	8013fc6 <_ZN8touchgfx7Outline10renderLineEiiii+0xb2>
 801412c:	9d05      	ldr	r5, [sp, #20]
 801412e:	1aa2      	subs	r2, r4, r2
 8014130:	eba5 0501 	sub.w	r5, r5, r1
 8014134:	9508      	str	r5, [sp, #32]
 8014136:	9202      	str	r2, [sp, #8]
 8014138:	f140 8128 	bpl.w	801438c <_ZN8touchgfx7Outline10renderLineEiiii+0x478>
 801413c:	9a03      	ldr	r2, [sp, #12]
 801413e:	2a00      	cmp	r2, #0
 8014140:	f6ff af41 	blt.w	8013fc6 <_ZN8touchgfx7Outline10renderLineEiiii+0xb2>
 8014144:	9a02      	ldr	r2, [sp, #8]
 8014146:	4252      	negs	r2, r2
 8014148:	9202      	str	r2, [sp, #8]
 801414a:	9a06      	ldr	r2, [sp, #24]
 801414c:	ea42 72e2 	orr.w	r2, r2, r2, asr #31
 8014150:	f04f 34ff 	mov.w	r4, #4294967295
 8014154:	9206      	str	r2, [sp, #24]
 8014156:	462a      	mov	r2, r5
 8014158:	940b      	str	r4, [sp, #44]	; 0x2c
 801415a:	435a      	muls	r2, r3
 801415c:	2400      	movs	r4, #0
 801415e:	9d02      	ldr	r5, [sp, #8]
 8014160:	9401      	str	r4, [sp, #4]
 8014162:	9c02      	ldr	r4, [sp, #8]
 8014164:	fb92 f4f4 	sdiv	r4, r2, r4
 8014168:	fb05 2214 	mls	r2, r5, r4, r2
 801416c:	2a00      	cmp	r2, #0
 801416e:	9207      	str	r2, [sp, #28]
 8014170:	bfbc      	itt	lt
 8014172:	1952      	addlt	r2, r2, r5
 8014174:	9207      	strlt	r2, [sp, #28]
 8014176:	9a01      	ldr	r2, [sp, #4]
 8014178:	6905      	ldr	r5, [r0, #16]
 801417a:	bfb8      	it	lt
 801417c:	f104 34ff 	addlt.w	r4, r4, #4294967295
 8014180:	eb04 0901 	add.w	r9, r4, r1
 8014184:	429a      	cmp	r2, r3
 8014186:	ea4f 1669 	mov.w	r6, r9, asr #5
 801418a:	f040 8112 	bne.w	80143b2 <_ZN8touchgfx7Outline10renderLineEiiii+0x49e>
 801418e:	f9b5 3000 	ldrsh.w	r3, [r5]
 8014192:	429e      	cmp	r6, r3
 8014194:	d104      	bne.n	80141a0 <_ZN8touchgfx7Outline10renderLineEiiii+0x28c>
 8014196:	f9b5 3002 	ldrsh.w	r3, [r5, #2]
 801419a:	9a03      	ldr	r2, [sp, #12]
 801419c:	429a      	cmp	r2, r3
 801419e:	d01b      	beq.n	80141d8 <_ZN8touchgfx7Outline10renderLineEiiii+0x2c4>
 80141a0:	88ea      	ldrh	r2, [r5, #6]
 80141a2:	88ab      	ldrh	r3, [r5, #4]
 80141a4:	4313      	orrs	r3, r2
 80141a6:	d010      	beq.n	80141ca <_ZN8touchgfx7Outline10renderLineEiiii+0x2b6>
 80141a8:	f9b5 2002 	ldrsh.w	r2, [r5, #2]
 80141ac:	2a00      	cmp	r2, #0
 80141ae:	db0c      	blt.n	80141ca <_ZN8touchgfx7Outline10renderLineEiiii+0x2b6>
 80141b0:	6ac3      	ldr	r3, [r0, #44]	; 0x2c
 80141b2:	429a      	cmp	r2, r3
 80141b4:	da09      	bge.n	80141ca <_ZN8touchgfx7Outline10renderLineEiiii+0x2b6>
 80141b6:	e9d0 3201 	ldrd	r3, r2, [r0, #4]
 80141ba:	429a      	cmp	r2, r3
 80141bc:	bf38      	it	cc
 80141be:	3508      	addcc	r5, #8
 80141c0:	f102 0201 	add.w	r2, r2, #1
 80141c4:	bf38      	it	cc
 80141c6:	6105      	strcc	r5, [r0, #16]
 80141c8:	6082      	str	r2, [r0, #8]
 80141ca:	6903      	ldr	r3, [r0, #16]
 80141cc:	9a03      	ldr	r2, [sp, #12]
 80141ce:	805a      	strh	r2, [r3, #2]
 80141d0:	2200      	movs	r2, #0
 80141d2:	801e      	strh	r6, [r3, #0]
 80141d4:	809a      	strh	r2, [r3, #4]
 80141d6:	80da      	strh	r2, [r3, #6]
 80141d8:	9b0b      	ldr	r3, [sp, #44]	; 0x2c
 80141da:	9a03      	ldr	r2, [sp, #12]
 80141dc:	6901      	ldr	r1, [r0, #16]
 80141de:	441a      	add	r2, r3
 80141e0:	f9b1 3000 	ldrsh.w	r3, [r1]
 80141e4:	42b3      	cmp	r3, r6
 80141e6:	d103      	bne.n	80141f0 <_ZN8touchgfx7Outline10renderLineEiiii+0x2dc>
 80141e8:	f9b1 3002 	ldrsh.w	r3, [r1, #2]
 80141ec:	429a      	cmp	r2, r3
 80141ee:	d01a      	beq.n	8014226 <_ZN8touchgfx7Outline10renderLineEiiii+0x312>
 80141f0:	88cc      	ldrh	r4, [r1, #6]
 80141f2:	888b      	ldrh	r3, [r1, #4]
 80141f4:	4323      	orrs	r3, r4
 80141f6:	d010      	beq.n	801421a <_ZN8touchgfx7Outline10renderLineEiiii+0x306>
 80141f8:	f9b1 4002 	ldrsh.w	r4, [r1, #2]
 80141fc:	2c00      	cmp	r4, #0
 80141fe:	db0c      	blt.n	801421a <_ZN8touchgfx7Outline10renderLineEiiii+0x306>
 8014200:	6ac3      	ldr	r3, [r0, #44]	; 0x2c
 8014202:	429c      	cmp	r4, r3
 8014204:	da09      	bge.n	801421a <_ZN8touchgfx7Outline10renderLineEiiii+0x306>
 8014206:	e9d0 3401 	ldrd	r3, r4, [r0, #4]
 801420a:	429c      	cmp	r4, r3
 801420c:	bf38      	it	cc
 801420e:	3108      	addcc	r1, #8
 8014210:	f104 0401 	add.w	r4, r4, #1
 8014214:	bf38      	it	cc
 8014216:	6101      	strcc	r1, [r0, #16]
 8014218:	6084      	str	r4, [r0, #8]
 801421a:	6903      	ldr	r3, [r0, #16]
 801421c:	2100      	movs	r1, #0
 801421e:	801e      	strh	r6, [r3, #0]
 8014220:	805a      	strh	r2, [r3, #2]
 8014222:	8099      	strh	r1, [r3, #4]
 8014224:	80d9      	strh	r1, [r3, #6]
 8014226:	9b06      	ldr	r3, [sp, #24]
 8014228:	4293      	cmp	r3, r2
 801422a:	f000 8082 	beq.w	8014332 <_ZN8touchgfx7Outline10renderLineEiiii+0x41e>
 801422e:	9b08      	ldr	r3, [sp, #32]
 8014230:	9c02      	ldr	r4, [sp, #8]
 8014232:	9902      	ldr	r1, [sp, #8]
 8014234:	015b      	lsls	r3, r3, #5
 8014236:	fb93 f1f1 	sdiv	r1, r3, r1
 801423a:	fb04 3311 	mls	r3, r4, r1, r3
 801423e:	2b00      	cmp	r3, #0
 8014240:	9103      	str	r1, [sp, #12]
 8014242:	9308      	str	r3, [sp, #32]
 8014244:	da04      	bge.n	8014250 <_ZN8touchgfx7Outline10renderLineEiiii+0x33c>
 8014246:	1e4b      	subs	r3, r1, #1
 8014248:	9303      	str	r3, [sp, #12]
 801424a:	9b08      	ldr	r3, [sp, #32]
 801424c:	4423      	add	r3, r4
 801424e:	9308      	str	r3, [sp, #32]
 8014250:	9b07      	ldr	r3, [sp, #28]
 8014252:	9902      	ldr	r1, [sp, #8]
 8014254:	1a5b      	subs	r3, r3, r1
 8014256:	9307      	str	r3, [sp, #28]
 8014258:	9b01      	ldr	r3, [sp, #4]
 801425a:	f1c3 0320 	rsb	r3, r3, #32
 801425e:	930e      	str	r3, [sp, #56]	; 0x38
 8014260:	990e      	ldr	r1, [sp, #56]	; 0x38
 8014262:	9b01      	ldr	r3, [sp, #4]
 8014264:	1a5b      	subs	r3, r3, r1
 8014266:	464f      	mov	r7, r9
 8014268:	930a      	str	r3, [sp, #40]	; 0x28
 801426a:	2600      	movs	r6, #0
 801426c:	e9dd 3107 	ldrd	r3, r1, [sp, #28]
 8014270:	185b      	adds	r3, r3, r1
 8014272:	bf58      	it	pl
 8014274:	9902      	ldrpl	r1, [sp, #8]
 8014276:	9307      	str	r3, [sp, #28]
 8014278:	bf5d      	ittte	pl
 801427a:	1a5b      	subpl	r3, r3, r1
 801427c:	9307      	strpl	r3, [sp, #28]
 801427e:	9b03      	ldrpl	r3, [sp, #12]
 8014280:	9903      	ldrmi	r1, [sp, #12]
 8014282:	bf58      	it	pl
 8014284:	1c59      	addpl	r1, r3, #1
 8014286:	4489      	add	r9, r1
 8014288:	2a00      	cmp	r2, #0
 801428a:	ea4f 1a69 	mov.w	sl, r9, asr #5
 801428e:	db2e      	blt.n	80142ee <_ZN8touchgfx7Outline10renderLineEiiii+0x3da>
 8014290:	6ac3      	ldr	r3, [r0, #44]	; 0x2c
 8014292:	4293      	cmp	r3, r2
 8014294:	dd2b      	ble.n	80142ee <_ZN8touchgfx7Outline10renderLineEiiii+0x3da>
 8014296:	9c01      	ldr	r4, [sp, #4]
 8014298:	6905      	ldr	r5, [r0, #16]
 801429a:	46a0      	mov	r8, r4
 801429c:	9c0e      	ldr	r4, [sp, #56]	; 0x38
 801429e:	f9b5 c004 	ldrsh.w	ip, [r5, #4]
 80142a2:	f9b5 e006 	ldrsh.w	lr, [r5, #6]
 80142a6:	45a0      	cmp	r8, r4
 80142a8:	f040 814f 	bne.w	801454a <_ZN8touchgfx7Outline10renderLineEiiii+0x636>
 80142ac:	f9b5 1000 	ldrsh.w	r1, [r5]
 80142b0:	4551      	cmp	r1, sl
 80142b2:	d103      	bne.n	80142bc <_ZN8touchgfx7Outline10renderLineEiiii+0x3a8>
 80142b4:	f9b5 1002 	ldrsh.w	r1, [r5, #2]
 80142b8:	4291      	cmp	r1, r2
 80142ba:	d018      	beq.n	80142ee <_ZN8touchgfx7Outline10renderLineEiiii+0x3da>
 80142bc:	ea5c 010e 	orrs.w	r1, ip, lr
 80142c0:	d00f      	beq.n	80142e2 <_ZN8touchgfx7Outline10renderLineEiiii+0x3ce>
 80142c2:	f9b5 1002 	ldrsh.w	r1, [r5, #2]
 80142c6:	2900      	cmp	r1, #0
 80142c8:	db0b      	blt.n	80142e2 <_ZN8touchgfx7Outline10renderLineEiiii+0x3ce>
 80142ca:	428b      	cmp	r3, r1
 80142cc:	dd09      	ble.n	80142e2 <_ZN8touchgfx7Outline10renderLineEiiii+0x3ce>
 80142ce:	e9d0 3101 	ldrd	r3, r1, [r0, #4]
 80142d2:	4299      	cmp	r1, r3
 80142d4:	bf38      	it	cc
 80142d6:	3508      	addcc	r5, #8
 80142d8:	f101 0101 	add.w	r1, r1, #1
 80142dc:	bf38      	it	cc
 80142de:	6105      	strcc	r5, [r0, #16]
 80142e0:	6081      	str	r1, [r0, #8]
 80142e2:	6903      	ldr	r3, [r0, #16]
 80142e4:	f8a3 a000 	strh.w	sl, [r3]
 80142e8:	805a      	strh	r2, [r3, #2]
 80142ea:	809e      	strh	r6, [r3, #4]
 80142ec:	80de      	strh	r6, [r3, #6]
 80142ee:	9b0b      	ldr	r3, [sp, #44]	; 0x2c
 80142f0:	6901      	ldr	r1, [r0, #16]
 80142f2:	441a      	add	r2, r3
 80142f4:	88cc      	ldrh	r4, [r1, #6]
 80142f6:	888b      	ldrh	r3, [r1, #4]
 80142f8:	4323      	orrs	r3, r4
 80142fa:	d010      	beq.n	801431e <_ZN8touchgfx7Outline10renderLineEiiii+0x40a>
 80142fc:	f9b1 4002 	ldrsh.w	r4, [r1, #2]
 8014300:	2c00      	cmp	r4, #0
 8014302:	db0c      	blt.n	801431e <_ZN8touchgfx7Outline10renderLineEiiii+0x40a>
 8014304:	6ac3      	ldr	r3, [r0, #44]	; 0x2c
 8014306:	429c      	cmp	r4, r3
 8014308:	da09      	bge.n	801431e <_ZN8touchgfx7Outline10renderLineEiiii+0x40a>
 801430a:	e9d0 3401 	ldrd	r3, r4, [r0, #4]
 801430e:	429c      	cmp	r4, r3
 8014310:	bf38      	it	cc
 8014312:	3108      	addcc	r1, #8
 8014314:	f104 0401 	add.w	r4, r4, #1
 8014318:	bf38      	it	cc
 801431a:	6101      	strcc	r1, [r0, #16]
 801431c:	6084      	str	r4, [r0, #8]
 801431e:	6903      	ldr	r3, [r0, #16]
 8014320:	f8a3 a000 	strh.w	sl, [r3]
 8014324:	805a      	strh	r2, [r3, #2]
 8014326:	809e      	strh	r6, [r3, #4]
 8014328:	80de      	strh	r6, [r3, #6]
 801432a:	9b06      	ldr	r3, [sp, #24]
 801432c:	4293      	cmp	r3, r2
 801432e:	464f      	mov	r7, r9
 8014330:	d19c      	bne.n	801426c <_ZN8touchgfx7Outline10renderLineEiiii+0x358>
 8014332:	9b01      	ldr	r3, [sp, #4]
 8014334:	6907      	ldr	r7, [r0, #16]
 8014336:	f1c3 0620 	rsb	r6, r3, #32
 801433a:	9b05      	ldr	r3, [sp, #20]
 801433c:	ea4f 1e63 	mov.w	lr, r3, asr #5
 8014340:	9b04      	ldr	r3, [sp, #16]
 8014342:	429e      	cmp	r6, r3
 8014344:	f040 81cc 	bne.w	80146e0 <_ZN8touchgfx7Outline10renderLineEiiii+0x7cc>
 8014348:	f9b7 3000 	ldrsh.w	r3, [r7]
 801434c:	459e      	cmp	lr, r3
 801434e:	d104      	bne.n	801435a <_ZN8touchgfx7Outline10renderLineEiiii+0x446>
 8014350:	f9b7 3002 	ldrsh.w	r3, [r7, #2]
 8014354:	429a      	cmp	r2, r3
 8014356:	f43f ae36 	beq.w	8013fc6 <_ZN8touchgfx7Outline10renderLineEiiii+0xb2>
 801435a:	88f9      	ldrh	r1, [r7, #6]
 801435c:	88bb      	ldrh	r3, [r7, #4]
 801435e:	430b      	orrs	r3, r1
 8014360:	d010      	beq.n	8014384 <_ZN8touchgfx7Outline10renderLineEiiii+0x470>
 8014362:	f9b7 3002 	ldrsh.w	r3, [r7, #2]
 8014366:	2b00      	cmp	r3, #0
 8014368:	db0c      	blt.n	8014384 <_ZN8touchgfx7Outline10renderLineEiiii+0x470>
 801436a:	6ac1      	ldr	r1, [r0, #44]	; 0x2c
 801436c:	428b      	cmp	r3, r1
 801436e:	da09      	bge.n	8014384 <_ZN8touchgfx7Outline10renderLineEiiii+0x470>
 8014370:	e9d0 1301 	ldrd	r1, r3, [r0, #4]
 8014374:	428b      	cmp	r3, r1
 8014376:	bf38      	it	cc
 8014378:	3708      	addcc	r7, #8
 801437a:	f103 0301 	add.w	r3, r3, #1
 801437e:	bf38      	it	cc
 8014380:	6107      	strcc	r7, [r0, #16]
 8014382:	6083      	str	r3, [r0, #8]
 8014384:	6903      	ldr	r3, [r0, #16]
 8014386:	f8a3 e000 	strh.w	lr, [r3]
 801438a:	e5ff      	b.n	8013f8c <_ZN8touchgfx7Outline10renderLineEiiii+0x78>
 801438c:	6ac2      	ldr	r2, [r0, #44]	; 0x2c
 801438e:	9c03      	ldr	r4, [sp, #12]
 8014390:	42a2      	cmp	r2, r4
 8014392:	f6ff ae18 	blt.w	8013fc6 <_ZN8touchgfx7Outline10renderLineEiiii+0xb2>
 8014396:	9c06      	ldr	r4, [sp, #24]
 8014398:	42a2      	cmp	r2, r4
 801439a:	bfb8      	it	lt
 801439c:	3201      	addlt	r2, #1
 801439e:	9c08      	ldr	r4, [sp, #32]
 80143a0:	bfb8      	it	lt
 80143a2:	9206      	strlt	r2, [sp, #24]
 80143a4:	f1c3 0220 	rsb	r2, r3, #32
 80143a8:	4362      	muls	r2, r4
 80143aa:	2401      	movs	r4, #1
 80143ac:	940b      	str	r4, [sp, #44]	; 0x2c
 80143ae:	2420      	movs	r4, #32
 80143b0:	e6d5      	b.n	801415e <_ZN8touchgfx7Outline10renderLineEiiii+0x24a>
 80143b2:	f009 021f 	and.w	r2, r9, #31
 80143b6:	ea4f 1861 	mov.w	r8, r1, asr #5
 80143ba:	920c      	str	r2, [sp, #48]	; 0x30
 80143bc:	9a01      	ldr	r2, [sp, #4]
 80143be:	f8b5 e004 	ldrh.w	lr, [r5, #4]
 80143c2:	f8b5 a006 	ldrh.w	sl, [r5, #6]
 80143c6:	45b0      	cmp	r8, r6
 80143c8:	f001 011f 	and.w	r1, r1, #31
 80143cc:	eba2 0203 	sub.w	r2, r2, r3
 80143d0:	d108      	bne.n	80143e4 <_ZN8touchgfx7Outline10renderLineEiiii+0x4d0>
 80143d2:	9b0c      	ldr	r3, [sp, #48]	; 0x30
 80143d4:	4419      	add	r1, r3
 80143d6:	4496      	add	lr, r2
 80143d8:	fb02 a101 	mla	r1, r2, r1, sl
 80143dc:	f8a5 e004 	strh.w	lr, [r5, #4]
 80143e0:	80e9      	strh	r1, [r5, #6]
 80143e2:	e6f9      	b.n	80141d8 <_ZN8touchgfx7Outline10renderLineEiiii+0x2c4>
 80143e4:	2c00      	cmp	r4, #0
 80143e6:	f2c0 80a9 	blt.w	801453c <_ZN8touchgfx7Outline10renderLineEiiii+0x628>
 80143ea:	2701      	movs	r7, #1
 80143ec:	f1c1 0c20 	rsb	ip, r1, #32
 80143f0:	970a      	str	r7, [sp, #40]	; 0x28
 80143f2:	fb02 f20c 	mul.w	r2, r2, ip
 80143f6:	2720      	movs	r7, #32
 80143f8:	9709      	str	r7, [sp, #36]	; 0x24
 80143fa:	fb92 fcf4 	sdiv	ip, r2, r4
 80143fe:	9f09      	ldr	r7, [sp, #36]	; 0x24
 8014400:	fb04 221c 	mls	r2, r4, ip, r2
 8014404:	2a00      	cmp	r2, #0
 8014406:	bfb8      	it	lt
 8014408:	f10c 3cff 	addlt.w	ip, ip, #4294967295
 801440c:	4439      	add	r1, r7
 801440e:	fb0c a101 	mla	r1, ip, r1, sl
 8014412:	80e9      	strh	r1, [r5, #6]
 8014414:	44e6      	add	lr, ip
 8014416:	990a      	ldr	r1, [sp, #40]	; 0x28
 8014418:	f8a5 e004 	strh.w	lr, [r5, #4]
 801441c:	eb08 0501 	add.w	r5, r8, r1
 8014420:	6901      	ldr	r1, [r0, #16]
 8014422:	f8b1 8006 	ldrh.w	r8, [r1, #6]
 8014426:	f8b1 e004 	ldrh.w	lr, [r1, #4]
 801442a:	bfb8      	it	lt
 801442c:	1912      	addlt	r2, r2, r4
 801442e:	ea58 070e 	orrs.w	r7, r8, lr
 8014432:	d010      	beq.n	8014456 <_ZN8touchgfx7Outline10renderLineEiiii+0x542>
 8014434:	f9b1 e002 	ldrsh.w	lr, [r1, #2]
 8014438:	f1be 0f00 	cmp.w	lr, #0
 801443c:	db0b      	blt.n	8014456 <_ZN8touchgfx7Outline10renderLineEiiii+0x542>
 801443e:	6ac7      	ldr	r7, [r0, #44]	; 0x2c
 8014440:	45be      	cmp	lr, r7
 8014442:	da08      	bge.n	8014456 <_ZN8touchgfx7Outline10renderLineEiiii+0x542>
 8014444:	e9d0 7e01 	ldrd	r7, lr, [r0, #4]
 8014448:	45be      	cmp	lr, r7
 801444a:	bf3c      	itt	cc
 801444c:	3108      	addcc	r1, #8
 801444e:	6101      	strcc	r1, [r0, #16]
 8014450:	f10e 0101 	add.w	r1, lr, #1
 8014454:	6081      	str	r1, [r0, #8]
 8014456:	6901      	ldr	r1, [r0, #16]
 8014458:	f9bd 800c 	ldrsh.w	r8, [sp, #12]
 801445c:	800d      	strh	r5, [r1, #0]
 801445e:	f04f 0e00 	mov.w	lr, #0
 8014462:	42ae      	cmp	r6, r5
 8014464:	f8a1 8002 	strh.w	r8, [r1, #2]
 8014468:	f8a1 e004 	strh.w	lr, [r1, #4]
 801446c:	f8a1 e006 	strh.w	lr, [r1, #6]
 8014470:	4463      	add	r3, ip
 8014472:	d054      	beq.n	801451e <_ZN8touchgfx7Outline10renderLineEiiii+0x60a>
 8014474:	9901      	ldr	r1, [sp, #4]
 8014476:	1ac9      	subs	r1, r1, r3
 8014478:	4461      	add	r1, ip
 801447a:	0149      	lsls	r1, r1, #5
 801447c:	fb91 fef4 	sdiv	lr, r1, r4
 8014480:	fb04 111e 	mls	r1, r4, lr, r1
 8014484:	2900      	cmp	r1, #0
 8014486:	bfb8      	it	lt
 8014488:	f10e 3eff 	addlt.w	lr, lr, #4294967295
 801448c:	f10e 0701 	add.w	r7, lr, #1
 8014490:	bfb8      	it	lt
 8014492:	1909      	addlt	r1, r1, r4
 8014494:	1b12      	subs	r2, r2, r4
 8014496:	970d      	str	r7, [sp, #52]	; 0x34
 8014498:	f8d0 a010 	ldr.w	sl, [r0, #16]
 801449c:	9f0a      	ldr	r7, [sp, #40]	; 0x28
 801449e:	f8ba b004 	ldrh.w	fp, [sl, #4]
 80144a2:	1852      	adds	r2, r2, r1
 80144a4:	bf54      	ite	pl
 80144a6:	f8dd c034 	ldrpl.w	ip, [sp, #52]	; 0x34
 80144aa:	46f4      	movmi	ip, lr
 80144ac:	44e3      	add	fp, ip
 80144ae:	f8aa b004 	strh.w	fp, [sl, #4]
 80144b2:	f8ba b006 	ldrh.w	fp, [sl, #6]
 80144b6:	eb0b 1b4c 	add.w	fp, fp, ip, lsl #5
 80144ba:	f8aa b006 	strh.w	fp, [sl, #6]
 80144be:	4463      	add	r3, ip
 80144c0:	f8d0 c010 	ldr.w	ip, [r0, #16]
 80144c4:	f8bc b006 	ldrh.w	fp, [ip, #6]
 80144c8:	f8bc a004 	ldrh.w	sl, [ip, #4]
 80144cc:	bf58      	it	pl
 80144ce:	1b12      	subpl	r2, r2, r4
 80144d0:	443d      	add	r5, r7
 80144d2:	ea5b 070a 	orrs.w	r7, fp, sl
 80144d6:	d014      	beq.n	8014502 <_ZN8touchgfx7Outline10renderLineEiiii+0x5ee>
 80144d8:	f9bc a002 	ldrsh.w	sl, [ip, #2]
 80144dc:	f1ba 0f00 	cmp.w	sl, #0
 80144e0:	db0f      	blt.n	8014502 <_ZN8touchgfx7Outline10renderLineEiiii+0x5ee>
 80144e2:	6ac7      	ldr	r7, [r0, #44]	; 0x2c
 80144e4:	45ba      	cmp	sl, r7
 80144e6:	da0c      	bge.n	8014502 <_ZN8touchgfx7Outline10renderLineEiiii+0x5ee>
 80144e8:	e9d0 7a01 	ldrd	r7, sl, [r0, #4]
 80144ec:	45ba      	cmp	sl, r7
 80144ee:	bf38      	it	cc
 80144f0:	f10c 0c08 	addcc.w	ip, ip, #8
 80144f4:	f10a 0a01 	add.w	sl, sl, #1
 80144f8:	bf38      	it	cc
 80144fa:	f8c0 c010 	strcc.w	ip, [r0, #16]
 80144fe:	f8c0 a008 	str.w	sl, [r0, #8]
 8014502:	f8d0 c010 	ldr.w	ip, [r0, #16]
 8014506:	f04f 0700 	mov.w	r7, #0
 801450a:	42ae      	cmp	r6, r5
 801450c:	f8ac 5000 	strh.w	r5, [ip]
 8014510:	f8ac 8002 	strh.w	r8, [ip, #2]
 8014514:	f8ac 7004 	strh.w	r7, [ip, #4]
 8014518:	f8ac 7006 	strh.w	r7, [ip, #6]
 801451c:	d1bc      	bne.n	8014498 <_ZN8touchgfx7Outline10renderLineEiiii+0x584>
 801451e:	6904      	ldr	r4, [r0, #16]
 8014520:	9a01      	ldr	r2, [sp, #4]
 8014522:	990c      	ldr	r1, [sp, #48]	; 0x30
 8014524:	1ad3      	subs	r3, r2, r3
 8014526:	88a2      	ldrh	r2, [r4, #4]
 8014528:	441a      	add	r2, r3
 801452a:	80a2      	strh	r2, [r4, #4]
 801452c:	9a09      	ldr	r2, [sp, #36]	; 0x24
 801452e:	3120      	adds	r1, #32
 8014530:	1a89      	subs	r1, r1, r2
 8014532:	88e2      	ldrh	r2, [r4, #6]
 8014534:	fb03 2301 	mla	r3, r3, r1, r2
 8014538:	80e3      	strh	r3, [r4, #6]
 801453a:	e64d      	b.n	80141d8 <_ZN8touchgfx7Outline10renderLineEiiii+0x2c4>
 801453c:	f04f 37ff 	mov.w	r7, #4294967295
 8014540:	970a      	str	r7, [sp, #40]	; 0x28
 8014542:	434a      	muls	r2, r1
 8014544:	4264      	negs	r4, r4
 8014546:	2700      	movs	r7, #0
 8014548:	e756      	b.n	80143f8 <_ZN8touchgfx7Outline10renderLineEiiii+0x4e4>
 801454a:	ea4f 1867 	mov.w	r8, r7, asr #5
 801454e:	f009 031f 	and.w	r3, r9, #31
 8014552:	45d0      	cmp	r8, sl
 8014554:	f007 071f 	and.w	r7, r7, #31
 8014558:	930f      	str	r3, [sp, #60]	; 0x3c
 801455a:	fa1f fc8c 	uxth.w	ip, ip
 801455e:	fa1f fe8e 	uxth.w	lr, lr
 8014562:	d10a      	bne.n	801457a <_ZN8touchgfx7Outline10renderLineEiiii+0x666>
 8014564:	9b0a      	ldr	r3, [sp, #40]	; 0x28
 8014566:	449c      	add	ip, r3
 8014568:	9b0f      	ldr	r3, [sp, #60]	; 0x3c
 801456a:	f8a5 c004 	strh.w	ip, [r5, #4]
 801456e:	441f      	add	r7, r3
 8014570:	9b0a      	ldr	r3, [sp, #40]	; 0x28
 8014572:	fb03 e707 	mla	r7, r3, r7, lr
 8014576:	80ef      	strh	r7, [r5, #6]
 8014578:	e6b9      	b.n	80142ee <_ZN8touchgfx7Outline10renderLineEiiii+0x3da>
 801457a:	2900      	cmp	r1, #0
 801457c:	f2c0 80a8 	blt.w	80146d0 <_ZN8touchgfx7Outline10renderLineEiiii+0x7bc>
 8014580:	9c0a      	ldr	r4, [sp, #40]	; 0x28
 8014582:	f1c7 0320 	rsb	r3, r7, #32
 8014586:	4363      	muls	r3, r4
 8014588:	2401      	movs	r4, #1
 801458a:	940d      	str	r4, [sp, #52]	; 0x34
 801458c:	2420      	movs	r4, #32
 801458e:	940c      	str	r4, [sp, #48]	; 0x30
 8014590:	fb93 f4f1 	sdiv	r4, r3, r1
 8014594:	fb01 3b14 	mls	fp, r1, r4, r3
 8014598:	9b0c      	ldr	r3, [sp, #48]	; 0x30
 801459a:	f1bb 0f00 	cmp.w	fp, #0
 801459e:	bfb8      	it	lt
 80145a0:	f104 34ff 	addlt.w	r4, r4, #4294967295
 80145a4:	441f      	add	r7, r3
 80145a6:	fb04 e707 	mla	r7, r4, r7, lr
 80145aa:	44a4      	add	ip, r4
 80145ac:	f8a5 c004 	strh.w	ip, [r5, #4]
 80145b0:	80ef      	strh	r7, [r5, #6]
 80145b2:	f8d0 c010 	ldr.w	ip, [r0, #16]
 80145b6:	9b0d      	ldr	r3, [sp, #52]	; 0x34
 80145b8:	f8bc e006 	ldrh.w	lr, [ip, #6]
 80145bc:	f8bc 7004 	ldrh.w	r7, [ip, #4]
 80145c0:	bfb8      	it	lt
 80145c2:	448b      	addlt	fp, r1
 80145c4:	eb08 0503 	add.w	r5, r8, r3
 80145c8:	ea5e 0307 	orrs.w	r3, lr, r7
 80145cc:	d011      	beq.n	80145f2 <_ZN8touchgfx7Outline10renderLineEiiii+0x6de>
 80145ce:	f9bc e002 	ldrsh.w	lr, [ip, #2]
 80145d2:	f1be 0f00 	cmp.w	lr, #0
 80145d6:	db0c      	blt.n	80145f2 <_ZN8touchgfx7Outline10renderLineEiiii+0x6de>
 80145d8:	6ac7      	ldr	r7, [r0, #44]	; 0x2c
 80145da:	45be      	cmp	lr, r7
 80145dc:	da09      	bge.n	80145f2 <_ZN8touchgfx7Outline10renderLineEiiii+0x6de>
 80145de:	e9d0 7e01 	ldrd	r7, lr, [r0, #4]
 80145e2:	45be      	cmp	lr, r7
 80145e4:	bf3c      	itt	cc
 80145e6:	f10c 0708 	addcc.w	r7, ip, #8
 80145ea:	6107      	strcc	r7, [r0, #16]
 80145ec:	f10e 0701 	add.w	r7, lr, #1
 80145f0:	6087      	str	r7, [r0, #8]
 80145f2:	6907      	ldr	r7, [r0, #16]
 80145f4:	b213      	sxth	r3, r2
 80145f6:	9310      	str	r3, [sp, #64]	; 0x40
 80145f8:	807b      	strh	r3, [r7, #2]
 80145fa:	9b0e      	ldr	r3, [sp, #56]	; 0x38
 80145fc:	803d      	strh	r5, [r7, #0]
 80145fe:	4555      	cmp	r5, sl
 8014600:	80be      	strh	r6, [r7, #4]
 8014602:	80fe      	strh	r6, [r7, #6]
 8014604:	eb04 0c03 	add.w	ip, r4, r3
 8014608:	d051      	beq.n	80146ae <_ZN8touchgfx7Outline10renderLineEiiii+0x79a>
 801460a:	9b01      	ldr	r3, [sp, #4]
 801460c:	eba3 070c 	sub.w	r7, r3, ip
 8014610:	443c      	add	r4, r7
 8014612:	0164      	lsls	r4, r4, #5
 8014614:	fb94 f8f1 	sdiv	r8, r4, r1
 8014618:	fb01 4418 	mls	r4, r1, r8, r4
 801461c:	2c00      	cmp	r4, #0
 801461e:	bfb8      	it	lt
 8014620:	f108 38ff 	addlt.w	r8, r8, #4294967295
 8014624:	ebab 0301 	sub.w	r3, fp, r1
 8014628:	f108 0701 	add.w	r7, r8, #1
 801462c:	bfb8      	it	lt
 801462e:	1864      	addlt	r4, r4, r1
 8014630:	9309      	str	r3, [sp, #36]	; 0x24
 8014632:	9711      	str	r7, [sp, #68]	; 0x44
 8014634:	9b09      	ldr	r3, [sp, #36]	; 0x24
 8014636:	f8d0 e010 	ldr.w	lr, [r0, #16]
 801463a:	191b      	adds	r3, r3, r4
 801463c:	bf58      	it	pl
 801463e:	9f11      	ldrpl	r7, [sp, #68]	; 0x44
 8014640:	f8be b004 	ldrh.w	fp, [lr, #4]
 8014644:	9309      	str	r3, [sp, #36]	; 0x24
 8014646:	bf48      	it	mi
 8014648:	4647      	movmi	r7, r8
 801464a:	44bb      	add	fp, r7
 801464c:	f8ae b004 	strh.w	fp, [lr, #4]
 8014650:	f8be b006 	ldrh.w	fp, [lr, #6]
 8014654:	eb0b 1b47 	add.w	fp, fp, r7, lsl #5
 8014658:	f8ae b006 	strh.w	fp, [lr, #6]
 801465c:	f8d0 e010 	ldr.w	lr, [r0, #16]
 8014660:	44bc      	add	ip, r7
 8014662:	9f0d      	ldr	r7, [sp, #52]	; 0x34
 8014664:	f8be b006 	ldrh.w	fp, [lr, #6]
 8014668:	443d      	add	r5, r7
 801466a:	f8be 7004 	ldrh.w	r7, [lr, #4]
 801466e:	bf5c      	itt	pl
 8014670:	1a5b      	subpl	r3, r3, r1
 8014672:	9309      	strpl	r3, [sp, #36]	; 0x24
 8014674:	ea5b 0307 	orrs.w	r3, fp, r7
 8014678:	d011      	beq.n	801469e <_ZN8touchgfx7Outline10renderLineEiiii+0x78a>
 801467a:	f9be b002 	ldrsh.w	fp, [lr, #2]
 801467e:	f1bb 0f00 	cmp.w	fp, #0
 8014682:	db0c      	blt.n	801469e <_ZN8touchgfx7Outline10renderLineEiiii+0x78a>
 8014684:	6ac7      	ldr	r7, [r0, #44]	; 0x2c
 8014686:	45bb      	cmp	fp, r7
 8014688:	da09      	bge.n	801469e <_ZN8touchgfx7Outline10renderLineEiiii+0x78a>
 801468a:	e9d0 7b01 	ldrd	r7, fp, [r0, #4]
 801468e:	45bb      	cmp	fp, r7
 8014690:	bf3c      	itt	cc
 8014692:	f10e 0708 	addcc.w	r7, lr, #8
 8014696:	6107      	strcc	r7, [r0, #16]
 8014698:	f10b 0701 	add.w	r7, fp, #1
 801469c:	6087      	str	r7, [r0, #8]
 801469e:	6907      	ldr	r7, [r0, #16]
 80146a0:	9b10      	ldr	r3, [sp, #64]	; 0x40
 80146a2:	803d      	strh	r5, [r7, #0]
 80146a4:	4555      	cmp	r5, sl
 80146a6:	807b      	strh	r3, [r7, #2]
 80146a8:	80be      	strh	r6, [r7, #4]
 80146aa:	80fe      	strh	r6, [r7, #6]
 80146ac:	d1c2      	bne.n	8014634 <_ZN8touchgfx7Outline10renderLineEiiii+0x720>
 80146ae:	9b01      	ldr	r3, [sp, #4]
 80146b0:	9f0f      	ldr	r7, [sp, #60]	; 0x3c
 80146b2:	eba3 0c0c 	sub.w	ip, r3, ip
 80146b6:	6903      	ldr	r3, [r0, #16]
 80146b8:	8899      	ldrh	r1, [r3, #4]
 80146ba:	4461      	add	r1, ip
 80146bc:	8099      	strh	r1, [r3, #4]
 80146be:	990c      	ldr	r1, [sp, #48]	; 0x30
 80146c0:	3720      	adds	r7, #32
 80146c2:	1a7f      	subs	r7, r7, r1
 80146c4:	88d9      	ldrh	r1, [r3, #6]
 80146c6:	fb0c 1c07 	mla	ip, ip, r7, r1
 80146ca:	f8a3 c006 	strh.w	ip, [r3, #6]
 80146ce:	e60e      	b.n	80142ee <_ZN8touchgfx7Outline10renderLineEiiii+0x3da>
 80146d0:	9b0a      	ldr	r3, [sp, #40]	; 0x28
 80146d2:	f04f 34ff 	mov.w	r4, #4294967295
 80146d6:	940d      	str	r4, [sp, #52]	; 0x34
 80146d8:	437b      	muls	r3, r7
 80146da:	4249      	negs	r1, r1
 80146dc:	2400      	movs	r4, #0
 80146de:	e756      	b.n	801458e <_ZN8touchgfx7Outline10renderLineEiiii+0x67a>
 80146e0:	9905      	ldr	r1, [sp, #20]
 80146e2:	f8b7 8004 	ldrh.w	r8, [r7, #4]
 80146e6:	f8b7 a006 	ldrh.w	sl, [r7, #6]
 80146ea:	f001 011f 	and.w	r1, r1, #31
 80146ee:	ea4f 1b69 	mov.w	fp, r9, asr #5
 80146f2:	9102      	str	r1, [sp, #8]
 80146f4:	9904      	ldr	r1, [sp, #16]
 80146f6:	45f3      	cmp	fp, lr
 80146f8:	f009 0c1f 	and.w	ip, r9, #31
 80146fc:	eba1 0406 	sub.w	r4, r1, r6
 8014700:	d108      	bne.n	8014714 <_ZN8touchgfx7Outline10renderLineEiiii+0x800>
 8014702:	9b02      	ldr	r3, [sp, #8]
 8014704:	449c      	add	ip, r3
 8014706:	44a0      	add	r8, r4
 8014708:	fb04 a40c 	mla	r4, r4, ip, sl
 801470c:	f8a7 8004 	strh.w	r8, [r7, #4]
 8014710:	80fc      	strh	r4, [r7, #6]
 8014712:	e458      	b.n	8013fc6 <_ZN8touchgfx7Outline10renderLineEiiii+0xb2>
 8014714:	9905      	ldr	r1, [sp, #20]
 8014716:	ebb1 0109 	subs.w	r1, r1, r9
 801471a:	bf5b      	ittet	pl
 801471c:	f1cc 0520 	rsbpl	r5, ip, #32
 8014720:	436c      	mulpl	r4, r5
 8014722:	2500      	movmi	r5, #0
 8014724:	2520      	movpl	r5, #32
 8014726:	bf44      	itt	mi
 8014728:	fb04 f40c 	mulmi.w	r4, r4, ip
 801472c:	4249      	negmi	r1, r1
 801472e:	9501      	str	r5, [sp, #4]
 8014730:	9b01      	ldr	r3, [sp, #4]
 8014732:	fb94 f5f1 	sdiv	r5, r4, r1
 8014736:	fb01 4415 	mls	r4, r1, r5, r4
 801473a:	bf54      	ite	pl
 801473c:	f04f 0901 	movpl.w	r9, #1
 8014740:	f04f 39ff 	movmi.w	r9, #4294967295
 8014744:	2c00      	cmp	r4, #0
 8014746:	bfb8      	it	lt
 8014748:	f105 35ff 	addlt.w	r5, r5, #4294967295
 801474c:	449c      	add	ip, r3
 801474e:	44a8      	add	r8, r5
 8014750:	fb05 ac0c 	mla	ip, r5, ip, sl
 8014754:	f8a7 8004 	strh.w	r8, [r7, #4]
 8014758:	f8a7 c006 	strh.w	ip, [r7, #6]
 801475c:	f8d0 c010 	ldr.w	ip, [r0, #16]
 8014760:	f8bc 8006 	ldrh.w	r8, [ip, #6]
 8014764:	f8bc 7004 	ldrh.w	r7, [ip, #4]
 8014768:	bfb8      	it	lt
 801476a:	1864      	addlt	r4, r4, r1
 801476c:	ea58 0707 	orrs.w	r7, r8, r7
 8014770:	eb0b 0309 	add.w	r3, fp, r9
 8014774:	d011      	beq.n	801479a <_ZN8touchgfx7Outline10renderLineEiiii+0x886>
 8014776:	f9bc 8002 	ldrsh.w	r8, [ip, #2]
 801477a:	f1b8 0f00 	cmp.w	r8, #0
 801477e:	db0c      	blt.n	801479a <_ZN8touchgfx7Outline10renderLineEiiii+0x886>
 8014780:	6ac7      	ldr	r7, [r0, #44]	; 0x2c
 8014782:	45b8      	cmp	r8, r7
 8014784:	da09      	bge.n	801479a <_ZN8touchgfx7Outline10renderLineEiiii+0x886>
 8014786:	e9d0 7801 	ldrd	r7, r8, [r0, #4]
 801478a:	45b8      	cmp	r8, r7
 801478c:	bf3c      	itt	cc
 801478e:	f10c 0708 	addcc.w	r7, ip, #8
 8014792:	6107      	strcc	r7, [r0, #16]
 8014794:	f108 0701 	add.w	r7, r8, #1
 8014798:	6087      	str	r7, [r0, #8]
 801479a:	6907      	ldr	r7, [r0, #16]
 801479c:	f04f 0c00 	mov.w	ip, #0
 80147a0:	b212      	sxth	r2, r2
 80147a2:	459e      	cmp	lr, r3
 80147a4:	803b      	strh	r3, [r7, #0]
 80147a6:	807a      	strh	r2, [r7, #2]
 80147a8:	f8a7 c004 	strh.w	ip, [r7, #4]
 80147ac:	f8a7 c006 	strh.w	ip, [r7, #6]
 80147b0:	442e      	add	r6, r5
 80147b2:	d04d      	beq.n	8014850 <_ZN8touchgfx7Outline10renderLineEiiii+0x93c>
 80147b4:	9f04      	ldr	r7, [sp, #16]
 80147b6:	1bbf      	subs	r7, r7, r6
 80147b8:	443d      	add	r5, r7
 80147ba:	016d      	lsls	r5, r5, #5
 80147bc:	fb95 f8f1 	sdiv	r8, r5, r1
 80147c0:	fb01 5518 	mls	r5, r1, r8, r5
 80147c4:	4565      	cmp	r5, ip
 80147c6:	bfb8      	it	lt
 80147c8:	f108 38ff 	addlt.w	r8, r8, #4294967295
 80147cc:	f108 0701 	add.w	r7, r8, #1
 80147d0:	bfb8      	it	lt
 80147d2:	186d      	addlt	r5, r5, r1
 80147d4:	1a64      	subs	r4, r4, r1
 80147d6:	9703      	str	r7, [sp, #12]
 80147d8:	f04f 0a00 	mov.w	sl, #0
 80147dc:	f8d0 c010 	ldr.w	ip, [r0, #16]
 80147e0:	1964      	adds	r4, r4, r5
 80147e2:	bf58      	it	pl
 80147e4:	9f03      	ldrpl	r7, [sp, #12]
 80147e6:	f8bc b004 	ldrh.w	fp, [ip, #4]
 80147ea:	bf48      	it	mi
 80147ec:	4647      	movmi	r7, r8
 80147ee:	44bb      	add	fp, r7
 80147f0:	f8ac b004 	strh.w	fp, [ip, #4]
 80147f4:	f8bc b006 	ldrh.w	fp, [ip, #6]
 80147f8:	eb0b 1b47 	add.w	fp, fp, r7, lsl #5
 80147fc:	f8ac b006 	strh.w	fp, [ip, #6]
 8014800:	f8d0 c010 	ldr.w	ip, [r0, #16]
 8014804:	443e      	add	r6, r7
 8014806:	f8bc b006 	ldrh.w	fp, [ip, #6]
 801480a:	f8bc 7004 	ldrh.w	r7, [ip, #4]
 801480e:	bf58      	it	pl
 8014810:	1a64      	subpl	r4, r4, r1
 8014812:	ea5b 0707 	orrs.w	r7, fp, r7
 8014816:	444b      	add	r3, r9
 8014818:	d011      	beq.n	801483e <_ZN8touchgfx7Outline10renderLineEiiii+0x92a>
 801481a:	f9bc b002 	ldrsh.w	fp, [ip, #2]
 801481e:	f1bb 0f00 	cmp.w	fp, #0
 8014822:	db0c      	blt.n	801483e <_ZN8touchgfx7Outline10renderLineEiiii+0x92a>
 8014824:	6ac7      	ldr	r7, [r0, #44]	; 0x2c
 8014826:	45bb      	cmp	fp, r7
 8014828:	da09      	bge.n	801483e <_ZN8touchgfx7Outline10renderLineEiiii+0x92a>
 801482a:	e9d0 7b01 	ldrd	r7, fp, [r0, #4]
 801482e:	45bb      	cmp	fp, r7
 8014830:	bf3c      	itt	cc
 8014832:	f10c 0708 	addcc.w	r7, ip, #8
 8014836:	6107      	strcc	r7, [r0, #16]
 8014838:	f10b 0701 	add.w	r7, fp, #1
 801483c:	6087      	str	r7, [r0, #8]
 801483e:	6907      	ldr	r7, [r0, #16]
 8014840:	459e      	cmp	lr, r3
 8014842:	803b      	strh	r3, [r7, #0]
 8014844:	807a      	strh	r2, [r7, #2]
 8014846:	f8a7 a004 	strh.w	sl, [r7, #4]
 801484a:	f8a7 a006 	strh.w	sl, [r7, #6]
 801484e:	d1c5      	bne.n	80147dc <_ZN8touchgfx7Outline10renderLineEiiii+0x8c8>
 8014850:	9b04      	ldr	r3, [sp, #16]
 8014852:	1b9e      	subs	r6, r3, r6
 8014854:	6903      	ldr	r3, [r0, #16]
 8014856:	889a      	ldrh	r2, [r3, #4]
 8014858:	4432      	add	r2, r6
 801485a:	809a      	strh	r2, [r3, #4]
 801485c:	9a02      	ldr	r2, [sp, #8]
 801485e:	f102 0c20 	add.w	ip, r2, #32
 8014862:	9a01      	ldr	r2, [sp, #4]
 8014864:	ebac 0c02 	sub.w	ip, ip, r2
 8014868:	88da      	ldrh	r2, [r3, #6]
 801486a:	fb06 260c 	mla	r6, r6, ip, r2
 801486e:	80de      	strh	r6, [r3, #6]
 8014870:	f7ff bba9 	b.w	8013fc6 <_ZN8touchgfx7Outline10renderLineEiiii+0xb2>

08014874 <_ZN8touchgfx7Outline6lineToEii>:
 8014874:	6a43      	ldr	r3, [r0, #36]	; 0x24
 8014876:	079b      	lsls	r3, r3, #30
 8014878:	b5f7      	push	{r0, r1, r2, r4, r5, r6, r7, lr}
 801487a:	460e      	mov	r6, r1
 801487c:	4615      	mov	r5, r2
 801487e:	d511      	bpl.n	80148a4 <_ZN8touchgfx7Outline6lineToEii+0x30>
 8014880:	e9d0 1205 	ldrd	r1, r2, [r0, #20]
 8014884:	ea86 0701 	eor.w	r7, r6, r1
 8014888:	ea85 0302 	eor.w	r3, r5, r2
 801488c:	433b      	orrs	r3, r7
 801488e:	d009      	beq.n	80148a4 <_ZN8touchgfx7Outline6lineToEii+0x30>
 8014890:	4633      	mov	r3, r6
 8014892:	9500      	str	r5, [sp, #0]
 8014894:	f7ff fb3e 	bl	8013f14 <_ZN8touchgfx7Outline10renderLineEiiii>
 8014898:	6a43      	ldr	r3, [r0, #36]	; 0x24
 801489a:	e9c0 6505 	strd	r6, r5, [r0, #20]
 801489e:	f043 0301 	orr.w	r3, r3, #1
 80148a2:	6243      	str	r3, [r0, #36]	; 0x24
 80148a4:	b003      	add	sp, #12
 80148a6:	bdf0      	pop	{r4, r5, r6, r7, pc}

080148a8 <_ZN8touchgfx7Outline6moveToEii>:
 80148a8:	b5f8      	push	{r3, r4, r5, r6, r7, lr}
 80148aa:	6a43      	ldr	r3, [r0, #36]	; 0x24
 80148ac:	4615      	mov	r5, r2
 80148ae:	079a      	lsls	r2, r3, #30
 80148b0:	4604      	mov	r4, r0
 80148b2:	460e      	mov	r6, r1
 80148b4:	d401      	bmi.n	80148ba <_ZN8touchgfx7Outline6moveToEii+0x12>
 80148b6:	f7ff faf9 	bl	8013eac <_ZN8touchgfx7Outline5resetEv>
 80148ba:	6a63      	ldr	r3, [r4, #36]	; 0x24
 80148bc:	07db      	lsls	r3, r3, #31
 80148be:	d504      	bpl.n	80148ca <_ZN8touchgfx7Outline6moveToEii+0x22>
 80148c0:	e9d4 1207 	ldrd	r1, r2, [r4, #28]
 80148c4:	4620      	mov	r0, r4
 80148c6:	f7ff ffd5 	bl	8014874 <_ZN8touchgfx7Outline6lineToEii>
 80148ca:	6923      	ldr	r3, [r4, #16]
 80148cc:	f9b3 2000 	ldrsh.w	r2, [r3]
 80148d0:	1170      	asrs	r0, r6, #5
 80148d2:	4290      	cmp	r0, r2
 80148d4:	ea4f 1165 	mov.w	r1, r5, asr #5
 80148d8:	d103      	bne.n	80148e2 <_ZN8touchgfx7Outline6moveToEii+0x3a>
 80148da:	f9b3 2002 	ldrsh.w	r2, [r3, #2]
 80148de:	4291      	cmp	r1, r2
 80148e0:	d01a      	beq.n	8014918 <_ZN8touchgfx7Outline6moveToEii+0x70>
 80148e2:	88df      	ldrh	r7, [r3, #6]
 80148e4:	889a      	ldrh	r2, [r3, #4]
 80148e6:	433a      	orrs	r2, r7
 80148e8:	d010      	beq.n	801490c <_ZN8touchgfx7Outline6moveToEii+0x64>
 80148ea:	f9b3 2002 	ldrsh.w	r2, [r3, #2]
 80148ee:	2a00      	cmp	r2, #0
 80148f0:	db0c      	blt.n	801490c <_ZN8touchgfx7Outline6moveToEii+0x64>
 80148f2:	6ae7      	ldr	r7, [r4, #44]	; 0x2c
 80148f4:	42ba      	cmp	r2, r7
 80148f6:	da09      	bge.n	801490c <_ZN8touchgfx7Outline6moveToEii+0x64>
 80148f8:	e9d4 7201 	ldrd	r7, r2, [r4, #4]
 80148fc:	42ba      	cmp	r2, r7
 80148fe:	bf38      	it	cc
 8014900:	3308      	addcc	r3, #8
 8014902:	f102 0201 	add.w	r2, r2, #1
 8014906:	bf38      	it	cc
 8014908:	6123      	strcc	r3, [r4, #16]
 801490a:	60a2      	str	r2, [r4, #8]
 801490c:	6923      	ldr	r3, [r4, #16]
 801490e:	2200      	movs	r2, #0
 8014910:	8018      	strh	r0, [r3, #0]
 8014912:	8059      	strh	r1, [r3, #2]
 8014914:	809a      	strh	r2, [r3, #4]
 8014916:	80da      	strh	r2, [r3, #6]
 8014918:	6166      	str	r6, [r4, #20]
 801491a:	e9c4 5606 	strd	r5, r6, [r4, #24]
 801491e:	6225      	str	r5, [r4, #32]
 8014920:	bdf8      	pop	{r3, r4, r5, r6, r7, pc}

08014922 <_ZN8touchgfx7Outline10qsortCellsEPNS_4CellEj>:
 8014922:	e92d 47f0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, lr}
 8014926:	b0d0      	sub	sp, #320	; 0x140
 8014928:	466c      	mov	r4, sp
 801492a:	eb00 01c1 	add.w	r1, r0, r1, lsl #3
 801492e:	4627      	mov	r7, r4
 8014930:	1a0d      	subs	r5, r1, r0
 8014932:	2d48      	cmp	r5, #72	; 0x48
 8014934:	f100 0308 	add.w	r3, r0, #8
 8014938:	f340 80d5 	ble.w	8014ae6 <_ZN8touchgfx7Outline10qsortCellsEPNS_4CellEj+0x1c4>
 801493c:	112d      	asrs	r5, r5, #4
 801493e:	eb00 02c5 	add.w	r2, r0, r5, lsl #3
 8014942:	f9b0 9000 	ldrsh.w	r9, [r0]
 8014946:	6816      	ldr	r6, [r2, #0]
 8014948:	f9b0 8002 	ldrsh.w	r8, [r0, #2]
 801494c:	6006      	str	r6, [r0, #0]
 801494e:	6856      	ldr	r6, [r2, #4]
 8014950:	f9b0 c006 	ldrsh.w	ip, [r0, #6]
 8014954:	f9b0 e004 	ldrsh.w	lr, [r0, #4]
 8014958:	6046      	str	r6, [r0, #4]
 801495a:	f820 9035 	strh.w	r9, [r0, r5, lsl #3]
 801495e:	f8a2 8002 	strh.w	r8, [r2, #2]
 8014962:	f8a2 e004 	strh.w	lr, [r2, #4]
 8014966:	f8a2 c006 	strh.w	ip, [r2, #6]
 801496a:	f931 5c06 	ldrsh.w	r5, [r1, #-6]
 801496e:	f9b0 c00a 	ldrsh.w	ip, [r0, #10]
 8014972:	4565      	cmp	r5, ip
 8014974:	f1a1 0208 	sub.w	r2, r1, #8
 8014978:	db06      	blt.n	8014988 <_ZN8touchgfx7Outline10qsortCellsEPNS_4CellEj+0x66>
 801497a:	d119      	bne.n	80149b0 <_ZN8touchgfx7Outline10qsortCellsEPNS_4CellEj+0x8e>
 801497c:	f9b0 6008 	ldrsh.w	r6, [r0, #8]
 8014980:	f931 5c08 	ldrsh.w	r5, [r1, #-8]
 8014984:	42ae      	cmp	r6, r5
 8014986:	dd13      	ble.n	80149b0 <_ZN8touchgfx7Outline10qsortCellsEPNS_4CellEj+0x8e>
 8014988:	460e      	mov	r6, r1
 801498a:	f9b0 9008 	ldrsh.w	r9, [r0, #8]
 801498e:	f856 5d08 	ldr.w	r5, [r6, #-8]!
 8014992:	f9b0 800c 	ldrsh.w	r8, [r0, #12]
 8014996:	f9b0 e00e 	ldrsh.w	lr, [r0, #14]
 801499a:	601d      	str	r5, [r3, #0]
 801499c:	6875      	ldr	r5, [r6, #4]
 801499e:	605d      	str	r5, [r3, #4]
 80149a0:	f821 9c08 	strh.w	r9, [r1, #-8]
 80149a4:	f821 cc06 	strh.w	ip, [r1, #-6]
 80149a8:	f821 8c04 	strh.w	r8, [r1, #-4]
 80149ac:	f821 ec02 	strh.w	lr, [r1, #-2]
 80149b0:	f9b0 6002 	ldrsh.w	r6, [r0, #2]
 80149b4:	f9b0 500a 	ldrsh.w	r5, [r0, #10]
 80149b8:	42ae      	cmp	r6, r5
 80149ba:	db06      	blt.n	80149ca <_ZN8touchgfx7Outline10qsortCellsEPNS_4CellEj+0xa8>
 80149bc:	d116      	bne.n	80149ec <_ZN8touchgfx7Outline10qsortCellsEPNS_4CellEj+0xca>
 80149be:	f9b0 c000 	ldrsh.w	ip, [r0]
 80149c2:	f9b0 5008 	ldrsh.w	r5, [r0, #8]
 80149c6:	45ac      	cmp	ip, r5
 80149c8:	da10      	bge.n	80149ec <_ZN8touchgfx7Outline10qsortCellsEPNS_4CellEj+0xca>
 80149ca:	681d      	ldr	r5, [r3, #0]
 80149cc:	f9b0 8000 	ldrsh.w	r8, [r0]
 80149d0:	6005      	str	r5, [r0, #0]
 80149d2:	685d      	ldr	r5, [r3, #4]
 80149d4:	f9b0 e004 	ldrsh.w	lr, [r0, #4]
 80149d8:	f9b0 c006 	ldrsh.w	ip, [r0, #6]
 80149dc:	f8a0 8008 	strh.w	r8, [r0, #8]
 80149e0:	6045      	str	r5, [r0, #4]
 80149e2:	8146      	strh	r6, [r0, #10]
 80149e4:	f8a0 e00c 	strh.w	lr, [r0, #12]
 80149e8:	f8a0 c00e 	strh.w	ip, [r0, #14]
 80149ec:	f931 5c06 	ldrsh.w	r5, [r1, #-6]
 80149f0:	f9b0 c002 	ldrsh.w	ip, [r0, #2]
 80149f4:	4565      	cmp	r5, ip
 80149f6:	db06      	blt.n	8014a06 <_ZN8touchgfx7Outline10qsortCellsEPNS_4CellEj+0xe4>
 80149f8:	d119      	bne.n	8014a2e <_ZN8touchgfx7Outline10qsortCellsEPNS_4CellEj+0x10c>
 80149fa:	f931 6c08 	ldrsh.w	r6, [r1, #-8]
 80149fe:	f9b0 5000 	ldrsh.w	r5, [r0]
 8014a02:	42ae      	cmp	r6, r5
 8014a04:	da13      	bge.n	8014a2e <_ZN8touchgfx7Outline10qsortCellsEPNS_4CellEj+0x10c>
 8014a06:	460e      	mov	r6, r1
 8014a08:	f9b0 9000 	ldrsh.w	r9, [r0]
 8014a0c:	f856 5d08 	ldr.w	r5, [r6, #-8]!
 8014a10:	6005      	str	r5, [r0, #0]
 8014a12:	f9b0 8004 	ldrsh.w	r8, [r0, #4]
 8014a16:	f9b0 e006 	ldrsh.w	lr, [r0, #6]
 8014a1a:	6875      	ldr	r5, [r6, #4]
 8014a1c:	6045      	str	r5, [r0, #4]
 8014a1e:	f821 9c08 	strh.w	r9, [r1, #-8]
 8014a22:	f821 cc06 	strh.w	ip, [r1, #-6]
 8014a26:	f821 8c04 	strh.w	r8, [r1, #-4]
 8014a2a:	f821 ec02 	strh.w	lr, [r1, #-2]
 8014a2e:	3308      	adds	r3, #8
 8014a30:	f9b0 c002 	ldrsh.w	ip, [r0, #2]
 8014a34:	f9b3 e002 	ldrsh.w	lr, [r3, #2]
 8014a38:	45e6      	cmp	lr, ip
 8014a3a:	dbf8      	blt.n	8014a2e <_ZN8touchgfx7Outline10qsortCellsEPNS_4CellEj+0x10c>
 8014a3c:	d105      	bne.n	8014a4a <_ZN8touchgfx7Outline10qsortCellsEPNS_4CellEj+0x128>
 8014a3e:	f9b3 6000 	ldrsh.w	r6, [r3]
 8014a42:	f9b0 5000 	ldrsh.w	r5, [r0]
 8014a46:	42ae      	cmp	r6, r5
 8014a48:	dbf1      	blt.n	8014a2e <_ZN8touchgfx7Outline10qsortCellsEPNS_4CellEj+0x10c>
 8014a4a:	4615      	mov	r5, r2
 8014a4c:	3a08      	subs	r2, #8
 8014a4e:	f9b2 6002 	ldrsh.w	r6, [r2, #2]
 8014a52:	45b4      	cmp	ip, r6
 8014a54:	dbf9      	blt.n	8014a4a <_ZN8touchgfx7Outline10qsortCellsEPNS_4CellEj+0x128>
 8014a56:	d105      	bne.n	8014a64 <_ZN8touchgfx7Outline10qsortCellsEPNS_4CellEj+0x142>
 8014a58:	f9b0 8000 	ldrsh.w	r8, [r0]
 8014a5c:	f9b2 6000 	ldrsh.w	r6, [r2]
 8014a60:	45b0      	cmp	r8, r6
 8014a62:	dbf2      	blt.n	8014a4a <_ZN8touchgfx7Outline10qsortCellsEPNS_4CellEj+0x128>
 8014a64:	4293      	cmp	r3, r2
 8014a66:	f1a5 0608 	sub.w	r6, r5, #8
 8014a6a:	d816      	bhi.n	8014a9a <_ZN8touchgfx7Outline10qsortCellsEPNS_4CellEj+0x178>
 8014a6c:	f8d6 c000 	ldr.w	ip, [r6]
 8014a70:	f9b3 a000 	ldrsh.w	sl, [r3]
 8014a74:	f8c3 c000 	str.w	ip, [r3]
 8014a78:	f9b3 9004 	ldrsh.w	r9, [r3, #4]
 8014a7c:	f9b3 8006 	ldrsh.w	r8, [r3, #6]
 8014a80:	f8d6 c004 	ldr.w	ip, [r6, #4]
 8014a84:	f8c3 c004 	str.w	ip, [r3, #4]
 8014a88:	f825 ac08 	strh.w	sl, [r5, #-8]
 8014a8c:	f825 ec06 	strh.w	lr, [r5, #-6]
 8014a90:	f825 9c04 	strh.w	r9, [r5, #-4]
 8014a94:	f825 8c02 	strh.w	r8, [r5, #-2]
 8014a98:	e7c9      	b.n	8014a2e <_ZN8touchgfx7Outline10qsortCellsEPNS_4CellEj+0x10c>
 8014a9a:	f8d6 e000 	ldr.w	lr, [r6]
 8014a9e:	f9b0 a000 	ldrsh.w	sl, [r0]
 8014aa2:	f8c0 e000 	str.w	lr, [r0]
 8014aa6:	f9b0 9004 	ldrsh.w	r9, [r0, #4]
 8014aaa:	f9b0 8006 	ldrsh.w	r8, [r0, #6]
 8014aae:	f8d6 e004 	ldr.w	lr, [r6, #4]
 8014ab2:	f8c0 e004 	str.w	lr, [r0, #4]
 8014ab6:	f825 ac08 	strh.w	sl, [r5, #-8]
 8014aba:	f825 cc06 	strh.w	ip, [r5, #-6]
 8014abe:	f825 9c04 	strh.w	r9, [r5, #-4]
 8014ac2:	f825 8c02 	strh.w	r8, [r5, #-2]
 8014ac6:	1acd      	subs	r5, r1, r3
 8014ac8:	1a16      	subs	r6, r2, r0
 8014aca:	10ed      	asrs	r5, r5, #3
 8014acc:	ebb5 0fe6 	cmp.w	r5, r6, asr #3
 8014ad0:	bfb5      	itete	lt
 8014ad2:	e9c4 0200 	strdlt	r0, r2, [r4]
 8014ad6:	e9c4 3100 	strdge	r3, r1, [r4]
 8014ada:	460a      	movlt	r2, r1
 8014adc:	4603      	movge	r3, r0
 8014ade:	3408      	adds	r4, #8
 8014ae0:	4618      	mov	r0, r3
 8014ae2:	4611      	mov	r1, r2
 8014ae4:	e724      	b.n	8014930 <_ZN8touchgfx7Outline10qsortCellsEPNS_4CellEj+0xe>
 8014ae6:	4299      	cmp	r1, r3
 8014ae8:	d928      	bls.n	8014b3c <_ZN8touchgfx7Outline10qsortCellsEPNS_4CellEj+0x21a>
 8014aea:	f1a3 0210 	sub.w	r2, r3, #16
 8014aee:	f9b2 c012 	ldrsh.w	ip, [r2, #18]
 8014af2:	f9b2 500a 	ldrsh.w	r5, [r2, #10]
 8014af6:	45ac      	cmp	ip, r5
 8014af8:	db06      	blt.n	8014b08 <_ZN8touchgfx7Outline10qsortCellsEPNS_4CellEj+0x1e6>
 8014afa:	d11d      	bne.n	8014b38 <_ZN8touchgfx7Outline10qsortCellsEPNS_4CellEj+0x216>
 8014afc:	f9b2 6010 	ldrsh.w	r6, [r2, #16]
 8014b00:	f9b2 5008 	ldrsh.w	r5, [r2, #8]
 8014b04:	42ae      	cmp	r6, r5
 8014b06:	da17      	bge.n	8014b38 <_ZN8touchgfx7Outline10qsortCellsEPNS_4CellEj+0x216>
 8014b08:	4615      	mov	r5, r2
 8014b0a:	f9b2 9010 	ldrsh.w	r9, [r2, #16]
 8014b0e:	f855 6f08 	ldr.w	r6, [r5, #8]!
 8014b12:	6116      	str	r6, [r2, #16]
 8014b14:	686e      	ldr	r6, [r5, #4]
 8014b16:	f9b2 8014 	ldrsh.w	r8, [r2, #20]
 8014b1a:	f9b2 e016 	ldrsh.w	lr, [r2, #22]
 8014b1e:	f8a2 9008 	strh.w	r9, [r2, #8]
 8014b22:	42a8      	cmp	r0, r5
 8014b24:	6156      	str	r6, [r2, #20]
 8014b26:	f8a2 c00a 	strh.w	ip, [r2, #10]
 8014b2a:	f8a2 800c 	strh.w	r8, [r2, #12]
 8014b2e:	f8a2 e00e 	strh.w	lr, [r2, #14]
 8014b32:	f1a2 0208 	sub.w	r2, r2, #8
 8014b36:	d1da      	bne.n	8014aee <_ZN8touchgfx7Outline10qsortCellsEPNS_4CellEj+0x1cc>
 8014b38:	3308      	adds	r3, #8
 8014b3a:	e7d4      	b.n	8014ae6 <_ZN8touchgfx7Outline10qsortCellsEPNS_4CellEj+0x1c4>
 8014b3c:	42bc      	cmp	r4, r7
 8014b3e:	d903      	bls.n	8014b48 <_ZN8touchgfx7Outline10qsortCellsEPNS_4CellEj+0x226>
 8014b40:	e954 0102 	ldrd	r0, r1, [r4, #-8]
 8014b44:	3c08      	subs	r4, #8
 8014b46:	e6f3      	b.n	8014930 <_ZN8touchgfx7Outline10qsortCellsEPNS_4CellEj+0xe>
 8014b48:	b050      	add	sp, #320	; 0x140
 8014b4a:	e8bd 87f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, pc}

08014b4e <_ZN8touchgfx7Outline24closeOutlineAndSortCellsEv>:
 8014b4e:	b510      	push	{r4, lr}
 8014b50:	6a43      	ldr	r3, [r0, #36]	; 0x24
 8014b52:	07da      	lsls	r2, r3, #31
 8014b54:	4604      	mov	r4, r0
 8014b56:	d507      	bpl.n	8014b68 <_ZN8touchgfx7Outline24closeOutlineAndSortCellsEv+0x1a>
 8014b58:	e9d0 1207 	ldrd	r1, r2, [r0, #28]
 8014b5c:	f7ff fe8a 	bl	8014874 <_ZN8touchgfx7Outline6lineToEii>
 8014b60:	6a43      	ldr	r3, [r0, #36]	; 0x24
 8014b62:	f023 0301 	bic.w	r3, r3, #1
 8014b66:	6243      	str	r3, [r0, #36]	; 0x24
 8014b68:	6a63      	ldr	r3, [r4, #36]	; 0x24
 8014b6a:	079b      	lsls	r3, r3, #30
 8014b6c:	d521      	bpl.n	8014bb2 <_ZN8touchgfx7Outline24closeOutlineAndSortCellsEv+0x64>
 8014b6e:	6923      	ldr	r3, [r4, #16]
 8014b70:	88d9      	ldrh	r1, [r3, #6]
 8014b72:	889a      	ldrh	r2, [r3, #4]
 8014b74:	430a      	orrs	r2, r1
 8014b76:	d010      	beq.n	8014b9a <_ZN8touchgfx7Outline24closeOutlineAndSortCellsEv+0x4c>
 8014b78:	f9b3 2002 	ldrsh.w	r2, [r3, #2]
 8014b7c:	2a00      	cmp	r2, #0
 8014b7e:	db0c      	blt.n	8014b9a <_ZN8touchgfx7Outline24closeOutlineAndSortCellsEv+0x4c>
 8014b80:	6ae1      	ldr	r1, [r4, #44]	; 0x2c
 8014b82:	428a      	cmp	r2, r1
 8014b84:	da09      	bge.n	8014b9a <_ZN8touchgfx7Outline24closeOutlineAndSortCellsEv+0x4c>
 8014b86:	e9d4 1201 	ldrd	r1, r2, [r4, #4]
 8014b8a:	4291      	cmp	r1, r2
 8014b8c:	bf88      	it	hi
 8014b8e:	3308      	addhi	r3, #8
 8014b90:	f102 0201 	add.w	r2, r2, #1
 8014b94:	bf88      	it	hi
 8014b96:	6123      	strhi	r3, [r4, #16]
 8014b98:	60a2      	str	r2, [r4, #8]
 8014b9a:	68a1      	ldr	r1, [r4, #8]
 8014b9c:	b129      	cbz	r1, 8014baa <_ZN8touchgfx7Outline24closeOutlineAndSortCellsEv+0x5c>
 8014b9e:	6863      	ldr	r3, [r4, #4]
 8014ba0:	4299      	cmp	r1, r3
 8014ba2:	d802      	bhi.n	8014baa <_ZN8touchgfx7Outline24closeOutlineAndSortCellsEv+0x5c>
 8014ba4:	68e0      	ldr	r0, [r4, #12]
 8014ba6:	f7ff febc 	bl	8014922 <_ZN8touchgfx7Outline10qsortCellsEPNS_4CellEj>
 8014baa:	6a63      	ldr	r3, [r4, #36]	; 0x24
 8014bac:	f023 0302 	bic.w	r3, r3, #2
 8014bb0:	6263      	str	r3, [r4, #36]	; 0x24
 8014bb2:	68e0      	ldr	r0, [r4, #12]
 8014bb4:	bd10      	pop	{r4, pc}
	...

08014bb8 <_ZN8touchgfx20CanvasWidgetRenderer11setupBufferEPhj>:
 8014bb8:	4b02      	ldr	r3, [pc, #8]	; (8014bc4 <_ZN8touchgfx20CanvasWidgetRenderer11setupBufferEPhj+0xc>)
 8014bba:	6018      	str	r0, [r3, #0]
 8014bbc:	4b02      	ldr	r3, [pc, #8]	; (8014bc8 <_ZN8touchgfx20CanvasWidgetRenderer11setupBufferEPhj+0x10>)
 8014bbe:	6019      	str	r1, [r3, #0]
 8014bc0:	4770      	bx	lr
 8014bc2:	bf00      	nop
 8014bc4:	20013824 	.word	0x20013824
 8014bc8:	20013828 	.word	0x20013828

08014bcc <_ZN8touchgfx20CanvasWidgetRenderer11resetBufferEv>:
 8014bcc:	4a02      	ldr	r2, [pc, #8]	; (8014bd8 <_ZN8touchgfx20CanvasWidgetRenderer11resetBufferEv+0xc>)
 8014bce:	2300      	movs	r3, #0
 8014bd0:	6013      	str	r3, [r2, #0]
 8014bd2:	4a02      	ldr	r2, [pc, #8]	; (8014bdc <_ZN8touchgfx20CanvasWidgetRenderer11resetBufferEv+0x10>)
 8014bd4:	6013      	str	r3, [r2, #0]
 8014bd6:	4770      	bx	lr
 8014bd8:	20013824 	.word	0x20013824
 8014bdc:	20013828 	.word	0x20013828

08014be0 <_ZN8touchgfx20CanvasWidgetRenderer16getOutlineBufferEv>:
 8014be0:	4b01      	ldr	r3, [pc, #4]	; (8014be8 <_ZN8touchgfx20CanvasWidgetRenderer16getOutlineBufferEv+0x8>)
 8014be2:	6818      	ldr	r0, [r3, #0]
 8014be4:	4770      	bx	lr
 8014be6:	bf00      	nop
 8014be8:	20013824 	.word	0x20013824

08014bec <_ZN8touchgfx20CanvasWidgetRenderer20getOutlineBufferSizeEv>:
 8014bec:	4b01      	ldr	r3, [pc, #4]	; (8014bf4 <_ZN8touchgfx20CanvasWidgetRenderer20getOutlineBufferSizeEv+0x8>)
 8014bee:	6818      	ldr	r0, [r3, #0]
 8014bf0:	4770      	bx	lr
 8014bf2:	bf00      	nop
 8014bf4:	20013828 	.word	0x20013828

08014bf8 <_ZN8touchgfx3LCD27supportDynamicBitmapDrawingENS_6Bitmap12BitmapFormatE>:
 8014bf8:	b510      	push	{r4, lr}
 8014bfa:	6803      	ldr	r3, [r0, #0]
 8014bfc:	6adb      	ldr	r3, [r3, #44]	; 0x2c
 8014bfe:	460c      	mov	r4, r1
 8014c00:	4798      	blx	r3
 8014c02:	1b03      	subs	r3, r0, r4
 8014c04:	4258      	negs	r0, r3
 8014c06:	4158      	adcs	r0, r3
 8014c08:	bd10      	pop	{r4, pc}
	...

08014c0c <_ZN8touchgfx3LCD15setDefaultColorENS_9colortypeE>:
 8014c0c:	4b01      	ldr	r3, [pc, #4]	; (8014c14 <_ZN8touchgfx3LCD15setDefaultColorENS_9colortypeE+0x8>)
 8014c0e:	6019      	str	r1, [r3, #0]
 8014c10:	4770      	bx	lr
 8014c12:	bf00      	nop
 8014c14:	2001382c 	.word	0x2001382c

08014c18 <_ZN8touchgfx3LCD18drawTextureMapQuadERKNS_14DrawingSurfaceEPKNS_7Point3DERKNS_14TextureSurfaceERKNS_4RectESC_tht>:
 8014c18:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 8014c1c:	4696      	mov	lr, r2
 8014c1e:	4605      	mov	r5, r0
 8014c20:	4614      	mov	r4, r2
 8014c22:	460e      	mov	r6, r1
 8014c24:	461f      	mov	r7, r3
 8014c26:	e8be 000f 	ldmia.w	lr!, {r0, r1, r2, r3}
 8014c2a:	b097      	sub	sp, #92	; 0x5c
 8014c2c:	f10d 0c1c 	add.w	ip, sp, #28
 8014c30:	e8ac 000f 	stmia.w	ip!, {r0, r1, r2, r3}
 8014c34:	f8de 3000 	ldr.w	r3, [lr]
 8014c38:	f8cc 3000 	str.w	r3, [ip]
 8014c3c:	f104 0e14 	add.w	lr, r4, #20
 8014c40:	e8be 000f 	ldmia.w	lr!, {r0, r1, r2, r3}
 8014c44:	f10d 0c30 	add.w	ip, sp, #48	; 0x30
 8014c48:	e8ac 000f 	stmia.w	ip!, {r0, r1, r2, r3}
 8014c4c:	f8de 3000 	ldr.w	r3, [lr]
 8014c50:	f8cc 3000 	str.w	r3, [ip]
 8014c54:	f104 0e28 	add.w	lr, r4, #40	; 0x28
 8014c58:	e8be 000f 	ldmia.w	lr!, {r0, r1, r2, r3}
 8014c5c:	f10d 0c44 	add.w	ip, sp, #68	; 0x44
 8014c60:	e8ac 000f 	stmia.w	ip!, {r0, r1, r2, r3}
 8014c64:	f89d 908c 	ldrb.w	r9, [sp, #140]	; 0x8c
 8014c68:	f8bd a090 	ldrh.w	sl, [sp, #144]	; 0x90
 8014c6c:	f8bd 8088 	ldrh.w	r8, [sp, #136]	; 0x88
 8014c70:	f8de 3000 	ldr.w	r3, [lr]
 8014c74:	f8cc 3000 	str.w	r3, [ip]
 8014c78:	9a21      	ldr	r2, [sp, #132]	; 0x84
 8014c7a:	682b      	ldr	r3, [r5, #0]
 8014c7c:	9201      	str	r2, [sp, #4]
 8014c7e:	e9cd 9a03 	strd	r9, sl, [sp, #12]
 8014c82:	9a20      	ldr	r2, [sp, #128]	; 0x80
 8014c84:	9200      	str	r2, [sp, #0]
 8014c86:	f8cd 8008 	str.w	r8, [sp, #8]
 8014c8a:	f8d3 b03c 	ldr.w	fp, [r3, #60]	; 0x3c
 8014c8e:	aa07      	add	r2, sp, #28
 8014c90:	463b      	mov	r3, r7
 8014c92:	4631      	mov	r1, r6
 8014c94:	4628      	mov	r0, r5
 8014c96:	47d8      	blx	fp
 8014c98:	46a6      	mov	lr, r4
 8014c9a:	e8be 000f 	ldmia.w	lr!, {r0, r1, r2, r3}
 8014c9e:	f10d 0c1c 	add.w	ip, sp, #28
 8014ca2:	e8ac 000f 	stmia.w	ip!, {r0, r1, r2, r3}
 8014ca6:	f8de 3000 	ldr.w	r3, [lr]
 8014caa:	f8cc 3000 	str.w	r3, [ip]
 8014cae:	f104 0e28 	add.w	lr, r4, #40	; 0x28
 8014cb2:	e8be 000f 	ldmia.w	lr!, {r0, r1, r2, r3}
 8014cb6:	f10d 0c30 	add.w	ip, sp, #48	; 0x30
 8014cba:	e8ac 000f 	stmia.w	ip!, {r0, r1, r2, r3}
 8014cbe:	343c      	adds	r4, #60	; 0x3c
 8014cc0:	f8de 3000 	ldr.w	r3, [lr]
 8014cc4:	f8cc 3000 	str.w	r3, [ip]
 8014cc8:	cc0f      	ldmia	r4!, {r0, r1, r2, r3}
 8014cca:	f10d 0c44 	add.w	ip, sp, #68	; 0x44
 8014cce:	e8ac 000f 	stmia.w	ip!, {r0, r1, r2, r3}
 8014cd2:	6823      	ldr	r3, [r4, #0]
 8014cd4:	f8cc 3000 	str.w	r3, [ip]
 8014cd8:	682b      	ldr	r3, [r5, #0]
 8014cda:	e9cd 9a03 	strd	r9, sl, [sp, #12]
 8014cde:	9a21      	ldr	r2, [sp, #132]	; 0x84
 8014ce0:	9201      	str	r2, [sp, #4]
 8014ce2:	9a20      	ldr	r2, [sp, #128]	; 0x80
 8014ce4:	9200      	str	r2, [sp, #0]
 8014ce6:	f8cd 8008 	str.w	r8, [sp, #8]
 8014cea:	6bdc      	ldr	r4, [r3, #60]	; 0x3c
 8014cec:	aa07      	add	r2, sp, #28
 8014cee:	463b      	mov	r3, r7
 8014cf0:	4631      	mov	r1, r6
 8014cf2:	4628      	mov	r0, r5
 8014cf4:	47a0      	blx	r4
 8014cf6:	b017      	add	sp, #92	; 0x5c
 8014cf8:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}

08014cfc <_ZN8touchgfx3LCD22drawTextureMapScanLineERKNS_14DrawingSurfaceERKNS_9GradientsEPKNS_4EdgeES9_RKNS_14TextureSurfaceERKNS_4RectESF_tht>:
 8014cfc:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 8014d00:	b08d      	sub	sp, #52	; 0x34
 8014d02:	4688      	mov	r8, r1
 8014d04:	9916      	ldr	r1, [sp, #88]	; 0x58
 8014d06:	f8d3 c000 	ldr.w	ip, [r3]
 8014d0a:	680f      	ldr	r7, [r1, #0]
 8014d0c:	f8bd 4070 	ldrh.w	r4, [sp, #112]	; 0x70
 8014d10:	ed92 4a09 	vldr	s8, [r2, #36]	; 0x24
 8014d14:	edd2 4a0b 	vldr	s9, [r2, #44]	; 0x2c
 8014d18:	edd3 6a07 	vldr	s13, [r3, #28]
 8014d1c:	9918      	ldr	r1, [sp, #96]	; 0x60
 8014d1e:	f8dd a064 	ldr.w	sl, [sp, #100]	; 0x64
 8014d22:	f9b1 9000 	ldrsh.w	r9, [r1]
 8014d26:	f9ba 1000 	ldrsh.w	r1, [sl]
 8014d2a:	edd3 1a0a 	vldr	s3, [r3, #40]	; 0x28
 8014d2e:	ed93 2a0d 	vldr	s4, [r3, #52]	; 0x34
 8014d32:	eba7 070c 	sub.w	r7, r7, ip
 8014d36:	42bc      	cmp	r4, r7
 8014d38:	bfa8      	it	ge
 8014d3a:	463c      	movge	r4, r7
 8014d3c:	ee07 4a90 	vmov	s15, r4
 8014d40:	eeb8 5ae7 	vcvt.f32.s32	s10, s15
 8014d44:	edd2 7a0d 	vldr	s15, [r2, #52]	; 0x34
 8014d48:	ee25 4a04 	vmul.f32	s8, s10, s8
 8014d4c:	ee65 4a24 	vmul.f32	s9, s10, s9
 8014d50:	ee25 5a27 	vmul.f32	s10, s10, s15
 8014d54:	eef7 7a00 	vmov.f32	s15, #112	; 0x3f800000  1.0
 8014d58:	ee87 7aa6 	vdiv.f32	s14, s15, s13
 8014d5c:	eb09 0e0c 	add.w	lr, r9, ip
 8014d60:	4571      	cmp	r1, lr
 8014d62:	ee71 0aa4 	vadd.f32	s1, s3, s9
 8014d66:	ee32 1a05 	vadd.f32	s2, s4, s10
 8014d6a:	ee36 0a84 	vadd.f32	s0, s13, s8
 8014d6e:	ee61 1a87 	vmul.f32	s3, s3, s14
 8014d72:	ee22 2a07 	vmul.f32	s4, s4, s14
 8014d76:	f340 808d 	ble.w	8014e94 <_ZN8touchgfx3LCD22drawTextureMapScanLineERKNS_14DrawingSurfaceERKNS_9GradientsEPKNS_4EdgeES9_RKNS_14TextureSurfaceERKNS_4RectESF_tht+0x198>
 8014d7a:	eba1 060e 	sub.w	r6, r1, lr
 8014d7e:	fb96 f5f4 	sdiv	r5, r6, r4
 8014d82:	ee07 5a10 	vmov	s14, r5
 8014d86:	eeb8 7ac7 	vcvt.f32.s32	s14, s14
 8014d8a:	2d00      	cmp	r5, #0
 8014d8c:	fb04 6615 	mls	r6, r4, r5, r6
 8014d90:	eea7 0a04 	vfma.f32	s0, s14, s8
 8014d94:	eee7 0a24 	vfma.f32	s1, s14, s9
 8014d98:	eea7 1a05 	vfma.f32	s2, s14, s10
 8014d9c:	dd13      	ble.n	8014dc6 <_ZN8touchgfx3LCD22drawTextureMapScanLineERKNS_14DrawingSurfaceERKNS_9GradientsEPKNS_4EdgeES9_RKNS_14TextureSurfaceERKNS_4RectESF_tht+0xca>
 8014d9e:	ee70 6a44 	vsub.f32	s13, s0, s8
 8014da2:	ee70 1ae4 	vsub.f32	s3, s1, s9
 8014da6:	eef5 6a40 	vcmp.f32	s13, #0.0
 8014daa:	eef1 fa10 	vmrs	APSR_nzcv, fpscr
 8014dae:	bf18      	it	ne
 8014db0:	ee87 7aa6 	vdivne.f32	s14, s15, s13
 8014db4:	ee31 2a45 	vsub.f32	s4, s2, s10
 8014db8:	bf08      	it	eq
 8014dba:	eeb0 7a67 	vmoveq.f32	s14, s15
 8014dbe:	ee61 1a87 	vmul.f32	s3, s3, s14
 8014dc2:	ee22 2a07 	vmul.f32	s4, s4, s14
 8014dc6:	fb05 f204 	mul.w	r2, r5, r4
 8014dca:	1abf      	subs	r7, r7, r2
 8014dcc:	4494      	add	ip, r2
 8014dce:	f8ba 2004 	ldrh.w	r2, [sl, #4]
 8014dd2:	4411      	add	r1, r2
 8014dd4:	eb09 020c 	add.w	r2, r9, ip
 8014dd8:	443a      	add	r2, r7
 8014dda:	b209      	sxth	r1, r1
 8014ddc:	428a      	cmp	r2, r1
 8014dde:	bfc4      	itt	gt
 8014de0:	eba1 0209 	subgt.w	r2, r1, r9
 8014de4:	eba2 070c 	subgt.w	r7, r2, ip
 8014de8:	2f00      	cmp	r7, #0
 8014dea:	dd50      	ble.n	8014e8e <_ZN8touchgfx3LCD22drawTextureMapScanLineERKNS_14DrawingSurfaceERKNS_9GradientsEPKNS_4EdgeES9_RKNS_14TextureSurfaceERKNS_4RectESF_tht+0x192>
 8014dec:	fb97 f1f4 	sdiv	r1, r7, r4
 8014df0:	fb04 7211 	mls	r2, r4, r1, r7
 8014df4:	b90a      	cbnz	r2, 8014dfa <_ZN8touchgfx3LCD22drawTextureMapScanLineERKNS_14DrawingSurfaceERKNS_9GradientsEPKNS_4EdgeES9_RKNS_14TextureSurfaceERKNS_4RectESF_tht+0xfe>
 8014df6:	3901      	subs	r1, #1
 8014df8:	4622      	mov	r2, r4
 8014dfa:	eec7 3a80 	vdiv.f32	s7, s15, s0
 8014dfe:	6840      	ldr	r0, [r0, #4]
 8014e00:	900b      	str	r0, [sp, #44]	; 0x2c
 8014e02:	f8d0 a000 	ldr.w	sl, [r0]
 8014e06:	9817      	ldr	r0, [sp, #92]	; 0x5c
 8014e08:	9008      	str	r0, [sp, #32]
 8014e0a:	f89d b06c 	ldrb.w	fp, [sp, #108]	; 0x6c
 8014e0e:	9818      	ldr	r0, [sp, #96]	; 0x60
 8014e10:	f8cd b024 	str.w	fp, [sp, #36]	; 0x24
 8014e14:	f9b0 b002 	ldrsh.w	fp, [r0, #2]
 8014e18:	695b      	ldr	r3, [r3, #20]
 8014e1a:	980b      	ldr	r0, [sp, #44]	; 0x2c
 8014e1c:	445b      	add	r3, fp
 8014e1e:	eef0 6a42 	vmov.f32	s13, s4
 8014e22:	ee60 2aa3 	vmul.f32	s5, s1, s7
 8014e26:	ee21 3a23 	vmul.f32	s6, s2, s7
 8014e2a:	ee72 7ae1 	vsub.f32	s15, s5, s3
 8014e2e:	eefe 6ac8 	vcvt.s32.f32	s13, s13, #16
 8014e32:	eefe 7ac8 	vcvt.s32.f32	s15, s15, #16
 8014e36:	9307      	str	r3, [sp, #28]
 8014e38:	ee17 7a90 	vmov	r7, s15
 8014e3c:	ee73 7a42 	vsub.f32	s15, s6, s4
 8014e40:	eeb0 7a61 	vmov.f32	s14, s3
 8014e44:	eefe 7ac8 	vcvt.s32.f32	s15, s15, #16
 8014e48:	ee16 3a90 	vmov	r3, s13
 8014e4c:	fb97 f7f4 	sdiv	r7, r7, r4
 8014e50:	ee17 ca90 	vmov	ip, s15
 8014e54:	eebe 7ac8 	vcvt.s32.f32	s14, s14, #16
 8014e58:	fb9c fcf4 	sdiv	ip, ip, r4
 8014e5c:	fb0c 3306 	mla	r3, ip, r6, r3
 8014e60:	9302      	str	r3, [sp, #8]
 8014e62:	ee17 3a10 	vmov	r3, s14
 8014e66:	44b6      	add	lr, r6
 8014e68:	fb04 e505 	mla	r5, r4, r5, lr
 8014e6c:	e9cd 7c03 	strd	r7, ip, [sp, #12]
 8014e70:	fb07 3706 	mla	r7, r7, r6, r3
 8014e74:	e9cd 8505 	strd	r8, r5, [sp, #20]
 8014e78:	e9cd 4700 	strd	r4, r7, [sp]
 8014e7c:	2900      	cmp	r1, #0
 8014e7e:	bfcc      	ite	gt
 8014e80:	46a1      	movgt	r9, r4
 8014e82:	4691      	movle	r9, r2
 8014e84:	eba9 0306 	sub.w	r3, r9, r6
 8014e88:	f8da 4008 	ldr.w	r4, [sl, #8]
 8014e8c:	47a0      	blx	r4
 8014e8e:	b00d      	add	sp, #52	; 0x34
 8014e90:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
 8014e94:	2500      	movs	r5, #0
 8014e96:	462e      	mov	r6, r5
 8014e98:	e799      	b.n	8014dce <_ZN8touchgfx3LCD22drawTextureMapScanLineERKNS_14DrawingSurfaceERKNS_9GradientsEPKNS_4EdgeES9_RKNS_14TextureSurfaceERKNS_4RectESF_tht+0xd2>
	...

08014e9c <_ZN8touchgfx3LCD22drawTextureMapTriangleERKNS_14DrawingSurfaceEPKNS_7Point3DERKNS_14TextureSurfaceERKNS_4RectESC_tht>:
 8014e9c:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 8014ea0:	b0db      	sub	sp, #364	; 0x16c
 8014ea2:	461d      	mov	r5, r3
 8014ea4:	f8bd 3198 	ldrh.w	r3, [sp, #408]	; 0x198
 8014ea8:	930a      	str	r3, [sp, #40]	; 0x28
 8014eaa:	f89d 319c 	ldrb.w	r3, [sp, #412]	; 0x19c
 8014eae:	930b      	str	r3, [sp, #44]	; 0x2c
 8014eb0:	f8bd 31a0 	ldrh.w	r3, [sp, #416]	; 0x1a0
 8014eb4:	9310      	str	r3, [sp, #64]	; 0x40
 8014eb6:	6803      	ldr	r3, [r0, #0]
 8014eb8:	910f      	str	r1, [sp, #60]	; 0x3c
 8014eba:	6c5f      	ldr	r7, [r3, #68]	; 0x44
 8014ebc:	9009      	str	r0, [sp, #36]	; 0x24
 8014ebe:	4614      	mov	r4, r2
 8014ec0:	4629      	mov	r1, r5
 8014ec2:	e9dd 230a 	ldrd	r2, r3, [sp, #40]	; 0x28
 8014ec6:	f8dd b194 	ldr.w	fp, [sp, #404]	; 0x194
 8014eca:	47b8      	blx	r7
 8014ecc:	9b09      	ldr	r3, [sp, #36]	; 0x24
 8014ece:	6058      	str	r0, [r3, #4]
 8014ed0:	2800      	cmp	r0, #0
 8014ed2:	f000 83a1 	beq.w	8015618 <_ZN8touchgfx3LCD22drawTextureMapTriangleERKNS_14DrawingSurfaceEPKNS_7Point3DERKNS_14TextureSurfaceERKNS_4RectESC_tht+0x77c>
 8014ed6:	682b      	ldr	r3, [r5, #0]
 8014ed8:	9314      	str	r3, [sp, #80]	; 0x50
 8014eda:	686b      	ldr	r3, [r5, #4]
 8014edc:	9315      	str	r3, [sp, #84]	; 0x54
 8014ede:	4bc4      	ldr	r3, [pc, #784]	; (80151f0 <_ZN8touchgfx3LCD22drawTextureMapTriangleERKNS_14DrawingSurfaceEPKNS_7Point3DERKNS_14TextureSurfaceERKNS_4RectESC_tht+0x354>)
 8014ee0:	ed94 7a02 	vldr	s14, [r4, #8]
 8014ee4:	7819      	ldrb	r1, [r3, #0]
 8014ee6:	e9d5 2302 	ldrd	r2, r3, [r5, #8]
 8014eea:	eef2 7a04 	vmov.f32	s15, #36	; 0x41200000  10.0
 8014eee:	2900      	cmp	r1, #0
 8014ef0:	eeb4 7ae7 	vcmpe.f32	s14, s15
 8014ef4:	bf16      	itet	ne
 8014ef6:	4619      	movne	r1, r3
 8014ef8:	4611      	moveq	r1, r2
 8014efa:	4613      	movne	r3, r2
 8014efc:	eef1 fa10 	vmrs	APSR_nzcv, fpscr
 8014f00:	9116      	str	r1, [sp, #88]	; 0x58
 8014f02:	e9cd 3217 	strd	r3, r2, [sp, #92]	; 0x5c
 8014f06:	f240 8387 	bls.w	8015618 <_ZN8touchgfx3LCD22drawTextureMapTriangleERKNS_14DrawingSurfaceEPKNS_7Point3DERKNS_14TextureSurfaceERKNS_4RectESC_tht+0x77c>
 8014f0a:	ed94 7a07 	vldr	s14, [r4, #28]
 8014f0e:	eeb4 7ae7 	vcmpe.f32	s14, s15
 8014f12:	eef1 fa10 	vmrs	APSR_nzcv, fpscr
 8014f16:	f240 837f 	bls.w	8015618 <_ZN8touchgfx3LCD22drawTextureMapTriangleERKNS_14DrawingSurfaceEPKNS_7Point3DERKNS_14TextureSurfaceERKNS_4RectESC_tht+0x77c>
 8014f1a:	ed94 7a0c 	vldr	s14, [r4, #48]	; 0x30
 8014f1e:	eeb4 7ae7 	vcmpe.f32	s14, s15
 8014f22:	eef1 fa10 	vmrs	APSR_nzcv, fpscr
 8014f26:	f240 8377 	bls.w	8015618 <_ZN8touchgfx3LCD22drawTextureMapTriangleERKNS_14DrawingSurfaceEPKNS_7Point3DERKNS_14TextureSurfaceERKNS_4RectESC_tht+0x77c>
 8014f2a:	6822      	ldr	r2, [r4, #0]
 8014f2c:	4bb1      	ldr	r3, [pc, #708]	; (80151f4 <_ZN8touchgfx3LCD22drawTextureMapTriangleERKNS_14DrawingSurfaceEPKNS_7Point3DERKNS_14TextureSurfaceERKNS_4RectESC_tht+0x358>)
 8014f2e:	429a      	cmp	r2, r3
 8014f30:	f2c0 8372 	blt.w	8015618 <_ZN8touchgfx3LCD22drawTextureMapTriangleERKNS_14DrawingSurfaceEPKNS_7Point3DERKNS_14TextureSurfaceERKNS_4RectESC_tht+0x77c>
 8014f34:	49b0      	ldr	r1, [pc, #704]	; (80151f8 <_ZN8touchgfx3LCD22drawTextureMapTriangleERKNS_14DrawingSurfaceEPKNS_7Point3DERKNS_14TextureSurfaceERKNS_4RectESC_tht+0x35c>)
 8014f36:	6963      	ldr	r3, [r4, #20]
 8014f38:	428a      	cmp	r2, r1
 8014f3a:	f300 836d 	bgt.w	8015618 <_ZN8touchgfx3LCD22drawTextureMapTriangleERKNS_14DrawingSurfaceEPKNS_7Point3DERKNS_14TextureSurfaceERKNS_4RectESC_tht+0x77c>
 8014f3e:	f503 331c 	add.w	r3, r3, #159744	; 0x27000
 8014f42:	48ae      	ldr	r0, [pc, #696]	; (80151fc <_ZN8touchgfx3LCD22drawTextureMapTriangleERKNS_14DrawingSurfaceEPKNS_7Point3DERKNS_14TextureSurfaceERKNS_4RectESC_tht+0x360>)
 8014f44:	33ff      	adds	r3, #255	; 0xff
 8014f46:	4283      	cmp	r3, r0
 8014f48:	f200 8366 	bhi.w	8015618 <_ZN8touchgfx3LCD22drawTextureMapTriangleERKNS_14DrawingSurfaceEPKNS_7Point3DERKNS_14TextureSurfaceERKNS_4RectESC_tht+0x77c>
 8014f4c:	6aa3      	ldr	r3, [r4, #40]	; 0x28
 8014f4e:	4dac      	ldr	r5, [pc, #688]	; (8015200 <_ZN8touchgfx3LCD22drawTextureMapTriangleERKNS_14DrawingSurfaceEPKNS_7Point3DERKNS_14TextureSurfaceERKNS_4RectESC_tht+0x364>)
 8014f50:	f503 331c 	add.w	r3, r3, #159744	; 0x27000
 8014f54:	33ff      	adds	r3, #255	; 0xff
 8014f56:	42ab      	cmp	r3, r5
 8014f58:	f200 835e 	bhi.w	8015618 <_ZN8touchgfx3LCD22drawTextureMapTriangleERKNS_14DrawingSurfaceEPKNS_7Point3DERKNS_14TextureSurfaceERKNS_4RectESC_tht+0x77c>
 8014f5c:	6862      	ldr	r2, [r4, #4]
 8014f5e:	f502 331c 	add.w	r3, r2, #159744	; 0x27000
 8014f62:	33ff      	adds	r3, #255	; 0xff
 8014f64:	4283      	cmp	r3, r0
 8014f66:	f200 8357 	bhi.w	8015618 <_ZN8touchgfx3LCD22drawTextureMapTriangleERKNS_14DrawingSurfaceEPKNS_7Point3DERKNS_14TextureSurfaceERKNS_4RectESC_tht+0x77c>
 8014f6a:	69a1      	ldr	r1, [r4, #24]
 8014f6c:	f501 331c 	add.w	r3, r1, #159744	; 0x27000
 8014f70:	33ff      	adds	r3, #255	; 0xff
 8014f72:	4283      	cmp	r3, r0
 8014f74:	f200 8350 	bhi.w	8015618 <_ZN8touchgfx3LCD22drawTextureMapTriangleERKNS_14DrawingSurfaceEPKNS_7Point3DERKNS_14TextureSurfaceERKNS_4RectESC_tht+0x77c>
 8014f78:	6ae3      	ldr	r3, [r4, #44]	; 0x2c
 8014f7a:	f503 301c 	add.w	r0, r3, #159744	; 0x27000
 8014f7e:	30ff      	adds	r0, #255	; 0xff
 8014f80:	42a8      	cmp	r0, r5
 8014f82:	f200 8349 	bhi.w	8015618 <_ZN8touchgfx3LCD22drawTextureMapTriangleERKNS_14DrawingSurfaceEPKNS_7Point3DERKNS_14TextureSurfaceERKNS_4RectESC_tht+0x77c>
 8014f86:	428a      	cmp	r2, r1
 8014f88:	f280 8110 	bge.w	80151ac <_ZN8touchgfx3LCD22drawTextureMapTriangleERKNS_14DrawingSurfaceEPKNS_7Point3DERKNS_14TextureSurfaceERKNS_4RectESC_tht+0x310>
 8014f8c:	429a      	cmp	r2, r3
 8014f8e:	f300 8119 	bgt.w	80151c4 <_ZN8touchgfx3LCD22drawTextureMapTriangleERKNS_14DrawingSurfaceEPKNS_7Point3DERKNS_14TextureSurfaceERKNS_4RectESC_tht+0x328>
 8014f92:	4299      	cmp	r1, r3
 8014f94:	f280 811d 	bge.w	80151d2 <_ZN8touchgfx3LCD22drawTextureMapTriangleERKNS_14DrawingSurfaceEPKNS_7Point3DERKNS_14TextureSurfaceERKNS_4RectESC_tht+0x336>
 8014f98:	2502      	movs	r5, #2
 8014f9a:	2701      	movs	r7, #1
 8014f9c:	46a9      	mov	r9, r5
 8014f9e:	46b8      	mov	r8, r7
 8014fa0:	f04f 0a00 	mov.w	sl, #0
 8014fa4:	4621      	mov	r1, r4
 8014fa6:	a849      	add	r0, sp, #292	; 0x124
 8014fa8:	f003 ff2a 	bl	8018e00 <_ZN8touchgfx9GradientsC1EPKNS_7Point3DE>
 8014fac:	4622      	mov	r2, r4
 8014fae:	4653      	mov	r3, sl
 8014fb0:	a949      	add	r1, sp, #292	; 0x124
 8014fb2:	f8cd 9000 	str.w	r9, [sp]
 8014fb6:	a819      	add	r0, sp, #100	; 0x64
 8014fb8:	f004 f852 	bl	8019060 <_ZN8touchgfx4EdgeC1ERKNS_9GradientsEPKNS_7Point3DEii>
 8014fbc:	4622      	mov	r2, r4
 8014fbe:	4653      	mov	r3, sl
 8014fc0:	a949      	add	r1, sp, #292	; 0x124
 8014fc2:	f8cd 8000 	str.w	r8, [sp]
 8014fc6:	a829      	add	r0, sp, #164	; 0xa4
 8014fc8:	f004 f84a 	bl	8019060 <_ZN8touchgfx4EdgeC1ERKNS_9GradientsEPKNS_7Point3DEii>
 8014fcc:	4643      	mov	r3, r8
 8014fce:	4622      	mov	r2, r4
 8014fd0:	a949      	add	r1, sp, #292	; 0x124
 8014fd2:	f8cd 9000 	str.w	r9, [sp]
 8014fd6:	a839      	add	r0, sp, #228	; 0xe4
 8014fd8:	f004 f842 	bl	8019060 <_ZN8touchgfx4EdgeC1ERKNS_9GradientsEPKNS_7Point3DEii>
 8014fdc:	42af      	cmp	r7, r5
 8014fde:	bfb5      	itete	lt
 8014fe0:	2300      	movlt	r3, #0
 8014fe2:	2301      	movge	r3, #1
 8014fe4:	930e      	strlt	r3, [sp, #56]	; 0x38
 8014fe6:	930e      	strge	r3, [sp, #56]	; 0x38
 8014fe8:	9b0f      	ldr	r3, [sp, #60]	; 0x3c
 8014fea:	e893 0003 	ldmia.w	r3, {r0, r1}
 8014fee:	af12      	add	r7, sp, #72	; 0x48
 8014ff0:	bfb9      	ittee	lt
 8014ff2:	ad29      	addlt	r5, sp, #164	; 0xa4
 8014ff4:	ac19      	addlt	r4, sp, #100	; 0x64
 8014ff6:	ad19      	addge	r5, sp, #100	; 0x64
 8014ff8:	ac29      	addge	r4, sp, #164	; 0xa4
 8014ffa:	e887 0003 	stmia.w	r7, {r0, r1}
 8014ffe:	b928      	cbnz	r0, 801500c <_ZN8touchgfx3LCD22drawTextureMapTriangleERKNS_14DrawingSurfaceEPKNS_7Point3DERKNS_14TextureSurfaceERKNS_4RectESC_tht+0x170>
 8015000:	4b80      	ldr	r3, [pc, #512]	; (8015204 <_ZN8touchgfx3LCD22drawTextureMapTriangleERKNS_14DrawingSurfaceEPKNS_7Point3DERKNS_14TextureSurfaceERKNS_4RectESC_tht+0x368>)
 8015002:	6818      	ldr	r0, [r3, #0]
 8015004:	6803      	ldr	r3, [r0, #0]
 8015006:	6a9b      	ldr	r3, [r3, #40]	; 0x28
 8015008:	4798      	blx	r3
 801500a:	6038      	str	r0, [r7, #0]
 801500c:	9b64      	ldr	r3, [sp, #400]	; 0x190
 801500e:	f8bb 0006 	ldrh.w	r0, [fp, #6]
 8015012:	f9b3 3002 	ldrsh.w	r3, [r3, #2]
 8015016:	930c      	str	r3, [sp, #48]	; 0x30
 8015018:	990c      	ldr	r1, [sp, #48]	; 0x30
 801501a:	6963      	ldr	r3, [r4, #20]
 801501c:	9a2f      	ldr	r2, [sp, #188]	; 0xbc
 801501e:	440b      	add	r3, r1
 8015020:	f9bb 1002 	ldrsh.w	r1, [fp, #2]
 8015024:	4408      	add	r0, r1
 8015026:	b200      	sxth	r0, r0
 8015028:	4283      	cmp	r3, r0
 801502a:	900d      	str	r0, [sp, #52]	; 0x34
 801502c:	f280 80dd 	bge.w	80151ea <_ZN8touchgfx3LCD22drawTextureMapTriangleERKNS_14DrawingSurfaceEPKNS_7Point3DERKNS_14TextureSurfaceERKNS_4RectESC_tht+0x34e>
 8015030:	428b      	cmp	r3, r1
 8015032:	da08      	bge.n	8015046 <_ZN8touchgfx3LCD22drawTextureMapTriangleERKNS_14DrawingSurfaceEPKNS_7Point3DERKNS_14TextureSurfaceERKNS_4RectESC_tht+0x1aa>
 8015034:	2a00      	cmp	r2, #0
 8015036:	dd06      	ble.n	8015046 <_ZN8touchgfx3LCD22drawTextureMapTriangleERKNS_14DrawingSurfaceEPKNS_7Point3DERKNS_14TextureSurfaceERKNS_4RectESC_tht+0x1aa>
 8015038:	1acb      	subs	r3, r1, r3
 801503a:	429a      	cmp	r2, r3
 801503c:	f2c0 80e4 	blt.w	8015208 <_ZN8touchgfx3LCD22drawTextureMapTriangleERKNS_14DrawingSurfaceEPKNS_7Point3DERKNS_14TextureSurfaceERKNS_4RectESC_tht+0x36c>
 8015040:	2b00      	cmp	r3, #0
 8015042:	f300 80e2 	bgt.w	801520a <_ZN8touchgfx3LCD22drawTextureMapTriangleERKNS_14DrawingSurfaceEPKNS_7Point3DERKNS_14TextureSurfaceERKNS_4RectESC_tht+0x36e>
 8015046:	6967      	ldr	r7, [r4, #20]
 8015048:	9b0c      	ldr	r3, [sp, #48]	; 0x30
 801504a:	443b      	add	r3, r7
 801504c:	461f      	mov	r7, r3
 801504e:	9b0d      	ldr	r3, [sp, #52]	; 0x34
 8015050:	1bdf      	subs	r7, r3, r7
 8015052:	4297      	cmp	r7, r2
 8015054:	bfa8      	it	ge
 8015056:	4617      	movge	r7, r2
 8015058:	f10d 0850 	add.w	r8, sp, #80	; 0x50
 801505c:	2f00      	cmp	r7, #0
 801505e:	f340 8166 	ble.w	801532e <_ZN8touchgfx3LCD22drawTextureMapTriangleERKNS_14DrawingSurfaceEPKNS_7Point3DERKNS_14TextureSurfaceERKNS_4RectESC_tht+0x492>
 8015062:	9b64      	ldr	r3, [sp, #400]	; 0x190
 8015064:	6829      	ldr	r1, [r5, #0]
 8015066:	f9b3 2000 	ldrsh.w	r2, [r3]
 801506a:	f9bb 3000 	ldrsh.w	r3, [fp]
 801506e:	6820      	ldr	r0, [r4, #0]
 8015070:	4411      	add	r1, r2
 8015072:	4299      	cmp	r1, r3
 8015074:	dd1a      	ble.n	80150ac <_ZN8touchgfx3LCD22drawTextureMapTriangleERKNS_14DrawingSurfaceEPKNS_7Point3DERKNS_14TextureSurfaceERKNS_4RectESC_tht+0x210>
 8015076:	f8bb 1004 	ldrh.w	r1, [fp, #4]
 801507a:	440b      	add	r3, r1
 801507c:	4402      	add	r2, r0
 801507e:	b21b      	sxth	r3, r3
 8015080:	429a      	cmp	r2, r3
 8015082:	dc13      	bgt.n	80150ac <_ZN8touchgfx3LCD22drawTextureMapTriangleERKNS_14DrawingSurfaceEPKNS_7Point3DERKNS_14TextureSurfaceERKNS_4RectESC_tht+0x210>
 8015084:	9b09      	ldr	r3, [sp, #36]	; 0x24
 8015086:	9a10      	ldr	r2, [sp, #64]	; 0x40
 8015088:	681b      	ldr	r3, [r3, #0]
 801508a:	9206      	str	r2, [sp, #24]
 801508c:	9a0b      	ldr	r2, [sp, #44]	; 0x2c
 801508e:	9205      	str	r2, [sp, #20]
 8015090:	9a0a      	ldr	r2, [sp, #40]	; 0x28
 8015092:	9500      	str	r5, [sp, #0]
 8015094:	e9cd b203 	strd	fp, r2, [sp, #12]
 8015098:	9a64      	ldr	r2, [sp, #400]	; 0x190
 801509a:	9809      	ldr	r0, [sp, #36]	; 0x24
 801509c:	e9cd 8201 	strd	r8, r2, [sp, #4]
 80150a0:	a912      	add	r1, sp, #72	; 0x48
 80150a2:	f8d3 9048 	ldr.w	r9, [r3, #72]	; 0x48
 80150a6:	aa49      	add	r2, sp, #292	; 0x124
 80150a8:	4623      	mov	r3, r4
 80150aa:	47c8      	blx	r9
 80150ac:	e9d4 2300 	ldrd	r2, r3, [r4]
 80150b0:	441a      	add	r2, r3
 80150b2:	6963      	ldr	r3, [r4, #20]
 80150b4:	ed94 7a0a 	vldr	s14, [r4, #40]	; 0x28
 80150b8:	edd4 7a0b 	vldr	s15, [r4, #44]	; 0x2c
 80150bc:	edd4 6a0e 	vldr	s13, [r4, #56]	; 0x38
 80150c0:	68a1      	ldr	r1, [r4, #8]
 80150c2:	ed94 6a08 	vldr	s12, [r4, #32]
 80150c6:	6022      	str	r2, [r4, #0]
 80150c8:	3301      	adds	r3, #1
 80150ca:	6163      	str	r3, [r4, #20]
 80150cc:	69a3      	ldr	r3, [r4, #24]
 80150ce:	ee37 7a27 	vadd.f32	s14, s14, s15
 80150d2:	3b01      	subs	r3, #1
 80150d4:	edd4 7a0d 	vldr	s15, [r4, #52]	; 0x34
 80150d8:	61a3      	str	r3, [r4, #24]
 80150da:	6923      	ldr	r3, [r4, #16]
 80150dc:	ed84 7a0a 	vstr	s14, [r4, #40]	; 0x28
 80150e0:	ee77 7aa6 	vadd.f32	s15, s15, s13
 80150e4:	edd4 6a07 	vldr	s13, [r4, #28]
 80150e8:	edc4 7a0d 	vstr	s15, [r4, #52]	; 0x34
 80150ec:	440b      	add	r3, r1
 80150ee:	68e1      	ldr	r1, [r4, #12]
 80150f0:	6123      	str	r3, [r4, #16]
 80150f2:	ee76 6a86 	vadd.f32	s13, s13, s12
 80150f6:	428b      	cmp	r3, r1
 80150f8:	edc4 6a07 	vstr	s13, [r4, #28]
 80150fc:	db15      	blt.n	801512a <_ZN8touchgfx3LCD22drawTextureMapTriangleERKNS_14DrawingSurfaceEPKNS_7Point3DERKNS_14TextureSurfaceERKNS_4RectESC_tht+0x28e>
 80150fe:	ed94 6a09 	vldr	s12, [r4, #36]	; 0x24
 8015102:	ee76 6a26 	vadd.f32	s13, s12, s13
 8015106:	3201      	adds	r2, #1
 8015108:	edc4 6a07 	vstr	s13, [r4, #28]
 801510c:	edd4 6a0c 	vldr	s13, [r4, #48]	; 0x30
 8015110:	6022      	str	r2, [r4, #0]
 8015112:	ee36 7a87 	vadd.f32	s14, s13, s14
 8015116:	1a5b      	subs	r3, r3, r1
 8015118:	ed84 7a0a 	vstr	s14, [r4, #40]	; 0x28
 801511c:	ed94 7a0f 	vldr	s14, [r4, #60]	; 0x3c
 8015120:	6123      	str	r3, [r4, #16]
 8015122:	ee77 7a27 	vadd.f32	s15, s14, s15
 8015126:	edc4 7a0d 	vstr	s15, [r4, #52]	; 0x34
 801512a:	e9d5 2300 	ldrd	r2, r3, [r5]
 801512e:	441a      	add	r2, r3
 8015130:	696b      	ldr	r3, [r5, #20]
 8015132:	ed95 7a0a 	vldr	s14, [r5, #40]	; 0x28
 8015136:	edd5 7a0b 	vldr	s15, [r5, #44]	; 0x2c
 801513a:	edd5 6a0e 	vldr	s13, [r5, #56]	; 0x38
 801513e:	68a9      	ldr	r1, [r5, #8]
 8015140:	ed95 6a08 	vldr	s12, [r5, #32]
 8015144:	602a      	str	r2, [r5, #0]
 8015146:	3301      	adds	r3, #1
 8015148:	616b      	str	r3, [r5, #20]
 801514a:	69ab      	ldr	r3, [r5, #24]
 801514c:	ee37 7a27 	vadd.f32	s14, s14, s15
 8015150:	3b01      	subs	r3, #1
 8015152:	edd5 7a0d 	vldr	s15, [r5, #52]	; 0x34
 8015156:	61ab      	str	r3, [r5, #24]
 8015158:	692b      	ldr	r3, [r5, #16]
 801515a:	ed85 7a0a 	vstr	s14, [r5, #40]	; 0x28
 801515e:	ee77 7aa6 	vadd.f32	s15, s15, s13
 8015162:	edd5 6a07 	vldr	s13, [r5, #28]
 8015166:	edc5 7a0d 	vstr	s15, [r5, #52]	; 0x34
 801516a:	440b      	add	r3, r1
 801516c:	68e9      	ldr	r1, [r5, #12]
 801516e:	612b      	str	r3, [r5, #16]
 8015170:	ee76 6a86 	vadd.f32	s13, s13, s12
 8015174:	428b      	cmp	r3, r1
 8015176:	edc5 6a07 	vstr	s13, [r5, #28]
 801517a:	db15      	blt.n	80151a8 <_ZN8touchgfx3LCD22drawTextureMapTriangleERKNS_14DrawingSurfaceEPKNS_7Point3DERKNS_14TextureSurfaceERKNS_4RectESC_tht+0x30c>
 801517c:	ed95 6a09 	vldr	s12, [r5, #36]	; 0x24
 8015180:	ee76 6a26 	vadd.f32	s13, s12, s13
 8015184:	3201      	adds	r2, #1
 8015186:	edc5 6a07 	vstr	s13, [r5, #28]
 801518a:	edd5 6a0c 	vldr	s13, [r5, #48]	; 0x30
 801518e:	602a      	str	r2, [r5, #0]
 8015190:	ee36 7a87 	vadd.f32	s14, s13, s14
 8015194:	1a5b      	subs	r3, r3, r1
 8015196:	ed85 7a0a 	vstr	s14, [r5, #40]	; 0x28
 801519a:	ed95 7a0f 	vldr	s14, [r5, #60]	; 0x3c
 801519e:	612b      	str	r3, [r5, #16]
 80151a0:	ee77 7a27 	vadd.f32	s15, s14, s15
 80151a4:	edc5 7a0d 	vstr	s15, [r5, #52]	; 0x34
 80151a8:	3f01      	subs	r7, #1
 80151aa:	e757      	b.n	801505c <_ZN8touchgfx3LCD22drawTextureMapTriangleERKNS_14DrawingSurfaceEPKNS_7Point3DERKNS_14TextureSurfaceERKNS_4RectESC_tht+0x1c0>
 80151ac:	4299      	cmp	r1, r3
 80151ae:	dc13      	bgt.n	80151d8 <_ZN8touchgfx3LCD22drawTextureMapTriangleERKNS_14DrawingSurfaceEPKNS_7Point3DERKNS_14TextureSurfaceERKNS_4RectESC_tht+0x33c>
 80151b0:	429a      	cmp	r2, r3
 80151b2:	da14      	bge.n	80151de <_ZN8touchgfx3LCD22drawTextureMapTriangleERKNS_14DrawingSurfaceEPKNS_7Point3DERKNS_14TextureSurfaceERKNS_4RectESC_tht+0x342>
 80151b4:	2502      	movs	r5, #2
 80151b6:	2703      	movs	r7, #3
 80151b8:	46a9      	mov	r9, r5
 80151ba:	f04f 0800 	mov.w	r8, #0
 80151be:	f04f 0a01 	mov.w	sl, #1
 80151c2:	e6ef      	b.n	8014fa4 <_ZN8touchgfx3LCD22drawTextureMapTriangleERKNS_14DrawingSurfaceEPKNS_7Point3DERKNS_14TextureSurfaceERKNS_4RectESC_tht+0x108>
 80151c4:	2501      	movs	r5, #1
 80151c6:	2700      	movs	r7, #0
 80151c8:	46a9      	mov	r9, r5
 80151ca:	46b8      	mov	r8, r7
 80151cc:	f04f 0a02 	mov.w	sl, #2
 80151d0:	e6e8      	b.n	8014fa4 <_ZN8touchgfx3LCD22drawTextureMapTriangleERKNS_14DrawingSurfaceEPKNS_7Point3DERKNS_14TextureSurfaceERKNS_4RectESC_tht+0x108>
 80151d2:	2501      	movs	r5, #1
 80151d4:	2702      	movs	r7, #2
 80151d6:	e6e1      	b.n	8014f9c <_ZN8touchgfx3LCD22drawTextureMapTriangleERKNS_14DrawingSurfaceEPKNS_7Point3DERKNS_14TextureSurfaceERKNS_4RectESC_tht+0x100>
 80151d8:	2500      	movs	r5, #0
 80151da:	2701      	movs	r7, #1
 80151dc:	e7f4      	b.n	80151c8 <_ZN8touchgfx3LCD22drawTextureMapTriangleERKNS_14DrawingSurfaceEPKNS_7Point3DERKNS_14TextureSurfaceERKNS_4RectESC_tht+0x32c>
 80151de:	2702      	movs	r7, #2
 80151e0:	2503      	movs	r5, #3
 80151e2:	f04f 0900 	mov.w	r9, #0
 80151e6:	46b8      	mov	r8, r7
 80151e8:	e7e9      	b.n	80151be <_ZN8touchgfx3LCD22drawTextureMapTriangleERKNS_14DrawingSurfaceEPKNS_7Point3DERKNS_14TextureSurfaceERKNS_4RectESC_tht+0x322>
 80151ea:	4613      	mov	r3, r2
 80151ec:	e728      	b.n	8015040 <_ZN8touchgfx3LCD22drawTextureMapTriangleERKNS_14DrawingSurfaceEPKNS_7Point3DERKNS_14TextureSurfaceERKNS_4RectESC_tht+0x1a4>
 80151ee:	bf00      	nop
 80151f0:	20013814 	.word	0x20013814
 80151f4:	fffd8f01 	.word	0xfffd8f01
 80151f8:	00027100 	.word	0x00027100
 80151fc:	0004e1ff 	.word	0x0004e1ff
 8015200:	0004e1fe 	.word	0x0004e1fe
 8015204:	2001381c 	.word	0x2001381c
 8015208:	4613      	mov	r3, r2
 801520a:	992b      	ldr	r1, [sp, #172]	; 0xac
 801520c:	9111      	str	r1, [sp, #68]	; 0x44
 801520e:	e9dd 0a29 	ldrd	r0, sl, [sp, #164]	; 0xa4
 8015212:	e9dd 812c 	ldrd	r8, r1, [sp, #176]	; 0xb0
 8015216:	9f2e      	ldr	r7, [sp, #184]	; 0xb8
 8015218:	eddd 4a34 	vldr	s9, [sp, #208]	; 0xd0
 801521c:	ed9d 7a33 	vldr	s14, [sp, #204]	; 0xcc
 8015220:	ed9d 4a37 	vldr	s8, [sp, #220]	; 0xdc
 8015224:	eddd 7a36 	vldr	s15, [sp, #216]	; 0xd8
 8015228:	eddd 3a31 	vldr	s7, [sp, #196]	; 0xc4
 801522c:	eddd 6a30 	vldr	s13, [sp, #192]	; 0xc0
 8015230:	ed9d 5a32 	vldr	s10, [sp, #200]	; 0xc8
 8015234:	eddd 5a35 	vldr	s11, [sp, #212]	; 0xd4
 8015238:	ed9d 6a38 	vldr	s12, [sp, #224]	; 0xe0
 801523c:	469e      	mov	lr, r3
 801523e:	469c      	mov	ip, r3
 8015240:	f04f 0900 	mov.w	r9, #0
 8015244:	f1bc 0f00 	cmp.w	ip, #0
 8015248:	d147      	bne.n	80152da <_ZN8touchgfx3LCD22drawTextureMapTriangleERKNS_14DrawingSurfaceEPKNS_7Point3DERKNS_14TextureSurfaceERKNS_4RectESC_tht+0x43e>
 801524a:	eb03 0c07 	add.w	ip, r3, r7
 801524e:	1ad7      	subs	r7, r2, r3
 8015250:	f1b9 0f00 	cmp.w	r9, #0
 8015254:	d009      	beq.n	801526a <_ZN8touchgfx3LCD22drawTextureMapTriangleERKNS_14DrawingSurfaceEPKNS_7Point3DERKNS_14TextureSurfaceERKNS_4RectESC_tht+0x3ce>
 8015256:	e9cd c72e 	strd	ip, r7, [sp, #184]	; 0xb8
 801525a:	9029      	str	r0, [sp, #164]	; 0xa4
 801525c:	ed8d 7a33 	vstr	s14, [sp, #204]	; 0xcc
 8015260:	edcd 7a36 	vstr	s15, [sp, #216]	; 0xd8
 8015264:	edcd 6a30 	vstr	s13, [sp, #192]	; 0xc0
 8015268:	912d      	str	r1, [sp, #180]	; 0xb4
 801526a:	991b      	ldr	r1, [sp, #108]	; 0x6c
 801526c:	9111      	str	r1, [sp, #68]	; 0x44
 801526e:	e9dd 0a19 	ldrd	r0, sl, [sp, #100]	; 0x64
 8015272:	e9dd c71e 	ldrd	ip, r7, [sp, #120]	; 0x78
 8015276:	e9dd 911c 	ldrd	r9, r1, [sp, #112]	; 0x70
 801527a:	eddd 4a24 	vldr	s9, [sp, #144]	; 0x90
 801527e:	eddd 6a23 	vldr	s13, [sp, #140]	; 0x8c
 8015282:	ed9d 4a27 	vldr	s8, [sp, #156]	; 0x9c
 8015286:	ed9d 7a26 	vldr	s14, [sp, #152]	; 0x98
 801528a:	eddd 3a21 	vldr	s7, [sp, #132]	; 0x84
 801528e:	eddd 7a20 	vldr	s15, [sp, #128]	; 0x80
 8015292:	ed9d 5a22 	vldr	s10, [sp, #136]	; 0x88
 8015296:	eddd 5a25 	vldr	s11, [sp, #148]	; 0x94
 801529a:	ed9d 6a28 	vldr	s12, [sp, #160]	; 0xa0
 801529e:	f04f 0800 	mov.w	r8, #0
 80152a2:	f1be 0f00 	cmp.w	lr, #0
 80152a6:	d031      	beq.n	801530c <_ZN8touchgfx3LCD22drawTextureMapTriangleERKNS_14DrawingSurfaceEPKNS_7Point3DERKNS_14TextureSurfaceERKNS_4RectESC_tht+0x470>
 80152a8:	9e11      	ldr	r6, [sp, #68]	; 0x44
 80152aa:	4431      	add	r1, r6
 80152ac:	4549      	cmp	r1, r9
 80152ae:	4450      	add	r0, sl
 80152b0:	ee76 6aa4 	vadd.f32	s13, s13, s9
 80152b4:	ee37 7a04 	vadd.f32	s14, s14, s8
 80152b8:	ee77 7aa3 	vadd.f32	s15, s15, s7
 80152bc:	db08      	blt.n	80152d0 <_ZN8touchgfx3LCD22drawTextureMapTriangleERKNS_14DrawingSurfaceEPKNS_7Point3DERKNS_14TextureSurfaceERKNS_4RectESC_tht+0x434>
 80152be:	ee77 7a85 	vadd.f32	s15, s15, s10
 80152c2:	ee76 6aa5 	vadd.f32	s13, s13, s11
 80152c6:	ee37 7a06 	vadd.f32	s14, s14, s12
 80152ca:	3001      	adds	r0, #1
 80152cc:	eba1 0109 	sub.w	r1, r1, r9
 80152d0:	f10e 3eff 	add.w	lr, lr, #4294967295
 80152d4:	f04f 0801 	mov.w	r8, #1
 80152d8:	e7e3      	b.n	80152a2 <_ZN8touchgfx3LCD22drawTextureMapTriangleERKNS_14DrawingSurfaceEPKNS_7Point3DERKNS_14TextureSurfaceERKNS_4RectESC_tht+0x406>
 80152da:	9e11      	ldr	r6, [sp, #68]	; 0x44
 80152dc:	4431      	add	r1, r6
 80152de:	4541      	cmp	r1, r8
 80152e0:	4450      	add	r0, sl
 80152e2:	ee37 7a24 	vadd.f32	s14, s14, s9
 80152e6:	ee77 7a84 	vadd.f32	s15, s15, s8
 80152ea:	ee76 6aa3 	vadd.f32	s13, s13, s7
 80152ee:	db08      	blt.n	8015302 <_ZN8touchgfx3LCD22drawTextureMapTriangleERKNS_14DrawingSurfaceEPKNS_7Point3DERKNS_14TextureSurfaceERKNS_4RectESC_tht+0x466>
 80152f0:	ee76 6a85 	vadd.f32	s13, s13, s10
 80152f4:	ee37 7a25 	vadd.f32	s14, s14, s11
 80152f8:	ee77 7a86 	vadd.f32	s15, s15, s12
 80152fc:	3001      	adds	r0, #1
 80152fe:	eba1 0108 	sub.w	r1, r1, r8
 8015302:	f10c 3cff 	add.w	ip, ip, #4294967295
 8015306:	f04f 0901 	mov.w	r9, #1
 801530a:	e79b      	b.n	8015244 <_ZN8touchgfx3LCD22drawTextureMapTriangleERKNS_14DrawingSurfaceEPKNS_7Point3DERKNS_14TextureSurfaceERKNS_4RectESC_tht+0x3a8>
 801530c:	449c      	add	ip, r3
 801530e:	1aff      	subs	r7, r7, r3
 8015310:	f1b8 0f00 	cmp.w	r8, #0
 8015314:	d009      	beq.n	801532a <_ZN8touchgfx3LCD22drawTextureMapTriangleERKNS_14DrawingSurfaceEPKNS_7Point3DERKNS_14TextureSurfaceERKNS_4RectESC_tht+0x48e>
 8015316:	e9cd c71e 	strd	ip, r7, [sp, #120]	; 0x78
 801531a:	9019      	str	r0, [sp, #100]	; 0x64
 801531c:	edcd 6a23 	vstr	s13, [sp, #140]	; 0x8c
 8015320:	ed8d 7a26 	vstr	s14, [sp, #152]	; 0x98
 8015324:	edcd 7a20 	vstr	s15, [sp, #128]	; 0x80
 8015328:	911d      	str	r1, [sp, #116]	; 0x74
 801532a:	1ad2      	subs	r2, r2, r3
 801532c:	e68b      	b.n	8015046 <_ZN8touchgfx3LCD22drawTextureMapTriangleERKNS_14DrawingSurfaceEPKNS_7Point3DERKNS_14TextureSurfaceERKNS_4RectESC_tht+0x1aa>
 801532e:	9b0e      	ldr	r3, [sp, #56]	; 0x38
 8015330:	9a3f      	ldr	r2, [sp, #252]	; 0xfc
 8015332:	2b00      	cmp	r3, #0
 8015334:	f000 80d1 	beq.w	80154da <_ZN8touchgfx3LCD22drawTextureMapTriangleERKNS_14DrawingSurfaceEPKNS_7Point3DERKNS_14TextureSurfaceERKNS_4RectESC_tht+0x63e>
 8015338:	ad19      	add	r5, sp, #100	; 0x64
 801533a:	ac39      	add	r4, sp, #228	; 0xe4
 801533c:	9b64      	ldr	r3, [sp, #400]	; 0x190
 801533e:	f8bb 0006 	ldrh.w	r0, [fp, #6]
 8015342:	f9b3 3002 	ldrsh.w	r3, [r3, #2]
 8015346:	930c      	str	r3, [sp, #48]	; 0x30
 8015348:	990c      	ldr	r1, [sp, #48]	; 0x30
 801534a:	6963      	ldr	r3, [r4, #20]
 801534c:	440b      	add	r3, r1
 801534e:	f9bb 1002 	ldrsh.w	r1, [fp, #2]
 8015352:	4408      	add	r0, r1
 8015354:	b200      	sxth	r0, r0
 8015356:	4283      	cmp	r3, r0
 8015358:	900d      	str	r0, [sp, #52]	; 0x34
 801535a:	f280 80c1 	bge.w	80154e0 <_ZN8touchgfx3LCD22drawTextureMapTriangleERKNS_14DrawingSurfaceEPKNS_7Point3DERKNS_14TextureSurfaceERKNS_4RectESC_tht+0x644>
 801535e:	428b      	cmp	r3, r1
 8015360:	da08      	bge.n	8015374 <_ZN8touchgfx3LCD22drawTextureMapTriangleERKNS_14DrawingSurfaceEPKNS_7Point3DERKNS_14TextureSurfaceERKNS_4RectESC_tht+0x4d8>
 8015362:	2a00      	cmp	r2, #0
 8015364:	dd06      	ble.n	8015374 <_ZN8touchgfx3LCD22drawTextureMapTriangleERKNS_14DrawingSurfaceEPKNS_7Point3DERKNS_14TextureSurfaceERKNS_4RectESC_tht+0x4d8>
 8015366:	1acb      	subs	r3, r1, r3
 8015368:	429a      	cmp	r2, r3
 801536a:	f2c0 80bb 	blt.w	80154e4 <_ZN8touchgfx3LCD22drawTextureMapTriangleERKNS_14DrawingSurfaceEPKNS_7Point3DERKNS_14TextureSurfaceERKNS_4RectESC_tht+0x648>
 801536e:	2b00      	cmp	r3, #0
 8015370:	f300 80b9 	bgt.w	80154e6 <_ZN8touchgfx3LCD22drawTextureMapTriangleERKNS_14DrawingSurfaceEPKNS_7Point3DERKNS_14TextureSurfaceERKNS_4RectESC_tht+0x64a>
 8015374:	6967      	ldr	r7, [r4, #20]
 8015376:	9b0c      	ldr	r3, [sp, #48]	; 0x30
 8015378:	443b      	add	r3, r7
 801537a:	461f      	mov	r7, r3
 801537c:	9b0d      	ldr	r3, [sp, #52]	; 0x34
 801537e:	1bdf      	subs	r7, r3, r7
 8015380:	4297      	cmp	r7, r2
 8015382:	bfa8      	it	ge
 8015384:	4617      	movge	r7, r2
 8015386:	f10d 0850 	add.w	r8, sp, #80	; 0x50
 801538a:	2f00      	cmp	r7, #0
 801538c:	f340 813c 	ble.w	8015608 <_ZN8touchgfx3LCD22drawTextureMapTriangleERKNS_14DrawingSurfaceEPKNS_7Point3DERKNS_14TextureSurfaceERKNS_4RectESC_tht+0x76c>
 8015390:	9b64      	ldr	r3, [sp, #400]	; 0x190
 8015392:	6829      	ldr	r1, [r5, #0]
 8015394:	f9b3 2000 	ldrsh.w	r2, [r3]
 8015398:	f9bb 3000 	ldrsh.w	r3, [fp]
 801539c:	6820      	ldr	r0, [r4, #0]
 801539e:	4411      	add	r1, r2
 80153a0:	4299      	cmp	r1, r3
 80153a2:	dd1a      	ble.n	80153da <_ZN8touchgfx3LCD22drawTextureMapTriangleERKNS_14DrawingSurfaceEPKNS_7Point3DERKNS_14TextureSurfaceERKNS_4RectESC_tht+0x53e>
 80153a4:	f8bb 1004 	ldrh.w	r1, [fp, #4]
 80153a8:	440b      	add	r3, r1
 80153aa:	4402      	add	r2, r0
 80153ac:	b21b      	sxth	r3, r3
 80153ae:	429a      	cmp	r2, r3
 80153b0:	dc13      	bgt.n	80153da <_ZN8touchgfx3LCD22drawTextureMapTriangleERKNS_14DrawingSurfaceEPKNS_7Point3DERKNS_14TextureSurfaceERKNS_4RectESC_tht+0x53e>
 80153b2:	9b09      	ldr	r3, [sp, #36]	; 0x24
 80153b4:	9a10      	ldr	r2, [sp, #64]	; 0x40
 80153b6:	681b      	ldr	r3, [r3, #0]
 80153b8:	9206      	str	r2, [sp, #24]
 80153ba:	9a0b      	ldr	r2, [sp, #44]	; 0x2c
 80153bc:	9205      	str	r2, [sp, #20]
 80153be:	9a0a      	ldr	r2, [sp, #40]	; 0x28
 80153c0:	9500      	str	r5, [sp, #0]
 80153c2:	e9cd b203 	strd	fp, r2, [sp, #12]
 80153c6:	9a64      	ldr	r2, [sp, #400]	; 0x190
 80153c8:	9809      	ldr	r0, [sp, #36]	; 0x24
 80153ca:	e9cd 8201 	strd	r8, r2, [sp, #4]
 80153ce:	a912      	add	r1, sp, #72	; 0x48
 80153d0:	f8d3 9048 	ldr.w	r9, [r3, #72]	; 0x48
 80153d4:	aa49      	add	r2, sp, #292	; 0x124
 80153d6:	4623      	mov	r3, r4
 80153d8:	47c8      	blx	r9
 80153da:	e9d4 2300 	ldrd	r2, r3, [r4]
 80153de:	441a      	add	r2, r3
 80153e0:	6963      	ldr	r3, [r4, #20]
 80153e2:	ed94 7a0a 	vldr	s14, [r4, #40]	; 0x28
 80153e6:	edd4 7a0b 	vldr	s15, [r4, #44]	; 0x2c
 80153ea:	edd4 6a0e 	vldr	s13, [r4, #56]	; 0x38
 80153ee:	68a1      	ldr	r1, [r4, #8]
 80153f0:	ed94 6a08 	vldr	s12, [r4, #32]
 80153f4:	6022      	str	r2, [r4, #0]
 80153f6:	3301      	adds	r3, #1
 80153f8:	6163      	str	r3, [r4, #20]
 80153fa:	69a3      	ldr	r3, [r4, #24]
 80153fc:	ee37 7a27 	vadd.f32	s14, s14, s15
 8015400:	3b01      	subs	r3, #1
 8015402:	edd4 7a0d 	vldr	s15, [r4, #52]	; 0x34
 8015406:	61a3      	str	r3, [r4, #24]
 8015408:	6923      	ldr	r3, [r4, #16]
 801540a:	ed84 7a0a 	vstr	s14, [r4, #40]	; 0x28
 801540e:	ee77 7aa6 	vadd.f32	s15, s15, s13
 8015412:	edd4 6a07 	vldr	s13, [r4, #28]
 8015416:	edc4 7a0d 	vstr	s15, [r4, #52]	; 0x34
 801541a:	440b      	add	r3, r1
 801541c:	68e1      	ldr	r1, [r4, #12]
 801541e:	6123      	str	r3, [r4, #16]
 8015420:	ee76 6a86 	vadd.f32	s13, s13, s12
 8015424:	428b      	cmp	r3, r1
 8015426:	edc4 6a07 	vstr	s13, [r4, #28]
 801542a:	db15      	blt.n	8015458 <_ZN8touchgfx3LCD22drawTextureMapTriangleERKNS_14DrawingSurfaceEPKNS_7Point3DERKNS_14TextureSurfaceERKNS_4RectESC_tht+0x5bc>
 801542c:	ed94 6a09 	vldr	s12, [r4, #36]	; 0x24
 8015430:	ee76 6a26 	vadd.f32	s13, s12, s13
 8015434:	3201      	adds	r2, #1
 8015436:	edc4 6a07 	vstr	s13, [r4, #28]
 801543a:	edd4 6a0c 	vldr	s13, [r4, #48]	; 0x30
 801543e:	6022      	str	r2, [r4, #0]
 8015440:	ee36 7a87 	vadd.f32	s14, s13, s14
 8015444:	1a5b      	subs	r3, r3, r1
 8015446:	ed84 7a0a 	vstr	s14, [r4, #40]	; 0x28
 801544a:	ed94 7a0f 	vldr	s14, [r4, #60]	; 0x3c
 801544e:	6123      	str	r3, [r4, #16]
 8015450:	ee77 7a27 	vadd.f32	s15, s14, s15
 8015454:	edc4 7a0d 	vstr	s15, [r4, #52]	; 0x34
 8015458:	e9d5 2300 	ldrd	r2, r3, [r5]
 801545c:	441a      	add	r2, r3
 801545e:	696b      	ldr	r3, [r5, #20]
 8015460:	ed95 7a0a 	vldr	s14, [r5, #40]	; 0x28
 8015464:	edd5 7a0b 	vldr	s15, [r5, #44]	; 0x2c
 8015468:	edd5 6a0e 	vldr	s13, [r5, #56]	; 0x38
 801546c:	68a9      	ldr	r1, [r5, #8]
 801546e:	ed95 6a08 	vldr	s12, [r5, #32]
 8015472:	602a      	str	r2, [r5, #0]
 8015474:	3301      	adds	r3, #1
 8015476:	616b      	str	r3, [r5, #20]
 8015478:	69ab      	ldr	r3, [r5, #24]
 801547a:	ee37 7a27 	vadd.f32	s14, s14, s15
 801547e:	3b01      	subs	r3, #1
 8015480:	edd5 7a0d 	vldr	s15, [r5, #52]	; 0x34
 8015484:	61ab      	str	r3, [r5, #24]
 8015486:	692b      	ldr	r3, [r5, #16]
 8015488:	ed85 7a0a 	vstr	s14, [r5, #40]	; 0x28
 801548c:	ee77 7aa6 	vadd.f32	s15, s15, s13
 8015490:	edd5 6a07 	vldr	s13, [r5, #28]
 8015494:	edc5 7a0d 	vstr	s15, [r5, #52]	; 0x34
 8015498:	440b      	add	r3, r1
 801549a:	68e9      	ldr	r1, [r5, #12]
 801549c:	612b      	str	r3, [r5, #16]
 801549e:	ee76 6a86 	vadd.f32	s13, s13, s12
 80154a2:	428b      	cmp	r3, r1
 80154a4:	edc5 6a07 	vstr	s13, [r5, #28]
 80154a8:	db15      	blt.n	80154d6 <_ZN8touchgfx3LCD22drawTextureMapTriangleERKNS_14DrawingSurfaceEPKNS_7Point3DERKNS_14TextureSurfaceERKNS_4RectESC_tht+0x63a>
 80154aa:	ed95 6a09 	vldr	s12, [r5, #36]	; 0x24
 80154ae:	ee76 6a26 	vadd.f32	s13, s12, s13
 80154b2:	3201      	adds	r2, #1
 80154b4:	edc5 6a07 	vstr	s13, [r5, #28]
 80154b8:	edd5 6a0c 	vldr	s13, [r5, #48]	; 0x30
 80154bc:	602a      	str	r2, [r5, #0]
 80154be:	ee36 7a87 	vadd.f32	s14, s13, s14
 80154c2:	1a5b      	subs	r3, r3, r1
 80154c4:	ed85 7a0a 	vstr	s14, [r5, #40]	; 0x28
 80154c8:	ed95 7a0f 	vldr	s14, [r5, #60]	; 0x3c
 80154cc:	612b      	str	r3, [r5, #16]
 80154ce:	ee77 7a27 	vadd.f32	s15, s14, s15
 80154d2:	edc5 7a0d 	vstr	s15, [r5, #52]	; 0x34
 80154d6:	3f01      	subs	r7, #1
 80154d8:	e757      	b.n	801538a <_ZN8touchgfx3LCD22drawTextureMapTriangleERKNS_14DrawingSurfaceEPKNS_7Point3DERKNS_14TextureSurfaceERKNS_4RectESC_tht+0x4ee>
 80154da:	ad39      	add	r5, sp, #228	; 0xe4
 80154dc:	ac19      	add	r4, sp, #100	; 0x64
 80154de:	e72d      	b.n	801533c <_ZN8touchgfx3LCD22drawTextureMapTriangleERKNS_14DrawingSurfaceEPKNS_7Point3DERKNS_14TextureSurfaceERKNS_4RectESC_tht+0x4a0>
 80154e0:	4613      	mov	r3, r2
 80154e2:	e744      	b.n	801536e <_ZN8touchgfx3LCD22drawTextureMapTriangleERKNS_14DrawingSurfaceEPKNS_7Point3DERKNS_14TextureSurfaceERKNS_4RectESC_tht+0x4d2>
 80154e4:	4613      	mov	r3, r2
 80154e6:	e9dd 0a39 	ldrd	r0, sl, [sp, #228]	; 0xe4
 80154ea:	9e3b      	ldr	r6, [sp, #236]	; 0xec
 80154ec:	f8dd c0f8 	ldr.w	ip, [sp, #248]	; 0xf8
 80154f0:	ed9d 7a43 	vldr	s14, [sp, #268]	; 0x10c
 80154f4:	eddd 4a44 	vldr	s9, [sp, #272]	; 0x110
 80154f8:	eddd 7a46 	vldr	s15, [sp, #280]	; 0x118
 80154fc:	ed9d 4a47 	vldr	s8, [sp, #284]	; 0x11c
 8015500:	eddd 6a40 	vldr	s13, [sp, #256]	; 0x100
 8015504:	eddd 3a41 	vldr	s7, [sp, #260]	; 0x104
 8015508:	993d      	ldr	r1, [sp, #244]	; 0xf4
 801550a:	f8dd 80f0 	ldr.w	r8, [sp, #240]	; 0xf0
 801550e:	ed9d 5a42 	vldr	s10, [sp, #264]	; 0x108
 8015512:	eddd 5a45 	vldr	s11, [sp, #276]	; 0x114
 8015516:	ed9d 6a48 	vldr	s12, [sp, #288]	; 0x120
 801551a:	960e      	str	r6, [sp, #56]	; 0x38
 801551c:	469e      	mov	lr, r3
 801551e:	461f      	mov	r7, r3
 8015520:	f04f 0900 	mov.w	r9, #0
 8015524:	2f00      	cmp	r7, #0
 8015526:	d146      	bne.n	80155b6 <_ZN8touchgfx3LCD22drawTextureMapTriangleERKNS_14DrawingSurfaceEPKNS_7Point3DERKNS_14TextureSurfaceERKNS_4RectESC_tht+0x71a>
 8015528:	449c      	add	ip, r3
 801552a:	1ad7      	subs	r7, r2, r3
 801552c:	f1b9 0f00 	cmp.w	r9, #0
 8015530:	d009      	beq.n	8015546 <_ZN8touchgfx3LCD22drawTextureMapTriangleERKNS_14DrawingSurfaceEPKNS_7Point3DERKNS_14TextureSurfaceERKNS_4RectESC_tht+0x6aa>
 8015532:	e9cd c73e 	strd	ip, r7, [sp, #248]	; 0xf8
 8015536:	9039      	str	r0, [sp, #228]	; 0xe4
 8015538:	913d      	str	r1, [sp, #244]	; 0xf4
 801553a:	edcd 6a40 	vstr	s13, [sp, #256]	; 0x100
 801553e:	ed8d 7a43 	vstr	s14, [sp, #268]	; 0x10c
 8015542:	edcd 7a46 	vstr	s15, [sp, #280]	; 0x118
 8015546:	991b      	ldr	r1, [sp, #108]	; 0x6c
 8015548:	910e      	str	r1, [sp, #56]	; 0x38
 801554a:	e9dd 0a19 	ldrd	r0, sl, [sp, #100]	; 0x64
 801554e:	e9dd c71e 	ldrd	ip, r7, [sp, #120]	; 0x78
 8015552:	e9dd 911c 	ldrd	r9, r1, [sp, #112]	; 0x70
 8015556:	eddd 4a24 	vldr	s9, [sp, #144]	; 0x90
 801555a:	eddd 6a23 	vldr	s13, [sp, #140]	; 0x8c
 801555e:	ed9d 4a27 	vldr	s8, [sp, #156]	; 0x9c
 8015562:	ed9d 7a26 	vldr	s14, [sp, #152]	; 0x98
 8015566:	eddd 3a21 	vldr	s7, [sp, #132]	; 0x84
 801556a:	eddd 7a20 	vldr	s15, [sp, #128]	; 0x80
 801556e:	ed9d 5a22 	vldr	s10, [sp, #136]	; 0x88
 8015572:	eddd 5a25 	vldr	s11, [sp, #148]	; 0x94
 8015576:	ed9d 6a28 	vldr	s12, [sp, #160]	; 0xa0
 801557a:	f04f 0800 	mov.w	r8, #0
 801557e:	f1be 0f00 	cmp.w	lr, #0
 8015582:	d030      	beq.n	80155e6 <_ZN8touchgfx3LCD22drawTextureMapTriangleERKNS_14DrawingSurfaceEPKNS_7Point3DERKNS_14TextureSurfaceERKNS_4RectESC_tht+0x74a>
 8015584:	9e0e      	ldr	r6, [sp, #56]	; 0x38
 8015586:	4431      	add	r1, r6
 8015588:	4549      	cmp	r1, r9
 801558a:	4450      	add	r0, sl
 801558c:	ee76 6aa4 	vadd.f32	s13, s13, s9
 8015590:	ee37 7a04 	vadd.f32	s14, s14, s8
 8015594:	ee77 7aa3 	vadd.f32	s15, s15, s7
 8015598:	db08      	blt.n	80155ac <_ZN8touchgfx3LCD22drawTextureMapTriangleERKNS_14DrawingSurfaceEPKNS_7Point3DERKNS_14TextureSurfaceERKNS_4RectESC_tht+0x710>
 801559a:	ee77 7a85 	vadd.f32	s15, s15, s10
 801559e:	ee76 6aa5 	vadd.f32	s13, s13, s11
 80155a2:	ee37 7a06 	vadd.f32	s14, s14, s12
 80155a6:	3001      	adds	r0, #1
 80155a8:	eba1 0109 	sub.w	r1, r1, r9
 80155ac:	f10e 3eff 	add.w	lr, lr, #4294967295
 80155b0:	f04f 0801 	mov.w	r8, #1
 80155b4:	e7e3      	b.n	801557e <_ZN8touchgfx3LCD22drawTextureMapTriangleERKNS_14DrawingSurfaceEPKNS_7Point3DERKNS_14TextureSurfaceERKNS_4RectESC_tht+0x6e2>
 80155b6:	9e0e      	ldr	r6, [sp, #56]	; 0x38
 80155b8:	4431      	add	r1, r6
 80155ba:	4541      	cmp	r1, r8
 80155bc:	4450      	add	r0, sl
 80155be:	ee37 7a24 	vadd.f32	s14, s14, s9
 80155c2:	ee77 7a84 	vadd.f32	s15, s15, s8
 80155c6:	ee76 6aa3 	vadd.f32	s13, s13, s7
 80155ca:	db08      	blt.n	80155de <_ZN8touchgfx3LCD22drawTextureMapTriangleERKNS_14DrawingSurfaceEPKNS_7Point3DERKNS_14TextureSurfaceERKNS_4RectESC_tht+0x742>
 80155cc:	ee76 6a85 	vadd.f32	s13, s13, s10
 80155d0:	ee37 7a25 	vadd.f32	s14, s14, s11
 80155d4:	ee77 7a86 	vadd.f32	s15, s15, s12
 80155d8:	3001      	adds	r0, #1
 80155da:	eba1 0108 	sub.w	r1, r1, r8
 80155de:	3f01      	subs	r7, #1
 80155e0:	f04f 0901 	mov.w	r9, #1
 80155e4:	e79e      	b.n	8015524 <_ZN8touchgfx3LCD22drawTextureMapTriangleERKNS_14DrawingSurfaceEPKNS_7Point3DERKNS_14TextureSurfaceERKNS_4RectESC_tht+0x688>
 80155e6:	449c      	add	ip, r3
 80155e8:	1aff      	subs	r7, r7, r3
 80155ea:	f1b8 0f00 	cmp.w	r8, #0
 80155ee:	d009      	beq.n	8015604 <_ZN8touchgfx3LCD22drawTextureMapTriangleERKNS_14DrawingSurfaceEPKNS_7Point3DERKNS_14TextureSurfaceERKNS_4RectESC_tht+0x768>
 80155f0:	e9cd c71e 	strd	ip, r7, [sp, #120]	; 0x78
 80155f4:	9019      	str	r0, [sp, #100]	; 0x64
 80155f6:	edcd 6a23 	vstr	s13, [sp, #140]	; 0x8c
 80155fa:	ed8d 7a26 	vstr	s14, [sp, #152]	; 0x98
 80155fe:	edcd 7a20 	vstr	s15, [sp, #128]	; 0x80
 8015602:	911d      	str	r1, [sp, #116]	; 0x74
 8015604:	1ad2      	subs	r2, r2, r3
 8015606:	e6b5      	b.n	8015374 <_ZN8touchgfx3LCD22drawTextureMapTriangleERKNS_14DrawingSurfaceEPKNS_7Point3DERKNS_14TextureSurfaceERKNS_4RectESC_tht+0x4d8>
 8015608:	9b0f      	ldr	r3, [sp, #60]	; 0x3c
 801560a:	681b      	ldr	r3, [r3, #0]
 801560c:	b923      	cbnz	r3, 8015618 <_ZN8touchgfx3LCD22drawTextureMapTriangleERKNS_14DrawingSurfaceEPKNS_7Point3DERKNS_14TextureSurfaceERKNS_4RectESC_tht+0x77c>
 801560e:	4b04      	ldr	r3, [pc, #16]	; (8015620 <_ZN8touchgfx3LCD22drawTextureMapTriangleERKNS_14DrawingSurfaceEPKNS_7Point3DERKNS_14TextureSurfaceERKNS_4RectESC_tht+0x784>)
 8015610:	6818      	ldr	r0, [r3, #0]
 8015612:	6803      	ldr	r3, [r0, #0]
 8015614:	6adb      	ldr	r3, [r3, #44]	; 0x2c
 8015616:	4798      	blx	r3
 8015618:	b05b      	add	sp, #364	; 0x16c
 801561a:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
 801561e:	bf00      	nop
 8015620:	2001381c 	.word	0x2001381c

08015624 <_ZN8touchgfx3LCD22WideTextInternalStructC1ERNS_12TextProviderEtthPKNS_4FontEsNS_14WideTextActionE>:
 8015624:	b570      	push	{r4, r5, r6, lr}
 8015626:	4604      	mov	r4, r0
 8015628:	f89d 601c 	ldrb.w	r6, [sp, #28]
 801562c:	9805      	ldr	r0, [sp, #20]
 801562e:	6061      	str	r1, [r4, #4]
 8015630:	2500      	movs	r5, #0
 8015632:	f89d 1010 	ldrb.w	r1, [sp, #16]
 8015636:	8263      	strh	r3, [r4, #18]
 8015638:	f9bd 3018 	ldrsh.w	r3, [sp, #24]
 801563c:	8025      	strh	r5, [r4, #0]
 801563e:	7221      	strb	r1, [r4, #8]
 8015640:	7266      	strb	r6, [r4, #9]
 8015642:	60e0      	str	r0, [r4, #12]
 8015644:	8222      	strh	r2, [r4, #16]
 8015646:	82a3      	strh	r3, [r4, #20]
 8015648:	82e5      	strh	r5, [r4, #22]
 801564a:	8325      	strh	r5, [r4, #24]
 801564c:	8365      	strh	r5, [r4, #26]
 801564e:	83a5      	strh	r5, [r4, #28]
 8015650:	83e5      	strh	r5, [r4, #30]
 8015652:	8425      	strh	r5, [r4, #32]
 8015654:	f884 5022 	strb.w	r5, [r4, #34]	; 0x22
 8015658:	b32e      	cbz	r6, 80156a6 <_ZN8touchgfx3LCD22WideTextInternalStructC1ERNS_12TextProviderEtthPKNS_4FontEsNS_14WideTextActionE+0x82>
 801565a:	6803      	ldr	r3, [r0, #0]
 801565c:	695b      	ldr	r3, [r3, #20]
 801565e:	4798      	blx	r3
 8015660:	4606      	mov	r6, r0
 8015662:	b300      	cbz	r0, 80156a6 <_ZN8touchgfx3LCD22WideTextInternalStructC1ERNS_12TextProviderEtthPKNS_4FontEsNS_14WideTextActionE+0x82>
 8015664:	68e0      	ldr	r0, [r4, #12]
 8015666:	6803      	ldr	r3, [r0, #0]
 8015668:	4631      	mov	r1, r6
 801566a:	68db      	ldr	r3, [r3, #12]
 801566c:	4798      	blx	r3
 801566e:	4605      	mov	r5, r0
 8015670:	b1c8      	cbz	r0, 80156a6 <_ZN8touchgfx3LCD22WideTextInternalStructC1ERNS_12TextProviderEtthPKNS_4FontEsNS_14WideTextActionE+0x82>
 8015672:	7b43      	ldrb	r3, [r0, #13]
 8015674:	7a82      	ldrb	r2, [r0, #10]
 8015676:	005b      	lsls	r3, r3, #1
 8015678:	f403 7380 	and.w	r3, r3, #256	; 0x100
 801567c:	4313      	orrs	r3, r2
 801567e:	8423      	strh	r3, [r4, #32]
 8015680:	7a63      	ldrb	r3, [r4, #9]
 8015682:	2b06      	cmp	r3, #6
 8015684:	d10f      	bne.n	80156a6 <_ZN8touchgfx3LCD22WideTextInternalStructC1ERNS_12TextProviderEtthPKNS_4FontEsNS_14WideTextActionE+0x82>
 8015686:	68e0      	ldr	r0, [r4, #12]
 8015688:	6803      	ldr	r3, [r0, #0]
 801568a:	462a      	mov	r2, r5
 801568c:	6c5b      	ldr	r3, [r3, #68]	; 0x44
 801568e:	4631      	mov	r1, r6
 8015690:	4798      	blx	r3
 8015692:	7b6b      	ldrb	r3, [r5, #13]
 8015694:	005b      	lsls	r3, r3, #1
 8015696:	f403 7280 	and.w	r2, r3, #256	; 0x100
 801569a:	7aab      	ldrb	r3, [r5, #10]
 801569c:	4313      	orrs	r3, r2
 801569e:	4418      	add	r0, r3
 80156a0:	8c23      	ldrh	r3, [r4, #32]
 80156a2:	4418      	add	r0, r3
 80156a4:	8420      	strh	r0, [r4, #32]
 80156a6:	4620      	mov	r0, r4
 80156a8:	bd70      	pop	{r4, r5, r6, pc}

080156aa <_ZN8touchgfx3LCD11stringWidthERNS_12TextProviderERKNS_4FontEih>:
 80156aa:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 80156ae:	2400      	movs	r4, #0
 80156b0:	b085      	sub	sp, #20
 80156b2:	4681      	mov	r9, r0
 80156b4:	4688      	mov	r8, r1
 80156b6:	4692      	mov	sl, r2
 80156b8:	469b      	mov	fp, r3
 80156ba:	4627      	mov	r7, r4
 80156bc:	4625      	mov	r5, r4
 80156be:	4626      	mov	r6, r4
 80156c0:	4554      	cmp	r4, sl
 80156c2:	da2a      	bge.n	801571a <_ZN8touchgfx3LCD11stringWidthERNS_12TextProviderERKNS_4FontEih+0x70>
 80156c4:	2300      	movs	r3, #0
 80156c6:	9303      	str	r3, [sp, #12]
 80156c8:	f64f 63ff 	movw	r3, #65279	; 0xfeff
 80156cc:	429d      	cmp	r5, r3
 80156ce:	d004      	beq.n	80156da <_ZN8touchgfx3LCD11stringWidthERNS_12TextProviderERKNS_4FontEih+0x30>
 80156d0:	f242 030b 	movw	r3, #8203	; 0x200b
 80156d4:	429d      	cmp	r5, r3
 80156d6:	bf18      	it	ne
 80156d8:	462f      	movne	r7, r5
 80156da:	ab03      	add	r3, sp, #12
 80156dc:	4642      	mov	r2, r8
 80156de:	4659      	mov	r1, fp
 80156e0:	4648      	mov	r0, r9
 80156e2:	f003 f9a3 	bl	8018a2c <_ZN8touchgfx12TextProvider15getNextLigatureEhPKNS_4FontERPKNS_9GlyphNodeE>
 80156e6:	4605      	mov	r5, r0
 80156e8:	b1b8      	cbz	r0, 801571a <_ZN8touchgfx3LCD11stringWidthERNS_12TextProviderERKNS_4FontEih+0x70>
 80156ea:	280a      	cmp	r0, #10
 80156ec:	d015      	beq.n	801571a <_ZN8touchgfx3LCD11stringWidthERNS_12TextProviderERKNS_4FontEih+0x70>
 80156ee:	9a03      	ldr	r2, [sp, #12]
 80156f0:	b18a      	cbz	r2, 8015716 <_ZN8touchgfx3LCD11stringWidthERNS_12TextProviderERKNS_4FontEih+0x6c>
 80156f2:	7b50      	ldrb	r0, [r2, #13]
 80156f4:	7a93      	ldrb	r3, [r2, #10]
 80156f6:	8895      	ldrh	r5, [r2, #4]
 80156f8:	0040      	lsls	r0, r0, #1
 80156fa:	f400 7080 	and.w	r0, r0, #256	; 0x100
 80156fe:	4303      	orrs	r3, r0
 8015700:	9301      	str	r3, [sp, #4]
 8015702:	f8d8 3000 	ldr.w	r3, [r8]
 8015706:	4639      	mov	r1, r7
 8015708:	6c5b      	ldr	r3, [r3, #68]	; 0x44
 801570a:	4640      	mov	r0, r8
 801570c:	4798      	blx	r3
 801570e:	9b01      	ldr	r3, [sp, #4]
 8015710:	4418      	add	r0, r3
 8015712:	4406      	add	r6, r0
 8015714:	b2b6      	uxth	r6, r6
 8015716:	3401      	adds	r4, #1
 8015718:	e7d2      	b.n	80156c0 <_ZN8touchgfx3LCD11stringWidthERNS_12TextProviderERKNS_4FontEih+0x16>
 801571a:	4630      	mov	r0, r6
 801571c:	b005      	add	sp, #20
 801571e:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}

08015722 <_ZN8touchgfx3LCD10rotateRectERNS_4RectERKS1_NS_12TextRotationE>:
 8015722:	2a02      	cmp	r2, #2
 8015724:	b530      	push	{r4, r5, lr}
 8015726:	d011      	beq.n	801574c <_ZN8touchgfx3LCD10rotateRectERNS_4RectERKS1_NS_12TextRotationE+0x2a>
 8015728:	2a03      	cmp	r2, #3
 801572a:	d01c      	beq.n	8015766 <_ZN8touchgfx3LCD10rotateRectERNS_4RectERKS1_NS_12TextRotationE+0x44>
 801572c:	2a01      	cmp	r2, #1
 801572e:	d10c      	bne.n	801574a <_ZN8touchgfx3LCD10rotateRectERNS_4RectERKS1_NS_12TextRotationE+0x28>
 8015730:	888b      	ldrh	r3, [r1, #4]
 8015732:	8801      	ldrh	r1, [r0, #0]
 8015734:	f9b0 2004 	ldrsh.w	r2, [r0, #4]
 8015738:	8844      	ldrh	r4, [r0, #2]
 801573a:	8004      	strh	r4, [r0, #0]
 801573c:	1a5b      	subs	r3, r3, r1
 801573e:	1a9b      	subs	r3, r3, r2
 8015740:	f9b0 1006 	ldrsh.w	r1, [r0, #6]
 8015744:	8043      	strh	r3, [r0, #2]
 8015746:	8081      	strh	r1, [r0, #4]
 8015748:	80c2      	strh	r2, [r0, #6]
 801574a:	bd30      	pop	{r4, r5, pc}
 801574c:	88cb      	ldrh	r3, [r1, #6]
 801574e:	8842      	ldrh	r2, [r0, #2]
 8015750:	1a9b      	subs	r3, r3, r2
 8015752:	88c2      	ldrh	r2, [r0, #6]
 8015754:	1a9b      	subs	r3, r3, r2
 8015756:	888a      	ldrh	r2, [r1, #4]
 8015758:	8801      	ldrh	r1, [r0, #0]
 801575a:	8043      	strh	r3, [r0, #2]
 801575c:	1a52      	subs	r2, r2, r1
 801575e:	8881      	ldrh	r1, [r0, #4]
 8015760:	1a52      	subs	r2, r2, r1
 8015762:	8002      	strh	r2, [r0, #0]
 8015764:	e7f1      	b.n	801574a <_ZN8touchgfx3LCD10rotateRectERNS_4RectERKS1_NS_12TextRotationE+0x28>
 8015766:	88cb      	ldrh	r3, [r1, #6]
 8015768:	8841      	ldrh	r1, [r0, #2]
 801576a:	f9b0 2006 	ldrsh.w	r2, [r0, #6]
 801576e:	f9b0 5000 	ldrsh.w	r5, [r0]
 8015772:	f9b0 4004 	ldrsh.w	r4, [r0, #4]
 8015776:	8045      	strh	r5, [r0, #2]
 8015778:	1a5b      	subs	r3, r3, r1
 801577a:	1a9b      	subs	r3, r3, r2
 801577c:	8003      	strh	r3, [r0, #0]
 801577e:	8082      	strh	r2, [r0, #4]
 8015780:	80c4      	strh	r4, [r0, #6]
 8015782:	e7e2      	b.n	801574a <_ZN8touchgfx3LCD10rotateRectERNS_4RectERKS1_NS_12TextRotationE+0x28>

08015784 <_ZN8touchgfx3LCD18drawStringInternalEPtPKNS_4RectEssRS3_PKNS0_13StringVisualsEhRNS_12TextProviderEib>:
 8015784:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 8015788:	b09f      	sub	sp, #124	; 0x7c
 801578a:	9116      	str	r1, [sp, #88]	; 0x58
 801578c:	9317      	str	r3, [sp, #92]	; 0x5c
 801578e:	9929      	ldr	r1, [sp, #164]	; 0xa4
 8015790:	9b29      	ldr	r3, [sp, #164]	; 0xa4
 8015792:	8809      	ldrh	r1, [r1, #0]
 8015794:	889b      	ldrh	r3, [r3, #4]
 8015796:	f8dd 80a8 	ldr.w	r8, [sp, #168]	; 0xa8
 801579a:	9212      	str	r2, [sp, #72]	; 0x48
 801579c:	440b      	add	r3, r1
 801579e:	b21b      	sxth	r3, r3
 80157a0:	9310      	str	r3, [sp, #64]	; 0x40
 80157a2:	f8d8 3000 	ldr.w	r3, [r8]
 80157a6:	f89d 20b8 	ldrb.w	r2, [sp, #184]	; 0xb8
 80157aa:	7b19      	ldrb	r1, [r3, #12]
 80157ac:	7adb      	ldrb	r3, [r3, #11]
 80157ae:	9011      	str	r0, [sp, #68]	; 0x44
 80157b0:	f89d b0ac 	ldrb.w	fp, [sp, #172]	; 0xac
 80157b4:	9114      	str	r1, [sp, #80]	; 0x50
 80157b6:	9315      	str	r3, [sp, #84]	; 0x54
 80157b8:	f9bd 60a0 	ldrsh.w	r6, [sp, #160]	; 0xa0
 80157bc:	2a00      	cmp	r2, #0
 80157be:	d06a      	beq.n	8015896 <_ZN8touchgfx3LCD18drawStringInternalEPtPKNS_4RectEssRS3_PKNS0_13StringVisualsEhRNS_12TextProviderEib+0x112>
 80157c0:	f898 3010 	ldrb.w	r3, [r8, #16]
 80157c4:	9a2d      	ldr	r2, [sp, #180]	; 0xb4
 80157c6:	2b06      	cmp	r3, #6
 80157c8:	bf14      	ite	ne
 80157ca:	2301      	movne	r3, #1
 80157cc:	2302      	moveq	r3, #2
 80157ce:	4413      	add	r3, r2
 80157d0:	f04f 0900 	mov.w	r9, #0
 80157d4:	930f      	str	r3, [sp, #60]	; 0x3c
 80157d6:	f8cd 9038 	str.w	r9, [sp, #56]	; 0x38
 80157da:	464c      	mov	r4, r9
 80157dc:	f8cd 9034 	str.w	r9, [sp, #52]	; 0x34
 80157e0:	e9dd 320e 	ldrd	r3, r2, [sp, #56]	; 0x38
 80157e4:	4293      	cmp	r3, r2
 80157e6:	f280 808f 	bge.w	8015908 <_ZN8touchgfx3LCD18drawStringInternalEPtPKNS_4RectEssRS3_PKNS0_13StringVisualsEhRNS_12TextProviderEib+0x184>
 80157ea:	2300      	movs	r3, #0
 80157ec:	e9cd 331c 	strd	r3, r3, [sp, #112]	; 0x70
 80157f0:	f88d 306f 	strb.w	r3, [sp, #111]	; 0x6f
 80157f4:	f64f 63ff 	movw	r3, #65279	; 0xfeff
 80157f8:	429c      	cmp	r4, r3
 80157fa:	d006      	beq.n	801580a <_ZN8touchgfx3LCD18drawStringInternalEPtPKNS_4RectEssRS3_PKNS0_13StringVisualsEhRNS_12TextProviderEib+0x86>
 80157fc:	9b0d      	ldr	r3, [sp, #52]	; 0x34
 80157fe:	f242 020b 	movw	r2, #8203	; 0x200b
 8015802:	4294      	cmp	r4, r2
 8015804:	bf18      	it	ne
 8015806:	4623      	movne	r3, r4
 8015808:	930d      	str	r3, [sp, #52]	; 0x34
 801580a:	9b0e      	ldr	r3, [sp, #56]	; 0x38
 801580c:	992d      	ldr	r1, [sp, #180]	; 0xb4
 801580e:	f8d8 2000 	ldr.w	r2, [r8]
 8015812:	428b      	cmp	r3, r1
 8015814:	db41      	blt.n	801589a <_ZN8touchgfx3LCD18drawStringInternalEPtPKNS_4RectEssRS3_PKNS0_13StringVisualsEhRNS_12TextProviderEib+0x116>
 8015816:	6813      	ldr	r3, [r2, #0]
 8015818:	4610      	mov	r0, r2
 801581a:	695b      	ldr	r3, [r3, #20]
 801581c:	4798      	blx	r3
 801581e:	4604      	mov	r4, r0
 8015820:	f8d8 0000 	ldr.w	r0, [r8]
 8015824:	6803      	ldr	r3, [r0, #0]
 8015826:	aa1d      	add	r2, sp, #116	; 0x74
 8015828:	689d      	ldr	r5, [r3, #8]
 801582a:	4621      	mov	r1, r4
 801582c:	f10d 036f 	add.w	r3, sp, #111	; 0x6f
 8015830:	47a8      	blx	r5
 8015832:	901c      	str	r0, [sp, #112]	; 0x70
 8015834:	f64f 63ff 	movw	r3, #65279	; 0xfeff
 8015838:	429c      	cmp	r4, r3
 801583a:	f000 80eb 	beq.w	8015a14 <_ZN8touchgfx3LCD18drawStringInternalEPtPKNS_4RectEssRS3_PKNS0_13StringVisualsEhRNS_12TextProviderEib+0x290>
 801583e:	f242 030b 	movw	r3, #8203	; 0x200b
 8015842:	429c      	cmp	r4, r3
 8015844:	f000 80e6 	beq.w	8015a14 <_ZN8touchgfx3LCD18drawStringInternalEPtPKNS_4RectEssRS3_PKNS0_13StringVisualsEhRNS_12TextProviderEib+0x290>
 8015848:	2c00      	cmp	r4, #0
 801584a:	f000 80f8 	beq.w	8015a3e <_ZN8touchgfx3LCD18drawStringInternalEPtPKNS_4RectEssRS3_PKNS0_13StringVisualsEhRNS_12TextProviderEib+0x2ba>
 801584e:	2c0a      	cmp	r4, #10
 8015850:	d060      	beq.n	8015914 <_ZN8touchgfx3LCD18drawStringInternalEPtPKNS_4RectEssRS3_PKNS0_13StringVisualsEhRNS_12TextProviderEib+0x190>
 8015852:	9a1c      	ldr	r2, [sp, #112]	; 0x70
 8015854:	b36a      	cbz	r2, 80158b2 <_ZN8touchgfx3LCD18drawStringInternalEPtPKNS_4RectEssRS3_PKNS0_13StringVisualsEhRNS_12TextProviderEib+0x12e>
 8015856:	8894      	ldrh	r4, [r2, #4]
 8015858:	f1bb 0f00 	cmp.w	fp, #0
 801585c:	d03b      	beq.n	80158d6 <_ZN8touchgfx3LCD18drawStringInternalEPtPKNS_4RectEssRS3_PKNS0_13StringVisualsEhRNS_12TextProviderEib+0x152>
 801585e:	f892 900d 	ldrb.w	r9, [r2, #13]
 8015862:	ea4f 0949 	mov.w	r9, r9, lsl #1
 8015866:	f409 7380 	and.w	r3, r9, #256	; 0x100
 801586a:	f892 900a 	ldrb.w	r9, [r2, #10]
 801586e:	f1bb 0f01 	cmp.w	fp, #1
 8015872:	ea49 0903 	orr.w	r9, r9, r3
 8015876:	d134      	bne.n	80158e2 <_ZN8touchgfx3LCD18drawStringInternalEPtPKNS_4RectEssRS3_PKNS0_13StringVisualsEhRNS_12TextProviderEib+0x15e>
 8015878:	9b0d      	ldr	r3, [sp, #52]	; 0x34
 801587a:	eba6 0609 	sub.w	r6, r6, r9
 801587e:	2b00      	cmp	r3, #0
 8015880:	d14f      	bne.n	8015922 <_ZN8touchgfx3LCD18drawStringInternalEPtPKNS_4RectEssRS3_PKNS0_13StringVisualsEhRNS_12TextProviderEib+0x19e>
 8015882:	9a14      	ldr	r2, [sp, #80]	; 0x50
 8015884:	eb09 0306 	add.w	r3, r9, r6
 8015888:	4413      	add	r3, r2
 801588a:	9a29      	ldr	r2, [sp, #164]	; 0xa4
 801588c:	f9b2 2000 	ldrsh.w	r2, [r2]
 8015890:	4293      	cmp	r3, r2
 8015892:	da51      	bge.n	8015938 <_ZN8touchgfx3LCD18drawStringInternalEPtPKNS_4RectEssRS3_PKNS0_13StringVisualsEhRNS_12TextProviderEib+0x1b4>
 8015894:	e038      	b.n	8015908 <_ZN8touchgfx3LCD18drawStringInternalEPtPKNS_4RectEssRS3_PKNS0_13StringVisualsEhRNS_12TextProviderEib+0x184>
 8015896:	9b2d      	ldr	r3, [sp, #180]	; 0xb4
 8015898:	e79a      	b.n	80157d0 <_ZN8touchgfx3LCD18drawStringInternalEPtPKNS_4RectEssRS3_PKNS0_13StringVisualsEhRNS_12TextProviderEib+0x4c>
 801589a:	f10d 036f 	add.w	r3, sp, #111	; 0x6f
 801589e:	9301      	str	r3, [sp, #4]
 80158a0:	ab1d      	add	r3, sp, #116	; 0x74
 80158a2:	9300      	str	r3, [sp, #0]
 80158a4:	4659      	mov	r1, fp
 80158a6:	ab1c      	add	r3, sp, #112	; 0x70
 80158a8:	982c      	ldr	r0, [sp, #176]	; 0xb0
 80158aa:	f003 f908 	bl	8018abe <_ZN8touchgfx12TextProvider15getNextLigatureEhPKNS_4FontERPKNS_9GlyphNodeERPKhRh>
 80158ae:	4604      	mov	r4, r0
 80158b0:	e7c0      	b.n	8015834 <_ZN8touchgfx3LCD18drawStringInternalEPtPKNS_4RectEssRS3_PKNS0_13StringVisualsEhRNS_12TextProviderEib+0xb0>
 80158b2:	f8d8 0000 	ldr.w	r0, [r8]
 80158b6:	6803      	ldr	r3, [r0, #0]
 80158b8:	691b      	ldr	r3, [r3, #16]
 80158ba:	4798      	blx	r3
 80158bc:	f64f 63ff 	movw	r3, #65279	; 0xfeff
 80158c0:	4298      	cmp	r0, r3
 80158c2:	f000 80a7 	beq.w	8015a14 <_ZN8touchgfx3LCD18drawStringInternalEPtPKNS_4RectEssRS3_PKNS0_13StringVisualsEhRNS_12TextProviderEib+0x290>
 80158c6:	f242 030b 	movw	r3, #8203	; 0x200b
 80158ca:	4298      	cmp	r0, r3
 80158cc:	f000 80a2 	beq.w	8015a14 <_ZN8touchgfx3LCD18drawStringInternalEPtPKNS_4RectEssRS3_PKNS0_13StringVisualsEhRNS_12TextProviderEib+0x290>
 80158d0:	f1bb 0f00 	cmp.w	fp, #0
 80158d4:	d100      	bne.n	80158d8 <_ZN8touchgfx3LCD18drawStringInternalEPtPKNS_4RectEssRS3_PKNS0_13StringVisualsEhRNS_12TextProviderEib+0x154>
 80158d6:	444e      	add	r6, r9
 80158d8:	9a1c      	ldr	r2, [sp, #112]	; 0x70
 80158da:	2a00      	cmp	r2, #0
 80158dc:	d1bf      	bne.n	801585e <_ZN8touchgfx3LCD18drawStringInternalEPtPKNS_4RectEssRS3_PKNS0_13StringVisualsEhRNS_12TextProviderEib+0xda>
 80158de:	4691      	mov	r9, r2
 80158e0:	e098      	b.n	8015a14 <_ZN8touchgfx3LCD18drawStringInternalEPtPKNS_4RectEssRS3_PKNS0_13StringVisualsEhRNS_12TextProviderEib+0x290>
 80158e2:	9b0d      	ldr	r3, [sp, #52]	; 0x34
 80158e4:	2b00      	cmp	r3, #0
 80158e6:	f000 80ac 	beq.w	8015a42 <_ZN8touchgfx3LCD18drawStringInternalEPtPKNS_4RectEssRS3_PKNS0_13StringVisualsEhRNS_12TextProviderEib+0x2be>
 80158ea:	f1bb 0f00 	cmp.w	fp, #0
 80158ee:	d118      	bne.n	8015922 <_ZN8touchgfx3LCD18drawStringInternalEPtPKNS_4RectEssRS3_PKNS0_13StringVisualsEhRNS_12TextProviderEib+0x19e>
 80158f0:	f8d8 0000 	ldr.w	r0, [r8]
 80158f4:	990d      	ldr	r1, [sp, #52]	; 0x34
 80158f6:	6803      	ldr	r3, [r0, #0]
 80158f8:	6c5b      	ldr	r3, [r3, #68]	; 0x44
 80158fa:	4798      	blx	r3
 80158fc:	4406      	add	r6, r0
 80158fe:	9b15      	ldr	r3, [sp, #84]	; 0x54
 8015900:	9a10      	ldr	r2, [sp, #64]	; 0x40
 8015902:	1af3      	subs	r3, r6, r3
 8015904:	4293      	cmp	r3, r2
 8015906:	dd17      	ble.n	8015938 <_ZN8touchgfx3LCD18drawStringInternalEPtPKNS_4RectEssRS3_PKNS0_13StringVisualsEhRNS_12TextProviderEib+0x1b4>
 8015908:	2c00      	cmp	r4, #0
 801590a:	f000 8098 	beq.w	8015a3e <_ZN8touchgfx3LCD18drawStringInternalEPtPKNS_4RectEssRS3_PKNS0_13StringVisualsEhRNS_12TextProviderEib+0x2ba>
 801590e:	2c0a      	cmp	r4, #10
 8015910:	f040 8086 	bne.w	8015a20 <_ZN8touchgfx3LCD18drawStringInternalEPtPKNS_4RectEssRS3_PKNS0_13StringVisualsEhRNS_12TextProviderEib+0x29c>
 8015914:	240a      	movs	r4, #10
 8015916:	fab4 f084 	clz	r0, r4
 801591a:	0940      	lsrs	r0, r0, #5
 801591c:	b01f      	add	sp, #124	; 0x7c
 801591e:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
 8015922:	f8d8 0000 	ldr.w	r0, [r8]
 8015926:	990d      	ldr	r1, [sp, #52]	; 0x34
 8015928:	6803      	ldr	r3, [r0, #0]
 801592a:	6c5b      	ldr	r3, [r3, #68]	; 0x44
 801592c:	4798      	blx	r3
 801592e:	f1bb 0f01 	cmp.w	fp, #1
 8015932:	eba6 0600 	sub.w	r6, r6, r0
 8015936:	d0a4      	beq.n	8015882 <_ZN8touchgfx3LCD18drawStringInternalEPtPKNS_4RectEssRS3_PKNS0_13StringVisualsEhRNS_12TextProviderEib+0xfe>
 8015938:	981c      	ldr	r0, [sp, #112]	; 0x70
 801593a:	9b29      	ldr	r3, [sp, #164]	; 0xa4
 801593c:	f990 1009 	ldrsb.w	r1, [r0, #9]
 8015940:	f9b3 7000 	ldrsh.w	r7, [r3]
 8015944:	7b43      	ldrb	r3, [r0, #13]
 8015946:	015b      	lsls	r3, r3, #5
 8015948:	f403 7280 	and.w	r2, r3, #256	; 0x100
 801594c:	7983      	ldrb	r3, [r0, #6]
 801594e:	4431      	add	r1, r6
 8015950:	4313      	orrs	r3, r2
 8015952:	440b      	add	r3, r1
 8015954:	42bb      	cmp	r3, r7
 8015956:	db5d      	blt.n	8015a14 <_ZN8touchgfx3LCD18drawStringInternalEPtPKNS_4RectEssRS3_PKNS0_13StringVisualsEhRNS_12TextProviderEib+0x290>
 8015958:	9b10      	ldr	r3, [sp, #64]	; 0x40
 801595a:	4299      	cmp	r1, r3
 801595c:	da5a      	bge.n	8015a14 <_ZN8touchgfx3LCD18drawStringInternalEPtPKNS_4RectEssRS3_PKNS0_13StringVisualsEhRNS_12TextProviderEib+0x290>
 801595e:	f8d8 0000 	ldr.w	r0, [r8]
 8015962:	6803      	ldr	r3, [r0, #0]
 8015964:	42b7      	cmp	r7, r6
 8015966:	bfc8      	it	gt
 8015968:	1bbf      	subgt	r7, r7, r6
 801596a:	6b1b      	ldr	r3, [r3, #48]	; 0x30
 801596c:	bfcc      	ite	gt
 801596e:	b2bf      	uxthgt	r7, r7
 8015970:	2700      	movle	r7, #0
 8015972:	4798      	blx	r3
 8015974:	9b1c      	ldr	r3, [sp, #112]	; 0x70
 8015976:	7b5a      	ldrb	r2, [r3, #13]
 8015978:	00d1      	lsls	r1, r2, #3
 801597a:	f401 7580 	and.w	r5, r1, #256	; 0x100
 801597e:	7a19      	ldrb	r1, [r3, #8]
 8015980:	4329      	orrs	r1, r5
 8015982:	0655      	lsls	r5, r2, #25
 8015984:	9d17      	ldr	r5, [sp, #92]	; 0x5c
 8015986:	bf44      	itt	mi
 8015988:	f5a1 7100 	submi.w	r1, r1, #512	; 0x200
 801598c:	b209      	sxthmi	r1, r1
 801598e:	1945      	adds	r5, r0, r5
 8015990:	1a6d      	subs	r5, r5, r1
 8015992:	9929      	ldr	r1, [sp, #164]	; 0xa4
 8015994:	b2ad      	uxth	r5, r5
 8015996:	f9b1 1002 	ldrsh.w	r1, [r1, #2]
 801599a:	fa0f fa85 	sxth.w	sl, r5
 801599e:	4551      	cmp	r1, sl
 80159a0:	dd3c      	ble.n	8015a1c <_ZN8touchgfx3LCD18drawStringInternalEPtPKNS_4RectEssRS3_PKNS0_13StringVisualsEhRNS_12TextProviderEib+0x298>
 80159a2:	0112      	lsls	r2, r2, #4
 80159a4:	79d8      	ldrb	r0, [r3, #7]
 80159a6:	f402 7280 	and.w	r2, r2, #256	; 0x100
 80159aa:	4302      	orrs	r2, r0
 80159ac:	4492      	add	sl, r2
 80159ae:	4551      	cmp	r1, sl
 80159b0:	dc30      	bgt.n	8015a14 <_ZN8touchgfx3LCD18drawStringInternalEPtPKNS_4RectEssRS3_PKNS0_13StringVisualsEhRNS_12TextProviderEib+0x290>
 80159b2:	1b4d      	subs	r5, r1, r5
 80159b4:	b22d      	sxth	r5, r5
 80159b6:	468a      	mov	sl, r1
 80159b8:	9319      	str	r3, [sp, #100]	; 0x64
 80159ba:	9b11      	ldr	r3, [sp, #68]	; 0x44
 80159bc:	f8d8 0000 	ldr.w	r0, [r8]
 80159c0:	681a      	ldr	r2, [r3, #0]
 80159c2:	6801      	ldr	r1, [r0, #0]
 80159c4:	6cd3      	ldr	r3, [r2, #76]	; 0x4c
 80159c6:	9a1d      	ldr	r2, [sp, #116]	; 0x74
 80159c8:	9313      	str	r3, [sp, #76]	; 0x4c
 80159ca:	9218      	str	r2, [sp, #96]	; 0x60
 80159cc:	6c09      	ldr	r1, [r1, #64]	; 0x40
 80159ce:	4788      	blx	r1
 80159d0:	f898 1006 	ldrb.w	r1, [r8, #6]
 80159d4:	910b      	str	r1, [sp, #44]	; 0x2c
 80159d6:	f898 100e 	ldrb.w	r1, [r8, #14]
 80159da:	910a      	str	r1, [sp, #40]	; 0x28
 80159dc:	f89d 106f 	ldrb.w	r1, [sp, #111]	; 0x6f
 80159e0:	9109      	str	r1, [sp, #36]	; 0x24
 80159e2:	f8d8 1008 	ldr.w	r1, [r8, #8]
 80159e6:	9b19      	ldr	r3, [sp, #100]	; 0x64
 80159e8:	9305      	str	r3, [sp, #20]
 80159ea:	b2ad      	uxth	r5, r5
 80159ec:	e9cd 0107 	strd	r0, r1, [sp, #28]
 80159f0:	e9cd 7502 	strd	r7, r5, [sp, #8]
 80159f4:	9b29      	ldr	r3, [sp, #164]	; 0xa4
 80159f6:	9304      	str	r3, [sp, #16]
 80159f8:	4437      	add	r7, r6
 80159fa:	9a18      	ldr	r2, [sp, #96]	; 0x60
 80159fc:	9b12      	ldr	r3, [sp, #72]	; 0x48
 80159fe:	9206      	str	r2, [sp, #24]
 8015a00:	b23f      	sxth	r7, r7
 8015a02:	f8cd a004 	str.w	sl, [sp, #4]
 8015a06:	9700      	str	r7, [sp, #0]
 8015a08:	681a      	ldr	r2, [r3, #0]
 8015a0a:	9916      	ldr	r1, [sp, #88]	; 0x58
 8015a0c:	685b      	ldr	r3, [r3, #4]
 8015a0e:	9811      	ldr	r0, [sp, #68]	; 0x44
 8015a10:	9d13      	ldr	r5, [sp, #76]	; 0x4c
 8015a12:	47a8      	blx	r5
 8015a14:	9b0e      	ldr	r3, [sp, #56]	; 0x38
 8015a16:	3301      	adds	r3, #1
 8015a18:	930e      	str	r3, [sp, #56]	; 0x38
 8015a1a:	e6e1      	b.n	80157e0 <_ZN8touchgfx3LCD18drawStringInternalEPtPKNS_4RectEssRS3_PKNS0_13StringVisualsEhRNS_12TextProviderEib+0x5c>
 8015a1c:	2500      	movs	r5, #0
 8015a1e:	e7cb      	b.n	80159b8 <_ZN8touchgfx3LCD18drawStringInternalEPtPKNS_4RectEssRS3_PKNS0_13StringVisualsEhRNS_12TextProviderEib+0x234>
 8015a20:	9d0e      	ldr	r5, [sp, #56]	; 0x38
 8015a22:	9b2d      	ldr	r3, [sp, #180]	; 0xb4
 8015a24:	3501      	adds	r5, #1
 8015a26:	429d      	cmp	r5, r3
 8015a28:	f6bf af75 	bge.w	8015916 <_ZN8touchgfx3LCD18drawStringInternalEPtPKNS_4RectEssRS3_PKNS0_13StringVisualsEhRNS_12TextProviderEib+0x192>
 8015a2c:	4659      	mov	r1, fp
 8015a2e:	982c      	ldr	r0, [sp, #176]	; 0xb0
 8015a30:	f7f2 fdf8 	bl	8008624 <_ZN8touchgfx12TextProvider15getNextLigatureEh>
 8015a34:	4604      	mov	r4, r0
 8015a36:	b110      	cbz	r0, 8015a3e <_ZN8touchgfx3LCD18drawStringInternalEPtPKNS_4RectEssRS3_PKNS0_13StringVisualsEhRNS_12TextProviderEib+0x2ba>
 8015a38:	280a      	cmp	r0, #10
 8015a3a:	d1f2      	bne.n	8015a22 <_ZN8touchgfx3LCD18drawStringInternalEPtPKNS_4RectEssRS3_PKNS0_13StringVisualsEhRNS_12TextProviderEib+0x29e>
 8015a3c:	e76a      	b.n	8015914 <_ZN8touchgfx3LCD18drawStringInternalEPtPKNS_4RectEssRS3_PKNS0_13StringVisualsEhRNS_12TextProviderEib+0x190>
 8015a3e:	2400      	movs	r4, #0
 8015a40:	e769      	b.n	8015916 <_ZN8touchgfx3LCD18drawStringInternalEPtPKNS_4RectEssRS3_PKNS0_13StringVisualsEhRNS_12TextProviderEib+0x192>
 8015a42:	f1bb 0f00 	cmp.w	fp, #0
 8015a46:	f43f af5a 	beq.w	80158fe <_ZN8touchgfx3LCD18drawStringInternalEPtPKNS_4RectEssRS3_PKNS0_13StringVisualsEhRNS_12TextProviderEib+0x17a>
 8015a4a:	e775      	b.n	8015938 <_ZN8touchgfx3LCD18drawStringInternalEPtPKNS_4RectEssRS3_PKNS0_13StringVisualsEhRNS_12TextProviderEib+0x1b4>

08015a4c <_ZN8touchgfx3LCD22WideTextInternalStruct7addWordEttt>:
 8015a4c:	b530      	push	{r4, r5, lr}
 8015a4e:	8ac4      	ldrh	r4, [r0, #22]
 8015a50:	8b45      	ldrh	r5, [r0, #26]
 8015a52:	8343      	strh	r3, [r0, #26]
 8015a54:	442c      	add	r4, r5
 8015a56:	1ae4      	subs	r4, r4, r3
 8015a58:	82c4      	strh	r4, [r0, #22]
 8015a5a:	8b83      	ldrh	r3, [r0, #28]
 8015a5c:	8b04      	ldrh	r4, [r0, #24]
 8015a5e:	4422      	add	r2, r4
 8015a60:	440c      	add	r4, r1
 8015a62:	1a59      	subs	r1, r3, r1
 8015a64:	83c2      	strh	r2, [r0, #30]
 8015a66:	8304      	strh	r4, [r0, #24]
 8015a68:	8381      	strh	r1, [r0, #28]
 8015a6a:	bd30      	pop	{r4, r5, pc}

08015a6c <_ZN8touchgfx3LCD22WideTextInternalStruct23scanStringLengthForLineEv>:
 8015a6c:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 8015a70:	4604      	mov	r4, r0
 8015a72:	8a47      	ldrh	r7, [r0, #18]
 8015a74:	68c0      	ldr	r0, [r0, #12]
 8015a76:	6803      	ldr	r3, [r0, #0]
 8015a78:	b085      	sub	sp, #20
 8015a7a:	6b9b      	ldr	r3, [r3, #56]	; 0x38
 8015a7c:	4798      	blx	r3
 8015a7e:	f9b4 6014 	ldrsh.w	r6, [r4, #20]
 8015a82:	7a63      	ldrb	r3, [r4, #9]
 8015a84:	eb06 0640 	add.w	r6, r6, r0, lsl #1
 8015a88:	42b7      	cmp	r7, r6
 8015a8a:	f103 33ff 	add.w	r3, r3, #4294967295
 8015a8e:	bfac      	ite	ge
 8015a90:	f04f 0900 	movge.w	r9, #0
 8015a94:	f04f 0901 	movlt.w	r9, #1
 8015a98:	2b05      	cmp	r3, #5
 8015a9a:	d804      	bhi.n	8015aa6 <_ZN8touchgfx3LCD22WideTextInternalStruct23scanStringLengthForLineEv+0x3a>
 8015a9c:	e8df f003 	tbb	[pc, r3]
 8015aa0:	470e0854 	.word	0x470e0854
 8015aa4:	4c4c      	.short	0x4c4c
 8015aa6:	2500      	movs	r5, #0
 8015aa8:	46a9      	mov	r9, r5
 8015aaa:	462e      	mov	r6, r5
 8015aac:	462f      	mov	r7, r5
 8015aae:	e00d      	b.n	8015acc <_ZN8touchgfx3LCD22WideTextInternalStruct23scanStringLengthForLineEv+0x60>
 8015ab0:	42b7      	cmp	r7, r6
 8015ab2:	bfb4      	ite	lt
 8015ab4:	2600      	movlt	r6, #0
 8015ab6:	2601      	movge	r6, #1
 8015ab8:	2500      	movs	r5, #0
 8015aba:	e7f7      	b.n	8015aac <_ZN8touchgfx3LCD22WideTextInternalStruct23scanStringLengthForLineEv+0x40>
 8015abc:	42b7      	cmp	r7, r6
 8015abe:	464d      	mov	r5, r9
 8015ac0:	f04f 0900 	mov.w	r9, #0
 8015ac4:	bfb4      	ite	lt
 8015ac6:	2600      	movlt	r6, #0
 8015ac8:	2601      	movge	r6, #1
 8015aca:	464f      	mov	r7, r9
 8015acc:	f04f 0800 	mov.w	r8, #0
 8015ad0:	f8a4 8016 	strh.w	r8, [r4, #22]
 8015ad4:	f8a4 8018 	strh.w	r8, [r4, #24]
 8015ad8:	f8cd 8004 	str.w	r8, [sp, #4]
 8015adc:	2300      	movs	r3, #0
 8015ade:	9303      	str	r3, [sp, #12]
 8015ae0:	8823      	ldrh	r3, [r4, #0]
 8015ae2:	2b20      	cmp	r3, #32
 8015ae4:	d034      	beq.n	8015b50 <_ZN8touchgfx3LCD22WideTextInternalStruct23scanStringLengthForLineEv+0xe4>
 8015ae6:	f242 010b 	movw	r1, #8203	; 0x200b
 8015aea:	1a5a      	subs	r2, r3, r1
 8015aec:	f1d2 0a00 	rsbs	sl, r2, #0
 8015af0:	eb4a 0a02 	adc.w	sl, sl, r2
 8015af4:	f64f 62ff 	movw	r2, #65279	; 0xfeff
 8015af8:	4293      	cmp	r3, r2
 8015afa:	d009      	beq.n	8015b10 <_ZN8touchgfx3LCD22WideTextInternalStruct23scanStringLengthForLineEv+0xa4>
 8015afc:	428b      	cmp	r3, r1
 8015afe:	9a01      	ldr	r2, [sp, #4]
 8015b00:	bf18      	it	ne
 8015b02:	461a      	movne	r2, r3
 8015b04:	9201      	str	r2, [sp, #4]
 8015b06:	bf0c      	ite	eq
 8015b08:	f04f 0a01 	moveq.w	sl, #1
 8015b0c:	f04f 0a00 	movne.w	sl, #0
 8015b10:	ab03      	add	r3, sp, #12
 8015b12:	68e2      	ldr	r2, [r4, #12]
 8015b14:	7a21      	ldrb	r1, [r4, #8]
 8015b16:	6860      	ldr	r0, [r4, #4]
 8015b18:	f002 ff88 	bl	8018a2c <_ZN8touchgfx12TextProvider15getNextLigatureEhPKNS_4FontERPKNS_9GlyphNodeE>
 8015b1c:	8020      	strh	r0, [r4, #0]
 8015b1e:	b9d8      	cbnz	r0, 8015b58 <_ZN8touchgfx3LCD22WideTextInternalStruct23scanStringLengthForLineEv+0xec>
 8015b20:	8ba2      	ldrh	r2, [r4, #28]
 8015b22:	2300      	movs	r3, #0
 8015b24:	4611      	mov	r1, r2
 8015b26:	4620      	mov	r0, r4
 8015b28:	f7ff ff90 	bl	8015a4c <_ZN8touchgfx3LCD22WideTextInternalStruct7addWordEttt>
 8015b2c:	e06e      	b.n	8015c0c <_ZN8touchgfx3LCD22WideTextInternalStruct23scanStringLengthForLineEv+0x1a0>
 8015b2e:	2500      	movs	r5, #0
 8015b30:	46a9      	mov	r9, r5
 8015b32:	462e      	mov	r6, r5
 8015b34:	2701      	movs	r7, #1
 8015b36:	e7c9      	b.n	8015acc <_ZN8touchgfx3LCD22WideTextInternalStruct23scanStringLengthForLineEv+0x60>
 8015b38:	42b7      	cmp	r7, r6
 8015b3a:	f04f 0500 	mov.w	r5, #0
 8015b3e:	bfb4      	ite	lt
 8015b40:	2700      	movlt	r7, #0
 8015b42:	2701      	movge	r7, #1
 8015b44:	462e      	mov	r6, r5
 8015b46:	e7c1      	b.n	8015acc <_ZN8touchgfx3LCD22WideTextInternalStruct23scanStringLengthForLineEv+0x60>
 8015b48:	2500      	movs	r5, #0
 8015b4a:	46a9      	mov	r9, r5
 8015b4c:	2601      	movs	r6, #1
 8015b4e:	e7ad      	b.n	8015aac <_ZN8touchgfx3LCD22WideTextInternalStruct23scanStringLengthForLineEv+0x40>
 8015b50:	9301      	str	r3, [sp, #4]
 8015b52:	f04f 0a01 	mov.w	sl, #1
 8015b56:	e7db      	b.n	8015b10 <_ZN8touchgfx3LCD22WideTextInternalStruct23scanStringLengthForLineEv+0xa4>
 8015b58:	8b63      	ldrh	r3, [r4, #26]
 8015b5a:	280a      	cmp	r0, #10
 8015b5c:	f103 0301 	add.w	r3, r3, #1
 8015b60:	8363      	strh	r3, [r4, #26]
 8015b62:	d0dd      	beq.n	8015b20 <_ZN8touchgfx3LCD22WideTextInternalStruct23scanStringLengthForLineEv+0xb4>
 8015b64:	9a03      	ldr	r2, [sp, #12]
 8015b66:	bb62      	cbnz	r2, 8015bc2 <_ZN8touchgfx3LCD22WideTextInternalStruct23scanStringLengthForLineEv+0x156>
 8015b68:	f64f 63ff 	movw	r3, #65279	; 0xfeff
 8015b6c:	4298      	cmp	r0, r3
 8015b6e:	d003      	beq.n	8015b78 <_ZN8touchgfx3LCD22WideTextInternalStruct23scanStringLengthForLineEv+0x10c>
 8015b70:	f242 030b 	movw	r3, #8203	; 0x200b
 8015b74:	4298      	cmp	r0, r3
 8015b76:	d1b1      	bne.n	8015adc <_ZN8touchgfx3LCD22WideTextInternalStruct23scanStringLengthForLineEv+0x70>
 8015b78:	8823      	ldrh	r3, [r4, #0]
 8015b7a:	8ba1      	ldrh	r1, [r4, #28]
 8015b7c:	2b20      	cmp	r3, #32
 8015b7e:	d003      	beq.n	8015b88 <_ZN8touchgfx3LCD22WideTextInternalStruct23scanStringLengthForLineEv+0x11c>
 8015b80:	f242 000b 	movw	r0, #8203	; 0x200b
 8015b84:	4283      	cmp	r3, r0
 8015b86:	d131      	bne.n	8015bec <_ZN8touchgfx3LCD22WideTextInternalStruct23scanStringLengthForLineEv+0x180>
 8015b88:	f1ba 0f00 	cmp.w	sl, #0
 8015b8c:	bf0a      	itet	eq
 8015b8e:	4688      	moveq	r8, r1
 8015b90:	4650      	movne	r0, sl
 8015b92:	2001      	moveq	r0, #1
 8015b94:	440a      	add	r2, r1
 8015b96:	8b23      	ldrh	r3, [r4, #24]
 8015b98:	f8b4 c010 	ldrh.w	ip, [r4, #16]
 8015b9c:	b292      	uxth	r2, r2
 8015b9e:	83a2      	strh	r2, [r4, #28]
 8015ba0:	4413      	add	r3, r2
 8015ba2:	f1b9 0f00 	cmp.w	r9, #0
 8015ba6:	d102      	bne.n	8015bae <_ZN8touchgfx3LCD22WideTextInternalStruct23scanStringLengthForLineEv+0x142>
 8015ba8:	2d00      	cmp	r5, #0
 8015baa:	d042      	beq.n	8015c32 <_ZN8touchgfx3LCD22WideTextInternalStruct23scanStringLengthForLineEv+0x1c6>
 8015bac:	b300      	cbz	r0, 8015bf0 <_ZN8touchgfx3LCD22WideTextInternalStruct23scanStringLengthForLineEv+0x184>
 8015bae:	8c21      	ldrh	r1, [r4, #32]
 8015bb0:	4419      	add	r1, r3
 8015bb2:	458c      	cmp	ip, r1
 8015bb4:	da37      	bge.n	8015c26 <_ZN8touchgfx3LCD22WideTextInternalStruct23scanStringLengthForLineEv+0x1ba>
 8015bb6:	8ae1      	ldrh	r1, [r4, #22]
 8015bb8:	2900      	cmp	r1, #0
 8015bba:	d034      	beq.n	8015c26 <_ZN8touchgfx3LCD22WideTextInternalStruct23scanStringLengthForLineEv+0x1ba>
 8015bbc:	4563      	cmp	r3, ip
 8015bbe:	dd8d      	ble.n	8015adc <_ZN8touchgfx3LCD22WideTextInternalStruct23scanStringLengthForLineEv+0x70>
 8015bc0:	e01d      	b.n	8015bfe <_ZN8touchgfx3LCD22WideTextInternalStruct23scanStringLengthForLineEv+0x192>
 8015bc2:	8893      	ldrh	r3, [r2, #4]
 8015bc4:	8023      	strh	r3, [r4, #0]
 8015bc6:	f892 b00d 	ldrb.w	fp, [r2, #13]
 8015bca:	9901      	ldr	r1, [sp, #4]
 8015bcc:	ea4f 0b4b 	mov.w	fp, fp, lsl #1
 8015bd0:	f40b 7080 	and.w	r0, fp, #256	; 0x100
 8015bd4:	f892 b00a 	ldrb.w	fp, [r2, #10]
 8015bd8:	ea4b 0b00 	orr.w	fp, fp, r0
 8015bdc:	68e0      	ldr	r0, [r4, #12]
 8015bde:	6803      	ldr	r3, [r0, #0]
 8015be0:	6c5b      	ldr	r3, [r3, #68]	; 0x44
 8015be2:	4798      	blx	r3
 8015be4:	eb0b 0200 	add.w	r2, fp, r0
 8015be8:	b292      	uxth	r2, r2
 8015bea:	e7c5      	b.n	8015b78 <_ZN8touchgfx3LCD22WideTextInternalStruct23scanStringLengthForLineEv+0x10c>
 8015bec:	2000      	movs	r0, #0
 8015bee:	e7d1      	b.n	8015b94 <_ZN8touchgfx3LCD22WideTextInternalStruct23scanStringLengthForLineEv+0x128>
 8015bf0:	4563      	cmp	r3, ip
 8015bf2:	f77f af73 	ble.w	8015adc <_ZN8touchgfx3LCD22WideTextInternalStruct23scanStringLengthForLineEv+0x70>
 8015bf6:	8ae3      	ldrh	r3, [r4, #22]
 8015bf8:	2b00      	cmp	r3, #0
 8015bfa:	f43f af6f 	beq.w	8015adc <_ZN8touchgfx3LCD22WideTextInternalStruct23scanStringLengthForLineEv+0x70>
 8015bfe:	2301      	movs	r3, #1
 8015c00:	f884 3022 	strb.w	r3, [r4, #34]	; 0x22
 8015c04:	8c22      	ldrh	r2, [r4, #32]
 8015c06:	8be3      	ldrh	r3, [r4, #30]
 8015c08:	4413      	add	r3, r2
 8015c0a:	83e3      	strh	r3, [r4, #30]
 8015c0c:	68e0      	ldr	r0, [r4, #12]
 8015c0e:	6803      	ldr	r3, [r0, #0]
 8015c10:	6b9b      	ldr	r3, [r3, #56]	; 0x38
 8015c12:	4798      	blx	r3
 8015c14:	f9b4 3014 	ldrsh.w	r3, [r4, #20]
 8015c18:	4418      	add	r0, r3
 8015c1a:	8a63      	ldrh	r3, [r4, #18]
 8015c1c:	1a18      	subs	r0, r3, r0
 8015c1e:	8260      	strh	r0, [r4, #18]
 8015c20:	b005      	add	sp, #20
 8015c22:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
 8015c26:	2300      	movs	r3, #0
 8015c28:	4611      	mov	r1, r2
 8015c2a:	4620      	mov	r0, r4
 8015c2c:	f7ff ff0e 	bl	8015a4c <_ZN8touchgfx3LCD22WideTextInternalStruct7addWordEttt>
 8015c30:	e754      	b.n	8015adc <_ZN8touchgfx3LCD22WideTextInternalStruct23scanStringLengthForLineEv+0x70>
 8015c32:	4563      	cmp	r3, ip
 8015c34:	dd14      	ble.n	8015c60 <_ZN8touchgfx3LCD22WideTextInternalStruct23scanStringLengthForLineEv+0x1f4>
 8015c36:	b117      	cbz	r7, 8015c3e <_ZN8touchgfx3LCD22WideTextInternalStruct23scanStringLengthForLineEv+0x1d2>
 8015c38:	2301      	movs	r3, #1
 8015c3a:	460a      	mov	r2, r1
 8015c3c:	e772      	b.n	8015b24 <_ZN8touchgfx3LCD22WideTextInternalStruct23scanStringLengthForLineEv+0xb8>
 8015c3e:	2e00      	cmp	r6, #0
 8015c40:	f43f af4c 	beq.w	8015adc <_ZN8touchgfx3LCD22WideTextInternalStruct23scanStringLengthForLineEv+0x70>
 8015c44:	2800      	cmp	r0, #0
 8015c46:	f47f af49 	bne.w	8015adc <_ZN8touchgfx3LCD22WideTextInternalStruct23scanStringLengthForLineEv+0x70>
 8015c4a:	f1ba 0f00 	cmp.w	sl, #0
 8015c4e:	d002      	beq.n	8015c56 <_ZN8touchgfx3LCD22WideTextInternalStruct23scanStringLengthForLineEv+0x1ea>
 8015c50:	2301      	movs	r3, #1
 8015c52:	4642      	mov	r2, r8
 8015c54:	e767      	b.n	8015b26 <_ZN8touchgfx3LCD22WideTextInternalStruct23scanStringLengthForLineEv+0xba>
 8015c56:	8ae3      	ldrh	r3, [r4, #22]
 8015c58:	2b00      	cmp	r3, #0
 8015c5a:	f43f af3f 	beq.w	8015adc <_ZN8touchgfx3LCD22WideTextInternalStruct23scanStringLengthForLineEv+0x70>
 8015c5e:	e7d5      	b.n	8015c0c <_ZN8touchgfx3LCD22WideTextInternalStruct23scanStringLengthForLineEv+0x1a0>
 8015c60:	2800      	cmp	r0, #0
 8015c62:	f47f af3b 	bne.w	8015adc <_ZN8touchgfx3LCD22WideTextInternalStruct23scanStringLengthForLineEv+0x70>
 8015c66:	f1ba 0f00 	cmp.w	sl, #0
 8015c6a:	f43f af37 	beq.w	8015adc <_ZN8touchgfx3LCD22WideTextInternalStruct23scanStringLengthForLineEv+0x70>
 8015c6e:	2301      	movs	r3, #1
 8015c70:	4642      	mov	r2, r8
 8015c72:	e7da      	b.n	8015c2a <_ZN8touchgfx3LCD22WideTextInternalStruct23scanStringLengthForLineEv+0x1be>

08015c74 <_ZN8touchgfx3LCD11getNumLinesERNS_12TextProviderENS_14WideTextActionEhPKNS_4FontEs>:
 8015c74:	b5f0      	push	{r4, r5, r6, r7, lr}
 8015c76:	4605      	mov	r5, r0
 8015c78:	b08f      	sub	sp, #60	; 0x3c
 8015c7a:	4617      	mov	r7, r2
 8015c7c:	461c      	mov	r4, r3
 8015c7e:	460e      	mov	r6, r1
 8015c80:	b1d1      	cbz	r1, 8015cb8 <_ZN8touchgfx3LCD11getNumLinesERNS_12TextProviderENS_14WideTextActionEhPKNS_4FontEs+0x44>
 8015c82:	681b      	ldr	r3, [r3, #0]
 8015c84:	4620      	mov	r0, r4
 8015c86:	6b9b      	ldr	r3, [r3, #56]	; 0x38
 8015c88:	4798      	blx	r3
 8015c8a:	4240      	negs	r0, r0
 8015c8c:	b200      	sxth	r0, r0
 8015c8e:	e9cd 4001 	strd	r4, r0, [sp, #4]
 8015c92:	9603      	str	r6, [sp, #12]
 8015c94:	9700      	str	r7, [sp, #0]
 8015c96:	f64f 73ff 	movw	r3, #65535	; 0xffff
 8015c9a:	f8bd 2050 	ldrh.w	r2, [sp, #80]	; 0x50
 8015c9e:	4629      	mov	r1, r5
 8015ca0:	a805      	add	r0, sp, #20
 8015ca2:	f7ff fcbf 	bl	8015624 <_ZN8touchgfx3LCD22WideTextInternalStructC1ERNS_12TextProviderEtthPKNS_4FontEsNS_14WideTextActionE>
 8015ca6:	2401      	movs	r4, #1
 8015ca8:	a805      	add	r0, sp, #20
 8015caa:	f7ff fedf 	bl	8015a6c <_ZN8touchgfx3LCD22WideTextInternalStruct23scanStringLengthForLineEv>
 8015cae:	f8bd 3014 	ldrh.w	r3, [sp, #20]
 8015cb2:	b163      	cbz	r3, 8015cce <_ZN8touchgfx3LCD11getNumLinesERNS_12TextProviderENS_14WideTextActionEhPKNS_4FontEs+0x5a>
 8015cb4:	3401      	adds	r4, #1
 8015cb6:	e7f7      	b.n	8015ca8 <_ZN8touchgfx3LCD11getNumLinesERNS_12TextProviderENS_14WideTextActionEhPKNS_4FontEs+0x34>
 8015cb8:	f002 ff86 	bl	8018bc8 <_ZN8touchgfx12TextProvider11getNextCharEv>
 8015cbc:	2401      	movs	r4, #1
 8015cbe:	280a      	cmp	r0, #10
 8015cc0:	4628      	mov	r0, r5
 8015cc2:	bf08      	it	eq
 8015cc4:	3401      	addeq	r4, #1
 8015cc6:	f002 ff7f 	bl	8018bc8 <_ZN8touchgfx12TextProvider11getNextCharEv>
 8015cca:	2800      	cmp	r0, #0
 8015ccc:	d1f7      	bne.n	8015cbe <_ZN8touchgfx3LCD11getNumLinesERNS_12TextProviderENS_14WideTextActionEhPKNS_4FontEs+0x4a>
 8015cce:	b2a0      	uxth	r0, r4
 8015cd0:	b00f      	add	sp, #60	; 0x3c
 8015cd2:	bdf0      	pop	{r4, r5, r6, r7, pc}

08015cd4 <_ZN8touchgfx3LCD13drawStringLTRERKNS_4RectES3_RKNS0_13StringVisualsEPKtSt9__va_list>:
 8015cd4:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 8015cd8:	b0e3      	sub	sp, #396	; 0x18c
 8015cda:	461c      	mov	r4, r3
 8015cdc:	9b6c      	ldr	r3, [sp, #432]	; 0x1b0
 8015cde:	4683      	mov	fp, r0
 8015ce0:	4688      	mov	r8, r1
 8015ce2:	2b00      	cmp	r3, #0
 8015ce4:	f000 8112 	beq.w	8015f0c <_ZN8touchgfx3LCD13drawStringLTRERKNS_4RectES3_RKNS0_13StringVisualsEPKtSt9__va_list+0x238>
 8015ce8:	6823      	ldr	r3, [r4, #0]
 8015cea:	2b00      	cmp	r3, #0
 8015cec:	f000 810e 	beq.w	8015f0c <_ZN8touchgfx3LCD13drawStringLTRERKNS_4RectES3_RKNS0_13StringVisualsEPKtSt9__va_list+0x238>
 8015cf0:	7ba3      	ldrb	r3, [r4, #14]
 8015cf2:	2b00      	cmp	r3, #0
 8015cf4:	f000 810a 	beq.w	8015f0c <_ZN8touchgfx3LCD13drawStringLTRERKNS_4RectES3_RKNS0_13StringVisualsEPKtSt9__va_list+0x238>
 8015cf8:	6810      	ldr	r0, [r2, #0]
 8015cfa:	6851      	ldr	r1, [r2, #4]
 8015cfc:	f9b8 2004 	ldrsh.w	r2, [r8, #4]
 8015d00:	f8ad 2034 	strh.w	r2, [sp, #52]	; 0x34
 8015d04:	ad0a      	add	r5, sp, #40	; 0x28
 8015d06:	462b      	mov	r3, r5
 8015d08:	c303      	stmia	r3!, {r0, r1}
 8015d0a:	2100      	movs	r1, #0
 8015d0c:	f9b8 3006 	ldrsh.w	r3, [r8, #6]
 8015d10:	910c      	str	r1, [sp, #48]	; 0x30
 8015d12:	79a2      	ldrb	r2, [r4, #6]
 8015d14:	f8ad 3036 	strh.w	r3, [sp, #54]	; 0x36
 8015d18:	a90c      	add	r1, sp, #48	; 0x30
 8015d1a:	4628      	mov	r0, r5
 8015d1c:	f7ff fd01 	bl	8015722 <_ZN8touchgfx3LCD10rotateRectERNS_4RectERKS1_NS_12TextRotationE>
 8015d20:	a90c      	add	r1, sp, #48	; 0x30
 8015d22:	4608      	mov	r0, r1
 8015d24:	79a2      	ldrb	r2, [r4, #6]
 8015d26:	f7ff fcfc 	bl	8015722 <_ZN8touchgfx3LCD10rotateRectERNS_4RectERKS1_NS_12TextRotationE>
 8015d2a:	a817      	add	r0, sp, #92	; 0x5c
 8015d2c:	f002 fb20 	bl	8018370 <_ZN8touchgfx12TextProviderC1Ev>
 8015d30:	6820      	ldr	r0, [r4, #0]
 8015d32:	6803      	ldr	r3, [r0, #0]
 8015d34:	6cdb      	ldr	r3, [r3, #76]	; 0x4c
 8015d36:	4798      	blx	r3
 8015d38:	4606      	mov	r6, r0
 8015d3a:	6820      	ldr	r0, [r4, #0]
 8015d3c:	6803      	ldr	r3, [r0, #0]
 8015d3e:	6d1b      	ldr	r3, [r3, #80]	; 0x50
 8015d40:	4798      	blx	r3
 8015d42:	4633      	mov	r3, r6
 8015d44:	9a6d      	ldr	r2, [sp, #436]	; 0x1b4
 8015d46:	996c      	ldr	r1, [sp, #432]	; 0x1b0
 8015d48:	9000      	str	r0, [sp, #0]
 8015d4a:	a817      	add	r0, sp, #92	; 0x5c
 8015d4c:	f002 fb6b 	bl	8018426 <_ZN8touchgfx12TextProvider10initializeEPKtSt9__va_listS2_PKNS_24FontContextualFormsTableE>
 8015d50:	6820      	ldr	r0, [r4, #0]
 8015d52:	f894 a004 	ldrb.w	sl, [r4, #4]
 8015d56:	6803      	ldr	r3, [r0, #0]
 8015d58:	6b9b      	ldr	r3, [r3, #56]	; 0x38
 8015d5a:	4798      	blx	r3
 8015d5c:	f9b4 600c 	ldrsh.w	r6, [r4, #12]
 8015d60:	6823      	ldr	r3, [r4, #0]
 8015d62:	4607      	mov	r7, r0
 8015d64:	4406      	add	r6, r0
 8015d66:	a830      	add	r0, sp, #192	; 0xc0
 8015d68:	f893 9009 	ldrb.w	r9, [r3, #9]
 8015d6c:	f002 fb00 	bl	8018370 <_ZN8touchgfx12TextProviderC1Ev>
 8015d70:	7c23      	ldrb	r3, [r4, #16]
 8015d72:	b17b      	cbz	r3, 8015d94 <_ZN8touchgfx3LCD13drawStringLTRERKNS_4RectES3_RKNS0_13StringVisualsEPKtSt9__va_list+0xc0>
 8015d74:	6820      	ldr	r0, [r4, #0]
 8015d76:	6803      	ldr	r3, [r0, #0]
 8015d78:	6cdb      	ldr	r3, [r3, #76]	; 0x4c
 8015d7a:	4798      	blx	r3
 8015d7c:	9009      	str	r0, [sp, #36]	; 0x24
 8015d7e:	6820      	ldr	r0, [r4, #0]
 8015d80:	6802      	ldr	r2, [r0, #0]
 8015d82:	6d12      	ldr	r2, [r2, #80]	; 0x50
 8015d84:	4790      	blx	r2
 8015d86:	9b09      	ldr	r3, [sp, #36]	; 0x24
 8015d88:	9000      	str	r0, [sp, #0]
 8015d8a:	9a6d      	ldr	r2, [sp, #436]	; 0x1b4
 8015d8c:	996c      	ldr	r1, [sp, #432]	; 0x1b0
 8015d8e:	a830      	add	r0, sp, #192	; 0xc0
 8015d90:	f002 fb49 	bl	8018426 <_ZN8touchgfx12TextProvider10initializeEPKtSt9__va_listS2_PKNS_24FontContextualFormsTableE>
 8015d94:	f8bd 1034 	ldrh.w	r1, [sp, #52]	; 0x34
 8015d98:	7be2      	ldrb	r2, [r4, #15]
 8015d9a:	f8bd 3036 	ldrh.w	r3, [sp, #54]	; 0x36
 8015d9e:	1a8a      	subs	r2, r1, r2
 8015da0:	7c21      	ldrb	r1, [r4, #16]
 8015da2:	9103      	str	r1, [sp, #12]
 8015da4:	f9b4 100c 	ldrsh.w	r1, [r4, #12]
 8015da8:	9102      	str	r1, [sp, #8]
 8015daa:	6821      	ldr	r1, [r4, #0]
 8015dac:	9101      	str	r1, [sp, #4]
 8015dae:	7961      	ldrb	r1, [r4, #5]
 8015db0:	9100      	str	r1, [sp, #0]
 8015db2:	b292      	uxth	r2, r2
 8015db4:	a930      	add	r1, sp, #192	; 0xc0
 8015db6:	a80e      	add	r0, sp, #56	; 0x38
 8015db8:	f7ff fc34 	bl	8015624 <_ZN8touchgfx3LCD22WideTextInternalStructC1ERNS_12TextProviderEtthPKNS_4FontEsNS_14WideTextActionE>
 8015dbc:	2e00      	cmp	r6, #0
 8015dbe:	dc5b      	bgt.n	8015e78 <_ZN8touchgfx3LCD13drawStringLTRERKNS_4RectES3_RKNS0_13StringVisualsEPKtSt9__va_list+0x1a4>
 8015dc0:	af17      	add	r7, sp, #92	; 0x5c
 8015dc2:	f04f 0900 	mov.w	r9, #0
 8015dc6:	7c23      	ldrb	r3, [r4, #16]
 8015dc8:	2b00      	cmp	r3, #0
 8015dca:	f000 80b1 	beq.w	8015f30 <_ZN8touchgfx3LCD13drawStringLTRERKNS_4RectES3_RKNS0_13StringVisualsEPKtSt9__va_list+0x25c>
 8015dce:	a80e      	add	r0, sp, #56	; 0x38
 8015dd0:	f7ff fe4c 	bl	8015a6c <_ZN8touchgfx3LCD22WideTextInternalStruct23scanStringLengthForLineEv>
 8015dd4:	f1ba 0f00 	cmp.w	sl, #0
 8015dd8:	f000 80a5 	beq.w	8015f26 <_ZN8touchgfx3LCD13drawStringLTRERKNS_4RectES3_RKNS0_13StringVisualsEPKtSt9__va_list+0x252>
 8015ddc:	7c23      	ldrb	r3, [r4, #16]
 8015dde:	9309      	str	r3, [sp, #36]	; 0x24
 8015de0:	2264      	movs	r2, #100	; 0x64
 8015de2:	4639      	mov	r1, r7
 8015de4:	a849      	add	r0, sp, #292	; 0x124
 8015de6:	f015 fde6 	bl	802b9b6 <memcpy>
 8015dea:	9b09      	ldr	r3, [sp, #36]	; 0x24
 8015dec:	2b00      	cmp	r3, #0
 8015dee:	f000 80a7 	beq.w	8015f40 <_ZN8touchgfx3LCD13drawStringLTRERKNS_4RectES3_RKNS0_13StringVisualsEPKtSt9__va_list+0x26c>
 8015df2:	f9bd 3056 	ldrsh.w	r3, [sp, #86]	; 0x56
 8015df6:	7922      	ldrb	r2, [r4, #4]
 8015df8:	2a01      	cmp	r2, #1
 8015dfa:	f040 808a 	bne.w	8015f12 <_ZN8touchgfx3LCD13drawStringLTRERKNS_4RectES3_RKNS0_13StringVisualsEPKtSt9__va_list+0x23e>
 8015dfe:	f9bd 0034 	ldrsh.w	r0, [sp, #52]	; 0x34
 8015e02:	1ac0      	subs	r0, r0, r3
 8015e04:	2302      	movs	r3, #2
 8015e06:	fb90 f0f3 	sdiv	r0, r0, r3
 8015e0a:	b200      	sxth	r0, r0
 8015e0c:	7c23      	ldrb	r3, [r4, #16]
 8015e0e:	2b00      	cmp	r3, #0
 8015e10:	f000 808b 	beq.w	8015f2a <_ZN8touchgfx3LCD13drawStringLTRERKNS_4RectES3_RKNS0_13StringVisualsEPKtSt9__va_list+0x256>
 8015e14:	f8bd 204e 	ldrh.w	r2, [sp, #78]	; 0x4e
 8015e18:	f89d 105a 	ldrb.w	r1, [sp, #90]	; 0x5a
 8015e1c:	f9bd 3032 	ldrsh.w	r3, [sp, #50]	; 0x32
 8015e20:	e9cd 2105 	strd	r2, r1, [sp, #20]
 8015e24:	f8bd 2030 	ldrh.w	r2, [sp, #48]	; 0x30
 8015e28:	4410      	add	r0, r2
 8015e2a:	b200      	sxth	r0, r0
 8015e2c:	9000      	str	r0, [sp, #0]
 8015e2e:	e9cd 9703 	strd	r9, r7, [sp, #12]
 8015e32:	e9cd 5401 	strd	r5, r4, [sp, #4]
 8015e36:	4642      	mov	r2, r8
 8015e38:	2100      	movs	r1, #0
 8015e3a:	4658      	mov	r0, fp
 8015e3c:	f7ff fca2 	bl	8015784 <_ZN8touchgfx3LCD18drawStringInternalEPtPKNS_4RectEssRS3_PKNS0_13StringVisualsEhRNS_12TextProviderEib>
 8015e40:	2800      	cmp	r0, #0
 8015e42:	d163      	bne.n	8015f0c <_ZN8touchgfx3LCD13drawStringLTRERKNS_4RectES3_RKNS0_13StringVisualsEPKtSt9__va_list+0x238>
 8015e44:	f8bd 3032 	ldrh.w	r3, [sp, #50]	; 0x32
 8015e48:	f8bd 1036 	ldrh.w	r1, [sp, #54]	; 0x36
 8015e4c:	b2b2      	uxth	r2, r6
 8015e4e:	4413      	add	r3, r2
 8015e50:	1a8a      	subs	r2, r1, r2
 8015e52:	f8ad 2036 	strh.w	r2, [sp, #54]	; 0x36
 8015e56:	f89d 205a 	ldrb.w	r2, [sp, #90]	; 0x5a
 8015e5a:	b21b      	sxth	r3, r3
 8015e5c:	f8ad 3032 	strh.w	r3, [sp, #50]	; 0x32
 8015e60:	2a00      	cmp	r2, #0
 8015e62:	d153      	bne.n	8015f0c <_ZN8touchgfx3LCD13drawStringLTRERKNS_4RectES3_RKNS0_13StringVisualsEPKtSt9__va_list+0x238>
 8015e64:	6822      	ldr	r2, [r4, #0]
 8015e66:	8869      	ldrh	r1, [r5, #2]
 8015e68:	7a12      	ldrb	r2, [r2, #8]
 8015e6a:	1a9b      	subs	r3, r3, r2
 8015e6c:	88ea      	ldrh	r2, [r5, #6]
 8015e6e:	440a      	add	r2, r1
 8015e70:	b212      	sxth	r2, r2
 8015e72:	4293      	cmp	r3, r2
 8015e74:	dda7      	ble.n	8015dc6 <_ZN8touchgfx3LCD13drawStringLTRERKNS_4RectES3_RKNS0_13StringVisualsEPKtSt9__va_list+0xf2>
 8015e76:	e049      	b.n	8015f0c <_ZN8touchgfx3LCD13drawStringLTRERKNS_4RectES3_RKNS0_13StringVisualsEPKtSt9__va_list+0x238>
 8015e78:	7c23      	ldrb	r3, [r4, #16]
 8015e7a:	444f      	add	r7, r9
 8015e7c:	b1c3      	cbz	r3, 8015eb0 <_ZN8touchgfx3LCD13drawStringLTRERKNS_4RectES3_RKNS0_13StringVisualsEPKtSt9__va_list+0x1dc>
 8015e7e:	f64f 79ff 	movw	r9, #65535	; 0xffff
 8015e82:	f9bd 3032 	ldrsh.w	r3, [sp, #50]	; 0x32
 8015e86:	f9b5 2002 	ldrsh.w	r2, [r5, #2]
 8015e8a:	443b      	add	r3, r7
 8015e8c:	4293      	cmp	r3, r2
 8015e8e:	da97      	bge.n	8015dc0 <_ZN8touchgfx3LCD13drawStringLTRERKNS_4RectES3_RKNS0_13StringVisualsEPKtSt9__va_list+0xec>
 8015e90:	a80e      	add	r0, sp, #56	; 0x38
 8015e92:	f7ff fdeb 	bl	8015a6c <_ZN8touchgfx3LCD22WideTextInternalStruct23scanStringLengthForLineEv>
 8015e96:	f8bd 304e 	ldrh.w	r3, [sp, #78]	; 0x4e
 8015e9a:	3b01      	subs	r3, #1
 8015e9c:	b29b      	uxth	r3, r3
 8015e9e:	454b      	cmp	r3, r9
 8015ea0:	9309      	str	r3, [sp, #36]	; 0x24
 8015ea2:	d021      	beq.n	8015ee8 <_ZN8touchgfx3LCD13drawStringLTRERKNS_4RectES3_RKNS0_13StringVisualsEPKtSt9__va_list+0x214>
 8015ea4:	7961      	ldrb	r1, [r4, #5]
 8015ea6:	a817      	add	r0, sp, #92	; 0x5c
 8015ea8:	f7f2 fbbc 	bl	8008624 <_ZN8touchgfx12TextProvider15getNextLigatureEh>
 8015eac:	9b09      	ldr	r3, [sp, #36]	; 0x24
 8015eae:	e7f4      	b.n	8015e9a <_ZN8touchgfx3LCD13drawStringLTRERKNS_4RectES3_RKNS0_13StringVisualsEPKtSt9__va_list+0x1c6>
 8015eb0:	fa1f f986 	uxth.w	r9, r6
 8015eb4:	f9bd 3032 	ldrsh.w	r3, [sp, #50]	; 0x32
 8015eb8:	f9b5 2002 	ldrsh.w	r2, [r5, #2]
 8015ebc:	443b      	add	r3, r7
 8015ebe:	4293      	cmp	r3, r2
 8015ec0:	f6bf af7e 	bge.w	8015dc0 <_ZN8touchgfx3LCD13drawStringLTRERKNS_4RectES3_RKNS0_13StringVisualsEPKtSt9__va_list+0xec>
 8015ec4:	a817      	add	r0, sp, #92	; 0x5c
 8015ec6:	f002 fe7f 	bl	8018bc8 <_ZN8touchgfx12TextProvider11getNextCharEv>
 8015eca:	b1f8      	cbz	r0, 8015f0c <_ZN8touchgfx3LCD13drawStringLTRERKNS_4RectES3_RKNS0_13StringVisualsEPKtSt9__va_list+0x238>
 8015ecc:	280a      	cmp	r0, #10
 8015ece:	d1f1      	bne.n	8015eb4 <_ZN8touchgfx3LCD13drawStringLTRERKNS_4RectES3_RKNS0_13StringVisualsEPKtSt9__va_list+0x1e0>
 8015ed0:	f8bd 3032 	ldrh.w	r3, [sp, #50]	; 0x32
 8015ed4:	444b      	add	r3, r9
 8015ed6:	f8ad 3032 	strh.w	r3, [sp, #50]	; 0x32
 8015eda:	f8bd 3036 	ldrh.w	r3, [sp, #54]	; 0x36
 8015ede:	eba3 0309 	sub.w	r3, r3, r9
 8015ee2:	f8ad 3036 	strh.w	r3, [sp, #54]	; 0x36
 8015ee6:	e7e5      	b.n	8015eb4 <_ZN8touchgfx3LCD13drawStringLTRERKNS_4RectES3_RKNS0_13StringVisualsEPKtSt9__va_list+0x1e0>
 8015ee8:	f8bd 2032 	ldrh.w	r2, [sp, #50]	; 0x32
 8015eec:	b2b3      	uxth	r3, r6
 8015eee:	441a      	add	r2, r3
 8015ef0:	f8ad 2032 	strh.w	r2, [sp, #50]	; 0x32
 8015ef4:	f8bd 2036 	ldrh.w	r2, [sp, #54]	; 0x36
 8015ef8:	1ad3      	subs	r3, r2, r3
 8015efa:	f8ad 3036 	strh.w	r3, [sp, #54]	; 0x36
 8015efe:	f8bd 3038 	ldrh.w	r3, [sp, #56]	; 0x38
 8015f02:	b11b      	cbz	r3, 8015f0c <_ZN8touchgfx3LCD13drawStringLTRERKNS_4RectES3_RKNS0_13StringVisualsEPKtSt9__va_list+0x238>
 8015f04:	f89d 305a 	ldrb.w	r3, [sp, #90]	; 0x5a
 8015f08:	2b00      	cmp	r3, #0
 8015f0a:	d0ba      	beq.n	8015e82 <_ZN8touchgfx3LCD13drawStringLTRERKNS_4RectES3_RKNS0_13StringVisualsEPKtSt9__va_list+0x1ae>
 8015f0c:	b063      	add	sp, #396	; 0x18c
 8015f0e:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
 8015f12:	2a02      	cmp	r2, #2
 8015f14:	d105      	bne.n	8015f22 <_ZN8touchgfx3LCD13drawStringLTRERKNS_4RectES3_RKNS0_13StringVisualsEPKtSt9__va_list+0x24e>
 8015f16:	7be2      	ldrb	r2, [r4, #15]
 8015f18:	f8bd 0034 	ldrh.w	r0, [sp, #52]	; 0x34
 8015f1c:	1a80      	subs	r0, r0, r2
 8015f1e:	1ac0      	subs	r0, r0, r3
 8015f20:	e773      	b.n	8015e0a <_ZN8touchgfx3LCD13drawStringLTRERKNS_4RectES3_RKNS0_13StringVisualsEPKtSt9__va_list+0x136>
 8015f22:	2000      	movs	r0, #0
 8015f24:	e772      	b.n	8015e0c <_ZN8touchgfx3LCD13drawStringLTRERKNS_4RectES3_RKNS0_13StringVisualsEPKtSt9__va_list+0x138>
 8015f26:	7be0      	ldrb	r0, [r4, #15]
 8015f28:	e770      	b.n	8015e0c <_ZN8touchgfx3LCD13drawStringLTRERKNS_4RectES3_RKNS0_13StringVisualsEPKtSt9__va_list+0x138>
 8015f2a:	f647 72ff 	movw	r2, #32767	; 0x7fff
 8015f2e:	e773      	b.n	8015e18 <_ZN8touchgfx3LCD13drawStringLTRERKNS_4RectES3_RKNS0_13StringVisualsEPKtSt9__va_list+0x144>
 8015f30:	f1ba 0f00 	cmp.w	sl, #0
 8015f34:	d0f7      	beq.n	8015f26 <_ZN8touchgfx3LCD13drawStringLTRERKNS_4RectES3_RKNS0_13StringVisualsEPKtSt9__va_list+0x252>
 8015f36:	2264      	movs	r2, #100	; 0x64
 8015f38:	4639      	mov	r1, r7
 8015f3a:	a849      	add	r0, sp, #292	; 0x124
 8015f3c:	f015 fd3b 	bl	802b9b6 <memcpy>
 8015f40:	2300      	movs	r3, #0
 8015f42:	f647 72ff 	movw	r2, #32767	; 0x7fff
 8015f46:	6821      	ldr	r1, [r4, #0]
 8015f48:	a849      	add	r0, sp, #292	; 0x124
 8015f4a:	f7ff fbae 	bl	80156aa <_ZN8touchgfx3LCD11stringWidthERNS_12TextProviderERKNS_4FontEih>
 8015f4e:	b203      	sxth	r3, r0
 8015f50:	e751      	b.n	8015df6 <_ZN8touchgfx3LCD13drawStringLTRERKNS_4RectES3_RKNS0_13StringVisualsEPKtSt9__va_list+0x122>

08015f52 <_ZN8touchgfx3LCD5realXERKNS_4RectEssNS_12TextRotationE>:
 8015f52:	2b03      	cmp	r3, #3
 8015f54:	d818      	bhi.n	8015f88 <_ZN8touchgfx3LCD5realXERKNS_4RectEssNS_12TextRotationE+0x36>
 8015f56:	e8df f003 	tbb	[pc, r3]
 8015f5a:	0602      	.short	0x0602
 8015f5c:	130d      	.short	0x130d
 8015f5e:	f9b0 2000 	ldrsh.w	r2, [r0]
 8015f62:	1850      	adds	r0, r2, r1
 8015f64:	4770      	bx	lr
 8015f66:	8803      	ldrh	r3, [r0, #0]
 8015f68:	8880      	ldrh	r0, [r0, #4]
 8015f6a:	4418      	add	r0, r3
 8015f6c:	b200      	sxth	r0, r0
 8015f6e:	1a80      	subs	r0, r0, r2
 8015f70:	3801      	subs	r0, #1
 8015f72:	4770      	bx	lr
 8015f74:	8803      	ldrh	r3, [r0, #0]
 8015f76:	8880      	ldrh	r0, [r0, #4]
 8015f78:	4418      	add	r0, r3
 8015f7a:	b200      	sxth	r0, r0
 8015f7c:	1a40      	subs	r0, r0, r1
 8015f7e:	e7f7      	b.n	8015f70 <_ZN8touchgfx3LCD5realXERKNS_4RectEssNS_12TextRotationE+0x1e>
 8015f80:	f9b0 0000 	ldrsh.w	r0, [r0]
 8015f84:	4410      	add	r0, r2
 8015f86:	4770      	bx	lr
 8015f88:	2000      	movs	r0, #0
 8015f8a:	4770      	bx	lr

08015f8c <_ZN8touchgfx3LCD5realYERKNS_4RectEssNS_12TextRotationE>:
 8015f8c:	2b03      	cmp	r3, #3
 8015f8e:	d817      	bhi.n	8015fc0 <_ZN8touchgfx3LCD5realYERKNS_4RectEssNS_12TextRotationE+0x34>
 8015f90:	e8df f003 	tbb	[pc, r3]
 8015f94:	10090602 	.word	0x10090602
 8015f98:	f9b0 1002 	ldrsh.w	r1, [r0, #2]
 8015f9c:	1850      	adds	r0, r2, r1
 8015f9e:	4770      	bx	lr
 8015fa0:	f9b0 2002 	ldrsh.w	r2, [r0, #2]
 8015fa4:	e7fa      	b.n	8015f9c <_ZN8touchgfx3LCD5realYERKNS_4RectEssNS_12TextRotationE+0x10>
 8015fa6:	8843      	ldrh	r3, [r0, #2]
 8015fa8:	88c0      	ldrh	r0, [r0, #6]
 8015faa:	4418      	add	r0, r3
 8015fac:	b200      	sxth	r0, r0
 8015fae:	1a80      	subs	r0, r0, r2
 8015fb0:	3801      	subs	r0, #1
 8015fb2:	4770      	bx	lr
 8015fb4:	8843      	ldrh	r3, [r0, #2]
 8015fb6:	88c0      	ldrh	r0, [r0, #6]
 8015fb8:	4418      	add	r0, r3
 8015fba:	b200      	sxth	r0, r0
 8015fbc:	1a40      	subs	r0, r0, r1
 8015fbe:	e7f7      	b.n	8015fb0 <_ZN8touchgfx3LCD5realYERKNS_4RectEssNS_12TextRotationE+0x24>
 8015fc0:	2000      	movs	r0, #0
 8015fc2:	4770      	bx	lr

08015fc4 <_GLOBAL__sub_I__ZN8touchgfx3LCD12defaultColorE>:
 8015fc4:	4b01      	ldr	r3, [pc, #4]	; (8015fcc <_GLOBAL__sub_I__ZN8touchgfx3LCD12defaultColorE+0x8>)
 8015fc6:	2200      	movs	r2, #0
 8015fc8:	601a      	str	r2, [r3, #0]
 8015fca:	4770      	bx	lr
 8015fcc:	2001382c 	.word	0x2001382c

08015fd0 <_ZN8touchgfx16TouchCalibration4clzuEm>:
 8015fd0:	4603      	mov	r3, r0
 8015fd2:	b1c8      	cbz	r0, 8016008 <_ZN8touchgfx16TouchCalibration4clzuEm+0x38>
 8015fd4:	0c02      	lsrs	r2, r0, #16
 8015fd6:	0412      	lsls	r2, r2, #16
 8015fd8:	b9a2      	cbnz	r2, 8016004 <_ZN8touchgfx16TouchCalibration4clzuEm+0x34>
 8015fda:	0403      	lsls	r3, r0, #16
 8015fdc:	2010      	movs	r0, #16
 8015fde:	f013 4f7f 	tst.w	r3, #4278190080	; 0xff000000
 8015fe2:	bf04      	itt	eq
 8015fe4:	021b      	lsleq	r3, r3, #8
 8015fe6:	3008      	addeq	r0, #8
 8015fe8:	f013 4f70 	tst.w	r3, #4026531840	; 0xf0000000
 8015fec:	bf04      	itt	eq
 8015fee:	011b      	lsleq	r3, r3, #4
 8015ff0:	3004      	addeq	r0, #4
 8015ff2:	f013 4f40 	tst.w	r3, #3221225472	; 0xc0000000
 8015ff6:	bf04      	itt	eq
 8015ff8:	009b      	lsleq	r3, r3, #2
 8015ffa:	3002      	addeq	r0, #2
 8015ffc:	2b00      	cmp	r3, #0
 8015ffe:	db04      	blt.n	801600a <_ZN8touchgfx16TouchCalibration4clzuEm+0x3a>
 8016000:	3001      	adds	r0, #1
 8016002:	4770      	bx	lr
 8016004:	2000      	movs	r0, #0
 8016006:	e7ea      	b.n	8015fde <_ZN8touchgfx16TouchCalibration4clzuEm+0xe>
 8016008:	2020      	movs	r0, #32
 801600a:	4770      	bx	lr

0801600c <_ZN8touchgfx16TouchCalibration7muldivuEmmmmmRm>:
 801600c:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 8016010:	b087      	sub	sp, #28
 8016012:	460d      	mov	r5, r1
 8016014:	4616      	mov	r6, r2
 8016016:	4698      	mov	r8, r3
 8016018:	e9dd 4710 	ldrd	r4, r7, [sp, #64]	; 0x40
 801601c:	4601      	mov	r1, r0
 801601e:	b120      	cbz	r0, 801602a <_ZN8touchgfx16TouchCalibration7muldivuEmmmmmRm+0x1e>
 8016020:	b11a      	cbz	r2, 801602a <_ZN8touchgfx16TouchCalibration7muldivuEmmmmmRm+0x1e>
 8016022:	2d1f      	cmp	r5, #31
 8016024:	d801      	bhi.n	801602a <_ZN8touchgfx16TouchCalibration7muldivuEmmmmmRm+0x1e>
 8016026:	2b1f      	cmp	r3, #31
 8016028:	d904      	bls.n	8016034 <_ZN8touchgfx16TouchCalibration7muldivuEmmmmmRm+0x28>
 801602a:	2000      	movs	r0, #0
 801602c:	6038      	str	r0, [r7, #0]
 801602e:	b007      	add	sp, #28
 8016030:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
 8016034:	b97d      	cbnz	r5, 8016056 <_ZN8touchgfx16TouchCalibration7muldivuEmmmmmRm+0x4a>
 8016036:	b143      	cbz	r3, 801604a <_ZN8touchgfx16TouchCalibration7muldivuEmmmmmRm+0x3e>
 8016038:	4602      	mov	r2, r0
 801603a:	e9cd 4700 	strd	r4, r7, [sp]
 801603e:	462b      	mov	r3, r5
 8016040:	4641      	mov	r1, r8
 8016042:	4630      	mov	r0, r6
 8016044:	f7ff ffe2 	bl	801600c <_ZN8touchgfx16TouchCalibration7muldivuEmmmmmRm>
 8016048:	e7f1      	b.n	801602e <_ZN8touchgfx16TouchCalibration7muldivuEmmmmmRm+0x22>
 801604a:	f04f 33ff 	mov.w	r3, #4294967295
 801604e:	603b      	str	r3, [r7, #0]
 8016050:	f06f 4000 	mvn.w	r0, #2147483648	; 0x80000000
 8016054:	e7eb      	b.n	801602e <_ZN8touchgfx16TouchCalibration7muldivuEmmmmmRm+0x22>
 8016056:	fa32 fa05 	lsrs.w	sl, r2, r5
 801605a:	d106      	bne.n	801606a <_ZN8touchgfx16TouchCalibration7muldivuEmmmmmRm+0x5e>
 801605c:	4346      	muls	r6, r0
 801605e:	fbb6 f0f4 	udiv	r0, r6, r4
 8016062:	fb04 6610 	mls	r6, r4, r0, r6
 8016066:	603e      	str	r6, [r7, #0]
 8016068:	e7e1      	b.n	801602e <_ZN8touchgfx16TouchCalibration7muldivuEmmmmmRm+0x22>
 801606a:	2201      	movs	r2, #1
 801606c:	40aa      	lsls	r2, r5
 801606e:	3a01      	subs	r2, #1
 8016070:	4016      	ands	r6, r2
 8016072:	fa00 fb05 	lsl.w	fp, r0, r5
 8016076:	4630      	mov	r0, r6
 8016078:	fbbb f9f4 	udiv	r9, fp, r4
 801607c:	fb0a f309 	mul.w	r3, sl, r9
 8016080:	9303      	str	r3, [sp, #12]
 8016082:	f7ff ffa5 	bl	8015fd0 <_ZN8touchgfx16TouchCalibration4clzuEm>
 8016086:	462b      	mov	r3, r5
 8016088:	460a      	mov	r2, r1
 801608a:	e9cd 4700 	strd	r4, r7, [sp]
 801608e:	4601      	mov	r1, r0
 8016090:	4630      	mov	r0, r6
 8016092:	f7ff ffbb 	bl	801600c <_ZN8touchgfx16TouchCalibration7muldivuEmmmmmRm>
 8016096:	fb04 b919 	mls	r9, r4, r9, fp
 801609a:	4606      	mov	r6, r0
 801609c:	4648      	mov	r0, r9
 801609e:	eb05 0108 	add.w	r1, r5, r8
 80160a2:	f7ff ff95 	bl	8015fd0 <_ZN8touchgfx16TouchCalibration4clzuEm>
 80160a6:	ab05      	add	r3, sp, #20
 80160a8:	e9cd 4300 	strd	r4, r3, [sp]
 80160ac:	464a      	mov	r2, r9
 80160ae:	4603      	mov	r3, r0
 80160b0:	4650      	mov	r0, sl
 80160b2:	f7ff ffab 	bl	801600c <_ZN8touchgfx16TouchCalibration7muldivuEmmmmmRm>
 80160b6:	6839      	ldr	r1, [r7, #0]
 80160b8:	9a05      	ldr	r2, [sp, #20]
 80160ba:	9b03      	ldr	r3, [sp, #12]
 80160bc:	4411      	add	r1, r2
 80160be:	fbb1 f2f4 	udiv	r2, r1, r4
 80160c2:	18d3      	adds	r3, r2, r3
 80160c4:	441e      	add	r6, r3
 80160c6:	fb04 1412 	mls	r4, r4, r2, r1
 80160ca:	4430      	add	r0, r6
 80160cc:	603c      	str	r4, [r7, #0]
 80160ce:	e7ae      	b.n	801602e <_ZN8touchgfx16TouchCalibration7muldivuEmmmmmRm+0x22>

080160d0 <_ZN8touchgfx16TouchCalibration6muldivEllllRl>:
 80160d0:	e92d 43f0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, lr}
 80160d4:	b085      	sub	sp, #20
 80160d6:	f1b0 0900 	subs.w	r9, r0, #0
 80160da:	9c0c      	ldr	r4, [sp, #48]	; 0x30
 80160dc:	461d      	mov	r5, r3
 80160de:	bfbf      	itttt	lt
 80160e0:	6823      	ldrlt	r3, [r4, #0]
 80160e2:	425b      	neglt	r3, r3
 80160e4:	f1c9 0900 	rsblt	r9, r9, #0
 80160e8:	6023      	strlt	r3, [r4, #0]
 80160ea:	bfb4      	ite	lt
 80160ec:	f04f 36ff 	movlt.w	r6, #4294967295
 80160f0:	2601      	movge	r6, #1
 80160f2:	2a00      	cmp	r2, #0
 80160f4:	4617      	mov	r7, r2
 80160f6:	da04      	bge.n	8016102 <_ZN8touchgfx16TouchCalibration6muldivEllllRl+0x32>
 80160f8:	6823      	ldr	r3, [r4, #0]
 80160fa:	425b      	negs	r3, r3
 80160fc:	4257      	negs	r7, r2
 80160fe:	4276      	negs	r6, r6
 8016100:	6023      	str	r3, [r4, #0]
 8016102:	2d00      	cmp	r5, #0
 8016104:	4638      	mov	r0, r7
 8016106:	bfba      	itte	lt
 8016108:	426d      	neglt	r5, r5
 801610a:	f04f 38ff 	movlt.w	r8, #4294967295
 801610e:	f04f 0801 	movge.w	r8, #1
 8016112:	f7ff ff5d 	bl	8015fd0 <_ZN8touchgfx16TouchCalibration4clzuEm>
 8016116:	ab03      	add	r3, sp, #12
 8016118:	e9cd 5300 	strd	r5, r3, [sp]
 801611c:	463a      	mov	r2, r7
 801611e:	4603      	mov	r3, r0
 8016120:	4648      	mov	r0, r9
 8016122:	f7ff ff73 	bl	801600c <_ZN8touchgfx16TouchCalibration7muldivuEmmmmmRm>
 8016126:	6823      	ldr	r3, [r4, #0]
 8016128:	9a03      	ldr	r2, [sp, #12]
 801612a:	4546      	cmp	r6, r8
 801612c:	441a      	add	r2, r3
 801612e:	fb92 f3f5 	sdiv	r3, r2, r5
 8016132:	4418      	add	r0, r3
 8016134:	bf18      	it	ne
 8016136:	4240      	negne	r0, r0
 8016138:	fb05 2313 	mls	r3, r5, r3, r2
 801613c:	1c72      	adds	r2, r6, #1
 801613e:	6023      	str	r3, [r4, #0]
 8016140:	d105      	bne.n	801614e <_ZN8touchgfx16TouchCalibration6muldivEllllRl+0x7e>
 8016142:	2b00      	cmp	r3, #0
 8016144:	f1c3 0200 	rsb	r2, r3, #0
 8016148:	db0b      	blt.n	8016162 <_ZN8touchgfx16TouchCalibration6muldivEllllRl+0x92>
 801614a:	6022      	str	r2, [r4, #0]
 801614c:	e006      	b.n	801615c <_ZN8touchgfx16TouchCalibration6muldivEllllRl+0x8c>
 801614e:	2e01      	cmp	r6, #1
 8016150:	d104      	bne.n	801615c <_ZN8touchgfx16TouchCalibration6muldivEllllRl+0x8c>
 8016152:	2b00      	cmp	r3, #0
 8016154:	da02      	bge.n	801615c <_ZN8touchgfx16TouchCalibration6muldivEllllRl+0x8c>
 8016156:	442b      	add	r3, r5
 8016158:	3801      	subs	r0, #1
 801615a:	6023      	str	r3, [r4, #0]
 801615c:	b005      	add	sp, #20
 801615e:	e8bd 83f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, pc}
 8016162:	3801      	subs	r0, #1
 8016164:	1b52      	subs	r2, r2, r5
 8016166:	e7f0      	b.n	801614a <_ZN8touchgfx16TouchCalibration6muldivEllllRl+0x7a>

08016168 <_ZN8touchgfx16TouchCalibration14translatePointERNS_5PointE>:
 8016168:	e92d 41ff 	stmdb	sp!, {r0, r1, r2, r3, r4, r5, r6, r7, r8, lr}
 801616c:	4c1c      	ldr	r4, [pc, #112]	; (80161e0 <_ZN8touchgfx16TouchCalibration14translatePointERNS_5PointE+0x78>)
 801616e:	6807      	ldr	r7, [r0, #0]
 8016170:	69a3      	ldr	r3, [r4, #24]
 8016172:	4605      	mov	r5, r0
 8016174:	b92b      	cbnz	r3, 8016182 <_ZN8touchgfx16TouchCalibration14translatePointERNS_5PointE+0x1a>
 8016176:	6840      	ldr	r0, [r0, #4]
 8016178:	e9c5 7000 	strd	r7, r0, [r5]
 801617c:	b004      	add	sp, #16
 801617e:	e8bd 81f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, pc}
 8016182:	68a2      	ldr	r2, [r4, #8]
 8016184:	6820      	ldr	r0, [r4, #0]
 8016186:	ae04      	add	r6, sp, #16
 8016188:	f04f 0802 	mov.w	r8, #2
 801618c:	fb93 f1f8 	sdiv	r1, r3, r8
 8016190:	440a      	add	r2, r1
 8016192:	f846 2d04 	str.w	r2, [r6, #-4]!
 8016196:	69e1      	ldr	r1, [r4, #28]
 8016198:	9600      	str	r6, [sp, #0]
 801619a:	463a      	mov	r2, r7
 801619c:	f7ff ff98 	bl	80160d0 <_ZN8touchgfx16TouchCalibration6muldivEllllRl>
 80161a0:	69a3      	ldr	r3, [r4, #24]
 80161a2:	686a      	ldr	r2, [r5, #4]
 80161a4:	6a21      	ldr	r1, [r4, #32]
 80161a6:	9600      	str	r6, [sp, #0]
 80161a8:	4607      	mov	r7, r0
 80161aa:	6860      	ldr	r0, [r4, #4]
 80161ac:	f7ff ff90 	bl	80160d0 <_ZN8touchgfx16TouchCalibration6muldivEllllRl>
 80161b0:	6962      	ldr	r2, [r4, #20]
 80161b2:	69a3      	ldr	r3, [r4, #24]
 80161b4:	fb93 f8f8 	sdiv	r8, r3, r8
 80161b8:	4442      	add	r2, r8
 80161ba:	9203      	str	r2, [sp, #12]
 80161bc:	6a61      	ldr	r1, [r4, #36]	; 0x24
 80161be:	682a      	ldr	r2, [r5, #0]
 80161c0:	9600      	str	r6, [sp, #0]
 80161c2:	4407      	add	r7, r0
 80161c4:	68e0      	ldr	r0, [r4, #12]
 80161c6:	f7ff ff83 	bl	80160d0 <_ZN8touchgfx16TouchCalibration6muldivEllllRl>
 80161ca:	9600      	str	r6, [sp, #0]
 80161cc:	4680      	mov	r8, r0
 80161ce:	69a3      	ldr	r3, [r4, #24]
 80161d0:	686a      	ldr	r2, [r5, #4]
 80161d2:	6aa1      	ldr	r1, [r4, #40]	; 0x28
 80161d4:	6920      	ldr	r0, [r4, #16]
 80161d6:	f7ff ff7b 	bl	80160d0 <_ZN8touchgfx16TouchCalibration6muldivEllllRl>
 80161da:	4440      	add	r0, r8
 80161dc:	e7cc      	b.n	8016178 <_ZN8touchgfx16TouchCalibration14translatePointERNS_5PointE+0x10>
 80161de:	bf00      	nop
 80161e0:	20013830 	.word	0x20013830

080161e4 <_ZN8touchgfx21DisplayTransformation29transformDisplayToFrameBufferERsS1_>:
 80161e4:	4b07      	ldr	r3, [pc, #28]	; (8016204 <_ZN8touchgfx21DisplayTransformation29transformDisplayToFrameBufferERsS1_+0x20>)
 80161e6:	781b      	ldrb	r3, [r3, #0]
 80161e8:	2b01      	cmp	r3, #1
 80161ea:	d109      	bne.n	8016200 <_ZN8touchgfx21DisplayTransformation29transformDisplayToFrameBufferERsS1_+0x1c>
 80161ec:	f9b1 3000 	ldrsh.w	r3, [r1]
 80161f0:	f9b0 2000 	ldrsh.w	r2, [r0]
 80161f4:	8003      	strh	r3, [r0, #0]
 80161f6:	4b04      	ldr	r3, [pc, #16]	; (8016208 <_ZN8touchgfx21DisplayTransformation29transformDisplayToFrameBufferERsS1_+0x24>)
 80161f8:	881b      	ldrh	r3, [r3, #0]
 80161fa:	3b01      	subs	r3, #1
 80161fc:	1a9b      	subs	r3, r3, r2
 80161fe:	800b      	strh	r3, [r1, #0]
 8016200:	4770      	bx	lr
 8016202:	bf00      	nop
 8016204:	20013814 	.word	0x20013814
 8016208:	20013810 	.word	0x20013810

0801620c <_ZN8touchgfx21DisplayTransformation29transformFrameBufferToDisplayERsS1_>:
 801620c:	b510      	push	{r4, lr}
 801620e:	4b07      	ldr	r3, [pc, #28]	; (801622c <_ZN8touchgfx21DisplayTransformation29transformFrameBufferToDisplayERsS1_+0x20>)
 8016210:	781b      	ldrb	r3, [r3, #0]
 8016212:	2b01      	cmp	r3, #1
 8016214:	d108      	bne.n	8016228 <_ZN8touchgfx21DisplayTransformation29transformFrameBufferToDisplayERsS1_+0x1c>
 8016216:	4b06      	ldr	r3, [pc, #24]	; (8016230 <_ZN8touchgfx21DisplayTransformation29transformFrameBufferToDisplayERsS1_+0x24>)
 8016218:	880c      	ldrh	r4, [r1, #0]
 801621a:	881b      	ldrh	r3, [r3, #0]
 801621c:	f9b0 2000 	ldrsh.w	r2, [r0]
 8016220:	3b01      	subs	r3, #1
 8016222:	1b1b      	subs	r3, r3, r4
 8016224:	8003      	strh	r3, [r0, #0]
 8016226:	800a      	strh	r2, [r1, #0]
 8016228:	bd10      	pop	{r4, pc}
 801622a:	bf00      	nop
 801622c:	20013814 	.word	0x20013814
 8016230:	20013810 	.word	0x20013810

08016234 <_ZN8touchgfx21DisplayTransformation29transformFrameBufferToDisplayERNS_4RectE>:
 8016234:	b510      	push	{r4, lr}
 8016236:	4b0a      	ldr	r3, [pc, #40]	; (8016260 <_ZN8touchgfx21DisplayTransformation29transformFrameBufferToDisplayERNS_4RectE+0x2c>)
 8016238:	781b      	ldrb	r3, [r3, #0]
 801623a:	2b01      	cmp	r3, #1
 801623c:	d10e      	bne.n	801625c <_ZN8touchgfx21DisplayTransformation29transformFrameBufferToDisplayERNS_4RectE+0x28>
 801623e:	f9b0 1006 	ldrsh.w	r1, [r0, #6]
 8016242:	8843      	ldrh	r3, [r0, #2]
 8016244:	f9b0 4000 	ldrsh.w	r4, [r0]
 8016248:	8044      	strh	r4, [r0, #2]
 801624a:	18ca      	adds	r2, r1, r3
 801624c:	4b05      	ldr	r3, [pc, #20]	; (8016264 <_ZN8touchgfx21DisplayTransformation29transformFrameBufferToDisplayERNS_4RectE+0x30>)
 801624e:	881b      	ldrh	r3, [r3, #0]
 8016250:	1a9b      	subs	r3, r3, r2
 8016252:	8003      	strh	r3, [r0, #0]
 8016254:	f9b0 3004 	ldrsh.w	r3, [r0, #4]
 8016258:	80c3      	strh	r3, [r0, #6]
 801625a:	8081      	strh	r1, [r0, #4]
 801625c:	bd10      	pop	{r4, pc}
 801625e:	bf00      	nop
 8016260:	20013814 	.word	0x20013814
 8016264:	20013810 	.word	0x20013810

08016268 <_ZN8touchgfx21DisplayTransformation29transformDisplayToFrameBufferERNS_4RectE>:
 8016268:	4b08      	ldr	r3, [pc, #32]	; (801628c <_ZN8touchgfx21DisplayTransformation29transformDisplayToFrameBufferERNS_4RectE+0x24>)
 801626a:	781b      	ldrb	r3, [r3, #0]
 801626c:	2b01      	cmp	r3, #1
 801626e:	d10c      	bne.n	801628a <_ZN8touchgfx21DisplayTransformation29transformDisplayToFrameBufferERNS_4RectE+0x22>
 8016270:	8803      	ldrh	r3, [r0, #0]
 8016272:	f9b0 1004 	ldrsh.w	r1, [r0, #4]
 8016276:	8842      	ldrh	r2, [r0, #2]
 8016278:	8002      	strh	r2, [r0, #0]
 801627a:	185a      	adds	r2, r3, r1
 801627c:	4b04      	ldr	r3, [pc, #16]	; (8016290 <_ZN8touchgfx21DisplayTransformation29transformDisplayToFrameBufferERNS_4RectE+0x28>)
 801627e:	881b      	ldrh	r3, [r3, #0]
 8016280:	1a9b      	subs	r3, r3, r2
 8016282:	8043      	strh	r3, [r0, #2]
 8016284:	88c3      	ldrh	r3, [r0, #6]
 8016286:	8083      	strh	r3, [r0, #4]
 8016288:	80c1      	strh	r1, [r0, #6]
 801628a:	4770      	bx	lr
 801628c:	20013814 	.word	0x20013814
 8016290:	20013810 	.word	0x20013810

08016294 <_ZN8touchgfx21DisplayTransformation29transformDisplayToFrameBufferERsS1_RKNS_4RectE>:
 8016294:	b510      	push	{r4, lr}
 8016296:	4b07      	ldr	r3, [pc, #28]	; (80162b4 <_ZN8touchgfx21DisplayTransformation29transformDisplayToFrameBufferERsS1_RKNS_4RectE+0x20>)
 8016298:	781b      	ldrb	r3, [r3, #0]
 801629a:	2b01      	cmp	r3, #1
 801629c:	d108      	bne.n	80162b0 <_ZN8touchgfx21DisplayTransformation29transformDisplayToFrameBufferERsS1_RKNS_4RectE+0x1c>
 801629e:	f9b1 3000 	ldrsh.w	r3, [r1]
 80162a2:	f9b0 4000 	ldrsh.w	r4, [r0]
 80162a6:	8003      	strh	r3, [r0, #0]
 80162a8:	8893      	ldrh	r3, [r2, #4]
 80162aa:	3b01      	subs	r3, #1
 80162ac:	1b1b      	subs	r3, r3, r4
 80162ae:	800b      	strh	r3, [r1, #0]
 80162b0:	bd10      	pop	{r4, pc}
 80162b2:	bf00      	nop
 80162b4:	20013814 	.word	0x20013814

080162b8 <_ZN8touchgfx21DisplayTransformation29transformDisplayToFrameBufferERfS1_RKNS_4RectE>:
 80162b8:	4b0b      	ldr	r3, [pc, #44]	; (80162e8 <_ZN8touchgfx21DisplayTransformation29transformDisplayToFrameBufferERfS1_RKNS_4RectE+0x30>)
 80162ba:	781b      	ldrb	r3, [r3, #0]
 80162bc:	2b01      	cmp	r3, #1
 80162be:	d111      	bne.n	80162e4 <_ZN8touchgfx21DisplayTransformation29transformDisplayToFrameBufferERfS1_RKNS_4RectE+0x2c>
 80162c0:	680b      	ldr	r3, [r1, #0]
 80162c2:	ed90 7a00 	vldr	s14, [r0]
 80162c6:	6003      	str	r3, [r0, #0]
 80162c8:	f9b2 3004 	ldrsh.w	r3, [r2, #4]
 80162cc:	eddf 6a07 	vldr	s13, [pc, #28]	; 80162ec <_ZN8touchgfx21DisplayTransformation29transformDisplayToFrameBufferERfS1_RKNS_4RectE+0x34>
 80162d0:	ee07 3a90 	vmov	s15, r3
 80162d4:	eef8 7ae7 	vcvt.f32.s32	s15, s15
 80162d8:	ee77 7ae6 	vsub.f32	s15, s15, s13
 80162dc:	ee77 7ac7 	vsub.f32	s15, s15, s14
 80162e0:	edc1 7a00 	vstr	s15, [r1]
 80162e4:	4770      	bx	lr
 80162e6:	bf00      	nop
 80162e8:	20013814 	.word	0x20013814
 80162ec:	38d1b717 	.word	0x38d1b717

080162f0 <_ZN8touchgfx21DisplayTransformation29transformDisplayToFrameBufferERNS_4RectERKS1_>:
 80162f0:	b510      	push	{r4, lr}
 80162f2:	4b0a      	ldr	r3, [pc, #40]	; (801631c <_ZN8touchgfx21DisplayTransformation29transformDisplayToFrameBufferERNS_4RectERKS1_+0x2c>)
 80162f4:	781b      	ldrb	r3, [r3, #0]
 80162f6:	2b01      	cmp	r3, #1
 80162f8:	460a      	mov	r2, r1
 80162fa:	d10d      	bne.n	8016318 <_ZN8touchgfx21DisplayTransformation29transformDisplayToFrameBufferERNS_4RectERKS1_+0x28>
 80162fc:	8881      	ldrh	r1, [r0, #4]
 80162fe:	8803      	ldrh	r3, [r0, #0]
 8016300:	440b      	add	r3, r1
 8016302:	4601      	mov	r1, r0
 8016304:	3b01      	subs	r3, #1
 8016306:	f821 3b02 	strh.w	r3, [r1], #2
 801630a:	f7ff ffc3 	bl	8016294 <_ZN8touchgfx21DisplayTransformation29transformDisplayToFrameBufferERsS1_RKNS_4RectE>
 801630e:	f9b0 3004 	ldrsh.w	r3, [r0, #4]
 8016312:	88c2      	ldrh	r2, [r0, #6]
 8016314:	8082      	strh	r2, [r0, #4]
 8016316:	80c3      	strh	r3, [r0, #6]
 8016318:	bd10      	pop	{r4, pc}
 801631a:	bf00      	nop
 801631c:	20013814 	.word	0x20013814

08016320 <_ZN8touchgfx11Application13requestRedrawEv>:
 8016320:	4b06      	ldr	r3, [pc, #24]	; (801633c <_ZN8touchgfx11Application13requestRedrawEv+0x1c>)
 8016322:	f9b3 2000 	ldrsh.w	r2, [r3]
 8016326:	4b06      	ldr	r3, [pc, #24]	; (8016340 <_ZN8touchgfx11Application13requestRedrawEv+0x20>)
 8016328:	f8a0 2134 	strh.w	r2, [r0, #308]	; 0x134
 801632c:	f9b3 3000 	ldrsh.w	r3, [r3]
 8016330:	f8a0 3136 	strh.w	r3, [r0, #310]	; 0x136
 8016334:	2100      	movs	r1, #0
 8016336:	f8c0 1130 	str.w	r1, [r0, #304]	; 0x130
 801633a:	4770      	bx	lr
 801633c:	20013810 	.word	0x20013810
 8016340:	20013812 	.word	0x20013812

08016344 <_ZN8touchgfx11Application16handleClickEventERKNS_10ClickEventE>:
 8016344:	4b03      	ldr	r3, [pc, #12]	; (8016354 <_ZN8touchgfx11Application16handleClickEventERKNS_10ClickEventE+0x10>)
 8016346:	6818      	ldr	r0, [r3, #0]
 8016348:	b110      	cbz	r0, 8016350 <_ZN8touchgfx11Application16handleClickEventERKNS_10ClickEventE+0xc>
 801634a:	6803      	ldr	r3, [r0, #0]
 801634c:	699b      	ldr	r3, [r3, #24]
 801634e:	4718      	bx	r3
 8016350:	4770      	bx	lr
 8016352:	bf00      	nop
 8016354:	20013860 	.word	0x20013860

08016358 <_ZN8touchgfx11Application29handlePendingScreenTransitionEv>:
 8016358:	4770      	bx	lr
	...

0801635c <_ZN8touchgfx11Application4drawEv>:
 801635c:	b507      	push	{r0, r1, r2, lr}
 801635e:	4b09      	ldr	r3, [pc, #36]	; (8016384 <_ZN8touchgfx11Application4drawEv+0x28>)
 8016360:	f9b3 2000 	ldrsh.w	r2, [r3]
 8016364:	4b08      	ldr	r3, [pc, #32]	; (8016388 <_ZN8touchgfx11Application4drawEv+0x2c>)
 8016366:	f8ad 2004 	strh.w	r2, [sp, #4]
 801636a:	f9b3 3000 	ldrsh.w	r3, [r3]
 801636e:	f8ad 3006 	strh.w	r3, [sp, #6]
 8016372:	6803      	ldr	r3, [r0, #0]
 8016374:	2100      	movs	r1, #0
 8016376:	9100      	str	r1, [sp, #0]
 8016378:	6c9b      	ldr	r3, [r3, #72]	; 0x48
 801637a:	4669      	mov	r1, sp
 801637c:	4798      	blx	r3
 801637e:	b003      	add	sp, #12
 8016380:	f85d fb04 	ldr.w	pc, [sp], #4
 8016384:	20013810 	.word	0x20013810
 8016388:	20013812 	.word	0x20013812

0801638c <_ZN8touchgfx11Application10invalidateEv>:
 801638c:	4b09      	ldr	r3, [pc, #36]	; (80163b4 <_ZN8touchgfx11Application10invalidateEv+0x28>)
 801638e:	f9b3 2000 	ldrsh.w	r2, [r3]
 8016392:	4b09      	ldr	r3, [pc, #36]	; (80163b8 <_ZN8touchgfx11Application10invalidateEv+0x2c>)
 8016394:	b082      	sub	sp, #8
 8016396:	f9b3 3000 	ldrsh.w	r3, [r3]
 801639a:	f8ad 2004 	strh.w	r2, [sp, #4]
 801639e:	2100      	movs	r1, #0
 80163a0:	f8ad 3006 	strh.w	r3, [sp, #6]
 80163a4:	9100      	str	r1, [sp, #0]
 80163a6:	6803      	ldr	r3, [r0, #0]
 80163a8:	aa02      	add	r2, sp, #8
 80163aa:	e912 0006 	ldmdb	r2, {r1, r2}
 80163ae:	6c1b      	ldr	r3, [r3, #64]	; 0x40
 80163b0:	b002      	add	sp, #8
 80163b2:	4718      	bx	r3
 80163b4:	20013810 	.word	0x20013810
 80163b8:	20013812 	.word	0x20013812

080163bc <_ZN8touchgfx11Application15handleDragEventERKNS_9DragEventE>:
 80163bc:	4b03      	ldr	r3, [pc, #12]	; (80163cc <_ZN8touchgfx11Application15handleDragEventERKNS_9DragEventE+0x10>)
 80163be:	6818      	ldr	r0, [r3, #0]
 80163c0:	b110      	cbz	r0, 80163c8 <_ZN8touchgfx11Application15handleDragEventERKNS_9DragEventE+0xc>
 80163c2:	6803      	ldr	r3, [r0, #0]
 80163c4:	69db      	ldr	r3, [r3, #28]
 80163c6:	4718      	bx	r3
 80163c8:	4770      	bx	lr
 80163ca:	bf00      	nop
 80163cc:	20013860 	.word	0x20013860

080163d0 <_ZN8touchgfx11Application18handleGestureEventERKNS_12GestureEventE>:
 80163d0:	4b03      	ldr	r3, [pc, #12]	; (80163e0 <_ZN8touchgfx11Application18handleGestureEventERKNS_12GestureEventE+0x10>)
 80163d2:	6818      	ldr	r0, [r3, #0]
 80163d4:	b110      	cbz	r0, 80163dc <_ZN8touchgfx11Application18handleGestureEventERKNS_12GestureEventE+0xc>
 80163d6:	6803      	ldr	r3, [r0, #0]
 80163d8:	6a1b      	ldr	r3, [r3, #32]
 80163da:	4718      	bx	r3
 80163dc:	4770      	bx	lr
 80163de:	bf00      	nop
 80163e0:	20013860 	.word	0x20013860

080163e4 <_ZN8touchgfx11Application16clearCachedAreasEv>:
 80163e4:	2300      	movs	r3, #0
 80163e6:	f8a0 30ec 	strh.w	r3, [r0, #236]	; 0xec
 80163ea:	4770      	bx	lr

080163ec <_ZN8touchgfx11Application14handleKeyEventEh>:
 80163ec:	4b03      	ldr	r3, [pc, #12]	; (80163fc <_ZN8touchgfx11Application14handleKeyEventEh+0x10>)
 80163ee:	6818      	ldr	r0, [r3, #0]
 80163f0:	b110      	cbz	r0, 80163f8 <_ZN8touchgfx11Application14handleKeyEventEh+0xc>
 80163f2:	6803      	ldr	r3, [r0, #0]
 80163f4:	6a9b      	ldr	r3, [r3, #40]	; 0x28
 80163f6:	4718      	bx	r3
 80163f8:	4770      	bx	lr
 80163fa:	bf00      	nop
 80163fc:	20013860 	.word	0x20013860

08016400 <_ZN8touchgfx11ApplicationD1Ev>:
 8016400:	4770      	bx	lr

08016402 <_ZN8touchgfx11ApplicationD0Ev>:
 8016402:	b510      	push	{r4, lr}
 8016404:	f44f 719e 	mov.w	r1, #316	; 0x13c
 8016408:	4604      	mov	r4, r0
 801640a:	f014 f996 	bl	802a73a <_ZdlPvj>
 801640e:	4620      	mov	r0, r4
 8016410:	bd10      	pop	{r4, pc}

08016412 <_ZNK8touchgfx4Rect9intersectERKS0_>:
 8016412:	b510      	push	{r4, lr}
 8016414:	f9b1 4000 	ldrsh.w	r4, [r1]
 8016418:	888a      	ldrh	r2, [r1, #4]
 801641a:	f9b0 3000 	ldrsh.w	r3, [r0]
 801641e:	4422      	add	r2, r4
 8016420:	b212      	sxth	r2, r2
 8016422:	4293      	cmp	r3, r2
 8016424:	da15      	bge.n	8016452 <_ZNK8touchgfx4Rect9intersectERKS0_+0x40>
 8016426:	8882      	ldrh	r2, [r0, #4]
 8016428:	4413      	add	r3, r2
 801642a:	b21b      	sxth	r3, r3
 801642c:	429c      	cmp	r4, r3
 801642e:	da10      	bge.n	8016452 <_ZNK8touchgfx4Rect9intersectERKS0_+0x40>
 8016430:	f9b1 3002 	ldrsh.w	r3, [r1, #2]
 8016434:	88c9      	ldrh	r1, [r1, #6]
 8016436:	f9b0 2002 	ldrsh.w	r2, [r0, #2]
 801643a:	4419      	add	r1, r3
 801643c:	b209      	sxth	r1, r1
 801643e:	428a      	cmp	r2, r1
 8016440:	da07      	bge.n	8016452 <_ZNK8touchgfx4Rect9intersectERKS0_+0x40>
 8016442:	88c0      	ldrh	r0, [r0, #6]
 8016444:	4410      	add	r0, r2
 8016446:	b200      	sxth	r0, r0
 8016448:	4283      	cmp	r3, r0
 801644a:	bfac      	ite	ge
 801644c:	2000      	movge	r0, #0
 801644e:	2001      	movlt	r0, #1
 8016450:	bd10      	pop	{r4, pc}
 8016452:	2000      	movs	r0, #0
 8016454:	e7fc      	b.n	8016450 <_ZNK8touchgfx4Rect9intersectERKS0_+0x3e>

08016456 <_ZN8touchgfx4Rect10restrictToEss>:
 8016456:	f9b0 3000 	ldrsh.w	r3, [r0]
 801645a:	2b00      	cmp	r3, #0
 801645c:	b510      	push	{r4, lr}
 801645e:	da04      	bge.n	801646a <_ZN8touchgfx4Rect10restrictToEss+0x14>
 8016460:	8884      	ldrh	r4, [r0, #4]
 8016462:	4423      	add	r3, r4
 8016464:	8083      	strh	r3, [r0, #4]
 8016466:	2300      	movs	r3, #0
 8016468:	8003      	strh	r3, [r0, #0]
 801646a:	f9b0 4000 	ldrsh.w	r4, [r0]
 801646e:	f9b0 3004 	ldrsh.w	r3, [r0, #4]
 8016472:	1b09      	subs	r1, r1, r4
 8016474:	428b      	cmp	r3, r1
 8016476:	f9b0 3002 	ldrsh.w	r3, [r0, #2]
 801647a:	bfc8      	it	gt
 801647c:	8081      	strhgt	r1, [r0, #4]
 801647e:	2b00      	cmp	r3, #0
 8016480:	da04      	bge.n	801648c <_ZN8touchgfx4Rect10restrictToEss+0x36>
 8016482:	88c1      	ldrh	r1, [r0, #6]
 8016484:	440b      	add	r3, r1
 8016486:	80c3      	strh	r3, [r0, #6]
 8016488:	2300      	movs	r3, #0
 801648a:	8043      	strh	r3, [r0, #2]
 801648c:	f9b0 1002 	ldrsh.w	r1, [r0, #2]
 8016490:	f9b0 3006 	ldrsh.w	r3, [r0, #6]
 8016494:	1a52      	subs	r2, r2, r1
 8016496:	4293      	cmp	r3, r2
 8016498:	bfc8      	it	gt
 801649a:	80c2      	strhgt	r2, [r0, #6]
 801649c:	bd10      	pop	{r4, pc}
	...

080164a0 <_ZN8touchgfx11Application4drawERNS_4RectE>:
 80164a0:	b510      	push	{r4, lr}
 80164a2:	4b10      	ldr	r3, [pc, #64]	; (80164e4 <_ZN8touchgfx11Application4drawERNS_4RectE+0x44>)
 80164a4:	f9b3 2000 	ldrsh.w	r2, [r3]
 80164a8:	4b0f      	ldr	r3, [pc, #60]	; (80164e8 <_ZN8touchgfx11Application4drawERNS_4RectE+0x48>)
 80164aa:	460c      	mov	r4, r1
 80164ac:	4620      	mov	r0, r4
 80164ae:	f9b3 1000 	ldrsh.w	r1, [r3]
 80164b2:	f7ff ffd0 	bl	8016456 <_ZN8touchgfx4Rect10restrictToEss>
 80164b6:	4b0d      	ldr	r3, [pc, #52]	; (80164ec <_ZN8touchgfx11Application4drawERNS_4RectE+0x4c>)
 80164b8:	6818      	ldr	r0, [r3, #0]
 80164ba:	b190      	cbz	r0, 80164e2 <_ZN8touchgfx11Application4drawERNS_4RectE+0x42>
 80164bc:	6803      	ldr	r3, [r0, #0]
 80164be:	4621      	mov	r1, r4
 80164c0:	689b      	ldr	r3, [r3, #8]
 80164c2:	4798      	blx	r3
 80164c4:	4b0a      	ldr	r3, [pc, #40]	; (80164f0 <_ZN8touchgfx11Application4drawERNS_4RectE+0x50>)
 80164c6:	6818      	ldr	r0, [r3, #0]
 80164c8:	b118      	cbz	r0, 80164d2 <_ZN8touchgfx11Application4drawERNS_4RectE+0x32>
 80164ca:	6803      	ldr	r3, [r0, #0]
 80164cc:	4621      	mov	r1, r4
 80164ce:	689b      	ldr	r3, [r3, #8]
 80164d0:	4798      	blx	r3
 80164d2:	4b08      	ldr	r3, [pc, #32]	; (80164f4 <_ZN8touchgfx11Application4drawERNS_4RectE+0x54>)
 80164d4:	6818      	ldr	r0, [r3, #0]
 80164d6:	6803      	ldr	r3, [r0, #0]
 80164d8:	4621      	mov	r1, r4
 80164da:	69db      	ldr	r3, [r3, #28]
 80164dc:	e8bd 4010 	ldmia.w	sp!, {r4, lr}
 80164e0:	4718      	bx	r3
 80164e2:	bd10      	pop	{r4, pc}
 80164e4:	20013812 	.word	0x20013812
 80164e8:	20013810 	.word	0x20013810
 80164ec:	20013860 	.word	0x20013860
 80164f0:	2001385c 	.word	0x2001385c
 80164f4:	2001381c 	.word	0x2001381c

080164f8 <_ZNK8touchgfx4Rect8includesERKS0_>:
 80164f8:	b5f8      	push	{r3, r4, r5, r6, r7, lr}
 80164fa:	4606      	mov	r6, r0
 80164fc:	4608      	mov	r0, r1
 80164fe:	460f      	mov	r7, r1
 8016500:	f7fa f957 	bl	80107b2 <_ZNK8touchgfx4Rect7isEmptyEv>
 8016504:	b9e8      	cbnz	r0, 8016542 <_ZNK8touchgfx4Rect8includesERKS0_+0x4a>
 8016506:	f9b7 5000 	ldrsh.w	r5, [r7]
 801650a:	f9b6 4000 	ldrsh.w	r4, [r6]
 801650e:	42a5      	cmp	r5, r4
 8016510:	db17      	blt.n	8016542 <_ZNK8touchgfx4Rect8includesERKS0_+0x4a>
 8016512:	f9b7 2002 	ldrsh.w	r2, [r7, #2]
 8016516:	f9b6 3002 	ldrsh.w	r3, [r6, #2]
 801651a:	429a      	cmp	r2, r3
 801651c:	db11      	blt.n	8016542 <_ZNK8touchgfx4Rect8includesERKS0_+0x4a>
 801651e:	88b9      	ldrh	r1, [r7, #4]
 8016520:	440d      	add	r5, r1
 8016522:	88b1      	ldrh	r1, [r6, #4]
 8016524:	440c      	add	r4, r1
 8016526:	b22d      	sxth	r5, r5
 8016528:	b224      	sxth	r4, r4
 801652a:	42a5      	cmp	r5, r4
 801652c:	dc09      	bgt.n	8016542 <_ZNK8touchgfx4Rect8includesERKS0_+0x4a>
 801652e:	88f8      	ldrh	r0, [r7, #6]
 8016530:	4410      	add	r0, r2
 8016532:	88f2      	ldrh	r2, [r6, #6]
 8016534:	4413      	add	r3, r2
 8016536:	b200      	sxth	r0, r0
 8016538:	b21b      	sxth	r3, r3
 801653a:	4298      	cmp	r0, r3
 801653c:	bfcc      	ite	gt
 801653e:	2000      	movgt	r0, #0
 8016540:	2001      	movle	r0, #1
 8016542:	bdf8      	pop	{r3, r4, r5, r6, r7, pc}

08016544 <_ZN8touchgfx4Rect11expandToFitERKS0_>:
 8016544:	b5f8      	push	{r3, r4, r5, r6, r7, lr}
 8016546:	4604      	mov	r4, r0
 8016548:	4608      	mov	r0, r1
 801654a:	460d      	mov	r5, r1
 801654c:	f7fa f931 	bl	80107b2 <_ZNK8touchgfx4Rect7isEmptyEv>
 8016550:	b978      	cbnz	r0, 8016572 <_ZN8touchgfx4Rect11expandToFitERKS0_+0x2e>
 8016552:	4620      	mov	r0, r4
 8016554:	f7fa f92d 	bl	80107b2 <_ZNK8touchgfx4Rect7isEmptyEv>
 8016558:	f9b5 6000 	ldrsh.w	r6, [r5]
 801655c:	b150      	cbz	r0, 8016574 <_ZN8touchgfx4Rect11expandToFitERKS0_+0x30>
 801655e:	8026      	strh	r6, [r4, #0]
 8016560:	f9b5 3002 	ldrsh.w	r3, [r5, #2]
 8016564:	8063      	strh	r3, [r4, #2]
 8016566:	f9b5 3004 	ldrsh.w	r3, [r5, #4]
 801656a:	80a3      	strh	r3, [r4, #4]
 801656c:	f9b5 3006 	ldrsh.w	r3, [r5, #6]
 8016570:	80e3      	strh	r3, [r4, #6]
 8016572:	bdf8      	pop	{r3, r4, r5, r6, r7, pc}
 8016574:	f9b4 1000 	ldrsh.w	r1, [r4]
 8016578:	f9b5 2002 	ldrsh.w	r2, [r5, #2]
 801657c:	f9b4 3002 	ldrsh.w	r3, [r4, #2]
 8016580:	f8b5 c004 	ldrh.w	ip, [r5, #4]
 8016584:	88ed      	ldrh	r5, [r5, #6]
 8016586:	42b1      	cmp	r1, r6
 8016588:	460f      	mov	r7, r1
 801658a:	bfa8      	it	ge
 801658c:	4637      	movge	r7, r6
 801658e:	4293      	cmp	r3, r2
 8016590:	4618      	mov	r0, r3
 8016592:	4466      	add	r6, ip
 8016594:	bfa8      	it	ge
 8016596:	4610      	movge	r0, r2
 8016598:	f8b4 c004 	ldrh.w	ip, [r4, #4]
 801659c:	8027      	strh	r7, [r4, #0]
 801659e:	442a      	add	r2, r5
 80165a0:	88e5      	ldrh	r5, [r4, #6]
 80165a2:	8060      	strh	r0, [r4, #2]
 80165a4:	4461      	add	r1, ip
 80165a6:	442b      	add	r3, r5
 80165a8:	b236      	sxth	r6, r6
 80165aa:	b209      	sxth	r1, r1
 80165ac:	b212      	sxth	r2, r2
 80165ae:	b21b      	sxth	r3, r3
 80165b0:	428e      	cmp	r6, r1
 80165b2:	bfac      	ite	ge
 80165b4:	ebc7 0106 	rsbge	r1, r7, r6
 80165b8:	ebc7 0101 	rsblt	r1, r7, r1
 80165bc:	429a      	cmp	r2, r3
 80165be:	bfac      	ite	ge
 80165c0:	ebc0 0202 	rsbge	r2, r0, r2
 80165c4:	ebc0 0203 	rsblt	r2, r0, r3
 80165c8:	80a1      	strh	r1, [r4, #4]
 80165ca:	80e2      	strh	r2, [r4, #6]
 80165cc:	e7d1      	b.n	8016572 <_ZN8touchgfx4Rect11expandToFitERKS0_+0x2e>
	...

080165d0 <_ZN8touchgfx11Application11getInstanceEv>:
 80165d0:	4b01      	ldr	r3, [pc, #4]	; (80165d8 <_ZN8touchgfx11Application11getInstanceEv+0x8>)
 80165d2:	6818      	ldr	r0, [r3, #0]
 80165d4:	4770      	bx	lr
 80165d6:	bf00      	nop
 80165d8:	20013870 	.word	0x20013870

080165dc <_ZN8touchgfx11Application41copyInvalidatedAreasFromTFTToClientBufferEv>:
 80165dc:	b5f8      	push	{r3, r4, r5, r6, r7, lr}
 80165de:	4b10      	ldr	r3, [pc, #64]	; (8016620 <_ZN8touchgfx11Application41copyInvalidatedAreasFromTFTToClientBufferEv+0x44>)
 80165e0:	781b      	ldrb	r3, [r3, #0]
 80165e2:	4605      	mov	r5, r0
 80165e4:	b1d3      	cbz	r3, 801661c <_ZN8touchgfx11Application41copyInvalidatedAreasFromTFTToClientBufferEv+0x40>
 80165e6:	4b0f      	ldr	r3, [pc, #60]	; (8016624 <_ZN8touchgfx11Application41copyInvalidatedAreasFromTFTToClientBufferEv+0x48>)
 80165e8:	4f0f      	ldr	r7, [pc, #60]	; (8016628 <_ZN8touchgfx11Application41copyInvalidatedAreasFromTFTToClientBufferEv+0x4c>)
 80165ea:	881c      	ldrh	r4, [r3, #0]
 80165ec:	f100 06ee 	add.w	r6, r0, #238	; 0xee
 80165f0:	f8b5 312e 	ldrh.w	r3, [r5, #302]	; 0x12e
 80165f4:	42a3      	cmp	r3, r4
 80165f6:	d90e      	bls.n	8016616 <_ZN8touchgfx11Application41copyInvalidatedAreasFromTFTToClientBufferEv+0x3a>
 80165f8:	683b      	ldr	r3, [r7, #0]
 80165fa:	f893 2058 	ldrb.w	r2, [r3, #88]	; 0x58
 80165fe:	b10a      	cbz	r2, 8016604 <_ZN8touchgfx11Application41copyInvalidatedAreasFromTFTToClientBufferEv+0x28>
 8016600:	6cd8      	ldr	r0, [r3, #76]	; 0x4c
 8016602:	b900      	cbnz	r0, 8016606 <_ZN8touchgfx11Application41copyInvalidatedAreasFromTFTToClientBufferEv+0x2a>
 8016604:	6898      	ldr	r0, [r3, #8]
 8016606:	6803      	ldr	r3, [r0, #0]
 8016608:	eb06 01c4 	add.w	r1, r6, r4, lsl #3
 801660c:	69db      	ldr	r3, [r3, #28]
 801660e:	3401      	adds	r4, #1
 8016610:	4798      	blx	r3
 8016612:	b2a4      	uxth	r4, r4
 8016614:	e7ec      	b.n	80165f0 <_ZN8touchgfx11Application41copyInvalidatedAreasFromTFTToClientBufferEv+0x14>
 8016616:	2300      	movs	r3, #0
 8016618:	f8a5 312e 	strh.w	r3, [r5, #302]	; 0x12e
 801661c:	bdf8      	pop	{r3, r4, r5, r6, r7, pc}
 801661e:	bf00      	nop
 8016620:	2001381a 	.word	0x2001381a
 8016624:	20000088 	.word	0x20000088
 8016628:	2001381c 	.word	0x2001381c

0801662c <_ZN8touchgfx11Application12TimerWidgets10tickActiveEv>:
 801662c:	b510      	push	{r4, lr}
 801662e:	2300      	movs	r3, #0
 8016630:	f8a0 30a4 	strh.w	r3, [r0, #164]	; 0xa4
 8016634:	f8b0 3080 	ldrh.w	r3, [r0, #128]	; 0x80
 8016638:	f8a0 30a6 	strh.w	r3, [r0, #166]	; 0xa6
 801663c:	4604      	mov	r4, r0
 801663e:	f8b4 30a4 	ldrh.w	r3, [r4, #164]	; 0xa4
 8016642:	f8b4 20a6 	ldrh.w	r2, [r4, #166]	; 0xa6
 8016646:	429a      	cmp	r2, r3
 8016648:	d90e      	bls.n	8016668 <_ZN8touchgfx11Application12TimerWidgets10tickActiveEv+0x3c>
 801664a:	18e2      	adds	r2, r4, r3
 801664c:	f892 2084 	ldrb.w	r2, [r2, #132]	; 0x84
 8016650:	b122      	cbz	r2, 801665c <_ZN8touchgfx11Application12TimerWidgets10tickActiveEv+0x30>
 8016652:	f854 0023 	ldr.w	r0, [r4, r3, lsl #2]
 8016656:	6803      	ldr	r3, [r0, #0]
 8016658:	6d1b      	ldr	r3, [r3, #80]	; 0x50
 801665a:	4798      	blx	r3
 801665c:	f8b4 30a4 	ldrh.w	r3, [r4, #164]	; 0xa4
 8016660:	3301      	adds	r3, #1
 8016662:	f8a4 30a4 	strh.w	r3, [r4, #164]	; 0xa4
 8016666:	e7ea      	b.n	801663e <_ZN8touchgfx11Application12TimerWidgets10tickActiveEv+0x12>
 8016668:	bd10      	pop	{r4, pc}

0801666a <_ZN8touchgfx11Application12TimerWidgets6removeEPKNS_8DrawableE>:
 801666a:	b530      	push	{r4, r5, lr}
 801666c:	f8b0 5080 	ldrh.w	r5, [r0, #128]	; 0x80
 8016670:	2200      	movs	r2, #0
 8016672:	b293      	uxth	r3, r2
 8016674:	429d      	cmp	r5, r3
 8016676:	d90e      	bls.n	8016696 <_ZN8touchgfx11Application12TimerWidgets6removeEPKNS_8DrawableE+0x2c>
 8016678:	f850 3022 	ldr.w	r3, [r0, r2, lsl #2]
 801667c:	428b      	cmp	r3, r1
 801667e:	d10b      	bne.n	8016698 <_ZN8touchgfx11Application12TimerWidgets6removeEPKNS_8DrawableE+0x2e>
 8016680:	1884      	adds	r4, r0, r2
 8016682:	f894 3084 	ldrb.w	r3, [r4, #132]	; 0x84
 8016686:	b13b      	cbz	r3, 8016698 <_ZN8touchgfx11Application12TimerWidgets6removeEPKNS_8DrawableE+0x2e>
 8016688:	3b01      	subs	r3, #1
 801668a:	b2db      	uxtb	r3, r3
 801668c:	f884 3084 	strb.w	r3, [r4, #132]	; 0x84
 8016690:	b90b      	cbnz	r3, 8016696 <_ZN8touchgfx11Application12TimerWidgets6removeEPKNS_8DrawableE+0x2c>
 8016692:	f840 3022 	str.w	r3, [r0, r2, lsl #2]
 8016696:	bd30      	pop	{r4, r5, pc}
 8016698:	3201      	adds	r2, #1
 801669a:	e7ea      	b.n	8016672 <_ZN8touchgfx11Application12TimerWidgets6removeEPKNS_8DrawableE+0x8>

0801669c <_ZN8touchgfx11Application12TimerWidgets5clearEv>:
 801669c:	2300      	movs	r3, #0
 801669e:	f8a0 3080 	strh.w	r3, [r0, #128]	; 0x80
 80166a2:	f100 0284 	add.w	r2, r0, #132	; 0x84
 80166a6:	30a4      	adds	r0, #164	; 0xa4
 80166a8:	f802 3b01 	strb.w	r3, [r2], #1
 80166ac:	4282      	cmp	r2, r0
 80166ae:	d1fb      	bne.n	80166a8 <_ZN8touchgfx11Application12TimerWidgets5clearEv+0xc>
 80166b0:	4770      	bx	lr
	...

080166b4 <_ZN8touchgfx11Application12switchScreenEPNS_6ScreenE>:
 80166b4:	b570      	push	{r4, r5, r6, lr}
 80166b6:	4c0b      	ldr	r4, [pc, #44]	; (80166e4 <_ZN8touchgfx11Application12switchScreenEPNS_6ScreenE+0x30>)
 80166b8:	4605      	mov	r5, r0
 80166ba:	6820      	ldr	r0, [r4, #0]
 80166bc:	460e      	mov	r6, r1
 80166be:	b110      	cbz	r0, 80166c6 <_ZN8touchgfx11Application12switchScreenEPNS_6ScreenE+0x12>
 80166c0:	6803      	ldr	r3, [r0, #0]
 80166c2:	695b      	ldr	r3, [r3, #20]
 80166c4:	4798      	blx	r3
 80166c6:	1d28      	adds	r0, r5, #4
 80166c8:	f7ff ffe8 	bl	801669c <_ZN8touchgfx11Application12TimerWidgets5clearEv>
 80166cc:	6026      	str	r6, [r4, #0]
 80166ce:	6833      	ldr	r3, [r6, #0]
 80166d0:	4630      	mov	r0, r6
 80166d2:	68db      	ldr	r3, [r3, #12]
 80166d4:	4798      	blx	r3
 80166d6:	682b      	ldr	r3, [r5, #0]
 80166d8:	4628      	mov	r0, r5
 80166da:	6c5b      	ldr	r3, [r3, #68]	; 0x44
 80166dc:	e8bd 4070 	ldmia.w	sp!, {r4, r5, r6, lr}
 80166e0:	4718      	bx	r3
 80166e2:	bf00      	nop
 80166e4:	20013860 	.word	0x20013860

080166e8 <_ZN8touchgfx11Application12TimerWidgets7compactEv>:
 80166e8:	2300      	movs	r3, #0
 80166ea:	f8b0 c080 	ldrh.w	ip, [r0, #128]	; 0x80
 80166ee:	f8b0 10a4 	ldrh.w	r1, [r0, #164]	; 0xa4
 80166f2:	b5f0      	push	{r4, r5, r6, r7, lr}
 80166f4:	461a      	mov	r2, r3
 80166f6:	461c      	mov	r4, r3
 80166f8:	461d      	mov	r5, r3
 80166fa:	459c      	cmp	ip, r3
 80166fc:	dd1a      	ble.n	8016734 <_ZN8touchgfx11Application12TimerWidgets7compactEv+0x4c>
 80166fe:	18c6      	adds	r6, r0, r3
 8016700:	f896 6084 	ldrb.w	r6, [r6, #132]	; 0x84
 8016704:	b16e      	cbz	r6, 8016722 <_ZN8touchgfx11Application12TimerWidgets7compactEv+0x3a>
 8016706:	429a      	cmp	r2, r3
 8016708:	d008      	beq.n	801671c <_ZN8touchgfx11Application12TimerWidgets7compactEv+0x34>
 801670a:	fa1f fe82 	uxth.w	lr, r2
 801670e:	f850 7023 	ldr.w	r7, [r0, r3, lsl #2]
 8016712:	f840 702e 	str.w	r7, [r0, lr, lsl #2]
 8016716:	1887      	adds	r7, r0, r2
 8016718:	f887 6084 	strb.w	r6, [r7, #132]	; 0x84
 801671c:	3201      	adds	r2, #1
 801671e:	3301      	adds	r3, #1
 8016720:	e7eb      	b.n	80166fa <_ZN8touchgfx11Application12TimerWidgets7compactEv+0x12>
 8016722:	f8b0 60a6 	ldrh.w	r6, [r0, #166]	; 0xa6
 8016726:	4299      	cmp	r1, r3
 8016728:	bfa8      	it	ge
 801672a:	3501      	addge	r5, #1
 801672c:	429e      	cmp	r6, r3
 801672e:	bfc8      	it	gt
 8016730:	3401      	addgt	r4, #1
 8016732:	e7f4      	b.n	801671e <_ZN8touchgfx11Application12TimerWidgets7compactEv+0x36>
 8016734:	f8b0 30a6 	ldrh.w	r3, [r0, #166]	; 0xa6
 8016738:	1b49      	subs	r1, r1, r5
 801673a:	1b1b      	subs	r3, r3, r4
 801673c:	f8a0 10a4 	strh.w	r1, [r0, #164]	; 0xa4
 8016740:	f8a0 30a6 	strh.w	r3, [r0, #166]	; 0xa6
 8016744:	f8b0 3080 	ldrh.w	r3, [r0, #128]	; 0x80
 8016748:	4293      	cmp	r3, r2
 801674a:	dd03      	ble.n	8016754 <_ZN8touchgfx11Application12TimerWidgets7compactEv+0x6c>
 801674c:	3b01      	subs	r3, #1
 801674e:	f8a0 3080 	strh.w	r3, [r0, #128]	; 0x80
 8016752:	e7f7      	b.n	8016744 <_ZN8touchgfx11Application12TimerWidgets7compactEv+0x5c>
 8016754:	bdf0      	pop	{r4, r5, r6, r7, pc}
	...

08016758 <_ZN8touchgfx11Application15handleTickEventEv>:
 8016758:	b570      	push	{r4, r5, r6, lr}
 801675a:	4d16      	ldr	r5, [pc, #88]	; (80167b4 <_ZN8touchgfx11Application15handleTickEventEv+0x5c>)
 801675c:	4604      	mov	r4, r0
 801675e:	6828      	ldr	r0, [r5, #0]
 8016760:	b140      	cbz	r0, 8016774 <_ZN8touchgfx11Application15handleTickEventEv+0x1c>
 8016762:	7a03      	ldrb	r3, [r0, #8]
 8016764:	b933      	cbnz	r3, 8016774 <_ZN8touchgfx11Application15handleTickEventEv+0x1c>
 8016766:	f884 3138 	strb.w	r3, [r4, #312]	; 0x138
 801676a:	6803      	ldr	r3, [r0, #0]
 801676c:	689b      	ldr	r3, [r3, #8]
 801676e:	e8bd 4070 	ldmia.w	sp!, {r4, r5, r6, lr}
 8016772:	4718      	bx	r3
 8016774:	f894 3138 	ldrb.w	r3, [r4, #312]	; 0x138
 8016778:	4e0f      	ldr	r6, [pc, #60]	; (80167b8 <_ZN8touchgfx11Application15handleTickEventEv+0x60>)
 801677a:	b973      	cbnz	r3, 801679a <_ZN8touchgfx11Application15handleTickEventEv+0x42>
 801677c:	b168      	cbz	r0, 801679a <_ZN8touchgfx11Application15handleTickEventEv+0x42>
 801677e:	7a03      	ldrb	r3, [r0, #8]
 8016780:	b15b      	cbz	r3, 801679a <_ZN8touchgfx11Application15handleTickEventEv+0x42>
 8016782:	6830      	ldr	r0, [r6, #0]
 8016784:	b110      	cbz	r0, 801678c <_ZN8touchgfx11Application15handleTickEventEv+0x34>
 8016786:	6803      	ldr	r3, [r0, #0]
 8016788:	691b      	ldr	r3, [r3, #16]
 801678a:	4798      	blx	r3
 801678c:	6828      	ldr	r0, [r5, #0]
 801678e:	6803      	ldr	r3, [r0, #0]
 8016790:	68db      	ldr	r3, [r3, #12]
 8016792:	4798      	blx	r3
 8016794:	2301      	movs	r3, #1
 8016796:	f884 3138 	strb.w	r3, [r4, #312]	; 0x138
 801679a:	3404      	adds	r4, #4
 801679c:	4620      	mov	r0, r4
 801679e:	f7ff ff45 	bl	801662c <_ZN8touchgfx11Application12TimerWidgets10tickActiveEv>
 80167a2:	4620      	mov	r0, r4
 80167a4:	f7ff ffa0 	bl	80166e8 <_ZN8touchgfx11Application12TimerWidgets7compactEv>
 80167a8:	6830      	ldr	r0, [r6, #0]
 80167aa:	b110      	cbz	r0, 80167b2 <_ZN8touchgfx11Application15handleTickEventEv+0x5a>
 80167ac:	6803      	ldr	r3, [r0, #0]
 80167ae:	6a5b      	ldr	r3, [r3, #36]	; 0x24
 80167b0:	e7dd      	b.n	801676e <_ZN8touchgfx11Application15handleTickEventEv+0x16>
 80167b2:	bd70      	pop	{r4, r5, r6, pc}
 80167b4:	20013864 	.word	0x20013864
 80167b8:	20013860 	.word	0x20013860

080167bc <_ZN8touchgfx11Application12TimerWidgets3addEPNS_8DrawableE>:
 80167bc:	b5f8      	push	{r3, r4, r5, r6, r7, lr}
 80167be:	2300      	movs	r3, #0
 80167c0:	4604      	mov	r4, r0
 80167c2:	460d      	mov	r5, r1
 80167c4:	f8b0 1080 	ldrh.w	r1, [r0, #128]	; 0x80
 80167c8:	4618      	mov	r0, r3
 80167ca:	b29a      	uxth	r2, r3
 80167cc:	4291      	cmp	r1, r2
 80167ce:	d911      	bls.n	80167f4 <_ZN8touchgfx11Application12TimerWidgets3addEPNS_8DrawableE+0x38>
 80167d0:	f854 7023 	ldr.w	r7, [r4, r3, lsl #2]
 80167d4:	18e6      	adds	r6, r4, r3
 80167d6:	42af      	cmp	r7, r5
 80167d8:	f896 2084 	ldrb.w	r2, [r6, #132]	; 0x84
 80167dc:	d105      	bne.n	80167ea <_ZN8touchgfx11Application12TimerWidgets3addEPNS_8DrawableE+0x2e>
 80167de:	2aff      	cmp	r2, #255	; 0xff
 80167e0:	d002      	beq.n	80167e8 <_ZN8touchgfx11Application12TimerWidgets3addEPNS_8DrawableE+0x2c>
 80167e2:	3201      	adds	r2, #1
 80167e4:	f886 2084 	strb.w	r2, [r6, #132]	; 0x84
 80167e8:	bdf8      	pop	{r3, r4, r5, r6, r7, pc}
 80167ea:	2a00      	cmp	r2, #0
 80167ec:	bf08      	it	eq
 80167ee:	2001      	moveq	r0, #1
 80167f0:	3301      	adds	r3, #1
 80167f2:	e7ea      	b.n	80167ca <_ZN8touchgfx11Application12TimerWidgets3addEPNS_8DrawableE+0xe>
 80167f4:	b120      	cbz	r0, 8016800 <_ZN8touchgfx11Application12TimerWidgets3addEPNS_8DrawableE+0x44>
 80167f6:	2920      	cmp	r1, #32
 80167f8:	d102      	bne.n	8016800 <_ZN8touchgfx11Application12TimerWidgets3addEPNS_8DrawableE+0x44>
 80167fa:	4620      	mov	r0, r4
 80167fc:	f7ff ff74 	bl	80166e8 <_ZN8touchgfx11Application12TimerWidgets7compactEv>
 8016800:	f8b4 3080 	ldrh.w	r3, [r4, #128]	; 0x80
 8016804:	2b1f      	cmp	r3, #31
 8016806:	d8ef      	bhi.n	80167e8 <_ZN8touchgfx11Application12TimerWidgets3addEPNS_8DrawableE+0x2c>
 8016808:	18e2      	adds	r2, r4, r3
 801680a:	2101      	movs	r1, #1
 801680c:	f882 1084 	strb.w	r1, [r2, #132]	; 0x84
 8016810:	185a      	adds	r2, r3, r1
 8016812:	f8a4 2080 	strh.w	r2, [r4, #128]	; 0x80
 8016816:	f844 5023 	str.w	r5, [r4, r3, lsl #2]
 801681a:	e7e5      	b.n	80167e8 <_ZN8touchgfx11Application12TimerWidgets3addEPNS_8DrawableE+0x2c>

0801681c <_ZN8touchgfx6VectorINS_4RectELt8EEC1Ev>:
 801681c:	4603      	mov	r3, r0
 801681e:	f100 0140 	add.w	r1, r0, #64	; 0x40
 8016822:	2200      	movs	r2, #0
 8016824:	801a      	strh	r2, [r3, #0]
 8016826:	805a      	strh	r2, [r3, #2]
 8016828:	809a      	strh	r2, [r3, #4]
 801682a:	80da      	strh	r2, [r3, #6]
 801682c:	3308      	adds	r3, #8
 801682e:	428b      	cmp	r3, r1
 8016830:	d1f8      	bne.n	8016824 <_ZN8touchgfx6VectorINS_4RectELt8EEC1Ev+0x8>
 8016832:	f8a0 2040 	strh.w	r2, [r0, #64]	; 0x40
 8016836:	4770      	bx	lr

08016838 <_ZN8touchgfx11ApplicationC1Ev>:
 8016838:	b5f8      	push	{r3, r4, r5, r6, r7, lr}
 801683a:	4606      	mov	r6, r0
 801683c:	4b1c      	ldr	r3, [pc, #112]	; (80168b0 <_ZN8touchgfx11ApplicationC1Ev+0x78>)
 801683e:	f846 3b04 	str.w	r3, [r6], #4
 8016842:	4604      	mov	r4, r0
 8016844:	2500      	movs	r5, #0
 8016846:	22a8      	movs	r2, #168	; 0xa8
 8016848:	2100      	movs	r1, #0
 801684a:	4630      	mov	r0, r6
 801684c:	f014 ff8d 	bl	802b76a <memset>
 8016850:	f8a4 5084 	strh.w	r5, [r4, #132]	; 0x84
 8016854:	f104 00ac 	add.w	r0, r4, #172	; 0xac
 8016858:	f7ff ffe0 	bl	801681c <_ZN8touchgfx6VectorINS_4RectELt8EEC1Ev>
 801685c:	f104 00ee 	add.w	r0, r4, #238	; 0xee
 8016860:	f7ff ffdc 	bl	801681c <_ZN8touchgfx6VectorINS_4RectELt8EEC1Ev>
 8016864:	f8a4 5130 	strh.w	r5, [r4, #304]	; 0x130
 8016868:	f8a4 5132 	strh.w	r5, [r4, #306]	; 0x132
 801686c:	f8a4 5134 	strh.w	r5, [r4, #308]	; 0x134
 8016870:	f8a4 5136 	strh.w	r5, [r4, #310]	; 0x136
 8016874:	f884 5138 	strb.w	r5, [r4, #312]	; 0x138
 8016878:	490e      	ldr	r1, [pc, #56]	; (80168b4 <_ZN8touchgfx11ApplicationC1Ev+0x7c>)
 801687a:	480f      	ldr	r0, [pc, #60]	; (80168b8 <_ZN8touchgfx11ApplicationC1Ev+0x80>)
 801687c:	4f0f      	ldr	r7, [pc, #60]	; (80168bc <_ZN8touchgfx11ApplicationC1Ev+0x84>)
 801687e:	f010 fe27 	bl	80274d0 <CRC_Lock>
 8016882:	4b0f      	ldr	r3, [pc, #60]	; (80168c0 <_ZN8touchgfx11ApplicationC1Ev+0x88>)
 8016884:	b158      	cbz	r0, 801689e <_ZN8touchgfx11ApplicationC1Ev+0x66>
 8016886:	801d      	strh	r5, [r3, #0]
 8016888:	4a0e      	ldr	r2, [pc, #56]	; (80168c4 <_ZN8touchgfx11ApplicationC1Ev+0x8c>)
 801688a:	2300      	movs	r3, #0
 801688c:	6013      	str	r3, [r2, #0]
 801688e:	4a0e      	ldr	r2, [pc, #56]	; (80168c8 <_ZN8touchgfx11ApplicationC1Ev+0x90>)
 8016890:	603b      	str	r3, [r7, #0]
 8016892:	4630      	mov	r0, r6
 8016894:	6013      	str	r3, [r2, #0]
 8016896:	f7ff ff01 	bl	801669c <_ZN8touchgfx11Application12TimerWidgets5clearEv>
 801689a:	4620      	mov	r0, r4
 801689c:	bdf8      	pop	{r3, r4, r5, r6, r7, pc}
 801689e:	f44f 6280 	mov.w	r2, #1024	; 0x400
 80168a2:	2002      	movs	r0, #2
 80168a4:	801a      	strh	r2, [r3, #0]
 80168a6:	6038      	str	r0, [r7, #0]
 80168a8:	f001 fb4a 	bl	8017f40 <_ZN8touchgfx6Screen4drawEv>
 80168ac:	e7ec      	b.n	8016888 <_ZN8touchgfx11ApplicationC1Ev+0x50>
 80168ae:	bf00      	nop
 80168b0:	0802f780 	.word	0x0802f780
 80168b4:	b5e8b5cd 	.word	0xb5e8b5cd
 80168b8:	f407a5c2 	.word	0xf407a5c2
 80168bc:	20013860 	.word	0x20013860
 80168c0:	20000088 	.word	0x20000088
 80168c4:	20013870 	.word	0x20013870
 80168c8:	20013864 	.word	0x20013864

080168cc <_ZN8touchgfx6VectorINS_4RectELt8EE13quickRemoveAtEt>:
 80168cc:	f8b0 3040 	ldrh.w	r3, [r0, #64]	; 0x40
 80168d0:	3b01      	subs	r3, #1
 80168d2:	b29b      	uxth	r3, r3
 80168d4:	428b      	cmp	r3, r1
 80168d6:	b510      	push	{r4, lr}
 80168d8:	f8a0 3040 	strh.w	r3, [r0, #64]	; 0x40
 80168dc:	d908      	bls.n	80168f0 <_ZN8touchgfx6VectorINS_4RectELt8EE13quickRemoveAtEt+0x24>
 80168de:	eb00 03c3 	add.w	r3, r0, r3, lsl #3
 80168e2:	eb00 04c1 	add.w	r4, r0, r1, lsl #3
 80168e6:	681a      	ldr	r2, [r3, #0]
 80168e8:	f840 2031 	str.w	r2, [r0, r1, lsl #3]
 80168ec:	685a      	ldr	r2, [r3, #4]
 80168ee:	6062      	str	r2, [r4, #4]
 80168f0:	bd10      	pop	{r4, pc}
	...

080168f4 <_ZN8touchgfx11Application14invalidateAreaENS_4RectE>:
 80168f4:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 80168f8:	4b8f      	ldr	r3, [pc, #572]	; (8016b38 <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0x244>)
 80168fa:	b08f      	sub	sp, #60	; 0x3c
 80168fc:	ac0a      	add	r4, sp, #40	; 0x28
 80168fe:	e884 0006 	stmia.w	r4, {r1, r2}
 8016902:	f9b3 2000 	ldrsh.w	r2, [r3]
 8016906:	4b8d      	ldr	r3, [pc, #564]	; (8016b3c <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0x248>)
 8016908:	4683      	mov	fp, r0
 801690a:	f9b3 1000 	ldrsh.w	r1, [r3]
 801690e:	4620      	mov	r0, r4
 8016910:	f7ff fda1 	bl	8016456 <_ZN8touchgfx4Rect10restrictToEss>
 8016914:	4620      	mov	r0, r4
 8016916:	f7f9 ff4c 	bl	80107b2 <_ZNK8touchgfx4Rect7isEmptyEv>
 801691a:	2800      	cmp	r0, #0
 801691c:	d16a      	bne.n	80169f4 <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0x100>
 801691e:	9403      	str	r4, [sp, #12]
 8016920:	f8bb 40ec 	ldrh.w	r4, [fp, #236]	; 0xec
 8016924:	f10b 03ac 	add.w	r3, fp, #172	; 0xac
 8016928:	eb0b 05c4 	add.w	r5, fp, r4, lsl #3
 801692c:	35a4      	adds	r5, #164	; 0xa4
 801692e:	9301      	str	r3, [sp, #4]
 8016930:	b15c      	cbz	r4, 801694a <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0x56>
 8016932:	4629      	mov	r1, r5
 8016934:	9803      	ldr	r0, [sp, #12]
 8016936:	f7ff fddf 	bl	80164f8 <_ZNK8touchgfx4Rect8includesERKS0_>
 801693a:	3c01      	subs	r4, #1
 801693c:	b118      	cbz	r0, 8016946 <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0x52>
 801693e:	b2a1      	uxth	r1, r4
 8016940:	9801      	ldr	r0, [sp, #4]
 8016942:	f7ff ffc3 	bl	80168cc <_ZN8touchgfx6VectorINS_4RectELt8EE13quickRemoveAtEt>
 8016946:	3d08      	subs	r5, #8
 8016948:	e7f2      	b.n	8016930 <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0x3c>
 801694a:	f8bb a0ec 	ldrh.w	sl, [fp, #236]	; 0xec
 801694e:	f8cd a010 	str.w	sl, [sp, #16]
 8016952:	f10a 33ff 	add.w	r3, sl, #4294967295
 8016956:	9302      	str	r3, [sp, #8]
 8016958:	ea4f 03ca 	mov.w	r3, sl, lsl #3
 801695c:	f103 04a4 	add.w	r4, r3, #164	; 0xa4
 8016960:	9306      	str	r3, [sp, #24]
 8016962:	445c      	add	r4, fp
 8016964:	2500      	movs	r5, #0
 8016966:	4626      	mov	r6, r4
 8016968:	f8cd a014 	str.w	sl, [sp, #20]
 801696c:	462f      	mov	r7, r5
 801696e:	9b05      	ldr	r3, [sp, #20]
 8016970:	2b00      	cmp	r3, #0
 8016972:	d073      	beq.n	8016a5c <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0x168>
 8016974:	9903      	ldr	r1, [sp, #12]
 8016976:	4630      	mov	r0, r6
 8016978:	f7ff fd4b 	bl	8016412 <_ZNK8touchgfx4Rect9intersectERKS0_>
 801697c:	b350      	cbz	r0, 80169d4 <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0xe0>
 801697e:	f9bd e028 	ldrsh.w	lr, [sp, #40]	; 0x28
 8016982:	f9b6 c000 	ldrsh.w	ip, [r6]
 8016986:	f9bd 802a 	ldrsh.w	r8, [sp, #42]	; 0x2a
 801698a:	f9b6 9002 	ldrsh.w	r9, [r6, #2]
 801698e:	45e6      	cmp	lr, ip
 8016990:	db33      	blt.n	80169fa <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0x106>
 8016992:	f8bd 202c 	ldrh.w	r2, [sp, #44]	; 0x2c
 8016996:	88b3      	ldrh	r3, [r6, #4]
 8016998:	4472      	add	r2, lr
 801699a:	4463      	add	r3, ip
 801699c:	b212      	sxth	r2, r2
 801699e:	b21b      	sxth	r3, r3
 80169a0:	429a      	cmp	r2, r3
 80169a2:	dc2a      	bgt.n	80169fa <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0x106>
 80169a4:	88f3      	ldrh	r3, [r6, #6]
 80169a6:	f8bd 102e 	ldrh.w	r1, [sp, #46]	; 0x2e
 80169aa:	fa1f f289 	uxth.w	r2, r9
 80169ae:	4413      	add	r3, r2
 80169b0:	b29b      	uxth	r3, r3
 80169b2:	45c8      	cmp	r8, r9
 80169b4:	fa1f fc88 	uxth.w	ip, r8
 80169b8:	fa0f fe83 	sxth.w	lr, r3
 80169bc:	db0f      	blt.n	80169de <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0xea>
 80169be:	eba3 030c 	sub.w	r3, r3, ip
 80169c2:	1ac9      	subs	r1, r1, r3
 80169c4:	b209      	sxth	r1, r1
 80169c6:	2900      	cmp	r1, #0
 80169c8:	f8ad 102e 	strh.w	r1, [sp, #46]	; 0x2e
 80169cc:	dd12      	ble.n	80169f4 <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0x100>
 80169ce:	f8ad e02a 	strh.w	lr, [sp, #42]	; 0x2a
 80169d2:	4605      	mov	r5, r0
 80169d4:	9b05      	ldr	r3, [sp, #20]
 80169d6:	3b01      	subs	r3, #1
 80169d8:	9305      	str	r3, [sp, #20]
 80169da:	3e08      	subs	r6, #8
 80169dc:	e7c7      	b.n	801696e <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0x7a>
 80169de:	4461      	add	r1, ip
 80169e0:	b209      	sxth	r1, r1
 80169e2:	4571      	cmp	r1, lr
 80169e4:	dc38      	bgt.n	8016a58 <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0x164>
 80169e6:	eba2 020c 	sub.w	r2, r2, ip
 80169ea:	b212      	sxth	r2, r2
 80169ec:	f8ad 202e 	strh.w	r2, [sp, #46]	; 0x2e
 80169f0:	2a00      	cmp	r2, #0
 80169f2:	dcee      	bgt.n	80169d2 <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0xde>
 80169f4:	b00f      	add	sp, #60	; 0x3c
 80169f6:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
 80169fa:	45c8      	cmp	r8, r9
 80169fc:	db2c      	blt.n	8016a58 <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0x164>
 80169fe:	88f3      	ldrh	r3, [r6, #6]
 8016a00:	4499      	add	r9, r3
 8016a02:	f8bd 302e 	ldrh.w	r3, [sp, #46]	; 0x2e
 8016a06:	4498      	add	r8, r3
 8016a08:	fa0f f989 	sxth.w	r9, r9
 8016a0c:	fa0f f888 	sxth.w	r8, r8
 8016a10:	45c1      	cmp	r9, r8
 8016a12:	db21      	blt.n	8016a58 <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0x164>
 8016a14:	88b3      	ldrh	r3, [r6, #4]
 8016a16:	f8bd 102c 	ldrh.w	r1, [sp, #44]	; 0x2c
 8016a1a:	fa1f f28c 	uxth.w	r2, ip
 8016a1e:	4413      	add	r3, r2
 8016a20:	b29b      	uxth	r3, r3
 8016a22:	45e6      	cmp	lr, ip
 8016a24:	fa1f f88e 	uxth.w	r8, lr
 8016a28:	fa0f f983 	sxth.w	r9, r3
 8016a2c:	db0a      	blt.n	8016a44 <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0x150>
 8016a2e:	eba3 0308 	sub.w	r3, r3, r8
 8016a32:	1ac9      	subs	r1, r1, r3
 8016a34:	b209      	sxth	r1, r1
 8016a36:	2900      	cmp	r1, #0
 8016a38:	f8ad 102c 	strh.w	r1, [sp, #44]	; 0x2c
 8016a3c:	ddda      	ble.n	80169f4 <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0x100>
 8016a3e:	f8ad 9028 	strh.w	r9, [sp, #40]	; 0x28
 8016a42:	e7c6      	b.n	80169d2 <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0xde>
 8016a44:	4441      	add	r1, r8
 8016a46:	b209      	sxth	r1, r1
 8016a48:	4549      	cmp	r1, r9
 8016a4a:	dc05      	bgt.n	8016a58 <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0x164>
 8016a4c:	eba2 0208 	sub.w	r2, r2, r8
 8016a50:	b212      	sxth	r2, r2
 8016a52:	f8ad 202c 	strh.w	r2, [sp, #44]	; 0x2c
 8016a56:	e7cb      	b.n	80169f0 <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0xfc>
 8016a58:	4607      	mov	r7, r0
 8016a5a:	e7bb      	b.n	80169d4 <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0xe0>
 8016a5c:	2d00      	cmp	r5, #0
 8016a5e:	d181      	bne.n	8016964 <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0x70>
 8016a60:	2f00      	cmp	r7, #0
 8016a62:	f000 81dd 	beq.w	8016e20 <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0x52c>
 8016a66:	f9bd 6028 	ldrsh.w	r6, [sp, #40]	; 0x28
 8016a6a:	f9bd 702a 	ldrsh.w	r7, [sp, #42]	; 0x2a
 8016a6e:	f8bd a02e 	ldrh.w	sl, [sp, #46]	; 0x2e
 8016a72:	b2b3      	uxth	r3, r6
 8016a74:	9305      	str	r3, [sp, #20]
 8016a76:	9a05      	ldr	r2, [sp, #20]
 8016a78:	f8bd 302c 	ldrh.w	r3, [sp, #44]	; 0x2c
 8016a7c:	4413      	add	r3, r2
 8016a7e:	b2ba      	uxth	r2, r7
 8016a80:	4492      	add	sl, r2
 8016a82:	b29b      	uxth	r3, r3
 8016a84:	fa1f fa8a 	uxth.w	sl, sl
 8016a88:	fa0f f883 	sxth.w	r8, r3
 8016a8c:	fa0f f98a 	sxth.w	r9, sl
 8016a90:	e9cd 2307 	strd	r2, r3, [sp, #28]
 8016a94:	9b04      	ldr	r3, [sp, #16]
 8016a96:	2b00      	cmp	r3, #0
 8016a98:	d052      	beq.n	8016b40 <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0x24c>
 8016a9a:	9903      	ldr	r1, [sp, #12]
 8016a9c:	4620      	mov	r0, r4
 8016a9e:	f7ff fcb8 	bl	8016412 <_ZNK8touchgfx4Rect9intersectERKS0_>
 8016aa2:	e9dd 2307 	ldrd	r2, r3, [sp, #28]
 8016aa6:	b1c0      	cbz	r0, 8016ada <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0x1e6>
 8016aa8:	f9b4 e000 	ldrsh.w	lr, [r4]
 8016aac:	f9b4 1002 	ldrsh.w	r1, [r4, #2]
 8016ab0:	4576      	cmp	r6, lr
 8016ab2:	dc22      	bgt.n	8016afa <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0x206>
 8016ab4:	f8b4 c004 	ldrh.w	ip, [r4, #4]
 8016ab8:	44f4      	add	ip, lr
 8016aba:	fa0f fc8c 	sxth.w	ip, ip
 8016abe:	45e0      	cmp	r8, ip
 8016ac0:	db1b      	blt.n	8016afa <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0x206>
 8016ac2:	428f      	cmp	r7, r1
 8016ac4:	fa1f fc81 	uxth.w	ip, r1
 8016ac8:	88e1      	ldrh	r1, [r4, #6]
 8016aca:	dc0d      	bgt.n	8016ae8 <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0x1f4>
 8016acc:	ebaa 0c0c 	sub.w	ip, sl, ip
 8016ad0:	eba1 010c 	sub.w	r1, r1, ip
 8016ad4:	f8a4 9002 	strh.w	r9, [r4, #2]
 8016ad8:	80e1      	strh	r1, [r4, #6]
 8016ada:	4628      	mov	r0, r5
 8016adc:	9904      	ldr	r1, [sp, #16]
 8016ade:	3901      	subs	r1, #1
 8016ae0:	9104      	str	r1, [sp, #16]
 8016ae2:	3c08      	subs	r4, #8
 8016ae4:	4605      	mov	r5, r0
 8016ae6:	e7d3      	b.n	8016a90 <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0x19c>
 8016ae8:	4461      	add	r1, ip
 8016aea:	b209      	sxth	r1, r1
 8016aec:	4549      	cmp	r1, r9
 8016aee:	dcf5      	bgt.n	8016adc <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0x1e8>
 8016af0:	eba2 0c0c 	sub.w	ip, r2, ip
 8016af4:	f8a4 c006 	strh.w	ip, [r4, #6]
 8016af8:	e7ef      	b.n	8016ada <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0x1e6>
 8016afa:	428f      	cmp	r7, r1
 8016afc:	dcee      	bgt.n	8016adc <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0x1e8>
 8016afe:	f8b4 c006 	ldrh.w	ip, [r4, #6]
 8016b02:	4461      	add	r1, ip
 8016b04:	b209      	sxth	r1, r1
 8016b06:	4589      	cmp	r9, r1
 8016b08:	dbe8      	blt.n	8016adc <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0x1e8>
 8016b0a:	4576      	cmp	r6, lr
 8016b0c:	fa1f fc8e 	uxth.w	ip, lr
 8016b10:	88a1      	ldrh	r1, [r4, #4]
 8016b12:	dc07      	bgt.n	8016b24 <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0x230>
 8016b14:	eba3 0c0c 	sub.w	ip, r3, ip
 8016b18:	eba1 010c 	sub.w	r1, r1, ip
 8016b1c:	f8a4 8000 	strh.w	r8, [r4]
 8016b20:	80a1      	strh	r1, [r4, #4]
 8016b22:	e7da      	b.n	8016ada <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0x1e6>
 8016b24:	4461      	add	r1, ip
 8016b26:	b209      	sxth	r1, r1
 8016b28:	4588      	cmp	r8, r1
 8016b2a:	dbd7      	blt.n	8016adc <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0x1e8>
 8016b2c:	9905      	ldr	r1, [sp, #20]
 8016b2e:	eba1 0c0c 	sub.w	ip, r1, ip
 8016b32:	f8a4 c004 	strh.w	ip, [r4, #4]
 8016b36:	e7d0      	b.n	8016ada <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0x1e6>
 8016b38:	20013812 	.word	0x20013812
 8016b3c:	20013810 	.word	0x20013810
 8016b40:	2d00      	cmp	r5, #0
 8016b42:	f000 816d 	beq.w	8016e20 <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0x52c>
 8016b46:	9b06      	ldr	r3, [sp, #24]
 8016b48:	445b      	add	r3, fp
 8016b4a:	461c      	mov	r4, r3
 8016b4c:	9b02      	ldr	r3, [sp, #8]
 8016b4e:	3301      	adds	r3, #1
 8016b50:	f000 8166 	beq.w	8016e20 <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0x52c>
 8016b54:	f104 05a4 	add.w	r5, r4, #164	; 0xa4
 8016b58:	4629      	mov	r1, r5
 8016b5a:	9803      	ldr	r0, [sp, #12]
 8016b5c:	f7ff fccc 	bl	80164f8 <_ZNK8touchgfx4Rect8includesERKS0_>
 8016b60:	b120      	cbz	r0, 8016b6c <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0x278>
 8016b62:	f8bd 1008 	ldrh.w	r1, [sp, #8]
 8016b66:	9801      	ldr	r0, [sp, #4]
 8016b68:	f7ff feb0 	bl	80168cc <_ZN8touchgfx6VectorINS_4RectELt8EE13quickRemoveAtEt>
 8016b6c:	9903      	ldr	r1, [sp, #12]
 8016b6e:	4628      	mov	r0, r5
 8016b70:	f7ff fc4f 	bl	8016412 <_ZNK8touchgfx4Rect9intersectERKS0_>
 8016b74:	2800      	cmp	r0, #0
 8016b76:	f000 809c 	beq.w	8016cb2 <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0x3be>
 8016b7a:	f9b4 90a4 	ldrsh.w	r9, [r4, #164]	; 0xa4
 8016b7e:	f9b4 30a8 	ldrsh.w	r3, [r4, #168]	; 0xa8
 8016b82:	f9bd 0028 	ldrsh.w	r0, [sp, #40]	; 0x28
 8016b86:	9309      	str	r3, [sp, #36]	; 0x24
 8016b88:	fa1f f189 	uxth.w	r1, r9
 8016b8c:	eb01 0c03 	add.w	ip, r1, r3
 8016b90:	fa1f fa8c 	uxth.w	sl, ip
 8016b94:	f8bd c02c 	ldrh.w	ip, [sp, #44]	; 0x2c
 8016b98:	f9bd e02a 	ldrsh.w	lr, [sp, #42]	; 0x2a
 8016b9c:	f9b4 20a6 	ldrsh.w	r2, [r4, #166]	; 0xa6
 8016ba0:	b283      	uxth	r3, r0
 8016ba2:	eb03 050c 	add.w	r5, r3, ip
 8016ba6:	b2ad      	uxth	r5, r5
 8016ba8:	9505      	str	r5, [sp, #20]
 8016baa:	f9bd 5014 	ldrsh.w	r5, [sp, #20]
 8016bae:	9504      	str	r5, [sp, #16]
 8016bb0:	4548      	cmp	r0, r9
 8016bb2:	f8bb 50ec 	ldrh.w	r5, [fp, #236]	; 0xec
 8016bb6:	f340 8099 	ble.w	8016cec <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0x3f8>
 8016bba:	1a5b      	subs	r3, r3, r1
 8016bbc:	b29b      	uxth	r3, r3
 8016bbe:	4596      	cmp	lr, r2
 8016bc0:	fa0f f08a 	sxth.w	r0, sl
 8016bc4:	b21e      	sxth	r6, r3
 8016bc6:	dd2e      	ble.n	8016c26 <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0x332>
 8016bc8:	9f02      	ldr	r7, [sp, #8]
 8016bca:	f8bd 402e 	ldrh.w	r4, [sp, #46]	; 0x2e
 8016bce:	eb0b 08c7 	add.w	r8, fp, r7, lsl #3
 8016bd2:	9f04      	ldr	r7, [sp, #16]
 8016bd4:	1a3f      	subs	r7, r7, r0
 8016bd6:	f8b8 00b2 	ldrh.w	r0, [r8, #178]	; 0xb2
 8016bda:	fa1f fe8e 	uxth.w	lr, lr
 8016bde:	b292      	uxth	r2, r2
 8016be0:	ebae 0102 	sub.w	r1, lr, r2
 8016be4:	44a6      	add	lr, r4
 8016be6:	4402      	add	r2, r0
 8016be8:	b289      	uxth	r1, r1
 8016bea:	fa0f fe8e 	sxth.w	lr, lr
 8016bee:	b212      	sxth	r2, r2
 8016bf0:	b20d      	sxth	r5, r1
 8016bf2:	ebae 0202 	sub.w	r2, lr, r2
 8016bf6:	436f      	muls	r7, r5
 8016bf8:	4372      	muls	r2, r6
 8016bfa:	4297      	cmp	r7, r2
 8016bfc:	db09      	blt.n	8016c12 <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0x31e>
 8016bfe:	f8b8 20ac 	ldrh.w	r2, [r8, #172]	; 0xac
 8016c02:	f8a8 50b2 	strh.w	r5, [r8, #178]	; 0xb2
 8016c06:	f8ad 2028 	strh.w	r2, [sp, #40]	; 0x28
 8016c0a:	449c      	add	ip, r3
 8016c0c:	f8ad c02c 	strh.w	ip, [sp, #44]	; 0x2c
 8016c10:	e686      	b.n	8016920 <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0x2c>
 8016c12:	4421      	add	r1, r4
 8016c14:	f8b8 30ae 	ldrh.w	r3, [r8, #174]	; 0xae
 8016c18:	f8a8 60b0 	strh.w	r6, [r8, #176]	; 0xb0
 8016c1c:	f8ad 102e 	strh.w	r1, [sp, #46]	; 0x2e
 8016c20:	f8ad 302a 	strh.w	r3, [sp, #42]	; 0x2a
 8016c24:	e67c      	b.n	8016920 <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0x2c>
 8016c26:	9f04      	ldr	r7, [sp, #16]
 8016c28:	42b8      	cmp	r0, r7
 8016c2a:	da27      	bge.n	8016c7c <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0x388>
 8016c2c:	9902      	ldr	r1, [sp, #8]
 8016c2e:	f8bd 502e 	ldrh.w	r5, [sp, #46]	; 0x2e
 8016c32:	eb0b 04c1 	add.w	r4, fp, r1, lsl #3
 8016c36:	eb05 010e 	add.w	r1, r5, lr
 8016c3a:	fa1f f881 	uxth.w	r8, r1
 8016c3e:	f8b4 10b2 	ldrh.w	r1, [r4, #178]	; 0xb2
 8016c42:	4411      	add	r1, r2
 8016c44:	eba1 0108 	sub.w	r1, r1, r8
 8016c48:	b289      	uxth	r1, r1
 8016c4a:	fa0f f988 	sxth.w	r9, r8
 8016c4e:	eba2 020e 	sub.w	r2, r2, lr
 8016c52:	fa0f f881 	sxth.w	r8, r1
 8016c56:	1a3f      	subs	r7, r7, r0
 8016c58:	4372      	muls	r2, r6
 8016c5a:	fb08 f707 	mul.w	r7, r8, r7
 8016c5e:	42ba      	cmp	r2, r7
 8016c60:	dc06      	bgt.n	8016c70 <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0x37c>
 8016c62:	f8a4 90ae 	strh.w	r9, [r4, #174]	; 0xae
 8016c66:	f8a4 80b2 	strh.w	r8, [r4, #178]	; 0xb2
 8016c6a:	f8b4 20ac 	ldrh.w	r2, [r4, #172]	; 0xac
 8016c6e:	e7ca      	b.n	8016c06 <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0x312>
 8016c70:	f8a4 60b0 	strh.w	r6, [r4, #176]	; 0xb0
 8016c74:	4429      	add	r1, r5
 8016c76:	f8ad 102e 	strh.w	r1, [sp, #46]	; 0x2e
 8016c7a:	e651      	b.n	8016920 <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0x2c>
 8016c7c:	9805      	ldr	r0, [sp, #20]
 8016c7e:	ebaa 0000 	sub.w	r0, sl, r0
 8016c82:	b280      	uxth	r0, r0
 8016c84:	2d06      	cmp	r5, #6
 8016c86:	fa0f fe80 	sxth.w	lr, r0
 8016c8a:	d817      	bhi.n	8016cbc <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0x3c8>
 8016c8c:	9b04      	ldr	r3, [sp, #16]
 8016c8e:	f8a4 30a4 	strh.w	r3, [r4, #164]	; 0xa4
 8016c92:	1c6b      	adds	r3, r5, #1
 8016c94:	f9b4 10aa 	ldrsh.w	r1, [r4, #170]	; 0xaa
 8016c98:	f8a4 e0a8 	strh.w	lr, [r4, #168]	; 0xa8
 8016c9c:	f8ab 30ec 	strh.w	r3, [fp, #236]	; 0xec
 8016ca0:	9b01      	ldr	r3, [sp, #4]
 8016ca2:	9801      	ldr	r0, [sp, #4]
 8016ca4:	eb03 03c5 	add.w	r3, r3, r5, lsl #3
 8016ca8:	f820 9035 	strh.w	r9, [r0, r5, lsl #3]
 8016cac:	805a      	strh	r2, [r3, #2]
 8016cae:	809e      	strh	r6, [r3, #4]
 8016cb0:	80d9      	strh	r1, [r3, #6]
 8016cb2:	9b02      	ldr	r3, [sp, #8]
 8016cb4:	3b01      	subs	r3, #1
 8016cb6:	9302      	str	r3, [sp, #8]
 8016cb8:	3c08      	subs	r4, #8
 8016cba:	e747      	b.n	8016b4c <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0x258>
 8016cbc:	9a02      	ldr	r2, [sp, #8]
 8016cbe:	45b6      	cmp	lr, r6
 8016cc0:	ea4f 02c2 	mov.w	r2, r2, lsl #3
 8016cc4:	db0d      	blt.n	8016ce2 <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0x3ee>
 8016cc6:	449c      	add	ip, r3
 8016cc8:	fa1f fc8c 	uxth.w	ip, ip
 8016ccc:	445a      	add	r2, fp
 8016cce:	f8ad c02c 	strh.w	ip, [sp, #44]	; 0x2c
 8016cd2:	448c      	add	ip, r1
 8016cd4:	f8ad 9028 	strh.w	r9, [sp, #40]	; 0x28
 8016cd8:	f8a2 c0ac 	strh.w	ip, [r2, #172]	; 0xac
 8016cdc:	f8a2 e0b0 	strh.w	lr, [r2, #176]	; 0xb0
 8016ce0:	e61e      	b.n	8016920 <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0x2c>
 8016ce2:	445a      	add	r2, fp
 8016ce4:	4484      	add	ip, r0
 8016ce6:	f8a2 60b0 	strh.w	r6, [r2, #176]	; 0xb0
 8016cea:	e78f      	b.n	8016c0c <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0x318>
 8016cec:	f8bd 602e 	ldrh.w	r6, [sp, #46]	; 0x2e
 8016cf0:	fa1f f18e 	uxth.w	r1, lr
 8016cf4:	eb01 0806 	add.w	r8, r1, r6
 8016cf8:	b293      	uxth	r3, r2
 8016cfa:	fa1f f888 	uxth.w	r8, r8
 8016cfe:	9306      	str	r3, [sp, #24]
 8016d00:	fa0f f388 	sxth.w	r3, r8
 8016d04:	9307      	str	r3, [sp, #28]
 8016d06:	9f06      	ldr	r7, [sp, #24]
 8016d08:	f8b4 30aa 	ldrh.w	r3, [r4, #170]	; 0xaa
 8016d0c:	443b      	add	r3, r7
 8016d0e:	b29b      	uxth	r3, r3
 8016d10:	4596      	cmp	lr, r2
 8016d12:	9308      	str	r3, [sp, #32]
 8016d14:	da24      	bge.n	8016d60 <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0x46c>
 8016d16:	9905      	ldr	r1, [sp, #20]
 8016d18:	eba3 0308 	sub.w	r3, r3, r8
 8016d1c:	ebaa 0401 	sub.w	r4, sl, r1
 8016d20:	b2a4      	uxth	r4, r4
 8016d22:	b29b      	uxth	r3, r3
 8016d24:	b225      	sxth	r5, r4
 8016d26:	b219      	sxth	r1, r3
 8016d28:	eba2 020e 	sub.w	r2, r2, lr
 8016d2c:	eba9 0000 	sub.w	r0, r9, r0
 8016d30:	436a      	muls	r2, r5
 8016d32:	4348      	muls	r0, r1
 8016d34:	4282      	cmp	r2, r0
 8016d36:	9a02      	ldr	r2, [sp, #8]
 8016d38:	ea4f 02c2 	mov.w	r2, r2, lsl #3
 8016d3c:	445a      	add	r2, fp
 8016d3e:	dc06      	bgt.n	8016d4e <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0x45a>
 8016d40:	9b07      	ldr	r3, [sp, #28]
 8016d42:	f8a2 10b2 	strh.w	r1, [r2, #178]	; 0xb2
 8016d46:	f8a2 30ae 	strh.w	r3, [r2, #174]	; 0xae
 8016d4a:	44a4      	add	ip, r4
 8016d4c:	e75e      	b.n	8016c0c <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0x318>
 8016d4e:	9904      	ldr	r1, [sp, #16]
 8016d50:	f8a2 50b0 	strh.w	r5, [r2, #176]	; 0xb0
 8016d54:	f8a2 10ac 	strh.w	r1, [r2, #172]	; 0xac
 8016d58:	4433      	add	r3, r6
 8016d5a:	f8ad 302e 	strh.w	r3, [sp, #46]	; 0x2e
 8016d5e:	e5df      	b.n	8016920 <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0x2c>
 8016d60:	9f06      	ldr	r7, [sp, #24]
 8016d62:	9b04      	ldr	r3, [sp, #16]
 8016d64:	1bc9      	subs	r1, r1, r7
 8016d66:	fa0f f78a 	sxth.w	r7, sl
 8016d6a:	b289      	uxth	r1, r1
 8016d6c:	429f      	cmp	r7, r3
 8016d6e:	fa0f fe81 	sxth.w	lr, r1
 8016d72:	dd23      	ble.n	8016dbc <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0x4c8>
 8016d74:	9a05      	ldr	r2, [sp, #20]
 8016d76:	f9bd 3020 	ldrsh.w	r3, [sp, #32]
 8016d7a:	9d07      	ldr	r5, [sp, #28]
 8016d7c:	ebaa 0202 	sub.w	r2, sl, r2
 8016d80:	b292      	uxth	r2, r2
 8016d82:	eba5 0a03 	sub.w	sl, r5, r3
 8016d86:	b214      	sxth	r4, r2
 8016d88:	eba9 0000 	sub.w	r0, r9, r0
 8016d8c:	9b02      	ldr	r3, [sp, #8]
 8016d8e:	fb0e f000 	mul.w	r0, lr, r0
 8016d92:	fb04 fa0a 	mul.w	sl, r4, sl
 8016d96:	00db      	lsls	r3, r3, #3
 8016d98:	4550      	cmp	r0, sl
 8016d9a:	445b      	add	r3, fp
 8016d9c:	db03      	blt.n	8016da6 <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0x4b2>
 8016d9e:	f8a3 e0b2 	strh.w	lr, [r3, #178]	; 0xb2
 8016da2:	4494      	add	ip, r2
 8016da4:	e732      	b.n	8016c0c <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0x318>
 8016da6:	9a04      	ldr	r2, [sp, #16]
 8016da8:	f8a3 20ac 	strh.w	r2, [r3, #172]	; 0xac
 8016dac:	f8a3 40b0 	strh.w	r4, [r3, #176]	; 0xb0
 8016db0:	f8b3 30ae 	ldrh.w	r3, [r3, #174]	; 0xae
 8016db4:	f8ad 302a 	strh.w	r3, [sp, #42]	; 0x2a
 8016db8:	4431      	add	r1, r6
 8016dba:	e75c      	b.n	8016c76 <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0x382>
 8016dbc:	9b08      	ldr	r3, [sp, #32]
 8016dbe:	eba3 0308 	sub.w	r3, r3, r8
 8016dc2:	b29b      	uxth	r3, r3
 8016dc4:	2d06      	cmp	r5, #6
 8016dc6:	b218      	sxth	r0, r3
 8016dc8:	d813      	bhi.n	8016df2 <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0x4fe>
 8016dca:	9b07      	ldr	r3, [sp, #28]
 8016dcc:	f8a4 30a6 	strh.w	r3, [r4, #166]	; 0xa6
 8016dd0:	1c6b      	adds	r3, r5, #1
 8016dd2:	f8a4 00aa 	strh.w	r0, [r4, #170]	; 0xaa
 8016dd6:	f8ab 30ec 	strh.w	r3, [fp, #236]	; 0xec
 8016dda:	9b01      	ldr	r3, [sp, #4]
 8016ddc:	9901      	ldr	r1, [sp, #4]
 8016dde:	eb03 03c5 	add.w	r3, r3, r5, lsl #3
 8016de2:	f821 9035 	strh.w	r9, [r1, r5, lsl #3]
 8016de6:	805a      	strh	r2, [r3, #2]
 8016de8:	9a09      	ldr	r2, [sp, #36]	; 0x24
 8016dea:	809a      	strh	r2, [r3, #4]
 8016dec:	f8a3 e006 	strh.w	lr, [r3, #6]
 8016df0:	e75f      	b.n	8016cb2 <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0x3be>
 8016df2:	9c02      	ldr	r4, [sp, #8]
 8016df4:	4570      	cmp	r0, lr
 8016df6:	ea4f 04c4 	mov.w	r4, r4, lsl #3
 8016dfa:	db0d      	blt.n	8016e18 <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0x524>
 8016dfc:	4431      	add	r1, r6
 8016dfe:	9b06      	ldr	r3, [sp, #24]
 8016e00:	f8ad 202a 	strh.w	r2, [sp, #42]	; 0x2a
 8016e04:	b289      	uxth	r1, r1
 8016e06:	445c      	add	r4, fp
 8016e08:	f8ad 102e 	strh.w	r1, [sp, #46]	; 0x2e
 8016e0c:	4419      	add	r1, r3
 8016e0e:	f8a4 10ae 	strh.w	r1, [r4, #174]	; 0xae
 8016e12:	f8a4 00b2 	strh.w	r0, [r4, #178]	; 0xb2
 8016e16:	e583      	b.n	8016920 <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0x2c>
 8016e18:	445c      	add	r4, fp
 8016e1a:	f8a4 e0b2 	strh.w	lr, [r4, #178]	; 0xb2
 8016e1e:	e79b      	b.n	8016d58 <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0x464>
 8016e20:	f8bb 40ec 	ldrh.w	r4, [fp, #236]	; 0xec
 8016e24:	1e65      	subs	r5, r4, #1
 8016e26:	b2ad      	uxth	r5, r5
 8016e28:	eb0b 04c4 	add.w	r4, fp, r4, lsl #3
 8016e2c:	f64f 76ff 	movw	r6, #65535	; 0xffff
 8016e30:	42b5      	cmp	r5, r6
 8016e32:	d044      	beq.n	8016ebe <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0x5ca>
 8016e34:	f9bd 202a 	ldrsh.w	r2, [sp, #42]	; 0x2a
 8016e38:	f9b4 00a6 	ldrsh.w	r0, [r4, #166]	; 0xa6
 8016e3c:	f9bd 1028 	ldrsh.w	r1, [sp, #40]	; 0x28
 8016e40:	f9b4 70a4 	ldrsh.w	r7, [r4, #164]	; 0xa4
 8016e44:	4282      	cmp	r2, r0
 8016e46:	d11f      	bne.n	8016e88 <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0x594>
 8016e48:	f9bd c02e 	ldrsh.w	ip, [sp, #46]	; 0x2e
 8016e4c:	f9b4 30aa 	ldrsh.w	r3, [r4, #170]	; 0xaa
 8016e50:	459c      	cmp	ip, r3
 8016e52:	d119      	bne.n	8016e88 <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0x594>
 8016e54:	f8b4 30a8 	ldrh.w	r3, [r4, #168]	; 0xa8
 8016e58:	f8bd 202c 	ldrh.w	r2, [sp, #44]	; 0x2c
 8016e5c:	19d8      	adds	r0, r3, r7
 8016e5e:	b200      	sxth	r0, r0
 8016e60:	4288      	cmp	r0, r1
 8016e62:	d109      	bne.n	8016e78 <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0x584>
 8016e64:	f8ad 7028 	strh.w	r7, [sp, #40]	; 0x28
 8016e68:	4413      	add	r3, r2
 8016e6a:	f8ad 302c 	strh.w	r3, [sp, #44]	; 0x2c
 8016e6e:	4629      	mov	r1, r5
 8016e70:	9801      	ldr	r0, [sp, #4]
 8016e72:	f7ff fd2b 	bl	80168cc <_ZN8touchgfx6VectorINS_4RectELt8EE13quickRemoveAtEt>
 8016e76:	e003      	b.n	8016e80 <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0x58c>
 8016e78:	4411      	add	r1, r2
 8016e7a:	b209      	sxth	r1, r1
 8016e7c:	42b9      	cmp	r1, r7
 8016e7e:	d0f3      	beq.n	8016e68 <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0x574>
 8016e80:	3d01      	subs	r5, #1
 8016e82:	b2ad      	uxth	r5, r5
 8016e84:	3c08      	subs	r4, #8
 8016e86:	e7d3      	b.n	8016e30 <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0x53c>
 8016e88:	42b9      	cmp	r1, r7
 8016e8a:	d1f9      	bne.n	8016e80 <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0x58c>
 8016e8c:	f9bd 102c 	ldrsh.w	r1, [sp, #44]	; 0x2c
 8016e90:	f9b4 30a8 	ldrsh.w	r3, [r4, #168]	; 0xa8
 8016e94:	4299      	cmp	r1, r3
 8016e96:	d1f3      	bne.n	8016e80 <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0x58c>
 8016e98:	f8b4 30aa 	ldrh.w	r3, [r4, #170]	; 0xaa
 8016e9c:	f8bd 102e 	ldrh.w	r1, [sp, #46]	; 0x2e
 8016ea0:	181f      	adds	r7, r3, r0
 8016ea2:	b23f      	sxth	r7, r7
 8016ea4:	42ba      	cmp	r2, r7
 8016ea6:	d105      	bne.n	8016eb4 <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0x5c0>
 8016ea8:	f8ad 002a 	strh.w	r0, [sp, #42]	; 0x2a
 8016eac:	440b      	add	r3, r1
 8016eae:	f8ad 302e 	strh.w	r3, [sp, #46]	; 0x2e
 8016eb2:	e7dc      	b.n	8016e6e <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0x57a>
 8016eb4:	440a      	add	r2, r1
 8016eb6:	b212      	sxth	r2, r2
 8016eb8:	4290      	cmp	r0, r2
 8016eba:	d1e1      	bne.n	8016e80 <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0x58c>
 8016ebc:	e7f6      	b.n	8016eac <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0x5b8>
 8016ebe:	f8bb 60ec 	ldrh.w	r6, [fp, #236]	; 0xec
 8016ec2:	2e07      	cmp	r6, #7
 8016ec4:	ea4f 04c6 	mov.w	r4, r6, lsl #3
 8016ec8:	d812      	bhi.n	8016ef0 <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0x5fc>
 8016eca:	1c75      	adds	r5, r6, #1
 8016ecc:	f8ab 50ec 	strh.w	r5, [fp, #236]	; 0xec
 8016ed0:	9d01      	ldr	r5, [sp, #4]
 8016ed2:	f9bd 0028 	ldrsh.w	r0, [sp, #40]	; 0x28
 8016ed6:	f9bd 102a 	ldrsh.w	r1, [sp, #42]	; 0x2a
 8016eda:	f9bd 202c 	ldrsh.w	r2, [sp, #44]	; 0x2c
 8016ede:	f9bd 302e 	ldrsh.w	r3, [sp, #46]	; 0x2e
 8016ee2:	f825 0036 	strh.w	r0, [r5, r6, lsl #3]
 8016ee6:	442c      	add	r4, r5
 8016ee8:	8061      	strh	r1, [r4, #2]
 8016eea:	80a2      	strh	r2, [r4, #4]
 8016eec:	80e3      	strh	r3, [r4, #6]
 8016eee:	e581      	b.n	80169f4 <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0x100>
 8016ef0:	f10b 03ac 	add.w	r3, fp, #172	; 0xac
 8016ef4:	3e01      	subs	r6, #1
 8016ef6:	445c      	add	r4, fp
 8016ef8:	f06f 4a00 	mvn.w	sl, #2147483648	; 0x80000000
 8016efc:	f04f 37ff 	mov.w	r7, #4294967295
 8016f00:	2500      	movs	r5, #0
 8016f02:	9305      	str	r3, [sp, #20]
 8016f04:	f9b4 30a8 	ldrsh.w	r3, [r4, #168]	; 0xa8
 8016f08:	9302      	str	r3, [sp, #8]
 8016f0a:	1e72      	subs	r2, r6, #1
 8016f0c:	f9b4 30aa 	ldrsh.w	r3, [r4, #170]	; 0xaa
 8016f10:	9304      	str	r3, [sp, #16]
 8016f12:	4691      	mov	r9, r2
 8016f14:	f104 03a4 	add.w	r3, r4, #164	; 0xa4
 8016f18:	f1b9 3fff 	cmp.w	r9, #4294967295
 8016f1c:	bf14      	ite	ne
 8016f1e:	9905      	ldrne	r1, [sp, #20]
 8016f20:	f8dd e00c 	ldreq.w	lr, [sp, #12]
 8016f24:	6818      	ldr	r0, [r3, #0]
 8016f26:	9207      	str	r2, [sp, #28]
 8016f28:	bf18      	it	ne
 8016f2a:	eb01 0ec9 	addne.w	lr, r1, r9, lsl #3
 8016f2e:	f10d 0c30 	add.w	ip, sp, #48	; 0x30
 8016f32:	f8be 1006 	ldrh.w	r1, [lr, #6]
 8016f36:	f8be 8004 	ldrh.w	r8, [lr, #4]
 8016f3a:	9306      	str	r3, [sp, #24]
 8016f3c:	fb18 f801 	smulbb	r8, r8, r1
 8016f40:	6859      	ldr	r1, [r3, #4]
 8016f42:	e8ac 0003 	stmia.w	ip!, {r0, r1}
 8016f46:	4671      	mov	r1, lr
 8016f48:	a80c      	add	r0, sp, #48	; 0x30
 8016f4a:	f7ff fafb 	bl	8016544 <_ZN8touchgfx4Rect11expandToFitERKS0_>
 8016f4e:	f8bd 1036 	ldrh.w	r1, [sp, #54]	; 0x36
 8016f52:	f8bd 0034 	ldrh.w	r0, [sp, #52]	; 0x34
 8016f56:	9b04      	ldr	r3, [sp, #16]
 8016f58:	9a02      	ldr	r2, [sp, #8]
 8016f5a:	fb10 f001 	smulbb	r0, r0, r1
 8016f5e:	fb02 8803 	mla	r8, r2, r3, r8
 8016f62:	eba0 0108 	sub.w	r1, r0, r8
 8016f66:	f04f 0c08 	mov.w	ip, #8
 8016f6a:	fb90 f0fc 	sdiv	r0, r0, ip
 8016f6e:	4288      	cmp	r0, r1
 8016f70:	dc20      	bgt.n	8016fb4 <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0x6c0>
 8016f72:	4551      	cmp	r1, sl
 8016f74:	e9dd 3206 	ldrd	r3, r2, [sp, #24]
 8016f78:	da03      	bge.n	8016f82 <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0x68e>
 8016f7a:	b1d9      	cbz	r1, 8016fb4 <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0x6c0>
 8016f7c:	468a      	mov	sl, r1
 8016f7e:	464f      	mov	r7, r9
 8016f80:	4635      	mov	r5, r6
 8016f82:	f109 39ff 	add.w	r9, r9, #4294967295
 8016f86:	f119 0f02 	cmn.w	r9, #2
 8016f8a:	d1c5      	bne.n	8016f18 <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0x624>
 8016f8c:	4616      	mov	r6, r2
 8016f8e:	3201      	adds	r2, #1
 8016f90:	f1a4 0408 	sub.w	r4, r4, #8
 8016f94:	d1b6      	bne.n	8016f04 <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0x610>
 8016f96:	9b01      	ldr	r3, [sp, #4]
 8016f98:	b2ac      	uxth	r4, r5
 8016f9a:	00ed      	lsls	r5, r5, #3
 8016f9c:	1958      	adds	r0, r3, r5
 8016f9e:	1c7b      	adds	r3, r7, #1
 8016fa0:	d10b      	bne.n	8016fba <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0x6c6>
 8016fa2:	4601      	mov	r1, r0
 8016fa4:	9803      	ldr	r0, [sp, #12]
 8016fa6:	f7ff facd 	bl	8016544 <_ZN8touchgfx4Rect11expandToFitERKS0_>
 8016faa:	4621      	mov	r1, r4
 8016fac:	9801      	ldr	r0, [sp, #4]
 8016fae:	f7ff fc8d 	bl	80168cc <_ZN8touchgfx6VectorINS_4RectELt8EE13quickRemoveAtEt>
 8016fb2:	e4b5      	b.n	8016920 <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0x2c>
 8016fb4:	464f      	mov	r7, r9
 8016fb6:	4635      	mov	r5, r6
 8016fb8:	e7ed      	b.n	8016f96 <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0x6a2>
 8016fba:	9b01      	ldr	r3, [sp, #4]
 8016fbc:	00ff      	lsls	r7, r7, #3
 8016fbe:	19d9      	adds	r1, r3, r7
 8016fc0:	f7ff fac0 	bl	8016544 <_ZN8touchgfx4Rect11expandToFitERKS0_>
 8016fc4:	9b03      	ldr	r3, [sp, #12]
 8016fc6:	cb03      	ldmia	r3!, {r0, r1}
 8016fc8:	445f      	add	r7, fp
 8016fca:	445d      	add	r5, fp
 8016fcc:	f8c7 00ac 	str.w	r0, [r7, #172]	; 0xac
 8016fd0:	f8c7 10b0 	str.w	r1, [r7, #176]	; 0xb0
 8016fd4:	f855 0fac 	ldr.w	r0, [r5, #172]!
 8016fd8:	9b03      	ldr	r3, [sp, #12]
 8016fda:	6869      	ldr	r1, [r5, #4]
 8016fdc:	c303      	stmia	r3!, {r0, r1}
 8016fde:	e7e4      	b.n	8016faa <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0x6b6>

08016fe0 <_ZN8touchgfx11Application15drawCachedAreasEv>:
 8016fe0:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 8016fe4:	f500 7698 	add.w	r6, r0, #304	; 0x130
 8016fe8:	b09b      	sub	sp, #108	; 0x6c
 8016fea:	4604      	mov	r4, r0
 8016fec:	4630      	mov	r0, r6
 8016fee:	f7f9 fbe0 	bl	80107b2 <_ZNK8touchgfx4Rect7isEmptyEv>
 8016ff2:	4605      	mov	r5, r0
 8016ff4:	b948      	cbnz	r0, 801700a <_ZN8touchgfx11Application15drawCachedAreasEv+0x2a>
 8016ff6:	6823      	ldr	r3, [r4, #0]
 8016ff8:	e896 0006 	ldmia.w	r6, {r1, r2}
 8016ffc:	6c1b      	ldr	r3, [r3, #64]	; 0x40
 8016ffe:	4620      	mov	r0, r4
 8017000:	4798      	blx	r3
 8017002:	f8c4 5130 	str.w	r5, [r4, #304]	; 0x130
 8017006:	f8c4 5134 	str.w	r5, [r4, #308]	; 0x134
 801700a:	4bc6      	ldr	r3, [pc, #792]	; (8017324 <_ZN8touchgfx11Application15drawCachedAreasEv+0x344>)
 801700c:	681b      	ldr	r3, [r3, #0]
 801700e:	2b00      	cmp	r3, #0
 8017010:	d03f      	beq.n	8017092 <_ZN8touchgfx11Application15drawCachedAreasEv+0xb2>
 8017012:	4dc5      	ldr	r5, [pc, #788]	; (8017328 <_ZN8touchgfx11Application15drawCachedAreasEv+0x348>)
 8017014:	4628      	mov	r0, r5
 8017016:	f7f9 fbcc 	bl	80107b2 <_ZNK8touchgfx4Rect7isEmptyEv>
 801701a:	4606      	mov	r6, r0
 801701c:	2800      	cmp	r0, #0
 801701e:	d138      	bne.n	8017092 <_ZN8touchgfx11Application15drawCachedAreasEv+0xb2>
 8017020:	4628      	mov	r0, r5
 8017022:	f7ff f907 	bl	8016234 <_ZN8touchgfx21DisplayTransformation29transformFrameBufferToDisplayERNS_4RectE>
 8017026:	6823      	ldr	r3, [r4, #0]
 8017028:	6829      	ldr	r1, [r5, #0]
 801702a:	6c1b      	ldr	r3, [r3, #64]	; 0x40
 801702c:	686a      	ldr	r2, [r5, #4]
 801702e:	4620      	mov	r0, r4
 8017030:	4798      	blx	r3
 8017032:	802e      	strh	r6, [r5, #0]
 8017034:	806e      	strh	r6, [r5, #2]
 8017036:	80ae      	strh	r6, [r5, #4]
 8017038:	80ee      	strh	r6, [r5, #6]
 801703a:	f10d 0824 	add.w	r8, sp, #36	; 0x24
 801703e:	4dbb      	ldr	r5, [pc, #748]	; (801732c <_ZN8touchgfx11Application15drawCachedAreasEv+0x34c>)
 8017040:	4640      	mov	r0, r8
 8017042:	f7ff fbeb 	bl	801681c <_ZN8touchgfx6VectorINS_4RectELt8EEC1Ev>
 8017046:	882e      	ldrh	r6, [r5, #0]
 8017048:	f8b4 70ec 	ldrh.w	r7, [r4, #236]	; 0xec
 801704c:	4633      	mov	r3, r6
 801704e:	f104 00ac 	add.w	r0, r4, #172	; 0xac
 8017052:	42bb      	cmp	r3, r7
 8017054:	d224      	bcs.n	80170a0 <_ZN8touchgfx11Application15drawCachedAreasEv+0xc0>
 8017056:	f8bd 1064 	ldrh.w	r1, [sp, #100]	; 0x64
 801705a:	2907      	cmp	r1, #7
 801705c:	d816      	bhi.n	801708c <_ZN8touchgfx11Application15drawCachedAreasEv+0xac>
 801705e:	eb00 02c3 	add.w	r2, r0, r3, lsl #3
 8017062:	f930 9033 	ldrsh.w	r9, [r0, r3, lsl #3]
 8017066:	f9b2 a002 	ldrsh.w	sl, [r2, #2]
 801706a:	f9b2 e004 	ldrsh.w	lr, [r2, #4]
 801706e:	f9b2 c006 	ldrsh.w	ip, [r2, #6]
 8017072:	1c4a      	adds	r2, r1, #1
 8017074:	f8ad 2064 	strh.w	r2, [sp, #100]	; 0x64
 8017078:	eb08 02c1 	add.w	r2, r8, r1, lsl #3
 801707c:	f828 9031 	strh.w	r9, [r8, r1, lsl #3]
 8017080:	f8a2 a002 	strh.w	sl, [r2, #2]
 8017084:	f8a2 e004 	strh.w	lr, [r2, #4]
 8017088:	f8a2 c006 	strh.w	ip, [r2, #6]
 801708c:	3301      	adds	r3, #1
 801708e:	b29b      	uxth	r3, r3
 8017090:	e7df      	b.n	8017052 <_ZN8touchgfx11Application15drawCachedAreasEv+0x72>
 8017092:	f8b4 30ec 	ldrh.w	r3, [r4, #236]	; 0xec
 8017096:	2b00      	cmp	r3, #0
 8017098:	d1cf      	bne.n	801703a <_ZN8touchgfx11Application15drawCachedAreasEv+0x5a>
 801709a:	b01b      	add	sp, #108	; 0x6c
 801709c:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
 80170a0:	f8b4 312e 	ldrh.w	r3, [r4, #302]	; 0x12e
 80170a4:	42b3      	cmp	r3, r6
 80170a6:	d90c      	bls.n	80170c2 <_ZN8touchgfx11Application15drawCachedAreasEv+0xe2>
 80170a8:	eb04 03c6 	add.w	r3, r4, r6, lsl #3
 80170ac:	6822      	ldr	r2, [r4, #0]
 80170ae:	f8d3 10ee 	ldr.w	r1, [r3, #238]	; 0xee
 80170b2:	6c17      	ldr	r7, [r2, #64]	; 0x40
 80170b4:	f8d3 20f2 	ldr.w	r2, [r3, #242]	; 0xf2
 80170b8:	4620      	mov	r0, r4
 80170ba:	3601      	adds	r6, #1
 80170bc:	47b8      	blx	r7
 80170be:	b2b6      	uxth	r6, r6
 80170c0:	e7ee      	b.n	80170a0 <_ZN8touchgfx11Application15drawCachedAreasEv+0xc0>
 80170c2:	4a9b      	ldr	r2, [pc, #620]	; (8017330 <_ZN8touchgfx11Application15drawCachedAreasEv+0x350>)
 80170c4:	6813      	ldr	r3, [r2, #0]
 80170c6:	f893 3048 	ldrb.w	r3, [r3, #72]	; 0x48
 80170ca:	2b01      	cmp	r3, #1
 80170cc:	4691      	mov	r9, r2
 80170ce:	f040 80e2 	bne.w	8017296 <_ZN8touchgfx11Application15drawCachedAreasEv+0x2b6>
 80170d2:	8829      	ldrh	r1, [r5, #0]
 80170d4:	f8b4 70ec 	ldrh.w	r7, [r4, #236]	; 0xec
 80170d8:	eb04 03c1 	add.w	r3, r4, r1, lsl #3
 80170dc:	33ae      	adds	r3, #174	; 0xae
 80170de:	2600      	movs	r6, #0
 80170e0:	428f      	cmp	r7, r1
 80170e2:	f103 0308 	add.w	r3, r3, #8
 80170e6:	dd0a      	ble.n	80170fe <_ZN8touchgfx11Application15drawCachedAreasEv+0x11e>
 80170e8:	f833 2c04 	ldrh.w	r2, [r3, #-4]
 80170ec:	f833 0c08 	ldrh.w	r0, [r3, #-8]
 80170f0:	4402      	add	r2, r0
 80170f2:	b212      	sxth	r2, r2
 80170f4:	4296      	cmp	r6, r2
 80170f6:	bfb8      	it	lt
 80170f8:	4616      	movlt	r6, r2
 80170fa:	3101      	adds	r1, #1
 80170fc:	e7f0      	b.n	80170e0 <_ZN8touchgfx11Application15drawCachedAreasEv+0x100>
 80170fe:	4b8d      	ldr	r3, [pc, #564]	; (8017334 <_ZN8touchgfx11Application15drawCachedAreasEv+0x354>)
 8017100:	f8df 922c 	ldr.w	r9, [pc, #556]	; 8017330 <_ZN8touchgfx11Application15drawCachedAreasEv+0x350>
 8017104:	881b      	ldrh	r3, [r3, #0]
 8017106:	2b0f      	cmp	r3, #15
 8017108:	bf88      	it	hi
 801710a:	ea4f 0bd3 	movhi.w	fp, r3, lsr #3
 801710e:	f04f 0300 	mov.w	r3, #0
 8017112:	e9cd 3305 	strd	r3, r3, [sp, #20]
 8017116:	bf98      	it	ls
 8017118:	f04f 0b01 	movls.w	fp, #1
 801711c:	f8bd 7016 	ldrh.w	r7, [sp, #22]
 8017120:	f8bd 001a 	ldrh.w	r0, [sp, #26]
 8017124:	4b82      	ldr	r3, [pc, #520]	; (8017330 <_ZN8touchgfx11Application15drawCachedAreasEv+0x350>)
 8017126:	4438      	add	r0, r7
 8017128:	b207      	sxth	r7, r0
 801712a:	6818      	ldr	r0, [r3, #0]
 801712c:	42b7      	cmp	r7, r6
 801712e:	6803      	ldr	r3, [r0, #0]
 8017130:	f280 8083 	bge.w	801723a <_ZN8touchgfx11Application15drawCachedAreasEv+0x25a>
 8017134:	f8d3 309c 	ldr.w	r3, [r3, #156]	; 0x9c
 8017138:	4798      	blx	r3
 801713a:	eb07 030b 	add.w	r3, r7, fp
 801713e:	4298      	cmp	r0, r3
 8017140:	da07      	bge.n	8017152 <_ZN8touchgfx11Application15drawCachedAreasEv+0x172>
 8017142:	42b0      	cmp	r0, r6
 8017144:	da05      	bge.n	8017152 <_ZN8touchgfx11Application15drawCachedAreasEv+0x172>
 8017146:	4287      	cmp	r7, r0
 8017148:	dd6c      	ble.n	8017224 <_ZN8touchgfx11Application15drawCachedAreasEv+0x244>
 801714a:	2f00      	cmp	r7, #0
 801714c:	dd6a      	ble.n	8017224 <_ZN8touchgfx11Application15drawCachedAreasEv+0x244>
 801714e:	4630      	mov	r0, r6
 8017150:	e004      	b.n	801715c <_ZN8touchgfx11Application15drawCachedAreasEv+0x17c>
 8017152:	4287      	cmp	r7, r0
 8017154:	dcfb      	bgt.n	801714e <_ZN8touchgfx11Application15drawCachedAreasEv+0x16e>
 8017156:	42b0      	cmp	r0, r6
 8017158:	bfa8      	it	ge
 801715a:	4630      	movge	r0, r6
 801715c:	4b76      	ldr	r3, [pc, #472]	; (8017338 <_ZN8touchgfx11Application15drawCachedAreasEv+0x358>)
 801715e:	f8ad 7016 	strh.w	r7, [sp, #22]
 8017162:	1bc0      	subs	r0, r0, r7
 8017164:	f9b3 3000 	ldrsh.w	r3, [r3]
 8017168:	882f      	ldrh	r7, [r5, #0]
 801716a:	f8ad 3018 	strh.w	r3, [sp, #24]
 801716e:	2200      	movs	r2, #0
 8017170:	f8ad 2014 	strh.w	r2, [sp, #20]
 8017174:	f8ad 001a 	strh.w	r0, [sp, #26]
 8017178:	f8b4 30ec 	ldrh.w	r3, [r4, #236]	; 0xec
 801717c:	42bb      	cmp	r3, r7
 801717e:	d9cd      	bls.n	801711c <_ZN8touchgfx11Application15drawCachedAreasEv+0x13c>
 8017180:	eb04 02c7 	add.w	r2, r4, r7, lsl #3
 8017184:	ab07      	add	r3, sp, #28
 8017186:	f852 0fac 	ldr.w	r0, [r2, #172]!
 801718a:	6851      	ldr	r1, [r2, #4]
 801718c:	c303      	stmia	r3!, {r0, r1}
 801718e:	a905      	add	r1, sp, #20
 8017190:	a807      	add	r0, sp, #28
 8017192:	f7ff f93e 	bl	8016412 <_ZNK8touchgfx4Rect9intersectERKS0_>
 8017196:	2800      	cmp	r0, #0
 8017198:	d04c      	beq.n	8017234 <_ZN8touchgfx11Application15drawCachedAreasEv+0x254>
 801719a:	f9bd 001c 	ldrsh.w	r0, [sp, #28]
 801719e:	f9bd 2014 	ldrsh.w	r2, [sp, #20]
 80171a2:	f8bd a020 	ldrh.w	sl, [sp, #32]
 80171a6:	f9bd 101e 	ldrsh.w	r1, [sp, #30]
 80171aa:	f9bd 3016 	ldrsh.w	r3, [sp, #22]
 80171ae:	9302      	str	r3, [sp, #8]
 80171b0:	4686      	mov	lr, r0
 80171b2:	4290      	cmp	r0, r2
 80171b4:	4450      	add	r0, sl
 80171b6:	f8bd a018 	ldrh.w	sl, [sp, #24]
 80171ba:	bfb8      	it	lt
 80171bc:	4696      	movlt	lr, r2
 80171be:	4452      	add	r2, sl
 80171c0:	4299      	cmp	r1, r3
 80171c2:	b280      	uxth	r0, r0
 80171c4:	b292      	uxth	r2, r2
 80171c6:	468c      	mov	ip, r1
 80171c8:	fa0f fa82 	sxth.w	sl, r2
 80171cc:	bfb8      	it	lt
 80171ce:	469c      	movlt	ip, r3
 80171d0:	b203      	sxth	r3, r0
 80171d2:	4553      	cmp	r3, sl
 80171d4:	bfb8      	it	lt
 80171d6:	4602      	movlt	r2, r0
 80171d8:	eba2 020e 	sub.w	r2, r2, lr
 80171dc:	f8ad 2020 	strh.w	r2, [sp, #32]
 80171e0:	f8bd 2022 	ldrh.w	r2, [sp, #34]	; 0x22
 80171e4:	9b02      	ldr	r3, [sp, #8]
 80171e6:	f8ad e01c 	strh.w	lr, [sp, #28]
 80171ea:	4411      	add	r1, r2
 80171ec:	f8bd 201a 	ldrh.w	r2, [sp, #26]
 80171f0:	f8ad c01e 	strh.w	ip, [sp, #30]
 80171f4:	4413      	add	r3, r2
 80171f6:	b289      	uxth	r1, r1
 80171f8:	b29b      	uxth	r3, r3
 80171fa:	b208      	sxth	r0, r1
 80171fc:	b21a      	sxth	r2, r3
 80171fe:	4290      	cmp	r0, r2
 8017200:	bfb8      	it	lt
 8017202:	460b      	movlt	r3, r1
 8017204:	eba3 030c 	sub.w	r3, r3, ip
 8017208:	f8ad 3022 	strh.w	r3, [sp, #34]	; 0x22
 801720c:	a807      	add	r0, sp, #28
 801720e:	f7f9 fad0 	bl	80107b2 <_ZNK8touchgfx4Rect7isEmptyEv>
 8017212:	b920      	cbnz	r0, 801721e <_ZN8touchgfx11Application15drawCachedAreasEv+0x23e>
 8017214:	6823      	ldr	r3, [r4, #0]
 8017216:	a907      	add	r1, sp, #28
 8017218:	6c9b      	ldr	r3, [r3, #72]	; 0x48
 801721a:	4620      	mov	r0, r4
 801721c:	4798      	blx	r3
 801721e:	3701      	adds	r7, #1
 8017220:	b2bf      	uxth	r7, r7
 8017222:	e7a9      	b.n	8017178 <_ZN8touchgfx11Application15drawCachedAreasEv+0x198>
 8017224:	f8d9 0000 	ldr.w	r0, [r9]
 8017228:	6803      	ldr	r3, [r0, #0]
 801722a:	2101      	movs	r1, #1
 801722c:	f8d3 3098 	ldr.w	r3, [r3, #152]	; 0x98
 8017230:	4798      	blx	r3
 8017232:	e773      	b.n	801711c <_ZN8touchgfx11Application15drawCachedAreasEv+0x13c>
 8017234:	e9cd 0007 	strd	r0, r0, [sp, #28]
 8017238:	e7e8      	b.n	801720c <_ZN8touchgfx11Application15drawCachedAreasEv+0x22c>
 801723a:	6a5b      	ldr	r3, [r3, #36]	; 0x24
 801723c:	4798      	blx	r3
 801723e:	4b3f      	ldr	r3, [pc, #252]	; (801733c <_ZN8touchgfx11Application15drawCachedAreasEv+0x35c>)
 8017240:	781b      	ldrb	r3, [r3, #0]
 8017242:	2b00      	cmp	r3, #0
 8017244:	f43f af29 	beq.w	801709a <_ZN8touchgfx11Application15drawCachedAreasEv+0xba>
 8017248:	2300      	movs	r3, #0
 801724a:	f8a4 312e 	strh.w	r3, [r4, #302]	; 0x12e
 801724e:	882b      	ldrh	r3, [r5, #0]
 8017250:	f8bd 5064 	ldrh.w	r5, [sp, #100]	; 0x64
 8017254:	f104 00ee 	add.w	r0, r4, #238	; 0xee
 8017258:	42ab      	cmp	r3, r5
 801725a:	f4bf af1e 	bcs.w	801709a <_ZN8touchgfx11Application15drawCachedAreasEv+0xba>
 801725e:	f8b4 112e 	ldrh.w	r1, [r4, #302]	; 0x12e
 8017262:	2907      	cmp	r1, #7
 8017264:	d814      	bhi.n	8017290 <_ZN8touchgfx11Application15drawCachedAreasEv+0x2b0>
 8017266:	eb08 02c3 	add.w	r2, r8, r3, lsl #3
 801726a:	f938 e033 	ldrsh.w	lr, [r8, r3, lsl #3]
 801726e:	f9b2 c002 	ldrsh.w	ip, [r2, #2]
 8017272:	f9b2 7004 	ldrsh.w	r7, [r2, #4]
 8017276:	f9b2 6006 	ldrsh.w	r6, [r2, #6]
 801727a:	1c4a      	adds	r2, r1, #1
 801727c:	f8a4 212e 	strh.w	r2, [r4, #302]	; 0x12e
 8017280:	eb00 02c1 	add.w	r2, r0, r1, lsl #3
 8017284:	f820 e031 	strh.w	lr, [r0, r1, lsl #3]
 8017288:	f8a2 c002 	strh.w	ip, [r2, #2]
 801728c:	8097      	strh	r7, [r2, #4]
 801728e:	80d6      	strh	r6, [r2, #6]
 8017290:	3301      	adds	r3, #1
 8017292:	b29b      	uxth	r3, r3
 8017294:	e7e0      	b.n	8017258 <_ZN8touchgfx11Application15drawCachedAreasEv+0x278>
 8017296:	2b02      	cmp	r3, #2
 8017298:	f040 8133 	bne.w	8017502 <_ZN8touchgfx11Application15drawCachedAreasEv+0x522>
 801729c:	4b28      	ldr	r3, [pc, #160]	; (8017340 <_ZN8touchgfx11Application15drawCachedAreasEv+0x360>)
 801729e:	781b      	ldrb	r3, [r3, #0]
 80172a0:	2b01      	cmp	r3, #1
 80172a2:	f104 0aac 	add.w	sl, r4, #172	; 0xac
 80172a6:	f000 8098 	beq.w	80173da <_ZN8touchgfx11Application15drawCachedAreasEv+0x3fa>
 80172aa:	882a      	ldrh	r2, [r5, #0]
 80172ac:	f8b4 10ec 	ldrh.w	r1, [r4, #236]	; 0xec
 80172b0:	3201      	adds	r2, #1
 80172b2:	b292      	uxth	r2, r2
 80172b4:	2900      	cmp	r1, #0
 80172b6:	d0c2      	beq.n	801723e <_ZN8touchgfx11Application15drawCachedAreasEv+0x25e>
 80172b8:	f8b4 60ae 	ldrh.w	r6, [r4, #174]	; 0xae
 80172bc:	f8b4 30b2 	ldrh.w	r3, [r4, #178]	; 0xb2
 80172c0:	441e      	add	r6, r3
 80172c2:	b236      	sxth	r6, r6
 80172c4:	4694      	mov	ip, r2
 80172c6:	f04f 0900 	mov.w	r9, #0
 80172ca:	fa1f f38c 	uxth.w	r3, ip
 80172ce:	4299      	cmp	r1, r3
 80172d0:	ea4f 07c9 	mov.w	r7, r9, lsl #3
 80172d4:	f240 80bf 	bls.w	8017456 <_ZN8touchgfx11Application15drawCachedAreasEv+0x476>
 80172d8:	4427      	add	r7, r4
 80172da:	eb04 0ecc 	add.w	lr, r4, ip, lsl #3
 80172de:	f9b7 30ae 	ldrsh.w	r3, [r7, #174]	; 0xae
 80172e2:	f9be 00ae 	ldrsh.w	r0, [lr, #174]	; 0xae
 80172e6:	4283      	cmp	r3, r0
 80172e8:	f340 80a1 	ble.w	801742e <_ZN8touchgfx11Application15drawCachedAreasEv+0x44e>
 80172ec:	f8be 60b2 	ldrh.w	r6, [lr, #178]	; 0xb2
 80172f0:	4406      	add	r6, r0
 80172f2:	b236      	sxth	r6, r6
 80172f4:	429e      	cmp	r6, r3
 80172f6:	bfa8      	it	ge
 80172f8:	461e      	movge	r6, r3
 80172fa:	46e1      	mov	r9, ip
 80172fc:	f10c 0c01 	add.w	ip, ip, #1
 8017300:	e7e3      	b.n	80172ca <_ZN8touchgfx11Application15drawCachedAreasEv+0x2ea>
 8017302:	d10a      	bne.n	801731a <_ZN8touchgfx11Application15drawCachedAreasEv+0x33a>
 8017304:	f9b6 00b2 	ldrsh.w	r0, [r6, #178]	; 0xb2
 8017308:	f9be 10b2 	ldrsh.w	r1, [lr, #178]	; 0xb2
 801730c:	4562      	cmp	r2, ip
 801730e:	bfb8      	it	lt
 8017310:	4662      	movlt	r2, ip
 8017312:	4288      	cmp	r0, r1
 8017314:	bfb8      	it	lt
 8017316:	461f      	movlt	r7, r3
 8017318:	e087      	b.n	801742a <_ZN8touchgfx11Application15drawCachedAreasEv+0x44a>
 801731a:	428a      	cmp	r2, r1
 801731c:	bfb8      	it	lt
 801731e:	460a      	movlt	r2, r1
 8017320:	e083      	b.n	801742a <_ZN8touchgfx11Application15drawCachedAreasEv+0x44a>
 8017322:	bf00      	nop
 8017324:	2001385c 	.word	0x2001385c
 8017328:	20013868 	.word	0x20013868
 801732c:	20000088 	.word	0x20000088
 8017330:	2001381c 	.word	0x2001381c
 8017334:	20013812 	.word	0x20013812
 8017338:	20013810 	.word	0x20013810
 801733c:	2001381a 	.word	0x2001381a
 8017340:	20013814 	.word	0x20013814
 8017344:	19a1      	adds	r1, r4, r6
 8017346:	ab07      	add	r3, sp, #28
 8017348:	f851 0fac 	ldr.w	r0, [r1, #172]!
 801734c:	6849      	ldr	r1, [r1, #4]
 801734e:	c303      	stmia	r3!, {r0, r1}
 8017350:	f9bd 3020 	ldrsh.w	r3, [sp, #32]
 8017354:	f8bd 101c 	ldrh.w	r1, [sp, #28]
 8017358:	2b13      	cmp	r3, #19
 801735a:	bfd8      	it	le
 801735c:	f9bd 201c 	ldrshle.w	r2, [sp, #28]
 8017360:	f8ad 201c 	strh.w	r2, [sp, #28]
 8017364:	440b      	add	r3, r1
 8017366:	1a9b      	subs	r3, r3, r2
 8017368:	a807      	add	r0, sp, #28
 801736a:	f8ad 3020 	strh.w	r3, [sp, #32]
 801736e:	f7fe ff7b 	bl	8016268 <_ZN8touchgfx21DisplayTransformation29transformDisplayToFrameBufferERNS_4RectE>
 8017372:	a807      	add	r0, sp, #28
 8017374:	f7f9 fa1d 	bl	80107b2 <_ZNK8touchgfx4Rect7isEmptyEv>
 8017378:	bb78      	cbnz	r0, 80173da <_ZN8touchgfx11Application15drawCachedAreasEv+0x3fa>
 801737a:	f9bd c022 	ldrsh.w	ip, [sp, #34]	; 0x22
 801737e:	f8d9 0000 	ldr.w	r0, [r9]
 8017382:	f8bd 3020 	ldrh.w	r3, [sp, #32]
 8017386:	f8d0 e000 	ldr.w	lr, [r0]
 801738a:	f8bd 201e 	ldrh.w	r2, [sp, #30]
 801738e:	f8bd 101c 	ldrh.w	r1, [sp, #28]
 8017392:	f1bc 0f14 	cmp.w	ip, #20
 8017396:	bfa8      	it	ge
 8017398:	f04f 0c14 	movge.w	ip, #20
 801739c:	fa1f fc8c 	uxth.w	ip, ip
 80173a0:	f8cd c000 	str.w	ip, [sp]
 80173a4:	f8de b090 	ldr.w	fp, [lr, #144]	; 0x90
 80173a8:	47d8      	blx	fp
 80173aa:	4683      	mov	fp, r0
 80173ac:	f8ad 0022 	strh.w	r0, [sp, #34]	; 0x22
 80173b0:	a807      	add	r0, sp, #28
 80173b2:	f7fe ff3f 	bl	8016234 <_ZN8touchgfx21DisplayTransformation29transformFrameBufferToDisplayERNS_4RectE>
 80173b6:	6823      	ldr	r3, [r4, #0]
 80173b8:	4426      	add	r6, r4
 80173ba:	4620      	mov	r0, r4
 80173bc:	6c9b      	ldr	r3, [r3, #72]	; 0x48
 80173be:	a907      	add	r1, sp, #28
 80173c0:	4798      	blx	r3
 80173c2:	f8b6 00b0 	ldrh.w	r0, [r6, #176]	; 0xb0
 80173c6:	eba0 000b 	sub.w	r0, r0, fp
 80173ca:	b200      	sxth	r0, r0
 80173cc:	f8a6 00b0 	strh.w	r0, [r6, #176]	; 0xb0
 80173d0:	b918      	cbnz	r0, 80173da <_ZN8touchgfx11Application15drawCachedAreasEv+0x3fa>
 80173d2:	b2b9      	uxth	r1, r7
 80173d4:	4650      	mov	r0, sl
 80173d6:	f7ff fa79 	bl	80168cc <_ZN8touchgfx6VectorINS_4RectELt8EE13quickRemoveAtEt>
 80173da:	f8b4 b0ec 	ldrh.w	fp, [r4, #236]	; 0xec
 80173de:	f1bb 0f00 	cmp.w	fp, #0
 80173e2:	f43f af2c 	beq.w	801723e <_ZN8touchgfx11Application15drawCachedAreasEv+0x25e>
 80173e6:	882b      	ldrh	r3, [r5, #0]
 80173e8:	f9b4 20ac 	ldrsh.w	r2, [r4, #172]	; 0xac
 80173ec:	3301      	adds	r3, #1
 80173ee:	b29b      	uxth	r3, r3
 80173f0:	2700      	movs	r7, #0
 80173f2:	b299      	uxth	r1, r3
 80173f4:	458b      	cmp	fp, r1
 80173f6:	ea4f 06c7 	mov.w	r6, r7, lsl #3
 80173fa:	d9a3      	bls.n	8017344 <_ZN8touchgfx11Application15drawCachedAreasEv+0x364>
 80173fc:	4426      	add	r6, r4
 80173fe:	eb04 0ec3 	add.w	lr, r4, r3, lsl #3
 8017402:	f8b6 10ac 	ldrh.w	r1, [r6, #172]	; 0xac
 8017406:	f8b6 00b0 	ldrh.w	r0, [r6, #176]	; 0xb0
 801740a:	f9be c0ac 	ldrsh.w	ip, [lr, #172]	; 0xac
 801740e:	4408      	add	r0, r1
 8017410:	f8be 10b0 	ldrh.w	r1, [lr, #176]	; 0xb0
 8017414:	4461      	add	r1, ip
 8017416:	b200      	sxth	r0, r0
 8017418:	b209      	sxth	r1, r1
 801741a:	4288      	cmp	r0, r1
 801741c:	f6bf af71 	bge.w	8017302 <_ZN8touchgfx11Application15drawCachedAreasEv+0x322>
 8017420:	4584      	cmp	ip, r0
 8017422:	4662      	mov	r2, ip
 8017424:	461f      	mov	r7, r3
 8017426:	bfb8      	it	lt
 8017428:	4602      	movlt	r2, r0
 801742a:	3301      	adds	r3, #1
 801742c:	e7e1      	b.n	80173f2 <_ZN8touchgfx11Application15drawCachedAreasEv+0x412>
 801742e:	d10e      	bne.n	801744e <_ZN8touchgfx11Application15drawCachedAreasEv+0x46e>
 8017430:	f9be 00b0 	ldrsh.w	r0, [lr, #176]	; 0xb0
 8017434:	f8be e0b2 	ldrh.w	lr, [lr, #178]	; 0xb2
 8017438:	f9b7 70b0 	ldrsh.w	r7, [r7, #176]	; 0xb0
 801743c:	4473      	add	r3, lr
 801743e:	b21b      	sxth	r3, r3
 8017440:	429e      	cmp	r6, r3
 8017442:	bfa8      	it	ge
 8017444:	461e      	movge	r6, r3
 8017446:	4287      	cmp	r7, r0
 8017448:	bfb8      	it	lt
 801744a:	46e1      	movlt	r9, ip
 801744c:	e756      	b.n	80172fc <_ZN8touchgfx11Application15drawCachedAreasEv+0x31c>
 801744e:	4286      	cmp	r6, r0
 8017450:	bfa8      	it	ge
 8017452:	4606      	movge	r6, r0
 8017454:	e752      	b.n	80172fc <_ZN8touchgfx11Application15drawCachedAreasEv+0x31c>
 8017456:	eb0a 0007 	add.w	r0, sl, r7
 801745a:	4427      	add	r7, r4
 801745c:	e9cd 2102 	strd	r2, r1, [sp, #8]
 8017460:	f9b7 b0b2 	ldrsh.w	fp, [r7, #178]	; 0xb2
 8017464:	f1bb 0f13 	cmp.w	fp, #19
 8017468:	bfde      	ittt	le
 801746a:	f8b7 60ae 	ldrhle.w	r6, [r7, #174]	; 0xae
 801746e:	445e      	addle	r6, fp
 8017470:	b236      	sxthle	r6, r6
 8017472:	f7f9 f99e 	bl	80107b2 <_ZNK8touchgfx4Rect7isEmptyEv>
 8017476:	e9dd 2102 	ldrd	r2, r1, [sp, #8]
 801747a:	2800      	cmp	r0, #0
 801747c:	f47f af1a 	bne.w	80172b4 <_ZN8touchgfx11Application15drawCachedAreasEv+0x2d4>
 8017480:	f9b7 20ae 	ldrsh.w	r2, [r7, #174]	; 0xae
 8017484:	f8ad 0022 	strh.w	r0, [sp, #34]	; 0x22
 8017488:	482a      	ldr	r0, [pc, #168]	; (8017534 <_ZN8touchgfx11Application15drawCachedAreasEv+0x554>)
 801748a:	f9b7 10ac 	ldrsh.w	r1, [r7, #172]	; 0xac
 801748e:	f9b7 30b0 	ldrsh.w	r3, [r7, #176]	; 0xb0
 8017492:	6800      	ldr	r0, [r0, #0]
 8017494:	f8ad 101c 	strh.w	r1, [sp, #28]
 8017498:	1ab6      	subs	r6, r6, r2
 801749a:	2e14      	cmp	r6, #20
 801749c:	f8ad 201e 	strh.w	r2, [sp, #30]
 80174a0:	f8ad 3020 	strh.w	r3, [sp, #32]
 80174a4:	bfa8      	it	ge
 80174a6:	2614      	movge	r6, #20
 80174a8:	f8d0 c000 	ldr.w	ip, [r0]
 80174ac:	b2b6      	uxth	r6, r6
 80174ae:	fa1f fb8b 	uxth.w	fp, fp
 80174b2:	455e      	cmp	r6, fp
 80174b4:	bf94      	ite	ls
 80174b6:	9600      	strls	r6, [sp, #0]
 80174b8:	f8cd b000 	strhi.w	fp, [sp]
 80174bc:	b292      	uxth	r2, r2
 80174be:	f8dc 6090 	ldr.w	r6, [ip, #144]	; 0x90
 80174c2:	b29b      	uxth	r3, r3
 80174c4:	b289      	uxth	r1, r1
 80174c6:	47b0      	blx	r6
 80174c8:	6823      	ldr	r3, [r4, #0]
 80174ca:	f8ad 0022 	strh.w	r0, [sp, #34]	; 0x22
 80174ce:	6c9b      	ldr	r3, [r3, #72]	; 0x48
 80174d0:	a907      	add	r1, sp, #28
 80174d2:	4620      	mov	r0, r4
 80174d4:	4798      	blx	r3
 80174d6:	f8bd 1022 	ldrh.w	r1, [sp, #34]	; 0x22
 80174da:	f8b7 30b2 	ldrh.w	r3, [r7, #178]	; 0xb2
 80174de:	f8b7 20ae 	ldrh.w	r2, [r7, #174]	; 0xae
 80174e2:	1a5b      	subs	r3, r3, r1
 80174e4:	440a      	add	r2, r1
 80174e6:	b21b      	sxth	r3, r3
 80174e8:	f8a7 20ae 	strh.w	r2, [r7, #174]	; 0xae
 80174ec:	f8a7 30b2 	strh.w	r3, [r7, #178]	; 0xb2
 80174f0:	2b00      	cmp	r3, #0
 80174f2:	f47f aeda 	bne.w	80172aa <_ZN8touchgfx11Application15drawCachedAreasEv+0x2ca>
 80174f6:	fa1f f189 	uxth.w	r1, r9
 80174fa:	4650      	mov	r0, sl
 80174fc:	f7ff f9e6 	bl	80168cc <_ZN8touchgfx6VectorINS_4RectELt8EE13quickRemoveAtEt>
 8017500:	e6d3      	b.n	80172aa <_ZN8touchgfx11Application15drawCachedAreasEv+0x2ca>
 8017502:	882e      	ldrh	r6, [r5, #0]
 8017504:	f8b4 30ec 	ldrh.w	r3, [r4, #236]	; 0xec
 8017508:	42b3      	cmp	r3, r6
 801750a:	f67f ae98 	bls.w	801723e <_ZN8touchgfx11Application15drawCachedAreasEv+0x25e>
 801750e:	eb04 02c6 	add.w	r2, r4, r6, lsl #3
 8017512:	ab07      	add	r3, sp, #28
 8017514:	f852 0fac 	ldr.w	r0, [r2, #172]!
 8017518:	6851      	ldr	r1, [r2, #4]
 801751a:	c303      	stmia	r3!, {r0, r1}
 801751c:	a807      	add	r0, sp, #28
 801751e:	f7f9 f948 	bl	80107b2 <_ZNK8touchgfx4Rect7isEmptyEv>
 8017522:	b920      	cbnz	r0, 801752e <_ZN8touchgfx11Application15drawCachedAreasEv+0x54e>
 8017524:	6823      	ldr	r3, [r4, #0]
 8017526:	a907      	add	r1, sp, #28
 8017528:	6c9b      	ldr	r3, [r3, #72]	; 0x48
 801752a:	4620      	mov	r0, r4
 801752c:	4798      	blx	r3
 801752e:	3601      	adds	r6, #1
 8017530:	b2b6      	uxth	r6, r6
 8017532:	e7e7      	b.n	8017504 <_ZN8touchgfx11Application15drawCachedAreasEv+0x524>
 8017534:	2001381c 	.word	0x2001381c

08017538 <_GLOBAL__sub_I__ZN8touchgfx11Application8instanceE>:
 8017538:	4b03      	ldr	r3, [pc, #12]	; (8017548 <_GLOBAL__sub_I__ZN8touchgfx11Application8instanceE+0x10>)
 801753a:	2200      	movs	r2, #0
 801753c:	801a      	strh	r2, [r3, #0]
 801753e:	805a      	strh	r2, [r3, #2]
 8017540:	809a      	strh	r2, [r3, #4]
 8017542:	80da      	strh	r2, [r3, #6]
 8017544:	4770      	bx	lr
 8017546:	bf00      	nop
 8017548:	20013868 	.word	0x20013868

0801754c <_ZNK8touchgfx4Font17getStringWidthLTREhPKtSt9__va_list>:
 801754c:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 8017550:	4606      	mov	r6, r0
 8017552:	b09d      	sub	sp, #116	; 0x74
 8017554:	a803      	add	r0, sp, #12
 8017556:	4614      	mov	r4, r2
 8017558:	468a      	mov	sl, r1
 801755a:	461d      	mov	r5, r3
 801755c:	f000 ff08 	bl	8018370 <_ZN8touchgfx12TextProviderC1Ev>
 8017560:	6833      	ldr	r3, [r6, #0]
 8017562:	4630      	mov	r0, r6
 8017564:	6cdb      	ldr	r3, [r3, #76]	; 0x4c
 8017566:	4798      	blx	r3
 8017568:	6833      	ldr	r3, [r6, #0]
 801756a:	4607      	mov	r7, r0
 801756c:	6d1b      	ldr	r3, [r3, #80]	; 0x50
 801756e:	4630      	mov	r0, r6
 8017570:	4798      	blx	r3
 8017572:	462a      	mov	r2, r5
 8017574:	9000      	str	r0, [sp, #0]
 8017576:	4621      	mov	r1, r4
 8017578:	463b      	mov	r3, r7
 801757a:	a803      	add	r0, sp, #12
 801757c:	f000 ff53 	bl	8018426 <_ZN8touchgfx12TextProvider10initializeEPKtSt9__va_listS2_PKNS_24FontContextualFormsTableE>
 8017580:	2500      	movs	r5, #0
 8017582:	462c      	mov	r4, r5
 8017584:	46a9      	mov	r9, r5
 8017586:	46a8      	mov	r8, r5
 8017588:	f242 0b0b 	movw	fp, #8203	; 0x200b
 801758c:	2300      	movs	r3, #0
 801758e:	9302      	str	r3, [sp, #8]
 8017590:	f64f 63ff 	movw	r3, #65279	; 0xfeff
 8017594:	429c      	cmp	r4, r3
 8017596:	d002      	beq.n	801759e <_ZNK8touchgfx4Font17getStringWidthLTREhPKtSt9__va_list+0x52>
 8017598:	455c      	cmp	r4, fp
 801759a:	bf18      	it	ne
 801759c:	4625      	movne	r5, r4
 801759e:	ab02      	add	r3, sp, #8
 80175a0:	4632      	mov	r2, r6
 80175a2:	4651      	mov	r1, sl
 80175a4:	a803      	add	r0, sp, #12
 80175a6:	f001 fa41 	bl	8018a2c <_ZN8touchgfx12TextProvider15getNextLigatureEhPKNS_4FontERPKNS_9GlyphNodeE>
 80175aa:	4604      	mov	r4, r0
 80175ac:	b108      	cbz	r0, 80175b2 <_ZNK8touchgfx4Font17getStringWidthLTREhPKtSt9__va_list+0x66>
 80175ae:	280a      	cmp	r0, #10
 80175b0:	d10a      	bne.n	80175c8 <_ZNK8touchgfx4Font17getStringWidthLTREhPKtSt9__va_list+0x7c>
 80175b2:	45c1      	cmp	r9, r8
 80175b4:	bf38      	it	cc
 80175b6:	46c1      	movcc	r9, r8
 80175b8:	f04f 0800 	mov.w	r8, #0
 80175bc:	2c00      	cmp	r4, #0
 80175be:	d1e5      	bne.n	801758c <_ZNK8touchgfx4Font17getStringWidthLTREhPKtSt9__va_list+0x40>
 80175c0:	4648      	mov	r0, r9
 80175c2:	b01d      	add	sp, #116	; 0x74
 80175c4:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
 80175c8:	9a02      	ldr	r2, [sp, #8]
 80175ca:	2a00      	cmp	r2, #0
 80175cc:	d0de      	beq.n	801758c <_ZNK8touchgfx4Font17getStringWidthLTREhPKtSt9__va_list+0x40>
 80175ce:	7b57      	ldrb	r7, [r2, #13]
 80175d0:	6833      	ldr	r3, [r6, #0]
 80175d2:	8894      	ldrh	r4, [r2, #4]
 80175d4:	6c5b      	ldr	r3, [r3, #68]	; 0x44
 80175d6:	007f      	lsls	r7, r7, #1
 80175d8:	f407 7080 	and.w	r0, r7, #256	; 0x100
 80175dc:	7a97      	ldrb	r7, [r2, #10]
 80175de:	4629      	mov	r1, r5
 80175e0:	4307      	orrs	r7, r0
 80175e2:	4630      	mov	r0, r6
 80175e4:	4798      	blx	r3
 80175e6:	4438      	add	r0, r7
 80175e8:	4480      	add	r8, r0
 80175ea:	fa1f f888 	uxth.w	r8, r8
 80175ee:	e7e5      	b.n	80175bc <_ZNK8touchgfx4Font17getStringWidthLTREhPKtSt9__va_list+0x70>

080175f0 <_ZNK8touchgfx4Font12getCharWidthEt>:
 80175f0:	b508      	push	{r3, lr}
 80175f2:	6803      	ldr	r3, [r0, #0]
 80175f4:	68db      	ldr	r3, [r3, #12]
 80175f6:	4798      	blx	r3
 80175f8:	b128      	cbz	r0, 8017606 <_ZNK8touchgfx4Font12getCharWidthEt+0x16>
 80175fa:	7b43      	ldrb	r3, [r0, #13]
 80175fc:	7a80      	ldrb	r0, [r0, #10]
 80175fe:	005b      	lsls	r3, r3, #1
 8017600:	f403 7380 	and.w	r3, r3, #256	; 0x100
 8017604:	4318      	orrs	r0, r3
 8017606:	bd08      	pop	{r3, pc}

08017608 <_ZNK8touchgfx4Font16getMaxTextHeightEPKtz>:
 8017608:	b40e      	push	{r1, r2, r3}
 801760a:	b5f0      	push	{r4, r5, r6, r7, lr}
 801760c:	b09e      	sub	sp, #120	; 0x78
 801760e:	ab23      	add	r3, sp, #140	; 0x8c
 8017610:	4605      	mov	r5, r0
 8017612:	f853 4b04 	ldr.w	r4, [r3], #4
 8017616:	9303      	str	r3, [sp, #12]
 8017618:	a805      	add	r0, sp, #20
 801761a:	f000 fea9 	bl	8018370 <_ZN8touchgfx12TextProviderC1Ev>
 801761e:	682b      	ldr	r3, [r5, #0]
 8017620:	4628      	mov	r0, r5
 8017622:	6cdb      	ldr	r3, [r3, #76]	; 0x4c
 8017624:	4798      	blx	r3
 8017626:	682b      	ldr	r3, [r5, #0]
 8017628:	4606      	mov	r6, r0
 801762a:	6d1b      	ldr	r3, [r3, #80]	; 0x50
 801762c:	4628      	mov	r0, r5
 801762e:	4798      	blx	r3
 8017630:	4633      	mov	r3, r6
 8017632:	ae1e      	add	r6, sp, #120	; 0x78
 8017634:	4621      	mov	r1, r4
 8017636:	9000      	str	r0, [sp, #0]
 8017638:	9a03      	ldr	r2, [sp, #12]
 801763a:	2400      	movs	r4, #0
 801763c:	a805      	add	r0, sp, #20
 801763e:	f000 fef2 	bl	8018426 <_ZN8touchgfx12TextProvider10initializeEPKtSt9__va_listS2_PKNS_24FontContextualFormsTableE>
 8017642:	f846 4d68 	str.w	r4, [r6, #-104]!
 8017646:	462a      	mov	r2, r5
 8017648:	4633      	mov	r3, r6
 801764a:	4621      	mov	r1, r4
 801764c:	a805      	add	r0, sp, #20
 801764e:	f001 f9ed 	bl	8018a2c <_ZN8touchgfx12TextProvider15getNextLigatureEhPKNS_4FontERPKNS_9GlyphNodeE>
 8017652:	b1f0      	cbz	r0, 8017692 <_ZNK8touchgfx4Font16getMaxTextHeightEPKtz+0x8a>
 8017654:	280a      	cmp	r0, #10
 8017656:	d018      	beq.n	801768a <_ZNK8touchgfx4Font16getMaxTextHeightEPKtz+0x82>
 8017658:	9f04      	ldr	r7, [sp, #16]
 801765a:	b1b7      	cbz	r7, 801768a <_ZNK8touchgfx4Font16getMaxTextHeightEPKtz+0x82>
 801765c:	7b78      	ldrb	r0, [r7, #13]
 801765e:	7a3b      	ldrb	r3, [r7, #8]
 8017660:	88ea      	ldrh	r2, [r5, #6]
 8017662:	00c1      	lsls	r1, r0, #3
 8017664:	f401 7180 	and.w	r1, r1, #256	; 0x100
 8017668:	4319      	orrs	r1, r3
 801766a:	0643      	lsls	r3, r0, #25
 801766c:	bf44      	itt	mi
 801766e:	f5a1 7300 	submi.w	r3, r1, #512	; 0x200
 8017672:	b219      	sxthmi	r1, r3
 8017674:	0100      	lsls	r0, r0, #4
 8017676:	79fb      	ldrb	r3, [r7, #7]
 8017678:	f400 7080 	and.w	r0, r0, #256	; 0x100
 801767c:	4303      	orrs	r3, r0
 801767e:	4413      	add	r3, r2
 8017680:	1a5b      	subs	r3, r3, r1
 8017682:	b21b      	sxth	r3, r3
 8017684:	429c      	cmp	r4, r3
 8017686:	bfb8      	it	lt
 8017688:	461c      	movlt	r4, r3
 801768a:	4633      	mov	r3, r6
 801768c:	462a      	mov	r2, r5
 801768e:	2100      	movs	r1, #0
 8017690:	e7dc      	b.n	801764c <_ZNK8touchgfx4Font16getMaxTextHeightEPKtz+0x44>
 8017692:	b2a0      	uxth	r0, r4
 8017694:	b01e      	add	sp, #120	; 0x78
 8017696:	e8bd 40f0 	ldmia.w	sp!, {r4, r5, r6, r7, lr}
 801769a:	b003      	add	sp, #12
 801769c:	4770      	bx	lr

0801769e <_ZNK8touchgfx4Font20getMinimumTextHeightEv>:
 801769e:	7a43      	ldrb	r3, [r0, #9]
 80176a0:	8880      	ldrh	r0, [r0, #4]
 80176a2:	4418      	add	r0, r3
 80176a4:	b280      	uxth	r0, r0
 80176a6:	4770      	bx	lr

080176a8 <_ZNK8touchgfx4Font13getFontHeightEv>:
 80176a8:	6803      	ldr	r3, [r0, #0]
 80176aa:	6b1b      	ldr	r3, [r3, #48]	; 0x30
 80176ac:	4718      	bx	r3

080176ae <_ZNK8touchgfx4Font16getNumberOfLinesEPKtz>:
 80176ae:	b40e      	push	{r1, r2, r3}
 80176b0:	b570      	push	{r4, r5, r6, lr}
 80176b2:	b09d      	sub	sp, #116	; 0x74
 80176b4:	ab21      	add	r3, sp, #132	; 0x84
 80176b6:	4604      	mov	r4, r0
 80176b8:	f853 5b04 	ldr.w	r5, [r3], #4
 80176bc:	9302      	str	r3, [sp, #8]
 80176be:	a803      	add	r0, sp, #12
 80176c0:	f000 fe56 	bl	8018370 <_ZN8touchgfx12TextProviderC1Ev>
 80176c4:	6823      	ldr	r3, [r4, #0]
 80176c6:	4620      	mov	r0, r4
 80176c8:	6cdb      	ldr	r3, [r3, #76]	; 0x4c
 80176ca:	4798      	blx	r3
 80176cc:	6823      	ldr	r3, [r4, #0]
 80176ce:	4606      	mov	r6, r0
 80176d0:	6d1b      	ldr	r3, [r3, #80]	; 0x50
 80176d2:	4620      	mov	r0, r4
 80176d4:	4798      	blx	r3
 80176d6:	4633      	mov	r3, r6
 80176d8:	9000      	str	r0, [sp, #0]
 80176da:	9a02      	ldr	r2, [sp, #8]
 80176dc:	4629      	mov	r1, r5
 80176de:	a803      	add	r0, sp, #12
 80176e0:	f000 fea1 	bl	8018426 <_ZN8touchgfx12TextProvider10initializeEPKtSt9__va_listS2_PKNS_24FontContextualFormsTableE>
 80176e4:	a803      	add	r0, sp, #12
 80176e6:	f001 fa6f 	bl	8018bc8 <_ZN8touchgfx12TextProvider11getNextCharEv>
 80176ea:	2401      	movs	r4, #1
 80176ec:	b2a3      	uxth	r3, r4
 80176ee:	b140      	cbz	r0, 8017702 <_ZNK8touchgfx4Font16getNumberOfLinesEPKtz+0x54>
 80176f0:	280a      	cmp	r0, #10
 80176f2:	bf08      	it	eq
 80176f4:	3301      	addeq	r3, #1
 80176f6:	a803      	add	r0, sp, #12
 80176f8:	bf08      	it	eq
 80176fa:	b21c      	sxtheq	r4, r3
 80176fc:	f001 fa64 	bl	8018bc8 <_ZN8touchgfx12TextProvider11getNextCharEv>
 8017700:	e7f4      	b.n	80176ec <_ZNK8touchgfx4Font16getNumberOfLinesEPKtz+0x3e>
 8017702:	4618      	mov	r0, r3
 8017704:	b01d      	add	sp, #116	; 0x74
 8017706:	e8bd 4070 	ldmia.w	sp!, {r4, r5, r6, lr}
 801770a:	b003      	add	sp, #12
 801770c:	4770      	bx	lr

0801770e <_ZNK8touchgfx4Font15getSpacingAboveEPKtz>:
 801770e:	b40e      	push	{r1, r2, r3}
 8017710:	b5f0      	push	{r4, r5, r6, r7, lr}
 8017712:	b09e      	sub	sp, #120	; 0x78
 8017714:	ab23      	add	r3, sp, #140	; 0x8c
 8017716:	4604      	mov	r4, r0
 8017718:	f853 5b04 	ldr.w	r5, [r3], #4
 801771c:	9303      	str	r3, [sp, #12]
 801771e:	a805      	add	r0, sp, #20
 8017720:	f000 fe26 	bl	8018370 <_ZN8touchgfx12TextProviderC1Ev>
 8017724:	6823      	ldr	r3, [r4, #0]
 8017726:	4620      	mov	r0, r4
 8017728:	6cdb      	ldr	r3, [r3, #76]	; 0x4c
 801772a:	4798      	blx	r3
 801772c:	6823      	ldr	r3, [r4, #0]
 801772e:	4606      	mov	r6, r0
 8017730:	6d1b      	ldr	r3, [r3, #80]	; 0x50
 8017732:	4620      	mov	r0, r4
 8017734:	4798      	blx	r3
 8017736:	4633      	mov	r3, r6
 8017738:	4629      	mov	r1, r5
 801773a:	9000      	str	r0, [sp, #0]
 801773c:	9a03      	ldr	r2, [sp, #12]
 801773e:	a805      	add	r0, sp, #20
 8017740:	ad1e      	add	r5, sp, #120	; 0x78
 8017742:	f000 fe70 	bl	8018426 <_ZN8touchgfx12TextProvider10initializeEPKtSt9__va_listS2_PKNS_24FontContextualFormsTableE>
 8017746:	2100      	movs	r1, #0
 8017748:	f845 1d68 	str.w	r1, [r5, #-104]!
 801774c:	4622      	mov	r2, r4
 801774e:	462b      	mov	r3, r5
 8017750:	a805      	add	r0, sp, #20
 8017752:	f001 f96b 	bl	8018a2c <_ZN8touchgfx12TextProvider15getNextLigatureEhPKNS_4FontERPKNS_9GlyphNodeE>
 8017756:	f647 76ff 	movw	r6, #32767	; 0x7fff
 801775a:	b1d8      	cbz	r0, 8017794 <_ZNK8touchgfx4Font15getSpacingAboveEPKtz+0x86>
 801775c:	280a      	cmp	r0, #10
 801775e:	d012      	beq.n	8017786 <_ZNK8touchgfx4Font15getSpacingAboveEPKtz+0x78>
 8017760:	9804      	ldr	r0, [sp, #16]
 8017762:	b180      	cbz	r0, 8017786 <_ZNK8touchgfx4Font15getSpacingAboveEPKtz+0x78>
 8017764:	7b47      	ldrb	r7, [r0, #13]
 8017766:	88e2      	ldrh	r2, [r4, #6]
 8017768:	00fb      	lsls	r3, r7, #3
 801776a:	f403 7180 	and.w	r1, r3, #256	; 0x100
 801776e:	7a03      	ldrb	r3, [r0, #8]
 8017770:	430b      	orrs	r3, r1
 8017772:	0679      	lsls	r1, r7, #25
 8017774:	bf44      	itt	mi
 8017776:	f5a3 7300 	submi.w	r3, r3, #512	; 0x200
 801777a:	b21b      	sxthmi	r3, r3
 801777c:	1ad3      	subs	r3, r2, r3
 801777e:	b21b      	sxth	r3, r3
 8017780:	429e      	cmp	r6, r3
 8017782:	bfa8      	it	ge
 8017784:	461e      	movge	r6, r3
 8017786:	462b      	mov	r3, r5
 8017788:	4622      	mov	r2, r4
 801778a:	2100      	movs	r1, #0
 801778c:	a805      	add	r0, sp, #20
 801778e:	f001 f94d 	bl	8018a2c <_ZN8touchgfx12TextProvider15getNextLigatureEhPKNS_4FontERPKNS_9GlyphNodeE>
 8017792:	e7e2      	b.n	801775a <_ZNK8touchgfx4Font15getSpacingAboveEPKtz+0x4c>
 8017794:	4630      	mov	r0, r6
 8017796:	b01e      	add	sp, #120	; 0x78
 8017798:	e8bd 40f0 	ldmia.w	sp!, {r4, r5, r6, r7, lr}
 801779c:	b003      	add	sp, #12
 801779e:	4770      	bx	lr

080177a0 <_ZNK8touchgfx8Drawable10invalidateEv>:
 80177a0:	b513      	push	{r0, r1, r4, lr}
 80177a2:	6803      	ldr	r3, [r0, #0]
 80177a4:	f9b0 1008 	ldrsh.w	r1, [r0, #8]
 80177a8:	f9b0 200a 	ldrsh.w	r2, [r0, #10]
 80177ac:	f8ad 1004 	strh.w	r1, [sp, #4]
 80177b0:	2400      	movs	r4, #0
 80177b2:	9400      	str	r4, [sp, #0]
 80177b4:	f8ad 2006 	strh.w	r2, [sp, #6]
 80177b8:	691b      	ldr	r3, [r3, #16]
 80177ba:	4669      	mov	r1, sp
 80177bc:	4798      	blx	r3
 80177be:	b002      	add	sp, #8
 80177c0:	bd10      	pop	{r4, pc}

080177c2 <_ZN8touchgfx8Drawable20getSolidRectAbsoluteEv>:
 80177c2:	b538      	push	{r3, r4, r5, lr}
 80177c4:	680b      	ldr	r3, [r1, #0]
 80177c6:	460c      	mov	r4, r1
 80177c8:	68db      	ldr	r3, [r3, #12]
 80177ca:	4605      	mov	r5, r0
 80177cc:	4798      	blx	r3
 80177ce:	6823      	ldr	r3, [r4, #0]
 80177d0:	4620      	mov	r0, r4
 80177d2:	6adb      	ldr	r3, [r3, #44]	; 0x2c
 80177d4:	4629      	mov	r1, r5
 80177d6:	4798      	blx	r3
 80177d8:	4628      	mov	r0, r5
 80177da:	bd38      	pop	{r3, r4, r5, pc}

080177dc <_ZNK8touchgfx8Drawable23translateRectToAbsoluteERNS_4RectE>:
 80177dc:	b410      	push	{r4}
 80177de:	880a      	ldrh	r2, [r1, #0]
 80177e0:	8884      	ldrh	r4, [r0, #4]
 80177e2:	4422      	add	r2, r4
 80177e4:	800a      	strh	r2, [r1, #0]
 80177e6:	88c4      	ldrh	r4, [r0, #6]
 80177e8:	884a      	ldrh	r2, [r1, #2]
 80177ea:	4422      	add	r2, r4
 80177ec:	804a      	strh	r2, [r1, #2]
 80177ee:	6940      	ldr	r0, [r0, #20]
 80177f0:	b120      	cbz	r0, 80177fc <_ZNK8touchgfx8Drawable23translateRectToAbsoluteERNS_4RectE+0x20>
 80177f2:	6803      	ldr	r3, [r0, #0]
 80177f4:	f85d 4b04 	ldr.w	r4, [sp], #4
 80177f8:	6adb      	ldr	r3, [r3, #44]	; 0x2c
 80177fa:	4718      	bx	r3
 80177fc:	f85d 4b04 	ldr.w	r4, [sp], #4
 8017800:	4770      	bx	lr

08017802 <_ZNK8touchgfx8Drawable14getVisibleRectERNS_4RectE>:
 8017802:	b570      	push	{r4, r5, r6, lr}
 8017804:	8882      	ldrh	r2, [r0, #4]
 8017806:	880b      	ldrh	r3, [r1, #0]
 8017808:	4413      	add	r3, r2
 801780a:	800b      	strh	r3, [r1, #0]
 801780c:	88c2      	ldrh	r2, [r0, #6]
 801780e:	884b      	ldrh	r3, [r1, #2]
 8017810:	460c      	mov	r4, r1
 8017812:	4413      	add	r3, r2
 8017814:	804b      	strh	r3, [r1, #2]
 8017816:	4605      	mov	r5, r0
 8017818:	1d01      	adds	r1, r0, #4
 801781a:	4620      	mov	r0, r4
 801781c:	f7f8 ff86 	bl	801072c <_ZN8touchgfx4RectaNERKS0_>
 8017820:	f9b4 3004 	ldrsh.w	r3, [r4, #4]
 8017824:	2b00      	cmp	r3, #0
 8017826:	dd0b      	ble.n	8017840 <_ZNK8touchgfx8Drawable14getVisibleRectERNS_4RectE+0x3e>
 8017828:	f9b4 3006 	ldrsh.w	r3, [r4, #6]
 801782c:	2b00      	cmp	r3, #0
 801782e:	dd07      	ble.n	8017840 <_ZNK8touchgfx8Drawable14getVisibleRectERNS_4RectE+0x3e>
 8017830:	6968      	ldr	r0, [r5, #20]
 8017832:	b128      	cbz	r0, 8017840 <_ZNK8touchgfx8Drawable14getVisibleRectERNS_4RectE+0x3e>
 8017834:	6803      	ldr	r3, [r0, #0]
 8017836:	4621      	mov	r1, r4
 8017838:	6a9b      	ldr	r3, [r3, #40]	; 0x28
 801783a:	e8bd 4070 	ldmia.w	sp!, {r4, r5, r6, lr}
 801783e:	4718      	bx	r3
 8017840:	bd70      	pop	{r4, r5, r6, pc}
	...

08017844 <_ZNK8touchgfx8Drawable14invalidateRectERNS_4RectE>:
 8017844:	b570      	push	{r4, r5, r6, lr}
 8017846:	8882      	ldrh	r2, [r0, #4]
 8017848:	880b      	ldrh	r3, [r1, #0]
 801784a:	4413      	add	r3, r2
 801784c:	800b      	strh	r3, [r1, #0]
 801784e:	88c2      	ldrh	r2, [r0, #6]
 8017850:	884b      	ldrh	r3, [r1, #2]
 8017852:	460c      	mov	r4, r1
 8017854:	4413      	add	r3, r2
 8017856:	804b      	strh	r3, [r1, #2]
 8017858:	4605      	mov	r5, r0
 801785a:	1d01      	adds	r1, r0, #4
 801785c:	4620      	mov	r0, r4
 801785e:	f7f8 ff65 	bl	801072c <_ZN8touchgfx4RectaNERKS0_>
 8017862:	f9b4 3004 	ldrsh.w	r3, [r4, #4]
 8017866:	2b00      	cmp	r3, #0
 8017868:	dd19      	ble.n	801789e <_ZNK8touchgfx8Drawable14invalidateRectERNS_4RectE+0x5a>
 801786a:	f9b4 3006 	ldrsh.w	r3, [r4, #6]
 801786e:	2b00      	cmp	r3, #0
 8017870:	dd15      	ble.n	801789e <_ZNK8touchgfx8Drawable14invalidateRectERNS_4RectE+0x5a>
 8017872:	6968      	ldr	r0, [r5, #20]
 8017874:	b128      	cbz	r0, 8017882 <_ZNK8touchgfx8Drawable14invalidateRectERNS_4RectE+0x3e>
 8017876:	6803      	ldr	r3, [r0, #0]
 8017878:	4621      	mov	r1, r4
 801787a:	691b      	ldr	r3, [r3, #16]
 801787c:	e8bd 4070 	ldmia.w	sp!, {r4, r5, r6, lr}
 8017880:	4718      	bx	r3
 8017882:	4b07      	ldr	r3, [pc, #28]	; (80178a0 <_ZNK8touchgfx8Drawable14invalidateRectERNS_4RectE+0x5c>)
 8017884:	681b      	ldr	r3, [r3, #0]
 8017886:	3304      	adds	r3, #4
 8017888:	429d      	cmp	r5, r3
 801788a:	d108      	bne.n	801789e <_ZNK8touchgfx8Drawable14invalidateRectERNS_4RectE+0x5a>
 801788c:	f7fe fea0 	bl	80165d0 <_ZN8touchgfx11Application11getInstanceEv>
 8017890:	6803      	ldr	r3, [r0, #0]
 8017892:	6821      	ldr	r1, [r4, #0]
 8017894:	6862      	ldr	r2, [r4, #4]
 8017896:	6c1b      	ldr	r3, [r3, #64]	; 0x40
 8017898:	e8bd 4070 	ldmia.w	sp!, {r4, r5, r6, lr}
 801789c:	4718      	bx	r3
 801789e:	bd70      	pop	{r4, r5, r6, pc}
 80178a0:	20013860 	.word	0x20013860

080178a4 <_ZN8touchgfx8Drawable12moveRelativeEss>:
 80178a4:	b570      	push	{r4, r5, r6, lr}
 80178a6:	4604      	mov	r4, r0
 80178a8:	4616      	mov	r6, r2
 80178aa:	460d      	mov	r5, r1
 80178ac:	b901      	cbnz	r1, 80178b0 <_ZN8touchgfx8Drawable12moveRelativeEss+0xc>
 80178ae:	b192      	cbz	r2, 80178d6 <_ZN8touchgfx8Drawable12moveRelativeEss+0x32>
 80178b0:	6823      	ldr	r3, [r4, #0]
 80178b2:	4620      	mov	r0, r4
 80178b4:	699b      	ldr	r3, [r3, #24]
 80178b6:	4798      	blx	r3
 80178b8:	88e2      	ldrh	r2, [r4, #6]
 80178ba:	88a1      	ldrh	r1, [r4, #4]
 80178bc:	4432      	add	r2, r6
 80178be:	4429      	add	r1, r5
 80178c0:	4620      	mov	r0, r4
 80178c2:	b212      	sxth	r2, r2
 80178c4:	b209      	sxth	r1, r1
 80178c6:	f7eb f82f 	bl	8002928 <_ZN8touchgfx8Drawable5setXYEss>
 80178ca:	6823      	ldr	r3, [r4, #0]
 80178cc:	4620      	mov	r0, r4
 80178ce:	699b      	ldr	r3, [r3, #24]
 80178d0:	e8bd 4070 	ldmia.w	sp!, {r4, r5, r6, lr}
 80178d4:	4718      	bx	r3
 80178d6:	bd70      	pop	{r4, r5, r6, pc}

080178d8 <_ZNK8touchgfx8Drawable15getAbsoluteRectEv>:
 80178d8:	b510      	push	{r4, lr}
 80178da:	4604      	mov	r4, r0
 80178dc:	4608      	mov	r0, r1
 80178de:	2300      	movs	r3, #0
 80178e0:	8023      	strh	r3, [r4, #0]
 80178e2:	8063      	strh	r3, [r4, #2]
 80178e4:	6803      	ldr	r3, [r0, #0]
 80178e6:	f9b0 200a 	ldrsh.w	r2, [r0, #10]
 80178ea:	f9b1 1008 	ldrsh.w	r1, [r1, #8]
 80178ee:	80a1      	strh	r1, [r4, #4]
 80178f0:	80e2      	strh	r2, [r4, #6]
 80178f2:	6adb      	ldr	r3, [r3, #44]	; 0x2c
 80178f4:	4621      	mov	r1, r4
 80178f6:	4798      	blx	r3
 80178f8:	4620      	mov	r0, r4
 80178fa:	bd10      	pop	{r4, pc}

080178fc <_ZN8touchgfx9ConstFontC1EPKNS_9GlyphNodeEttthhhhhhtt>:
 80178fc:	b530      	push	{r4, r5, lr}
 80178fe:	8083      	strh	r3, [r0, #4]
 8017900:	f8bd 300c 	ldrh.w	r3, [sp, #12]
 8017904:	80c3      	strh	r3, [r0, #6]
 8017906:	f89d 3010 	ldrb.w	r3, [sp, #16]
 801790a:	7203      	strb	r3, [r0, #8]
 801790c:	f89d 3014 	ldrb.w	r3, [sp, #20]
 8017910:	f89d 5018 	ldrb.w	r5, [sp, #24]
 8017914:	7243      	strb	r3, [r0, #9]
 8017916:	7a83      	ldrb	r3, [r0, #10]
 8017918:	6141      	str	r1, [r0, #20]
 801791a:	f365 0306 	bfi	r3, r5, #0, #7
 801791e:	f89d 501c 	ldrb.w	r5, [sp, #28]
 8017922:	8302      	strh	r2, [r0, #24]
 8017924:	f365 13c7 	bfi	r3, r5, #7, #1
 8017928:	7283      	strb	r3, [r0, #10]
 801792a:	f89d 3020 	ldrb.w	r3, [sp, #32]
 801792e:	72c3      	strb	r3, [r0, #11]
 8017930:	f89d 3024 	ldrb.w	r3, [sp, #36]	; 0x24
 8017934:	7303      	strb	r3, [r0, #12]
 8017936:	f8bd 3028 	ldrh.w	r3, [sp, #40]	; 0x28
 801793a:	81c3      	strh	r3, [r0, #14]
 801793c:	f8bd 302c 	ldrh.w	r3, [sp, #44]	; 0x2c
 8017940:	8203      	strh	r3, [r0, #16]
 8017942:	4b01      	ldr	r3, [pc, #4]	; (8017948 <_ZN8touchgfx9ConstFontC1EPKNS_9GlyphNodeEttthhhhhhtt+0x4c>)
 8017944:	6003      	str	r3, [r0, #0]
 8017946:	bd30      	pop	{r4, r5, pc}
 8017948:	0802f83c 	.word	0x0802f83c

0801794c <_ZNK8touchgfx9ConstFont4findEt>:
 801794c:	b5f0      	push	{r4, r5, r6, r7, lr}
 801794e:	6944      	ldr	r4, [r0, #20]
 8017950:	b3bc      	cbz	r4, 80179c2 <_ZNK8touchgfx9ConstFont4findEt+0x76>
 8017952:	88a3      	ldrh	r3, [r4, #4]
 8017954:	8b02      	ldrh	r2, [r0, #24]
 8017956:	1acb      	subs	r3, r1, r3
 8017958:	f102 32ff 	add.w	r2, r2, #4294967295
 801795c:	d431      	bmi.n	80179c2 <_ZNK8touchgfx9ConstFont4findEt+0x76>
 801795e:	4293      	cmp	r3, r2
 8017960:	dd0c      	ble.n	801797c <_ZNK8touchgfx9ConstFont4findEt+0x30>
 8017962:	230e      	movs	r3, #14
 8017964:	fb03 4302 	mla	r3, r3, r2, r4
 8017968:	889b      	ldrh	r3, [r3, #4]
 801796a:	1a5b      	subs	r3, r3, r1
 801796c:	1ad3      	subs	r3, r2, r3
 801796e:	429a      	cmp	r2, r3
 8017970:	db27      	blt.n	80179c2 <_ZNK8touchgfx9ConstFont4findEt+0x76>
 8017972:	2b00      	cmp	r3, #0
 8017974:	bfbc      	itt	lt
 8017976:	2302      	movlt	r3, #2
 8017978:	fb92 f3f3 	sdivlt	r3, r2, r3
 801797c:	2500      	movs	r5, #0
 801797e:	260e      	movs	r6, #14
 8017980:	4295      	cmp	r5, r2
 8017982:	dc1e      	bgt.n	80179c2 <_ZNK8touchgfx9ConstFont4findEt+0x76>
 8017984:	fb06 4003 	mla	r0, r6, r3, r4
 8017988:	8887      	ldrh	r7, [r0, #4]
 801798a:	42b9      	cmp	r1, r7
 801798c:	d01a      	beq.n	80179c4 <_ZNK8touchgfx9ConstFont4findEt+0x78>
 801798e:	d20d      	bcs.n	80179ac <_ZNK8touchgfx9ConstFont4findEt+0x60>
 8017990:	1e5a      	subs	r2, r3, #1
 8017992:	4295      	cmp	r5, r2
 8017994:	dc15      	bgt.n	80179c2 <_ZNK8touchgfx9ConstFont4findEt+0x76>
 8017996:	f830 3c0a 	ldrh.w	r3, [r0, #-10]
 801799a:	1a5b      	subs	r3, r3, r1
 801799c:	1ad3      	subs	r3, r2, r3
 801799e:	429a      	cmp	r2, r3
 80179a0:	db0f      	blt.n	80179c2 <_ZNK8touchgfx9ConstFont4findEt+0x76>
 80179a2:	429d      	cmp	r5, r3
 80179a4:	ddec      	ble.n	8017980 <_ZNK8touchgfx9ConstFont4findEt+0x34>
 80179a6:	1953      	adds	r3, r2, r5
 80179a8:	105b      	asrs	r3, r3, #1
 80179aa:	e7e9      	b.n	8017980 <_ZNK8touchgfx9ConstFont4findEt+0x34>
 80179ac:	1c5d      	adds	r5, r3, #1
 80179ae:	42aa      	cmp	r2, r5
 80179b0:	db07      	blt.n	80179c2 <_ZNK8touchgfx9ConstFont4findEt+0x76>
 80179b2:	8a43      	ldrh	r3, [r0, #18]
 80179b4:	1acb      	subs	r3, r1, r3
 80179b6:	442b      	add	r3, r5
 80179b8:	429d      	cmp	r5, r3
 80179ba:	dc02      	bgt.n	80179c2 <_ZNK8touchgfx9ConstFont4findEt+0x76>
 80179bc:	429a      	cmp	r2, r3
 80179be:	dadf      	bge.n	8017980 <_ZNK8touchgfx9ConstFont4findEt+0x34>
 80179c0:	e7f1      	b.n	80179a6 <_ZNK8touchgfx9ConstFont4findEt+0x5a>
 80179c2:	2000      	movs	r0, #0
 80179c4:	bdf0      	pop	{r4, r5, r6, r7, pc}

080179c6 <_ZNK8touchgfx9ConstFont8getGlyphEtRPKhRh>:
 80179c6:	b5f8      	push	{r3, r4, r5, r6, r7, lr}
 80179c8:	4604      	mov	r4, r0
 80179ca:	4617      	mov	r7, r2
 80179cc:	461e      	mov	r6, r3
 80179ce:	b911      	cbnz	r1, 80179d6 <_ZNK8touchgfx9ConstFont8getGlyphEtRPKhRh+0x10>
 80179d0:	2500      	movs	r5, #0
 80179d2:	4628      	mov	r0, r5
 80179d4:	bdf8      	pop	{r3, r4, r5, r6, r7, pc}
 80179d6:	290a      	cmp	r1, #10
 80179d8:	d0fa      	beq.n	80179d0 <_ZNK8touchgfx9ConstFont8getGlyphEtRPKhRh+0xa>
 80179da:	f64f 62ff 	movw	r2, #65279	; 0xfeff
 80179de:	4291      	cmp	r1, r2
 80179e0:	d0f6      	beq.n	80179d0 <_ZNK8touchgfx9ConstFont8getGlyphEtRPKhRh+0xa>
 80179e2:	f242 020b 	movw	r2, #8203	; 0x200b
 80179e6:	4291      	cmp	r1, r2
 80179e8:	d0f2      	beq.n	80179d0 <_ZNK8touchgfx9ConstFont8getGlyphEtRPKhRh+0xa>
 80179ea:	f7ff ffaf 	bl	801794c <_ZNK8touchgfx9ConstFont4findEt>
 80179ee:	4605      	mov	r5, r0
 80179f0:	b950      	cbnz	r0, 8017a08 <_ZNK8touchgfx9ConstFont8getGlyphEtRPKhRh+0x42>
 80179f2:	6823      	ldr	r3, [r4, #0]
 80179f4:	4620      	mov	r0, r4
 80179f6:	691b      	ldr	r3, [r3, #16]
 80179f8:	4798      	blx	r3
 80179fa:	4601      	mov	r1, r0
 80179fc:	4620      	mov	r0, r4
 80179fe:	f7ff ffa5 	bl	801794c <_ZNK8touchgfx9ConstFont4findEt>
 8017a02:	4605      	mov	r5, r0
 8017a04:	2800      	cmp	r0, #0
 8017a06:	d0e3      	beq.n	80179d0 <_ZNK8touchgfx9ConstFont8getGlyphEtRPKhRh+0xa>
 8017a08:	6823      	ldr	r3, [r4, #0]
 8017a0a:	4629      	mov	r1, r5
 8017a0c:	6d5b      	ldr	r3, [r3, #84]	; 0x54
 8017a0e:	4620      	mov	r0, r4
 8017a10:	4798      	blx	r3
 8017a12:	6038      	str	r0, [r7, #0]
 8017a14:	6823      	ldr	r3, [r4, #0]
 8017a16:	4620      	mov	r0, r4
 8017a18:	6bdb      	ldr	r3, [r3, #60]	; 0x3c
 8017a1a:	4798      	blx	r3
 8017a1c:	7030      	strb	r0, [r6, #0]
 8017a1e:	e7d8      	b.n	80179d2 <_ZNK8touchgfx9ConstFont8getGlyphEtRPKhRh+0xc>

08017a20 <_ZN8touchgfx34lookupNearestNeighborRenderVariantERKNS_6BitmapE>:
 8017a20:	b538      	push	{r3, r4, r5, lr}
 8017a22:	4605      	mov	r5, r0
 8017a24:	f002 fb94 	bl	801a150 <_ZNK8touchgfx6Bitmap9getFormatEv>
 8017a28:	4604      	mov	r4, r0
 8017a2a:	4628      	mov	r0, r5
 8017a2c:	f002 fad4 	bl	8019fd8 <_ZNK8touchgfx6Bitmap20hasTransparentPixelsEv>
 8017a30:	2800      	cmp	r0, #0
 8017a32:	bf14      	ite	ne
 8017a34:	2002      	movne	r0, #2
 8017a36:	2000      	moveq	r0, #0
 8017a38:	ea40 0084 	orr.w	r0, r0, r4, lsl #2
 8017a3c:	b280      	uxth	r0, r0
 8017a3e:	bd38      	pop	{r3, r4, r5, pc}

08017a40 <_ZN8touchgfx27lookupBilinearRenderVariantERKNS_6BitmapE>:
 8017a40:	b538      	push	{r3, r4, r5, lr}
 8017a42:	4605      	mov	r5, r0
 8017a44:	f002 fb84 	bl	801a150 <_ZNK8touchgfx6Bitmap9getFormatEv>
 8017a48:	4604      	mov	r4, r0
 8017a4a:	4628      	mov	r0, r5
 8017a4c:	f002 fac4 	bl	8019fd8 <_ZNK8touchgfx6Bitmap20hasTransparentPixelsEv>
 8017a50:	2800      	cmp	r0, #0
 8017a52:	bf14      	ite	ne
 8017a54:	2002      	movne	r0, #2
 8017a56:	2000      	moveq	r0, #0
 8017a58:	ea40 0084 	orr.w	r0, r0, r4, lsl #2
 8017a5c:	f040 0001 	orr.w	r0, r0, #1
 8017a60:	b280      	uxth	r0, r0
 8017a62:	bd38      	pop	{r3, r4, r5, pc}

08017a64 <_ZN8touchgfx4clzuEm>:
 8017a64:	4603      	mov	r3, r0
 8017a66:	b1c8      	cbz	r0, 8017a9c <_ZN8touchgfx4clzuEm+0x38>
 8017a68:	0c02      	lsrs	r2, r0, #16
 8017a6a:	0412      	lsls	r2, r2, #16
 8017a6c:	b9a2      	cbnz	r2, 8017a98 <_ZN8touchgfx4clzuEm+0x34>
 8017a6e:	0403      	lsls	r3, r0, #16
 8017a70:	2010      	movs	r0, #16
 8017a72:	f013 4f7f 	tst.w	r3, #4278190080	; 0xff000000
 8017a76:	bf04      	itt	eq
 8017a78:	021b      	lsleq	r3, r3, #8
 8017a7a:	3008      	addeq	r0, #8
 8017a7c:	f013 4f70 	tst.w	r3, #4026531840	; 0xf0000000
 8017a80:	bf04      	itt	eq
 8017a82:	011b      	lsleq	r3, r3, #4
 8017a84:	3004      	addeq	r0, #4
 8017a86:	f013 4f40 	tst.w	r3, #3221225472	; 0xc0000000
 8017a8a:	bf04      	itt	eq
 8017a8c:	009b      	lsleq	r3, r3, #2
 8017a8e:	3002      	addeq	r0, #2
 8017a90:	2b00      	cmp	r3, #0
 8017a92:	db04      	blt.n	8017a9e <_ZN8touchgfx4clzuEm+0x3a>
 8017a94:	3001      	adds	r0, #1
 8017a96:	4770      	bx	lr
 8017a98:	2000      	movs	r0, #0
 8017a9a:	e7ea      	b.n	8017a72 <_ZN8touchgfx4clzuEm+0xe>
 8017a9c:	2020      	movs	r0, #32
 8017a9e:	4770      	bx	lr

08017aa0 <_ZN8touchgfx7muldivuEmmmRm>:
 8017aa0:	e92d 47f3 	stmdb	sp!, {r0, r1, r4, r5, r6, r7, r8, r9, sl, lr}
 8017aa4:	460f      	mov	r7, r1
 8017aa6:	4615      	mov	r5, r2
 8017aa8:	461e      	mov	r6, r3
 8017aaa:	4601      	mov	r1, r0
 8017aac:	b100      	cbz	r0, 8017ab0 <_ZN8touchgfx7muldivuEmmmRm+0x10>
 8017aae:	b927      	cbnz	r7, 8017aba <_ZN8touchgfx7muldivuEmmmRm+0x1a>
 8017ab0:	2000      	movs	r0, #0
 8017ab2:	6030      	str	r0, [r6, #0]
 8017ab4:	b002      	add	sp, #8
 8017ab6:	e8bd 87f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, pc}
 8017aba:	f7ff ffd3 	bl	8017a64 <_ZN8touchgfx4clzuEm>
 8017abe:	b980      	cbnz	r0, 8017ae2 <_ZN8touchgfx7muldivuEmmmRm+0x42>
 8017ac0:	4638      	mov	r0, r7
 8017ac2:	f7ff ffcf 	bl	8017a64 <_ZN8touchgfx4clzuEm>
 8017ac6:	2800      	cmp	r0, #0
 8017ac8:	dd05      	ble.n	8017ad6 <_ZN8touchgfx7muldivuEmmmRm+0x36>
 8017aca:	4633      	mov	r3, r6
 8017acc:	462a      	mov	r2, r5
 8017ace:	4638      	mov	r0, r7
 8017ad0:	f7ff ffe6 	bl	8017aa0 <_ZN8touchgfx7muldivuEmmmRm>
 8017ad4:	e7ee      	b.n	8017ab4 <_ZN8touchgfx7muldivuEmmmRm+0x14>
 8017ad6:	f04f 33ff 	mov.w	r3, #4294967295
 8017ada:	6033      	str	r3, [r6, #0]
 8017adc:	f06f 4000 	mvn.w	r0, #2147483648	; 0x80000000
 8017ae0:	e7e8      	b.n	8017ab4 <_ZN8touchgfx7muldivuEmmmRm+0x14>
 8017ae2:	fa37 f800 	lsrs.w	r8, r7, r0
 8017ae6:	fb07 f301 	mul.w	r3, r7, r1
 8017aea:	d105      	bne.n	8017af8 <_ZN8touchgfx7muldivuEmmmRm+0x58>
 8017aec:	fbb3 f0f5 	udiv	r0, r3, r5
 8017af0:	fb05 3510 	mls	r5, r5, r0, r3
 8017af4:	6035      	str	r5, [r6, #0]
 8017af6:	e7dd      	b.n	8017ab4 <_ZN8touchgfx7muldivuEmmmRm+0x14>
 8017af8:	2301      	movs	r3, #1
 8017afa:	fa01 fa00 	lsl.w	sl, r1, r0
 8017afe:	fa03 f000 	lsl.w	r0, r3, r0
 8017b02:	3801      	subs	r0, #1
 8017b04:	462a      	mov	r2, r5
 8017b06:	4633      	mov	r3, r6
 8017b08:	4038      	ands	r0, r7
 8017b0a:	f7ff ffc9 	bl	8017aa0 <_ZN8touchgfx7muldivuEmmmRm>
 8017b0e:	fbba f9f5 	udiv	r9, sl, r5
 8017b12:	462a      	mov	r2, r5
 8017b14:	4607      	mov	r7, r0
 8017b16:	ab01      	add	r3, sp, #4
 8017b18:	fb05 a119 	mls	r1, r5, r9, sl
 8017b1c:	4640      	mov	r0, r8
 8017b1e:	f7ff ffbf 	bl	8017aa0 <_ZN8touchgfx7muldivuEmmmRm>
 8017b22:	9b01      	ldr	r3, [sp, #4]
 8017b24:	6832      	ldr	r2, [r6, #0]
 8017b26:	fb08 f409 	mul.w	r4, r8, r9
 8017b2a:	441a      	add	r2, r3
 8017b2c:	fbb2 f3f5 	udiv	r3, r2, r5
 8017b30:	441c      	add	r4, r3
 8017b32:	443c      	add	r4, r7
 8017b34:	4420      	add	r0, r4
 8017b36:	fb05 2513 	mls	r5, r5, r3, r2
 8017b3a:	e7db      	b.n	8017af4 <_ZN8touchgfx7muldivuEmmmRm+0x54>

08017b3c <_ZN8touchgfx6muldivElllRl>:
 8017b3c:	b573      	push	{r0, r1, r4, r5, r6, lr}
 8017b3e:	2800      	cmp	r0, #0
 8017b40:	bfba      	itte	lt
 8017b42:	4240      	neglt	r0, r0
 8017b44:	f04f 34ff 	movlt.w	r4, #4294967295
 8017b48:	2401      	movge	r4, #1
 8017b4a:	2900      	cmp	r1, #0
 8017b4c:	bfbc      	itt	lt
 8017b4e:	4249      	neglt	r1, r1
 8017b50:	4264      	neglt	r4, r4
 8017b52:	2a00      	cmp	r2, #0
 8017b54:	bfb6      	itet	lt
 8017b56:	4265      	neglt	r5, r4
 8017b58:	4625      	movge	r5, r4
 8017b5a:	4252      	neglt	r2, r2
 8017b5c:	4288      	cmp	r0, r1
 8017b5e:	461e      	mov	r6, r3
 8017b60:	bfc2      	ittt	gt
 8017b62:	4603      	movgt	r3, r0
 8017b64:	4608      	movgt	r0, r1
 8017b66:	4619      	movgt	r1, r3
 8017b68:	ab01      	add	r3, sp, #4
 8017b6a:	f7ff ff99 	bl	8017aa0 <_ZN8touchgfx7muldivuEmmmRm>
 8017b6e:	9b01      	ldr	r3, [sp, #4]
 8017b70:	4368      	muls	r0, r5
 8017b72:	435c      	muls	r4, r3
 8017b74:	6034      	str	r4, [r6, #0]
 8017b76:	b002      	add	sp, #8
 8017b78:	bd70      	pop	{r4, r5, r6, pc}

08017b7a <_ZN8touchgfx6muldivElll>:
 8017b7a:	b573      	push	{r0, r1, r4, r5, r6, lr}
 8017b7c:	4606      	mov	r6, r0
 8017b7e:	ab01      	add	r3, sp, #4
 8017b80:	460d      	mov	r5, r1
 8017b82:	4614      	mov	r4, r2
 8017b84:	f7ff ffda 	bl	8017b3c <_ZN8touchgfx6muldivElllRl>
 8017b88:	2e00      	cmp	r6, #0
 8017b8a:	db20      	blt.n	8017bce <_ZN8touchgfx6muldivElll+0x54>
 8017b8c:	bf14      	ite	ne
 8017b8e:	2301      	movne	r3, #1
 8017b90:	2300      	moveq	r3, #0
 8017b92:	2d00      	cmp	r5, #0
 8017b94:	db1e      	blt.n	8017bd4 <_ZN8touchgfx6muldivElll+0x5a>
 8017b96:	bf14      	ite	ne
 8017b98:	2201      	movne	r2, #1
 8017b9a:	2200      	moveq	r2, #0
 8017b9c:	2c00      	cmp	r4, #0
 8017b9e:	fb03 f202 	mul.w	r2, r3, r2
 8017ba2:	db1a      	blt.n	8017bda <_ZN8touchgfx6muldivElll+0x60>
 8017ba4:	bf14      	ite	ne
 8017ba6:	2301      	movne	r3, #1
 8017ba8:	2300      	moveq	r3, #0
 8017baa:	4353      	muls	r3, r2
 8017bac:	2b01      	cmp	r3, #1
 8017bae:	d117      	bne.n	8017be0 <_ZN8touchgfx6muldivElll+0x66>
 8017bb0:	9b01      	ldr	r3, [sp, #4]
 8017bb2:	2c00      	cmp	r4, #0
 8017bb4:	bfb8      	it	lt
 8017bb6:	4264      	neglt	r4, r4
 8017bb8:	2b00      	cmp	r3, #0
 8017bba:	f104 0401 	add.w	r4, r4, #1
 8017bbe:	bfb8      	it	lt
 8017bc0:	425b      	neglt	r3, r3
 8017bc2:	ebb3 0f64 	cmp.w	r3, r4, asr #1
 8017bc6:	db00      	blt.n	8017bca <_ZN8touchgfx6muldivElll+0x50>
 8017bc8:	3001      	adds	r0, #1
 8017bca:	b002      	add	sp, #8
 8017bcc:	bd70      	pop	{r4, r5, r6, pc}
 8017bce:	f04f 33ff 	mov.w	r3, #4294967295
 8017bd2:	e7de      	b.n	8017b92 <_ZN8touchgfx6muldivElll+0x18>
 8017bd4:	f04f 32ff 	mov.w	r2, #4294967295
 8017bd8:	e7e0      	b.n	8017b9c <_ZN8touchgfx6muldivElll+0x22>
 8017bda:	f04f 33ff 	mov.w	r3, #4294967295
 8017bde:	e7e4      	b.n	8017baa <_ZN8touchgfx6muldivElll+0x30>
 8017be0:	3301      	adds	r3, #1
 8017be2:	d1f2      	bne.n	8017bca <_ZN8touchgfx6muldivElll+0x50>
 8017be4:	9b01      	ldr	r3, [sp, #4]
 8017be6:	2c00      	cmp	r4, #0
 8017be8:	bfb8      	it	lt
 8017bea:	4264      	neglt	r4, r4
 8017bec:	2b00      	cmp	r3, #0
 8017bee:	bfb8      	it	lt
 8017bf0:	425b      	neglt	r3, r3
 8017bf2:	ebb3 0f64 	cmp.w	r3, r4, asr #1
 8017bf6:	bfc8      	it	gt
 8017bf8:	f100 30ff 	addgt.w	r0, r0, #4294967295
 8017bfc:	e7e5      	b.n	8017bca <_ZN8touchgfx6muldivElll+0x50>

08017bfe <_ZNK8touchgfx10ClickEvent12getEventTypeEv>:
 8017bfe:	2000      	movs	r0, #0
 8017c00:	4770      	bx	lr

08017c02 <_ZNK8touchgfx9DragEvent12getEventTypeEv>:
 8017c02:	2001      	movs	r0, #1
 8017c04:	4770      	bx	lr

08017c06 <_ZNK8touchgfx12GestureEvent12getEventTypeEv>:
 8017c06:	2002      	movs	r0, #2
 8017c08:	4770      	bx	lr

08017c0a <_ZN8touchgfx6ScreenD1Ev>:
 8017c0a:	4770      	bx	lr

08017c0c <_ZN8touchgfx12GestureEventD1Ev>:
 8017c0c:	4770      	bx	lr

08017c0e <_ZN8touchgfx9DragEventD1Ev>:
 8017c0e:	4770      	bx	lr

08017c10 <_ZN8touchgfx10ClickEventD1Ev>:
 8017c10:	4770      	bx	lr

08017c12 <_ZN8touchgfx10ClickEventD0Ev>:
 8017c12:	b510      	push	{r4, lr}
 8017c14:	210c      	movs	r1, #12
 8017c16:	4604      	mov	r4, r0
 8017c18:	f012 fd8f 	bl	802a73a <_ZdlPvj>
 8017c1c:	4620      	mov	r0, r4
 8017c1e:	bd10      	pop	{r4, pc}

08017c20 <_ZN8touchgfx9DragEventD0Ev>:
 8017c20:	b510      	push	{r4, lr}
 8017c22:	2110      	movs	r1, #16
 8017c24:	4604      	mov	r4, r0
 8017c26:	f012 fd88 	bl	802a73a <_ZdlPvj>
 8017c2a:	4620      	mov	r0, r4
 8017c2c:	bd10      	pop	{r4, pc}

08017c2e <_ZN8touchgfx12GestureEventD0Ev>:
 8017c2e:	b510      	push	{r4, lr}
 8017c30:	210c      	movs	r1, #12
 8017c32:	4604      	mov	r4, r0
 8017c34:	f012 fd81 	bl	802a73a <_ZdlPvj>
 8017c38:	4620      	mov	r0, r4
 8017c3a:	bd10      	pop	{r4, pc}

08017c3c <_ZN8touchgfx6ScreenD0Ev>:
 8017c3c:	b510      	push	{r4, lr}
 8017c3e:	213c      	movs	r1, #60	; 0x3c
 8017c40:	4604      	mov	r4, r0
 8017c42:	f012 fd7a 	bl	802a73a <_ZdlPvj>
 8017c46:	4620      	mov	r0, r4
 8017c48:	bd10      	pop	{r4, pc}
	...

08017c4c <_ZN8touchgfx6Screen18handleGestureEventERKNS_12GestureEventE>:
 8017c4c:	b530      	push	{r4, r5, lr}
 8017c4e:	460d      	mov	r5, r1
 8017c50:	6b01      	ldr	r1, [r0, #48]	; 0x30
 8017c52:	b087      	sub	sp, #28
 8017c54:	4604      	mov	r4, r0
 8017c56:	b301      	cbz	r1, 8017c9a <_ZN8touchgfx6Screen18handleGestureEventERKNS_12GestureEventE+0x4e>
 8017c58:	a801      	add	r0, sp, #4
 8017c5a:	f7ff fe3d 	bl	80178d8 <_ZNK8touchgfx8Drawable15getAbsoluteRectEv>
 8017c5e:	892a      	ldrh	r2, [r5, #8]
 8017c60:	f8bd 3004 	ldrh.w	r3, [sp, #4]
 8017c64:	7928      	ldrb	r0, [r5, #4]
 8017c66:	f9b5 1006 	ldrsh.w	r1, [r5, #6]
 8017c6a:	f88d 0010 	strb.w	r0, [sp, #16]
 8017c6e:	1ad2      	subs	r2, r2, r3
 8017c70:	8ea3      	ldrh	r3, [r4, #52]	; 0x34
 8017c72:	6b20      	ldr	r0, [r4, #48]	; 0x30
 8017c74:	f8ad 1012 	strh.w	r1, [sp, #18]
 8017c78:	441a      	add	r2, r3
 8017c7a:	896b      	ldrh	r3, [r5, #10]
 8017c7c:	f8bd 5006 	ldrh.w	r5, [sp, #6]
 8017c80:	f8ad 2014 	strh.w	r2, [sp, #20]
 8017c84:	1b5b      	subs	r3, r3, r5
 8017c86:	8ee5      	ldrh	r5, [r4, #54]	; 0x36
 8017c88:	442b      	add	r3, r5
 8017c8a:	4d05      	ldr	r5, [pc, #20]	; (8017ca0 <_ZN8touchgfx6Screen18handleGestureEventERKNS_12GestureEventE+0x54>)
 8017c8c:	9503      	str	r5, [sp, #12]
 8017c8e:	f8ad 3016 	strh.w	r3, [sp, #22]
 8017c92:	6803      	ldr	r3, [r0, #0]
 8017c94:	a903      	add	r1, sp, #12
 8017c96:	6c9b      	ldr	r3, [r3, #72]	; 0x48
 8017c98:	4798      	blx	r3
 8017c9a:	b007      	add	sp, #28
 8017c9c:	bd30      	pop	{r4, r5, pc}
 8017c9e:	bf00      	nop
 8017ca0:	0802f8c4 	.word	0x0802f8c4

08017ca4 <_ZN8touchgfx6Screen16handleClickEventERKNS_10ClickEventE>:
 8017ca4:	e92d 41f0 	stmdb	sp!, {r4, r5, r6, r7, r8, lr}
 8017ca8:	6b03      	ldr	r3, [r0, #48]	; 0x30
 8017caa:	b08a      	sub	sp, #40	; 0x28
 8017cac:	4604      	mov	r4, r0
 8017cae:	460d      	mov	r5, r1
 8017cb0:	b113      	cbz	r3, 8017cb8 <_ZN8touchgfx6Screen16handleClickEventERKNS_10ClickEventE+0x14>
 8017cb2:	790b      	ldrb	r3, [r1, #4]
 8017cb4:	2b00      	cmp	r3, #0
 8017cb6:	d044      	beq.n	8017d42 <_ZN8touchgfx6Screen16handleClickEventERKNS_10ClickEventE+0x9e>
 8017cb8:	f104 0804 	add.w	r8, r4, #4
 8017cbc:	4641      	mov	r1, r8
 8017cbe:	a803      	add	r0, sp, #12
 8017cc0:	f7ff fe0a 	bl	80178d8 <_ZNK8touchgfx8Drawable15getAbsoluteRectEv>
 8017cc4:	792b      	ldrb	r3, [r5, #4]
 8017cc6:	f9bd 700c 	ldrsh.w	r7, [sp, #12]
 8017cca:	f9bd 600e 	ldrsh.w	r6, [sp, #14]
 8017cce:	b983      	cbnz	r3, 8017cf2 <_ZN8touchgfx6Screen16handleClickEventERKNS_10ClickEventE+0x4e>
 8017cd0:	892a      	ldrh	r2, [r5, #8]
 8017cd2:	88e9      	ldrh	r1, [r5, #6]
 8017cd4:	f104 0336 	add.w	r3, r4, #54	; 0x36
 8017cd8:	1b92      	subs	r2, r2, r6
 8017cda:	1bc9      	subs	r1, r1, r7
 8017cdc:	9301      	str	r3, [sp, #4]
 8017cde:	f104 0334 	add.w	r3, r4, #52	; 0x34
 8017ce2:	9300      	str	r3, [sp, #0]
 8017ce4:	b212      	sxth	r2, r2
 8017ce6:	f104 0330 	add.w	r3, r4, #48	; 0x30
 8017cea:	b209      	sxth	r1, r1
 8017cec:	4640      	mov	r0, r8
 8017cee:	f7f8 fc39 	bl	8010564 <_ZN8touchgfx9Container16getLastChildNearEssPPNS_8DrawableEPsS4_>
 8017cf2:	6b21      	ldr	r1, [r4, #48]	; 0x30
 8017cf4:	b329      	cbz	r1, 8017d42 <_ZN8touchgfx6Screen16handleClickEventERKNS_10ClickEventE+0x9e>
 8017cf6:	a805      	add	r0, sp, #20
 8017cf8:	f7ff fdee 	bl	80178d8 <_ZNK8touchgfx8Drawable15getAbsoluteRectEv>
 8017cfc:	f8bd 2014 	ldrh.w	r2, [sp, #20]
 8017d00:	792b      	ldrb	r3, [r5, #4]
 8017d02:	6b20      	ldr	r0, [r4, #48]	; 0x30
 8017d04:	f88d 3020 	strb.w	r3, [sp, #32]
 8017d08:	1abf      	subs	r7, r7, r2
 8017d0a:	88ea      	ldrh	r2, [r5, #6]
 8017d0c:	4417      	add	r7, r2
 8017d0e:	8ea2      	ldrh	r2, [r4, #52]	; 0x34
 8017d10:	4417      	add	r7, r2
 8017d12:	f8bd 2016 	ldrh.w	r2, [sp, #22]
 8017d16:	f8ad 7022 	strh.w	r7, [sp, #34]	; 0x22
 8017d1a:	1ab6      	subs	r6, r6, r2
 8017d1c:	892a      	ldrh	r2, [r5, #8]
 8017d1e:	4416      	add	r6, r2
 8017d20:	8ee2      	ldrh	r2, [r4, #54]	; 0x36
 8017d22:	4416      	add	r6, r2
 8017d24:	f8ad 6024 	strh.w	r6, [sp, #36]	; 0x24
 8017d28:	4a07      	ldr	r2, [pc, #28]	; (8017d48 <_ZN8touchgfx6Screen16handleClickEventERKNS_10ClickEventE+0xa4>)
 8017d2a:	9207      	str	r2, [sp, #28]
 8017d2c:	2600      	movs	r6, #0
 8017d2e:	f8ad 6026 	strh.w	r6, [sp, #38]	; 0x26
 8017d32:	6803      	ldr	r3, [r0, #0]
 8017d34:	a907      	add	r1, sp, #28
 8017d36:	6c5b      	ldr	r3, [r3, #68]	; 0x44
 8017d38:	4798      	blx	r3
 8017d3a:	792b      	ldrb	r3, [r5, #4]
 8017d3c:	b10b      	cbz	r3, 8017d42 <_ZN8touchgfx6Screen16handleClickEventERKNS_10ClickEventE+0x9e>
 8017d3e:	e9c4 660c 	strd	r6, r6, [r4, #48]	; 0x30
 8017d42:	b00a      	add	sp, #40	; 0x28
 8017d44:	e8bd 81f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, pc}
 8017d48:	0802f89c 	.word	0x0802f89c

08017d4c <_ZN8touchgfx6Screen15handleDragEventERKNS_9DragEventE>:
 8017d4c:	e92d 41f0 	stmdb	sp!, {r4, r5, r6, r7, r8, lr}
 8017d50:	460c      	mov	r4, r1
 8017d52:	6b01      	ldr	r1, [r0, #48]	; 0x30
 8017d54:	b088      	sub	sp, #32
 8017d56:	4605      	mov	r5, r0
 8017d58:	2900      	cmp	r1, #0
 8017d5a:	d06d      	beq.n	8017e38 <_ZN8touchgfx6Screen15handleDragEventERKNS_9DragEventE+0xec>
 8017d5c:	4668      	mov	r0, sp
 8017d5e:	f7ff fdbb 	bl	80178d8 <_ZNK8touchgfx8Drawable15getAbsoluteRectEv>
 8017d62:	8ea9      	ldrh	r1, [r5, #52]	; 0x34
 8017d64:	88e3      	ldrh	r3, [r4, #6]
 8017d66:	f9bd 8000 	ldrsh.w	r8, [sp]
 8017d6a:	f9bd 7002 	ldrsh.w	r7, [sp, #2]
 8017d6e:	440b      	add	r3, r1
 8017d70:	b21b      	sxth	r3, r3
 8017d72:	4543      	cmp	r3, r8
 8017d74:	db31      	blt.n	8017dda <_ZN8touchgfx6Screen15handleDragEventERKNS_9DragEventE+0x8e>
 8017d76:	f8bd c004 	ldrh.w	ip, [sp, #4]
 8017d7a:	44c4      	add	ip, r8
 8017d7c:	fa0f fc8c 	sxth.w	ip, ip
 8017d80:	4563      	cmp	r3, ip
 8017d82:	da2a      	bge.n	8017dda <_ZN8touchgfx6Screen15handleDragEventERKNS_9DragEventE+0x8e>
 8017d84:	8eea      	ldrh	r2, [r5, #54]	; 0x36
 8017d86:	8926      	ldrh	r6, [r4, #8]
 8017d88:	4416      	add	r6, r2
 8017d8a:	b236      	sxth	r6, r6
 8017d8c:	42be      	cmp	r6, r7
 8017d8e:	db24      	blt.n	8017dda <_ZN8touchgfx6Screen15handleDragEventERKNS_9DragEventE+0x8e>
 8017d90:	f8bd 0006 	ldrh.w	r0, [sp, #6]
 8017d94:	4438      	add	r0, r7
 8017d96:	b200      	sxth	r0, r0
 8017d98:	4286      	cmp	r6, r0
 8017d9a:	da1e      	bge.n	8017dda <_ZN8touchgfx6Screen15handleDragEventERKNS_9DragEventE+0x8e>
 8017d9c:	8963      	ldrh	r3, [r4, #10]
 8017d9e:	4419      	add	r1, r3
 8017da0:	b209      	sxth	r1, r1
 8017da2:	4541      	cmp	r1, r8
 8017da4:	db08      	blt.n	8017db8 <_ZN8touchgfx6Screen15handleDragEventERKNS_9DragEventE+0x6c>
 8017da6:	4561      	cmp	r1, ip
 8017da8:	da06      	bge.n	8017db8 <_ZN8touchgfx6Screen15handleDragEventERKNS_9DragEventE+0x6c>
 8017daa:	89a3      	ldrh	r3, [r4, #12]
 8017dac:	441a      	add	r2, r3
 8017dae:	b212      	sxth	r2, r2
 8017db0:	42ba      	cmp	r2, r7
 8017db2:	db01      	blt.n	8017db8 <_ZN8touchgfx6Screen15handleDragEventERKNS_9DragEventE+0x6c>
 8017db4:	4282      	cmp	r2, r0
 8017db6:	db10      	blt.n	8017dda <_ZN8touchgfx6Screen15handleDragEventERKNS_9DragEventE+0x8e>
 8017db8:	4b21      	ldr	r3, [pc, #132]	; (8017e40 <_ZN8touchgfx6Screen15handleDragEventERKNS_9DragEventE+0xf4>)
 8017dba:	9304      	str	r3, [sp, #16]
 8017dbc:	2302      	movs	r3, #2
 8017dbe:	f88d 3014 	strb.w	r3, [sp, #20]
 8017dc2:	6b28      	ldr	r0, [r5, #48]	; 0x30
 8017dc4:	2300      	movs	r3, #0
 8017dc6:	f8ad 3016 	strh.w	r3, [sp, #22]
 8017dca:	f8ad 3018 	strh.w	r3, [sp, #24]
 8017dce:	f8ad 301a 	strh.w	r3, [sp, #26]
 8017dd2:	6803      	ldr	r3, [r0, #0]
 8017dd4:	a904      	add	r1, sp, #16
 8017dd6:	6c5b      	ldr	r3, [r3, #68]	; 0x44
 8017dd8:	4798      	blx	r3
 8017dda:	1d29      	adds	r1, r5, #4
 8017ddc:	a802      	add	r0, sp, #8
 8017dde:	f7ff fd7b 	bl	80178d8 <_ZNK8touchgfx8Drawable15getAbsoluteRectEv>
 8017de2:	f8bd 3008 	ldrh.w	r3, [sp, #8]
 8017de6:	88e0      	ldrh	r0, [r4, #6]
 8017de8:	7921      	ldrb	r1, [r4, #4]
 8017dea:	f8b5 c034 	ldrh.w	ip, [r5, #52]	; 0x34
 8017dee:	8922      	ldrh	r2, [r4, #8]
 8017df0:	8eee      	ldrh	r6, [r5, #54]	; 0x36
 8017df2:	f88d 1014 	strb.w	r1, [sp, #20]
 8017df6:	eba3 0808 	sub.w	r8, r3, r8
 8017dfa:	f8bd 300a 	ldrh.w	r3, [sp, #10]
 8017dfe:	1bdf      	subs	r7, r3, r7
 8017e00:	b2bb      	uxth	r3, r7
 8017e02:	fa1f f888 	uxth.w	r8, r8
 8017e06:	8967      	ldrh	r7, [r4, #10]
 8017e08:	89a4      	ldrh	r4, [r4, #12]
 8017e0a:	4440      	add	r0, r8
 8017e0c:	4460      	add	r0, ip
 8017e0e:	441a      	add	r2, r3
 8017e10:	44b8      	add	r8, r7
 8017e12:	4423      	add	r3, r4
 8017e14:	f8ad 0016 	strh.w	r0, [sp, #22]
 8017e18:	4433      	add	r3, r6
 8017e1a:	4432      	add	r2, r6
 8017e1c:	44e0      	add	r8, ip
 8017e1e:	4c09      	ldr	r4, [pc, #36]	; (8017e44 <_ZN8touchgfx6Screen15handleDragEventERKNS_9DragEventE+0xf8>)
 8017e20:	6b28      	ldr	r0, [r5, #48]	; 0x30
 8017e22:	9404      	str	r4, [sp, #16]
 8017e24:	f8ad 2018 	strh.w	r2, [sp, #24]
 8017e28:	f8ad 801a 	strh.w	r8, [sp, #26]
 8017e2c:	f8ad 301c 	strh.w	r3, [sp, #28]
 8017e30:	6803      	ldr	r3, [r0, #0]
 8017e32:	a904      	add	r1, sp, #16
 8017e34:	6cdb      	ldr	r3, [r3, #76]	; 0x4c
 8017e36:	4798      	blx	r3
 8017e38:	b008      	add	sp, #32
 8017e3a:	e8bd 81f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, pc}
 8017e3e:	bf00      	nop
 8017e40:	0802f89c 	.word	0x0802f89c
 8017e44:	0802f8b0 	.word	0x0802f8b0

08017e48 <_ZN8touchgfx8Drawable20getCachedVisibleRectEv>:
 8017e48:	b537      	push	{r0, r1, r2, r4, r5, lr}
 8017e4a:	4604      	mov	r4, r0
 8017e4c:	f934 2f0c 	ldrsh.w	r2, [r4, #12]!
 8017e50:	3201      	adds	r2, #1
 8017e52:	d112      	bne.n	8017e7a <_ZN8touchgfx8Drawable20getCachedVisibleRectEv+0x32>
 8017e54:	6803      	ldr	r3, [r0, #0]
 8017e56:	f9b0 1008 	ldrsh.w	r1, [r0, #8]
 8017e5a:	f9b0 200a 	ldrsh.w	r2, [r0, #10]
 8017e5e:	f8ad 1004 	strh.w	r1, [sp, #4]
 8017e62:	2500      	movs	r5, #0
 8017e64:	9500      	str	r5, [sp, #0]
 8017e66:	466d      	mov	r5, sp
 8017e68:	4629      	mov	r1, r5
 8017e6a:	f8ad 2006 	strh.w	r2, [sp, #6]
 8017e6e:	6a9b      	ldr	r3, [r3, #40]	; 0x28
 8017e70:	4798      	blx	r3
 8017e72:	e895 0003 	ldmia.w	r5, {r0, r1}
 8017e76:	e884 0003 	stmia.w	r4, {r0, r1}
 8017e7a:	4620      	mov	r0, r4
 8017e7c:	b003      	add	sp, #12
 8017e7e:	bd30      	pop	{r4, r5, pc}

08017e80 <_ZN8touchgfx8Drawable13getCachedAbsXEv>:
 8017e80:	b513      	push	{r0, r1, r4, lr}
 8017e82:	f9b0 3020 	ldrsh.w	r3, [r0, #32]
 8017e86:	3301      	adds	r3, #1
 8017e88:	4604      	mov	r4, r0
 8017e8a:	d109      	bne.n	8017ea0 <_ZN8touchgfx8Drawable13getCachedAbsXEv+0x20>
 8017e8c:	4601      	mov	r1, r0
 8017e8e:	4668      	mov	r0, sp
 8017e90:	f7ff fd22 	bl	80178d8 <_ZNK8touchgfx8Drawable15getAbsoluteRectEv>
 8017e94:	f8bd 3000 	ldrh.w	r3, [sp]
 8017e98:	8423      	strh	r3, [r4, #32]
 8017e9a:	f8bd 3002 	ldrh.w	r3, [sp, #2]
 8017e9e:	8463      	strh	r3, [r4, #34]	; 0x22
 8017ea0:	f9b4 0020 	ldrsh.w	r0, [r4, #32]
 8017ea4:	b002      	add	sp, #8
 8017ea6:	bd10      	pop	{r4, pc}

08017ea8 <_ZN8touchgfx8Drawable13getCachedAbsYEv>:
 8017ea8:	b513      	push	{r0, r1, r4, lr}
 8017eaa:	f9b0 3022 	ldrsh.w	r3, [r0, #34]	; 0x22
 8017eae:	3301      	adds	r3, #1
 8017eb0:	4604      	mov	r4, r0
 8017eb2:	d109      	bne.n	8017ec8 <_ZN8touchgfx8Drawable13getCachedAbsYEv+0x20>
 8017eb4:	4601      	mov	r1, r0
 8017eb6:	4668      	mov	r0, sp
 8017eb8:	f7ff fd0e 	bl	80178d8 <_ZNK8touchgfx8Drawable15getAbsoluteRectEv>
 8017ebc:	f8bd 3000 	ldrh.w	r3, [sp]
 8017ec0:	8423      	strh	r3, [r4, #32]
 8017ec2:	f8bd 3002 	ldrh.w	r3, [sp, #2]
 8017ec6:	8463      	strh	r3, [r4, #34]	; 0x22
 8017ec8:	f9b4 0022 	ldrsh.w	r0, [r4, #34]	; 0x22
 8017ecc:	b002      	add	sp, #8
 8017ece:	bd10      	pop	{r4, pc}

08017ed0 <_ZN8touchgfx6ScreenC1Ev>:
 8017ed0:	b570      	push	{r4, r5, r6, lr}
 8017ed2:	4605      	mov	r5, r0
 8017ed4:	4b16      	ldr	r3, [pc, #88]	; (8017f30 <_ZN8touchgfx6ScreenC1Ev+0x60>)
 8017ed6:	f845 3b04 	str.w	r3, [r5], #4
 8017eda:	2300      	movs	r3, #0
 8017edc:	8103      	strh	r3, [r0, #8]
 8017ede:	8143      	strh	r3, [r0, #10]
 8017ee0:	8183      	strh	r3, [r0, #12]
 8017ee2:	81c3      	strh	r3, [r0, #14]
 8017ee4:	8203      	strh	r3, [r0, #16]
 8017ee6:	8243      	strh	r3, [r0, #18]
 8017ee8:	8283      	strh	r3, [r0, #20]
 8017eea:	82c3      	strh	r3, [r0, #22]
 8017eec:	e9c0 3306 	strd	r3, r3, [r0, #24]
 8017ef0:	6203      	str	r3, [r0, #32]
 8017ef2:	8483      	strh	r3, [r0, #36]	; 0x24
 8017ef4:	84c3      	strh	r3, [r0, #38]	; 0x26
 8017ef6:	f880 3028 	strb.w	r3, [r0, #40]	; 0x28
 8017efa:	4a0e      	ldr	r2, [pc, #56]	; (8017f34 <_ZN8touchgfx6ScreenC1Ev+0x64>)
 8017efc:	6343      	str	r3, [r0, #52]	; 0x34
 8017efe:	e9c0 330b 	strd	r3, r3, [r0, #44]	; 0x2c
 8017f02:	4b0d      	ldr	r3, [pc, #52]	; (8017f38 <_ZN8touchgfx6ScreenC1Ev+0x68>)
 8017f04:	6042      	str	r2, [r0, #4]
 8017f06:	f9b3 6000 	ldrsh.w	r6, [r3]
 8017f0a:	6b93      	ldr	r3, [r2, #56]	; 0x38
 8017f0c:	4a0b      	ldr	r2, [pc, #44]	; (8017f3c <_ZN8touchgfx6ScreenC1Ev+0x6c>)
 8017f0e:	4604      	mov	r4, r0
 8017f10:	2101      	movs	r1, #1
 8017f12:	f880 1029 	strb.w	r1, [r0, #41]	; 0x29
 8017f16:	f880 1038 	strb.w	r1, [r0, #56]	; 0x38
 8017f1a:	f9b2 1000 	ldrsh.w	r1, [r2]
 8017f1e:	4628      	mov	r0, r5
 8017f20:	4798      	blx	r3
 8017f22:	6863      	ldr	r3, [r4, #4]
 8017f24:	4628      	mov	r0, r5
 8017f26:	6bdb      	ldr	r3, [r3, #60]	; 0x3c
 8017f28:	4631      	mov	r1, r6
 8017f2a:	4798      	blx	r3
 8017f2c:	4620      	mov	r0, r4
 8017f2e:	bd70      	pop	{r4, r5, r6, pc}
 8017f30:	0802f8d8 	.word	0x0802f8d8
 8017f34:	0802ef5c 	.word	0x0802ef5c
 8017f38:	20013812 	.word	0x20013812
 8017f3c:	20013810 	.word	0x20013810

08017f40 <_ZN8touchgfx6Screen4drawEv>:
 8017f40:	b507      	push	{r0, r1, r2, lr}
 8017f42:	4b09      	ldr	r3, [pc, #36]	; (8017f68 <_ZN8touchgfx6Screen4drawEv+0x28>)
 8017f44:	f9b3 2000 	ldrsh.w	r2, [r3]
 8017f48:	4b08      	ldr	r3, [pc, #32]	; (8017f6c <_ZN8touchgfx6Screen4drawEv+0x2c>)
 8017f4a:	f8ad 2004 	strh.w	r2, [sp, #4]
 8017f4e:	f9b3 3000 	ldrsh.w	r3, [r3]
 8017f52:	f8ad 3006 	strh.w	r3, [sp, #6]
 8017f56:	6803      	ldr	r3, [r0, #0]
 8017f58:	2100      	movs	r1, #0
 8017f5a:	9100      	str	r1, [sp, #0]
 8017f5c:	689b      	ldr	r3, [r3, #8]
 8017f5e:	4669      	mov	r1, sp
 8017f60:	4798      	blx	r3
 8017f62:	b003      	add	sp, #12
 8017f64:	f85d fb04 	ldr.w	pc, [sp], #4
 8017f68:	20013810 	.word	0x20013810
 8017f6c:	20013812 	.word	0x20013812

08017f70 <_ZN8touchgfx6Screen5JSMOCERKNS_4RectEPNS_8DrawableE>:
 8017f70:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 8017f74:	f9b1 3004 	ldrsh.w	r3, [r1, #4]
 8017f78:	2b00      	cmp	r3, #0
 8017f7a:	b089      	sub	sp, #36	; 0x24
 8017f7c:	4680      	mov	r8, r0
 8017f7e:	460c      	mov	r4, r1
 8017f80:	4615      	mov	r5, r2
 8017f82:	dd0e      	ble.n	8017fa2 <_ZN8touchgfx6Screen5JSMOCERKNS_4RectEPNS_8DrawableE+0x32>
 8017f84:	f9b1 3006 	ldrsh.w	r3, [r1, #6]
 8017f88:	2b00      	cmp	r3, #0
 8017f8a:	dd0a      	ble.n	8017fa2 <_ZN8touchgfx6Screen5JSMOCERKNS_4RectEPNS_8DrawableE+0x32>
 8017f8c:	4628      	mov	r0, r5
 8017f8e:	f7ff ff5b 	bl	8017e48 <_ZN8touchgfx8Drawable20getCachedVisibleRectEv>
 8017f92:	4621      	mov	r1, r4
 8017f94:	f7fe fa3d 	bl	8016412 <_ZNK8touchgfx4Rect9intersectERKS0_>
 8017f98:	69eb      	ldr	r3, [r5, #28]
 8017f9a:	b928      	cbnz	r0, 8017fa8 <_ZN8touchgfx6Screen5JSMOCERKNS_4RectEPNS_8DrawableE+0x38>
 8017f9c:	461d      	mov	r5, r3
 8017f9e:	2b00      	cmp	r3, #0
 8017fa0:	d1f4      	bne.n	8017f8c <_ZN8touchgfx6Screen5JSMOCERKNS_4RectEPNS_8DrawableE+0x1c>
 8017fa2:	b009      	add	sp, #36	; 0x24
 8017fa4:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
 8017fa8:	ae04      	add	r6, sp, #16
 8017faa:	2b00      	cmp	r3, #0
 8017fac:	f000 80b5 	beq.w	801811a <_ZN8touchgfx6Screen5JSMOCERKNS_4RectEPNS_8DrawableE+0x1aa>
 8017fb0:	682b      	ldr	r3, [r5, #0]
 8017fb2:	4629      	mov	r1, r5
 8017fb4:	68db      	ldr	r3, [r3, #12]
 8017fb6:	a802      	add	r0, sp, #8
 8017fb8:	4798      	blx	r3
 8017fba:	4628      	mov	r0, r5
 8017fbc:	f7ff ff60 	bl	8017e80 <_ZN8touchgfx8Drawable13getCachedAbsXEv>
 8017fc0:	f8bd 7008 	ldrh.w	r7, [sp, #8]
 8017fc4:	4407      	add	r7, r0
 8017fc6:	4628      	mov	r0, r5
 8017fc8:	f7ff ff6e 	bl	8017ea8 <_ZN8touchgfx8Drawable13getCachedAbsYEv>
 8017fcc:	f8bd 300a 	ldrh.w	r3, [sp, #10]
 8017fd0:	f9bd 200c 	ldrsh.w	r2, [sp, #12]
 8017fd4:	f8ad 2014 	strh.w	r2, [sp, #20]
 8017fd8:	4418      	add	r0, r3
 8017fda:	4621      	mov	r1, r4
 8017fdc:	f9bd 300e 	ldrsh.w	r3, [sp, #14]
 8017fe0:	f8ad 0012 	strh.w	r0, [sp, #18]
 8017fe4:	b23f      	sxth	r7, r7
 8017fe6:	4630      	mov	r0, r6
 8017fe8:	f8ad 3016 	strh.w	r3, [sp, #22]
 8017fec:	f8ad 7010 	strh.w	r7, [sp, #16]
 8017ff0:	f7f8 fb9c 	bl	801072c <_ZN8touchgfx4RectaNERKS0_>
 8017ff4:	4628      	mov	r0, r5
 8017ff6:	f7ff ff27 	bl	8017e48 <_ZN8touchgfx8Drawable20getCachedVisibleRectEv>
 8017ffa:	4602      	mov	r2, r0
 8017ffc:	e896 0003 	ldmia.w	r6, {r0, r1}
 8018000:	ab06      	add	r3, sp, #24
 8018002:	e883 0003 	stmia.w	r3, {r0, r1}
 8018006:	4611      	mov	r1, r2
 8018008:	4618      	mov	r0, r3
 801800a:	f7f8 fb8f 	bl	801072c <_ZN8touchgfx4RectaNERKS0_>
 801800e:	f9bd 3018 	ldrsh.w	r3, [sp, #24]
 8018012:	f9b4 1000 	ldrsh.w	r1, [r4]
 8018016:	f9bd a01a 	ldrsh.w	sl, [sp, #26]
 801801a:	f9bd b01c 	ldrsh.w	fp, [sp, #28]
 801801e:	f9bd 901e 	ldrsh.w	r9, [sp, #30]
 8018022:	4299      	cmp	r1, r3
 8018024:	d10b      	bne.n	801803e <_ZN8touchgfx6Screen5JSMOCERKNS_4RectEPNS_8DrawableE+0xce>
 8018026:	f9b4 2002 	ldrsh.w	r2, [r4, #2]
 801802a:	4552      	cmp	r2, sl
 801802c:	d107      	bne.n	801803e <_ZN8touchgfx6Screen5JSMOCERKNS_4RectEPNS_8DrawableE+0xce>
 801802e:	f9b4 2004 	ldrsh.w	r2, [r4, #4]
 8018032:	455a      	cmp	r2, fp
 8018034:	d103      	bne.n	801803e <_ZN8touchgfx6Screen5JSMOCERKNS_4RectEPNS_8DrawableE+0xce>
 8018036:	f9b4 2006 	ldrsh.w	r2, [r4, #6]
 801803a:	454a      	cmp	r2, r9
 801803c:	d06d      	beq.n	801811a <_ZN8touchgfx6Screen5JSMOCERKNS_4RectEPNS_8DrawableE+0x1aa>
 801803e:	f1bb 0f00 	cmp.w	fp, #0
 8018042:	dd65      	ble.n	8018110 <_ZN8touchgfx6Screen5JSMOCERKNS_4RectEPNS_8DrawableE+0x1a0>
 8018044:	f1b9 0f00 	cmp.w	r9, #0
 8018048:	dd62      	ble.n	8018110 <_ZN8touchgfx6Screen5JSMOCERKNS_4RectEPNS_8DrawableE+0x1a0>
 801804a:	f9b4 2002 	ldrsh.w	r2, [r4, #2]
 801804e:	fa1f f08a 	uxth.w	r0, sl
 8018052:	4552      	cmp	r2, sl
 8018054:	9000      	str	r0, [sp, #0]
 8018056:	da12      	bge.n	801807e <_ZN8touchgfx6Screen5JSMOCERKNS_4RectEPNS_8DrawableE+0x10e>
 8018058:	9301      	str	r3, [sp, #4]
 801805a:	9b00      	ldr	r3, [sp, #0]
 801805c:	f9b4 0004 	ldrsh.w	r0, [r4, #4]
 8018060:	f8ad 2012 	strh.w	r2, [sp, #18]
 8018064:	1a9a      	subs	r2, r3, r2
 8018066:	f8ad 1010 	strh.w	r1, [sp, #16]
 801806a:	f8ad 0014 	strh.w	r0, [sp, #20]
 801806e:	f8ad 2016 	strh.w	r2, [sp, #22]
 8018072:	69ea      	ldr	r2, [r5, #28]
 8018074:	4631      	mov	r1, r6
 8018076:	4640      	mov	r0, r8
 8018078:	f7ff ff7a 	bl	8017f70 <_ZN8touchgfx6Screen5JSMOCERKNS_4RectEPNS_8DrawableE>
 801807c:	9b01      	ldr	r3, [sp, #4]
 801807e:	f9b4 2000 	ldrsh.w	r2, [r4]
 8018082:	429a      	cmp	r2, r3
 8018084:	b29f      	uxth	r7, r3
 8018086:	da0d      	bge.n	80180a4 <_ZN8touchgfx6Screen5JSMOCERKNS_4RectEPNS_8DrawableE+0x134>
 8018088:	f8ad 2010 	strh.w	r2, [sp, #16]
 801808c:	1aba      	subs	r2, r7, r2
 801808e:	f8ad a012 	strh.w	sl, [sp, #18]
 8018092:	f8ad 2014 	strh.w	r2, [sp, #20]
 8018096:	f8ad 9016 	strh.w	r9, [sp, #22]
 801809a:	69ea      	ldr	r2, [r5, #28]
 801809c:	4631      	mov	r1, r6
 801809e:	4640      	mov	r0, r8
 80180a0:	f7ff ff66 	bl	8017f70 <_ZN8touchgfx6Screen5JSMOCERKNS_4RectEPNS_8DrawableE>
 80180a4:	8822      	ldrh	r2, [r4, #0]
 80180a6:	88a3      	ldrh	r3, [r4, #4]
 80180a8:	445f      	add	r7, fp
 80180aa:	4413      	add	r3, r2
 80180ac:	b29b      	uxth	r3, r3
 80180ae:	b2bf      	uxth	r7, r7
 80180b0:	b23a      	sxth	r2, r7
 80180b2:	b219      	sxth	r1, r3
 80180b4:	4291      	cmp	r1, r2
 80180b6:	dd0d      	ble.n	80180d4 <_ZN8touchgfx6Screen5JSMOCERKNS_4RectEPNS_8DrawableE+0x164>
 80180b8:	1bdb      	subs	r3, r3, r7
 80180ba:	f8ad 2010 	strh.w	r2, [sp, #16]
 80180be:	f8ad a012 	strh.w	sl, [sp, #18]
 80180c2:	f8ad 3014 	strh.w	r3, [sp, #20]
 80180c6:	f8ad 9016 	strh.w	r9, [sp, #22]
 80180ca:	69ea      	ldr	r2, [r5, #28]
 80180cc:	4631      	mov	r1, r6
 80180ce:	4640      	mov	r0, r8
 80180d0:	f7ff ff4e 	bl	8017f70 <_ZN8touchgfx6Screen5JSMOCERKNS_4RectEPNS_8DrawableE>
 80180d4:	88e2      	ldrh	r2, [r4, #6]
 80180d6:	8863      	ldrh	r3, [r4, #2]
 80180d8:	4413      	add	r3, r2
 80180da:	9a00      	ldr	r2, [sp, #0]
 80180dc:	444a      	add	r2, r9
 80180de:	b29b      	uxth	r3, r3
 80180e0:	fa1f f982 	uxth.w	r9, r2
 80180e4:	fa0f f289 	sxth.w	r2, r9
 80180e8:	b219      	sxth	r1, r3
 80180ea:	428a      	cmp	r2, r1
 80180ec:	da15      	bge.n	801811a <_ZN8touchgfx6Screen5JSMOCERKNS_4RectEPNS_8DrawableE+0x1aa>
 80180ee:	f9b4 1004 	ldrsh.w	r1, [r4, #4]
 80180f2:	f9b4 0000 	ldrsh.w	r0, [r4]
 80180f6:	f8ad 1014 	strh.w	r1, [sp, #20]
 80180fa:	eba3 0309 	sub.w	r3, r3, r9
 80180fe:	f8ad 0010 	strh.w	r0, [sp, #16]
 8018102:	f8ad 2012 	strh.w	r2, [sp, #18]
 8018106:	f8ad 3016 	strh.w	r3, [sp, #22]
 801810a:	69ea      	ldr	r2, [r5, #28]
 801810c:	4631      	mov	r1, r6
 801810e:	e001      	b.n	8018114 <_ZN8touchgfx6Screen5JSMOCERKNS_4RectEPNS_8DrawableE+0x1a4>
 8018110:	69ea      	ldr	r2, [r5, #28]
 8018112:	4621      	mov	r1, r4
 8018114:	4640      	mov	r0, r8
 8018116:	f7ff ff2b 	bl	8017f70 <_ZN8touchgfx6Screen5JSMOCERKNS_4RectEPNS_8DrawableE>
 801811a:	4628      	mov	r0, r5
 801811c:	f7ff fe94 	bl	8017e48 <_ZN8touchgfx8Drawable20getCachedVisibleRectEv>
 8018120:	6861      	ldr	r1, [r4, #4]
 8018122:	4602      	mov	r2, r0
 8018124:	6820      	ldr	r0, [r4, #0]
 8018126:	4633      	mov	r3, r6
 8018128:	c303      	stmia	r3!, {r0, r1}
 801812a:	4611      	mov	r1, r2
 801812c:	4630      	mov	r0, r6
 801812e:	f7f8 fafd 	bl	801072c <_ZN8touchgfx4RectaNERKS0_>
 8018132:	f9bd 3014 	ldrsh.w	r3, [sp, #20]
 8018136:	2b00      	cmp	r3, #0
 8018138:	f77f af33 	ble.w	8017fa2 <_ZN8touchgfx6Screen5JSMOCERKNS_4RectEPNS_8DrawableE+0x32>
 801813c:	f9bd 3016 	ldrsh.w	r3, [sp, #22]
 8018140:	2b00      	cmp	r3, #0
 8018142:	f77f af2e 	ble.w	8017fa2 <_ZN8touchgfx6Screen5JSMOCERKNS_4RectEPNS_8DrawableE+0x32>
 8018146:	4628      	mov	r0, r5
 8018148:	f7ff fe9a 	bl	8017e80 <_ZN8touchgfx8Drawable13getCachedAbsXEv>
 801814c:	f8bd 3010 	ldrh.w	r3, [sp, #16]
 8018150:	1a18      	subs	r0, r3, r0
 8018152:	f8ad 0010 	strh.w	r0, [sp, #16]
 8018156:	4628      	mov	r0, r5
 8018158:	f7ff fea6 	bl	8017ea8 <_ZN8touchgfx8Drawable13getCachedAbsYEv>
 801815c:	f8bd 3012 	ldrh.w	r3, [sp, #18]
 8018160:	1a18      	subs	r0, r3, r0
 8018162:	f8ad 0012 	strh.w	r0, [sp, #18]
 8018166:	682b      	ldr	r3, [r5, #0]
 8018168:	4631      	mov	r1, r6
 801816a:	689b      	ldr	r3, [r3, #8]
 801816c:	4628      	mov	r0, r5
 801816e:	4798      	blx	r3
 8018170:	e717      	b.n	8017fa2 <_ZN8touchgfx6Screen5JSMOCERKNS_4RectEPNS_8DrawableE+0x32>

08018172 <_ZN8touchgfx6Screen9startSMOCERKNS_4RectE>:
 8018172:	b570      	push	{r4, r5, r6, lr}
 8018174:	460c      	mov	r4, r1
 8018176:	b086      	sub	sp, #24
 8018178:	1d06      	adds	r6, r0, #4
 801817a:	2300      	movs	r3, #0
 801817c:	4631      	mov	r1, r6
 801817e:	4605      	mov	r5, r0
 8018180:	a802      	add	r0, sp, #8
 8018182:	9301      	str	r3, [sp, #4]
 8018184:	f7ff fba8 	bl	80178d8 <_ZNK8touchgfx8Drawable15getAbsoluteRectEv>
 8018188:	f8bd 3008 	ldrh.w	r3, [sp, #8]
 801818c:	8822      	ldrh	r2, [r4, #0]
 801818e:	f8bd 100a 	ldrh.w	r1, [sp, #10]
 8018192:	f9b4 0004 	ldrsh.w	r0, [r4, #4]
 8018196:	f8ad 0014 	strh.w	r0, [sp, #20]
 801819a:	1ad2      	subs	r2, r2, r3
 801819c:	8863      	ldrh	r3, [r4, #2]
 801819e:	f8ad 2010 	strh.w	r2, [sp, #16]
 80181a2:	1a5b      	subs	r3, r3, r1
 80181a4:	f9b4 1006 	ldrsh.w	r1, [r4, #6]
 80181a8:	f8ad 1016 	strh.w	r1, [sp, #22]
 80181ac:	aa01      	add	r2, sp, #4
 80181ae:	a904      	add	r1, sp, #16
 80181b0:	4630      	mov	r0, r6
 80181b2:	f8ad 3012 	strh.w	r3, [sp, #18]
 80181b6:	f7f8 fb91 	bl	80108dc <_ZN8touchgfx9Container14setupDrawChainERKNS_4RectEPPNS_8DrawableE>
 80181ba:	9a01      	ldr	r2, [sp, #4]
 80181bc:	b11a      	cbz	r2, 80181c6 <_ZN8touchgfx6Screen9startSMOCERKNS_4RectE+0x54>
 80181be:	4621      	mov	r1, r4
 80181c0:	4628      	mov	r0, r5
 80181c2:	f7ff fed5 	bl	8017f70 <_ZN8touchgfx6Screen5JSMOCERKNS_4RectEPNS_8DrawableE>
 80181c6:	b006      	add	sp, #24
 80181c8:	bd70      	pop	{r4, r5, r6, pc}

080181ca <_ZN8touchgfx6Screen4drawERNS_4RectE>:
 80181ca:	b530      	push	{r4, r5, lr}
 80181cc:	4602      	mov	r2, r0
 80181ce:	4604      	mov	r4, r0
 80181d0:	f852 0f08 	ldr.w	r0, [r2, #8]!
 80181d4:	b085      	sub	sp, #20
 80181d6:	460d      	mov	r5, r1
 80181d8:	6851      	ldr	r1, [r2, #4]
 80181da:	466b      	mov	r3, sp
 80181dc:	c303      	stmia	r3!, {r0, r1}
 80181de:	4629      	mov	r1, r5
 80181e0:	4668      	mov	r0, sp
 80181e2:	f7f8 faa3 	bl	801072c <_ZN8touchgfx4RectaNERKS0_>
 80181e6:	f894 3038 	ldrb.w	r3, [r4, #56]	; 0x38
 80181ea:	b12b      	cbz	r3, 80181f8 <_ZN8touchgfx6Screen4drawERNS_4RectE+0x2e>
 80181ec:	4669      	mov	r1, sp
 80181ee:	4620      	mov	r0, r4
 80181f0:	f7ff ffbf 	bl	8018172 <_ZN8touchgfx6Screen9startSMOCERKNS_4RectE>
 80181f4:	b005      	add	sp, #20
 80181f6:	bd30      	pop	{r4, r5, pc}
 80181f8:	3404      	adds	r4, #4
 80181fa:	4621      	mov	r1, r4
 80181fc:	a802      	add	r0, sp, #8
 80181fe:	f7ff fb6b 	bl	80178d8 <_ZNK8touchgfx8Drawable15getAbsoluteRectEv>
 8018202:	f8bd 3000 	ldrh.w	r3, [sp]
 8018206:	f8bd 2008 	ldrh.w	r2, [sp, #8]
 801820a:	1a9b      	subs	r3, r3, r2
 801820c:	f8ad 3000 	strh.w	r3, [sp]
 8018210:	f8bd 200a 	ldrh.w	r2, [sp, #10]
 8018214:	f8bd 3002 	ldrh.w	r3, [sp, #2]
 8018218:	4669      	mov	r1, sp
 801821a:	1a9b      	subs	r3, r3, r2
 801821c:	4620      	mov	r0, r4
 801821e:	f8ad 3002 	strh.w	r3, [sp, #2]
 8018222:	f7f8 fb22 	bl	801086a <_ZNK8touchgfx9Container4drawERKNS_4RectE>
 8018226:	e7e5      	b.n	80181f4 <_ZN8touchgfx6Screen4drawERNS_4RectE+0x2a>

08018228 <_ZN8touchgfx6Screen14bindTransitionERNS_10TransitionE>:
 8018228:	680a      	ldr	r2, [r1, #0]
 801822a:	460b      	mov	r3, r1
 801822c:	6992      	ldr	r2, [r2, #24]
 801822e:	1d01      	adds	r1, r0, #4
 8018230:	4618      	mov	r0, r3
 8018232:	4710      	bx	r2

08018234 <_ZN8touchgfx15EasingEquations11backEaseOutEtsst>:
 8018234:	4298      	cmp	r0, r3
 8018236:	d200      	bcs.n	801823a <_ZN8touchgfx15EasingEquations11backEaseOutEtsst+0x6>
 8018238:	b913      	cbnz	r3, 8018240 <_ZN8touchgfx15EasingEquations11backEaseOutEtsst+0xc>
 801823a:	440a      	add	r2, r1
 801823c:	b210      	sxth	r0, r2
 801823e:	4770      	bx	lr
 8018240:	ee07 0a90 	vmov	s15, r0
 8018244:	eef8 6a67 	vcvt.f32.u32	s13, s15
 8018248:	ee07 3a90 	vmov	s15, r3
 801824c:	eef8 7ae7 	vcvt.f32.s32	s15, s15
 8018250:	eddf 4a15 	vldr	s9, [pc, #84]	; 80182a8 <_ZN8touchgfx15EasingEquations11backEaseOutEtsst+0x74>
 8018254:	eddf 5a15 	vldr	s11, [pc, #84]	; 80182ac <_ZN8touchgfx15EasingEquations11backEaseOutEtsst+0x78>
 8018258:	ee86 7aa7 	vdiv.f32	s14, s13, s15
 801825c:	eef7 6a00 	vmov.f32	s13, #112	; 0x3f800000  1.0
 8018260:	ee37 7a66 	vsub.f32	s14, s14, s13
 8018264:	ee07 2a90 	vmov	s15, r2
 8018268:	eee7 5a24 	vfma.f32	s11, s14, s9
 801826c:	ee27 5a07 	vmul.f32	s10, s14, s14
 8018270:	eeb8 6ae7 	vcvt.f32.s32	s12, s15
 8018274:	eee5 6a25 	vfma.f32	s13, s10, s11
 8018278:	ee07 1a90 	vmov	s15, r1
 801827c:	eef8 7ae7 	vcvt.f32.s32	s15, s15
 8018280:	eeb6 7a00 	vmov.f32	s14, #96	; 0x3f000000  0.5
 8018284:	eee6 7a26 	vfma.f32	s15, s12, s13
 8018288:	eef5 7ac0 	vcmpe.f32	s15, #0.0
 801828c:	eef1 fa10 	vmrs	APSR_nzcv, fpscr
 8018290:	bfcc      	ite	gt
 8018292:	ee77 7a87 	vaddgt.f32	s15, s15, s14
 8018296:	ee77 7ac7 	vsuble.f32	s15, s15, s14
 801829a:	eefd 7ae7 	vcvt.s32.f32	s15, s15
 801829e:	ee17 3a90 	vmov	r3, s15
 80182a2:	b218      	sxth	r0, r3
 80182a4:	4770      	bx	lr
 80182a6:	bf00      	nop
 80182a8:	402ce6b0 	.word	0x402ce6b0
 80182ac:	3fd9cd60 	.word	0x3fd9cd60

080182b0 <_ZN8touchgfx15EasingEquations12cubicEaseOutEtsst>:
 80182b0:	4298      	cmp	r0, r3
 80182b2:	d200      	bcs.n	80182b6 <_ZN8touchgfx15EasingEquations12cubicEaseOutEtsst+0x6>
 80182b4:	b913      	cbnz	r3, 80182bc <_ZN8touchgfx15EasingEquations12cubicEaseOutEtsst+0xc>
 80182b6:	440a      	add	r2, r1
 80182b8:	b210      	sxth	r0, r2
 80182ba:	4770      	bx	lr
 80182bc:	ee07 0a90 	vmov	s15, r0
 80182c0:	eef8 6a67 	vcvt.f32.u32	s13, s15
 80182c4:	ee07 3a90 	vmov	s15, r3
 80182c8:	eef8 7ae7 	vcvt.f32.s32	s15, s15
 80182cc:	ee86 7aa7 	vdiv.f32	s14, s13, s15
 80182d0:	eef7 6a00 	vmov.f32	s13, #112	; 0x3f800000  1.0
 80182d4:	ee37 7a66 	vsub.f32	s14, s14, s13
 80182d8:	ee07 2a90 	vmov	s15, r2
 80182dc:	ee67 5a07 	vmul.f32	s11, s14, s14
 80182e0:	eeb8 6ae7 	vcvt.f32.s32	s12, s15
 80182e4:	eee5 6a87 	vfma.f32	s13, s11, s14
 80182e8:	ee07 1a90 	vmov	s15, r1
 80182ec:	eef8 7ae7 	vcvt.f32.s32	s15, s15
 80182f0:	eeb6 7a00 	vmov.f32	s14, #96	; 0x3f000000  0.5
 80182f4:	eee6 7a26 	vfma.f32	s15, s12, s13
 80182f8:	eef5 7ac0 	vcmpe.f32	s15, #0.0
 80182fc:	eef1 fa10 	vmrs	APSR_nzcv, fpscr
 8018300:	bfcc      	ite	gt
 8018302:	ee77 7a87 	vaddgt.f32	s15, s15, s14
 8018306:	ee77 7ac7 	vsuble.f32	s15, s15, s14
 801830a:	eefd 7ae7 	vcvt.s32.f32	s15, s15
 801830e:	ee17 3a90 	vmov	r3, s15
 8018312:	b218      	sxth	r0, r3
 8018314:	4770      	bx	lr

08018316 <_ZN8touchgfx15EasingEquations14linearEaseNoneEtsst>:
 8018316:	4298      	cmp	r0, r3
 8018318:	d200      	bcs.n	801831c <_ZN8touchgfx15EasingEquations14linearEaseNoneEtsst+0x6>
 801831a:	b913      	cbnz	r3, 8018322 <_ZN8touchgfx15EasingEquations14linearEaseNoneEtsst+0xc>
 801831c:	440a      	add	r2, r1
 801831e:	b210      	sxth	r0, r2
 8018320:	4770      	bx	lr
 8018322:	ee07 2a90 	vmov	s15, r2
 8018326:	eeb8 7ae7 	vcvt.f32.s32	s14, s15
 801832a:	ee07 0a90 	vmov	s15, r0
 801832e:	eef8 7a67 	vcvt.f32.u32	s15, s15
 8018332:	ee67 7a27 	vmul.f32	s15, s14, s15
 8018336:	ee07 3a10 	vmov	s14, r3
 801833a:	eef8 6ac7 	vcvt.f32.s32	s13, s14
 801833e:	ee87 7aa6 	vdiv.f32	s14, s15, s13
 8018342:	ee07 1a90 	vmov	s15, r1
 8018346:	eef8 7ae7 	vcvt.f32.s32	s15, s15
 801834a:	ee77 7a27 	vadd.f32	s15, s14, s15
 801834e:	eeb6 7a00 	vmov.f32	s14, #96	; 0x3f000000  0.5
 8018352:	eef5 7ac0 	vcmpe.f32	s15, #0.0
 8018356:	eef1 fa10 	vmrs	APSR_nzcv, fpscr
 801835a:	bfcc      	ite	gt
 801835c:	ee77 7a87 	vaddgt.f32	s15, s15, s14
 8018360:	ee77 7ac7 	vsuble.f32	s15, s15, s14
 8018364:	eefd 7ae7 	vcvt.s32.f32	s15, s15
 8018368:	ee17 3a90 	vmov	r3, s15
 801836c:	b218      	sxth	r0, r3
 801836e:	4770      	bx	lr

08018370 <_ZN8touchgfx12TextProviderC1Ev>:
 8018370:	b538      	push	{r3, r4, r5, lr}
 8018372:	2500      	movs	r5, #0
 8018374:	2302      	movs	r3, #2
 8018376:	4604      	mov	r4, r0
 8018378:	e9c0 5500 	strd	r5, r5, [r0]
 801837c:	7403      	strb	r3, [r0, #16]
 801837e:	6145      	str	r5, [r0, #20]
 8018380:	7605      	strb	r5, [r0, #24]
 8018382:	83c5      	strh	r5, [r0, #30]
 8018384:	8405      	strh	r5, [r0, #32]
 8018386:	86c5      	strh	r5, [r0, #54]	; 0x36
 8018388:	8705      	strh	r5, [r0, #56]	; 0x38
 801838a:	87c5      	strh	r5, [r0, #62]	; 0x3e
 801838c:	f8a0 5040 	strh.w	r5, [r0, #64]	; 0x40
 8018390:	e9c0 5511 	strd	r5, r5, [r0, #68]	; 0x44
 8018394:	220e      	movs	r2, #14
 8018396:	4629      	mov	r1, r5
 8018398:	304c      	adds	r0, #76	; 0x4c
 801839a:	f013 f9e6 	bl	802b76a <memset>
 801839e:	2301      	movs	r3, #1
 80183a0:	4620      	mov	r0, r4
 80183a2:	f8a4 505a 	strh.w	r5, [r4, #90]	; 0x5a
 80183a6:	f8a4 505c 	strh.w	r5, [r4, #92]	; 0x5c
 80183aa:	f8a4 505e 	strh.w	r5, [r4, #94]	; 0x5e
 80183ae:	f884 3060 	strb.w	r3, [r4, #96]	; 0x60
 80183b2:	f884 5061 	strb.w	r5, [r4, #97]	; 0x61
 80183b6:	f7f0 f977 	bl	80086a8 <_ZN8touchgfx12TextProvider18initializeInternalEv>
 80183ba:	4620      	mov	r0, r4
 80183bc:	bd38      	pop	{r3, r4, r5, pc}

080183be <_ZN8touchgfx12TextProvider11endOfStringEv>:
 80183be:	8ec3      	ldrh	r3, [r0, #54]	; 0x36
 80183c0:	eb00 0043 	add.w	r0, r0, r3, lsl #1
 80183c4:	8c40      	ldrh	r0, [r0, #34]	; 0x22
 80183c6:	fab0 f080 	clz	r0, r0
 80183ca:	0940      	lsrs	r0, r0, #5
 80183cc:	4770      	bx	lr

080183ce <_ZN8touchgfx12TextProvider19getNextCharInternalEv>:
 80183ce:	b530      	push	{r4, r5, lr}
 80183d0:	2500      	movs	r5, #0
 80183d2:	2401      	movs	r4, #1
 80183d4:	6843      	ldr	r3, [r0, #4]
 80183d6:	b913      	cbnz	r3, 80183de <_ZN8touchgfx12TextProvider19getNextCharInternalEv+0x10>
 80183d8:	6803      	ldr	r3, [r0, #0]
 80183da:	b313      	cbz	r3, 8018422 <_ZN8touchgfx12TextProvider19getNextCharInternalEv+0x54>
 80183dc:	6043      	str	r3, [r0, #4]
 80183de:	7e03      	ldrb	r3, [r0, #24]
 80183e0:	b143      	cbz	r3, 80183f4 <_ZN8touchgfx12TextProvider19getNextCharInternalEv+0x26>
 80183e2:	6943      	ldr	r3, [r0, #20]
 80183e4:	b12b      	cbz	r3, 80183f2 <_ZN8touchgfx12TextProvider19getNextCharInternalEv+0x24>
 80183e6:	881a      	ldrh	r2, [r3, #0]
 80183e8:	b11a      	cbz	r2, 80183f2 <_ZN8touchgfx12TextProvider19getNextCharInternalEv+0x24>
 80183ea:	1c9a      	adds	r2, r3, #2
 80183ec:	6142      	str	r2, [r0, #20]
 80183ee:	8818      	ldrh	r0, [r3, #0]
 80183f0:	bd30      	pop	{r4, r5, pc}
 80183f2:	7605      	strb	r5, [r0, #24]
 80183f4:	6843      	ldr	r3, [r0, #4]
 80183f6:	8819      	ldrh	r1, [r3, #0]
 80183f8:	b199      	cbz	r1, 8018422 <_ZN8touchgfx12TextProvider19getNextCharInternalEv+0x54>
 80183fa:	1c9a      	adds	r2, r3, #2
 80183fc:	2902      	cmp	r1, #2
 80183fe:	6042      	str	r2, [r0, #4]
 8018400:	d1f5      	bne.n	80183ee <_ZN8touchgfx12TextProvider19getNextCharInternalEv+0x20>
 8018402:	7c03      	ldrb	r3, [r0, #16]
 8018404:	2b01      	cmp	r3, #1
 8018406:	d8e5      	bhi.n	80183d4 <_ZN8touchgfx12TextProvider19getNextCharInternalEv+0x6>
 8018408:	1c5a      	adds	r2, r3, #1
 801840a:	3302      	adds	r3, #2
 801840c:	7402      	strb	r2, [r0, #16]
 801840e:	f850 3023 	ldr.w	r3, [r0, r3, lsl #2]
 8018412:	6143      	str	r3, [r0, #20]
 8018414:	2b00      	cmp	r3, #0
 8018416:	d0dd      	beq.n	80183d4 <_ZN8touchgfx12TextProvider19getNextCharInternalEv+0x6>
 8018418:	881b      	ldrh	r3, [r3, #0]
 801841a:	2b00      	cmp	r3, #0
 801841c:	d0da      	beq.n	80183d4 <_ZN8touchgfx12TextProvider19getNextCharInternalEv+0x6>
 801841e:	7604      	strb	r4, [r0, #24]
 8018420:	e7d8      	b.n	80183d4 <_ZN8touchgfx12TextProvider19getNextCharInternalEv+0x6>
 8018422:	2000      	movs	r0, #0
 8018424:	e7e4      	b.n	80183f0 <_ZN8touchgfx12TextProvider19getNextCharInternalEv+0x22>

08018426 <_ZN8touchgfx12TextProvider10initializeEPKtSt9__va_listS2_PKNS_24FontContextualFormsTableE>:
 8018426:	b430      	push	{r4, r5}
 8018428:	6001      	str	r1, [r0, #0]
 801842a:	2100      	movs	r1, #0
 801842c:	6041      	str	r1, [r0, #4]
 801842e:	6815      	ldr	r5, [r2, #0]
 8018430:	6085      	str	r5, [r0, #8]
 8018432:	6852      	ldr	r2, [r2, #4]
 8018434:	6443      	str	r3, [r0, #68]	; 0x44
 8018436:	9b02      	ldr	r3, [sp, #8]
 8018438:	60c2      	str	r2, [r0, #12]
 801843a:	7401      	strb	r1, [r0, #16]
 801843c:	6141      	str	r1, [r0, #20]
 801843e:	7601      	strb	r1, [r0, #24]
 8018440:	8701      	strh	r1, [r0, #56]	; 0x38
 8018442:	8401      	strh	r1, [r0, #32]
 8018444:	f8a0 1040 	strh.w	r1, [r0, #64]	; 0x40
 8018448:	6483      	str	r3, [r0, #72]	; 0x48
 801844a:	bc30      	pop	{r4, r5}
 801844c:	f7f0 b92c 	b.w	80086a8 <_ZN8touchgfx12TextProvider18initializeInternalEv>

08018450 <_ZN8touchgfx12TextProvider10initializeEPKtS2_PKNS_24FontContextualFormsTableEz>:
 8018450:	b408      	push	{r3}
 8018452:	b510      	push	{r4, lr}
 8018454:	b085      	sub	sp, #20
 8018456:	ac07      	add	r4, sp, #28
 8018458:	f854 3b04 	ldr.w	r3, [r4], #4
 801845c:	9300      	str	r3, [sp, #0]
 801845e:	4613      	mov	r3, r2
 8018460:	4622      	mov	r2, r4
 8018462:	9403      	str	r4, [sp, #12]
 8018464:	f7ff ffdf 	bl	8018426 <_ZN8touchgfx12TextProvider10initializeEPKtSt9__va_listS2_PKNS_24FontContextualFormsTableE>
 8018468:	b005      	add	sp, #20
 801846a:	e8bd 4010 	ldmia.w	sp!, {r4, lr}
 801846e:	b001      	add	sp, #4
 8018470:	4770      	bx	lr

08018472 <_ZN8touchgfx12TextProvider16adjustHindiGlyphEPKNS_9GlyphNodeE>:
 8018472:	b5f0      	push	{r4, r5, r6, r7, lr}
 8018474:	4605      	mov	r5, r0
 8018476:	4608      	mov	r0, r1
 8018478:	b1e9      	cbz	r1, 80184b6 <_ZN8touchgfx12TextProvider16adjustHindiGlyphEPKNS_9GlyphNodeE+0x44>
 801847a:	f105 044c 	add.w	r4, r5, #76	; 0x4c
 801847e:	460b      	mov	r3, r1
 8018480:	f101 0708 	add.w	r7, r1, #8
 8018484:	4622      	mov	r2, r4
 8018486:	6818      	ldr	r0, [r3, #0]
 8018488:	6859      	ldr	r1, [r3, #4]
 801848a:	4626      	mov	r6, r4
 801848c:	c603      	stmia	r6!, {r0, r1}
 801848e:	3308      	adds	r3, #8
 8018490:	42bb      	cmp	r3, r7
 8018492:	4634      	mov	r4, r6
 8018494:	d1f7      	bne.n	8018486 <_ZN8touchgfx12TextProvider16adjustHindiGlyphEPKNS_9GlyphNodeE+0x14>
 8018496:	6818      	ldr	r0, [r3, #0]
 8018498:	6030      	str	r0, [r6, #0]
 801849a:	889b      	ldrh	r3, [r3, #4]
 801849c:	80b3      	strh	r3, [r6, #4]
 801849e:	f895 3059 	ldrb.w	r3, [r5, #89]	; 0x59
 80184a2:	015b      	lsls	r3, r3, #5
 80184a4:	f403 7180 	and.w	r1, r3, #256	; 0x100
 80184a8:	f895 3052 	ldrb.w	r3, [r5, #82]	; 0x52
 80184ac:	430b      	orrs	r3, r1
 80184ae:	425b      	negs	r3, r3
 80184b0:	f885 3055 	strb.w	r3, [r5, #85]	; 0x55
 80184b4:	4610      	mov	r0, r2
 80184b6:	bdf0      	pop	{r4, r5, r6, r7, pc}

080184b8 <_ZNK8touchgfx12TextProvider15thaiLookupGlyphEPKNS_9GlyphNodeEPKNS_4FontEt>:
 80184b8:	b538      	push	{r3, r4, r5, lr}
 80184ba:	460c      	mov	r4, r1
 80184bc:	6811      	ldr	r1, [r2, #0]
 80184be:	4610      	mov	r0, r2
 80184c0:	68cd      	ldr	r5, [r1, #12]
 80184c2:	4619      	mov	r1, r3
 80184c4:	47a8      	blx	r5
 80184c6:	2800      	cmp	r0, #0
 80184c8:	bf08      	it	eq
 80184ca:	4620      	moveq	r0, r4
 80184cc:	bd38      	pop	{r3, r4, r5, pc}
	...

080184d0 <_ZN8touchgfx12TextProvider15adjustThaiGlyphEPKNS_4FontEPKNS_9GlyphNodeE>:
 80184d0:	b5f8      	push	{r3, r4, r5, r6, r7, lr}
 80184d2:	4604      	mov	r4, r0
 80184d4:	4615      	mov	r5, r2
 80184d6:	4608      	mov	r0, r1
 80184d8:	b93a      	cbnz	r2, 80184ea <_ZN8touchgfx12TextProvider15adjustThaiGlyphEPKNS_4FontEPKNS_9GlyphNodeE+0x1a>
 80184da:	f8a4 205a 	strh.w	r2, [r4, #90]	; 0x5a
 80184de:	f8a4 205c 	strh.w	r2, [r4, #92]	; 0x5c
 80184e2:	f8a4 205e 	strh.w	r2, [r4, #94]	; 0x5e
 80184e6:	4628      	mov	r0, r5
 80184e8:	bdf8      	pop	{r3, r4, r5, r6, r7, pc}
 80184ea:	f892 c00d 	ldrb.w	ip, [r2, #13]
 80184ee:	8893      	ldrh	r3, [r2, #4]
 80184f0:	ea4f 160c 	mov.w	r6, ip, lsl #4
 80184f4:	f406 7280 	and.w	r2, r6, #256	; 0x100
 80184f8:	79ee      	ldrb	r6, [r5, #7]
 80184fa:	f46f 6763 	mvn.w	r7, #3632	; 0xe30
 80184fe:	4316      	orrs	r6, r2
 8018500:	19da      	adds	r2, r3, r7
 8018502:	b291      	uxth	r1, r2
 8018504:	291d      	cmp	r1, #29
 8018506:	b2b7      	uxth	r7, r6
 8018508:	d87a      	bhi.n	8018600 <_ZN8touchgfx12TextProvider15adjustThaiGlyphEPKNS_4FontEPKNS_9GlyphNodeE+0x130>
 801850a:	2201      	movs	r2, #1
 801850c:	408a      	lsls	r2, r1
 801850e:	4975      	ldr	r1, [pc, #468]	; (80186e4 <_ZN8touchgfx12TextProvider15adjustThaiGlyphEPKNS_4FontEPKNS_9GlyphNodeE+0x214>)
 8018510:	420a      	tst	r2, r1
 8018512:	ea4f 06e6 	mov.w	r6, r6, asr #3
 8018516:	d12d      	bne.n	8018574 <_ZN8touchgfx12TextProvider15adjustThaiGlyphEPKNS_4FontEPKNS_9GlyphNodeE+0xa4>
 8018518:	f412 7f60 	tst.w	r2, #896	; 0x380
 801851c:	d070      	beq.n	8018600 <_ZN8touchgfx12TextProvider15adjustThaiGlyphEPKNS_4FontEPKNS_9GlyphNodeE+0x130>
 801851e:	f104 024c 	add.w	r2, r4, #76	; 0x4c
 8018522:	462b      	mov	r3, r5
 8018524:	f105 0e08 	add.w	lr, r5, #8
 8018528:	4615      	mov	r5, r2
 801852a:	6818      	ldr	r0, [r3, #0]
 801852c:	6859      	ldr	r1, [r3, #4]
 801852e:	4694      	mov	ip, r2
 8018530:	e8ac 0003 	stmia.w	ip!, {r0, r1}
 8018534:	3308      	adds	r3, #8
 8018536:	4573      	cmp	r3, lr
 8018538:	4662      	mov	r2, ip
 801853a:	d1f6      	bne.n	801852a <_ZN8touchgfx12TextProvider15adjustThaiGlyphEPKNS_4FontEPKNS_9GlyphNodeE+0x5a>
 801853c:	6818      	ldr	r0, [r3, #0]
 801853e:	f8cc 0000 	str.w	r0, [ip]
 8018542:	889b      	ldrh	r3, [r3, #4]
 8018544:	f8ac 3004 	strh.w	r3, [ip, #4]
 8018548:	f8b4 105c 	ldrh.w	r1, [r4, #92]	; 0x5c
 801854c:	f894 0059 	ldrb.w	r0, [r4, #89]	; 0x59
 8018550:	b2b3      	uxth	r3, r6
 8018552:	1aca      	subs	r2, r1, r3
 8018554:	b292      	uxth	r2, r2
 8018556:	f884 2054 	strb.w	r2, [r4, #84]	; 0x54
 801855a:	10d2      	asrs	r2, r2, #3
 801855c:	f020 0060 	bic.w	r0, r0, #96	; 0x60
 8018560:	f002 0260 	and.w	r2, r2, #96	; 0x60
 8018564:	4302      	orrs	r2, r0
 8018566:	1bcf      	subs	r7, r1, r7
 8018568:	f884 2059 	strb.w	r2, [r4, #89]	; 0x59
 801856c:	1afb      	subs	r3, r7, r3
 801856e:	f8a4 305c 	strh.w	r3, [r4, #92]	; 0x5c
 8018572:	e7b8      	b.n	80184e6 <_ZN8touchgfx12TextProvider15adjustThaiGlyphEPKNS_4FontEPKNS_9GlyphNodeE+0x16>
 8018574:	8ee3      	ldrh	r3, [r4, #54]	; 0x36
 8018576:	eb04 0343 	add.w	r3, r4, r3, lsl #1
 801857a:	8c59      	ldrh	r1, [r3, #34]	; 0x22
 801857c:	f640 6333 	movw	r3, #3635	; 0xe33
 8018580:	4299      	cmp	r1, r3
 8018582:	d110      	bne.n	80185a6 <_ZN8touchgfx12TextProvider15adjustThaiGlyphEPKNS_4FontEPKNS_9GlyphNodeE+0xd6>
 8018584:	6803      	ldr	r3, [r0, #0]
 8018586:	68db      	ldr	r3, [r3, #12]
 8018588:	4798      	blx	r3
 801858a:	7b41      	ldrb	r1, [r0, #13]
 801858c:	00cb      	lsls	r3, r1, #3
 801858e:	f403 7280 	and.w	r2, r3, #256	; 0x100
 8018592:	7a03      	ldrb	r3, [r0, #8]
 8018594:	0648      	lsls	r0, r1, #25
 8018596:	ea43 0302 	orr.w	r3, r3, r2
 801859a:	bf44      	itt	mi
 801859c:	f5a3 7300 	submi.w	r3, r3, #512	; 0x200
 80185a0:	b21b      	sxthmi	r3, r3
 80185a2:	f8a4 305a 	strh.w	r3, [r4, #90]	; 0x5a
 80185a6:	f8b4 305a 	ldrh.w	r3, [r4, #90]	; 0x5a
 80185aa:	443b      	add	r3, r7
 80185ac:	4433      	add	r3, r6
 80185ae:	b29b      	uxth	r3, r3
 80185b0:	f104 064c 	add.w	r6, r4, #76	; 0x4c
 80185b4:	462a      	mov	r2, r5
 80185b6:	f105 0c08 	add.w	ip, r5, #8
 80185ba:	f8a4 305a 	strh.w	r3, [r4, #90]	; 0x5a
 80185be:	4635      	mov	r5, r6
 80185c0:	6810      	ldr	r0, [r2, #0]
 80185c2:	6851      	ldr	r1, [r2, #4]
 80185c4:	4637      	mov	r7, r6
 80185c6:	c703      	stmia	r7!, {r0, r1}
 80185c8:	3208      	adds	r2, #8
 80185ca:	4562      	cmp	r2, ip
 80185cc:	463e      	mov	r6, r7
 80185ce:	d1f7      	bne.n	80185c0 <_ZN8touchgfx12TextProvider15adjustThaiGlyphEPKNS_4FontEPKNS_9GlyphNodeE+0xf0>
 80185d0:	6810      	ldr	r0, [r2, #0]
 80185d2:	6038      	str	r0, [r7, #0]
 80185d4:	8892      	ldrh	r2, [r2, #4]
 80185d6:	80ba      	strh	r2, [r7, #4]
 80185d8:	f894 2059 	ldrb.w	r2, [r4, #89]	; 0x59
 80185dc:	f884 3054 	strb.w	r3, [r4, #84]	; 0x54
 80185e0:	10db      	asrs	r3, r3, #3
 80185e2:	f022 0260 	bic.w	r2, r2, #96	; 0x60
 80185e6:	f003 0360 	and.w	r3, r3, #96	; 0x60
 80185ea:	4313      	orrs	r3, r2
 80185ec:	f884 3059 	strb.w	r3, [r4, #89]	; 0x59
 80185f0:	f894 205e 	ldrb.w	r2, [r4, #94]	; 0x5e
 80185f4:	f894 3055 	ldrb.w	r3, [r4, #85]	; 0x55
 80185f8:	1a9b      	subs	r3, r3, r2
 80185fa:	f884 3055 	strb.w	r3, [r4, #85]	; 0x55
 80185fe:	e772      	b.n	80184e6 <_ZN8touchgfx12TextProvider15adjustThaiGlyphEPKNS_4FontEPKNS_9GlyphNodeE+0x16>
 8018600:	f023 0204 	bic.w	r2, r3, #4
 8018604:	f640 611b 	movw	r1, #3611	; 0xe1b
 8018608:	428a      	cmp	r2, r1
 801860a:	d003      	beq.n	8018614 <_ZN8touchgfx12TextProvider15adjustThaiGlyphEPKNS_4FontEPKNS_9GlyphNodeE+0x144>
 801860c:	f640 621d 	movw	r2, #3613	; 0xe1d
 8018610:	4293      	cmp	r3, r2
 8018612:	d120      	bne.n	8018656 <_ZN8touchgfx12TextProvider15adjustThaiGlyphEPKNS_4FontEPKNS_9GlyphNodeE+0x186>
 8018614:	3b01      	subs	r3, #1
 8018616:	4602      	mov	r2, r0
 8018618:	b29b      	uxth	r3, r3
 801861a:	4629      	mov	r1, r5
 801861c:	4620      	mov	r0, r4
 801861e:	f7ff ff4b 	bl	80184b8 <_ZNK8touchgfx12TextProvider15thaiLookupGlyphEPKNS_9GlyphNodeEPKNS_4FontEt>
 8018622:	7b41      	ldrb	r1, [r0, #13]
 8018624:	00cb      	lsls	r3, r1, #3
 8018626:	f403 7280 	and.w	r2, r3, #256	; 0x100
 801862a:	7a03      	ldrb	r3, [r0, #8]
 801862c:	0649      	lsls	r1, r1, #25
 801862e:	ea43 0302 	orr.w	r3, r3, r2
 8018632:	bf44      	itt	mi
 8018634:	f5a3 7300 	submi.w	r3, r3, #512	; 0x200
 8018638:	b21b      	sxthmi	r3, r3
 801863a:	f8a4 305a 	strh.w	r3, [r4, #90]	; 0x5a
 801863e:	7b6b      	ldrb	r3, [r5, #13]
 8018640:	7aaa      	ldrb	r2, [r5, #10]
 8018642:	005b      	lsls	r3, r3, #1
 8018644:	f403 7380 	and.w	r3, r3, #256	; 0x100
 8018648:	4313      	orrs	r3, r2
 801864a:	115a      	asrs	r2, r3, #5
 801864c:	eb02 0393 	add.w	r3, r2, r3, lsr #2
 8018650:	f8a4 305e 	strh.w	r3, [r4, #94]	; 0x5e
 8018654:	e036      	b.n	80186c4 <_ZN8touchgfx12TextProvider15adjustThaiGlyphEPKNS_4FontEPKNS_9GlyphNodeE+0x1f4>
 8018656:	ea4f 02cc 	mov.w	r2, ip, lsl #3
 801865a:	f402 7180 	and.w	r1, r2, #256	; 0x100
 801865e:	7a2a      	ldrb	r2, [r5, #8]
 8018660:	f01c 0f40 	tst.w	ip, #64	; 0x40
 8018664:	ea42 0201 	orr.w	r2, r2, r1
 8018668:	bf1c      	itt	ne
 801866a:	f5a2 7200 	subne.w	r2, r2, #512	; 0x200
 801866e:	b212      	sxthne	r2, r2
 8018670:	f8a4 205a 	strh.w	r2, [r4, #90]	; 0x5a
 8018674:	f640 6109 	movw	r1, #3593	; 0xe09
 8018678:	f023 0210 	bic.w	r2, r3, #16
 801867c:	428a      	cmp	r2, r1
 801867e:	d003      	beq.n	8018688 <_ZN8touchgfx12TextProvider15adjustThaiGlyphEPKNS_4FontEPKNS_9GlyphNodeE+0x1b8>
 8018680:	f640 6213 	movw	r2, #3603	; 0xe13
 8018684:	4293      	cmp	r3, r2
 8018686:	d12a      	bne.n	80186de <_ZN8touchgfx12TextProvider15adjustThaiGlyphEPKNS_4FontEPKNS_9GlyphNodeE+0x20e>
 8018688:	7b6e      	ldrb	r6, [r5, #13]
 801868a:	0076      	lsls	r6, r6, #1
 801868c:	f406 7280 	and.w	r2, r6, #256	; 0x100
 8018690:	7aae      	ldrb	r6, [r5, #10]
 8018692:	4316      	orrs	r6, r2
 8018694:	f640 6213 	movw	r2, #3603	; 0xe13
 8018698:	4293      	cmp	r3, r2
 801869a:	bf18      	it	ne
 801869c:	f103 33ff 	addne.w	r3, r3, #4294967295
 80186a0:	4602      	mov	r2, r0
 80186a2:	bf14      	ite	ne
 80186a4:	b29b      	uxthne	r3, r3
 80186a6:	f640 630c 	movweq	r3, #3596	; 0xe0c
 80186aa:	4629      	mov	r1, r5
 80186ac:	4620      	mov	r0, r4
 80186ae:	f7ff ff03 	bl	80184b8 <_ZNK8touchgfx12TextProvider15thaiLookupGlyphEPKNS_9GlyphNodeEPKNS_4FontEt>
 80186b2:	7b43      	ldrb	r3, [r0, #13]
 80186b4:	7a82      	ldrb	r2, [r0, #10]
 80186b6:	005b      	lsls	r3, r3, #1
 80186b8:	f403 7380 	and.w	r3, r3, #256	; 0x100
 80186bc:	4313      	orrs	r3, r2
 80186be:	1af6      	subs	r6, r6, r3
 80186c0:	f8a4 605e 	strh.w	r6, [r4, #94]	; 0x5e
 80186c4:	7b69      	ldrb	r1, [r5, #13]
 80186c6:	00cb      	lsls	r3, r1, #3
 80186c8:	f403 7280 	and.w	r2, r3, #256	; 0x100
 80186cc:	7a2b      	ldrb	r3, [r5, #8]
 80186ce:	4313      	orrs	r3, r2
 80186d0:	064a      	lsls	r2, r1, #25
 80186d2:	bf44      	itt	mi
 80186d4:	f5a3 7300 	submi.w	r3, r3, #512	; 0x200
 80186d8:	b21b      	sxthmi	r3, r3
 80186da:	1bdb      	subs	r3, r3, r7
 80186dc:	e747      	b.n	801856e <_ZN8touchgfx12TextProvider15adjustThaiGlyphEPKNS_4FontEPKNS_9GlyphNodeE+0x9e>
 80186de:	2300      	movs	r3, #0
 80186e0:	e7b6      	b.n	8018650 <_ZN8touchgfx12TextProvider15adjustThaiGlyphEPKNS_4FontEPKNS_9GlyphNodeE+0x180>
 80186e2:	bf00      	nop
 80186e4:	3fc00079 	.word	0x3fc00079

080186e8 <_ZN8touchgfx12TextProvider17adjustArabicGlyphEPKNS_4FontEPKNS_9GlyphNodeEt>:
 80186e8:	e92d 43f0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, lr}
 80186ec:	4604      	mov	r4, r0
 80186ee:	b942      	cbnz	r2, 8018702 <_ZN8touchgfx12TextProvider17adjustArabicGlyphEPKNS_4FontEPKNS_9GlyphNodeEt+0x1a>
 80186f0:	f44f 4300 	mov.w	r3, #32768	; 0x8000
 80186f4:	f8a0 305a 	strh.w	r3, [r0, #90]	; 0x5a
 80186f8:	f8a0 305c 	strh.w	r3, [r0, #92]	; 0x5c
 80186fc:	f8a4 305e 	strh.w	r3, [r4, #94]	; 0x5e
 8018700:	e047      	b.n	8018792 <_ZN8touchgfx12TextProvider17adjustArabicGlyphEPKNS_4FontEPKNS_9GlyphNodeEt+0xaa>
 8018702:	7b51      	ldrb	r1, [r2, #13]
 8018704:	8893      	ldrh	r3, [r2, #4]
 8018706:	010d      	lsls	r5, r1, #4
 8018708:	f405 7080 	and.w	r0, r5, #256	; 0x100
 801870c:	79d5      	ldrb	r5, [r2, #7]
 801870e:	4305      	orrs	r5, r0
 8018710:	2d04      	cmp	r5, #4
 8018712:	bfcc      	ite	gt
 8018714:	ea4f 0e95 	movgt.w	lr, r5, lsr #2
 8018718:	f04f 0e01 	movle.w	lr, #1
 801871c:	f5b3 6fdd 	cmp.w	r3, #1768	; 0x6e8
 8018720:	f200 80ab 	bhi.w	801887a <_ZN8touchgfx12TextProvider17adjustArabicGlyphEPKNS_4FontEPKNS_9GlyphNodeEt+0x192>
 8018724:	f240 60e7 	movw	r0, #1767	; 0x6e7
 8018728:	4283      	cmp	r3, r0
 801872a:	d216      	bcs.n	801875a <_ZN8touchgfx12TextProvider17adjustArabicGlyphEPKNS_4FontEPKNS_9GlyphNodeEt+0x72>
 801872c:	f240 605b 	movw	r0, #1627	; 0x65b
 8018730:	4283      	cmp	r3, r0
 8018732:	d859      	bhi.n	80187e8 <_ZN8touchgfx12TextProvider17adjustArabicGlyphEPKNS_4FontEPKNS_9GlyphNodeEt+0x100>
 8018734:	f240 6057 	movw	r0, #1623	; 0x657
 8018738:	4283      	cmp	r3, r0
 801873a:	d20e      	bcs.n	801875a <_ZN8touchgfx12TextProvider17adjustArabicGlyphEPKNS_4FontEPKNS_9GlyphNodeEt+0x72>
 801873c:	f5b3 6fca 	cmp.w	r3, #1616	; 0x650
 8018740:	d24a      	bcs.n	80187d8 <_ZN8touchgfx12TextProvider17adjustArabicGlyphEPKNS_4FontEPKNS_9GlyphNodeEt+0xf0>
 8018742:	f240 604e 	movw	r0, #1614	; 0x64e
 8018746:	4283      	cmp	r3, r0
 8018748:	d207      	bcs.n	801875a <_ZN8touchgfx12TextProvider17adjustArabicGlyphEPKNS_4FontEPKNS_9GlyphNodeEt+0x72>
 801874a:	f240 601a 	movw	r0, #1562	; 0x61a
 801874e:	4283      	cmp	r3, r0
 8018750:	d02a      	beq.n	80187a8 <_ZN8touchgfx12TextProvider17adjustArabicGlyphEPKNS_4FontEPKNS_9GlyphNodeEt+0xc0>
 8018752:	d821      	bhi.n	8018798 <_ZN8touchgfx12TextProvider17adjustArabicGlyphEPKNS_4FontEPKNS_9GlyphNodeEt+0xb0>
 8018754:	f5b3 6fc2 	cmp.w	r3, #1552	; 0x610
 8018758:	d35b      	bcc.n	8018812 <_ZN8touchgfx12TextProvider17adjustArabicGlyphEPKNS_4FontEPKNS_9GlyphNodeEt+0x12a>
 801875a:	f9b4 305a 	ldrsh.w	r3, [r4, #90]	; 0x5a
 801875e:	f513 4f00 	cmn.w	r3, #32768	; 0x8000
 8018762:	f040 80d0 	bne.w	8018906 <_ZN8touchgfx12TextProvider17adjustArabicGlyphEPKNS_4FontEPKNS_9GlyphNodeEt+0x21e>
 8018766:	f9b4 005c 	ldrsh.w	r0, [r4, #92]	; 0x5c
 801876a:	f510 4f00 	cmn.w	r0, #32768	; 0x8000
 801876e:	f040 80ca 	bne.w	8018906 <_ZN8touchgfx12TextProvider17adjustArabicGlyphEPKNS_4FontEPKNS_9GlyphNodeEt+0x21e>
 8018772:	00cb      	lsls	r3, r1, #3
 8018774:	f403 7080 	and.w	r0, r3, #256	; 0x100
 8018778:	7a13      	ldrb	r3, [r2, #8]
 801877a:	0649      	lsls	r1, r1, #25
 801877c:	ea43 0300 	orr.w	r3, r3, r0
 8018780:	bf44      	itt	mi
 8018782:	f5a3 7300 	submi.w	r3, r3, #512	; 0x200
 8018786:	b21b      	sxthmi	r3, r3
 8018788:	f8a4 305a 	strh.w	r3, [r4, #90]	; 0x5a
 801878c:	1b5d      	subs	r5, r3, r5
 801878e:	f8a4 505c 	strh.w	r5, [r4, #92]	; 0x5c
 8018792:	4610      	mov	r0, r2
 8018794:	e8bd 83f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, pc}
 8018798:	f240 604b 	movw	r0, #1611	; 0x64b
 801879c:	4283      	cmp	r3, r0
 801879e:	d338      	bcc.n	8018812 <_ZN8touchgfx12TextProvider17adjustArabicGlyphEPKNS_4FontEPKNS_9GlyphNodeEt+0x12a>
 80187a0:	f240 604c 	movw	r0, #1612	; 0x64c
 80187a4:	4283      	cmp	r3, r0
 80187a6:	d9d8      	bls.n	801875a <_ZN8touchgfx12TextProvider17adjustArabicGlyphEPKNS_4FontEPKNS_9GlyphNodeEt+0x72>
 80187a8:	f9b4 005a 	ldrsh.w	r0, [r4, #90]	; 0x5a
 80187ac:	f9b4 305c 	ldrsh.w	r3, [r4, #92]	; 0x5c
 80187b0:	f510 4f00 	cmn.w	r0, #32768	; 0x8000
 80187b4:	f040 80f2 	bne.w	801899c <_ZN8touchgfx12TextProvider17adjustArabicGlyphEPKNS_4FontEPKNS_9GlyphNodeEt+0x2b4>
 80187b8:	f513 4f00 	cmn.w	r3, #32768	; 0x8000
 80187bc:	f040 80ee 	bne.w	801899c <_ZN8touchgfx12TextProvider17adjustArabicGlyphEPKNS_4FontEPKNS_9GlyphNodeEt+0x2b4>
 80187c0:	00cb      	lsls	r3, r1, #3
 80187c2:	f403 7080 	and.w	r0, r3, #256	; 0x100
 80187c6:	7a13      	ldrb	r3, [r2, #8]
 80187c8:	064e      	lsls	r6, r1, #25
 80187ca:	ea43 0300 	orr.w	r3, r3, r0
 80187ce:	bf44      	itt	mi
 80187d0:	f5a3 7300 	submi.w	r3, r3, #512	; 0x200
 80187d4:	b21b      	sxthmi	r3, r3
 80187d6:	e7d9      	b.n	801878c <_ZN8touchgfx12TextProvider17adjustArabicGlyphEPKNS_4FontEPKNS_9GlyphNodeEt+0xa4>
 80187d8:	f240 6054 	movw	r0, #1620	; 0x654
 80187dc:	4283      	cmp	r3, r0
 80187de:	d8e3      	bhi.n	80187a8 <_ZN8touchgfx12TextProvider17adjustArabicGlyphEPKNS_4FontEPKNS_9GlyphNodeEt+0xc0>
 80187e0:	f5b3 6fca 	cmp.w	r3, #1616	; 0x650
 80187e4:	d9e0      	bls.n	80187a8 <_ZN8touchgfx12TextProvider17adjustArabicGlyphEPKNS_4FontEPKNS_9GlyphNodeEt+0xc0>
 80187e6:	e7b8      	b.n	801875a <_ZN8touchgfx12TextProvider17adjustArabicGlyphEPKNS_4FontEPKNS_9GlyphNodeEt+0x72>
 80187e8:	f240 6074 	movw	r0, #1652	; 0x674
 80187ec:	4283      	cmp	r3, r0
 80187ee:	d0b4      	beq.n	801875a <_ZN8touchgfx12TextProvider17adjustArabicGlyphEPKNS_4FontEPKNS_9GlyphNodeEt+0x72>
 80187f0:	d82d      	bhi.n	801884e <_ZN8touchgfx12TextProvider17adjustArabicGlyphEPKNS_4FontEPKNS_9GlyphNodeEt+0x166>
 80187f2:	f240 605e 	movw	r0, #1630	; 0x65e
 80187f6:	4283      	cmp	r3, r0
 80187f8:	d804      	bhi.n	8018804 <_ZN8touchgfx12TextProvider17adjustArabicGlyphEPKNS_4FontEPKNS_9GlyphNodeEt+0x11c>
 80187fa:	f240 605d 	movw	r0, #1629	; 0x65d
 80187fe:	4283      	cmp	r3, r0
 8018800:	d3d2      	bcc.n	80187a8 <_ZN8touchgfx12TextProvider17adjustArabicGlyphEPKNS_4FontEPKNS_9GlyphNodeEt+0xc0>
 8018802:	e7aa      	b.n	801875a <_ZN8touchgfx12TextProvider17adjustArabicGlyphEPKNS_4FontEPKNS_9GlyphNodeEt+0x72>
 8018804:	f240 605f 	movw	r0, #1631	; 0x65f
 8018808:	4283      	cmp	r3, r0
 801880a:	d0cd      	beq.n	80187a8 <_ZN8touchgfx12TextProvider17adjustArabicGlyphEPKNS_4FontEPKNS_9GlyphNodeEt+0xc0>
 801880c:	f5b3 6fce 	cmp.w	r3, #1648	; 0x670
 8018810:	d0a3      	beq.n	801875a <_ZN8touchgfx12TextProvider17adjustArabicGlyphEPKNS_4FontEPKNS_9GlyphNodeEt+0x72>
 8018812:	00cb      	lsls	r3, r1, #3
 8018814:	f403 7080 	and.w	r0, r3, #256	; 0x100
 8018818:	7a13      	ldrb	r3, [r2, #8]
 801881a:	0649      	lsls	r1, r1, #25
 801881c:	ea43 0300 	orr.w	r3, r3, r0
 8018820:	bf44      	itt	mi
 8018822:	f5a3 7300 	submi.w	r3, r3, #512	; 0x200
 8018826:	b21b      	sxthmi	r3, r3
 8018828:	1b5d      	subs	r5, r3, r5
 801882a:	f8a4 305a 	strh.w	r3, [r4, #90]	; 0x5a
 801882e:	f8a4 505c 	strh.w	r5, [r4, #92]	; 0x5c
 8018832:	7b53      	ldrb	r3, [r2, #13]
 8018834:	015b      	lsls	r3, r3, #5
 8018836:	f403 7180 	and.w	r1, r3, #256	; 0x100
 801883a:	7993      	ldrb	r3, [r2, #6]
 801883c:	430b      	orrs	r3, r1
 801883e:	005b      	lsls	r3, r3, #1
 8018840:	2105      	movs	r1, #5
 8018842:	fb93 f3f1 	sdiv	r3, r3, r1
 8018846:	f992 1009 	ldrsb.w	r1, [r2, #9]
 801884a:	440b      	add	r3, r1
 801884c:	e756      	b.n	80186fc <_ZN8touchgfx12TextProvider17adjustArabicGlyphEPKNS_4FontEPKNS_9GlyphNodeEt+0x14>
 801884e:	f240 60e2 	movw	r0, #1762	; 0x6e2
 8018852:	4283      	cmp	r3, r0
 8018854:	d809      	bhi.n	801886a <_ZN8touchgfx12TextProvider17adjustArabicGlyphEPKNS_4FontEPKNS_9GlyphNodeEt+0x182>
 8018856:	f240 60df 	movw	r0, #1759	; 0x6df
 801885a:	4283      	cmp	r3, r0
 801885c:	f4bf af7d 	bcs.w	801875a <_ZN8touchgfx12TextProvider17adjustArabicGlyphEPKNS_4FontEPKNS_9GlyphNodeEt+0x72>
 8018860:	f2a3 63d6 	subw	r3, r3, #1750	; 0x6d6
 8018864:	2b05      	cmp	r3, #5
 8018866:	d8d4      	bhi.n	8018812 <_ZN8touchgfx12TextProvider17adjustArabicGlyphEPKNS_4FontEPKNS_9GlyphNodeEt+0x12a>
 8018868:	e777      	b.n	801875a <_ZN8touchgfx12TextProvider17adjustArabicGlyphEPKNS_4FontEPKNS_9GlyphNodeEt+0x72>
 801886a:	f240 60e3 	movw	r0, #1763	; 0x6e3
 801886e:	4283      	cmp	r3, r0
 8018870:	d09a      	beq.n	80187a8 <_ZN8touchgfx12TextProvider17adjustArabicGlyphEPKNS_4FontEPKNS_9GlyphNodeEt+0xc0>
 8018872:	f240 60e4 	movw	r0, #1764	; 0x6e4
 8018876:	4283      	cmp	r3, r0
 8018878:	e7ca      	b.n	8018810 <_ZN8touchgfx12TextProvider17adjustArabicGlyphEPKNS_4FontEPKNS_9GlyphNodeEt+0x128>
 801887a:	f5b3 6f0f 	cmp.w	r3, #2288	; 0x8f0
 801887e:	d22b      	bcs.n	80188d8 <_ZN8touchgfx12TextProvider17adjustArabicGlyphEPKNS_4FontEPKNS_9GlyphNodeEt+0x1f0>
 8018880:	f640 00ed 	movw	r0, #2285	; 0x8ed
 8018884:	4283      	cmp	r3, r0
 8018886:	d28f      	bcs.n	80187a8 <_ZN8touchgfx12TextProvider17adjustArabicGlyphEPKNS_4FontEPKNS_9GlyphNodeEt+0xc0>
 8018888:	f640 00e5 	movw	r0, #2277	; 0x8e5
 801888c:	4283      	cmp	r3, r0
 801888e:	d816      	bhi.n	80188be <_ZN8touchgfx12TextProvider17adjustArabicGlyphEPKNS_4FontEPKNS_9GlyphNodeEt+0x1d6>
 8018890:	f640 00e4 	movw	r0, #2276	; 0x8e4
 8018894:	4283      	cmp	r3, r0
 8018896:	f4bf af60 	bcs.w	801875a <_ZN8touchgfx12TextProvider17adjustArabicGlyphEPKNS_4FontEPKNS_9GlyphNodeEt+0x72>
 801889a:	f240 60ec 	movw	r0, #1772	; 0x6ec
 801889e:	4283      	cmp	r3, r0
 80188a0:	d80a      	bhi.n	80188b8 <_ZN8touchgfx12TextProvider17adjustArabicGlyphEPKNS_4FontEPKNS_9GlyphNodeEt+0x1d0>
 80188a2:	f240 60eb 	movw	r0, #1771	; 0x6eb
 80188a6:	4283      	cmp	r3, r0
 80188a8:	f4bf af57 	bcs.w	801875a <_ZN8touchgfx12TextProvider17adjustArabicGlyphEPKNS_4FontEPKNS_9GlyphNodeEt+0x72>
 80188ac:	f240 60ea 	movw	r0, #1770	; 0x6ea
 80188b0:	4283      	cmp	r3, r0
 80188b2:	f43f af79 	beq.w	80187a8 <_ZN8touchgfx12TextProvider17adjustArabicGlyphEPKNS_4FontEPKNS_9GlyphNodeEt+0xc0>
 80188b6:	e7ac      	b.n	8018812 <_ZN8touchgfx12TextProvider17adjustArabicGlyphEPKNS_4FontEPKNS_9GlyphNodeEt+0x12a>
 80188b8:	f240 60ed 	movw	r0, #1773	; 0x6ed
 80188bc:	e7f8      	b.n	80188b0 <_ZN8touchgfx12TextProvider17adjustArabicGlyphEPKNS_4FontEPKNS_9GlyphNodeEt+0x1c8>
 80188be:	f640 00e8 	movw	r0, #2280	; 0x8e8
 80188c2:	4283      	cmp	r3, r0
 80188c4:	d802      	bhi.n	80188cc <_ZN8touchgfx12TextProvider17adjustArabicGlyphEPKNS_4FontEPKNS_9GlyphNodeEt+0x1e4>
 80188c6:	f640 00e7 	movw	r0, #2279	; 0x8e7
 80188ca:	e798      	b.n	80187fe <_ZN8touchgfx12TextProvider17adjustArabicGlyphEPKNS_4FontEPKNS_9GlyphNodeEt+0x116>
 80188cc:	f640 00e9 	movw	r0, #2281	; 0x8e9
 80188d0:	4283      	cmp	r3, r0
 80188d2:	f47f af42 	bne.w	801875a <_ZN8touchgfx12TextProvider17adjustArabicGlyphEPKNS_4FontEPKNS_9GlyphNodeEt+0x72>
 80188d6:	e767      	b.n	80187a8 <_ZN8touchgfx12TextProvider17adjustArabicGlyphEPKNS_4FontEPKNS_9GlyphNodeEt+0xc0>
 80188d8:	f640 00f6 	movw	r0, #2294	; 0x8f6
 80188dc:	4283      	cmp	r3, r0
 80188de:	f43f af63 	beq.w	80187a8 <_ZN8touchgfx12TextProvider17adjustArabicGlyphEPKNS_4FontEPKNS_9GlyphNodeEt+0xc0>
 80188e2:	d802      	bhi.n	80188ea <_ZN8touchgfx12TextProvider17adjustArabicGlyphEPKNS_4FontEPKNS_9GlyphNodeEt+0x202>
 80188e4:	f640 00f2 	movw	r0, #2290	; 0x8f2
 80188e8:	e7f2      	b.n	80188d0 <_ZN8touchgfx12TextProvider17adjustArabicGlyphEPKNS_4FontEPKNS_9GlyphNodeEt+0x1e8>
 80188ea:	f640 00fa 	movw	r0, #2298	; 0x8fa
 80188ee:	4283      	cmp	r3, r0
 80188f0:	d805      	bhi.n	80188fe <_ZN8touchgfx12TextProvider17adjustArabicGlyphEPKNS_4FontEPKNS_9GlyphNodeEt+0x216>
 80188f2:	f640 00f9 	movw	r0, #2297	; 0x8f9
 80188f6:	4283      	cmp	r3, r0
 80188f8:	f4ff af2f 	bcc.w	801875a <_ZN8touchgfx12TextProvider17adjustArabicGlyphEPKNS_4FontEPKNS_9GlyphNodeEt+0x72>
 80188fc:	e754      	b.n	80187a8 <_ZN8touchgfx12TextProvider17adjustArabicGlyphEPKNS_4FontEPKNS_9GlyphNodeEt+0xc0>
 80188fe:	f640 00fe 	movw	r0, #2302	; 0x8fe
 8018902:	4283      	cmp	r3, r0
 8018904:	e7af      	b.n	8018866 <_ZN8touchgfx12TextProvider17adjustArabicGlyphEPKNS_4FontEPKNS_9GlyphNodeEt+0x17e>
 8018906:	f104 0c4c 	add.w	ip, r4, #76	; 0x4c
 801890a:	4617      	mov	r7, r2
 801890c:	f102 0808 	add.w	r8, r2, #8
 8018910:	4666      	mov	r6, ip
 8018912:	6838      	ldr	r0, [r7, #0]
 8018914:	6879      	ldr	r1, [r7, #4]
 8018916:	46e6      	mov	lr, ip
 8018918:	e8ae 0003 	stmia.w	lr!, {r0, r1}
 801891c:	3708      	adds	r7, #8
 801891e:	4547      	cmp	r7, r8
 8018920:	46f4      	mov	ip, lr
 8018922:	d1f6      	bne.n	8018912 <_ZN8touchgfx12TextProvider17adjustArabicGlyphEPKNS_4FontEPKNS_9GlyphNodeEt+0x22a>
 8018924:	6838      	ldr	r0, [r7, #0]
 8018926:	f8ce 0000 	str.w	r0, [lr]
 801892a:	88b9      	ldrh	r1, [r7, #4]
 801892c:	f8ae 1004 	strh.w	r1, [lr, #4]
 8018930:	f9b4 005e 	ldrsh.w	r0, [r4, #94]	; 0x5e
 8018934:	f510 4f00 	cmn.w	r0, #32768	; 0x8000
 8018938:	d009      	beq.n	801894e <_ZN8touchgfx12TextProvider17adjustArabicGlyphEPKNS_4FontEPKNS_9GlyphNodeEt+0x266>
 801893a:	7b51      	ldrb	r1, [r2, #13]
 801893c:	7992      	ldrb	r2, [r2, #6]
 801893e:	0149      	lsls	r1, r1, #5
 8018940:	f401 7180 	and.w	r1, r1, #256	; 0x100
 8018944:	4311      	orrs	r1, r2
 8018946:	eba0 0051 	sub.w	r0, r0, r1, lsr #1
 801894a:	f884 0055 	strb.w	r0, [r4, #85]	; 0x55
 801894e:	f513 4f00 	cmn.w	r3, #32768	; 0x8000
 8018952:	b2ad      	uxth	r5, r5
 8018954:	d00d      	beq.n	8018972 <_ZN8touchgfx12TextProvider17adjustArabicGlyphEPKNS_4FontEPKNS_9GlyphNodeEt+0x28a>
 8018956:	442b      	add	r3, r5
 8018958:	b29b      	uxth	r3, r3
 801895a:	f894 2059 	ldrb.w	r2, [r4, #89]	; 0x59
 801895e:	f884 3054 	strb.w	r3, [r4, #84]	; 0x54
 8018962:	10db      	asrs	r3, r3, #3
 8018964:	f022 0260 	bic.w	r2, r2, #96	; 0x60
 8018968:	f003 0360 	and.w	r3, r3, #96	; 0x60
 801896c:	4313      	orrs	r3, r2
 801896e:	f884 3059 	strb.w	r3, [r4, #89]	; 0x59
 8018972:	f894 1059 	ldrb.w	r1, [r4, #89]	; 0x59
 8018976:	00cb      	lsls	r3, r1, #3
 8018978:	f403 7280 	and.w	r2, r3, #256	; 0x100
 801897c:	f894 3054 	ldrb.w	r3, [r4, #84]	; 0x54
 8018980:	064f      	lsls	r7, r1, #25
 8018982:	ea43 0302 	orr.w	r3, r3, r2
 8018986:	bf44      	itt	mi
 8018988:	f5a3 7300 	submi.w	r3, r3, #512	; 0x200
 801898c:	b21b      	sxthmi	r3, r3
 801898e:	f8a4 305a 	strh.w	r3, [r4, #90]	; 0x5a
 8018992:	1b5b      	subs	r3, r3, r5
 8018994:	f8a4 305c 	strh.w	r3, [r4, #92]	; 0x5c
 8018998:	4632      	mov	r2, r6
 801899a:	e6fa      	b.n	8018792 <_ZN8touchgfx12TextProvider17adjustArabicGlyphEPKNS_4FontEPKNS_9GlyphNodeEt+0xaa>
 801899c:	f104 0c4c 	add.w	ip, r4, #76	; 0x4c
 80189a0:	4617      	mov	r7, r2
 80189a2:	f102 0908 	add.w	r9, r2, #8
 80189a6:	4666      	mov	r6, ip
 80189a8:	6838      	ldr	r0, [r7, #0]
 80189aa:	6879      	ldr	r1, [r7, #4]
 80189ac:	46e0      	mov	r8, ip
 80189ae:	e8a8 0003 	stmia.w	r8!, {r0, r1}
 80189b2:	3708      	adds	r7, #8
 80189b4:	454f      	cmp	r7, r9
 80189b6:	46c4      	mov	ip, r8
 80189b8:	d1f6      	bne.n	80189a8 <_ZN8touchgfx12TextProvider17adjustArabicGlyphEPKNS_4FontEPKNS_9GlyphNodeEt+0x2c0>
 80189ba:	6838      	ldr	r0, [r7, #0]
 80189bc:	f8c8 0000 	str.w	r0, [r8]
 80189c0:	88b9      	ldrh	r1, [r7, #4]
 80189c2:	f8a8 1004 	strh.w	r1, [r8, #4]
 80189c6:	f9b4 005e 	ldrsh.w	r0, [r4, #94]	; 0x5e
 80189ca:	f510 4f00 	cmn.w	r0, #32768	; 0x8000
 80189ce:	d009      	beq.n	80189e4 <_ZN8touchgfx12TextProvider17adjustArabicGlyphEPKNS_4FontEPKNS_9GlyphNodeEt+0x2fc>
 80189d0:	7b51      	ldrb	r1, [r2, #13]
 80189d2:	7992      	ldrb	r2, [r2, #6]
 80189d4:	0149      	lsls	r1, r1, #5
 80189d6:	f401 7180 	and.w	r1, r1, #256	; 0x100
 80189da:	4311      	orrs	r1, r2
 80189dc:	eba0 0051 	sub.w	r0, r0, r1, lsr #1
 80189e0:	f884 0055 	strb.w	r0, [r4, #85]	; 0x55
 80189e4:	f513 4f00 	cmn.w	r3, #32768	; 0x8000
 80189e8:	d00e      	beq.n	8018a08 <_ZN8touchgfx12TextProvider17adjustArabicGlyphEPKNS_4FontEPKNS_9GlyphNodeEt+0x320>
 80189ea:	eba3 030e 	sub.w	r3, r3, lr
 80189ee:	f894 2059 	ldrb.w	r2, [r4, #89]	; 0x59
 80189f2:	b29b      	uxth	r3, r3
 80189f4:	f884 3054 	strb.w	r3, [r4, #84]	; 0x54
 80189f8:	10db      	asrs	r3, r3, #3
 80189fa:	f003 0360 	and.w	r3, r3, #96	; 0x60
 80189fe:	f022 0260 	bic.w	r2, r2, #96	; 0x60
 8018a02:	4313      	orrs	r3, r2
 8018a04:	f884 3059 	strb.w	r3, [r4, #89]	; 0x59
 8018a08:	f894 1059 	ldrb.w	r1, [r4, #89]	; 0x59
 8018a0c:	00cb      	lsls	r3, r1, #3
 8018a0e:	f403 7280 	and.w	r2, r3, #256	; 0x100
 8018a12:	f894 3054 	ldrb.w	r3, [r4, #84]	; 0x54
 8018a16:	0648      	lsls	r0, r1, #25
 8018a18:	ea43 0302 	orr.w	r3, r3, r2
 8018a1c:	bf44      	itt	mi
 8018a1e:	f5a3 7300 	submi.w	r3, r3, #512	; 0x200
 8018a22:	b21b      	sxthmi	r3, r3
 8018a24:	1b5d      	subs	r5, r3, r5
 8018a26:	f8a4 505c 	strh.w	r5, [r4, #92]	; 0x5c
 8018a2a:	e7b5      	b.n	8018998 <_ZN8touchgfx12TextProvider17adjustArabicGlyphEPKNS_4FontEPKNS_9GlyphNodeEt+0x2b0>

08018a2c <_ZN8touchgfx12TextProvider15getNextLigatureEhPKNS_4FontERPKNS_9GlyphNodeE>:
 8018a2c:	e92d 41f0 	stmdb	sp!, {r4, r5, r6, r7, r8, lr}
 8018a30:	461e      	mov	r6, r3
 8018a32:	8ec3      	ldrh	r3, [r0, #54]	; 0x36
 8018a34:	eb00 0343 	add.w	r3, r0, r3, lsl #1
 8018a38:	4604      	mov	r4, r0
 8018a3a:	4617      	mov	r7, r2
 8018a3c:	f8b3 8022 	ldrh.w	r8, [r3, #34]	; 0x22
 8018a40:	f7ef fdf0 	bl	8008624 <_ZN8touchgfx12TextProvider15getNextLigatureEh>
 8018a44:	4605      	mov	r5, r0
 8018a46:	b918      	cbnz	r0, 8018a50 <_ZN8touchgfx12TextProvider15getNextLigatureEhPKNS_4FontERPKNS_9GlyphNodeE+0x24>
 8018a48:	6030      	str	r0, [r6, #0]
 8018a4a:	4628      	mov	r0, r5
 8018a4c:	e8bd 81f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, pc}
 8018a50:	683b      	ldr	r3, [r7, #0]
 8018a52:	4601      	mov	r1, r0
 8018a54:	68db      	ldr	r3, [r3, #12]
 8018a56:	4638      	mov	r0, r7
 8018a58:	4798      	blx	r3
 8018a5a:	f5a8 63c0 	sub.w	r3, r8, #1536	; 0x600
 8018a5e:	f5b3 7f40 	cmp.w	r3, #768	; 0x300
 8018a62:	4602      	mov	r2, r0
 8018a64:	6030      	str	r0, [r6, #0]
 8018a66:	d213      	bcs.n	8018a90 <_ZN8touchgfx12TextProvider15getNextLigatureEhPKNS_4FontERPKNS_9GlyphNodeE+0x64>
 8018a68:	4643      	mov	r3, r8
 8018a6a:	4639      	mov	r1, r7
 8018a6c:	4620      	mov	r0, r4
 8018a6e:	f7ff fe3b 	bl	80186e8 <_ZN8touchgfx12TextProvider17adjustArabicGlyphEPKNS_4FontEPKNS_9GlyphNodeEt>
 8018a72:	6030      	str	r0, [r6, #0]
 8018a74:	6833      	ldr	r3, [r6, #0]
 8018a76:	b143      	cbz	r3, 8018a8a <_ZN8touchgfx12TextProvider15getNextLigatureEhPKNS_4FontERPKNS_9GlyphNodeE+0x5e>
 8018a78:	7b5a      	ldrb	r2, [r3, #13]
 8018a7a:	7a9b      	ldrb	r3, [r3, #10]
 8018a7c:	0052      	lsls	r2, r2, #1
 8018a7e:	f402 7280 	and.w	r2, r2, #256	; 0x100
 8018a82:	4313      	orrs	r3, r2
 8018a84:	bf0c      	ite	eq
 8018a86:	2301      	moveq	r3, #1
 8018a88:	2300      	movne	r3, #0
 8018a8a:	f884 3061 	strb.w	r3, [r4, #97]	; 0x61
 8018a8e:	e7dc      	b.n	8018a4a <_ZN8touchgfx12TextProvider15getNextLigatureEhPKNS_4FontERPKNS_9GlyphNodeE+0x1e>
 8018a90:	f5a5 6360 	sub.w	r3, r5, #3584	; 0xe00
 8018a94:	b29b      	uxth	r3, r3
 8018a96:	2b7f      	cmp	r3, #127	; 0x7f
 8018a98:	d804      	bhi.n	8018aa4 <_ZN8touchgfx12TextProvider15getNextLigatureEhPKNS_4FontERPKNS_9GlyphNodeE+0x78>
 8018a9a:	4639      	mov	r1, r7
 8018a9c:	4620      	mov	r0, r4
 8018a9e:	f7ff fd17 	bl	80184d0 <_ZN8touchgfx12TextProvider15adjustThaiGlyphEPKNS_4FontEPKNS_9GlyphNodeE>
 8018aa2:	e7e6      	b.n	8018a72 <_ZN8touchgfx12TextProvider15getNextLigatureEhPKNS_4FontERPKNS_9GlyphNodeE+0x46>
 8018aa4:	f894 3061 	ldrb.w	r3, [r4, #97]	; 0x61
 8018aa8:	2b00      	cmp	r3, #0
 8018aaa:	d0e3      	beq.n	8018a74 <_ZN8touchgfx12TextProvider15getNextLigatureEhPKNS_4FontERPKNS_9GlyphNodeE+0x48>
 8018aac:	f640 1302 	movw	r3, #2306	; 0x902
 8018ab0:	429d      	cmp	r5, r3
 8018ab2:	d1df      	bne.n	8018a74 <_ZN8touchgfx12TextProvider15getNextLigatureEhPKNS_4FontERPKNS_9GlyphNodeE+0x48>
 8018ab4:	4601      	mov	r1, r0
 8018ab6:	4620      	mov	r0, r4
 8018ab8:	f7ff fcdb 	bl	8018472 <_ZN8touchgfx12TextProvider16adjustHindiGlyphEPKNS_9GlyphNodeE>
 8018abc:	e7d9      	b.n	8018a72 <_ZN8touchgfx12TextProvider15getNextLigatureEhPKNS_4FontERPKNS_9GlyphNodeE+0x46>

08018abe <_ZN8touchgfx12TextProvider15getNextLigatureEhPKNS_4FontERPKNS_9GlyphNodeERPKhRh>:
 8018abe:	e92d 43f8 	stmdb	sp!, {r3, r4, r5, r6, r7, r8, r9, lr}
 8018ac2:	461e      	mov	r6, r3
 8018ac4:	8ec3      	ldrh	r3, [r0, #54]	; 0x36
 8018ac6:	eb00 0343 	add.w	r3, r0, r3, lsl #1
 8018aca:	4604      	mov	r4, r0
 8018acc:	4617      	mov	r7, r2
 8018ace:	f8b3 8022 	ldrh.w	r8, [r3, #34]	; 0x22
 8018ad2:	f7ef fda7 	bl	8008624 <_ZN8touchgfx12TextProvider15getNextLigatureEh>
 8018ad6:	4605      	mov	r5, r0
 8018ad8:	b918      	cbnz	r0, 8018ae2 <_ZN8touchgfx12TextProvider15getNextLigatureEhPKNS_4FontERPKNS_9GlyphNodeERPKhRh+0x24>
 8018ada:	6030      	str	r0, [r6, #0]
 8018adc:	4628      	mov	r0, r5
 8018ade:	e8bd 83f8 	ldmia.w	sp!, {r3, r4, r5, r6, r7, r8, r9, pc}
 8018ae2:	683b      	ldr	r3, [r7, #0]
 8018ae4:	4601      	mov	r1, r0
 8018ae6:	f8d3 9008 	ldr.w	r9, [r3, #8]
 8018aea:	4638      	mov	r0, r7
 8018aec:	e9dd 2308 	ldrd	r2, r3, [sp, #32]
 8018af0:	47c8      	blx	r9
 8018af2:	f5a8 63c0 	sub.w	r3, r8, #1536	; 0x600
 8018af6:	f5b3 7f40 	cmp.w	r3, #768	; 0x300
 8018afa:	4602      	mov	r2, r0
 8018afc:	6030      	str	r0, [r6, #0]
 8018afe:	d213      	bcs.n	8018b28 <_ZN8touchgfx12TextProvider15getNextLigatureEhPKNS_4FontERPKNS_9GlyphNodeERPKhRh+0x6a>
 8018b00:	4643      	mov	r3, r8
 8018b02:	4639      	mov	r1, r7
 8018b04:	4620      	mov	r0, r4
 8018b06:	f7ff fdef 	bl	80186e8 <_ZN8touchgfx12TextProvider17adjustArabicGlyphEPKNS_4FontEPKNS_9GlyphNodeEt>
 8018b0a:	6030      	str	r0, [r6, #0]
 8018b0c:	6833      	ldr	r3, [r6, #0]
 8018b0e:	b143      	cbz	r3, 8018b22 <_ZN8touchgfx12TextProvider15getNextLigatureEhPKNS_4FontERPKNS_9GlyphNodeERPKhRh+0x64>
 8018b10:	7b5a      	ldrb	r2, [r3, #13]
 8018b12:	7a9b      	ldrb	r3, [r3, #10]
 8018b14:	0052      	lsls	r2, r2, #1
 8018b16:	f402 7280 	and.w	r2, r2, #256	; 0x100
 8018b1a:	4313      	orrs	r3, r2
 8018b1c:	bf0c      	ite	eq
 8018b1e:	2301      	moveq	r3, #1
 8018b20:	2300      	movne	r3, #0
 8018b22:	f884 3061 	strb.w	r3, [r4, #97]	; 0x61
 8018b26:	e7d9      	b.n	8018adc <_ZN8touchgfx12TextProvider15getNextLigatureEhPKNS_4FontERPKNS_9GlyphNodeERPKhRh+0x1e>
 8018b28:	f5a5 6360 	sub.w	r3, r5, #3584	; 0xe00
 8018b2c:	b29b      	uxth	r3, r3
 8018b2e:	2b7f      	cmp	r3, #127	; 0x7f
 8018b30:	d804      	bhi.n	8018b3c <_ZN8touchgfx12TextProvider15getNextLigatureEhPKNS_4FontERPKNS_9GlyphNodeERPKhRh+0x7e>
 8018b32:	4639      	mov	r1, r7
 8018b34:	4620      	mov	r0, r4
 8018b36:	f7ff fccb 	bl	80184d0 <_ZN8touchgfx12TextProvider15adjustThaiGlyphEPKNS_4FontEPKNS_9GlyphNodeE>
 8018b3a:	e7e6      	b.n	8018b0a <_ZN8touchgfx12TextProvider15getNextLigatureEhPKNS_4FontERPKNS_9GlyphNodeERPKhRh+0x4c>
 8018b3c:	f894 3061 	ldrb.w	r3, [r4, #97]	; 0x61
 8018b40:	2b00      	cmp	r3, #0
 8018b42:	d0e3      	beq.n	8018b0c <_ZN8touchgfx12TextProvider15getNextLigatureEhPKNS_4FontERPKNS_9GlyphNodeERPKhRh+0x4e>
 8018b44:	f640 1302 	movw	r3, #2306	; 0x902
 8018b48:	429d      	cmp	r5, r3
 8018b4a:	d1df      	bne.n	8018b0c <_ZN8touchgfx12TextProvider15getNextLigatureEhPKNS_4FontERPKNS_9GlyphNodeERPKhRh+0x4e>
 8018b4c:	4601      	mov	r1, r0
 8018b4e:	4620      	mov	r0, r4
 8018b50:	f7ff fc8f 	bl	8018472 <_ZN8touchgfx12TextProvider16adjustHindiGlyphEPKNS_9GlyphNodeE>
 8018b54:	e7d9      	b.n	8018b0a <_ZN8touchgfx12TextProvider15getNextLigatureEhPKNS_4FontERPKNS_9GlyphNodeERPKhRh+0x4c>

08018b56 <_ZN8touchgfx12TextProvider15fillInputBufferEv>:
 8018b56:	b510      	push	{r4, lr}
 8018b58:	4604      	mov	r4, r0
 8018b5a:	f8b4 1040 	ldrh.w	r1, [r4, #64]	; 0x40
 8018b5e:	8f23      	ldrh	r3, [r4, #56]	; 0x38
 8018b60:	b1f1      	cbz	r1, 8018ba0 <_ZN8touchgfx12TextProvider15fillInputBufferEv+0x4a>
 8018b62:	2b0a      	cmp	r3, #10
 8018b64:	d02f      	beq.n	8018bc6 <_ZN8touchgfx12TextProvider15fillInputBufferEv+0x70>
 8018b66:	8fe2      	ldrh	r2, [r4, #62]	; 0x3e
 8018b68:	eb04 0042 	add.w	r0, r4, r2, lsl #1
 8018b6c:	3901      	subs	r1, #1
 8018b6e:	8f40      	ldrh	r0, [r0, #58]	; 0x3a
 8018b70:	f8a4 1040 	strh.w	r1, [r4, #64]	; 0x40
 8018b74:	1c51      	adds	r1, r2, #1
 8018b76:	b289      	uxth	r1, r1
 8018b78:	2901      	cmp	r1, #1
 8018b7a:	bf84      	itt	hi
 8018b7c:	f102 32ff 	addhi.w	r2, r2, #4294967295
 8018b80:	87e2      	strhhi	r2, [r4, #62]	; 0x3e
 8018b82:	f103 0201 	add.w	r2, r3, #1
 8018b86:	8722      	strh	r2, [r4, #56]	; 0x38
 8018b88:	8ee2      	ldrh	r2, [r4, #54]	; 0x36
 8018b8a:	bf98      	it	ls
 8018b8c:	87e1      	strhls	r1, [r4, #62]	; 0x3e
 8018b8e:	4413      	add	r3, r2
 8018b90:	b29b      	uxth	r3, r3
 8018b92:	2b09      	cmp	r3, #9
 8018b94:	bf88      	it	hi
 8018b96:	3b0a      	subhi	r3, #10
 8018b98:	eb04 0343 	add.w	r3, r4, r3, lsl #1
 8018b9c:	8458      	strh	r0, [r3, #34]	; 0x22
 8018b9e:	e7dc      	b.n	8018b5a <_ZN8touchgfx12TextProvider15fillInputBufferEv+0x4>
 8018ba0:	8f23      	ldrh	r3, [r4, #56]	; 0x38
 8018ba2:	2b0a      	cmp	r3, #10
 8018ba4:	d00f      	beq.n	8018bc6 <_ZN8touchgfx12TextProvider15fillInputBufferEv+0x70>
 8018ba6:	4620      	mov	r0, r4
 8018ba8:	f7ff fc11 	bl	80183ce <_ZN8touchgfx12TextProvider19getNextCharInternalEv>
 8018bac:	8f23      	ldrh	r3, [r4, #56]	; 0x38
 8018bae:	1c5a      	adds	r2, r3, #1
 8018bb0:	8722      	strh	r2, [r4, #56]	; 0x38
 8018bb2:	8ee2      	ldrh	r2, [r4, #54]	; 0x36
 8018bb4:	4413      	add	r3, r2
 8018bb6:	b29b      	uxth	r3, r3
 8018bb8:	2b09      	cmp	r3, #9
 8018bba:	bf88      	it	hi
 8018bbc:	3b0a      	subhi	r3, #10
 8018bbe:	eb04 0343 	add.w	r3, r4, r3, lsl #1
 8018bc2:	8458      	strh	r0, [r3, #34]	; 0x22
 8018bc4:	e7ec      	b.n	8018ba0 <_ZN8touchgfx12TextProvider15fillInputBufferEv+0x4a>
 8018bc6:	bd10      	pop	{r4, pc}

08018bc8 <_ZN8touchgfx12TextProvider11getNextCharEv>:
 8018bc8:	b538      	push	{r3, r4, r5, lr}
 8018bca:	8ec3      	ldrh	r3, [r0, #54]	; 0x36
 8018bcc:	eb00 0243 	add.w	r2, r0, r3, lsl #1
 8018bd0:	4604      	mov	r4, r0
 8018bd2:	8c55      	ldrh	r5, [r2, #34]	; 0x22
 8018bd4:	8f02      	ldrh	r2, [r0, #56]	; 0x38
 8018bd6:	3a01      	subs	r2, #1
 8018bd8:	8702      	strh	r2, [r0, #56]	; 0x38
 8018bda:	1c5a      	adds	r2, r3, #1
 8018bdc:	b292      	uxth	r2, r2
 8018bde:	2a09      	cmp	r2, #9
 8018be0:	bf86      	itte	hi
 8018be2:	3b09      	subhi	r3, #9
 8018be4:	86c3      	strhhi	r3, [r0, #54]	; 0x36
 8018be6:	86c2      	strhls	r2, [r0, #54]	; 0x36
 8018be8:	f7ff ffb5 	bl	8018b56 <_ZN8touchgfx12TextProvider15fillInputBufferEv>
 8018bec:	8c23      	ldrh	r3, [r4, #32]
 8018bee:	2b01      	cmp	r3, #1
 8018bf0:	bf9c      	itt	ls
 8018bf2:	3301      	addls	r3, #1
 8018bf4:	8423      	strhls	r3, [r4, #32]
 8018bf6:	8be3      	ldrh	r3, [r4, #30]
 8018bf8:	b90b      	cbnz	r3, 8018bfe <_ZN8touchgfx12TextProvider11getNextCharEv+0x36>
 8018bfa:	2302      	movs	r3, #2
 8018bfc:	83e3      	strh	r3, [r4, #30]
 8018bfe:	8be3      	ldrh	r3, [r4, #30]
 8018c00:	3b01      	subs	r3, #1
 8018c02:	b29b      	uxth	r3, r3
 8018c04:	83e3      	strh	r3, [r4, #30]
 8018c06:	eb04 0443 	add.w	r4, r4, r3, lsl #1
 8018c0a:	4628      	mov	r0, r5
 8018c0c:	8365      	strh	r5, [r4, #26]
 8018c0e:	bd38      	pop	{r3, r4, r5, pc}

08018c10 <_ZN8touchgfx12TextProvider22replaceInputCharactersEttPKt>:
 8018c10:	428a      	cmp	r2, r1
 8018c12:	e92d 47f0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, lr}
 8018c16:	8ec7      	ldrh	r7, [r0, #54]	; 0x36
 8018c18:	d931      	bls.n	8018c7e <_ZN8touchgfx12TextProvider22replaceInputCharactersEttPKt+0x6e>
 8018c1a:	8f05      	ldrh	r5, [r0, #56]	; 0x38
 8018c1c:	f8b0 8040 	ldrh.w	r8, [r0, #64]	; 0x40
 8018c20:	f8b0 c03e 	ldrh.w	ip, [r0, #62]	; 0x3e
 8018c24:	19ee      	adds	r6, r5, r7
 8018c26:	1a54      	subs	r4, r2, r1
 8018c28:	3e01      	subs	r6, #1
 8018c2a:	fa1f fe84 	uxth.w	lr, r4
 8018c2e:	b2b4      	uxth	r4, r6
 8018c30:	eba4 090e 	sub.w	r9, r4, lr
 8018c34:	fa1f f989 	uxth.w	r9, r9
 8018c38:	2c09      	cmp	r4, #9
 8018c3a:	4626      	mov	r6, r4
 8018c3c:	bf88      	it	hi
 8018c3e:	f1a4 060a 	subhi.w	r6, r4, #10
 8018c42:	f1bc 0f00 	cmp.w	ip, #0
 8018c46:	bf08      	it	eq
 8018c48:	f04f 0c02 	moveq.w	ip, #2
 8018c4c:	eb00 0646 	add.w	r6, r0, r6, lsl #1
 8018c50:	f10c 3cff 	add.w	ip, ip, #4294967295
 8018c54:	fa1f fc8c 	uxth.w	ip, ip
 8018c58:	3c01      	subs	r4, #1
 8018c5a:	f8b6 a022 	ldrh.w	sl, [r6, #34]	; 0x22
 8018c5e:	b2a4      	uxth	r4, r4
 8018c60:	eb00 064c 	add.w	r6, r0, ip, lsl #1
 8018c64:	454c      	cmp	r4, r9
 8018c66:	f8a6 a03a 	strh.w	sl, [r6, #58]	; 0x3a
 8018c6a:	d1e5      	bne.n	8018c38 <_ZN8touchgfx12TextProvider22replaceInputCharactersEttPKt+0x28>
 8018c6c:	eba5 050e 	sub.w	r5, r5, lr
 8018c70:	eb0e 0408 	add.w	r4, lr, r8
 8018c74:	8705      	strh	r5, [r0, #56]	; 0x38
 8018c76:	f8a0 4040 	strh.w	r4, [r0, #64]	; 0x40
 8018c7a:	f8a0 c03e 	strh.w	ip, [r0, #62]	; 0x3e
 8018c7e:	8f04      	ldrh	r4, [r0, #56]	; 0x38
 8018c80:	1a64      	subs	r4, r4, r1
 8018c82:	4439      	add	r1, r7
 8018c84:	b289      	uxth	r1, r1
 8018c86:	2909      	cmp	r1, #9
 8018c88:	bf88      	it	hi
 8018c8a:	390a      	subhi	r1, #10
 8018c8c:	8704      	strh	r4, [r0, #56]	; 0x38
 8018c8e:	86c1      	strh	r1, [r0, #54]	; 0x36
 8018c90:	250a      	movs	r5, #10
 8018c92:	b18a      	cbz	r2, 8018cb8 <_ZN8touchgfx12TextProvider22replaceInputCharactersEttPKt+0xa8>
 8018c94:	8f01      	ldrh	r1, [r0, #56]	; 0x38
 8018c96:	3a01      	subs	r2, #1
 8018c98:	b292      	uxth	r2, r2
 8018c9a:	3101      	adds	r1, #1
 8018c9c:	f833 4012 	ldrh.w	r4, [r3, r2, lsl #1]
 8018ca0:	8701      	strh	r1, [r0, #56]	; 0x38
 8018ca2:	8ec1      	ldrh	r1, [r0, #54]	; 0x36
 8018ca4:	b901      	cbnz	r1, 8018ca8 <_ZN8touchgfx12TextProvider22replaceInputCharactersEttPKt+0x98>
 8018ca6:	86c5      	strh	r5, [r0, #54]	; 0x36
 8018ca8:	8ec1      	ldrh	r1, [r0, #54]	; 0x36
 8018caa:	3901      	subs	r1, #1
 8018cac:	b289      	uxth	r1, r1
 8018cae:	86c1      	strh	r1, [r0, #54]	; 0x36
 8018cb0:	eb00 0141 	add.w	r1, r0, r1, lsl #1
 8018cb4:	844c      	strh	r4, [r1, #34]	; 0x22
 8018cb6:	e7ec      	b.n	8018c92 <_ZN8touchgfx12TextProvider22replaceInputCharactersEttPKt+0x82>
 8018cb8:	e8bd 47f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, lr}
 8018cbc:	f7ff bf4b 	b.w	8018b56 <_ZN8touchgfx12TextProvider15fillInputBufferEv>

08018cc0 <_ZN8touchgfx12TextProvider13gsubRuleMatchEPKtttt>:
 8018cc0:	b570      	push	{r4, r5, r6, lr}
 8018cc2:	2500      	movs	r5, #0
 8018cc4:	4295      	cmp	r5, r2
 8018cc6:	d011      	beq.n	8018cec <_ZN8touchgfx12TextProvider13gsubRuleMatchEPKtttt+0x2c>
 8018cc8:	8bc4      	ldrh	r4, [r0, #30]
 8018cca:	f831 6b02 	ldrh.w	r6, [r1], #2
 8018cce:	4414      	add	r4, r2
 8018cd0:	3c01      	subs	r4, #1
 8018cd2:	1b64      	subs	r4, r4, r5
 8018cd4:	b2a4      	uxth	r4, r4
 8018cd6:	2c01      	cmp	r4, #1
 8018cd8:	bf88      	it	hi
 8018cda:	3c02      	subhi	r4, #2
 8018cdc:	eb00 0444 	add.w	r4, r0, r4, lsl #1
 8018ce0:	8b64      	ldrh	r4, [r4, #26]
 8018ce2:	42b4      	cmp	r4, r6
 8018ce4:	d117      	bne.n	8018d16 <_ZN8touchgfx12TextProvider13gsubRuleMatchEPKtttt+0x56>
 8018ce6:	3501      	adds	r5, #1
 8018ce8:	b2ad      	uxth	r5, r5
 8018cea:	e7eb      	b.n	8018cc4 <_ZN8touchgfx12TextProvider13gsubRuleMatchEPKtttt+0x4>
 8018cec:	f8bd 2010 	ldrh.w	r2, [sp, #16]
 8018cf0:	2400      	movs	r4, #0
 8018cf2:	4413      	add	r3, r2
 8018cf4:	b2a2      	uxth	r2, r4
 8018cf6:	429a      	cmp	r2, r3
 8018cf8:	da0f      	bge.n	8018d1a <_ZN8touchgfx12TextProvider13gsubRuleMatchEPKtttt+0x5a>
 8018cfa:	8ec6      	ldrh	r6, [r0, #54]	; 0x36
 8018cfc:	f831 5014 	ldrh.w	r5, [r1, r4, lsl #1]
 8018d00:	4432      	add	r2, r6
 8018d02:	b292      	uxth	r2, r2
 8018d04:	2a09      	cmp	r2, #9
 8018d06:	bf88      	it	hi
 8018d08:	3a0a      	subhi	r2, #10
 8018d0a:	eb00 0242 	add.w	r2, r0, r2, lsl #1
 8018d0e:	3401      	adds	r4, #1
 8018d10:	8c52      	ldrh	r2, [r2, #34]	; 0x22
 8018d12:	42aa      	cmp	r2, r5
 8018d14:	d0ee      	beq.n	8018cf4 <_ZN8touchgfx12TextProvider13gsubRuleMatchEPKtttt+0x34>
 8018d16:	2000      	movs	r0, #0
 8018d18:	bd70      	pop	{r4, r5, r6, pc}
 8018d1a:	2001      	movs	r0, #1
 8018d1c:	e7fc      	b.n	8018d18 <_ZN8touchgfx12TextProvider13gsubRuleMatchEPKtttt+0x58>

08018d1e <_ZN8touchgfx12TextProvider14applyGsubRulesEPKtt>:
 8018d1e:	e92d 4ff7 	stmdb	sp!, {r0, r1, r2, r4, r5, r6, r7, r8, r9, sl, fp, lr}
 8018d22:	4605      	mov	r5, r0
 8018d24:	4616      	mov	r6, r2
 8018d26:	1c8c      	adds	r4, r1, #2
 8018d28:	8809      	ldrh	r1, [r1, #0]
 8018d2a:	ea4f 3a11 	mov.w	sl, r1, lsr #12
 8018d2e:	f834 301a 	ldrh.w	r3, [r4, sl, lsl #1]
 8018d32:	42b3      	cmp	r3, r6
 8018d34:	d124      	bne.n	8018d80 <_ZN8touchgfx12TextProvider14applyGsubRulesEPKtt+0x62>
 8018d36:	f3c1 2903 	ubfx	r9, r1, #8, #4
 8018d3a:	f3c1 1803 	ubfx	r8, r1, #4, #4
 8018d3e:	f001 070f 	and.w	r7, r1, #15
 8018d42:	f8cd 8000 	str.w	r8, [sp]
 8018d46:	464b      	mov	r3, r9
 8018d48:	4652      	mov	r2, sl
 8018d4a:	4621      	mov	r1, r4
 8018d4c:	4628      	mov	r0, r5
 8018d4e:	f7ff ffb7 	bl	8018cc0 <_ZN8touchgfx12TextProvider13gsubRuleMatchEPKtttt>
 8018d52:	4683      	mov	fp, r0
 8018d54:	b168      	cbz	r0, 8018d72 <_ZN8touchgfx12TextProvider14applyGsubRulesEPKtt+0x54>
 8018d56:	eb0a 0109 	add.w	r1, sl, r9
 8018d5a:	4441      	add	r1, r8
 8018d5c:	eb04 0341 	add.w	r3, r4, r1, lsl #1
 8018d60:	463a      	mov	r2, r7
 8018d62:	4649      	mov	r1, r9
 8018d64:	4628      	mov	r0, r5
 8018d66:	f7ff ff53 	bl	8018c10 <_ZN8touchgfx12TextProvider22replaceInputCharactersEttPKt>
 8018d6a:	4658      	mov	r0, fp
 8018d6c:	b003      	add	sp, #12
 8018d6e:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
 8018d72:	eb07 010a 	add.w	r1, r7, sl
 8018d76:	4449      	add	r1, r9
 8018d78:	4441      	add	r1, r8
 8018d7a:	eb04 0141 	add.w	r1, r4, r1, lsl #1
 8018d7e:	e7d2      	b.n	8018d26 <_ZN8touchgfx12TextProvider14applyGsubRulesEPKtt+0x8>
 8018d80:	f04f 0b00 	mov.w	fp, #0
 8018d84:	e7f1      	b.n	8018d6a <_ZN8touchgfx12TextProvider14applyGsubRulesEPKtt+0x4c>

08018d86 <_ZNK8touchgfx12TextProvider21gsubTableBinarySearchEtPKtt>:
 8018d86:	b570      	push	{r4, r5, r6, lr}
 8018d88:	8810      	ldrh	r0, [r2, #0]
 8018d8a:	4298      	cmp	r0, r3
 8018d8c:	d817      	bhi.n	8018dbe <_ZNK8touchgfx12TextProvider21gsubTableBinarySearchEtPKtt+0x38>
 8018d8e:	1e48      	subs	r0, r1, #1
 8018d90:	f832 0020 	ldrh.w	r0, [r2, r0, lsl #2]
 8018d94:	4298      	cmp	r0, r3
 8018d96:	d312      	bcc.n	8018dbe <_ZNK8touchgfx12TextProvider21gsubTableBinarySearchEtPKtt+0x38>
 8018d98:	2400      	movs	r4, #0
 8018d9a:	428c      	cmp	r4, r1
 8018d9c:	d20f      	bcs.n	8018dbe <_ZNK8touchgfx12TextProvider21gsubTableBinarySearchEtPKtt+0x38>
 8018d9e:	1860      	adds	r0, r4, r1
 8018da0:	1040      	asrs	r0, r0, #1
 8018da2:	0085      	lsls	r5, r0, #2
 8018da4:	f832 6020 	ldrh.w	r6, [r2, r0, lsl #2]
 8018da8:	42b3      	cmp	r3, r6
 8018daa:	d902      	bls.n	8018db2 <_ZNK8touchgfx12TextProvider21gsubTableBinarySearchEtPKtt+0x2c>
 8018dac:	3001      	adds	r0, #1
 8018dae:	b284      	uxth	r4, r0
 8018db0:	e7f3      	b.n	8018d9a <_ZNK8touchgfx12TextProvider21gsubTableBinarySearchEtPKtt+0x14>
 8018db2:	d201      	bcs.n	8018db8 <_ZNK8touchgfx12TextProvider21gsubTableBinarySearchEtPKtt+0x32>
 8018db4:	b281      	uxth	r1, r0
 8018db6:	e7f0      	b.n	8018d9a <_ZNK8touchgfx12TextProvider21gsubTableBinarySearchEtPKtt+0x14>
 8018db8:	442a      	add	r2, r5
 8018dba:	8850      	ldrh	r0, [r2, #2]
 8018dbc:	bd70      	pop	{r4, r5, r6, pc}
 8018dbe:	2000      	movs	r0, #0
 8018dc0:	e7fc      	b.n	8018dbc <_ZNK8touchgfx12TextProvider21gsubTableBinarySearchEtPKtt+0x36>

08018dc2 <_ZN8touchgfx12TextProvider16substituteGlyphsEv>:
 8018dc2:	e92d 41f0 	stmdb	sp!, {r4, r5, r6, r7, r8, lr}
 8018dc6:	6c45      	ldr	r5, [r0, #68]	; 0x44
 8018dc8:	886f      	ldrh	r7, [r5, #2]
 8018dca:	4604      	mov	r4, r0
 8018dcc:	087f      	lsrs	r7, r7, #1
 8018dce:	260b      	movs	r6, #11
 8018dd0:	3e01      	subs	r6, #1
 8018dd2:	d013      	beq.n	8018dfc <_ZN8touchgfx12TextProvider16substituteGlyphsEv+0x3a>
 8018dd4:	8ee3      	ldrh	r3, [r4, #54]	; 0x36
 8018dd6:	eb04 0343 	add.w	r3, r4, r3, lsl #1
 8018dda:	462a      	mov	r2, r5
 8018ddc:	f8b3 8022 	ldrh.w	r8, [r3, #34]	; 0x22
 8018de0:	4639      	mov	r1, r7
 8018de2:	4643      	mov	r3, r8
 8018de4:	4620      	mov	r0, r4
 8018de6:	f7ff ffce 	bl	8018d86 <_ZNK8touchgfx12TextProvider21gsubTableBinarySearchEtPKtt>
 8018dea:	b138      	cbz	r0, 8018dfc <_ZN8touchgfx12TextProvider16substituteGlyphsEv+0x3a>
 8018dec:	eb05 0140 	add.w	r1, r5, r0, lsl #1
 8018df0:	4642      	mov	r2, r8
 8018df2:	4620      	mov	r0, r4
 8018df4:	f7ff ff93 	bl	8018d1e <_ZN8touchgfx12TextProvider14applyGsubRulesEPKtt>
 8018df8:	2800      	cmp	r0, #0
 8018dfa:	d1e9      	bne.n	8018dd0 <_ZN8touchgfx12TextProvider16substituteGlyphsEv+0xe>
 8018dfc:	e8bd 81f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, pc}

08018e00 <_ZN8touchgfx9GradientsC1EPKNS_7Point3DE>:
 8018e00:	b570      	push	{r4, r5, r6, lr}
 8018e02:	694a      	ldr	r2, [r1, #20]
 8018e04:	6a8d      	ldr	r5, [r1, #40]	; 0x28
 8018e06:	684b      	ldr	r3, [r1, #4]
 8018e08:	6ace      	ldr	r6, [r1, #44]	; 0x2c
 8018e0a:	1b54      	subs	r4, r2, r5
 8018e0c:	f000 8106 	beq.w	801901c <_ZN8touchgfx9GradientsC1EPKNS_7Point3DE+0x21c>
 8018e10:	1b9b      	subs	r3, r3, r6
 8018e12:	d003      	beq.n	8018e1c <_ZN8touchgfx9GradientsC1EPKNS_7Point3DE+0x1c>
 8018e14:	4363      	muls	r3, r4
 8018e16:	2210      	movs	r2, #16
 8018e18:	fb93 f3f2 	sdiv	r3, r3, r2
 8018e1c:	680c      	ldr	r4, [r1, #0]
 8018e1e:	698a      	ldr	r2, [r1, #24]
 8018e20:	1b65      	subs	r5, r4, r5
 8018e22:	f000 80fd 	beq.w	8019020 <_ZN8touchgfx9GradientsC1EPKNS_7Point3DE+0x220>
 8018e26:	1b92      	subs	r2, r2, r6
 8018e28:	d003      	beq.n	8018e32 <_ZN8touchgfx9GradientsC1EPKNS_7Point3DE+0x32>
 8018e2a:	436a      	muls	r2, r5
 8018e2c:	2410      	movs	r4, #16
 8018e2e:	fb92 f2f4 	sdiv	r2, r2, r4
 8018e32:	1a9b      	subs	r3, r3, r2
 8018e34:	ee07 3a90 	vmov	s15, r3
 8018e38:	ed9f 4a88 	vldr	s8, [pc, #544]	; 801905c <_ZN8touchgfx9GradientsC1EPKNS_7Point3DE+0x25c>
 8018e3c:	eef8 7ae7 	vcvt.f32.s32	s15, s15
 8018e40:	eeb7 7a00 	vmov.f32	s14, #112	; 0x3f800000  1.0
 8018e44:	ee67 7a84 	vmul.f32	s15, s15, s8
 8018e48:	460a      	mov	r2, r1
 8018e4a:	ee87 3a27 	vdiv.f32	s6, s14, s15
 8018e4e:	4603      	mov	r3, r0
 8018e50:	f100 040c 	add.w	r4, r0, #12
 8018e54:	eeb1 6a43 	vneg.f32	s12, s6
 8018e58:	edd2 7a02 	vldr	s15, [r2, #8]
 8018e5c:	eec7 6a27 	vdiv.f32	s13, s14, s15
 8018e60:	3214      	adds	r2, #20
 8018e62:	ece3 6a01 	vstmia	r3!, {s13}
 8018e66:	ed52 7a02 	vldr	s15, [r2, #-8]
 8018e6a:	ee67 7aa6 	vmul.f32	s15, s15, s13
 8018e6e:	429c      	cmp	r4, r3
 8018e70:	edc3 7a02 	vstr	s15, [r3, #8]
 8018e74:	ed52 7a01 	vldr	s15, [r2, #-4]
 8018e78:	ee67 7aa6 	vmul.f32	s15, s15, s13
 8018e7c:	edc3 7a05 	vstr	s15, [r3, #20]
 8018e80:	d1ea      	bne.n	8018e58 <_ZN8touchgfx9GradientsC1EPKNS_7Point3DE+0x58>
 8018e82:	6aca      	ldr	r2, [r1, #44]	; 0x2c
 8018e84:	698b      	ldr	r3, [r1, #24]
 8018e86:	edd0 4a02 	vldr	s9, [r0, #8]
 8018e8a:	edd0 3a00 	vldr	s7, [r0]
 8018e8e:	edd0 6a01 	vldr	s13, [r0, #4]
 8018e92:	ed90 5a05 	vldr	s10, [r0, #20]
 8018e96:	ed90 2a03 	vldr	s4, [r0, #12]
 8018e9a:	edd0 5a04 	vldr	s11, [r0, #16]
 8018e9e:	ed90 1a07 	vldr	s2, [r0, #28]
 8018ea2:	edd0 2a06 	vldr	s5, [r0, #24]
 8018ea6:	1a9b      	subs	r3, r3, r2
 8018ea8:	ee07 3a90 	vmov	s15, r3
 8018eac:	684b      	ldr	r3, [r1, #4]
 8018eae:	1a9b      	subs	r3, r3, r2
 8018eb0:	ee07 3a10 	vmov	s14, r3
 8018eb4:	eef8 7ae7 	vcvt.f32.s32	s15, s15
 8018eb8:	ee76 6ae4 	vsub.f32	s13, s13, s9
 8018ebc:	ee67 7a84 	vmul.f32	s15, s15, s8
 8018ec0:	ee73 4ae4 	vsub.f32	s9, s7, s9
 8018ec4:	eeb8 7ac7 	vcvt.f32.s32	s14, s14
 8018ec8:	ee64 7ae7 	vnmul.f32	s15, s9, s15
 8018ecc:	ee27 7a04 	vmul.f32	s14, s14, s8
 8018ed0:	ee75 5ac5 	vsub.f32	s11, s11, s10
 8018ed4:	eee6 7a87 	vfma.f32	s15, s13, s14
 8018ed8:	ee32 5a45 	vsub.f32	s10, s4, s10
 8018edc:	ee67 7a83 	vmul.f32	s15, s15, s6
 8018ee0:	edc0 7a09 	vstr	s15, [r0, #36]	; 0x24
 8018ee4:	6a8c      	ldr	r4, [r1, #40]	; 0x28
 8018ee6:	694a      	ldr	r2, [r1, #20]
 8018ee8:	1b13      	subs	r3, r2, r4
 8018eea:	ee07 3a10 	vmov	s14, r3
 8018eee:	eeb8 7ac7 	vcvt.f32.s32	s14, s14
 8018ef2:	680b      	ldr	r3, [r1, #0]
 8018ef4:	ee27 7a04 	vmul.f32	s14, s14, s8
 8018ef8:	1b1b      	subs	r3, r3, r4
 8018efa:	ee64 4ac7 	vnmul.f32	s9, s9, s14
 8018efe:	ee07 3a10 	vmov	s14, r3
 8018f02:	eeb8 7ac7 	vcvt.f32.s32	s14, s14
 8018f06:	ee27 7a04 	vmul.f32	s14, s14, s8
 8018f0a:	eee6 4a87 	vfma.f32	s9, s13, s14
 8018f0e:	ee64 4a86 	vmul.f32	s9, s9, s12
 8018f12:	edc0 4a0a 	vstr	s9, [r0, #40]	; 0x28
 8018f16:	6aca      	ldr	r2, [r1, #44]	; 0x2c
 8018f18:	698b      	ldr	r3, [r1, #24]
 8018f1a:	1a9b      	subs	r3, r3, r2
 8018f1c:	ee06 3a90 	vmov	s13, r3
 8018f20:	684b      	ldr	r3, [r1, #4]
 8018f22:	1a9b      	subs	r3, r3, r2
 8018f24:	ee07 3a10 	vmov	s14, r3
 8018f28:	eef8 6ae6 	vcvt.f32.s32	s13, s13
 8018f2c:	eeb8 7ac7 	vcvt.f32.s32	s14, s14
 8018f30:	ee66 6a84 	vmul.f32	s13, s13, s8
 8018f34:	ee27 7a04 	vmul.f32	s14, s14, s8
 8018f38:	ee65 6a66 	vnmul.f32	s13, s10, s13
 8018f3c:	eee5 6a87 	vfma.f32	s13, s11, s14
 8018f40:	ee66 6a83 	vmul.f32	s13, s13, s6
 8018f44:	edc0 6a0b 	vstr	s13, [r0, #44]	; 0x2c
 8018f48:	6a8c      	ldr	r4, [r1, #40]	; 0x28
 8018f4a:	694a      	ldr	r2, [r1, #20]
 8018f4c:	1b13      	subs	r3, r2, r4
 8018f4e:	ee07 3a10 	vmov	s14, r3
 8018f52:	eeb8 7ac7 	vcvt.f32.s32	s14, s14
 8018f56:	680b      	ldr	r3, [r1, #0]
 8018f58:	ee27 7a04 	vmul.f32	s14, s14, s8
 8018f5c:	1b1b      	subs	r3, r3, r4
 8018f5e:	ee25 5a47 	vnmul.f32	s10, s10, s14
 8018f62:	ee07 3a10 	vmov	s14, r3
 8018f66:	eeb8 7ac7 	vcvt.f32.s32	s14, s14
 8018f6a:	ee27 7a04 	vmul.f32	s14, s14, s8
 8018f6e:	eea5 5a87 	vfma.f32	s10, s11, s14
 8018f72:	edd0 5a08 	vldr	s11, [r0, #32]
 8018f76:	ee25 5a06 	vmul.f32	s10, s10, s12
 8018f7a:	ee31 1a65 	vsub.f32	s2, s2, s11
 8018f7e:	ed80 5a0c 	vstr	s10, [r0, #48]	; 0x30
 8018f82:	6aca      	ldr	r2, [r1, #44]	; 0x2c
 8018f84:	698b      	ldr	r3, [r1, #24]
 8018f86:	1a9b      	subs	r3, r3, r2
 8018f88:	ee07 3a10 	vmov	s14, r3
 8018f8c:	684b      	ldr	r3, [r1, #4]
 8018f8e:	1a9b      	subs	r3, r3, r2
 8018f90:	ee01 3a90 	vmov	s3, r3
 8018f94:	eeb8 7ac7 	vcvt.f32.s32	s14, s14
 8018f98:	ee72 5ae5 	vsub.f32	s11, s5, s11
 8018f9c:	ee27 7a04 	vmul.f32	s14, s14, s8
 8018fa0:	eef8 1ae1 	vcvt.f32.s32	s3, s3
 8018fa4:	ee25 7ac7 	vnmul.f32	s14, s11, s14
 8018fa8:	ee61 1a84 	vmul.f32	s3, s3, s8
 8018fac:	eea1 7a21 	vfma.f32	s14, s2, s3
 8018fb0:	ee27 7a03 	vmul.f32	s14, s14, s6
 8018fb4:	ed80 7a0d 	vstr	s14, [r0, #52]	; 0x34
 8018fb8:	6a8c      	ldr	r4, [r1, #40]	; 0x28
 8018fba:	694a      	ldr	r2, [r1, #20]
 8018fbc:	1b13      	subs	r3, r2, r4
 8018fbe:	ee03 3a10 	vmov	s6, r3
 8018fc2:	eeb8 3ac3 	vcvt.f32.s32	s6, s6
 8018fc6:	680b      	ldr	r3, [r1, #0]
 8018fc8:	ee23 3a04 	vmul.f32	s6, s6, s8
 8018fcc:	1b1b      	subs	r3, r3, r4
 8018fce:	ee65 5ac3 	vnmul.f32	s11, s11, s6
 8018fd2:	ee03 3a10 	vmov	s6, r3
 8018fd6:	eeb8 3ac3 	vcvt.f32.s32	s6, s6
 8018fda:	ee23 4a04 	vmul.f32	s8, s6, s8
 8018fde:	eee1 5a04 	vfma.f32	s11, s2, s8
 8018fe2:	ee25 6a86 	vmul.f32	s12, s11, s12
 8018fe6:	ee62 5a67 	vnmul.f32	s11, s4, s15
 8018fea:	ed80 6a0e 	vstr	s12, [r0, #56]	; 0x38
 8018fee:	eee3 5aa6 	vfma.f32	s11, s7, s13
 8018ff2:	eef5 5ac0 	vcmpe.f32	s11, #0.0
 8018ff6:	eef1 fa10 	vmrs	APSR_nzcv, fpscr
 8018ffa:	dd13      	ble.n	8019024 <_ZN8touchgfx9GradientsC1EPKNS_7Point3DE+0x224>
 8018ffc:	f44f 4300 	mov.w	r3, #32768	; 0x8000
 8019000:	ee62 7ae7 	vnmul.f32	s15, s5, s15
 8019004:	63c3      	str	r3, [r0, #60]	; 0x3c
 8019006:	eee3 7a87 	vfma.f32	s15, s7, s14
 801900a:	eef5 7ac0 	vcmpe.f32	s15, #0.0
 801900e:	eef1 fa10 	vmrs	APSR_nzcv, fpscr
 8019012:	dd15      	ble.n	8019040 <_ZN8touchgfx9GradientsC1EPKNS_7Point3DE+0x240>
 8019014:	f44f 4300 	mov.w	r3, #32768	; 0x8000
 8019018:	6403      	str	r3, [r0, #64]	; 0x40
 801901a:	bd70      	pop	{r4, r5, r6, pc}
 801901c:	4623      	mov	r3, r4
 801901e:	e6fd      	b.n	8018e1c <_ZN8touchgfx9GradientsC1EPKNS_7Point3DE+0x1c>
 8019020:	462a      	mov	r2, r5
 8019022:	e706      	b.n	8018e32 <_ZN8touchgfx9GradientsC1EPKNS_7Point3DE+0x32>
 8019024:	d502      	bpl.n	801902c <_ZN8touchgfx9GradientsC1EPKNS_7Point3DE+0x22c>
 8019026:	f647 73ff 	movw	r3, #32767	; 0x7fff
 801902a:	e7e9      	b.n	8019000 <_ZN8touchgfx9GradientsC1EPKNS_7Point3DE+0x200>
 801902c:	ee22 2a64 	vnmul.f32	s4, s4, s9
 8019030:	eea3 2a85 	vfma.f32	s4, s7, s10
 8019034:	eeb5 2ac0 	vcmpe.f32	s4, #0.0
 8019038:	eef1 fa10 	vmrs	APSR_nzcv, fpscr
 801903c:	dade      	bge.n	8018ffc <_ZN8touchgfx9GradientsC1EPKNS_7Point3DE+0x1fc>
 801903e:	e7f2      	b.n	8019026 <_ZN8touchgfx9GradientsC1EPKNS_7Point3DE+0x226>
 8019040:	d502      	bpl.n	8019048 <_ZN8touchgfx9GradientsC1EPKNS_7Point3DE+0x248>
 8019042:	f647 73ff 	movw	r3, #32767	; 0x7fff
 8019046:	e7e7      	b.n	8019018 <_ZN8touchgfx9GradientsC1EPKNS_7Point3DE+0x218>
 8019048:	ee62 4ae4 	vnmul.f32	s9, s5, s9
 801904c:	eee3 4a86 	vfma.f32	s9, s7, s12
 8019050:	eef5 4ac0 	vcmpe.f32	s9, #0.0
 8019054:	eef1 fa10 	vmrs	APSR_nzcv, fpscr
 8019058:	dadc      	bge.n	8019014 <_ZN8touchgfx9GradientsC1EPKNS_7Point3DE+0x214>
 801905a:	e7f2      	b.n	8019042 <_ZN8touchgfx9GradientsC1EPKNS_7Point3DE+0x242>
 801905c:	3d800000 	.word	0x3d800000

08019060 <_ZN8touchgfx4EdgeC1ERKNS_9GradientsEPKNS_7Point3DEii>:
 8019060:	e92d 47f0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, lr}
 8019064:	2714      	movs	r7, #20
 8019066:	435f      	muls	r7, r3
 8019068:	eb02 0c07 	add.w	ip, r2, r7
 801906c:	f8dc 5004 	ldr.w	r5, [ip, #4]
 8019070:	f115 0e0f 	adds.w	lr, r5, #15
 8019074:	f100 80a2 	bmi.w	80191bc <_ZN8touchgfx4EdgeC1ERKNS_9GradientsEPKNS_7Point3DEii+0x15c>
 8019078:	ea4f 1e2e 	mov.w	lr, lr, asr #4
 801907c:	9c08      	ldr	r4, [sp, #32]
 801907e:	f8c0 e014 	str.w	lr, [r0, #20]
 8019082:	2614      	movs	r6, #20
 8019084:	4366      	muls	r6, r4
 8019086:	eb02 0806 	add.w	r8, r2, r6
 801908a:	f8d8 5004 	ldr.w	r5, [r8, #4]
 801908e:	f115 040f 	adds.w	r4, r5, #15
 8019092:	f100 809f 	bmi.w	80191d4 <_ZN8touchgfx4EdgeC1ERKNS_9GradientsEPKNS_7Point3DEii+0x174>
 8019096:	1124      	asrs	r4, r4, #4
 8019098:	eba4 040e 	sub.w	r4, r4, lr
 801909c:	6184      	str	r4, [r0, #24]
 801909e:	2c00      	cmp	r4, #0
 80190a0:	f000 808a 	beq.w	80191b8 <_ZN8touchgfx4EdgeC1ERKNS_9GradientsEPKNS_7Point3DEii+0x158>
 80190a4:	f8dc 9004 	ldr.w	r9, [ip, #4]
 80190a8:	f8d8 4004 	ldr.w	r4, [r8, #4]
 80190ac:	5995      	ldr	r5, [r2, r6]
 80190ae:	eba4 0809 	sub.w	r8, r4, r9
 80190b2:	59d4      	ldr	r4, [r2, r7]
 80190b4:	eba5 0a04 	sub.w	sl, r5, r4
 80190b8:	ea4f 150a 	mov.w	r5, sl, lsl #4
 80190bc:	fb0e fe05 	mul.w	lr, lr, r5
 80190c0:	fb0a ee19 	mls	lr, sl, r9, lr
 80190c4:	fb08 e404 	mla	r4, r8, r4, lr
 80190c8:	ea4f 1608 	mov.w	r6, r8, lsl #4
 80190cc:	3c01      	subs	r4, #1
 80190ce:	19a4      	adds	r4, r4, r6
 80190d0:	f100 808c 	bmi.w	80191ec <_ZN8touchgfx4EdgeC1ERKNS_9GradientsEPKNS_7Point3DEii+0x18c>
 80190d4:	fb94 fef6 	sdiv	lr, r4, r6
 80190d8:	f8c0 e000 	str.w	lr, [r0]
 80190dc:	fb06 441e 	mls	r4, r6, lr, r4
 80190e0:	6104      	str	r4, [r0, #16]
 80190e2:	2d00      	cmp	r5, #0
 80190e4:	f2c0 8095 	blt.w	8019212 <_ZN8touchgfx4EdgeC1ERKNS_9GradientsEPKNS_7Point3DEii+0x1b2>
 80190e8:	fb95 f4f6 	sdiv	r4, r5, r6
 80190ec:	6044      	str	r4, [r0, #4]
 80190ee:	fb06 5514 	mls	r5, r6, r4, r5
 80190f2:	6085      	str	r5, [r0, #8]
 80190f4:	60c6      	str	r6, [r0, #12]
 80190f6:	f8dc 4004 	ldr.w	r4, [ip, #4]
 80190fa:	6945      	ldr	r5, [r0, #20]
 80190fc:	59d2      	ldr	r2, [r2, r7]
 80190fe:	eddf 6a4d 	vldr	s13, [pc, #308]	; 8019234 <_ZN8touchgfx4EdgeC1ERKNS_9GradientsEPKNS_7Point3DEii+0x1d4>
 8019102:	ed91 6a0a 	vldr	s12, [r1, #40]	; 0x28
 8019106:	ebc4 1405 	rsb	r4, r4, r5, lsl #4
 801910a:	ee07 4a10 	vmov	s14, r4
 801910e:	6804      	ldr	r4, [r0, #0]
 8019110:	ebc2 1204 	rsb	r2, r2, r4, lsl #4
 8019114:	ee07 2a90 	vmov	s15, r2
 8019118:	eeb8 7ac7 	vcvt.f32.s32	s14, s14
 801911c:	eef8 7ae7 	vcvt.f32.s32	s15, s15
 8019120:	eb01 0383 	add.w	r3, r1, r3, lsl #2
 8019124:	ee27 7a26 	vmul.f32	s14, s14, s13
 8019128:	ee67 7aa6 	vmul.f32	s15, s15, s13
 801912c:	edd3 6a00 	vldr	s13, [r3]
 8019130:	eee6 6a07 	vfma.f32	s13, s12, s14
 8019134:	ed91 6a09 	vldr	s12, [r1, #36]	; 0x24
 8019138:	eee6 6a27 	vfma.f32	s13, s12, s15
 801913c:	edc0 6a07 	vstr	s13, [r0, #28]
 8019140:	edd0 6a01 	vldr	s13, [r0, #4]
 8019144:	edd1 5a09 	vldr	s11, [r1, #36]	; 0x24
 8019148:	ed91 6a0a 	vldr	s12, [r1, #40]	; 0x28
 801914c:	eef8 6ae6 	vcvt.f32.s32	s13, s13
 8019150:	eea6 6aa5 	vfma.f32	s12, s13, s11
 8019154:	ed80 6a08 	vstr	s12, [r0, #32]
 8019158:	6a4a      	ldr	r2, [r1, #36]	; 0x24
 801915a:	6242      	str	r2, [r0, #36]	; 0x24
 801915c:	edd1 5a0c 	vldr	s11, [r1, #48]	; 0x30
 8019160:	ed93 6a03 	vldr	s12, [r3, #12]
 8019164:	eea5 6a87 	vfma.f32	s12, s11, s14
 8019168:	edd1 5a0b 	vldr	s11, [r1, #44]	; 0x2c
 801916c:	eea5 6aa7 	vfma.f32	s12, s11, s15
 8019170:	ed80 6a0a 	vstr	s12, [r0, #40]	; 0x28
 8019174:	edd1 5a0b 	vldr	s11, [r1, #44]	; 0x2c
 8019178:	ed91 6a0c 	vldr	s12, [r1, #48]	; 0x30
 801917c:	eea6 6aa5 	vfma.f32	s12, s13, s11
 8019180:	ed80 6a0b 	vstr	s12, [r0, #44]	; 0x2c
 8019184:	6aca      	ldr	r2, [r1, #44]	; 0x2c
 8019186:	6302      	str	r2, [r0, #48]	; 0x30
 8019188:	ed93 6a06 	vldr	s12, [r3, #24]
 801918c:	edd1 5a0e 	vldr	s11, [r1, #56]	; 0x38
 8019190:	eea5 6a87 	vfma.f32	s12, s11, s14
 8019194:	eeb0 7a46 	vmov.f32	s14, s12
 8019198:	ed91 6a0d 	vldr	s12, [r1, #52]	; 0x34
 801919c:	eea6 7a27 	vfma.f32	s14, s12, s15
 80191a0:	ed80 7a0d 	vstr	s14, [r0, #52]	; 0x34
 80191a4:	ed91 7a0d 	vldr	s14, [r1, #52]	; 0x34
 80191a8:	edd1 7a0e 	vldr	s15, [r1, #56]	; 0x38
 80191ac:	eee6 7a87 	vfma.f32	s15, s13, s14
 80191b0:	edc0 7a0e 	vstr	s15, [r0, #56]	; 0x38
 80191b4:	6b4b      	ldr	r3, [r1, #52]	; 0x34
 80191b6:	63c3      	str	r3, [r0, #60]	; 0x3c
 80191b8:	e8bd 87f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, pc}
 80191bc:	f1c5 0501 	rsb	r5, r5, #1
 80191c0:	f015 050f 	ands.w	r5, r5, #15
 80191c4:	bf18      	it	ne
 80191c6:	2501      	movne	r5, #1
 80191c8:	2410      	movs	r4, #16
 80191ca:	fb9e fef4 	sdiv	lr, lr, r4
 80191ce:	ebae 0e05 	sub.w	lr, lr, r5
 80191d2:	e753      	b.n	801907c <_ZN8touchgfx4EdgeC1ERKNS_9GradientsEPKNS_7Point3DEii+0x1c>
 80191d4:	f1c5 0501 	rsb	r5, r5, #1
 80191d8:	f015 050f 	ands.w	r5, r5, #15
 80191dc:	bf18      	it	ne
 80191de:	2501      	movne	r5, #1
 80191e0:	f04f 0910 	mov.w	r9, #16
 80191e4:	fb94 f4f9 	sdiv	r4, r4, r9
 80191e8:	1b64      	subs	r4, r4, r5
 80191ea:	e755      	b.n	8019098 <_ZN8touchgfx4EdgeC1ERKNS_9GradientsEPKNS_7Point3DEii+0x38>
 80191ec:	4264      	negs	r4, r4
 80191ee:	fb94 fef6 	sdiv	lr, r4, r6
 80191f2:	f1ce 0800 	rsb	r8, lr, #0
 80191f6:	fb06 441e 	mls	r4, r6, lr, r4
 80191fa:	f8c0 8000 	str.w	r8, [r0]
 80191fe:	6104      	str	r4, [r0, #16]
 8019200:	2c00      	cmp	r4, #0
 8019202:	f43f af6e 	beq.w	80190e2 <_ZN8touchgfx4EdgeC1ERKNS_9GradientsEPKNS_7Point3DEii+0x82>
 8019206:	ea6f 0e0e 	mvn.w	lr, lr
 801920a:	f8c0 e000 	str.w	lr, [r0]
 801920e:	1b34      	subs	r4, r6, r4
 8019210:	e766      	b.n	80190e0 <_ZN8touchgfx4EdgeC1ERKNS_9GradientsEPKNS_7Point3DEii+0x80>
 8019212:	426d      	negs	r5, r5
 8019214:	fb95 f4f6 	sdiv	r4, r5, r6
 8019218:	f1c4 0e00 	rsb	lr, r4, #0
 801921c:	fb06 5514 	mls	r5, r6, r4, r5
 8019220:	f8c0 e004 	str.w	lr, [r0, #4]
 8019224:	6085      	str	r5, [r0, #8]
 8019226:	2d00      	cmp	r5, #0
 8019228:	f43f af64 	beq.w	80190f4 <_ZN8touchgfx4EdgeC1ERKNS_9GradientsEPKNS_7Point3DEii+0x94>
 801922c:	43e4      	mvns	r4, r4
 801922e:	6044      	str	r4, [r0, #4]
 8019230:	1b75      	subs	r5, r6, r5
 8019232:	e75e      	b.n	80190f2 <_ZN8touchgfx4EdgeC1ERKNS_9GradientsEPKNS_7Point3DEii+0x92>
 8019234:	3d800000 	.word	0x3d800000

08019238 <_ZN8touchgfx7Unicode6strlenEPKt>:
 8019238:	4602      	mov	r2, r0
 801923a:	b148      	cbz	r0, 8019250 <_ZN8touchgfx7Unicode6strlenEPKt+0x18>
 801923c:	2300      	movs	r3, #0
 801923e:	b298      	uxth	r0, r3
 8019240:	3301      	adds	r3, #1
 8019242:	eb02 0143 	add.w	r1, r2, r3, lsl #1
 8019246:	f831 1c02 	ldrh.w	r1, [r1, #-2]
 801924a:	2900      	cmp	r1, #0
 801924c:	d1f7      	bne.n	801923e <_ZN8touchgfx7Unicode6strlenEPKt+0x6>
 801924e:	4770      	bx	lr
 8019250:	4770      	bx	lr

08019252 <_ZN8touchgfx7Unicode7strncpyEPtPKct>:
 8019252:	b530      	push	{r4, r5, lr}
 8019254:	4604      	mov	r4, r0
 8019256:	b159      	cbz	r1, 8019270 <_ZN8touchgfx7Unicode7strncpyEPtPKct+0x1e>
 8019258:	b148      	cbz	r0, 801926e <_ZN8touchgfx7Unicode7strncpyEPtPKct+0x1c>
 801925a:	2300      	movs	r3, #0
 801925c:	b298      	uxth	r0, r3
 801925e:	4282      	cmp	r2, r0
 8019260:	d905      	bls.n	801926e <_ZN8touchgfx7Unicode7strncpyEPtPKct+0x1c>
 8019262:	5ccd      	ldrb	r5, [r1, r3]
 8019264:	f824 5013 	strh.w	r5, [r4, r3, lsl #1]
 8019268:	3301      	adds	r3, #1
 801926a:	2d00      	cmp	r5, #0
 801926c:	d1f6      	bne.n	801925c <_ZN8touchgfx7Unicode7strncpyEPtPKct+0xa>
 801926e:	bd30      	pop	{r4, r5, pc}
 8019270:	4608      	mov	r0, r1
 8019272:	e7fc      	b.n	801926e <_ZN8touchgfx7Unicode7strncpyEPtPKct+0x1c>

08019274 <_ZN8touchgfx7Unicode4itoaElPtti.part.2>:
 8019274:	b5f0      	push	{r4, r5, r6, r7, lr}
 8019276:	b08b      	sub	sp, #44	; 0x2c
 8019278:	468c      	mov	ip, r1
 801927a:	2100      	movs	r1, #0
 801927c:	f88d 1024 	strb.w	r1, [sp, #36]	; 0x24
 8019280:	4604      	mov	r4, r0
 8019282:	261f      	movs	r6, #31
 8019284:	af01      	add	r7, sp, #4
 8019286:	fb94 fef3 	sdiv	lr, r4, r3
 801928a:	fb03 441e 	mls	r4, r3, lr, r4
 801928e:	ea84 75e4 	eor.w	r5, r4, r4, asr #31
 8019292:	eba5 75e4 	sub.w	r5, r5, r4, asr #31
 8019296:	b2ec      	uxtb	r4, r5
 8019298:	2d09      	cmp	r5, #9
 801929a:	bfd4      	ite	le
 801929c:	3430      	addle	r4, #48	; 0x30
 801929e:	3457      	addgt	r4, #87	; 0x57
 80192a0:	b2e4      	uxtb	r4, r4
 80192a2:	55bc      	strb	r4, [r7, r6]
 80192a4:	4674      	mov	r4, lr
 80192a6:	1e71      	subs	r1, r6, #1
 80192a8:	b974      	cbnz	r4, 80192c8 <_ZN8touchgfx7Unicode4itoaElPtti.part.2+0x54>
 80192aa:	2800      	cmp	r0, #0
 80192ac:	da05      	bge.n	80192ba <_ZN8touchgfx7Unicode4itoaElPtti.part.2+0x46>
 80192ae:	ab0a      	add	r3, sp, #40	; 0x28
 80192b0:	4419      	add	r1, r3
 80192b2:	232d      	movs	r3, #45	; 0x2d
 80192b4:	f801 3c24 	strb.w	r3, [r1, #-36]
 80192b8:	1eb1      	subs	r1, r6, #2
 80192ba:	3101      	adds	r1, #1
 80192bc:	4439      	add	r1, r7
 80192be:	4660      	mov	r0, ip
 80192c0:	f7ff ffc7 	bl	8019252 <_ZN8touchgfx7Unicode7strncpyEPtPKct>
 80192c4:	b00b      	add	sp, #44	; 0x2c
 80192c6:	bdf0      	pop	{r4, r5, r6, r7, pc}
 80192c8:	460e      	mov	r6, r1
 80192ca:	e7dc      	b.n	8019286 <_ZN8touchgfx7Unicode4itoaElPtti.part.2+0x12>

080192cc <_ZN8touchgfx7Unicode4utoaEmPtti.part.3>:
 80192cc:	b5f0      	push	{r4, r5, r6, r7, lr}
 80192ce:	b08b      	sub	sp, #44	; 0x2c
 80192d0:	468c      	mov	ip, r1
 80192d2:	2100      	movs	r1, #0
 80192d4:	f88d 1024 	strb.w	r1, [sp, #36]	; 0x24
 80192d8:	ae01      	add	r6, sp, #4
 80192da:	211f      	movs	r1, #31
 80192dc:	fbb0 f7f3 	udiv	r7, r0, r3
 80192e0:	fb03 0517 	mls	r5, r3, r7, r0
 80192e4:	b2ec      	uxtb	r4, r5
 80192e6:	2d09      	cmp	r5, #9
 80192e8:	bfd4      	ite	le
 80192ea:	3430      	addle	r4, #48	; 0x30
 80192ec:	3457      	addgt	r4, #87	; 0x57
 80192ee:	b2e4      	uxtb	r4, r4
 80192f0:	558c      	strb	r4, [r1, r6]
 80192f2:	4638      	mov	r0, r7
 80192f4:	1e4c      	subs	r4, r1, #1
 80192f6:	b92f      	cbnz	r7, 8019304 <_ZN8touchgfx7Unicode4utoaEmPtti.part.3+0x38>
 80192f8:	4431      	add	r1, r6
 80192fa:	4660      	mov	r0, ip
 80192fc:	f7ff ffa9 	bl	8019252 <_ZN8touchgfx7Unicode7strncpyEPtPKct>
 8019300:	b00b      	add	sp, #44	; 0x2c
 8019302:	bdf0      	pop	{r4, r5, r6, r7, pc}
 8019304:	4621      	mov	r1, r4
 8019306:	e7e9      	b.n	80192dc <_ZN8touchgfx7Unicode4utoaEmPtti.part.3+0x10>

08019308 <_ZN8touchgfx7Unicode4itoaElPtti>:
 8019308:	b410      	push	{r4}
 801930a:	b131      	cbz	r1, 801931a <_ZN8touchgfx7Unicode4itoaElPtti+0x12>
 801930c:	1e9c      	subs	r4, r3, #2
 801930e:	2c22      	cmp	r4, #34	; 0x22
 8019310:	d803      	bhi.n	801931a <_ZN8touchgfx7Unicode4itoaElPtti+0x12>
 8019312:	f85d 4b04 	ldr.w	r4, [sp], #4
 8019316:	f7ff bfad 	b.w	8019274 <_ZN8touchgfx7Unicode4itoaElPtti.part.2>
 801931a:	f85d 4b04 	ldr.w	r4, [sp], #4
 801931e:	4770      	bx	lr

08019320 <_ZN8touchgfx7Unicode13composeStringERPKtttbbibibRitPt>:
 8019320:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 8019324:	4691      	mov	r9, r2
 8019326:	b085      	sub	sp, #20
 8019328:	6802      	ldr	r2, [r0, #0]
 801932a:	9201      	str	r2, [sp, #4]
 801932c:	4688      	mov	r8, r1
 801932e:	4683      	mov	fp, r0
 8019330:	f89d 1040 	ldrb.w	r1, [sp, #64]	; 0x40
 8019334:	9103      	str	r1, [sp, #12]
 8019336:	4610      	mov	r0, r2
 8019338:	461c      	mov	r4, r3
 801933a:	f89d 3048 	ldrb.w	r3, [sp, #72]	; 0x48
 801933e:	9302      	str	r3, [sp, #8]
 8019340:	f7ff ff7a 	bl	8019238 <_ZN8touchgfx7Unicode6strlenEPKt>
 8019344:	f1b8 0f00 	cmp.w	r8, #0
 8019348:	bf0c      	ite	eq
 801934a:	4684      	moveq	ip, r0
 801934c:	f100 0c01 	addne.w	ip, r0, #1
 8019350:	f1b9 0f69 	cmp.w	r9, #105	; 0x69
 8019354:	f89d 6038 	ldrb.w	r6, [sp, #56]	; 0x38
 8019358:	9f0f      	ldr	r7, [sp, #60]	; 0x3c
 801935a:	9d13      	ldr	r5, [sp, #76]	; 0x4c
 801935c:	f8dd a054 	ldr.w	sl, [sp, #84]	; 0x54
 8019360:	9903      	ldr	r1, [sp, #12]
 8019362:	fa1f fc8c 	uxth.w	ip, ip
 8019366:	e9dd 2301 	ldrd	r2, r3, [sp, #4]
 801936a:	d041      	beq.n	80193f0 <_ZN8touchgfx7Unicode13composeStringERPKtttbbibibRitPt+0xd0>
 801936c:	d834      	bhi.n	80193d8 <_ZN8touchgfx7Unicode13composeStringERPKtttbbibibRitPt+0xb8>
 801936e:	f1b9 0f63 	cmp.w	r9, #99	; 0x63
 8019372:	d059      	beq.n	8019428 <_ZN8touchgfx7Unicode13composeStringERPKtttbbibibRitPt+0x108>
 8019374:	f1b9 0f64 	cmp.w	r9, #100	; 0x64
 8019378:	d03a      	beq.n	80193f0 <_ZN8touchgfx7Unicode13composeStringERPKtttbbibibRitPt+0xd0>
 801937a:	f1b9 0f58 	cmp.w	r9, #88	; 0x58
 801937e:	d034      	beq.n	80193ea <_ZN8touchgfx7Unicode13composeStringERPKtttbbibibRitPt+0xca>
 8019380:	2400      	movs	r4, #0
 8019382:	f8bd 2050 	ldrh.w	r2, [sp, #80]	; 0x50
 8019386:	3a01      	subs	r2, #1
 8019388:	b169      	cbz	r1, 80193a6 <_ZN8touchgfx7Unicode13composeStringERPKtttbbibibRitPt+0x86>
 801938a:	9911      	ldr	r1, [sp, #68]	; 0x44
 801938c:	458c      	cmp	ip, r1
 801938e:	da09      	bge.n	80193a4 <_ZN8touchgfx7Unicode13composeStringERPKtttbbibibRitPt+0x84>
 8019390:	eba1 010c 	sub.w	r1, r1, ip
 8019394:	b289      	uxth	r1, r1
 8019396:	b933      	cbnz	r3, 80193a6 <_ZN8touchgfx7Unicode13composeStringERPKtttbbibibRitPt+0x86>
 8019398:	2e00      	cmp	r6, #0
 801939a:	d051      	beq.n	8019440 <_ZN8touchgfx7Unicode13composeStringERPKtttbbibibRitPt+0x120>
 801939c:	2800      	cmp	r0, #0
 801939e:	d04f      	beq.n	8019440 <_ZN8touchgfx7Unicode13composeStringERPKtttbbibibRitPt+0x120>
 80193a0:	440c      	add	r4, r1
 80193a2:	b2a4      	uxth	r4, r4
 80193a4:	2100      	movs	r1, #0
 80193a6:	682b      	ldr	r3, [r5, #0]
 80193a8:	4293      	cmp	r3, r2
 80193aa:	da07      	bge.n	80193bc <_ZN8touchgfx7Unicode13composeStringERPKtttbbibibRitPt+0x9c>
 80193ac:	f1b8 0f00 	cmp.w	r8, #0
 80193b0:	d004      	beq.n	80193bc <_ZN8touchgfx7Unicode13composeStringERPKtttbbibibRitPt+0x9c>
 80193b2:	f82a 8013 	strh.w	r8, [sl, r3, lsl #1]
 80193b6:	682b      	ldr	r3, [r5, #0]
 80193b8:	3301      	adds	r3, #1
 80193ba:	602b      	str	r3, [r5, #0]
 80193bc:	2730      	movs	r7, #48	; 0x30
 80193be:	2c00      	cmp	r4, #0
 80193c0:	d04e      	beq.n	8019460 <_ZN8touchgfx7Unicode13composeStringERPKtttbbibibRitPt+0x140>
 80193c2:	682e      	ldr	r6, [r5, #0]
 80193c4:	3c01      	subs	r4, #1
 80193c6:	42b2      	cmp	r2, r6
 80193c8:	b2a4      	uxth	r4, r4
 80193ca:	dd49      	ble.n	8019460 <_ZN8touchgfx7Unicode13composeStringERPKtttbbibibRitPt+0x140>
 80193cc:	f82a 7016 	strh.w	r7, [sl, r6, lsl #1]
 80193d0:	682b      	ldr	r3, [r5, #0]
 80193d2:	3301      	adds	r3, #1
 80193d4:	602b      	str	r3, [r5, #0]
 80193d6:	e7f2      	b.n	80193be <_ZN8touchgfx7Unicode13composeStringERPKtttbbibibRitPt+0x9e>
 80193d8:	f1b9 0f73 	cmp.w	r9, #115	; 0x73
 80193dc:	d01d      	beq.n	801941a <_ZN8touchgfx7Unicode13composeStringERPKtttbbibibRitPt+0xfa>
 80193de:	f1b9 0f78 	cmp.w	r9, #120	; 0x78
 80193e2:	d002      	beq.n	80193ea <_ZN8touchgfx7Unicode13composeStringERPKtttbbibibRitPt+0xca>
 80193e4:	f1b9 0f6f 	cmp.w	r9, #111	; 0x6f
 80193e8:	e7c9      	b.n	801937e <_ZN8touchgfx7Unicode13composeStringERPKtttbbibibRitPt+0x5e>
 80193ea:	4684      	mov	ip, r0
 80193ec:	f04f 0800 	mov.w	r8, #0
 80193f0:	2c00      	cmp	r4, #0
 80193f2:	d0c6      	beq.n	8019382 <_ZN8touchgfx7Unicode13composeStringERPKtttbbibibRitPt+0x62>
 80193f4:	b947      	cbnz	r7, 8019408 <_ZN8touchgfx7Unicode13composeStringERPKtttbbibibRitPt+0xe8>
 80193f6:	2801      	cmp	r0, #1
 80193f8:	d106      	bne.n	8019408 <_ZN8touchgfx7Unicode13composeStringERPKtttbbibibRitPt+0xe8>
 80193fa:	8814      	ldrh	r4, [r2, #0]
 80193fc:	2c30      	cmp	r4, #48	; 0x30
 80193fe:	bf02      	ittt	eq
 8019400:	3202      	addeq	r2, #2
 8019402:	f8cb 2000 	streq.w	r2, [fp]
 8019406:	4638      	moveq	r0, r7
 8019408:	45bc      	cmp	ip, r7
 801940a:	da14      	bge.n	8019436 <_ZN8touchgfx7Unicode13composeStringERPKtttbbibibRitPt+0x116>
 801940c:	b2bf      	uxth	r7, r7
 801940e:	eba7 040c 	sub.w	r4, r7, ip
 8019412:	b2a4      	uxth	r4, r4
 8019414:	46bc      	mov	ip, r7
 8019416:	2600      	movs	r6, #0
 8019418:	e7b3      	b.n	8019382 <_ZN8touchgfx7Unicode13composeStringERPKtttbbibibRitPt+0x62>
 801941a:	4684      	mov	ip, r0
 801941c:	b16c      	cbz	r4, 801943a <_ZN8touchgfx7Unicode13composeStringERPKtttbbibibRitPt+0x11a>
 801941e:	42b8      	cmp	r0, r7
 8019420:	dd00      	ble.n	8019424 <_ZN8touchgfx7Unicode13composeStringERPKtttbbibibRitPt+0x104>
 8019422:	b2b8      	uxth	r0, r7
 8019424:	2400      	movs	r4, #0
 8019426:	e003      	b.n	8019430 <_ZN8touchgfx7Unicode13composeStringERPKtttbbibibRitPt+0x110>
 8019428:	f04f 0c01 	mov.w	ip, #1
 801942c:	2400      	movs	r4, #0
 801942e:	4660      	mov	r0, ip
 8019430:	4626      	mov	r6, r4
 8019432:	46a0      	mov	r8, r4
 8019434:	e7a5      	b.n	8019382 <_ZN8touchgfx7Unicode13composeStringERPKtttbbibibRitPt+0x62>
 8019436:	2400      	movs	r4, #0
 8019438:	e7ed      	b.n	8019416 <_ZN8touchgfx7Unicode13composeStringERPKtttbbibibRitPt+0xf6>
 801943a:	4626      	mov	r6, r4
 801943c:	46a0      	mov	r8, r4
 801943e:	e7a0      	b.n	8019382 <_ZN8touchgfx7Unicode13composeStringERPKtttbbibibRitPt+0x62>
 8019440:	2900      	cmp	r1, #0
 8019442:	d0b0      	beq.n	80193a6 <_ZN8touchgfx7Unicode13composeStringERPKtttbbibibRitPt+0x86>
 8019444:	2720      	movs	r7, #32
 8019446:	682e      	ldr	r6, [r5, #0]
 8019448:	2900      	cmp	r1, #0
 801944a:	d0ac      	beq.n	80193a6 <_ZN8touchgfx7Unicode13composeStringERPKtttbbibibRitPt+0x86>
 801944c:	3901      	subs	r1, #1
 801944e:	4296      	cmp	r6, r2
 8019450:	b289      	uxth	r1, r1
 8019452:	daa7      	bge.n	80193a4 <_ZN8touchgfx7Unicode13composeStringERPKtttbbibibRitPt+0x84>
 8019454:	f82a 7016 	strh.w	r7, [sl, r6, lsl #1]
 8019458:	682b      	ldr	r3, [r5, #0]
 801945a:	3301      	adds	r3, #1
 801945c:	602b      	str	r3, [r5, #0]
 801945e:	e7f2      	b.n	8019446 <_ZN8touchgfx7Unicode13composeStringERPKtttbbibibRitPt+0x126>
 8019460:	b188      	cbz	r0, 8019486 <_ZN8touchgfx7Unicode13composeStringERPKtttbbibibRitPt+0x166>
 8019462:	682b      	ldr	r3, [r5, #0]
 8019464:	3801      	subs	r0, #1
 8019466:	429a      	cmp	r2, r3
 8019468:	b280      	uxth	r0, r0
 801946a:	dd0c      	ble.n	8019486 <_ZN8touchgfx7Unicode13composeStringERPKtttbbibibRitPt+0x166>
 801946c:	f8db 3000 	ldr.w	r3, [fp]
 8019470:	1c9c      	adds	r4, r3, #2
 8019472:	f8cb 4000 	str.w	r4, [fp]
 8019476:	881c      	ldrh	r4, [r3, #0]
 8019478:	682b      	ldr	r3, [r5, #0]
 801947a:	f82a 4013 	strh.w	r4, [sl, r3, lsl #1]
 801947e:	682b      	ldr	r3, [r5, #0]
 8019480:	3301      	adds	r3, #1
 8019482:	602b      	str	r3, [r5, #0]
 8019484:	e7ec      	b.n	8019460 <_ZN8touchgfx7Unicode13composeStringERPKtttbbibibRitPt+0x140>
 8019486:	2620      	movs	r6, #32
 8019488:	b151      	cbz	r1, 80194a0 <_ZN8touchgfx7Unicode13composeStringERPKtttbbibibRitPt+0x180>
 801948a:	6828      	ldr	r0, [r5, #0]
 801948c:	3901      	subs	r1, #1
 801948e:	4282      	cmp	r2, r0
 8019490:	b289      	uxth	r1, r1
 8019492:	dd05      	ble.n	80194a0 <_ZN8touchgfx7Unicode13composeStringERPKtttbbibibRitPt+0x180>
 8019494:	f82a 6010 	strh.w	r6, [sl, r0, lsl #1]
 8019498:	682b      	ldr	r3, [r5, #0]
 801949a:	3301      	adds	r3, #1
 801949c:	602b      	str	r3, [r5, #0]
 801949e:	e7f3      	b.n	8019488 <_ZN8touchgfx7Unicode13composeStringERPKtttbbibibRitPt+0x168>
 80194a0:	b005      	add	sp, #20
 80194a2:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}

080194a6 <_ZN8touchgfx7Unicode22parseFlagsAndPrecisionERPKtRPKcRtRbS8_S8_S8_RiS8_S9_>:
 80194a6:	e92d 43f0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, lr}
 80194aa:	e9dd 8c07 	ldrd	r8, ip, [sp, #28]
 80194ae:	e9dd e609 	ldrd	lr, r6, [sp, #36]	; 0x24
 80194b2:	e9dd 750b 	ldrd	r7, r5, [sp, #44]	; 0x2c
 80194b6:	2400      	movs	r4, #0
 80194b8:	8014      	strh	r4, [r2, #0]
 80194ba:	701c      	strb	r4, [r3, #0]
 80194bc:	f888 4000 	strb.w	r4, [r8]
 80194c0:	f88c 4000 	strb.w	r4, [ip]
 80194c4:	f88e 4000 	strb.w	r4, [lr]
 80194c8:	703c      	strb	r4, [r7, #0]
 80194ca:	6804      	ldr	r4, [r0, #0]
 80194cc:	b1a4      	cbz	r4, 80194f8 <_ZN8touchgfx7Unicode22parseFlagsAndPrecisionERPKtRPKcRtRbS8_S8_S8_RiS8_S9_+0x52>
 80194ce:	8824      	ldrh	r4, [r4, #0]
 80194d0:	f04f 0901 	mov.w	r9, #1
 80194d4:	b314      	cbz	r4, 801951c <_ZN8touchgfx7Unicode22parseFlagsAndPrecisionERPKtRPKcRtRbS8_S8_S8_RiS8_S9_+0x76>
 80194d6:	2c2b      	cmp	r4, #43	; 0x2b
 80194d8:	d001      	beq.n	80194de <_ZN8touchgfx7Unicode22parseFlagsAndPrecisionERPKtRPKcRtRbS8_S8_S8_RiS8_S9_+0x38>
 80194da:	2c20      	cmp	r4, #32
 80194dc:	d110      	bne.n	8019500 <_ZN8touchgfx7Unicode22parseFlagsAndPrecisionERPKtRPKcRtRbS8_S8_S8_RiS8_S9_+0x5a>
 80194de:	8014      	strh	r4, [r2, #0]
 80194e0:	6804      	ldr	r4, [r0, #0]
 80194e2:	b10c      	cbz	r4, 80194e8 <_ZN8touchgfx7Unicode22parseFlagsAndPrecisionERPKtRPKcRtRbS8_S8_S8_RiS8_S9_+0x42>
 80194e4:	3402      	adds	r4, #2
 80194e6:	6004      	str	r4, [r0, #0]
 80194e8:	680c      	ldr	r4, [r1, #0]
 80194ea:	b10c      	cbz	r4, 80194f0 <_ZN8touchgfx7Unicode22parseFlagsAndPrecisionERPKtRPKcRtRbS8_S8_S8_RiS8_S9_+0x4a>
 80194ec:	3401      	adds	r4, #1
 80194ee:	600c      	str	r4, [r1, #0]
 80194f0:	6804      	ldr	r4, [r0, #0]
 80194f2:	b17c      	cbz	r4, 8019514 <_ZN8touchgfx7Unicode22parseFlagsAndPrecisionERPKtRPKcRtRbS8_S8_S8_RiS8_S9_+0x6e>
 80194f4:	8824      	ldrh	r4, [r4, #0]
 80194f6:	e7ed      	b.n	80194d4 <_ZN8touchgfx7Unicode22parseFlagsAndPrecisionERPKtRPKcRtRbS8_S8_S8_RiS8_S9_+0x2e>
 80194f8:	680c      	ldr	r4, [r1, #0]
 80194fa:	b17c      	cbz	r4, 801951c <_ZN8touchgfx7Unicode22parseFlagsAndPrecisionERPKtRPKcRtRbS8_S8_S8_RiS8_S9_+0x76>
 80194fc:	7824      	ldrb	r4, [r4, #0]
 80194fe:	e7e7      	b.n	80194d0 <_ZN8touchgfx7Unicode22parseFlagsAndPrecisionERPKtRPKcRtRbS8_S8_S8_RiS8_S9_+0x2a>
 8019500:	2c2d      	cmp	r4, #45	; 0x2d
 8019502:	d102      	bne.n	801950a <_ZN8touchgfx7Unicode22parseFlagsAndPrecisionERPKtRPKcRtRbS8_S8_S8_RiS8_S9_+0x64>
 8019504:	f883 9000 	strb.w	r9, [r3]
 8019508:	e7ea      	b.n	80194e0 <_ZN8touchgfx7Unicode22parseFlagsAndPrecisionERPKtRPKcRtRbS8_S8_S8_RiS8_S9_+0x3a>
 801950a:	2c23      	cmp	r4, #35	; 0x23
 801950c:	d107      	bne.n	801951e <_ZN8touchgfx7Unicode22parseFlagsAndPrecisionERPKtRPKcRtRbS8_S8_S8_RiS8_S9_+0x78>
 801950e:	f888 9000 	strb.w	r9, [r8]
 8019512:	e7e5      	b.n	80194e0 <_ZN8touchgfx7Unicode22parseFlagsAndPrecisionERPKtRPKcRtRbS8_S8_S8_RiS8_S9_+0x3a>
 8019514:	680c      	ldr	r4, [r1, #0]
 8019516:	b10c      	cbz	r4, 801951c <_ZN8touchgfx7Unicode22parseFlagsAndPrecisionERPKtRPKcRtRbS8_S8_S8_RiS8_S9_+0x76>
 8019518:	7824      	ldrb	r4, [r4, #0]
 801951a:	e7db      	b.n	80194d4 <_ZN8touchgfx7Unicode22parseFlagsAndPrecisionERPKtRPKcRtRbS8_S8_S8_RiS8_S9_+0x2e>
 801951c:	2400      	movs	r4, #0
 801951e:	f1a4 0330 	sub.w	r3, r4, #48	; 0x30
 8019522:	2b09      	cmp	r3, #9
 8019524:	d901      	bls.n	801952a <_ZN8touchgfx7Unicode22parseFlagsAndPrecisionERPKtRPKcRtRbS8_S8_S8_RiS8_S9_+0x84>
 8019526:	2c2a      	cmp	r4, #42	; 0x2a
 8019528:	d122      	bne.n	8019570 <_ZN8touchgfx7Unicode22parseFlagsAndPrecisionERPKtRPKcRtRbS8_S8_S8_RiS8_S9_+0xca>
 801952a:	2301      	movs	r3, #1
 801952c:	2c30      	cmp	r4, #48	; 0x30
 801952e:	f88e 3000 	strb.w	r3, [lr]
 8019532:	d10d      	bne.n	8019550 <_ZN8touchgfx7Unicode22parseFlagsAndPrecisionERPKtRPKcRtRbS8_S8_S8_RiS8_S9_+0xaa>
 8019534:	f88c 3000 	strb.w	r3, [ip]
 8019538:	6803      	ldr	r3, [r0, #0]
 801953a:	b10b      	cbz	r3, 8019540 <_ZN8touchgfx7Unicode22parseFlagsAndPrecisionERPKtRPKcRtRbS8_S8_S8_RiS8_S9_+0x9a>
 801953c:	3302      	adds	r3, #2
 801953e:	6003      	str	r3, [r0, #0]
 8019540:	680b      	ldr	r3, [r1, #0]
 8019542:	b10b      	cbz	r3, 8019548 <_ZN8touchgfx7Unicode22parseFlagsAndPrecisionERPKtRPKcRtRbS8_S8_S8_RiS8_S9_+0xa2>
 8019544:	3301      	adds	r3, #1
 8019546:	600b      	str	r3, [r1, #0]
 8019548:	6803      	ldr	r3, [r0, #0]
 801954a:	2b00      	cmp	r3, #0
 801954c:	d02f      	beq.n	80195ae <_ZN8touchgfx7Unicode22parseFlagsAndPrecisionERPKtRPKcRtRbS8_S8_S8_RiS8_S9_+0x108>
 801954e:	881c      	ldrh	r4, [r3, #0]
 8019550:	2c2a      	cmp	r4, #42	; 0x2a
 8019552:	d135      	bne.n	80195c0 <_ZN8touchgfx7Unicode22parseFlagsAndPrecisionERPKtRPKcRtRbS8_S8_S8_RiS8_S9_+0x11a>
 8019554:	f04f 33ff 	mov.w	r3, #4294967295
 8019558:	6033      	str	r3, [r6, #0]
 801955a:	6803      	ldr	r3, [r0, #0]
 801955c:	b10b      	cbz	r3, 8019562 <_ZN8touchgfx7Unicode22parseFlagsAndPrecisionERPKtRPKcRtRbS8_S8_S8_RiS8_S9_+0xbc>
 801955e:	3302      	adds	r3, #2
 8019560:	6003      	str	r3, [r0, #0]
 8019562:	680b      	ldr	r3, [r1, #0]
 8019564:	b10b      	cbz	r3, 801956a <_ZN8touchgfx7Unicode22parseFlagsAndPrecisionERPKtRPKcRtRbS8_S8_S8_RiS8_S9_+0xc4>
 8019566:	3301      	adds	r3, #1
 8019568:	600b      	str	r3, [r1, #0]
 801956a:	6803      	ldr	r3, [r0, #0]
 801956c:	b31b      	cbz	r3, 80195b6 <_ZN8touchgfx7Unicode22parseFlagsAndPrecisionERPKtRPKcRtRbS8_S8_S8_RiS8_S9_+0x110>
 801956e:	881c      	ldrh	r4, [r3, #0]
 8019570:	2c2e      	cmp	r4, #46	; 0x2e
 8019572:	d11a      	bne.n	80195aa <_ZN8touchgfx7Unicode22parseFlagsAndPrecisionERPKtRPKcRtRbS8_S8_S8_RiS8_S9_+0x104>
 8019574:	2301      	movs	r3, #1
 8019576:	703b      	strb	r3, [r7, #0]
 8019578:	6803      	ldr	r3, [r0, #0]
 801957a:	b10b      	cbz	r3, 8019580 <_ZN8touchgfx7Unicode22parseFlagsAndPrecisionERPKtRPKcRtRbS8_S8_S8_RiS8_S9_+0xda>
 801957c:	3302      	adds	r3, #2
 801957e:	6003      	str	r3, [r0, #0]
 8019580:	680b      	ldr	r3, [r1, #0]
 8019582:	b10b      	cbz	r3, 8019588 <_ZN8touchgfx7Unicode22parseFlagsAndPrecisionERPKtRPKcRtRbS8_S8_S8_RiS8_S9_+0xe2>
 8019584:	3301      	adds	r3, #1
 8019586:	600b      	str	r3, [r1, #0]
 8019588:	6803      	ldr	r3, [r0, #0]
 801958a:	2b00      	cmp	r3, #0
 801958c:	d036      	beq.n	80195fc <_ZN8touchgfx7Unicode22parseFlagsAndPrecisionERPKtRPKcRtRbS8_S8_S8_RiS8_S9_+0x156>
 801958e:	881b      	ldrh	r3, [r3, #0]
 8019590:	2b2a      	cmp	r3, #42	; 0x2a
 8019592:	d137      	bne.n	8019604 <_ZN8touchgfx7Unicode22parseFlagsAndPrecisionERPKtRPKcRtRbS8_S8_S8_RiS8_S9_+0x15e>
 8019594:	f04f 33ff 	mov.w	r3, #4294967295
 8019598:	602b      	str	r3, [r5, #0]
 801959a:	6803      	ldr	r3, [r0, #0]
 801959c:	b10b      	cbz	r3, 80195a2 <_ZN8touchgfx7Unicode22parseFlagsAndPrecisionERPKtRPKcRtRbS8_S8_S8_RiS8_S9_+0xfc>
 801959e:	3302      	adds	r3, #2
 80195a0:	6003      	str	r3, [r0, #0]
 80195a2:	680b      	ldr	r3, [r1, #0]
 80195a4:	b10b      	cbz	r3, 80195aa <_ZN8touchgfx7Unicode22parseFlagsAndPrecisionERPKtRPKcRtRbS8_S8_S8_RiS8_S9_+0x104>
 80195a6:	3301      	adds	r3, #1
 80195a8:	600b      	str	r3, [r1, #0]
 80195aa:	e8bd 83f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, pc}
 80195ae:	680c      	ldr	r4, [r1, #0]
 80195b0:	b134      	cbz	r4, 80195c0 <_ZN8touchgfx7Unicode22parseFlagsAndPrecisionERPKtRPKcRtRbS8_S8_S8_RiS8_S9_+0x11a>
 80195b2:	7824      	ldrb	r4, [r4, #0]
 80195b4:	e7cc      	b.n	8019550 <_ZN8touchgfx7Unicode22parseFlagsAndPrecisionERPKtRPKcRtRbS8_S8_S8_RiS8_S9_+0xaa>
 80195b6:	680b      	ldr	r3, [r1, #0]
 80195b8:	2b00      	cmp	r3, #0
 80195ba:	d0f6      	beq.n	80195aa <_ZN8touchgfx7Unicode22parseFlagsAndPrecisionERPKtRPKcRtRbS8_S8_S8_RiS8_S9_+0x104>
 80195bc:	781c      	ldrb	r4, [r3, #0]
 80195be:	e7d7      	b.n	8019570 <_ZN8touchgfx7Unicode22parseFlagsAndPrecisionERPKtRPKcRtRbS8_S8_S8_RiS8_S9_+0xca>
 80195c0:	2300      	movs	r3, #0
 80195c2:	6033      	str	r3, [r6, #0]
 80195c4:	220a      	movs	r2, #10
 80195c6:	f1a4 0c30 	sub.w	ip, r4, #48	; 0x30
 80195ca:	fa1f f38c 	uxth.w	r3, ip
 80195ce:	2b09      	cmp	r3, #9
 80195d0:	d8ce      	bhi.n	8019570 <_ZN8touchgfx7Unicode22parseFlagsAndPrecisionERPKtRPKcRtRbS8_S8_S8_RiS8_S9_+0xca>
 80195d2:	6833      	ldr	r3, [r6, #0]
 80195d4:	fb02 c303 	mla	r3, r2, r3, ip
 80195d8:	6033      	str	r3, [r6, #0]
 80195da:	6803      	ldr	r3, [r0, #0]
 80195dc:	b10b      	cbz	r3, 80195e2 <_ZN8touchgfx7Unicode22parseFlagsAndPrecisionERPKtRPKcRtRbS8_S8_S8_RiS8_S9_+0x13c>
 80195de:	3302      	adds	r3, #2
 80195e0:	6003      	str	r3, [r0, #0]
 80195e2:	680b      	ldr	r3, [r1, #0]
 80195e4:	b10b      	cbz	r3, 80195ea <_ZN8touchgfx7Unicode22parseFlagsAndPrecisionERPKtRPKcRtRbS8_S8_S8_RiS8_S9_+0x144>
 80195e6:	3301      	adds	r3, #1
 80195e8:	600b      	str	r3, [r1, #0]
 80195ea:	6803      	ldr	r3, [r0, #0]
 80195ec:	b10b      	cbz	r3, 80195f2 <_ZN8touchgfx7Unicode22parseFlagsAndPrecisionERPKtRPKcRtRbS8_S8_S8_RiS8_S9_+0x14c>
 80195ee:	881c      	ldrh	r4, [r3, #0]
 80195f0:	e7e9      	b.n	80195c6 <_ZN8touchgfx7Unicode22parseFlagsAndPrecisionERPKtRPKcRtRbS8_S8_S8_RiS8_S9_+0x120>
 80195f2:	680c      	ldr	r4, [r1, #0]
 80195f4:	2c00      	cmp	r4, #0
 80195f6:	d0e6      	beq.n	80195c6 <_ZN8touchgfx7Unicode22parseFlagsAndPrecisionERPKtRPKcRtRbS8_S8_S8_RiS8_S9_+0x120>
 80195f8:	7824      	ldrb	r4, [r4, #0]
 80195fa:	e7e4      	b.n	80195c6 <_ZN8touchgfx7Unicode22parseFlagsAndPrecisionERPKtRPKcRtRbS8_S8_S8_RiS8_S9_+0x120>
 80195fc:	680b      	ldr	r3, [r1, #0]
 80195fe:	b10b      	cbz	r3, 8019604 <_ZN8touchgfx7Unicode22parseFlagsAndPrecisionERPKtRPKcRtRbS8_S8_S8_RiS8_S9_+0x15e>
 8019600:	781b      	ldrb	r3, [r3, #0]
 8019602:	e7c5      	b.n	8019590 <_ZN8touchgfx7Unicode22parseFlagsAndPrecisionERPKtRPKcRtRbS8_S8_S8_RiS8_S9_+0xea>
 8019604:	2200      	movs	r2, #0
 8019606:	602a      	str	r2, [r5, #0]
 8019608:	240a      	movs	r4, #10
 801960a:	3b30      	subs	r3, #48	; 0x30
 801960c:	b29e      	uxth	r6, r3
 801960e:	2e09      	cmp	r6, #9
 8019610:	682a      	ldr	r2, [r5, #0]
 8019612:	d813      	bhi.n	801963c <_ZN8touchgfx7Unicode22parseFlagsAndPrecisionERPKtRPKcRtRbS8_S8_S8_RiS8_S9_+0x196>
 8019614:	fb04 3302 	mla	r3, r4, r2, r3
 8019618:	602b      	str	r3, [r5, #0]
 801961a:	6803      	ldr	r3, [r0, #0]
 801961c:	b10b      	cbz	r3, 8019622 <_ZN8touchgfx7Unicode22parseFlagsAndPrecisionERPKtRPKcRtRbS8_S8_S8_RiS8_S9_+0x17c>
 801961e:	3302      	adds	r3, #2
 8019620:	6003      	str	r3, [r0, #0]
 8019622:	680b      	ldr	r3, [r1, #0]
 8019624:	b10b      	cbz	r3, 801962a <_ZN8touchgfx7Unicode22parseFlagsAndPrecisionERPKtRPKcRtRbS8_S8_S8_RiS8_S9_+0x184>
 8019626:	3301      	adds	r3, #1
 8019628:	600b      	str	r3, [r1, #0]
 801962a:	6803      	ldr	r3, [r0, #0]
 801962c:	b10b      	cbz	r3, 8019632 <_ZN8touchgfx7Unicode22parseFlagsAndPrecisionERPKtRPKcRtRbS8_S8_S8_RiS8_S9_+0x18c>
 801962e:	881b      	ldrh	r3, [r3, #0]
 8019630:	e7eb      	b.n	801960a <_ZN8touchgfx7Unicode22parseFlagsAndPrecisionERPKtRPKcRtRbS8_S8_S8_RiS8_S9_+0x164>
 8019632:	680b      	ldr	r3, [r1, #0]
 8019634:	2b00      	cmp	r3, #0
 8019636:	d0e8      	beq.n	801960a <_ZN8touchgfx7Unicode22parseFlagsAndPrecisionERPKtRPKcRtRbS8_S8_S8_RiS8_S9_+0x164>
 8019638:	781b      	ldrb	r3, [r3, #0]
 801963a:	e7e6      	b.n	801960a <_ZN8touchgfx7Unicode22parseFlagsAndPrecisionERPKtRPKcRtRbS8_S8_S8_RiS8_S9_+0x164>
 801963c:	2a06      	cmp	r2, #6
 801963e:	bfa8      	it	ge
 8019640:	2206      	movge	r2, #6
 8019642:	602a      	str	r2, [r5, #0]
 8019644:	e7b1      	b.n	80195aa <_ZN8touchgfx7Unicode22parseFlagsAndPrecisionERPKtRPKcRtRbS8_S8_S8_RiS8_S9_+0x104>

08019646 <_ZN8touchgfx7Unicode9vsnprintfEPttPKtPKcSt9__va_list>:
 8019646:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 801964a:	b0a3      	sub	sp, #140	; 0x8c
 801964c:	2600      	movs	r6, #0
 801964e:	f10d 0944 	add.w	r9, sp, #68	; 0x44
 8019652:	4607      	mov	r7, r0
 8019654:	4688      	mov	r8, r1
 8019656:	e9cd 3208 	strd	r3, r2, [sp, #32]
 801965a:	4631      	mov	r1, r6
 801965c:	2242      	movs	r2, #66	; 0x42
 801965e:	4648      	mov	r0, r9
 8019660:	9c2c      	ldr	r4, [sp, #176]	; 0xb0
 8019662:	960d      	str	r6, [sp, #52]	; 0x34
 8019664:	f012 f881 	bl	802b76a <memset>
 8019668:	b15f      	cbz	r7, 8019682 <_ZN8touchgfx7Unicode9vsnprintfEPttPKtPKcSt9__va_list+0x3c>
 801966a:	f108 3aff 	add.w	sl, r8, #4294967295
 801966e:	9a09      	ldr	r2, [sp, #36]	; 0x24
 8019670:	9b0d      	ldr	r3, [sp, #52]	; 0x34
 8019672:	b152      	cbz	r2, 801968a <_ZN8touchgfx7Unicode9vsnprintfEPttPKtPKcSt9__va_list+0x44>
 8019674:	8812      	ldrh	r2, [r2, #0]
 8019676:	b10a      	cbz	r2, 801967c <_ZN8touchgfx7Unicode9vsnprintfEPttPKtPKcSt9__va_list+0x36>
 8019678:	459a      	cmp	sl, r3
 801967a:	dc2e      	bgt.n	80196da <_ZN8touchgfx7Unicode9vsnprintfEPttPKtPKcSt9__va_list+0x94>
 801967c:	2200      	movs	r2, #0
 801967e:	f827 2013 	strh.w	r2, [r7, r3, lsl #1]
 8019682:	4638      	mov	r0, r7
 8019684:	b023      	add	sp, #140	; 0x8c
 8019686:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
 801968a:	9a08      	ldr	r2, [sp, #32]
 801968c:	2a00      	cmp	r2, #0
 801968e:	d0f5      	beq.n	801967c <_ZN8touchgfx7Unicode9vsnprintfEPttPKtPKcSt9__va_list+0x36>
 8019690:	7812      	ldrb	r2, [r2, #0]
 8019692:	e7f0      	b.n	8019676 <_ZN8touchgfx7Unicode9vsnprintfEPttPKtPKcSt9__va_list+0x30>
 8019694:	2d00      	cmp	r5, #0
 8019696:	d0ea      	beq.n	801966e <_ZN8touchgfx7Unicode9vsnprintfEPttPKtPKcSt9__va_list+0x28>
 8019698:	782a      	ldrb	r2, [r5, #0]
 801969a:	b142      	cbz	r2, 80196ae <_ZN8touchgfx7Unicode9vsnprintfEPttPKtPKcSt9__va_list+0x68>
 801969c:	2a25      	cmp	r2, #37	; 0x25
 801969e:	d001      	beq.n	80196a4 <_ZN8touchgfx7Unicode9vsnprintfEPttPKtPKcSt9__va_list+0x5e>
 80196a0:	459a      	cmp	sl, r3
 80196a2:	dc08      	bgt.n	80196b6 <_ZN8touchgfx7Unicode9vsnprintfEPttPKtPKcSt9__va_list+0x70>
 80196a4:	f1bb 0f00 	cmp.w	fp, #0
 80196a8:	d121      	bne.n	80196ee <_ZN8touchgfx7Unicode9vsnprintfEPttPKtPKcSt9__va_list+0xa8>
 80196aa:	2d00      	cmp	r5, #0
 80196ac:	d0df      	beq.n	801966e <_ZN8touchgfx7Unicode9vsnprintfEPttPKtPKcSt9__va_list+0x28>
 80196ae:	782a      	ldrb	r2, [r5, #0]
 80196b0:	f04f 0b00 	mov.w	fp, #0
 80196b4:	e01d      	b.n	80196f2 <_ZN8touchgfx7Unicode9vsnprintfEPttPKtPKcSt9__va_list+0xac>
 80196b6:	f1bb 0f00 	cmp.w	fp, #0
 80196ba:	d078      	beq.n	80197ae <_ZN8touchgfx7Unicode9vsnprintfEPttPKtPKcSt9__va_list+0x168>
 80196bc:	f8bb 2000 	ldrh.w	r2, [fp]
 80196c0:	f827 2013 	strh.w	r2, [r7, r3, lsl #1]
 80196c4:	f1bb 0f00 	cmp.w	fp, #0
 80196c8:	d002      	beq.n	80196d0 <_ZN8touchgfx7Unicode9vsnprintfEPttPKtPKcSt9__va_list+0x8a>
 80196ca:	f10b 0202 	add.w	r2, fp, #2
 80196ce:	9209      	str	r2, [sp, #36]	; 0x24
 80196d0:	b10d      	cbz	r5, 80196d6 <_ZN8touchgfx7Unicode9vsnprintfEPttPKtPKcSt9__va_list+0x90>
 80196d2:	3501      	adds	r5, #1
 80196d4:	9508      	str	r5, [sp, #32]
 80196d6:	3301      	adds	r3, #1
 80196d8:	930d      	str	r3, [sp, #52]	; 0x34
 80196da:	e9dd 5b08 	ldrd	r5, fp, [sp, #32]
 80196de:	9b0d      	ldr	r3, [sp, #52]	; 0x34
 80196e0:	f1bb 0f00 	cmp.w	fp, #0
 80196e4:	d0d6      	beq.n	8019694 <_ZN8touchgfx7Unicode9vsnprintfEPttPKtPKcSt9__va_list+0x4e>
 80196e6:	f8bb 2000 	ldrh.w	r2, [fp]
 80196ea:	2a00      	cmp	r2, #0
 80196ec:	d1d6      	bne.n	801969c <_ZN8touchgfx7Unicode9vsnprintfEPttPKtPKcSt9__va_list+0x56>
 80196ee:	f8bb 2000 	ldrh.w	r2, [fp]
 80196f2:	2a00      	cmp	r2, #0
 80196f4:	d0bb      	beq.n	801966e <_ZN8touchgfx7Unicode9vsnprintfEPttPKtPKcSt9__va_list+0x28>
 80196f6:	459a      	cmp	sl, r3
 80196f8:	ddb9      	ble.n	801966e <_ZN8touchgfx7Unicode9vsnprintfEPttPKtPKcSt9__va_list+0x28>
 80196fa:	f8ad 6032 	strh.w	r6, [sp, #50]	; 0x32
 80196fe:	f88d 602d 	strb.w	r6, [sp, #45]	; 0x2d
 8019702:	f88d 602e 	strb.w	r6, [sp, #46]	; 0x2e
 8019706:	f88d 602f 	strb.w	r6, [sp, #47]	; 0x2f
 801970a:	f88d 6030 	strb.w	r6, [sp, #48]	; 0x30
 801970e:	960e      	str	r6, [sp, #56]	; 0x38
 8019710:	f88d 6031 	strb.w	r6, [sp, #49]	; 0x31
 8019714:	960f      	str	r6, [sp, #60]	; 0x3c
 8019716:	f1bb 0f00 	cmp.w	fp, #0
 801971a:	d002      	beq.n	8019722 <_ZN8touchgfx7Unicode9vsnprintfEPttPKtPKcSt9__va_list+0xdc>
 801971c:	f10b 0302 	add.w	r3, fp, #2
 8019720:	9309      	str	r3, [sp, #36]	; 0x24
 8019722:	b10d      	cbz	r5, 8019728 <_ZN8touchgfx7Unicode9vsnprintfEPttPKtPKcSt9__va_list+0xe2>
 8019724:	1c6b      	adds	r3, r5, #1
 8019726:	9308      	str	r3, [sp, #32]
 8019728:	ab0f      	add	r3, sp, #60	; 0x3c
 801972a:	9305      	str	r3, [sp, #20]
 801972c:	f10d 0331 	add.w	r3, sp, #49	; 0x31
 8019730:	9304      	str	r3, [sp, #16]
 8019732:	ab0e      	add	r3, sp, #56	; 0x38
 8019734:	9303      	str	r3, [sp, #12]
 8019736:	ab0c      	add	r3, sp, #48	; 0x30
 8019738:	9302      	str	r3, [sp, #8]
 801973a:	f10d 032f 	add.w	r3, sp, #47	; 0x2f
 801973e:	9301      	str	r3, [sp, #4]
 8019740:	f10d 032e 	add.w	r3, sp, #46	; 0x2e
 8019744:	9300      	str	r3, [sp, #0]
 8019746:	f10d 0232 	add.w	r2, sp, #50	; 0x32
 801974a:	f10d 032d 	add.w	r3, sp, #45	; 0x2d
 801974e:	a908      	add	r1, sp, #32
 8019750:	a809      	add	r0, sp, #36	; 0x24
 8019752:	f7ff fea8 	bl	80194a6 <_ZN8touchgfx7Unicode22parseFlagsAndPrecisionERPKtRPKcRtRbS8_S8_S8_RiS8_S9_>
 8019756:	9b0e      	ldr	r3, [sp, #56]	; 0x38
 8019758:	2b00      	cmp	r3, #0
 801975a:	bfbe      	ittt	lt
 801975c:	6823      	ldrlt	r3, [r4, #0]
 801975e:	ea23 73e3 	biclt.w	r3, r3, r3, asr #31
 8019762:	930e      	strlt	r3, [sp, #56]	; 0x38
 8019764:	9b0f      	ldr	r3, [sp, #60]	; 0x3c
 8019766:	bfb8      	it	lt
 8019768:	3404      	addlt	r4, #4
 801976a:	2b00      	cmp	r3, #0
 801976c:	bfb8      	it	lt
 801976e:	6823      	ldrlt	r3, [r4, #0]
 8019770:	e9dd 2108 	ldrd	r2, r1, [sp, #32]
 8019774:	bfbe      	ittt	lt
 8019776:	ea23 73e3 	biclt.w	r3, r3, r3, asr #31
 801977a:	930f      	strlt	r3, [sp, #60]	; 0x3c
 801977c:	3404      	addlt	r4, #4
 801977e:	b1d9      	cbz	r1, 80197b8 <_ZN8touchgfx7Unicode9vsnprintfEPttPKtPKcSt9__va_list+0x172>
 8019780:	880b      	ldrh	r3, [r1, #0]
 8019782:	2b69      	cmp	r3, #105	; 0x69
 8019784:	d01f      	beq.n	80197c6 <_ZN8touchgfx7Unicode9vsnprintfEPttPKtPKcSt9__va_list+0x180>
 8019786:	d82f      	bhi.n	80197e8 <_ZN8touchgfx7Unicode9vsnprintfEPttPKtPKcSt9__va_list+0x1a2>
 8019788:	2b58      	cmp	r3, #88	; 0x58
 801978a:	d01c      	beq.n	80197c6 <_ZN8touchgfx7Unicode9vsnprintfEPttPKtPKcSt9__va_list+0x180>
 801978c:	d818      	bhi.n	80197c0 <_ZN8touchgfx7Unicode9vsnprintfEPttPKtPKcSt9__va_list+0x17a>
 801978e:	2b25      	cmp	r3, #37	; 0x25
 8019790:	d034      	beq.n	80197fc <_ZN8touchgfx7Unicode9vsnprintfEPttPKtPKcSt9__va_list+0x1b6>
 8019792:	e9cd 5b08 	strd	r5, fp, [sp, #32]
 8019796:	9b0d      	ldr	r3, [sp, #52]	; 0x34
 8019798:	f1bb 0f00 	cmp.w	fp, #0
 801979c:	f000 80b8 	beq.w	8019910 <_ZN8touchgfx7Unicode9vsnprintfEPttPKtPKcSt9__va_list+0x2ca>
 80197a0:	f8bb 5000 	ldrh.w	r5, [fp]
 80197a4:	f827 5013 	strh.w	r5, [r7, r3, lsl #1]
 80197a8:	3301      	adds	r3, #1
 80197aa:	930d      	str	r3, [sp, #52]	; 0x34
 80197ac:	e029      	b.n	8019802 <_ZN8touchgfx7Unicode9vsnprintfEPttPKtPKcSt9__va_list+0x1bc>
 80197ae:	b10d      	cbz	r5, 80197b4 <_ZN8touchgfx7Unicode9vsnprintfEPttPKtPKcSt9__va_list+0x16e>
 80197b0:	782a      	ldrb	r2, [r5, #0]
 80197b2:	e785      	b.n	80196c0 <_ZN8touchgfx7Unicode9vsnprintfEPttPKtPKcSt9__va_list+0x7a>
 80197b4:	462a      	mov	r2, r5
 80197b6:	e783      	b.n	80196c0 <_ZN8touchgfx7Unicode9vsnprintfEPttPKtPKcSt9__va_list+0x7a>
 80197b8:	2a00      	cmp	r2, #0
 80197ba:	d0ea      	beq.n	8019792 <_ZN8touchgfx7Unicode9vsnprintfEPttPKtPKcSt9__va_list+0x14c>
 80197bc:	7813      	ldrb	r3, [r2, #0]
 80197be:	e7e0      	b.n	8019782 <_ZN8touchgfx7Unicode9vsnprintfEPttPKtPKcSt9__va_list+0x13c>
 80197c0:	3b63      	subs	r3, #99	; 0x63
 80197c2:	2b01      	cmp	r3, #1
 80197c4:	d8e5      	bhi.n	8019792 <_ZN8touchgfx7Unicode9vsnprintfEPttPKtPKcSt9__va_list+0x14c>
 80197c6:	f8cd 9040 	str.w	r9, [sp, #64]	; 0x40
 80197ca:	b329      	cbz	r1, 8019818 <_ZN8touchgfx7Unicode9vsnprintfEPttPKtPKcSt9__va_list+0x1d2>
 80197cc:	880b      	ldrh	r3, [r1, #0]
 80197ce:	2b69      	cmp	r3, #105	; 0x69
 80197d0:	d063      	beq.n	801989a <_ZN8touchgfx7Unicode9vsnprintfEPttPKtPKcSt9__va_list+0x254>
 80197d2:	d825      	bhi.n	8019820 <_ZN8touchgfx7Unicode9vsnprintfEPttPKtPKcSt9__va_list+0x1da>
 80197d4:	2b63      	cmp	r3, #99	; 0x63
 80197d6:	d038      	beq.n	801984a <_ZN8touchgfx7Unicode9vsnprintfEPttPKtPKcSt9__va_list+0x204>
 80197d8:	2b64      	cmp	r3, #100	; 0x64
 80197da:	d05e      	beq.n	801989a <_ZN8touchgfx7Unicode9vsnprintfEPttPKtPKcSt9__va_list+0x254>
 80197dc:	2b58      	cmp	r3, #88	; 0x58
 80197de:	d07b      	beq.n	80198d8 <_ZN8touchgfx7Unicode9vsnprintfEPttPKtPKcSt9__va_list+0x292>
 80197e0:	f8ad 6044 	strh.w	r6, [sp, #68]	; 0x44
 80197e4:	4625      	mov	r5, r4
 80197e6:	e036      	b.n	8019856 <_ZN8touchgfx7Unicode9vsnprintfEPttPKtPKcSt9__va_list+0x210>
 80197e8:	2b73      	cmp	r3, #115	; 0x73
 80197ea:	d0ec      	beq.n	80197c6 <_ZN8touchgfx7Unicode9vsnprintfEPttPKtPKcSt9__va_list+0x180>
 80197ec:	d802      	bhi.n	80197f4 <_ZN8touchgfx7Unicode9vsnprintfEPttPKtPKcSt9__va_list+0x1ae>
 80197ee:	2b6f      	cmp	r3, #111	; 0x6f
 80197f0:	d1cf      	bne.n	8019792 <_ZN8touchgfx7Unicode9vsnprintfEPttPKtPKcSt9__va_list+0x14c>
 80197f2:	e7e8      	b.n	80197c6 <_ZN8touchgfx7Unicode9vsnprintfEPttPKtPKcSt9__va_list+0x180>
 80197f4:	2b75      	cmp	r3, #117	; 0x75
 80197f6:	d0e6      	beq.n	80197c6 <_ZN8touchgfx7Unicode9vsnprintfEPttPKtPKcSt9__va_list+0x180>
 80197f8:	2b78      	cmp	r3, #120	; 0x78
 80197fa:	e7f9      	b.n	80197f0 <_ZN8touchgfx7Unicode9vsnprintfEPttPKtPKcSt9__va_list+0x1aa>
 80197fc:	9a0d      	ldr	r2, [sp, #52]	; 0x34
 80197fe:	f827 3012 	strh.w	r3, [r7, r2, lsl #1]
 8019802:	9b09      	ldr	r3, [sp, #36]	; 0x24
 8019804:	b10b      	cbz	r3, 801980a <_ZN8touchgfx7Unicode9vsnprintfEPttPKtPKcSt9__va_list+0x1c4>
 8019806:	3302      	adds	r3, #2
 8019808:	9309      	str	r3, [sp, #36]	; 0x24
 801980a:	9b08      	ldr	r3, [sp, #32]
 801980c:	2b00      	cmp	r3, #0
 801980e:	f43f af2e 	beq.w	801966e <_ZN8touchgfx7Unicode9vsnprintfEPttPKtPKcSt9__va_list+0x28>
 8019812:	3301      	adds	r3, #1
 8019814:	9308      	str	r3, [sp, #32]
 8019816:	e72a      	b.n	801966e <_ZN8touchgfx7Unicode9vsnprintfEPttPKtPKcSt9__va_list+0x28>
 8019818:	2a00      	cmp	r2, #0
 801981a:	d0e1      	beq.n	80197e0 <_ZN8touchgfx7Unicode9vsnprintfEPttPKtPKcSt9__va_list+0x19a>
 801981c:	7813      	ldrb	r3, [r2, #0]
 801981e:	e7d6      	b.n	80197ce <_ZN8touchgfx7Unicode9vsnprintfEPttPKtPKcSt9__va_list+0x188>
 8019820:	2b73      	cmp	r3, #115	; 0x73
 8019822:	d036      	beq.n	8019892 <_ZN8touchgfx7Unicode9vsnprintfEPttPKtPKcSt9__va_list+0x24c>
 8019824:	d807      	bhi.n	8019836 <_ZN8touchgfx7Unicode9vsnprintfEPttPKtPKcSt9__va_list+0x1f0>
 8019826:	2b6f      	cmp	r3, #111	; 0x6f
 8019828:	d1da      	bne.n	80197e0 <_ZN8touchgfx7Unicode9vsnprintfEPttPKtPKcSt9__va_list+0x19a>
 801982a:	9a0d      	ldr	r2, [sp, #52]	; 0x34
 801982c:	1d25      	adds	r5, r4, #4
 801982e:	eba8 0202 	sub.w	r2, r8, r2
 8019832:	2308      	movs	r3, #8
 8019834:	e04a      	b.n	80198cc <_ZN8touchgfx7Unicode9vsnprintfEPttPKtPKcSt9__va_list+0x286>
 8019836:	2b75      	cmp	r3, #117	; 0x75
 8019838:	d043      	beq.n	80198c2 <_ZN8touchgfx7Unicode9vsnprintfEPttPKtPKcSt9__va_list+0x27c>
 801983a:	2b78      	cmp	r3, #120	; 0x78
 801983c:	d1d0      	bne.n	80197e0 <_ZN8touchgfx7Unicode9vsnprintfEPttPKtPKcSt9__va_list+0x19a>
 801983e:	9a0d      	ldr	r2, [sp, #52]	; 0x34
 8019840:	1d25      	adds	r5, r4, #4
 8019842:	eba8 0202 	sub.w	r2, r8, r2
 8019846:	2310      	movs	r3, #16
 8019848:	e040      	b.n	80198cc <_ZN8touchgfx7Unicode9vsnprintfEPttPKtPKcSt9__va_list+0x286>
 801984a:	6823      	ldr	r3, [r4, #0]
 801984c:	f8ad 3044 	strh.w	r3, [sp, #68]	; 0x44
 8019850:	1d25      	adds	r5, r4, #4
 8019852:	f8ad 6046 	strh.w	r6, [sp, #70]	; 0x46
 8019856:	9b09      	ldr	r3, [sp, #36]	; 0x24
 8019858:	f8bd 1032 	ldrh.w	r1, [sp, #50]	; 0x32
 801985c:	2b00      	cmp	r3, #0
 801985e:	d052      	beq.n	8019906 <_ZN8touchgfx7Unicode9vsnprintfEPttPKtPKcSt9__va_list+0x2c0>
 8019860:	881a      	ldrh	r2, [r3, #0]
 8019862:	f89d 3031 	ldrb.w	r3, [sp, #49]	; 0x31
 8019866:	a80d      	add	r0, sp, #52	; 0x34
 8019868:	9005      	str	r0, [sp, #20]
 801986a:	f89d 002d 	ldrb.w	r0, [sp, #45]	; 0x2d
 801986e:	9004      	str	r0, [sp, #16]
 8019870:	980e      	ldr	r0, [sp, #56]	; 0x38
 8019872:	9003      	str	r0, [sp, #12]
 8019874:	f89d 0030 	ldrb.w	r0, [sp, #48]	; 0x30
 8019878:	9002      	str	r0, [sp, #8]
 801987a:	980f      	ldr	r0, [sp, #60]	; 0x3c
 801987c:	9001      	str	r0, [sp, #4]
 801987e:	f89d 002f 	ldrb.w	r0, [sp, #47]	; 0x2f
 8019882:	9000      	str	r0, [sp, #0]
 8019884:	e9cd 8706 	strd	r8, r7, [sp, #24]
 8019888:	a810      	add	r0, sp, #64	; 0x40
 801988a:	f7ff fd49 	bl	8019320 <_ZN8touchgfx7Unicode13composeStringERPKtttbbibibRitPt>
 801988e:	462c      	mov	r4, r5
 8019890:	e7b7      	b.n	8019802 <_ZN8touchgfx7Unicode9vsnprintfEPttPKtPKcSt9__va_list+0x1bc>
 8019892:	6823      	ldr	r3, [r4, #0]
 8019894:	1d25      	adds	r5, r4, #4
 8019896:	9310      	str	r3, [sp, #64]	; 0x40
 8019898:	e7dd      	b.n	8019856 <_ZN8touchgfx7Unicode9vsnprintfEPttPKtPKcSt9__va_list+0x210>
 801989a:	9a0d      	ldr	r2, [sp, #52]	; 0x34
 801989c:	6820      	ldr	r0, [r4, #0]
 801989e:	eba8 0202 	sub.w	r2, r8, r2
 80198a2:	230a      	movs	r3, #10
 80198a4:	b292      	uxth	r2, r2
 80198a6:	4649      	mov	r1, r9
 80198a8:	f7ff fce4 	bl	8019274 <_ZN8touchgfx7Unicode4itoaElPtti.part.2>
 80198ac:	f8bd 3044 	ldrh.w	r3, [sp, #68]	; 0x44
 80198b0:	2b2d      	cmp	r3, #45	; 0x2d
 80198b2:	f104 0504 	add.w	r5, r4, #4
 80198b6:	d1ce      	bne.n	8019856 <_ZN8touchgfx7Unicode9vsnprintfEPttPKtPKcSt9__va_list+0x210>
 80198b8:	f8ad 3032 	strh.w	r3, [sp, #50]	; 0x32
 80198bc:	9b10      	ldr	r3, [sp, #64]	; 0x40
 80198be:	3302      	adds	r3, #2
 80198c0:	e7e9      	b.n	8019896 <_ZN8touchgfx7Unicode9vsnprintfEPttPKtPKcSt9__va_list+0x250>
 80198c2:	9a0d      	ldr	r2, [sp, #52]	; 0x34
 80198c4:	1d25      	adds	r5, r4, #4
 80198c6:	eba8 0202 	sub.w	r2, r8, r2
 80198ca:	230a      	movs	r3, #10
 80198cc:	b292      	uxth	r2, r2
 80198ce:	4649      	mov	r1, r9
 80198d0:	6820      	ldr	r0, [r4, #0]
 80198d2:	f7ff fcfb 	bl	80192cc <_ZN8touchgfx7Unicode4utoaEmPtti.part.3>
 80198d6:	e7be      	b.n	8019856 <_ZN8touchgfx7Unicode9vsnprintfEPttPKtPKcSt9__va_list+0x210>
 80198d8:	9a0d      	ldr	r2, [sp, #52]	; 0x34
 80198da:	6820      	ldr	r0, [r4, #0]
 80198dc:	eba8 0202 	sub.w	r2, r8, r2
 80198e0:	b292      	uxth	r2, r2
 80198e2:	2310      	movs	r3, #16
 80198e4:	4649      	mov	r1, r9
 80198e6:	f7ff fcf1 	bl	80192cc <_ZN8touchgfx7Unicode4utoaEmPtti.part.3>
 80198ea:	1d25      	adds	r5, r4, #4
 80198ec:	f10d 0242 	add.w	r2, sp, #66	; 0x42
 80198f0:	f832 3f02 	ldrh.w	r3, [r2, #2]!
 80198f4:	2b00      	cmp	r3, #0
 80198f6:	d0ae      	beq.n	8019856 <_ZN8touchgfx7Unicode9vsnprintfEPttPKtPKcSt9__va_list+0x210>
 80198f8:	f1a3 0161 	sub.w	r1, r3, #97	; 0x61
 80198fc:	2919      	cmp	r1, #25
 80198fe:	d8f7      	bhi.n	80198f0 <_ZN8touchgfx7Unicode9vsnprintfEPttPKtPKcSt9__va_list+0x2aa>
 8019900:	3b20      	subs	r3, #32
 8019902:	8013      	strh	r3, [r2, #0]
 8019904:	e7f4      	b.n	80198f0 <_ZN8touchgfx7Unicode9vsnprintfEPttPKtPKcSt9__va_list+0x2aa>
 8019906:	9a08      	ldr	r2, [sp, #32]
 8019908:	2a00      	cmp	r2, #0
 801990a:	d0aa      	beq.n	8019862 <_ZN8touchgfx7Unicode9vsnprintfEPttPKtPKcSt9__va_list+0x21c>
 801990c:	7812      	ldrb	r2, [r2, #0]
 801990e:	e7a8      	b.n	8019862 <_ZN8touchgfx7Unicode9vsnprintfEPttPKtPKcSt9__va_list+0x21c>
 8019910:	2d00      	cmp	r5, #0
 8019912:	f43f af47 	beq.w	80197a4 <_ZN8touchgfx7Unicode9vsnprintfEPttPKtPKcSt9__va_list+0x15e>
 8019916:	782d      	ldrb	r5, [r5, #0]
 8019918:	e744      	b.n	80197a4 <_ZN8touchgfx7Unicode9vsnprintfEPttPKtPKcSt9__va_list+0x15e>

0801991a <_ZN8touchgfx7Unicode9vsnprintfEPttPKcSt9__va_list>:
 801991a:	b507      	push	{r0, r1, r2, lr}
 801991c:	9300      	str	r3, [sp, #0]
 801991e:	4613      	mov	r3, r2
 8019920:	2200      	movs	r2, #0
 8019922:	f7ff fe90 	bl	8019646 <_ZN8touchgfx7Unicode9vsnprintfEPttPKtPKcSt9__va_list>
 8019926:	b003      	add	sp, #12
 8019928:	f85d fb04 	ldr.w	pc, [sp], #4

0801992c <_ZN8touchgfx7Unicode8snprintfEPttPKcz>:
 801992c:	b40c      	push	{r2, r3}
 801992e:	b507      	push	{r0, r1, r2, lr}
 8019930:	ab04      	add	r3, sp, #16
 8019932:	f853 2b04 	ldr.w	r2, [r3], #4
 8019936:	9301      	str	r3, [sp, #4]
 8019938:	f7ff ffef 	bl	801991a <_ZN8touchgfx7Unicode9vsnprintfEPttPKcSt9__va_list>
 801993c:	b003      	add	sp, #12
 801993e:	f85d eb04 	ldr.w	lr, [sp], #4
 8019942:	b002      	add	sp, #8
 8019944:	4770      	bx	lr
	...

08019948 <_ZN8touchgfx7Unicode14snprintfFloatsEPttPKtPKcPKf>:
 8019948:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 801994c:	b0c5      	sub	sp, #276	; 0x114
 801994e:	2400      	movs	r4, #0
 8019950:	af11      	add	r7, sp, #68	; 0x44
 8019952:	4606      	mov	r6, r0
 8019954:	468a      	mov	sl, r1
 8019956:	e9cd 3208 	strd	r3, r2, [sp, #32]
 801995a:	4621      	mov	r1, r4
 801995c:	22c8      	movs	r2, #200	; 0xc8
 801995e:	4638      	mov	r0, r7
 8019960:	f8dd b138 	ldr.w	fp, [sp, #312]	; 0x138
 8019964:	940d      	str	r4, [sp, #52]	; 0x34
 8019966:	f011 ff00 	bl	802b76a <memset>
 801996a:	b16e      	cbz	r6, 8019988 <_ZN8touchgfx7Unicode14snprintfFloatsEPttPKtPKcPKf+0x40>
 801996c:	ed9f 5aa8 	vldr	s10, [pc, #672]	; 8019c10 <_ZN8touchgfx7Unicode14snprintfFloatsEPttPKtPKcPKf+0x2c8>
 8019970:	9a09      	ldr	r2, [sp, #36]	; 0x24
 8019972:	9b0d      	ldr	r3, [sp, #52]	; 0x34
 8019974:	b162      	cbz	r2, 8019990 <_ZN8touchgfx7Unicode14snprintfFloatsEPttPKtPKcPKf+0x48>
 8019976:	8812      	ldrh	r2, [r2, #0]
 8019978:	b11a      	cbz	r2, 8019982 <_ZN8touchgfx7Unicode14snprintfFloatsEPttPKtPKcPKf+0x3a>
 801997a:	f10a 31ff 	add.w	r1, sl, #4294967295
 801997e:	4299      	cmp	r1, r3
 8019980:	dc2e      	bgt.n	80199e0 <_ZN8touchgfx7Unicode14snprintfFloatsEPttPKtPKcPKf+0x98>
 8019982:	2200      	movs	r2, #0
 8019984:	f826 2013 	strh.w	r2, [r6, r3, lsl #1]
 8019988:	4630      	mov	r0, r6
 801998a:	b045      	add	sp, #276	; 0x114
 801998c:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
 8019990:	9a08      	ldr	r2, [sp, #32]
 8019992:	2a00      	cmp	r2, #0
 8019994:	d0f5      	beq.n	8019982 <_ZN8touchgfx7Unicode14snprintfFloatsEPttPKtPKcPKf+0x3a>
 8019996:	7812      	ldrb	r2, [r2, #0]
 8019998:	e7ee      	b.n	8019978 <_ZN8touchgfx7Unicode14snprintfFloatsEPttPKtPKcPKf+0x30>
 801999a:	2d00      	cmp	r5, #0
 801999c:	d0e8      	beq.n	8019970 <_ZN8touchgfx7Unicode14snprintfFloatsEPttPKtPKcPKf+0x28>
 801999e:	782a      	ldrb	r2, [r5, #0]
 80199a0:	b142      	cbz	r2, 80199b4 <_ZN8touchgfx7Unicode14snprintfFloatsEPttPKtPKcPKf+0x6c>
 80199a2:	2a25      	cmp	r2, #37	; 0x25
 80199a4:	d001      	beq.n	80199aa <_ZN8touchgfx7Unicode14snprintfFloatsEPttPKtPKcPKf+0x62>
 80199a6:	4299      	cmp	r1, r3
 80199a8:	dc08      	bgt.n	80199bc <_ZN8touchgfx7Unicode14snprintfFloatsEPttPKtPKcPKf+0x74>
 80199aa:	f1b8 0f00 	cmp.w	r8, #0
 80199ae:	d121      	bne.n	80199f4 <_ZN8touchgfx7Unicode14snprintfFloatsEPttPKtPKcPKf+0xac>
 80199b0:	2d00      	cmp	r5, #0
 80199b2:	d0dd      	beq.n	8019970 <_ZN8touchgfx7Unicode14snprintfFloatsEPttPKtPKcPKf+0x28>
 80199b4:	782a      	ldrb	r2, [r5, #0]
 80199b6:	f04f 0800 	mov.w	r8, #0
 80199ba:	e01d      	b.n	80199f8 <_ZN8touchgfx7Unicode14snprintfFloatsEPttPKtPKcPKf+0xb0>
 80199bc:	f1b8 0f00 	cmp.w	r8, #0
 80199c0:	d07f      	beq.n	8019ac2 <_ZN8touchgfx7Unicode14snprintfFloatsEPttPKtPKcPKf+0x17a>
 80199c2:	f8b8 2000 	ldrh.w	r2, [r8]
 80199c6:	f826 2013 	strh.w	r2, [r6, r3, lsl #1]
 80199ca:	f1b8 0f00 	cmp.w	r8, #0
 80199ce:	d002      	beq.n	80199d6 <_ZN8touchgfx7Unicode14snprintfFloatsEPttPKtPKcPKf+0x8e>
 80199d0:	f108 0202 	add.w	r2, r8, #2
 80199d4:	9209      	str	r2, [sp, #36]	; 0x24
 80199d6:	b10d      	cbz	r5, 80199dc <_ZN8touchgfx7Unicode14snprintfFloatsEPttPKtPKcPKf+0x94>
 80199d8:	3501      	adds	r5, #1
 80199da:	9508      	str	r5, [sp, #32]
 80199dc:	3301      	adds	r3, #1
 80199de:	930d      	str	r3, [sp, #52]	; 0x34
 80199e0:	e9dd 5808 	ldrd	r5, r8, [sp, #32]
 80199e4:	9b0d      	ldr	r3, [sp, #52]	; 0x34
 80199e6:	f1b8 0f00 	cmp.w	r8, #0
 80199ea:	d0d6      	beq.n	801999a <_ZN8touchgfx7Unicode14snprintfFloatsEPttPKtPKcPKf+0x52>
 80199ec:	f8b8 2000 	ldrh.w	r2, [r8]
 80199f0:	2a00      	cmp	r2, #0
 80199f2:	d1d6      	bne.n	80199a2 <_ZN8touchgfx7Unicode14snprintfFloatsEPttPKtPKcPKf+0x5a>
 80199f4:	f8b8 2000 	ldrh.w	r2, [r8]
 80199f8:	2a00      	cmp	r2, #0
 80199fa:	d0b9      	beq.n	8019970 <_ZN8touchgfx7Unicode14snprintfFloatsEPttPKtPKcPKf+0x28>
 80199fc:	4299      	cmp	r1, r3
 80199fe:	ddb7      	ble.n	8019970 <_ZN8touchgfx7Unicode14snprintfFloatsEPttPKtPKcPKf+0x28>
 8019a00:	2300      	movs	r3, #0
 8019a02:	f8ad 3032 	strh.w	r3, [sp, #50]	; 0x32
 8019a06:	f88d 302d 	strb.w	r3, [sp, #45]	; 0x2d
 8019a0a:	f88d 302e 	strb.w	r3, [sp, #46]	; 0x2e
 8019a0e:	f88d 302f 	strb.w	r3, [sp, #47]	; 0x2f
 8019a12:	f88d 3030 	strb.w	r3, [sp, #48]	; 0x30
 8019a16:	930e      	str	r3, [sp, #56]	; 0x38
 8019a18:	f88d 3031 	strb.w	r3, [sp, #49]	; 0x31
 8019a1c:	930f      	str	r3, [sp, #60]	; 0x3c
 8019a1e:	f1b8 0f00 	cmp.w	r8, #0
 8019a22:	d002      	beq.n	8019a2a <_ZN8touchgfx7Unicode14snprintfFloatsEPttPKtPKcPKf+0xe2>
 8019a24:	f108 0302 	add.w	r3, r8, #2
 8019a28:	9309      	str	r3, [sp, #36]	; 0x24
 8019a2a:	b10d      	cbz	r5, 8019a30 <_ZN8touchgfx7Unicode14snprintfFloatsEPttPKtPKcPKf+0xe8>
 8019a2c:	1c6b      	adds	r3, r5, #1
 8019a2e:	9308      	str	r3, [sp, #32]
 8019a30:	ab0f      	add	r3, sp, #60	; 0x3c
 8019a32:	9305      	str	r3, [sp, #20]
 8019a34:	f10d 0331 	add.w	r3, sp, #49	; 0x31
 8019a38:	9304      	str	r3, [sp, #16]
 8019a3a:	ab0e      	add	r3, sp, #56	; 0x38
 8019a3c:	9303      	str	r3, [sp, #12]
 8019a3e:	ab0c      	add	r3, sp, #48	; 0x30
 8019a40:	9302      	str	r3, [sp, #8]
 8019a42:	f10d 032f 	add.w	r3, sp, #47	; 0x2f
 8019a46:	9301      	str	r3, [sp, #4]
 8019a48:	f10d 032e 	add.w	r3, sp, #46	; 0x2e
 8019a4c:	9300      	str	r3, [sp, #0]
 8019a4e:	f10d 0232 	add.w	r2, sp, #50	; 0x32
 8019a52:	f10d 032d 	add.w	r3, sp, #45	; 0x2d
 8019a56:	a908      	add	r1, sp, #32
 8019a58:	a809      	add	r0, sp, #36	; 0x24
 8019a5a:	f7ff fd24 	bl	80194a6 <_ZN8touchgfx7Unicode22parseFlagsAndPrecisionERPKtRPKcRtRbS8_S8_S8_RiS8_S9_>
 8019a5e:	9b0e      	ldr	r3, [sp, #56]	; 0x38
 8019a60:	2b00      	cmp	r3, #0
 8019a62:	da0b      	bge.n	8019a7c <_ZN8touchgfx7Unicode14snprintfFloatsEPttPKtPKcPKf+0x134>
 8019a64:	eb0b 0384 	add.w	r3, fp, r4, lsl #2
 8019a68:	edd3 7a00 	vldr	s15, [r3]
 8019a6c:	eefd 7ae7 	vcvt.s32.f32	s15, s15
 8019a70:	3401      	adds	r4, #1
 8019a72:	ee17 3a90 	vmov	r3, s15
 8019a76:	ea23 73e3 	bic.w	r3, r3, r3, asr #31
 8019a7a:	930e      	str	r3, [sp, #56]	; 0x38
 8019a7c:	9b0f      	ldr	r3, [sp, #60]	; 0x3c
 8019a7e:	2b00      	cmp	r3, #0
 8019a80:	da0b      	bge.n	8019a9a <_ZN8touchgfx7Unicode14snprintfFloatsEPttPKtPKcPKf+0x152>
 8019a82:	eb0b 0384 	add.w	r3, fp, r4, lsl #2
 8019a86:	edd3 7a00 	vldr	s15, [r3]
 8019a8a:	eefd 7ae7 	vcvt.s32.f32	s15, s15
 8019a8e:	3401      	adds	r4, #1
 8019a90:	ee17 3a90 	vmov	r3, s15
 8019a94:	ea23 73e3 	bic.w	r3, r3, r3, asr #31
 8019a98:	930f      	str	r3, [sp, #60]	; 0x3c
 8019a9a:	9b09      	ldr	r3, [sp, #36]	; 0x24
 8019a9c:	b1b3      	cbz	r3, 8019acc <_ZN8touchgfx7Unicode14snprintfFloatsEPttPKtPKcPKf+0x184>
 8019a9e:	881a      	ldrh	r2, [r3, #0]
 8019aa0:	2a25      	cmp	r2, #37	; 0x25
 8019aa2:	d018      	beq.n	8019ad6 <_ZN8touchgfx7Unicode14snprintfFloatsEPttPKtPKcPKf+0x18e>
 8019aa4:	2a66      	cmp	r2, #102	; 0x66
 8019aa6:	d01c      	beq.n	8019ae2 <_ZN8touchgfx7Unicode14snprintfFloatsEPttPKtPKcPKf+0x19a>
 8019aa8:	e9cd 5808 	strd	r5, r8, [sp, #32]
 8019aac:	9b0d      	ldr	r3, [sp, #52]	; 0x34
 8019aae:	f1b8 0f00 	cmp.w	r8, #0
 8019ab2:	f000 8121 	beq.w	8019cf8 <_ZN8touchgfx7Unicode14snprintfFloatsEPttPKtPKcPKf+0x3b0>
 8019ab6:	f8b8 5000 	ldrh.w	r5, [r8]
 8019aba:	f826 5013 	strh.w	r5, [r6, r3, lsl #1]
 8019abe:	3301      	adds	r3, #1
 8019ac0:	e00d      	b.n	8019ade <_ZN8touchgfx7Unicode14snprintfFloatsEPttPKtPKcPKf+0x196>
 8019ac2:	b10d      	cbz	r5, 8019ac8 <_ZN8touchgfx7Unicode14snprintfFloatsEPttPKtPKcPKf+0x180>
 8019ac4:	782a      	ldrb	r2, [r5, #0]
 8019ac6:	e77e      	b.n	80199c6 <_ZN8touchgfx7Unicode14snprintfFloatsEPttPKtPKcPKf+0x7e>
 8019ac8:	462a      	mov	r2, r5
 8019aca:	e77c      	b.n	80199c6 <_ZN8touchgfx7Unicode14snprintfFloatsEPttPKtPKcPKf+0x7e>
 8019acc:	9b08      	ldr	r3, [sp, #32]
 8019ace:	2b00      	cmp	r3, #0
 8019ad0:	d0ea      	beq.n	8019aa8 <_ZN8touchgfx7Unicode14snprintfFloatsEPttPKtPKcPKf+0x160>
 8019ad2:	781a      	ldrb	r2, [r3, #0]
 8019ad4:	e7e4      	b.n	8019aa0 <_ZN8touchgfx7Unicode14snprintfFloatsEPttPKtPKcPKf+0x158>
 8019ad6:	9b0d      	ldr	r3, [sp, #52]	; 0x34
 8019ad8:	f826 2013 	strh.w	r2, [r6, r3, lsl #1]
 8019adc:	3302      	adds	r3, #2
 8019ade:	930d      	str	r3, [sp, #52]	; 0x34
 8019ae0:	e041      	b.n	8019b66 <_ZN8touchgfx7Unicode14snprintfFloatsEPttPKtPKcPKf+0x21e>
 8019ae2:	eb0b 0384 	add.w	r3, fp, r4, lsl #2
 8019ae6:	edd3 7a00 	vldr	s15, [r3]
 8019aea:	f89d 3031 	ldrb.w	r3, [sp, #49]	; 0x31
 8019aee:	9710      	str	r7, [sp, #64]	; 0x40
 8019af0:	3401      	adds	r4, #1
 8019af2:	b923      	cbnz	r3, 8019afe <_ZN8touchgfx7Unicode14snprintfFloatsEPttPKtPKcPKf+0x1b6>
 8019af4:	2301      	movs	r3, #1
 8019af6:	f88d 3031 	strb.w	r3, [sp, #49]	; 0x31
 8019afa:	2306      	movs	r3, #6
 8019afc:	930f      	str	r3, [sp, #60]	; 0x3c
 8019afe:	eef5 7ac0 	vcmpe.f32	s15, #0.0
 8019b02:	eef1 fa10 	vmrs	APSR_nzcv, fpscr
 8019b06:	bf48      	it	mi
 8019b08:	eef1 7a67 	vnegmi.f32	s15, s15
 8019b0c:	eeb0 7ae7 	vabs.f32	s14, s15
 8019b10:	bf48      	it	mi
 8019b12:	232d      	movmi	r3, #45	; 0x2d
 8019b14:	eeb4 7a45 	vcmp.f32	s14, s10
 8019b18:	bf48      	it	mi
 8019b1a:	f8ad 3032 	strhmi.w	r3, [sp, #50]	; 0x32
 8019b1e:	eef1 fa10 	vmrs	APSR_nzcv, fpscr
 8019b22:	dd2b      	ble.n	8019b7c <_ZN8touchgfx7Unicode14snprintfFloatsEPttPKtPKcPKf+0x234>
 8019b24:	4b3b      	ldr	r3, [pc, #236]	; (8019c14 <_ZN8touchgfx7Unicode14snprintfFloatsEPttPKtPKcPKf+0x2cc>)
 8019b26:	9311      	str	r3, [sp, #68]	; 0x44
 8019b28:	2366      	movs	r3, #102	; 0x66
 8019b2a:	9312      	str	r3, [sp, #72]	; 0x48
 8019b2c:	9b09      	ldr	r3, [sp, #36]	; 0x24
 8019b2e:	f8bd 1032 	ldrh.w	r1, [sp, #50]	; 0x32
 8019b32:	2b00      	cmp	r3, #0
 8019b34:	f000 80da 	beq.w	8019cec <_ZN8touchgfx7Unicode14snprintfFloatsEPttPKtPKcPKf+0x3a4>
 8019b38:	881a      	ldrh	r2, [r3, #0]
 8019b3a:	f89d 3031 	ldrb.w	r3, [sp, #49]	; 0x31
 8019b3e:	a80d      	add	r0, sp, #52	; 0x34
 8019b40:	9005      	str	r0, [sp, #20]
 8019b42:	f89d 002d 	ldrb.w	r0, [sp, #45]	; 0x2d
 8019b46:	9004      	str	r0, [sp, #16]
 8019b48:	980e      	ldr	r0, [sp, #56]	; 0x38
 8019b4a:	9003      	str	r0, [sp, #12]
 8019b4c:	f89d 0030 	ldrb.w	r0, [sp, #48]	; 0x30
 8019b50:	9002      	str	r0, [sp, #8]
 8019b52:	980f      	ldr	r0, [sp, #60]	; 0x3c
 8019b54:	9001      	str	r0, [sp, #4]
 8019b56:	f89d 002f 	ldrb.w	r0, [sp, #47]	; 0x2f
 8019b5a:	9000      	str	r0, [sp, #0]
 8019b5c:	e9cd a606 	strd	sl, r6, [sp, #24]
 8019b60:	a810      	add	r0, sp, #64	; 0x40
 8019b62:	f7ff fbdd 	bl	8019320 <_ZN8touchgfx7Unicode13composeStringERPKtttbbibibRitPt>
 8019b66:	9b09      	ldr	r3, [sp, #36]	; 0x24
 8019b68:	b10b      	cbz	r3, 8019b6e <_ZN8touchgfx7Unicode14snprintfFloatsEPttPKtPKcPKf+0x226>
 8019b6a:	3302      	adds	r3, #2
 8019b6c:	9309      	str	r3, [sp, #36]	; 0x24
 8019b6e:	9b08      	ldr	r3, [sp, #32]
 8019b70:	2b00      	cmp	r3, #0
 8019b72:	f43f aefd 	beq.w	8019970 <_ZN8touchgfx7Unicode14snprintfFloatsEPttPKtPKcPKf+0x28>
 8019b76:	3301      	adds	r3, #1
 8019b78:	9308      	str	r3, [sp, #32]
 8019b7a:	e6f9      	b.n	8019970 <_ZN8touchgfx7Unicode14snprintfFloatsEPttPKtPKcPKf+0x28>
 8019b7c:	eef4 7a67 	vcmp.f32	s15, s15
 8019b80:	eef1 fa10 	vmrs	APSR_nzcv, fpscr
 8019b84:	d63a      	bvs.n	8019bfc <_ZN8touchgfx7Unicode14snprintfFloatsEPttPKtPKcPKf+0x2b4>
 8019b86:	f10d 0846 	add.w	r8, sp, #70	; 0x46
 8019b8a:	eeb2 7a04 	vmov.f32	s14, #36	; 0x41200000  10.0
 8019b8e:	f8cd 8040 	str.w	r8, [sp, #64]	; 0x40
 8019b92:	eeb0 6a67 	vmov.f32	s12, s15
 8019b96:	eef7 6a00 	vmov.f32	s13, #112	; 0x3f800000  1.0
 8019b9a:	eef0 5a47 	vmov.f32	s11, s14
 8019b9e:	eeb4 6ac7 	vcmpe.f32	s12, s14
 8019ba2:	eef1 fa10 	vmrs	APSR_nzcv, fpscr
 8019ba6:	da2d      	bge.n	8019c04 <_ZN8touchgfx7Unicode14snprintfFloatsEPttPKtPKcPKf+0x2bc>
 8019ba8:	9a0d      	ldr	r2, [sp, #52]	; 0x34
 8019baa:	eeb6 6a00 	vmov.f32	s12, #96	; 0x3f000000  0.5
 8019bae:	2100      	movs	r1, #0
 8019bb0:	eef0 4a46 	vmov.f32	s9, s12
 8019bb4:	ebaa 0202 	sub.w	r2, sl, r2
 8019bb8:	eef4 6ac6 	vcmpe.f32	s13, s12
 8019bbc:	eef1 fa10 	vmrs	APSR_nzcv, fpscr
 8019bc0:	b28d      	uxth	r5, r1
 8019bc2:	db2c      	blt.n	8019c1e <_ZN8touchgfx7Unicode14snprintfFloatsEPttPKtPKcPKf+0x2d6>
 8019bc4:	1a53      	subs	r3, r2, r1
 8019bc6:	2b00      	cmp	r3, #0
 8019bc8:	dd29      	ble.n	8019c1e <_ZN8touchgfx7Unicode14snprintfFloatsEPttPKtPKcPKf+0x2d6>
 8019bca:	3101      	adds	r1, #1
 8019bcc:	2964      	cmp	r1, #100	; 0x64
 8019bce:	d025      	beq.n	8019c1c <_ZN8touchgfx7Unicode14snprintfFloatsEPttPKtPKcPKf+0x2d4>
 8019bd0:	ee87 7aa6 	vdiv.f32	s14, s15, s13
 8019bd4:	eebd 7ac7 	vcvt.s32.f32	s14, s14
 8019bd8:	ee17 3a10 	vmov	r3, s14
 8019bdc:	2b09      	cmp	r3, #9
 8019bde:	bfa8      	it	ge
 8019be0:	2309      	movge	r3, #9
 8019be2:	ee07 3a10 	vmov	s14, r3
 8019be6:	eeb8 7ac7 	vcvt.f32.s32	s14, s14
 8019bea:	f103 0030 	add.w	r0, r3, #48	; 0x30
 8019bee:	eee7 7a66 	vfms.f32	s15, s14, s13
 8019bf2:	f827 0011 	strh.w	r0, [r7, r1, lsl #1]
 8019bf6:	eec6 6aa5 	vdiv.f32	s13, s13, s11
 8019bfa:	e7dd      	b.n	8019bb8 <_ZN8touchgfx7Unicode14snprintfFloatsEPttPKtPKcPKf+0x270>
 8019bfc:	4b06      	ldr	r3, [pc, #24]	; (8019c18 <_ZN8touchgfx7Unicode14snprintfFloatsEPttPKtPKcPKf+0x2d0>)
 8019bfe:	9311      	str	r3, [sp, #68]	; 0x44
 8019c00:	236e      	movs	r3, #110	; 0x6e
 8019c02:	e792      	b.n	8019b2a <_ZN8touchgfx7Unicode14snprintfFloatsEPttPKtPKcPKf+0x1e2>
 8019c04:	ee66 6a87 	vmul.f32	s13, s13, s14
 8019c08:	ee86 6a07 	vdiv.f32	s12, s12, s14
 8019c0c:	e7c7      	b.n	8019b9e <_ZN8touchgfx7Unicode14snprintfFloatsEPttPKtPKcPKf+0x256>
 8019c0e:	bf00      	nop
 8019c10:	7f7fffff 	.word	0x7f7fffff
 8019c14:	006e0069 	.word	0x006e0069
 8019c18:	0061006e 	.word	0x0061006e
 8019c1c:	2563      	movs	r5, #99	; 0x63
 8019c1e:	2a63      	cmp	r2, #99	; 0x63
 8019c20:	bfd4      	ite	le
 8019c22:	ebc5 0202 	rsble	r2, r5, r2
 8019c26:	f1c5 0263 	rsbgt	r2, r5, #99	; 0x63
 8019c2a:	2a00      	cmp	r2, #0
 8019c2c:	dd43      	ble.n	8019cb6 <_ZN8touchgfx7Unicode14snprintfFloatsEPttPKtPKcPKf+0x36e>
 8019c2e:	9b0f      	ldr	r3, [sp, #60]	; 0x3c
 8019c30:	2b00      	cmp	r3, #0
 8019c32:	dd40      	ble.n	8019cb6 <_ZN8touchgfx7Unicode14snprintfFloatsEPttPKtPKcPKf+0x36e>
 8019c34:	f04f 0901 	mov.w	r9, #1
 8019c38:	210a      	movs	r1, #10
 8019c3a:	f113 33ff 	adds.w	r3, r3, #4294967295
 8019c3e:	d30c      	bcc.n	8019c5a <_ZN8touchgfx7Unicode14snprintfFloatsEPttPKtPKcPKf+0x312>
 8019c40:	ee67 7aa5 	vmul.f32	s15, s15, s11
 8019c44:	eebd 7ae7 	vcvt.s32.f32	s14, s15
 8019c48:	ee17 0a10 	vmov	r0, s14
 8019c4c:	eeb8 7ac7 	vcvt.f32.s32	s14, s14
 8019c50:	fb01 0909 	mla	r9, r1, r9, r0
 8019c54:	ee77 7ac7 	vsub.f32	s15, s15, s14
 8019c58:	e7ef      	b.n	8019c3a <_ZN8touchgfx7Unicode14snprintfFloatsEPttPKtPKcPKf+0x2f2>
 8019c5a:	3501      	adds	r5, #1
 8019c5c:	930f      	str	r3, [sp, #60]	; 0x3c
 8019c5e:	b292      	uxth	r2, r2
 8019c60:	230a      	movs	r3, #10
 8019c62:	eb07 0145 	add.w	r1, r7, r5, lsl #1
 8019c66:	4648      	mov	r0, r9
 8019c68:	f7ff fb4e 	bl	8019308 <_ZN8touchgfx7Unicode4itoaElPtti>
 8019c6c:	f1b9 0f01 	cmp.w	r9, #1
 8019c70:	dc1f      	bgt.n	8019cb2 <_ZN8touchgfx7Unicode14snprintfFloatsEPttPKtPKcPKf+0x36a>
 8019c72:	f89d 302e 	ldrb.w	r3, [sp, #46]	; 0x2e
 8019c76:	2b00      	cmp	r3, #0
 8019c78:	bf0c      	ite	eq
 8019c7a:	2300      	moveq	r3, #0
 8019c7c:	232e      	movne	r3, #46	; 0x2e
 8019c7e:	aa44      	add	r2, sp, #272	; 0x110
 8019c80:	eb02 0545 	add.w	r5, r2, r5, lsl #1
 8019c84:	eef4 7ae4 	vcmpe.f32	s15, s9
 8019c88:	eef1 fa10 	vmrs	APSR_nzcv, fpscr
 8019c8c:	f825 3ccc 	strh.w	r3, [r5, #-204]
 8019c90:	f6ff af4c 	blt.w	8019b2c <_ZN8touchgfx7Unicode14snprintfFloatsEPttPKtPKcPKf+0x1e4>
 8019c94:	2300      	movs	r3, #0
 8019c96:	f838 2b02 	ldrh.w	r2, [r8], #2
 8019c9a:	1c59      	adds	r1, r3, #1
 8019c9c:	b98a      	cbnz	r2, 8019cc2 <_ZN8touchgfx7Unicode14snprintfFloatsEPttPKtPKcPKf+0x37a>
 8019c9e:	b29b      	uxth	r3, r3
 8019ca0:	2130      	movs	r1, #48	; 0x30
 8019ca2:	b983      	cbnz	r3, 8019cc6 <_ZN8touchgfx7Unicode14snprintfFloatsEPttPKtPKcPKf+0x37e>
 8019ca4:	2331      	movs	r3, #49	; 0x31
 8019ca6:	f8ad 3044 	strh.w	r3, [sp, #68]	; 0x44
 8019caa:	9b10      	ldr	r3, [sp, #64]	; 0x40
 8019cac:	3b02      	subs	r3, #2
 8019cae:	9310      	str	r3, [sp, #64]	; 0x40
 8019cb0:	e73c      	b.n	8019b2c <_ZN8touchgfx7Unicode14snprintfFloatsEPttPKtPKcPKf+0x1e4>
 8019cb2:	232e      	movs	r3, #46	; 0x2e
 8019cb4:	e7e3      	b.n	8019c7e <_ZN8touchgfx7Unicode14snprintfFloatsEPttPKtPKcPKf+0x336>
 8019cb6:	ab44      	add	r3, sp, #272	; 0x110
 8019cb8:	3501      	adds	r5, #1
 8019cba:	eb03 0545 	add.w	r5, r3, r5, lsl #1
 8019cbe:	2300      	movs	r3, #0
 8019cc0:	e7e0      	b.n	8019c84 <_ZN8touchgfx7Unicode14snprintfFloatsEPttPKtPKcPKf+0x33c>
 8019cc2:	460b      	mov	r3, r1
 8019cc4:	e7e7      	b.n	8019c96 <_ZN8touchgfx7Unicode14snprintfFloatsEPttPKtPKcPKf+0x34e>
 8019cc6:	f837 2013 	ldrh.w	r2, [r7, r3, lsl #1]
 8019cca:	f1a2 0030 	sub.w	r0, r2, #48	; 0x30
 8019cce:	2808      	cmp	r0, #8
 8019cd0:	d806      	bhi.n	8019ce0 <_ZN8touchgfx7Unicode14snprintfFloatsEPttPKtPKcPKf+0x398>
 8019cd2:	a944      	add	r1, sp, #272	; 0x110
 8019cd4:	eb01 0343 	add.w	r3, r1, r3, lsl #1
 8019cd8:	3201      	adds	r2, #1
 8019cda:	f823 2ccc 	strh.w	r2, [r3, #-204]
 8019cde:	e725      	b.n	8019b2c <_ZN8touchgfx7Unicode14snprintfFloatsEPttPKtPKcPKf+0x1e4>
 8019ce0:	2a39      	cmp	r2, #57	; 0x39
 8019ce2:	bf08      	it	eq
 8019ce4:	f827 1013 	strheq.w	r1, [r7, r3, lsl #1]
 8019ce8:	3b01      	subs	r3, #1
 8019cea:	e7da      	b.n	8019ca2 <_ZN8touchgfx7Unicode14snprintfFloatsEPttPKtPKcPKf+0x35a>
 8019cec:	9a08      	ldr	r2, [sp, #32]
 8019cee:	2a00      	cmp	r2, #0
 8019cf0:	f43f af23 	beq.w	8019b3a <_ZN8touchgfx7Unicode14snprintfFloatsEPttPKtPKcPKf+0x1f2>
 8019cf4:	7812      	ldrb	r2, [r2, #0]
 8019cf6:	e720      	b.n	8019b3a <_ZN8touchgfx7Unicode14snprintfFloatsEPttPKtPKcPKf+0x1f2>
 8019cf8:	2d00      	cmp	r5, #0
 8019cfa:	f43f aede 	beq.w	8019aba <_ZN8touchgfx7Unicode14snprintfFloatsEPttPKtPKcPKf+0x172>
 8019cfe:	782d      	ldrb	r5, [r5, #0]
 8019d00:	e6db      	b.n	8019aba <_ZN8touchgfx7Unicode14snprintfFloatsEPttPKtPKcPKf+0x172>
 8019d02:	bf00      	nop

08019d04 <_ZN8touchgfx7Unicode14snprintfFloatsEPttPKcPKf>:
 8019d04:	b507      	push	{r0, r1, r2, lr}
 8019d06:	9300      	str	r3, [sp, #0]
 8019d08:	4613      	mov	r3, r2
 8019d0a:	2200      	movs	r2, #0
 8019d0c:	f7ff fe1c 	bl	8019948 <_ZN8touchgfx7Unicode14snprintfFloatsEPttPKtPKcPKf>
 8019d10:	b003      	add	sp, #12
 8019d12:	f85d fb04 	ldr.w	pc, [sp], #4
	...

08019d18 <_ZN8touchgfx11FontManager15setFontProviderEPNS_12FontProviderE>:
 8019d18:	4b01      	ldr	r3, [pc, #4]	; (8019d20 <_ZN8touchgfx11FontManager15setFontProviderEPNS_12FontProviderE+0x8>)
 8019d1a:	6018      	str	r0, [r3, #0]
 8019d1c:	4770      	bx	lr
 8019d1e:	bf00      	nop
 8019d20:	20013884 	.word	0x20013884

08019d24 <_ZN8touchgfx6Bitmap15isDynamicBitmapEt>:
 8019d24:	4b06      	ldr	r3, [pc, #24]	; (8019d40 <_ZN8touchgfx6Bitmap15isDynamicBitmapEt+0x1c>)
 8019d26:	881a      	ldrh	r2, [r3, #0]
 8019d28:	4282      	cmp	r2, r0
 8019d2a:	d807      	bhi.n	8019d3c <_ZN8touchgfx6Bitmap15isDynamicBitmapEt+0x18>
 8019d2c:	4b05      	ldr	r3, [pc, #20]	; (8019d44 <_ZN8touchgfx6Bitmap15isDynamicBitmapEt+0x20>)
 8019d2e:	881b      	ldrh	r3, [r3, #0]
 8019d30:	4413      	add	r3, r2
 8019d32:	4298      	cmp	r0, r3
 8019d34:	bfac      	ite	ge
 8019d36:	2000      	movge	r0, #0
 8019d38:	2001      	movlt	r0, #1
 8019d3a:	4770      	bx	lr
 8019d3c:	2000      	movs	r0, #0
 8019d3e:	4770      	bx	lr
 8019d40:	200138a4 	.word	0x200138a4
 8019d44:	200138a8 	.word	0x200138a8

08019d48 <_ZN8touchgfx6Bitmap23dynamicBitmapGetAddressEt>:
 8019d48:	b508      	push	{r3, lr}
 8019d4a:	4601      	mov	r1, r0
 8019d4c:	f7ff ffea 	bl	8019d24 <_ZN8touchgfx6Bitmap15isDynamicBitmapEt>
 8019d50:	b118      	cbz	r0, 8019d5a <_ZN8touchgfx6Bitmap23dynamicBitmapGetAddressEt+0x12>
 8019d52:	4b02      	ldr	r3, [pc, #8]	; (8019d5c <_ZN8touchgfx6Bitmap23dynamicBitmapGetAddressEt+0x14>)
 8019d54:	681b      	ldr	r3, [r3, #0]
 8019d56:	f853 0021 	ldr.w	r0, [r3, r1, lsl #2]
 8019d5a:	bd08      	pop	{r3, pc}
 8019d5c:	20013888 	.word	0x20013888

08019d60 <_ZN8touchgfx6Bitmap10clearCacheEv>:
 8019d60:	b5f0      	push	{r4, r5, r6, r7, lr}
 8019d62:	4c24      	ldr	r4, [pc, #144]	; (8019df4 <_ZN8touchgfx6Bitmap10clearCacheEv+0x94>)
 8019d64:	6823      	ldr	r3, [r4, #0]
 8019d66:	2b00      	cmp	r3, #0
 8019d68:	d042      	beq.n	8019df0 <_ZN8touchgfx6Bitmap10clearCacheEv+0x90>
 8019d6a:	4a23      	ldr	r2, [pc, #140]	; (8019df8 <_ZN8touchgfx6Bitmap10clearCacheEv+0x98>)
 8019d6c:	4d23      	ldr	r5, [pc, #140]	; (8019dfc <_ZN8touchgfx6Bitmap10clearCacheEv+0x9c>)
 8019d6e:	8811      	ldrh	r1, [r2, #0]
 8019d70:	f8b5 c000 	ldrh.w	ip, [r5]
 8019d74:	4822      	ldr	r0, [pc, #136]	; (8019e00 <_ZN8touchgfx6Bitmap10clearCacheEv+0xa0>)
 8019d76:	4461      	add	r1, ip
 8019d78:	1c4a      	adds	r2, r1, #1
 8019d7a:	f022 0201 	bic.w	r2, r2, #1
 8019d7e:	008f      	lsls	r7, r1, #2
 8019d80:	0412      	lsls	r2, r2, #16
 8019d82:	19de      	adds	r6, r3, r7
 8019d84:	0c12      	lsrs	r2, r2, #16
 8019d86:	eb07 0742 	add.w	r7, r7, r2, lsl #1
 8019d8a:	6006      	str	r6, [r0, #0]
 8019d8c:	4e1d      	ldr	r6, [pc, #116]	; (8019e04 <_ZN8touchgfx6Bitmap10clearCacheEv+0xa4>)
 8019d8e:	19da      	adds	r2, r3, r7
 8019d90:	6032      	str	r2, [r6, #0]
 8019d92:	220e      	movs	r2, #14
 8019d94:	fb02 f20c 	mul.w	r2, r2, ip
 8019d98:	3203      	adds	r2, #3
 8019d9a:	f022 0203 	bic.w	r2, r2, #3
 8019d9e:	443a      	add	r2, r7
 8019da0:	4f19      	ldr	r7, [pc, #100]	; (8019e08 <_ZN8touchgfx6Bitmap10clearCacheEv+0xa8>)
 8019da2:	4413      	add	r3, r2
 8019da4:	603b      	str	r3, [r7, #0]
 8019da6:	4f19      	ldr	r7, [pc, #100]	; (8019e0c <_ZN8touchgfx6Bitmap10clearCacheEv+0xac>)
 8019da8:	2300      	movs	r3, #0
 8019daa:	803b      	strh	r3, [r7, #0]
 8019dac:	4f18      	ldr	r7, [pc, #96]	; (8019e10 <_ZN8touchgfx6Bitmap10clearCacheEv+0xb0>)
 8019dae:	683f      	ldr	r7, [r7, #0]
 8019db0:	1aba      	subs	r2, r7, r2
 8019db2:	4f18      	ldr	r7, [pc, #96]	; (8019e14 <_ZN8touchgfx6Bitmap10clearCacheEv+0xb4>)
 8019db4:	603a      	str	r2, [r7, #0]
 8019db6:	4a18      	ldr	r2, [pc, #96]	; (8019e18 <_ZN8touchgfx6Bitmap10clearCacheEv+0xb8>)
 8019db8:	469c      	mov	ip, r3
 8019dba:	8013      	strh	r3, [r2, #0]
 8019dbc:	f64f 77ff 	movw	r7, #65535	; 0xffff
 8019dc0:	428b      	cmp	r3, r1
 8019dc2:	d10d      	bne.n	8019de0 <_ZN8touchgfx6Bitmap10clearCacheEv+0x80>
 8019dc4:	882d      	ldrh	r5, [r5, #0]
 8019dc6:	6830      	ldr	r0, [r6, #0]
 8019dc8:	2300      	movs	r3, #0
 8019dca:	240e      	movs	r4, #14
 8019dcc:	429d      	cmp	r5, r3
 8019dce:	d90f      	bls.n	8019df0 <_ZN8touchgfx6Bitmap10clearCacheEv+0x90>
 8019dd0:	fb04 0203 	mla	r2, r4, r3, r0
 8019dd4:	3301      	adds	r3, #1
 8019dd6:	7b11      	ldrb	r1, [r2, #12]
 8019dd8:	f36f 1145 	bfc	r1, #5, #1
 8019ddc:	7311      	strb	r1, [r2, #12]
 8019dde:	e7f5      	b.n	8019dcc <_ZN8touchgfx6Bitmap10clearCacheEv+0x6c>
 8019de0:	6822      	ldr	r2, [r4, #0]
 8019de2:	f842 c023 	str.w	ip, [r2, r3, lsl #2]
 8019de6:	6802      	ldr	r2, [r0, #0]
 8019de8:	f822 7013 	strh.w	r7, [r2, r3, lsl #1]
 8019dec:	3301      	adds	r3, #1
 8019dee:	e7e7      	b.n	8019dc0 <_ZN8touchgfx6Bitmap10clearCacheEv+0x60>
 8019df0:	bdf0      	pop	{r4, r5, r6, r7, pc}
 8019df2:	bf00      	nop
 8019df4:	20013888 	.word	0x20013888
 8019df8:	200138a4 	.word	0x200138a4
 8019dfc:	200138a8 	.word	0x200138a8
 8019e00:	2001389c 	.word	0x2001389c
 8019e04:	2001388c 	.word	0x2001388c
 8019e08:	20013894 	.word	0x20013894
 8019e0c:	200138a6 	.word	0x200138a6
 8019e10:	20013890 	.word	0x20013890
 8019e14:	200138a0 	.word	0x200138a0
 8019e18:	20013898 	.word	0x20013898

08019e1c <_ZN8touchgfx6Bitmap8setCacheEPtmm>:
 8019e1c:	4b06      	ldr	r3, [pc, #24]	; (8019e38 <_ZN8touchgfx6Bitmap8setCacheEPtmm+0x1c>)
 8019e1e:	681b      	ldr	r3, [r3, #0]
 8019e20:	b943      	cbnz	r3, 8019e34 <_ZN8touchgfx6Bitmap8setCacheEPtmm+0x18>
 8019e22:	b139      	cbz	r1, 8019e34 <_ZN8touchgfx6Bitmap8setCacheEPtmm+0x18>
 8019e24:	4b05      	ldr	r3, [pc, #20]	; (8019e3c <_ZN8touchgfx6Bitmap8setCacheEPtmm+0x20>)
 8019e26:	801a      	strh	r2, [r3, #0]
 8019e28:	4b05      	ldr	r3, [pc, #20]	; (8019e40 <_ZN8touchgfx6Bitmap8setCacheEPtmm+0x24>)
 8019e2a:	6019      	str	r1, [r3, #0]
 8019e2c:	4b05      	ldr	r3, [pc, #20]	; (8019e44 <_ZN8touchgfx6Bitmap8setCacheEPtmm+0x28>)
 8019e2e:	6018      	str	r0, [r3, #0]
 8019e30:	f7ff bf96 	b.w	8019d60 <_ZN8touchgfx6Bitmap10clearCacheEv>
 8019e34:	4770      	bx	lr
 8019e36:	bf00      	nop
 8019e38:	20013894 	.word	0x20013894
 8019e3c:	200138a8 	.word	0x200138a8
 8019e40:	20013890 	.word	0x20013890
 8019e44:	20013888 	.word	0x20013888

08019e48 <_ZN8touchgfx6Bitmap22registerBitmapDatabaseEPKNS0_10BitmapDataEtPtmm>:
 8019e48:	b470      	push	{r4, r5, r6}
 8019e4a:	4c07      	ldr	r4, [pc, #28]	; (8019e68 <_ZN8touchgfx6Bitmap22registerBitmapDatabaseEPKNS0_10BitmapDataEtPtmm+0x20>)
 8019e4c:	6826      	ldr	r6, [r4, #0]
 8019e4e:	4605      	mov	r5, r0
 8019e50:	4610      	mov	r0, r2
 8019e52:	9a03      	ldr	r2, [sp, #12]
 8019e54:	b936      	cbnz	r6, 8019e64 <_ZN8touchgfx6Bitmap22registerBitmapDatabaseEPKNS0_10BitmapDataEtPtmm+0x1c>
 8019e56:	6025      	str	r5, [r4, #0]
 8019e58:	4c04      	ldr	r4, [pc, #16]	; (8019e6c <_ZN8touchgfx6Bitmap22registerBitmapDatabaseEPKNS0_10BitmapDataEtPtmm+0x24>)
 8019e5a:	8021      	strh	r1, [r4, #0]
 8019e5c:	bc70      	pop	{r4, r5, r6}
 8019e5e:	4619      	mov	r1, r3
 8019e60:	f7ff bfdc 	b.w	8019e1c <_ZN8touchgfx6Bitmap8setCacheEPtmm>
 8019e64:	bc70      	pop	{r4, r5, r6}
 8019e66:	4770      	bx	lr
 8019e68:	200138ac 	.word	0x200138ac
 8019e6c:	200138a4 	.word	0x200138a4

08019e70 <_ZNK8touchgfx6Bitmap8getWidthEv>:
 8019e70:	4a12      	ldr	r2, [pc, #72]	; (8019ebc <_ZNK8touchgfx6Bitmap8getWidthEv+0x4c>)
 8019e72:	8803      	ldrh	r3, [r0, #0]
 8019e74:	8812      	ldrh	r2, [r2, #0]
 8019e76:	4293      	cmp	r3, r2
 8019e78:	d207      	bcs.n	8019e8a <_ZNK8touchgfx6Bitmap8getWidthEv+0x1a>
 8019e7a:	4a11      	ldr	r2, [pc, #68]	; (8019ec0 <_ZNK8touchgfx6Bitmap8getWidthEv+0x50>)
 8019e7c:	6812      	ldr	r2, [r2, #0]
 8019e7e:	2114      	movs	r1, #20
 8019e80:	fb01 2303 	mla	r3, r1, r3, r2
 8019e84:	f9b3 0008 	ldrsh.w	r0, [r3, #8]
 8019e88:	4770      	bx	lr
 8019e8a:	490e      	ldr	r1, [pc, #56]	; (8019ec4 <_ZNK8touchgfx6Bitmap8getWidthEv+0x54>)
 8019e8c:	8809      	ldrh	r1, [r1, #0]
 8019e8e:	4411      	add	r1, r2
 8019e90:	428b      	cmp	r3, r1
 8019e92:	da04      	bge.n	8019e9e <_ZNK8touchgfx6Bitmap8getWidthEv+0x2e>
 8019e94:	1a9b      	subs	r3, r3, r2
 8019e96:	4a0c      	ldr	r2, [pc, #48]	; (8019ec8 <_ZNK8touchgfx6Bitmap8getWidthEv+0x58>)
 8019e98:	210e      	movs	r1, #14
 8019e9a:	6812      	ldr	r2, [r2, #0]
 8019e9c:	e7f0      	b.n	8019e80 <_ZNK8touchgfx6Bitmap8getWidthEv+0x10>
 8019e9e:	f64f 72fe 	movw	r2, #65534	; 0xfffe
 8019ea2:	4293      	cmp	r3, r2
 8019ea4:	d108      	bne.n	8019eb8 <_ZNK8touchgfx6Bitmap8getWidthEv+0x48>
 8019ea6:	4b09      	ldr	r3, [pc, #36]	; (8019ecc <_ZNK8touchgfx6Bitmap8getWidthEv+0x5c>)
 8019ea8:	781b      	ldrb	r3, [r3, #0]
 8019eaa:	b91b      	cbnz	r3, 8019eb4 <_ZNK8touchgfx6Bitmap8getWidthEv+0x44>
 8019eac:	4b08      	ldr	r3, [pc, #32]	; (8019ed0 <_ZNK8touchgfx6Bitmap8getWidthEv+0x60>)
 8019eae:	f9b3 0000 	ldrsh.w	r0, [r3]
 8019eb2:	4770      	bx	lr
 8019eb4:	4b07      	ldr	r3, [pc, #28]	; (8019ed4 <_ZNK8touchgfx6Bitmap8getWidthEv+0x64>)
 8019eb6:	e7fa      	b.n	8019eae <_ZNK8touchgfx6Bitmap8getWidthEv+0x3e>
 8019eb8:	2000      	movs	r0, #0
 8019eba:	4770      	bx	lr
 8019ebc:	200138a4 	.word	0x200138a4
 8019ec0:	200138ac 	.word	0x200138ac
 8019ec4:	200138a8 	.word	0x200138a8
 8019ec8:	2001388c 	.word	0x2001388c
 8019ecc:	20013814 	.word	0x20013814
 8019ed0:	20013816 	.word	0x20013816
 8019ed4:	20013818 	.word	0x20013818

08019ed8 <_ZNK8touchgfx6Bitmap9getHeightEv>:
 8019ed8:	4a12      	ldr	r2, [pc, #72]	; (8019f24 <_ZNK8touchgfx6Bitmap9getHeightEv+0x4c>)
 8019eda:	8803      	ldrh	r3, [r0, #0]
 8019edc:	8812      	ldrh	r2, [r2, #0]
 8019ede:	4293      	cmp	r3, r2
 8019ee0:	d207      	bcs.n	8019ef2 <_ZNK8touchgfx6Bitmap9getHeightEv+0x1a>
 8019ee2:	4a11      	ldr	r2, [pc, #68]	; (8019f28 <_ZNK8touchgfx6Bitmap9getHeightEv+0x50>)
 8019ee4:	6812      	ldr	r2, [r2, #0]
 8019ee6:	2114      	movs	r1, #20
 8019ee8:	fb01 2303 	mla	r3, r1, r3, r2
 8019eec:	f9b3 000a 	ldrsh.w	r0, [r3, #10]
 8019ef0:	4770      	bx	lr
 8019ef2:	490e      	ldr	r1, [pc, #56]	; (8019f2c <_ZNK8touchgfx6Bitmap9getHeightEv+0x54>)
 8019ef4:	8809      	ldrh	r1, [r1, #0]
 8019ef6:	4411      	add	r1, r2
 8019ef8:	428b      	cmp	r3, r1
 8019efa:	da04      	bge.n	8019f06 <_ZNK8touchgfx6Bitmap9getHeightEv+0x2e>
 8019efc:	1a9b      	subs	r3, r3, r2
 8019efe:	4a0c      	ldr	r2, [pc, #48]	; (8019f30 <_ZNK8touchgfx6Bitmap9getHeightEv+0x58>)
 8019f00:	210e      	movs	r1, #14
 8019f02:	6812      	ldr	r2, [r2, #0]
 8019f04:	e7f0      	b.n	8019ee8 <_ZNK8touchgfx6Bitmap9getHeightEv+0x10>
 8019f06:	f64f 72fe 	movw	r2, #65534	; 0xfffe
 8019f0a:	4293      	cmp	r3, r2
 8019f0c:	d108      	bne.n	8019f20 <_ZNK8touchgfx6Bitmap9getHeightEv+0x48>
 8019f0e:	4b09      	ldr	r3, [pc, #36]	; (8019f34 <_ZNK8touchgfx6Bitmap9getHeightEv+0x5c>)
 8019f10:	781b      	ldrb	r3, [r3, #0]
 8019f12:	b91b      	cbnz	r3, 8019f1c <_ZNK8touchgfx6Bitmap9getHeightEv+0x44>
 8019f14:	4b08      	ldr	r3, [pc, #32]	; (8019f38 <_ZNK8touchgfx6Bitmap9getHeightEv+0x60>)
 8019f16:	f9b3 0000 	ldrsh.w	r0, [r3]
 8019f1a:	4770      	bx	lr
 8019f1c:	4b07      	ldr	r3, [pc, #28]	; (8019f3c <_ZNK8touchgfx6Bitmap9getHeightEv+0x64>)
 8019f1e:	e7fa      	b.n	8019f16 <_ZNK8touchgfx6Bitmap9getHeightEv+0x3e>
 8019f20:	2000      	movs	r0, #0
 8019f22:	4770      	bx	lr
 8019f24:	200138a4 	.word	0x200138a4
 8019f28:	200138ac 	.word	0x200138ac
 8019f2c:	200138a8 	.word	0x200138a8
 8019f30:	2001388c 	.word	0x2001388c
 8019f34:	20013814 	.word	0x20013814
 8019f38:	20013818 	.word	0x20013818
 8019f3c:	20013816 	.word	0x20013816

08019f40 <_ZNK8touchgfx6Bitmap12getSolidRectEv>:
 8019f40:	b510      	push	{r4, lr}
 8019f42:	4a1f      	ldr	r2, [pc, #124]	; (8019fc0 <_ZNK8touchgfx6Bitmap12getSolidRectEv+0x80>)
 8019f44:	880b      	ldrh	r3, [r1, #0]
 8019f46:	8812      	ldrh	r2, [r2, #0]
 8019f48:	4293      	cmp	r3, r2
 8019f4a:	d213      	bcs.n	8019f74 <_ZNK8touchgfx6Bitmap12getSolidRectEv+0x34>
 8019f4c:	4a1d      	ldr	r2, [pc, #116]	; (8019fc4 <_ZNK8touchgfx6Bitmap12getSolidRectEv+0x84>)
 8019f4e:	6812      	ldr	r2, [r2, #0]
 8019f50:	2114      	movs	r1, #20
 8019f52:	fb01 2303 	mla	r3, r1, r3, r2
 8019f56:	8a1a      	ldrh	r2, [r3, #16]
 8019f58:	f9b3 400c 	ldrsh.w	r4, [r3, #12]
 8019f5c:	f9b3 100e 	ldrsh.w	r1, [r3, #14]
 8019f60:	8a5b      	ldrh	r3, [r3, #18]
 8019f62:	8004      	strh	r4, [r0, #0]
 8019f64:	f3c2 020c 	ubfx	r2, r2, #0, #13
 8019f68:	f3c3 030c 	ubfx	r3, r3, #0, #13
 8019f6c:	8041      	strh	r1, [r0, #2]
 8019f6e:	8082      	strh	r2, [r0, #4]
 8019f70:	80c3      	strh	r3, [r0, #6]
 8019f72:	e00e      	b.n	8019f92 <_ZNK8touchgfx6Bitmap12getSolidRectEv+0x52>
 8019f74:	4914      	ldr	r1, [pc, #80]	; (8019fc8 <_ZNK8touchgfx6Bitmap12getSolidRectEv+0x88>)
 8019f76:	8809      	ldrh	r1, [r1, #0]
 8019f78:	4411      	add	r1, r2
 8019f7a:	428b      	cmp	r3, r1
 8019f7c:	da0a      	bge.n	8019f94 <_ZNK8touchgfx6Bitmap12getSolidRectEv+0x54>
 8019f7e:	1a9b      	subs	r3, r3, r2
 8019f80:	4a12      	ldr	r2, [pc, #72]	; (8019fcc <_ZNK8touchgfx6Bitmap12getSolidRectEv+0x8c>)
 8019f82:	6812      	ldr	r2, [r2, #0]
 8019f84:	210e      	movs	r1, #14
 8019f86:	fb01 2303 	mla	r3, r1, r3, r2
 8019f8a:	681a      	ldr	r2, [r3, #0]
 8019f8c:	6002      	str	r2, [r0, #0]
 8019f8e:	685a      	ldr	r2, [r3, #4]
 8019f90:	6042      	str	r2, [r0, #4]
 8019f92:	bd10      	pop	{r4, pc}
 8019f94:	f64f 72fe 	movw	r2, #65534	; 0xfffe
 8019f98:	4293      	cmp	r3, r2
 8019f9a:	d10b      	bne.n	8019fb4 <_ZNK8touchgfx6Bitmap12getSolidRectEv+0x74>
 8019f9c:	4b0c      	ldr	r3, [pc, #48]	; (8019fd0 <_ZNK8touchgfx6Bitmap12getSolidRectEv+0x90>)
 8019f9e:	f9b3 1000 	ldrsh.w	r1, [r3]
 8019fa2:	4b0c      	ldr	r3, [pc, #48]	; (8019fd4 <_ZNK8touchgfx6Bitmap12getSolidRectEv+0x94>)
 8019fa4:	8081      	strh	r1, [r0, #4]
 8019fa6:	f9b3 2000 	ldrsh.w	r2, [r3]
 8019faa:	80c2      	strh	r2, [r0, #6]
 8019fac:	2300      	movs	r3, #0
 8019fae:	8003      	strh	r3, [r0, #0]
 8019fb0:	8043      	strh	r3, [r0, #2]
 8019fb2:	e7ee      	b.n	8019f92 <_ZNK8touchgfx6Bitmap12getSolidRectEv+0x52>
 8019fb4:	2300      	movs	r3, #0
 8019fb6:	8003      	strh	r3, [r0, #0]
 8019fb8:	8043      	strh	r3, [r0, #2]
 8019fba:	8083      	strh	r3, [r0, #4]
 8019fbc:	e7d8      	b.n	8019f70 <_ZNK8touchgfx6Bitmap12getSolidRectEv+0x30>
 8019fbe:	bf00      	nop
 8019fc0:	200138a4 	.word	0x200138a4
 8019fc4:	200138ac 	.word	0x200138ac
 8019fc8:	200138a8 	.word	0x200138a8
 8019fcc:	2001388c 	.word	0x2001388c
 8019fd0:	20013810 	.word	0x20013810
 8019fd4:	20013812 	.word	0x20013812

08019fd8 <_ZNK8touchgfx6Bitmap20hasTransparentPixelsEv>:
 8019fd8:	4a17      	ldr	r2, [pc, #92]	; (801a038 <_ZNK8touchgfx6Bitmap20hasTransparentPixelsEv+0x60>)
 8019fda:	8803      	ldrh	r3, [r0, #0]
 8019fdc:	8812      	ldrh	r2, [r2, #0]
 8019fde:	4293      	cmp	r3, r2
 8019fe0:	d213      	bcs.n	801a00a <_ZNK8touchgfx6Bitmap20hasTransparentPixelsEv+0x32>
 8019fe2:	4a16      	ldr	r2, [pc, #88]	; (801a03c <_ZNK8touchgfx6Bitmap20hasTransparentPixelsEv+0x64>)
 8019fe4:	6812      	ldr	r2, [r2, #0]
 8019fe6:	2114      	movs	r1, #20
 8019fe8:	fb01 2303 	mla	r3, r1, r3, r2
 8019fec:	8a1a      	ldrh	r2, [r3, #16]
 8019fee:	8919      	ldrh	r1, [r3, #8]
 8019ff0:	f3c2 020c 	ubfx	r2, r2, #0, #13
 8019ff4:	428a      	cmp	r2, r1
 8019ff6:	db1d      	blt.n	801a034 <_ZNK8touchgfx6Bitmap20hasTransparentPixelsEv+0x5c>
 8019ff8:	8a58      	ldrh	r0, [r3, #18]
 8019ffa:	f3c0 000c 	ubfx	r0, r0, #0, #13
 8019ffe:	895b      	ldrh	r3, [r3, #10]
 801a000:	4298      	cmp	r0, r3
 801a002:	bfac      	ite	ge
 801a004:	2000      	movge	r0, #0
 801a006:	2001      	movlt	r0, #1
 801a008:	4770      	bx	lr
 801a00a:	490d      	ldr	r1, [pc, #52]	; (801a040 <_ZNK8touchgfx6Bitmap20hasTransparentPixelsEv+0x68>)
 801a00c:	8809      	ldrh	r1, [r1, #0]
 801a00e:	4411      	add	r1, r2
 801a010:	428b      	cmp	r3, r1
 801a012:	da0d      	bge.n	801a030 <_ZNK8touchgfx6Bitmap20hasTransparentPixelsEv+0x58>
 801a014:	1a9b      	subs	r3, r3, r2
 801a016:	4a0b      	ldr	r2, [pc, #44]	; (801a044 <_ZNK8touchgfx6Bitmap20hasTransparentPixelsEv+0x6c>)
 801a018:	6812      	ldr	r2, [r2, #0]
 801a01a:	210e      	movs	r1, #14
 801a01c:	fb01 2303 	mla	r3, r1, r3, r2
 801a020:	f9b3 1004 	ldrsh.w	r1, [r3, #4]
 801a024:	891a      	ldrh	r2, [r3, #8]
 801a026:	4291      	cmp	r1, r2
 801a028:	db04      	blt.n	801a034 <_ZNK8touchgfx6Bitmap20hasTransparentPixelsEv+0x5c>
 801a02a:	f9b3 0006 	ldrsh.w	r0, [r3, #6]
 801a02e:	e7e6      	b.n	8019ffe <_ZNK8touchgfx6Bitmap20hasTransparentPixelsEv+0x26>
 801a030:	2000      	movs	r0, #0
 801a032:	4770      	bx	lr
 801a034:	2001      	movs	r0, #1
 801a036:	4770      	bx	lr
 801a038:	200138a4 	.word	0x200138a4
 801a03c:	200138ac 	.word	0x200138ac
 801a040:	200138a8 	.word	0x200138a8
 801a044:	2001388c 	.word	0x2001388c

0801a048 <_ZNK8touchgfx6Bitmap7getDataEv>:
 801a048:	4a12      	ldr	r2, [pc, #72]	; (801a094 <_ZNK8touchgfx6Bitmap7getDataEv+0x4c>)
 801a04a:	8803      	ldrh	r3, [r0, #0]
 801a04c:	8811      	ldrh	r1, [r2, #0]
 801a04e:	428b      	cmp	r3, r1
 801a050:	d20b      	bcs.n	801a06a <_ZNK8touchgfx6Bitmap7getDataEv+0x22>
 801a052:	4a11      	ldr	r2, [pc, #68]	; (801a098 <_ZNK8touchgfx6Bitmap7getDataEv+0x50>)
 801a054:	6812      	ldr	r2, [r2, #0]
 801a056:	b112      	cbz	r2, 801a05e <_ZNK8touchgfx6Bitmap7getDataEv+0x16>
 801a058:	f852 0023 	ldr.w	r0, [r2, r3, lsl #2]
 801a05c:	b9c0      	cbnz	r0, 801a090 <_ZNK8touchgfx6Bitmap7getDataEv+0x48>
 801a05e:	4a0f      	ldr	r2, [pc, #60]	; (801a09c <_ZNK8touchgfx6Bitmap7getDataEv+0x54>)
 801a060:	6811      	ldr	r1, [r2, #0]
 801a062:	2214      	movs	r2, #20
 801a064:	4353      	muls	r3, r2
 801a066:	58c8      	ldr	r0, [r1, r3]
 801a068:	4770      	bx	lr
 801a06a:	4a0d      	ldr	r2, [pc, #52]	; (801a0a0 <_ZNK8touchgfx6Bitmap7getDataEv+0x58>)
 801a06c:	8812      	ldrh	r2, [r2, #0]
 801a06e:	440a      	add	r2, r1
 801a070:	4293      	cmp	r3, r2
 801a072:	da04      	bge.n	801a07e <_ZNK8touchgfx6Bitmap7getDataEv+0x36>
 801a074:	4a08      	ldr	r2, [pc, #32]	; (801a098 <_ZNK8touchgfx6Bitmap7getDataEv+0x50>)
 801a076:	6812      	ldr	r2, [r2, #0]
 801a078:	f852 0023 	ldr.w	r0, [r2, r3, lsl #2]
 801a07c:	4770      	bx	lr
 801a07e:	f64f 72fe 	movw	r2, #65534	; 0xfffe
 801a082:	4293      	cmp	r3, r2
 801a084:	d103      	bne.n	801a08e <_ZNK8touchgfx6Bitmap7getDataEv+0x46>
 801a086:	4b07      	ldr	r3, [pc, #28]	; (801a0a4 <_ZNK8touchgfx6Bitmap7getDataEv+0x5c>)
 801a088:	681b      	ldr	r3, [r3, #0]
 801a08a:	6c58      	ldr	r0, [r3, #68]	; 0x44
 801a08c:	4770      	bx	lr
 801a08e:	2000      	movs	r0, #0
 801a090:	4770      	bx	lr
 801a092:	bf00      	nop
 801a094:	200138a4 	.word	0x200138a4
 801a098:	20013888 	.word	0x20013888
 801a09c:	200138ac 	.word	0x200138ac
 801a0a0:	200138a8 	.word	0x200138a8
 801a0a4:	2001381c 	.word	0x2001381c

0801a0a8 <_ZNK8touchgfx6Bitmap12getExtraDataEv>:
 801a0a8:	4b24      	ldr	r3, [pc, #144]	; (801a13c <_ZNK8touchgfx6Bitmap12getExtraDataEv+0x94>)
 801a0aa:	8802      	ldrh	r2, [r0, #0]
 801a0ac:	8818      	ldrh	r0, [r3, #0]
 801a0ae:	4282      	cmp	r2, r0
 801a0b0:	d221      	bcs.n	801a0f6 <_ZNK8touchgfx6Bitmap12getExtraDataEv+0x4e>
 801a0b2:	4b23      	ldr	r3, [pc, #140]	; (801a140 <_ZNK8touchgfx6Bitmap12getExtraDataEv+0x98>)
 801a0b4:	6819      	ldr	r1, [r3, #0]
 801a0b6:	2314      	movs	r3, #20
 801a0b8:	fb03 1302 	mla	r3, r3, r2, r1
 801a0bc:	6858      	ldr	r0, [r3, #4]
 801a0be:	2800      	cmp	r0, #0
 801a0c0:	d03a      	beq.n	801a138 <_ZNK8touchgfx6Bitmap12getExtraDataEv+0x90>
 801a0c2:	4920      	ldr	r1, [pc, #128]	; (801a144 <_ZNK8touchgfx6Bitmap12getExtraDataEv+0x9c>)
 801a0c4:	6809      	ldr	r1, [r1, #0]
 801a0c6:	2900      	cmp	r1, #0
 801a0c8:	d036      	beq.n	801a138 <_ZNK8touchgfx6Bitmap12getExtraDataEv+0x90>
 801a0ca:	f851 1022 	ldr.w	r1, [r1, r2, lsl #2]
 801a0ce:	2900      	cmp	r1, #0
 801a0d0:	d032      	beq.n	801a138 <_ZNK8touchgfx6Bitmap12getExtraDataEv+0x90>
 801a0d2:	891a      	ldrh	r2, [r3, #8]
 801a0d4:	8958      	ldrh	r0, [r3, #10]
 801a0d6:	4350      	muls	r0, r2
 801a0d8:	7c5a      	ldrb	r2, [r3, #17]
 801a0da:	7cdb      	ldrb	r3, [r3, #19]
 801a0dc:	0952      	lsrs	r2, r2, #5
 801a0de:	f3c3 1342 	ubfx	r3, r3, #5, #3
 801a0e2:	ea43 03c2 	orr.w	r3, r3, r2, lsl #3
 801a0e6:	2b0b      	cmp	r3, #11
 801a0e8:	bf18      	it	ne
 801a0ea:	0040      	lslne	r0, r0, #1
 801a0ec:	3003      	adds	r0, #3
 801a0ee:	f020 0003 	bic.w	r0, r0, #3
 801a0f2:	4408      	add	r0, r1
 801a0f4:	4770      	bx	lr
 801a0f6:	4b14      	ldr	r3, [pc, #80]	; (801a148 <_ZNK8touchgfx6Bitmap12getExtraDataEv+0xa0>)
 801a0f8:	881b      	ldrh	r3, [r3, #0]
 801a0fa:	4403      	add	r3, r0
 801a0fc:	429a      	cmp	r2, r3
 801a0fe:	da1a      	bge.n	801a136 <_ZNK8touchgfx6Bitmap12getExtraDataEv+0x8e>
 801a100:	4b12      	ldr	r3, [pc, #72]	; (801a14c <_ZNK8touchgfx6Bitmap12getExtraDataEv+0xa4>)
 801a102:	681b      	ldr	r3, [r3, #0]
 801a104:	1a10      	subs	r0, r2, r0
 801a106:	210e      	movs	r1, #14
 801a108:	fb01 3000 	mla	r0, r1, r0, r3
 801a10c:	7b03      	ldrb	r3, [r0, #12]
 801a10e:	f003 031f 	and.w	r3, r3, #31
 801a112:	2b0b      	cmp	r3, #11
 801a114:	d10b      	bne.n	801a12e <_ZNK8touchgfx6Bitmap12getExtraDataEv+0x86>
 801a116:	8903      	ldrh	r3, [r0, #8]
 801a118:	8940      	ldrh	r0, [r0, #10]
 801a11a:	4358      	muls	r0, r3
 801a11c:	4b09      	ldr	r3, [pc, #36]	; (801a144 <_ZNK8touchgfx6Bitmap12getExtraDataEv+0x9c>)
 801a11e:	6819      	ldr	r1, [r3, #0]
 801a120:	3003      	adds	r0, #3
 801a122:	f020 0303 	bic.w	r3, r0, #3
 801a126:	f851 0022 	ldr.w	r0, [r1, r2, lsl #2]
 801a12a:	4418      	add	r0, r3
 801a12c:	4770      	bx	lr
 801a12e:	2b0d      	cmp	r3, #13
 801a130:	d101      	bne.n	801a136 <_ZNK8touchgfx6Bitmap12getExtraDataEv+0x8e>
 801a132:	300d      	adds	r0, #13
 801a134:	4770      	bx	lr
 801a136:	2000      	movs	r0, #0
 801a138:	4770      	bx	lr
 801a13a:	bf00      	nop
 801a13c:	200138a4 	.word	0x200138a4
 801a140:	200138ac 	.word	0x200138ac
 801a144:	20013888 	.word	0x20013888
 801a148:	200138a8 	.word	0x200138a8
 801a14c:	2001388c 	.word	0x2001388c

0801a150 <_ZNK8touchgfx6Bitmap9getFormatEv>:
 801a150:	b510      	push	{r4, lr}
 801a152:	4a17      	ldr	r2, [pc, #92]	; (801a1b0 <_ZNK8touchgfx6Bitmap9getFormatEv+0x60>)
 801a154:	8803      	ldrh	r3, [r0, #0]
 801a156:	8812      	ldrh	r2, [r2, #0]
 801a158:	4293      	cmp	r3, r2
 801a15a:	d20c      	bcs.n	801a176 <_ZNK8touchgfx6Bitmap9getFormatEv+0x26>
 801a15c:	4a15      	ldr	r2, [pc, #84]	; (801a1b4 <_ZNK8touchgfx6Bitmap9getFormatEv+0x64>)
 801a15e:	6812      	ldr	r2, [r2, #0]
 801a160:	2114      	movs	r1, #20
 801a162:	fb01 2303 	mla	r3, r1, r3, r2
 801a166:	7c58      	ldrb	r0, [r3, #17]
 801a168:	0942      	lsrs	r2, r0, #5
 801a16a:	7cd8      	ldrb	r0, [r3, #19]
 801a16c:	f3c0 1042 	ubfx	r0, r0, #5, #3
 801a170:	ea40 00c2 	orr.w	r0, r0, r2, lsl #3
 801a174:	bd10      	pop	{r4, pc}
 801a176:	4910      	ldr	r1, [pc, #64]	; (801a1b8 <_ZNK8touchgfx6Bitmap9getFormatEv+0x68>)
 801a178:	8809      	ldrh	r1, [r1, #0]
 801a17a:	4411      	add	r1, r2
 801a17c:	428b      	cmp	r3, r1
 801a17e:	da09      	bge.n	801a194 <_ZNK8touchgfx6Bitmap9getFormatEv+0x44>
 801a180:	1a9b      	subs	r3, r3, r2
 801a182:	4a0e      	ldr	r2, [pc, #56]	; (801a1bc <_ZNK8touchgfx6Bitmap9getFormatEv+0x6c>)
 801a184:	6812      	ldr	r2, [r2, #0]
 801a186:	210e      	movs	r1, #14
 801a188:	fb01 2303 	mla	r3, r1, r3, r2
 801a18c:	7b18      	ldrb	r0, [r3, #12]
 801a18e:	f000 001f 	and.w	r0, r0, #31
 801a192:	e7ef      	b.n	801a174 <_ZNK8touchgfx6Bitmap9getFormatEv+0x24>
 801a194:	f64f 72fe 	movw	r2, #65534	; 0xfffe
 801a198:	4293      	cmp	r3, r2
 801a19a:	d106      	bne.n	801a1aa <_ZNK8touchgfx6Bitmap9getFormatEv+0x5a>
 801a19c:	f7ea fa56 	bl	800464c <_ZN8touchgfx3HAL3lcdEv>
 801a1a0:	6803      	ldr	r3, [r0, #0]
 801a1a2:	e8bd 4010 	ldmia.w	sp!, {r4, lr}
 801a1a6:	6adb      	ldr	r3, [r3, #44]	; 0x2c
 801a1a8:	4718      	bx	r3
 801a1aa:	2000      	movs	r0, #0
 801a1ac:	e7e2      	b.n	801a174 <_ZNK8touchgfx6Bitmap9getFormatEv+0x24>
 801a1ae:	bf00      	nop
 801a1b0:	200138a4 	.word	0x200138a4
 801a1b4:	200138ac 	.word	0x200138ac
 801a1b8:	200138a8 	.word	0x200138a8
 801a1bc:	2001388c 	.word	0x2001388c

0801a1c0 <_ZNK8touchgfx8LCD16bpp8bitDepthEv>:
 801a1c0:	2010      	movs	r0, #16
 801a1c2:	4770      	bx	lr

0801a1c4 <_ZNK8touchgfx8LCD16bpp17framebufferFormatEv>:
 801a1c4:	2000      	movs	r0, #0
 801a1c6:	4770      	bx	lr

0801a1c8 <_ZNK8touchgfx8LCD16bpp17framebufferStrideEv>:
 801a1c8:	4b02      	ldr	r3, [pc, #8]	; (801a1d4 <_ZNK8touchgfx8LCD16bpp17framebufferStrideEv+0xc>)
 801a1ca:	8818      	ldrh	r0, [r3, #0]
 801a1cc:	0040      	lsls	r0, r0, #1
 801a1ce:	b280      	uxth	r0, r0
 801a1d0:	4770      	bx	lr
 801a1d2:	bf00      	nop
 801a1d4:	20013816 	.word	0x20013816

0801a1d8 <_ZN8touchgfx8LCD16bpp28getTextureMapperDrawScanLineERKNS_14TextureSurfaceEth>:
 801a1d8:	2bff      	cmp	r3, #255	; 0xff
 801a1da:	d050      	beq.n	801a27e <_ZN8touchgfx8LCD16bpp28getTextureMapperDrawScanLineERKNS_14TextureSurfaceEth+0xa6>
 801a1dc:	2a0b      	cmp	r2, #11
 801a1de:	d04a      	beq.n	801a276 <_ZN8touchgfx8LCD16bpp28getTextureMapperDrawScanLineERKNS_14TextureSurfaceEth+0x9e>
 801a1e0:	d80e      	bhi.n	801a200 <_ZN8touchgfx8LCD16bpp28getTextureMapperDrawScanLineERKNS_14TextureSurfaceEth+0x28>
 801a1e2:	2a03      	cmp	r2, #3
 801a1e4:	d03f      	beq.n	801a266 <_ZN8touchgfx8LCD16bpp28getTextureMapperDrawScanLineERKNS_14TextureSurfaceEth+0x8e>
 801a1e6:	d804      	bhi.n	801a1f2 <_ZN8touchgfx8LCD16bpp28getTextureMapperDrawScanLineERKNS_14TextureSurfaceEth+0x1a>
 801a1e8:	2a01      	cmp	r2, #1
 801a1ea:	d03e      	beq.n	801a26a <_ZN8touchgfx8LCD16bpp28getTextureMapperDrawScanLineERKNS_14TextureSurfaceEth+0x92>
 801a1ec:	d93f      	bls.n	801a26e <_ZN8touchgfx8LCD16bpp28getTextureMapperDrawScanLineERKNS_14TextureSurfaceEth+0x96>
 801a1ee:	6b80      	ldr	r0, [r0, #56]	; 0x38
 801a1f0:	4770      	bx	lr
 801a1f2:	2a09      	cmp	r2, #9
 801a1f4:	d03f      	beq.n	801a276 <_ZN8touchgfx8LCD16bpp28getTextureMapperDrawScanLineERKNS_14TextureSurfaceEth+0x9e>
 801a1f6:	d83c      	bhi.n	801a272 <_ZN8touchgfx8LCD16bpp28getTextureMapperDrawScanLineERKNS_14TextureSurfaceEth+0x9a>
 801a1f8:	2a08      	cmp	r2, #8
 801a1fa:	d03a      	beq.n	801a272 <_ZN8touchgfx8LCD16bpp28getTextureMapperDrawScanLineERKNS_14TextureSurfaceEth+0x9a>
 801a1fc:	2000      	movs	r0, #0
 801a1fe:	4770      	bx	lr
 801a200:	2a2f      	cmp	r2, #47	; 0x2f
 801a202:	d024      	beq.n	801a24e <_ZN8touchgfx8LCD16bpp28getTextureMapperDrawScanLineERKNS_14TextureSurfaceEth+0x76>
 801a204:	d80d      	bhi.n	801a222 <_ZN8touchgfx8LCD16bpp28getTextureMapperDrawScanLineERKNS_14TextureSurfaceEth+0x4a>
 801a206:	2a2d      	cmp	r2, #45	; 0x2d
 801a208:	d014      	beq.n	801a234 <_ZN8touchgfx8LCD16bpp28getTextureMapperDrawScanLineERKNS_14TextureSurfaceEth+0x5c>
 801a20a:	d826      	bhi.n	801a25a <_ZN8touchgfx8LCD16bpp28getTextureMapperDrawScanLineERKNS_14TextureSurfaceEth+0x82>
 801a20c:	2a2c      	cmp	r2, #44	; 0x2c
 801a20e:	d1f5      	bne.n	801a1fc <_ZN8touchgfx8LCD16bpp28getTextureMapperDrawScanLineERKNS_14TextureSurfaceEth+0x24>
 801a210:	684b      	ldr	r3, [r1, #4]
 801a212:	781b      	ldrb	r3, [r3, #0]
 801a214:	2b01      	cmp	r3, #1
 801a216:	d018      	beq.n	801a24a <_ZN8touchgfx8LCD16bpp28getTextureMapperDrawScanLineERKNS_14TextureSurfaceEth+0x72>
 801a218:	d323      	bcc.n	801a262 <_ZN8touchgfx8LCD16bpp28getTextureMapperDrawScanLineERKNS_14TextureSurfaceEth+0x8a>
 801a21a:	2b02      	cmp	r3, #2
 801a21c:	d1ee      	bne.n	801a1fc <_ZN8touchgfx8LCD16bpp28getTextureMapperDrawScanLineERKNS_14TextureSurfaceEth+0x24>
 801a21e:	6880      	ldr	r0, [r0, #8]
 801a220:	4770      	bx	lr
 801a222:	2a31      	cmp	r2, #49	; 0x31
 801a224:	d004      	beq.n	801a230 <_ZN8touchgfx8LCD16bpp28getTextureMapperDrawScanLineERKNS_14TextureSurfaceEth+0x58>
 801a226:	d328      	bcc.n	801a27a <_ZN8touchgfx8LCD16bpp28getTextureMapperDrawScanLineERKNS_14TextureSurfaceEth+0xa2>
 801a228:	2a32      	cmp	r2, #50	; 0x32
 801a22a:	d026      	beq.n	801a27a <_ZN8touchgfx8LCD16bpp28getTextureMapperDrawScanLineERKNS_14TextureSurfaceEth+0xa2>
 801a22c:	2a33      	cmp	r2, #51	; 0x33
 801a22e:	d1e5      	bne.n	801a1fc <_ZN8touchgfx8LCD16bpp28getTextureMapperDrawScanLineERKNS_14TextureSurfaceEth+0x24>
 801a230:	6f00      	ldr	r0, [r0, #112]	; 0x70
 801a232:	4770      	bx	lr
 801a234:	684b      	ldr	r3, [r1, #4]
 801a236:	781b      	ldrb	r3, [r3, #0]
 801a238:	2b01      	cmp	r3, #1
 801a23a:	d004      	beq.n	801a246 <_ZN8touchgfx8LCD16bpp28getTextureMapperDrawScanLineERKNS_14TextureSurfaceEth+0x6e>
 801a23c:	d30b      	bcc.n	801a256 <_ZN8touchgfx8LCD16bpp28getTextureMapperDrawScanLineERKNS_14TextureSurfaceEth+0x7e>
 801a23e:	2b02      	cmp	r3, #2
 801a240:	d1dc      	bne.n	801a1fc <_ZN8touchgfx8LCD16bpp28getTextureMapperDrawScanLineERKNS_14TextureSurfaceEth+0x24>
 801a242:	6900      	ldr	r0, [r0, #16]
 801a244:	4770      	bx	lr
 801a246:	6a00      	ldr	r0, [r0, #32]
 801a248:	4770      	bx	lr
 801a24a:	6980      	ldr	r0, [r0, #24]
 801a24c:	4770      	bx	lr
 801a24e:	684b      	ldr	r3, [r1, #4]
 801a250:	781b      	ldrb	r3, [r3, #0]
 801a252:	2b00      	cmp	r3, #0
 801a254:	d1d2      	bne.n	801a1fc <_ZN8touchgfx8LCD16bpp28getTextureMapperDrawScanLineERKNS_14TextureSurfaceEth+0x24>
 801a256:	6b00      	ldr	r0, [r0, #48]	; 0x30
 801a258:	4770      	bx	lr
 801a25a:	684b      	ldr	r3, [r1, #4]
 801a25c:	781b      	ldrb	r3, [r3, #0]
 801a25e:	2b00      	cmp	r3, #0
 801a260:	d1cc      	bne.n	801a1fc <_ZN8touchgfx8LCD16bpp28getTextureMapperDrawScanLineERKNS_14TextureSurfaceEth+0x24>
 801a262:	6a80      	ldr	r0, [r0, #40]	; 0x28
 801a264:	4770      	bx	lr
 801a266:	6c80      	ldr	r0, [r0, #72]	; 0x48
 801a268:	4770      	bx	lr
 801a26a:	6d00      	ldr	r0, [r0, #80]	; 0x50
 801a26c:	4770      	bx	lr
 801a26e:	6c00      	ldr	r0, [r0, #64]	; 0x40
 801a270:	4770      	bx	lr
 801a272:	6d80      	ldr	r0, [r0, #88]	; 0x58
 801a274:	4770      	bx	lr
 801a276:	6e00      	ldr	r0, [r0, #96]	; 0x60
 801a278:	4770      	bx	lr
 801a27a:	6e80      	ldr	r0, [r0, #104]	; 0x68
 801a27c:	4770      	bx	lr
 801a27e:	2a0b      	cmp	r2, #11
 801a280:	d049      	beq.n	801a316 <_ZN8touchgfx8LCD16bpp28getTextureMapperDrawScanLineERKNS_14TextureSurfaceEth+0x13e>
 801a282:	d80e      	bhi.n	801a2a2 <_ZN8touchgfx8LCD16bpp28getTextureMapperDrawScanLineERKNS_14TextureSurfaceEth+0xca>
 801a284:	2a03      	cmp	r2, #3
 801a286:	d040      	beq.n	801a30a <_ZN8touchgfx8LCD16bpp28getTextureMapperDrawScanLineERKNS_14TextureSurfaceEth+0x132>
 801a288:	d804      	bhi.n	801a294 <_ZN8touchgfx8LCD16bpp28getTextureMapperDrawScanLineERKNS_14TextureSurfaceEth+0xbc>
 801a28a:	2a01      	cmp	r2, #1
 801a28c:	d03f      	beq.n	801a30e <_ZN8touchgfx8LCD16bpp28getTextureMapperDrawScanLineERKNS_14TextureSurfaceEth+0x136>
 801a28e:	d940      	bls.n	801a312 <_ZN8touchgfx8LCD16bpp28getTextureMapperDrawScanLineERKNS_14TextureSurfaceEth+0x13a>
 801a290:	6bc0      	ldr	r0, [r0, #60]	; 0x3c
 801a292:	4770      	bx	lr
 801a294:	2a09      	cmp	r2, #9
 801a296:	d03e      	beq.n	801a316 <_ZN8touchgfx8LCD16bpp28getTextureMapperDrawScanLineERKNS_14TextureSurfaceEth+0x13e>
 801a298:	d801      	bhi.n	801a29e <_ZN8touchgfx8LCD16bpp28getTextureMapperDrawScanLineERKNS_14TextureSurfaceEth+0xc6>
 801a29a:	2a08      	cmp	r2, #8
 801a29c:	d1ae      	bne.n	801a1fc <_ZN8touchgfx8LCD16bpp28getTextureMapperDrawScanLineERKNS_14TextureSurfaceEth+0x24>
 801a29e:	6dc0      	ldr	r0, [r0, #92]	; 0x5c
 801a2a0:	4770      	bx	lr
 801a2a2:	2a2f      	cmp	r2, #47	; 0x2f
 801a2a4:	d024      	beq.n	801a2f0 <_ZN8touchgfx8LCD16bpp28getTextureMapperDrawScanLineERKNS_14TextureSurfaceEth+0x118>
 801a2a6:	d80d      	bhi.n	801a2c4 <_ZN8touchgfx8LCD16bpp28getTextureMapperDrawScanLineERKNS_14TextureSurfaceEth+0xec>
 801a2a8:	2a2d      	cmp	r2, #45	; 0x2d
 801a2aa:	d014      	beq.n	801a2d6 <_ZN8touchgfx8LCD16bpp28getTextureMapperDrawScanLineERKNS_14TextureSurfaceEth+0xfe>
 801a2ac:	d826      	bhi.n	801a2fc <_ZN8touchgfx8LCD16bpp28getTextureMapperDrawScanLineERKNS_14TextureSurfaceEth+0x124>
 801a2ae:	2a2c      	cmp	r2, #44	; 0x2c
 801a2b0:	d1a4      	bne.n	801a1fc <_ZN8touchgfx8LCD16bpp28getTextureMapperDrawScanLineERKNS_14TextureSurfaceEth+0x24>
 801a2b2:	684b      	ldr	r3, [r1, #4]
 801a2b4:	781b      	ldrb	r3, [r3, #0]
 801a2b6:	2b01      	cmp	r3, #1
 801a2b8:	d018      	beq.n	801a2ec <_ZN8touchgfx8LCD16bpp28getTextureMapperDrawScanLineERKNS_14TextureSurfaceEth+0x114>
 801a2ba:	d324      	bcc.n	801a306 <_ZN8touchgfx8LCD16bpp28getTextureMapperDrawScanLineERKNS_14TextureSurfaceEth+0x12e>
 801a2bc:	2b02      	cmp	r3, #2
 801a2be:	d19d      	bne.n	801a1fc <_ZN8touchgfx8LCD16bpp28getTextureMapperDrawScanLineERKNS_14TextureSurfaceEth+0x24>
 801a2c0:	68c0      	ldr	r0, [r0, #12]
 801a2c2:	4770      	bx	lr
 801a2c4:	2a31      	cmp	r2, #49	; 0x31
 801a2c6:	d004      	beq.n	801a2d2 <_ZN8touchgfx8LCD16bpp28getTextureMapperDrawScanLineERKNS_14TextureSurfaceEth+0xfa>
 801a2c8:	d327      	bcc.n	801a31a <_ZN8touchgfx8LCD16bpp28getTextureMapperDrawScanLineERKNS_14TextureSurfaceEth+0x142>
 801a2ca:	2a32      	cmp	r2, #50	; 0x32
 801a2cc:	d025      	beq.n	801a31a <_ZN8touchgfx8LCD16bpp28getTextureMapperDrawScanLineERKNS_14TextureSurfaceEth+0x142>
 801a2ce:	2a33      	cmp	r2, #51	; 0x33
 801a2d0:	d194      	bne.n	801a1fc <_ZN8touchgfx8LCD16bpp28getTextureMapperDrawScanLineERKNS_14TextureSurfaceEth+0x24>
 801a2d2:	6f40      	ldr	r0, [r0, #116]	; 0x74
 801a2d4:	4770      	bx	lr
 801a2d6:	684b      	ldr	r3, [r1, #4]
 801a2d8:	781b      	ldrb	r3, [r3, #0]
 801a2da:	2b01      	cmp	r3, #1
 801a2dc:	d004      	beq.n	801a2e8 <_ZN8touchgfx8LCD16bpp28getTextureMapperDrawScanLineERKNS_14TextureSurfaceEth+0x110>
 801a2de:	d30b      	bcc.n	801a2f8 <_ZN8touchgfx8LCD16bpp28getTextureMapperDrawScanLineERKNS_14TextureSurfaceEth+0x120>
 801a2e0:	2b02      	cmp	r3, #2
 801a2e2:	d18b      	bne.n	801a1fc <_ZN8touchgfx8LCD16bpp28getTextureMapperDrawScanLineERKNS_14TextureSurfaceEth+0x24>
 801a2e4:	6940      	ldr	r0, [r0, #20]
 801a2e6:	4770      	bx	lr
 801a2e8:	6a40      	ldr	r0, [r0, #36]	; 0x24
 801a2ea:	4770      	bx	lr
 801a2ec:	69c0      	ldr	r0, [r0, #28]
 801a2ee:	4770      	bx	lr
 801a2f0:	684b      	ldr	r3, [r1, #4]
 801a2f2:	781b      	ldrb	r3, [r3, #0]
 801a2f4:	2b00      	cmp	r3, #0
 801a2f6:	d181      	bne.n	801a1fc <_ZN8touchgfx8LCD16bpp28getTextureMapperDrawScanLineERKNS_14TextureSurfaceEth+0x24>
 801a2f8:	6b40      	ldr	r0, [r0, #52]	; 0x34
 801a2fa:	4770      	bx	lr
 801a2fc:	684b      	ldr	r3, [r1, #4]
 801a2fe:	781b      	ldrb	r3, [r3, #0]
 801a300:	2b00      	cmp	r3, #0
 801a302:	f47f af7b 	bne.w	801a1fc <_ZN8touchgfx8LCD16bpp28getTextureMapperDrawScanLineERKNS_14TextureSurfaceEth+0x24>
 801a306:	6ac0      	ldr	r0, [r0, #44]	; 0x2c
 801a308:	4770      	bx	lr
 801a30a:	6cc0      	ldr	r0, [r0, #76]	; 0x4c
 801a30c:	4770      	bx	lr
 801a30e:	6d40      	ldr	r0, [r0, #84]	; 0x54
 801a310:	4770      	bx	lr
 801a312:	6c40      	ldr	r0, [r0, #68]	; 0x44
 801a314:	4770      	bx	lr
 801a316:	6e40      	ldr	r0, [r0, #100]	; 0x64
 801a318:	4770      	bx	lr
 801a31a:	6ec0      	ldr	r0, [r0, #108]	; 0x6c
 801a31c:	4770      	bx	lr

0801a31e <_ZN8touchgfx8LCD16bpp49TextureMapper_L8_RGB565_Opaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff>:
 801a31e:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 801a322:	b087      	sub	sp, #28
 801a324:	9815      	ldr	r0, [sp, #84]	; 0x54
 801a326:	9205      	str	r2, [sp, #20]
 801a328:	f89d 2064 	ldrb.w	r2, [sp, #100]	; 0x64
 801a32c:	9202      	str	r2, [sp, #8]
 801a32e:	e9dd 2416 	ldrd	r2, r4, [sp, #88]	; 0x58
 801a332:	9101      	str	r1, [sp, #4]
 801a334:	6841      	ldr	r1, [r0, #4]
 801a336:	f8dd e060 	ldr.w	lr, [sp, #96]	; 0x60
 801a33a:	fb01 2404 	mla	r4, r1, r4, r2
 801a33e:	6802      	ldr	r2, [r0, #0]
 801a340:	eb02 0444 	add.w	r4, r2, r4, lsl #1
 801a344:	f8de 2000 	ldr.w	r2, [lr]
 801a348:	9203      	str	r2, [sp, #12]
 801a34a:	f8de 2004 	ldr.w	r2, [lr, #4]
 801a34e:	3204      	adds	r2, #4
 801a350:	9204      	str	r2, [sp, #16]
 801a352:	9a02      	ldr	r2, [sp, #8]
 801a354:	43d6      	mvns	r6, r2
 801a356:	b2f6      	uxtb	r6, r6
 801a358:	9a01      	ldr	r2, [sp, #4]
 801a35a:	2a00      	cmp	r2, #0
 801a35c:	dc03      	bgt.n	801a366 <_ZN8touchgfx8LCD16bpp49TextureMapper_L8_RGB565_Opaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x48>
 801a35e:	9a05      	ldr	r2, [sp, #20]
 801a360:	2a00      	cmp	r2, #0
 801a362:	f340 8129 	ble.w	801a5b8 <_ZN8touchgfx8LCD16bpp49TextureMapper_L8_RGB565_Opaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x29a>
 801a366:	9a11      	ldr	r2, [sp, #68]	; 0x44
 801a368:	f9be c008 	ldrsh.w	ip, [lr, #8]
 801a36c:	f9be 700c 	ldrsh.w	r7, [lr, #12]
 801a370:	f502 4100 	add.w	r1, r2, #32768	; 0x8000
 801a374:	9a12      	ldr	r2, [sp, #72]	; 0x48
 801a376:	f502 4200 	add.w	r2, r2, #32768	; 0x8000
 801a37a:	2b00      	cmp	r3, #0
 801a37c:	dd0e      	ble.n	801a39c <_ZN8touchgfx8LCD16bpp49TextureMapper_L8_RGB565_Opaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x7e>
 801a37e:	1408      	asrs	r0, r1, #16
 801a380:	d405      	bmi.n	801a38e <_ZN8touchgfx8LCD16bpp49TextureMapper_L8_RGB565_Opaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x70>
 801a382:	4560      	cmp	r0, ip
 801a384:	da03      	bge.n	801a38e <_ZN8touchgfx8LCD16bpp49TextureMapper_L8_RGB565_Opaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x70>
 801a386:	1410      	asrs	r0, r2, #16
 801a388:	d401      	bmi.n	801a38e <_ZN8touchgfx8LCD16bpp49TextureMapper_L8_RGB565_Opaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x70>
 801a38a:	42b8      	cmp	r0, r7
 801a38c:	db07      	blt.n	801a39e <_ZN8touchgfx8LCD16bpp49TextureMapper_L8_RGB565_Opaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x80>
 801a38e:	9813      	ldr	r0, [sp, #76]	; 0x4c
 801a390:	4401      	add	r1, r0
 801a392:	9814      	ldr	r0, [sp, #80]	; 0x50
 801a394:	3b01      	subs	r3, #1
 801a396:	4402      	add	r2, r0
 801a398:	3402      	adds	r4, #2
 801a39a:	e7ee      	b.n	801a37a <_ZN8touchgfx8LCD16bpp49TextureMapper_L8_RGB565_Opaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x5c>
 801a39c:	d071      	beq.n	801a482 <_ZN8touchgfx8LCD16bpp49TextureMapper_L8_RGB565_Opaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x164>
 801a39e:	9d13      	ldr	r5, [sp, #76]	; 0x4c
 801a3a0:	1e58      	subs	r0, r3, #1
 801a3a2:	fb05 1500 	mla	r5, r5, r0, r1
 801a3a6:	142d      	asrs	r5, r5, #16
 801a3a8:	d45f      	bmi.n	801a46a <_ZN8touchgfx8LCD16bpp49TextureMapper_L8_RGB565_Opaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x14c>
 801a3aa:	4565      	cmp	r5, ip
 801a3ac:	da5d      	bge.n	801a46a <_ZN8touchgfx8LCD16bpp49TextureMapper_L8_RGB565_Opaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x14c>
 801a3ae:	9d14      	ldr	r5, [sp, #80]	; 0x50
 801a3b0:	fb05 2000 	mla	r0, r5, r0, r2
 801a3b4:	1400      	asrs	r0, r0, #16
 801a3b6:	d458      	bmi.n	801a46a <_ZN8touchgfx8LCD16bpp49TextureMapper_L8_RGB565_Opaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x14c>
 801a3b8:	42b8      	cmp	r0, r7
 801a3ba:	da56      	bge.n	801a46a <_ZN8touchgfx8LCD16bpp49TextureMapper_L8_RGB565_Opaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x14c>
 801a3bc:	f8bd b008 	ldrh.w	fp, [sp, #8]
 801a3c0:	4699      	mov	r9, r3
 801a3c2:	46a2      	mov	sl, r4
 801a3c4:	f1b9 0f00 	cmp.w	r9, #0
 801a3c8:	dd57      	ble.n	801a47a <_ZN8touchgfx8LCD16bpp49TextureMapper_L8_RGB565_Opaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x15c>
 801a3ca:	f9be 7008 	ldrsh.w	r7, [lr, #8]
 801a3ce:	9803      	ldr	r0, [sp, #12]
 801a3d0:	ea4f 4c22 	mov.w	ip, r2, asr #16
 801a3d4:	140d      	asrs	r5, r1, #16
 801a3d6:	fb07 000c 	mla	r0, r7, ip, r0
 801a3da:	f109 39ff 	add.w	r9, r9, #4294967295
 801a3de:	5d40      	ldrb	r0, [r0, r5]
 801a3e0:	9d04      	ldr	r5, [sp, #16]
 801a3e2:	f835 0010 	ldrh.w	r0, [r5, r0, lsl #1]
 801a3e6:	f8ba 5000 	ldrh.w	r5, [sl]
 801a3ea:	122f      	asrs	r7, r5, #8
 801a3ec:	ea4f 2c20 	mov.w	ip, r0, asr #8
 801a3f0:	f007 07f8 	and.w	r7, r7, #248	; 0xf8
 801a3f4:	fb17 f706 	smulbb	r7, r7, r6
 801a3f8:	ea4f 08e5 	mov.w	r8, r5, asr #3
 801a3fc:	f00c 0cf8 	and.w	ip, ip, #248	; 0xf8
 801a400:	00ed      	lsls	r5, r5, #3
 801a402:	fb0c 7c0b 	mla	ip, ip, fp, r7
 801a406:	f008 08fc 	and.w	r8, r8, #252	; 0xfc
 801a40a:	10c7      	asrs	r7, r0, #3
 801a40c:	b2ed      	uxtb	r5, r5
 801a40e:	00c0      	lsls	r0, r0, #3
 801a410:	fb18 f806 	smulbb	r8, r8, r6
 801a414:	fb15 f506 	smulbb	r5, r5, r6
 801a418:	f007 07fc 	and.w	r7, r7, #252	; 0xfc
 801a41c:	b2c0      	uxtb	r0, r0
 801a41e:	fa1f fc8c 	uxth.w	ip, ip
 801a422:	fb07 870b 	mla	r7, r7, fp, r8
 801a426:	fb00 500b 	mla	r0, r0, fp, r5
 801a42a:	b280      	uxth	r0, r0
 801a42c:	b2bf      	uxth	r7, r7
 801a42e:	f10c 0501 	add.w	r5, ip, #1
 801a432:	eb05 2c1c 	add.w	ip, r5, ip, lsr #8
 801a436:	f107 0801 	add.w	r8, r7, #1
 801a43a:	1c45      	adds	r5, r0, #1
 801a43c:	eb05 2510 	add.w	r5, r5, r0, lsr #8
 801a440:	eb08 2817 	add.w	r8, r8, r7, lsr #8
 801a444:	9813      	ldr	r0, [sp, #76]	; 0x4c
 801a446:	f40c 4c78 	and.w	ip, ip, #63488	; 0xf800
 801a44a:	f3c5 25c4 	ubfx	r5, r5, #11, #5
 801a44e:	ea4f 1858 	mov.w	r8, r8, lsr #5
 801a452:	ea45 0c0c 	orr.w	ip, r5, ip
 801a456:	f408 68fc 	and.w	r8, r8, #2016	; 0x7e0
 801a45a:	4401      	add	r1, r0
 801a45c:	9814      	ldr	r0, [sp, #80]	; 0x50
 801a45e:	ea4c 0c08 	orr.w	ip, ip, r8
 801a462:	f82a cb02 	strh.w	ip, [sl], #2
 801a466:	4402      	add	r2, r0
 801a468:	e7ac      	b.n	801a3c4 <_ZN8touchgfx8LCD16bpp49TextureMapper_L8_RGB565_Opaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0xa6>
 801a46a:	f8bd a008 	ldrh.w	sl, [sp, #8]
 801a46e:	f04f 0800 	mov.w	r8, #0
 801a472:	eb03 0008 	add.w	r0, r3, r8
 801a476:	2800      	cmp	r0, #0
 801a478:	dc41      	bgt.n	801a4fe <_ZN8touchgfx8LCD16bpp49TextureMapper_L8_RGB565_Opaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x1e0>
 801a47a:	ea23 73e3 	bic.w	r3, r3, r3, asr #31
 801a47e:	eb04 0443 	add.w	r4, r4, r3, lsl #1
 801a482:	9b01      	ldr	r3, [sp, #4]
 801a484:	2b00      	cmp	r3, #0
 801a486:	f340 8097 	ble.w	801a5b8 <_ZN8touchgfx8LCD16bpp49TextureMapper_L8_RGB565_Opaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x29a>
 801a48a:	ee30 0a04 	vadd.f32	s0, s0, s8
 801a48e:	eeb7 7a00 	vmov.f32	s14, #112	; 0x3f800000  1.0
 801a492:	eec7 7a00 	vdiv.f32	s15, s14, s0
 801a496:	9b10      	ldr	r3, [sp, #64]	; 0x40
 801a498:	ee70 0aa4 	vadd.f32	s1, s1, s9
 801a49c:	ee31 1a05 	vadd.f32	s2, s2, s10
 801a4a0:	ee20 7aa7 	vmul.f32	s14, s1, s15
 801a4a4:	eef0 6a62 	vmov.f32	s13, s5
 801a4a8:	ee61 7a27 	vmul.f32	s15, s2, s15
 801a4ac:	eefe 6ac8 	vcvt.s32.f32	s13, s13, #16
 801a4b0:	ee77 2a62 	vsub.f32	s5, s14, s5
 801a4b4:	edcd 6a11 	vstr	s13, [sp, #68]	; 0x44
 801a4b8:	eefe 2ac8 	vcvt.s32.f32	s5, s5, #16
 801a4bc:	eef0 6a43 	vmov.f32	s13, s6
 801a4c0:	ee37 3ac3 	vsub.f32	s6, s15, s6
 801a4c4:	ee12 2a90 	vmov	r2, s5
 801a4c8:	eebe 3ac8 	vcvt.s32.f32	s6, s6, #16
 801a4cc:	fb92 f3f3 	sdiv	r3, r2, r3
 801a4d0:	ee13 2a10 	vmov	r2, s6
 801a4d4:	9313      	str	r3, [sp, #76]	; 0x4c
 801a4d6:	9b10      	ldr	r3, [sp, #64]	; 0x40
 801a4d8:	fb92 f3f3 	sdiv	r3, r2, r3
 801a4dc:	9314      	str	r3, [sp, #80]	; 0x50
 801a4de:	9b01      	ldr	r3, [sp, #4]
 801a4e0:	9a05      	ldr	r2, [sp, #20]
 801a4e2:	eefe 6ac8 	vcvt.s32.f32	s13, s13, #16
 801a4e6:	3b01      	subs	r3, #1
 801a4e8:	9301      	str	r3, [sp, #4]
 801a4ea:	edcd 6a12 	vstr	s13, [sp, #72]	; 0x48
 801a4ee:	9b10      	ldr	r3, [sp, #64]	; 0x40
 801a4f0:	eeb0 3a67 	vmov.f32	s6, s15
 801a4f4:	bf08      	it	eq
 801a4f6:	4613      	moveq	r3, r2
 801a4f8:	eef0 2a47 	vmov.f32	s5, s14
 801a4fc:	e72c      	b.n	801a358 <_ZN8touchgfx8LCD16bpp49TextureMapper_L8_RGB565_Opaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x3a>
 801a4fe:	140f      	asrs	r7, r1, #16
 801a500:	d453      	bmi.n	801a5aa <_ZN8touchgfx8LCD16bpp49TextureMapper_L8_RGB565_Opaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x28c>
 801a502:	f8de 5008 	ldr.w	r5, [lr, #8]
 801a506:	42bd      	cmp	r5, r7
 801a508:	dd4f      	ble.n	801a5aa <_ZN8touchgfx8LCD16bpp49TextureMapper_L8_RGB565_Opaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x28c>
 801a50a:	ea5f 4c22 	movs.w	ip, r2, asr #16
 801a50e:	d44c      	bmi.n	801a5aa <_ZN8touchgfx8LCD16bpp49TextureMapper_L8_RGB565_Opaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x28c>
 801a510:	f8de 000c 	ldr.w	r0, [lr, #12]
 801a514:	4560      	cmp	r0, ip
 801a516:	dd48      	ble.n	801a5aa <_ZN8touchgfx8LCD16bpp49TextureMapper_L8_RGB565_Opaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x28c>
 801a518:	9803      	ldr	r0, [sp, #12]
 801a51a:	b22d      	sxth	r5, r5
 801a51c:	fb0c 0505 	mla	r5, ip, r5, r0
 801a520:	5de8      	ldrb	r0, [r5, r7]
 801a522:	9d04      	ldr	r5, [sp, #16]
 801a524:	f835 0010 	ldrh.w	r0, [r5, r0, lsl #1]
 801a528:	f06f 0501 	mvn.w	r5, #1
 801a52c:	fb05 fb08 	mul.w	fp, r5, r8
 801a530:	ea4f 2c20 	mov.w	ip, r0, asr #8
 801a534:	f834 500b 	ldrh.w	r5, [r4, fp]
 801a538:	122f      	asrs	r7, r5, #8
 801a53a:	f007 07f8 	and.w	r7, r7, #248	; 0xf8
 801a53e:	fb17 f706 	smulbb	r7, r7, r6
 801a542:	ea4f 09e5 	mov.w	r9, r5, asr #3
 801a546:	f00c 0cf8 	and.w	ip, ip, #248	; 0xf8
 801a54a:	00ed      	lsls	r5, r5, #3
 801a54c:	fb0c 7c0a 	mla	ip, ip, sl, r7
 801a550:	f009 09fc 	and.w	r9, r9, #252	; 0xfc
 801a554:	10c7      	asrs	r7, r0, #3
 801a556:	b2ed      	uxtb	r5, r5
 801a558:	00c0      	lsls	r0, r0, #3
 801a55a:	fb19 f906 	smulbb	r9, r9, r6
 801a55e:	fb15 f506 	smulbb	r5, r5, r6
 801a562:	f007 07fc 	and.w	r7, r7, #252	; 0xfc
 801a566:	b2c0      	uxtb	r0, r0
 801a568:	fa1f fc8c 	uxth.w	ip, ip
 801a56c:	fb07 970a 	mla	r7, r7, sl, r9
 801a570:	fb00 500a 	mla	r0, r0, sl, r5
 801a574:	b2bf      	uxth	r7, r7
 801a576:	b280      	uxth	r0, r0
 801a578:	f10c 0501 	add.w	r5, ip, #1
 801a57c:	eb05 2c1c 	add.w	ip, r5, ip, lsr #8
 801a580:	f107 0901 	add.w	r9, r7, #1
 801a584:	1c45      	adds	r5, r0, #1
 801a586:	eb05 2510 	add.w	r5, r5, r0, lsr #8
 801a58a:	eb09 2917 	add.w	r9, r9, r7, lsr #8
 801a58e:	f40c 4c78 	and.w	ip, ip, #63488	; 0xf800
 801a592:	f3c5 25c4 	ubfx	r5, r5, #11, #5
 801a596:	ea4f 1959 	mov.w	r9, r9, lsr #5
 801a59a:	ea45 0c0c 	orr.w	ip, r5, ip
 801a59e:	f409 69fc 	and.w	r9, r9, #2016	; 0x7e0
 801a5a2:	ea4c 0c09 	orr.w	ip, ip, r9
 801a5a6:	f824 c00b 	strh.w	ip, [r4, fp]
 801a5aa:	9813      	ldr	r0, [sp, #76]	; 0x4c
 801a5ac:	4401      	add	r1, r0
 801a5ae:	9814      	ldr	r0, [sp, #80]	; 0x50
 801a5b0:	f108 38ff 	add.w	r8, r8, #4294967295
 801a5b4:	4402      	add	r2, r0
 801a5b6:	e75c      	b.n	801a472 <_ZN8touchgfx8LCD16bpp49TextureMapper_L8_RGB565_Opaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x154>
 801a5b8:	b007      	add	sp, #28
 801a5ba:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}

0801a5be <_ZN8touchgfx8LCD16bpp51TextureMapper_L8_RGB565_Opaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff>:
 801a5be:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 801a5c2:	b085      	sub	sp, #20
 801a5c4:	4693      	mov	fp, r2
 801a5c6:	9e13      	ldr	r6, [sp, #76]	; 0x4c
 801a5c8:	9d16      	ldr	r5, [sp, #88]	; 0x58
 801a5ca:	6870      	ldr	r0, [r6, #4]
 801a5cc:	9100      	str	r1, [sp, #0]
 801a5ce:	e9dd 2414 	ldrd	r2, r4, [sp, #80]	; 0x50
 801a5d2:	fb00 2404 	mla	r4, r0, r4, r2
 801a5d6:	6832      	ldr	r2, [r6, #0]
 801a5d8:	eb02 0444 	add.w	r4, r2, r4, lsl #1
 801a5dc:	682a      	ldr	r2, [r5, #0]
 801a5de:	9201      	str	r2, [sp, #4]
 801a5e0:	686a      	ldr	r2, [r5, #4]
 801a5e2:	e9dd ec11 	ldrd	lr, ip, [sp, #68]	; 0x44
 801a5e6:	3204      	adds	r2, #4
 801a5e8:	9202      	str	r2, [sp, #8]
 801a5ea:	eef7 6a00 	vmov.f32	s13, #112	; 0x3f800000  1.0
 801a5ee:	9a00      	ldr	r2, [sp, #0]
 801a5f0:	2a00      	cmp	r2, #0
 801a5f2:	dc03      	bgt.n	801a5fc <_ZN8touchgfx8LCD16bpp51TextureMapper_L8_RGB565_Opaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x3e>
 801a5f4:	f1bb 0f00 	cmp.w	fp, #0
 801a5f8:	f340 80a0 	ble.w	801a73c <_ZN8touchgfx8LCD16bpp51TextureMapper_L8_RGB565_Opaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x17e>
 801a5fc:	9a0f      	ldr	r2, [sp, #60]	; 0x3c
 801a5fe:	f9b5 9008 	ldrsh.w	r9, [r5, #8]
 801a602:	f9b5 800c 	ldrsh.w	r8, [r5, #12]
 801a606:	f502 4000 	add.w	r0, r2, #32768	; 0x8000
 801a60a:	9a10      	ldr	r2, [sp, #64]	; 0x40
 801a60c:	f502 4200 	add.w	r2, r2, #32768	; 0x8000
 801a610:	2b00      	cmp	r3, #0
 801a612:	dd0c      	ble.n	801a62e <_ZN8touchgfx8LCD16bpp51TextureMapper_L8_RGB565_Opaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x70>
 801a614:	1406      	asrs	r6, r0, #16
 801a616:	d405      	bmi.n	801a624 <_ZN8touchgfx8LCD16bpp51TextureMapper_L8_RGB565_Opaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x66>
 801a618:	454e      	cmp	r6, r9
 801a61a:	da03      	bge.n	801a624 <_ZN8touchgfx8LCD16bpp51TextureMapper_L8_RGB565_Opaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x66>
 801a61c:	1416      	asrs	r6, r2, #16
 801a61e:	d401      	bmi.n	801a624 <_ZN8touchgfx8LCD16bpp51TextureMapper_L8_RGB565_Opaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x66>
 801a620:	4546      	cmp	r6, r8
 801a622:	db05      	blt.n	801a630 <_ZN8touchgfx8LCD16bpp51TextureMapper_L8_RGB565_Opaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x72>
 801a624:	4470      	add	r0, lr
 801a626:	4462      	add	r2, ip
 801a628:	3b01      	subs	r3, #1
 801a62a:	3402      	adds	r4, #2
 801a62c:	e7f0      	b.n	801a610 <_ZN8touchgfx8LCD16bpp51TextureMapper_L8_RGB565_Opaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x52>
 801a62e:	d00f      	beq.n	801a650 <_ZN8touchgfx8LCD16bpp51TextureMapper_L8_RGB565_Opaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x92>
 801a630:	1e5e      	subs	r6, r3, #1
 801a632:	fb0e 0706 	mla	r7, lr, r6, r0
 801a636:	143f      	asrs	r7, r7, #16
 801a638:	d541      	bpl.n	801a6be <_ZN8touchgfx8LCD16bpp51TextureMapper_L8_RGB565_Opaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x100>
 801a63a:	eb04 0643 	add.w	r6, r4, r3, lsl #1
 801a63e:	4698      	mov	r8, r3
 801a640:	9603      	str	r6, [sp, #12]
 801a642:	f1b8 0f00 	cmp.w	r8, #0
 801a646:	dc59      	bgt.n	801a6fc <_ZN8touchgfx8LCD16bpp51TextureMapper_L8_RGB565_Opaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x13e>
 801a648:	ea23 73e3 	bic.w	r3, r3, r3, asr #31
 801a64c:	eb04 0443 	add.w	r4, r4, r3, lsl #1
 801a650:	9b00      	ldr	r3, [sp, #0]
 801a652:	2b00      	cmp	r3, #0
 801a654:	dd72      	ble.n	801a73c <_ZN8touchgfx8LCD16bpp51TextureMapper_L8_RGB565_Opaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x17e>
 801a656:	ee30 0a04 	vadd.f32	s0, s0, s8
 801a65a:	ee70 0aa4 	vadd.f32	s1, s1, s9
 801a65e:	eec6 7a80 	vdiv.f32	s15, s13, s0
 801a662:	9b0e      	ldr	r3, [sp, #56]	; 0x38
 801a664:	ee31 1a05 	vadd.f32	s2, s2, s10
 801a668:	ee20 7aa7 	vmul.f32	s14, s1, s15
 801a66c:	eeb0 6a62 	vmov.f32	s12, s5
 801a670:	ee61 7a27 	vmul.f32	s15, s2, s15
 801a674:	eebe 6ac8 	vcvt.s32.f32	s12, s12, #16
 801a678:	ee77 2a62 	vsub.f32	s5, s14, s5
 801a67c:	ed8d 6a0f 	vstr	s12, [sp, #60]	; 0x3c
 801a680:	eefe 2ac8 	vcvt.s32.f32	s5, s5, #16
 801a684:	eeb0 6a43 	vmov.f32	s12, s6
 801a688:	ee37 3ac3 	vsub.f32	s6, s15, s6
 801a68c:	ee12 2a90 	vmov	r2, s5
 801a690:	eebe 3ac8 	vcvt.s32.f32	s6, s6, #16
 801a694:	fb92 fef3 	sdiv	lr, r2, r3
 801a698:	ee13 2a10 	vmov	r2, s6
 801a69c:	fb92 fcf3 	sdiv	ip, r2, r3
 801a6a0:	9b00      	ldr	r3, [sp, #0]
 801a6a2:	eebe 6ac8 	vcvt.s32.f32	s12, s12, #16
 801a6a6:	3b01      	subs	r3, #1
 801a6a8:	9300      	str	r3, [sp, #0]
 801a6aa:	ed8d 6a10 	vstr	s12, [sp, #64]	; 0x40
 801a6ae:	9b0e      	ldr	r3, [sp, #56]	; 0x38
 801a6b0:	eeb0 3a67 	vmov.f32	s6, s15
 801a6b4:	bf08      	it	eq
 801a6b6:	465b      	moveq	r3, fp
 801a6b8:	eef0 2a47 	vmov.f32	s5, s14
 801a6bc:	e797      	b.n	801a5ee <_ZN8touchgfx8LCD16bpp51TextureMapper_L8_RGB565_Opaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x30>
 801a6be:	454f      	cmp	r7, r9
 801a6c0:	dabb      	bge.n	801a63a <_ZN8touchgfx8LCD16bpp51TextureMapper_L8_RGB565_Opaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x7c>
 801a6c2:	fb0c 2606 	mla	r6, ip, r6, r2
 801a6c6:	1436      	asrs	r6, r6, #16
 801a6c8:	d4b7      	bmi.n	801a63a <_ZN8touchgfx8LCD16bpp51TextureMapper_L8_RGB565_Opaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x7c>
 801a6ca:	4546      	cmp	r6, r8
 801a6cc:	dab5      	bge.n	801a63a <_ZN8touchgfx8LCD16bpp51TextureMapper_L8_RGB565_Opaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x7c>
 801a6ce:	461e      	mov	r6, r3
 801a6d0:	46a0      	mov	r8, r4
 801a6d2:	2e00      	cmp	r6, #0
 801a6d4:	ddb8      	ble.n	801a648 <_ZN8touchgfx8LCD16bpp51TextureMapper_L8_RGB565_Opaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x8a>
 801a6d6:	f9b5 a008 	ldrsh.w	sl, [r5, #8]
 801a6da:	9901      	ldr	r1, [sp, #4]
 801a6dc:	1417      	asrs	r7, r2, #16
 801a6de:	ea4f 4920 	mov.w	r9, r0, asr #16
 801a6e2:	fb0a 1707 	mla	r7, sl, r7, r1
 801a6e6:	9902      	ldr	r1, [sp, #8]
 801a6e8:	f817 7009 	ldrb.w	r7, [r7, r9]
 801a6ec:	f831 7017 	ldrh.w	r7, [r1, r7, lsl #1]
 801a6f0:	f828 7b02 	strh.w	r7, [r8], #2
 801a6f4:	4470      	add	r0, lr
 801a6f6:	4462      	add	r2, ip
 801a6f8:	3e01      	subs	r6, #1
 801a6fa:	e7ea      	b.n	801a6d2 <_ZN8touchgfx8LCD16bpp51TextureMapper_L8_RGB565_Opaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x114>
 801a6fc:	ea5f 4920 	movs.w	r9, r0, asr #16
 801a700:	d417      	bmi.n	801a732 <_ZN8touchgfx8LCD16bpp51TextureMapper_L8_RGB565_Opaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x174>
 801a702:	68ae      	ldr	r6, [r5, #8]
 801a704:	454e      	cmp	r6, r9
 801a706:	dd14      	ble.n	801a732 <_ZN8touchgfx8LCD16bpp51TextureMapper_L8_RGB565_Opaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x174>
 801a708:	ea5f 4a22 	movs.w	sl, r2, asr #16
 801a70c:	d411      	bmi.n	801a732 <_ZN8touchgfx8LCD16bpp51TextureMapper_L8_RGB565_Opaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x174>
 801a70e:	68ef      	ldr	r7, [r5, #12]
 801a710:	4557      	cmp	r7, sl
 801a712:	dd0e      	ble.n	801a732 <_ZN8touchgfx8LCD16bpp51TextureMapper_L8_RGB565_Opaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x174>
 801a714:	9f01      	ldr	r7, [sp, #4]
 801a716:	b236      	sxth	r6, r6
 801a718:	fb0a 7606 	mla	r6, sl, r6, r7
 801a71c:	9f02      	ldr	r7, [sp, #8]
 801a71e:	f816 6009 	ldrb.w	r6, [r6, r9]
 801a722:	f06f 0101 	mvn.w	r1, #1
 801a726:	f837 7016 	ldrh.w	r7, [r7, r6, lsl #1]
 801a72a:	fb01 f608 	mul.w	r6, r1, r8
 801a72e:	9903      	ldr	r1, [sp, #12]
 801a730:	538f      	strh	r7, [r1, r6]
 801a732:	4470      	add	r0, lr
 801a734:	4462      	add	r2, ip
 801a736:	f108 38ff 	add.w	r8, r8, #4294967295
 801a73a:	e782      	b.n	801a642 <_ZN8touchgfx8LCD16bpp51TextureMapper_L8_RGB565_Opaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x84>
 801a73c:	b005      	add	sp, #20
 801a73e:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}

0801a742 <_ZN8touchgfx8LCD16bpp49TextureMapper_L8_RGB888_Opaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff>:
 801a742:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 801a746:	b087      	sub	sp, #28
 801a748:	9c15      	ldr	r4, [sp, #84]	; 0x54
 801a74a:	9205      	str	r2, [sp, #20]
 801a74c:	f89d 2064 	ldrb.w	r2, [sp, #100]	; 0x64
 801a750:	9203      	str	r2, [sp, #12]
 801a752:	e9dd 2016 	ldrd	r2, r0, [sp, #88]	; 0x58
 801a756:	9102      	str	r1, [sp, #8]
 801a758:	6861      	ldr	r1, [r4, #4]
 801a75a:	f8dd c060 	ldr.w	ip, [sp, #96]	; 0x60
 801a75e:	fb01 2000 	mla	r0, r1, r0, r2
 801a762:	6822      	ldr	r2, [r4, #0]
 801a764:	eb02 0240 	add.w	r2, r2, r0, lsl #1
 801a768:	9200      	str	r2, [sp, #0]
 801a76a:	f8dc 2000 	ldr.w	r2, [ip]
 801a76e:	9204      	str	r2, [sp, #16]
 801a770:	f8dc 2004 	ldr.w	r2, [ip, #4]
 801a774:	3204      	adds	r2, #4
 801a776:	9201      	str	r2, [sp, #4]
 801a778:	9a03      	ldr	r2, [sp, #12]
 801a77a:	43d5      	mvns	r5, r2
 801a77c:	b2ed      	uxtb	r5, r5
 801a77e:	9a02      	ldr	r2, [sp, #8]
 801a780:	2a00      	cmp	r2, #0
 801a782:	dc03      	bgt.n	801a78c <_ZN8touchgfx8LCD16bpp49TextureMapper_L8_RGB888_Opaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x4a>
 801a784:	9a05      	ldr	r2, [sp, #20]
 801a786:	2a00      	cmp	r2, #0
 801a788:	f340 812c 	ble.w	801a9e4 <_ZN8touchgfx8LCD16bpp49TextureMapper_L8_RGB888_Opaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x2a2>
 801a78c:	9a11      	ldr	r2, [sp, #68]	; 0x44
 801a78e:	f9bc e008 	ldrsh.w	lr, [ip, #8]
 801a792:	f9bc 700c 	ldrsh.w	r7, [ip, #12]
 801a796:	f502 4100 	add.w	r1, r2, #32768	; 0x8000
 801a79a:	9a12      	ldr	r2, [sp, #72]	; 0x48
 801a79c:	f502 4200 	add.w	r2, r2, #32768	; 0x8000
 801a7a0:	2b00      	cmp	r3, #0
 801a7a2:	dd10      	ble.n	801a7c6 <_ZN8touchgfx8LCD16bpp49TextureMapper_L8_RGB888_Opaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x84>
 801a7a4:	140c      	asrs	r4, r1, #16
 801a7a6:	d405      	bmi.n	801a7b4 <_ZN8touchgfx8LCD16bpp49TextureMapper_L8_RGB888_Opaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x72>
 801a7a8:	4574      	cmp	r4, lr
 801a7aa:	da03      	bge.n	801a7b4 <_ZN8touchgfx8LCD16bpp49TextureMapper_L8_RGB888_Opaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x72>
 801a7ac:	1414      	asrs	r4, r2, #16
 801a7ae:	d401      	bmi.n	801a7b4 <_ZN8touchgfx8LCD16bpp49TextureMapper_L8_RGB888_Opaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x72>
 801a7b0:	42bc      	cmp	r4, r7
 801a7b2:	db09      	blt.n	801a7c8 <_ZN8touchgfx8LCD16bpp49TextureMapper_L8_RGB888_Opaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x86>
 801a7b4:	9c13      	ldr	r4, [sp, #76]	; 0x4c
 801a7b6:	9800      	ldr	r0, [sp, #0]
 801a7b8:	4421      	add	r1, r4
 801a7ba:	9c14      	ldr	r4, [sp, #80]	; 0x50
 801a7bc:	3002      	adds	r0, #2
 801a7be:	4422      	add	r2, r4
 801a7c0:	3b01      	subs	r3, #1
 801a7c2:	9000      	str	r0, [sp, #0]
 801a7c4:	e7ec      	b.n	801a7a0 <_ZN8touchgfx8LCD16bpp49TextureMapper_L8_RGB888_Opaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x5e>
 801a7c6:	d071      	beq.n	801a8ac <_ZN8touchgfx8LCD16bpp49TextureMapper_L8_RGB888_Opaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x16a>
 801a7c8:	9e13      	ldr	r6, [sp, #76]	; 0x4c
 801a7ca:	1e5c      	subs	r4, r3, #1
 801a7cc:	fb06 1604 	mla	r6, r6, r4, r1
 801a7d0:	1436      	asrs	r6, r6, #16
 801a7d2:	d45d      	bmi.n	801a890 <_ZN8touchgfx8LCD16bpp49TextureMapper_L8_RGB888_Opaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x14e>
 801a7d4:	4576      	cmp	r6, lr
 801a7d6:	da5b      	bge.n	801a890 <_ZN8touchgfx8LCD16bpp49TextureMapper_L8_RGB888_Opaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x14e>
 801a7d8:	9e14      	ldr	r6, [sp, #80]	; 0x50
 801a7da:	fb06 2404 	mla	r4, r6, r4, r2
 801a7de:	1424      	asrs	r4, r4, #16
 801a7e0:	d456      	bmi.n	801a890 <_ZN8touchgfx8LCD16bpp49TextureMapper_L8_RGB888_Opaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x14e>
 801a7e2:	42bc      	cmp	r4, r7
 801a7e4:	da54      	bge.n	801a890 <_ZN8touchgfx8LCD16bpp49TextureMapper_L8_RGB888_Opaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x14e>
 801a7e6:	f8dd 9000 	ldr.w	r9, [sp]
 801a7ea:	f8bd a00c 	ldrh.w	sl, [sp, #12]
 801a7ee:	4698      	mov	r8, r3
 801a7f0:	f1b8 0f00 	cmp.w	r8, #0
 801a7f4:	dd54      	ble.n	801a8a0 <_ZN8touchgfx8LCD16bpp49TextureMapper_L8_RGB888_Opaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x15e>
 801a7f6:	f9bc 7008 	ldrsh.w	r7, [ip, #8]
 801a7fa:	9804      	ldr	r0, [sp, #16]
 801a7fc:	1414      	asrs	r4, r2, #16
 801a7fe:	fb07 0404 	mla	r4, r7, r4, r0
 801a802:	140e      	asrs	r6, r1, #16
 801a804:	9801      	ldr	r0, [sp, #4]
 801a806:	f814 e006 	ldrb.w	lr, [r4, r6]
 801a80a:	f8b9 4000 	ldrh.w	r4, [r9]
 801a80e:	eb0e 0e4e 	add.w	lr, lr, lr, lsl #1
 801a812:	eb00 0b0e 	add.w	fp, r0, lr
 801a816:	1227      	asrs	r7, r4, #8
 801a818:	f89b 6002 	ldrb.w	r6, [fp, #2]
 801a81c:	f89b b001 	ldrb.w	fp, [fp, #1]
 801a820:	f810 e00e 	ldrb.w	lr, [r0, lr]
 801a824:	9813      	ldr	r0, [sp, #76]	; 0x4c
 801a826:	fb16 f60a 	smulbb	r6, r6, sl
 801a82a:	f007 07f8 	and.w	r7, r7, #248	; 0xf8
 801a82e:	fb07 6705 	mla	r7, r7, r5, r6
 801a832:	10e6      	asrs	r6, r4, #3
 801a834:	00e4      	lsls	r4, r4, #3
 801a836:	b2e4      	uxtb	r4, r4
 801a838:	fb1b fb0a 	smulbb	fp, fp, sl
 801a83c:	fb14 f405 	smulbb	r4, r4, r5
 801a840:	f006 06fc 	and.w	r6, r6, #252	; 0xfc
 801a844:	b2bf      	uxth	r7, r7
 801a846:	fb06 b605 	mla	r6, r6, r5, fp
 801a84a:	fb0e 4e0a 	mla	lr, lr, sl, r4
 801a84e:	b2b6      	uxth	r6, r6
 801a850:	fa1f fe8e 	uxth.w	lr, lr
 801a854:	1c7c      	adds	r4, r7, #1
 801a856:	eb04 2717 	add.w	r7, r4, r7, lsr #8
 801a85a:	f106 0b01 	add.w	fp, r6, #1
 801a85e:	f10e 0401 	add.w	r4, lr, #1
 801a862:	eb04 241e 	add.w	r4, r4, lr, lsr #8
 801a866:	eb0b 2b16 	add.w	fp, fp, r6, lsr #8
 801a86a:	f407 4778 	and.w	r7, r7, #63488	; 0xf800
 801a86e:	f3c4 24c4 	ubfx	r4, r4, #11, #5
 801a872:	ea4f 1b5b 	mov.w	fp, fp, lsr #5
 801a876:	4327      	orrs	r7, r4
 801a878:	f40b 6bfc 	and.w	fp, fp, #2016	; 0x7e0
 801a87c:	4401      	add	r1, r0
 801a87e:	9814      	ldr	r0, [sp, #80]	; 0x50
 801a880:	ea47 070b 	orr.w	r7, r7, fp
 801a884:	f829 7b02 	strh.w	r7, [r9], #2
 801a888:	4402      	add	r2, r0
 801a88a:	f108 38ff 	add.w	r8, r8, #4294967295
 801a88e:	e7af      	b.n	801a7f0 <_ZN8touchgfx8LCD16bpp49TextureMapper_L8_RGB888_Opaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0xae>
 801a890:	f8bd 900c 	ldrh.w	r9, [sp, #12]
 801a894:	f04f 0e00 	mov.w	lr, #0
 801a898:	eb03 040e 	add.w	r4, r3, lr
 801a89c:	2c00      	cmp	r4, #0
 801a89e:	dc43      	bgt.n	801a928 <_ZN8touchgfx8LCD16bpp49TextureMapper_L8_RGB888_Opaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x1e6>
 801a8a0:	9a00      	ldr	r2, [sp, #0]
 801a8a2:	ea23 73e3 	bic.w	r3, r3, r3, asr #31
 801a8a6:	eb02 0343 	add.w	r3, r2, r3, lsl #1
 801a8aa:	9300      	str	r3, [sp, #0]
 801a8ac:	9b02      	ldr	r3, [sp, #8]
 801a8ae:	2b00      	cmp	r3, #0
 801a8b0:	f340 8098 	ble.w	801a9e4 <_ZN8touchgfx8LCD16bpp49TextureMapper_L8_RGB888_Opaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x2a2>
 801a8b4:	ee30 0a04 	vadd.f32	s0, s0, s8
 801a8b8:	eeb7 7a00 	vmov.f32	s14, #112	; 0x3f800000  1.0
 801a8bc:	eec7 7a00 	vdiv.f32	s15, s14, s0
 801a8c0:	9b10      	ldr	r3, [sp, #64]	; 0x40
 801a8c2:	ee70 0aa4 	vadd.f32	s1, s1, s9
 801a8c6:	ee31 1a05 	vadd.f32	s2, s2, s10
 801a8ca:	ee20 7aa7 	vmul.f32	s14, s1, s15
 801a8ce:	eef0 6a62 	vmov.f32	s13, s5
 801a8d2:	ee61 7a27 	vmul.f32	s15, s2, s15
 801a8d6:	eefe 6ac8 	vcvt.s32.f32	s13, s13, #16
 801a8da:	ee77 2a62 	vsub.f32	s5, s14, s5
 801a8de:	edcd 6a11 	vstr	s13, [sp, #68]	; 0x44
 801a8e2:	eefe 2ac8 	vcvt.s32.f32	s5, s5, #16
 801a8e6:	eef0 6a43 	vmov.f32	s13, s6
 801a8ea:	ee37 3ac3 	vsub.f32	s6, s15, s6
 801a8ee:	ee12 2a90 	vmov	r2, s5
 801a8f2:	eebe 3ac8 	vcvt.s32.f32	s6, s6, #16
 801a8f6:	fb92 f3f3 	sdiv	r3, r2, r3
 801a8fa:	ee13 2a10 	vmov	r2, s6
 801a8fe:	9313      	str	r3, [sp, #76]	; 0x4c
 801a900:	9b10      	ldr	r3, [sp, #64]	; 0x40
 801a902:	fb92 f3f3 	sdiv	r3, r2, r3
 801a906:	9314      	str	r3, [sp, #80]	; 0x50
 801a908:	9b02      	ldr	r3, [sp, #8]
 801a90a:	9a05      	ldr	r2, [sp, #20]
 801a90c:	eefe 6ac8 	vcvt.s32.f32	s13, s13, #16
 801a910:	3b01      	subs	r3, #1
 801a912:	9302      	str	r3, [sp, #8]
 801a914:	edcd 6a12 	vstr	s13, [sp, #72]	; 0x48
 801a918:	9b10      	ldr	r3, [sp, #64]	; 0x40
 801a91a:	eeb0 3a67 	vmov.f32	s6, s15
 801a91e:	bf08      	it	eq
 801a920:	4613      	moveq	r3, r2
 801a922:	eef0 2a47 	vmov.f32	s5, s14
 801a926:	e72a      	b.n	801a77e <_ZN8touchgfx8LCD16bpp49TextureMapper_L8_RGB888_Opaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x3c>
 801a928:	140f      	asrs	r7, r1, #16
 801a92a:	d454      	bmi.n	801a9d6 <_ZN8touchgfx8LCD16bpp49TextureMapper_L8_RGB888_Opaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x294>
 801a92c:	f8dc 6008 	ldr.w	r6, [ip, #8]
 801a930:	42be      	cmp	r6, r7
 801a932:	dd50      	ble.n	801a9d6 <_ZN8touchgfx8LCD16bpp49TextureMapper_L8_RGB888_Opaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x294>
 801a934:	ea5f 4822 	movs.w	r8, r2, asr #16
 801a938:	d44d      	bmi.n	801a9d6 <_ZN8touchgfx8LCD16bpp49TextureMapper_L8_RGB888_Opaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x294>
 801a93a:	f8dc 400c 	ldr.w	r4, [ip, #12]
 801a93e:	4544      	cmp	r4, r8
 801a940:	dd49      	ble.n	801a9d6 <_ZN8touchgfx8LCD16bpp49TextureMapper_L8_RGB888_Opaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x294>
 801a942:	9c04      	ldr	r4, [sp, #16]
 801a944:	b236      	sxth	r6, r6
 801a946:	fb08 4606 	mla	r6, r8, r6, r4
 801a94a:	f06f 0001 	mvn.w	r0, #1
 801a94e:	f816 8007 	ldrb.w	r8, [r6, r7]
 801a952:	9c01      	ldr	r4, [sp, #4]
 801a954:	fb00 fa0e 	mul.w	sl, r0, lr
 801a958:	eb08 0848 	add.w	r8, r8, r8, lsl #1
 801a95c:	9800      	ldr	r0, [sp, #0]
 801a95e:	eb04 0b08 	add.w	fp, r4, r8
 801a962:	f830 400a 	ldrh.w	r4, [r0, sl]
 801a966:	f89b 6002 	ldrb.w	r6, [fp, #2]
 801a96a:	9801      	ldr	r0, [sp, #4]
 801a96c:	f89b b001 	ldrb.w	fp, [fp, #1]
 801a970:	f810 8008 	ldrb.w	r8, [r0, r8]
 801a974:	9800      	ldr	r0, [sp, #0]
 801a976:	1227      	asrs	r7, r4, #8
 801a978:	fb16 f609 	smulbb	r6, r6, r9
 801a97c:	f007 07f8 	and.w	r7, r7, #248	; 0xf8
 801a980:	fb07 6705 	mla	r7, r7, r5, r6
 801a984:	10e6      	asrs	r6, r4, #3
 801a986:	00e4      	lsls	r4, r4, #3
 801a988:	b2e4      	uxtb	r4, r4
 801a98a:	fb1b fb09 	smulbb	fp, fp, r9
 801a98e:	fb14 f405 	smulbb	r4, r4, r5
 801a992:	f006 06fc 	and.w	r6, r6, #252	; 0xfc
 801a996:	b2bf      	uxth	r7, r7
 801a998:	fb06 b605 	mla	r6, r6, r5, fp
 801a99c:	fb08 4809 	mla	r8, r8, r9, r4
 801a9a0:	b2b6      	uxth	r6, r6
 801a9a2:	fa1f f888 	uxth.w	r8, r8
 801a9a6:	1c7c      	adds	r4, r7, #1
 801a9a8:	eb04 2717 	add.w	r7, r4, r7, lsr #8
 801a9ac:	f106 0b01 	add.w	fp, r6, #1
 801a9b0:	f108 0401 	add.w	r4, r8, #1
 801a9b4:	eb04 2418 	add.w	r4, r4, r8, lsr #8
 801a9b8:	eb0b 2b16 	add.w	fp, fp, r6, lsr #8
 801a9bc:	f407 4778 	and.w	r7, r7, #63488	; 0xf800
 801a9c0:	f3c4 24c4 	ubfx	r4, r4, #11, #5
 801a9c4:	ea4f 1b5b 	mov.w	fp, fp, lsr #5
 801a9c8:	4327      	orrs	r7, r4
 801a9ca:	f40b 6bfc 	and.w	fp, fp, #2016	; 0x7e0
 801a9ce:	ea47 070b 	orr.w	r7, r7, fp
 801a9d2:	f820 700a 	strh.w	r7, [r0, sl]
 801a9d6:	9813      	ldr	r0, [sp, #76]	; 0x4c
 801a9d8:	4401      	add	r1, r0
 801a9da:	9814      	ldr	r0, [sp, #80]	; 0x50
 801a9dc:	f10e 3eff 	add.w	lr, lr, #4294967295
 801a9e0:	4402      	add	r2, r0
 801a9e2:	e759      	b.n	801a898 <_ZN8touchgfx8LCD16bpp49TextureMapper_L8_RGB888_Opaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x156>
 801a9e4:	b007      	add	sp, #28
 801a9e6:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
	...

0801a9ec <_ZN8touchgfx8LCD16bpp51TextureMapper_L8_RGB888_Opaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff>:
 801a9ec:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 801a9f0:	b085      	sub	sp, #20
 801a9f2:	eef7 6a00 	vmov.f32	s13, #112	; 0x3f800000  1.0
 801a9f6:	9e13      	ldr	r6, [sp, #76]	; 0x4c
 801a9f8:	9203      	str	r2, [sp, #12]
 801a9fa:	e9dd 2414 	ldrd	r2, r4, [sp, #80]	; 0x50
 801a9fe:	6870      	ldr	r0, [r6, #4]
 801aa00:	9d16      	ldr	r5, [sp, #88]	; 0x58
 801aa02:	f8dd c044 	ldr.w	ip, [sp, #68]	; 0x44
 801aa06:	686f      	ldr	r7, [r5, #4]
 801aa08:	9101      	str	r1, [sp, #4]
 801aa0a:	fb00 2404 	mla	r4, r0, r4, r2
 801aa0e:	6832      	ldr	r2, [r6, #0]
 801aa10:	eb02 0444 	add.w	r4, r2, r4, lsl #1
 801aa14:	682a      	ldr	r2, [r5, #0]
 801aa16:	9202      	str	r2, [sp, #8]
 801aa18:	3704      	adds	r7, #4
 801aa1a:	9a01      	ldr	r2, [sp, #4]
 801aa1c:	2a00      	cmp	r2, #0
 801aa1e:	dc03      	bgt.n	801aa28 <_ZN8touchgfx8LCD16bpp51TextureMapper_L8_RGB888_Opaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x3c>
 801aa20:	9a03      	ldr	r2, [sp, #12]
 801aa22:	2a00      	cmp	r2, #0
 801aa24:	f340 80cc 	ble.w	801abc0 <_ZN8touchgfx8LCD16bpp51TextureMapper_L8_RGB888_Opaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x1d4>
 801aa28:	9a0f      	ldr	r2, [sp, #60]	; 0x3c
 801aa2a:	f9b5 9008 	ldrsh.w	r9, [r5, #8]
 801aa2e:	f9b5 800c 	ldrsh.w	r8, [r5, #12]
 801aa32:	f502 4000 	add.w	r0, r2, #32768	; 0x8000
 801aa36:	9a10      	ldr	r2, [sp, #64]	; 0x40
 801aa38:	f502 4200 	add.w	r2, r2, #32768	; 0x8000
 801aa3c:	2b00      	cmp	r3, #0
 801aa3e:	dd0d      	ble.n	801aa5c <_ZN8touchgfx8LCD16bpp51TextureMapper_L8_RGB888_Opaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x70>
 801aa40:	1406      	asrs	r6, r0, #16
 801aa42:	d405      	bmi.n	801aa50 <_ZN8touchgfx8LCD16bpp51TextureMapper_L8_RGB888_Opaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x64>
 801aa44:	454e      	cmp	r6, r9
 801aa46:	da03      	bge.n	801aa50 <_ZN8touchgfx8LCD16bpp51TextureMapper_L8_RGB888_Opaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x64>
 801aa48:	1416      	asrs	r6, r2, #16
 801aa4a:	d401      	bmi.n	801aa50 <_ZN8touchgfx8LCD16bpp51TextureMapper_L8_RGB888_Opaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x64>
 801aa4c:	4546      	cmp	r6, r8
 801aa4e:	db06      	blt.n	801aa5e <_ZN8touchgfx8LCD16bpp51TextureMapper_L8_RGB888_Opaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x72>
 801aa50:	9e12      	ldr	r6, [sp, #72]	; 0x48
 801aa52:	4460      	add	r0, ip
 801aa54:	4432      	add	r2, r6
 801aa56:	3b01      	subs	r3, #1
 801aa58:	3402      	adds	r4, #2
 801aa5a:	e7ef      	b.n	801aa3c <_ZN8touchgfx8LCD16bpp51TextureMapper_L8_RGB888_Opaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x50>
 801aa5c:	d00f      	beq.n	801aa7e <_ZN8touchgfx8LCD16bpp51TextureMapper_L8_RGB888_Opaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x92>
 801aa5e:	1e5e      	subs	r6, r3, #1
 801aa60:	fb0c 0e06 	mla	lr, ip, r6, r0
 801aa64:	ea5f 4e2e 	movs.w	lr, lr, asr #16
 801aa68:	d543      	bpl.n	801aaf2 <_ZN8touchgfx8LCD16bpp51TextureMapper_L8_RGB888_Opaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x106>
 801aa6a:	4698      	mov	r8, r3
 801aa6c:	eb04 0a43 	add.w	sl, r4, r3, lsl #1
 801aa70:	f1b8 0f00 	cmp.w	r8, #0
 801aa74:	dc71      	bgt.n	801ab5a <_ZN8touchgfx8LCD16bpp51TextureMapper_L8_RGB888_Opaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x16e>
 801aa76:	ea23 73e3 	bic.w	r3, r3, r3, asr #31
 801aa7a:	eb04 0443 	add.w	r4, r4, r3, lsl #1
 801aa7e:	9b01      	ldr	r3, [sp, #4]
 801aa80:	2b00      	cmp	r3, #0
 801aa82:	f340 809d 	ble.w	801abc0 <_ZN8touchgfx8LCD16bpp51TextureMapper_L8_RGB888_Opaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x1d4>
 801aa86:	ee30 0a04 	vadd.f32	s0, s0, s8
 801aa8a:	ee70 0aa4 	vadd.f32	s1, s1, s9
 801aa8e:	eec6 7a80 	vdiv.f32	s15, s13, s0
 801aa92:	9b0e      	ldr	r3, [sp, #56]	; 0x38
 801aa94:	ee31 1a05 	vadd.f32	s2, s2, s10
 801aa98:	ee20 7aa7 	vmul.f32	s14, s1, s15
 801aa9c:	eeb0 6a62 	vmov.f32	s12, s5
 801aaa0:	ee61 7a27 	vmul.f32	s15, s2, s15
 801aaa4:	eebe 6ac8 	vcvt.s32.f32	s12, s12, #16
 801aaa8:	ee77 2a62 	vsub.f32	s5, s14, s5
 801aaac:	ed8d 6a0f 	vstr	s12, [sp, #60]	; 0x3c
 801aab0:	eefe 2ac8 	vcvt.s32.f32	s5, s5, #16
 801aab4:	eeb0 6a43 	vmov.f32	s12, s6
 801aab8:	ee37 3ac3 	vsub.f32	s6, s15, s6
 801aabc:	ee12 2a90 	vmov	r2, s5
 801aac0:	eebe 3ac8 	vcvt.s32.f32	s6, s6, #16
 801aac4:	fb92 fcf3 	sdiv	ip, r2, r3
 801aac8:	ee13 2a10 	vmov	r2, s6
 801aacc:	fb92 f3f3 	sdiv	r3, r2, r3
 801aad0:	9312      	str	r3, [sp, #72]	; 0x48
 801aad2:	9b01      	ldr	r3, [sp, #4]
 801aad4:	9a03      	ldr	r2, [sp, #12]
 801aad6:	eebe 6ac8 	vcvt.s32.f32	s12, s12, #16
 801aada:	3b01      	subs	r3, #1
 801aadc:	9301      	str	r3, [sp, #4]
 801aade:	ed8d 6a10 	vstr	s12, [sp, #64]	; 0x40
 801aae2:	9b0e      	ldr	r3, [sp, #56]	; 0x38
 801aae4:	eeb0 3a67 	vmov.f32	s6, s15
 801aae8:	bf08      	it	eq
 801aaea:	4613      	moveq	r3, r2
 801aaec:	eef0 2a47 	vmov.f32	s5, s14
 801aaf0:	e793      	b.n	801aa1a <_ZN8touchgfx8LCD16bpp51TextureMapper_L8_RGB888_Opaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x2e>
 801aaf2:	45ce      	cmp	lr, r9
 801aaf4:	dab9      	bge.n	801aa6a <_ZN8touchgfx8LCD16bpp51TextureMapper_L8_RGB888_Opaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x7e>
 801aaf6:	9912      	ldr	r1, [sp, #72]	; 0x48
 801aaf8:	fb01 2606 	mla	r6, r1, r6, r2
 801aafc:	1436      	asrs	r6, r6, #16
 801aafe:	d4b4      	bmi.n	801aa6a <_ZN8touchgfx8LCD16bpp51TextureMapper_L8_RGB888_Opaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x7e>
 801ab00:	4546      	cmp	r6, r8
 801ab02:	dab2      	bge.n	801aa6a <_ZN8touchgfx8LCD16bpp51TextureMapper_L8_RGB888_Opaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x7e>
 801ab04:	4698      	mov	r8, r3
 801ab06:	46a2      	mov	sl, r4
 801ab08:	f1b8 0f00 	cmp.w	r8, #0
 801ab0c:	ddb3      	ble.n	801aa76 <_ZN8touchgfx8LCD16bpp51TextureMapper_L8_RGB888_Opaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x8a>
 801ab0e:	f9b5 9008 	ldrsh.w	r9, [r5, #8]
 801ab12:	9902      	ldr	r1, [sp, #8]
 801ab14:	1416      	asrs	r6, r2, #16
 801ab16:	fb09 1606 	mla	r6, r9, r6, r1
 801ab1a:	ea4f 4e20 	mov.w	lr, r0, asr #16
 801ab1e:	492a      	ldr	r1, [pc, #168]	; (801abc8 <_ZN8touchgfx8LCD16bpp51TextureMapper_L8_RGB888_Opaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x1dc>)
 801ab20:	f816 e00e 	ldrb.w	lr, [r6, lr]
 801ab24:	eb0e 0e4e 	add.w	lr, lr, lr, lsl #1
 801ab28:	eb07 0b0e 	add.w	fp, r7, lr
 801ab2c:	4460      	add	r0, ip
 801ab2e:	f89b 6001 	ldrb.w	r6, [fp, #1]
 801ab32:	f89b 9002 	ldrb.w	r9, [fp, #2]
 801ab36:	00f6      	lsls	r6, r6, #3
 801ab38:	ea01 2909 	and.w	r9, r1, r9, lsl #8
 801ab3c:	f406 66fc 	and.w	r6, r6, #2016	; 0x7e0
 801ab40:	ea49 0606 	orr.w	r6, r9, r6
 801ab44:	f817 900e 	ldrb.w	r9, [r7, lr]
 801ab48:	9912      	ldr	r1, [sp, #72]	; 0x48
 801ab4a:	ea46 06d9 	orr.w	r6, r6, r9, lsr #3
 801ab4e:	f82a 6b02 	strh.w	r6, [sl], #2
 801ab52:	440a      	add	r2, r1
 801ab54:	f108 38ff 	add.w	r8, r8, #4294967295
 801ab58:	e7d6      	b.n	801ab08 <_ZN8touchgfx8LCD16bpp51TextureMapper_L8_RGB888_Opaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x11c>
 801ab5a:	ea5f 4920 	movs.w	r9, r0, asr #16
 801ab5e:	d429      	bmi.n	801abb4 <_ZN8touchgfx8LCD16bpp51TextureMapper_L8_RGB888_Opaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x1c8>
 801ab60:	68ae      	ldr	r6, [r5, #8]
 801ab62:	454e      	cmp	r6, r9
 801ab64:	dd26      	ble.n	801abb4 <_ZN8touchgfx8LCD16bpp51TextureMapper_L8_RGB888_Opaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x1c8>
 801ab66:	ea5f 4b22 	movs.w	fp, r2, asr #16
 801ab6a:	d423      	bmi.n	801abb4 <_ZN8touchgfx8LCD16bpp51TextureMapper_L8_RGB888_Opaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x1c8>
 801ab6c:	68e9      	ldr	r1, [r5, #12]
 801ab6e:	4559      	cmp	r1, fp
 801ab70:	dd20      	ble.n	801abb4 <_ZN8touchgfx8LCD16bpp51TextureMapper_L8_RGB888_Opaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x1c8>
 801ab72:	9902      	ldr	r1, [sp, #8]
 801ab74:	fa0f fe86 	sxth.w	lr, r6
 801ab78:	fb0b 1e0e 	mla	lr, fp, lr, r1
 801ab7c:	f06f 0101 	mvn.w	r1, #1
 801ab80:	f81e e009 	ldrb.w	lr, [lr, r9]
 801ab84:	eb0e 0e4e 	add.w	lr, lr, lr, lsl #1
 801ab88:	eb07 060e 	add.w	r6, r7, lr
 801ab8c:	fb01 f908 	mul.w	r9, r1, r8
 801ab90:	f896 b002 	ldrb.w	fp, [r6, #2]
 801ab94:	7876      	ldrb	r6, [r6, #1]
 801ab96:	f2a1 71fe 	subw	r1, r1, #2046	; 0x7fe
 801ab9a:	00f6      	lsls	r6, r6, #3
 801ab9c:	ea01 2b0b 	and.w	fp, r1, fp, lsl #8
 801aba0:	f406 66fc 	and.w	r6, r6, #2016	; 0x7e0
 801aba4:	ea4b 0606 	orr.w	r6, fp, r6
 801aba8:	f817 b00e 	ldrb.w	fp, [r7, lr]
 801abac:	ea46 06db 	orr.w	r6, r6, fp, lsr #3
 801abb0:	f82a 6009 	strh.w	r6, [sl, r9]
 801abb4:	9912      	ldr	r1, [sp, #72]	; 0x48
 801abb6:	4460      	add	r0, ip
 801abb8:	440a      	add	r2, r1
 801abba:	f108 38ff 	add.w	r8, r8, #4294967295
 801abbe:	e757      	b.n	801aa70 <_ZN8touchgfx8LCD16bpp51TextureMapper_L8_RGB888_Opaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x84>
 801abc0:	b005      	add	sp, #20
 801abc2:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
 801abc6:	bf00      	nop
 801abc8:	fffff800 	.word	0xfffff800

0801abcc <_ZN8touchgfx8LCD16bpp54TextureMapper_L8_ARGB8888_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff>:
 801abcc:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 801abd0:	b087      	sub	sp, #28
 801abd2:	468b      	mov	fp, r1
 801abd4:	9815      	ldr	r0, [sp, #84]	; 0x54
 801abd6:	9204      	str	r2, [sp, #16]
 801abd8:	f89d 2064 	ldrb.w	r2, [sp, #100]	; 0x64
 801abdc:	9205      	str	r2, [sp, #20]
 801abde:	e9dd 2416 	ldrd	r2, r4, [sp, #88]	; 0x58
 801abe2:	6841      	ldr	r1, [r0, #4]
 801abe4:	f8dd c060 	ldr.w	ip, [sp, #96]	; 0x60
 801abe8:	fb01 2404 	mla	r4, r1, r4, r2
 801abec:	6802      	ldr	r2, [r0, #0]
 801abee:	eb02 0444 	add.w	r4, r2, r4, lsl #1
 801abf2:	f8dc 2000 	ldr.w	r2, [ip]
 801abf6:	9201      	str	r2, [sp, #4]
 801abf8:	f8dc 2004 	ldr.w	r2, [ip, #4]
 801abfc:	3204      	adds	r2, #4
 801abfe:	9202      	str	r2, [sp, #8]
 801ac00:	eef7 6a00 	vmov.f32	s13, #112	; 0x3f800000  1.0
 801ac04:	f1bb 0f00 	cmp.w	fp, #0
 801ac08:	dc03      	bgt.n	801ac12 <_ZN8touchgfx8LCD16bpp54TextureMapper_L8_ARGB8888_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x46>
 801ac0a:	9a04      	ldr	r2, [sp, #16]
 801ac0c:	2a00      	cmp	r2, #0
 801ac0e:	f340 8138 	ble.w	801ae82 <_ZN8touchgfx8LCD16bpp54TextureMapper_L8_ARGB8888_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x2b6>
 801ac12:	9a11      	ldr	r2, [sp, #68]	; 0x44
 801ac14:	f9bc 7008 	ldrsh.w	r7, [ip, #8]
 801ac18:	f9bc 600c 	ldrsh.w	r6, [ip, #12]
 801ac1c:	f502 4000 	add.w	r0, r2, #32768	; 0x8000
 801ac20:	9a12      	ldr	r2, [sp, #72]	; 0x48
 801ac22:	f502 4100 	add.w	r1, r2, #32768	; 0x8000
 801ac26:	2b00      	cmp	r3, #0
 801ac28:	dd0e      	ble.n	801ac48 <_ZN8touchgfx8LCD16bpp54TextureMapper_L8_ARGB8888_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x7c>
 801ac2a:	1402      	asrs	r2, r0, #16
 801ac2c:	d405      	bmi.n	801ac3a <_ZN8touchgfx8LCD16bpp54TextureMapper_L8_ARGB8888_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x6e>
 801ac2e:	42ba      	cmp	r2, r7
 801ac30:	da03      	bge.n	801ac3a <_ZN8touchgfx8LCD16bpp54TextureMapper_L8_ARGB8888_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x6e>
 801ac32:	140a      	asrs	r2, r1, #16
 801ac34:	d401      	bmi.n	801ac3a <_ZN8touchgfx8LCD16bpp54TextureMapper_L8_ARGB8888_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x6e>
 801ac36:	42b2      	cmp	r2, r6
 801ac38:	db07      	blt.n	801ac4a <_ZN8touchgfx8LCD16bpp54TextureMapper_L8_ARGB8888_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x7e>
 801ac3a:	9a13      	ldr	r2, [sp, #76]	; 0x4c
 801ac3c:	4410      	add	r0, r2
 801ac3e:	9a14      	ldr	r2, [sp, #80]	; 0x50
 801ac40:	3b01      	subs	r3, #1
 801ac42:	4411      	add	r1, r2
 801ac44:	3402      	adds	r4, #2
 801ac46:	e7ee      	b.n	801ac26 <_ZN8touchgfx8LCD16bpp54TextureMapper_L8_ARGB8888_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x5a>
 801ac48:	d019      	beq.n	801ac7e <_ZN8touchgfx8LCD16bpp54TextureMapper_L8_ARGB8888_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0xb2>
 801ac4a:	9d13      	ldr	r5, [sp, #76]	; 0x4c
 801ac4c:	1e5a      	subs	r2, r3, #1
 801ac4e:	fb05 0502 	mla	r5, r5, r2, r0
 801ac52:	142d      	asrs	r5, r5, #16
 801ac54:	d409      	bmi.n	801ac6a <_ZN8touchgfx8LCD16bpp54TextureMapper_L8_ARGB8888_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x9e>
 801ac56:	42bd      	cmp	r5, r7
 801ac58:	da07      	bge.n	801ac6a <_ZN8touchgfx8LCD16bpp54TextureMapper_L8_ARGB8888_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x9e>
 801ac5a:	9d14      	ldr	r5, [sp, #80]	; 0x50
 801ac5c:	fb05 1202 	mla	r2, r5, r2, r1
 801ac60:	1412      	asrs	r2, r2, #16
 801ac62:	d402      	bmi.n	801ac6a <_ZN8touchgfx8LCD16bpp54TextureMapper_L8_ARGB8888_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x9e>
 801ac64:	42b2      	cmp	r2, r6
 801ac66:	f2c0 80ac 	blt.w	801adc2 <_ZN8touchgfx8LCD16bpp54TextureMapper_L8_ARGB8888_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x1f6>
 801ac6a:	f04f 0e00 	mov.w	lr, #0
 801ac6e:	eb03 020e 	add.w	r2, r3, lr
 801ac72:	2a00      	cmp	r2, #0
 801ac74:	dc3e      	bgt.n	801acf4 <_ZN8touchgfx8LCD16bpp54TextureMapper_L8_ARGB8888_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x128>
 801ac76:	ea23 73e3 	bic.w	r3, r3, r3, asr #31
 801ac7a:	eb04 0443 	add.w	r4, r4, r3, lsl #1
 801ac7e:	f1bb 0f00 	cmp.w	fp, #0
 801ac82:	f340 80fe 	ble.w	801ae82 <_ZN8touchgfx8LCD16bpp54TextureMapper_L8_ARGB8888_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x2b6>
 801ac86:	ee30 0a04 	vadd.f32	s0, s0, s8
 801ac8a:	ee70 0aa4 	vadd.f32	s1, s1, s9
 801ac8e:	eec6 7a80 	vdiv.f32	s15, s13, s0
 801ac92:	9b10      	ldr	r3, [sp, #64]	; 0x40
 801ac94:	f1bb 0b01 	subs.w	fp, fp, #1
 801ac98:	ee31 1a05 	vadd.f32	s2, s2, s10
 801ac9c:	ee20 7aa7 	vmul.f32	s14, s1, s15
 801aca0:	eeb0 6a62 	vmov.f32	s12, s5
 801aca4:	ee61 7a27 	vmul.f32	s15, s2, s15
 801aca8:	eebe 6ac8 	vcvt.s32.f32	s12, s12, #16
 801acac:	ee77 2a62 	vsub.f32	s5, s14, s5
 801acb0:	ed8d 6a11 	vstr	s12, [sp, #68]	; 0x44
 801acb4:	eefe 2ac8 	vcvt.s32.f32	s5, s5, #16
 801acb8:	eeb0 6a43 	vmov.f32	s12, s6
 801acbc:	ee37 3ac3 	vsub.f32	s6, s15, s6
 801acc0:	ee12 2a90 	vmov	r2, s5
 801acc4:	eebe 3ac8 	vcvt.s32.f32	s6, s6, #16
 801acc8:	fb92 f3f3 	sdiv	r3, r2, r3
 801accc:	ee13 2a10 	vmov	r2, s6
 801acd0:	eebe 6ac8 	vcvt.s32.f32	s12, s12, #16
 801acd4:	9313      	str	r3, [sp, #76]	; 0x4c
 801acd6:	9b10      	ldr	r3, [sp, #64]	; 0x40
 801acd8:	fb92 f3f3 	sdiv	r3, r2, r3
 801acdc:	9a04      	ldr	r2, [sp, #16]
 801acde:	9314      	str	r3, [sp, #80]	; 0x50
 801ace0:	ed8d 6a12 	vstr	s12, [sp, #72]	; 0x48
 801ace4:	9b10      	ldr	r3, [sp, #64]	; 0x40
 801ace6:	eeb0 3a67 	vmov.f32	s6, s15
 801acea:	bf08      	it	eq
 801acec:	4613      	moveq	r3, r2
 801acee:	eef0 2a47 	vmov.f32	s5, s14
 801acf2:	e787      	b.n	801ac04 <_ZN8touchgfx8LCD16bpp54TextureMapper_L8_ARGB8888_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x38>
 801acf4:	1406      	asrs	r6, r0, #16
 801acf6:	d45d      	bmi.n	801adb4 <_ZN8touchgfx8LCD16bpp54TextureMapper_L8_ARGB8888_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x1e8>
 801acf8:	f8dc 5008 	ldr.w	r5, [ip, #8]
 801acfc:	42b5      	cmp	r5, r6
 801acfe:	dd59      	ble.n	801adb4 <_ZN8touchgfx8LCD16bpp54TextureMapper_L8_ARGB8888_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x1e8>
 801ad00:	140f      	asrs	r7, r1, #16
 801ad02:	d457      	bmi.n	801adb4 <_ZN8touchgfx8LCD16bpp54TextureMapper_L8_ARGB8888_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x1e8>
 801ad04:	f8dc 200c 	ldr.w	r2, [ip, #12]
 801ad08:	42ba      	cmp	r2, r7
 801ad0a:	dd53      	ble.n	801adb4 <_ZN8touchgfx8LCD16bpp54TextureMapper_L8_ARGB8888_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x1e8>
 801ad0c:	9a01      	ldr	r2, [sp, #4]
 801ad0e:	b22d      	sxth	r5, r5
 801ad10:	fb07 2505 	mla	r5, r7, r5, r2
 801ad14:	5daa      	ldrb	r2, [r5, r6]
 801ad16:	9d02      	ldr	r5, [sp, #8]
 801ad18:	f855 5022 	ldr.w	r5, [r5, r2, lsl #2]
 801ad1c:	0e2e      	lsrs	r6, r5, #24
 801ad1e:	d049      	beq.n	801adb4 <_ZN8touchgfx8LCD16bpp54TextureMapper_L8_ARGB8888_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x1e8>
 801ad20:	f06f 0201 	mvn.w	r2, #1
 801ad24:	fb02 f20e 	mul.w	r2, r2, lr
 801ad28:	9203      	str	r2, [sp, #12]
 801ad2a:	f834 8002 	ldrh.w	r8, [r4, r2]
 801ad2e:	9a05      	ldr	r2, [sp, #20]
 801ad30:	4356      	muls	r6, r2
 801ad32:	1c72      	adds	r2, r6, #1
 801ad34:	eb02 2226 	add.w	r2, r2, r6, asr #8
 801ad38:	1212      	asrs	r2, r2, #8
 801ad3a:	fa1f f982 	uxth.w	r9, r2
 801ad3e:	ea4f 2728 	mov.w	r7, r8, asr #8
 801ad42:	f3c5 4607 	ubfx	r6, r5, #16, #8
 801ad46:	43d2      	mvns	r2, r2
 801ad48:	b2d2      	uxtb	r2, r2
 801ad4a:	fb16 f609 	smulbb	r6, r6, r9
 801ad4e:	f007 07f8 	and.w	r7, r7, #248	; 0xf8
 801ad52:	fb07 6702 	mla	r7, r7, r2, r6
 801ad56:	f3c5 2a07 	ubfx	sl, r5, #8, #8
 801ad5a:	ea4f 06e8 	mov.w	r6, r8, asr #3
 801ad5e:	b2ed      	uxtb	r5, r5
 801ad60:	ea4f 08c8 	mov.w	r8, r8, lsl #3
 801ad64:	fa5f f888 	uxtb.w	r8, r8
 801ad68:	fb15 f509 	smulbb	r5, r5, r9
 801ad6c:	fb08 5502 	mla	r5, r8, r2, r5
 801ad70:	b2bf      	uxth	r7, r7
 801ad72:	fb1a fa09 	smulbb	sl, sl, r9
 801ad76:	b2ad      	uxth	r5, r5
 801ad78:	f006 06fc 	and.w	r6, r6, #252	; 0xfc
 801ad7c:	fb06 a602 	mla	r6, r6, r2, sl
 801ad80:	1c7a      	adds	r2, r7, #1
 801ad82:	f105 0a01 	add.w	sl, r5, #1
 801ad86:	eb02 2717 	add.w	r7, r2, r7, lsr #8
 801ad8a:	eb0a 2a15 	add.w	sl, sl, r5, lsr #8
 801ad8e:	b2b6      	uxth	r6, r6
 801ad90:	f3ca 2ac4 	ubfx	sl, sl, #11, #5
 801ad94:	f407 4778 	and.w	r7, r7, #63488	; 0xf800
 801ad98:	ea4a 0707 	orr.w	r7, sl, r7
 801ad9c:	f106 0a01 	add.w	sl, r6, #1
 801ada0:	eb0a 2a16 	add.w	sl, sl, r6, lsr #8
 801ada4:	ea4f 1a5a 	mov.w	sl, sl, lsr #5
 801ada8:	f40a 6afc 	and.w	sl, sl, #2016	; 0x7e0
 801adac:	9a03      	ldr	r2, [sp, #12]
 801adae:	ea47 070a 	orr.w	r7, r7, sl
 801adb2:	52a7      	strh	r7, [r4, r2]
 801adb4:	9a13      	ldr	r2, [sp, #76]	; 0x4c
 801adb6:	4410      	add	r0, r2
 801adb8:	9a14      	ldr	r2, [sp, #80]	; 0x50
 801adba:	f10e 3eff 	add.w	lr, lr, #4294967295
 801adbe:	4411      	add	r1, r2
 801adc0:	e755      	b.n	801ac6e <_ZN8touchgfx8LCD16bpp54TextureMapper_L8_ARGB8888_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0xa2>
 801adc2:	f04f 0800 	mov.w	r8, #0
 801adc6:	eba3 0208 	sub.w	r2, r3, r8
 801adca:	2a00      	cmp	r2, #0
 801adcc:	f77f af53 	ble.w	801ac76 <_ZN8touchgfx8LCD16bpp54TextureMapper_L8_ARGB8888_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0xaa>
 801add0:	f9bc 6008 	ldrsh.w	r6, [ip, #8]
 801add4:	9f01      	ldr	r7, [sp, #4]
 801add6:	140a      	asrs	r2, r1, #16
 801add8:	1405      	asrs	r5, r0, #16
 801adda:	fb06 7202 	mla	r2, r6, r2, r7
 801adde:	5d52      	ldrb	r2, [r2, r5]
 801ade0:	9d02      	ldr	r5, [sp, #8]
 801ade2:	f855 5022 	ldr.w	r5, [r5, r2, lsl #2]
 801ade6:	0e2e      	lsrs	r6, r5, #24
 801ade8:	d044      	beq.n	801ae74 <_ZN8touchgfx8LCD16bpp54TextureMapper_L8_ARGB8888_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x2a8>
 801adea:	9a05      	ldr	r2, [sp, #20]
 801adec:	f834 e018 	ldrh.w	lr, [r4, r8, lsl #1]
 801adf0:	4356      	muls	r6, r2
 801adf2:	1c72      	adds	r2, r6, #1
 801adf4:	eb02 2226 	add.w	r2, r2, r6, asr #8
 801adf8:	1212      	asrs	r2, r2, #8
 801adfa:	fa1f f982 	uxth.w	r9, r2
 801adfe:	ea4f 272e 	mov.w	r7, lr, asr #8
 801ae02:	f3c5 4607 	ubfx	r6, r5, #16, #8
 801ae06:	43d2      	mvns	r2, r2
 801ae08:	b2d2      	uxtb	r2, r2
 801ae0a:	fb16 f609 	smulbb	r6, r6, r9
 801ae0e:	f007 07f8 	and.w	r7, r7, #248	; 0xf8
 801ae12:	fb07 6702 	mla	r7, r7, r2, r6
 801ae16:	f3c5 2a07 	ubfx	sl, r5, #8, #8
 801ae1a:	ea4f 06ee 	mov.w	r6, lr, asr #3
 801ae1e:	b2ed      	uxtb	r5, r5
 801ae20:	ea4f 0ece 	mov.w	lr, lr, lsl #3
 801ae24:	fa5f fe8e 	uxtb.w	lr, lr
 801ae28:	fb15 f509 	smulbb	r5, r5, r9
 801ae2c:	fb0e 5502 	mla	r5, lr, r2, r5
 801ae30:	b2bf      	uxth	r7, r7
 801ae32:	fb1a fa09 	smulbb	sl, sl, r9
 801ae36:	b2ad      	uxth	r5, r5
 801ae38:	f006 06fc 	and.w	r6, r6, #252	; 0xfc
 801ae3c:	fb06 a602 	mla	r6, r6, r2, sl
 801ae40:	1c7a      	adds	r2, r7, #1
 801ae42:	f105 0a01 	add.w	sl, r5, #1
 801ae46:	eb02 2717 	add.w	r7, r2, r7, lsr #8
 801ae4a:	eb0a 2a15 	add.w	sl, sl, r5, lsr #8
 801ae4e:	b2b6      	uxth	r6, r6
 801ae50:	f3ca 2ac4 	ubfx	sl, sl, #11, #5
 801ae54:	f407 4778 	and.w	r7, r7, #63488	; 0xf800
 801ae58:	ea4a 0707 	orr.w	r7, sl, r7
 801ae5c:	f106 0a01 	add.w	sl, r6, #1
 801ae60:	eb0a 2a16 	add.w	sl, sl, r6, lsr #8
 801ae64:	ea4f 1a5a 	mov.w	sl, sl, lsr #5
 801ae68:	f40a 6afc 	and.w	sl, sl, #2016	; 0x7e0
 801ae6c:	ea47 070a 	orr.w	r7, r7, sl
 801ae70:	f824 7018 	strh.w	r7, [r4, r8, lsl #1]
 801ae74:	9a13      	ldr	r2, [sp, #76]	; 0x4c
 801ae76:	4410      	add	r0, r2
 801ae78:	9a14      	ldr	r2, [sp, #80]	; 0x50
 801ae7a:	f108 0801 	add.w	r8, r8, #1
 801ae7e:	4411      	add	r1, r2
 801ae80:	e7a1      	b.n	801adc6 <_ZN8touchgfx8LCD16bpp54TextureMapper_L8_ARGB8888_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x1fa>
 801ae82:	b007      	add	sp, #28
 801ae84:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}

0801ae88 <_ZN8touchgfx8LCD16bpp56TextureMapper_L8_ARGB8888_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff>:
 801ae88:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 801ae8c:	b085      	sub	sp, #20
 801ae8e:	468b      	mov	fp, r1
 801ae90:	9813      	ldr	r0, [sp, #76]	; 0x4c
 801ae92:	9203      	str	r2, [sp, #12]
 801ae94:	e9dd 2414 	ldrd	r2, r4, [sp, #80]	; 0x50
 801ae98:	6841      	ldr	r1, [r0, #4]
 801ae9a:	f8dd e058 	ldr.w	lr, [sp, #88]	; 0x58
 801ae9e:	fb01 2404 	mla	r4, r1, r4, r2
 801aea2:	6802      	ldr	r2, [r0, #0]
 801aea4:	eb02 0444 	add.w	r4, r2, r4, lsl #1
 801aea8:	f8de 2000 	ldr.w	r2, [lr]
 801aeac:	9200      	str	r2, [sp, #0]
 801aeae:	f8de 2004 	ldr.w	r2, [lr, #4]
 801aeb2:	3204      	adds	r2, #4
 801aeb4:	9201      	str	r2, [sp, #4]
 801aeb6:	eef7 6a00 	vmov.f32	s13, #112	; 0x3f800000  1.0
 801aeba:	f1bb 0f00 	cmp.w	fp, #0
 801aebe:	dc03      	bgt.n	801aec8 <_ZN8touchgfx8LCD16bpp56TextureMapper_L8_ARGB8888_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x40>
 801aec0:	9a03      	ldr	r2, [sp, #12]
 801aec2:	2a00      	cmp	r2, #0
 801aec4:	f340 8153 	ble.w	801b16e <_ZN8touchgfx8LCD16bpp56TextureMapper_L8_ARGB8888_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x2e6>
 801aec8:	9a0f      	ldr	r2, [sp, #60]	; 0x3c
 801aeca:	f9be 7008 	ldrsh.w	r7, [lr, #8]
 801aece:	f9be 600c 	ldrsh.w	r6, [lr, #12]
 801aed2:	f502 4100 	add.w	r1, r2, #32768	; 0x8000
 801aed6:	9a10      	ldr	r2, [sp, #64]	; 0x40
 801aed8:	f502 4200 	add.w	r2, r2, #32768	; 0x8000
 801aedc:	2b00      	cmp	r3, #0
 801aede:	dd0e      	ble.n	801aefe <_ZN8touchgfx8LCD16bpp56TextureMapper_L8_ARGB8888_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x76>
 801aee0:	1408      	asrs	r0, r1, #16
 801aee2:	d405      	bmi.n	801aef0 <_ZN8touchgfx8LCD16bpp56TextureMapper_L8_ARGB8888_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x68>
 801aee4:	42b8      	cmp	r0, r7
 801aee6:	da03      	bge.n	801aef0 <_ZN8touchgfx8LCD16bpp56TextureMapper_L8_ARGB8888_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x68>
 801aee8:	1410      	asrs	r0, r2, #16
 801aeea:	d401      	bmi.n	801aef0 <_ZN8touchgfx8LCD16bpp56TextureMapper_L8_ARGB8888_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x68>
 801aeec:	42b0      	cmp	r0, r6
 801aeee:	db07      	blt.n	801af00 <_ZN8touchgfx8LCD16bpp56TextureMapper_L8_ARGB8888_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x78>
 801aef0:	9811      	ldr	r0, [sp, #68]	; 0x44
 801aef2:	4401      	add	r1, r0
 801aef4:	9812      	ldr	r0, [sp, #72]	; 0x48
 801aef6:	3b01      	subs	r3, #1
 801aef8:	4402      	add	r2, r0
 801aefa:	3402      	adds	r4, #2
 801aefc:	e7ee      	b.n	801aedc <_ZN8touchgfx8LCD16bpp56TextureMapper_L8_ARGB8888_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x54>
 801aefe:	d017      	beq.n	801af30 <_ZN8touchgfx8LCD16bpp56TextureMapper_L8_ARGB8888_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0xa8>
 801af00:	9d11      	ldr	r5, [sp, #68]	; 0x44
 801af02:	1e58      	subs	r0, r3, #1
 801af04:	fb05 1500 	mla	r5, r5, r0, r1
 801af08:	142d      	asrs	r5, r5, #16
 801af0a:	d409      	bmi.n	801af20 <_ZN8touchgfx8LCD16bpp56TextureMapper_L8_ARGB8888_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x98>
 801af0c:	42bd      	cmp	r5, r7
 801af0e:	da07      	bge.n	801af20 <_ZN8touchgfx8LCD16bpp56TextureMapper_L8_ARGB8888_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x98>
 801af10:	9d12      	ldr	r5, [sp, #72]	; 0x48
 801af12:	fb05 2000 	mla	r0, r5, r0, r2
 801af16:	1400      	asrs	r0, r0, #16
 801af18:	d402      	bmi.n	801af20 <_ZN8touchgfx8LCD16bpp56TextureMapper_L8_ARGB8888_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x98>
 801af1a:	42b0      	cmp	r0, r6
 801af1c:	f2c0 80bc 	blt.w	801b098 <_ZN8touchgfx8LCD16bpp56TextureMapper_L8_ARGB8888_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x210>
 801af20:	2600      	movs	r6, #0
 801af22:	1998      	adds	r0, r3, r6
 801af24:	2800      	cmp	r0, #0
 801af26:	dc3e      	bgt.n	801afa6 <_ZN8touchgfx8LCD16bpp56TextureMapper_L8_ARGB8888_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x11e>
 801af28:	ea23 73e3 	bic.w	r3, r3, r3, asr #31
 801af2c:	eb04 0443 	add.w	r4, r4, r3, lsl #1
 801af30:	f1bb 0f00 	cmp.w	fp, #0
 801af34:	f340 811b 	ble.w	801b16e <_ZN8touchgfx8LCD16bpp56TextureMapper_L8_ARGB8888_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x2e6>
 801af38:	ee30 0a04 	vadd.f32	s0, s0, s8
 801af3c:	ee70 0aa4 	vadd.f32	s1, s1, s9
 801af40:	eec6 7a80 	vdiv.f32	s15, s13, s0
 801af44:	9b0e      	ldr	r3, [sp, #56]	; 0x38
 801af46:	f1bb 0b01 	subs.w	fp, fp, #1
 801af4a:	ee31 1a05 	vadd.f32	s2, s2, s10
 801af4e:	ee20 7aa7 	vmul.f32	s14, s1, s15
 801af52:	eeb0 6a62 	vmov.f32	s12, s5
 801af56:	ee61 7a27 	vmul.f32	s15, s2, s15
 801af5a:	eebe 6ac8 	vcvt.s32.f32	s12, s12, #16
 801af5e:	ee77 2a62 	vsub.f32	s5, s14, s5
 801af62:	ed8d 6a0f 	vstr	s12, [sp, #60]	; 0x3c
 801af66:	eefe 2ac8 	vcvt.s32.f32	s5, s5, #16
 801af6a:	eeb0 6a43 	vmov.f32	s12, s6
 801af6e:	ee37 3ac3 	vsub.f32	s6, s15, s6
 801af72:	ee12 2a90 	vmov	r2, s5
 801af76:	eebe 3ac8 	vcvt.s32.f32	s6, s6, #16
 801af7a:	fb92 f3f3 	sdiv	r3, r2, r3
 801af7e:	ee13 2a10 	vmov	r2, s6
 801af82:	eebe 6ac8 	vcvt.s32.f32	s12, s12, #16
 801af86:	9311      	str	r3, [sp, #68]	; 0x44
 801af88:	9b0e      	ldr	r3, [sp, #56]	; 0x38
 801af8a:	fb92 f3f3 	sdiv	r3, r2, r3
 801af8e:	9a03      	ldr	r2, [sp, #12]
 801af90:	9312      	str	r3, [sp, #72]	; 0x48
 801af92:	ed8d 6a10 	vstr	s12, [sp, #64]	; 0x40
 801af96:	9b0e      	ldr	r3, [sp, #56]	; 0x38
 801af98:	eeb0 3a67 	vmov.f32	s6, s15
 801af9c:	bf08      	it	eq
 801af9e:	4613      	moveq	r3, r2
 801afa0:	eef0 2a47 	vmov.f32	s5, s14
 801afa4:	e789      	b.n	801aeba <_ZN8touchgfx8LCD16bpp56TextureMapper_L8_ARGB8888_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x32>
 801afa6:	140f      	asrs	r7, r1, #16
 801afa8:	d426      	bmi.n	801aff8 <_ZN8touchgfx8LCD16bpp56TextureMapper_L8_ARGB8888_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x170>
 801afaa:	f8de 5008 	ldr.w	r5, [lr, #8]
 801afae:	42bd      	cmp	r5, r7
 801afb0:	dd22      	ble.n	801aff8 <_ZN8touchgfx8LCD16bpp56TextureMapper_L8_ARGB8888_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x170>
 801afb2:	ea5f 4c22 	movs.w	ip, r2, asr #16
 801afb6:	d41f      	bmi.n	801aff8 <_ZN8touchgfx8LCD16bpp56TextureMapper_L8_ARGB8888_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x170>
 801afb8:	f8de 000c 	ldr.w	r0, [lr, #12]
 801afbc:	4560      	cmp	r0, ip
 801afbe:	dd1b      	ble.n	801aff8 <_ZN8touchgfx8LCD16bpp56TextureMapper_L8_ARGB8888_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x170>
 801afc0:	9800      	ldr	r0, [sp, #0]
 801afc2:	b22d      	sxth	r5, r5
 801afc4:	fb0c 0505 	mla	r5, ip, r5, r0
 801afc8:	5de8      	ldrb	r0, [r5, r7]
 801afca:	9d01      	ldr	r5, [sp, #4]
 801afcc:	f855 0020 	ldr.w	r0, [r5, r0, lsl #2]
 801afd0:	0e07      	lsrs	r7, r0, #24
 801afd2:	2fff      	cmp	r7, #255	; 0xff
 801afd4:	d116      	bne.n	801b004 <_ZN8touchgfx8LCD16bpp56TextureMapper_L8_ARGB8888_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x17c>
 801afd6:	f06f 0501 	mvn.w	r5, #1
 801afda:	fb05 f706 	mul.w	r7, r5, r6
 801afde:	f2a5 75fe 	subw	r5, r5, #2046	; 0x7fe
 801afe2:	ea05 2c10 	and.w	ip, r5, r0, lsr #8
 801afe6:	0945      	lsrs	r5, r0, #5
 801afe8:	f405 65fc 	and.w	r5, r5, #2016	; 0x7e0
 801afec:	ea4c 0505 	orr.w	r5, ip, r5
 801aff0:	f3c0 00c4 	ubfx	r0, r0, #3, #5
 801aff4:	4305      	orrs	r5, r0
 801aff6:	53e5      	strh	r5, [r4, r7]
 801aff8:	9811      	ldr	r0, [sp, #68]	; 0x44
 801affa:	4401      	add	r1, r0
 801affc:	9812      	ldr	r0, [sp, #72]	; 0x48
 801affe:	3e01      	subs	r6, #1
 801b000:	4402      	add	r2, r0
 801b002:	e78e      	b.n	801af22 <_ZN8touchgfx8LCD16bpp56TextureMapper_L8_ARGB8888_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x9a>
 801b004:	b2fd      	uxtb	r5, r7
 801b006:	2f00      	cmp	r7, #0
 801b008:	d0f6      	beq.n	801aff8 <_ZN8touchgfx8LCD16bpp56TextureMapper_L8_ARGB8888_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x170>
 801b00a:	f06f 0701 	mvn.w	r7, #1
 801b00e:	4377      	muls	r7, r6
 801b010:	fa1f f985 	uxth.w	r9, r5
 801b014:	f834 8007 	ldrh.w	r8, [r4, r7]
 801b018:	9702      	str	r7, [sp, #8]
 801b01a:	ea4f 2c28 	mov.w	ip, r8, asr #8
 801b01e:	f3c0 4707 	ubfx	r7, r0, #16, #8
 801b022:	43ed      	mvns	r5, r5
 801b024:	b2ed      	uxtb	r5, r5
 801b026:	fb17 f709 	smulbb	r7, r7, r9
 801b02a:	f00c 0cf8 	and.w	ip, ip, #248	; 0xf8
 801b02e:	fb0c 7c05 	mla	ip, ip, r5, r7
 801b032:	f3c0 2a07 	ubfx	sl, r0, #8, #8
 801b036:	ea4f 07e8 	mov.w	r7, r8, asr #3
 801b03a:	b2c0      	uxtb	r0, r0
 801b03c:	ea4f 08c8 	mov.w	r8, r8, lsl #3
 801b040:	fa5f f888 	uxtb.w	r8, r8
 801b044:	fb10 f009 	smulbb	r0, r0, r9
 801b048:	fb08 0005 	mla	r0, r8, r5, r0
 801b04c:	b280      	uxth	r0, r0
 801b04e:	fa1f fc8c 	uxth.w	ip, ip
 801b052:	fb1a fa09 	smulbb	sl, sl, r9
 801b056:	f007 07fc 	and.w	r7, r7, #252	; 0xfc
 801b05a:	fb07 a705 	mla	r7, r7, r5, sl
 801b05e:	f100 0a01 	add.w	sl, r0, #1
 801b062:	f10c 0501 	add.w	r5, ip, #1
 801b066:	eb0a 2a10 	add.w	sl, sl, r0, lsr #8
 801b06a:	eb05 2c1c 	add.w	ip, r5, ip, lsr #8
 801b06e:	b2bf      	uxth	r7, r7
 801b070:	f3ca 2ac4 	ubfx	sl, sl, #11, #5
 801b074:	f40c 4c78 	and.w	ip, ip, #63488	; 0xf800
 801b078:	ea4a 0c0c 	orr.w	ip, sl, ip
 801b07c:	f107 0a01 	add.w	sl, r7, #1
 801b080:	eb0a 2a17 	add.w	sl, sl, r7, lsr #8
 801b084:	ea4f 1a5a 	mov.w	sl, sl, lsr #5
 801b088:	f40a 6afc 	and.w	sl, sl, #2016	; 0x7e0
 801b08c:	9802      	ldr	r0, [sp, #8]
 801b08e:	ea4c 0c0a 	orr.w	ip, ip, sl
 801b092:	f824 c000 	strh.w	ip, [r4, r0]
 801b096:	e7af      	b.n	801aff8 <_ZN8touchgfx8LCD16bpp56TextureMapper_L8_ARGB8888_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x170>
 801b098:	f04f 0800 	mov.w	r8, #0
 801b09c:	eba3 0008 	sub.w	r0, r3, r8
 801b0a0:	2800      	cmp	r0, #0
 801b0a2:	f77f af41 	ble.w	801af28 <_ZN8touchgfx8LCD16bpp56TextureMapper_L8_ARGB8888_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0xa0>
 801b0a6:	f9be 6008 	ldrsh.w	r6, [lr, #8]
 801b0aa:	9f00      	ldr	r7, [sp, #0]
 801b0ac:	1410      	asrs	r0, r2, #16
 801b0ae:	140d      	asrs	r5, r1, #16
 801b0b0:	fb06 7000 	mla	r0, r6, r0, r7
 801b0b4:	5d40      	ldrb	r0, [r0, r5]
 801b0b6:	9d01      	ldr	r5, [sp, #4]
 801b0b8:	f855 5020 	ldr.w	r5, [r5, r0, lsl #2]
 801b0bc:	0e2e      	lsrs	r6, r5, #24
 801b0be:	2eff      	cmp	r6, #255	; 0xff
 801b0c0:	d112      	bne.n	801b0e8 <_ZN8touchgfx8LCD16bpp56TextureMapper_L8_ARGB8888_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x260>
 801b0c2:	482c      	ldr	r0, [pc, #176]	; (801b174 <_ZN8touchgfx8LCD16bpp56TextureMapper_L8_ARGB8888_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x2ec>)
 801b0c4:	ea00 2615 	and.w	r6, r0, r5, lsr #8
 801b0c8:	0968      	lsrs	r0, r5, #5
 801b0ca:	f400 60fc 	and.w	r0, r0, #2016	; 0x7e0
 801b0ce:	4330      	orrs	r0, r6
 801b0d0:	f3c5 05c4 	ubfx	r5, r5, #3, #5
 801b0d4:	4328      	orrs	r0, r5
 801b0d6:	f824 0018 	strh.w	r0, [r4, r8, lsl #1]
 801b0da:	9811      	ldr	r0, [sp, #68]	; 0x44
 801b0dc:	4401      	add	r1, r0
 801b0de:	9812      	ldr	r0, [sp, #72]	; 0x48
 801b0e0:	f108 0801 	add.w	r8, r8, #1
 801b0e4:	4402      	add	r2, r0
 801b0e6:	e7d9      	b.n	801b09c <_ZN8touchgfx8LCD16bpp56TextureMapper_L8_ARGB8888_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x214>
 801b0e8:	b2f0      	uxtb	r0, r6
 801b0ea:	2e00      	cmp	r6, #0
 801b0ec:	d0f5      	beq.n	801b0da <_ZN8touchgfx8LCD16bpp56TextureMapper_L8_ARGB8888_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x252>
 801b0ee:	f834 c018 	ldrh.w	ip, [r4, r8, lsl #1]
 801b0f2:	fa1f f980 	uxth.w	r9, r0
 801b0f6:	ea4f 272c 	mov.w	r7, ip, asr #8
 801b0fa:	f3c5 4607 	ubfx	r6, r5, #16, #8
 801b0fe:	43c0      	mvns	r0, r0
 801b100:	b2c0      	uxtb	r0, r0
 801b102:	fb16 f609 	smulbb	r6, r6, r9
 801b106:	f007 07f8 	and.w	r7, r7, #248	; 0xf8
 801b10a:	fb07 6700 	mla	r7, r7, r0, r6
 801b10e:	f3c5 2a07 	ubfx	sl, r5, #8, #8
 801b112:	ea4f 06ec 	mov.w	r6, ip, asr #3
 801b116:	b2ed      	uxtb	r5, r5
 801b118:	ea4f 0ccc 	mov.w	ip, ip, lsl #3
 801b11c:	fa5f fc8c 	uxtb.w	ip, ip
 801b120:	fb15 f509 	smulbb	r5, r5, r9
 801b124:	fb0c 5500 	mla	r5, ip, r0, r5
 801b128:	b2bf      	uxth	r7, r7
 801b12a:	fb1a fa09 	smulbb	sl, sl, r9
 801b12e:	b2ad      	uxth	r5, r5
 801b130:	f006 06fc 	and.w	r6, r6, #252	; 0xfc
 801b134:	fb06 a600 	mla	r6, r6, r0, sl
 801b138:	1c78      	adds	r0, r7, #1
 801b13a:	f105 0a01 	add.w	sl, r5, #1
 801b13e:	eb00 2717 	add.w	r7, r0, r7, lsr #8
 801b142:	eb0a 2a15 	add.w	sl, sl, r5, lsr #8
 801b146:	b2b6      	uxth	r6, r6
 801b148:	f3ca 2ac4 	ubfx	sl, sl, #11, #5
 801b14c:	f407 4778 	and.w	r7, r7, #63488	; 0xf800
 801b150:	ea4a 0707 	orr.w	r7, sl, r7
 801b154:	f106 0a01 	add.w	sl, r6, #1
 801b158:	eb0a 2a16 	add.w	sl, sl, r6, lsr #8
 801b15c:	ea4f 1a5a 	mov.w	sl, sl, lsr #5
 801b160:	f40a 6afc 	and.w	sl, sl, #2016	; 0x7e0
 801b164:	ea47 070a 	orr.w	r7, r7, sl
 801b168:	f824 7018 	strh.w	r7, [r4, r8, lsl #1]
 801b16c:	e7b5      	b.n	801b0da <_ZN8touchgfx8LCD16bpp56TextureMapper_L8_ARGB8888_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x252>
 801b16e:	b005      	add	sp, #20
 801b170:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
 801b174:	fffff800 	.word	0xfffff800

0801b178 <_ZN8touchgfx8LCD16bpp49TextureMapper_RGB565_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff>:
 801b178:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 801b17c:	b087      	sub	sp, #28
 801b17e:	468b      	mov	fp, r1
 801b180:	9c15      	ldr	r4, [sp, #84]	; 0x54
 801b182:	9204      	str	r2, [sp, #16]
 801b184:	f89d 2064 	ldrb.w	r2, [sp, #100]	; 0x64
 801b188:	9205      	str	r2, [sp, #20]
 801b18a:	e9dd 2016 	ldrd	r2, r0, [sp, #88]	; 0x58
 801b18e:	6861      	ldr	r1, [r4, #4]
 801b190:	f8dd e060 	ldr.w	lr, [sp, #96]	; 0x60
 801b194:	fb01 2000 	mla	r0, r1, r0, r2
 801b198:	6822      	ldr	r2, [r4, #0]
 801b19a:	eb02 0040 	add.w	r0, r2, r0, lsl #1
 801b19e:	f8de 2000 	ldr.w	r2, [lr]
 801b1a2:	9201      	str	r2, [sp, #4]
 801b1a4:	f8de 2004 	ldr.w	r2, [lr, #4]
 801b1a8:	9202      	str	r2, [sp, #8]
 801b1aa:	eef7 6a00 	vmov.f32	s13, #112	; 0x3f800000  1.0
 801b1ae:	f1bb 0f00 	cmp.w	fp, #0
 801b1b2:	dc03      	bgt.n	801b1bc <_ZN8touchgfx8LCD16bpp49TextureMapper_RGB565_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x44>
 801b1b4:	9a04      	ldr	r2, [sp, #16]
 801b1b6:	2a00      	cmp	r2, #0
 801b1b8:	f340 8142 	ble.w	801b440 <_ZN8touchgfx8LCD16bpp49TextureMapper_RGB565_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x2c8>
 801b1bc:	9a11      	ldr	r2, [sp, #68]	; 0x44
 801b1be:	f9be 7008 	ldrsh.w	r7, [lr, #8]
 801b1c2:	f9be 600c 	ldrsh.w	r6, [lr, #12]
 801b1c6:	f502 4100 	add.w	r1, r2, #32768	; 0x8000
 801b1ca:	9a12      	ldr	r2, [sp, #72]	; 0x48
 801b1cc:	f502 4200 	add.w	r2, r2, #32768	; 0x8000
 801b1d0:	2b00      	cmp	r3, #0
 801b1d2:	dd0e      	ble.n	801b1f2 <_ZN8touchgfx8LCD16bpp49TextureMapper_RGB565_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x7a>
 801b1d4:	140c      	asrs	r4, r1, #16
 801b1d6:	d405      	bmi.n	801b1e4 <_ZN8touchgfx8LCD16bpp49TextureMapper_RGB565_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x6c>
 801b1d8:	42bc      	cmp	r4, r7
 801b1da:	da03      	bge.n	801b1e4 <_ZN8touchgfx8LCD16bpp49TextureMapper_RGB565_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x6c>
 801b1dc:	1414      	asrs	r4, r2, #16
 801b1de:	d401      	bmi.n	801b1e4 <_ZN8touchgfx8LCD16bpp49TextureMapper_RGB565_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x6c>
 801b1e0:	42b4      	cmp	r4, r6
 801b1e2:	db07      	blt.n	801b1f4 <_ZN8touchgfx8LCD16bpp49TextureMapper_RGB565_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x7c>
 801b1e4:	9c13      	ldr	r4, [sp, #76]	; 0x4c
 801b1e6:	4421      	add	r1, r4
 801b1e8:	9c14      	ldr	r4, [sp, #80]	; 0x50
 801b1ea:	3b01      	subs	r3, #1
 801b1ec:	4422      	add	r2, r4
 801b1ee:	3002      	adds	r0, #2
 801b1f0:	e7ee      	b.n	801b1d0 <_ZN8touchgfx8LCD16bpp49TextureMapper_RGB565_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x58>
 801b1f2:	d019      	beq.n	801b228 <_ZN8touchgfx8LCD16bpp49TextureMapper_RGB565_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0xb0>
 801b1f4:	9d13      	ldr	r5, [sp, #76]	; 0x4c
 801b1f6:	1e5c      	subs	r4, r3, #1
 801b1f8:	fb05 1504 	mla	r5, r5, r4, r1
 801b1fc:	142d      	asrs	r5, r5, #16
 801b1fe:	d409      	bmi.n	801b214 <_ZN8touchgfx8LCD16bpp49TextureMapper_RGB565_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x9c>
 801b200:	42bd      	cmp	r5, r7
 801b202:	da07      	bge.n	801b214 <_ZN8touchgfx8LCD16bpp49TextureMapper_RGB565_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x9c>
 801b204:	9d14      	ldr	r5, [sp, #80]	; 0x50
 801b206:	fb05 2404 	mla	r4, r5, r4, r2
 801b20a:	1424      	asrs	r4, r4, #16
 801b20c:	d402      	bmi.n	801b214 <_ZN8touchgfx8LCD16bpp49TextureMapper_RGB565_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x9c>
 801b20e:	42b4      	cmp	r4, r6
 801b210:	f2c0 80b1 	blt.w	801b376 <_ZN8touchgfx8LCD16bpp49TextureMapper_RGB565_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x1fe>
 801b214:	f04f 0800 	mov.w	r8, #0
 801b218:	eb03 0408 	add.w	r4, r3, r8
 801b21c:	2c00      	cmp	r4, #0
 801b21e:	dc3e      	bgt.n	801b29e <_ZN8touchgfx8LCD16bpp49TextureMapper_RGB565_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x126>
 801b220:	ea23 73e3 	bic.w	r3, r3, r3, asr #31
 801b224:	eb00 0043 	add.w	r0, r0, r3, lsl #1
 801b228:	f1bb 0f00 	cmp.w	fp, #0
 801b22c:	f340 8108 	ble.w	801b440 <_ZN8touchgfx8LCD16bpp49TextureMapper_RGB565_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x2c8>
 801b230:	ee30 0a04 	vadd.f32	s0, s0, s8
 801b234:	ee70 0aa4 	vadd.f32	s1, s1, s9
 801b238:	eec6 7a80 	vdiv.f32	s15, s13, s0
 801b23c:	9b10      	ldr	r3, [sp, #64]	; 0x40
 801b23e:	f1bb 0b01 	subs.w	fp, fp, #1
 801b242:	ee31 1a05 	vadd.f32	s2, s2, s10
 801b246:	ee20 7aa7 	vmul.f32	s14, s1, s15
 801b24a:	eeb0 6a62 	vmov.f32	s12, s5
 801b24e:	ee61 7a27 	vmul.f32	s15, s2, s15
 801b252:	eebe 6ac8 	vcvt.s32.f32	s12, s12, #16
 801b256:	ee77 2a62 	vsub.f32	s5, s14, s5
 801b25a:	ed8d 6a11 	vstr	s12, [sp, #68]	; 0x44
 801b25e:	eefe 2ac8 	vcvt.s32.f32	s5, s5, #16
 801b262:	eeb0 6a43 	vmov.f32	s12, s6
 801b266:	ee37 3ac3 	vsub.f32	s6, s15, s6
 801b26a:	ee12 2a90 	vmov	r2, s5
 801b26e:	eebe 3ac8 	vcvt.s32.f32	s6, s6, #16
 801b272:	fb92 f3f3 	sdiv	r3, r2, r3
 801b276:	ee13 2a10 	vmov	r2, s6
 801b27a:	eebe 6ac8 	vcvt.s32.f32	s12, s12, #16
 801b27e:	9313      	str	r3, [sp, #76]	; 0x4c
 801b280:	9b10      	ldr	r3, [sp, #64]	; 0x40
 801b282:	fb92 f3f3 	sdiv	r3, r2, r3
 801b286:	9a04      	ldr	r2, [sp, #16]
 801b288:	9314      	str	r3, [sp, #80]	; 0x50
 801b28a:	ed8d 6a12 	vstr	s12, [sp, #72]	; 0x48
 801b28e:	9b10      	ldr	r3, [sp, #64]	; 0x40
 801b290:	eeb0 3a67 	vmov.f32	s6, s15
 801b294:	bf08      	it	eq
 801b296:	4613      	moveq	r3, r2
 801b298:	eef0 2a47 	vmov.f32	s5, s14
 801b29c:	e787      	b.n	801b1ae <_ZN8touchgfx8LCD16bpp49TextureMapper_RGB565_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x36>
 801b29e:	140e      	asrs	r6, r1, #16
 801b2a0:	d462      	bmi.n	801b368 <_ZN8touchgfx8LCD16bpp49TextureMapper_RGB565_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x1f0>
 801b2a2:	f8de 5008 	ldr.w	r5, [lr, #8]
 801b2a6:	42b5      	cmp	r5, r6
 801b2a8:	dd5e      	ble.n	801b368 <_ZN8touchgfx8LCD16bpp49TextureMapper_RGB565_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x1f0>
 801b2aa:	1417      	asrs	r7, r2, #16
 801b2ac:	d45c      	bmi.n	801b368 <_ZN8touchgfx8LCD16bpp49TextureMapper_RGB565_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x1f0>
 801b2ae:	f8de 400c 	ldr.w	r4, [lr, #12]
 801b2b2:	42bc      	cmp	r4, r7
 801b2b4:	dd58      	ble.n	801b368 <_ZN8touchgfx8LCD16bpp49TextureMapper_RGB565_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x1f0>
 801b2b6:	b22d      	sxth	r5, r5
 801b2b8:	fb07 6505 	mla	r5, r7, r5, r6
 801b2bc:	9c02      	ldr	r4, [sp, #8]
 801b2be:	5d66      	ldrb	r6, [r4, r5]
 801b2c0:	2e00      	cmp	r6, #0
 801b2c2:	d051      	beq.n	801b368 <_ZN8touchgfx8LCD16bpp49TextureMapper_RGB565_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x1f0>
 801b2c4:	9c01      	ldr	r4, [sp, #4]
 801b2c6:	f834 9015 	ldrh.w	r9, [r4, r5, lsl #1]
 801b2ca:	f06f 0401 	mvn.w	r4, #1
 801b2ce:	fb04 f408 	mul.w	r4, r4, r8
 801b2d2:	9403      	str	r4, [sp, #12]
 801b2d4:	5b05      	ldrh	r5, [r0, r4]
 801b2d6:	9c05      	ldr	r4, [sp, #20]
 801b2d8:	4366      	muls	r6, r4
 801b2da:	1c74      	adds	r4, r6, #1
 801b2dc:	eb04 2416 	add.w	r4, r4, r6, lsr #8
 801b2e0:	1224      	asrs	r4, r4, #8
 801b2e2:	b2a7      	uxth	r7, r4
 801b2e4:	122e      	asrs	r6, r5, #8
 801b2e6:	43e4      	mvns	r4, r4
 801b2e8:	b2e4      	uxtb	r4, r4
 801b2ea:	ea4f 2c29 	mov.w	ip, r9, asr #8
 801b2ee:	f006 06f8 	and.w	r6, r6, #248	; 0xf8
 801b2f2:	fb16 f604 	smulbb	r6, r6, r4
 801b2f6:	ea4f 0ae5 	mov.w	sl, r5, asr #3
 801b2fa:	f00c 0cf8 	and.w	ip, ip, #248	; 0xf8
 801b2fe:	00ed      	lsls	r5, r5, #3
 801b300:	fb0c 6c07 	mla	ip, ip, r7, r6
 801b304:	b2ed      	uxtb	r5, r5
 801b306:	ea4f 06e9 	mov.w	r6, r9, asr #3
 801b30a:	ea4f 09c9 	mov.w	r9, r9, lsl #3
 801b30e:	fb15 f504 	smulbb	r5, r5, r4
 801b312:	fa5f f989 	uxtb.w	r9, r9
 801b316:	f00a 0afc 	and.w	sl, sl, #252	; 0xfc
 801b31a:	fb09 5507 	mla	r5, r9, r7, r5
 801b31e:	fb1a fa04 	smulbb	sl, sl, r4
 801b322:	fa1f fc8c 	uxth.w	ip, ip
 801b326:	b2ad      	uxth	r5, r5
 801b328:	f006 06fc 	and.w	r6, r6, #252	; 0xfc
 801b32c:	fb06 a607 	mla	r6, r6, r7, sl
 801b330:	f10c 0401 	add.w	r4, ip, #1
 801b334:	f105 0a01 	add.w	sl, r5, #1
 801b338:	eb04 2c1c 	add.w	ip, r4, ip, lsr #8
 801b33c:	eb0a 2a15 	add.w	sl, sl, r5, lsr #8
 801b340:	b2b6      	uxth	r6, r6
 801b342:	f3ca 2ac4 	ubfx	sl, sl, #11, #5
 801b346:	f40c 4c78 	and.w	ip, ip, #63488	; 0xf800
 801b34a:	ea4a 0c0c 	orr.w	ip, sl, ip
 801b34e:	f106 0a01 	add.w	sl, r6, #1
 801b352:	eb0a 2a16 	add.w	sl, sl, r6, lsr #8
 801b356:	ea4f 1a5a 	mov.w	sl, sl, lsr #5
 801b35a:	f40a 6afc 	and.w	sl, sl, #2016	; 0x7e0
 801b35e:	9c03      	ldr	r4, [sp, #12]
 801b360:	ea4c 0c0a 	orr.w	ip, ip, sl
 801b364:	f820 c004 	strh.w	ip, [r0, r4]
 801b368:	9c13      	ldr	r4, [sp, #76]	; 0x4c
 801b36a:	4421      	add	r1, r4
 801b36c:	9c14      	ldr	r4, [sp, #80]	; 0x50
 801b36e:	f108 38ff 	add.w	r8, r8, #4294967295
 801b372:	4422      	add	r2, r4
 801b374:	e750      	b.n	801b218 <_ZN8touchgfx8LCD16bpp49TextureMapper_RGB565_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0xa0>
 801b376:	f04f 0900 	mov.w	r9, #0
 801b37a:	eba3 0409 	sub.w	r4, r3, r9
 801b37e:	2c00      	cmp	r4, #0
 801b380:	f77f af4e 	ble.w	801b220 <_ZN8touchgfx8LCD16bpp49TextureMapper_RGB565_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0xa8>
 801b384:	f9be 6008 	ldrsh.w	r6, [lr, #8]
 801b388:	140d      	asrs	r5, r1, #16
 801b38a:	1414      	asrs	r4, r2, #16
 801b38c:	fb06 5404 	mla	r4, r6, r4, r5
 801b390:	9d02      	ldr	r5, [sp, #8]
 801b392:	5d2e      	ldrb	r6, [r5, r4]
 801b394:	2e00      	cmp	r6, #0
 801b396:	d04c      	beq.n	801b432 <_ZN8touchgfx8LCD16bpp49TextureMapper_RGB565_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x2ba>
 801b398:	9d01      	ldr	r5, [sp, #4]
 801b39a:	f835 8014 	ldrh.w	r8, [r5, r4, lsl #1]
 801b39e:	9c05      	ldr	r4, [sp, #20]
 801b3a0:	f830 5019 	ldrh.w	r5, [r0, r9, lsl #1]
 801b3a4:	4366      	muls	r6, r4
 801b3a6:	1c74      	adds	r4, r6, #1
 801b3a8:	eb04 2416 	add.w	r4, r4, r6, lsr #8
 801b3ac:	1224      	asrs	r4, r4, #8
 801b3ae:	b2a7      	uxth	r7, r4
 801b3b0:	122e      	asrs	r6, r5, #8
 801b3b2:	43e4      	mvns	r4, r4
 801b3b4:	b2e4      	uxtb	r4, r4
 801b3b6:	ea4f 2c28 	mov.w	ip, r8, asr #8
 801b3ba:	f006 06f8 	and.w	r6, r6, #248	; 0xf8
 801b3be:	fb16 f604 	smulbb	r6, r6, r4
 801b3c2:	ea4f 0ae5 	mov.w	sl, r5, asr #3
 801b3c6:	f00c 0cf8 	and.w	ip, ip, #248	; 0xf8
 801b3ca:	00ed      	lsls	r5, r5, #3
 801b3cc:	fb0c 6c07 	mla	ip, ip, r7, r6
 801b3d0:	b2ed      	uxtb	r5, r5
 801b3d2:	ea4f 06e8 	mov.w	r6, r8, asr #3
 801b3d6:	ea4f 08c8 	mov.w	r8, r8, lsl #3
 801b3da:	fb15 f504 	smulbb	r5, r5, r4
 801b3de:	fa5f f888 	uxtb.w	r8, r8
 801b3e2:	f00a 0afc 	and.w	sl, sl, #252	; 0xfc
 801b3e6:	fb08 5507 	mla	r5, r8, r7, r5
 801b3ea:	fb1a fa04 	smulbb	sl, sl, r4
 801b3ee:	fa1f fc8c 	uxth.w	ip, ip
 801b3f2:	b2ad      	uxth	r5, r5
 801b3f4:	f006 06fc 	and.w	r6, r6, #252	; 0xfc
 801b3f8:	fb06 a607 	mla	r6, r6, r7, sl
 801b3fc:	f10c 0401 	add.w	r4, ip, #1
 801b400:	f105 0a01 	add.w	sl, r5, #1
 801b404:	eb04 2c1c 	add.w	ip, r4, ip, lsr #8
 801b408:	eb0a 2a15 	add.w	sl, sl, r5, lsr #8
 801b40c:	b2b6      	uxth	r6, r6
 801b40e:	f3ca 2ac4 	ubfx	sl, sl, #11, #5
 801b412:	f40c 4c78 	and.w	ip, ip, #63488	; 0xf800
 801b416:	ea4a 0c0c 	orr.w	ip, sl, ip
 801b41a:	f106 0a01 	add.w	sl, r6, #1
 801b41e:	eb0a 2a16 	add.w	sl, sl, r6, lsr #8
 801b422:	ea4f 1a5a 	mov.w	sl, sl, lsr #5
 801b426:	f40a 6afc 	and.w	sl, sl, #2016	; 0x7e0
 801b42a:	ea4c 0c0a 	orr.w	ip, ip, sl
 801b42e:	f820 c019 	strh.w	ip, [r0, r9, lsl #1]
 801b432:	9c13      	ldr	r4, [sp, #76]	; 0x4c
 801b434:	4421      	add	r1, r4
 801b436:	9c14      	ldr	r4, [sp, #80]	; 0x50
 801b438:	f109 0901 	add.w	r9, r9, #1
 801b43c:	4422      	add	r2, r4
 801b43e:	e79c      	b.n	801b37a <_ZN8touchgfx8LCD16bpp49TextureMapper_RGB565_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x202>
 801b440:	b007      	add	sp, #28
 801b442:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}

0801b446 <_ZN8touchgfx8LCD16bpp51TextureMapper_RGB565_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff>:
 801b446:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 801b44a:	b085      	sub	sp, #20
 801b44c:	468b      	mov	fp, r1
 801b44e:	9c13      	ldr	r4, [sp, #76]	; 0x4c
 801b450:	9203      	str	r2, [sp, #12]
 801b452:	e9dd 2014 	ldrd	r2, r0, [sp, #80]	; 0x50
 801b456:	6861      	ldr	r1, [r4, #4]
 801b458:	f8dd 8058 	ldr.w	r8, [sp, #88]	; 0x58
 801b45c:	fb01 2000 	mla	r0, r1, r0, r2
 801b460:	6822      	ldr	r2, [r4, #0]
 801b462:	eb02 0040 	add.w	r0, r2, r0, lsl #1
 801b466:	f8d8 2000 	ldr.w	r2, [r8]
 801b46a:	9200      	str	r2, [sp, #0]
 801b46c:	f8d8 2004 	ldr.w	r2, [r8, #4]
 801b470:	9201      	str	r2, [sp, #4]
 801b472:	eef7 6a00 	vmov.f32	s13, #112	; 0x3f800000  1.0
 801b476:	f1bb 0f00 	cmp.w	fp, #0
 801b47a:	dc03      	bgt.n	801b484 <_ZN8touchgfx8LCD16bpp51TextureMapper_RGB565_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x3e>
 801b47c:	9a03      	ldr	r2, [sp, #12]
 801b47e:	2a00      	cmp	r2, #0
 801b480:	f340 8146 	ble.w	801b710 <_ZN8touchgfx8LCD16bpp51TextureMapper_RGB565_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x2ca>
 801b484:	9a0f      	ldr	r2, [sp, #60]	; 0x3c
 801b486:	f9b8 7008 	ldrsh.w	r7, [r8, #8]
 801b48a:	f9b8 600c 	ldrsh.w	r6, [r8, #12]
 801b48e:	f502 4100 	add.w	r1, r2, #32768	; 0x8000
 801b492:	9a10      	ldr	r2, [sp, #64]	; 0x40
 801b494:	f502 4200 	add.w	r2, r2, #32768	; 0x8000
 801b498:	2b00      	cmp	r3, #0
 801b49a:	dd0e      	ble.n	801b4ba <_ZN8touchgfx8LCD16bpp51TextureMapper_RGB565_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x74>
 801b49c:	140c      	asrs	r4, r1, #16
 801b49e:	d405      	bmi.n	801b4ac <_ZN8touchgfx8LCD16bpp51TextureMapper_RGB565_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x66>
 801b4a0:	42bc      	cmp	r4, r7
 801b4a2:	da03      	bge.n	801b4ac <_ZN8touchgfx8LCD16bpp51TextureMapper_RGB565_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x66>
 801b4a4:	1414      	asrs	r4, r2, #16
 801b4a6:	d401      	bmi.n	801b4ac <_ZN8touchgfx8LCD16bpp51TextureMapper_RGB565_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x66>
 801b4a8:	42b4      	cmp	r4, r6
 801b4aa:	db07      	blt.n	801b4bc <_ZN8touchgfx8LCD16bpp51TextureMapper_RGB565_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x76>
 801b4ac:	9c11      	ldr	r4, [sp, #68]	; 0x44
 801b4ae:	4421      	add	r1, r4
 801b4b0:	9c12      	ldr	r4, [sp, #72]	; 0x48
 801b4b2:	3b01      	subs	r3, #1
 801b4b4:	4422      	add	r2, r4
 801b4b6:	3002      	adds	r0, #2
 801b4b8:	e7ee      	b.n	801b498 <_ZN8touchgfx8LCD16bpp51TextureMapper_RGB565_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x52>
 801b4ba:	d017      	beq.n	801b4ec <_ZN8touchgfx8LCD16bpp51TextureMapper_RGB565_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0xa6>
 801b4bc:	9d11      	ldr	r5, [sp, #68]	; 0x44
 801b4be:	1e5c      	subs	r4, r3, #1
 801b4c0:	fb05 1504 	mla	r5, r5, r4, r1
 801b4c4:	142d      	asrs	r5, r5, #16
 801b4c6:	d409      	bmi.n	801b4dc <_ZN8touchgfx8LCD16bpp51TextureMapper_RGB565_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x96>
 801b4c8:	42bd      	cmp	r5, r7
 801b4ca:	da07      	bge.n	801b4dc <_ZN8touchgfx8LCD16bpp51TextureMapper_RGB565_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x96>
 801b4cc:	9d12      	ldr	r5, [sp, #72]	; 0x48
 801b4ce:	fb05 2404 	mla	r4, r5, r4, r2
 801b4d2:	1424      	asrs	r4, r4, #16
 801b4d4:	d402      	bmi.n	801b4dc <_ZN8touchgfx8LCD16bpp51TextureMapper_RGB565_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x96>
 801b4d6:	42b4      	cmp	r4, r6
 801b4d8:	f2c0 80b3 	blt.w	801b642 <_ZN8touchgfx8LCD16bpp51TextureMapper_RGB565_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x1fc>
 801b4dc:	2600      	movs	r6, #0
 801b4de:	199c      	adds	r4, r3, r6
 801b4e0:	2c00      	cmp	r4, #0
 801b4e2:	dc3e      	bgt.n	801b562 <_ZN8touchgfx8LCD16bpp51TextureMapper_RGB565_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x11c>
 801b4e4:	ea23 73e3 	bic.w	r3, r3, r3, asr #31
 801b4e8:	eb00 0043 	add.w	r0, r0, r3, lsl #1
 801b4ec:	f1bb 0f00 	cmp.w	fp, #0
 801b4f0:	f340 810e 	ble.w	801b710 <_ZN8touchgfx8LCD16bpp51TextureMapper_RGB565_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x2ca>
 801b4f4:	ee30 0a04 	vadd.f32	s0, s0, s8
 801b4f8:	ee70 0aa4 	vadd.f32	s1, s1, s9
 801b4fc:	eec6 7a80 	vdiv.f32	s15, s13, s0
 801b500:	9b0e      	ldr	r3, [sp, #56]	; 0x38
 801b502:	f1bb 0b01 	subs.w	fp, fp, #1
 801b506:	ee31 1a05 	vadd.f32	s2, s2, s10
 801b50a:	ee20 7aa7 	vmul.f32	s14, s1, s15
 801b50e:	eeb0 6a62 	vmov.f32	s12, s5
 801b512:	ee61 7a27 	vmul.f32	s15, s2, s15
 801b516:	eebe 6ac8 	vcvt.s32.f32	s12, s12, #16
 801b51a:	ee77 2a62 	vsub.f32	s5, s14, s5
 801b51e:	ed8d 6a0f 	vstr	s12, [sp, #60]	; 0x3c
 801b522:	eefe 2ac8 	vcvt.s32.f32	s5, s5, #16
 801b526:	eeb0 6a43 	vmov.f32	s12, s6
 801b52a:	ee37 3ac3 	vsub.f32	s6, s15, s6
 801b52e:	ee12 2a90 	vmov	r2, s5
 801b532:	eebe 3ac8 	vcvt.s32.f32	s6, s6, #16
 801b536:	fb92 f3f3 	sdiv	r3, r2, r3
 801b53a:	ee13 2a10 	vmov	r2, s6
 801b53e:	eebe 6ac8 	vcvt.s32.f32	s12, s12, #16
 801b542:	9311      	str	r3, [sp, #68]	; 0x44
 801b544:	9b0e      	ldr	r3, [sp, #56]	; 0x38
 801b546:	fb92 f3f3 	sdiv	r3, r2, r3
 801b54a:	9a03      	ldr	r2, [sp, #12]
 801b54c:	9312      	str	r3, [sp, #72]	; 0x48
 801b54e:	ed8d 6a10 	vstr	s12, [sp, #64]	; 0x40
 801b552:	9b0e      	ldr	r3, [sp, #56]	; 0x38
 801b554:	eeb0 3a67 	vmov.f32	s6, s15
 801b558:	bf08      	it	eq
 801b55a:	4613      	moveq	r3, r2
 801b55c:	eef0 2a47 	vmov.f32	s5, s14
 801b560:	e789      	b.n	801b476 <_ZN8touchgfx8LCD16bpp51TextureMapper_RGB565_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x30>
 801b562:	140f      	asrs	r7, r1, #16
 801b564:	d418      	bmi.n	801b598 <_ZN8touchgfx8LCD16bpp51TextureMapper_RGB565_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x152>
 801b566:	f8d8 5008 	ldr.w	r5, [r8, #8]
 801b56a:	42bd      	cmp	r5, r7
 801b56c:	dd14      	ble.n	801b598 <_ZN8touchgfx8LCD16bpp51TextureMapper_RGB565_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x152>
 801b56e:	ea5f 4c22 	movs.w	ip, r2, asr #16
 801b572:	d411      	bmi.n	801b598 <_ZN8touchgfx8LCD16bpp51TextureMapper_RGB565_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x152>
 801b574:	f8d8 400c 	ldr.w	r4, [r8, #12]
 801b578:	4564      	cmp	r4, ip
 801b57a:	dd0d      	ble.n	801b598 <_ZN8touchgfx8LCD16bpp51TextureMapper_RGB565_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x152>
 801b57c:	b22d      	sxth	r5, r5
 801b57e:	fb0c 7505 	mla	r5, ip, r5, r7
 801b582:	9c01      	ldr	r4, [sp, #4]
 801b584:	5d64      	ldrb	r4, [r4, r5]
 801b586:	2cff      	cmp	r4, #255	; 0xff
 801b588:	d10c      	bne.n	801b5a4 <_ZN8touchgfx8LCD16bpp51TextureMapper_RGB565_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x15e>
 801b58a:	9c00      	ldr	r4, [sp, #0]
 801b58c:	f834 5015 	ldrh.w	r5, [r4, r5, lsl #1]
 801b590:	f06f 0401 	mvn.w	r4, #1
 801b594:	4374      	muls	r4, r6
 801b596:	5305      	strh	r5, [r0, r4]
 801b598:	9c11      	ldr	r4, [sp, #68]	; 0x44
 801b59a:	4421      	add	r1, r4
 801b59c:	9c12      	ldr	r4, [sp, #72]	; 0x48
 801b59e:	3e01      	subs	r6, #1
 801b5a0:	4422      	add	r2, r4
 801b5a2:	e79c      	b.n	801b4de <_ZN8touchgfx8LCD16bpp51TextureMapper_RGB565_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x98>
 801b5a4:	2c00      	cmp	r4, #0
 801b5a6:	d0f7      	beq.n	801b598 <_ZN8touchgfx8LCD16bpp51TextureMapper_RGB565_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x152>
 801b5a8:	9f00      	ldr	r7, [sp, #0]
 801b5aa:	f837 9015 	ldrh.w	r9, [r7, r5, lsl #1]
 801b5ae:	f06f 0501 	mvn.w	r5, #1
 801b5b2:	4375      	muls	r5, r6
 801b5b4:	9502      	str	r5, [sp, #8]
 801b5b6:	5b45      	ldrh	r5, [r0, r5]
 801b5b8:	fa1f fc84 	uxth.w	ip, r4
 801b5bc:	122f      	asrs	r7, r5, #8
 801b5be:	43e4      	mvns	r4, r4
 801b5c0:	b2e4      	uxtb	r4, r4
 801b5c2:	ea4f 2e29 	mov.w	lr, r9, asr #8
 801b5c6:	f007 07f8 	and.w	r7, r7, #248	; 0xf8
 801b5ca:	fb17 f704 	smulbb	r7, r7, r4
 801b5ce:	ea4f 0ae5 	mov.w	sl, r5, asr #3
 801b5d2:	f00e 0ef8 	and.w	lr, lr, #248	; 0xf8
 801b5d6:	00ed      	lsls	r5, r5, #3
 801b5d8:	fb0e 7e0c 	mla	lr, lr, ip, r7
 801b5dc:	b2ed      	uxtb	r5, r5
 801b5de:	ea4f 07e9 	mov.w	r7, r9, asr #3
 801b5e2:	ea4f 09c9 	mov.w	r9, r9, lsl #3
 801b5e6:	fb15 f504 	smulbb	r5, r5, r4
 801b5ea:	fa5f f989 	uxtb.w	r9, r9
 801b5ee:	f00a 0afc 	and.w	sl, sl, #252	; 0xfc
 801b5f2:	fb09 550c 	mla	r5, r9, ip, r5
 801b5f6:	fb1a fa04 	smulbb	sl, sl, r4
 801b5fa:	fa1f fe8e 	uxth.w	lr, lr
 801b5fe:	b2ad      	uxth	r5, r5
 801b600:	f007 07fc 	and.w	r7, r7, #252	; 0xfc
 801b604:	fb07 a70c 	mla	r7, r7, ip, sl
 801b608:	f10e 0401 	add.w	r4, lr, #1
 801b60c:	f105 0a01 	add.w	sl, r5, #1
 801b610:	eb04 2e1e 	add.w	lr, r4, lr, lsr #8
 801b614:	eb0a 2a15 	add.w	sl, sl, r5, lsr #8
 801b618:	b2bf      	uxth	r7, r7
 801b61a:	f3ca 2ac4 	ubfx	sl, sl, #11, #5
 801b61e:	f40e 4e78 	and.w	lr, lr, #63488	; 0xf800
 801b622:	ea4a 0e0e 	orr.w	lr, sl, lr
 801b626:	f107 0a01 	add.w	sl, r7, #1
 801b62a:	eb0a 2a17 	add.w	sl, sl, r7, lsr #8
 801b62e:	ea4f 1a5a 	mov.w	sl, sl, lsr #5
 801b632:	f40a 6afc 	and.w	sl, sl, #2016	; 0x7e0
 801b636:	9c02      	ldr	r4, [sp, #8]
 801b638:	ea4e 0e0a 	orr.w	lr, lr, sl
 801b63c:	f820 e004 	strh.w	lr, [r0, r4]
 801b640:	e7aa      	b.n	801b598 <_ZN8touchgfx8LCD16bpp51TextureMapper_RGB565_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x152>
 801b642:	f04f 0900 	mov.w	r9, #0
 801b646:	eba3 0409 	sub.w	r4, r3, r9
 801b64a:	2c00      	cmp	r4, #0
 801b64c:	f77f af4a 	ble.w	801b4e4 <_ZN8touchgfx8LCD16bpp51TextureMapper_RGB565_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x9e>
 801b650:	f9b8 6008 	ldrsh.w	r6, [r8, #8]
 801b654:	1414      	asrs	r4, r2, #16
 801b656:	140d      	asrs	r5, r1, #16
 801b658:	fb06 5504 	mla	r5, r6, r4, r5
 801b65c:	9c01      	ldr	r4, [sp, #4]
 801b65e:	5d64      	ldrb	r4, [r4, r5]
 801b660:	2cff      	cmp	r4, #255	; 0xff
 801b662:	d10b      	bne.n	801b67c <_ZN8touchgfx8LCD16bpp51TextureMapper_RGB565_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x236>
 801b664:	9c00      	ldr	r4, [sp, #0]
 801b666:	f834 4015 	ldrh.w	r4, [r4, r5, lsl #1]
 801b66a:	f820 4019 	strh.w	r4, [r0, r9, lsl #1]
 801b66e:	9c11      	ldr	r4, [sp, #68]	; 0x44
 801b670:	4421      	add	r1, r4
 801b672:	9c12      	ldr	r4, [sp, #72]	; 0x48
 801b674:	f109 0901 	add.w	r9, r9, #1
 801b678:	4422      	add	r2, r4
 801b67a:	e7e4      	b.n	801b646 <_ZN8touchgfx8LCD16bpp51TextureMapper_RGB565_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x200>
 801b67c:	2c00      	cmp	r4, #0
 801b67e:	d0f6      	beq.n	801b66e <_ZN8touchgfx8LCD16bpp51TextureMapper_RGB565_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x228>
 801b680:	9e00      	ldr	r6, [sp, #0]
 801b682:	f836 e015 	ldrh.w	lr, [r6, r5, lsl #1]
 801b686:	f830 5019 	ldrh.w	r5, [r0, r9, lsl #1]
 801b68a:	b2a7      	uxth	r7, r4
 801b68c:	122e      	asrs	r6, r5, #8
 801b68e:	43e4      	mvns	r4, r4
 801b690:	b2e4      	uxtb	r4, r4
 801b692:	ea4f 2c2e 	mov.w	ip, lr, asr #8
 801b696:	f006 06f8 	and.w	r6, r6, #248	; 0xf8
 801b69a:	fb16 f604 	smulbb	r6, r6, r4
 801b69e:	ea4f 0ae5 	mov.w	sl, r5, asr #3
 801b6a2:	f00c 0cf8 	and.w	ip, ip, #248	; 0xf8
 801b6a6:	00ed      	lsls	r5, r5, #3
 801b6a8:	fb0c 6c07 	mla	ip, ip, r7, r6
 801b6ac:	b2ed      	uxtb	r5, r5
 801b6ae:	ea4f 06ee 	mov.w	r6, lr, asr #3
 801b6b2:	ea4f 0ece 	mov.w	lr, lr, lsl #3
 801b6b6:	fb15 f504 	smulbb	r5, r5, r4
 801b6ba:	fa5f fe8e 	uxtb.w	lr, lr
 801b6be:	f00a 0afc 	and.w	sl, sl, #252	; 0xfc
 801b6c2:	fb0e 5507 	mla	r5, lr, r7, r5
 801b6c6:	fb1a fa04 	smulbb	sl, sl, r4
 801b6ca:	fa1f fc8c 	uxth.w	ip, ip
 801b6ce:	b2ad      	uxth	r5, r5
 801b6d0:	f006 06fc 	and.w	r6, r6, #252	; 0xfc
 801b6d4:	fb06 a607 	mla	r6, r6, r7, sl
 801b6d8:	f10c 0401 	add.w	r4, ip, #1
 801b6dc:	f105 0a01 	add.w	sl, r5, #1
 801b6e0:	eb04 2c1c 	add.w	ip, r4, ip, lsr #8
 801b6e4:	eb0a 2a15 	add.w	sl, sl, r5, lsr #8
 801b6e8:	b2b6      	uxth	r6, r6
 801b6ea:	f3ca 2ac4 	ubfx	sl, sl, #11, #5
 801b6ee:	f40c 4c78 	and.w	ip, ip, #63488	; 0xf800
 801b6f2:	ea4a 0c0c 	orr.w	ip, sl, ip
 801b6f6:	f106 0a01 	add.w	sl, r6, #1
 801b6fa:	eb0a 2a16 	add.w	sl, sl, r6, lsr #8
 801b6fe:	ea4f 1a5a 	mov.w	sl, sl, lsr #5
 801b702:	f40a 6afc 	and.w	sl, sl, #2016	; 0x7e0
 801b706:	ea4c 0c0a 	orr.w	ip, ip, sl
 801b70a:	f820 c019 	strh.w	ip, [r0, r9, lsl #1]
 801b70e:	e7ae      	b.n	801b66e <_ZN8touchgfx8LCD16bpp51TextureMapper_RGB565_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x228>
 801b710:	b005      	add	sp, #20
 801b712:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}

0801b716 <_ZN8touchgfx8LCD16bpp46TextureMapper_RGB565_Opaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff>:
 801b716:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 801b71a:	b085      	sub	sp, #20
 801b71c:	9813      	ldr	r0, [sp, #76]	; 0x4c
 801b71e:	9203      	str	r2, [sp, #12]
 801b720:	f89d 205c 	ldrb.w	r2, [sp, #92]	; 0x5c
 801b724:	9201      	str	r2, [sp, #4]
 801b726:	e9dd 2414 	ldrd	r2, r4, [sp, #80]	; 0x50
 801b72a:	9100      	str	r1, [sp, #0]
 801b72c:	6841      	ldr	r1, [r0, #4]
 801b72e:	f8dd e058 	ldr.w	lr, [sp, #88]	; 0x58
 801b732:	fb01 2404 	mla	r4, r1, r4, r2
 801b736:	6802      	ldr	r2, [r0, #0]
 801b738:	eb02 0444 	add.w	r4, r2, r4, lsl #1
 801b73c:	f8de 2000 	ldr.w	r2, [lr]
 801b740:	9202      	str	r2, [sp, #8]
 801b742:	9a01      	ldr	r2, [sp, #4]
 801b744:	43d6      	mvns	r6, r2
 801b746:	b2f6      	uxtb	r6, r6
 801b748:	9a00      	ldr	r2, [sp, #0]
 801b74a:	2a00      	cmp	r2, #0
 801b74c:	dc03      	bgt.n	801b756 <_ZN8touchgfx8LCD16bpp46TextureMapper_RGB565_Opaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x40>
 801b74e:	9a03      	ldr	r2, [sp, #12]
 801b750:	2a00      	cmp	r2, #0
 801b752:	f340 8124 	ble.w	801b99e <_ZN8touchgfx8LCD16bpp46TextureMapper_RGB565_Opaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x288>
 801b756:	9a0f      	ldr	r2, [sp, #60]	; 0x3c
 801b758:	f9be c008 	ldrsh.w	ip, [lr, #8]
 801b75c:	f9be 700c 	ldrsh.w	r7, [lr, #12]
 801b760:	f502 4100 	add.w	r1, r2, #32768	; 0x8000
 801b764:	9a10      	ldr	r2, [sp, #64]	; 0x40
 801b766:	f502 4200 	add.w	r2, r2, #32768	; 0x8000
 801b76a:	2b00      	cmp	r3, #0
 801b76c:	dd0e      	ble.n	801b78c <_ZN8touchgfx8LCD16bpp46TextureMapper_RGB565_Opaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x76>
 801b76e:	1408      	asrs	r0, r1, #16
 801b770:	d405      	bmi.n	801b77e <_ZN8touchgfx8LCD16bpp46TextureMapper_RGB565_Opaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x68>
 801b772:	4560      	cmp	r0, ip
 801b774:	da03      	bge.n	801b77e <_ZN8touchgfx8LCD16bpp46TextureMapper_RGB565_Opaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x68>
 801b776:	1410      	asrs	r0, r2, #16
 801b778:	d401      	bmi.n	801b77e <_ZN8touchgfx8LCD16bpp46TextureMapper_RGB565_Opaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x68>
 801b77a:	42b8      	cmp	r0, r7
 801b77c:	db07      	blt.n	801b78e <_ZN8touchgfx8LCD16bpp46TextureMapper_RGB565_Opaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x78>
 801b77e:	9811      	ldr	r0, [sp, #68]	; 0x44
 801b780:	4401      	add	r1, r0
 801b782:	9812      	ldr	r0, [sp, #72]	; 0x48
 801b784:	3b01      	subs	r3, #1
 801b786:	4402      	add	r2, r0
 801b788:	3402      	adds	r4, #2
 801b78a:	e7ee      	b.n	801b76a <_ZN8touchgfx8LCD16bpp46TextureMapper_RGB565_Opaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x54>
 801b78c:	d06e      	beq.n	801b86c <_ZN8touchgfx8LCD16bpp46TextureMapper_RGB565_Opaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x156>
 801b78e:	9d11      	ldr	r5, [sp, #68]	; 0x44
 801b790:	1e58      	subs	r0, r3, #1
 801b792:	fb05 1500 	mla	r5, r5, r0, r1
 801b796:	142d      	asrs	r5, r5, #16
 801b798:	d45c      	bmi.n	801b854 <_ZN8touchgfx8LCD16bpp46TextureMapper_RGB565_Opaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x13e>
 801b79a:	4565      	cmp	r5, ip
 801b79c:	da5a      	bge.n	801b854 <_ZN8touchgfx8LCD16bpp46TextureMapper_RGB565_Opaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x13e>
 801b79e:	9d12      	ldr	r5, [sp, #72]	; 0x48
 801b7a0:	fb05 2000 	mla	r0, r5, r0, r2
 801b7a4:	1400      	asrs	r0, r0, #16
 801b7a6:	d455      	bmi.n	801b854 <_ZN8touchgfx8LCD16bpp46TextureMapper_RGB565_Opaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x13e>
 801b7a8:	42b8      	cmp	r0, r7
 801b7aa:	da53      	bge.n	801b854 <_ZN8touchgfx8LCD16bpp46TextureMapper_RGB565_Opaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x13e>
 801b7ac:	f8bd b004 	ldrh.w	fp, [sp, #4]
 801b7b0:	4699      	mov	r9, r3
 801b7b2:	46a2      	mov	sl, r4
 801b7b4:	f1b9 0f00 	cmp.w	r9, #0
 801b7b8:	dd54      	ble.n	801b864 <_ZN8touchgfx8LCD16bpp46TextureMapper_RGB565_Opaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x14e>
 801b7ba:	f9be 7008 	ldrsh.w	r7, [lr, #8]
 801b7be:	140d      	asrs	r5, r1, #16
 801b7c0:	1410      	asrs	r0, r2, #16
 801b7c2:	fb07 5000 	mla	r0, r7, r0, r5
 801b7c6:	9d02      	ldr	r5, [sp, #8]
 801b7c8:	f835 0010 	ldrh.w	r0, [r5, r0, lsl #1]
 801b7cc:	f8ba 5000 	ldrh.w	r5, [sl]
 801b7d0:	122f      	asrs	r7, r5, #8
 801b7d2:	ea4f 2c20 	mov.w	ip, r0, asr #8
 801b7d6:	f007 07f8 	and.w	r7, r7, #248	; 0xf8
 801b7da:	fb17 f706 	smulbb	r7, r7, r6
 801b7de:	ea4f 08e5 	mov.w	r8, r5, asr #3
 801b7e2:	f00c 0cf8 	and.w	ip, ip, #248	; 0xf8
 801b7e6:	00ed      	lsls	r5, r5, #3
 801b7e8:	fb0c 7c0b 	mla	ip, ip, fp, r7
 801b7ec:	f008 08fc 	and.w	r8, r8, #252	; 0xfc
 801b7f0:	10c7      	asrs	r7, r0, #3
 801b7f2:	b2ed      	uxtb	r5, r5
 801b7f4:	00c0      	lsls	r0, r0, #3
 801b7f6:	fb18 f806 	smulbb	r8, r8, r6
 801b7fa:	fb15 f506 	smulbb	r5, r5, r6
 801b7fe:	f007 07fc 	and.w	r7, r7, #252	; 0xfc
 801b802:	b2c0      	uxtb	r0, r0
 801b804:	fa1f fc8c 	uxth.w	ip, ip
 801b808:	fb07 870b 	mla	r7, r7, fp, r8
 801b80c:	fb00 500b 	mla	r0, r0, fp, r5
 801b810:	b280      	uxth	r0, r0
 801b812:	b2bf      	uxth	r7, r7
 801b814:	f10c 0501 	add.w	r5, ip, #1
 801b818:	eb05 2c1c 	add.w	ip, r5, ip, lsr #8
 801b81c:	f107 0801 	add.w	r8, r7, #1
 801b820:	1c45      	adds	r5, r0, #1
 801b822:	eb05 2510 	add.w	r5, r5, r0, lsr #8
 801b826:	eb08 2817 	add.w	r8, r8, r7, lsr #8
 801b82a:	9811      	ldr	r0, [sp, #68]	; 0x44
 801b82c:	f40c 4c78 	and.w	ip, ip, #63488	; 0xf800
 801b830:	f3c5 25c4 	ubfx	r5, r5, #11, #5
 801b834:	ea4f 1858 	mov.w	r8, r8, lsr #5
 801b838:	ea45 0c0c 	orr.w	ip, r5, ip
 801b83c:	f408 68fc 	and.w	r8, r8, #2016	; 0x7e0
 801b840:	4401      	add	r1, r0
 801b842:	9812      	ldr	r0, [sp, #72]	; 0x48
 801b844:	ea4c 0c08 	orr.w	ip, ip, r8
 801b848:	f82a cb02 	strh.w	ip, [sl], #2
 801b84c:	4402      	add	r2, r0
 801b84e:	f109 39ff 	add.w	r9, r9, #4294967295
 801b852:	e7af      	b.n	801b7b4 <_ZN8touchgfx8LCD16bpp46TextureMapper_RGB565_Opaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x9e>
 801b854:	f8bd a004 	ldrh.w	sl, [sp, #4]
 801b858:	f04f 0800 	mov.w	r8, #0
 801b85c:	eb03 0008 	add.w	r0, r3, r8
 801b860:	2800      	cmp	r0, #0
 801b862:	dc41      	bgt.n	801b8e8 <_ZN8touchgfx8LCD16bpp46TextureMapper_RGB565_Opaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x1d2>
 801b864:	ea23 73e3 	bic.w	r3, r3, r3, asr #31
 801b868:	eb04 0443 	add.w	r4, r4, r3, lsl #1
 801b86c:	9b00      	ldr	r3, [sp, #0]
 801b86e:	2b00      	cmp	r3, #0
 801b870:	f340 8095 	ble.w	801b99e <_ZN8touchgfx8LCD16bpp46TextureMapper_RGB565_Opaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x288>
 801b874:	ee30 0a04 	vadd.f32	s0, s0, s8
 801b878:	eeb7 7a00 	vmov.f32	s14, #112	; 0x3f800000  1.0
 801b87c:	eec7 7a00 	vdiv.f32	s15, s14, s0
 801b880:	9b0e      	ldr	r3, [sp, #56]	; 0x38
 801b882:	ee70 0aa4 	vadd.f32	s1, s1, s9
 801b886:	ee31 1a05 	vadd.f32	s2, s2, s10
 801b88a:	ee20 7aa7 	vmul.f32	s14, s1, s15
 801b88e:	eef0 6a62 	vmov.f32	s13, s5
 801b892:	ee61 7a27 	vmul.f32	s15, s2, s15
 801b896:	eefe 6ac8 	vcvt.s32.f32	s13, s13, #16
 801b89a:	ee77 2a62 	vsub.f32	s5, s14, s5
 801b89e:	edcd 6a0f 	vstr	s13, [sp, #60]	; 0x3c
 801b8a2:	eefe 2ac8 	vcvt.s32.f32	s5, s5, #16
 801b8a6:	eef0 6a43 	vmov.f32	s13, s6
 801b8aa:	ee37 3ac3 	vsub.f32	s6, s15, s6
 801b8ae:	ee12 2a90 	vmov	r2, s5
 801b8b2:	eebe 3ac8 	vcvt.s32.f32	s6, s6, #16
 801b8b6:	fb92 f3f3 	sdiv	r3, r2, r3
 801b8ba:	ee13 2a10 	vmov	r2, s6
 801b8be:	9311      	str	r3, [sp, #68]	; 0x44
 801b8c0:	9b0e      	ldr	r3, [sp, #56]	; 0x38
 801b8c2:	fb92 f3f3 	sdiv	r3, r2, r3
 801b8c6:	9312      	str	r3, [sp, #72]	; 0x48
 801b8c8:	9b00      	ldr	r3, [sp, #0]
 801b8ca:	9a03      	ldr	r2, [sp, #12]
 801b8cc:	eefe 6ac8 	vcvt.s32.f32	s13, s13, #16
 801b8d0:	3b01      	subs	r3, #1
 801b8d2:	9300      	str	r3, [sp, #0]
 801b8d4:	edcd 6a10 	vstr	s13, [sp, #64]	; 0x40
 801b8d8:	9b0e      	ldr	r3, [sp, #56]	; 0x38
 801b8da:	eeb0 3a67 	vmov.f32	s6, s15
 801b8de:	bf08      	it	eq
 801b8e0:	4613      	moveq	r3, r2
 801b8e2:	eef0 2a47 	vmov.f32	s5, s14
 801b8e6:	e72f      	b.n	801b748 <_ZN8touchgfx8LCD16bpp46TextureMapper_RGB565_Opaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x32>
 801b8e8:	140f      	asrs	r7, r1, #16
 801b8ea:	d451      	bmi.n	801b990 <_ZN8touchgfx8LCD16bpp46TextureMapper_RGB565_Opaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x27a>
 801b8ec:	f8de 5008 	ldr.w	r5, [lr, #8]
 801b8f0:	42bd      	cmp	r5, r7
 801b8f2:	dd4d      	ble.n	801b990 <_ZN8touchgfx8LCD16bpp46TextureMapper_RGB565_Opaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x27a>
 801b8f4:	ea5f 4c22 	movs.w	ip, r2, asr #16
 801b8f8:	d44a      	bmi.n	801b990 <_ZN8touchgfx8LCD16bpp46TextureMapper_RGB565_Opaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x27a>
 801b8fa:	f8de 000c 	ldr.w	r0, [lr, #12]
 801b8fe:	4560      	cmp	r0, ip
 801b900:	dd46      	ble.n	801b990 <_ZN8touchgfx8LCD16bpp46TextureMapper_RGB565_Opaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x27a>
 801b902:	b22d      	sxth	r5, r5
 801b904:	fb0c 7505 	mla	r5, ip, r5, r7
 801b908:	9802      	ldr	r0, [sp, #8]
 801b90a:	f830 0015 	ldrh.w	r0, [r0, r5, lsl #1]
 801b90e:	f06f 0501 	mvn.w	r5, #1
 801b912:	fb05 fb08 	mul.w	fp, r5, r8
 801b916:	ea4f 2c20 	mov.w	ip, r0, asr #8
 801b91a:	f834 500b 	ldrh.w	r5, [r4, fp]
 801b91e:	122f      	asrs	r7, r5, #8
 801b920:	f007 07f8 	and.w	r7, r7, #248	; 0xf8
 801b924:	fb17 f706 	smulbb	r7, r7, r6
 801b928:	ea4f 09e5 	mov.w	r9, r5, asr #3
 801b92c:	f00c 0cf8 	and.w	ip, ip, #248	; 0xf8
 801b930:	00ed      	lsls	r5, r5, #3
 801b932:	fb0c 7c0a 	mla	ip, ip, sl, r7
 801b936:	f009 09fc 	and.w	r9, r9, #252	; 0xfc
 801b93a:	10c7      	asrs	r7, r0, #3
 801b93c:	b2ed      	uxtb	r5, r5
 801b93e:	00c0      	lsls	r0, r0, #3
 801b940:	fb19 f906 	smulbb	r9, r9, r6
 801b944:	fb15 f506 	smulbb	r5, r5, r6
 801b948:	f007 07fc 	and.w	r7, r7, #252	; 0xfc
 801b94c:	b2c0      	uxtb	r0, r0
 801b94e:	fa1f fc8c 	uxth.w	ip, ip
 801b952:	fb07 970a 	mla	r7, r7, sl, r9
 801b956:	fb00 500a 	mla	r0, r0, sl, r5
 801b95a:	b2bf      	uxth	r7, r7
 801b95c:	b280      	uxth	r0, r0
 801b95e:	f10c 0501 	add.w	r5, ip, #1
 801b962:	eb05 2c1c 	add.w	ip, r5, ip, lsr #8
 801b966:	f107 0901 	add.w	r9, r7, #1
 801b96a:	1c45      	adds	r5, r0, #1
 801b96c:	eb05 2510 	add.w	r5, r5, r0, lsr #8
 801b970:	eb09 2917 	add.w	r9, r9, r7, lsr #8
 801b974:	f40c 4c78 	and.w	ip, ip, #63488	; 0xf800
 801b978:	f3c5 25c4 	ubfx	r5, r5, #11, #5
 801b97c:	ea4f 1959 	mov.w	r9, r9, lsr #5
 801b980:	ea45 0c0c 	orr.w	ip, r5, ip
 801b984:	f409 69fc 	and.w	r9, r9, #2016	; 0x7e0
 801b988:	ea4c 0c09 	orr.w	ip, ip, r9
 801b98c:	f824 c00b 	strh.w	ip, [r4, fp]
 801b990:	9811      	ldr	r0, [sp, #68]	; 0x44
 801b992:	4401      	add	r1, r0
 801b994:	9812      	ldr	r0, [sp, #72]	; 0x48
 801b996:	f108 38ff 	add.w	r8, r8, #4294967295
 801b99a:	4402      	add	r2, r0
 801b99c:	e75e      	b.n	801b85c <_ZN8touchgfx8LCD16bpp46TextureMapper_RGB565_Opaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x146>
 801b99e:	b005      	add	sp, #20
 801b9a0:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}

0801b9a4 <_ZN8touchgfx8LCD16bpp48TextureMapper_RGB565_Opaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff>:
 801b9a4:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 801b9a8:	b085      	sub	sp, #20
 801b9aa:	4693      	mov	fp, r2
 801b9ac:	9e13      	ldr	r6, [sp, #76]	; 0x4c
 801b9ae:	9d16      	ldr	r5, [sp, #88]	; 0x58
 801b9b0:	6870      	ldr	r0, [r6, #4]
 801b9b2:	9101      	str	r1, [sp, #4]
 801b9b4:	e9dd 2414 	ldrd	r2, r4, [sp, #80]	; 0x50
 801b9b8:	fb00 2404 	mla	r4, r0, r4, r2
 801b9bc:	6832      	ldr	r2, [r6, #0]
 801b9be:	e9dd ec11 	ldrd	lr, ip, [sp, #68]	; 0x44
 801b9c2:	eb02 0444 	add.w	r4, r2, r4, lsl #1
 801b9c6:	682a      	ldr	r2, [r5, #0]
 801b9c8:	9202      	str	r2, [sp, #8]
 801b9ca:	eef7 6a00 	vmov.f32	s13, #112	; 0x3f800000  1.0
 801b9ce:	9a01      	ldr	r2, [sp, #4]
 801b9d0:	2a00      	cmp	r2, #0
 801b9d2:	dc03      	bgt.n	801b9dc <_ZN8touchgfx8LCD16bpp48TextureMapper_RGB565_Opaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x38>
 801b9d4:	f1bb 0f00 	cmp.w	fp, #0
 801b9d8:	f340 809a 	ble.w	801bb10 <_ZN8touchgfx8LCD16bpp48TextureMapper_RGB565_Opaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x16c>
 801b9dc:	9a0f      	ldr	r2, [sp, #60]	; 0x3c
 801b9de:	f9b5 9008 	ldrsh.w	r9, [r5, #8]
 801b9e2:	f9b5 800c 	ldrsh.w	r8, [r5, #12]
 801b9e6:	f502 4000 	add.w	r0, r2, #32768	; 0x8000
 801b9ea:	9a10      	ldr	r2, [sp, #64]	; 0x40
 801b9ec:	f502 4200 	add.w	r2, r2, #32768	; 0x8000
 801b9f0:	2b00      	cmp	r3, #0
 801b9f2:	dd0c      	ble.n	801ba0e <_ZN8touchgfx8LCD16bpp48TextureMapper_RGB565_Opaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x6a>
 801b9f4:	1406      	asrs	r6, r0, #16
 801b9f6:	d405      	bmi.n	801ba04 <_ZN8touchgfx8LCD16bpp48TextureMapper_RGB565_Opaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x60>
 801b9f8:	454e      	cmp	r6, r9
 801b9fa:	da03      	bge.n	801ba04 <_ZN8touchgfx8LCD16bpp48TextureMapper_RGB565_Opaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x60>
 801b9fc:	1416      	asrs	r6, r2, #16
 801b9fe:	d401      	bmi.n	801ba04 <_ZN8touchgfx8LCD16bpp48TextureMapper_RGB565_Opaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x60>
 801ba00:	4546      	cmp	r6, r8
 801ba02:	db05      	blt.n	801ba10 <_ZN8touchgfx8LCD16bpp48TextureMapper_RGB565_Opaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x6c>
 801ba04:	4470      	add	r0, lr
 801ba06:	4462      	add	r2, ip
 801ba08:	3b01      	subs	r3, #1
 801ba0a:	3402      	adds	r4, #2
 801ba0c:	e7f0      	b.n	801b9f0 <_ZN8touchgfx8LCD16bpp48TextureMapper_RGB565_Opaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x4c>
 801ba0e:	d00f      	beq.n	801ba30 <_ZN8touchgfx8LCD16bpp48TextureMapper_RGB565_Opaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x8c>
 801ba10:	1e5e      	subs	r6, r3, #1
 801ba12:	fb0e 0706 	mla	r7, lr, r6, r0
 801ba16:	143f      	asrs	r7, r7, #16
 801ba18:	d541      	bpl.n	801ba9e <_ZN8touchgfx8LCD16bpp48TextureMapper_RGB565_Opaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0xfa>
 801ba1a:	eb04 0643 	add.w	r6, r4, r3, lsl #1
 801ba1e:	4698      	mov	r8, r3
 801ba20:	9603      	str	r6, [sp, #12]
 801ba22:	f1b8 0f00 	cmp.w	r8, #0
 801ba26:	dc56      	bgt.n	801bad6 <_ZN8touchgfx8LCD16bpp48TextureMapper_RGB565_Opaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x132>
 801ba28:	ea23 73e3 	bic.w	r3, r3, r3, asr #31
 801ba2c:	eb04 0443 	add.w	r4, r4, r3, lsl #1
 801ba30:	9b01      	ldr	r3, [sp, #4]
 801ba32:	2b00      	cmp	r3, #0
 801ba34:	dd6c      	ble.n	801bb10 <_ZN8touchgfx8LCD16bpp48TextureMapper_RGB565_Opaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x16c>
 801ba36:	ee30 0a04 	vadd.f32	s0, s0, s8
 801ba3a:	ee70 0aa4 	vadd.f32	s1, s1, s9
 801ba3e:	eec6 7a80 	vdiv.f32	s15, s13, s0
 801ba42:	9b0e      	ldr	r3, [sp, #56]	; 0x38
 801ba44:	ee31 1a05 	vadd.f32	s2, s2, s10
 801ba48:	ee20 7aa7 	vmul.f32	s14, s1, s15
 801ba4c:	eeb0 6a62 	vmov.f32	s12, s5
 801ba50:	ee61 7a27 	vmul.f32	s15, s2, s15
 801ba54:	eebe 6ac8 	vcvt.s32.f32	s12, s12, #16
 801ba58:	ee77 2a62 	vsub.f32	s5, s14, s5
 801ba5c:	ed8d 6a0f 	vstr	s12, [sp, #60]	; 0x3c
 801ba60:	eefe 2ac8 	vcvt.s32.f32	s5, s5, #16
 801ba64:	eeb0 6a43 	vmov.f32	s12, s6
 801ba68:	ee37 3ac3 	vsub.f32	s6, s15, s6
 801ba6c:	ee12 2a90 	vmov	r2, s5
 801ba70:	eebe 3ac8 	vcvt.s32.f32	s6, s6, #16
 801ba74:	fb92 fef3 	sdiv	lr, r2, r3
 801ba78:	ee13 2a10 	vmov	r2, s6
 801ba7c:	fb92 fcf3 	sdiv	ip, r2, r3
 801ba80:	9b01      	ldr	r3, [sp, #4]
 801ba82:	eebe 6ac8 	vcvt.s32.f32	s12, s12, #16
 801ba86:	3b01      	subs	r3, #1
 801ba88:	9301      	str	r3, [sp, #4]
 801ba8a:	ed8d 6a10 	vstr	s12, [sp, #64]	; 0x40
 801ba8e:	9b0e      	ldr	r3, [sp, #56]	; 0x38
 801ba90:	eeb0 3a67 	vmov.f32	s6, s15
 801ba94:	bf08      	it	eq
 801ba96:	465b      	moveq	r3, fp
 801ba98:	eef0 2a47 	vmov.f32	s5, s14
 801ba9c:	e797      	b.n	801b9ce <_ZN8touchgfx8LCD16bpp48TextureMapper_RGB565_Opaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x2a>
 801ba9e:	454f      	cmp	r7, r9
 801baa0:	dabb      	bge.n	801ba1a <_ZN8touchgfx8LCD16bpp48TextureMapper_RGB565_Opaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x76>
 801baa2:	fb0c 2606 	mla	r6, ip, r6, r2
 801baa6:	1436      	asrs	r6, r6, #16
 801baa8:	d4b7      	bmi.n	801ba1a <_ZN8touchgfx8LCD16bpp48TextureMapper_RGB565_Opaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x76>
 801baaa:	4546      	cmp	r6, r8
 801baac:	dab5      	bge.n	801ba1a <_ZN8touchgfx8LCD16bpp48TextureMapper_RGB565_Opaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x76>
 801baae:	461e      	mov	r6, r3
 801bab0:	46a0      	mov	r8, r4
 801bab2:	2e00      	cmp	r6, #0
 801bab4:	ddb8      	ble.n	801ba28 <_ZN8touchgfx8LCD16bpp48TextureMapper_RGB565_Opaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x84>
 801bab6:	f9b5 a008 	ldrsh.w	sl, [r5, #8]
 801baba:	9902      	ldr	r1, [sp, #8]
 801babc:	1417      	asrs	r7, r2, #16
 801babe:	ea4f 4920 	mov.w	r9, r0, asr #16
 801bac2:	fb0a 9707 	mla	r7, sl, r7, r9
 801bac6:	4470      	add	r0, lr
 801bac8:	f831 7017 	ldrh.w	r7, [r1, r7, lsl #1]
 801bacc:	f828 7b02 	strh.w	r7, [r8], #2
 801bad0:	4462      	add	r2, ip
 801bad2:	3e01      	subs	r6, #1
 801bad4:	e7ed      	b.n	801bab2 <_ZN8touchgfx8LCD16bpp48TextureMapper_RGB565_Opaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x10e>
 801bad6:	ea5f 4920 	movs.w	r9, r0, asr #16
 801bada:	d414      	bmi.n	801bb06 <_ZN8touchgfx8LCD16bpp48TextureMapper_RGB565_Opaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x162>
 801badc:	68ae      	ldr	r6, [r5, #8]
 801bade:	454e      	cmp	r6, r9
 801bae0:	dd11      	ble.n	801bb06 <_ZN8touchgfx8LCD16bpp48TextureMapper_RGB565_Opaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x162>
 801bae2:	ea5f 4a22 	movs.w	sl, r2, asr #16
 801bae6:	d40e      	bmi.n	801bb06 <_ZN8touchgfx8LCD16bpp48TextureMapper_RGB565_Opaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x162>
 801bae8:	68ef      	ldr	r7, [r5, #12]
 801baea:	4557      	cmp	r7, sl
 801baec:	dd0b      	ble.n	801bb06 <_ZN8touchgfx8LCD16bpp48TextureMapper_RGB565_Opaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x162>
 801baee:	b236      	sxth	r6, r6
 801baf0:	fb0a 9606 	mla	r6, sl, r6, r9
 801baf4:	9f02      	ldr	r7, [sp, #8]
 801baf6:	f06f 0101 	mvn.w	r1, #1
 801bafa:	f837 7016 	ldrh.w	r7, [r7, r6, lsl #1]
 801bafe:	fb01 f608 	mul.w	r6, r1, r8
 801bb02:	9903      	ldr	r1, [sp, #12]
 801bb04:	538f      	strh	r7, [r1, r6]
 801bb06:	4470      	add	r0, lr
 801bb08:	4462      	add	r2, ip
 801bb0a:	f108 38ff 	add.w	r8, r8, #4294967295
 801bb0e:	e788      	b.n	801ba22 <_ZN8touchgfx8LCD16bpp48TextureMapper_RGB565_Opaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x7e>
 801bb10:	b005      	add	sp, #20
 801bb12:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}

0801bb16 <_ZN8touchgfx8LCD16bpp51TextureMapper_ARGB8888_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff>:
 801bb16:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 801bb1a:	b087      	sub	sp, #28
 801bb1c:	468b      	mov	fp, r1
 801bb1e:	9815      	ldr	r0, [sp, #84]	; 0x54
 801bb20:	9203      	str	r2, [sp, #12]
 801bb22:	f89d 2064 	ldrb.w	r2, [sp, #100]	; 0x64
 801bb26:	9204      	str	r2, [sp, #16]
 801bb28:	e9dd 2516 	ldrd	r2, r5, [sp, #88]	; 0x58
 801bb2c:	6841      	ldr	r1, [r0, #4]
 801bb2e:	f8dd 9060 	ldr.w	r9, [sp, #96]	; 0x60
 801bb32:	fb01 2505 	mla	r5, r1, r5, r2
 801bb36:	6802      	ldr	r2, [r0, #0]
 801bb38:	eb02 0545 	add.w	r5, r2, r5, lsl #1
 801bb3c:	f8d9 2000 	ldr.w	r2, [r9]
 801bb40:	9201      	str	r2, [sp, #4]
 801bb42:	eef7 6a00 	vmov.f32	s13, #112	; 0x3f800000  1.0
 801bb46:	f1bb 0f00 	cmp.w	fp, #0
 801bb4a:	dc03      	bgt.n	801bb54 <_ZN8touchgfx8LCD16bpp51TextureMapper_ARGB8888_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x3e>
 801bb4c:	9a03      	ldr	r2, [sp, #12]
 801bb4e:	2a00      	cmp	r2, #0
 801bb50:	f340 8159 	ble.w	801be06 <_ZN8touchgfx8LCD16bpp51TextureMapper_ARGB8888_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x2f0>
 801bb54:	9a11      	ldr	r2, [sp, #68]	; 0x44
 801bb56:	f9b9 7008 	ldrsh.w	r7, [r9, #8]
 801bb5a:	f9b9 600c 	ldrsh.w	r6, [r9, #12]
 801bb5e:	f502 4000 	add.w	r0, r2, #32768	; 0x8000
 801bb62:	9a12      	ldr	r2, [sp, #72]	; 0x48
 801bb64:	f502 4100 	add.w	r1, r2, #32768	; 0x8000
 801bb68:	2b00      	cmp	r3, #0
 801bb6a:	dd0e      	ble.n	801bb8a <_ZN8touchgfx8LCD16bpp51TextureMapper_ARGB8888_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x74>
 801bb6c:	1402      	asrs	r2, r0, #16
 801bb6e:	d405      	bmi.n	801bb7c <_ZN8touchgfx8LCD16bpp51TextureMapper_ARGB8888_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x66>
 801bb70:	42ba      	cmp	r2, r7
 801bb72:	da03      	bge.n	801bb7c <_ZN8touchgfx8LCD16bpp51TextureMapper_ARGB8888_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x66>
 801bb74:	140a      	asrs	r2, r1, #16
 801bb76:	d401      	bmi.n	801bb7c <_ZN8touchgfx8LCD16bpp51TextureMapper_ARGB8888_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x66>
 801bb78:	42b2      	cmp	r2, r6
 801bb7a:	db07      	blt.n	801bb8c <_ZN8touchgfx8LCD16bpp51TextureMapper_ARGB8888_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x76>
 801bb7c:	9a13      	ldr	r2, [sp, #76]	; 0x4c
 801bb7e:	4410      	add	r0, r2
 801bb80:	9a14      	ldr	r2, [sp, #80]	; 0x50
 801bb82:	3b01      	subs	r3, #1
 801bb84:	4411      	add	r1, r2
 801bb86:	3502      	adds	r5, #2
 801bb88:	e7ee      	b.n	801bb68 <_ZN8touchgfx8LCD16bpp51TextureMapper_ARGB8888_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x52>
 801bb8a:	d017      	beq.n	801bbbc <_ZN8touchgfx8LCD16bpp51TextureMapper_ARGB8888_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0xa6>
 801bb8c:	9c13      	ldr	r4, [sp, #76]	; 0x4c
 801bb8e:	1e5a      	subs	r2, r3, #1
 801bb90:	fb04 0402 	mla	r4, r4, r2, r0
 801bb94:	1424      	asrs	r4, r4, #16
 801bb96:	d409      	bmi.n	801bbac <_ZN8touchgfx8LCD16bpp51TextureMapper_ARGB8888_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x96>
 801bb98:	42bc      	cmp	r4, r7
 801bb9a:	da07      	bge.n	801bbac <_ZN8touchgfx8LCD16bpp51TextureMapper_ARGB8888_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x96>
 801bb9c:	9c14      	ldr	r4, [sp, #80]	; 0x50
 801bb9e:	fb04 1202 	mla	r2, r4, r2, r1
 801bba2:	1412      	asrs	r2, r2, #16
 801bba4:	d402      	bmi.n	801bbac <_ZN8touchgfx8LCD16bpp51TextureMapper_ARGB8888_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x96>
 801bba6:	42b2      	cmp	r2, r6
 801bba8:	f2c0 80bf 	blt.w	801bd2a <_ZN8touchgfx8LCD16bpp51TextureMapper_ARGB8888_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x214>
 801bbac:	2700      	movs	r7, #0
 801bbae:	19da      	adds	r2, r3, r7
 801bbb0:	2a00      	cmp	r2, #0
 801bbb2:	dc3e      	bgt.n	801bc32 <_ZN8touchgfx8LCD16bpp51TextureMapper_ARGB8888_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x11c>
 801bbb4:	ea23 73e3 	bic.w	r3, r3, r3, asr #31
 801bbb8:	eb05 0543 	add.w	r5, r5, r3, lsl #1
 801bbbc:	f1bb 0f00 	cmp.w	fp, #0
 801bbc0:	f340 8121 	ble.w	801be06 <_ZN8touchgfx8LCD16bpp51TextureMapper_ARGB8888_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x2f0>
 801bbc4:	ee30 0a04 	vadd.f32	s0, s0, s8
 801bbc8:	ee70 0aa4 	vadd.f32	s1, s1, s9
 801bbcc:	eec6 7a80 	vdiv.f32	s15, s13, s0
 801bbd0:	9b10      	ldr	r3, [sp, #64]	; 0x40
 801bbd2:	f1bb 0b01 	subs.w	fp, fp, #1
 801bbd6:	ee31 1a05 	vadd.f32	s2, s2, s10
 801bbda:	ee20 7aa7 	vmul.f32	s14, s1, s15
 801bbde:	eeb0 6a62 	vmov.f32	s12, s5
 801bbe2:	ee61 7a27 	vmul.f32	s15, s2, s15
 801bbe6:	eebe 6ac8 	vcvt.s32.f32	s12, s12, #16
 801bbea:	ee77 2a62 	vsub.f32	s5, s14, s5
 801bbee:	ed8d 6a11 	vstr	s12, [sp, #68]	; 0x44
 801bbf2:	eefe 2ac8 	vcvt.s32.f32	s5, s5, #16
 801bbf6:	eeb0 6a43 	vmov.f32	s12, s6
 801bbfa:	ee37 3ac3 	vsub.f32	s6, s15, s6
 801bbfe:	ee12 2a90 	vmov	r2, s5
 801bc02:	eebe 3ac8 	vcvt.s32.f32	s6, s6, #16
 801bc06:	fb92 f3f3 	sdiv	r3, r2, r3
 801bc0a:	ee13 2a10 	vmov	r2, s6
 801bc0e:	eebe 6ac8 	vcvt.s32.f32	s12, s12, #16
 801bc12:	9313      	str	r3, [sp, #76]	; 0x4c
 801bc14:	9b10      	ldr	r3, [sp, #64]	; 0x40
 801bc16:	fb92 f3f3 	sdiv	r3, r2, r3
 801bc1a:	9a03      	ldr	r2, [sp, #12]
 801bc1c:	9314      	str	r3, [sp, #80]	; 0x50
 801bc1e:	ed8d 6a12 	vstr	s12, [sp, #72]	; 0x48
 801bc22:	9b10      	ldr	r3, [sp, #64]	; 0x40
 801bc24:	eeb0 3a67 	vmov.f32	s6, s15
 801bc28:	bf08      	it	eq
 801bc2a:	4613      	moveq	r3, r2
 801bc2c:	eef0 2a47 	vmov.f32	s5, s14
 801bc30:	e789      	b.n	801bb46 <_ZN8touchgfx8LCD16bpp51TextureMapper_ARGB8888_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x30>
 801bc32:	1406      	asrs	r6, r0, #16
 801bc34:	d42d      	bmi.n	801bc92 <_ZN8touchgfx8LCD16bpp51TextureMapper_ARGB8888_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x17c>
 801bc36:	f8d9 4008 	ldr.w	r4, [r9, #8]
 801bc3a:	42b4      	cmp	r4, r6
 801bc3c:	dd29      	ble.n	801bc92 <_ZN8touchgfx8LCD16bpp51TextureMapper_ARGB8888_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x17c>
 801bc3e:	ea5f 4c21 	movs.w	ip, r1, asr #16
 801bc42:	d426      	bmi.n	801bc92 <_ZN8touchgfx8LCD16bpp51TextureMapper_ARGB8888_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x17c>
 801bc44:	f8d9 200c 	ldr.w	r2, [r9, #12]
 801bc48:	4562      	cmp	r2, ip
 801bc4a:	dd22      	ble.n	801bc92 <_ZN8touchgfx8LCD16bpp51TextureMapper_ARGB8888_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x17c>
 801bc4c:	b224      	sxth	r4, r4
 801bc4e:	9a01      	ldr	r2, [sp, #4]
 801bc50:	fb0c 6404 	mla	r4, ip, r4, r6
 801bc54:	f852 4024 	ldr.w	r4, [r2, r4, lsl #2]
 801bc58:	0e22      	lsrs	r2, r4, #24
 801bc5a:	d01a      	beq.n	801bc92 <_ZN8touchgfx8LCD16bpp51TextureMapper_ARGB8888_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x17c>
 801bc5c:	9e04      	ldr	r6, [sp, #16]
 801bc5e:	4372      	muls	r2, r6
 801bc60:	1c56      	adds	r6, r2, #1
 801bc62:	eb06 2222 	add.w	r2, r6, r2, asr #8
 801bc66:	1212      	asrs	r2, r2, #8
 801bc68:	0a26      	lsrs	r6, r4, #8
 801bc6a:	2aff      	cmp	r2, #255	; 0xff
 801bc6c:	9605      	str	r6, [sp, #20]
 801bc6e:	d116      	bne.n	801bc9e <_ZN8touchgfx8LCD16bpp51TextureMapper_ARGB8888_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x188>
 801bc70:	f06f 0201 	mvn.w	r2, #1
 801bc74:	fb02 fc07 	mul.w	ip, r2, r7
 801bc78:	f426 66ff 	bic.w	r6, r6, #2040	; 0x7f8
 801bc7c:	0962      	lsrs	r2, r4, #5
 801bc7e:	f402 62fc 	and.w	r2, r2, #2016	; 0x7e0
 801bc82:	f026 0607 	bic.w	r6, r6, #7
 801bc86:	4316      	orrs	r6, r2
 801bc88:	f3c4 04c4 	ubfx	r4, r4, #3, #5
 801bc8c:	4326      	orrs	r6, r4
 801bc8e:	f825 600c 	strh.w	r6, [r5, ip]
 801bc92:	9a13      	ldr	r2, [sp, #76]	; 0x4c
 801bc94:	4410      	add	r0, r2
 801bc96:	9a14      	ldr	r2, [sp, #80]	; 0x50
 801bc98:	3f01      	subs	r7, #1
 801bc9a:	4411      	add	r1, r2
 801bc9c:	e787      	b.n	801bbae <_ZN8touchgfx8LCD16bpp51TextureMapper_ARGB8888_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x98>
 801bc9e:	f06f 0601 	mvn.w	r6, #1
 801bca2:	437e      	muls	r6, r7
 801bca4:	fa1f fa82 	uxth.w	sl, r2
 801bca8:	f835 8006 	ldrh.w	r8, [r5, r6]
 801bcac:	9602      	str	r6, [sp, #8]
 801bcae:	ea4f 2e28 	mov.w	lr, r8, asr #8
 801bcb2:	f3c4 4c07 	ubfx	ip, r4, #16, #8
 801bcb6:	43d2      	mvns	r2, r2
 801bcb8:	b2d2      	uxtb	r2, r2
 801bcba:	fb1c fc0a 	smulbb	ip, ip, sl
 801bcbe:	f00e 0ef8 	and.w	lr, lr, #248	; 0xf8
 801bcc2:	fb0e ce02 	mla	lr, lr, r2, ip
 801bcc6:	b2e4      	uxtb	r4, r4
 801bcc8:	ea4f 0ce8 	mov.w	ip, r8, asr #3
 801bccc:	ea4f 08c8 	mov.w	r8, r8, lsl #3
 801bcd0:	f89d 6014 	ldrb.w	r6, [sp, #20]
 801bcd4:	fa5f f888 	uxtb.w	r8, r8
 801bcd8:	fb14 f40a 	smulbb	r4, r4, sl
 801bcdc:	fb08 4402 	mla	r4, r8, r2, r4
 801bce0:	fa1f fe8e 	uxth.w	lr, lr
 801bce4:	fb16 f60a 	smulbb	r6, r6, sl
 801bce8:	b2a4      	uxth	r4, r4
 801bcea:	f00c 0cfc 	and.w	ip, ip, #252	; 0xfc
 801bcee:	fb0c 6c02 	mla	ip, ip, r2, r6
 801bcf2:	f10e 0201 	add.w	r2, lr, #1
 801bcf6:	1c66      	adds	r6, r4, #1
 801bcf8:	eb02 2e1e 	add.w	lr, r2, lr, lsr #8
 801bcfc:	eb06 2614 	add.w	r6, r6, r4, lsr #8
 801bd00:	fa1f fc8c 	uxth.w	ip, ip
 801bd04:	f3c6 26c4 	ubfx	r6, r6, #11, #5
 801bd08:	f40e 4e78 	and.w	lr, lr, #63488	; 0xf800
 801bd0c:	ea46 0e0e 	orr.w	lr, r6, lr
 801bd10:	f10c 0601 	add.w	r6, ip, #1
 801bd14:	eb06 261c 	add.w	r6, r6, ip, lsr #8
 801bd18:	0976      	lsrs	r6, r6, #5
 801bd1a:	f406 66fc 	and.w	r6, r6, #2016	; 0x7e0
 801bd1e:	9a02      	ldr	r2, [sp, #8]
 801bd20:	ea4e 0e06 	orr.w	lr, lr, r6
 801bd24:	f825 e002 	strh.w	lr, [r5, r2]
 801bd28:	e7b3      	b.n	801bc92 <_ZN8touchgfx8LCD16bpp51TextureMapper_ARGB8888_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x17c>
 801bd2a:	f04f 0800 	mov.w	r8, #0
 801bd2e:	eba3 0208 	sub.w	r2, r3, r8
 801bd32:	2a00      	cmp	r2, #0
 801bd34:	f77f af3e 	ble.w	801bbb4 <_ZN8touchgfx8LCD16bpp51TextureMapper_ARGB8888_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x9e>
 801bd38:	f9b9 6008 	ldrsh.w	r6, [r9, #8]
 801bd3c:	1404      	asrs	r4, r0, #16
 801bd3e:	140a      	asrs	r2, r1, #16
 801bd40:	fb06 4202 	mla	r2, r6, r2, r4
 801bd44:	9c01      	ldr	r4, [sp, #4]
 801bd46:	f854 4022 	ldr.w	r4, [r4, r2, lsl #2]
 801bd4a:	0e22      	lsrs	r2, r4, #24
 801bd4c:	d016      	beq.n	801bd7c <_ZN8touchgfx8LCD16bpp51TextureMapper_ARGB8888_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x266>
 801bd4e:	9e04      	ldr	r6, [sp, #16]
 801bd50:	4372      	muls	r2, r6
 801bd52:	1c56      	adds	r6, r2, #1
 801bd54:	eb06 2222 	add.w	r2, r6, r2, asr #8
 801bd58:	1212      	asrs	r2, r2, #8
 801bd5a:	2aff      	cmp	r2, #255	; 0xff
 801bd5c:	ea4f 2614 	mov.w	r6, r4, lsr #8
 801bd60:	d113      	bne.n	801bd8a <_ZN8touchgfx8LCD16bpp51TextureMapper_ARGB8888_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x274>
 801bd62:	0962      	lsrs	r2, r4, #5
 801bd64:	f426 66ff 	bic.w	r6, r6, #2040	; 0x7f8
 801bd68:	f402 62fc 	and.w	r2, r2, #2016	; 0x7e0
 801bd6c:	f026 0607 	bic.w	r6, r6, #7
 801bd70:	4316      	orrs	r6, r2
 801bd72:	f3c4 04c4 	ubfx	r4, r4, #3, #5
 801bd76:	4326      	orrs	r6, r4
 801bd78:	f825 6018 	strh.w	r6, [r5, r8, lsl #1]
 801bd7c:	9a13      	ldr	r2, [sp, #76]	; 0x4c
 801bd7e:	4410      	add	r0, r2
 801bd80:	9a14      	ldr	r2, [sp, #80]	; 0x50
 801bd82:	f108 0801 	add.w	r8, r8, #1
 801bd86:	4411      	add	r1, r2
 801bd88:	e7d1      	b.n	801bd2e <_ZN8touchgfx8LCD16bpp51TextureMapper_ARGB8888_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x218>
 801bd8a:	f835 e018 	ldrh.w	lr, [r5, r8, lsl #1]
 801bd8e:	fa1f fa82 	uxth.w	sl, r2
 801bd92:	ea4f 2c2e 	mov.w	ip, lr, asr #8
 801bd96:	f3c4 4707 	ubfx	r7, r4, #16, #8
 801bd9a:	43d2      	mvns	r2, r2
 801bd9c:	b2d2      	uxtb	r2, r2
 801bd9e:	fb17 f70a 	smulbb	r7, r7, sl
 801bda2:	f00c 0cf8 	and.w	ip, ip, #248	; 0xf8
 801bda6:	fb0c 7c02 	mla	ip, ip, r2, r7
 801bdaa:	b2e4      	uxtb	r4, r4
 801bdac:	ea4f 07ee 	mov.w	r7, lr, asr #3
 801bdb0:	ea4f 0ece 	mov.w	lr, lr, lsl #3
 801bdb4:	fa5f fe8e 	uxtb.w	lr, lr
 801bdb8:	fb14 f40a 	smulbb	r4, r4, sl
 801bdbc:	fb0e 4402 	mla	r4, lr, r2, r4
 801bdc0:	b2f6      	uxtb	r6, r6
 801bdc2:	fa1f fc8c 	uxth.w	ip, ip
 801bdc6:	fb16 f60a 	smulbb	r6, r6, sl
 801bdca:	b2a4      	uxth	r4, r4
 801bdcc:	f007 07fc 	and.w	r7, r7, #252	; 0xfc
 801bdd0:	fb07 6702 	mla	r7, r7, r2, r6
 801bdd4:	f10c 0201 	add.w	r2, ip, #1
 801bdd8:	1c66      	adds	r6, r4, #1
 801bdda:	eb02 2c1c 	add.w	ip, r2, ip, lsr #8
 801bdde:	eb06 2614 	add.w	r6, r6, r4, lsr #8
 801bde2:	b2bf      	uxth	r7, r7
 801bde4:	f3c6 26c4 	ubfx	r6, r6, #11, #5
 801bde8:	f40c 4c78 	and.w	ip, ip, #63488	; 0xf800
 801bdec:	ea46 0c0c 	orr.w	ip, r6, ip
 801bdf0:	1c7e      	adds	r6, r7, #1
 801bdf2:	eb06 2617 	add.w	r6, r6, r7, lsr #8
 801bdf6:	0976      	lsrs	r6, r6, #5
 801bdf8:	f406 66fc 	and.w	r6, r6, #2016	; 0x7e0
 801bdfc:	ea4c 0c06 	orr.w	ip, ip, r6
 801be00:	f825 c018 	strh.w	ip, [r5, r8, lsl #1]
 801be04:	e7ba      	b.n	801bd7c <_ZN8touchgfx8LCD16bpp51TextureMapper_ARGB8888_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x266>
 801be06:	b007      	add	sp, #28
 801be08:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}

0801be0c <_ZN8touchgfx8LCD16bpp53TextureMapper_ARGB8888_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff>:
 801be0c:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 801be10:	b085      	sub	sp, #20
 801be12:	468b      	mov	fp, r1
 801be14:	9813      	ldr	r0, [sp, #76]	; 0x4c
 801be16:	9203      	str	r2, [sp, #12]
 801be18:	e9dd 2414 	ldrd	r2, r4, [sp, #80]	; 0x50
 801be1c:	6841      	ldr	r1, [r0, #4]
 801be1e:	f8dd 8058 	ldr.w	r8, [sp, #88]	; 0x58
 801be22:	fb01 2404 	mla	r4, r1, r4, r2
 801be26:	6802      	ldr	r2, [r0, #0]
 801be28:	eb02 0444 	add.w	r4, r2, r4, lsl #1
 801be2c:	f8d8 2000 	ldr.w	r2, [r8]
 801be30:	9201      	str	r2, [sp, #4]
 801be32:	eef7 6a00 	vmov.f32	s13, #112	; 0x3f800000  1.0
 801be36:	f1bb 0f00 	cmp.w	fp, #0
 801be3a:	dc03      	bgt.n	801be44 <_ZN8touchgfx8LCD16bpp53TextureMapper_ARGB8888_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x38>
 801be3c:	9a03      	ldr	r2, [sp, #12]
 801be3e:	2a00      	cmp	r2, #0
 801be40:	f340 814f 	ble.w	801c0e2 <_ZN8touchgfx8LCD16bpp53TextureMapper_ARGB8888_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x2d6>
 801be44:	9a0f      	ldr	r2, [sp, #60]	; 0x3c
 801be46:	f9b8 7008 	ldrsh.w	r7, [r8, #8]
 801be4a:	f9b8 600c 	ldrsh.w	r6, [r8, #12]
 801be4e:	f502 4100 	add.w	r1, r2, #32768	; 0x8000
 801be52:	9a10      	ldr	r2, [sp, #64]	; 0x40
 801be54:	f502 4200 	add.w	r2, r2, #32768	; 0x8000
 801be58:	2b00      	cmp	r3, #0
 801be5a:	dd0e      	ble.n	801be7a <_ZN8touchgfx8LCD16bpp53TextureMapper_ARGB8888_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x6e>
 801be5c:	1408      	asrs	r0, r1, #16
 801be5e:	d405      	bmi.n	801be6c <_ZN8touchgfx8LCD16bpp53TextureMapper_ARGB8888_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x60>
 801be60:	42b8      	cmp	r0, r7
 801be62:	da03      	bge.n	801be6c <_ZN8touchgfx8LCD16bpp53TextureMapper_ARGB8888_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x60>
 801be64:	1410      	asrs	r0, r2, #16
 801be66:	d401      	bmi.n	801be6c <_ZN8touchgfx8LCD16bpp53TextureMapper_ARGB8888_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x60>
 801be68:	42b0      	cmp	r0, r6
 801be6a:	db07      	blt.n	801be7c <_ZN8touchgfx8LCD16bpp53TextureMapper_ARGB8888_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x70>
 801be6c:	9811      	ldr	r0, [sp, #68]	; 0x44
 801be6e:	4401      	add	r1, r0
 801be70:	9812      	ldr	r0, [sp, #72]	; 0x48
 801be72:	3b01      	subs	r3, #1
 801be74:	4402      	add	r2, r0
 801be76:	3402      	adds	r4, #2
 801be78:	e7ee      	b.n	801be58 <_ZN8touchgfx8LCD16bpp53TextureMapper_ARGB8888_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x4c>
 801be7a:	d017      	beq.n	801beac <_ZN8touchgfx8LCD16bpp53TextureMapper_ARGB8888_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0xa0>
 801be7c:	9d11      	ldr	r5, [sp, #68]	; 0x44
 801be7e:	1e58      	subs	r0, r3, #1
 801be80:	fb05 1500 	mla	r5, r5, r0, r1
 801be84:	142d      	asrs	r5, r5, #16
 801be86:	d409      	bmi.n	801be9c <_ZN8touchgfx8LCD16bpp53TextureMapper_ARGB8888_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x90>
 801be88:	42bd      	cmp	r5, r7
 801be8a:	da07      	bge.n	801be9c <_ZN8touchgfx8LCD16bpp53TextureMapper_ARGB8888_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x90>
 801be8c:	9d12      	ldr	r5, [sp, #72]	; 0x48
 801be8e:	fb05 2000 	mla	r0, r5, r0, r2
 801be92:	1400      	asrs	r0, r0, #16
 801be94:	d402      	bmi.n	801be9c <_ZN8touchgfx8LCD16bpp53TextureMapper_ARGB8888_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x90>
 801be96:	42b0      	cmp	r0, r6
 801be98:	f2c0 80ba 	blt.w	801c010 <_ZN8touchgfx8LCD16bpp53TextureMapper_ARGB8888_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x204>
 801be9c:	2600      	movs	r6, #0
 801be9e:	1998      	adds	r0, r3, r6
 801bea0:	2800      	cmp	r0, #0
 801bea2:	dc3e      	bgt.n	801bf22 <_ZN8touchgfx8LCD16bpp53TextureMapper_ARGB8888_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x116>
 801bea4:	ea23 73e3 	bic.w	r3, r3, r3, asr #31
 801bea8:	eb04 0443 	add.w	r4, r4, r3, lsl #1
 801beac:	f1bb 0f00 	cmp.w	fp, #0
 801beb0:	f340 8117 	ble.w	801c0e2 <_ZN8touchgfx8LCD16bpp53TextureMapper_ARGB8888_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x2d6>
 801beb4:	ee30 0a04 	vadd.f32	s0, s0, s8
 801beb8:	ee70 0aa4 	vadd.f32	s1, s1, s9
 801bebc:	eec6 7a80 	vdiv.f32	s15, s13, s0
 801bec0:	9b0e      	ldr	r3, [sp, #56]	; 0x38
 801bec2:	f1bb 0b01 	subs.w	fp, fp, #1
 801bec6:	ee31 1a05 	vadd.f32	s2, s2, s10
 801beca:	ee20 7aa7 	vmul.f32	s14, s1, s15
 801bece:	eeb0 6a62 	vmov.f32	s12, s5
 801bed2:	ee61 7a27 	vmul.f32	s15, s2, s15
 801bed6:	eebe 6ac8 	vcvt.s32.f32	s12, s12, #16
 801beda:	ee77 2a62 	vsub.f32	s5, s14, s5
 801bede:	ed8d 6a0f 	vstr	s12, [sp, #60]	; 0x3c
 801bee2:	eefe 2ac8 	vcvt.s32.f32	s5, s5, #16
 801bee6:	eeb0 6a43 	vmov.f32	s12, s6
 801beea:	ee37 3ac3 	vsub.f32	s6, s15, s6
 801beee:	ee12 2a90 	vmov	r2, s5
 801bef2:	eebe 3ac8 	vcvt.s32.f32	s6, s6, #16
 801bef6:	fb92 f3f3 	sdiv	r3, r2, r3
 801befa:	ee13 2a10 	vmov	r2, s6
 801befe:	eebe 6ac8 	vcvt.s32.f32	s12, s12, #16
 801bf02:	9311      	str	r3, [sp, #68]	; 0x44
 801bf04:	9b0e      	ldr	r3, [sp, #56]	; 0x38
 801bf06:	fb92 f3f3 	sdiv	r3, r2, r3
 801bf0a:	9a03      	ldr	r2, [sp, #12]
 801bf0c:	9312      	str	r3, [sp, #72]	; 0x48
 801bf0e:	ed8d 6a10 	vstr	s12, [sp, #64]	; 0x40
 801bf12:	9b0e      	ldr	r3, [sp, #56]	; 0x38
 801bf14:	eeb0 3a67 	vmov.f32	s6, s15
 801bf18:	bf08      	it	eq
 801bf1a:	4613      	moveq	r3, r2
 801bf1c:	eef0 2a47 	vmov.f32	s5, s14
 801bf20:	e789      	b.n	801be36 <_ZN8touchgfx8LCD16bpp53TextureMapper_ARGB8888_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x2a>
 801bf22:	140f      	asrs	r7, r1, #16
 801bf24:	d424      	bmi.n	801bf70 <_ZN8touchgfx8LCD16bpp53TextureMapper_ARGB8888_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x164>
 801bf26:	f8d8 5008 	ldr.w	r5, [r8, #8]
 801bf2a:	42bd      	cmp	r5, r7
 801bf2c:	dd20      	ble.n	801bf70 <_ZN8touchgfx8LCD16bpp53TextureMapper_ARGB8888_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x164>
 801bf2e:	ea5f 4c22 	movs.w	ip, r2, asr #16
 801bf32:	d41d      	bmi.n	801bf70 <_ZN8touchgfx8LCD16bpp53TextureMapper_ARGB8888_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x164>
 801bf34:	f8d8 000c 	ldr.w	r0, [r8, #12]
 801bf38:	4560      	cmp	r0, ip
 801bf3a:	dd19      	ble.n	801bf70 <_ZN8touchgfx8LCD16bpp53TextureMapper_ARGB8888_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x164>
 801bf3c:	b22d      	sxth	r5, r5
 801bf3e:	fb0c 7505 	mla	r5, ip, r5, r7
 801bf42:	9801      	ldr	r0, [sp, #4]
 801bf44:	f850 0025 	ldr.w	r0, [r0, r5, lsl #2]
 801bf48:	0e07      	lsrs	r7, r0, #24
 801bf4a:	2fff      	cmp	r7, #255	; 0xff
 801bf4c:	d116      	bne.n	801bf7c <_ZN8touchgfx8LCD16bpp53TextureMapper_ARGB8888_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x170>
 801bf4e:	f06f 0501 	mvn.w	r5, #1
 801bf52:	fb05 f706 	mul.w	r7, r5, r6
 801bf56:	f2a5 75fe 	subw	r5, r5, #2046	; 0x7fe
 801bf5a:	ea05 2c10 	and.w	ip, r5, r0, lsr #8
 801bf5e:	0945      	lsrs	r5, r0, #5
 801bf60:	f405 65fc 	and.w	r5, r5, #2016	; 0x7e0
 801bf64:	ea4c 0505 	orr.w	r5, ip, r5
 801bf68:	f3c0 00c4 	ubfx	r0, r0, #3, #5
 801bf6c:	4305      	orrs	r5, r0
 801bf6e:	53e5      	strh	r5, [r4, r7]
 801bf70:	9811      	ldr	r0, [sp, #68]	; 0x44
 801bf72:	4401      	add	r1, r0
 801bf74:	9812      	ldr	r0, [sp, #72]	; 0x48
 801bf76:	3e01      	subs	r6, #1
 801bf78:	4402      	add	r2, r0
 801bf7a:	e790      	b.n	801be9e <_ZN8touchgfx8LCD16bpp53TextureMapper_ARGB8888_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x92>
 801bf7c:	b2fd      	uxtb	r5, r7
 801bf7e:	2f00      	cmp	r7, #0
 801bf80:	d0f6      	beq.n	801bf70 <_ZN8touchgfx8LCD16bpp53TextureMapper_ARGB8888_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x164>
 801bf82:	f06f 0701 	mvn.w	r7, #1
 801bf86:	4377      	muls	r7, r6
 801bf88:	fa1f f985 	uxth.w	r9, r5
 801bf8c:	f834 e007 	ldrh.w	lr, [r4, r7]
 801bf90:	9702      	str	r7, [sp, #8]
 801bf92:	ea4f 2c2e 	mov.w	ip, lr, asr #8
 801bf96:	f3c0 4707 	ubfx	r7, r0, #16, #8
 801bf9a:	43ed      	mvns	r5, r5
 801bf9c:	b2ed      	uxtb	r5, r5
 801bf9e:	fb17 f709 	smulbb	r7, r7, r9
 801bfa2:	f00c 0cf8 	and.w	ip, ip, #248	; 0xf8
 801bfa6:	fb0c 7c05 	mla	ip, ip, r5, r7
 801bfaa:	f3c0 2a07 	ubfx	sl, r0, #8, #8
 801bfae:	ea4f 07ee 	mov.w	r7, lr, asr #3
 801bfb2:	b2c0      	uxtb	r0, r0
 801bfb4:	ea4f 0ece 	mov.w	lr, lr, lsl #3
 801bfb8:	fa5f fe8e 	uxtb.w	lr, lr
 801bfbc:	fb10 f009 	smulbb	r0, r0, r9
 801bfc0:	fb0e 0005 	mla	r0, lr, r5, r0
 801bfc4:	b280      	uxth	r0, r0
 801bfc6:	fa1f fc8c 	uxth.w	ip, ip
 801bfca:	fb1a fa09 	smulbb	sl, sl, r9
 801bfce:	f007 07fc 	and.w	r7, r7, #252	; 0xfc
 801bfd2:	fb07 a705 	mla	r7, r7, r5, sl
 801bfd6:	f100 0a01 	add.w	sl, r0, #1
 801bfda:	f10c 0501 	add.w	r5, ip, #1
 801bfde:	eb0a 2a10 	add.w	sl, sl, r0, lsr #8
 801bfe2:	eb05 2c1c 	add.w	ip, r5, ip, lsr #8
 801bfe6:	b2bf      	uxth	r7, r7
 801bfe8:	f3ca 2ac4 	ubfx	sl, sl, #11, #5
 801bfec:	f40c 4c78 	and.w	ip, ip, #63488	; 0xf800
 801bff0:	ea4a 0c0c 	orr.w	ip, sl, ip
 801bff4:	f107 0a01 	add.w	sl, r7, #1
 801bff8:	eb0a 2a17 	add.w	sl, sl, r7, lsr #8
 801bffc:	ea4f 1a5a 	mov.w	sl, sl, lsr #5
 801c000:	f40a 6afc 	and.w	sl, sl, #2016	; 0x7e0
 801c004:	9802      	ldr	r0, [sp, #8]
 801c006:	ea4c 0c0a 	orr.w	ip, ip, sl
 801c00a:	f824 c000 	strh.w	ip, [r4, r0]
 801c00e:	e7af      	b.n	801bf70 <_ZN8touchgfx8LCD16bpp53TextureMapper_ARGB8888_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x164>
 801c010:	f04f 0e00 	mov.w	lr, #0
 801c014:	eba3 000e 	sub.w	r0, r3, lr
 801c018:	2800      	cmp	r0, #0
 801c01a:	f77f af43 	ble.w	801bea4 <_ZN8touchgfx8LCD16bpp53TextureMapper_ARGB8888_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x98>
 801c01e:	f9b8 6008 	ldrsh.w	r6, [r8, #8]
 801c022:	140d      	asrs	r5, r1, #16
 801c024:	1410      	asrs	r0, r2, #16
 801c026:	fb06 5000 	mla	r0, r6, r0, r5
 801c02a:	9d01      	ldr	r5, [sp, #4]
 801c02c:	f855 5020 	ldr.w	r5, [r5, r0, lsl #2]
 801c030:	0e2e      	lsrs	r6, r5, #24
 801c032:	2eff      	cmp	r6, #255	; 0xff
 801c034:	d112      	bne.n	801c05c <_ZN8touchgfx8LCD16bpp53TextureMapper_ARGB8888_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x250>
 801c036:	482c      	ldr	r0, [pc, #176]	; (801c0e8 <_ZN8touchgfx8LCD16bpp53TextureMapper_ARGB8888_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x2dc>)
 801c038:	ea00 2615 	and.w	r6, r0, r5, lsr #8
 801c03c:	0968      	lsrs	r0, r5, #5
 801c03e:	f400 60fc 	and.w	r0, r0, #2016	; 0x7e0
 801c042:	4330      	orrs	r0, r6
 801c044:	f3c5 05c4 	ubfx	r5, r5, #3, #5
 801c048:	4328      	orrs	r0, r5
 801c04a:	f824 001e 	strh.w	r0, [r4, lr, lsl #1]
 801c04e:	9811      	ldr	r0, [sp, #68]	; 0x44
 801c050:	4401      	add	r1, r0
 801c052:	9812      	ldr	r0, [sp, #72]	; 0x48
 801c054:	f10e 0e01 	add.w	lr, lr, #1
 801c058:	4402      	add	r2, r0
 801c05a:	e7db      	b.n	801c014 <_ZN8touchgfx8LCD16bpp53TextureMapper_ARGB8888_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x208>
 801c05c:	b2f0      	uxtb	r0, r6
 801c05e:	2e00      	cmp	r6, #0
 801c060:	d0f5      	beq.n	801c04e <_ZN8touchgfx8LCD16bpp53TextureMapper_ARGB8888_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x242>
 801c062:	f834 c01e 	ldrh.w	ip, [r4, lr, lsl #1]
 801c066:	fa1f f980 	uxth.w	r9, r0
 801c06a:	ea4f 272c 	mov.w	r7, ip, asr #8
 801c06e:	f3c5 4607 	ubfx	r6, r5, #16, #8
 801c072:	43c0      	mvns	r0, r0
 801c074:	b2c0      	uxtb	r0, r0
 801c076:	fb16 f609 	smulbb	r6, r6, r9
 801c07a:	f007 07f8 	and.w	r7, r7, #248	; 0xf8
 801c07e:	fb07 6700 	mla	r7, r7, r0, r6
 801c082:	f3c5 2a07 	ubfx	sl, r5, #8, #8
 801c086:	ea4f 06ec 	mov.w	r6, ip, asr #3
 801c08a:	b2ed      	uxtb	r5, r5
 801c08c:	ea4f 0ccc 	mov.w	ip, ip, lsl #3
 801c090:	fa5f fc8c 	uxtb.w	ip, ip
 801c094:	fb15 f509 	smulbb	r5, r5, r9
 801c098:	fb0c 5500 	mla	r5, ip, r0, r5
 801c09c:	b2bf      	uxth	r7, r7
 801c09e:	fb1a fa09 	smulbb	sl, sl, r9
 801c0a2:	b2ad      	uxth	r5, r5
 801c0a4:	f006 06fc 	and.w	r6, r6, #252	; 0xfc
 801c0a8:	fb06 a600 	mla	r6, r6, r0, sl
 801c0ac:	1c78      	adds	r0, r7, #1
 801c0ae:	f105 0a01 	add.w	sl, r5, #1
 801c0b2:	eb00 2717 	add.w	r7, r0, r7, lsr #8
 801c0b6:	eb0a 2a15 	add.w	sl, sl, r5, lsr #8
 801c0ba:	b2b6      	uxth	r6, r6
 801c0bc:	f3ca 2ac4 	ubfx	sl, sl, #11, #5
 801c0c0:	f407 4778 	and.w	r7, r7, #63488	; 0xf800
 801c0c4:	ea4a 0707 	orr.w	r7, sl, r7
 801c0c8:	f106 0a01 	add.w	sl, r6, #1
 801c0cc:	eb0a 2a16 	add.w	sl, sl, r6, lsr #8
 801c0d0:	ea4f 1a5a 	mov.w	sl, sl, lsr #5
 801c0d4:	f40a 6afc 	and.w	sl, sl, #2016	; 0x7e0
 801c0d8:	ea47 070a 	orr.w	r7, r7, sl
 801c0dc:	f824 701e 	strh.w	r7, [r4, lr, lsl #1]
 801c0e0:	e7b5      	b.n	801c04e <_ZN8touchgfx8LCD16bpp53TextureMapper_ARGB8888_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x242>
 801c0e2:	b005      	add	sp, #20
 801c0e4:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
 801c0e8:	fffff800 	.word	0xfffff800

0801c0ec <_ZN8touchgfx8LCD16bpp35TextureMapper_A4_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff>:
 801c0ec:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 801c0f0:	b087      	sub	sp, #28
 801c0f2:	468b      	mov	fp, r1
 801c0f4:	9815      	ldr	r0, [sp, #84]	; 0x54
 801c0f6:	9203      	str	r2, [sp, #12]
 801c0f8:	f89d 2064 	ldrb.w	r2, [sp, #100]	; 0x64
 801c0fc:	9204      	str	r2, [sp, #16]
 801c0fe:	e9dd 2416 	ldrd	r2, r4, [sp, #88]	; 0x58
 801c102:	6841      	ldr	r1, [r0, #4]
 801c104:	f8dd 9060 	ldr.w	r9, [sp, #96]	; 0x60
 801c108:	fb01 2404 	mla	r4, r1, r4, r2
 801c10c:	6802      	ldr	r2, [r0, #0]
 801c10e:	eb02 0444 	add.w	r4, r2, r4, lsl #1
 801c112:	f8d9 2008 	ldr.w	r2, [r9, #8]
 801c116:	3201      	adds	r2, #1
 801c118:	f022 0201 	bic.w	r2, r2, #1
 801c11c:	9200      	str	r2, [sp, #0]
 801c11e:	f8d9 2000 	ldr.w	r2, [r9]
 801c122:	9201      	str	r2, [sp, #4]
 801c124:	eef7 6a00 	vmov.f32	s13, #112	; 0x3f800000  1.0
 801c128:	f1bb 0f00 	cmp.w	fp, #0
 801c12c:	dc03      	bgt.n	801c136 <_ZN8touchgfx8LCD16bpp35TextureMapper_A4_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x4a>
 801c12e:	9a03      	ldr	r2, [sp, #12]
 801c130:	2a00      	cmp	r2, #0
 801c132:	f340 8169 	ble.w	801c408 <_ZN8touchgfx8LCD16bpp35TextureMapper_A4_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x31c>
 801c136:	9a11      	ldr	r2, [sp, #68]	; 0x44
 801c138:	f9b9 7008 	ldrsh.w	r7, [r9, #8]
 801c13c:	f9b9 600c 	ldrsh.w	r6, [r9, #12]
 801c140:	f502 4000 	add.w	r0, r2, #32768	; 0x8000
 801c144:	9a12      	ldr	r2, [sp, #72]	; 0x48
 801c146:	f502 4100 	add.w	r1, r2, #32768	; 0x8000
 801c14a:	2b00      	cmp	r3, #0
 801c14c:	dd0e      	ble.n	801c16c <_ZN8touchgfx8LCD16bpp35TextureMapper_A4_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x80>
 801c14e:	1402      	asrs	r2, r0, #16
 801c150:	d405      	bmi.n	801c15e <_ZN8touchgfx8LCD16bpp35TextureMapper_A4_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x72>
 801c152:	42ba      	cmp	r2, r7
 801c154:	da03      	bge.n	801c15e <_ZN8touchgfx8LCD16bpp35TextureMapper_A4_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x72>
 801c156:	140a      	asrs	r2, r1, #16
 801c158:	d401      	bmi.n	801c15e <_ZN8touchgfx8LCD16bpp35TextureMapper_A4_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x72>
 801c15a:	42b2      	cmp	r2, r6
 801c15c:	db07      	blt.n	801c16e <_ZN8touchgfx8LCD16bpp35TextureMapper_A4_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x82>
 801c15e:	9a13      	ldr	r2, [sp, #76]	; 0x4c
 801c160:	4410      	add	r0, r2
 801c162:	9a14      	ldr	r2, [sp, #80]	; 0x50
 801c164:	3b01      	subs	r3, #1
 801c166:	4411      	add	r1, r2
 801c168:	3402      	adds	r4, #2
 801c16a:	e7ee      	b.n	801c14a <_ZN8touchgfx8LCD16bpp35TextureMapper_A4_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x5e>
 801c16c:	d017      	beq.n	801c19e <_ZN8touchgfx8LCD16bpp35TextureMapper_A4_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0xb2>
 801c16e:	9d13      	ldr	r5, [sp, #76]	; 0x4c
 801c170:	1e5a      	subs	r2, r3, #1
 801c172:	fb05 0502 	mla	r5, r5, r2, r0
 801c176:	142d      	asrs	r5, r5, #16
 801c178:	d409      	bmi.n	801c18e <_ZN8touchgfx8LCD16bpp35TextureMapper_A4_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0xa2>
 801c17a:	42bd      	cmp	r5, r7
 801c17c:	da07      	bge.n	801c18e <_ZN8touchgfx8LCD16bpp35TextureMapper_A4_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0xa2>
 801c17e:	9d14      	ldr	r5, [sp, #80]	; 0x50
 801c180:	fb05 1202 	mla	r2, r5, r2, r1
 801c184:	1412      	asrs	r2, r2, #16
 801c186:	d402      	bmi.n	801c18e <_ZN8touchgfx8LCD16bpp35TextureMapper_A4_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0xa2>
 801c188:	42b2      	cmp	r2, r6
 801c18a:	f2c0 80c7 	blt.w	801c31c <_ZN8touchgfx8LCD16bpp35TextureMapper_A4_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x230>
 801c18e:	2700      	movs	r7, #0
 801c190:	19da      	adds	r2, r3, r7
 801c192:	2a00      	cmp	r2, #0
 801c194:	dc3e      	bgt.n	801c214 <_ZN8touchgfx8LCD16bpp35TextureMapper_A4_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x128>
 801c196:	ea23 73e3 	bic.w	r3, r3, r3, asr #31
 801c19a:	eb04 0443 	add.w	r4, r4, r3, lsl #1
 801c19e:	f1bb 0f00 	cmp.w	fp, #0
 801c1a2:	f340 8131 	ble.w	801c408 <_ZN8touchgfx8LCD16bpp35TextureMapper_A4_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x31c>
 801c1a6:	ee30 0a04 	vadd.f32	s0, s0, s8
 801c1aa:	ee70 0aa4 	vadd.f32	s1, s1, s9
 801c1ae:	eec6 7a80 	vdiv.f32	s15, s13, s0
 801c1b2:	9b10      	ldr	r3, [sp, #64]	; 0x40
 801c1b4:	f1bb 0b01 	subs.w	fp, fp, #1
 801c1b8:	ee31 1a05 	vadd.f32	s2, s2, s10
 801c1bc:	ee20 7aa7 	vmul.f32	s14, s1, s15
 801c1c0:	eeb0 6a62 	vmov.f32	s12, s5
 801c1c4:	ee61 7a27 	vmul.f32	s15, s2, s15
 801c1c8:	eebe 6ac8 	vcvt.s32.f32	s12, s12, #16
 801c1cc:	ee77 2a62 	vsub.f32	s5, s14, s5
 801c1d0:	ed8d 6a11 	vstr	s12, [sp, #68]	; 0x44
 801c1d4:	eefe 2ac8 	vcvt.s32.f32	s5, s5, #16
 801c1d8:	eeb0 6a43 	vmov.f32	s12, s6
 801c1dc:	ee37 3ac3 	vsub.f32	s6, s15, s6
 801c1e0:	ee12 2a90 	vmov	r2, s5
 801c1e4:	eebe 3ac8 	vcvt.s32.f32	s6, s6, #16
 801c1e8:	fb92 f3f3 	sdiv	r3, r2, r3
 801c1ec:	ee13 2a10 	vmov	r2, s6
 801c1f0:	eebe 6ac8 	vcvt.s32.f32	s12, s12, #16
 801c1f4:	9313      	str	r3, [sp, #76]	; 0x4c
 801c1f6:	9b10      	ldr	r3, [sp, #64]	; 0x40
 801c1f8:	fb92 f3f3 	sdiv	r3, r2, r3
 801c1fc:	9a03      	ldr	r2, [sp, #12]
 801c1fe:	9314      	str	r3, [sp, #80]	; 0x50
 801c200:	ed8d 6a12 	vstr	s12, [sp, #72]	; 0x48
 801c204:	9b10      	ldr	r3, [sp, #64]	; 0x40
 801c206:	eeb0 3a67 	vmov.f32	s6, s15
 801c20a:	bf08      	it	eq
 801c20c:	4613      	moveq	r3, r2
 801c20e:	eef0 2a47 	vmov.f32	s5, s14
 801c212:	e789      	b.n	801c128 <_ZN8touchgfx8LCD16bpp35TextureMapper_A4_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x3c>
 801c214:	1405      	asrs	r5, r0, #16
 801c216:	d435      	bmi.n	801c284 <_ZN8touchgfx8LCD16bpp35TextureMapper_A4_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x198>
 801c218:	f8d9 2008 	ldr.w	r2, [r9, #8]
 801c21c:	42aa      	cmp	r2, r5
 801c21e:	dd31      	ble.n	801c284 <_ZN8touchgfx8LCD16bpp35TextureMapper_A4_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x198>
 801c220:	140e      	asrs	r6, r1, #16
 801c222:	d42f      	bmi.n	801c284 <_ZN8touchgfx8LCD16bpp35TextureMapper_A4_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x198>
 801c224:	f8d9 200c 	ldr.w	r2, [r9, #12]
 801c228:	42b2      	cmp	r2, r6
 801c22a:	dd2b      	ble.n	801c284 <_ZN8touchgfx8LCD16bpp35TextureMapper_A4_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x198>
 801c22c:	9a00      	ldr	r2, [sp, #0]
 801c22e:	fb06 5502 	mla	r5, r6, r2, r5
 801c232:	086a      	lsrs	r2, r5, #1
 801c234:	9e01      	ldr	r6, [sp, #4]
 801c236:	5cb2      	ldrb	r2, [r6, r2]
 801c238:	07ee      	lsls	r6, r5, #31
 801c23a:	bf54      	ite	pl
 801c23c:	f002 020f 	andpl.w	r2, r2, #15
 801c240:	1112      	asrmi	r2, r2, #4
 801c242:	eb02 1202 	add.w	r2, r2, r2, lsl #4
 801c246:	b2d2      	uxtb	r2, r2
 801c248:	b1e2      	cbz	r2, 801c284 <_ZN8touchgfx8LCD16bpp35TextureMapper_A4_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x198>
 801c24a:	9d04      	ldr	r5, [sp, #16]
 801c24c:	436a      	muls	r2, r5
 801c24e:	1c55      	adds	r5, r2, #1
 801c250:	eb05 2222 	add.w	r2, r5, r2, asr #8
 801c254:	4d6e      	ldr	r5, [pc, #440]	; (801c410 <_ZN8touchgfx8LCD16bpp35TextureMapper_A4_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x324>)
 801c256:	682d      	ldr	r5, [r5, #0]
 801c258:	1212      	asrs	r2, r2, #8
 801c25a:	0a2e      	lsrs	r6, r5, #8
 801c25c:	2aff      	cmp	r2, #255	; 0xff
 801c25e:	9605      	str	r6, [sp, #20]
 801c260:	d116      	bne.n	801c290 <_ZN8touchgfx8LCD16bpp35TextureMapper_A4_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x1a4>
 801c262:	f06f 0201 	mvn.w	r2, #1
 801c266:	fb02 fc07 	mul.w	ip, r2, r7
 801c26a:	f426 66ff 	bic.w	r6, r6, #2040	; 0x7f8
 801c26e:	096a      	lsrs	r2, r5, #5
 801c270:	f402 62fc 	and.w	r2, r2, #2016	; 0x7e0
 801c274:	f026 0607 	bic.w	r6, r6, #7
 801c278:	4316      	orrs	r6, r2
 801c27a:	f3c5 05c4 	ubfx	r5, r5, #3, #5
 801c27e:	432e      	orrs	r6, r5
 801c280:	f824 600c 	strh.w	r6, [r4, ip]
 801c284:	9a13      	ldr	r2, [sp, #76]	; 0x4c
 801c286:	4410      	add	r0, r2
 801c288:	9a14      	ldr	r2, [sp, #80]	; 0x50
 801c28a:	3f01      	subs	r7, #1
 801c28c:	4411      	add	r1, r2
 801c28e:	e77f      	b.n	801c190 <_ZN8touchgfx8LCD16bpp35TextureMapper_A4_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0xa4>
 801c290:	f06f 0601 	mvn.w	r6, #1
 801c294:	437e      	muls	r6, r7
 801c296:	fa1f fa82 	uxth.w	sl, r2
 801c29a:	f834 8006 	ldrh.w	r8, [r4, r6]
 801c29e:	9602      	str	r6, [sp, #8]
 801c2a0:	ea4f 2e28 	mov.w	lr, r8, asr #8
 801c2a4:	f3c5 4c07 	ubfx	ip, r5, #16, #8
 801c2a8:	43d2      	mvns	r2, r2
 801c2aa:	b2d2      	uxtb	r2, r2
 801c2ac:	fb1c fc0a 	smulbb	ip, ip, sl
 801c2b0:	f00e 0ef8 	and.w	lr, lr, #248	; 0xf8
 801c2b4:	fb0e ce02 	mla	lr, lr, r2, ip
 801c2b8:	b2ed      	uxtb	r5, r5
 801c2ba:	ea4f 0ce8 	mov.w	ip, r8, asr #3
 801c2be:	ea4f 08c8 	mov.w	r8, r8, lsl #3
 801c2c2:	f89d 6014 	ldrb.w	r6, [sp, #20]
 801c2c6:	fa5f f888 	uxtb.w	r8, r8
 801c2ca:	fb15 f50a 	smulbb	r5, r5, sl
 801c2ce:	fb08 5502 	mla	r5, r8, r2, r5
 801c2d2:	fa1f fe8e 	uxth.w	lr, lr
 801c2d6:	fb16 f60a 	smulbb	r6, r6, sl
 801c2da:	b2ad      	uxth	r5, r5
 801c2dc:	f00c 0cfc 	and.w	ip, ip, #252	; 0xfc
 801c2e0:	fb0c 6c02 	mla	ip, ip, r2, r6
 801c2e4:	f10e 0201 	add.w	r2, lr, #1
 801c2e8:	1c6e      	adds	r6, r5, #1
 801c2ea:	eb02 2e1e 	add.w	lr, r2, lr, lsr #8
 801c2ee:	eb06 2615 	add.w	r6, r6, r5, lsr #8
 801c2f2:	fa1f fc8c 	uxth.w	ip, ip
 801c2f6:	f3c6 26c4 	ubfx	r6, r6, #11, #5
 801c2fa:	f40e 4e78 	and.w	lr, lr, #63488	; 0xf800
 801c2fe:	ea46 0e0e 	orr.w	lr, r6, lr
 801c302:	f10c 0601 	add.w	r6, ip, #1
 801c306:	eb06 261c 	add.w	r6, r6, ip, lsr #8
 801c30a:	0976      	lsrs	r6, r6, #5
 801c30c:	f406 66fc 	and.w	r6, r6, #2016	; 0x7e0
 801c310:	9a02      	ldr	r2, [sp, #8]
 801c312:	ea4e 0e06 	orr.w	lr, lr, r6
 801c316:	f824 e002 	strh.w	lr, [r4, r2]
 801c31a:	e7b3      	b.n	801c284 <_ZN8touchgfx8LCD16bpp35TextureMapper_A4_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x198>
 801c31c:	f04f 0800 	mov.w	r8, #0
 801c320:	eba3 0208 	sub.w	r2, r3, r8
 801c324:	2a00      	cmp	r2, #0
 801c326:	f77f af36 	ble.w	801c196 <_ZN8touchgfx8LCD16bpp35TextureMapper_A4_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0xaa>
 801c32a:	9e00      	ldr	r6, [sp, #0]
 801c32c:	1402      	asrs	r2, r0, #16
 801c32e:	140d      	asrs	r5, r1, #16
 801c330:	fb06 2505 	mla	r5, r6, r5, r2
 801c334:	086a      	lsrs	r2, r5, #1
 801c336:	9e01      	ldr	r6, [sp, #4]
 801c338:	5cb2      	ldrb	r2, [r6, r2]
 801c33a:	07ed      	lsls	r5, r5, #31
 801c33c:	bf54      	ite	pl
 801c33e:	f002 020f 	andpl.w	r2, r2, #15
 801c342:	1112      	asrmi	r2, r2, #4
 801c344:	eb02 1202 	add.w	r2, r2, r2, lsl #4
 801c348:	b2d2      	uxtb	r2, r2
 801c34a:	b1c2      	cbz	r2, 801c37e <_ZN8touchgfx8LCD16bpp35TextureMapper_A4_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x292>
 801c34c:	9d04      	ldr	r5, [sp, #16]
 801c34e:	436a      	muls	r2, r5
 801c350:	1c55      	adds	r5, r2, #1
 801c352:	eb05 2222 	add.w	r2, r5, r2, asr #8
 801c356:	4d2e      	ldr	r5, [pc, #184]	; (801c410 <_ZN8touchgfx8LCD16bpp35TextureMapper_A4_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x324>)
 801c358:	1212      	asrs	r2, r2, #8
 801c35a:	682e      	ldr	r6, [r5, #0]
 801c35c:	2aff      	cmp	r2, #255	; 0xff
 801c35e:	ea4f 2516 	mov.w	r5, r6, lsr #8
 801c362:	d113      	bne.n	801c38c <_ZN8touchgfx8LCD16bpp35TextureMapper_A4_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x2a0>
 801c364:	0972      	lsrs	r2, r6, #5
 801c366:	f425 65ff 	bic.w	r5, r5, #2040	; 0x7f8
 801c36a:	f402 62fc 	and.w	r2, r2, #2016	; 0x7e0
 801c36e:	f025 0507 	bic.w	r5, r5, #7
 801c372:	4315      	orrs	r5, r2
 801c374:	f3c6 06c4 	ubfx	r6, r6, #3, #5
 801c378:	4335      	orrs	r5, r6
 801c37a:	f824 5018 	strh.w	r5, [r4, r8, lsl #1]
 801c37e:	9a13      	ldr	r2, [sp, #76]	; 0x4c
 801c380:	4410      	add	r0, r2
 801c382:	9a14      	ldr	r2, [sp, #80]	; 0x50
 801c384:	f108 0801 	add.w	r8, r8, #1
 801c388:	4411      	add	r1, r2
 801c38a:	e7c9      	b.n	801c320 <_ZN8touchgfx8LCD16bpp35TextureMapper_A4_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x234>
 801c38c:	f834 e018 	ldrh.w	lr, [r4, r8, lsl #1]
 801c390:	fa1f fa82 	uxth.w	sl, r2
 801c394:	ea4f 2c2e 	mov.w	ip, lr, asr #8
 801c398:	f3c6 4707 	ubfx	r7, r6, #16, #8
 801c39c:	43d2      	mvns	r2, r2
 801c39e:	b2d2      	uxtb	r2, r2
 801c3a0:	fb17 f70a 	smulbb	r7, r7, sl
 801c3a4:	f00c 0cf8 	and.w	ip, ip, #248	; 0xf8
 801c3a8:	fb0c 7c02 	mla	ip, ip, r2, r7
 801c3ac:	b2f6      	uxtb	r6, r6
 801c3ae:	ea4f 07ee 	mov.w	r7, lr, asr #3
 801c3b2:	ea4f 0ece 	mov.w	lr, lr, lsl #3
 801c3b6:	fa5f fe8e 	uxtb.w	lr, lr
 801c3ba:	fb16 f60a 	smulbb	r6, r6, sl
 801c3be:	fb0e 6602 	mla	r6, lr, r2, r6
 801c3c2:	b2ed      	uxtb	r5, r5
 801c3c4:	fa1f fc8c 	uxth.w	ip, ip
 801c3c8:	fb15 f50a 	smulbb	r5, r5, sl
 801c3cc:	b2b6      	uxth	r6, r6
 801c3ce:	f007 07fc 	and.w	r7, r7, #252	; 0xfc
 801c3d2:	fb07 5702 	mla	r7, r7, r2, r5
 801c3d6:	f10c 0201 	add.w	r2, ip, #1
 801c3da:	1c75      	adds	r5, r6, #1
 801c3dc:	eb02 2c1c 	add.w	ip, r2, ip, lsr #8
 801c3e0:	eb05 2516 	add.w	r5, r5, r6, lsr #8
 801c3e4:	b2bf      	uxth	r7, r7
 801c3e6:	f3c5 25c4 	ubfx	r5, r5, #11, #5
 801c3ea:	f40c 4c78 	and.w	ip, ip, #63488	; 0xf800
 801c3ee:	ea45 0c0c 	orr.w	ip, r5, ip
 801c3f2:	1c7d      	adds	r5, r7, #1
 801c3f4:	eb05 2517 	add.w	r5, r5, r7, lsr #8
 801c3f8:	096d      	lsrs	r5, r5, #5
 801c3fa:	f405 65fc 	and.w	r5, r5, #2016	; 0x7e0
 801c3fe:	ea4c 0c05 	orr.w	ip, ip, r5
 801c402:	f824 c018 	strh.w	ip, [r4, r8, lsl #1]
 801c406:	e7ba      	b.n	801c37e <_ZN8touchgfx8LCD16bpp35TextureMapper_A4_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x292>
 801c408:	b007      	add	sp, #28
 801c40a:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
 801c40e:	bf00      	nop
 801c410:	2001382c 	.word	0x2001382c

0801c414 <_ZN8touchgfx8LCD16bpp37TextureMapper_A4_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff>:
 801c414:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 801c418:	b087      	sub	sp, #28
 801c41a:	f8df 830c 	ldr.w	r8, [pc, #780]	; 801c728 <_ZN8touchgfx8LCD16bpp37TextureMapper_A4_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x314>
 801c41e:	9815      	ldr	r0, [sp, #84]	; 0x54
 801c420:	9205      	str	r2, [sp, #20]
 801c422:	e9dd 2416 	ldrd	r2, r4, [sp, #88]	; 0x58
 801c426:	9101      	str	r1, [sp, #4]
 801c428:	6841      	ldr	r1, [r0, #4]
 801c42a:	f8dd b060 	ldr.w	fp, [sp, #96]	; 0x60
 801c42e:	fb01 2404 	mla	r4, r1, r4, r2
 801c432:	6802      	ldr	r2, [r0, #0]
 801c434:	eb02 0444 	add.w	r4, r2, r4, lsl #1
 801c438:	f8db 2008 	ldr.w	r2, [fp, #8]
 801c43c:	3201      	adds	r2, #1
 801c43e:	f022 0201 	bic.w	r2, r2, #1
 801c442:	9202      	str	r2, [sp, #8]
 801c444:	f8db 2000 	ldr.w	r2, [fp]
 801c448:	9203      	str	r2, [sp, #12]
 801c44a:	eef7 6a00 	vmov.f32	s13, #112	; 0x3f800000  1.0
 801c44e:	9a01      	ldr	r2, [sp, #4]
 801c450:	2a00      	cmp	r2, #0
 801c452:	dc03      	bgt.n	801c45c <_ZN8touchgfx8LCD16bpp37TextureMapper_A4_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x48>
 801c454:	9a05      	ldr	r2, [sp, #20]
 801c456:	2a00      	cmp	r2, #0
 801c458:	f340 8162 	ble.w	801c720 <_ZN8touchgfx8LCD16bpp37TextureMapper_A4_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x30c>
 801c45c:	9a11      	ldr	r2, [sp, #68]	; 0x44
 801c45e:	f9bb 7008 	ldrsh.w	r7, [fp, #8]
 801c462:	f9bb 600c 	ldrsh.w	r6, [fp, #12]
 801c466:	f502 4000 	add.w	r0, r2, #32768	; 0x8000
 801c46a:	9a12      	ldr	r2, [sp, #72]	; 0x48
 801c46c:	f502 4100 	add.w	r1, r2, #32768	; 0x8000
 801c470:	2b00      	cmp	r3, #0
 801c472:	dd0e      	ble.n	801c492 <_ZN8touchgfx8LCD16bpp37TextureMapper_A4_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x7e>
 801c474:	1402      	asrs	r2, r0, #16
 801c476:	d405      	bmi.n	801c484 <_ZN8touchgfx8LCD16bpp37TextureMapper_A4_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x70>
 801c478:	42ba      	cmp	r2, r7
 801c47a:	da03      	bge.n	801c484 <_ZN8touchgfx8LCD16bpp37TextureMapper_A4_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x70>
 801c47c:	140a      	asrs	r2, r1, #16
 801c47e:	d401      	bmi.n	801c484 <_ZN8touchgfx8LCD16bpp37TextureMapper_A4_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x70>
 801c480:	42b2      	cmp	r2, r6
 801c482:	db07      	blt.n	801c494 <_ZN8touchgfx8LCD16bpp37TextureMapper_A4_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x80>
 801c484:	9a13      	ldr	r2, [sp, #76]	; 0x4c
 801c486:	4410      	add	r0, r2
 801c488:	9a14      	ldr	r2, [sp, #80]	; 0x50
 801c48a:	3b01      	subs	r3, #1
 801c48c:	4411      	add	r1, r2
 801c48e:	3402      	adds	r4, #2
 801c490:	e7ee      	b.n	801c470 <_ZN8touchgfx8LCD16bpp37TextureMapper_A4_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x5c>
 801c492:	d017      	beq.n	801c4c4 <_ZN8touchgfx8LCD16bpp37TextureMapper_A4_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0xb0>
 801c494:	9d13      	ldr	r5, [sp, #76]	; 0x4c
 801c496:	1e5a      	subs	r2, r3, #1
 801c498:	fb05 0502 	mla	r5, r5, r2, r0
 801c49c:	142d      	asrs	r5, r5, #16
 801c49e:	d409      	bmi.n	801c4b4 <_ZN8touchgfx8LCD16bpp37TextureMapper_A4_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0xa0>
 801c4a0:	42bd      	cmp	r5, r7
 801c4a2:	da07      	bge.n	801c4b4 <_ZN8touchgfx8LCD16bpp37TextureMapper_A4_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0xa0>
 801c4a4:	9d14      	ldr	r5, [sp, #80]	; 0x50
 801c4a6:	fb05 1202 	mla	r2, r5, r2, r1
 801c4aa:	1412      	asrs	r2, r2, #16
 801c4ac:	d402      	bmi.n	801c4b4 <_ZN8touchgfx8LCD16bpp37TextureMapper_A4_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0xa0>
 801c4ae:	42b2      	cmp	r2, r6
 801c4b0:	f2c0 80c3 	blt.w	801c63a <_ZN8touchgfx8LCD16bpp37TextureMapper_A4_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x226>
 801c4b4:	2500      	movs	r5, #0
 801c4b6:	195a      	adds	r2, r3, r5
 801c4b8:	2a00      	cmp	r2, #0
 801c4ba:	dc3f      	bgt.n	801c53c <_ZN8touchgfx8LCD16bpp37TextureMapper_A4_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x128>
 801c4bc:	ea23 73e3 	bic.w	r3, r3, r3, asr #31
 801c4c0:	eb04 0443 	add.w	r4, r4, r3, lsl #1
 801c4c4:	9b01      	ldr	r3, [sp, #4]
 801c4c6:	2b00      	cmp	r3, #0
 801c4c8:	f340 812a 	ble.w	801c720 <_ZN8touchgfx8LCD16bpp37TextureMapper_A4_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x30c>
 801c4cc:	ee30 0a04 	vadd.f32	s0, s0, s8
 801c4d0:	ee70 0aa4 	vadd.f32	s1, s1, s9
 801c4d4:	eec6 7a80 	vdiv.f32	s15, s13, s0
 801c4d8:	9b10      	ldr	r3, [sp, #64]	; 0x40
 801c4da:	ee31 1a05 	vadd.f32	s2, s2, s10
 801c4de:	ee20 7aa7 	vmul.f32	s14, s1, s15
 801c4e2:	eeb0 6a62 	vmov.f32	s12, s5
 801c4e6:	ee61 7a27 	vmul.f32	s15, s2, s15
 801c4ea:	eebe 6ac8 	vcvt.s32.f32	s12, s12, #16
 801c4ee:	ee77 2a62 	vsub.f32	s5, s14, s5
 801c4f2:	ed8d 6a11 	vstr	s12, [sp, #68]	; 0x44
 801c4f6:	eefe 2ac8 	vcvt.s32.f32	s5, s5, #16
 801c4fa:	eeb0 6a43 	vmov.f32	s12, s6
 801c4fe:	ee37 3ac3 	vsub.f32	s6, s15, s6
 801c502:	ee12 2a90 	vmov	r2, s5
 801c506:	eebe 3ac8 	vcvt.s32.f32	s6, s6, #16
 801c50a:	fb92 f3f3 	sdiv	r3, r2, r3
 801c50e:	ee13 2a10 	vmov	r2, s6
 801c512:	9313      	str	r3, [sp, #76]	; 0x4c
 801c514:	9b10      	ldr	r3, [sp, #64]	; 0x40
 801c516:	fb92 f3f3 	sdiv	r3, r2, r3
 801c51a:	9314      	str	r3, [sp, #80]	; 0x50
 801c51c:	9b01      	ldr	r3, [sp, #4]
 801c51e:	9a05      	ldr	r2, [sp, #20]
 801c520:	eebe 6ac8 	vcvt.s32.f32	s12, s12, #16
 801c524:	3b01      	subs	r3, #1
 801c526:	9301      	str	r3, [sp, #4]
 801c528:	ed8d 6a12 	vstr	s12, [sp, #72]	; 0x48
 801c52c:	9b10      	ldr	r3, [sp, #64]	; 0x40
 801c52e:	eeb0 3a67 	vmov.f32	s6, s15
 801c532:	bf08      	it	eq
 801c534:	4613      	moveq	r3, r2
 801c536:	eef0 2a47 	vmov.f32	s5, s14
 801c53a:	e788      	b.n	801c44e <_ZN8touchgfx8LCD16bpp37TextureMapper_A4_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x3a>
 801c53c:	1406      	asrs	r6, r0, #16
 801c53e:	d42c      	bmi.n	801c59a <_ZN8touchgfx8LCD16bpp37TextureMapper_A4_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x186>
 801c540:	f8db 2008 	ldr.w	r2, [fp, #8]
 801c544:	42b2      	cmp	r2, r6
 801c546:	dd28      	ble.n	801c59a <_ZN8touchgfx8LCD16bpp37TextureMapper_A4_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x186>
 801c548:	140f      	asrs	r7, r1, #16
 801c54a:	d426      	bmi.n	801c59a <_ZN8touchgfx8LCD16bpp37TextureMapper_A4_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x186>
 801c54c:	f8db 200c 	ldr.w	r2, [fp, #12]
 801c550:	42ba      	cmp	r2, r7
 801c552:	dd22      	ble.n	801c59a <_ZN8touchgfx8LCD16bpp37TextureMapper_A4_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x186>
 801c554:	9a02      	ldr	r2, [sp, #8]
 801c556:	fb07 6602 	mla	r6, r7, r2, r6
 801c55a:	0872      	lsrs	r2, r6, #1
 801c55c:	9f03      	ldr	r7, [sp, #12]
 801c55e:	5cba      	ldrb	r2, [r7, r2]
 801c560:	07f6      	lsls	r6, r6, #31
 801c562:	bf54      	ite	pl
 801c564:	f002 020f 	andpl.w	r2, r2, #15
 801c568:	1112      	asrmi	r2, r2, #4
 801c56a:	eb02 1202 	add.w	r2, r2, r2, lsl #4
 801c56e:	b2d2      	uxtb	r2, r2
 801c570:	2aff      	cmp	r2, #255	; 0xff
 801c572:	d118      	bne.n	801c5a6 <_ZN8touchgfx8LCD16bpp37TextureMapper_A4_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x192>
 801c574:	f8d8 2000 	ldr.w	r2, [r8]
 801c578:	f06f 0601 	mvn.w	r6, #1
 801c57c:	fb06 f705 	mul.w	r7, r6, r5
 801c580:	f2a6 76fe 	subw	r6, r6, #2046	; 0x7fe
 801c584:	ea06 2c12 	and.w	ip, r6, r2, lsr #8
 801c588:	0956      	lsrs	r6, r2, #5
 801c58a:	f406 66fc 	and.w	r6, r6, #2016	; 0x7e0
 801c58e:	ea4c 0606 	orr.w	r6, ip, r6
 801c592:	f3c2 02c4 	ubfx	r2, r2, #3, #5
 801c596:	4316      	orrs	r6, r2
 801c598:	53e6      	strh	r6, [r4, r7]
 801c59a:	9a13      	ldr	r2, [sp, #76]	; 0x4c
 801c59c:	4410      	add	r0, r2
 801c59e:	9a14      	ldr	r2, [sp, #80]	; 0x50
 801c5a0:	3d01      	subs	r5, #1
 801c5a2:	4411      	add	r1, r2
 801c5a4:	e787      	b.n	801c4b6 <_ZN8touchgfx8LCD16bpp37TextureMapper_A4_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0xa2>
 801c5a6:	2a00      	cmp	r2, #0
 801c5a8:	d0f7      	beq.n	801c59a <_ZN8touchgfx8LCD16bpp37TextureMapper_A4_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x186>
 801c5aa:	f06f 0601 	mvn.w	r6, #1
 801c5ae:	436e      	muls	r6, r5
 801c5b0:	f8d8 c000 	ldr.w	ip, [r8]
 801c5b4:	f834 e006 	ldrh.w	lr, [r4, r6]
 801c5b8:	9604      	str	r6, [sp, #16]
 801c5ba:	fa1f f982 	uxth.w	r9, r2
 801c5be:	ea4f 272e 	mov.w	r7, lr, asr #8
 801c5c2:	f3cc 4607 	ubfx	r6, ip, #16, #8
 801c5c6:	43d2      	mvns	r2, r2
 801c5c8:	b2d2      	uxtb	r2, r2
 801c5ca:	fb16 f609 	smulbb	r6, r6, r9
 801c5ce:	f007 07f8 	and.w	r7, r7, #248	; 0xf8
 801c5d2:	fb07 6702 	mla	r7, r7, r2, r6
 801c5d6:	f3cc 2a07 	ubfx	sl, ip, #8, #8
 801c5da:	ea4f 06ee 	mov.w	r6, lr, asr #3
 801c5de:	fa5f fc8c 	uxtb.w	ip, ip
 801c5e2:	ea4f 0ece 	mov.w	lr, lr, lsl #3
 801c5e6:	fa5f fe8e 	uxtb.w	lr, lr
 801c5ea:	fb1c fc09 	smulbb	ip, ip, r9
 801c5ee:	fb0e cc02 	mla	ip, lr, r2, ip
 801c5f2:	b2bf      	uxth	r7, r7
 801c5f4:	fb1a fa09 	smulbb	sl, sl, r9
 801c5f8:	fa1f fc8c 	uxth.w	ip, ip
 801c5fc:	f006 06fc 	and.w	r6, r6, #252	; 0xfc
 801c600:	fb06 a602 	mla	r6, r6, r2, sl
 801c604:	1c7a      	adds	r2, r7, #1
 801c606:	f10c 0a01 	add.w	sl, ip, #1
 801c60a:	eb02 2717 	add.w	r7, r2, r7, lsr #8
 801c60e:	eb0a 2a1c 	add.w	sl, sl, ip, lsr #8
 801c612:	b2b6      	uxth	r6, r6
 801c614:	f3ca 2ac4 	ubfx	sl, sl, #11, #5
 801c618:	f407 4778 	and.w	r7, r7, #63488	; 0xf800
 801c61c:	ea4a 0707 	orr.w	r7, sl, r7
 801c620:	f106 0a01 	add.w	sl, r6, #1
 801c624:	eb0a 2a16 	add.w	sl, sl, r6, lsr #8
 801c628:	ea4f 1a5a 	mov.w	sl, sl, lsr #5
 801c62c:	f40a 6afc 	and.w	sl, sl, #2016	; 0x7e0
 801c630:	9a04      	ldr	r2, [sp, #16]
 801c632:	ea47 070a 	orr.w	r7, r7, sl
 801c636:	52a7      	strh	r7, [r4, r2]
 801c638:	e7af      	b.n	801c59a <_ZN8touchgfx8LCD16bpp37TextureMapper_A4_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x186>
 801c63a:	f04f 0e00 	mov.w	lr, #0
 801c63e:	eba3 020e 	sub.w	r2, r3, lr
 801c642:	2a00      	cmp	r2, #0
 801c644:	f77f af3a 	ble.w	801c4bc <_ZN8touchgfx8LCD16bpp37TextureMapper_A4_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0xa8>
 801c648:	9e02      	ldr	r6, [sp, #8]
 801c64a:	1402      	asrs	r2, r0, #16
 801c64c:	140d      	asrs	r5, r1, #16
 801c64e:	fb06 2505 	mla	r5, r6, r5, r2
 801c652:	086a      	lsrs	r2, r5, #1
 801c654:	9e03      	ldr	r6, [sp, #12]
 801c656:	5cb2      	ldrb	r2, [r6, r2]
 801c658:	07ed      	lsls	r5, r5, #31
 801c65a:	bf54      	ite	pl
 801c65c:	f002 020f 	andpl.w	r2, r2, #15
 801c660:	1112      	asrmi	r2, r2, #4
 801c662:	eb02 1202 	add.w	r2, r2, r2, lsl #4
 801c666:	b2d2      	uxtb	r2, r2
 801c668:	2aff      	cmp	r2, #255	; 0xff
 801c66a:	d115      	bne.n	801c698 <_ZN8touchgfx8LCD16bpp37TextureMapper_A4_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x284>
 801c66c:	f8d8 5000 	ldr.w	r5, [r8]
 801c670:	f6a2 02ff 	subw	r2, r2, #2303	; 0x8ff
 801c674:	ea02 2615 	and.w	r6, r2, r5, lsr #8
 801c678:	096a      	lsrs	r2, r5, #5
 801c67a:	f402 62fc 	and.w	r2, r2, #2016	; 0x7e0
 801c67e:	4332      	orrs	r2, r6
 801c680:	f3c5 05c4 	ubfx	r5, r5, #3, #5
 801c684:	432a      	orrs	r2, r5
 801c686:	f824 201e 	strh.w	r2, [r4, lr, lsl #1]
 801c68a:	9a13      	ldr	r2, [sp, #76]	; 0x4c
 801c68c:	4410      	add	r0, r2
 801c68e:	9a14      	ldr	r2, [sp, #80]	; 0x50
 801c690:	f10e 0e01 	add.w	lr, lr, #1
 801c694:	4411      	add	r1, r2
 801c696:	e7d2      	b.n	801c63e <_ZN8touchgfx8LCD16bpp37TextureMapper_A4_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x22a>
 801c698:	2a00      	cmp	r2, #0
 801c69a:	d0f6      	beq.n	801c68a <_ZN8touchgfx8LCD16bpp37TextureMapper_A4_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x276>
 801c69c:	f8d8 7000 	ldr.w	r7, [r8]
 801c6a0:	f834 c01e 	ldrh.w	ip, [r4, lr, lsl #1]
 801c6a4:	fa1f f982 	uxth.w	r9, r2
 801c6a8:	ea4f 262c 	mov.w	r6, ip, asr #8
 801c6ac:	f3c7 4507 	ubfx	r5, r7, #16, #8
 801c6b0:	43d2      	mvns	r2, r2
 801c6b2:	b2d2      	uxtb	r2, r2
 801c6b4:	fb15 f509 	smulbb	r5, r5, r9
 801c6b8:	f006 06f8 	and.w	r6, r6, #248	; 0xf8
 801c6bc:	fb06 5602 	mla	r6, r6, r2, r5
 801c6c0:	f3c7 2a07 	ubfx	sl, r7, #8, #8
 801c6c4:	ea4f 05ec 	mov.w	r5, ip, asr #3
 801c6c8:	b2ff      	uxtb	r7, r7
 801c6ca:	ea4f 0ccc 	mov.w	ip, ip, lsl #3
 801c6ce:	fa5f fc8c 	uxtb.w	ip, ip
 801c6d2:	fb17 f709 	smulbb	r7, r7, r9
 801c6d6:	fb0c 7702 	mla	r7, ip, r2, r7
 801c6da:	b2b6      	uxth	r6, r6
 801c6dc:	fb1a fa09 	smulbb	sl, sl, r9
 801c6e0:	b2bf      	uxth	r7, r7
 801c6e2:	f005 05fc 	and.w	r5, r5, #252	; 0xfc
 801c6e6:	fb05 a502 	mla	r5, r5, r2, sl
 801c6ea:	1c72      	adds	r2, r6, #1
 801c6ec:	f107 0a01 	add.w	sl, r7, #1
 801c6f0:	eb02 2616 	add.w	r6, r2, r6, lsr #8
 801c6f4:	eb0a 2a17 	add.w	sl, sl, r7, lsr #8
 801c6f8:	b2ad      	uxth	r5, r5
 801c6fa:	f3ca 2ac4 	ubfx	sl, sl, #11, #5
 801c6fe:	f406 4678 	and.w	r6, r6, #63488	; 0xf800
 801c702:	ea4a 0606 	orr.w	r6, sl, r6
 801c706:	f105 0a01 	add.w	sl, r5, #1
 801c70a:	eb0a 2a15 	add.w	sl, sl, r5, lsr #8
 801c70e:	ea4f 1a5a 	mov.w	sl, sl, lsr #5
 801c712:	f40a 6afc 	and.w	sl, sl, #2016	; 0x7e0
 801c716:	ea46 060a 	orr.w	r6, r6, sl
 801c71a:	f824 601e 	strh.w	r6, [r4, lr, lsl #1]
 801c71e:	e7b4      	b.n	801c68a <_ZN8touchgfx8LCD16bpp37TextureMapper_A4_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x276>
 801c720:	b007      	add	sp, #28
 801c722:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
 801c726:	bf00      	nop
 801c728:	2001382c 	.word	0x2001382c

0801c72c <_ZN8touchgfx8LCD16bppD1Ev>:
 801c72c:	4770      	bx	lr

0801c72e <_ZN8touchgfx8LCD16bpp19DecompressorL8_LZW9D1Ev>:
 801c72e:	4770      	bx	lr

0801c730 <_ZN8touchgfx8LCD16bpp18DecompressorL8_RLED1Ev>:
 801c730:	4770      	bx	lr

0801c732 <_ZN8touchgfx8LCD16bpp17DecompressorL8_L4D1Ev>:
 801c732:	4770      	bx	lr

0801c734 <_ZN8touchgfx8LCD16bpp43TextureMapper_A4_BilinearInterpolation_NoGAD1Ev>:
 801c734:	4770      	bx	lr

0801c736 <_ZN8touchgfx8LCD16bpp41TextureMapper_A4_BilinearInterpolation_GAD1Ev>:
 801c736:	4770      	bx	lr

0801c738 <_ZN8touchgfx8LCD16bpp37TextureMapper_A4_NearestNeighbor_NoGAD1Ev>:
 801c738:	4770      	bx	lr

0801c73a <_ZN8touchgfx8LCD16bpp35TextureMapper_A4_NearestNeighbor_GAD1Ev>:
 801c73a:	4770      	bx	lr

0801c73c <_ZN8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGAD1Ev>:
 801c73c:	4770      	bx	lr

0801c73e <_ZN8touchgfx8LCD16bpp57TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_GAD1Ev>:
 801c73e:	4770      	bx	lr

0801c740 <_ZN8touchgfx8LCD16bpp53TextureMapper_ARGB8888_NonOpaque_NearestNeighbor_NoGAD1Ev>:
 801c740:	4770      	bx	lr

0801c742 <_ZN8touchgfx8LCD16bpp51TextureMapper_ARGB8888_NonOpaque_NearestNeighbor_GAD1Ev>:
 801c742:	4770      	bx	lr

0801c744 <_ZN8touchgfx8LCD16bpp54TextureMapper_RGB565_Opaque_BilinearInterpolation_NoGAD1Ev>:
 801c744:	4770      	bx	lr

0801c746 <_ZN8touchgfx8LCD16bpp52TextureMapper_RGB565_Opaque_BilinearInterpolation_GAD1Ev>:
 801c746:	4770      	bx	lr

0801c748 <_ZN8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGAD1Ev>:
 801c748:	4770      	bx	lr

0801c74a <_ZN8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GAD1Ev>:
 801c74a:	4770      	bx	lr

0801c74c <_ZN8touchgfx8LCD16bpp48TextureMapper_RGB565_Opaque_NearestNeighbor_NoGAD1Ev>:
 801c74c:	4770      	bx	lr

0801c74e <_ZN8touchgfx8LCD16bpp46TextureMapper_RGB565_Opaque_NearestNeighbor_GAD1Ev>:
 801c74e:	4770      	bx	lr

0801c750 <_ZN8touchgfx8LCD16bpp51TextureMapper_RGB565_NonOpaque_NearestNeighbor_NoGAD1Ev>:
 801c750:	4770      	bx	lr

0801c752 <_ZN8touchgfx8LCD16bpp49TextureMapper_RGB565_NonOpaque_NearestNeighbor_GAD1Ev>:
 801c752:	4770      	bx	lr

0801c754 <_ZN8touchgfx8LCD16bpp62TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGAD1Ev>:
 801c754:	4770      	bx	lr

0801c756 <_ZN8touchgfx8LCD16bpp60TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_GAD1Ev>:
 801c756:	4770      	bx	lr

0801c758 <_ZN8touchgfx8LCD16bpp56TextureMapper_L8_ARGB8888_NonOpaque_NearestNeighbor_NoGAD1Ev>:
 801c758:	4770      	bx	lr

0801c75a <_ZN8touchgfx8LCD16bpp54TextureMapper_L8_ARGB8888_NonOpaque_NearestNeighbor_GAD1Ev>:
 801c75a:	4770      	bx	lr

0801c75c <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_NoGAD1Ev>:
 801c75c:	4770      	bx	lr

0801c75e <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_GAD1Ev>:
 801c75e:	4770      	bx	lr

0801c760 <_ZN8touchgfx8LCD16bpp51TextureMapper_L8_RGB888_Opaque_NearestNeighbor_NoGAD1Ev>:
 801c760:	4770      	bx	lr

0801c762 <_ZN8touchgfx8LCD16bpp49TextureMapper_L8_RGB888_Opaque_NearestNeighbor_GAD1Ev>:
 801c762:	4770      	bx	lr

0801c764 <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_NoGAD1Ev>:
 801c764:	4770      	bx	lr

0801c766 <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_GAD1Ev>:
 801c766:	4770      	bx	lr

0801c768 <_ZN8touchgfx8LCD16bpp51TextureMapper_L8_RGB565_Opaque_NearestNeighbor_NoGAD1Ev>:
 801c768:	4770      	bx	lr

0801c76a <_ZN8touchgfx8LCD16bpp49TextureMapper_L8_RGB565_Opaque_NearestNeighbor_GAD1Ev>:
 801c76a:	4770      	bx	lr

0801c76c <_ZN8touchgfx8LCD16bpp29copyFrameBufferRegionToMemoryERKNS_4RectES3_t>:
 801c76c:	e92d 47f0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, lr}
 801c770:	b088      	sub	sp, #32
 801c772:	ac08      	add	r4, sp, #32
 801c774:	4606      	mov	r6, r0
 801c776:	f824 3d0c 	strh.w	r3, [r4, #-12]!
 801c77a:	4620      	mov	r0, r4
 801c77c:	4688      	mov	r8, r1
 801c77e:	4691      	mov	r9, r2
 801c780:	f7fd fc62 	bl	801a048 <_ZNK8touchgfx6Bitmap7getDataEv>
 801c784:	6833      	ldr	r3, [r6, #0]
 801c786:	4605      	mov	r5, r0
 801c788:	4620      	mov	r0, r4
 801c78a:	699f      	ldr	r7, [r3, #24]
 801c78c:	f7fd fb70 	bl	8019e70 <_ZNK8touchgfx6Bitmap8getWidthEv>
 801c790:	4682      	mov	sl, r0
 801c792:	4620      	mov	r0, r4
 801c794:	f7fd fba0 	bl	8019ed8 <_ZNK8touchgfx6Bitmap9getHeightEv>
 801c798:	9500      	str	r5, [sp, #0]
 801c79a:	e9cd a001 	strd	sl, r0, [sp, #4]
 801c79e:	464b      	mov	r3, r9
 801c7a0:	a806      	add	r0, sp, #24
 801c7a2:	4642      	mov	r2, r8
 801c7a4:	4631      	mov	r1, r6
 801c7a6:	47b8      	blx	r7
 801c7a8:	4628      	mov	r0, r5
 801c7aa:	b008      	add	sp, #32
 801c7ac:	e8bd 87f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, pc}

0801c7b0 <_ZN8touchgfx8LCD16bpp29copyAreaFromTFTToClientBufferERKNS_4RectE>:
 801c7b0:	e92d 47ff 	stmdb	sp!, {r0, r1, r2, r3, r4, r5, r6, r7, r8, r9, sl, lr}
 801c7b4:	2300      	movs	r3, #0
 801c7b6:	9300      	str	r3, [sp, #0]
 801c7b8:	4b3d      	ldr	r3, [pc, #244]	; (801c8b0 <_ZN8touchgfx8LCD16bpp29copyAreaFromTFTToClientBufferERKNS_4RectE+0x100>)
 801c7ba:	781b      	ldrb	r3, [r3, #0]
 801c7bc:	2b00      	cmp	r3, #0
 801c7be:	d137      	bne.n	801c830 <_ZN8touchgfx8LCD16bpp29copyAreaFromTFTToClientBufferERKNS_4RectE+0x80>
 801c7c0:	4a3c      	ldr	r2, [pc, #240]	; (801c8b4 <_ZN8touchgfx8LCD16bpp29copyAreaFromTFTToClientBufferERKNS_4RectE+0x104>)
 801c7c2:	f9b2 2000 	ldrsh.w	r2, [r2]
 801c7c6:	f8ad 2004 	strh.w	r2, [sp, #4]
 801c7ca:	2b00      	cmp	r3, #0
 801c7cc:	d132      	bne.n	801c834 <_ZN8touchgfx8LCD16bpp29copyAreaFromTFTToClientBufferERKNS_4RectE+0x84>
 801c7ce:	4b3a      	ldr	r3, [pc, #232]	; (801c8b8 <_ZN8touchgfx8LCD16bpp29copyAreaFromTFTToClientBufferERKNS_4RectE+0x108>)
 801c7d0:	f9b3 3000 	ldrsh.w	r3, [r3]
 801c7d4:	6808      	ldr	r0, [r1, #0]
 801c7d6:	6849      	ldr	r1, [r1, #4]
 801c7d8:	f8ad 3006 	strh.w	r3, [sp, #6]
 801c7dc:	ac02      	add	r4, sp, #8
 801c7de:	ab02      	add	r3, sp, #8
 801c7e0:	c303      	stmia	r3!, {r0, r1}
 801c7e2:	4669      	mov	r1, sp
 801c7e4:	4620      	mov	r0, r4
 801c7e6:	f7f9 fd83 	bl	80162f0 <_ZN8touchgfx21DisplayTransformation29transformDisplayToFrameBufferERNS_4RectERKS1_>
 801c7ea:	4668      	mov	r0, sp
 801c7ec:	f7f9 fd3c 	bl	8016268 <_ZN8touchgfx21DisplayTransformation29transformDisplayToFrameBufferERNS_4RectE>
 801c7f0:	f8bd 3008 	ldrh.w	r3, [sp, #8]
 801c7f4:	f8bd 2000 	ldrh.w	r2, [sp]
 801c7f8:	4d30      	ldr	r5, [pc, #192]	; (801c8bc <_ZN8touchgfx8LCD16bpp29copyAreaFromTFTToClientBufferERKNS_4RectE+0x10c>)
 801c7fa:	4413      	add	r3, r2
 801c7fc:	f8ad 3008 	strh.w	r3, [sp, #8]
 801c800:	f8bd 2002 	ldrh.w	r2, [sp, #2]
 801c804:	f8bd 300a 	ldrh.w	r3, [sp, #10]
 801c808:	6828      	ldr	r0, [r5, #0]
 801c80a:	4413      	add	r3, r2
 801c80c:	f8ad 300a 	strh.w	r3, [sp, #10]
 801c810:	6803      	ldr	r3, [r0, #0]
 801c812:	6b9b      	ldr	r3, [r3, #56]	; 0x38
 801c814:	4798      	blx	r3
 801c816:	f010 0f01 	tst.w	r0, #1
 801c81a:	462f      	mov	r7, r5
 801c81c:	d00c      	beq.n	801c838 <_ZN8touchgfx8LCD16bpp29copyAreaFromTFTToClientBufferERKNS_4RectE+0x88>
 801c81e:	6828      	ldr	r0, [r5, #0]
 801c820:	6803      	ldr	r3, [r0, #0]
 801c822:	e894 0006 	ldmia.w	r4, {r1, r2}
 801c826:	6ddb      	ldr	r3, [r3, #92]	; 0x5c
 801c828:	4798      	blx	r3
 801c82a:	b004      	add	sp, #16
 801c82c:	e8bd 87f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, pc}
 801c830:	4a21      	ldr	r2, [pc, #132]	; (801c8b8 <_ZN8touchgfx8LCD16bpp29copyAreaFromTFTToClientBufferERKNS_4RectE+0x108>)
 801c832:	e7c6      	b.n	801c7c2 <_ZN8touchgfx8LCD16bpp29copyAreaFromTFTToClientBufferERKNS_4RectE+0x12>
 801c834:	4b1f      	ldr	r3, [pc, #124]	; (801c8b4 <_ZN8touchgfx8LCD16bpp29copyAreaFromTFTToClientBufferERKNS_4RectE+0x104>)
 801c836:	e7cb      	b.n	801c7d0 <_ZN8touchgfx8LCD16bpp29copyAreaFromTFTToClientBufferERKNS_4RectE+0x20>
 801c838:	6838      	ldr	r0, [r7, #0]
 801c83a:	f9bd 800c 	ldrsh.w	r8, [sp, #12]
 801c83e:	6803      	ldr	r3, [r0, #0]
 801c840:	f9bd 500e 	ldrsh.w	r5, [sp, #14]
 801c844:	6b1b      	ldr	r3, [r3, #48]	; 0x30
 801c846:	4798      	blx	r3
 801c848:	f9bd 3008 	ldrsh.w	r3, [sp, #8]
 801c84c:	f8bd 200a 	ldrh.w	r2, [sp, #10]
 801c850:	f8bd 6004 	ldrh.w	r6, [sp, #4]
 801c854:	fb16 3602 	smlabb	r6, r6, r2, r3
 801c858:	eb00 0646 	add.w	r6, r0, r6, lsl #1
 801c85c:	6838      	ldr	r0, [r7, #0]
 801c85e:	6803      	ldr	r3, [r0, #0]
 801c860:	6a9b      	ldr	r3, [r3, #40]	; 0x28
 801c862:	4798      	blx	r3
 801c864:	4a13      	ldr	r2, [pc, #76]	; (801c8b4 <_ZN8touchgfx8LCD16bpp29copyAreaFromTFTToClientBufferERKNS_4RectE+0x104>)
 801c866:	f9bd 400a 	ldrsh.w	r4, [sp, #10]
 801c86a:	8813      	ldrh	r3, [r2, #0]
 801c86c:	f9bd 1008 	ldrsh.w	r1, [sp, #8]
 801c870:	fb03 1404 	mla	r4, r3, r4, r1
 801c874:	eb00 0444 	add.w	r4, r0, r4, lsl #1
 801c878:	435d      	muls	r5, r3
 801c87a:	eb04 0545 	add.w	r5, r4, r5, lsl #1
 801c87e:	ea4f 0848 	mov.w	r8, r8, lsl #1
 801c882:	4691      	mov	r9, r2
 801c884:	6838      	ldr	r0, [r7, #0]
 801c886:	42ac      	cmp	r4, r5
 801c888:	6803      	ldr	r3, [r0, #0]
 801c88a:	d20e      	bcs.n	801c8aa <_ZN8touchgfx8LCD16bpp29copyAreaFromTFTToClientBufferERKNS_4RectE+0xfa>
 801c88c:	f8d3 a034 	ldr.w	sl, [r3, #52]	; 0x34
 801c890:	4632      	mov	r2, r6
 801c892:	4643      	mov	r3, r8
 801c894:	4621      	mov	r1, r4
 801c896:	47d0      	blx	sl
 801c898:	f8b9 3000 	ldrh.w	r3, [r9]
 801c89c:	eb04 0443 	add.w	r4, r4, r3, lsl #1
 801c8a0:	f9bd 3004 	ldrsh.w	r3, [sp, #4]
 801c8a4:	eb06 0643 	add.w	r6, r6, r3, lsl #1
 801c8a8:	e7ec      	b.n	801c884 <_ZN8touchgfx8LCD16bpp29copyAreaFromTFTToClientBufferERKNS_4RectE+0xd4>
 801c8aa:	6adb      	ldr	r3, [r3, #44]	; 0x2c
 801c8ac:	4798      	blx	r3
 801c8ae:	e7bc      	b.n	801c82a <_ZN8touchgfx8LCD16bpp29copyAreaFromTFTToClientBufferERKNS_4RectE+0x7a>
 801c8b0:	20013814 	.word	0x20013814
 801c8b4:	20013816 	.word	0x20013816
 801c8b8:	20013818 	.word	0x20013818
 801c8bc:	2001381c 	.word	0x2001381c

0801c8c0 <_ZN8touchgfx8LCD16bpp8blitCopyEPKtRKNS_4RectES5_hb>:
 801c8c0:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 801c8c4:	b08b      	sub	sp, #44	; 0x2c
 801c8c6:	460f      	mov	r7, r1
 801c8c8:	f89d b050 	ldrb.w	fp, [sp, #80]	; 0x50
 801c8cc:	f89d 4054 	ldrb.w	r4, [sp, #84]	; 0x54
 801c8d0:	4616      	mov	r6, r2
 801c8d2:	f1bb 0f00 	cmp.w	fp, #0
 801c8d6:	d04a      	beq.n	801c96e <_ZN8touchgfx8LCD16bpp8blitCopyEPKtRKNS_4RectES5_hb+0xae>
 801c8d8:	6810      	ldr	r0, [r2, #0]
 801c8da:	6851      	ldr	r1, [r2, #4]
 801c8dc:	ad06      	add	r5, sp, #24
 801c8de:	c503      	stmia	r5!, {r0, r1}
 801c8e0:	6818      	ldr	r0, [r3, #0]
 801c8e2:	6859      	ldr	r1, [r3, #4]
 801c8e4:	ad08      	add	r5, sp, #32
 801c8e6:	c503      	stmia	r5!, {r0, r1}
 801c8e8:	a806      	add	r0, sp, #24
 801c8ea:	f7f9 fcbd 	bl	8016268 <_ZN8touchgfx21DisplayTransformation29transformDisplayToFrameBufferERNS_4RectE>
 801c8ee:	4631      	mov	r1, r6
 801c8f0:	a808      	add	r0, sp, #32
 801c8f2:	f7f9 fcfd 	bl	80162f0 <_ZN8touchgfx21DisplayTransformation29transformDisplayToFrameBufferERNS_4RectERKS1_>
 801c8f6:	f9bd 2020 	ldrsh.w	r2, [sp, #32]
 801c8fa:	f9bd 3022 	ldrsh.w	r3, [sp, #34]	; 0x22
 801c8fe:	f8bd 601c 	ldrh.w	r6, [sp, #28]
 801c902:	f9bd 8024 	ldrsh.w	r8, [sp, #36]	; 0x24
 801c906:	f9bd 5026 	ldrsh.w	r5, [sp, #38]	; 0x26
 801c90a:	fb16 2103 	smlabb	r1, r6, r3, r2
 801c90e:	eb07 0641 	add.w	r6, r7, r1, lsl #1
 801c912:	f8bd 1018 	ldrh.w	r1, [sp, #24]
 801c916:	4f5f      	ldr	r7, [pc, #380]	; (801ca94 <_ZN8touchgfx8LCD16bpp8blitCopyEPKtRKNS_4RectES5_hb+0x1d4>)
 801c918:	440a      	add	r2, r1
 801c91a:	f8ad 2020 	strh.w	r2, [sp, #32]
 801c91e:	f8bd 201a 	ldrh.w	r2, [sp, #26]
 801c922:	6838      	ldr	r0, [r7, #0]
 801c924:	4413      	add	r3, r2
 801c926:	f8ad 3022 	strh.w	r3, [sp, #34]	; 0x22
 801c92a:	6803      	ldr	r3, [r0, #0]
 801c92c:	6b9b      	ldr	r3, [r3, #56]	; 0x38
 801c92e:	4798      	blx	r3
 801c930:	f1bb 0fff 	cmp.w	fp, #255	; 0xff
 801c934:	46b9      	mov	r9, r7
 801c936:	d11d      	bne.n	801c974 <_ZN8touchgfx8LCD16bpp8blitCopyEPKtRKNS_4RectES5_hb+0xb4>
 801c938:	b9fc      	cbnz	r4, 801c97a <_ZN8touchgfx8LCD16bpp8blitCopyEPKtRKNS_4RectES5_hb+0xba>
 801c93a:	f010 0f01 	tst.w	r0, #1
 801c93e:	d01c      	beq.n	801c97a <_ZN8touchgfx8LCD16bpp8blitCopyEPKtRKNS_4RectES5_hb+0xba>
 801c940:	f8d9 0000 	ldr.w	r0, [r9]
 801c944:	f8bd 3022 	ldrh.w	r3, [sp, #34]	; 0x22
 801c948:	6801      	ldr	r1, [r0, #0]
 801c94a:	f8cd b00c 	str.w	fp, [sp, #12]
 801c94e:	2700      	movs	r7, #0
 801c950:	e9cd 4704 	strd	r4, r7, [sp, #16]
 801c954:	f8bd 401c 	ldrh.w	r4, [sp, #28]
 801c958:	9402      	str	r4, [sp, #8]
 801c95a:	b2ad      	uxth	r5, r5
 801c95c:	fa1f f488 	uxth.w	r4, r8
 801c960:	9501      	str	r5, [sp, #4]
 801c962:	9400      	str	r4, [sp, #0]
 801c964:	6c4c      	ldr	r4, [r1, #68]	; 0x44
 801c966:	f8bd 2020 	ldrh.w	r2, [sp, #32]
 801c96a:	4631      	mov	r1, r6
 801c96c:	47a0      	blx	r4
 801c96e:	b00b      	add	sp, #44	; 0x2c
 801c970:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
 801c974:	f010 0f04 	tst.w	r0, #4
 801c978:	e7e1      	b.n	801c93e <_ZN8touchgfx8LCD16bpp8blitCopyEPKtRKNS_4RectES5_hb+0x7e>
 801c97a:	f8d9 0000 	ldr.w	r0, [r9]
 801c97e:	6803      	ldr	r3, [r0, #0]
 801c980:	6a9b      	ldr	r3, [r3, #40]	; 0x28
 801c982:	4798      	blx	r3
 801c984:	4b44      	ldr	r3, [pc, #272]	; (801ca98 <_ZN8touchgfx8LCD16bpp8blitCopyEPKtRKNS_4RectES5_hb+0x1d8>)
 801c986:	f9bd 4022 	ldrsh.w	r4, [sp, #34]	; 0x22
 801c98a:	881a      	ldrh	r2, [r3, #0]
 801c98c:	f9bd 1020 	ldrsh.w	r1, [sp, #32]
 801c990:	f1bb 0fff 	cmp.w	fp, #255	; 0xff
 801c994:	fb02 1404 	mla	r4, r2, r4, r1
 801c998:	eb00 0444 	add.w	r4, r0, r4, lsl #1
 801c99c:	469a      	mov	sl, r3
 801c99e:	fb05 f502 	mul.w	r5, r5, r2
 801c9a2:	ea4f 0748 	mov.w	r7, r8, lsl #1
 801c9a6:	d059      	beq.n	801ca5c <_ZN8touchgfx8LCD16bpp8blitCopyEPKtRKNS_4RectES5_hb+0x19c>
 801c9a8:	f1cb 09ff 	rsb	r9, fp, #255	; 0xff
 801c9ac:	eb04 0545 	add.w	r5, r4, r5, lsl #1
 801c9b0:	fa1f f28b 	uxth.w	r2, fp
 801c9b4:	fa1f f989 	uxth.w	r9, r9
 801c9b8:	469e      	mov	lr, r3
 801c9ba:	42ac      	cmp	r4, r5
 801c9bc:	d264      	bcs.n	801ca88 <_ZN8touchgfx8LCD16bpp8blitCopyEPKtRKNS_4RectES5_hb+0x1c8>
 801c9be:	eb04 0a07 	add.w	sl, r4, r7
 801c9c2:	4554      	cmp	r4, sl
 801c9c4:	d23d      	bcs.n	801ca42 <_ZN8touchgfx8LCD16bpp8blitCopyEPKtRKNS_4RectES5_hb+0x182>
 801c9c6:	8821      	ldrh	r1, [r4, #0]
 801c9c8:	f836 3b02 	ldrh.w	r3, [r6], #2
 801c9cc:	1208      	asrs	r0, r1, #8
 801c9ce:	ea4f 2c23 	mov.w	ip, r3, asr #8
 801c9d2:	f000 00f8 	and.w	r0, r0, #248	; 0xf8
 801c9d6:	fb10 f009 	smulbb	r0, r0, r9
 801c9da:	ea4f 0be1 	mov.w	fp, r1, asr #3
 801c9de:	f00c 0cf8 	and.w	ip, ip, #248	; 0xf8
 801c9e2:	00c9      	lsls	r1, r1, #3
 801c9e4:	fb0c 0c02 	mla	ip, ip, r2, r0
 801c9e8:	f00b 0bfc 	and.w	fp, fp, #252	; 0xfc
 801c9ec:	10d8      	asrs	r0, r3, #3
 801c9ee:	b2c9      	uxtb	r1, r1
 801c9f0:	00db      	lsls	r3, r3, #3
 801c9f2:	fa1f fc8c 	uxth.w	ip, ip
 801c9f6:	fb1b fb09 	smulbb	fp, fp, r9
 801c9fa:	f000 00fc 	and.w	r0, r0, #252	; 0xfc
 801c9fe:	b2db      	uxtb	r3, r3
 801ca00:	fb11 f109 	smulbb	r1, r1, r9
 801ca04:	fb00 b002 	mla	r0, r0, r2, fp
 801ca08:	fb03 1302 	mla	r3, r3, r2, r1
 801ca0c:	f10c 0b01 	add.w	fp, ip, #1
 801ca10:	b29b      	uxth	r3, r3
 801ca12:	eb0b 2c1c 	add.w	ip, fp, ip, lsr #8
 801ca16:	b280      	uxth	r0, r0
 801ca18:	f40c 4b78 	and.w	fp, ip, #63488	; 0xf800
 801ca1c:	f103 0c01 	add.w	ip, r3, #1
 801ca20:	eb0c 2c13 	add.w	ip, ip, r3, lsr #8
 801ca24:	1c43      	adds	r3, r0, #1
 801ca26:	eb03 2010 	add.w	r0, r3, r0, lsr #8
 801ca2a:	f3cc 2cc4 	ubfx	ip, ip, #11, #5
 801ca2e:	0940      	lsrs	r0, r0, #5
 801ca30:	ea4c 0c0b 	orr.w	ip, ip, fp
 801ca34:	f400 60fc 	and.w	r0, r0, #2016	; 0x7e0
 801ca38:	ea4c 0c00 	orr.w	ip, ip, r0
 801ca3c:	f824 cb02 	strh.w	ip, [r4], #2
 801ca40:	e7bf      	b.n	801c9c2 <_ZN8touchgfx8LCD16bpp8blitCopyEPKtRKNS_4RectES5_hb+0x102>
 801ca42:	f8be 3000 	ldrh.w	r3, [lr]
 801ca46:	eba3 0308 	sub.w	r3, r3, r8
 801ca4a:	eb04 0443 	add.w	r4, r4, r3, lsl #1
 801ca4e:	f9bd 301c 	ldrsh.w	r3, [sp, #28]
 801ca52:	eba3 0308 	sub.w	r3, r3, r8
 801ca56:	eb06 0643 	add.w	r6, r6, r3, lsl #1
 801ca5a:	e7ae      	b.n	801c9ba <_ZN8touchgfx8LCD16bpp8blitCopyEPKtRKNS_4RectES5_hb+0xfa>
 801ca5c:	eb04 0545 	add.w	r5, r4, r5, lsl #1
 801ca60:	f8d9 0000 	ldr.w	r0, [r9]
 801ca64:	42ac      	cmp	r4, r5
 801ca66:	6803      	ldr	r3, [r0, #0]
 801ca68:	d20e      	bcs.n	801ca88 <_ZN8touchgfx8LCD16bpp8blitCopyEPKtRKNS_4RectES5_hb+0x1c8>
 801ca6a:	f8d3 8034 	ldr.w	r8, [r3, #52]	; 0x34
 801ca6e:	4632      	mov	r2, r6
 801ca70:	463b      	mov	r3, r7
 801ca72:	4621      	mov	r1, r4
 801ca74:	47c0      	blx	r8
 801ca76:	f8ba 3000 	ldrh.w	r3, [sl]
 801ca7a:	eb04 0443 	add.w	r4, r4, r3, lsl #1
 801ca7e:	f9bd 301c 	ldrsh.w	r3, [sp, #28]
 801ca82:	eb06 0643 	add.w	r6, r6, r3, lsl #1
 801ca86:	e7eb      	b.n	801ca60 <_ZN8touchgfx8LCD16bpp8blitCopyEPKtRKNS_4RectES5_hb+0x1a0>
 801ca88:	4b02      	ldr	r3, [pc, #8]	; (801ca94 <_ZN8touchgfx8LCD16bpp8blitCopyEPKtRKNS_4RectES5_hb+0x1d4>)
 801ca8a:	6818      	ldr	r0, [r3, #0]
 801ca8c:	6803      	ldr	r3, [r0, #0]
 801ca8e:	6adb      	ldr	r3, [r3, #44]	; 0x2c
 801ca90:	4798      	blx	r3
 801ca92:	e76c      	b.n	801c96e <_ZN8touchgfx8LCD16bpp8blitCopyEPKtRKNS_4RectES5_hb+0xae>
 801ca94:	2001381c 	.word	0x2001381c
 801ca98:	20013816 	.word	0x20013816

0801ca9c <_ZN8touchgfx8LCD16bppD0Ev>:
 801ca9c:	b510      	push	{r4, lr}
 801ca9e:	2184      	movs	r1, #132	; 0x84
 801caa0:	4604      	mov	r4, r0
 801caa2:	f00d fe4a 	bl	802a73a <_ZdlPvj>
 801caa6:	4620      	mov	r0, r4
 801caa8:	bd10      	pop	{r4, pc}

0801caaa <_ZN8touchgfx8LCD16bpp17DecompressorL8_L4D0Ev>:
 801caaa:	b510      	push	{r4, lr}
 801caac:	2104      	movs	r1, #4
 801caae:	4604      	mov	r4, r0
 801cab0:	f00d fe43 	bl	802a73a <_ZdlPvj>
 801cab4:	4620      	mov	r0, r4
 801cab6:	bd10      	pop	{r4, pc}

0801cab8 <_ZN8touchgfx8LCD16bpp18DecompressorL8_RLED0Ev>:
 801cab8:	b510      	push	{r4, lr}
 801caba:	2104      	movs	r1, #4
 801cabc:	4604      	mov	r4, r0
 801cabe:	f00d fe3c 	bl	802a73a <_ZdlPvj>
 801cac2:	4620      	mov	r0, r4
 801cac4:	bd10      	pop	{r4, pc}

0801cac6 <_ZN8touchgfx8LCD16bpp19DecompressorL8_LZW9D0Ev>:
 801cac6:	b510      	push	{r4, lr}
 801cac8:	f640 0144 	movw	r1, #2116	; 0x844
 801cacc:	4604      	mov	r4, r0
 801cace:	f00d fe34 	bl	802a73a <_ZdlPvj>
 801cad2:	4620      	mov	r0, r4
 801cad4:	bd10      	pop	{r4, pc}

0801cad6 <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_NoGAD0Ev>:
 801cad6:	b510      	push	{r4, lr}
 801cad8:	2104      	movs	r1, #4
 801cada:	4604      	mov	r4, r0
 801cadc:	f00d fe2d 	bl	802a73a <_ZdlPvj>
 801cae0:	4620      	mov	r0, r4
 801cae2:	bd10      	pop	{r4, pc}

0801cae4 <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_GAD0Ev>:
 801cae4:	b510      	push	{r4, lr}
 801cae6:	2104      	movs	r1, #4
 801cae8:	4604      	mov	r4, r0
 801caea:	f00d fe26 	bl	802a73a <_ZdlPvj>
 801caee:	4620      	mov	r0, r4
 801caf0:	bd10      	pop	{r4, pc}

0801caf2 <_ZN8touchgfx8LCD16bpp51TextureMapper_L8_RGB565_Opaque_NearestNeighbor_NoGAD0Ev>:
 801caf2:	b510      	push	{r4, lr}
 801caf4:	2104      	movs	r1, #4
 801caf6:	4604      	mov	r4, r0
 801caf8:	f00d fe1f 	bl	802a73a <_ZdlPvj>
 801cafc:	4620      	mov	r0, r4
 801cafe:	bd10      	pop	{r4, pc}

0801cb00 <_ZN8touchgfx8LCD16bpp49TextureMapper_L8_RGB565_Opaque_NearestNeighbor_GAD0Ev>:
 801cb00:	b510      	push	{r4, lr}
 801cb02:	2104      	movs	r1, #4
 801cb04:	4604      	mov	r4, r0
 801cb06:	f00d fe18 	bl	802a73a <_ZdlPvj>
 801cb0a:	4620      	mov	r0, r4
 801cb0c:	bd10      	pop	{r4, pc}

0801cb0e <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_NoGAD0Ev>:
 801cb0e:	b510      	push	{r4, lr}
 801cb10:	2104      	movs	r1, #4
 801cb12:	4604      	mov	r4, r0
 801cb14:	f00d fe11 	bl	802a73a <_ZdlPvj>
 801cb18:	4620      	mov	r0, r4
 801cb1a:	bd10      	pop	{r4, pc}

0801cb1c <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_GAD0Ev>:
 801cb1c:	b510      	push	{r4, lr}
 801cb1e:	2104      	movs	r1, #4
 801cb20:	4604      	mov	r4, r0
 801cb22:	f00d fe0a 	bl	802a73a <_ZdlPvj>
 801cb26:	4620      	mov	r0, r4
 801cb28:	bd10      	pop	{r4, pc}

0801cb2a <_ZN8touchgfx8LCD16bpp51TextureMapper_L8_RGB888_Opaque_NearestNeighbor_NoGAD0Ev>:
 801cb2a:	b510      	push	{r4, lr}
 801cb2c:	2104      	movs	r1, #4
 801cb2e:	4604      	mov	r4, r0
 801cb30:	f00d fe03 	bl	802a73a <_ZdlPvj>
 801cb34:	4620      	mov	r0, r4
 801cb36:	bd10      	pop	{r4, pc}

0801cb38 <_ZN8touchgfx8LCD16bpp49TextureMapper_L8_RGB888_Opaque_NearestNeighbor_GAD0Ev>:
 801cb38:	b510      	push	{r4, lr}
 801cb3a:	2104      	movs	r1, #4
 801cb3c:	4604      	mov	r4, r0
 801cb3e:	f00d fdfc 	bl	802a73a <_ZdlPvj>
 801cb42:	4620      	mov	r0, r4
 801cb44:	bd10      	pop	{r4, pc}

0801cb46 <_ZN8touchgfx8LCD16bpp62TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGAD0Ev>:
 801cb46:	b510      	push	{r4, lr}
 801cb48:	2104      	movs	r1, #4
 801cb4a:	4604      	mov	r4, r0
 801cb4c:	f00d fdf5 	bl	802a73a <_ZdlPvj>
 801cb50:	4620      	mov	r0, r4
 801cb52:	bd10      	pop	{r4, pc}

0801cb54 <_ZN8touchgfx8LCD16bpp60TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_GAD0Ev>:
 801cb54:	b510      	push	{r4, lr}
 801cb56:	2104      	movs	r1, #4
 801cb58:	4604      	mov	r4, r0
 801cb5a:	f00d fdee 	bl	802a73a <_ZdlPvj>
 801cb5e:	4620      	mov	r0, r4
 801cb60:	bd10      	pop	{r4, pc}

0801cb62 <_ZN8touchgfx8LCD16bpp56TextureMapper_L8_ARGB8888_NonOpaque_NearestNeighbor_NoGAD0Ev>:
 801cb62:	b510      	push	{r4, lr}
 801cb64:	2104      	movs	r1, #4
 801cb66:	4604      	mov	r4, r0
 801cb68:	f00d fde7 	bl	802a73a <_ZdlPvj>
 801cb6c:	4620      	mov	r0, r4
 801cb6e:	bd10      	pop	{r4, pc}

0801cb70 <_ZN8touchgfx8LCD16bpp54TextureMapper_L8_ARGB8888_NonOpaque_NearestNeighbor_GAD0Ev>:
 801cb70:	b510      	push	{r4, lr}
 801cb72:	2104      	movs	r1, #4
 801cb74:	4604      	mov	r4, r0
 801cb76:	f00d fde0 	bl	802a73a <_ZdlPvj>
 801cb7a:	4620      	mov	r0, r4
 801cb7c:	bd10      	pop	{r4, pc}

0801cb7e <_ZN8touchgfx8LCD16bpp54TextureMapper_RGB565_Opaque_BilinearInterpolation_NoGAD0Ev>:
 801cb7e:	b510      	push	{r4, lr}
 801cb80:	2104      	movs	r1, #4
 801cb82:	4604      	mov	r4, r0
 801cb84:	f00d fdd9 	bl	802a73a <_ZdlPvj>
 801cb88:	4620      	mov	r0, r4
 801cb8a:	bd10      	pop	{r4, pc}

0801cb8c <_ZN8touchgfx8LCD16bpp52TextureMapper_RGB565_Opaque_BilinearInterpolation_GAD0Ev>:
 801cb8c:	b510      	push	{r4, lr}
 801cb8e:	2104      	movs	r1, #4
 801cb90:	4604      	mov	r4, r0
 801cb92:	f00d fdd2 	bl	802a73a <_ZdlPvj>
 801cb96:	4620      	mov	r0, r4
 801cb98:	bd10      	pop	{r4, pc}

0801cb9a <_ZN8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGAD0Ev>:
 801cb9a:	b510      	push	{r4, lr}
 801cb9c:	2104      	movs	r1, #4
 801cb9e:	4604      	mov	r4, r0
 801cba0:	f00d fdcb 	bl	802a73a <_ZdlPvj>
 801cba4:	4620      	mov	r0, r4
 801cba6:	bd10      	pop	{r4, pc}

0801cba8 <_ZN8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GAD0Ev>:
 801cba8:	b510      	push	{r4, lr}
 801cbaa:	2104      	movs	r1, #4
 801cbac:	4604      	mov	r4, r0
 801cbae:	f00d fdc4 	bl	802a73a <_ZdlPvj>
 801cbb2:	4620      	mov	r0, r4
 801cbb4:	bd10      	pop	{r4, pc}

0801cbb6 <_ZN8touchgfx8LCD16bpp48TextureMapper_RGB565_Opaque_NearestNeighbor_NoGAD0Ev>:
 801cbb6:	b510      	push	{r4, lr}
 801cbb8:	2104      	movs	r1, #4
 801cbba:	4604      	mov	r4, r0
 801cbbc:	f00d fdbd 	bl	802a73a <_ZdlPvj>
 801cbc0:	4620      	mov	r0, r4
 801cbc2:	bd10      	pop	{r4, pc}

0801cbc4 <_ZN8touchgfx8LCD16bpp46TextureMapper_RGB565_Opaque_NearestNeighbor_GAD0Ev>:
 801cbc4:	b510      	push	{r4, lr}
 801cbc6:	2104      	movs	r1, #4
 801cbc8:	4604      	mov	r4, r0
 801cbca:	f00d fdb6 	bl	802a73a <_ZdlPvj>
 801cbce:	4620      	mov	r0, r4
 801cbd0:	bd10      	pop	{r4, pc}

0801cbd2 <_ZN8touchgfx8LCD16bpp51TextureMapper_RGB565_NonOpaque_NearestNeighbor_NoGAD0Ev>:
 801cbd2:	b510      	push	{r4, lr}
 801cbd4:	2104      	movs	r1, #4
 801cbd6:	4604      	mov	r4, r0
 801cbd8:	f00d fdaf 	bl	802a73a <_ZdlPvj>
 801cbdc:	4620      	mov	r0, r4
 801cbde:	bd10      	pop	{r4, pc}

0801cbe0 <_ZN8touchgfx8LCD16bpp49TextureMapper_RGB565_NonOpaque_NearestNeighbor_GAD0Ev>:
 801cbe0:	b510      	push	{r4, lr}
 801cbe2:	2104      	movs	r1, #4
 801cbe4:	4604      	mov	r4, r0
 801cbe6:	f00d fda8 	bl	802a73a <_ZdlPvj>
 801cbea:	4620      	mov	r0, r4
 801cbec:	bd10      	pop	{r4, pc}

0801cbee <_ZN8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGAD0Ev>:
 801cbee:	b510      	push	{r4, lr}
 801cbf0:	2104      	movs	r1, #4
 801cbf2:	4604      	mov	r4, r0
 801cbf4:	f00d fda1 	bl	802a73a <_ZdlPvj>
 801cbf8:	4620      	mov	r0, r4
 801cbfa:	bd10      	pop	{r4, pc}

0801cbfc <_ZN8touchgfx8LCD16bpp57TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_GAD0Ev>:
 801cbfc:	b510      	push	{r4, lr}
 801cbfe:	2104      	movs	r1, #4
 801cc00:	4604      	mov	r4, r0
 801cc02:	f00d fd9a 	bl	802a73a <_ZdlPvj>
 801cc06:	4620      	mov	r0, r4
 801cc08:	bd10      	pop	{r4, pc}

0801cc0a <_ZN8touchgfx8LCD16bpp53TextureMapper_ARGB8888_NonOpaque_NearestNeighbor_NoGAD0Ev>:
 801cc0a:	b510      	push	{r4, lr}
 801cc0c:	2104      	movs	r1, #4
 801cc0e:	4604      	mov	r4, r0
 801cc10:	f00d fd93 	bl	802a73a <_ZdlPvj>
 801cc14:	4620      	mov	r0, r4
 801cc16:	bd10      	pop	{r4, pc}

0801cc18 <_ZN8touchgfx8LCD16bpp51TextureMapper_ARGB8888_NonOpaque_NearestNeighbor_GAD0Ev>:
 801cc18:	b510      	push	{r4, lr}
 801cc1a:	2104      	movs	r1, #4
 801cc1c:	4604      	mov	r4, r0
 801cc1e:	f00d fd8c 	bl	802a73a <_ZdlPvj>
 801cc22:	4620      	mov	r0, r4
 801cc24:	bd10      	pop	{r4, pc}

0801cc26 <_ZN8touchgfx8LCD16bpp43TextureMapper_A4_BilinearInterpolation_NoGAD0Ev>:
 801cc26:	b510      	push	{r4, lr}
 801cc28:	2104      	movs	r1, #4
 801cc2a:	4604      	mov	r4, r0
 801cc2c:	f00d fd85 	bl	802a73a <_ZdlPvj>
 801cc30:	4620      	mov	r0, r4
 801cc32:	bd10      	pop	{r4, pc}

0801cc34 <_ZN8touchgfx8LCD16bpp41TextureMapper_A4_BilinearInterpolation_GAD0Ev>:
 801cc34:	b510      	push	{r4, lr}
 801cc36:	2104      	movs	r1, #4
 801cc38:	4604      	mov	r4, r0
 801cc3a:	f00d fd7e 	bl	802a73a <_ZdlPvj>
 801cc3e:	4620      	mov	r0, r4
 801cc40:	bd10      	pop	{r4, pc}

0801cc42 <_ZN8touchgfx8LCD16bpp37TextureMapper_A4_NearestNeighbor_NoGAD0Ev>:
 801cc42:	b510      	push	{r4, lr}
 801cc44:	2104      	movs	r1, #4
 801cc46:	4604      	mov	r4, r0
 801cc48:	f00d fd77 	bl	802a73a <_ZdlPvj>
 801cc4c:	4620      	mov	r0, r4
 801cc4e:	bd10      	pop	{r4, pc}

0801cc50 <_ZN8touchgfx8LCD16bpp35TextureMapper_A4_NearestNeighbor_GAD0Ev>:
 801cc50:	b510      	push	{r4, lr}
 801cc52:	2104      	movs	r1, #4
 801cc54:	4604      	mov	r4, r0
 801cc56:	f00d fd70 	bl	802a73a <_ZdlPvj>
 801cc5a:	4620      	mov	r0, r4
 801cc5c:	bd10      	pop	{r4, pc}
	...

0801cc60 <_ZN8touchgfx8LCD16bpp18DecompressorL8_RLE14blitCopyRGB565EPKhS3_RKNS_4RectES6_h>:
 801cc60:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 801cc64:	b08f      	sub	sp, #60	; 0x3c
 801cc66:	461c      	mov	r4, r3
 801cc68:	9205      	str	r2, [sp, #20]
 801cc6a:	f89d 2064 	ldrb.w	r2, [sp, #100]	; 0x64
 801cc6e:	9100      	str	r1, [sp, #0]
 801cc70:	9b18      	ldr	r3, [sp, #96]	; 0x60
 801cc72:	9201      	str	r2, [sp, #4]
 801cc74:	2a00      	cmp	r2, #0
 801cc76:	f000 8115 	beq.w	801cea4 <_ZN8touchgfx8LCD16bpp18DecompressorL8_RLE14blitCopyRGB565EPKhS3_RKNS_4RectES6_h+0x244>
 801cc7a:	6820      	ldr	r0, [r4, #0]
 801cc7c:	6861      	ldr	r1, [r4, #4]
 801cc7e:	aa0a      	add	r2, sp, #40	; 0x28
 801cc80:	c203      	stmia	r2!, {r0, r1}
 801cc82:	6818      	ldr	r0, [r3, #0]
 801cc84:	6859      	ldr	r1, [r3, #4]
 801cc86:	aa0c      	add	r2, sp, #48	; 0x30
 801cc88:	c203      	stmia	r2!, {r0, r1}
 801cc8a:	a80a      	add	r0, sp, #40	; 0x28
 801cc8c:	f7f9 faec 	bl	8016268 <_ZN8touchgfx21DisplayTransformation29transformDisplayToFrameBufferERNS_4RectE>
 801cc90:	4621      	mov	r1, r4
 801cc92:	a80c      	add	r0, sp, #48	; 0x30
 801cc94:	f7f9 fb2c 	bl	80162f0 <_ZN8touchgfx21DisplayTransformation29transformDisplayToFrameBufferERNS_4RectERKS1_>
 801cc98:	f9bd 602c 	ldrsh.w	r6, [sp, #44]	; 0x2c
 801cc9c:	f9bd 502e 	ldrsh.w	r5, [sp, #46]	; 0x2e
 801cca0:	f8bd 0030 	ldrh.w	r0, [sp, #48]	; 0x30
 801cca4:	f5b6 6f80 	cmp.w	r6, #1024	; 0x400
 801cca8:	bfde      	ittt	le
 801ccaa:	b2b3      	uxthle	r3, r6
 801ccac:	f44f 6280 	movle.w	r2, #1024	; 0x400
 801ccb0:	fb92 f3f3 	sdivle	r3, r2, r3
 801ccb4:	f9bd 2032 	ldrsh.w	r2, [sp, #50]	; 0x32
 801ccb8:	bfc8      	it	gt
 801ccba:	2301      	movgt	r3, #1
 801ccbc:	fb92 f1f3 	sdiv	r1, r2, r3
 801ccc0:	fa1f fc81 	uxth.w	ip, r1
 801ccc4:	fb0c 2413 	mls	r4, ip, r3, r2
 801ccc8:	fb14 f406 	smulbb	r4, r4, r6
 801cccc:	441d      	add	r5, r3
 801ccce:	4404      	add	r4, r0
 801ccd0:	4661      	mov	r1, ip
 801ccd2:	3d01      	subs	r5, #1
 801ccd4:	b2a4      	uxth	r4, r4
 801ccd6:	fb95 f5f3 	sdiv	r5, r5, r3
 801ccda:	b131      	cbz	r1, 801ccea <_ZN8touchgfx8LCD16bpp18DecompressorL8_RLE14blitCopyRGB565EPKhS3_RKNS_4RectES6_h+0x8a>
 801ccdc:	9b05      	ldr	r3, [sp, #20]
 801ccde:	9900      	ldr	r1, [sp, #0]
 801cce0:	f853 302c 	ldr.w	r3, [r3, ip, lsl #2]
 801cce4:	ba1b      	rev	r3, r3
 801cce6:	4419      	add	r1, r3
 801cce8:	9100      	str	r1, [sp, #0]
 801ccea:	f8bd 3028 	ldrh.w	r3, [sp, #40]	; 0x28
 801ccee:	f9bd 8034 	ldrsh.w	r8, [sp, #52]	; 0x34
 801ccf2:	f9bd 6036 	ldrsh.w	r6, [sp, #54]	; 0x36
 801ccf6:	4418      	add	r0, r3
 801ccf8:	f8bd 302a 	ldrh.w	r3, [sp, #42]	; 0x2a
 801ccfc:	f8ad 0030 	strh.w	r0, [sp, #48]	; 0x30
 801cd00:	441a      	add	r2, r3
 801cd02:	4b6a      	ldr	r3, [pc, #424]	; (801ceac <_ZN8touchgfx8LCD16bpp18DecompressorL8_RLE14blitCopyRGB565EPKhS3_RKNS_4RectES6_h+0x24c>)
 801cd04:	f8ad 2032 	strh.w	r2, [sp, #50]	; 0x32
 801cd08:	6818      	ldr	r0, [r3, #0]
 801cd0a:	6803      	ldr	r3, [r0, #0]
 801cd0c:	6a9b      	ldr	r3, [r3, #40]	; 0x28
 801cd0e:	4798      	blx	r3
 801cd10:	4967      	ldr	r1, [pc, #412]	; (801ceb0 <_ZN8touchgfx8LCD16bpp18DecompressorL8_RLE14blitCopyRGB565EPKhS3_RKNS_4RectES6_h+0x250>)
 801cd12:	f9bd 2032 	ldrsh.w	r2, [sp, #50]	; 0x32
 801cd16:	880b      	ldrh	r3, [r1, #0]
 801cd18:	f9bd c030 	ldrsh.w	ip, [sp, #48]	; 0x30
 801cd1c:	9109      	str	r1, [sp, #36]	; 0x24
 801cd1e:	fb03 c202 	mla	r2, r3, r2, ip
 801cd22:	eb00 0042 	add.w	r0, r0, r2, lsl #1
 801cd26:	4373      	muls	r3, r6
 801cd28:	b2ad      	uxth	r5, r5
 801cd2a:	eb00 0343 	add.w	r3, r0, r3, lsl #1
 801cd2e:	00ad      	lsls	r5, r5, #2
 801cd30:	9306      	str	r3, [sp, #24]
 801cd32:	1d2b      	adds	r3, r5, #4
 801cd34:	9307      	str	r3, [sp, #28]
 801cd36:	9b01      	ldr	r3, [sp, #4]
 801cd38:	f8bd 1004 	ldrh.w	r1, [sp, #4]
 801cd3c:	9103      	str	r1, [sp, #12]
 801cd3e:	f1c3 02ff 	rsb	r2, r3, #255	; 0xff
 801cd42:	2c00      	cmp	r4, #0
 801cd44:	bf0c      	ite	eq
 801cd46:	46c6      	moveq	lr, r8
 801cd48:	f04f 0e00 	movne.w	lr, #0
 801cd4c:	2300      	movs	r3, #0
 801cd4e:	b292      	uxth	r2, r2
 801cd50:	fa1f fe8e 	uxth.w	lr, lr
 801cd54:	9302      	str	r3, [sp, #8]
 801cd56:	9204      	str	r2, [sp, #16]
 801cd58:	9a06      	ldr	r2, [sp, #24]
 801cd5a:	4282      	cmp	r2, r0
 801cd5c:	f240 809d 	bls.w	801ce9a <_ZN8touchgfx8LCD16bpp18DecompressorL8_RLE14blitCopyRGB565EPKhS3_RKNS_4RectES6_h+0x23a>
 801cd60:	b963      	cbnz	r3, 801cd7c <_ZN8touchgfx8LCD16bpp18DecompressorL8_RLE14blitCopyRGB565EPKhS3_RKNS_4RectES6_h+0x11c>
 801cd62:	9b00      	ldr	r3, [sp, #0]
 801cd64:	781a      	ldrb	r2, [r3, #0]
 801cd66:	0993      	lsrs	r3, r2, #6
 801cd68:	f002 023f 	and.w	r2, r2, #63	; 0x3f
 801cd6c:	9202      	str	r2, [sp, #8]
 801cd6e:	1e5a      	subs	r2, r3, #1
 801cd70:	2a02      	cmp	r2, #2
 801cd72:	d815      	bhi.n	801cda0 <_ZN8touchgfx8LCD16bpp18DecompressorL8_RLE14blitCopyRGB565EPKhS3_RKNS_4RectES6_h+0x140>
 801cd74:	9a00      	ldr	r2, [sp, #0]
 801cd76:	3201      	adds	r2, #1
 801cd78:	9200      	str	r2, [sp, #0]
 801cd7a:	b29b      	uxth	r3, r3
 801cd7c:	b1b4      	cbz	r4, 801cdac <_ZN8touchgfx8LCD16bpp18DecompressorL8_RLE14blitCopyRGB565EPKhS3_RKNS_4RectES6_h+0x14c>
 801cd7e:	429c      	cmp	r4, r3
 801cd80:	bf95      	itete	ls
 801cd82:	1b1c      	subls	r4, r3, r4
 801cd84:	1ae4      	subhi	r4, r4, r3
 801cd86:	fa1f fa84 	uxthls.w	sl, r4
 801cd8a:	b2a4      	uxthhi	r4, r4
 801cd8c:	bf87      	ittee	hi
 801cd8e:	4671      	movhi	r1, lr
 801cd90:	f04f 0a00 	movhi.w	sl, #0
 801cd94:	fa1f f188 	uxthls.w	r1, r8
 801cd98:	2400      	movls	r4, #0
 801cd9a:	4653      	mov	r3, sl
 801cd9c:	468e      	mov	lr, r1
 801cd9e:	e7db      	b.n	801cd58 <_ZN8touchgfx8LCD16bpp18DecompressorL8_RLE14blitCopyRGB565EPKhS3_RKNS_4RectES6_h+0xf8>
 801cda0:	9a00      	ldr	r2, [sp, #0]
 801cda2:	9b00      	ldr	r3, [sp, #0]
 801cda4:	3202      	adds	r2, #2
 801cda6:	785b      	ldrb	r3, [r3, #1]
 801cda8:	9200      	str	r2, [sp, #0]
 801cdaa:	e7e7      	b.n	801cd7c <_ZN8touchgfx8LCD16bpp18DecompressorL8_RLE14blitCopyRGB565EPKhS3_RKNS_4RectES6_h+0x11c>
 801cdac:	2202      	movs	r2, #2
 801cdae:	4615      	mov	r5, r2
 801cdb0:	9907      	ldr	r1, [sp, #28]
 801cdb2:	9a02      	ldr	r2, [sp, #8]
 801cdb4:	fb15 1202 	smlabb	r2, r5, r2, r1
 801cdb8:	9905      	ldr	r1, [sp, #20]
 801cdba:	4573      	cmp	r3, lr
 801cdbc:	f831 c002 	ldrh.w	ip, [r1, r2]
 801cdc0:	9a01      	ldr	r2, [sp, #4]
 801cdc2:	bf2b      	itete	cs
 801cdc4:	eba3 0a0e 	subcs.w	sl, r3, lr
 801cdc8:	ebae 0103 	subcc.w	r1, lr, r3
 801cdcc:	46f1      	movcs	r9, lr
 801cdce:	4699      	movcc	r9, r3
 801cdd0:	bf27      	ittee	cs
 801cdd2:	fa1f fa8a 	uxthcs.w	sl, sl
 801cdd6:	4621      	movcs	r1, r4
 801cdd8:	b289      	uxthcc	r1, r1
 801cdda:	46a2      	movcc	sl, r4
 801cddc:	2aff      	cmp	r2, #255	; 0xff
 801cdde:	ea4f 0949 	mov.w	r9, r9, lsl #1
 801cde2:	d105      	bne.n	801cdf0 <_ZN8touchgfx8LCD16bpp18DecompressorL8_RLE14blitCopyRGB565EPKhS3_RKNS_4RectES6_h+0x190>
 801cde4:	4481      	add	r9, r0
 801cde6:	4581      	cmp	r9, r0
 801cde8:	d045      	beq.n	801ce76 <_ZN8touchgfx8LCD16bpp18DecompressorL8_RLE14blitCopyRGB565EPKhS3_RKNS_4RectES6_h+0x216>
 801cdea:	f820 cb02 	strh.w	ip, [r0], #2
 801cdee:	e7fa      	b.n	801cde6 <_ZN8touchgfx8LCD16bpp18DecompressorL8_RLE14blitCopyRGB565EPKhS3_RKNS_4RectES6_h+0x186>
 801cdf0:	9d03      	ldr	r5, [sp, #12]
 801cdf2:	ea4f 222c 	mov.w	r2, ip, asr #8
 801cdf6:	ea4f 0bec 	mov.w	fp, ip, asr #3
 801cdfa:	f002 02f8 	and.w	r2, r2, #248	; 0xf8
 801cdfe:	ea4f 0ccc 	mov.w	ip, ip, lsl #3
 801ce02:	436a      	muls	r2, r5
 801ce04:	f00b 0bfc 	and.w	fp, fp, #252	; 0xfc
 801ce08:	fa5f fc8c 	uxtb.w	ip, ip
 801ce0c:	9208      	str	r2, [sp, #32]
 801ce0e:	fb0b fb05 	mul.w	fp, fp, r5
 801ce12:	fb0c fc05 	mul.w	ip, ip, r5
 801ce16:	4481      	add	r9, r0
 801ce18:	4581      	cmp	r9, r0
 801ce1a:	d02c      	beq.n	801ce76 <_ZN8touchgfx8LCD16bpp18DecompressorL8_RLE14blitCopyRGB565EPKhS3_RKNS_4RectES6_h+0x216>
 801ce1c:	8802      	ldrh	r2, [r0, #0]
 801ce1e:	9d04      	ldr	r5, [sp, #16]
 801ce20:	9f04      	ldr	r7, [sp, #16]
 801ce22:	1216      	asrs	r6, r2, #8
 801ce24:	f006 06f8 	and.w	r6, r6, #248	; 0xf8
 801ce28:	fb16 f605 	smulbb	r6, r6, r5
 801ce2c:	9d08      	ldr	r5, [sp, #32]
 801ce2e:	442e      	add	r6, r5
 801ce30:	10d5      	asrs	r5, r2, #3
 801ce32:	00d2      	lsls	r2, r2, #3
 801ce34:	b2d2      	uxtb	r2, r2
 801ce36:	fb12 f207 	smulbb	r2, r2, r7
 801ce3a:	b2b6      	uxth	r6, r6
 801ce3c:	f005 05fc 	and.w	r5, r5, #252	; 0xfc
 801ce40:	4462      	add	r2, ip
 801ce42:	fb15 f507 	smulbb	r5, r5, r7
 801ce46:	b292      	uxth	r2, r2
 801ce48:	1c77      	adds	r7, r6, #1
 801ce4a:	eb07 2616 	add.w	r6, r7, r6, lsr #8
 801ce4e:	1c57      	adds	r7, r2, #1
 801ce50:	445d      	add	r5, fp
 801ce52:	eb07 2212 	add.w	r2, r7, r2, lsr #8
 801ce56:	b2ad      	uxth	r5, r5
 801ce58:	f3c2 22c4 	ubfx	r2, r2, #11, #5
 801ce5c:	f406 4678 	and.w	r6, r6, #63488	; 0xf800
 801ce60:	4316      	orrs	r6, r2
 801ce62:	1c6a      	adds	r2, r5, #1
 801ce64:	eb02 2515 	add.w	r5, r2, r5, lsr #8
 801ce68:	096d      	lsrs	r5, r5, #5
 801ce6a:	f405 65fc 	and.w	r5, r5, #2016	; 0x7e0
 801ce6e:	432e      	orrs	r6, r5
 801ce70:	f820 6b02 	strh.w	r6, [r0], #2
 801ce74:	e7d0      	b.n	801ce18 <_ZN8touchgfx8LCD16bpp18DecompressorL8_RLE14blitCopyRGB565EPKhS3_RKNS_4RectES6_h+0x1b8>
 801ce76:	4573      	cmp	r3, lr
 801ce78:	d38f      	bcc.n	801cd9a <_ZN8touchgfx8LCD16bpp18DecompressorL8_RLE14blitCopyRGB565EPKhS3_RKNS_4RectES6_h+0x13a>
 801ce7a:	f8bd 402c 	ldrh.w	r4, [sp, #44]	; 0x2c
 801ce7e:	9b09      	ldr	r3, [sp, #36]	; 0x24
 801ce80:	fa1f f188 	uxth.w	r1, r8
 801ce84:	1a64      	subs	r4, r4, r1
 801ce86:	881b      	ldrh	r3, [r3, #0]
 801ce88:	b2a4      	uxth	r4, r4
 801ce8a:	2c00      	cmp	r4, #0
 801ce8c:	eba3 0308 	sub.w	r3, r3, r8
 801ce90:	bf18      	it	ne
 801ce92:	2100      	movne	r1, #0
 801ce94:	eb00 0043 	add.w	r0, r0, r3, lsl #1
 801ce98:	e77f      	b.n	801cd9a <_ZN8touchgfx8LCD16bpp18DecompressorL8_RLE14blitCopyRGB565EPKhS3_RKNS_4RectES6_h+0x13a>
 801ce9a:	4b04      	ldr	r3, [pc, #16]	; (801ceac <_ZN8touchgfx8LCD16bpp18DecompressorL8_RLE14blitCopyRGB565EPKhS3_RKNS_4RectES6_h+0x24c>)
 801ce9c:	6818      	ldr	r0, [r3, #0]
 801ce9e:	6803      	ldr	r3, [r0, #0]
 801cea0:	6adb      	ldr	r3, [r3, #44]	; 0x2c
 801cea2:	4798      	blx	r3
 801cea4:	b00f      	add	sp, #60	; 0x3c
 801cea6:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
 801ceaa:	bf00      	nop
 801ceac:	2001381c 	.word	0x2001381c
 801ceb0:	20013816 	.word	0x20013816

0801ceb4 <_ZN8touchgfx8LCD16bpp19DecompressorL8_LZW914blitCopyRGB565EPKhS3_RKNS_4RectES6_h>:
 801ceb4:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 801ceb8:	b09f      	sub	sp, #124	; 0x7c
 801ceba:	e9cd 1213 	strd	r1, r2, [sp, #76]	; 0x4c
 801cebe:	f89d 20a4 	ldrb.w	r2, [sp, #164]	; 0xa4
 801cec2:	9209      	str	r2, [sp, #36]	; 0x24
 801cec4:	461d      	mov	r5, r3
 801cec6:	4604      	mov	r4, r0
 801cec8:	9b28      	ldr	r3, [sp, #160]	; 0xa0
 801ceca:	2a00      	cmp	r2, #0
 801cecc:	f000 81eb 	beq.w	801d2a6 <_ZN8touchgfx8LCD16bpp19DecompressorL8_LZW914blitCopyRGB565EPKhS3_RKNS_4RectES6_h+0x3f2>
 801ced0:	6828      	ldr	r0, [r5, #0]
 801ced2:	6869      	ldr	r1, [r5, #4]
 801ced4:	aa1a      	add	r2, sp, #104	; 0x68
 801ced6:	c203      	stmia	r2!, {r0, r1}
 801ced8:	6818      	ldr	r0, [r3, #0]
 801ceda:	6859      	ldr	r1, [r3, #4]
 801cedc:	aa1c      	add	r2, sp, #112	; 0x70
 801cede:	c203      	stmia	r2!, {r0, r1}
 801cee0:	a81a      	add	r0, sp, #104	; 0x68
 801cee2:	f7f9 f9c1 	bl	8016268 <_ZN8touchgfx21DisplayTransformation29transformDisplayToFrameBufferERNS_4RectE>
 801cee6:	4629      	mov	r1, r5
 801cee8:	a81c      	add	r0, sp, #112	; 0x70
 801ceea:	f7f9 fa01 	bl	80162f0 <_ZN8touchgfx21DisplayTransformation29transformDisplayToFrameBufferERNS_4RectERKS1_>
 801ceee:	f9bd 306c 	ldrsh.w	r3, [sp, #108]	; 0x6c
 801cef2:	f9bd 806e 	ldrsh.w	r8, [sp, #110]	; 0x6e
 801cef6:	f9bd 6076 	ldrsh.w	r6, [sp, #118]	; 0x76
 801cefa:	f5b3 6f80 	cmp.w	r3, #1024	; 0x400
 801cefe:	bfd7      	itett	le
 801cf00:	b29a      	uxthle	r2, r3
 801cf02:	2201      	movgt	r2, #1
 801cf04:	f44f 6180 	movle.w	r1, #1024	; 0x400
 801cf08:	fb91 f2f2 	sdivle	r2, r1, r2
 801cf0c:	9202      	str	r2, [sp, #8]
 801cf0e:	9802      	ldr	r0, [sp, #8]
 801cf10:	f9bd 2072 	ldrsh.w	r2, [sp, #114]	; 0x72
 801cf14:	fb92 f0f0 	sdiv	r0, r2, r0
 801cf18:	b280      	uxth	r0, r0
 801cf1a:	9010      	str	r0, [sp, #64]	; 0x40
 801cf1c:	9902      	ldr	r1, [sp, #8]
 801cf1e:	9802      	ldr	r0, [sp, #8]
 801cf20:	9d10      	ldr	r5, [sp, #64]	; 0x40
 801cf22:	4488      	add	r8, r1
 801cf24:	fb05 2510 	mls	r5, r5, r0, r2
 801cf28:	fb15 f503 	smulbb	r5, r5, r3
 801cf2c:	f108 38ff 	add.w	r8, r8, #4294967295
 801cf30:	f8bd 3068 	ldrh.w	r3, [sp, #104]	; 0x68
 801cf34:	fb98 f8f1 	sdiv	r8, r8, r1
 801cf38:	f8bd 1070 	ldrh.w	r1, [sp, #112]	; 0x70
 801cf3c:	440d      	add	r5, r1
 801cf3e:	4419      	add	r1, r3
 801cf40:	f8bd 306a 	ldrh.w	r3, [sp, #106]	; 0x6a
 801cf44:	f8ad 1070 	strh.w	r1, [sp, #112]	; 0x70
 801cf48:	441a      	add	r2, r3
 801cf4a:	f9bd 3074 	ldrsh.w	r3, [sp, #116]	; 0x74
 801cf4e:	9304      	str	r3, [sp, #16]
 801cf50:	4b95      	ldr	r3, [pc, #596]	; (801d1a8 <_ZN8touchgfx8LCD16bpp19DecompressorL8_LZW914blitCopyRGB565EPKhS3_RKNS_4RectES6_h+0x2f4>)
 801cf52:	f8ad 2072 	strh.w	r2, [sp, #114]	; 0x72
 801cf56:	6818      	ldr	r0, [r3, #0]
 801cf58:	6803      	ldr	r3, [r0, #0]
 801cf5a:	6a9b      	ldr	r3, [r3, #40]	; 0x28
 801cf5c:	4798      	blx	r3
 801cf5e:	4b93      	ldr	r3, [pc, #588]	; (801d1ac <_ZN8touchgfx8LCD16bpp19DecompressorL8_LZW914blitCopyRGB565EPKhS3_RKNS_4RectES6_h+0x2f8>)
 801cf60:	f9bd 1072 	ldrsh.w	r1, [sp, #114]	; 0x72
 801cf64:	881a      	ldrh	r2, [r3, #0]
 801cf66:	f9bd 7070 	ldrsh.w	r7, [sp, #112]	; 0x70
 801cf6a:	9318      	str	r3, [sp, #96]	; 0x60
 801cf6c:	fb02 7101 	mla	r1, r2, r1, r7
 801cf70:	eb00 0041 	add.w	r0, r0, r1, lsl #1
 801cf74:	4356      	muls	r6, r2
 801cf76:	eb00 0246 	add.w	r2, r0, r6, lsl #1
 801cf7a:	f108 0801 	add.w	r8, r8, #1
 801cf7e:	920a      	str	r2, [sp, #40]	; 0x28
 801cf80:	9a14      	ldr	r2, [sp, #80]	; 0x50
 801cf82:	f8bd 3024 	ldrh.w	r3, [sp, #36]	; 0x24
 801cf86:	930f      	str	r3, [sp, #60]	; 0x3c
 801cf88:	fa1f f888 	uxth.w	r8, r8
 801cf8c:	eb02 0888 	add.w	r8, r2, r8, lsl #2
 801cf90:	f108 0204 	add.w	r2, r8, #4
 801cf94:	9211      	str	r2, [sp, #68]	; 0x44
 801cf96:	9a09      	ldr	r2, [sp, #36]	; 0x24
 801cf98:	4b85      	ldr	r3, [pc, #532]	; (801d1b0 <_ZN8touchgfx8LCD16bpp19DecompressorL8_LZW914blitCopyRGB565EPKhS3_RKNS_4RectES6_h+0x2fc>)
 801cf9a:	f1c2 02ff 	rsb	r2, r2, #255	; 0xff
 801cf9e:	b2ad      	uxth	r5, r5
 801cfa0:	9215      	str	r2, [sp, #84]	; 0x54
 801cfa2:	2d00      	cmp	r5, #0
 801cfa4:	9a04      	ldr	r2, [sp, #16]
 801cfa6:	f04f 0100 	mov.w	r1, #0
 801cfaa:	bf18      	it	ne
 801cfac:	2200      	movne	r2, #0
 801cfae:	1b1b      	subs	r3, r3, r4
 801cfb0:	b292      	uxth	r2, r2
 801cfb2:	910d      	str	r1, [sp, #52]	; 0x34
 801cfb4:	9319      	str	r3, [sp, #100]	; 0x64
 801cfb6:	9910      	ldr	r1, [sp, #64]	; 0x40
 801cfb8:	9b0d      	ldr	r3, [sp, #52]	; 0x34
 801cfba:	fa11 f383 	uxtah	r3, r1, r3
 801cfbe:	9914      	ldr	r1, [sp, #80]	; 0x50
 801cfc0:	eb01 0383 	add.w	r3, r1, r3, lsl #2
 801cfc4:	3304      	adds	r3, #4
 801cfc6:	9306      	str	r3, [sp, #24]
 801cfc8:	9b0a      	ldr	r3, [sp, #40]	; 0x28
 801cfca:	4283      	cmp	r3, r0
 801cfcc:	f240 8166 	bls.w	801d29c <_ZN8touchgfx8LCD16bpp19DecompressorL8_LZW914blitCopyRGB565EPKhS3_RKNS_4RectES6_h+0x3e8>
 801cfd0:	9902      	ldr	r1, [sp, #8]
 801cfd2:	f8bd 306c 	ldrh.w	r3, [sp, #108]	; 0x6c
 801cfd6:	fbb5 f3f3 	udiv	r3, r5, r3
 801cfda:	1acb      	subs	r3, r1, r3
 801cfdc:	b29b      	uxth	r3, r3
 801cfde:	9316      	str	r3, [sp, #88]	; 0x58
 801cfe0:	9b06      	ldr	r3, [sp, #24]
 801cfe2:	9e06      	ldr	r6, [sp, #24]
 801cfe4:	7859      	ldrb	r1, [r3, #1]
 801cfe6:	789b      	ldrb	r3, [r3, #2]
 801cfe8:	7836      	ldrb	r6, [r6, #0]
 801cfea:	9612      	str	r6, [sp, #72]	; 0x48
 801cfec:	021b      	lsls	r3, r3, #8
 801cfee:	ea43 4301 	orr.w	r3, r3, r1, lsl #16
 801cff2:	9906      	ldr	r1, [sp, #24]
 801cff4:	78c9      	ldrb	r1, [r1, #3]
 801cff6:	430b      	orrs	r3, r1
 801cff8:	9913      	ldr	r1, [sp, #76]	; 0x4c
 801cffa:	3601      	adds	r6, #1
 801cffc:	4419      	add	r1, r3
 801cffe:	9605      	str	r6, [sp, #20]
 801d000:	1c4e      	adds	r6, r1, #1
 801d002:	9603      	str	r6, [sp, #12]
 801d004:	7849      	ldrb	r1, [r1, #1]
 801d006:	9e13      	ldr	r6, [sp, #76]	; 0x4c
 801d008:	0209      	lsls	r1, r1, #8
 801d00a:	5cf3      	ldrb	r3, [r6, r3]
 801d00c:	f401 71ff 	and.w	r1, r1, #510	; 0x1fe
 801d010:	4319      	orrs	r1, r3
 801d012:	b28b      	uxth	r3, r1
 801d014:	930c      	str	r3, [sp, #48]	; 0x30
 801d016:	2300      	movs	r3, #0
 801d018:	f04f 0a01 	mov.w	sl, #1
 801d01c:	9307      	str	r3, [sp, #28]
 801d01e:	469c      	mov	ip, r3
 801d020:	f8bd 3054 	ldrh.w	r3, [sp, #84]	; 0x54
 801d024:	f884 1804 	strb.w	r1, [r4, #2052]	; 0x804
 801d028:	46d3      	mov	fp, sl
 801d02a:	4657      	mov	r7, sl
 801d02c:	930e      	str	r3, [sp, #56]	; 0x38
 801d02e:	2d00      	cmp	r5, #0
 801d030:	d07e      	beq.n	801d130 <_ZN8touchgfx8LCD16bpp19DecompressorL8_LZW914blitCopyRGB565EPKhS3_RKNS_4RectES6_h+0x27c>
 801d032:	42af      	cmp	r7, r5
 801d034:	d26e      	bcs.n	801d114 <_ZN8touchgfx8LCD16bpp19DecompressorL8_LZW914blitCopyRGB565EPKhS3_RKNS_4RectES6_h+0x260>
 801d036:	9b0a      	ldr	r3, [sp, #40]	; 0x28
 801d038:	9201      	str	r2, [sp, #4]
 801d03a:	1bed      	subs	r5, r5, r7
 801d03c:	4283      	cmp	r3, r0
 801d03e:	b2ad      	uxth	r5, r5
 801d040:	d802      	bhi.n	801d048 <_ZN8touchgfx8LCD16bpp19DecompressorL8_LZW914blitCopyRGB565EPKhS3_RKNS_4RectES6_h+0x194>
 801d042:	e073      	b.n	801d12c <_ZN8touchgfx8LCD16bpp19DecompressorL8_LZW914blitCopyRGB565EPKhS3_RKNS_4RectES6_h+0x278>
 801d044:	2b00      	cmp	r3, #0
 801d046:	d15f      	bne.n	801d108 <_ZN8touchgfx8LCD16bpp19DecompressorL8_LZW914blitCopyRGB565EPKhS3_RKNS_4RectES6_h+0x254>
 801d048:	9b03      	ldr	r3, [sp, #12]
 801d04a:	785b      	ldrb	r3, [r3, #1]
 801d04c:	f1cb 0207 	rsb	r2, fp, #7
 801d050:	4093      	lsls	r3, r2
 801d052:	005b      	lsls	r3, r3, #1
 801d054:	f403 72ff 	and.w	r2, r3, #510	; 0x1fe
 801d058:	9b03      	ldr	r3, [sp, #12]
 801d05a:	781b      	ldrb	r3, [r3, #0]
 801d05c:	fa43 f30b 	asr.w	r3, r3, fp
 801d060:	b2db      	uxtb	r3, r3
 801d062:	4313      	orrs	r3, r2
 801d064:	f10b 0201 	add.w	r2, fp, #1
 801d068:	fa5f fb82 	uxtb.w	fp, r2
 801d06c:	9a03      	ldr	r2, [sp, #12]
 801d06e:	f1bb 0f08 	cmp.w	fp, #8
 801d072:	bf15      	itete	ne
 801d074:	3201      	addne	r2, #1
 801d076:	3202      	addeq	r2, #2
 801d078:	9203      	strne	r2, [sp, #12]
 801d07a:	9203      	streq	r2, [sp, #12]
 801d07c:	9a12      	ldr	r2, [sp, #72]	; 0x48
 801d07e:	b29f      	uxth	r7, r3
 801d080:	bf08      	it	eq
 801d082:	f04f 0b00 	moveq.w	fp, #0
 801d086:	42ba      	cmp	r2, r7
 801d088:	d309      	bcc.n	801d09e <_ZN8touchgfx8LCD16bpp19DecompressorL8_LZW914blitCopyRGB565EPKhS3_RKNS_4RectES6_h+0x1ea>
 801d08a:	f884 3804 	strb.w	r3, [r4, #2052]	; 0x804
 801d08e:	2301      	movs	r3, #1
 801d090:	9a05      	ldr	r2, [sp, #20]
 801d092:	f5b2 7f00 	cmp.w	r2, #512	; 0x200
 801d096:	d30e      	bcc.n	801d0b6 <_ZN8touchgfx8LCD16bpp19DecompressorL8_LZW914blitCopyRGB565EPKhS3_RKNS_4RectES6_h+0x202>
 801d098:	469a      	mov	sl, r3
 801d09a:	2600      	movs	r6, #0
 801d09c:	e035      	b.n	801d10a <_ZN8touchgfx8LCD16bpp19DecompressorL8_LZW914blitCopyRGB565EPKhS3_RKNS_4RectES6_h+0x256>
 801d09e:	9b05      	ldr	r3, [sp, #20]
 801d0a0:	429f      	cmp	r7, r3
 801d0a2:	d318      	bcc.n	801d0d6 <_ZN8touchgfx8LCD16bpp19DecompressorL8_LZW914blitCopyRGB565EPKhS3_RKNS_4RectES6_h+0x222>
 801d0a4:	eb04 030a 	add.w	r3, r4, sl
 801d0a8:	f894 2804 	ldrb.w	r2, [r4, #2052]	; 0x804
 801d0ac:	f883 2804 	strb.w	r2, [r3, #2052]	; 0x804
 801d0b0:	f10a 0301 	add.w	r3, sl, #1
 801d0b4:	b29b      	uxth	r3, r3
 801d0b6:	9a05      	ldr	r2, [sp, #20]
 801d0b8:	f894 6804 	ldrb.w	r6, [r4, #2052]	; 0x804
 801d0bc:	990c      	ldr	r1, [sp, #48]	; 0x30
 801d0be:	eb04 0282 	add.w	r2, r4, r2, lsl #2
 801d0c2:	7116      	strb	r6, [r2, #4]
 801d0c4:	f10a 0601 	add.w	r6, sl, #1
 801d0c8:	80d1      	strh	r1, [r2, #6]
 801d0ca:	7156      	strb	r6, [r2, #5]
 801d0cc:	9a05      	ldr	r2, [sp, #20]
 801d0ce:	3201      	adds	r2, #1
 801d0d0:	b292      	uxth	r2, r2
 801d0d2:	9205      	str	r2, [sp, #20]
 801d0d4:	e7e0      	b.n	801d098 <_ZN8touchgfx8LCD16bpp19DecompressorL8_LZW914blitCopyRGB565EPKhS3_RKNS_4RectES6_h+0x1e4>
 801d0d6:	eb04 0387 	add.w	r3, r4, r7, lsl #2
 801d0da:	463a      	mov	r2, r7
 801d0dc:	795b      	ldrb	r3, [r3, #5]
 801d0de:	f603 0604 	addw	r6, r3, #2052	; 0x804
 801d0e2:	4426      	add	r6, r4
 801d0e4:	9919      	ldr	r1, [sp, #100]	; 0x64
 801d0e6:	eb01 0c06 	add.w	ip, r1, r6
 801d0ea:	f1bc 0f00 	cmp.w	ip, #0
 801d0ee:	dd07      	ble.n	801d100 <_ZN8touchgfx8LCD16bpp19DecompressorL8_LZW914blitCopyRGB565EPKhS3_RKNS_4RectES6_h+0x24c>
 801d0f0:	eb04 0282 	add.w	r2, r4, r2, lsl #2
 801d0f4:	f892 c004 	ldrb.w	ip, [r2, #4]
 801d0f8:	f806 cd01 	strb.w	ip, [r6, #-1]!
 801d0fc:	88d2      	ldrh	r2, [r2, #6]
 801d0fe:	e7f1      	b.n	801d0e4 <_ZN8touchgfx8LCD16bpp19DecompressorL8_LZW914blitCopyRGB565EPKhS3_RKNS_4RectES6_h+0x230>
 801d100:	f884 2804 	strb.w	r2, [r4, #2052]	; 0x804
 801d104:	b29b      	uxth	r3, r3
 801d106:	e7c3      	b.n	801d090 <_ZN8touchgfx8LCD16bpp19DecompressorL8_LZW914blitCopyRGB565EPKhS3_RKNS_4RectES6_h+0x1dc>
 801d108:	9f0c      	ldr	r7, [sp, #48]	; 0x30
 801d10a:	970c      	str	r7, [sp, #48]	; 0x30
 801d10c:	9a01      	ldr	r2, [sp, #4]
 801d10e:	46b4      	mov	ip, r6
 801d110:	461f      	mov	r7, r3
 801d112:	e78c      	b.n	801d02e <_ZN8touchgfx8LCD16bpp19DecompressorL8_LZW914blitCopyRGB565EPKhS3_RKNS_4RectES6_h+0x17a>
 801d114:	1b7b      	subs	r3, r7, r5
 801d116:	f8bd 2010 	ldrh.w	r2, [sp, #16]
 801d11a:	9201      	str	r2, [sp, #4]
 801d11c:	eb0c 0605 	add.w	r6, ip, r5
 801d120:	b29b      	uxth	r3, r3
 801d122:	b2b6      	uxth	r6, r6
 801d124:	2500      	movs	r5, #0
 801d126:	9a0a      	ldr	r2, [sp, #40]	; 0x28
 801d128:	4282      	cmp	r2, r0
 801d12a:	d88b      	bhi.n	801d044 <_ZN8touchgfx8LCD16bpp19DecompressorL8_LZW914blitCopyRGB565EPKhS3_RKNS_4RectES6_h+0x190>
 801d12c:	9a01      	ldr	r2, [sp, #4]
 801d12e:	e74b      	b.n	801cfc8 <_ZN8touchgfx8LCD16bpp19DecompressorL8_LZW914blitCopyRGB565EPKhS3_RKNS_4RectES6_h+0x114>
 801d130:	4297      	cmp	r7, r2
 801d132:	d332      	bcc.n	801d19a <_ZN8touchgfx8LCD16bpp19DecompressorL8_LZW914blitCopyRGB565EPKhS3_RKNS_4RectES6_h+0x2e6>
 801d134:	1abb      	subs	r3, r7, r2
 801d136:	b29b      	uxth	r3, r3
 801d138:	9208      	str	r2, [sp, #32]
 801d13a:	9501      	str	r5, [sp, #4]
 801d13c:	9909      	ldr	r1, [sp, #36]	; 0x24
 801d13e:	29ff      	cmp	r1, #255	; 0xff
 801d140:	9908      	ldr	r1, [sp, #32]
 801d142:	eb0c 0601 	add.w	r6, ip, r1
 801d146:	d135      	bne.n	801d1b4 <_ZN8touchgfx8LCD16bpp19DecompressorL8_LZW914blitCopyRGB565EPKhS3_RKNS_4RectES6_h+0x300>
 801d148:	f1a0 0e02 	sub.w	lr, r0, #2
 801d14c:	b2b6      	uxth	r6, r6
 801d14e:	45b4      	cmp	ip, r6
 801d150:	f040 808c 	bne.w	801d26c <_ZN8touchgfx8LCD16bpp19DecompressorL8_LZW914blitCopyRGB565EPKhS3_RKNS_4RectES6_h+0x3b8>
 801d154:	9908      	ldr	r1, [sp, #32]
 801d156:	4297      	cmp	r7, r2
 801d158:	eb00 0041 	add.w	r0, r0, r1, lsl #1
 801d15c:	d3e2      	bcc.n	801d124 <_ZN8touchgfx8LCD16bpp19DecompressorL8_LZW914blitCopyRGB565EPKhS3_RKNS_4RectES6_h+0x270>
 801d15e:	9a18      	ldr	r2, [sp, #96]	; 0x60
 801d160:	9904      	ldr	r1, [sp, #16]
 801d162:	8812      	ldrh	r2, [r2, #0]
 801d164:	1a52      	subs	r2, r2, r1
 801d166:	eb00 0042 	add.w	r0, r0, r2, lsl #1
 801d16a:	9a07      	ldr	r2, [sp, #28]
 801d16c:	9916      	ldr	r1, [sp, #88]	; 0x58
 801d16e:	3201      	adds	r2, #1
 801d170:	428a      	cmp	r2, r1
 801d172:	9207      	str	r2, [sp, #28]
 801d174:	f040 8087 	bne.w	801d286 <_ZN8touchgfx8LCD16bpp19DecompressorL8_LZW914blitCopyRGB565EPKhS3_RKNS_4RectES6_h+0x3d2>
 801d178:	f8bd 5070 	ldrh.w	r5, [sp, #112]	; 0x70
 801d17c:	f8bd 7068 	ldrh.w	r7, [sp, #104]	; 0x68
 801d180:	9b04      	ldr	r3, [sp, #16]
 801d182:	1bed      	subs	r5, r5, r7
 801d184:	b2ad      	uxth	r5, r5
 801d186:	2d00      	cmp	r5, #0
 801d188:	bf08      	it	eq
 801d18a:	461a      	moveq	r2, r3
 801d18c:	9b0d      	ldr	r3, [sp, #52]	; 0x34
 801d18e:	bf18      	it	ne
 801d190:	2200      	movne	r2, #0
 801d192:	3301      	adds	r3, #1
 801d194:	930d      	str	r3, [sp, #52]	; 0x34
 801d196:	b292      	uxth	r2, r2
 801d198:	e70d      	b.n	801cfb6 <_ZN8touchgfx8LCD16bpp19DecompressorL8_LZW914blitCopyRGB565EPKhS3_RKNS_4RectES6_h+0x102>
 801d19a:	1bd1      	subs	r1, r2, r7
 801d19c:	b28b      	uxth	r3, r1
 801d19e:	9301      	str	r3, [sp, #4]
 801d1a0:	9708      	str	r7, [sp, #32]
 801d1a2:	462b      	mov	r3, r5
 801d1a4:	e7ca      	b.n	801d13c <_ZN8touchgfx8LCD16bpp19DecompressorL8_LZW914blitCopyRGB565EPKhS3_RKNS_4RectES6_h+0x288>
 801d1a6:	bf00      	nop
 801d1a8:	2001381c 	.word	0x2001381c
 801d1ac:	20013816 	.word	0x20013816
 801d1b0:	fffff7fb 	.word	0xfffff7fb
 801d1b4:	b2b6      	uxth	r6, r6
 801d1b6:	900b      	str	r0, [sp, #44]	; 0x2c
 801d1b8:	45b4      	cmp	ip, r6
 801d1ba:	d0cb      	beq.n	801d154 <_ZN8touchgfx8LCD16bpp19DecompressorL8_LZW914blitCopyRGB565EPKhS3_RKNS_4RectES6_h+0x2a0>
 801d1bc:	f10c 0101 	add.w	r1, ip, #1
 801d1c0:	44a4      	add	ip, r4
 801d1c2:	9117      	str	r1, [sp, #92]	; 0x5c
 801d1c4:	f89c 5804 	ldrb.w	r5, [ip, #2052]	; 0x804
 801d1c8:	9911      	ldr	r1, [sp, #68]	; 0x44
 801d1ca:	f831 5015 	ldrh.w	r5, [r1, r5, lsl #1]
 801d1ce:	990b      	ldr	r1, [sp, #44]	; 0x2c
 801d1d0:	f8b1 c000 	ldrh.w	ip, [r1]
 801d1d4:	990e      	ldr	r1, [sp, #56]	; 0x38
 801d1d6:	ea4f 2e2c 	mov.w	lr, ip, asr #8
 801d1da:	f00e 0ef8 	and.w	lr, lr, #248	; 0xf8
 801d1de:	fb1e fe01 	smulbb	lr, lr, r1
 801d1e2:	ea4f 2825 	mov.w	r8, r5, asr #8
 801d1e6:	990f      	ldr	r1, [sp, #60]	; 0x3c
 801d1e8:	f008 08f8 	and.w	r8, r8, #248	; 0xf8
 801d1ec:	fb08 e801 	mla	r8, r8, r1, lr
 801d1f0:	ea4f 09ec 	mov.w	r9, ip, asr #3
 801d1f4:	990e      	ldr	r1, [sp, #56]	; 0x38
 801d1f6:	f009 09fc 	and.w	r9, r9, #252	; 0xfc
 801d1fa:	fb19 f901 	smulbb	r9, r9, r1
 801d1fe:	ea4f 0ee5 	mov.w	lr, r5, asr #3
 801d202:	990f      	ldr	r1, [sp, #60]	; 0x3c
 801d204:	f00e 0efc 	and.w	lr, lr, #252	; 0xfc
 801d208:	fb0e 9e01 	mla	lr, lr, r1, r9
 801d20c:	ea4f 0ccc 	mov.w	ip, ip, lsl #3
 801d210:	990e      	ldr	r1, [sp, #56]	; 0x38
 801d212:	fa5f fc8c 	uxtb.w	ip, ip
 801d216:	fb1c fc01 	smulbb	ip, ip, r1
 801d21a:	00ed      	lsls	r5, r5, #3
 801d21c:	990f      	ldr	r1, [sp, #60]	; 0x3c
 801d21e:	b2ed      	uxtb	r5, r5
 801d220:	fb05 c501 	mla	r5, r5, r1, ip
 801d224:	fa1f f888 	uxth.w	r8, r8
 801d228:	fa1f fe8e 	uxth.w	lr, lr
 801d22c:	b2ad      	uxth	r5, r5
 801d22e:	f108 0c01 	add.w	ip, r8, #1
 801d232:	eb0c 2818 	add.w	r8, ip, r8, lsr #8
 801d236:	f10e 0901 	add.w	r9, lr, #1
 801d23a:	f105 0c01 	add.w	ip, r5, #1
 801d23e:	eb0c 2c15 	add.w	ip, ip, r5, lsr #8
 801d242:	eb09 291e 	add.w	r9, r9, lr, lsr #8
 801d246:	f3cc 2cc4 	ubfx	ip, ip, #11, #5
 801d24a:	f408 4878 	and.w	r8, r8, #63488	; 0xf800
 801d24e:	ea4f 1959 	mov.w	r9, r9, lsr #5
 801d252:	ea4c 0808 	orr.w	r8, ip, r8
 801d256:	990b      	ldr	r1, [sp, #44]	; 0x2c
 801d258:	f8bd c05c 	ldrh.w	ip, [sp, #92]	; 0x5c
 801d25c:	f409 69fc 	and.w	r9, r9, #2016	; 0x7e0
 801d260:	ea48 0809 	orr.w	r8, r8, r9
 801d264:	f821 8b02 	strh.w	r8, [r1], #2
 801d268:	910b      	str	r1, [sp, #44]	; 0x2c
 801d26a:	e7a5      	b.n	801d1b8 <_ZN8touchgfx8LCD16bpp19DecompressorL8_LZW914blitCopyRGB565EPKhS3_RKNS_4RectES6_h+0x304>
 801d26c:	f10c 0801 	add.w	r8, ip, #1
 801d270:	44a4      	add	ip, r4
 801d272:	9911      	ldr	r1, [sp, #68]	; 0x44
 801d274:	f89c 5804 	ldrb.w	r5, [ip, #2052]	; 0x804
 801d278:	f831 5015 	ldrh.w	r5, [r1, r5, lsl #1]
 801d27c:	f82e 5f02 	strh.w	r5, [lr, #2]!
 801d280:	fa1f fc88 	uxth.w	ip, r8
 801d284:	e763      	b.n	801d14e <_ZN8touchgfx8LCD16bpp19DecompressorL8_LZW914blitCopyRGB565EPKhS3_RKNS_4RectES6_h+0x29a>
 801d286:	f8bd 2010 	ldrh.w	r2, [sp, #16]
 801d28a:	f8bd 506c 	ldrh.w	r5, [sp, #108]	; 0x6c
 801d28e:	1aad      	subs	r5, r5, r2
 801d290:	b2ad      	uxth	r5, r5
 801d292:	2d00      	cmp	r5, #0
 801d294:	bf18      	it	ne
 801d296:	2200      	movne	r2, #0
 801d298:	9201      	str	r2, [sp, #4]
 801d29a:	e744      	b.n	801d126 <_ZN8touchgfx8LCD16bpp19DecompressorL8_LZW914blitCopyRGB565EPKhS3_RKNS_4RectES6_h+0x272>
 801d29c:	4b03      	ldr	r3, [pc, #12]	; (801d2ac <_ZN8touchgfx8LCD16bpp19DecompressorL8_LZW914blitCopyRGB565EPKhS3_RKNS_4RectES6_h+0x3f8>)
 801d29e:	6818      	ldr	r0, [r3, #0]
 801d2a0:	6803      	ldr	r3, [r0, #0]
 801d2a2:	6adb      	ldr	r3, [r3, #44]	; 0x2c
 801d2a4:	4798      	blx	r3
 801d2a6:	b01f      	add	sp, #124	; 0x7c
 801d2a8:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
 801d2ac:	2001381c 	.word	0x2001381c

0801d2b0 <_ZN8touchgfx8LCD16bpp18DecompressorL8_RLE16blitCopyARGB8888EPKhS3_RKNS_4RectES6_h>:
 801d2b0:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 801d2b4:	b08f      	sub	sp, #60	; 0x3c
 801d2b6:	461c      	mov	r4, r3
 801d2b8:	9203      	str	r2, [sp, #12]
 801d2ba:	f89d 2064 	ldrb.w	r2, [sp, #100]	; 0x64
 801d2be:	9b18      	ldr	r3, [sp, #96]	; 0x60
 801d2c0:	9202      	str	r2, [sp, #8]
 801d2c2:	460f      	mov	r7, r1
 801d2c4:	2a00      	cmp	r2, #0
 801d2c6:	f000 8128 	beq.w	801d51a <_ZN8touchgfx8LCD16bpp18DecompressorL8_RLE16blitCopyARGB8888EPKhS3_RKNS_4RectES6_h+0x26a>
 801d2ca:	6820      	ldr	r0, [r4, #0]
 801d2cc:	6861      	ldr	r1, [r4, #4]
 801d2ce:	aa0a      	add	r2, sp, #40	; 0x28
 801d2d0:	c203      	stmia	r2!, {r0, r1}
 801d2d2:	6818      	ldr	r0, [r3, #0]
 801d2d4:	6859      	ldr	r1, [r3, #4]
 801d2d6:	aa0c      	add	r2, sp, #48	; 0x30
 801d2d8:	c203      	stmia	r2!, {r0, r1}
 801d2da:	a80a      	add	r0, sp, #40	; 0x28
 801d2dc:	f7f8 ffc4 	bl	8016268 <_ZN8touchgfx21DisplayTransformation29transformDisplayToFrameBufferERNS_4RectE>
 801d2e0:	4621      	mov	r1, r4
 801d2e2:	a80c      	add	r0, sp, #48	; 0x30
 801d2e4:	f7f9 f804 	bl	80162f0 <_ZN8touchgfx21DisplayTransformation29transformDisplayToFrameBufferERNS_4RectERKS1_>
 801d2e8:	f9bd 602c 	ldrsh.w	r6, [sp, #44]	; 0x2c
 801d2ec:	f9bd 502e 	ldrsh.w	r5, [sp, #46]	; 0x2e
 801d2f0:	f8bd 0030 	ldrh.w	r0, [sp, #48]	; 0x30
 801d2f4:	f5b6 6f80 	cmp.w	r6, #1024	; 0x400
 801d2f8:	bfde      	ittt	le
 801d2fa:	b2b3      	uxthle	r3, r6
 801d2fc:	f44f 6280 	movle.w	r2, #1024	; 0x400
 801d300:	fb92 f3f3 	sdivle	r3, r2, r3
 801d304:	f9bd 2032 	ldrsh.w	r2, [sp, #50]	; 0x32
 801d308:	bfc8      	it	gt
 801d30a:	2301      	movgt	r3, #1
 801d30c:	fb92 f1f3 	sdiv	r1, r2, r3
 801d310:	fa1f fc81 	uxth.w	ip, r1
 801d314:	fb0c 2413 	mls	r4, ip, r3, r2
 801d318:	fb14 f406 	smulbb	r4, r4, r6
 801d31c:	441d      	add	r5, r3
 801d31e:	4404      	add	r4, r0
 801d320:	4661      	mov	r1, ip
 801d322:	3d01      	subs	r5, #1
 801d324:	b2a4      	uxth	r4, r4
 801d326:	fb95 f5f3 	sdiv	r5, r5, r3
 801d32a:	b121      	cbz	r1, 801d336 <_ZN8touchgfx8LCD16bpp18DecompressorL8_RLE16blitCopyARGB8888EPKhS3_RKNS_4RectES6_h+0x86>
 801d32c:	9b03      	ldr	r3, [sp, #12]
 801d32e:	f853 302c 	ldr.w	r3, [r3, ip, lsl #2]
 801d332:	ba1b      	rev	r3, r3
 801d334:	441f      	add	r7, r3
 801d336:	f8bd 3028 	ldrh.w	r3, [sp, #40]	; 0x28
 801d33a:	f9bd 9034 	ldrsh.w	r9, [sp, #52]	; 0x34
 801d33e:	f9bd 6036 	ldrsh.w	r6, [sp, #54]	; 0x36
 801d342:	4418      	add	r0, r3
 801d344:	f8bd 302a 	ldrh.w	r3, [sp, #42]	; 0x2a
 801d348:	f8ad 0030 	strh.w	r0, [sp, #48]	; 0x30
 801d34c:	441a      	add	r2, r3
 801d34e:	4b74      	ldr	r3, [pc, #464]	; (801d520 <_ZN8touchgfx8LCD16bpp18DecompressorL8_RLE16blitCopyARGB8888EPKhS3_RKNS_4RectES6_h+0x270>)
 801d350:	f8ad 2032 	strh.w	r2, [sp, #50]	; 0x32
 801d354:	6818      	ldr	r0, [r3, #0]
 801d356:	6803      	ldr	r3, [r0, #0]
 801d358:	6a9b      	ldr	r3, [r3, #40]	; 0x28
 801d35a:	4798      	blx	r3
 801d35c:	4a71      	ldr	r2, [pc, #452]	; (801d524 <_ZN8touchgfx8LCD16bpp18DecompressorL8_RLE16blitCopyARGB8888EPKhS3_RKNS_4RectES6_h+0x274>)
 801d35e:	f9bd 1032 	ldrsh.w	r1, [sp, #50]	; 0x32
 801d362:	8813      	ldrh	r3, [r2, #0]
 801d364:	f9bd c030 	ldrsh.w	ip, [sp, #48]	; 0x30
 801d368:	9209      	str	r2, [sp, #36]	; 0x24
 801d36a:	fb03 c101 	mla	r1, r3, r1, ip
 801d36e:	eb00 0041 	add.w	r0, r0, r1, lsl #1
 801d372:	4373      	muls	r3, r6
 801d374:	b2ad      	uxth	r5, r5
 801d376:	eb00 0343 	add.w	r3, r0, r3, lsl #1
 801d37a:	00ad      	lsls	r5, r5, #2
 801d37c:	2c00      	cmp	r4, #0
 801d37e:	9304      	str	r3, [sp, #16]
 801d380:	f105 0304 	add.w	r3, r5, #4
 801d384:	9305      	str	r3, [sp, #20]
 801d386:	bf0c      	ite	eq
 801d388:	46c8      	moveq	r8, r9
 801d38a:	f04f 0800 	movne.w	r8, #0
 801d38e:	2300      	movs	r3, #0
 801d390:	fa1f f888 	uxth.w	r8, r8
 801d394:	9301      	str	r3, [sp, #4]
 801d396:	9a04      	ldr	r2, [sp, #16]
 801d398:	4282      	cmp	r2, r0
 801d39a:	f240 80b9 	bls.w	801d510 <_ZN8touchgfx8LCD16bpp18DecompressorL8_RLE16blitCopyARGB8888EPKhS3_RKNS_4RectES6_h+0x260>
 801d39e:	b95b      	cbnz	r3, 801d3b8 <_ZN8touchgfx8LCD16bpp18DecompressorL8_RLE16blitCopyARGB8888EPKhS3_RKNS_4RectES6_h+0x108>
 801d3a0:	783a      	ldrb	r2, [r7, #0]
 801d3a2:	0993      	lsrs	r3, r2, #6
 801d3a4:	f002 023f 	and.w	r2, r2, #63	; 0x3f
 801d3a8:	9201      	str	r2, [sp, #4]
 801d3aa:	1e5a      	subs	r2, r3, #1
 801d3ac:	2a02      	cmp	r2, #2
 801d3ae:	bf8d      	iteet	hi
 801d3b0:	787b      	ldrbhi	r3, [r7, #1]
 801d3b2:	3701      	addls	r7, #1
 801d3b4:	b29b      	uxthls	r3, r3
 801d3b6:	3702      	addhi	r7, #2
 801d3b8:	b184      	cbz	r4, 801d3dc <_ZN8touchgfx8LCD16bpp18DecompressorL8_RLE16blitCopyARGB8888EPKhS3_RKNS_4RectES6_h+0x12c>
 801d3ba:	429c      	cmp	r4, r3
 801d3bc:	bf95      	itete	ls
 801d3be:	1b1c      	subls	r4, r3, r4
 801d3c0:	1ae4      	subhi	r4, r4, r3
 801d3c2:	fa1f fa84 	uxthls.w	sl, r4
 801d3c6:	b2a4      	uxthhi	r4, r4
 801d3c8:	bf87      	ittee	hi
 801d3ca:	46c4      	movhi	ip, r8
 801d3cc:	f04f 0a00 	movhi.w	sl, #0
 801d3d0:	fa1f fc89 	uxthls.w	ip, r9
 801d3d4:	2400      	movls	r4, #0
 801d3d6:	4653      	mov	r3, sl
 801d3d8:	46e0      	mov	r8, ip
 801d3da:	e7dc      	b.n	801d396 <_ZN8touchgfx8LCD16bpp18DecompressorL8_RLE16blitCopyARGB8888EPKhS3_RKNS_4RectES6_h+0xe6>
 801d3dc:	2204      	movs	r2, #4
 801d3de:	4615      	mov	r5, r2
 801d3e0:	9905      	ldr	r1, [sp, #20]
 801d3e2:	9a01      	ldr	r2, [sp, #4]
 801d3e4:	fb15 1202 	smlabb	r2, r5, r2, r1
 801d3e8:	9903      	ldr	r1, [sp, #12]
 801d3ea:	588a      	ldr	r2, [r1, r2]
 801d3ec:	4543      	cmp	r3, r8
 801d3ee:	bf27      	ittee	cs
 801d3f0:	eba3 0a08 	subcs.w	sl, r3, r8
 801d3f4:	46c6      	movcs	lr, r8
 801d3f6:	eba8 0c03 	subcc.w	ip, r8, r3
 801d3fa:	469e      	movcc	lr, r3
 801d3fc:	ea4f 6112 	mov.w	r1, r2, lsr #24
 801d400:	bf27      	ittee	cs
 801d402:	fa1f fa8a 	uxthcs.w	sl, sl
 801d406:	46a4      	movcs	ip, r4
 801d408:	fa1f fc8c 	uxthcc.w	ip, ip
 801d40c:	46a2      	movcc	sl, r4
 801d40e:	ea4f 0e4e 	mov.w	lr, lr, lsl #1
 801d412:	2900      	cmp	r1, #0
 801d414:	d066      	beq.n	801d4e4 <_ZN8touchgfx8LCD16bpp18DecompressorL8_RLE16blitCopyARGB8888EPKhS3_RKNS_4RectES6_h+0x234>
 801d416:	29ff      	cmp	r1, #255	; 0xff
 801d418:	ea4f 2612 	mov.w	r6, r2, lsr #8
 801d41c:	d114      	bne.n	801d448 <_ZN8touchgfx8LCD16bpp18DecompressorL8_RLE16blitCopyARGB8888EPKhS3_RKNS_4RectES6_h+0x198>
 801d41e:	9d02      	ldr	r5, [sp, #8]
 801d420:	2dff      	cmp	r5, #255	; 0xff
 801d422:	d111      	bne.n	801d448 <_ZN8touchgfx8LCD16bpp18DecompressorL8_RLE16blitCopyARGB8888EPKhS3_RKNS_4RectES6_h+0x198>
 801d424:	0951      	lsrs	r1, r2, #5
 801d426:	f426 66ff 	bic.w	r6, r6, #2040	; 0x7f8
 801d42a:	f401 61fc 	and.w	r1, r1, #2016	; 0x7e0
 801d42e:	f026 0607 	bic.w	r6, r6, #7
 801d432:	430e      	orrs	r6, r1
 801d434:	f3c2 02c4 	ubfx	r2, r2, #3, #5
 801d438:	4316      	orrs	r6, r2
 801d43a:	b2b6      	uxth	r6, r6
 801d43c:	4486      	add	lr, r0
 801d43e:	4586      	cmp	lr, r0
 801d440:	d051      	beq.n	801d4e6 <_ZN8touchgfx8LCD16bpp18DecompressorL8_RLE16blitCopyARGB8888EPKhS3_RKNS_4RectES6_h+0x236>
 801d442:	f820 6b02 	strh.w	r6, [r0], #2
 801d446:	e7fa      	b.n	801d43e <_ZN8touchgfx8LCD16bpp18DecompressorL8_RLE16blitCopyARGB8888EPKhS3_RKNS_4RectES6_h+0x18e>
 801d448:	9d02      	ldr	r5, [sp, #8]
 801d44a:	4369      	muls	r1, r5
 801d44c:	1c4d      	adds	r5, r1, #1
 801d44e:	eb05 2521 	add.w	r5, r5, r1, asr #8
 801d452:	122d      	asrs	r5, r5, #8
 801d454:	ea6f 0b05 	mvn.w	fp, r5
 801d458:	f3c2 4107 	ubfx	r1, r2, #16, #8
 801d45c:	b2ad      	uxth	r5, r5
 801d45e:	b2f6      	uxtb	r6, r6
 801d460:	b2d2      	uxtb	r2, r2
 801d462:	fb11 f105 	smulbb	r1, r1, r5
 801d466:	fb16 f605 	smulbb	r6, r6, r5
 801d46a:	fb12 f205 	smulbb	r2, r2, r5
 801d46e:	b289      	uxth	r1, r1
 801d470:	b2b6      	uxth	r6, r6
 801d472:	b292      	uxth	r2, r2
 801d474:	9106      	str	r1, [sp, #24]
 801d476:	9607      	str	r6, [sp, #28]
 801d478:	9208      	str	r2, [sp, #32]
 801d47a:	4486      	add	lr, r0
 801d47c:	fa5f fb8b 	uxtb.w	fp, fp
 801d480:	4586      	cmp	lr, r0
 801d482:	d030      	beq.n	801d4e6 <_ZN8touchgfx8LCD16bpp18DecompressorL8_RLE16blitCopyARGB8888EPKhS3_RKNS_4RectES6_h+0x236>
 801d484:	8802      	ldrh	r2, [r0, #0]
 801d486:	9906      	ldr	r1, [sp, #24]
 801d488:	1216      	asrs	r6, r2, #8
 801d48a:	f006 06f8 	and.w	r6, r6, #248	; 0xf8
 801d48e:	10d5      	asrs	r5, r2, #3
 801d490:	ea46 1656 	orr.w	r6, r6, r6, lsr #5
 801d494:	fb06 160b 	mla	r6, r6, fp, r1
 801d498:	f005 05fc 	and.w	r5, r5, #252	; 0xfc
 801d49c:	9907      	ldr	r1, [sp, #28]
 801d49e:	00d2      	lsls	r2, r2, #3
 801d4a0:	ea45 1595 	orr.w	r5, r5, r5, lsr #6
 801d4a4:	fb05 150b 	mla	r5, r5, fp, r1
 801d4a8:	b2d2      	uxtb	r2, r2
 801d4aa:	9908      	ldr	r1, [sp, #32]
 801d4ac:	ea42 1252 	orr.w	r2, r2, r2, lsr #5
 801d4b0:	b2b6      	uxth	r6, r6
 801d4b2:	fb02 120b 	mla	r2, r2, fp, r1
 801d4b6:	b292      	uxth	r2, r2
 801d4b8:	1c71      	adds	r1, r6, #1
 801d4ba:	eb01 2616 	add.w	r6, r1, r6, lsr #8
 801d4be:	1c51      	adds	r1, r2, #1
 801d4c0:	eb01 2212 	add.w	r2, r1, r2, lsr #8
 801d4c4:	b2ad      	uxth	r5, r5
 801d4c6:	f3c2 22c4 	ubfx	r2, r2, #11, #5
 801d4ca:	f406 4678 	and.w	r6, r6, #63488	; 0xf800
 801d4ce:	4316      	orrs	r6, r2
 801d4d0:	1c6a      	adds	r2, r5, #1
 801d4d2:	eb02 2515 	add.w	r5, r2, r5, lsr #8
 801d4d6:	096d      	lsrs	r5, r5, #5
 801d4d8:	f405 65fc 	and.w	r5, r5, #2016	; 0x7e0
 801d4dc:	432e      	orrs	r6, r5
 801d4de:	f820 6b02 	strh.w	r6, [r0], #2
 801d4e2:	e7cd      	b.n	801d480 <_ZN8touchgfx8LCD16bpp18DecompressorL8_RLE16blitCopyARGB8888EPKhS3_RKNS_4RectES6_h+0x1d0>
 801d4e4:	4470      	add	r0, lr
 801d4e6:	4543      	cmp	r3, r8
 801d4e8:	f4ff af75 	bcc.w	801d3d6 <_ZN8touchgfx8LCD16bpp18DecompressorL8_RLE16blitCopyARGB8888EPKhS3_RKNS_4RectES6_h+0x126>
 801d4ec:	f8bd 402c 	ldrh.w	r4, [sp, #44]	; 0x2c
 801d4f0:	9b09      	ldr	r3, [sp, #36]	; 0x24
 801d4f2:	fa1f fc89 	uxth.w	ip, r9
 801d4f6:	eba4 040c 	sub.w	r4, r4, ip
 801d4fa:	881b      	ldrh	r3, [r3, #0]
 801d4fc:	b2a4      	uxth	r4, r4
 801d4fe:	2c00      	cmp	r4, #0
 801d500:	eba3 0309 	sub.w	r3, r3, r9
 801d504:	bf18      	it	ne
 801d506:	f04f 0c00 	movne.w	ip, #0
 801d50a:	eb00 0043 	add.w	r0, r0, r3, lsl #1
 801d50e:	e762      	b.n	801d3d6 <_ZN8touchgfx8LCD16bpp18DecompressorL8_RLE16blitCopyARGB8888EPKhS3_RKNS_4RectES6_h+0x126>
 801d510:	4b03      	ldr	r3, [pc, #12]	; (801d520 <_ZN8touchgfx8LCD16bpp18DecompressorL8_RLE16blitCopyARGB8888EPKhS3_RKNS_4RectES6_h+0x270>)
 801d512:	6818      	ldr	r0, [r3, #0]
 801d514:	6803      	ldr	r3, [r0, #0]
 801d516:	6adb      	ldr	r3, [r3, #44]	; 0x2c
 801d518:	4798      	blx	r3
 801d51a:	b00f      	add	sp, #60	; 0x3c
 801d51c:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
 801d520:	2001381c 	.word	0x2001381c
 801d524:	20013816 	.word	0x20013816

0801d528 <_ZN8touchgfx8LCD16bpp18DecompressorL8_RLE14blitCopyRGB888EPKhS3_RKNS_4RectES6_h>:
 801d528:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 801d52c:	b093      	sub	sp, #76	; 0x4c
 801d52e:	461c      	mov	r4, r3
 801d530:	9205      	str	r2, [sp, #20]
 801d532:	f89d 2074 	ldrb.w	r2, [sp, #116]	; 0x74
 801d536:	9101      	str	r1, [sp, #4]
 801d538:	9b1c      	ldr	r3, [sp, #112]	; 0x70
 801d53a:	9202      	str	r2, [sp, #8]
 801d53c:	2a00      	cmp	r2, #0
 801d53e:	f000 812c 	beq.w	801d79a <_ZN8touchgfx8LCD16bpp18DecompressorL8_RLE14blitCopyRGB888EPKhS3_RKNS_4RectES6_h+0x272>
 801d542:	6820      	ldr	r0, [r4, #0]
 801d544:	6861      	ldr	r1, [r4, #4]
 801d546:	aa0e      	add	r2, sp, #56	; 0x38
 801d548:	c203      	stmia	r2!, {r0, r1}
 801d54a:	6818      	ldr	r0, [r3, #0]
 801d54c:	6859      	ldr	r1, [r3, #4]
 801d54e:	aa10      	add	r2, sp, #64	; 0x40
 801d550:	c203      	stmia	r2!, {r0, r1}
 801d552:	a80e      	add	r0, sp, #56	; 0x38
 801d554:	f7f8 fe88 	bl	8016268 <_ZN8touchgfx21DisplayTransformation29transformDisplayToFrameBufferERNS_4RectE>
 801d558:	4621      	mov	r1, r4
 801d55a:	a810      	add	r0, sp, #64	; 0x40
 801d55c:	f7f8 fec8 	bl	80162f0 <_ZN8touchgfx21DisplayTransformation29transformDisplayToFrameBufferERNS_4RectERKS1_>
 801d560:	f9bd 603c 	ldrsh.w	r6, [sp, #60]	; 0x3c
 801d564:	f9bd 503e 	ldrsh.w	r5, [sp, #62]	; 0x3e
 801d568:	f8bd 0040 	ldrh.w	r0, [sp, #64]	; 0x40
 801d56c:	f5b6 6f80 	cmp.w	r6, #1024	; 0x400
 801d570:	bfde      	ittt	le
 801d572:	b2b3      	uxthle	r3, r6
 801d574:	f44f 6280 	movle.w	r2, #1024	; 0x400
 801d578:	fb92 f3f3 	sdivle	r3, r2, r3
 801d57c:	f9bd 2042 	ldrsh.w	r2, [sp, #66]	; 0x42
 801d580:	bfc8      	it	gt
 801d582:	2301      	movgt	r3, #1
 801d584:	fb92 f1f3 	sdiv	r1, r2, r3
 801d588:	fa1f fc81 	uxth.w	ip, r1
 801d58c:	fb0c 2413 	mls	r4, ip, r3, r2
 801d590:	fb14 f406 	smulbb	r4, r4, r6
 801d594:	441d      	add	r5, r3
 801d596:	4404      	add	r4, r0
 801d598:	4661      	mov	r1, ip
 801d59a:	3d01      	subs	r5, #1
 801d59c:	b2a4      	uxth	r4, r4
 801d59e:	fb95 f5f3 	sdiv	r5, r5, r3
 801d5a2:	b131      	cbz	r1, 801d5b2 <_ZN8touchgfx8LCD16bpp18DecompressorL8_RLE14blitCopyRGB888EPKhS3_RKNS_4RectES6_h+0x8a>
 801d5a4:	9b05      	ldr	r3, [sp, #20]
 801d5a6:	9901      	ldr	r1, [sp, #4]
 801d5a8:	f853 302c 	ldr.w	r3, [r3, ip, lsl #2]
 801d5ac:	ba1b      	rev	r3, r3
 801d5ae:	4419      	add	r1, r3
 801d5b0:	9101      	str	r1, [sp, #4]
 801d5b2:	f8bd 3038 	ldrh.w	r3, [sp, #56]	; 0x38
 801d5b6:	f9bd b044 	ldrsh.w	fp, [sp, #68]	; 0x44
 801d5ba:	f9bd 6046 	ldrsh.w	r6, [sp, #70]	; 0x46
 801d5be:	4418      	add	r0, r3
 801d5c0:	f8bd 303a 	ldrh.w	r3, [sp, #58]	; 0x3a
 801d5c4:	f8ad 0040 	strh.w	r0, [sp, #64]	; 0x40
 801d5c8:	441a      	add	r2, r3
 801d5ca:	4b75      	ldr	r3, [pc, #468]	; (801d7a0 <_ZN8touchgfx8LCD16bpp18DecompressorL8_RLE14blitCopyRGB888EPKhS3_RKNS_4RectES6_h+0x278>)
 801d5cc:	f8ad 2042 	strh.w	r2, [sp, #66]	; 0x42
 801d5d0:	6818      	ldr	r0, [r3, #0]
 801d5d2:	6803      	ldr	r3, [r0, #0]
 801d5d4:	6a9b      	ldr	r3, [r3, #40]	; 0x28
 801d5d6:	4798      	blx	r3
 801d5d8:	4972      	ldr	r1, [pc, #456]	; (801d7a4 <_ZN8touchgfx8LCD16bpp18DecompressorL8_RLE14blitCopyRGB888EPKhS3_RKNS_4RectES6_h+0x27c>)
 801d5da:	f9bd c040 	ldrsh.w	ip, [sp, #64]	; 0x40
 801d5de:	880b      	ldrh	r3, [r1, #0]
 801d5e0:	f9bd 2042 	ldrsh.w	r2, [sp, #66]	; 0x42
 801d5e4:	910d      	str	r1, [sp, #52]	; 0x34
 801d5e6:	fb03 c202 	mla	r2, r3, r2, ip
 801d5ea:	eb00 0042 	add.w	r0, r0, r2, lsl #1
 801d5ee:	4373      	muls	r3, r6
 801d5f0:	b2ad      	uxth	r5, r5
 801d5f2:	eb00 0343 	add.w	r3, r0, r3, lsl #1
 801d5f6:	00ad      	lsls	r5, r5, #2
 801d5f8:	9308      	str	r3, [sp, #32]
 801d5fa:	1d2b      	adds	r3, r5, #4
 801d5fc:	9309      	str	r3, [sp, #36]	; 0x24
 801d5fe:	9b02      	ldr	r3, [sp, #8]
 801d600:	f8bd 1008 	ldrh.w	r1, [sp, #8]
 801d604:	9106      	str	r1, [sp, #24]
 801d606:	43da      	mvns	r2, r3
 801d608:	2c00      	cmp	r4, #0
 801d60a:	bf0c      	ite	eq
 801d60c:	46dc      	moveq	ip, fp
 801d60e:	f04f 0c00 	movne.w	ip, #0
 801d612:	2300      	movs	r3, #0
 801d614:	b2d2      	uxtb	r2, r2
 801d616:	fa1f fc8c 	uxth.w	ip, ip
 801d61a:	9303      	str	r3, [sp, #12]
 801d61c:	9207      	str	r2, [sp, #28]
 801d61e:	9a08      	ldr	r2, [sp, #32]
 801d620:	4282      	cmp	r2, r0
 801d622:	f240 80b5 	bls.w	801d790 <_ZN8touchgfx8LCD16bpp18DecompressorL8_RLE14blitCopyRGB888EPKhS3_RKNS_4RectES6_h+0x268>
 801d626:	b963      	cbnz	r3, 801d642 <_ZN8touchgfx8LCD16bpp18DecompressorL8_RLE14blitCopyRGB888EPKhS3_RKNS_4RectES6_h+0x11a>
 801d628:	9b01      	ldr	r3, [sp, #4]
 801d62a:	781a      	ldrb	r2, [r3, #0]
 801d62c:	0993      	lsrs	r3, r2, #6
 801d62e:	f002 023f 	and.w	r2, r2, #63	; 0x3f
 801d632:	9203      	str	r2, [sp, #12]
 801d634:	1e5a      	subs	r2, r3, #1
 801d636:	2a02      	cmp	r2, #2
 801d638:	d815      	bhi.n	801d666 <_ZN8touchgfx8LCD16bpp18DecompressorL8_RLE14blitCopyRGB888EPKhS3_RKNS_4RectES6_h+0x13e>
 801d63a:	9a01      	ldr	r2, [sp, #4]
 801d63c:	3201      	adds	r2, #1
 801d63e:	9201      	str	r2, [sp, #4]
 801d640:	b29b      	uxth	r3, r3
 801d642:	b1b4      	cbz	r4, 801d672 <_ZN8touchgfx8LCD16bpp18DecompressorL8_RLE14blitCopyRGB888EPKhS3_RKNS_4RectES6_h+0x14a>
 801d644:	429c      	cmp	r4, r3
 801d646:	bf95      	itete	ls
 801d648:	1b1c      	subls	r4, r3, r4
 801d64a:	1ae4      	subhi	r4, r4, r3
 801d64c:	fa1f f884 	uxthls.w	r8, r4
 801d650:	b2a4      	uxthhi	r4, r4
 801d652:	bf87      	ittee	hi
 801d654:	4666      	movhi	r6, ip
 801d656:	f04f 0800 	movhi.w	r8, #0
 801d65a:	fa1f f68b 	uxthls.w	r6, fp
 801d65e:	2400      	movls	r4, #0
 801d660:	4643      	mov	r3, r8
 801d662:	46b4      	mov	ip, r6
 801d664:	e7db      	b.n	801d61e <_ZN8touchgfx8LCD16bpp18DecompressorL8_RLE14blitCopyRGB888EPKhS3_RKNS_4RectES6_h+0xf6>
 801d666:	9a01      	ldr	r2, [sp, #4]
 801d668:	9b01      	ldr	r3, [sp, #4]
 801d66a:	3202      	adds	r2, #2
 801d66c:	785b      	ldrb	r3, [r3, #1]
 801d66e:	9201      	str	r2, [sp, #4]
 801d670:	e7e7      	b.n	801d642 <_ZN8touchgfx8LCD16bpp18DecompressorL8_RLE14blitCopyRGB888EPKhS3_RKNS_4RectES6_h+0x11a>
 801d672:	2203      	movs	r2, #3
 801d674:	4615      	mov	r5, r2
 801d676:	9909      	ldr	r1, [sp, #36]	; 0x24
 801d678:	9a03      	ldr	r2, [sp, #12]
 801d67a:	fb15 1202 	smlabb	r2, r5, r2, r1
 801d67e:	9905      	ldr	r1, [sp, #20]
 801d680:	4563      	cmp	r3, ip
 801d682:	eb01 0502 	add.w	r5, r1, r2
 801d686:	9902      	ldr	r1, [sp, #8]
 801d688:	bf29      	itett	cs
 801d68a:	eba3 080c 	subcs.w	r8, r3, ip
 801d68e:	ebac 0603 	subcc.w	r6, ip, r3
 801d692:	fa1f f888 	uxthcs.w	r8, r8
 801d696:	46e1      	movcs	r9, ip
 801d698:	bf2f      	iteee	cs
 801d69a:	4626      	movcs	r6, r4
 801d69c:	b2b6      	uxthcc	r6, r6
 801d69e:	4699      	movcc	r9, r3
 801d6a0:	46a0      	movcc	r8, r4
 801d6a2:	29ff      	cmp	r1, #255	; 0xff
 801d6a4:	d04a      	beq.n	801d73c <_ZN8touchgfx8LCD16bpp18DecompressorL8_RLE14blitCopyRGB888EPKhS3_RKNS_4RectES6_h+0x214>
 801d6a6:	9f06      	ldr	r7, [sp, #24]
 801d6a8:	78a9      	ldrb	r1, [r5, #2]
 801d6aa:	9004      	str	r0, [sp, #16]
 801d6ac:	4379      	muls	r1, r7
 801d6ae:	910a      	str	r1, [sp, #40]	; 0x28
 801d6b0:	7869      	ldrb	r1, [r5, #1]
 801d6b2:	4379      	muls	r1, r7
 801d6b4:	910b      	str	r1, [sp, #44]	; 0x2c
 801d6b6:	9905      	ldr	r1, [sp, #20]
 801d6b8:	5c8a      	ldrb	r2, [r1, r2]
 801d6ba:	437a      	muls	r2, r7
 801d6bc:	920c      	str	r2, [sp, #48]	; 0x30
 801d6be:	46ca      	mov	sl, r9
 801d6c0:	f1ba 0f00 	cmp.w	sl, #0
 801d6c4:	d03d      	beq.n	801d742 <_ZN8touchgfx8LCD16bpp18DecompressorL8_RLE14blitCopyRGB888EPKhS3_RKNS_4RectES6_h+0x21a>
 801d6c6:	9a04      	ldr	r2, [sp, #16]
 801d6c8:	9f07      	ldr	r7, [sp, #28]
 801d6ca:	8812      	ldrh	r2, [r2, #0]
 801d6cc:	1215      	asrs	r5, r2, #8
 801d6ce:	46be      	mov	lr, r7
 801d6d0:	f005 05f8 	and.w	r5, r5, #248	; 0xf8
 801d6d4:	9f0a      	ldr	r7, [sp, #40]	; 0x28
 801d6d6:	10d1      	asrs	r1, r2, #3
 801d6d8:	ea45 1555 	orr.w	r5, r5, r5, lsr #5
 801d6dc:	fb05 750e 	mla	r5, r5, lr, r7
 801d6e0:	f001 01fc 	and.w	r1, r1, #252	; 0xfc
 801d6e4:	9f0b      	ldr	r7, [sp, #44]	; 0x2c
 801d6e6:	00d2      	lsls	r2, r2, #3
 801d6e8:	ea41 1191 	orr.w	r1, r1, r1, lsr #6
 801d6ec:	fb01 710e 	mla	r1, r1, lr, r7
 801d6f0:	b2d2      	uxtb	r2, r2
 801d6f2:	9f0c      	ldr	r7, [sp, #48]	; 0x30
 801d6f4:	ea42 1252 	orr.w	r2, r2, r2, lsr #5
 801d6f8:	b2ad      	uxth	r5, r5
 801d6fa:	fb02 720e 	mla	r2, r2, lr, r7
 801d6fe:	b292      	uxth	r2, r2
 801d700:	f105 0e01 	add.w	lr, r5, #1
 801d704:	eb0e 2515 	add.w	r5, lr, r5, lsr #8
 801d708:	f102 0e01 	add.w	lr, r2, #1
 801d70c:	eb0e 2212 	add.w	r2, lr, r2, lsr #8
 801d710:	b289      	uxth	r1, r1
 801d712:	f3c2 22c4 	ubfx	r2, r2, #11, #5
 801d716:	f405 4578 	and.w	r5, r5, #63488	; 0xf800
 801d71a:	4315      	orrs	r5, r2
 801d71c:	1c4a      	adds	r2, r1, #1
 801d71e:	eb02 2111 	add.w	r1, r2, r1, lsr #8
 801d722:	0949      	lsrs	r1, r1, #5
 801d724:	9a04      	ldr	r2, [sp, #16]
 801d726:	f401 61fc 	and.w	r1, r1, #2016	; 0x7e0
 801d72a:	430d      	orrs	r5, r1
 801d72c:	f822 5b02 	strh.w	r5, [r2], #2
 801d730:	f10a 3aff 	add.w	sl, sl, #4294967295
 801d734:	9204      	str	r2, [sp, #16]
 801d736:	fa1f fa8a 	uxth.w	sl, sl
 801d73a:	e7c1      	b.n	801d6c0 <_ZN8touchgfx8LCD16bpp18DecompressorL8_RLE14blitCopyRGB888EPKhS3_RKNS_4RectES6_h+0x198>
 801d73c:	4649      	mov	r1, r9
 801d73e:	4686      	mov	lr, r0
 801d740:	b999      	cbnz	r1, 801d76a <_ZN8touchgfx8LCD16bpp18DecompressorL8_RLE14blitCopyRGB888EPKhS3_RKNS_4RectES6_h+0x242>
 801d742:	4563      	cmp	r3, ip
 801d744:	eb00 0049 	add.w	r0, r0, r9, lsl #1
 801d748:	d38a      	bcc.n	801d660 <_ZN8touchgfx8LCD16bpp18DecompressorL8_RLE14blitCopyRGB888EPKhS3_RKNS_4RectES6_h+0x138>
 801d74a:	f8bd 403c 	ldrh.w	r4, [sp, #60]	; 0x3c
 801d74e:	9b0d      	ldr	r3, [sp, #52]	; 0x34
 801d750:	fa1f f68b 	uxth.w	r6, fp
 801d754:	1ba4      	subs	r4, r4, r6
 801d756:	881b      	ldrh	r3, [r3, #0]
 801d758:	b2a4      	uxth	r4, r4
 801d75a:	2c00      	cmp	r4, #0
 801d75c:	eba3 030b 	sub.w	r3, r3, fp
 801d760:	bf18      	it	ne
 801d762:	2600      	movne	r6, #0
 801d764:	eb00 0043 	add.w	r0, r0, r3, lsl #1
 801d768:	e77a      	b.n	801d660 <_ZN8touchgfx8LCD16bpp18DecompressorL8_RLE14blitCopyRGB888EPKhS3_RKNS_4RectES6_h+0x138>
 801d76a:	78aa      	ldrb	r2, [r5, #2]
 801d76c:	4f0e      	ldr	r7, [pc, #56]	; (801d7a8 <_ZN8touchgfx8LCD16bpp18DecompressorL8_RLE14blitCopyRGB888EPKhS3_RKNS_4RectES6_h+0x280>)
 801d76e:	ea07 2a02 	and.w	sl, r7, r2, lsl #8
 801d772:	786a      	ldrb	r2, [r5, #1]
 801d774:	00d2      	lsls	r2, r2, #3
 801d776:	f402 62fc 	and.w	r2, r2, #2016	; 0x7e0
 801d77a:	ea4a 0202 	orr.w	r2, sl, r2
 801d77e:	f895 a000 	ldrb.w	sl, [r5]
 801d782:	3901      	subs	r1, #1
 801d784:	ea42 02da 	orr.w	r2, r2, sl, lsr #3
 801d788:	f82e 2b02 	strh.w	r2, [lr], #2
 801d78c:	b289      	uxth	r1, r1
 801d78e:	e7d7      	b.n	801d740 <_ZN8touchgfx8LCD16bpp18DecompressorL8_RLE14blitCopyRGB888EPKhS3_RKNS_4RectES6_h+0x218>
 801d790:	4b03      	ldr	r3, [pc, #12]	; (801d7a0 <_ZN8touchgfx8LCD16bpp18DecompressorL8_RLE14blitCopyRGB888EPKhS3_RKNS_4RectES6_h+0x278>)
 801d792:	6818      	ldr	r0, [r3, #0]
 801d794:	6803      	ldr	r3, [r0, #0]
 801d796:	6adb      	ldr	r3, [r3, #44]	; 0x2c
 801d798:	4798      	blx	r3
 801d79a:	b013      	add	sp, #76	; 0x4c
 801d79c:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
 801d7a0:	2001381c 	.word	0x2001381c
 801d7a4:	20013816 	.word	0x20013816
 801d7a8:	fffff800 	.word	0xfffff800

0801d7ac <_ZN8touchgfx8LCD16bpp19DecompressorL8_LZW916blitCopyARGB8888EPKhS3_RKNS_4RectES6_h>:
 801d7ac:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 801d7b0:	b09d      	sub	sp, #116	; 0x74
 801d7b2:	e9cd 1211 	strd	r1, r2, [sp, #68]	; 0x44
 801d7b6:	f89d 209c 	ldrb.w	r2, [sp, #156]	; 0x9c
 801d7ba:	920e      	str	r2, [sp, #56]	; 0x38
 801d7bc:	461c      	mov	r4, r3
 801d7be:	4683      	mov	fp, r0
 801d7c0:	9b26      	ldr	r3, [sp, #152]	; 0x98
 801d7c2:	2a00      	cmp	r2, #0
 801d7c4:	f000 81e0 	beq.w	801db88 <_ZN8touchgfx8LCD16bpp19DecompressorL8_LZW916blitCopyARGB8888EPKhS3_RKNS_4RectES6_h+0x3dc>
 801d7c8:	6820      	ldr	r0, [r4, #0]
 801d7ca:	6861      	ldr	r1, [r4, #4]
 801d7cc:	aa18      	add	r2, sp, #96	; 0x60
 801d7ce:	c203      	stmia	r2!, {r0, r1}
 801d7d0:	6818      	ldr	r0, [r3, #0]
 801d7d2:	6859      	ldr	r1, [r3, #4]
 801d7d4:	aa1a      	add	r2, sp, #104	; 0x68
 801d7d6:	c203      	stmia	r2!, {r0, r1}
 801d7d8:	a818      	add	r0, sp, #96	; 0x60
 801d7da:	f7f8 fd45 	bl	8016268 <_ZN8touchgfx21DisplayTransformation29transformDisplayToFrameBufferERNS_4RectE>
 801d7de:	4621      	mov	r1, r4
 801d7e0:	a81a      	add	r0, sp, #104	; 0x68
 801d7e2:	f7f8 fd85 	bl	80162f0 <_ZN8touchgfx21DisplayTransformation29transformDisplayToFrameBufferERNS_4RectERKS1_>
 801d7e6:	f9bd 3064 	ldrsh.w	r3, [sp, #100]	; 0x64
 801d7ea:	f9bd 4066 	ldrsh.w	r4, [sp, #102]	; 0x66
 801d7ee:	f9bd 606e 	ldrsh.w	r6, [sp, #110]	; 0x6e
 801d7f2:	f5b3 6f80 	cmp.w	r3, #1024	; 0x400
 801d7f6:	bfd7      	itett	le
 801d7f8:	b29a      	uxthle	r2, r3
 801d7fa:	2201      	movgt	r2, #1
 801d7fc:	f44f 6180 	movle.w	r1, #1024	; 0x400
 801d800:	fb91 f2f2 	sdivle	r2, r1, r2
 801d804:	9202      	str	r2, [sp, #8]
 801d806:	9802      	ldr	r0, [sp, #8]
 801d808:	f9bd 206a 	ldrsh.w	r2, [sp, #106]	; 0x6a
 801d80c:	fb92 f0f0 	sdiv	r0, r2, r0
 801d810:	b280      	uxth	r0, r0
 801d812:	900f      	str	r0, [sp, #60]	; 0x3c
 801d814:	9902      	ldr	r1, [sp, #8]
 801d816:	9802      	ldr	r0, [sp, #8]
 801d818:	9d0f      	ldr	r5, [sp, #60]	; 0x3c
 801d81a:	440c      	add	r4, r1
 801d81c:	fb05 2510 	mls	r5, r5, r0, r2
 801d820:	fb15 f503 	smulbb	r5, r5, r3
 801d824:	3c01      	subs	r4, #1
 801d826:	f8bd 3060 	ldrh.w	r3, [sp, #96]	; 0x60
 801d82a:	fb94 f4f1 	sdiv	r4, r4, r1
 801d82e:	f8bd 1068 	ldrh.w	r1, [sp, #104]	; 0x68
 801d832:	440d      	add	r5, r1
 801d834:	4419      	add	r1, r3
 801d836:	f8bd 3062 	ldrh.w	r3, [sp, #98]	; 0x62
 801d83a:	f8ad 1068 	strh.w	r1, [sp, #104]	; 0x68
 801d83e:	441a      	add	r2, r3
 801d840:	f9bd 306c 	ldrsh.w	r3, [sp, #108]	; 0x6c
 801d844:	9306      	str	r3, [sp, #24]
 801d846:	4bb3      	ldr	r3, [pc, #716]	; (801db14 <_ZN8touchgfx8LCD16bpp19DecompressorL8_LZW916blitCopyARGB8888EPKhS3_RKNS_4RectES6_h+0x368>)
 801d848:	f8ad 206a 	strh.w	r2, [sp, #106]	; 0x6a
 801d84c:	6818      	ldr	r0, [r3, #0]
 801d84e:	6803      	ldr	r3, [r0, #0]
 801d850:	6a9b      	ldr	r3, [r3, #40]	; 0x28
 801d852:	4798      	blx	r3
 801d854:	4bb0      	ldr	r3, [pc, #704]	; (801db18 <_ZN8touchgfx8LCD16bpp19DecompressorL8_LZW916blitCopyARGB8888EPKhS3_RKNS_4RectES6_h+0x36c>)
 801d856:	f9bd 106a 	ldrsh.w	r1, [sp, #106]	; 0x6a
 801d85a:	881a      	ldrh	r2, [r3, #0]
 801d85c:	f9bd 7068 	ldrsh.w	r7, [sp, #104]	; 0x68
 801d860:	9316      	str	r3, [sp, #88]	; 0x58
 801d862:	fb02 7101 	mla	r1, r2, r1, r7
 801d866:	3401      	adds	r4, #1
 801d868:	eb00 0841 	add.w	r8, r0, r1, lsl #1
 801d86c:	b2a4      	uxth	r4, r4
 801d86e:	4356      	muls	r6, r2
 801d870:	eb08 0246 	add.w	r2, r8, r6, lsl #1
 801d874:	00a4      	lsls	r4, r4, #2
 801d876:	920a      	str	r2, [sp, #40]	; 0x28
 801d878:	1d22      	adds	r2, r4, #4
 801d87a:	b2ad      	uxth	r5, r5
 801d87c:	9213      	str	r2, [sp, #76]	; 0x4c
 801d87e:	4ba7      	ldr	r3, [pc, #668]	; (801db1c <_ZN8touchgfx8LCD16bpp19DecompressorL8_LZW916blitCopyARGB8888EPKhS3_RKNS_4RectES6_h+0x370>)
 801d880:	9a06      	ldr	r2, [sp, #24]
 801d882:	2d00      	cmp	r5, #0
 801d884:	bf0c      	ite	eq
 801d886:	4611      	moveq	r1, r2
 801d888:	2100      	movne	r1, #0
 801d88a:	2200      	movs	r2, #0
 801d88c:	eba3 030b 	sub.w	r3, r3, fp
 801d890:	b289      	uxth	r1, r1
 801d892:	920d      	str	r2, [sp, #52]	; 0x34
 801d894:	9317      	str	r3, [sp, #92]	; 0x5c
 801d896:	9a0f      	ldr	r2, [sp, #60]	; 0x3c
 801d898:	9b0d      	ldr	r3, [sp, #52]	; 0x34
 801d89a:	fa12 f383 	uxtah	r3, r2, r3
 801d89e:	9a12      	ldr	r2, [sp, #72]	; 0x48
 801d8a0:	eb02 0383 	add.w	r3, r2, r3, lsl #2
 801d8a4:	3304      	adds	r3, #4
 801d8a6:	9308      	str	r3, [sp, #32]
 801d8a8:	9b0a      	ldr	r3, [sp, #40]	; 0x28
 801d8aa:	4543      	cmp	r3, r8
 801d8ac:	f240 8167 	bls.w	801db7e <_ZN8touchgfx8LCD16bpp19DecompressorL8_LZW916blitCopyARGB8888EPKhS3_RKNS_4RectES6_h+0x3d2>
 801d8b0:	9a02      	ldr	r2, [sp, #8]
 801d8b2:	f8bd 3064 	ldrh.w	r3, [sp, #100]	; 0x64
 801d8b6:	fbb5 f3f3 	udiv	r3, r5, r3
 801d8ba:	1ad3      	subs	r3, r2, r3
 801d8bc:	b29b      	uxth	r3, r3
 801d8be:	9314      	str	r3, [sp, #80]	; 0x50
 801d8c0:	9b08      	ldr	r3, [sp, #32]
 801d8c2:	9808      	ldr	r0, [sp, #32]
 801d8c4:	785a      	ldrb	r2, [r3, #1]
 801d8c6:	789b      	ldrb	r3, [r3, #2]
 801d8c8:	7800      	ldrb	r0, [r0, #0]
 801d8ca:	9010      	str	r0, [sp, #64]	; 0x40
 801d8cc:	021b      	lsls	r3, r3, #8
 801d8ce:	ea43 4302 	orr.w	r3, r3, r2, lsl #16
 801d8d2:	9a08      	ldr	r2, [sp, #32]
 801d8d4:	78d2      	ldrb	r2, [r2, #3]
 801d8d6:	4313      	orrs	r3, r2
 801d8d8:	9a11      	ldr	r2, [sp, #68]	; 0x44
 801d8da:	3001      	adds	r0, #1
 801d8dc:	441a      	add	r2, r3
 801d8de:	9007      	str	r0, [sp, #28]
 801d8e0:	1c50      	adds	r0, r2, #1
 801d8e2:	9005      	str	r0, [sp, #20]
 801d8e4:	7852      	ldrb	r2, [r2, #1]
 801d8e6:	9811      	ldr	r0, [sp, #68]	; 0x44
 801d8e8:	0212      	lsls	r2, r2, #8
 801d8ea:	5cc3      	ldrb	r3, [r0, r3]
 801d8ec:	f402 72ff 	and.w	r2, r2, #510	; 0x1fe
 801d8f0:	431a      	orrs	r2, r3
 801d8f2:	b293      	uxth	r3, r2
 801d8f4:	930b      	str	r3, [sp, #44]	; 0x2c
 801d8f6:	2300      	movs	r3, #0
 801d8f8:	9309      	str	r3, [sp, #36]	; 0x24
 801d8fa:	2301      	movs	r3, #1
 801d8fc:	9301      	str	r3, [sp, #4]
 801d8fe:	9304      	str	r3, [sp, #16]
 801d900:	2300      	movs	r3, #0
 801d902:	f88b 2804 	strb.w	r2, [fp, #2052]	; 0x804
 801d906:	9303      	str	r3, [sp, #12]
 801d908:	f04f 0e01 	mov.w	lr, #1
 801d90c:	2d00      	cmp	r5, #0
 801d90e:	d07c      	beq.n	801da0a <_ZN8touchgfx8LCD16bpp19DecompressorL8_LZW916blitCopyARGB8888EPKhS3_RKNS_4RectES6_h+0x25e>
 801d910:	45ae      	cmp	lr, r5
 801d912:	d26b      	bcs.n	801d9ec <_ZN8touchgfx8LCD16bpp19DecompressorL8_LZW916blitCopyARGB8888EPKhS3_RKNS_4RectES6_h+0x240>
 801d914:	9b0a      	ldr	r3, [sp, #40]	; 0x28
 801d916:	eba5 050e 	sub.w	r5, r5, lr
 801d91a:	4543      	cmp	r3, r8
 801d91c:	b2ad      	uxth	r5, r5
 801d91e:	460c      	mov	r4, r1
 801d920:	d802      	bhi.n	801d928 <_ZN8touchgfx8LCD16bpp19DecompressorL8_LZW916blitCopyARGB8888EPKhS3_RKNS_4RectES6_h+0x17c>
 801d922:	e070      	b.n	801da06 <_ZN8touchgfx8LCD16bpp19DecompressorL8_LZW916blitCopyARGB8888EPKhS3_RKNS_4RectES6_h+0x25a>
 801d924:	2b00      	cmp	r3, #0
 801d926:	d15c      	bne.n	801d9e2 <_ZN8touchgfx8LCD16bpp19DecompressorL8_LZW916blitCopyARGB8888EPKhS3_RKNS_4RectES6_h+0x236>
 801d928:	9b05      	ldr	r3, [sp, #20]
 801d92a:	9a04      	ldr	r2, [sp, #16]
 801d92c:	785b      	ldrb	r3, [r3, #1]
 801d92e:	9904      	ldr	r1, [sp, #16]
 801d930:	f1c2 0207 	rsb	r2, r2, #7
 801d934:	4093      	lsls	r3, r2
 801d936:	005b      	lsls	r3, r3, #1
 801d938:	f403 72ff 	and.w	r2, r3, #510	; 0x1fe
 801d93c:	9b05      	ldr	r3, [sp, #20]
 801d93e:	781b      	ldrb	r3, [r3, #0]
 801d940:	410b      	asrs	r3, r1
 801d942:	3101      	adds	r1, #1
 801d944:	b2c9      	uxtb	r1, r1
 801d946:	2908      	cmp	r1, #8
 801d948:	9104      	str	r1, [sp, #16]
 801d94a:	9905      	ldr	r1, [sp, #20]
 801d94c:	bf0a      	itet	eq
 801d94e:	3102      	addeq	r1, #2
 801d950:	3101      	addne	r1, #1
 801d952:	9105      	streq	r1, [sp, #20]
 801d954:	b2db      	uxtb	r3, r3
 801d956:	bf0a      	itet	eq
 801d958:	2100      	moveq	r1, #0
 801d95a:	9105      	strne	r1, [sp, #20]
 801d95c:	9104      	streq	r1, [sp, #16]
 801d95e:	4313      	orrs	r3, r2
 801d960:	9910      	ldr	r1, [sp, #64]	; 0x40
 801d962:	b29a      	uxth	r2, r3
 801d964:	4291      	cmp	r1, r2
 801d966:	d30a      	bcc.n	801d97e <_ZN8touchgfx8LCD16bpp19DecompressorL8_LZW916blitCopyARGB8888EPKhS3_RKNS_4RectES6_h+0x1d2>
 801d968:	f88b 3804 	strb.w	r3, [fp, #2052]	; 0x804
 801d96c:	2301      	movs	r3, #1
 801d96e:	9907      	ldr	r1, [sp, #28]
 801d970:	f5b1 7f00 	cmp.w	r1, #512	; 0x200
 801d974:	d30f      	bcc.n	801d996 <_ZN8touchgfx8LCD16bpp19DecompressorL8_LZW916blitCopyARGB8888EPKhS3_RKNS_4RectES6_h+0x1ea>
 801d976:	2100      	movs	r1, #0
 801d978:	9301      	str	r3, [sp, #4]
 801d97a:	9103      	str	r1, [sp, #12]
 801d97c:	e032      	b.n	801d9e4 <_ZN8touchgfx8LCD16bpp19DecompressorL8_LZW916blitCopyARGB8888EPKhS3_RKNS_4RectES6_h+0x238>
 801d97e:	9b07      	ldr	r3, [sp, #28]
 801d980:	429a      	cmp	r2, r3
 801d982:	d318      	bcc.n	801d9b6 <_ZN8touchgfx8LCD16bpp19DecompressorL8_LZW916blitCopyARGB8888EPKhS3_RKNS_4RectES6_h+0x20a>
 801d984:	9b01      	ldr	r3, [sp, #4]
 801d986:	f89b 1804 	ldrb.w	r1, [fp, #2052]	; 0x804
 801d98a:	445b      	add	r3, fp
 801d98c:	f883 1804 	strb.w	r1, [r3, #2052]	; 0x804
 801d990:	9b01      	ldr	r3, [sp, #4]
 801d992:	3301      	adds	r3, #1
 801d994:	b29b      	uxth	r3, r3
 801d996:	9907      	ldr	r1, [sp, #28]
 801d998:	f89b 0804 	ldrb.w	r0, [fp, #2052]	; 0x804
 801d99c:	eb0b 0181 	add.w	r1, fp, r1, lsl #2
 801d9a0:	7108      	strb	r0, [r1, #4]
 801d9a2:	980b      	ldr	r0, [sp, #44]	; 0x2c
 801d9a4:	80c8      	strh	r0, [r1, #6]
 801d9a6:	9801      	ldr	r0, [sp, #4]
 801d9a8:	3001      	adds	r0, #1
 801d9aa:	7148      	strb	r0, [r1, #5]
 801d9ac:	9907      	ldr	r1, [sp, #28]
 801d9ae:	3101      	adds	r1, #1
 801d9b0:	b289      	uxth	r1, r1
 801d9b2:	9107      	str	r1, [sp, #28]
 801d9b4:	e7df      	b.n	801d976 <_ZN8touchgfx8LCD16bpp19DecompressorL8_LZW916blitCopyARGB8888EPKhS3_RKNS_4RectES6_h+0x1ca>
 801d9b6:	eb0b 0382 	add.w	r3, fp, r2, lsl #2
 801d9ba:	4611      	mov	r1, r2
 801d9bc:	795b      	ldrb	r3, [r3, #5]
 801d9be:	f603 0004 	addw	r0, r3, #2052	; 0x804
 801d9c2:	4458      	add	r0, fp
 801d9c4:	9e17      	ldr	r6, [sp, #92]	; 0x5c
 801d9c6:	4406      	add	r6, r0
 801d9c8:	2e00      	cmp	r6, #0
 801d9ca:	dd06      	ble.n	801d9da <_ZN8touchgfx8LCD16bpp19DecompressorL8_LZW916blitCopyARGB8888EPKhS3_RKNS_4RectES6_h+0x22e>
 801d9cc:	eb0b 0181 	add.w	r1, fp, r1, lsl #2
 801d9d0:	790e      	ldrb	r6, [r1, #4]
 801d9d2:	f800 6d01 	strb.w	r6, [r0, #-1]!
 801d9d6:	88c9      	ldrh	r1, [r1, #6]
 801d9d8:	e7f4      	b.n	801d9c4 <_ZN8touchgfx8LCD16bpp19DecompressorL8_LZW916blitCopyARGB8888EPKhS3_RKNS_4RectES6_h+0x218>
 801d9da:	f88b 1804 	strb.w	r1, [fp, #2052]	; 0x804
 801d9de:	b29b      	uxth	r3, r3
 801d9e0:	e7c5      	b.n	801d96e <_ZN8touchgfx8LCD16bpp19DecompressorL8_LZW916blitCopyARGB8888EPKhS3_RKNS_4RectES6_h+0x1c2>
 801d9e2:	9a0b      	ldr	r2, [sp, #44]	; 0x2c
 801d9e4:	920b      	str	r2, [sp, #44]	; 0x2c
 801d9e6:	4621      	mov	r1, r4
 801d9e8:	469e      	mov	lr, r3
 801d9ea:	e78f      	b.n	801d90c <_ZN8touchgfx8LCD16bpp19DecompressorL8_LZW916blitCopyARGB8888EPKhS3_RKNS_4RectES6_h+0x160>
 801d9ec:	9a03      	ldr	r2, [sp, #12]
 801d9ee:	f8bd 4018 	ldrh.w	r4, [sp, #24]
 801d9f2:	442a      	add	r2, r5
 801d9f4:	ebae 0305 	sub.w	r3, lr, r5
 801d9f8:	b292      	uxth	r2, r2
 801d9fa:	b29b      	uxth	r3, r3
 801d9fc:	9203      	str	r2, [sp, #12]
 801d9fe:	2500      	movs	r5, #0
 801da00:	9a0a      	ldr	r2, [sp, #40]	; 0x28
 801da02:	4542      	cmp	r2, r8
 801da04:	d88e      	bhi.n	801d924 <_ZN8touchgfx8LCD16bpp19DecompressorL8_LZW916blitCopyARGB8888EPKhS3_RKNS_4RectES6_h+0x178>
 801da06:	4621      	mov	r1, r4
 801da08:	e74e      	b.n	801d8a8 <_ZN8touchgfx8LCD16bpp19DecompressorL8_LZW916blitCopyARGB8888EPKhS3_RKNS_4RectES6_h+0xfc>
 801da0a:	458e      	cmp	lr, r1
 801da0c:	bf29      	itett	cs
 801da0e:	ebae 0301 	subcs.w	r3, lr, r1
 801da12:	eba1 040e 	subcc.w	r4, r1, lr
 801da16:	b29b      	uxthcs	r3, r3
 801da18:	910c      	strcs	r1, [sp, #48]	; 0x30
 801da1a:	bf2f      	iteee	cs
 801da1c:	462c      	movcs	r4, r5
 801da1e:	b2a4      	uxthcc	r4, r4
 801da20:	f8cd e030 	strcc.w	lr, [sp, #48]	; 0x30
 801da24:	462b      	movcc	r3, r5
 801da26:	f04f 0900 	mov.w	r9, #0
 801da2a:	9a03      	ldr	r2, [sp, #12]
 801da2c:	980c      	ldr	r0, [sp, #48]	; 0x30
 801da2e:	444a      	add	r2, r9
 801da30:	4548      	cmp	r0, r9
 801da32:	b292      	uxth	r2, r2
 801da34:	d074      	beq.n	801db20 <_ZN8touchgfx8LCD16bpp19DecompressorL8_LZW916blitCopyARGB8888EPKhS3_RKNS_4RectES6_h+0x374>
 801da36:	445a      	add	r2, fp
 801da38:	2004      	movs	r0, #4
 801da3a:	4605      	mov	r5, r0
 801da3c:	f892 2804 	ldrb.w	r2, [r2, #2052]	; 0x804
 801da40:	9813      	ldr	r0, [sp, #76]	; 0x4c
 801da42:	fb15 0202 	smlabb	r2, r5, r2, r0
 801da46:	9812      	ldr	r0, [sp, #72]	; 0x48
 801da48:	5880      	ldr	r0, [r0, r2]
 801da4a:	ea5f 6a10 	movs.w	sl, r0, lsr #24
 801da4e:	d014      	beq.n	801da7a <_ZN8touchgfx8LCD16bpp19DecompressorL8_LZW916blitCopyARGB8888EPKhS3_RKNS_4RectES6_h+0x2ce>
 801da50:	f1ba 0fff 	cmp.w	sl, #255	; 0xff
 801da54:	ea4f 2510 	mov.w	r5, r0, lsr #8
 801da58:	d112      	bne.n	801da80 <_ZN8touchgfx8LCD16bpp19DecompressorL8_LZW916blitCopyARGB8888EPKhS3_RKNS_4RectES6_h+0x2d4>
 801da5a:	9a0e      	ldr	r2, [sp, #56]	; 0x38
 801da5c:	2aff      	cmp	r2, #255	; 0xff
 801da5e:	d10f      	bne.n	801da80 <_ZN8touchgfx8LCD16bpp19DecompressorL8_LZW916blitCopyARGB8888EPKhS3_RKNS_4RectES6_h+0x2d4>
 801da60:	0942      	lsrs	r2, r0, #5
 801da62:	f425 65ff 	bic.w	r5, r5, #2040	; 0x7f8
 801da66:	f402 62fc 	and.w	r2, r2, #2016	; 0x7e0
 801da6a:	f025 0507 	bic.w	r5, r5, #7
 801da6e:	4315      	orrs	r5, r2
 801da70:	f3c0 00c4 	ubfx	r0, r0, #3, #5
 801da74:	4305      	orrs	r5, r0
 801da76:	f828 5019 	strh.w	r5, [r8, r9, lsl #1]
 801da7a:	f109 0901 	add.w	r9, r9, #1
 801da7e:	e7d4      	b.n	801da2a <_ZN8touchgfx8LCD16bpp19DecompressorL8_LZW916blitCopyARGB8888EPKhS3_RKNS_4RectES6_h+0x27e>
 801da80:	f838 c019 	ldrh.w	ip, [r8, r9, lsl #1]
 801da84:	ea4f 06ec 	mov.w	r6, ip, asr #3
 801da88:	f006 02fc 	and.w	r2, r6, #252	; 0xfc
 801da8c:	9215      	str	r2, [sp, #84]	; 0x54
 801da8e:	9a0e      	ldr	r2, [sp, #56]	; 0x38
 801da90:	fb02 fa0a 	mul.w	sl, r2, sl
 801da94:	f10a 0201 	add.w	r2, sl, #1
 801da98:	eb02 222a 	add.w	r2, r2, sl, asr #8
 801da9c:	ea4f 272c 	mov.w	r7, ip, asr #8
 801daa0:	1212      	asrs	r2, r2, #8
 801daa2:	fa1f fa82 	uxth.w	sl, r2
 801daa6:	f3c0 4607 	ubfx	r6, r0, #16, #8
 801daaa:	f007 07f8 	and.w	r7, r7, #248	; 0xf8
 801daae:	ea4f 0ccc 	mov.w	ip, ip, lsl #3
 801dab2:	43d2      	mvns	r2, r2
 801dab4:	b2d2      	uxtb	r2, r2
 801dab6:	fb16 f60a 	smulbb	r6, r6, sl
 801daba:	fa5f fc8c 	uxtb.w	ip, ip
 801dabe:	ea47 1757 	orr.w	r7, r7, r7, lsr #5
 801dac2:	b2c0      	uxtb	r0, r0
 801dac4:	fb07 6702 	mla	r7, r7, r2, r6
 801dac8:	ea4c 1c5c 	orr.w	ip, ip, ip, lsr #5
 801dacc:	9e15      	ldr	r6, [sp, #84]	; 0x54
 801dace:	fb10 f00a 	smulbb	r0, r0, sl
 801dad2:	fb0c 0002 	mla	r0, ip, r2, r0
 801dad6:	b2ed      	uxtb	r5, r5
 801dad8:	b2bf      	uxth	r7, r7
 801dada:	fb15 f50a 	smulbb	r5, r5, sl
 801dade:	b280      	uxth	r0, r0
 801dae0:	ea46 1696 	orr.w	r6, r6, r6, lsr #6
 801dae4:	fb06 5602 	mla	r6, r6, r2, r5
 801dae8:	1c7a      	adds	r2, r7, #1
 801daea:	1c45      	adds	r5, r0, #1
 801daec:	eb02 2717 	add.w	r7, r2, r7, lsr #8
 801daf0:	eb05 2510 	add.w	r5, r5, r0, lsr #8
 801daf4:	b2b6      	uxth	r6, r6
 801daf6:	f3c5 25c4 	ubfx	r5, r5, #11, #5
 801dafa:	f407 4778 	and.w	r7, r7, #63488	; 0xf800
 801dafe:	432f      	orrs	r7, r5
 801db00:	1c75      	adds	r5, r6, #1
 801db02:	eb05 2516 	add.w	r5, r5, r6, lsr #8
 801db06:	096d      	lsrs	r5, r5, #5
 801db08:	f405 65fc 	and.w	r5, r5, #2016	; 0x7e0
 801db0c:	432f      	orrs	r7, r5
 801db0e:	f828 7019 	strh.w	r7, [r8, r9, lsl #1]
 801db12:	e7b2      	b.n	801da7a <_ZN8touchgfx8LCD16bpp19DecompressorL8_LZW916blitCopyARGB8888EPKhS3_RKNS_4RectES6_h+0x2ce>
 801db14:	2001381c 	.word	0x2001381c
 801db18:	20013816 	.word	0x20013816
 801db1c:	fffff7fb 	.word	0xfffff7fb
 801db20:	9203      	str	r2, [sp, #12]
 801db22:	9a0c      	ldr	r2, [sp, #48]	; 0x30
 801db24:	458e      	cmp	lr, r1
 801db26:	eb08 0842 	add.w	r8, r8, r2, lsl #1
 801db2a:	f4ff af68 	bcc.w	801d9fe <_ZN8touchgfx8LCD16bpp19DecompressorL8_LZW916blitCopyARGB8888EPKhS3_RKNS_4RectES6_h+0x252>
 801db2e:	9a16      	ldr	r2, [sp, #88]	; 0x58
 801db30:	9906      	ldr	r1, [sp, #24]
 801db32:	8812      	ldrh	r2, [r2, #0]
 801db34:	1a52      	subs	r2, r2, r1
 801db36:	eb08 0842 	add.w	r8, r8, r2, lsl #1
 801db3a:	9a09      	ldr	r2, [sp, #36]	; 0x24
 801db3c:	9914      	ldr	r1, [sp, #80]	; 0x50
 801db3e:	3201      	adds	r2, #1
 801db40:	428a      	cmp	r2, r1
 801db42:	9209      	str	r2, [sp, #36]	; 0x24
 801db44:	d111      	bne.n	801db6a <_ZN8touchgfx8LCD16bpp19DecompressorL8_LZW916blitCopyARGB8888EPKhS3_RKNS_4RectES6_h+0x3be>
 801db46:	f8bd 5068 	ldrh.w	r5, [sp, #104]	; 0x68
 801db4a:	f8bd 9060 	ldrh.w	r9, [sp, #96]	; 0x60
 801db4e:	9b06      	ldr	r3, [sp, #24]
 801db50:	eba5 0509 	sub.w	r5, r5, r9
 801db54:	b2ad      	uxth	r5, r5
 801db56:	2d00      	cmp	r5, #0
 801db58:	bf08      	it	eq
 801db5a:	4619      	moveq	r1, r3
 801db5c:	9b0d      	ldr	r3, [sp, #52]	; 0x34
 801db5e:	bf18      	it	ne
 801db60:	2100      	movne	r1, #0
 801db62:	3301      	adds	r3, #1
 801db64:	930d      	str	r3, [sp, #52]	; 0x34
 801db66:	b289      	uxth	r1, r1
 801db68:	e695      	b.n	801d896 <_ZN8touchgfx8LCD16bpp19DecompressorL8_LZW916blitCopyARGB8888EPKhS3_RKNS_4RectES6_h+0xea>
 801db6a:	f8bd 4018 	ldrh.w	r4, [sp, #24]
 801db6e:	f8bd 5064 	ldrh.w	r5, [sp, #100]	; 0x64
 801db72:	1b2d      	subs	r5, r5, r4
 801db74:	b2ad      	uxth	r5, r5
 801db76:	2d00      	cmp	r5, #0
 801db78:	bf18      	it	ne
 801db7a:	2400      	movne	r4, #0
 801db7c:	e740      	b.n	801da00 <_ZN8touchgfx8LCD16bpp19DecompressorL8_LZW916blitCopyARGB8888EPKhS3_RKNS_4RectES6_h+0x254>
 801db7e:	4b04      	ldr	r3, [pc, #16]	; (801db90 <_ZN8touchgfx8LCD16bpp19DecompressorL8_LZW916blitCopyARGB8888EPKhS3_RKNS_4RectES6_h+0x3e4>)
 801db80:	6818      	ldr	r0, [r3, #0]
 801db82:	6803      	ldr	r3, [r0, #0]
 801db84:	6adb      	ldr	r3, [r3, #44]	; 0x2c
 801db86:	4798      	blx	r3
 801db88:	b01d      	add	sp, #116	; 0x74
 801db8a:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
 801db8e:	bf00      	nop
 801db90:	2001381c 	.word	0x2001381c

0801db94 <_ZN8touchgfx8LCD16bpp19DecompressorL8_LZW914blitCopyRGB888EPKhS3_RKNS_4RectES6_h>:
 801db94:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 801db98:	b09f      	sub	sp, #124	; 0x7c
 801db9a:	e9cd 1213 	strd	r1, r2, [sp, #76]	; 0x4c
 801db9e:	f89d 20a4 	ldrb.w	r2, [sp, #164]	; 0xa4
 801dba2:	920a      	str	r2, [sp, #40]	; 0x28
 801dba4:	461d      	mov	r5, r3
 801dba6:	4604      	mov	r4, r0
 801dba8:	9b28      	ldr	r3, [sp, #160]	; 0xa0
 801dbaa:	2a00      	cmp	r2, #0
 801dbac:	f000 81fa 	beq.w	801dfa4 <_ZN8touchgfx8LCD16bpp19DecompressorL8_LZW914blitCopyRGB888EPKhS3_RKNS_4RectES6_h+0x410>
 801dbb0:	6828      	ldr	r0, [r5, #0]
 801dbb2:	6869      	ldr	r1, [r5, #4]
 801dbb4:	aa1a      	add	r2, sp, #104	; 0x68
 801dbb6:	c203      	stmia	r2!, {r0, r1}
 801dbb8:	6818      	ldr	r0, [r3, #0]
 801dbba:	6859      	ldr	r1, [r3, #4]
 801dbbc:	aa1c      	add	r2, sp, #112	; 0x70
 801dbbe:	c203      	stmia	r2!, {r0, r1}
 801dbc0:	a81a      	add	r0, sp, #104	; 0x68
 801dbc2:	f7f8 fb51 	bl	8016268 <_ZN8touchgfx21DisplayTransformation29transformDisplayToFrameBufferERNS_4RectE>
 801dbc6:	4629      	mov	r1, r5
 801dbc8:	a81c      	add	r0, sp, #112	; 0x70
 801dbca:	f7f8 fb91 	bl	80162f0 <_ZN8touchgfx21DisplayTransformation29transformDisplayToFrameBufferERNS_4RectERKS1_>
 801dbce:	f9bd 306c 	ldrsh.w	r3, [sp, #108]	; 0x6c
 801dbd2:	f9bd 606e 	ldrsh.w	r6, [sp, #110]	; 0x6e
 801dbd6:	f9bd 7076 	ldrsh.w	r7, [sp, #118]	; 0x76
 801dbda:	f5b3 6f80 	cmp.w	r3, #1024	; 0x400
 801dbde:	bfd7      	itett	le
 801dbe0:	b29a      	uxthle	r2, r3
 801dbe2:	2201      	movgt	r2, #1
 801dbe4:	f44f 6180 	movle.w	r1, #1024	; 0x400
 801dbe8:	fb91 f2f2 	sdivle	r2, r1, r2
 801dbec:	9201      	str	r2, [sp, #4]
 801dbee:	9801      	ldr	r0, [sp, #4]
 801dbf0:	f9bd 2072 	ldrsh.w	r2, [sp, #114]	; 0x72
 801dbf4:	fb92 f0f0 	sdiv	r0, r2, r0
 801dbf8:	b280      	uxth	r0, r0
 801dbfa:	9010      	str	r0, [sp, #64]	; 0x40
 801dbfc:	9901      	ldr	r1, [sp, #4]
 801dbfe:	9801      	ldr	r0, [sp, #4]
 801dc00:	9d10      	ldr	r5, [sp, #64]	; 0x40
 801dc02:	440e      	add	r6, r1
 801dc04:	fb05 2510 	mls	r5, r5, r0, r2
 801dc08:	fb15 f503 	smulbb	r5, r5, r3
 801dc0c:	3e01      	subs	r6, #1
 801dc0e:	f8bd 3068 	ldrh.w	r3, [sp, #104]	; 0x68
 801dc12:	fb96 f6f1 	sdiv	r6, r6, r1
 801dc16:	f8bd 1070 	ldrh.w	r1, [sp, #112]	; 0x70
 801dc1a:	440d      	add	r5, r1
 801dc1c:	4419      	add	r1, r3
 801dc1e:	f8bd 306a 	ldrh.w	r3, [sp, #106]	; 0x6a
 801dc22:	f8ad 1070 	strh.w	r1, [sp, #112]	; 0x70
 801dc26:	441a      	add	r2, r3
 801dc28:	f9bd 3074 	ldrsh.w	r3, [sp, #116]	; 0x74
 801dc2c:	9304      	str	r3, [sp, #16]
 801dc2e:	4b96      	ldr	r3, [pc, #600]	; (801de88 <_ZN8touchgfx8LCD16bpp19DecompressorL8_LZW914blitCopyRGB888EPKhS3_RKNS_4RectES6_h+0x2f4>)
 801dc30:	f8ad 2072 	strh.w	r2, [sp, #114]	; 0x72
 801dc34:	6818      	ldr	r0, [r3, #0]
 801dc36:	6803      	ldr	r3, [r0, #0]
 801dc38:	6a9b      	ldr	r3, [r3, #40]	; 0x28
 801dc3a:	4798      	blx	r3
 801dc3c:	4b93      	ldr	r3, [pc, #588]	; (801de8c <_ZN8touchgfx8LCD16bpp19DecompressorL8_LZW914blitCopyRGB888EPKhS3_RKNS_4RectES6_h+0x2f8>)
 801dc3e:	f9bd 1072 	ldrsh.w	r1, [sp, #114]	; 0x72
 801dc42:	881a      	ldrh	r2, [r3, #0]
 801dc44:	f9bd c070 	ldrsh.w	ip, [sp, #112]	; 0x70
 801dc48:	9318      	str	r3, [sp, #96]	; 0x60
 801dc4a:	fb02 c101 	mla	r1, r2, r1, ip
 801dc4e:	eb00 0b41 	add.w	fp, r0, r1, lsl #1
 801dc52:	4357      	muls	r7, r2
 801dc54:	eb0b 0247 	add.w	r2, fp, r7, lsl #1
 801dc58:	3601      	adds	r6, #1
 801dc5a:	920b      	str	r2, [sp, #44]	; 0x2c
 801dc5c:	9a14      	ldr	r2, [sp, #80]	; 0x50
 801dc5e:	4b8c      	ldr	r3, [pc, #560]	; (801de90 <_ZN8touchgfx8LCD16bpp19DecompressorL8_LZW914blitCopyRGB888EPKhS3_RKNS_4RectES6_h+0x2fc>)
 801dc60:	b2b6      	uxth	r6, r6
 801dc62:	eb02 0686 	add.w	r6, r2, r6, lsl #2
 801dc66:	1d32      	adds	r2, r6, #4
 801dc68:	9206      	str	r2, [sp, #24]
 801dc6a:	9a0a      	ldr	r2, [sp, #40]	; 0x28
 801dc6c:	43d2      	mvns	r2, r2
 801dc6e:	b2d2      	uxtb	r2, r2
 801dc70:	b2ad      	uxth	r5, r5
 801dc72:	9215      	str	r2, [sp, #84]	; 0x54
 801dc74:	9a04      	ldr	r2, [sp, #16]
 801dc76:	2d00      	cmp	r5, #0
 801dc78:	bf0c      	ite	eq
 801dc7a:	4611      	moveq	r1, r2
 801dc7c:	2100      	movne	r1, #0
 801dc7e:	2200      	movs	r2, #0
 801dc80:	1b1b      	subs	r3, r3, r4
 801dc82:	b289      	uxth	r1, r1
 801dc84:	920d      	str	r2, [sp, #52]	; 0x34
 801dc86:	9319      	str	r3, [sp, #100]	; 0x64
 801dc88:	9a10      	ldr	r2, [sp, #64]	; 0x40
 801dc8a:	9b0d      	ldr	r3, [sp, #52]	; 0x34
 801dc8c:	fa12 f383 	uxtah	r3, r2, r3
 801dc90:	9a14      	ldr	r2, [sp, #80]	; 0x50
 801dc92:	eb02 0383 	add.w	r3, r2, r3, lsl #2
 801dc96:	3304      	adds	r3, #4
 801dc98:	9307      	str	r3, [sp, #28]
 801dc9a:	9b0b      	ldr	r3, [sp, #44]	; 0x2c
 801dc9c:	455b      	cmp	r3, fp
 801dc9e:	f240 817c 	bls.w	801df9a <_ZN8touchgfx8LCD16bpp19DecompressorL8_LZW914blitCopyRGB888EPKhS3_RKNS_4RectES6_h+0x406>
 801dca2:	9a01      	ldr	r2, [sp, #4]
 801dca4:	f8bd 306c 	ldrh.w	r3, [sp, #108]	; 0x6c
 801dca8:	fbb5 f3f3 	udiv	r3, r5, r3
 801dcac:	1ad3      	subs	r3, r2, r3
 801dcae:	b29b      	uxth	r3, r3
 801dcb0:	9316      	str	r3, [sp, #88]	; 0x58
 801dcb2:	9b07      	ldr	r3, [sp, #28]
 801dcb4:	9807      	ldr	r0, [sp, #28]
 801dcb6:	785a      	ldrb	r2, [r3, #1]
 801dcb8:	789b      	ldrb	r3, [r3, #2]
 801dcba:	7800      	ldrb	r0, [r0, #0]
 801dcbc:	9011      	str	r0, [sp, #68]	; 0x44
 801dcbe:	021b      	lsls	r3, r3, #8
 801dcc0:	ea43 4302 	orr.w	r3, r3, r2, lsl #16
 801dcc4:	9a07      	ldr	r2, [sp, #28]
 801dcc6:	78d2      	ldrb	r2, [r2, #3]
 801dcc8:	4313      	orrs	r3, r2
 801dcca:	9a13      	ldr	r2, [sp, #76]	; 0x4c
 801dccc:	3001      	adds	r0, #1
 801dcce:	441a      	add	r2, r3
 801dcd0:	9005      	str	r0, [sp, #20]
 801dcd2:	1c50      	adds	r0, r2, #1
 801dcd4:	9003      	str	r0, [sp, #12]
 801dcd6:	7852      	ldrb	r2, [r2, #1]
 801dcd8:	9813      	ldr	r0, [sp, #76]	; 0x4c
 801dcda:	0212      	lsls	r2, r2, #8
 801dcdc:	5cc3      	ldrb	r3, [r0, r3]
 801dcde:	f402 72ff 	and.w	r2, r2, #510	; 0x1fe
 801dce2:	431a      	orrs	r2, r3
 801dce4:	b293      	uxth	r3, r2
 801dce6:	930c      	str	r3, [sp, #48]	; 0x30
 801dce8:	2300      	movs	r3, #0
 801dcea:	f884 2804 	strb.w	r2, [r4, #2052]	; 0x804
 801dcee:	9308      	str	r3, [sp, #32]
 801dcf0:	461a      	mov	r2, r3
 801dcf2:	f8bd 3028 	ldrh.w	r3, [sp, #40]	; 0x28
 801dcf6:	930e      	str	r3, [sp, #56]	; 0x38
 801dcf8:	f04f 0801 	mov.w	r8, #1
 801dcfc:	f8bd 3054 	ldrh.w	r3, [sp, #84]	; 0x54
 801dd00:	f8cd 8008 	str.w	r8, [sp, #8]
 801dd04:	46c4      	mov	ip, r8
 801dd06:	930f      	str	r3, [sp, #60]	; 0x3c
 801dd08:	2d00      	cmp	r5, #0
 801dd0a:	d07c      	beq.n	801de06 <_ZN8touchgfx8LCD16bpp19DecompressorL8_LZW914blitCopyRGB888EPKhS3_RKNS_4RectES6_h+0x272>
 801dd0c:	45ac      	cmp	ip, r5
 801dd0e:	d26c      	bcs.n	801ddea <_ZN8touchgfx8LCD16bpp19DecompressorL8_LZW914blitCopyRGB888EPKhS3_RKNS_4RectES6_h+0x256>
 801dd10:	9b0b      	ldr	r3, [sp, #44]	; 0x2c
 801dd12:	eba5 050c 	sub.w	r5, r5, ip
 801dd16:	455b      	cmp	r3, fp
 801dd18:	b2ad      	uxth	r5, r5
 801dd1a:	4608      	mov	r0, r1
 801dd1c:	d802      	bhi.n	801dd24 <_ZN8touchgfx8LCD16bpp19DecompressorL8_LZW914blitCopyRGB888EPKhS3_RKNS_4RectES6_h+0x190>
 801dd1e:	e070      	b.n	801de02 <_ZN8touchgfx8LCD16bpp19DecompressorL8_LZW914blitCopyRGB888EPKhS3_RKNS_4RectES6_h+0x26e>
 801dd20:	2b00      	cmp	r3, #0
 801dd22:	d15c      	bne.n	801ddde <_ZN8touchgfx8LCD16bpp19DecompressorL8_LZW914blitCopyRGB888EPKhS3_RKNS_4RectES6_h+0x24a>
 801dd24:	9b03      	ldr	r3, [sp, #12]
 801dd26:	9a02      	ldr	r2, [sp, #8]
 801dd28:	785b      	ldrb	r3, [r3, #1]
 801dd2a:	9902      	ldr	r1, [sp, #8]
 801dd2c:	f1c2 0207 	rsb	r2, r2, #7
 801dd30:	4093      	lsls	r3, r2
 801dd32:	005b      	lsls	r3, r3, #1
 801dd34:	f403 72ff 	and.w	r2, r3, #510	; 0x1fe
 801dd38:	9b03      	ldr	r3, [sp, #12]
 801dd3a:	781b      	ldrb	r3, [r3, #0]
 801dd3c:	410b      	asrs	r3, r1
 801dd3e:	3101      	adds	r1, #1
 801dd40:	b2c9      	uxtb	r1, r1
 801dd42:	2908      	cmp	r1, #8
 801dd44:	9102      	str	r1, [sp, #8]
 801dd46:	9903      	ldr	r1, [sp, #12]
 801dd48:	bf0a      	itet	eq
 801dd4a:	3102      	addeq	r1, #2
 801dd4c:	3101      	addne	r1, #1
 801dd4e:	9103      	streq	r1, [sp, #12]
 801dd50:	b2db      	uxtb	r3, r3
 801dd52:	bf0a      	itet	eq
 801dd54:	2100      	moveq	r1, #0
 801dd56:	9103      	strne	r1, [sp, #12]
 801dd58:	9102      	streq	r1, [sp, #8]
 801dd5a:	4313      	orrs	r3, r2
 801dd5c:	9911      	ldr	r1, [sp, #68]	; 0x44
 801dd5e:	b29a      	uxth	r2, r3
 801dd60:	4291      	cmp	r1, r2
 801dd62:	d30a      	bcc.n	801dd7a <_ZN8touchgfx8LCD16bpp19DecompressorL8_LZW914blitCopyRGB888EPKhS3_RKNS_4RectES6_h+0x1e6>
 801dd64:	f884 3804 	strb.w	r3, [r4, #2052]	; 0x804
 801dd68:	2301      	movs	r3, #1
 801dd6a:	9905      	ldr	r1, [sp, #20]
 801dd6c:	f5b1 7f00 	cmp.w	r1, #512	; 0x200
 801dd70:	d30f      	bcc.n	801dd92 <_ZN8touchgfx8LCD16bpp19DecompressorL8_LZW914blitCopyRGB888EPKhS3_RKNS_4RectES6_h+0x1fe>
 801dd72:	2100      	movs	r1, #0
 801dd74:	4698      	mov	r8, r3
 801dd76:	9100      	str	r1, [sp, #0]
 801dd78:	e032      	b.n	801dde0 <_ZN8touchgfx8LCD16bpp19DecompressorL8_LZW914blitCopyRGB888EPKhS3_RKNS_4RectES6_h+0x24c>
 801dd7a:	9b05      	ldr	r3, [sp, #20]
 801dd7c:	429a      	cmp	r2, r3
 801dd7e:	d318      	bcc.n	801ddb2 <_ZN8touchgfx8LCD16bpp19DecompressorL8_LZW914blitCopyRGB888EPKhS3_RKNS_4RectES6_h+0x21e>
 801dd80:	eb04 0308 	add.w	r3, r4, r8
 801dd84:	f894 1804 	ldrb.w	r1, [r4, #2052]	; 0x804
 801dd88:	f883 1804 	strb.w	r1, [r3, #2052]	; 0x804
 801dd8c:	f108 0301 	add.w	r3, r8, #1
 801dd90:	b29b      	uxth	r3, r3
 801dd92:	9905      	ldr	r1, [sp, #20]
 801dd94:	f894 6804 	ldrb.w	r6, [r4, #2052]	; 0x804
 801dd98:	eb04 0181 	add.w	r1, r4, r1, lsl #2
 801dd9c:	710e      	strb	r6, [r1, #4]
 801dd9e:	9e0c      	ldr	r6, [sp, #48]	; 0x30
 801dda0:	80ce      	strh	r6, [r1, #6]
 801dda2:	f108 0601 	add.w	r6, r8, #1
 801dda6:	714e      	strb	r6, [r1, #5]
 801dda8:	9905      	ldr	r1, [sp, #20]
 801ddaa:	3101      	adds	r1, #1
 801ddac:	b289      	uxth	r1, r1
 801ddae:	9105      	str	r1, [sp, #20]
 801ddb0:	e7df      	b.n	801dd72 <_ZN8touchgfx8LCD16bpp19DecompressorL8_LZW914blitCopyRGB888EPKhS3_RKNS_4RectES6_h+0x1de>
 801ddb2:	eb04 0382 	add.w	r3, r4, r2, lsl #2
 801ddb6:	4611      	mov	r1, r2
 801ddb8:	795b      	ldrb	r3, [r3, #5]
 801ddba:	f603 0604 	addw	r6, r3, #2052	; 0x804
 801ddbe:	4426      	add	r6, r4
 801ddc0:	9f19      	ldr	r7, [sp, #100]	; 0x64
 801ddc2:	4437      	add	r7, r6
 801ddc4:	2f00      	cmp	r7, #0
 801ddc6:	dd06      	ble.n	801ddd6 <_ZN8touchgfx8LCD16bpp19DecompressorL8_LZW914blitCopyRGB888EPKhS3_RKNS_4RectES6_h+0x242>
 801ddc8:	eb04 0181 	add.w	r1, r4, r1, lsl #2
 801ddcc:	790f      	ldrb	r7, [r1, #4]
 801ddce:	f806 7d01 	strb.w	r7, [r6, #-1]!
 801ddd2:	88c9      	ldrh	r1, [r1, #6]
 801ddd4:	e7f4      	b.n	801ddc0 <_ZN8touchgfx8LCD16bpp19DecompressorL8_LZW914blitCopyRGB888EPKhS3_RKNS_4RectES6_h+0x22c>
 801ddd6:	f884 1804 	strb.w	r1, [r4, #2052]	; 0x804
 801ddda:	b29b      	uxth	r3, r3
 801dddc:	e7c5      	b.n	801dd6a <_ZN8touchgfx8LCD16bpp19DecompressorL8_LZW914blitCopyRGB888EPKhS3_RKNS_4RectES6_h+0x1d6>
 801ddde:	9a0c      	ldr	r2, [sp, #48]	; 0x30
 801dde0:	920c      	str	r2, [sp, #48]	; 0x30
 801dde2:	4601      	mov	r1, r0
 801dde4:	9a00      	ldr	r2, [sp, #0]
 801dde6:	469c      	mov	ip, r3
 801dde8:	e78e      	b.n	801dd08 <_ZN8touchgfx8LCD16bpp19DecompressorL8_LZW914blitCopyRGB888EPKhS3_RKNS_4RectES6_h+0x174>
 801ddea:	1957      	adds	r7, r2, r5
 801ddec:	ebac 0305 	sub.w	r3, ip, r5
 801ddf0:	b2ba      	uxth	r2, r7
 801ddf2:	f8bd 0010 	ldrh.w	r0, [sp, #16]
 801ddf6:	9200      	str	r2, [sp, #0]
 801ddf8:	b29b      	uxth	r3, r3
 801ddfa:	2500      	movs	r5, #0
 801ddfc:	9a0b      	ldr	r2, [sp, #44]	; 0x2c
 801ddfe:	455a      	cmp	r2, fp
 801de00:	d88e      	bhi.n	801dd20 <_ZN8touchgfx8LCD16bpp19DecompressorL8_LZW914blitCopyRGB888EPKhS3_RKNS_4RectES6_h+0x18c>
 801de02:	4601      	mov	r1, r0
 801de04:	e749      	b.n	801dc9a <_ZN8touchgfx8LCD16bpp19DecompressorL8_LZW914blitCopyRGB888EPKhS3_RKNS_4RectES6_h+0x106>
 801de06:	458c      	cmp	ip, r1
 801de08:	bf2c      	ite	cs
 801de0a:	4628      	movcs	r0, r5
 801de0c:	462b      	movcc	r3, r5
 801de0e:	9d0a      	ldr	r5, [sp, #40]	; 0x28
 801de10:	bf27      	ittee	cs
 801de12:	9109      	strcs	r1, [sp, #36]	; 0x24
 801de14:	ebac 0301 	subcs.w	r3, ip, r1
 801de18:	eba1 000c 	subcc.w	r0, r1, ip
 801de1c:	f8cd c024 	strcc.w	ip, [sp, #36]	; 0x24
 801de20:	bf2c      	ite	cs
 801de22:	b29b      	uxthcs	r3, r3
 801de24:	b280      	uxthcc	r0, r0
 801de26:	2dff      	cmp	r5, #255	; 0xff
 801de28:	9d09      	ldr	r5, [sp, #36]	; 0x24
 801de2a:	eb02 0705 	add.w	r7, r2, r5
 801de2e:	b2bd      	uxth	r5, r7
 801de30:	9500      	str	r5, [sp, #0]
 801de32:	d12f      	bne.n	801de94 <_ZN8touchgfx8LCD16bpp19DecompressorL8_LZW914blitCopyRGB888EPKhS3_RKNS_4RectES6_h+0x300>
 801de34:	465e      	mov	r6, fp
 801de36:	9d00      	ldr	r5, [sp, #0]
 801de38:	42aa      	cmp	r2, r5
 801de3a:	f040 8084 	bne.w	801df46 <_ZN8touchgfx8LCD16bpp19DecompressorL8_LZW914blitCopyRGB888EPKhS3_RKNS_4RectES6_h+0x3b2>
 801de3e:	9a09      	ldr	r2, [sp, #36]	; 0x24
 801de40:	458c      	cmp	ip, r1
 801de42:	eb0b 0b42 	add.w	fp, fp, r2, lsl #1
 801de46:	d3d8      	bcc.n	801ddfa <_ZN8touchgfx8LCD16bpp19DecompressorL8_LZW914blitCopyRGB888EPKhS3_RKNS_4RectES6_h+0x266>
 801de48:	9a18      	ldr	r2, [sp, #96]	; 0x60
 801de4a:	9904      	ldr	r1, [sp, #16]
 801de4c:	8812      	ldrh	r2, [r2, #0]
 801de4e:	1a52      	subs	r2, r2, r1
 801de50:	eb0b 0b42 	add.w	fp, fp, r2, lsl #1
 801de54:	9a08      	ldr	r2, [sp, #32]
 801de56:	9916      	ldr	r1, [sp, #88]	; 0x58
 801de58:	3201      	adds	r2, #1
 801de5a:	428a      	cmp	r2, r1
 801de5c:	9208      	str	r2, [sp, #32]
 801de5e:	f040 8092 	bne.w	801df86 <_ZN8touchgfx8LCD16bpp19DecompressorL8_LZW914blitCopyRGB888EPKhS3_RKNS_4RectES6_h+0x3f2>
 801de62:	f8bd 5070 	ldrh.w	r5, [sp, #112]	; 0x70
 801de66:	f8bd c068 	ldrh.w	ip, [sp, #104]	; 0x68
 801de6a:	9b04      	ldr	r3, [sp, #16]
 801de6c:	eba5 050c 	sub.w	r5, r5, ip
 801de70:	b2ad      	uxth	r5, r5
 801de72:	2d00      	cmp	r5, #0
 801de74:	bf08      	it	eq
 801de76:	4619      	moveq	r1, r3
 801de78:	9b0d      	ldr	r3, [sp, #52]	; 0x34
 801de7a:	bf18      	it	ne
 801de7c:	2100      	movne	r1, #0
 801de7e:	3301      	adds	r3, #1
 801de80:	930d      	str	r3, [sp, #52]	; 0x34
 801de82:	b289      	uxth	r1, r1
 801de84:	e700      	b.n	801dc88 <_ZN8touchgfx8LCD16bpp19DecompressorL8_LZW914blitCopyRGB888EPKhS3_RKNS_4RectES6_h+0xf4>
 801de86:	bf00      	nop
 801de88:	2001381c 	.word	0x2001381c
 801de8c:	20013816 	.word	0x20013816
 801de90:	fffff7fb 	.word	0xfffff7fb
 801de94:	46d9      	mov	r9, fp
 801de96:	9d00      	ldr	r5, [sp, #0]
 801de98:	42aa      	cmp	r2, r5
 801de9a:	d0d0      	beq.n	801de3e <_ZN8touchgfx8LCD16bpp19DecompressorL8_LZW914blitCopyRGB888EPKhS3_RKNS_4RectES6_h+0x2aa>
 801de9c:	1c55      	adds	r5, r2, #1
 801de9e:	4422      	add	r2, r4
 801dea0:	9517      	str	r5, [sp, #92]	; 0x5c
 801dea2:	f892 e804 	ldrb.w	lr, [r2, #2052]	; 0x804
 801dea6:	9a06      	ldr	r2, [sp, #24]
 801dea8:	eb0e 0e4e 	add.w	lr, lr, lr, lsl #1
 801deac:	4472      	add	r2, lr
 801deae:	9212      	str	r2, [sp, #72]	; 0x48
 801deb0:	9f12      	ldr	r7, [sp, #72]	; 0x48
 801deb2:	f8b9 2000 	ldrh.w	r2, [r9]
 801deb6:	f897 a002 	ldrb.w	sl, [r7, #2]
 801deba:	9f0e      	ldr	r7, [sp, #56]	; 0x38
 801debc:	1216      	asrs	r6, r2, #8
 801debe:	fb1a fa07 	smulbb	sl, sl, r7
 801dec2:	f006 06f8 	and.w	r6, r6, #248	; 0xf8
 801dec6:	9f0f      	ldr	r7, [sp, #60]	; 0x3c
 801dec8:	ea46 1656 	orr.w	r6, r6, r6, lsr #5
 801decc:	fb06 a607 	mla	r6, r6, r7, sl
 801ded0:	9f12      	ldr	r7, [sp, #72]	; 0x48
 801ded2:	f897 a001 	ldrb.w	sl, [r7, #1]
 801ded6:	9f0e      	ldr	r7, [sp, #56]	; 0x38
 801ded8:	10d5      	asrs	r5, r2, #3
 801deda:	fb1a fa07 	smulbb	sl, sl, r7
 801dede:	f005 05fc 	and.w	r5, r5, #252	; 0xfc
 801dee2:	9f0f      	ldr	r7, [sp, #60]	; 0x3c
 801dee4:	ea45 1595 	orr.w	r5, r5, r5, lsr #6
 801dee8:	fb05 a507 	mla	r5, r5, r7, sl
 801deec:	9f06      	ldr	r7, [sp, #24]
 801deee:	f817 e00e 	ldrb.w	lr, [r7, lr]
 801def2:	9f0e      	ldr	r7, [sp, #56]	; 0x38
 801def4:	00d2      	lsls	r2, r2, #3
 801def6:	fb1e fe07 	smulbb	lr, lr, r7
 801defa:	b2d2      	uxtb	r2, r2
 801defc:	9f0f      	ldr	r7, [sp, #60]	; 0x3c
 801defe:	ea42 1252 	orr.w	r2, r2, r2, lsr #5
 801df02:	b2b6      	uxth	r6, r6
 801df04:	fb02 e207 	mla	r2, r2, r7, lr
 801df08:	b292      	uxth	r2, r2
 801df0a:	b2ad      	uxth	r5, r5
 801df0c:	f106 0a01 	add.w	sl, r6, #1
 801df10:	eb0a 2616 	add.w	r6, sl, r6, lsr #8
 801df14:	f102 0e01 	add.w	lr, r2, #1
 801df18:	f105 0a01 	add.w	sl, r5, #1
 801df1c:	eb0e 2e12 	add.w	lr, lr, r2, lsr #8
 801df20:	eb0a 2a15 	add.w	sl, sl, r5, lsr #8
 801df24:	f406 4678 	and.w	r6, r6, #63488	; 0xf800
 801df28:	f3ce 2ec4 	ubfx	lr, lr, #11, #5
 801df2c:	ea4f 1a5a 	mov.w	sl, sl, lsr #5
 801df30:	ea4e 0606 	orr.w	r6, lr, r6
 801df34:	f40a 6afc 	and.w	sl, sl, #2016	; 0x7e0
 801df38:	ea46 060a 	orr.w	r6, r6, sl
 801df3c:	f829 6b02 	strh.w	r6, [r9], #2
 801df40:	f8bd 205c 	ldrh.w	r2, [sp, #92]	; 0x5c
 801df44:	e7a7      	b.n	801de96 <_ZN8touchgfx8LCD16bpp19DecompressorL8_LZW914blitCopyRGB888EPKhS3_RKNS_4RectES6_h+0x302>
 801df46:	f102 0e01 	add.w	lr, r2, #1
 801df4a:	4422      	add	r2, r4
 801df4c:	9f06      	ldr	r7, [sp, #24]
 801df4e:	f892 5804 	ldrb.w	r5, [r2, #2052]	; 0x804
 801df52:	9a06      	ldr	r2, [sp, #24]
 801df54:	eb05 0545 	add.w	r5, r5, r5, lsl #1
 801df58:	eb02 0a05 	add.w	sl, r2, r5
 801df5c:	4a13      	ldr	r2, [pc, #76]	; (801dfac <_ZN8touchgfx8LCD16bpp19DecompressorL8_LZW914blitCopyRGB888EPKhS3_RKNS_4RectES6_h+0x418>)
 801df5e:	f89a 9002 	ldrb.w	r9, [sl, #2]
 801df62:	ea02 2909 	and.w	r9, r2, r9, lsl #8
 801df66:	f89a 2001 	ldrb.w	r2, [sl, #1]
 801df6a:	00d2      	lsls	r2, r2, #3
 801df6c:	f402 62fc 	and.w	r2, r2, #2016	; 0x7e0
 801df70:	ea49 0202 	orr.w	r2, r9, r2
 801df74:	f817 9005 	ldrb.w	r9, [r7, r5]
 801df78:	ea42 02d9 	orr.w	r2, r2, r9, lsr #3
 801df7c:	f826 2b02 	strh.w	r2, [r6], #2
 801df80:	fa1f f28e 	uxth.w	r2, lr
 801df84:	e757      	b.n	801de36 <_ZN8touchgfx8LCD16bpp19DecompressorL8_LZW914blitCopyRGB888EPKhS3_RKNS_4RectES6_h+0x2a2>
 801df86:	f8bd 0010 	ldrh.w	r0, [sp, #16]
 801df8a:	f8bd 506c 	ldrh.w	r5, [sp, #108]	; 0x6c
 801df8e:	1a2d      	subs	r5, r5, r0
 801df90:	b2ad      	uxth	r5, r5
 801df92:	2d00      	cmp	r5, #0
 801df94:	bf18      	it	ne
 801df96:	2000      	movne	r0, #0
 801df98:	e730      	b.n	801ddfc <_ZN8touchgfx8LCD16bpp19DecompressorL8_LZW914blitCopyRGB888EPKhS3_RKNS_4RectES6_h+0x268>
 801df9a:	4b05      	ldr	r3, [pc, #20]	; (801dfb0 <_ZN8touchgfx8LCD16bpp19DecompressorL8_LZW914blitCopyRGB888EPKhS3_RKNS_4RectES6_h+0x41c>)
 801df9c:	6818      	ldr	r0, [r3, #0]
 801df9e:	6803      	ldr	r3, [r0, #0]
 801dfa0:	6adb      	ldr	r3, [r3, #44]	; 0x2c
 801dfa2:	4798      	blx	r3
 801dfa4:	b01f      	add	sp, #124	; 0x7c
 801dfa6:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
 801dfaa:	bf00      	nop
 801dfac:	fffff800 	.word	0xfffff800
 801dfb0:	2001381c 	.word	0x2001381c

0801dfb4 <_ZN8touchgfx8LCD16bpp29copyFrameBufferRegionToMemoryERKNS_4RectES3_Phss>:
 801dfb4:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 801dfb8:	b091      	sub	sp, #68	; 0x44
 801dfba:	469b      	mov	fp, r3
 801dfbc:	f10d 0828 	add.w	r8, sp, #40	; 0x28
 801dfc0:	4616      	mov	r6, r2
 801dfc2:	f9bd 906c 	ldrsh.w	r9, [sp, #108]	; 0x6c
 801dfc6:	f9b3 2000 	ldrsh.w	r2, [r3]
 801dfca:	f9bd 7070 	ldrsh.w	r7, [sp, #112]	; 0x70
 801dfce:	f9b3 3002 	ldrsh.w	r3, [r3, #2]
 801dfd2:	f8ad 2028 	strh.w	r2, [sp, #40]	; 0x28
 801dfd6:	4604      	mov	r4, r0
 801dfd8:	460d      	mov	r5, r1
 801dfda:	4640      	mov	r0, r8
 801dfdc:	4659      	mov	r1, fp
 801dfde:	f8ad 302a 	strh.w	r3, [sp, #42]	; 0x2a
 801dfe2:	f8ad 902c 	strh.w	r9, [sp, #44]	; 0x2c
 801dfe6:	f8ad 702e 	strh.w	r7, [sp, #46]	; 0x2e
 801dfea:	f7f2 fb9f 	bl	801072c <_ZN8touchgfx4RectaNERKS0_>
 801dfee:	4631      	mov	r1, r6
 801dff0:	4640      	mov	r0, r8
 801dff2:	f7f2 fb9b 	bl	801072c <_ZN8touchgfx4RectaNERKS0_>
 801dff6:	4b74      	ldr	r3, [pc, #464]	; (801e1c8 <_ZN8touchgfx8LCD16bpp29copyFrameBufferRegionToMemoryERKNS_4RectES3_Phss+0x214>)
 801dff8:	8818      	ldrh	r0, [r3, #0]
 801dffa:	4b74      	ldr	r3, [pc, #464]	; (801e1cc <_ZN8touchgfx8LCD16bpp29copyFrameBufferRegionToMemoryERKNS_4RectES3_Phss+0x218>)
 801dffc:	8819      	ldrh	r1, [r3, #0]
 801dffe:	f9bd 3028 	ldrsh.w	r3, [sp, #40]	; 0x28
 801e002:	2b00      	cmp	r3, #0
 801e004:	b202      	sxth	r2, r0
 801e006:	b20e      	sxth	r6, r1
 801e008:	da07      	bge.n	801e01a <_ZN8touchgfx8LCD16bpp29copyFrameBufferRegionToMemoryERKNS_4RectES3_Phss+0x66>
 801e00a:	f8bd c02c 	ldrh.w	ip, [sp, #44]	; 0x2c
 801e00e:	4463      	add	r3, ip
 801e010:	f8ad 302c 	strh.w	r3, [sp, #44]	; 0x2c
 801e014:	2300      	movs	r3, #0
 801e016:	f8ad 3028 	strh.w	r3, [sp, #40]	; 0x28
 801e01a:	f9bd 3028 	ldrsh.w	r3, [sp, #40]	; 0x28
 801e01e:	f9bd c02c 	ldrsh.w	ip, [sp, #44]	; 0x2c
 801e022:	1ad2      	subs	r2, r2, r3
 801e024:	4594      	cmp	ip, r2
 801e026:	bfc4      	itt	gt
 801e028:	1ac2      	subgt	r2, r0, r3
 801e02a:	f8ad 202c 	strhgt.w	r2, [sp, #44]	; 0x2c
 801e02e:	f9bd 202a 	ldrsh.w	r2, [sp, #42]	; 0x2a
 801e032:	2a00      	cmp	r2, #0
 801e034:	da07      	bge.n	801e046 <_ZN8touchgfx8LCD16bpp29copyFrameBufferRegionToMemoryERKNS_4RectES3_Phss+0x92>
 801e036:	f8bd c02e 	ldrh.w	ip, [sp, #46]	; 0x2e
 801e03a:	4462      	add	r2, ip
 801e03c:	f8ad 202e 	strh.w	r2, [sp, #46]	; 0x2e
 801e040:	2200      	movs	r2, #0
 801e042:	f8ad 202a 	strh.w	r2, [sp, #42]	; 0x2a
 801e046:	f9bd a02a 	ldrsh.w	sl, [sp, #42]	; 0x2a
 801e04a:	f9bd 202e 	ldrsh.w	r2, [sp, #46]	; 0x2e
 801e04e:	eba6 060a 	sub.w	r6, r6, sl
 801e052:	42b2      	cmp	r2, r6
 801e054:	bfc4      	itt	gt
 801e056:	eba1 020a 	subgt.w	r2, r1, sl
 801e05a:	f8ad 202e 	strhgt.w	r2, [sp, #46]	; 0x2e
 801e05e:	4a5c      	ldr	r2, [pc, #368]	; (801e1d0 <_ZN8touchgfx8LCD16bpp29copyFrameBufferRegionToMemoryERKNS_4RectES3_Phss+0x21c>)
 801e060:	7812      	ldrb	r2, [r2, #0]
 801e062:	b9a2      	cbnz	r2, 801e08e <_ZN8touchgfx8LCD16bpp29copyFrameBufferRegionToMemoryERKNS_4RectES3_Phss+0xda>
 801e064:	f9bd 602c 	ldrsh.w	r6, [sp, #44]	; 0x2c
 801e068:	4286      	cmp	r6, r0
 801e06a:	4640      	mov	r0, r8
 801e06c:	9303      	str	r3, [sp, #12]
 801e06e:	bf14      	ite	ne
 801e070:	2600      	movne	r6, #0
 801e072:	2601      	moveq	r6, #1
 801e074:	f7f2 fb9d 	bl	80107b2 <_ZNK8touchgfx4Rect7isEmptyEv>
 801e078:	9b03      	ldr	r3, [sp, #12]
 801e07a:	b160      	cbz	r0, 801e096 <_ZN8touchgfx8LCD16bpp29copyFrameBufferRegionToMemoryERKNS_4RectES3_Phss+0xe2>
 801e07c:	2300      	movs	r3, #0
 801e07e:	8023      	strh	r3, [r4, #0]
 801e080:	8063      	strh	r3, [r4, #2]
 801e082:	80a3      	strh	r3, [r4, #4]
 801e084:	4620      	mov	r0, r4
 801e086:	80e3      	strh	r3, [r4, #6]
 801e088:	b011      	add	sp, #68	; 0x44
 801e08a:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
 801e08e:	f9bd 602e 	ldrsh.w	r6, [sp, #46]	; 0x2e
 801e092:	428e      	cmp	r6, r1
 801e094:	e7e9      	b.n	801e06a <_ZN8touchgfx8LCD16bpp29copyFrameBufferRegionToMemoryERKNS_4RectES3_Phss+0xb6>
 801e096:	f9bd 202c 	ldrsh.w	r2, [sp, #44]	; 0x2c
 801e09a:	9205      	str	r2, [sp, #20]
 801e09c:	f9bd 202e 	ldrsh.w	r2, [sp, #46]	; 0x2e
 801e0a0:	9206      	str	r2, [sp, #24]
 801e0a2:	f8bb 2000 	ldrh.w	r2, [fp]
 801e0a6:	900e      	str	r0, [sp, #56]	; 0x38
 801e0a8:	1a9b      	subs	r3, r3, r2
 801e0aa:	b21b      	sxth	r3, r3
 801e0ac:	9303      	str	r3, [sp, #12]
 801e0ae:	f8bb 3002 	ldrh.w	r3, [fp, #2]
 801e0b2:	f8ad 903c 	strh.w	r9, [sp, #60]	; 0x3c
 801e0b6:	ebaa 0a03 	sub.w	sl, sl, r3
 801e0ba:	fa0f f38a 	sxth.w	r3, sl
 801e0be:	9304      	str	r3, [sp, #16]
 801e0c0:	9b03      	ldr	r3, [sp, #12]
 801e0c2:	f8ad 3030 	strh.w	r3, [sp, #48]	; 0x30
 801e0c6:	9b04      	ldr	r3, [sp, #16]
 801e0c8:	f8ad 3032 	strh.w	r3, [sp, #50]	; 0x32
 801e0cc:	9b05      	ldr	r3, [sp, #20]
 801e0ce:	f8ad 3034 	strh.w	r3, [sp, #52]	; 0x34
 801e0d2:	a90e      	add	r1, sp, #56	; 0x38
 801e0d4:	9b06      	ldr	r3, [sp, #24]
 801e0d6:	f8ad 3036 	strh.w	r3, [sp, #54]	; 0x36
 801e0da:	a80c      	add	r0, sp, #48	; 0x30
 801e0dc:	f8ad 703e 	strh.w	r7, [sp, #62]	; 0x3e
 801e0e0:	f7f8 f906 	bl	80162f0 <_ZN8touchgfx21DisplayTransformation29transformDisplayToFrameBufferERNS_4RectERKS1_>
 801e0e4:	4640      	mov	r0, r8
 801e0e6:	f7f8 f8bf 	bl	8016268 <_ZN8touchgfx21DisplayTransformation29transformDisplayToFrameBufferERNS_4RectE>
 801e0ea:	a80e      	add	r0, sp, #56	; 0x38
 801e0ec:	f7f8 f8bc 	bl	8016268 <_ZN8touchgfx21DisplayTransformation29transformDisplayToFrameBufferERNS_4RectE>
 801e0f0:	4b38      	ldr	r3, [pc, #224]	; (801e1d4 <_ZN8touchgfx8LCD16bpp29copyFrameBufferRegionToMemoryERKNS_4RectES3_Phss+0x220>)
 801e0f2:	f9bd a03c 	ldrsh.w	sl, [sp, #60]	; 0x3c
 801e0f6:	881b      	ldrh	r3, [r3, #0]
 801e0f8:	9307      	str	r3, [sp, #28]
 801e0fa:	682b      	ldr	r3, [r5, #0]
 801e0fc:	f8df b0d8 	ldr.w	fp, [pc, #216]	; 801e1d8 <_ZN8touchgfx8LCD16bpp29copyFrameBufferRegionToMemoryERKNS_4RectES3_Phss+0x224>
 801e100:	6b1b      	ldr	r3, [r3, #48]	; 0x30
 801e102:	4628      	mov	r0, r5
 801e104:	4798      	blx	r3
 801e106:	f8bd 5032 	ldrh.w	r5, [sp, #50]	; 0x32
 801e10a:	f9bd 3030 	ldrsh.w	r3, [sp, #48]	; 0x30
 801e10e:	4681      	mov	r9, r0
 801e110:	fb1a 3305 	smlabb	r3, sl, r5, r3
 801e114:	f8db 0000 	ldr.w	r0, [fp]
 801e118:	9d1a      	ldr	r5, [sp, #104]	; 0x68
 801e11a:	eb05 0543 	add.w	r5, r5, r3, lsl #1
 801e11e:	6803      	ldr	r3, [r0, #0]
 801e120:	6b1b      	ldr	r3, [r3, #48]	; 0x30
 801e122:	4798      	blx	r3
 801e124:	4607      	mov	r7, r0
 801e126:	f8db 0000 	ldr.w	r0, [fp]
 801e12a:	f9bd 1028 	ldrsh.w	r1, [sp, #40]	; 0x28
 801e12e:	6803      	ldr	r3, [r0, #0]
 801e130:	f9bd 202a 	ldrsh.w	r2, [sp, #42]	; 0x2a
 801e134:	9109      	str	r1, [sp, #36]	; 0x24
 801e136:	9208      	str	r2, [sp, #32]
 801e138:	6b9b      	ldr	r3, [r3, #56]	; 0x38
 801e13a:	4798      	blx	r3
 801e13c:	f010 0f01 	tst.w	r0, #1
 801e140:	e9dd 2108 	ldrd	r2, r1, [sp, #32]
 801e144:	d012      	beq.n	801e16c <_ZN8touchgfx8LCD16bpp29copyFrameBufferRegionToMemoryERKNS_4RectES3_Phss+0x1b8>
 801e146:	f8db 0000 	ldr.w	r0, [fp]
 801e14a:	f9bd 2034 	ldrsh.w	r2, [sp, #52]	; 0x34
 801e14e:	6803      	ldr	r3, [r0, #0]
 801e150:	9200      	str	r2, [sp, #0]
 801e152:	6ede      	ldr	r6, [r3, #108]	; 0x6c
 801e154:	e898 0006 	ldmia.w	r8, {r1, r2}
 801e158:	462b      	mov	r3, r5
 801e15a:	47b0      	blx	r6
 801e15c:	9b03      	ldr	r3, [sp, #12]
 801e15e:	8023      	strh	r3, [r4, #0]
 801e160:	9b04      	ldr	r3, [sp, #16]
 801e162:	8063      	strh	r3, [r4, #2]
 801e164:	9b05      	ldr	r3, [sp, #20]
 801e166:	80a3      	strh	r3, [r4, #4]
 801e168:	9b06      	ldr	r3, [sp, #24]
 801e16a:	e78b      	b.n	801e084 <_ZN8touchgfx8LCD16bpp29copyFrameBufferRegionToMemoryERKNS_4RectES3_Phss+0xd0>
 801e16c:	fb09 f202 	mul.w	r2, r9, r2
 801e170:	eb02 0141 	add.w	r1, r2, r1, lsl #1
 801e174:	440f      	add	r7, r1
 801e176:	f9bd 3036 	ldrsh.w	r3, [sp, #54]	; 0x36
 801e17a:	b166      	cbz	r6, 801e196 <_ZN8touchgfx8LCD16bpp29copyFrameBufferRegionToMemoryERKNS_4RectES3_Phss+0x1e2>
 801e17c:	9a07      	ldr	r2, [sp, #28]
 801e17e:	4592      	cmp	sl, r2
 801e180:	d109      	bne.n	801e196 <_ZN8touchgfx8LCD16bpp29copyFrameBufferRegionToMemoryERKNS_4RectES3_Phss+0x1e2>
 801e182:	f8db 0000 	ldr.w	r0, [fp]
 801e186:	6802      	ldr	r2, [r0, #0]
 801e188:	fb09 f303 	mul.w	r3, r9, r3
 801e18c:	6b56      	ldr	r6, [r2, #52]	; 0x34
 801e18e:	4629      	mov	r1, r5
 801e190:	463a      	mov	r2, r7
 801e192:	47b0      	blx	r6
 801e194:	e7e2      	b.n	801e15c <_ZN8touchgfx8LCD16bpp29copyFrameBufferRegionToMemoryERKNS_4RectES3_Phss+0x1a8>
 801e196:	fb0a f303 	mul.w	r3, sl, r3
 801e19a:	f8df b03c 	ldr.w	fp, [pc, #60]	; 801e1d8 <_ZN8touchgfx8LCD16bpp29copyFrameBufferRegionToMemoryERKNS_4RectES3_Phss+0x224>
 801e19e:	eb05 0843 	add.w	r8, r5, r3, lsl #1
 801e1a2:	ea4f 064a 	mov.w	r6, sl, lsl #1
 801e1a6:	4545      	cmp	r5, r8
 801e1a8:	d2d8      	bcs.n	801e15c <_ZN8touchgfx8LCD16bpp29copyFrameBufferRegionToMemoryERKNS_4RectES3_Phss+0x1a8>
 801e1aa:	f8db 0000 	ldr.w	r0, [fp]
 801e1ae:	f9bd 3034 	ldrsh.w	r3, [sp, #52]	; 0x34
 801e1b2:	6802      	ldr	r2, [r0, #0]
 801e1b4:	4629      	mov	r1, r5
 801e1b6:	f8d2 a034 	ldr.w	sl, [r2, #52]	; 0x34
 801e1ba:	005b      	lsls	r3, r3, #1
 801e1bc:	463a      	mov	r2, r7
 801e1be:	47d0      	blx	sl
 801e1c0:	444f      	add	r7, r9
 801e1c2:	4435      	add	r5, r6
 801e1c4:	e7ef      	b.n	801e1a6 <_ZN8touchgfx8LCD16bpp29copyFrameBufferRegionToMemoryERKNS_4RectES3_Phss+0x1f2>
 801e1c6:	bf00      	nop
 801e1c8:	20013810 	.word	0x20013810
 801e1cc:	20013812 	.word	0x20013812
 801e1d0:	20013814 	.word	0x20013814
 801e1d4:	20013816 	.word	0x20013816
 801e1d8:	2001381c 	.word	0x2001381c

0801e1dc <_ZN8touchgfx8LCD16bpp8fillRectERKNS_4RectENS_9colortypeEh>:
 801e1dc:	b5f0      	push	{r4, r5, r6, r7, lr}
 801e1de:	4606      	mov	r6, r0
 801e1e0:	b087      	sub	sp, #28
 801e1e2:	460c      	mov	r4, r1
 801e1e4:	4617      	mov	r7, r2
 801e1e6:	461d      	mov	r5, r3
 801e1e8:	b333      	cbz	r3, 801e238 <_ZN8touchgfx8LCD16bpp8fillRectERKNS_4RectENS_9colortypeEh+0x5c>
 801e1ea:	4608      	mov	r0, r1
 801e1ec:	f7f2 fae1 	bl	80107b2 <_ZNK8touchgfx4Rect7isEmptyEv>
 801e1f0:	bb10      	cbnz	r0, 801e238 <_ZN8touchgfx8LCD16bpp8fillRectERKNS_4RectENS_9colortypeEh+0x5c>
 801e1f2:	6820      	ldr	r0, [r4, #0]
 801e1f4:	6861      	ldr	r1, [r4, #4]
 801e1f6:	4c1c      	ldr	r4, [pc, #112]	; (801e268 <_ZN8touchgfx8LCD16bpp8fillRectERKNS_4RectENS_9colortypeEh+0x8c>)
 801e1f8:	ab04      	add	r3, sp, #16
 801e1fa:	c303      	stmia	r3!, {r0, r1}
 801e1fc:	a804      	add	r0, sp, #16
 801e1fe:	f7f8 f833 	bl	8016268 <_ZN8touchgfx21DisplayTransformation29transformDisplayToFrameBufferERNS_4RectE>
 801e202:	6820      	ldr	r0, [r4, #0]
 801e204:	6803      	ldr	r3, [r0, #0]
 801e206:	6b9b      	ldr	r3, [r3, #56]	; 0x38
 801e208:	4798      	blx	r3
 801e20a:	2dff      	cmp	r5, #255	; 0xff
 801e20c:	d016      	beq.n	801e23c <_ZN8touchgfx8LCD16bpp8fillRectERKNS_4RectENS_9colortypeEh+0x60>
 801e20e:	f010 0f08 	tst.w	r0, #8
 801e212:	6820      	ldr	r0, [r4, #0]
 801e214:	d015      	beq.n	801e242 <_ZN8touchgfx8LCD16bpp8fillRectERKNS_4RectENS_9colortypeEh+0x66>
 801e216:	2400      	movs	r4, #0
 801e218:	6801      	ldr	r1, [r0, #0]
 801e21a:	f8bd 3012 	ldrh.w	r3, [sp, #18]
 801e21e:	f8bd 2010 	ldrh.w	r2, [sp, #16]
 801e222:	e9cd 5402 	strd	r5, r4, [sp, #8]
 801e226:	f8bd 4016 	ldrh.w	r4, [sp, #22]
 801e22a:	9401      	str	r4, [sp, #4]
 801e22c:	f8bd 4014 	ldrh.w	r4, [sp, #20]
 801e230:	9400      	str	r4, [sp, #0]
 801e232:	6e0c      	ldr	r4, [r1, #96]	; 0x60
 801e234:	4639      	mov	r1, r7
 801e236:	47a0      	blx	r4
 801e238:	b007      	add	sp, #28
 801e23a:	bdf0      	pop	{r4, r5, r6, r7, pc}
 801e23c:	f010 0f02 	tst.w	r0, #2
 801e240:	e7e7      	b.n	801e212 <_ZN8touchgfx8LCD16bpp8fillRectERKNS_4RectENS_9colortypeEh+0x36>
 801e242:	6803      	ldr	r3, [r0, #0]
 801e244:	6a9b      	ldr	r3, [r3, #40]	; 0x28
 801e246:	4798      	blx	r3
 801e248:	4b08      	ldr	r3, [pc, #32]	; (801e26c <_ZN8touchgfx8LCD16bpp8fillRectERKNS_4RectENS_9colortypeEh+0x90>)
 801e24a:	881a      	ldrh	r2, [r3, #0]
 801e24c:	6833      	ldr	r3, [r6, #0]
 801e24e:	e9cd 7500 	strd	r7, r5, [sp]
 801e252:	4601      	mov	r1, r0
 801e254:	6a5d      	ldr	r5, [r3, #36]	; 0x24
 801e256:	4630      	mov	r0, r6
 801e258:	ab04      	add	r3, sp, #16
 801e25a:	47a8      	blx	r5
 801e25c:	6820      	ldr	r0, [r4, #0]
 801e25e:	6803      	ldr	r3, [r0, #0]
 801e260:	6adb      	ldr	r3, [r3, #44]	; 0x2c
 801e262:	4798      	blx	r3
 801e264:	e7e8      	b.n	801e238 <_ZN8touchgfx8LCD16bpp8fillRectERKNS_4RectENS_9colortypeEh+0x5c>
 801e266:	bf00      	nop
 801e268:	2001381c 	.word	0x2001381c
 801e26c:	20013816 	.word	0x20013816

0801e270 <_ZN8touchgfx8LCD16bpp10fillBufferEPhtRKNS_4RectENS_9colortypeEh>:
 801e270:	e92d 47f0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, lr}
 801e274:	f89d 7024 	ldrb.w	r7, [sp, #36]	; 0x24
 801e278:	9e08      	ldr	r6, [sp, #32]
 801e27a:	4688      	mov	r8, r1
 801e27c:	4614      	mov	r4, r2
 801e27e:	461d      	mov	r5, r3
 801e280:	2f00      	cmp	r7, #0
 801e282:	f000 80a9 	beq.w	801e3d8 <_ZN8touchgfx8LCD16bpp10fillBufferEPhtRKNS_4RectENS_9colortypeEh+0x168>
 801e286:	4618      	mov	r0, r3
 801e288:	f7f2 fa93 	bl	80107b2 <_ZNK8touchgfx4Rect7isEmptyEv>
 801e28c:	2800      	cmp	r0, #0
 801e28e:	f040 80a3 	bne.w	801e3d8 <_ZN8touchgfx8LCD16bpp10fillBufferEPhtRKNS_4RectENS_9colortypeEh+0x168>
 801e292:	f9b5 1000 	ldrsh.w	r1, [r5]
 801e296:	f9b5 3002 	ldrsh.w	r3, [r5, #2]
 801e29a:	f9b5 0004 	ldrsh.w	r0, [r5, #4]
 801e29e:	f9b5 5006 	ldrsh.w	r5, [r5, #6]
 801e2a2:	fb04 1303 	mla	r3, r4, r3, r1
 801e2a6:	eb08 0143 	add.w	r1, r8, r3, lsl #1
 801e2aa:	4365      	muls	r5, r4
 801e2ac:	2fff      	cmp	r7, #255	; 0xff
 801e2ae:	eba4 0200 	sub.w	r2, r4, r0
 801e2b2:	eb01 0545 	add.w	r5, r1, r5, lsl #1
 801e2b6:	ea4f 2816 	mov.w	r8, r6, lsr #8
 801e2ba:	d04a      	beq.n	801e352 <_ZN8touchgfx8LCD16bpp10fillBufferEPhtRKNS_4RectENS_9colortypeEh+0xe2>
 801e2bc:	b2bc      	uxth	r4, r7
 801e2be:	f1c7 0cff 	rsb	ip, r7, #255	; 0xff
 801e2c2:	f3c6 4e07 	ubfx	lr, r6, #16, #8
 801e2c6:	fa5f f788 	uxtb.w	r7, r8
 801e2ca:	b2f3      	uxtb	r3, r6
 801e2cc:	0040      	lsls	r0, r0, #1
 801e2ce:	fb0e fe04 	mul.w	lr, lr, r4
 801e2d2:	4367      	muls	r7, r4
 801e2d4:	4363      	muls	r3, r4
 801e2d6:	ea4f 0842 	mov.w	r8, r2, lsl #1
 801e2da:	fa1f fc8c 	uxth.w	ip, ip
 801e2de:	42a9      	cmp	r1, r5
 801e2e0:	d27a      	bcs.n	801e3d8 <_ZN8touchgfx8LCD16bpp10fillBufferEPhtRKNS_4RectENS_9colortypeEh+0x168>
 801e2e2:	eb01 0900 	add.w	r9, r1, r0
 801e2e6:	4549      	cmp	r1, r9
 801e2e8:	d231      	bcs.n	801e34e <_ZN8touchgfx8LCD16bpp10fillBufferEPhtRKNS_4RectENS_9colortypeEh+0xde>
 801e2ea:	880a      	ldrh	r2, [r1, #0]
 801e2ec:	1214      	asrs	r4, r2, #8
 801e2ee:	10d6      	asrs	r6, r2, #3
 801e2f0:	f004 04f8 	and.w	r4, r4, #248	; 0xf8
 801e2f4:	00d2      	lsls	r2, r2, #3
 801e2f6:	b2d2      	uxtb	r2, r2
 801e2f8:	ea44 1454 	orr.w	r4, r4, r4, lsr #5
 801e2fc:	fb14 f40c 	smulbb	r4, r4, ip
 801e300:	ea42 1252 	orr.w	r2, r2, r2, lsr #5
 801e304:	4474      	add	r4, lr
 801e306:	fb12 f20c 	smulbb	r2, r2, ip
 801e30a:	b2a4      	uxth	r4, r4
 801e30c:	f006 06fc 	and.w	r6, r6, #252	; 0xfc
 801e310:	441a      	add	r2, r3
 801e312:	b292      	uxth	r2, r2
 801e314:	f104 0a01 	add.w	sl, r4, #1
 801e318:	ea46 1696 	orr.w	r6, r6, r6, lsr #6
 801e31c:	eb0a 2414 	add.w	r4, sl, r4, lsr #8
 801e320:	fb16 f60c 	smulbb	r6, r6, ip
 801e324:	f102 0a01 	add.w	sl, r2, #1
 801e328:	443e      	add	r6, r7
 801e32a:	eb0a 2212 	add.w	r2, sl, r2, lsr #8
 801e32e:	b2b6      	uxth	r6, r6
 801e330:	f404 4478 	and.w	r4, r4, #63488	; 0xf800
 801e334:	f3c2 22c4 	ubfx	r2, r2, #11, #5
 801e338:	4322      	orrs	r2, r4
 801e33a:	1c74      	adds	r4, r6, #1
 801e33c:	eb04 2616 	add.w	r6, r4, r6, lsr #8
 801e340:	0976      	lsrs	r6, r6, #5
 801e342:	f406 66fc 	and.w	r6, r6, #2016	; 0x7e0
 801e346:	4332      	orrs	r2, r6
 801e348:	f821 2b02 	strh.w	r2, [r1], #2
 801e34c:	e7cb      	b.n	801e2e6 <_ZN8touchgfx8LCD16bpp10fillBufferEPhtRKNS_4RectENS_9colortypeEh+0x76>
 801e34e:	4441      	add	r1, r8
 801e350:	e7c5      	b.n	801e2de <_ZN8touchgfx8LCD16bpp10fillBufferEPhtRKNS_4RectENS_9colortypeEh+0x6e>
 801e352:	4f22      	ldr	r7, [pc, #136]	; (801e3dc <_ZN8touchgfx8LCD16bpp10fillBufferEPhtRKNS_4RectENS_9colortypeEh+0x16c>)
 801e354:	0973      	lsrs	r3, r6, #5
 801e356:	ea08 0707 	and.w	r7, r8, r7
 801e35a:	f403 63fc 	and.w	r3, r3, #2016	; 0x7e0
 801e35e:	433b      	orrs	r3, r7
 801e360:	f3c6 06c4 	ubfx	r6, r6, #3, #5
 801e364:	4333      	orrs	r3, r6
 801e366:	07e7      	lsls	r7, r4, #31
 801e368:	b29b      	uxth	r3, r3
 801e36a:	d50b      	bpl.n	801e384 <_ZN8touchgfx8LCD16bpp10fillBufferEPhtRKNS_4RectENS_9colortypeEh+0x114>
 801e36c:	0040      	lsls	r0, r0, #1
 801e36e:	0052      	lsls	r2, r2, #1
 801e370:	42a9      	cmp	r1, r5
 801e372:	d231      	bcs.n	801e3d8 <_ZN8touchgfx8LCD16bpp10fillBufferEPhtRKNS_4RectENS_9colortypeEh+0x168>
 801e374:	180c      	adds	r4, r1, r0
 801e376:	42a1      	cmp	r1, r4
 801e378:	d202      	bcs.n	801e380 <_ZN8touchgfx8LCD16bpp10fillBufferEPhtRKNS_4RectENS_9colortypeEh+0x110>
 801e37a:	f821 3b02 	strh.w	r3, [r1], #2
 801e37e:	e7fa      	b.n	801e376 <_ZN8touchgfx8LCD16bpp10fillBufferEPhtRKNS_4RectENS_9colortypeEh+0x106>
 801e380:	4411      	add	r1, r2
 801e382:	e7f5      	b.n	801e370 <_ZN8touchgfx8LCD16bpp10fillBufferEPhtRKNS_4RectENS_9colortypeEh+0x100>
 801e384:	078e      	lsls	r6, r1, #30
 801e386:	d008      	beq.n	801e39a <_ZN8touchgfx8LCD16bpp10fillBufferEPhtRKNS_4RectENS_9colortypeEh+0x12a>
 801e388:	0066      	lsls	r6, r4, #1
 801e38a:	460a      	mov	r2, r1
 801e38c:	42aa      	cmp	r2, r5
 801e38e:	d202      	bcs.n	801e396 <_ZN8touchgfx8LCD16bpp10fillBufferEPhtRKNS_4RectENS_9colortypeEh+0x126>
 801e390:	8013      	strh	r3, [r2, #0]
 801e392:	4432      	add	r2, r6
 801e394:	e7fa      	b.n	801e38c <_ZN8touchgfx8LCD16bpp10fillBufferEPhtRKNS_4RectENS_9colortypeEh+0x11c>
 801e396:	3102      	adds	r1, #2
 801e398:	3801      	subs	r0, #1
 801e39a:	07c2      	lsls	r2, r0, #31
 801e39c:	d50b      	bpl.n	801e3b6 <_ZN8touchgfx8LCD16bpp10fillBufferEPhtRKNS_4RectENS_9colortypeEh+0x146>
 801e39e:	f100 4200 	add.w	r2, r0, #2147483648	; 0x80000000
 801e3a2:	3a01      	subs	r2, #1
 801e3a4:	eb01 0242 	add.w	r2, r1, r2, lsl #1
 801e3a8:	0066      	lsls	r6, r4, #1
 801e3aa:	42aa      	cmp	r2, r5
 801e3ac:	d202      	bcs.n	801e3b4 <_ZN8touchgfx8LCD16bpp10fillBufferEPhtRKNS_4RectENS_9colortypeEh+0x144>
 801e3ae:	8013      	strh	r3, [r2, #0]
 801e3b0:	4432      	add	r2, r6
 801e3b2:	e7fa      	b.n	801e3aa <_ZN8touchgfx8LCD16bpp10fillBufferEPhtRKNS_4RectENS_9colortypeEh+0x13a>
 801e3b4:	3801      	subs	r0, #1
 801e3b6:	b178      	cbz	r0, 801e3d8 <_ZN8touchgfx8LCD16bpp10fillBufferEPhtRKNS_4RectENS_9colortypeEh+0x168>
 801e3b8:	1040      	asrs	r0, r0, #1
 801e3ba:	ea43 4303 	orr.w	r3, r3, r3, lsl #16
 801e3be:	0080      	lsls	r0, r0, #2
 801e3c0:	0064      	lsls	r4, r4, #1
 801e3c2:	42a9      	cmp	r1, r5
 801e3c4:	d208      	bcs.n	801e3d8 <_ZN8touchgfx8LCD16bpp10fillBufferEPhtRKNS_4RectENS_9colortypeEh+0x168>
 801e3c6:	180e      	adds	r6, r1, r0
 801e3c8:	460a      	mov	r2, r1
 801e3ca:	42b2      	cmp	r2, r6
 801e3cc:	d202      	bcs.n	801e3d4 <_ZN8touchgfx8LCD16bpp10fillBufferEPhtRKNS_4RectENS_9colortypeEh+0x164>
 801e3ce:	f842 3b04 	str.w	r3, [r2], #4
 801e3d2:	e7fa      	b.n	801e3ca <_ZN8touchgfx8LCD16bpp10fillBufferEPhtRKNS_4RectENS_9colortypeEh+0x15a>
 801e3d4:	4421      	add	r1, r4
 801e3d6:	e7f4      	b.n	801e3c2 <_ZN8touchgfx8LCD16bpp10fillBufferEPhtRKNS_4RectENS_9colortypeEh+0x152>
 801e3d8:	e8bd 87f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, pc}
 801e3dc:	00fff800 	.word	0x00fff800

0801e3e0 <_ZN8touchgfx8LCD16bppC1Ev>:
 801e3e0:	2200      	movs	r2, #0
 801e3e2:	4912      	ldr	r1, [pc, #72]	; (801e42c <_ZN8touchgfx8LCD16bppC1Ev+0x4c>)
 801e3e4:	6042      	str	r2, [r0, #4]
 801e3e6:	6001      	str	r1, [r0, #0]
 801e3e8:	e9c0 2202 	strd	r2, r2, [r0, #8]
 801e3ec:	e9c0 2204 	strd	r2, r2, [r0, #16]
 801e3f0:	e9c0 2206 	strd	r2, r2, [r0, #24]
 801e3f4:	e9c0 2208 	strd	r2, r2, [r0, #32]
 801e3f8:	e9c0 220a 	strd	r2, r2, [r0, #40]	; 0x28
 801e3fc:	e9c0 220c 	strd	r2, r2, [r0, #48]	; 0x30
 801e400:	e9c0 220e 	strd	r2, r2, [r0, #56]	; 0x38
 801e404:	e9c0 2210 	strd	r2, r2, [r0, #64]	; 0x40
 801e408:	e9c0 2212 	strd	r2, r2, [r0, #72]	; 0x48
 801e40c:	e9c0 2214 	strd	r2, r2, [r0, #80]	; 0x50
 801e410:	e9c0 2216 	strd	r2, r2, [r0, #88]	; 0x58
 801e414:	e9c0 2218 	strd	r2, r2, [r0, #96]	; 0x60
 801e418:	e9c0 221a 	strd	r2, r2, [r0, #104]	; 0x68
 801e41c:	e9c0 221c 	strd	r2, r2, [r0, #112]	; 0x70
 801e420:	e9c0 221e 	strd	r2, r2, [r0, #120]	; 0x78
 801e424:	f8c0 2080 	str.w	r2, [r0, #128]	; 0x80
 801e428:	4770      	bx	lr
 801e42a:	bf00      	nop
 801e42c:	0802fb90 	.word	0x0802fb90

0801e430 <_ZN8touchgfx8LCD16bpp16blitCopyARGB8888EPKmRKNS_4RectES5_h>:
 801e430:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 801e434:	460d      	mov	r5, r1
 801e436:	b08d      	sub	sp, #52	; 0x34
 801e438:	4604      	mov	r4, r0
 801e43a:	6808      	ldr	r0, [r1, #0]
 801e43c:	6849      	ldr	r1, [r1, #4]
 801e43e:	4699      	mov	r9, r3
 801e440:	ab08      	add	r3, sp, #32
 801e442:	c303      	stmia	r3!, {r0, r1}
 801e444:	6810      	ldr	r0, [r2, #0]
 801e446:	6851      	ldr	r1, [r2, #4]
 801e448:	ab0a      	add	r3, sp, #40	; 0x28
 801e44a:	c303      	stmia	r3!, {r0, r1}
 801e44c:	a808      	add	r0, sp, #32
 801e44e:	f7f7 ff0b 	bl	8016268 <_ZN8touchgfx21DisplayTransformation29transformDisplayToFrameBufferERNS_4RectE>
 801e452:	4629      	mov	r1, r5
 801e454:	a80a      	add	r0, sp, #40	; 0x28
 801e456:	f7f7 ff4b 	bl	80162f0 <_ZN8touchgfx21DisplayTransformation29transformDisplayToFrameBufferERNS_4RectERKS1_>
 801e45a:	f9bd 2028 	ldrsh.w	r2, [sp, #40]	; 0x28
 801e45e:	f9bd 302a 	ldrsh.w	r3, [sp, #42]	; 0x2a
 801e462:	f8bd 1024 	ldrh.w	r1, [sp, #36]	; 0x24
 801e466:	4d63      	ldr	r5, [pc, #396]	; (801e5f4 <_ZN8touchgfx8LCD16bpp16blitCopyARGB8888EPKmRKNS_4RectES5_h+0x1c4>)
 801e468:	f9bd 802c 	ldrsh.w	r8, [sp, #44]	; 0x2c
 801e46c:	6828      	ldr	r0, [r5, #0]
 801e46e:	f9bd 602e 	ldrsh.w	r6, [sp, #46]	; 0x2e
 801e472:	fb11 2103 	smlabb	r1, r1, r3, r2
 801e476:	eb04 0481 	add.w	r4, r4, r1, lsl #2
 801e47a:	f8bd 1020 	ldrh.w	r1, [sp, #32]
 801e47e:	440a      	add	r2, r1
 801e480:	f8ad 2028 	strh.w	r2, [sp, #40]	; 0x28
 801e484:	f8bd 2022 	ldrh.w	r2, [sp, #34]	; 0x22
 801e488:	4413      	add	r3, r2
 801e48a:	f8ad 302a 	strh.w	r3, [sp, #42]	; 0x2a
 801e48e:	6803      	ldr	r3, [r0, #0]
 801e490:	6b9b      	ldr	r3, [r3, #56]	; 0x38
 801e492:	4798      	blx	r3
 801e494:	f1b9 0fff 	cmp.w	r9, #255	; 0xff
 801e498:	d119      	bne.n	801e4ce <_ZN8touchgfx8LCD16bpp16blitCopyARGB8888EPKmRKNS_4RectES5_h+0x9e>
 801e49a:	f010 0f20 	tst.w	r0, #32
 801e49e:	6828      	ldr	r0, [r5, #0]
 801e4a0:	d018      	beq.n	801e4d4 <_ZN8touchgfx8LCD16bpp16blitCopyARGB8888EPKmRKNS_4RectES5_h+0xa4>
 801e4a2:	2500      	movs	r5, #0
 801e4a4:	6801      	ldr	r1, [r0, #0]
 801e4a6:	f8bd 302a 	ldrh.w	r3, [sp, #42]	; 0x2a
 801e4aa:	f8bd 2028 	ldrh.w	r2, [sp, #40]	; 0x28
 801e4ae:	e9cd 9503 	strd	r9, r5, [sp, #12]
 801e4b2:	f8bd 5024 	ldrh.w	r5, [sp, #36]	; 0x24
 801e4b6:	9502      	str	r5, [sp, #8]
 801e4b8:	b2b6      	uxth	r6, r6
 801e4ba:	fa1f f588 	uxth.w	r5, r8
 801e4be:	9601      	str	r6, [sp, #4]
 801e4c0:	9500      	str	r5, [sp, #0]
 801e4c2:	6d0d      	ldr	r5, [r1, #80]	; 0x50
 801e4c4:	4621      	mov	r1, r4
 801e4c6:	47a8      	blx	r5
 801e4c8:	b00d      	add	sp, #52	; 0x34
 801e4ca:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
 801e4ce:	f010 0f40 	tst.w	r0, #64	; 0x40
 801e4d2:	e7e4      	b.n	801e49e <_ZN8touchgfx8LCD16bpp16blitCopyARGB8888EPKmRKNS_4RectES5_h+0x6e>
 801e4d4:	6803      	ldr	r3, [r0, #0]
 801e4d6:	6a9b      	ldr	r3, [r3, #40]	; 0x28
 801e4d8:	4798      	blx	r3
 801e4da:	4947      	ldr	r1, [pc, #284]	; (801e5f8 <_ZN8touchgfx8LCD16bpp16blitCopyARGB8888EPKmRKNS_4RectES5_h+0x1c8>)
 801e4dc:	f9bd 202a 	ldrsh.w	r2, [sp, #42]	; 0x2a
 801e4e0:	880b      	ldrh	r3, [r1, #0]
 801e4e2:	f9bd 5028 	ldrsh.w	r5, [sp, #40]	; 0x28
 801e4e6:	fb03 5202 	mla	r2, r3, r2, r5
 801e4ea:	eb00 0042 	add.w	r0, r0, r2, lsl #1
 801e4ee:	4373      	muls	r3, r6
 801e4f0:	eb00 0343 	add.w	r3, r0, r3, lsl #1
 801e4f4:	9307      	str	r3, [sp, #28]
 801e4f6:	ea4f 0348 	mov.w	r3, r8, lsl #1
 801e4fa:	9306      	str	r3, [sp, #24]
 801e4fc:	468a      	mov	sl, r1
 801e4fe:	9b07      	ldr	r3, [sp, #28]
 801e500:	4298      	cmp	r0, r3
 801e502:	d270      	bcs.n	801e5e6 <_ZN8touchgfx8LCD16bpp16blitCopyARGB8888EPKmRKNS_4RectES5_h+0x1b6>
 801e504:	9b06      	ldr	r3, [sp, #24]
 801e506:	4621      	mov	r1, r4
 801e508:	eb00 0b03 	add.w	fp, r0, r3
 801e50c:	4558      	cmp	r0, fp
 801e50e:	d25d      	bcs.n	801e5cc <_ZN8touchgfx8LCD16bpp16blitCopyARGB8888EPKmRKNS_4RectES5_h+0x19c>
 801e510:	f851 4b04 	ldr.w	r4, [r1], #4
 801e514:	0e23      	lsrs	r3, r4, #24
 801e516:	d014      	beq.n	801e542 <_ZN8touchgfx8LCD16bpp16blitCopyARGB8888EPKmRKNS_4RectES5_h+0x112>
 801e518:	2bff      	cmp	r3, #255	; 0xff
 801e51a:	ea4f 2c14 	mov.w	ip, r4, lsr #8
 801e51e:	d112      	bne.n	801e546 <_ZN8touchgfx8LCD16bpp16blitCopyARGB8888EPKmRKNS_4RectES5_h+0x116>
 801e520:	f1b9 0fff 	cmp.w	r9, #255	; 0xff
 801e524:	d10f      	bne.n	801e546 <_ZN8touchgfx8LCD16bpp16blitCopyARGB8888EPKmRKNS_4RectES5_h+0x116>
 801e526:	0963      	lsrs	r3, r4, #5
 801e528:	f42c 6cff 	bic.w	ip, ip, #2040	; 0x7f8
 801e52c:	f403 63fc 	and.w	r3, r3, #2016	; 0x7e0
 801e530:	f02c 0c07 	bic.w	ip, ip, #7
 801e534:	ea43 0c0c 	orr.w	ip, r3, ip
 801e538:	f3c4 04c4 	ubfx	r4, r4, #3, #5
 801e53c:	ea4c 0404 	orr.w	r4, ip, r4
 801e540:	8004      	strh	r4, [r0, #0]
 801e542:	3002      	adds	r0, #2
 801e544:	e7e2      	b.n	801e50c <_ZN8touchgfx8LCD16bpp16blitCopyARGB8888EPKmRKNS_4RectES5_h+0xdc>
 801e546:	fb09 f303 	mul.w	r3, r9, r3
 801e54a:	8807      	ldrh	r7, [r0, #0]
 801e54c:	1c5a      	adds	r2, r3, #1
 801e54e:	eb02 2223 	add.w	r2, r2, r3, asr #8
 801e552:	1212      	asrs	r2, r2, #8
 801e554:	123e      	asrs	r6, r7, #8
 801e556:	b293      	uxth	r3, r2
 801e558:	f3c4 4e07 	ubfx	lr, r4, #16, #8
 801e55c:	f006 06f8 	and.w	r6, r6, #248	; 0xf8
 801e560:	43d2      	mvns	r2, r2
 801e562:	b2d2      	uxtb	r2, r2
 801e564:	10fd      	asrs	r5, r7, #3
 801e566:	fb1e fe03 	smulbb	lr, lr, r3
 801e56a:	00ff      	lsls	r7, r7, #3
 801e56c:	ea46 1656 	orr.w	r6, r6, r6, lsr #5
 801e570:	fb06 e602 	mla	r6, r6, r2, lr
 801e574:	f005 05fc 	and.w	r5, r5, #252	; 0xfc
 801e578:	b2ff      	uxtb	r7, r7
 801e57a:	fa5f fc8c 	uxtb.w	ip, ip
 801e57e:	b2e4      	uxtb	r4, r4
 801e580:	b2b6      	uxth	r6, r6
 801e582:	fb1c fc03 	smulbb	ip, ip, r3
 801e586:	ea45 1595 	orr.w	r5, r5, r5, lsr #6
 801e58a:	ea47 1757 	orr.w	r7, r7, r7, lsr #5
 801e58e:	fb14 f403 	smulbb	r4, r4, r3
 801e592:	fb05 c502 	mla	r5, r5, r2, ip
 801e596:	f106 0e01 	add.w	lr, r6, #1
 801e59a:	fb07 4702 	mla	r7, r7, r2, r4
 801e59e:	b2ad      	uxth	r5, r5
 801e5a0:	b2bf      	uxth	r7, r7
 801e5a2:	eb0e 2616 	add.w	r6, lr, r6, lsr #8
 801e5a6:	f406 4e78 	and.w	lr, r6, #63488	; 0xf800
 801e5aa:	f105 0c01 	add.w	ip, r5, #1
 801e5ae:	1c7e      	adds	r6, r7, #1
 801e5b0:	eb06 2617 	add.w	r6, r6, r7, lsr #8
 801e5b4:	eb0c 2515 	add.w	r5, ip, r5, lsr #8
 801e5b8:	f3c6 26c4 	ubfx	r6, r6, #11, #5
 801e5bc:	096d      	lsrs	r5, r5, #5
 801e5be:	ea46 060e 	orr.w	r6, r6, lr
 801e5c2:	f405 65fc 	and.w	r5, r5, #2016	; 0x7e0
 801e5c6:	432e      	orrs	r6, r5
 801e5c8:	8006      	strh	r6, [r0, #0]
 801e5ca:	e7ba      	b.n	801e542 <_ZN8touchgfx8LCD16bpp16blitCopyARGB8888EPKmRKNS_4RectES5_h+0x112>
 801e5cc:	f8ba 3000 	ldrh.w	r3, [sl]
 801e5d0:	f9bd 4024 	ldrsh.w	r4, [sp, #36]	; 0x24
 801e5d4:	eba3 0308 	sub.w	r3, r3, r8
 801e5d8:	eba4 0408 	sub.w	r4, r4, r8
 801e5dc:	eb00 0043 	add.w	r0, r0, r3, lsl #1
 801e5e0:	eb01 0484 	add.w	r4, r1, r4, lsl #2
 801e5e4:	e78b      	b.n	801e4fe <_ZN8touchgfx8LCD16bpp16blitCopyARGB8888EPKmRKNS_4RectES5_h+0xce>
 801e5e6:	4b03      	ldr	r3, [pc, #12]	; (801e5f4 <_ZN8touchgfx8LCD16bpp16blitCopyARGB8888EPKmRKNS_4RectES5_h+0x1c4>)
 801e5e8:	6818      	ldr	r0, [r3, #0]
 801e5ea:	6803      	ldr	r3, [r0, #0]
 801e5ec:	6adb      	ldr	r3, [r3, #44]	; 0x2c
 801e5ee:	4798      	blx	r3
 801e5f0:	e76a      	b.n	801e4c8 <_ZN8touchgfx8LCD16bpp16blitCopyARGB8888EPKmRKNS_4RectES5_h+0x98>
 801e5f2:	bf00      	nop
 801e5f4:	2001381c 	.word	0x2001381c
 801e5f8:	20013816 	.word	0x20013816

0801e5fc <_ZNK8touchgfx8LCD16bpp21blitCopyARGB8888SolidEPKmRKNS_4RectES5_>:
 801e5fc:	e92d 43f0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, lr}
 801e600:	460c      	mov	r4, r1
 801e602:	b085      	sub	sp, #20
 801e604:	6810      	ldr	r0, [r2, #0]
 801e606:	6851      	ldr	r1, [r2, #4]
 801e608:	466d      	mov	r5, sp
 801e60a:	c503      	stmia	r5!, {r0, r1}
 801e60c:	6818      	ldr	r0, [r3, #0]
 801e60e:	6859      	ldr	r1, [r3, #4]
 801e610:	4616      	mov	r6, r2
 801e612:	c503      	stmia	r5!, {r0, r1}
 801e614:	4668      	mov	r0, sp
 801e616:	f7f7 fe27 	bl	8016268 <_ZN8touchgfx21DisplayTransformation29transformDisplayToFrameBufferERNS_4RectE>
 801e61a:	4631      	mov	r1, r6
 801e61c:	a802      	add	r0, sp, #8
 801e61e:	f7f7 fe67 	bl	80162f0 <_ZN8touchgfx21DisplayTransformation29transformDisplayToFrameBufferERNS_4RectERKS1_>
 801e622:	f9bd 2008 	ldrsh.w	r2, [sp, #8]
 801e626:	f9bd 300a 	ldrsh.w	r3, [sp, #10]
 801e62a:	f8bd 1004 	ldrh.w	r1, [sp, #4]
 801e62e:	4d28      	ldr	r5, [pc, #160]	; (801e6d0 <_ZNK8touchgfx8LCD16bpp21blitCopyARGB8888SolidEPKmRKNS_4RectES5_+0xd4>)
 801e630:	4e28      	ldr	r6, [pc, #160]	; (801e6d4 <_ZNK8touchgfx8LCD16bpp21blitCopyARGB8888SolidEPKmRKNS_4RectES5_+0xd8>)
 801e632:	6828      	ldr	r0, [r5, #0]
 801e634:	f9bd 700c 	ldrsh.w	r7, [sp, #12]
 801e638:	f9bd 800e 	ldrsh.w	r8, [sp, #14]
 801e63c:	fb11 2103 	smlabb	r1, r1, r3, r2
 801e640:	eb04 0481 	add.w	r4, r4, r1, lsl #2
 801e644:	f8bd 1000 	ldrh.w	r1, [sp]
 801e648:	440a      	add	r2, r1
 801e64a:	f8ad 2008 	strh.w	r2, [sp, #8]
 801e64e:	f8bd 2002 	ldrh.w	r2, [sp, #2]
 801e652:	4413      	add	r3, r2
 801e654:	f8ad 300a 	strh.w	r3, [sp, #10]
 801e658:	6803      	ldr	r3, [r0, #0]
 801e65a:	6a9b      	ldr	r3, [r3, #40]	; 0x28
 801e65c:	4798      	blx	r3
 801e65e:	8833      	ldrh	r3, [r6, #0]
 801e660:	f9bd 200a 	ldrsh.w	r2, [sp, #10]
 801e664:	f9bd 1008 	ldrsh.w	r1, [sp, #8]
 801e668:	f8df e06c 	ldr.w	lr, [pc, #108]	; 801e6d8 <_ZNK8touchgfx8LCD16bpp21blitCopyARGB8888SolidEPKmRKNS_4RectES5_+0xdc>
 801e66c:	fb03 1202 	mla	r2, r3, r2, r1
 801e670:	eb00 0042 	add.w	r0, r0, r2, lsl #1
 801e674:	fb08 f303 	mul.w	r3, r8, r3
 801e678:	eb00 0343 	add.w	r3, r0, r3, lsl #1
 801e67c:	ea4f 0c47 	mov.w	ip, r7, lsl #1
 801e680:	4298      	cmp	r0, r3
 801e682:	d21d      	bcs.n	801e6c0 <_ZNK8touchgfx8LCD16bpp21blitCopyARGB8888SolidEPKmRKNS_4RectES5_+0xc4>
 801e684:	eb00 080c 	add.w	r8, r0, ip
 801e688:	4540      	cmp	r0, r8
 801e68a:	d20f      	bcs.n	801e6ac <_ZNK8touchgfx8LCD16bpp21blitCopyARGB8888SolidEPKmRKNS_4RectES5_+0xb0>
 801e68c:	f854 1b04 	ldr.w	r1, [r4], #4
 801e690:	ea4f 1951 	mov.w	r9, r1, lsr #5
 801e694:	ea0e 2211 	and.w	r2, lr, r1, lsr #8
 801e698:	f409 69fc 	and.w	r9, r9, #2016	; 0x7e0
 801e69c:	ea42 0209 	orr.w	r2, r2, r9
 801e6a0:	f3c1 01c4 	ubfx	r1, r1, #3, #5
 801e6a4:	430a      	orrs	r2, r1
 801e6a6:	f820 2b02 	strh.w	r2, [r0], #2
 801e6aa:	e7ed      	b.n	801e688 <_ZNK8touchgfx8LCD16bpp21blitCopyARGB8888SolidEPKmRKNS_4RectES5_+0x8c>
 801e6ac:	8832      	ldrh	r2, [r6, #0]
 801e6ae:	1bd2      	subs	r2, r2, r7
 801e6b0:	eb00 0042 	add.w	r0, r0, r2, lsl #1
 801e6b4:	f9bd 2004 	ldrsh.w	r2, [sp, #4]
 801e6b8:	1bd2      	subs	r2, r2, r7
 801e6ba:	eb04 0482 	add.w	r4, r4, r2, lsl #2
 801e6be:	e7df      	b.n	801e680 <_ZNK8touchgfx8LCD16bpp21blitCopyARGB8888SolidEPKmRKNS_4RectES5_+0x84>
 801e6c0:	6828      	ldr	r0, [r5, #0]
 801e6c2:	6803      	ldr	r3, [r0, #0]
 801e6c4:	6adb      	ldr	r3, [r3, #44]	; 0x2c
 801e6c6:	4798      	blx	r3
 801e6c8:	b005      	add	sp, #20
 801e6ca:	e8bd 83f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, pc}
 801e6ce:	bf00      	nop
 801e6d0:	2001381c 	.word	0x2001381c
 801e6d4:	20013816 	.word	0x20013816
 801e6d8:	fffff800 	.word	0xfffff800

0801e6dc <_ZN8touchgfx8LCD16bpp14blitCopyRGB888EPKhRKNS_4RectES5_h>:
 801e6dc:	e92d 47f0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, lr}
 801e6e0:	460e      	mov	r6, r1
 801e6e2:	b08e      	sub	sp, #56	; 0x38
 801e6e4:	4604      	mov	r4, r0
 801e6e6:	6808      	ldr	r0, [r1, #0]
 801e6e8:	6849      	ldr	r1, [r1, #4]
 801e6ea:	f8df 81d8 	ldr.w	r8, [pc, #472]	; 801e8c4 <_ZN8touchgfx8LCD16bpp14blitCopyRGB888EPKhRKNS_4RectES5_h+0x1e8>
 801e6ee:	f8df 91d8 	ldr.w	r9, [pc, #472]	; 801e8c8 <_ZN8touchgfx8LCD16bpp14blitCopyRGB888EPKhRKNS_4RectES5_h+0x1ec>
 801e6f2:	461d      	mov	r5, r3
 801e6f4:	ab0a      	add	r3, sp, #40	; 0x28
 801e6f6:	c303      	stmia	r3!, {r0, r1}
 801e6f8:	6810      	ldr	r0, [r2, #0]
 801e6fa:	6851      	ldr	r1, [r2, #4]
 801e6fc:	ab0c      	add	r3, sp, #48	; 0x30
 801e6fe:	c303      	stmia	r3!, {r0, r1}
 801e700:	a80a      	add	r0, sp, #40	; 0x28
 801e702:	f7f7 fdb1 	bl	8016268 <_ZN8touchgfx21DisplayTransformation29transformDisplayToFrameBufferERNS_4RectE>
 801e706:	4631      	mov	r1, r6
 801e708:	a80c      	add	r0, sp, #48	; 0x30
 801e70a:	f7f7 fdf1 	bl	80162f0 <_ZN8touchgfx21DisplayTransformation29transformDisplayToFrameBufferERNS_4RectERKS1_>
 801e70e:	f9bd 2030 	ldrsh.w	r2, [sp, #48]	; 0x30
 801e712:	f9bd 3032 	ldrsh.w	r3, [sp, #50]	; 0x32
 801e716:	f8bd 102c 	ldrh.w	r1, [sp, #44]	; 0x2c
 801e71a:	f8d8 0000 	ldr.w	r0, [r8]
 801e71e:	f9bd 7034 	ldrsh.w	r7, [sp, #52]	; 0x34
 801e722:	f9bd 6036 	ldrsh.w	r6, [sp, #54]	; 0x36
 801e726:	fb11 2103 	smlabb	r1, r1, r3, r2
 801e72a:	eb01 0141 	add.w	r1, r1, r1, lsl #1
 801e72e:	440c      	add	r4, r1
 801e730:	f8bd 1028 	ldrh.w	r1, [sp, #40]	; 0x28
 801e734:	440a      	add	r2, r1
 801e736:	f8ad 2030 	strh.w	r2, [sp, #48]	; 0x30
 801e73a:	f8bd 202a 	ldrh.w	r2, [sp, #42]	; 0x2a
 801e73e:	4413      	add	r3, r2
 801e740:	f8ad 3032 	strh.w	r3, [sp, #50]	; 0x32
 801e744:	6803      	ldr	r3, [r0, #0]
 801e746:	6b9b      	ldr	r3, [r3, #56]	; 0x38
 801e748:	4798      	blx	r3
 801e74a:	2dff      	cmp	r5, #255	; 0xff
 801e74c:	d124      	bne.n	801e798 <_ZN8touchgfx8LCD16bpp14blitCopyRGB888EPKhRKNS_4RectES5_h+0xbc>
 801e74e:	f010 0f01 	tst.w	r0, #1
 801e752:	f8d8 0000 	ldr.w	r0, [r8]
 801e756:	d022      	beq.n	801e79e <_ZN8touchgfx8LCD16bpp14blitCopyRGB888EPKhRKNS_4RectES5_h+0xc2>
 801e758:	2100      	movs	r1, #0
 801e75a:	f8d0 c000 	ldr.w	ip, [r0]
 801e75e:	f8bd 3032 	ldrh.w	r3, [sp, #50]	; 0x32
 801e762:	f8bd 2030 	ldrh.w	r2, [sp, #48]	; 0x30
 801e766:	e9cd 1107 	strd	r1, r1, [sp, #28]
 801e76a:	f04f 0e01 	mov.w	lr, #1
 801e76e:	f8cd e018 	str.w	lr, [sp, #24]
 801e772:	f8b9 e000 	ldrh.w	lr, [r9]
 801e776:	9503      	str	r5, [sp, #12]
 801e778:	e9cd 1e04 	strd	r1, lr, [sp, #16]
 801e77c:	b2b6      	uxth	r6, r6
 801e77e:	f8bd 102c 	ldrh.w	r1, [sp, #44]	; 0x2c
 801e782:	9102      	str	r1, [sp, #8]
 801e784:	b2bf      	uxth	r7, r7
 801e786:	9601      	str	r6, [sp, #4]
 801e788:	9700      	str	r7, [sp, #0]
 801e78a:	f8dc 5040 	ldr.w	r5, [ip, #64]	; 0x40
 801e78e:	4621      	mov	r1, r4
 801e790:	47a8      	blx	r5
 801e792:	b00e      	add	sp, #56	; 0x38
 801e794:	e8bd 87f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, pc}
 801e798:	f010 0f04 	tst.w	r0, #4
 801e79c:	e7d9      	b.n	801e752 <_ZN8touchgfx8LCD16bpp14blitCopyRGB888EPKhRKNS_4RectES5_h+0x76>
 801e79e:	6803      	ldr	r3, [r0, #0]
 801e7a0:	6a9b      	ldr	r3, [r3, #40]	; 0x28
 801e7a2:	4798      	blx	r3
 801e7a4:	f8b9 3000 	ldrh.w	r3, [r9]
 801e7a8:	f9bd 2032 	ldrsh.w	r2, [sp, #50]	; 0x32
 801e7ac:	f9bd 1030 	ldrsh.w	r1, [sp, #48]	; 0x30
 801e7b0:	f9bd c02c 	ldrsh.w	ip, [sp, #44]	; 0x2c
 801e7b4:	fb03 1202 	mla	r2, r3, r2, r1
 801e7b8:	ebac 0c07 	sub.w	ip, ip, r7
 801e7bc:	eb00 0042 	add.w	r0, r0, r2, lsl #1
 801e7c0:	435e      	muls	r6, r3
 801e7c2:	ea4f 0e47 	mov.w	lr, r7, lsl #1
 801e7c6:	2dff      	cmp	r5, #255	; 0xff
 801e7c8:	eba3 0707 	sub.w	r7, r3, r7
 801e7cc:	eb00 0646 	add.w	r6, r0, r6, lsl #1
 801e7d0:	eb0c 0c4c 	add.w	ip, ip, ip, lsl #1
 801e7d4:	ea4f 0747 	mov.w	r7, r7, lsl #1
 801e7d8:	d049      	beq.n	801e86e <_ZN8touchgfx8LCD16bpp14blitCopyRGB888EPKhRKNS_4RectES5_h+0x192>
 801e7da:	43eb      	mvns	r3, r5
 801e7dc:	fa1f f985 	uxth.w	r9, r5
 801e7e0:	b2db      	uxtb	r3, r3
 801e7e2:	42b0      	cmp	r0, r6
 801e7e4:	d266      	bcs.n	801e8b4 <_ZN8touchgfx8LCD16bpp14blitCopyRGB888EPKhRKNS_4RectES5_h+0x1d8>
 801e7e6:	eb00 0a0e 	add.w	sl, r0, lr
 801e7ea:	4550      	cmp	r0, sl
 801e7ec:	4621      	mov	r1, r4
 801e7ee:	f104 0403 	add.w	r4, r4, #3
 801e7f2:	d25b      	bcs.n	801e8ac <_ZN8touchgfx8LCD16bpp14blitCopyRGB888EPKhRKNS_4RectES5_h+0x1d0>
 801e7f4:	8802      	ldrh	r2, [r0, #0]
 801e7f6:	f814 1c01 	ldrb.w	r1, [r4, #-1]
 801e7fa:	ea4f 2822 	mov.w	r8, r2, asr #8
 801e7fe:	f008 08f8 	and.w	r8, r8, #248	; 0xf8
 801e802:	fb11 f109 	smulbb	r1, r1, r9
 801e806:	ea48 1858 	orr.w	r8, r8, r8, lsr #5
 801e80a:	10d5      	asrs	r5, r2, #3
 801e80c:	fb08 1803 	mla	r8, r8, r3, r1
 801e810:	f814 1c02 	ldrb.w	r1, [r4, #-2]
 801e814:	f005 05fc 	and.w	r5, r5, #252	; 0xfc
 801e818:	fb11 f109 	smulbb	r1, r1, r9
 801e81c:	ea45 1595 	orr.w	r5, r5, r5, lsr #6
 801e820:	fb05 1503 	mla	r5, r5, r3, r1
 801e824:	00d2      	lsls	r2, r2, #3
 801e826:	f814 1c03 	ldrb.w	r1, [r4, #-3]
 801e82a:	b2d2      	uxtb	r2, r2
 801e82c:	fb11 f109 	smulbb	r1, r1, r9
 801e830:	ea42 1252 	orr.w	r2, r2, r2, lsr #5
 801e834:	fa1f f888 	uxth.w	r8, r8
 801e838:	fb02 1203 	mla	r2, r2, r3, r1
 801e83c:	b292      	uxth	r2, r2
 801e83e:	f108 0101 	add.w	r1, r8, #1
 801e842:	b2ad      	uxth	r5, r5
 801e844:	eb01 2818 	add.w	r8, r1, r8, lsr #8
 801e848:	1c51      	adds	r1, r2, #1
 801e84a:	eb01 2212 	add.w	r2, r1, r2, lsr #8
 801e84e:	1c69      	adds	r1, r5, #1
 801e850:	eb01 2515 	add.w	r5, r1, r5, lsr #8
 801e854:	f408 4878 	and.w	r8, r8, #63488	; 0xf800
 801e858:	f3c2 22c4 	ubfx	r2, r2, #11, #5
 801e85c:	096d      	lsrs	r5, r5, #5
 801e85e:	ea42 0208 	orr.w	r2, r2, r8
 801e862:	f405 65fc 	and.w	r5, r5, #2016	; 0x7e0
 801e866:	432a      	orrs	r2, r5
 801e868:	f820 2b02 	strh.w	r2, [r0], #2
 801e86c:	e7bd      	b.n	801e7ea <_ZN8touchgfx8LCD16bpp14blitCopyRGB888EPKhRKNS_4RectES5_h+0x10e>
 801e86e:	4a14      	ldr	r2, [pc, #80]	; (801e8c0 <_ZN8touchgfx8LCD16bpp14blitCopyRGB888EPKhRKNS_4RectES5_h+0x1e4>)
 801e870:	42b0      	cmp	r0, r6
 801e872:	d21f      	bcs.n	801e8b4 <_ZN8touchgfx8LCD16bpp14blitCopyRGB888EPKhRKNS_4RectES5_h+0x1d8>
 801e874:	eb00 050e 	add.w	r5, r0, lr
 801e878:	42a8      	cmp	r0, r5
 801e87a:	4621      	mov	r1, r4
 801e87c:	f104 0403 	add.w	r4, r4, #3
 801e880:	d210      	bcs.n	801e8a4 <_ZN8touchgfx8LCD16bpp14blitCopyRGB888EPKhRKNS_4RectES5_h+0x1c8>
 801e882:	f814 3c02 	ldrb.w	r3, [r4, #-2]
 801e886:	f814 1c01 	ldrb.w	r1, [r4, #-1]
 801e88a:	00db      	lsls	r3, r3, #3
 801e88c:	ea02 2101 	and.w	r1, r2, r1, lsl #8
 801e890:	f403 63fc 	and.w	r3, r3, #2016	; 0x7e0
 801e894:	430b      	orrs	r3, r1
 801e896:	f814 1c03 	ldrb.w	r1, [r4, #-3]
 801e89a:	ea43 03d1 	orr.w	r3, r3, r1, lsr #3
 801e89e:	f820 3b02 	strh.w	r3, [r0], #2
 801e8a2:	e7e9      	b.n	801e878 <_ZN8touchgfx8LCD16bpp14blitCopyRGB888EPKhRKNS_4RectES5_h+0x19c>
 801e8a4:	4438      	add	r0, r7
 801e8a6:	eb01 040c 	add.w	r4, r1, ip
 801e8aa:	e7e1      	b.n	801e870 <_ZN8touchgfx8LCD16bpp14blitCopyRGB888EPKhRKNS_4RectES5_h+0x194>
 801e8ac:	4438      	add	r0, r7
 801e8ae:	eb01 040c 	add.w	r4, r1, ip
 801e8b2:	e796      	b.n	801e7e2 <_ZN8touchgfx8LCD16bpp14blitCopyRGB888EPKhRKNS_4RectES5_h+0x106>
 801e8b4:	4b03      	ldr	r3, [pc, #12]	; (801e8c4 <_ZN8touchgfx8LCD16bpp14blitCopyRGB888EPKhRKNS_4RectES5_h+0x1e8>)
 801e8b6:	6818      	ldr	r0, [r3, #0]
 801e8b8:	6803      	ldr	r3, [r0, #0]
 801e8ba:	6adb      	ldr	r3, [r3, #44]	; 0x2c
 801e8bc:	4798      	blx	r3
 801e8be:	e768      	b.n	801e792 <_ZN8touchgfx8LCD16bpp14blitCopyRGB888EPKhRKNS_4RectES5_h+0xb6>
 801e8c0:	fffff800 	.word	0xfffff800
 801e8c4:	2001381c 	.word	0x2001381c
 801e8c8:	20013816 	.word	0x20013816

0801e8cc <_ZN8touchgfx8LCD16bpp8blitCopyEPKhNS_6Bitmap12BitmapFormatERKNS_4RectES7_hb>:
 801e8cc:	b4f0      	push	{r4, r5, r6, r7}
 801e8ce:	4616      	mov	r6, r2
 801e8d0:	2e01      	cmp	r6, #1
 801e8d2:	461c      	mov	r4, r3
 801e8d4:	460d      	mov	r5, r1
 801e8d6:	9a04      	ldr	r2, [sp, #16]
 801e8d8:	f89d 3014 	ldrb.w	r3, [sp, #20]
 801e8dc:	f89d 7018 	ldrb.w	r7, [sp, #24]
 801e8e0:	d012      	beq.n	801e908 <_ZN8touchgfx8LCD16bpp8blitCopyEPKhNS_6Bitmap12BitmapFormatERKNS_4RectES7_hb+0x3c>
 801e8e2:	d303      	bcc.n	801e8ec <_ZN8touchgfx8LCD16bpp8blitCopyEPKhNS_6Bitmap12BitmapFormatERKNS_4RectES7_hb+0x20>
 801e8e4:	2e02      	cmp	r6, #2
 801e8e6:	d00a      	beq.n	801e8fe <_ZN8touchgfx8LCD16bpp8blitCopyEPKhNS_6Bitmap12BitmapFormatERKNS_4RectES7_hb+0x32>
 801e8e8:	bcf0      	pop	{r4, r5, r6, r7}
 801e8ea:	4770      	bx	lr
 801e8ec:	6805      	ldr	r5, [r0, #0]
 801e8ee:	e9cd 3704 	strd	r3, r7, [sp, #16]
 801e8f2:	68ed      	ldr	r5, [r5, #12]
 801e8f4:	4613      	mov	r3, r2
 801e8f6:	46ac      	mov	ip, r5
 801e8f8:	4622      	mov	r2, r4
 801e8fa:	bcf0      	pop	{r4, r5, r6, r7}
 801e8fc:	4760      	bx	ip
 801e8fe:	4621      	mov	r1, r4
 801e900:	4628      	mov	r0, r5
 801e902:	bcf0      	pop	{r4, r5, r6, r7}
 801e904:	f7ff bd94 	b.w	801e430 <_ZN8touchgfx8LCD16bpp16blitCopyARGB8888EPKmRKNS_4RectES5_h>
 801e908:	4621      	mov	r1, r4
 801e90a:	4628      	mov	r0, r5
 801e90c:	bcf0      	pop	{r4, r5, r6, r7}
 801e90e:	f7ff bee5 	b.w	801e6dc <_ZN8touchgfx8LCD16bpp14blitCopyRGB888EPKhRKNS_4RectES5_h>
	...

0801e914 <_ZN8touchgfx8LCD16bpp19blitCopyL8_ARGB8888EPKhS2_RKNS_4RectES5_h>:
 801e914:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 801e918:	4681      	mov	r9, r0
 801e91a:	b093      	sub	sp, #76	; 0x4c
 801e91c:	6810      	ldr	r0, [r2, #0]
 801e91e:	f89d a070 	ldrb.w	sl, [sp, #112]	; 0x70
 801e922:	4f6d      	ldr	r7, [pc, #436]	; (801ead8 <_ZN8touchgfx8LCD16bpp19blitCopyL8_ARGB8888EPKhS2_RKNS_4RectES5_h+0x1c4>)
 801e924:	4688      	mov	r8, r1
 801e926:	6851      	ldr	r1, [r2, #4]
 801e928:	ac0e      	add	r4, sp, #56	; 0x38
 801e92a:	c403      	stmia	r4!, {r0, r1}
 801e92c:	6818      	ldr	r0, [r3, #0]
 801e92e:	6859      	ldr	r1, [r3, #4]
 801e930:	ac10      	add	r4, sp, #64	; 0x40
 801e932:	4616      	mov	r6, r2
 801e934:	c403      	stmia	r4!, {r0, r1}
 801e936:	a80e      	add	r0, sp, #56	; 0x38
 801e938:	f7f7 fc96 	bl	8016268 <_ZN8touchgfx21DisplayTransformation29transformDisplayToFrameBufferERNS_4RectE>
 801e93c:	4631      	mov	r1, r6
 801e93e:	a810      	add	r0, sp, #64	; 0x40
 801e940:	f7f7 fcd6 	bl	80162f0 <_ZN8touchgfx21DisplayTransformation29transformDisplayToFrameBufferERNS_4RectERKS1_>
 801e944:	f9bd 2040 	ldrsh.w	r2, [sp, #64]	; 0x40
 801e948:	f9bd 3042 	ldrsh.w	r3, [sp, #66]	; 0x42
 801e94c:	f8bd 103c 	ldrh.w	r1, [sp, #60]	; 0x3c
 801e950:	4e62      	ldr	r6, [pc, #392]	; (801eadc <_ZN8touchgfx8LCD16bpp19blitCopyL8_ARGB8888EPKhS2_RKNS_4RectES5_h+0x1c8>)
 801e952:	f9bd 4044 	ldrsh.w	r4, [sp, #68]	; 0x44
 801e956:	6830      	ldr	r0, [r6, #0]
 801e958:	f9bd 5046 	ldrsh.w	r5, [sp, #70]	; 0x46
 801e95c:	fb11 2103 	smlabb	r1, r1, r3, r2
 801e960:	4489      	add	r9, r1
 801e962:	f8bd 1038 	ldrh.w	r1, [sp, #56]	; 0x38
 801e966:	440a      	add	r2, r1
 801e968:	f8ad 2040 	strh.w	r2, [sp, #64]	; 0x40
 801e96c:	f8bd 203a 	ldrh.w	r2, [sp, #58]	; 0x3a
 801e970:	4413      	add	r3, r2
 801e972:	f8ad 3042 	strh.w	r3, [sp, #66]	; 0x42
 801e976:	6803      	ldr	r3, [r0, #0]
 801e978:	6b9b      	ldr	r3, [r3, #56]	; 0x38
 801e97a:	4798      	blx	r3
 801e97c:	f010 0f80 	tst.w	r0, #128	; 0x80
 801e980:	6830      	ldr	r0, [r6, #0]
 801e982:	d01d      	beq.n	801e9c0 <_ZN8touchgfx8LCD16bpp19blitCopyL8_ARGB8888EPKhS2_RKNS_4RectES5_h+0xac>
 801e984:	2200      	movs	r2, #0
 801e986:	6801      	ldr	r1, [r0, #0]
 801e988:	f8bd 3040 	ldrh.w	r3, [sp, #64]	; 0x40
 801e98c:	e9cd 2208 	strd	r2, r2, [sp, #32]
 801e990:	220b      	movs	r2, #11
 801e992:	9207      	str	r2, [sp, #28]
 801e994:	883a      	ldrh	r2, [r7, #0]
 801e996:	9206      	str	r2, [sp, #24]
 801e998:	2201      	movs	r2, #1
 801e99a:	e9cd a204 	strd	sl, r2, [sp, #16]
 801e99e:	f8bd 203c 	ldrh.w	r2, [sp, #60]	; 0x3c
 801e9a2:	9203      	str	r2, [sp, #12]
 801e9a4:	b2a4      	uxth	r4, r4
 801e9a6:	f8bd 2042 	ldrh.w	r2, [sp, #66]	; 0x42
 801e9aa:	9200      	str	r2, [sp, #0]
 801e9ac:	b2ad      	uxth	r5, r5
 801e9ae:	9502      	str	r5, [sp, #8]
 801e9b0:	9401      	str	r4, [sp, #4]
 801e9b2:	6bcc      	ldr	r4, [r1, #60]	; 0x3c
 801e9b4:	4642      	mov	r2, r8
 801e9b6:	4649      	mov	r1, r9
 801e9b8:	47a0      	blx	r4
 801e9ba:	b013      	add	sp, #76	; 0x4c
 801e9bc:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
 801e9c0:	6803      	ldr	r3, [r0, #0]
 801e9c2:	6a9b      	ldr	r3, [r3, #40]	; 0x28
 801e9c4:	4798      	blx	r3
 801e9c6:	883b      	ldrh	r3, [r7, #0]
 801e9c8:	f9bd 2042 	ldrsh.w	r2, [sp, #66]	; 0x42
 801e9cc:	f9bd 1040 	ldrsh.w	r1, [sp, #64]	; 0x40
 801e9d0:	fb03 1202 	mla	r2, r3, r2, r1
 801e9d4:	435d      	muls	r5, r3
 801e9d6:	eb00 0042 	add.w	r0, r0, r2, lsl #1
 801e9da:	eb00 0245 	add.w	r2, r0, r5, lsl #1
 801e9de:	920c      	str	r2, [sp, #48]	; 0x30
 801e9e0:	f9bd 203c 	ldrsh.w	r2, [sp, #60]	; 0x3c
 801e9e4:	1b12      	subs	r2, r2, r4
 801e9e6:	920d      	str	r2, [sp, #52]	; 0x34
 801e9e8:	0062      	lsls	r2, r4, #1
 801e9ea:	1b1c      	subs	r4, r3, r4
 801e9ec:	0063      	lsls	r3, r4, #1
 801e9ee:	920a      	str	r2, [sp, #40]	; 0x28
 801e9f0:	930b      	str	r3, [sp, #44]	; 0x2c
 801e9f2:	f04f 0e04 	mov.w	lr, #4
 801e9f6:	9b0c      	ldr	r3, [sp, #48]	; 0x30
 801e9f8:	4298      	cmp	r0, r3
 801e9fa:	d266      	bcs.n	801eaca <_ZN8touchgfx8LCD16bpp19blitCopyL8_ARGB8888EPKhS2_RKNS_4RectES5_h+0x1b6>
 801e9fc:	9b0a      	ldr	r3, [sp, #40]	; 0x28
 801e9fe:	eb00 0b03 	add.w	fp, r0, r3
 801ea02:	4558      	cmp	r0, fp
 801ea04:	d25c      	bcs.n	801eac0 <_ZN8touchgfx8LCD16bpp19blitCopyL8_ARGB8888EPKhS2_RKNS_4RectES5_h+0x1ac>
 801ea06:	f819 3b01 	ldrb.w	r3, [r9], #1
 801ea0a:	fb1e e303 	smlabb	r3, lr, r3, lr
 801ea0e:	f858 2003 	ldr.w	r2, [r8, r3]
 801ea12:	0e11      	lsrs	r1, r2, #24
 801ea14:	d012      	beq.n	801ea3c <_ZN8touchgfx8LCD16bpp19blitCopyL8_ARGB8888EPKhS2_RKNS_4RectES5_h+0x128>
 801ea16:	29ff      	cmp	r1, #255	; 0xff
 801ea18:	ea4f 2712 	mov.w	r7, r2, lsr #8
 801ea1c:	d110      	bne.n	801ea40 <_ZN8touchgfx8LCD16bpp19blitCopyL8_ARGB8888EPKhS2_RKNS_4RectES5_h+0x12c>
 801ea1e:	f1ba 0fff 	cmp.w	sl, #255	; 0xff
 801ea22:	d10d      	bne.n	801ea40 <_ZN8touchgfx8LCD16bpp19blitCopyL8_ARGB8888EPKhS2_RKNS_4RectES5_h+0x12c>
 801ea24:	0953      	lsrs	r3, r2, #5
 801ea26:	f427 67ff 	bic.w	r7, r7, #2040	; 0x7f8
 801ea2a:	f403 63fc 	and.w	r3, r3, #2016	; 0x7e0
 801ea2e:	f027 0707 	bic.w	r7, r7, #7
 801ea32:	431f      	orrs	r7, r3
 801ea34:	f3c2 02c4 	ubfx	r2, r2, #3, #5
 801ea38:	433a      	orrs	r2, r7
 801ea3a:	8002      	strh	r2, [r0, #0]
 801ea3c:	3002      	adds	r0, #2
 801ea3e:	e7e0      	b.n	801ea02 <_ZN8touchgfx8LCD16bpp19blitCopyL8_ARGB8888EPKhS2_RKNS_4RectES5_h+0xee>
 801ea40:	fb0a f101 	mul.w	r1, sl, r1
 801ea44:	8806      	ldrh	r6, [r0, #0]
 801ea46:	1c4b      	adds	r3, r1, #1
 801ea48:	eb03 2321 	add.w	r3, r3, r1, asr #8
 801ea4c:	1235      	asrs	r5, r6, #8
 801ea4e:	10f4      	asrs	r4, r6, #3
 801ea50:	121b      	asrs	r3, r3, #8
 801ea52:	00f6      	lsls	r6, r6, #3
 801ea54:	b299      	uxth	r1, r3
 801ea56:	f3c2 4c07 	ubfx	ip, r2, #16, #8
 801ea5a:	f005 05f8 	and.w	r5, r5, #248	; 0xf8
 801ea5e:	b2f6      	uxtb	r6, r6
 801ea60:	43db      	mvns	r3, r3
 801ea62:	b2d2      	uxtb	r2, r2
 801ea64:	b2db      	uxtb	r3, r3
 801ea66:	fb1c fc01 	smulbb	ip, ip, r1
 801ea6a:	ea45 1555 	orr.w	r5, r5, r5, lsr #5
 801ea6e:	ea46 1656 	orr.w	r6, r6, r6, lsr #5
 801ea72:	fb12 f201 	smulbb	r2, r2, r1
 801ea76:	fb05 c503 	mla	r5, r5, r3, ip
 801ea7a:	f004 04fc 	and.w	r4, r4, #252	; 0xfc
 801ea7e:	b2ff      	uxtb	r7, r7
 801ea80:	fb06 2203 	mla	r2, r6, r3, r2
 801ea84:	b2ad      	uxth	r5, r5
 801ea86:	fb17 f701 	smulbb	r7, r7, r1
 801ea8a:	b292      	uxth	r2, r2
 801ea8c:	ea44 1494 	orr.w	r4, r4, r4, lsr #6
 801ea90:	fb04 7403 	mla	r4, r4, r3, r7
 801ea94:	f105 0c01 	add.w	ip, r5, #1
 801ea98:	1c57      	adds	r7, r2, #1
 801ea9a:	eb0c 2515 	add.w	r5, ip, r5, lsr #8
 801ea9e:	eb07 2712 	add.w	r7, r7, r2, lsr #8
 801eaa2:	b2a4      	uxth	r4, r4
 801eaa4:	f3c7 27c4 	ubfx	r7, r7, #11, #5
 801eaa8:	f405 4578 	and.w	r5, r5, #63488	; 0xf800
 801eaac:	433d      	orrs	r5, r7
 801eaae:	1c67      	adds	r7, r4, #1
 801eab0:	eb07 2414 	add.w	r4, r7, r4, lsr #8
 801eab4:	0964      	lsrs	r4, r4, #5
 801eab6:	f404 64fc 	and.w	r4, r4, #2016	; 0x7e0
 801eaba:	4325      	orrs	r5, r4
 801eabc:	8005      	strh	r5, [r0, #0]
 801eabe:	e7bd      	b.n	801ea3c <_ZN8touchgfx8LCD16bpp19blitCopyL8_ARGB8888EPKhS2_RKNS_4RectES5_h+0x128>
 801eac0:	9b0b      	ldr	r3, [sp, #44]	; 0x2c
 801eac2:	4418      	add	r0, r3
 801eac4:	9b0d      	ldr	r3, [sp, #52]	; 0x34
 801eac6:	4499      	add	r9, r3
 801eac8:	e795      	b.n	801e9f6 <_ZN8touchgfx8LCD16bpp19blitCopyL8_ARGB8888EPKhS2_RKNS_4RectES5_h+0xe2>
 801eaca:	4b04      	ldr	r3, [pc, #16]	; (801eadc <_ZN8touchgfx8LCD16bpp19blitCopyL8_ARGB8888EPKhS2_RKNS_4RectES5_h+0x1c8>)
 801eacc:	6818      	ldr	r0, [r3, #0]
 801eace:	6803      	ldr	r3, [r0, #0]
 801ead0:	6adb      	ldr	r3, [r3, #44]	; 0x2c
 801ead2:	4798      	blx	r3
 801ead4:	e771      	b.n	801e9ba <_ZN8touchgfx8LCD16bpp19blitCopyL8_ARGB8888EPKhS2_RKNS_4RectES5_h+0xa6>
 801ead6:	bf00      	nop
 801ead8:	20013816 	.word	0x20013816
 801eadc:	2001381c 	.word	0x2001381c

0801eae0 <_ZN8touchgfx8LCD16bpp17blitCopyL8_RGB565EPKhS2_RKNS_4RectES5_h>:
 801eae0:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 801eae4:	b087      	sub	sp, #28
 801eae6:	4680      	mov	r8, r0
 801eae8:	f89d 6040 	ldrb.w	r6, [sp, #64]	; 0x40
 801eaec:	460d      	mov	r5, r1
 801eaee:	4614      	mov	r4, r2
 801eaf0:	2e00      	cmp	r6, #0
 801eaf2:	f000 80b9 	beq.w	801ec68 <_ZN8touchgfx8LCD16bpp17blitCopyL8_RGB565EPKhS2_RKNS_4RectES5_h+0x188>
 801eaf6:	6810      	ldr	r0, [r2, #0]
 801eaf8:	6851      	ldr	r1, [r2, #4]
 801eafa:	af02      	add	r7, sp, #8
 801eafc:	c703      	stmia	r7!, {r0, r1}
 801eafe:	6818      	ldr	r0, [r3, #0]
 801eb00:	6859      	ldr	r1, [r3, #4]
 801eb02:	af04      	add	r7, sp, #16
 801eb04:	c703      	stmia	r7!, {r0, r1}
 801eb06:	a802      	add	r0, sp, #8
 801eb08:	f7f7 fbae 	bl	8016268 <_ZN8touchgfx21DisplayTransformation29transformDisplayToFrameBufferERNS_4RectE>
 801eb0c:	4621      	mov	r1, r4
 801eb0e:	a804      	add	r0, sp, #16
 801eb10:	f7f7 fbee 	bl	80162f0 <_ZN8touchgfx21DisplayTransformation29transformDisplayToFrameBufferERNS_4RectERKS1_>
 801eb14:	f9bd 2010 	ldrsh.w	r2, [sp, #16]
 801eb18:	f9bd 3012 	ldrsh.w	r3, [sp, #18]
 801eb1c:	f8bd 400c 	ldrh.w	r4, [sp, #12]
 801eb20:	f9bd 7016 	ldrsh.w	r7, [sp, #22]
 801eb24:	fb14 2103 	smlabb	r1, r4, r3, r2
 801eb28:	eb08 0401 	add.w	r4, r8, r1
 801eb2c:	f8bd 1008 	ldrh.w	r1, [sp, #8]
 801eb30:	f9bd 8014 	ldrsh.w	r8, [sp, #20]
 801eb34:	440a      	add	r2, r1
 801eb36:	f8ad 2010 	strh.w	r2, [sp, #16]
 801eb3a:	f8bd 200a 	ldrh.w	r2, [sp, #10]
 801eb3e:	4413      	add	r3, r2
 801eb40:	f8ad 3012 	strh.w	r3, [sp, #18]
 801eb44:	4b4a      	ldr	r3, [pc, #296]	; (801ec70 <_ZN8touchgfx8LCD16bpp17blitCopyL8_RGB565EPKhS2_RKNS_4RectES5_h+0x190>)
 801eb46:	6818      	ldr	r0, [r3, #0]
 801eb48:	6803      	ldr	r3, [r0, #0]
 801eb4a:	6a9b      	ldr	r3, [r3, #40]	; 0x28
 801eb4c:	4798      	blx	r3
 801eb4e:	4b49      	ldr	r3, [pc, #292]	; (801ec74 <_ZN8touchgfx8LCD16bpp17blitCopyL8_RGB565EPKhS2_RKNS_4RectES5_h+0x194>)
 801eb50:	f9bd 1012 	ldrsh.w	r1, [sp, #18]
 801eb54:	881a      	ldrh	r2, [r3, #0]
 801eb56:	f9bd c010 	ldrsh.w	ip, [sp, #16]
 801eb5a:	2eff      	cmp	r6, #255	; 0xff
 801eb5c:	fb02 c101 	mla	r1, r2, r1, ip
 801eb60:	eb00 0041 	add.w	r0, r0, r1, lsl #1
 801eb64:	fb02 f207 	mul.w	r2, r2, r7
 801eb68:	f105 0104 	add.w	r1, r5, #4
 801eb6c:	ea4f 0a48 	mov.w	sl, r8, lsl #1
 801eb70:	461d      	mov	r5, r3
 801eb72:	d05a      	beq.n	801ec2a <_ZN8touchgfx8LCD16bpp17blitCopyL8_RGB565EPKhS2_RKNS_4RectES5_h+0x14a>
 801eb74:	f1c6 0eff 	rsb	lr, r6, #255	; 0xff
 801eb78:	eb00 0242 	add.w	r2, r0, r2, lsl #1
 801eb7c:	b2b6      	uxth	r6, r6
 801eb7e:	fa1f fe8e 	uxth.w	lr, lr
 801eb82:	9301      	str	r3, [sp, #4]
 801eb84:	4282      	cmp	r2, r0
 801eb86:	d96a      	bls.n	801ec5e <_ZN8touchgfx8LCD16bpp17blitCopyL8_RGB565EPKhS2_RKNS_4RectES5_h+0x17e>
 801eb88:	eb00 0b0a 	add.w	fp, r0, sl
 801eb8c:	4583      	cmp	fp, r0
 801eb8e:	d940      	bls.n	801ec12 <_ZN8touchgfx8LCD16bpp17blitCopyL8_RGB565EPKhS2_RKNS_4RectES5_h+0x132>
 801eb90:	f814 3b01 	ldrb.w	r3, [r4], #1
 801eb94:	8805      	ldrh	r5, [r0, #0]
 801eb96:	f831 3013 	ldrh.w	r3, [r1, r3, lsl #1]
 801eb9a:	122f      	asrs	r7, r5, #8
 801eb9c:	ea4f 2c23 	mov.w	ip, r3, asr #8
 801eba0:	f007 07f8 	and.w	r7, r7, #248	; 0xf8
 801eba4:	fb17 f70e 	smulbb	r7, r7, lr
 801eba8:	ea4f 09e5 	mov.w	r9, r5, asr #3
 801ebac:	f00c 0cf8 	and.w	ip, ip, #248	; 0xf8
 801ebb0:	00ed      	lsls	r5, r5, #3
 801ebb2:	fb0c 7c06 	mla	ip, ip, r6, r7
 801ebb6:	f009 09fc 	and.w	r9, r9, #252	; 0xfc
 801ebba:	10df      	asrs	r7, r3, #3
 801ebbc:	b2ed      	uxtb	r5, r5
 801ebbe:	00db      	lsls	r3, r3, #3
 801ebc0:	fa1f fc8c 	uxth.w	ip, ip
 801ebc4:	fb19 f90e 	smulbb	r9, r9, lr
 801ebc8:	f007 07fc 	and.w	r7, r7, #252	; 0xfc
 801ebcc:	b2db      	uxtb	r3, r3
 801ebce:	fb15 f50e 	smulbb	r5, r5, lr
 801ebd2:	fb07 9706 	mla	r7, r7, r6, r9
 801ebd6:	fb03 5306 	mla	r3, r3, r6, r5
 801ebda:	f10c 0901 	add.w	r9, ip, #1
 801ebde:	b29b      	uxth	r3, r3
 801ebe0:	eb09 2c1c 	add.w	ip, r9, ip, lsr #8
 801ebe4:	f40c 4978 	and.w	r9, ip, #63488	; 0xf800
 801ebe8:	f103 0c01 	add.w	ip, r3, #1
 801ebec:	eb0c 2c13 	add.w	ip, ip, r3, lsr #8
 801ebf0:	b2bf      	uxth	r7, r7
 801ebf2:	f3cc 2cc4 	ubfx	ip, ip, #11, #5
 801ebf6:	ea4c 0c09 	orr.w	ip, ip, r9
 801ebfa:	f107 0901 	add.w	r9, r7, #1
 801ebfe:	eb09 2717 	add.w	r7, r9, r7, lsr #8
 801ec02:	097f      	lsrs	r7, r7, #5
 801ec04:	f407 67fc 	and.w	r7, r7, #2016	; 0x7e0
 801ec08:	ea4c 0c07 	orr.w	ip, ip, r7
 801ec0c:	f820 cb02 	strh.w	ip, [r0], #2
 801ec10:	e7bc      	b.n	801eb8c <_ZN8touchgfx8LCD16bpp17blitCopyL8_RGB565EPKhS2_RKNS_4RectES5_h+0xac>
 801ec12:	9b01      	ldr	r3, [sp, #4]
 801ec14:	881b      	ldrh	r3, [r3, #0]
 801ec16:	eba3 0308 	sub.w	r3, r3, r8
 801ec1a:	eb00 0043 	add.w	r0, r0, r3, lsl #1
 801ec1e:	f9bd 300c 	ldrsh.w	r3, [sp, #12]
 801ec22:	eba3 0308 	sub.w	r3, r3, r8
 801ec26:	441c      	add	r4, r3
 801ec28:	e7ac      	b.n	801eb84 <_ZN8touchgfx8LCD16bpp17blitCopyL8_RGB565EPKhS2_RKNS_4RectES5_h+0xa4>
 801ec2a:	eb00 0242 	add.w	r2, r0, r2, lsl #1
 801ec2e:	4282      	cmp	r2, r0
 801ec30:	d915      	bls.n	801ec5e <_ZN8touchgfx8LCD16bpp17blitCopyL8_RGB565EPKhS2_RKNS_4RectES5_h+0x17e>
 801ec32:	eb00 060a 	add.w	r6, r0, sl
 801ec36:	4286      	cmp	r6, r0
 801ec38:	d906      	bls.n	801ec48 <_ZN8touchgfx8LCD16bpp17blitCopyL8_RGB565EPKhS2_RKNS_4RectES5_h+0x168>
 801ec3a:	f814 3b01 	ldrb.w	r3, [r4], #1
 801ec3e:	f831 3013 	ldrh.w	r3, [r1, r3, lsl #1]
 801ec42:	f820 3b02 	strh.w	r3, [r0], #2
 801ec46:	e7f6      	b.n	801ec36 <_ZN8touchgfx8LCD16bpp17blitCopyL8_RGB565EPKhS2_RKNS_4RectES5_h+0x156>
 801ec48:	882b      	ldrh	r3, [r5, #0]
 801ec4a:	eba3 0308 	sub.w	r3, r3, r8
 801ec4e:	eb00 0043 	add.w	r0, r0, r3, lsl #1
 801ec52:	f9bd 300c 	ldrsh.w	r3, [sp, #12]
 801ec56:	eba3 0308 	sub.w	r3, r3, r8
 801ec5a:	441c      	add	r4, r3
 801ec5c:	e7e7      	b.n	801ec2e <_ZN8touchgfx8LCD16bpp17blitCopyL8_RGB565EPKhS2_RKNS_4RectES5_h+0x14e>
 801ec5e:	4b04      	ldr	r3, [pc, #16]	; (801ec70 <_ZN8touchgfx8LCD16bpp17blitCopyL8_RGB565EPKhS2_RKNS_4RectES5_h+0x190>)
 801ec60:	6818      	ldr	r0, [r3, #0]
 801ec62:	6803      	ldr	r3, [r0, #0]
 801ec64:	6adb      	ldr	r3, [r3, #44]	; 0x2c
 801ec66:	4798      	blx	r3
 801ec68:	b007      	add	sp, #28
 801ec6a:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
 801ec6e:	bf00      	nop
 801ec70:	2001381c 	.word	0x2001381c
 801ec74:	20013816 	.word	0x20013816

0801ec78 <_ZN8touchgfx8LCD16bpp17blitCopyL8_RGB888EPKhS2_RKNS_4RectES5_h>:
 801ec78:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 801ec7c:	b091      	sub	sp, #68	; 0x44
 801ec7e:	4680      	mov	r8, r0
 801ec80:	f89d 5068 	ldrb.w	r5, [sp, #104]	; 0x68
 801ec84:	460f      	mov	r7, r1
 801ec86:	4614      	mov	r4, r2
 801ec88:	2d00      	cmp	r5, #0
 801ec8a:	d051      	beq.n	801ed30 <_ZN8touchgfx8LCD16bpp17blitCopyL8_RGB888EPKhS2_RKNS_4RectES5_h+0xb8>
 801ec8c:	6810      	ldr	r0, [r2, #0]
 801ec8e:	6851      	ldr	r1, [r2, #4]
 801ec90:	f8df 9200 	ldr.w	r9, [pc, #512]	; 801ee94 <_ZN8touchgfx8LCD16bpp17blitCopyL8_RGB888EPKhS2_RKNS_4RectES5_h+0x21c>
 801ec94:	ae0c      	add	r6, sp, #48	; 0x30
 801ec96:	c603      	stmia	r6!, {r0, r1}
 801ec98:	6818      	ldr	r0, [r3, #0]
 801ec9a:	6859      	ldr	r1, [r3, #4]
 801ec9c:	ae0e      	add	r6, sp, #56	; 0x38
 801ec9e:	c603      	stmia	r6!, {r0, r1}
 801eca0:	a80c      	add	r0, sp, #48	; 0x30
 801eca2:	f7f7 fae1 	bl	8016268 <_ZN8touchgfx21DisplayTransformation29transformDisplayToFrameBufferERNS_4RectE>
 801eca6:	4621      	mov	r1, r4
 801eca8:	a80e      	add	r0, sp, #56	; 0x38
 801ecaa:	f7f7 fb21 	bl	80162f0 <_ZN8touchgfx21DisplayTransformation29transformDisplayToFrameBufferERNS_4RectERKS1_>
 801ecae:	f9bd 2038 	ldrsh.w	r2, [sp, #56]	; 0x38
 801ecb2:	f9bd 303a 	ldrsh.w	r3, [sp, #58]	; 0x3a
 801ecb6:	f8bd 1034 	ldrh.w	r1, [sp, #52]	; 0x34
 801ecba:	f8d9 0000 	ldr.w	r0, [r9]
 801ecbe:	f9bd 603c 	ldrsh.w	r6, [sp, #60]	; 0x3c
 801ecc2:	f9bd a03e 	ldrsh.w	sl, [sp, #62]	; 0x3e
 801ecc6:	fb11 2103 	smlabb	r1, r1, r3, r2
 801ecca:	eb08 0401 	add.w	r4, r8, r1
 801ecce:	f8bd 1030 	ldrh.w	r1, [sp, #48]	; 0x30
 801ecd2:	f8df 81c4 	ldr.w	r8, [pc, #452]	; 801ee98 <_ZN8touchgfx8LCD16bpp17blitCopyL8_RGB888EPKhS2_RKNS_4RectES5_h+0x220>
 801ecd6:	440a      	add	r2, r1
 801ecd8:	f8ad 2038 	strh.w	r2, [sp, #56]	; 0x38
 801ecdc:	f8bd 2032 	ldrh.w	r2, [sp, #50]	; 0x32
 801ece0:	4413      	add	r3, r2
 801ece2:	f8ad 303a 	strh.w	r3, [sp, #58]	; 0x3a
 801ece6:	6803      	ldr	r3, [r0, #0]
 801ece8:	6b9b      	ldr	r3, [r3, #56]	; 0x38
 801ecea:	4798      	blx	r3
 801ecec:	f010 0f80 	tst.w	r0, #128	; 0x80
 801ecf0:	f8d9 0000 	ldr.w	r0, [r9]
 801ecf4:	d01f      	beq.n	801ed36 <_ZN8touchgfx8LCD16bpp17blitCopyL8_RGB888EPKhS2_RKNS_4RectES5_h+0xbe>
 801ecf6:	2200      	movs	r2, #0
 801ecf8:	6801      	ldr	r1, [r0, #0]
 801ecfa:	f8bd 3038 	ldrh.w	r3, [sp, #56]	; 0x38
 801ecfe:	e9cd 2208 	strd	r2, r2, [sp, #32]
 801ed02:	220b      	movs	r2, #11
 801ed04:	9207      	str	r2, [sp, #28]
 801ed06:	f8b8 2000 	ldrh.w	r2, [r8]
 801ed0a:	9206      	str	r2, [sp, #24]
 801ed0c:	2201      	movs	r2, #1
 801ed0e:	e9cd 5204 	strd	r5, r2, [sp, #16]
 801ed12:	f8bd 2034 	ldrh.w	r2, [sp, #52]	; 0x34
 801ed16:	9203      	str	r2, [sp, #12]
 801ed18:	fa1f f28a 	uxth.w	r2, sl
 801ed1c:	9202      	str	r2, [sp, #8]
 801ed1e:	b2b6      	uxth	r6, r6
 801ed20:	f8bd 203a 	ldrh.w	r2, [sp, #58]	; 0x3a
 801ed24:	9200      	str	r2, [sp, #0]
 801ed26:	9601      	str	r6, [sp, #4]
 801ed28:	6bcd      	ldr	r5, [r1, #60]	; 0x3c
 801ed2a:	463a      	mov	r2, r7
 801ed2c:	4621      	mov	r1, r4
 801ed2e:	47a8      	blx	r5
 801ed30:	b011      	add	sp, #68	; 0x44
 801ed32:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
 801ed36:	6803      	ldr	r3, [r0, #0]
 801ed38:	6a9b      	ldr	r3, [r3, #40]	; 0x28
 801ed3a:	4798      	blx	r3
 801ed3c:	f8b8 2000 	ldrh.w	r2, [r8]
 801ed40:	f9bd 303a 	ldrsh.w	r3, [sp, #58]	; 0x3a
 801ed44:	f9bd 1038 	ldrsh.w	r1, [sp, #56]	; 0x38
 801ed48:	2dff      	cmp	r5, #255	; 0xff
 801ed4a:	fb02 1303 	mla	r3, r2, r3, r1
 801ed4e:	eb00 0043 	add.w	r0, r0, r3, lsl #1
 801ed52:	ea4f 0946 	mov.w	r9, r6, lsl #1
 801ed56:	fb0a fa02 	mul.w	sl, sl, r2
 801ed5a:	d062      	beq.n	801ee22 <_ZN8touchgfx8LCD16bpp17blitCopyL8_RGB888EPKhS2_RKNS_4RectES5_h+0x1aa>
 801ed5c:	ea6f 0c05 	mvn.w	ip, r5
 801ed60:	eb00 034a 	add.w	r3, r0, sl, lsl #1
 801ed64:	930a      	str	r3, [sp, #40]	; 0x28
 801ed66:	b2ad      	uxth	r5, r5
 801ed68:	fa5f fc8c 	uxtb.w	ip, ip
 801ed6c:	f8cd 802c 	str.w	r8, [sp, #44]	; 0x2c
 801ed70:	9b0a      	ldr	r3, [sp, #40]	; 0x28
 801ed72:	4298      	cmp	r0, r3
 801ed74:	f080 8085 	bcs.w	801ee82 <_ZN8touchgfx8LCD16bpp17blitCopyL8_RGB888EPKhS2_RKNS_4RectES5_h+0x20a>
 801ed78:	eb00 0b09 	add.w	fp, r0, r9
 801ed7c:	4558      	cmp	r0, fp
 801ed7e:	d246      	bcs.n	801ee0e <_ZN8touchgfx8LCD16bpp17blitCopyL8_RGB888EPKhS2_RKNS_4RectES5_h+0x196>
 801ed80:	f814 eb01 	ldrb.w	lr, [r4], #1
 801ed84:	2303      	movs	r3, #3
 801ed86:	2204      	movs	r2, #4
 801ed88:	fb13 2e0e 	smlabb	lr, r3, lr, r2
 801ed8c:	eb07 0a0e 	add.w	sl, r7, lr
 801ed90:	8803      	ldrh	r3, [r0, #0]
 801ed92:	f89a 8002 	ldrb.w	r8, [sl, #2]
 801ed96:	f817 e00e 	ldrb.w	lr, [r7, lr]
 801ed9a:	1219      	asrs	r1, r3, #8
 801ed9c:	f001 01f8 	and.w	r1, r1, #248	; 0xf8
 801eda0:	fb18 f805 	smulbb	r8, r8, r5
 801eda4:	ea41 1151 	orr.w	r1, r1, r1, lsr #5
 801eda8:	10da      	asrs	r2, r3, #3
 801edaa:	fb01 810c 	mla	r1, r1, ip, r8
 801edae:	00db      	lsls	r3, r3, #3
 801edb0:	f89a 8001 	ldrb.w	r8, [sl, #1]
 801edb4:	f002 02fc 	and.w	r2, r2, #252	; 0xfc
 801edb8:	b2db      	uxtb	r3, r3
 801edba:	fb18 f805 	smulbb	r8, r8, r5
 801edbe:	fb1e fe05 	smulbb	lr, lr, r5
 801edc2:	ea42 1292 	orr.w	r2, r2, r2, lsr #6
 801edc6:	ea43 1353 	orr.w	r3, r3, r3, lsr #5
 801edca:	b289      	uxth	r1, r1
 801edcc:	fb02 820c 	mla	r2, r2, ip, r8
 801edd0:	fb03 e30c 	mla	r3, r3, ip, lr
 801edd4:	b292      	uxth	r2, r2
 801edd6:	b29b      	uxth	r3, r3
 801edd8:	f101 0801 	add.w	r8, r1, #1
 801eddc:	eb08 2111 	add.w	r1, r8, r1, lsr #8
 801ede0:	f103 0e01 	add.w	lr, r3, #1
 801ede4:	f102 0801 	add.w	r8, r2, #1
 801ede8:	eb0e 2e13 	add.w	lr, lr, r3, lsr #8
 801edec:	eb08 2812 	add.w	r8, r8, r2, lsr #8
 801edf0:	f401 4178 	and.w	r1, r1, #63488	; 0xf800
 801edf4:	f3ce 2ec4 	ubfx	lr, lr, #11, #5
 801edf8:	ea4f 1858 	mov.w	r8, r8, lsr #5
 801edfc:	ea4e 0101 	orr.w	r1, lr, r1
 801ee00:	f408 68fc 	and.w	r8, r8, #2016	; 0x7e0
 801ee04:	ea41 0108 	orr.w	r1, r1, r8
 801ee08:	f820 1b02 	strh.w	r1, [r0], #2
 801ee0c:	e7b6      	b.n	801ed7c <_ZN8touchgfx8LCD16bpp17blitCopyL8_RGB888EPKhS2_RKNS_4RectES5_h+0x104>
 801ee0e:	9b0b      	ldr	r3, [sp, #44]	; 0x2c
 801ee10:	881b      	ldrh	r3, [r3, #0]
 801ee12:	1b9b      	subs	r3, r3, r6
 801ee14:	eb00 0043 	add.w	r0, r0, r3, lsl #1
 801ee18:	f9bd 3034 	ldrsh.w	r3, [sp, #52]	; 0x34
 801ee1c:	1b9b      	subs	r3, r3, r6
 801ee1e:	441c      	add	r4, r3
 801ee20:	e7a6      	b.n	801ed70 <_ZN8touchgfx8LCD16bpp17blitCopyL8_RGB888EPKhS2_RKNS_4RectES5_h+0xf8>
 801ee22:	491b      	ldr	r1, [pc, #108]	; (801ee90 <_ZN8touchgfx8LCD16bpp17blitCopyL8_RGB888EPKhS2_RKNS_4RectES5_h+0x218>)
 801ee24:	eb00 0a4a 	add.w	sl, r0, sl, lsl #1
 801ee28:	2203      	movs	r2, #3
 801ee2a:	2504      	movs	r5, #4
 801ee2c:	4550      	cmp	r0, sl
 801ee2e:	d228      	bcs.n	801ee82 <_ZN8touchgfx8LCD16bpp17blitCopyL8_RGB888EPKhS2_RKNS_4RectES5_h+0x20a>
 801ee30:	eb00 0c09 	add.w	ip, r0, r9
 801ee34:	4560      	cmp	r0, ip
 801ee36:	4623      	mov	r3, r4
 801ee38:	d219      	bcs.n	801ee6e <_ZN8touchgfx8LCD16bpp17blitCopyL8_RGB888EPKhS2_RKNS_4RectES5_h+0x1f6>
 801ee3a:	f893 e000 	ldrb.w	lr, [r3]
 801ee3e:	fb12 5e0e 	smlabb	lr, r2, lr, r5
 801ee42:	eb07 0b0e 	add.w	fp, r7, lr
 801ee46:	f817 e00e 	ldrb.w	lr, [r7, lr]
 801ee4a:	f89b 3002 	ldrb.w	r3, [fp, #2]
 801ee4e:	f89b b001 	ldrb.w	fp, [fp, #1]
 801ee52:	ea4f 0bcb 	mov.w	fp, fp, lsl #3
 801ee56:	ea01 2303 	and.w	r3, r1, r3, lsl #8
 801ee5a:	f40b 6bfc 	and.w	fp, fp, #2016	; 0x7e0
 801ee5e:	ea43 030b 	orr.w	r3, r3, fp
 801ee62:	ea43 03de 	orr.w	r3, r3, lr, lsr #3
 801ee66:	3401      	adds	r4, #1
 801ee68:	f820 3b02 	strh.w	r3, [r0], #2
 801ee6c:	e7e2      	b.n	801ee34 <_ZN8touchgfx8LCD16bpp17blitCopyL8_RGB888EPKhS2_RKNS_4RectES5_h+0x1bc>
 801ee6e:	f8b8 3000 	ldrh.w	r3, [r8]
 801ee72:	1b9b      	subs	r3, r3, r6
 801ee74:	eb00 0043 	add.w	r0, r0, r3, lsl #1
 801ee78:	f9bd 3034 	ldrsh.w	r3, [sp, #52]	; 0x34
 801ee7c:	1b9b      	subs	r3, r3, r6
 801ee7e:	441c      	add	r4, r3
 801ee80:	e7d4      	b.n	801ee2c <_ZN8touchgfx8LCD16bpp17blitCopyL8_RGB888EPKhS2_RKNS_4RectES5_h+0x1b4>
 801ee82:	4b04      	ldr	r3, [pc, #16]	; (801ee94 <_ZN8touchgfx8LCD16bpp17blitCopyL8_RGB888EPKhS2_RKNS_4RectES5_h+0x21c>)
 801ee84:	6818      	ldr	r0, [r3, #0]
 801ee86:	6803      	ldr	r3, [r0, #0]
 801ee88:	6adb      	ldr	r3, [r3, #44]	; 0x2c
 801ee8a:	4798      	blx	r3
 801ee8c:	e750      	b.n	801ed30 <_ZN8touchgfx8LCD16bpp17blitCopyL8_RGB888EPKhS2_RKNS_4RectES5_h+0xb8>
 801ee8e:	bf00      	nop
 801ee90:	fffff800 	.word	0xfffff800
 801ee94:	2001381c 	.word	0x2001381c
 801ee98:	20013816 	.word	0x20013816

0801ee9c <_ZN8touchgfx8LCD16bpp10blitCopyL8EPKhS2_RKNS_4RectES5_h>:
 801ee9c:	b4f0      	push	{r4, r5, r6, r7}
 801ee9e:	460c      	mov	r4, r1
 801eea0:	4611      	mov	r1, r2
 801eea2:	f89d 5014 	ldrb.w	r5, [sp, #20]
 801eea6:	780f      	ldrb	r7, [r1, #0]
 801eea8:	784e      	ldrb	r6, [r1, #1]
 801eeaa:	2f01      	cmp	r7, #1
 801eeac:	461a      	mov	r2, r3
 801eeae:	9b04      	ldr	r3, [sp, #16]
 801eeb0:	d036      	beq.n	801ef20 <_ZN8touchgfx8LCD16bpp10blitCopyL8EPKhS2_RKNS_4RectES5_h+0x84>
 801eeb2:	d31e      	bcc.n	801eef2 <_ZN8touchgfx8LCD16bpp10blitCopyL8EPKhS2_RKNS_4RectES5_h+0x56>
 801eeb4:	2f02      	cmp	r7, #2
 801eeb6:	d14a      	bne.n	801ef4e <_ZN8touchgfx8LCD16bpp10blitCopyL8EPKhS2_RKNS_4RectES5_h+0xb2>
 801eeb8:	2e03      	cmp	r6, #3
 801eeba:	d848      	bhi.n	801ef4e <_ZN8touchgfx8LCD16bpp10blitCopyL8EPKhS2_RKNS_4RectES5_h+0xb2>
 801eebc:	e8df f006 	tbb	[pc, r6]
 801eec0:	16140702 	.word	0x16140702
 801eec4:	9504      	str	r5, [sp, #16]
 801eec6:	4620      	mov	r0, r4
 801eec8:	bcf0      	pop	{r4, r5, r6, r7}
 801eeca:	f7ff be09 	b.w	801eae0 <_ZN8touchgfx8LCD16bpp17blitCopyL8_RGB565EPKhS2_RKNS_4RectES5_h>
 801eece:	6f80      	ldr	r0, [r0, #120]	; 0x78
 801eed0:	2800      	cmp	r0, #0
 801eed2:	d03c      	beq.n	801ef4e <_ZN8touchgfx8LCD16bpp10blitCopyL8EPKhS2_RKNS_4RectES5_h+0xb2>
 801eed4:	6806      	ldr	r6, [r0, #0]
 801eed6:	e9cd 3504 	strd	r3, r5, [sp, #16]
 801eeda:	68b5      	ldr	r5, [r6, #8]
 801eedc:	4613      	mov	r3, r2
 801eede:	46ac      	mov	ip, r5
 801eee0:	460a      	mov	r2, r1
 801eee2:	4621      	mov	r1, r4
 801eee4:	bcf0      	pop	{r4, r5, r6, r7}
 801eee6:	4760      	bx	ip
 801eee8:	6fc0      	ldr	r0, [r0, #124]	; 0x7c
 801eeea:	e7f1      	b.n	801eed0 <_ZN8touchgfx8LCD16bpp10blitCopyL8EPKhS2_RKNS_4RectES5_h+0x34>
 801eeec:	f8d0 0080 	ldr.w	r0, [r0, #128]	; 0x80
 801eef0:	e7ee      	b.n	801eed0 <_ZN8touchgfx8LCD16bpp10blitCopyL8EPKhS2_RKNS_4RectES5_h+0x34>
 801eef2:	2e03      	cmp	r6, #3
 801eef4:	d82b      	bhi.n	801ef4e <_ZN8touchgfx8LCD16bpp10blitCopyL8EPKhS2_RKNS_4RectES5_h+0xb2>
 801eef6:	e8df f006 	tbb	[pc, r6]
 801eefa:	0702      	.short	0x0702
 801eefc:	100e      	.short	0x100e
 801eefe:	9504      	str	r5, [sp, #16]
 801ef00:	4620      	mov	r0, r4
 801ef02:	bcf0      	pop	{r4, r5, r6, r7}
 801ef04:	f7ff bd06 	b.w	801e914 <_ZN8touchgfx8LCD16bpp19blitCopyL8_ARGB8888EPKhS2_RKNS_4RectES5_h>
 801ef08:	6f80      	ldr	r0, [r0, #120]	; 0x78
 801ef0a:	b300      	cbz	r0, 801ef4e <_ZN8touchgfx8LCD16bpp10blitCopyL8EPKhS2_RKNS_4RectES5_h+0xb2>
 801ef0c:	6806      	ldr	r6, [r0, #0]
 801ef0e:	e9cd 3504 	strd	r3, r5, [sp, #16]
 801ef12:	68f5      	ldr	r5, [r6, #12]
 801ef14:	e7e2      	b.n	801eedc <_ZN8touchgfx8LCD16bpp10blitCopyL8EPKhS2_RKNS_4RectES5_h+0x40>
 801ef16:	6fc0      	ldr	r0, [r0, #124]	; 0x7c
 801ef18:	e7f7      	b.n	801ef0a <_ZN8touchgfx8LCD16bpp10blitCopyL8EPKhS2_RKNS_4RectES5_h+0x6e>
 801ef1a:	f8d0 0080 	ldr.w	r0, [r0, #128]	; 0x80
 801ef1e:	e7f4      	b.n	801ef0a <_ZN8touchgfx8LCD16bpp10blitCopyL8EPKhS2_RKNS_4RectES5_h+0x6e>
 801ef20:	2e03      	cmp	r6, #3
 801ef22:	d814      	bhi.n	801ef4e <_ZN8touchgfx8LCD16bpp10blitCopyL8EPKhS2_RKNS_4RectES5_h+0xb2>
 801ef24:	e8df f006 	tbb	[pc, r6]
 801ef28:	100e0702 	.word	0x100e0702
 801ef2c:	9504      	str	r5, [sp, #16]
 801ef2e:	4620      	mov	r0, r4
 801ef30:	bcf0      	pop	{r4, r5, r6, r7}
 801ef32:	f7ff bea1 	b.w	801ec78 <_ZN8touchgfx8LCD16bpp17blitCopyL8_RGB888EPKhS2_RKNS_4RectES5_h>
 801ef36:	6f80      	ldr	r0, [r0, #120]	; 0x78
 801ef38:	b148      	cbz	r0, 801ef4e <_ZN8touchgfx8LCD16bpp10blitCopyL8EPKhS2_RKNS_4RectES5_h+0xb2>
 801ef3a:	6806      	ldr	r6, [r0, #0]
 801ef3c:	e9cd 3504 	strd	r3, r5, [sp, #16]
 801ef40:	6935      	ldr	r5, [r6, #16]
 801ef42:	e7cb      	b.n	801eedc <_ZN8touchgfx8LCD16bpp10blitCopyL8EPKhS2_RKNS_4RectES5_h+0x40>
 801ef44:	6fc0      	ldr	r0, [r0, #124]	; 0x7c
 801ef46:	e7f7      	b.n	801ef38 <_ZN8touchgfx8LCD16bpp10blitCopyL8EPKhS2_RKNS_4RectES5_h+0x9c>
 801ef48:	f8d0 0080 	ldr.w	r0, [r0, #128]	; 0x80
 801ef4c:	e7f4      	b.n	801ef38 <_ZN8touchgfx8LCD16bpp10blitCopyL8EPKhS2_RKNS_4RectES5_h+0x9c>
 801ef4e:	bcf0      	pop	{r4, r5, r6, r7}
 801ef50:	4770      	bx	lr
	...

0801ef54 <_ZN8touchgfx8LCD16bpp21blitCopyAlphaPerPixelEPKtPKhRKNS_4RectES7_h>:
 801ef54:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 801ef58:	4604      	mov	r4, r0
 801ef5a:	b087      	sub	sp, #28
 801ef5c:	6810      	ldr	r0, [r2, #0]
 801ef5e:	f89d a040 	ldrb.w	sl, [sp, #64]	; 0x40
 801ef62:	f8df 9238 	ldr.w	r9, [pc, #568]	; 801f19c <_ZN8touchgfx8LCD16bpp21blitCopyAlphaPerPixelEPKtPKhRKNS_4RectES7_h+0x248>
 801ef66:	460e      	mov	r6, r1
 801ef68:	6851      	ldr	r1, [r2, #4]
 801ef6a:	ad02      	add	r5, sp, #8
 801ef6c:	c503      	stmia	r5!, {r0, r1}
 801ef6e:	6818      	ldr	r0, [r3, #0]
 801ef70:	6859      	ldr	r1, [r3, #4]
 801ef72:	ad04      	add	r5, sp, #16
 801ef74:	4617      	mov	r7, r2
 801ef76:	c503      	stmia	r5!, {r0, r1}
 801ef78:	a802      	add	r0, sp, #8
 801ef7a:	f7f7 f975 	bl	8016268 <_ZN8touchgfx21DisplayTransformation29transformDisplayToFrameBufferERNS_4RectE>
 801ef7e:	4639      	mov	r1, r7
 801ef80:	a804      	add	r0, sp, #16
 801ef82:	f7f7 f9b5 	bl	80162f0 <_ZN8touchgfx21DisplayTransformation29transformDisplayToFrameBufferERNS_4RectERKS1_>
 801ef86:	f9bd 2010 	ldrsh.w	r2, [sp, #16]
 801ef8a:	f9bd 3012 	ldrsh.w	r3, [sp, #18]
 801ef8e:	f8bd 100c 	ldrh.w	r1, [sp, #12]
 801ef92:	f9bd 8014 	ldrsh.w	r8, [sp, #20]
 801ef96:	f9bd 5016 	ldrsh.w	r5, [sp, #22]
 801ef9a:	fb11 2103 	smlabb	r1, r1, r3, r2
 801ef9e:	eb04 0441 	add.w	r4, r4, r1, lsl #1
 801efa2:	440e      	add	r6, r1
 801efa4:	f8bd 1008 	ldrh.w	r1, [sp, #8]
 801efa8:	440a      	add	r2, r1
 801efaa:	f8ad 2010 	strh.w	r2, [sp, #16]
 801efae:	f8bd 200a 	ldrh.w	r2, [sp, #10]
 801efb2:	4413      	add	r3, r2
 801efb4:	f8ad 3012 	strh.w	r3, [sp, #18]
 801efb8:	4b77      	ldr	r3, [pc, #476]	; (801f198 <_ZN8touchgfx8LCD16bpp21blitCopyAlphaPerPixelEPKtPKhRKNS_4RectES7_h+0x244>)
 801efba:	6818      	ldr	r0, [r3, #0]
 801efbc:	6803      	ldr	r3, [r0, #0]
 801efbe:	6a9b      	ldr	r3, [r3, #40]	; 0x28
 801efc0:	4798      	blx	r3
 801efc2:	f8b9 b000 	ldrh.w	fp, [r9]
 801efc6:	f9bd 3012 	ldrsh.w	r3, [sp, #18]
 801efca:	f9bd 2010 	ldrsh.w	r2, [sp, #16]
 801efce:	fb0b 2303 	mla	r3, fp, r3, r2
 801efd2:	eb00 0043 	add.w	r0, r0, r3, lsl #1
 801efd6:	f1ba 0fff 	cmp.w	sl, #255	; 0xff
 801efda:	ea4f 0348 	mov.w	r3, r8, lsl #1
 801efde:	fb05 f50b 	mul.w	r5, r5, fp
 801efe2:	9300      	str	r3, [sp, #0]
 801efe4:	d069      	beq.n	801f0ba <_ZN8touchgfx8LCD16bpp21blitCopyAlphaPerPixelEPKtPKhRKNS_4RectES7_h+0x166>
 801efe6:	eb00 0b45 	add.w	fp, r0, r5, lsl #1
 801efea:	4558      	cmp	r0, fp
 801efec:	f080 80cc 	bcs.w	801f188 <_ZN8touchgfx8LCD16bpp21blitCopyAlphaPerPixelEPKtPKhRKNS_4RectES7_h+0x234>
 801eff0:	9b00      	ldr	r3, [sp, #0]
 801eff2:	18c3      	adds	r3, r0, r3
 801eff4:	9301      	str	r3, [sp, #4]
 801eff6:	4631      	mov	r1, r6
 801eff8:	9b01      	ldr	r3, [sp, #4]
 801effa:	4298      	cmp	r0, r3
 801effc:	d24f      	bcs.n	801f09e <_ZN8touchgfx8LCD16bpp21blitCopyAlphaPerPixelEPKtPKhRKNS_4RectES7_h+0x14a>
 801effe:	f811 2b01 	ldrb.w	r2, [r1], #1
 801f002:	2a00      	cmp	r2, #0
 801f004:	d048      	beq.n	801f098 <_ZN8touchgfx8LCD16bpp21blitCopyAlphaPerPixelEPKtPKhRKNS_4RectES7_h+0x144>
 801f006:	fb0a f202 	mul.w	r2, sl, r2
 801f00a:	1c53      	adds	r3, r2, #1
 801f00c:	eb03 2312 	add.w	r3, r3, r2, lsr #8
 801f010:	121b      	asrs	r3, r3, #8
 801f012:	d041      	beq.n	801f098 <_ZN8touchgfx8LCD16bpp21blitCopyAlphaPerPixelEPKtPKhRKNS_4RectES7_h+0x144>
 801f014:	8802      	ldrh	r2, [r0, #0]
 801f016:	f8b4 c000 	ldrh.w	ip, [r4]
 801f01a:	b29e      	uxth	r6, r3
 801f01c:	1215      	asrs	r5, r2, #8
 801f01e:	43db      	mvns	r3, r3
 801f020:	b2db      	uxtb	r3, r3
 801f022:	ea4f 272c 	mov.w	r7, ip, asr #8
 801f026:	f005 05f8 	and.w	r5, r5, #248	; 0xf8
 801f02a:	fb15 f503 	smulbb	r5, r5, r3
 801f02e:	ea4f 0ee2 	mov.w	lr, r2, asr #3
 801f032:	f007 07f8 	and.w	r7, r7, #248	; 0xf8
 801f036:	00d2      	lsls	r2, r2, #3
 801f038:	fb07 5706 	mla	r7, r7, r6, r5
 801f03c:	f00e 0efc 	and.w	lr, lr, #252	; 0xfc
 801f040:	ea4f 05ec 	mov.w	r5, ip, asr #3
 801f044:	b2d2      	uxtb	r2, r2
 801f046:	ea4f 0ccc 	mov.w	ip, ip, lsl #3
 801f04a:	b2bf      	uxth	r7, r7
 801f04c:	fb1e fe03 	smulbb	lr, lr, r3
 801f050:	f005 05fc 	and.w	r5, r5, #252	; 0xfc
 801f054:	fa5f fc8c 	uxtb.w	ip, ip
 801f058:	fb12 f203 	smulbb	r2, r2, r3
 801f05c:	fb05 e506 	mla	r5, r5, r6, lr
 801f060:	fb0c 2c06 	mla	ip, ip, r6, r2
 801f064:	f107 0e01 	add.w	lr, r7, #1
 801f068:	fa1f fc8c 	uxth.w	ip, ip
 801f06c:	eb0e 2717 	add.w	r7, lr, r7, lsr #8
 801f070:	f407 4e78 	and.w	lr, r7, #63488	; 0xf800
 801f074:	f10c 0701 	add.w	r7, ip, #1
 801f078:	eb07 271c 	add.w	r7, r7, ip, lsr #8
 801f07c:	b2ad      	uxth	r5, r5
 801f07e:	f3c7 27c4 	ubfx	r7, r7, #11, #5
 801f082:	ea47 070e 	orr.w	r7, r7, lr
 801f086:	f105 0e01 	add.w	lr, r5, #1
 801f08a:	eb0e 2515 	add.w	r5, lr, r5, lsr #8
 801f08e:	096d      	lsrs	r5, r5, #5
 801f090:	f405 65fc 	and.w	r5, r5, #2016	; 0x7e0
 801f094:	432f      	orrs	r7, r5
 801f096:	8007      	strh	r7, [r0, #0]
 801f098:	3002      	adds	r0, #2
 801f09a:	3402      	adds	r4, #2
 801f09c:	e7ac      	b.n	801eff8 <_ZN8touchgfx8LCD16bpp21blitCopyAlphaPerPixelEPKtPKhRKNS_4RectES7_h+0xa4>
 801f09e:	f8b9 3000 	ldrh.w	r3, [r9]
 801f0a2:	f9bd 600c 	ldrsh.w	r6, [sp, #12]
 801f0a6:	eba3 0308 	sub.w	r3, r3, r8
 801f0aa:	eba6 0608 	sub.w	r6, r6, r8
 801f0ae:	eb04 0446 	add.w	r4, r4, r6, lsl #1
 801f0b2:	eb00 0043 	add.w	r0, r0, r3, lsl #1
 801f0b6:	440e      	add	r6, r1
 801f0b8:	e797      	b.n	801efea <_ZN8touchgfx8LCD16bpp21blitCopyAlphaPerPixelEPKtPKhRKNS_4RectES7_h+0x96>
 801f0ba:	eb00 0545 	add.w	r5, r0, r5, lsl #1
 801f0be:	42a8      	cmp	r0, r5
 801f0c0:	d262      	bcs.n	801f188 <_ZN8touchgfx8LCD16bpp21blitCopyAlphaPerPixelEPKtPKhRKNS_4RectES7_h+0x234>
 801f0c2:	9b00      	ldr	r3, [sp, #0]
 801f0c4:	4631      	mov	r1, r6
 801f0c6:	eb00 0b03 	add.w	fp, r0, r3
 801f0ca:	4558      	cmp	r0, fp
 801f0cc:	d24e      	bcs.n	801f16c <_ZN8touchgfx8LCD16bpp21blitCopyAlphaPerPixelEPKtPKhRKNS_4RectES7_h+0x218>
 801f0ce:	f811 3b01 	ldrb.w	r3, [r1], #1
 801f0d2:	b12b      	cbz	r3, 801f0e0 <_ZN8touchgfx8LCD16bpp21blitCopyAlphaPerPixelEPKtPKhRKNS_4RectES7_h+0x18c>
 801f0d4:	2bff      	cmp	r3, #255	; 0xff
 801f0d6:	f8b4 e000 	ldrh.w	lr, [r4]
 801f0da:	d104      	bne.n	801f0e6 <_ZN8touchgfx8LCD16bpp21blitCopyAlphaPerPixelEPKtPKhRKNS_4RectES7_h+0x192>
 801f0dc:	f8a0 e000 	strh.w	lr, [r0]
 801f0e0:	3002      	adds	r0, #2
 801f0e2:	3402      	adds	r4, #2
 801f0e4:	e7f1      	b.n	801f0ca <_ZN8touchgfx8LCD16bpp21blitCopyAlphaPerPixelEPKtPKhRKNS_4RectES7_h+0x176>
 801f0e6:	8802      	ldrh	r2, [r0, #0]
 801f0e8:	b29f      	uxth	r7, r3
 801f0ea:	1216      	asrs	r6, r2, #8
 801f0ec:	43db      	mvns	r3, r3
 801f0ee:	b2db      	uxtb	r3, r3
 801f0f0:	ea4f 2c2e 	mov.w	ip, lr, asr #8
 801f0f4:	f006 06f8 	and.w	r6, r6, #248	; 0xf8
 801f0f8:	fb16 f603 	smulbb	r6, r6, r3
 801f0fc:	ea4f 0ae2 	mov.w	sl, r2, asr #3
 801f100:	f00c 0cf8 	and.w	ip, ip, #248	; 0xf8
 801f104:	00d2      	lsls	r2, r2, #3
 801f106:	fb0c 6c07 	mla	ip, ip, r7, r6
 801f10a:	b2d2      	uxtb	r2, r2
 801f10c:	ea4f 06ee 	mov.w	r6, lr, asr #3
 801f110:	f00a 0afc 	and.w	sl, sl, #252	; 0xfc
 801f114:	ea4f 0ece 	mov.w	lr, lr, lsl #3
 801f118:	fb1a fa03 	smulbb	sl, sl, r3
 801f11c:	fa1f fc8c 	uxth.w	ip, ip
 801f120:	fb12 f303 	smulbb	r3, r2, r3
 801f124:	f006 06fc 	and.w	r6, r6, #252	; 0xfc
 801f128:	fa5f fe8e 	uxtb.w	lr, lr
 801f12c:	fb06 a607 	mla	r6, r6, r7, sl
 801f130:	f10c 0201 	add.w	r2, ip, #1
 801f134:	fb0e 3307 	mla	r3, lr, r7, r3
 801f138:	b2b6      	uxth	r6, r6
 801f13a:	b29b      	uxth	r3, r3
 801f13c:	eb02 2c1c 	add.w	ip, r2, ip, lsr #8
 801f140:	f40c 4278 	and.w	r2, ip, #63488	; 0xf800
 801f144:	f106 0a01 	add.w	sl, r6, #1
 801f148:	f103 0c01 	add.w	ip, r3, #1
 801f14c:	eb0c 2c13 	add.w	ip, ip, r3, lsr #8
 801f150:	eb0a 2616 	add.w	r6, sl, r6, lsr #8
 801f154:	f3cc 2cc4 	ubfx	ip, ip, #11, #5
 801f158:	0976      	lsrs	r6, r6, #5
 801f15a:	ea4c 0c02 	orr.w	ip, ip, r2
 801f15e:	f406 66fc 	and.w	r6, r6, #2016	; 0x7e0
 801f162:	ea4c 0c06 	orr.w	ip, ip, r6
 801f166:	f8a0 c000 	strh.w	ip, [r0]
 801f16a:	e7b9      	b.n	801f0e0 <_ZN8touchgfx8LCD16bpp21blitCopyAlphaPerPixelEPKtPKhRKNS_4RectES7_h+0x18c>
 801f16c:	f8b9 3000 	ldrh.w	r3, [r9]
 801f170:	f9bd 600c 	ldrsh.w	r6, [sp, #12]
 801f174:	eba3 0308 	sub.w	r3, r3, r8
 801f178:	eba6 0608 	sub.w	r6, r6, r8
 801f17c:	eb04 0446 	add.w	r4, r4, r6, lsl #1
 801f180:	eb00 0043 	add.w	r0, r0, r3, lsl #1
 801f184:	440e      	add	r6, r1
 801f186:	e79a      	b.n	801f0be <_ZN8touchgfx8LCD16bpp21blitCopyAlphaPerPixelEPKtPKhRKNS_4RectES7_h+0x16a>
 801f188:	4b03      	ldr	r3, [pc, #12]	; (801f198 <_ZN8touchgfx8LCD16bpp21blitCopyAlphaPerPixelEPKtPKhRKNS_4RectES7_h+0x244>)
 801f18a:	6818      	ldr	r0, [r3, #0]
 801f18c:	6803      	ldr	r3, [r0, #0]
 801f18e:	6adb      	ldr	r3, [r3, #44]	; 0x2c
 801f190:	4798      	blx	r3
 801f192:	b007      	add	sp, #28
 801f194:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
 801f198:	2001381c 	.word	0x2001381c
 801f19c:	20013816 	.word	0x20013816

0801f1a0 <_ZN8touchgfx8LCD16bpp17drawPartialBitmapERKNS_6BitmapEssRKNS_4RectEhb>:
 801f1a0:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 801f1a4:	b089      	sub	sp, #36	; 0x24
 801f1a6:	4682      	mov	sl, r0
 801f1a8:	f89d 604c 	ldrb.w	r6, [sp, #76]	; 0x4c
 801f1ac:	9c12      	ldr	r4, [sp, #72]	; 0x48
 801f1ae:	460f      	mov	r7, r1
 801f1b0:	4691      	mov	r9, r2
 801f1b2:	4698      	mov	r8, r3
 801f1b4:	2e00      	cmp	r6, #0
 801f1b6:	d03d      	beq.n	801f234 <_ZN8touchgfx8LCD16bpp17drawPartialBitmapERKNS_6BitmapEssRKNS_4RectEhb+0x94>
 801f1b8:	4608      	mov	r0, r1
 801f1ba:	f7fa fe59 	bl	8019e70 <_ZNK8touchgfx6Bitmap8getWidthEv>
 801f1be:	4605      	mov	r5, r0
 801f1c0:	4638      	mov	r0, r7
 801f1c2:	f7fa fe89 	bl	8019ed8 <_ZNK8touchgfx6Bitmap9getHeightEv>
 801f1c6:	f8ad 000e 	strh.w	r0, [sp, #14]
 801f1ca:	4638      	mov	r0, r7
 801f1cc:	f8ad 9008 	strh.w	r9, [sp, #8]
 801f1d0:	f8ad 500c 	strh.w	r5, [sp, #12]
 801f1d4:	f8ad 800a 	strh.w	r8, [sp, #10]
 801f1d8:	f7fa ff36 	bl	801a048 <_ZNK8touchgfx6Bitmap7getDataEv>
 801f1dc:	4605      	mov	r5, r0
 801f1de:	4638      	mov	r0, r7
 801f1e0:	f7fa ff62 	bl	801a0a8 <_ZNK8touchgfx6Bitmap12getExtraDataEv>
 801f1e4:	4681      	mov	r9, r0
 801f1e6:	4638      	mov	r0, r7
 801f1e8:	f7fa ffb2 	bl	801a150 <_ZNK8touchgfx6Bitmap9getFormatEv>
 801f1ec:	280b      	cmp	r0, #11
 801f1ee:	d821      	bhi.n	801f234 <_ZN8touchgfx8LCD16bpp17drawPartialBitmapERKNS_6BitmapEssRKNS_4RectEhb+0x94>
 801f1f0:	e8df f000 	tbb	[pc, r0]
 801f1f4:	2006aebe 	.word	0x2006aebe
 801f1f8:	20202020 	.word	0x20202020
 801f1fc:	b5202020 	.word	0xb5202020
 801f200:	4bb0      	ldr	r3, [pc, #704]	; (801f4c4 <_ZN8touchgfx8LCD16bpp17drawPartialBitmapERKNS_6BitmapEssRKNS_4RectEhb+0x324>)
 801f202:	6818      	ldr	r0, [r3, #0]
 801f204:	6803      	ldr	r3, [r0, #0]
 801f206:	6b9b      	ldr	r3, [r3, #56]	; 0x38
 801f208:	4798      	blx	r3
 801f20a:	2eff      	cmp	r6, #255	; 0xff
 801f20c:	d101      	bne.n	801f212 <_ZN8touchgfx8LCD16bpp17drawPartialBitmapERKNS_6BitmapEssRKNS_4RectEhb+0x72>
 801f20e:	0683      	lsls	r3, r0, #26
 801f210:	d506      	bpl.n	801f220 <_ZN8touchgfx8LCD16bpp17drawPartialBitmapERKNS_6BitmapEssRKNS_4RectEhb+0x80>
 801f212:	4633      	mov	r3, r6
 801f214:	4622      	mov	r2, r4
 801f216:	a902      	add	r1, sp, #8
 801f218:	4628      	mov	r0, r5
 801f21a:	f7ff f909 	bl	801e430 <_ZN8touchgfx8LCD16bpp16blitCopyARGB8888EPKmRKNS_4RectES5_h>
 801f21e:	e009      	b.n	801f234 <_ZN8touchgfx8LCD16bpp17drawPartialBitmapERKNS_6BitmapEssRKNS_4RectEhb+0x94>
 801f220:	4638      	mov	r0, r7
 801f222:	f7fa fed9 	bl	8019fd8 <_ZNK8touchgfx6Bitmap20hasTransparentPixelsEv>
 801f226:	b940      	cbnz	r0, 801f23a <_ZN8touchgfx8LCD16bpp17drawPartialBitmapERKNS_6BitmapEssRKNS_4RectEhb+0x9a>
 801f228:	4623      	mov	r3, r4
 801f22a:	aa02      	add	r2, sp, #8
 801f22c:	4629      	mov	r1, r5
 801f22e:	4650      	mov	r0, sl
 801f230:	f7ff f9e4 	bl	801e5fc <_ZNK8touchgfx8LCD16bpp21blitCopyARGB8888SolidEPKmRKNS_4RectES5_>
 801f234:	b009      	add	sp, #36	; 0x24
 801f236:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
 801f23a:	f10d 0818 	add.w	r8, sp, #24
 801f23e:	4639      	mov	r1, r7
 801f240:	4640      	mov	r0, r8
 801f242:	f7fa fe7d 	bl	8019f40 <_ZNK8touchgfx6Bitmap12getSolidRectEv>
 801f246:	e898 0003 	ldmia.w	r8, {r0, r1}
 801f24a:	af04      	add	r7, sp, #16
 801f24c:	e887 0003 	stmia.w	r7, {r0, r1}
 801f250:	4638      	mov	r0, r7
 801f252:	4621      	mov	r1, r4
 801f254:	f7f1 fa6a 	bl	801072c <_ZN8touchgfx4RectaNERKS0_>
 801f258:	4638      	mov	r0, r7
 801f25a:	f7f1 faaa 	bl	80107b2 <_ZNK8touchgfx4Rect7isEmptyEv>
 801f25e:	2800      	cmp	r0, #0
 801f260:	d1d7      	bne.n	801f212 <_ZN8touchgfx8LCD16bpp17drawPartialBitmapERKNS_6BitmapEssRKNS_4RectEhb+0x72>
 801f262:	f9bd 3012 	ldrsh.w	r3, [sp, #18]
 801f266:	f9b4 2002 	ldrsh.w	r2, [r4, #2]
 801f26a:	4293      	cmp	r3, r2
 801f26c:	dd12      	ble.n	801f294 <_ZN8touchgfx8LCD16bpp17drawPartialBitmapERKNS_6BitmapEssRKNS_4RectEhb+0xf4>
 801f26e:	1a9b      	subs	r3, r3, r2
 801f270:	f9b4 0000 	ldrsh.w	r0, [r4]
 801f274:	f9b4 1004 	ldrsh.w	r1, [r4, #4]
 801f278:	f8ad 0018 	strh.w	r0, [sp, #24]
 801f27c:	f8ad 201a 	strh.w	r2, [sp, #26]
 801f280:	f8ad 101c 	strh.w	r1, [sp, #28]
 801f284:	f8ad 301e 	strh.w	r3, [sp, #30]
 801f288:	4642      	mov	r2, r8
 801f28a:	4633      	mov	r3, r6
 801f28c:	a902      	add	r1, sp, #8
 801f28e:	4628      	mov	r0, r5
 801f290:	f7ff f8ce 	bl	801e430 <_ZN8touchgfx8LCD16bpp16blitCopyARGB8888EPKmRKNS_4RectES5_h>
 801f294:	f9bd 3010 	ldrsh.w	r3, [sp, #16]
 801f298:	f9b4 2000 	ldrsh.w	r2, [r4]
 801f29c:	4293      	cmp	r3, r2
 801f29e:	dd12      	ble.n	801f2c6 <_ZN8touchgfx8LCD16bpp17drawPartialBitmapERKNS_6BitmapEssRKNS_4RectEhb+0x126>
 801f2a0:	1a9b      	subs	r3, r3, r2
 801f2a2:	f9bd 0012 	ldrsh.w	r0, [sp, #18]
 801f2a6:	f9bd 1016 	ldrsh.w	r1, [sp, #22]
 801f2aa:	f8ad 2018 	strh.w	r2, [sp, #24]
 801f2ae:	f8ad 001a 	strh.w	r0, [sp, #26]
 801f2b2:	f8ad 301c 	strh.w	r3, [sp, #28]
 801f2b6:	f8ad 101e 	strh.w	r1, [sp, #30]
 801f2ba:	23ff      	movs	r3, #255	; 0xff
 801f2bc:	4642      	mov	r2, r8
 801f2be:	a902      	add	r1, sp, #8
 801f2c0:	4628      	mov	r0, r5
 801f2c2:	f7ff f8b5 	bl	801e430 <_ZN8touchgfx8LCD16bpp16blitCopyARGB8888EPKmRKNS_4RectES5_h>
 801f2c6:	463b      	mov	r3, r7
 801f2c8:	aa02      	add	r2, sp, #8
 801f2ca:	4629      	mov	r1, r5
 801f2cc:	4650      	mov	r0, sl
 801f2ce:	f7ff f995 	bl	801e5fc <_ZNK8touchgfx8LCD16bpp21blitCopyARGB8888SolidEPKmRKNS_4RectES5_>
 801f2d2:	88a2      	ldrh	r2, [r4, #4]
 801f2d4:	8823      	ldrh	r3, [r4, #0]
 801f2d6:	f8bd 1014 	ldrh.w	r1, [sp, #20]
 801f2da:	4413      	add	r3, r2
 801f2dc:	f8bd 2010 	ldrh.w	r2, [sp, #16]
 801f2e0:	440a      	add	r2, r1
 801f2e2:	b29b      	uxth	r3, r3
 801f2e4:	b292      	uxth	r2, r2
 801f2e6:	b211      	sxth	r1, r2
 801f2e8:	b218      	sxth	r0, r3
 801f2ea:	4288      	cmp	r0, r1
 801f2ec:	dd12      	ble.n	801f314 <_ZN8touchgfx8LCD16bpp17drawPartialBitmapERKNS_6BitmapEssRKNS_4RectEhb+0x174>
 801f2ee:	1a9b      	subs	r3, r3, r2
 801f2f0:	f9bd 0016 	ldrsh.w	r0, [sp, #22]
 801f2f4:	f9bd 6012 	ldrsh.w	r6, [sp, #18]
 801f2f8:	f8ad 1018 	strh.w	r1, [sp, #24]
 801f2fc:	f8ad 301c 	strh.w	r3, [sp, #28]
 801f300:	f8ad 001e 	strh.w	r0, [sp, #30]
 801f304:	23ff      	movs	r3, #255	; 0xff
 801f306:	4642      	mov	r2, r8
 801f308:	a902      	add	r1, sp, #8
 801f30a:	4628      	mov	r0, r5
 801f30c:	f8ad 601a 	strh.w	r6, [sp, #26]
 801f310:	f7ff f88e 	bl	801e430 <_ZN8touchgfx8LCD16bpp16blitCopyARGB8888EPKmRKNS_4RectES5_h>
 801f314:	88e2      	ldrh	r2, [r4, #6]
 801f316:	8863      	ldrh	r3, [r4, #2]
 801f318:	f8bd 1016 	ldrh.w	r1, [sp, #22]
 801f31c:	4413      	add	r3, r2
 801f31e:	f8bd 2012 	ldrh.w	r2, [sp, #18]
 801f322:	440a      	add	r2, r1
 801f324:	b29b      	uxth	r3, r3
 801f326:	b292      	uxth	r2, r2
 801f328:	b211      	sxth	r1, r2
 801f32a:	b218      	sxth	r0, r3
 801f32c:	4288      	cmp	r0, r1
 801f32e:	dd81      	ble.n	801f234 <_ZN8touchgfx8LCD16bpp17drawPartialBitmapERKNS_6BitmapEssRKNS_4RectEhb+0x94>
 801f330:	1a9b      	subs	r3, r3, r2
 801f332:	f9b4 6000 	ldrsh.w	r6, [r4]
 801f336:	f9b4 0004 	ldrsh.w	r0, [r4, #4]
 801f33a:	f8ad 301e 	strh.w	r3, [sp, #30]
 801f33e:	f8ad 6018 	strh.w	r6, [sp, #24]
 801f342:	f8ad 101a 	strh.w	r1, [sp, #26]
 801f346:	f8ad 001c 	strh.w	r0, [sp, #28]
 801f34a:	23ff      	movs	r3, #255	; 0xff
 801f34c:	4642      	mov	r2, r8
 801f34e:	e762      	b.n	801f216 <_ZN8touchgfx8LCD16bpp17drawPartialBitmapERKNS_6BitmapEssRKNS_4RectEhb+0x76>
 801f350:	4633      	mov	r3, r6
 801f352:	4622      	mov	r2, r4
 801f354:	a902      	add	r1, sp, #8
 801f356:	4628      	mov	r0, r5
 801f358:	f7ff f9c0 	bl	801e6dc <_ZN8touchgfx8LCD16bpp14blitCopyRGB888EPKhRKNS_4RectES5_h>
 801f35c:	e76a      	b.n	801f234 <_ZN8touchgfx8LCD16bpp17drawPartialBitmapERKNS_6BitmapEssRKNS_4RectEhb+0x94>
 801f35e:	e9cd 4600 	strd	r4, r6, [sp]
 801f362:	ab02      	add	r3, sp, #8
 801f364:	464a      	mov	r2, r9
 801f366:	4629      	mov	r1, r5
 801f368:	4650      	mov	r0, sl
 801f36a:	f7ff fd97 	bl	801ee9c <_ZN8touchgfx8LCD16bpp10blitCopyL8EPKhS2_RKNS_4RectES5_h>
 801f36e:	e761      	b.n	801f234 <_ZN8touchgfx8LCD16bpp17drawPartialBitmapERKNS_6BitmapEssRKNS_4RectEhb+0x94>
 801f370:	4638      	mov	r0, r7
 801f372:	f7fa fe31 	bl	8019fd8 <_ZNK8touchgfx6Bitmap20hasTransparentPixelsEv>
 801f376:	b950      	cbnz	r0, 801f38e <_ZN8touchgfx8LCD16bpp17drawPartialBitmapERKNS_6BitmapEssRKNS_4RectEhb+0x1ee>
 801f378:	e9cd 6000 	strd	r6, r0, [sp]
 801f37c:	f8da 3000 	ldr.w	r3, [sl]
 801f380:	aa02      	add	r2, sp, #8
 801f382:	68de      	ldr	r6, [r3, #12]
 801f384:	4629      	mov	r1, r5
 801f386:	4623      	mov	r3, r4
 801f388:	4650      	mov	r0, sl
 801f38a:	47b0      	blx	r6
 801f38c:	e752      	b.n	801f234 <_ZN8touchgfx8LCD16bpp17drawPartialBitmapERKNS_6BitmapEssRKNS_4RectEhb+0x94>
 801f38e:	f10d 0818 	add.w	r8, sp, #24
 801f392:	4639      	mov	r1, r7
 801f394:	4640      	mov	r0, r8
 801f396:	f7fa fdd3 	bl	8019f40 <_ZNK8touchgfx6Bitmap12getSolidRectEv>
 801f39a:	e898 0003 	ldmia.w	r8, {r0, r1}
 801f39e:	af04      	add	r7, sp, #16
 801f3a0:	e887 0003 	stmia.w	r7, {r0, r1}
 801f3a4:	4638      	mov	r0, r7
 801f3a6:	4621      	mov	r1, r4
 801f3a8:	f7f1 f9c0 	bl	801072c <_ZN8touchgfx4RectaNERKS0_>
 801f3ac:	4638      	mov	r0, r7
 801f3ae:	f7f1 fa00 	bl	80107b2 <_ZNK8touchgfx4Rect7isEmptyEv>
 801f3b2:	b138      	cbz	r0, 801f3c4 <_ZN8touchgfx8LCD16bpp17drawPartialBitmapERKNS_6BitmapEssRKNS_4RectEhb+0x224>
 801f3b4:	9600      	str	r6, [sp, #0]
 801f3b6:	4623      	mov	r3, r4
 801f3b8:	aa02      	add	r2, sp, #8
 801f3ba:	4649      	mov	r1, r9
 801f3bc:	4628      	mov	r0, r5
 801f3be:	f7ff fdc9 	bl	801ef54 <_ZN8touchgfx8LCD16bpp21blitCopyAlphaPerPixelEPKtPKhRKNS_4RectES7_h>
 801f3c2:	e737      	b.n	801f234 <_ZN8touchgfx8LCD16bpp17drawPartialBitmapERKNS_6BitmapEssRKNS_4RectEhb+0x94>
 801f3c4:	e9cd 6000 	strd	r6, r0, [sp]
 801f3c8:	f8da 3000 	ldr.w	r3, [sl]
 801f3cc:	aa02      	add	r2, sp, #8
 801f3ce:	f8d3 b00c 	ldr.w	fp, [r3, #12]
 801f3d2:	4629      	mov	r1, r5
 801f3d4:	463b      	mov	r3, r7
 801f3d6:	4650      	mov	r0, sl
 801f3d8:	47d8      	blx	fp
 801f3da:	f9bd 3012 	ldrsh.w	r3, [sp, #18]
 801f3de:	f9b4 2002 	ldrsh.w	r2, [r4, #2]
 801f3e2:	4293      	cmp	r3, r2
 801f3e4:	dd13      	ble.n	801f40e <_ZN8touchgfx8LCD16bpp17drawPartialBitmapERKNS_6BitmapEssRKNS_4RectEhb+0x26e>
 801f3e6:	f9b4 0000 	ldrsh.w	r0, [r4]
 801f3ea:	f9b4 1004 	ldrsh.w	r1, [r4, #4]
 801f3ee:	f8ad 0018 	strh.w	r0, [sp, #24]
 801f3f2:	1a9b      	subs	r3, r3, r2
 801f3f4:	f8ad 201a 	strh.w	r2, [sp, #26]
 801f3f8:	f8ad 101c 	strh.w	r1, [sp, #28]
 801f3fc:	f8ad 301e 	strh.w	r3, [sp, #30]
 801f400:	9600      	str	r6, [sp, #0]
 801f402:	4643      	mov	r3, r8
 801f404:	aa02      	add	r2, sp, #8
 801f406:	4649      	mov	r1, r9
 801f408:	4628      	mov	r0, r5
 801f40a:	f7ff fda3 	bl	801ef54 <_ZN8touchgfx8LCD16bpp21blitCopyAlphaPerPixelEPKtPKhRKNS_4RectES7_h>
 801f40e:	f9bd 3010 	ldrsh.w	r3, [sp, #16]
 801f412:	f9b4 2000 	ldrsh.w	r2, [r4]
 801f416:	4293      	cmp	r3, r2
 801f418:	dd13      	ble.n	801f442 <_ZN8touchgfx8LCD16bpp17drawPartialBitmapERKNS_6BitmapEssRKNS_4RectEhb+0x2a2>
 801f41a:	1a9b      	subs	r3, r3, r2
 801f41c:	f9bd 0012 	ldrsh.w	r0, [sp, #18]
 801f420:	f9bd 1016 	ldrsh.w	r1, [sp, #22]
 801f424:	f8ad 2018 	strh.w	r2, [sp, #24]
 801f428:	f8ad 001a 	strh.w	r0, [sp, #26]
 801f42c:	f8ad 301c 	strh.w	r3, [sp, #28]
 801f430:	f8ad 101e 	strh.w	r1, [sp, #30]
 801f434:	9600      	str	r6, [sp, #0]
 801f436:	4643      	mov	r3, r8
 801f438:	aa02      	add	r2, sp, #8
 801f43a:	4649      	mov	r1, r9
 801f43c:	4628      	mov	r0, r5
 801f43e:	f7ff fd89 	bl	801ef54 <_ZN8touchgfx8LCD16bpp21blitCopyAlphaPerPixelEPKtPKhRKNS_4RectES7_h>
 801f442:	88a2      	ldrh	r2, [r4, #4]
 801f444:	8823      	ldrh	r3, [r4, #0]
 801f446:	f8bd 1014 	ldrh.w	r1, [sp, #20]
 801f44a:	4413      	add	r3, r2
 801f44c:	f8bd 2010 	ldrh.w	r2, [sp, #16]
 801f450:	440a      	add	r2, r1
 801f452:	b29b      	uxth	r3, r3
 801f454:	b292      	uxth	r2, r2
 801f456:	b211      	sxth	r1, r2
 801f458:	b218      	sxth	r0, r3
 801f45a:	4288      	cmp	r0, r1
 801f45c:	dd13      	ble.n	801f486 <_ZN8touchgfx8LCD16bpp17drawPartialBitmapERKNS_6BitmapEssRKNS_4RectEhb+0x2e6>
 801f45e:	1a9b      	subs	r3, r3, r2
 801f460:	f9bd 0016 	ldrsh.w	r0, [sp, #22]
 801f464:	f9bd 7012 	ldrsh.w	r7, [sp, #18]
 801f468:	f8ad 1018 	strh.w	r1, [sp, #24]
 801f46c:	f8ad 301c 	strh.w	r3, [sp, #28]
 801f470:	f8ad 001e 	strh.w	r0, [sp, #30]
 801f474:	9600      	str	r6, [sp, #0]
 801f476:	4643      	mov	r3, r8
 801f478:	aa02      	add	r2, sp, #8
 801f47a:	4649      	mov	r1, r9
 801f47c:	4628      	mov	r0, r5
 801f47e:	f8ad 701a 	strh.w	r7, [sp, #26]
 801f482:	f7ff fd67 	bl	801ef54 <_ZN8touchgfx8LCD16bpp21blitCopyAlphaPerPixelEPKtPKhRKNS_4RectES7_h>
 801f486:	88e2      	ldrh	r2, [r4, #6]
 801f488:	8863      	ldrh	r3, [r4, #2]
 801f48a:	f8bd 1016 	ldrh.w	r1, [sp, #22]
 801f48e:	4413      	add	r3, r2
 801f490:	f8bd 2012 	ldrh.w	r2, [sp, #18]
 801f494:	440a      	add	r2, r1
 801f496:	b29b      	uxth	r3, r3
 801f498:	b292      	uxth	r2, r2
 801f49a:	b211      	sxth	r1, r2
 801f49c:	b218      	sxth	r0, r3
 801f49e:	4288      	cmp	r0, r1
 801f4a0:	f77f aec8 	ble.w	801f234 <_ZN8touchgfx8LCD16bpp17drawPartialBitmapERKNS_6BitmapEssRKNS_4RectEhb+0x94>
 801f4a4:	f9b4 7000 	ldrsh.w	r7, [r4]
 801f4a8:	f9b4 0004 	ldrsh.w	r0, [r4, #4]
 801f4ac:	f8ad 7018 	strh.w	r7, [sp, #24]
 801f4b0:	1a9b      	subs	r3, r3, r2
 801f4b2:	f8ad 301e 	strh.w	r3, [sp, #30]
 801f4b6:	f8ad 101a 	strh.w	r1, [sp, #26]
 801f4ba:	f8ad 001c 	strh.w	r0, [sp, #28]
 801f4be:	9600      	str	r6, [sp, #0]
 801f4c0:	4643      	mov	r3, r8
 801f4c2:	e779      	b.n	801f3b8 <_ZN8touchgfx8LCD16bpp17drawPartialBitmapERKNS_6BitmapEssRKNS_4RectEhb+0x218>
 801f4c4:	2001381c 	.word	0x2001381c

0801f4c8 <_ZN8touchgfx8LCD16bpp9nextPixelEbNS_12TextRotationE>:
 801f4c8:	b180      	cbz	r0, 801f4ec <_ZN8touchgfx8LCD16bpp9nextPixelEbNS_12TextRotationE+0x24>
 801f4ca:	2903      	cmp	r1, #3
 801f4cc:	d81c      	bhi.n	801f508 <_ZN8touchgfx8LCD16bpp9nextPixelEbNS_12TextRotationE+0x40>
 801f4ce:	e8df f001 	tbb	[pc, r1]
 801f4d2:	1d02      	.short	0x1d02
 801f4d4:	1f08      	.short	0x1f08
 801f4d6:	4b10      	ldr	r3, [pc, #64]	; (801f518 <_ZN8touchgfx8LCD16bpp9nextPixelEbNS_12TextRotationE+0x50>)
 801f4d8:	8818      	ldrh	r0, [r3, #0]
 801f4da:	f3c0 000e 	ubfx	r0, r0, #0, #15
 801f4de:	4240      	negs	r0, r0
 801f4e0:	4770      	bx	lr
 801f4e2:	4b0d      	ldr	r3, [pc, #52]	; (801f518 <_ZN8touchgfx8LCD16bpp9nextPixelEbNS_12TextRotationE+0x50>)
 801f4e4:	8818      	ldrh	r0, [r3, #0]
 801f4e6:	f3c0 000e 	ubfx	r0, r0, #0, #15
 801f4ea:	4770      	bx	lr
 801f4ec:	2903      	cmp	r1, #3
 801f4ee:	d80b      	bhi.n	801f508 <_ZN8touchgfx8LCD16bpp9nextPixelEbNS_12TextRotationE+0x40>
 801f4f0:	a301      	add	r3, pc, #4	; (adr r3, 801f4f8 <_ZN8touchgfx8LCD16bpp9nextPixelEbNS_12TextRotationE+0x30>)
 801f4f2:	f853 f021 	ldr.w	pc, [r3, r1, lsl #2]
 801f4f6:	bf00      	nop
 801f4f8:	0801f50d 	.word	0x0801f50d
 801f4fc:	0801f4e3 	.word	0x0801f4e3
 801f500:	0801f511 	.word	0x0801f511
 801f504:	0801f4d7 	.word	0x0801f4d7
 801f508:	2000      	movs	r0, #0
 801f50a:	4770      	bx	lr
 801f50c:	2001      	movs	r0, #1
 801f50e:	4770      	bx	lr
 801f510:	f04f 30ff 	mov.w	r0, #4294967295
 801f514:	4770      	bx	lr
 801f516:	bf00      	nop
 801f518:	20013816 	.word	0x20013816

0801f51c <_ZN8touchgfx8LCD16bpp8nextLineEbNS_12TextRotationE>:
 801f51c:	b180      	cbz	r0, 801f540 <_ZN8touchgfx8LCD16bpp8nextLineEbNS_12TextRotationE+0x24>
 801f51e:	2903      	cmp	r1, #3
 801f520:	d81c      	bhi.n	801f55c <_ZN8touchgfx8LCD16bpp8nextLineEbNS_12TextRotationE+0x40>
 801f522:	e8df f001 	tbb	[pc, r1]
 801f526:	021d      	.short	0x021d
 801f528:	071f      	.short	0x071f
 801f52a:	4b10      	ldr	r3, [pc, #64]	; (801f56c <_ZN8touchgfx8LCD16bpp8nextLineEbNS_12TextRotationE+0x50>)
 801f52c:	8818      	ldrh	r0, [r3, #0]
 801f52e:	f3c0 000e 	ubfx	r0, r0, #0, #15
 801f532:	4770      	bx	lr
 801f534:	4b0d      	ldr	r3, [pc, #52]	; (801f56c <_ZN8touchgfx8LCD16bpp8nextLineEbNS_12TextRotationE+0x50>)
 801f536:	8818      	ldrh	r0, [r3, #0]
 801f538:	f3c0 000e 	ubfx	r0, r0, #0, #15
 801f53c:	4240      	negs	r0, r0
 801f53e:	4770      	bx	lr
 801f540:	2903      	cmp	r1, #3
 801f542:	d80b      	bhi.n	801f55c <_ZN8touchgfx8LCD16bpp8nextLineEbNS_12TextRotationE+0x40>
 801f544:	a301      	add	r3, pc, #4	; (adr r3, 801f54c <_ZN8touchgfx8LCD16bpp8nextLineEbNS_12TextRotationE+0x30>)
 801f546:	f853 f021 	ldr.w	pc, [r3, r1, lsl #2]
 801f54a:	bf00      	nop
 801f54c:	0801f52b 	.word	0x0801f52b
 801f550:	0801f565 	.word	0x0801f565
 801f554:	0801f535 	.word	0x0801f535
 801f558:	0801f561 	.word	0x0801f561
 801f55c:	2000      	movs	r0, #0
 801f55e:	4770      	bx	lr
 801f560:	2001      	movs	r0, #1
 801f562:	4770      	bx	lr
 801f564:	f04f 30ff 	mov.w	r0, #4294967295
 801f568:	4770      	bx	lr
 801f56a:	bf00      	nop
 801f56c:	20013816 	.word	0x20013816

0801f570 <_ZN8touchgfx8LCD16bpp9drawGlyphEPtNS_4RectEssttRKS2_PKNS_9GlyphNodeEPKhhNS_9colortypeEhhNS_12TextRotationE>:
 801f570:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 801f574:	b099      	sub	sp, #100	; 0x64
 801f576:	910b      	str	r1, [sp, #44]	; 0x2c
 801f578:	a914      	add	r1, sp, #80	; 0x50
 801f57a:	e881 000c 	stmia.w	r1, {r2, r3}
 801f57e:	e9dd 2126 	ldrd	r2, r1, [sp, #152]	; 0x98
 801f582:	f9bd 308c 	ldrsh.w	r3, [sp, #140]	; 0x8c
 801f586:	f891 900d 	ldrb.w	r9, [r1, #13]
 801f58a:	9309      	str	r3, [sp, #36]	; 0x24
 801f58c:	f89d 30a4 	ldrb.w	r3, [sp, #164]	; 0xa4
 801f590:	9310      	str	r3, [sp, #64]	; 0x40
 801f592:	ea4f 1749 	mov.w	r7, r9, lsl #5
 801f596:	f89d 30b0 	ldrb.w	r3, [sp, #176]	; 0xb0
 801f59a:	930c      	str	r3, [sp, #48]	; 0x30
 801f59c:	f407 7380 	and.w	r3, r7, #256	; 0x100
 801f5a0:	798f      	ldrb	r7, [r1, #6]
 801f5a2:	f9bd 4088 	ldrsh.w	r4, [sp, #136]	; 0x88
 801f5a6:	f8bd 5090 	ldrh.w	r5, [sp, #144]	; 0x90
 801f5aa:	f8bd 6094 	ldrh.w	r6, [sp, #148]	; 0x94
 801f5ae:	f89d 80ac 	ldrb.w	r8, [sp, #172]	; 0xac
 801f5b2:	f89d a0b4 	ldrb.w	sl, [sp, #180]	; 0xb4
 801f5b6:	431f      	orrs	r7, r3
 801f5b8:	f000 8195 	beq.w	801f8e6 <_ZN8touchgfx8LCD16bpp9drawGlyphEPtNS_4RectEssttRKS2_PKNS_9GlyphNodeEPKhhNS_9colortypeEhhNS_12TextRotationE+0x376>
 801f5bc:	ea4f 1909 	mov.w	r9, r9, lsl #4
 801f5c0:	f409 7380 	and.w	r3, r9, #256	; 0x100
 801f5c4:	f891 9007 	ldrb.w	r9, [r1, #7]
 801f5c8:	ea59 0903 	orrs.w	r9, r9, r3
 801f5cc:	f000 818b 	beq.w	801f8e6 <_ZN8touchgfx8LCD16bpp9drawGlyphEPtNS_4RectEssttRKS2_PKNS_9GlyphNodeEPKhhNS_9colortypeEhhNS_12TextRotationE+0x376>
 801f5d0:	f991 3009 	ldrsb.w	r3, [r1, #9]
 801f5d4:	b29b      	uxth	r3, r3
 801f5d6:	2d00      	cmp	r5, #0
 801f5d8:	f000 812e 	beq.w	801f838 <_ZN8touchgfx8LCD16bpp9drawGlyphEPtNS_4RectEssttRKS2_PKNS_9GlyphNodeEPKhhNS_9colortypeEhhNS_12TextRotationE+0x2c8>
 801f5dc:	1aed      	subs	r5, r5, r3
 801f5de:	b2ad      	uxth	r5, r5
 801f5e0:	042b      	lsls	r3, r5, #16
 801f5e2:	d502      	bpl.n	801f5ea <_ZN8touchgfx8LCD16bpp9drawGlyphEPtNS_4RectEssttRKS2_PKNS_9GlyphNodeEPKhhNS_9colortypeEhhNS_12TextRotationE+0x7a>
 801f5e4:	1b64      	subs	r4, r4, r5
 801f5e6:	b224      	sxth	r4, r4
 801f5e8:	2500      	movs	r5, #0
 801f5ea:	f9b2 1000 	ldrsh.w	r1, [r2]
 801f5ee:	f8cd 9028 	str.w	r9, [sp, #40]	; 0x28
 801f5f2:	428c      	cmp	r4, r1
 801f5f4:	b28b      	uxth	r3, r1
 801f5f6:	bfbf      	itttt	lt
 801f5f8:	18ed      	addlt	r5, r5, r3
 801f5fa:	1b2c      	sublt	r4, r5, r4
 801f5fc:	b2a5      	uxthlt	r5, r4
 801f5fe:	460c      	movlt	r4, r1
 801f600:	8891      	ldrh	r1, [r2, #4]
 801f602:	440b      	add	r3, r1
 801f604:	b21b      	sxth	r3, r3
 801f606:	930f      	str	r3, [sp, #60]	; 0x3c
 801f608:	88d3      	ldrh	r3, [r2, #6]
 801f60a:	8852      	ldrh	r2, [r2, #2]
 801f60c:	4413      	add	r3, r2
 801f60e:	b21b      	sxth	r3, r3
 801f610:	930d      	str	r3, [sp, #52]	; 0x34
 801f612:	4bbe      	ldr	r3, [pc, #760]	; (801f90c <_ZN8touchgfx8LCD16bpp9drawGlyphEPtNS_4RectEssttRKS2_PKNS_9GlyphNodeEPKhhNS_9colortypeEhhNS_12TextRotationE+0x39c>)
 801f614:	9a09      	ldr	r2, [sp, #36]	; 0x24
 801f616:	f893 b000 	ldrb.w	fp, [r3]
 801f61a:	f10b 3cff 	add.w	ip, fp, #4294967295
 801f61e:	f1dc 0300 	rsbs	r3, ip, #0
 801f622:	eb43 030c 	adc.w	r3, r3, ip
 801f626:	930e      	str	r3, [sp, #56]	; 0x38
 801f628:	4621      	mov	r1, r4
 801f62a:	4653      	mov	r3, sl
 801f62c:	a814      	add	r0, sp, #80	; 0x50
 801f62e:	f7f6 fc90 	bl	8015f52 <_ZN8touchgfx3LCD5realXERKNS_4RectEssNS_12TextRotationE>
 801f632:	4621      	mov	r1, r4
 801f634:	f8ad 005c 	strh.w	r0, [sp, #92]	; 0x5c
 801f638:	4653      	mov	r3, sl
 801f63a:	9a09      	ldr	r2, [sp, #36]	; 0x24
 801f63c:	a814      	add	r0, sp, #80	; 0x50
 801f63e:	f7f6 fca5 	bl	8015f8c <_ZN8touchgfx3LCD5realYERKNS_4RectEssNS_12TextRotationE>
 801f642:	a918      	add	r1, sp, #96	; 0x60
 801f644:	f821 0d02 	strh.w	r0, [r1, #-2]!
 801f648:	a817      	add	r0, sp, #92	; 0x5c
 801f64a:	f7f6 fdcb 	bl	80161e4 <_ZN8touchgfx21DisplayTransformation29transformDisplayToFrameBufferERsS1_>
 801f64e:	f1ba 0f00 	cmp.w	sl, #0
 801f652:	f040 80f4 	bne.w	801f83e <_ZN8touchgfx8LCD16bpp9drawGlyphEPtNS_4RectEssttRKS2_PKNS_9GlyphNodeEPKhhNS_9colortypeEhhNS_12TextRotationE+0x2ce>
 801f656:	f1bb 0f01 	cmp.w	fp, #1
 801f65a:	f040 80f8 	bne.w	801f84e <_ZN8touchgfx8LCD16bpp9drawGlyphEPtNS_4RectEssttRKS2_PKNS_9GlyphNodeEPKhhNS_9colortypeEhhNS_12TextRotationE+0x2de>
 801f65e:	9b10      	ldr	r3, [sp, #64]	; 0x40
 801f660:	2b00      	cmp	r3, #0
 801f662:	f040 8145 	bne.w	801f8f0 <_ZN8touchgfx8LCD16bpp9drawGlyphEPtNS_4RectEssttRKS2_PKNS_9GlyphNodeEPKhhNS_9colortypeEhhNS_12TextRotationE+0x380>
 801f666:	b2ba      	uxth	r2, r7
 801f668:	b905      	cbnz	r5, 801f66c <_ZN8touchgfx8LCD16bpp9drawGlyphEPtNS_4RectEssttRKS2_PKNS_9GlyphNodeEPKhhNS_9colortypeEhhNS_12TextRotationE+0xfc>
 801f66a:	b16e      	cbz	r6, 801f688 <_ZN8touchgfx8LCD16bpp9drawGlyphEPtNS_4RectEssttRKS2_PKNS_9GlyphNodeEPKhhNS_9colortypeEhhNS_12TextRotationE+0x118>
 801f66c:	fb06 5302 	mla	r3, r6, r2, r5
 801f670:	9828      	ldr	r0, [sp, #160]	; 0xa0
 801f672:	fb08 f303 	mul.w	r3, r8, r3
 801f676:	4631      	mov	r1, r6
 801f678:	f003 0607 	and.w	r6, r3, #7
 801f67c:	eb00 03d3 	add.w	r3, r0, r3, lsr #3
 801f680:	9328      	str	r3, [sp, #160]	; 0xa0
 801f682:	eba9 0301 	sub.w	r3, r9, r1
 801f686:	930a      	str	r3, [sp, #40]	; 0x28
 801f688:	4651      	mov	r1, sl
 801f68a:	980e      	ldr	r0, [sp, #56]	; 0x38
 801f68c:	f7ff ff1c 	bl	801f4c8 <_ZN8touchgfx8LCD16bpp9nextPixelEbNS_12TextRotationE>
 801f690:	4681      	mov	r9, r0
 801f692:	980e      	ldr	r0, [sp, #56]	; 0x38
 801f694:	f7ff ff42 	bl	801f51c <_ZN8touchgfx8LCD16bpp8nextLineEbNS_12TextRotationE>
 801f698:	9b0d      	ldr	r3, [sp, #52]	; 0x34
 801f69a:	9909      	ldr	r1, [sp, #36]	; 0x24
 801f69c:	eba3 0a01 	sub.w	sl, r3, r1
 801f6a0:	9b0a      	ldr	r3, [sp, #40]	; 0x28
 801f6a2:	459a      	cmp	sl, r3
 801f6a4:	bfa8      	it	ge
 801f6a6:	469a      	movge	sl, r3
 801f6a8:	f1ba 0f00 	cmp.w	sl, #0
 801f6ac:	4683      	mov	fp, r0
 801f6ae:	f340 811a 	ble.w	801f8e6 <_ZN8touchgfx8LCD16bpp9drawGlyphEPtNS_4RectEssttRKS2_PKNS_9GlyphNodeEPKhhNS_9colortypeEhhNS_12TextRotationE+0x376>
 801f6b2:	9b0f      	ldr	r3, [sp, #60]	; 0x3c
 801f6b4:	1b64      	subs	r4, r4, r5
 801f6b6:	1b1c      	subs	r4, r3, r4
 801f6b8:	42bc      	cmp	r4, r7
 801f6ba:	bfd4      	ite	le
 801f6bc:	ebc5 0504 	rsble	r5, r5, r4
 801f6c0:	ebc5 0507 	rsbgt	r5, r5, r7
 801f6c4:	2d00      	cmp	r5, #0
 801f6c6:	f340 810e 	ble.w	801f8e6 <_ZN8touchgfx8LCD16bpp9drawGlyphEPtNS_4RectEssttRKS2_PKNS_9GlyphNodeEPKhhNS_9colortypeEhhNS_12TextRotationE+0x376>
 801f6ca:	1b52      	subs	r2, r2, r5
 801f6cc:	fb08 f302 	mul.w	r3, r8, r2
 801f6d0:	930f      	str	r3, [sp, #60]	; 0x3c
 801f6d2:	9b0b      	ldr	r3, [sp, #44]	; 0x2c
 801f6d4:	2b00      	cmp	r3, #0
 801f6d6:	f040 8116 	bne.w	801f906 <_ZN8touchgfx8LCD16bpp9drawGlyphEPtNS_4RectEssttRKS2_PKNS_9GlyphNodeEPKhhNS_9colortypeEhhNS_12TextRotationE+0x396>
 801f6da:	4b8d      	ldr	r3, [pc, #564]	; (801f910 <_ZN8touchgfx8LCD16bpp9drawGlyphEPtNS_4RectEssttRKS2_PKNS_9GlyphNodeEPKhhNS_9colortypeEhhNS_12TextRotationE+0x3a0>)
 801f6dc:	6818      	ldr	r0, [r3, #0]
 801f6de:	6803      	ldr	r3, [r0, #0]
 801f6e0:	6a9b      	ldr	r3, [r3, #40]	; 0x28
 801f6e2:	4798      	blx	r3
 801f6e4:	2301      	movs	r3, #1
 801f6e6:	fa03 f308 	lsl.w	r3, r3, r8
 801f6ea:	4a8a      	ldr	r2, [pc, #552]	; (801f914 <_ZN8touchgfx8LCD16bpp9drawGlyphEPtNS_4RectEssttRKS2_PKNS_9GlyphNodeEPKhhNS_9colortypeEhhNS_12TextRotationE+0x3a4>)
 801f6ec:	3b01      	subs	r3, #1
 801f6ee:	b2db      	uxtb	r3, r3
 801f6f0:	8811      	ldrh	r1, [r2, #0]
 801f6f2:	930e      	str	r3, [sp, #56]	; 0x38
 801f6f4:	f9bd 205c 	ldrsh.w	r2, [sp, #92]	; 0x5c
 801f6f8:	f9bd 305e 	ldrsh.w	r3, [sp, #94]	; 0x5e
 801f6fc:	fb01 2303 	mla	r3, r1, r3, r2
 801f700:	eb00 0343 	add.w	r3, r0, r3, lsl #1
 801f704:	930a      	str	r3, [sp, #40]	; 0x28
 801f706:	9b2a      	ldr	r3, [sp, #168]	; 0xa8
 801f708:	f3c3 4307 	ubfx	r3, r3, #16, #8
 801f70c:	9313      	str	r3, [sp, #76]	; 0x4c
 801f70e:	9b2a      	ldr	r3, [sp, #168]	; 0xa8
 801f710:	0a19      	lsrs	r1, r3, #8
 801f712:	b2cb      	uxtb	r3, r1
 801f714:	9312      	str	r3, [sp, #72]	; 0x48
 801f716:	9b2a      	ldr	r3, [sp, #168]	; 0xa8
 801f718:	b2db      	uxtb	r3, r3
 801f71a:	9311      	str	r3, [sp, #68]	; 0x44
 801f71c:	9b2a      	ldr	r3, [sp, #168]	; 0xa8
 801f71e:	095a      	lsrs	r2, r3, #5
 801f720:	4b7d      	ldr	r3, [pc, #500]	; (801f918 <_ZN8touchgfx8LCD16bpp9drawGlyphEPtNS_4RectEssttRKS2_PKNS_9GlyphNodeEPKhhNS_9colortypeEhhNS_12TextRotationE+0x3a8>)
 801f722:	f402 62fc 	and.w	r2, r2, #2016	; 0x7e0
 801f726:	400b      	ands	r3, r1
 801f728:	4313      	orrs	r3, r2
 801f72a:	9a2a      	ldr	r2, [sp, #168]	; 0xa8
 801f72c:	f3c2 02c4 	ubfx	r2, r2, #3, #5
 801f730:	4313      	orrs	r3, r2
 801f732:	b29b      	uxth	r3, r3
 801f734:	9310      	str	r3, [sp, #64]	; 0x40
 801f736:	9b28      	ldr	r3, [sp, #160]	; 0xa0
 801f738:	781a      	ldrb	r2, [r3, #0]
 801f73a:	ea4f 0349 	mov.w	r3, r9, lsl #1
 801f73e:	4132      	asrs	r2, r6
 801f740:	fb05 b919 	mls	r9, r5, r9, fp
 801f744:	fb03 fb05 	mul.w	fp, r3, r5
 801f748:	b2d2      	uxtb	r2, r2
 801f74a:	930d      	str	r3, [sp, #52]	; 0x34
 801f74c:	eb0b 0b49 	add.w	fp, fp, r9, lsl #1
 801f750:	f11a 3aff 	adds.w	sl, sl, #4294967295
 801f754:	f0c0 80f5 	bcc.w	801f942 <_ZN8touchgfx8LCD16bpp9drawGlyphEPtNS_4RectEssttRKS2_PKNS_9GlyphNodeEPKhhNS_9colortypeEhhNS_12TextRotationE+0x3d2>
 801f758:	f8dd c028 	ldr.w	ip, [sp, #40]	; 0x28
 801f75c:	46ae      	mov	lr, r5
 801f75e:	f11e 3eff 	adds.w	lr, lr, #4294967295
 801f762:	f0c0 80dd 	bcc.w	801f920 <_ZN8touchgfx8LCD16bpp9drawGlyphEPtNS_4RectEssttRKS2_PKNS_9GlyphNodeEPKhhNS_9colortypeEhhNS_12TextRotationE+0x3b0>
 801f766:	9b0e      	ldr	r3, [sp, #56]	; 0x38
 801f768:	4013      	ands	r3, r2
 801f76a:	d055      	beq.n	801f818 <_ZN8touchgfx8LCD16bpp9drawGlyphEPtNS_4RectEssttRKS2_PKNS_9GlyphNodeEPKhhNS_9colortypeEhhNS_12TextRotationE+0x2a8>
 801f76c:	20ff      	movs	r0, #255	; 0xff
 801f76e:	990e      	ldr	r1, [sp, #56]	; 0x38
 801f770:	fb90 f1f1 	sdiv	r1, r0, r1
 801f774:	434b      	muls	r3, r1
 801f776:	2bfe      	cmp	r3, #254	; 0xfe
 801f778:	dd03      	ble.n	801f782 <_ZN8touchgfx8LCD16bpp9drawGlyphEPtNS_4RectEssttRKS2_PKNS_9GlyphNodeEPKhhNS_9colortypeEhhNS_12TextRotationE+0x212>
 801f77a:	990c      	ldr	r1, [sp, #48]	; 0x30
 801f77c:	4281      	cmp	r1, r0
 801f77e:	f000 80cd 	beq.w	801f91c <_ZN8touchgfx8LCD16bpp9drawGlyphEPtNS_4RectEssttRKS2_PKNS_9GlyphNodeEPKhhNS_9colortypeEhhNS_12TextRotationE+0x3ac>
 801f782:	990c      	ldr	r1, [sp, #48]	; 0x30
 801f784:	f8bc 4000 	ldrh.w	r4, [ip]
 801f788:	fb11 f303 	smulbb	r3, r1, r3
 801f78c:	b29b      	uxth	r3, r3
 801f78e:	1c59      	adds	r1, r3, #1
 801f790:	eb01 2313 	add.w	r3, r1, r3, lsr #8
 801f794:	f3c3 2307 	ubfx	r3, r3, #8, #8
 801f798:	b29f      	uxth	r7, r3
 801f79a:	43db      	mvns	r3, r3
 801f79c:	b2db      	uxtb	r3, r3
 801f79e:	9309      	str	r3, [sp, #36]	; 0x24
 801f7a0:	9b13      	ldr	r3, [sp, #76]	; 0x4c
 801f7a2:	1220      	asrs	r0, r4, #8
 801f7a4:	fb13 f907 	smulbb	r9, r3, r7
 801f7a8:	f000 00f8 	and.w	r0, r0, #248	; 0xf8
 801f7ac:	9b09      	ldr	r3, [sp, #36]	; 0x24
 801f7ae:	ea40 1050 	orr.w	r0, r0, r0, lsr #5
 801f7b2:	fb00 9003 	mla	r0, r0, r3, r9
 801f7b6:	9b12      	ldr	r3, [sp, #72]	; 0x48
 801f7b8:	10e1      	asrs	r1, r4, #3
 801f7ba:	fb13 f907 	smulbb	r9, r3, r7
 801f7be:	f001 01fc 	and.w	r1, r1, #252	; 0xfc
 801f7c2:	9b09      	ldr	r3, [sp, #36]	; 0x24
 801f7c4:	ea41 1191 	orr.w	r1, r1, r1, lsr #6
 801f7c8:	fb01 9103 	mla	r1, r1, r3, r9
 801f7cc:	9b11      	ldr	r3, [sp, #68]	; 0x44
 801f7ce:	00e4      	lsls	r4, r4, #3
 801f7d0:	fb13 f707 	smulbb	r7, r3, r7
 801f7d4:	b2e4      	uxtb	r4, r4
 801f7d6:	9b09      	ldr	r3, [sp, #36]	; 0x24
 801f7d8:	ea44 1454 	orr.w	r4, r4, r4, lsr #5
 801f7dc:	fb04 7403 	mla	r4, r4, r3, r7
 801f7e0:	b280      	uxth	r0, r0
 801f7e2:	b2a4      	uxth	r4, r4
 801f7e4:	1c43      	adds	r3, r0, #1
 801f7e6:	f104 0901 	add.w	r9, r4, #1
 801f7ea:	eb03 2010 	add.w	r0, r3, r0, lsr #8
 801f7ee:	eb09 2914 	add.w	r9, r9, r4, lsr #8
 801f7f2:	b289      	uxth	r1, r1
 801f7f4:	f3c9 29c4 	ubfx	r9, r9, #11, #5
 801f7f8:	f400 4078 	and.w	r0, r0, #63488	; 0xf800
 801f7fc:	ea49 0000 	orr.w	r0, r9, r0
 801f800:	f101 0901 	add.w	r9, r1, #1
 801f804:	eb09 2911 	add.w	r9, r9, r1, lsr #8
 801f808:	ea4f 1959 	mov.w	r9, r9, lsr #5
 801f80c:	f409 69fc 	and.w	r9, r9, #2016	; 0x7e0
 801f810:	ea40 0009 	orr.w	r0, r0, r9
 801f814:	f8ac 0000 	strh.w	r0, [ip]
 801f818:	4446      	add	r6, r8
 801f81a:	b2b6      	uxth	r6, r6
 801f81c:	2e07      	cmp	r6, #7
 801f81e:	bf81      	itttt	hi
 801f820:	9b28      	ldrhi	r3, [sp, #160]	; 0xa0
 801f822:	785a      	ldrbhi	r2, [r3, #1]
 801f824:	3301      	addhi	r3, #1
 801f826:	9328      	strhi	r3, [sp, #160]	; 0xa0
 801f828:	9b0d      	ldr	r3, [sp, #52]	; 0x34
 801f82a:	bf9a      	itte	ls
 801f82c:	fa42 f208 	asrls.w	r2, r2, r8
 801f830:	b2d2      	uxtbls	r2, r2
 801f832:	2600      	movhi	r6, #0
 801f834:	449c      	add	ip, r3
 801f836:	e792      	b.n	801f75e <_ZN8touchgfx8LCD16bpp9drawGlyphEPtNS_4RectEssttRKS2_PKNS_9GlyphNodeEPKhhNS_9colortypeEhhNS_12TextRotationE+0x1ee>
 801f838:	441c      	add	r4, r3
 801f83a:	b224      	sxth	r4, r4
 801f83c:	e6d5      	b.n	801f5ea <_ZN8touchgfx8LCD16bpp9drawGlyphEPtNS_4RectEssttRKS2_PKNS_9GlyphNodeEPKhhNS_9colortypeEhhNS_12TextRotationE+0x7a>
 801f83e:	f1ba 0f01 	cmp.w	sl, #1
 801f842:	f47f af0c 	bne.w	801f65e <_ZN8touchgfx8LCD16bpp9drawGlyphEPtNS_4RectEssttRKS2_PKNS_9GlyphNodeEPKhhNS_9colortypeEhhNS_12TextRotationE+0xee>
 801f846:	f1bb 0f01 	cmp.w	fp, #1
 801f84a:	f47f af08 	bne.w	801f65e <_ZN8touchgfx8LCD16bpp9drawGlyphEPtNS_4RectEssttRKS2_PKNS_9GlyphNodeEPKhhNS_9colortypeEhhNS_12TextRotationE+0xee>
 801f84e:	f8df b0c0 	ldr.w	fp, [pc, #192]	; 801f910 <_ZN8touchgfx8LCD16bpp9drawGlyphEPtNS_4RectEssttRKS2_PKNS_9GlyphNodeEPKhhNS_9colortypeEhhNS_12TextRotationE+0x3a0>
 801f852:	f8db 0000 	ldr.w	r0, [fp]
 801f856:	6803      	ldr	r3, [r0, #0]
 801f858:	6b9b      	ldr	r3, [r3, #56]	; 0x38
 801f85a:	4798      	blx	r3
 801f85c:	f410 7380 	ands.w	r3, r0, #256	; 0x100
 801f860:	465a      	mov	r2, fp
 801f862:	d006      	beq.n	801f872 <_ZN8touchgfx8LCD16bpp9drawGlyphEPtNS_4RectEssttRKS2_PKNS_9GlyphNodeEPKhhNS_9colortypeEhhNS_12TextRotationE+0x302>
 801f864:	f1b8 0f04 	cmp.w	r8, #4
 801f868:	d140      	bne.n	801f8ec <_ZN8touchgfx8LCD16bpp9drawGlyphEPtNS_4RectEssttRKS2_PKNS_9GlyphNodeEPKhhNS_9colortypeEhhNS_12TextRotationE+0x37c>
 801f86a:	9b10      	ldr	r3, [sp, #64]	; 0x40
 801f86c:	3300      	adds	r3, #0
 801f86e:	bf18      	it	ne
 801f870:	2301      	movne	r3, #1
 801f872:	0580      	lsls	r0, r0, #22
 801f874:	d56e      	bpl.n	801f954 <_ZN8touchgfx8LCD16bpp9drawGlyphEPtNS_4RectEssttRKS2_PKNS_9GlyphNodeEPKhhNS_9colortypeEhhNS_12TextRotationE+0x3e4>
 801f876:	f1b8 0f08 	cmp.w	r8, #8
 801f87a:	d16b      	bne.n	801f954 <_ZN8touchgfx8LCD16bpp9drawGlyphEPtNS_4RectEssttRKS2_PKNS_9GlyphNodeEPKhhNS_9colortypeEhhNS_12TextRotationE+0x3e4>
 801f87c:	2b00      	cmp	r3, #0
 801f87e:	bf0c      	ite	eq
 801f880:	f44f 7100 	moveq.w	r1, #512	; 0x200
 801f884:	f44f 7180 	movne.w	r1, #256	; 0x100
 801f888:	2d00      	cmp	r5, #0
 801f88a:	f47f aee8 	bne.w	801f65e <_ZN8touchgfx8LCD16bpp9drawGlyphEPtNS_4RectEssttRKS2_PKNS_9GlyphNodeEPKhhNS_9colortypeEhhNS_12TextRotationE+0xee>
 801f88e:	2e00      	cmp	r6, #0
 801f890:	f47f aee5 	bne.w	801f65e <_ZN8touchgfx8LCD16bpp9drawGlyphEPtNS_4RectEssttRKS2_PKNS_9GlyphNodeEPKhhNS_9colortypeEhhNS_12TextRotationE+0xee>
 801f894:	980f      	ldr	r0, [sp, #60]	; 0x3c
 801f896:	19e3      	adds	r3, r4, r7
 801f898:	4283      	cmp	r3, r0
 801f89a:	f73f aee0 	bgt.w	801f65e <_ZN8touchgfx8LCD16bpp9drawGlyphEPtNS_4RectEssttRKS2_PKNS_9GlyphNodeEPKhhNS_9colortypeEhhNS_12TextRotationE+0xee>
 801f89e:	9b09      	ldr	r3, [sp, #36]	; 0x24
 801f8a0:	980d      	ldr	r0, [sp, #52]	; 0x34
 801f8a2:	444b      	add	r3, r9
 801f8a4:	4283      	cmp	r3, r0
 801f8a6:	f73f aeda 	bgt.w	801f65e <_ZN8touchgfx8LCD16bpp9drawGlyphEPtNS_4RectEssttRKS2_PKNS_9GlyphNodeEPKhhNS_9colortypeEhhNS_12TextRotationE+0xee>
 801f8aa:	6810      	ldr	r0, [r2, #0]
 801f8ac:	f8bd 305e 	ldrh.w	r3, [sp, #94]	; 0x5e
 801f8b0:	6804      	ldr	r4, [r0, #0]
 801f8b2:	f8bd 205c 	ldrh.w	r2, [sp, #92]	; 0x5c
 801f8b6:	b2bf      	uxth	r7, r7
 801f8b8:	f1b8 0f08 	cmp.w	r8, #8
 801f8bc:	f04f 0500 	mov.w	r5, #0
 801f8c0:	bf18      	it	ne
 801f8c2:	3701      	addne	r7, #1
 801f8c4:	e9cd 1505 	strd	r1, r5, [sp, #20]
 801f8c8:	990c      	ldr	r1, [sp, #48]	; 0x30
 801f8ca:	9104      	str	r1, [sp, #16]
 801f8cc:	bf18      	it	ne
 801f8ce:	f027 0701 	bicne.w	r7, r7, #1
 801f8d2:	992a      	ldr	r1, [sp, #168]	; 0xa8
 801f8d4:	bf18      	it	ne
 801f8d6:	b2bf      	uxthne	r7, r7
 801f8d8:	e9cd 7102 	strd	r7, r1, [sp, #8]
 801f8dc:	e9cd 7900 	strd	r7, r9, [sp]
 801f8e0:	9928      	ldr	r1, [sp, #160]	; 0xa0
 801f8e2:	6d64      	ldr	r4, [r4, #84]	; 0x54
 801f8e4:	47a0      	blx	r4
 801f8e6:	b019      	add	sp, #100	; 0x64
 801f8e8:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
 801f8ec:	2300      	movs	r3, #0
 801f8ee:	e7c0      	b.n	801f872 <_ZN8touchgfx8LCD16bpp9drawGlyphEPtNS_4RectEssttRKS2_PKNS_9GlyphNodeEPKhhNS_9colortypeEhhNS_12TextRotationE+0x302>
 801f8f0:	2208      	movs	r2, #8
 801f8f2:	fb92 f3f8 	sdiv	r3, r2, r8
 801f8f6:	1e5a      	subs	r2, r3, #1
 801f8f8:	443a      	add	r2, r7
 801f8fa:	fb92 f2f3 	sdiv	r2, r2, r3
 801f8fe:	fb12 f203 	smulbb	r2, r2, r3
 801f902:	b292      	uxth	r2, r2
 801f904:	e6b0      	b.n	801f668 <_ZN8touchgfx8LCD16bpp9drawGlyphEPtNS_4RectEssttRKS2_PKNS_9GlyphNodeEPKhhNS_9colortypeEhhNS_12TextRotationE+0xf8>
 801f906:	980b      	ldr	r0, [sp, #44]	; 0x2c
 801f908:	e6ec      	b.n	801f6e4 <_ZN8touchgfx8LCD16bpp9drawGlyphEPtNS_4RectEssttRKS2_PKNS_9GlyphNodeEPKhhNS_9colortypeEhhNS_12TextRotationE+0x174>
 801f90a:	bf00      	nop
 801f90c:	20013814 	.word	0x20013814
 801f910:	2001381c 	.word	0x2001381c
 801f914:	20013816 	.word	0x20013816
 801f918:	00fff800 	.word	0x00fff800
 801f91c:	9810      	ldr	r0, [sp, #64]	; 0x40
 801f91e:	e779      	b.n	801f814 <_ZN8touchgfx8LCD16bpp9drawGlyphEPtNS_4RectEssttRKS2_PKNS_9GlyphNodeEPKhhNS_9colortypeEhhNS_12TextRotationE+0x2a4>
 801f920:	9b0f      	ldr	r3, [sp, #60]	; 0x3c
 801f922:	b153      	cbz	r3, 801f93a <_ZN8touchgfx8LCD16bpp9drawGlyphEPtNS_4RectEssttRKS2_PKNS_9GlyphNodeEPKhhNS_9colortypeEhhNS_12TextRotationE+0x3ca>
 801f924:	441e      	add	r6, r3
 801f926:	9b28      	ldr	r3, [sp, #160]	; 0xa0
 801f928:	b2b6      	uxth	r6, r6
 801f92a:	eb03 03d6 	add.w	r3, r3, r6, lsr #3
 801f92e:	f006 0607 	and.w	r6, r6, #7
 801f932:	781a      	ldrb	r2, [r3, #0]
 801f934:	9328      	str	r3, [sp, #160]	; 0xa0
 801f936:	4132      	asrs	r2, r6
 801f938:	b2d2      	uxtb	r2, r2
 801f93a:	9b0a      	ldr	r3, [sp, #40]	; 0x28
 801f93c:	445b      	add	r3, fp
 801f93e:	930a      	str	r3, [sp, #40]	; 0x28
 801f940:	e706      	b.n	801f750 <_ZN8touchgfx8LCD16bpp9drawGlyphEPtNS_4RectEssttRKS2_PKNS_9GlyphNodeEPKhhNS_9colortypeEhhNS_12TextRotationE+0x1e0>
 801f942:	9b0b      	ldr	r3, [sp, #44]	; 0x2c
 801f944:	2b00      	cmp	r3, #0
 801f946:	d1ce      	bne.n	801f8e6 <_ZN8touchgfx8LCD16bpp9drawGlyphEPtNS_4RectEssttRKS2_PKNS_9GlyphNodeEPKhhNS_9colortypeEhhNS_12TextRotationE+0x376>
 801f948:	4b05      	ldr	r3, [pc, #20]	; (801f960 <_ZN8touchgfx8LCD16bpp9drawGlyphEPtNS_4RectEssttRKS2_PKNS_9GlyphNodeEPKhhNS_9colortypeEhhNS_12TextRotationE+0x3f0>)
 801f94a:	6818      	ldr	r0, [r3, #0]
 801f94c:	6803      	ldr	r3, [r0, #0]
 801f94e:	6adb      	ldr	r3, [r3, #44]	; 0x2c
 801f950:	4798      	blx	r3
 801f952:	e7c8      	b.n	801f8e6 <_ZN8touchgfx8LCD16bpp9drawGlyphEPtNS_4RectEssttRKS2_PKNS_9GlyphNodeEPKhhNS_9colortypeEhhNS_12TextRotationE+0x376>
 801f954:	2b00      	cmp	r3, #0
 801f956:	f43f ae82 	beq.w	801f65e <_ZN8touchgfx8LCD16bpp9drawGlyphEPtNS_4RectEssttRKS2_PKNS_9GlyphNodeEPKhhNS_9colortypeEhhNS_12TextRotationE+0xee>
 801f95a:	f44f 7180 	mov.w	r1, #256	; 0x100
 801f95e:	e793      	b.n	801f888 <_ZN8touchgfx8LCD16bpp9drawGlyphEPtNS_4RectEssttRKS2_PKNS_9GlyphNodeEPKhhNS_9colortypeEhhNS_12TextRotationE+0x318>
 801f960:	2001381c 	.word	0x2001381c

0801f964 <_ZN8touchgfx8LCD16bpp50enableTextureMapperL8_RGB565_BilinearInterpolationEv>:
 801f964:	b538      	push	{r3, r4, r5, lr}
 801f966:	4c15      	ldr	r4, [pc, #84]	; (801f9bc <_ZN8touchgfx8LCD16bpp50enableTextureMapperL8_RGB565_BilinearInterpolationEv+0x58>)
 801f968:	7823      	ldrb	r3, [r4, #0]
 801f96a:	f3bf 8f5b 	dmb	ish
 801f96e:	07da      	lsls	r2, r3, #31
 801f970:	4605      	mov	r5, r0
 801f972:	d40b      	bmi.n	801f98c <_ZN8touchgfx8LCD16bpp50enableTextureMapperL8_RGB565_BilinearInterpolationEv+0x28>
 801f974:	4620      	mov	r0, r4
 801f976:	f00a fee2 	bl	802a73e <__cxa_guard_acquire>
 801f97a:	b138      	cbz	r0, 801f98c <_ZN8touchgfx8LCD16bpp50enableTextureMapperL8_RGB565_BilinearInterpolationEv+0x28>
 801f97c:	4620      	mov	r0, r4
 801f97e:	f00a feea 	bl	802a756 <__cxa_guard_release>
 801f982:	4a0f      	ldr	r2, [pc, #60]	; (801f9c0 <_ZN8touchgfx8LCD16bpp50enableTextureMapperL8_RGB565_BilinearInterpolationEv+0x5c>)
 801f984:	490f      	ldr	r1, [pc, #60]	; (801f9c4 <_ZN8touchgfx8LCD16bpp50enableTextureMapperL8_RGB565_BilinearInterpolationEv+0x60>)
 801f986:	4810      	ldr	r0, [pc, #64]	; (801f9c8 <_ZN8touchgfx8LCD16bpp50enableTextureMapperL8_RGB565_BilinearInterpolationEv+0x64>)
 801f988:	f00a fed2 	bl	802a730 <__aeabi_atexit>
 801f98c:	4c0f      	ldr	r4, [pc, #60]	; (801f9cc <_ZN8touchgfx8LCD16bpp50enableTextureMapperL8_RGB565_BilinearInterpolationEv+0x68>)
 801f98e:	7823      	ldrb	r3, [r4, #0]
 801f990:	f3bf 8f5b 	dmb	ish
 801f994:	07db      	lsls	r3, r3, #31
 801f996:	d40b      	bmi.n	801f9b0 <_ZN8touchgfx8LCD16bpp50enableTextureMapperL8_RGB565_BilinearInterpolationEv+0x4c>
 801f998:	4620      	mov	r0, r4
 801f99a:	f00a fed0 	bl	802a73e <__cxa_guard_acquire>
 801f99e:	b138      	cbz	r0, 801f9b0 <_ZN8touchgfx8LCD16bpp50enableTextureMapperL8_RGB565_BilinearInterpolationEv+0x4c>
 801f9a0:	4620      	mov	r0, r4
 801f9a2:	f00a fed8 	bl	802a756 <__cxa_guard_release>
 801f9a6:	4a06      	ldr	r2, [pc, #24]	; (801f9c0 <_ZN8touchgfx8LCD16bpp50enableTextureMapperL8_RGB565_BilinearInterpolationEv+0x5c>)
 801f9a8:	4909      	ldr	r1, [pc, #36]	; (801f9d0 <_ZN8touchgfx8LCD16bpp50enableTextureMapperL8_RGB565_BilinearInterpolationEv+0x6c>)
 801f9aa:	480a      	ldr	r0, [pc, #40]	; (801f9d4 <_ZN8touchgfx8LCD16bpp50enableTextureMapperL8_RGB565_BilinearInterpolationEv+0x70>)
 801f9ac:	f00a fec0 	bl	802a730 <__aeabi_atexit>
 801f9b0:	4b05      	ldr	r3, [pc, #20]	; (801f9c8 <_ZN8touchgfx8LCD16bpp50enableTextureMapperL8_RGB565_BilinearInterpolationEv+0x64>)
 801f9b2:	612b      	str	r3, [r5, #16]
 801f9b4:	4b07      	ldr	r3, [pc, #28]	; (801f9d4 <_ZN8touchgfx8LCD16bpp50enableTextureMapperL8_RGB565_BilinearInterpolationEv+0x70>)
 801f9b6:	616b      	str	r3, [r5, #20]
 801f9b8:	bd38      	pop	{r3, r4, r5, pc}
 801f9ba:	bf00      	nop
 801f9bc:	200138fc 	.word	0x200138fc
 801f9c0:	20000000 	.word	0x20000000
 801f9c4:	0801c767 	.word	0x0801c767
 801f9c8:	200000d4 	.word	0x200000d4
 801f9cc:	20013900 	.word	0x20013900
 801f9d0:	0801c765 	.word	0x0801c765
 801f9d4:	200000d8 	.word	0x200000d8

0801f9d8 <_ZN8touchgfx8LCD16bpp44enableTextureMapperL8_RGB565_NearestNeighborEv>:
 801f9d8:	b538      	push	{r3, r4, r5, lr}
 801f9da:	4c15      	ldr	r4, [pc, #84]	; (801fa30 <_ZN8touchgfx8LCD16bpp44enableTextureMapperL8_RGB565_NearestNeighborEv+0x58>)
 801f9dc:	7823      	ldrb	r3, [r4, #0]
 801f9de:	f3bf 8f5b 	dmb	ish
 801f9e2:	07da      	lsls	r2, r3, #31
 801f9e4:	4605      	mov	r5, r0
 801f9e6:	d40b      	bmi.n	801fa00 <_ZN8touchgfx8LCD16bpp44enableTextureMapperL8_RGB565_NearestNeighborEv+0x28>
 801f9e8:	4620      	mov	r0, r4
 801f9ea:	f00a fea8 	bl	802a73e <__cxa_guard_acquire>
 801f9ee:	b138      	cbz	r0, 801fa00 <_ZN8touchgfx8LCD16bpp44enableTextureMapperL8_RGB565_NearestNeighborEv+0x28>
 801f9f0:	4620      	mov	r0, r4
 801f9f2:	f00a feb0 	bl	802a756 <__cxa_guard_release>
 801f9f6:	4a0f      	ldr	r2, [pc, #60]	; (801fa34 <_ZN8touchgfx8LCD16bpp44enableTextureMapperL8_RGB565_NearestNeighborEv+0x5c>)
 801f9f8:	490f      	ldr	r1, [pc, #60]	; (801fa38 <_ZN8touchgfx8LCD16bpp44enableTextureMapperL8_RGB565_NearestNeighborEv+0x60>)
 801f9fa:	4810      	ldr	r0, [pc, #64]	; (801fa3c <_ZN8touchgfx8LCD16bpp44enableTextureMapperL8_RGB565_NearestNeighborEv+0x64>)
 801f9fc:	f00a fe98 	bl	802a730 <__aeabi_atexit>
 801fa00:	4c0f      	ldr	r4, [pc, #60]	; (801fa40 <_ZN8touchgfx8LCD16bpp44enableTextureMapperL8_RGB565_NearestNeighborEv+0x68>)
 801fa02:	7823      	ldrb	r3, [r4, #0]
 801fa04:	f3bf 8f5b 	dmb	ish
 801fa08:	07db      	lsls	r3, r3, #31
 801fa0a:	d40b      	bmi.n	801fa24 <_ZN8touchgfx8LCD16bpp44enableTextureMapperL8_RGB565_NearestNeighborEv+0x4c>
 801fa0c:	4620      	mov	r0, r4
 801fa0e:	f00a fe96 	bl	802a73e <__cxa_guard_acquire>
 801fa12:	b138      	cbz	r0, 801fa24 <_ZN8touchgfx8LCD16bpp44enableTextureMapperL8_RGB565_NearestNeighborEv+0x4c>
 801fa14:	4620      	mov	r0, r4
 801fa16:	f00a fe9e 	bl	802a756 <__cxa_guard_release>
 801fa1a:	4a06      	ldr	r2, [pc, #24]	; (801fa34 <_ZN8touchgfx8LCD16bpp44enableTextureMapperL8_RGB565_NearestNeighborEv+0x5c>)
 801fa1c:	4909      	ldr	r1, [pc, #36]	; (801fa44 <_ZN8touchgfx8LCD16bpp44enableTextureMapperL8_RGB565_NearestNeighborEv+0x6c>)
 801fa1e:	480a      	ldr	r0, [pc, #40]	; (801fa48 <_ZN8touchgfx8LCD16bpp44enableTextureMapperL8_RGB565_NearestNeighborEv+0x70>)
 801fa20:	f00a fe86 	bl	802a730 <__aeabi_atexit>
 801fa24:	4b05      	ldr	r3, [pc, #20]	; (801fa3c <_ZN8touchgfx8LCD16bpp44enableTextureMapperL8_RGB565_NearestNeighborEv+0x64>)
 801fa26:	60ab      	str	r3, [r5, #8]
 801fa28:	4b07      	ldr	r3, [pc, #28]	; (801fa48 <_ZN8touchgfx8LCD16bpp44enableTextureMapperL8_RGB565_NearestNeighborEv+0x70>)
 801fa2a:	60eb      	str	r3, [r5, #12]
 801fa2c:	bd38      	pop	{r3, r4, r5, pc}
 801fa2e:	bf00      	nop
 801fa30:	200138d4 	.word	0x200138d4
 801fa34:	20000000 	.word	0x20000000
 801fa38:	0801c76b 	.word	0x0801c76b
 801fa3c:	200000ac 	.word	0x200000ac
 801fa40:	200138d8 	.word	0x200138d8
 801fa44:	0801c769 	.word	0x0801c769
 801fa48:	200000b0 	.word	0x200000b0

0801fa4c <_ZN8touchgfx8LCD16bpp28enableTextureMapperL8_RGB565Ev>:
 801fa4c:	b510      	push	{r4, lr}
 801fa4e:	4604      	mov	r4, r0
 801fa50:	f7ff ff88 	bl	801f964 <_ZN8touchgfx8LCD16bpp50enableTextureMapperL8_RGB565_BilinearInterpolationEv>
 801fa54:	4620      	mov	r0, r4
 801fa56:	e8bd 4010 	ldmia.w	sp!, {r4, lr}
 801fa5a:	f7ff bfbd 	b.w	801f9d8 <_ZN8touchgfx8LCD16bpp44enableTextureMapperL8_RGB565_NearestNeighborEv>
	...

0801fa60 <_ZN8touchgfx8LCD16bpp50enableTextureMapperL8_RGB888_BilinearInterpolationEv>:
 801fa60:	b538      	push	{r3, r4, r5, lr}
 801fa62:	4c15      	ldr	r4, [pc, #84]	; (801fab8 <_ZN8touchgfx8LCD16bpp50enableTextureMapperL8_RGB888_BilinearInterpolationEv+0x58>)
 801fa64:	7823      	ldrb	r3, [r4, #0]
 801fa66:	f3bf 8f5b 	dmb	ish
 801fa6a:	07da      	lsls	r2, r3, #31
 801fa6c:	4605      	mov	r5, r0
 801fa6e:	d40b      	bmi.n	801fa88 <_ZN8touchgfx8LCD16bpp50enableTextureMapperL8_RGB888_BilinearInterpolationEv+0x28>
 801fa70:	4620      	mov	r0, r4
 801fa72:	f00a fe64 	bl	802a73e <__cxa_guard_acquire>
 801fa76:	b138      	cbz	r0, 801fa88 <_ZN8touchgfx8LCD16bpp50enableTextureMapperL8_RGB888_BilinearInterpolationEv+0x28>
 801fa78:	4620      	mov	r0, r4
 801fa7a:	f00a fe6c 	bl	802a756 <__cxa_guard_release>
 801fa7e:	4a0f      	ldr	r2, [pc, #60]	; (801fabc <_ZN8touchgfx8LCD16bpp50enableTextureMapperL8_RGB888_BilinearInterpolationEv+0x5c>)
 801fa80:	490f      	ldr	r1, [pc, #60]	; (801fac0 <_ZN8touchgfx8LCD16bpp50enableTextureMapperL8_RGB888_BilinearInterpolationEv+0x60>)
 801fa82:	4810      	ldr	r0, [pc, #64]	; (801fac4 <_ZN8touchgfx8LCD16bpp50enableTextureMapperL8_RGB888_BilinearInterpolationEv+0x64>)
 801fa84:	f00a fe54 	bl	802a730 <__aeabi_atexit>
 801fa88:	4c0f      	ldr	r4, [pc, #60]	; (801fac8 <_ZN8touchgfx8LCD16bpp50enableTextureMapperL8_RGB888_BilinearInterpolationEv+0x68>)
 801fa8a:	7823      	ldrb	r3, [r4, #0]
 801fa8c:	f3bf 8f5b 	dmb	ish
 801fa90:	07db      	lsls	r3, r3, #31
 801fa92:	d40b      	bmi.n	801faac <_ZN8touchgfx8LCD16bpp50enableTextureMapperL8_RGB888_BilinearInterpolationEv+0x4c>
 801fa94:	4620      	mov	r0, r4
 801fa96:	f00a fe52 	bl	802a73e <__cxa_guard_acquire>
 801fa9a:	b138      	cbz	r0, 801faac <_ZN8touchgfx8LCD16bpp50enableTextureMapperL8_RGB888_BilinearInterpolationEv+0x4c>
 801fa9c:	4620      	mov	r0, r4
 801fa9e:	f00a fe5a 	bl	802a756 <__cxa_guard_release>
 801faa2:	4a06      	ldr	r2, [pc, #24]	; (801fabc <_ZN8touchgfx8LCD16bpp50enableTextureMapperL8_RGB888_BilinearInterpolationEv+0x5c>)
 801faa4:	4909      	ldr	r1, [pc, #36]	; (801facc <_ZN8touchgfx8LCD16bpp50enableTextureMapperL8_RGB888_BilinearInterpolationEv+0x6c>)
 801faa6:	480a      	ldr	r0, [pc, #40]	; (801fad0 <_ZN8touchgfx8LCD16bpp50enableTextureMapperL8_RGB888_BilinearInterpolationEv+0x70>)
 801faa8:	f00a fe42 	bl	802a730 <__aeabi_atexit>
 801faac:	4b05      	ldr	r3, [pc, #20]	; (801fac4 <_ZN8touchgfx8LCD16bpp50enableTextureMapperL8_RGB888_BilinearInterpolationEv+0x64>)
 801faae:	622b      	str	r3, [r5, #32]
 801fab0:	4b07      	ldr	r3, [pc, #28]	; (801fad0 <_ZN8touchgfx8LCD16bpp50enableTextureMapperL8_RGB888_BilinearInterpolationEv+0x70>)
 801fab2:	626b      	str	r3, [r5, #36]	; 0x24
 801fab4:	bd38      	pop	{r3, r4, r5, pc}
 801fab6:	bf00      	nop
 801fab8:	20013904 	.word	0x20013904
 801fabc:	20000000 	.word	0x20000000
 801fac0:	0801c75f 	.word	0x0801c75f
 801fac4:	200000dc 	.word	0x200000dc
 801fac8:	20013908 	.word	0x20013908
 801facc:	0801c75d 	.word	0x0801c75d
 801fad0:	200000e0 	.word	0x200000e0

0801fad4 <_ZN8touchgfx8LCD16bpp44enableTextureMapperL8_RGB888_NearestNeighborEv>:
 801fad4:	b538      	push	{r3, r4, r5, lr}
 801fad6:	4c15      	ldr	r4, [pc, #84]	; (801fb2c <_ZN8touchgfx8LCD16bpp44enableTextureMapperL8_RGB888_NearestNeighborEv+0x58>)
 801fad8:	7823      	ldrb	r3, [r4, #0]
 801fada:	f3bf 8f5b 	dmb	ish
 801fade:	07da      	lsls	r2, r3, #31
 801fae0:	4605      	mov	r5, r0
 801fae2:	d40b      	bmi.n	801fafc <_ZN8touchgfx8LCD16bpp44enableTextureMapperL8_RGB888_NearestNeighborEv+0x28>
 801fae4:	4620      	mov	r0, r4
 801fae6:	f00a fe2a 	bl	802a73e <__cxa_guard_acquire>
 801faea:	b138      	cbz	r0, 801fafc <_ZN8touchgfx8LCD16bpp44enableTextureMapperL8_RGB888_NearestNeighborEv+0x28>
 801faec:	4620      	mov	r0, r4
 801faee:	f00a fe32 	bl	802a756 <__cxa_guard_release>
 801faf2:	4a0f      	ldr	r2, [pc, #60]	; (801fb30 <_ZN8touchgfx8LCD16bpp44enableTextureMapperL8_RGB888_NearestNeighborEv+0x5c>)
 801faf4:	490f      	ldr	r1, [pc, #60]	; (801fb34 <_ZN8touchgfx8LCD16bpp44enableTextureMapperL8_RGB888_NearestNeighborEv+0x60>)
 801faf6:	4810      	ldr	r0, [pc, #64]	; (801fb38 <_ZN8touchgfx8LCD16bpp44enableTextureMapperL8_RGB888_NearestNeighborEv+0x64>)
 801faf8:	f00a fe1a 	bl	802a730 <__aeabi_atexit>
 801fafc:	4c0f      	ldr	r4, [pc, #60]	; (801fb3c <_ZN8touchgfx8LCD16bpp44enableTextureMapperL8_RGB888_NearestNeighborEv+0x68>)
 801fafe:	7823      	ldrb	r3, [r4, #0]
 801fb00:	f3bf 8f5b 	dmb	ish
 801fb04:	07db      	lsls	r3, r3, #31
 801fb06:	d40b      	bmi.n	801fb20 <_ZN8touchgfx8LCD16bpp44enableTextureMapperL8_RGB888_NearestNeighborEv+0x4c>
 801fb08:	4620      	mov	r0, r4
 801fb0a:	f00a fe18 	bl	802a73e <__cxa_guard_acquire>
 801fb0e:	b138      	cbz	r0, 801fb20 <_ZN8touchgfx8LCD16bpp44enableTextureMapperL8_RGB888_NearestNeighborEv+0x4c>
 801fb10:	4620      	mov	r0, r4
 801fb12:	f00a fe20 	bl	802a756 <__cxa_guard_release>
 801fb16:	4a06      	ldr	r2, [pc, #24]	; (801fb30 <_ZN8touchgfx8LCD16bpp44enableTextureMapperL8_RGB888_NearestNeighborEv+0x5c>)
 801fb18:	4909      	ldr	r1, [pc, #36]	; (801fb40 <_ZN8touchgfx8LCD16bpp44enableTextureMapperL8_RGB888_NearestNeighborEv+0x6c>)
 801fb1a:	480a      	ldr	r0, [pc, #40]	; (801fb44 <_ZN8touchgfx8LCD16bpp44enableTextureMapperL8_RGB888_NearestNeighborEv+0x70>)
 801fb1c:	f00a fe08 	bl	802a730 <__aeabi_atexit>
 801fb20:	4b05      	ldr	r3, [pc, #20]	; (801fb38 <_ZN8touchgfx8LCD16bpp44enableTextureMapperL8_RGB888_NearestNeighborEv+0x64>)
 801fb22:	61ab      	str	r3, [r5, #24]
 801fb24:	4b07      	ldr	r3, [pc, #28]	; (801fb44 <_ZN8touchgfx8LCD16bpp44enableTextureMapperL8_RGB888_NearestNeighborEv+0x70>)
 801fb26:	61eb      	str	r3, [r5, #28]
 801fb28:	bd38      	pop	{r3, r4, r5, pc}
 801fb2a:	bf00      	nop
 801fb2c:	200138dc 	.word	0x200138dc
 801fb30:	20000000 	.word	0x20000000
 801fb34:	0801c763 	.word	0x0801c763
 801fb38:	200000b4 	.word	0x200000b4
 801fb3c:	200138e0 	.word	0x200138e0
 801fb40:	0801c761 	.word	0x0801c761
 801fb44:	200000b8 	.word	0x200000b8

0801fb48 <_ZN8touchgfx8LCD16bpp28enableTextureMapperL8_RGB888Ev>:
 801fb48:	b510      	push	{r4, lr}
 801fb4a:	4604      	mov	r4, r0
 801fb4c:	f7ff ff88 	bl	801fa60 <_ZN8touchgfx8LCD16bpp50enableTextureMapperL8_RGB888_BilinearInterpolationEv>
 801fb50:	4620      	mov	r0, r4
 801fb52:	e8bd 4010 	ldmia.w	sp!, {r4, lr}
 801fb56:	f7ff bfbd 	b.w	801fad4 <_ZN8touchgfx8LCD16bpp44enableTextureMapperL8_RGB888_NearestNeighborEv>
	...

0801fb5c <_ZN8touchgfx8LCD16bpp52enableTextureMapperL8_ARGB8888_BilinearInterpolationEv>:
 801fb5c:	b538      	push	{r3, r4, r5, lr}
 801fb5e:	4c15      	ldr	r4, [pc, #84]	; (801fbb4 <_ZN8touchgfx8LCD16bpp52enableTextureMapperL8_ARGB8888_BilinearInterpolationEv+0x58>)
 801fb60:	7823      	ldrb	r3, [r4, #0]
 801fb62:	f3bf 8f5b 	dmb	ish
 801fb66:	07da      	lsls	r2, r3, #31
 801fb68:	4605      	mov	r5, r0
 801fb6a:	d40b      	bmi.n	801fb84 <_ZN8touchgfx8LCD16bpp52enableTextureMapperL8_ARGB8888_BilinearInterpolationEv+0x28>
 801fb6c:	4620      	mov	r0, r4
 801fb6e:	f00a fde6 	bl	802a73e <__cxa_guard_acquire>
 801fb72:	b138      	cbz	r0, 801fb84 <_ZN8touchgfx8LCD16bpp52enableTextureMapperL8_ARGB8888_BilinearInterpolationEv+0x28>
 801fb74:	4620      	mov	r0, r4
 801fb76:	f00a fdee 	bl	802a756 <__cxa_guard_release>
 801fb7a:	4a0f      	ldr	r2, [pc, #60]	; (801fbb8 <_ZN8touchgfx8LCD16bpp52enableTextureMapperL8_ARGB8888_BilinearInterpolationEv+0x5c>)
 801fb7c:	490f      	ldr	r1, [pc, #60]	; (801fbbc <_ZN8touchgfx8LCD16bpp52enableTextureMapperL8_ARGB8888_BilinearInterpolationEv+0x60>)
 801fb7e:	4810      	ldr	r0, [pc, #64]	; (801fbc0 <_ZN8touchgfx8LCD16bpp52enableTextureMapperL8_ARGB8888_BilinearInterpolationEv+0x64>)
 801fb80:	f00a fdd6 	bl	802a730 <__aeabi_atexit>
 801fb84:	4c0f      	ldr	r4, [pc, #60]	; (801fbc4 <_ZN8touchgfx8LCD16bpp52enableTextureMapperL8_ARGB8888_BilinearInterpolationEv+0x68>)
 801fb86:	7823      	ldrb	r3, [r4, #0]
 801fb88:	f3bf 8f5b 	dmb	ish
 801fb8c:	07db      	lsls	r3, r3, #31
 801fb8e:	d40b      	bmi.n	801fba8 <_ZN8touchgfx8LCD16bpp52enableTextureMapperL8_ARGB8888_BilinearInterpolationEv+0x4c>
 801fb90:	4620      	mov	r0, r4
 801fb92:	f00a fdd4 	bl	802a73e <__cxa_guard_acquire>
 801fb96:	b138      	cbz	r0, 801fba8 <_ZN8touchgfx8LCD16bpp52enableTextureMapperL8_ARGB8888_BilinearInterpolationEv+0x4c>
 801fb98:	4620      	mov	r0, r4
 801fb9a:	f00a fddc 	bl	802a756 <__cxa_guard_release>
 801fb9e:	4a06      	ldr	r2, [pc, #24]	; (801fbb8 <_ZN8touchgfx8LCD16bpp52enableTextureMapperL8_ARGB8888_BilinearInterpolationEv+0x5c>)
 801fba0:	4909      	ldr	r1, [pc, #36]	; (801fbc8 <_ZN8touchgfx8LCD16bpp52enableTextureMapperL8_ARGB8888_BilinearInterpolationEv+0x6c>)
 801fba2:	480a      	ldr	r0, [pc, #40]	; (801fbcc <_ZN8touchgfx8LCD16bpp52enableTextureMapperL8_ARGB8888_BilinearInterpolationEv+0x70>)
 801fba4:	f00a fdc4 	bl	802a730 <__aeabi_atexit>
 801fba8:	4b05      	ldr	r3, [pc, #20]	; (801fbc0 <_ZN8touchgfx8LCD16bpp52enableTextureMapperL8_ARGB8888_BilinearInterpolationEv+0x64>)
 801fbaa:	632b      	str	r3, [r5, #48]	; 0x30
 801fbac:	4b07      	ldr	r3, [pc, #28]	; (801fbcc <_ZN8touchgfx8LCD16bpp52enableTextureMapperL8_ARGB8888_BilinearInterpolationEv+0x70>)
 801fbae:	636b      	str	r3, [r5, #52]	; 0x34
 801fbb0:	bd38      	pop	{r3, r4, r5, pc}
 801fbb2:	bf00      	nop
 801fbb4:	20013914 	.word	0x20013914
 801fbb8:	20000000 	.word	0x20000000
 801fbbc:	0801c757 	.word	0x0801c757
 801fbc0:	200000ec 	.word	0x200000ec
 801fbc4:	20013918 	.word	0x20013918
 801fbc8:	0801c755 	.word	0x0801c755
 801fbcc:	200000f0 	.word	0x200000f0

0801fbd0 <_ZN8touchgfx8LCD16bpp46enableTextureMapperL8_ARGB8888_NearestNeighborEv>:
 801fbd0:	b538      	push	{r3, r4, r5, lr}
 801fbd2:	4c15      	ldr	r4, [pc, #84]	; (801fc28 <_ZN8touchgfx8LCD16bpp46enableTextureMapperL8_ARGB8888_NearestNeighborEv+0x58>)
 801fbd4:	7823      	ldrb	r3, [r4, #0]
 801fbd6:	f3bf 8f5b 	dmb	ish
 801fbda:	07da      	lsls	r2, r3, #31
 801fbdc:	4605      	mov	r5, r0
 801fbde:	d40b      	bmi.n	801fbf8 <_ZN8touchgfx8LCD16bpp46enableTextureMapperL8_ARGB8888_NearestNeighborEv+0x28>
 801fbe0:	4620      	mov	r0, r4
 801fbe2:	f00a fdac 	bl	802a73e <__cxa_guard_acquire>
 801fbe6:	b138      	cbz	r0, 801fbf8 <_ZN8touchgfx8LCD16bpp46enableTextureMapperL8_ARGB8888_NearestNeighborEv+0x28>
 801fbe8:	4620      	mov	r0, r4
 801fbea:	f00a fdb4 	bl	802a756 <__cxa_guard_release>
 801fbee:	4a0f      	ldr	r2, [pc, #60]	; (801fc2c <_ZN8touchgfx8LCD16bpp46enableTextureMapperL8_ARGB8888_NearestNeighborEv+0x5c>)
 801fbf0:	490f      	ldr	r1, [pc, #60]	; (801fc30 <_ZN8touchgfx8LCD16bpp46enableTextureMapperL8_ARGB8888_NearestNeighborEv+0x60>)
 801fbf2:	4810      	ldr	r0, [pc, #64]	; (801fc34 <_ZN8touchgfx8LCD16bpp46enableTextureMapperL8_ARGB8888_NearestNeighborEv+0x64>)
 801fbf4:	f00a fd9c 	bl	802a730 <__aeabi_atexit>
 801fbf8:	4c0f      	ldr	r4, [pc, #60]	; (801fc38 <_ZN8touchgfx8LCD16bpp46enableTextureMapperL8_ARGB8888_NearestNeighborEv+0x68>)
 801fbfa:	7823      	ldrb	r3, [r4, #0]
 801fbfc:	f3bf 8f5b 	dmb	ish
 801fc00:	07db      	lsls	r3, r3, #31
 801fc02:	d40b      	bmi.n	801fc1c <_ZN8touchgfx8LCD16bpp46enableTextureMapperL8_ARGB8888_NearestNeighborEv+0x4c>
 801fc04:	4620      	mov	r0, r4
 801fc06:	f00a fd9a 	bl	802a73e <__cxa_guard_acquire>
 801fc0a:	b138      	cbz	r0, 801fc1c <_ZN8touchgfx8LCD16bpp46enableTextureMapperL8_ARGB8888_NearestNeighborEv+0x4c>
 801fc0c:	4620      	mov	r0, r4
 801fc0e:	f00a fda2 	bl	802a756 <__cxa_guard_release>
 801fc12:	4a06      	ldr	r2, [pc, #24]	; (801fc2c <_ZN8touchgfx8LCD16bpp46enableTextureMapperL8_ARGB8888_NearestNeighborEv+0x5c>)
 801fc14:	4909      	ldr	r1, [pc, #36]	; (801fc3c <_ZN8touchgfx8LCD16bpp46enableTextureMapperL8_ARGB8888_NearestNeighborEv+0x6c>)
 801fc16:	480a      	ldr	r0, [pc, #40]	; (801fc40 <_ZN8touchgfx8LCD16bpp46enableTextureMapperL8_ARGB8888_NearestNeighborEv+0x70>)
 801fc18:	f00a fd8a 	bl	802a730 <__aeabi_atexit>
 801fc1c:	4b05      	ldr	r3, [pc, #20]	; (801fc34 <_ZN8touchgfx8LCD16bpp46enableTextureMapperL8_ARGB8888_NearestNeighborEv+0x64>)
 801fc1e:	62ab      	str	r3, [r5, #40]	; 0x28
 801fc20:	4b07      	ldr	r3, [pc, #28]	; (801fc40 <_ZN8touchgfx8LCD16bpp46enableTextureMapperL8_ARGB8888_NearestNeighborEv+0x70>)
 801fc22:	62eb      	str	r3, [r5, #44]	; 0x2c
 801fc24:	bd38      	pop	{r3, r4, r5, pc}
 801fc26:	bf00      	nop
 801fc28:	200138e4 	.word	0x200138e4
 801fc2c:	20000000 	.word	0x20000000
 801fc30:	0801c75b 	.word	0x0801c75b
 801fc34:	200000bc 	.word	0x200000bc
 801fc38:	200138e8 	.word	0x200138e8
 801fc3c:	0801c759 	.word	0x0801c759
 801fc40:	200000c0 	.word	0x200000c0

0801fc44 <_ZN8touchgfx8LCD16bpp30enableTextureMapperL8_ARGB8888Ev>:
 801fc44:	b510      	push	{r4, lr}
 801fc46:	4604      	mov	r4, r0
 801fc48:	f7ff ff88 	bl	801fb5c <_ZN8touchgfx8LCD16bpp52enableTextureMapperL8_ARGB8888_BilinearInterpolationEv>
 801fc4c:	4620      	mov	r0, r4
 801fc4e:	e8bd 4010 	ldmia.w	sp!, {r4, lr}
 801fc52:	f7ff bfbd 	b.w	801fbd0 <_ZN8touchgfx8LCD16bpp46enableTextureMapperL8_ARGB8888_NearestNeighborEv>
	...

0801fc58 <_ZN8touchgfx8LCD16bpp54enableTextureMapperRGB565_Opaque_BilinearInterpolationEv>:
 801fc58:	b538      	push	{r3, r4, r5, lr}
 801fc5a:	4c15      	ldr	r4, [pc, #84]	; (801fcb0 <_ZN8touchgfx8LCD16bpp54enableTextureMapperRGB565_Opaque_BilinearInterpolationEv+0x58>)
 801fc5c:	7823      	ldrb	r3, [r4, #0]
 801fc5e:	f3bf 8f5b 	dmb	ish
 801fc62:	07da      	lsls	r2, r3, #31
 801fc64:	4605      	mov	r5, r0
 801fc66:	d40b      	bmi.n	801fc80 <_ZN8touchgfx8LCD16bpp54enableTextureMapperRGB565_Opaque_BilinearInterpolationEv+0x28>
 801fc68:	4620      	mov	r0, r4
 801fc6a:	f00a fd68 	bl	802a73e <__cxa_guard_acquire>
 801fc6e:	b138      	cbz	r0, 801fc80 <_ZN8touchgfx8LCD16bpp54enableTextureMapperRGB565_Opaque_BilinearInterpolationEv+0x28>
 801fc70:	4620      	mov	r0, r4
 801fc72:	f00a fd70 	bl	802a756 <__cxa_guard_release>
 801fc76:	4a0f      	ldr	r2, [pc, #60]	; (801fcb4 <_ZN8touchgfx8LCD16bpp54enableTextureMapperRGB565_Opaque_BilinearInterpolationEv+0x5c>)
 801fc78:	490f      	ldr	r1, [pc, #60]	; (801fcb8 <_ZN8touchgfx8LCD16bpp54enableTextureMapperRGB565_Opaque_BilinearInterpolationEv+0x60>)
 801fc7a:	4810      	ldr	r0, [pc, #64]	; (801fcbc <_ZN8touchgfx8LCD16bpp54enableTextureMapperRGB565_Opaque_BilinearInterpolationEv+0x64>)
 801fc7c:	f00a fd58 	bl	802a730 <__aeabi_atexit>
 801fc80:	4c0f      	ldr	r4, [pc, #60]	; (801fcc0 <_ZN8touchgfx8LCD16bpp54enableTextureMapperRGB565_Opaque_BilinearInterpolationEv+0x68>)
 801fc82:	7823      	ldrb	r3, [r4, #0]
 801fc84:	f3bf 8f5b 	dmb	ish
 801fc88:	07db      	lsls	r3, r3, #31
 801fc8a:	d40b      	bmi.n	801fca4 <_ZN8touchgfx8LCD16bpp54enableTextureMapperRGB565_Opaque_BilinearInterpolationEv+0x4c>
 801fc8c:	4620      	mov	r0, r4
 801fc8e:	f00a fd56 	bl	802a73e <__cxa_guard_acquire>
 801fc92:	b138      	cbz	r0, 801fca4 <_ZN8touchgfx8LCD16bpp54enableTextureMapperRGB565_Opaque_BilinearInterpolationEv+0x4c>
 801fc94:	4620      	mov	r0, r4
 801fc96:	f00a fd5e 	bl	802a756 <__cxa_guard_release>
 801fc9a:	4a06      	ldr	r2, [pc, #24]	; (801fcb4 <_ZN8touchgfx8LCD16bpp54enableTextureMapperRGB565_Opaque_BilinearInterpolationEv+0x5c>)
 801fc9c:	4909      	ldr	r1, [pc, #36]	; (801fcc4 <_ZN8touchgfx8LCD16bpp54enableTextureMapperRGB565_Opaque_BilinearInterpolationEv+0x6c>)
 801fc9e:	480a      	ldr	r0, [pc, #40]	; (801fcc8 <_ZN8touchgfx8LCD16bpp54enableTextureMapperRGB565_Opaque_BilinearInterpolationEv+0x70>)
 801fca0:	f00a fd46 	bl	802a730 <__aeabi_atexit>
 801fca4:	4b05      	ldr	r3, [pc, #20]	; (801fcbc <_ZN8touchgfx8LCD16bpp54enableTextureMapperRGB565_Opaque_BilinearInterpolationEv+0x64>)
 801fca6:	652b      	str	r3, [r5, #80]	; 0x50
 801fca8:	4b07      	ldr	r3, [pc, #28]	; (801fcc8 <_ZN8touchgfx8LCD16bpp54enableTextureMapperRGB565_Opaque_BilinearInterpolationEv+0x70>)
 801fcaa:	656b      	str	r3, [r5, #84]	; 0x54
 801fcac:	bd38      	pop	{r3, r4, r5, pc}
 801fcae:	bf00      	nop
 801fcb0:	2001391c 	.word	0x2001391c
 801fcb4:	20000000 	.word	0x20000000
 801fcb8:	0801c747 	.word	0x0801c747
 801fcbc:	200000f4 	.word	0x200000f4
 801fcc0:	20013920 	.word	0x20013920
 801fcc4:	0801c745 	.word	0x0801c745
 801fcc8:	200000f8 	.word	0x200000f8

0801fccc <_ZN8touchgfx8LCD16bpp57enableTextureMapperRGB565_NonOpaque_BilinearInterpolationEv>:
 801fccc:	b538      	push	{r3, r4, r5, lr}
 801fcce:	4c15      	ldr	r4, [pc, #84]	; (801fd24 <_ZN8touchgfx8LCD16bpp57enableTextureMapperRGB565_NonOpaque_BilinearInterpolationEv+0x58>)
 801fcd0:	7823      	ldrb	r3, [r4, #0]
 801fcd2:	f3bf 8f5b 	dmb	ish
 801fcd6:	07da      	lsls	r2, r3, #31
 801fcd8:	4605      	mov	r5, r0
 801fcda:	d40b      	bmi.n	801fcf4 <_ZN8touchgfx8LCD16bpp57enableTextureMapperRGB565_NonOpaque_BilinearInterpolationEv+0x28>
 801fcdc:	4620      	mov	r0, r4
 801fcde:	f00a fd2e 	bl	802a73e <__cxa_guard_acquire>
 801fce2:	b138      	cbz	r0, 801fcf4 <_ZN8touchgfx8LCD16bpp57enableTextureMapperRGB565_NonOpaque_BilinearInterpolationEv+0x28>
 801fce4:	4620      	mov	r0, r4
 801fce6:	f00a fd36 	bl	802a756 <__cxa_guard_release>
 801fcea:	4a0f      	ldr	r2, [pc, #60]	; (801fd28 <_ZN8touchgfx8LCD16bpp57enableTextureMapperRGB565_NonOpaque_BilinearInterpolationEv+0x5c>)
 801fcec:	490f      	ldr	r1, [pc, #60]	; (801fd2c <_ZN8touchgfx8LCD16bpp57enableTextureMapperRGB565_NonOpaque_BilinearInterpolationEv+0x60>)
 801fcee:	4810      	ldr	r0, [pc, #64]	; (801fd30 <_ZN8touchgfx8LCD16bpp57enableTextureMapperRGB565_NonOpaque_BilinearInterpolationEv+0x64>)
 801fcf0:	f00a fd1e 	bl	802a730 <__aeabi_atexit>
 801fcf4:	4c0f      	ldr	r4, [pc, #60]	; (801fd34 <_ZN8touchgfx8LCD16bpp57enableTextureMapperRGB565_NonOpaque_BilinearInterpolationEv+0x68>)
 801fcf6:	7823      	ldrb	r3, [r4, #0]
 801fcf8:	f3bf 8f5b 	dmb	ish
 801fcfc:	07db      	lsls	r3, r3, #31
 801fcfe:	d40b      	bmi.n	801fd18 <_ZN8touchgfx8LCD16bpp57enableTextureMapperRGB565_NonOpaque_BilinearInterpolationEv+0x4c>
 801fd00:	4620      	mov	r0, r4
 801fd02:	f00a fd1c 	bl	802a73e <__cxa_guard_acquire>
 801fd06:	b138      	cbz	r0, 801fd18 <_ZN8touchgfx8LCD16bpp57enableTextureMapperRGB565_NonOpaque_BilinearInterpolationEv+0x4c>
 801fd08:	4620      	mov	r0, r4
 801fd0a:	f00a fd24 	bl	802a756 <__cxa_guard_release>
 801fd0e:	4a06      	ldr	r2, [pc, #24]	; (801fd28 <_ZN8touchgfx8LCD16bpp57enableTextureMapperRGB565_NonOpaque_BilinearInterpolationEv+0x5c>)
 801fd10:	4909      	ldr	r1, [pc, #36]	; (801fd38 <_ZN8touchgfx8LCD16bpp57enableTextureMapperRGB565_NonOpaque_BilinearInterpolationEv+0x6c>)
 801fd12:	480a      	ldr	r0, [pc, #40]	; (801fd3c <_ZN8touchgfx8LCD16bpp57enableTextureMapperRGB565_NonOpaque_BilinearInterpolationEv+0x70>)
 801fd14:	f00a fd0c 	bl	802a730 <__aeabi_atexit>
 801fd18:	4b05      	ldr	r3, [pc, #20]	; (801fd30 <_ZN8touchgfx8LCD16bpp57enableTextureMapperRGB565_NonOpaque_BilinearInterpolationEv+0x64>)
 801fd1a:	64ab      	str	r3, [r5, #72]	; 0x48
 801fd1c:	4b07      	ldr	r3, [pc, #28]	; (801fd3c <_ZN8touchgfx8LCD16bpp57enableTextureMapperRGB565_NonOpaque_BilinearInterpolationEv+0x70>)
 801fd1e:	64eb      	str	r3, [r5, #76]	; 0x4c
 801fd20:	bd38      	pop	{r3, r4, r5, pc}
 801fd22:	bf00      	nop
 801fd24:	20013924 	.word	0x20013924
 801fd28:	20000000 	.word	0x20000000
 801fd2c:	0801c74b 	.word	0x0801c74b
 801fd30:	200000fc 	.word	0x200000fc
 801fd34:	20013928 	.word	0x20013928
 801fd38:	0801c749 	.word	0x0801c749
 801fd3c:	20000100 	.word	0x20000100

0801fd40 <_ZN8touchgfx8LCD16bpp48enableTextureMapperRGB565_Opaque_NearestNeighborEv>:
 801fd40:	b538      	push	{r3, r4, r5, lr}
 801fd42:	4c15      	ldr	r4, [pc, #84]	; (801fd98 <_ZN8touchgfx8LCD16bpp48enableTextureMapperRGB565_Opaque_NearestNeighborEv+0x58>)
 801fd44:	7823      	ldrb	r3, [r4, #0]
 801fd46:	f3bf 8f5b 	dmb	ish
 801fd4a:	07da      	lsls	r2, r3, #31
 801fd4c:	4605      	mov	r5, r0
 801fd4e:	d40b      	bmi.n	801fd68 <_ZN8touchgfx8LCD16bpp48enableTextureMapperRGB565_Opaque_NearestNeighborEv+0x28>
 801fd50:	4620      	mov	r0, r4
 801fd52:	f00a fcf4 	bl	802a73e <__cxa_guard_acquire>
 801fd56:	b138      	cbz	r0, 801fd68 <_ZN8touchgfx8LCD16bpp48enableTextureMapperRGB565_Opaque_NearestNeighborEv+0x28>
 801fd58:	4620      	mov	r0, r4
 801fd5a:	f00a fcfc 	bl	802a756 <__cxa_guard_release>
 801fd5e:	4a0f      	ldr	r2, [pc, #60]	; (801fd9c <_ZN8touchgfx8LCD16bpp48enableTextureMapperRGB565_Opaque_NearestNeighborEv+0x5c>)
 801fd60:	490f      	ldr	r1, [pc, #60]	; (801fda0 <_ZN8touchgfx8LCD16bpp48enableTextureMapperRGB565_Opaque_NearestNeighborEv+0x60>)
 801fd62:	4810      	ldr	r0, [pc, #64]	; (801fda4 <_ZN8touchgfx8LCD16bpp48enableTextureMapperRGB565_Opaque_NearestNeighborEv+0x64>)
 801fd64:	f00a fce4 	bl	802a730 <__aeabi_atexit>
 801fd68:	4c0f      	ldr	r4, [pc, #60]	; (801fda8 <_ZN8touchgfx8LCD16bpp48enableTextureMapperRGB565_Opaque_NearestNeighborEv+0x68>)
 801fd6a:	7823      	ldrb	r3, [r4, #0]
 801fd6c:	f3bf 8f5b 	dmb	ish
 801fd70:	07db      	lsls	r3, r3, #31
 801fd72:	d40b      	bmi.n	801fd8c <_ZN8touchgfx8LCD16bpp48enableTextureMapperRGB565_Opaque_NearestNeighborEv+0x4c>
 801fd74:	4620      	mov	r0, r4
 801fd76:	f00a fce2 	bl	802a73e <__cxa_guard_acquire>
 801fd7a:	b138      	cbz	r0, 801fd8c <_ZN8touchgfx8LCD16bpp48enableTextureMapperRGB565_Opaque_NearestNeighborEv+0x4c>
 801fd7c:	4620      	mov	r0, r4
 801fd7e:	f00a fcea 	bl	802a756 <__cxa_guard_release>
 801fd82:	4a06      	ldr	r2, [pc, #24]	; (801fd9c <_ZN8touchgfx8LCD16bpp48enableTextureMapperRGB565_Opaque_NearestNeighborEv+0x5c>)
 801fd84:	4909      	ldr	r1, [pc, #36]	; (801fdac <_ZN8touchgfx8LCD16bpp48enableTextureMapperRGB565_Opaque_NearestNeighborEv+0x6c>)
 801fd86:	480a      	ldr	r0, [pc, #40]	; (801fdb0 <_ZN8touchgfx8LCD16bpp48enableTextureMapperRGB565_Opaque_NearestNeighborEv+0x70>)
 801fd88:	f00a fcd2 	bl	802a730 <__aeabi_atexit>
 801fd8c:	4b05      	ldr	r3, [pc, #20]	; (801fda4 <_ZN8touchgfx8LCD16bpp48enableTextureMapperRGB565_Opaque_NearestNeighborEv+0x64>)
 801fd8e:	642b      	str	r3, [r5, #64]	; 0x40
 801fd90:	4b07      	ldr	r3, [pc, #28]	; (801fdb0 <_ZN8touchgfx8LCD16bpp48enableTextureMapperRGB565_Opaque_NearestNeighborEv+0x70>)
 801fd92:	646b      	str	r3, [r5, #68]	; 0x44
 801fd94:	bd38      	pop	{r3, r4, r5, pc}
 801fd96:	bf00      	nop
 801fd98:	200138ec 	.word	0x200138ec
 801fd9c:	20000000 	.word	0x20000000
 801fda0:	0801c74f 	.word	0x0801c74f
 801fda4:	200000c4 	.word	0x200000c4
 801fda8:	200138f0 	.word	0x200138f0
 801fdac:	0801c74d 	.word	0x0801c74d
 801fdb0:	200000c8 	.word	0x200000c8

0801fdb4 <_ZN8touchgfx8LCD16bpp51enableTextureMapperRGB565_NonOpaque_NearestNeighborEv>:
 801fdb4:	b538      	push	{r3, r4, r5, lr}
 801fdb6:	4c15      	ldr	r4, [pc, #84]	; (801fe0c <_ZN8touchgfx8LCD16bpp51enableTextureMapperRGB565_NonOpaque_NearestNeighborEv+0x58>)
 801fdb8:	7823      	ldrb	r3, [r4, #0]
 801fdba:	f3bf 8f5b 	dmb	ish
 801fdbe:	07da      	lsls	r2, r3, #31
 801fdc0:	4605      	mov	r5, r0
 801fdc2:	d40b      	bmi.n	801fddc <_ZN8touchgfx8LCD16bpp51enableTextureMapperRGB565_NonOpaque_NearestNeighborEv+0x28>
 801fdc4:	4620      	mov	r0, r4
 801fdc6:	f00a fcba 	bl	802a73e <__cxa_guard_acquire>
 801fdca:	b138      	cbz	r0, 801fddc <_ZN8touchgfx8LCD16bpp51enableTextureMapperRGB565_NonOpaque_NearestNeighborEv+0x28>
 801fdcc:	4620      	mov	r0, r4
 801fdce:	f00a fcc2 	bl	802a756 <__cxa_guard_release>
 801fdd2:	4a0f      	ldr	r2, [pc, #60]	; (801fe10 <_ZN8touchgfx8LCD16bpp51enableTextureMapperRGB565_NonOpaque_NearestNeighborEv+0x5c>)
 801fdd4:	490f      	ldr	r1, [pc, #60]	; (801fe14 <_ZN8touchgfx8LCD16bpp51enableTextureMapperRGB565_NonOpaque_NearestNeighborEv+0x60>)
 801fdd6:	4810      	ldr	r0, [pc, #64]	; (801fe18 <_ZN8touchgfx8LCD16bpp51enableTextureMapperRGB565_NonOpaque_NearestNeighborEv+0x64>)
 801fdd8:	f00a fcaa 	bl	802a730 <__aeabi_atexit>
 801fddc:	4c0f      	ldr	r4, [pc, #60]	; (801fe1c <_ZN8touchgfx8LCD16bpp51enableTextureMapperRGB565_NonOpaque_NearestNeighborEv+0x68>)
 801fdde:	7823      	ldrb	r3, [r4, #0]
 801fde0:	f3bf 8f5b 	dmb	ish
 801fde4:	07db      	lsls	r3, r3, #31
 801fde6:	d40b      	bmi.n	801fe00 <_ZN8touchgfx8LCD16bpp51enableTextureMapperRGB565_NonOpaque_NearestNeighborEv+0x4c>
 801fde8:	4620      	mov	r0, r4
 801fdea:	f00a fca8 	bl	802a73e <__cxa_guard_acquire>
 801fdee:	b138      	cbz	r0, 801fe00 <_ZN8touchgfx8LCD16bpp51enableTextureMapperRGB565_NonOpaque_NearestNeighborEv+0x4c>
 801fdf0:	4620      	mov	r0, r4
 801fdf2:	f00a fcb0 	bl	802a756 <__cxa_guard_release>
 801fdf6:	4a06      	ldr	r2, [pc, #24]	; (801fe10 <_ZN8touchgfx8LCD16bpp51enableTextureMapperRGB565_NonOpaque_NearestNeighborEv+0x5c>)
 801fdf8:	4909      	ldr	r1, [pc, #36]	; (801fe20 <_ZN8touchgfx8LCD16bpp51enableTextureMapperRGB565_NonOpaque_NearestNeighborEv+0x6c>)
 801fdfa:	480a      	ldr	r0, [pc, #40]	; (801fe24 <_ZN8touchgfx8LCD16bpp51enableTextureMapperRGB565_NonOpaque_NearestNeighborEv+0x70>)
 801fdfc:	f00a fc98 	bl	802a730 <__aeabi_atexit>
 801fe00:	4b05      	ldr	r3, [pc, #20]	; (801fe18 <_ZN8touchgfx8LCD16bpp51enableTextureMapperRGB565_NonOpaque_NearestNeighborEv+0x64>)
 801fe02:	63ab      	str	r3, [r5, #56]	; 0x38
 801fe04:	4b07      	ldr	r3, [pc, #28]	; (801fe24 <_ZN8touchgfx8LCD16bpp51enableTextureMapperRGB565_NonOpaque_NearestNeighborEv+0x70>)
 801fe06:	63eb      	str	r3, [r5, #60]	; 0x3c
 801fe08:	bd38      	pop	{r3, r4, r5, pc}
 801fe0a:	bf00      	nop
 801fe0c:	2001390c 	.word	0x2001390c
 801fe10:	20000000 	.word	0x20000000
 801fe14:	0801c753 	.word	0x0801c753
 801fe18:	200000e4 	.word	0x200000e4
 801fe1c:	20013910 	.word	0x20013910
 801fe20:	0801c751 	.word	0x0801c751
 801fe24:	200000e8 	.word	0x200000e8

0801fe28 <_ZN8touchgfx8LCD16bpp25enableTextureMapperRGB565Ev>:
 801fe28:	b510      	push	{r4, lr}
 801fe2a:	4604      	mov	r4, r0
 801fe2c:	f7ff ff14 	bl	801fc58 <_ZN8touchgfx8LCD16bpp54enableTextureMapperRGB565_Opaque_BilinearInterpolationEv>
 801fe30:	4620      	mov	r0, r4
 801fe32:	f7ff ff85 	bl	801fd40 <_ZN8touchgfx8LCD16bpp48enableTextureMapperRGB565_Opaque_NearestNeighborEv>
 801fe36:	4620      	mov	r0, r4
 801fe38:	f7ff ff48 	bl	801fccc <_ZN8touchgfx8LCD16bpp57enableTextureMapperRGB565_NonOpaque_BilinearInterpolationEv>
 801fe3c:	4620      	mov	r0, r4
 801fe3e:	e8bd 4010 	ldmia.w	sp!, {r4, lr}
 801fe42:	f7ff bfb7 	b.w	801fdb4 <_ZN8touchgfx8LCD16bpp51enableTextureMapperRGB565_NonOpaque_NearestNeighborEv>
	...

0801fe48 <_ZN8touchgfx8LCD16bpp49enableTextureMapperARGB8888_BilinearInterpolationEv>:
 801fe48:	b538      	push	{r3, r4, r5, lr}
 801fe4a:	4c15      	ldr	r4, [pc, #84]	; (801fea0 <_ZN8touchgfx8LCD16bpp49enableTextureMapperARGB8888_BilinearInterpolationEv+0x58>)
 801fe4c:	7823      	ldrb	r3, [r4, #0]
 801fe4e:	f3bf 8f5b 	dmb	ish
 801fe52:	07da      	lsls	r2, r3, #31
 801fe54:	4605      	mov	r5, r0
 801fe56:	d40b      	bmi.n	801fe70 <_ZN8touchgfx8LCD16bpp49enableTextureMapperARGB8888_BilinearInterpolationEv+0x28>
 801fe58:	4620      	mov	r0, r4
 801fe5a:	f00a fc70 	bl	802a73e <__cxa_guard_acquire>
 801fe5e:	b138      	cbz	r0, 801fe70 <_ZN8touchgfx8LCD16bpp49enableTextureMapperARGB8888_BilinearInterpolationEv+0x28>
 801fe60:	4620      	mov	r0, r4
 801fe62:	f00a fc78 	bl	802a756 <__cxa_guard_release>
 801fe66:	4a0f      	ldr	r2, [pc, #60]	; (801fea4 <_ZN8touchgfx8LCD16bpp49enableTextureMapperARGB8888_BilinearInterpolationEv+0x5c>)
 801fe68:	490f      	ldr	r1, [pc, #60]	; (801fea8 <_ZN8touchgfx8LCD16bpp49enableTextureMapperARGB8888_BilinearInterpolationEv+0x60>)
 801fe6a:	4810      	ldr	r0, [pc, #64]	; (801feac <_ZN8touchgfx8LCD16bpp49enableTextureMapperARGB8888_BilinearInterpolationEv+0x64>)
 801fe6c:	f00a fc60 	bl	802a730 <__aeabi_atexit>
 801fe70:	4c0f      	ldr	r4, [pc, #60]	; (801feb0 <_ZN8touchgfx8LCD16bpp49enableTextureMapperARGB8888_BilinearInterpolationEv+0x68>)
 801fe72:	7823      	ldrb	r3, [r4, #0]
 801fe74:	f3bf 8f5b 	dmb	ish
 801fe78:	07db      	lsls	r3, r3, #31
 801fe7a:	d40b      	bmi.n	801fe94 <_ZN8touchgfx8LCD16bpp49enableTextureMapperARGB8888_BilinearInterpolationEv+0x4c>
 801fe7c:	4620      	mov	r0, r4
 801fe7e:	f00a fc5e 	bl	802a73e <__cxa_guard_acquire>
 801fe82:	b138      	cbz	r0, 801fe94 <_ZN8touchgfx8LCD16bpp49enableTextureMapperARGB8888_BilinearInterpolationEv+0x4c>
 801fe84:	4620      	mov	r0, r4
 801fe86:	f00a fc66 	bl	802a756 <__cxa_guard_release>
 801fe8a:	4a06      	ldr	r2, [pc, #24]	; (801fea4 <_ZN8touchgfx8LCD16bpp49enableTextureMapperARGB8888_BilinearInterpolationEv+0x5c>)
 801fe8c:	4909      	ldr	r1, [pc, #36]	; (801feb4 <_ZN8touchgfx8LCD16bpp49enableTextureMapperARGB8888_BilinearInterpolationEv+0x6c>)
 801fe8e:	480a      	ldr	r0, [pc, #40]	; (801feb8 <_ZN8touchgfx8LCD16bpp49enableTextureMapperARGB8888_BilinearInterpolationEv+0x70>)
 801fe90:	f00a fc4e 	bl	802a730 <__aeabi_atexit>
 801fe94:	4b05      	ldr	r3, [pc, #20]	; (801feac <_ZN8touchgfx8LCD16bpp49enableTextureMapperARGB8888_BilinearInterpolationEv+0x64>)
 801fe96:	662b      	str	r3, [r5, #96]	; 0x60
 801fe98:	4b07      	ldr	r3, [pc, #28]	; (801feb8 <_ZN8touchgfx8LCD16bpp49enableTextureMapperARGB8888_BilinearInterpolationEv+0x70>)
 801fe9a:	666b      	str	r3, [r5, #100]	; 0x64
 801fe9c:	bd38      	pop	{r3, r4, r5, pc}
 801fe9e:	bf00      	nop
 801fea0:	200138f4 	.word	0x200138f4
 801fea4:	20000000 	.word	0x20000000
 801fea8:	0801c73f 	.word	0x0801c73f
 801feac:	200000cc 	.word	0x200000cc
 801feb0:	200138f8 	.word	0x200138f8
 801feb4:	0801c73d 	.word	0x0801c73d
 801feb8:	200000d0 	.word	0x200000d0

0801febc <_ZN8touchgfx8LCD16bpp43enableTextureMapperARGB8888_NearestNeighborEv>:
 801febc:	b538      	push	{r3, r4, r5, lr}
 801febe:	4c15      	ldr	r4, [pc, #84]	; (801ff14 <_ZN8touchgfx8LCD16bpp43enableTextureMapperARGB8888_NearestNeighborEv+0x58>)
 801fec0:	7823      	ldrb	r3, [r4, #0]
 801fec2:	f3bf 8f5b 	dmb	ish
 801fec6:	07da      	lsls	r2, r3, #31
 801fec8:	4605      	mov	r5, r0
 801feca:	d40b      	bmi.n	801fee4 <_ZN8touchgfx8LCD16bpp43enableTextureMapperARGB8888_NearestNeighborEv+0x28>
 801fecc:	4620      	mov	r0, r4
 801fece:	f00a fc36 	bl	802a73e <__cxa_guard_acquire>
 801fed2:	b138      	cbz	r0, 801fee4 <_ZN8touchgfx8LCD16bpp43enableTextureMapperARGB8888_NearestNeighborEv+0x28>
 801fed4:	4620      	mov	r0, r4
 801fed6:	f00a fc3e 	bl	802a756 <__cxa_guard_release>
 801feda:	4a0f      	ldr	r2, [pc, #60]	; (801ff18 <_ZN8touchgfx8LCD16bpp43enableTextureMapperARGB8888_NearestNeighborEv+0x5c>)
 801fedc:	490f      	ldr	r1, [pc, #60]	; (801ff1c <_ZN8touchgfx8LCD16bpp43enableTextureMapperARGB8888_NearestNeighborEv+0x60>)
 801fede:	4810      	ldr	r0, [pc, #64]	; (801ff20 <_ZN8touchgfx8LCD16bpp43enableTextureMapperARGB8888_NearestNeighborEv+0x64>)
 801fee0:	f00a fc26 	bl	802a730 <__aeabi_atexit>
 801fee4:	4c0f      	ldr	r4, [pc, #60]	; (801ff24 <_ZN8touchgfx8LCD16bpp43enableTextureMapperARGB8888_NearestNeighborEv+0x68>)
 801fee6:	7823      	ldrb	r3, [r4, #0]
 801fee8:	f3bf 8f5b 	dmb	ish
 801feec:	07db      	lsls	r3, r3, #31
 801feee:	d40b      	bmi.n	801ff08 <_ZN8touchgfx8LCD16bpp43enableTextureMapperARGB8888_NearestNeighborEv+0x4c>
 801fef0:	4620      	mov	r0, r4
 801fef2:	f00a fc24 	bl	802a73e <__cxa_guard_acquire>
 801fef6:	b138      	cbz	r0, 801ff08 <_ZN8touchgfx8LCD16bpp43enableTextureMapperARGB8888_NearestNeighborEv+0x4c>
 801fef8:	4620      	mov	r0, r4
 801fefa:	f00a fc2c 	bl	802a756 <__cxa_guard_release>
 801fefe:	4a06      	ldr	r2, [pc, #24]	; (801ff18 <_ZN8touchgfx8LCD16bpp43enableTextureMapperARGB8888_NearestNeighborEv+0x5c>)
 801ff00:	4909      	ldr	r1, [pc, #36]	; (801ff28 <_ZN8touchgfx8LCD16bpp43enableTextureMapperARGB8888_NearestNeighborEv+0x6c>)
 801ff02:	480a      	ldr	r0, [pc, #40]	; (801ff2c <_ZN8touchgfx8LCD16bpp43enableTextureMapperARGB8888_NearestNeighborEv+0x70>)
 801ff04:	f00a fc14 	bl	802a730 <__aeabi_atexit>
 801ff08:	4b05      	ldr	r3, [pc, #20]	; (801ff20 <_ZN8touchgfx8LCD16bpp43enableTextureMapperARGB8888_NearestNeighborEv+0x64>)
 801ff0a:	65ab      	str	r3, [r5, #88]	; 0x58
 801ff0c:	4b07      	ldr	r3, [pc, #28]	; (801ff2c <_ZN8touchgfx8LCD16bpp43enableTextureMapperARGB8888_NearestNeighborEv+0x70>)
 801ff0e:	65eb      	str	r3, [r5, #92]	; 0x5c
 801ff10:	bd38      	pop	{r3, r4, r5, pc}
 801ff12:	bf00      	nop
 801ff14:	200138cc 	.word	0x200138cc
 801ff18:	20000000 	.word	0x20000000
 801ff1c:	0801c743 	.word	0x0801c743
 801ff20:	200000a4 	.word	0x200000a4
 801ff24:	200138d0 	.word	0x200138d0
 801ff28:	0801c741 	.word	0x0801c741
 801ff2c:	200000a8 	.word	0x200000a8

0801ff30 <_ZN8touchgfx8LCD16bpp27enableTextureMapperARGB8888Ev>:
 801ff30:	b510      	push	{r4, lr}
 801ff32:	4604      	mov	r4, r0
 801ff34:	f7ff ff88 	bl	801fe48 <_ZN8touchgfx8LCD16bpp49enableTextureMapperARGB8888_BilinearInterpolationEv>
 801ff38:	4620      	mov	r0, r4
 801ff3a:	e8bd 4010 	ldmia.w	sp!, {r4, lr}
 801ff3e:	f7ff bfbd 	b.w	801febc <_ZN8touchgfx8LCD16bpp43enableTextureMapperARGB8888_NearestNeighborEv>
	...

0801ff44 <_ZN8touchgfx8LCD16bpp43enableTextureMapperA4_BilinearInterpolationEv>:
 801ff44:	b538      	push	{r3, r4, r5, lr}
 801ff46:	4c15      	ldr	r4, [pc, #84]	; (801ff9c <_ZN8touchgfx8LCD16bpp43enableTextureMapperA4_BilinearInterpolationEv+0x58>)
 801ff48:	7823      	ldrb	r3, [r4, #0]
 801ff4a:	f3bf 8f5b 	dmb	ish
 801ff4e:	07da      	lsls	r2, r3, #31
 801ff50:	4605      	mov	r5, r0
 801ff52:	d40b      	bmi.n	801ff6c <_ZN8touchgfx8LCD16bpp43enableTextureMapperA4_BilinearInterpolationEv+0x28>
 801ff54:	4620      	mov	r0, r4
 801ff56:	f00a fbf2 	bl	802a73e <__cxa_guard_acquire>
 801ff5a:	b138      	cbz	r0, 801ff6c <_ZN8touchgfx8LCD16bpp43enableTextureMapperA4_BilinearInterpolationEv+0x28>
 801ff5c:	4620      	mov	r0, r4
 801ff5e:	f00a fbfa 	bl	802a756 <__cxa_guard_release>
 801ff62:	4a0f      	ldr	r2, [pc, #60]	; (801ffa0 <_ZN8touchgfx8LCD16bpp43enableTextureMapperA4_BilinearInterpolationEv+0x5c>)
 801ff64:	490f      	ldr	r1, [pc, #60]	; (801ffa4 <_ZN8touchgfx8LCD16bpp43enableTextureMapperA4_BilinearInterpolationEv+0x60>)
 801ff66:	4810      	ldr	r0, [pc, #64]	; (801ffa8 <_ZN8touchgfx8LCD16bpp43enableTextureMapperA4_BilinearInterpolationEv+0x64>)
 801ff68:	f00a fbe2 	bl	802a730 <__aeabi_atexit>
 801ff6c:	4c0f      	ldr	r4, [pc, #60]	; (801ffac <_ZN8touchgfx8LCD16bpp43enableTextureMapperA4_BilinearInterpolationEv+0x68>)
 801ff6e:	7823      	ldrb	r3, [r4, #0]
 801ff70:	f3bf 8f5b 	dmb	ish
 801ff74:	07db      	lsls	r3, r3, #31
 801ff76:	d40b      	bmi.n	801ff90 <_ZN8touchgfx8LCD16bpp43enableTextureMapperA4_BilinearInterpolationEv+0x4c>
 801ff78:	4620      	mov	r0, r4
 801ff7a:	f00a fbe0 	bl	802a73e <__cxa_guard_acquire>
 801ff7e:	b138      	cbz	r0, 801ff90 <_ZN8touchgfx8LCD16bpp43enableTextureMapperA4_BilinearInterpolationEv+0x4c>
 801ff80:	4620      	mov	r0, r4
 801ff82:	f00a fbe8 	bl	802a756 <__cxa_guard_release>
 801ff86:	4a06      	ldr	r2, [pc, #24]	; (801ffa0 <_ZN8touchgfx8LCD16bpp43enableTextureMapperA4_BilinearInterpolationEv+0x5c>)
 801ff88:	4909      	ldr	r1, [pc, #36]	; (801ffb0 <_ZN8touchgfx8LCD16bpp43enableTextureMapperA4_BilinearInterpolationEv+0x6c>)
 801ff8a:	480a      	ldr	r0, [pc, #40]	; (801ffb4 <_ZN8touchgfx8LCD16bpp43enableTextureMapperA4_BilinearInterpolationEv+0x70>)
 801ff8c:	f00a fbd0 	bl	802a730 <__aeabi_atexit>
 801ff90:	4b05      	ldr	r3, [pc, #20]	; (801ffa8 <_ZN8touchgfx8LCD16bpp43enableTextureMapperA4_BilinearInterpolationEv+0x64>)
 801ff92:	672b      	str	r3, [r5, #112]	; 0x70
 801ff94:	4b07      	ldr	r3, [pc, #28]	; (801ffb4 <_ZN8touchgfx8LCD16bpp43enableTextureMapperA4_BilinearInterpolationEv+0x70>)
 801ff96:	676b      	str	r3, [r5, #116]	; 0x74
 801ff98:	bd38      	pop	{r3, r4, r5, pc}
 801ff9a:	bf00      	nop
 801ff9c:	200138c4 	.word	0x200138c4
 801ffa0:	20000000 	.word	0x20000000
 801ffa4:	0801c737 	.word	0x0801c737
 801ffa8:	2000009c 	.word	0x2000009c
 801ffac:	200138c8 	.word	0x200138c8
 801ffb0:	0801c735 	.word	0x0801c735
 801ffb4:	200000a0 	.word	0x200000a0

0801ffb8 <_ZN8touchgfx8LCD16bpp37enableTextureMapperA4_NearestNeighborEv>:
 801ffb8:	b538      	push	{r3, r4, r5, lr}
 801ffba:	4c15      	ldr	r4, [pc, #84]	; (8020010 <_ZN8touchgfx8LCD16bpp37enableTextureMapperA4_NearestNeighborEv+0x58>)
 801ffbc:	7823      	ldrb	r3, [r4, #0]
 801ffbe:	f3bf 8f5b 	dmb	ish
 801ffc2:	07da      	lsls	r2, r3, #31
 801ffc4:	4605      	mov	r5, r0
 801ffc6:	d40b      	bmi.n	801ffe0 <_ZN8touchgfx8LCD16bpp37enableTextureMapperA4_NearestNeighborEv+0x28>
 801ffc8:	4620      	mov	r0, r4
 801ffca:	f00a fbb8 	bl	802a73e <__cxa_guard_acquire>
 801ffce:	b138      	cbz	r0, 801ffe0 <_ZN8touchgfx8LCD16bpp37enableTextureMapperA4_NearestNeighborEv+0x28>
 801ffd0:	4620      	mov	r0, r4
 801ffd2:	f00a fbc0 	bl	802a756 <__cxa_guard_release>
 801ffd6:	4a0f      	ldr	r2, [pc, #60]	; (8020014 <_ZN8touchgfx8LCD16bpp37enableTextureMapperA4_NearestNeighborEv+0x5c>)
 801ffd8:	490f      	ldr	r1, [pc, #60]	; (8020018 <_ZN8touchgfx8LCD16bpp37enableTextureMapperA4_NearestNeighborEv+0x60>)
 801ffda:	4810      	ldr	r0, [pc, #64]	; (802001c <_ZN8touchgfx8LCD16bpp37enableTextureMapperA4_NearestNeighborEv+0x64>)
 801ffdc:	f00a fba8 	bl	802a730 <__aeabi_atexit>
 801ffe0:	4c0f      	ldr	r4, [pc, #60]	; (8020020 <_ZN8touchgfx8LCD16bpp37enableTextureMapperA4_NearestNeighborEv+0x68>)
 801ffe2:	7823      	ldrb	r3, [r4, #0]
 801ffe4:	f3bf 8f5b 	dmb	ish
 801ffe8:	07db      	lsls	r3, r3, #31
 801ffea:	d40b      	bmi.n	8020004 <_ZN8touchgfx8LCD16bpp37enableTextureMapperA4_NearestNeighborEv+0x4c>
 801ffec:	4620      	mov	r0, r4
 801ffee:	f00a fba6 	bl	802a73e <__cxa_guard_acquire>
 801fff2:	b138      	cbz	r0, 8020004 <_ZN8touchgfx8LCD16bpp37enableTextureMapperA4_NearestNeighborEv+0x4c>
 801fff4:	4620      	mov	r0, r4
 801fff6:	f00a fbae 	bl	802a756 <__cxa_guard_release>
 801fffa:	4a06      	ldr	r2, [pc, #24]	; (8020014 <_ZN8touchgfx8LCD16bpp37enableTextureMapperA4_NearestNeighborEv+0x5c>)
 801fffc:	4909      	ldr	r1, [pc, #36]	; (8020024 <_ZN8touchgfx8LCD16bpp37enableTextureMapperA4_NearestNeighborEv+0x6c>)
 801fffe:	480a      	ldr	r0, [pc, #40]	; (8020028 <_ZN8touchgfx8LCD16bpp37enableTextureMapperA4_NearestNeighborEv+0x70>)
 8020000:	f00a fb96 	bl	802a730 <__aeabi_atexit>
 8020004:	4b05      	ldr	r3, [pc, #20]	; (802001c <_ZN8touchgfx8LCD16bpp37enableTextureMapperA4_NearestNeighborEv+0x64>)
 8020006:	66ab      	str	r3, [r5, #104]	; 0x68
 8020008:	4b07      	ldr	r3, [pc, #28]	; (8020028 <_ZN8touchgfx8LCD16bpp37enableTextureMapperA4_NearestNeighborEv+0x70>)
 802000a:	66eb      	str	r3, [r5, #108]	; 0x6c
 802000c:	bd38      	pop	{r3, r4, r5, pc}
 802000e:	bf00      	nop
 8020010:	200138bc 	.word	0x200138bc
 8020014:	20000000 	.word	0x20000000
 8020018:	0801c73b 	.word	0x0801c73b
 802001c:	20000094 	.word	0x20000094
 8020020:	200138c0 	.word	0x200138c0
 8020024:	0801c739 	.word	0x0801c739
 8020028:	20000098 	.word	0x20000098

0802002c <_ZN8touchgfx8LCD16bpp21enableTextureMapperA4Ev>:
 802002c:	b510      	push	{r4, lr}
 802002e:	4604      	mov	r4, r0
 8020030:	f7ff ff88 	bl	801ff44 <_ZN8touchgfx8LCD16bpp43enableTextureMapperA4_BilinearInterpolationEv>
 8020034:	4620      	mov	r0, r4
 8020036:	e8bd 4010 	ldmia.w	sp!, {r4, lr}
 802003a:	f7ff bfbd 	b.w	801ffb8 <_ZN8touchgfx8LCD16bpp37enableTextureMapperA4_NearestNeighborEv>

0802003e <_ZN8touchgfx8LCD16bpp22enableTextureMapperAllEv>:
 802003e:	b510      	push	{r4, lr}
 8020040:	4604      	mov	r4, r0
 8020042:	f7ff fff3 	bl	802002c <_ZN8touchgfx8LCD16bpp21enableTextureMapperA4Ev>
 8020046:	4620      	mov	r0, r4
 8020048:	f7ff ff72 	bl	801ff30 <_ZN8touchgfx8LCD16bpp27enableTextureMapperARGB8888Ev>
 802004c:	4620      	mov	r0, r4
 802004e:	f7ff fdf9 	bl	801fc44 <_ZN8touchgfx8LCD16bpp30enableTextureMapperL8_ARGB8888Ev>
 8020052:	4620      	mov	r0, r4
 8020054:	f7ff fcfa 	bl	801fa4c <_ZN8touchgfx8LCD16bpp28enableTextureMapperL8_RGB565Ev>
 8020058:	4620      	mov	r0, r4
 802005a:	f7ff fd75 	bl	801fb48 <_ZN8touchgfx8LCD16bpp28enableTextureMapperL8_RGB888Ev>
 802005e:	4620      	mov	r0, r4
 8020060:	e8bd 4010 	ldmia.w	sp!, {r4, lr}
 8020064:	f7ff bee0 	b.w	801fe28 <_ZN8touchgfx8LCD16bpp25enableTextureMapperRGB565Ev>

08020068 <_ZN8touchgfx8LCD16bpp23enableDecompressorL8_L4Ev>:
 8020068:	b538      	push	{r3, r4, r5, lr}
 802006a:	4c0b      	ldr	r4, [pc, #44]	; (8020098 <_ZN8touchgfx8LCD16bpp23enableDecompressorL8_L4Ev+0x30>)
 802006c:	7823      	ldrb	r3, [r4, #0]
 802006e:	f3bf 8f5b 	dmb	ish
 8020072:	07db      	lsls	r3, r3, #31
 8020074:	4605      	mov	r5, r0
 8020076:	d40b      	bmi.n	8020090 <_ZN8touchgfx8LCD16bpp23enableDecompressorL8_L4Ev+0x28>
 8020078:	4620      	mov	r0, r4
 802007a:	f00a fb60 	bl	802a73e <__cxa_guard_acquire>
 802007e:	b138      	cbz	r0, 8020090 <_ZN8touchgfx8LCD16bpp23enableDecompressorL8_L4Ev+0x28>
 8020080:	4620      	mov	r0, r4
 8020082:	f00a fb68 	bl	802a756 <__cxa_guard_release>
 8020086:	4a05      	ldr	r2, [pc, #20]	; (802009c <_ZN8touchgfx8LCD16bpp23enableDecompressorL8_L4Ev+0x34>)
 8020088:	4905      	ldr	r1, [pc, #20]	; (80200a0 <_ZN8touchgfx8LCD16bpp23enableDecompressorL8_L4Ev+0x38>)
 802008a:	4806      	ldr	r0, [pc, #24]	; (80200a4 <_ZN8touchgfx8LCD16bpp23enableDecompressorL8_L4Ev+0x3c>)
 802008c:	f00a fb50 	bl	802a730 <__aeabi_atexit>
 8020090:	4b04      	ldr	r3, [pc, #16]	; (80200a4 <_ZN8touchgfx8LCD16bpp23enableDecompressorL8_L4Ev+0x3c>)
 8020092:	67ab      	str	r3, [r5, #120]	; 0x78
 8020094:	bd38      	pop	{r3, r4, r5, pc}
 8020096:	bf00      	nop
 8020098:	200138b0 	.word	0x200138b0
 802009c:	20000000 	.word	0x20000000
 80200a0:	0801c733 	.word	0x0801c733
 80200a4:	2000008c 	.word	0x2000008c

080200a8 <_ZN8touchgfx8LCD16bpp24enableDecompressorL8_RLEEv>:
 80200a8:	b538      	push	{r3, r4, r5, lr}
 80200aa:	4c0b      	ldr	r4, [pc, #44]	; (80200d8 <_ZN8touchgfx8LCD16bpp24enableDecompressorL8_RLEEv+0x30>)
 80200ac:	7823      	ldrb	r3, [r4, #0]
 80200ae:	f3bf 8f5b 	dmb	ish
 80200b2:	07db      	lsls	r3, r3, #31
 80200b4:	4605      	mov	r5, r0
 80200b6:	d40b      	bmi.n	80200d0 <_ZN8touchgfx8LCD16bpp24enableDecompressorL8_RLEEv+0x28>
 80200b8:	4620      	mov	r0, r4
 80200ba:	f00a fb40 	bl	802a73e <__cxa_guard_acquire>
 80200be:	b138      	cbz	r0, 80200d0 <_ZN8touchgfx8LCD16bpp24enableDecompressorL8_RLEEv+0x28>
 80200c0:	4620      	mov	r0, r4
 80200c2:	f00a fb48 	bl	802a756 <__cxa_guard_release>
 80200c6:	4a05      	ldr	r2, [pc, #20]	; (80200dc <_ZN8touchgfx8LCD16bpp24enableDecompressorL8_RLEEv+0x34>)
 80200c8:	4905      	ldr	r1, [pc, #20]	; (80200e0 <_ZN8touchgfx8LCD16bpp24enableDecompressorL8_RLEEv+0x38>)
 80200ca:	4806      	ldr	r0, [pc, #24]	; (80200e4 <_ZN8touchgfx8LCD16bpp24enableDecompressorL8_RLEEv+0x3c>)
 80200cc:	f00a fb30 	bl	802a730 <__aeabi_atexit>
 80200d0:	4b04      	ldr	r3, [pc, #16]	; (80200e4 <_ZN8touchgfx8LCD16bpp24enableDecompressorL8_RLEEv+0x3c>)
 80200d2:	67eb      	str	r3, [r5, #124]	; 0x7c
 80200d4:	bd38      	pop	{r3, r4, r5, pc}
 80200d6:	bf00      	nop
 80200d8:	200138b4 	.word	0x200138b4
 80200dc:	20000000 	.word	0x20000000
 80200e0:	0801c731 	.word	0x0801c731
 80200e4:	20000090 	.word	0x20000090

080200e8 <_ZN8touchgfx8LCD16bpp25enableDecompressorL8_LZW9Ev>:
 80200e8:	b570      	push	{r4, r5, r6, lr}
 80200ea:	4d0d      	ldr	r5, [pc, #52]	; (8020120 <_ZN8touchgfx8LCD16bpp25enableDecompressorL8_LZW9Ev+0x38>)
 80200ec:	4c0d      	ldr	r4, [pc, #52]	; (8020124 <_ZN8touchgfx8LCD16bpp25enableDecompressorL8_LZW9Ev+0x3c>)
 80200ee:	782b      	ldrb	r3, [r5, #0]
 80200f0:	f3bf 8f5b 	dmb	ish
 80200f4:	f013 0f01 	tst.w	r3, #1
 80200f8:	4606      	mov	r6, r0
 80200fa:	d10d      	bne.n	8020118 <_ZN8touchgfx8LCD16bpp25enableDecompressorL8_LZW9Ev+0x30>
 80200fc:	4628      	mov	r0, r5
 80200fe:	f00a fb1e 	bl	802a73e <__cxa_guard_acquire>
 8020102:	b148      	cbz	r0, 8020118 <_ZN8touchgfx8LCD16bpp25enableDecompressorL8_LZW9Ev+0x30>
 8020104:	4b08      	ldr	r3, [pc, #32]	; (8020128 <_ZN8touchgfx8LCD16bpp25enableDecompressorL8_LZW9Ev+0x40>)
 8020106:	6023      	str	r3, [r4, #0]
 8020108:	4628      	mov	r0, r5
 802010a:	f00a fb24 	bl	802a756 <__cxa_guard_release>
 802010e:	4a07      	ldr	r2, [pc, #28]	; (802012c <_ZN8touchgfx8LCD16bpp25enableDecompressorL8_LZW9Ev+0x44>)
 8020110:	4907      	ldr	r1, [pc, #28]	; (8020130 <_ZN8touchgfx8LCD16bpp25enableDecompressorL8_LZW9Ev+0x48>)
 8020112:	4620      	mov	r0, r4
 8020114:	f00a fb0c 	bl	802a730 <__aeabi_atexit>
 8020118:	f8c6 4080 	str.w	r4, [r6, #128]	; 0x80
 802011c:	bd70      	pop	{r4, r5, r6, pc}
 802011e:	bf00      	nop
 8020120:	200138b8 	.word	0x200138b8
 8020124:	2001392c 	.word	0x2001392c
 8020128:	0802f944 	.word	0x0802f944
 802012c:	20000000 	.word	0x20000000
 8020130:	0801c72f 	.word	0x0801c72f

08020134 <_ZN8touchgfx8LCD16bpp24enableDecompressorL8_AllEv>:
 8020134:	b510      	push	{r4, lr}
 8020136:	4604      	mov	r4, r0
 8020138:	f7ff ff96 	bl	8020068 <_ZN8touchgfx8LCD16bpp23enableDecompressorL8_L4Ev>
 802013c:	4620      	mov	r0, r4
 802013e:	f7ff ffb3 	bl	80200a8 <_ZN8touchgfx8LCD16bpp24enableDecompressorL8_RLEEv>
 8020142:	4620      	mov	r0, r4
 8020144:	e8bd 4010 	ldmia.w	sp!, {r4, lr}
 8020148:	f7ff bfce 	b.w	80200e8 <_ZN8touchgfx8LCD16bpp25enableDecompressorL8_LZW9Ev>

0802014c <_ZNK8touchgfx8LCD16bpp55TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKhPKtssiihhh>:
 802014c:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 8020150:	e9dd 450b 	ldrd	r4, r5, [sp, #44]	; 0x2c
 8020154:	f9bd e024 	ldrsh.w	lr, [sp, #36]	; 0x24
 8020158:	f9bd b028 	ldrsh.w	fp, [sp, #40]	; 0x28
 802015c:	f89d 9034 	ldrb.w	r9, [sp, #52]	; 0x34
 8020160:	f89d 7038 	ldrb.w	r7, [sp, #56]	; 0x38
 8020164:	f89d 603c 	ldrb.w	r6, [sp, #60]	; 0x3c
 8020168:	8808      	ldrh	r0, [r1, #0]
 802016a:	fb05 4c0e 	mla	ip, r5, lr, r4
 802016e:	2d00      	cmp	r5, #0
 8020170:	eb02 0a0c 	add.w	sl, r2, ip
 8020174:	f2c0 80b0 	blt.w	80202d8 <_ZNK8touchgfx8LCD16bpp55TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKhPKtssiihhh+0x18c>
 8020178:	45ab      	cmp	fp, r5
 802017a:	f340 80ad 	ble.w	80202d8 <_ZNK8touchgfx8LCD16bpp55TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKhPKtssiihhh+0x18c>
 802017e:	2c00      	cmp	r4, #0
 8020180:	f2c0 80a8 	blt.w	80202d4 <_ZNK8touchgfx8LCD16bpp55TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKhPKtssiihhh+0x188>
 8020184:	45a6      	cmp	lr, r4
 8020186:	f340 80a5 	ble.w	80202d4 <_ZNK8touchgfx8LCD16bpp55TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKhPKtssiihhh+0x188>
 802018a:	f812 200c 	ldrb.w	r2, [r2, ip]
 802018e:	f833 8012 	ldrh.w	r8, [r3, r2, lsl #1]
 8020192:	1c62      	adds	r2, r4, #1
 8020194:	f100 80a3 	bmi.w	80202de <_ZNK8touchgfx8LCD16bpp55TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKhPKtssiihhh+0x192>
 8020198:	4596      	cmp	lr, r2
 802019a:	f340 80a0 	ble.w	80202de <_ZNK8touchgfx8LCD16bpp55TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKhPKtssiihhh+0x192>
 802019e:	f1b9 0f00 	cmp.w	r9, #0
 80201a2:	f000 809c 	beq.w	80202de <_ZNK8touchgfx8LCD16bpp55TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKhPKtssiihhh+0x192>
 80201a6:	f89a 2001 	ldrb.w	r2, [sl, #1]
 80201aa:	f833 c012 	ldrh.w	ip, [r3, r2, lsl #1]
 80201ae:	3501      	adds	r5, #1
 80201b0:	f100 8099 	bmi.w	80202e6 <_ZNK8touchgfx8LCD16bpp55TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKhPKtssiihhh+0x19a>
 80201b4:	45ab      	cmp	fp, r5
 80201b6:	f340 8096 	ble.w	80202e6 <_ZNK8touchgfx8LCD16bpp55TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKhPKtssiihhh+0x19a>
 80201ba:	2f00      	cmp	r7, #0
 80201bc:	f000 8093 	beq.w	80202e6 <_ZNK8touchgfx8LCD16bpp55TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKhPKtssiihhh+0x19a>
 80201c0:	2c00      	cmp	r4, #0
 80201c2:	f2c0 808e 	blt.w	80202e2 <_ZNK8touchgfx8LCD16bpp55TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKhPKtssiihhh+0x196>
 80201c6:	45a6      	cmp	lr, r4
 80201c8:	f340 808b 	ble.w	80202e2 <_ZNK8touchgfx8LCD16bpp55TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKhPKtssiihhh+0x196>
 80201cc:	f81a 200e 	ldrb.w	r2, [sl, lr]
 80201d0:	f833 5012 	ldrh.w	r5, [r3, r2, lsl #1]
 80201d4:	3401      	adds	r4, #1
 80201d6:	f100 8089 	bmi.w	80202ec <_ZNK8touchgfx8LCD16bpp55TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKhPKtssiihhh+0x1a0>
 80201da:	45a6      	cmp	lr, r4
 80201dc:	f340 8086 	ble.w	80202ec <_ZNK8touchgfx8LCD16bpp55TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKhPKtssiihhh+0x1a0>
 80201e0:	f1b9 0f00 	cmp.w	r9, #0
 80201e4:	f000 8082 	beq.w	80202ec <_ZNK8touchgfx8LCD16bpp55TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKhPKtssiihhh+0x1a0>
 80201e8:	44d6      	add	lr, sl
 80201ea:	f89e 2001 	ldrb.w	r2, [lr, #1]
 80201ee:	f833 3012 	ldrh.w	r3, [r3, r2, lsl #1]
 80201f2:	ea4f 4408 	mov.w	r4, r8, lsl #16
 80201f6:	f004 64fc 	and.w	r4, r4, #132120576	; 0x7e00000
 80201fa:	f428 68fc 	bic.w	r8, r8, #2016	; 0x7e0
 80201fe:	fb19 fe07 	smulbb	lr, r9, r7
 8020202:	ea44 0808 	orr.w	r8, r4, r8
 8020206:	ea4f 440c 	mov.w	r4, ip, lsl #16
 802020a:	f3ce 0ec7 	ubfx	lr, lr, #3, #8
 802020e:	f1c7 0210 	rsb	r2, r7, #16
 8020212:	f004 64fc 	and.w	r4, r4, #132120576	; 0x7e00000
 8020216:	f42c 6cfc 	bic.w	ip, ip, #2016	; 0x7e0
 802021a:	ea44 0c0c 	orr.w	ip, r4, ip
 802021e:	eba2 0209 	sub.w	r2, r2, r9
 8020222:	ebce 0449 	rsb	r4, lr, r9, lsl #1
 8020226:	eb0e 0242 	add.w	r2, lr, r2, lsl #1
 802022a:	fb04 f40c 	mul.w	r4, r4, ip
 802022e:	fb02 4808 	mla	r8, r2, r8, r4
 8020232:	041a      	lsls	r2, r3, #16
 8020234:	f002 62fc 	and.w	r2, r2, #132120576	; 0x7e00000
 8020238:	f423 63fc 	bic.w	r3, r3, #2016	; 0x7e0
 802023c:	4313      	orrs	r3, r2
 802023e:	042a      	lsls	r2, r5, #16
 8020240:	f002 62fc 	and.w	r2, r2, #132120576	; 0x7e00000
 8020244:	f425 65fc 	bic.w	r5, r5, #2016	; 0x7e0
 8020248:	fb0e 8303 	mla	r3, lr, r3, r8
 802024c:	432a      	orrs	r2, r5
 802024e:	ebce 0747 	rsb	r7, lr, r7, lsl #1
 8020252:	fb07 3202 	mla	r2, r7, r2, r3
 8020256:	0d53      	lsrs	r3, r2, #21
 8020258:	0952      	lsrs	r2, r2, #5
 802025a:	f403 63fc 	and.w	r3, r3, #2016	; 0x7e0
 802025e:	f422 62fc 	bic.w	r2, r2, #2016	; 0x7e0
 8020262:	431a      	orrs	r2, r3
 8020264:	b293      	uxth	r3, r2
 8020266:	b2b4      	uxth	r4, r6
 8020268:	1202      	asrs	r2, r0, #8
 802026a:	43f6      	mvns	r6, r6
 802026c:	b2f6      	uxtb	r6, r6
 802026e:	121d      	asrs	r5, r3, #8
 8020270:	f002 02f8 	and.w	r2, r2, #248	; 0xf8
 8020274:	fb12 f206 	smulbb	r2, r2, r6
 8020278:	10c7      	asrs	r7, r0, #3
 802027a:	f005 05f8 	and.w	r5, r5, #248	; 0xf8
 802027e:	00c0      	lsls	r0, r0, #3
 8020280:	fb05 2504 	mla	r5, r5, r4, r2
 8020284:	b2c0      	uxtb	r0, r0
 8020286:	10da      	asrs	r2, r3, #3
 8020288:	00db      	lsls	r3, r3, #3
 802028a:	b2db      	uxtb	r3, r3
 802028c:	f007 07fc 	and.w	r7, r7, #252	; 0xfc
 8020290:	fb10 f006 	smulbb	r0, r0, r6
 8020294:	b2ad      	uxth	r5, r5
 8020296:	fb03 0004 	mla	r0, r3, r4, r0
 802029a:	f002 02fc 	and.w	r2, r2, #252	; 0xfc
 802029e:	fb17 f706 	smulbb	r7, r7, r6
 80202a2:	b280      	uxth	r0, r0
 80202a4:	1c6b      	adds	r3, r5, #1
 80202a6:	fb02 7204 	mla	r2, r2, r4, r7
 80202aa:	b292      	uxth	r2, r2
 80202ac:	eb03 2515 	add.w	r5, r3, r5, lsr #8
 80202b0:	1c43      	adds	r3, r0, #1
 80202b2:	eb03 2310 	add.w	r3, r3, r0, lsr #8
 80202b6:	1c50      	adds	r0, r2, #1
 80202b8:	eb00 2212 	add.w	r2, r0, r2, lsr #8
 80202bc:	f405 4578 	and.w	r5, r5, #63488	; 0xf800
 80202c0:	f3c3 23c4 	ubfx	r3, r3, #11, #5
 80202c4:	0952      	lsrs	r2, r2, #5
 80202c6:	432b      	orrs	r3, r5
 80202c8:	f402 62fc 	and.w	r2, r2, #2016	; 0x7e0
 80202cc:	4313      	orrs	r3, r2
 80202ce:	800b      	strh	r3, [r1, #0]
 80202d0:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
 80202d4:	4680      	mov	r8, r0
 80202d6:	e75c      	b.n	8020192 <_ZNK8touchgfx8LCD16bpp55TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKhPKtssiihhh+0x46>
 80202d8:	4684      	mov	ip, r0
 80202da:	4680      	mov	r8, r0
 80202dc:	e767      	b.n	80201ae <_ZNK8touchgfx8LCD16bpp55TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKhPKtssiihhh+0x62>
 80202de:	4684      	mov	ip, r0
 80202e0:	e765      	b.n	80201ae <_ZNK8touchgfx8LCD16bpp55TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKhPKtssiihhh+0x62>
 80202e2:	4605      	mov	r5, r0
 80202e4:	e776      	b.n	80201d4 <_ZNK8touchgfx8LCD16bpp55TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKhPKtssiihhh+0x88>
 80202e6:	4603      	mov	r3, r0
 80202e8:	4605      	mov	r5, r0
 80202ea:	e782      	b.n	80201f2 <_ZNK8touchgfx8LCD16bpp55TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKhPKtssiihhh+0xa6>
 80202ec:	4603      	mov	r3, r0
 80202ee:	e780      	b.n	80201f2 <_ZNK8touchgfx8LCD16bpp55TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKhPKtssiihhh+0xa6>

080202f0 <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff>:
 80202f0:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 80202f4:	b099      	sub	sp, #100	; 0x64
 80202f6:	e9dd a523 	ldrd	sl, r5, [sp, #140]	; 0x8c
 80202fa:	9215      	str	r2, [sp, #84]	; 0x54
 80202fc:	9309      	str	r3, [sp, #36]	; 0x24
 80202fe:	9a27      	ldr	r2, [sp, #156]	; 0x9c
 8020300:	f89d 30ac 	ldrb.w	r3, [sp, #172]	; 0xac
 8020304:	930d      	str	r3, [sp, #52]	; 0x34
 8020306:	910c      	str	r1, [sp, #48]	; 0x30
 8020308:	e9dd 1328 	ldrd	r1, r3, [sp, #160]	; 0xa0
 802030c:	9016      	str	r0, [sp, #88]	; 0x58
 802030e:	6850      	ldr	r0, [r2, #4]
 8020310:	6812      	ldr	r2, [r2, #0]
 8020312:	fb00 1303 	mla	r3, r0, r3, r1
 8020316:	eb02 0843 	add.w	r8, r2, r3, lsl #1
 802031a:	9b2a      	ldr	r3, [sp, #168]	; 0xa8
 802031c:	681b      	ldr	r3, [r3, #0]
 802031e:	930b      	str	r3, [sp, #44]	; 0x2c
 8020320:	9b2a      	ldr	r3, [sp, #168]	; 0xa8
 8020322:	685e      	ldr	r6, [r3, #4]
 8020324:	9b0d      	ldr	r3, [sp, #52]	; 0x34
 8020326:	43db      	mvns	r3, r3
 8020328:	b2db      	uxtb	r3, r3
 802032a:	3604      	adds	r6, #4
 802032c:	930a      	str	r3, [sp, #40]	; 0x28
 802032e:	9b0c      	ldr	r3, [sp, #48]	; 0x30
 8020330:	2b00      	cmp	r3, #0
 8020332:	dc03      	bgt.n	802033c <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x4c>
 8020334:	9b15      	ldr	r3, [sp, #84]	; 0x54
 8020336:	2b00      	cmp	r3, #0
 8020338:	f340 8225 	ble.w	8020786 <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x496>
 802033c:	9b2a      	ldr	r3, [sp, #168]	; 0xa8
 802033e:	f9b3 1008 	ldrsh.w	r1, [r3, #8]
 8020342:	f9b3 200c 	ldrsh.w	r2, [r3, #12]
 8020346:	1e48      	subs	r0, r1, #1
 8020348:	1e57      	subs	r7, r2, #1
 802034a:	9b09      	ldr	r3, [sp, #36]	; 0x24
 802034c:	2b00      	cmp	r3, #0
 802034e:	f340 80e3 	ble.w	8020518 <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x228>
 8020352:	ea5f 4c2a 	movs.w	ip, sl, asr #16
 8020356:	ea4f 4325 	mov.w	r3, r5, asr #16
 802035a:	d406      	bmi.n	802036a <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x7a>
 802035c:	4584      	cmp	ip, r0
 802035e:	da04      	bge.n	802036a <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x7a>
 8020360:	2b00      	cmp	r3, #0
 8020362:	db02      	blt.n	802036a <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x7a>
 8020364:	42bb      	cmp	r3, r7
 8020366:	f2c0 80d8 	blt.w	802051a <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x22a>
 802036a:	f11c 0c01 	adds.w	ip, ip, #1
 802036e:	f100 80c9 	bmi.w	8020504 <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x214>
 8020372:	4561      	cmp	r1, ip
 8020374:	f2c0 80c6 	blt.w	8020504 <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x214>
 8020378:	3301      	adds	r3, #1
 802037a:	f100 80c3 	bmi.w	8020504 <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x214>
 802037e:	429a      	cmp	r2, r3
 8020380:	f2c0 80c0 	blt.w	8020504 <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x214>
 8020384:	f8dd b024 	ldr.w	fp, [sp, #36]	; 0x24
 8020388:	4647      	mov	r7, r8
 802038a:	f1bb 0f00 	cmp.w	fp, #0
 802038e:	f340 80e3 	ble.w	8020558 <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x268>
 8020392:	9a2a      	ldr	r2, [sp, #168]	; 0xa8
 8020394:	9b2a      	ldr	r3, [sp, #168]	; 0xa8
 8020396:	f8d2 e00c 	ldr.w	lr, [r2, #12]
 802039a:	689b      	ldr	r3, [r3, #8]
 802039c:	ea5f 422a 	movs.w	r2, sl, asr #16
 80203a0:	ea4f 4c25 	mov.w	ip, r5, asr #16
 80203a4:	f3ca 3003 	ubfx	r0, sl, #12, #4
 80203a8:	f3c5 3103 	ubfx	r1, r5, #12, #4
 80203ac:	f100 8121 	bmi.w	80205f2 <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x302>
 80203b0:	f103 39ff 	add.w	r9, r3, #4294967295
 80203b4:	454a      	cmp	r2, r9
 80203b6:	f280 811c 	bge.w	80205f2 <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x302>
 80203ba:	f1bc 0f00 	cmp.w	ip, #0
 80203be:	f2c0 8118 	blt.w	80205f2 <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x302>
 80203c2:	f10e 39ff 	add.w	r9, lr, #4294967295
 80203c6:	45cc      	cmp	ip, r9
 80203c8:	f280 8113 	bge.w	80205f2 <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x302>
 80203cc:	b21b      	sxth	r3, r3
 80203ce:	fb0c 2203 	mla	r2, ip, r3, r2
 80203d2:	9c0b      	ldr	r4, [sp, #44]	; 0x2c
 80203d4:	eb04 0902 	add.w	r9, r4, r2
 80203d8:	5ca2      	ldrb	r2, [r4, r2]
 80203da:	f836 e012 	ldrh.w	lr, [r6, r2, lsl #1]
 80203de:	2800      	cmp	r0, #0
 80203e0:	f000 80fe 	beq.w	80205e0 <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x2f0>
 80203e4:	f899 2001 	ldrb.w	r2, [r9, #1]
 80203e8:	f836 2012 	ldrh.w	r2, [r6, r2, lsl #1]
 80203ec:	9211      	str	r2, [sp, #68]	; 0x44
 80203ee:	b151      	cbz	r1, 8020406 <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x116>
 80203f0:	eb09 0203 	add.w	r2, r9, r3
 80203f4:	f819 3003 	ldrb.w	r3, [r9, r3]
 80203f8:	f836 3013 	ldrh.w	r3, [r6, r3, lsl #1]
 80203fc:	930f      	str	r3, [sp, #60]	; 0x3c
 80203fe:	7853      	ldrb	r3, [r2, #1]
 8020400:	f836 3013 	ldrh.w	r3, [r6, r3, lsl #1]
 8020404:	9312      	str	r3, [sp, #72]	; 0x48
 8020406:	9b11      	ldr	r3, [sp, #68]	; 0x44
 8020408:	9c12      	ldr	r4, [sp, #72]	; 0x48
 802040a:	ea4f 4c03 	mov.w	ip, r3, lsl #16
 802040e:	f00c 6cfc 	and.w	ip, ip, #132120576	; 0x7e00000
 8020412:	f423 63fc 	bic.w	r3, r3, #2016	; 0x7e0
 8020416:	ea4c 0c03 	orr.w	ip, ip, r3
 802041a:	9b12      	ldr	r3, [sp, #72]	; 0x48
 802041c:	041b      	lsls	r3, r3, #16
 802041e:	fb10 f201 	smulbb	r2, r0, r1
 8020422:	f424 64fc 	bic.w	r4, r4, #2016	; 0x7e0
 8020426:	f003 63fc 	and.w	r3, r3, #132120576	; 0x7e00000
 802042a:	10d2      	asrs	r2, r2, #3
 802042c:	4323      	orrs	r3, r4
 802042e:	ebc2 0940 	rsb	r9, r2, r0, lsl #1
 8020432:	4353      	muls	r3, r2
 8020434:	fb09 330c 	mla	r3, r9, ip, r3
 8020438:	ea4f 4c0e 	mov.w	ip, lr, lsl #16
 802043c:	f00c 6cfc 	and.w	ip, ip, #132120576	; 0x7e00000
 8020440:	f42e 6efc 	bic.w	lr, lr, #2016	; 0x7e0
 8020444:	ea4c 0e0e 	orr.w	lr, ip, lr
 8020448:	f1c1 0c10 	rsb	ip, r1, #16
 802044c:	ebac 0c00 	sub.w	ip, ip, r0
 8020450:	eb02 0c4c 	add.w	ip, r2, ip, lsl #1
 8020454:	fb0c 3c0e 	mla	ip, ip, lr, r3
 8020458:	9b0f      	ldr	r3, [sp, #60]	; 0x3c
 802045a:	9c0a      	ldr	r4, [sp, #40]	; 0x28
 802045c:	0418      	lsls	r0, r3, #16
 802045e:	f000 60fc 	and.w	r0, r0, #132120576	; 0x7e00000
 8020462:	f423 63fc 	bic.w	r3, r3, #2016	; 0x7e0
 8020466:	4318      	orrs	r0, r3
 8020468:	ebc2 0241 	rsb	r2, r2, r1, lsl #1
 802046c:	fb02 c200 	mla	r2, r2, r0, ip
 8020470:	0d53      	lsrs	r3, r2, #21
 8020472:	0952      	lsrs	r2, r2, #5
 8020474:	8838      	ldrh	r0, [r7, #0]
 8020476:	f403 63fc 	and.w	r3, r3, #2016	; 0x7e0
 802047a:	f422 62fc 	bic.w	r2, r2, #2016	; 0x7e0
 802047e:	431a      	orrs	r2, r3
 8020480:	b292      	uxth	r2, r2
 8020482:	1201      	asrs	r1, r0, #8
 8020484:	f8bd 3034 	ldrh.w	r3, [sp, #52]	; 0x34
 8020488:	ea4f 2c22 	mov.w	ip, r2, asr #8
 802048c:	f001 01f8 	and.w	r1, r1, #248	; 0xf8
 8020490:	fb11 f104 	smulbb	r1, r1, r4
 8020494:	ea4f 0ee0 	mov.w	lr, r0, asr #3
 8020498:	f00c 0cf8 	and.w	ip, ip, #248	; 0xf8
 802049c:	00c0      	lsls	r0, r0, #3
 802049e:	fb0c 1c03 	mla	ip, ip, r3, r1
 80204a2:	f00e 0efc 	and.w	lr, lr, #252	; 0xfc
 80204a6:	10d1      	asrs	r1, r2, #3
 80204a8:	b2c0      	uxtb	r0, r0
 80204aa:	00d2      	lsls	r2, r2, #3
 80204ac:	b2d2      	uxtb	r2, r2
 80204ae:	f001 01fc 	and.w	r1, r1, #252	; 0xfc
 80204b2:	fb1e fe04 	smulbb	lr, lr, r4
 80204b6:	fb10 f004 	smulbb	r0, r0, r4
 80204ba:	fa1f fc8c 	uxth.w	ip, ip
 80204be:	fb01 e103 	mla	r1, r1, r3, lr
 80204c2:	fb02 0303 	mla	r3, r2, r3, r0
 80204c6:	b29a      	uxth	r2, r3
 80204c8:	f10c 0301 	add.w	r3, ip, #1
 80204cc:	b289      	uxth	r1, r1
 80204ce:	eb03 2c1c 	add.w	ip, r3, ip, lsr #8
 80204d2:	1c53      	adds	r3, r2, #1
 80204d4:	eb03 2312 	add.w	r3, r3, r2, lsr #8
 80204d8:	1c4a      	adds	r2, r1, #1
 80204da:	eb02 2111 	add.w	r1, r2, r1, lsr #8
 80204de:	f40c 4c78 	and.w	ip, ip, #63488	; 0xf800
 80204e2:	f3c3 23c4 	ubfx	r3, r3, #11, #5
 80204e6:	0949      	lsrs	r1, r1, #5
 80204e8:	ea43 030c 	orr.w	r3, r3, ip
 80204ec:	f401 61fc 	and.w	r1, r1, #2016	; 0x7e0
 80204f0:	430b      	orrs	r3, r1
 80204f2:	803b      	strh	r3, [r7, #0]
 80204f4:	9b25      	ldr	r3, [sp, #148]	; 0x94
 80204f6:	449a      	add	sl, r3
 80204f8:	9b26      	ldr	r3, [sp, #152]	; 0x98
 80204fa:	3702      	adds	r7, #2
 80204fc:	441d      	add	r5, r3
 80204fe:	f10b 3bff 	add.w	fp, fp, #4294967295
 8020502:	e742      	b.n	802038a <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x9a>
 8020504:	9b25      	ldr	r3, [sp, #148]	; 0x94
 8020506:	449a      	add	sl, r3
 8020508:	9b26      	ldr	r3, [sp, #152]	; 0x98
 802050a:	441d      	add	r5, r3
 802050c:	9b09      	ldr	r3, [sp, #36]	; 0x24
 802050e:	3b01      	subs	r3, #1
 8020510:	9309      	str	r3, [sp, #36]	; 0x24
 8020512:	f108 0802 	add.w	r8, r8, #2
 8020516:	e718      	b.n	802034a <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x5a>
 8020518:	d023      	beq.n	8020562 <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x272>
 802051a:	9b09      	ldr	r3, [sp, #36]	; 0x24
 802051c:	9825      	ldr	r0, [sp, #148]	; 0x94
 802051e:	3b01      	subs	r3, #1
 8020520:	fb00 a003 	mla	r0, r0, r3, sl
 8020524:	1400      	asrs	r0, r0, #16
 8020526:	f53f af2d 	bmi.w	8020384 <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x94>
 802052a:	3901      	subs	r1, #1
 802052c:	4288      	cmp	r0, r1
 802052e:	f6bf af29 	bge.w	8020384 <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x94>
 8020532:	9926      	ldr	r1, [sp, #152]	; 0x98
 8020534:	fb01 5303 	mla	r3, r1, r3, r5
 8020538:	141b      	asrs	r3, r3, #16
 802053a:	f53f af23 	bmi.w	8020384 <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x94>
 802053e:	3a01      	subs	r2, #1
 8020540:	4293      	cmp	r3, r2
 8020542:	f6bf af1f 	bge.w	8020384 <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x94>
 8020546:	f8dd e024 	ldr.w	lr, [sp, #36]	; 0x24
 802054a:	f8bd 9034 	ldrh.w	r9, [sp, #52]	; 0x34
 802054e:	f8cd 8038 	str.w	r8, [sp, #56]	; 0x38
 8020552:	f1be 0f00 	cmp.w	lr, #0
 8020556:	dc6c      	bgt.n	8020632 <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x342>
 8020558:	9b09      	ldr	r3, [sp, #36]	; 0x24
 802055a:	ea23 74e3 	bic.w	r4, r3, r3, asr #31
 802055e:	eb08 0844 	add.w	r8, r8, r4, lsl #1
 8020562:	9b0c      	ldr	r3, [sp, #48]	; 0x30
 8020564:	2b00      	cmp	r3, #0
 8020566:	f340 810e 	ble.w	8020786 <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x496>
 802056a:	ee30 0a04 	vadd.f32	s0, s0, s8
 802056e:	eeb7 7a00 	vmov.f32	s14, #112	; 0x3f800000  1.0
 8020572:	eec7 7a00 	vdiv.f32	s15, s14, s0
 8020576:	9b22      	ldr	r3, [sp, #136]	; 0x88
 8020578:	ee70 0aa4 	vadd.f32	s1, s1, s9
 802057c:	ee31 1a05 	vadd.f32	s2, s2, s10
 8020580:	ee20 7aa7 	vmul.f32	s14, s1, s15
 8020584:	eef0 6a62 	vmov.f32	s13, s5
 8020588:	ee61 7a27 	vmul.f32	s15, s2, s15
 802058c:	eefe 6ac8 	vcvt.s32.f32	s13, s13, #16
 8020590:	ee77 2a62 	vsub.f32	s5, s14, s5
 8020594:	ee16 aa90 	vmov	sl, s13
 8020598:	eefe 2ac8 	vcvt.s32.f32	s5, s5, #16
 802059c:	eef0 6a43 	vmov.f32	s13, s6
 80205a0:	ee37 3ac3 	vsub.f32	s6, s15, s6
 80205a4:	ee12 2a90 	vmov	r2, s5
 80205a8:	eebe 3ac8 	vcvt.s32.f32	s6, s6, #16
 80205ac:	fb92 f3f3 	sdiv	r3, r2, r3
 80205b0:	ee13 2a10 	vmov	r2, s6
 80205b4:	9325      	str	r3, [sp, #148]	; 0x94
 80205b6:	9b22      	ldr	r3, [sp, #136]	; 0x88
 80205b8:	fb92 f3f3 	sdiv	r3, r2, r3
 80205bc:	9326      	str	r3, [sp, #152]	; 0x98
 80205be:	9b0c      	ldr	r3, [sp, #48]	; 0x30
 80205c0:	9a15      	ldr	r2, [sp, #84]	; 0x54
 80205c2:	3b01      	subs	r3, #1
 80205c4:	eefe 6ac8 	vcvt.s32.f32	s13, s13, #16
 80205c8:	930c      	str	r3, [sp, #48]	; 0x30
 80205ca:	9b22      	ldr	r3, [sp, #136]	; 0x88
 80205cc:	bf08      	it	eq
 80205ce:	4613      	moveq	r3, r2
 80205d0:	ee16 5a90 	vmov	r5, s13
 80205d4:	9309      	str	r3, [sp, #36]	; 0x24
 80205d6:	eeb0 3a67 	vmov.f32	s6, s15
 80205da:	eef0 2a47 	vmov.f32	s5, s14
 80205de:	e6a6      	b.n	802032e <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x3e>
 80205e0:	2900      	cmp	r1, #0
 80205e2:	f43f af10 	beq.w	8020406 <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x116>
 80205e6:	f819 3003 	ldrb.w	r3, [r9, r3]
 80205ea:	f836 3013 	ldrh.w	r3, [r6, r3, lsl #1]
 80205ee:	930f      	str	r3, [sp, #60]	; 0x3c
 80205f0:	e709      	b.n	8020406 <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x116>
 80205f2:	f112 0901 	adds.w	r9, r2, #1
 80205f6:	f53f af7d 	bmi.w	80204f4 <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x204>
 80205fa:	454b      	cmp	r3, r9
 80205fc:	f6ff af7a 	blt.w	80204f4 <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x204>
 8020600:	f11c 0901 	adds.w	r9, ip, #1
 8020604:	f53f af76 	bmi.w	80204f4 <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x204>
 8020608:	45ce      	cmp	lr, r9
 802060a:	f6ff af73 	blt.w	80204f4 <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x204>
 802060e:	9c0d      	ldr	r4, [sp, #52]	; 0x34
 8020610:	9202      	str	r2, [sp, #8]
 8020612:	b21b      	sxth	r3, r3
 8020614:	fa0f f28e 	sxth.w	r2, lr
 8020618:	e9cd 1405 	strd	r1, r4, [sp, #20]
 802061c:	e9cd c003 	strd	ip, r0, [sp, #12]
 8020620:	9201      	str	r2, [sp, #4]
 8020622:	9300      	str	r3, [sp, #0]
 8020624:	9a0b      	ldr	r2, [sp, #44]	; 0x2c
 8020626:	9816      	ldr	r0, [sp, #88]	; 0x58
 8020628:	4633      	mov	r3, r6
 802062a:	4639      	mov	r1, r7
 802062c:	f7ff fd8e 	bl	802014c <_ZNK8touchgfx8LCD16bpp55TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKhPKtssiihhh>
 8020630:	e760      	b.n	80204f4 <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x204>
 8020632:	9b2a      	ldr	r3, [sp, #168]	; 0xa8
 8020634:	9c0b      	ldr	r4, [sp, #44]	; 0x2c
 8020636:	f9b3 3008 	ldrsh.w	r3, [r3, #8]
 802063a:	ea4f 422a 	mov.w	r2, sl, asr #16
 802063e:	1429      	asrs	r1, r5, #16
 8020640:	fb03 2101 	mla	r1, r3, r1, r2
 8020644:	9a0b      	ldr	r2, [sp, #44]	; 0x2c
 8020646:	440a      	add	r2, r1
 8020648:	5c61      	ldrb	r1, [r4, r1]
 802064a:	f3ca 3c03 	ubfx	ip, sl, #12, #4
 802064e:	f3c5 3003 	ubfx	r0, r5, #12, #4
 8020652:	f836 1011 	ldrh.w	r1, [r6, r1, lsl #1]
 8020656:	f1bc 0f00 	cmp.w	ip, #0
 802065a:	f000 808c 	beq.w	8020776 <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x486>
 802065e:	7857      	ldrb	r7, [r2, #1]
 8020660:	f836 4017 	ldrh.w	r4, [r6, r7, lsl #1]
 8020664:	9413      	str	r4, [sp, #76]	; 0x4c
 8020666:	b140      	cbz	r0, 802067a <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x38a>
 8020668:	18d7      	adds	r7, r2, r3
 802066a:	5cd3      	ldrb	r3, [r2, r3]
 802066c:	f836 3013 	ldrh.w	r3, [r6, r3, lsl #1]
 8020670:	9310      	str	r3, [sp, #64]	; 0x40
 8020672:	787b      	ldrb	r3, [r7, #1]
 8020674:	f836 3013 	ldrh.w	r3, [r6, r3, lsl #1]
 8020678:	9314      	str	r3, [sp, #80]	; 0x50
 802067a:	9b13      	ldr	r3, [sp, #76]	; 0x4c
 802067c:	9c14      	ldr	r4, [sp, #80]	; 0x50
 802067e:	fb1c f200 	smulbb	r2, ip, r0
 8020682:	041f      	lsls	r7, r3, #16
 8020684:	10d2      	asrs	r2, r2, #3
 8020686:	f423 63fc 	bic.w	r3, r3, #2016	; 0x7e0
 802068a:	f007 67fc 	and.w	r7, r7, #132120576	; 0x7e00000
 802068e:	431f      	orrs	r7, r3
 8020690:	ebc2 034c 	rsb	r3, r2, ip, lsl #1
 8020694:	9317      	str	r3, [sp, #92]	; 0x5c
 8020696:	9b14      	ldr	r3, [sp, #80]	; 0x50
 8020698:	041b      	lsls	r3, r3, #16
 802069a:	f424 6bfc 	bic.w	fp, r4, #2016	; 0x7e0
 802069e:	f003 63fc 	and.w	r3, r3, #132120576	; 0x7e00000
 80206a2:	ea43 030b 	orr.w	r3, r3, fp
 80206a6:	9c17      	ldr	r4, [sp, #92]	; 0x5c
 80206a8:	4353      	muls	r3, r2
 80206aa:	ea4f 4b01 	mov.w	fp, r1, lsl #16
 80206ae:	fb04 3707 	mla	r7, r4, r7, r3
 80206b2:	f421 61fc 	bic.w	r1, r1, #2016	; 0x7e0
 80206b6:	f00b 63fc 	and.w	r3, fp, #132120576	; 0x7e00000
 80206ba:	ea43 0b01 	orr.w	fp, r3, r1
 80206be:	f1c0 0110 	rsb	r1, r0, #16
 80206c2:	9b10      	ldr	r3, [sp, #64]	; 0x40
 80206c4:	9c0a      	ldr	r4, [sp, #40]	; 0x28
 80206c6:	eba1 0c0c 	sub.w	ip, r1, ip
 80206ca:	eb02 0c4c 	add.w	ip, r2, ip, lsl #1
 80206ce:	fb0c 770b 	mla	r7, ip, fp, r7
 80206d2:	ea4f 4c03 	mov.w	ip, r3, lsl #16
 80206d6:	f423 6bfc 	bic.w	fp, r3, #2016	; 0x7e0
 80206da:	f00c 6cfc 	and.w	ip, ip, #132120576	; 0x7e00000
 80206de:	ebc2 0240 	rsb	r2, r2, r0, lsl #1
 80206e2:	ea4c 0c0b 	orr.w	ip, ip, fp
 80206e6:	fb02 770c 	mla	r7, r2, ip, r7
 80206ea:	9a0e      	ldr	r2, [sp, #56]	; 0x38
 80206ec:	0d79      	lsrs	r1, r7, #21
 80206ee:	097f      	lsrs	r7, r7, #5
 80206f0:	8812      	ldrh	r2, [r2, #0]
 80206f2:	f401 61fc 	and.w	r1, r1, #2016	; 0x7e0
 80206f6:	f427 67fc 	bic.w	r7, r7, #2016	; 0x7e0
 80206fa:	430f      	orrs	r7, r1
 80206fc:	b2bb      	uxth	r3, r7
 80206fe:	1211      	asrs	r1, r2, #8
 8020700:	1218      	asrs	r0, r3, #8
 8020702:	f001 01f8 	and.w	r1, r1, #248	; 0xf8
 8020706:	fb11 f104 	smulbb	r1, r1, r4
 802070a:	10d7      	asrs	r7, r2, #3
 802070c:	f000 00f8 	and.w	r0, r0, #248	; 0xf8
 8020710:	00d2      	lsls	r2, r2, #3
 8020712:	fb00 1009 	mla	r0, r0, r9, r1
 8020716:	f007 07fc 	and.w	r7, r7, #252	; 0xfc
 802071a:	10d9      	asrs	r1, r3, #3
 802071c:	b2d2      	uxtb	r2, r2
 802071e:	00db      	lsls	r3, r3, #3
 8020720:	fb17 f704 	smulbb	r7, r7, r4
 8020724:	fb12 f204 	smulbb	r2, r2, r4
 8020728:	f001 01fc 	and.w	r1, r1, #252	; 0xfc
 802072c:	b2db      	uxtb	r3, r3
 802072e:	b280      	uxth	r0, r0
 8020730:	fb01 7109 	mla	r1, r1, r9, r7
 8020734:	fb03 2309 	mla	r3, r3, r9, r2
 8020738:	b29b      	uxth	r3, r3
 802073a:	b289      	uxth	r1, r1
 802073c:	1c42      	adds	r2, r0, #1
 802073e:	eb02 2010 	add.w	r0, r2, r0, lsr #8
 8020742:	1c4f      	adds	r7, r1, #1
 8020744:	1c5a      	adds	r2, r3, #1
 8020746:	eb02 2213 	add.w	r2, r2, r3, lsr #8
 802074a:	eb07 2111 	add.w	r1, r7, r1, lsr #8
 802074e:	f400 4078 	and.w	r0, r0, #63488	; 0xf800
 8020752:	f3c2 22c4 	ubfx	r2, r2, #11, #5
 8020756:	0949      	lsrs	r1, r1, #5
 8020758:	9b0e      	ldr	r3, [sp, #56]	; 0x38
 802075a:	4310      	orrs	r0, r2
 802075c:	f401 61fc 	and.w	r1, r1, #2016	; 0x7e0
 8020760:	4308      	orrs	r0, r1
 8020762:	f823 0b02 	strh.w	r0, [r3], #2
 8020766:	930e      	str	r3, [sp, #56]	; 0x38
 8020768:	9b25      	ldr	r3, [sp, #148]	; 0x94
 802076a:	449a      	add	sl, r3
 802076c:	9b26      	ldr	r3, [sp, #152]	; 0x98
 802076e:	f10e 3eff 	add.w	lr, lr, #4294967295
 8020772:	441d      	add	r5, r3
 8020774:	e6ed      	b.n	8020552 <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x262>
 8020776:	2800      	cmp	r0, #0
 8020778:	f43f af7f 	beq.w	802067a <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x38a>
 802077c:	5cd3      	ldrb	r3, [r2, r3]
 802077e:	f836 3013 	ldrh.w	r3, [r6, r3, lsl #1]
 8020782:	9310      	str	r3, [sp, #64]	; 0x40
 8020784:	e779      	b.n	802067a <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x38a>
 8020786:	b019      	add	sp, #100	; 0x64
 8020788:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}

0802078c <_ZNK8touchgfx8LCD16bpp57TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhPKtssiihh>:
 802078c:	e92d 47f0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, lr}
 8020790:	e9dd 480a 	ldrd	r4, r8, [sp, #40]	; 0x28
 8020794:	f9bd e020 	ldrsh.w	lr, [sp, #32]
 8020798:	f9bd a024 	ldrsh.w	sl, [sp, #36]	; 0x24
 802079c:	f89d 5030 	ldrb.w	r5, [sp, #48]	; 0x30
 80207a0:	f89d 6034 	ldrb.w	r6, [sp, #52]	; 0x34
 80207a4:	8808      	ldrh	r0, [r1, #0]
 80207a6:	fb08 470e 	mla	r7, r8, lr, r4
 80207aa:	f1b8 0f00 	cmp.w	r8, #0
 80207ae:	eb02 0907 	add.w	r9, r2, r7
 80207b2:	db67      	blt.n	8020884 <_ZNK8touchgfx8LCD16bpp57TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhPKtssiihh+0xf8>
 80207b4:	45c2      	cmp	sl, r8
 80207b6:	dd65      	ble.n	8020884 <_ZNK8touchgfx8LCD16bpp57TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhPKtssiihh+0xf8>
 80207b8:	2c00      	cmp	r4, #0
 80207ba:	db61      	blt.n	8020880 <_ZNK8touchgfx8LCD16bpp57TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhPKtssiihh+0xf4>
 80207bc:	45a6      	cmp	lr, r4
 80207be:	dd5f      	ble.n	8020880 <_ZNK8touchgfx8LCD16bpp57TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhPKtssiihh+0xf4>
 80207c0:	5dd2      	ldrb	r2, [r2, r7]
 80207c2:	f833 c012 	ldrh.w	ip, [r3, r2, lsl #1]
 80207c6:	1c62      	adds	r2, r4, #1
 80207c8:	d45f      	bmi.n	802088a <_ZNK8touchgfx8LCD16bpp57TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhPKtssiihh+0xfe>
 80207ca:	4596      	cmp	lr, r2
 80207cc:	dd5d      	ble.n	802088a <_ZNK8touchgfx8LCD16bpp57TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhPKtssiihh+0xfe>
 80207ce:	2d00      	cmp	r5, #0
 80207d0:	d05b      	beq.n	802088a <_ZNK8touchgfx8LCD16bpp57TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhPKtssiihh+0xfe>
 80207d2:	f899 2001 	ldrb.w	r2, [r9, #1]
 80207d6:	f833 7012 	ldrh.w	r7, [r3, r2, lsl #1]
 80207da:	f118 0801 	adds.w	r8, r8, #1
 80207de:	d458      	bmi.n	8020892 <_ZNK8touchgfx8LCD16bpp57TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhPKtssiihh+0x106>
 80207e0:	45c2      	cmp	sl, r8
 80207e2:	dd56      	ble.n	8020892 <_ZNK8touchgfx8LCD16bpp57TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhPKtssiihh+0x106>
 80207e4:	2e00      	cmp	r6, #0
 80207e6:	d054      	beq.n	8020892 <_ZNK8touchgfx8LCD16bpp57TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhPKtssiihh+0x106>
 80207e8:	2c00      	cmp	r4, #0
 80207ea:	db50      	blt.n	802088e <_ZNK8touchgfx8LCD16bpp57TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhPKtssiihh+0x102>
 80207ec:	45a6      	cmp	lr, r4
 80207ee:	dd4e      	ble.n	802088e <_ZNK8touchgfx8LCD16bpp57TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhPKtssiihh+0x102>
 80207f0:	f819 200e 	ldrb.w	r2, [r9, lr]
 80207f4:	f833 2012 	ldrh.w	r2, [r3, r2, lsl #1]
 80207f8:	3401      	adds	r4, #1
 80207fa:	d407      	bmi.n	802080c <_ZNK8touchgfx8LCD16bpp57TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhPKtssiihh+0x80>
 80207fc:	45a6      	cmp	lr, r4
 80207fe:	dd05      	ble.n	802080c <_ZNK8touchgfx8LCD16bpp57TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhPKtssiihh+0x80>
 8020800:	b125      	cbz	r5, 802080c <_ZNK8touchgfx8LCD16bpp57TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhPKtssiihh+0x80>
 8020802:	44ce      	add	lr, r9
 8020804:	f89e 0001 	ldrb.w	r0, [lr, #1]
 8020808:	f833 0010 	ldrh.w	r0, [r3, r0, lsl #1]
 802080c:	ea4f 430c 	mov.w	r3, ip, lsl #16
 8020810:	fb15 f406 	smulbb	r4, r5, r6
 8020814:	f003 63fc 	and.w	r3, r3, #132120576	; 0x7e00000
 8020818:	ea4f 4e07 	mov.w	lr, r7, lsl #16
 802081c:	f42c 6cfc 	bic.w	ip, ip, #2016	; 0x7e0
 8020820:	f3c4 04c7 	ubfx	r4, r4, #3, #8
 8020824:	ea43 0c0c 	orr.w	ip, r3, ip
 8020828:	f00e 6efc 	and.w	lr, lr, #132120576	; 0x7e00000
 802082c:	f1c6 0310 	rsb	r3, r6, #16
 8020830:	f427 67fc 	bic.w	r7, r7, #2016	; 0x7e0
 8020834:	1b5b      	subs	r3, r3, r5
 8020836:	ea4e 0707 	orr.w	r7, lr, r7
 802083a:	ebc4 0545 	rsb	r5, r4, r5, lsl #1
 802083e:	eb04 0343 	add.w	r3, r4, r3, lsl #1
 8020842:	437d      	muls	r5, r7
 8020844:	fb03 5c0c 	mla	ip, r3, ip, r5
 8020848:	0403      	lsls	r3, r0, #16
 802084a:	f003 63fc 	and.w	r3, r3, #132120576	; 0x7e00000
 802084e:	f420 60fc 	bic.w	r0, r0, #2016	; 0x7e0
 8020852:	4318      	orrs	r0, r3
 8020854:	0413      	lsls	r3, r2, #16
 8020856:	f003 63fc 	and.w	r3, r3, #132120576	; 0x7e00000
 802085a:	f422 62fc 	bic.w	r2, r2, #2016	; 0x7e0
 802085e:	4313      	orrs	r3, r2
 8020860:	fb04 c000 	mla	r0, r4, r0, ip
 8020864:	ebc4 0646 	rsb	r6, r4, r6, lsl #1
 8020868:	fb06 0003 	mla	r0, r6, r3, r0
 802086c:	0d43      	lsrs	r3, r0, #21
 802086e:	0940      	lsrs	r0, r0, #5
 8020870:	f403 63fc 	and.w	r3, r3, #2016	; 0x7e0
 8020874:	f420 60fc 	bic.w	r0, r0, #2016	; 0x7e0
 8020878:	4318      	orrs	r0, r3
 802087a:	8008      	strh	r0, [r1, #0]
 802087c:	e8bd 87f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, pc}
 8020880:	4684      	mov	ip, r0
 8020882:	e7a0      	b.n	80207c6 <_ZNK8touchgfx8LCD16bpp57TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhPKtssiihh+0x3a>
 8020884:	4607      	mov	r7, r0
 8020886:	4684      	mov	ip, r0
 8020888:	e7a7      	b.n	80207da <_ZNK8touchgfx8LCD16bpp57TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhPKtssiihh+0x4e>
 802088a:	4607      	mov	r7, r0
 802088c:	e7a5      	b.n	80207da <_ZNK8touchgfx8LCD16bpp57TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhPKtssiihh+0x4e>
 802088e:	4602      	mov	r2, r0
 8020890:	e7b2      	b.n	80207f8 <_ZNK8touchgfx8LCD16bpp57TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhPKtssiihh+0x6c>
 8020892:	4602      	mov	r2, r0
 8020894:	e7ba      	b.n	802080c <_ZNK8touchgfx8LCD16bpp57TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhPKtssiihh+0x80>

08020896 <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff>:
 8020896:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 802089a:	b093      	sub	sp, #76	; 0x4c
 802089c:	e9dd 461d 	ldrd	r4, r6, [sp, #116]	; 0x74
 80208a0:	920f      	str	r2, [sp, #60]	; 0x3c
 80208a2:	9a21      	ldr	r2, [sp, #132]	; 0x84
 80208a4:	9108      	str	r1, [sp, #32]
 80208a6:	9306      	str	r3, [sp, #24]
 80208a8:	e9dd 1322 	ldrd	r1, r3, [sp, #136]	; 0x88
 80208ac:	9010      	str	r0, [sp, #64]	; 0x40
 80208ae:	6850      	ldr	r0, [r2, #4]
 80208b0:	6812      	ldr	r2, [r2, #0]
 80208b2:	fb00 1303 	mla	r3, r0, r3, r1
 80208b6:	eb02 0943 	add.w	r9, r2, r3, lsl #1
 80208ba:	9b24      	ldr	r3, [sp, #144]	; 0x90
 80208bc:	681b      	ldr	r3, [r3, #0]
 80208be:	9307      	str	r3, [sp, #28]
 80208c0:	9b24      	ldr	r3, [sp, #144]	; 0x90
 80208c2:	685f      	ldr	r7, [r3, #4]
 80208c4:	eef7 6a00 	vmov.f32	s13, #112	; 0x3f800000  1.0
 80208c8:	3704      	adds	r7, #4
 80208ca:	9b08      	ldr	r3, [sp, #32]
 80208cc:	2b00      	cmp	r3, #0
 80208ce:	dc03      	bgt.n	80208d8 <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x42>
 80208d0:	9b0f      	ldr	r3, [sp, #60]	; 0x3c
 80208d2:	2b00      	cmp	r3, #0
 80208d4:	f340 81b2 	ble.w	8020c3c <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x3a6>
 80208d8:	9b24      	ldr	r3, [sp, #144]	; 0x90
 80208da:	f9b3 1008 	ldrsh.w	r1, [r3, #8]
 80208de:	f9b3 200c 	ldrsh.w	r2, [r3, #12]
 80208e2:	1e48      	subs	r0, r1, #1
 80208e4:	f102 3cff 	add.w	ip, r2, #4294967295
 80208e8:	9b06      	ldr	r3, [sp, #24]
 80208ea:	2b00      	cmp	r3, #0
 80208ec:	f340 80a9 	ble.w	8020a42 <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x1ac>
 80208f0:	ea5f 4e24 	movs.w	lr, r4, asr #16
 80208f4:	ea4f 4326 	mov.w	r3, r6, asr #16
 80208f8:	d406      	bmi.n	8020908 <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x72>
 80208fa:	4586      	cmp	lr, r0
 80208fc:	da04      	bge.n	8020908 <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x72>
 80208fe:	2b00      	cmp	r3, #0
 8020900:	db02      	blt.n	8020908 <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x72>
 8020902:	4563      	cmp	r3, ip
 8020904:	f2c0 809e 	blt.w	8020a44 <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x1ae>
 8020908:	f11e 0e01 	adds.w	lr, lr, #1
 802090c:	f100 808f 	bmi.w	8020a2e <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x198>
 8020910:	4571      	cmp	r1, lr
 8020912:	f2c0 808c 	blt.w	8020a2e <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x198>
 8020916:	3301      	adds	r3, #1
 8020918:	f100 8089 	bmi.w	8020a2e <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x198>
 802091c:	429a      	cmp	r2, r3
 802091e:	f2c0 8086 	blt.w	8020a2e <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x198>
 8020922:	f8dd b018 	ldr.w	fp, [sp, #24]
 8020926:	46c8      	mov	r8, r9
 8020928:	f1bb 0f00 	cmp.w	fp, #0
 802092c:	f340 80a6 	ble.w	8020a7c <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x1e6>
 8020930:	9a24      	ldr	r2, [sp, #144]	; 0x90
 8020932:	9b24      	ldr	r3, [sp, #144]	; 0x90
 8020934:	f8d2 e00c 	ldr.w	lr, [r2, #12]
 8020938:	689b      	ldr	r3, [r3, #8]
 802093a:	1422      	asrs	r2, r4, #16
 802093c:	ea4f 4c26 	mov.w	ip, r6, asr #16
 8020940:	f3c4 3003 	ubfx	r0, r4, #12, #4
 8020944:	f3c6 3103 	ubfx	r1, r6, #12, #4
 8020948:	f100 80e3 	bmi.w	8020b12 <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x27c>
 802094c:	f103 3aff 	add.w	sl, r3, #4294967295
 8020950:	4552      	cmp	r2, sl
 8020952:	f280 80de 	bge.w	8020b12 <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x27c>
 8020956:	f1bc 0f00 	cmp.w	ip, #0
 802095a:	f2c0 80da 	blt.w	8020b12 <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x27c>
 802095e:	f10e 3aff 	add.w	sl, lr, #4294967295
 8020962:	45d4      	cmp	ip, sl
 8020964:	f280 80d5 	bge.w	8020b12 <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x27c>
 8020968:	b21b      	sxth	r3, r3
 802096a:	fb0c 2203 	mla	r2, ip, r3, r2
 802096e:	9d07      	ldr	r5, [sp, #28]
 8020970:	eb05 0a02 	add.w	sl, r5, r2
 8020974:	5caa      	ldrb	r2, [r5, r2]
 8020976:	f837 e012 	ldrh.w	lr, [r7, r2, lsl #1]
 802097a:	2800      	cmp	r0, #0
 802097c:	f000 80c0 	beq.w	8020b00 <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x26a>
 8020980:	f89a 2001 	ldrb.w	r2, [sl, #1]
 8020984:	f837 2012 	ldrh.w	r2, [r7, r2, lsl #1]
 8020988:	920b      	str	r2, [sp, #44]	; 0x2c
 802098a:	b151      	cbz	r1, 80209a2 <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x10c>
 802098c:	eb0a 0203 	add.w	r2, sl, r3
 8020990:	f81a 3003 	ldrb.w	r3, [sl, r3]
 8020994:	f837 3013 	ldrh.w	r3, [r7, r3, lsl #1]
 8020998:	9309      	str	r3, [sp, #36]	; 0x24
 802099a:	7853      	ldrb	r3, [r2, #1]
 802099c:	f837 3013 	ldrh.w	r3, [r7, r3, lsl #1]
 80209a0:	930c      	str	r3, [sp, #48]	; 0x30
 80209a2:	9b0b      	ldr	r3, [sp, #44]	; 0x2c
 80209a4:	9d0c      	ldr	r5, [sp, #48]	; 0x30
 80209a6:	ea4f 4c03 	mov.w	ip, r3, lsl #16
 80209aa:	f00c 6cfc 	and.w	ip, ip, #132120576	; 0x7e00000
 80209ae:	f423 63fc 	bic.w	r3, r3, #2016	; 0x7e0
 80209b2:	ea4c 0c03 	orr.w	ip, ip, r3
 80209b6:	9b0c      	ldr	r3, [sp, #48]	; 0x30
 80209b8:	041b      	lsls	r3, r3, #16
 80209ba:	fb10 f201 	smulbb	r2, r0, r1
 80209be:	f003 63fc 	and.w	r3, r3, #132120576	; 0x7e00000
 80209c2:	f425 65fc 	bic.w	r5, r5, #2016	; 0x7e0
 80209c6:	10d2      	asrs	r2, r2, #3
 80209c8:	432b      	orrs	r3, r5
 80209ca:	ebc2 0a40 	rsb	sl, r2, r0, lsl #1
 80209ce:	4353      	muls	r3, r2
 80209d0:	fb0a 330c 	mla	r3, sl, ip, r3
 80209d4:	ea4f 4c0e 	mov.w	ip, lr, lsl #16
 80209d8:	f00c 6cfc 	and.w	ip, ip, #132120576	; 0x7e00000
 80209dc:	f42e 6efc 	bic.w	lr, lr, #2016	; 0x7e0
 80209e0:	ea4c 0e0e 	orr.w	lr, ip, lr
 80209e4:	f1c1 0c10 	rsb	ip, r1, #16
 80209e8:	ebac 0c00 	sub.w	ip, ip, r0
 80209ec:	eb02 0c4c 	add.w	ip, r2, ip, lsl #1
 80209f0:	fb0c 3c0e 	mla	ip, ip, lr, r3
 80209f4:	9b09      	ldr	r3, [sp, #36]	; 0x24
 80209f6:	0418      	lsls	r0, r3, #16
 80209f8:	f000 60fc 	and.w	r0, r0, #132120576	; 0x7e00000
 80209fc:	f423 63fc 	bic.w	r3, r3, #2016	; 0x7e0
 8020a00:	4318      	orrs	r0, r3
 8020a02:	ebc2 0241 	rsb	r2, r2, r1, lsl #1
 8020a06:	fb02 c200 	mla	r2, r2, r0, ip
 8020a0a:	0d53      	lsrs	r3, r2, #21
 8020a0c:	0952      	lsrs	r2, r2, #5
 8020a0e:	f403 63fc 	and.w	r3, r3, #2016	; 0x7e0
 8020a12:	f422 62fc 	bic.w	r2, r2, #2016	; 0x7e0
 8020a16:	431a      	orrs	r2, r3
 8020a18:	f8a8 2000 	strh.w	r2, [r8]
 8020a1c:	9b1f      	ldr	r3, [sp, #124]	; 0x7c
 8020a1e:	441c      	add	r4, r3
 8020a20:	9b20      	ldr	r3, [sp, #128]	; 0x80
 8020a22:	f108 0802 	add.w	r8, r8, #2
 8020a26:	441e      	add	r6, r3
 8020a28:	f10b 3bff 	add.w	fp, fp, #4294967295
 8020a2c:	e77c      	b.n	8020928 <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x92>
 8020a2e:	9b1f      	ldr	r3, [sp, #124]	; 0x7c
 8020a30:	441c      	add	r4, r3
 8020a32:	9b20      	ldr	r3, [sp, #128]	; 0x80
 8020a34:	441e      	add	r6, r3
 8020a36:	9b06      	ldr	r3, [sp, #24]
 8020a38:	3b01      	subs	r3, #1
 8020a3a:	9306      	str	r3, [sp, #24]
 8020a3c:	f109 0902 	add.w	r9, r9, #2
 8020a40:	e752      	b.n	80208e8 <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x52>
 8020a42:	d020      	beq.n	8020a86 <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x1f0>
 8020a44:	9b06      	ldr	r3, [sp, #24]
 8020a46:	981f      	ldr	r0, [sp, #124]	; 0x7c
 8020a48:	3b01      	subs	r3, #1
 8020a4a:	fb00 4003 	mla	r0, r0, r3, r4
 8020a4e:	1400      	asrs	r0, r0, #16
 8020a50:	f53f af67 	bmi.w	8020922 <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x8c>
 8020a54:	3901      	subs	r1, #1
 8020a56:	4288      	cmp	r0, r1
 8020a58:	f6bf af63 	bge.w	8020922 <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x8c>
 8020a5c:	9920      	ldr	r1, [sp, #128]	; 0x80
 8020a5e:	fb01 6303 	mla	r3, r1, r3, r6
 8020a62:	141b      	asrs	r3, r3, #16
 8020a64:	f53f af5d 	bmi.w	8020922 <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x8c>
 8020a68:	3a01      	subs	r2, #1
 8020a6a:	4293      	cmp	r3, r2
 8020a6c:	f6bf af59 	bge.w	8020922 <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x8c>
 8020a70:	f8dd 8018 	ldr.w	r8, [sp, #24]
 8020a74:	46ca      	mov	sl, r9
 8020a76:	f1b8 0f00 	cmp.w	r8, #0
 8020a7a:	dc67      	bgt.n	8020b4c <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x2b6>
 8020a7c:	9b06      	ldr	r3, [sp, #24]
 8020a7e:	ea23 75e3 	bic.w	r5, r3, r3, asr #31
 8020a82:	eb09 0945 	add.w	r9, r9, r5, lsl #1
 8020a86:	9b08      	ldr	r3, [sp, #32]
 8020a88:	2b00      	cmp	r3, #0
 8020a8a:	f340 80d7 	ble.w	8020c3c <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x3a6>
 8020a8e:	ee30 0a04 	vadd.f32	s0, s0, s8
 8020a92:	ee70 0aa4 	vadd.f32	s1, s1, s9
 8020a96:	eec6 7a80 	vdiv.f32	s15, s13, s0
 8020a9a:	9b1c      	ldr	r3, [sp, #112]	; 0x70
 8020a9c:	ee31 1a05 	vadd.f32	s2, s2, s10
 8020aa0:	ee20 7aa7 	vmul.f32	s14, s1, s15
 8020aa4:	eeb0 6a62 	vmov.f32	s12, s5
 8020aa8:	ee61 7a27 	vmul.f32	s15, s2, s15
 8020aac:	eebe 6ac8 	vcvt.s32.f32	s12, s12, #16
 8020ab0:	ee77 2a62 	vsub.f32	s5, s14, s5
 8020ab4:	ee16 4a10 	vmov	r4, s12
 8020ab8:	eefe 2ac8 	vcvt.s32.f32	s5, s5, #16
 8020abc:	eeb0 6a43 	vmov.f32	s12, s6
 8020ac0:	ee37 3ac3 	vsub.f32	s6, s15, s6
 8020ac4:	ee12 2a90 	vmov	r2, s5
 8020ac8:	eebe 3ac8 	vcvt.s32.f32	s6, s6, #16
 8020acc:	fb92 f3f3 	sdiv	r3, r2, r3
 8020ad0:	ee13 2a10 	vmov	r2, s6
 8020ad4:	931f      	str	r3, [sp, #124]	; 0x7c
 8020ad6:	9b1c      	ldr	r3, [sp, #112]	; 0x70
 8020ad8:	fb92 f3f3 	sdiv	r3, r2, r3
 8020adc:	9320      	str	r3, [sp, #128]	; 0x80
 8020ade:	9b08      	ldr	r3, [sp, #32]
 8020ae0:	9a0f      	ldr	r2, [sp, #60]	; 0x3c
 8020ae2:	3b01      	subs	r3, #1
 8020ae4:	eebe 6ac8 	vcvt.s32.f32	s12, s12, #16
 8020ae8:	9308      	str	r3, [sp, #32]
 8020aea:	9b1c      	ldr	r3, [sp, #112]	; 0x70
 8020aec:	bf08      	it	eq
 8020aee:	4613      	moveq	r3, r2
 8020af0:	ee16 6a10 	vmov	r6, s12
 8020af4:	9306      	str	r3, [sp, #24]
 8020af6:	eeb0 3a67 	vmov.f32	s6, s15
 8020afa:	eef0 2a47 	vmov.f32	s5, s14
 8020afe:	e6e4      	b.n	80208ca <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x34>
 8020b00:	2900      	cmp	r1, #0
 8020b02:	f43f af4e 	beq.w	80209a2 <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x10c>
 8020b06:	f81a 3003 	ldrb.w	r3, [sl, r3]
 8020b0a:	f837 3013 	ldrh.w	r3, [r7, r3, lsl #1]
 8020b0e:	9309      	str	r3, [sp, #36]	; 0x24
 8020b10:	e747      	b.n	80209a2 <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x10c>
 8020b12:	f112 0a01 	adds.w	sl, r2, #1
 8020b16:	d481      	bmi.n	8020a1c <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x186>
 8020b18:	4553      	cmp	r3, sl
 8020b1a:	f6ff af7f 	blt.w	8020a1c <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x186>
 8020b1e:	f11c 0a01 	adds.w	sl, ip, #1
 8020b22:	f53f af7b 	bmi.w	8020a1c <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x186>
 8020b26:	45d6      	cmp	lr, sl
 8020b28:	f6ff af78 	blt.w	8020a1c <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x186>
 8020b2c:	e9cd 2c02 	strd	r2, ip, [sp, #8]
 8020b30:	b21b      	sxth	r3, r3
 8020b32:	fa0f f28e 	sxth.w	r2, lr
 8020b36:	e9cd 0104 	strd	r0, r1, [sp, #16]
 8020b3a:	9201      	str	r2, [sp, #4]
 8020b3c:	9300      	str	r3, [sp, #0]
 8020b3e:	9a07      	ldr	r2, [sp, #28]
 8020b40:	9810      	ldr	r0, [sp, #64]	; 0x40
 8020b42:	463b      	mov	r3, r7
 8020b44:	4641      	mov	r1, r8
 8020b46:	f7ff fe21 	bl	802078c <_ZNK8touchgfx8LCD16bpp57TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhPKtssiihh>
 8020b4a:	e767      	b.n	8020a1c <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x186>
 8020b4c:	9b24      	ldr	r3, [sp, #144]	; 0x90
 8020b4e:	9d07      	ldr	r5, [sp, #28]
 8020b50:	f9b3 3008 	ldrsh.w	r3, [r3, #8]
 8020b54:	1422      	asrs	r2, r4, #16
 8020b56:	1431      	asrs	r1, r6, #16
 8020b58:	fb03 2101 	mla	r1, r3, r1, r2
 8020b5c:	9a07      	ldr	r2, [sp, #28]
 8020b5e:	440a      	add	r2, r1
 8020b60:	5c69      	ldrb	r1, [r5, r1]
 8020b62:	f3c4 3e03 	ubfx	lr, r4, #12, #4
 8020b66:	f3c6 3003 	ubfx	r0, r6, #12, #4
 8020b6a:	f837 1011 	ldrh.w	r1, [r7, r1, lsl #1]
 8020b6e:	f1be 0f00 	cmp.w	lr, #0
 8020b72:	d05c      	beq.n	8020c2e <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x398>
 8020b74:	f892 c001 	ldrb.w	ip, [r2, #1]
 8020b78:	f837 501c 	ldrh.w	r5, [r7, ip, lsl #1]
 8020b7c:	950d      	str	r5, [sp, #52]	; 0x34
 8020b7e:	b150      	cbz	r0, 8020b96 <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x300>
 8020b80:	eb02 0c03 	add.w	ip, r2, r3
 8020b84:	5cd3      	ldrb	r3, [r2, r3]
 8020b86:	f837 3013 	ldrh.w	r3, [r7, r3, lsl #1]
 8020b8a:	930a      	str	r3, [sp, #40]	; 0x28
 8020b8c:	f89c 3001 	ldrb.w	r3, [ip, #1]
 8020b90:	f837 3013 	ldrh.w	r3, [r7, r3, lsl #1]
 8020b94:	930e      	str	r3, [sp, #56]	; 0x38
 8020b96:	9b0d      	ldr	r3, [sp, #52]	; 0x34
 8020b98:	9d0e      	ldr	r5, [sp, #56]	; 0x38
 8020b9a:	fb1e f200 	smulbb	r2, lr, r0
 8020b9e:	ea4f 4c03 	mov.w	ip, r3, lsl #16
 8020ba2:	10d2      	asrs	r2, r2, #3
 8020ba4:	f423 63fc 	bic.w	r3, r3, #2016	; 0x7e0
 8020ba8:	f00c 6cfc 	and.w	ip, ip, #132120576	; 0x7e00000
 8020bac:	ea4c 0c03 	orr.w	ip, ip, r3
 8020bb0:	ebc2 034e 	rsb	r3, r2, lr, lsl #1
 8020bb4:	9311      	str	r3, [sp, #68]	; 0x44
 8020bb6:	9b0e      	ldr	r3, [sp, #56]	; 0x38
 8020bb8:	041b      	lsls	r3, r3, #16
 8020bba:	f425 6bfc 	bic.w	fp, r5, #2016	; 0x7e0
 8020bbe:	f003 63fc 	and.w	r3, r3, #132120576	; 0x7e00000
 8020bc2:	ea43 030b 	orr.w	r3, r3, fp
 8020bc6:	9d11      	ldr	r5, [sp, #68]	; 0x44
 8020bc8:	4353      	muls	r3, r2
 8020bca:	ea4f 4b01 	mov.w	fp, r1, lsl #16
 8020bce:	fb05 3c0c 	mla	ip, r5, ip, r3
 8020bd2:	f421 61fc 	bic.w	r1, r1, #2016	; 0x7e0
 8020bd6:	f00b 63fc 	and.w	r3, fp, #132120576	; 0x7e00000
 8020bda:	ea43 0b01 	orr.w	fp, r3, r1
 8020bde:	f1c0 0110 	rsb	r1, r0, #16
 8020be2:	9b0a      	ldr	r3, [sp, #40]	; 0x28
 8020be4:	eba1 0e0e 	sub.w	lr, r1, lr
 8020be8:	eb02 0e4e 	add.w	lr, r2, lr, lsl #1
 8020bec:	fb0e cc0b 	mla	ip, lr, fp, ip
 8020bf0:	ea4f 4b03 	mov.w	fp, r3, lsl #16
 8020bf4:	f423 6efc 	bic.w	lr, r3, #2016	; 0x7e0
 8020bf8:	f00b 6bfc 	and.w	fp, fp, #132120576	; 0x7e00000
 8020bfc:	ea4b 0e0e 	orr.w	lr, fp, lr
 8020c00:	ebc2 0240 	rsb	r2, r2, r0, lsl #1
 8020c04:	fb02 cc0e 	mla	ip, r2, lr, ip
 8020c08:	ea4f 535c 	mov.w	r3, ip, lsr #21
 8020c0c:	ea4f 1c5c 	mov.w	ip, ip, lsr #5
 8020c10:	f403 63fc 	and.w	r3, r3, #2016	; 0x7e0
 8020c14:	f42c 6cfc 	bic.w	ip, ip, #2016	; 0x7e0
 8020c18:	ea43 0c0c 	orr.w	ip, r3, ip
 8020c1c:	9b1f      	ldr	r3, [sp, #124]	; 0x7c
 8020c1e:	f82a cb02 	strh.w	ip, [sl], #2
 8020c22:	441c      	add	r4, r3
 8020c24:	9b20      	ldr	r3, [sp, #128]	; 0x80
 8020c26:	f108 38ff 	add.w	r8, r8, #4294967295
 8020c2a:	441e      	add	r6, r3
 8020c2c:	e723      	b.n	8020a76 <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x1e0>
 8020c2e:	2800      	cmp	r0, #0
 8020c30:	d0b1      	beq.n	8020b96 <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x300>
 8020c32:	5cd3      	ldrb	r3, [r2, r3]
 8020c34:	f837 3013 	ldrh.w	r3, [r7, r3, lsl #1]
 8020c38:	930a      	str	r3, [sp, #40]	; 0x28
 8020c3a:	e7ac      	b.n	8020b96 <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x300>
 8020c3c:	b013      	add	sp, #76	; 0x4c
 8020c3e:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}

08020c42 <_ZNK8touchgfx8LCD16bpp55TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKhS4_ssiihhh>:
 8020c42:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 8020c46:	880d      	ldrh	r5, [r1, #0]
 8020c48:	b087      	sub	sp, #28
 8020c4a:	10ef      	asrs	r7, r5, #3
 8020c4c:	ea4f 2a25 	mov.w	sl, r5, asr #8
 8020c50:	f007 07fc 	and.w	r7, r7, #252	; 0xfc
 8020c54:	00ed      	lsls	r5, r5, #3
 8020c56:	9701      	str	r7, [sp, #4]
 8020c58:	b2ed      	uxtb	r5, r5
 8020c5a:	9502      	str	r5, [sp, #8]
 8020c5c:	9d01      	ldr	r5, [sp, #4]
 8020c5e:	9103      	str	r1, [sp, #12]
 8020c60:	e9dd 0612 	ldrd	r0, r6, [sp, #72]	; 0x48
 8020c64:	f9bd 9040 	ldrsh.w	r9, [sp, #64]	; 0x40
 8020c68:	9902      	ldr	r1, [sp, #8]
 8020c6a:	f9bd b044 	ldrsh.w	fp, [sp, #68]	; 0x44
 8020c6e:	f89d 4050 	ldrb.w	r4, [sp, #80]	; 0x50
 8020c72:	f89d e054 	ldrb.w	lr, [sp, #84]	; 0x54
 8020c76:	f89d 8058 	ldrb.w	r8, [sp, #88]	; 0x58
 8020c7a:	f00a 0af8 	and.w	sl, sl, #248	; 0xf8
 8020c7e:	022d      	lsls	r5, r5, #8
 8020c80:	ea45 450a 	orr.w	r5, r5, sl, lsl #16
 8020c84:	fb06 0709 	mla	r7, r6, r9, r0
 8020c88:	430d      	orrs	r5, r1
 8020c8a:	2e00      	cmp	r6, #0
 8020c8c:	eb02 0c07 	add.w	ip, r2, r7
 8020c90:	9505      	str	r5, [sp, #20]
 8020c92:	f2c0 80b6 	blt.w	8020e02 <_ZNK8touchgfx8LCD16bpp55TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKhS4_ssiihhh+0x1c0>
 8020c96:	45b3      	cmp	fp, r6
 8020c98:	f340 80b3 	ble.w	8020e02 <_ZNK8touchgfx8LCD16bpp55TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKhS4_ssiihhh+0x1c0>
 8020c9c:	2800      	cmp	r0, #0
 8020c9e:	f2c0 80ae 	blt.w	8020dfe <_ZNK8touchgfx8LCD16bpp55TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKhS4_ssiihhh+0x1bc>
 8020ca2:	4581      	cmp	r9, r0
 8020ca4:	f340 80ab 	ble.w	8020dfe <_ZNK8touchgfx8LCD16bpp55TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKhS4_ssiihhh+0x1bc>
 8020ca8:	5dd7      	ldrb	r7, [r2, r7]
 8020caa:	eb07 0747 	add.w	r7, r7, r7, lsl #1
 8020cae:	441f      	add	r7, r3
 8020cb0:	1c42      	adds	r2, r0, #1
 8020cb2:	f100 80a9 	bmi.w	8020e08 <_ZNK8touchgfx8LCD16bpp55TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKhS4_ssiihhh+0x1c6>
 8020cb6:	4591      	cmp	r9, r2
 8020cb8:	f340 80a6 	ble.w	8020e08 <_ZNK8touchgfx8LCD16bpp55TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKhS4_ssiihhh+0x1c6>
 8020cbc:	2c00      	cmp	r4, #0
 8020cbe:	f000 80a3 	beq.w	8020e08 <_ZNK8touchgfx8LCD16bpp55TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKhS4_ssiihhh+0x1c6>
 8020cc2:	f89c 5001 	ldrb.w	r5, [ip, #1]
 8020cc6:	eb05 0545 	add.w	r5, r5, r5, lsl #1
 8020cca:	441d      	add	r5, r3
 8020ccc:	3601      	adds	r6, #1
 8020cce:	f100 809f 	bmi.w	8020e10 <_ZNK8touchgfx8LCD16bpp55TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKhS4_ssiihhh+0x1ce>
 8020cd2:	45b3      	cmp	fp, r6
 8020cd4:	f340 809c 	ble.w	8020e10 <_ZNK8touchgfx8LCD16bpp55TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKhS4_ssiihhh+0x1ce>
 8020cd8:	f1be 0f00 	cmp.w	lr, #0
 8020cdc:	f000 8098 	beq.w	8020e10 <_ZNK8touchgfx8LCD16bpp55TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKhS4_ssiihhh+0x1ce>
 8020ce0:	2800      	cmp	r0, #0
 8020ce2:	f2c0 8093 	blt.w	8020e0c <_ZNK8touchgfx8LCD16bpp55TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKhS4_ssiihhh+0x1ca>
 8020ce6:	4581      	cmp	r9, r0
 8020ce8:	f340 8090 	ble.w	8020e0c <_ZNK8touchgfx8LCD16bpp55TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKhS4_ssiihhh+0x1ca>
 8020cec:	f81c 6009 	ldrb.w	r6, [ip, r9]
 8020cf0:	eb06 0646 	add.w	r6, r6, r6, lsl #1
 8020cf4:	441e      	add	r6, r3
 8020cf6:	3001      	adds	r0, #1
 8020cf8:	f100 808d 	bmi.w	8020e16 <_ZNK8touchgfx8LCD16bpp55TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKhS4_ssiihhh+0x1d4>
 8020cfc:	4581      	cmp	r9, r0
 8020cfe:	f340 808a 	ble.w	8020e16 <_ZNK8touchgfx8LCD16bpp55TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKhS4_ssiihhh+0x1d4>
 8020d02:	2c00      	cmp	r4, #0
 8020d04:	f000 8087 	beq.w	8020e16 <_ZNK8touchgfx8LCD16bpp55TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKhS4_ssiihhh+0x1d4>
 8020d08:	44e1      	add	r9, ip
 8020d0a:	f899 2001 	ldrb.w	r2, [r9, #1]
 8020d0e:	eb02 0242 	add.w	r2, r2, r2, lsl #1
 8020d12:	4413      	add	r3, r2
 8020d14:	b2a4      	uxth	r4, r4
 8020d16:	fa1f fe8e 	uxth.w	lr, lr
 8020d1a:	fb04 fb0e 	mul.w	fp, r4, lr
 8020d1e:	0124      	lsls	r4, r4, #4
 8020d20:	ebcb 1e0e 	rsb	lr, fp, lr, lsl #4
 8020d24:	f5c4 7980 	rsb	r9, r4, #256	; 0x100
 8020d28:	eba4 040b 	sub.w	r4, r4, fp
 8020d2c:	fa1f f08e 	uxth.w	r0, lr
 8020d30:	b2a2      	uxth	r2, r4
 8020d32:	78ac      	ldrb	r4, [r5, #2]
 8020d34:	f897 c002 	ldrb.w	ip, [r7, #2]
 8020d38:	9901      	ldr	r1, [sp, #4]
 8020d3a:	eba9 0900 	sub.w	r9, r9, r0
 8020d3e:	fa1f f989 	uxth.w	r9, r9
 8020d42:	4354      	muls	r4, r2
 8020d44:	fb09 440c 	mla	r4, r9, ip, r4
 8020d48:	f896 c002 	ldrb.w	ip, [r6, #2]
 8020d4c:	fb00 440c 	mla	r4, r0, ip, r4
 8020d50:	f893 c002 	ldrb.w	ip, [r3, #2]
 8020d54:	fa1f fe88 	uxth.w	lr, r8
 8020d58:	ea6f 0808 	mvn.w	r8, r8
 8020d5c:	fa5f f888 	uxtb.w	r8, r8
 8020d60:	fb0b 4c0c 	mla	ip, fp, ip, r4
 8020d64:	fb1a fa08 	smulbb	sl, sl, r8
 8020d68:	f3cc 2c07 	ubfx	ip, ip, #8, #8
 8020d6c:	fb0c ac0e 	mla	ip, ip, lr, sl
 8020d70:	f895 a001 	ldrb.w	sl, [r5, #1]
 8020d74:	787c      	ldrb	r4, [r7, #1]
 8020d76:	782d      	ldrb	r5, [r5, #0]
 8020d78:	783f      	ldrb	r7, [r7, #0]
 8020d7a:	fb02 fa0a 	mul.w	sl, r2, sl
 8020d7e:	fb09 aa04 	mla	sl, r9, r4, sl
 8020d82:	7874      	ldrb	r4, [r6, #1]
 8020d84:	436a      	muls	r2, r5
 8020d86:	7835      	ldrb	r5, [r6, #0]
 8020d88:	fb00 aa04 	mla	sl, r0, r4, sl
 8020d8c:	fb09 2207 	mla	r2, r9, r7, r2
 8020d90:	785c      	ldrb	r4, [r3, #1]
 8020d92:	781b      	ldrb	r3, [r3, #0]
 8020d94:	fb00 2005 	mla	r0, r0, r5, r2
 8020d98:	fb0b a404 	mla	r4, fp, r4, sl
 8020d9c:	fb0b 0b03 	mla	fp, fp, r3, r0
 8020da0:	9b02      	ldr	r3, [sp, #8]
 8020da2:	fb11 fa08 	smulbb	sl, r1, r8
 8020da6:	fa1f fc8c 	uxth.w	ip, ip
 8020daa:	fb13 f808 	smulbb	r8, r3, r8
 8020dae:	f3cb 2b07 	ubfx	fp, fp, #8, #8
 8020db2:	f3c4 2407 	ubfx	r4, r4, #8, #8
 8020db6:	fb04 a40e 	mla	r4, r4, lr, sl
 8020dba:	f10c 0301 	add.w	r3, ip, #1
 8020dbe:	fb0b 8e0e 	mla	lr, fp, lr, r8
 8020dc2:	fa1f fe8e 	uxth.w	lr, lr
 8020dc6:	b2a4      	uxth	r4, r4
 8020dc8:	eb03 2c1c 	add.w	ip, r3, ip, lsr #8
 8020dcc:	f40c 4378 	and.w	r3, ip, #63488	; 0xf800
 8020dd0:	f104 0a01 	add.w	sl, r4, #1
 8020dd4:	f10e 0c01 	add.w	ip, lr, #1
 8020dd8:	eb0c 2c1e 	add.w	ip, ip, lr, lsr #8
 8020ddc:	eb0a 2414 	add.w	r4, sl, r4, lsr #8
 8020de0:	f3cc 2cc4 	ubfx	ip, ip, #11, #5
 8020de4:	0964      	lsrs	r4, r4, #5
 8020de6:	ea4c 0c03 	orr.w	ip, ip, r3
 8020dea:	f404 64fc 	and.w	r4, r4, #2016	; 0x7e0
 8020dee:	9b03      	ldr	r3, [sp, #12]
 8020df0:	ea4c 0c04 	orr.w	ip, ip, r4
 8020df4:	f8a3 c000 	strh.w	ip, [r3]
 8020df8:	b007      	add	sp, #28
 8020dfa:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
 8020dfe:	af05      	add	r7, sp, #20
 8020e00:	e756      	b.n	8020cb0 <_ZNK8touchgfx8LCD16bpp55TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKhS4_ssiihhh+0x6e>
 8020e02:	ad05      	add	r5, sp, #20
 8020e04:	462f      	mov	r7, r5
 8020e06:	e761      	b.n	8020ccc <_ZNK8touchgfx8LCD16bpp55TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKhS4_ssiihhh+0x8a>
 8020e08:	ad05      	add	r5, sp, #20
 8020e0a:	e75f      	b.n	8020ccc <_ZNK8touchgfx8LCD16bpp55TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKhS4_ssiihhh+0x8a>
 8020e0c:	ae05      	add	r6, sp, #20
 8020e0e:	e772      	b.n	8020cf6 <_ZNK8touchgfx8LCD16bpp55TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKhS4_ssiihhh+0xb4>
 8020e10:	ab05      	add	r3, sp, #20
 8020e12:	461e      	mov	r6, r3
 8020e14:	e77e      	b.n	8020d14 <_ZNK8touchgfx8LCD16bpp55TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKhS4_ssiihhh+0xd2>
 8020e16:	ab05      	add	r3, sp, #20
 8020e18:	e77c      	b.n	8020d14 <_ZNK8touchgfx8LCD16bpp55TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKhS4_ssiihhh+0xd2>

08020e1a <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff>:
 8020e1a:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 8020e1e:	b095      	sub	sp, #84	; 0x54
 8020e20:	9212      	str	r2, [sp, #72]	; 0x48
 8020e22:	9309      	str	r3, [sp, #36]	; 0x24
 8020e24:	9a23      	ldr	r2, [sp, #140]	; 0x8c
 8020e26:	f89d 309c 	ldrb.w	r3, [sp, #156]	; 0x9c
 8020e2a:	930f      	str	r3, [sp, #60]	; 0x3c
 8020e2c:	910e      	str	r1, [sp, #56]	; 0x38
 8020e2e:	e9dd 1324 	ldrd	r1, r3, [sp, #144]	; 0x90
 8020e32:	9013      	str	r0, [sp, #76]	; 0x4c
 8020e34:	6850      	ldr	r0, [r2, #4]
 8020e36:	6812      	ldr	r2, [r2, #0]
 8020e38:	fb00 1303 	mla	r3, r0, r3, r1
 8020e3c:	eb02 0343 	add.w	r3, r2, r3, lsl #1
 8020e40:	930a      	str	r3, [sp, #40]	; 0x28
 8020e42:	9b26      	ldr	r3, [sp, #152]	; 0x98
 8020e44:	681b      	ldr	r3, [r3, #0]
 8020e46:	930d      	str	r3, [sp, #52]	; 0x34
 8020e48:	9b26      	ldr	r3, [sp, #152]	; 0x98
 8020e4a:	685c      	ldr	r4, [r3, #4]
 8020e4c:	9b0f      	ldr	r3, [sp, #60]	; 0x3c
 8020e4e:	43db      	mvns	r3, r3
 8020e50:	b2db      	uxtb	r3, r3
 8020e52:	3404      	adds	r4, #4
 8020e54:	930b      	str	r3, [sp, #44]	; 0x2c
 8020e56:	9b0e      	ldr	r3, [sp, #56]	; 0x38
 8020e58:	2b00      	cmp	r3, #0
 8020e5a:	dc03      	bgt.n	8020e64 <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x4a>
 8020e5c:	9b12      	ldr	r3, [sp, #72]	; 0x48
 8020e5e:	2b00      	cmp	r3, #0
 8020e60:	f340 8255 	ble.w	802130e <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x4f4>
 8020e64:	9b26      	ldr	r3, [sp, #152]	; 0x98
 8020e66:	f9b3 1008 	ldrsh.w	r1, [r3, #8]
 8020e6a:	f9b3 200c 	ldrsh.w	r2, [r3, #12]
 8020e6e:	1e48      	subs	r0, r1, #1
 8020e70:	1e55      	subs	r5, r2, #1
 8020e72:	9b09      	ldr	r3, [sp, #36]	; 0x24
 8020e74:	2b00      	cmp	r3, #0
 8020e76:	f340 80f9 	ble.w	802106c <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x252>
 8020e7a:	9e1f      	ldr	r6, [sp, #124]	; 0x7c
 8020e7c:	9b20      	ldr	r3, [sp, #128]	; 0x80
 8020e7e:	1436      	asrs	r6, r6, #16
 8020e80:	ea4f 4323 	mov.w	r3, r3, asr #16
 8020e84:	d406      	bmi.n	8020e94 <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x7a>
 8020e86:	4286      	cmp	r6, r0
 8020e88:	da04      	bge.n	8020e94 <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x7a>
 8020e8a:	2b00      	cmp	r3, #0
 8020e8c:	db02      	blt.n	8020e94 <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x7a>
 8020e8e:	42ab      	cmp	r3, r5
 8020e90:	f2c0 80ed 	blt.w	802106e <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x254>
 8020e94:	3601      	adds	r6, #1
 8020e96:	f100 80da 	bmi.w	802104e <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x234>
 8020e9a:	42b1      	cmp	r1, r6
 8020e9c:	f2c0 80d7 	blt.w	802104e <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x234>
 8020ea0:	3301      	adds	r3, #1
 8020ea2:	f100 80d4 	bmi.w	802104e <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x234>
 8020ea6:	429a      	cmp	r2, r3
 8020ea8:	f2c0 80d1 	blt.w	802104e <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x234>
 8020eac:	9b09      	ldr	r3, [sp, #36]	; 0x24
 8020eae:	9311      	str	r3, [sp, #68]	; 0x44
 8020eb0:	9b0a      	ldr	r3, [sp, #40]	; 0x28
 8020eb2:	930c      	str	r3, [sp, #48]	; 0x30
 8020eb4:	9b11      	ldr	r3, [sp, #68]	; 0x44
 8020eb6:	2b00      	cmp	r3, #0
 8020eb8:	f340 80fa 	ble.w	80210b0 <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x296>
 8020ebc:	9826      	ldr	r0, [sp, #152]	; 0x98
 8020ebe:	9b20      	ldr	r3, [sp, #128]	; 0x80
 8020ec0:	9a20      	ldr	r2, [sp, #128]	; 0x80
 8020ec2:	68c6      	ldr	r6, [r0, #12]
 8020ec4:	981f      	ldr	r0, [sp, #124]	; 0x7c
 8020ec6:	141d      	asrs	r5, r3, #16
 8020ec8:	f3c2 3103 	ubfx	r1, r2, #12, #4
 8020ecc:	9b1f      	ldr	r3, [sp, #124]	; 0x7c
 8020ece:	9a26      	ldr	r2, [sp, #152]	; 0x98
 8020ed0:	1400      	asrs	r0, r0, #16
 8020ed2:	f3c3 3303 	ubfx	r3, r3, #12, #4
 8020ed6:	6892      	ldr	r2, [r2, #8]
 8020ed8:	f100 813e 	bmi.w	8021158 <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x33e>
 8020edc:	1e57      	subs	r7, r2, #1
 8020ede:	42b8      	cmp	r0, r7
 8020ee0:	f280 813a 	bge.w	8021158 <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x33e>
 8020ee4:	2d00      	cmp	r5, #0
 8020ee6:	f2c0 8137 	blt.w	8021158 <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x33e>
 8020eea:	1e77      	subs	r7, r6, #1
 8020eec:	42bd      	cmp	r5, r7
 8020eee:	f280 8133 	bge.w	8021158 <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x33e>
 8020ef2:	b212      	sxth	r2, r2
 8020ef4:	fb05 0002 	mla	r0, r5, r2, r0
 8020ef8:	9d0d      	ldr	r5, [sp, #52]	; 0x34
 8020efa:	f815 a000 	ldrb.w	sl, [r5, r0]
 8020efe:	eb0a 0a4a 	add.w	sl, sl, sl, lsl #1
 8020f02:	182e      	adds	r6, r5, r0
 8020f04:	eb04 050a 	add.w	r5, r4, sl
 8020f08:	2b00      	cmp	r3, #0
 8020f0a:	f000 8117 	beq.w	802113c <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x322>
 8020f0e:	f896 c001 	ldrb.w	ip, [r6, #1]
 8020f12:	eb0c 0c4c 	add.w	ip, ip, ip, lsl #1
 8020f16:	44a4      	add	ip, r4
 8020f18:	2900      	cmp	r1, #0
 8020f1a:	f000 8117 	beq.w	802114c <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x332>
 8020f1e:	18b0      	adds	r0, r6, r2
 8020f20:	5cb2      	ldrb	r2, [r6, r2]
 8020f22:	7840      	ldrb	r0, [r0, #1]
 8020f24:	eb02 0242 	add.w	r2, r2, r2, lsl #1
 8020f28:	eb00 0040 	add.w	r0, r0, r0, lsl #1
 8020f2c:	4422      	add	r2, r4
 8020f2e:	4420      	add	r0, r4
 8020f30:	b29b      	uxth	r3, r3
 8020f32:	b289      	uxth	r1, r1
 8020f34:	fb03 f901 	mul.w	r9, r3, r1
 8020f38:	ebc9 1101 	rsb	r1, r9, r1, lsl #4
 8020f3c:	011b      	lsls	r3, r3, #4
 8020f3e:	b289      	uxth	r1, r1
 8020f40:	f89c 7002 	ldrb.w	r7, [ip, #2]
 8020f44:	f895 b002 	ldrb.w	fp, [r5, #2]
 8020f48:	9e0c      	ldr	r6, [sp, #48]	; 0x30
 8020f4a:	f814 a00a 	ldrb.w	sl, [r4, sl]
 8020f4e:	f8b6 e000 	ldrh.w	lr, [r6]
 8020f52:	f8bd 603c 	ldrh.w	r6, [sp, #60]	; 0x3c
 8020f56:	f5c3 7880 	rsb	r8, r3, #256	; 0x100
 8020f5a:	eba3 0309 	sub.w	r3, r3, r9
 8020f5e:	b29b      	uxth	r3, r3
 8020f60:	eba8 0801 	sub.w	r8, r8, r1
 8020f64:	fa1f f888 	uxth.w	r8, r8
 8020f68:	435f      	muls	r7, r3
 8020f6a:	fb08 770b 	mla	r7, r8, fp, r7
 8020f6e:	f892 b002 	ldrb.w	fp, [r2, #2]
 8020f72:	9310      	str	r3, [sp, #64]	; 0x40
 8020f74:	fb01 770b 	mla	r7, r1, fp, r7
 8020f78:	f890 b002 	ldrb.w	fp, [r0, #2]
 8020f7c:	9b0b      	ldr	r3, [sp, #44]	; 0x2c
 8020f7e:	fb09 770b 	mla	r7, r9, fp, r7
 8020f82:	ea4f 2b2e 	mov.w	fp, lr, asr #8
 8020f86:	f00b 0bf8 	and.w	fp, fp, #248	; 0xf8
 8020f8a:	fb1b fb03 	smulbb	fp, fp, r3
 8020f8e:	f3c7 2707 	ubfx	r7, r7, #8, #8
 8020f92:	fb07 b706 	mla	r7, r7, r6, fp
 8020f96:	9b10      	ldr	r3, [sp, #64]	; 0x40
 8020f98:	f895 b001 	ldrb.w	fp, [r5, #1]
 8020f9c:	f89c 5001 	ldrb.w	r5, [ip, #1]
 8020fa0:	f89c c000 	ldrb.w	ip, [ip]
 8020fa4:	435d      	muls	r5, r3
 8020fa6:	fb08 550b 	mla	r5, r8, fp, r5
 8020faa:	f892 b001 	ldrb.w	fp, [r2, #1]
 8020fae:	9b0b      	ldr	r3, [sp, #44]	; 0x2c
 8020fb0:	fb01 550b 	mla	r5, r1, fp, r5
 8020fb4:	f890 b001 	ldrb.w	fp, [r0, #1]
 8020fb8:	fb09 550b 	mla	r5, r9, fp, r5
 8020fbc:	ea4f 0bee 	mov.w	fp, lr, asr #3
 8020fc0:	f00b 0bfc 	and.w	fp, fp, #252	; 0xfc
 8020fc4:	fb1b fb03 	smulbb	fp, fp, r3
 8020fc8:	9b10      	ldr	r3, [sp, #64]	; 0x40
 8020fca:	fb03 f30c 	mul.w	r3, r3, ip
 8020fce:	f892 c000 	ldrb.w	ip, [r2]
 8020fd2:	fb08 330a 	mla	r3, r8, sl, r3
 8020fd6:	fb01 330c 	mla	r3, r1, ip, r3
 8020fda:	f890 c000 	ldrb.w	ip, [r0]
 8020fde:	ea4f 0ece 	mov.w	lr, lr, lsl #3
 8020fe2:	fb09 3c0c 	mla	ip, r9, ip, r3
 8020fe6:	9b0b      	ldr	r3, [sp, #44]	; 0x2c
 8020fe8:	fa5f fe8e 	uxtb.w	lr, lr
 8020fec:	b2bf      	uxth	r7, r7
 8020fee:	fb1e fe03 	smulbb	lr, lr, r3
 8020ff2:	f3c5 2507 	ubfx	r5, r5, #8, #8
 8020ff6:	f3cc 2c07 	ubfx	ip, ip, #8, #8
 8020ffa:	fb05 b506 	mla	r5, r5, r6, fp
 8020ffe:	1c7b      	adds	r3, r7, #1
 8021000:	fb0c e606 	mla	r6, ip, r6, lr
 8021004:	b2ad      	uxth	r5, r5
 8021006:	b2b6      	uxth	r6, r6
 8021008:	eb03 2717 	add.w	r7, r3, r7, lsr #8
 802100c:	f407 4378 	and.w	r3, r7, #63488	; 0xf800
 8021010:	f105 0b01 	add.w	fp, r5, #1
 8021014:	1c77      	adds	r7, r6, #1
 8021016:	eb07 2716 	add.w	r7, r7, r6, lsr #8
 802101a:	eb0b 2515 	add.w	r5, fp, r5, lsr #8
 802101e:	f3c7 27c4 	ubfx	r7, r7, #11, #5
 8021022:	096d      	lsrs	r5, r5, #5
 8021024:	431f      	orrs	r7, r3
 8021026:	f405 65fc 	and.w	r5, r5, #2016	; 0x7e0
 802102a:	9b0c      	ldr	r3, [sp, #48]	; 0x30
 802102c:	433d      	orrs	r5, r7
 802102e:	801d      	strh	r5, [r3, #0]
 8021030:	9b0c      	ldr	r3, [sp, #48]	; 0x30
 8021032:	9a21      	ldr	r2, [sp, #132]	; 0x84
 8021034:	3302      	adds	r3, #2
 8021036:	930c      	str	r3, [sp, #48]	; 0x30
 8021038:	9b1f      	ldr	r3, [sp, #124]	; 0x7c
 802103a:	4413      	add	r3, r2
 802103c:	931f      	str	r3, [sp, #124]	; 0x7c
 802103e:	9a22      	ldr	r2, [sp, #136]	; 0x88
 8021040:	9b20      	ldr	r3, [sp, #128]	; 0x80
 8021042:	4413      	add	r3, r2
 8021044:	9320      	str	r3, [sp, #128]	; 0x80
 8021046:	9b11      	ldr	r3, [sp, #68]	; 0x44
 8021048:	3b01      	subs	r3, #1
 802104a:	9311      	str	r3, [sp, #68]	; 0x44
 802104c:	e732      	b.n	8020eb4 <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x9a>
 802104e:	9b1f      	ldr	r3, [sp, #124]	; 0x7c
 8021050:	9e21      	ldr	r6, [sp, #132]	; 0x84
 8021052:	4433      	add	r3, r6
 8021054:	931f      	str	r3, [sp, #124]	; 0x7c
 8021056:	9e22      	ldr	r6, [sp, #136]	; 0x88
 8021058:	9b20      	ldr	r3, [sp, #128]	; 0x80
 802105a:	4433      	add	r3, r6
 802105c:	9320      	str	r3, [sp, #128]	; 0x80
 802105e:	9b09      	ldr	r3, [sp, #36]	; 0x24
 8021060:	3b01      	subs	r3, #1
 8021062:	9309      	str	r3, [sp, #36]	; 0x24
 8021064:	9b0a      	ldr	r3, [sp, #40]	; 0x28
 8021066:	3302      	adds	r3, #2
 8021068:	930a      	str	r3, [sp, #40]	; 0x28
 802106a:	e702      	b.n	8020e72 <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x58>
 802106c:	d027      	beq.n	80210be <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x2a4>
 802106e:	9b09      	ldr	r3, [sp, #36]	; 0x24
 8021070:	9821      	ldr	r0, [sp, #132]	; 0x84
 8021072:	9d1f      	ldr	r5, [sp, #124]	; 0x7c
 8021074:	3b01      	subs	r3, #1
 8021076:	fb00 5003 	mla	r0, r0, r3, r5
 802107a:	1400      	asrs	r0, r0, #16
 802107c:	f53f af16 	bmi.w	8020eac <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x92>
 8021080:	3901      	subs	r1, #1
 8021082:	4288      	cmp	r0, r1
 8021084:	f6bf af12 	bge.w	8020eac <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x92>
 8021088:	9922      	ldr	r1, [sp, #136]	; 0x88
 802108a:	9820      	ldr	r0, [sp, #128]	; 0x80
 802108c:	fb01 0303 	mla	r3, r1, r3, r0
 8021090:	141b      	asrs	r3, r3, #16
 8021092:	f53f af0b 	bmi.w	8020eac <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x92>
 8021096:	3a01      	subs	r2, #1
 8021098:	4293      	cmp	r3, r2
 802109a:	f6bf af07 	bge.w	8020eac <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x92>
 802109e:	9b09      	ldr	r3, [sp, #36]	; 0x24
 80210a0:	9311      	str	r3, [sp, #68]	; 0x44
 80210a2:	f8bd a03c 	ldrh.w	sl, [sp, #60]	; 0x3c
 80210a6:	9b0a      	ldr	r3, [sp, #40]	; 0x28
 80210a8:	930c      	str	r3, [sp, #48]	; 0x30
 80210aa:	9b11      	ldr	r3, [sp, #68]	; 0x44
 80210ac:	2b00      	cmp	r3, #0
 80210ae:	dc70      	bgt.n	8021192 <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x378>
 80210b0:	9b09      	ldr	r3, [sp, #36]	; 0x24
 80210b2:	9a0a      	ldr	r2, [sp, #40]	; 0x28
 80210b4:	ea23 73e3 	bic.w	r3, r3, r3, asr #31
 80210b8:	eb02 0343 	add.w	r3, r2, r3, lsl #1
 80210bc:	930a      	str	r3, [sp, #40]	; 0x28
 80210be:	9b0e      	ldr	r3, [sp, #56]	; 0x38
 80210c0:	2b00      	cmp	r3, #0
 80210c2:	f340 8124 	ble.w	802130e <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x4f4>
 80210c6:	ee30 0a04 	vadd.f32	s0, s0, s8
 80210ca:	eeb7 7a00 	vmov.f32	s14, #112	; 0x3f800000  1.0
 80210ce:	eec7 7a00 	vdiv.f32	s15, s14, s0
 80210d2:	9b1e      	ldr	r3, [sp, #120]	; 0x78
 80210d4:	ee70 0aa4 	vadd.f32	s1, s1, s9
 80210d8:	ee31 1a05 	vadd.f32	s2, s2, s10
 80210dc:	ee20 7aa7 	vmul.f32	s14, s1, s15
 80210e0:	eef0 6a62 	vmov.f32	s13, s5
 80210e4:	ee61 7a27 	vmul.f32	s15, s2, s15
 80210e8:	eefe 6ac8 	vcvt.s32.f32	s13, s13, #16
 80210ec:	ee77 2a62 	vsub.f32	s5, s14, s5
 80210f0:	edcd 6a1f 	vstr	s13, [sp, #124]	; 0x7c
 80210f4:	eefe 2ac8 	vcvt.s32.f32	s5, s5, #16
 80210f8:	eef0 6a43 	vmov.f32	s13, s6
 80210fc:	ee37 3ac3 	vsub.f32	s6, s15, s6
 8021100:	ee12 2a90 	vmov	r2, s5
 8021104:	eebe 3ac8 	vcvt.s32.f32	s6, s6, #16
 8021108:	fb92 f3f3 	sdiv	r3, r2, r3
 802110c:	ee13 2a10 	vmov	r2, s6
 8021110:	9321      	str	r3, [sp, #132]	; 0x84
 8021112:	9b1e      	ldr	r3, [sp, #120]	; 0x78
 8021114:	fb92 f3f3 	sdiv	r3, r2, r3
 8021118:	9322      	str	r3, [sp, #136]	; 0x88
 802111a:	9b0e      	ldr	r3, [sp, #56]	; 0x38
 802111c:	9a12      	ldr	r2, [sp, #72]	; 0x48
 802111e:	3b01      	subs	r3, #1
 8021120:	eefe 6ac8 	vcvt.s32.f32	s13, s13, #16
 8021124:	930e      	str	r3, [sp, #56]	; 0x38
 8021126:	9b1e      	ldr	r3, [sp, #120]	; 0x78
 8021128:	edcd 6a20 	vstr	s13, [sp, #128]	; 0x80
 802112c:	bf08      	it	eq
 802112e:	4613      	moveq	r3, r2
 8021130:	9309      	str	r3, [sp, #36]	; 0x24
 8021132:	eeb0 3a67 	vmov.f32	s6, s15
 8021136:	eef0 2a47 	vmov.f32	s5, s14
 802113a:	e68c      	b.n	8020e56 <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x3c>
 802113c:	b149      	cbz	r1, 8021152 <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x338>
 802113e:	5cb2      	ldrb	r2, [r6, r2]
 8021140:	eb02 0242 	add.w	r2, r2, r2, lsl #1
 8021144:	4422      	add	r2, r4
 8021146:	4628      	mov	r0, r5
 8021148:	46ac      	mov	ip, r5
 802114a:	e6f1      	b.n	8020f30 <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x116>
 802114c:	4628      	mov	r0, r5
 802114e:	462a      	mov	r2, r5
 8021150:	e6ee      	b.n	8020f30 <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x116>
 8021152:	4628      	mov	r0, r5
 8021154:	462a      	mov	r2, r5
 8021156:	e7f7      	b.n	8021148 <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x32e>
 8021158:	1c47      	adds	r7, r0, #1
 802115a:	f53f af69 	bmi.w	8021030 <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x216>
 802115e:	42ba      	cmp	r2, r7
 8021160:	f6ff af66 	blt.w	8021030 <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x216>
 8021164:	1c6f      	adds	r7, r5, #1
 8021166:	f53f af63 	bmi.w	8021030 <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x216>
 802116a:	42be      	cmp	r6, r7
 802116c:	f6ff af60 	blt.w	8021030 <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x216>
 8021170:	9f0f      	ldr	r7, [sp, #60]	; 0x3c
 8021172:	9002      	str	r0, [sp, #8]
 8021174:	b236      	sxth	r6, r6
 8021176:	b212      	sxth	r2, r2
 8021178:	e9cd 1705 	strd	r1, r7, [sp, #20]
 802117c:	e9cd 5303 	strd	r5, r3, [sp, #12]
 8021180:	9200      	str	r2, [sp, #0]
 8021182:	9601      	str	r6, [sp, #4]
 8021184:	4623      	mov	r3, r4
 8021186:	e9dd 120c 	ldrd	r1, r2, [sp, #48]	; 0x30
 802118a:	9813      	ldr	r0, [sp, #76]	; 0x4c
 802118c:	f7ff fd59 	bl	8020c42 <_ZNK8touchgfx8LCD16bpp55TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKhS4_ssiihhh>
 8021190:	e74e      	b.n	8021030 <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x216>
 8021192:	9a20      	ldr	r2, [sp, #128]	; 0x80
 8021194:	9820      	ldr	r0, [sp, #128]	; 0x80
 8021196:	9d1f      	ldr	r5, [sp, #124]	; 0x7c
 8021198:	9b1f      	ldr	r3, [sp, #124]	; 0x7c
 802119a:	f3c2 3103 	ubfx	r1, r2, #12, #4
 802119e:	9a26      	ldr	r2, [sp, #152]	; 0x98
 80211a0:	f9b2 2008 	ldrsh.w	r2, [r2, #8]
 80211a4:	142d      	asrs	r5, r5, #16
 80211a6:	1400      	asrs	r0, r0, #16
 80211a8:	fb02 5000 	mla	r0, r2, r0, r5
 80211ac:	9d0d      	ldr	r5, [sp, #52]	; 0x34
 80211ae:	f815 9000 	ldrb.w	r9, [r5, r0]
 80211b2:	f3c3 3303 	ubfx	r3, r3, #12, #4
 80211b6:	eb09 0949 	add.w	r9, r9, r9, lsl #1
 80211ba:	182e      	adds	r6, r5, r0
 80211bc:	eb04 0509 	add.w	r5, r4, r9
 80211c0:	2b00      	cmp	r3, #0
 80211c2:	f000 8096 	beq.w	80212f2 <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x4d8>
 80211c6:	7877      	ldrb	r7, [r6, #1]
 80211c8:	eb07 0747 	add.w	r7, r7, r7, lsl #1
 80211cc:	4427      	add	r7, r4
 80211ce:	2900      	cmp	r1, #0
 80211d0:	f000 8097 	beq.w	8021302 <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x4e8>
 80211d4:	18b0      	adds	r0, r6, r2
 80211d6:	5cb2      	ldrb	r2, [r6, r2]
 80211d8:	7840      	ldrb	r0, [r0, #1]
 80211da:	eb02 0242 	add.w	r2, r2, r2, lsl #1
 80211de:	eb00 0040 	add.w	r0, r0, r0, lsl #1
 80211e2:	4422      	add	r2, r4
 80211e4:	4420      	add	r0, r4
 80211e6:	b29b      	uxth	r3, r3
 80211e8:	b289      	uxth	r1, r1
 80211ea:	fb03 f801 	mul.w	r8, r3, r1
 80211ee:	9e0c      	ldr	r6, [sp, #48]	; 0x30
 80211f0:	f895 b002 	ldrb.w	fp, [r5, #2]
 80211f4:	f8b6 c000 	ldrh.w	ip, [r6]
 80211f8:	78be      	ldrb	r6, [r7, #2]
 80211fa:	f814 9009 	ldrb.w	r9, [r4, r9]
 80211fe:	011b      	lsls	r3, r3, #4
 8021200:	ebc8 1101 	rsb	r1, r8, r1, lsl #4
 8021204:	b289      	uxth	r1, r1
 8021206:	f5c3 7e80 	rsb	lr, r3, #256	; 0x100
 802120a:	eba3 0308 	sub.w	r3, r3, r8
 802120e:	b29b      	uxth	r3, r3
 8021210:	ebae 0e01 	sub.w	lr, lr, r1
 8021214:	fa1f fe8e 	uxth.w	lr, lr
 8021218:	435e      	muls	r6, r3
 802121a:	fb0e 660b 	mla	r6, lr, fp, r6
 802121e:	f892 b002 	ldrb.w	fp, [r2, #2]
 8021222:	9310      	str	r3, [sp, #64]	; 0x40
 8021224:	fb01 660b 	mla	r6, r1, fp, r6
 8021228:	f890 b002 	ldrb.w	fp, [r0, #2]
 802122c:	9b0b      	ldr	r3, [sp, #44]	; 0x2c
 802122e:	fb08 660b 	mla	r6, r8, fp, r6
 8021232:	ea4f 2b2c 	mov.w	fp, ip, asr #8
 8021236:	f00b 0bf8 	and.w	fp, fp, #248	; 0xf8
 802123a:	fb1b fb03 	smulbb	fp, fp, r3
 802123e:	f3c6 2607 	ubfx	r6, r6, #8, #8
 8021242:	fb06 b60a 	mla	r6, r6, sl, fp
 8021246:	9b10      	ldr	r3, [sp, #64]	; 0x40
 8021248:	f895 b001 	ldrb.w	fp, [r5, #1]
 802124c:	787d      	ldrb	r5, [r7, #1]
 802124e:	783f      	ldrb	r7, [r7, #0]
 8021250:	435d      	muls	r5, r3
 8021252:	fb0e 550b 	mla	r5, lr, fp, r5
 8021256:	f892 b001 	ldrb.w	fp, [r2, #1]
 802125a:	9b0b      	ldr	r3, [sp, #44]	; 0x2c
 802125c:	fb01 550b 	mla	r5, r1, fp, r5
 8021260:	f890 b001 	ldrb.w	fp, [r0, #1]
 8021264:	fb08 550b 	mla	r5, r8, fp, r5
 8021268:	ea4f 0bec 	mov.w	fp, ip, asr #3
 802126c:	f00b 0bfc 	and.w	fp, fp, #252	; 0xfc
 8021270:	fb1b fb03 	smulbb	fp, fp, r3
 8021274:	9b10      	ldr	r3, [sp, #64]	; 0x40
 8021276:	437b      	muls	r3, r7
 8021278:	7817      	ldrb	r7, [r2, #0]
 802127a:	fb0e 3309 	mla	r3, lr, r9, r3
 802127e:	fb01 3307 	mla	r3, r1, r7, r3
 8021282:	7807      	ldrb	r7, [r0, #0]
 8021284:	ea4f 0ccc 	mov.w	ip, ip, lsl #3
 8021288:	fb08 3707 	mla	r7, r8, r7, r3
 802128c:	9b0b      	ldr	r3, [sp, #44]	; 0x2c
 802128e:	fa5f fc8c 	uxtb.w	ip, ip
 8021292:	fb1c fc03 	smulbb	ip, ip, r3
 8021296:	f3c5 2507 	ubfx	r5, r5, #8, #8
 802129a:	f3c7 2707 	ubfx	r7, r7, #8, #8
 802129e:	fb05 b50a 	mla	r5, r5, sl, fp
 80212a2:	fb07 c70a 	mla	r7, r7, sl, ip
 80212a6:	b2b6      	uxth	r6, r6
 80212a8:	b2ad      	uxth	r5, r5
 80212aa:	b2bf      	uxth	r7, r7
 80212ac:	1c73      	adds	r3, r6, #1
 80212ae:	1c7a      	adds	r2, r7, #1
 80212b0:	f105 0b01 	add.w	fp, r5, #1
 80212b4:	eb03 2616 	add.w	r6, r3, r6, lsr #8
 80212b8:	eb02 2217 	add.w	r2, r2, r7, lsr #8
 80212bc:	eb0b 2515 	add.w	r5, fp, r5, lsr #8
 80212c0:	f3c2 22c4 	ubfx	r2, r2, #11, #5
 80212c4:	f406 4678 	and.w	r6, r6, #63488	; 0xf800
 80212c8:	096d      	lsrs	r5, r5, #5
 80212ca:	9b0c      	ldr	r3, [sp, #48]	; 0x30
 80212cc:	4316      	orrs	r6, r2
 80212ce:	f405 65fc 	and.w	r5, r5, #2016	; 0x7e0
 80212d2:	432e      	orrs	r6, r5
 80212d4:	f823 6b02 	strh.w	r6, [r3], #2
 80212d8:	9a21      	ldr	r2, [sp, #132]	; 0x84
 80212da:	930c      	str	r3, [sp, #48]	; 0x30
 80212dc:	9b1f      	ldr	r3, [sp, #124]	; 0x7c
 80212de:	4413      	add	r3, r2
 80212e0:	931f      	str	r3, [sp, #124]	; 0x7c
 80212e2:	9a22      	ldr	r2, [sp, #136]	; 0x88
 80212e4:	9b20      	ldr	r3, [sp, #128]	; 0x80
 80212e6:	4413      	add	r3, r2
 80212e8:	9320      	str	r3, [sp, #128]	; 0x80
 80212ea:	9b11      	ldr	r3, [sp, #68]	; 0x44
 80212ec:	3b01      	subs	r3, #1
 80212ee:	9311      	str	r3, [sp, #68]	; 0x44
 80212f0:	e6db      	b.n	80210aa <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x290>
 80212f2:	b149      	cbz	r1, 8021308 <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x4ee>
 80212f4:	5cb2      	ldrb	r2, [r6, r2]
 80212f6:	eb02 0242 	add.w	r2, r2, r2, lsl #1
 80212fa:	4422      	add	r2, r4
 80212fc:	4628      	mov	r0, r5
 80212fe:	462f      	mov	r7, r5
 8021300:	e771      	b.n	80211e6 <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x3cc>
 8021302:	4628      	mov	r0, r5
 8021304:	462a      	mov	r2, r5
 8021306:	e76e      	b.n	80211e6 <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x3cc>
 8021308:	4628      	mov	r0, r5
 802130a:	462a      	mov	r2, r5
 802130c:	e7f7      	b.n	80212fe <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x4e4>
 802130e:	b015      	add	sp, #84	; 0x54
 8021310:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}

08021314 <_ZNK8touchgfx8LCD16bpp57TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhS4_ssiihh>:
 8021314:	e92d 4ff7 	stmdb	sp!, {r0, r1, r2, r4, r5, r6, r7, r8, r9, sl, fp, lr}
 8021318:	880f      	ldrh	r7, [r1, #0]
 802131a:	f9bd e030 	ldrsh.w	lr, [sp, #48]	; 0x30
 802131e:	f9bd 9034 	ldrsh.w	r9, [sp, #52]	; 0x34
 8021322:	f89d 0040 	ldrb.w	r0, [sp, #64]	; 0x40
 8021326:	f89d 6044 	ldrb.w	r6, [sp, #68]	; 0x44
 802132a:	023c      	lsls	r4, r7, #8
 802132c:	e9dd c50e 	ldrd	ip, r5, [sp, #56]	; 0x38
 8021330:	f404 0b78 	and.w	fp, r4, #16252928	; 0xf80000
 8021334:	017c      	lsls	r4, r7, #5
 8021336:	f404 447c 	and.w	r4, r4, #64512	; 0xfc00
 802133a:	00ff      	lsls	r7, r7, #3
 802133c:	ea4b 0404 	orr.w	r4, fp, r4
 8021340:	b2ff      	uxtb	r7, r7
 8021342:	fb05 ca0e 	mla	sl, r5, lr, ip
 8021346:	4327      	orrs	r7, r4
 8021348:	2d00      	cmp	r5, #0
 802134a:	eb02 080a 	add.w	r8, r2, sl
 802134e:	9701      	str	r7, [sp, #4]
 8021350:	db7e      	blt.n	8021450 <_ZNK8touchgfx8LCD16bpp57TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhS4_ssiihh+0x13c>
 8021352:	45a9      	cmp	r9, r5
 8021354:	dd7c      	ble.n	8021450 <_ZNK8touchgfx8LCD16bpp57TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhS4_ssiihh+0x13c>
 8021356:	f1bc 0f00 	cmp.w	ip, #0
 802135a:	db77      	blt.n	802144c <_ZNK8touchgfx8LCD16bpp57TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhS4_ssiihh+0x138>
 802135c:	45e6      	cmp	lr, ip
 802135e:	dd75      	ble.n	802144c <_ZNK8touchgfx8LCD16bpp57TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhS4_ssiihh+0x138>
 8021360:	f812 700a 	ldrb.w	r7, [r2, sl]
 8021364:	eb07 0747 	add.w	r7, r7, r7, lsl #1
 8021368:	441f      	add	r7, r3
 802136a:	f11c 0201 	adds.w	r2, ip, #1
 802136e:	d472      	bmi.n	8021456 <_ZNK8touchgfx8LCD16bpp57TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhS4_ssiihh+0x142>
 8021370:	4596      	cmp	lr, r2
 8021372:	dd70      	ble.n	8021456 <_ZNK8touchgfx8LCD16bpp57TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhS4_ssiihh+0x142>
 8021374:	2800      	cmp	r0, #0
 8021376:	d06e      	beq.n	8021456 <_ZNK8touchgfx8LCD16bpp57TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhS4_ssiihh+0x142>
 8021378:	f898 4001 	ldrb.w	r4, [r8, #1]
 802137c:	eb04 0444 	add.w	r4, r4, r4, lsl #1
 8021380:	441c      	add	r4, r3
 8021382:	3501      	adds	r5, #1
 8021384:	d46b      	bmi.n	802145e <_ZNK8touchgfx8LCD16bpp57TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhS4_ssiihh+0x14a>
 8021386:	45a9      	cmp	r9, r5
 8021388:	dd69      	ble.n	802145e <_ZNK8touchgfx8LCD16bpp57TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhS4_ssiihh+0x14a>
 802138a:	2e00      	cmp	r6, #0
 802138c:	d067      	beq.n	802145e <_ZNK8touchgfx8LCD16bpp57TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhS4_ssiihh+0x14a>
 802138e:	f1bc 0f00 	cmp.w	ip, #0
 8021392:	db62      	blt.n	802145a <_ZNK8touchgfx8LCD16bpp57TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhS4_ssiihh+0x146>
 8021394:	45e6      	cmp	lr, ip
 8021396:	dd60      	ble.n	802145a <_ZNK8touchgfx8LCD16bpp57TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhS4_ssiihh+0x146>
 8021398:	f818 500e 	ldrb.w	r5, [r8, lr]
 802139c:	eb05 0545 	add.w	r5, r5, r5, lsl #1
 80213a0:	441d      	add	r5, r3
 80213a2:	f11c 0201 	adds.w	r2, ip, #1
 80213a6:	d45d      	bmi.n	8021464 <_ZNK8touchgfx8LCD16bpp57TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhS4_ssiihh+0x150>
 80213a8:	4596      	cmp	lr, r2
 80213aa:	dd5b      	ble.n	8021464 <_ZNK8touchgfx8LCD16bpp57TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhS4_ssiihh+0x150>
 80213ac:	2800      	cmp	r0, #0
 80213ae:	d059      	beq.n	8021464 <_ZNK8touchgfx8LCD16bpp57TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhS4_ssiihh+0x150>
 80213b0:	44c6      	add	lr, r8
 80213b2:	f89e 2001 	ldrb.w	r2, [lr, #1]
 80213b6:	eb02 0242 	add.w	r2, r2, r2, lsl #1
 80213ba:	4413      	add	r3, r2
 80213bc:	b280      	uxth	r0, r0
 80213be:	b2b2      	uxth	r2, r6
 80213c0:	fb00 f602 	mul.w	r6, r0, r2
 80213c4:	0100      	lsls	r0, r0, #4
 80213c6:	ebc6 1202 	rsb	r2, r6, r2, lsl #4
 80213ca:	f5c0 7880 	rsb	r8, r0, #256	; 0x100
 80213ce:	1b80      	subs	r0, r0, r6
 80213d0:	fa1f fc82 	uxth.w	ip, r2
 80213d4:	b282      	uxth	r2, r0
 80213d6:	78a0      	ldrb	r0, [r4, #2]
 80213d8:	f897 e002 	ldrb.w	lr, [r7, #2]
 80213dc:	f897 9000 	ldrb.w	r9, [r7]
 80213e0:	787f      	ldrb	r7, [r7, #1]
 80213e2:	eba8 080c 	sub.w	r8, r8, ip
 80213e6:	fa1f f888 	uxth.w	r8, r8
 80213ea:	4350      	muls	r0, r2
 80213ec:	fb08 0e0e 	mla	lr, r8, lr, r0
 80213f0:	78a8      	ldrb	r0, [r5, #2]
 80213f2:	fb0c e000 	mla	r0, ip, r0, lr
 80213f6:	f893 e002 	ldrb.w	lr, [r3, #2]
 80213fa:	fb06 0e0e 	mla	lr, r6, lr, r0
 80213fe:	f40e 4078 	and.w	r0, lr, #63488	; 0xf800
 8021402:	f894 e000 	ldrb.w	lr, [r4]
 8021406:	fb02 fe0e 	mul.w	lr, r2, lr
 802140a:	fb08 e909 	mla	r9, r8, r9, lr
 802140e:	f895 e000 	ldrb.w	lr, [r5]
 8021412:	fb0c 990e 	mla	r9, ip, lr, r9
 8021416:	f893 e000 	ldrb.w	lr, [r3]
 802141a:	785b      	ldrb	r3, [r3, #1]
 802141c:	fb06 9e0e 	mla	lr, r6, lr, r9
 8021420:	f3ce 2ec4 	ubfx	lr, lr, #11, #5
 8021424:	ea4e 0e00 	orr.w	lr, lr, r0
 8021428:	7860      	ldrb	r0, [r4, #1]
 802142a:	4350      	muls	r0, r2
 802142c:	786a      	ldrb	r2, [r5, #1]
 802142e:	fb08 0007 	mla	r0, r8, r7, r0
 8021432:	fb0c 0202 	mla	r2, ip, r2, r0
 8021436:	fb06 2303 	mla	r3, r6, r3, r2
 802143a:	095b      	lsrs	r3, r3, #5
 802143c:	f403 63fc 	and.w	r3, r3, #2016	; 0x7e0
 8021440:	ea4e 0303 	orr.w	r3, lr, r3
 8021444:	800b      	strh	r3, [r1, #0]
 8021446:	b003      	add	sp, #12
 8021448:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
 802144c:	af01      	add	r7, sp, #4
 802144e:	e78c      	b.n	802136a <_ZNK8touchgfx8LCD16bpp57TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhS4_ssiihh+0x56>
 8021450:	ac01      	add	r4, sp, #4
 8021452:	4627      	mov	r7, r4
 8021454:	e795      	b.n	8021382 <_ZNK8touchgfx8LCD16bpp57TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhS4_ssiihh+0x6e>
 8021456:	ac01      	add	r4, sp, #4
 8021458:	e793      	b.n	8021382 <_ZNK8touchgfx8LCD16bpp57TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhS4_ssiihh+0x6e>
 802145a:	ad01      	add	r5, sp, #4
 802145c:	e7a1      	b.n	80213a2 <_ZNK8touchgfx8LCD16bpp57TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhS4_ssiihh+0x8e>
 802145e:	ab01      	add	r3, sp, #4
 8021460:	461d      	mov	r5, r3
 8021462:	e7ab      	b.n	80213bc <_ZNK8touchgfx8LCD16bpp57TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhS4_ssiihh+0xa8>
 8021464:	ab01      	add	r3, sp, #4
 8021466:	e7a9      	b.n	80213bc <_ZNK8touchgfx8LCD16bpp57TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhS4_ssiihh+0xa8>

08021468 <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff>:
 8021468:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 802146c:	b08f      	sub	sp, #60	; 0x3c
 802146e:	e9dd b519 	ldrd	fp, r5, [sp, #100]	; 0x64
 8021472:	920c      	str	r2, [sp, #48]	; 0x30
 8021474:	9a1d      	ldr	r2, [sp, #116]	; 0x74
 8021476:	910a      	str	r1, [sp, #40]	; 0x28
 8021478:	9306      	str	r3, [sp, #24]
 802147a:	e9dd 131e 	ldrd	r1, r3, [sp, #120]	; 0x78
 802147e:	900d      	str	r0, [sp, #52]	; 0x34
 8021480:	6850      	ldr	r0, [r2, #4]
 8021482:	6812      	ldr	r2, [r2, #0]
 8021484:	fb00 1303 	mla	r3, r0, r3, r1
 8021488:	eb02 0343 	add.w	r3, r2, r3, lsl #1
 802148c:	9307      	str	r3, [sp, #28]
 802148e:	9b20      	ldr	r3, [sp, #128]	; 0x80
 8021490:	681b      	ldr	r3, [r3, #0]
 8021492:	9308      	str	r3, [sp, #32]
 8021494:	9b20      	ldr	r3, [sp, #128]	; 0x80
 8021496:	685c      	ldr	r4, [r3, #4]
 8021498:	3404      	adds	r4, #4
 802149a:	9b0a      	ldr	r3, [sp, #40]	; 0x28
 802149c:	2b00      	cmp	r3, #0
 802149e:	dc03      	bgt.n	80214a8 <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x40>
 80214a0:	9b0c      	ldr	r3, [sp, #48]	; 0x30
 80214a2:	2b00      	cmp	r3, #0
 80214a4:	f340 81d6 	ble.w	8021854 <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x3ec>
 80214a8:	9b20      	ldr	r3, [sp, #128]	; 0x80
 80214aa:	f9b3 1008 	ldrsh.w	r1, [r3, #8]
 80214ae:	f9b3 200c 	ldrsh.w	r2, [r3, #12]
 80214b2:	1e48      	subs	r0, r1, #1
 80214b4:	1e56      	subs	r6, r2, #1
 80214b6:	9b06      	ldr	r3, [sp, #24]
 80214b8:	2b00      	cmp	r3, #0
 80214ba:	f340 80b7 	ble.w	802162c <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x1c4>
 80214be:	ea5f 472b 	movs.w	r7, fp, asr #16
 80214c2:	ea4f 4325 	mov.w	r3, r5, asr #16
 80214c6:	d406      	bmi.n	80214d6 <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x6e>
 80214c8:	4287      	cmp	r7, r0
 80214ca:	da04      	bge.n	80214d6 <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x6e>
 80214cc:	2b00      	cmp	r3, #0
 80214ce:	db02      	blt.n	80214d6 <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x6e>
 80214d0:	42b3      	cmp	r3, r6
 80214d2:	f2c0 80ac 	blt.w	802162e <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x1c6>
 80214d6:	3701      	adds	r7, #1
 80214d8:	f100 809d 	bmi.w	8021616 <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x1ae>
 80214dc:	42b9      	cmp	r1, r7
 80214de:	f2c0 809a 	blt.w	8021616 <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x1ae>
 80214e2:	3301      	adds	r3, #1
 80214e4:	f100 8097 	bmi.w	8021616 <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x1ae>
 80214e8:	429a      	cmp	r2, r3
 80214ea:	f2c0 8094 	blt.w	8021616 <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x1ae>
 80214ee:	9b06      	ldr	r3, [sp, #24]
 80214f0:	930b      	str	r3, [sp, #44]	; 0x2c
 80214f2:	9b07      	ldr	r3, [sp, #28]
 80214f4:	9309      	str	r3, [sp, #36]	; 0x24
 80214f6:	9b0b      	ldr	r3, [sp, #44]	; 0x2c
 80214f8:	2b00      	cmp	r3, #0
 80214fa:	f340 80b5 	ble.w	8021668 <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x200>
 80214fe:	9820      	ldr	r0, [sp, #128]	; 0x80
 8021500:	9a20      	ldr	r2, [sp, #128]	; 0x80
 8021502:	68c7      	ldr	r7, [r0, #12]
 8021504:	6892      	ldr	r2, [r2, #8]
 8021506:	ea5f 402b 	movs.w	r0, fp, asr #16
 802150a:	ea4f 4625 	mov.w	r6, r5, asr #16
 802150e:	f3cb 3303 	ubfx	r3, fp, #12, #4
 8021512:	f3c5 3103 	ubfx	r1, r5, #12, #4
 8021516:	f100 80fb 	bmi.w	8021710 <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x2a8>
 802151a:	f102 3cff 	add.w	ip, r2, #4294967295
 802151e:	4560      	cmp	r0, ip
 8021520:	f280 80f6 	bge.w	8021710 <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x2a8>
 8021524:	2e00      	cmp	r6, #0
 8021526:	f2c0 80f3 	blt.w	8021710 <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x2a8>
 802152a:	f107 3cff 	add.w	ip, r7, #4294967295
 802152e:	4566      	cmp	r6, ip
 8021530:	f280 80ee 	bge.w	8021710 <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x2a8>
 8021534:	b212      	sxth	r2, r2
 8021536:	fb06 0002 	mla	r0, r6, r2, r0
 802153a:	9e08      	ldr	r6, [sp, #32]
 802153c:	1837      	adds	r7, r6, r0
 802153e:	5c30      	ldrb	r0, [r6, r0]
 8021540:	eb00 0840 	add.w	r8, r0, r0, lsl #1
 8021544:	eb04 0c08 	add.w	ip, r4, r8
 8021548:	2b00      	cmp	r3, #0
 802154a:	f000 80d3 	beq.w	80216f4 <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x28c>
 802154e:	787e      	ldrb	r6, [r7, #1]
 8021550:	eb06 0646 	add.w	r6, r6, r6, lsl #1
 8021554:	4426      	add	r6, r4
 8021556:	2900      	cmp	r1, #0
 8021558:	f000 80d4 	beq.w	8021704 <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x29c>
 802155c:	18b8      	adds	r0, r7, r2
 802155e:	5cba      	ldrb	r2, [r7, r2]
 8021560:	7840      	ldrb	r0, [r0, #1]
 8021562:	eb02 0242 	add.w	r2, r2, r2, lsl #1
 8021566:	eb00 0040 	add.w	r0, r0, r0, lsl #1
 802156a:	4422      	add	r2, r4
 802156c:	4420      	add	r0, r4
 802156e:	b29b      	uxth	r3, r3
 8021570:	b289      	uxth	r1, r1
 8021572:	fb03 f901 	mul.w	r9, r3, r1
 8021576:	ebc9 1101 	rsb	r1, r9, r1, lsl #4
 802157a:	011b      	lsls	r3, r3, #4
 802157c:	b289      	uxth	r1, r1
 802157e:	78b7      	ldrb	r7, [r6, #2]
 8021580:	f89c a002 	ldrb.w	sl, [ip, #2]
 8021584:	f89c c001 	ldrb.w	ip, [ip, #1]
 8021588:	f5c3 7e80 	rsb	lr, r3, #256	; 0x100
 802158c:	eba3 0309 	sub.w	r3, r3, r9
 8021590:	b29b      	uxth	r3, r3
 8021592:	ebae 0e01 	sub.w	lr, lr, r1
 8021596:	fa1f fe8e 	uxth.w	lr, lr
 802159a:	435f      	muls	r7, r3
 802159c:	fb0e 770a 	mla	r7, lr, sl, r7
 80215a0:	f892 a002 	ldrb.w	sl, [r2, #2]
 80215a4:	fb01 770a 	mla	r7, r1, sl, r7
 80215a8:	f890 a002 	ldrb.w	sl, [r0, #2]
 80215ac:	fb09 7a0a 	mla	sl, r9, sl, r7
 80215b0:	f814 7008 	ldrb.w	r7, [r4, r8]
 80215b4:	f896 8000 	ldrb.w	r8, [r6]
 80215b8:	7876      	ldrb	r6, [r6, #1]
 80215ba:	fb03 f808 	mul.w	r8, r3, r8
 80215be:	fb0e 8807 	mla	r8, lr, r7, r8
 80215c2:	7817      	ldrb	r7, [r2, #0]
 80215c4:	fb01 8807 	mla	r8, r1, r7, r8
 80215c8:	7807      	ldrb	r7, [r0, #0]
 80215ca:	fb09 8707 	mla	r7, r9, r7, r8
 80215ce:	f40a 4a78 	and.w	sl, sl, #63488	; 0xf800
 80215d2:	f3c7 27c4 	ubfx	r7, r7, #11, #5
 80215d6:	ea47 070a 	orr.w	r7, r7, sl
 80215da:	4373      	muls	r3, r6
 80215dc:	f892 a001 	ldrb.w	sl, [r2, #1]
 80215e0:	fb0e 330c 	mla	r3, lr, ip, r3
 80215e4:	fb01 310a 	mla	r1, r1, sl, r3
 80215e8:	f890 a001 	ldrb.w	sl, [r0, #1]
 80215ec:	9b09      	ldr	r3, [sp, #36]	; 0x24
 80215ee:	fb09 1a0a 	mla	sl, r9, sl, r1
 80215f2:	ea4f 1a5a 	mov.w	sl, sl, lsr #5
 80215f6:	f40a 6afc 	and.w	sl, sl, #2016	; 0x7e0
 80215fa:	ea47 070a 	orr.w	r7, r7, sl
 80215fe:	801f      	strh	r7, [r3, #0]
 8021600:	9b09      	ldr	r3, [sp, #36]	; 0x24
 8021602:	3302      	adds	r3, #2
 8021604:	9309      	str	r3, [sp, #36]	; 0x24
 8021606:	9b1b      	ldr	r3, [sp, #108]	; 0x6c
 8021608:	449b      	add	fp, r3
 802160a:	9b1c      	ldr	r3, [sp, #112]	; 0x70
 802160c:	441d      	add	r5, r3
 802160e:	9b0b      	ldr	r3, [sp, #44]	; 0x2c
 8021610:	3b01      	subs	r3, #1
 8021612:	930b      	str	r3, [sp, #44]	; 0x2c
 8021614:	e76f      	b.n	80214f6 <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x8e>
 8021616:	9b1b      	ldr	r3, [sp, #108]	; 0x6c
 8021618:	449b      	add	fp, r3
 802161a:	9b1c      	ldr	r3, [sp, #112]	; 0x70
 802161c:	441d      	add	r5, r3
 802161e:	9b06      	ldr	r3, [sp, #24]
 8021620:	3b01      	subs	r3, #1
 8021622:	9306      	str	r3, [sp, #24]
 8021624:	9b07      	ldr	r3, [sp, #28]
 8021626:	3302      	adds	r3, #2
 8021628:	9307      	str	r3, [sp, #28]
 802162a:	e744      	b.n	80214b6 <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x4e>
 802162c:	d023      	beq.n	8021676 <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x20e>
 802162e:	9b06      	ldr	r3, [sp, #24]
 8021630:	981b      	ldr	r0, [sp, #108]	; 0x6c
 8021632:	3b01      	subs	r3, #1
 8021634:	fb00 b003 	mla	r0, r0, r3, fp
 8021638:	1400      	asrs	r0, r0, #16
 802163a:	f53f af58 	bmi.w	80214ee <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x86>
 802163e:	3901      	subs	r1, #1
 8021640:	4288      	cmp	r0, r1
 8021642:	f6bf af54 	bge.w	80214ee <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x86>
 8021646:	991c      	ldr	r1, [sp, #112]	; 0x70
 8021648:	fb01 5303 	mla	r3, r1, r3, r5
 802164c:	141b      	asrs	r3, r3, #16
 802164e:	f53f af4e 	bmi.w	80214ee <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x86>
 8021652:	3a01      	subs	r2, #1
 8021654:	4293      	cmp	r3, r2
 8021656:	f6bf af4a 	bge.w	80214ee <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x86>
 802165a:	9b06      	ldr	r3, [sp, #24]
 802165c:	9309      	str	r3, [sp, #36]	; 0x24
 802165e:	9b07      	ldr	r3, [sp, #28]
 8021660:	930b      	str	r3, [sp, #44]	; 0x2c
 8021662:	9b09      	ldr	r3, [sp, #36]	; 0x24
 8021664:	2b00      	cmp	r3, #0
 8021666:	dc70      	bgt.n	802174a <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x2e2>
 8021668:	9b06      	ldr	r3, [sp, #24]
 802166a:	9a07      	ldr	r2, [sp, #28]
 802166c:	ea23 73e3 	bic.w	r3, r3, r3, asr #31
 8021670:	eb02 0343 	add.w	r3, r2, r3, lsl #1
 8021674:	9307      	str	r3, [sp, #28]
 8021676:	9b0a      	ldr	r3, [sp, #40]	; 0x28
 8021678:	2b00      	cmp	r3, #0
 802167a:	f340 80eb 	ble.w	8021854 <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x3ec>
 802167e:	ee30 0a04 	vadd.f32	s0, s0, s8
 8021682:	eeb7 7a00 	vmov.f32	s14, #112	; 0x3f800000  1.0
 8021686:	eec7 7a00 	vdiv.f32	s15, s14, s0
 802168a:	9b18      	ldr	r3, [sp, #96]	; 0x60
 802168c:	ee70 0aa4 	vadd.f32	s1, s1, s9
 8021690:	ee31 1a05 	vadd.f32	s2, s2, s10
 8021694:	ee20 7aa7 	vmul.f32	s14, s1, s15
 8021698:	eef0 6a62 	vmov.f32	s13, s5
 802169c:	ee61 7a27 	vmul.f32	s15, s2, s15
 80216a0:	eefe 6ac8 	vcvt.s32.f32	s13, s13, #16
 80216a4:	ee77 2a62 	vsub.f32	s5, s14, s5
 80216a8:	ee16 ba90 	vmov	fp, s13
 80216ac:	eefe 2ac8 	vcvt.s32.f32	s5, s5, #16
 80216b0:	eef0 6a43 	vmov.f32	s13, s6
 80216b4:	ee37 3ac3 	vsub.f32	s6, s15, s6
 80216b8:	ee12 2a90 	vmov	r2, s5
 80216bc:	eebe 3ac8 	vcvt.s32.f32	s6, s6, #16
 80216c0:	fb92 f3f3 	sdiv	r3, r2, r3
 80216c4:	ee13 2a10 	vmov	r2, s6
 80216c8:	931b      	str	r3, [sp, #108]	; 0x6c
 80216ca:	9b18      	ldr	r3, [sp, #96]	; 0x60
 80216cc:	fb92 f3f3 	sdiv	r3, r2, r3
 80216d0:	931c      	str	r3, [sp, #112]	; 0x70
 80216d2:	9b0a      	ldr	r3, [sp, #40]	; 0x28
 80216d4:	9a0c      	ldr	r2, [sp, #48]	; 0x30
 80216d6:	3b01      	subs	r3, #1
 80216d8:	eefe 6ac8 	vcvt.s32.f32	s13, s13, #16
 80216dc:	930a      	str	r3, [sp, #40]	; 0x28
 80216de:	9b18      	ldr	r3, [sp, #96]	; 0x60
 80216e0:	bf08      	it	eq
 80216e2:	4613      	moveq	r3, r2
 80216e4:	ee16 5a90 	vmov	r5, s13
 80216e8:	9306      	str	r3, [sp, #24]
 80216ea:	eeb0 3a67 	vmov.f32	s6, s15
 80216ee:	eef0 2a47 	vmov.f32	s5, s14
 80216f2:	e6d2      	b.n	802149a <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x32>
 80216f4:	b149      	cbz	r1, 802170a <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x2a2>
 80216f6:	5cba      	ldrb	r2, [r7, r2]
 80216f8:	eb02 0242 	add.w	r2, r2, r2, lsl #1
 80216fc:	4422      	add	r2, r4
 80216fe:	4660      	mov	r0, ip
 8021700:	4666      	mov	r6, ip
 8021702:	e734      	b.n	802156e <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x106>
 8021704:	4660      	mov	r0, ip
 8021706:	4662      	mov	r2, ip
 8021708:	e731      	b.n	802156e <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x106>
 802170a:	4660      	mov	r0, ip
 802170c:	4662      	mov	r2, ip
 802170e:	e7f7      	b.n	8021700 <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x298>
 8021710:	f110 0c01 	adds.w	ip, r0, #1
 8021714:	f53f af74 	bmi.w	8021600 <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x198>
 8021718:	4562      	cmp	r2, ip
 802171a:	f6ff af71 	blt.w	8021600 <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x198>
 802171e:	f116 0c01 	adds.w	ip, r6, #1
 8021722:	f53f af6d 	bmi.w	8021600 <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x198>
 8021726:	4567      	cmp	r7, ip
 8021728:	f6ff af6a 	blt.w	8021600 <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x198>
 802172c:	b23f      	sxth	r7, r7
 802172e:	b212      	sxth	r2, r2
 8021730:	e9cd 3104 	strd	r3, r1, [sp, #16]
 8021734:	e9cd 0602 	strd	r0, r6, [sp, #8]
 8021738:	9200      	str	r2, [sp, #0]
 802173a:	9701      	str	r7, [sp, #4]
 802173c:	4623      	mov	r3, r4
 802173e:	e9dd 2108 	ldrd	r2, r1, [sp, #32]
 8021742:	980d      	ldr	r0, [sp, #52]	; 0x34
 8021744:	f7ff fde6 	bl	8021314 <_ZNK8touchgfx8LCD16bpp57TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhS4_ssiihh>
 8021748:	e75a      	b.n	8021600 <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x198>
 802174a:	9a20      	ldr	r2, [sp, #128]	; 0x80
 802174c:	f9b2 2008 	ldrsh.w	r2, [r2, #8]
 8021750:	ea4f 462b 	mov.w	r6, fp, asr #16
 8021754:	1428      	asrs	r0, r5, #16
 8021756:	fb02 6000 	mla	r0, r2, r0, r6
 802175a:	9e08      	ldr	r6, [sp, #32]
 802175c:	f816 8000 	ldrb.w	r8, [r6, r0]
 8021760:	f3cb 3303 	ubfx	r3, fp, #12, #4
 8021764:	eb08 0848 	add.w	r8, r8, r8, lsl #1
 8021768:	f3c5 3103 	ubfx	r1, r5, #12, #4
 802176c:	1837      	adds	r7, r6, r0
 802176e:	eb04 0c08 	add.w	ip, r4, r8
 8021772:	2b00      	cmp	r3, #0
 8021774:	d060      	beq.n	8021838 <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x3d0>
 8021776:	787e      	ldrb	r6, [r7, #1]
 8021778:	eb06 0646 	add.w	r6, r6, r6, lsl #1
 802177c:	4426      	add	r6, r4
 802177e:	2900      	cmp	r1, #0
 8021780:	d062      	beq.n	8021848 <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x3e0>
 8021782:	18b8      	adds	r0, r7, r2
 8021784:	5cba      	ldrb	r2, [r7, r2]
 8021786:	7840      	ldrb	r0, [r0, #1]
 8021788:	eb02 0242 	add.w	r2, r2, r2, lsl #1
 802178c:	eb00 0040 	add.w	r0, r0, r0, lsl #1
 8021790:	4422      	add	r2, r4
 8021792:	4420      	add	r0, r4
 8021794:	b29b      	uxth	r3, r3
 8021796:	b289      	uxth	r1, r1
 8021798:	fb03 f901 	mul.w	r9, r3, r1
 802179c:	ebc9 1101 	rsb	r1, r9, r1, lsl #4
 80217a0:	011b      	lsls	r3, r3, #4
 80217a2:	b289      	uxth	r1, r1
 80217a4:	78b7      	ldrb	r7, [r6, #2]
 80217a6:	f89c a002 	ldrb.w	sl, [ip, #2]
 80217aa:	f89c c001 	ldrb.w	ip, [ip, #1]
 80217ae:	f5c3 7e80 	rsb	lr, r3, #256	; 0x100
 80217b2:	eba3 0309 	sub.w	r3, r3, r9
 80217b6:	b29b      	uxth	r3, r3
 80217b8:	ebae 0e01 	sub.w	lr, lr, r1
 80217bc:	fa1f fe8e 	uxth.w	lr, lr
 80217c0:	435f      	muls	r7, r3
 80217c2:	fb0e 770a 	mla	r7, lr, sl, r7
 80217c6:	f892 a002 	ldrb.w	sl, [r2, #2]
 80217ca:	fb01 770a 	mla	r7, r1, sl, r7
 80217ce:	f890 a002 	ldrb.w	sl, [r0, #2]
 80217d2:	fb09 7a0a 	mla	sl, r9, sl, r7
 80217d6:	f814 7008 	ldrb.w	r7, [r4, r8]
 80217da:	f896 8000 	ldrb.w	r8, [r6]
 80217de:	7876      	ldrb	r6, [r6, #1]
 80217e0:	fb03 f808 	mul.w	r8, r3, r8
 80217e4:	fb0e 8807 	mla	r8, lr, r7, r8
 80217e8:	7817      	ldrb	r7, [r2, #0]
 80217ea:	fb01 8807 	mla	r8, r1, r7, r8
 80217ee:	7807      	ldrb	r7, [r0, #0]
 80217f0:	fb09 8707 	mla	r7, r9, r7, r8
 80217f4:	f40a 4a78 	and.w	sl, sl, #63488	; 0xf800
 80217f8:	4373      	muls	r3, r6
 80217fa:	f3c7 27c4 	ubfx	r7, r7, #11, #5
 80217fe:	7856      	ldrb	r6, [r2, #1]
 8021800:	ea47 070a 	orr.w	r7, r7, sl
 8021804:	fb0e 330c 	mla	r3, lr, ip, r3
 8021808:	f890 a001 	ldrb.w	sl, [r0, #1]
 802180c:	fb01 3306 	mla	r3, r1, r6, r3
 8021810:	fb09 3a0a 	mla	sl, r9, sl, r3
 8021814:	ea4f 1a5a 	mov.w	sl, sl, lsr #5
 8021818:	9b0b      	ldr	r3, [sp, #44]	; 0x2c
 802181a:	f40a 6afc 	and.w	sl, sl, #2016	; 0x7e0
 802181e:	ea47 070a 	orr.w	r7, r7, sl
 8021822:	f823 7b02 	strh.w	r7, [r3], #2
 8021826:	930b      	str	r3, [sp, #44]	; 0x2c
 8021828:	9b1b      	ldr	r3, [sp, #108]	; 0x6c
 802182a:	449b      	add	fp, r3
 802182c:	9b1c      	ldr	r3, [sp, #112]	; 0x70
 802182e:	441d      	add	r5, r3
 8021830:	9b09      	ldr	r3, [sp, #36]	; 0x24
 8021832:	3b01      	subs	r3, #1
 8021834:	9309      	str	r3, [sp, #36]	; 0x24
 8021836:	e714      	b.n	8021662 <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x1fa>
 8021838:	b149      	cbz	r1, 802184e <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x3e6>
 802183a:	5cba      	ldrb	r2, [r7, r2]
 802183c:	eb02 0242 	add.w	r2, r2, r2, lsl #1
 8021840:	4422      	add	r2, r4
 8021842:	4660      	mov	r0, ip
 8021844:	4666      	mov	r6, ip
 8021846:	e7a5      	b.n	8021794 <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x32c>
 8021848:	4660      	mov	r0, ip
 802184a:	4662      	mov	r2, ip
 802184c:	e7a2      	b.n	8021794 <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x32c>
 802184e:	4660      	mov	r0, ip
 8021850:	4662      	mov	r2, ip
 8021852:	e7f7      	b.n	8021844 <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x3dc>
 8021854:	b00f      	add	sp, #60	; 0x3c
 8021856:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}

0802185a <_ZNK8touchgfx8LCD16bpp60TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKhPKmssiihhh>:
 802185a:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 802185e:	b085      	sub	sp, #20
 8021860:	e9dd 7410 	ldrd	r7, r4, [sp, #64]	; 0x40
 8021864:	f9bd c038 	ldrsh.w	ip, [sp, #56]	; 0x38
 8021868:	9102      	str	r1, [sp, #8]
 802186a:	2c00      	cmp	r4, #0
 802186c:	fb04 710c 	mla	r1, r4, ip, r7
 8021870:	f9bd 803c 	ldrsh.w	r8, [sp, #60]	; 0x3c
 8021874:	f89d 6048 	ldrb.w	r6, [sp, #72]	; 0x48
 8021878:	f89d 004c 	ldrb.w	r0, [sp, #76]	; 0x4c
 802187c:	eb02 0e01 	add.w	lr, r2, r1
 8021880:	f2c0 8122 	blt.w	8021ac8 <_ZNK8touchgfx8LCD16bpp60TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKhPKmssiihhh+0x26e>
 8021884:	45a0      	cmp	r8, r4
 8021886:	f340 811f 	ble.w	8021ac8 <_ZNK8touchgfx8LCD16bpp60TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKhPKmssiihhh+0x26e>
 802188a:	2f00      	cmp	r7, #0
 802188c:	f2c0 811a 	blt.w	8021ac4 <_ZNK8touchgfx8LCD16bpp60TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKhPKmssiihhh+0x26a>
 8021890:	45bc      	cmp	ip, r7
 8021892:	f340 8117 	ble.w	8021ac4 <_ZNK8touchgfx8LCD16bpp60TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKhPKmssiihhh+0x26a>
 8021896:	5c52      	ldrb	r2, [r2, r1]
 8021898:	f853 5022 	ldr.w	r5, [r3, r2, lsl #2]
 802189c:	1c7a      	adds	r2, r7, #1
 802189e:	f100 8116 	bmi.w	8021ace <_ZNK8touchgfx8LCD16bpp60TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKhPKmssiihhh+0x274>
 80218a2:	4594      	cmp	ip, r2
 80218a4:	f340 8113 	ble.w	8021ace <_ZNK8touchgfx8LCD16bpp60TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKhPKmssiihhh+0x274>
 80218a8:	2e00      	cmp	r6, #0
 80218aa:	f000 8112 	beq.w	8021ad2 <_ZNK8touchgfx8LCD16bpp60TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKhPKmssiihhh+0x278>
 80218ae:	f89e 2001 	ldrb.w	r2, [lr, #1]
 80218b2:	f853 1022 	ldr.w	r1, [r3, r2, lsl #2]
 80218b6:	3401      	adds	r4, #1
 80218b8:	f100 810f 	bmi.w	8021ada <_ZNK8touchgfx8LCD16bpp60TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKhPKmssiihhh+0x280>
 80218bc:	45a0      	cmp	r8, r4
 80218be:	f340 810c 	ble.w	8021ada <_ZNK8touchgfx8LCD16bpp60TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKhPKmssiihhh+0x280>
 80218c2:	2800      	cmp	r0, #0
 80218c4:	f000 810c 	beq.w	8021ae0 <_ZNK8touchgfx8LCD16bpp60TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKhPKmssiihhh+0x286>
 80218c8:	2f00      	cmp	r7, #0
 80218ca:	f2c0 8104 	blt.w	8021ad6 <_ZNK8touchgfx8LCD16bpp60TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKhPKmssiihhh+0x27c>
 80218ce:	45bc      	cmp	ip, r7
 80218d0:	f340 8101 	ble.w	8021ad6 <_ZNK8touchgfx8LCD16bpp60TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKhPKmssiihhh+0x27c>
 80218d4:	f81e 200c 	ldrb.w	r2, [lr, ip]
 80218d8:	f853 4022 	ldr.w	r4, [r3, r2, lsl #2]
 80218dc:	3701      	adds	r7, #1
 80218de:	f100 8102 	bmi.w	8021ae6 <_ZNK8touchgfx8LCD16bpp60TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKhPKmssiihhh+0x28c>
 80218e2:	45bc      	cmp	ip, r7
 80218e4:	f340 80ff 	ble.w	8021ae6 <_ZNK8touchgfx8LCD16bpp60TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKhPKmssiihhh+0x28c>
 80218e8:	2e00      	cmp	r6, #0
 80218ea:	f000 80fe 	beq.w	8021aea <_ZNK8touchgfx8LCD16bpp60TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKhPKmssiihhh+0x290>
 80218ee:	44f4      	add	ip, lr
 80218f0:	f89c 2001 	ldrb.w	r2, [ip, #1]
 80218f4:	f853 2022 	ldr.w	r2, [r3, r2, lsl #2]
 80218f8:	b2b6      	uxth	r6, r6
 80218fa:	b280      	uxth	r0, r0
 80218fc:	fb00 fe06 	mul.w	lr, r0, r6
 8021900:	ebce 1000 	rsb	r0, lr, r0, lsl #4
 8021904:	0136      	lsls	r6, r6, #4
 8021906:	eba6 070e 	sub.w	r7, r6, lr
 802190a:	b280      	uxth	r0, r0
 802190c:	f5c6 7380 	rsb	r3, r6, #256	; 0x100
 8021910:	ea4f 6a11 	mov.w	sl, r1, lsr #24
 8021914:	b2bf      	uxth	r7, r7
 8021916:	1a1b      	subs	r3, r3, r0
 8021918:	ea4f 6b15 	mov.w	fp, r5, lsr #24
 802191c:	b29b      	uxth	r3, r3
 802191e:	fb0a f607 	mul.w	r6, sl, r7
 8021922:	ea4f 6914 	mov.w	r9, r4, lsr #24
 8021926:	fb0b 6603 	mla	r6, fp, r3, r6
 802192a:	ea4f 6812 	mov.w	r8, r2, lsr #24
 802192e:	fb00 6609 	mla	r6, r0, r9, r6
 8021932:	fb0e 6608 	mla	r6, lr, r8, r6
 8021936:	f3c6 2607 	ubfx	r6, r6, #8, #8
 802193a:	9600      	str	r6, [sp, #0]
 802193c:	2e00      	cmp	r6, #0
 802193e:	f000 80be 	beq.w	8021abe <_ZNK8touchgfx8LCD16bpp60TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKhPKmssiihhh+0x264>
 8021942:	f005 1cff 	and.w	ip, r5, #16711935	; 0xff00ff
 8021946:	fb0b fc0c 	mul.w	ip, fp, ip
 802194a:	f405 457f 	and.w	r5, r5, #65280	; 0xff00
 802194e:	fb0b f505 	mul.w	r5, fp, r5
 8021952:	ea4f 2b1c 	mov.w	fp, ip, lsr #8
 8021956:	f00b 1bff 	and.w	fp, fp, #16711935	; 0xff00ff
 802195a:	f10c 1c01 	add.w	ip, ip, #65537	; 0x10001
 802195e:	44dc      	add	ip, fp
 8021960:	ea4f 2c1c 	mov.w	ip, ip, lsr #8
 8021964:	9501      	str	r5, [sp, #4]
 8021966:	f00c 15ff 	and.w	r5, ip, #16711935	; 0xff00ff
 802196a:	9503      	str	r5, [sp, #12]
 802196c:	9d01      	ldr	r5, [sp, #4]
 802196e:	9e02      	ldr	r6, [sp, #8]
 8021970:	f505 7c80 	add.w	ip, r5, #256	; 0x100
 8021974:	eb0c 2515 	add.w	r5, ip, r5, lsr #8
 8021978:	f001 1cff 	and.w	ip, r1, #16711935	; 0xff00ff
 802197c:	fb0a fc0c 	mul.w	ip, sl, ip
 8021980:	ea4f 2b15 	mov.w	fp, r5, lsr #8
 8021984:	ea4f 251c 	mov.w	r5, ip, lsr #8
 8021988:	f005 15ff 	and.w	r5, r5, #16711935	; 0xff00ff
 802198c:	f10c 1c01 	add.w	ip, ip, #65537	; 0x10001
 8021990:	4465      	add	r5, ip
 8021992:	f004 1cff 	and.w	ip, r4, #16711935	; 0xff00ff
 8021996:	f404 447f 	and.w	r4, r4, #65280	; 0xff00
 802199a:	fb09 fc0c 	mul.w	ip, r9, ip
 802199e:	fb09 f904 	mul.w	r9, r9, r4
 80219a2:	f509 7480 	add.w	r4, r9, #256	; 0x100
 80219a6:	eb04 2919 	add.w	r9, r4, r9, lsr #8
 80219aa:	f002 14ff 	and.w	r4, r2, #16711935	; 0xff00ff
 80219ae:	fb08 f404 	mul.w	r4, r8, r4
 80219b2:	f401 417f 	and.w	r1, r1, #65280	; 0xff00
 80219b6:	f402 427f 	and.w	r2, r2, #65280	; 0xff00
 80219ba:	fb08 f802 	mul.w	r8, r8, r2
 80219be:	fb0a fa01 	mul.w	sl, sl, r1
 80219c2:	0a22      	lsrs	r2, r4, #8
 80219c4:	f50a 7180 	add.w	r1, sl, #256	; 0x100
 80219c8:	f002 12ff 	and.w	r2, r2, #16711935	; 0xff00ff
 80219cc:	f104 1401 	add.w	r4, r4, #65537	; 0x10001
 80219d0:	eb01 2a1a 	add.w	sl, r1, sl, lsr #8
 80219d4:	4414      	add	r4, r2
 80219d6:	ea4f 211c 	mov.w	r1, ip, lsr #8
 80219da:	f508 7280 	add.w	r2, r8, #256	; 0x100
 80219de:	0a2d      	lsrs	r5, r5, #8
 80219e0:	eb02 2818 	add.w	r8, r2, r8, lsr #8
 80219e4:	f005 15ff 	and.w	r5, r5, #16711935	; 0xff00ff
 80219e8:	9a03      	ldr	r2, [sp, #12]
 80219ea:	8836      	ldrh	r6, [r6, #0]
 80219ec:	f001 11ff 	and.w	r1, r1, #16711935	; 0xff00ff
 80219f0:	f10c 1c01 	add.w	ip, ip, #65537	; 0x10001
 80219f4:	437d      	muls	r5, r7
 80219f6:	4461      	add	r1, ip
 80219f8:	0a24      	lsrs	r4, r4, #8
 80219fa:	fb02 5503 	mla	r5, r2, r3, r5
 80219fe:	0a09      	lsrs	r1, r1, #8
 8021a00:	f004 14ff 	and.w	r4, r4, #16711935	; 0xff00ff
 8021a04:	fb04 540e 	mla	r4, r4, lr, r5
 8021a08:	f001 11ff 	and.w	r1, r1, #16711935	; 0xff00ff
 8021a0c:	fb01 4100 	mla	r1, r1, r0, r4
 8021a10:	ea4f 2a1a 	mov.w	sl, sl, lsr #8
 8021a14:	0a09      	lsrs	r1, r1, #8
 8021a16:	f40a 4a7f 	and.w	sl, sl, #65280	; 0xff00
 8021a1a:	f001 14ff 	and.w	r4, r1, #16711935	; 0xff00ff
 8021a1e:	fb07 f70a 	mul.w	r7, r7, sl
 8021a22:	ea4f 2818 	mov.w	r8, r8, lsr #8
 8021a26:	f40b 417f 	and.w	r1, fp, #65280	; 0xff00
 8021a2a:	fb03 7101 	mla	r1, r3, r1, r7
 8021a2e:	ea4f 2919 	mov.w	r9, r9, lsr #8
 8021a32:	f408 487f 	and.w	r8, r8, #65280	; 0xff00
 8021a36:	fb0e 1e08 	mla	lr, lr, r8, r1
 8021a3a:	f409 417f 	and.w	r1, r9, #65280	; 0xff00
 8021a3e:	fb00 e101 	mla	r1, r0, r1, lr
 8021a42:	f89d 0050 	ldrb.w	r0, [sp, #80]	; 0x50
 8021a46:	9a00      	ldr	r2, [sp, #0]
 8021a48:	b287      	uxth	r7, r0
 8021a4a:	437a      	muls	r2, r7
 8021a4c:	0a09      	lsrs	r1, r1, #8
 8021a4e:	1c53      	adds	r3, r2, #1
 8021a50:	f401 417f 	and.w	r1, r1, #65280	; 0xff00
 8021a54:	4321      	orrs	r1, r4
 8021a56:	eb03 2312 	add.w	r3, r3, r2, lsr #8
 8021a5a:	1235      	asrs	r5, r6, #8
 8021a5c:	0c0a      	lsrs	r2, r1, #16
 8021a5e:	ea6f 2313 	mvn.w	r3, r3, lsr #8
 8021a62:	b2db      	uxtb	r3, r3
 8021a64:	fb12 f207 	smulbb	r2, r2, r7
 8021a68:	f005 05f8 	and.w	r5, r5, #248	; 0xf8
 8021a6c:	fb05 2503 	mla	r5, r5, r3, r2
 8021a70:	f3c1 2407 	ubfx	r4, r1, #8, #8
 8021a74:	10f2      	asrs	r2, r6, #3
 8021a76:	b2c8      	uxtb	r0, r1
 8021a78:	00f6      	lsls	r6, r6, #3
 8021a7a:	fb14 f407 	smulbb	r4, r4, r7
 8021a7e:	f002 02fc 	and.w	r2, r2, #252	; 0xfc
 8021a82:	b2f6      	uxtb	r6, r6
 8021a84:	fb10 f007 	smulbb	r0, r0, r7
 8021a88:	fb02 4203 	mla	r2, r2, r3, r4
 8021a8c:	b2ad      	uxth	r5, r5
 8021a8e:	fb06 0303 	mla	r3, r6, r3, r0
 8021a92:	b299      	uxth	r1, r3
 8021a94:	b294      	uxth	r4, r2
 8021a96:	1c6b      	adds	r3, r5, #1
 8021a98:	eb03 2515 	add.w	r5, r3, r5, lsr #8
 8021a9c:	1c62      	adds	r2, r4, #1
 8021a9e:	1c4b      	adds	r3, r1, #1
 8021aa0:	eb03 2311 	add.w	r3, r3, r1, lsr #8
 8021aa4:	eb02 2214 	add.w	r2, r2, r4, lsr #8
 8021aa8:	f405 4578 	and.w	r5, r5, #63488	; 0xf800
 8021aac:	f3c3 23c4 	ubfx	r3, r3, #11, #5
 8021ab0:	0952      	lsrs	r2, r2, #5
 8021ab2:	f402 62fc 	and.w	r2, r2, #2016	; 0x7e0
 8021ab6:	432b      	orrs	r3, r5
 8021ab8:	4313      	orrs	r3, r2
 8021aba:	9a02      	ldr	r2, [sp, #8]
 8021abc:	8013      	strh	r3, [r2, #0]
 8021abe:	b005      	add	sp, #20
 8021ac0:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
 8021ac4:	2500      	movs	r5, #0
 8021ac6:	e6e9      	b.n	802189c <_ZNK8touchgfx8LCD16bpp60TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKhPKmssiihhh+0x42>
 8021ac8:	2100      	movs	r1, #0
 8021aca:	460d      	mov	r5, r1
 8021acc:	e6f3      	b.n	80218b6 <_ZNK8touchgfx8LCD16bpp60TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKhPKmssiihhh+0x5c>
 8021ace:	2100      	movs	r1, #0
 8021ad0:	e6f1      	b.n	80218b6 <_ZNK8touchgfx8LCD16bpp60TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKhPKmssiihhh+0x5c>
 8021ad2:	4631      	mov	r1, r6
 8021ad4:	e6ef      	b.n	80218b6 <_ZNK8touchgfx8LCD16bpp60TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKhPKmssiihhh+0x5c>
 8021ad6:	2400      	movs	r4, #0
 8021ad8:	e700      	b.n	80218dc <_ZNK8touchgfx8LCD16bpp60TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKhPKmssiihhh+0x82>
 8021ada:	2200      	movs	r2, #0
 8021adc:	4614      	mov	r4, r2
 8021ade:	e70b      	b.n	80218f8 <_ZNK8touchgfx8LCD16bpp60TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKhPKmssiihhh+0x9e>
 8021ae0:	4602      	mov	r2, r0
 8021ae2:	4604      	mov	r4, r0
 8021ae4:	e708      	b.n	80218f8 <_ZNK8touchgfx8LCD16bpp60TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKhPKmssiihhh+0x9e>
 8021ae6:	2200      	movs	r2, #0
 8021ae8:	e706      	b.n	80218f8 <_ZNK8touchgfx8LCD16bpp60TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKhPKmssiihhh+0x9e>
 8021aea:	4632      	mov	r2, r6
 8021aec:	e704      	b.n	80218f8 <_ZNK8touchgfx8LCD16bpp60TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKhPKmssiihhh+0x9e>

08021aee <_ZN8touchgfx8LCD16bpp60TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff>:
 8021aee:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 8021af2:	b09f      	sub	sp, #124	; 0x7c
 8021af4:	921b      	str	r2, [sp, #108]	; 0x6c
 8021af6:	9309      	str	r3, [sp, #36]	; 0x24
 8021af8:	9a2d      	ldr	r2, [sp, #180]	; 0xb4
 8021afa:	f89d 30c4 	ldrb.w	r3, [sp, #196]	; 0xc4
 8021afe:	931c      	str	r3, [sp, #112]	; 0x70
 8021b00:	9119      	str	r1, [sp, #100]	; 0x64
 8021b02:	e9dd 132e 	ldrd	r1, r3, [sp, #184]	; 0xb8
 8021b06:	901d      	str	r0, [sp, #116]	; 0x74
 8021b08:	6850      	ldr	r0, [r2, #4]
 8021b0a:	6812      	ldr	r2, [r2, #0]
 8021b0c:	9d2a      	ldr	r5, [sp, #168]	; 0xa8
 8021b0e:	fb00 1303 	mla	r3, r0, r3, r1
 8021b12:	eb02 0343 	add.w	r3, r2, r3, lsl #1
 8021b16:	930c      	str	r3, [sp, #48]	; 0x30
 8021b18:	9b30      	ldr	r3, [sp, #192]	; 0xc0
 8021b1a:	681b      	ldr	r3, [r3, #0]
 8021b1c:	9312      	str	r3, [sp, #72]	; 0x48
 8021b1e:	9b30      	ldr	r3, [sp, #192]	; 0xc0
 8021b20:	685e      	ldr	r6, [r3, #4]
 8021b22:	f8bd 3070 	ldrh.w	r3, [sp, #112]	; 0x70
 8021b26:	930d      	str	r3, [sp, #52]	; 0x34
 8021b28:	3604      	adds	r6, #4
 8021b2a:	9b19      	ldr	r3, [sp, #100]	; 0x64
 8021b2c:	2b00      	cmp	r3, #0
 8021b2e:	dc03      	bgt.n	8021b38 <_ZN8touchgfx8LCD16bpp60TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x4a>
 8021b30:	9b1b      	ldr	r3, [sp, #108]	; 0x6c
 8021b32:	2b00      	cmp	r3, #0
 8021b34:	f340 8388 	ble.w	8022248 <_ZN8touchgfx8LCD16bpp60TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x75a>
 8021b38:	9b30      	ldr	r3, [sp, #192]	; 0xc0
 8021b3a:	f9b3 1008 	ldrsh.w	r1, [r3, #8]
 8021b3e:	f9b3 200c 	ldrsh.w	r2, [r3, #12]
 8021b42:	1e48      	subs	r0, r1, #1
 8021b44:	1e57      	subs	r7, r2, #1
 8021b46:	9b09      	ldr	r3, [sp, #36]	; 0x24
 8021b48:	2b00      	cmp	r3, #0
 8021b4a:	f340 8195 	ble.w	8021e78 <_ZN8touchgfx8LCD16bpp60TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x38a>
 8021b4e:	9c29      	ldr	r4, [sp, #164]	; 0xa4
 8021b50:	ea5f 4c24 	movs.w	ip, r4, asr #16
 8021b54:	ea4f 4325 	mov.w	r3, r5, asr #16
 8021b58:	d406      	bmi.n	8021b68 <_ZN8touchgfx8LCD16bpp60TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x7a>
 8021b5a:	4584      	cmp	ip, r0
 8021b5c:	da04      	bge.n	8021b68 <_ZN8touchgfx8LCD16bpp60TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x7a>
 8021b5e:	2b00      	cmp	r3, #0
 8021b60:	db02      	blt.n	8021b68 <_ZN8touchgfx8LCD16bpp60TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x7a>
 8021b62:	42bb      	cmp	r3, r7
 8021b64:	f2c0 8189 	blt.w	8021e7a <_ZN8touchgfx8LCD16bpp60TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x38c>
 8021b68:	f11c 0c01 	adds.w	ip, ip, #1
 8021b6c:	f100 8177 	bmi.w	8021e5e <_ZN8touchgfx8LCD16bpp60TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x370>
 8021b70:	4561      	cmp	r1, ip
 8021b72:	f2c0 8174 	blt.w	8021e5e <_ZN8touchgfx8LCD16bpp60TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x370>
 8021b76:	3301      	adds	r3, #1
 8021b78:	f100 8171 	bmi.w	8021e5e <_ZN8touchgfx8LCD16bpp60TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x370>
 8021b7c:	429a      	cmp	r2, r3
 8021b7e:	f2c0 816e 	blt.w	8021e5e <_ZN8touchgfx8LCD16bpp60TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x370>
 8021b82:	9b09      	ldr	r3, [sp, #36]	; 0x24
 8021b84:	9f0c      	ldr	r7, [sp, #48]	; 0x30
 8021b86:	931a      	str	r3, [sp, #104]	; 0x68
 8021b88:	9b1a      	ldr	r3, [sp, #104]	; 0x68
 8021b8a:	2b00      	cmp	r3, #0
 8021b8c:	f340 8193 	ble.w	8021eb6 <_ZN8touchgfx8LCD16bpp60TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x3c8>
 8021b90:	9b29      	ldr	r3, [sp, #164]	; 0xa4
 8021b92:	f3c3 3203 	ubfx	r2, r3, #12, #4
 8021b96:	9b30      	ldr	r3, [sp, #192]	; 0xc0
 8021b98:	e9d3 0e02 	ldrd	r0, lr, [r3, #8]
 8021b9c:	9b29      	ldr	r3, [sp, #164]	; 0xa4
 8021b9e:	141b      	asrs	r3, r3, #16
 8021ba0:	ea4f 4c25 	mov.w	ip, r5, asr #16
 8021ba4:	f3c5 3103 	ubfx	r1, r5, #12, #4
 8021ba8:	f100 81d6 	bmi.w	8021f58 <_ZN8touchgfx8LCD16bpp60TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x46a>
 8021bac:	f100 38ff 	add.w	r8, r0, #4294967295
 8021bb0:	4543      	cmp	r3, r8
 8021bb2:	f280 81d1 	bge.w	8021f58 <_ZN8touchgfx8LCD16bpp60TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x46a>
 8021bb6:	f1bc 0f00 	cmp.w	ip, #0
 8021bba:	f2c0 81cd 	blt.w	8021f58 <_ZN8touchgfx8LCD16bpp60TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x46a>
 8021bbe:	f10e 38ff 	add.w	r8, lr, #4294967295
 8021bc2:	45c4      	cmp	ip, r8
 8021bc4:	f280 81c8 	bge.w	8021f58 <_ZN8touchgfx8LCD16bpp60TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x46a>
 8021bc8:	b200      	sxth	r0, r0
 8021bca:	fb0c 3300 	mla	r3, ip, r0, r3
 8021bce:	9c12      	ldr	r4, [sp, #72]	; 0x48
 8021bd0:	eb04 0803 	add.w	r8, r4, r3
 8021bd4:	5ce3      	ldrb	r3, [r4, r3]
 8021bd6:	f856 3023 	ldr.w	r3, [r6, r3, lsl #2]
 8021bda:	ea4f 6e13 	mov.w	lr, r3, lsr #24
 8021bde:	2a00      	cmp	r2, #0
 8021be0:	f000 81af 	beq.w	8021f42 <_ZN8touchgfx8LCD16bpp60TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x454>
 8021be4:	f898 c001 	ldrb.w	ip, [r8, #1]
 8021be8:	f856 402c 	ldr.w	r4, [r6, ip, lsl #2]
 8021bec:	940e      	str	r4, [sp, #56]	; 0x38
 8021bee:	0e24      	lsrs	r4, r4, #24
 8021bf0:	9415      	str	r4, [sp, #84]	; 0x54
 8021bf2:	b179      	cbz	r1, 8021c14 <_ZN8touchgfx8LCD16bpp60TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x126>
 8021bf4:	eb08 0c00 	add.w	ip, r8, r0
 8021bf8:	f818 0000 	ldrb.w	r0, [r8, r0]
 8021bfc:	f856 0020 	ldr.w	r0, [r6, r0, lsl #2]
 8021c00:	900a      	str	r0, [sp, #40]	; 0x28
 8021c02:	0e00      	lsrs	r0, r0, #24
 8021c04:	9013      	str	r0, [sp, #76]	; 0x4c
 8021c06:	f89c 0001 	ldrb.w	r0, [ip, #1]
 8021c0a:	f856 0020 	ldr.w	r0, [r6, r0, lsl #2]
 8021c0e:	900f      	str	r0, [sp, #60]	; 0x3c
 8021c10:	0e00      	lsrs	r0, r0, #24
 8021c12:	9016      	str	r0, [sp, #88]	; 0x58
 8021c14:	b292      	uxth	r2, r2
 8021c16:	b289      	uxth	r1, r1
 8021c18:	fb02 f901 	mul.w	r9, r2, r1
 8021c1c:	ebc9 1101 	rsb	r1, r9, r1, lsl #4
 8021c20:	0112      	lsls	r2, r2, #4
 8021c22:	eba2 0809 	sub.w	r8, r2, r9
 8021c26:	b289      	uxth	r1, r1
 8021c28:	f5c2 7280 	rsb	r2, r2, #256	; 0x100
 8021c2c:	9815      	ldr	r0, [sp, #84]	; 0x54
 8021c2e:	9c13      	ldr	r4, [sp, #76]	; 0x4c
 8021c30:	fa1f f888 	uxth.w	r8, r8
 8021c34:	1a52      	subs	r2, r2, r1
 8021c36:	b292      	uxth	r2, r2
 8021c38:	fb08 f000 	mul.w	r0, r8, r0
 8021c3c:	fb02 000e 	mla	r0, r2, lr, r0
 8021c40:	fb01 0004 	mla	r0, r1, r4, r0
 8021c44:	9c16      	ldr	r4, [sp, #88]	; 0x58
 8021c46:	fb09 0004 	mla	r0, r9, r4, r0
 8021c4a:	f3c0 2007 	ubfx	r0, r0, #8, #8
 8021c4e:	2800      	cmp	r0, #0
 8021c50:	f000 80fa 	beq.w	8021e48 <_ZN8touchgfx8LCD16bpp60TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x35a>
 8021c54:	f1be 0fff 	cmp.w	lr, #255	; 0xff
 8021c58:	d01b      	beq.n	8021c92 <_ZN8touchgfx8LCD16bpp60TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x1a4>
 8021c5a:	f003 1aff 	and.w	sl, r3, #16711935	; 0xff00ff
 8021c5e:	fb0e fa0a 	mul.w	sl, lr, sl
 8021c62:	f403 437f 	and.w	r3, r3, #65280	; 0xff00
 8021c66:	fb0e fe03 	mul.w	lr, lr, r3
 8021c6a:	ea4f 231a 	mov.w	r3, sl, lsr #8
 8021c6e:	f003 13ff 	and.w	r3, r3, #16711935	; 0xff00ff
 8021c72:	f10a 1a01 	add.w	sl, sl, #65537	; 0x10001
 8021c76:	f50e 7c80 	add.w	ip, lr, #256	; 0x100
 8021c7a:	4453      	add	r3, sl
 8021c7c:	eb0c 2c1e 	add.w	ip, ip, lr, lsr #8
 8021c80:	0a1b      	lsrs	r3, r3, #8
 8021c82:	ea4f 2c1c 	mov.w	ip, ip, lsr #8
 8021c86:	f003 13ff 	and.w	r3, r3, #16711935	; 0xff00ff
 8021c8a:	f40c 4c7f 	and.w	ip, ip, #65280	; 0xff00
 8021c8e:	ea43 030c 	orr.w	r3, r3, ip
 8021c92:	9c15      	ldr	r4, [sp, #84]	; 0x54
 8021c94:	2cff      	cmp	r4, #255	; 0xff
 8021c96:	d021      	beq.n	8021cdc <_ZN8touchgfx8LCD16bpp60TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x1ee>
 8021c98:	9c0e      	ldr	r4, [sp, #56]	; 0x38
 8021c9a:	f004 1bff 	and.w	fp, r4, #16711935	; 0xff00ff
 8021c9e:	9c15      	ldr	r4, [sp, #84]	; 0x54
 8021ca0:	fb04 fb0b 	mul.w	fp, r4, fp
 8021ca4:	9c0e      	ldr	r4, [sp, #56]	; 0x38
 8021ca6:	f404 4a7f 	and.w	sl, r4, #65280	; 0xff00
 8021caa:	9c15      	ldr	r4, [sp, #84]	; 0x54
 8021cac:	ea4f 2e1b 	mov.w	lr, fp, lsr #8
 8021cb0:	fb04 fa0a 	mul.w	sl, r4, sl
 8021cb4:	f00e 1eff 	and.w	lr, lr, #16711935	; 0xff00ff
 8021cb8:	f10b 1b01 	add.w	fp, fp, #65537	; 0x10001
 8021cbc:	f50a 7c80 	add.w	ip, sl, #256	; 0x100
 8021cc0:	44de      	add	lr, fp
 8021cc2:	eb0c 2a1a 	add.w	sl, ip, sl, lsr #8
 8021cc6:	ea4f 2e1e 	mov.w	lr, lr, lsr #8
 8021cca:	ea4f 2a1a 	mov.w	sl, sl, lsr #8
 8021cce:	f00e 1eff 	and.w	lr, lr, #16711935	; 0xff00ff
 8021cd2:	f40a 4a7f 	and.w	sl, sl, #65280	; 0xff00
 8021cd6:	ea4e 040a 	orr.w	r4, lr, sl
 8021cda:	940e      	str	r4, [sp, #56]	; 0x38
 8021cdc:	9c13      	ldr	r4, [sp, #76]	; 0x4c
 8021cde:	2cff      	cmp	r4, #255	; 0xff
 8021ce0:	d021      	beq.n	8021d26 <_ZN8touchgfx8LCD16bpp60TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x238>
 8021ce2:	9c0a      	ldr	r4, [sp, #40]	; 0x28
 8021ce4:	f004 1bff 	and.w	fp, r4, #16711935	; 0xff00ff
 8021ce8:	9c13      	ldr	r4, [sp, #76]	; 0x4c
 8021cea:	fb04 fb0b 	mul.w	fp, r4, fp
 8021cee:	9c0a      	ldr	r4, [sp, #40]	; 0x28
 8021cf0:	f404 4a7f 	and.w	sl, r4, #65280	; 0xff00
 8021cf4:	9c13      	ldr	r4, [sp, #76]	; 0x4c
 8021cf6:	ea4f 2e1b 	mov.w	lr, fp, lsr #8
 8021cfa:	fb04 fa0a 	mul.w	sl, r4, sl
 8021cfe:	f00e 1eff 	and.w	lr, lr, #16711935	; 0xff00ff
 8021d02:	f10b 1b01 	add.w	fp, fp, #65537	; 0x10001
 8021d06:	f50a 7c80 	add.w	ip, sl, #256	; 0x100
 8021d0a:	44de      	add	lr, fp
 8021d0c:	eb0c 2a1a 	add.w	sl, ip, sl, lsr #8
 8021d10:	ea4f 2e1e 	mov.w	lr, lr, lsr #8
 8021d14:	ea4f 2a1a 	mov.w	sl, sl, lsr #8
 8021d18:	f00e 1eff 	and.w	lr, lr, #16711935	; 0xff00ff
 8021d1c:	f40a 4a7f 	and.w	sl, sl, #65280	; 0xff00
 8021d20:	ea4e 040a 	orr.w	r4, lr, sl
 8021d24:	940a      	str	r4, [sp, #40]	; 0x28
 8021d26:	9c16      	ldr	r4, [sp, #88]	; 0x58
 8021d28:	2cff      	cmp	r4, #255	; 0xff
 8021d2a:	d021      	beq.n	8021d70 <_ZN8touchgfx8LCD16bpp60TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x282>
 8021d2c:	9c0f      	ldr	r4, [sp, #60]	; 0x3c
 8021d2e:	f004 1bff 	and.w	fp, r4, #16711935	; 0xff00ff
 8021d32:	9c16      	ldr	r4, [sp, #88]	; 0x58
 8021d34:	fb04 fb0b 	mul.w	fp, r4, fp
 8021d38:	9c0f      	ldr	r4, [sp, #60]	; 0x3c
 8021d3a:	f404 4a7f 	and.w	sl, r4, #65280	; 0xff00
 8021d3e:	9c16      	ldr	r4, [sp, #88]	; 0x58
 8021d40:	ea4f 2e1b 	mov.w	lr, fp, lsr #8
 8021d44:	fb04 fa0a 	mul.w	sl, r4, sl
 8021d48:	f00e 1eff 	and.w	lr, lr, #16711935	; 0xff00ff
 8021d4c:	f10b 1b01 	add.w	fp, fp, #65537	; 0x10001
 8021d50:	f50a 7c80 	add.w	ip, sl, #256	; 0x100
 8021d54:	44de      	add	lr, fp
 8021d56:	eb0c 2a1a 	add.w	sl, ip, sl, lsr #8
 8021d5a:	ea4f 2e1e 	mov.w	lr, lr, lsr #8
 8021d5e:	ea4f 2a1a 	mov.w	sl, sl, lsr #8
 8021d62:	f00e 1eff 	and.w	lr, lr, #16711935	; 0xff00ff
 8021d66:	f40a 4a7f 	and.w	sl, sl, #65280	; 0xff00
 8021d6a:	ea4e 040a 	orr.w	r4, lr, sl
 8021d6e:	940f      	str	r4, [sp, #60]	; 0x3c
 8021d70:	9c0e      	ldr	r4, [sp, #56]	; 0x38
 8021d72:	f004 1cff 	and.w	ip, r4, #16711935	; 0xff00ff
 8021d76:	9c0a      	ldr	r4, [sp, #40]	; 0x28
 8021d78:	f003 1eff 	and.w	lr, r3, #16711935	; 0xff00ff
 8021d7c:	fb08 fc0c 	mul.w	ip, r8, ip
 8021d80:	fb02 cc0e 	mla	ip, r2, lr, ip
 8021d84:	f004 1eff 	and.w	lr, r4, #16711935	; 0xff00ff
 8021d88:	9c0f      	ldr	r4, [sp, #60]	; 0x3c
 8021d8a:	fb01 cc0e 	mla	ip, r1, lr, ip
 8021d8e:	f004 1eff 	and.w	lr, r4, #16711935	; 0xff00ff
 8021d92:	9c0e      	ldr	r4, [sp, #56]	; 0x38
 8021d94:	fb09 cc0e 	mla	ip, r9, lr, ip
 8021d98:	f404 4e7f 	and.w	lr, r4, #65280	; 0xff00
 8021d9c:	fb08 f80e 	mul.w	r8, r8, lr
 8021da0:	f403 437f 	and.w	r3, r3, #65280	; 0xff00
 8021da4:	fb02 8303 	mla	r3, r2, r3, r8
 8021da8:	9a0a      	ldr	r2, [sp, #40]	; 0x28
 8021daa:	9c0d      	ldr	r4, [sp, #52]	; 0x34
 8021dac:	f402 4a7f 	and.w	sl, r2, #65280	; 0xff00
 8021db0:	9a0f      	ldr	r2, [sp, #60]	; 0x3c
 8021db2:	fb01 330a 	mla	r3, r1, sl, r3
 8021db6:	f402 417f 	and.w	r1, r2, #65280	; 0xff00
 8021dba:	9a0d      	ldr	r2, [sp, #52]	; 0x34
 8021dbc:	fb09 3901 	mla	r9, r9, r1, r3
 8021dc0:	4342      	muls	r2, r0
 8021dc2:	ea4f 2c1c 	mov.w	ip, ip, lsr #8
 8021dc6:	ea4f 2919 	mov.w	r9, r9, lsr #8
 8021dca:	883b      	ldrh	r3, [r7, #0]
 8021dcc:	1c50      	adds	r0, r2, #1
 8021dce:	f00c 1cff 	and.w	ip, ip, #16711935	; 0xff00ff
 8021dd2:	f409 497f 	and.w	r9, r9, #65280	; 0xff00
 8021dd6:	ea4c 0c09 	orr.w	ip, ip, r9
 8021dda:	eb00 2012 	add.w	r0, r0, r2, lsr #8
 8021dde:	1219      	asrs	r1, r3, #8
 8021de0:	ea4f 421c 	mov.w	r2, ip, lsr #16
 8021de4:	ea6f 2010 	mvn.w	r0, r0, lsr #8
 8021de8:	b2c0      	uxtb	r0, r0
 8021dea:	fb12 f204 	smulbb	r2, r2, r4
 8021dee:	f001 01f8 	and.w	r1, r1, #248	; 0xf8
 8021df2:	fb01 2100 	mla	r1, r1, r0, r2
 8021df6:	f3cc 2e07 	ubfx	lr, ip, #8, #8
 8021dfa:	10da      	asrs	r2, r3, #3
 8021dfc:	fa5f fc8c 	uxtb.w	ip, ip
 8021e00:	00db      	lsls	r3, r3, #3
 8021e02:	fb1c fc04 	smulbb	ip, ip, r4
 8021e06:	b2db      	uxtb	r3, r3
 8021e08:	b289      	uxth	r1, r1
 8021e0a:	fb03 c300 	mla	r3, r3, r0, ip
 8021e0e:	fa1f fc83 	uxth.w	ip, r3
 8021e12:	1c4b      	adds	r3, r1, #1
 8021e14:	eb03 2111 	add.w	r1, r3, r1, lsr #8
 8021e18:	f002 02fc 	and.w	r2, r2, #252	; 0xfc
 8021e1c:	fb1e fe04 	smulbb	lr, lr, r4
 8021e20:	f10c 0301 	add.w	r3, ip, #1
 8021e24:	fb02 e200 	mla	r2, r2, r0, lr
 8021e28:	eb03 231c 	add.w	r3, r3, ip, lsr #8
 8021e2c:	b292      	uxth	r2, r2
 8021e2e:	f401 4178 	and.w	r1, r1, #63488	; 0xf800
 8021e32:	f3c3 23c4 	ubfx	r3, r3, #11, #5
 8021e36:	430b      	orrs	r3, r1
 8021e38:	1c51      	adds	r1, r2, #1
 8021e3a:	eb01 2212 	add.w	r2, r1, r2, lsr #8
 8021e3e:	0952      	lsrs	r2, r2, #5
 8021e40:	f402 62fc 	and.w	r2, r2, #2016	; 0x7e0
 8021e44:	4313      	orrs	r3, r2
 8021e46:	803b      	strh	r3, [r7, #0]
 8021e48:	9b2b      	ldr	r3, [sp, #172]	; 0xac
 8021e4a:	9a29      	ldr	r2, [sp, #164]	; 0xa4
 8021e4c:	441a      	add	r2, r3
 8021e4e:	9b2c      	ldr	r3, [sp, #176]	; 0xb0
 8021e50:	9229      	str	r2, [sp, #164]	; 0xa4
 8021e52:	441d      	add	r5, r3
 8021e54:	9b1a      	ldr	r3, [sp, #104]	; 0x68
 8021e56:	3b01      	subs	r3, #1
 8021e58:	3702      	adds	r7, #2
 8021e5a:	931a      	str	r3, [sp, #104]	; 0x68
 8021e5c:	e694      	b.n	8021b88 <_ZN8touchgfx8LCD16bpp60TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x9a>
 8021e5e:	9b2b      	ldr	r3, [sp, #172]	; 0xac
 8021e60:	9c29      	ldr	r4, [sp, #164]	; 0xa4
 8021e62:	441c      	add	r4, r3
 8021e64:	9b2c      	ldr	r3, [sp, #176]	; 0xb0
 8021e66:	9429      	str	r4, [sp, #164]	; 0xa4
 8021e68:	441d      	add	r5, r3
 8021e6a:	9b09      	ldr	r3, [sp, #36]	; 0x24
 8021e6c:	3b01      	subs	r3, #1
 8021e6e:	9309      	str	r3, [sp, #36]	; 0x24
 8021e70:	9b0c      	ldr	r3, [sp, #48]	; 0x30
 8021e72:	3302      	adds	r3, #2
 8021e74:	930c      	str	r3, [sp, #48]	; 0x30
 8021e76:	e666      	b.n	8021b46 <_ZN8touchgfx8LCD16bpp60TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x58>
 8021e78:	d024      	beq.n	8021ec4 <_ZN8touchgfx8LCD16bpp60TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x3d6>
 8021e7a:	9b09      	ldr	r3, [sp, #36]	; 0x24
 8021e7c:	982b      	ldr	r0, [sp, #172]	; 0xac
 8021e7e:	9c29      	ldr	r4, [sp, #164]	; 0xa4
 8021e80:	3b01      	subs	r3, #1
 8021e82:	fb00 4003 	mla	r0, r0, r3, r4
 8021e86:	1400      	asrs	r0, r0, #16
 8021e88:	f53f ae7b 	bmi.w	8021b82 <_ZN8touchgfx8LCD16bpp60TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x94>
 8021e8c:	3901      	subs	r1, #1
 8021e8e:	4288      	cmp	r0, r1
 8021e90:	f6bf ae77 	bge.w	8021b82 <_ZN8touchgfx8LCD16bpp60TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x94>
 8021e94:	992c      	ldr	r1, [sp, #176]	; 0xb0
 8021e96:	fb01 5303 	mla	r3, r1, r3, r5
 8021e9a:	141b      	asrs	r3, r3, #16
 8021e9c:	f53f ae71 	bmi.w	8021b82 <_ZN8touchgfx8LCD16bpp60TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x94>
 8021ea0:	3a01      	subs	r2, #1
 8021ea2:	4293      	cmp	r3, r2
 8021ea4:	f6bf ae6d 	bge.w	8021b82 <_ZN8touchgfx8LCD16bpp60TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x94>
 8021ea8:	f8dd b024 	ldr.w	fp, [sp, #36]	; 0x24
 8021eac:	f8dd 9030 	ldr.w	r9, [sp, #48]	; 0x30
 8021eb0:	f1bb 0f00 	cmp.w	fp, #0
 8021eb4:	dc70      	bgt.n	8021f98 <_ZN8touchgfx8LCD16bpp60TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x4aa>
 8021eb6:	9b09      	ldr	r3, [sp, #36]	; 0x24
 8021eb8:	ea23 74e3 	bic.w	r4, r3, r3, asr #31
 8021ebc:	9b0c      	ldr	r3, [sp, #48]	; 0x30
 8021ebe:	eb03 0344 	add.w	r3, r3, r4, lsl #1
 8021ec2:	930c      	str	r3, [sp, #48]	; 0x30
 8021ec4:	9b19      	ldr	r3, [sp, #100]	; 0x64
 8021ec6:	2b00      	cmp	r3, #0
 8021ec8:	f340 81be 	ble.w	8022248 <_ZN8touchgfx8LCD16bpp60TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x75a>
 8021ecc:	ee30 0a04 	vadd.f32	s0, s0, s8
 8021ed0:	eeb7 7a00 	vmov.f32	s14, #112	; 0x3f800000  1.0
 8021ed4:	eec7 7a00 	vdiv.f32	s15, s14, s0
 8021ed8:	9b28      	ldr	r3, [sp, #160]	; 0xa0
 8021eda:	ee70 0aa4 	vadd.f32	s1, s1, s9
 8021ede:	ee31 1a05 	vadd.f32	s2, s2, s10
 8021ee2:	ee20 7aa7 	vmul.f32	s14, s1, s15
 8021ee6:	eef0 6a62 	vmov.f32	s13, s5
 8021eea:	ee61 7a27 	vmul.f32	s15, s2, s15
 8021eee:	eefe 6ac8 	vcvt.s32.f32	s13, s13, #16
 8021ef2:	ee77 2a62 	vsub.f32	s5, s14, s5
 8021ef6:	edcd 6a29 	vstr	s13, [sp, #164]	; 0xa4
 8021efa:	eefe 2ac8 	vcvt.s32.f32	s5, s5, #16
 8021efe:	eef0 6a43 	vmov.f32	s13, s6
 8021f02:	ee37 3ac3 	vsub.f32	s6, s15, s6
 8021f06:	ee12 2a90 	vmov	r2, s5
 8021f0a:	eebe 3ac8 	vcvt.s32.f32	s6, s6, #16
 8021f0e:	fb92 f3f3 	sdiv	r3, r2, r3
 8021f12:	ee13 2a10 	vmov	r2, s6
 8021f16:	932b      	str	r3, [sp, #172]	; 0xac
 8021f18:	9b28      	ldr	r3, [sp, #160]	; 0xa0
 8021f1a:	fb92 f3f3 	sdiv	r3, r2, r3
 8021f1e:	932c      	str	r3, [sp, #176]	; 0xb0
 8021f20:	9b19      	ldr	r3, [sp, #100]	; 0x64
 8021f22:	9a1b      	ldr	r2, [sp, #108]	; 0x6c
 8021f24:	3b01      	subs	r3, #1
 8021f26:	eefe 6ac8 	vcvt.s32.f32	s13, s13, #16
 8021f2a:	9319      	str	r3, [sp, #100]	; 0x64
 8021f2c:	9b28      	ldr	r3, [sp, #160]	; 0xa0
 8021f2e:	bf08      	it	eq
 8021f30:	4613      	moveq	r3, r2
 8021f32:	ee16 5a90 	vmov	r5, s13
 8021f36:	9309      	str	r3, [sp, #36]	; 0x24
 8021f38:	eeb0 3a67 	vmov.f32	s6, s15
 8021f3c:	eef0 2a47 	vmov.f32	s5, s14
 8021f40:	e5f3      	b.n	8021b2a <_ZN8touchgfx8LCD16bpp60TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x3c>
 8021f42:	2900      	cmp	r1, #0
 8021f44:	f43f ae66 	beq.w	8021c14 <_ZN8touchgfx8LCD16bpp60TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x126>
 8021f48:	f818 0000 	ldrb.w	r0, [r8, r0]
 8021f4c:	f856 0020 	ldr.w	r0, [r6, r0, lsl #2]
 8021f50:	900a      	str	r0, [sp, #40]	; 0x28
 8021f52:	0e00      	lsrs	r0, r0, #24
 8021f54:	9013      	str	r0, [sp, #76]	; 0x4c
 8021f56:	e65d      	b.n	8021c14 <_ZN8touchgfx8LCD16bpp60TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x126>
 8021f58:	f113 0801 	adds.w	r8, r3, #1
 8021f5c:	f53f af74 	bmi.w	8021e48 <_ZN8touchgfx8LCD16bpp60TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x35a>
 8021f60:	4540      	cmp	r0, r8
 8021f62:	f6ff af71 	blt.w	8021e48 <_ZN8touchgfx8LCD16bpp60TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x35a>
 8021f66:	f11c 0801 	adds.w	r8, ip, #1
 8021f6a:	f53f af6d 	bmi.w	8021e48 <_ZN8touchgfx8LCD16bpp60TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x35a>
 8021f6e:	45c6      	cmp	lr, r8
 8021f70:	f6ff af6a 	blt.w	8021e48 <_ZN8touchgfx8LCD16bpp60TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x35a>
 8021f74:	9c1c      	ldr	r4, [sp, #112]	; 0x70
 8021f76:	9302      	str	r3, [sp, #8]
 8021f78:	b200      	sxth	r0, r0
 8021f7a:	fa0f f38e 	sxth.w	r3, lr
 8021f7e:	e9cd 1405 	strd	r1, r4, [sp, #20]
 8021f82:	e9cd c203 	strd	ip, r2, [sp, #12]
 8021f86:	9301      	str	r3, [sp, #4]
 8021f88:	9000      	str	r0, [sp, #0]
 8021f8a:	4633      	mov	r3, r6
 8021f8c:	9a12      	ldr	r2, [sp, #72]	; 0x48
 8021f8e:	981d      	ldr	r0, [sp, #116]	; 0x74
 8021f90:	4639      	mov	r1, r7
 8021f92:	f7ff fc62 	bl	802185a <_ZNK8touchgfx8LCD16bpp60TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKhPKmssiihhh>
 8021f96:	e757      	b.n	8021e48 <_ZN8touchgfx8LCD16bpp60TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x35a>
 8021f98:	9b29      	ldr	r3, [sp, #164]	; 0xa4
 8021f9a:	9c29      	ldr	r4, [sp, #164]	; 0xa4
 8021f9c:	f3c3 3203 	ubfx	r2, r3, #12, #4
 8021fa0:	9b30      	ldr	r3, [sp, #192]	; 0xc0
 8021fa2:	f9b3 1008 	ldrsh.w	r1, [r3, #8]
 8021fa6:	1427      	asrs	r7, r4, #16
 8021fa8:	142b      	asrs	r3, r5, #16
 8021faa:	fb01 7303 	mla	r3, r1, r3, r7
 8021fae:	9c12      	ldr	r4, [sp, #72]	; 0x48
 8021fb0:	18e7      	adds	r7, r4, r3
 8021fb2:	5ce3      	ldrb	r3, [r4, r3]
 8021fb4:	f856 3023 	ldr.w	r3, [r6, r3, lsl #2]
 8021fb8:	f3c5 3003 	ubfx	r0, r5, #12, #4
 8021fbc:	ea4f 6c13 	mov.w	ip, r3, lsr #24
 8021fc0:	2a00      	cmp	r2, #0
 8021fc2:	f000 8137 	beq.w	8022234 <_ZN8touchgfx8LCD16bpp60TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x746>
 8021fc6:	f897 e001 	ldrb.w	lr, [r7, #1]
 8021fca:	f856 402e 	ldr.w	r4, [r6, lr, lsl #2]
 8021fce:	9410      	str	r4, [sp, #64]	; 0x40
 8021fd0:	0e24      	lsrs	r4, r4, #24
 8021fd2:	9417      	str	r4, [sp, #92]	; 0x5c
 8021fd4:	b170      	cbz	r0, 8021ff4 <_ZN8touchgfx8LCD16bpp60TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x506>
 8021fd6:	eb07 0e01 	add.w	lr, r7, r1
 8021fda:	5c79      	ldrb	r1, [r7, r1]
 8021fdc:	f856 1021 	ldr.w	r1, [r6, r1, lsl #2]
 8021fe0:	910b      	str	r1, [sp, #44]	; 0x2c
 8021fe2:	0e09      	lsrs	r1, r1, #24
 8021fe4:	9114      	str	r1, [sp, #80]	; 0x50
 8021fe6:	f89e 1001 	ldrb.w	r1, [lr, #1]
 8021fea:	f856 1021 	ldr.w	r1, [r6, r1, lsl #2]
 8021fee:	9111      	str	r1, [sp, #68]	; 0x44
 8021ff0:	0e09      	lsrs	r1, r1, #24
 8021ff2:	9118      	str	r1, [sp, #96]	; 0x60
 8021ff4:	b292      	uxth	r2, r2
 8021ff6:	b280      	uxth	r0, r0
 8021ff8:	fb02 f800 	mul.w	r8, r2, r0
 8021ffc:	ebc8 1000 	rsb	r0, r8, r0, lsl #4
 8022000:	0112      	lsls	r2, r2, #4
 8022002:	eba2 0e08 	sub.w	lr, r2, r8
 8022006:	b280      	uxth	r0, r0
 8022008:	f5c2 7280 	rsb	r2, r2, #256	; 0x100
 802200c:	9917      	ldr	r1, [sp, #92]	; 0x5c
 802200e:	9c14      	ldr	r4, [sp, #80]	; 0x50
 8022010:	fa1f fe8e 	uxth.w	lr, lr
 8022014:	1a12      	subs	r2, r2, r0
 8022016:	b292      	uxth	r2, r2
 8022018:	fb0e f101 	mul.w	r1, lr, r1
 802201c:	fb02 110c 	mla	r1, r2, ip, r1
 8022020:	fb00 1104 	mla	r1, r0, r4, r1
 8022024:	9c18      	ldr	r4, [sp, #96]	; 0x60
 8022026:	fb08 1104 	mla	r1, r8, r4, r1
 802202a:	f3c1 2107 	ubfx	r1, r1, #8, #8
 802202e:	2900      	cmp	r1, #0
 8022030:	f000 80f5 	beq.w	802221e <_ZN8touchgfx8LCD16bpp60TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x730>
 8022034:	f1bc 0fff 	cmp.w	ip, #255	; 0xff
 8022038:	d019      	beq.n	802206e <_ZN8touchgfx8LCD16bpp60TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x580>
 802203a:	f003 1aff 	and.w	sl, r3, #16711935	; 0xff00ff
 802203e:	fb0c fa0a 	mul.w	sl, ip, sl
 8022042:	f403 437f 	and.w	r3, r3, #65280	; 0xff00
 8022046:	fb0c fc03 	mul.w	ip, ip, r3
 802204a:	ea4f 231a 	mov.w	r3, sl, lsr #8
 802204e:	f003 13ff 	and.w	r3, r3, #16711935	; 0xff00ff
 8022052:	f10a 1a01 	add.w	sl, sl, #65537	; 0x10001
 8022056:	f50c 7780 	add.w	r7, ip, #256	; 0x100
 802205a:	4453      	add	r3, sl
 802205c:	eb07 271c 	add.w	r7, r7, ip, lsr #8
 8022060:	0a1b      	lsrs	r3, r3, #8
 8022062:	0a3f      	lsrs	r7, r7, #8
 8022064:	f003 13ff 	and.w	r3, r3, #16711935	; 0xff00ff
 8022068:	f407 477f 	and.w	r7, r7, #65280	; 0xff00
 802206c:	433b      	orrs	r3, r7
 802206e:	9c17      	ldr	r4, [sp, #92]	; 0x5c
 8022070:	2cff      	cmp	r4, #255	; 0xff
 8022072:	d020      	beq.n	80220b6 <_ZN8touchgfx8LCD16bpp60TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x5c8>
 8022074:	9c10      	ldr	r4, [sp, #64]	; 0x40
 8022076:	f004 17ff 	and.w	r7, r4, #16711935	; 0xff00ff
 802207a:	9c17      	ldr	r4, [sp, #92]	; 0x5c
 802207c:	4367      	muls	r7, r4
 802207e:	9c10      	ldr	r4, [sp, #64]	; 0x40
 8022080:	f404 4a7f 	and.w	sl, r4, #65280	; 0xff00
 8022084:	9c17      	ldr	r4, [sp, #92]	; 0x5c
 8022086:	ea4f 2c17 	mov.w	ip, r7, lsr #8
 802208a:	fb04 fa0a 	mul.w	sl, r4, sl
 802208e:	f107 1701 	add.w	r7, r7, #65537	; 0x10001
 8022092:	f00c 1cff 	and.w	ip, ip, #16711935	; 0xff00ff
 8022096:	44bc      	add	ip, r7
 8022098:	f50a 7780 	add.w	r7, sl, #256	; 0x100
 802209c:	eb07 2a1a 	add.w	sl, r7, sl, lsr #8
 80220a0:	ea4f 2c1c 	mov.w	ip, ip, lsr #8
 80220a4:	ea4f 2a1a 	mov.w	sl, sl, lsr #8
 80220a8:	f00c 1cff 	and.w	ip, ip, #16711935	; 0xff00ff
 80220ac:	f40a 4a7f 	and.w	sl, sl, #65280	; 0xff00
 80220b0:	ea4c 040a 	orr.w	r4, ip, sl
 80220b4:	9410      	str	r4, [sp, #64]	; 0x40
 80220b6:	9c14      	ldr	r4, [sp, #80]	; 0x50
 80220b8:	2cff      	cmp	r4, #255	; 0xff
 80220ba:	d020      	beq.n	80220fe <_ZN8touchgfx8LCD16bpp60TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x610>
 80220bc:	9c0b      	ldr	r4, [sp, #44]	; 0x2c
 80220be:	f004 17ff 	and.w	r7, r4, #16711935	; 0xff00ff
 80220c2:	9c14      	ldr	r4, [sp, #80]	; 0x50
 80220c4:	4367      	muls	r7, r4
 80220c6:	9c0b      	ldr	r4, [sp, #44]	; 0x2c
 80220c8:	f404 4a7f 	and.w	sl, r4, #65280	; 0xff00
 80220cc:	9c14      	ldr	r4, [sp, #80]	; 0x50
 80220ce:	ea4f 2c17 	mov.w	ip, r7, lsr #8
 80220d2:	fb04 fa0a 	mul.w	sl, r4, sl
 80220d6:	f107 1701 	add.w	r7, r7, #65537	; 0x10001
 80220da:	f00c 1cff 	and.w	ip, ip, #16711935	; 0xff00ff
 80220de:	44bc      	add	ip, r7
 80220e0:	f50a 7780 	add.w	r7, sl, #256	; 0x100
 80220e4:	eb07 2a1a 	add.w	sl, r7, sl, lsr #8
 80220e8:	ea4f 2c1c 	mov.w	ip, ip, lsr #8
 80220ec:	ea4f 2a1a 	mov.w	sl, sl, lsr #8
 80220f0:	f00c 1cff 	and.w	ip, ip, #16711935	; 0xff00ff
 80220f4:	f40a 4a7f 	and.w	sl, sl, #65280	; 0xff00
 80220f8:	ea4c 040a 	orr.w	r4, ip, sl
 80220fc:	940b      	str	r4, [sp, #44]	; 0x2c
 80220fe:	9c18      	ldr	r4, [sp, #96]	; 0x60
 8022100:	2cff      	cmp	r4, #255	; 0xff
 8022102:	d020      	beq.n	8022146 <_ZN8touchgfx8LCD16bpp60TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x658>
 8022104:	9c11      	ldr	r4, [sp, #68]	; 0x44
 8022106:	f004 17ff 	and.w	r7, r4, #16711935	; 0xff00ff
 802210a:	9c18      	ldr	r4, [sp, #96]	; 0x60
 802210c:	4367      	muls	r7, r4
 802210e:	9c11      	ldr	r4, [sp, #68]	; 0x44
 8022110:	f404 4a7f 	and.w	sl, r4, #65280	; 0xff00
 8022114:	9c18      	ldr	r4, [sp, #96]	; 0x60
 8022116:	ea4f 2c17 	mov.w	ip, r7, lsr #8
 802211a:	fb04 fa0a 	mul.w	sl, r4, sl
 802211e:	f107 1701 	add.w	r7, r7, #65537	; 0x10001
 8022122:	f00c 1cff 	and.w	ip, ip, #16711935	; 0xff00ff
 8022126:	44bc      	add	ip, r7
 8022128:	f50a 7780 	add.w	r7, sl, #256	; 0x100
 802212c:	eb07 2a1a 	add.w	sl, r7, sl, lsr #8
 8022130:	ea4f 2c1c 	mov.w	ip, ip, lsr #8
 8022134:	ea4f 2a1a 	mov.w	sl, sl, lsr #8
 8022138:	f00c 1cff 	and.w	ip, ip, #16711935	; 0xff00ff
 802213c:	f40a 4a7f 	and.w	sl, sl, #65280	; 0xff00
 8022140:	ea4c 040a 	orr.w	r4, ip, sl
 8022144:	9411      	str	r4, [sp, #68]	; 0x44
 8022146:	9c10      	ldr	r4, [sp, #64]	; 0x40
 8022148:	f004 17ff 	and.w	r7, r4, #16711935	; 0xff00ff
 802214c:	9c0b      	ldr	r4, [sp, #44]	; 0x2c
 802214e:	f003 1cff 	and.w	ip, r3, #16711935	; 0xff00ff
 8022152:	fb0e f707 	mul.w	r7, lr, r7
 8022156:	fb02 770c 	mla	r7, r2, ip, r7
 802215a:	f004 1cff 	and.w	ip, r4, #16711935	; 0xff00ff
 802215e:	9c11      	ldr	r4, [sp, #68]	; 0x44
 8022160:	fb00 770c 	mla	r7, r0, ip, r7
 8022164:	f004 1cff 	and.w	ip, r4, #16711935	; 0xff00ff
 8022168:	9c10      	ldr	r4, [sp, #64]	; 0x40
 802216a:	fb08 770c 	mla	r7, r8, ip, r7
 802216e:	f404 4c7f 	and.w	ip, r4, #65280	; 0xff00
 8022172:	fb0e fe0c 	mul.w	lr, lr, ip
 8022176:	f403 437f 	and.w	r3, r3, #65280	; 0xff00
 802217a:	fb02 e303 	mla	r3, r2, r3, lr
 802217e:	9a0b      	ldr	r2, [sp, #44]	; 0x2c
 8022180:	9c0d      	ldr	r4, [sp, #52]	; 0x34
 8022182:	f402 4a7f 	and.w	sl, r2, #65280	; 0xff00
 8022186:	9a11      	ldr	r2, [sp, #68]	; 0x44
 8022188:	fb00 330a 	mla	r3, r0, sl, r3
 802218c:	f402 4c7f 	and.w	ip, r2, #65280	; 0xff00
 8022190:	fb08 3c0c 	mla	ip, r8, ip, r3
 8022194:	9b0d      	ldr	r3, [sp, #52]	; 0x34
 8022196:	f8b9 0000 	ldrh.w	r0, [r9]
 802219a:	434b      	muls	r3, r1
 802219c:	0a3f      	lsrs	r7, r7, #8
 802219e:	ea4f 2c1c 	mov.w	ip, ip, lsr #8
 80221a2:	f40c 4c7f 	and.w	ip, ip, #65280	; 0xff00
 80221a6:	1c59      	adds	r1, r3, #1
 80221a8:	f007 17ff 	and.w	r7, r7, #16711935	; 0xff00ff
 80221ac:	ea47 070c 	orr.w	r7, r7, ip
 80221b0:	eb01 2113 	add.w	r1, r1, r3, lsr #8
 80221b4:	1202      	asrs	r2, r0, #8
 80221b6:	0c3b      	lsrs	r3, r7, #16
 80221b8:	ea6f 2111 	mvn.w	r1, r1, lsr #8
 80221bc:	b2c9      	uxtb	r1, r1
 80221be:	fb13 f304 	smulbb	r3, r3, r4
 80221c2:	f002 02f8 	and.w	r2, r2, #248	; 0xf8
 80221c6:	fb02 3201 	mla	r2, r2, r1, r3
 80221ca:	f3c7 2c07 	ubfx	ip, r7, #8, #8
 80221ce:	10c3      	asrs	r3, r0, #3
 80221d0:	b2ff      	uxtb	r7, r7
 80221d2:	00c0      	lsls	r0, r0, #3
 80221d4:	b292      	uxth	r2, r2
 80221d6:	fb1c fc04 	smulbb	ip, ip, r4
 80221da:	f003 03fc 	and.w	r3, r3, #252	; 0xfc
 80221de:	b2c0      	uxtb	r0, r0
 80221e0:	fb17 f704 	smulbb	r7, r7, r4
 80221e4:	fb03 c301 	mla	r3, r3, r1, ip
 80221e8:	fb00 7001 	mla	r0, r0, r1, r7
 80221ec:	f102 0c01 	add.w	ip, r2, #1
 80221f0:	b280      	uxth	r0, r0
 80221f2:	eb0c 2212 	add.w	r2, ip, r2, lsr #8
 80221f6:	f402 4c78 	and.w	ip, r2, #63488	; 0xf800
 80221fa:	1c42      	adds	r2, r0, #1
 80221fc:	eb02 2210 	add.w	r2, r2, r0, lsr #8
 8022200:	b29b      	uxth	r3, r3
 8022202:	f3c2 22c4 	ubfx	r2, r2, #11, #5
 8022206:	ea42 020c 	orr.w	r2, r2, ip
 802220a:	f103 0c01 	add.w	ip, r3, #1
 802220e:	eb0c 2313 	add.w	r3, ip, r3, lsr #8
 8022212:	095b      	lsrs	r3, r3, #5
 8022214:	f403 63fc 	and.w	r3, r3, #2016	; 0x7e0
 8022218:	431a      	orrs	r2, r3
 802221a:	f8a9 2000 	strh.w	r2, [r9]
 802221e:	9b2b      	ldr	r3, [sp, #172]	; 0xac
 8022220:	9a29      	ldr	r2, [sp, #164]	; 0xa4
 8022222:	441a      	add	r2, r3
 8022224:	9b2c      	ldr	r3, [sp, #176]	; 0xb0
 8022226:	9229      	str	r2, [sp, #164]	; 0xa4
 8022228:	f109 0902 	add.w	r9, r9, #2
 802222c:	441d      	add	r5, r3
 802222e:	f10b 3bff 	add.w	fp, fp, #4294967295
 8022232:	e63d      	b.n	8021eb0 <_ZN8touchgfx8LCD16bpp60TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x3c2>
 8022234:	2800      	cmp	r0, #0
 8022236:	f43f aedd 	beq.w	8021ff4 <_ZN8touchgfx8LCD16bpp60TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x506>
 802223a:	5c79      	ldrb	r1, [r7, r1]
 802223c:	f856 1021 	ldr.w	r1, [r6, r1, lsl #2]
 8022240:	910b      	str	r1, [sp, #44]	; 0x2c
 8022242:	0e09      	lsrs	r1, r1, #24
 8022244:	9114      	str	r1, [sp, #80]	; 0x50
 8022246:	e6d5      	b.n	8021ff4 <_ZN8touchgfx8LCD16bpp60TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x506>
 8022248:	b01f      	add	sp, #124	; 0x7c
 802224a:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}

0802224e <_ZNK8touchgfx8LCD16bpp62TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhPKmssiihh>:
 802224e:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 8022252:	b089      	sub	sp, #36	; 0x24
 8022254:	9101      	str	r1, [sp, #4]
 8022256:	9801      	ldr	r0, [sp, #4]
 8022258:	f9bd c048 	ldrsh.w	ip, [sp, #72]	; 0x48
 802225c:	8800      	ldrh	r0, [r0, #0]
 802225e:	f9bd 804c 	ldrsh.w	r8, [sp, #76]	; 0x4c
 8022262:	f89d 5058 	ldrb.w	r5, [sp, #88]	; 0x58
 8022266:	f89d 405c 	ldrb.w	r4, [sp, #92]	; 0x5c
 802226a:	1206      	asrs	r6, r0, #8
 802226c:	e9dd 1714 	ldrd	r1, r7, [sp, #80]	; 0x50
 8022270:	f006 06f8 	and.w	r6, r6, #248	; 0xf8
 8022274:	9602      	str	r6, [sp, #8]
 8022276:	10c6      	asrs	r6, r0, #3
 8022278:	00c0      	lsls	r0, r0, #3
 802227a:	b2c0      	uxtb	r0, r0
 802227c:	f006 06fc 	and.w	r6, r6, #252	; 0xfc
 8022280:	9004      	str	r0, [sp, #16]
 8022282:	2f00      	cmp	r7, #0
 8022284:	fb07 100c 	mla	r0, r7, ip, r1
 8022288:	9603      	str	r6, [sp, #12]
 802228a:	eb02 0e00 	add.w	lr, r2, r0
 802228e:	f2c0 810a 	blt.w	80224a6 <_ZNK8touchgfx8LCD16bpp62TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhPKmssiihh+0x258>
 8022292:	45b8      	cmp	r8, r7
 8022294:	f340 8107 	ble.w	80224a6 <_ZNK8touchgfx8LCD16bpp62TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhPKmssiihh+0x258>
 8022298:	2900      	cmp	r1, #0
 802229a:	f2c0 8102 	blt.w	80224a2 <_ZNK8touchgfx8LCD16bpp62TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhPKmssiihh+0x254>
 802229e:	458c      	cmp	ip, r1
 80222a0:	f340 80ff 	ble.w	80224a2 <_ZNK8touchgfx8LCD16bpp62TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhPKmssiihh+0x254>
 80222a4:	5c12      	ldrb	r2, [r2, r0]
 80222a6:	f853 0022 	ldr.w	r0, [r3, r2, lsl #2]
 80222aa:	1c4a      	adds	r2, r1, #1
 80222ac:	f100 80fe 	bmi.w	80224ac <_ZNK8touchgfx8LCD16bpp62TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhPKmssiihh+0x25e>
 80222b0:	4594      	cmp	ip, r2
 80222b2:	f340 80fb 	ble.w	80224ac <_ZNK8touchgfx8LCD16bpp62TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhPKmssiihh+0x25e>
 80222b6:	2d00      	cmp	r5, #0
 80222b8:	f000 80fa 	beq.w	80224b0 <_ZNK8touchgfx8LCD16bpp62TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhPKmssiihh+0x262>
 80222bc:	f89e 2001 	ldrb.w	r2, [lr, #1]
 80222c0:	f853 6022 	ldr.w	r6, [r3, r2, lsl #2]
 80222c4:	3701      	adds	r7, #1
 80222c6:	f100 80f7 	bmi.w	80224b8 <_ZNK8touchgfx8LCD16bpp62TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhPKmssiihh+0x26a>
 80222ca:	45b8      	cmp	r8, r7
 80222cc:	f340 80f4 	ble.w	80224b8 <_ZNK8touchgfx8LCD16bpp62TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhPKmssiihh+0x26a>
 80222d0:	2c00      	cmp	r4, #0
 80222d2:	f000 80f4 	beq.w	80224be <_ZNK8touchgfx8LCD16bpp62TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhPKmssiihh+0x270>
 80222d6:	2900      	cmp	r1, #0
 80222d8:	eb0e 020c 	add.w	r2, lr, ip
 80222dc:	f2c0 80ea 	blt.w	80224b4 <_ZNK8touchgfx8LCD16bpp62TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhPKmssiihh+0x266>
 80222e0:	458c      	cmp	ip, r1
 80222e2:	f340 80e7 	ble.w	80224b4 <_ZNK8touchgfx8LCD16bpp62TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhPKmssiihh+0x266>
 80222e6:	f81e 700c 	ldrb.w	r7, [lr, ip]
 80222ea:	f853 7027 	ldr.w	r7, [r3, r7, lsl #2]
 80222ee:	3101      	adds	r1, #1
 80222f0:	f100 80e8 	bmi.w	80224c4 <_ZNK8touchgfx8LCD16bpp62TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhPKmssiihh+0x276>
 80222f4:	458c      	cmp	ip, r1
 80222f6:	f340 80e5 	ble.w	80224c4 <_ZNK8touchgfx8LCD16bpp62TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhPKmssiihh+0x276>
 80222fa:	2d00      	cmp	r5, #0
 80222fc:	f000 80e4 	beq.w	80224c8 <_ZNK8touchgfx8LCD16bpp62TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhPKmssiihh+0x27a>
 8022300:	7852      	ldrb	r2, [r2, #1]
 8022302:	f853 1022 	ldr.w	r1, [r3, r2, lsl #2]
 8022306:	0e0b      	lsrs	r3, r1, #24
 8022308:	ea4f 6a10 	mov.w	sl, r0, lsr #24
 802230c:	9300      	str	r3, [sp, #0]
 802230e:	b2a4      	uxth	r4, r4
 8022310:	b2ab      	uxth	r3, r5
 8022312:	f000 15ff 	and.w	r5, r0, #16711935	; 0xff00ff
 8022316:	fb03 f904 	mul.w	r9, r3, r4
 802231a:	fb0a f505 	mul.w	r5, sl, r5
 802231e:	011b      	lsls	r3, r3, #4
 8022320:	eba3 0e09 	sub.w	lr, r3, r9
 8022324:	f5c3 7280 	rsb	r2, r3, #256	; 0x100
 8022328:	f400 437f 	and.w	r3, r0, #65280	; 0xff00
 802232c:	0a28      	lsrs	r0, r5, #8
 802232e:	f000 10ff 	and.w	r0, r0, #16711935	; 0xff00ff
 8022332:	f105 1501 	add.w	r5, r5, #65537	; 0x10001
 8022336:	4405      	add	r5, r0
 8022338:	0a2d      	lsrs	r5, r5, #8
 802233a:	fb0a f303 	mul.w	r3, sl, r3
 802233e:	f005 10ff 	and.w	r0, r5, #16711935	; 0xff00ff
 8022342:	9005      	str	r0, [sp, #20]
 8022344:	f503 7080 	add.w	r0, r3, #256	; 0x100
 8022348:	eb00 2313 	add.w	r3, r0, r3, lsr #8
 802234c:	0a1b      	lsrs	r3, r3, #8
 802234e:	ea4f 6b16 	mov.w	fp, r6, lsr #24
 8022352:	9306      	str	r3, [sp, #24]
 8022354:	f006 13ff 	and.w	r3, r6, #16711935	; 0xff00ff
 8022358:	fb0b f303 	mul.w	r3, fp, r3
 802235c:	0a1d      	lsrs	r5, r3, #8
 802235e:	f406 467f 	and.w	r6, r6, #65280	; 0xff00
 8022362:	ea4f 6817 	mov.w	r8, r7, lsr #24
 8022366:	fb0b f606 	mul.w	r6, fp, r6
 802236a:	f103 1301 	add.w	r3, r3, #65537	; 0x10001
 802236e:	f007 1cff 	and.w	ip, r7, #16711935	; 0xff00ff
 8022372:	f005 15ff 	and.w	r5, r5, #16711935	; 0xff00ff
 8022376:	f407 477f 	and.w	r7, r7, #65280	; 0xff00
 802237a:	fb08 f707 	mul.w	r7, r8, r7
 802237e:	441d      	add	r5, r3
 8022380:	f506 7380 	add.w	r3, r6, #256	; 0x100
 8022384:	eb03 2616 	add.w	r6, r3, r6, lsr #8
 8022388:	f507 7380 	add.w	r3, r7, #256	; 0x100
 802238c:	eb03 2317 	add.w	r3, r3, r7, lsr #8
 8022390:	fb08 fc0c 	mul.w	ip, r8, ip
 8022394:	0a1b      	lsrs	r3, r3, #8
 8022396:	9307      	str	r3, [sp, #28]
 8022398:	ea4f 201c 	mov.w	r0, ip, lsr #8
 802239c:	0e0b      	lsrs	r3, r1, #24
 802239e:	f001 17ff 	and.w	r7, r1, #16711935	; 0xff00ff
 80223a2:	435f      	muls	r7, r3
 80223a4:	f10c 1c01 	add.w	ip, ip, #65537	; 0x10001
 80223a8:	f000 10ff 	and.w	r0, r0, #16711935	; 0xff00ff
 80223ac:	ebc9 1404 	rsb	r4, r9, r4, lsl #4
 80223b0:	4460      	add	r0, ip
 80223b2:	ea4f 2c17 	mov.w	ip, r7, lsr #8
 80223b6:	b2a4      	uxth	r4, r4
 80223b8:	f107 1701 	add.w	r7, r7, #65537	; 0x10001
 80223bc:	0a2d      	lsrs	r5, r5, #8
 80223be:	f401 417f 	and.w	r1, r1, #65280	; 0xff00
 80223c2:	f00c 1cff 	and.w	ip, ip, #16711935	; 0xff00ff
 80223c6:	fa1f fe8e 	uxth.w	lr, lr
 80223ca:	4359      	muls	r1, r3
 80223cc:	1b12      	subs	r2, r2, r4
 80223ce:	9b05      	ldr	r3, [sp, #20]
 80223d0:	44bc      	add	ip, r7
 80223d2:	f005 15ff 	and.w	r5, r5, #16711935	; 0xff00ff
 80223d6:	b292      	uxth	r2, r2
 80223d8:	fb05 f50e 	mul.w	r5, r5, lr
 80223dc:	ea4f 2c1c 	mov.w	ip, ip, lsr #8
 80223e0:	fb03 5502 	mla	r5, r3, r2, r5
 80223e4:	f00c 1cff 	and.w	ip, ip, #16711935	; 0xff00ff
 80223e8:	9b06      	ldr	r3, [sp, #24]
 80223ea:	f501 7780 	add.w	r7, r1, #256	; 0x100
 80223ee:	0a36      	lsrs	r6, r6, #8
 80223f0:	0a00      	lsrs	r0, r0, #8
 80223f2:	fb0c 5509 	mla	r5, ip, r9, r5
 80223f6:	f000 10ff 	and.w	r0, r0, #16711935	; 0xff00ff
 80223fa:	eb07 2111 	add.w	r1, r7, r1, lsr #8
 80223fe:	f406 467f 	and.w	r6, r6, #65280	; 0xff00
 8022402:	fb00 5504 	mla	r5, r0, r4, r5
 8022406:	fb0e f606 	mul.w	r6, lr, r6
 802240a:	f403 407f 	and.w	r0, r3, #65280	; 0xff00
 802240e:	0a09      	lsrs	r1, r1, #8
 8022410:	9b07      	ldr	r3, [sp, #28]
 8022412:	fb02 6000 	mla	r0, r2, r0, r6
 8022416:	f401 417f 	and.w	r1, r1, #65280	; 0xff00
 802241a:	fb09 0001 	mla	r0, r9, r1, r0
 802241e:	f403 437f 	and.w	r3, r3, #65280	; 0xff00
 8022422:	fb0e fe0b 	mul.w	lr, lr, fp
 8022426:	fb04 0003 	mla	r0, r4, r3, r0
 802242a:	fb02 e20a 	mla	r2, r2, sl, lr
 802242e:	9b00      	ldr	r3, [sp, #0]
 8022430:	fb04 2408 	mla	r4, r4, r8, r2
 8022434:	fb09 4903 	mla	r9, r9, r3, r4
 8022438:	ea6f 2929 	mvn.w	r9, r9, asr #8
 802243c:	9b02      	ldr	r3, [sp, #8]
 802243e:	9a04      	ldr	r2, [sp, #16]
 8022440:	fa5f f989 	uxtb.w	r9, r9
 8022444:	fb03 f109 	mul.w	r1, r3, r9
 8022448:	9b03      	ldr	r3, [sp, #12]
 802244a:	0a2d      	lsrs	r5, r5, #8
 802244c:	0a00      	lsrs	r0, r0, #8
 802244e:	fb03 f309 	mul.w	r3, r3, r9
 8022452:	f400 407f 	and.w	r0, r0, #65280	; 0xff00
 8022456:	f005 15ff 	and.w	r5, r5, #16711935	; 0xff00ff
 802245a:	4305      	orrs	r5, r0
 802245c:	fb02 f909 	mul.w	r9, r2, r9
 8022460:	1c58      	adds	r0, r3, #1
 8022462:	1c4a      	adds	r2, r1, #1
 8022464:	eb00 2013 	add.w	r0, r0, r3, lsr #8
 8022468:	eb02 2111 	add.w	r1, r2, r1, lsr #8
 802246c:	0a2b      	lsrs	r3, r5, #8
 802246e:	0c2a      	lsrs	r2, r5, #16
 8022470:	eb03 2310 	add.w	r3, r3, r0, lsr #8
 8022474:	eb02 2211 	add.w	r2, r2, r1, lsr #8
 8022478:	00db      	lsls	r3, r3, #3
 802247a:	0212      	lsls	r2, r2, #8
 802247c:	f402 4278 	and.w	r2, r2, #63488	; 0xf800
 8022480:	f403 63fc 	and.w	r3, r3, #2016	; 0x7e0
 8022484:	4313      	orrs	r3, r2
 8022486:	f109 0201 	add.w	r2, r9, #1
 802248a:	eb02 2919 	add.w	r9, r2, r9, lsr #8
 802248e:	eb05 2519 	add.w	r5, r5, r9, lsr #8
 8022492:	f3c5 05c4 	ubfx	r5, r5, #3, #5
 8022496:	431d      	orrs	r5, r3
 8022498:	9b01      	ldr	r3, [sp, #4]
 802249a:	801d      	strh	r5, [r3, #0]
 802249c:	b009      	add	sp, #36	; 0x24
 802249e:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
 80224a2:	2000      	movs	r0, #0
 80224a4:	e701      	b.n	80222aa <_ZNK8touchgfx8LCD16bpp62TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhPKmssiihh+0x5c>
 80224a6:	2600      	movs	r6, #0
 80224a8:	4630      	mov	r0, r6
 80224aa:	e70b      	b.n	80222c4 <_ZNK8touchgfx8LCD16bpp62TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhPKmssiihh+0x76>
 80224ac:	2600      	movs	r6, #0
 80224ae:	e709      	b.n	80222c4 <_ZNK8touchgfx8LCD16bpp62TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhPKmssiihh+0x76>
 80224b0:	462e      	mov	r6, r5
 80224b2:	e707      	b.n	80222c4 <_ZNK8touchgfx8LCD16bpp62TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhPKmssiihh+0x76>
 80224b4:	2700      	movs	r7, #0
 80224b6:	e71a      	b.n	80222ee <_ZNK8touchgfx8LCD16bpp62TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhPKmssiihh+0xa0>
 80224b8:	2100      	movs	r1, #0
 80224ba:	460f      	mov	r7, r1
 80224bc:	e723      	b.n	8022306 <_ZNK8touchgfx8LCD16bpp62TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhPKmssiihh+0xb8>
 80224be:	4621      	mov	r1, r4
 80224c0:	4627      	mov	r7, r4
 80224c2:	e720      	b.n	8022306 <_ZNK8touchgfx8LCD16bpp62TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhPKmssiihh+0xb8>
 80224c4:	2100      	movs	r1, #0
 80224c6:	e71e      	b.n	8022306 <_ZNK8touchgfx8LCD16bpp62TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhPKmssiihh+0xb8>
 80224c8:	4629      	mov	r1, r5
 80224ca:	e71c      	b.n	8022306 <_ZNK8touchgfx8LCD16bpp62TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhPKmssiihh+0xb8>

080224cc <_ZN8touchgfx8LCD16bpp62TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff>:
 80224cc:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 80224d0:	b09b      	sub	sp, #108	; 0x6c
 80224d2:	9218      	str	r2, [sp, #96]	; 0x60
 80224d4:	9a29      	ldr	r2, [sp, #164]	; 0xa4
 80224d6:	9116      	str	r1, [sp, #88]	; 0x58
 80224d8:	9307      	str	r3, [sp, #28]
 80224da:	e9dd 132a 	ldrd	r1, r3, [sp, #168]	; 0xa8
 80224de:	9019      	str	r0, [sp, #100]	; 0x64
 80224e0:	6850      	ldr	r0, [r2, #4]
 80224e2:	6812      	ldr	r2, [r2, #0]
 80224e4:	9d26      	ldr	r5, [sp, #152]	; 0x98
 80224e6:	fb00 1303 	mla	r3, r0, r3, r1
 80224ea:	eb02 0343 	add.w	r3, r2, r3, lsl #1
 80224ee:	930a      	str	r3, [sp, #40]	; 0x28
 80224f0:	9b2c      	ldr	r3, [sp, #176]	; 0xb0
 80224f2:	681b      	ldr	r3, [r3, #0]
 80224f4:	930f      	str	r3, [sp, #60]	; 0x3c
 80224f6:	9b2c      	ldr	r3, [sp, #176]	; 0xb0
 80224f8:	685e      	ldr	r6, [r3, #4]
 80224fa:	3604      	adds	r6, #4
 80224fc:	9b16      	ldr	r3, [sp, #88]	; 0x58
 80224fe:	2b00      	cmp	r3, #0
 8022500:	dc03      	bgt.n	802250a <_ZN8touchgfx8LCD16bpp62TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x3e>
 8022502:	9b18      	ldr	r3, [sp, #96]	; 0x60
 8022504:	2b00      	cmp	r3, #0
 8022506:	f340 8373 	ble.w	8022bf0 <_ZN8touchgfx8LCD16bpp62TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x724>
 802250a:	9b2c      	ldr	r3, [sp, #176]	; 0xb0
 802250c:	f9b3 1008 	ldrsh.w	r1, [r3, #8]
 8022510:	f9b3 200c 	ldrsh.w	r2, [r3, #12]
 8022514:	1e48      	subs	r0, r1, #1
 8022516:	1e57      	subs	r7, r2, #1
 8022518:	9b07      	ldr	r3, [sp, #28]
 802251a:	2b00      	cmp	r3, #0
 802251c:	f340 8190 	ble.w	8022840 <_ZN8touchgfx8LCD16bpp62TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x374>
 8022520:	9c25      	ldr	r4, [sp, #148]	; 0x94
 8022522:	ea5f 4c24 	movs.w	ip, r4, asr #16
 8022526:	ea4f 4325 	mov.w	r3, r5, asr #16
 802252a:	d406      	bmi.n	802253a <_ZN8touchgfx8LCD16bpp62TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x6e>
 802252c:	4584      	cmp	ip, r0
 802252e:	da04      	bge.n	802253a <_ZN8touchgfx8LCD16bpp62TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x6e>
 8022530:	2b00      	cmp	r3, #0
 8022532:	db02      	blt.n	802253a <_ZN8touchgfx8LCD16bpp62TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x6e>
 8022534:	42bb      	cmp	r3, r7
 8022536:	f2c0 8184 	blt.w	8022842 <_ZN8touchgfx8LCD16bpp62TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x376>
 802253a:	f11c 0c01 	adds.w	ip, ip, #1
 802253e:	f100 8172 	bmi.w	8022826 <_ZN8touchgfx8LCD16bpp62TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x35a>
 8022542:	4561      	cmp	r1, ip
 8022544:	f2c0 816f 	blt.w	8022826 <_ZN8touchgfx8LCD16bpp62TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x35a>
 8022548:	3301      	adds	r3, #1
 802254a:	f100 816c 	bmi.w	8022826 <_ZN8touchgfx8LCD16bpp62TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x35a>
 802254e:	429a      	cmp	r2, r3
 8022550:	f2c0 8169 	blt.w	8022826 <_ZN8touchgfx8LCD16bpp62TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x35a>
 8022554:	9b07      	ldr	r3, [sp, #28]
 8022556:	9f0a      	ldr	r7, [sp, #40]	; 0x28
 8022558:	9317      	str	r3, [sp, #92]	; 0x5c
 802255a:	9b17      	ldr	r3, [sp, #92]	; 0x5c
 802255c:	2b00      	cmp	r3, #0
 802255e:	f340 818e 	ble.w	802287e <_ZN8touchgfx8LCD16bpp62TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x3b2>
 8022562:	9b25      	ldr	r3, [sp, #148]	; 0x94
 8022564:	f3c3 3203 	ubfx	r2, r3, #12, #4
 8022568:	9b2c      	ldr	r3, [sp, #176]	; 0xb0
 802256a:	e9d3 1e02 	ldrd	r1, lr, [r3, #8]
 802256e:	9b25      	ldr	r3, [sp, #148]	; 0x94
 8022570:	141b      	asrs	r3, r3, #16
 8022572:	ea4f 4c25 	mov.w	ip, r5, asr #16
 8022576:	f3c5 3003 	ubfx	r0, r5, #12, #4
 802257a:	f100 81d1 	bmi.w	8022920 <_ZN8touchgfx8LCD16bpp62TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x454>
 802257e:	f101 38ff 	add.w	r8, r1, #4294967295
 8022582:	4543      	cmp	r3, r8
 8022584:	f280 81cc 	bge.w	8022920 <_ZN8touchgfx8LCD16bpp62TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x454>
 8022588:	f1bc 0f00 	cmp.w	ip, #0
 802258c:	f2c0 81c8 	blt.w	8022920 <_ZN8touchgfx8LCD16bpp62TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x454>
 8022590:	f10e 38ff 	add.w	r8, lr, #4294967295
 8022594:	45c4      	cmp	ip, r8
 8022596:	f280 81c3 	bge.w	8022920 <_ZN8touchgfx8LCD16bpp62TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x454>
 802259a:	b209      	sxth	r1, r1
 802259c:	fb0c 3301 	mla	r3, ip, r1, r3
 80225a0:	9c0f      	ldr	r4, [sp, #60]	; 0x3c
 80225a2:	eb04 0803 	add.w	r8, r4, r3
 80225a6:	5ce3      	ldrb	r3, [r4, r3]
 80225a8:	f856 3023 	ldr.w	r3, [r6, r3, lsl #2]
 80225ac:	ea4f 6e13 	mov.w	lr, r3, lsr #24
 80225b0:	2a00      	cmp	r2, #0
 80225b2:	f000 81aa 	beq.w	802290a <_ZN8touchgfx8LCD16bpp62TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x43e>
 80225b6:	f898 c001 	ldrb.w	ip, [r8, #1]
 80225ba:	f856 402c 	ldr.w	r4, [r6, ip, lsl #2]
 80225be:	940b      	str	r4, [sp, #44]	; 0x2c
 80225c0:	0e24      	lsrs	r4, r4, #24
 80225c2:	9412      	str	r4, [sp, #72]	; 0x48
 80225c4:	b178      	cbz	r0, 80225e6 <_ZN8touchgfx8LCD16bpp62TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x11a>
 80225c6:	eb08 0c01 	add.w	ip, r8, r1
 80225ca:	f818 1001 	ldrb.w	r1, [r8, r1]
 80225ce:	f856 1021 	ldr.w	r1, [r6, r1, lsl #2]
 80225d2:	9108      	str	r1, [sp, #32]
 80225d4:	0e09      	lsrs	r1, r1, #24
 80225d6:	9110      	str	r1, [sp, #64]	; 0x40
 80225d8:	f89c 1001 	ldrb.w	r1, [ip, #1]
 80225dc:	f856 1021 	ldr.w	r1, [r6, r1, lsl #2]
 80225e0:	910c      	str	r1, [sp, #48]	; 0x30
 80225e2:	0e09      	lsrs	r1, r1, #24
 80225e4:	9113      	str	r1, [sp, #76]	; 0x4c
 80225e6:	b292      	uxth	r2, r2
 80225e8:	b280      	uxth	r0, r0
 80225ea:	fb02 f900 	mul.w	r9, r2, r0
 80225ee:	ebc9 1000 	rsb	r0, r9, r0, lsl #4
 80225f2:	0112      	lsls	r2, r2, #4
 80225f4:	eba2 0809 	sub.w	r8, r2, r9
 80225f8:	b280      	uxth	r0, r0
 80225fa:	f5c2 7280 	rsb	r2, r2, #256	; 0x100
 80225fe:	9912      	ldr	r1, [sp, #72]	; 0x48
 8022600:	9c10      	ldr	r4, [sp, #64]	; 0x40
 8022602:	fa1f f888 	uxth.w	r8, r8
 8022606:	1a12      	subs	r2, r2, r0
 8022608:	b292      	uxth	r2, r2
 802260a:	fb08 f101 	mul.w	r1, r8, r1
 802260e:	fb02 110e 	mla	r1, r2, lr, r1
 8022612:	fb00 1104 	mla	r1, r0, r4, r1
 8022616:	9c13      	ldr	r4, [sp, #76]	; 0x4c
 8022618:	fb09 1104 	mla	r1, r9, r4, r1
 802261c:	f3c1 2107 	ubfx	r1, r1, #8, #8
 8022620:	2900      	cmp	r1, #0
 8022622:	f000 80f5 	beq.w	8022810 <_ZN8touchgfx8LCD16bpp62TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x344>
 8022626:	f1be 0fff 	cmp.w	lr, #255	; 0xff
 802262a:	d01b      	beq.n	8022664 <_ZN8touchgfx8LCD16bpp62TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x198>
 802262c:	f003 1aff 	and.w	sl, r3, #16711935	; 0xff00ff
 8022630:	fb0e fa0a 	mul.w	sl, lr, sl
 8022634:	f403 437f 	and.w	r3, r3, #65280	; 0xff00
 8022638:	fb0e fe03 	mul.w	lr, lr, r3
 802263c:	ea4f 231a 	mov.w	r3, sl, lsr #8
 8022640:	f003 13ff 	and.w	r3, r3, #16711935	; 0xff00ff
 8022644:	f10a 1a01 	add.w	sl, sl, #65537	; 0x10001
 8022648:	f50e 7c80 	add.w	ip, lr, #256	; 0x100
 802264c:	4453      	add	r3, sl
 802264e:	eb0c 2c1e 	add.w	ip, ip, lr, lsr #8
 8022652:	0a1b      	lsrs	r3, r3, #8
 8022654:	ea4f 2c1c 	mov.w	ip, ip, lsr #8
 8022658:	f003 13ff 	and.w	r3, r3, #16711935	; 0xff00ff
 802265c:	f40c 4c7f 	and.w	ip, ip, #65280	; 0xff00
 8022660:	ea43 030c 	orr.w	r3, r3, ip
 8022664:	9c12      	ldr	r4, [sp, #72]	; 0x48
 8022666:	2cff      	cmp	r4, #255	; 0xff
 8022668:	d021      	beq.n	80226ae <_ZN8touchgfx8LCD16bpp62TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x1e2>
 802266a:	9c0b      	ldr	r4, [sp, #44]	; 0x2c
 802266c:	f004 1bff 	and.w	fp, r4, #16711935	; 0xff00ff
 8022670:	9c12      	ldr	r4, [sp, #72]	; 0x48
 8022672:	fb04 fb0b 	mul.w	fp, r4, fp
 8022676:	9c0b      	ldr	r4, [sp, #44]	; 0x2c
 8022678:	f404 4a7f 	and.w	sl, r4, #65280	; 0xff00
 802267c:	9c12      	ldr	r4, [sp, #72]	; 0x48
 802267e:	ea4f 2e1b 	mov.w	lr, fp, lsr #8
 8022682:	fb04 fa0a 	mul.w	sl, r4, sl
 8022686:	f00e 1eff 	and.w	lr, lr, #16711935	; 0xff00ff
 802268a:	f10b 1b01 	add.w	fp, fp, #65537	; 0x10001
 802268e:	f50a 7c80 	add.w	ip, sl, #256	; 0x100
 8022692:	44de      	add	lr, fp
 8022694:	eb0c 2a1a 	add.w	sl, ip, sl, lsr #8
 8022698:	ea4f 2e1e 	mov.w	lr, lr, lsr #8
 802269c:	ea4f 2a1a 	mov.w	sl, sl, lsr #8
 80226a0:	f00e 1eff 	and.w	lr, lr, #16711935	; 0xff00ff
 80226a4:	f40a 4a7f 	and.w	sl, sl, #65280	; 0xff00
 80226a8:	ea4e 040a 	orr.w	r4, lr, sl
 80226ac:	940b      	str	r4, [sp, #44]	; 0x2c
 80226ae:	9c10      	ldr	r4, [sp, #64]	; 0x40
 80226b0:	2cff      	cmp	r4, #255	; 0xff
 80226b2:	d021      	beq.n	80226f8 <_ZN8touchgfx8LCD16bpp62TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x22c>
 80226b4:	9c08      	ldr	r4, [sp, #32]
 80226b6:	f004 1bff 	and.w	fp, r4, #16711935	; 0xff00ff
 80226ba:	9c10      	ldr	r4, [sp, #64]	; 0x40
 80226bc:	fb04 fb0b 	mul.w	fp, r4, fp
 80226c0:	9c08      	ldr	r4, [sp, #32]
 80226c2:	f404 4a7f 	and.w	sl, r4, #65280	; 0xff00
 80226c6:	9c10      	ldr	r4, [sp, #64]	; 0x40
 80226c8:	ea4f 2e1b 	mov.w	lr, fp, lsr #8
 80226cc:	fb04 fa0a 	mul.w	sl, r4, sl
 80226d0:	f00e 1eff 	and.w	lr, lr, #16711935	; 0xff00ff
 80226d4:	f10b 1b01 	add.w	fp, fp, #65537	; 0x10001
 80226d8:	f50a 7c80 	add.w	ip, sl, #256	; 0x100
 80226dc:	44de      	add	lr, fp
 80226de:	eb0c 2a1a 	add.w	sl, ip, sl, lsr #8
 80226e2:	ea4f 2e1e 	mov.w	lr, lr, lsr #8
 80226e6:	ea4f 2a1a 	mov.w	sl, sl, lsr #8
 80226ea:	f00e 1eff 	and.w	lr, lr, #16711935	; 0xff00ff
 80226ee:	f40a 4a7f 	and.w	sl, sl, #65280	; 0xff00
 80226f2:	ea4e 040a 	orr.w	r4, lr, sl
 80226f6:	9408      	str	r4, [sp, #32]
 80226f8:	9c13      	ldr	r4, [sp, #76]	; 0x4c
 80226fa:	2cff      	cmp	r4, #255	; 0xff
 80226fc:	d021      	beq.n	8022742 <_ZN8touchgfx8LCD16bpp62TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x276>
 80226fe:	9c0c      	ldr	r4, [sp, #48]	; 0x30
 8022700:	f004 1bff 	and.w	fp, r4, #16711935	; 0xff00ff
 8022704:	9c13      	ldr	r4, [sp, #76]	; 0x4c
 8022706:	fb04 fb0b 	mul.w	fp, r4, fp
 802270a:	9c0c      	ldr	r4, [sp, #48]	; 0x30
 802270c:	f404 4a7f 	and.w	sl, r4, #65280	; 0xff00
 8022710:	9c13      	ldr	r4, [sp, #76]	; 0x4c
 8022712:	ea4f 2e1b 	mov.w	lr, fp, lsr #8
 8022716:	fb04 fa0a 	mul.w	sl, r4, sl
 802271a:	f00e 1eff 	and.w	lr, lr, #16711935	; 0xff00ff
 802271e:	f10b 1b01 	add.w	fp, fp, #65537	; 0x10001
 8022722:	f50a 7c80 	add.w	ip, sl, #256	; 0x100
 8022726:	44de      	add	lr, fp
 8022728:	eb0c 2a1a 	add.w	sl, ip, sl, lsr #8
 802272c:	ea4f 2e1e 	mov.w	lr, lr, lsr #8
 8022730:	ea4f 2a1a 	mov.w	sl, sl, lsr #8
 8022734:	f00e 1eff 	and.w	lr, lr, #16711935	; 0xff00ff
 8022738:	f40a 4a7f 	and.w	sl, sl, #65280	; 0xff00
 802273c:	ea4e 040a 	orr.w	r4, lr, sl
 8022740:	940c      	str	r4, [sp, #48]	; 0x30
 8022742:	9c0b      	ldr	r4, [sp, #44]	; 0x2c
 8022744:	f004 1cff 	and.w	ip, r4, #16711935	; 0xff00ff
 8022748:	9c08      	ldr	r4, [sp, #32]
 802274a:	f003 1eff 	and.w	lr, r3, #16711935	; 0xff00ff
 802274e:	fb08 fc0c 	mul.w	ip, r8, ip
 8022752:	fb02 cc0e 	mla	ip, r2, lr, ip
 8022756:	f004 1eff 	and.w	lr, r4, #16711935	; 0xff00ff
 802275a:	9c0c      	ldr	r4, [sp, #48]	; 0x30
 802275c:	fb00 cc0e 	mla	ip, r0, lr, ip
 8022760:	f004 1eff 	and.w	lr, r4, #16711935	; 0xff00ff
 8022764:	9c0b      	ldr	r4, [sp, #44]	; 0x2c
 8022766:	fb09 cc0e 	mla	ip, r9, lr, ip
 802276a:	f404 4e7f 	and.w	lr, r4, #65280	; 0xff00
 802276e:	fb08 f80e 	mul.w	r8, r8, lr
 8022772:	f403 437f 	and.w	r3, r3, #65280	; 0xff00
 8022776:	fb02 8303 	mla	r3, r2, r3, r8
 802277a:	9a08      	ldr	r2, [sp, #32]
 802277c:	f8b7 8000 	ldrh.w	r8, [r7]
 8022780:	f402 4a7f 	and.w	sl, r2, #65280	; 0xff00
 8022784:	9a0c      	ldr	r2, [sp, #48]	; 0x30
 8022786:	fb00 330a 	mla	r3, r0, sl, r3
 802278a:	f402 407f 	and.w	r0, r2, #65280	; 0xff00
 802278e:	fb09 3900 	mla	r9, r9, r0, r3
 8022792:	43c9      	mvns	r1, r1
 8022794:	ea4f 2228 	mov.w	r2, r8, asr #8
 8022798:	fa5f fe81 	uxtb.w	lr, r1
 802279c:	ea4f 2c1c 	mov.w	ip, ip, lsr #8
 80227a0:	ea4f 2919 	mov.w	r9, r9, lsr #8
 80227a4:	f002 02f8 	and.w	r2, r2, #248	; 0xf8
 80227a8:	fb02 f20e 	mul.w	r2, r2, lr
 80227ac:	f00c 1cff 	and.w	ip, ip, #16711935	; 0xff00ff
 80227b0:	f409 497f 	and.w	r9, r9, #65280	; 0xff00
 80227b4:	ea4c 0c09 	orr.w	ip, ip, r9
 80227b8:	1c53      	adds	r3, r2, #1
 80227ba:	eb03 2212 	add.w	r2, r3, r2, lsr #8
 80227be:	ea4f 00e8 	mov.w	r0, r8, asr #3
 80227c2:	ea4f 431c 	mov.w	r3, ip, lsr #16
 80227c6:	eb03 2312 	add.w	r3, r3, r2, lsr #8
 80227ca:	f000 00fc 	and.w	r0, r0, #252	; 0xfc
 80227ce:	4a63      	ldr	r2, [pc, #396]	; (802295c <_ZN8touchgfx8LCD16bpp62TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x490>)
 80227d0:	fb00 f00e 	mul.w	r0, r0, lr
 80227d4:	b2db      	uxtb	r3, r3
 80227d6:	ea02 2203 	and.w	r2, r2, r3, lsl #8
 80227da:	1c43      	adds	r3, r0, #1
 80227dc:	eb03 2010 	add.w	r0, r3, r0, lsr #8
 80227e0:	ea4f 231c 	mov.w	r3, ip, lsr #8
 80227e4:	ea4f 01c8 	mov.w	r1, r8, lsl #3
 80227e8:	eb03 2310 	add.w	r3, r3, r0, lsr #8
 80227ec:	b2c9      	uxtb	r1, r1
 80227ee:	00db      	lsls	r3, r3, #3
 80227f0:	fb01 f10e 	mul.w	r1, r1, lr
 80227f4:	f403 63fc 	and.w	r3, r3, #2016	; 0x7e0
 80227f8:	4313      	orrs	r3, r2
 80227fa:	1c4a      	adds	r2, r1, #1
 80227fc:	eb02 2111 	add.w	r1, r2, r1, lsr #8
 8022800:	eb0c 2c11 	add.w	ip, ip, r1, lsr #8
 8022804:	f3cc 0cc4 	ubfx	ip, ip, #3, #5
 8022808:	ea4c 0c03 	orr.w	ip, ip, r3
 802280c:	f8a7 c000 	strh.w	ip, [r7]
 8022810:	9b27      	ldr	r3, [sp, #156]	; 0x9c
 8022812:	9a25      	ldr	r2, [sp, #148]	; 0x94
 8022814:	441a      	add	r2, r3
 8022816:	9b28      	ldr	r3, [sp, #160]	; 0xa0
 8022818:	9225      	str	r2, [sp, #148]	; 0x94
 802281a:	441d      	add	r5, r3
 802281c:	9b17      	ldr	r3, [sp, #92]	; 0x5c
 802281e:	3b01      	subs	r3, #1
 8022820:	3702      	adds	r7, #2
 8022822:	9317      	str	r3, [sp, #92]	; 0x5c
 8022824:	e699      	b.n	802255a <_ZN8touchgfx8LCD16bpp62TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x8e>
 8022826:	9b27      	ldr	r3, [sp, #156]	; 0x9c
 8022828:	9c25      	ldr	r4, [sp, #148]	; 0x94
 802282a:	441c      	add	r4, r3
 802282c:	9b28      	ldr	r3, [sp, #160]	; 0xa0
 802282e:	9425      	str	r4, [sp, #148]	; 0x94
 8022830:	441d      	add	r5, r3
 8022832:	9b07      	ldr	r3, [sp, #28]
 8022834:	3b01      	subs	r3, #1
 8022836:	9307      	str	r3, [sp, #28]
 8022838:	9b0a      	ldr	r3, [sp, #40]	; 0x28
 802283a:	3302      	adds	r3, #2
 802283c:	930a      	str	r3, [sp, #40]	; 0x28
 802283e:	e66b      	b.n	8022518 <_ZN8touchgfx8LCD16bpp62TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x4c>
 8022840:	d024      	beq.n	802288c <_ZN8touchgfx8LCD16bpp62TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x3c0>
 8022842:	9b07      	ldr	r3, [sp, #28]
 8022844:	9827      	ldr	r0, [sp, #156]	; 0x9c
 8022846:	9c25      	ldr	r4, [sp, #148]	; 0x94
 8022848:	3b01      	subs	r3, #1
 802284a:	fb00 4003 	mla	r0, r0, r3, r4
 802284e:	1400      	asrs	r0, r0, #16
 8022850:	f53f ae80 	bmi.w	8022554 <_ZN8touchgfx8LCD16bpp62TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x88>
 8022854:	3901      	subs	r1, #1
 8022856:	4288      	cmp	r0, r1
 8022858:	f6bf ae7c 	bge.w	8022554 <_ZN8touchgfx8LCD16bpp62TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x88>
 802285c:	9928      	ldr	r1, [sp, #160]	; 0xa0
 802285e:	fb01 5303 	mla	r3, r1, r3, r5
 8022862:	141b      	asrs	r3, r3, #16
 8022864:	f53f ae76 	bmi.w	8022554 <_ZN8touchgfx8LCD16bpp62TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x88>
 8022868:	3a01      	subs	r2, #1
 802286a:	4293      	cmp	r3, r2
 802286c:	f6bf ae72 	bge.w	8022554 <_ZN8touchgfx8LCD16bpp62TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x88>
 8022870:	f8dd b01c 	ldr.w	fp, [sp, #28]
 8022874:	f8dd 9028 	ldr.w	r9, [sp, #40]	; 0x28
 8022878:	f1bb 0f00 	cmp.w	fp, #0
 802287c:	dc70      	bgt.n	8022960 <_ZN8touchgfx8LCD16bpp62TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x494>
 802287e:	9b07      	ldr	r3, [sp, #28]
 8022880:	ea23 74e3 	bic.w	r4, r3, r3, asr #31
 8022884:	9b0a      	ldr	r3, [sp, #40]	; 0x28
 8022886:	eb03 0344 	add.w	r3, r3, r4, lsl #1
 802288a:	930a      	str	r3, [sp, #40]	; 0x28
 802288c:	9b16      	ldr	r3, [sp, #88]	; 0x58
 802288e:	2b00      	cmp	r3, #0
 8022890:	f340 81ae 	ble.w	8022bf0 <_ZN8touchgfx8LCD16bpp62TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x724>
 8022894:	ee30 0a04 	vadd.f32	s0, s0, s8
 8022898:	eeb7 7a00 	vmov.f32	s14, #112	; 0x3f800000  1.0
 802289c:	eec7 7a00 	vdiv.f32	s15, s14, s0
 80228a0:	9b24      	ldr	r3, [sp, #144]	; 0x90
 80228a2:	ee70 0aa4 	vadd.f32	s1, s1, s9
 80228a6:	ee31 1a05 	vadd.f32	s2, s2, s10
 80228aa:	ee20 7aa7 	vmul.f32	s14, s1, s15
 80228ae:	eef0 6a62 	vmov.f32	s13, s5
 80228b2:	ee61 7a27 	vmul.f32	s15, s2, s15
 80228b6:	eefe 6ac8 	vcvt.s32.f32	s13, s13, #16
 80228ba:	ee77 2a62 	vsub.f32	s5, s14, s5
 80228be:	edcd 6a25 	vstr	s13, [sp, #148]	; 0x94
 80228c2:	eefe 2ac8 	vcvt.s32.f32	s5, s5, #16
 80228c6:	eef0 6a43 	vmov.f32	s13, s6
 80228ca:	ee37 3ac3 	vsub.f32	s6, s15, s6
 80228ce:	ee12 2a90 	vmov	r2, s5
 80228d2:	eebe 3ac8 	vcvt.s32.f32	s6, s6, #16
 80228d6:	fb92 f3f3 	sdiv	r3, r2, r3
 80228da:	ee13 2a10 	vmov	r2, s6
 80228de:	9327      	str	r3, [sp, #156]	; 0x9c
 80228e0:	9b24      	ldr	r3, [sp, #144]	; 0x90
 80228e2:	fb92 f3f3 	sdiv	r3, r2, r3
 80228e6:	9328      	str	r3, [sp, #160]	; 0xa0
 80228e8:	9b16      	ldr	r3, [sp, #88]	; 0x58
 80228ea:	9a18      	ldr	r2, [sp, #96]	; 0x60
 80228ec:	3b01      	subs	r3, #1
 80228ee:	eefe 6ac8 	vcvt.s32.f32	s13, s13, #16
 80228f2:	9316      	str	r3, [sp, #88]	; 0x58
 80228f4:	9b24      	ldr	r3, [sp, #144]	; 0x90
 80228f6:	bf08      	it	eq
 80228f8:	4613      	moveq	r3, r2
 80228fa:	ee16 5a90 	vmov	r5, s13
 80228fe:	9307      	str	r3, [sp, #28]
 8022900:	eeb0 3a67 	vmov.f32	s6, s15
 8022904:	eef0 2a47 	vmov.f32	s5, s14
 8022908:	e5f8      	b.n	80224fc <_ZN8touchgfx8LCD16bpp62TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x30>
 802290a:	2800      	cmp	r0, #0
 802290c:	f43f ae6b 	beq.w	80225e6 <_ZN8touchgfx8LCD16bpp62TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x11a>
 8022910:	f818 1001 	ldrb.w	r1, [r8, r1]
 8022914:	f856 1021 	ldr.w	r1, [r6, r1, lsl #2]
 8022918:	9108      	str	r1, [sp, #32]
 802291a:	0e09      	lsrs	r1, r1, #24
 802291c:	9110      	str	r1, [sp, #64]	; 0x40
 802291e:	e662      	b.n	80225e6 <_ZN8touchgfx8LCD16bpp62TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x11a>
 8022920:	f113 0801 	adds.w	r8, r3, #1
 8022924:	f53f af74 	bmi.w	8022810 <_ZN8touchgfx8LCD16bpp62TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x344>
 8022928:	4541      	cmp	r1, r8
 802292a:	f6ff af71 	blt.w	8022810 <_ZN8touchgfx8LCD16bpp62TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x344>
 802292e:	f11c 0801 	adds.w	r8, ip, #1
 8022932:	f53f af6d 	bmi.w	8022810 <_ZN8touchgfx8LCD16bpp62TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x344>
 8022936:	45c6      	cmp	lr, r8
 8022938:	f6ff af6a 	blt.w	8022810 <_ZN8touchgfx8LCD16bpp62TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x344>
 802293c:	e9cd 3c02 	strd	r3, ip, [sp, #8]
 8022940:	b209      	sxth	r1, r1
 8022942:	fa0f f38e 	sxth.w	r3, lr
 8022946:	e9cd 2004 	strd	r2, r0, [sp, #16]
 802294a:	9301      	str	r3, [sp, #4]
 802294c:	9100      	str	r1, [sp, #0]
 802294e:	4633      	mov	r3, r6
 8022950:	9a0f      	ldr	r2, [sp, #60]	; 0x3c
 8022952:	9819      	ldr	r0, [sp, #100]	; 0x64
 8022954:	4639      	mov	r1, r7
 8022956:	f7ff fc7a 	bl	802224e <_ZNK8touchgfx8LCD16bpp62TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhPKmssiihh>
 802295a:	e759      	b.n	8022810 <_ZN8touchgfx8LCD16bpp62TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x344>
 802295c:	fffff800 	.word	0xfffff800
 8022960:	9b25      	ldr	r3, [sp, #148]	; 0x94
 8022962:	9c25      	ldr	r4, [sp, #148]	; 0x94
 8022964:	f3c3 3203 	ubfx	r2, r3, #12, #4
 8022968:	9b2c      	ldr	r3, [sp, #176]	; 0xb0
 802296a:	f9b3 1008 	ldrsh.w	r1, [r3, #8]
 802296e:	1427      	asrs	r7, r4, #16
 8022970:	142b      	asrs	r3, r5, #16
 8022972:	fb01 7303 	mla	r3, r1, r3, r7
 8022976:	9c0f      	ldr	r4, [sp, #60]	; 0x3c
 8022978:	18e7      	adds	r7, r4, r3
 802297a:	5ce3      	ldrb	r3, [r4, r3]
 802297c:	f856 3023 	ldr.w	r3, [r6, r3, lsl #2]
 8022980:	f3c5 3003 	ubfx	r0, r5, #12, #4
 8022984:	ea4f 6c13 	mov.w	ip, r3, lsr #24
 8022988:	2a00      	cmp	r2, #0
 802298a:	f000 8127 	beq.w	8022bdc <_ZN8touchgfx8LCD16bpp62TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x710>
 802298e:	f897 e001 	ldrb.w	lr, [r7, #1]
 8022992:	f856 402e 	ldr.w	r4, [r6, lr, lsl #2]
 8022996:	940d      	str	r4, [sp, #52]	; 0x34
 8022998:	0e24      	lsrs	r4, r4, #24
 802299a:	9414      	str	r4, [sp, #80]	; 0x50
 802299c:	b170      	cbz	r0, 80229bc <_ZN8touchgfx8LCD16bpp62TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x4f0>
 802299e:	eb07 0e01 	add.w	lr, r7, r1
 80229a2:	5c79      	ldrb	r1, [r7, r1]
 80229a4:	f856 1021 	ldr.w	r1, [r6, r1, lsl #2]
 80229a8:	9109      	str	r1, [sp, #36]	; 0x24
 80229aa:	0e09      	lsrs	r1, r1, #24
 80229ac:	9111      	str	r1, [sp, #68]	; 0x44
 80229ae:	f89e 1001 	ldrb.w	r1, [lr, #1]
 80229b2:	f856 1021 	ldr.w	r1, [r6, r1, lsl #2]
 80229b6:	910e      	str	r1, [sp, #56]	; 0x38
 80229b8:	0e09      	lsrs	r1, r1, #24
 80229ba:	9115      	str	r1, [sp, #84]	; 0x54
 80229bc:	b292      	uxth	r2, r2
 80229be:	b280      	uxth	r0, r0
 80229c0:	fb02 f800 	mul.w	r8, r2, r0
 80229c4:	ebc8 1000 	rsb	r0, r8, r0, lsl #4
 80229c8:	0112      	lsls	r2, r2, #4
 80229ca:	eba2 0e08 	sub.w	lr, r2, r8
 80229ce:	b280      	uxth	r0, r0
 80229d0:	f5c2 7180 	rsb	r1, r2, #256	; 0x100
 80229d4:	9a14      	ldr	r2, [sp, #80]	; 0x50
 80229d6:	9c11      	ldr	r4, [sp, #68]	; 0x44
 80229d8:	fa1f fe8e 	uxth.w	lr, lr
 80229dc:	1a09      	subs	r1, r1, r0
 80229de:	b289      	uxth	r1, r1
 80229e0:	fb0e f202 	mul.w	r2, lr, r2
 80229e4:	fb01 220c 	mla	r2, r1, ip, r2
 80229e8:	fb00 2204 	mla	r2, r0, r4, r2
 80229ec:	9c15      	ldr	r4, [sp, #84]	; 0x54
 80229ee:	fb08 2204 	mla	r2, r8, r4, r2
 80229f2:	f3c2 2207 	ubfx	r2, r2, #8, #8
 80229f6:	2a00      	cmp	r2, #0
 80229f8:	f000 80e5 	beq.w	8022bc6 <_ZN8touchgfx8LCD16bpp62TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x6fa>
 80229fc:	f1bc 0fff 	cmp.w	ip, #255	; 0xff
 8022a00:	d019      	beq.n	8022a36 <_ZN8touchgfx8LCD16bpp62TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x56a>
 8022a02:	f003 1aff 	and.w	sl, r3, #16711935	; 0xff00ff
 8022a06:	fb0c fa0a 	mul.w	sl, ip, sl
 8022a0a:	f403 437f 	and.w	r3, r3, #65280	; 0xff00
 8022a0e:	fb0c fc03 	mul.w	ip, ip, r3
 8022a12:	ea4f 231a 	mov.w	r3, sl, lsr #8
 8022a16:	f003 13ff 	and.w	r3, r3, #16711935	; 0xff00ff
 8022a1a:	f10a 1a01 	add.w	sl, sl, #65537	; 0x10001
 8022a1e:	f50c 7780 	add.w	r7, ip, #256	; 0x100
 8022a22:	4453      	add	r3, sl
 8022a24:	eb07 271c 	add.w	r7, r7, ip, lsr #8
 8022a28:	0a1b      	lsrs	r3, r3, #8
 8022a2a:	0a3f      	lsrs	r7, r7, #8
 8022a2c:	f003 13ff 	and.w	r3, r3, #16711935	; 0xff00ff
 8022a30:	f407 477f 	and.w	r7, r7, #65280	; 0xff00
 8022a34:	433b      	orrs	r3, r7
 8022a36:	9c14      	ldr	r4, [sp, #80]	; 0x50
 8022a38:	2cff      	cmp	r4, #255	; 0xff
 8022a3a:	d020      	beq.n	8022a7e <_ZN8touchgfx8LCD16bpp62TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x5b2>
 8022a3c:	9c0d      	ldr	r4, [sp, #52]	; 0x34
 8022a3e:	f004 17ff 	and.w	r7, r4, #16711935	; 0xff00ff
 8022a42:	9c14      	ldr	r4, [sp, #80]	; 0x50
 8022a44:	4367      	muls	r7, r4
 8022a46:	9c0d      	ldr	r4, [sp, #52]	; 0x34
 8022a48:	f404 4a7f 	and.w	sl, r4, #65280	; 0xff00
 8022a4c:	9c14      	ldr	r4, [sp, #80]	; 0x50
 8022a4e:	ea4f 2c17 	mov.w	ip, r7, lsr #8
 8022a52:	fb04 fa0a 	mul.w	sl, r4, sl
 8022a56:	f107 1701 	add.w	r7, r7, #65537	; 0x10001
 8022a5a:	f00c 1cff 	and.w	ip, ip, #16711935	; 0xff00ff
 8022a5e:	44bc      	add	ip, r7
 8022a60:	f50a 7780 	add.w	r7, sl, #256	; 0x100
 8022a64:	eb07 2a1a 	add.w	sl, r7, sl, lsr #8
 8022a68:	ea4f 2c1c 	mov.w	ip, ip, lsr #8
 8022a6c:	ea4f 2a1a 	mov.w	sl, sl, lsr #8
 8022a70:	f00c 1cff 	and.w	ip, ip, #16711935	; 0xff00ff
 8022a74:	f40a 4a7f 	and.w	sl, sl, #65280	; 0xff00
 8022a78:	ea4c 040a 	orr.w	r4, ip, sl
 8022a7c:	940d      	str	r4, [sp, #52]	; 0x34
 8022a7e:	9c11      	ldr	r4, [sp, #68]	; 0x44
 8022a80:	2cff      	cmp	r4, #255	; 0xff
 8022a82:	d020      	beq.n	8022ac6 <_ZN8touchgfx8LCD16bpp62TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x5fa>
 8022a84:	9c09      	ldr	r4, [sp, #36]	; 0x24
 8022a86:	f004 17ff 	and.w	r7, r4, #16711935	; 0xff00ff
 8022a8a:	9c11      	ldr	r4, [sp, #68]	; 0x44
 8022a8c:	4367      	muls	r7, r4
 8022a8e:	9c09      	ldr	r4, [sp, #36]	; 0x24
 8022a90:	f404 4a7f 	and.w	sl, r4, #65280	; 0xff00
 8022a94:	9c11      	ldr	r4, [sp, #68]	; 0x44
 8022a96:	ea4f 2c17 	mov.w	ip, r7, lsr #8
 8022a9a:	fb04 fa0a 	mul.w	sl, r4, sl
 8022a9e:	f107 1701 	add.w	r7, r7, #65537	; 0x10001
 8022aa2:	f00c 1cff 	and.w	ip, ip, #16711935	; 0xff00ff
 8022aa6:	44bc      	add	ip, r7
 8022aa8:	f50a 7780 	add.w	r7, sl, #256	; 0x100
 8022aac:	eb07 2a1a 	add.w	sl, r7, sl, lsr #8
 8022ab0:	ea4f 2c1c 	mov.w	ip, ip, lsr #8
 8022ab4:	ea4f 2a1a 	mov.w	sl, sl, lsr #8
 8022ab8:	f00c 1cff 	and.w	ip, ip, #16711935	; 0xff00ff
 8022abc:	f40a 4a7f 	and.w	sl, sl, #65280	; 0xff00
 8022ac0:	ea4c 040a 	orr.w	r4, ip, sl
 8022ac4:	9409      	str	r4, [sp, #36]	; 0x24
 8022ac6:	9c15      	ldr	r4, [sp, #84]	; 0x54
 8022ac8:	2cff      	cmp	r4, #255	; 0xff
 8022aca:	d020      	beq.n	8022b0e <_ZN8touchgfx8LCD16bpp62TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x642>
 8022acc:	9c0e      	ldr	r4, [sp, #56]	; 0x38
 8022ace:	f004 17ff 	and.w	r7, r4, #16711935	; 0xff00ff
 8022ad2:	9c15      	ldr	r4, [sp, #84]	; 0x54
 8022ad4:	4367      	muls	r7, r4
 8022ad6:	9c0e      	ldr	r4, [sp, #56]	; 0x38
 8022ad8:	f404 4a7f 	and.w	sl, r4, #65280	; 0xff00
 8022adc:	9c15      	ldr	r4, [sp, #84]	; 0x54
 8022ade:	ea4f 2c17 	mov.w	ip, r7, lsr #8
 8022ae2:	fb04 fa0a 	mul.w	sl, r4, sl
 8022ae6:	f107 1701 	add.w	r7, r7, #65537	; 0x10001
 8022aea:	f00c 1cff 	and.w	ip, ip, #16711935	; 0xff00ff
 8022aee:	44bc      	add	ip, r7
 8022af0:	f50a 7780 	add.w	r7, sl, #256	; 0x100
 8022af4:	eb07 2a1a 	add.w	sl, r7, sl, lsr #8
 8022af8:	ea4f 2c1c 	mov.w	ip, ip, lsr #8
 8022afc:	ea4f 2a1a 	mov.w	sl, sl, lsr #8
 8022b00:	f00c 1cff 	and.w	ip, ip, #16711935	; 0xff00ff
 8022b04:	f40a 4a7f 	and.w	sl, sl, #65280	; 0xff00
 8022b08:	ea4c 040a 	orr.w	r4, ip, sl
 8022b0c:	940e      	str	r4, [sp, #56]	; 0x38
 8022b0e:	9c0d      	ldr	r4, [sp, #52]	; 0x34
 8022b10:	f004 17ff 	and.w	r7, r4, #16711935	; 0xff00ff
 8022b14:	9c09      	ldr	r4, [sp, #36]	; 0x24
 8022b16:	f003 1cff 	and.w	ip, r3, #16711935	; 0xff00ff
 8022b1a:	fb0e f707 	mul.w	r7, lr, r7
 8022b1e:	fb01 770c 	mla	r7, r1, ip, r7
 8022b22:	f004 1cff 	and.w	ip, r4, #16711935	; 0xff00ff
 8022b26:	9c0e      	ldr	r4, [sp, #56]	; 0x38
 8022b28:	fb00 770c 	mla	r7, r0, ip, r7
 8022b2c:	f004 1cff 	and.w	ip, r4, #16711935	; 0xff00ff
 8022b30:	9c0d      	ldr	r4, [sp, #52]	; 0x34
 8022b32:	fb08 770c 	mla	r7, r8, ip, r7
 8022b36:	f404 4c7f 	and.w	ip, r4, #65280	; 0xff00
 8022b3a:	fb0e fe0c 	mul.w	lr, lr, ip
 8022b3e:	f403 437f 	and.w	r3, r3, #65280	; 0xff00
 8022b42:	fb01 e303 	mla	r3, r1, r3, lr
 8022b46:	9909      	ldr	r1, [sp, #36]	; 0x24
 8022b48:	f401 4a7f 	and.w	sl, r1, #65280	; 0xff00
 8022b4c:	990e      	ldr	r1, [sp, #56]	; 0x38
 8022b4e:	fb00 330a 	mla	r3, r0, sl, r3
 8022b52:	f401 4c7f 	and.w	ip, r1, #65280	; 0xff00
 8022b56:	fb08 3c0c 	mla	ip, r8, ip, r3
 8022b5a:	f8b9 3000 	ldrh.w	r3, [r9]
 8022b5e:	43d2      	mvns	r2, r2
 8022b60:	1218      	asrs	r0, r3, #8
 8022b62:	b2d2      	uxtb	r2, r2
 8022b64:	10d9      	asrs	r1, r3, #3
 8022b66:	0a3f      	lsrs	r7, r7, #8
 8022b68:	ea4f 2c1c 	mov.w	ip, ip, lsr #8
 8022b6c:	f000 00f8 	and.w	r0, r0, #248	; 0xf8
 8022b70:	00db      	lsls	r3, r3, #3
 8022b72:	4350      	muls	r0, r2
 8022b74:	f007 17ff 	and.w	r7, r7, #16711935	; 0xff00ff
 8022b78:	f40c 4c7f 	and.w	ip, ip, #65280	; 0xff00
 8022b7c:	f001 01fc 	and.w	r1, r1, #252	; 0xfc
 8022b80:	b2db      	uxtb	r3, r3
 8022b82:	ea47 070c 	orr.w	r7, r7, ip
 8022b86:	4351      	muls	r1, r2
 8022b88:	4353      	muls	r3, r2
 8022b8a:	1c42      	adds	r2, r0, #1
 8022b8c:	eb02 2010 	add.w	r0, r2, r0, lsr #8
 8022b90:	0c3a      	lsrs	r2, r7, #16
 8022b92:	eb02 2010 	add.w	r0, r2, r0, lsr #8
 8022b96:	4a18      	ldr	r2, [pc, #96]	; (8022bf8 <_ZN8touchgfx8LCD16bpp62TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x72c>)
 8022b98:	b2c0      	uxtb	r0, r0
 8022b9a:	ea02 2000 	and.w	r0, r2, r0, lsl #8
 8022b9e:	1c4a      	adds	r2, r1, #1
 8022ba0:	eb02 2111 	add.w	r1, r2, r1, lsr #8
 8022ba4:	0a3a      	lsrs	r2, r7, #8
 8022ba6:	eb02 2111 	add.w	r1, r2, r1, lsr #8
 8022baa:	00c9      	lsls	r1, r1, #3
 8022bac:	f401 61fc 	and.w	r1, r1, #2016	; 0x7e0
 8022bb0:	4301      	orrs	r1, r0
 8022bb2:	1c58      	adds	r0, r3, #1
 8022bb4:	eb00 2013 	add.w	r0, r0, r3, lsr #8
 8022bb8:	eb07 2710 	add.w	r7, r7, r0, lsr #8
 8022bbc:	f3c7 00c4 	ubfx	r0, r7, #3, #5
 8022bc0:	4308      	orrs	r0, r1
 8022bc2:	f8a9 0000 	strh.w	r0, [r9]
 8022bc6:	9b27      	ldr	r3, [sp, #156]	; 0x9c
 8022bc8:	9a25      	ldr	r2, [sp, #148]	; 0x94
 8022bca:	441a      	add	r2, r3
 8022bcc:	9b28      	ldr	r3, [sp, #160]	; 0xa0
 8022bce:	9225      	str	r2, [sp, #148]	; 0x94
 8022bd0:	f109 0902 	add.w	r9, r9, #2
 8022bd4:	441d      	add	r5, r3
 8022bd6:	f10b 3bff 	add.w	fp, fp, #4294967295
 8022bda:	e64d      	b.n	8022878 <_ZN8touchgfx8LCD16bpp62TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x3ac>
 8022bdc:	2800      	cmp	r0, #0
 8022bde:	f43f aeed 	beq.w	80229bc <_ZN8touchgfx8LCD16bpp62TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x4f0>
 8022be2:	5c79      	ldrb	r1, [r7, r1]
 8022be4:	f856 1021 	ldr.w	r1, [r6, r1, lsl #2]
 8022be8:	9109      	str	r1, [sp, #36]	; 0x24
 8022bea:	0e09      	lsrs	r1, r1, #24
 8022bec:	9111      	str	r1, [sp, #68]	; 0x44
 8022bee:	e6e5      	b.n	80229bc <_ZN8touchgfx8LCD16bpp62TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x4f0>
 8022bf0:	b01b      	add	sp, #108	; 0x6c
 8022bf2:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
 8022bf6:	bf00      	nop
 8022bf8:	fffff800 	.word	0xfffff800

08022bfc <_ZNK8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKtPKhssiihhh>:
 8022bfc:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 8022c00:	b085      	sub	sp, #20
 8022c02:	e9dd 7010 	ldrd	r7, r0, [sp, #64]	; 0x40
 8022c06:	f9bd 6038 	ldrsh.w	r6, [sp, #56]	; 0x38
 8022c0a:	9103      	str	r1, [sp, #12]
 8022c0c:	fb00 7406 	mla	r4, r0, r6, r7
 8022c10:	eb02 0544 	add.w	r5, r2, r4, lsl #1
 8022c14:	2800      	cmp	r0, #0
 8022c16:	f9bd b03c 	ldrsh.w	fp, [sp, #60]	; 0x3c
 8022c1a:	f89d 1048 	ldrb.w	r1, [sp, #72]	; 0x48
 8022c1e:	f89d e04c 	ldrb.w	lr, [sp, #76]	; 0x4c
 8022c22:	9501      	str	r5, [sp, #4]
 8022c24:	eb03 0904 	add.w	r9, r3, r4
 8022c28:	f2c0 8150 	blt.w	8022ecc <_ZNK8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKtPKhssiihhh+0x2d0>
 8022c2c:	4583      	cmp	fp, r0
 8022c2e:	f340 814d 	ble.w	8022ecc <_ZNK8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKtPKhssiihhh+0x2d0>
 8022c32:	2f00      	cmp	r7, #0
 8022c34:	f2c0 8146 	blt.w	8022ec4 <_ZNK8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKtPKhssiihhh+0x2c8>
 8022c38:	42be      	cmp	r6, r7
 8022c3a:	f340 8143 	ble.w	8022ec4 <_ZNK8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKtPKhssiihhh+0x2c8>
 8022c3e:	f813 c004 	ldrb.w	ip, [r3, r4]
 8022c42:	f832 3014 	ldrh.w	r3, [r2, r4, lsl #1]
 8022c46:	ea4f 02ec 	mov.w	r2, ip, asr #3
 8022c4a:	f423 65fc 	bic.w	r5, r3, #2016	; 0x7e0
 8022c4e:	4355      	muls	r5, r2
 8022c50:	f403 63fc 	and.w	r3, r3, #2016	; 0x7e0
 8022c54:	f64f 041f 	movw	r4, #63519	; 0xf81f
 8022c58:	fb0c f203 	mul.w	r2, ip, r3
 8022c5c:	ea04 1355 	and.w	r3, r4, r5, lsr #5
 8022c60:	f605 0501 	addw	r5, r5, #2049	; 0x801
 8022c64:	441d      	add	r5, r3
 8022c66:	f102 0320 	add.w	r3, r2, #32
 8022c6a:	eb03 2312 	add.w	r3, r3, r2, lsr #8
 8022c6e:	0a1b      	lsrs	r3, r3, #8
 8022c70:	ea04 1455 	and.w	r4, r4, r5, lsr #5
 8022c74:	f403 63fc 	and.w	r3, r3, #2016	; 0x7e0
 8022c78:	431c      	orrs	r4, r3
 8022c7a:	1c7b      	adds	r3, r7, #1
 8022c7c:	f100 812b 	bmi.w	8022ed6 <_ZNK8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKtPKhssiihhh+0x2da>
 8022c80:	429e      	cmp	r6, r3
 8022c82:	f340 8128 	ble.w	8022ed6 <_ZNK8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKtPKhssiihhh+0x2da>
 8022c86:	2900      	cmp	r1, #0
 8022c88:	f000 8128 	beq.w	8022edc <_ZNK8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKtPKhssiihhh+0x2e0>
 8022c8c:	9a01      	ldr	r2, [sp, #4]
 8022c8e:	f899 3001 	ldrb.w	r3, [r9, #1]
 8022c92:	8855      	ldrh	r5, [r2, #2]
 8022c94:	ea4f 08e3 	mov.w	r8, r3, asr #3
 8022c98:	f425 62fc 	bic.w	r2, r5, #2016	; 0x7e0
 8022c9c:	fb08 f802 	mul.w	r8, r8, r2
 8022ca0:	f405 65fc 	and.w	r5, r5, #2016	; 0x7e0
 8022ca4:	f64f 021f 	movw	r2, #63519	; 0xf81f
 8022ca8:	ea02 1a58 	and.w	sl, r2, r8, lsr #5
 8022cac:	435d      	muls	r5, r3
 8022cae:	f608 0801 	addw	r8, r8, #2049	; 0x801
 8022cb2:	44d0      	add	r8, sl
 8022cb4:	f105 0a20 	add.w	sl, r5, #32
 8022cb8:	eb0a 2515 	add.w	r5, sl, r5, lsr #8
 8022cbc:	0a2d      	lsrs	r5, r5, #8
 8022cbe:	ea02 1258 	and.w	r2, r2, r8, lsr #5
 8022cc2:	f405 65fc 	and.w	r5, r5, #2016	; 0x7e0
 8022cc6:	432a      	orrs	r2, r5
 8022cc8:	3001      	adds	r0, #1
 8022cca:	f100 810d 	bmi.w	8022ee8 <_ZNK8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKtPKhssiihhh+0x2ec>
 8022cce:	4583      	cmp	fp, r0
 8022cd0:	f340 810a 	ble.w	8022ee8 <_ZNK8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKtPKhssiihhh+0x2ec>
 8022cd4:	f1be 0f00 	cmp.w	lr, #0
 8022cd8:	f000 810b 	beq.w	8022ef2 <_ZNK8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKtPKhssiihhh+0x2f6>
 8022cdc:	2f00      	cmp	r7, #0
 8022cde:	f2c0 8100 	blt.w	8022ee2 <_ZNK8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKtPKhssiihhh+0x2e6>
 8022ce2:	42be      	cmp	r6, r7
 8022ce4:	f340 80fd 	ble.w	8022ee2 <_ZNK8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKtPKhssiihhh+0x2e6>
 8022ce8:	9801      	ldr	r0, [sp, #4]
 8022cea:	f819 5006 	ldrb.w	r5, [r9, r6]
 8022cee:	f830 8016 	ldrh.w	r8, [r0, r6, lsl #1]
 8022cf2:	ea4f 0ae5 	mov.w	sl, r5, asr #3
 8022cf6:	f428 60fc 	bic.w	r0, r8, #2016	; 0x7e0
 8022cfa:	fb0a fa00 	mul.w	sl, sl, r0
 8022cfe:	f64f 0b1f 	movw	fp, #63519	; 0xf81f
 8022d02:	f408 68fc 	and.w	r8, r8, #2016	; 0x7e0
 8022d06:	ea0b 105a 	and.w	r0, fp, sl, lsr #5
 8022d0a:	fb05 f808 	mul.w	r8, r5, r8
 8022d0e:	f60a 0a01 	addw	sl, sl, #2049	; 0x801
 8022d12:	4482      	add	sl, r0
 8022d14:	f108 0020 	add.w	r0, r8, #32
 8022d18:	eb00 2018 	add.w	r0, r0, r8, lsr #8
 8022d1c:	0a00      	lsrs	r0, r0, #8
 8022d1e:	ea0b 1b5a 	and.w	fp, fp, sl, lsr #5
 8022d22:	f400 60fc 	and.w	r0, r0, #2016	; 0x7e0
 8022d26:	ea4b 0b00 	orr.w	fp, fp, r0
 8022d2a:	3701      	adds	r7, #1
 8022d2c:	f100 80e6 	bmi.w	8022efc <_ZNK8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKtPKhssiihhh+0x300>
 8022d30:	42be      	cmp	r6, r7
 8022d32:	f340 80e3 	ble.w	8022efc <_ZNK8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKtPKhssiihhh+0x300>
 8022d36:	2900      	cmp	r1, #0
 8022d38:	f000 80e3 	beq.w	8022f02 <_ZNK8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKtPKhssiihhh+0x306>
 8022d3c:	3601      	adds	r6, #1
 8022d3e:	9801      	ldr	r0, [sp, #4]
 8022d40:	f819 7006 	ldrb.w	r7, [r9, r6]
 8022d44:	f830 0016 	ldrh.w	r0, [r0, r6, lsl #1]
 8022d48:	ea4f 09e7 	mov.w	r9, r7, asr #3
 8022d4c:	f420 66fc 	bic.w	r6, r0, #2016	; 0x7e0
 8022d50:	f400 60fc 	and.w	r0, r0, #2016	; 0x7e0
 8022d54:	fb09 f906 	mul.w	r9, r9, r6
 8022d58:	fb07 f800 	mul.w	r8, r7, r0
 8022d5c:	f64f 001f 	movw	r0, #63519	; 0xf81f
 8022d60:	ea00 1a59 	and.w	sl, r0, r9, lsr #5
 8022d64:	f609 0901 	addw	r9, r9, #2049	; 0x801
 8022d68:	44d1      	add	r9, sl
 8022d6a:	ea00 1659 	and.w	r6, r0, r9, lsr #5
 8022d6e:	f108 0020 	add.w	r0, r8, #32
 8022d72:	eb00 2018 	add.w	r0, r0, r8, lsr #8
 8022d76:	0a00      	lsrs	r0, r0, #8
 8022d78:	f400 60fc 	and.w	r0, r0, #2016	; 0x7e0
 8022d7c:	4330      	orrs	r0, r6
 8022d7e:	b28e      	uxth	r6, r1
 8022d80:	fa1f f98e 	uxth.w	r9, lr
 8022d84:	fb06 f809 	mul.w	r8, r6, r9
 8022d88:	ea4f 4a04 	mov.w	sl, r4, lsl #16
 8022d8c:	ebc8 1909 	rsb	r9, r8, r9, lsl #4
 8022d90:	0136      	lsls	r6, r6, #4
 8022d92:	f00a 6afc 	and.w	sl, sl, #132120576	; 0x7e00000
 8022d96:	f424 64fc 	bic.w	r4, r4, #2016	; 0x7e0
 8022d9a:	9601      	str	r6, [sp, #4]
 8022d9c:	ea4a 0404 	orr.w	r4, sl, r4
 8022da0:	fa1f f689 	uxth.w	r6, r9
 8022da4:	ea4f 4a02 	mov.w	sl, r2, lsl #16
 8022da8:	fb11 f90e 	smulbb	r9, r1, lr
 8022dac:	f3c9 09c7 	ubfx	r9, r9, #3, #8
 8022db0:	9602      	str	r6, [sp, #8]
 8022db2:	f00a 6afc 	and.w	sl, sl, #132120576	; 0x7e00000
 8022db6:	4626      	mov	r6, r4
 8022db8:	f422 62fc 	bic.w	r2, r2, #2016	; 0x7e0
 8022dbc:	f1ce 0410 	rsb	r4, lr, #16
 8022dc0:	1a64      	subs	r4, r4, r1
 8022dc2:	ea4a 0202 	orr.w	r2, sl, r2
 8022dc6:	ebc9 0141 	rsb	r1, r9, r1, lsl #1
 8022dca:	ea4f 4a00 	mov.w	sl, r0, lsl #16
 8022dce:	434a      	muls	r2, r1
 8022dd0:	eb09 0444 	add.w	r4, r9, r4, lsl #1
 8022dd4:	f00a 6afc 	and.w	sl, sl, #132120576	; 0x7e00000
 8022dd8:	f420 60fc 	bic.w	r0, r0, #2016	; 0x7e0
 8022ddc:	fb04 2406 	mla	r4, r4, r6, r2
 8022de0:	ea4a 0000 	orr.w	r0, sl, r0
 8022de4:	fb09 4200 	mla	r2, r9, r0, r4
 8022de8:	ea4f 440b 	mov.w	r4, fp, lsl #16
 8022dec:	f004 64fc 	and.w	r4, r4, #132120576	; 0x7e00000
 8022df0:	f42b 6bfc 	bic.w	fp, fp, #2016	; 0x7e0
 8022df4:	ea44 0b0b 	orr.w	fp, r4, fp
 8022df8:	9c01      	ldr	r4, [sp, #4]
 8022dfa:	9e02      	ldr	r6, [sp, #8]
 8022dfc:	9903      	ldr	r1, [sp, #12]
 8022dfe:	f5c4 7480 	rsb	r4, r4, #256	; 0x100
 8022e02:	1ba4      	subs	r4, r4, r6
 8022e04:	9e01      	ldr	r6, [sp, #4]
 8022e06:	8808      	ldrh	r0, [r1, #0]
 8022e08:	f89d 1050 	ldrb.w	r1, [sp, #80]	; 0x50
 8022e0c:	eba6 0608 	sub.w	r6, r6, r8
 8022e10:	b2b6      	uxth	r6, r6
 8022e12:	b2a4      	uxth	r4, r4
 8022e14:	4373      	muls	r3, r6
 8022e16:	fb0c 3304 	mla	r3, ip, r4, r3
 8022e1a:	9c02      	ldr	r4, [sp, #8]
 8022e1c:	fb04 3505 	mla	r5, r4, r5, r3
 8022e20:	fb08 5707 	mla	r7, r8, r7, r5
 8022e24:	ebc9 0e4e 	rsb	lr, r9, lr, lsl #1
 8022e28:	b289      	uxth	r1, r1
 8022e2a:	fb0e 2e0b 	mla	lr, lr, fp, r2
 8022e2e:	f3c7 2707 	ubfx	r7, r7, #8, #8
 8022e32:	434f      	muls	r7, r1
 8022e34:	ea4f 525e 	mov.w	r2, lr, lsr #21
 8022e38:	ea4f 1e5e 	mov.w	lr, lr, lsr #5
 8022e3c:	f402 62fc 	and.w	r2, r2, #2016	; 0x7e0
 8022e40:	1c7b      	adds	r3, r7, #1
 8022e42:	f42e 6efc 	bic.w	lr, lr, #2016	; 0x7e0
 8022e46:	ea42 0e0e 	orr.w	lr, r2, lr
 8022e4a:	eb03 2717 	add.w	r7, r3, r7, lsr #8
 8022e4e:	fa1f f28e 	uxth.w	r2, lr
 8022e52:	1203      	asrs	r3, r0, #8
 8022e54:	ea6f 2717 	mvn.w	r7, r7, lsr #8
 8022e58:	b2ff      	uxtb	r7, r7
 8022e5a:	1215      	asrs	r5, r2, #8
 8022e5c:	f003 03f8 	and.w	r3, r3, #248	; 0xf8
 8022e60:	fb13 f307 	smulbb	r3, r3, r7
 8022e64:	f005 05f8 	and.w	r5, r5, #248	; 0xf8
 8022e68:	fb05 3501 	mla	r5, r5, r1, r3
 8022e6c:	10c3      	asrs	r3, r0, #3
 8022e6e:	10d4      	asrs	r4, r2, #3
 8022e70:	f003 03fc 	and.w	r3, r3, #252	; 0xfc
 8022e74:	fb13 f307 	smulbb	r3, r3, r7
 8022e78:	f004 04fc 	and.w	r4, r4, #252	; 0xfc
 8022e7c:	fb04 3401 	mla	r4, r4, r1, r3
 8022e80:	00c3      	lsls	r3, r0, #3
 8022e82:	00d2      	lsls	r2, r2, #3
 8022e84:	b2db      	uxtb	r3, r3
 8022e86:	fb13 f307 	smulbb	r3, r3, r7
 8022e8a:	b2d2      	uxtb	r2, r2
 8022e8c:	fb02 3101 	mla	r1, r2, r1, r3
 8022e90:	b2ad      	uxth	r5, r5
 8022e92:	b289      	uxth	r1, r1
 8022e94:	b2a4      	uxth	r4, r4
 8022e96:	1c6b      	adds	r3, r5, #1
 8022e98:	eb03 2515 	add.w	r5, r3, r5, lsr #8
 8022e9c:	1c62      	adds	r2, r4, #1
 8022e9e:	1c4b      	adds	r3, r1, #1
 8022ea0:	eb03 2311 	add.w	r3, r3, r1, lsr #8
 8022ea4:	eb02 2414 	add.w	r4, r2, r4, lsr #8
 8022ea8:	f405 4578 	and.w	r5, r5, #63488	; 0xf800
 8022eac:	f3c3 23c4 	ubfx	r3, r3, #11, #5
 8022eb0:	0964      	lsrs	r4, r4, #5
 8022eb2:	432b      	orrs	r3, r5
 8022eb4:	f404 64fc 	and.w	r4, r4, #2016	; 0x7e0
 8022eb8:	9a03      	ldr	r2, [sp, #12]
 8022eba:	4323      	orrs	r3, r4
 8022ebc:	8013      	strh	r3, [r2, #0]
 8022ebe:	b005      	add	sp, #20
 8022ec0:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
 8022ec4:	f04f 0c00 	mov.w	ip, #0
 8022ec8:	4664      	mov	r4, ip
 8022eca:	e6d6      	b.n	8022c7a <_ZNK8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKtPKhssiihhh+0x7e>
 8022ecc:	2300      	movs	r3, #0
 8022ece:	469c      	mov	ip, r3
 8022ed0:	461a      	mov	r2, r3
 8022ed2:	461c      	mov	r4, r3
 8022ed4:	e6f8      	b.n	8022cc8 <_ZNK8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKtPKhssiihhh+0xcc>
 8022ed6:	2300      	movs	r3, #0
 8022ed8:	461a      	mov	r2, r3
 8022eda:	e6f5      	b.n	8022cc8 <_ZNK8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKtPKhssiihhh+0xcc>
 8022edc:	460b      	mov	r3, r1
 8022ede:	460a      	mov	r2, r1
 8022ee0:	e6f2      	b.n	8022cc8 <_ZNK8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKtPKhssiihhh+0xcc>
 8022ee2:	2500      	movs	r5, #0
 8022ee4:	46ab      	mov	fp, r5
 8022ee6:	e720      	b.n	8022d2a <_ZNK8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKtPKhssiihhh+0x12e>
 8022ee8:	2700      	movs	r7, #0
 8022eea:	463d      	mov	r5, r7
 8022eec:	4638      	mov	r0, r7
 8022eee:	46bb      	mov	fp, r7
 8022ef0:	e745      	b.n	8022d7e <_ZNK8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKtPKhssiihhh+0x182>
 8022ef2:	4677      	mov	r7, lr
 8022ef4:	4675      	mov	r5, lr
 8022ef6:	4670      	mov	r0, lr
 8022ef8:	46f3      	mov	fp, lr
 8022efa:	e740      	b.n	8022d7e <_ZNK8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKtPKhssiihhh+0x182>
 8022efc:	2700      	movs	r7, #0
 8022efe:	4638      	mov	r0, r7
 8022f00:	e73d      	b.n	8022d7e <_ZNK8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKtPKhssiihhh+0x182>
 8022f02:	460f      	mov	r7, r1
 8022f04:	4608      	mov	r0, r1
 8022f06:	e73a      	b.n	8022d7e <_ZNK8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKtPKhssiihhh+0x182>

08022f08 <_ZN8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff>:
 8022f08:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 8022f0c:	b097      	sub	sp, #92	; 0x5c
 8022f0e:	9214      	str	r2, [sp, #80]	; 0x50
 8022f10:	9308      	str	r3, [sp, #32]
 8022f12:	9a25      	ldr	r2, [sp, #148]	; 0x94
 8022f14:	f89d 30a4 	ldrb.w	r3, [sp, #164]	; 0xa4
 8022f18:	9312      	str	r3, [sp, #72]	; 0x48
 8022f1a:	9111      	str	r1, [sp, #68]	; 0x44
 8022f1c:	e9dd 1326 	ldrd	r1, r3, [sp, #152]	; 0x98
 8022f20:	9015      	str	r0, [sp, #84]	; 0x54
 8022f22:	6850      	ldr	r0, [r2, #4]
 8022f24:	6812      	ldr	r2, [r2, #0]
 8022f26:	fb00 1303 	mla	r3, r0, r3, r1
 8022f2a:	eb02 0343 	add.w	r3, r2, r3, lsl #1
 8022f2e:	9309      	str	r3, [sp, #36]	; 0x24
 8022f30:	9b28      	ldr	r3, [sp, #160]	; 0xa0
 8022f32:	681b      	ldr	r3, [r3, #0]
 8022f34:	930b      	str	r3, [sp, #44]	; 0x2c
 8022f36:	9b28      	ldr	r3, [sp, #160]	; 0xa0
 8022f38:	685b      	ldr	r3, [r3, #4]
 8022f3a:	930c      	str	r3, [sp, #48]	; 0x30
 8022f3c:	f8bd 3048 	ldrh.w	r3, [sp, #72]	; 0x48
 8022f40:	930a      	str	r3, [sp, #40]	; 0x28
 8022f42:	9b11      	ldr	r3, [sp, #68]	; 0x44
 8022f44:	2b00      	cmp	r3, #0
 8022f46:	dc03      	bgt.n	8022f50 <_ZN8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x48>
 8022f48:	9b14      	ldr	r3, [sp, #80]	; 0x50
 8022f4a:	2b00      	cmp	r3, #0
 8022f4c:	f340 83cb 	ble.w	80236e6 <_ZN8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x7de>
 8022f50:	9b28      	ldr	r3, [sp, #160]	; 0xa0
 8022f52:	f9b3 1008 	ldrsh.w	r1, [r3, #8]
 8022f56:	f9b3 200c 	ldrsh.w	r2, [r3, #12]
 8022f5a:	1e48      	subs	r0, r1, #1
 8022f5c:	1e55      	subs	r5, r2, #1
 8022f5e:	9b08      	ldr	r3, [sp, #32]
 8022f60:	2b00      	cmp	r3, #0
 8022f62:	f340 81a3 	ble.w	80232ac <_ZN8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x3a4>
 8022f66:	9e21      	ldr	r6, [sp, #132]	; 0x84
 8022f68:	9b22      	ldr	r3, [sp, #136]	; 0x88
 8022f6a:	1436      	asrs	r6, r6, #16
 8022f6c:	ea4f 4323 	mov.w	r3, r3, asr #16
 8022f70:	d406      	bmi.n	8022f80 <_ZN8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x78>
 8022f72:	4286      	cmp	r6, r0
 8022f74:	da04      	bge.n	8022f80 <_ZN8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x78>
 8022f76:	2b00      	cmp	r3, #0
 8022f78:	db02      	blt.n	8022f80 <_ZN8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x78>
 8022f7a:	42ab      	cmp	r3, r5
 8022f7c:	f2c0 8197 	blt.w	80232ae <_ZN8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x3a6>
 8022f80:	3601      	adds	r6, #1
 8022f82:	f100 8184 	bmi.w	802328e <_ZN8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x386>
 8022f86:	42b1      	cmp	r1, r6
 8022f88:	f2c0 8181 	blt.w	802328e <_ZN8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x386>
 8022f8c:	3301      	adds	r3, #1
 8022f8e:	f100 817e 	bmi.w	802328e <_ZN8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x386>
 8022f92:	429a      	cmp	r2, r3
 8022f94:	f2c0 817b 	blt.w	802328e <_ZN8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x386>
 8022f98:	9b08      	ldr	r3, [sp, #32]
 8022f9a:	9f09      	ldr	r7, [sp, #36]	; 0x24
 8022f9c:	9313      	str	r3, [sp, #76]	; 0x4c
 8022f9e:	f64f 061f 	movw	r6, #63519	; 0xf81f
 8022fa2:	9b13      	ldr	r3, [sp, #76]	; 0x4c
 8022fa4:	2b00      	cmp	r3, #0
 8022fa6:	f340 81a4 	ble.w	80232f2 <_ZN8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x3ea>
 8022faa:	9b22      	ldr	r3, [sp, #136]	; 0x88
 8022fac:	9d21      	ldr	r5, [sp, #132]	; 0x84
 8022fae:	1418      	asrs	r0, r3, #16
 8022fb0:	9b21      	ldr	r3, [sp, #132]	; 0x84
 8022fb2:	f3c3 3103 	ubfx	r1, r3, #12, #4
 8022fb6:	9b22      	ldr	r3, [sp, #136]	; 0x88
 8022fb8:	f3c3 3c03 	ubfx	ip, r3, #12, #4
 8022fbc:	9b28      	ldr	r3, [sp, #160]	; 0xa0
 8022fbe:	142d      	asrs	r5, r5, #16
 8022fc0:	e9d3 2302 	ldrd	r2, r3, [r3, #8]
 8022fc4:	f100 81f8 	bmi.w	80233b8 <_ZN8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x4b0>
 8022fc8:	f102 3eff 	add.w	lr, r2, #4294967295
 8022fcc:	4575      	cmp	r5, lr
 8022fce:	f280 81f3 	bge.w	80233b8 <_ZN8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x4b0>
 8022fd2:	2800      	cmp	r0, #0
 8022fd4:	f2c0 81f0 	blt.w	80233b8 <_ZN8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x4b0>
 8022fd8:	f103 3eff 	add.w	lr, r3, #4294967295
 8022fdc:	4570      	cmp	r0, lr
 8022fde:	f280 81eb 	bge.w	80233b8 <_ZN8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x4b0>
 8022fe2:	9b0c      	ldr	r3, [sp, #48]	; 0x30
 8022fe4:	b212      	sxth	r2, r2
 8022fe6:	fb00 5002 	mla	r0, r0, r2, r5
 8022fea:	fa1f fe81 	uxth.w	lr, r1
 8022fee:	eb03 0a00 	add.w	sl, r3, r0
 8022ff2:	ea4f 150e 	mov.w	r5, lr, lsl #4
 8022ff6:	f813 9000 	ldrb.w	r9, [r3, r0]
 8022ffa:	f89a 8001 	ldrb.w	r8, [sl, #1]
 8022ffe:	f5c5 7380 	rsb	r3, r5, #256	; 0x100
 8023002:	b29b      	uxth	r3, r3
 8023004:	f1bc 0f00 	cmp.w	ip, #0
 8023008:	f000 81b9 	beq.w	802337e <_ZN8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x476>
 802300c:	f81a 4002 	ldrb.w	r4, [sl, r2]
 8023010:	940d      	str	r4, [sp, #52]	; 0x34
 8023012:	eb0a 0b02 	add.w	fp, sl, r2
 8023016:	fa1f fa8c 	uxth.w	sl, ip
 802301a:	fb0a fe0e 	mul.w	lr, sl, lr
 802301e:	ebce 1a0a 	rsb	sl, lr, sl, lsl #4
 8023022:	fa1f fa8a 	uxth.w	sl, sl
 8023026:	eba5 050e 	sub.w	r5, r5, lr
 802302a:	f89b 4001 	ldrb.w	r4, [fp, #1]
 802302e:	940e      	str	r4, [sp, #56]	; 0x38
 8023030:	eba3 030a 	sub.w	r3, r3, sl
 8023034:	b2ad      	uxth	r5, r5
 8023036:	9c0d      	ldr	r4, [sp, #52]	; 0x34
 8023038:	b29b      	uxth	r3, r3
 802303a:	fb08 f505 	mul.w	r5, r8, r5
 802303e:	fb09 5303 	mla	r3, r9, r3, r5
 8023042:	fb0a 3304 	mla	r3, sl, r4, r3
 8023046:	9c0e      	ldr	r4, [sp, #56]	; 0x38
 8023048:	fb0e 3304 	mla	r3, lr, r4, r3
 802304c:	f3c3 2307 	ubfx	r3, r3, #8, #8
 8023050:	2b00      	cmp	r3, #0
 8023052:	f000 810f 	beq.w	8023274 <_ZN8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x36c>
 8023056:	9c0b      	ldr	r4, [sp, #44]	; 0x2c
 8023058:	f1b9 0fff 	cmp.w	r9, #255	; 0xff
 802305c:	eb04 0540 	add.w	r5, r4, r0, lsl #1
 8023060:	f834 0010 	ldrh.w	r0, [r4, r0, lsl #1]
 8023064:	f000 8190 	beq.w	8023388 <_ZN8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x480>
 8023068:	f420 6efc 	bic.w	lr, r0, #2016	; 0x7e0
 802306c:	ea4f 0ae9 	mov.w	sl, r9, asr #3
 8023070:	f400 60fc 	and.w	r0, r0, #2016	; 0x7e0
 8023074:	fb09 f000 	mul.w	r0, r9, r0
 8023078:	fb0a fe0e 	mul.w	lr, sl, lr
 802307c:	ea06 195e 	and.w	r9, r6, lr, lsr #5
 8023080:	f100 0b20 	add.w	fp, r0, #32
 8023084:	f60e 0e01 	addw	lr, lr, #2049	; 0x801
 8023088:	44ce      	add	lr, r9
 802308a:	eb0b 2910 	add.w	r9, fp, r0, lsr #8
 802308e:	ea4f 2919 	mov.w	r9, r9, lsr #8
 8023092:	ea06 1e5e 	and.w	lr, r6, lr, lsr #5
 8023096:	f409 69fc 	and.w	r9, r9, #2016	; 0x7e0
 802309a:	ea4e 0909 	orr.w	r9, lr, r9
 802309e:	f1b8 0fff 	cmp.w	r8, #255	; 0xff
 80230a2:	8868      	ldrh	r0, [r5, #2]
 80230a4:	d019      	beq.n	80230da <_ZN8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x1d2>
 80230a6:	f420 6efc 	bic.w	lr, r0, #2016	; 0x7e0
 80230aa:	ea4f 0ae8 	mov.w	sl, r8, asr #3
 80230ae:	f400 60fc 	and.w	r0, r0, #2016	; 0x7e0
 80230b2:	fb08 f800 	mul.w	r8, r8, r0
 80230b6:	fb0a fe0e 	mul.w	lr, sl, lr
 80230ba:	ea06 105e 	and.w	r0, r6, lr, lsr #5
 80230be:	f108 0b20 	add.w	fp, r8, #32
 80230c2:	f60e 0e01 	addw	lr, lr, #2049	; 0x801
 80230c6:	4486      	add	lr, r0
 80230c8:	eb0b 2018 	add.w	r0, fp, r8, lsr #8
 80230cc:	0a00      	lsrs	r0, r0, #8
 80230ce:	ea06 1e5e 	and.w	lr, r6, lr, lsr #5
 80230d2:	f400 60fc 	and.w	r0, r0, #2016	; 0x7e0
 80230d6:	ea4e 0000 	orr.w	r0, lr, r0
 80230da:	ea4f 4e09 	mov.w	lr, r9, lsl #16
 80230de:	ea4f 4a00 	mov.w	sl, r0, lsl #16
 80230e2:	f00e 6efc 	and.w	lr, lr, #132120576	; 0x7e00000
 80230e6:	f429 69fc 	bic.w	r9, r9, #2016	; 0x7e0
 80230ea:	f00a 6afc 	and.w	sl, sl, #132120576	; 0x7e00000
 80230ee:	f420 60fc 	bic.w	r0, r0, #2016	; 0x7e0
 80230f2:	ea4e 0909 	orr.w	r9, lr, r9
 80230f6:	ea4a 0000 	orr.w	r0, sl, r0
 80230fa:	f1bc 0f00 	cmp.w	ip, #0
 80230fe:	f000 8145 	beq.w	802338c <_ZN8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x484>
 8023102:	f102 4200 	add.w	r2, r2, #2147483648	; 0x80000000
 8023106:	3a01      	subs	r2, #1
 8023108:	0052      	lsls	r2, r2, #1
 802310a:	9c0d      	ldr	r4, [sp, #52]	; 0x34
 802310c:	3202      	adds	r2, #2
 802310e:	2cff      	cmp	r4, #255	; 0xff
 8023110:	eb05 0e02 	add.w	lr, r5, r2
 8023114:	5aaa      	ldrh	r2, [r5, r2]
 8023116:	d018      	beq.n	802314a <_ZN8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x242>
 8023118:	f422 65fc 	bic.w	r5, r2, #2016	; 0x7e0
 802311c:	f402 62fc 	and.w	r2, r2, #2016	; 0x7e0
 8023120:	fb04 fa02 	mul.w	sl, r4, r2
 8023124:	ea4f 08e4 	mov.w	r8, r4, asr #3
 8023128:	fb08 f805 	mul.w	r8, r8, r5
 802312c:	f10a 0520 	add.w	r5, sl, #32
 8023130:	ea06 1258 	and.w	r2, r6, r8, lsr #5
 8023134:	eb05 251a 	add.w	r5, r5, sl, lsr #8
 8023138:	f608 0801 	addw	r8, r8, #2049	; 0x801
 802313c:	4442      	add	r2, r8
 802313e:	0a2d      	lsrs	r5, r5, #8
 8023140:	ea06 1252 	and.w	r2, r6, r2, lsr #5
 8023144:	f405 65fc 	and.w	r5, r5, #2016	; 0x7e0
 8023148:	432a      	orrs	r2, r5
 802314a:	9c0e      	ldr	r4, [sp, #56]	; 0x38
 802314c:	f8be 5002 	ldrh.w	r5, [lr, #2]
 8023150:	2cff      	cmp	r4, #255	; 0xff
 8023152:	d01a      	beq.n	802318a <_ZN8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x282>
 8023154:	f425 6efc 	bic.w	lr, r5, #2016	; 0x7e0
 8023158:	f405 65fc 	and.w	r5, r5, #2016	; 0x7e0
 802315c:	fb04 fa05 	mul.w	sl, r4, r5
 8023160:	ea4f 08e4 	mov.w	r8, r4, asr #3
 8023164:	fb08 f80e 	mul.w	r8, r8, lr
 8023168:	f10a 0e20 	add.w	lr, sl, #32
 802316c:	ea06 1558 	and.w	r5, r6, r8, lsr #5
 8023170:	eb0e 2e1a 	add.w	lr, lr, sl, lsr #8
 8023174:	f608 0801 	addw	r8, r8, #2049	; 0x801
 8023178:	4445      	add	r5, r8
 802317a:	ea4f 2e1e 	mov.w	lr, lr, lsr #8
 802317e:	ea06 1555 	and.w	r5, r6, r5, lsr #5
 8023182:	f40e 6efc 	and.w	lr, lr, #2016	; 0x7e0
 8023186:	ea45 050e 	orr.w	r5, r5, lr
 802318a:	fb1c fe01 	smulbb	lr, ip, r1
 802318e:	ea4f 0eee 	mov.w	lr, lr, asr #3
 8023192:	f1cc 0810 	rsb	r8, ip, #16
 8023196:	eba8 0801 	sub.w	r8, r8, r1
 802319a:	ea4f 4a02 	mov.w	sl, r2, lsl #16
 802319e:	ebce 0141 	rsb	r1, lr, r1, lsl #1
 80231a2:	eb0e 0848 	add.w	r8, lr, r8, lsl #1
 80231a6:	ea4f 4b05 	mov.w	fp, r5, lsl #16
 80231aa:	4341      	muls	r1, r0
 80231ac:	f00a 6afc 	and.w	sl, sl, #132120576	; 0x7e00000
 80231b0:	f422 62fc 	bic.w	r2, r2, #2016	; 0x7e0
 80231b4:	ea4a 0202 	orr.w	r2, sl, r2
 80231b8:	ebce 0c4c 	rsb	ip, lr, ip, lsl #1
 80231bc:	fb09 1108 	mla	r1, r9, r8, r1
 80231c0:	f00b 6bfc 	and.w	fp, fp, #132120576	; 0x7e00000
 80231c4:	f425 65fc 	bic.w	r5, r5, #2016	; 0x7e0
 80231c8:	fb0c 1102 	mla	r1, ip, r2, r1
 80231cc:	ea4b 0505 	orr.w	r5, fp, r5
 80231d0:	fb0e 1e05 	mla	lr, lr, r5, r1
 80231d4:	ea4f 525e 	mov.w	r2, lr, lsr #21
 80231d8:	ea4f 1e5e 	mov.w	lr, lr, lsr #5
 80231dc:	f402 62fc 	and.w	r2, r2, #2016	; 0x7e0
 80231e0:	f42e 6efc 	bic.w	lr, lr, #2016	; 0x7e0
 80231e4:	ea42 0e0e 	orr.w	lr, r2, lr
 80231e8:	fa1f f28e 	uxth.w	r2, lr
 80231ec:	2bff      	cmp	r3, #255	; 0xff
 80231ee:	d103      	bne.n	80231f8 <_ZN8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x2f0>
 80231f0:	9912      	ldr	r1, [sp, #72]	; 0x48
 80231f2:	29ff      	cmp	r1, #255	; 0xff
 80231f4:	f000 80de 	beq.w	80233b4 <_ZN8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x4ac>
 80231f8:	990a      	ldr	r1, [sp, #40]	; 0x28
 80231fa:	8838      	ldrh	r0, [r7, #0]
 80231fc:	9c0a      	ldr	r4, [sp, #40]	; 0x28
 80231fe:	434b      	muls	r3, r1
 8023200:	f103 0c01 	add.w	ip, r3, #1
 8023204:	eb0c 2323 	add.w	r3, ip, r3, asr #8
 8023208:	ea6f 2323 	mvn.w	r3, r3, asr #8
 802320c:	fa5f fc83 	uxtb.w	ip, r3
 8023210:	1203      	asrs	r3, r0, #8
 8023212:	1215      	asrs	r5, r2, #8
 8023214:	f003 03f8 	and.w	r3, r3, #248	; 0xf8
 8023218:	fb13 f30c 	smulbb	r3, r3, ip
 802321c:	f005 05f8 	and.w	r5, r5, #248	; 0xf8
 8023220:	fb05 3501 	mla	r5, r5, r1, r3
 8023224:	10c3      	asrs	r3, r0, #3
 8023226:	10d1      	asrs	r1, r2, #3
 8023228:	f003 03fc 	and.w	r3, r3, #252	; 0xfc
 802322c:	fb13 f30c 	smulbb	r3, r3, ip
 8023230:	f001 01fc 	and.w	r1, r1, #252	; 0xfc
 8023234:	fb01 3104 	mla	r1, r1, r4, r3
 8023238:	00c3      	lsls	r3, r0, #3
 802323a:	00d2      	lsls	r2, r2, #3
 802323c:	b2db      	uxtb	r3, r3
 802323e:	b2d2      	uxtb	r2, r2
 8023240:	fb13 f30c 	smulbb	r3, r3, ip
 8023244:	b2ad      	uxth	r5, r5
 8023246:	fb02 3304 	mla	r3, r2, r4, r3
 802324a:	b29a      	uxth	r2, r3
 802324c:	1c6b      	adds	r3, r5, #1
 802324e:	b289      	uxth	r1, r1
 8023250:	eb03 2515 	add.w	r5, r3, r5, lsr #8
 8023254:	1c53      	adds	r3, r2, #1
 8023256:	eb03 2312 	add.w	r3, r3, r2, lsr #8
 802325a:	1c4a      	adds	r2, r1, #1
 802325c:	eb02 2111 	add.w	r1, r2, r1, lsr #8
 8023260:	f405 4578 	and.w	r5, r5, #63488	; 0xf800
 8023264:	f3c3 23c4 	ubfx	r3, r3, #11, #5
 8023268:	0949      	lsrs	r1, r1, #5
 802326a:	432b      	orrs	r3, r5
 802326c:	f401 61fc 	and.w	r1, r1, #2016	; 0x7e0
 8023270:	430b      	orrs	r3, r1
 8023272:	803b      	strh	r3, [r7, #0]
 8023274:	9b21      	ldr	r3, [sp, #132]	; 0x84
 8023276:	9a23      	ldr	r2, [sp, #140]	; 0x8c
 8023278:	4413      	add	r3, r2
 802327a:	9321      	str	r3, [sp, #132]	; 0x84
 802327c:	9a22      	ldr	r2, [sp, #136]	; 0x88
 802327e:	9b24      	ldr	r3, [sp, #144]	; 0x90
 8023280:	441a      	add	r2, r3
 8023282:	9b13      	ldr	r3, [sp, #76]	; 0x4c
 8023284:	9222      	str	r2, [sp, #136]	; 0x88
 8023286:	3b01      	subs	r3, #1
 8023288:	3702      	adds	r7, #2
 802328a:	9313      	str	r3, [sp, #76]	; 0x4c
 802328c:	e689      	b.n	8022fa2 <_ZN8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x9a>
 802328e:	9b21      	ldr	r3, [sp, #132]	; 0x84
 8023290:	9e23      	ldr	r6, [sp, #140]	; 0x8c
 8023292:	9c22      	ldr	r4, [sp, #136]	; 0x88
 8023294:	4433      	add	r3, r6
 8023296:	9321      	str	r3, [sp, #132]	; 0x84
 8023298:	9b24      	ldr	r3, [sp, #144]	; 0x90
 802329a:	441c      	add	r4, r3
 802329c:	9b08      	ldr	r3, [sp, #32]
 802329e:	9422      	str	r4, [sp, #136]	; 0x88
 80232a0:	3b01      	subs	r3, #1
 80232a2:	9308      	str	r3, [sp, #32]
 80232a4:	9b09      	ldr	r3, [sp, #36]	; 0x24
 80232a6:	3302      	adds	r3, #2
 80232a8:	9309      	str	r3, [sp, #36]	; 0x24
 80232aa:	e658      	b.n	8022f5e <_ZN8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x56>
 80232ac:	d028      	beq.n	8023300 <_ZN8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x3f8>
 80232ae:	9b08      	ldr	r3, [sp, #32]
 80232b0:	9823      	ldr	r0, [sp, #140]	; 0x8c
 80232b2:	9d21      	ldr	r5, [sp, #132]	; 0x84
 80232b4:	3b01      	subs	r3, #1
 80232b6:	fb00 5003 	mla	r0, r0, r3, r5
 80232ba:	1400      	asrs	r0, r0, #16
 80232bc:	f53f ae6c 	bmi.w	8022f98 <_ZN8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x90>
 80232c0:	3901      	subs	r1, #1
 80232c2:	4288      	cmp	r0, r1
 80232c4:	f6bf ae68 	bge.w	8022f98 <_ZN8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x90>
 80232c8:	9924      	ldr	r1, [sp, #144]	; 0x90
 80232ca:	9822      	ldr	r0, [sp, #136]	; 0x88
 80232cc:	fb01 0303 	mla	r3, r1, r3, r0
 80232d0:	141b      	asrs	r3, r3, #16
 80232d2:	f53f ae61 	bmi.w	8022f98 <_ZN8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x90>
 80232d6:	3a01      	subs	r2, #1
 80232d8:	4293      	cmp	r3, r2
 80232da:	f6bf ae5d 	bge.w	8022f98 <_ZN8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x90>
 80232de:	9b08      	ldr	r3, [sp, #32]
 80232e0:	f8dd e024 	ldr.w	lr, [sp, #36]	; 0x24
 80232e4:	9313      	str	r3, [sp, #76]	; 0x4c
 80232e6:	f64f 061f 	movw	r6, #63519	; 0xf81f
 80232ea:	9b13      	ldr	r3, [sp, #76]	; 0x4c
 80232ec:	2b00      	cmp	r3, #0
 80232ee:	f300 8082 	bgt.w	80233f6 <_ZN8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x4ee>
 80232f2:	9b08      	ldr	r3, [sp, #32]
 80232f4:	ea23 74e3 	bic.w	r4, r3, r3, asr #31
 80232f8:	9b09      	ldr	r3, [sp, #36]	; 0x24
 80232fa:	eb03 0344 	add.w	r3, r3, r4, lsl #1
 80232fe:	9309      	str	r3, [sp, #36]	; 0x24
 8023300:	9b11      	ldr	r3, [sp, #68]	; 0x44
 8023302:	2b00      	cmp	r3, #0
 8023304:	f340 81ef 	ble.w	80236e6 <_ZN8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x7de>
 8023308:	ee30 0a04 	vadd.f32	s0, s0, s8
 802330c:	eeb7 7a00 	vmov.f32	s14, #112	; 0x3f800000  1.0
 8023310:	eec7 7a00 	vdiv.f32	s15, s14, s0
 8023314:	9b20      	ldr	r3, [sp, #128]	; 0x80
 8023316:	ee70 0aa4 	vadd.f32	s1, s1, s9
 802331a:	ee31 1a05 	vadd.f32	s2, s2, s10
 802331e:	ee20 7aa7 	vmul.f32	s14, s1, s15
 8023322:	eef0 6a62 	vmov.f32	s13, s5
 8023326:	ee61 7a27 	vmul.f32	s15, s2, s15
 802332a:	eefe 6ac8 	vcvt.s32.f32	s13, s13, #16
 802332e:	ee77 2a62 	vsub.f32	s5, s14, s5
 8023332:	edcd 6a21 	vstr	s13, [sp, #132]	; 0x84
 8023336:	eefe 2ac8 	vcvt.s32.f32	s5, s5, #16
 802333a:	eef0 6a43 	vmov.f32	s13, s6
 802333e:	ee37 3ac3 	vsub.f32	s6, s15, s6
 8023342:	ee12 2a90 	vmov	r2, s5
 8023346:	eebe 3ac8 	vcvt.s32.f32	s6, s6, #16
 802334a:	fb92 f3f3 	sdiv	r3, r2, r3
 802334e:	ee13 2a10 	vmov	r2, s6
 8023352:	9323      	str	r3, [sp, #140]	; 0x8c
 8023354:	9b20      	ldr	r3, [sp, #128]	; 0x80
 8023356:	fb92 f3f3 	sdiv	r3, r2, r3
 802335a:	9324      	str	r3, [sp, #144]	; 0x90
 802335c:	9b11      	ldr	r3, [sp, #68]	; 0x44
 802335e:	9a14      	ldr	r2, [sp, #80]	; 0x50
 8023360:	3b01      	subs	r3, #1
 8023362:	eefe 6ac8 	vcvt.s32.f32	s13, s13, #16
 8023366:	9311      	str	r3, [sp, #68]	; 0x44
 8023368:	9b20      	ldr	r3, [sp, #128]	; 0x80
 802336a:	edcd 6a22 	vstr	s13, [sp, #136]	; 0x88
 802336e:	bf08      	it	eq
 8023370:	4613      	moveq	r3, r2
 8023372:	9308      	str	r3, [sp, #32]
 8023374:	eeb0 3a67 	vmov.f32	s6, s15
 8023378:	eef0 2a47 	vmov.f32	s5, s14
 802337c:	e5e1      	b.n	8022f42 <_ZN8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x3a>
 802337e:	fb08 f505 	mul.w	r5, r8, r5
 8023382:	fb09 5303 	mla	r3, r9, r3, r5
 8023386:	e661      	b.n	802304c <_ZN8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x144>
 8023388:	4681      	mov	r9, r0
 802338a:	e688      	b.n	802309e <_ZN8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x196>
 802338c:	f1c1 0210 	rsb	r2, r1, #16
 8023390:	4341      	muls	r1, r0
 8023392:	fb09 1902 	mla	r9, r9, r2, r1
 8023396:	ea4f 0949 	mov.w	r9, r9, lsl #1
 802339a:	ea4f 5259 	mov.w	r2, r9, lsr #21
 802339e:	ea4f 1959 	mov.w	r9, r9, lsr #5
 80233a2:	f402 62fc 	and.w	r2, r2, #2016	; 0x7e0
 80233a6:	f429 69fc 	bic.w	r9, r9, #2016	; 0x7e0
 80233aa:	ea42 0909 	orr.w	r9, r2, r9
 80233ae:	fa1f f289 	uxth.w	r2, r9
 80233b2:	e71b      	b.n	80231ec <_ZN8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x2e4>
 80233b4:	803a      	strh	r2, [r7, #0]
 80233b6:	e75d      	b.n	8023274 <_ZN8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x36c>
 80233b8:	f115 0e01 	adds.w	lr, r5, #1
 80233bc:	f53f af5a 	bmi.w	8023274 <_ZN8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x36c>
 80233c0:	4572      	cmp	r2, lr
 80233c2:	f6ff af57 	blt.w	8023274 <_ZN8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x36c>
 80233c6:	f110 0e01 	adds.w	lr, r0, #1
 80233ca:	f53f af53 	bmi.w	8023274 <_ZN8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x36c>
 80233ce:	4573      	cmp	r3, lr
 80233d0:	f6ff af50 	blt.w	8023274 <_ZN8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x36c>
 80233d4:	9c12      	ldr	r4, [sp, #72]	; 0x48
 80233d6:	9502      	str	r5, [sp, #8]
 80233d8:	b21b      	sxth	r3, r3
 80233da:	b212      	sxth	r2, r2
 80233dc:	e9cd 0103 	strd	r0, r1, [sp, #12]
 80233e0:	9301      	str	r3, [sp, #4]
 80233e2:	9200      	str	r2, [sp, #0]
 80233e4:	e9cd c405 	strd	ip, r4, [sp, #20]
 80233e8:	e9dd 230b 	ldrd	r2, r3, [sp, #44]	; 0x2c
 80233ec:	4639      	mov	r1, r7
 80233ee:	9815      	ldr	r0, [sp, #84]	; 0x54
 80233f0:	f7ff fc04 	bl	8022bfc <_ZNK8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKtPKhssiihhh>
 80233f4:	e73e      	b.n	8023274 <_ZN8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x36c>
 80233f6:	9b21      	ldr	r3, [sp, #132]	; 0x84
 80233f8:	f3c3 3203 	ubfx	r2, r3, #12, #4
 80233fc:	9b22      	ldr	r3, [sp, #136]	; 0x88
 80233fe:	f3c3 3503 	ubfx	r5, r3, #12, #4
 8023402:	9b28      	ldr	r3, [sp, #160]	; 0xa0
 8023404:	f9b3 1008 	ldrsh.w	r1, [r3, #8]
 8023408:	9b22      	ldr	r3, [sp, #136]	; 0x88
 802340a:	141f      	asrs	r7, r3, #16
 802340c:	9b21      	ldr	r3, [sp, #132]	; 0x84
 802340e:	141b      	asrs	r3, r3, #16
 8023410:	fb01 3707 	mla	r7, r1, r7, r3
 8023414:	9b0c      	ldr	r3, [sp, #48]	; 0x30
 8023416:	fa1f fc82 	uxth.w	ip, r2
 802341a:	eb03 0a07 	add.w	sl, r3, r7
 802341e:	ea4f 100c 	mov.w	r0, ip, lsl #4
 8023422:	f813 9007 	ldrb.w	r9, [r3, r7]
 8023426:	f89a 8001 	ldrb.w	r8, [sl, #1]
 802342a:	f5c0 7380 	rsb	r3, r0, #256	; 0x100
 802342e:	b29b      	uxth	r3, r3
 8023430:	2d00      	cmp	r5, #0
 8023432:	f000 813d 	beq.w	80236b0 <_ZN8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x7a8>
 8023436:	f81a 4001 	ldrb.w	r4, [sl, r1]
 802343a:	940f      	str	r4, [sp, #60]	; 0x3c
 802343c:	eb0a 0b01 	add.w	fp, sl, r1
 8023440:	fa1f fa85 	uxth.w	sl, r5
 8023444:	fb0a fc0c 	mul.w	ip, sl, ip
 8023448:	ebcc 1a0a 	rsb	sl, ip, sl, lsl #4
 802344c:	fa1f fa8a 	uxth.w	sl, sl
 8023450:	eba0 000c 	sub.w	r0, r0, ip
 8023454:	eba3 030a 	sub.w	r3, r3, sl
 8023458:	b280      	uxth	r0, r0
 802345a:	fb08 f000 	mul.w	r0, r8, r0
 802345e:	b29b      	uxth	r3, r3
 8023460:	fb09 0303 	mla	r3, r9, r3, r0
 8023464:	980f      	ldr	r0, [sp, #60]	; 0x3c
 8023466:	f89b 4001 	ldrb.w	r4, [fp, #1]
 802346a:	9410      	str	r4, [sp, #64]	; 0x40
 802346c:	fb0a 3300 	mla	r3, sl, r0, r3
 8023470:	fb0c 3304 	mla	r3, ip, r4, r3
 8023474:	f3c3 2307 	ubfx	r3, r3, #8, #8
 8023478:	2b00      	cmp	r3, #0
 802347a:	f000 810b 	beq.w	8023694 <_ZN8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x78c>
 802347e:	980b      	ldr	r0, [sp, #44]	; 0x2c
 8023480:	9c0b      	ldr	r4, [sp, #44]	; 0x2c
 8023482:	f1b9 0fff 	cmp.w	r9, #255	; 0xff
 8023486:	eb00 0047 	add.w	r0, r0, r7, lsl #1
 802348a:	f834 7017 	ldrh.w	r7, [r4, r7, lsl #1]
 802348e:	f000 8114 	beq.w	80236ba <_ZN8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x7b2>
 8023492:	f427 6cfc 	bic.w	ip, r7, #2016	; 0x7e0
 8023496:	ea4f 0ae9 	mov.w	sl, r9, asr #3
 802349a:	f407 67fc 	and.w	r7, r7, #2016	; 0x7e0
 802349e:	fb09 f707 	mul.w	r7, r9, r7
 80234a2:	fb0a fc0c 	mul.w	ip, sl, ip
 80234a6:	ea06 195c 	and.w	r9, r6, ip, lsr #5
 80234aa:	f107 0b20 	add.w	fp, r7, #32
 80234ae:	f60c 0c01 	addw	ip, ip, #2049	; 0x801
 80234b2:	44cc      	add	ip, r9
 80234b4:	eb0b 2917 	add.w	r9, fp, r7, lsr #8
 80234b8:	ea4f 2919 	mov.w	r9, r9, lsr #8
 80234bc:	ea06 1c5c 	and.w	ip, r6, ip, lsr #5
 80234c0:	f409 69fc 	and.w	r9, r9, #2016	; 0x7e0
 80234c4:	ea4c 0909 	orr.w	r9, ip, r9
 80234c8:	f1b8 0fff 	cmp.w	r8, #255	; 0xff
 80234cc:	8847      	ldrh	r7, [r0, #2]
 80234ce:	d019      	beq.n	8023504 <_ZN8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x5fc>
 80234d0:	f427 6cfc 	bic.w	ip, r7, #2016	; 0x7e0
 80234d4:	ea4f 0ae8 	mov.w	sl, r8, asr #3
 80234d8:	f407 67fc 	and.w	r7, r7, #2016	; 0x7e0
 80234dc:	fb08 f807 	mul.w	r8, r8, r7
 80234e0:	fb0a fc0c 	mul.w	ip, sl, ip
 80234e4:	ea06 175c 	and.w	r7, r6, ip, lsr #5
 80234e8:	f108 0b20 	add.w	fp, r8, #32
 80234ec:	f60c 0c01 	addw	ip, ip, #2049	; 0x801
 80234f0:	44bc      	add	ip, r7
 80234f2:	eb0b 2718 	add.w	r7, fp, r8, lsr #8
 80234f6:	0a3f      	lsrs	r7, r7, #8
 80234f8:	ea06 1c5c 	and.w	ip, r6, ip, lsr #5
 80234fc:	f407 67fc 	and.w	r7, r7, #2016	; 0x7e0
 8023500:	ea4c 0707 	orr.w	r7, ip, r7
 8023504:	ea4f 4c09 	mov.w	ip, r9, lsl #16
 8023508:	ea4f 4a07 	mov.w	sl, r7, lsl #16
 802350c:	f00c 6cfc 	and.w	ip, ip, #132120576	; 0x7e00000
 8023510:	f429 69fc 	bic.w	r9, r9, #2016	; 0x7e0
 8023514:	f00a 6afc 	and.w	sl, sl, #132120576	; 0x7e00000
 8023518:	f427 67fc 	bic.w	r7, r7, #2016	; 0x7e0
 802351c:	ea4c 0909 	orr.w	r9, ip, r9
 8023520:	ea4a 0707 	orr.w	r7, sl, r7
 8023524:	2d00      	cmp	r5, #0
 8023526:	f000 80ca 	beq.w	80236be <_ZN8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x7b6>
 802352a:	f101 4100 	add.w	r1, r1, #2147483648	; 0x80000000
 802352e:	3901      	subs	r1, #1
 8023530:	0049      	lsls	r1, r1, #1
 8023532:	3102      	adds	r1, #2
 8023534:	eb00 0c01 	add.w	ip, r0, r1
 8023538:	5a41      	ldrh	r1, [r0, r1]
 802353a:	980f      	ldr	r0, [sp, #60]	; 0x3c
 802353c:	28ff      	cmp	r0, #255	; 0xff
 802353e:	d019      	beq.n	8023574 <_ZN8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x66c>
 8023540:	9c0f      	ldr	r4, [sp, #60]	; 0x3c
 8023542:	f421 60fc 	bic.w	r0, r1, #2016	; 0x7e0
 8023546:	f401 61fc 	and.w	r1, r1, #2016	; 0x7e0
 802354a:	fb04 fa01 	mul.w	sl, r4, r1
 802354e:	ea4f 08e4 	mov.w	r8, r4, asr #3
 8023552:	fb08 f800 	mul.w	r8, r8, r0
 8023556:	f10a 0020 	add.w	r0, sl, #32
 802355a:	ea06 1158 	and.w	r1, r6, r8, lsr #5
 802355e:	eb00 201a 	add.w	r0, r0, sl, lsr #8
 8023562:	f608 0801 	addw	r8, r8, #2049	; 0x801
 8023566:	4441      	add	r1, r8
 8023568:	0a00      	lsrs	r0, r0, #8
 802356a:	ea06 1151 	and.w	r1, r6, r1, lsr #5
 802356e:	f400 60fc 	and.w	r0, r0, #2016	; 0x7e0
 8023572:	4301      	orrs	r1, r0
 8023574:	9c10      	ldr	r4, [sp, #64]	; 0x40
 8023576:	f8bc 0002 	ldrh.w	r0, [ip, #2]
 802357a:	2cff      	cmp	r4, #255	; 0xff
 802357c:	d01a      	beq.n	80235b4 <_ZN8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x6ac>
 802357e:	f420 6cfc 	bic.w	ip, r0, #2016	; 0x7e0
 8023582:	f400 60fc 	and.w	r0, r0, #2016	; 0x7e0
 8023586:	fb04 fa00 	mul.w	sl, r4, r0
 802358a:	ea4f 08e4 	mov.w	r8, r4, asr #3
 802358e:	fb08 f80c 	mul.w	r8, r8, ip
 8023592:	f10a 0c20 	add.w	ip, sl, #32
 8023596:	ea06 1058 	and.w	r0, r6, r8, lsr #5
 802359a:	eb0c 2c1a 	add.w	ip, ip, sl, lsr #8
 802359e:	f608 0801 	addw	r8, r8, #2049	; 0x801
 80235a2:	4440      	add	r0, r8
 80235a4:	ea4f 2c1c 	mov.w	ip, ip, lsr #8
 80235a8:	ea06 1050 	and.w	r0, r6, r0, lsr #5
 80235ac:	f40c 6cfc 	and.w	ip, ip, #2016	; 0x7e0
 80235b0:	ea40 000c 	orr.w	r0, r0, ip
 80235b4:	fb15 fc02 	smulbb	ip, r5, r2
 80235b8:	ea4f 0cec 	mov.w	ip, ip, asr #3
 80235bc:	f1c5 0810 	rsb	r8, r5, #16
 80235c0:	eba8 0802 	sub.w	r8, r8, r2
 80235c4:	ea4f 4a01 	mov.w	sl, r1, lsl #16
 80235c8:	ebcc 0242 	rsb	r2, ip, r2, lsl #1
 80235cc:	437a      	muls	r2, r7
 80235ce:	ea4f 4b00 	mov.w	fp, r0, lsl #16
 80235d2:	eb0c 0848 	add.w	r8, ip, r8, lsl #1
 80235d6:	f00a 6afc 	and.w	sl, sl, #132120576	; 0x7e00000
 80235da:	f421 61fc 	bic.w	r1, r1, #2016	; 0x7e0
 80235de:	fb09 2208 	mla	r2, r9, r8, r2
 80235e2:	ea4a 0101 	orr.w	r1, sl, r1
 80235e6:	ebcc 0545 	rsb	r5, ip, r5, lsl #1
 80235ea:	f00b 6bfc 	and.w	fp, fp, #132120576	; 0x7e00000
 80235ee:	f420 60fc 	bic.w	r0, r0, #2016	; 0x7e0
 80235f2:	fb05 2201 	mla	r2, r5, r1, r2
 80235f6:	ea4b 0000 	orr.w	r0, fp, r0
 80235fa:	fb0c 2200 	mla	r2, ip, r0, r2
 80235fe:	0d57      	lsrs	r7, r2, #21
 8023600:	0952      	lsrs	r2, r2, #5
 8023602:	f407 67fc 	and.w	r7, r7, #2016	; 0x7e0
 8023606:	f422 62fc 	bic.w	r2, r2, #2016	; 0x7e0
 802360a:	433a      	orrs	r2, r7
 802360c:	2bff      	cmp	r3, #255	; 0xff
 802360e:	b292      	uxth	r2, r2
 8023610:	d102      	bne.n	8023618 <_ZN8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x710>
 8023612:	9912      	ldr	r1, [sp, #72]	; 0x48
 8023614:	29ff      	cmp	r1, #255	; 0xff
 8023616:	d063      	beq.n	80236e0 <_ZN8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x7d8>
 8023618:	980a      	ldr	r0, [sp, #40]	; 0x28
 802361a:	f8be 1000 	ldrh.w	r1, [lr]
 802361e:	9c0a      	ldr	r4, [sp, #40]	; 0x28
 8023620:	4343      	muls	r3, r0
 8023622:	1c58      	adds	r0, r3, #1
 8023624:	eb00 2323 	add.w	r3, r0, r3, asr #8
 8023628:	ea6f 2323 	mvn.w	r3, r3, asr #8
 802362c:	1208      	asrs	r0, r1, #8
 802362e:	b2db      	uxtb	r3, r3
 8023630:	1215      	asrs	r5, r2, #8
 8023632:	f000 00f8 	and.w	r0, r0, #248	; 0xf8
 8023636:	fb10 f003 	smulbb	r0, r0, r3
 802363a:	10cf      	asrs	r7, r1, #3
 802363c:	f005 05f8 	and.w	r5, r5, #248	; 0xf8
 8023640:	00c9      	lsls	r1, r1, #3
 8023642:	fb05 0504 	mla	r5, r5, r4, r0
 8023646:	b2c9      	uxtb	r1, r1
 8023648:	10d0      	asrs	r0, r2, #3
 802364a:	00d2      	lsls	r2, r2, #3
 802364c:	fb11 f103 	smulbb	r1, r1, r3
 8023650:	b2d2      	uxtb	r2, r2
 8023652:	f007 07fc 	and.w	r7, r7, #252	; 0xfc
 8023656:	fb02 1204 	mla	r2, r2, r4, r1
 802365a:	fb17 f703 	smulbb	r7, r7, r3
 802365e:	b2ad      	uxth	r5, r5
 8023660:	b292      	uxth	r2, r2
 8023662:	f000 00fc 	and.w	r0, r0, #252	; 0xfc
 8023666:	fb00 7004 	mla	r0, r0, r4, r7
 802366a:	1c6b      	adds	r3, r5, #1
 802366c:	1c57      	adds	r7, r2, #1
 802366e:	eb03 2515 	add.w	r5, r3, r5, lsr #8
 8023672:	eb07 2712 	add.w	r7, r7, r2, lsr #8
 8023676:	b280      	uxth	r0, r0
 8023678:	f3c7 27c4 	ubfx	r7, r7, #11, #5
 802367c:	f405 4578 	and.w	r5, r5, #63488	; 0xf800
 8023680:	433d      	orrs	r5, r7
 8023682:	1c47      	adds	r7, r0, #1
 8023684:	eb07 2710 	add.w	r7, r7, r0, lsr #8
 8023688:	097f      	lsrs	r7, r7, #5
 802368a:	f407 67fc 	and.w	r7, r7, #2016	; 0x7e0
 802368e:	433d      	orrs	r5, r7
 8023690:	f8ae 5000 	strh.w	r5, [lr]
 8023694:	9b21      	ldr	r3, [sp, #132]	; 0x84
 8023696:	9a23      	ldr	r2, [sp, #140]	; 0x8c
 8023698:	4413      	add	r3, r2
 802369a:	9321      	str	r3, [sp, #132]	; 0x84
 802369c:	9a22      	ldr	r2, [sp, #136]	; 0x88
 802369e:	9b24      	ldr	r3, [sp, #144]	; 0x90
 80236a0:	441a      	add	r2, r3
 80236a2:	9b13      	ldr	r3, [sp, #76]	; 0x4c
 80236a4:	9222      	str	r2, [sp, #136]	; 0x88
 80236a6:	3b01      	subs	r3, #1
 80236a8:	f10e 0e02 	add.w	lr, lr, #2
 80236ac:	9313      	str	r3, [sp, #76]	; 0x4c
 80236ae:	e61c      	b.n	80232ea <_ZN8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x3e2>
 80236b0:	fb08 f000 	mul.w	r0, r8, r0
 80236b4:	fb09 0303 	mla	r3, r9, r3, r0
 80236b8:	e6dc      	b.n	8023474 <_ZN8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x56c>
 80236ba:	46b9      	mov	r9, r7
 80236bc:	e704      	b.n	80234c8 <_ZN8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x5c0>
 80236be:	f1c2 0110 	rsb	r1, r2, #16
 80236c2:	437a      	muls	r2, r7
 80236c4:	fb09 2901 	mla	r9, r9, r1, r2
 80236c8:	ea4f 0949 	mov.w	r9, r9, lsl #1
 80236cc:	ea4f 5059 	mov.w	r0, r9, lsr #21
 80236d0:	ea4f 1259 	mov.w	r2, r9, lsr #5
 80236d4:	f400 60fc 	and.w	r0, r0, #2016	; 0x7e0
 80236d8:	f422 62fc 	bic.w	r2, r2, #2016	; 0x7e0
 80236dc:	4302      	orrs	r2, r0
 80236de:	e795      	b.n	802360c <_ZN8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x704>
 80236e0:	f8ae 2000 	strh.w	r2, [lr]
 80236e4:	e7d6      	b.n	8023694 <_ZN8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x78c>
 80236e6:	b017      	add	sp, #92	; 0x5c
 80236e8:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}

080236ec <_ZNK8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhPKtssiihh>:
 80236ec:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 80236f0:	b085      	sub	sp, #20
 80236f2:	e9dd 7010 	ldrd	r7, r0, [sp, #64]	; 0x40
 80236f6:	f9bd 6038 	ldrsh.w	r6, [sp, #56]	; 0x38
 80236fa:	9103      	str	r1, [sp, #12]
 80236fc:	fb00 7406 	mla	r4, r0, r6, r7
 8023700:	eb03 0544 	add.w	r5, r3, r4, lsl #1
 8023704:	2800      	cmp	r0, #0
 8023706:	f9bd b03c 	ldrsh.w	fp, [sp, #60]	; 0x3c
 802370a:	f89d 1048 	ldrb.w	r1, [sp, #72]	; 0x48
 802370e:	f89d e04c 	ldrb.w	lr, [sp, #76]	; 0x4c
 8023712:	9501      	str	r5, [sp, #4]
 8023714:	eb02 0904 	add.w	r9, r2, r4
 8023718:	f2c0 8141 	blt.w	802399e <_ZNK8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhPKtssiihh+0x2b2>
 802371c:	4583      	cmp	fp, r0
 802371e:	f340 813e 	ble.w	802399e <_ZNK8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhPKtssiihh+0x2b2>
 8023722:	2f00      	cmp	r7, #0
 8023724:	f2c0 8137 	blt.w	8023996 <_ZNK8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhPKtssiihh+0x2aa>
 8023728:	42be      	cmp	r6, r7
 802372a:	f340 8134 	ble.w	8023996 <_ZNK8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhPKtssiihh+0x2aa>
 802372e:	f812 c004 	ldrb.w	ip, [r2, r4]
 8023732:	f833 3014 	ldrh.w	r3, [r3, r4, lsl #1]
 8023736:	ea4f 02ec 	mov.w	r2, ip, asr #3
 802373a:	f423 65fc 	bic.w	r5, r3, #2016	; 0x7e0
 802373e:	4355      	muls	r5, r2
 8023740:	f403 63fc 	and.w	r3, r3, #2016	; 0x7e0
 8023744:	f64f 041f 	movw	r4, #63519	; 0xf81f
 8023748:	fb0c f203 	mul.w	r2, ip, r3
 802374c:	ea04 1355 	and.w	r3, r4, r5, lsr #5
 8023750:	f605 0501 	addw	r5, r5, #2049	; 0x801
 8023754:	441d      	add	r5, r3
 8023756:	f102 0320 	add.w	r3, r2, #32
 802375a:	eb03 2312 	add.w	r3, r3, r2, lsr #8
 802375e:	0a1b      	lsrs	r3, r3, #8
 8023760:	ea04 1455 	and.w	r4, r4, r5, lsr #5
 8023764:	f403 63fc 	and.w	r3, r3, #2016	; 0x7e0
 8023768:	431c      	orrs	r4, r3
 802376a:	1c7b      	adds	r3, r7, #1
 802376c:	f100 811c 	bmi.w	80239a8 <_ZNK8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhPKtssiihh+0x2bc>
 8023770:	429e      	cmp	r6, r3
 8023772:	f340 8119 	ble.w	80239a8 <_ZNK8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhPKtssiihh+0x2bc>
 8023776:	2900      	cmp	r1, #0
 8023778:	f000 8119 	beq.w	80239ae <_ZNK8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhPKtssiihh+0x2c2>
 802377c:	9a01      	ldr	r2, [sp, #4]
 802377e:	f899 3001 	ldrb.w	r3, [r9, #1]
 8023782:	8855      	ldrh	r5, [r2, #2]
 8023784:	ea4f 08e3 	mov.w	r8, r3, asr #3
 8023788:	f425 62fc 	bic.w	r2, r5, #2016	; 0x7e0
 802378c:	fb08 f802 	mul.w	r8, r8, r2
 8023790:	f405 65fc 	and.w	r5, r5, #2016	; 0x7e0
 8023794:	f64f 021f 	movw	r2, #63519	; 0xf81f
 8023798:	ea02 1a58 	and.w	sl, r2, r8, lsr #5
 802379c:	435d      	muls	r5, r3
 802379e:	f608 0801 	addw	r8, r8, #2049	; 0x801
 80237a2:	44d0      	add	r8, sl
 80237a4:	f105 0a20 	add.w	sl, r5, #32
 80237a8:	eb0a 2515 	add.w	r5, sl, r5, lsr #8
 80237ac:	0a2d      	lsrs	r5, r5, #8
 80237ae:	ea02 1258 	and.w	r2, r2, r8, lsr #5
 80237b2:	f405 65fc 	and.w	r5, r5, #2016	; 0x7e0
 80237b6:	432a      	orrs	r2, r5
 80237b8:	3001      	adds	r0, #1
 80237ba:	f100 80fe 	bmi.w	80239ba <_ZNK8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhPKtssiihh+0x2ce>
 80237be:	4583      	cmp	fp, r0
 80237c0:	f340 80fb 	ble.w	80239ba <_ZNK8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhPKtssiihh+0x2ce>
 80237c4:	f1be 0f00 	cmp.w	lr, #0
 80237c8:	f000 80fc 	beq.w	80239c4 <_ZNK8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhPKtssiihh+0x2d8>
 80237cc:	2f00      	cmp	r7, #0
 80237ce:	f2c0 80f1 	blt.w	80239b4 <_ZNK8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhPKtssiihh+0x2c8>
 80237d2:	42be      	cmp	r6, r7
 80237d4:	f340 80ee 	ble.w	80239b4 <_ZNK8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhPKtssiihh+0x2c8>
 80237d8:	9801      	ldr	r0, [sp, #4]
 80237da:	f819 5006 	ldrb.w	r5, [r9, r6]
 80237de:	f830 8016 	ldrh.w	r8, [r0, r6, lsl #1]
 80237e2:	ea4f 0ae5 	mov.w	sl, r5, asr #3
 80237e6:	f428 60fc 	bic.w	r0, r8, #2016	; 0x7e0
 80237ea:	fb0a fa00 	mul.w	sl, sl, r0
 80237ee:	f64f 0b1f 	movw	fp, #63519	; 0xf81f
 80237f2:	f408 68fc 	and.w	r8, r8, #2016	; 0x7e0
 80237f6:	ea0b 105a 	and.w	r0, fp, sl, lsr #5
 80237fa:	fb05 f808 	mul.w	r8, r5, r8
 80237fe:	f60a 0a01 	addw	sl, sl, #2049	; 0x801
 8023802:	4482      	add	sl, r0
 8023804:	f108 0020 	add.w	r0, r8, #32
 8023808:	eb00 2018 	add.w	r0, r0, r8, lsr #8
 802380c:	0a00      	lsrs	r0, r0, #8
 802380e:	ea0b 1b5a 	and.w	fp, fp, sl, lsr #5
 8023812:	f400 60fc 	and.w	r0, r0, #2016	; 0x7e0
 8023816:	ea4b 0b00 	orr.w	fp, fp, r0
 802381a:	3701      	adds	r7, #1
 802381c:	f100 80d7 	bmi.w	80239ce <_ZNK8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhPKtssiihh+0x2e2>
 8023820:	42be      	cmp	r6, r7
 8023822:	f340 80d4 	ble.w	80239ce <_ZNK8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhPKtssiihh+0x2e2>
 8023826:	2900      	cmp	r1, #0
 8023828:	f000 80d4 	beq.w	80239d4 <_ZNK8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhPKtssiihh+0x2e8>
 802382c:	3601      	adds	r6, #1
 802382e:	9801      	ldr	r0, [sp, #4]
 8023830:	f819 7006 	ldrb.w	r7, [r9, r6]
 8023834:	f830 0016 	ldrh.w	r0, [r0, r6, lsl #1]
 8023838:	ea4f 09e7 	mov.w	r9, r7, asr #3
 802383c:	f420 66fc 	bic.w	r6, r0, #2016	; 0x7e0
 8023840:	f400 60fc 	and.w	r0, r0, #2016	; 0x7e0
 8023844:	fb09 f906 	mul.w	r9, r9, r6
 8023848:	fb07 f800 	mul.w	r8, r7, r0
 802384c:	f64f 001f 	movw	r0, #63519	; 0xf81f
 8023850:	ea00 1a59 	and.w	sl, r0, r9, lsr #5
 8023854:	f609 0901 	addw	r9, r9, #2049	; 0x801
 8023858:	44d1      	add	r9, sl
 802385a:	ea00 1659 	and.w	r6, r0, r9, lsr #5
 802385e:	f108 0020 	add.w	r0, r8, #32
 8023862:	eb00 2018 	add.w	r0, r0, r8, lsr #8
 8023866:	0a00      	lsrs	r0, r0, #8
 8023868:	f400 60fc 	and.w	r0, r0, #2016	; 0x7e0
 802386c:	4330      	orrs	r0, r6
 802386e:	b28e      	uxth	r6, r1
 8023870:	fa1f f98e 	uxth.w	r9, lr
 8023874:	fb06 f809 	mul.w	r8, r6, r9
 8023878:	ea4f 4a04 	mov.w	sl, r4, lsl #16
 802387c:	ebc8 1909 	rsb	r9, r8, r9, lsl #4
 8023880:	0136      	lsls	r6, r6, #4
 8023882:	f00a 6afc 	and.w	sl, sl, #132120576	; 0x7e00000
 8023886:	f424 64fc 	bic.w	r4, r4, #2016	; 0x7e0
 802388a:	9601      	str	r6, [sp, #4]
 802388c:	ea4a 0404 	orr.w	r4, sl, r4
 8023890:	fa1f f689 	uxth.w	r6, r9
 8023894:	ea4f 4a02 	mov.w	sl, r2, lsl #16
 8023898:	fb11 f90e 	smulbb	r9, r1, lr
 802389c:	f3c9 09c7 	ubfx	r9, r9, #3, #8
 80238a0:	9602      	str	r6, [sp, #8]
 80238a2:	f00a 6afc 	and.w	sl, sl, #132120576	; 0x7e00000
 80238a6:	4626      	mov	r6, r4
 80238a8:	f422 62fc 	bic.w	r2, r2, #2016	; 0x7e0
 80238ac:	f1ce 0410 	rsb	r4, lr, #16
 80238b0:	1a64      	subs	r4, r4, r1
 80238b2:	ea4a 0202 	orr.w	r2, sl, r2
 80238b6:	ebc9 0141 	rsb	r1, r9, r1, lsl #1
 80238ba:	ea4f 4a00 	mov.w	sl, r0, lsl #16
 80238be:	434a      	muls	r2, r1
 80238c0:	eb09 0444 	add.w	r4, r9, r4, lsl #1
 80238c4:	f00a 6afc 	and.w	sl, sl, #132120576	; 0x7e00000
 80238c8:	f420 60fc 	bic.w	r0, r0, #2016	; 0x7e0
 80238cc:	fb04 2406 	mla	r4, r4, r6, r2
 80238d0:	ea4a 0000 	orr.w	r0, sl, r0
 80238d4:	fb09 4200 	mla	r2, r9, r0, r4
 80238d8:	ea4f 440b 	mov.w	r4, fp, lsl #16
 80238dc:	f004 64fc 	and.w	r4, r4, #132120576	; 0x7e00000
 80238e0:	9801      	ldr	r0, [sp, #4]
 80238e2:	9903      	ldr	r1, [sp, #12]
 80238e4:	f42b 6bfc 	bic.w	fp, fp, #2016	; 0x7e0
 80238e8:	ea44 0b0b 	orr.w	fp, r4, fp
 80238ec:	9c02      	ldr	r4, [sp, #8]
 80238ee:	8809      	ldrh	r1, [r1, #0]
 80238f0:	f5c0 7080 	rsb	r0, r0, #256	; 0x100
 80238f4:	1b00      	subs	r0, r0, r4
 80238f6:	9c01      	ldr	r4, [sp, #4]
 80238f8:	eba4 0608 	sub.w	r6, r4, r8
 80238fc:	b2b6      	uxth	r6, r6
 80238fe:	b280      	uxth	r0, r0
 8023900:	4373      	muls	r3, r6
 8023902:	fb0c 3300 	mla	r3, ip, r0, r3
 8023906:	9802      	ldr	r0, [sp, #8]
 8023908:	ebc9 0e4e 	rsb	lr, r9, lr, lsl #1
 802390c:	fb00 3505 	mla	r5, r0, r5, r3
 8023910:	fb0e 2e0b 	mla	lr, lr, fp, r2
 8023914:	fb08 5707 	mla	r7, r8, r7, r5
 8023918:	ea4f 525e 	mov.w	r2, lr, lsr #21
 802391c:	120b      	asrs	r3, r1, #8
 802391e:	ea4f 1e5e 	mov.w	lr, lr, lsr #5
 8023922:	ea6f 2727 	mvn.w	r7, r7, asr #8
 8023926:	b2ff      	uxtb	r7, r7
 8023928:	f402 62fc 	and.w	r2, r2, #2016	; 0x7e0
 802392c:	10c8      	asrs	r0, r1, #3
 802392e:	f42e 6efc 	bic.w	lr, lr, #2016	; 0x7e0
 8023932:	f003 03f8 	and.w	r3, r3, #248	; 0xf8
 8023936:	00c9      	lsls	r1, r1, #3
 8023938:	437b      	muls	r3, r7
 802393a:	ea42 0e0e 	orr.w	lr, r2, lr
 802393e:	b2c9      	uxtb	r1, r1
 8023940:	f000 00fc 	and.w	r0, r0, #252	; 0xfc
 8023944:	fa1f f28e 	uxth.w	r2, lr
 8023948:	4378      	muls	r0, r7
 802394a:	434f      	muls	r7, r1
 802394c:	1c59      	adds	r1, r3, #1
 802394e:	eb01 2113 	add.w	r1, r1, r3, lsr #8
 8023952:	1213      	asrs	r3, r2, #8
 8023954:	f023 0307 	bic.w	r3, r3, #7
 8023958:	eb03 2311 	add.w	r3, r3, r1, lsr #8
 802395c:	1c41      	adds	r1, r0, #1
 802395e:	eb01 2010 	add.w	r0, r1, r0, lsr #8
 8023962:	10d1      	asrs	r1, r2, #3
 8023964:	f021 0103 	bic.w	r1, r1, #3
 8023968:	eb01 2110 	add.w	r1, r1, r0, lsr #8
 802396c:	021b      	lsls	r3, r3, #8
 802396e:	00c9      	lsls	r1, r1, #3
 8023970:	f401 61fc 	and.w	r1, r1, #2016	; 0x7e0
 8023974:	f403 4378 	and.w	r3, r3, #63488	; 0xf800
 8023978:	430b      	orrs	r3, r1
 802397a:	1c79      	adds	r1, r7, #1
 802397c:	eb01 2717 	add.w	r7, r1, r7, lsr #8
 8023980:	00d2      	lsls	r2, r2, #3
 8023982:	eb02 2217 	add.w	r2, r2, r7, lsr #8
 8023986:	f3c2 02c4 	ubfx	r2, r2, #3, #5
 802398a:	431a      	orrs	r2, r3
 802398c:	9b03      	ldr	r3, [sp, #12]
 802398e:	801a      	strh	r2, [r3, #0]
 8023990:	b005      	add	sp, #20
 8023992:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
 8023996:	f04f 0c00 	mov.w	ip, #0
 802399a:	4664      	mov	r4, ip
 802399c:	e6e5      	b.n	802376a <_ZNK8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhPKtssiihh+0x7e>
 802399e:	2300      	movs	r3, #0
 80239a0:	469c      	mov	ip, r3
 80239a2:	461a      	mov	r2, r3
 80239a4:	461c      	mov	r4, r3
 80239a6:	e707      	b.n	80237b8 <_ZNK8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhPKtssiihh+0xcc>
 80239a8:	2300      	movs	r3, #0
 80239aa:	461a      	mov	r2, r3
 80239ac:	e704      	b.n	80237b8 <_ZNK8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhPKtssiihh+0xcc>
 80239ae:	460b      	mov	r3, r1
 80239b0:	460a      	mov	r2, r1
 80239b2:	e701      	b.n	80237b8 <_ZNK8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhPKtssiihh+0xcc>
 80239b4:	2500      	movs	r5, #0
 80239b6:	46ab      	mov	fp, r5
 80239b8:	e72f      	b.n	802381a <_ZNK8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhPKtssiihh+0x12e>
 80239ba:	2700      	movs	r7, #0
 80239bc:	463d      	mov	r5, r7
 80239be:	4638      	mov	r0, r7
 80239c0:	46bb      	mov	fp, r7
 80239c2:	e754      	b.n	802386e <_ZNK8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhPKtssiihh+0x182>
 80239c4:	4677      	mov	r7, lr
 80239c6:	4675      	mov	r5, lr
 80239c8:	4670      	mov	r0, lr
 80239ca:	46f3      	mov	fp, lr
 80239cc:	e74f      	b.n	802386e <_ZNK8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhPKtssiihh+0x182>
 80239ce:	2700      	movs	r7, #0
 80239d0:	4638      	mov	r0, r7
 80239d2:	e74c      	b.n	802386e <_ZNK8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhPKtssiihh+0x182>
 80239d4:	460f      	mov	r7, r1
 80239d6:	4608      	mov	r0, r1
 80239d8:	e749      	b.n	802386e <_ZNK8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhPKtssiihh+0x182>
	...

080239dc <_ZN8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff>:
 80239dc:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 80239e0:	b093      	sub	sp, #76	; 0x4c
 80239e2:	9210      	str	r2, [sp, #64]	; 0x40
 80239e4:	9a21      	ldr	r2, [sp, #132]	; 0x84
 80239e6:	910e      	str	r1, [sp, #56]	; 0x38
 80239e8:	9306      	str	r3, [sp, #24]
 80239ea:	e9dd 1322 	ldrd	r1, r3, [sp, #136]	; 0x88
 80239ee:	9011      	str	r0, [sp, #68]	; 0x44
 80239f0:	6850      	ldr	r0, [r2, #4]
 80239f2:	6812      	ldr	r2, [r2, #0]
 80239f4:	fb00 1303 	mla	r3, r0, r3, r1
 80239f8:	eb02 0343 	add.w	r3, r2, r3, lsl #1
 80239fc:	9307      	str	r3, [sp, #28]
 80239fe:	9b24      	ldr	r3, [sp, #144]	; 0x90
 8023a00:	681b      	ldr	r3, [r3, #0]
 8023a02:	9308      	str	r3, [sp, #32]
 8023a04:	9b24      	ldr	r3, [sp, #144]	; 0x90
 8023a06:	685b      	ldr	r3, [r3, #4]
 8023a08:	9309      	str	r3, [sp, #36]	; 0x24
 8023a0a:	9b0e      	ldr	r3, [sp, #56]	; 0x38
 8023a0c:	2b00      	cmp	r3, #0
 8023a0e:	dc03      	bgt.n	8023a18 <_ZN8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x3c>
 8023a10:	9b10      	ldr	r3, [sp, #64]	; 0x40
 8023a12:	2b00      	cmp	r3, #0
 8023a14:	f340 83b4 	ble.w	8024180 <_ZN8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x7a4>
 8023a18:	9b24      	ldr	r3, [sp, #144]	; 0x90
 8023a1a:	f9b3 1008 	ldrsh.w	r1, [r3, #8]
 8023a1e:	f9b3 200c 	ldrsh.w	r2, [r3, #12]
 8023a22:	1e48      	subs	r0, r1, #1
 8023a24:	1e55      	subs	r5, r2, #1
 8023a26:	9b06      	ldr	r3, [sp, #24]
 8023a28:	2b00      	cmp	r3, #0
 8023a2a:	f340 8163 	ble.w	8023cf4 <_ZN8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x318>
 8023a2e:	9e1d      	ldr	r6, [sp, #116]	; 0x74
 8023a30:	9b1e      	ldr	r3, [sp, #120]	; 0x78
 8023a32:	1436      	asrs	r6, r6, #16
 8023a34:	ea4f 4323 	mov.w	r3, r3, asr #16
 8023a38:	d406      	bmi.n	8023a48 <_ZN8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x6c>
 8023a3a:	4286      	cmp	r6, r0
 8023a3c:	da04      	bge.n	8023a48 <_ZN8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x6c>
 8023a3e:	2b00      	cmp	r3, #0
 8023a40:	db02      	blt.n	8023a48 <_ZN8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x6c>
 8023a42:	42ab      	cmp	r3, r5
 8023a44:	f2c0 8157 	blt.w	8023cf6 <_ZN8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x31a>
 8023a48:	3601      	adds	r6, #1
 8023a4a:	f100 8144 	bmi.w	8023cd6 <_ZN8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x2fa>
 8023a4e:	42b1      	cmp	r1, r6
 8023a50:	f2c0 8141 	blt.w	8023cd6 <_ZN8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x2fa>
 8023a54:	3301      	adds	r3, #1
 8023a56:	f100 813e 	bmi.w	8023cd6 <_ZN8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x2fa>
 8023a5a:	429a      	cmp	r2, r3
 8023a5c:	f2c0 813b 	blt.w	8023cd6 <_ZN8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x2fa>
 8023a60:	9b06      	ldr	r3, [sp, #24]
 8023a62:	9f07      	ldr	r7, [sp, #28]
 8023a64:	930f      	str	r3, [sp, #60]	; 0x3c
 8023a66:	f64f 061f 	movw	r6, #63519	; 0xf81f
 8023a6a:	9b0f      	ldr	r3, [sp, #60]	; 0x3c
 8023a6c:	2b00      	cmp	r3, #0
 8023a6e:	f340 8164 	ble.w	8023d3a <_ZN8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x35e>
 8023a72:	9b1e      	ldr	r3, [sp, #120]	; 0x78
 8023a74:	9d1d      	ldr	r5, [sp, #116]	; 0x74
 8023a76:	1418      	asrs	r0, r3, #16
 8023a78:	9b1d      	ldr	r3, [sp, #116]	; 0x74
 8023a7a:	f3c3 3103 	ubfx	r1, r3, #12, #4
 8023a7e:	9b1e      	ldr	r3, [sp, #120]	; 0x78
 8023a80:	f3c3 3c03 	ubfx	ip, r3, #12, #4
 8023a84:	9b24      	ldr	r3, [sp, #144]	; 0x90
 8023a86:	142d      	asrs	r5, r5, #16
 8023a88:	e9d3 2302 	ldrd	r2, r3, [r3, #8]
 8023a8c:	f100 81ee 	bmi.w	8023e6c <_ZN8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x490>
 8023a90:	f102 3eff 	add.w	lr, r2, #4294967295
 8023a94:	4575      	cmp	r5, lr
 8023a96:	f280 81e9 	bge.w	8023e6c <_ZN8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x490>
 8023a9a:	2800      	cmp	r0, #0
 8023a9c:	f2c0 81e6 	blt.w	8023e6c <_ZN8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x490>
 8023aa0:	f103 3eff 	add.w	lr, r3, #4294967295
 8023aa4:	4570      	cmp	r0, lr
 8023aa6:	f280 81e1 	bge.w	8023e6c <_ZN8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x490>
 8023aaa:	9b09      	ldr	r3, [sp, #36]	; 0x24
 8023aac:	b212      	sxth	r2, r2
 8023aae:	fb00 5002 	mla	r0, r0, r2, r5
 8023ab2:	fa1f fe81 	uxth.w	lr, r1
 8023ab6:	eb03 0a00 	add.w	sl, r3, r0
 8023aba:	ea4f 150e 	mov.w	r5, lr, lsl #4
 8023abe:	f813 9000 	ldrb.w	r9, [r3, r0]
 8023ac2:	f89a 8001 	ldrb.w	r8, [sl, #1]
 8023ac6:	f5c5 7380 	rsb	r3, r5, #256	; 0x100
 8023aca:	b29b      	uxth	r3, r3
 8023acc:	f1bc 0f00 	cmp.w	ip, #0
 8023ad0:	f000 8179 	beq.w	8023dc6 <_ZN8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x3ea>
 8023ad4:	f81a 4002 	ldrb.w	r4, [sl, r2]
 8023ad8:	940a      	str	r4, [sp, #40]	; 0x28
 8023ada:	eb0a 0b02 	add.w	fp, sl, r2
 8023ade:	fa1f fa8c 	uxth.w	sl, ip
 8023ae2:	fb0a fe0e 	mul.w	lr, sl, lr
 8023ae6:	ebce 1a0a 	rsb	sl, lr, sl, lsl #4
 8023aea:	fa1f fa8a 	uxth.w	sl, sl
 8023aee:	eba5 050e 	sub.w	r5, r5, lr
 8023af2:	f89b 4001 	ldrb.w	r4, [fp, #1]
 8023af6:	940b      	str	r4, [sp, #44]	; 0x2c
 8023af8:	eba3 030a 	sub.w	r3, r3, sl
 8023afc:	b2ad      	uxth	r5, r5
 8023afe:	9c0a      	ldr	r4, [sp, #40]	; 0x28
 8023b00:	b29b      	uxth	r3, r3
 8023b02:	fb08 f505 	mul.w	r5, r8, r5
 8023b06:	fb09 5303 	mla	r3, r9, r3, r5
 8023b0a:	fb0a 3304 	mla	r3, sl, r4, r3
 8023b0e:	9c0b      	ldr	r4, [sp, #44]	; 0x2c
 8023b10:	fb0e 3304 	mla	r3, lr, r4, r3
 8023b14:	f3c3 2307 	ubfx	r3, r3, #8, #8
 8023b18:	2b00      	cmp	r3, #0
 8023b1a:	f000 80cf 	beq.w	8023cbc <_ZN8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x2e0>
 8023b1e:	9c08      	ldr	r4, [sp, #32]
 8023b20:	f1b9 0fff 	cmp.w	r9, #255	; 0xff
 8023b24:	eb04 0540 	add.w	r5, r4, r0, lsl #1
 8023b28:	f834 0010 	ldrh.w	r0, [r4, r0, lsl #1]
 8023b2c:	f000 8150 	beq.w	8023dd0 <_ZN8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x3f4>
 8023b30:	f420 6efc 	bic.w	lr, r0, #2016	; 0x7e0
 8023b34:	ea4f 0ae9 	mov.w	sl, r9, asr #3
 8023b38:	f400 60fc 	and.w	r0, r0, #2016	; 0x7e0
 8023b3c:	fb09 f000 	mul.w	r0, r9, r0
 8023b40:	fb0a fe0e 	mul.w	lr, sl, lr
 8023b44:	ea06 195e 	and.w	r9, r6, lr, lsr #5
 8023b48:	f100 0b20 	add.w	fp, r0, #32
 8023b4c:	f60e 0e01 	addw	lr, lr, #2049	; 0x801
 8023b50:	44ce      	add	lr, r9
 8023b52:	eb0b 2910 	add.w	r9, fp, r0, lsr #8
 8023b56:	ea4f 2919 	mov.w	r9, r9, lsr #8
 8023b5a:	ea06 1e5e 	and.w	lr, r6, lr, lsr #5
 8023b5e:	f409 69fc 	and.w	r9, r9, #2016	; 0x7e0
 8023b62:	ea4e 0909 	orr.w	r9, lr, r9
 8023b66:	f1b8 0fff 	cmp.w	r8, #255	; 0xff
 8023b6a:	8868      	ldrh	r0, [r5, #2]
 8023b6c:	d019      	beq.n	8023ba2 <_ZN8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x1c6>
 8023b6e:	f420 6efc 	bic.w	lr, r0, #2016	; 0x7e0
 8023b72:	ea4f 0ae8 	mov.w	sl, r8, asr #3
 8023b76:	f400 60fc 	and.w	r0, r0, #2016	; 0x7e0
 8023b7a:	fb08 f800 	mul.w	r8, r8, r0
 8023b7e:	fb0a fe0e 	mul.w	lr, sl, lr
 8023b82:	ea06 105e 	and.w	r0, r6, lr, lsr #5
 8023b86:	f108 0b20 	add.w	fp, r8, #32
 8023b8a:	f60e 0e01 	addw	lr, lr, #2049	; 0x801
 8023b8e:	4486      	add	lr, r0
 8023b90:	eb0b 2018 	add.w	r0, fp, r8, lsr #8
 8023b94:	0a00      	lsrs	r0, r0, #8
 8023b96:	ea06 1e5e 	and.w	lr, r6, lr, lsr #5
 8023b9a:	f400 60fc 	and.w	r0, r0, #2016	; 0x7e0
 8023b9e:	ea4e 0000 	orr.w	r0, lr, r0
 8023ba2:	ea4f 4e09 	mov.w	lr, r9, lsl #16
 8023ba6:	ea4f 4a00 	mov.w	sl, r0, lsl #16
 8023baa:	f00e 6efc 	and.w	lr, lr, #132120576	; 0x7e00000
 8023bae:	f429 69fc 	bic.w	r9, r9, #2016	; 0x7e0
 8023bb2:	f00a 6afc 	and.w	sl, sl, #132120576	; 0x7e00000
 8023bb6:	f420 60fc 	bic.w	r0, r0, #2016	; 0x7e0
 8023bba:	ea4e 0909 	orr.w	r9, lr, r9
 8023bbe:	ea4a 0000 	orr.w	r0, sl, r0
 8023bc2:	f1bc 0f00 	cmp.w	ip, #0
 8023bc6:	f000 8105 	beq.w	8023dd4 <_ZN8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x3f8>
 8023bca:	f102 4200 	add.w	r2, r2, #2147483648	; 0x80000000
 8023bce:	3a01      	subs	r2, #1
 8023bd0:	0052      	lsls	r2, r2, #1
 8023bd2:	9c0a      	ldr	r4, [sp, #40]	; 0x28
 8023bd4:	3202      	adds	r2, #2
 8023bd6:	2cff      	cmp	r4, #255	; 0xff
 8023bd8:	eb05 0e02 	add.w	lr, r5, r2
 8023bdc:	5aaa      	ldrh	r2, [r5, r2]
 8023bde:	d018      	beq.n	8023c12 <_ZN8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x236>
 8023be0:	f422 65fc 	bic.w	r5, r2, #2016	; 0x7e0
 8023be4:	f402 62fc 	and.w	r2, r2, #2016	; 0x7e0
 8023be8:	fb04 fa02 	mul.w	sl, r4, r2
 8023bec:	ea4f 08e4 	mov.w	r8, r4, asr #3
 8023bf0:	fb08 f805 	mul.w	r8, r8, r5
 8023bf4:	f10a 0520 	add.w	r5, sl, #32
 8023bf8:	ea06 1258 	and.w	r2, r6, r8, lsr #5
 8023bfc:	eb05 251a 	add.w	r5, r5, sl, lsr #8
 8023c00:	f608 0801 	addw	r8, r8, #2049	; 0x801
 8023c04:	4442      	add	r2, r8
 8023c06:	0a2d      	lsrs	r5, r5, #8
 8023c08:	ea06 1252 	and.w	r2, r6, r2, lsr #5
 8023c0c:	f405 65fc 	and.w	r5, r5, #2016	; 0x7e0
 8023c10:	432a      	orrs	r2, r5
 8023c12:	9c0b      	ldr	r4, [sp, #44]	; 0x2c
 8023c14:	f8be 5002 	ldrh.w	r5, [lr, #2]
 8023c18:	2cff      	cmp	r4, #255	; 0xff
 8023c1a:	d01a      	beq.n	8023c52 <_ZN8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x276>
 8023c1c:	f425 6efc 	bic.w	lr, r5, #2016	; 0x7e0
 8023c20:	f405 65fc 	and.w	r5, r5, #2016	; 0x7e0
 8023c24:	fb04 fa05 	mul.w	sl, r4, r5
 8023c28:	ea4f 08e4 	mov.w	r8, r4, asr #3
 8023c2c:	fb08 f80e 	mul.w	r8, r8, lr
 8023c30:	f10a 0e20 	add.w	lr, sl, #32
 8023c34:	ea06 1558 	and.w	r5, r6, r8, lsr #5
 8023c38:	eb0e 2e1a 	add.w	lr, lr, sl, lsr #8
 8023c3c:	f608 0801 	addw	r8, r8, #2049	; 0x801
 8023c40:	4445      	add	r5, r8
 8023c42:	ea4f 2e1e 	mov.w	lr, lr, lsr #8
 8023c46:	ea06 1555 	and.w	r5, r6, r5, lsr #5
 8023c4a:	f40e 6efc 	and.w	lr, lr, #2016	; 0x7e0
 8023c4e:	ea45 050e 	orr.w	r5, r5, lr
 8023c52:	fb1c fe01 	smulbb	lr, ip, r1
 8023c56:	ea4f 0eee 	mov.w	lr, lr, asr #3
 8023c5a:	f1cc 0810 	rsb	r8, ip, #16
 8023c5e:	eba8 0801 	sub.w	r8, r8, r1
 8023c62:	ea4f 4a02 	mov.w	sl, r2, lsl #16
 8023c66:	ebce 0141 	rsb	r1, lr, r1, lsl #1
 8023c6a:	eb0e 0848 	add.w	r8, lr, r8, lsl #1
 8023c6e:	ea4f 4b05 	mov.w	fp, r5, lsl #16
 8023c72:	4341      	muls	r1, r0
 8023c74:	f00a 6afc 	and.w	sl, sl, #132120576	; 0x7e00000
 8023c78:	f422 62fc 	bic.w	r2, r2, #2016	; 0x7e0
 8023c7c:	ea4a 0202 	orr.w	r2, sl, r2
 8023c80:	ebce 0c4c 	rsb	ip, lr, ip, lsl #1
 8023c84:	fb09 1108 	mla	r1, r9, r8, r1
 8023c88:	f00b 6bfc 	and.w	fp, fp, #132120576	; 0x7e00000
 8023c8c:	f425 65fc 	bic.w	r5, r5, #2016	; 0x7e0
 8023c90:	fb0c 1102 	mla	r1, ip, r2, r1
 8023c94:	ea4b 0505 	orr.w	r5, fp, r5
 8023c98:	fb0e 1e05 	mla	lr, lr, r5, r1
 8023c9c:	ea4f 525e 	mov.w	r2, lr, lsr #21
 8023ca0:	ea4f 1e5e 	mov.w	lr, lr, lsr #5
 8023ca4:	f402 62fc 	and.w	r2, r2, #2016	; 0x7e0
 8023ca8:	f42e 6efc 	bic.w	lr, lr, #2016	; 0x7e0
 8023cac:	ea42 0e0e 	orr.w	lr, r2, lr
 8023cb0:	fa1f f28e 	uxth.w	r2, lr
 8023cb4:	2bff      	cmp	r3, #255	; 0xff
 8023cb6:	f040 80a1 	bne.w	8023dfc <_ZN8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x420>
 8023cba:	803a      	strh	r2, [r7, #0]
 8023cbc:	9b1d      	ldr	r3, [sp, #116]	; 0x74
 8023cbe:	9a1f      	ldr	r2, [sp, #124]	; 0x7c
 8023cc0:	4413      	add	r3, r2
 8023cc2:	931d      	str	r3, [sp, #116]	; 0x74
 8023cc4:	9a1e      	ldr	r2, [sp, #120]	; 0x78
 8023cc6:	9b20      	ldr	r3, [sp, #128]	; 0x80
 8023cc8:	441a      	add	r2, r3
 8023cca:	9b0f      	ldr	r3, [sp, #60]	; 0x3c
 8023ccc:	921e      	str	r2, [sp, #120]	; 0x78
 8023cce:	3b01      	subs	r3, #1
 8023cd0:	3702      	adds	r7, #2
 8023cd2:	930f      	str	r3, [sp, #60]	; 0x3c
 8023cd4:	e6c9      	b.n	8023a6a <_ZN8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x8e>
 8023cd6:	9b1d      	ldr	r3, [sp, #116]	; 0x74
 8023cd8:	9e1f      	ldr	r6, [sp, #124]	; 0x7c
 8023cda:	9c1e      	ldr	r4, [sp, #120]	; 0x78
 8023cdc:	4433      	add	r3, r6
 8023cde:	931d      	str	r3, [sp, #116]	; 0x74
 8023ce0:	9b20      	ldr	r3, [sp, #128]	; 0x80
 8023ce2:	441c      	add	r4, r3
 8023ce4:	9b06      	ldr	r3, [sp, #24]
 8023ce6:	941e      	str	r4, [sp, #120]	; 0x78
 8023ce8:	3b01      	subs	r3, #1
 8023cea:	9306      	str	r3, [sp, #24]
 8023cec:	9b07      	ldr	r3, [sp, #28]
 8023cee:	3302      	adds	r3, #2
 8023cf0:	9307      	str	r3, [sp, #28]
 8023cf2:	e698      	b.n	8023a26 <_ZN8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x4a>
 8023cf4:	d028      	beq.n	8023d48 <_ZN8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x36c>
 8023cf6:	9b06      	ldr	r3, [sp, #24]
 8023cf8:	981f      	ldr	r0, [sp, #124]	; 0x7c
 8023cfa:	9d1d      	ldr	r5, [sp, #116]	; 0x74
 8023cfc:	3b01      	subs	r3, #1
 8023cfe:	fb00 5003 	mla	r0, r0, r3, r5
 8023d02:	1400      	asrs	r0, r0, #16
 8023d04:	f53f aeac 	bmi.w	8023a60 <_ZN8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x84>
 8023d08:	3901      	subs	r1, #1
 8023d0a:	4288      	cmp	r0, r1
 8023d0c:	f6bf aea8 	bge.w	8023a60 <_ZN8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x84>
 8023d10:	9920      	ldr	r1, [sp, #128]	; 0x80
 8023d12:	981e      	ldr	r0, [sp, #120]	; 0x78
 8023d14:	fb01 0303 	mla	r3, r1, r3, r0
 8023d18:	141b      	asrs	r3, r3, #16
 8023d1a:	f53f aea1 	bmi.w	8023a60 <_ZN8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x84>
 8023d1e:	3a01      	subs	r2, #1
 8023d20:	4293      	cmp	r3, r2
 8023d22:	f6bf ae9d 	bge.w	8023a60 <_ZN8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x84>
 8023d26:	9b06      	ldr	r3, [sp, #24]
 8023d28:	f8dd e01c 	ldr.w	lr, [sp, #28]
 8023d2c:	930f      	str	r3, [sp, #60]	; 0x3c
 8023d2e:	f64f 061f 	movw	r6, #63519	; 0xf81f
 8023d32:	9b0f      	ldr	r3, [sp, #60]	; 0x3c
 8023d34:	2b00      	cmp	r3, #0
 8023d36:	f300 80b6 	bgt.w	8023ea6 <_ZN8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x4ca>
 8023d3a:	9b06      	ldr	r3, [sp, #24]
 8023d3c:	ea23 74e3 	bic.w	r4, r3, r3, asr #31
 8023d40:	9b07      	ldr	r3, [sp, #28]
 8023d42:	eb03 0344 	add.w	r3, r3, r4, lsl #1
 8023d46:	9307      	str	r3, [sp, #28]
 8023d48:	9b0e      	ldr	r3, [sp, #56]	; 0x38
 8023d4a:	2b00      	cmp	r3, #0
 8023d4c:	f340 8218 	ble.w	8024180 <_ZN8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x7a4>
 8023d50:	ee30 0a04 	vadd.f32	s0, s0, s8
 8023d54:	eeb7 7a00 	vmov.f32	s14, #112	; 0x3f800000  1.0
 8023d58:	eec7 7a00 	vdiv.f32	s15, s14, s0
 8023d5c:	9b1c      	ldr	r3, [sp, #112]	; 0x70
 8023d5e:	ee70 0aa4 	vadd.f32	s1, s1, s9
 8023d62:	ee31 1a05 	vadd.f32	s2, s2, s10
 8023d66:	ee20 7aa7 	vmul.f32	s14, s1, s15
 8023d6a:	eef0 6a62 	vmov.f32	s13, s5
 8023d6e:	ee61 7a27 	vmul.f32	s15, s2, s15
 8023d72:	eefe 6ac8 	vcvt.s32.f32	s13, s13, #16
 8023d76:	ee77 2a62 	vsub.f32	s5, s14, s5
 8023d7a:	edcd 6a1d 	vstr	s13, [sp, #116]	; 0x74
 8023d7e:	eefe 2ac8 	vcvt.s32.f32	s5, s5, #16
 8023d82:	eef0 6a43 	vmov.f32	s13, s6
 8023d86:	ee37 3ac3 	vsub.f32	s6, s15, s6
 8023d8a:	ee12 2a90 	vmov	r2, s5
 8023d8e:	eebe 3ac8 	vcvt.s32.f32	s6, s6, #16
 8023d92:	fb92 f3f3 	sdiv	r3, r2, r3
 8023d96:	ee13 2a10 	vmov	r2, s6
 8023d9a:	931f      	str	r3, [sp, #124]	; 0x7c
 8023d9c:	9b1c      	ldr	r3, [sp, #112]	; 0x70
 8023d9e:	fb92 f3f3 	sdiv	r3, r2, r3
 8023da2:	9320      	str	r3, [sp, #128]	; 0x80
 8023da4:	9b0e      	ldr	r3, [sp, #56]	; 0x38
 8023da6:	9a10      	ldr	r2, [sp, #64]	; 0x40
 8023da8:	3b01      	subs	r3, #1
 8023daa:	eefe 6ac8 	vcvt.s32.f32	s13, s13, #16
 8023dae:	930e      	str	r3, [sp, #56]	; 0x38
 8023db0:	9b1c      	ldr	r3, [sp, #112]	; 0x70
 8023db2:	edcd 6a1e 	vstr	s13, [sp, #120]	; 0x78
 8023db6:	bf08      	it	eq
 8023db8:	4613      	moveq	r3, r2
 8023dba:	9306      	str	r3, [sp, #24]
 8023dbc:	eeb0 3a67 	vmov.f32	s6, s15
 8023dc0:	eef0 2a47 	vmov.f32	s5, s14
 8023dc4:	e621      	b.n	8023a0a <_ZN8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x2e>
 8023dc6:	fb08 f505 	mul.w	r5, r8, r5
 8023dca:	fb09 5303 	mla	r3, r9, r3, r5
 8023dce:	e6a1      	b.n	8023b14 <_ZN8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x138>
 8023dd0:	4681      	mov	r9, r0
 8023dd2:	e6c8      	b.n	8023b66 <_ZN8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x18a>
 8023dd4:	f1c1 0210 	rsb	r2, r1, #16
 8023dd8:	4341      	muls	r1, r0
 8023dda:	fb09 1902 	mla	r9, r9, r2, r1
 8023dde:	ea4f 0949 	mov.w	r9, r9, lsl #1
 8023de2:	ea4f 5259 	mov.w	r2, r9, lsr #21
 8023de6:	ea4f 1959 	mov.w	r9, r9, lsr #5
 8023dea:	f402 62fc 	and.w	r2, r2, #2016	; 0x7e0
 8023dee:	f429 69fc 	bic.w	r9, r9, #2016	; 0x7e0
 8023df2:	ea42 0909 	orr.w	r9, r2, r9
 8023df6:	fa1f f289 	uxth.w	r2, r9
 8023dfa:	e75b      	b.n	8023cb4 <_ZN8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x2d8>
 8023dfc:	f8b7 c000 	ldrh.w	ip, [r7]
 8023e00:	43db      	mvns	r3, r3
 8023e02:	ea4f 202c 	mov.w	r0, ip, asr #8
 8023e06:	fa5f fe83 	uxtb.w	lr, r3
 8023e0a:	f000 00f8 	and.w	r0, r0, #248	; 0xf8
 8023e0e:	fb00 f00e 	mul.w	r0, r0, lr
 8023e12:	1c41      	adds	r1, r0, #1
 8023e14:	eb01 2010 	add.w	r0, r1, r0, lsr #8
 8023e18:	1211      	asrs	r1, r2, #8
 8023e1a:	ea4f 05ec 	mov.w	r5, ip, asr #3
 8023e1e:	f021 0107 	bic.w	r1, r1, #7
 8023e22:	eb01 2110 	add.w	r1, r1, r0, lsr #8
 8023e26:	f005 05fc 	and.w	r5, r5, #252	; 0xfc
 8023e2a:	48d7      	ldr	r0, [pc, #860]	; (8024188 <_ZN8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x7ac>)
 8023e2c:	fb05 f50e 	mul.w	r5, r5, lr
 8023e30:	b2c9      	uxtb	r1, r1
 8023e32:	ea00 2001 	and.w	r0, r0, r1, lsl #8
 8023e36:	1c69      	adds	r1, r5, #1
 8023e38:	eb01 2515 	add.w	r5, r1, r5, lsr #8
 8023e3c:	10d1      	asrs	r1, r2, #3
 8023e3e:	f021 0103 	bic.w	r1, r1, #3
 8023e42:	ea4f 03cc 	mov.w	r3, ip, lsl #3
 8023e46:	eb01 2115 	add.w	r1, r1, r5, lsr #8
 8023e4a:	b2db      	uxtb	r3, r3
 8023e4c:	00c9      	lsls	r1, r1, #3
 8023e4e:	fb03 f30e 	mul.w	r3, r3, lr
 8023e52:	f401 61fc 	and.w	r1, r1, #2016	; 0x7e0
 8023e56:	4301      	orrs	r1, r0
 8023e58:	1c58      	adds	r0, r3, #1
 8023e5a:	eb00 2313 	add.w	r3, r0, r3, lsr #8
 8023e5e:	00d2      	lsls	r2, r2, #3
 8023e60:	eb02 2213 	add.w	r2, r2, r3, lsr #8
 8023e64:	f3c2 02c4 	ubfx	r2, r2, #3, #5
 8023e68:	430a      	orrs	r2, r1
 8023e6a:	e726      	b.n	8023cba <_ZN8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x2de>
 8023e6c:	f115 0e01 	adds.w	lr, r5, #1
 8023e70:	f53f af24 	bmi.w	8023cbc <_ZN8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x2e0>
 8023e74:	4572      	cmp	r2, lr
 8023e76:	f6ff af21 	blt.w	8023cbc <_ZN8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x2e0>
 8023e7a:	f110 0e01 	adds.w	lr, r0, #1
 8023e7e:	f53f af1d 	bmi.w	8023cbc <_ZN8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x2e0>
 8023e82:	4573      	cmp	r3, lr
 8023e84:	f6ff af1a 	blt.w	8023cbc <_ZN8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x2e0>
 8023e88:	b21b      	sxth	r3, r3
 8023e8a:	b212      	sxth	r2, r2
 8023e8c:	e9cd 1c04 	strd	r1, ip, [sp, #16]
 8023e90:	e9cd 5002 	strd	r5, r0, [sp, #8]
 8023e94:	9301      	str	r3, [sp, #4]
 8023e96:	9200      	str	r2, [sp, #0]
 8023e98:	4639      	mov	r1, r7
 8023e9a:	e9dd 3208 	ldrd	r3, r2, [sp, #32]
 8023e9e:	9811      	ldr	r0, [sp, #68]	; 0x44
 8023ea0:	f7ff fc24 	bl	80236ec <_ZNK8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhPKtssiihh>
 8023ea4:	e70a      	b.n	8023cbc <_ZN8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x2e0>
 8023ea6:	9b1d      	ldr	r3, [sp, #116]	; 0x74
 8023ea8:	f3c3 3203 	ubfx	r2, r3, #12, #4
 8023eac:	9b1e      	ldr	r3, [sp, #120]	; 0x78
 8023eae:	f3c3 3503 	ubfx	r5, r3, #12, #4
 8023eb2:	9b24      	ldr	r3, [sp, #144]	; 0x90
 8023eb4:	f9b3 1008 	ldrsh.w	r1, [r3, #8]
 8023eb8:	9b1e      	ldr	r3, [sp, #120]	; 0x78
 8023eba:	141f      	asrs	r7, r3, #16
 8023ebc:	9b1d      	ldr	r3, [sp, #116]	; 0x74
 8023ebe:	141b      	asrs	r3, r3, #16
 8023ec0:	fb01 3707 	mla	r7, r1, r7, r3
 8023ec4:	9b09      	ldr	r3, [sp, #36]	; 0x24
 8023ec6:	fa1f fc82 	uxth.w	ip, r2
 8023eca:	eb03 0a07 	add.w	sl, r3, r7
 8023ece:	ea4f 100c 	mov.w	r0, ip, lsl #4
 8023ed2:	f813 9007 	ldrb.w	r9, [r3, r7]
 8023ed6:	f89a 8001 	ldrb.w	r8, [sl, #1]
 8023eda:	f5c0 7380 	rsb	r3, r0, #256	; 0x100
 8023ede:	b29b      	uxth	r3, r3
 8023ee0:	2d00      	cmp	r5, #0
 8023ee2:	f000 80fe 	beq.w	80240e2 <_ZN8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x706>
 8023ee6:	f81a 4001 	ldrb.w	r4, [sl, r1]
 8023eea:	940c      	str	r4, [sp, #48]	; 0x30
 8023eec:	eb0a 0b01 	add.w	fp, sl, r1
 8023ef0:	fa1f fa85 	uxth.w	sl, r5
 8023ef4:	fb0a fc0c 	mul.w	ip, sl, ip
 8023ef8:	ebcc 1a0a 	rsb	sl, ip, sl, lsl #4
 8023efc:	fa1f fa8a 	uxth.w	sl, sl
 8023f00:	eba0 000c 	sub.w	r0, r0, ip
 8023f04:	eba3 030a 	sub.w	r3, r3, sl
 8023f08:	b280      	uxth	r0, r0
 8023f0a:	fb08 f000 	mul.w	r0, r8, r0
 8023f0e:	b29b      	uxth	r3, r3
 8023f10:	fb09 0303 	mla	r3, r9, r3, r0
 8023f14:	980c      	ldr	r0, [sp, #48]	; 0x30
 8023f16:	f89b 4001 	ldrb.w	r4, [fp, #1]
 8023f1a:	940d      	str	r4, [sp, #52]	; 0x34
 8023f1c:	fb0a 3300 	mla	r3, sl, r0, r3
 8023f20:	fb0c 3304 	mla	r3, ip, r4, r3
 8023f24:	f3c3 2307 	ubfx	r3, r3, #8, #8
 8023f28:	2b00      	cmp	r3, #0
 8023f2a:	f000 80cc 	beq.w	80240c6 <_ZN8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x6ea>
 8023f2e:	9808      	ldr	r0, [sp, #32]
 8023f30:	9c08      	ldr	r4, [sp, #32]
 8023f32:	f1b9 0fff 	cmp.w	r9, #255	; 0xff
 8023f36:	eb00 0047 	add.w	r0, r0, r7, lsl #1
 8023f3a:	f834 7017 	ldrh.w	r7, [r4, r7, lsl #1]
 8023f3e:	f000 80d5 	beq.w	80240ec <_ZN8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x710>
 8023f42:	f427 6cfc 	bic.w	ip, r7, #2016	; 0x7e0
 8023f46:	ea4f 0ae9 	mov.w	sl, r9, asr #3
 8023f4a:	f407 67fc 	and.w	r7, r7, #2016	; 0x7e0
 8023f4e:	fb09 f707 	mul.w	r7, r9, r7
 8023f52:	fb0a fc0c 	mul.w	ip, sl, ip
 8023f56:	ea06 195c 	and.w	r9, r6, ip, lsr #5
 8023f5a:	f107 0b20 	add.w	fp, r7, #32
 8023f5e:	f60c 0c01 	addw	ip, ip, #2049	; 0x801
 8023f62:	44cc      	add	ip, r9
 8023f64:	eb0b 2917 	add.w	r9, fp, r7, lsr #8
 8023f68:	ea4f 2919 	mov.w	r9, r9, lsr #8
 8023f6c:	ea06 1c5c 	and.w	ip, r6, ip, lsr #5
 8023f70:	f409 69fc 	and.w	r9, r9, #2016	; 0x7e0
 8023f74:	ea4c 0909 	orr.w	r9, ip, r9
 8023f78:	f1b8 0fff 	cmp.w	r8, #255	; 0xff
 8023f7c:	8847      	ldrh	r7, [r0, #2]
 8023f7e:	d019      	beq.n	8023fb4 <_ZN8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x5d8>
 8023f80:	f427 6cfc 	bic.w	ip, r7, #2016	; 0x7e0
 8023f84:	ea4f 0ae8 	mov.w	sl, r8, asr #3
 8023f88:	f407 67fc 	and.w	r7, r7, #2016	; 0x7e0
 8023f8c:	fb08 f807 	mul.w	r8, r8, r7
 8023f90:	fb0a fc0c 	mul.w	ip, sl, ip
 8023f94:	ea06 175c 	and.w	r7, r6, ip, lsr #5
 8023f98:	f108 0b20 	add.w	fp, r8, #32
 8023f9c:	f60c 0c01 	addw	ip, ip, #2049	; 0x801
 8023fa0:	44bc      	add	ip, r7
 8023fa2:	eb0b 2718 	add.w	r7, fp, r8, lsr #8
 8023fa6:	0a3f      	lsrs	r7, r7, #8
 8023fa8:	ea06 1c5c 	and.w	ip, r6, ip, lsr #5
 8023fac:	f407 67fc 	and.w	r7, r7, #2016	; 0x7e0
 8023fb0:	ea4c 0707 	orr.w	r7, ip, r7
 8023fb4:	ea4f 4c09 	mov.w	ip, r9, lsl #16
 8023fb8:	ea4f 4a07 	mov.w	sl, r7, lsl #16
 8023fbc:	f00c 6cfc 	and.w	ip, ip, #132120576	; 0x7e00000
 8023fc0:	f429 69fc 	bic.w	r9, r9, #2016	; 0x7e0
 8023fc4:	f00a 6afc 	and.w	sl, sl, #132120576	; 0x7e00000
 8023fc8:	f427 67fc 	bic.w	r7, r7, #2016	; 0x7e0
 8023fcc:	ea4c 0909 	orr.w	r9, ip, r9
 8023fd0:	ea4a 0707 	orr.w	r7, sl, r7
 8023fd4:	2d00      	cmp	r5, #0
 8023fd6:	f000 808b 	beq.w	80240f0 <_ZN8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x714>
 8023fda:	f101 4100 	add.w	r1, r1, #2147483648	; 0x80000000
 8023fde:	3901      	subs	r1, #1
 8023fe0:	0049      	lsls	r1, r1, #1
 8023fe2:	3102      	adds	r1, #2
 8023fe4:	eb00 0c01 	add.w	ip, r0, r1
 8023fe8:	5a41      	ldrh	r1, [r0, r1]
 8023fea:	980c      	ldr	r0, [sp, #48]	; 0x30
 8023fec:	28ff      	cmp	r0, #255	; 0xff
 8023fee:	d019      	beq.n	8024024 <_ZN8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x648>
 8023ff0:	9c0c      	ldr	r4, [sp, #48]	; 0x30
 8023ff2:	f421 60fc 	bic.w	r0, r1, #2016	; 0x7e0
 8023ff6:	f401 61fc 	and.w	r1, r1, #2016	; 0x7e0
 8023ffa:	fb04 fa01 	mul.w	sl, r4, r1
 8023ffe:	ea4f 08e4 	mov.w	r8, r4, asr #3
 8024002:	fb08 f800 	mul.w	r8, r8, r0
 8024006:	f10a 0020 	add.w	r0, sl, #32
 802400a:	ea06 1158 	and.w	r1, r6, r8, lsr #5
 802400e:	eb00 201a 	add.w	r0, r0, sl, lsr #8
 8024012:	f608 0801 	addw	r8, r8, #2049	; 0x801
 8024016:	4441      	add	r1, r8
 8024018:	0a00      	lsrs	r0, r0, #8
 802401a:	ea06 1151 	and.w	r1, r6, r1, lsr #5
 802401e:	f400 60fc 	and.w	r0, r0, #2016	; 0x7e0
 8024022:	4301      	orrs	r1, r0
 8024024:	9c0d      	ldr	r4, [sp, #52]	; 0x34
 8024026:	f8bc 0002 	ldrh.w	r0, [ip, #2]
 802402a:	2cff      	cmp	r4, #255	; 0xff
 802402c:	d01a      	beq.n	8024064 <_ZN8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x688>
 802402e:	f420 6cfc 	bic.w	ip, r0, #2016	; 0x7e0
 8024032:	f400 60fc 	and.w	r0, r0, #2016	; 0x7e0
 8024036:	fb04 fa00 	mul.w	sl, r4, r0
 802403a:	ea4f 08e4 	mov.w	r8, r4, asr #3
 802403e:	fb08 f80c 	mul.w	r8, r8, ip
 8024042:	f10a 0c20 	add.w	ip, sl, #32
 8024046:	ea06 1058 	and.w	r0, r6, r8, lsr #5
 802404a:	eb0c 2c1a 	add.w	ip, ip, sl, lsr #8
 802404e:	f608 0801 	addw	r8, r8, #2049	; 0x801
 8024052:	4440      	add	r0, r8
 8024054:	ea4f 2c1c 	mov.w	ip, ip, lsr #8
 8024058:	ea06 1050 	and.w	r0, r6, r0, lsr #5
 802405c:	f40c 6cfc 	and.w	ip, ip, #2016	; 0x7e0
 8024060:	ea40 000c 	orr.w	r0, r0, ip
 8024064:	fb15 fc02 	smulbb	ip, r5, r2
 8024068:	ea4f 0cec 	mov.w	ip, ip, asr #3
 802406c:	f1c5 0810 	rsb	r8, r5, #16
 8024070:	eba8 0802 	sub.w	r8, r8, r2
 8024074:	ea4f 4a01 	mov.w	sl, r1, lsl #16
 8024078:	ebcc 0242 	rsb	r2, ip, r2, lsl #1
 802407c:	437a      	muls	r2, r7
 802407e:	ea4f 4b00 	mov.w	fp, r0, lsl #16
 8024082:	eb0c 0848 	add.w	r8, ip, r8, lsl #1
 8024086:	f00a 6afc 	and.w	sl, sl, #132120576	; 0x7e00000
 802408a:	f421 61fc 	bic.w	r1, r1, #2016	; 0x7e0
 802408e:	fb09 2208 	mla	r2, r9, r8, r2
 8024092:	ea4a 0101 	orr.w	r1, sl, r1
 8024096:	ebcc 0545 	rsb	r5, ip, r5, lsl #1
 802409a:	f00b 6bfc 	and.w	fp, fp, #132120576	; 0x7e00000
 802409e:	f420 60fc 	bic.w	r0, r0, #2016	; 0x7e0
 80240a2:	fb05 2201 	mla	r2, r5, r1, r2
 80240a6:	ea4b 0000 	orr.w	r0, fp, r0
 80240aa:	fb0c 2200 	mla	r2, ip, r0, r2
 80240ae:	0d57      	lsrs	r7, r2, #21
 80240b0:	0952      	lsrs	r2, r2, #5
 80240b2:	f407 67fc 	and.w	r7, r7, #2016	; 0x7e0
 80240b6:	f422 62fc 	bic.w	r2, r2, #2016	; 0x7e0
 80240ba:	433a      	orrs	r2, r7
 80240bc:	2bff      	cmp	r3, #255	; 0xff
 80240be:	b292      	uxth	r2, r2
 80240c0:	d127      	bne.n	8024112 <_ZN8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x736>
 80240c2:	f8ae 2000 	strh.w	r2, [lr]
 80240c6:	9b1d      	ldr	r3, [sp, #116]	; 0x74
 80240c8:	9a1f      	ldr	r2, [sp, #124]	; 0x7c
 80240ca:	4413      	add	r3, r2
 80240cc:	931d      	str	r3, [sp, #116]	; 0x74
 80240ce:	9a1e      	ldr	r2, [sp, #120]	; 0x78
 80240d0:	9b20      	ldr	r3, [sp, #128]	; 0x80
 80240d2:	441a      	add	r2, r3
 80240d4:	9b0f      	ldr	r3, [sp, #60]	; 0x3c
 80240d6:	921e      	str	r2, [sp, #120]	; 0x78
 80240d8:	3b01      	subs	r3, #1
 80240da:	f10e 0e02 	add.w	lr, lr, #2
 80240de:	930f      	str	r3, [sp, #60]	; 0x3c
 80240e0:	e627      	b.n	8023d32 <_ZN8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x356>
 80240e2:	fb08 f000 	mul.w	r0, r8, r0
 80240e6:	fb09 0303 	mla	r3, r9, r3, r0
 80240ea:	e71b      	b.n	8023f24 <_ZN8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x548>
 80240ec:	46b9      	mov	r9, r7
 80240ee:	e743      	b.n	8023f78 <_ZN8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x59c>
 80240f0:	f1c2 0110 	rsb	r1, r2, #16
 80240f4:	437a      	muls	r2, r7
 80240f6:	fb09 2901 	mla	r9, r9, r1, r2
 80240fa:	ea4f 0949 	mov.w	r9, r9, lsl #1
 80240fe:	ea4f 5059 	mov.w	r0, r9, lsr #21
 8024102:	ea4f 1259 	mov.w	r2, r9, lsr #5
 8024106:	f400 60fc 	and.w	r0, r0, #2016	; 0x7e0
 802410a:	f422 62fc 	bic.w	r2, r2, #2016	; 0x7e0
 802410e:	4302      	orrs	r2, r0
 8024110:	e7d4      	b.n	80240bc <_ZN8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x6e0>
 8024112:	f8be 7000 	ldrh.w	r7, [lr]
 8024116:	4c1c      	ldr	r4, [pc, #112]	; (8024188 <_ZN8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x7ac>)
 8024118:	43db      	mvns	r3, r3
 802411a:	1238      	asrs	r0, r7, #8
 802411c:	fa5f fc83 	uxtb.w	ip, r3
 8024120:	f000 00f8 	and.w	r0, r0, #248	; 0xf8
 8024124:	10fd      	asrs	r5, r7, #3
 8024126:	fb00 f00c 	mul.w	r0, r0, ip
 802412a:	f005 05fc 	and.w	r5, r5, #252	; 0xfc
 802412e:	fb05 f10c 	mul.w	r1, r5, ip
 8024132:	1c45      	adds	r5, r0, #1
 8024134:	eb05 2010 	add.w	r0, r5, r0, lsr #8
 8024138:	1215      	asrs	r5, r2, #8
 802413a:	f025 0507 	bic.w	r5, r5, #7
 802413e:	eb05 2010 	add.w	r0, r5, r0, lsr #8
 8024142:	1c4d      	adds	r5, r1, #1
 8024144:	eb05 2511 	add.w	r5, r5, r1, lsr #8
 8024148:	10d1      	asrs	r1, r2, #3
 802414a:	f021 0103 	bic.w	r1, r1, #3
 802414e:	00fb      	lsls	r3, r7, #3
 8024150:	eb01 2115 	add.w	r1, r1, r5, lsr #8
 8024154:	b2db      	uxtb	r3, r3
 8024156:	b2c0      	uxtb	r0, r0
 8024158:	00c9      	lsls	r1, r1, #3
 802415a:	fb03 f30c 	mul.w	r3, r3, ip
 802415e:	f401 61fc 	and.w	r1, r1, #2016	; 0x7e0
 8024162:	ea04 2000 	and.w	r0, r4, r0, lsl #8
 8024166:	4308      	orrs	r0, r1
 8024168:	1c59      	adds	r1, r3, #1
 802416a:	eb01 2313 	add.w	r3, r1, r3, lsr #8
 802416e:	00d2      	lsls	r2, r2, #3
 8024170:	eb02 2313 	add.w	r3, r2, r3, lsr #8
 8024174:	f3c3 03c4 	ubfx	r3, r3, #3, #5
 8024178:	4318      	orrs	r0, r3
 802417a:	f8ae 0000 	strh.w	r0, [lr]
 802417e:	e7a2      	b.n	80240c6 <_ZN8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x6ea>
 8024180:	b013      	add	sp, #76	; 0x4c
 8024182:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
 8024186:	bf00      	nop
 8024188:	fffff800 	.word	0xfffff800

0802418c <_ZNK8touchgfx8LCD16bpp52TextureMapper_RGB565_Opaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKtssiihhh>:
 802418c:	e92d 47f0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, lr}
 8024190:	e9dd 4509 	ldrd	r4, r5, [sp, #36]	; 0x24
 8024194:	fb05 4c03 	mla	ip, r5, r3, r4
 8024198:	2d00      	cmp	r5, #0
 802419a:	f9bd a020 	ldrsh.w	sl, [sp, #32]
 802419e:	f89d 902c 	ldrb.w	r9, [sp, #44]	; 0x2c
 80241a2:	f89d 7030 	ldrb.w	r7, [sp, #48]	; 0x30
 80241a6:	f89d 6034 	ldrb.w	r6, [sp, #52]	; 0x34
 80241aa:	8808      	ldrh	r0, [r1, #0]
 80241ac:	eb02 0e4c 	add.w	lr, r2, ip, lsl #1
 80241b0:	f2c0 80a7 	blt.w	8024302 <_ZNK8touchgfx8LCD16bpp52TextureMapper_RGB565_Opaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKtssiihhh+0x176>
 80241b4:	45aa      	cmp	sl, r5
 80241b6:	f340 80a4 	ble.w	8024302 <_ZNK8touchgfx8LCD16bpp52TextureMapper_RGB565_Opaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKtssiihhh+0x176>
 80241ba:	2c00      	cmp	r4, #0
 80241bc:	f2c0 809f 	blt.w	80242fe <_ZNK8touchgfx8LCD16bpp52TextureMapper_RGB565_Opaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKtssiihhh+0x172>
 80241c0:	42a3      	cmp	r3, r4
 80241c2:	f340 809c 	ble.w	80242fe <_ZNK8touchgfx8LCD16bpp52TextureMapper_RGB565_Opaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKtssiihhh+0x172>
 80241c6:	f832 801c 	ldrh.w	r8, [r2, ip, lsl #1]
 80241ca:	1c62      	adds	r2, r4, #1
 80241cc:	f100 809c 	bmi.w	8024308 <_ZNK8touchgfx8LCD16bpp52TextureMapper_RGB565_Opaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKtssiihhh+0x17c>
 80241d0:	4293      	cmp	r3, r2
 80241d2:	f340 8099 	ble.w	8024308 <_ZNK8touchgfx8LCD16bpp52TextureMapper_RGB565_Opaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKtssiihhh+0x17c>
 80241d6:	f1b9 0f00 	cmp.w	r9, #0
 80241da:	f000 8095 	beq.w	8024308 <_ZNK8touchgfx8LCD16bpp52TextureMapper_RGB565_Opaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKtssiihhh+0x17c>
 80241de:	f8be c002 	ldrh.w	ip, [lr, #2]
 80241e2:	3501      	adds	r5, #1
 80241e4:	f100 8094 	bmi.w	8024310 <_ZNK8touchgfx8LCD16bpp52TextureMapper_RGB565_Opaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKtssiihhh+0x184>
 80241e8:	45aa      	cmp	sl, r5
 80241ea:	f340 8091 	ble.w	8024310 <_ZNK8touchgfx8LCD16bpp52TextureMapper_RGB565_Opaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKtssiihhh+0x184>
 80241ee:	2f00      	cmp	r7, #0
 80241f0:	f000 808e 	beq.w	8024310 <_ZNK8touchgfx8LCD16bpp52TextureMapper_RGB565_Opaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKtssiihhh+0x184>
 80241f4:	2c00      	cmp	r4, #0
 80241f6:	f2c0 8089 	blt.w	802430c <_ZNK8touchgfx8LCD16bpp52TextureMapper_RGB565_Opaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKtssiihhh+0x180>
 80241fa:	42a3      	cmp	r3, r4
 80241fc:	f340 8086 	ble.w	802430c <_ZNK8touchgfx8LCD16bpp52TextureMapper_RGB565_Opaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKtssiihhh+0x180>
 8024200:	f83e 5013 	ldrh.w	r5, [lr, r3, lsl #1]
 8024204:	3401      	adds	r4, #1
 8024206:	f100 8086 	bmi.w	8024316 <_ZNK8touchgfx8LCD16bpp52TextureMapper_RGB565_Opaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKtssiihhh+0x18a>
 802420a:	42a3      	cmp	r3, r4
 802420c:	f340 8083 	ble.w	8024316 <_ZNK8touchgfx8LCD16bpp52TextureMapper_RGB565_Opaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKtssiihhh+0x18a>
 8024210:	f1b9 0f00 	cmp.w	r9, #0
 8024214:	d07f      	beq.n	8024316 <_ZNK8touchgfx8LCD16bpp52TextureMapper_RGB565_Opaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKtssiihhh+0x18a>
 8024216:	3301      	adds	r3, #1
 8024218:	f83e 3013 	ldrh.w	r3, [lr, r3, lsl #1]
 802421c:	ea4f 4408 	mov.w	r4, r8, lsl #16
 8024220:	f004 64fc 	and.w	r4, r4, #132120576	; 0x7e00000
 8024224:	f428 68fc 	bic.w	r8, r8, #2016	; 0x7e0
 8024228:	fb19 fe07 	smulbb	lr, r9, r7
 802422c:	ea44 0808 	orr.w	r8, r4, r8
 8024230:	ea4f 440c 	mov.w	r4, ip, lsl #16
 8024234:	f3ce 0ec7 	ubfx	lr, lr, #3, #8
 8024238:	f1c7 0210 	rsb	r2, r7, #16
 802423c:	f004 64fc 	and.w	r4, r4, #132120576	; 0x7e00000
 8024240:	f42c 6cfc 	bic.w	ip, ip, #2016	; 0x7e0
 8024244:	ea44 0c0c 	orr.w	ip, r4, ip
 8024248:	eba2 0209 	sub.w	r2, r2, r9
 802424c:	ebce 0449 	rsb	r4, lr, r9, lsl #1
 8024250:	eb0e 0242 	add.w	r2, lr, r2, lsl #1
 8024254:	fb04 f40c 	mul.w	r4, r4, ip
 8024258:	fb02 4808 	mla	r8, r2, r8, r4
 802425c:	041a      	lsls	r2, r3, #16
 802425e:	f002 62fc 	and.w	r2, r2, #132120576	; 0x7e00000
 8024262:	f423 63fc 	bic.w	r3, r3, #2016	; 0x7e0
 8024266:	4313      	orrs	r3, r2
 8024268:	042a      	lsls	r2, r5, #16
 802426a:	f002 62fc 	and.w	r2, r2, #132120576	; 0x7e00000
 802426e:	f425 65fc 	bic.w	r5, r5, #2016	; 0x7e0
 8024272:	fb0e 8303 	mla	r3, lr, r3, r8
 8024276:	432a      	orrs	r2, r5
 8024278:	ebce 0747 	rsb	r7, lr, r7, lsl #1
 802427c:	fb07 3202 	mla	r2, r7, r2, r3
 8024280:	0d53      	lsrs	r3, r2, #21
 8024282:	0952      	lsrs	r2, r2, #5
 8024284:	f403 63fc 	and.w	r3, r3, #2016	; 0x7e0
 8024288:	f422 62fc 	bic.w	r2, r2, #2016	; 0x7e0
 802428c:	431a      	orrs	r2, r3
 802428e:	b293      	uxth	r3, r2
 8024290:	b2b4      	uxth	r4, r6
 8024292:	1202      	asrs	r2, r0, #8
 8024294:	43f6      	mvns	r6, r6
 8024296:	b2f6      	uxtb	r6, r6
 8024298:	121d      	asrs	r5, r3, #8
 802429a:	f002 02f8 	and.w	r2, r2, #248	; 0xf8
 802429e:	fb12 f206 	smulbb	r2, r2, r6
 80242a2:	10c7      	asrs	r7, r0, #3
 80242a4:	f005 05f8 	and.w	r5, r5, #248	; 0xf8
 80242a8:	00c0      	lsls	r0, r0, #3
 80242aa:	fb05 2504 	mla	r5, r5, r4, r2
 80242ae:	b2c0      	uxtb	r0, r0
 80242b0:	10da      	asrs	r2, r3, #3
 80242b2:	00db      	lsls	r3, r3, #3
 80242b4:	b2db      	uxtb	r3, r3
 80242b6:	f007 07fc 	and.w	r7, r7, #252	; 0xfc
 80242ba:	fb10 f006 	smulbb	r0, r0, r6
 80242be:	b2ad      	uxth	r5, r5
 80242c0:	fb03 0004 	mla	r0, r3, r4, r0
 80242c4:	f002 02fc 	and.w	r2, r2, #252	; 0xfc
 80242c8:	fb17 f706 	smulbb	r7, r7, r6
 80242cc:	b280      	uxth	r0, r0
 80242ce:	1c6b      	adds	r3, r5, #1
 80242d0:	fb02 7204 	mla	r2, r2, r4, r7
 80242d4:	b292      	uxth	r2, r2
 80242d6:	eb03 2515 	add.w	r5, r3, r5, lsr #8
 80242da:	1c43      	adds	r3, r0, #1
 80242dc:	eb03 2310 	add.w	r3, r3, r0, lsr #8
 80242e0:	1c50      	adds	r0, r2, #1
 80242e2:	eb00 2212 	add.w	r2, r0, r2, lsr #8
 80242e6:	f405 4578 	and.w	r5, r5, #63488	; 0xf800
 80242ea:	f3c3 23c4 	ubfx	r3, r3, #11, #5
 80242ee:	0952      	lsrs	r2, r2, #5
 80242f0:	432b      	orrs	r3, r5
 80242f2:	f402 62fc 	and.w	r2, r2, #2016	; 0x7e0
 80242f6:	4313      	orrs	r3, r2
 80242f8:	800b      	strh	r3, [r1, #0]
 80242fa:	e8bd 87f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, pc}
 80242fe:	4680      	mov	r8, r0
 8024300:	e763      	b.n	80241ca <_ZNK8touchgfx8LCD16bpp52TextureMapper_RGB565_Opaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKtssiihhh+0x3e>
 8024302:	4684      	mov	ip, r0
 8024304:	4680      	mov	r8, r0
 8024306:	e76c      	b.n	80241e2 <_ZNK8touchgfx8LCD16bpp52TextureMapper_RGB565_Opaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKtssiihhh+0x56>
 8024308:	4684      	mov	ip, r0
 802430a:	e76a      	b.n	80241e2 <_ZNK8touchgfx8LCD16bpp52TextureMapper_RGB565_Opaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKtssiihhh+0x56>
 802430c:	4605      	mov	r5, r0
 802430e:	e779      	b.n	8024204 <_ZNK8touchgfx8LCD16bpp52TextureMapper_RGB565_Opaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKtssiihhh+0x78>
 8024310:	4603      	mov	r3, r0
 8024312:	4605      	mov	r5, r0
 8024314:	e782      	b.n	802421c <_ZNK8touchgfx8LCD16bpp52TextureMapper_RGB565_Opaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKtssiihhh+0x90>
 8024316:	4603      	mov	r3, r0
 8024318:	e780      	b.n	802421c <_ZNK8touchgfx8LCD16bpp52TextureMapper_RGB565_Opaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKtssiihhh+0x90>

0802431a <_ZN8touchgfx8LCD16bpp52TextureMapper_RGB565_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff>:
 802431a:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 802431e:	b093      	sub	sp, #76	; 0x4c
 8024320:	461d      	mov	r5, r3
 8024322:	9210      	str	r2, [sp, #64]	; 0x40
 8024324:	9b21      	ldr	r3, [sp, #132]	; 0x84
 8024326:	f89d 2094 	ldrb.w	r2, [sp, #148]	; 0x94
 802432a:	920b      	str	r2, [sp, #44]	; 0x2c
 802432c:	e9dd 2722 	ldrd	r2, r7, [sp, #136]	; 0x88
 8024330:	910a      	str	r1, [sp, #40]	; 0x28
 8024332:	6859      	ldr	r1, [r3, #4]
 8024334:	681b      	ldr	r3, [r3, #0]
 8024336:	9011      	str	r0, [sp, #68]	; 0x44
 8024338:	fb01 2707 	mla	r7, r1, r7, r2
 802433c:	eb03 0347 	add.w	r3, r3, r7, lsl #1
 8024340:	9307      	str	r3, [sp, #28]
 8024342:	9b24      	ldr	r3, [sp, #144]	; 0x90
 8024344:	681b      	ldr	r3, [r3, #0]
 8024346:	9309      	str	r3, [sp, #36]	; 0x24
 8024348:	9b0b      	ldr	r3, [sp, #44]	; 0x2c
 802434a:	e9dd 461d 	ldrd	r4, r6, [sp, #116]	; 0x74
 802434e:	43db      	mvns	r3, r3
 8024350:	b2db      	uxtb	r3, r3
 8024352:	9308      	str	r3, [sp, #32]
 8024354:	9b0a      	ldr	r3, [sp, #40]	; 0x28
 8024356:	2b00      	cmp	r3, #0
 8024358:	dc03      	bgt.n	8024362 <_ZN8touchgfx8LCD16bpp52TextureMapper_RGB565_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x48>
 802435a:	9b10      	ldr	r3, [sp, #64]	; 0x40
 802435c:	2b00      	cmp	r3, #0
 802435e:	f340 8203 	ble.w	8024768 <_ZN8touchgfx8LCD16bpp52TextureMapper_RGB565_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x44e>
 8024362:	9b24      	ldr	r3, [sp, #144]	; 0x90
 8024364:	f9b3 1008 	ldrsh.w	r1, [r3, #8]
 8024368:	f9b3 200c 	ldrsh.w	r2, [r3, #12]
 802436c:	1e48      	subs	r0, r1, #1
 802436e:	f102 3cff 	add.w	ip, r2, #4294967295
 8024372:	2d00      	cmp	r5, #0
 8024374:	f340 80da 	ble.w	802452c <_ZN8touchgfx8LCD16bpp52TextureMapper_RGB565_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x212>
 8024378:	ea5f 4e24 	movs.w	lr, r4, asr #16
 802437c:	ea4f 4326 	mov.w	r3, r6, asr #16
 8024380:	d406      	bmi.n	8024390 <_ZN8touchgfx8LCD16bpp52TextureMapper_RGB565_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x76>
 8024382:	4586      	cmp	lr, r0
 8024384:	da04      	bge.n	8024390 <_ZN8touchgfx8LCD16bpp52TextureMapper_RGB565_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x76>
 8024386:	2b00      	cmp	r3, #0
 8024388:	db02      	blt.n	8024390 <_ZN8touchgfx8LCD16bpp52TextureMapper_RGB565_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x76>
 802438a:	4563      	cmp	r3, ip
 802438c:	f2c0 80cf 	blt.w	802452e <_ZN8touchgfx8LCD16bpp52TextureMapper_RGB565_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x214>
 8024390:	f11e 0e01 	adds.w	lr, lr, #1
 8024394:	f100 80c1 	bmi.w	802451a <_ZN8touchgfx8LCD16bpp52TextureMapper_RGB565_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x200>
 8024398:	4571      	cmp	r1, lr
 802439a:	f2c0 80be 	blt.w	802451a <_ZN8touchgfx8LCD16bpp52TextureMapper_RGB565_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x200>
 802439e:	3301      	adds	r3, #1
 80243a0:	f100 80bb 	bmi.w	802451a <_ZN8touchgfx8LCD16bpp52TextureMapper_RGB565_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x200>
 80243a4:	429a      	cmp	r2, r3
 80243a6:	f2c0 80b8 	blt.w	802451a <_ZN8touchgfx8LCD16bpp52TextureMapper_RGB565_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x200>
 80243aa:	f8dd 801c 	ldr.w	r8, [sp, #28]
 80243ae:	46a9      	mov	r9, r5
 80243b0:	f1b9 0f00 	cmp.w	r9, #0
 80243b4:	f340 80d8 	ble.w	8024568 <_ZN8touchgfx8LCD16bpp52TextureMapper_RGB565_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x24e>
 80243b8:	9b24      	ldr	r3, [sp, #144]	; 0x90
 80243ba:	1421      	asrs	r1, r4, #16
 80243bc:	ea4f 4026 	mov.w	r0, r6, asr #16
 80243c0:	f3c4 3203 	ubfx	r2, r4, #12, #4
 80243c4:	f3c6 3c03 	ubfx	ip, r6, #12, #4
 80243c8:	e9d3 e302 	ldrd	lr, r3, [r3, #8]
 80243cc:	f100 8111 	bmi.w	80245f2 <_ZN8touchgfx8LCD16bpp52TextureMapper_RGB565_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x2d8>
 80243d0:	f10e 3aff 	add.w	sl, lr, #4294967295
 80243d4:	4551      	cmp	r1, sl
 80243d6:	f280 810c 	bge.w	80245f2 <_ZN8touchgfx8LCD16bpp52TextureMapper_RGB565_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x2d8>
 80243da:	2800      	cmp	r0, #0
 80243dc:	f2c0 8109 	blt.w	80245f2 <_ZN8touchgfx8LCD16bpp52TextureMapper_RGB565_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x2d8>
 80243e0:	f103 3aff 	add.w	sl, r3, #4294967295
 80243e4:	4550      	cmp	r0, sl
 80243e6:	f280 8104 	bge.w	80245f2 <_ZN8touchgfx8LCD16bpp52TextureMapper_RGB565_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x2d8>
 80243ea:	fa0f f38e 	sxth.w	r3, lr
 80243ee:	fb00 1103 	mla	r1, r0, r3, r1
 80243f2:	9809      	ldr	r0, [sp, #36]	; 0x24
 80243f4:	eb00 0a41 	add.w	sl, r0, r1, lsl #1
 80243f8:	f830 e011 	ldrh.w	lr, [r0, r1, lsl #1]
 80243fc:	f8ba 1002 	ldrh.w	r1, [sl, #2]
 8024400:	f1bc 0f00 	cmp.w	ip, #0
 8024404:	d007      	beq.n	8024416 <_ZN8touchgfx8LCD16bpp52TextureMapper_RGB565_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0xfc>
 8024406:	005b      	lsls	r3, r3, #1
 8024408:	eb0a 0003 	add.w	r0, sl, r3
 802440c:	f83a 3003 	ldrh.w	r3, [sl, r3]
 8024410:	930c      	str	r3, [sp, #48]	; 0x30
 8024412:	8843      	ldrh	r3, [r0, #2]
 8024414:	930d      	str	r3, [sp, #52]	; 0x34
 8024416:	ea4f 400e 	mov.w	r0, lr, lsl #16
 802441a:	fb12 f30c 	smulbb	r3, r2, ip
 802441e:	f42e 6efc 	bic.w	lr, lr, #2016	; 0x7e0
 8024422:	ea4f 4a01 	mov.w	sl, r1, lsl #16
 8024426:	f000 60fc 	and.w	r0, r0, #132120576	; 0x7e00000
 802442a:	10db      	asrs	r3, r3, #3
 802442c:	ea40 000e 	orr.w	r0, r0, lr
 8024430:	f00a 6afc 	and.w	sl, sl, #132120576	; 0x7e00000
 8024434:	f1cc 0e10 	rsb	lr, ip, #16
 8024438:	f421 61fc 	bic.w	r1, r1, #2016	; 0x7e0
 802443c:	ebae 0e02 	sub.w	lr, lr, r2
 8024440:	ea4a 0101 	orr.w	r1, sl, r1
 8024444:	ebc3 0242 	rsb	r2, r3, r2, lsl #1
 8024448:	4351      	muls	r1, r2
 802444a:	9a0d      	ldr	r2, [sp, #52]	; 0x34
 802444c:	9f08      	ldr	r7, [sp, #32]
 802444e:	eb03 0e4e 	add.w	lr, r3, lr, lsl #1
 8024452:	fb0e 1e00 	mla	lr, lr, r0, r1
 8024456:	0410      	lsls	r0, r2, #16
 8024458:	f000 60fc 	and.w	r0, r0, #132120576	; 0x7e00000
 802445c:	f422 62fc 	bic.w	r2, r2, #2016	; 0x7e0
 8024460:	4310      	orrs	r0, r2
 8024462:	9a0c      	ldr	r2, [sp, #48]	; 0x30
 8024464:	990c      	ldr	r1, [sp, #48]	; 0x30
 8024466:	0412      	lsls	r2, r2, #16
 8024468:	fb03 e000 	mla	r0, r3, r0, lr
 802446c:	f002 62fc 	and.w	r2, r2, #132120576	; 0x7e00000
 8024470:	f421 6efc 	bic.w	lr, r1, #2016	; 0x7e0
 8024474:	ea42 020e 	orr.w	r2, r2, lr
 8024478:	ebc3 034c 	rsb	r3, r3, ip, lsl #1
 802447c:	fb03 0302 	mla	r3, r3, r2, r0
 8024480:	0d5a      	lsrs	r2, r3, #21
 8024482:	095b      	lsrs	r3, r3, #5
 8024484:	f8b8 0000 	ldrh.w	r0, [r8]
 8024488:	f402 62fc 	and.w	r2, r2, #2016	; 0x7e0
 802448c:	f423 63fc 	bic.w	r3, r3, #2016	; 0x7e0
 8024490:	4313      	orrs	r3, r2
 8024492:	b29b      	uxth	r3, r3
 8024494:	1201      	asrs	r1, r0, #8
 8024496:	f8bd 202c 	ldrh.w	r2, [sp, #44]	; 0x2c
 802449a:	ea4f 2c23 	mov.w	ip, r3, asr #8
 802449e:	f001 01f8 	and.w	r1, r1, #248	; 0xf8
 80244a2:	fb11 f107 	smulbb	r1, r1, r7
 80244a6:	ea4f 0ee0 	mov.w	lr, r0, asr #3
 80244aa:	f00c 0cf8 	and.w	ip, ip, #248	; 0xf8
 80244ae:	00c0      	lsls	r0, r0, #3
 80244b0:	fb0c 1c02 	mla	ip, ip, r2, r1
 80244b4:	b2c0      	uxtb	r0, r0
 80244b6:	10d9      	asrs	r1, r3, #3
 80244b8:	00db      	lsls	r3, r3, #3
 80244ba:	f00e 0efc 	and.w	lr, lr, #252	; 0xfc
 80244be:	b2db      	uxtb	r3, r3
 80244c0:	fb10 f007 	smulbb	r0, r0, r7
 80244c4:	fa1f fc8c 	uxth.w	ip, ip
 80244c8:	fb03 0302 	mla	r3, r3, r2, r0
 80244cc:	f001 01fc 	and.w	r1, r1, #252	; 0xfc
 80244d0:	fb1e fe07 	smulbb	lr, lr, r7
 80244d4:	fb01 e102 	mla	r1, r1, r2, lr
 80244d8:	b29a      	uxth	r2, r3
 80244da:	f10c 0301 	add.w	r3, ip, #1
 80244de:	b289      	uxth	r1, r1
 80244e0:	eb03 2c1c 	add.w	ip, r3, ip, lsr #8
 80244e4:	1c53      	adds	r3, r2, #1
 80244e6:	eb03 2312 	add.w	r3, r3, r2, lsr #8
 80244ea:	1c4a      	adds	r2, r1, #1
 80244ec:	eb02 2111 	add.w	r1, r2, r1, lsr #8
 80244f0:	f40c 4c78 	and.w	ip, ip, #63488	; 0xf800
 80244f4:	f3c3 23c4 	ubfx	r3, r3, #11, #5
 80244f8:	0949      	lsrs	r1, r1, #5
 80244fa:	ea43 030c 	orr.w	r3, r3, ip
 80244fe:	f401 61fc 	and.w	r1, r1, #2016	; 0x7e0
 8024502:	430b      	orrs	r3, r1
 8024504:	f8a8 3000 	strh.w	r3, [r8]
 8024508:	9b1f      	ldr	r3, [sp, #124]	; 0x7c
 802450a:	441c      	add	r4, r3
 802450c:	9b20      	ldr	r3, [sp, #128]	; 0x80
 802450e:	f108 0802 	add.w	r8, r8, #2
 8024512:	441e      	add	r6, r3
 8024514:	f109 39ff 	add.w	r9, r9, #4294967295
 8024518:	e74a      	b.n	80243b0 <_ZN8touchgfx8LCD16bpp52TextureMapper_RGB565_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x96>
 802451a:	9b1f      	ldr	r3, [sp, #124]	; 0x7c
 802451c:	441c      	add	r4, r3
 802451e:	9b20      	ldr	r3, [sp, #128]	; 0x80
 8024520:	441e      	add	r6, r3
 8024522:	9b07      	ldr	r3, [sp, #28]
 8024524:	3302      	adds	r3, #2
 8024526:	3d01      	subs	r5, #1
 8024528:	9307      	str	r3, [sp, #28]
 802452a:	e722      	b.n	8024372 <_ZN8touchgfx8LCD16bpp52TextureMapper_RGB565_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x58>
 802452c:	d022      	beq.n	8024574 <_ZN8touchgfx8LCD16bpp52TextureMapper_RGB565_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x25a>
 802452e:	981f      	ldr	r0, [sp, #124]	; 0x7c
 8024530:	1e6b      	subs	r3, r5, #1
 8024532:	fb00 4003 	mla	r0, r0, r3, r4
 8024536:	1400      	asrs	r0, r0, #16
 8024538:	f53f af37 	bmi.w	80243aa <_ZN8touchgfx8LCD16bpp52TextureMapper_RGB565_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x90>
 802453c:	3901      	subs	r1, #1
 802453e:	4288      	cmp	r0, r1
 8024540:	f6bf af33 	bge.w	80243aa <_ZN8touchgfx8LCD16bpp52TextureMapper_RGB565_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x90>
 8024544:	9920      	ldr	r1, [sp, #128]	; 0x80
 8024546:	fb01 6303 	mla	r3, r1, r3, r6
 802454a:	141b      	asrs	r3, r3, #16
 802454c:	f53f af2d 	bmi.w	80243aa <_ZN8touchgfx8LCD16bpp52TextureMapper_RGB565_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x90>
 8024550:	3a01      	subs	r2, #1
 8024552:	4293      	cmp	r3, r2
 8024554:	f6bf af29 	bge.w	80243aa <_ZN8touchgfx8LCD16bpp52TextureMapper_RGB565_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x90>
 8024558:	f8dd 901c 	ldr.w	r9, [sp, #28]
 802455c:	f8bd a02c 	ldrh.w	sl, [sp, #44]	; 0x2c
 8024560:	46a8      	mov	r8, r5
 8024562:	f1b8 0f00 	cmp.w	r8, #0
 8024566:	dc5e      	bgt.n	8024626 <_ZN8touchgfx8LCD16bpp52TextureMapper_RGB565_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x30c>
 8024568:	9b07      	ldr	r3, [sp, #28]
 802456a:	ea25 75e5 	bic.w	r5, r5, r5, asr #31
 802456e:	eb03 0345 	add.w	r3, r3, r5, lsl #1
 8024572:	9307      	str	r3, [sp, #28]
 8024574:	9b0a      	ldr	r3, [sp, #40]	; 0x28
 8024576:	2b00      	cmp	r3, #0
 8024578:	f340 80f6 	ble.w	8024768 <_ZN8touchgfx8LCD16bpp52TextureMapper_RGB565_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x44e>
 802457c:	ee30 0a04 	vadd.f32	s0, s0, s8
 8024580:	eeb7 7a00 	vmov.f32	s14, #112	; 0x3f800000  1.0
 8024584:	eec7 7a00 	vdiv.f32	s15, s14, s0
 8024588:	9b1c      	ldr	r3, [sp, #112]	; 0x70
 802458a:	ee70 0aa4 	vadd.f32	s1, s1, s9
 802458e:	ee31 1a05 	vadd.f32	s2, s2, s10
 8024592:	ee20 7aa7 	vmul.f32	s14, s1, s15
 8024596:	eef0 6a62 	vmov.f32	s13, s5
 802459a:	ee61 7a27 	vmul.f32	s15, s2, s15
 802459e:	eefe 6ac8 	vcvt.s32.f32	s13, s13, #16
 80245a2:	ee77 2a62 	vsub.f32	s5, s14, s5
 80245a6:	ee16 4a90 	vmov	r4, s13
 80245aa:	eefe 2ac8 	vcvt.s32.f32	s5, s5, #16
 80245ae:	eef0 6a43 	vmov.f32	s13, s6
 80245b2:	ee37 3ac3 	vsub.f32	s6, s15, s6
 80245b6:	ee12 2a90 	vmov	r2, s5
 80245ba:	eebe 3ac8 	vcvt.s32.f32	s6, s6, #16
 80245be:	fb92 f3f3 	sdiv	r3, r2, r3
 80245c2:	ee13 2a10 	vmov	r2, s6
 80245c6:	931f      	str	r3, [sp, #124]	; 0x7c
 80245c8:	9b1c      	ldr	r3, [sp, #112]	; 0x70
 80245ca:	fb92 f3f3 	sdiv	r3, r2, r3
 80245ce:	9320      	str	r3, [sp, #128]	; 0x80
 80245d0:	9b0a      	ldr	r3, [sp, #40]	; 0x28
 80245d2:	9a10      	ldr	r2, [sp, #64]	; 0x40
 80245d4:	3b01      	subs	r3, #1
 80245d6:	eefe 6ac8 	vcvt.s32.f32	s13, s13, #16
 80245da:	930a      	str	r3, [sp, #40]	; 0x28
 80245dc:	9b1c      	ldr	r3, [sp, #112]	; 0x70
 80245de:	ee16 6a90 	vmov	r6, s13
 80245e2:	bf14      	ite	ne
 80245e4:	461d      	movne	r5, r3
 80245e6:	4615      	moveq	r5, r2
 80245e8:	eeb0 3a67 	vmov.f32	s6, s15
 80245ec:	eef0 2a47 	vmov.f32	s5, s14
 80245f0:	e6b0      	b.n	8024354 <_ZN8touchgfx8LCD16bpp52TextureMapper_RGB565_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x3a>
 80245f2:	f111 0a01 	adds.w	sl, r1, #1
 80245f6:	d487      	bmi.n	8024508 <_ZN8touchgfx8LCD16bpp52TextureMapper_RGB565_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x1ee>
 80245f8:	45d6      	cmp	lr, sl
 80245fa:	db85      	blt.n	8024508 <_ZN8touchgfx8LCD16bpp52TextureMapper_RGB565_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x1ee>
 80245fc:	f110 0a01 	adds.w	sl, r0, #1
 8024600:	d482      	bmi.n	8024508 <_ZN8touchgfx8LCD16bpp52TextureMapper_RGB565_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x1ee>
 8024602:	4553      	cmp	r3, sl
 8024604:	db80      	blt.n	8024508 <_ZN8touchgfx8LCD16bpp52TextureMapper_RGB565_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x1ee>
 8024606:	9f0b      	ldr	r7, [sp, #44]	; 0x2c
 8024608:	9101      	str	r1, [sp, #4]
 802460a:	b21b      	sxth	r3, r3
 802460c:	e9cd 0202 	strd	r0, r2, [sp, #8]
 8024610:	9300      	str	r3, [sp, #0]
 8024612:	e9cd c704 	strd	ip, r7, [sp, #16]
 8024616:	fa0f f38e 	sxth.w	r3, lr
 802461a:	9a09      	ldr	r2, [sp, #36]	; 0x24
 802461c:	9811      	ldr	r0, [sp, #68]	; 0x44
 802461e:	4641      	mov	r1, r8
 8024620:	f7ff fdb4 	bl	802418c <_ZNK8touchgfx8LCD16bpp52TextureMapper_RGB565_Opaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKtssiihhh>
 8024624:	e770      	b.n	8024508 <_ZN8touchgfx8LCD16bpp52TextureMapper_RGB565_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x1ee>
 8024626:	9b24      	ldr	r3, [sp, #144]	; 0x90
 8024628:	9f09      	ldr	r7, [sp, #36]	; 0x24
 802462a:	f9b3 1008 	ldrsh.w	r1, [r3, #8]
 802462e:	1430      	asrs	r0, r6, #16
 8024630:	1423      	asrs	r3, r4, #16
 8024632:	fb01 3000 	mla	r0, r1, r0, r3
 8024636:	9b09      	ldr	r3, [sp, #36]	; 0x24
 8024638:	f837 c010 	ldrh.w	ip, [r7, r0, lsl #1]
 802463c:	eb03 0340 	add.w	r3, r3, r0, lsl #1
 8024640:	f3c6 3e03 	ubfx	lr, r6, #12, #4
 8024644:	f3c4 3203 	ubfx	r2, r4, #12, #4
 8024648:	8858      	ldrh	r0, [r3, #2]
 802464a:	f1be 0f00 	cmp.w	lr, #0
 802464e:	d00b      	beq.n	8024668 <_ZN8touchgfx8LCD16bpp52TextureMapper_RGB565_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x34e>
 8024650:	f101 4100 	add.w	r1, r1, #2147483648	; 0x80000000
 8024654:	3901      	subs	r1, #1
 8024656:	0049      	lsls	r1, r1, #1
 8024658:	3102      	adds	r1, #2
 802465a:	eb03 0b01 	add.w	fp, r3, r1
 802465e:	5a5b      	ldrh	r3, [r3, r1]
 8024660:	930e      	str	r3, [sp, #56]	; 0x38
 8024662:	f8bb 3002 	ldrh.w	r3, [fp, #2]
 8024666:	930f      	str	r3, [sp, #60]	; 0x3c
 8024668:	ea4f 410c 	mov.w	r1, ip, lsl #16
 802466c:	fb12 f30e 	smulbb	r3, r2, lr
 8024670:	f42c 6cfc 	bic.w	ip, ip, #2016	; 0x7e0
 8024674:	ea4f 4b00 	mov.w	fp, r0, lsl #16
 8024678:	f001 61fc 	and.w	r1, r1, #132120576	; 0x7e00000
 802467c:	10db      	asrs	r3, r3, #3
 802467e:	ea41 010c 	orr.w	r1, r1, ip
 8024682:	f00b 6bfc 	and.w	fp, fp, #132120576	; 0x7e00000
 8024686:	f1ce 0c10 	rsb	ip, lr, #16
 802468a:	f420 60fc 	bic.w	r0, r0, #2016	; 0x7e0
 802468e:	ebac 0c02 	sub.w	ip, ip, r2
 8024692:	ea4b 0000 	orr.w	r0, fp, r0
 8024696:	ebc3 0242 	rsb	r2, r3, r2, lsl #1
 802469a:	4350      	muls	r0, r2
 802469c:	9a0f      	ldr	r2, [sp, #60]	; 0x3c
 802469e:	9f08      	ldr	r7, [sp, #32]
 80246a0:	eb03 0c4c 	add.w	ip, r3, ip, lsl #1
 80246a4:	fb0c 0c01 	mla	ip, ip, r1, r0
 80246a8:	ea4f 4b02 	mov.w	fp, r2, lsl #16
 80246ac:	f422 61fc 	bic.w	r1, r2, #2016	; 0x7e0
 80246b0:	9a0e      	ldr	r2, [sp, #56]	; 0x38
 80246b2:	980e      	ldr	r0, [sp, #56]	; 0x38
 80246b4:	f00b 6bfc 	and.w	fp, fp, #132120576	; 0x7e00000
 80246b8:	0412      	lsls	r2, r2, #16
 80246ba:	ea4b 0101 	orr.w	r1, fp, r1
 80246be:	f420 60fc 	bic.w	r0, r0, #2016	; 0x7e0
 80246c2:	f002 62fc 	and.w	r2, r2, #132120576	; 0x7e00000
 80246c6:	fb03 c101 	mla	r1, r3, r1, ip
 80246ca:	4302      	orrs	r2, r0
 80246cc:	ebc3 034e 	rsb	r3, r3, lr, lsl #1
 80246d0:	fb03 1202 	mla	r2, r3, r2, r1
 80246d4:	ea4f 5b52 	mov.w	fp, r2, lsr #21
 80246d8:	0952      	lsrs	r2, r2, #5
 80246da:	f422 63fc 	bic.w	r3, r2, #2016	; 0x7e0
 80246de:	f40b 6bfc 	and.w	fp, fp, #2016	; 0x7e0
 80246e2:	f8b9 2000 	ldrh.w	r2, [r9]
 80246e6:	ea4b 0303 	orr.w	r3, fp, r3
 80246ea:	b29b      	uxth	r3, r3
 80246ec:	1211      	asrs	r1, r2, #8
 80246ee:	1218      	asrs	r0, r3, #8
 80246f0:	f001 01f8 	and.w	r1, r1, #248	; 0xf8
 80246f4:	fb11 f107 	smulbb	r1, r1, r7
 80246f8:	ea4f 0ce2 	mov.w	ip, r2, asr #3
 80246fc:	f000 00f8 	and.w	r0, r0, #248	; 0xf8
 8024700:	00d2      	lsls	r2, r2, #3
 8024702:	fb00 100a 	mla	r0, r0, sl, r1
 8024706:	f00c 0cfc 	and.w	ip, ip, #252	; 0xfc
 802470a:	10d9      	asrs	r1, r3, #3
 802470c:	b2d2      	uxtb	r2, r2
 802470e:	00db      	lsls	r3, r3, #3
 8024710:	fb1c fc07 	smulbb	ip, ip, r7
 8024714:	fb12 f207 	smulbb	r2, r2, r7
 8024718:	f001 01fc 	and.w	r1, r1, #252	; 0xfc
 802471c:	b2db      	uxtb	r3, r3
 802471e:	b280      	uxth	r0, r0
 8024720:	fb01 c10a 	mla	r1, r1, sl, ip
 8024724:	fb03 230a 	mla	r3, r3, sl, r2
 8024728:	b29b      	uxth	r3, r3
 802472a:	b289      	uxth	r1, r1
 802472c:	1c42      	adds	r2, r0, #1
 802472e:	eb02 2010 	add.w	r0, r2, r0, lsr #8
 8024732:	f101 0c01 	add.w	ip, r1, #1
 8024736:	1c5a      	adds	r2, r3, #1
 8024738:	eb02 2213 	add.w	r2, r2, r3, lsr #8
 802473c:	eb0c 2c11 	add.w	ip, ip, r1, lsr #8
 8024740:	9b1f      	ldr	r3, [sp, #124]	; 0x7c
 8024742:	f400 4078 	and.w	r0, r0, #63488	; 0xf800
 8024746:	f3c2 22c4 	ubfx	r2, r2, #11, #5
 802474a:	ea4f 1c5c 	mov.w	ip, ip, lsr #5
 802474e:	4310      	orrs	r0, r2
 8024750:	f40c 6cfc 	and.w	ip, ip, #2016	; 0x7e0
 8024754:	441c      	add	r4, r3
 8024756:	9b20      	ldr	r3, [sp, #128]	; 0x80
 8024758:	ea40 000c 	orr.w	r0, r0, ip
 802475c:	f829 0b02 	strh.w	r0, [r9], #2
 8024760:	441e      	add	r6, r3
 8024762:	f108 38ff 	add.w	r8, r8, #4294967295
 8024766:	e6fc      	b.n	8024562 <_ZN8touchgfx8LCD16bpp52TextureMapper_RGB565_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x248>
 8024768:	b013      	add	sp, #76	; 0x4c
 802476a:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}

0802476e <_ZNK8touchgfx8LCD16bpp54TextureMapper_RGB565_Opaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKtssiihh>:
 802476e:	e92d 43f0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, lr}
 8024772:	e9dd 4e08 	ldrd	r4, lr, [sp, #32]
 8024776:	fb0e 4703 	mla	r7, lr, r3, r4
 802477a:	f1be 0f00 	cmp.w	lr, #0
 802477e:	f9bd 901c 	ldrsh.w	r9, [sp, #28]
 8024782:	f89d 5028 	ldrb.w	r5, [sp, #40]	; 0x28
 8024786:	f89d 602c 	ldrb.w	r6, [sp, #44]	; 0x2c
 802478a:	8808      	ldrh	r0, [r1, #0]
 802478c:	eb02 0847 	add.w	r8, r2, r7, lsl #1
 8024790:	db60      	blt.n	8024854 <_ZNK8touchgfx8LCD16bpp54TextureMapper_RGB565_Opaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKtssiihh+0xe6>
 8024792:	45f1      	cmp	r9, lr
 8024794:	dd5e      	ble.n	8024854 <_ZNK8touchgfx8LCD16bpp54TextureMapper_RGB565_Opaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKtssiihh+0xe6>
 8024796:	2c00      	cmp	r4, #0
 8024798:	db5a      	blt.n	8024850 <_ZNK8touchgfx8LCD16bpp54TextureMapper_RGB565_Opaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKtssiihh+0xe2>
 802479a:	42a3      	cmp	r3, r4
 802479c:	dd58      	ble.n	8024850 <_ZNK8touchgfx8LCD16bpp54TextureMapper_RGB565_Opaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKtssiihh+0xe2>
 802479e:	f832 c017 	ldrh.w	ip, [r2, r7, lsl #1]
 80247a2:	1c62      	adds	r2, r4, #1
 80247a4:	d459      	bmi.n	802485a <_ZNK8touchgfx8LCD16bpp54TextureMapper_RGB565_Opaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKtssiihh+0xec>
 80247a6:	4293      	cmp	r3, r2
 80247a8:	dd57      	ble.n	802485a <_ZNK8touchgfx8LCD16bpp54TextureMapper_RGB565_Opaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKtssiihh+0xec>
 80247aa:	2d00      	cmp	r5, #0
 80247ac:	d055      	beq.n	802485a <_ZNK8touchgfx8LCD16bpp54TextureMapper_RGB565_Opaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKtssiihh+0xec>
 80247ae:	f8b8 7002 	ldrh.w	r7, [r8, #2]
 80247b2:	f11e 0e01 	adds.w	lr, lr, #1
 80247b6:	d454      	bmi.n	8024862 <_ZNK8touchgfx8LCD16bpp54TextureMapper_RGB565_Opaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKtssiihh+0xf4>
 80247b8:	45f1      	cmp	r9, lr
 80247ba:	dd52      	ble.n	8024862 <_ZNK8touchgfx8LCD16bpp54TextureMapper_RGB565_Opaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKtssiihh+0xf4>
 80247bc:	2e00      	cmp	r6, #0
 80247be:	d050      	beq.n	8024862 <_ZNK8touchgfx8LCD16bpp54TextureMapper_RGB565_Opaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKtssiihh+0xf4>
 80247c0:	2c00      	cmp	r4, #0
 80247c2:	db4c      	blt.n	802485e <_ZNK8touchgfx8LCD16bpp54TextureMapper_RGB565_Opaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKtssiihh+0xf0>
 80247c4:	42a3      	cmp	r3, r4
 80247c6:	dd4a      	ble.n	802485e <_ZNK8touchgfx8LCD16bpp54TextureMapper_RGB565_Opaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKtssiihh+0xf0>
 80247c8:	f838 2013 	ldrh.w	r2, [r8, r3, lsl #1]
 80247cc:	3401      	adds	r4, #1
 80247ce:	d405      	bmi.n	80247dc <_ZNK8touchgfx8LCD16bpp54TextureMapper_RGB565_Opaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKtssiihh+0x6e>
 80247d0:	42a3      	cmp	r3, r4
 80247d2:	dd03      	ble.n	80247dc <_ZNK8touchgfx8LCD16bpp54TextureMapper_RGB565_Opaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKtssiihh+0x6e>
 80247d4:	b115      	cbz	r5, 80247dc <_ZNK8touchgfx8LCD16bpp54TextureMapper_RGB565_Opaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKtssiihh+0x6e>
 80247d6:	3301      	adds	r3, #1
 80247d8:	f838 0013 	ldrh.w	r0, [r8, r3, lsl #1]
 80247dc:	ea4f 430c 	mov.w	r3, ip, lsl #16
 80247e0:	fb15 f406 	smulbb	r4, r5, r6
 80247e4:	f003 63fc 	and.w	r3, r3, #132120576	; 0x7e00000
 80247e8:	ea4f 4e07 	mov.w	lr, r7, lsl #16
 80247ec:	f42c 6cfc 	bic.w	ip, ip, #2016	; 0x7e0
 80247f0:	f3c4 04c7 	ubfx	r4, r4, #3, #8
 80247f4:	ea43 0c0c 	orr.w	ip, r3, ip
 80247f8:	f00e 6efc 	and.w	lr, lr, #132120576	; 0x7e00000
 80247fc:	f1c6 0310 	rsb	r3, r6, #16
 8024800:	f427 67fc 	bic.w	r7, r7, #2016	; 0x7e0
 8024804:	1b5b      	subs	r3, r3, r5
 8024806:	ea4e 0707 	orr.w	r7, lr, r7
 802480a:	ebc4 0545 	rsb	r5, r4, r5, lsl #1
 802480e:	eb04 0343 	add.w	r3, r4, r3, lsl #1
 8024812:	437d      	muls	r5, r7
 8024814:	fb03 5c0c 	mla	ip, r3, ip, r5
 8024818:	0403      	lsls	r3, r0, #16
 802481a:	f003 63fc 	and.w	r3, r3, #132120576	; 0x7e00000
 802481e:	f420 60fc 	bic.w	r0, r0, #2016	; 0x7e0
 8024822:	4318      	orrs	r0, r3
 8024824:	0413      	lsls	r3, r2, #16
 8024826:	f003 63fc 	and.w	r3, r3, #132120576	; 0x7e00000
 802482a:	f422 62fc 	bic.w	r2, r2, #2016	; 0x7e0
 802482e:	4313      	orrs	r3, r2
 8024830:	fb04 c000 	mla	r0, r4, r0, ip
 8024834:	ebc4 0646 	rsb	r6, r4, r6, lsl #1
 8024838:	fb06 0003 	mla	r0, r6, r3, r0
 802483c:	0d43      	lsrs	r3, r0, #21
 802483e:	0940      	lsrs	r0, r0, #5
 8024840:	f403 63fc 	and.w	r3, r3, #2016	; 0x7e0
 8024844:	f420 60fc 	bic.w	r0, r0, #2016	; 0x7e0
 8024848:	4318      	orrs	r0, r3
 802484a:	8008      	strh	r0, [r1, #0]
 802484c:	e8bd 83f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, pc}
 8024850:	4684      	mov	ip, r0
 8024852:	e7a6      	b.n	80247a2 <_ZNK8touchgfx8LCD16bpp54TextureMapper_RGB565_Opaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKtssiihh+0x34>
 8024854:	4607      	mov	r7, r0
 8024856:	4684      	mov	ip, r0
 8024858:	e7ab      	b.n	80247b2 <_ZNK8touchgfx8LCD16bpp54TextureMapper_RGB565_Opaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKtssiihh+0x44>
 802485a:	4607      	mov	r7, r0
 802485c:	e7a9      	b.n	80247b2 <_ZNK8touchgfx8LCD16bpp54TextureMapper_RGB565_Opaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKtssiihh+0x44>
 802485e:	4602      	mov	r2, r0
 8024860:	e7b4      	b.n	80247cc <_ZNK8touchgfx8LCD16bpp54TextureMapper_RGB565_Opaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKtssiihh+0x5e>
 8024862:	4602      	mov	r2, r0
 8024864:	e7ba      	b.n	80247dc <_ZNK8touchgfx8LCD16bpp54TextureMapper_RGB565_Opaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKtssiihh+0x6e>

08024866 <_ZN8touchgfx8LCD16bpp54TextureMapper_RGB565_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff>:
 8024866:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 802486a:	b08f      	sub	sp, #60	; 0x3c
 802486c:	461d      	mov	r5, r3
 802486e:	9b1d      	ldr	r3, [sp, #116]	; 0x74
 8024870:	920c      	str	r2, [sp, #48]	; 0x30
 8024872:	e9dd 271e 	ldrd	r2, r7, [sp, #120]	; 0x78
 8024876:	9107      	str	r1, [sp, #28]
 8024878:	6859      	ldr	r1, [r3, #4]
 802487a:	681b      	ldr	r3, [r3, #0]
 802487c:	900d      	str	r0, [sp, #52]	; 0x34
 802487e:	fb01 2707 	mla	r7, r1, r7, r2
 8024882:	eb03 0747 	add.w	r7, r3, r7, lsl #1
 8024886:	9b20      	ldr	r3, [sp, #128]	; 0x80
 8024888:	e9dd 4619 	ldrd	r4, r6, [sp, #100]	; 0x64
 802488c:	f8d3 8000 	ldr.w	r8, [r3]
 8024890:	9b07      	ldr	r3, [sp, #28]
 8024892:	2b00      	cmp	r3, #0
 8024894:	dc03      	bgt.n	802489e <_ZN8touchgfx8LCD16bpp54TextureMapper_RGB565_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x38>
 8024896:	9b0c      	ldr	r3, [sp, #48]	; 0x30
 8024898:	2b00      	cmp	r3, #0
 802489a:	f340 8181 	ble.w	8024ba0 <_ZN8touchgfx8LCD16bpp54TextureMapper_RGB565_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x33a>
 802489e:	9b20      	ldr	r3, [sp, #128]	; 0x80
 80248a0:	f9b3 1008 	ldrsh.w	r1, [r3, #8]
 80248a4:	f9b3 200c 	ldrsh.w	r2, [r3, #12]
 80248a8:	1e48      	subs	r0, r1, #1
 80248aa:	f102 3cff 	add.w	ip, r2, #4294967295
 80248ae:	2d00      	cmp	r5, #0
 80248b0:	f340 809b 	ble.w	80249ea <_ZN8touchgfx8LCD16bpp54TextureMapper_RGB565_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x184>
 80248b4:	ea5f 4e24 	movs.w	lr, r4, asr #16
 80248b8:	ea4f 4326 	mov.w	r3, r6, asr #16
 80248bc:	d406      	bmi.n	80248cc <_ZN8touchgfx8LCD16bpp54TextureMapper_RGB565_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x66>
 80248be:	4586      	cmp	lr, r0
 80248c0:	da04      	bge.n	80248cc <_ZN8touchgfx8LCD16bpp54TextureMapper_RGB565_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x66>
 80248c2:	2b00      	cmp	r3, #0
 80248c4:	db02      	blt.n	80248cc <_ZN8touchgfx8LCD16bpp54TextureMapper_RGB565_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x66>
 80248c6:	4563      	cmp	r3, ip
 80248c8:	f2c0 8090 	blt.w	80249ec <_ZN8touchgfx8LCD16bpp54TextureMapper_RGB565_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x186>
 80248cc:	f11e 0e01 	adds.w	lr, lr, #1
 80248d0:	f100 8084 	bmi.w	80249dc <_ZN8touchgfx8LCD16bpp54TextureMapper_RGB565_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x176>
 80248d4:	4571      	cmp	r1, lr
 80248d6:	f2c0 8081 	blt.w	80249dc <_ZN8touchgfx8LCD16bpp54TextureMapper_RGB565_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x176>
 80248da:	3301      	adds	r3, #1
 80248dc:	d47e      	bmi.n	80249dc <_ZN8touchgfx8LCD16bpp54TextureMapper_RGB565_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x176>
 80248de:	429a      	cmp	r2, r3
 80248e0:	db7c      	blt.n	80249dc <_ZN8touchgfx8LCD16bpp54TextureMapper_RGB565_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x176>
 80248e2:	46aa      	mov	sl, r5
 80248e4:	46b9      	mov	r9, r7
 80248e6:	f1ba 0f00 	cmp.w	sl, #0
 80248ea:	f340 8099 	ble.w	8024a20 <_ZN8touchgfx8LCD16bpp54TextureMapper_RGB565_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x1ba>
 80248ee:	9b20      	ldr	r3, [sp, #128]	; 0x80
 80248f0:	1421      	asrs	r1, r4, #16
 80248f2:	ea4f 4026 	mov.w	r0, r6, asr #16
 80248f6:	f3c4 3203 	ubfx	r2, r4, #12, #4
 80248fa:	f3c6 3c03 	ubfx	ip, r6, #12, #4
 80248fe:	e9d3 e302 	ldrd	lr, r3, [r3, #8]
 8024902:	f100 80d0 	bmi.w	8024aa6 <_ZN8touchgfx8LCD16bpp54TextureMapper_RGB565_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x240>
 8024906:	f10e 3bff 	add.w	fp, lr, #4294967295
 802490a:	4559      	cmp	r1, fp
 802490c:	f280 80cb 	bge.w	8024aa6 <_ZN8touchgfx8LCD16bpp54TextureMapper_RGB565_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x240>
 8024910:	2800      	cmp	r0, #0
 8024912:	f2c0 80c8 	blt.w	8024aa6 <_ZN8touchgfx8LCD16bpp54TextureMapper_RGB565_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x240>
 8024916:	f103 3bff 	add.w	fp, r3, #4294967295
 802491a:	4558      	cmp	r0, fp
 802491c:	f280 80c3 	bge.w	8024aa6 <_ZN8touchgfx8LCD16bpp54TextureMapper_RGB565_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x240>
 8024920:	fa0f fe8e 	sxth.w	lr, lr
 8024924:	fb00 110e 	mla	r1, r0, lr, r1
 8024928:	eb08 0041 	add.w	r0, r8, r1, lsl #1
 802492c:	f838 b011 	ldrh.w	fp, [r8, r1, lsl #1]
 8024930:	8841      	ldrh	r1, [r0, #2]
 8024932:	f1bc 0f00 	cmp.w	ip, #0
 8024936:	d00b      	beq.n	8024950 <_ZN8touchgfx8LCD16bpp54TextureMapper_RGB565_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0xea>
 8024938:	f10e 4300 	add.w	r3, lr, #2147483648	; 0x80000000
 802493c:	3b01      	subs	r3, #1
 802493e:	005b      	lsls	r3, r3, #1
 8024940:	3302      	adds	r3, #2
 8024942:	eb00 0e03 	add.w	lr, r0, r3
 8024946:	5ac3      	ldrh	r3, [r0, r3]
 8024948:	9308      	str	r3, [sp, #32]
 802494a:	f8be 3002 	ldrh.w	r3, [lr, #2]
 802494e:	9309      	str	r3, [sp, #36]	; 0x24
 8024950:	ea4f 400b 	mov.w	r0, fp, lsl #16
 8024954:	f000 60fc 	and.w	r0, r0, #132120576	; 0x7e00000
 8024958:	f42b 6bfc 	bic.w	fp, fp, #2016	; 0x7e0
 802495c:	ea40 000b 	orr.w	r0, r0, fp
 8024960:	fb12 f30c 	smulbb	r3, r2, ip
 8024964:	ea4f 4b01 	mov.w	fp, r1, lsl #16
 8024968:	10db      	asrs	r3, r3, #3
 802496a:	f1cc 0e10 	rsb	lr, ip, #16
 802496e:	f00b 6bfc 	and.w	fp, fp, #132120576	; 0x7e00000
 8024972:	f421 61fc 	bic.w	r1, r1, #2016	; 0x7e0
 8024976:	ebae 0e02 	sub.w	lr, lr, r2
 802497a:	ea4b 0101 	orr.w	r1, fp, r1
 802497e:	ebc3 0242 	rsb	r2, r3, r2, lsl #1
 8024982:	4351      	muls	r1, r2
 8024984:	9a09      	ldr	r2, [sp, #36]	; 0x24
 8024986:	eb03 0e4e 	add.w	lr, r3, lr, lsl #1
 802498a:	fb0e 1e00 	mla	lr, lr, r0, r1
 802498e:	0410      	lsls	r0, r2, #16
 8024990:	f000 60fc 	and.w	r0, r0, #132120576	; 0x7e00000
 8024994:	f422 62fc 	bic.w	r2, r2, #2016	; 0x7e0
 8024998:	4310      	orrs	r0, r2
 802499a:	9a08      	ldr	r2, [sp, #32]
 802499c:	9908      	ldr	r1, [sp, #32]
 802499e:	0412      	lsls	r2, r2, #16
 80249a0:	fb03 e000 	mla	r0, r3, r0, lr
 80249a4:	f002 62fc 	and.w	r2, r2, #132120576	; 0x7e00000
 80249a8:	f421 6efc 	bic.w	lr, r1, #2016	; 0x7e0
 80249ac:	ea42 020e 	orr.w	r2, r2, lr
 80249b0:	ebc3 034c 	rsb	r3, r3, ip, lsl #1
 80249b4:	fb03 0302 	mla	r3, r3, r2, r0
 80249b8:	0d5a      	lsrs	r2, r3, #21
 80249ba:	095b      	lsrs	r3, r3, #5
 80249bc:	f402 62fc 	and.w	r2, r2, #2016	; 0x7e0
 80249c0:	f423 63fc 	bic.w	r3, r3, #2016	; 0x7e0
 80249c4:	4313      	orrs	r3, r2
 80249c6:	f8a9 3000 	strh.w	r3, [r9]
 80249ca:	9b1b      	ldr	r3, [sp, #108]	; 0x6c
 80249cc:	441c      	add	r4, r3
 80249ce:	9b1c      	ldr	r3, [sp, #112]	; 0x70
 80249d0:	f109 0902 	add.w	r9, r9, #2
 80249d4:	441e      	add	r6, r3
 80249d6:	f10a 3aff 	add.w	sl, sl, #4294967295
 80249da:	e784      	b.n	80248e6 <_ZN8touchgfx8LCD16bpp54TextureMapper_RGB565_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x80>
 80249dc:	9b1b      	ldr	r3, [sp, #108]	; 0x6c
 80249de:	441c      	add	r4, r3
 80249e0:	9b1c      	ldr	r3, [sp, #112]	; 0x70
 80249e2:	3d01      	subs	r5, #1
 80249e4:	441e      	add	r6, r3
 80249e6:	3702      	adds	r7, #2
 80249e8:	e761      	b.n	80248ae <_ZN8touchgfx8LCD16bpp54TextureMapper_RGB565_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x48>
 80249ea:	d01d      	beq.n	8024a28 <_ZN8touchgfx8LCD16bpp54TextureMapper_RGB565_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x1c2>
 80249ec:	981b      	ldr	r0, [sp, #108]	; 0x6c
 80249ee:	1e6b      	subs	r3, r5, #1
 80249f0:	fb00 4003 	mla	r0, r0, r3, r4
 80249f4:	1400      	asrs	r0, r0, #16
 80249f6:	f53f af74 	bmi.w	80248e2 <_ZN8touchgfx8LCD16bpp54TextureMapper_RGB565_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x7c>
 80249fa:	3901      	subs	r1, #1
 80249fc:	4288      	cmp	r0, r1
 80249fe:	f6bf af70 	bge.w	80248e2 <_ZN8touchgfx8LCD16bpp54TextureMapper_RGB565_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x7c>
 8024a02:	991c      	ldr	r1, [sp, #112]	; 0x70
 8024a04:	fb01 6303 	mla	r3, r1, r3, r6
 8024a08:	141b      	asrs	r3, r3, #16
 8024a0a:	f53f af6a 	bmi.w	80248e2 <_ZN8touchgfx8LCD16bpp54TextureMapper_RGB565_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x7c>
 8024a0e:	3a01      	subs	r2, #1
 8024a10:	4293      	cmp	r3, r2
 8024a12:	f6bf af66 	bge.w	80248e2 <_ZN8touchgfx8LCD16bpp54TextureMapper_RGB565_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x7c>
 8024a16:	46a9      	mov	r9, r5
 8024a18:	46ba      	mov	sl, r7
 8024a1a:	f1b9 0f00 	cmp.w	r9, #0
 8024a1e:	dc5a      	bgt.n	8024ad6 <_ZN8touchgfx8LCD16bpp54TextureMapper_RGB565_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x270>
 8024a20:	ea25 75e5 	bic.w	r5, r5, r5, asr #31
 8024a24:	eb07 0745 	add.w	r7, r7, r5, lsl #1
 8024a28:	9b07      	ldr	r3, [sp, #28]
 8024a2a:	2b00      	cmp	r3, #0
 8024a2c:	f340 80b8 	ble.w	8024ba0 <_ZN8touchgfx8LCD16bpp54TextureMapper_RGB565_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x33a>
 8024a30:	ee30 0a04 	vadd.f32	s0, s0, s8
 8024a34:	eeb7 7a00 	vmov.f32	s14, #112	; 0x3f800000  1.0
 8024a38:	eec7 7a00 	vdiv.f32	s15, s14, s0
 8024a3c:	9b18      	ldr	r3, [sp, #96]	; 0x60
 8024a3e:	ee70 0aa4 	vadd.f32	s1, s1, s9
 8024a42:	ee31 1a05 	vadd.f32	s2, s2, s10
 8024a46:	ee20 7aa7 	vmul.f32	s14, s1, s15
 8024a4a:	eef0 6a62 	vmov.f32	s13, s5
 8024a4e:	ee61 7a27 	vmul.f32	s15, s2, s15
 8024a52:	eefe 6ac8 	vcvt.s32.f32	s13, s13, #16
 8024a56:	ee77 2a62 	vsub.f32	s5, s14, s5
 8024a5a:	ee16 4a90 	vmov	r4, s13
 8024a5e:	eefe 2ac8 	vcvt.s32.f32	s5, s5, #16
 8024a62:	eef0 6a43 	vmov.f32	s13, s6
 8024a66:	ee37 3ac3 	vsub.f32	s6, s15, s6
 8024a6a:	ee12 2a90 	vmov	r2, s5
 8024a6e:	eebe 3ac8 	vcvt.s32.f32	s6, s6, #16
 8024a72:	fb92 f3f3 	sdiv	r3, r2, r3
 8024a76:	ee13 2a10 	vmov	r2, s6
 8024a7a:	931b      	str	r3, [sp, #108]	; 0x6c
 8024a7c:	9b18      	ldr	r3, [sp, #96]	; 0x60
 8024a7e:	fb92 f3f3 	sdiv	r3, r2, r3
 8024a82:	931c      	str	r3, [sp, #112]	; 0x70
 8024a84:	9b07      	ldr	r3, [sp, #28]
 8024a86:	9a0c      	ldr	r2, [sp, #48]	; 0x30
 8024a88:	3b01      	subs	r3, #1
 8024a8a:	eefe 6ac8 	vcvt.s32.f32	s13, s13, #16
 8024a8e:	9307      	str	r3, [sp, #28]
 8024a90:	9b18      	ldr	r3, [sp, #96]	; 0x60
 8024a92:	ee16 6a90 	vmov	r6, s13
 8024a96:	bf14      	ite	ne
 8024a98:	461d      	movne	r5, r3
 8024a9a:	4615      	moveq	r5, r2
 8024a9c:	eeb0 3a67 	vmov.f32	s6, s15
 8024aa0:	eef0 2a47 	vmov.f32	s5, s14
 8024aa4:	e6f4      	b.n	8024890 <_ZN8touchgfx8LCD16bpp54TextureMapper_RGB565_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x2a>
 8024aa6:	f111 0b01 	adds.w	fp, r1, #1
 8024aaa:	d48e      	bmi.n	80249ca <_ZN8touchgfx8LCD16bpp54TextureMapper_RGB565_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x164>
 8024aac:	45de      	cmp	lr, fp
 8024aae:	db8c      	blt.n	80249ca <_ZN8touchgfx8LCD16bpp54TextureMapper_RGB565_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x164>
 8024ab0:	f110 0b01 	adds.w	fp, r0, #1
 8024ab4:	d489      	bmi.n	80249ca <_ZN8touchgfx8LCD16bpp54TextureMapper_RGB565_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x164>
 8024ab6:	455b      	cmp	r3, fp
 8024ab8:	db87      	blt.n	80249ca <_ZN8touchgfx8LCD16bpp54TextureMapper_RGB565_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x164>
 8024aba:	b21b      	sxth	r3, r3
 8024abc:	e9cd 1001 	strd	r1, r0, [sp, #4]
 8024ac0:	e9cd 2c03 	strd	r2, ip, [sp, #12]
 8024ac4:	9300      	str	r3, [sp, #0]
 8024ac6:	4642      	mov	r2, r8
 8024ac8:	fa0f f38e 	sxth.w	r3, lr
 8024acc:	4649      	mov	r1, r9
 8024ace:	980d      	ldr	r0, [sp, #52]	; 0x34
 8024ad0:	f7ff fe4d 	bl	802476e <_ZNK8touchgfx8LCD16bpp54TextureMapper_RGB565_Opaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKtssiihh>
 8024ad4:	e779      	b.n	80249ca <_ZN8touchgfx8LCD16bpp54TextureMapper_RGB565_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x164>
 8024ad6:	9b20      	ldr	r3, [sp, #128]	; 0x80
 8024ad8:	f9b3 3008 	ldrsh.w	r3, [r3, #8]
 8024adc:	1420      	asrs	r0, r4, #16
 8024ade:	1431      	asrs	r1, r6, #16
 8024ae0:	fb03 0101 	mla	r1, r3, r1, r0
 8024ae4:	eb08 0041 	add.w	r0, r8, r1, lsl #1
 8024ae8:	f3c6 3e03 	ubfx	lr, r6, #12, #4
 8024aec:	f838 c011 	ldrh.w	ip, [r8, r1, lsl #1]
 8024af0:	8841      	ldrh	r1, [r0, #2]
 8024af2:	f3c4 3203 	ubfx	r2, r4, #12, #4
 8024af6:	f1be 0f00 	cmp.w	lr, #0
 8024afa:	d00b      	beq.n	8024b14 <_ZN8touchgfx8LCD16bpp54TextureMapper_RGB565_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x2ae>
 8024afc:	f103 4300 	add.w	r3, r3, #2147483648	; 0x80000000
 8024b00:	3b01      	subs	r3, #1
 8024b02:	005b      	lsls	r3, r3, #1
 8024b04:	3302      	adds	r3, #2
 8024b06:	eb00 0b03 	add.w	fp, r0, r3
 8024b0a:	5ac3      	ldrh	r3, [r0, r3]
 8024b0c:	930a      	str	r3, [sp, #40]	; 0x28
 8024b0e:	f8bb 3002 	ldrh.w	r3, [fp, #2]
 8024b12:	930b      	str	r3, [sp, #44]	; 0x2c
 8024b14:	ea4f 400c 	mov.w	r0, ip, lsl #16
 8024b18:	fb12 f30e 	smulbb	r3, r2, lr
 8024b1c:	f42c 6cfc 	bic.w	ip, ip, #2016	; 0x7e0
 8024b20:	ea4f 4b01 	mov.w	fp, r1, lsl #16
 8024b24:	f000 60fc 	and.w	r0, r0, #132120576	; 0x7e00000
 8024b28:	10db      	asrs	r3, r3, #3
 8024b2a:	ea40 000c 	orr.w	r0, r0, ip
 8024b2e:	f00b 6bfc 	and.w	fp, fp, #132120576	; 0x7e00000
 8024b32:	f1ce 0c10 	rsb	ip, lr, #16
 8024b36:	f421 61fc 	bic.w	r1, r1, #2016	; 0x7e0
 8024b3a:	ebac 0c02 	sub.w	ip, ip, r2
 8024b3e:	ea4b 0101 	orr.w	r1, fp, r1
 8024b42:	ebc3 0242 	rsb	r2, r3, r2, lsl #1
 8024b46:	4351      	muls	r1, r2
 8024b48:	9a0b      	ldr	r2, [sp, #44]	; 0x2c
 8024b4a:	eb03 0c4c 	add.w	ip, r3, ip, lsl #1
 8024b4e:	fb0c 1c00 	mla	ip, ip, r0, r1
 8024b52:	ea4f 4b02 	mov.w	fp, r2, lsl #16
 8024b56:	f422 60fc 	bic.w	r0, r2, #2016	; 0x7e0
 8024b5a:	9a0a      	ldr	r2, [sp, #40]	; 0x28
 8024b5c:	990a      	ldr	r1, [sp, #40]	; 0x28
 8024b5e:	f00b 6bfc 	and.w	fp, fp, #132120576	; 0x7e00000
 8024b62:	0412      	lsls	r2, r2, #16
 8024b64:	ea4b 0000 	orr.w	r0, fp, r0
 8024b68:	f002 62fc 	and.w	r2, r2, #132120576	; 0x7e00000
 8024b6c:	f421 6bfc 	bic.w	fp, r1, #2016	; 0x7e0
 8024b70:	fb03 c000 	mla	r0, r3, r0, ip
 8024b74:	ea42 0b0b 	orr.w	fp, r2, fp
 8024b78:	ebc3 034e 	rsb	r3, r3, lr, lsl #1
 8024b7c:	fb03 000b 	mla	r0, r3, fp, r0
 8024b80:	0d43      	lsrs	r3, r0, #21
 8024b82:	0940      	lsrs	r0, r0, #5
 8024b84:	f403 63fc 	and.w	r3, r3, #2016	; 0x7e0
 8024b88:	f420 60fc 	bic.w	r0, r0, #2016	; 0x7e0
 8024b8c:	4318      	orrs	r0, r3
 8024b8e:	9b1b      	ldr	r3, [sp, #108]	; 0x6c
 8024b90:	f82a 0b02 	strh.w	r0, [sl], #2
 8024b94:	441c      	add	r4, r3
 8024b96:	9b1c      	ldr	r3, [sp, #112]	; 0x70
 8024b98:	f109 39ff 	add.w	r9, r9, #4294967295
 8024b9c:	441e      	add	r6, r3
 8024b9e:	e73c      	b.n	8024a1a <_ZN8touchgfx8LCD16bpp54TextureMapper_RGB565_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x1b4>
 8024ba0:	b00f      	add	sp, #60	; 0x3c
 8024ba2:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}

08024ba6 <_ZNK8touchgfx8LCD16bpp57TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKmssiihhh>:
 8024ba6:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 8024baa:	b085      	sub	sp, #20
 8024bac:	e9dd 740f 	ldrd	r7, r4, [sp, #60]	; 0x3c
 8024bb0:	9102      	str	r1, [sp, #8]
 8024bb2:	2c00      	cmp	r4, #0
 8024bb4:	fb04 7103 	mla	r1, r4, r3, r7
 8024bb8:	f9bd e038 	ldrsh.w	lr, [sp, #56]	; 0x38
 8024bbc:	f89d 6044 	ldrb.w	r6, [sp, #68]	; 0x44
 8024bc0:	f89d 0048 	ldrb.w	r0, [sp, #72]	; 0x48
 8024bc4:	eb02 0c81 	add.w	ip, r2, r1, lsl #2
 8024bc8:	f2c0 811b 	blt.w	8024e02 <_ZNK8touchgfx8LCD16bpp57TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKmssiihhh+0x25c>
 8024bcc:	45a6      	cmp	lr, r4
 8024bce:	f340 8118 	ble.w	8024e02 <_ZNK8touchgfx8LCD16bpp57TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKmssiihhh+0x25c>
 8024bd2:	2f00      	cmp	r7, #0
 8024bd4:	f2c0 8113 	blt.w	8024dfe <_ZNK8touchgfx8LCD16bpp57TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKmssiihhh+0x258>
 8024bd8:	42bb      	cmp	r3, r7
 8024bda:	f340 8110 	ble.w	8024dfe <_ZNK8touchgfx8LCD16bpp57TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKmssiihhh+0x258>
 8024bde:	f852 5021 	ldr.w	r5, [r2, r1, lsl #2]
 8024be2:	1c7a      	adds	r2, r7, #1
 8024be4:	f100 8110 	bmi.w	8024e08 <_ZNK8touchgfx8LCD16bpp57TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKmssiihhh+0x262>
 8024be8:	4293      	cmp	r3, r2
 8024bea:	f340 810d 	ble.w	8024e08 <_ZNK8touchgfx8LCD16bpp57TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKmssiihhh+0x262>
 8024bee:	2e00      	cmp	r6, #0
 8024bf0:	f000 810c 	beq.w	8024e0c <_ZNK8touchgfx8LCD16bpp57TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKmssiihhh+0x266>
 8024bf4:	f8dc 1004 	ldr.w	r1, [ip, #4]
 8024bf8:	3401      	adds	r4, #1
 8024bfa:	f100 810b 	bmi.w	8024e14 <_ZNK8touchgfx8LCD16bpp57TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKmssiihhh+0x26e>
 8024bfe:	45a6      	cmp	lr, r4
 8024c00:	f340 8108 	ble.w	8024e14 <_ZNK8touchgfx8LCD16bpp57TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKmssiihhh+0x26e>
 8024c04:	2800      	cmp	r0, #0
 8024c06:	f000 8108 	beq.w	8024e1a <_ZNK8touchgfx8LCD16bpp57TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKmssiihhh+0x274>
 8024c0a:	2f00      	cmp	r7, #0
 8024c0c:	f2c0 8100 	blt.w	8024e10 <_ZNK8touchgfx8LCD16bpp57TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKmssiihhh+0x26a>
 8024c10:	42bb      	cmp	r3, r7
 8024c12:	f340 80fd 	ble.w	8024e10 <_ZNK8touchgfx8LCD16bpp57TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKmssiihhh+0x26a>
 8024c16:	f85c 4023 	ldr.w	r4, [ip, r3, lsl #2]
 8024c1a:	3701      	adds	r7, #1
 8024c1c:	f100 8100 	bmi.w	8024e20 <_ZNK8touchgfx8LCD16bpp57TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKmssiihhh+0x27a>
 8024c20:	42bb      	cmp	r3, r7
 8024c22:	f340 80fd 	ble.w	8024e20 <_ZNK8touchgfx8LCD16bpp57TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKmssiihhh+0x27a>
 8024c26:	2e00      	cmp	r6, #0
 8024c28:	f000 80fc 	beq.w	8024e24 <_ZNK8touchgfx8LCD16bpp57TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKmssiihhh+0x27e>
 8024c2c:	3301      	adds	r3, #1
 8024c2e:	f85c 2023 	ldr.w	r2, [ip, r3, lsl #2]
 8024c32:	b2b6      	uxth	r6, r6
 8024c34:	b280      	uxth	r0, r0
 8024c36:	fb00 fe06 	mul.w	lr, r0, r6
 8024c3a:	ebce 1000 	rsb	r0, lr, r0, lsl #4
 8024c3e:	0136      	lsls	r6, r6, #4
 8024c40:	eba6 070e 	sub.w	r7, r6, lr
 8024c44:	b280      	uxth	r0, r0
 8024c46:	f5c6 7380 	rsb	r3, r6, #256	; 0x100
 8024c4a:	ea4f 6a11 	mov.w	sl, r1, lsr #24
 8024c4e:	b2bf      	uxth	r7, r7
 8024c50:	1a1b      	subs	r3, r3, r0
 8024c52:	ea4f 6b15 	mov.w	fp, r5, lsr #24
 8024c56:	b29b      	uxth	r3, r3
 8024c58:	fb0a f607 	mul.w	r6, sl, r7
 8024c5c:	ea4f 6914 	mov.w	r9, r4, lsr #24
 8024c60:	fb0b 6603 	mla	r6, fp, r3, r6
 8024c64:	ea4f 6812 	mov.w	r8, r2, lsr #24
 8024c68:	fb00 6609 	mla	r6, r0, r9, r6
 8024c6c:	fb0e 6608 	mla	r6, lr, r8, r6
 8024c70:	f3c6 2607 	ubfx	r6, r6, #8, #8
 8024c74:	9600      	str	r6, [sp, #0]
 8024c76:	2e00      	cmp	r6, #0
 8024c78:	f000 80be 	beq.w	8024df8 <_ZNK8touchgfx8LCD16bpp57TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKmssiihhh+0x252>
 8024c7c:	f005 1cff 	and.w	ip, r5, #16711935	; 0xff00ff
 8024c80:	fb0b fc0c 	mul.w	ip, fp, ip
 8024c84:	f405 457f 	and.w	r5, r5, #65280	; 0xff00
 8024c88:	fb0b f505 	mul.w	r5, fp, r5
 8024c8c:	ea4f 2b1c 	mov.w	fp, ip, lsr #8
 8024c90:	f00b 1bff 	and.w	fp, fp, #16711935	; 0xff00ff
 8024c94:	f10c 1c01 	add.w	ip, ip, #65537	; 0x10001
 8024c98:	44dc      	add	ip, fp
 8024c9a:	ea4f 2c1c 	mov.w	ip, ip, lsr #8
 8024c9e:	9501      	str	r5, [sp, #4]
 8024ca0:	f00c 15ff 	and.w	r5, ip, #16711935	; 0xff00ff
 8024ca4:	9503      	str	r5, [sp, #12]
 8024ca6:	9d01      	ldr	r5, [sp, #4]
 8024ca8:	9e02      	ldr	r6, [sp, #8]
 8024caa:	f505 7c80 	add.w	ip, r5, #256	; 0x100
 8024cae:	eb0c 2515 	add.w	r5, ip, r5, lsr #8
 8024cb2:	f001 1cff 	and.w	ip, r1, #16711935	; 0xff00ff
 8024cb6:	fb0a fc0c 	mul.w	ip, sl, ip
 8024cba:	ea4f 2b15 	mov.w	fp, r5, lsr #8
 8024cbe:	ea4f 251c 	mov.w	r5, ip, lsr #8
 8024cc2:	f005 15ff 	and.w	r5, r5, #16711935	; 0xff00ff
 8024cc6:	f10c 1c01 	add.w	ip, ip, #65537	; 0x10001
 8024cca:	4465      	add	r5, ip
 8024ccc:	f004 1cff 	and.w	ip, r4, #16711935	; 0xff00ff
 8024cd0:	f404 447f 	and.w	r4, r4, #65280	; 0xff00
 8024cd4:	fb09 fc0c 	mul.w	ip, r9, ip
 8024cd8:	fb09 f904 	mul.w	r9, r9, r4
 8024cdc:	f509 7480 	add.w	r4, r9, #256	; 0x100
 8024ce0:	eb04 2919 	add.w	r9, r4, r9, lsr #8
 8024ce4:	f002 14ff 	and.w	r4, r2, #16711935	; 0xff00ff
 8024ce8:	fb08 f404 	mul.w	r4, r8, r4
 8024cec:	f401 417f 	and.w	r1, r1, #65280	; 0xff00
 8024cf0:	f402 427f 	and.w	r2, r2, #65280	; 0xff00
 8024cf4:	fb08 f802 	mul.w	r8, r8, r2
 8024cf8:	fb0a fa01 	mul.w	sl, sl, r1
 8024cfc:	0a22      	lsrs	r2, r4, #8
 8024cfe:	f50a 7180 	add.w	r1, sl, #256	; 0x100
 8024d02:	f002 12ff 	and.w	r2, r2, #16711935	; 0xff00ff
 8024d06:	f104 1401 	add.w	r4, r4, #65537	; 0x10001
 8024d0a:	eb01 2a1a 	add.w	sl, r1, sl, lsr #8
 8024d0e:	4414      	add	r4, r2
 8024d10:	ea4f 211c 	mov.w	r1, ip, lsr #8
 8024d14:	f508 7280 	add.w	r2, r8, #256	; 0x100
 8024d18:	0a2d      	lsrs	r5, r5, #8
 8024d1a:	eb02 2818 	add.w	r8, r2, r8, lsr #8
 8024d1e:	f005 15ff 	and.w	r5, r5, #16711935	; 0xff00ff
 8024d22:	9a03      	ldr	r2, [sp, #12]
 8024d24:	8836      	ldrh	r6, [r6, #0]
 8024d26:	f001 11ff 	and.w	r1, r1, #16711935	; 0xff00ff
 8024d2a:	f10c 1c01 	add.w	ip, ip, #65537	; 0x10001
 8024d2e:	437d      	muls	r5, r7
 8024d30:	4461      	add	r1, ip
 8024d32:	0a24      	lsrs	r4, r4, #8
 8024d34:	fb02 5503 	mla	r5, r2, r3, r5
 8024d38:	0a09      	lsrs	r1, r1, #8
 8024d3a:	f004 14ff 	and.w	r4, r4, #16711935	; 0xff00ff
 8024d3e:	fb04 540e 	mla	r4, r4, lr, r5
 8024d42:	f001 11ff 	and.w	r1, r1, #16711935	; 0xff00ff
 8024d46:	fb01 4100 	mla	r1, r1, r0, r4
 8024d4a:	ea4f 2a1a 	mov.w	sl, sl, lsr #8
 8024d4e:	0a09      	lsrs	r1, r1, #8
 8024d50:	f40a 4a7f 	and.w	sl, sl, #65280	; 0xff00
 8024d54:	f001 14ff 	and.w	r4, r1, #16711935	; 0xff00ff
 8024d58:	fb07 f70a 	mul.w	r7, r7, sl
 8024d5c:	ea4f 2818 	mov.w	r8, r8, lsr #8
 8024d60:	f40b 417f 	and.w	r1, fp, #65280	; 0xff00
 8024d64:	fb03 7101 	mla	r1, r3, r1, r7
 8024d68:	ea4f 2919 	mov.w	r9, r9, lsr #8
 8024d6c:	f408 487f 	and.w	r8, r8, #65280	; 0xff00
 8024d70:	fb0e 1e08 	mla	lr, lr, r8, r1
 8024d74:	f409 417f 	and.w	r1, r9, #65280	; 0xff00
 8024d78:	fb00 e101 	mla	r1, r0, r1, lr
 8024d7c:	f89d 004c 	ldrb.w	r0, [sp, #76]	; 0x4c
 8024d80:	9a00      	ldr	r2, [sp, #0]
 8024d82:	b287      	uxth	r7, r0
 8024d84:	437a      	muls	r2, r7
 8024d86:	0a09      	lsrs	r1, r1, #8
 8024d88:	1c53      	adds	r3, r2, #1
 8024d8a:	f401 417f 	and.w	r1, r1, #65280	; 0xff00
 8024d8e:	4321      	orrs	r1, r4
 8024d90:	eb03 2312 	add.w	r3, r3, r2, lsr #8
 8024d94:	1235      	asrs	r5, r6, #8
 8024d96:	0c0a      	lsrs	r2, r1, #16
 8024d98:	ea6f 2313 	mvn.w	r3, r3, lsr #8
 8024d9c:	b2db      	uxtb	r3, r3
 8024d9e:	fb12 f207 	smulbb	r2, r2, r7
 8024da2:	f005 05f8 	and.w	r5, r5, #248	; 0xf8
 8024da6:	fb05 2503 	mla	r5, r5, r3, r2
 8024daa:	f3c1 2407 	ubfx	r4, r1, #8, #8
 8024dae:	10f2      	asrs	r2, r6, #3
 8024db0:	b2c8      	uxtb	r0, r1
 8024db2:	00f6      	lsls	r6, r6, #3
 8024db4:	fb14 f407 	smulbb	r4, r4, r7
 8024db8:	f002 02fc 	and.w	r2, r2, #252	; 0xfc
 8024dbc:	b2f6      	uxtb	r6, r6
 8024dbe:	fb10 f007 	smulbb	r0, r0, r7
 8024dc2:	fb02 4203 	mla	r2, r2, r3, r4
 8024dc6:	b2ad      	uxth	r5, r5
 8024dc8:	fb06 0303 	mla	r3, r6, r3, r0
 8024dcc:	b299      	uxth	r1, r3
 8024dce:	b294      	uxth	r4, r2
 8024dd0:	1c6b      	adds	r3, r5, #1
 8024dd2:	eb03 2515 	add.w	r5, r3, r5, lsr #8
 8024dd6:	1c62      	adds	r2, r4, #1
 8024dd8:	1c4b      	adds	r3, r1, #1
 8024dda:	eb03 2311 	add.w	r3, r3, r1, lsr #8
 8024dde:	eb02 2214 	add.w	r2, r2, r4, lsr #8
 8024de2:	f405 4578 	and.w	r5, r5, #63488	; 0xf800
 8024de6:	f3c3 23c4 	ubfx	r3, r3, #11, #5
 8024dea:	0952      	lsrs	r2, r2, #5
 8024dec:	f402 62fc 	and.w	r2, r2, #2016	; 0x7e0
 8024df0:	432b      	orrs	r3, r5
 8024df2:	4313      	orrs	r3, r2
 8024df4:	9a02      	ldr	r2, [sp, #8]
 8024df6:	8013      	strh	r3, [r2, #0]
 8024df8:	b005      	add	sp, #20
 8024dfa:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
 8024dfe:	2500      	movs	r5, #0
 8024e00:	e6ef      	b.n	8024be2 <_ZNK8touchgfx8LCD16bpp57TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKmssiihhh+0x3c>
 8024e02:	2100      	movs	r1, #0
 8024e04:	460d      	mov	r5, r1
 8024e06:	e6f7      	b.n	8024bf8 <_ZNK8touchgfx8LCD16bpp57TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKmssiihhh+0x52>
 8024e08:	2100      	movs	r1, #0
 8024e0a:	e6f5      	b.n	8024bf8 <_ZNK8touchgfx8LCD16bpp57TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKmssiihhh+0x52>
 8024e0c:	4631      	mov	r1, r6
 8024e0e:	e6f3      	b.n	8024bf8 <_ZNK8touchgfx8LCD16bpp57TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKmssiihhh+0x52>
 8024e10:	2400      	movs	r4, #0
 8024e12:	e702      	b.n	8024c1a <_ZNK8touchgfx8LCD16bpp57TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKmssiihhh+0x74>
 8024e14:	2200      	movs	r2, #0
 8024e16:	4614      	mov	r4, r2
 8024e18:	e70b      	b.n	8024c32 <_ZNK8touchgfx8LCD16bpp57TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKmssiihhh+0x8c>
 8024e1a:	4602      	mov	r2, r0
 8024e1c:	4604      	mov	r4, r0
 8024e1e:	e708      	b.n	8024c32 <_ZNK8touchgfx8LCD16bpp57TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKmssiihhh+0x8c>
 8024e20:	2200      	movs	r2, #0
 8024e22:	e706      	b.n	8024c32 <_ZNK8touchgfx8LCD16bpp57TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKmssiihhh+0x8c>
 8024e24:	4632      	mov	r2, r6
 8024e26:	e704      	b.n	8024c32 <_ZNK8touchgfx8LCD16bpp57TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKmssiihhh+0x8c>

08024e28 <_ZN8touchgfx8LCD16bpp57TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff>:
 8024e28:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 8024e2c:	b09d      	sub	sp, #116	; 0x74
 8024e2e:	e9dd 4627 	ldrd	r4, r6, [sp, #156]	; 0x9c
 8024e32:	9219      	str	r2, [sp, #100]	; 0x64
 8024e34:	9307      	str	r3, [sp, #28]
 8024e36:	9a2b      	ldr	r2, [sp, #172]	; 0xac
 8024e38:	f89d 30bc 	ldrb.w	r3, [sp, #188]	; 0xbc
 8024e3c:	931a      	str	r3, [sp, #104]	; 0x68
 8024e3e:	9117      	str	r1, [sp, #92]	; 0x5c
 8024e40:	e9dd 132c 	ldrd	r1, r3, [sp, #176]	; 0xb0
 8024e44:	901b      	str	r0, [sp, #108]	; 0x6c
 8024e46:	6850      	ldr	r0, [r2, #4]
 8024e48:	6812      	ldr	r2, [r2, #0]
 8024e4a:	fb00 1303 	mla	r3, r0, r3, r1
 8024e4e:	eb02 0343 	add.w	r3, r2, r3, lsl #1
 8024e52:	930a      	str	r3, [sp, #40]	; 0x28
 8024e54:	9b2e      	ldr	r3, [sp, #184]	; 0xb8
 8024e56:	681b      	ldr	r3, [r3, #0]
 8024e58:	9310      	str	r3, [sp, #64]	; 0x40
 8024e5a:	f8bd 3068 	ldrh.w	r3, [sp, #104]	; 0x68
 8024e5e:	930b      	str	r3, [sp, #44]	; 0x2c
 8024e60:	9b17      	ldr	r3, [sp, #92]	; 0x5c
 8024e62:	2b00      	cmp	r3, #0
 8024e64:	dc03      	bgt.n	8024e6e <_ZN8touchgfx8LCD16bpp57TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x46>
 8024e66:	9b19      	ldr	r3, [sp, #100]	; 0x64
 8024e68:	2b00      	cmp	r3, #0
 8024e6a:	f340 8375 	ble.w	8025558 <_ZN8touchgfx8LCD16bpp57TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x730>
 8024e6e:	9b2e      	ldr	r3, [sp, #184]	; 0xb8
 8024e70:	f9b3 1008 	ldrsh.w	r1, [r3, #8]
 8024e74:	f9b3 200c 	ldrsh.w	r2, [r3, #12]
 8024e78:	1e48      	subs	r0, r1, #1
 8024e7a:	1e57      	subs	r7, r2, #1
 8024e7c:	9b07      	ldr	r3, [sp, #28]
 8024e7e:	2b00      	cmp	r3, #0
 8024e80:	f340 818e 	ble.w	80251a0 <_ZN8touchgfx8LCD16bpp57TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x378>
 8024e84:	ea5f 4c24 	movs.w	ip, r4, asr #16
 8024e88:	ea4f 4326 	mov.w	r3, r6, asr #16
 8024e8c:	d406      	bmi.n	8024e9c <_ZN8touchgfx8LCD16bpp57TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x74>
 8024e8e:	4584      	cmp	ip, r0
 8024e90:	da04      	bge.n	8024e9c <_ZN8touchgfx8LCD16bpp57TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x74>
 8024e92:	2b00      	cmp	r3, #0
 8024e94:	db02      	blt.n	8024e9c <_ZN8touchgfx8LCD16bpp57TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x74>
 8024e96:	42bb      	cmp	r3, r7
 8024e98:	f2c0 8183 	blt.w	80251a2 <_ZN8touchgfx8LCD16bpp57TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x37a>
 8024e9c:	f11c 0c01 	adds.w	ip, ip, #1
 8024ea0:	f100 8173 	bmi.w	802518a <_ZN8touchgfx8LCD16bpp57TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x362>
 8024ea4:	4561      	cmp	r1, ip
 8024ea6:	f2c0 8170 	blt.w	802518a <_ZN8touchgfx8LCD16bpp57TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x362>
 8024eaa:	3301      	adds	r3, #1
 8024eac:	f100 816d 	bmi.w	802518a <_ZN8touchgfx8LCD16bpp57TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x362>
 8024eb0:	429a      	cmp	r2, r3
 8024eb2:	f2c0 816a 	blt.w	802518a <_ZN8touchgfx8LCD16bpp57TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x362>
 8024eb6:	9b07      	ldr	r3, [sp, #28]
 8024eb8:	9f0a      	ldr	r7, [sp, #40]	; 0x28
 8024eba:	9318      	str	r3, [sp, #96]	; 0x60
 8024ebc:	9b18      	ldr	r3, [sp, #96]	; 0x60
 8024ebe:	2b00      	cmp	r3, #0
 8024ec0:	f340 818c 	ble.w	80251dc <_ZN8touchgfx8LCD16bpp57TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x3b4>
 8024ec4:	9a2e      	ldr	r2, [sp, #184]	; 0xb8
 8024ec6:	9b2e      	ldr	r3, [sp, #184]	; 0xb8
 8024ec8:	f8d2 e00c 	ldr.w	lr, [r2, #12]
 8024ecc:	689b      	ldr	r3, [r3, #8]
 8024ece:	1422      	asrs	r2, r4, #16
 8024ed0:	ea4f 4c26 	mov.w	ip, r6, asr #16
 8024ed4:	f3c4 3003 	ubfx	r0, r4, #12, #4
 8024ed8:	f3c6 3103 	ubfx	r1, r6, #12, #4
 8024edc:	f100 81cd 	bmi.w	802527a <_ZN8touchgfx8LCD16bpp57TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x452>
 8024ee0:	f103 38ff 	add.w	r8, r3, #4294967295
 8024ee4:	4542      	cmp	r2, r8
 8024ee6:	f280 81c8 	bge.w	802527a <_ZN8touchgfx8LCD16bpp57TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x452>
 8024eea:	f1bc 0f00 	cmp.w	ip, #0
 8024eee:	f2c0 81c4 	blt.w	802527a <_ZN8touchgfx8LCD16bpp57TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x452>
 8024ef2:	f10e 38ff 	add.w	r8, lr, #4294967295
 8024ef6:	45c4      	cmp	ip, r8
 8024ef8:	f280 81bf 	bge.w	802527a <_ZN8touchgfx8LCD16bpp57TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x452>
 8024efc:	b21b      	sxth	r3, r3
 8024efe:	fb0c 2203 	mla	r2, ip, r3, r2
 8024f02:	9d10      	ldr	r5, [sp, #64]	; 0x40
 8024f04:	eb05 0882 	add.w	r8, r5, r2, lsl #2
 8024f08:	f855 2022 	ldr.w	r2, [r5, r2, lsl #2]
 8024f0c:	ea4f 6e12 	mov.w	lr, r2, lsr #24
 8024f10:	2800      	cmp	r0, #0
 8024f12:	f000 81a9 	beq.w	8025268 <_ZN8touchgfx8LCD16bpp57TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x440>
 8024f16:	f8d8 5004 	ldr.w	r5, [r8, #4]
 8024f1a:	950c      	str	r5, [sp, #48]	; 0x30
 8024f1c:	0e2d      	lsrs	r5, r5, #24
 8024f1e:	9513      	str	r5, [sp, #76]	; 0x4c
 8024f20:	b181      	cbz	r1, 8024f44 <_ZN8touchgfx8LCD16bpp57TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x11c>
 8024f22:	f103 4380 	add.w	r3, r3, #1073741824	; 0x40000000
 8024f26:	3b01      	subs	r3, #1
 8024f28:	009b      	lsls	r3, r3, #2
 8024f2a:	3304      	adds	r3, #4
 8024f2c:	eb08 0c03 	add.w	ip, r8, r3
 8024f30:	f858 3003 	ldr.w	r3, [r8, r3]
 8024f34:	9308      	str	r3, [sp, #32]
 8024f36:	0e1b      	lsrs	r3, r3, #24
 8024f38:	9311      	str	r3, [sp, #68]	; 0x44
 8024f3a:	f8dc 3004 	ldr.w	r3, [ip, #4]
 8024f3e:	930d      	str	r3, [sp, #52]	; 0x34
 8024f40:	0e1b      	lsrs	r3, r3, #24
 8024f42:	9314      	str	r3, [sp, #80]	; 0x50
 8024f44:	b280      	uxth	r0, r0
 8024f46:	b289      	uxth	r1, r1
 8024f48:	fb00 f901 	mul.w	r9, r0, r1
 8024f4c:	ebc9 1101 	rsb	r1, r9, r1, lsl #4
 8024f50:	0100      	lsls	r0, r0, #4
 8024f52:	eba0 0809 	sub.w	r8, r0, r9
 8024f56:	b289      	uxth	r1, r1
 8024f58:	f5c0 7380 	rsb	r3, r0, #256	; 0x100
 8024f5c:	9813      	ldr	r0, [sp, #76]	; 0x4c
 8024f5e:	9d11      	ldr	r5, [sp, #68]	; 0x44
 8024f60:	fa1f f888 	uxth.w	r8, r8
 8024f64:	1a5b      	subs	r3, r3, r1
 8024f66:	b29b      	uxth	r3, r3
 8024f68:	fb08 f000 	mul.w	r0, r8, r0
 8024f6c:	fb03 000e 	mla	r0, r3, lr, r0
 8024f70:	fb01 0005 	mla	r0, r1, r5, r0
 8024f74:	9d14      	ldr	r5, [sp, #80]	; 0x50
 8024f76:	fb09 0005 	mla	r0, r9, r5, r0
 8024f7a:	f3c0 2007 	ubfx	r0, r0, #8, #8
 8024f7e:	2800      	cmp	r0, #0
 8024f80:	f000 80fa 	beq.w	8025178 <_ZN8touchgfx8LCD16bpp57TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x350>
 8024f84:	f1be 0fff 	cmp.w	lr, #255	; 0xff
 8024f88:	d01b      	beq.n	8024fc2 <_ZN8touchgfx8LCD16bpp57TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x19a>
 8024f8a:	f002 1aff 	and.w	sl, r2, #16711935	; 0xff00ff
 8024f8e:	fb0e fa0a 	mul.w	sl, lr, sl
 8024f92:	f402 427f 	and.w	r2, r2, #65280	; 0xff00
 8024f96:	fb0e fe02 	mul.w	lr, lr, r2
 8024f9a:	ea4f 221a 	mov.w	r2, sl, lsr #8
 8024f9e:	f002 12ff 	and.w	r2, r2, #16711935	; 0xff00ff
 8024fa2:	f10a 1a01 	add.w	sl, sl, #65537	; 0x10001
 8024fa6:	f50e 7c80 	add.w	ip, lr, #256	; 0x100
 8024faa:	4452      	add	r2, sl
 8024fac:	eb0c 2c1e 	add.w	ip, ip, lr, lsr #8
 8024fb0:	0a12      	lsrs	r2, r2, #8
 8024fb2:	ea4f 2c1c 	mov.w	ip, ip, lsr #8
 8024fb6:	f002 12ff 	and.w	r2, r2, #16711935	; 0xff00ff
 8024fba:	f40c 4c7f 	and.w	ip, ip, #65280	; 0xff00
 8024fbe:	ea42 020c 	orr.w	r2, r2, ip
 8024fc2:	9d13      	ldr	r5, [sp, #76]	; 0x4c
 8024fc4:	2dff      	cmp	r5, #255	; 0xff
 8024fc6:	d021      	beq.n	802500c <_ZN8touchgfx8LCD16bpp57TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x1e4>
 8024fc8:	9d0c      	ldr	r5, [sp, #48]	; 0x30
 8024fca:	f005 1bff 	and.w	fp, r5, #16711935	; 0xff00ff
 8024fce:	9d13      	ldr	r5, [sp, #76]	; 0x4c
 8024fd0:	fb05 fb0b 	mul.w	fp, r5, fp
 8024fd4:	9d0c      	ldr	r5, [sp, #48]	; 0x30
 8024fd6:	f405 4a7f 	and.w	sl, r5, #65280	; 0xff00
 8024fda:	9d13      	ldr	r5, [sp, #76]	; 0x4c
 8024fdc:	ea4f 2e1b 	mov.w	lr, fp, lsr #8
 8024fe0:	fb05 fa0a 	mul.w	sl, r5, sl
 8024fe4:	f00e 1eff 	and.w	lr, lr, #16711935	; 0xff00ff
 8024fe8:	f10b 1b01 	add.w	fp, fp, #65537	; 0x10001
 8024fec:	f50a 7c80 	add.w	ip, sl, #256	; 0x100
 8024ff0:	44de      	add	lr, fp
 8024ff2:	eb0c 2a1a 	add.w	sl, ip, sl, lsr #8
 8024ff6:	ea4f 2e1e 	mov.w	lr, lr, lsr #8
 8024ffa:	ea4f 2a1a 	mov.w	sl, sl, lsr #8
 8024ffe:	f00e 1eff 	and.w	lr, lr, #16711935	; 0xff00ff
 8025002:	f40a 4a7f 	and.w	sl, sl, #65280	; 0xff00
 8025006:	ea4e 050a 	orr.w	r5, lr, sl
 802500a:	950c      	str	r5, [sp, #48]	; 0x30
 802500c:	9d11      	ldr	r5, [sp, #68]	; 0x44
 802500e:	2dff      	cmp	r5, #255	; 0xff
 8025010:	d021      	beq.n	8025056 <_ZN8touchgfx8LCD16bpp57TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x22e>
 8025012:	9d08      	ldr	r5, [sp, #32]
 8025014:	f005 1bff 	and.w	fp, r5, #16711935	; 0xff00ff
 8025018:	9d11      	ldr	r5, [sp, #68]	; 0x44
 802501a:	fb05 fb0b 	mul.w	fp, r5, fp
 802501e:	9d08      	ldr	r5, [sp, #32]
 8025020:	f405 4a7f 	and.w	sl, r5, #65280	; 0xff00
 8025024:	9d11      	ldr	r5, [sp, #68]	; 0x44
 8025026:	ea4f 2e1b 	mov.w	lr, fp, lsr #8
 802502a:	fb05 fa0a 	mul.w	sl, r5, sl
 802502e:	f00e 1eff 	and.w	lr, lr, #16711935	; 0xff00ff
 8025032:	f10b 1b01 	add.w	fp, fp, #65537	; 0x10001
 8025036:	f50a 7c80 	add.w	ip, sl, #256	; 0x100
 802503a:	44de      	add	lr, fp
 802503c:	eb0c 2a1a 	add.w	sl, ip, sl, lsr #8
 8025040:	ea4f 2e1e 	mov.w	lr, lr, lsr #8
 8025044:	ea4f 2a1a 	mov.w	sl, sl, lsr #8
 8025048:	f00e 1eff 	and.w	lr, lr, #16711935	; 0xff00ff
 802504c:	f40a 4a7f 	and.w	sl, sl, #65280	; 0xff00
 8025050:	ea4e 050a 	orr.w	r5, lr, sl
 8025054:	9508      	str	r5, [sp, #32]
 8025056:	9d14      	ldr	r5, [sp, #80]	; 0x50
 8025058:	2dff      	cmp	r5, #255	; 0xff
 802505a:	d021      	beq.n	80250a0 <_ZN8touchgfx8LCD16bpp57TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x278>
 802505c:	9d0d      	ldr	r5, [sp, #52]	; 0x34
 802505e:	f005 1bff 	and.w	fp, r5, #16711935	; 0xff00ff
 8025062:	9d14      	ldr	r5, [sp, #80]	; 0x50
 8025064:	fb05 fb0b 	mul.w	fp, r5, fp
 8025068:	9d0d      	ldr	r5, [sp, #52]	; 0x34
 802506a:	f405 4a7f 	and.w	sl, r5, #65280	; 0xff00
 802506e:	9d14      	ldr	r5, [sp, #80]	; 0x50
 8025070:	ea4f 2e1b 	mov.w	lr, fp, lsr #8
 8025074:	fb05 fa0a 	mul.w	sl, r5, sl
 8025078:	f00e 1eff 	and.w	lr, lr, #16711935	; 0xff00ff
 802507c:	f10b 1b01 	add.w	fp, fp, #65537	; 0x10001
 8025080:	f50a 7c80 	add.w	ip, sl, #256	; 0x100
 8025084:	44de      	add	lr, fp
 8025086:	eb0c 2a1a 	add.w	sl, ip, sl, lsr #8
 802508a:	ea4f 2e1e 	mov.w	lr, lr, lsr #8
 802508e:	ea4f 2a1a 	mov.w	sl, sl, lsr #8
 8025092:	f00e 1eff 	and.w	lr, lr, #16711935	; 0xff00ff
 8025096:	f40a 4a7f 	and.w	sl, sl, #65280	; 0xff00
 802509a:	ea4e 050a 	orr.w	r5, lr, sl
 802509e:	950d      	str	r5, [sp, #52]	; 0x34
 80250a0:	9d0c      	ldr	r5, [sp, #48]	; 0x30
 80250a2:	f005 1cff 	and.w	ip, r5, #16711935	; 0xff00ff
 80250a6:	9d08      	ldr	r5, [sp, #32]
 80250a8:	f002 1eff 	and.w	lr, r2, #16711935	; 0xff00ff
 80250ac:	fb08 fc0c 	mul.w	ip, r8, ip
 80250b0:	fb03 cc0e 	mla	ip, r3, lr, ip
 80250b4:	f005 1eff 	and.w	lr, r5, #16711935	; 0xff00ff
 80250b8:	9d0d      	ldr	r5, [sp, #52]	; 0x34
 80250ba:	fb01 cc0e 	mla	ip, r1, lr, ip
 80250be:	f005 1eff 	and.w	lr, r5, #16711935	; 0xff00ff
 80250c2:	9d0c      	ldr	r5, [sp, #48]	; 0x30
 80250c4:	fb09 cc0e 	mla	ip, r9, lr, ip
 80250c8:	f405 4e7f 	and.w	lr, r5, #65280	; 0xff00
 80250cc:	fb08 f80e 	mul.w	r8, r8, lr
 80250d0:	f402 427f 	and.w	r2, r2, #65280	; 0xff00
 80250d4:	fb03 8202 	mla	r2, r3, r2, r8
 80250d8:	9b08      	ldr	r3, [sp, #32]
 80250da:	9d0b      	ldr	r5, [sp, #44]	; 0x2c
 80250dc:	f403 4a7f 	and.w	sl, r3, #65280	; 0xff00
 80250e0:	9b0d      	ldr	r3, [sp, #52]	; 0x34
 80250e2:	fb01 220a 	mla	r2, r1, sl, r2
 80250e6:	f403 417f 	and.w	r1, r3, #65280	; 0xff00
 80250ea:	fb09 2901 	mla	r9, r9, r1, r2
 80250ee:	9a0b      	ldr	r2, [sp, #44]	; 0x2c
 80250f0:	883b      	ldrh	r3, [r7, #0]
 80250f2:	4342      	muls	r2, r0
 80250f4:	ea4f 2c1c 	mov.w	ip, ip, lsr #8
 80250f8:	ea4f 2919 	mov.w	r9, r9, lsr #8
 80250fc:	1c50      	adds	r0, r2, #1
 80250fe:	f00c 1cff 	and.w	ip, ip, #16711935	; 0xff00ff
 8025102:	f409 497f 	and.w	r9, r9, #65280	; 0xff00
 8025106:	ea4c 0c09 	orr.w	ip, ip, r9
 802510a:	eb00 2012 	add.w	r0, r0, r2, lsr #8
 802510e:	1219      	asrs	r1, r3, #8
 8025110:	ea4f 421c 	mov.w	r2, ip, lsr #16
 8025114:	ea6f 2010 	mvn.w	r0, r0, lsr #8
 8025118:	b2c0      	uxtb	r0, r0
 802511a:	fb12 f205 	smulbb	r2, r2, r5
 802511e:	f001 01f8 	and.w	r1, r1, #248	; 0xf8
 8025122:	fb01 2100 	mla	r1, r1, r0, r2
 8025126:	f3cc 2e07 	ubfx	lr, ip, #8, #8
 802512a:	10da      	asrs	r2, r3, #3
 802512c:	fa5f fc8c 	uxtb.w	ip, ip
 8025130:	00db      	lsls	r3, r3, #3
 8025132:	fb1c fc05 	smulbb	ip, ip, r5
 8025136:	b2db      	uxtb	r3, r3
 8025138:	b289      	uxth	r1, r1
 802513a:	fb03 c300 	mla	r3, r3, r0, ip
 802513e:	fa1f fc83 	uxth.w	ip, r3
 8025142:	1c4b      	adds	r3, r1, #1
 8025144:	eb03 2111 	add.w	r1, r3, r1, lsr #8
 8025148:	f002 02fc 	and.w	r2, r2, #252	; 0xfc
 802514c:	fb1e fe05 	smulbb	lr, lr, r5
 8025150:	f10c 0301 	add.w	r3, ip, #1
 8025154:	fb02 e200 	mla	r2, r2, r0, lr
 8025158:	eb03 231c 	add.w	r3, r3, ip, lsr #8
 802515c:	b292      	uxth	r2, r2
 802515e:	f401 4178 	and.w	r1, r1, #63488	; 0xf800
 8025162:	f3c3 23c4 	ubfx	r3, r3, #11, #5
 8025166:	430b      	orrs	r3, r1
 8025168:	1c51      	adds	r1, r2, #1
 802516a:	eb01 2212 	add.w	r2, r1, r2, lsr #8
 802516e:	0952      	lsrs	r2, r2, #5
 8025170:	f402 62fc 	and.w	r2, r2, #2016	; 0x7e0
 8025174:	4313      	orrs	r3, r2
 8025176:	803b      	strh	r3, [r7, #0]
 8025178:	9b29      	ldr	r3, [sp, #164]	; 0xa4
 802517a:	441c      	add	r4, r3
 802517c:	9b2a      	ldr	r3, [sp, #168]	; 0xa8
 802517e:	441e      	add	r6, r3
 8025180:	9b18      	ldr	r3, [sp, #96]	; 0x60
 8025182:	3b01      	subs	r3, #1
 8025184:	3702      	adds	r7, #2
 8025186:	9318      	str	r3, [sp, #96]	; 0x60
 8025188:	e698      	b.n	8024ebc <_ZN8touchgfx8LCD16bpp57TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x94>
 802518a:	9b29      	ldr	r3, [sp, #164]	; 0xa4
 802518c:	441c      	add	r4, r3
 802518e:	9b2a      	ldr	r3, [sp, #168]	; 0xa8
 8025190:	441e      	add	r6, r3
 8025192:	9b07      	ldr	r3, [sp, #28]
 8025194:	3b01      	subs	r3, #1
 8025196:	9307      	str	r3, [sp, #28]
 8025198:	9b0a      	ldr	r3, [sp, #40]	; 0x28
 802519a:	3302      	adds	r3, #2
 802519c:	930a      	str	r3, [sp, #40]	; 0x28
 802519e:	e66d      	b.n	8024e7c <_ZN8touchgfx8LCD16bpp57TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x54>
 80251a0:	d023      	beq.n	80251ea <_ZN8touchgfx8LCD16bpp57TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x3c2>
 80251a2:	9b07      	ldr	r3, [sp, #28]
 80251a4:	9829      	ldr	r0, [sp, #164]	; 0xa4
 80251a6:	3b01      	subs	r3, #1
 80251a8:	fb00 4003 	mla	r0, r0, r3, r4
 80251ac:	1400      	asrs	r0, r0, #16
 80251ae:	f53f ae82 	bmi.w	8024eb6 <_ZN8touchgfx8LCD16bpp57TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x8e>
 80251b2:	3901      	subs	r1, #1
 80251b4:	4288      	cmp	r0, r1
 80251b6:	f6bf ae7e 	bge.w	8024eb6 <_ZN8touchgfx8LCD16bpp57TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x8e>
 80251ba:	992a      	ldr	r1, [sp, #168]	; 0xa8
 80251bc:	fb01 6303 	mla	r3, r1, r3, r6
 80251c0:	141b      	asrs	r3, r3, #16
 80251c2:	f53f ae78 	bmi.w	8024eb6 <_ZN8touchgfx8LCD16bpp57TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x8e>
 80251c6:	3a01      	subs	r2, #1
 80251c8:	4293      	cmp	r3, r2
 80251ca:	f6bf ae74 	bge.w	8024eb6 <_ZN8touchgfx8LCD16bpp57TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x8e>
 80251ce:	f8dd b01c 	ldr.w	fp, [sp, #28]
 80251d2:	f8dd 9028 	ldr.w	r9, [sp, #40]	; 0x28
 80251d6:	f1bb 0f00 	cmp.w	fp, #0
 80251da:	dc6c      	bgt.n	80252b6 <_ZN8touchgfx8LCD16bpp57TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x48e>
 80251dc:	9b07      	ldr	r3, [sp, #28]
 80251de:	ea23 75e3 	bic.w	r5, r3, r3, asr #31
 80251e2:	9b0a      	ldr	r3, [sp, #40]	; 0x28
 80251e4:	eb03 0345 	add.w	r3, r3, r5, lsl #1
 80251e8:	930a      	str	r3, [sp, #40]	; 0x28
 80251ea:	9b17      	ldr	r3, [sp, #92]	; 0x5c
 80251ec:	2b00      	cmp	r3, #0
 80251ee:	f340 81b3 	ble.w	8025558 <_ZN8touchgfx8LCD16bpp57TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x730>
 80251f2:	ee30 0a04 	vadd.f32	s0, s0, s8
 80251f6:	eeb7 7a00 	vmov.f32	s14, #112	; 0x3f800000  1.0
 80251fa:	eec7 7a00 	vdiv.f32	s15, s14, s0
 80251fe:	9b26      	ldr	r3, [sp, #152]	; 0x98
 8025200:	ee70 0aa4 	vadd.f32	s1, s1, s9
 8025204:	ee31 1a05 	vadd.f32	s2, s2, s10
 8025208:	ee20 7aa7 	vmul.f32	s14, s1, s15
 802520c:	eef0 6a62 	vmov.f32	s13, s5
 8025210:	ee61 7a27 	vmul.f32	s15, s2, s15
 8025214:	eefe 6ac8 	vcvt.s32.f32	s13, s13, #16
 8025218:	ee77 2a62 	vsub.f32	s5, s14, s5
 802521c:	ee16 4a90 	vmov	r4, s13
 8025220:	eefe 2ac8 	vcvt.s32.f32	s5, s5, #16
 8025224:	eef0 6a43 	vmov.f32	s13, s6
 8025228:	ee37 3ac3 	vsub.f32	s6, s15, s6
 802522c:	ee12 2a90 	vmov	r2, s5
 8025230:	eebe 3ac8 	vcvt.s32.f32	s6, s6, #16
 8025234:	fb92 f3f3 	sdiv	r3, r2, r3
 8025238:	ee13 2a10 	vmov	r2, s6
 802523c:	9329      	str	r3, [sp, #164]	; 0xa4
 802523e:	9b26      	ldr	r3, [sp, #152]	; 0x98
 8025240:	fb92 f3f3 	sdiv	r3, r2, r3
 8025244:	932a      	str	r3, [sp, #168]	; 0xa8
 8025246:	9b17      	ldr	r3, [sp, #92]	; 0x5c
 8025248:	9a19      	ldr	r2, [sp, #100]	; 0x64
 802524a:	3b01      	subs	r3, #1
 802524c:	eefe 6ac8 	vcvt.s32.f32	s13, s13, #16
 8025250:	9317      	str	r3, [sp, #92]	; 0x5c
 8025252:	9b26      	ldr	r3, [sp, #152]	; 0x98
 8025254:	bf08      	it	eq
 8025256:	4613      	moveq	r3, r2
 8025258:	ee16 6a90 	vmov	r6, s13
 802525c:	9307      	str	r3, [sp, #28]
 802525e:	eeb0 3a67 	vmov.f32	s6, s15
 8025262:	eef0 2a47 	vmov.f32	s5, s14
 8025266:	e5fb      	b.n	8024e60 <_ZN8touchgfx8LCD16bpp57TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x38>
 8025268:	2900      	cmp	r1, #0
 802526a:	f43f ae6b 	beq.w	8024f44 <_ZN8touchgfx8LCD16bpp57TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x11c>
 802526e:	f858 3023 	ldr.w	r3, [r8, r3, lsl #2]
 8025272:	9308      	str	r3, [sp, #32]
 8025274:	0e1b      	lsrs	r3, r3, #24
 8025276:	9311      	str	r3, [sp, #68]	; 0x44
 8025278:	e664      	b.n	8024f44 <_ZN8touchgfx8LCD16bpp57TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x11c>
 802527a:	f112 0801 	adds.w	r8, r2, #1
 802527e:	f53f af7b 	bmi.w	8025178 <_ZN8touchgfx8LCD16bpp57TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x350>
 8025282:	4543      	cmp	r3, r8
 8025284:	f6ff af78 	blt.w	8025178 <_ZN8touchgfx8LCD16bpp57TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x350>
 8025288:	f11c 0801 	adds.w	r8, ip, #1
 802528c:	f53f af74 	bmi.w	8025178 <_ZN8touchgfx8LCD16bpp57TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x350>
 8025290:	45c6      	cmp	lr, r8
 8025292:	f6ff af71 	blt.w	8025178 <_ZN8touchgfx8LCD16bpp57TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x350>
 8025296:	9d1a      	ldr	r5, [sp, #104]	; 0x68
 8025298:	9201      	str	r2, [sp, #4]
 802529a:	fa0f f28e 	sxth.w	r2, lr
 802529e:	e9cd 1504 	strd	r1, r5, [sp, #16]
 80252a2:	e9cd c002 	strd	ip, r0, [sp, #8]
 80252a6:	9200      	str	r2, [sp, #0]
 80252a8:	b21b      	sxth	r3, r3
 80252aa:	9a10      	ldr	r2, [sp, #64]	; 0x40
 80252ac:	981b      	ldr	r0, [sp, #108]	; 0x6c
 80252ae:	4639      	mov	r1, r7
 80252b0:	f7ff fc79 	bl	8024ba6 <_ZNK8touchgfx8LCD16bpp57TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKmssiihhh>
 80252b4:	e760      	b.n	8025178 <_ZN8touchgfx8LCD16bpp57TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x350>
 80252b6:	9b2e      	ldr	r3, [sp, #184]	; 0xb8
 80252b8:	9d10      	ldr	r5, [sp, #64]	; 0x40
 80252ba:	f9b3 1008 	ldrsh.w	r1, [r3, #8]
 80252be:	1427      	asrs	r7, r4, #16
 80252c0:	1433      	asrs	r3, r6, #16
 80252c2:	fb01 7303 	mla	r3, r1, r3, r7
 80252c6:	eb05 0783 	add.w	r7, r5, r3, lsl #2
 80252ca:	f855 3023 	ldr.w	r3, [r5, r3, lsl #2]
 80252ce:	f3c4 3203 	ubfx	r2, r4, #12, #4
 80252d2:	f3c6 3003 	ubfx	r0, r6, #12, #4
 80252d6:	ea4f 6c13 	mov.w	ip, r3, lsr #24
 80252da:	2a00      	cmp	r2, #0
 80252dc:	f000 8133 	beq.w	8025546 <_ZN8touchgfx8LCD16bpp57TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x71e>
 80252e0:	687d      	ldr	r5, [r7, #4]
 80252e2:	950e      	str	r5, [sp, #56]	; 0x38
 80252e4:	0e2d      	lsrs	r5, r5, #24
 80252e6:	9515      	str	r5, [sp, #84]	; 0x54
 80252e8:	b178      	cbz	r0, 802530a <_ZN8touchgfx8LCD16bpp57TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x4e2>
 80252ea:	f101 4180 	add.w	r1, r1, #1073741824	; 0x40000000
 80252ee:	3901      	subs	r1, #1
 80252f0:	0089      	lsls	r1, r1, #2
 80252f2:	3104      	adds	r1, #4
 80252f4:	eb07 0e01 	add.w	lr, r7, r1
 80252f8:	5879      	ldr	r1, [r7, r1]
 80252fa:	9109      	str	r1, [sp, #36]	; 0x24
 80252fc:	0e09      	lsrs	r1, r1, #24
 80252fe:	9112      	str	r1, [sp, #72]	; 0x48
 8025300:	f8de 1004 	ldr.w	r1, [lr, #4]
 8025304:	910f      	str	r1, [sp, #60]	; 0x3c
 8025306:	0e09      	lsrs	r1, r1, #24
 8025308:	9116      	str	r1, [sp, #88]	; 0x58
 802530a:	b292      	uxth	r2, r2
 802530c:	b280      	uxth	r0, r0
 802530e:	fb02 f800 	mul.w	r8, r2, r0
 8025312:	ebc8 1000 	rsb	r0, r8, r0, lsl #4
 8025316:	0112      	lsls	r2, r2, #4
 8025318:	eba2 0e08 	sub.w	lr, r2, r8
 802531c:	b280      	uxth	r0, r0
 802531e:	f5c2 7280 	rsb	r2, r2, #256	; 0x100
 8025322:	9915      	ldr	r1, [sp, #84]	; 0x54
 8025324:	9d12      	ldr	r5, [sp, #72]	; 0x48
 8025326:	fa1f fe8e 	uxth.w	lr, lr
 802532a:	1a12      	subs	r2, r2, r0
 802532c:	b292      	uxth	r2, r2
 802532e:	fb0e f101 	mul.w	r1, lr, r1
 8025332:	fb02 110c 	mla	r1, r2, ip, r1
 8025336:	fb00 1105 	mla	r1, r0, r5, r1
 802533a:	9d16      	ldr	r5, [sp, #88]	; 0x58
 802533c:	fb08 1105 	mla	r1, r8, r5, r1
 8025340:	f3c1 2107 	ubfx	r1, r1, #8, #8
 8025344:	2900      	cmp	r1, #0
 8025346:	f000 80f5 	beq.w	8025534 <_ZN8touchgfx8LCD16bpp57TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x70c>
 802534a:	f1bc 0fff 	cmp.w	ip, #255	; 0xff
 802534e:	d019      	beq.n	8025384 <_ZN8touchgfx8LCD16bpp57TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x55c>
 8025350:	f003 1aff 	and.w	sl, r3, #16711935	; 0xff00ff
 8025354:	fb0c fa0a 	mul.w	sl, ip, sl
 8025358:	f403 437f 	and.w	r3, r3, #65280	; 0xff00
 802535c:	fb0c fc03 	mul.w	ip, ip, r3
 8025360:	ea4f 231a 	mov.w	r3, sl, lsr #8
 8025364:	f003 13ff 	and.w	r3, r3, #16711935	; 0xff00ff
 8025368:	f10a 1a01 	add.w	sl, sl, #65537	; 0x10001
 802536c:	f50c 7780 	add.w	r7, ip, #256	; 0x100
 8025370:	4453      	add	r3, sl
 8025372:	eb07 271c 	add.w	r7, r7, ip, lsr #8
 8025376:	0a1b      	lsrs	r3, r3, #8
 8025378:	0a3f      	lsrs	r7, r7, #8
 802537a:	f003 13ff 	and.w	r3, r3, #16711935	; 0xff00ff
 802537e:	f407 477f 	and.w	r7, r7, #65280	; 0xff00
 8025382:	433b      	orrs	r3, r7
 8025384:	9d15      	ldr	r5, [sp, #84]	; 0x54
 8025386:	2dff      	cmp	r5, #255	; 0xff
 8025388:	d020      	beq.n	80253cc <_ZN8touchgfx8LCD16bpp57TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x5a4>
 802538a:	9d0e      	ldr	r5, [sp, #56]	; 0x38
 802538c:	f005 17ff 	and.w	r7, r5, #16711935	; 0xff00ff
 8025390:	9d15      	ldr	r5, [sp, #84]	; 0x54
 8025392:	436f      	muls	r7, r5
 8025394:	9d0e      	ldr	r5, [sp, #56]	; 0x38
 8025396:	f405 4a7f 	and.w	sl, r5, #65280	; 0xff00
 802539a:	9d15      	ldr	r5, [sp, #84]	; 0x54
 802539c:	ea4f 2c17 	mov.w	ip, r7, lsr #8
 80253a0:	fb05 fa0a 	mul.w	sl, r5, sl
 80253a4:	f107 1701 	add.w	r7, r7, #65537	; 0x10001
 80253a8:	f00c 1cff 	and.w	ip, ip, #16711935	; 0xff00ff
 80253ac:	44bc      	add	ip, r7
 80253ae:	f50a 7780 	add.w	r7, sl, #256	; 0x100
 80253b2:	eb07 2a1a 	add.w	sl, r7, sl, lsr #8
 80253b6:	ea4f 2c1c 	mov.w	ip, ip, lsr #8
 80253ba:	ea4f 2a1a 	mov.w	sl, sl, lsr #8
 80253be:	f00c 1cff 	and.w	ip, ip, #16711935	; 0xff00ff
 80253c2:	f40a 4a7f 	and.w	sl, sl, #65280	; 0xff00
 80253c6:	ea4c 050a 	orr.w	r5, ip, sl
 80253ca:	950e      	str	r5, [sp, #56]	; 0x38
 80253cc:	9d12      	ldr	r5, [sp, #72]	; 0x48
 80253ce:	2dff      	cmp	r5, #255	; 0xff
 80253d0:	d020      	beq.n	8025414 <_ZN8touchgfx8LCD16bpp57TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x5ec>
 80253d2:	9d09      	ldr	r5, [sp, #36]	; 0x24
 80253d4:	f005 17ff 	and.w	r7, r5, #16711935	; 0xff00ff
 80253d8:	9d12      	ldr	r5, [sp, #72]	; 0x48
 80253da:	436f      	muls	r7, r5
 80253dc:	9d09      	ldr	r5, [sp, #36]	; 0x24
 80253de:	f405 4a7f 	and.w	sl, r5, #65280	; 0xff00
 80253e2:	9d12      	ldr	r5, [sp, #72]	; 0x48
 80253e4:	ea4f 2c17 	mov.w	ip, r7, lsr #8
 80253e8:	fb05 fa0a 	mul.w	sl, r5, sl
 80253ec:	f107 1701 	add.w	r7, r7, #65537	; 0x10001
 80253f0:	f00c 1cff 	and.w	ip, ip, #16711935	; 0xff00ff
 80253f4:	44bc      	add	ip, r7
 80253f6:	f50a 7780 	add.w	r7, sl, #256	; 0x100
 80253fa:	eb07 2a1a 	add.w	sl, r7, sl, lsr #8
 80253fe:	ea4f 2c1c 	mov.w	ip, ip, lsr #8
 8025402:	ea4f 2a1a 	mov.w	sl, sl, lsr #8
 8025406:	f00c 1cff 	and.w	ip, ip, #16711935	; 0xff00ff
 802540a:	f40a 4a7f 	and.w	sl, sl, #65280	; 0xff00
 802540e:	ea4c 050a 	orr.w	r5, ip, sl
 8025412:	9509      	str	r5, [sp, #36]	; 0x24
 8025414:	9d16      	ldr	r5, [sp, #88]	; 0x58
 8025416:	2dff      	cmp	r5, #255	; 0xff
 8025418:	d020      	beq.n	802545c <_ZN8touchgfx8LCD16bpp57TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x634>
 802541a:	9d0f      	ldr	r5, [sp, #60]	; 0x3c
 802541c:	f005 17ff 	and.w	r7, r5, #16711935	; 0xff00ff
 8025420:	9d16      	ldr	r5, [sp, #88]	; 0x58
 8025422:	436f      	muls	r7, r5
 8025424:	9d0f      	ldr	r5, [sp, #60]	; 0x3c
 8025426:	f405 4a7f 	and.w	sl, r5, #65280	; 0xff00
 802542a:	9d16      	ldr	r5, [sp, #88]	; 0x58
 802542c:	ea4f 2c17 	mov.w	ip, r7, lsr #8
 8025430:	fb05 fa0a 	mul.w	sl, r5, sl
 8025434:	f107 1701 	add.w	r7, r7, #65537	; 0x10001
 8025438:	f00c 1cff 	and.w	ip, ip, #16711935	; 0xff00ff
 802543c:	44bc      	add	ip, r7
 802543e:	f50a 7780 	add.w	r7, sl, #256	; 0x100
 8025442:	eb07 2a1a 	add.w	sl, r7, sl, lsr #8
 8025446:	ea4f 2c1c 	mov.w	ip, ip, lsr #8
 802544a:	ea4f 2a1a 	mov.w	sl, sl, lsr #8
 802544e:	f00c 1cff 	and.w	ip, ip, #16711935	; 0xff00ff
 8025452:	f40a 4a7f 	and.w	sl, sl, #65280	; 0xff00
 8025456:	ea4c 050a 	orr.w	r5, ip, sl
 802545a:	950f      	str	r5, [sp, #60]	; 0x3c
 802545c:	9d0e      	ldr	r5, [sp, #56]	; 0x38
 802545e:	f005 17ff 	and.w	r7, r5, #16711935	; 0xff00ff
 8025462:	9d09      	ldr	r5, [sp, #36]	; 0x24
 8025464:	f003 1cff 	and.w	ip, r3, #16711935	; 0xff00ff
 8025468:	fb0e f707 	mul.w	r7, lr, r7
 802546c:	fb02 770c 	mla	r7, r2, ip, r7
 8025470:	f005 1cff 	and.w	ip, r5, #16711935	; 0xff00ff
 8025474:	9d0f      	ldr	r5, [sp, #60]	; 0x3c
 8025476:	fb00 770c 	mla	r7, r0, ip, r7
 802547a:	f005 1cff 	and.w	ip, r5, #16711935	; 0xff00ff
 802547e:	9d0e      	ldr	r5, [sp, #56]	; 0x38
 8025480:	fb08 770c 	mla	r7, r8, ip, r7
 8025484:	f405 4c7f 	and.w	ip, r5, #65280	; 0xff00
 8025488:	fb0e fe0c 	mul.w	lr, lr, ip
 802548c:	f403 437f 	and.w	r3, r3, #65280	; 0xff00
 8025490:	fb02 e303 	mla	r3, r2, r3, lr
 8025494:	9a09      	ldr	r2, [sp, #36]	; 0x24
 8025496:	9d0b      	ldr	r5, [sp, #44]	; 0x2c
 8025498:	f402 4a7f 	and.w	sl, r2, #65280	; 0xff00
 802549c:	9a0f      	ldr	r2, [sp, #60]	; 0x3c
 802549e:	fb00 330a 	mla	r3, r0, sl, r3
 80254a2:	f402 4c7f 	and.w	ip, r2, #65280	; 0xff00
 80254a6:	fb08 3c0c 	mla	ip, r8, ip, r3
 80254aa:	9b0b      	ldr	r3, [sp, #44]	; 0x2c
 80254ac:	f8b9 0000 	ldrh.w	r0, [r9]
 80254b0:	4359      	muls	r1, r3
 80254b2:	0a3f      	lsrs	r7, r7, #8
 80254b4:	ea4f 2c1c 	mov.w	ip, ip, lsr #8
 80254b8:	f40c 4c7f 	and.w	ip, ip, #65280	; 0xff00
 80254bc:	1c4b      	adds	r3, r1, #1
 80254be:	f007 17ff 	and.w	r7, r7, #16711935	; 0xff00ff
 80254c2:	ea47 070c 	orr.w	r7, r7, ip
 80254c6:	eb03 2111 	add.w	r1, r3, r1, lsr #8
 80254ca:	1202      	asrs	r2, r0, #8
 80254cc:	0c3b      	lsrs	r3, r7, #16
 80254ce:	ea6f 2111 	mvn.w	r1, r1, lsr #8
 80254d2:	b2c9      	uxtb	r1, r1
 80254d4:	fb13 f305 	smulbb	r3, r3, r5
 80254d8:	f002 02f8 	and.w	r2, r2, #248	; 0xf8
 80254dc:	fb02 3201 	mla	r2, r2, r1, r3
 80254e0:	f3c7 2c07 	ubfx	ip, r7, #8, #8
 80254e4:	10c3      	asrs	r3, r0, #3
 80254e6:	b2ff      	uxtb	r7, r7
 80254e8:	00c0      	lsls	r0, r0, #3
 80254ea:	b2c0      	uxtb	r0, r0
 80254ec:	fb17 f705 	smulbb	r7, r7, r5
 80254f0:	fb00 7001 	mla	r0, r0, r1, r7
 80254f4:	b292      	uxth	r2, r2
 80254f6:	fb1c fc05 	smulbb	ip, ip, r5
 80254fa:	b280      	uxth	r0, r0
 80254fc:	f003 03fc 	and.w	r3, r3, #252	; 0xfc
 8025500:	fb03 c301 	mla	r3, r3, r1, ip
 8025504:	1c51      	adds	r1, r2, #1
 8025506:	f100 0c01 	add.w	ip, r0, #1
 802550a:	eb01 2212 	add.w	r2, r1, r2, lsr #8
 802550e:	eb0c 2c10 	add.w	ip, ip, r0, lsr #8
 8025512:	b29b      	uxth	r3, r3
 8025514:	f3cc 2cc4 	ubfx	ip, ip, #11, #5
 8025518:	f402 4278 	and.w	r2, r2, #63488	; 0xf800
 802551c:	ea4c 0202 	orr.w	r2, ip, r2
 8025520:	f103 0c01 	add.w	ip, r3, #1
 8025524:	eb0c 2313 	add.w	r3, ip, r3, lsr #8
 8025528:	095b      	lsrs	r3, r3, #5
 802552a:	f403 63fc 	and.w	r3, r3, #2016	; 0x7e0
 802552e:	431a      	orrs	r2, r3
 8025530:	f8a9 2000 	strh.w	r2, [r9]
 8025534:	9b29      	ldr	r3, [sp, #164]	; 0xa4
 8025536:	441c      	add	r4, r3
 8025538:	9b2a      	ldr	r3, [sp, #168]	; 0xa8
 802553a:	f109 0902 	add.w	r9, r9, #2
 802553e:	441e      	add	r6, r3
 8025540:	f10b 3bff 	add.w	fp, fp, #4294967295
 8025544:	e647      	b.n	80251d6 <_ZN8touchgfx8LCD16bpp57TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x3ae>
 8025546:	2800      	cmp	r0, #0
 8025548:	f43f aedf 	beq.w	802530a <_ZN8touchgfx8LCD16bpp57TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x4e2>
 802554c:	f857 1021 	ldr.w	r1, [r7, r1, lsl #2]
 8025550:	9109      	str	r1, [sp, #36]	; 0x24
 8025552:	0e09      	lsrs	r1, r1, #24
 8025554:	9112      	str	r1, [sp, #72]	; 0x48
 8025556:	e6d8      	b.n	802530a <_ZN8touchgfx8LCD16bpp57TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x4e2>
 8025558:	b01d      	add	sp, #116	; 0x74
 802555a:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}

0802555e <_ZNK8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKmssiihh>:
 802555e:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 8025562:	b085      	sub	sp, #20
 8025564:	e9dd 740f 	ldrd	r7, r4, [sp, #60]	; 0x3c
 8025568:	9102      	str	r1, [sp, #8]
 802556a:	2c00      	cmp	r4, #0
 802556c:	fb04 7103 	mla	r1, r4, r3, r7
 8025570:	f9bd e038 	ldrsh.w	lr, [sp, #56]	; 0x38
 8025574:	f89d 6044 	ldrb.w	r6, [sp, #68]	; 0x44
 8025578:	f89d 0048 	ldrb.w	r0, [sp, #72]	; 0x48
 802557c:	eb02 0c81 	add.w	ip, r2, r1, lsl #2
 8025580:	f2c0 810c 	blt.w	802579c <_ZNK8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKmssiihh+0x23e>
 8025584:	45a6      	cmp	lr, r4
 8025586:	f340 8109 	ble.w	802579c <_ZNK8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKmssiihh+0x23e>
 802558a:	2f00      	cmp	r7, #0
 802558c:	f2c0 8104 	blt.w	8025798 <_ZNK8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKmssiihh+0x23a>
 8025590:	42bb      	cmp	r3, r7
 8025592:	f340 8101 	ble.w	8025798 <_ZNK8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKmssiihh+0x23a>
 8025596:	f852 5021 	ldr.w	r5, [r2, r1, lsl #2]
 802559a:	1c7a      	adds	r2, r7, #1
 802559c:	f100 8101 	bmi.w	80257a2 <_ZNK8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKmssiihh+0x244>
 80255a0:	4293      	cmp	r3, r2
 80255a2:	f340 80fe 	ble.w	80257a2 <_ZNK8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKmssiihh+0x244>
 80255a6:	2e00      	cmp	r6, #0
 80255a8:	f000 80fd 	beq.w	80257a6 <_ZNK8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKmssiihh+0x248>
 80255ac:	f8dc 1004 	ldr.w	r1, [ip, #4]
 80255b0:	3401      	adds	r4, #1
 80255b2:	f100 80fc 	bmi.w	80257ae <_ZNK8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKmssiihh+0x250>
 80255b6:	45a6      	cmp	lr, r4
 80255b8:	f340 80f9 	ble.w	80257ae <_ZNK8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKmssiihh+0x250>
 80255bc:	2800      	cmp	r0, #0
 80255be:	f000 80f9 	beq.w	80257b4 <_ZNK8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKmssiihh+0x256>
 80255c2:	2f00      	cmp	r7, #0
 80255c4:	eb0c 0283 	add.w	r2, ip, r3, lsl #2
 80255c8:	f2c0 80ef 	blt.w	80257aa <_ZNK8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKmssiihh+0x24c>
 80255cc:	42bb      	cmp	r3, r7
 80255ce:	f340 80ec 	ble.w	80257aa <_ZNK8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKmssiihh+0x24c>
 80255d2:	f85c 4023 	ldr.w	r4, [ip, r3, lsl #2]
 80255d6:	3701      	adds	r7, #1
 80255d8:	f100 80ef 	bmi.w	80257ba <_ZNK8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKmssiihh+0x25c>
 80255dc:	42bb      	cmp	r3, r7
 80255de:	f340 80ec 	ble.w	80257ba <_ZNK8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKmssiihh+0x25c>
 80255e2:	2e00      	cmp	r6, #0
 80255e4:	f000 80eb 	beq.w	80257be <_ZNK8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKmssiihh+0x260>
 80255e8:	6852      	ldr	r2, [r2, #4]
 80255ea:	b2b6      	uxth	r6, r6
 80255ec:	b280      	uxth	r0, r0
 80255ee:	fb00 fe06 	mul.w	lr, r0, r6
 80255f2:	ebce 1000 	rsb	r0, lr, r0, lsl #4
 80255f6:	0136      	lsls	r6, r6, #4
 80255f8:	eba6 070e 	sub.w	r7, r6, lr
 80255fc:	b280      	uxth	r0, r0
 80255fe:	f5c6 7380 	rsb	r3, r6, #256	; 0x100
 8025602:	ea4f 6a11 	mov.w	sl, r1, lsr #24
 8025606:	b2bf      	uxth	r7, r7
 8025608:	1a1b      	subs	r3, r3, r0
 802560a:	ea4f 6b15 	mov.w	fp, r5, lsr #24
 802560e:	b29b      	uxth	r3, r3
 8025610:	fb07 f60a 	mul.w	r6, r7, sl
 8025614:	ea4f 6914 	mov.w	r9, r4, lsr #24
 8025618:	fb0b 6603 	mla	r6, fp, r3, r6
 802561c:	ea4f 6812 	mov.w	r8, r2, lsr #24
 8025620:	fb00 6609 	mla	r6, r0, r9, r6
 8025624:	fb0e 6608 	mla	r6, lr, r8, r6
 8025628:	f3c6 2607 	ubfx	r6, r6, #8, #8
 802562c:	9600      	str	r6, [sp, #0]
 802562e:	2e00      	cmp	r6, #0
 8025630:	f000 80af 	beq.w	8025792 <_ZNK8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKmssiihh+0x234>
 8025634:	f005 1cff 	and.w	ip, r5, #16711935	; 0xff00ff
 8025638:	fb0b fc0c 	mul.w	ip, fp, ip
 802563c:	f405 457f 	and.w	r5, r5, #65280	; 0xff00
 8025640:	fb0b f505 	mul.w	r5, fp, r5
 8025644:	ea4f 2b1c 	mov.w	fp, ip, lsr #8
 8025648:	f00b 1bff 	and.w	fp, fp, #16711935	; 0xff00ff
 802564c:	f10c 1c01 	add.w	ip, ip, #65537	; 0x10001
 8025650:	44dc      	add	ip, fp
 8025652:	ea4f 2c1c 	mov.w	ip, ip, lsr #8
 8025656:	9501      	str	r5, [sp, #4]
 8025658:	f00c 15ff 	and.w	r5, ip, #16711935	; 0xff00ff
 802565c:	9503      	str	r5, [sp, #12]
 802565e:	9d01      	ldr	r5, [sp, #4]
 8025660:	9e02      	ldr	r6, [sp, #8]
 8025662:	f505 7c80 	add.w	ip, r5, #256	; 0x100
 8025666:	eb0c 2515 	add.w	r5, ip, r5, lsr #8
 802566a:	f001 1cff 	and.w	ip, r1, #16711935	; 0xff00ff
 802566e:	fb0a fc0c 	mul.w	ip, sl, ip
 8025672:	ea4f 2b15 	mov.w	fp, r5, lsr #8
 8025676:	ea4f 251c 	mov.w	r5, ip, lsr #8
 802567a:	f005 15ff 	and.w	r5, r5, #16711935	; 0xff00ff
 802567e:	f10c 1c01 	add.w	ip, ip, #65537	; 0x10001
 8025682:	4465      	add	r5, ip
 8025684:	f004 1cff 	and.w	ip, r4, #16711935	; 0xff00ff
 8025688:	f404 447f 	and.w	r4, r4, #65280	; 0xff00
 802568c:	fb09 fc0c 	mul.w	ip, r9, ip
 8025690:	fb09 f904 	mul.w	r9, r9, r4
 8025694:	f509 7480 	add.w	r4, r9, #256	; 0x100
 8025698:	eb04 2919 	add.w	r9, r4, r9, lsr #8
 802569c:	f002 14ff 	and.w	r4, r2, #16711935	; 0xff00ff
 80256a0:	fb08 f404 	mul.w	r4, r8, r4
 80256a4:	f401 417f 	and.w	r1, r1, #65280	; 0xff00
 80256a8:	f402 427f 	and.w	r2, r2, #65280	; 0xff00
 80256ac:	fb08 f802 	mul.w	r8, r8, r2
 80256b0:	fb0a fa01 	mul.w	sl, sl, r1
 80256b4:	0a22      	lsrs	r2, r4, #8
 80256b6:	f50a 7180 	add.w	r1, sl, #256	; 0x100
 80256ba:	f002 12ff 	and.w	r2, r2, #16711935	; 0xff00ff
 80256be:	f104 1401 	add.w	r4, r4, #65537	; 0x10001
 80256c2:	eb01 2a1a 	add.w	sl, r1, sl, lsr #8
 80256c6:	4414      	add	r4, r2
 80256c8:	ea4f 211c 	mov.w	r1, ip, lsr #8
 80256cc:	f508 7280 	add.w	r2, r8, #256	; 0x100
 80256d0:	0a2d      	lsrs	r5, r5, #8
 80256d2:	eb02 2818 	add.w	r8, r2, r8, lsr #8
 80256d6:	f005 15ff 	and.w	r5, r5, #16711935	; 0xff00ff
 80256da:	9a03      	ldr	r2, [sp, #12]
 80256dc:	8836      	ldrh	r6, [r6, #0]
 80256de:	f001 11ff 	and.w	r1, r1, #16711935	; 0xff00ff
 80256e2:	f10c 1c01 	add.w	ip, ip, #65537	; 0x10001
 80256e6:	437d      	muls	r5, r7
 80256e8:	4461      	add	r1, ip
 80256ea:	0a24      	lsrs	r4, r4, #8
 80256ec:	fb02 5503 	mla	r5, r2, r3, r5
 80256f0:	0a09      	lsrs	r1, r1, #8
 80256f2:	f004 14ff 	and.w	r4, r4, #16711935	; 0xff00ff
 80256f6:	fb04 540e 	mla	r4, r4, lr, r5
 80256fa:	f001 11ff 	and.w	r1, r1, #16711935	; 0xff00ff
 80256fe:	fb01 4100 	mla	r1, r1, r0, r4
 8025702:	ea4f 2a1a 	mov.w	sl, sl, lsr #8
 8025706:	0a09      	lsrs	r1, r1, #8
 8025708:	f40a 4a7f 	and.w	sl, sl, #65280	; 0xff00
 802570c:	f001 14ff 	and.w	r4, r1, #16711935	; 0xff00ff
 8025710:	ea4f 2818 	mov.w	r8, r8, lsr #8
 8025714:	f40b 417f 	and.w	r1, fp, #65280	; 0xff00
 8025718:	fb07 f70a 	mul.w	r7, r7, sl
 802571c:	fb03 7101 	mla	r1, r3, r1, r7
 8025720:	ea4f 2919 	mov.w	r9, r9, lsr #8
 8025724:	9b00      	ldr	r3, [sp, #0]
 8025726:	f408 487f 	and.w	r8, r8, #65280	; 0xff00
 802572a:	fb0e 1e08 	mla	lr, lr, r8, r1
 802572e:	f409 417f 	and.w	r1, r9, #65280	; 0xff00
 8025732:	fb00 e101 	mla	r1, r0, r1, lr
 8025736:	43da      	mvns	r2, r3
 8025738:	1233      	asrs	r3, r6, #8
 802573a:	b2d2      	uxtb	r2, r2
 802573c:	10f0      	asrs	r0, r6, #3
 802573e:	0a09      	lsrs	r1, r1, #8
 8025740:	f003 03f8 	and.w	r3, r3, #248	; 0xf8
 8025744:	00f6      	lsls	r6, r6, #3
 8025746:	4353      	muls	r3, r2
 8025748:	f401 417f 	and.w	r1, r1, #65280	; 0xff00
 802574c:	f000 00fc 	and.w	r0, r0, #252	; 0xfc
 8025750:	b2f6      	uxtb	r6, r6
 8025752:	4321      	orrs	r1, r4
 8025754:	4350      	muls	r0, r2
 8025756:	4356      	muls	r6, r2
 8025758:	1c5a      	adds	r2, r3, #1
 802575a:	eb02 2213 	add.w	r2, r2, r3, lsr #8
 802575e:	0c0b      	lsrs	r3, r1, #16
 8025760:	eb03 2312 	add.w	r3, r3, r2, lsr #8
 8025764:	1c42      	adds	r2, r0, #1
 8025766:	eb02 2010 	add.w	r0, r2, r0, lsr #8
 802576a:	0a0a      	lsrs	r2, r1, #8
 802576c:	eb02 2210 	add.w	r2, r2, r0, lsr #8
 8025770:	021b      	lsls	r3, r3, #8
 8025772:	00d2      	lsls	r2, r2, #3
 8025774:	f402 62fc 	and.w	r2, r2, #2016	; 0x7e0
 8025778:	f403 4378 	and.w	r3, r3, #63488	; 0xf800
 802577c:	4313      	orrs	r3, r2
 802577e:	1c72      	adds	r2, r6, #1
 8025780:	eb02 2616 	add.w	r6, r2, r6, lsr #8
 8025784:	eb01 2116 	add.w	r1, r1, r6, lsr #8
 8025788:	f3c1 01c4 	ubfx	r1, r1, #3, #5
 802578c:	4319      	orrs	r1, r3
 802578e:	9b02      	ldr	r3, [sp, #8]
 8025790:	8019      	strh	r1, [r3, #0]
 8025792:	b005      	add	sp, #20
 8025794:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
 8025798:	2500      	movs	r5, #0
 802579a:	e6fe      	b.n	802559a <_ZNK8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKmssiihh+0x3c>
 802579c:	2100      	movs	r1, #0
 802579e:	460d      	mov	r5, r1
 80257a0:	e706      	b.n	80255b0 <_ZNK8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKmssiihh+0x52>
 80257a2:	2100      	movs	r1, #0
 80257a4:	e704      	b.n	80255b0 <_ZNK8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKmssiihh+0x52>
 80257a6:	4631      	mov	r1, r6
 80257a8:	e702      	b.n	80255b0 <_ZNK8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKmssiihh+0x52>
 80257aa:	2400      	movs	r4, #0
 80257ac:	e713      	b.n	80255d6 <_ZNK8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKmssiihh+0x78>
 80257ae:	2200      	movs	r2, #0
 80257b0:	4614      	mov	r4, r2
 80257b2:	e71a      	b.n	80255ea <_ZNK8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKmssiihh+0x8c>
 80257b4:	4602      	mov	r2, r0
 80257b6:	4604      	mov	r4, r0
 80257b8:	e717      	b.n	80255ea <_ZNK8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKmssiihh+0x8c>
 80257ba:	2200      	movs	r2, #0
 80257bc:	e715      	b.n	80255ea <_ZNK8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKmssiihh+0x8c>
 80257be:	4632      	mov	r2, r6
 80257c0:	e713      	b.n	80255ea <_ZNK8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKmssiihh+0x8c>
	...

080257c4 <_ZN8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff>:
 80257c4:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 80257c8:	b09b      	sub	sp, #108	; 0x6c
 80257ca:	e9dd 4625 	ldrd	r4, r6, [sp, #148]	; 0x94
 80257ce:	9218      	str	r2, [sp, #96]	; 0x60
 80257d0:	9a29      	ldr	r2, [sp, #164]	; 0xa4
 80257d2:	9116      	str	r1, [sp, #88]	; 0x58
 80257d4:	9307      	str	r3, [sp, #28]
 80257d6:	e9dd 132a 	ldrd	r1, r3, [sp, #168]	; 0xa8
 80257da:	9019      	str	r0, [sp, #100]	; 0x64
 80257dc:	6850      	ldr	r0, [r2, #4]
 80257de:	6812      	ldr	r2, [r2, #0]
 80257e0:	fb00 1303 	mla	r3, r0, r3, r1
 80257e4:	eb02 0343 	add.w	r3, r2, r3, lsl #1
 80257e8:	930a      	str	r3, [sp, #40]	; 0x28
 80257ea:	9b2c      	ldr	r3, [sp, #176]	; 0xb0
 80257ec:	681b      	ldr	r3, [r3, #0]
 80257ee:	930f      	str	r3, [sp, #60]	; 0x3c
 80257f0:	9b16      	ldr	r3, [sp, #88]	; 0x58
 80257f2:	2b00      	cmp	r3, #0
 80257f4:	dc03      	bgt.n	80257fe <_ZN8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x3a>
 80257f6:	9b18      	ldr	r3, [sp, #96]	; 0x60
 80257f8:	2b00      	cmp	r3, #0
 80257fa:	f340 8386 	ble.w	8025f0a <_ZN8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x746>
 80257fe:	9b2c      	ldr	r3, [sp, #176]	; 0xb0
 8025800:	f9b3 1008 	ldrsh.w	r1, [r3, #8]
 8025804:	f9b3 200c 	ldrsh.w	r2, [r3, #12]
 8025808:	1e48      	subs	r0, r1, #1
 802580a:	1e57      	subs	r7, r2, #1
 802580c:	9b07      	ldr	r3, [sp, #28]
 802580e:	2b00      	cmp	r3, #0
 8025810:	f340 8166 	ble.w	8025ae0 <_ZN8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x31c>
 8025814:	ea5f 4c24 	movs.w	ip, r4, asr #16
 8025818:	ea4f 4326 	mov.w	r3, r6, asr #16
 802581c:	d406      	bmi.n	802582c <_ZN8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x68>
 802581e:	4584      	cmp	ip, r0
 8025820:	da04      	bge.n	802582c <_ZN8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x68>
 8025822:	2b00      	cmp	r3, #0
 8025824:	db02      	blt.n	802582c <_ZN8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x68>
 8025826:	42bb      	cmp	r3, r7
 8025828:	f2c0 815b 	blt.w	8025ae2 <_ZN8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x31e>
 802582c:	f11c 0c01 	adds.w	ip, ip, #1
 8025830:	f100 814b 	bmi.w	8025aca <_ZN8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x306>
 8025834:	4561      	cmp	r1, ip
 8025836:	f2c0 8148 	blt.w	8025aca <_ZN8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x306>
 802583a:	3301      	adds	r3, #1
 802583c:	f100 8145 	bmi.w	8025aca <_ZN8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x306>
 8025840:	429a      	cmp	r2, r3
 8025842:	f2c0 8142 	blt.w	8025aca <_ZN8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x306>
 8025846:	9b07      	ldr	r3, [sp, #28]
 8025848:	9f0a      	ldr	r7, [sp, #40]	; 0x28
 802584a:	9317      	str	r3, [sp, #92]	; 0x5c
 802584c:	9b17      	ldr	r3, [sp, #92]	; 0x5c
 802584e:	2b00      	cmp	r3, #0
 8025850:	f340 8165 	ble.w	8025b1e <_ZN8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x35a>
 8025854:	9a2c      	ldr	r2, [sp, #176]	; 0xb0
 8025856:	9b2c      	ldr	r3, [sp, #176]	; 0xb0
 8025858:	f8d2 e00c 	ldr.w	lr, [r2, #12]
 802585c:	689b      	ldr	r3, [r3, #8]
 802585e:	1422      	asrs	r2, r4, #16
 8025860:	ea4f 4c26 	mov.w	ip, r6, asr #16
 8025864:	f3c4 3103 	ubfx	r1, r4, #12, #4
 8025868:	f3c6 3003 	ubfx	r0, r6, #12, #4
 802586c:	f100 81d5 	bmi.w	8025c1a <_ZN8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x456>
 8025870:	f103 38ff 	add.w	r8, r3, #4294967295
 8025874:	4542      	cmp	r2, r8
 8025876:	f280 81d0 	bge.w	8025c1a <_ZN8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x456>
 802587a:	f1bc 0f00 	cmp.w	ip, #0
 802587e:	f2c0 81cc 	blt.w	8025c1a <_ZN8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x456>
 8025882:	f10e 38ff 	add.w	r8, lr, #4294967295
 8025886:	45c4      	cmp	ip, r8
 8025888:	f280 81c7 	bge.w	8025c1a <_ZN8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x456>
 802588c:	b21b      	sxth	r3, r3
 802588e:	fb0c 2203 	mla	r2, ip, r3, r2
 8025892:	9d0f      	ldr	r5, [sp, #60]	; 0x3c
 8025894:	eb05 0882 	add.w	r8, r5, r2, lsl #2
 8025898:	f855 2022 	ldr.w	r2, [r5, r2, lsl #2]
 802589c:	ea4f 6e12 	mov.w	lr, r2, lsr #24
 80258a0:	2900      	cmp	r1, #0
 80258a2:	f000 8182 	beq.w	8025baa <_ZN8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x3e6>
 80258a6:	f8d8 5004 	ldr.w	r5, [r8, #4]
 80258aa:	950b      	str	r5, [sp, #44]	; 0x2c
 80258ac:	0e2d      	lsrs	r5, r5, #24
 80258ae:	9512      	str	r5, [sp, #72]	; 0x48
 80258b0:	b180      	cbz	r0, 80258d4 <_ZN8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x110>
 80258b2:	f103 4380 	add.w	r3, r3, #1073741824	; 0x40000000
 80258b6:	3b01      	subs	r3, #1
 80258b8:	009b      	lsls	r3, r3, #2
 80258ba:	3304      	adds	r3, #4
 80258bc:	eb08 0c03 	add.w	ip, r8, r3
 80258c0:	f858 3003 	ldr.w	r3, [r8, r3]
 80258c4:	9308      	str	r3, [sp, #32]
 80258c6:	0e1b      	lsrs	r3, r3, #24
 80258c8:	9310      	str	r3, [sp, #64]	; 0x40
 80258ca:	f8dc 3004 	ldr.w	r3, [ip, #4]
 80258ce:	930c      	str	r3, [sp, #48]	; 0x30
 80258d0:	0e1b      	lsrs	r3, r3, #24
 80258d2:	9313      	str	r3, [sp, #76]	; 0x4c
 80258d4:	b289      	uxth	r1, r1
 80258d6:	b280      	uxth	r0, r0
 80258d8:	fb01 f900 	mul.w	r9, r1, r0
 80258dc:	ebc9 1000 	rsb	r0, r9, r0, lsl #4
 80258e0:	0109      	lsls	r1, r1, #4
 80258e2:	eba1 0809 	sub.w	r8, r1, r9
 80258e6:	b280      	uxth	r0, r0
 80258e8:	f5c1 7180 	rsb	r1, r1, #256	; 0x100
 80258ec:	9b12      	ldr	r3, [sp, #72]	; 0x48
 80258ee:	9d10      	ldr	r5, [sp, #64]	; 0x40
 80258f0:	fa1f f888 	uxth.w	r8, r8
 80258f4:	1a09      	subs	r1, r1, r0
 80258f6:	b289      	uxth	r1, r1
 80258f8:	fb08 f303 	mul.w	r3, r8, r3
 80258fc:	fb01 330e 	mla	r3, r1, lr, r3
 8025900:	fb00 3305 	mla	r3, r0, r5, r3
 8025904:	9d13      	ldr	r5, [sp, #76]	; 0x4c
 8025906:	fb09 3305 	mla	r3, r9, r5, r3
 802590a:	f3c3 2307 	ubfx	r3, r3, #8, #8
 802590e:	2b00      	cmp	r3, #0
 8025910:	f000 80d2 	beq.w	8025ab8 <_ZN8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x2f4>
 8025914:	f1be 0fff 	cmp.w	lr, #255	; 0xff
 8025918:	d01b      	beq.n	8025952 <_ZN8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x18e>
 802591a:	f002 1aff 	and.w	sl, r2, #16711935	; 0xff00ff
 802591e:	fb0e fa0a 	mul.w	sl, lr, sl
 8025922:	f402 427f 	and.w	r2, r2, #65280	; 0xff00
 8025926:	fb0e fe02 	mul.w	lr, lr, r2
 802592a:	ea4f 221a 	mov.w	r2, sl, lsr #8
 802592e:	f002 12ff 	and.w	r2, r2, #16711935	; 0xff00ff
 8025932:	f10a 1a01 	add.w	sl, sl, #65537	; 0x10001
 8025936:	f50e 7c80 	add.w	ip, lr, #256	; 0x100
 802593a:	4452      	add	r2, sl
 802593c:	eb0c 2c1e 	add.w	ip, ip, lr, lsr #8
 8025940:	0a12      	lsrs	r2, r2, #8
 8025942:	ea4f 2c1c 	mov.w	ip, ip, lsr #8
 8025946:	f002 12ff 	and.w	r2, r2, #16711935	; 0xff00ff
 802594a:	f40c 4c7f 	and.w	ip, ip, #65280	; 0xff00
 802594e:	ea42 020c 	orr.w	r2, r2, ip
 8025952:	9d12      	ldr	r5, [sp, #72]	; 0x48
 8025954:	2dff      	cmp	r5, #255	; 0xff
 8025956:	d021      	beq.n	802599c <_ZN8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x1d8>
 8025958:	9d0b      	ldr	r5, [sp, #44]	; 0x2c
 802595a:	f005 1bff 	and.w	fp, r5, #16711935	; 0xff00ff
 802595e:	9d12      	ldr	r5, [sp, #72]	; 0x48
 8025960:	fb05 fb0b 	mul.w	fp, r5, fp
 8025964:	9d0b      	ldr	r5, [sp, #44]	; 0x2c
 8025966:	f405 4a7f 	and.w	sl, r5, #65280	; 0xff00
 802596a:	9d12      	ldr	r5, [sp, #72]	; 0x48
 802596c:	ea4f 2e1b 	mov.w	lr, fp, lsr #8
 8025970:	fb05 fa0a 	mul.w	sl, r5, sl
 8025974:	f00e 1eff 	and.w	lr, lr, #16711935	; 0xff00ff
 8025978:	f10b 1b01 	add.w	fp, fp, #65537	; 0x10001
 802597c:	f50a 7c80 	add.w	ip, sl, #256	; 0x100
 8025980:	44de      	add	lr, fp
 8025982:	eb0c 2a1a 	add.w	sl, ip, sl, lsr #8
 8025986:	ea4f 2e1e 	mov.w	lr, lr, lsr #8
 802598a:	ea4f 2a1a 	mov.w	sl, sl, lsr #8
 802598e:	f00e 1eff 	and.w	lr, lr, #16711935	; 0xff00ff
 8025992:	f40a 4a7f 	and.w	sl, sl, #65280	; 0xff00
 8025996:	ea4e 050a 	orr.w	r5, lr, sl
 802599a:	950b      	str	r5, [sp, #44]	; 0x2c
 802599c:	9d10      	ldr	r5, [sp, #64]	; 0x40
 802599e:	2dff      	cmp	r5, #255	; 0xff
 80259a0:	d021      	beq.n	80259e6 <_ZN8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x222>
 80259a2:	9d08      	ldr	r5, [sp, #32]
 80259a4:	f005 1bff 	and.w	fp, r5, #16711935	; 0xff00ff
 80259a8:	9d10      	ldr	r5, [sp, #64]	; 0x40
 80259aa:	fb05 fb0b 	mul.w	fp, r5, fp
 80259ae:	9d08      	ldr	r5, [sp, #32]
 80259b0:	f405 4e7f 	and.w	lr, r5, #65280	; 0xff00
 80259b4:	9d10      	ldr	r5, [sp, #64]	; 0x40
 80259b6:	fb05 fa0e 	mul.w	sl, r5, lr
 80259ba:	ea4f 2e1b 	mov.w	lr, fp, lsr #8
 80259be:	f00e 1eff 	and.w	lr, lr, #16711935	; 0xff00ff
 80259c2:	f10b 1b01 	add.w	fp, fp, #65537	; 0x10001
 80259c6:	f50a 7c80 	add.w	ip, sl, #256	; 0x100
 80259ca:	44de      	add	lr, fp
 80259cc:	eb0c 2a1a 	add.w	sl, ip, sl, lsr #8
 80259d0:	ea4f 2e1e 	mov.w	lr, lr, lsr #8
 80259d4:	ea4f 2a1a 	mov.w	sl, sl, lsr #8
 80259d8:	f00e 1eff 	and.w	lr, lr, #16711935	; 0xff00ff
 80259dc:	f40a 4a7f 	and.w	sl, sl, #65280	; 0xff00
 80259e0:	ea4e 050a 	orr.w	r5, lr, sl
 80259e4:	9508      	str	r5, [sp, #32]
 80259e6:	9d13      	ldr	r5, [sp, #76]	; 0x4c
 80259e8:	2dff      	cmp	r5, #255	; 0xff
 80259ea:	d021      	beq.n	8025a30 <_ZN8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x26c>
 80259ec:	9d0c      	ldr	r5, [sp, #48]	; 0x30
 80259ee:	f005 1bff 	and.w	fp, r5, #16711935	; 0xff00ff
 80259f2:	9d13      	ldr	r5, [sp, #76]	; 0x4c
 80259f4:	fb05 fb0b 	mul.w	fp, r5, fp
 80259f8:	9d0c      	ldr	r5, [sp, #48]	; 0x30
 80259fa:	f405 4a7f 	and.w	sl, r5, #65280	; 0xff00
 80259fe:	9d13      	ldr	r5, [sp, #76]	; 0x4c
 8025a00:	ea4f 2e1b 	mov.w	lr, fp, lsr #8
 8025a04:	fb05 fa0a 	mul.w	sl, r5, sl
 8025a08:	f00e 1eff 	and.w	lr, lr, #16711935	; 0xff00ff
 8025a0c:	f10b 1b01 	add.w	fp, fp, #65537	; 0x10001
 8025a10:	f50a 7c80 	add.w	ip, sl, #256	; 0x100
 8025a14:	44de      	add	lr, fp
 8025a16:	eb0c 2a1a 	add.w	sl, ip, sl, lsr #8
 8025a1a:	ea4f 2e1e 	mov.w	lr, lr, lsr #8
 8025a1e:	ea4f 2a1a 	mov.w	sl, sl, lsr #8
 8025a22:	f00e 1eff 	and.w	lr, lr, #16711935	; 0xff00ff
 8025a26:	f40a 4a7f 	and.w	sl, sl, #65280	; 0xff00
 8025a2a:	ea4e 050a 	orr.w	r5, lr, sl
 8025a2e:	950c      	str	r5, [sp, #48]	; 0x30
 8025a30:	9d0b      	ldr	r5, [sp, #44]	; 0x2c
 8025a32:	f005 1cff 	and.w	ip, r5, #16711935	; 0xff00ff
 8025a36:	9d08      	ldr	r5, [sp, #32]
 8025a38:	f002 1eff 	and.w	lr, r2, #16711935	; 0xff00ff
 8025a3c:	fb08 fc0c 	mul.w	ip, r8, ip
 8025a40:	fb01 cc0e 	mla	ip, r1, lr, ip
 8025a44:	f005 1eff 	and.w	lr, r5, #16711935	; 0xff00ff
 8025a48:	9d0c      	ldr	r5, [sp, #48]	; 0x30
 8025a4a:	fb00 cc0e 	mla	ip, r0, lr, ip
 8025a4e:	f005 1eff 	and.w	lr, r5, #16711935	; 0xff00ff
 8025a52:	9d0b      	ldr	r5, [sp, #44]	; 0x2c
 8025a54:	fb09 cc0e 	mla	ip, r9, lr, ip
 8025a58:	f405 4e7f 	and.w	lr, r5, #65280	; 0xff00
 8025a5c:	f402 427f 	and.w	r2, r2, #65280	; 0xff00
 8025a60:	fb08 f80e 	mul.w	r8, r8, lr
 8025a64:	fb01 8202 	mla	r2, r1, r2, r8
 8025a68:	9908      	ldr	r1, [sp, #32]
 8025a6a:	f401 4a7f 	and.w	sl, r1, #65280	; 0xff00
 8025a6e:	990c      	ldr	r1, [sp, #48]	; 0x30
 8025a70:	fb00 220a 	mla	r2, r0, sl, r2
 8025a74:	f401 407f 	and.w	r0, r1, #65280	; 0xff00
 8025a78:	fb09 2900 	mla	r9, r9, r0, r2
 8025a7c:	ea4f 2c1c 	mov.w	ip, ip, lsr #8
 8025a80:	ea4f 2919 	mov.w	r9, r9, lsr #8
 8025a84:	f00c 1cff 	and.w	ip, ip, #16711935	; 0xff00ff
 8025a88:	f409 497f 	and.w	r9, r9, #65280	; 0xff00
 8025a8c:	ea4c 0c09 	orr.w	ip, ip, r9
 8025a90:	2bff      	cmp	r3, #255	; 0xff
 8025a92:	ea4f 221c 	mov.w	r2, ip, lsr #8
 8025a96:	f040 8091 	bne.w	8025bbc <_ZN8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x3f8>
 8025a9a:	ea4f 135c 	mov.w	r3, ip, lsr #5
 8025a9e:	f422 62ff 	bic.w	r2, r2, #2040	; 0x7f8
 8025aa2:	f403 63fc 	and.w	r3, r3, #2016	; 0x7e0
 8025aa6:	f022 0207 	bic.w	r2, r2, #7
 8025aaa:	431a      	orrs	r2, r3
 8025aac:	f3cc 0cc4 	ubfx	ip, ip, #3, #5
 8025ab0:	ea4c 0c02 	orr.w	ip, ip, r2
 8025ab4:	f8a7 c000 	strh.w	ip, [r7]
 8025ab8:	9b27      	ldr	r3, [sp, #156]	; 0x9c
 8025aba:	441c      	add	r4, r3
 8025abc:	9b28      	ldr	r3, [sp, #160]	; 0xa0
 8025abe:	441e      	add	r6, r3
 8025ac0:	9b17      	ldr	r3, [sp, #92]	; 0x5c
 8025ac2:	3b01      	subs	r3, #1
 8025ac4:	3702      	adds	r7, #2
 8025ac6:	9317      	str	r3, [sp, #92]	; 0x5c
 8025ac8:	e6c0      	b.n	802584c <_ZN8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x88>
 8025aca:	9b27      	ldr	r3, [sp, #156]	; 0x9c
 8025acc:	441c      	add	r4, r3
 8025ace:	9b28      	ldr	r3, [sp, #160]	; 0xa0
 8025ad0:	441e      	add	r6, r3
 8025ad2:	9b07      	ldr	r3, [sp, #28]
 8025ad4:	3b01      	subs	r3, #1
 8025ad6:	9307      	str	r3, [sp, #28]
 8025ad8:	9b0a      	ldr	r3, [sp, #40]	; 0x28
 8025ada:	3302      	adds	r3, #2
 8025adc:	930a      	str	r3, [sp, #40]	; 0x28
 8025ade:	e695      	b.n	802580c <_ZN8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x48>
 8025ae0:	d024      	beq.n	8025b2c <_ZN8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x368>
 8025ae2:	9b07      	ldr	r3, [sp, #28]
 8025ae4:	9827      	ldr	r0, [sp, #156]	; 0x9c
 8025ae6:	3b01      	subs	r3, #1
 8025ae8:	fb00 4003 	mla	r0, r0, r3, r4
 8025aec:	1400      	asrs	r0, r0, #16
 8025aee:	f53f aeaa 	bmi.w	8025846 <_ZN8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x82>
 8025af2:	3901      	subs	r1, #1
 8025af4:	4288      	cmp	r0, r1
 8025af6:	f6bf aea6 	bge.w	8025846 <_ZN8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x82>
 8025afa:	9928      	ldr	r1, [sp, #160]	; 0xa0
 8025afc:	fb01 6303 	mla	r3, r1, r3, r6
 8025b00:	141b      	asrs	r3, r3, #16
 8025b02:	f53f aea0 	bmi.w	8025846 <_ZN8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x82>
 8025b06:	3a01      	subs	r2, #1
 8025b08:	4293      	cmp	r3, r2
 8025b0a:	f6bf ae9c 	bge.w	8025846 <_ZN8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x82>
 8025b0e:	f8dd b01c 	ldr.w	fp, [sp, #28]
 8025b12:	f8dd 8028 	ldr.w	r8, [sp, #40]	; 0x28
 8025b16:	f1bb 0f00 	cmp.w	fp, #0
 8025b1a:	f300 809a 	bgt.w	8025c52 <_ZN8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x48e>
 8025b1e:	9b07      	ldr	r3, [sp, #28]
 8025b20:	ea23 75e3 	bic.w	r5, r3, r3, asr #31
 8025b24:	9b0a      	ldr	r3, [sp, #40]	; 0x28
 8025b26:	eb03 0345 	add.w	r3, r3, r5, lsl #1
 8025b2a:	930a      	str	r3, [sp, #40]	; 0x28
 8025b2c:	9b16      	ldr	r3, [sp, #88]	; 0x58
 8025b2e:	2b00      	cmp	r3, #0
 8025b30:	f340 81eb 	ble.w	8025f0a <_ZN8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x746>
 8025b34:	ee30 0a04 	vadd.f32	s0, s0, s8
 8025b38:	eeb7 7a00 	vmov.f32	s14, #112	; 0x3f800000  1.0
 8025b3c:	eec7 7a00 	vdiv.f32	s15, s14, s0
 8025b40:	9b24      	ldr	r3, [sp, #144]	; 0x90
 8025b42:	ee70 0aa4 	vadd.f32	s1, s1, s9
 8025b46:	ee31 1a05 	vadd.f32	s2, s2, s10
 8025b4a:	ee20 7aa7 	vmul.f32	s14, s1, s15
 8025b4e:	eef0 6a62 	vmov.f32	s13, s5
 8025b52:	ee61 7a27 	vmul.f32	s15, s2, s15
 8025b56:	eefe 6ac8 	vcvt.s32.f32	s13, s13, #16
 8025b5a:	ee77 2a62 	vsub.f32	s5, s14, s5
 8025b5e:	ee16 4a90 	vmov	r4, s13
 8025b62:	eefe 2ac8 	vcvt.s32.f32	s5, s5, #16
 8025b66:	eef0 6a43 	vmov.f32	s13, s6
 8025b6a:	ee37 3ac3 	vsub.f32	s6, s15, s6
 8025b6e:	ee12 2a90 	vmov	r2, s5
 8025b72:	eebe 3ac8 	vcvt.s32.f32	s6, s6, #16
 8025b76:	fb92 f3f3 	sdiv	r3, r2, r3
 8025b7a:	ee13 2a10 	vmov	r2, s6
 8025b7e:	9327      	str	r3, [sp, #156]	; 0x9c
 8025b80:	9b24      	ldr	r3, [sp, #144]	; 0x90
 8025b82:	fb92 f3f3 	sdiv	r3, r2, r3
 8025b86:	9328      	str	r3, [sp, #160]	; 0xa0
 8025b88:	9b16      	ldr	r3, [sp, #88]	; 0x58
 8025b8a:	9a18      	ldr	r2, [sp, #96]	; 0x60
 8025b8c:	3b01      	subs	r3, #1
 8025b8e:	eefe 6ac8 	vcvt.s32.f32	s13, s13, #16
 8025b92:	9316      	str	r3, [sp, #88]	; 0x58
 8025b94:	9b24      	ldr	r3, [sp, #144]	; 0x90
 8025b96:	bf08      	it	eq
 8025b98:	4613      	moveq	r3, r2
 8025b9a:	ee16 6a90 	vmov	r6, s13
 8025b9e:	9307      	str	r3, [sp, #28]
 8025ba0:	eeb0 3a67 	vmov.f32	s6, s15
 8025ba4:	eef0 2a47 	vmov.f32	s5, s14
 8025ba8:	e622      	b.n	80257f0 <_ZN8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x2c>
 8025baa:	2800      	cmp	r0, #0
 8025bac:	f43f ae92 	beq.w	80258d4 <_ZN8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x110>
 8025bb0:	f858 3023 	ldr.w	r3, [r8, r3, lsl #2]
 8025bb4:	9308      	str	r3, [sp, #32]
 8025bb6:	0e1b      	lsrs	r3, r3, #24
 8025bb8:	9310      	str	r3, [sp, #64]	; 0x40
 8025bba:	e68b      	b.n	80258d4 <_ZN8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x110>
 8025bbc:	8839      	ldrh	r1, [r7, #0]
 8025bbe:	4dd4      	ldr	r5, [pc, #848]	; (8025f10 <_ZN8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x74c>)
 8025bc0:	43db      	mvns	r3, r3
 8025bc2:	ea4f 2e21 	mov.w	lr, r1, asr #8
 8025bc6:	fa5f f883 	uxtb.w	r8, r3
 8025bca:	f00e 0ef8 	and.w	lr, lr, #248	; 0xf8
 8025bce:	fb0e fe08 	mul.w	lr, lr, r8
 8025bd2:	10c8      	asrs	r0, r1, #3
 8025bd4:	00cb      	lsls	r3, r1, #3
 8025bd6:	f000 00fc 	and.w	r0, r0, #252	; 0xfc
 8025bda:	f10e 0101 	add.w	r1, lr, #1
 8025bde:	eb01 2e1e 	add.w	lr, r1, lr, lsr #8
 8025be2:	fb00 f008 	mul.w	r0, r0, r8
 8025be6:	ea4f 411c 	mov.w	r1, ip, lsr #16
 8025bea:	eb01 211e 	add.w	r1, r1, lr, lsr #8
 8025bee:	f100 0e01 	add.w	lr, r0, #1
 8025bf2:	eb0e 2010 	add.w	r0, lr, r0, lsr #8
 8025bf6:	eb02 2210 	add.w	r2, r2, r0, lsr #8
 8025bfa:	b2db      	uxtb	r3, r3
 8025bfc:	b2c9      	uxtb	r1, r1
 8025bfe:	00d2      	lsls	r2, r2, #3
 8025c00:	fb03 f308 	mul.w	r3, r3, r8
 8025c04:	ea05 2101 	and.w	r1, r5, r1, lsl #8
 8025c08:	f402 62fc 	and.w	r2, r2, #2016	; 0x7e0
 8025c0c:	430a      	orrs	r2, r1
 8025c0e:	1c59      	adds	r1, r3, #1
 8025c10:	eb01 2313 	add.w	r3, r1, r3, lsr #8
 8025c14:	eb0c 2c13 	add.w	ip, ip, r3, lsr #8
 8025c18:	e748      	b.n	8025aac <_ZN8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x2e8>
 8025c1a:	f112 0801 	adds.w	r8, r2, #1
 8025c1e:	f53f af4b 	bmi.w	8025ab8 <_ZN8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x2f4>
 8025c22:	4543      	cmp	r3, r8
 8025c24:	f6ff af48 	blt.w	8025ab8 <_ZN8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x2f4>
 8025c28:	f11c 0801 	adds.w	r8, ip, #1
 8025c2c:	f53f af44 	bmi.w	8025ab8 <_ZN8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x2f4>
 8025c30:	45c6      	cmp	lr, r8
 8025c32:	f6ff af41 	blt.w	8025ab8 <_ZN8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x2f4>
 8025c36:	e9cd 2c01 	strd	r2, ip, [sp, #4]
 8025c3a:	fa0f f28e 	sxth.w	r2, lr
 8025c3e:	e9cd 1003 	strd	r1, r0, [sp, #12]
 8025c42:	9200      	str	r2, [sp, #0]
 8025c44:	b21b      	sxth	r3, r3
 8025c46:	9a0f      	ldr	r2, [sp, #60]	; 0x3c
 8025c48:	9819      	ldr	r0, [sp, #100]	; 0x64
 8025c4a:	4639      	mov	r1, r7
 8025c4c:	f7ff fc87 	bl	802555e <_ZNK8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKmssiihh>
 8025c50:	e732      	b.n	8025ab8 <_ZN8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x2f4>
 8025c52:	9b2c      	ldr	r3, [sp, #176]	; 0xb0
 8025c54:	9d0f      	ldr	r5, [sp, #60]	; 0x3c
 8025c56:	f9b3 7008 	ldrsh.w	r7, [r3, #8]
 8025c5a:	1421      	asrs	r1, r4, #16
 8025c5c:	1433      	asrs	r3, r6, #16
 8025c5e:	fb07 1303 	mla	r3, r7, r3, r1
 8025c62:	990f      	ldr	r1, [sp, #60]	; 0x3c
 8025c64:	eb01 0183 	add.w	r1, r1, r3, lsl #2
 8025c68:	f855 3023 	ldr.w	r3, [r5, r3, lsl #2]
 8025c6c:	f3c4 3203 	ubfx	r2, r4, #12, #4
 8025c70:	f3c6 3003 	ubfx	r0, r6, #12, #4
 8025c74:	ea4f 6c13 	mov.w	ip, r3, lsr #24
 8025c78:	2a00      	cmp	r2, #0
 8025c7a:	f000 8107 	beq.w	8025e8c <_ZN8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x6c8>
 8025c7e:	684d      	ldr	r5, [r1, #4]
 8025c80:	950d      	str	r5, [sp, #52]	; 0x34
 8025c82:	0e2d      	lsrs	r5, r5, #24
 8025c84:	9514      	str	r5, [sp, #80]	; 0x50
 8025c86:	b178      	cbz	r0, 8025ca8 <_ZN8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x4e4>
 8025c88:	f107 4780 	add.w	r7, r7, #1073741824	; 0x40000000
 8025c8c:	3f01      	subs	r7, #1
 8025c8e:	00bf      	lsls	r7, r7, #2
 8025c90:	3704      	adds	r7, #4
 8025c92:	eb01 0e07 	add.w	lr, r1, r7
 8025c96:	59c9      	ldr	r1, [r1, r7]
 8025c98:	9109      	str	r1, [sp, #36]	; 0x24
 8025c9a:	0e09      	lsrs	r1, r1, #24
 8025c9c:	9111      	str	r1, [sp, #68]	; 0x44
 8025c9e:	f8de 1004 	ldr.w	r1, [lr, #4]
 8025ca2:	910e      	str	r1, [sp, #56]	; 0x38
 8025ca4:	0e09      	lsrs	r1, r1, #24
 8025ca6:	9115      	str	r1, [sp, #84]	; 0x54
 8025ca8:	b292      	uxth	r2, r2
 8025caa:	b280      	uxth	r0, r0
 8025cac:	fb02 f900 	mul.w	r9, r2, r0
 8025cb0:	ebc9 1000 	rsb	r0, r9, r0, lsl #4
 8025cb4:	0112      	lsls	r2, r2, #4
 8025cb6:	eba2 0e09 	sub.w	lr, r2, r9
 8025cba:	b280      	uxth	r0, r0
 8025cbc:	f5c2 7180 	rsb	r1, r2, #256	; 0x100
 8025cc0:	9a14      	ldr	r2, [sp, #80]	; 0x50
 8025cc2:	9d11      	ldr	r5, [sp, #68]	; 0x44
 8025cc4:	fa1f fe8e 	uxth.w	lr, lr
 8025cc8:	1a09      	subs	r1, r1, r0
 8025cca:	b289      	uxth	r1, r1
 8025ccc:	fb0e f202 	mul.w	r2, lr, r2
 8025cd0:	fb01 220c 	mla	r2, r1, ip, r2
 8025cd4:	fb00 2205 	mla	r2, r0, r5, r2
 8025cd8:	9d15      	ldr	r5, [sp, #84]	; 0x54
 8025cda:	fb09 2205 	mla	r2, r9, r5, r2
 8025cde:	f3c2 2207 	ubfx	r2, r2, #8, #8
 8025ce2:	2a00      	cmp	r2, #0
 8025ce4:	f000 80c9 	beq.w	8025e7a <_ZN8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x6b6>
 8025ce8:	f1bc 0fff 	cmp.w	ip, #255	; 0xff
 8025cec:	d019      	beq.n	8025d22 <_ZN8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x55e>
 8025cee:	f003 1aff 	and.w	sl, r3, #16711935	; 0xff00ff
 8025cf2:	fb0c fa0a 	mul.w	sl, ip, sl
 8025cf6:	f403 437f 	and.w	r3, r3, #65280	; 0xff00
 8025cfa:	fb0c fc03 	mul.w	ip, ip, r3
 8025cfe:	ea4f 231a 	mov.w	r3, sl, lsr #8
 8025d02:	f003 13ff 	and.w	r3, r3, #16711935	; 0xff00ff
 8025d06:	f10a 1a01 	add.w	sl, sl, #65537	; 0x10001
 8025d0a:	f50c 7780 	add.w	r7, ip, #256	; 0x100
 8025d0e:	4453      	add	r3, sl
 8025d10:	eb07 271c 	add.w	r7, r7, ip, lsr #8
 8025d14:	0a1b      	lsrs	r3, r3, #8
 8025d16:	0a3f      	lsrs	r7, r7, #8
 8025d18:	f003 13ff 	and.w	r3, r3, #16711935	; 0xff00ff
 8025d1c:	f407 477f 	and.w	r7, r7, #65280	; 0xff00
 8025d20:	433b      	orrs	r3, r7
 8025d22:	9d14      	ldr	r5, [sp, #80]	; 0x50
 8025d24:	2dff      	cmp	r5, #255	; 0xff
 8025d26:	d020      	beq.n	8025d6a <_ZN8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x5a6>
 8025d28:	9d0d      	ldr	r5, [sp, #52]	; 0x34
 8025d2a:	f005 17ff 	and.w	r7, r5, #16711935	; 0xff00ff
 8025d2e:	9d14      	ldr	r5, [sp, #80]	; 0x50
 8025d30:	436f      	muls	r7, r5
 8025d32:	9d0d      	ldr	r5, [sp, #52]	; 0x34
 8025d34:	f405 4a7f 	and.w	sl, r5, #65280	; 0xff00
 8025d38:	9d14      	ldr	r5, [sp, #80]	; 0x50
 8025d3a:	ea4f 2c17 	mov.w	ip, r7, lsr #8
 8025d3e:	fb05 fa0a 	mul.w	sl, r5, sl
 8025d42:	f107 1701 	add.w	r7, r7, #65537	; 0x10001
 8025d46:	f00c 1cff 	and.w	ip, ip, #16711935	; 0xff00ff
 8025d4a:	44bc      	add	ip, r7
 8025d4c:	f50a 7780 	add.w	r7, sl, #256	; 0x100
 8025d50:	eb07 2a1a 	add.w	sl, r7, sl, lsr #8
 8025d54:	ea4f 2c1c 	mov.w	ip, ip, lsr #8
 8025d58:	ea4f 2a1a 	mov.w	sl, sl, lsr #8
 8025d5c:	f00c 1cff 	and.w	ip, ip, #16711935	; 0xff00ff
 8025d60:	f40a 4a7f 	and.w	sl, sl, #65280	; 0xff00
 8025d64:	ea4c 050a 	orr.w	r5, ip, sl
 8025d68:	950d      	str	r5, [sp, #52]	; 0x34
 8025d6a:	9d11      	ldr	r5, [sp, #68]	; 0x44
 8025d6c:	2dff      	cmp	r5, #255	; 0xff
 8025d6e:	d020      	beq.n	8025db2 <_ZN8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x5ee>
 8025d70:	9d09      	ldr	r5, [sp, #36]	; 0x24
 8025d72:	f005 17ff 	and.w	r7, r5, #16711935	; 0xff00ff
 8025d76:	9d11      	ldr	r5, [sp, #68]	; 0x44
 8025d78:	436f      	muls	r7, r5
 8025d7a:	9d09      	ldr	r5, [sp, #36]	; 0x24
 8025d7c:	f405 4c7f 	and.w	ip, r5, #65280	; 0xff00
 8025d80:	9d11      	ldr	r5, [sp, #68]	; 0x44
 8025d82:	fb05 fa0c 	mul.w	sl, r5, ip
 8025d86:	ea4f 2c17 	mov.w	ip, r7, lsr #8
 8025d8a:	f00c 1cff 	and.w	ip, ip, #16711935	; 0xff00ff
 8025d8e:	f107 1701 	add.w	r7, r7, #65537	; 0x10001
 8025d92:	44bc      	add	ip, r7
 8025d94:	f50a 7780 	add.w	r7, sl, #256	; 0x100
 8025d98:	eb07 2a1a 	add.w	sl, r7, sl, lsr #8
 8025d9c:	ea4f 2c1c 	mov.w	ip, ip, lsr #8
 8025da0:	ea4f 2a1a 	mov.w	sl, sl, lsr #8
 8025da4:	f00c 1cff 	and.w	ip, ip, #16711935	; 0xff00ff
 8025da8:	f40a 4a7f 	and.w	sl, sl, #65280	; 0xff00
 8025dac:	ea4c 050a 	orr.w	r5, ip, sl
 8025db0:	9509      	str	r5, [sp, #36]	; 0x24
 8025db2:	9d15      	ldr	r5, [sp, #84]	; 0x54
 8025db4:	2dff      	cmp	r5, #255	; 0xff
 8025db6:	d020      	beq.n	8025dfa <_ZN8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x636>
 8025db8:	9d0e      	ldr	r5, [sp, #56]	; 0x38
 8025dba:	f005 17ff 	and.w	r7, r5, #16711935	; 0xff00ff
 8025dbe:	9d15      	ldr	r5, [sp, #84]	; 0x54
 8025dc0:	436f      	muls	r7, r5
 8025dc2:	9d0e      	ldr	r5, [sp, #56]	; 0x38
 8025dc4:	f405 4a7f 	and.w	sl, r5, #65280	; 0xff00
 8025dc8:	9d15      	ldr	r5, [sp, #84]	; 0x54
 8025dca:	ea4f 2c17 	mov.w	ip, r7, lsr #8
 8025dce:	fb05 fa0a 	mul.w	sl, r5, sl
 8025dd2:	f107 1701 	add.w	r7, r7, #65537	; 0x10001
 8025dd6:	f00c 1cff 	and.w	ip, ip, #16711935	; 0xff00ff
 8025dda:	44bc      	add	ip, r7
 8025ddc:	f50a 7780 	add.w	r7, sl, #256	; 0x100
 8025de0:	eb07 2a1a 	add.w	sl, r7, sl, lsr #8
 8025de4:	ea4f 2c1c 	mov.w	ip, ip, lsr #8
 8025de8:	ea4f 2a1a 	mov.w	sl, sl, lsr #8
 8025dec:	f00c 1cff 	and.w	ip, ip, #16711935	; 0xff00ff
 8025df0:	f40a 4a7f 	and.w	sl, sl, #65280	; 0xff00
 8025df4:	ea4c 050a 	orr.w	r5, ip, sl
 8025df8:	950e      	str	r5, [sp, #56]	; 0x38
 8025dfa:	9d0d      	ldr	r5, [sp, #52]	; 0x34
 8025dfc:	f005 17ff 	and.w	r7, r5, #16711935	; 0xff00ff
 8025e00:	9d09      	ldr	r5, [sp, #36]	; 0x24
 8025e02:	f003 1cff 	and.w	ip, r3, #16711935	; 0xff00ff
 8025e06:	fb0e f707 	mul.w	r7, lr, r7
 8025e0a:	fb01 770c 	mla	r7, r1, ip, r7
 8025e0e:	f005 1cff 	and.w	ip, r5, #16711935	; 0xff00ff
 8025e12:	9d0e      	ldr	r5, [sp, #56]	; 0x38
 8025e14:	fb00 770c 	mla	r7, r0, ip, r7
 8025e18:	f005 1cff 	and.w	ip, r5, #16711935	; 0xff00ff
 8025e1c:	9d0d      	ldr	r5, [sp, #52]	; 0x34
 8025e1e:	fb09 770c 	mla	r7, r9, ip, r7
 8025e22:	f405 4c7f 	and.w	ip, r5, #65280	; 0xff00
 8025e26:	fb0e fe0c 	mul.w	lr, lr, ip
 8025e2a:	f403 437f 	and.w	r3, r3, #65280	; 0xff00
 8025e2e:	fb01 e303 	mla	r3, r1, r3, lr
 8025e32:	9909      	ldr	r1, [sp, #36]	; 0x24
 8025e34:	f401 4a7f 	and.w	sl, r1, #65280	; 0xff00
 8025e38:	990e      	ldr	r1, [sp, #56]	; 0x38
 8025e3a:	fb00 330a 	mla	r3, r0, sl, r3
 8025e3e:	f401 4c7f 	and.w	ip, r1, #65280	; 0xff00
 8025e42:	fb09 3c0c 	mla	ip, r9, ip, r3
 8025e46:	0a3f      	lsrs	r7, r7, #8
 8025e48:	ea4f 2c1c 	mov.w	ip, ip, lsr #8
 8025e4c:	f007 17ff 	and.w	r7, r7, #16711935	; 0xff00ff
 8025e50:	f40c 4c7f 	and.w	ip, ip, #65280	; 0xff00
 8025e54:	ea47 070c 	orr.w	r7, r7, ip
 8025e58:	2aff      	cmp	r2, #255	; 0xff
 8025e5a:	ea4f 2317 	mov.w	r3, r7, lsr #8
 8025e5e:	d11e      	bne.n	8025e9e <_ZN8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x6da>
 8025e60:	097a      	lsrs	r2, r7, #5
 8025e62:	f423 63ff 	bic.w	r3, r3, #2040	; 0x7f8
 8025e66:	f402 62fc 	and.w	r2, r2, #2016	; 0x7e0
 8025e6a:	f023 0307 	bic.w	r3, r3, #7
 8025e6e:	4313      	orrs	r3, r2
 8025e70:	f3c7 07c4 	ubfx	r7, r7, #3, #5
 8025e74:	431f      	orrs	r7, r3
 8025e76:	f8a8 7000 	strh.w	r7, [r8]
 8025e7a:	9b27      	ldr	r3, [sp, #156]	; 0x9c
 8025e7c:	441c      	add	r4, r3
 8025e7e:	9b28      	ldr	r3, [sp, #160]	; 0xa0
 8025e80:	f108 0802 	add.w	r8, r8, #2
 8025e84:	441e      	add	r6, r3
 8025e86:	f10b 3bff 	add.w	fp, fp, #4294967295
 8025e8a:	e644      	b.n	8025b16 <_ZN8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x352>
 8025e8c:	2800      	cmp	r0, #0
 8025e8e:	f43f af0b 	beq.w	8025ca8 <_ZN8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x4e4>
 8025e92:	f851 1027 	ldr.w	r1, [r1, r7, lsl #2]
 8025e96:	9109      	str	r1, [sp, #36]	; 0x24
 8025e98:	0e09      	lsrs	r1, r1, #24
 8025e9a:	9111      	str	r1, [sp, #68]	; 0x44
 8025e9c:	e704      	b.n	8025ca8 <_ZN8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x4e4>
 8025e9e:	f8b8 1000 	ldrh.w	r1, [r8]
 8025ea2:	43d2      	mvns	r2, r2
 8025ea4:	ea4f 2c21 	mov.w	ip, r1, asr #8
 8025ea8:	fa5f fe82 	uxtb.w	lr, r2
 8025eac:	f00c 0cf8 	and.w	ip, ip, #248	; 0xf8
 8025eb0:	fb0c fc0e 	mul.w	ip, ip, lr
 8025eb4:	10c8      	asrs	r0, r1, #3
 8025eb6:	00ca      	lsls	r2, r1, #3
 8025eb8:	f10c 0101 	add.w	r1, ip, #1
 8025ebc:	eb01 2c1c 	add.w	ip, r1, ip, lsr #8
 8025ec0:	0c39      	lsrs	r1, r7, #16
 8025ec2:	eb01 2c1c 	add.w	ip, r1, ip, lsr #8
 8025ec6:	f000 00fc 	and.w	r0, r0, #252	; 0xfc
 8025eca:	4911      	ldr	r1, [pc, #68]	; (8025f10 <_ZN8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x74c>)
 8025ecc:	fb00 f00e 	mul.w	r0, r0, lr
 8025ed0:	fa5f fc8c 	uxtb.w	ip, ip
 8025ed4:	ea01 2c0c 	and.w	ip, r1, ip, lsl #8
 8025ed8:	b2d2      	uxtb	r2, r2
 8025eda:	1c41      	adds	r1, r0, #1
 8025edc:	fb02 f20e 	mul.w	r2, r2, lr
 8025ee0:	eb01 2010 	add.w	r0, r1, r0, lsr #8
 8025ee4:	eb03 2010 	add.w	r0, r3, r0, lsr #8
 8025ee8:	1c51      	adds	r1, r2, #1
 8025eea:	00c0      	lsls	r0, r0, #3
 8025eec:	eb01 2212 	add.w	r2, r1, r2, lsr #8
 8025ef0:	f400 60fc 	and.w	r0, r0, #2016	; 0x7e0
 8025ef4:	eb07 2712 	add.w	r7, r7, r2, lsr #8
 8025ef8:	ea4c 0c00 	orr.w	ip, ip, r0
 8025efc:	f3c7 07c4 	ubfx	r7, r7, #3, #5
 8025f00:	ea47 0c0c 	orr.w	ip, r7, ip
 8025f04:	f8a8 c000 	strh.w	ip, [r8]
 8025f08:	e7b7      	b.n	8025e7a <_ZN8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x6b6>
 8025f0a:	b01b      	add	sp, #108	; 0x6c
 8025f0c:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
 8025f10:	fffff800 	.word	0xfffff800

08025f14 <_ZNK8touchgfx8LCD16bpp41TextureMapper_A4_BilinearInterpolation_GA16writePixelOnEdgeEPtPKtsssiihhh>:
 8025f14:	e92d 47f0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, lr}
 8025f18:	e9dd 050a 	ldrd	r0, r5, [sp, #40]	; 0x28
 8025f1c:	2d00      	cmp	r5, #0
 8025f1e:	f9bd 8020 	ldrsh.w	r8, [sp, #32]
 8025f22:	f9bd 9024 	ldrsh.w	r9, [sp, #36]	; 0x24
 8025f26:	f89d 7030 	ldrb.w	r7, [sp, #48]	; 0x30
 8025f2a:	f89d c034 	ldrb.w	ip, [sp, #52]	; 0x34
 8025f2e:	fb05 0e03 	mla	lr, r5, r3, r0
 8025f32:	f2c0 808c 	blt.w	802604e <_ZNK8touchgfx8LCD16bpp41TextureMapper_A4_BilinearInterpolation_GA16writePixelOnEdgeEPtPKtsssiihhh+0x13a>
 8025f36:	45a9      	cmp	r9, r5
 8025f38:	f340 8089 	ble.w	802604e <_ZNK8touchgfx8LCD16bpp41TextureMapper_A4_BilinearInterpolation_GA16writePixelOnEdgeEPtPKtsssiihhh+0x13a>
 8025f3c:	2800      	cmp	r0, #0
 8025f3e:	f2c0 8084 	blt.w	802604a <_ZNK8touchgfx8LCD16bpp41TextureMapper_A4_BilinearInterpolation_GA16writePixelOnEdgeEPtPKtsssiihhh+0x136>
 8025f42:	4580      	cmp	r8, r0
 8025f44:	f340 8081 	ble.w	802604a <_ZNK8touchgfx8LCD16bpp41TextureMapper_A4_BilinearInterpolation_GA16writePixelOnEdgeEPtPKtsssiihhh+0x136>
 8025f48:	ea4f 045e 	mov.w	r4, lr, lsr #1
 8025f4c:	f01e 0f01 	tst.w	lr, #1
 8025f50:	5d16      	ldrb	r6, [r2, r4]
 8025f52:	bf0c      	ite	eq
 8025f54:	f006 060f 	andeq.w	r6, r6, #15
 8025f58:	1136      	asrne	r6, r6, #4
 8025f5a:	eb06 1606 	add.w	r6, r6, r6, lsl #4
 8025f5e:	b2f6      	uxtb	r6, r6
 8025f60:	1c44      	adds	r4, r0, #1
 8025f62:	d477      	bmi.n	8026054 <_ZNK8touchgfx8LCD16bpp41TextureMapper_A4_BilinearInterpolation_GA16writePixelOnEdgeEPtPKtsssiihhh+0x140>
 8025f64:	45a0      	cmp	r8, r4
 8025f66:	dd75      	ble.n	8026054 <_ZNK8touchgfx8LCD16bpp41TextureMapper_A4_BilinearInterpolation_GA16writePixelOnEdgeEPtPKtsssiihhh+0x140>
 8025f68:	2f00      	cmp	r7, #0
 8025f6a:	d075      	beq.n	8026058 <_ZNK8touchgfx8LCD16bpp41TextureMapper_A4_BilinearInterpolation_GA16writePixelOnEdgeEPtPKtsssiihhh+0x144>
 8025f6c:	f10e 0a01 	add.w	sl, lr, #1
 8025f70:	ea4f 045a 	mov.w	r4, sl, lsr #1
 8025f74:	f01a 0f01 	tst.w	sl, #1
 8025f78:	5d14      	ldrb	r4, [r2, r4]
 8025f7a:	bf0c      	ite	eq
 8025f7c:	f004 040f 	andeq.w	r4, r4, #15
 8025f80:	1124      	asrne	r4, r4, #4
 8025f82:	eb04 1404 	add.w	r4, r4, r4, lsl #4
 8025f86:	b2e4      	uxtb	r4, r4
 8025f88:	3501      	adds	r5, #1
 8025f8a:	d469      	bmi.n	8026060 <_ZNK8touchgfx8LCD16bpp41TextureMapper_A4_BilinearInterpolation_GA16writePixelOnEdgeEPtPKtsssiihhh+0x14c>
 8025f8c:	45a9      	cmp	r9, r5
 8025f8e:	dd67      	ble.n	8026060 <_ZNK8touchgfx8LCD16bpp41TextureMapper_A4_BilinearInterpolation_GA16writePixelOnEdgeEPtPKtsssiihhh+0x14c>
 8025f90:	f1bc 0f00 	cmp.w	ip, #0
 8025f94:	d067      	beq.n	8026066 <_ZNK8touchgfx8LCD16bpp41TextureMapper_A4_BilinearInterpolation_GA16writePixelOnEdgeEPtPKtsssiihhh+0x152>
 8025f96:	2800      	cmp	r0, #0
 8025f98:	db60      	blt.n	802605c <_ZNK8touchgfx8LCD16bpp41TextureMapper_A4_BilinearInterpolation_GA16writePixelOnEdgeEPtPKtsssiihhh+0x148>
 8025f9a:	4580      	cmp	r8, r0
 8025f9c:	dd5e      	ble.n	802605c <_ZNK8touchgfx8LCD16bpp41TextureMapper_A4_BilinearInterpolation_GA16writePixelOnEdgeEPtPKtsssiihhh+0x148>
 8025f9e:	eb03 090e 	add.w	r9, r3, lr
 8025fa2:	ea4f 0559 	mov.w	r5, r9, lsr #1
 8025fa6:	f019 0f01 	tst.w	r9, #1
 8025faa:	5d55      	ldrb	r5, [r2, r5]
 8025fac:	bf0c      	ite	eq
 8025fae:	f005 050f 	andeq.w	r5, r5, #15
 8025fb2:	112d      	asrne	r5, r5, #4
 8025fb4:	eb05 1505 	add.w	r5, r5, r5, lsl #4
 8025fb8:	b2ed      	uxtb	r5, r5
 8025fba:	3001      	adds	r0, #1
 8025fbc:	d456      	bmi.n	802606c <_ZNK8touchgfx8LCD16bpp41TextureMapper_A4_BilinearInterpolation_GA16writePixelOnEdgeEPtPKtsssiihhh+0x158>
 8025fbe:	4580      	cmp	r8, r0
 8025fc0:	dd54      	ble.n	802606c <_ZNK8touchgfx8LCD16bpp41TextureMapper_A4_BilinearInterpolation_GA16writePixelOnEdgeEPtPKtsssiihhh+0x158>
 8025fc2:	2f00      	cmp	r7, #0
 8025fc4:	d054      	beq.n	8026070 <_ZNK8touchgfx8LCD16bpp41TextureMapper_A4_BilinearInterpolation_GA16writePixelOnEdgeEPtPKtsssiihhh+0x15c>
 8025fc6:	3301      	adds	r3, #1
 8025fc8:	449e      	add	lr, r3
 8025fca:	ea4f 035e 	mov.w	r3, lr, lsr #1
 8025fce:	f01e 0f01 	tst.w	lr, #1
 8025fd2:	5cd0      	ldrb	r0, [r2, r3]
 8025fd4:	bf0c      	ite	eq
 8025fd6:	f000 000f 	andeq.w	r0, r0, #15
 8025fda:	1100      	asrne	r0, r0, #4
 8025fdc:	eb00 1000 	add.w	r0, r0, r0, lsl #4
 8025fe0:	b2c3      	uxtb	r3, r0
 8025fe2:	b2ba      	uxth	r2, r7
 8025fe4:	fa1f fc8c 	uxth.w	ip, ip
 8025fe8:	fb02 f00c 	mul.w	r0, r2, ip
 8025fec:	ebc0 1c0c 	rsb	ip, r0, ip, lsl #4
 8025ff0:	0112      	lsls	r2, r2, #4
 8025ff2:	fa1f fc8c 	uxth.w	ip, ip
 8025ff6:	f5c2 7780 	rsb	r7, r2, #256	; 0x100
 8025ffa:	1a12      	subs	r2, r2, r0
 8025ffc:	eba7 070c 	sub.w	r7, r7, ip
 8026000:	b292      	uxth	r2, r2
 8026002:	b2bf      	uxth	r7, r7
 8026004:	4362      	muls	r2, r4
 8026006:	fb06 2207 	mla	r2, r6, r7, r2
 802600a:	fb0c 2505 	mla	r5, ip, r5, r2
 802600e:	fb00 5303 	mla	r3, r0, r3, r5
 8026012:	f3c3 2307 	ubfx	r3, r3, #8, #8
 8026016:	b1b3      	cbz	r3, 8026046 <_ZNK8touchgfx8LCD16bpp41TextureMapper_A4_BilinearInterpolation_GA16writePixelOnEdgeEPtPKtsssiihhh+0x132>
 8026018:	f89d 2038 	ldrb.w	r2, [sp, #56]	; 0x38
 802601c:	435a      	muls	r2, r3
 802601e:	1c53      	adds	r3, r2, #1
 8026020:	eb03 2312 	add.w	r3, r3, r2, lsr #8
 8026024:	4a2d      	ldr	r2, [pc, #180]	; (80260dc <_ZNK8touchgfx8LCD16bpp41TextureMapper_A4_BilinearInterpolation_GA16writePixelOnEdgeEPtPKtsssiihhh+0x1c8>)
 8026026:	121b      	asrs	r3, r3, #8
 8026028:	6812      	ldr	r2, [r2, #0]
 802602a:	2bff      	cmp	r3, #255	; 0xff
 802602c:	ea4f 2612 	mov.w	r6, r2, lsr #8
 8026030:	d120      	bne.n	8026074 <_ZNK8touchgfx8LCD16bpp41TextureMapper_A4_BilinearInterpolation_GA16writePixelOnEdgeEPtPKtsssiihhh+0x160>
 8026032:	4b2b      	ldr	r3, [pc, #172]	; (80260e0 <_ZNK8touchgfx8LCD16bpp41TextureMapper_A4_BilinearInterpolation_GA16writePixelOnEdgeEPtPKtsssiihhh+0x1cc>)
 8026034:	0950      	lsrs	r0, r2, #5
 8026036:	f400 60fc 	and.w	r0, r0, #2016	; 0x7e0
 802603a:	4033      	ands	r3, r6
 802603c:	4318      	orrs	r0, r3
 802603e:	f3c2 02c4 	ubfx	r2, r2, #3, #5
 8026042:	4302      	orrs	r2, r0
 8026044:	800a      	strh	r2, [r1, #0]
 8026046:	e8bd 87f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, pc}
 802604a:	2600      	movs	r6, #0
 802604c:	e788      	b.n	8025f60 <_ZNK8touchgfx8LCD16bpp41TextureMapper_A4_BilinearInterpolation_GA16writePixelOnEdgeEPtPKtsssiihhh+0x4c>
 802604e:	2400      	movs	r4, #0
 8026050:	4626      	mov	r6, r4
 8026052:	e799      	b.n	8025f88 <_ZNK8touchgfx8LCD16bpp41TextureMapper_A4_BilinearInterpolation_GA16writePixelOnEdgeEPtPKtsssiihhh+0x74>
 8026054:	2400      	movs	r4, #0
 8026056:	e797      	b.n	8025f88 <_ZNK8touchgfx8LCD16bpp41TextureMapper_A4_BilinearInterpolation_GA16writePixelOnEdgeEPtPKtsssiihhh+0x74>
 8026058:	463c      	mov	r4, r7
 802605a:	e795      	b.n	8025f88 <_ZNK8touchgfx8LCD16bpp41TextureMapper_A4_BilinearInterpolation_GA16writePixelOnEdgeEPtPKtsssiihhh+0x74>
 802605c:	2500      	movs	r5, #0
 802605e:	e7ac      	b.n	8025fba <_ZNK8touchgfx8LCD16bpp41TextureMapper_A4_BilinearInterpolation_GA16writePixelOnEdgeEPtPKtsssiihhh+0xa6>
 8026060:	2300      	movs	r3, #0
 8026062:	461d      	mov	r5, r3
 8026064:	e7bd      	b.n	8025fe2 <_ZNK8touchgfx8LCD16bpp41TextureMapper_A4_BilinearInterpolation_GA16writePixelOnEdgeEPtPKtsssiihhh+0xce>
 8026066:	4663      	mov	r3, ip
 8026068:	4665      	mov	r5, ip
 802606a:	e7ba      	b.n	8025fe2 <_ZNK8touchgfx8LCD16bpp41TextureMapper_A4_BilinearInterpolation_GA16writePixelOnEdgeEPtPKtsssiihhh+0xce>
 802606c:	2300      	movs	r3, #0
 802606e:	e7b8      	b.n	8025fe2 <_ZNK8touchgfx8LCD16bpp41TextureMapper_A4_BilinearInterpolation_GA16writePixelOnEdgeEPtPKtsssiihhh+0xce>
 8026070:	463b      	mov	r3, r7
 8026072:	e7b6      	b.n	8025fe2 <_ZNK8touchgfx8LCD16bpp41TextureMapper_A4_BilinearInterpolation_GA16writePixelOnEdgeEPtPKtsssiihhh+0xce>
 8026074:	880d      	ldrh	r5, [r1, #0]
 8026076:	b29f      	uxth	r7, r3
 8026078:	122c      	asrs	r4, r5, #8
 802607a:	f3c2 4007 	ubfx	r0, r2, #16, #8
 802607e:	43db      	mvns	r3, r3
 8026080:	b2db      	uxtb	r3, r3
 8026082:	fb10 f007 	smulbb	r0, r0, r7
 8026086:	f004 04f8 	and.w	r4, r4, #248	; 0xf8
 802608a:	fb04 0403 	mla	r4, r4, r3, r0
 802608e:	b2f6      	uxtb	r6, r6
 8026090:	10e8      	asrs	r0, r5, #3
 8026092:	b2d2      	uxtb	r2, r2
 8026094:	00ed      	lsls	r5, r5, #3
 8026096:	f000 00fc 	and.w	r0, r0, #252	; 0xfc
 802609a:	fb12 f207 	smulbb	r2, r2, r7
 802609e:	fb16 f607 	smulbb	r6, r6, r7
 80260a2:	b2ed      	uxtb	r5, r5
 80260a4:	b2a4      	uxth	r4, r4
 80260a6:	fb00 6603 	mla	r6, r0, r3, r6
 80260aa:	fb05 2303 	mla	r3, r5, r3, r2
 80260ae:	b29a      	uxth	r2, r3
 80260b0:	1c63      	adds	r3, r4, #1
 80260b2:	b2b0      	uxth	r0, r6
 80260b4:	eb03 2414 	add.w	r4, r3, r4, lsr #8
 80260b8:	1c53      	adds	r3, r2, #1
 80260ba:	eb03 2312 	add.w	r3, r3, r2, lsr #8
 80260be:	1c42      	adds	r2, r0, #1
 80260c0:	eb02 2010 	add.w	r0, r2, r0, lsr #8
 80260c4:	f404 4478 	and.w	r4, r4, #63488	; 0xf800
 80260c8:	f3c3 23c4 	ubfx	r3, r3, #11, #5
 80260cc:	0940      	lsrs	r0, r0, #5
 80260ce:	4323      	orrs	r3, r4
 80260d0:	f400 60fc 	and.w	r0, r0, #2016	; 0x7e0
 80260d4:	4303      	orrs	r3, r0
 80260d6:	800b      	strh	r3, [r1, #0]
 80260d8:	e7b5      	b.n	8026046 <_ZNK8touchgfx8LCD16bpp41TextureMapper_A4_BilinearInterpolation_GA16writePixelOnEdgeEPtPKtsssiihhh+0x132>
 80260da:	bf00      	nop
 80260dc:	2001382c 	.word	0x2001382c
 80260e0:	00fff800 	.word	0x00fff800

080260e4 <_ZN8touchgfx8LCD16bpp41TextureMapper_A4_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff>:
 80260e4:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 80260e8:	b097      	sub	sp, #92	; 0x5c
 80260ea:	e9dd 4621 	ldrd	r4, r6, [sp, #132]	; 0x84
 80260ee:	9214      	str	r2, [sp, #80]	; 0x50
 80260f0:	9309      	str	r3, [sp, #36]	; 0x24
 80260f2:	9a25      	ldr	r2, [sp, #148]	; 0x94
 80260f4:	f89d 30a4 	ldrb.w	r3, [sp, #164]	; 0xa4
 80260f8:	910d      	str	r1, [sp, #52]	; 0x34
 80260fa:	930f      	str	r3, [sp, #60]	; 0x3c
 80260fc:	e9dd 1326 	ldrd	r1, r3, [sp, #152]	; 0x98
 8026100:	9015      	str	r0, [sp, #84]	; 0x54
 8026102:	6850      	ldr	r0, [r2, #4]
 8026104:	6812      	ldr	r2, [r2, #0]
 8026106:	fb00 1303 	mla	r3, r0, r3, r1
 802610a:	eb02 0943 	add.w	r9, r2, r3, lsl #1
 802610e:	9b28      	ldr	r3, [sp, #160]	; 0xa0
 8026110:	689b      	ldr	r3, [r3, #8]
 8026112:	3301      	adds	r3, #1
 8026114:	f023 0301 	bic.w	r3, r3, #1
 8026118:	930a      	str	r3, [sp, #40]	; 0x28
 802611a:	9b28      	ldr	r3, [sp, #160]	; 0xa0
 802611c:	681f      	ldr	r7, [r3, #0]
 802611e:	9b0d      	ldr	r3, [sp, #52]	; 0x34
 8026120:	2b00      	cmp	r3, #0
 8026122:	dc03      	bgt.n	802612c <_ZN8touchgfx8LCD16bpp41TextureMapper_A4_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x48>
 8026124:	9b14      	ldr	r3, [sp, #80]	; 0x50
 8026126:	2b00      	cmp	r3, #0
 8026128:	f340 8287 	ble.w	802663a <_ZN8touchgfx8LCD16bpp41TextureMapper_A4_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x556>
 802612c:	9b28      	ldr	r3, [sp, #160]	; 0xa0
 802612e:	f9b3 1008 	ldrsh.w	r1, [r3, #8]
 8026132:	f9b3 200c 	ldrsh.w	r2, [r3, #12]
 8026136:	1e48      	subs	r0, r1, #1
 8026138:	f102 3cff 	add.w	ip, r2, #4294967295
 802613c:	9b09      	ldr	r3, [sp, #36]	; 0x24
 802613e:	2b00      	cmp	r3, #0
 8026140:	f340 80c4 	ble.w	80262cc <_ZN8touchgfx8LCD16bpp41TextureMapper_A4_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x1e8>
 8026144:	ea5f 4e24 	movs.w	lr, r4, asr #16
 8026148:	ea4f 4326 	mov.w	r3, r6, asr #16
 802614c:	d406      	bmi.n	802615c <_ZN8touchgfx8LCD16bpp41TextureMapper_A4_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x78>
 802614e:	4586      	cmp	lr, r0
 8026150:	da04      	bge.n	802615c <_ZN8touchgfx8LCD16bpp41TextureMapper_A4_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x78>
 8026152:	2b00      	cmp	r3, #0
 8026154:	db02      	blt.n	802615c <_ZN8touchgfx8LCD16bpp41TextureMapper_A4_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x78>
 8026156:	4563      	cmp	r3, ip
 8026158:	f2c0 80b9 	blt.w	80262ce <_ZN8touchgfx8LCD16bpp41TextureMapper_A4_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x1ea>
 802615c:	f11e 0e01 	adds.w	lr, lr, #1
 8026160:	f100 80aa 	bmi.w	80262b8 <_ZN8touchgfx8LCD16bpp41TextureMapper_A4_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x1d4>
 8026164:	4571      	cmp	r1, lr
 8026166:	f2c0 80a7 	blt.w	80262b8 <_ZN8touchgfx8LCD16bpp41TextureMapper_A4_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x1d4>
 802616a:	3301      	adds	r3, #1
 802616c:	f100 80a4 	bmi.w	80262b8 <_ZN8touchgfx8LCD16bpp41TextureMapper_A4_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x1d4>
 8026170:	429a      	cmp	r2, r3
 8026172:	f2c0 80a1 	blt.w	80262b8 <_ZN8touchgfx8LCD16bpp41TextureMapper_A4_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x1d4>
 8026176:	9b09      	ldr	r3, [sp, #36]	; 0x24
 8026178:	f9bd a028 	ldrsh.w	sl, [sp, #40]	; 0x28
 802617c:	930e      	str	r3, [sp, #56]	; 0x38
 802617e:	46c8      	mov	r8, r9
 8026180:	9b0e      	ldr	r3, [sp, #56]	; 0x38
 8026182:	2b00      	cmp	r3, #0
 8026184:	f340 80c3 	ble.w	802630e <_ZN8touchgfx8LCD16bpp41TextureMapper_A4_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x22a>
 8026188:	9b28      	ldr	r3, [sp, #160]	; 0xa0
 802618a:	e9d3 ce02 	ldrd	ip, lr, [r3, #8]
 802618e:	1423      	asrs	r3, r4, #16
 8026190:	ea4f 4026 	mov.w	r0, r6, asr #16
 8026194:	f3c4 3203 	ubfx	r2, r4, #12, #4
 8026198:	f3c6 3103 	ubfx	r1, r6, #12, #4
 802619c:	f100 814d 	bmi.w	802643a <_ZN8touchgfx8LCD16bpp41TextureMapper_A4_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x356>
 80261a0:	f10c 3bff 	add.w	fp, ip, #4294967295
 80261a4:	455b      	cmp	r3, fp
 80261a6:	f280 8148 	bge.w	802643a <_ZN8touchgfx8LCD16bpp41TextureMapper_A4_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x356>
 80261aa:	2800      	cmp	r0, #0
 80261ac:	f2c0 8145 	blt.w	802643a <_ZN8touchgfx8LCD16bpp41TextureMapper_A4_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x356>
 80261b0:	f10e 3bff 	add.w	fp, lr, #4294967295
 80261b4:	4558      	cmp	r0, fp
 80261b6:	f280 8140 	bge.w	802643a <_ZN8touchgfx8LCD16bpp41TextureMapper_A4_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x356>
 80261ba:	9d0a      	ldr	r5, [sp, #40]	; 0x28
 80261bc:	fb00 3305 	mla	r3, r0, r5, r3
 80261c0:	0858      	lsrs	r0, r3, #1
 80261c2:	07dd      	lsls	r5, r3, #31
 80261c4:	f817 c000 	ldrb.w	ip, [r7, r0]
 80261c8:	bf54      	ite	pl
 80261ca:	f00c 0c0f 	andpl.w	ip, ip, #15
 80261ce:	ea4f 1c2c 	movmi.w	ip, ip, asr #4
 80261d2:	eb0c 1c0c 	add.w	ip, ip, ip, lsl #4
 80261d6:	fa5f fc8c 	uxtb.w	ip, ip
 80261da:	2a00      	cmp	r2, #0
 80261dc:	f000 80db 	beq.w	8026396 <_ZN8touchgfx8LCD16bpp41TextureMapper_A4_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x2b2>
 80261e0:	1c58      	adds	r0, r3, #1
 80261e2:	ea4f 0e50 	mov.w	lr, r0, lsr #1
 80261e6:	07c0      	lsls	r0, r0, #31
 80261e8:	f817 e00e 	ldrb.w	lr, [r7, lr]
 80261ec:	bf54      	ite	pl
 80261ee:	f00e 0e0f 	andpl.w	lr, lr, #15
 80261f2:	ea4f 1e2e 	movmi.w	lr, lr, asr #4
 80261f6:	eb0e 1e0e 	add.w	lr, lr, lr, lsl #4
 80261fa:	fa5f f08e 	uxtb.w	r0, lr
 80261fe:	9010      	str	r0, [sp, #64]	; 0x40
 8026200:	b1c9      	cbz	r1, 8026236 <_ZN8touchgfx8LCD16bpp41TextureMapper_A4_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x152>
 8026202:	4453      	add	r3, sl
 8026204:	0858      	lsrs	r0, r3, #1
 8026206:	07dd      	lsls	r5, r3, #31
 8026208:	5c38      	ldrb	r0, [r7, r0]
 802620a:	bf54      	ite	pl
 802620c:	f000 000f 	andpl.w	r0, r0, #15
 8026210:	1100      	asrmi	r0, r0, #4
 8026212:	eb00 1000 	add.w	r0, r0, r0, lsl #4
 8026216:	3301      	adds	r3, #1
 8026218:	b2c0      	uxtb	r0, r0
 802621a:	900b      	str	r0, [sp, #44]	; 0x2c
 802621c:	0858      	lsrs	r0, r3, #1
 802621e:	07dd      	lsls	r5, r3, #31
 8026220:	f817 e000 	ldrb.w	lr, [r7, r0]
 8026224:	bf54      	ite	pl
 8026226:	f00e 030f 	andpl.w	r3, lr, #15
 802622a:	ea4f 132e 	movmi.w	r3, lr, asr #4
 802622e:	eb03 1303 	add.w	r3, r3, r3, lsl #4
 8026232:	b2db      	uxtb	r3, r3
 8026234:	9311      	str	r3, [sp, #68]	; 0x44
 8026236:	b292      	uxth	r2, r2
 8026238:	b289      	uxth	r1, r1
 802623a:	fb02 f301 	mul.w	r3, r2, r1
 802623e:	ebc3 1101 	rsb	r1, r3, r1, lsl #4
 8026242:	0112      	lsls	r2, r2, #4
 8026244:	b289      	uxth	r1, r1
 8026246:	f5c2 7080 	rsb	r0, r2, #256	; 0x100
 802624a:	9d10      	ldr	r5, [sp, #64]	; 0x40
 802624c:	1ad2      	subs	r2, r2, r3
 802624e:	1a40      	subs	r0, r0, r1
 8026250:	b292      	uxth	r2, r2
 8026252:	436a      	muls	r2, r5
 8026254:	b280      	uxth	r0, r0
 8026256:	fb0c 2c00 	mla	ip, ip, r0, r2
 802625a:	9a0b      	ldr	r2, [sp, #44]	; 0x2c
 802625c:	fb01 c102 	mla	r1, r1, r2, ip
 8026260:	9a11      	ldr	r2, [sp, #68]	; 0x44
 8026262:	fb03 1302 	mla	r3, r3, r2, r1
 8026266:	f3c3 2307 	ubfx	r3, r3, #8, #8
 802626a:	b1db      	cbz	r3, 80262a4 <_ZN8touchgfx8LCD16bpp41TextureMapper_A4_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x1c0>
 802626c:	9a0f      	ldr	r2, [sp, #60]	; 0x3c
 802626e:	4353      	muls	r3, r2
 8026270:	1c5a      	adds	r2, r3, #1
 8026272:	eb02 2313 	add.w	r3, r2, r3, lsr #8
 8026276:	4ac6      	ldr	r2, [pc, #792]	; (8026590 <_ZN8touchgfx8LCD16bpp41TextureMapper_A4_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x4ac>)
 8026278:	121b      	asrs	r3, r3, #8
 802627a:	6812      	ldr	r2, [r2, #0]
 802627c:	2bff      	cmp	r3, #255	; 0xff
 802627e:	ea4f 2c12 	mov.w	ip, r2, lsr #8
 8026282:	f040 8099 	bne.w	80263b8 <_ZN8touchgfx8LCD16bpp41TextureMapper_A4_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x2d4>
 8026286:	0953      	lsrs	r3, r2, #5
 8026288:	f42c 6cff 	bic.w	ip, ip, #2040	; 0x7f8
 802628c:	f403 63fc 	and.w	r3, r3, #2016	; 0x7e0
 8026290:	f02c 0c07 	bic.w	ip, ip, #7
 8026294:	ea43 0c0c 	orr.w	ip, r3, ip
 8026298:	f3c2 02c4 	ubfx	r2, r2, #3, #5
 802629c:	ea4c 0202 	orr.w	r2, ip, r2
 80262a0:	f8a8 2000 	strh.w	r2, [r8]
 80262a4:	9b23      	ldr	r3, [sp, #140]	; 0x8c
 80262a6:	441c      	add	r4, r3
 80262a8:	9b24      	ldr	r3, [sp, #144]	; 0x90
 80262aa:	441e      	add	r6, r3
 80262ac:	9b0e      	ldr	r3, [sp, #56]	; 0x38
 80262ae:	3b01      	subs	r3, #1
 80262b0:	f108 0802 	add.w	r8, r8, #2
 80262b4:	930e      	str	r3, [sp, #56]	; 0x38
 80262b6:	e763      	b.n	8026180 <_ZN8touchgfx8LCD16bpp41TextureMapper_A4_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x9c>
 80262b8:	9b23      	ldr	r3, [sp, #140]	; 0x8c
 80262ba:	441c      	add	r4, r3
 80262bc:	9b24      	ldr	r3, [sp, #144]	; 0x90
 80262be:	441e      	add	r6, r3
 80262c0:	9b09      	ldr	r3, [sp, #36]	; 0x24
 80262c2:	3b01      	subs	r3, #1
 80262c4:	9309      	str	r3, [sp, #36]	; 0x24
 80262c6:	f109 0902 	add.w	r9, r9, #2
 80262ca:	e737      	b.n	802613c <_ZN8touchgfx8LCD16bpp41TextureMapper_A4_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x58>
 80262cc:	d024      	beq.n	8026318 <_ZN8touchgfx8LCD16bpp41TextureMapper_A4_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x234>
 80262ce:	9b09      	ldr	r3, [sp, #36]	; 0x24
 80262d0:	9823      	ldr	r0, [sp, #140]	; 0x8c
 80262d2:	3b01      	subs	r3, #1
 80262d4:	fb00 4003 	mla	r0, r0, r3, r4
 80262d8:	1400      	asrs	r0, r0, #16
 80262da:	f53f af4c 	bmi.w	8026176 <_ZN8touchgfx8LCD16bpp41TextureMapper_A4_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x92>
 80262de:	3901      	subs	r1, #1
 80262e0:	4288      	cmp	r0, r1
 80262e2:	f6bf af48 	bge.w	8026176 <_ZN8touchgfx8LCD16bpp41TextureMapper_A4_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x92>
 80262e6:	9924      	ldr	r1, [sp, #144]	; 0x90
 80262e8:	fb01 6303 	mla	r3, r1, r3, r6
 80262ec:	141b      	asrs	r3, r3, #16
 80262ee:	f53f af42 	bmi.w	8026176 <_ZN8touchgfx8LCD16bpp41TextureMapper_A4_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x92>
 80262f2:	3a01      	subs	r2, #1
 80262f4:	4293      	cmp	r3, r2
 80262f6:	f6bf af3e 	bge.w	8026176 <_ZN8touchgfx8LCD16bpp41TextureMapper_A4_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x92>
 80262fa:	f9bd 3028 	ldrsh.w	r3, [sp, #40]	; 0x28
 80262fe:	f8dd b024 	ldr.w	fp, [sp, #36]	; 0x24
 8026302:	930e      	str	r3, [sp, #56]	; 0x38
 8026304:	46c8      	mov	r8, r9
 8026306:	f1bb 0f00 	cmp.w	fp, #0
 802630a:	f300 80b7 	bgt.w	802647c <_ZN8touchgfx8LCD16bpp41TextureMapper_A4_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x398>
 802630e:	9b09      	ldr	r3, [sp, #36]	; 0x24
 8026310:	ea23 75e3 	bic.w	r5, r3, r3, asr #31
 8026314:	eb09 0945 	add.w	r9, r9, r5, lsl #1
 8026318:	9b0d      	ldr	r3, [sp, #52]	; 0x34
 802631a:	2b00      	cmp	r3, #0
 802631c:	f340 818d 	ble.w	802663a <_ZN8touchgfx8LCD16bpp41TextureMapper_A4_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x556>
 8026320:	ee30 0a04 	vadd.f32	s0, s0, s8
 8026324:	eeb7 7a00 	vmov.f32	s14, #112	; 0x3f800000  1.0
 8026328:	eec7 7a00 	vdiv.f32	s15, s14, s0
 802632c:	9b20      	ldr	r3, [sp, #128]	; 0x80
 802632e:	ee70 0aa4 	vadd.f32	s1, s1, s9
 8026332:	ee31 1a05 	vadd.f32	s2, s2, s10
 8026336:	ee20 7aa7 	vmul.f32	s14, s1, s15
 802633a:	eef0 6a62 	vmov.f32	s13, s5
 802633e:	ee61 7a27 	vmul.f32	s15, s2, s15
 8026342:	eefe 6ac8 	vcvt.s32.f32	s13, s13, #16
 8026346:	ee77 2a62 	vsub.f32	s5, s14, s5
 802634a:	ee16 4a90 	vmov	r4, s13
 802634e:	eefe 2ac8 	vcvt.s32.f32	s5, s5, #16
 8026352:	eef0 6a43 	vmov.f32	s13, s6
 8026356:	ee37 3ac3 	vsub.f32	s6, s15, s6
 802635a:	ee12 2a90 	vmov	r2, s5
 802635e:	eebe 3ac8 	vcvt.s32.f32	s6, s6, #16
 8026362:	fb92 f3f3 	sdiv	r3, r2, r3
 8026366:	ee13 2a10 	vmov	r2, s6
 802636a:	9323      	str	r3, [sp, #140]	; 0x8c
 802636c:	9b20      	ldr	r3, [sp, #128]	; 0x80
 802636e:	fb92 f3f3 	sdiv	r3, r2, r3
 8026372:	9324      	str	r3, [sp, #144]	; 0x90
 8026374:	9b0d      	ldr	r3, [sp, #52]	; 0x34
 8026376:	9a14      	ldr	r2, [sp, #80]	; 0x50
 8026378:	3b01      	subs	r3, #1
 802637a:	eefe 6ac8 	vcvt.s32.f32	s13, s13, #16
 802637e:	930d      	str	r3, [sp, #52]	; 0x34
 8026380:	9b20      	ldr	r3, [sp, #128]	; 0x80
 8026382:	bf08      	it	eq
 8026384:	4613      	moveq	r3, r2
 8026386:	ee16 6a90 	vmov	r6, s13
 802638a:	9309      	str	r3, [sp, #36]	; 0x24
 802638c:	eeb0 3a67 	vmov.f32	s6, s15
 8026390:	eef0 2a47 	vmov.f32	s5, s14
 8026394:	e6c3      	b.n	802611e <_ZN8touchgfx8LCD16bpp41TextureMapper_A4_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x3a>
 8026396:	2900      	cmp	r1, #0
 8026398:	f43f af4d 	beq.w	8026236 <_ZN8touchgfx8LCD16bpp41TextureMapper_A4_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x152>
 802639c:	eb0a 0003 	add.w	r0, sl, r3
 80263a0:	0843      	lsrs	r3, r0, #1
 80263a2:	07c0      	lsls	r0, r0, #31
 80263a4:	5cfb      	ldrb	r3, [r7, r3]
 80263a6:	bf54      	ite	pl
 80263a8:	f003 030f 	andpl.w	r3, r3, #15
 80263ac:	111b      	asrmi	r3, r3, #4
 80263ae:	eb03 1303 	add.w	r3, r3, r3, lsl #4
 80263b2:	b2db      	uxtb	r3, r3
 80263b4:	930b      	str	r3, [sp, #44]	; 0x2c
 80263b6:	e73e      	b.n	8026236 <_ZN8touchgfx8LCD16bpp41TextureMapper_A4_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x152>
 80263b8:	f8b8 e000 	ldrh.w	lr, [r8]
 80263bc:	fa1f fb83 	uxth.w	fp, r3
 80263c0:	ea4f 202e 	mov.w	r0, lr, asr #8
 80263c4:	f3c2 4107 	ubfx	r1, r2, #16, #8
 80263c8:	43db      	mvns	r3, r3
 80263ca:	b2db      	uxtb	r3, r3
 80263cc:	fb11 f10b 	smulbb	r1, r1, fp
 80263d0:	f000 00f8 	and.w	r0, r0, #248	; 0xf8
 80263d4:	fb00 1003 	mla	r0, r0, r3, r1
 80263d8:	fa5f fc8c 	uxtb.w	ip, ip
 80263dc:	ea4f 01ee 	mov.w	r1, lr, asr #3
 80263e0:	b2d2      	uxtb	r2, r2
 80263e2:	ea4f 0ece 	mov.w	lr, lr, lsl #3
 80263e6:	b280      	uxth	r0, r0
 80263e8:	f001 01fc 	and.w	r1, r1, #252	; 0xfc
 80263ec:	fb1c fc0b 	smulbb	ip, ip, fp
 80263f0:	fa5f fe8e 	uxtb.w	lr, lr
 80263f4:	fb12 fb0b 	smulbb	fp, r2, fp
 80263f8:	fb01 cc03 	mla	ip, r1, r3, ip
 80263fc:	fb0e bb03 	mla	fp, lr, r3, fp
 8026400:	1c43      	adds	r3, r0, #1
 8026402:	fa1f fc8c 	uxth.w	ip, ip
 8026406:	fa1f fb8b 	uxth.w	fp, fp
 802640a:	eb03 2010 	add.w	r0, r3, r0, lsr #8
 802640e:	f400 4378 	and.w	r3, r0, #63488	; 0xf800
 8026412:	f10c 0101 	add.w	r1, ip, #1
 8026416:	f10b 0001 	add.w	r0, fp, #1
 802641a:	eb00 201b 	add.w	r0, r0, fp, lsr #8
 802641e:	eb01 2c1c 	add.w	ip, r1, ip, lsr #8
 8026422:	f3c0 20c4 	ubfx	r0, r0, #11, #5
 8026426:	ea4f 1c5c 	mov.w	ip, ip, lsr #5
 802642a:	4318      	orrs	r0, r3
 802642c:	f40c 6cfc 	and.w	ip, ip, #2016	; 0x7e0
 8026430:	ea40 000c 	orr.w	r0, r0, ip
 8026434:	f8a8 0000 	strh.w	r0, [r8]
 8026438:	e734      	b.n	80262a4 <_ZN8touchgfx8LCD16bpp41TextureMapper_A4_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x1c0>
 802643a:	f113 0b01 	adds.w	fp, r3, #1
 802643e:	f53f af31 	bmi.w	80262a4 <_ZN8touchgfx8LCD16bpp41TextureMapper_A4_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x1c0>
 8026442:	45dc      	cmp	ip, fp
 8026444:	f6ff af2e 	blt.w	80262a4 <_ZN8touchgfx8LCD16bpp41TextureMapper_A4_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x1c0>
 8026448:	f110 0b01 	adds.w	fp, r0, #1
 802644c:	f53f af2a 	bmi.w	80262a4 <_ZN8touchgfx8LCD16bpp41TextureMapper_A4_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x1c0>
 8026450:	45de      	cmp	lr, fp
 8026452:	f6ff af27 	blt.w	80262a4 <_ZN8touchgfx8LCD16bpp41TextureMapper_A4_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x1c0>
 8026456:	9d0f      	ldr	r5, [sp, #60]	; 0x3c
 8026458:	9302      	str	r3, [sp, #8]
 802645a:	fa0f f38e 	sxth.w	r3, lr
 802645e:	9301      	str	r3, [sp, #4]
 8026460:	fa0f f38c 	sxth.w	r3, ip
 8026464:	e9cd 0203 	strd	r0, r2, [sp, #12]
 8026468:	e9cd 1505 	strd	r1, r5, [sp, #20]
 802646c:	9300      	str	r3, [sp, #0]
 802646e:	463a      	mov	r2, r7
 8026470:	4653      	mov	r3, sl
 8026472:	4641      	mov	r1, r8
 8026474:	9815      	ldr	r0, [sp, #84]	; 0x54
 8026476:	f7ff fd4d 	bl	8025f14 <_ZNK8touchgfx8LCD16bpp41TextureMapper_A4_BilinearInterpolation_GA16writePixelOnEdgeEPtPKtsssiihhh>
 802647a:	e713      	b.n	80262a4 <_ZN8touchgfx8LCD16bpp41TextureMapper_A4_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x1c0>
 802647c:	9d0a      	ldr	r5, [sp, #40]	; 0x28
 802647e:	1422      	asrs	r2, r4, #16
 8026480:	1433      	asrs	r3, r6, #16
 8026482:	fb05 2303 	mla	r3, r5, r3, r2
 8026486:	085a      	lsrs	r2, r3, #1
 8026488:	07dd      	lsls	r5, r3, #31
 802648a:	5cba      	ldrb	r2, [r7, r2]
 802648c:	bf54      	ite	pl
 802648e:	f002 020f 	andpl.w	r2, r2, #15
 8026492:	1112      	asrmi	r2, r2, #4
 8026494:	eb02 1202 	add.w	r2, r2, r2, lsl #4
 8026498:	f3c4 3103 	ubfx	r1, r4, #12, #4
 802649c:	f3c6 3003 	ubfx	r0, r6, #12, #4
 80264a0:	b2d2      	uxtb	r2, r2
 80264a2:	2900      	cmp	r1, #0
 80264a4:	d076      	beq.n	8026594 <_ZN8touchgfx8LCD16bpp41TextureMapper_A4_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x4b0>
 80264a6:	f103 0e01 	add.w	lr, r3, #1
 80264aa:	ea4f 0c5e 	mov.w	ip, lr, lsr #1
 80264ae:	f01e 0f01 	tst.w	lr, #1
 80264b2:	f817 c00c 	ldrb.w	ip, [r7, ip]
 80264b6:	bf0c      	ite	eq
 80264b8:	f00c 0c0f 	andeq.w	ip, ip, #15
 80264bc:	ea4f 1c2c 	movne.w	ip, ip, asr #4
 80264c0:	eb0c 1c0c 	add.w	ip, ip, ip, lsl #4
 80264c4:	fa5f f58c 	uxtb.w	r5, ip
 80264c8:	9512      	str	r5, [sp, #72]	; 0x48
 80264ca:	b300      	cbz	r0, 802650e <_ZN8touchgfx8LCD16bpp41TextureMapper_A4_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x42a>
 80264cc:	9d0e      	ldr	r5, [sp, #56]	; 0x38
 80264ce:	442b      	add	r3, r5
 80264d0:	ea4f 0c53 	mov.w	ip, r3, lsr #1
 80264d4:	07dd      	lsls	r5, r3, #31
 80264d6:	f817 c00c 	ldrb.w	ip, [r7, ip]
 80264da:	bf54      	ite	pl
 80264dc:	f00c 0c0f 	andpl.w	ip, ip, #15
 80264e0:	ea4f 1c2c 	movmi.w	ip, ip, asr #4
 80264e4:	3301      	adds	r3, #1
 80264e6:	eb0c 1c0c 	add.w	ip, ip, ip, lsl #4
 80264ea:	fa5f f58c 	uxtb.w	r5, ip
 80264ee:	ea4f 0c53 	mov.w	ip, r3, lsr #1
 80264f2:	950c      	str	r5, [sp, #48]	; 0x30
 80264f4:	f817 c00c 	ldrb.w	ip, [r7, ip]
 80264f8:	07dd      	lsls	r5, r3, #31
 80264fa:	bf54      	ite	pl
 80264fc:	f00c 0c0f 	andpl.w	ip, ip, #15
 8026500:	ea4f 1c2c 	movmi.w	ip, ip, asr #4
 8026504:	eb0c 1c0c 	add.w	ip, ip, ip, lsl #4
 8026508:	fa5f f38c 	uxtb.w	r3, ip
 802650c:	9313      	str	r3, [sp, #76]	; 0x4c
 802650e:	b289      	uxth	r1, r1
 8026510:	b280      	uxth	r0, r0
 8026512:	fb01 f300 	mul.w	r3, r1, r0
 8026516:	ebc3 1000 	rsb	r0, r3, r0, lsl #4
 802651a:	0109      	lsls	r1, r1, #4
 802651c:	b280      	uxth	r0, r0
 802651e:	f5c1 7c80 	rsb	ip, r1, #256	; 0x100
 8026522:	9d12      	ldr	r5, [sp, #72]	; 0x48
 8026524:	1ac9      	subs	r1, r1, r3
 8026526:	ebac 0c00 	sub.w	ip, ip, r0
 802652a:	b289      	uxth	r1, r1
 802652c:	4369      	muls	r1, r5
 802652e:	fa1f fc8c 	uxth.w	ip, ip
 8026532:	fb02 120c 	mla	r2, r2, ip, r1
 8026536:	990c      	ldr	r1, [sp, #48]	; 0x30
 8026538:	fb00 2001 	mla	r0, r0, r1, r2
 802653c:	9a13      	ldr	r2, [sp, #76]	; 0x4c
 802653e:	fb03 0302 	mla	r3, r3, r2, r0
 8026542:	f3c3 2307 	ubfx	r3, r3, #8, #8
 8026546:	b1d3      	cbz	r3, 802657e <_ZN8touchgfx8LCD16bpp41TextureMapper_A4_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x49a>
 8026548:	9a0f      	ldr	r2, [sp, #60]	; 0x3c
 802654a:	4353      	muls	r3, r2
 802654c:	1c5a      	adds	r2, r3, #1
 802654e:	eb02 2313 	add.w	r3, r2, r3, lsr #8
 8026552:	4a0f      	ldr	r2, [pc, #60]	; (8026590 <_ZN8touchgfx8LCD16bpp41TextureMapper_A4_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x4ac>)
 8026554:	121b      	asrs	r3, r3, #8
 8026556:	6812      	ldr	r2, [r2, #0]
 8026558:	2bff      	cmp	r3, #255	; 0xff
 802655a:	ea4f 2c12 	mov.w	ip, r2, lsr #8
 802655e:	d12d      	bne.n	80265bc <_ZN8touchgfx8LCD16bpp41TextureMapper_A4_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x4d8>
 8026560:	0953      	lsrs	r3, r2, #5
 8026562:	f42c 6cff 	bic.w	ip, ip, #2040	; 0x7f8
 8026566:	f403 63fc 	and.w	r3, r3, #2016	; 0x7e0
 802656a:	f02c 0c07 	bic.w	ip, ip, #7
 802656e:	ea43 0c0c 	orr.w	ip, r3, ip
 8026572:	f3c2 02c4 	ubfx	r2, r2, #3, #5
 8026576:	ea4c 0202 	orr.w	r2, ip, r2
 802657a:	f8a8 2000 	strh.w	r2, [r8]
 802657e:	9b23      	ldr	r3, [sp, #140]	; 0x8c
 8026580:	441c      	add	r4, r3
 8026582:	9b24      	ldr	r3, [sp, #144]	; 0x90
 8026584:	f108 0802 	add.w	r8, r8, #2
 8026588:	441e      	add	r6, r3
 802658a:	f10b 3bff 	add.w	fp, fp, #4294967295
 802658e:	e6ba      	b.n	8026306 <_ZN8touchgfx8LCD16bpp41TextureMapper_A4_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x222>
 8026590:	2001382c 	.word	0x2001382c
 8026594:	2800      	cmp	r0, #0
 8026596:	d0ba      	beq.n	802650e <_ZN8touchgfx8LCD16bpp41TextureMapper_A4_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x42a>
 8026598:	9d0e      	ldr	r5, [sp, #56]	; 0x38
 802659a:	442b      	add	r3, r5
 802659c:	ea4f 0c53 	mov.w	ip, r3, lsr #1
 80265a0:	07db      	lsls	r3, r3, #31
 80265a2:	f817 c00c 	ldrb.w	ip, [r7, ip]
 80265a6:	bf54      	ite	pl
 80265a8:	f00c 0c0f 	andpl.w	ip, ip, #15
 80265ac:	ea4f 1c2c 	movmi.w	ip, ip, asr #4
 80265b0:	eb0c 1c0c 	add.w	ip, ip, ip, lsl #4
 80265b4:	fa5f f38c 	uxtb.w	r3, ip
 80265b8:	930c      	str	r3, [sp, #48]	; 0x30
 80265ba:	e7a8      	b.n	802650e <_ZN8touchgfx8LCD16bpp41TextureMapper_A4_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x42a>
 80265bc:	f8b8 e000 	ldrh.w	lr, [r8]
 80265c0:	fa1f fa83 	uxth.w	sl, r3
 80265c4:	ea4f 202e 	mov.w	r0, lr, asr #8
 80265c8:	f3c2 4107 	ubfx	r1, r2, #16, #8
 80265cc:	43db      	mvns	r3, r3
 80265ce:	b2db      	uxtb	r3, r3
 80265d0:	fb11 f10a 	smulbb	r1, r1, sl
 80265d4:	f000 00f8 	and.w	r0, r0, #248	; 0xf8
 80265d8:	fb00 1003 	mla	r0, r0, r3, r1
 80265dc:	b2d2      	uxtb	r2, r2
 80265de:	ea4f 01ee 	mov.w	r1, lr, asr #3
 80265e2:	ea4f 0ece 	mov.w	lr, lr, lsl #3
 80265e6:	fa5f fe8e 	uxtb.w	lr, lr
 80265ea:	fb12 f20a 	smulbb	r2, r2, sl
 80265ee:	fb0e 2203 	mla	r2, lr, r3, r2
 80265f2:	fa5f fc8c 	uxtb.w	ip, ip
 80265f6:	b280      	uxth	r0, r0
 80265f8:	f001 01fc 	and.w	r1, r1, #252	; 0xfc
 80265fc:	b292      	uxth	r2, r2
 80265fe:	fb1c fc0a 	smulbb	ip, ip, sl
 8026602:	fb01 cc03 	mla	ip, r1, r3, ip
 8026606:	1c43      	adds	r3, r0, #1
 8026608:	1c51      	adds	r1, r2, #1
 802660a:	eb03 2010 	add.w	r0, r3, r0, lsr #8
 802660e:	eb01 2112 	add.w	r1, r1, r2, lsr #8
 8026612:	fa1f fc8c 	uxth.w	ip, ip
 8026616:	f3c1 21c4 	ubfx	r1, r1, #11, #5
 802661a:	f400 4078 	and.w	r0, r0, #63488	; 0xf800
 802661e:	4308      	orrs	r0, r1
 8026620:	f10c 0101 	add.w	r1, ip, #1
 8026624:	eb01 2c1c 	add.w	ip, r1, ip, lsr #8
 8026628:	ea4f 1c5c 	mov.w	ip, ip, lsr #5
 802662c:	f40c 6cfc 	and.w	ip, ip, #2016	; 0x7e0
 8026630:	ea40 000c 	orr.w	r0, r0, ip
 8026634:	f8a8 0000 	strh.w	r0, [r8]
 8026638:	e7a1      	b.n	802657e <_ZN8touchgfx8LCD16bpp41TextureMapper_A4_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x49a>
 802663a:	b017      	add	sp, #92	; 0x5c
 802663c:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}

08026640 <_ZNK8touchgfx8LCD16bpp43TextureMapper_A4_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKtsssiihh>:
 8026640:	e92d 47f0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, lr}
 8026644:	e9dd 050a 	ldrd	r0, r5, [sp, #40]	; 0x28
 8026648:	2d00      	cmp	r5, #0
 802664a:	f9bd 8020 	ldrsh.w	r8, [sp, #32]
 802664e:	f9bd 9024 	ldrsh.w	r9, [sp, #36]	; 0x24
 8026652:	f89d 7030 	ldrb.w	r7, [sp, #48]	; 0x30
 8026656:	f89d c034 	ldrb.w	ip, [sp, #52]	; 0x34
 802665a:	fb05 0e03 	mla	lr, r5, r3, r0
 802665e:	f2c0 80b0 	blt.w	80267c2 <_ZNK8touchgfx8LCD16bpp43TextureMapper_A4_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKtsssiihh+0x182>
 8026662:	45a9      	cmp	r9, r5
 8026664:	f340 80ad 	ble.w	80267c2 <_ZNK8touchgfx8LCD16bpp43TextureMapper_A4_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKtsssiihh+0x182>
 8026668:	2800      	cmp	r0, #0
 802666a:	f2c0 80a8 	blt.w	80267be <_ZNK8touchgfx8LCD16bpp43TextureMapper_A4_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKtsssiihh+0x17e>
 802666e:	4580      	cmp	r8, r0
 8026670:	f340 80a5 	ble.w	80267be <_ZNK8touchgfx8LCD16bpp43TextureMapper_A4_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKtsssiihh+0x17e>
 8026674:	ea4f 045e 	mov.w	r4, lr, lsr #1
 8026678:	f01e 0f01 	tst.w	lr, #1
 802667c:	5d16      	ldrb	r6, [r2, r4]
 802667e:	bf0c      	ite	eq
 8026680:	f006 060f 	andeq.w	r6, r6, #15
 8026684:	1136      	asrne	r6, r6, #4
 8026686:	eb06 1606 	add.w	r6, r6, r6, lsl #4
 802668a:	b2f6      	uxtb	r6, r6
 802668c:	1c44      	adds	r4, r0, #1
 802668e:	f100 809b 	bmi.w	80267c8 <_ZNK8touchgfx8LCD16bpp43TextureMapper_A4_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKtsssiihh+0x188>
 8026692:	45a0      	cmp	r8, r4
 8026694:	f340 8098 	ble.w	80267c8 <_ZNK8touchgfx8LCD16bpp43TextureMapper_A4_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKtsssiihh+0x188>
 8026698:	2f00      	cmp	r7, #0
 802669a:	f000 8097 	beq.w	80267cc <_ZNK8touchgfx8LCD16bpp43TextureMapper_A4_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKtsssiihh+0x18c>
 802669e:	f10e 0a01 	add.w	sl, lr, #1
 80266a2:	ea4f 045a 	mov.w	r4, sl, lsr #1
 80266a6:	f01a 0f01 	tst.w	sl, #1
 80266aa:	5d14      	ldrb	r4, [r2, r4]
 80266ac:	bf0c      	ite	eq
 80266ae:	f004 040f 	andeq.w	r4, r4, #15
 80266b2:	1124      	asrne	r4, r4, #4
 80266b4:	eb04 1404 	add.w	r4, r4, r4, lsl #4
 80266b8:	b2e4      	uxtb	r4, r4
 80266ba:	3501      	adds	r5, #1
 80266bc:	f100 808a 	bmi.w	80267d4 <_ZNK8touchgfx8LCD16bpp43TextureMapper_A4_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKtsssiihh+0x194>
 80266c0:	45a9      	cmp	r9, r5
 80266c2:	f340 8087 	ble.w	80267d4 <_ZNK8touchgfx8LCD16bpp43TextureMapper_A4_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKtsssiihh+0x194>
 80266c6:	f1bc 0f00 	cmp.w	ip, #0
 80266ca:	f000 8086 	beq.w	80267da <_ZNK8touchgfx8LCD16bpp43TextureMapper_A4_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKtsssiihh+0x19a>
 80266ce:	2800      	cmp	r0, #0
 80266d0:	db7e      	blt.n	80267d0 <_ZNK8touchgfx8LCD16bpp43TextureMapper_A4_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKtsssiihh+0x190>
 80266d2:	4580      	cmp	r8, r0
 80266d4:	dd7c      	ble.n	80267d0 <_ZNK8touchgfx8LCD16bpp43TextureMapper_A4_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKtsssiihh+0x190>
 80266d6:	eb03 090e 	add.w	r9, r3, lr
 80266da:	ea4f 0559 	mov.w	r5, r9, lsr #1
 80266de:	f019 0f01 	tst.w	r9, #1
 80266e2:	5d55      	ldrb	r5, [r2, r5]
 80266e4:	bf0c      	ite	eq
 80266e6:	f005 050f 	andeq.w	r5, r5, #15
 80266ea:	112d      	asrne	r5, r5, #4
 80266ec:	eb05 1505 	add.w	r5, r5, r5, lsl #4
 80266f0:	b2ed      	uxtb	r5, r5
 80266f2:	3001      	adds	r0, #1
 80266f4:	d474      	bmi.n	80267e0 <_ZNK8touchgfx8LCD16bpp43TextureMapper_A4_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKtsssiihh+0x1a0>
 80266f6:	4580      	cmp	r8, r0
 80266f8:	dd72      	ble.n	80267e0 <_ZNK8touchgfx8LCD16bpp43TextureMapper_A4_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKtsssiihh+0x1a0>
 80266fa:	2f00      	cmp	r7, #0
 80266fc:	d072      	beq.n	80267e4 <_ZNK8touchgfx8LCD16bpp43TextureMapper_A4_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKtsssiihh+0x1a4>
 80266fe:	3301      	adds	r3, #1
 8026700:	449e      	add	lr, r3
 8026702:	ea4f 035e 	mov.w	r3, lr, lsr #1
 8026706:	f01e 0f01 	tst.w	lr, #1
 802670a:	5cd0      	ldrb	r0, [r2, r3]
 802670c:	bf0c      	ite	eq
 802670e:	f000 000f 	andeq.w	r0, r0, #15
 8026712:	1100      	asrne	r0, r0, #4
 8026714:	eb00 1000 	add.w	r0, r0, r0, lsl #4
 8026718:	b2c3      	uxtb	r3, r0
 802671a:	b2ba      	uxth	r2, r7
 802671c:	fa1f fc8c 	uxth.w	ip, ip
 8026720:	fb02 f00c 	mul.w	r0, r2, ip
 8026724:	ebc0 1c0c 	rsb	ip, r0, ip, lsl #4
 8026728:	0112      	lsls	r2, r2, #4
 802672a:	fa1f fc8c 	uxth.w	ip, ip
 802672e:	f5c2 7780 	rsb	r7, r2, #256	; 0x100
 8026732:	1a12      	subs	r2, r2, r0
 8026734:	eba7 070c 	sub.w	r7, r7, ip
 8026738:	b292      	uxth	r2, r2
 802673a:	b2bf      	uxth	r7, r7
 802673c:	4362      	muls	r2, r4
 802673e:	fb06 2207 	mla	r2, r6, r7, r2
 8026742:	fb0c 2505 	mla	r5, ip, r5, r2
 8026746:	fb00 5303 	mla	r3, r0, r3, r5
 802674a:	f3c3 2307 	ubfx	r3, r3, #8, #8
 802674e:	b3a3      	cbz	r3, 80267ba <_ZNK8touchgfx8LCD16bpp43TextureMapper_A4_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKtsssiihh+0x17a>
 8026750:	4a25      	ldr	r2, [pc, #148]	; (80267e8 <_ZNK8touchgfx8LCD16bpp43TextureMapper_A4_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKtsssiihh+0x1a8>)
 8026752:	880e      	ldrh	r6, [r1, #0]
 8026754:	6815      	ldr	r5, [r2, #0]
 8026756:	1234      	asrs	r4, r6, #8
 8026758:	b29a      	uxth	r2, r3
 802675a:	f3c5 4007 	ubfx	r0, r5, #16, #8
 802675e:	43db      	mvns	r3, r3
 8026760:	b2db      	uxtb	r3, r3
 8026762:	fb10 f002 	smulbb	r0, r0, r2
 8026766:	f004 04f8 	and.w	r4, r4, #248	; 0xf8
 802676a:	fb04 0403 	mla	r4, r4, r3, r0
 802676e:	f3c5 2707 	ubfx	r7, r5, #8, #8
 8026772:	10f0      	asrs	r0, r6, #3
 8026774:	b2ed      	uxtb	r5, r5
 8026776:	00f6      	lsls	r6, r6, #3
 8026778:	fb17 f702 	smulbb	r7, r7, r2
 802677c:	f000 00fc 	and.w	r0, r0, #252	; 0xfc
 8026780:	fb15 f202 	smulbb	r2, r5, r2
 8026784:	b2f6      	uxtb	r6, r6
 8026786:	b2a4      	uxth	r4, r4
 8026788:	fb00 7003 	mla	r0, r0, r3, r7
 802678c:	fb06 2303 	mla	r3, r6, r3, r2
 8026790:	b29a      	uxth	r2, r3
 8026792:	1c63      	adds	r3, r4, #1
 8026794:	b280      	uxth	r0, r0
 8026796:	eb03 2414 	add.w	r4, r3, r4, lsr #8
 802679a:	1c53      	adds	r3, r2, #1
 802679c:	eb03 2312 	add.w	r3, r3, r2, lsr #8
 80267a0:	1c42      	adds	r2, r0, #1
 80267a2:	eb02 2010 	add.w	r0, r2, r0, lsr #8
 80267a6:	f404 4478 	and.w	r4, r4, #63488	; 0xf800
 80267aa:	f3c3 23c4 	ubfx	r3, r3, #11, #5
 80267ae:	0940      	lsrs	r0, r0, #5
 80267b0:	4323      	orrs	r3, r4
 80267b2:	f400 60fc 	and.w	r0, r0, #2016	; 0x7e0
 80267b6:	4303      	orrs	r3, r0
 80267b8:	800b      	strh	r3, [r1, #0]
 80267ba:	e8bd 87f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, pc}
 80267be:	2600      	movs	r6, #0
 80267c0:	e764      	b.n	802668c <_ZNK8touchgfx8LCD16bpp43TextureMapper_A4_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKtsssiihh+0x4c>
 80267c2:	2400      	movs	r4, #0
 80267c4:	4626      	mov	r6, r4
 80267c6:	e778      	b.n	80266ba <_ZNK8touchgfx8LCD16bpp43TextureMapper_A4_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKtsssiihh+0x7a>
 80267c8:	2400      	movs	r4, #0
 80267ca:	e776      	b.n	80266ba <_ZNK8touchgfx8LCD16bpp43TextureMapper_A4_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKtsssiihh+0x7a>
 80267cc:	463c      	mov	r4, r7
 80267ce:	e774      	b.n	80266ba <_ZNK8touchgfx8LCD16bpp43TextureMapper_A4_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKtsssiihh+0x7a>
 80267d0:	2500      	movs	r5, #0
 80267d2:	e78e      	b.n	80266f2 <_ZNK8touchgfx8LCD16bpp43TextureMapper_A4_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKtsssiihh+0xb2>
 80267d4:	2300      	movs	r3, #0
 80267d6:	461d      	mov	r5, r3
 80267d8:	e79f      	b.n	802671a <_ZNK8touchgfx8LCD16bpp43TextureMapper_A4_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKtsssiihh+0xda>
 80267da:	4663      	mov	r3, ip
 80267dc:	4665      	mov	r5, ip
 80267de:	e79c      	b.n	802671a <_ZNK8touchgfx8LCD16bpp43TextureMapper_A4_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKtsssiihh+0xda>
 80267e0:	2300      	movs	r3, #0
 80267e2:	e79a      	b.n	802671a <_ZNK8touchgfx8LCD16bpp43TextureMapper_A4_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKtsssiihh+0xda>
 80267e4:	463b      	mov	r3, r7
 80267e6:	e798      	b.n	802671a <_ZNK8touchgfx8LCD16bpp43TextureMapper_A4_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKtsssiihh+0xda>
 80267e8:	2001382c 	.word	0x2001382c

080267ec <_ZN8touchgfx8LCD16bpp43TextureMapper_A4_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff>:
 80267ec:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 80267f0:	b093      	sub	sp, #76	; 0x4c
 80267f2:	461d      	mov	r5, r3
 80267f4:	920c      	str	r2, [sp, #48]	; 0x30
 80267f6:	9a21      	ldr	r2, [sp, #132]	; 0x84
 80267f8:	9107      	str	r1, [sp, #28]
 80267fa:	e9dd 1322 	ldrd	r1, r3, [sp, #136]	; 0x88
 80267fe:	9011      	str	r0, [sp, #68]	; 0x44
 8026800:	6850      	ldr	r0, [r2, #4]
 8026802:	6812      	ldr	r2, [r2, #0]
 8026804:	fb00 1303 	mla	r3, r0, r3, r1
 8026808:	eb02 0943 	add.w	r9, r2, r3, lsl #1
 802680c:	9b24      	ldr	r3, [sp, #144]	; 0x90
 802680e:	689b      	ldr	r3, [r3, #8]
 8026810:	3301      	adds	r3, #1
 8026812:	f023 0301 	bic.w	r3, r3, #1
 8026816:	9306      	str	r3, [sp, #24]
 8026818:	9b24      	ldr	r3, [sp, #144]	; 0x90
 802681a:	e9dd 461d 	ldrd	r4, r6, [sp, #116]	; 0x74
 802681e:	681f      	ldr	r7, [r3, #0]
 8026820:	9b07      	ldr	r3, [sp, #28]
 8026822:	2b00      	cmp	r3, #0
 8026824:	dc03      	bgt.n	802682e <_ZN8touchgfx8LCD16bpp43TextureMapper_A4_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x42>
 8026826:	9b0c      	ldr	r3, [sp, #48]	; 0x30
 8026828:	2b00      	cmp	r3, #0
 802682a:	f340 8267 	ble.w	8026cfc <_ZN8touchgfx8LCD16bpp43TextureMapper_A4_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x510>
 802682e:	9b24      	ldr	r3, [sp, #144]	; 0x90
 8026830:	f9b3 1008 	ldrsh.w	r1, [r3, #8]
 8026834:	f9b3 200c 	ldrsh.w	r2, [r3, #12]
 8026838:	1e48      	subs	r0, r1, #1
 802683a:	f102 3cff 	add.w	ip, r2, #4294967295
 802683e:	2d00      	cmp	r5, #0
 8026840:	f340 80b8 	ble.w	80269b4 <_ZN8touchgfx8LCD16bpp43TextureMapper_A4_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x1c8>
 8026844:	ea5f 4e24 	movs.w	lr, r4, asr #16
 8026848:	ea4f 4326 	mov.w	r3, r6, asr #16
 802684c:	d406      	bmi.n	802685c <_ZN8touchgfx8LCD16bpp43TextureMapper_A4_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x70>
 802684e:	4586      	cmp	lr, r0
 8026850:	da04      	bge.n	802685c <_ZN8touchgfx8LCD16bpp43TextureMapper_A4_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x70>
 8026852:	2b00      	cmp	r3, #0
 8026854:	db02      	blt.n	802685c <_ZN8touchgfx8LCD16bpp43TextureMapper_A4_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x70>
 8026856:	4563      	cmp	r3, ip
 8026858:	f2c0 80ad 	blt.w	80269b6 <_ZN8touchgfx8LCD16bpp43TextureMapper_A4_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x1ca>
 802685c:	f11e 0e01 	adds.w	lr, lr, #1
 8026860:	f100 80a0 	bmi.w	80269a4 <_ZN8touchgfx8LCD16bpp43TextureMapper_A4_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x1b8>
 8026864:	4571      	cmp	r1, lr
 8026866:	f2c0 809d 	blt.w	80269a4 <_ZN8touchgfx8LCD16bpp43TextureMapper_A4_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x1b8>
 802686a:	3301      	adds	r3, #1
 802686c:	f100 809a 	bmi.w	80269a4 <_ZN8touchgfx8LCD16bpp43TextureMapper_A4_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x1b8>
 8026870:	429a      	cmp	r2, r3
 8026872:	f2c0 8097 	blt.w	80269a4 <_ZN8touchgfx8LCD16bpp43TextureMapper_A4_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x1b8>
 8026876:	f9bd a018 	ldrsh.w	sl, [sp, #24]
 802687a:	9509      	str	r5, [sp, #36]	; 0x24
 802687c:	46c8      	mov	r8, r9
 802687e:	9b09      	ldr	r3, [sp, #36]	; 0x24
 8026880:	2b00      	cmp	r3, #0
 8026882:	f340 80b6 	ble.w	80269f2 <_ZN8touchgfx8LCD16bpp43TextureMapper_A4_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x206>
 8026886:	f3c4 3303 	ubfx	r3, r4, #12, #4
 802688a:	9308      	str	r3, [sp, #32]
 802688c:	9b24      	ldr	r3, [sp, #144]	; 0x90
 802688e:	e9d3 ce02 	ldrd	ip, lr, [r3, #8]
 8026892:	1423      	asrs	r3, r4, #16
 8026894:	ea4f 4026 	mov.w	r0, r6, asr #16
 8026898:	f3c6 3103 	ubfx	r1, r6, #12, #4
 802689c:	f100 813e 	bmi.w	8026b1c <_ZN8touchgfx8LCD16bpp43TextureMapper_A4_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x330>
 80268a0:	f10c 3bff 	add.w	fp, ip, #4294967295
 80268a4:	455b      	cmp	r3, fp
 80268a6:	f280 8139 	bge.w	8026b1c <_ZN8touchgfx8LCD16bpp43TextureMapper_A4_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x330>
 80268aa:	2800      	cmp	r0, #0
 80268ac:	f2c0 8136 	blt.w	8026b1c <_ZN8touchgfx8LCD16bpp43TextureMapper_A4_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x330>
 80268b0:	f10e 3bff 	add.w	fp, lr, #4294967295
 80268b4:	4558      	cmp	r0, fp
 80268b6:	f280 8131 	bge.w	8026b1c <_ZN8touchgfx8LCD16bpp43TextureMapper_A4_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x330>
 80268ba:	9a06      	ldr	r2, [sp, #24]
 80268bc:	fb00 3302 	mla	r3, r0, r2, r3
 80268c0:	0858      	lsrs	r0, r3, #1
 80268c2:	07da      	lsls	r2, r3, #31
 80268c4:	f817 c000 	ldrb.w	ip, [r7, r0]
 80268c8:	9a08      	ldr	r2, [sp, #32]
 80268ca:	bf54      	ite	pl
 80268cc:	f00c 0c0f 	andpl.w	ip, ip, #15
 80268d0:	ea4f 1c2c 	movmi.w	ip, ip, asr #4
 80268d4:	eb0c 1c0c 	add.w	ip, ip, ip, lsl #4
 80268d8:	fa5f fc8c 	uxtb.w	ip, ip
 80268dc:	2a00      	cmp	r2, #0
 80268de:	f000 80cb 	beq.w	8026a78 <_ZN8touchgfx8LCD16bpp43TextureMapper_A4_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x28c>
 80268e2:	1c58      	adds	r0, r3, #1
 80268e4:	ea4f 0e50 	mov.w	lr, r0, lsr #1
 80268e8:	07c0      	lsls	r0, r0, #31
 80268ea:	f817 e00e 	ldrb.w	lr, [r7, lr]
 80268ee:	bf54      	ite	pl
 80268f0:	f00e 0e0f 	andpl.w	lr, lr, #15
 80268f4:	ea4f 1e2e 	movmi.w	lr, lr, asr #4
 80268f8:	eb0e 1e0e 	add.w	lr, lr, lr, lsl #4
 80268fc:	fa5f fe8e 	uxtb.w	lr, lr
 8026900:	f8cd e034 	str.w	lr, [sp, #52]	; 0x34
 8026904:	b1b9      	cbz	r1, 8026936 <_ZN8touchgfx8LCD16bpp43TextureMapper_A4_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x14a>
 8026906:	4453      	add	r3, sl
 8026908:	0858      	lsrs	r0, r3, #1
 802690a:	07da      	lsls	r2, r3, #31
 802690c:	5c38      	ldrb	r0, [r7, r0]
 802690e:	bf54      	ite	pl
 8026910:	f000 000f 	andpl.w	r0, r0, #15
 8026914:	1100      	asrmi	r0, r0, #4
 8026916:	eb00 1000 	add.w	r0, r0, r0, lsl #4
 802691a:	b2c0      	uxtb	r0, r0
 802691c:	900a      	str	r0, [sp, #40]	; 0x28
 802691e:	1c58      	adds	r0, r3, #1
 8026920:	0843      	lsrs	r3, r0, #1
 8026922:	07c2      	lsls	r2, r0, #31
 8026924:	5cfb      	ldrb	r3, [r7, r3]
 8026926:	bf54      	ite	pl
 8026928:	f003 030f 	andpl.w	r3, r3, #15
 802692c:	111b      	asrmi	r3, r3, #4
 802692e:	eb03 1303 	add.w	r3, r3, r3, lsl #4
 8026932:	b2db      	uxtb	r3, r3
 8026934:	930e      	str	r3, [sp, #56]	; 0x38
 8026936:	f8bd 2020 	ldrh.w	r2, [sp, #32]
 802693a:	b289      	uxth	r1, r1
 802693c:	fb02 f301 	mul.w	r3, r2, r1
 8026940:	ebc3 1101 	rsb	r1, r3, r1, lsl #4
 8026944:	0112      	lsls	r2, r2, #4
 8026946:	b289      	uxth	r1, r1
 8026948:	f5c2 7080 	rsb	r0, r2, #256	; 0x100
 802694c:	1a40      	subs	r0, r0, r1
 802694e:	fa1f fe80 	uxth.w	lr, r0
 8026952:	1ad2      	subs	r2, r2, r3
 8026954:	980d      	ldr	r0, [sp, #52]	; 0x34
 8026956:	b292      	uxth	r2, r2
 8026958:	4342      	muls	r2, r0
 802695a:	fb0c 2c0e 	mla	ip, ip, lr, r2
 802695e:	9a0a      	ldr	r2, [sp, #40]	; 0x28
 8026960:	fb01 c102 	mla	r1, r1, r2, ip
 8026964:	9a0e      	ldr	r2, [sp, #56]	; 0x38
 8026966:	fb03 1302 	mla	r3, r3, r2, r1
 802696a:	f3c3 2307 	ubfx	r3, r3, #8, #8
 802696e:	2bff      	cmp	r3, #255	; 0xff
 8026970:	f040 8093 	bne.w	8026a9a <_ZN8touchgfx8LCD16bpp43TextureMapper_A4_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x2ae>
 8026974:	4bbe      	ldr	r3, [pc, #760]	; (8026c70 <_ZN8touchgfx8LCD16bpp43TextureMapper_A4_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x484>)
 8026976:	681a      	ldr	r2, [r3, #0]
 8026978:	4bbe      	ldr	r3, [pc, #760]	; (8026c74 <_ZN8touchgfx8LCD16bpp43TextureMapper_A4_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x488>)
 802697a:	0951      	lsrs	r1, r2, #5
 802697c:	ea03 2312 	and.w	r3, r3, r2, lsr #8
 8026980:	f401 61fc 	and.w	r1, r1, #2016	; 0x7e0
 8026984:	430b      	orrs	r3, r1
 8026986:	f3c2 02c4 	ubfx	r2, r2, #3, #5
 802698a:	4313      	orrs	r3, r2
 802698c:	f8a8 3000 	strh.w	r3, [r8]
 8026990:	9b1f      	ldr	r3, [sp, #124]	; 0x7c
 8026992:	441c      	add	r4, r3
 8026994:	9b20      	ldr	r3, [sp, #128]	; 0x80
 8026996:	441e      	add	r6, r3
 8026998:	9b09      	ldr	r3, [sp, #36]	; 0x24
 802699a:	3b01      	subs	r3, #1
 802699c:	f108 0802 	add.w	r8, r8, #2
 80269a0:	9309      	str	r3, [sp, #36]	; 0x24
 80269a2:	e76c      	b.n	802687e <_ZN8touchgfx8LCD16bpp43TextureMapper_A4_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x92>
 80269a4:	9b1f      	ldr	r3, [sp, #124]	; 0x7c
 80269a6:	441c      	add	r4, r3
 80269a8:	9b20      	ldr	r3, [sp, #128]	; 0x80
 80269aa:	3d01      	subs	r5, #1
 80269ac:	441e      	add	r6, r3
 80269ae:	f109 0902 	add.w	r9, r9, #2
 80269b2:	e744      	b.n	802683e <_ZN8touchgfx8LCD16bpp43TextureMapper_A4_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x52>
 80269b4:	d021      	beq.n	80269fa <_ZN8touchgfx8LCD16bpp43TextureMapper_A4_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x20e>
 80269b6:	981f      	ldr	r0, [sp, #124]	; 0x7c
 80269b8:	1e6b      	subs	r3, r5, #1
 80269ba:	fb00 4003 	mla	r0, r0, r3, r4
 80269be:	1400      	asrs	r0, r0, #16
 80269c0:	f53f af59 	bmi.w	8026876 <_ZN8touchgfx8LCD16bpp43TextureMapper_A4_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x8a>
 80269c4:	3901      	subs	r1, #1
 80269c6:	4288      	cmp	r0, r1
 80269c8:	f6bf af55 	bge.w	8026876 <_ZN8touchgfx8LCD16bpp43TextureMapper_A4_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x8a>
 80269cc:	9920      	ldr	r1, [sp, #128]	; 0x80
 80269ce:	fb01 6303 	mla	r3, r1, r3, r6
 80269d2:	141b      	asrs	r3, r3, #16
 80269d4:	f53f af4f 	bmi.w	8026876 <_ZN8touchgfx8LCD16bpp43TextureMapper_A4_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x8a>
 80269d8:	3a01      	subs	r2, #1
 80269da:	4293      	cmp	r3, r2
 80269dc:	f6bf af4b 	bge.w	8026876 <_ZN8touchgfx8LCD16bpp43TextureMapper_A4_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x8a>
 80269e0:	f9bd 3018 	ldrsh.w	r3, [sp, #24]
 80269e4:	9308      	str	r3, [sp, #32]
 80269e6:	46a8      	mov	r8, r5
 80269e8:	46ce      	mov	lr, r9
 80269ea:	f1b8 0f00 	cmp.w	r8, #0
 80269ee:	f300 80b5 	bgt.w	8026b5c <_ZN8touchgfx8LCD16bpp43TextureMapper_A4_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x370>
 80269f2:	ea25 75e5 	bic.w	r5, r5, r5, asr #31
 80269f6:	eb09 0945 	add.w	r9, r9, r5, lsl #1
 80269fa:	9b07      	ldr	r3, [sp, #28]
 80269fc:	2b00      	cmp	r3, #0
 80269fe:	f340 817d 	ble.w	8026cfc <_ZN8touchgfx8LCD16bpp43TextureMapper_A4_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x510>
 8026a02:	ee30 0a04 	vadd.f32	s0, s0, s8
 8026a06:	eeb7 7a00 	vmov.f32	s14, #112	; 0x3f800000  1.0
 8026a0a:	eec7 7a00 	vdiv.f32	s15, s14, s0
 8026a0e:	9b1c      	ldr	r3, [sp, #112]	; 0x70
 8026a10:	ee70 0aa4 	vadd.f32	s1, s1, s9
 8026a14:	ee31 1a05 	vadd.f32	s2, s2, s10
 8026a18:	ee20 7aa7 	vmul.f32	s14, s1, s15
 8026a1c:	eef0 6a62 	vmov.f32	s13, s5
 8026a20:	ee61 7a27 	vmul.f32	s15, s2, s15
 8026a24:	eefe 6ac8 	vcvt.s32.f32	s13, s13, #16
 8026a28:	ee77 2a62 	vsub.f32	s5, s14, s5
 8026a2c:	ee16 4a90 	vmov	r4, s13
 8026a30:	eefe 2ac8 	vcvt.s32.f32	s5, s5, #16
 8026a34:	eef0 6a43 	vmov.f32	s13, s6
 8026a38:	ee37 3ac3 	vsub.f32	s6, s15, s6
 8026a3c:	ee12 2a90 	vmov	r2, s5
 8026a40:	eebe 3ac8 	vcvt.s32.f32	s6, s6, #16
 8026a44:	fb92 f3f3 	sdiv	r3, r2, r3
 8026a48:	ee13 2a10 	vmov	r2, s6
 8026a4c:	931f      	str	r3, [sp, #124]	; 0x7c
 8026a4e:	9b1c      	ldr	r3, [sp, #112]	; 0x70
 8026a50:	fb92 f3f3 	sdiv	r3, r2, r3
 8026a54:	9320      	str	r3, [sp, #128]	; 0x80
 8026a56:	9b07      	ldr	r3, [sp, #28]
 8026a58:	9a0c      	ldr	r2, [sp, #48]	; 0x30
 8026a5a:	3b01      	subs	r3, #1
 8026a5c:	eefe 6ac8 	vcvt.s32.f32	s13, s13, #16
 8026a60:	9307      	str	r3, [sp, #28]
 8026a62:	9b1c      	ldr	r3, [sp, #112]	; 0x70
 8026a64:	ee16 6a90 	vmov	r6, s13
 8026a68:	bf14      	ite	ne
 8026a6a:	461d      	movne	r5, r3
 8026a6c:	4615      	moveq	r5, r2
 8026a6e:	eeb0 3a67 	vmov.f32	s6, s15
 8026a72:	eef0 2a47 	vmov.f32	s5, s14
 8026a76:	e6d3      	b.n	8026820 <_ZN8touchgfx8LCD16bpp43TextureMapper_A4_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x34>
 8026a78:	2900      	cmp	r1, #0
 8026a7a:	f43f af5c 	beq.w	8026936 <_ZN8touchgfx8LCD16bpp43TextureMapper_A4_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x14a>
 8026a7e:	eb0a 0003 	add.w	r0, sl, r3
 8026a82:	0843      	lsrs	r3, r0, #1
 8026a84:	07c0      	lsls	r0, r0, #31
 8026a86:	5cfb      	ldrb	r3, [r7, r3]
 8026a88:	bf54      	ite	pl
 8026a8a:	f003 030f 	andpl.w	r3, r3, #15
 8026a8e:	111b      	asrmi	r3, r3, #4
 8026a90:	eb03 1303 	add.w	r3, r3, r3, lsl #4
 8026a94:	b2db      	uxtb	r3, r3
 8026a96:	930a      	str	r3, [sp, #40]	; 0x28
 8026a98:	e74d      	b.n	8026936 <_ZN8touchgfx8LCD16bpp43TextureMapper_A4_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x14a>
 8026a9a:	2b00      	cmp	r3, #0
 8026a9c:	f43f af78 	beq.w	8026990 <_ZN8touchgfx8LCD16bpp43TextureMapper_A4_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x1a4>
 8026aa0:	4a73      	ldr	r2, [pc, #460]	; (8026c70 <_ZN8touchgfx8LCD16bpp43TextureMapper_A4_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x484>)
 8026aa2:	f8b8 c000 	ldrh.w	ip, [r8]
 8026aa6:	6810      	ldr	r0, [r2, #0]
 8026aa8:	fa1f fe83 	uxth.w	lr, r3
 8026aac:	ea4f 212c 	mov.w	r1, ip, asr #8
 8026ab0:	f3c0 4207 	ubfx	r2, r0, #16, #8
 8026ab4:	43db      	mvns	r3, r3
 8026ab6:	b2db      	uxtb	r3, r3
 8026ab8:	fb12 f20e 	smulbb	r2, r2, lr
 8026abc:	f001 01f8 	and.w	r1, r1, #248	; 0xf8
 8026ac0:	fb01 2103 	mla	r1, r1, r3, r2
 8026ac4:	f3c0 2b07 	ubfx	fp, r0, #8, #8
 8026ac8:	ea4f 02ec 	mov.w	r2, ip, asr #3
 8026acc:	b2c0      	uxtb	r0, r0
 8026ace:	ea4f 0ccc 	mov.w	ip, ip, lsl #3
 8026ad2:	fb1b fb0e 	smulbb	fp, fp, lr
 8026ad6:	b289      	uxth	r1, r1
 8026ad8:	fb10 fe0e 	smulbb	lr, r0, lr
 8026adc:	f002 02fc 	and.w	r2, r2, #252	; 0xfc
 8026ae0:	fa5f fc8c 	uxtb.w	ip, ip
 8026ae4:	fb02 b203 	mla	r2, r2, r3, fp
 8026ae8:	1c48      	adds	r0, r1, #1
 8026aea:	fb0c e303 	mla	r3, ip, r3, lr
 8026aee:	b292      	uxth	r2, r2
 8026af0:	b29b      	uxth	r3, r3
 8026af2:	eb00 2111 	add.w	r1, r0, r1, lsr #8
 8026af6:	f401 4078 	and.w	r0, r1, #63488	; 0xf800
 8026afa:	f102 0b01 	add.w	fp, r2, #1
 8026afe:	1c59      	adds	r1, r3, #1
 8026b00:	eb01 2113 	add.w	r1, r1, r3, lsr #8
 8026b04:	eb0b 2212 	add.w	r2, fp, r2, lsr #8
 8026b08:	f3c1 21c4 	ubfx	r1, r1, #11, #5
 8026b0c:	0952      	lsrs	r2, r2, #5
 8026b0e:	4301      	orrs	r1, r0
 8026b10:	f402 62fc 	and.w	r2, r2, #2016	; 0x7e0
 8026b14:	4311      	orrs	r1, r2
 8026b16:	f8a8 1000 	strh.w	r1, [r8]
 8026b1a:	e739      	b.n	8026990 <_ZN8touchgfx8LCD16bpp43TextureMapper_A4_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x1a4>
 8026b1c:	f113 0b01 	adds.w	fp, r3, #1
 8026b20:	f53f af36 	bmi.w	8026990 <_ZN8touchgfx8LCD16bpp43TextureMapper_A4_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x1a4>
 8026b24:	45dc      	cmp	ip, fp
 8026b26:	f6ff af33 	blt.w	8026990 <_ZN8touchgfx8LCD16bpp43TextureMapper_A4_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x1a4>
 8026b2a:	f110 0b01 	adds.w	fp, r0, #1
 8026b2e:	f53f af2f 	bmi.w	8026990 <_ZN8touchgfx8LCD16bpp43TextureMapper_A4_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x1a4>
 8026b32:	45de      	cmp	lr, fp
 8026b34:	f6ff af2c 	blt.w	8026990 <_ZN8touchgfx8LCD16bpp43TextureMapper_A4_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x1a4>
 8026b38:	9a08      	ldr	r2, [sp, #32]
 8026b3a:	9302      	str	r3, [sp, #8]
 8026b3c:	fa0f f38e 	sxth.w	r3, lr
 8026b40:	9301      	str	r3, [sp, #4]
 8026b42:	fa0f f38c 	sxth.w	r3, ip
 8026b46:	e9cd 0203 	strd	r0, r2, [sp, #12]
 8026b4a:	9105      	str	r1, [sp, #20]
 8026b4c:	9300      	str	r3, [sp, #0]
 8026b4e:	463a      	mov	r2, r7
 8026b50:	4653      	mov	r3, sl
 8026b52:	4641      	mov	r1, r8
 8026b54:	9811      	ldr	r0, [sp, #68]	; 0x44
 8026b56:	f7ff fd73 	bl	8026640 <_ZNK8touchgfx8LCD16bpp43TextureMapper_A4_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKtsssiihh>
 8026b5a:	e719      	b.n	8026990 <_ZN8touchgfx8LCD16bpp43TextureMapper_A4_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x1a4>
 8026b5c:	9906      	ldr	r1, [sp, #24]
 8026b5e:	1422      	asrs	r2, r4, #16
 8026b60:	1433      	asrs	r3, r6, #16
 8026b62:	fb01 2303 	mla	r3, r1, r3, r2
 8026b66:	085a      	lsrs	r2, r3, #1
 8026b68:	07d9      	lsls	r1, r3, #31
 8026b6a:	5cba      	ldrb	r2, [r7, r2]
 8026b6c:	bf54      	ite	pl
 8026b6e:	f002 020f 	andpl.w	r2, r2, #15
 8026b72:	1112      	asrmi	r2, r2, #4
 8026b74:	eb02 1202 	add.w	r2, r2, r2, lsl #4
 8026b78:	f3c4 3003 	ubfx	r0, r4, #12, #4
 8026b7c:	f3c6 3c03 	ubfx	ip, r6, #12, #4
 8026b80:	b2d2      	uxtb	r2, r2
 8026b82:	2800      	cmp	r0, #0
 8026b84:	d062      	beq.n	8026c4c <_ZN8touchgfx8LCD16bpp43TextureMapper_A4_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x460>
 8026b86:	f103 0a01 	add.w	sl, r3, #1
 8026b8a:	ea4f 015a 	mov.w	r1, sl, lsr #1
 8026b8e:	f01a 0f01 	tst.w	sl, #1
 8026b92:	5c79      	ldrb	r1, [r7, r1]
 8026b94:	bf0c      	ite	eq
 8026b96:	f001 010f 	andeq.w	r1, r1, #15
 8026b9a:	1109      	asrne	r1, r1, #4
 8026b9c:	eb01 1101 	add.w	r1, r1, r1, lsl #4
 8026ba0:	b2c9      	uxtb	r1, r1
 8026ba2:	910f      	str	r1, [sp, #60]	; 0x3c
 8026ba4:	f1bc 0f00 	cmp.w	ip, #0
 8026ba8:	d019      	beq.n	8026bde <_ZN8touchgfx8LCD16bpp43TextureMapper_A4_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x3f2>
 8026baa:	9908      	ldr	r1, [sp, #32]
 8026bac:	440b      	add	r3, r1
 8026bae:	0859      	lsrs	r1, r3, #1
 8026bb0:	f013 0f01 	tst.w	r3, #1
 8026bb4:	5c79      	ldrb	r1, [r7, r1]
 8026bb6:	bf0c      	ite	eq
 8026bb8:	f001 010f 	andeq.w	r1, r1, #15
 8026bbc:	1109      	asrne	r1, r1, #4
 8026bbe:	eb01 1101 	add.w	r1, r1, r1, lsl #4
 8026bc2:	b2c9      	uxtb	r1, r1
 8026bc4:	3301      	adds	r3, #1
 8026bc6:	910b      	str	r1, [sp, #44]	; 0x2c
 8026bc8:	0859      	lsrs	r1, r3, #1
 8026bca:	07db      	lsls	r3, r3, #31
 8026bcc:	5c79      	ldrb	r1, [r7, r1]
 8026bce:	bf54      	ite	pl
 8026bd0:	f001 010f 	andpl.w	r1, r1, #15
 8026bd4:	1109      	asrmi	r1, r1, #4
 8026bd6:	eb01 1101 	add.w	r1, r1, r1, lsl #4
 8026bda:	b2c9      	uxtb	r1, r1
 8026bdc:	9110      	str	r1, [sp, #64]	; 0x40
 8026bde:	b280      	uxth	r0, r0
 8026be0:	fa1f fc8c 	uxth.w	ip, ip
 8026be4:	fb00 f30c 	mul.w	r3, r0, ip
 8026be8:	ebc3 1c0c 	rsb	ip, r3, ip, lsl #4
 8026bec:	0100      	lsls	r0, r0, #4
 8026bee:	fa1f fc8c 	uxth.w	ip, ip
 8026bf2:	f5c0 7180 	rsb	r1, r0, #256	; 0x100
 8026bf6:	eba1 010c 	sub.w	r1, r1, ip
 8026bfa:	fa1f fa81 	uxth.w	sl, r1
 8026bfe:	1ac0      	subs	r0, r0, r3
 8026c00:	990f      	ldr	r1, [sp, #60]	; 0x3c
 8026c02:	b280      	uxth	r0, r0
 8026c04:	4348      	muls	r0, r1
 8026c06:	990b      	ldr	r1, [sp, #44]	; 0x2c
 8026c08:	fb02 020a 	mla	r2, r2, sl, r0
 8026c0c:	fb0c 2c01 	mla	ip, ip, r1, r2
 8026c10:	9a10      	ldr	r2, [sp, #64]	; 0x40
 8026c12:	fb03 c302 	mla	r3, r3, r2, ip
 8026c16:	f3c3 2307 	ubfx	r3, r3, #8, #8
 8026c1a:	2bff      	cmp	r3, #255	; 0xff
 8026c1c:	d12c      	bne.n	8026c78 <_ZN8touchgfx8LCD16bpp43TextureMapper_A4_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x48c>
 8026c1e:	4b14      	ldr	r3, [pc, #80]	; (8026c70 <_ZN8touchgfx8LCD16bpp43TextureMapper_A4_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x484>)
 8026c20:	681a      	ldr	r2, [r3, #0]
 8026c22:	4b14      	ldr	r3, [pc, #80]	; (8026c74 <_ZN8touchgfx8LCD16bpp43TextureMapper_A4_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x488>)
 8026c24:	0951      	lsrs	r1, r2, #5
 8026c26:	ea03 2312 	and.w	r3, r3, r2, lsr #8
 8026c2a:	f401 61fc 	and.w	r1, r1, #2016	; 0x7e0
 8026c2e:	430b      	orrs	r3, r1
 8026c30:	f3c2 02c4 	ubfx	r2, r2, #3, #5
 8026c34:	4313      	orrs	r3, r2
 8026c36:	f8ae 3000 	strh.w	r3, [lr]
 8026c3a:	9b1f      	ldr	r3, [sp, #124]	; 0x7c
 8026c3c:	441c      	add	r4, r3
 8026c3e:	9b20      	ldr	r3, [sp, #128]	; 0x80
 8026c40:	f10e 0e02 	add.w	lr, lr, #2
 8026c44:	441e      	add	r6, r3
 8026c46:	f108 38ff 	add.w	r8, r8, #4294967295
 8026c4a:	e6ce      	b.n	80269ea <_ZN8touchgfx8LCD16bpp43TextureMapper_A4_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x1fe>
 8026c4c:	f1bc 0f00 	cmp.w	ip, #0
 8026c50:	d0c5      	beq.n	8026bde <_ZN8touchgfx8LCD16bpp43TextureMapper_A4_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x3f2>
 8026c52:	9908      	ldr	r1, [sp, #32]
 8026c54:	440b      	add	r3, r1
 8026c56:	0859      	lsrs	r1, r3, #1
 8026c58:	07db      	lsls	r3, r3, #31
 8026c5a:	5c79      	ldrb	r1, [r7, r1]
 8026c5c:	bf54      	ite	pl
 8026c5e:	f001 010f 	andpl.w	r1, r1, #15
 8026c62:	1109      	asrmi	r1, r1, #4
 8026c64:	eb01 1101 	add.w	r1, r1, r1, lsl #4
 8026c68:	b2c9      	uxtb	r1, r1
 8026c6a:	910b      	str	r1, [sp, #44]	; 0x2c
 8026c6c:	e7b7      	b.n	8026bde <_ZN8touchgfx8LCD16bpp43TextureMapper_A4_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x3f2>
 8026c6e:	bf00      	nop
 8026c70:	2001382c 	.word	0x2001382c
 8026c74:	fffff800 	.word	0xfffff800
 8026c78:	2b00      	cmp	r3, #0
 8026c7a:	d0de      	beq.n	8026c3a <_ZN8touchgfx8LCD16bpp43TextureMapper_A4_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x44e>
 8026c7c:	4a21      	ldr	r2, [pc, #132]	; (8026d04 <_ZN8touchgfx8LCD16bpp43TextureMapper_A4_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x518>)
 8026c7e:	f8be c000 	ldrh.w	ip, [lr]
 8026c82:	6810      	ldr	r0, [r2, #0]
 8026c84:	fa1f fa83 	uxth.w	sl, r3
 8026c88:	ea4f 212c 	mov.w	r1, ip, asr #8
 8026c8c:	f3c0 4207 	ubfx	r2, r0, #16, #8
 8026c90:	43db      	mvns	r3, r3
 8026c92:	b2db      	uxtb	r3, r3
 8026c94:	fb12 f20a 	smulbb	r2, r2, sl
 8026c98:	f001 01f8 	and.w	r1, r1, #248	; 0xf8
 8026c9c:	fb01 2103 	mla	r1, r1, r3, r2
 8026ca0:	f3c0 2b07 	ubfx	fp, r0, #8, #8
 8026ca4:	ea4f 02ec 	mov.w	r2, ip, asr #3
 8026ca8:	b2c0      	uxtb	r0, r0
 8026caa:	ea4f 0ccc 	mov.w	ip, ip, lsl #3
 8026cae:	fa5f fc8c 	uxtb.w	ip, ip
 8026cb2:	fb10 f00a 	smulbb	r0, r0, sl
 8026cb6:	fb0c 0003 	mla	r0, ip, r3, r0
 8026cba:	b289      	uxth	r1, r1
 8026cbc:	fb1b fb0a 	smulbb	fp, fp, sl
 8026cc0:	b280      	uxth	r0, r0
 8026cc2:	f002 02fc 	and.w	r2, r2, #252	; 0xfc
 8026cc6:	fb02 b203 	mla	r2, r2, r3, fp
 8026cca:	1c4b      	adds	r3, r1, #1
 8026ccc:	f100 0b01 	add.w	fp, r0, #1
 8026cd0:	eb03 2111 	add.w	r1, r3, r1, lsr #8
 8026cd4:	eb0b 2b10 	add.w	fp, fp, r0, lsr #8
 8026cd8:	b292      	uxth	r2, r2
 8026cda:	f3cb 2bc4 	ubfx	fp, fp, #11, #5
 8026cde:	f401 4178 	and.w	r1, r1, #63488	; 0xf800
 8026ce2:	ea4b 0101 	orr.w	r1, fp, r1
 8026ce6:	f102 0b01 	add.w	fp, r2, #1
 8026cea:	eb0b 2212 	add.w	r2, fp, r2, lsr #8
 8026cee:	0952      	lsrs	r2, r2, #5
 8026cf0:	f402 62fc 	and.w	r2, r2, #2016	; 0x7e0
 8026cf4:	4311      	orrs	r1, r2
 8026cf6:	f8ae 1000 	strh.w	r1, [lr]
 8026cfa:	e79e      	b.n	8026c3a <_ZN8touchgfx8LCD16bpp43TextureMapper_A4_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x44e>
 8026cfc:	b013      	add	sp, #76	; 0x4c
 8026cfe:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
 8026d02:	bf00      	nop
 8026d04:	2001382c 	.word	0x2001382c

08026d08 <_ZNK8touchgfx8LCD16bpp17DecompressorL8_L416blendPixelRGB565Ettii>:
 8026d08:	b570      	push	{r4, r5, r6, lr}
 8026d0a:	1208      	asrs	r0, r1, #8
 8026d0c:	b29e      	uxth	r6, r3
 8026d0e:	f8bd 5010 	ldrh.w	r5, [sp, #16]
 8026d12:	1213      	asrs	r3, r2, #8
 8026d14:	f000 00f8 	and.w	r0, r0, #248	; 0xf8
 8026d18:	f003 03f8 	and.w	r3, r3, #248	; 0xf8
 8026d1c:	fb13 f305 	smulbb	r3, r3, r5
 8026d20:	fb10 f006 	smulbb	r0, r0, r6
 8026d24:	4418      	add	r0, r3
 8026d26:	10cc      	asrs	r4, r1, #3
 8026d28:	10d3      	asrs	r3, r2, #3
 8026d2a:	f004 04fc 	and.w	r4, r4, #252	; 0xfc
 8026d2e:	f003 03fc 	and.w	r3, r3, #252	; 0xfc
 8026d32:	fb13 f305 	smulbb	r3, r3, r5
 8026d36:	fb14 f406 	smulbb	r4, r4, r6
 8026d3a:	00c9      	lsls	r1, r1, #3
 8026d3c:	00d2      	lsls	r2, r2, #3
 8026d3e:	441c      	add	r4, r3
 8026d40:	b2d2      	uxtb	r2, r2
 8026d42:	b2cb      	uxtb	r3, r1
 8026d44:	fb12 f205 	smulbb	r2, r2, r5
 8026d48:	b280      	uxth	r0, r0
 8026d4a:	fb13 f306 	smulbb	r3, r3, r6
 8026d4e:	4413      	add	r3, r2
 8026d50:	1c42      	adds	r2, r0, #1
 8026d52:	b29b      	uxth	r3, r3
 8026d54:	eb02 2010 	add.w	r0, r2, r0, lsr #8
 8026d58:	f400 4278 	and.w	r2, r0, #63488	; 0xf800
 8026d5c:	1c58      	adds	r0, r3, #1
 8026d5e:	eb00 2013 	add.w	r0, r0, r3, lsr #8
 8026d62:	b2a4      	uxth	r4, r4
 8026d64:	f3c0 20c4 	ubfx	r0, r0, #11, #5
 8026d68:	4310      	orrs	r0, r2
 8026d6a:	1c62      	adds	r2, r4, #1
 8026d6c:	eb02 2414 	add.w	r4, r2, r4, lsr #8
 8026d70:	0964      	lsrs	r4, r4, #5
 8026d72:	f404 64fc 	and.w	r4, r4, #2016	; 0x7e0
 8026d76:	4320      	orrs	r0, r4
 8026d78:	bd70      	pop	{r4, r5, r6, pc}
	...

08026d7c <_ZN8touchgfx8LCD16bpp17DecompressorL8_L414blitCopyRGB565EPKhS3_RKNS_4RectES6_h>:
 8026d7c:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 8026d80:	b08f      	sub	sp, #60	; 0x3c
 8026d82:	461c      	mov	r4, r3
 8026d84:	f89d 7064 	ldrb.w	r7, [sp, #100]	; 0x64
 8026d88:	9004      	str	r0, [sp, #16]
 8026d8a:	460d      	mov	r5, r1
 8026d8c:	4616      	mov	r6, r2
 8026d8e:	9b18      	ldr	r3, [sp, #96]	; 0x60
 8026d90:	2f00      	cmp	r7, #0
 8026d92:	f000 80f6 	beq.w	8026f82 <_ZN8touchgfx8LCD16bpp17DecompressorL8_L414blitCopyRGB565EPKhS3_RKNS_4RectES6_h+0x206>
 8026d96:	6820      	ldr	r0, [r4, #0]
 8026d98:	6861      	ldr	r1, [r4, #4]
 8026d9a:	aa0a      	add	r2, sp, #40	; 0x28
 8026d9c:	c203      	stmia	r2!, {r0, r1}
 8026d9e:	6818      	ldr	r0, [r3, #0]
 8026da0:	6859      	ldr	r1, [r3, #4]
 8026da2:	aa0c      	add	r2, sp, #48	; 0x30
 8026da4:	c203      	stmia	r2!, {r0, r1}
 8026da6:	a80a      	add	r0, sp, #40	; 0x28
 8026da8:	f7ef fa5e 	bl	8016268 <_ZN8touchgfx21DisplayTransformation29transformDisplayToFrameBufferERNS_4RectE>
 8026dac:	4621      	mov	r1, r4
 8026dae:	a80c      	add	r0, sp, #48	; 0x30
 8026db0:	f7ef fa9e 	bl	80162f0 <_ZN8touchgfx21DisplayTransformation29transformDisplayToFrameBufferERNS_4RectERKS1_>
 8026db4:	f9bd 2030 	ldrsh.w	r2, [sp, #48]	; 0x30
 8026db8:	f9bd b036 	ldrsh.w	fp, [sp, #54]	; 0x36
 8026dbc:	f9bd 9034 	ldrsh.w	r9, [sp, #52]	; 0x34
 8026dc0:	f002 0301 	and.w	r3, r2, #1
 8026dc4:	9306      	str	r3, [sp, #24]
 8026dc6:	f9bd 302c 	ldrsh.w	r3, [sp, #44]	; 0x2c
 8026dca:	f003 0101 	and.w	r1, r3, #1
 8026dce:	9105      	str	r1, [sp, #20]
 8026dd0:	9805      	ldr	r0, [sp, #20]
 8026dd2:	f9bd 1032 	ldrsh.w	r1, [sp, #50]	; 0x32
 8026dd6:	4403      	add	r3, r0
 8026dd8:	fb01 2303 	mla	r3, r1, r3, r2
 8026ddc:	f04f 0802 	mov.w	r8, #2
 8026de0:	fb93 f3f8 	sdiv	r3, r3, r8
 8026de4:	441d      	add	r5, r3
 8026de6:	f8bd 3028 	ldrh.w	r3, [sp, #40]	; 0x28
 8026dea:	441a      	add	r2, r3
 8026dec:	f8bd 302a 	ldrh.w	r3, [sp, #42]	; 0x2a
 8026df0:	f8ad 2030 	strh.w	r2, [sp, #48]	; 0x30
 8026df4:	4419      	add	r1, r3
 8026df6:	4b64      	ldr	r3, [pc, #400]	; (8026f88 <_ZN8touchgfx8LCD16bpp17DecompressorL8_L414blitCopyRGB565EPKhS3_RKNS_4RectES6_h+0x20c>)
 8026df8:	f8ad 1032 	strh.w	r1, [sp, #50]	; 0x32
 8026dfc:	6818      	ldr	r0, [r3, #0]
 8026dfe:	6803      	ldr	r3, [r0, #0]
 8026e00:	6a9b      	ldr	r3, [r3, #40]	; 0x28
 8026e02:	4798      	blx	r3
 8026e04:	4a61      	ldr	r2, [pc, #388]	; (8026f8c <_ZN8touchgfx8LCD16bpp17DecompressorL8_L414blitCopyRGB565EPKhS3_RKNS_4RectES6_h+0x210>)
 8026e06:	f9bd 4032 	ldrsh.w	r4, [sp, #50]	; 0x32
 8026e0a:	8813      	ldrh	r3, [r2, #0]
 8026e0c:	f9bd a030 	ldrsh.w	sl, [sp, #48]	; 0x30
 8026e10:	2fff      	cmp	r7, #255	; 0xff
 8026e12:	fb03 a404 	mla	r4, r3, r4, sl
 8026e16:	eb00 0444 	add.w	r4, r0, r4, lsl #1
 8026e1a:	f106 0604 	add.w	r6, r6, #4
 8026e1e:	4611      	mov	r1, r2
 8026e20:	fb03 fb0b 	mul.w	fp, r3, fp
 8026e24:	d06b      	beq.n	8026efe <_ZN8touchgfx8LCD16bpp17DecompressorL8_L414blitCopyRGB565EPKhS3_RKNS_4RectES6_h+0x182>
 8026e26:	f1c7 03ff 	rsb	r3, r7, #255	; 0xff
 8026e2a:	9303      	str	r3, [sp, #12]
 8026e2c:	eb04 034b 	add.w	r3, r4, fp, lsl #1
 8026e30:	e9cd 3207 	strd	r3, r2, [sp, #28]
 8026e34:	f8cd 8024 	str.w	r8, [sp, #36]	; 0x24
 8026e38:	9b07      	ldr	r3, [sp, #28]
 8026e3a:	42a3      	cmp	r3, r4
 8026e3c:	f240 809c 	bls.w	8026f78 <_ZN8touchgfx8LCD16bpp17DecompressorL8_L414blitCopyRGB565EPKhS3_RKNS_4RectES6_h+0x1fc>
 8026e40:	9b06      	ldr	r3, [sp, #24]
 8026e42:	2b00      	cmp	r3, #0
 8026e44:	d039      	beq.n	8026eba <_ZN8touchgfx8LCD16bpp17DecompressorL8_L414blitCopyRGB565EPKhS3_RKNS_4RectES6_h+0x13e>
 8026e46:	782b      	ldrb	r3, [r5, #0]
 8026e48:	8822      	ldrh	r2, [r4, #0]
 8026e4a:	9804      	ldr	r0, [sp, #16]
 8026e4c:	f003 030f 	and.w	r3, r3, #15
 8026e50:	f105 0801 	add.w	r8, r5, #1
 8026e54:	f836 1013 	ldrh.w	r1, [r6, r3, lsl #1]
 8026e58:	9b03      	ldr	r3, [sp, #12]
 8026e5a:	9300      	str	r3, [sp, #0]
 8026e5c:	463b      	mov	r3, r7
 8026e5e:	f7ff ff53 	bl	8026d08 <_ZNK8touchgfx8LCD16bpp17DecompressorL8_L416blendPixelRGB565Ettii>
 8026e62:	f824 0b02 	strh.w	r0, [r4], #2
 8026e66:	f109 3bff 	add.w	fp, r9, #4294967295
 8026e6a:	f1bb 0f01 	cmp.w	fp, #1
 8026e6e:	46a2      	mov	sl, r4
 8026e70:	f104 0404 	add.w	r4, r4, #4
 8026e74:	dd24      	ble.n	8026ec0 <_ZN8touchgfx8LCD16bpp17DecompressorL8_L414blitCopyRGB565EPKhS3_RKNS_4RectES6_h+0x144>
 8026e76:	f898 3000 	ldrb.w	r3, [r8]
 8026e7a:	f834 2c04 	ldrh.w	r2, [r4, #-4]
 8026e7e:	9804      	ldr	r0, [sp, #16]
 8026e80:	091b      	lsrs	r3, r3, #4
 8026e82:	f1ab 0b02 	sub.w	fp, fp, #2
 8026e86:	f836 1013 	ldrh.w	r1, [r6, r3, lsl #1]
 8026e8a:	9b03      	ldr	r3, [sp, #12]
 8026e8c:	9300      	str	r3, [sp, #0]
 8026e8e:	463b      	mov	r3, r7
 8026e90:	f7ff ff3a 	bl	8026d08 <_ZNK8touchgfx8LCD16bpp17DecompressorL8_L416blendPixelRGB565Ettii>
 8026e94:	f824 0c04 	strh.w	r0, [r4, #-4]
 8026e98:	f818 3b01 	ldrb.w	r3, [r8], #1
 8026e9c:	f834 2c02 	ldrh.w	r2, [r4, #-2]
 8026ea0:	9804      	ldr	r0, [sp, #16]
 8026ea2:	f003 030f 	and.w	r3, r3, #15
 8026ea6:	f836 1013 	ldrh.w	r1, [r6, r3, lsl #1]
 8026eaa:	9b03      	ldr	r3, [sp, #12]
 8026eac:	9300      	str	r3, [sp, #0]
 8026eae:	463b      	mov	r3, r7
 8026eb0:	f7ff ff2a 	bl	8026d08 <_ZNK8touchgfx8LCD16bpp17DecompressorL8_L416blendPixelRGB565Ettii>
 8026eb4:	f824 0c02 	strh.w	r0, [r4, #-2]
 8026eb8:	e7d7      	b.n	8026e6a <_ZN8touchgfx8LCD16bpp17DecompressorL8_L414blitCopyRGB565EPKhS3_RKNS_4RectES6_h+0xee>
 8026eba:	46a8      	mov	r8, r5
 8026ebc:	46cb      	mov	fp, r9
 8026ebe:	e7d4      	b.n	8026e6a <_ZN8touchgfx8LCD16bpp17DecompressorL8_L414blitCopyRGB565EPKhS3_RKNS_4RectES6_h+0xee>
 8026ec0:	d10e      	bne.n	8026ee0 <_ZN8touchgfx8LCD16bpp17DecompressorL8_L414blitCopyRGB565EPKhS3_RKNS_4RectES6_h+0x164>
 8026ec2:	f898 3000 	ldrb.w	r3, [r8]
 8026ec6:	f8ba 2000 	ldrh.w	r2, [sl]
 8026eca:	9804      	ldr	r0, [sp, #16]
 8026ecc:	091b      	lsrs	r3, r3, #4
 8026ece:	f836 1013 	ldrh.w	r1, [r6, r3, lsl #1]
 8026ed2:	9b03      	ldr	r3, [sp, #12]
 8026ed4:	9300      	str	r3, [sp, #0]
 8026ed6:	463b      	mov	r3, r7
 8026ed8:	f7ff ff16 	bl	8026d08 <_ZNK8touchgfx8LCD16bpp17DecompressorL8_L416blendPixelRGB565Ettii>
 8026edc:	f82a 0b02 	strh.w	r0, [sl], #2
 8026ee0:	9b08      	ldr	r3, [sp, #32]
 8026ee2:	9a05      	ldr	r2, [sp, #20]
 8026ee4:	881c      	ldrh	r4, [r3, #0]
 8026ee6:	f9bd 302c 	ldrsh.w	r3, [sp, #44]	; 0x2c
 8026eea:	eba4 0409 	sub.w	r4, r4, r9
 8026eee:	4413      	add	r3, r2
 8026ef0:	eb0a 0444 	add.w	r4, sl, r4, lsl #1
 8026ef4:	9a09      	ldr	r2, [sp, #36]	; 0x24
 8026ef6:	fb93 f3f2 	sdiv	r3, r3, r2
 8026efa:	441d      	add	r5, r3
 8026efc:	e79c      	b.n	8026e38 <_ZN8touchgfx8LCD16bpp17DecompressorL8_L414blitCopyRGB565EPKhS3_RKNS_4RectES6_h+0xbc>
 8026efe:	eb04 0b4b 	add.w	fp, r4, fp, lsl #1
 8026f02:	45a3      	cmp	fp, r4
 8026f04:	d938      	bls.n	8026f78 <_ZN8touchgfx8LCD16bpp17DecompressorL8_L414blitCopyRGB565EPKhS3_RKNS_4RectES6_h+0x1fc>
 8026f06:	9b06      	ldr	r3, [sp, #24]
 8026f08:	b1f3      	cbz	r3, 8026f48 <_ZN8touchgfx8LCD16bpp17DecompressorL8_L414blitCopyRGB565EPKhS3_RKNS_4RectES6_h+0x1cc>
 8026f0a:	782b      	ldrb	r3, [r5, #0]
 8026f0c:	f003 030f 	and.w	r3, r3, #15
 8026f10:	1c6a      	adds	r2, r5, #1
 8026f12:	f836 3013 	ldrh.w	r3, [r6, r3, lsl #1]
 8026f16:	8023      	strh	r3, [r4, #0]
 8026f18:	f109 30ff 	add.w	r0, r9, #4294967295
 8026f1c:	3402      	adds	r4, #2
 8026f1e:	2801      	cmp	r0, #1
 8026f20:	4623      	mov	r3, r4
 8026f22:	f104 0404 	add.w	r4, r4, #4
 8026f26:	dd12      	ble.n	8026f4e <_ZN8touchgfx8LCD16bpp17DecompressorL8_L414blitCopyRGB565EPKhS3_RKNS_4RectES6_h+0x1d2>
 8026f28:	7813      	ldrb	r3, [r2, #0]
 8026f2a:	091b      	lsrs	r3, r3, #4
 8026f2c:	3802      	subs	r0, #2
 8026f2e:	f836 3013 	ldrh.w	r3, [r6, r3, lsl #1]
 8026f32:	f824 3c04 	strh.w	r3, [r4, #-4]
 8026f36:	f812 3b01 	ldrb.w	r3, [r2], #1
 8026f3a:	f003 030f 	and.w	r3, r3, #15
 8026f3e:	f836 3013 	ldrh.w	r3, [r6, r3, lsl #1]
 8026f42:	f824 3c02 	strh.w	r3, [r4, #-2]
 8026f46:	e7ea      	b.n	8026f1e <_ZN8touchgfx8LCD16bpp17DecompressorL8_L414blitCopyRGB565EPKhS3_RKNS_4RectES6_h+0x1a2>
 8026f48:	462a      	mov	r2, r5
 8026f4a:	4648      	mov	r0, r9
 8026f4c:	e7e7      	b.n	8026f1e <_ZN8touchgfx8LCD16bpp17DecompressorL8_L414blitCopyRGB565EPKhS3_RKNS_4RectES6_h+0x1a2>
 8026f4e:	d106      	bne.n	8026f5e <_ZN8touchgfx8LCD16bpp17DecompressorL8_L414blitCopyRGB565EPKhS3_RKNS_4RectES6_h+0x1e2>
 8026f50:	7812      	ldrb	r2, [r2, #0]
 8026f52:	0912      	lsrs	r2, r2, #4
 8026f54:	3302      	adds	r3, #2
 8026f56:	f836 2012 	ldrh.w	r2, [r6, r2, lsl #1]
 8026f5a:	f823 2c02 	strh.w	r2, [r3, #-2]
 8026f5e:	880c      	ldrh	r4, [r1, #0]
 8026f60:	9a05      	ldr	r2, [sp, #20]
 8026f62:	eba4 0409 	sub.w	r4, r4, r9
 8026f66:	eb03 0444 	add.w	r4, r3, r4, lsl #1
 8026f6a:	f9bd 302c 	ldrsh.w	r3, [sp, #44]	; 0x2c
 8026f6e:	4413      	add	r3, r2
 8026f70:	fb93 f3f8 	sdiv	r3, r3, r8
 8026f74:	441d      	add	r5, r3
 8026f76:	e7c4      	b.n	8026f02 <_ZN8touchgfx8LCD16bpp17DecompressorL8_L414blitCopyRGB565EPKhS3_RKNS_4RectES6_h+0x186>
 8026f78:	4b03      	ldr	r3, [pc, #12]	; (8026f88 <_ZN8touchgfx8LCD16bpp17DecompressorL8_L414blitCopyRGB565EPKhS3_RKNS_4RectES6_h+0x20c>)
 8026f7a:	6818      	ldr	r0, [r3, #0]
 8026f7c:	6803      	ldr	r3, [r0, #0]
 8026f7e:	6adb      	ldr	r3, [r3, #44]	; 0x2c
 8026f80:	4798      	blx	r3
 8026f82:	b00f      	add	sp, #60	; 0x3c
 8026f84:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
 8026f88:	2001381c 	.word	0x2001381c
 8026f8c:	20013816 	.word	0x20013816

08026f90 <_ZNK8touchgfx8LCD16bpp17DecompressorL8_L418blendPixelARGB8888Emtih>:
 8026f90:	b5f0      	push	{r4, r5, r6, r7, lr}
 8026f92:	f89d 5014 	ldrb.w	r5, [sp, #20]
 8026f96:	2dff      	cmp	r5, #255	; 0xff
 8026f98:	ea4f 2711 	mov.w	r7, r1, lsr #8
 8026f9c:	d10c      	bne.n	8026fb8 <_ZNK8touchgfx8LCD16bpp17DecompressorL8_L418blendPixelARGB8888Emtih+0x28>
 8026f9e:	2bff      	cmp	r3, #255	; 0xff
 8026fa0:	d10a      	bne.n	8026fb8 <_ZNK8touchgfx8LCD16bpp17DecompressorL8_L418blendPixelARGB8888Emtih+0x28>
 8026fa2:	4b25      	ldr	r3, [pc, #148]	; (8027038 <_ZNK8touchgfx8LCD16bpp17DecompressorL8_L418blendPixelARGB8888Emtih+0xa8>)
 8026fa4:	0948      	lsrs	r0, r1, #5
 8026fa6:	f400 60fc 	and.w	r0, r0, #2016	; 0x7e0
 8026faa:	403b      	ands	r3, r7
 8026fac:	4318      	orrs	r0, r3
 8026fae:	f3c1 01c4 	ubfx	r1, r1, #3, #5
 8026fb2:	4308      	orrs	r0, r1
 8026fb4:	b280      	uxth	r0, r0
 8026fb6:	bdf0      	pop	{r4, r5, r6, r7, pc}
 8026fb8:	fb15 f503 	smulbb	r5, r5, r3
 8026fbc:	b2ab      	uxth	r3, r5
 8026fbe:	1c5d      	adds	r5, r3, #1
 8026fc0:	eb05 2513 	add.w	r5, r5, r3, lsr #8
 8026fc4:	1214      	asrs	r4, r2, #8
 8026fc6:	f3c5 2507 	ubfx	r5, r5, #8, #8
 8026fca:	fa1f fc85 	uxth.w	ip, r5
 8026fce:	10d6      	asrs	r6, r2, #3
 8026fd0:	00d0      	lsls	r0, r2, #3
 8026fd2:	43ed      	mvns	r5, r5
 8026fd4:	f004 04f8 	and.w	r4, r4, #248	; 0xf8
 8026fd8:	f3c1 4207 	ubfx	r2, r1, #16, #8
 8026fdc:	b2eb      	uxtb	r3, r5
 8026fde:	b2c0      	uxtb	r0, r0
 8026fe0:	fb12 f20c 	smulbb	r2, r2, ip
 8026fe4:	ea44 1454 	orr.w	r4, r4, r4, lsr #5
 8026fe8:	fb04 2403 	mla	r4, r4, r3, r2
 8026fec:	ea40 1250 	orr.w	r2, r0, r0, lsr #5
 8026ff0:	b2c8      	uxtb	r0, r1
 8026ff2:	f006 06fc 	and.w	r6, r6, #252	; 0xfc
 8026ff6:	b2fd      	uxtb	r5, r7
 8026ff8:	fb10 f00c 	smulbb	r0, r0, ip
 8026ffc:	b2a4      	uxth	r4, r4
 8026ffe:	fb02 0003 	mla	r0, r2, r3, r0
 8027002:	ea46 1696 	orr.w	r6, r6, r6, lsr #6
 8027006:	fb15 f50c 	smulbb	r5, r5, ip
 802700a:	fb06 5503 	mla	r5, r6, r3, r5
 802700e:	b283      	uxth	r3, r0
 8027010:	1c60      	adds	r0, r4, #1
 8027012:	b2ad      	uxth	r5, r5
 8027014:	eb00 2414 	add.w	r4, r0, r4, lsr #8
 8027018:	1c58      	adds	r0, r3, #1
 802701a:	eb00 2013 	add.w	r0, r0, r3, lsr #8
 802701e:	1c6b      	adds	r3, r5, #1
 8027020:	eb03 2515 	add.w	r5, r3, r5, lsr #8
 8027024:	f404 4478 	and.w	r4, r4, #63488	; 0xf800
 8027028:	f3c0 20c4 	ubfx	r0, r0, #11, #5
 802702c:	096d      	lsrs	r5, r5, #5
 802702e:	4320      	orrs	r0, r4
 8027030:	f405 65fc 	and.w	r5, r5, #2016	; 0x7e0
 8027034:	4328      	orrs	r0, r5
 8027036:	e7be      	b.n	8026fb6 <_ZNK8touchgfx8LCD16bpp17DecompressorL8_L418blendPixelARGB8888Emtih+0x26>
 8027038:	00fff800 	.word	0x00fff800

0802703c <_ZN8touchgfx8LCD16bpp17DecompressorL8_L416blitCopyARGB8888EPKhS3_RKNS_4RectES6_h>:
 802703c:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 8027040:	461c      	mov	r4, r3
 8027042:	b08d      	sub	sp, #52	; 0x34
 8027044:	460d      	mov	r5, r1
 8027046:	9b16      	ldr	r3, [sp, #88]	; 0x58
 8027048:	6861      	ldr	r1, [r4, #4]
 802704a:	f89d 905c 	ldrb.w	r9, [sp, #92]	; 0x5c
 802704e:	4680      	mov	r8, r0
 8027050:	6820      	ldr	r0, [r4, #0]
 8027052:	4616      	mov	r6, r2
 8027054:	aa08      	add	r2, sp, #32
 8027056:	c203      	stmia	r2!, {r0, r1}
 8027058:	6818      	ldr	r0, [r3, #0]
 802705a:	6859      	ldr	r1, [r3, #4]
 802705c:	aa0a      	add	r2, sp, #40	; 0x28
 802705e:	c203      	stmia	r2!, {r0, r1}
 8027060:	a808      	add	r0, sp, #32
 8027062:	f7ef f901 	bl	8016268 <_ZN8touchgfx21DisplayTransformation29transformDisplayToFrameBufferERNS_4RectE>
 8027066:	4621      	mov	r1, r4
 8027068:	a80a      	add	r0, sp, #40	; 0x28
 802706a:	f7ef f941 	bl	80162f0 <_ZN8touchgfx21DisplayTransformation29transformDisplayToFrameBufferERNS_4RectERKS1_>
 802706e:	f9bd 2028 	ldrsh.w	r2, [sp, #40]	; 0x28
 8027072:	f9bd 702e 	ldrsh.w	r7, [sp, #46]	; 0x2e
 8027076:	f9bd b02c 	ldrsh.w	fp, [sp, #44]	; 0x2c
 802707a:	f002 0301 	and.w	r3, r2, #1
 802707e:	9303      	str	r3, [sp, #12]
 8027080:	f9bd 3024 	ldrsh.w	r3, [sp, #36]	; 0x24
 8027084:	f003 0101 	and.w	r1, r3, #1
 8027088:	9102      	str	r1, [sp, #8]
 802708a:	9802      	ldr	r0, [sp, #8]
 802708c:	f9bd 102a 	ldrsh.w	r1, [sp, #42]	; 0x2a
 8027090:	4403      	add	r3, r0
 8027092:	fb01 2303 	mla	r3, r1, r3, r2
 8027096:	f04f 0a02 	mov.w	sl, #2
 802709a:	fb93 f3fa 	sdiv	r3, r3, sl
 802709e:	441d      	add	r5, r3
 80270a0:	f8bd 3020 	ldrh.w	r3, [sp, #32]
 80270a4:	441a      	add	r2, r3
 80270a6:	f8ad 2028 	strh.w	r2, [sp, #40]	; 0x28
 80270aa:	f8bd 3022 	ldrh.w	r3, [sp, #34]	; 0x22
 80270ae:	4a3f      	ldr	r2, [pc, #252]	; (80271ac <_ZN8touchgfx8LCD16bpp17DecompressorL8_L416blitCopyARGB8888EPKhS3_RKNS_4RectES6_h+0x170>)
 80270b0:	9205      	str	r2, [sp, #20]
 80270b2:	4419      	add	r1, r3
 80270b4:	6810      	ldr	r0, [r2, #0]
 80270b6:	f8ad 102a 	strh.w	r1, [sp, #42]	; 0x2a
 80270ba:	6803      	ldr	r3, [r0, #0]
 80270bc:	6a9b      	ldr	r3, [r3, #40]	; 0x28
 80270be:	4798      	blx	r3
 80270c0:	4b3b      	ldr	r3, [pc, #236]	; (80271b0 <_ZN8touchgfx8LCD16bpp17DecompressorL8_L416blitCopyARGB8888EPKhS3_RKNS_4RectES6_h+0x174>)
 80270c2:	f9bd 402a 	ldrsh.w	r4, [sp, #42]	; 0x2a
 80270c6:	8819      	ldrh	r1, [r3, #0]
 80270c8:	f9bd c028 	ldrsh.w	ip, [sp, #40]	; 0x28
 80270cc:	fb01 c404 	mla	r4, r1, r4, ip
 80270d0:	eb00 0444 	add.w	r4, r0, r4, lsl #1
 80270d4:	434f      	muls	r7, r1
 80270d6:	e9cd 3a06 	strd	r3, sl, [sp, #24]
 80270da:	eb04 0247 	add.w	r2, r4, r7, lsl #1
 80270de:	3604      	adds	r6, #4
 80270e0:	9204      	str	r2, [sp, #16]
 80270e2:	9b04      	ldr	r3, [sp, #16]
 80270e4:	429c      	cmp	r4, r3
 80270e6:	d258      	bcs.n	802719a <_ZN8touchgfx8LCD16bpp17DecompressorL8_L416blitCopyARGB8888EPKhS3_RKNS_4RectES6_h+0x15e>
 80270e8:	9b03      	ldr	r3, [sp, #12]
 80270ea:	2b00      	cmp	r3, #0
 80270ec:	d034      	beq.n	8027158 <_ZN8touchgfx8LCD16bpp17DecompressorL8_L416blitCopyARGB8888EPKhS3_RKNS_4RectES6_h+0x11c>
 80270ee:	782b      	ldrb	r3, [r5, #0]
 80270f0:	f003 030f 	and.w	r3, r3, #15
 80270f4:	1c6f      	adds	r7, r5, #1
 80270f6:	f856 1023 	ldr.w	r1, [r6, r3, lsl #2]
 80270fa:	0e0b      	lsrs	r3, r1, #24
 80270fc:	d006      	beq.n	802710c <_ZN8touchgfx8LCD16bpp17DecompressorL8_L416blitCopyARGB8888EPKhS3_RKNS_4RectES6_h+0xd0>
 80270fe:	8822      	ldrh	r2, [r4, #0]
 8027100:	9300      	str	r3, [sp, #0]
 8027102:	4640      	mov	r0, r8
 8027104:	464b      	mov	r3, r9
 8027106:	f7ff ff43 	bl	8026f90 <_ZNK8touchgfx8LCD16bpp17DecompressorL8_L418blendPixelARGB8888Emtih>
 802710a:	8020      	strh	r0, [r4, #0]
 802710c:	3402      	adds	r4, #2
 802710e:	f10b 3aff 	add.w	sl, fp, #4294967295
 8027112:	f1ba 0f01 	cmp.w	sl, #1
 8027116:	dd22      	ble.n	802715e <_ZN8touchgfx8LCD16bpp17DecompressorL8_L416blitCopyARGB8888EPKhS3_RKNS_4RectES6_h+0x122>
 8027118:	783b      	ldrb	r3, [r7, #0]
 802711a:	091b      	lsrs	r3, r3, #4
 802711c:	f856 1023 	ldr.w	r1, [r6, r3, lsl #2]
 8027120:	0e0b      	lsrs	r3, r1, #24
 8027122:	d006      	beq.n	8027132 <_ZN8touchgfx8LCD16bpp17DecompressorL8_L416blitCopyARGB8888EPKhS3_RKNS_4RectES6_h+0xf6>
 8027124:	8822      	ldrh	r2, [r4, #0]
 8027126:	9300      	str	r3, [sp, #0]
 8027128:	4640      	mov	r0, r8
 802712a:	464b      	mov	r3, r9
 802712c:	f7ff ff30 	bl	8026f90 <_ZNK8touchgfx8LCD16bpp17DecompressorL8_L418blendPixelARGB8888Emtih>
 8027130:	8020      	strh	r0, [r4, #0]
 8027132:	f817 3b01 	ldrb.w	r3, [r7], #1
 8027136:	f003 030f 	and.w	r3, r3, #15
 802713a:	f856 1023 	ldr.w	r1, [r6, r3, lsl #2]
 802713e:	0e0b      	lsrs	r3, r1, #24
 8027140:	d006      	beq.n	8027150 <_ZN8touchgfx8LCD16bpp17DecompressorL8_L416blitCopyARGB8888EPKhS3_RKNS_4RectES6_h+0x114>
 8027142:	8862      	ldrh	r2, [r4, #2]
 8027144:	9300      	str	r3, [sp, #0]
 8027146:	4640      	mov	r0, r8
 8027148:	464b      	mov	r3, r9
 802714a:	f7ff ff21 	bl	8026f90 <_ZNK8touchgfx8LCD16bpp17DecompressorL8_L418blendPixelARGB8888Emtih>
 802714e:	8060      	strh	r0, [r4, #2]
 8027150:	3404      	adds	r4, #4
 8027152:	f1aa 0a02 	sub.w	sl, sl, #2
 8027156:	e7dc      	b.n	8027112 <_ZN8touchgfx8LCD16bpp17DecompressorL8_L416blitCopyARGB8888EPKhS3_RKNS_4RectES6_h+0xd6>
 8027158:	462f      	mov	r7, r5
 802715a:	46da      	mov	sl, fp
 802715c:	e7d9      	b.n	8027112 <_ZN8touchgfx8LCD16bpp17DecompressorL8_L416blitCopyARGB8888EPKhS3_RKNS_4RectES6_h+0xd6>
 802715e:	d10d      	bne.n	802717c <_ZN8touchgfx8LCD16bpp17DecompressorL8_L416blitCopyARGB8888EPKhS3_RKNS_4RectES6_h+0x140>
 8027160:	783b      	ldrb	r3, [r7, #0]
 8027162:	091b      	lsrs	r3, r3, #4
 8027164:	f856 1023 	ldr.w	r1, [r6, r3, lsl #2]
 8027168:	0e0b      	lsrs	r3, r1, #24
 802716a:	d006      	beq.n	802717a <_ZN8touchgfx8LCD16bpp17DecompressorL8_L416blitCopyARGB8888EPKhS3_RKNS_4RectES6_h+0x13e>
 802716c:	8822      	ldrh	r2, [r4, #0]
 802716e:	9300      	str	r3, [sp, #0]
 8027170:	4640      	mov	r0, r8
 8027172:	464b      	mov	r3, r9
 8027174:	f7ff ff0c 	bl	8026f90 <_ZNK8touchgfx8LCD16bpp17DecompressorL8_L418blendPixelARGB8888Emtih>
 8027178:	8020      	strh	r0, [r4, #0]
 802717a:	3402      	adds	r4, #2
 802717c:	9b06      	ldr	r3, [sp, #24]
 802717e:	9a02      	ldr	r2, [sp, #8]
 8027180:	881b      	ldrh	r3, [r3, #0]
 8027182:	eba3 030b 	sub.w	r3, r3, fp
 8027186:	eb04 0443 	add.w	r4, r4, r3, lsl #1
 802718a:	f9bd 3024 	ldrsh.w	r3, [sp, #36]	; 0x24
 802718e:	4413      	add	r3, r2
 8027190:	9a07      	ldr	r2, [sp, #28]
 8027192:	fb93 f3f2 	sdiv	r3, r3, r2
 8027196:	441d      	add	r5, r3
 8027198:	e7a3      	b.n	80270e2 <_ZN8touchgfx8LCD16bpp17DecompressorL8_L416blitCopyARGB8888EPKhS3_RKNS_4RectES6_h+0xa6>
 802719a:	9b05      	ldr	r3, [sp, #20]
 802719c:	6818      	ldr	r0, [r3, #0]
 802719e:	6803      	ldr	r3, [r0, #0]
 80271a0:	6adb      	ldr	r3, [r3, #44]	; 0x2c
 80271a2:	4798      	blx	r3
 80271a4:	b00d      	add	sp, #52	; 0x34
 80271a6:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
 80271aa:	bf00      	nop
 80271ac:	2001381c 	.word	0x2001381c
 80271b0:	20013816 	.word	0x20013816

080271b4 <_ZNK8touchgfx8LCD16bpp17DecompressorL8_L416blendPixelRGB888EPKhthh>:
 80271b4:	b570      	push	{r4, r5, r6, lr}
 80271b6:	1214      	asrs	r4, r2, #8
 80271b8:	788d      	ldrb	r5, [r1, #2]
 80271ba:	f89d 6010 	ldrb.w	r6, [sp, #16]
 80271be:	f004 04f8 	and.w	r4, r4, #248	; 0xf8
 80271c2:	ea44 1454 	orr.w	r4, r4, r4, lsr #5
 80271c6:	fb15 f503 	smulbb	r5, r5, r3
 80271ca:	fb04 5506 	mla	r5, r4, r6, r5
 80271ce:	10d0      	asrs	r0, r2, #3
 80271d0:	784c      	ldrb	r4, [r1, #1]
 80271d2:	7809      	ldrb	r1, [r1, #0]
 80271d4:	00d2      	lsls	r2, r2, #3
 80271d6:	f000 00fc 	and.w	r0, r0, #252	; 0xfc
 80271da:	b2d2      	uxtb	r2, r2
 80271dc:	ea40 1090 	orr.w	r0, r0, r0, lsr #6
 80271e0:	fb14 f403 	smulbb	r4, r4, r3
 80271e4:	ea42 1252 	orr.w	r2, r2, r2, lsr #5
 80271e8:	fb11 f303 	smulbb	r3, r1, r3
 80271ec:	fb00 4406 	mla	r4, r0, r6, r4
 80271f0:	fb02 3306 	mla	r3, r2, r6, r3
 80271f4:	b2ad      	uxth	r5, r5
 80271f6:	b29b      	uxth	r3, r3
 80271f8:	b2a4      	uxth	r4, r4
 80271fa:	1c68      	adds	r0, r5, #1
 80271fc:	eb00 2515 	add.w	r5, r0, r5, lsr #8
 8027200:	1c62      	adds	r2, r4, #1
 8027202:	1c58      	adds	r0, r3, #1
 8027204:	eb00 2013 	add.w	r0, r0, r3, lsr #8
 8027208:	eb02 2414 	add.w	r4, r2, r4, lsr #8
 802720c:	f405 4578 	and.w	r5, r5, #63488	; 0xf800
 8027210:	f3c0 20c4 	ubfx	r0, r0, #11, #5
 8027214:	0964      	lsrs	r4, r4, #5
 8027216:	4328      	orrs	r0, r5
 8027218:	f404 64fc 	and.w	r4, r4, #2016	; 0x7e0
 802721c:	4320      	orrs	r0, r4
 802721e:	bd70      	pop	{r4, r5, r6, pc}

08027220 <_ZN8touchgfx8LCD16bpp17DecompressorL8_L414blitCopyRGB888EPKhS3_RKNS_4RectES6_h>:
 8027220:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 8027224:	b08f      	sub	sp, #60	; 0x3c
 8027226:	461c      	mov	r4, r3
 8027228:	f89d 7064 	ldrb.w	r7, [sp, #100]	; 0x64
 802722c:	9b18      	ldr	r3, [sp, #96]	; 0x60
 802722e:	4682      	mov	sl, r0
 8027230:	460e      	mov	r6, r1
 8027232:	4615      	mov	r5, r2
 8027234:	2f00      	cmp	r7, #0
 8027236:	f000 8142 	beq.w	80274be <_ZN8touchgfx8LCD16bpp17DecompressorL8_L414blitCopyRGB888EPKhS3_RKNS_4RectES6_h+0x29e>
 802723a:	6820      	ldr	r0, [r4, #0]
 802723c:	6861      	ldr	r1, [r4, #4]
 802723e:	aa0a      	add	r2, sp, #40	; 0x28
 8027240:	c203      	stmia	r2!, {r0, r1}
 8027242:	6818      	ldr	r0, [r3, #0]
 8027244:	6859      	ldr	r1, [r3, #4]
 8027246:	aa0c      	add	r2, sp, #48	; 0x30
 8027248:	c203      	stmia	r2!, {r0, r1}
 802724a:	a80a      	add	r0, sp, #40	; 0x28
 802724c:	f7ef f80c 	bl	8016268 <_ZN8touchgfx21DisplayTransformation29transformDisplayToFrameBufferERNS_4RectE>
 8027250:	4621      	mov	r1, r4
 8027252:	a80c      	add	r0, sp, #48	; 0x30
 8027254:	f7ef f84c 	bl	80162f0 <_ZN8touchgfx21DisplayTransformation29transformDisplayToFrameBufferERNS_4RectERKS1_>
 8027258:	f9bd 2030 	ldrsh.w	r2, [sp, #48]	; 0x30
 802725c:	f9bd b036 	ldrsh.w	fp, [sp, #54]	; 0x36
 8027260:	f002 0301 	and.w	r3, r2, #1
 8027264:	9306      	str	r3, [sp, #24]
 8027266:	f9bd 302c 	ldrsh.w	r3, [sp, #44]	; 0x2c
 802726a:	f003 0101 	and.w	r1, r3, #1
 802726e:	9105      	str	r1, [sp, #20]
 8027270:	9805      	ldr	r0, [sp, #20]
 8027272:	f9bd 1032 	ldrsh.w	r1, [sp, #50]	; 0x32
 8027276:	4403      	add	r3, r0
 8027278:	fb01 2303 	mla	r3, r1, r3, r2
 802727c:	f04f 0802 	mov.w	r8, #2
 8027280:	fb93 f3f8 	sdiv	r3, r3, r8
 8027284:	441e      	add	r6, r3
 8027286:	f8bd 3028 	ldrh.w	r3, [sp, #40]	; 0x28
 802728a:	441a      	add	r2, r3
 802728c:	f8bd 302a 	ldrh.w	r3, [sp, #42]	; 0x2a
 8027290:	f8ad 2030 	strh.w	r2, [sp, #48]	; 0x30
 8027294:	4419      	add	r1, r3
 8027296:	f9bd 3034 	ldrsh.w	r3, [sp, #52]	; 0x34
 802729a:	9303      	str	r3, [sp, #12]
 802729c:	4b89      	ldr	r3, [pc, #548]	; (80274c4 <_ZN8touchgfx8LCD16bpp17DecompressorL8_L414blitCopyRGB888EPKhS3_RKNS_4RectES6_h+0x2a4>)
 802729e:	f8ad 1032 	strh.w	r1, [sp, #50]	; 0x32
 80272a2:	6818      	ldr	r0, [r3, #0]
 80272a4:	6803      	ldr	r3, [r0, #0]
 80272a6:	6a9b      	ldr	r3, [r3, #40]	; 0x28
 80272a8:	4798      	blx	r3
 80272aa:	4a87      	ldr	r2, [pc, #540]	; (80274c8 <_ZN8touchgfx8LCD16bpp17DecompressorL8_L414blitCopyRGB888EPKhS3_RKNS_4RectES6_h+0x2a8>)
 80272ac:	f9bd 4032 	ldrsh.w	r4, [sp, #50]	; 0x32
 80272b0:	8813      	ldrh	r3, [r2, #0]
 80272b2:	f9bd 9030 	ldrsh.w	r9, [sp, #48]	; 0x30
 80272b6:	2fff      	cmp	r7, #255	; 0xff
 80272b8:	fb03 9404 	mla	r4, r3, r4, r9
 80272bc:	eb00 0444 	add.w	r4, r0, r4, lsl #1
 80272c0:	f105 0504 	add.w	r5, r5, #4
 80272c4:	4694      	mov	ip, r2
 80272c6:	fb03 f30b 	mul.w	r3, r3, fp
 80272ca:	d071      	beq.n	80273b0 <_ZN8touchgfx8LCD16bpp17DecompressorL8_L414blitCopyRGB888EPKhS3_RKNS_4RectES6_h+0x190>
 80272cc:	eb04 0343 	add.w	r3, r4, r3, lsl #1
 80272d0:	43f9      	mvns	r1, r7
 80272d2:	e9cd 3207 	strd	r3, r2, [sp, #28]
 80272d6:	b2c9      	uxtb	r1, r1
 80272d8:	9104      	str	r1, [sp, #16]
 80272da:	f8cd 8024 	str.w	r8, [sp, #36]	; 0x24
 80272de:	9b07      	ldr	r3, [sp, #28]
 80272e0:	42a3      	cmp	r3, r4
 80272e2:	f240 80e7 	bls.w	80274b4 <_ZN8touchgfx8LCD16bpp17DecompressorL8_L414blitCopyRGB888EPKhS3_RKNS_4RectES6_h+0x294>
 80272e6:	9b06      	ldr	r3, [sp, #24]
 80272e8:	2b00      	cmp	r3, #0
 80272ea:	d03d      	beq.n	8027368 <_ZN8touchgfx8LCD16bpp17DecompressorL8_L414blitCopyRGB888EPKhS3_RKNS_4RectES6_h+0x148>
 80272ec:	7831      	ldrb	r1, [r6, #0]
 80272ee:	9b04      	ldr	r3, [sp, #16]
 80272f0:	8822      	ldrh	r2, [r4, #0]
 80272f2:	9300      	str	r3, [sp, #0]
 80272f4:	f001 010f 	and.w	r1, r1, #15
 80272f8:	eb01 0141 	add.w	r1, r1, r1, lsl #1
 80272fc:	463b      	mov	r3, r7
 80272fe:	4429      	add	r1, r5
 8027300:	4650      	mov	r0, sl
 8027302:	f7ff ff57 	bl	80271b4 <_ZNK8touchgfx8LCD16bpp17DecompressorL8_L416blendPixelRGB888EPKhthh>
 8027306:	9b03      	ldr	r3, [sp, #12]
 8027308:	f824 0b02 	strh.w	r0, [r4], #2
 802730c:	f106 0801 	add.w	r8, r6, #1
 8027310:	f103 3bff 	add.w	fp, r3, #4294967295
 8027314:	f1bb 0f01 	cmp.w	fp, #1
 8027318:	46a1      	mov	r9, r4
 802731a:	f104 0404 	add.w	r4, r4, #4
 802731e:	dd27      	ble.n	8027370 <_ZN8touchgfx8LCD16bpp17DecompressorL8_L414blitCopyRGB888EPKhS3_RKNS_4RectES6_h+0x150>
 8027320:	f898 1000 	ldrb.w	r1, [r8]
 8027324:	9b04      	ldr	r3, [sp, #16]
 8027326:	f834 2c04 	ldrh.w	r2, [r4, #-4]
 802732a:	9300      	str	r3, [sp, #0]
 802732c:	0909      	lsrs	r1, r1, #4
 802732e:	eb01 0141 	add.w	r1, r1, r1, lsl #1
 8027332:	463b      	mov	r3, r7
 8027334:	4429      	add	r1, r5
 8027336:	4650      	mov	r0, sl
 8027338:	f7ff ff3c 	bl	80271b4 <_ZNK8touchgfx8LCD16bpp17DecompressorL8_L416blendPixelRGB888EPKhthh>
 802733c:	f824 0c04 	strh.w	r0, [r4, #-4]
 8027340:	f818 1b01 	ldrb.w	r1, [r8], #1
 8027344:	9b04      	ldr	r3, [sp, #16]
 8027346:	f834 2c02 	ldrh.w	r2, [r4, #-2]
 802734a:	9300      	str	r3, [sp, #0]
 802734c:	f001 010f 	and.w	r1, r1, #15
 8027350:	eb01 0141 	add.w	r1, r1, r1, lsl #1
 8027354:	463b      	mov	r3, r7
 8027356:	4429      	add	r1, r5
 8027358:	4650      	mov	r0, sl
 802735a:	f7ff ff2b 	bl	80271b4 <_ZNK8touchgfx8LCD16bpp17DecompressorL8_L416blendPixelRGB888EPKhthh>
 802735e:	f1ab 0b02 	sub.w	fp, fp, #2
 8027362:	f824 0c02 	strh.w	r0, [r4, #-2]
 8027366:	e7d5      	b.n	8027314 <_ZN8touchgfx8LCD16bpp17DecompressorL8_L414blitCopyRGB888EPKhS3_RKNS_4RectES6_h+0xf4>
 8027368:	46b0      	mov	r8, r6
 802736a:	f8dd b00c 	ldr.w	fp, [sp, #12]
 802736e:	e7d1      	b.n	8027314 <_ZN8touchgfx8LCD16bpp17DecompressorL8_L414blitCopyRGB888EPKhS3_RKNS_4RectES6_h+0xf4>
 8027370:	d10f      	bne.n	8027392 <_ZN8touchgfx8LCD16bpp17DecompressorL8_L414blitCopyRGB888EPKhS3_RKNS_4RectES6_h+0x172>
 8027372:	f898 1000 	ldrb.w	r1, [r8]
 8027376:	9b04      	ldr	r3, [sp, #16]
 8027378:	f8b9 2000 	ldrh.w	r2, [r9]
 802737c:	9300      	str	r3, [sp, #0]
 802737e:	0909      	lsrs	r1, r1, #4
 8027380:	eb01 0141 	add.w	r1, r1, r1, lsl #1
 8027384:	463b      	mov	r3, r7
 8027386:	4429      	add	r1, r5
 8027388:	4650      	mov	r0, sl
 802738a:	f7ff ff13 	bl	80271b4 <_ZNK8touchgfx8LCD16bpp17DecompressorL8_L416blendPixelRGB888EPKhthh>
 802738e:	f829 0b02 	strh.w	r0, [r9], #2
 8027392:	9b08      	ldr	r3, [sp, #32]
 8027394:	9a05      	ldr	r2, [sp, #20]
 8027396:	881c      	ldrh	r4, [r3, #0]
 8027398:	9b03      	ldr	r3, [sp, #12]
 802739a:	1ae4      	subs	r4, r4, r3
 802739c:	f9bd 302c 	ldrsh.w	r3, [sp, #44]	; 0x2c
 80273a0:	eb09 0444 	add.w	r4, r9, r4, lsl #1
 80273a4:	4413      	add	r3, r2
 80273a6:	9a09      	ldr	r2, [sp, #36]	; 0x24
 80273a8:	fb93 f3f2 	sdiv	r3, r3, r2
 80273ac:	441e      	add	r6, r3
 80273ae:	e796      	b.n	80272de <_ZN8touchgfx8LCD16bpp17DecompressorL8_L414blitCopyRGB888EPKhS3_RKNS_4RectES6_h+0xbe>
 80273b0:	4f46      	ldr	r7, [pc, #280]	; (80274cc <_ZN8touchgfx8LCD16bpp17DecompressorL8_L414blitCopyRGB888EPKhS3_RKNS_4RectES6_h+0x2ac>)
 80273b2:	eb04 0343 	add.w	r3, r4, r3, lsl #1
 80273b6:	42a3      	cmp	r3, r4
 80273b8:	d97c      	bls.n	80274b4 <_ZN8touchgfx8LCD16bpp17DecompressorL8_L414blitCopyRGB888EPKhS3_RKNS_4RectES6_h+0x294>
 80273ba:	9a06      	ldr	r2, [sp, #24]
 80273bc:	2a00      	cmp	r2, #0
 80273be:	d054      	beq.n	802746a <_ZN8touchgfx8LCD16bpp17DecompressorL8_L414blitCopyRGB888EPKhS3_RKNS_4RectES6_h+0x24a>
 80273c0:	7830      	ldrb	r0, [r6, #0]
 80273c2:	f000 000f 	and.w	r0, r0, #15
 80273c6:	eb00 0040 	add.w	r0, r0, r0, lsl #1
 80273ca:	eb05 0e00 	add.w	lr, r5, r0
 80273ce:	5c28      	ldrb	r0, [r5, r0]
 80273d0:	f89e 2002 	ldrb.w	r2, [lr, #2]
 80273d4:	f89e e001 	ldrb.w	lr, [lr, #1]
 80273d8:	ea4f 0ece 	mov.w	lr, lr, lsl #3
 80273dc:	f40e 6efc 	and.w	lr, lr, #2016	; 0x7e0
 80273e0:	ea07 2202 	and.w	r2, r7, r2, lsl #8
 80273e4:	ea42 020e 	orr.w	r2, r2, lr
 80273e8:	ea42 02d0 	orr.w	r2, r2, r0, lsr #3
 80273ec:	f824 2b02 	strh.w	r2, [r4], #2
 80273f0:	9a03      	ldr	r2, [sp, #12]
 80273f2:	1c71      	adds	r1, r6, #1
 80273f4:	f102 3eff 	add.w	lr, r2, #4294967295
 80273f8:	f1be 0f01 	cmp.w	lr, #1
 80273fc:	4620      	mov	r0, r4
 80273fe:	f104 0404 	add.w	r4, r4, #4
 8027402:	dd36      	ble.n	8027472 <_ZN8touchgfx8LCD16bpp17DecompressorL8_L414blitCopyRGB888EPKhS3_RKNS_4RectES6_h+0x252>
 8027404:	7808      	ldrb	r0, [r1, #0]
 8027406:	0900      	lsrs	r0, r0, #4
 8027408:	eb00 0040 	add.w	r0, r0, r0, lsl #1
 802740c:	eb05 0a00 	add.w	sl, r5, r0
 8027410:	f1ae 0e02 	sub.w	lr, lr, #2
 8027414:	f89a 2001 	ldrb.w	r2, [sl, #1]
 8027418:	f89a 9002 	ldrb.w	r9, [sl, #2]
 802741c:	00d2      	lsls	r2, r2, #3
 802741e:	ea07 2909 	and.w	r9, r7, r9, lsl #8
 8027422:	f402 62fc 	and.w	r2, r2, #2016	; 0x7e0
 8027426:	ea49 0202 	orr.w	r2, r9, r2
 802742a:	f815 9000 	ldrb.w	r9, [r5, r0]
 802742e:	ea42 02d9 	orr.w	r2, r2, r9, lsr #3
 8027432:	f824 2c04 	strh.w	r2, [r4, #-4]
 8027436:	f811 0b01 	ldrb.w	r0, [r1], #1
 802743a:	f000 000f 	and.w	r0, r0, #15
 802743e:	eb00 0040 	add.w	r0, r0, r0, lsl #1
 8027442:	eb05 0a00 	add.w	sl, r5, r0
 8027446:	f89a 2001 	ldrb.w	r2, [sl, #1]
 802744a:	f89a 9002 	ldrb.w	r9, [sl, #2]
 802744e:	00d2      	lsls	r2, r2, #3
 8027450:	ea07 2909 	and.w	r9, r7, r9, lsl #8
 8027454:	f402 62fc 	and.w	r2, r2, #2016	; 0x7e0
 8027458:	ea49 0202 	orr.w	r2, r9, r2
 802745c:	f815 9000 	ldrb.w	r9, [r5, r0]
 8027460:	ea42 02d9 	orr.w	r2, r2, r9, lsr #3
 8027464:	f824 2c02 	strh.w	r2, [r4, #-2]
 8027468:	e7c6      	b.n	80273f8 <_ZN8touchgfx8LCD16bpp17DecompressorL8_L414blitCopyRGB888EPKhS3_RKNS_4RectES6_h+0x1d8>
 802746a:	4631      	mov	r1, r6
 802746c:	f8dd e00c 	ldr.w	lr, [sp, #12]
 8027470:	e7c2      	b.n	80273f8 <_ZN8touchgfx8LCD16bpp17DecompressorL8_L414blitCopyRGB888EPKhS3_RKNS_4RectES6_h+0x1d8>
 8027472:	d111      	bne.n	8027498 <_ZN8touchgfx8LCD16bpp17DecompressorL8_L414blitCopyRGB888EPKhS3_RKNS_4RectES6_h+0x278>
 8027474:	7809      	ldrb	r1, [r1, #0]
 8027476:	0909      	lsrs	r1, r1, #4
 8027478:	eb01 0141 	add.w	r1, r1, r1, lsl #1
 802747c:	186c      	adds	r4, r5, r1
 802747e:	5c69      	ldrb	r1, [r5, r1]
 8027480:	78a2      	ldrb	r2, [r4, #2]
 8027482:	7864      	ldrb	r4, [r4, #1]
 8027484:	00e4      	lsls	r4, r4, #3
 8027486:	ea07 2202 	and.w	r2, r7, r2, lsl #8
 802748a:	f404 64fc 	and.w	r4, r4, #2016	; 0x7e0
 802748e:	4322      	orrs	r2, r4
 8027490:	ea42 02d1 	orr.w	r2, r2, r1, lsr #3
 8027494:	f820 2b02 	strh.w	r2, [r0], #2
 8027498:	9a03      	ldr	r2, [sp, #12]
 802749a:	f8bc 4000 	ldrh.w	r4, [ip]
 802749e:	9905      	ldr	r1, [sp, #20]
 80274a0:	1aa4      	subs	r4, r4, r2
 80274a2:	f9bd 202c 	ldrsh.w	r2, [sp, #44]	; 0x2c
 80274a6:	eb00 0444 	add.w	r4, r0, r4, lsl #1
 80274aa:	440a      	add	r2, r1
 80274ac:	fb92 f2f8 	sdiv	r2, r2, r8
 80274b0:	4416      	add	r6, r2
 80274b2:	e780      	b.n	80273b6 <_ZN8touchgfx8LCD16bpp17DecompressorL8_L414blitCopyRGB888EPKhS3_RKNS_4RectES6_h+0x196>
 80274b4:	4b03      	ldr	r3, [pc, #12]	; (80274c4 <_ZN8touchgfx8LCD16bpp17DecompressorL8_L414blitCopyRGB888EPKhS3_RKNS_4RectES6_h+0x2a4>)
 80274b6:	6818      	ldr	r0, [r3, #0]
 80274b8:	6803      	ldr	r3, [r0, #0]
 80274ba:	6adb      	ldr	r3, [r3, #44]	; 0x2c
 80274bc:	4798      	blx	r3
 80274be:	b00f      	add	sp, #60	; 0x3c
 80274c0:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
 80274c4:	2001381c 	.word	0x2001381c
 80274c8:	20013816 	.word	0x20013816
 80274cc:	fffff800 	.word	0xfffff800

080274d0 <CRC_Lock>:
 80274d0:	b530      	push	{r4, r5, lr}
 80274d2:	4a20      	ldr	r2, [pc, #128]	; (8027554 <CRC_Lock+0x84>)
 80274d4:	6813      	ldr	r3, [r2, #0]
 80274d6:	f023 0301 	bic.w	r3, r3, #1
 80274da:	6013      	str	r3, [r2, #0]
 80274dc:	4b1e      	ldr	r3, [pc, #120]	; (8027558 <CRC_Lock+0x88>)
 80274de:	681a      	ldr	r2, [r3, #0]
 80274e0:	f64f 74f0 	movw	r4, #65520	; 0xfff0
 80274e4:	4022      	ands	r2, r4
 80274e6:	f24c 2540 	movw	r5, #49728	; 0xc240
 80274ea:	42aa      	cmp	r2, r5
 80274ec:	d005      	beq.n	80274fa <CRC_Lock+0x2a>
 80274ee:	681b      	ldr	r3, [r3, #0]
 80274f0:	f24c 2270 	movw	r2, #49776	; 0xc270
 80274f4:	4023      	ands	r3, r4
 80274f6:	4293      	cmp	r3, r2
 80274f8:	d124      	bne.n	8027544 <CRC_Lock+0x74>
 80274fa:	4b18      	ldr	r3, [pc, #96]	; (802755c <CRC_Lock+0x8c>)
 80274fc:	681b      	ldr	r3, [r3, #0]
 80274fe:	bb0b      	cbnz	r3, 8027544 <CRC_Lock+0x74>
 8027500:	4b17      	ldr	r3, [pc, #92]	; (8027560 <CRC_Lock+0x90>)
 8027502:	681a      	ldr	r2, [r3, #0]
 8027504:	f3c2 020b 	ubfx	r2, r2, #0, #12
 8027508:	f5b2 6f8a 	cmp.w	r2, #1104	; 0x450
 802750c:	d00d      	beq.n	802752a <CRC_Lock+0x5a>
 802750e:	681a      	ldr	r2, [r3, #0]
 8027510:	f240 4483 	movw	r4, #1155	; 0x483
 8027514:	f3c2 020b 	ubfx	r2, r2, #0, #12
 8027518:	42a2      	cmp	r2, r4
 802751a:	d006      	beq.n	802752a <CRC_Lock+0x5a>
 802751c:	681b      	ldr	r3, [r3, #0]
 802751e:	f240 4285 	movw	r2, #1157	; 0x485
 8027522:	f3c3 030b 	ubfx	r3, r3, #0, #12
 8027526:	4293      	cmp	r3, r2
 8027528:	d10c      	bne.n	8027544 <CRC_Lock+0x74>
 802752a:	4b0e      	ldr	r3, [pc, #56]	; (8027564 <CRC_Lock+0x94>)
 802752c:	2201      	movs	r2, #1
 802752e:	601a      	str	r2, [r3, #0]
 8027530:	681a      	ldr	r2, [r3, #0]
 8027532:	2a00      	cmp	r2, #0
 8027534:	d1fc      	bne.n	8027530 <CRC_Lock+0x60>
 8027536:	4b0c      	ldr	r3, [pc, #48]	; (8027568 <CRC_Lock+0x98>)
 8027538:	6018      	str	r0, [r3, #0]
 802753a:	6818      	ldr	r0, [r3, #0]
 802753c:	1a43      	subs	r3, r0, r1
 802753e:	4258      	negs	r0, r3
 8027540:	4158      	adcs	r0, r3
 8027542:	bd30      	pop	{r4, r5, pc}
 8027544:	4b09      	ldr	r3, [pc, #36]	; (802756c <CRC_Lock+0x9c>)
 8027546:	2201      	movs	r2, #1
 8027548:	601a      	str	r2, [r3, #0]
 802754a:	681a      	ldr	r2, [r3, #0]
 802754c:	2a00      	cmp	r2, #0
 802754e:	d1fc      	bne.n	802754a <CRC_Lock+0x7a>
 8027550:	4b07      	ldr	r3, [pc, #28]	; (8027570 <CRC_Lock+0xa0>)
 8027552:	e7f1      	b.n	8027538 <CRC_Lock+0x68>
 8027554:	e0002000 	.word	0xe0002000
 8027558:	e000ed00 	.word	0xe000ed00
 802755c:	e0042000 	.word	0xe0042000
 8027560:	5c001000 	.word	0x5c001000
 8027564:	58024c08 	.word	0x58024c08
 8027568:	58024c00 	.word	0x58024c00
 802756c:	40023008 	.word	0x40023008
 8027570:	40023000 	.word	0x40023000

08027574 <_ZN8touchgfx8Gestures21registerEventListenerERNS_15UIEventListenerE>:
 8027574:	6101      	str	r1, [r0, #16]
 8027576:	4770      	bx	lr

08027578 <_ZN8touchgfx8Gestures4tickEv>:
 8027578:	7b83      	ldrb	r3, [r0, #14]
 802757a:	b14b      	cbz	r3, 8027590 <_ZN8touchgfx8Gestures4tickEv+0x18>
 802757c:	8903      	ldrh	r3, [r0, #8]
 802757e:	3301      	adds	r3, #1
 8027580:	b29b      	uxth	r3, r3
 8027582:	2b07      	cmp	r3, #7
 8027584:	8103      	strh	r3, [r0, #8]
 8027586:	bf81      	itttt	hi
 8027588:	2300      	movhi	r3, #0
 802758a:	8143      	strhhi	r3, [r0, #10]
 802758c:	8183      	strhhi	r3, [r0, #12]
 802758e:	7383      	strbhi	r3, [r0, #14]
 8027590:	4770      	bx	lr
	...

08027594 <_ZN8touchgfx8Gestures17registerDragEventEtttt>:
 8027594:	e92d 41ff 	stmdb	sp!, {r0, r1, r2, r3, r4, r5, r6, r7, r8, lr}
 8027598:	4698      	mov	r8, r3
 802759a:	8883      	ldrh	r3, [r0, #4]
 802759c:	f8ad 3006 	strh.w	r3, [sp, #6]
 80275a0:	eba8 0303 	sub.w	r3, r8, r3
 80275a4:	b21b      	sxth	r3, r3
 80275a6:	4604      	mov	r4, r0
 80275a8:	2b00      	cmp	r3, #0
 80275aa:	4617      	mov	r7, r2
 80275ac:	4a18      	ldr	r2, [pc, #96]	; (8027610 <_ZN8touchgfx8Gestures17registerDragEventEtttt+0x7c>)
 80275ae:	9200      	str	r2, [sp, #0]
 80275b0:	bfb8      	it	lt
 80275b2:	425b      	neglt	r3, r3
 80275b4:	8aa2      	ldrh	r2, [r4, #20]
 80275b6:	f8bd 5028 	ldrh.w	r5, [sp, #40]	; 0x28
 80275ba:	f8ad 800a 	strh.w	r8, [sp, #10]
 80275be:	b21b      	sxth	r3, r3
 80275c0:	460e      	mov	r6, r1
 80275c2:	4293      	cmp	r3, r2
 80275c4:	88c1      	ldrh	r1, [r0, #6]
 80275c6:	f8ad 1008 	strh.w	r1, [sp, #8]
 80275ca:	f04f 0000 	mov.w	r0, #0
 80275ce:	f88d 0004 	strb.w	r0, [sp, #4]
 80275d2:	f8ad 500c 	strh.w	r5, [sp, #12]
 80275d6:	dc07      	bgt.n	80275e8 <_ZN8touchgfx8Gestures17registerDragEventEtttt+0x54>
 80275d8:	1a69      	subs	r1, r5, r1
 80275da:	b209      	sxth	r1, r1
 80275dc:	2900      	cmp	r1, #0
 80275de:	bfb8      	it	lt
 80275e0:	4249      	neglt	r1, r1
 80275e2:	b209      	sxth	r1, r1
 80275e4:	428a      	cmp	r2, r1
 80275e6:	da10      	bge.n	802760a <_ZN8touchgfx8Gestures17registerDragEventEtttt+0x76>
 80275e8:	6920      	ldr	r0, [r4, #16]
 80275ea:	6803      	ldr	r3, [r0, #0]
 80275ec:	4669      	mov	r1, sp
 80275ee:	685b      	ldr	r3, [r3, #4]
 80275f0:	4798      	blx	r3
 80275f2:	eba8 0606 	sub.w	r6, r8, r6
 80275f6:	2300      	movs	r3, #0
 80275f8:	1bef      	subs	r7, r5, r7
 80275fa:	2001      	movs	r0, #1
 80275fc:	8123      	strh	r3, [r4, #8]
 80275fe:	8166      	strh	r6, [r4, #10]
 8027600:	81a7      	strh	r7, [r4, #12]
 8027602:	f8a4 8004 	strh.w	r8, [r4, #4]
 8027606:	80e5      	strh	r5, [r4, #6]
 8027608:	73a0      	strb	r0, [r4, #14]
 802760a:	b004      	add	sp, #16
 802760c:	e8bd 81f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, pc}
 8027610:	0802f8b0 	.word	0x0802f8b0

08027614 <_ZN8touchgfx8Gestures18registerClickEventENS_10ClickEvent14ClickEventTypeEtt>:
 8027614:	b5f0      	push	{r4, r5, r6, r7, lr}
 8027616:	461e      	mov	r6, r3
 8027618:	1e4b      	subs	r3, r1, #1
 802761a:	2b01      	cmp	r3, #1
 802761c:	b085      	sub	sp, #20
 802761e:	4604      	mov	r4, r0
 8027620:	460d      	mov	r5, r1
 8027622:	4617      	mov	r7, r2
 8027624:	d84b      	bhi.n	80276be <_ZN8touchgfx8Gestures18registerClickEventENS_10ClickEvent14ClickEventTypeEtt+0xaa>
 8027626:	f9b0 200a 	ldrsh.w	r2, [r0, #10]
 802762a:	1cd3      	adds	r3, r2, #3
 802762c:	b29b      	uxth	r3, r3
 802762e:	2b06      	cmp	r3, #6
 8027630:	d916      	bls.n	8027660 <_ZN8touchgfx8Gestures18registerClickEventENS_10ClickEvent14ClickEventTypeEtt+0x4c>
 8027632:	f8df c0a0 	ldr.w	ip, [pc, #160]	; 80276d4 <_ZN8touchgfx8Gestures18registerClickEventENS_10ClickEvent14ClickEventTypeEtt+0xc0>
 8027636:	f8cd c004 	str.w	ip, [sp, #4]
 802763a:	f9b4 1004 	ldrsh.w	r1, [r4, #4]
 802763e:	f9b4 3006 	ldrsh.w	r3, [r4, #6]
 8027642:	6900      	ldr	r0, [r0, #16]
 8027644:	f8ad 100c 	strh.w	r1, [sp, #12]
 8027648:	f04f 0c00 	mov.w	ip, #0
 802764c:	f88d c008 	strb.w	ip, [sp, #8]
 8027650:	f8ad 200a 	strh.w	r2, [sp, #10]
 8027654:	f8ad 300e 	strh.w	r3, [sp, #14]
 8027658:	6803      	ldr	r3, [r0, #0]
 802765a:	a901      	add	r1, sp, #4
 802765c:	689b      	ldr	r3, [r3, #8]
 802765e:	4798      	blx	r3
 8027660:	f9b4 200c 	ldrsh.w	r2, [r4, #12]
 8027664:	1cd3      	adds	r3, r2, #3
 8027666:	b29b      	uxth	r3, r3
 8027668:	2b06      	cmp	r3, #6
 802766a:	d916      	bls.n	802769a <_ZN8touchgfx8Gestures18registerClickEventENS_10ClickEvent14ClickEventTypeEtt+0x86>
 802766c:	f8df c064 	ldr.w	ip, [pc, #100]	; 80276d4 <_ZN8touchgfx8Gestures18registerClickEventENS_10ClickEvent14ClickEventTypeEtt+0xc0>
 8027670:	f8cd c004 	str.w	ip, [sp, #4]
 8027674:	f9b4 1004 	ldrsh.w	r1, [r4, #4]
 8027678:	f9b4 3006 	ldrsh.w	r3, [r4, #6]
 802767c:	6920      	ldr	r0, [r4, #16]
 802767e:	f8ad 100c 	strh.w	r1, [sp, #12]
 8027682:	f04f 0c01 	mov.w	ip, #1
 8027686:	f88d c008 	strb.w	ip, [sp, #8]
 802768a:	f8ad 200a 	strh.w	r2, [sp, #10]
 802768e:	f8ad 300e 	strh.w	r3, [sp, #14]
 8027692:	6803      	ldr	r3, [r0, #0]
 8027694:	a901      	add	r1, sp, #4
 8027696:	689b      	ldr	r3, [r3, #8]
 8027698:	4798      	blx	r3
 802769a:	4b0d      	ldr	r3, [pc, #52]	; (80276d0 <_ZN8touchgfx8Gestures18registerClickEventENS_10ClickEvent14ClickEventTypeEtt+0xbc>)
 802769c:	9301      	str	r3, [sp, #4]
 802769e:	6920      	ldr	r0, [r4, #16]
 80276a0:	f88d 5008 	strb.w	r5, [sp, #8]
 80276a4:	2300      	movs	r3, #0
 80276a6:	f8ad 700a 	strh.w	r7, [sp, #10]
 80276aa:	f8ad 600c 	strh.w	r6, [sp, #12]
 80276ae:	f8ad 300e 	strh.w	r3, [sp, #14]
 80276b2:	6803      	ldr	r3, [r0, #0]
 80276b4:	a901      	add	r1, sp, #4
 80276b6:	681b      	ldr	r3, [r3, #0]
 80276b8:	4798      	blx	r3
 80276ba:	b005      	add	sp, #20
 80276bc:	bdf0      	pop	{r4, r5, r6, r7, pc}
 80276be:	2900      	cmp	r1, #0
 80276c0:	d1eb      	bne.n	802769a <_ZN8touchgfx8Gestures18registerClickEventENS_10ClickEvent14ClickEventTypeEtt+0x86>
 80276c2:	80a2      	strh	r2, [r4, #4]
 80276c4:	80c6      	strh	r6, [r0, #6]
 80276c6:	60a1      	str	r1, [r4, #8]
 80276c8:	81a1      	strh	r1, [r4, #12]
 80276ca:	73a1      	strb	r1, [r4, #14]
 80276cc:	e7e5      	b.n	802769a <_ZN8touchgfx8Gestures18registerClickEventENS_10ClickEvent14ClickEventTypeEtt+0x86>
 80276ce:	bf00      	nop
 80276d0:	0802f89c 	.word	0x0802f89c
 80276d4:	0802f8c4 	.word	0x0802f8c4

080276d8 <_ZNK8touchgfx10Rasterizer14calculateAlphaEi.isra.5>:
 80276d8:	10c9      	asrs	r1, r1, #3
 80276da:	2900      	cmp	r1, #0
 80276dc:	bfb8      	it	lt
 80276de:	4249      	neglt	r1, r1
 80276e0:	2801      	cmp	r0, #1
 80276e2:	d108      	bne.n	80276f6 <_ZNK8touchgfx10Rasterizer14calculateAlphaEi.isra.5+0x1e>
 80276e4:	f3c1 0008 	ubfx	r0, r1, #0, #9
 80276e8:	f5b0 7f80 	cmp.w	r0, #256	; 0x100
 80276ec:	4601      	mov	r1, r0
 80276ee:	dd02      	ble.n	80276f6 <_ZNK8touchgfx10Rasterizer14calculateAlphaEi.isra.5+0x1e>
 80276f0:	f5c0 7000 	rsb	r0, r0, #512	; 0x200
 80276f4:	4770      	bx	lr
 80276f6:	29ff      	cmp	r1, #255	; 0xff
 80276f8:	bfa8      	it	ge
 80276fa:	21ff      	movge	r1, #255	; 0xff
 80276fc:	4608      	mov	r0, r1
 80276fe:	4770      	bx	lr

08027700 <_ZN8touchgfx10Rasterizer6lineToEii>:
 8027700:	b410      	push	{r4}
 8027702:	e9d0 3401 	ldrd	r3, r4, [r0, #4]
 8027706:	429c      	cmp	r4, r3
 8027708:	d803      	bhi.n	8027712 <_ZN8touchgfx10Rasterizer6lineToEii+0x12>
 802770a:	f85d 4b04 	ldr.w	r4, [sp], #4
 802770e:	f7ed b8b1 	b.w	8014874 <_ZN8touchgfx7Outline6lineToEii>
 8027712:	f85d 4b04 	ldr.w	r4, [sp], #4
 8027716:	4770      	bx	lr

08027718 <_ZN8touchgfx10Rasterizer6renderEPKNS_15AbstractPainterEPhshh>:
 8027718:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 802771c:	b08b      	sub	sp, #44	; 0x2c
 802771e:	e9cd 2306 	strd	r2, r3, [sp, #24]
 8027722:	f89d 3050 	ldrb.w	r3, [sp, #80]	; 0x50
 8027726:	9308      	str	r3, [sp, #32]
 8027728:	4606      	mov	r6, r0
 802772a:	f89d 3054 	ldrb.w	r3, [sp, #84]	; 0x54
 802772e:	9309      	str	r3, [sp, #36]	; 0x24
 8027730:	468a      	mov	sl, r1
 8027732:	f7ed fa0c 	bl	8014b4e <_ZN8touchgfx7Outline24closeOutlineAndSortCellsEv>
 8027736:	68b5      	ldr	r5, [r6, #8]
 8027738:	4604      	mov	r4, r0
 802773a:	2d00      	cmp	r5, #0
 802773c:	d044      	beq.n	80277c8 <_ZN8touchgfx10Rasterizer6renderEPKNS_15AbstractPainterEPhshh+0xb0>
 802773e:	6873      	ldr	r3, [r6, #4]
 8027740:	42ab      	cmp	r3, r5
 8027742:	d33d      	bcc.n	80277c0 <_ZN8touchgfx10Rasterizer6renderEPKNS_15AbstractPainterEPhshh+0xa8>
 8027744:	f9b0 3002 	ldrsh.w	r3, [r0, #2]
 8027748:	f9b6 2034 	ldrsh.w	r2, [r6, #52]	; 0x34
 802774c:	eb02 0b03 	add.w	fp, r2, r3
 8027750:	e9dd 1206 	ldrd	r1, r2, [sp, #24]
 8027754:	fb02 1203 	mla	r2, r2, r3, r1
 8027758:	9205      	str	r2, [sp, #20]
 802775a:	1e6a      	subs	r2, r5, #1
 802775c:	9204      	str	r2, [sp, #16]
 802775e:	f04f 0800 	mov.w	r8, #0
 8027762:	f9b4 9002 	ldrsh.w	r9, [r4, #2]
 8027766:	f9b4 7000 	ldrsh.w	r7, [r4]
 802776a:	454b      	cmp	r3, r9
 802776c:	463a      	mov	r2, r7
 802776e:	d008      	beq.n	8027782 <_ZN8touchgfx10Rasterizer6renderEPKNS_15AbstractPainterEPhshh+0x6a>
 8027770:	f9b6 3034 	ldrsh.w	r3, [r6, #52]	; 0x34
 8027774:	eb03 0b09 	add.w	fp, r3, r9
 8027778:	e9dd 1306 	ldrd	r1, r3, [sp, #24]
 802777c:	fb03 1309 	mla	r3, r3, r9, r1
 8027780:	9305      	str	r3, [sp, #20]
 8027782:	f9b4 3004 	ldrsh.w	r3, [r4, #4]
 8027786:	f9b4 1006 	ldrsh.w	r1, [r4, #6]
 802778a:	4498      	add	r8, r3
 802778c:	9b04      	ldr	r3, [sp, #16]
 802778e:	3b01      	subs	r3, #1
 8027790:	9304      	str	r3, [sp, #16]
 8027792:	9b04      	ldr	r3, [sp, #16]
 8027794:	3301      	adds	r3, #1
 8027796:	d015      	beq.n	80277c4 <_ZN8touchgfx10Rasterizer6renderEPKNS_15AbstractPainterEPhshh+0xac>
 8027798:	f934 3f08 	ldrsh.w	r3, [r4, #8]!
 802779c:	42bb      	cmp	r3, r7
 802779e:	d117      	bne.n	80277d0 <_ZN8touchgfx10Rasterizer6renderEPKNS_15AbstractPainterEPhshh+0xb8>
 80277a0:	f9b4 0002 	ldrsh.w	r0, [r4, #2]
 80277a4:	9b04      	ldr	r3, [sp, #16]
 80277a6:	4548      	cmp	r0, r9
 80277a8:	f103 33ff 	add.w	r3, r3, #4294967295
 80277ac:	d17f      	bne.n	80278ae <_ZN8touchgfx10Rasterizer6renderEPKNS_15AbstractPainterEPhshh+0x196>
 80277ae:	f9b4 0006 	ldrsh.w	r0, [r4, #6]
 80277b2:	4401      	add	r1, r0
 80277b4:	f9b4 0004 	ldrsh.w	r0, [r4, #4]
 80277b8:	4480      	add	r8, r0
 80277ba:	e7e9      	b.n	8027790 <_ZN8touchgfx10Rasterizer6renderEPKNS_15AbstractPainterEPhshh+0x78>
 80277bc:	461f      	mov	r7, r3
 80277be:	e044      	b.n	802784a <_ZN8touchgfx10Rasterizer6renderEPKNS_15AbstractPainterEPhshh+0x132>
 80277c0:	2000      	movs	r0, #0
 80277c2:	e002      	b.n	80277ca <_ZN8touchgfx10Rasterizer6renderEPKNS_15AbstractPainterEPhshh+0xb2>
 80277c4:	2900      	cmp	r1, #0
 80277c6:	d16f      	bne.n	80278a8 <_ZN8touchgfx10Rasterizer6renderEPKNS_15AbstractPainterEPhshh+0x190>
 80277c8:	2001      	movs	r0, #1
 80277ca:	b00b      	add	sp, #44	; 0x2c
 80277cc:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
 80277d0:	2900      	cmp	r1, #0
 80277d2:	d030      	beq.n	8027836 <_ZN8touchgfx10Rasterizer6renderEPKNS_15AbstractPainterEPhshh+0x11e>
 80277d4:	2f00      	cmp	r7, #0
 80277d6:	db29      	blt.n	802782c <_ZN8touchgfx10Rasterizer6renderEPKNS_15AbstractPainterEPhshh+0x114>
 80277d8:	f9b6 3036 	ldrsh.w	r3, [r6, #54]	; 0x36
 80277dc:	42bb      	cmp	r3, r7
 80277de:	dd25      	ble.n	802782c <_ZN8touchgfx10Rasterizer6renderEPKNS_15AbstractPainterEPhshh+0x114>
 80277e0:	ebc1 1188 	rsb	r1, r1, r8, lsl #6
 80277e4:	f896 0030 	ldrb.w	r0, [r6, #48]	; 0x30
 80277e8:	f7ff ff76 	bl	80276d8 <_ZNK8touchgfx10Rasterizer14calculateAlphaEi.isra.5>
 80277ec:	9b09      	ldr	r3, [sp, #36]	; 0x24
 80277ee:	fb10 f003 	smulbb	r0, r0, r3
 80277f2:	b280      	uxth	r0, r0
 80277f4:	1c41      	adds	r1, r0, #1
 80277f6:	eb01 2110 	add.w	r1, r1, r0, lsr #8
 80277fa:	1209      	asrs	r1, r1, #8
 80277fc:	f011 0fff 	tst.w	r1, #255	; 0xff
 8027800:	d014      	beq.n	802782c <_ZN8touchgfx10Rasterizer6renderEPKNS_15AbstractPainterEPhshh+0x114>
 8027802:	9808      	ldr	r0, [sp, #32]
 8027804:	8e73      	ldrh	r3, [r6, #50]	; 0x32
 8027806:	b2c9      	uxtb	r1, r1
 8027808:	b2ba      	uxth	r2, r7
 802780a:	9102      	str	r1, [sp, #8]
 802780c:	2101      	movs	r1, #1
 802780e:	4413      	add	r3, r2
 8027810:	9101      	str	r1, [sp, #4]
 8027812:	4402      	add	r2, r0
 8027814:	fa0f f18b 	sxth.w	r1, fp
 8027818:	f8da 0000 	ldr.w	r0, [sl]
 802781c:	9100      	str	r1, [sp, #0]
 802781e:	6941      	ldr	r1, [r0, #20]
 8027820:	b21b      	sxth	r3, r3
 8027822:	460d      	mov	r5, r1
 8027824:	b212      	sxth	r2, r2
 8027826:	9905      	ldr	r1, [sp, #20]
 8027828:	4650      	mov	r0, sl
 802782a:	47a8      	blx	r5
 802782c:	9b04      	ldr	r3, [sp, #16]
 802782e:	3301      	adds	r3, #1
 8027830:	f107 0201 	add.w	r2, r7, #1
 8027834:	d0c8      	beq.n	80277c8 <_ZN8touchgfx10Rasterizer6renderEPKNS_15AbstractPainterEPhshh+0xb0>
 8027836:	f9b4 7000 	ldrsh.w	r7, [r4]
 802783a:	1abb      	subs	r3, r7, r2
 802783c:	2b00      	cmp	r3, #0
 802783e:	dd31      	ble.n	80278a4 <_ZN8touchgfx10Rasterizer6renderEPKNS_15AbstractPainterEPhshh+0x18c>
 8027840:	2a00      	cmp	r2, #0
 8027842:	dabb      	bge.n	80277bc <_ZN8touchgfx10Rasterizer6renderEPKNS_15AbstractPainterEPhshh+0xa4>
 8027844:	2f00      	cmp	r7, #0
 8027846:	dd2d      	ble.n	80278a4 <_ZN8touchgfx10Rasterizer6renderEPKNS_15AbstractPainterEPhshh+0x18c>
 8027848:	2200      	movs	r2, #0
 802784a:	f9b6 3036 	ldrsh.w	r3, [r6, #54]	; 0x36
 802784e:	19d1      	adds	r1, r2, r7
 8027850:	4299      	cmp	r1, r3
 8027852:	db02      	blt.n	802785a <_ZN8touchgfx10Rasterizer6renderEPKNS_15AbstractPainterEPhshh+0x142>
 8027854:	1a9f      	subs	r7, r3, r2
 8027856:	2f00      	cmp	r7, #0
 8027858:	dd24      	ble.n	80278a4 <_ZN8touchgfx10Rasterizer6renderEPKNS_15AbstractPainterEPhshh+0x18c>
 802785a:	ea4f 1188 	mov.w	r1, r8, lsl #6
 802785e:	f896 0030 	ldrb.w	r0, [r6, #48]	; 0x30
 8027862:	f7ff ff39 	bl	80276d8 <_ZNK8touchgfx10Rasterizer14calculateAlphaEi.isra.5>
 8027866:	9b09      	ldr	r3, [sp, #36]	; 0x24
 8027868:	fb10 f003 	smulbb	r0, r0, r3
 802786c:	b280      	uxth	r0, r0
 802786e:	1c41      	adds	r1, r0, #1
 8027870:	eb01 2110 	add.w	r1, r1, r0, lsr #8
 8027874:	1209      	asrs	r1, r1, #8
 8027876:	f011 0fff 	tst.w	r1, #255	; 0xff
 802787a:	d013      	beq.n	80278a4 <_ZN8touchgfx10Rasterizer6renderEPKNS_15AbstractPainterEPhshh+0x18c>
 802787c:	9808      	ldr	r0, [sp, #32]
 802787e:	8e73      	ldrh	r3, [r6, #50]	; 0x32
 8027880:	b292      	uxth	r2, r2
 8027882:	b2c9      	uxtb	r1, r1
 8027884:	4413      	add	r3, r2
 8027886:	9102      	str	r1, [sp, #8]
 8027888:	4402      	add	r2, r0
 802788a:	b23f      	sxth	r7, r7
 802788c:	f8da 0000 	ldr.w	r0, [sl]
 8027890:	9701      	str	r7, [sp, #4]
 8027892:	fa0f f18b 	sxth.w	r1, fp
 8027896:	9100      	str	r1, [sp, #0]
 8027898:	6947      	ldr	r7, [r0, #20]
 802789a:	9905      	ldr	r1, [sp, #20]
 802789c:	b21b      	sxth	r3, r3
 802789e:	b212      	sxth	r2, r2
 80278a0:	4650      	mov	r0, sl
 80278a2:	47b8      	blx	r7
 80278a4:	464b      	mov	r3, r9
 80278a6:	e75c      	b.n	8027762 <_ZN8touchgfx10Rasterizer6renderEPKNS_15AbstractPainterEPhshh+0x4a>
 80278a8:	2f00      	cmp	r7, #0
 80278aa:	da95      	bge.n	80277d8 <_ZN8touchgfx10Rasterizer6renderEPKNS_15AbstractPainterEPhshh+0xc0>
 80278ac:	e78c      	b.n	80277c8 <_ZN8touchgfx10Rasterizer6renderEPKNS_15AbstractPainterEPhshh+0xb0>
 80278ae:	2900      	cmp	r1, #0
 80278b0:	d0f8      	beq.n	80278a4 <_ZN8touchgfx10Rasterizer6renderEPKNS_15AbstractPainterEPhshh+0x18c>
 80278b2:	e78f      	b.n	80277d4 <_ZN8touchgfx10Rasterizer6renderEPKNS_15AbstractPainterEPhshh+0xbc>

080278b4 <_ZN8touchgfx6CanvasC1EPKNS_12CanvasWidgetERKNS_4RectE>:
 80278b4:	4b4b      	ldr	r3, [pc, #300]	; (80279e4 <_ZN8touchgfx6CanvasC1EPKNS_12CanvasWidgetERKNS_4RectE+0x130>)
 80278b6:	e92d 47f3 	stmdb	sp!, {r0, r1, r4, r5, r6, r7, r8, r9, sl, lr}
 80278ba:	2500      	movs	r5, #0
 80278bc:	f100 0620 	add.w	r6, r0, #32
 80278c0:	4604      	mov	r4, r0
 80278c2:	e9c0 3100 	strd	r3, r1, [r0]
 80278c6:	e9c0 5502 	strd	r5, r5, [r0, #8]
 80278ca:	e9c0 5504 	strd	r5, r5, [r0, #16]
 80278ce:	e9c0 5506 	strd	r5, r5, [r0, #24]
 80278d2:	f100 0718 	add.w	r7, r0, #24
 80278d6:	4630      	mov	r0, r6
 80278d8:	4690      	mov	r8, r2
 80278da:	f7ec fb03 	bl	8013ee4 <_ZN8touchgfx7OutlineC1Ev>
 80278de:	e9c4 5517 	strd	r5, r5, [r4, #92]	; 0x5c
 80278e2:	e9c4 551a 	strd	r5, r5, [r4, #104]	; 0x68
 80278e6:	f884 5050 	strb.w	r5, [r4, #80]	; 0x50
 80278ea:	f8a4 5052 	strh.w	r5, [r4, #82]	; 0x52
 80278ee:	f8a4 5054 	strh.w	r5, [r4, #84]	; 0x54
 80278f2:	f8a4 5056 	strh.w	r5, [r4, #86]	; 0x56
 80278f6:	f884 5058 	strb.w	r5, [r4, #88]	; 0x58
 80278fa:	f884 5059 	strb.w	r5, [r4, #89]	; 0x59
 80278fe:	f8a4 5064 	strh.w	r5, [r4, #100]	; 0x64
 8027902:	f9b8 2000 	ldrsh.w	r2, [r8]
 8027906:	f8b8 0004 	ldrh.w	r0, [r8, #4]
 802790a:	f8d4 c004 	ldr.w	ip, [r4, #4]
 802790e:	9500      	str	r5, [sp, #0]
 8027910:	4410      	add	r0, r2
 8027912:	b280      	uxth	r0, r0
 8027914:	fa0f fa80 	sxth.w	sl, r0
 8027918:	45aa      	cmp	sl, r5
 802791a:	f9bc 9008 	ldrsh.w	r9, [ip, #8]
 802791e:	f9bc e00a 	ldrsh.w	lr, [ip, #10]
 8027922:	dd5c      	ble.n	80279de <_ZN8touchgfx6CanvasC1EPKNS_12CanvasWidgetERKNS_4RectE+0x12a>
 8027924:	4591      	cmp	r9, r2
 8027926:	dd5a      	ble.n	80279de <_ZN8touchgfx6CanvasC1EPKNS_12CanvasWidgetERKNS_4RectE+0x12a>
 8027928:	f9b8 1002 	ldrsh.w	r1, [r8, #2]
 802792c:	f8b8 3006 	ldrh.w	r3, [r8, #6]
 8027930:	440b      	add	r3, r1
 8027932:	b29b      	uxth	r3, r3
 8027934:	b21d      	sxth	r5, r3
 8027936:	2d00      	cmp	r5, #0
 8027938:	dd51      	ble.n	80279de <_ZN8touchgfx6CanvasC1EPKNS_12CanvasWidgetERKNS_4RectE+0x12a>
 802793a:	458e      	cmp	lr, r1
 802793c:	dd4f      	ble.n	80279de <_ZN8touchgfx6CanvasC1EPKNS_12CanvasWidgetERKNS_4RectE+0x12a>
 802793e:	45d1      	cmp	r9, sl
 8027940:	bfb8      	it	lt
 8027942:	fa1f f089 	uxthlt.w	r0, r9
 8027946:	45ae      	cmp	lr, r5
 8027948:	ea22 72e2 	bic.w	r2, r2, r2, asr #31
 802794c:	ea21 71e1 	bic.w	r1, r1, r1, asr #31
 8027950:	bfb8      	it	lt
 8027952:	fa1f f38e 	uxthlt.w	r3, lr
 8027956:	1a80      	subs	r0, r0, r2
 8027958:	1a5b      	subs	r3, r3, r1
 802795a:	f8ad 0004 	strh.w	r0, [sp, #4]
 802795e:	f8ad 3006 	strh.w	r3, [sp, #6]
 8027962:	f8ad 2000 	strh.w	r2, [sp]
 8027966:	f8ad 1002 	strh.w	r1, [sp, #2]
 802796a:	466d      	mov	r5, sp
 802796c:	e895 0003 	ldmia.w	r5, {r0, r1}
 8027970:	e887 0003 	stmia.w	r7, {r0, r1}
 8027974:	f8dc 3000 	ldr.w	r3, [ip]
 8027978:	4660      	mov	r0, ip
 802797a:	6adb      	ldr	r3, [r3, #44]	; 0x2c
 802797c:	4639      	mov	r1, r7
 802797e:	4798      	blx	r3
 8027980:	6861      	ldr	r1, [r4, #4]
 8027982:	4628      	mov	r0, r5
 8027984:	3104      	adds	r1, #4
 8027986:	f7ee fcb3 	bl	80162f0 <_ZN8touchgfx21DisplayTransformation29transformDisplayToFrameBufferERNS_4RectERKS1_>
 802798a:	4638      	mov	r0, r7
 802798c:	f7ee fc6c 	bl	8016268 <_ZN8touchgfx21DisplayTransformation29transformDisplayToFrameBufferERNS_4RectE>
 8027990:	f9bd 3002 	ldrsh.w	r3, [sp, #2]
 8027994:	f8bd 2000 	ldrh.w	r2, [sp]
 8027998:	f8a4 2052 	strh.w	r2, [r4, #82]	; 0x52
 802799c:	f8a4 3054 	strh.w	r3, [r4, #84]	; 0x54
 80279a0:	4630      	mov	r0, r6
 80279a2:	f7ec fa83 	bl	8013eac <_ZN8touchgfx7Outline5resetEv>
 80279a6:	f9bd 3000 	ldrsh.w	r3, [sp]
 80279aa:	f9b4 201e 	ldrsh.w	r2, [r4, #30]
 80279ae:	015b      	lsls	r3, r3, #5
 80279b0:	60a3      	str	r3, [r4, #8]
 80279b2:	f9bd 3002 	ldrsh.w	r3, [sp, #2]
 80279b6:	015b      	lsls	r3, r3, #5
 80279b8:	60e3      	str	r3, [r4, #12]
 80279ba:	f9bd 3004 	ldrsh.w	r3, [sp, #4]
 80279be:	015b      	lsls	r3, r3, #5
 80279c0:	6123      	str	r3, [r4, #16]
 80279c2:	f9bd 3006 	ldrsh.w	r3, [sp, #6]
 80279c6:	015b      	lsls	r3, r3, #5
 80279c8:	6163      	str	r3, [r4, #20]
 80279ca:	f9b4 301c 	ldrsh.w	r3, [r4, #28]
 80279ce:	f8a4 3056 	strh.w	r3, [r4, #86]	; 0x56
 80279d2:	4620      	mov	r0, r4
 80279d4:	e9c4 3212 	strd	r3, r2, [r4, #72]	; 0x48
 80279d8:	b002      	add	sp, #8
 80279da:	e8bd 87f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, pc}
 80279de:	2300      	movs	r3, #0
 80279e0:	9301      	str	r3, [sp, #4]
 80279e2:	e7c2      	b.n	802796a <_ZN8touchgfx6CanvasC1EPKNS_12CanvasWidgetERKNS_4RectE+0xb6>
 80279e4:	0802fbe8 	.word	0x0802fbe8

080279e8 <_ZN8touchgfx6Canvas5closeEv>:
 80279e8:	b538      	push	{r3, r4, r5, lr}
 80279ea:	f890 3058 	ldrb.w	r3, [r0, #88]	; 0x58
 80279ee:	4604      	mov	r4, r0
 80279f0:	b193      	cbz	r3, 8027a18 <_ZN8touchgfx6Canvas5closeEv+0x30>
 80279f2:	f890 3064 	ldrb.w	r3, [r0, #100]	; 0x64
 80279f6:	f890 2065 	ldrb.w	r2, [r0, #101]	; 0x65
 80279fa:	4213      	tst	r3, r2
 80279fc:	d10c      	bne.n	8027a18 <_ZN8touchgfx6Canvas5closeEv+0x30>
 80279fe:	f100 0520 	add.w	r5, r0, #32
 8027a02:	b123      	cbz	r3, 8027a0e <_ZN8touchgfx6Canvas5closeEv+0x26>
 8027a04:	e9d0 1217 	ldrd	r1, r2, [r0, #92]	; 0x5c
 8027a08:	4628      	mov	r0, r5
 8027a0a:	f7ff fe79 	bl	8027700 <_ZN8touchgfx10Rasterizer6lineToEii>
 8027a0e:	e9d4 121a 	ldrd	r1, r2, [r4, #104]	; 0x68
 8027a12:	4628      	mov	r0, r5
 8027a14:	f7ff fe74 	bl	8027700 <_ZN8touchgfx10Rasterizer6lineToEii>
 8027a18:	2300      	movs	r3, #0
 8027a1a:	f884 3058 	strb.w	r3, [r4, #88]	; 0x58
 8027a1e:	e9d4 0309 	ldrd	r0, r3, [r4, #36]	; 0x24
 8027a22:	4298      	cmp	r0, r3
 8027a24:	bf34      	ite	cc
 8027a26:	2000      	movcc	r0, #0
 8027a28:	2001      	movcs	r0, #1
 8027a2a:	bd38      	pop	{r3, r4, r5, pc}

08027a2c <_ZN8touchgfx6Canvas6renderEh>:
 8027a2c:	e92d 41f3 	stmdb	sp!, {r0, r1, r4, r5, r6, r7, r8, lr}
 8027a30:	4604      	mov	r4, r0
 8027a32:	6840      	ldr	r0, [r0, #4]
 8027a34:	6803      	ldr	r3, [r0, #0]
 8027a36:	6e5b      	ldr	r3, [r3, #100]	; 0x64
 8027a38:	460d      	mov	r5, r1
 8027a3a:	4798      	blx	r3
 8027a3c:	fb10 f105 	smulbb	r1, r0, r5
 8027a40:	b289      	uxth	r1, r1
 8027a42:	1c4d      	adds	r5, r1, #1
 8027a44:	eb05 2511 	add.w	r5, r5, r1, lsr #8
 8027a48:	122d      	asrs	r5, r5, #8
 8027a4a:	f000 809d 	beq.w	8027b88 <_ZN8touchgfx6Canvas6renderEh+0x15c>
 8027a4e:	f894 3059 	ldrb.w	r3, [r4, #89]	; 0x59
 8027a52:	2b00      	cmp	r3, #0
 8027a54:	f000 8098 	beq.w	8027b88 <_ZN8touchgfx6Canvas6renderEh+0x15c>
 8027a58:	4620      	mov	r0, r4
 8027a5a:	f7ff ffc5 	bl	80279e8 <_ZN8touchgfx6Canvas5closeEv>
 8027a5e:	4607      	mov	r7, r0
 8027a60:	2800      	cmp	r0, #0
 8027a62:	d048      	beq.n	8027af6 <_ZN8touchgfx6Canvas6renderEh+0xca>
 8027a64:	6863      	ldr	r3, [r4, #4]
 8027a66:	4e49      	ldr	r6, [pc, #292]	; (8027b8c <_ZN8touchgfx6Canvas6renderEh+0x160>)
 8027a68:	6a98      	ldr	r0, [r3, #40]	; 0x28
 8027a6a:	6837      	ldr	r7, [r6, #0]
 8027a6c:	6803      	ldr	r3, [r0, #0]
 8027a6e:	689b      	ldr	r3, [r3, #8]
 8027a70:	4798      	blx	r3
 8027a72:	4601      	mov	r1, r0
 8027a74:	4638      	mov	r0, r7
 8027a76:	f7ea f9bb 	bl	8011df0 <_ZN8touchgfx3HAL33lockFrameBufferForRenderingMethodENS0_15RenderingMethodE>
 8027a7a:	4607      	mov	r7, r0
 8027a7c:	f7dc fde6 	bl	800464c <_ZN8touchgfx3HAL3lcdEv>
 8027a80:	6803      	ldr	r3, [r0, #0]
 8027a82:	6b1b      	ldr	r3, [r3, #48]	; 0x30
 8027a84:	4798      	blx	r3
 8027a86:	4680      	mov	r8, r0
 8027a88:	f7dc fde0 	bl	800464c <_ZN8touchgfx3HAL3lcdEv>
 8027a8c:	6803      	ldr	r3, [r0, #0]
 8027a8e:	6adb      	ldr	r3, [r3, #44]	; 0x2c
 8027a90:	4798      	blx	r3
 8027a92:	280b      	cmp	r0, #11
 8027a94:	d85d      	bhi.n	8027b52 <_ZN8touchgfx6Canvas6renderEh+0x126>
 8027a96:	e8df f000 	tbb	[pc, r0]
 8027a9a:	5e53      	.short	0x5e53
 8027a9c:	325c066e 	.word	0x325c066e
 8027aa0:	67676742 	.word	0x67676742
 8027aa4:	6767      	.short	0x6767
 8027aa6:	f9b4 301a 	ldrsh.w	r3, [r4, #26]
 8027aaa:	f9b4 1018 	ldrsh.w	r1, [r4, #24]
 8027aae:	2208      	movs	r2, #8
 8027ab0:	fb91 f2f2 	sdiv	r2, r1, r2
 8027ab4:	fb08 2303 	mla	r3, r8, r3, r2
 8027ab8:	441f      	add	r7, r3
 8027aba:	424b      	negs	r3, r1
 8027abc:	f003 0307 	and.w	r3, r3, #7
 8027ac0:	f001 0107 	and.w	r1, r1, #7
 8027ac4:	bf58      	it	pl
 8027ac6:	4259      	negpl	r1, r3
 8027ac8:	b2c9      	uxtb	r1, r1
 8027aca:	b2ed      	uxtb	r5, r5
 8027acc:	e9cd 1500 	strd	r1, r5, [sp]
 8027ad0:	6860      	ldr	r0, [r4, #4]
 8027ad2:	463a      	mov	r2, r7
 8027ad4:	6a81      	ldr	r1, [r0, #40]	; 0x28
 8027ad6:	fa0f f388 	sxth.w	r3, r8
 8027ada:	f104 0020 	add.w	r0, r4, #32
 8027ade:	f7ff fe1b 	bl	8027718 <_ZN8touchgfx10Rasterizer6renderEPKNS_15AbstractPainterEPhshh>
 8027ae2:	6863      	ldr	r3, [r4, #4]
 8027ae4:	4607      	mov	r7, r0
 8027ae6:	6a98      	ldr	r0, [r3, #40]	; 0x28
 8027ae8:	6803      	ldr	r3, [r0, #0]
 8027aea:	691b      	ldr	r3, [r3, #16]
 8027aec:	4798      	blx	r3
 8027aee:	6830      	ldr	r0, [r6, #0]
 8027af0:	6803      	ldr	r3, [r0, #0]
 8027af2:	6adb      	ldr	r3, [r3, #44]	; 0x2c
 8027af4:	4798      	blx	r3
 8027af6:	4638      	mov	r0, r7
 8027af8:	b002      	add	sp, #8
 8027afa:	e8bd 81f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, pc}
 8027afe:	f9b4 301a 	ldrsh.w	r3, [r4, #26]
 8027b02:	f9b4 1018 	ldrsh.w	r1, [r4, #24]
 8027b06:	2204      	movs	r2, #4
 8027b08:	fb91 f2f2 	sdiv	r2, r1, r2
 8027b0c:	fb08 2303 	mla	r3, r8, r3, r2
 8027b10:	441f      	add	r7, r3
 8027b12:	424b      	negs	r3, r1
 8027b14:	f003 0303 	and.w	r3, r3, #3
 8027b18:	f001 0103 	and.w	r1, r1, #3
 8027b1c:	e7d2      	b.n	8027ac4 <_ZN8touchgfx6Canvas6renderEh+0x98>
 8027b1e:	f9b4 1018 	ldrsh.w	r1, [r4, #24]
 8027b22:	f9b4 301a 	ldrsh.w	r3, [r4, #26]
 8027b26:	2900      	cmp	r1, #0
 8027b28:	f04f 0202 	mov.w	r2, #2
 8027b2c:	fb91 f2f2 	sdiv	r2, r1, r2
 8027b30:	f001 0101 	and.w	r1, r1, #1
 8027b34:	fb08 2303 	mla	r3, r8, r3, r2
 8027b38:	441f      	add	r7, r3
 8027b3a:	bfb8      	it	lt
 8027b3c:	4249      	neglt	r1, r1
 8027b3e:	e7c3      	b.n	8027ac8 <_ZN8touchgfx6Canvas6renderEh+0x9c>
 8027b40:	f9b4 301a 	ldrsh.w	r3, [r4, #26]
 8027b44:	f9b4 2018 	ldrsh.w	r2, [r4, #24]
 8027b48:	fb08 f303 	mul.w	r3, r8, r3
 8027b4c:	eb03 0342 	add.w	r3, r3, r2, lsl #1
 8027b50:	441f      	add	r7, r3
 8027b52:	2100      	movs	r1, #0
 8027b54:	e7b9      	b.n	8027aca <_ZN8touchgfx6Canvas6renderEh+0x9e>
 8027b56:	f9b4 301a 	ldrsh.w	r3, [r4, #26]
 8027b5a:	fb08 f203 	mul.w	r2, r8, r3
 8027b5e:	8b23      	ldrh	r3, [r4, #24]
 8027b60:	2103      	movs	r1, #3
 8027b62:	fb13 2301 	smlabb	r3, r3, r1, r2
 8027b66:	e7f3      	b.n	8027b50 <_ZN8touchgfx6Canvas6renderEh+0x124>
 8027b68:	f9b4 301a 	ldrsh.w	r3, [r4, #26]
 8027b6c:	f9b4 2018 	ldrsh.w	r2, [r4, #24]
 8027b70:	fb08 2303 	mla	r3, r8, r3, r2
 8027b74:	e7ec      	b.n	8027b50 <_ZN8touchgfx6Canvas6renderEh+0x124>
 8027b76:	f9b4 301a 	ldrsh.w	r3, [r4, #26]
 8027b7a:	f9b4 2018 	ldrsh.w	r2, [r4, #24]
 8027b7e:	fb08 f303 	mul.w	r3, r8, r3
 8027b82:	eb03 0382 	add.w	r3, r3, r2, lsl #2
 8027b86:	e7e3      	b.n	8027b50 <_ZN8touchgfx6Canvas6renderEh+0x124>
 8027b88:	2701      	movs	r7, #1
 8027b8a:	e7b4      	b.n	8027af6 <_ZN8touchgfx6Canvas6renderEh+0xca>
 8027b8c:	2001381c 	.word	0x2001381c

08027b90 <_ZNK8touchgfx6Canvas29transformFrameBufferToDisplayERNS_7CWRUtil2Q5ES3_>:
 8027b90:	b510      	push	{r4, lr}
 8027b92:	4b07      	ldr	r3, [pc, #28]	; (8027bb0 <_ZNK8touchgfx6Canvas29transformFrameBufferToDisplayERNS_7CWRUtil2Q5ES3_+0x20>)
 8027b94:	781b      	ldrb	r3, [r3, #0]
 8027b96:	2b01      	cmp	r3, #1
 8027b98:	d108      	bne.n	8027bac <_ZNK8touchgfx6Canvas29transformFrameBufferToDisplayERNS_7CWRUtil2Q5ES3_+0x1c>
 8027b9a:	6843      	ldr	r3, [r0, #4]
 8027b9c:	6814      	ldr	r4, [r2, #0]
 8027b9e:	f9b3 0008 	ldrsh.w	r0, [r3, #8]
 8027ba2:	680b      	ldr	r3, [r1, #0]
 8027ba4:	ebc3 1340 	rsb	r3, r3, r0, lsl #5
 8027ba8:	6013      	str	r3, [r2, #0]
 8027baa:	600c      	str	r4, [r1, #0]
 8027bac:	bd10      	pop	{r4, pc}
 8027bae:	bf00      	nop
 8027bb0:	20013814 	.word	0x20013814

08027bb4 <_ZN8touchgfx6Canvas6moveToENS_7CWRUtil2Q5ES2_>:
 8027bb4:	b513      	push	{r0, r1, r4, lr}
 8027bb6:	f890 3058 	ldrb.w	r3, [r0, #88]	; 0x58
 8027bba:	4604      	mov	r4, r0
 8027bbc:	e9cd 2100 	strd	r2, r1, [sp]
 8027bc0:	b9a3      	cbnz	r3, 8027bec <_ZN8touchgfx6Canvas6moveToENS_7CWRUtil2Q5ES2_+0x38>
 8027bc2:	466a      	mov	r2, sp
 8027bc4:	a901      	add	r1, sp, #4
 8027bc6:	4620      	mov	r0, r4
 8027bc8:	f7ff ffe2 	bl	8027b90 <_ZNK8touchgfx6Canvas29transformFrameBufferToDisplayERNS_7CWRUtil2Q5ES3_>
 8027bcc:	68a3      	ldr	r3, [r4, #8]
 8027bce:	9901      	ldr	r1, [sp, #4]
 8027bd0:	9a00      	ldr	r2, [sp, #0]
 8027bd2:	1ac9      	subs	r1, r1, r3
 8027bd4:	68e3      	ldr	r3, [r4, #12]
 8027bd6:	9101      	str	r1, [sp, #4]
 8027bd8:	1ad2      	subs	r2, r2, r3
 8027bda:	2a00      	cmp	r2, #0
 8027bdc:	9200      	str	r2, [sp, #0]
 8027bde:	da0b      	bge.n	8027bf8 <_ZN8touchgfx6Canvas6moveToENS_7CWRUtil2Q5ES2_+0x44>
 8027be0:	2301      	movs	r3, #1
 8027be2:	2900      	cmp	r1, #0
 8027be4:	da0e      	bge.n	8027c04 <_ZN8touchgfx6Canvas6moveToENS_7CWRUtil2Q5ES2_+0x50>
 8027be6:	f043 0304 	orr.w	r3, r3, #4
 8027bea:	e013      	b.n	8027c14 <_ZN8touchgfx6Canvas6moveToENS_7CWRUtil2Q5ES2_+0x60>
 8027bec:	f7ff fefc 	bl	80279e8 <_ZN8touchgfx6Canvas5closeEv>
 8027bf0:	2800      	cmp	r0, #0
 8027bf2:	d1e6      	bne.n	8027bc2 <_ZN8touchgfx6Canvas6moveToENS_7CWRUtil2Q5ES2_+0xe>
 8027bf4:	b002      	add	sp, #8
 8027bf6:	bd10      	pop	{r4, pc}
 8027bf8:	6963      	ldr	r3, [r4, #20]
 8027bfa:	429a      	cmp	r2, r3
 8027bfc:	bfac      	ite	ge
 8027bfe:	2302      	movge	r3, #2
 8027c00:	2300      	movlt	r3, #0
 8027c02:	e7ee      	b.n	8027be2 <_ZN8touchgfx6Canvas6moveToENS_7CWRUtil2Q5ES2_+0x2e>
 8027c04:	6920      	ldr	r0, [r4, #16]
 8027c06:	4281      	cmp	r1, r0
 8027c08:	bfac      	ite	ge
 8027c0a:	2008      	movge	r0, #8
 8027c0c:	2000      	movlt	r0, #0
 8027c0e:	4318      	orrs	r0, r3
 8027c10:	b2c3      	uxtb	r3, r0
 8027c12:	b158      	cbz	r0, 8027c2c <_ZN8touchgfx6Canvas6moveToENS_7CWRUtil2Q5ES2_+0x78>
 8027c14:	2200      	movs	r2, #0
 8027c16:	f884 2058 	strb.w	r2, [r4, #88]	; 0x58
 8027c1a:	9901      	ldr	r1, [sp, #4]
 8027c1c:	9a00      	ldr	r2, [sp, #0]
 8027c1e:	66a1      	str	r1, [r4, #104]	; 0x68
 8027c20:	66e2      	str	r2, [r4, #108]	; 0x6c
 8027c22:	e9c4 1217 	strd	r1, r2, [r4, #92]	; 0x5c
 8027c26:	f884 3064 	strb.w	r3, [r4, #100]	; 0x64
 8027c2a:	e7e3      	b.n	8027bf4 <_ZN8touchgfx6Canvas6moveToENS_7CWRUtil2Q5ES2_+0x40>
 8027c2c:	f884 0065 	strb.w	r0, [r4, #101]	; 0x65
 8027c30:	e9d4 3009 	ldrd	r3, r0, [r4, #36]	; 0x24
 8027c34:	4298      	cmp	r0, r3
 8027c36:	d803      	bhi.n	8027c40 <_ZN8touchgfx6Canvas6moveToENS_7CWRUtil2Q5ES2_+0x8c>
 8027c38:	f104 0020 	add.w	r0, r4, #32
 8027c3c:	f7ec fe34 	bl	80148a8 <_ZN8touchgfx7Outline6moveToEii>
 8027c40:	2301      	movs	r3, #1
 8027c42:	f884 3058 	strb.w	r3, [r4, #88]	; 0x58
 8027c46:	f884 3059 	strb.w	r3, [r4, #89]	; 0x59
 8027c4a:	2300      	movs	r3, #0
 8027c4c:	e7e5      	b.n	8027c1a <_ZN8touchgfx6Canvas6moveToENS_7CWRUtil2Q5ES2_+0x66>

08027c4e <_ZN8touchgfx6Canvas6lineToENS_7CWRUtil2Q5ES2_>:
 8027c4e:	b573      	push	{r0, r1, r4, r5, r6, lr}
 8027c50:	ab02      	add	r3, sp, #8
 8027c52:	4604      	mov	r4, r0
 8027c54:	f843 2d08 	str.w	r2, [r3, #-8]!
 8027c58:	9101      	str	r1, [sp, #4]
 8027c5a:	461a      	mov	r2, r3
 8027c5c:	a901      	add	r1, sp, #4
 8027c5e:	f7ff ff97 	bl	8027b90 <_ZNK8touchgfx6Canvas29transformFrameBufferToDisplayERNS_7CWRUtil2Q5ES3_>
 8027c62:	68a3      	ldr	r3, [r4, #8]
 8027c64:	9901      	ldr	r1, [sp, #4]
 8027c66:	9a00      	ldr	r2, [sp, #0]
 8027c68:	1ac9      	subs	r1, r1, r3
 8027c6a:	68e3      	ldr	r3, [r4, #12]
 8027c6c:	9101      	str	r1, [sp, #4]
 8027c6e:	1ad2      	subs	r2, r2, r3
 8027c70:	2a00      	cmp	r2, #0
 8027c72:	9200      	str	r2, [sp, #0]
 8027c74:	db1c      	blt.n	8027cb0 <_ZN8touchgfx6Canvas6lineToENS_7CWRUtil2Q5ES2_+0x62>
 8027c76:	6963      	ldr	r3, [r4, #20]
 8027c78:	429a      	cmp	r2, r3
 8027c7a:	bfac      	ite	ge
 8027c7c:	2002      	movge	r0, #2
 8027c7e:	2000      	movlt	r0, #0
 8027c80:	2900      	cmp	r1, #0
 8027c82:	db17      	blt.n	8027cb4 <_ZN8touchgfx6Canvas6lineToENS_7CWRUtil2Q5ES2_+0x66>
 8027c84:	6923      	ldr	r3, [r4, #16]
 8027c86:	4299      	cmp	r1, r3
 8027c88:	bfac      	ite	ge
 8027c8a:	2308      	movge	r3, #8
 8027c8c:	2300      	movlt	r3, #0
 8027c8e:	4303      	orrs	r3, r0
 8027c90:	f894 0064 	ldrb.w	r0, [r4, #100]	; 0x64
 8027c94:	b2dd      	uxtb	r5, r3
 8027c96:	b978      	cbnz	r0, 8027cb8 <_ZN8touchgfx6Canvas6lineToENS_7CWRUtil2Q5ES2_+0x6a>
 8027c98:	f104 0020 	add.w	r0, r4, #32
 8027c9c:	f7ff fd30 	bl	8027700 <_ZN8touchgfx10Rasterizer6lineToEii>
 8027ca0:	9b01      	ldr	r3, [sp, #4]
 8027ca2:	65e3      	str	r3, [r4, #92]	; 0x5c
 8027ca4:	9b00      	ldr	r3, [sp, #0]
 8027ca6:	6623      	str	r3, [r4, #96]	; 0x60
 8027ca8:	f884 5064 	strb.w	r5, [r4, #100]	; 0x64
 8027cac:	b002      	add	sp, #8
 8027cae:	bd70      	pop	{r4, r5, r6, pc}
 8027cb0:	2001      	movs	r0, #1
 8027cb2:	e7e5      	b.n	8027c80 <_ZN8touchgfx6Canvas6lineToENS_7CWRUtil2Q5ES2_+0x32>
 8027cb4:	2304      	movs	r3, #4
 8027cb6:	e7ea      	b.n	8027c8e <_ZN8touchgfx6Canvas6lineToENS_7CWRUtil2Q5ES2_+0x40>
 8027cb8:	b113      	cbz	r3, 8027cc0 <_ZN8touchgfx6Canvas6lineToENS_7CWRUtil2Q5ES2_+0x72>
 8027cba:	ea10 0305 	ands.w	r3, r0, r5
 8027cbe:	d11c      	bne.n	8027cfa <_ZN8touchgfx6Canvas6lineToENS_7CWRUtil2Q5ES2_+0xac>
 8027cc0:	f894 3058 	ldrb.w	r3, [r4, #88]	; 0x58
 8027cc4:	f104 0620 	add.w	r6, r4, #32
 8027cc8:	e9d4 1217 	ldrd	r1, r2, [r4, #92]	; 0x5c
 8027ccc:	b98b      	cbnz	r3, 8027cf2 <_ZN8touchgfx6Canvas6lineToENS_7CWRUtil2Q5ES2_+0xa4>
 8027cce:	f884 0065 	strb.w	r0, [r4, #101]	; 0x65
 8027cd2:	e9d4 3009 	ldrd	r3, r0, [r4, #36]	; 0x24
 8027cd6:	4298      	cmp	r0, r3
 8027cd8:	d802      	bhi.n	8027ce0 <_ZN8touchgfx6Canvas6lineToENS_7CWRUtil2Q5ES2_+0x92>
 8027cda:	4630      	mov	r0, r6
 8027cdc:	f7ec fde4 	bl	80148a8 <_ZN8touchgfx7Outline6moveToEii>
 8027ce0:	2301      	movs	r3, #1
 8027ce2:	f884 3058 	strb.w	r3, [r4, #88]	; 0x58
 8027ce6:	f884 3059 	strb.w	r3, [r4, #89]	; 0x59
 8027cea:	e9dd 2100 	ldrd	r2, r1, [sp]
 8027cee:	4630      	mov	r0, r6
 8027cf0:	e7d4      	b.n	8027c9c <_ZN8touchgfx6Canvas6lineToENS_7CWRUtil2Q5ES2_+0x4e>
 8027cf2:	4630      	mov	r0, r6
 8027cf4:	f7ff fd04 	bl	8027700 <_ZN8touchgfx10Rasterizer6lineToEii>
 8027cf8:	e7f7      	b.n	8027cea <_ZN8touchgfx6Canvas6lineToENS_7CWRUtil2Q5ES2_+0x9c>
 8027cfa:	461d      	mov	r5, r3
 8027cfc:	e7d0      	b.n	8027ca0 <_ZN8touchgfx6Canvas6lineToENS_7CWRUtil2Q5ES2_+0x52>
	...

08027d00 <_ZN8touchgfx6CanvasD1Ev>:
 8027d00:	b510      	push	{r4, lr}
 8027d02:	4b04      	ldr	r3, [pc, #16]	; (8027d14 <_ZN8touchgfx6CanvasD1Ev+0x14>)
 8027d04:	4604      	mov	r4, r0
 8027d06:	f840 3b20 	str.w	r3, [r0], #32
 8027d0a:	f7ec f8c7 	bl	8013e9c <_ZN8touchgfx7OutlineD1Ev>
 8027d0e:	4620      	mov	r0, r4
 8027d10:	bd10      	pop	{r4, pc}
 8027d12:	bf00      	nop
 8027d14:	0802fbe8 	.word	0x0802fbe8

08027d18 <_ZN8touchgfx6CanvasD0Ev>:
 8027d18:	b510      	push	{r4, lr}
 8027d1a:	4604      	mov	r4, r0
 8027d1c:	f7ff fff0 	bl	8027d00 <_ZN8touchgfx6CanvasD1Ev>
 8027d20:	4620      	mov	r0, r4
 8027d22:	2170      	movs	r1, #112	; 0x70
 8027d24:	f002 fd09 	bl	802a73a <_ZdlPvj>
 8027d28:	4620      	mov	r0, r4
 8027d2a:	bd10      	pop	{r4, pc}

08027d2c <_ZN8touchgfx6CircleD1Ev>:
 8027d2c:	4770      	bx	lr

08027d2e <_ZN8touchgfx6CircleD0Ev>:
 8027d2e:	b510      	push	{r4, lr}
 8027d30:	2148      	movs	r1, #72	; 0x48
 8027d32:	4604      	mov	r4, r0
 8027d34:	f002 fd01 	bl	802a73a <_ZdlPvj>
 8027d38:	4620      	mov	r0, r4
 8027d3a:	bd10      	pop	{r4, pc}

08027d3c <_ZN8touchgfx7CWRUtil6cosineENS0_2Q5E>:
 8027d3c:	b508      	push	{r3, lr}
 8027d3e:	f5c0 6034 	rsb	r0, r0, #2880	; 0xb40
 8027d42:	f7ea fbab 	bl	801249c <_ZN8touchgfx7CWRUtil4sineENS0_2Q5E>
 8027d46:	bd08      	pop	{r3, pc}

08027d48 <_ZN8touchgfx6CircleC1Ev>:
 8027d48:	b510      	push	{r4, lr}
 8027d4a:	4604      	mov	r4, r0
 8027d4c:	f7ea fa42 	bl	80121d4 <_ZN8touchgfx12CanvasWidgetC1Ev>
 8027d50:	4b08      	ldr	r3, [pc, #32]	; (8027d74 <_ZN8touchgfx6CircleC1Ev+0x2c>)
 8027d52:	6023      	str	r3, [r4, #0]
 8027d54:	f44f 5234 	mov.w	r2, #11520	; 0x2d00
 8027d58:	2300      	movs	r3, #0
 8027d5a:	e9c4 230f 	strd	r2, r3, [r4, #60]	; 0x3c
 8027d5e:	f24b 4205 	movw	r2, #46085	; 0xb405
 8027d62:	e9c4 330b 	strd	r3, r3, [r4, #44]	; 0x2c
 8027d66:	e9c4 330d 	strd	r3, r3, [r4, #52]	; 0x34
 8027d6a:	f8a4 2044 	strh.w	r2, [r4, #68]	; 0x44
 8027d6e:	60a3      	str	r3, [r4, #8]
 8027d70:	4620      	mov	r0, r4
 8027d72:	bd10      	pop	{r4, pc}
 8027d74:	0802fbfc 	.word	0x0802fbfc

08027d78 <_ZNK8touchgfx6Circle20calculateMinimalRectENS_7CWRUtil2Q5ES2_RS2_S3_S3_S3_>:
 8027d78:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 8027d7c:	428a      	cmp	r2, r1
 8027d7e:	4680      	mov	r8, r0
 8027d80:	4610      	mov	r0, r2
 8027d82:	4699      	mov	r9, r3
 8027d84:	bfa6      	itte	ge
 8027d86:	460a      	movge	r2, r1
 8027d88:	4603      	movge	r3, r0
 8027d8a:	460b      	movlt	r3, r1
 8027d8c:	1a99      	subs	r1, r3, r2
 8027d8e:	b085      	sub	sp, #20
 8027d90:	f5b1 5f34 	cmp.w	r1, #11520	; 0x2d00
 8027d94:	f8d8 4040 	ldr.w	r4, [r8, #64]	; 0x40
 8027d98:	9d10      	ldr	r5, [sp, #64]	; 0x40
 8027d9a:	bfa4      	itt	ge
 8027d9c:	f44f 5334 	movge.w	r3, #11520	; 0x2d00
 8027da0:	2200      	movge	r2, #0
 8027da2:	e9dd 760e 	ldrd	r7, r6, [sp, #56]	; 0x38
 8027da6:	9300      	str	r3, [sp, #0]
 8027da8:	f108 0a34 	add.w	sl, r8, #52	; 0x34
 8027dac:	f102 0b01 	add.w	fp, r2, #1
 8027db0:	2c00      	cmp	r4, #0
 8027db2:	f040 80af 	bne.w	8027f14 <_ZNK8touchgfx6Circle20calculateMinimalRectENS_7CWRUtil2Q5ES2_RS2_S3_S3_S3_+0x19c>
 8027db6:	4610      	mov	r0, r2
 8027db8:	9201      	str	r2, [sp, #4]
 8027dba:	f7ea fb6f 	bl	801249c <_ZN8touchgfx7CWRUtil4sineENS0_2Q5E>
 8027dbe:	a903      	add	r1, sp, #12
 8027dc0:	9003      	str	r0, [sp, #12]
 8027dc2:	4650      	mov	r0, sl
 8027dc4:	f7ea fa32 	bl	801222c <_ZNK8touchgfx7CWRUtil2Q5mlERKNS0_3Q15E>
 8027dc8:	f8d8 102c 	ldr.w	r1, [r8, #44]	; 0x2c
 8027dcc:	9a01      	ldr	r2, [sp, #4]
 8027dce:	4408      	add	r0, r1
 8027dd0:	f8d9 1000 	ldr.w	r1, [r9]
 8027dd4:	4281      	cmp	r1, r0
 8027dd6:	bfc8      	it	gt
 8027dd8:	f8c9 0000 	strgt.w	r0, [r9]
 8027ddc:	6839      	ldr	r1, [r7, #0]
 8027dde:	4288      	cmp	r0, r1
 8027de0:	bfc8      	it	gt
 8027de2:	6038      	strgt	r0, [r7, #0]
 8027de4:	4610      	mov	r0, r2
 8027de6:	f7ff ffa9 	bl	8027d3c <_ZN8touchgfx7CWRUtil6cosineENS0_2Q5E>
 8027dea:	a903      	add	r1, sp, #12
 8027dec:	9003      	str	r0, [sp, #12]
 8027dee:	4650      	mov	r0, sl
 8027df0:	f7ea fa1c 	bl	801222c <_ZNK8touchgfx7CWRUtil2Q5mlERKNS0_3Q15E>
 8027df4:	f8d8 2030 	ldr.w	r2, [r8, #48]	; 0x30
 8027df8:	1a10      	subs	r0, r2, r0
 8027dfa:	6832      	ldr	r2, [r6, #0]
 8027dfc:	4282      	cmp	r2, r0
 8027dfe:	bfc8      	it	gt
 8027e00:	6030      	strgt	r0, [r6, #0]
 8027e02:	682a      	ldr	r2, [r5, #0]
 8027e04:	f44f 6134 	mov.w	r1, #2880	; 0xb40
 8027e08:	4290      	cmp	r0, r2
 8027e0a:	fb9b f2f1 	sdiv	r2, fp, r1
 8027e0e:	fb01 b212 	mls	r2, r1, r2, fp
 8027e12:	eba1 0202 	sub.w	r2, r1, r2
 8027e16:	bfc8      	it	gt
 8027e18:	6028      	strgt	r0, [r5, #0]
 8027e1a:	fb92 f0f1 	sdiv	r0, r2, r1
 8027e1e:	fb01 2210 	mls	r2, r1, r0, r2
 8027e22:	4493      	add	fp, r2
 8027e24:	9b00      	ldr	r3, [sp, #0]
 8027e26:	455b      	cmp	r3, fp
 8027e28:	db2a      	blt.n	8027e80 <_ZNK8touchgfx6Circle20calculateMinimalRectENS_7CWRUtil2Q5ES2_RS2_S3_S3_S3_+0x108>
 8027e2a:	4658      	mov	r0, fp
 8027e2c:	f7ea fb36 	bl	801249c <_ZN8touchgfx7CWRUtil4sineENS0_2Q5E>
 8027e30:	a903      	add	r1, sp, #12
 8027e32:	9003      	str	r0, [sp, #12]
 8027e34:	4650      	mov	r0, sl
 8027e36:	f7ea f9f9 	bl	801222c <_ZNK8touchgfx7CWRUtil2Q5mlERKNS0_3Q15E>
 8027e3a:	f8d8 202c 	ldr.w	r2, [r8, #44]	; 0x2c
 8027e3e:	4410      	add	r0, r2
 8027e40:	f8d9 2000 	ldr.w	r2, [r9]
 8027e44:	4282      	cmp	r2, r0
 8027e46:	bfc8      	it	gt
 8027e48:	f8c9 0000 	strgt.w	r0, [r9]
 8027e4c:	683a      	ldr	r2, [r7, #0]
 8027e4e:	4290      	cmp	r0, r2
 8027e50:	bfc8      	it	gt
 8027e52:	6038      	strgt	r0, [r7, #0]
 8027e54:	4658      	mov	r0, fp
 8027e56:	f7ff ff71 	bl	8027d3c <_ZN8touchgfx7CWRUtil6cosineENS0_2Q5E>
 8027e5a:	a903      	add	r1, sp, #12
 8027e5c:	9003      	str	r0, [sp, #12]
 8027e5e:	4650      	mov	r0, sl
 8027e60:	f7ea f9e4 	bl	801222c <_ZNK8touchgfx7CWRUtil2Q5mlERKNS0_3Q15E>
 8027e64:	f8d8 2030 	ldr.w	r2, [r8, #48]	; 0x30
 8027e68:	1a10      	subs	r0, r2, r0
 8027e6a:	6832      	ldr	r2, [r6, #0]
 8027e6c:	4282      	cmp	r2, r0
 8027e6e:	bfc8      	it	gt
 8027e70:	6030      	strgt	r0, [r6, #0]
 8027e72:	682a      	ldr	r2, [r5, #0]
 8027e74:	4290      	cmp	r0, r2
 8027e76:	bfc8      	it	gt
 8027e78:	6028      	strgt	r0, [r5, #0]
 8027e7a:	f50b 6b34 	add.w	fp, fp, #2880	; 0xb40
 8027e7e:	e7d1      	b.n	8027e24 <_ZNK8touchgfx6Circle20calculateMinimalRectENS_7CWRUtil2Q5ES2_RS2_S3_S3_S3_+0xac>
 8027e80:	9b00      	ldr	r3, [sp, #0]
 8027e82:	f5ab 6b34 	sub.w	fp, fp, #2880	; 0xb40
 8027e86:	455b      	cmp	r3, fp
 8027e88:	dd27      	ble.n	8027eda <_ZNK8touchgfx6Circle20calculateMinimalRectENS_7CWRUtil2Q5ES2_RS2_S3_S3_S3_+0x162>
 8027e8a:	4618      	mov	r0, r3
 8027e8c:	f7ea fb06 	bl	801249c <_ZN8touchgfx7CWRUtil4sineENS0_2Q5E>
 8027e90:	a903      	add	r1, sp, #12
 8027e92:	9003      	str	r0, [sp, #12]
 8027e94:	4650      	mov	r0, sl
 8027e96:	f7ea f9c9 	bl	801222c <_ZNK8touchgfx7CWRUtil2Q5mlERKNS0_3Q15E>
 8027e9a:	f8d8 202c 	ldr.w	r2, [r8, #44]	; 0x2c
 8027e9e:	4410      	add	r0, r2
 8027ea0:	f8d9 2000 	ldr.w	r2, [r9]
 8027ea4:	4282      	cmp	r2, r0
 8027ea6:	bfc8      	it	gt
 8027ea8:	f8c9 0000 	strgt.w	r0, [r9]
 8027eac:	683a      	ldr	r2, [r7, #0]
 8027eae:	4290      	cmp	r0, r2
 8027eb0:	bfc8      	it	gt
 8027eb2:	6038      	strgt	r0, [r7, #0]
 8027eb4:	9800      	ldr	r0, [sp, #0]
 8027eb6:	f7ff ff41 	bl	8027d3c <_ZN8touchgfx7CWRUtil6cosineENS0_2Q5E>
 8027eba:	a903      	add	r1, sp, #12
 8027ebc:	9003      	str	r0, [sp, #12]
 8027ebe:	4650      	mov	r0, sl
 8027ec0:	f7ea f9b4 	bl	801222c <_ZNK8touchgfx7CWRUtil2Q5mlERKNS0_3Q15E>
 8027ec4:	f8d8 2030 	ldr.w	r2, [r8, #48]	; 0x30
 8027ec8:	1a10      	subs	r0, r2, r0
 8027eca:	6832      	ldr	r2, [r6, #0]
 8027ecc:	4282      	cmp	r2, r0
 8027ece:	bfc8      	it	gt
 8027ed0:	6030      	strgt	r0, [r6, #0]
 8027ed2:	682a      	ldr	r2, [r5, #0]
 8027ed4:	4290      	cmp	r0, r2
 8027ed6:	bfc8      	it	gt
 8027ed8:	6028      	strgt	r0, [r5, #0]
 8027eda:	f8d8 202c 	ldr.w	r2, [r8, #44]	; 0x2c
 8027ede:	f8d9 1000 	ldr.w	r1, [r9]
 8027ee2:	4291      	cmp	r1, r2
 8027ee4:	bfc8      	it	gt
 8027ee6:	f8c9 2000 	strgt.w	r2, [r9]
 8027eea:	683a      	ldr	r2, [r7, #0]
 8027eec:	f8d8 302c 	ldr.w	r3, [r8, #44]	; 0x2c
 8027ef0:	429a      	cmp	r2, r3
 8027ef2:	bfb8      	it	lt
 8027ef4:	603b      	strlt	r3, [r7, #0]
 8027ef6:	6832      	ldr	r2, [r6, #0]
 8027ef8:	f8d8 3030 	ldr.w	r3, [r8, #48]	; 0x30
 8027efc:	429a      	cmp	r2, r3
 8027efe:	bfc8      	it	gt
 8027f00:	6033      	strgt	r3, [r6, #0]
 8027f02:	682a      	ldr	r2, [r5, #0]
 8027f04:	f8d8 3030 	ldr.w	r3, [r8, #48]	; 0x30
 8027f08:	429a      	cmp	r2, r3
 8027f0a:	da00      	bge.n	8027f0e <_ZNK8touchgfx6Circle20calculateMinimalRectENS_7CWRUtil2Q5ES2_RS2_S3_S3_S3_+0x196>
 8027f0c:	602b      	str	r3, [r5, #0]
 8027f0e:	b005      	add	sp, #20
 8027f10:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
 8027f14:	2002      	movs	r0, #2
 8027f16:	3401      	adds	r4, #1
 8027f18:	fb94 f4f0 	sdiv	r4, r4, r0
 8027f1c:	4610      	mov	r0, r2
 8027f1e:	9201      	str	r2, [sp, #4]
 8027f20:	f7ea fabc 	bl	801249c <_ZN8touchgfx7CWRUtil4sineENS0_2Q5E>
 8027f24:	a903      	add	r1, sp, #12
 8027f26:	9003      	str	r0, [sp, #12]
 8027f28:	4650      	mov	r0, sl
 8027f2a:	f7ea f97f 	bl	801222c <_ZNK8touchgfx7CWRUtil2Q5mlERKNS0_3Q15E>
 8027f2e:	f8d8 102c 	ldr.w	r1, [r8, #44]	; 0x2c
 8027f32:	9a01      	ldr	r2, [sp, #4]
 8027f34:	4408      	add	r0, r1
 8027f36:	f8d9 1000 	ldr.w	r1, [r9]
 8027f3a:	1b03      	subs	r3, r0, r4
 8027f3c:	4299      	cmp	r1, r3
 8027f3e:	bfc8      	it	gt
 8027f40:	f8c9 3000 	strgt.w	r3, [r9]
 8027f44:	6839      	ldr	r1, [r7, #0]
 8027f46:	428b      	cmp	r3, r1
 8027f48:	bfc8      	it	gt
 8027f4a:	603b      	strgt	r3, [r7, #0]
 8027f4c:	f8d9 1000 	ldr.w	r1, [r9]
 8027f50:	4420      	add	r0, r4
 8027f52:	4281      	cmp	r1, r0
 8027f54:	bfc8      	it	gt
 8027f56:	f8c9 0000 	strgt.w	r0, [r9]
 8027f5a:	6839      	ldr	r1, [r7, #0]
 8027f5c:	4288      	cmp	r0, r1
 8027f5e:	bfc8      	it	gt
 8027f60:	6038      	strgt	r0, [r7, #0]
 8027f62:	4610      	mov	r0, r2
 8027f64:	f7ff feea 	bl	8027d3c <_ZN8touchgfx7CWRUtil6cosineENS0_2Q5E>
 8027f68:	a903      	add	r1, sp, #12
 8027f6a:	9003      	str	r0, [sp, #12]
 8027f6c:	4650      	mov	r0, sl
 8027f6e:	f7ea f95d 	bl	801222c <_ZNK8touchgfx7CWRUtil2Q5mlERKNS0_3Q15E>
 8027f72:	f8d8 2030 	ldr.w	r2, [r8, #48]	; 0x30
 8027f76:	1a10      	subs	r0, r2, r0
 8027f78:	6832      	ldr	r2, [r6, #0]
 8027f7a:	1b01      	subs	r1, r0, r4
 8027f7c:	428a      	cmp	r2, r1
 8027f7e:	bfc8      	it	gt
 8027f80:	6031      	strgt	r1, [r6, #0]
 8027f82:	682a      	ldr	r2, [r5, #0]
 8027f84:	4291      	cmp	r1, r2
 8027f86:	bfc8      	it	gt
 8027f88:	6029      	strgt	r1, [r5, #0]
 8027f8a:	6832      	ldr	r2, [r6, #0]
 8027f8c:	4420      	add	r0, r4
 8027f8e:	4282      	cmp	r2, r0
 8027f90:	bfc8      	it	gt
 8027f92:	6030      	strgt	r0, [r6, #0]
 8027f94:	682a      	ldr	r2, [r5, #0]
 8027f96:	f44f 6134 	mov.w	r1, #2880	; 0xb40
 8027f9a:	4290      	cmp	r0, r2
 8027f9c:	fb9b f2f1 	sdiv	r2, fp, r1
 8027fa0:	fb01 b212 	mls	r2, r1, r2, fp
 8027fa4:	eba1 0202 	sub.w	r2, r1, r2
 8027fa8:	bfc8      	it	gt
 8027faa:	6028      	strgt	r0, [r5, #0]
 8027fac:	fb92 f0f1 	sdiv	r0, r2, r1
 8027fb0:	fb01 2210 	mls	r2, r1, r0, r2
 8027fb4:	4493      	add	fp, r2
 8027fb6:	9b00      	ldr	r3, [sp, #0]
 8027fb8:	455b      	cmp	r3, fp
 8027fba:	db40      	blt.n	802803e <_ZNK8touchgfx6Circle20calculateMinimalRectENS_7CWRUtil2Q5ES2_RS2_S3_S3_S3_+0x2c6>
 8027fbc:	4658      	mov	r0, fp
 8027fbe:	f7ea fa6d 	bl	801249c <_ZN8touchgfx7CWRUtil4sineENS0_2Q5E>
 8027fc2:	a903      	add	r1, sp, #12
 8027fc4:	9003      	str	r0, [sp, #12]
 8027fc6:	4650      	mov	r0, sl
 8027fc8:	f7ea f930 	bl	801222c <_ZNK8touchgfx7CWRUtil2Q5mlERKNS0_3Q15E>
 8027fcc:	f8d8 202c 	ldr.w	r2, [r8, #44]	; 0x2c
 8027fd0:	4410      	add	r0, r2
 8027fd2:	f8d9 2000 	ldr.w	r2, [r9]
 8027fd6:	1b01      	subs	r1, r0, r4
 8027fd8:	428a      	cmp	r2, r1
 8027fda:	bfc8      	it	gt
 8027fdc:	f8c9 1000 	strgt.w	r1, [r9]
 8027fe0:	683a      	ldr	r2, [r7, #0]
 8027fe2:	4291      	cmp	r1, r2
 8027fe4:	bfc8      	it	gt
 8027fe6:	6039      	strgt	r1, [r7, #0]
 8027fe8:	f8d9 2000 	ldr.w	r2, [r9]
 8027fec:	4420      	add	r0, r4
 8027fee:	4282      	cmp	r2, r0
 8027ff0:	bfc8      	it	gt
 8027ff2:	f8c9 0000 	strgt.w	r0, [r9]
 8027ff6:	683a      	ldr	r2, [r7, #0]
 8027ff8:	4290      	cmp	r0, r2
 8027ffa:	bfc8      	it	gt
 8027ffc:	6038      	strgt	r0, [r7, #0]
 8027ffe:	4658      	mov	r0, fp
 8028000:	f7ff fe9c 	bl	8027d3c <_ZN8touchgfx7CWRUtil6cosineENS0_2Q5E>
 8028004:	a903      	add	r1, sp, #12
 8028006:	9003      	str	r0, [sp, #12]
 8028008:	4650      	mov	r0, sl
 802800a:	f7ea f90f 	bl	801222c <_ZNK8touchgfx7CWRUtil2Q5mlERKNS0_3Q15E>
 802800e:	f8d8 2030 	ldr.w	r2, [r8, #48]	; 0x30
 8028012:	1a10      	subs	r0, r2, r0
 8028014:	6832      	ldr	r2, [r6, #0]
 8028016:	1b01      	subs	r1, r0, r4
 8028018:	428a      	cmp	r2, r1
 802801a:	bfc8      	it	gt
 802801c:	6031      	strgt	r1, [r6, #0]
 802801e:	682a      	ldr	r2, [r5, #0]
 8028020:	4291      	cmp	r1, r2
 8028022:	bfc8      	it	gt
 8028024:	6029      	strgt	r1, [r5, #0]
 8028026:	6832      	ldr	r2, [r6, #0]
 8028028:	4420      	add	r0, r4
 802802a:	4282      	cmp	r2, r0
 802802c:	bfc8      	it	gt
 802802e:	6030      	strgt	r0, [r6, #0]
 8028030:	682a      	ldr	r2, [r5, #0]
 8028032:	4290      	cmp	r0, r2
 8028034:	bfc8      	it	gt
 8028036:	6028      	strgt	r0, [r5, #0]
 8028038:	f50b 6b34 	add.w	fp, fp, #2880	; 0xb40
 802803c:	e7bb      	b.n	8027fb6 <_ZNK8touchgfx6Circle20calculateMinimalRectENS_7CWRUtil2Q5ES2_RS2_S3_S3_S3_+0x23e>
 802803e:	9b00      	ldr	r3, [sp, #0]
 8028040:	f5ab 6b34 	sub.w	fp, fp, #2880	; 0xb40
 8028044:	455b      	cmp	r3, fp
 8028046:	f77f af62 	ble.w	8027f0e <_ZNK8touchgfx6Circle20calculateMinimalRectENS_7CWRUtil2Q5ES2_RS2_S3_S3_S3_+0x196>
 802804a:	4618      	mov	r0, r3
 802804c:	f7ea fa26 	bl	801249c <_ZN8touchgfx7CWRUtil4sineENS0_2Q5E>
 8028050:	a903      	add	r1, sp, #12
 8028052:	9003      	str	r0, [sp, #12]
 8028054:	4650      	mov	r0, sl
 8028056:	f7ea f8e9 	bl	801222c <_ZNK8touchgfx7CWRUtil2Q5mlERKNS0_3Q15E>
 802805a:	f8d8 202c 	ldr.w	r2, [r8, #44]	; 0x2c
 802805e:	4410      	add	r0, r2
 8028060:	f8d9 2000 	ldr.w	r2, [r9]
 8028064:	1b01      	subs	r1, r0, r4
 8028066:	428a      	cmp	r2, r1
 8028068:	bfc8      	it	gt
 802806a:	f8c9 1000 	strgt.w	r1, [r9]
 802806e:	683a      	ldr	r2, [r7, #0]
 8028070:	4291      	cmp	r1, r2
 8028072:	bfc8      	it	gt
 8028074:	6039      	strgt	r1, [r7, #0]
 8028076:	f8d9 2000 	ldr.w	r2, [r9]
 802807a:	4420      	add	r0, r4
 802807c:	4282      	cmp	r2, r0
 802807e:	bfc8      	it	gt
 8028080:	f8c9 0000 	strgt.w	r0, [r9]
 8028084:	683b      	ldr	r3, [r7, #0]
 8028086:	4298      	cmp	r0, r3
 8028088:	bfc8      	it	gt
 802808a:	6038      	strgt	r0, [r7, #0]
 802808c:	9800      	ldr	r0, [sp, #0]
 802808e:	f7ff fe55 	bl	8027d3c <_ZN8touchgfx7CWRUtil6cosineENS0_2Q5E>
 8028092:	a903      	add	r1, sp, #12
 8028094:	9003      	str	r0, [sp, #12]
 8028096:	4650      	mov	r0, sl
 8028098:	f7ea f8c8 	bl	801222c <_ZNK8touchgfx7CWRUtil2Q5mlERKNS0_3Q15E>
 802809c:	f8d8 3030 	ldr.w	r3, [r8, #48]	; 0x30
 80280a0:	6832      	ldr	r2, [r6, #0]
 80280a2:	1a18      	subs	r0, r3, r0
 80280a4:	1b03      	subs	r3, r0, r4
 80280a6:	429a      	cmp	r2, r3
 80280a8:	bfc8      	it	gt
 80280aa:	6033      	strgt	r3, [r6, #0]
 80280ac:	682a      	ldr	r2, [r5, #0]
 80280ae:	4293      	cmp	r3, r2
 80280b0:	bfc8      	it	gt
 80280b2:	602b      	strgt	r3, [r5, #0]
 80280b4:	6833      	ldr	r3, [r6, #0]
 80280b6:	4404      	add	r4, r0
 80280b8:	42a3      	cmp	r3, r4
 80280ba:	bfc8      	it	gt
 80280bc:	6034      	strgt	r4, [r6, #0]
 80280be:	682b      	ldr	r3, [r5, #0]
 80280c0:	429c      	cmp	r4, r3
 80280c2:	bfc8      	it	gt
 80280c4:	602c      	strgt	r4, [r5, #0]
 80280c6:	e722      	b.n	8027f0e <_ZNK8touchgfx6Circle20calculateMinimalRectENS_7CWRUtil2Q5ES2_RS2_S3_S3_S3_+0x196>

080280c8 <_ZNK8touchgfx6Circle14getMinimalRectENS_7CWRUtil2Q5ES2_>:
 80280c8:	b530      	push	{r4, r5, lr}
 80280ca:	4604      	mov	r4, r0
 80280cc:	4608      	mov	r0, r1
 80280ce:	4611      	mov	r1, r2
 80280d0:	461a      	mov	r2, r3
 80280d2:	f9b0 3008 	ldrsh.w	r3, [r0, #8]
 80280d6:	b089      	sub	sp, #36	; 0x24
 80280d8:	015b      	lsls	r3, r3, #5
 80280da:	9304      	str	r3, [sp, #16]
 80280dc:	f9b0 300a 	ldrsh.w	r3, [r0, #10]
 80280e0:	2500      	movs	r5, #0
 80280e2:	015b      	lsls	r3, r3, #5
 80280e4:	e9cd 3506 	strd	r3, r5, [sp, #24]
 80280e8:	ab07      	add	r3, sp, #28
 80280ea:	9302      	str	r3, [sp, #8]
 80280ec:	ab06      	add	r3, sp, #24
 80280ee:	9301      	str	r3, [sp, #4]
 80280f0:	ab05      	add	r3, sp, #20
 80280f2:	9300      	str	r3, [sp, #0]
 80280f4:	ab04      	add	r3, sp, #16
 80280f6:	9505      	str	r5, [sp, #20]
 80280f8:	f7ff fe3e 	bl	8027d78 <_ZNK8touchgfx6Circle20calculateMinimalRectENS_7CWRUtil2Q5ES2_RS2_S3_S3_S3_>
 80280fc:	2520      	movs	r5, #32
 80280fe:	9a04      	ldr	r2, [sp, #16]
 8028100:	9805      	ldr	r0, [sp, #20]
 8028102:	fb92 f2f5 	sdiv	r2, r2, r5
 8028106:	fb90 f0f5 	sdiv	r0, r0, r5
 802810a:	b292      	uxth	r2, r2
 802810c:	3002      	adds	r0, #2
 802810e:	1a80      	subs	r0, r0, r2
 8028110:	9b06      	ldr	r3, [sp, #24]
 8028112:	9907      	ldr	r1, [sp, #28]
 8028114:	fb93 f3f5 	sdiv	r3, r3, r5
 8028118:	fb91 f1f5 	sdiv	r1, r1, r5
 802811c:	b29b      	uxth	r3, r3
 802811e:	3102      	adds	r1, #2
 8028120:	1ac9      	subs	r1, r1, r3
 8028122:	3a01      	subs	r2, #1
 8028124:	3b01      	subs	r3, #1
 8028126:	80a0      	strh	r0, [r4, #4]
 8028128:	4620      	mov	r0, r4
 802812a:	8022      	strh	r2, [r4, #0]
 802812c:	8063      	strh	r3, [r4, #2]
 802812e:	80e1      	strh	r1, [r4, #6]
 8028130:	b009      	add	sp, #36	; 0x24
 8028132:	bd30      	pop	{r4, r5, pc}

08028134 <_ZNK8touchgfx6Circle14getMinimalRectEv>:
 8028134:	b510      	push	{r4, lr}
 8028136:	e9d1 230e 	ldrd	r2, r3, [r1, #56]	; 0x38
 802813a:	4604      	mov	r4, r0
 802813c:	f7ff ffc4 	bl	80280c8 <_ZNK8touchgfx6Circle14getMinimalRectENS_7CWRUtil2Q5ES2_>
 8028140:	4620      	mov	r0, r4
 8028142:	bd10      	pop	{r4, pc}

08028144 <_ZNK8touchgfx6Circle32getMinimalRectForUpdatedEndAngleERKNS_7CWRUtil2Q5E>:
 8028144:	b5f8      	push	{r3, r4, r5, r6, r7, lr}
 8028146:	e9d1 540e 	ldrd	r5, r4, [r1, #56]	; 0x38
 802814a:	4606      	mov	r6, r0
 802814c:	f891 0044 	ldrb.w	r0, [r1, #68]	; 0x44
 8028150:	6813      	ldr	r3, [r2, #0]
 8028152:	42a5      	cmp	r5, r4
 8028154:	ea4f 1040 	mov.w	r0, r0, lsl #5
 8028158:	da2b      	bge.n	80281b2 <_ZNK8touchgfx6Circle32getMinimalRectForUpdatedEndAngleERKNS_7CWRUtil2Q5E+0x6e>
 802815a:	42a3      	cmp	r3, r4
 802815c:	dd14      	ble.n	8028188 <_ZNK8touchgfx6Circle32getMinimalRectForUpdatedEndAngleERKNS_7CWRUtil2Q5E+0x44>
 802815e:	b168      	cbz	r0, 802817c <_ZNK8touchgfx6Circle32getMinimalRectForUpdatedEndAngleERKNS_7CWRUtil2Q5E+0x38>
 8028160:	4267      	negs	r7, r4
 8028162:	fb97 f2f0 	sdiv	r2, r7, r0
 8028166:	fb00 7212 	mls	r2, r0, r2, r7
 802816a:	1a82      	subs	r2, r0, r2
 802816c:	fb92 f7f0 	sdiv	r7, r2, r0
 8028170:	fb00 2017 	mls	r0, r0, r7, r2
 8028174:	1a24      	subs	r4, r4, r0
 8028176:	42ac      	cmp	r4, r5
 8028178:	bfb8      	it	lt
 802817a:	462c      	movlt	r4, r5
 802817c:	4630      	mov	r0, r6
 802817e:	4622      	mov	r2, r4
 8028180:	f7ff ffa2 	bl	80280c8 <_ZNK8touchgfx6Circle14getMinimalRectENS_7CWRUtil2Q5ES2_>
 8028184:	4630      	mov	r0, r6
 8028186:	bdf8      	pop	{r3, r4, r5, r6, r7, pc}
 8028188:	42ab      	cmp	r3, r5
 802818a:	dd0e      	ble.n	80281aa <_ZNK8touchgfx6Circle32getMinimalRectForUpdatedEndAngleERKNS_7CWRUtil2Q5E+0x66>
 802818c:	b168      	cbz	r0, 80281aa <_ZNK8touchgfx6Circle32getMinimalRectForUpdatedEndAngleERKNS_7CWRUtil2Q5E+0x66>
 802818e:	425f      	negs	r7, r3
 8028190:	fb97 f2f0 	sdiv	r2, r7, r0
 8028194:	fb00 7212 	mls	r2, r0, r2, r7
 8028198:	1a82      	subs	r2, r0, r2
 802819a:	fb92 f7f0 	sdiv	r7, r2, r0
 802819e:	fb00 2017 	mls	r0, r0, r7, r2
 80281a2:	1a1b      	subs	r3, r3, r0
 80281a4:	42ab      	cmp	r3, r5
 80281a6:	bfb8      	it	lt
 80281a8:	462b      	movlt	r3, r5
 80281aa:	4622      	mov	r2, r4
 80281ac:	461c      	mov	r4, r3
 80281ae:	4613      	mov	r3, r2
 80281b0:	e7e4      	b.n	802817c <_ZNK8touchgfx6Circle32getMinimalRectForUpdatedEndAngleERKNS_7CWRUtil2Q5E+0x38>
 80281b2:	42a3      	cmp	r3, r4
 80281b4:	da10      	bge.n	80281d8 <_ZNK8touchgfx6Circle32getMinimalRectForUpdatedEndAngleERKNS_7CWRUtil2Q5E+0x94>
 80281b6:	b148      	cbz	r0, 80281cc <_ZNK8touchgfx6Circle32getMinimalRectForUpdatedEndAngleERKNS_7CWRUtil2Q5E+0x88>
 80281b8:	fb94 f2f0 	sdiv	r2, r4, r0
 80281bc:	fb00 4212 	mls	r2, r0, r2, r4
 80281c0:	1a82      	subs	r2, r0, r2
 80281c2:	fb92 f7f0 	sdiv	r7, r2, r0
 80281c6:	fb00 2017 	mls	r0, r0, r7, r2
 80281ca:	4404      	add	r4, r0
 80281cc:	42a5      	cmp	r5, r4
 80281ce:	bfa8      	it	ge
 80281d0:	4625      	movge	r5, r4
 80281d2:	461c      	mov	r4, r3
 80281d4:	462b      	mov	r3, r5
 80281d6:	e7d1      	b.n	802817c <_ZNK8touchgfx6Circle32getMinimalRectForUpdatedEndAngleERKNS_7CWRUtil2Q5E+0x38>
 80281d8:	42ab      	cmp	r3, r5
 80281da:	dacf      	bge.n	802817c <_ZNK8touchgfx6Circle32getMinimalRectForUpdatedEndAngleERKNS_7CWRUtil2Q5E+0x38>
 80281dc:	2800      	cmp	r0, #0
 80281de:	d0cd      	beq.n	802817c <_ZNK8touchgfx6Circle32getMinimalRectForUpdatedEndAngleERKNS_7CWRUtil2Q5E+0x38>
 80281e0:	fb93 f2f0 	sdiv	r2, r3, r0
 80281e4:	fb00 3212 	mls	r2, r0, r2, r3
 80281e8:	1a82      	subs	r2, r0, r2
 80281ea:	fb92 f7f0 	sdiv	r7, r2, r0
 80281ee:	fb00 2017 	mls	r0, r0, r7, r2
 80281f2:	4403      	add	r3, r0
 80281f4:	42ab      	cmp	r3, r5
 80281f6:	bfa8      	it	ge
 80281f8:	462b      	movge	r3, r5
 80281fa:	e7bf      	b.n	802817c <_ZNK8touchgfx6Circle32getMinimalRectForUpdatedEndAngleERKNS_7CWRUtil2Q5E+0x38>

080281fc <_ZNK8touchgfx6Circle16drawCanvasWidgetERKNS_4RectE>:
 80281fc:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 8028200:	e9d0 560e 	ldrd	r5, r6, [r0, #56]	; 0x38
 8028204:	42ae      	cmp	r6, r5
 8028206:	bfa2      	ittt	ge
 8028208:	4633      	movge	r3, r6
 802820a:	462e      	movge	r6, r5
 802820c:	461d      	movge	r5, r3
 802820e:	1bab      	subs	r3, r5, r6
 8028210:	468b      	mov	fp, r1
 8028212:	6c01      	ldr	r1, [r0, #64]	; 0x40
 8028214:	f9b0 902c 	ldrsh.w	r9, [r0, #44]	; 0x2c
 8028218:	f9b0 a030 	ldrsh.w	sl, [r0, #48]	; 0x30
 802821c:	f5b3 5f34 	cmp.w	r3, #11520	; 0x2d00
 8028220:	f04f 0220 	mov.w	r2, #32
 8028224:	b0ab      	sub	sp, #172	; 0xac
 8028226:	4604      	mov	r4, r0
 8028228:	bfa4      	itt	ge
 802822a:	f44f 5534 	movge.w	r5, #11520	; 0x2d00
 802822e:	2600      	movge	r6, #0
 8028230:	fb99 f9f2 	sdiv	r9, r9, r2
 8028234:	fb9a faf2 	sdiv	sl, sl, r2
 8028238:	6b43      	ldr	r3, [r0, #52]	; 0x34
 802823a:	2900      	cmp	r1, #0
 802823c:	f000 80f5 	beq.w	802842a <_ZNK8touchgfx6Circle16drawCanvasWidgetERKNS_4RectE+0x22e>
 8028240:	f9bb 0000 	ldrsh.w	r0, [fp]
 8028244:	f9bb 2002 	ldrsh.w	r2, [fp, #2]
 8028248:	eba9 0700 	sub.w	r7, r9, r0
 802824c:	ea87 7ce7 	eor.w	ip, r7, r7, asr #31
 8028250:	ebac 7ce7 	sub.w	ip, ip, r7, asr #31
 8028254:	f8bb 7004 	ldrh.w	r7, [fp, #4]
 8028258:	ebaa 0802 	sub.w	r8, sl, r2
 802825c:	4407      	add	r7, r0
 802825e:	ea88 70e8 	eor.w	r0, r8, r8, asr #31
 8028262:	eba0 70e8 	sub.w	r0, r0, r8, asr #31
 8028266:	f8bb 8006 	ldrh.w	r8, [fp, #6]
 802826a:	b23f      	sxth	r7, r7
 802826c:	4490      	add	r8, r2
 802826e:	eba9 0707 	sub.w	r7, r9, r7
 8028272:	fa0f f888 	sxth.w	r8, r8
 8028276:	ebaa 0808 	sub.w	r8, sl, r8
 802827a:	2f00      	cmp	r7, #0
 802827c:	bfb8      	it	lt
 802827e:	427f      	neglt	r7, r7
 8028280:	f1b8 0f00 	cmp.w	r8, #0
 8028284:	bfb8      	it	lt
 8028286:	f1c8 0800 	rsblt	r8, r8, #0
 802828a:	45bc      	cmp	ip, r7
 802828c:	bfcc      	ite	gt
 802828e:	f10c 0701 	addgt.w	r7, ip, #1
 8028292:	3701      	addle	r7, #1
 8028294:	4540      	cmp	r0, r8
 8028296:	bfc8      	it	gt
 8028298:	f100 0801 	addgt.w	r8, r0, #1
 802829c:	f894 0044 	ldrb.w	r0, [r4, #68]	; 0x44
 80282a0:	f100 0001 	add.w	r0, r0, #1
 80282a4:	ea4f 0060 	mov.w	r0, r0, asr #1
 80282a8:	f04f 0202 	mov.w	r2, #2
 80282ac:	f1c0 005a 	rsb	r0, r0, #90	; 0x5a
 80282b0:	fb91 f1f2 	sdiv	r1, r1, r2
 80282b4:	eba3 0301 	sub.w	r3, r3, r1
 80282b8:	bfd8      	it	le
 80282ba:	f108 0801 	addle.w	r8, r8, #1
 80282be:	9201      	str	r2, [sp, #4]
 80282c0:	930d      	str	r3, [sp, #52]	; 0x34
 80282c2:	f7ea f8cb 	bl	801245c <_ZN8touchgfx7CWRUtil4sineEi>
 80282c6:	a92a      	add	r1, sp, #168	; 0xa8
 80282c8:	fb08 f808 	mul.w	r8, r8, r8
 80282cc:	f841 0d70 	str.w	r0, [r1, #-112]!
 80282d0:	a80d      	add	r0, sp, #52	; 0x34
 80282d2:	f7e9 ffab 	bl	801222c <_ZNK8touchgfx7CWRUtil2Q5mlERKNS0_3Q15E>
 80282d6:	fb07 8707 	mla	r7, r7, r7, r8
 80282da:	f04f 0c20 	mov.w	ip, #32
 80282de:	fb90 f0fc 	sdiv	r0, r0, ip
 80282e2:	4340      	muls	r0, r0
 80282e4:	4287      	cmp	r7, r0
 80282e6:	9a01      	ldr	r2, [sp, #4]
 80282e8:	da04      	bge.n	80282f4 <_ZNK8touchgfx6Circle16drawCanvasWidgetERKNS_4RectE+0xf8>
 80282ea:	2401      	movs	r4, #1
 80282ec:	4620      	mov	r0, r4
 80282ee:	b02b      	add	sp, #172	; 0xac
 80282f0:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
 80282f4:	6b60      	ldr	r0, [r4, #52]	; 0x34
 80282f6:	6c21      	ldr	r1, [r4, #64]	; 0x40
 80282f8:	fb91 f3f2 	sdiv	r3, r1, r2
 80282fc:	4403      	add	r3, r0
 80282fe:	fb93 f3fc 	sdiv	r3, r3, ip
 8028302:	f9bb 1000 	ldrsh.w	r1, [fp]
 8028306:	f8bb 2004 	ldrh.w	r2, [fp, #4]
 802830a:	440a      	add	r2, r1
 802830c:	b212      	sxth	r2, r2
 802830e:	454a      	cmp	r2, r9
 8028310:	bfa8      	it	ge
 8028312:	464a      	movge	r2, r9
 8028314:	428a      	cmp	r2, r1
 8028316:	bfac      	ite	ge
 8028318:	eba9 0902 	subge.w	r9, r9, r2
 802831c:	eba9 0901 	sublt.w	r9, r9, r1
 8028320:	f8bb 2006 	ldrh.w	r2, [fp, #6]
 8028324:	f9bb 1002 	ldrsh.w	r1, [fp, #2]
 8028328:	440a      	add	r2, r1
 802832a:	b212      	sxth	r2, r2
 802832c:	4552      	cmp	r2, sl
 802832e:	bfa8      	it	ge
 8028330:	4652      	movge	r2, sl
 8028332:	428a      	cmp	r2, r1
 8028334:	bfac      	ite	ge
 8028336:	ebaa 0a02 	subge.w	sl, sl, r2
 802833a:	ebaa 0a01 	sublt.w	sl, sl, r1
 802833e:	3301      	adds	r3, #1
 8028340:	fb0a fa0a 	mul.w	sl, sl, sl
 8028344:	fb09 a909 	mla	r9, r9, r9, sl
 8028348:	435b      	muls	r3, r3
 802834a:	4599      	cmp	r9, r3
 802834c:	dccd      	bgt.n	80282ea <_ZNK8touchgfx6Circle16drawCanvasWidgetERKNS_4RectE+0xee>
 802834e:	465a      	mov	r2, fp
 8028350:	4621      	mov	r1, r4
 8028352:	a80e      	add	r0, sp, #56	; 0x38
 8028354:	f7ff faae 	bl	80278b4 <_ZN8touchgfx6CanvasC1EPKNS_12CanvasWidgetERKNS_4RectE>
 8028358:	6b62      	ldr	r2, [r4, #52]	; 0x34
 802835a:	6c23      	ldr	r3, [r4, #64]	; 0x40
 802835c:	9209      	str	r2, [sp, #36]	; 0x24
 802835e:	ebb3 0f42 	cmp.w	r3, r2, lsl #1
 8028362:	930a      	str	r3, [sp, #40]	; 0x28
 8028364:	dd07      	ble.n	8028376 <_ZNK8touchgfx6Circle16drawCanvasWidgetERKNS_4RectE+0x17a>
 8028366:	2102      	movs	r1, #2
 8028368:	fb93 f3f1 	sdiv	r3, r3, r1
 802836c:	4413      	add	r3, r2
 802836e:	930a      	str	r3, [sp, #40]	; 0x28
 8028370:	fb93 f3f1 	sdiv	r3, r3, r1
 8028374:	9309      	str	r3, [sp, #36]	; 0x24
 8028376:	e9dd 2309 	ldrd	r2, r3, [sp, #36]	; 0x24
 802837a:	4630      	mov	r0, r6
 802837c:	eb03 0342 	add.w	r3, r3, r2, lsl #1
 8028380:	930b      	str	r3, [sp, #44]	; 0x2c
 8028382:	f894 7044 	ldrb.w	r7, [r4, #68]	; 0x44
 8028386:	f7ea f889 	bl	801249c <_ZN8touchgfx7CWRUtil4sineENS0_2Q5E>
 802838a:	f10d 09a8 	add.w	r9, sp, #168	; 0xa8
 802838e:	f04f 0a02 	mov.w	sl, #2
 8028392:	f849 0d74 	str.w	r0, [r9, #-116]!
 8028396:	a80b      	add	r0, sp, #44	; 0x2c
 8028398:	4649      	mov	r1, r9
 802839a:	f7e9 ff47 	bl	801222c <_ZNK8touchgfx7CWRUtil2Q5mlERKNS0_3Q15E>
 802839e:	6ae3      	ldr	r3, [r4, #44]	; 0x2c
 80283a0:	fb90 f0fa 	sdiv	r0, r0, sl
 80283a4:	eb00 0b03 	add.w	fp, r0, r3
 80283a8:	4630      	mov	r0, r6
 80283aa:	f7ff fcc7 	bl	8027d3c <_ZN8touchgfx7CWRUtil6cosineENS0_2Q5E>
 80283ae:	f10d 08a8 	add.w	r8, sp, #168	; 0xa8
 80283b2:	017f      	lsls	r7, r7, #5
 80283b4:	f848 0d78 	str.w	r0, [r8, #-120]!
 80283b8:	a80b      	add	r0, sp, #44	; 0x2c
 80283ba:	4641      	mov	r1, r8
 80283bc:	f7e9 ff36 	bl	801222c <_ZNK8touchgfx7CWRUtil2Q5mlERKNS0_3Q15E>
 80283c0:	6b22      	ldr	r2, [r4, #48]	; 0x30
 80283c2:	fb90 f0fa 	sdiv	r0, r0, sl
 80283c6:	4659      	mov	r1, fp
 80283c8:	1a12      	subs	r2, r2, r0
 80283ca:	a80e      	add	r0, sp, #56	; 0x38
 80283cc:	f7ff fbf2 	bl	8027bb4 <_ZN8touchgfx6Canvas6moveToENS_7CWRUtil2Q5ES2_>
 80283d0:	f106 0a20 	add.w	sl, r6, #32
 80283d4:	bb67      	cbnz	r7, 8028430 <_ZNK8touchgfx6Circle16drawCanvasWidgetERKNS_4RectE+0x234>
 80283d6:	46b3      	mov	fp, r6
 80283d8:	45aa      	cmp	sl, r5
 80283da:	9a0a      	ldr	r2, [sp, #40]	; 0x28
 80283dc:	dc33      	bgt.n	8028446 <_ZNK8touchgfx6Circle16drawCanvasWidgetERKNS_4RectE+0x24a>
 80283de:	9909      	ldr	r1, [sp, #36]	; 0x24
 80283e0:	4650      	mov	r0, sl
 80283e2:	eb02 0241 	add.w	r2, r2, r1, lsl #1
 80283e6:	920b      	str	r2, [sp, #44]	; 0x2c
 80283e8:	f7ea f858 	bl	801249c <_ZN8touchgfx7CWRUtil4sineENS0_2Q5E>
 80283ec:	4641      	mov	r1, r8
 80283ee:	900c      	str	r0, [sp, #48]	; 0x30
 80283f0:	a80b      	add	r0, sp, #44	; 0x2c
 80283f2:	f7e9 ff1b 	bl	801222c <_ZNK8touchgfx7CWRUtil2Q5mlERKNS0_3Q15E>
 80283f6:	6ae2      	ldr	r2, [r4, #44]	; 0x2c
 80283f8:	2302      	movs	r3, #2
 80283fa:	fb90 f0f3 	sdiv	r0, r0, r3
 80283fe:	eb00 0b02 	add.w	fp, r0, r2
 8028402:	4650      	mov	r0, sl
 8028404:	f7ff fc9a 	bl	8027d3c <_ZN8touchgfx7CWRUtil6cosineENS0_2Q5E>
 8028408:	4649      	mov	r1, r9
 802840a:	900d      	str	r0, [sp, #52]	; 0x34
 802840c:	a80b      	add	r0, sp, #44	; 0x2c
 802840e:	f7e9 ff0d 	bl	801222c <_ZNK8touchgfx7CWRUtil2Q5mlERKNS0_3Q15E>
 8028412:	6b22      	ldr	r2, [r4, #48]	; 0x30
 8028414:	2302      	movs	r3, #2
 8028416:	4659      	mov	r1, fp
 8028418:	fb90 f0f3 	sdiv	r0, r0, r3
 802841c:	1a12      	subs	r2, r2, r0
 802841e:	a80e      	add	r0, sp, #56	; 0x38
 8028420:	46d3      	mov	fp, sl
 8028422:	f7ff fc14 	bl	8027c4e <_ZN8touchgfx6Canvas6lineToENS_7CWRUtil2Q5ES2_>
 8028426:	44ba      	add	sl, r7
 8028428:	e7d6      	b.n	80283d8 <_ZNK8touchgfx6Circle16drawCanvasWidgetERKNS_4RectE+0x1dc>
 802842a:	fb93 f3f2 	sdiv	r3, r3, r2
 802842e:	e768      	b.n	8028302 <_ZNK8touchgfx6Circle16drawCanvasWidgetERKNS_4RectE+0x106>
 8028430:	fb9a f2f7 	sdiv	r2, sl, r7
 8028434:	fb07 a212 	mls	r2, r7, r2, sl
 8028438:	1aba      	subs	r2, r7, r2
 802843a:	fb92 f1f7 	sdiv	r1, r2, r7
 802843e:	fb07 2211 	mls	r2, r7, r1, r2
 8028442:	4492      	add	sl, r2
 8028444:	e7c7      	b.n	80283d6 <_ZNK8touchgfx6Circle16drawCanvasWidgetERKNS_4RectE+0x1da>
 8028446:	45ab      	cmp	fp, r5
 8028448:	da23      	bge.n	8028492 <_ZNK8touchgfx6Circle16drawCanvasWidgetERKNS_4RectE+0x296>
 802844a:	9b09      	ldr	r3, [sp, #36]	; 0x24
 802844c:	4628      	mov	r0, r5
 802844e:	eb02 0243 	add.w	r2, r2, r3, lsl #1
 8028452:	920b      	str	r2, [sp, #44]	; 0x2c
 8028454:	f7ea f822 	bl	801249c <_ZN8touchgfx7CWRUtil4sineENS0_2Q5E>
 8028458:	4641      	mov	r1, r8
 802845a:	900c      	str	r0, [sp, #48]	; 0x30
 802845c:	a80b      	add	r0, sp, #44	; 0x2c
 802845e:	f7e9 fee5 	bl	801222c <_ZNK8touchgfx7CWRUtil2Q5mlERKNS0_3Q15E>
 8028462:	6ae3      	ldr	r3, [r4, #44]	; 0x2c
 8028464:	f04f 0a02 	mov.w	sl, #2
 8028468:	fb90 f0fa 	sdiv	r0, r0, sl
 802846c:	4403      	add	r3, r0
 802846e:	4628      	mov	r0, r5
 8028470:	9301      	str	r3, [sp, #4]
 8028472:	f7ff fc63 	bl	8027d3c <_ZN8touchgfx7CWRUtil6cosineENS0_2Q5E>
 8028476:	4649      	mov	r1, r9
 8028478:	900d      	str	r0, [sp, #52]	; 0x34
 802847a:	a80b      	add	r0, sp, #44	; 0x2c
 802847c:	f7e9 fed6 	bl	801222c <_ZNK8touchgfx7CWRUtil2Q5mlERKNS0_3Q15E>
 8028480:	6b22      	ldr	r2, [r4, #48]	; 0x30
 8028482:	9b01      	ldr	r3, [sp, #4]
 8028484:	fb90 f0fa 	sdiv	r0, r0, sl
 8028488:	4619      	mov	r1, r3
 802848a:	1a12      	subs	r2, r2, r0
 802848c:	a80e      	add	r0, sp, #56	; 0x38
 802848e:	f7ff fbde 	bl	8027c4e <_ZN8touchgfx6Canvas6lineToENS_7CWRUtil2Q5ES2_>
 8028492:	9b0a      	ldr	r3, [sp, #40]	; 0x28
 8028494:	b99b      	cbnz	r3, 80284be <_ZNK8touchgfx6Circle16drawCanvasWidgetERKNS_4RectE+0x2c2>
 8028496:	1bad      	subs	r5, r5, r6
 8028498:	f5b5 5f34 	cmp.w	r5, #11520	; 0x2d00
 802849c:	da04      	bge.n	80284a8 <_ZNK8touchgfx6Circle16drawCanvasWidgetERKNS_4RectE+0x2ac>
 802849e:	e9d4 120b 	ldrd	r1, r2, [r4, #44]	; 0x2c
 80284a2:	a80e      	add	r0, sp, #56	; 0x38
 80284a4:	f7ff fbd3 	bl	8027c4e <_ZN8touchgfx6Canvas6lineToENS_7CWRUtil2Q5ES2_>
 80284a8:	21ff      	movs	r1, #255	; 0xff
 80284aa:	a80e      	add	r0, sp, #56	; 0x38
 80284ac:	f7ff fabe 	bl	8027a2c <_ZN8touchgfx6Canvas6renderEh>
 80284b0:	4604      	mov	r4, r0
 80284b2:	4b8a      	ldr	r3, [pc, #552]	; (80286dc <_ZNK8touchgfx6Circle16drawCanvasWidgetERKNS_4RectE+0x4e0>)
 80284b4:	930e      	str	r3, [sp, #56]	; 0x38
 80284b6:	a816      	add	r0, sp, #88	; 0x58
 80284b8:	f7eb fcf0 	bl	8013e9c <_ZN8touchgfx7OutlineD1Ev>
 80284bc:	e716      	b.n	80282ec <_ZNK8touchgfx6Circle16drawCanvasWidgetERKNS_4RectE+0xf0>
 80284be:	e9dd 2317 	ldrd	r2, r3, [sp, #92]	; 0x5c
 80284c2:	429a      	cmp	r2, r3
 80284c4:	f0c0 8107 	bcc.w	80286d6 <_ZNK8touchgfx6Circle16drawCanvasWidgetERKNS_4RectE+0x4da>
 80284c8:	1bab      	subs	r3, r5, r6
 80284ca:	f894 a045 	ldrb.w	sl, [r4, #69]	; 0x45
 80284ce:	9301      	str	r3, [sp, #4]
 80284d0:	f5b3 5f34 	cmp.w	r3, #11520	; 0x2d00
 80284d4:	ea4f 1a4a 	mov.w	sl, sl, lsl #5
 80284d8:	da43      	bge.n	8028562 <_ZNK8touchgfx6Circle16drawCanvasWidgetERKNS_4RectE+0x366>
 80284da:	4628      	mov	r0, r5
 80284dc:	f7e9 ffde 	bl	801249c <_ZN8touchgfx7CWRUtil4sineENS0_2Q5E>
 80284e0:	4649      	mov	r1, r9
 80284e2:	900d      	str	r0, [sp, #52]	; 0x34
 80284e4:	a809      	add	r0, sp, #36	; 0x24
 80284e6:	f7e9 fea1 	bl	801222c <_ZNK8touchgfx7CWRUtil2Q5mlERKNS0_3Q15E>
 80284ea:	6ae3      	ldr	r3, [r4, #44]	; 0x2c
 80284ec:	18c3      	adds	r3, r0, r3
 80284ee:	4628      	mov	r0, r5
 80284f0:	9303      	str	r3, [sp, #12]
 80284f2:	f7ff fc23 	bl	8027d3c <_ZN8touchgfx7CWRUtil6cosineENS0_2Q5E>
 80284f6:	4649      	mov	r1, r9
 80284f8:	900d      	str	r0, [sp, #52]	; 0x34
 80284fa:	a809      	add	r0, sp, #36	; 0x24
 80284fc:	f7e9 fe96 	bl	801222c <_ZNK8touchgfx7CWRUtil2Q5mlERKNS0_3Q15E>
 8028500:	6b23      	ldr	r3, [r4, #48]	; 0x30
 8028502:	f505 52b4 	add.w	r2, r5, #5760	; 0x1680
 8028506:	1a1b      	subs	r3, r3, r0
 8028508:	9302      	str	r3, [sp, #8]
 802850a:	9204      	str	r2, [sp, #16]
 802850c:	eb0a 0305 	add.w	r3, sl, r5
 8028510:	9a04      	ldr	r2, [sp, #16]
 8028512:	4293      	cmp	r3, r2
 8028514:	da25      	bge.n	8028562 <_ZNK8touchgfx6Circle16drawCanvasWidgetERKNS_4RectE+0x366>
 8028516:	4618      	mov	r0, r3
 8028518:	9306      	str	r3, [sp, #24]
 802851a:	f7e9 ffbf 	bl	801249c <_ZN8touchgfx7CWRUtil4sineENS0_2Q5E>
 802851e:	4649      	mov	r1, r9
 8028520:	900d      	str	r0, [sp, #52]	; 0x34
 8028522:	a80a      	add	r0, sp, #40	; 0x28
 8028524:	f7e9 fe82 	bl	801222c <_ZNK8touchgfx7CWRUtil2Q5mlERKNS0_3Q15E>
 8028528:	9b03      	ldr	r3, [sp, #12]
 802852a:	2202      	movs	r2, #2
 802852c:	fb90 f0f2 	sdiv	r0, r0, r2
 8028530:	18c3      	adds	r3, r0, r3
 8028532:	9305      	str	r3, [sp, #20]
 8028534:	9b06      	ldr	r3, [sp, #24]
 8028536:	9207      	str	r2, [sp, #28]
 8028538:	4618      	mov	r0, r3
 802853a:	f7ff fbff 	bl	8027d3c <_ZN8touchgfx7CWRUtil6cosineENS0_2Q5E>
 802853e:	a92a      	add	r1, sp, #168	; 0xa8
 8028540:	f841 0d78 	str.w	r0, [r1, #-120]!
 8028544:	a80a      	add	r0, sp, #40	; 0x28
 8028546:	f7e9 fe71 	bl	801222c <_ZNK8touchgfx7CWRUtil2Q5mlERKNS0_3Q15E>
 802854a:	9b02      	ldr	r3, [sp, #8]
 802854c:	9a07      	ldr	r2, [sp, #28]
 802854e:	9905      	ldr	r1, [sp, #20]
 8028550:	fb90 f2f2 	sdiv	r2, r0, r2
 8028554:	a80e      	add	r0, sp, #56	; 0x38
 8028556:	1a9a      	subs	r2, r3, r2
 8028558:	f7ff fb79 	bl	8027c4e <_ZN8touchgfx6Canvas6lineToENS_7CWRUtil2Q5ES2_>
 802855c:	9b06      	ldr	r3, [sp, #24]
 802855e:	4453      	add	r3, sl
 8028560:	e7d6      	b.n	8028510 <_ZNK8touchgfx6Circle16drawCanvasWidgetERKNS_4RectE+0x314>
 8028562:	45ab      	cmp	fp, r5
 8028564:	da25      	bge.n	80285b2 <_ZNK8touchgfx6Circle16drawCanvasWidgetERKNS_4RectE+0x3b6>
 8028566:	e9dd 2309 	ldrd	r2, r3, [sp, #36]	; 0x24
 802856a:	4628      	mov	r0, r5
 802856c:	ebc3 0342 	rsb	r3, r3, r2, lsl #1
 8028570:	930b      	str	r3, [sp, #44]	; 0x2c
 8028572:	f7e9 ff93 	bl	801249c <_ZN8touchgfx7CWRUtil4sineENS0_2Q5E>
 8028576:	4641      	mov	r1, r8
 8028578:	900c      	str	r0, [sp, #48]	; 0x30
 802857a:	a80b      	add	r0, sp, #44	; 0x2c
 802857c:	f7e9 fe56 	bl	801222c <_ZNK8touchgfx7CWRUtil2Q5mlERKNS0_3Q15E>
 8028580:	6ae3      	ldr	r3, [r4, #44]	; 0x2c
 8028582:	2202      	movs	r2, #2
 8028584:	fb90 f0f2 	sdiv	r0, r0, r2
 8028588:	eb00 0903 	add.w	r9, r0, r3
 802858c:	4628      	mov	r0, r5
 802858e:	9202      	str	r2, [sp, #8]
 8028590:	f7ff fbd4 	bl	8027d3c <_ZN8touchgfx7CWRUtil6cosineENS0_2Q5E>
 8028594:	a92a      	add	r1, sp, #168	; 0xa8
 8028596:	f841 0d74 	str.w	r0, [r1, #-116]!
 802859a:	a80b      	add	r0, sp, #44	; 0x2c
 802859c:	f7e9 fe46 	bl	801222c <_ZNK8touchgfx7CWRUtil2Q5mlERKNS0_3Q15E>
 80285a0:	6b23      	ldr	r3, [r4, #48]	; 0x30
 80285a2:	9a02      	ldr	r2, [sp, #8]
 80285a4:	fb90 f2f2 	sdiv	r2, r0, r2
 80285a8:	4649      	mov	r1, r9
 80285aa:	1a9a      	subs	r2, r3, r2
 80285ac:	a80e      	add	r0, sp, #56	; 0x38
 80285ae:	f7ff fb4e 	bl	8027c4e <_ZN8touchgfx6Canvas6lineToENS_7CWRUtil2Q5ES2_>
 80285b2:	46d9      	mov	r9, fp
 80285b4:	2502      	movs	r5, #2
 80285b6:	45b1      	cmp	r9, r6
 80285b8:	db25      	blt.n	8028606 <_ZNK8touchgfx6Circle16drawCanvasWidgetERKNS_4RectE+0x40a>
 80285ba:	e9dd 2309 	ldrd	r2, r3, [sp, #36]	; 0x24
 80285be:	4648      	mov	r0, r9
 80285c0:	ebc3 0342 	rsb	r3, r3, r2, lsl #1
 80285c4:	930b      	str	r3, [sp, #44]	; 0x2c
 80285c6:	f7e9 ff69 	bl	801249c <_ZN8touchgfx7CWRUtil4sineENS0_2Q5E>
 80285ca:	4641      	mov	r1, r8
 80285cc:	900c      	str	r0, [sp, #48]	; 0x30
 80285ce:	a80b      	add	r0, sp, #44	; 0x2c
 80285d0:	f7e9 fe2c 	bl	801222c <_ZNK8touchgfx7CWRUtil2Q5mlERKNS0_3Q15E>
 80285d4:	6ae3      	ldr	r3, [r4, #44]	; 0x2c
 80285d6:	fb90 f0f5 	sdiv	r0, r0, r5
 80285da:	eb00 0b03 	add.w	fp, r0, r3
 80285de:	4648      	mov	r0, r9
 80285e0:	f7ff fbac 	bl	8027d3c <_ZN8touchgfx7CWRUtil6cosineENS0_2Q5E>
 80285e4:	a90d      	add	r1, sp, #52	; 0x34
 80285e6:	900d      	str	r0, [sp, #52]	; 0x34
 80285e8:	a80b      	add	r0, sp, #44	; 0x2c
 80285ea:	f7e9 fe1f 	bl	801222c <_ZNK8touchgfx7CWRUtil2Q5mlERKNS0_3Q15E>
 80285ee:	6b22      	ldr	r2, [r4, #48]	; 0x30
 80285f0:	fb90 f0f5 	sdiv	r0, r0, r5
 80285f4:	4659      	mov	r1, fp
 80285f6:	1a12      	subs	r2, r2, r0
 80285f8:	a80e      	add	r0, sp, #56	; 0x38
 80285fa:	46cb      	mov	fp, r9
 80285fc:	f7ff fb27 	bl	8027c4e <_ZN8touchgfx6Canvas6lineToENS_7CWRUtil2Q5ES2_>
 8028600:	eba9 0907 	sub.w	r9, r9, r7
 8028604:	e7d7      	b.n	80285b6 <_ZNK8touchgfx6Circle16drawCanvasWidgetERKNS_4RectE+0x3ba>
 8028606:	455e      	cmp	r6, fp
 8028608:	da22      	bge.n	8028650 <_ZNK8touchgfx6Circle16drawCanvasWidgetERKNS_4RectE+0x454>
 802860a:	e9dd 2309 	ldrd	r2, r3, [sp, #36]	; 0x24
 802860e:	4630      	mov	r0, r6
 8028610:	ebc3 0342 	rsb	r3, r3, r2, lsl #1
 8028614:	930b      	str	r3, [sp, #44]	; 0x2c
 8028616:	f7e9 ff41 	bl	801249c <_ZN8touchgfx7CWRUtil4sineENS0_2Q5E>
 802861a:	4641      	mov	r1, r8
 802861c:	900c      	str	r0, [sp, #48]	; 0x30
 802861e:	a80b      	add	r0, sp, #44	; 0x2c
 8028620:	f7e9 fe04 	bl	801222c <_ZNK8touchgfx7CWRUtil2Q5mlERKNS0_3Q15E>
 8028624:	6ae7      	ldr	r7, [r4, #44]	; 0x2c
 8028626:	2502      	movs	r5, #2
 8028628:	fb90 f0f5 	sdiv	r0, r0, r5
 802862c:	4407      	add	r7, r0
 802862e:	4630      	mov	r0, r6
 8028630:	f7ff fb84 	bl	8027d3c <_ZN8touchgfx7CWRUtil6cosineENS0_2Q5E>
 8028634:	a92a      	add	r1, sp, #168	; 0xa8
 8028636:	f841 0d74 	str.w	r0, [r1, #-116]!
 802863a:	a80b      	add	r0, sp, #44	; 0x2c
 802863c:	f7e9 fdf6 	bl	801222c <_ZNK8touchgfx7CWRUtil2Q5mlERKNS0_3Q15E>
 8028640:	6b22      	ldr	r2, [r4, #48]	; 0x30
 8028642:	fb90 f0f5 	sdiv	r0, r0, r5
 8028646:	4639      	mov	r1, r7
 8028648:	1a12      	subs	r2, r2, r0
 802864a:	a80e      	add	r0, sp, #56	; 0x38
 802864c:	f7ff faff 	bl	8027c4e <_ZN8touchgfx6Canvas6lineToENS_7CWRUtil2Q5ES2_>
 8028650:	9b01      	ldr	r3, [sp, #4]
 8028652:	f5b3 5f34 	cmp.w	r3, #11520	; 0x2d00
 8028656:	f6bf af27 	bge.w	80284a8 <_ZNK8touchgfx6Circle16drawCanvasWidgetERKNS_4RectE+0x2ac>
 802865a:	4630      	mov	r0, r6
 802865c:	f7e9 ff1e 	bl	801249c <_ZN8touchgfx7CWRUtil4sineENS0_2Q5E>
 8028660:	ad2a      	add	r5, sp, #168	; 0xa8
 8028662:	f04f 0b02 	mov.w	fp, #2
 8028666:	f845 0d74 	str.w	r0, [r5, #-116]!
 802866a:	a809      	add	r0, sp, #36	; 0x24
 802866c:	4629      	mov	r1, r5
 802866e:	f7e9 fddd 	bl	801222c <_ZNK8touchgfx7CWRUtil2Q5mlERKNS0_3Q15E>
 8028672:	6ae3      	ldr	r3, [r4, #44]	; 0x2c
 8028674:	eb00 0903 	add.w	r9, r0, r3
 8028678:	4630      	mov	r0, r6
 802867a:	f7ff fb5f 	bl	8027d3c <_ZN8touchgfx7CWRUtil6cosineENS0_2Q5E>
 802867e:	4629      	mov	r1, r5
 8028680:	900d      	str	r0, [sp, #52]	; 0x34
 8028682:	a809      	add	r0, sp, #36	; 0x24
 8028684:	f7e9 fdd2 	bl	801222c <_ZNK8touchgfx7CWRUtil2Q5mlERKNS0_3Q15E>
 8028688:	6b23      	ldr	r3, [r4, #48]	; 0x30
 802868a:	f5a6 54b4 	sub.w	r4, r6, #5760	; 0x1680
 802868e:	eba3 0800 	sub.w	r8, r3, r0
 8028692:	4454      	add	r4, sl
 8028694:	42a6      	cmp	r6, r4
 8028696:	f77f af07 	ble.w	80284a8 <_ZNK8touchgfx6Circle16drawCanvasWidgetERKNS_4RectE+0x2ac>
 802869a:	4620      	mov	r0, r4
 802869c:	f7e9 fefe 	bl	801249c <_ZN8touchgfx7CWRUtil4sineENS0_2Q5E>
 80286a0:	4629      	mov	r1, r5
 80286a2:	900d      	str	r0, [sp, #52]	; 0x34
 80286a4:	a80a      	add	r0, sp, #40	; 0x28
 80286a6:	f7e9 fdc1 	bl	801222c <_ZNK8touchgfx7CWRUtil2Q5mlERKNS0_3Q15E>
 80286aa:	fb90 f0fb 	sdiv	r0, r0, fp
 80286ae:	eb00 0709 	add.w	r7, r0, r9
 80286b2:	4620      	mov	r0, r4
 80286b4:	f7ff fb42 	bl	8027d3c <_ZN8touchgfx7CWRUtil6cosineENS0_2Q5E>
 80286b8:	a90c      	add	r1, sp, #48	; 0x30
 80286ba:	900c      	str	r0, [sp, #48]	; 0x30
 80286bc:	a80a      	add	r0, sp, #40	; 0x28
 80286be:	f7e9 fdb5 	bl	801222c <_ZNK8touchgfx7CWRUtil2Q5mlERKNS0_3Q15E>
 80286c2:	4639      	mov	r1, r7
 80286c4:	fb90 f2fb 	sdiv	r2, r0, fp
 80286c8:	a80e      	add	r0, sp, #56	; 0x38
 80286ca:	eba8 0202 	sub.w	r2, r8, r2
 80286ce:	f7ff fabe 	bl	8027c4e <_ZN8touchgfx6Canvas6lineToENS_7CWRUtil2Q5ES2_>
 80286d2:	4454      	add	r4, sl
 80286d4:	e7de      	b.n	8028694 <_ZNK8touchgfx6Circle16drawCanvasWidgetERKNS_4RectE+0x498>
 80286d6:	2400      	movs	r4, #0
 80286d8:	e6eb      	b.n	80284b2 <_ZNK8touchgfx6Circle16drawCanvasWidgetERKNS_4RectE+0x2b6>
 80286da:	bf00      	nop
 80286dc:	0802fbe8 	.word	0x0802fbe8

080286e0 <_ZN8touchgfx14AbstractButton16handleClickEventERKNS_10ClickEventE>:
 80286e0:	b570      	push	{r4, r5, r6, lr}
 80286e2:	790b      	ldrb	r3, [r1, #4]
 80286e4:	f890 502c 	ldrb.w	r5, [r0, #44]	; 0x2c
 80286e8:	2b00      	cmp	r3, #0
 80286ea:	bf0c      	ite	eq
 80286ec:	2301      	moveq	r3, #1
 80286ee:	2300      	movne	r3, #0
 80286f0:	4604      	mov	r4, r0
 80286f2:	460e      	mov	r6, r1
 80286f4:	f880 302c 	strb.w	r3, [r0, #44]	; 0x2c
 80286f8:	d109      	bne.n	802870e <_ZN8touchgfx14AbstractButton16handleClickEventERKNS_10ClickEventE+0x2e>
 80286fa:	b14d      	cbz	r5, 8028710 <_ZN8touchgfx14AbstractButton16handleClickEventERKNS_10ClickEventE+0x30>
 80286fc:	7933      	ldrb	r3, [r6, #4]
 80286fe:	2b01      	cmp	r3, #1
 8028700:	d10c      	bne.n	802871c <_ZN8touchgfx14AbstractButton16handleClickEventERKNS_10ClickEventE+0x3c>
 8028702:	6823      	ldr	r3, [r4, #0]
 8028704:	4620      	mov	r0, r4
 8028706:	6e1b      	ldr	r3, [r3, #96]	; 0x60
 8028708:	e8bd 4070 	ldmia.w	sp!, {r4, r5, r6, lr}
 802870c:	4718      	bx	r3
 802870e:	b12d      	cbz	r5, 802871c <_ZN8touchgfx14AbstractButton16handleClickEventERKNS_10ClickEventE+0x3c>
 8028710:	6823      	ldr	r3, [r4, #0]
 8028712:	4620      	mov	r0, r4
 8028714:	695b      	ldr	r3, [r3, #20]
 8028716:	4798      	blx	r3
 8028718:	2d00      	cmp	r5, #0
 802871a:	d1ef      	bne.n	80286fc <_ZN8touchgfx14AbstractButton16handleClickEventERKNS_10ClickEventE+0x1c>
 802871c:	bd70      	pop	{r4, r5, r6, pc}

0802871e <_ZN8touchgfx13TextureMapper21setRenderingAlgorithmENS0_18RenderingAlgorithmE>:
 802871e:	f880 1029 	strb.w	r1, [r0, #41]	; 0x29
 8028722:	4770      	bx	lr

08028724 <_ZNK8touchgfx13TextureMapper21getRenderingAlgorithmEv>:
 8028724:	f890 0029 	ldrb.w	r0, [r0, #41]	; 0x29
 8028728:	4770      	bx	lr

0802872a <_ZN8touchgfx13TextureMapper9setXAngleEf>:
 802872a:	6802      	ldr	r2, [r0, #0]
 802872c:	ed90 1a0f 	vldr	s2, [r0, #60]	; 0x3c
 8028730:	6ed2      	ldr	r2, [r2, #108]	; 0x6c
 8028732:	edd0 0a0e 	vldr	s1, [r0, #56]	; 0x38
 8028736:	4710      	bx	r2

08028738 <_ZN8touchgfx13TextureMapper9setYAngleEf>:
 8028738:	6802      	ldr	r2, [r0, #0]
 802873a:	ed90 1a0f 	vldr	s2, [r0, #60]	; 0x3c
 802873e:	6ed2      	ldr	r2, [r2, #108]	; 0x6c
 8028740:	eef0 0a40 	vmov.f32	s1, s0
 8028744:	ed90 0a0d 	vldr	s0, [r0, #52]	; 0x34
 8028748:	4710      	bx	r2

0802874a <_ZN8touchgfx13TextureMapper9setZAngleEf>:
 802874a:	6802      	ldr	r2, [r0, #0]
 802874c:	edd0 0a0e 	vldr	s1, [r0, #56]	; 0x38
 8028750:	6ed2      	ldr	r2, [r2, #108]	; 0x6c
 8028752:	eeb0 1a40 	vmov.f32	s2, s0
 8028756:	ed90 0a0d 	vldr	s0, [r0, #52]	; 0x34
 802875a:	4710      	bx	r2

0802875c <_ZN8touchgfx13TextureMapper12updateXAngleEf>:
 802875c:	6802      	ldr	r2, [r0, #0]
 802875e:	ed90 1a0f 	vldr	s2, [r0, #60]	; 0x3c
 8028762:	6fd2      	ldr	r2, [r2, #124]	; 0x7c
 8028764:	edd0 0a0e 	vldr	s1, [r0, #56]	; 0x38
 8028768:	4710      	bx	r2

0802876a <_ZN8touchgfx13TextureMapper12updateYAngleEf>:
 802876a:	6802      	ldr	r2, [r0, #0]
 802876c:	ed90 1a0f 	vldr	s2, [r0, #60]	; 0x3c
 8028770:	6fd2      	ldr	r2, [r2, #124]	; 0x7c
 8028772:	eef0 0a40 	vmov.f32	s1, s0
 8028776:	ed90 0a0d 	vldr	s0, [r0, #52]	; 0x34
 802877a:	4710      	bx	r2

0802877c <_ZN8touchgfx13TextureMapper12updateZAngleEf>:
 802877c:	6802      	ldr	r2, [r0, #0]
 802877e:	edd0 0a0e 	vldr	s1, [r0, #56]	; 0x38
 8028782:	6fd2      	ldr	r2, [r2, #124]	; 0x7c
 8028784:	eeb0 1a40 	vmov.f32	s2, s0
 8028788:	ed90 0a0d 	vldr	s0, [r0, #52]	; 0x34
 802878c:	4710      	bx	r2

0802878e <_ZNK8touchgfx13TextureMapper9getXAngleEv>:
 802878e:	ed90 0a0d 	vldr	s0, [r0, #52]	; 0x34
 8028792:	4770      	bx	lr

08028794 <_ZNK8touchgfx13TextureMapper9getYAngleEv>:
 8028794:	ed90 0a0e 	vldr	s0, [r0, #56]	; 0x38
 8028798:	4770      	bx	lr

0802879a <_ZNK8touchgfx13TextureMapper9getZAngleEv>:
 802879a:	ed90 0a0f 	vldr	s0, [r0, #60]	; 0x3c
 802879e:	4770      	bx	lr

080287a0 <_ZNK8touchgfx13TextureMapper8getScaleEv>:
 80287a0:	ed90 0a10 	vldr	s0, [r0, #64]	; 0x40
 80287a4:	4770      	bx	lr

080287a6 <_ZNK8touchgfx13TextureMapper9getOrigoXEv>:
 80287a6:	ed90 0a11 	vldr	s0, [r0, #68]	; 0x44
 80287aa:	4770      	bx	lr

080287ac <_ZNK8touchgfx13TextureMapper9getOrigoYEv>:
 80287ac:	ed90 0a12 	vldr	s0, [r0, #72]	; 0x48
 80287b0:	4770      	bx	lr

080287b2 <_ZNK8touchgfx13TextureMapper9getOrigoZEv>:
 80287b2:	ed90 0a13 	vldr	s0, [r0, #76]	; 0x4c
 80287b6:	4770      	bx	lr

080287b8 <_ZNK8touchgfx13TextureMapper10getCameraXEv>:
 80287b8:	ed90 0a14 	vldr	s0, [r0, #80]	; 0x50
 80287bc:	4770      	bx	lr

080287be <_ZNK8touchgfx13TextureMapper10getCameraYEv>:
 80287be:	ed90 0a15 	vldr	s0, [r0, #84]	; 0x54
 80287c2:	4770      	bx	lr

080287c4 <_ZNK8touchgfx13TextureMapper17getCameraDistanceEv>:
 80287c4:	ed90 0a16 	vldr	s0, [r0, #88]	; 0x58
 80287c8:	4770      	bx	lr

080287ca <_ZN8touchgfx13TextureMapper17setBitmapPositionEii>:
 80287ca:	ee07 2a90 	vmov	s15, r2
 80287ce:	6803      	ldr	r3, [r0, #0]
 80287d0:	eef8 0ae7 	vcvt.f32.s32	s1, s15
 80287d4:	ee07 1a90 	vmov	s15, r1
 80287d8:	f8d3 30cc 	ldr.w	r3, [r3, #204]	; 0xcc
 80287dc:	eeb8 0ae7 	vcvt.f32.s32	s0, s15
 80287e0:	4718      	bx	r3

080287e2 <_ZNK8touchgfx13TextureMapper18getBitmapPositionXEv>:
 80287e2:	ed90 0a0b 	vldr	s0, [r0, #44]	; 0x2c
 80287e6:	4770      	bx	lr

080287e8 <_ZNK8touchgfx13TextureMapper18getBitmapPositionYEv>:
 80287e8:	ed90 0a0c 	vldr	s0, [r0, #48]	; 0x30
 80287ec:	4770      	bx	lr

080287ee <_ZNK8touchgfx13TextureMapper5getX0Ev>:
 80287ee:	ed90 0a17 	vldr	s0, [r0, #92]	; 0x5c
 80287f2:	4770      	bx	lr

080287f4 <_ZNK8touchgfx13TextureMapper5getX1Ev>:
 80287f4:	ed90 0a1a 	vldr	s0, [r0, #104]	; 0x68
 80287f8:	4770      	bx	lr

080287fa <_ZNK8touchgfx13TextureMapper5getX2Ev>:
 80287fa:	ed90 0a1d 	vldr	s0, [r0, #116]	; 0x74
 80287fe:	4770      	bx	lr

08028800 <_ZNK8touchgfx13TextureMapper5getX3Ev>:
 8028800:	ed90 0a20 	vldr	s0, [r0, #128]	; 0x80
 8028804:	4770      	bx	lr

08028806 <_ZNK8touchgfx13TextureMapper5getY0Ev>:
 8028806:	ed90 0a18 	vldr	s0, [r0, #96]	; 0x60
 802880a:	4770      	bx	lr

0802880c <_ZNK8touchgfx13TextureMapper5getY1Ev>:
 802880c:	ed90 0a1b 	vldr	s0, [r0, #108]	; 0x6c
 8028810:	4770      	bx	lr

08028812 <_ZNK8touchgfx13TextureMapper5getY2Ev>:
 8028812:	ed90 0a1e 	vldr	s0, [r0, #120]	; 0x78
 8028816:	4770      	bx	lr

08028818 <_ZNK8touchgfx13TextureMapper5getY3Ev>:
 8028818:	ed90 0a21 	vldr	s0, [r0, #132]	; 0x84
 802881c:	4770      	bx	lr

0802881e <_ZNK8touchgfx13TextureMapper5getZ0Ev>:
 802881e:	ed90 0a19 	vldr	s0, [r0, #100]	; 0x64
 8028822:	4770      	bx	lr

08028824 <_ZNK8touchgfx13TextureMapper5getZ1Ev>:
 8028824:	ed90 0a1c 	vldr	s0, [r0, #112]	; 0x70
 8028828:	4770      	bx	lr

0802882a <_ZNK8touchgfx13TextureMapper5getZ2Ev>:
 802882a:	ed90 0a1f 	vldr	s0, [r0, #124]	; 0x7c
 802882e:	4770      	bx	lr

08028830 <_ZNK8touchgfx13TextureMapper5getZ3Ev>:
 8028830:	ed90 0a22 	vldr	s0, [r0, #136]	; 0x88
 8028834:	4770      	bx	lr

08028836 <_ZN8touchgfx13TextureMapper12updateAnglesEfff>:
 8028836:	b510      	push	{r4, lr}
 8028838:	ed2d 8b04 	vpush	{d8-d9}
 802883c:	6803      	ldr	r3, [r0, #0]
 802883e:	4604      	mov	r4, r0
 8028840:	699b      	ldr	r3, [r3, #24]
 8028842:	eeb0 8a40 	vmov.f32	s16, s0
 8028846:	eef0 8a60 	vmov.f32	s17, s1
 802884a:	eeb0 9a41 	vmov.f32	s18, s2
 802884e:	4798      	blx	r3
 8028850:	6823      	ldr	r3, [r4, #0]
 8028852:	4620      	mov	r0, r4
 8028854:	6edb      	ldr	r3, [r3, #108]	; 0x6c
 8028856:	eeb0 1a49 	vmov.f32	s2, s18
 802885a:	eef0 0a68 	vmov.f32	s1, s17
 802885e:	eeb0 0a48 	vmov.f32	s0, s16
 8028862:	4798      	blx	r3
 8028864:	ecbd 8b04 	vpop	{d8-d9}
 8028868:	6823      	ldr	r3, [r4, #0]
 802886a:	4620      	mov	r0, r4
 802886c:	699b      	ldr	r3, [r3, #24]
 802886e:	e8bd 4010 	ldmia.w	sp!, {r4, lr}
 8028872:	4718      	bx	r3

08028874 <_ZN8touchgfx13TextureMapper11updateScaleEf>:
 8028874:	b510      	push	{r4, lr}
 8028876:	ed2d 8b02 	vpush	{d8}
 802887a:	6803      	ldr	r3, [r0, #0]
 802887c:	4604      	mov	r4, r0
 802887e:	699b      	ldr	r3, [r3, #24]
 8028880:	eeb0 8a40 	vmov.f32	s16, s0
 8028884:	4798      	blx	r3
 8028886:	6823      	ldr	r3, [r4, #0]
 8028888:	4620      	mov	r0, r4
 802888a:	f8d3 3098 	ldr.w	r3, [r3, #152]	; 0x98
 802888e:	eeb0 0a48 	vmov.f32	s0, s16
 8028892:	4798      	blx	r3
 8028894:	ecbd 8b02 	vpop	{d8}
 8028898:	6823      	ldr	r3, [r4, #0]
 802889a:	4620      	mov	r0, r4
 802889c:	699b      	ldr	r3, [r3, #24]
 802889e:	e8bd 4010 	ldmia.w	sp!, {r4, lr}
 80288a2:	4718      	bx	r3

080288a4 <_ZNK8touchgfx13TextureMapper12getSolidRectEv>:
 80288a4:	2200      	movs	r2, #0
 80288a6:	8002      	strh	r2, [r0, #0]
 80288a8:	8042      	strh	r2, [r0, #2]
 80288aa:	8082      	strh	r2, [r0, #4]
 80288ac:	80c2      	strh	r2, [r0, #6]
 80288ae:	4770      	bx	lr

080288b0 <_ZN8touchgfx13TextureMapperD1Ev>:
 80288b0:	4770      	bx	lr

080288b2 <_ZN8touchgfx13TextureMapperD0Ev>:
 80288b2:	b510      	push	{r4, lr}
 80288b4:	2190      	movs	r1, #144	; 0x90
 80288b6:	4604      	mov	r4, r0
 80288b8:	f001 ff3f 	bl	802a73a <_ZdlPvj>
 80288bc:	4620      	mov	r0, r4
 80288be:	bd10      	pop	{r4, pc}

080288c0 <_ZN8touchgfx13TextureMapperC1ERKNS_6BitmapE>:
 80288c0:	b538      	push	{r3, r4, r5, lr}
 80288c2:	2500      	movs	r5, #0
 80288c4:	e9c0 5505 	strd	r5, r5, [r0, #20]
 80288c8:	2301      	movs	r3, #1
 80288ca:	f880 3025 	strb.w	r3, [r0, #37]	; 0x25
 80288ce:	4b1f      	ldr	r3, [pc, #124]	; (802894c <_ZN8touchgfx13TextureMapperC1ERKNS_6BitmapE+0x8c>)
 80288d0:	8085      	strh	r5, [r0, #4]
 80288d2:	80c5      	strh	r5, [r0, #6]
 80288d4:	8105      	strh	r5, [r0, #8]
 80288d6:	8145      	strh	r5, [r0, #10]
 80288d8:	8185      	strh	r5, [r0, #12]
 80288da:	81c5      	strh	r5, [r0, #14]
 80288dc:	8205      	strh	r5, [r0, #16]
 80288de:	8245      	strh	r5, [r0, #18]
 80288e0:	61c5      	str	r5, [r0, #28]
 80288e2:	8405      	strh	r5, [r0, #32]
 80288e4:	8445      	strh	r5, [r0, #34]	; 0x22
 80288e6:	f880 5024 	strb.w	r5, [r0, #36]	; 0x24
 80288ea:	6003      	str	r3, [r0, #0]
 80288ec:	880b      	ldrh	r3, [r1, #0]
 80288ee:	84c3      	strh	r3, [r0, #38]	; 0x26
 80288f0:	23ff      	movs	r3, #255	; 0xff
 80288f2:	4604      	mov	r4, r0
 80288f4:	f880 3028 	strb.w	r3, [r0, #40]	; 0x28
 80288f8:	f7eb f96b 	bl	8013bd2 <_ZN8touchgfx5Image9setBitmapERKNS_6BitmapE>
 80288fc:	4b14      	ldr	r3, [pc, #80]	; (8028950 <_ZN8touchgfx13TextureMapperC1ERKNS_6BitmapE+0x90>)
 80288fe:	6023      	str	r3, [r4, #0]
 8028900:	2300      	movs	r3, #0
 8028902:	f04f 527e 	mov.w	r2, #1065353216	; 0x3f800000
 8028906:	4913      	ldr	r1, [pc, #76]	; (8028954 <_ZN8touchgfx13TextureMapperC1ERKNS_6BitmapE+0x94>)
 8028908:	62e3      	str	r3, [r4, #44]	; 0x2c
 802890a:	6323      	str	r3, [r4, #48]	; 0x30
 802890c:	6363      	str	r3, [r4, #52]	; 0x34
 802890e:	63a3      	str	r3, [r4, #56]	; 0x38
 8028910:	63e3      	str	r3, [r4, #60]	; 0x3c
 8028912:	6463      	str	r3, [r4, #68]	; 0x44
 8028914:	64a3      	str	r3, [r4, #72]	; 0x48
 8028916:	6523      	str	r3, [r4, #80]	; 0x50
 8028918:	6563      	str	r3, [r4, #84]	; 0x54
 802891a:	65e3      	str	r3, [r4, #92]	; 0x5c
 802891c:	6623      	str	r3, [r4, #96]	; 0x60
 802891e:	66a3      	str	r3, [r4, #104]	; 0x68
 8028920:	66e3      	str	r3, [r4, #108]	; 0x6c
 8028922:	6763      	str	r3, [r4, #116]	; 0x74
 8028924:	67a3      	str	r3, [r4, #120]	; 0x78
 8028926:	f8c4 3080 	str.w	r3, [r4, #128]	; 0x80
 802892a:	f8c4 3084 	str.w	r3, [r4, #132]	; 0x84
 802892e:	230c      	movs	r3, #12
 8028930:	f884 5029 	strb.w	r5, [r4, #41]	; 0x29
 8028934:	6422      	str	r2, [r4, #64]	; 0x40
 8028936:	64e1      	str	r1, [r4, #76]	; 0x4c
 8028938:	65a1      	str	r1, [r4, #88]	; 0x58
 802893a:	6662      	str	r2, [r4, #100]	; 0x64
 802893c:	6722      	str	r2, [r4, #112]	; 0x70
 802893e:	67e2      	str	r2, [r4, #124]	; 0x7c
 8028940:	f8c4 2088 	str.w	r2, [r4, #136]	; 0x88
 8028944:	f8a4 308c 	strh.w	r3, [r4, #140]	; 0x8c
 8028948:	4620      	mov	r0, r4
 802894a:	bd38      	pop	{r3, r4, r5, pc}
 802894c:	0802f690 	.word	0x0802f690
 8028950:	0802fc74 	.word	0x0802fc74
 8028954:	447a0000 	.word	0x447a0000

08028958 <_ZN8touchgfx13TextureMapper19applyTransformationEv>:
 8028958:	b570      	push	{r4, r5, r6, lr}
 802895a:	ed2d 8b04 	vpush	{d8-d9}
 802895e:	f5ad 7d50 	sub.w	sp, sp, #832	; 0x340
 8028962:	add0      	add	r5, sp, #832	; 0x340
 8028964:	8cc3      	ldrh	r3, [r0, #38]	; 0x26
 8028966:	f825 3d40 	strh.w	r3, [r5, #-64]!
 802896a:	4604      	mov	r4, r0
 802896c:	4628      	mov	r0, r5
 802896e:	f7f1 fa7f 	bl	8019e70 <_ZNK8touchgfx6Bitmap8getWidthEv>
 8028972:	8ce3      	ldrh	r3, [r4, #38]	; 0x26
 8028974:	f8ad 3300 	strh.w	r3, [sp, #768]	; 0x300
 8028978:	4606      	mov	r6, r0
 802897a:	4628      	mov	r0, r5
 802897c:	f7f1 faac 	bl	8019ed8 <_ZNK8touchgfx6Bitmap9getHeightEv>
 8028980:	edd4 6a0c 	vldr	s13, [r4, #48]	; 0x30
 8028984:	ed94 6a0b 	vldr	s12, [r4, #44]	; 0x2c
 8028988:	6da3      	ldr	r3, [r4, #88]	; 0x58
 802898a:	ed94 9a11 	vldr	s18, [r4, #68]	; 0x44
 802898e:	9312      	str	r3, [sp, #72]	; 0x48
 8028990:	eeb7 7a00 	vmov.f32	s14, #112	; 0x3f800000  1.0
 8028994:	1c72      	adds	r2, r6, #1
 8028996:	3001      	adds	r0, #1
 8028998:	ee76 5ac7 	vsub.f32	s11, s13, s14
 802899c:	ee07 2a90 	vmov	s15, r2
 80289a0:	ee06 0a90 	vmov	s13, r0
 80289a4:	ee36 6a47 	vsub.f32	s12, s12, s14
 80289a8:	eef8 7ae7 	vcvt.f32.s32	s15, s15
 80289ac:	eef8 6ae6 	vcvt.f32.s32	s13, s13
 80289b0:	ee77 7a86 	vadd.f32	s15, s15, s12
 80289b4:	ee76 6aa5 	vadd.f32	s13, s13, s11
 80289b8:	9316      	str	r3, [sp, #88]	; 0x58
 80289ba:	931a      	str	r3, [sp, #104]	; 0x68
 80289bc:	931e      	str	r3, [sp, #120]	; 0x78
 80289be:	2300      	movs	r3, #0
 80289c0:	9320      	str	r3, [sp, #128]	; 0x80
 80289c2:	9321      	str	r3, [sp, #132]	; 0x84
 80289c4:	9322      	str	r3, [sp, #136]	; 0x88
 80289c6:	9324      	str	r3, [sp, #144]	; 0x90
 80289c8:	9325      	str	r3, [sp, #148]	; 0x94
 80289ca:	9326      	str	r3, [sp, #152]	; 0x98
 80289cc:	9328      	str	r3, [sp, #160]	; 0xa0
 80289ce:	9329      	str	r3, [sp, #164]	; 0xa4
 80289d0:	932a      	str	r3, [sp, #168]	; 0xa8
 80289d2:	932c      	str	r3, [sp, #176]	; 0xb0
 80289d4:	932d      	str	r3, [sp, #180]	; 0xb4
 80289d6:	932e      	str	r3, [sp, #184]	; 0xb8
 80289d8:	ed8d 6a10 	vstr	s12, [sp, #64]	; 0x40
 80289dc:	edcd 5a11 	vstr	s11, [sp, #68]	; 0x44
 80289e0:	ed8d 7a13 	vstr	s14, [sp, #76]	; 0x4c
 80289e4:	edcd 7a14 	vstr	s15, [sp, #80]	; 0x50
 80289e8:	edcd 5a15 	vstr	s11, [sp, #84]	; 0x54
 80289ec:	ed8d 7a17 	vstr	s14, [sp, #92]	; 0x5c
 80289f0:	edcd 7a18 	vstr	s15, [sp, #96]	; 0x60
 80289f4:	edcd 6a19 	vstr	s13, [sp, #100]	; 0x64
 80289f8:	ed8d 7a1b 	vstr	s14, [sp, #108]	; 0x6c
 80289fc:	ed8d 6a1c 	vstr	s12, [sp, #112]	; 0x70
 8028a00:	edcd 6a1d 	vstr	s13, [sp, #116]	; 0x74
 8028a04:	ed8d 7a1f 	vstr	s14, [sp, #124]	; 0x7c
 8028a08:	a830      	add	r0, sp, #192	; 0xc0
 8028a0a:	edd4 8a12 	vldr	s17, [r4, #72]	; 0x48
 8028a0e:	ed94 8a13 	vldr	s16, [r4, #76]	; 0x4c
 8028a12:	f000 fc43 	bl	802929c <_ZN8touchgfx9Matrix4x4C1Ev>
 8028a16:	eeb1 0a49 	vneg.f32	s0, s18
 8028a1a:	a830      	add	r0, sp, #192	; 0xc0
 8028a1c:	f000 fd12 	bl	8029444 <_ZN8touchgfx9Matrix4x423concatenateXTranslationEf>
 8028a20:	eeb1 0a68 	vneg.f32	s0, s17
 8028a24:	f000 fd1c 	bl	8029460 <_ZN8touchgfx9Matrix4x423concatenateYTranslationEf>
 8028a28:	eeb1 0a48 	vneg.f32	s0, s16
 8028a2c:	f000 fd27 	bl	802947e <_ZN8touchgfx9Matrix4x423concatenateZTranslationEf>
 8028a30:	a840      	add	r0, sp, #256	; 0x100
 8028a32:	f000 fc33 	bl	802929c <_ZN8touchgfx9Matrix4x4C1Ev>
 8028a36:	ed94 0a0d 	vldr	s0, [r4, #52]	; 0x34
 8028a3a:	a840      	add	r0, sp, #256	; 0x100
 8028a3c:	f000 fc86 	bl	802934c <_ZN8touchgfx9Matrix4x420concatenateXRotationEf>
 8028a40:	ed94 0a0e 	vldr	s0, [r4, #56]	; 0x38
 8028a44:	f000 fcac 	bl	80293a0 <_ZN8touchgfx9Matrix4x420concatenateYRotationEf>
 8028a48:	ed94 0a0f 	vldr	s0, [r4, #60]	; 0x3c
 8028a4c:	f000 fcd1 	bl	80293f2 <_ZN8touchgfx9Matrix4x420concatenateZRotationEf>
 8028a50:	a850      	add	r0, sp, #320	; 0x140
 8028a52:	f000 fc23 	bl	802929c <_ZN8touchgfx9Matrix4x4C1Ev>
 8028a56:	ed94 0a10 	vldr	s0, [r4, #64]	; 0x40
 8028a5a:	a850      	add	r0, sp, #320	; 0x140
 8028a5c:	f000 fd1e 	bl	802949c <_ZN8touchgfx9Matrix4x417concatenateXScaleEf>
 8028a60:	ed94 0a10 	vldr	s0, [r4, #64]	; 0x40
 8028a64:	f000 fd26 	bl	80294b4 <_ZN8touchgfx9Matrix4x417concatenateYScaleEf>
 8028a68:	ed94 0a10 	vldr	s0, [r4, #64]	; 0x40
 8028a6c:	f000 fd2f 	bl	80294ce <_ZN8touchgfx9Matrix4x417concatenateZScaleEf>
 8028a70:	a860      	add	r0, sp, #384	; 0x180
 8028a72:	f000 fc13 	bl	802929c <_ZN8touchgfx9Matrix4x4C1Ev>
 8028a76:	eeb0 0a49 	vmov.f32	s0, s18
 8028a7a:	a860      	add	r0, sp, #384	; 0x180
 8028a7c:	f000 fce2 	bl	8029444 <_ZN8touchgfx9Matrix4x423concatenateXTranslationEf>
 8028a80:	eeb0 0a68 	vmov.f32	s0, s17
 8028a84:	f000 fcec 	bl	8029460 <_ZN8touchgfx9Matrix4x423concatenateYTranslationEf>
 8028a88:	eeb0 0a48 	vmov.f32	s0, s16
 8028a8c:	f000 fcf7 	bl	802947e <_ZN8touchgfx9Matrix4x423concatenateZTranslationEf>
 8028a90:	aa50      	add	r2, sp, #320	; 0x140
 8028a92:	a960      	add	r1, sp, #384	; 0x180
 8028a94:	a8b0      	add	r0, sp, #704	; 0x2c0
 8028a96:	f000 fc1b 	bl	80292d0 <_ZN8touchgfxmlERKNS_9Matrix4x4ES2_>
 8028a9a:	4628      	mov	r0, r5
 8028a9c:	aa40      	add	r2, sp, #256	; 0x100
 8028a9e:	a9b0      	add	r1, sp, #704	; 0x2c0
 8028aa0:	f000 fc16 	bl	80292d0 <_ZN8touchgfxmlERKNS_9Matrix4x4ES2_>
 8028aa4:	4629      	mov	r1, r5
 8028aa6:	aa30      	add	r2, sp, #192	; 0xc0
 8028aa8:	a870      	add	r0, sp, #448	; 0x1c0
 8028aaa:	f000 fc11 	bl	80292d0 <_ZN8touchgfxmlERKNS_9Matrix4x4ES2_>
 8028aae:	a880      	add	r0, sp, #512	; 0x200
 8028ab0:	f000 fbf4 	bl	802929c <_ZN8touchgfx9Matrix4x4C1Ev>
 8028ab4:	ed94 0a14 	vldr	s0, [r4, #80]	; 0x50
 8028ab8:	a880      	add	r0, sp, #512	; 0x200
 8028aba:	eeb1 0a40 	vneg.f32	s0, s0
 8028abe:	f000 fcc1 	bl	8029444 <_ZN8touchgfx9Matrix4x423concatenateXTranslationEf>
 8028ac2:	ed94 0a15 	vldr	s0, [r4, #84]	; 0x54
 8028ac6:	a880      	add	r0, sp, #512	; 0x200
 8028ac8:	eeb1 0a40 	vneg.f32	s0, s0
 8028acc:	f000 fcc8 	bl	8029460 <_ZN8touchgfx9Matrix4x423concatenateYTranslationEf>
 8028ad0:	a890      	add	r0, sp, #576	; 0x240
 8028ad2:	f000 fbe3 	bl	802929c <_ZN8touchgfx9Matrix4x4C1Ev>
 8028ad6:	ed94 0a16 	vldr	s0, [r4, #88]	; 0x58
 8028ada:	a890      	add	r0, sp, #576	; 0x240
 8028adc:	f000 fc26 	bl	802932c <_ZN8touchgfx9Matrix4x415setViewDistanceEf>
 8028ae0:	a8a0      	add	r0, sp, #640	; 0x280
 8028ae2:	f000 fbdb 	bl	802929c <_ZN8touchgfx9Matrix4x4C1Ev>
 8028ae6:	ed94 0a14 	vldr	s0, [r4, #80]	; 0x50
 8028aea:	a8a0      	add	r0, sp, #640	; 0x280
 8028aec:	f000 fcaa 	bl	8029444 <_ZN8touchgfx9Matrix4x423concatenateXTranslationEf>
 8028af0:	ed94 0a15 	vldr	s0, [r4, #84]	; 0x54
 8028af4:	f000 fcb4 	bl	8029460 <_ZN8touchgfx9Matrix4x423concatenateYTranslationEf>
 8028af8:	aa90      	add	r2, sp, #576	; 0x240
 8028afa:	a9a0      	add	r1, sp, #640	; 0x280
 8028afc:	a8b0      	add	r0, sp, #704	; 0x2c0
 8028afe:	f000 fbe7 	bl	80292d0 <_ZN8touchgfxmlERKNS_9Matrix4x4ES2_>
 8028b02:	4628      	mov	r0, r5
 8028b04:	aa80      	add	r2, sp, #512	; 0x200
 8028b06:	a9b0      	add	r1, sp, #704	; 0x2c0
 8028b08:	f000 fbe2 	bl	80292d0 <_ZN8touchgfxmlERKNS_9Matrix4x4ES2_>
 8028b0c:	4629      	mov	r1, r5
 8028b0e:	aa70      	add	r2, sp, #448	; 0x1c0
 8028b10:	4668      	mov	r0, sp
 8028b12:	466d      	mov	r5, sp
 8028b14:	f000 fbdc 	bl	80292d0 <_ZN8touchgfxmlERKNS_9Matrix4x4ES2_>
 8028b18:	cd0f      	ldmia	r5!, {r0, r1, r2, r3}
 8028b1a:	ae70      	add	r6, sp, #448	; 0x1c0
 8028b1c:	c60f      	stmia	r6!, {r0, r1, r2, r3}
 8028b1e:	cd0f      	ldmia	r5!, {r0, r1, r2, r3}
 8028b20:	c60f      	stmia	r6!, {r0, r1, r2, r3}
 8028b22:	cd0f      	ldmia	r5!, {r0, r1, r2, r3}
 8028b24:	c60f      	stmia	r6!, {r0, r1, r2, r3}
 8028b26:	e895 000f 	ldmia.w	r5, {r0, r1, r2, r3}
 8028b2a:	e886 000f 	stmia.w	r6, {r0, r1, r2, r3}
 8028b2e:	2500      	movs	r5, #0
 8028b30:	0129      	lsls	r1, r5, #4
 8028b32:	ab20      	add	r3, sp, #128	; 0x80
 8028b34:	185e      	adds	r6, r3, r1
 8028b36:	ab10      	add	r3, sp, #64	; 0x40
 8028b38:	4419      	add	r1, r3
 8028b3a:	a870      	add	r0, sp, #448	; 0x1c0
 8028b3c:	f000 fb7e 	bl	802923c <_ZN8touchgfxmlERKNS_9Matrix4x4ERKNS_6Point4E>
 8028b40:	3501      	adds	r5, #1
 8028b42:	2d04      	cmp	r5, #4
 8028b44:	ed86 0a00 	vstr	s0, [r6]
 8028b48:	edc6 0a01 	vstr	s1, [r6, #4]
 8028b4c:	ed86 1a02 	vstr	s2, [r6, #8]
 8028b50:	edc6 1a03 	vstr	s3, [r6, #12]
 8028b54:	d1ec      	bne.n	8028b30 <_ZN8touchgfx13TextureMapper19applyTransformationEv+0x1d8>
 8028b56:	edd4 7a16 	vldr	s15, [r4, #88]	; 0x58
 8028b5a:	eddd 6a20 	vldr	s13, [sp, #128]	; 0x80
 8028b5e:	ed9d 7a22 	vldr	s14, [sp, #136]	; 0x88
 8028b62:	ee67 6aa6 	vmul.f32	s13, s15, s13
 8028b66:	ed84 7a19 	vstr	s14, [r4, #100]	; 0x64
 8028b6a:	ee86 6a87 	vdiv.f32	s12, s13, s14
 8028b6e:	eddd 6a21 	vldr	s13, [sp, #132]	; 0x84
 8028b72:	ed84 6a17 	vstr	s12, [r4, #92]	; 0x5c
 8028b76:	ee67 6aa6 	vmul.f32	s13, s15, s13
 8028b7a:	ee86 6a87 	vdiv.f32	s12, s13, s14
 8028b7e:	eddd 6a24 	vldr	s13, [sp, #144]	; 0x90
 8028b82:	ed9d 7a26 	vldr	s14, [sp, #152]	; 0x98
 8028b86:	ed84 6a18 	vstr	s12, [r4, #96]	; 0x60
 8028b8a:	ee67 6aa6 	vmul.f32	s13, s15, s13
 8028b8e:	ed84 7a1c 	vstr	s14, [r4, #112]	; 0x70
 8028b92:	ee86 6a87 	vdiv.f32	s12, s13, s14
 8028b96:	eddd 6a25 	vldr	s13, [sp, #148]	; 0x94
 8028b9a:	ed84 6a1a 	vstr	s12, [r4, #104]	; 0x68
 8028b9e:	ee67 6aa6 	vmul.f32	s13, s15, s13
 8028ba2:	ee86 6a87 	vdiv.f32	s12, s13, s14
 8028ba6:	eddd 6a28 	vldr	s13, [sp, #160]	; 0xa0
 8028baa:	ed9d 7a2a 	vldr	s14, [sp, #168]	; 0xa8
 8028bae:	ed84 6a1b 	vstr	s12, [r4, #108]	; 0x6c
 8028bb2:	ee67 6aa6 	vmul.f32	s13, s15, s13
 8028bb6:	ed84 7a1f 	vstr	s14, [r4, #124]	; 0x7c
 8028bba:	ee86 6a87 	vdiv.f32	s12, s13, s14
 8028bbe:	eddd 6a29 	vldr	s13, [sp, #164]	; 0xa4
 8028bc2:	ed84 6a1d 	vstr	s12, [r4, #116]	; 0x74
 8028bc6:	ee67 6aa6 	vmul.f32	s13, s15, s13
 8028bca:	ee86 6a87 	vdiv.f32	s12, s13, s14
 8028bce:	eddd 6a2c 	vldr	s13, [sp, #176]	; 0xb0
 8028bd2:	ed9d 7a2e 	vldr	s14, [sp, #184]	; 0xb8
 8028bd6:	ed84 6a1e 	vstr	s12, [r4, #120]	; 0x78
 8028bda:	ee67 6aa6 	vmul.f32	s13, s15, s13
 8028bde:	ed84 7a22 	vstr	s14, [r4, #136]	; 0x88
 8028be2:	ee86 6a87 	vdiv.f32	s12, s13, s14
 8028be6:	eddd 6a2d 	vldr	s13, [sp, #180]	; 0xb4
 8028bea:	ed84 6a20 	vstr	s12, [r4, #128]	; 0x80
 8028bee:	ee67 7aa6 	vmul.f32	s15, s15, s13
 8028bf2:	eec7 6a87 	vdiv.f32	s13, s15, s14
 8028bf6:	edc4 6a21 	vstr	s13, [r4, #132]	; 0x84
 8028bfa:	f50d 7d50 	add.w	sp, sp, #832	; 0x340
 8028bfe:	ecbd 8b04 	vpop	{d8-d9}
 8028c02:	bd70      	pop	{r4, r5, r6, pc}

08028c04 <_ZN8touchgfx13TextureMapper9setBitmapERKNS_6BitmapE>:
 8028c04:	b510      	push	{r4, lr}
 8028c06:	4604      	mov	r4, r0
 8028c08:	f7ea ffe3 	bl	8013bd2 <_ZN8touchgfx5Image9setBitmapERKNS_6BitmapE>
 8028c0c:	4620      	mov	r0, r4
 8028c0e:	e8bd 4010 	ldmia.w	sp!, {r4, lr}
 8028c12:	f7ff bea1 	b.w	8028958 <_ZN8touchgfx13TextureMapper19applyTransformationEv>

08028c16 <_ZN8touchgfx13TextureMapper9setAnglesEfff>:
 8028c16:	ed80 0a0d 	vstr	s0, [r0, #52]	; 0x34
 8028c1a:	edc0 0a0e 	vstr	s1, [r0, #56]	; 0x38
 8028c1e:	ed80 1a0f 	vstr	s2, [r0, #60]	; 0x3c
 8028c22:	f7ff be99 	b.w	8028958 <_ZN8touchgfx13TextureMapper19applyTransformationEv>

08028c26 <_ZN8touchgfx13TextureMapper8setScaleEf>:
 8028c26:	ed80 0a10 	vstr	s0, [r0, #64]	; 0x40
 8028c2a:	f7ff be95 	b.w	8028958 <_ZN8touchgfx13TextureMapper19applyTransformationEv>

08028c2e <_ZN8touchgfx13TextureMapper17setBitmapPositionEff>:
 8028c2e:	ed80 0a0b 	vstr	s0, [r0, #44]	; 0x2c
 8028c32:	edc0 0a0c 	vstr	s1, [r0, #48]	; 0x30
 8028c36:	f7ff be8f 	b.w	8028958 <_ZN8touchgfx13TextureMapper19applyTransformationEv>

08028c3a <_ZN8touchgfx13TextureMapper17setCameraDistanceEf>:
 8028c3a:	eef7 7a00 	vmov.f32	s15, #112	; 0x3f800000  1.0
 8028c3e:	eeb4 0ae7 	vcmpe.f32	s0, s15
 8028c42:	eef1 fa10 	vmrs	APSR_nzcv, fpscr
 8028c46:	bfd8      	it	le
 8028c48:	eeb0 0a67 	vmovle.f32	s0, s15
 8028c4c:	ed80 0a16 	vstr	s0, [r0, #88]	; 0x58
 8028c50:	f7ff be82 	b.w	8028958 <_ZN8touchgfx13TextureMapper19applyTransformationEv>

08028c54 <_ZN8touchgfx13TextureMapper9setCameraEff>:
 8028c54:	ed80 0a14 	vstr	s0, [r0, #80]	; 0x50
 8028c58:	edc0 0a15 	vstr	s1, [r0, #84]	; 0x54
 8028c5c:	f7ff be7c 	b.w	8028958 <_ZN8touchgfx13TextureMapper19applyTransformationEv>

08028c60 <_ZN8touchgfx13TextureMapper8setOrigoEff>:
 8028c60:	ed80 0a11 	vstr	s0, [r0, #68]	; 0x44
 8028c64:	edc0 0a12 	vstr	s1, [r0, #72]	; 0x48
 8028c68:	f7ff be76 	b.w	8028958 <_ZN8touchgfx13TextureMapper19applyTransformationEv>

08028c6c <_ZN8touchgfx13TextureMapper8setOrigoEfff>:
 8028c6c:	ed80 0a11 	vstr	s0, [r0, #68]	; 0x44
 8028c70:	edc0 0a12 	vstr	s1, [r0, #72]	; 0x48
 8028c74:	ed80 1a13 	vstr	s2, [r0, #76]	; 0x4c
 8028c78:	f7ff be6e 	b.w	8028958 <_ZN8touchgfx13TextureMapper19applyTransformationEv>

08028c7c <_ZNK8touchgfx13TextureMapper15getBoundingRectEv>:
 8028c7c:	e92d 41f0 	stmdb	sp!, {r4, r5, r6, r7, r8, lr}
 8028c80:	ed2d 8b04 	vpush	{d8-d9}
 8028c84:	edd1 9a1a 	vldr	s19, [r1, #104]	; 0x68
 8028c88:	ed91 8a17 	vldr	s16, [r1, #92]	; 0x5c
 8028c8c:	ed91 9a1d 	vldr	s18, [r1, #116]	; 0x74
 8028c90:	edd1 8a20 	vldr	s17, [r1, #128]	; 0x80
 8028c94:	eeb4 8ae9 	vcmpe.f32	s16, s19
 8028c98:	eef1 fa10 	vmrs	APSR_nzcv, fpscr
 8028c9c:	bf54      	ite	pl
 8028c9e:	eeb0 0a69 	vmovpl.f32	s0, s19
 8028ca2:	eeb0 0a48 	vmovmi.f32	s0, s16
 8028ca6:	eeb4 9ac0 	vcmpe.f32	s18, s0
 8028caa:	eef1 fa10 	vmrs	APSR_nzcv, fpscr
 8028cae:	bfd8      	it	le
 8028cb0:	eeb0 0a49 	vmovle.f32	s0, s18
 8028cb4:	eef4 8ac0 	vcmpe.f32	s17, s0
 8028cb8:	eef1 fa10 	vmrs	APSR_nzcv, fpscr
 8028cbc:	bfd8      	it	le
 8028cbe:	eeb0 0a68 	vmovle.f32	s0, s17
 8028cc2:	460c      	mov	r4, r1
 8028cc4:	4607      	mov	r7, r0
 8028cc6:	f001 fe4f 	bl	802a968 <floorf>
 8028cca:	eeb5 0ac0 	vcmpe.f32	s0, #0.0
 8028cce:	eef1 fa10 	vmrs	APSR_nzcv, fpscr
 8028cd2:	bf58      	it	pl
 8028cd4:	eebd 0ac0 	vcvtpl.s32.f32	s0, s0
 8028cd8:	eeb4 8ae9 	vcmpe.f32	s16, s19
 8028cdc:	bf56      	itet	pl
 8028cde:	ee10 3a10 	vmovpl	r3, s0
 8028ce2:	2600      	movmi	r6, #0
 8028ce4:	b21e      	sxthpl	r6, r3
 8028ce6:	eef1 fa10 	vmrs	APSR_nzcv, fpscr
 8028cea:	bfd8      	it	le
 8028cec:	eeb0 8a69 	vmovle.f32	s16, s19
 8028cf0:	eeb4 9ac8 	vcmpe.f32	s18, s16
 8028cf4:	eef1 fa10 	vmrs	APSR_nzcv, fpscr
 8028cf8:	bf58      	it	pl
 8028cfa:	eeb0 8a49 	vmovpl.f32	s16, s18
 8028cfe:	eef4 8ac8 	vcmpe.f32	s17, s16
 8028d02:	eef1 fa10 	vmrs	APSR_nzcv, fpscr
 8028d06:	bf54      	ite	pl
 8028d08:	eeb0 0a68 	vmovpl.f32	s0, s17
 8028d0c:	eeb0 0a48 	vmovmi.f32	s0, s16
 8028d10:	f001 fde8 	bl	802a8e4 <ceilf>
 8028d14:	f9b4 8008 	ldrsh.w	r8, [r4, #8]
 8028d18:	edd4 9a1b 	vldr	s19, [r4, #108]	; 0x6c
 8028d1c:	ed94 8a18 	vldr	s16, [r4, #96]	; 0x60
 8028d20:	ed94 9a1e 	vldr	s18, [r4, #120]	; 0x78
 8028d24:	edd4 8a21 	vldr	s17, [r4, #132]	; 0x84
 8028d28:	ee07 8a90 	vmov	s15, r8
 8028d2c:	eef8 7ae7 	vcvt.f32.s32	s15, s15
 8028d30:	eeb4 0ae7 	vcmpe.f32	s0, s15
 8028d34:	eef1 fa10 	vmrs	APSR_nzcv, fpscr
 8028d38:	bfd8      	it	le
 8028d3a:	eebd 0ac0 	vcvtle.s32.f32	s0, s0
 8028d3e:	eeb4 8ae9 	vcmpe.f32	s16, s19
 8028d42:	bfdc      	itt	le
 8028d44:	ee10 3a10 	vmovle	r3, s0
 8028d48:	fa0f f883 	sxthle.w	r8, r3
 8028d4c:	eef1 fa10 	vmrs	APSR_nzcv, fpscr
 8028d50:	bf54      	ite	pl
 8028d52:	eeb0 0a69 	vmovpl.f32	s0, s19
 8028d56:	eeb0 0a48 	vmovmi.f32	s0, s16
 8028d5a:	eeb4 9ac0 	vcmpe.f32	s18, s0
 8028d5e:	eef1 fa10 	vmrs	APSR_nzcv, fpscr
 8028d62:	bfd8      	it	le
 8028d64:	eeb0 0a49 	vmovle.f32	s0, s18
 8028d68:	eef4 8ac0 	vcmpe.f32	s17, s0
 8028d6c:	eef1 fa10 	vmrs	APSR_nzcv, fpscr
 8028d70:	bfd8      	it	le
 8028d72:	eeb0 0a68 	vmovle.f32	s0, s17
 8028d76:	f001 fdf7 	bl	802a968 <floorf>
 8028d7a:	eeb5 0ac0 	vcmpe.f32	s0, #0.0
 8028d7e:	eef1 fa10 	vmrs	APSR_nzcv, fpscr
 8028d82:	bf58      	it	pl
 8028d84:	eebd 0ac0 	vcvtpl.s32.f32	s0, s0
 8028d88:	eeb4 8ae9 	vcmpe.f32	s16, s19
 8028d8c:	bf56      	itet	pl
 8028d8e:	ee10 3a10 	vmovpl	r3, s0
 8028d92:	2500      	movmi	r5, #0
 8028d94:	b21d      	sxthpl	r5, r3
 8028d96:	eef1 fa10 	vmrs	APSR_nzcv, fpscr
 8028d9a:	bfd8      	it	le
 8028d9c:	eeb0 8a69 	vmovle.f32	s16, s19
 8028da0:	eeb4 9ac8 	vcmpe.f32	s18, s16
 8028da4:	eef1 fa10 	vmrs	APSR_nzcv, fpscr
 8028da8:	bf58      	it	pl
 8028daa:	eeb0 8a49 	vmovpl.f32	s16, s18
 8028dae:	eef4 8ac8 	vcmpe.f32	s17, s16
 8028db2:	eef1 fa10 	vmrs	APSR_nzcv, fpscr
 8028db6:	bf54      	ite	pl
 8028db8:	eeb0 0a68 	vmovpl.f32	s0, s17
 8028dbc:	eeb0 0a48 	vmovmi.f32	s0, s16
 8028dc0:	f001 fd90 	bl	802a8e4 <ceilf>
 8028dc4:	f9b4 300a 	ldrsh.w	r3, [r4, #10]
 8028dc8:	803e      	strh	r6, [r7, #0]
 8028dca:	ee07 3a90 	vmov	s15, r3
 8028dce:	eef8 7ae7 	vcvt.f32.s32	s15, s15
 8028dd2:	807d      	strh	r5, [r7, #2]
 8028dd4:	eeb4 0ae7 	vcmpe.f32	s0, s15
 8028dd8:	eef1 fa10 	vmrs	APSR_nzcv, fpscr
 8028ddc:	bfd8      	it	le
 8028dde:	eebd 0ac0 	vcvtle.s32.f32	s0, s0
 8028de2:	eba8 0606 	sub.w	r6, r8, r6
 8028de6:	bfdc      	itt	le
 8028de8:	ee10 3a10 	vmovle	r3, s0
 8028dec:	b21b      	sxthle	r3, r3
 8028dee:	1b5d      	subs	r5, r3, r5
 8028df0:	80be      	strh	r6, [r7, #4]
 8028df2:	80fd      	strh	r5, [r7, #6]
 8028df4:	ecbd 8b04 	vpop	{d8-d9}
 8028df8:	4638      	mov	r0, r7
 8028dfa:	e8bd 81f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, pc}

08028dfe <_ZNK8touchgfx13TextureMapper17invalidateContentEv>:
 8028dfe:	b513      	push	{r0, r1, r4, lr}
 8028e00:	f890 3028 	ldrb.w	r3, [r0, #40]	; 0x28
 8028e04:	4604      	mov	r4, r0
 8028e06:	b143      	cbz	r3, 8028e1a <_ZNK8touchgfx13TextureMapper17invalidateContentEv+0x1c>
 8028e08:	4601      	mov	r1, r0
 8028e0a:	4668      	mov	r0, sp
 8028e0c:	f7ff ff36 	bl	8028c7c <_ZNK8touchgfx13TextureMapper15getBoundingRectEv>
 8028e10:	6823      	ldr	r3, [r4, #0]
 8028e12:	4669      	mov	r1, sp
 8028e14:	691b      	ldr	r3, [r3, #16]
 8028e16:	4620      	mov	r0, r4
 8028e18:	4798      	blx	r3
 8028e1a:	b002      	add	sp, #8
 8028e1c:	bd10      	pop	{r4, pc}

08028e1e <_ZNK8touchgfx13TextureMapper19lookupRenderVariantEv>:
 8028e1e:	4603      	mov	r3, r0
 8028e20:	3026      	adds	r0, #38	; 0x26
 8028e22:	f893 3029 	ldrb.w	r3, [r3, #41]	; 0x29
 8028e26:	b90b      	cbnz	r3, 8028e2c <_ZNK8touchgfx13TextureMapper19lookupRenderVariantEv+0xe>
 8028e28:	f7ee bdfa 	b.w	8017a20 <_ZN8touchgfx34lookupNearestNeighborRenderVariantERKNS_6BitmapE>
 8028e2c:	f7ee be08 	b.w	8017a40 <_ZN8touchgfx27lookupBilinearRenderVariantERKNS_6BitmapE>

08028e30 <_ZNK8touchgfx13TextureMapper8drawQuadERKNS_4RectEPtPKfS6_S6_S6_S6_>:
 8028e30:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 8028e34:	ed2d 8b04 	vpush	{d8-d9}
 8028e38:	4604      	mov	r4, r0
 8028e3a:	469b      	mov	fp, r3
 8028e3c:	f9b0 c008 	ldrsh.w	ip, [r0, #8]
 8028e40:	f9b0 300a 	ldrsh.w	r3, [r0, #10]
 8028e44:	f9b1 6000 	ldrsh.w	r6, [r1]
 8028e48:	8888      	ldrh	r0, [r1, #4]
 8028e4a:	b0b3      	sub	sp, #204	; 0xcc
 8028e4c:	4430      	add	r0, r6
 8028e4e:	b280      	uxth	r0, r0
 8028e50:	9206      	str	r2, [sp, #24]
 8028e52:	fa0f fe80 	sxth.w	lr, r0
 8028e56:	2200      	movs	r2, #0
 8028e58:	4596      	cmp	lr, r2
 8028e5a:	f8dd a100 	ldr.w	sl, [sp, #256]	; 0x100
 8028e5e:	f8dd 9104 	ldr.w	r9, [sp, #260]	; 0x104
 8028e62:	f8dd 8108 	ldr.w	r8, [sp, #264]	; 0x108
 8028e66:	9f43      	ldr	r7, [sp, #268]	; 0x10c
 8028e68:	9211      	str	r2, [sp, #68]	; 0x44
 8028e6a:	f340 8129 	ble.w	80290c0 <_ZNK8touchgfx13TextureMapper8drawQuadERKNS_4RectEPtPKfS6_S6_S6_S6_+0x290>
 8028e6e:	45b4      	cmp	ip, r6
 8028e70:	f340 8126 	ble.w	80290c0 <_ZNK8touchgfx13TextureMapper8drawQuadERKNS_4RectEPtPKfS6_S6_S6_S6_+0x290>
 8028e74:	f9b1 5002 	ldrsh.w	r5, [r1, #2]
 8028e78:	88ca      	ldrh	r2, [r1, #6]
 8028e7a:	442a      	add	r2, r5
 8028e7c:	b292      	uxth	r2, r2
 8028e7e:	b211      	sxth	r1, r2
 8028e80:	2900      	cmp	r1, #0
 8028e82:	f340 811d 	ble.w	80290c0 <_ZNK8touchgfx13TextureMapper8drawQuadERKNS_4RectEPtPKfS6_S6_S6_S6_+0x290>
 8028e86:	42ab      	cmp	r3, r5
 8028e88:	f340 811a 	ble.w	80290c0 <_ZNK8touchgfx13TextureMapper8drawQuadERKNS_4RectEPtPKfS6_S6_S6_S6_+0x290>
 8028e8c:	45f4      	cmp	ip, lr
 8028e8e:	bfb8      	it	lt
 8028e90:	fa1f f08c 	uxthlt.w	r0, ip
 8028e94:	428b      	cmp	r3, r1
 8028e96:	ea26 76e6 	bic.w	r6, r6, r6, asr #31
 8028e9a:	ea25 75e5 	bic.w	r5, r5, r5, asr #31
 8028e9e:	bfb8      	it	lt
 8028ea0:	b29a      	uxthlt	r2, r3
 8028ea2:	1b80      	subs	r0, r0, r6
 8028ea4:	1b52      	subs	r2, r2, r5
 8028ea6:	f8ad 0048 	strh.w	r0, [sp, #72]	; 0x48
 8028eaa:	f8ad 204a 	strh.w	r2, [sp, #74]	; 0x4a
 8028eae:	f8ad 6044 	strh.w	r6, [sp, #68]	; 0x44
 8028eb2:	f8ad 5046 	strh.w	r5, [sp, #70]	; 0x46
 8028eb6:	ab11      	add	r3, sp, #68	; 0x44
 8028eb8:	e893 0003 	ldmia.w	r3, {r0, r1}
 8028ebc:	6822      	ldr	r2, [r4, #0]
 8028ebe:	9307      	str	r3, [sp, #28]
 8028ec0:	ad13      	add	r5, sp, #76	; 0x4c
 8028ec2:	6ad2      	ldr	r2, [r2, #44]	; 0x2c
 8028ec4:	e885 0003 	stmia.w	r5, {r0, r1}
 8028ec8:	4629      	mov	r1, r5
 8028eca:	4620      	mov	r0, r4
 8028ecc:	4790      	blx	r2
 8028ece:	4621      	mov	r1, r4
 8028ed0:	a815      	add	r0, sp, #84	; 0x54
 8028ed2:	f7ee fd01 	bl	80178d8 <_ZNK8touchgfx8Drawable15getAbsoluteRectEv>
 8028ed6:	a815      	add	r0, sp, #84	; 0x54
 8028ed8:	f7ed f9c6 	bl	8016268 <_ZN8touchgfx21DisplayTransformation29transformDisplayToFrameBufferERNS_4RectE>
 8028edc:	9b07      	ldr	r3, [sp, #28]
 8028ede:	1d26      	adds	r6, r4, #4
 8028ee0:	4618      	mov	r0, r3
 8028ee2:	4631      	mov	r1, r6
 8028ee4:	f7ed fa04 	bl	80162f0 <_ZN8touchgfx21DisplayTransformation29transformDisplayToFrameBufferERNS_4RectERKS1_>
 8028ee8:	4628      	mov	r0, r5
 8028eea:	f104 0526 	add.w	r5, r4, #38	; 0x26
 8028eee:	f7ed f9bb 	bl	8016268 <_ZN8touchgfx21DisplayTransformation29transformDisplayToFrameBufferERNS_4RectE>
 8028ef2:	4628      	mov	r0, r5
 8028ef4:	f7f1 f8a8 	bl	801a048 <_ZNK8touchgfx6Bitmap7getDataEv>
 8028ef8:	9007      	str	r0, [sp, #28]
 8028efa:	2800      	cmp	r0, #0
 8028efc:	f000 80db 	beq.w	80290b6 <_ZNK8touchgfx13TextureMapper8drawQuadERKNS_4RectEPtPKfS6_S6_S6_S6_+0x286>
 8028f00:	f8db 2000 	ldr.w	r2, [fp]
 8028f04:	9209      	str	r2, [sp, #36]	; 0x24
 8028f06:	f8db 2004 	ldr.w	r2, [fp, #4]
 8028f0a:	920a      	str	r2, [sp, #40]	; 0x28
 8028f0c:	f8db 2008 	ldr.w	r2, [fp, #8]
 8028f10:	920b      	str	r2, [sp, #44]	; 0x2c
 8028f12:	f8db 200c 	ldr.w	r2, [fp, #12]
 8028f16:	920c      	str	r2, [sp, #48]	; 0x30
 8028f18:	f8da 2000 	ldr.w	r2, [sl]
 8028f1c:	920d      	str	r2, [sp, #52]	; 0x34
 8028f1e:	f8da 2004 	ldr.w	r2, [sl, #4]
 8028f22:	920e      	str	r2, [sp, #56]	; 0x38
 8028f24:	f8da 2008 	ldr.w	r2, [sl, #8]
 8028f28:	920f      	str	r2, [sp, #60]	; 0x3c
 8028f2a:	f8da 200c 	ldr.w	r2, [sl, #12]
 8028f2e:	9210      	str	r2, [sp, #64]	; 0x40
 8028f30:	a90d      	add	r1, sp, #52	; 0x34
 8028f32:	4632      	mov	r2, r6
 8028f34:	a809      	add	r0, sp, #36	; 0x24
 8028f36:	f7ed f9bf 	bl	80162b8 <_ZN8touchgfx21DisplayTransformation29transformDisplayToFrameBufferERfS1_RKNS_4RectE>
 8028f3a:	4632      	mov	r2, r6
 8028f3c:	a90e      	add	r1, sp, #56	; 0x38
 8028f3e:	a80a      	add	r0, sp, #40	; 0x28
 8028f40:	f7ed f9ba 	bl	80162b8 <_ZN8touchgfx21DisplayTransformation29transformDisplayToFrameBufferERfS1_RKNS_4RectE>
 8028f44:	4632      	mov	r2, r6
 8028f46:	a90f      	add	r1, sp, #60	; 0x3c
 8028f48:	a80b      	add	r0, sp, #44	; 0x2c
 8028f4a:	f7ed f9b5 	bl	80162b8 <_ZN8touchgfx21DisplayTransformation29transformDisplayToFrameBufferERfS1_RKNS_4RectE>
 8028f4e:	4632      	mov	r2, r6
 8028f50:	a910      	add	r1, sp, #64	; 0x40
 8028f52:	a80c      	add	r0, sp, #48	; 0x30
 8028f54:	f7ed f9b0 	bl	80162b8 <_ZN8touchgfx21DisplayTransformation29transformDisplayToFrameBufferERfS1_RKNS_4RectE>
 8028f58:	eddd 7a0d 	vldr	s15, [sp, #52]	; 0x34
 8028f5c:	edd7 4a00 	vldr	s9, [r7]
 8028f60:	edd7 5a01 	vldr	s11, [r7, #4]
 8028f64:	ed98 4a00 	vldr	s8, [r8]
 8028f68:	ed98 5a01 	vldr	s10, [r8, #4]
 8028f6c:	ed99 9a00 	vldr	s18, [r9]
 8028f70:	ed99 8a01 	vldr	s16, [r9, #4]
 8028f74:	edd9 8a02 	vldr	s17, [r9, #8]
 8028f78:	f8d9 e00c 	ldr.w	lr, [r9, #12]
 8028f7c:	f8d8 c00c 	ldr.w	ip, [r8, #12]
 8028f80:	ed8d 4a21 	vstr	s8, [sp, #132]	; 0x84
 8028f84:	eef0 6a67 	vmov.f32	s13, s15
 8028f88:	eddd 7a0a 	vldr	s15, [sp, #40]	; 0x28
 8028f8c:	edcd 4a22 	vstr	s9, [sp, #136]	; 0x88
 8028f90:	eeb0 7a67 	vmov.f32	s14, s15
 8028f94:	eddd 7a0e 	vldr	s15, [sp, #56]	; 0x38
 8028f98:	ed8d 5a26 	vstr	s10, [sp, #152]	; 0x98
 8028f9c:	eeb0 6a67 	vmov.f32	s12, s15
 8028fa0:	eebe 6ace 	vcvt.s32.f32	s12, s12, #4
 8028fa4:	eddd 7a0b 	vldr	s15, [sp, #44]	; 0x2c
 8028fa8:	edcd 5a27 	vstr	s11, [sp, #156]	; 0x9c
 8028fac:	ee16 6a10 	vmov	r6, s12
 8028fb0:	eeb0 6a67 	vmov.f32	s12, s15
 8028fb4:	eebe 6ace 	vcvt.s32.f32	s12, s12, #4
 8028fb8:	eddd 7a0f 	vldr	s15, [sp, #60]	; 0x3c
 8028fbc:	f8d7 a008 	ldr.w	sl, [r7, #8]
 8028fc0:	f8d8 b008 	ldr.w	fp, [r8, #8]
 8028fc4:	68ff      	ldr	r7, [r7, #12]
 8028fc6:	9624      	str	r6, [sp, #144]	; 0x90
 8028fc8:	ee16 0a10 	vmov	r0, s12
 8028fcc:	eeb0 6a67 	vmov.f32	s12, s15
 8028fd0:	eebe 6ace 	vcvt.s32.f32	s12, s12, #4
 8028fd4:	eddd 7a0c 	vldr	s15, [sp, #48]	; 0x30
 8028fd8:	ed8d 9a20 	vstr	s18, [sp, #128]	; 0x80
 8028fdc:	ee16 1a10 	vmov	r1, s12
 8028fe0:	eeb0 6a67 	vmov.f32	s12, s15
 8028fe4:	eebe 6ace 	vcvt.s32.f32	s12, s12, #4
 8028fe8:	eefe 6ace 	vcvt.s32.f32	s13, s13, #4
 8028fec:	ee16 2a10 	vmov	r2, s12
 8028ff0:	ed9d 6a09 	vldr	s12, [sp, #36]	; 0x24
 8028ff4:	eddd 7a10 	vldr	s15, [sp, #64]	; 0x40
 8028ff8:	edcd 6a1f 	vstr	s13, [sp, #124]	; 0x7c
 8028ffc:	eebe 7ace 	vcvt.s32.f32	s14, s14, #4
 8029000:	eebe 6ace 	vcvt.s32.f32	s12, s12, #4
 8029004:	e9cd 0128 	strd	r0, r1, [sp, #160]	; 0xa0
 8029008:	ed8d 6a1e 	vstr	s12, [sp, #120]	; 0x78
 802900c:	ed8d 7a23 	vstr	s14, [sp, #140]	; 0x8c
 8029010:	ed8d 8a25 	vstr	s16, [sp, #148]	; 0x94
 8029014:	edcd 8a2a 	vstr	s17, [sp, #168]	; 0xa8
 8029018:	922d      	str	r2, [sp, #180]	; 0xb4
 802901a:	4a2b      	ldr	r2, [pc, #172]	; (80290c8 <_ZNK8touchgfx13TextureMapper8drawQuadERKNS_4RectEPtPKfS6_S6_S6_S6_+0x298>)
 802901c:	9b06      	ldr	r3, [sp, #24]
 802901e:	8812      	ldrh	r2, [r2, #0]
 8029020:	9317      	str	r3, [sp, #92]	; 0x5c
 8029022:	eefe 7ace 	vcvt.s32.f32	s15, s15, #4
 8029026:	9b07      	ldr	r3, [sp, #28]
 8029028:	edcd 7a2e 	vstr	s15, [sp, #184]	; 0xb8
 802902c:	4628      	mov	r0, r5
 802902e:	f8cd e0bc 	str.w	lr, [sp, #188]	; 0xbc
 8029032:	f8cd c0c0 	str.w	ip, [sp, #192]	; 0xc0
 8029036:	9218      	str	r2, [sp, #96]	; 0x60
 8029038:	9319      	str	r3, [sp, #100]	; 0x64
 802903a:	f8cd b0ac 	str.w	fp, [sp, #172]	; 0xac
 802903e:	f8cd a0b0 	str.w	sl, [sp, #176]	; 0xb0
 8029042:	9731      	str	r7, [sp, #196]	; 0xc4
 8029044:	f7f1 f830 	bl	801a0a8 <_ZNK8touchgfx6Bitmap12getExtraDataEv>
 8029048:	901a      	str	r0, [sp, #104]	; 0x68
 802904a:	4628      	mov	r0, r5
 802904c:	f7f0 ff10 	bl	8019e70 <_ZNK8touchgfx6Bitmap8getWidthEv>
 8029050:	901b      	str	r0, [sp, #108]	; 0x6c
 8029052:	4628      	mov	r0, r5
 8029054:	f7f0 ff40 	bl	8019ed8 <_ZNK8touchgfx6Bitmap9getHeightEv>
 8029058:	901c      	str	r0, [sp, #112]	; 0x70
 802905a:	4628      	mov	r0, r5
 802905c:	f7f0 ff08 	bl	8019e70 <_ZNK8touchgfx6Bitmap8getWidthEv>
 8029060:	eeb4 9a48 	vcmp.f32	s18, s16
 8029064:	eef1 fa10 	vmrs	APSR_nzcv, fpscr
 8029068:	901d      	str	r0, [sp, #116]	; 0x74
 802906a:	f8b4 608c 	ldrh.w	r6, [r4, #140]	; 0x8c
 802906e:	d107      	bne.n	8029080 <_ZNK8touchgfx13TextureMapper8drawQuadERKNS_4RectEPtPKfS6_S6_S6_S6_+0x250>
 8029070:	eeb4 8a68 	vcmp.f32	s16, s17
 8029074:	eef1 fa10 	vmrs	APSR_nzcv, fpscr
 8029078:	f64f 73ff 	movw	r3, #65535	; 0xffff
 802907c:	bf08      	it	eq
 802907e:	461e      	moveq	r6, r3
 8029080:	4b12      	ldr	r3, [pc, #72]	; (80290cc <_ZNK8touchgfx13TextureMapper8drawQuadERKNS_4RectEPtPKfS6_S6_S6_S6_+0x29c>)
 8029082:	681b      	ldr	r3, [r3, #0]
 8029084:	f893 2058 	ldrb.w	r2, [r3, #88]	; 0x58
 8029088:	b10a      	cbz	r2, 802908e <_ZNK8touchgfx13TextureMapper8drawQuadERKNS_4RectEPtPKfS6_S6_S6_S6_+0x25e>
 802908a:	6cdd      	ldr	r5, [r3, #76]	; 0x4c
 802908c:	b905      	cbnz	r5, 8029090 <_ZNK8touchgfx13TextureMapper8drawQuadERKNS_4RectEPtPKfS6_S6_S6_S6_+0x260>
 802908e:	689d      	ldr	r5, [r3, #8]
 8029090:	682b      	ldr	r3, [r5, #0]
 8029092:	4620      	mov	r0, r4
 8029094:	6c1f      	ldr	r7, [r3, #64]	; 0x40
 8029096:	f7ff fec2 	bl	8028e1e <_ZNK8touchgfx13TextureMapper19lookupRenderVariantEv>
 802909a:	f894 3028 	ldrb.w	r3, [r4, #40]	; 0x28
 802909e:	9604      	str	r6, [sp, #16]
 80290a0:	e9cd 0302 	strd	r0, r3, [sp, #8]
 80290a4:	ab13      	add	r3, sp, #76	; 0x4c
 80290a6:	9301      	str	r3, [sp, #4]
 80290a8:	ab15      	add	r3, sp, #84	; 0x54
 80290aa:	9300      	str	r3, [sp, #0]
 80290ac:	aa1e      	add	r2, sp, #120	; 0x78
 80290ae:	ab19      	add	r3, sp, #100	; 0x64
 80290b0:	a917      	add	r1, sp, #92	; 0x5c
 80290b2:	4628      	mov	r0, r5
 80290b4:	47b8      	blx	r7
 80290b6:	b033      	add	sp, #204	; 0xcc
 80290b8:	ecbd 8b04 	vpop	{d8-d9}
 80290bc:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
 80290c0:	2300      	movs	r3, #0
 80290c2:	9312      	str	r3, [sp, #72]	; 0x48
 80290c4:	e6f7      	b.n	8028eb6 <_ZNK8touchgfx13TextureMapper8drawQuadERKNS_4RectEPtPKfS6_S6_S6_S6_+0x86>
 80290c6:	bf00      	nop
 80290c8:	20013816 	.word	0x20013816
 80290cc:	2001381c 	.word	0x2001381c

080290d0 <_ZNK8touchgfx13TextureMapper4drawERKNS_4RectE>:
 80290d0:	e92d 41f0 	stmdb	sp!, {r4, r5, r6, r7, r8, lr}
 80290d4:	ed2d 8b02 	vpush	{d8}
 80290d8:	f890 3028 	ldrb.w	r3, [r0, #40]	; 0x28
 80290dc:	b098      	sub	sp, #96	; 0x60
 80290de:	4604      	mov	r4, r0
 80290e0:	4688      	mov	r8, r1
 80290e2:	2b00      	cmp	r3, #0
 80290e4:	d077      	beq.n	80291d6 <_ZNK8touchgfx13TextureMapper4drawERKNS_4RectE+0x106>
 80290e6:	f100 0526 	add.w	r5, r0, #38	; 0x26
 80290ea:	4628      	mov	r0, r5
 80290ec:	f7f0 fec0 	bl	8019e70 <_ZNK8touchgfx6Bitmap8getWidthEv>
 80290f0:	ee07 0a90 	vmov	s15, r0
 80290f4:	4628      	mov	r0, r5
 80290f6:	eeb8 8ae7 	vcvt.f32.s32	s16, s15
 80290fa:	f7f0 feed 	bl	8019ed8 <_ZNK8touchgfx6Bitmap9getHeightEv>
 80290fe:	4b4e      	ldr	r3, [pc, #312]	; (8029238 <_ZNK8touchgfx13TextureMapper4drawERKNS_4RectE+0x168>)
 8029100:	781b      	ldrb	r3, [r3, #0]
 8029102:	ee07 0a90 	vmov	s15, r0
 8029106:	2b01      	cmp	r3, #1
 8029108:	eeb8 7ae7 	vcvt.f32.s32	s14, s15
 802910c:	eeff 7a00 	vmov.f32	s15, #240	; 0xbf800000 -1.0
 8029110:	d066      	beq.n	80291e0 <_ZNK8touchgfx13TextureMapper4drawERKNS_4RectE+0x110>
 8029112:	eeb0 6a47 	vmov.f32	s12, s14
 8029116:	ee17 3a10 	vmov	r3, s14
 802911a:	eeb0 4a48 	vmov.f32	s8, s16
 802911e:	eeb0 7a48 	vmov.f32	s14, s16
 8029122:	eef0 4a67 	vmov.f32	s9, s15
 8029126:	eeb0 8a67 	vmov.f32	s16, s15
 802912a:	ed94 5a17 	vldr	s10, [r4, #92]	; 0x5c
 802912e:	edd4 5a18 	vldr	s11, [r4, #96]	; 0x60
 8029132:	ed94 3a1b 	vldr	s6, [r4, #108]	; 0x6c
 8029136:	edd4 2a1d 	vldr	s5, [r4, #116]	; 0x74
 802913a:	ed94 2a1a 	vldr	s4, [r4, #104]	; 0x68
 802913e:	edd4 3a1e 	vldr	s7, [r4, #120]	; 0x78
 8029142:	6f25      	ldr	r5, [r4, #112]	; 0x70
 8029144:	6e66      	ldr	r6, [r4, #100]	; 0x64
 8029146:	6fe2      	ldr	r2, [r4, #124]	; 0x7c
 8029148:	f8d4 c080 	ldr.w	ip, [r4, #128]	; 0x80
 802914c:	f8d4 7084 	ldr.w	r7, [r4, #132]	; 0x84
 8029150:	f8d4 0088 	ldr.w	r0, [r4, #136]	; 0x88
 8029154:	ee73 1a65 	vsub.f32	s3, s6, s11
 8029158:	ee72 6ac5 	vsub.f32	s13, s5, s10
 802915c:	ee32 1a45 	vsub.f32	s2, s4, s10
 8029160:	ee66 6ae1 	vnmul.f32	s13, s13, s3
 8029164:	ee73 1ae5 	vsub.f32	s3, s7, s11
 8029168:	eee1 6a21 	vfma.f32	s13, s2, s3
 802916c:	eef5 6ac0 	vcmpe.f32	s13, #0.0
 8029170:	eef1 fa10 	vmrs	APSR_nzcv, fpscr
 8029174:	dd3d      	ble.n	80291f2 <_ZNK8touchgfx13TextureMapper4drawERKNS_4RectE+0x122>
 8029176:	ed8d 5a04 	vstr	s10, [sp, #16]
 802917a:	ed8d 2a05 	vstr	s4, [sp, #20]
 802917e:	edcd 2a06 	vstr	s5, [sp, #24]
 8029182:	f8cd c01c 	str.w	ip, [sp, #28]
 8029186:	edcd 5a08 	vstr	s11, [sp, #32]
 802918a:	ed8d 3a09 	vstr	s6, [sp, #36]	; 0x24
 802918e:	edcd 3a0a 	vstr	s7, [sp, #40]	; 0x28
 8029192:	970b      	str	r7, [sp, #44]	; 0x2c
 8029194:	960c      	str	r6, [sp, #48]	; 0x30
 8029196:	950d      	str	r5, [sp, #52]	; 0x34
 8029198:	920e      	str	r2, [sp, #56]	; 0x38
 802919a:	900f      	str	r0, [sp, #60]	; 0x3c
 802919c:	edcd 7a10 	vstr	s15, [sp, #64]	; 0x40
 80291a0:	ed8d 4a11 	vstr	s8, [sp, #68]	; 0x44
 80291a4:	ed8d 7a12 	vstr	s14, [sp, #72]	; 0x48
 80291a8:	edcd 4a13 	vstr	s9, [sp, #76]	; 0x4c
 80291ac:	ed8d 8a14 	vstr	s16, [sp, #80]	; 0x50
 80291b0:	edcd 7a15 	vstr	s15, [sp, #84]	; 0x54
 80291b4:	9316      	str	r3, [sp, #88]	; 0x58
 80291b6:	ed8d 6a17 	vstr	s12, [sp, #92]	; 0x5c
 80291ba:	ab14      	add	r3, sp, #80	; 0x50
 80291bc:	9303      	str	r3, [sp, #12]
 80291be:	ab10      	add	r3, sp, #64	; 0x40
 80291c0:	9302      	str	r3, [sp, #8]
 80291c2:	ab0c      	add	r3, sp, #48	; 0x30
 80291c4:	9301      	str	r3, [sp, #4]
 80291c6:	ab08      	add	r3, sp, #32
 80291c8:	9300      	str	r3, [sp, #0]
 80291ca:	2200      	movs	r2, #0
 80291cc:	ab04      	add	r3, sp, #16
 80291ce:	4641      	mov	r1, r8
 80291d0:	4620      	mov	r0, r4
 80291d2:	f7ff fe2d 	bl	8028e30 <_ZNK8touchgfx13TextureMapper8drawQuadERKNS_4RectEPtPKfS6_S6_S6_S6_>
 80291d6:	b018      	add	sp, #96	; 0x60
 80291d8:	ecbd 8b02 	vpop	{d8}
 80291dc:	e8bd 81f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, pc}
 80291e0:	eeb0 6a48 	vmov.f32	s12, s16
 80291e4:	eef0 4a47 	vmov.f32	s9, s14
 80291e8:	ee17 3a90 	vmov	r3, s15
 80291ec:	eeb0 4a67 	vmov.f32	s8, s15
 80291f0:	e79b      	b.n	802912a <_ZNK8touchgfx13TextureMapper4drawERKNS_4RectE+0x5a>
 80291f2:	ed8d 5a05 	vstr	s10, [sp, #20]
 80291f6:	ed8d 2a04 	vstr	s4, [sp, #16]
 80291fa:	f8cd c018 	str.w	ip, [sp, #24]
 80291fe:	edcd 2a07 	vstr	s5, [sp, #28]
 8029202:	edcd 5a09 	vstr	s11, [sp, #36]	; 0x24
 8029206:	ed8d 3a08 	vstr	s6, [sp, #32]
 802920a:	970a      	str	r7, [sp, #40]	; 0x28
 802920c:	edcd 3a0b 	vstr	s7, [sp, #44]	; 0x2c
 8029210:	960d      	str	r6, [sp, #52]	; 0x34
 8029212:	950c      	str	r5, [sp, #48]	; 0x30
 8029214:	900e      	str	r0, [sp, #56]	; 0x38
 8029216:	920f      	str	r2, [sp, #60]	; 0x3c
 8029218:	edcd 7a11 	vstr	s15, [sp, #68]	; 0x44
 802921c:	ed8d 4a10 	vstr	s8, [sp, #64]	; 0x40
 8029220:	edcd 4a12 	vstr	s9, [sp, #72]	; 0x48
 8029224:	ed8d 7a13 	vstr	s14, [sp, #76]	; 0x4c
 8029228:	ed8d 8a15 	vstr	s16, [sp, #84]	; 0x54
 802922c:	edcd 7a14 	vstr	s15, [sp, #80]	; 0x50
 8029230:	ed8d 6a16 	vstr	s12, [sp, #88]	; 0x58
 8029234:	9317      	str	r3, [sp, #92]	; 0x5c
 8029236:	e7c0      	b.n	80291ba <_ZNK8touchgfx13TextureMapper4drawERKNS_4RectE+0xea>
 8029238:	20013814 	.word	0x20013814

0802923c <_ZN8touchgfxmlERKNS_9Matrix4x4ERKNS_6Point4E>:
 802923c:	b5f0      	push	{r4, r5, r6, r7, lr}
 802923e:	b08d      	sub	sp, #52	; 0x34
 8029240:	2300      	movs	r3, #0
 8029242:	9304      	str	r3, [sp, #16]
 8029244:	9305      	str	r3, [sp, #20]
 8029246:	9306      	str	r3, [sp, #24]
 8029248:	aa04      	add	r2, sp, #16
 802924a:	f04f 537e 	mov.w	r3, #1065353216	; 0x3f800000
 802924e:	9307      	str	r3, [sp, #28]
 8029250:	f100 0640 	add.w	r6, r0, #64	; 0x40
 8029254:	4613      	mov	r3, r2
 8029256:	f101 0710 	add.w	r7, r1, #16
 802925a:	eddf 7a0f 	vldr	s15, [pc, #60]	; 8029298 <_ZN8touchgfxmlERKNS_9Matrix4x4ERKNS_6Point4E+0x5c>
 802925e:	460c      	mov	r4, r1
 8029260:	4605      	mov	r5, r0
 8029262:	ecb4 7a01 	vldmia	r4!, {s14}
 8029266:	ecf5 6a01 	vldmia	r5!, {s13}
 802926a:	42bc      	cmp	r4, r7
 802926c:	eee6 7a87 	vfma.f32	s15, s13, s14
 8029270:	d1f7      	bne.n	8029262 <_ZN8touchgfxmlERKNS_9Matrix4x4ERKNS_6Point4E+0x26>
 8029272:	3010      	adds	r0, #16
 8029274:	42b0      	cmp	r0, r6
 8029276:	ece2 7a01 	vstmia	r2!, {s15}
 802927a:	d1ee      	bne.n	802925a <_ZN8touchgfxmlERKNS_9Matrix4x4ERKNS_6Point4E+0x1e>
 802927c:	cb0f      	ldmia	r3, {r0, r1, r2, r3}
 802927e:	ac0c      	add	r4, sp, #48	; 0x30
 8029280:	e904 000f 	stmdb	r4, {r0, r1, r2, r3}
 8029284:	ed9d 0a08 	vldr	s0, [sp, #32]
 8029288:	eddd 0a09 	vldr	s1, [sp, #36]	; 0x24
 802928c:	ed9d 1a0a 	vldr	s2, [sp, #40]	; 0x28
 8029290:	eddd 1a0b 	vldr	s3, [sp, #44]	; 0x2c
 8029294:	b00d      	add	sp, #52	; 0x34
 8029296:	bdf0      	pop	{r4, r5, r6, r7, pc}
 8029298:	00000000 	.word	0x00000000

0802929c <_ZN8touchgfx9Matrix4x4C1Ev>:
 802929c:	ed9f 7a0b 	vldr	s14, [pc, #44]	; 80292cc <_ZN8touchgfx9Matrix4x4C1Ev+0x30>
 80292a0:	2300      	movs	r3, #0
 80292a2:	eef7 7a00 	vmov.f32	s15, #112	; 0x3f800000  1.0
 80292a6:	eb00 1103 	add.w	r1, r0, r3, lsl #4
 80292aa:	2200      	movs	r2, #0
 80292ac:	4293      	cmp	r3, r2
 80292ae:	f102 0201 	add.w	r2, r2, #1
 80292b2:	bf14      	ite	ne
 80292b4:	eef0 6a47 	vmovne.f32	s13, s14
 80292b8:	eef0 6a67 	vmoveq.f32	s13, s15
 80292bc:	2a04      	cmp	r2, #4
 80292be:	ece1 6a01 	vstmia	r1!, {s13}
 80292c2:	d1f3      	bne.n	80292ac <_ZN8touchgfx9Matrix4x4C1Ev+0x10>
 80292c4:	3301      	adds	r3, #1
 80292c6:	2b04      	cmp	r3, #4
 80292c8:	d1ed      	bne.n	80292a6 <_ZN8touchgfx9Matrix4x4C1Ev+0xa>
 80292ca:	4770      	bx	lr
 80292cc:	00000000 	.word	0x00000000

080292d0 <_ZN8touchgfxmlERKNS_9Matrix4x4ES2_>:
 80292d0:	e92d 41f0 	stmdb	sp!, {r4, r5, r6, r7, r8, lr}
 80292d4:	460c      	mov	r4, r1
 80292d6:	4605      	mov	r5, r0
 80292d8:	4690      	mov	r8, r2
 80292da:	f7ff ffdf 	bl	802929c <_ZN8touchgfx9Matrix4x4C1Ev>
 80292de:	4628      	mov	r0, r5
 80292e0:	4621      	mov	r1, r4
 80292e2:	f104 0c40 	add.w	ip, r4, #64	; 0x40
 80292e6:	2300      	movs	r3, #0
 80292e8:	eddf 7a0f 	vldr	s15, [pc, #60]	; 8029328 <_ZN8touchgfxmlERKNS_9Matrix4x4ES2_+0x58>
 80292ec:	eb08 0603 	add.w	r6, r8, r3
 80292f0:	460f      	mov	r7, r1
 80292f2:	2400      	movs	r4, #0
 80292f4:	4632      	mov	r2, r6
 80292f6:	ecf7 6a01 	vldmia	r7!, {s13}
 80292fa:	ed92 7a00 	vldr	s14, [r2]
 80292fe:	3401      	adds	r4, #1
 8029300:	2c04      	cmp	r4, #4
 8029302:	f106 0610 	add.w	r6, r6, #16
 8029306:	eee6 7a87 	vfma.f32	s15, s13, s14
 802930a:	d1f3      	bne.n	80292f4 <_ZN8touchgfxmlERKNS_9Matrix4x4ES2_+0x24>
 802930c:	18c2      	adds	r2, r0, r3
 802930e:	3304      	adds	r3, #4
 8029310:	2b10      	cmp	r3, #16
 8029312:	edc2 7a00 	vstr	s15, [r2]
 8029316:	d1e7      	bne.n	80292e8 <_ZN8touchgfxmlERKNS_9Matrix4x4ES2_+0x18>
 8029318:	3110      	adds	r1, #16
 802931a:	4561      	cmp	r1, ip
 802931c:	f100 0010 	add.w	r0, r0, #16
 8029320:	d1e1      	bne.n	80292e6 <_ZN8touchgfxmlERKNS_9Matrix4x4ES2_+0x16>
 8029322:	4628      	mov	r0, r5
 8029324:	e8bd 81f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, pc}
 8029328:	00000000 	.word	0x00000000

0802932c <_ZN8touchgfx9Matrix4x415setViewDistanceEf>:
 802932c:	eef7 7a00 	vmov.f32	s15, #112	; 0x3f800000  1.0
 8029330:	ee87 0a80 	vdiv.f32	s0, s15, s0
 8029334:	f100 0320 	add.w	r3, r0, #32
 8029338:	3030      	adds	r0, #48	; 0x30
 802933a:	ecf3 7a01 	vldmia	r3!, {s15}
 802933e:	ee60 7a27 	vmul.f32	s15, s0, s15
 8029342:	4283      	cmp	r3, r0
 8029344:	edc3 7a03 	vstr	s15, [r3, #12]
 8029348:	d1f7      	bne.n	802933a <_ZN8touchgfx9Matrix4x415setViewDistanceEf+0xe>
 802934a:	4770      	bx	lr

0802934c <_ZN8touchgfx9Matrix4x420concatenateXRotationEf>:
 802934c:	b510      	push	{r4, lr}
 802934e:	ed2d 8b02 	vpush	{d8}
 8029352:	4604      	mov	r4, r0
 8029354:	eef0 8a40 	vmov.f32	s17, s0
 8029358:	f001 fa7a 	bl	802a850 <sinf>
 802935c:	eeb0 8a40 	vmov.f32	s16, s0
 8029360:	eeb0 0a68 	vmov.f32	s0, s17
 8029364:	f001 fa30 	bl	802a7c8 <cosf>
 8029368:	f104 0310 	add.w	r3, r4, #16
 802936c:	f104 0220 	add.w	r2, r4, #32
 8029370:	eeb1 6a48 	vneg.f32	s12, s16
 8029374:	edd3 7a04 	vldr	s15, [r3, #16]
 8029378:	edd3 6a00 	vldr	s13, [r3]
 802937c:	ee26 7a27 	vmul.f32	s14, s12, s15
 8029380:	ee67 7a80 	vmul.f32	s15, s15, s0
 8029384:	eea6 7a80 	vfma.f32	s14, s13, s0
 8029388:	eee6 7a88 	vfma.f32	s15, s13, s16
 802938c:	eca3 7a01 	vstmia	r3!, {s14}
 8029390:	429a      	cmp	r2, r3
 8029392:	edc3 7a03 	vstr	s15, [r3, #12]
 8029396:	d1ed      	bne.n	8029374 <_ZN8touchgfx9Matrix4x420concatenateXRotationEf+0x28>
 8029398:	ecbd 8b02 	vpop	{d8}
 802939c:	4620      	mov	r0, r4
 802939e:	bd10      	pop	{r4, pc}

080293a0 <_ZN8touchgfx9Matrix4x420concatenateYRotationEf>:
 80293a0:	b510      	push	{r4, lr}
 80293a2:	ed2d 8b02 	vpush	{d8}
 80293a6:	4604      	mov	r4, r0
 80293a8:	eef0 8a40 	vmov.f32	s17, s0
 80293ac:	f001 fa50 	bl	802a850 <sinf>
 80293b0:	eeb0 8a40 	vmov.f32	s16, s0
 80293b4:	eeb0 0a68 	vmov.f32	s0, s17
 80293b8:	f001 fa06 	bl	802a7c8 <cosf>
 80293bc:	4623      	mov	r3, r4
 80293be:	f104 0210 	add.w	r2, r4, #16
 80293c2:	eeb1 6a48 	vneg.f32	s12, s16
 80293c6:	edd3 7a08 	vldr	s15, [r3, #32]
 80293ca:	edd3 6a00 	vldr	s13, [r3]
 80293ce:	ee27 7a88 	vmul.f32	s14, s15, s16
 80293d2:	ee67 7a80 	vmul.f32	s15, s15, s0
 80293d6:	eea6 7a80 	vfma.f32	s14, s13, s0
 80293da:	eee6 7a26 	vfma.f32	s15, s12, s13
 80293de:	eca3 7a01 	vstmia	r3!, {s14}
 80293e2:	429a      	cmp	r2, r3
 80293e4:	edc3 7a07 	vstr	s15, [r3, #28]
 80293e8:	d1ed      	bne.n	80293c6 <_ZN8touchgfx9Matrix4x420concatenateYRotationEf+0x26>
 80293ea:	ecbd 8b02 	vpop	{d8}
 80293ee:	4620      	mov	r0, r4
 80293f0:	bd10      	pop	{r4, pc}

080293f2 <_ZN8touchgfx9Matrix4x420concatenateZRotationEf>:
 80293f2:	b510      	push	{r4, lr}
 80293f4:	ed2d 8b02 	vpush	{d8}
 80293f8:	4604      	mov	r4, r0
 80293fa:	eef0 8a40 	vmov.f32	s17, s0
 80293fe:	f001 fa27 	bl	802a850 <sinf>
 8029402:	eeb0 8a40 	vmov.f32	s16, s0
 8029406:	eeb0 0a68 	vmov.f32	s0, s17
 802940a:	f001 f9dd 	bl	802a7c8 <cosf>
 802940e:	4623      	mov	r3, r4
 8029410:	f104 0210 	add.w	r2, r4, #16
 8029414:	eeb1 6a48 	vneg.f32	s12, s16
 8029418:	edd3 7a04 	vldr	s15, [r3, #16]
 802941c:	edd3 6a00 	vldr	s13, [r3]
 8029420:	ee26 7a27 	vmul.f32	s14, s12, s15
 8029424:	ee67 7a80 	vmul.f32	s15, s15, s0
 8029428:	eea6 7a80 	vfma.f32	s14, s13, s0
 802942c:	eee6 7a88 	vfma.f32	s15, s13, s16
 8029430:	eca3 7a01 	vstmia	r3!, {s14}
 8029434:	429a      	cmp	r2, r3
 8029436:	edc3 7a03 	vstr	s15, [r3, #12]
 802943a:	d1ed      	bne.n	8029418 <_ZN8touchgfx9Matrix4x420concatenateZRotationEf+0x26>
 802943c:	ecbd 8b02 	vpop	{d8}
 8029440:	4620      	mov	r0, r4
 8029442:	bd10      	pop	{r4, pc}

08029444 <_ZN8touchgfx9Matrix4x423concatenateXTranslationEf>:
 8029444:	4603      	mov	r3, r0
 8029446:	f100 0210 	add.w	r2, r0, #16
 802944a:	ed93 7a0c 	vldr	s14, [r3, #48]	; 0x30
 802944e:	edd3 7a00 	vldr	s15, [r3]
 8029452:	eee7 7a00 	vfma.f32	s15, s14, s0
 8029456:	ece3 7a01 	vstmia	r3!, {s15}
 802945a:	4293      	cmp	r3, r2
 802945c:	d1f5      	bne.n	802944a <_ZN8touchgfx9Matrix4x423concatenateXTranslationEf+0x6>
 802945e:	4770      	bx	lr

08029460 <_ZN8touchgfx9Matrix4x423concatenateYTranslationEf>:
 8029460:	f100 0310 	add.w	r3, r0, #16
 8029464:	f100 0220 	add.w	r2, r0, #32
 8029468:	ed93 7a08 	vldr	s14, [r3, #32]
 802946c:	edd3 7a00 	vldr	s15, [r3]
 8029470:	eee7 7a00 	vfma.f32	s15, s14, s0
 8029474:	ece3 7a01 	vstmia	r3!, {s15}
 8029478:	4293      	cmp	r3, r2
 802947a:	d1f5      	bne.n	8029468 <_ZN8touchgfx9Matrix4x423concatenateYTranslationEf+0x8>
 802947c:	4770      	bx	lr

0802947e <_ZN8touchgfx9Matrix4x423concatenateZTranslationEf>:
 802947e:	f100 0320 	add.w	r3, r0, #32
 8029482:	f100 0230 	add.w	r2, r0, #48	; 0x30
 8029486:	ed93 7a04 	vldr	s14, [r3, #16]
 802948a:	edd3 7a00 	vldr	s15, [r3]
 802948e:	eee7 7a00 	vfma.f32	s15, s14, s0
 8029492:	ece3 7a01 	vstmia	r3!, {s15}
 8029496:	4293      	cmp	r3, r2
 8029498:	d1f5      	bne.n	8029486 <_ZN8touchgfx9Matrix4x423concatenateZTranslationEf+0x8>
 802949a:	4770      	bx	lr

0802949c <_ZN8touchgfx9Matrix4x417concatenateXScaleEf>:
 802949c:	4603      	mov	r3, r0
 802949e:	f100 0210 	add.w	r2, r0, #16
 80294a2:	edd3 7a00 	vldr	s15, [r3]
 80294a6:	ee67 7a80 	vmul.f32	s15, s15, s0
 80294aa:	ece3 7a01 	vstmia	r3!, {s15}
 80294ae:	4293      	cmp	r3, r2
 80294b0:	d1f7      	bne.n	80294a2 <_ZN8touchgfx9Matrix4x417concatenateXScaleEf+0x6>
 80294b2:	4770      	bx	lr

080294b4 <_ZN8touchgfx9Matrix4x417concatenateYScaleEf>:
 80294b4:	f100 0310 	add.w	r3, r0, #16
 80294b8:	f100 0220 	add.w	r2, r0, #32
 80294bc:	edd3 7a00 	vldr	s15, [r3]
 80294c0:	ee67 7a80 	vmul.f32	s15, s15, s0
 80294c4:	ece3 7a01 	vstmia	r3!, {s15}
 80294c8:	4293      	cmp	r3, r2
 80294ca:	d1f7      	bne.n	80294bc <_ZN8touchgfx9Matrix4x417concatenateYScaleEf+0x8>
 80294cc:	4770      	bx	lr

080294ce <_ZN8touchgfx9Matrix4x417concatenateZScaleEf>:
 80294ce:	f100 0320 	add.w	r3, r0, #32
 80294d2:	f100 0230 	add.w	r2, r0, #48	; 0x30
 80294d6:	edd3 7a00 	vldr	s15, [r3]
 80294da:	ee67 7a80 	vmul.f32	s15, s15, s0
 80294de:	ece3 7a01 	vstmia	r3!, {s15}
 80294e2:	4293      	cmp	r3, r2
 80294e4:	d1f7      	bne.n	80294d6 <_ZN8touchgfx9Matrix4x417concatenateZScaleEf+0x8>
 80294e6:	4770      	bx	lr

080294e8 <arm_max_f32>:
 80294e8:	e92d 41f0 	stmdb	sp!, {r4, r5, r6, r7, r8, lr}
 80294ec:	1e4f      	subs	r7, r1, #1
 80294ee:	ea5f 0897 	movs.w	r8, r7, lsr #2
 80294f2:	f100 0e04 	add.w	lr, r0, #4
 80294f6:	edd0 7a00 	vldr	s15, [r0]
 80294fa:	d058      	beq.n	80295ae <arm_max_f32+0xc6>
 80294fc:	3014      	adds	r0, #20
 80294fe:	46c4      	mov	ip, r8
 8029500:	2604      	movs	r6, #4
 8029502:	2400      	movs	r4, #0
 8029504:	ed10 6a04 	vldr	s12, [r0, #-16]
 8029508:	ed50 6a03 	vldr	s13, [r0, #-12]
 802950c:	ed10 7a02 	vldr	s14, [r0, #-8]
 8029510:	ed50 5a01 	vldr	s11, [r0, #-4]
 8029514:	eeb4 6ae7 	vcmpe.f32	s12, s15
 8029518:	eef1 fa10 	vmrs	APSR_nzcv, fpscr
 802951c:	bfc8      	it	gt
 802951e:	eef0 7a46 	vmovgt.f32	s15, s12
 8029522:	f1a6 0503 	sub.w	r5, r6, #3
 8029526:	eef4 7ae6 	vcmpe.f32	s15, s13
 802952a:	bfc8      	it	gt
 802952c:	462c      	movgt	r4, r5
 802952e:	eef1 fa10 	vmrs	APSR_nzcv, fpscr
 8029532:	bf48      	it	mi
 8029534:	eef0 7a66 	vmovmi.f32	s15, s13
 8029538:	f1a6 0502 	sub.w	r5, r6, #2
 802953c:	eef4 7ac7 	vcmpe.f32	s15, s14
 8029540:	bf48      	it	mi
 8029542:	462c      	movmi	r4, r5
 8029544:	eef1 fa10 	vmrs	APSR_nzcv, fpscr
 8029548:	bf48      	it	mi
 802954a:	eef0 7a47 	vmovmi.f32	s15, s14
 802954e:	f106 35ff 	add.w	r5, r6, #4294967295
 8029552:	eef4 7ae5 	vcmpe.f32	s15, s11
 8029556:	bf48      	it	mi
 8029558:	462c      	movmi	r4, r5
 802955a:	eef1 fa10 	vmrs	APSR_nzcv, fpscr
 802955e:	bf48      	it	mi
 8029560:	4634      	movmi	r4, r6
 8029562:	bf48      	it	mi
 8029564:	eef0 7a65 	vmovmi.f32	s15, s11
 8029568:	f1bc 0c01 	subs.w	ip, ip, #1
 802956c:	f106 0604 	add.w	r6, r6, #4
 8029570:	f100 0010 	add.w	r0, r0, #16
 8029574:	d1c6      	bne.n	8029504 <arm_max_f32+0x1c>
 8029576:	eb0e 1e08 	add.w	lr, lr, r8, lsl #4
 802957a:	f017 0003 	ands.w	r0, r7, #3
 802957e:	d018      	beq.n	80295b2 <arm_max_f32+0xca>
 8029580:	1a08      	subs	r0, r1, r0
 8029582:	ecbe 7a01 	vldmia	lr!, {s14}
 8029586:	eeb4 7ae7 	vcmpe.f32	s14, s15
 802958a:	eef1 fa10 	vmrs	APSR_nzcv, fpscr
 802958e:	bfc8      	it	gt
 8029590:	4604      	movgt	r4, r0
 8029592:	f100 0001 	add.w	r0, r0, #1
 8029596:	bfd8      	it	le
 8029598:	eeb0 7a67 	vmovle.f32	s14, s15
 802959c:	4288      	cmp	r0, r1
 802959e:	eef0 7a47 	vmov.f32	s15, s14
 80295a2:	d1ee      	bne.n	8029582 <arm_max_f32+0x9a>
 80295a4:	ed82 7a00 	vstr	s14, [r2]
 80295a8:	601c      	str	r4, [r3, #0]
 80295aa:	e8bd 81f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, pc}
 80295ae:	4644      	mov	r4, r8
 80295b0:	e7e3      	b.n	802957a <arm_max_f32+0x92>
 80295b2:	eeb0 7a67 	vmov.f32	s14, s15
 80295b6:	e7f5      	b.n	80295a4 <arm_max_f32+0xbc>

080295b8 <arm_rfft_fast_init_f32>:
 80295b8:	084b      	lsrs	r3, r1, #1
 80295ba:	2b80      	cmp	r3, #128	; 0x80
 80295bc:	b410      	push	{r4}
 80295be:	8201      	strh	r1, [r0, #16]
 80295c0:	8003      	strh	r3, [r0, #0]
 80295c2:	d047      	beq.n	8029654 <arm_rfft_fast_init_f32+0x9c>
 80295c4:	d917      	bls.n	80295f6 <arm_rfft_fast_init_f32+0x3e>
 80295c6:	f5b3 7f00 	cmp.w	r3, #512	; 0x200
 80295ca:	d03d      	beq.n	8029648 <arm_rfft_fast_init_f32+0x90>
 80295cc:	d929      	bls.n	8029622 <arm_rfft_fast_init_f32+0x6a>
 80295ce:	f5b3 6f80 	cmp.w	r3, #1024	; 0x400
 80295d2:	d020      	beq.n	8029616 <arm_rfft_fast_init_f32+0x5e>
 80295d4:	f5b3 6f00 	cmp.w	r3, #2048	; 0x800
 80295d8:	d113      	bne.n	8029602 <arm_rfft_fast_init_f32+0x4a>
 80295da:	4921      	ldr	r1, [pc, #132]	; (8029660 <arm_rfft_fast_init_f32+0xa8>)
 80295dc:	4a21      	ldr	r2, [pc, #132]	; (8029664 <arm_rfft_fast_init_f32+0xac>)
 80295de:	4b22      	ldr	r3, [pc, #136]	; (8029668 <arm_rfft_fast_init_f32+0xb0>)
 80295e0:	f44f 646e 	mov.w	r4, #3808	; 0xee0
 80295e4:	8184      	strh	r4, [r0, #12]
 80295e6:	6081      	str	r1, [r0, #8]
 80295e8:	6042      	str	r2, [r0, #4]
 80295ea:	6143      	str	r3, [r0, #20]
 80295ec:	2000      	movs	r0, #0
 80295ee:	b240      	sxtb	r0, r0
 80295f0:	f85d 4b04 	ldr.w	r4, [sp], #4
 80295f4:	4770      	bx	lr
 80295f6:	2b20      	cmp	r3, #32
 80295f8:	d01c      	beq.n	8029634 <arm_rfft_fast_init_f32+0x7c>
 80295fa:	2b40      	cmp	r3, #64	; 0x40
 80295fc:	d006      	beq.n	802960c <arm_rfft_fast_init_f32+0x54>
 80295fe:	2b10      	cmp	r3, #16
 8029600:	d01d      	beq.n	802963e <arm_rfft_fast_init_f32+0x86>
 8029602:	20ff      	movs	r0, #255	; 0xff
 8029604:	b240      	sxtb	r0, r0
 8029606:	f85d 4b04 	ldr.w	r4, [sp], #4
 802960a:	4770      	bx	lr
 802960c:	2438      	movs	r4, #56	; 0x38
 802960e:	4917      	ldr	r1, [pc, #92]	; (802966c <arm_rfft_fast_init_f32+0xb4>)
 8029610:	4a17      	ldr	r2, [pc, #92]	; (8029670 <arm_rfft_fast_init_f32+0xb8>)
 8029612:	4b18      	ldr	r3, [pc, #96]	; (8029674 <arm_rfft_fast_init_f32+0xbc>)
 8029614:	e7e6      	b.n	80295e4 <arm_rfft_fast_init_f32+0x2c>
 8029616:	f44f 64e1 	mov.w	r4, #1800	; 0x708
 802961a:	4917      	ldr	r1, [pc, #92]	; (8029678 <arm_rfft_fast_init_f32+0xc0>)
 802961c:	4a17      	ldr	r2, [pc, #92]	; (802967c <arm_rfft_fast_init_f32+0xc4>)
 802961e:	4b18      	ldr	r3, [pc, #96]	; (8029680 <arm_rfft_fast_init_f32+0xc8>)
 8029620:	e7e0      	b.n	80295e4 <arm_rfft_fast_init_f32+0x2c>
 8029622:	f5b3 7f80 	cmp.w	r3, #256	; 0x100
 8029626:	d1ec      	bne.n	8029602 <arm_rfft_fast_init_f32+0x4a>
 8029628:	f44f 74dc 	mov.w	r4, #440	; 0x1b8
 802962c:	4915      	ldr	r1, [pc, #84]	; (8029684 <arm_rfft_fast_init_f32+0xcc>)
 802962e:	4a16      	ldr	r2, [pc, #88]	; (8029688 <arm_rfft_fast_init_f32+0xd0>)
 8029630:	4b16      	ldr	r3, [pc, #88]	; (802968c <arm_rfft_fast_init_f32+0xd4>)
 8029632:	e7d7      	b.n	80295e4 <arm_rfft_fast_init_f32+0x2c>
 8029634:	2430      	movs	r4, #48	; 0x30
 8029636:	4916      	ldr	r1, [pc, #88]	; (8029690 <arm_rfft_fast_init_f32+0xd8>)
 8029638:	4a16      	ldr	r2, [pc, #88]	; (8029694 <arm_rfft_fast_init_f32+0xdc>)
 802963a:	4b17      	ldr	r3, [pc, #92]	; (8029698 <arm_rfft_fast_init_f32+0xe0>)
 802963c:	e7d2      	b.n	80295e4 <arm_rfft_fast_init_f32+0x2c>
 802963e:	2414      	movs	r4, #20
 8029640:	4916      	ldr	r1, [pc, #88]	; (802969c <arm_rfft_fast_init_f32+0xe4>)
 8029642:	4a17      	ldr	r2, [pc, #92]	; (80296a0 <arm_rfft_fast_init_f32+0xe8>)
 8029644:	4b17      	ldr	r3, [pc, #92]	; (80296a4 <arm_rfft_fast_init_f32+0xec>)
 8029646:	e7cd      	b.n	80295e4 <arm_rfft_fast_init_f32+0x2c>
 8029648:	f44f 74e0 	mov.w	r4, #448	; 0x1c0
 802964c:	4916      	ldr	r1, [pc, #88]	; (80296a8 <arm_rfft_fast_init_f32+0xf0>)
 802964e:	4a17      	ldr	r2, [pc, #92]	; (80296ac <arm_rfft_fast_init_f32+0xf4>)
 8029650:	4b17      	ldr	r3, [pc, #92]	; (80296b0 <arm_rfft_fast_init_f32+0xf8>)
 8029652:	e7c7      	b.n	80295e4 <arm_rfft_fast_init_f32+0x2c>
 8029654:	24d0      	movs	r4, #208	; 0xd0
 8029656:	4917      	ldr	r1, [pc, #92]	; (80296b4 <arm_rfft_fast_init_f32+0xfc>)
 8029658:	4a17      	ldr	r2, [pc, #92]	; (80296b8 <arm_rfft_fast_init_f32+0x100>)
 802965a:	4b18      	ldr	r3, [pc, #96]	; (80296bc <arm_rfft_fast_init_f32+0x104>)
 802965c:	e7c2      	b.n	80295e4 <arm_rfft_fast_init_f32+0x2c>
 802965e:	bf00      	nop
 8029660:	0803eb88 	.word	0x0803eb88
 8029664:	0802fd80 	.word	0x0802fd80
 8029668:	08035ef0 	.word	0x08035ef0
 802966c:	08033e80 	.word	0x08033e80
 8029670:	08040948 	.word	0x08040948
 8029674:	08042e38 	.word	0x08042e38
 8029678:	0803c870 	.word	0x0803c870
 802967c:	0803a770 	.word	0x0803a770
 8029680:	08033ef0 	.word	0x08033ef0
 8029684:	08042ac8 	.word	0x08042ac8
 8029688:	08039ef0 	.word	0x08039ef0
 802968c:	08040b48 	.word	0x08040b48
 8029690:	0803d728 	.word	0x0803d728
 8029694:	0803c770 	.word	0x0803c770
 8029698:	08033d80 	.word	0x08033d80
 802969c:	0803d680 	.word	0x0803d680
 80296a0:	0803a6f0 	.word	0x0803a6f0
 80296a4:	0803d6a8 	.word	0x0803d6a8
 80296a8:	08041348 	.word	0x08041348
 80296ac:	0803db88 	.word	0x0803db88
 80296b0:	080416c8 	.word	0x080416c8
 80296b4:	08043038 	.word	0x08043038
 80296b8:	0803d788 	.word	0x0803d788
 80296bc:	080426c8 	.word	0x080426c8

080296c0 <arm_rfft_fast_f32>:
 80296c0:	e92d 41f0 	stmdb	sp!, {r4, r5, r6, r7, r8, lr}
 80296c4:	8a06      	ldrh	r6, [r0, #16]
 80296c6:	0876      	lsrs	r6, r6, #1
 80296c8:	4607      	mov	r7, r0
 80296ca:	4615      	mov	r5, r2
 80296cc:	8006      	strh	r6, [r0, #0]
 80296ce:	460c      	mov	r4, r1
 80296d0:	2b00      	cmp	r3, #0
 80296d2:	d15c      	bne.n	802978e <arm_rfft_fast_f32+0xce>
 80296d4:	461a      	mov	r2, r3
 80296d6:	2301      	movs	r3, #1
 80296d8:	f000 fbe6 	bl	8029ea8 <arm_cfft_f32>
 80296dc:	edd4 7a00 	vldr	s15, [r4]
 80296e0:	ed94 7a01 	vldr	s14, [r4, #4]
 80296e4:	883e      	ldrh	r6, [r7, #0]
 80296e6:	6978      	ldr	r0, [r7, #20]
 80296e8:	ee37 7a07 	vadd.f32	s14, s14, s14
 80296ec:	ee77 7aa7 	vadd.f32	s15, s15, s15
 80296f0:	eef6 3a00 	vmov.f32	s7, #96	; 0x3f000000  0.5
 80296f4:	ee77 6a87 	vadd.f32	s13, s15, s14
 80296f8:	ee77 7ac7 	vsub.f32	s15, s15, s14
 80296fc:	3e01      	subs	r6, #1
 80296fe:	ee26 7aa3 	vmul.f32	s14, s13, s7
 8029702:	ee67 7aa3 	vmul.f32	s15, s15, s7
 8029706:	eb04 03c6 	add.w	r3, r4, r6, lsl #3
 802970a:	ed85 7a00 	vstr	s14, [r5]
 802970e:	edc5 7a01 	vstr	s15, [r5, #4]
 8029712:	3010      	adds	r0, #16
 8029714:	f105 0210 	add.w	r2, r5, #16
 8029718:	3b08      	subs	r3, #8
 802971a:	f104 0110 	add.w	r1, r4, #16
 802971e:	ed51 4a02 	vldr	s9, [r1, #-8]
 8029722:	ed93 5a02 	vldr	s10, [r3, #8]
 8029726:	ed11 7a01 	vldr	s14, [r1, #-4]
 802972a:	ed10 6a02 	vldr	s12, [r0, #-8]
 802972e:	edd3 5a03 	vldr	s11, [r3, #12]
 8029732:	ed50 6a01 	vldr	s13, [r0, #-4]
 8029736:	ee75 7a64 	vsub.f32	s15, s10, s9
 802973a:	ee35 4a87 	vadd.f32	s8, s11, s14
 802973e:	ee35 5a24 	vadd.f32	s10, s10, s9
 8029742:	ee77 5a65 	vsub.f32	s11, s14, s11
 8029746:	ee66 4a27 	vmul.f32	s9, s12, s15
 802974a:	ee26 7aa7 	vmul.f32	s14, s13, s15
 802974e:	ee34 5a85 	vadd.f32	s10, s9, s10
 8029752:	ee26 6a04 	vmul.f32	s12, s12, s8
 8029756:	ee66 6a84 	vmul.f32	s13, s13, s8
 802975a:	ee77 7a25 	vadd.f32	s15, s14, s11
 802975e:	ee76 6a85 	vadd.f32	s13, s13, s10
 8029762:	ee77 7ac6 	vsub.f32	s15, s15, s12
 8029766:	ee66 6aa3 	vmul.f32	s13, s13, s7
 802976a:	ee67 7aa3 	vmul.f32	s15, s15, s7
 802976e:	3e01      	subs	r6, #1
 8029770:	ed42 6a02 	vstr	s13, [r2, #-8]
 8029774:	ed42 7a01 	vstr	s15, [r2, #-4]
 8029778:	f1a3 0308 	sub.w	r3, r3, #8
 802977c:	f101 0108 	add.w	r1, r1, #8
 8029780:	f100 0008 	add.w	r0, r0, #8
 8029784:	f102 0208 	add.w	r2, r2, #8
 8029788:	d1c9      	bne.n	802971e <arm_rfft_fast_f32+0x5e>
 802978a:	e8bd 81f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, pc}
 802978e:	edd1 7a00 	vldr	s15, [r1]
 8029792:	edd1 6a01 	vldr	s13, [r1, #4]
 8029796:	6941      	ldr	r1, [r0, #20]
 8029798:	ee37 7aa6 	vadd.f32	s14, s15, s13
 802979c:	ee77 7ae6 	vsub.f32	s15, s15, s13
 80297a0:	eef6 3a00 	vmov.f32	s7, #96	; 0x3f000000  0.5
 80297a4:	ee27 7a23 	vmul.f32	s14, s14, s7
 80297a8:	ee67 7aa3 	vmul.f32	s15, s15, s7
 80297ac:	3e01      	subs	r6, #1
 80297ae:	ed82 7a00 	vstr	s14, [r2]
 80297b2:	edc2 7a01 	vstr	s15, [r2, #4]
 80297b6:	00f0      	lsls	r0, r6, #3
 80297b8:	b3ee      	cbz	r6, 8029836 <arm_rfft_fast_f32+0x176>
 80297ba:	3808      	subs	r0, #8
 80297bc:	f101 0e10 	add.w	lr, r1, #16
 80297c0:	4420      	add	r0, r4
 80297c2:	f104 0110 	add.w	r1, r4, #16
 80297c6:	f102 0c10 	add.w	ip, r2, #16
 80297ca:	ed90 7a02 	vldr	s14, [r0, #8]
 80297ce:	ed51 6a02 	vldr	s13, [r1, #-8]
 80297d2:	ed1e 6a02 	vldr	s12, [lr, #-8]
 80297d6:	ed90 4a03 	vldr	s8, [r0, #12]
 80297da:	ed11 5a01 	vldr	s10, [r1, #-4]
 80297de:	ed5e 5a01 	vldr	s11, [lr, #-4]
 80297e2:	ee76 7ac7 	vsub.f32	s15, s13, s14
 80297e6:	ee74 4a05 	vadd.f32	s9, s8, s10
 80297ea:	ee26 3a27 	vmul.f32	s6, s12, s15
 80297ee:	ee77 6a26 	vadd.f32	s13, s14, s13
 80297f2:	ee35 5a44 	vsub.f32	s10, s10, s8
 80297f6:	ee25 7aa7 	vmul.f32	s14, s11, s15
 80297fa:	ee76 6ac3 	vsub.f32	s13, s13, s6
 80297fe:	ee77 7a05 	vadd.f32	s15, s14, s10
 8029802:	ee26 6a24 	vmul.f32	s12, s12, s9
 8029806:	ee65 5aa4 	vmul.f32	s11, s11, s9
 802980a:	ee77 7ac6 	vsub.f32	s15, s15, s12
 802980e:	ee36 7ae5 	vsub.f32	s14, s13, s11
 8029812:	ee67 7aa3 	vmul.f32	s15, s15, s7
 8029816:	ee27 7a23 	vmul.f32	s14, s14, s7
 802981a:	3e01      	subs	r6, #1
 802981c:	ed0c 7a02 	vstr	s14, [ip, #-8]
 8029820:	ed4c 7a01 	vstr	s15, [ip, #-4]
 8029824:	f1a0 0008 	sub.w	r0, r0, #8
 8029828:	f101 0108 	add.w	r1, r1, #8
 802982c:	f10e 0e08 	add.w	lr, lr, #8
 8029830:	f10c 0c08 	add.w	ip, ip, #8
 8029834:	d1c9      	bne.n	80297ca <arm_rfft_fast_f32+0x10a>
 8029836:	4638      	mov	r0, r7
 8029838:	4629      	mov	r1, r5
 802983a:	461a      	mov	r2, r3
 802983c:	e8bd 41f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, lr}
 8029840:	2301      	movs	r3, #1
 8029842:	f000 bb31 	b.w	8029ea8 <arm_cfft_f32>
 8029846:	bf00      	nop

08029848 <arm_cfft_radix8by2_f32>:
 8029848:	e92d 41f0 	stmdb	sp!, {r4, r5, r6, r7, r8, lr}
 802984c:	ed2d 8b08 	vpush	{d8-d11}
 8029850:	f8b0 e000 	ldrh.w	lr, [r0]
 8029854:	6842      	ldr	r2, [r0, #4]
 8029856:	ea4f 0c5e 	mov.w	ip, lr, lsr #1
 802985a:	eb01 088e 	add.w	r8, r1, lr, lsl #2
 802985e:	ea5f 0ede 	movs.w	lr, lr, lsr #3
 8029862:	4607      	mov	r7, r0
 8029864:	ea4f 038c 	mov.w	r3, ip, lsl #2
 8029868:	f000 80af 	beq.w	80299ca <arm_cfft_radix8by2_f32+0x182>
 802986c:	3310      	adds	r3, #16
 802986e:	18ce      	adds	r6, r1, r3
 8029870:	3210      	adds	r2, #16
 8029872:	4443      	add	r3, r8
 8029874:	f101 0510 	add.w	r5, r1, #16
 8029878:	f108 0410 	add.w	r4, r8, #16
 802987c:	ed54 1a04 	vldr	s3, [r4, #-16]
 8029880:	ed13 4a04 	vldr	s8, [r3, #-16]
 8029884:	ed53 3a03 	vldr	s7, [r3, #-12]
 8029888:	ed53 5a02 	vldr	s11, [r3, #-8]
 802988c:	ed13 5a01 	vldr	s10, [r3, #-4]
 8029890:	ed54 6a03 	vldr	s13, [r4, #-12]
 8029894:	ed14 0a02 	vldr	s0, [r4, #-8]
 8029898:	ed16 2a04 	vldr	s4, [r6, #-16]
 802989c:	ed56 2a03 	vldr	s5, [r6, #-12]
 80298a0:	ed15 6a03 	vldr	s12, [r5, #-12]
 80298a4:	ed15 7a01 	vldr	s14, [r5, #-4]
 80298a8:	ed15 3a04 	vldr	s6, [r5, #-16]
 80298ac:	ed54 7a01 	vldr	s15, [r4, #-4]
 80298b0:	ed56 0a02 	vldr	s1, [r6, #-8]
 80298b4:	ed16 1a01 	vldr	s2, [r6, #-4]
 80298b8:	ed55 4a02 	vldr	s9, [r5, #-8]
 80298bc:	ee73 ba21 	vadd.f32	s23, s6, s3
 80298c0:	ee36 ba26 	vadd.f32	s22, s12, s13
 80298c4:	ee37 aa27 	vadd.f32	s20, s14, s15
 80298c8:	ee72 9a04 	vadd.f32	s19, s4, s8
 80298cc:	ee32 9aa3 	vadd.f32	s18, s5, s7
 80298d0:	ee31 8a05 	vadd.f32	s16, s2, s10
 80298d4:	ee74 aa80 	vadd.f32	s21, s9, s0
 80298d8:	ee70 8aa5 	vadd.f32	s17, s1, s11
 80298dc:	ed45 ba04 	vstr	s23, [r5, #-16]
 80298e0:	ed05 ba03 	vstr	s22, [r5, #-12]
 80298e4:	ed45 aa02 	vstr	s21, [r5, #-8]
 80298e8:	ed05 aa01 	vstr	s20, [r5, #-4]
 80298ec:	ed06 8a01 	vstr	s16, [r6, #-4]
 80298f0:	ed46 9a04 	vstr	s19, [r6, #-16]
 80298f4:	ed06 9a03 	vstr	s18, [r6, #-12]
 80298f8:	ed46 8a02 	vstr	s17, [r6, #-8]
 80298fc:	ee76 6a66 	vsub.f32	s13, s12, s13
 8029900:	ee73 3ae2 	vsub.f32	s7, s7, s5
 8029904:	ed12 6a03 	vldr	s12, [r2, #-12]
 8029908:	ed52 2a04 	vldr	s5, [r2, #-16]
 802990c:	ee33 3a61 	vsub.f32	s6, s6, s3
 8029910:	ee34 4a42 	vsub.f32	s8, s8, s4
 8029914:	ee26 8a86 	vmul.f32	s16, s13, s12
 8029918:	ee24 2a06 	vmul.f32	s4, s8, s12
 802991c:	ee63 1a22 	vmul.f32	s3, s6, s5
 8029920:	ee24 4a22 	vmul.f32	s8, s8, s5
 8029924:	ee23 3a06 	vmul.f32	s6, s6, s12
 8029928:	ee66 6aa2 	vmul.f32	s13, s13, s5
 802992c:	ee23 6a86 	vmul.f32	s12, s7, s12
 8029930:	ee63 3aa2 	vmul.f32	s7, s7, s5
 8029934:	ee36 6a04 	vadd.f32	s12, s12, s8
 8029938:	ee76 6ac3 	vsub.f32	s13, s13, s6
 802993c:	ee72 3a63 	vsub.f32	s7, s4, s7
 8029940:	ee71 2a88 	vadd.f32	s5, s3, s16
 8029944:	ed44 6a03 	vstr	s13, [r4, #-12]
 8029948:	ed44 2a04 	vstr	s5, [r4, #-16]
 802994c:	ed43 3a04 	vstr	s7, [r3, #-16]
 8029950:	ed03 6a03 	vstr	s12, [r3, #-12]
 8029954:	ee77 7a67 	vsub.f32	s15, s14, s15
 8029958:	ee75 6ae0 	vsub.f32	s13, s11, s1
 802995c:	ed12 7a01 	vldr	s14, [r2, #-4]
 8029960:	ed52 5a02 	vldr	s11, [r2, #-8]
 8029964:	ee35 6a41 	vsub.f32	s12, s10, s2
 8029968:	ee74 4ac0 	vsub.f32	s9, s9, s0
 802996c:	ee67 3a87 	vmul.f32	s7, s15, s14
 8029970:	ee26 5a87 	vmul.f32	s10, s13, s14
 8029974:	ee24 4aa5 	vmul.f32	s8, s9, s11
 8029978:	ee67 7aa5 	vmul.f32	s15, s15, s11
 802997c:	ee64 4a87 	vmul.f32	s9, s9, s14
 8029980:	ee66 6aa5 	vmul.f32	s13, s13, s11
 8029984:	ee26 7a07 	vmul.f32	s14, s12, s14
 8029988:	ee26 6a25 	vmul.f32	s12, s12, s11
 802998c:	ee77 7ae4 	vsub.f32	s15, s15, s9
 8029990:	ee74 5a23 	vadd.f32	s11, s8, s7
 8029994:	ee35 6a46 	vsub.f32	s12, s10, s12
 8029998:	ee37 7a26 	vadd.f32	s14, s14, s13
 802999c:	f1be 0e01 	subs.w	lr, lr, #1
 80299a0:	ed44 5a02 	vstr	s11, [r4, #-8]
 80299a4:	f105 0510 	add.w	r5, r5, #16
 80299a8:	ed44 7a01 	vstr	s15, [r4, #-4]
 80299ac:	f106 0610 	add.w	r6, r6, #16
 80299b0:	ed03 6a02 	vstr	s12, [r3, #-8]
 80299b4:	ed03 7a01 	vstr	s14, [r3, #-4]
 80299b8:	f102 0210 	add.w	r2, r2, #16
 80299bc:	f104 0410 	add.w	r4, r4, #16
 80299c0:	f103 0310 	add.w	r3, r3, #16
 80299c4:	f47f af5a 	bne.w	802987c <arm_cfft_radix8by2_f32+0x34>
 80299c8:	687a      	ldr	r2, [r7, #4]
 80299ca:	fa1f f48c 	uxth.w	r4, ip
 80299ce:	4608      	mov	r0, r1
 80299d0:	2302      	movs	r3, #2
 80299d2:	4621      	mov	r1, r4
 80299d4:	f000 fbca 	bl	802a16c <arm_radix8_butterfly_f32>
 80299d8:	ecbd 8b08 	vpop	{d8-d11}
 80299dc:	4640      	mov	r0, r8
 80299de:	4621      	mov	r1, r4
 80299e0:	687a      	ldr	r2, [r7, #4]
 80299e2:	2302      	movs	r3, #2
 80299e4:	e8bd 41f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, lr}
 80299e8:	f000 bbc0 	b.w	802a16c <arm_radix8_butterfly_f32>

080299ec <arm_cfft_radix8by4_f32>:
 80299ec:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 80299f0:	ed2d 8b0a 	vpush	{d8-d12}
 80299f4:	8802      	ldrh	r2, [r0, #0]
 80299f6:	ed91 6a00 	vldr	s12, [r1]
 80299fa:	b08f      	sub	sp, #60	; 0x3c
 80299fc:	460f      	mov	r7, r1
 80299fe:	0852      	lsrs	r2, r2, #1
 8029a00:	0093      	lsls	r3, r2, #2
 8029a02:	900c      	str	r0, [sp, #48]	; 0x30
 8029a04:	9103      	str	r1, [sp, #12]
 8029a06:	6841      	ldr	r1, [r0, #4]
 8029a08:	ed97 7a01 	vldr	s14, [r7, #4]
 8029a0c:	4638      	mov	r0, r7
 8029a0e:	4418      	add	r0, r3
 8029a10:	4606      	mov	r6, r0
 8029a12:	9009      	str	r0, [sp, #36]	; 0x24
 8029a14:	4418      	add	r0, r3
 8029a16:	edd0 6a00 	vldr	s13, [r0]
 8029a1a:	edd6 3a00 	vldr	s7, [r6]
 8029a1e:	edd6 2a01 	vldr	s5, [r6, #4]
 8029a22:	edd0 7a01 	vldr	s15, [r0, #4]
 8029a26:	900a      	str	r0, [sp, #40]	; 0x28
 8029a28:	ee76 5a26 	vadd.f32	s11, s12, s13
 8029a2c:	4604      	mov	r4, r0
 8029a2e:	4625      	mov	r5, r4
 8029a30:	441c      	add	r4, r3
 8029a32:	ed94 4a00 	vldr	s8, [r4]
 8029a36:	ed94 5a01 	vldr	s10, [r4, #4]
 8029a3a:	9401      	str	r4, [sp, #4]
 8029a3c:	ee75 4aa3 	vadd.f32	s9, s11, s7
 8029a40:	4630      	mov	r0, r6
 8029a42:	ee74 4a24 	vadd.f32	s9, s8, s9
 8029a46:	463e      	mov	r6, r7
 8029a48:	ee14 ea90 	vmov	lr, s9
 8029a4c:	ee76 6a66 	vsub.f32	s13, s12, s13
 8029a50:	f846 eb08 	str.w	lr, [r6], #8
 8029a54:	ee37 6a27 	vadd.f32	s12, s14, s15
 8029a58:	edd0 4a01 	vldr	s9, [r0, #4]
 8029a5c:	9604      	str	r6, [sp, #16]
 8029a5e:	ee77 7a67 	vsub.f32	s15, s14, s15
 8029a62:	9e01      	ldr	r6, [sp, #4]
 8029a64:	ee32 3aa6 	vadd.f32	s6, s5, s13
 8029a68:	ed96 2a01 	vldr	s4, [r6, #4]
 8029a6c:	ee36 7a24 	vadd.f32	s14, s12, s9
 8029a70:	ee75 5ae3 	vsub.f32	s11, s11, s7
 8029a74:	ee77 4ae3 	vsub.f32	s9, s15, s7
 8029a78:	ee36 6a62 	vsub.f32	s12, s12, s5
 8029a7c:	ee77 7aa3 	vadd.f32	s15, s15, s7
 8029a80:	ee76 6ae2 	vsub.f32	s13, s13, s5
 8029a84:	ee73 3a45 	vsub.f32	s7, s6, s10
 8029a88:	4604      	mov	r4, r0
 8029a8a:	ee36 6a45 	vsub.f32	s12, s12, s10
 8029a8e:	ee75 6a26 	vadd.f32	s13, s10, s13
 8029a92:	46a3      	mov	fp, r4
 8029a94:	ee37 7a02 	vadd.f32	s14, s14, s4
 8029a98:	ee34 5a84 	vadd.f32	s10, s9, s8
 8029a9c:	ee13 8a90 	vmov	r8, s7
 8029aa0:	46a4      	mov	ip, r4
 8029aa2:	ee75 5ac4 	vsub.f32	s11, s11, s8
 8029aa6:	ed87 7a01 	vstr	s14, [r7, #4]
 8029aaa:	f84b 8b08 	str.w	r8, [fp], #8
 8029aae:	f1ac 0704 	sub.w	r7, ip, #4
 8029ab2:	ed8c 5a01 	vstr	s10, [ip, #4]
 8029ab6:	f101 0c08 	add.w	ip, r1, #8
 8029aba:	462c      	mov	r4, r5
 8029abc:	f8cd c014 	str.w	ip, [sp, #20]
 8029ac0:	ee15 ca90 	vmov	ip, s11
 8029ac4:	f844 cb08 	str.w	ip, [r4], #8
 8029ac8:	9407      	str	r4, [sp, #28]
 8029aca:	f101 0410 	add.w	r4, r1, #16
 8029ace:	ed85 6a01 	vstr	s12, [r5, #4]
 8029ad2:	0852      	lsrs	r2, r2, #1
 8029ad4:	9402      	str	r4, [sp, #8]
 8029ad6:	462c      	mov	r4, r5
 8029ad8:	f101 0518 	add.w	r5, r1, #24
 8029adc:	920b      	str	r2, [sp, #44]	; 0x2c
 8029ade:	46b2      	mov	sl, r6
 8029ae0:	9506      	str	r5, [sp, #24]
 8029ae2:	ee77 7ac4 	vsub.f32	s15, s15, s8
 8029ae6:	3a02      	subs	r2, #2
 8029ae8:	ee16 5a90 	vmov	r5, s13
 8029aec:	46b6      	mov	lr, r6
 8029aee:	4630      	mov	r0, r6
 8029af0:	0852      	lsrs	r2, r2, #1
 8029af2:	f84a 5b08 	str.w	r5, [sl], #8
 8029af6:	f1a0 0604 	sub.w	r6, r0, #4
 8029afa:	edce 7a01 	vstr	s15, [lr, #4]
 8029afe:	9208      	str	r2, [sp, #32]
 8029b00:	f000 8130 	beq.w	8029d64 <arm_cfft_radix8by4_f32+0x378>
 8029b04:	4691      	mov	r9, r2
 8029b06:	9a03      	ldr	r2, [sp, #12]
 8029b08:	f8dd 8008 	ldr.w	r8, [sp, #8]
 8029b0c:	f8cd a034 	str.w	sl, [sp, #52]	; 0x34
 8029b10:	3b08      	subs	r3, #8
 8029b12:	f102 0510 	add.w	r5, r2, #16
 8029b16:	f101 0c20 	add.w	ip, r1, #32
 8029b1a:	f1a4 020c 	sub.w	r2, r4, #12
 8029b1e:	f101 0e30 	add.w	lr, r1, #48	; 0x30
 8029b22:	4433      	add	r3, r6
 8029b24:	3410      	adds	r4, #16
 8029b26:	4650      	mov	r0, sl
 8029b28:	4659      	mov	r1, fp
 8029b2a:	ed55 3a02 	vldr	s7, [r5, #-8]
 8029b2e:	ed14 5a02 	vldr	s10, [r4, #-8]
 8029b32:	ed91 7a00 	vldr	s14, [r1]
 8029b36:	edd0 7a00 	vldr	s15, [r0]
 8029b3a:	ed15 4a01 	vldr	s8, [r5, #-4]
 8029b3e:	ed54 5a01 	vldr	s11, [r4, #-4]
 8029b42:	edd0 6a01 	vldr	s13, [r0, #4]
 8029b46:	ed91 6a01 	vldr	s12, [r1, #4]
 8029b4a:	ee33 8a85 	vadd.f32	s16, s7, s10
 8029b4e:	ee34 0a25 	vadd.f32	s0, s8, s11
 8029b52:	ee78 4a07 	vadd.f32	s9, s16, s14
 8029b56:	ee74 5a65 	vsub.f32	s11, s8, s11
 8029b5a:	ee77 4aa4 	vadd.f32	s9, s15, s9
 8029b5e:	ee33 5ac5 	vsub.f32	s10, s7, s10
 8029b62:	ed45 4a02 	vstr	s9, [r5, #-8]
 8029b66:	edd1 4a01 	vldr	s9, [r1, #4]
 8029b6a:	ed90 4a01 	vldr	s8, [r0, #4]
 8029b6e:	ee70 4a24 	vadd.f32	s9, s0, s9
 8029b72:	ee76 aa05 	vadd.f32	s21, s12, s10
 8029b76:	ee74 4a84 	vadd.f32	s9, s9, s8
 8029b7a:	ee35 aac7 	vsub.f32	s20, s11, s14
 8029b7e:	ed45 4a01 	vstr	s9, [r5, #-4]
 8029b82:	edd6 1a00 	vldr	s3, [r6]
 8029b86:	edd7 0a00 	vldr	s1, [r7]
 8029b8a:	ed92 4a02 	vldr	s8, [r2, #8]
 8029b8e:	edd3 3a02 	vldr	s7, [r3, #8]
 8029b92:	ed93 2a01 	vldr	s4, [r3, #4]
 8029b96:	ed16 1a01 	vldr	s2, [r6, #-4]
 8029b9a:	edd2 2a01 	vldr	s5, [r2, #4]
 8029b9e:	ed57 9a01 	vldr	s19, [r7, #-4]
 8029ba2:	ee70 4aa1 	vadd.f32	s9, s1, s3
 8029ba6:	ee39 3a81 	vadd.f32	s6, s19, s2
 8029baa:	ee74 8a84 	vadd.f32	s17, s9, s8
 8029bae:	ee70 1ae1 	vsub.f32	s3, s1, s3
 8029bb2:	ee73 8aa8 	vadd.f32	s17, s7, s17
 8029bb6:	ee7a aae6 	vsub.f32	s21, s21, s13
 8029bba:	ee18 aa90 	vmov	sl, s17
 8029bbe:	f847 a908 	str.w	sl, [r7], #-8
 8029bc2:	edd2 8a01 	vldr	s17, [r2, #4]
 8029bc6:	ed93 9a01 	vldr	s18, [r3, #4]
 8029bca:	ee73 8a28 	vadd.f32	s17, s6, s17
 8029bce:	ee3a aa27 	vadd.f32	s20, s20, s15
 8029bd2:	ee78 8a89 	vadd.f32	s17, s17, s18
 8029bd6:	ee74 0a63 	vsub.f32	s1, s8, s7
 8029bda:	edc7 8a01 	vstr	s17, [r7, #4]
 8029bde:	ed18 ba02 	vldr	s22, [r8, #-8]
 8029be2:	ed58 8a01 	vldr	s17, [r8, #-4]
 8029be6:	ee39 1ac1 	vsub.f32	s2, s19, s2
 8029bea:	ee6a ba28 	vmul.f32	s23, s20, s17
 8029bee:	ee2a ca8b 	vmul.f32	s24, s21, s22
 8029bf2:	ee71 9ae2 	vsub.f32	s19, s3, s5
 8029bf6:	ee30 9a81 	vadd.f32	s18, s1, s2
 8029bfa:	ee79 9a82 	vadd.f32	s19, s19, s4
 8029bfe:	ee3c ca2b 	vadd.f32	s24, s24, s23
 8029c02:	ee6a aaa8 	vmul.f32	s21, s21, s17
 8029c06:	ee69 baa8 	vmul.f32	s23, s19, s17
 8029c0a:	ee2a aa0b 	vmul.f32	s20, s20, s22
 8029c0e:	ee69 9a8b 	vmul.f32	s19, s19, s22
 8029c12:	ee69 8a28 	vmul.f32	s17, s18, s17
 8029c16:	ee29 ba0b 	vmul.f32	s22, s18, s22
 8029c1a:	ee1c aa10 	vmov	sl, s24
 8029c1e:	ee78 8aa9 	vadd.f32	s17, s17, s19
 8029c22:	f841 ab08 	str.w	sl, [r1], #8
 8029c26:	ee3a aa6a 	vsub.f32	s20, s20, s21
 8029c2a:	ee3b bacb 	vsub.f32	s22, s23, s22
 8029c2e:	ee34 4ac4 	vsub.f32	s8, s9, s8
 8029c32:	ee33 3a62 	vsub.f32	s6, s6, s5
 8029c36:	ed01 aa01 	vstr	s20, [r1, #-4]
 8029c3a:	edc2 8a01 	vstr	s17, [r2, #4]
 8029c3e:	ed82 ba02 	vstr	s22, [r2, #8]
 8029c42:	ed5c 4a04 	vldr	s9, [ip, #-16]
 8029c46:	ee74 3a63 	vsub.f32	s7, s8, s7
 8029c4a:	ee38 8a47 	vsub.f32	s16, s16, s14
 8029c4e:	ed1c 4a03 	vldr	s8, [ip, #-12]
 8029c52:	ee30 0a46 	vsub.f32	s0, s0, s12
 8029c56:	ee33 3a42 	vsub.f32	s6, s6, s4
 8029c5a:	ee38 8a67 	vsub.f32	s16, s16, s15
 8029c5e:	ee30 0a66 	vsub.f32	s0, s0, s13
 8029c62:	ee23 9ae4 	vnmul.f32	s18, s7, s9
 8029c66:	ee63 8a04 	vmul.f32	s17, s6, s8
 8029c6a:	ee28 aa24 	vmul.f32	s20, s16, s9
 8029c6e:	ee60 9a04 	vmul.f32	s19, s0, s8
 8029c72:	ee28 8a04 	vmul.f32	s16, s16, s8
 8029c76:	ee20 0a24 	vmul.f32	s0, s0, s9
 8029c7a:	ee63 3a84 	vmul.f32	s7, s7, s8
 8029c7e:	ee39 4a68 	vsub.f32	s8, s18, s17
 8029c82:	ee7a 9a29 	vadd.f32	s19, s20, s19
 8029c86:	ee14 aa10 	vmov	sl, s8
 8029c8a:	ee30 0a48 	vsub.f32	s0, s0, s16
 8029c8e:	ee63 4a24 	vmul.f32	s9, s6, s9
 8029c92:	ed44 9a02 	vstr	s19, [r4, #-8]
 8029c96:	ee73 3ae4 	vsub.f32	s7, s7, s9
 8029c9a:	ed04 0a01 	vstr	s0, [r4, #-4]
 8029c9e:	f846 a908 	str.w	sl, [r6], #-8
 8029ca2:	ee35 6a46 	vsub.f32	s12, s10, s12
 8029ca6:	ee35 7a87 	vadd.f32	s14, s11, s14
 8029caa:	edc6 3a01 	vstr	s7, [r6, #4]
 8029cae:	ee76 6a86 	vadd.f32	s13, s13, s12
 8029cb2:	ee77 7a67 	vsub.f32	s15, s14, s15
 8029cb6:	ed1e 6a05 	vldr	s12, [lr, #-20]	; 0xffffffec
 8029cba:	ed1e 7a06 	vldr	s14, [lr, #-24]	; 0xffffffe8
 8029cbe:	ee67 5a86 	vmul.f32	s11, s15, s12
 8029cc2:	ee26 5a87 	vmul.f32	s10, s13, s14
 8029cc6:	ee72 2a62 	vsub.f32	s5, s4, s5
 8029cca:	ee30 1ac1 	vsub.f32	s2, s1, s2
 8029cce:	ee72 2ae1 	vsub.f32	s5, s5, s3
 8029cd2:	ee75 5a25 	vadd.f32	s11, s10, s11
 8029cd6:	ee62 0a86 	vmul.f32	s1, s5, s12
 8029cda:	ee66 6a86 	vmul.f32	s13, s13, s12
 8029cde:	ee67 7a87 	vmul.f32	s15, s15, s14
 8029ce2:	ee21 6a06 	vmul.f32	s12, s2, s12
 8029ce6:	ee62 2a87 	vmul.f32	s5, s5, s14
 8029cea:	ee21 1a07 	vmul.f32	s2, s2, s14
 8029cee:	ee15 aa90 	vmov	sl, s11
 8029cf2:	ee77 7ae6 	vsub.f32	s15, s15, s13
 8029cf6:	f840 ab08 	str.w	sl, [r0], #8
 8029cfa:	ee30 1ac1 	vsub.f32	s2, s1, s2
 8029cfe:	ee76 2a22 	vadd.f32	s5, s12, s5
 8029d02:	f1b9 0901 	subs.w	r9, r9, #1
 8029d06:	ed40 7a01 	vstr	s15, [r0, #-4]
 8029d0a:	f105 0508 	add.w	r5, r5, #8
 8029d0e:	ed83 1a02 	vstr	s2, [r3, #8]
 8029d12:	edc3 2a01 	vstr	s5, [r3, #4]
 8029d16:	f108 0808 	add.w	r8, r8, #8
 8029d1a:	f1a2 0208 	sub.w	r2, r2, #8
 8029d1e:	f10c 0c10 	add.w	ip, ip, #16
 8029d22:	f104 0408 	add.w	r4, r4, #8
 8029d26:	f10e 0e18 	add.w	lr, lr, #24
 8029d2a:	f1a3 0308 	sub.w	r3, r3, #8
 8029d2e:	f47f aefc 	bne.w	8029b2a <arm_cfft_radix8by4_f32+0x13e>
 8029d32:	9908      	ldr	r1, [sp, #32]
 8029d34:	9802      	ldr	r0, [sp, #8]
 8029d36:	f8dd a034 	ldr.w	sl, [sp, #52]	; 0x34
 8029d3a:	00cb      	lsls	r3, r1, #3
 8029d3c:	eb01 0241 	add.w	r2, r1, r1, lsl #1
 8029d40:	eb00 1101 	add.w	r1, r0, r1, lsl #4
 8029d44:	9102      	str	r1, [sp, #8]
 8029d46:	9904      	ldr	r1, [sp, #16]
 8029d48:	4419      	add	r1, r3
 8029d4a:	9104      	str	r1, [sp, #16]
 8029d4c:	9905      	ldr	r1, [sp, #20]
 8029d4e:	4419      	add	r1, r3
 8029d50:	9105      	str	r1, [sp, #20]
 8029d52:	9907      	ldr	r1, [sp, #28]
 8029d54:	449b      	add	fp, r3
 8029d56:	4419      	add	r1, r3
 8029d58:	449a      	add	sl, r3
 8029d5a:	9b06      	ldr	r3, [sp, #24]
 8029d5c:	9107      	str	r1, [sp, #28]
 8029d5e:	eb03 03c2 	add.w	r3, r3, r2, lsl #3
 8029d62:	9306      	str	r3, [sp, #24]
 8029d64:	9a04      	ldr	r2, [sp, #16]
 8029d66:	9807      	ldr	r0, [sp, #28]
 8029d68:	edd2 3a00 	vldr	s7, [r2]
 8029d6c:	ed90 4a00 	vldr	s8, [r0]
 8029d70:	eddb 7a00 	vldr	s15, [fp]
 8029d74:	ed9a 3a00 	vldr	s6, [sl]
 8029d78:	edd2 4a01 	vldr	s9, [r2, #4]
 8029d7c:	ed90 7a01 	vldr	s14, [r0, #4]
 8029d80:	ed9b 2a01 	vldr	s4, [fp, #4]
 8029d84:	edda 5a01 	vldr	s11, [sl, #4]
 8029d88:	f8bd 402c 	ldrh.w	r4, [sp, #44]	; 0x2c
 8029d8c:	9e0c      	ldr	r6, [sp, #48]	; 0x30
 8029d8e:	ee73 6a84 	vadd.f32	s13, s7, s8
 8029d92:	ee34 6a87 	vadd.f32	s12, s9, s14
 8029d96:	ee36 5aa7 	vadd.f32	s10, s13, s15
 8029d9a:	ee34 7ac7 	vsub.f32	s14, s9, s14
 8029d9e:	ee33 5a05 	vadd.f32	s10, s6, s10
 8029da2:	ee33 4ac4 	vsub.f32	s8, s7, s8
 8029da6:	ed82 5a00 	vstr	s10, [r2]
 8029daa:	ed9b 5a01 	vldr	s10, [fp, #4]
 8029dae:	edda 4a01 	vldr	s9, [sl, #4]
 8029db2:	ee36 5a05 	vadd.f32	s10, s12, s10
 8029db6:	ee72 3a04 	vadd.f32	s7, s4, s8
 8029dba:	ee35 5a24 	vadd.f32	s10, s10, s9
 8029dbe:	ee77 4a67 	vsub.f32	s9, s14, s15
 8029dc2:	ed82 5a01 	vstr	s10, [r2, #4]
 8029dc6:	9a05      	ldr	r2, [sp, #20]
 8029dc8:	ee34 5a83 	vadd.f32	s10, s9, s6
 8029dcc:	edd2 1a00 	vldr	s3, [r2]
 8029dd0:	edd2 2a01 	vldr	s5, [r2, #4]
 8029dd4:	9a02      	ldr	r2, [sp, #8]
 8029dd6:	ee73 3ae5 	vsub.f32	s7, s7, s11
 8029dda:	ee36 6a42 	vsub.f32	s12, s12, s4
 8029dde:	ee63 4aa1 	vmul.f32	s9, s7, s3
 8029de2:	ee63 3aa2 	vmul.f32	s7, s7, s5
 8029de6:	ee65 2a22 	vmul.f32	s5, s10, s5
 8029dea:	ee25 5a21 	vmul.f32	s10, s10, s3
 8029dee:	ee74 2aa2 	vadd.f32	s5, s9, s5
 8029df2:	ee35 5a63 	vsub.f32	s10, s10, s7
 8029df6:	ee76 6ae7 	vsub.f32	s13, s13, s15
 8029dfa:	edcb 2a00 	vstr	s5, [fp]
 8029dfe:	ed8b 5a01 	vstr	s10, [fp, #4]
 8029e02:	edd2 3a01 	vldr	s7, [r2, #4]
 8029e06:	ed92 5a00 	vldr	s10, [r2]
 8029e0a:	9a06      	ldr	r2, [sp, #24]
 8029e0c:	ee76 6ac3 	vsub.f32	s13, s13, s6
 8029e10:	ee36 6a65 	vsub.f32	s12, s12, s11
 8029e14:	ee66 4a85 	vmul.f32	s9, s13, s10
 8029e18:	ee26 5a05 	vmul.f32	s10, s12, s10
 8029e1c:	ee66 6aa3 	vmul.f32	s13, s13, s7
 8029e20:	ee26 6a23 	vmul.f32	s12, s12, s7
 8029e24:	ee75 6a66 	vsub.f32	s13, s10, s13
 8029e28:	ee34 6a86 	vadd.f32	s12, s9, s12
 8029e2c:	ee34 4a42 	vsub.f32	s8, s8, s4
 8029e30:	ee37 7a27 	vadd.f32	s14, s14, s15
 8029e34:	edc0 6a01 	vstr	s13, [r0, #4]
 8029e38:	ed80 6a00 	vstr	s12, [r0]
 8029e3c:	ed92 6a01 	vldr	s12, [r2, #4]
 8029e40:	9803      	ldr	r0, [sp, #12]
 8029e42:	ee77 7a43 	vsub.f32	s15, s14, s6
 8029e46:	ee75 5a84 	vadd.f32	s11, s11, s8
 8029e4a:	ed92 7a00 	vldr	s14, [r2]
 8029e4e:	ee65 6a87 	vmul.f32	s13, s11, s14
 8029e52:	ee27 7a87 	vmul.f32	s14, s15, s14
 8029e56:	ee65 5a86 	vmul.f32	s11, s11, s12
 8029e5a:	ee67 7a86 	vmul.f32	s15, s15, s12
 8029e5e:	ee77 5a65 	vsub.f32	s11, s14, s11
 8029e62:	ee76 7aa7 	vadd.f32	s15, s13, s15
 8029e66:	edca 5a01 	vstr	s11, [sl, #4]
 8029e6a:	edca 7a00 	vstr	s15, [sl]
 8029e6e:	6872      	ldr	r2, [r6, #4]
 8029e70:	4621      	mov	r1, r4
 8029e72:	2304      	movs	r3, #4
 8029e74:	f000 f97a 	bl	802a16c <arm_radix8_butterfly_f32>
 8029e78:	9809      	ldr	r0, [sp, #36]	; 0x24
 8029e7a:	6872      	ldr	r2, [r6, #4]
 8029e7c:	4621      	mov	r1, r4
 8029e7e:	2304      	movs	r3, #4
 8029e80:	f000 f974 	bl	802a16c <arm_radix8_butterfly_f32>
 8029e84:	980a      	ldr	r0, [sp, #40]	; 0x28
 8029e86:	6872      	ldr	r2, [r6, #4]
 8029e88:	4621      	mov	r1, r4
 8029e8a:	2304      	movs	r3, #4
 8029e8c:	f000 f96e 	bl	802a16c <arm_radix8_butterfly_f32>
 8029e90:	9801      	ldr	r0, [sp, #4]
 8029e92:	6872      	ldr	r2, [r6, #4]
 8029e94:	4621      	mov	r1, r4
 8029e96:	2304      	movs	r3, #4
 8029e98:	b00f      	add	sp, #60	; 0x3c
 8029e9a:	ecbd 8b0a 	vpop	{d8-d12}
 8029e9e:	e8bd 4ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 8029ea2:	f000 b963 	b.w	802a16c <arm_radix8_butterfly_f32>
 8029ea6:	bf00      	nop

08029ea8 <arm_cfft_f32>:
 8029ea8:	e92d 41f0 	stmdb	sp!, {r4, r5, r6, r7, r8, lr}
 8029eac:	2a01      	cmp	r2, #1
 8029eae:	4606      	mov	r6, r0
 8029eb0:	4617      	mov	r7, r2
 8029eb2:	460c      	mov	r4, r1
 8029eb4:	4698      	mov	r8, r3
 8029eb6:	8805      	ldrh	r5, [r0, #0]
 8029eb8:	d054      	beq.n	8029f64 <arm_cfft_f32+0xbc>
 8029eba:	f5b5 7f80 	cmp.w	r5, #256	; 0x100
 8029ebe:	d04c      	beq.n	8029f5a <arm_cfft_f32+0xb2>
 8029ec0:	d916      	bls.n	8029ef0 <arm_cfft_f32+0x48>
 8029ec2:	f5b5 6f80 	cmp.w	r5, #1024	; 0x400
 8029ec6:	d01a      	beq.n	8029efe <arm_cfft_f32+0x56>
 8029ec8:	d95c      	bls.n	8029f84 <arm_cfft_f32+0xdc>
 8029eca:	f5b5 6f00 	cmp.w	r5, #2048	; 0x800
 8029ece:	d044      	beq.n	8029f5a <arm_cfft_f32+0xb2>
 8029ed0:	f5b5 5f80 	cmp.w	r5, #4096	; 0x1000
 8029ed4:	d105      	bne.n	8029ee2 <arm_cfft_f32+0x3a>
 8029ed6:	4620      	mov	r0, r4
 8029ed8:	4629      	mov	r1, r5
 8029eda:	6872      	ldr	r2, [r6, #4]
 8029edc:	2301      	movs	r3, #1
 8029ede:	f000 f945 	bl	802a16c <arm_radix8_butterfly_f32>
 8029ee2:	f1b8 0f00 	cmp.w	r8, #0
 8029ee6:	d111      	bne.n	8029f0c <arm_cfft_f32+0x64>
 8029ee8:	2f01      	cmp	r7, #1
 8029eea:	d016      	beq.n	8029f1a <arm_cfft_f32+0x72>
 8029eec:	e8bd 81f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, pc}
 8029ef0:	2d20      	cmp	r5, #32
 8029ef2:	d032      	beq.n	8029f5a <arm_cfft_f32+0xb2>
 8029ef4:	d94a      	bls.n	8029f8c <arm_cfft_f32+0xe4>
 8029ef6:	2d40      	cmp	r5, #64	; 0x40
 8029ef8:	d0ed      	beq.n	8029ed6 <arm_cfft_f32+0x2e>
 8029efa:	2d80      	cmp	r5, #128	; 0x80
 8029efc:	d1f1      	bne.n	8029ee2 <arm_cfft_f32+0x3a>
 8029efe:	4630      	mov	r0, r6
 8029f00:	4621      	mov	r1, r4
 8029f02:	f7ff fca1 	bl	8029848 <arm_cfft_radix8by2_f32>
 8029f06:	f1b8 0f00 	cmp.w	r8, #0
 8029f0a:	d0ed      	beq.n	8029ee8 <arm_cfft_f32+0x40>
 8029f0c:	4620      	mov	r0, r4
 8029f0e:	89b1      	ldrh	r1, [r6, #12]
 8029f10:	68b2      	ldr	r2, [r6, #8]
 8029f12:	f7d6 f96d 	bl	80001f0 <arm_bitreversal_32>
 8029f16:	2f01      	cmp	r7, #1
 8029f18:	d1e8      	bne.n	8029eec <arm_cfft_f32+0x44>
 8029f1a:	ee07 5a90 	vmov	s15, r5
 8029f1e:	eef8 6a67 	vcvt.f32.u32	s13, s15
 8029f22:	eef7 7a00 	vmov.f32	s15, #112	; 0x3f800000  1.0
 8029f26:	eec7 6aa6 	vdiv.f32	s13, s15, s13
 8029f2a:	2d00      	cmp	r5, #0
 8029f2c:	d0de      	beq.n	8029eec <arm_cfft_f32+0x44>
 8029f2e:	f104 0108 	add.w	r1, r4, #8
 8029f32:	2300      	movs	r3, #0
 8029f34:	3301      	adds	r3, #1
 8029f36:	429d      	cmp	r5, r3
 8029f38:	f101 0108 	add.w	r1, r1, #8
 8029f3c:	ed11 7a04 	vldr	s14, [r1, #-16]
 8029f40:	ed51 7a03 	vldr	s15, [r1, #-12]
 8029f44:	ee27 7a26 	vmul.f32	s14, s14, s13
 8029f48:	ee67 7ae6 	vnmul.f32	s15, s15, s13
 8029f4c:	ed01 7a04 	vstr	s14, [r1, #-16]
 8029f50:	ed41 7a03 	vstr	s15, [r1, #-12]
 8029f54:	d1ee      	bne.n	8029f34 <arm_cfft_f32+0x8c>
 8029f56:	e8bd 81f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, pc}
 8029f5a:	4630      	mov	r0, r6
 8029f5c:	4621      	mov	r1, r4
 8029f5e:	f7ff fd45 	bl	80299ec <arm_cfft_radix8by4_f32>
 8029f62:	e7be      	b.n	8029ee2 <arm_cfft_f32+0x3a>
 8029f64:	b1ad      	cbz	r5, 8029f92 <arm_cfft_f32+0xea>
 8029f66:	f101 030c 	add.w	r3, r1, #12
 8029f6a:	2200      	movs	r2, #0
 8029f6c:	ed53 7a02 	vldr	s15, [r3, #-8]
 8029f70:	3201      	adds	r2, #1
 8029f72:	eef1 7a67 	vneg.f32	s15, s15
 8029f76:	4295      	cmp	r5, r2
 8029f78:	ed43 7a02 	vstr	s15, [r3, #-8]
 8029f7c:	f103 0308 	add.w	r3, r3, #8
 8029f80:	d1f4      	bne.n	8029f6c <arm_cfft_f32+0xc4>
 8029f82:	e79a      	b.n	8029eba <arm_cfft_f32+0x12>
 8029f84:	f5b5 7f00 	cmp.w	r5, #512	; 0x200
 8029f88:	d0a5      	beq.n	8029ed6 <arm_cfft_f32+0x2e>
 8029f8a:	e7aa      	b.n	8029ee2 <arm_cfft_f32+0x3a>
 8029f8c:	2d10      	cmp	r5, #16
 8029f8e:	d0b6      	beq.n	8029efe <arm_cfft_f32+0x56>
 8029f90:	e7a7      	b.n	8029ee2 <arm_cfft_f32+0x3a>
 8029f92:	f5b5 7f80 	cmp.w	r5, #256	; 0x100
 8029f96:	d894      	bhi.n	8029ec2 <arm_cfft_f32+0x1a>
 8029f98:	e7aa      	b.n	8029ef0 <arm_cfft_f32+0x48>
 8029f9a:	bf00      	nop

08029f9c <arm_cmplx_mag_f32>:
 8029f9c:	e92d 41f0 	stmdb	sp!, {r4, r5, r6, r7, r8, lr}
 8029fa0:	ea5f 0892 	movs.w	r8, r2, lsr #2
 8029fa4:	b084      	sub	sp, #16
 8029fa6:	d07f      	beq.n	802a0a8 <arm_cmplx_mag_f32+0x10c>
 8029fa8:	2700      	movs	r7, #0
 8029faa:	f100 0420 	add.w	r4, r0, #32
 8029fae:	f101 0510 	add.w	r5, r1, #16
 8029fb2:	4646      	mov	r6, r8
 8029fb4:	e05a      	b.n	802a06c <arm_cmplx_mag_f32+0xd0>
 8029fb6:	eeb1 0ae7 	vsqrt.f32	s0, s15
 8029fba:	eeb4 0a40 	vcmp.f32	s0, s0
 8029fbe:	eef1 fa10 	vmrs	APSR_nzcv, fpscr
 8029fc2:	f040 80a4 	bne.w	802a10e <arm_cmplx_mag_f32+0x172>
 8029fc6:	ed05 0a04 	vstr	s0, [r5, #-16]
 8029fca:	ed54 7a06 	vldr	s15, [r4, #-24]	; 0xffffffe8
 8029fce:	ed14 0a05 	vldr	s0, [r4, #-20]	; 0xffffffec
 8029fd2:	ee67 7aa7 	vmul.f32	s15, s15, s15
 8029fd6:	ee20 0a00 	vmul.f32	s0, s0, s0
 8029fda:	ee77 7a80 	vadd.f32	s15, s15, s0
 8029fde:	eef5 7ac0 	vcmpe.f32	s15, #0.0
 8029fe2:	eef1 fa10 	vmrs	APSR_nzcv, fpscr
 8029fe6:	f2c0 808f 	blt.w	802a108 <arm_cmplx_mag_f32+0x16c>
 8029fea:	eeb1 0ae7 	vsqrt.f32	s0, s15
 8029fee:	eeb4 0a40 	vcmp.f32	s0, s0
 8029ff2:	eef1 fa10 	vmrs	APSR_nzcv, fpscr
 8029ff6:	f040 80af 	bne.w	802a158 <arm_cmplx_mag_f32+0x1bc>
 8029ffa:	ed05 0a03 	vstr	s0, [r5, #-12]
 8029ffe:	ed54 7a04 	vldr	s15, [r4, #-16]
 802a002:	ed14 0a03 	vldr	s0, [r4, #-12]
 802a006:	ee67 7aa7 	vmul.f32	s15, s15, s15
 802a00a:	ee20 0a00 	vmul.f32	s0, s0, s0
 802a00e:	ee77 7a80 	vadd.f32	s15, s15, s0
 802a012:	eef5 7ac0 	vcmpe.f32	s15, #0.0
 802a016:	eef1 fa10 	vmrs	APSR_nzcv, fpscr
 802a01a:	db72      	blt.n	802a102 <arm_cmplx_mag_f32+0x166>
 802a01c:	eeb1 0ae7 	vsqrt.f32	s0, s15
 802a020:	eeb4 0a40 	vcmp.f32	s0, s0
 802a024:	eef1 fa10 	vmrs	APSR_nzcv, fpscr
 802a028:	f040 808c 	bne.w	802a144 <arm_cmplx_mag_f32+0x1a8>
 802a02c:	ed05 0a02 	vstr	s0, [r5, #-8]
 802a030:	ed54 7a02 	vldr	s15, [r4, #-8]
 802a034:	ed14 0a01 	vldr	s0, [r4, #-4]
 802a038:	ee67 7aa7 	vmul.f32	s15, s15, s15
 802a03c:	ee20 0a00 	vmul.f32	s0, s0, s0
 802a040:	ee77 7a80 	vadd.f32	s15, s15, s0
 802a044:	eef5 7ac0 	vcmpe.f32	s15, #0.0
 802a048:	eef1 fa10 	vmrs	APSR_nzcv, fpscr
 802a04c:	db20      	blt.n	802a090 <arm_cmplx_mag_f32+0xf4>
 802a04e:	eeb1 0ae7 	vsqrt.f32	s0, s15
 802a052:	eeb4 0a40 	vcmp.f32	s0, s0
 802a056:	eef1 fa10 	vmrs	APSR_nzcv, fpscr
 802a05a:	d169      	bne.n	802a130 <arm_cmplx_mag_f32+0x194>
 802a05c:	3e01      	subs	r6, #1
 802a05e:	ed05 0a01 	vstr	s0, [r5, #-4]
 802a062:	f104 0420 	add.w	r4, r4, #32
 802a066:	f105 0510 	add.w	r5, r5, #16
 802a06a:	d019      	beq.n	802a0a0 <arm_cmplx_mag_f32+0x104>
 802a06c:	ed54 7a08 	vldr	s15, [r4, #-32]	; 0xffffffe0
 802a070:	ed14 0a07 	vldr	s0, [r4, #-28]	; 0xffffffe4
 802a074:	ee67 7aa7 	vmul.f32	s15, s15, s15
 802a078:	ee20 0a00 	vmul.f32	s0, s0, s0
 802a07c:	ee77 7a80 	vadd.f32	s15, s15, s0
 802a080:	eef5 7ac0 	vcmpe.f32	s15, #0.0
 802a084:	eef1 fa10 	vmrs	APSR_nzcv, fpscr
 802a088:	da95      	bge.n	8029fb6 <arm_cmplx_mag_f32+0x1a>
 802a08a:	f845 7c10 	str.w	r7, [r5, #-16]
 802a08e:	e79c      	b.n	8029fca <arm_cmplx_mag_f32+0x2e>
 802a090:	3e01      	subs	r6, #1
 802a092:	f845 7c04 	str.w	r7, [r5, #-4]
 802a096:	f104 0420 	add.w	r4, r4, #32
 802a09a:	f105 0510 	add.w	r5, r5, #16
 802a09e:	d1e5      	bne.n	802a06c <arm_cmplx_mag_f32+0xd0>
 802a0a0:	eb00 1048 	add.w	r0, r0, r8, lsl #5
 802a0a4:	eb01 1108 	add.w	r1, r1, r8, lsl #4
 802a0a8:	f012 0503 	ands.w	r5, r2, #3
 802a0ac:	d026      	beq.n	802a0fc <arm_cmplx_mag_f32+0x160>
 802a0ae:	2600      	movs	r6, #0
 802a0b0:	f100 0408 	add.w	r4, r0, #8
 802a0b4:	e00c      	b.n	802a0d0 <arm_cmplx_mag_f32+0x134>
 802a0b6:	eeb1 0ae7 	vsqrt.f32	s0, s15
 802a0ba:	eeb4 0a40 	vcmp.f32	s0, s0
 802a0be:	eef1 fa10 	vmrs	APSR_nzcv, fpscr
 802a0c2:	d12e      	bne.n	802a122 <arm_cmplx_mag_f32+0x186>
 802a0c4:	3d01      	subs	r5, #1
 802a0c6:	ed01 0a01 	vstr	s0, [r1, #-4]
 802a0ca:	f104 0408 	add.w	r4, r4, #8
 802a0ce:	d015      	beq.n	802a0fc <arm_cmplx_mag_f32+0x160>
 802a0d0:	ed54 7a02 	vldr	s15, [r4, #-8]
 802a0d4:	ed14 0a01 	vldr	s0, [r4, #-4]
 802a0d8:	ee67 7aa7 	vmul.f32	s15, s15, s15
 802a0dc:	ee20 0a00 	vmul.f32	s0, s0, s0
 802a0e0:	3104      	adds	r1, #4
 802a0e2:	ee77 7a80 	vadd.f32	s15, s15, s0
 802a0e6:	eef5 7ac0 	vcmpe.f32	s15, #0.0
 802a0ea:	eef1 fa10 	vmrs	APSR_nzcv, fpscr
 802a0ee:	dae2      	bge.n	802a0b6 <arm_cmplx_mag_f32+0x11a>
 802a0f0:	3d01      	subs	r5, #1
 802a0f2:	f841 6c04 	str.w	r6, [r1, #-4]
 802a0f6:	f104 0408 	add.w	r4, r4, #8
 802a0fa:	d1e9      	bne.n	802a0d0 <arm_cmplx_mag_f32+0x134>
 802a0fc:	b004      	add	sp, #16
 802a0fe:	e8bd 81f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, pc}
 802a102:	f845 7c08 	str.w	r7, [r5, #-8]
 802a106:	e793      	b.n	802a030 <arm_cmplx_mag_f32+0x94>
 802a108:	f845 7c0c 	str.w	r7, [r5, #-12]
 802a10c:	e777      	b.n	8029ffe <arm_cmplx_mag_f32+0x62>
 802a10e:	eeb0 0a67 	vmov.f32	s0, s15
 802a112:	9203      	str	r2, [sp, #12]
 802a114:	9102      	str	r1, [sp, #8]
 802a116:	9001      	str	r0, [sp, #4]
 802a118:	f000 fb38 	bl	802a78c <sqrtf>
 802a11c:	a801      	add	r0, sp, #4
 802a11e:	c807      	ldmia	r0, {r0, r1, r2}
 802a120:	e751      	b.n	8029fc6 <arm_cmplx_mag_f32+0x2a>
 802a122:	eeb0 0a67 	vmov.f32	s0, s15
 802a126:	9101      	str	r1, [sp, #4]
 802a128:	f000 fb30 	bl	802a78c <sqrtf>
 802a12c:	9901      	ldr	r1, [sp, #4]
 802a12e:	e7c9      	b.n	802a0c4 <arm_cmplx_mag_f32+0x128>
 802a130:	eeb0 0a67 	vmov.f32	s0, s15
 802a134:	9203      	str	r2, [sp, #12]
 802a136:	9102      	str	r1, [sp, #8]
 802a138:	9001      	str	r0, [sp, #4]
 802a13a:	f000 fb27 	bl	802a78c <sqrtf>
 802a13e:	a801      	add	r0, sp, #4
 802a140:	c807      	ldmia	r0, {r0, r1, r2}
 802a142:	e78b      	b.n	802a05c <arm_cmplx_mag_f32+0xc0>
 802a144:	eeb0 0a67 	vmov.f32	s0, s15
 802a148:	9203      	str	r2, [sp, #12]
 802a14a:	9102      	str	r1, [sp, #8]
 802a14c:	9001      	str	r0, [sp, #4]
 802a14e:	f000 fb1d 	bl	802a78c <sqrtf>
 802a152:	a801      	add	r0, sp, #4
 802a154:	c807      	ldmia	r0, {r0, r1, r2}
 802a156:	e769      	b.n	802a02c <arm_cmplx_mag_f32+0x90>
 802a158:	eeb0 0a67 	vmov.f32	s0, s15
 802a15c:	9203      	str	r2, [sp, #12]
 802a15e:	9102      	str	r1, [sp, #8]
 802a160:	9001      	str	r0, [sp, #4]
 802a162:	f000 fb13 	bl	802a78c <sqrtf>
 802a166:	a801      	add	r0, sp, #4
 802a168:	c807      	ldmia	r0, {r0, r1, r2}
 802a16a:	e746      	b.n	8029ffa <arm_cmplx_mag_f32+0x5e>

0802a16c <arm_radix8_butterfly_f32>:
 802a16c:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 802a170:	ed2d 8b10 	vpush	{d8-d15}
 802a174:	b09d      	sub	sp, #116	; 0x74
 802a176:	461c      	mov	r4, r3
 802a178:	ed9f bac8 	vldr	s22, [pc, #800]	; 802a49c <arm_radix8_butterfly_f32+0x330>
 802a17c:	921a      	str	r2, [sp, #104]	; 0x68
 802a17e:	1d03      	adds	r3, r0, #4
 802a180:	4682      	mov	sl, r0
 802a182:	4689      	mov	r9, r1
 802a184:	468b      	mov	fp, r1
 802a186:	931b      	str	r3, [sp, #108]	; 0x6c
 802a188:	9400      	str	r4, [sp, #0]
 802a18a:	469e      	mov	lr, r3
 802a18c:	ea4f 03db 	mov.w	r3, fp, lsr #3
 802a190:	005a      	lsls	r2, r3, #1
 802a192:	18d6      	adds	r6, r2, r3
 802a194:	18f5      	adds	r5, r6, r3
 802a196:	9203      	str	r2, [sp, #12]
 802a198:	195a      	adds	r2, r3, r5
 802a19a:	18d0      	adds	r0, r2, r3
 802a19c:	00df      	lsls	r7, r3, #3
 802a19e:	1819      	adds	r1, r3, r0
 802a1a0:	463c      	mov	r4, r7
 802a1a2:	9701      	str	r7, [sp, #4]
 802a1a4:	4457      	add	r7, sl
 802a1a6:	930c      	str	r3, [sp, #48]	; 0x30
 802a1a8:	eb0a 02c2 	add.w	r2, sl, r2, lsl #3
 802a1ac:	011b      	lsls	r3, r3, #4
 802a1ae:	eb0a 01c1 	add.w	r1, sl, r1, lsl #3
 802a1b2:	eb07 0c04 	add.w	ip, r7, r4
 802a1b6:	9c00      	ldr	r4, [sp, #0]
 802a1b8:	9302      	str	r3, [sp, #8]
 802a1ba:	eb0a 06c6 	add.w	r6, sl, r6, lsl #3
 802a1be:	eb0a 05c5 	add.w	r5, sl, r5, lsl #3
 802a1c2:	3204      	adds	r2, #4
 802a1c4:	3104      	adds	r1, #4
 802a1c6:	eb0a 00c0 	add.w	r0, sl, r0, lsl #3
 802a1ca:	ea4f 03cb 	mov.w	r3, fp, lsl #3
 802a1ce:	f04f 0800 	mov.w	r8, #0
 802a1d2:	eddc 7a00 	vldr	s15, [ip]
 802a1d6:	edd7 6a00 	vldr	s13, [r7]
 802a1da:	edd6 3a00 	vldr	s7, [r6]
 802a1de:	ed5e aa01 	vldr	s21, [lr, #-4]
 802a1e2:	edd5 4a00 	vldr	s9, [r5]
 802a1e6:	ed90 2a00 	vldr	s4, [r0]
 802a1ea:	ed12 7a01 	vldr	s14, [r2, #-4]
 802a1ee:	ed51 0a01 	vldr	s1, [r1, #-4]
 802a1f2:	ee77 8a82 	vadd.f32	s17, s15, s4
 802a1f6:	ee33 4aa0 	vadd.f32	s8, s7, s1
 802a1fa:	ee76 1a87 	vadd.f32	s3, s13, s14
 802a1fe:	ee3a 3aa4 	vadd.f32	s6, s21, s9
 802a202:	ee31 6a84 	vadd.f32	s12, s3, s8
 802a206:	ee33 5a28 	vadd.f32	s10, s6, s17
 802a20a:	ee36 7ac7 	vsub.f32	s14, s13, s14
 802a20e:	ee75 6a06 	vadd.f32	s13, s10, s12
 802a212:	ee35 5a46 	vsub.f32	s10, s10, s12
 802a216:	ed4e 6a01 	vstr	s13, [lr, #-4]
 802a21a:	ed85 5a00 	vstr	s10, [r5]
 802a21e:	ed96 1a01 	vldr	s2, [r6, #4]
 802a222:	edd7 5a01 	vldr	s11, [r7, #4]
 802a226:	ed92 aa00 	vldr	s20, [r2]
 802a22a:	ed91 6a00 	vldr	s12, [r1]
 802a22e:	ed9e 9a00 	vldr	s18, [lr]
 802a232:	ed95 5a01 	vldr	s10, [r5, #4]
 802a236:	eddc 6a01 	vldr	s13, [ip, #4]
 802a23a:	edd0 9a01 	vldr	s19, [r0, #4]
 802a23e:	ee73 0ae0 	vsub.f32	s1, s7, s1
 802a242:	ee71 2a46 	vsub.f32	s5, s2, s12
 802a246:	ee75 3aca 	vsub.f32	s7, s11, s20
 802a24a:	ee37 0a60 	vsub.f32	s0, s14, s1
 802a24e:	ee33 8aa2 	vadd.f32	s16, s7, s5
 802a252:	ee37 7a20 	vadd.f32	s14, s14, s1
 802a256:	ee73 2ae2 	vsub.f32	s5, s7, s5
 802a25a:	ee37 2ac2 	vsub.f32	s4, s15, s4
 802a25e:	ee79 3a05 	vadd.f32	s7, s18, s10
 802a262:	ee60 0a0b 	vmul.f32	s1, s0, s22
 802a266:	ee39 5a45 	vsub.f32	s10, s18, s10
 802a26a:	ee7a 4ae4 	vsub.f32	s9, s21, s9
 802a26e:	ee36 9aa9 	vadd.f32	s18, s13, s19
 802a272:	ee75 5a8a 	vadd.f32	s11, s11, s20
 802a276:	ee31 6a06 	vadd.f32	s12, s2, s12
 802a27a:	ee76 6ae9 	vsub.f32	s13, s13, s19
 802a27e:	ee28 8a0b 	vmul.f32	s16, s16, s22
 802a282:	ee62 2a8b 	vmul.f32	s5, s5, s22
 802a286:	ee67 7a0b 	vmul.f32	s15, s14, s22
 802a28a:	ee33 3a68 	vsub.f32	s6, s6, s17
 802a28e:	ee36 0a88 	vadd.f32	s0, s13, s16
 802a292:	ee75 8a86 	vadd.f32	s17, s11, s12
 802a296:	ee36 7ac8 	vsub.f32	s14, s13, s16
 802a29a:	ee71 1ac4 	vsub.f32	s3, s3, s8
 802a29e:	ee75 6a62 	vsub.f32	s13, s10, s5
 802a2a2:	ee33 4ac9 	vsub.f32	s8, s7, s18
 802a2a6:	ee35 6ac6 	vsub.f32	s12, s11, s12
 802a2aa:	ee33 1a89 	vadd.f32	s2, s7, s18
 802a2ae:	ee74 5ae0 	vsub.f32	s11, s9, s1
 802a2b2:	ee74 3aa0 	vadd.f32	s7, s9, s1
 802a2b6:	ee75 4a22 	vadd.f32	s9, s10, s5
 802a2ba:	ee32 5a27 	vadd.f32	s10, s4, s15
 802a2be:	ee72 7a67 	vsub.f32	s15, s4, s15
 802a2c2:	ee33 8a06 	vadd.f32	s16, s6, s12
 802a2c6:	ee75 2a87 	vadd.f32	s5, s11, s14
 802a2ca:	ee31 9a28 	vadd.f32	s18, s2, s17
 802a2ce:	ee33 6a46 	vsub.f32	s12, s6, s12
 802a2d2:	ee74 0a61 	vsub.f32	s1, s8, s3
 802a2d6:	ee33 2a80 	vadd.f32	s4, s7, s0
 802a2da:	ee35 7ac7 	vsub.f32	s14, s11, s14
 802a2de:	ee34 3ac5 	vsub.f32	s6, s9, s10
 802a2e2:	ee76 5ae7 	vsub.f32	s11, s13, s15
 802a2e6:	ee31 1a68 	vsub.f32	s2, s2, s17
 802a2ea:	ee34 4a21 	vadd.f32	s8, s8, s3
 802a2ee:	ee73 3ac0 	vsub.f32	s7, s7, s0
 802a2f2:	ee74 4a85 	vadd.f32	s9, s9, s10
 802a2f6:	ee76 6aa7 	vadd.f32	s13, s13, s15
 802a2fa:	44d8      	add	r8, fp
 802a2fc:	45c1      	cmp	r9, r8
 802a2fe:	ed8e 9a00 	vstr	s18, [lr]
 802a302:	ed85 1a01 	vstr	s2, [r5, #4]
 802a306:	449e      	add	lr, r3
 802a308:	ed8c 8a00 	vstr	s16, [ip]
 802a30c:	441d      	add	r5, r3
 802a30e:	ed80 6a00 	vstr	s12, [r0]
 802a312:	edcc 0a01 	vstr	s1, [ip, #4]
 802a316:	ed80 4a01 	vstr	s8, [r0, #4]
 802a31a:	449c      	add	ip, r3
 802a31c:	ed87 2a00 	vstr	s4, [r7]
 802a320:	4418      	add	r0, r3
 802a322:	ed41 3a01 	vstr	s7, [r1, #-4]
 802a326:	ed42 2a01 	vstr	s5, [r2, #-4]
 802a32a:	ed86 7a00 	vstr	s14, [r6]
 802a32e:	ed87 3a01 	vstr	s6, [r7, #4]
 802a332:	edc1 4a00 	vstr	s9, [r1]
 802a336:	441f      	add	r7, r3
 802a338:	edc2 5a00 	vstr	s11, [r2]
 802a33c:	4419      	add	r1, r3
 802a33e:	edc6 6a01 	vstr	s13, [r6, #4]
 802a342:	441a      	add	r2, r3
 802a344:	441e      	add	r6, r3
 802a346:	f63f af44 	bhi.w	802a1d2 <arm_radix8_butterfly_f32+0x66>
 802a34a:	990c      	ldr	r1, [sp, #48]	; 0x30
 802a34c:	2907      	cmp	r1, #7
 802a34e:	4620      	mov	r0, r4
 802a350:	f240 81e9 	bls.w	802a726 <arm_radix8_butterfly_f32+0x5ba>
 802a354:	eb04 0744 	add.w	r7, r4, r4, lsl #1
 802a358:	193e      	adds	r6, r7, r4
 802a35a:	1935      	adds	r5, r6, r4
 802a35c:	9c03      	ldr	r4, [sp, #12]
 802a35e:	9000      	str	r0, [sp, #0]
 802a360:	4622      	mov	r2, r4
 802a362:	3201      	adds	r2, #1
 802a364:	eb02 0281 	add.w	r2, r2, r1, lsl #2
 802a368:	9900      	ldr	r1, [sp, #0]
 802a36a:	1828      	adds	r0, r5, r0
 802a36c:	eb00 0e01 	add.w	lr, r0, r1
 802a370:	990c      	ldr	r1, [sp, #48]	; 0x30
 802a372:	440a      	add	r2, r1
 802a374:	eb04 0c01 	add.w	ip, r4, r1
 802a378:	ea4f 04ce 	mov.w	r4, lr, lsl #3
 802a37c:	eb0a 0ec2 	add.w	lr, sl, r2, lsl #3
 802a380:	9a00      	ldr	r2, [sp, #0]
 802a382:	940f      	str	r4, [sp, #60]	; 0x3c
 802a384:	00ed      	lsls	r5, r5, #3
 802a386:	9511      	str	r5, [sp, #68]	; 0x44
 802a388:	00d5      	lsls	r5, r2, #3
 802a38a:	950d      	str	r5, [sp, #52]	; 0x34
 802a38c:	9d01      	ldr	r5, [sp, #4]
 802a38e:	3508      	adds	r5, #8
 802a390:	9516      	str	r5, [sp, #88]	; 0x58
 802a392:	9d02      	ldr	r5, [sp, #8]
 802a394:	3508      	adds	r5, #8
 802a396:	0114      	lsls	r4, r2, #4
 802a398:	9517      	str	r5, [sp, #92]	; 0x5c
 802a39a:	9a0f      	ldr	r2, [sp, #60]	; 0x3c
 802a39c:	9d1a      	ldr	r5, [sp, #104]	; 0x68
 802a39e:	940e      	str	r4, [sp, #56]	; 0x38
 802a3a0:	00c0      	lsls	r0, r0, #3
 802a3a2:	9010      	str	r0, [sp, #64]	; 0x40
 802a3a4:	18aa      	adds	r2, r5, r2
 802a3a6:	9207      	str	r2, [sp, #28]
 802a3a8:	9a10      	ldr	r2, [sp, #64]	; 0x40
 802a3aa:	9c0c      	ldr	r4, [sp, #48]	; 0x30
 802a3ac:	18aa      	adds	r2, r5, r2
 802a3ae:	9208      	str	r2, [sp, #32]
 802a3b0:	9a11      	ldr	r2, [sp, #68]	; 0x44
 802a3b2:	18aa      	adds	r2, r5, r2
 802a3b4:	9209      	str	r2, [sp, #36]	; 0x24
 802a3b6:	eb01 0181 	add.w	r1, r1, r1, lsl #2
 802a3ba:	f10e 0204 	add.w	r2, lr, #4
 802a3be:	920a      	str	r2, [sp, #40]	; 0x28
 802a3c0:	00c9      	lsls	r1, r1, #3
 802a3c2:	9a0d      	ldr	r2, [sp, #52]	; 0x34
 802a3c4:	310c      	adds	r1, #12
 802a3c6:	00f6      	lsls	r6, r6, #3
 802a3c8:	ea4f 00cc 	mov.w	r0, ip, lsl #3
 802a3cc:	9114      	str	r1, [sp, #80]	; 0x50
 802a3ce:	18a9      	adds	r1, r5, r2
 802a3d0:	9a0e      	ldr	r2, [sp, #56]	; 0x38
 802a3d2:	9612      	str	r6, [sp, #72]	; 0x48
 802a3d4:	00ff      	lsls	r7, r7, #3
 802a3d6:	19ae      	adds	r6, r5, r6
 802a3d8:	3008      	adds	r0, #8
 802a3da:	ea4f 1c0c 	mov.w	ip, ip, lsl #4
 802a3de:	9606      	str	r6, [sp, #24]
 802a3e0:	9019      	str	r0, [sp, #100]	; 0x64
 802a3e2:	18aa      	adds	r2, r5, r2
 802a3e4:	0164      	lsls	r4, r4, #5
 802a3e6:	19ee      	adds	r6, r5, r7
 802a3e8:	f10c 000c 	add.w	r0, ip, #12
 802a3ec:	9713      	str	r7, [sp, #76]	; 0x4c
 802a3ee:	9604      	str	r6, [sp, #16]
 802a3f0:	9015      	str	r0, [sp, #84]	; 0x54
 802a3f2:	9103      	str	r1, [sp, #12]
 802a3f4:	9205      	str	r2, [sp, #20]
 802a3f6:	f104 0208 	add.w	r2, r4, #8
 802a3fa:	9218      	str	r2, [sp, #96]	; 0x60
 802a3fc:	f04f 0801 	mov.w	r8, #1
 802a400:	2200      	movs	r2, #0
 802a402:	f102 0108 	add.w	r1, r2, #8
 802a406:	460f      	mov	r7, r1
 802a408:	910b      	str	r1, [sp, #44]	; 0x2c
 802a40a:	9918      	ldr	r1, [sp, #96]	; 0x60
 802a40c:	188e      	adds	r6, r1, r2
 802a40e:	9916      	ldr	r1, [sp, #88]	; 0x58
 802a410:	188d      	adds	r5, r1, r2
 802a412:	9917      	ldr	r1, [sp, #92]	; 0x5c
 802a414:	188c      	adds	r4, r1, r2
 802a416:	9919      	ldr	r1, [sp, #100]	; 0x64
 802a418:	1888      	adds	r0, r1, r2
 802a41a:	9914      	ldr	r1, [sp, #80]	; 0x50
 802a41c:	eb01 0c02 	add.w	ip, r1, r2
 802a420:	9915      	ldr	r1, [sp, #84]	; 0x54
 802a422:	440a      	add	r2, r1
 802a424:	9903      	ldr	r1, [sp, #12]
 802a426:	edd1 fa00 	vldr	s31, [r1]
 802a42a:	9905      	ldr	r1, [sp, #20]
 802a42c:	ed91 fa00 	vldr	s30, [r1]
 802a430:	9904      	ldr	r1, [sp, #16]
 802a432:	edd1 ea00 	vldr	s29, [r1]
 802a436:	9906      	ldr	r1, [sp, #24]
 802a438:	ed91 ea00 	vldr	s28, [r1]
 802a43c:	9909      	ldr	r1, [sp, #36]	; 0x24
 802a43e:	edd1 da00 	vldr	s27, [r1]
 802a442:	9908      	ldr	r1, [sp, #32]
 802a444:	ed91 da00 	vldr	s26, [r1]
 802a448:	9907      	ldr	r1, [sp, #28]
 802a44a:	edd1 ca00 	vldr	s25, [r1]
 802a44e:	9903      	ldr	r1, [sp, #12]
 802a450:	ed91 ca01 	vldr	s24, [r1, #4]
 802a454:	9905      	ldr	r1, [sp, #20]
 802a456:	edd1 ba01 	vldr	s23, [r1, #4]
 802a45a:	9904      	ldr	r1, [sp, #16]
 802a45c:	edd1 aa01 	vldr	s21, [r1, #4]
 802a460:	9906      	ldr	r1, [sp, #24]
 802a462:	ed91 aa01 	vldr	s20, [r1, #4]
 802a466:	9909      	ldr	r1, [sp, #36]	; 0x24
 802a468:	edd1 7a01 	vldr	s15, [r1, #4]
 802a46c:	9908      	ldr	r1, [sp, #32]
 802a46e:	edcd 7a00 	vstr	s15, [sp]
 802a472:	edd1 7a01 	vldr	s15, [r1, #4]
 802a476:	9907      	ldr	r1, [sp, #28]
 802a478:	edcd 7a01 	vstr	s15, [sp, #4]
 802a47c:	edd1 7a01 	vldr	s15, [r1, #4]
 802a480:	eb0a 0e07 	add.w	lr, sl, r7
 802a484:	9f0a      	ldr	r7, [sp, #40]	; 0x28
 802a486:	edcd 7a02 	vstr	s15, [sp, #8]
 802a48a:	eb0c 010a 	add.w	r1, ip, sl
 802a48e:	4456      	add	r6, sl
 802a490:	4455      	add	r5, sl
 802a492:	4454      	add	r4, sl
 802a494:	4450      	add	r0, sl
 802a496:	4452      	add	r2, sl
 802a498:	46c4      	mov	ip, r8
 802a49a:	e001      	b.n	802a4a0 <arm_radix8_butterfly_f32+0x334>
 802a49c:	3f3504f3 	.word	0x3f3504f3
 802a4a0:	ed96 5a00 	vldr	s10, [r6]
 802a4a4:	ed52 9a01 	vldr	s19, [r2, #-4]
 802a4a8:	ed11 6a01 	vldr	s12, [r1, #-4]
 802a4ac:	edd0 7a00 	vldr	s15, [r0]
 802a4b0:	ed17 7a01 	vldr	s14, [r7, #-4]
 802a4b4:	edde 3a00 	vldr	s7, [lr]
 802a4b8:	ed94 3a00 	vldr	s6, [r4]
 802a4bc:	ed95 2a00 	vldr	s4, [r5]
 802a4c0:	ed9e 0a01 	vldr	s0, [lr, #4]
 802a4c4:	ee33 8a85 	vadd.f32	s16, s7, s10
 802a4c8:	ee32 1a06 	vadd.f32	s2, s4, s12
 802a4cc:	ee33 4a29 	vadd.f32	s8, s6, s19
 802a4d0:	ee77 4a87 	vadd.f32	s9, s15, s14
 802a4d4:	ee78 1a04 	vadd.f32	s3, s16, s8
 802a4d8:	ee71 6a24 	vadd.f32	s13, s2, s9
 802a4dc:	ee32 2a46 	vsub.f32	s4, s4, s12
 802a4e0:	ee31 6aa6 	vadd.f32	s12, s3, s13
 802a4e4:	ee77 7ac7 	vsub.f32	s15, s15, s14
 802a4e8:	ed8e 6a00 	vstr	s12, [lr]
 802a4ec:	edd0 8a01 	vldr	s17, [r0, #4]
 802a4f0:	ed95 9a01 	vldr	s18, [r5, #4]
 802a4f4:	edd1 2a00 	vldr	s5, [r1]
 802a4f8:	ed97 7a00 	vldr	s14, [r7]
 802a4fc:	edd4 0a01 	vldr	s1, [r4, #4]
 802a500:	ed96 6a01 	vldr	s12, [r6, #4]
 802a504:	edd2 5a00 	vldr	s11, [r2]
 802a508:	ee73 3ac5 	vsub.f32	s7, s7, s10
 802a50c:	ee33 3a69 	vsub.f32	s6, s6, s19
 802a510:	ee39 5a62 	vsub.f32	s10, s18, s5
 802a514:	ee78 9ac7 	vsub.f32	s19, s17, s14
 802a518:	ee38 4a44 	vsub.f32	s8, s16, s8
 802a51c:	ee38 7a87 	vadd.f32	s14, s17, s14
 802a520:	ee30 8aa5 	vadd.f32	s16, s1, s11
 802a524:	ee79 2a22 	vadd.f32	s5, s18, s5
 802a528:	ee75 8a69 	vsub.f32	s17, s10, s19
 802a52c:	ee32 9a27 	vadd.f32	s18, s4, s15
 802a530:	ee35 5a29 	vadd.f32	s10, s10, s19
 802a534:	ee72 7a67 	vsub.f32	s15, s4, s15
 802a538:	ee30 2a06 	vadd.f32	s4, s0, s12
 802a53c:	ee69 9a0b 	vmul.f32	s19, s18, s22
 802a540:	ee70 5ae5 	vsub.f32	s11, s1, s11
 802a544:	ee32 9a08 	vadd.f32	s18, s4, s16
 802a548:	ee68 8a8b 	vmul.f32	s17, s17, s22
 802a54c:	ee32 2a48 	vsub.f32	s4, s4, s16
 802a550:	ee71 4a64 	vsub.f32	s9, s2, s9
 802a554:	ee25 5a0b 	vmul.f32	s10, s10, s22
 802a558:	ee32 1a87 	vadd.f32	s2, s5, s14
 802a55c:	ee67 7a8b 	vmul.f32	s15, s15, s22
 802a560:	ee72 2ac7 	vsub.f32	s5, s5, s14
 802a564:	ee30 6a46 	vsub.f32	s12, s0, s12
 802a568:	ee73 0a29 	vadd.f32	s1, s6, s19
 802a56c:	ee36 0a28 	vadd.f32	s0, s12, s17
 802a570:	ee33 3a69 	vsub.f32	s6, s6, s19
 802a574:	ee32 7a64 	vsub.f32	s14, s4, s9
 802a578:	ee73 9aa7 	vadd.f32	s19, s7, s15
 802a57c:	ee36 6a68 	vsub.f32	s12, s12, s17
 802a580:	ee73 7ae7 	vsub.f32	s15, s7, s15
 802a584:	ee75 8a85 	vadd.f32	s17, s11, s10
 802a588:	ee74 3a22 	vadd.f32	s7, s8, s5
 802a58c:	ee35 5ac5 	vsub.f32	s10, s11, s10
 802a590:	ee71 6ae6 	vsub.f32	s13, s3, s13
 802a594:	ee79 1a41 	vsub.f32	s3, s18, s2
 802a598:	ee39 8aa8 	vadd.f32	s16, s19, s17
 802a59c:	ee76 5a43 	vsub.f32	s11, s12, s6
 802a5a0:	ee74 2a62 	vsub.f32	s5, s8, s5
 802a5a4:	ee72 4a24 	vadd.f32	s9, s4, s9
 802a5a8:	ee30 4a60 	vsub.f32	s8, s0, s1
 802a5ac:	ee79 8ae8 	vsub.f32	s17, s19, s17
 802a5b0:	ee30 0a20 	vadd.f32	s0, s0, s1
 802a5b4:	ee77 9a85 	vadd.f32	s19, s15, s10
 802a5b8:	ee36 6a03 	vadd.f32	s12, s12, s6
 802a5bc:	ee77 7ac5 	vsub.f32	s15, s15, s10
 802a5c0:	ee2e 2a21 	vmul.f32	s4, s28, s3
 802a5c4:	ee2e 5a26 	vmul.f32	s10, s28, s13
 802a5c8:	ee6f 0a23 	vmul.f32	s1, s30, s7
 802a5cc:	ee2a 3a21 	vmul.f32	s6, s20, s3
 802a5d0:	ee39 1a01 	vadd.f32	s2, s18, s2
 802a5d4:	ee6a 6a26 	vmul.f32	s13, s20, s13
 802a5d8:	ee2b 9a87 	vmul.f32	s18, s23, s14
 802a5dc:	ee6b 3aa3 	vmul.f32	s7, s23, s7
 802a5e0:	ee2f 7a07 	vmul.f32	s14, s30, s14
 802a5e4:	ee6f 1a84 	vmul.f32	s3, s31, s8
 802a5e8:	ee35 3a03 	vadd.f32	s6, s10, s6
 802a5ec:	ee72 6a66 	vsub.f32	s13, s4, s13
 802a5f0:	ee2c 5a04 	vmul.f32	s10, s24, s8
 802a5f4:	ee2f 2a88 	vmul.f32	s4, s31, s16
 802a5f8:	ed9d 4a02 	vldr	s8, [sp, #8]
 802a5fc:	ed8e 1a01 	vstr	s2, [lr, #4]
 802a600:	ee77 3a63 	vsub.f32	s7, s14, s7
 802a604:	ee2c 8a08 	vmul.f32	s16, s24, s16
 802a608:	ed9d 7a01 	vldr	s14, [sp, #4]
 802a60c:	ed86 3a00 	vstr	s6, [r6]
 802a610:	ee30 9a89 	vadd.f32	s18, s1, s18
 802a614:	ee32 2a05 	vadd.f32	s4, s4, s10
 802a618:	ee6d 0a22 	vmul.f32	s1, s26, s5
 802a61c:	ee31 8ac8 	vsub.f32	s16, s3, s16
 802a620:	ee67 2a22 	vmul.f32	s5, s14, s5
 802a624:	ee64 1a00 	vmul.f32	s3, s8, s0
 802a628:	ee27 7a24 	vmul.f32	s14, s14, s9
 802a62c:	ee2c 5aa8 	vmul.f32	s10, s25, s17
 802a630:	ee6d 4a24 	vmul.f32	s9, s26, s9
 802a634:	ee64 8a28 	vmul.f32	s17, s8, s17
 802a638:	ed9d 4a00 	vldr	s8, [sp]
 802a63c:	edc6 6a01 	vstr	s13, [r6, #4]
 802a640:	ee74 2ae2 	vsub.f32	s5, s9, s5
 802a644:	ee6d 4aa9 	vmul.f32	s9, s27, s19
 802a648:	ee64 9a29 	vmul.f32	s19, s8, s19
 802a64c:	ee24 4a25 	vmul.f32	s8, s8, s11
 802a650:	ee30 7a87 	vadd.f32	s14, s1, s14
 802a654:	ee74 4a84 	vadd.f32	s9, s9, s8
 802a658:	ee6e 0aa7 	vmul.f32	s1, s29, s15
 802a65c:	ee2a 4a86 	vmul.f32	s8, s21, s12
 802a660:	ee2c 0a80 	vmul.f32	s0, s25, s0
 802a664:	ee6d 5aa5 	vmul.f32	s11, s27, s11
 802a668:	ee6a 7aa7 	vmul.f32	s15, s21, s15
 802a66c:	ee2e 6a86 	vmul.f32	s12, s29, s12
 802a670:	ee75 1a21 	vadd.f32	s3, s10, s3
 802a674:	ee30 0a68 	vsub.f32	s0, s0, s17
 802a678:	ee75 9ae9 	vsub.f32	s19, s11, s19
 802a67c:	ee70 0a84 	vadd.f32	s1, s1, s8
 802a680:	ee36 6a67 	vsub.f32	s12, s12, s15
 802a684:	44dc      	add	ip, fp
 802a686:	45e1      	cmp	r9, ip
 802a688:	ed84 9a00 	vstr	s18, [r4]
 802a68c:	edc4 3a01 	vstr	s7, [r4, #4]
 802a690:	449e      	add	lr, r3
 802a692:	ed02 7a01 	vstr	s14, [r2, #-4]
 802a696:	edc2 2a00 	vstr	s5, [r2]
 802a69a:	441e      	add	r6, r3
 802a69c:	ed85 2a00 	vstr	s4, [r5]
 802a6a0:	ed85 8a01 	vstr	s16, [r5, #4]
 802a6a4:	441c      	add	r4, r3
 802a6a6:	ed47 1a01 	vstr	s3, [r7, #-4]
 802a6aa:	ed87 0a00 	vstr	s0, [r7]
 802a6ae:	441a      	add	r2, r3
 802a6b0:	ed41 4a01 	vstr	s9, [r1, #-4]
 802a6b4:	edc1 9a00 	vstr	s19, [r1]
 802a6b8:	441d      	add	r5, r3
 802a6ba:	edc0 0a00 	vstr	s1, [r0]
 802a6be:	441f      	add	r7, r3
 802a6c0:	ed80 6a01 	vstr	s12, [r0, #4]
 802a6c4:	4419      	add	r1, r3
 802a6c6:	4418      	add	r0, r3
 802a6c8:	f63f aeea 	bhi.w	802a4a0 <arm_radix8_butterfly_f32+0x334>
 802a6cc:	9a03      	ldr	r2, [sp, #12]
 802a6ce:	990d      	ldr	r1, [sp, #52]	; 0x34
 802a6d0:	440a      	add	r2, r1
 802a6d2:	9203      	str	r2, [sp, #12]
 802a6d4:	990e      	ldr	r1, [sp, #56]	; 0x38
 802a6d6:	9a05      	ldr	r2, [sp, #20]
 802a6d8:	440a      	add	r2, r1
 802a6da:	9205      	str	r2, [sp, #20]
 802a6dc:	9913      	ldr	r1, [sp, #76]	; 0x4c
 802a6de:	9a04      	ldr	r2, [sp, #16]
 802a6e0:	440a      	add	r2, r1
 802a6e2:	9204      	str	r2, [sp, #16]
 802a6e4:	9912      	ldr	r1, [sp, #72]	; 0x48
 802a6e6:	9a06      	ldr	r2, [sp, #24]
 802a6e8:	440a      	add	r2, r1
 802a6ea:	9206      	str	r2, [sp, #24]
 802a6ec:	9911      	ldr	r1, [sp, #68]	; 0x44
 802a6ee:	9a09      	ldr	r2, [sp, #36]	; 0x24
 802a6f0:	440a      	add	r2, r1
 802a6f2:	9209      	str	r2, [sp, #36]	; 0x24
 802a6f4:	9910      	ldr	r1, [sp, #64]	; 0x40
 802a6f6:	9a08      	ldr	r2, [sp, #32]
 802a6f8:	440a      	add	r2, r1
 802a6fa:	9208      	str	r2, [sp, #32]
 802a6fc:	990f      	ldr	r1, [sp, #60]	; 0x3c
 802a6fe:	9a07      	ldr	r2, [sp, #28]
 802a700:	440a      	add	r2, r1
 802a702:	9207      	str	r2, [sp, #28]
 802a704:	990c      	ldr	r1, [sp, #48]	; 0x30
 802a706:	9a0a      	ldr	r2, [sp, #40]	; 0x28
 802a708:	f108 0801 	add.w	r8, r8, #1
 802a70c:	3208      	adds	r2, #8
 802a70e:	4588      	cmp	r8, r1
 802a710:	920a      	str	r2, [sp, #40]	; 0x28
 802a712:	9a0b      	ldr	r2, [sp, #44]	; 0x2c
 802a714:	f47f ae75 	bne.w	802a402 <arm_radix8_butterfly_f32+0x296>
 802a718:	f8bd 3034 	ldrh.w	r3, [sp, #52]	; 0x34
 802a71c:	9300      	str	r3, [sp, #0]
 802a71e:	46c3      	mov	fp, r8
 802a720:	f8dd e06c 	ldr.w	lr, [sp, #108]	; 0x6c
 802a724:	e532      	b.n	802a18c <arm_radix8_butterfly_f32+0x20>
 802a726:	b01d      	add	sp, #116	; 0x74
 802a728:	ecbd 8b10 	vpop	{d8-d15}
 802a72c:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}

0802a730 <__aeabi_atexit>:
 802a730:	460b      	mov	r3, r1
 802a732:	4601      	mov	r1, r0
 802a734:	4618      	mov	r0, r3
 802a736:	f000 bef3 	b.w	802b520 <__cxa_atexit>

0802a73a <_ZdlPvj>:
 802a73a:	f000 b812 	b.w	802a762 <_ZdlPv>

0802a73e <__cxa_guard_acquire>:
 802a73e:	6803      	ldr	r3, [r0, #0]
 802a740:	07db      	lsls	r3, r3, #31
 802a742:	d406      	bmi.n	802a752 <__cxa_guard_acquire+0x14>
 802a744:	7843      	ldrb	r3, [r0, #1]
 802a746:	b103      	cbz	r3, 802a74a <__cxa_guard_acquire+0xc>
 802a748:	deff      	udf	#255	; 0xff
 802a74a:	2301      	movs	r3, #1
 802a74c:	7043      	strb	r3, [r0, #1]
 802a74e:	4618      	mov	r0, r3
 802a750:	4770      	bx	lr
 802a752:	2000      	movs	r0, #0
 802a754:	4770      	bx	lr

0802a756 <__cxa_guard_release>:
 802a756:	2301      	movs	r3, #1
 802a758:	6003      	str	r3, [r0, #0]
 802a75a:	4770      	bx	lr

0802a75c <__cxa_pure_virtual>:
 802a75c:	b508      	push	{r3, lr}
 802a75e:	f000 f80f 	bl	802a780 <_ZSt9terminatev>

0802a762 <_ZdlPv>:
 802a762:	f000 be29 	b.w	802b3b8 <free>

0802a766 <_ZN10__cxxabiv111__terminateEPFvvE>:
 802a766:	b508      	push	{r3, lr}
 802a768:	4780      	blx	r0
 802a76a:	f000 fdf1 	bl	802b350 <abort>
	...

0802a770 <_ZSt13get_terminatev>:
 802a770:	4b02      	ldr	r3, [pc, #8]	; (802a77c <_ZSt13get_terminatev+0xc>)
 802a772:	6818      	ldr	r0, [r3, #0]
 802a774:	f3bf 8f5b 	dmb	ish
 802a778:	4770      	bx	lr
 802a77a:	bf00      	nop
 802a77c:	20000104 	.word	0x20000104

0802a780 <_ZSt9terminatev>:
 802a780:	b508      	push	{r3, lr}
 802a782:	f7ff fff5 	bl	802a770 <_ZSt13get_terminatev>
 802a786:	f7ff ffee 	bl	802a766 <_ZN10__cxxabiv111__terminateEPFvvE>
	...

0802a78c <sqrtf>:
 802a78c:	b508      	push	{r3, lr}
 802a78e:	ed2d 8b02 	vpush	{d8}
 802a792:	eeb0 8a40 	vmov.f32	s16, s0
 802a796:	f000 f8a1 	bl	802a8dc <__ieee754_sqrtf>
 802a79a:	eeb4 8a48 	vcmp.f32	s16, s16
 802a79e:	eef1 fa10 	vmrs	APSR_nzcv, fpscr
 802a7a2:	d60c      	bvs.n	802a7be <sqrtf+0x32>
 802a7a4:	eddf 8a07 	vldr	s17, [pc, #28]	; 802a7c4 <sqrtf+0x38>
 802a7a8:	eeb4 8ae8 	vcmpe.f32	s16, s17
 802a7ac:	eef1 fa10 	vmrs	APSR_nzcv, fpscr
 802a7b0:	d505      	bpl.n	802a7be <sqrtf+0x32>
 802a7b2:	f001 f8d3 	bl	802b95c <__errno>
 802a7b6:	ee88 0aa8 	vdiv.f32	s0, s17, s17
 802a7ba:	2321      	movs	r3, #33	; 0x21
 802a7bc:	6003      	str	r3, [r0, #0]
 802a7be:	ecbd 8b02 	vpop	{d8}
 802a7c2:	bd08      	pop	{r3, pc}
 802a7c4:	00000000 	.word	0x00000000

0802a7c8 <cosf>:
 802a7c8:	ee10 3a10 	vmov	r3, s0
 802a7cc:	b507      	push	{r0, r1, r2, lr}
 802a7ce:	4a1e      	ldr	r2, [pc, #120]	; (802a848 <cosf+0x80>)
 802a7d0:	f023 4300 	bic.w	r3, r3, #2147483648	; 0x80000000
 802a7d4:	4293      	cmp	r3, r2
 802a7d6:	dc06      	bgt.n	802a7e6 <cosf+0x1e>
 802a7d8:	eddf 0a1c 	vldr	s1, [pc, #112]	; 802a84c <cosf+0x84>
 802a7dc:	b003      	add	sp, #12
 802a7de:	f85d eb04 	ldr.w	lr, [sp], #4
 802a7e2:	f000 b903 	b.w	802a9ec <__kernel_cosf>
 802a7e6:	f1b3 4fff 	cmp.w	r3, #2139095040	; 0x7f800000
 802a7ea:	db04      	blt.n	802a7f6 <cosf+0x2e>
 802a7ec:	ee30 0a40 	vsub.f32	s0, s0, s0
 802a7f0:	b003      	add	sp, #12
 802a7f2:	f85d fb04 	ldr.w	pc, [sp], #4
 802a7f6:	4668      	mov	r0, sp
 802a7f8:	f000 f99e 	bl	802ab38 <__ieee754_rem_pio2f>
 802a7fc:	f000 0003 	and.w	r0, r0, #3
 802a800:	2801      	cmp	r0, #1
 802a802:	d009      	beq.n	802a818 <cosf+0x50>
 802a804:	2802      	cmp	r0, #2
 802a806:	d010      	beq.n	802a82a <cosf+0x62>
 802a808:	b9b0      	cbnz	r0, 802a838 <cosf+0x70>
 802a80a:	eddd 0a01 	vldr	s1, [sp, #4]
 802a80e:	ed9d 0a00 	vldr	s0, [sp]
 802a812:	f000 f8eb 	bl	802a9ec <__kernel_cosf>
 802a816:	e7eb      	b.n	802a7f0 <cosf+0x28>
 802a818:	eddd 0a01 	vldr	s1, [sp, #4]
 802a81c:	ed9d 0a00 	vldr	s0, [sp]
 802a820:	f000 f942 	bl	802aaa8 <__kernel_sinf>
 802a824:	eeb1 0a40 	vneg.f32	s0, s0
 802a828:	e7e2      	b.n	802a7f0 <cosf+0x28>
 802a82a:	eddd 0a01 	vldr	s1, [sp, #4]
 802a82e:	ed9d 0a00 	vldr	s0, [sp]
 802a832:	f000 f8db 	bl	802a9ec <__kernel_cosf>
 802a836:	e7f5      	b.n	802a824 <cosf+0x5c>
 802a838:	eddd 0a01 	vldr	s1, [sp, #4]
 802a83c:	ed9d 0a00 	vldr	s0, [sp]
 802a840:	2001      	movs	r0, #1
 802a842:	f000 f931 	bl	802aaa8 <__kernel_sinf>
 802a846:	e7d3      	b.n	802a7f0 <cosf+0x28>
 802a848:	3f490fd8 	.word	0x3f490fd8
 802a84c:	00000000 	.word	0x00000000

0802a850 <sinf>:
 802a850:	ee10 3a10 	vmov	r3, s0
 802a854:	b507      	push	{r0, r1, r2, lr}
 802a856:	4a1f      	ldr	r2, [pc, #124]	; (802a8d4 <sinf+0x84>)
 802a858:	f023 4300 	bic.w	r3, r3, #2147483648	; 0x80000000
 802a85c:	4293      	cmp	r3, r2
 802a85e:	dc07      	bgt.n	802a870 <sinf+0x20>
 802a860:	eddf 0a1d 	vldr	s1, [pc, #116]	; 802a8d8 <sinf+0x88>
 802a864:	2000      	movs	r0, #0
 802a866:	b003      	add	sp, #12
 802a868:	f85d eb04 	ldr.w	lr, [sp], #4
 802a86c:	f000 b91c 	b.w	802aaa8 <__kernel_sinf>
 802a870:	f1b3 4fff 	cmp.w	r3, #2139095040	; 0x7f800000
 802a874:	db04      	blt.n	802a880 <sinf+0x30>
 802a876:	ee30 0a40 	vsub.f32	s0, s0, s0
 802a87a:	b003      	add	sp, #12
 802a87c:	f85d fb04 	ldr.w	pc, [sp], #4
 802a880:	4668      	mov	r0, sp
 802a882:	f000 f959 	bl	802ab38 <__ieee754_rem_pio2f>
 802a886:	f000 0003 	and.w	r0, r0, #3
 802a88a:	2801      	cmp	r0, #1
 802a88c:	d00a      	beq.n	802a8a4 <sinf+0x54>
 802a88e:	2802      	cmp	r0, #2
 802a890:	d00f      	beq.n	802a8b2 <sinf+0x62>
 802a892:	b9c0      	cbnz	r0, 802a8c6 <sinf+0x76>
 802a894:	eddd 0a01 	vldr	s1, [sp, #4]
 802a898:	ed9d 0a00 	vldr	s0, [sp]
 802a89c:	2001      	movs	r0, #1
 802a89e:	f000 f903 	bl	802aaa8 <__kernel_sinf>
 802a8a2:	e7ea      	b.n	802a87a <sinf+0x2a>
 802a8a4:	eddd 0a01 	vldr	s1, [sp, #4]
 802a8a8:	ed9d 0a00 	vldr	s0, [sp]
 802a8ac:	f000 f89e 	bl	802a9ec <__kernel_cosf>
 802a8b0:	e7e3      	b.n	802a87a <sinf+0x2a>
 802a8b2:	eddd 0a01 	vldr	s1, [sp, #4]
 802a8b6:	ed9d 0a00 	vldr	s0, [sp]
 802a8ba:	2001      	movs	r0, #1
 802a8bc:	f000 f8f4 	bl	802aaa8 <__kernel_sinf>
 802a8c0:	eeb1 0a40 	vneg.f32	s0, s0
 802a8c4:	e7d9      	b.n	802a87a <sinf+0x2a>
 802a8c6:	eddd 0a01 	vldr	s1, [sp, #4]
 802a8ca:	ed9d 0a00 	vldr	s0, [sp]
 802a8ce:	f000 f88d 	bl	802a9ec <__kernel_cosf>
 802a8d2:	e7f5      	b.n	802a8c0 <sinf+0x70>
 802a8d4:	3f490fd8 	.word	0x3f490fd8
 802a8d8:	00000000 	.word	0x00000000

0802a8dc <__ieee754_sqrtf>:
 802a8dc:	eeb1 0ac0 	vsqrt.f32	s0, s0
 802a8e0:	4770      	bx	lr
	...

0802a8e4 <ceilf>:
 802a8e4:	ee10 3a10 	vmov	r3, s0
 802a8e8:	f3c3 52c7 	ubfx	r2, r3, #23, #8
 802a8ec:	3a7f      	subs	r2, #127	; 0x7f
 802a8ee:	2a16      	cmp	r2, #22
 802a8f0:	f023 4100 	bic.w	r1, r3, #2147483648	; 0x80000000
 802a8f4:	dc2a      	bgt.n	802a94c <ceilf+0x68>
 802a8f6:	2a00      	cmp	r2, #0
 802a8f8:	da11      	bge.n	802a91e <ceilf+0x3a>
 802a8fa:	eddf 7a19 	vldr	s15, [pc, #100]	; 802a960 <ceilf+0x7c>
 802a8fe:	ee30 0a27 	vadd.f32	s0, s0, s15
 802a902:	eeb5 0ac0 	vcmpe.f32	s0, #0.0
 802a906:	eef1 fa10 	vmrs	APSR_nzcv, fpscr
 802a90a:	dd05      	ble.n	802a918 <ceilf+0x34>
 802a90c:	2b00      	cmp	r3, #0
 802a90e:	db23      	blt.n	802a958 <ceilf+0x74>
 802a910:	2900      	cmp	r1, #0
 802a912:	bf18      	it	ne
 802a914:	f04f 537e 	movne.w	r3, #1065353216	; 0x3f800000
 802a918:	ee00 3a10 	vmov	s0, r3
 802a91c:	4770      	bx	lr
 802a91e:	4911      	ldr	r1, [pc, #68]	; (802a964 <ceilf+0x80>)
 802a920:	4111      	asrs	r1, r2
 802a922:	420b      	tst	r3, r1
 802a924:	d0fa      	beq.n	802a91c <ceilf+0x38>
 802a926:	eddf 7a0e 	vldr	s15, [pc, #56]	; 802a960 <ceilf+0x7c>
 802a92a:	ee30 0a27 	vadd.f32	s0, s0, s15
 802a92e:	eeb5 0ac0 	vcmpe.f32	s0, #0.0
 802a932:	eef1 fa10 	vmrs	APSR_nzcv, fpscr
 802a936:	ddef      	ble.n	802a918 <ceilf+0x34>
 802a938:	2b00      	cmp	r3, #0
 802a93a:	bfc2      	ittt	gt
 802a93c:	f44f 0000 	movgt.w	r0, #8388608	; 0x800000
 802a940:	fa40 f202 	asrgt.w	r2, r0, r2
 802a944:	189b      	addgt	r3, r3, r2
 802a946:	ea23 0301 	bic.w	r3, r3, r1
 802a94a:	e7e5      	b.n	802a918 <ceilf+0x34>
 802a94c:	f1b1 4fff 	cmp.w	r1, #2139095040	; 0x7f800000
 802a950:	d3e4      	bcc.n	802a91c <ceilf+0x38>
 802a952:	ee30 0a00 	vadd.f32	s0, s0, s0
 802a956:	4770      	bx	lr
 802a958:	f04f 4300 	mov.w	r3, #2147483648	; 0x80000000
 802a95c:	e7dc      	b.n	802a918 <ceilf+0x34>
 802a95e:	bf00      	nop
 802a960:	7149f2ca 	.word	0x7149f2ca
 802a964:	007fffff 	.word	0x007fffff

0802a968 <floorf>:
 802a968:	ee10 3a10 	vmov	r3, s0
 802a96c:	f3c3 52c7 	ubfx	r2, r3, #23, #8
 802a970:	3a7f      	subs	r2, #127	; 0x7f
 802a972:	2a16      	cmp	r2, #22
 802a974:	f023 4100 	bic.w	r1, r3, #2147483648	; 0x80000000
 802a978:	dc2a      	bgt.n	802a9d0 <floorf+0x68>
 802a97a:	2a00      	cmp	r2, #0
 802a97c:	da11      	bge.n	802a9a2 <floorf+0x3a>
 802a97e:	eddf 7a18 	vldr	s15, [pc, #96]	; 802a9e0 <floorf+0x78>
 802a982:	ee30 0a27 	vadd.f32	s0, s0, s15
 802a986:	eeb5 0ac0 	vcmpe.f32	s0, #0.0
 802a98a:	eef1 fa10 	vmrs	APSR_nzcv, fpscr
 802a98e:	dd05      	ble.n	802a99c <floorf+0x34>
 802a990:	2b00      	cmp	r3, #0
 802a992:	da23      	bge.n	802a9dc <floorf+0x74>
 802a994:	4a13      	ldr	r2, [pc, #76]	; (802a9e4 <floorf+0x7c>)
 802a996:	2900      	cmp	r1, #0
 802a998:	bf18      	it	ne
 802a99a:	4613      	movne	r3, r2
 802a99c:	ee00 3a10 	vmov	s0, r3
 802a9a0:	4770      	bx	lr
 802a9a2:	4911      	ldr	r1, [pc, #68]	; (802a9e8 <floorf+0x80>)
 802a9a4:	4111      	asrs	r1, r2
 802a9a6:	420b      	tst	r3, r1
 802a9a8:	d0fa      	beq.n	802a9a0 <floorf+0x38>
 802a9aa:	eddf 7a0d 	vldr	s15, [pc, #52]	; 802a9e0 <floorf+0x78>
 802a9ae:	ee30 0a27 	vadd.f32	s0, s0, s15
 802a9b2:	eeb5 0ac0 	vcmpe.f32	s0, #0.0
 802a9b6:	eef1 fa10 	vmrs	APSR_nzcv, fpscr
 802a9ba:	ddef      	ble.n	802a99c <floorf+0x34>
 802a9bc:	2b00      	cmp	r3, #0
 802a9be:	bfbe      	ittt	lt
 802a9c0:	f44f 0000 	movlt.w	r0, #8388608	; 0x800000
 802a9c4:	fa40 f202 	asrlt.w	r2, r0, r2
 802a9c8:	189b      	addlt	r3, r3, r2
 802a9ca:	ea23 0301 	bic.w	r3, r3, r1
 802a9ce:	e7e5      	b.n	802a99c <floorf+0x34>
 802a9d0:	f1b1 4fff 	cmp.w	r1, #2139095040	; 0x7f800000
 802a9d4:	d3e4      	bcc.n	802a9a0 <floorf+0x38>
 802a9d6:	ee30 0a00 	vadd.f32	s0, s0, s0
 802a9da:	4770      	bx	lr
 802a9dc:	2300      	movs	r3, #0
 802a9de:	e7dd      	b.n	802a99c <floorf+0x34>
 802a9e0:	7149f2ca 	.word	0x7149f2ca
 802a9e4:	bf800000 	.word	0xbf800000
 802a9e8:	007fffff 	.word	0x007fffff

0802a9ec <__kernel_cosf>:
 802a9ec:	ee10 3a10 	vmov	r3, s0
 802a9f0:	f023 4300 	bic.w	r3, r3, #2147483648	; 0x80000000
 802a9f4:	f1b3 5f48 	cmp.w	r3, #838860800	; 0x32000000
 802a9f8:	eef7 6a00 	vmov.f32	s13, #112	; 0x3f800000  1.0
 802a9fc:	da05      	bge.n	802aa0a <__kernel_cosf+0x1e>
 802a9fe:	eefd 7ac0 	vcvt.s32.f32	s15, s0
 802aa02:	ee17 2a90 	vmov	r2, s15
 802aa06:	2a00      	cmp	r2, #0
 802aa08:	d03b      	beq.n	802aa82 <__kernel_cosf+0x96>
 802aa0a:	ee20 7a00 	vmul.f32	s14, s0, s0
 802aa0e:	eddf 7a1e 	vldr	s15, [pc, #120]	; 802aa88 <__kernel_cosf+0x9c>
 802aa12:	ed9f 6a1e 	vldr	s12, [pc, #120]	; 802aa8c <__kernel_cosf+0xa0>
 802aa16:	4a1e      	ldr	r2, [pc, #120]	; (802aa90 <__kernel_cosf+0xa4>)
 802aa18:	eea7 6a27 	vfma.f32	s12, s14, s15
 802aa1c:	4293      	cmp	r3, r2
 802aa1e:	eddf 7a1d 	vldr	s15, [pc, #116]	; 802aa94 <__kernel_cosf+0xa8>
 802aa22:	eee6 7a07 	vfma.f32	s15, s12, s14
 802aa26:	ed9f 6a1c 	vldr	s12, [pc, #112]	; 802aa98 <__kernel_cosf+0xac>
 802aa2a:	eea7 6a87 	vfma.f32	s12, s15, s14
 802aa2e:	eddf 7a1b 	vldr	s15, [pc, #108]	; 802aa9c <__kernel_cosf+0xb0>
 802aa32:	eee6 7a07 	vfma.f32	s15, s12, s14
 802aa36:	ed9f 6a1a 	vldr	s12, [pc, #104]	; 802aaa0 <__kernel_cosf+0xb4>
 802aa3a:	eea7 6a87 	vfma.f32	s12, s15, s14
 802aa3e:	ee60 0ac0 	vnmul.f32	s1, s1, s0
 802aa42:	ee26 6a07 	vmul.f32	s12, s12, s14
 802aa46:	eef6 7a00 	vmov.f32	s15, #96	; 0x3f000000  0.5
 802aa4a:	eee7 0a06 	vfma.f32	s1, s14, s12
 802aa4e:	ee67 7a27 	vmul.f32	s15, s14, s15
 802aa52:	dc04      	bgt.n	802aa5e <__kernel_cosf+0x72>
 802aa54:	ee77 7ae0 	vsub.f32	s15, s15, s1
 802aa58:	ee36 0ae7 	vsub.f32	s0, s13, s15
 802aa5c:	4770      	bx	lr
 802aa5e:	4a11      	ldr	r2, [pc, #68]	; (802aaa4 <__kernel_cosf+0xb8>)
 802aa60:	4293      	cmp	r3, r2
 802aa62:	bfda      	itte	le
 802aa64:	f103 437f 	addle.w	r3, r3, #4278190080	; 0xff000000
 802aa68:	ee07 3a10 	vmovle	s14, r3
 802aa6c:	eeb5 7a02 	vmovgt.f32	s14, #82	; 0x3e900000  0.2812500
 802aa70:	ee77 7ac7 	vsub.f32	s15, s15, s14
 802aa74:	ee36 0ac7 	vsub.f32	s0, s13, s14
 802aa78:	ee77 7ae0 	vsub.f32	s15, s15, s1
 802aa7c:	ee30 0a67 	vsub.f32	s0, s0, s15
 802aa80:	4770      	bx	lr
 802aa82:	eeb0 0a66 	vmov.f32	s0, s13
 802aa86:	4770      	bx	lr
 802aa88:	ad47d74e 	.word	0xad47d74e
 802aa8c:	310f74f6 	.word	0x310f74f6
 802aa90:	3e999999 	.word	0x3e999999
 802aa94:	b493f27c 	.word	0xb493f27c
 802aa98:	37d00d01 	.word	0x37d00d01
 802aa9c:	bab60b61 	.word	0xbab60b61
 802aaa0:	3d2aaaab 	.word	0x3d2aaaab
 802aaa4:	3f480000 	.word	0x3f480000

0802aaa8 <__kernel_sinf>:
 802aaa8:	ee10 3a10 	vmov	r3, s0
 802aaac:	f023 4300 	bic.w	r3, r3, #2147483648	; 0x80000000
 802aab0:	f1b3 5f48 	cmp.w	r3, #838860800	; 0x32000000
 802aab4:	da04      	bge.n	802aac0 <__kernel_sinf+0x18>
 802aab6:	eefd 7ac0 	vcvt.s32.f32	s15, s0
 802aaba:	ee17 3a90 	vmov	r3, s15
 802aabe:	b35b      	cbz	r3, 802ab18 <__kernel_sinf+0x70>
 802aac0:	ee20 7a00 	vmul.f32	s14, s0, s0
 802aac4:	eddf 7a15 	vldr	s15, [pc, #84]	; 802ab1c <__kernel_sinf+0x74>
 802aac8:	ed9f 6a15 	vldr	s12, [pc, #84]	; 802ab20 <__kernel_sinf+0x78>
 802aacc:	eea7 6a27 	vfma.f32	s12, s14, s15
 802aad0:	eddf 7a14 	vldr	s15, [pc, #80]	; 802ab24 <__kernel_sinf+0x7c>
 802aad4:	eee6 7a07 	vfma.f32	s15, s12, s14
 802aad8:	ed9f 6a13 	vldr	s12, [pc, #76]	; 802ab28 <__kernel_sinf+0x80>
 802aadc:	eea7 6a87 	vfma.f32	s12, s15, s14
 802aae0:	eddf 7a12 	vldr	s15, [pc, #72]	; 802ab2c <__kernel_sinf+0x84>
 802aae4:	ee60 6a07 	vmul.f32	s13, s0, s14
 802aae8:	eee6 7a07 	vfma.f32	s15, s12, s14
 802aaec:	b930      	cbnz	r0, 802aafc <__kernel_sinf+0x54>
 802aaee:	ed9f 6a10 	vldr	s12, [pc, #64]	; 802ab30 <__kernel_sinf+0x88>
 802aaf2:	eea7 6a27 	vfma.f32	s12, s14, s15
 802aaf6:	eea6 0a26 	vfma.f32	s0, s12, s13
 802aafa:	4770      	bx	lr
 802aafc:	ee67 7ae6 	vnmul.f32	s15, s15, s13
 802ab00:	eeb6 6a00 	vmov.f32	s12, #96	; 0x3f000000  0.5
 802ab04:	eee0 7a86 	vfma.f32	s15, s1, s12
 802ab08:	eed7 0a87 	vfnms.f32	s1, s15, s14
 802ab0c:	eddf 7a09 	vldr	s15, [pc, #36]	; 802ab34 <__kernel_sinf+0x8c>
 802ab10:	eee6 0aa7 	vfma.f32	s1, s13, s15
 802ab14:	ee30 0a60 	vsub.f32	s0, s0, s1
 802ab18:	4770      	bx	lr
 802ab1a:	bf00      	nop
 802ab1c:	2f2ec9d3 	.word	0x2f2ec9d3
 802ab20:	b2d72f34 	.word	0xb2d72f34
 802ab24:	3638ef1b 	.word	0x3638ef1b
 802ab28:	b9500d01 	.word	0xb9500d01
 802ab2c:	3c088889 	.word	0x3c088889
 802ab30:	be2aaaab 	.word	0xbe2aaaab
 802ab34:	3e2aaaab 	.word	0x3e2aaaab

0802ab38 <__ieee754_rem_pio2f>:
 802ab38:	b5f0      	push	{r4, r5, r6, r7, lr}
 802ab3a:	ee10 6a10 	vmov	r6, s0
 802ab3e:	4b86      	ldr	r3, [pc, #536]	; (802ad58 <__ieee754_rem_pio2f+0x220>)
 802ab40:	f026 4500 	bic.w	r5, r6, #2147483648	; 0x80000000
 802ab44:	429d      	cmp	r5, r3
 802ab46:	b087      	sub	sp, #28
 802ab48:	4604      	mov	r4, r0
 802ab4a:	dc05      	bgt.n	802ab58 <__ieee754_rem_pio2f+0x20>
 802ab4c:	2300      	movs	r3, #0
 802ab4e:	ed80 0a00 	vstr	s0, [r0]
 802ab52:	6043      	str	r3, [r0, #4]
 802ab54:	2000      	movs	r0, #0
 802ab56:	e020      	b.n	802ab9a <__ieee754_rem_pio2f+0x62>
 802ab58:	4b80      	ldr	r3, [pc, #512]	; (802ad5c <__ieee754_rem_pio2f+0x224>)
 802ab5a:	429d      	cmp	r5, r3
 802ab5c:	dc38      	bgt.n	802abd0 <__ieee754_rem_pio2f+0x98>
 802ab5e:	2e00      	cmp	r6, #0
 802ab60:	ed9f 7a7f 	vldr	s14, [pc, #508]	; 802ad60 <__ieee754_rem_pio2f+0x228>
 802ab64:	4b7f      	ldr	r3, [pc, #508]	; (802ad64 <__ieee754_rem_pio2f+0x22c>)
 802ab66:	f025 050f 	bic.w	r5, r5, #15
 802ab6a:	dd18      	ble.n	802ab9e <__ieee754_rem_pio2f+0x66>
 802ab6c:	429d      	cmp	r5, r3
 802ab6e:	ee70 7a47 	vsub.f32	s15, s0, s14
 802ab72:	bf09      	itett	eq
 802ab74:	ed9f 7a7c 	vldreq	s14, [pc, #496]	; 802ad68 <__ieee754_rem_pio2f+0x230>
 802ab78:	ed9f 7a7c 	vldrne	s14, [pc, #496]	; 802ad6c <__ieee754_rem_pio2f+0x234>
 802ab7c:	ee77 7ac7 	vsubeq.f32	s15, s15, s14
 802ab80:	ed9f 7a7b 	vldreq	s14, [pc, #492]	; 802ad70 <__ieee754_rem_pio2f+0x238>
 802ab84:	ee77 6ac7 	vsub.f32	s13, s15, s14
 802ab88:	ee77 7ae6 	vsub.f32	s15, s15, s13
 802ab8c:	edc0 6a00 	vstr	s13, [r0]
 802ab90:	ee77 7ac7 	vsub.f32	s15, s15, s14
 802ab94:	edc0 7a01 	vstr	s15, [r0, #4]
 802ab98:	2001      	movs	r0, #1
 802ab9a:	b007      	add	sp, #28
 802ab9c:	bdf0      	pop	{r4, r5, r6, r7, pc}
 802ab9e:	429d      	cmp	r5, r3
 802aba0:	ee70 7a07 	vadd.f32	s15, s0, s14
 802aba4:	bf09      	itett	eq
 802aba6:	ed9f 7a70 	vldreq	s14, [pc, #448]	; 802ad68 <__ieee754_rem_pio2f+0x230>
 802abaa:	ed9f 7a70 	vldrne	s14, [pc, #448]	; 802ad6c <__ieee754_rem_pio2f+0x234>
 802abae:	ee77 7a87 	vaddeq.f32	s15, s15, s14
 802abb2:	ed9f 7a6f 	vldreq	s14, [pc, #444]	; 802ad70 <__ieee754_rem_pio2f+0x238>
 802abb6:	ee77 6a87 	vadd.f32	s13, s15, s14
 802abba:	ee77 7ae6 	vsub.f32	s15, s15, s13
 802abbe:	edc0 6a00 	vstr	s13, [r0]
 802abc2:	ee77 7a87 	vadd.f32	s15, s15, s14
 802abc6:	edc0 7a01 	vstr	s15, [r0, #4]
 802abca:	f04f 30ff 	mov.w	r0, #4294967295
 802abce:	e7e4      	b.n	802ab9a <__ieee754_rem_pio2f+0x62>
 802abd0:	4b68      	ldr	r3, [pc, #416]	; (802ad74 <__ieee754_rem_pio2f+0x23c>)
 802abd2:	429d      	cmp	r5, r3
 802abd4:	dc71      	bgt.n	802acba <__ieee754_rem_pio2f+0x182>
 802abd6:	f000 f8db 	bl	802ad90 <fabsf>
 802abda:	ed9f 7a67 	vldr	s14, [pc, #412]	; 802ad78 <__ieee754_rem_pio2f+0x240>
 802abde:	eef6 7a00 	vmov.f32	s15, #96	; 0x3f000000  0.5
 802abe2:	eee0 7a07 	vfma.f32	s15, s0, s14
 802abe6:	eefd 7ae7 	vcvt.s32.f32	s15, s15
 802abea:	eeb8 7ae7 	vcvt.f32.s32	s14, s15
 802abee:	ee17 0a90 	vmov	r0, s15
 802abf2:	eddf 7a5b 	vldr	s15, [pc, #364]	; 802ad60 <__ieee754_rem_pio2f+0x228>
 802abf6:	eea7 0a67 	vfms.f32	s0, s14, s15
 802abfa:	281f      	cmp	r0, #31
 802abfc:	eddf 7a5b 	vldr	s15, [pc, #364]	; 802ad6c <__ieee754_rem_pio2f+0x234>
 802ac00:	ee67 7a27 	vmul.f32	s15, s14, s15
 802ac04:	eeb1 6a47 	vneg.f32	s12, s14
 802ac08:	ee70 6a67 	vsub.f32	s13, s0, s15
 802ac0c:	ee16 2a90 	vmov	r2, s13
 802ac10:	dc1c      	bgt.n	802ac4c <__ieee754_rem_pio2f+0x114>
 802ac12:	495a      	ldr	r1, [pc, #360]	; (802ad7c <__ieee754_rem_pio2f+0x244>)
 802ac14:	1e47      	subs	r7, r0, #1
 802ac16:	f025 03ff 	bic.w	r3, r5, #255	; 0xff
 802ac1a:	f851 1027 	ldr.w	r1, [r1, r7, lsl #2]
 802ac1e:	428b      	cmp	r3, r1
 802ac20:	d014      	beq.n	802ac4c <__ieee754_rem_pio2f+0x114>
 802ac22:	6022      	str	r2, [r4, #0]
 802ac24:	ed94 7a00 	vldr	s14, [r4]
 802ac28:	ee30 0a47 	vsub.f32	s0, s0, s14
 802ac2c:	2e00      	cmp	r6, #0
 802ac2e:	ee30 0a67 	vsub.f32	s0, s0, s15
 802ac32:	ed84 0a01 	vstr	s0, [r4, #4]
 802ac36:	dab0      	bge.n	802ab9a <__ieee754_rem_pio2f+0x62>
 802ac38:	eeb1 7a47 	vneg.f32	s14, s14
 802ac3c:	eeb1 0a40 	vneg.f32	s0, s0
 802ac40:	ed84 7a00 	vstr	s14, [r4]
 802ac44:	ed84 0a01 	vstr	s0, [r4, #4]
 802ac48:	4240      	negs	r0, r0
 802ac4a:	e7a6      	b.n	802ab9a <__ieee754_rem_pio2f+0x62>
 802ac4c:	f3c2 51c7 	ubfx	r1, r2, #23, #8
 802ac50:	ebc1 51d5 	rsb	r1, r1, r5, lsr #23
 802ac54:	2908      	cmp	r1, #8
 802ac56:	ea4f 53e5 	mov.w	r3, r5, asr #23
 802ac5a:	dde2      	ble.n	802ac22 <__ieee754_rem_pio2f+0xea>
 802ac5c:	eddf 5a42 	vldr	s11, [pc, #264]	; 802ad68 <__ieee754_rem_pio2f+0x230>
 802ac60:	eef0 6a40 	vmov.f32	s13, s0
 802ac64:	eee6 6a25 	vfma.f32	s13, s12, s11
 802ac68:	ee70 7a66 	vsub.f32	s15, s0, s13
 802ac6c:	eee6 7a25 	vfma.f32	s15, s12, s11
 802ac70:	eddf 5a3f 	vldr	s11, [pc, #252]	; 802ad70 <__ieee754_rem_pio2f+0x238>
 802ac74:	eed7 7a25 	vfnms.f32	s15, s14, s11
 802ac78:	ee76 5ae7 	vsub.f32	s11, s13, s15
 802ac7c:	ee15 2a90 	vmov	r2, s11
 802ac80:	f3c2 51c7 	ubfx	r1, r2, #23, #8
 802ac84:	1a5b      	subs	r3, r3, r1
 802ac86:	2b19      	cmp	r3, #25
 802ac88:	dc04      	bgt.n	802ac94 <__ieee754_rem_pio2f+0x15c>
 802ac8a:	edc4 5a00 	vstr	s11, [r4]
 802ac8e:	eeb0 0a66 	vmov.f32	s0, s13
 802ac92:	e7c7      	b.n	802ac24 <__ieee754_rem_pio2f+0xec>
 802ac94:	eddf 5a3a 	vldr	s11, [pc, #232]	; 802ad80 <__ieee754_rem_pio2f+0x248>
 802ac98:	eeb0 0a66 	vmov.f32	s0, s13
 802ac9c:	eea6 0a25 	vfma.f32	s0, s12, s11
 802aca0:	ee76 7ac0 	vsub.f32	s15, s13, s0
 802aca4:	eddf 6a37 	vldr	s13, [pc, #220]	; 802ad84 <__ieee754_rem_pio2f+0x24c>
 802aca8:	eee6 7a25 	vfma.f32	s15, s12, s11
 802acac:	eed7 7a26 	vfnms.f32	s15, s14, s13
 802acb0:	ee30 7a67 	vsub.f32	s14, s0, s15
 802acb4:	ed84 7a00 	vstr	s14, [r4]
 802acb8:	e7b4      	b.n	802ac24 <__ieee754_rem_pio2f+0xec>
 802acba:	f1b5 4fff 	cmp.w	r5, #2139095040	; 0x7f800000
 802acbe:	db06      	blt.n	802acce <__ieee754_rem_pio2f+0x196>
 802acc0:	ee70 7a40 	vsub.f32	s15, s0, s0
 802acc4:	edc0 7a01 	vstr	s15, [r0, #4]
 802acc8:	edc0 7a00 	vstr	s15, [r0]
 802accc:	e742      	b.n	802ab54 <__ieee754_rem_pio2f+0x1c>
 802acce:	15ea      	asrs	r2, r5, #23
 802acd0:	3a86      	subs	r2, #134	; 0x86
 802acd2:	eba5 53c2 	sub.w	r3, r5, r2, lsl #23
 802acd6:	ee07 3a90 	vmov	s15, r3
 802acda:	eebd 7ae7 	vcvt.s32.f32	s14, s15
 802acde:	eddf 6a2a 	vldr	s13, [pc, #168]	; 802ad88 <__ieee754_rem_pio2f+0x250>
 802ace2:	eeb8 7ac7 	vcvt.f32.s32	s14, s14
 802ace6:	ee77 7ac7 	vsub.f32	s15, s15, s14
 802acea:	ed8d 7a03 	vstr	s14, [sp, #12]
 802acee:	ee67 7aa6 	vmul.f32	s15, s15, s13
 802acf2:	eebd 7ae7 	vcvt.s32.f32	s14, s15
 802acf6:	eeb8 7ac7 	vcvt.f32.s32	s14, s14
 802acfa:	ee77 7ac7 	vsub.f32	s15, s15, s14
 802acfe:	ed8d 7a04 	vstr	s14, [sp, #16]
 802ad02:	ee67 7aa6 	vmul.f32	s15, s15, s13
 802ad06:	eef5 7a40 	vcmp.f32	s15, #0.0
 802ad0a:	eef1 fa10 	vmrs	APSR_nzcv, fpscr
 802ad0e:	edcd 7a05 	vstr	s15, [sp, #20]
 802ad12:	d11e      	bne.n	802ad52 <__ieee754_rem_pio2f+0x21a>
 802ad14:	eeb5 7a40 	vcmp.f32	s14, #0.0
 802ad18:	eef1 fa10 	vmrs	APSR_nzcv, fpscr
 802ad1c:	bf14      	ite	ne
 802ad1e:	2302      	movne	r3, #2
 802ad20:	2301      	moveq	r3, #1
 802ad22:	491a      	ldr	r1, [pc, #104]	; (802ad8c <__ieee754_rem_pio2f+0x254>)
 802ad24:	9101      	str	r1, [sp, #4]
 802ad26:	2102      	movs	r1, #2
 802ad28:	9100      	str	r1, [sp, #0]
 802ad2a:	a803      	add	r0, sp, #12
 802ad2c:	4621      	mov	r1, r4
 802ad2e:	f000 f89d 	bl	802ae6c <__kernel_rem_pio2f>
 802ad32:	2e00      	cmp	r6, #0
 802ad34:	f6bf af31 	bge.w	802ab9a <__ieee754_rem_pio2f+0x62>
 802ad38:	edd4 7a00 	vldr	s15, [r4]
 802ad3c:	eef1 7a67 	vneg.f32	s15, s15
 802ad40:	edc4 7a00 	vstr	s15, [r4]
 802ad44:	edd4 7a01 	vldr	s15, [r4, #4]
 802ad48:	eef1 7a67 	vneg.f32	s15, s15
 802ad4c:	edc4 7a01 	vstr	s15, [r4, #4]
 802ad50:	e77a      	b.n	802ac48 <__ieee754_rem_pio2f+0x110>
 802ad52:	2303      	movs	r3, #3
 802ad54:	e7e5      	b.n	802ad22 <__ieee754_rem_pio2f+0x1ea>
 802ad56:	bf00      	nop
 802ad58:	3f490fd8 	.word	0x3f490fd8
 802ad5c:	4016cbe3 	.word	0x4016cbe3
 802ad60:	3fc90f80 	.word	0x3fc90f80
 802ad64:	3fc90fd0 	.word	0x3fc90fd0
 802ad68:	37354400 	.word	0x37354400
 802ad6c:	37354443 	.word	0x37354443
 802ad70:	2e85a308 	.word	0x2e85a308
 802ad74:	43490f80 	.word	0x43490f80
 802ad78:	3f22f984 	.word	0x3f22f984
 802ad7c:	080431d8 	.word	0x080431d8
 802ad80:	2e85a300 	.word	0x2e85a300
 802ad84:	248d3132 	.word	0x248d3132
 802ad88:	43800000 	.word	0x43800000
 802ad8c:	08043258 	.word	0x08043258

0802ad90 <fabsf>:
 802ad90:	ee10 3a10 	vmov	r3, s0
 802ad94:	f023 4300 	bic.w	r3, r3, #2147483648	; 0x80000000
 802ad98:	ee00 3a10 	vmov	s0, r3
 802ad9c:	4770      	bx	lr
	...

0802ada0 <scalbnf>:
 802ada0:	ee10 3a10 	vmov	r3, s0
 802ada4:	f033 4200 	bics.w	r2, r3, #2147483648	; 0x80000000
 802ada8:	d02b      	beq.n	802ae02 <scalbnf+0x62>
 802adaa:	f1b2 4fff 	cmp.w	r2, #2139095040	; 0x7f800000
 802adae:	d302      	bcc.n	802adb6 <scalbnf+0x16>
 802adb0:	ee30 0a00 	vadd.f32	s0, s0, s0
 802adb4:	4770      	bx	lr
 802adb6:	f013 4fff 	tst.w	r3, #2139095040	; 0x7f800000
 802adba:	d123      	bne.n	802ae04 <scalbnf+0x64>
 802adbc:	4b24      	ldr	r3, [pc, #144]	; (802ae50 <scalbnf+0xb0>)
 802adbe:	eddf 7a25 	vldr	s15, [pc, #148]	; 802ae54 <scalbnf+0xb4>
 802adc2:	4298      	cmp	r0, r3
 802adc4:	ee20 0a27 	vmul.f32	s0, s0, s15
 802adc8:	db17      	blt.n	802adfa <scalbnf+0x5a>
 802adca:	ee10 3a10 	vmov	r3, s0
 802adce:	f3c3 52c7 	ubfx	r2, r3, #23, #8
 802add2:	3a19      	subs	r2, #25
 802add4:	f24c 3150 	movw	r1, #50000	; 0xc350
 802add8:	4288      	cmp	r0, r1
 802adda:	dd15      	ble.n	802ae08 <scalbnf+0x68>
 802addc:	eddf 7a1e 	vldr	s15, [pc, #120]	; 802ae58 <scalbnf+0xb8>
 802ade0:	eddf 6a1e 	vldr	s13, [pc, #120]	; 802ae5c <scalbnf+0xbc>
 802ade4:	ee10 3a10 	vmov	r3, s0
 802ade8:	eeb0 7a67 	vmov.f32	s14, s15
 802adec:	2b00      	cmp	r3, #0
 802adee:	bfb8      	it	lt
 802adf0:	eef0 7a66 	vmovlt.f32	s15, s13
 802adf4:	ee27 0a87 	vmul.f32	s0, s15, s14
 802adf8:	4770      	bx	lr
 802adfa:	eddf 7a19 	vldr	s15, [pc, #100]	; 802ae60 <scalbnf+0xc0>
 802adfe:	ee27 0a80 	vmul.f32	s0, s15, s0
 802ae02:	4770      	bx	lr
 802ae04:	0dd2      	lsrs	r2, r2, #23
 802ae06:	e7e5      	b.n	802add4 <scalbnf+0x34>
 802ae08:	4410      	add	r0, r2
 802ae0a:	28fe      	cmp	r0, #254	; 0xfe
 802ae0c:	dce6      	bgt.n	802addc <scalbnf+0x3c>
 802ae0e:	2800      	cmp	r0, #0
 802ae10:	dd06      	ble.n	802ae20 <scalbnf+0x80>
 802ae12:	f023 43ff 	bic.w	r3, r3, #2139095040	; 0x7f800000
 802ae16:	ea43 53c0 	orr.w	r3, r3, r0, lsl #23
 802ae1a:	ee00 3a10 	vmov	s0, r3
 802ae1e:	4770      	bx	lr
 802ae20:	f110 0f16 	cmn.w	r0, #22
 802ae24:	da09      	bge.n	802ae3a <scalbnf+0x9a>
 802ae26:	eddf 7a0e 	vldr	s15, [pc, #56]	; 802ae60 <scalbnf+0xc0>
 802ae2a:	eddf 6a0e 	vldr	s13, [pc, #56]	; 802ae64 <scalbnf+0xc4>
 802ae2e:	ee10 3a10 	vmov	r3, s0
 802ae32:	eeb0 7a67 	vmov.f32	s14, s15
 802ae36:	2b00      	cmp	r3, #0
 802ae38:	e7d9      	b.n	802adee <scalbnf+0x4e>
 802ae3a:	3019      	adds	r0, #25
 802ae3c:	f023 43ff 	bic.w	r3, r3, #2139095040	; 0x7f800000
 802ae40:	ea43 53c0 	orr.w	r3, r3, r0, lsl #23
 802ae44:	ed9f 0a08 	vldr	s0, [pc, #32]	; 802ae68 <scalbnf+0xc8>
 802ae48:	ee07 3a90 	vmov	s15, r3
 802ae4c:	e7d7      	b.n	802adfe <scalbnf+0x5e>
 802ae4e:	bf00      	nop
 802ae50:	ffff3cb0 	.word	0xffff3cb0
 802ae54:	4c000000 	.word	0x4c000000
 802ae58:	7149f2ca 	.word	0x7149f2ca
 802ae5c:	f149f2ca 	.word	0xf149f2ca
 802ae60:	0da24260 	.word	0x0da24260
 802ae64:	8da24260 	.word	0x8da24260
 802ae68:	33000000 	.word	0x33000000

0802ae6c <__kernel_rem_pio2f>:
 802ae6c:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 802ae70:	ed2d 8b04 	vpush	{d8-d9}
 802ae74:	b0d9      	sub	sp, #356	; 0x164
 802ae76:	4688      	mov	r8, r1
 802ae78:	9002      	str	r0, [sp, #8]
 802ae7a:	49b8      	ldr	r1, [pc, #736]	; (802b15c <__kernel_rem_pio2f+0x2f0>)
 802ae7c:	9866      	ldr	r0, [sp, #408]	; 0x198
 802ae7e:	9301      	str	r3, [sp, #4]
 802ae80:	f851 a020 	ldr.w	sl, [r1, r0, lsl #2]
 802ae84:	9901      	ldr	r1, [sp, #4]
 802ae86:	9b67      	ldr	r3, [sp, #412]	; 0x19c
 802ae88:	f101 3bff 	add.w	fp, r1, #4294967295
 802ae8c:	1d11      	adds	r1, r2, #4
 802ae8e:	db25      	blt.n	802aedc <__kernel_rem_pio2f+0x70>
 802ae90:	1ed0      	subs	r0, r2, #3
 802ae92:	bf48      	it	mi
 802ae94:	1d10      	addmi	r0, r2, #4
 802ae96:	10c0      	asrs	r0, r0, #3
 802ae98:	1c45      	adds	r5, r0, #1
 802ae9a:	00e9      	lsls	r1, r5, #3
 802ae9c:	eba0 070b 	sub.w	r7, r0, fp
 802aea0:	ed9f 7ab2 	vldr	s14, [pc, #712]	; 802b16c <__kernel_rem_pio2f+0x300>
 802aea4:	9103      	str	r1, [sp, #12]
 802aea6:	eba2 05c5 	sub.w	r5, r2, r5, lsl #3
 802aeaa:	eb0a 0c0b 	add.w	ip, sl, fp
 802aeae:	ae1c      	add	r6, sp, #112	; 0x70
 802aeb0:	eb03 0e87 	add.w	lr, r3, r7, lsl #2
 802aeb4:	2400      	movs	r4, #0
 802aeb6:	4564      	cmp	r4, ip
 802aeb8:	dd12      	ble.n	802aee0 <__kernel_rem_pio2f+0x74>
 802aeba:	9901      	ldr	r1, [sp, #4]
 802aebc:	ac1c      	add	r4, sp, #112	; 0x70
 802aebe:	eb04 0481 	add.w	r4, r4, r1, lsl #2
 802aec2:	f50d 7988 	add.w	r9, sp, #272	; 0x110
 802aec6:	f04f 0c00 	mov.w	ip, #0
 802aeca:	45d4      	cmp	ip, sl
 802aecc:	dc27      	bgt.n	802af1e <__kernel_rem_pio2f+0xb2>
 802aece:	f8dd e008 	ldr.w	lr, [sp, #8]
 802aed2:	eddf 7aa6 	vldr	s15, [pc, #664]	; 802b16c <__kernel_rem_pio2f+0x300>
 802aed6:	4627      	mov	r7, r4
 802aed8:	2600      	movs	r6, #0
 802aeda:	e016      	b.n	802af0a <__kernel_rem_pio2f+0x9e>
 802aedc:	2000      	movs	r0, #0
 802aede:	e7db      	b.n	802ae98 <__kernel_rem_pio2f+0x2c>
 802aee0:	42e7      	cmn	r7, r4
 802aee2:	bf5d      	ittte	pl
 802aee4:	f85e 1024 	ldrpl.w	r1, [lr, r4, lsl #2]
 802aee8:	ee07 1a90 	vmovpl	s15, r1
 802aeec:	eef8 7ae7 	vcvtpl.f32.s32	s15, s15
 802aef0:	eef0 7a47 	vmovmi.f32	s15, s14
 802aef4:	ece6 7a01 	vstmia	r6!, {s15}
 802aef8:	3401      	adds	r4, #1
 802aefa:	e7dc      	b.n	802aeb6 <__kernel_rem_pio2f+0x4a>
 802aefc:	ecfe 6a01 	vldmia	lr!, {s13}
 802af00:	ed97 7a00 	vldr	s14, [r7]
 802af04:	eee6 7a87 	vfma.f32	s15, s13, s14
 802af08:	3601      	adds	r6, #1
 802af0a:	455e      	cmp	r6, fp
 802af0c:	f1a7 0704 	sub.w	r7, r7, #4
 802af10:	ddf4      	ble.n	802aefc <__kernel_rem_pio2f+0x90>
 802af12:	ece9 7a01 	vstmia	r9!, {s15}
 802af16:	f10c 0c01 	add.w	ip, ip, #1
 802af1a:	3404      	adds	r4, #4
 802af1c:	e7d5      	b.n	802aeca <__kernel_rem_pio2f+0x5e>
 802af1e:	a908      	add	r1, sp, #32
 802af20:	eb01 018a 	add.w	r1, r1, sl, lsl #2
 802af24:	eb03 0380 	add.w	r3, r3, r0, lsl #2
 802af28:	eddf 8a8f 	vldr	s17, [pc, #572]	; 802b168 <__kernel_rem_pio2f+0x2fc>
 802af2c:	ed9f 9a8d 	vldr	s18, [pc, #564]	; 802b164 <__kernel_rem_pio2f+0x2f8>
 802af30:	9105      	str	r1, [sp, #20]
 802af32:	9304      	str	r3, [sp, #16]
 802af34:	4656      	mov	r6, sl
 802af36:	00b3      	lsls	r3, r6, #2
 802af38:	9306      	str	r3, [sp, #24]
 802af3a:	ab58      	add	r3, sp, #352	; 0x160
 802af3c:	eb03 0086 	add.w	r0, r3, r6, lsl #2
 802af40:	ac08      	add	r4, sp, #32
 802af42:	ab44      	add	r3, sp, #272	; 0x110
 802af44:	ed10 0a14 	vldr	s0, [r0, #-80]	; 0xffffffb0
 802af48:	46a4      	mov	ip, r4
 802af4a:	eb03 0086 	add.w	r0, r3, r6, lsl #2
 802af4e:	4637      	mov	r7, r6
 802af50:	2f00      	cmp	r7, #0
 802af52:	f1a0 0004 	sub.w	r0, r0, #4
 802af56:	dc4a      	bgt.n	802afee <__kernel_rem_pio2f+0x182>
 802af58:	4628      	mov	r0, r5
 802af5a:	9207      	str	r2, [sp, #28]
 802af5c:	f7ff ff20 	bl	802ada0 <scalbnf>
 802af60:	eeb0 8a40 	vmov.f32	s16, s0
 802af64:	eeb4 0a00 	vmov.f32	s0, #64	; 0x3e000000  0.125
 802af68:	ee28 0a00 	vmul.f32	s0, s16, s0
 802af6c:	f7ff fcfc 	bl	802a968 <floorf>
 802af70:	eef2 7a00 	vmov.f32	s15, #32	; 0x41000000  8.0
 802af74:	eea0 8a67 	vfms.f32	s16, s0, s15
 802af78:	2d00      	cmp	r5, #0
 802af7a:	9a07      	ldr	r2, [sp, #28]
 802af7c:	eefd 7ac8 	vcvt.s32.f32	s15, s16
 802af80:	ee17 9a90 	vmov	r9, s15
 802af84:	eef8 7ae7 	vcvt.f32.s32	s15, s15
 802af88:	ee38 8a67 	vsub.f32	s16, s16, s15
 802af8c:	dd41      	ble.n	802b012 <__kernel_rem_pio2f+0x1a6>
 802af8e:	f106 3cff 	add.w	ip, r6, #4294967295
 802af92:	ab08      	add	r3, sp, #32
 802af94:	f1c5 0e08 	rsb	lr, r5, #8
 802af98:	f853 702c 	ldr.w	r7, [r3, ip, lsl #2]
 802af9c:	fa47 f00e 	asr.w	r0, r7, lr
 802afa0:	4481      	add	r9, r0
 802afa2:	fa00 f00e 	lsl.w	r0, r0, lr
 802afa6:	1a3f      	subs	r7, r7, r0
 802afa8:	f1c5 0007 	rsb	r0, r5, #7
 802afac:	f843 702c 	str.w	r7, [r3, ip, lsl #2]
 802afb0:	4107      	asrs	r7, r0
 802afb2:	2f00      	cmp	r7, #0
 802afb4:	dd3c      	ble.n	802b030 <__kernel_rem_pio2f+0x1c4>
 802afb6:	f04f 0e00 	mov.w	lr, #0
 802afba:	f109 0901 	add.w	r9, r9, #1
 802afbe:	4671      	mov	r1, lr
 802afc0:	4576      	cmp	r6, lr
 802afc2:	dc67      	bgt.n	802b094 <__kernel_rem_pio2f+0x228>
 802afc4:	2d00      	cmp	r5, #0
 802afc6:	dd03      	ble.n	802afd0 <__kernel_rem_pio2f+0x164>
 802afc8:	2d01      	cmp	r5, #1
 802afca:	d074      	beq.n	802b0b6 <__kernel_rem_pio2f+0x24a>
 802afcc:	2d02      	cmp	r5, #2
 802afce:	d07b      	beq.n	802b0c8 <__kernel_rem_pio2f+0x25c>
 802afd0:	2f02      	cmp	r7, #2
 802afd2:	d12d      	bne.n	802b030 <__kernel_rem_pio2f+0x1c4>
 802afd4:	eeb7 0a00 	vmov.f32	s0, #112	; 0x3f800000  1.0
 802afd8:	ee30 8a48 	vsub.f32	s16, s0, s16
 802afdc:	b341      	cbz	r1, 802b030 <__kernel_rem_pio2f+0x1c4>
 802afde:	4628      	mov	r0, r5
 802afe0:	9207      	str	r2, [sp, #28]
 802afe2:	f7ff fedd 	bl	802ada0 <scalbnf>
 802afe6:	9a07      	ldr	r2, [sp, #28]
 802afe8:	ee38 8a40 	vsub.f32	s16, s16, s0
 802afec:	e020      	b.n	802b030 <__kernel_rem_pio2f+0x1c4>
 802afee:	ee60 7a28 	vmul.f32	s15, s0, s17
 802aff2:	3f01      	subs	r7, #1
 802aff4:	eefd 7ae7 	vcvt.s32.f32	s15, s15
 802aff8:	eef8 7ae7 	vcvt.f32.s32	s15, s15
 802affc:	eea7 0ac9 	vfms.f32	s0, s15, s18
 802b000:	eebd 0ac0 	vcvt.s32.f32	s0, s0
 802b004:	ecac 0a01 	vstmia	ip!, {s0}
 802b008:	ed90 0a00 	vldr	s0, [r0]
 802b00c:	ee37 0a80 	vadd.f32	s0, s15, s0
 802b010:	e79e      	b.n	802af50 <__kernel_rem_pio2f+0xe4>
 802b012:	d105      	bne.n	802b020 <__kernel_rem_pio2f+0x1b4>
 802b014:	1e70      	subs	r0, r6, #1
 802b016:	ab08      	add	r3, sp, #32
 802b018:	f853 7020 	ldr.w	r7, [r3, r0, lsl #2]
 802b01c:	11ff      	asrs	r7, r7, #7
 802b01e:	e7c8      	b.n	802afb2 <__kernel_rem_pio2f+0x146>
 802b020:	eef6 7a00 	vmov.f32	s15, #96	; 0x3f000000  0.5
 802b024:	eeb4 8ae7 	vcmpe.f32	s16, s15
 802b028:	eef1 fa10 	vmrs	APSR_nzcv, fpscr
 802b02c:	da30      	bge.n	802b090 <__kernel_rem_pio2f+0x224>
 802b02e:	2700      	movs	r7, #0
 802b030:	eeb5 8a40 	vcmp.f32	s16, #0.0
 802b034:	eef1 fa10 	vmrs	APSR_nzcv, fpscr
 802b038:	f040 809a 	bne.w	802b170 <__kernel_rem_pio2f+0x304>
 802b03c:	1e74      	subs	r4, r6, #1
 802b03e:	46a4      	mov	ip, r4
 802b040:	2100      	movs	r1, #0
 802b042:	45d4      	cmp	ip, sl
 802b044:	da47      	bge.n	802b0d6 <__kernel_rem_pio2f+0x26a>
 802b046:	2900      	cmp	r1, #0
 802b048:	d063      	beq.n	802b112 <__kernel_rem_pio2f+0x2a6>
 802b04a:	ab08      	add	r3, sp, #32
 802b04c:	3d08      	subs	r5, #8
 802b04e:	f853 3024 	ldr.w	r3, [r3, r4, lsl #2]
 802b052:	2b00      	cmp	r3, #0
 802b054:	d07f      	beq.n	802b156 <__kernel_rem_pio2f+0x2ea>
 802b056:	4628      	mov	r0, r5
 802b058:	eeb7 0a00 	vmov.f32	s0, #112	; 0x3f800000  1.0
 802b05c:	f7ff fea0 	bl	802ada0 <scalbnf>
 802b060:	1c63      	adds	r3, r4, #1
 802b062:	aa44      	add	r2, sp, #272	; 0x110
 802b064:	ed9f 7a40 	vldr	s14, [pc, #256]	; 802b168 <__kernel_rem_pio2f+0x2fc>
 802b068:	0099      	lsls	r1, r3, #2
 802b06a:	eb02 0283 	add.w	r2, r2, r3, lsl #2
 802b06e:	4623      	mov	r3, r4
 802b070:	2b00      	cmp	r3, #0
 802b072:	f280 80ad 	bge.w	802b1d0 <__kernel_rem_pio2f+0x364>
 802b076:	4623      	mov	r3, r4
 802b078:	2b00      	cmp	r3, #0
 802b07a:	f2c0 80cb 	blt.w	802b214 <__kernel_rem_pio2f+0x3a8>
 802b07e:	aa44      	add	r2, sp, #272	; 0x110
 802b080:	eb02 0583 	add.w	r5, r2, r3, lsl #2
 802b084:	4e36      	ldr	r6, [pc, #216]	; (802b160 <__kernel_rem_pio2f+0x2f4>)
 802b086:	eddf 7a39 	vldr	s15, [pc, #228]	; 802b16c <__kernel_rem_pio2f+0x300>
 802b08a:	2000      	movs	r0, #0
 802b08c:	1ae2      	subs	r2, r4, r3
 802b08e:	e0b6      	b.n	802b1fe <__kernel_rem_pio2f+0x392>
 802b090:	2702      	movs	r7, #2
 802b092:	e790      	b.n	802afb6 <__kernel_rem_pio2f+0x14a>
 802b094:	6820      	ldr	r0, [r4, #0]
 802b096:	b949      	cbnz	r1, 802b0ac <__kernel_rem_pio2f+0x240>
 802b098:	b118      	cbz	r0, 802b0a2 <__kernel_rem_pio2f+0x236>
 802b09a:	f5c0 7080 	rsb	r0, r0, #256	; 0x100
 802b09e:	6020      	str	r0, [r4, #0]
 802b0a0:	2001      	movs	r0, #1
 802b0a2:	f10e 0e01 	add.w	lr, lr, #1
 802b0a6:	3404      	adds	r4, #4
 802b0a8:	4601      	mov	r1, r0
 802b0aa:	e789      	b.n	802afc0 <__kernel_rem_pio2f+0x154>
 802b0ac:	f1c0 00ff 	rsb	r0, r0, #255	; 0xff
 802b0b0:	6020      	str	r0, [r4, #0]
 802b0b2:	4608      	mov	r0, r1
 802b0b4:	e7f5      	b.n	802b0a2 <__kernel_rem_pio2f+0x236>
 802b0b6:	1e74      	subs	r4, r6, #1
 802b0b8:	ab08      	add	r3, sp, #32
 802b0ba:	f853 0024 	ldr.w	r0, [r3, r4, lsl #2]
 802b0be:	f000 007f 	and.w	r0, r0, #127	; 0x7f
 802b0c2:	f843 0024 	str.w	r0, [r3, r4, lsl #2]
 802b0c6:	e783      	b.n	802afd0 <__kernel_rem_pio2f+0x164>
 802b0c8:	1e74      	subs	r4, r6, #1
 802b0ca:	ab08      	add	r3, sp, #32
 802b0cc:	f853 0024 	ldr.w	r0, [r3, r4, lsl #2]
 802b0d0:	f000 003f 	and.w	r0, r0, #63	; 0x3f
 802b0d4:	e7f5      	b.n	802b0c2 <__kernel_rem_pio2f+0x256>
 802b0d6:	ab08      	add	r3, sp, #32
 802b0d8:	f853 002c 	ldr.w	r0, [r3, ip, lsl #2]
 802b0dc:	f10c 3cff 	add.w	ip, ip, #4294967295
 802b0e0:	4301      	orrs	r1, r0
 802b0e2:	e7ae      	b.n	802b042 <__kernel_rem_pio2f+0x1d6>
 802b0e4:	3001      	adds	r0, #1
 802b0e6:	f854 7d04 	ldr.w	r7, [r4, #-4]!
 802b0ea:	2f00      	cmp	r7, #0
 802b0ec:	d0fa      	beq.n	802b0e4 <__kernel_rem_pio2f+0x278>
 802b0ee:	9b06      	ldr	r3, [sp, #24]
 802b0f0:	f503 73b0 	add.w	r3, r3, #352	; 0x160
 802b0f4:	eb0d 0403 	add.w	r4, sp, r3
 802b0f8:	9b01      	ldr	r3, [sp, #4]
 802b0fa:	18f7      	adds	r7, r6, r3
 802b0fc:	ab1c      	add	r3, sp, #112	; 0x70
 802b0fe:	f106 0c01 	add.w	ip, r6, #1
 802b102:	3c4c      	subs	r4, #76	; 0x4c
 802b104:	eb03 0787 	add.w	r7, r3, r7, lsl #2
 802b108:	4430      	add	r0, r6
 802b10a:	4560      	cmp	r0, ip
 802b10c:	da04      	bge.n	802b118 <__kernel_rem_pio2f+0x2ac>
 802b10e:	4606      	mov	r6, r0
 802b110:	e711      	b.n	802af36 <__kernel_rem_pio2f+0xca>
 802b112:	9c05      	ldr	r4, [sp, #20]
 802b114:	2001      	movs	r0, #1
 802b116:	e7e6      	b.n	802b0e6 <__kernel_rem_pio2f+0x27a>
 802b118:	9b04      	ldr	r3, [sp, #16]
 802b11a:	f8dd e008 	ldr.w	lr, [sp, #8]
 802b11e:	f853 302c 	ldr.w	r3, [r3, ip, lsl #2]
 802b122:	9306      	str	r3, [sp, #24]
 802b124:	ee07 3a90 	vmov	s15, r3
 802b128:	eef8 7ae7 	vcvt.f32.s32	s15, s15
 802b12c:	2600      	movs	r6, #0
 802b12e:	ece7 7a01 	vstmia	r7!, {s15}
 802b132:	eddf 7a0e 	vldr	s15, [pc, #56]	; 802b16c <__kernel_rem_pio2f+0x300>
 802b136:	46b9      	mov	r9, r7
 802b138:	455e      	cmp	r6, fp
 802b13a:	dd04      	ble.n	802b146 <__kernel_rem_pio2f+0x2da>
 802b13c:	ece4 7a01 	vstmia	r4!, {s15}
 802b140:	f10c 0c01 	add.w	ip, ip, #1
 802b144:	e7e1      	b.n	802b10a <__kernel_rem_pio2f+0x29e>
 802b146:	ecfe 6a01 	vldmia	lr!, {s13}
 802b14a:	ed39 7a01 	vldmdb	r9!, {s14}
 802b14e:	3601      	adds	r6, #1
 802b150:	eee6 7a87 	vfma.f32	s15, s13, s14
 802b154:	e7f0      	b.n	802b138 <__kernel_rem_pio2f+0x2cc>
 802b156:	3c01      	subs	r4, #1
 802b158:	e777      	b.n	802b04a <__kernel_rem_pio2f+0x1de>
 802b15a:	bf00      	nop
 802b15c:	0804359c 	.word	0x0804359c
 802b160:	08043570 	.word	0x08043570
 802b164:	43800000 	.word	0x43800000
 802b168:	3b800000 	.word	0x3b800000
 802b16c:	00000000 	.word	0x00000000
 802b170:	9b03      	ldr	r3, [sp, #12]
 802b172:	eeb0 0a48 	vmov.f32	s0, s16
 802b176:	1a98      	subs	r0, r3, r2
 802b178:	f7ff fe12 	bl	802ada0 <scalbnf>
 802b17c:	ed1f 7a07 	vldr	s14, [pc, #-28]	; 802b164 <__kernel_rem_pio2f+0x2f8>
 802b180:	eeb4 0ac7 	vcmpe.f32	s0, s14
 802b184:	eef1 fa10 	vmrs	APSR_nzcv, fpscr
 802b188:	db19      	blt.n	802b1be <__kernel_rem_pio2f+0x352>
 802b18a:	ed5f 7a09 	vldr	s15, [pc, #-36]	; 802b168 <__kernel_rem_pio2f+0x2fc>
 802b18e:	ee60 7a27 	vmul.f32	s15, s0, s15
 802b192:	aa08      	add	r2, sp, #32
 802b194:	eefd 7ae7 	vcvt.s32.f32	s15, s15
 802b198:	1c74      	adds	r4, r6, #1
 802b19a:	eef8 7ae7 	vcvt.f32.s32	s15, s15
 802b19e:	3508      	adds	r5, #8
 802b1a0:	eea7 0ac7 	vfms.f32	s0, s15, s14
 802b1a4:	eefd 7ae7 	vcvt.s32.f32	s15, s15
 802b1a8:	eebd 0ac0 	vcvt.s32.f32	s0, s0
 802b1ac:	ee10 3a10 	vmov	r3, s0
 802b1b0:	f842 3026 	str.w	r3, [r2, r6, lsl #2]
 802b1b4:	ee17 3a90 	vmov	r3, s15
 802b1b8:	f842 3024 	str.w	r3, [r2, r4, lsl #2]
 802b1bc:	e74b      	b.n	802b056 <__kernel_rem_pio2f+0x1ea>
 802b1be:	eebd 0ac0 	vcvt.s32.f32	s0, s0
 802b1c2:	aa08      	add	r2, sp, #32
 802b1c4:	ee10 3a10 	vmov	r3, s0
 802b1c8:	4634      	mov	r4, r6
 802b1ca:	f842 3026 	str.w	r3, [r2, r6, lsl #2]
 802b1ce:	e742      	b.n	802b056 <__kernel_rem_pio2f+0x1ea>
 802b1d0:	a808      	add	r0, sp, #32
 802b1d2:	f850 0023 	ldr.w	r0, [r0, r3, lsl #2]
 802b1d6:	9001      	str	r0, [sp, #4]
 802b1d8:	ee07 0a90 	vmov	s15, r0
 802b1dc:	eef8 7ae7 	vcvt.f32.s32	s15, s15
 802b1e0:	3b01      	subs	r3, #1
 802b1e2:	ee67 7a80 	vmul.f32	s15, s15, s0
 802b1e6:	ee20 0a07 	vmul.f32	s0, s0, s14
 802b1ea:	ed62 7a01 	vstmdb	r2!, {s15}
 802b1ee:	e73f      	b.n	802b070 <__kernel_rem_pio2f+0x204>
 802b1f0:	ecf6 6a01 	vldmia	r6!, {s13}
 802b1f4:	ecb5 7a01 	vldmia	r5!, {s14}
 802b1f8:	eee6 7a87 	vfma.f32	s15, s13, s14
 802b1fc:	3001      	adds	r0, #1
 802b1fe:	4550      	cmp	r0, sl
 802b200:	dc01      	bgt.n	802b206 <__kernel_rem_pio2f+0x39a>
 802b202:	4290      	cmp	r0, r2
 802b204:	ddf4      	ble.n	802b1f0 <__kernel_rem_pio2f+0x384>
 802b206:	a858      	add	r0, sp, #352	; 0x160
 802b208:	eb00 0282 	add.w	r2, r0, r2, lsl #2
 802b20c:	ed42 7a28 	vstr	s15, [r2, #-160]	; 0xffffff60
 802b210:	3b01      	subs	r3, #1
 802b212:	e731      	b.n	802b078 <__kernel_rem_pio2f+0x20c>
 802b214:	9b66      	ldr	r3, [sp, #408]	; 0x198
 802b216:	2b02      	cmp	r3, #2
 802b218:	dc09      	bgt.n	802b22e <__kernel_rem_pio2f+0x3c2>
 802b21a:	2b00      	cmp	r3, #0
 802b21c:	dc2b      	bgt.n	802b276 <__kernel_rem_pio2f+0x40a>
 802b21e:	d044      	beq.n	802b2aa <__kernel_rem_pio2f+0x43e>
 802b220:	f009 0007 	and.w	r0, r9, #7
 802b224:	b059      	add	sp, #356	; 0x164
 802b226:	ecbd 8b04 	vpop	{d8-d9}
 802b22a:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
 802b22e:	9b66      	ldr	r3, [sp, #408]	; 0x198
 802b230:	2b03      	cmp	r3, #3
 802b232:	d1f5      	bne.n	802b220 <__kernel_rem_pio2f+0x3b4>
 802b234:	aa30      	add	r2, sp, #192	; 0xc0
 802b236:	1f0b      	subs	r3, r1, #4
 802b238:	4413      	add	r3, r2
 802b23a:	461a      	mov	r2, r3
 802b23c:	4620      	mov	r0, r4
 802b23e:	2800      	cmp	r0, #0
 802b240:	f1a2 0204 	sub.w	r2, r2, #4
 802b244:	dc52      	bgt.n	802b2ec <__kernel_rem_pio2f+0x480>
 802b246:	4622      	mov	r2, r4
 802b248:	2a01      	cmp	r2, #1
 802b24a:	f1a3 0304 	sub.w	r3, r3, #4
 802b24e:	dc5d      	bgt.n	802b30c <__kernel_rem_pio2f+0x4a0>
 802b250:	ab30      	add	r3, sp, #192	; 0xc0
 802b252:	ed5f 7a3a 	vldr	s15, [pc, #-232]	; 802b16c <__kernel_rem_pio2f+0x300>
 802b256:	440b      	add	r3, r1
 802b258:	2c01      	cmp	r4, #1
 802b25a:	dc67      	bgt.n	802b32c <__kernel_rem_pio2f+0x4c0>
 802b25c:	eddd 6a30 	vldr	s13, [sp, #192]	; 0xc0
 802b260:	ed9d 7a31 	vldr	s14, [sp, #196]	; 0xc4
 802b264:	2f00      	cmp	r7, #0
 802b266:	d167      	bne.n	802b338 <__kernel_rem_pio2f+0x4cc>
 802b268:	edc8 6a00 	vstr	s13, [r8]
 802b26c:	ed88 7a01 	vstr	s14, [r8, #4]
 802b270:	edc8 7a02 	vstr	s15, [r8, #8]
 802b274:	e7d4      	b.n	802b220 <__kernel_rem_pio2f+0x3b4>
 802b276:	ab30      	add	r3, sp, #192	; 0xc0
 802b278:	ed1f 7a44 	vldr	s14, [pc, #-272]	; 802b16c <__kernel_rem_pio2f+0x300>
 802b27c:	440b      	add	r3, r1
 802b27e:	4622      	mov	r2, r4
 802b280:	2a00      	cmp	r2, #0
 802b282:	da24      	bge.n	802b2ce <__kernel_rem_pio2f+0x462>
 802b284:	b34f      	cbz	r7, 802b2da <__kernel_rem_pio2f+0x46e>
 802b286:	eef1 7a47 	vneg.f32	s15, s14
 802b28a:	edc8 7a00 	vstr	s15, [r8]
 802b28e:	eddd 7a30 	vldr	s15, [sp, #192]	; 0xc0
 802b292:	ee77 7ac7 	vsub.f32	s15, s15, s14
 802b296:	aa31      	add	r2, sp, #196	; 0xc4
 802b298:	2301      	movs	r3, #1
 802b29a:	429c      	cmp	r4, r3
 802b29c:	da20      	bge.n	802b2e0 <__kernel_rem_pio2f+0x474>
 802b29e:	b10f      	cbz	r7, 802b2a4 <__kernel_rem_pio2f+0x438>
 802b2a0:	eef1 7a67 	vneg.f32	s15, s15
 802b2a4:	edc8 7a01 	vstr	s15, [r8, #4]
 802b2a8:	e7ba      	b.n	802b220 <__kernel_rem_pio2f+0x3b4>
 802b2aa:	ab30      	add	r3, sp, #192	; 0xc0
 802b2ac:	ed5f 7a51 	vldr	s15, [pc, #-324]	; 802b16c <__kernel_rem_pio2f+0x300>
 802b2b0:	440b      	add	r3, r1
 802b2b2:	2c00      	cmp	r4, #0
 802b2b4:	da05      	bge.n	802b2c2 <__kernel_rem_pio2f+0x456>
 802b2b6:	b10f      	cbz	r7, 802b2bc <__kernel_rem_pio2f+0x450>
 802b2b8:	eef1 7a67 	vneg.f32	s15, s15
 802b2bc:	edc8 7a00 	vstr	s15, [r8]
 802b2c0:	e7ae      	b.n	802b220 <__kernel_rem_pio2f+0x3b4>
 802b2c2:	ed33 7a01 	vldmdb	r3!, {s14}
 802b2c6:	3c01      	subs	r4, #1
 802b2c8:	ee77 7a87 	vadd.f32	s15, s15, s14
 802b2cc:	e7f1      	b.n	802b2b2 <__kernel_rem_pio2f+0x446>
 802b2ce:	ed73 7a01 	vldmdb	r3!, {s15}
 802b2d2:	3a01      	subs	r2, #1
 802b2d4:	ee37 7a27 	vadd.f32	s14, s14, s15
 802b2d8:	e7d2      	b.n	802b280 <__kernel_rem_pio2f+0x414>
 802b2da:	eef0 7a47 	vmov.f32	s15, s14
 802b2de:	e7d4      	b.n	802b28a <__kernel_rem_pio2f+0x41e>
 802b2e0:	ecb2 7a01 	vldmia	r2!, {s14}
 802b2e4:	3301      	adds	r3, #1
 802b2e6:	ee77 7a87 	vadd.f32	s15, s15, s14
 802b2ea:	e7d6      	b.n	802b29a <__kernel_rem_pio2f+0x42e>
 802b2ec:	edd2 7a00 	vldr	s15, [r2]
 802b2f0:	edd2 6a01 	vldr	s13, [r2, #4]
 802b2f4:	ee37 7aa6 	vadd.f32	s14, s15, s13
 802b2f8:	3801      	subs	r0, #1
 802b2fa:	ee77 7ac7 	vsub.f32	s15, s15, s14
 802b2fe:	ed82 7a00 	vstr	s14, [r2]
 802b302:	ee77 7aa6 	vadd.f32	s15, s15, s13
 802b306:	edc2 7a01 	vstr	s15, [r2, #4]
 802b30a:	e798      	b.n	802b23e <__kernel_rem_pio2f+0x3d2>
 802b30c:	edd3 7a00 	vldr	s15, [r3]
 802b310:	edd3 6a01 	vldr	s13, [r3, #4]
 802b314:	ee37 7aa6 	vadd.f32	s14, s15, s13
 802b318:	3a01      	subs	r2, #1
 802b31a:	ee77 7ac7 	vsub.f32	s15, s15, s14
 802b31e:	ed83 7a00 	vstr	s14, [r3]
 802b322:	ee77 7aa6 	vadd.f32	s15, s15, s13
 802b326:	edc3 7a01 	vstr	s15, [r3, #4]
 802b32a:	e78d      	b.n	802b248 <__kernel_rem_pio2f+0x3dc>
 802b32c:	ed33 7a01 	vldmdb	r3!, {s14}
 802b330:	3c01      	subs	r4, #1
 802b332:	ee77 7a87 	vadd.f32	s15, s15, s14
 802b336:	e78f      	b.n	802b258 <__kernel_rem_pio2f+0x3ec>
 802b338:	eef1 6a66 	vneg.f32	s13, s13
 802b33c:	eeb1 7a47 	vneg.f32	s14, s14
 802b340:	edc8 6a00 	vstr	s13, [r8]
 802b344:	ed88 7a01 	vstr	s14, [r8, #4]
 802b348:	eef1 7a67 	vneg.f32	s15, s15
 802b34c:	e790      	b.n	802b270 <__kernel_rem_pio2f+0x404>
 802b34e:	bf00      	nop

0802b350 <abort>:
 802b350:	b508      	push	{r3, lr}
 802b352:	2006      	movs	r0, #6
 802b354:	f000 fa3a 	bl	802b7cc <raise>
 802b358:	2001      	movs	r0, #1
 802b35a:	f7d6 fbfb 	bl	8001b54 <_exit>
	...

0802b360 <__assert_func>:
 802b360:	b51f      	push	{r0, r1, r2, r3, r4, lr}
 802b362:	4614      	mov	r4, r2
 802b364:	461a      	mov	r2, r3
 802b366:	4b09      	ldr	r3, [pc, #36]	; (802b38c <__assert_func+0x2c>)
 802b368:	681b      	ldr	r3, [r3, #0]
 802b36a:	4605      	mov	r5, r0
 802b36c:	68d8      	ldr	r0, [r3, #12]
 802b36e:	b14c      	cbz	r4, 802b384 <__assert_func+0x24>
 802b370:	4b07      	ldr	r3, [pc, #28]	; (802b390 <__assert_func+0x30>)
 802b372:	9100      	str	r1, [sp, #0]
 802b374:	e9cd 3401 	strd	r3, r4, [sp, #4]
 802b378:	4906      	ldr	r1, [pc, #24]	; (802b394 <__assert_func+0x34>)
 802b37a:	462b      	mov	r3, r5
 802b37c:	f000 f982 	bl	802b684 <fiprintf>
 802b380:	f7ff ffe6 	bl	802b350 <abort>
 802b384:	4b04      	ldr	r3, [pc, #16]	; (802b398 <__assert_func+0x38>)
 802b386:	461c      	mov	r4, r3
 802b388:	e7f3      	b.n	802b372 <__assert_func+0x12>
 802b38a:	bf00      	nop
 802b38c:	20000160 	.word	0x20000160
 802b390:	080435a8 	.word	0x080435a8
 802b394:	080435b5 	.word	0x080435b5
 802b398:	080435e3 	.word	0x080435e3

0802b39c <atexit>:
 802b39c:	2300      	movs	r3, #0
 802b39e:	4601      	mov	r1, r0
 802b3a0:	461a      	mov	r2, r3
 802b3a2:	4618      	mov	r0, r3
 802b3a4:	f000 bb16 	b.w	802b9d4 <__register_exitproc>

0802b3a8 <malloc>:
 802b3a8:	4b02      	ldr	r3, [pc, #8]	; (802b3b4 <malloc+0xc>)
 802b3aa:	4601      	mov	r1, r0
 802b3ac:	6818      	ldr	r0, [r3, #0]
 802b3ae:	f000 b82b 	b.w	802b408 <_malloc_r>
 802b3b2:	bf00      	nop
 802b3b4:	20000160 	.word	0x20000160

0802b3b8 <free>:
 802b3b8:	4b02      	ldr	r3, [pc, #8]	; (802b3c4 <free+0xc>)
 802b3ba:	4601      	mov	r1, r0
 802b3bc:	6818      	ldr	r0, [r3, #0]
 802b3be:	f000 bb67 	b.w	802ba90 <_free_r>
 802b3c2:	bf00      	nop
 802b3c4:	20000160 	.word	0x20000160

0802b3c8 <sbrk_aligned>:
 802b3c8:	b570      	push	{r4, r5, r6, lr}
 802b3ca:	4e0e      	ldr	r6, [pc, #56]	; (802b404 <sbrk_aligned+0x3c>)
 802b3cc:	460c      	mov	r4, r1
 802b3ce:	6831      	ldr	r1, [r6, #0]
 802b3d0:	4605      	mov	r5, r0
 802b3d2:	b911      	cbnz	r1, 802b3da <sbrk_aligned+0x12>
 802b3d4:	f000 faa0 	bl	802b918 <_sbrk_r>
 802b3d8:	6030      	str	r0, [r6, #0]
 802b3da:	4621      	mov	r1, r4
 802b3dc:	4628      	mov	r0, r5
 802b3de:	f000 fa9b 	bl	802b918 <_sbrk_r>
 802b3e2:	1c43      	adds	r3, r0, #1
 802b3e4:	d00a      	beq.n	802b3fc <sbrk_aligned+0x34>
 802b3e6:	1cc4      	adds	r4, r0, #3
 802b3e8:	f024 0403 	bic.w	r4, r4, #3
 802b3ec:	42a0      	cmp	r0, r4
 802b3ee:	d007      	beq.n	802b400 <sbrk_aligned+0x38>
 802b3f0:	1a21      	subs	r1, r4, r0
 802b3f2:	4628      	mov	r0, r5
 802b3f4:	f000 fa90 	bl	802b918 <_sbrk_r>
 802b3f8:	3001      	adds	r0, #1
 802b3fa:	d101      	bne.n	802b400 <sbrk_aligned+0x38>
 802b3fc:	f04f 34ff 	mov.w	r4, #4294967295
 802b400:	4620      	mov	r0, r4
 802b402:	bd70      	pop	{r4, r5, r6, pc}
 802b404:	20014174 	.word	0x20014174

0802b408 <_malloc_r>:
 802b408:	e92d 43f8 	stmdb	sp!, {r3, r4, r5, r6, r7, r8, r9, lr}
 802b40c:	1ccd      	adds	r5, r1, #3
 802b40e:	f025 0503 	bic.w	r5, r5, #3
 802b412:	3508      	adds	r5, #8
 802b414:	2d0c      	cmp	r5, #12
 802b416:	bf38      	it	cc
 802b418:	250c      	movcc	r5, #12
 802b41a:	2d00      	cmp	r5, #0
 802b41c:	4607      	mov	r7, r0
 802b41e:	db01      	blt.n	802b424 <_malloc_r+0x1c>
 802b420:	42a9      	cmp	r1, r5
 802b422:	d905      	bls.n	802b430 <_malloc_r+0x28>
 802b424:	230c      	movs	r3, #12
 802b426:	603b      	str	r3, [r7, #0]
 802b428:	2600      	movs	r6, #0
 802b42a:	4630      	mov	r0, r6
 802b42c:	e8bd 83f8 	ldmia.w	sp!, {r3, r4, r5, r6, r7, r8, r9, pc}
 802b430:	f8df 80d0 	ldr.w	r8, [pc, #208]	; 802b504 <_malloc_r+0xfc>
 802b434:	f000 f868 	bl	802b508 <__malloc_lock>
 802b438:	f8d8 3000 	ldr.w	r3, [r8]
 802b43c:	461c      	mov	r4, r3
 802b43e:	bb5c      	cbnz	r4, 802b498 <_malloc_r+0x90>
 802b440:	4629      	mov	r1, r5
 802b442:	4638      	mov	r0, r7
 802b444:	f7ff ffc0 	bl	802b3c8 <sbrk_aligned>
 802b448:	1c43      	adds	r3, r0, #1
 802b44a:	4604      	mov	r4, r0
 802b44c:	d155      	bne.n	802b4fa <_malloc_r+0xf2>
 802b44e:	f8d8 4000 	ldr.w	r4, [r8]
 802b452:	4626      	mov	r6, r4
 802b454:	2e00      	cmp	r6, #0
 802b456:	d145      	bne.n	802b4e4 <_malloc_r+0xdc>
 802b458:	2c00      	cmp	r4, #0
 802b45a:	d048      	beq.n	802b4ee <_malloc_r+0xe6>
 802b45c:	6823      	ldr	r3, [r4, #0]
 802b45e:	4631      	mov	r1, r6
 802b460:	4638      	mov	r0, r7
 802b462:	eb04 0903 	add.w	r9, r4, r3
 802b466:	f000 fa57 	bl	802b918 <_sbrk_r>
 802b46a:	4581      	cmp	r9, r0
 802b46c:	d13f      	bne.n	802b4ee <_malloc_r+0xe6>
 802b46e:	6821      	ldr	r1, [r4, #0]
 802b470:	1a6d      	subs	r5, r5, r1
 802b472:	4629      	mov	r1, r5
 802b474:	4638      	mov	r0, r7
 802b476:	f7ff ffa7 	bl	802b3c8 <sbrk_aligned>
 802b47a:	3001      	adds	r0, #1
 802b47c:	d037      	beq.n	802b4ee <_malloc_r+0xe6>
 802b47e:	6823      	ldr	r3, [r4, #0]
 802b480:	442b      	add	r3, r5
 802b482:	6023      	str	r3, [r4, #0]
 802b484:	f8d8 3000 	ldr.w	r3, [r8]
 802b488:	2b00      	cmp	r3, #0
 802b48a:	d038      	beq.n	802b4fe <_malloc_r+0xf6>
 802b48c:	685a      	ldr	r2, [r3, #4]
 802b48e:	42a2      	cmp	r2, r4
 802b490:	d12b      	bne.n	802b4ea <_malloc_r+0xe2>
 802b492:	2200      	movs	r2, #0
 802b494:	605a      	str	r2, [r3, #4]
 802b496:	e00f      	b.n	802b4b8 <_malloc_r+0xb0>
 802b498:	6822      	ldr	r2, [r4, #0]
 802b49a:	1b52      	subs	r2, r2, r5
 802b49c:	d41f      	bmi.n	802b4de <_malloc_r+0xd6>
 802b49e:	2a0b      	cmp	r2, #11
 802b4a0:	d917      	bls.n	802b4d2 <_malloc_r+0xca>
 802b4a2:	1961      	adds	r1, r4, r5
 802b4a4:	42a3      	cmp	r3, r4
 802b4a6:	6025      	str	r5, [r4, #0]
 802b4a8:	bf18      	it	ne
 802b4aa:	6059      	strne	r1, [r3, #4]
 802b4ac:	6863      	ldr	r3, [r4, #4]
 802b4ae:	bf08      	it	eq
 802b4b0:	f8c8 1000 	streq.w	r1, [r8]
 802b4b4:	5162      	str	r2, [r4, r5]
 802b4b6:	604b      	str	r3, [r1, #4]
 802b4b8:	4638      	mov	r0, r7
 802b4ba:	f104 060b 	add.w	r6, r4, #11
 802b4be:	f000 f829 	bl	802b514 <__malloc_unlock>
 802b4c2:	f026 0607 	bic.w	r6, r6, #7
 802b4c6:	1d23      	adds	r3, r4, #4
 802b4c8:	1af2      	subs	r2, r6, r3
 802b4ca:	d0ae      	beq.n	802b42a <_malloc_r+0x22>
 802b4cc:	1b9b      	subs	r3, r3, r6
 802b4ce:	50a3      	str	r3, [r4, r2]
 802b4d0:	e7ab      	b.n	802b42a <_malloc_r+0x22>
 802b4d2:	42a3      	cmp	r3, r4
 802b4d4:	6862      	ldr	r2, [r4, #4]
 802b4d6:	d1dd      	bne.n	802b494 <_malloc_r+0x8c>
 802b4d8:	f8c8 2000 	str.w	r2, [r8]
 802b4dc:	e7ec      	b.n	802b4b8 <_malloc_r+0xb0>
 802b4de:	4623      	mov	r3, r4
 802b4e0:	6864      	ldr	r4, [r4, #4]
 802b4e2:	e7ac      	b.n	802b43e <_malloc_r+0x36>
 802b4e4:	4634      	mov	r4, r6
 802b4e6:	6876      	ldr	r6, [r6, #4]
 802b4e8:	e7b4      	b.n	802b454 <_malloc_r+0x4c>
 802b4ea:	4613      	mov	r3, r2
 802b4ec:	e7cc      	b.n	802b488 <_malloc_r+0x80>
 802b4ee:	230c      	movs	r3, #12
 802b4f0:	603b      	str	r3, [r7, #0]
 802b4f2:	4638      	mov	r0, r7
 802b4f4:	f000 f80e 	bl	802b514 <__malloc_unlock>
 802b4f8:	e797      	b.n	802b42a <_malloc_r+0x22>
 802b4fa:	6025      	str	r5, [r4, #0]
 802b4fc:	e7dc      	b.n	802b4b8 <_malloc_r+0xb0>
 802b4fe:	605b      	str	r3, [r3, #4]
 802b500:	deff      	udf	#255	; 0xff
 802b502:	bf00      	nop
 802b504:	20014170 	.word	0x20014170

0802b508 <__malloc_lock>:
 802b508:	4801      	ldr	r0, [pc, #4]	; (802b510 <__malloc_lock+0x8>)
 802b50a:	f000 ba52 	b.w	802b9b2 <__retarget_lock_acquire_recursive>
 802b50e:	bf00      	nop
 802b510:	200142b9 	.word	0x200142b9

0802b514 <__malloc_unlock>:
 802b514:	4801      	ldr	r0, [pc, #4]	; (802b51c <__malloc_unlock+0x8>)
 802b516:	f000 ba4d 	b.w	802b9b4 <__retarget_lock_release_recursive>
 802b51a:	bf00      	nop
 802b51c:	200142b9 	.word	0x200142b9

0802b520 <__cxa_atexit>:
 802b520:	b510      	push	{r4, lr}
 802b522:	4c05      	ldr	r4, [pc, #20]	; (802b538 <__cxa_atexit+0x18>)
 802b524:	4613      	mov	r3, r2
 802b526:	b12c      	cbz	r4, 802b534 <__cxa_atexit+0x14>
 802b528:	460a      	mov	r2, r1
 802b52a:	4601      	mov	r1, r0
 802b52c:	2002      	movs	r0, #2
 802b52e:	f000 fa51 	bl	802b9d4 <__register_exitproc>
 802b532:	bd10      	pop	{r4, pc}
 802b534:	4620      	mov	r0, r4
 802b536:	e7fc      	b.n	802b532 <__cxa_atexit+0x12>
 802b538:	0802b9d5 	.word	0x0802b9d5

0802b53c <std>:
 802b53c:	2300      	movs	r3, #0
 802b53e:	b510      	push	{r4, lr}
 802b540:	4604      	mov	r4, r0
 802b542:	e9c0 3300 	strd	r3, r3, [r0]
 802b546:	e9c0 3304 	strd	r3, r3, [r0, #16]
 802b54a:	6083      	str	r3, [r0, #8]
 802b54c:	8181      	strh	r1, [r0, #12]
 802b54e:	6643      	str	r3, [r0, #100]	; 0x64
 802b550:	81c2      	strh	r2, [r0, #14]
 802b552:	6183      	str	r3, [r0, #24]
 802b554:	4619      	mov	r1, r3
 802b556:	2208      	movs	r2, #8
 802b558:	305c      	adds	r0, #92	; 0x5c
 802b55a:	f000 f906 	bl	802b76a <memset>
 802b55e:	4b0d      	ldr	r3, [pc, #52]	; (802b594 <std+0x58>)
 802b560:	6263      	str	r3, [r4, #36]	; 0x24
 802b562:	4b0d      	ldr	r3, [pc, #52]	; (802b598 <std+0x5c>)
 802b564:	62a3      	str	r3, [r4, #40]	; 0x28
 802b566:	4b0d      	ldr	r3, [pc, #52]	; (802b59c <std+0x60>)
 802b568:	62e3      	str	r3, [r4, #44]	; 0x2c
 802b56a:	4b0d      	ldr	r3, [pc, #52]	; (802b5a0 <std+0x64>)
 802b56c:	6323      	str	r3, [r4, #48]	; 0x30
 802b56e:	4b0d      	ldr	r3, [pc, #52]	; (802b5a4 <std+0x68>)
 802b570:	6224      	str	r4, [r4, #32]
 802b572:	429c      	cmp	r4, r3
 802b574:	d006      	beq.n	802b584 <std+0x48>
 802b576:	f103 0268 	add.w	r2, r3, #104	; 0x68
 802b57a:	4294      	cmp	r4, r2
 802b57c:	d002      	beq.n	802b584 <std+0x48>
 802b57e:	33d0      	adds	r3, #208	; 0xd0
 802b580:	429c      	cmp	r4, r3
 802b582:	d105      	bne.n	802b590 <std+0x54>
 802b584:	f104 0058 	add.w	r0, r4, #88	; 0x58
 802b588:	e8bd 4010 	ldmia.w	sp!, {r4, lr}
 802b58c:	f000 ba10 	b.w	802b9b0 <__retarget_lock_init_recursive>
 802b590:	bd10      	pop	{r4, pc}
 802b592:	bf00      	nop
 802b594:	0802b6e5 	.word	0x0802b6e5
 802b598:	0802b707 	.word	0x0802b707
 802b59c:	0802b73f 	.word	0x0802b73f
 802b5a0:	0802b763 	.word	0x0802b763
 802b5a4:	20014178 	.word	0x20014178

0802b5a8 <stdio_exit_handler>:
 802b5a8:	4a02      	ldr	r2, [pc, #8]	; (802b5b4 <stdio_exit_handler+0xc>)
 802b5aa:	4903      	ldr	r1, [pc, #12]	; (802b5b8 <stdio_exit_handler+0x10>)
 802b5ac:	4803      	ldr	r0, [pc, #12]	; (802b5bc <stdio_exit_handler+0x14>)
 802b5ae:	f000 b87b 	b.w	802b6a8 <_fwalk_sglue>
 802b5b2:	bf00      	nop
 802b5b4:	20000108 	.word	0x20000108
 802b5b8:	0802c1dd 	.word	0x0802c1dd
 802b5bc:	20000114 	.word	0x20000114

0802b5c0 <cleanup_stdio>:
 802b5c0:	6841      	ldr	r1, [r0, #4]
 802b5c2:	4b0c      	ldr	r3, [pc, #48]	; (802b5f4 <cleanup_stdio+0x34>)
 802b5c4:	4299      	cmp	r1, r3
 802b5c6:	b510      	push	{r4, lr}
 802b5c8:	4604      	mov	r4, r0
 802b5ca:	d001      	beq.n	802b5d0 <cleanup_stdio+0x10>
 802b5cc:	f000 fe06 	bl	802c1dc <_fflush_r>
 802b5d0:	68a1      	ldr	r1, [r4, #8]
 802b5d2:	4b09      	ldr	r3, [pc, #36]	; (802b5f8 <cleanup_stdio+0x38>)
 802b5d4:	4299      	cmp	r1, r3
 802b5d6:	d002      	beq.n	802b5de <cleanup_stdio+0x1e>
 802b5d8:	4620      	mov	r0, r4
 802b5da:	f000 fdff 	bl	802c1dc <_fflush_r>
 802b5de:	68e1      	ldr	r1, [r4, #12]
 802b5e0:	4b06      	ldr	r3, [pc, #24]	; (802b5fc <cleanup_stdio+0x3c>)
 802b5e2:	4299      	cmp	r1, r3
 802b5e4:	d004      	beq.n	802b5f0 <cleanup_stdio+0x30>
 802b5e6:	4620      	mov	r0, r4
 802b5e8:	e8bd 4010 	ldmia.w	sp!, {r4, lr}
 802b5ec:	f000 bdf6 	b.w	802c1dc <_fflush_r>
 802b5f0:	bd10      	pop	{r4, pc}
 802b5f2:	bf00      	nop
 802b5f4:	20014178 	.word	0x20014178
 802b5f8:	200141e0 	.word	0x200141e0
 802b5fc:	20014248 	.word	0x20014248

0802b600 <global_stdio_init.part.0>:
 802b600:	b510      	push	{r4, lr}
 802b602:	4b0b      	ldr	r3, [pc, #44]	; (802b630 <global_stdio_init.part.0+0x30>)
 802b604:	4c0b      	ldr	r4, [pc, #44]	; (802b634 <global_stdio_init.part.0+0x34>)
 802b606:	4a0c      	ldr	r2, [pc, #48]	; (802b638 <global_stdio_init.part.0+0x38>)
 802b608:	601a      	str	r2, [r3, #0]
 802b60a:	4620      	mov	r0, r4
 802b60c:	2200      	movs	r2, #0
 802b60e:	2104      	movs	r1, #4
 802b610:	f7ff ff94 	bl	802b53c <std>
 802b614:	f104 0068 	add.w	r0, r4, #104	; 0x68
 802b618:	2201      	movs	r2, #1
 802b61a:	2109      	movs	r1, #9
 802b61c:	f7ff ff8e 	bl	802b53c <std>
 802b620:	f104 00d0 	add.w	r0, r4, #208	; 0xd0
 802b624:	2202      	movs	r2, #2
 802b626:	e8bd 4010 	ldmia.w	sp!, {r4, lr}
 802b62a:	2112      	movs	r1, #18
 802b62c:	f7ff bf86 	b.w	802b53c <std>
 802b630:	200142b0 	.word	0x200142b0
 802b634:	20014178 	.word	0x20014178
 802b638:	0802b5a9 	.word	0x0802b5a9

0802b63c <__sfp_lock_acquire>:
 802b63c:	4801      	ldr	r0, [pc, #4]	; (802b644 <__sfp_lock_acquire+0x8>)
 802b63e:	f000 b9b8 	b.w	802b9b2 <__retarget_lock_acquire_recursive>
 802b642:	bf00      	nop
 802b644:	200142ba 	.word	0x200142ba

0802b648 <__sfp_lock_release>:
 802b648:	4801      	ldr	r0, [pc, #4]	; (802b650 <__sfp_lock_release+0x8>)
 802b64a:	f000 b9b3 	b.w	802b9b4 <__retarget_lock_release_recursive>
 802b64e:	bf00      	nop
 802b650:	200142ba 	.word	0x200142ba

0802b654 <__sinit>:
 802b654:	b510      	push	{r4, lr}
 802b656:	4604      	mov	r4, r0
 802b658:	f7ff fff0 	bl	802b63c <__sfp_lock_acquire>
 802b65c:	6a23      	ldr	r3, [r4, #32]
 802b65e:	b11b      	cbz	r3, 802b668 <__sinit+0x14>
 802b660:	e8bd 4010 	ldmia.w	sp!, {r4, lr}
 802b664:	f7ff bff0 	b.w	802b648 <__sfp_lock_release>
 802b668:	4b04      	ldr	r3, [pc, #16]	; (802b67c <__sinit+0x28>)
 802b66a:	6223      	str	r3, [r4, #32]
 802b66c:	4b04      	ldr	r3, [pc, #16]	; (802b680 <__sinit+0x2c>)
 802b66e:	681b      	ldr	r3, [r3, #0]
 802b670:	2b00      	cmp	r3, #0
 802b672:	d1f5      	bne.n	802b660 <__sinit+0xc>
 802b674:	f7ff ffc4 	bl	802b600 <global_stdio_init.part.0>
 802b678:	e7f2      	b.n	802b660 <__sinit+0xc>
 802b67a:	bf00      	nop
 802b67c:	0802b5c1 	.word	0x0802b5c1
 802b680:	200142b0 	.word	0x200142b0

0802b684 <fiprintf>:
 802b684:	b40e      	push	{r1, r2, r3}
 802b686:	b503      	push	{r0, r1, lr}
 802b688:	4601      	mov	r1, r0
 802b68a:	ab03      	add	r3, sp, #12
 802b68c:	4805      	ldr	r0, [pc, #20]	; (802b6a4 <fiprintf+0x20>)
 802b68e:	f853 2b04 	ldr.w	r2, [r3], #4
 802b692:	6800      	ldr	r0, [r0, #0]
 802b694:	9301      	str	r3, [sp, #4]
 802b696:	f000 fa71 	bl	802bb7c <_vfiprintf_r>
 802b69a:	b002      	add	sp, #8
 802b69c:	f85d eb04 	ldr.w	lr, [sp], #4
 802b6a0:	b003      	add	sp, #12
 802b6a2:	4770      	bx	lr
 802b6a4:	20000160 	.word	0x20000160

0802b6a8 <_fwalk_sglue>:
 802b6a8:	e92d 43f8 	stmdb	sp!, {r3, r4, r5, r6, r7, r8, r9, lr}
 802b6ac:	4607      	mov	r7, r0
 802b6ae:	4688      	mov	r8, r1
 802b6b0:	4614      	mov	r4, r2
 802b6b2:	2600      	movs	r6, #0
 802b6b4:	e9d4 9501 	ldrd	r9, r5, [r4, #4]
 802b6b8:	f1b9 0901 	subs.w	r9, r9, #1
 802b6bc:	d505      	bpl.n	802b6ca <_fwalk_sglue+0x22>
 802b6be:	6824      	ldr	r4, [r4, #0]
 802b6c0:	2c00      	cmp	r4, #0
 802b6c2:	d1f7      	bne.n	802b6b4 <_fwalk_sglue+0xc>
 802b6c4:	4630      	mov	r0, r6
 802b6c6:	e8bd 83f8 	ldmia.w	sp!, {r3, r4, r5, r6, r7, r8, r9, pc}
 802b6ca:	89ab      	ldrh	r3, [r5, #12]
 802b6cc:	2b01      	cmp	r3, #1
 802b6ce:	d907      	bls.n	802b6e0 <_fwalk_sglue+0x38>
 802b6d0:	f9b5 300e 	ldrsh.w	r3, [r5, #14]
 802b6d4:	3301      	adds	r3, #1
 802b6d6:	d003      	beq.n	802b6e0 <_fwalk_sglue+0x38>
 802b6d8:	4629      	mov	r1, r5
 802b6da:	4638      	mov	r0, r7
 802b6dc:	47c0      	blx	r8
 802b6de:	4306      	orrs	r6, r0
 802b6e0:	3568      	adds	r5, #104	; 0x68
 802b6e2:	e7e9      	b.n	802b6b8 <_fwalk_sglue+0x10>

0802b6e4 <__sread>:
 802b6e4:	b510      	push	{r4, lr}
 802b6e6:	460c      	mov	r4, r1
 802b6e8:	f9b1 100e 	ldrsh.w	r1, [r1, #14]
 802b6ec:	f000 f8ee 	bl	802b8cc <_read_r>
 802b6f0:	2800      	cmp	r0, #0
 802b6f2:	bfab      	itete	ge
 802b6f4:	6d63      	ldrge	r3, [r4, #84]	; 0x54
 802b6f6:	89a3      	ldrhlt	r3, [r4, #12]
 802b6f8:	181b      	addge	r3, r3, r0
 802b6fa:	f423 5380 	biclt.w	r3, r3, #4096	; 0x1000
 802b6fe:	bfac      	ite	ge
 802b700:	6563      	strge	r3, [r4, #84]	; 0x54
 802b702:	81a3      	strhlt	r3, [r4, #12]
 802b704:	bd10      	pop	{r4, pc}

0802b706 <__swrite>:
 802b706:	e92d 41f0 	stmdb	sp!, {r4, r5, r6, r7, r8, lr}
 802b70a:	461f      	mov	r7, r3
 802b70c:	898b      	ldrh	r3, [r1, #12]
 802b70e:	05db      	lsls	r3, r3, #23
 802b710:	4605      	mov	r5, r0
 802b712:	460c      	mov	r4, r1
 802b714:	4616      	mov	r6, r2
 802b716:	d505      	bpl.n	802b724 <__swrite+0x1e>
 802b718:	f9b1 100e 	ldrsh.w	r1, [r1, #14]
 802b71c:	2302      	movs	r3, #2
 802b71e:	2200      	movs	r2, #0
 802b720:	f000 f8c2 	bl	802b8a8 <_lseek_r>
 802b724:	89a3      	ldrh	r3, [r4, #12]
 802b726:	f9b4 100e 	ldrsh.w	r1, [r4, #14]
 802b72a:	f423 5380 	bic.w	r3, r3, #4096	; 0x1000
 802b72e:	81a3      	strh	r3, [r4, #12]
 802b730:	4632      	mov	r2, r6
 802b732:	463b      	mov	r3, r7
 802b734:	4628      	mov	r0, r5
 802b736:	e8bd 41f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, lr}
 802b73a:	f000 b8fd 	b.w	802b938 <_write_r>

0802b73e <__sseek>:
 802b73e:	b510      	push	{r4, lr}
 802b740:	460c      	mov	r4, r1
 802b742:	f9b1 100e 	ldrsh.w	r1, [r1, #14]
 802b746:	f000 f8af 	bl	802b8a8 <_lseek_r>
 802b74a:	1c43      	adds	r3, r0, #1
 802b74c:	89a3      	ldrh	r3, [r4, #12]
 802b74e:	bf15      	itete	ne
 802b750:	6560      	strne	r0, [r4, #84]	; 0x54
 802b752:	f423 5380 	biceq.w	r3, r3, #4096	; 0x1000
 802b756:	f443 5380 	orrne.w	r3, r3, #4096	; 0x1000
 802b75a:	81a3      	strheq	r3, [r4, #12]
 802b75c:	bf18      	it	ne
 802b75e:	81a3      	strhne	r3, [r4, #12]
 802b760:	bd10      	pop	{r4, pc}

0802b762 <__sclose>:
 802b762:	f9b1 100e 	ldrsh.w	r1, [r1, #14]
 802b766:	f000 b839 	b.w	802b7dc <_close_r>

0802b76a <memset>:
 802b76a:	4402      	add	r2, r0
 802b76c:	4603      	mov	r3, r0
 802b76e:	4293      	cmp	r3, r2
 802b770:	d100      	bne.n	802b774 <memset+0xa>
 802b772:	4770      	bx	lr
 802b774:	f803 1b01 	strb.w	r1, [r3], #1
 802b778:	e7f9      	b.n	802b76e <memset+0x4>

0802b77a <_raise_r>:
 802b77a:	291f      	cmp	r1, #31
 802b77c:	b538      	push	{r3, r4, r5, lr}
 802b77e:	4604      	mov	r4, r0
 802b780:	460d      	mov	r5, r1
 802b782:	d904      	bls.n	802b78e <_raise_r+0x14>
 802b784:	2316      	movs	r3, #22
 802b786:	6003      	str	r3, [r0, #0]
 802b788:	f04f 30ff 	mov.w	r0, #4294967295
 802b78c:	bd38      	pop	{r3, r4, r5, pc}
 802b78e:	6bc2      	ldr	r2, [r0, #60]	; 0x3c
 802b790:	b112      	cbz	r2, 802b798 <_raise_r+0x1e>
 802b792:	f852 3021 	ldr.w	r3, [r2, r1, lsl #2]
 802b796:	b94b      	cbnz	r3, 802b7ac <_raise_r+0x32>
 802b798:	4620      	mov	r0, r4
 802b79a:	f000 f8bb 	bl	802b914 <_getpid_r>
 802b79e:	462a      	mov	r2, r5
 802b7a0:	4601      	mov	r1, r0
 802b7a2:	4620      	mov	r0, r4
 802b7a4:	e8bd 4038 	ldmia.w	sp!, {r3, r4, r5, lr}
 802b7a8:	f000 b8a2 	b.w	802b8f0 <_kill_r>
 802b7ac:	2b01      	cmp	r3, #1
 802b7ae:	d00a      	beq.n	802b7c6 <_raise_r+0x4c>
 802b7b0:	1c59      	adds	r1, r3, #1
 802b7b2:	d103      	bne.n	802b7bc <_raise_r+0x42>
 802b7b4:	2316      	movs	r3, #22
 802b7b6:	6003      	str	r3, [r0, #0]
 802b7b8:	2001      	movs	r0, #1
 802b7ba:	e7e7      	b.n	802b78c <_raise_r+0x12>
 802b7bc:	2400      	movs	r4, #0
 802b7be:	f842 4025 	str.w	r4, [r2, r5, lsl #2]
 802b7c2:	4628      	mov	r0, r5
 802b7c4:	4798      	blx	r3
 802b7c6:	2000      	movs	r0, #0
 802b7c8:	e7e0      	b.n	802b78c <_raise_r+0x12>
	...

0802b7cc <raise>:
 802b7cc:	4b02      	ldr	r3, [pc, #8]	; (802b7d8 <raise+0xc>)
 802b7ce:	4601      	mov	r1, r0
 802b7d0:	6818      	ldr	r0, [r3, #0]
 802b7d2:	f7ff bfd2 	b.w	802b77a <_raise_r>
 802b7d6:	bf00      	nop
 802b7d8:	20000160 	.word	0x20000160

0802b7dc <_close_r>:
 802b7dc:	b538      	push	{r3, r4, r5, lr}
 802b7de:	4d06      	ldr	r5, [pc, #24]	; (802b7f8 <_close_r+0x1c>)
 802b7e0:	2300      	movs	r3, #0
 802b7e2:	4604      	mov	r4, r0
 802b7e4:	4608      	mov	r0, r1
 802b7e6:	602b      	str	r3, [r5, #0]
 802b7e8:	f7d6 f9d6 	bl	8001b98 <_close>
 802b7ec:	1c43      	adds	r3, r0, #1
 802b7ee:	d102      	bne.n	802b7f6 <_close_r+0x1a>
 802b7f0:	682b      	ldr	r3, [r5, #0]
 802b7f2:	b103      	cbz	r3, 802b7f6 <_close_r+0x1a>
 802b7f4:	6023      	str	r3, [r4, #0]
 802b7f6:	bd38      	pop	{r3, r4, r5, pc}
 802b7f8:	200142b4 	.word	0x200142b4

0802b7fc <_reclaim_reent>:
 802b7fc:	4b29      	ldr	r3, [pc, #164]	; (802b8a4 <_reclaim_reent+0xa8>)
 802b7fe:	681b      	ldr	r3, [r3, #0]
 802b800:	4283      	cmp	r3, r0
 802b802:	b570      	push	{r4, r5, r6, lr}
 802b804:	4604      	mov	r4, r0
 802b806:	d04b      	beq.n	802b8a0 <_reclaim_reent+0xa4>
 802b808:	69c3      	ldr	r3, [r0, #28]
 802b80a:	b143      	cbz	r3, 802b81e <_reclaim_reent+0x22>
 802b80c:	68db      	ldr	r3, [r3, #12]
 802b80e:	2b00      	cmp	r3, #0
 802b810:	d144      	bne.n	802b89c <_reclaim_reent+0xa0>
 802b812:	69e3      	ldr	r3, [r4, #28]
 802b814:	6819      	ldr	r1, [r3, #0]
 802b816:	b111      	cbz	r1, 802b81e <_reclaim_reent+0x22>
 802b818:	4620      	mov	r0, r4
 802b81a:	f000 f939 	bl	802ba90 <_free_r>
 802b81e:	6961      	ldr	r1, [r4, #20]
 802b820:	b111      	cbz	r1, 802b828 <_reclaim_reent+0x2c>
 802b822:	4620      	mov	r0, r4
 802b824:	f000 f934 	bl	802ba90 <_free_r>
 802b828:	69e1      	ldr	r1, [r4, #28]
 802b82a:	b111      	cbz	r1, 802b832 <_reclaim_reent+0x36>
 802b82c:	4620      	mov	r0, r4
 802b82e:	f000 f92f 	bl	802ba90 <_free_r>
 802b832:	6b21      	ldr	r1, [r4, #48]	; 0x30
 802b834:	b111      	cbz	r1, 802b83c <_reclaim_reent+0x40>
 802b836:	4620      	mov	r0, r4
 802b838:	f000 f92a 	bl	802ba90 <_free_r>
 802b83c:	6b61      	ldr	r1, [r4, #52]	; 0x34
 802b83e:	b111      	cbz	r1, 802b846 <_reclaim_reent+0x4a>
 802b840:	4620      	mov	r0, r4
 802b842:	f000 f925 	bl	802ba90 <_free_r>
 802b846:	6ba1      	ldr	r1, [r4, #56]	; 0x38
 802b848:	b111      	cbz	r1, 802b850 <_reclaim_reent+0x54>
 802b84a:	4620      	mov	r0, r4
 802b84c:	f000 f920 	bl	802ba90 <_free_r>
 802b850:	6ca1      	ldr	r1, [r4, #72]	; 0x48
 802b852:	b111      	cbz	r1, 802b85a <_reclaim_reent+0x5e>
 802b854:	4620      	mov	r0, r4
 802b856:	f000 f91b 	bl	802ba90 <_free_r>
 802b85a:	6c61      	ldr	r1, [r4, #68]	; 0x44
 802b85c:	b111      	cbz	r1, 802b864 <_reclaim_reent+0x68>
 802b85e:	4620      	mov	r0, r4
 802b860:	f000 f916 	bl	802ba90 <_free_r>
 802b864:	6ae1      	ldr	r1, [r4, #44]	; 0x2c
 802b866:	b111      	cbz	r1, 802b86e <_reclaim_reent+0x72>
 802b868:	4620      	mov	r0, r4
 802b86a:	f000 f911 	bl	802ba90 <_free_r>
 802b86e:	6a23      	ldr	r3, [r4, #32]
 802b870:	b1b3      	cbz	r3, 802b8a0 <_reclaim_reent+0xa4>
 802b872:	4620      	mov	r0, r4
 802b874:	e8bd 4070 	ldmia.w	sp!, {r4, r5, r6, lr}
 802b878:	4718      	bx	r3
 802b87a:	5949      	ldr	r1, [r1, r5]
 802b87c:	b941      	cbnz	r1, 802b890 <_reclaim_reent+0x94>
 802b87e:	3504      	adds	r5, #4
 802b880:	69e3      	ldr	r3, [r4, #28]
 802b882:	2d80      	cmp	r5, #128	; 0x80
 802b884:	68d9      	ldr	r1, [r3, #12]
 802b886:	d1f8      	bne.n	802b87a <_reclaim_reent+0x7e>
 802b888:	4620      	mov	r0, r4
 802b88a:	f000 f901 	bl	802ba90 <_free_r>
 802b88e:	e7c0      	b.n	802b812 <_reclaim_reent+0x16>
 802b890:	680e      	ldr	r6, [r1, #0]
 802b892:	4620      	mov	r0, r4
 802b894:	f000 f8fc 	bl	802ba90 <_free_r>
 802b898:	4631      	mov	r1, r6
 802b89a:	e7ef      	b.n	802b87c <_reclaim_reent+0x80>
 802b89c:	2500      	movs	r5, #0
 802b89e:	e7ef      	b.n	802b880 <_reclaim_reent+0x84>
 802b8a0:	bd70      	pop	{r4, r5, r6, pc}
 802b8a2:	bf00      	nop
 802b8a4:	20000160 	.word	0x20000160

0802b8a8 <_lseek_r>:
 802b8a8:	b538      	push	{r3, r4, r5, lr}
 802b8aa:	4d07      	ldr	r5, [pc, #28]	; (802b8c8 <_lseek_r+0x20>)
 802b8ac:	4604      	mov	r4, r0
 802b8ae:	4608      	mov	r0, r1
 802b8b0:	4611      	mov	r1, r2
 802b8b2:	2200      	movs	r2, #0
 802b8b4:	602a      	str	r2, [r5, #0]
 802b8b6:	461a      	mov	r2, r3
 802b8b8:	f7d6 f97a 	bl	8001bb0 <_lseek>
 802b8bc:	1c43      	adds	r3, r0, #1
 802b8be:	d102      	bne.n	802b8c6 <_lseek_r+0x1e>
 802b8c0:	682b      	ldr	r3, [r5, #0]
 802b8c2:	b103      	cbz	r3, 802b8c6 <_lseek_r+0x1e>
 802b8c4:	6023      	str	r3, [r4, #0]
 802b8c6:	bd38      	pop	{r3, r4, r5, pc}
 802b8c8:	200142b4 	.word	0x200142b4

0802b8cc <_read_r>:
 802b8cc:	b538      	push	{r3, r4, r5, lr}
 802b8ce:	4d07      	ldr	r5, [pc, #28]	; (802b8ec <_read_r+0x20>)
 802b8d0:	4604      	mov	r4, r0
 802b8d2:	4608      	mov	r0, r1
 802b8d4:	4611      	mov	r1, r2
 802b8d6:	2200      	movs	r2, #0
 802b8d8:	602a      	str	r2, [r5, #0]
 802b8da:	461a      	mov	r2, r3
 802b8dc:	f7d6 f940 	bl	8001b60 <_read>
 802b8e0:	1c43      	adds	r3, r0, #1
 802b8e2:	d102      	bne.n	802b8ea <_read_r+0x1e>
 802b8e4:	682b      	ldr	r3, [r5, #0]
 802b8e6:	b103      	cbz	r3, 802b8ea <_read_r+0x1e>
 802b8e8:	6023      	str	r3, [r4, #0]
 802b8ea:	bd38      	pop	{r3, r4, r5, pc}
 802b8ec:	200142b4 	.word	0x200142b4

0802b8f0 <_kill_r>:
 802b8f0:	b538      	push	{r3, r4, r5, lr}
 802b8f2:	4d07      	ldr	r5, [pc, #28]	; (802b910 <_kill_r+0x20>)
 802b8f4:	2300      	movs	r3, #0
 802b8f6:	4604      	mov	r4, r0
 802b8f8:	4608      	mov	r0, r1
 802b8fa:	4611      	mov	r1, r2
 802b8fc:	602b      	str	r3, [r5, #0]
 802b8fe:	f7d6 f921 	bl	8001b44 <_kill>
 802b902:	1c43      	adds	r3, r0, #1
 802b904:	d102      	bne.n	802b90c <_kill_r+0x1c>
 802b906:	682b      	ldr	r3, [r5, #0]
 802b908:	b103      	cbz	r3, 802b90c <_kill_r+0x1c>
 802b90a:	6023      	str	r3, [r4, #0]
 802b90c:	bd38      	pop	{r3, r4, r5, pc}
 802b90e:	bf00      	nop
 802b910:	200142b4 	.word	0x200142b4

0802b914 <_getpid_r>:
 802b914:	f7d6 b914 	b.w	8001b40 <_getpid>

0802b918 <_sbrk_r>:
 802b918:	b538      	push	{r3, r4, r5, lr}
 802b91a:	4d06      	ldr	r5, [pc, #24]	; (802b934 <_sbrk_r+0x1c>)
 802b91c:	2300      	movs	r3, #0
 802b91e:	4604      	mov	r4, r0
 802b920:	4608      	mov	r0, r1
 802b922:	602b      	str	r3, [r5, #0]
 802b924:	f7d6 f946 	bl	8001bb4 <_sbrk>
 802b928:	1c43      	adds	r3, r0, #1
 802b92a:	d102      	bne.n	802b932 <_sbrk_r+0x1a>
 802b92c:	682b      	ldr	r3, [r5, #0]
 802b92e:	b103      	cbz	r3, 802b932 <_sbrk_r+0x1a>
 802b930:	6023      	str	r3, [r4, #0]
 802b932:	bd38      	pop	{r3, r4, r5, pc}
 802b934:	200142b4 	.word	0x200142b4

0802b938 <_write_r>:
 802b938:	b538      	push	{r3, r4, r5, lr}
 802b93a:	4d07      	ldr	r5, [pc, #28]	; (802b958 <_write_r+0x20>)
 802b93c:	4604      	mov	r4, r0
 802b93e:	4608      	mov	r0, r1
 802b940:	4611      	mov	r1, r2
 802b942:	2200      	movs	r2, #0
 802b944:	602a      	str	r2, [r5, #0]
 802b946:	461a      	mov	r2, r3
 802b948:	f7d6 f918 	bl	8001b7c <_write>
 802b94c:	1c43      	adds	r3, r0, #1
 802b94e:	d102      	bne.n	802b956 <_write_r+0x1e>
 802b950:	682b      	ldr	r3, [r5, #0]
 802b952:	b103      	cbz	r3, 802b956 <_write_r+0x1e>
 802b954:	6023      	str	r3, [r4, #0]
 802b956:	bd38      	pop	{r3, r4, r5, pc}
 802b958:	200142b4 	.word	0x200142b4

0802b95c <__errno>:
 802b95c:	4b01      	ldr	r3, [pc, #4]	; (802b964 <__errno+0x8>)
 802b95e:	6818      	ldr	r0, [r3, #0]
 802b960:	4770      	bx	lr
 802b962:	bf00      	nop
 802b964:	20000160 	.word	0x20000160

0802b968 <__libc_init_array>:
 802b968:	b570      	push	{r4, r5, r6, lr}
 802b96a:	4d0d      	ldr	r5, [pc, #52]	; (802b9a0 <__libc_init_array+0x38>)
 802b96c:	4c0d      	ldr	r4, [pc, #52]	; (802b9a4 <__libc_init_array+0x3c>)
 802b96e:	1b64      	subs	r4, r4, r5
 802b970:	10a4      	asrs	r4, r4, #2
 802b972:	2600      	movs	r6, #0
 802b974:	42a6      	cmp	r6, r4
 802b976:	d109      	bne.n	802b98c <__libc_init_array+0x24>
 802b978:	4d0b      	ldr	r5, [pc, #44]	; (802b9a8 <__libc_init_array+0x40>)
 802b97a:	4c0c      	ldr	r4, [pc, #48]	; (802b9ac <__libc_init_array+0x44>)
 802b97c:	f000 fd70 	bl	802c460 <_init>
 802b980:	1b64      	subs	r4, r4, r5
 802b982:	10a4      	asrs	r4, r4, #2
 802b984:	2600      	movs	r6, #0
 802b986:	42a6      	cmp	r6, r4
 802b988:	d105      	bne.n	802b996 <__libc_init_array+0x2e>
 802b98a:	bd70      	pop	{r4, r5, r6, pc}
 802b98c:	f855 3b04 	ldr.w	r3, [r5], #4
 802b990:	4798      	blx	r3
 802b992:	3601      	adds	r6, #1
 802b994:	e7ee      	b.n	802b974 <__libc_init_array+0xc>
 802b996:	f855 3b04 	ldr.w	r3, [r5], #4
 802b99a:	4798      	blx	r3
 802b99c:	3601      	adds	r6, #1
 802b99e:	e7f2      	b.n	802b986 <__libc_init_array+0x1e>
 802b9a0:	080cccfc 	.word	0x080cccfc
 802b9a4:	080cccfc 	.word	0x080cccfc
 802b9a8:	080cccfc 	.word	0x080cccfc
 802b9ac:	080ccd10 	.word	0x080ccd10

0802b9b0 <__retarget_lock_init_recursive>:
 802b9b0:	4770      	bx	lr

0802b9b2 <__retarget_lock_acquire_recursive>:
 802b9b2:	4770      	bx	lr

0802b9b4 <__retarget_lock_release_recursive>:
 802b9b4:	4770      	bx	lr

0802b9b6 <memcpy>:
 802b9b6:	440a      	add	r2, r1
 802b9b8:	4291      	cmp	r1, r2
 802b9ba:	f100 33ff 	add.w	r3, r0, #4294967295
 802b9be:	d100      	bne.n	802b9c2 <memcpy+0xc>
 802b9c0:	4770      	bx	lr
 802b9c2:	b510      	push	{r4, lr}
 802b9c4:	f811 4b01 	ldrb.w	r4, [r1], #1
 802b9c8:	f803 4f01 	strb.w	r4, [r3, #1]!
 802b9cc:	4291      	cmp	r1, r2
 802b9ce:	d1f9      	bne.n	802b9c4 <memcpy+0xe>
 802b9d0:	bd10      	pop	{r4, pc}
	...

0802b9d4 <__register_exitproc>:
 802b9d4:	e92d 43f8 	stmdb	sp!, {r3, r4, r5, r6, r7, r8, r9, lr}
 802b9d8:	f8df 80b0 	ldr.w	r8, [pc, #176]	; 802ba8c <__register_exitproc+0xb8>
 802b9dc:	4606      	mov	r6, r0
 802b9de:	f8d8 0000 	ldr.w	r0, [r8]
 802b9e2:	461f      	mov	r7, r3
 802b9e4:	460d      	mov	r5, r1
 802b9e6:	4691      	mov	r9, r2
 802b9e8:	f7ff ffe3 	bl	802b9b2 <__retarget_lock_acquire_recursive>
 802b9ec:	4b23      	ldr	r3, [pc, #140]	; (802ba7c <__register_exitproc+0xa8>)
 802b9ee:	681c      	ldr	r4, [r3, #0]
 802b9f0:	b934      	cbnz	r4, 802ba00 <__register_exitproc+0x2c>
 802b9f2:	4c23      	ldr	r4, [pc, #140]	; (802ba80 <__register_exitproc+0xac>)
 802b9f4:	601c      	str	r4, [r3, #0]
 802b9f6:	4b23      	ldr	r3, [pc, #140]	; (802ba84 <__register_exitproc+0xb0>)
 802b9f8:	b113      	cbz	r3, 802ba00 <__register_exitproc+0x2c>
 802b9fa:	681b      	ldr	r3, [r3, #0]
 802b9fc:	f8c4 3088 	str.w	r3, [r4, #136]	; 0x88
 802ba00:	6863      	ldr	r3, [r4, #4]
 802ba02:	2b1f      	cmp	r3, #31
 802ba04:	dd07      	ble.n	802ba16 <__register_exitproc+0x42>
 802ba06:	f8d8 0000 	ldr.w	r0, [r8]
 802ba0a:	f7ff ffd3 	bl	802b9b4 <__retarget_lock_release_recursive>
 802ba0e:	f04f 30ff 	mov.w	r0, #4294967295
 802ba12:	e8bd 83f8 	ldmia.w	sp!, {r3, r4, r5, r6, r7, r8, r9, pc}
 802ba16:	b32e      	cbz	r6, 802ba64 <__register_exitproc+0x90>
 802ba18:	f8d4 0088 	ldr.w	r0, [r4, #136]	; 0x88
 802ba1c:	b968      	cbnz	r0, 802ba3a <__register_exitproc+0x66>
 802ba1e:	4b1a      	ldr	r3, [pc, #104]	; (802ba88 <__register_exitproc+0xb4>)
 802ba20:	2b00      	cmp	r3, #0
 802ba22:	d0f0      	beq.n	802ba06 <__register_exitproc+0x32>
 802ba24:	f44f 7084 	mov.w	r0, #264	; 0x108
 802ba28:	f7ff fcbe 	bl	802b3a8 <malloc>
 802ba2c:	2800      	cmp	r0, #0
 802ba2e:	d0ea      	beq.n	802ba06 <__register_exitproc+0x32>
 802ba30:	2300      	movs	r3, #0
 802ba32:	e9c0 3340 	strd	r3, r3, [r0, #256]	; 0x100
 802ba36:	f8c4 0088 	str.w	r0, [r4, #136]	; 0x88
 802ba3a:	6863      	ldr	r3, [r4, #4]
 802ba3c:	f840 9023 	str.w	r9, [r0, r3, lsl #2]
 802ba40:	2201      	movs	r2, #1
 802ba42:	409a      	lsls	r2, r3
 802ba44:	eb00 0183 	add.w	r1, r0, r3, lsl #2
 802ba48:	f8d0 3100 	ldr.w	r3, [r0, #256]	; 0x100
 802ba4c:	4313      	orrs	r3, r2
 802ba4e:	f8c0 3100 	str.w	r3, [r0, #256]	; 0x100
 802ba52:	2e02      	cmp	r6, #2
 802ba54:	f8c1 7080 	str.w	r7, [r1, #128]	; 0x80
 802ba58:	bf02      	ittt	eq
 802ba5a:	f8d0 3104 	ldreq.w	r3, [r0, #260]	; 0x104
 802ba5e:	4313      	orreq	r3, r2
 802ba60:	f8c0 3104 	streq.w	r3, [r0, #260]	; 0x104
 802ba64:	6863      	ldr	r3, [r4, #4]
 802ba66:	f8d8 0000 	ldr.w	r0, [r8]
 802ba6a:	1c5a      	adds	r2, r3, #1
 802ba6c:	3302      	adds	r3, #2
 802ba6e:	6062      	str	r2, [r4, #4]
 802ba70:	f844 5023 	str.w	r5, [r4, r3, lsl #2]
 802ba74:	f7ff ff9e 	bl	802b9b4 <__retarget_lock_release_recursive>
 802ba78:	2000      	movs	r0, #0
 802ba7a:	e7ca      	b.n	802ba12 <__register_exitproc+0x3e>
 802ba7c:	20014348 	.word	0x20014348
 802ba80:	200142bc 	.word	0x200142bc
 802ba84:	080435e4 	.word	0x080435e4
 802ba88:	0802b3a9 	.word	0x0802b3a9
 802ba8c:	20000164 	.word	0x20000164

0802ba90 <_free_r>:
 802ba90:	b537      	push	{r0, r1, r2, r4, r5, lr}
 802ba92:	2900      	cmp	r1, #0
 802ba94:	d044      	beq.n	802bb20 <_free_r+0x90>
 802ba96:	f851 3c04 	ldr.w	r3, [r1, #-4]
 802ba9a:	9001      	str	r0, [sp, #4]
 802ba9c:	2b00      	cmp	r3, #0
 802ba9e:	f1a1 0404 	sub.w	r4, r1, #4
 802baa2:	bfb8      	it	lt
 802baa4:	18e4      	addlt	r4, r4, r3
 802baa6:	f7ff fd2f 	bl	802b508 <__malloc_lock>
 802baaa:	4a1e      	ldr	r2, [pc, #120]	; (802bb24 <_free_r+0x94>)
 802baac:	9801      	ldr	r0, [sp, #4]
 802baae:	6813      	ldr	r3, [r2, #0]
 802bab0:	b933      	cbnz	r3, 802bac0 <_free_r+0x30>
 802bab2:	6063      	str	r3, [r4, #4]
 802bab4:	6014      	str	r4, [r2, #0]
 802bab6:	b003      	add	sp, #12
 802bab8:	e8bd 4030 	ldmia.w	sp!, {r4, r5, lr}
 802babc:	f7ff bd2a 	b.w	802b514 <__malloc_unlock>
 802bac0:	42a3      	cmp	r3, r4
 802bac2:	d908      	bls.n	802bad6 <_free_r+0x46>
 802bac4:	6825      	ldr	r5, [r4, #0]
 802bac6:	1961      	adds	r1, r4, r5
 802bac8:	428b      	cmp	r3, r1
 802baca:	bf01      	itttt	eq
 802bacc:	6819      	ldreq	r1, [r3, #0]
 802bace:	685b      	ldreq	r3, [r3, #4]
 802bad0:	1949      	addeq	r1, r1, r5
 802bad2:	6021      	streq	r1, [r4, #0]
 802bad4:	e7ed      	b.n	802bab2 <_free_r+0x22>
 802bad6:	461a      	mov	r2, r3
 802bad8:	685b      	ldr	r3, [r3, #4]
 802bada:	b10b      	cbz	r3, 802bae0 <_free_r+0x50>
 802badc:	42a3      	cmp	r3, r4
 802bade:	d9fa      	bls.n	802bad6 <_free_r+0x46>
 802bae0:	6811      	ldr	r1, [r2, #0]
 802bae2:	1855      	adds	r5, r2, r1
 802bae4:	42a5      	cmp	r5, r4
 802bae6:	d10b      	bne.n	802bb00 <_free_r+0x70>
 802bae8:	6824      	ldr	r4, [r4, #0]
 802baea:	4421      	add	r1, r4
 802baec:	1854      	adds	r4, r2, r1
 802baee:	42a3      	cmp	r3, r4
 802baf0:	6011      	str	r1, [r2, #0]
 802baf2:	d1e0      	bne.n	802bab6 <_free_r+0x26>
 802baf4:	681c      	ldr	r4, [r3, #0]
 802baf6:	685b      	ldr	r3, [r3, #4]
 802baf8:	6053      	str	r3, [r2, #4]
 802bafa:	440c      	add	r4, r1
 802bafc:	6014      	str	r4, [r2, #0]
 802bafe:	e7da      	b.n	802bab6 <_free_r+0x26>
 802bb00:	d902      	bls.n	802bb08 <_free_r+0x78>
 802bb02:	230c      	movs	r3, #12
 802bb04:	6003      	str	r3, [r0, #0]
 802bb06:	e7d6      	b.n	802bab6 <_free_r+0x26>
 802bb08:	6825      	ldr	r5, [r4, #0]
 802bb0a:	1961      	adds	r1, r4, r5
 802bb0c:	428b      	cmp	r3, r1
 802bb0e:	bf04      	itt	eq
 802bb10:	6819      	ldreq	r1, [r3, #0]
 802bb12:	685b      	ldreq	r3, [r3, #4]
 802bb14:	6063      	str	r3, [r4, #4]
 802bb16:	bf04      	itt	eq
 802bb18:	1949      	addeq	r1, r1, r5
 802bb1a:	6021      	streq	r1, [r4, #0]
 802bb1c:	6054      	str	r4, [r2, #4]
 802bb1e:	e7ca      	b.n	802bab6 <_free_r+0x26>
 802bb20:	b003      	add	sp, #12
 802bb22:	bd30      	pop	{r4, r5, pc}
 802bb24:	20014170 	.word	0x20014170

0802bb28 <__sfputc_r>:
 802bb28:	6893      	ldr	r3, [r2, #8]
 802bb2a:	3b01      	subs	r3, #1
 802bb2c:	2b00      	cmp	r3, #0
 802bb2e:	b410      	push	{r4}
 802bb30:	6093      	str	r3, [r2, #8]
 802bb32:	da08      	bge.n	802bb46 <__sfputc_r+0x1e>
 802bb34:	6994      	ldr	r4, [r2, #24]
 802bb36:	42a3      	cmp	r3, r4
 802bb38:	db01      	blt.n	802bb3e <__sfputc_r+0x16>
 802bb3a:	290a      	cmp	r1, #10
 802bb3c:	d103      	bne.n	802bb46 <__sfputc_r+0x1e>
 802bb3e:	f85d 4b04 	ldr.w	r4, [sp], #4
 802bb42:	f000 bb73 	b.w	802c22c <__swbuf_r>
 802bb46:	6813      	ldr	r3, [r2, #0]
 802bb48:	1c58      	adds	r0, r3, #1
 802bb4a:	6010      	str	r0, [r2, #0]
 802bb4c:	7019      	strb	r1, [r3, #0]
 802bb4e:	4608      	mov	r0, r1
 802bb50:	f85d 4b04 	ldr.w	r4, [sp], #4
 802bb54:	4770      	bx	lr

0802bb56 <__sfputs_r>:
 802bb56:	b5f8      	push	{r3, r4, r5, r6, r7, lr}
 802bb58:	4606      	mov	r6, r0
 802bb5a:	460f      	mov	r7, r1
 802bb5c:	4614      	mov	r4, r2
 802bb5e:	18d5      	adds	r5, r2, r3
 802bb60:	42ac      	cmp	r4, r5
 802bb62:	d101      	bne.n	802bb68 <__sfputs_r+0x12>
 802bb64:	2000      	movs	r0, #0
 802bb66:	e007      	b.n	802bb78 <__sfputs_r+0x22>
 802bb68:	f814 1b01 	ldrb.w	r1, [r4], #1
 802bb6c:	463a      	mov	r2, r7
 802bb6e:	4630      	mov	r0, r6
 802bb70:	f7ff ffda 	bl	802bb28 <__sfputc_r>
 802bb74:	1c43      	adds	r3, r0, #1
 802bb76:	d1f3      	bne.n	802bb60 <__sfputs_r+0xa>
 802bb78:	bdf8      	pop	{r3, r4, r5, r6, r7, pc}
	...

0802bb7c <_vfiprintf_r>:
 802bb7c:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 802bb80:	460d      	mov	r5, r1
 802bb82:	b09d      	sub	sp, #116	; 0x74
 802bb84:	4614      	mov	r4, r2
 802bb86:	4698      	mov	r8, r3
 802bb88:	4606      	mov	r6, r0
 802bb8a:	b118      	cbz	r0, 802bb94 <_vfiprintf_r+0x18>
 802bb8c:	6a03      	ldr	r3, [r0, #32]
 802bb8e:	b90b      	cbnz	r3, 802bb94 <_vfiprintf_r+0x18>
 802bb90:	f7ff fd60 	bl	802b654 <__sinit>
 802bb94:	6e6b      	ldr	r3, [r5, #100]	; 0x64
 802bb96:	07d9      	lsls	r1, r3, #31
 802bb98:	d405      	bmi.n	802bba6 <_vfiprintf_r+0x2a>
 802bb9a:	89ab      	ldrh	r3, [r5, #12]
 802bb9c:	059a      	lsls	r2, r3, #22
 802bb9e:	d402      	bmi.n	802bba6 <_vfiprintf_r+0x2a>
 802bba0:	6da8      	ldr	r0, [r5, #88]	; 0x58
 802bba2:	f7ff ff06 	bl	802b9b2 <__retarget_lock_acquire_recursive>
 802bba6:	89ab      	ldrh	r3, [r5, #12]
 802bba8:	071b      	lsls	r3, r3, #28
 802bbaa:	d501      	bpl.n	802bbb0 <_vfiprintf_r+0x34>
 802bbac:	692b      	ldr	r3, [r5, #16]
 802bbae:	b99b      	cbnz	r3, 802bbd8 <_vfiprintf_r+0x5c>
 802bbb0:	4629      	mov	r1, r5
 802bbb2:	4630      	mov	r0, r6
 802bbb4:	f000 fb78 	bl	802c2a8 <__swsetup_r>
 802bbb8:	b170      	cbz	r0, 802bbd8 <_vfiprintf_r+0x5c>
 802bbba:	6e6b      	ldr	r3, [r5, #100]	; 0x64
 802bbbc:	07dc      	lsls	r4, r3, #31
 802bbbe:	d504      	bpl.n	802bbca <_vfiprintf_r+0x4e>
 802bbc0:	f04f 30ff 	mov.w	r0, #4294967295
 802bbc4:	b01d      	add	sp, #116	; 0x74
 802bbc6:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
 802bbca:	89ab      	ldrh	r3, [r5, #12]
 802bbcc:	0598      	lsls	r0, r3, #22
 802bbce:	d4f7      	bmi.n	802bbc0 <_vfiprintf_r+0x44>
 802bbd0:	6da8      	ldr	r0, [r5, #88]	; 0x58
 802bbd2:	f7ff feef 	bl	802b9b4 <__retarget_lock_release_recursive>
 802bbd6:	e7f3      	b.n	802bbc0 <_vfiprintf_r+0x44>
 802bbd8:	2300      	movs	r3, #0
 802bbda:	9309      	str	r3, [sp, #36]	; 0x24
 802bbdc:	2320      	movs	r3, #32
 802bbde:	f88d 3029 	strb.w	r3, [sp, #41]	; 0x29
 802bbe2:	f8cd 800c 	str.w	r8, [sp, #12]
 802bbe6:	2330      	movs	r3, #48	; 0x30
 802bbe8:	f8df 81b0 	ldr.w	r8, [pc, #432]	; 802bd9c <_vfiprintf_r+0x220>
 802bbec:	f88d 302a 	strb.w	r3, [sp, #42]	; 0x2a
 802bbf0:	f04f 0901 	mov.w	r9, #1
 802bbf4:	4623      	mov	r3, r4
 802bbf6:	469a      	mov	sl, r3
 802bbf8:	f813 2b01 	ldrb.w	r2, [r3], #1
 802bbfc:	b10a      	cbz	r2, 802bc02 <_vfiprintf_r+0x86>
 802bbfe:	2a25      	cmp	r2, #37	; 0x25
 802bc00:	d1f9      	bne.n	802bbf6 <_vfiprintf_r+0x7a>
 802bc02:	ebba 0b04 	subs.w	fp, sl, r4
 802bc06:	d00b      	beq.n	802bc20 <_vfiprintf_r+0xa4>
 802bc08:	465b      	mov	r3, fp
 802bc0a:	4622      	mov	r2, r4
 802bc0c:	4629      	mov	r1, r5
 802bc0e:	4630      	mov	r0, r6
 802bc10:	f7ff ffa1 	bl	802bb56 <__sfputs_r>
 802bc14:	3001      	adds	r0, #1
 802bc16:	f000 80a9 	beq.w	802bd6c <_vfiprintf_r+0x1f0>
 802bc1a:	9a09      	ldr	r2, [sp, #36]	; 0x24
 802bc1c:	445a      	add	r2, fp
 802bc1e:	9209      	str	r2, [sp, #36]	; 0x24
 802bc20:	f89a 3000 	ldrb.w	r3, [sl]
 802bc24:	2b00      	cmp	r3, #0
 802bc26:	f000 80a1 	beq.w	802bd6c <_vfiprintf_r+0x1f0>
 802bc2a:	2300      	movs	r3, #0
 802bc2c:	f04f 32ff 	mov.w	r2, #4294967295
 802bc30:	e9cd 2305 	strd	r2, r3, [sp, #20]
 802bc34:	f10a 0a01 	add.w	sl, sl, #1
 802bc38:	9304      	str	r3, [sp, #16]
 802bc3a:	9307      	str	r3, [sp, #28]
 802bc3c:	f88d 3053 	strb.w	r3, [sp, #83]	; 0x53
 802bc40:	931a      	str	r3, [sp, #104]	; 0x68
 802bc42:	4654      	mov	r4, sl
 802bc44:	2205      	movs	r2, #5
 802bc46:	f814 1b01 	ldrb.w	r1, [r4], #1
 802bc4a:	4854      	ldr	r0, [pc, #336]	; (802bd9c <_vfiprintf_r+0x220>)
 802bc4c:	f7d4 fb30 	bl	80002b0 <memchr>
 802bc50:	9a04      	ldr	r2, [sp, #16]
 802bc52:	b9d8      	cbnz	r0, 802bc8c <_vfiprintf_r+0x110>
 802bc54:	06d1      	lsls	r1, r2, #27
 802bc56:	bf44      	itt	mi
 802bc58:	2320      	movmi	r3, #32
 802bc5a:	f88d 3053 	strbmi.w	r3, [sp, #83]	; 0x53
 802bc5e:	0713      	lsls	r3, r2, #28
 802bc60:	bf44      	itt	mi
 802bc62:	232b      	movmi	r3, #43	; 0x2b
 802bc64:	f88d 3053 	strbmi.w	r3, [sp, #83]	; 0x53
 802bc68:	f89a 3000 	ldrb.w	r3, [sl]
 802bc6c:	2b2a      	cmp	r3, #42	; 0x2a
 802bc6e:	d015      	beq.n	802bc9c <_vfiprintf_r+0x120>
 802bc70:	9a07      	ldr	r2, [sp, #28]
 802bc72:	4654      	mov	r4, sl
 802bc74:	2000      	movs	r0, #0
 802bc76:	f04f 0c0a 	mov.w	ip, #10
 802bc7a:	4621      	mov	r1, r4
 802bc7c:	f811 3b01 	ldrb.w	r3, [r1], #1
 802bc80:	3b30      	subs	r3, #48	; 0x30
 802bc82:	2b09      	cmp	r3, #9
 802bc84:	d94d      	bls.n	802bd22 <_vfiprintf_r+0x1a6>
 802bc86:	b1b0      	cbz	r0, 802bcb6 <_vfiprintf_r+0x13a>
 802bc88:	9207      	str	r2, [sp, #28]
 802bc8a:	e014      	b.n	802bcb6 <_vfiprintf_r+0x13a>
 802bc8c:	eba0 0308 	sub.w	r3, r0, r8
 802bc90:	fa09 f303 	lsl.w	r3, r9, r3
 802bc94:	4313      	orrs	r3, r2
 802bc96:	9304      	str	r3, [sp, #16]
 802bc98:	46a2      	mov	sl, r4
 802bc9a:	e7d2      	b.n	802bc42 <_vfiprintf_r+0xc6>
 802bc9c:	9b03      	ldr	r3, [sp, #12]
 802bc9e:	1d19      	adds	r1, r3, #4
 802bca0:	681b      	ldr	r3, [r3, #0]
 802bca2:	9103      	str	r1, [sp, #12]
 802bca4:	2b00      	cmp	r3, #0
 802bca6:	bfbb      	ittet	lt
 802bca8:	425b      	neglt	r3, r3
 802bcaa:	f042 0202 	orrlt.w	r2, r2, #2
 802bcae:	9307      	strge	r3, [sp, #28]
 802bcb0:	9307      	strlt	r3, [sp, #28]
 802bcb2:	bfb8      	it	lt
 802bcb4:	9204      	strlt	r2, [sp, #16]
 802bcb6:	7823      	ldrb	r3, [r4, #0]
 802bcb8:	2b2e      	cmp	r3, #46	; 0x2e
 802bcba:	d10c      	bne.n	802bcd6 <_vfiprintf_r+0x15a>
 802bcbc:	7863      	ldrb	r3, [r4, #1]
 802bcbe:	2b2a      	cmp	r3, #42	; 0x2a
 802bcc0:	d134      	bne.n	802bd2c <_vfiprintf_r+0x1b0>
 802bcc2:	9b03      	ldr	r3, [sp, #12]
 802bcc4:	1d1a      	adds	r2, r3, #4
 802bcc6:	681b      	ldr	r3, [r3, #0]
 802bcc8:	9203      	str	r2, [sp, #12]
 802bcca:	2b00      	cmp	r3, #0
 802bccc:	bfb8      	it	lt
 802bcce:	f04f 33ff 	movlt.w	r3, #4294967295
 802bcd2:	3402      	adds	r4, #2
 802bcd4:	9305      	str	r3, [sp, #20]
 802bcd6:	f8df a0d4 	ldr.w	sl, [pc, #212]	; 802bdac <_vfiprintf_r+0x230>
 802bcda:	7821      	ldrb	r1, [r4, #0]
 802bcdc:	2203      	movs	r2, #3
 802bcde:	4650      	mov	r0, sl
 802bce0:	f7d4 fae6 	bl	80002b0 <memchr>
 802bce4:	b138      	cbz	r0, 802bcf6 <_vfiprintf_r+0x17a>
 802bce6:	9b04      	ldr	r3, [sp, #16]
 802bce8:	eba0 000a 	sub.w	r0, r0, sl
 802bcec:	2240      	movs	r2, #64	; 0x40
 802bcee:	4082      	lsls	r2, r0
 802bcf0:	4313      	orrs	r3, r2
 802bcf2:	3401      	adds	r4, #1
 802bcf4:	9304      	str	r3, [sp, #16]
 802bcf6:	f814 1b01 	ldrb.w	r1, [r4], #1
 802bcfa:	4829      	ldr	r0, [pc, #164]	; (802bda0 <_vfiprintf_r+0x224>)
 802bcfc:	f88d 1028 	strb.w	r1, [sp, #40]	; 0x28
 802bd00:	2206      	movs	r2, #6
 802bd02:	f7d4 fad5 	bl	80002b0 <memchr>
 802bd06:	2800      	cmp	r0, #0
 802bd08:	d03f      	beq.n	802bd8a <_vfiprintf_r+0x20e>
 802bd0a:	4b26      	ldr	r3, [pc, #152]	; (802bda4 <_vfiprintf_r+0x228>)
 802bd0c:	bb1b      	cbnz	r3, 802bd56 <_vfiprintf_r+0x1da>
 802bd0e:	9b03      	ldr	r3, [sp, #12]
 802bd10:	3307      	adds	r3, #7
 802bd12:	f023 0307 	bic.w	r3, r3, #7
 802bd16:	3308      	adds	r3, #8
 802bd18:	9303      	str	r3, [sp, #12]
 802bd1a:	9b09      	ldr	r3, [sp, #36]	; 0x24
 802bd1c:	443b      	add	r3, r7
 802bd1e:	9309      	str	r3, [sp, #36]	; 0x24
 802bd20:	e768      	b.n	802bbf4 <_vfiprintf_r+0x78>
 802bd22:	fb0c 3202 	mla	r2, ip, r2, r3
 802bd26:	460c      	mov	r4, r1
 802bd28:	2001      	movs	r0, #1
 802bd2a:	e7a6      	b.n	802bc7a <_vfiprintf_r+0xfe>
 802bd2c:	2300      	movs	r3, #0
 802bd2e:	3401      	adds	r4, #1
 802bd30:	9305      	str	r3, [sp, #20]
 802bd32:	4619      	mov	r1, r3
 802bd34:	f04f 0c0a 	mov.w	ip, #10
 802bd38:	4620      	mov	r0, r4
 802bd3a:	f810 2b01 	ldrb.w	r2, [r0], #1
 802bd3e:	3a30      	subs	r2, #48	; 0x30
 802bd40:	2a09      	cmp	r2, #9
 802bd42:	d903      	bls.n	802bd4c <_vfiprintf_r+0x1d0>
 802bd44:	2b00      	cmp	r3, #0
 802bd46:	d0c6      	beq.n	802bcd6 <_vfiprintf_r+0x15a>
 802bd48:	9105      	str	r1, [sp, #20]
 802bd4a:	e7c4      	b.n	802bcd6 <_vfiprintf_r+0x15a>
 802bd4c:	fb0c 2101 	mla	r1, ip, r1, r2
 802bd50:	4604      	mov	r4, r0
 802bd52:	2301      	movs	r3, #1
 802bd54:	e7f0      	b.n	802bd38 <_vfiprintf_r+0x1bc>
 802bd56:	ab03      	add	r3, sp, #12
 802bd58:	9300      	str	r3, [sp, #0]
 802bd5a:	462a      	mov	r2, r5
 802bd5c:	4b12      	ldr	r3, [pc, #72]	; (802bda8 <_vfiprintf_r+0x22c>)
 802bd5e:	a904      	add	r1, sp, #16
 802bd60:	4630      	mov	r0, r6
 802bd62:	f3af 8000 	nop.w
 802bd66:	4607      	mov	r7, r0
 802bd68:	1c78      	adds	r0, r7, #1
 802bd6a:	d1d6      	bne.n	802bd1a <_vfiprintf_r+0x19e>
 802bd6c:	6e6b      	ldr	r3, [r5, #100]	; 0x64
 802bd6e:	07d9      	lsls	r1, r3, #31
 802bd70:	d405      	bmi.n	802bd7e <_vfiprintf_r+0x202>
 802bd72:	89ab      	ldrh	r3, [r5, #12]
 802bd74:	059a      	lsls	r2, r3, #22
 802bd76:	d402      	bmi.n	802bd7e <_vfiprintf_r+0x202>
 802bd78:	6da8      	ldr	r0, [r5, #88]	; 0x58
 802bd7a:	f7ff fe1b 	bl	802b9b4 <__retarget_lock_release_recursive>
 802bd7e:	89ab      	ldrh	r3, [r5, #12]
 802bd80:	065b      	lsls	r3, r3, #25
 802bd82:	f53f af1d 	bmi.w	802bbc0 <_vfiprintf_r+0x44>
 802bd86:	9809      	ldr	r0, [sp, #36]	; 0x24
 802bd88:	e71c      	b.n	802bbc4 <_vfiprintf_r+0x48>
 802bd8a:	ab03      	add	r3, sp, #12
 802bd8c:	9300      	str	r3, [sp, #0]
 802bd8e:	462a      	mov	r2, r5
 802bd90:	4b05      	ldr	r3, [pc, #20]	; (802bda8 <_vfiprintf_r+0x22c>)
 802bd92:	a904      	add	r1, sp, #16
 802bd94:	4630      	mov	r0, r6
 802bd96:	f000 f879 	bl	802be8c <_printf_i>
 802bd9a:	e7e4      	b.n	802bd66 <_vfiprintf_r+0x1ea>
 802bd9c:	080435e8 	.word	0x080435e8
 802bda0:	080435f2 	.word	0x080435f2
 802bda4:	00000000 	.word	0x00000000
 802bda8:	0802bb57 	.word	0x0802bb57
 802bdac:	080435ee 	.word	0x080435ee

0802bdb0 <_printf_common>:
 802bdb0:	e92d 47f0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, lr}
 802bdb4:	4616      	mov	r6, r2
 802bdb6:	4699      	mov	r9, r3
 802bdb8:	688a      	ldr	r2, [r1, #8]
 802bdba:	690b      	ldr	r3, [r1, #16]
 802bdbc:	f8dd 8020 	ldr.w	r8, [sp, #32]
 802bdc0:	4293      	cmp	r3, r2
 802bdc2:	bfb8      	it	lt
 802bdc4:	4613      	movlt	r3, r2
 802bdc6:	6033      	str	r3, [r6, #0]
 802bdc8:	f891 2043 	ldrb.w	r2, [r1, #67]	; 0x43
 802bdcc:	4607      	mov	r7, r0
 802bdce:	460c      	mov	r4, r1
 802bdd0:	b10a      	cbz	r2, 802bdd6 <_printf_common+0x26>
 802bdd2:	3301      	adds	r3, #1
 802bdd4:	6033      	str	r3, [r6, #0]
 802bdd6:	6823      	ldr	r3, [r4, #0]
 802bdd8:	0699      	lsls	r1, r3, #26
 802bdda:	bf42      	ittt	mi
 802bddc:	6833      	ldrmi	r3, [r6, #0]
 802bdde:	3302      	addmi	r3, #2
 802bde0:	6033      	strmi	r3, [r6, #0]
 802bde2:	6825      	ldr	r5, [r4, #0]
 802bde4:	f015 0506 	ands.w	r5, r5, #6
 802bde8:	d106      	bne.n	802bdf8 <_printf_common+0x48>
 802bdea:	f104 0a19 	add.w	sl, r4, #25
 802bdee:	68e3      	ldr	r3, [r4, #12]
 802bdf0:	6832      	ldr	r2, [r6, #0]
 802bdf2:	1a9b      	subs	r3, r3, r2
 802bdf4:	42ab      	cmp	r3, r5
 802bdf6:	dc26      	bgt.n	802be46 <_printf_common+0x96>
 802bdf8:	f894 2043 	ldrb.w	r2, [r4, #67]	; 0x43
 802bdfc:	1e13      	subs	r3, r2, #0
 802bdfe:	6822      	ldr	r2, [r4, #0]
 802be00:	bf18      	it	ne
 802be02:	2301      	movne	r3, #1
 802be04:	0692      	lsls	r2, r2, #26
 802be06:	d42b      	bmi.n	802be60 <_printf_common+0xb0>
 802be08:	f104 0243 	add.w	r2, r4, #67	; 0x43
 802be0c:	4649      	mov	r1, r9
 802be0e:	4638      	mov	r0, r7
 802be10:	47c0      	blx	r8
 802be12:	3001      	adds	r0, #1
 802be14:	d01e      	beq.n	802be54 <_printf_common+0xa4>
 802be16:	6823      	ldr	r3, [r4, #0]
 802be18:	6922      	ldr	r2, [r4, #16]
 802be1a:	f003 0306 	and.w	r3, r3, #6
 802be1e:	2b04      	cmp	r3, #4
 802be20:	bf02      	ittt	eq
 802be22:	68e5      	ldreq	r5, [r4, #12]
 802be24:	6833      	ldreq	r3, [r6, #0]
 802be26:	1aed      	subeq	r5, r5, r3
 802be28:	68a3      	ldr	r3, [r4, #8]
 802be2a:	bf0c      	ite	eq
 802be2c:	ea25 75e5 	biceq.w	r5, r5, r5, asr #31
 802be30:	2500      	movne	r5, #0
 802be32:	4293      	cmp	r3, r2
 802be34:	bfc4      	itt	gt
 802be36:	1a9b      	subgt	r3, r3, r2
 802be38:	18ed      	addgt	r5, r5, r3
 802be3a:	2600      	movs	r6, #0
 802be3c:	341a      	adds	r4, #26
 802be3e:	42b5      	cmp	r5, r6
 802be40:	d11a      	bne.n	802be78 <_printf_common+0xc8>
 802be42:	2000      	movs	r0, #0
 802be44:	e008      	b.n	802be58 <_printf_common+0xa8>
 802be46:	2301      	movs	r3, #1
 802be48:	4652      	mov	r2, sl
 802be4a:	4649      	mov	r1, r9
 802be4c:	4638      	mov	r0, r7
 802be4e:	47c0      	blx	r8
 802be50:	3001      	adds	r0, #1
 802be52:	d103      	bne.n	802be5c <_printf_common+0xac>
 802be54:	f04f 30ff 	mov.w	r0, #4294967295
 802be58:	e8bd 87f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, pc}
 802be5c:	3501      	adds	r5, #1
 802be5e:	e7c6      	b.n	802bdee <_printf_common+0x3e>
 802be60:	18e1      	adds	r1, r4, r3
 802be62:	1c5a      	adds	r2, r3, #1
 802be64:	2030      	movs	r0, #48	; 0x30
 802be66:	f881 0043 	strb.w	r0, [r1, #67]	; 0x43
 802be6a:	4422      	add	r2, r4
 802be6c:	f894 1045 	ldrb.w	r1, [r4, #69]	; 0x45
 802be70:	f882 1043 	strb.w	r1, [r2, #67]	; 0x43
 802be74:	3302      	adds	r3, #2
 802be76:	e7c7      	b.n	802be08 <_printf_common+0x58>
 802be78:	2301      	movs	r3, #1
 802be7a:	4622      	mov	r2, r4
 802be7c:	4649      	mov	r1, r9
 802be7e:	4638      	mov	r0, r7
 802be80:	47c0      	blx	r8
 802be82:	3001      	adds	r0, #1
 802be84:	d0e6      	beq.n	802be54 <_printf_common+0xa4>
 802be86:	3601      	adds	r6, #1
 802be88:	e7d9      	b.n	802be3e <_printf_common+0x8e>
	...

0802be8c <_printf_i>:
 802be8c:	e92d 47ff 	stmdb	sp!, {r0, r1, r2, r3, r4, r5, r6, r7, r8, r9, sl, lr}
 802be90:	7e0f      	ldrb	r7, [r1, #24]
 802be92:	9d0c      	ldr	r5, [sp, #48]	; 0x30
 802be94:	2f78      	cmp	r7, #120	; 0x78
 802be96:	4691      	mov	r9, r2
 802be98:	4680      	mov	r8, r0
 802be9a:	460c      	mov	r4, r1
 802be9c:	469a      	mov	sl, r3
 802be9e:	f101 0243 	add.w	r2, r1, #67	; 0x43
 802bea2:	d807      	bhi.n	802beb4 <_printf_i+0x28>
 802bea4:	2f62      	cmp	r7, #98	; 0x62
 802bea6:	d80a      	bhi.n	802bebe <_printf_i+0x32>
 802bea8:	2f00      	cmp	r7, #0
 802beaa:	f000 80d4 	beq.w	802c056 <_printf_i+0x1ca>
 802beae:	2f58      	cmp	r7, #88	; 0x58
 802beb0:	f000 80c0 	beq.w	802c034 <_printf_i+0x1a8>
 802beb4:	f104 0542 	add.w	r5, r4, #66	; 0x42
 802beb8:	f884 7042 	strb.w	r7, [r4, #66]	; 0x42
 802bebc:	e03a      	b.n	802bf34 <_printf_i+0xa8>
 802bebe:	f1a7 0363 	sub.w	r3, r7, #99	; 0x63
 802bec2:	2b15      	cmp	r3, #21
 802bec4:	d8f6      	bhi.n	802beb4 <_printf_i+0x28>
 802bec6:	a101      	add	r1, pc, #4	; (adr r1, 802becc <_printf_i+0x40>)
 802bec8:	f851 f023 	ldr.w	pc, [r1, r3, lsl #2]
 802becc:	0802bf25 	.word	0x0802bf25
 802bed0:	0802bf39 	.word	0x0802bf39
 802bed4:	0802beb5 	.word	0x0802beb5
 802bed8:	0802beb5 	.word	0x0802beb5
 802bedc:	0802beb5 	.word	0x0802beb5
 802bee0:	0802beb5 	.word	0x0802beb5
 802bee4:	0802bf39 	.word	0x0802bf39
 802bee8:	0802beb5 	.word	0x0802beb5
 802beec:	0802beb5 	.word	0x0802beb5
 802bef0:	0802beb5 	.word	0x0802beb5
 802bef4:	0802beb5 	.word	0x0802beb5
 802bef8:	0802c03d 	.word	0x0802c03d
 802befc:	0802bf65 	.word	0x0802bf65
 802bf00:	0802bff7 	.word	0x0802bff7
 802bf04:	0802beb5 	.word	0x0802beb5
 802bf08:	0802beb5 	.word	0x0802beb5
 802bf0c:	0802c05f 	.word	0x0802c05f
 802bf10:	0802beb5 	.word	0x0802beb5
 802bf14:	0802bf65 	.word	0x0802bf65
 802bf18:	0802beb5 	.word	0x0802beb5
 802bf1c:	0802beb5 	.word	0x0802beb5
 802bf20:	0802bfff 	.word	0x0802bfff
 802bf24:	682b      	ldr	r3, [r5, #0]
 802bf26:	1d1a      	adds	r2, r3, #4
 802bf28:	681b      	ldr	r3, [r3, #0]
 802bf2a:	602a      	str	r2, [r5, #0]
 802bf2c:	f104 0542 	add.w	r5, r4, #66	; 0x42
 802bf30:	f884 3042 	strb.w	r3, [r4, #66]	; 0x42
 802bf34:	2301      	movs	r3, #1
 802bf36:	e09f      	b.n	802c078 <_printf_i+0x1ec>
 802bf38:	6820      	ldr	r0, [r4, #0]
 802bf3a:	682b      	ldr	r3, [r5, #0]
 802bf3c:	0607      	lsls	r7, r0, #24
 802bf3e:	f103 0104 	add.w	r1, r3, #4
 802bf42:	6029      	str	r1, [r5, #0]
 802bf44:	d501      	bpl.n	802bf4a <_printf_i+0xbe>
 802bf46:	681e      	ldr	r6, [r3, #0]
 802bf48:	e003      	b.n	802bf52 <_printf_i+0xc6>
 802bf4a:	0646      	lsls	r6, r0, #25
 802bf4c:	d5fb      	bpl.n	802bf46 <_printf_i+0xba>
 802bf4e:	f9b3 6000 	ldrsh.w	r6, [r3]
 802bf52:	2e00      	cmp	r6, #0
 802bf54:	da03      	bge.n	802bf5e <_printf_i+0xd2>
 802bf56:	232d      	movs	r3, #45	; 0x2d
 802bf58:	4276      	negs	r6, r6
 802bf5a:	f884 3043 	strb.w	r3, [r4, #67]	; 0x43
 802bf5e:	485a      	ldr	r0, [pc, #360]	; (802c0c8 <_printf_i+0x23c>)
 802bf60:	230a      	movs	r3, #10
 802bf62:	e012      	b.n	802bf8a <_printf_i+0xfe>
 802bf64:	682b      	ldr	r3, [r5, #0]
 802bf66:	6820      	ldr	r0, [r4, #0]
 802bf68:	1d19      	adds	r1, r3, #4
 802bf6a:	6029      	str	r1, [r5, #0]
 802bf6c:	0605      	lsls	r5, r0, #24
 802bf6e:	d501      	bpl.n	802bf74 <_printf_i+0xe8>
 802bf70:	681e      	ldr	r6, [r3, #0]
 802bf72:	e002      	b.n	802bf7a <_printf_i+0xee>
 802bf74:	0641      	lsls	r1, r0, #25
 802bf76:	d5fb      	bpl.n	802bf70 <_printf_i+0xe4>
 802bf78:	881e      	ldrh	r6, [r3, #0]
 802bf7a:	4853      	ldr	r0, [pc, #332]	; (802c0c8 <_printf_i+0x23c>)
 802bf7c:	2f6f      	cmp	r7, #111	; 0x6f
 802bf7e:	bf0c      	ite	eq
 802bf80:	2308      	moveq	r3, #8
 802bf82:	230a      	movne	r3, #10
 802bf84:	2100      	movs	r1, #0
 802bf86:	f884 1043 	strb.w	r1, [r4, #67]	; 0x43
 802bf8a:	6865      	ldr	r5, [r4, #4]
 802bf8c:	60a5      	str	r5, [r4, #8]
 802bf8e:	2d00      	cmp	r5, #0
 802bf90:	bfa2      	ittt	ge
 802bf92:	6821      	ldrge	r1, [r4, #0]
 802bf94:	f021 0104 	bicge.w	r1, r1, #4
 802bf98:	6021      	strge	r1, [r4, #0]
 802bf9a:	b90e      	cbnz	r6, 802bfa0 <_printf_i+0x114>
 802bf9c:	2d00      	cmp	r5, #0
 802bf9e:	d04b      	beq.n	802c038 <_printf_i+0x1ac>
 802bfa0:	4615      	mov	r5, r2
 802bfa2:	fbb6 f1f3 	udiv	r1, r6, r3
 802bfa6:	fb03 6711 	mls	r7, r3, r1, r6
 802bfaa:	5dc7      	ldrb	r7, [r0, r7]
 802bfac:	f805 7d01 	strb.w	r7, [r5, #-1]!
 802bfb0:	4637      	mov	r7, r6
 802bfb2:	42bb      	cmp	r3, r7
 802bfb4:	460e      	mov	r6, r1
 802bfb6:	d9f4      	bls.n	802bfa2 <_printf_i+0x116>
 802bfb8:	2b08      	cmp	r3, #8
 802bfba:	d10b      	bne.n	802bfd4 <_printf_i+0x148>
 802bfbc:	6823      	ldr	r3, [r4, #0]
 802bfbe:	07de      	lsls	r6, r3, #31
 802bfc0:	d508      	bpl.n	802bfd4 <_printf_i+0x148>
 802bfc2:	6923      	ldr	r3, [r4, #16]
 802bfc4:	6861      	ldr	r1, [r4, #4]
 802bfc6:	4299      	cmp	r1, r3
 802bfc8:	bfde      	ittt	le
 802bfca:	2330      	movle	r3, #48	; 0x30
 802bfcc:	f805 3c01 	strble.w	r3, [r5, #-1]
 802bfd0:	f105 35ff 	addle.w	r5, r5, #4294967295
 802bfd4:	1b52      	subs	r2, r2, r5
 802bfd6:	6122      	str	r2, [r4, #16]
 802bfd8:	f8cd a000 	str.w	sl, [sp]
 802bfdc:	464b      	mov	r3, r9
 802bfde:	aa03      	add	r2, sp, #12
 802bfe0:	4621      	mov	r1, r4
 802bfe2:	4640      	mov	r0, r8
 802bfe4:	f7ff fee4 	bl	802bdb0 <_printf_common>
 802bfe8:	3001      	adds	r0, #1
 802bfea:	d14a      	bne.n	802c082 <_printf_i+0x1f6>
 802bfec:	f04f 30ff 	mov.w	r0, #4294967295
 802bff0:	b004      	add	sp, #16
 802bff2:	e8bd 87f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, pc}
 802bff6:	6823      	ldr	r3, [r4, #0]
 802bff8:	f043 0320 	orr.w	r3, r3, #32
 802bffc:	6023      	str	r3, [r4, #0]
 802bffe:	4833      	ldr	r0, [pc, #204]	; (802c0cc <_printf_i+0x240>)
 802c000:	2778      	movs	r7, #120	; 0x78
 802c002:	f884 7045 	strb.w	r7, [r4, #69]	; 0x45
 802c006:	6823      	ldr	r3, [r4, #0]
 802c008:	6829      	ldr	r1, [r5, #0]
 802c00a:	061f      	lsls	r7, r3, #24
 802c00c:	f851 6b04 	ldr.w	r6, [r1], #4
 802c010:	d402      	bmi.n	802c018 <_printf_i+0x18c>
 802c012:	065f      	lsls	r7, r3, #25
 802c014:	bf48      	it	mi
 802c016:	b2b6      	uxthmi	r6, r6
 802c018:	07df      	lsls	r7, r3, #31
 802c01a:	bf48      	it	mi
 802c01c:	f043 0320 	orrmi.w	r3, r3, #32
 802c020:	6029      	str	r1, [r5, #0]
 802c022:	bf48      	it	mi
 802c024:	6023      	strmi	r3, [r4, #0]
 802c026:	b91e      	cbnz	r6, 802c030 <_printf_i+0x1a4>
 802c028:	6823      	ldr	r3, [r4, #0]
 802c02a:	f023 0320 	bic.w	r3, r3, #32
 802c02e:	6023      	str	r3, [r4, #0]
 802c030:	2310      	movs	r3, #16
 802c032:	e7a7      	b.n	802bf84 <_printf_i+0xf8>
 802c034:	4824      	ldr	r0, [pc, #144]	; (802c0c8 <_printf_i+0x23c>)
 802c036:	e7e4      	b.n	802c002 <_printf_i+0x176>
 802c038:	4615      	mov	r5, r2
 802c03a:	e7bd      	b.n	802bfb8 <_printf_i+0x12c>
 802c03c:	682b      	ldr	r3, [r5, #0]
 802c03e:	6826      	ldr	r6, [r4, #0]
 802c040:	6961      	ldr	r1, [r4, #20]
 802c042:	1d18      	adds	r0, r3, #4
 802c044:	6028      	str	r0, [r5, #0]
 802c046:	0635      	lsls	r5, r6, #24
 802c048:	681b      	ldr	r3, [r3, #0]
 802c04a:	d501      	bpl.n	802c050 <_printf_i+0x1c4>
 802c04c:	6019      	str	r1, [r3, #0]
 802c04e:	e002      	b.n	802c056 <_printf_i+0x1ca>
 802c050:	0670      	lsls	r0, r6, #25
 802c052:	d5fb      	bpl.n	802c04c <_printf_i+0x1c0>
 802c054:	8019      	strh	r1, [r3, #0]
 802c056:	2300      	movs	r3, #0
 802c058:	6123      	str	r3, [r4, #16]
 802c05a:	4615      	mov	r5, r2
 802c05c:	e7bc      	b.n	802bfd8 <_printf_i+0x14c>
 802c05e:	682b      	ldr	r3, [r5, #0]
 802c060:	1d1a      	adds	r2, r3, #4
 802c062:	602a      	str	r2, [r5, #0]
 802c064:	681d      	ldr	r5, [r3, #0]
 802c066:	6862      	ldr	r2, [r4, #4]
 802c068:	2100      	movs	r1, #0
 802c06a:	4628      	mov	r0, r5
 802c06c:	f7d4 f920 	bl	80002b0 <memchr>
 802c070:	b108      	cbz	r0, 802c076 <_printf_i+0x1ea>
 802c072:	1b40      	subs	r0, r0, r5
 802c074:	6060      	str	r0, [r4, #4]
 802c076:	6863      	ldr	r3, [r4, #4]
 802c078:	6123      	str	r3, [r4, #16]
 802c07a:	2300      	movs	r3, #0
 802c07c:	f884 3043 	strb.w	r3, [r4, #67]	; 0x43
 802c080:	e7aa      	b.n	802bfd8 <_printf_i+0x14c>
 802c082:	6923      	ldr	r3, [r4, #16]
 802c084:	462a      	mov	r2, r5
 802c086:	4649      	mov	r1, r9
 802c088:	4640      	mov	r0, r8
 802c08a:	47d0      	blx	sl
 802c08c:	3001      	adds	r0, #1
 802c08e:	d0ad      	beq.n	802bfec <_printf_i+0x160>
 802c090:	6823      	ldr	r3, [r4, #0]
 802c092:	079b      	lsls	r3, r3, #30
 802c094:	d413      	bmi.n	802c0be <_printf_i+0x232>
 802c096:	68e0      	ldr	r0, [r4, #12]
 802c098:	9b03      	ldr	r3, [sp, #12]
 802c09a:	4298      	cmp	r0, r3
 802c09c:	bfb8      	it	lt
 802c09e:	4618      	movlt	r0, r3
 802c0a0:	e7a6      	b.n	802bff0 <_printf_i+0x164>
 802c0a2:	2301      	movs	r3, #1
 802c0a4:	4632      	mov	r2, r6
 802c0a6:	4649      	mov	r1, r9
 802c0a8:	4640      	mov	r0, r8
 802c0aa:	47d0      	blx	sl
 802c0ac:	3001      	adds	r0, #1
 802c0ae:	d09d      	beq.n	802bfec <_printf_i+0x160>
 802c0b0:	3501      	adds	r5, #1
 802c0b2:	68e3      	ldr	r3, [r4, #12]
 802c0b4:	9903      	ldr	r1, [sp, #12]
 802c0b6:	1a5b      	subs	r3, r3, r1
 802c0b8:	42ab      	cmp	r3, r5
 802c0ba:	dcf2      	bgt.n	802c0a2 <_printf_i+0x216>
 802c0bc:	e7eb      	b.n	802c096 <_printf_i+0x20a>
 802c0be:	2500      	movs	r5, #0
 802c0c0:	f104 0619 	add.w	r6, r4, #25
 802c0c4:	e7f5      	b.n	802c0b2 <_printf_i+0x226>
 802c0c6:	bf00      	nop
 802c0c8:	080435f9 	.word	0x080435f9
 802c0cc:	0804360a 	.word	0x0804360a

0802c0d0 <__sflush_r>:
 802c0d0:	898a      	ldrh	r2, [r1, #12]
 802c0d2:	e92d 41f0 	stmdb	sp!, {r4, r5, r6, r7, r8, lr}
 802c0d6:	4605      	mov	r5, r0
 802c0d8:	0710      	lsls	r0, r2, #28
 802c0da:	460c      	mov	r4, r1
 802c0dc:	d458      	bmi.n	802c190 <__sflush_r+0xc0>
 802c0de:	684b      	ldr	r3, [r1, #4]
 802c0e0:	2b00      	cmp	r3, #0
 802c0e2:	dc05      	bgt.n	802c0f0 <__sflush_r+0x20>
 802c0e4:	6c0b      	ldr	r3, [r1, #64]	; 0x40
 802c0e6:	2b00      	cmp	r3, #0
 802c0e8:	dc02      	bgt.n	802c0f0 <__sflush_r+0x20>
 802c0ea:	2000      	movs	r0, #0
 802c0ec:	e8bd 81f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, pc}
 802c0f0:	6ae6      	ldr	r6, [r4, #44]	; 0x2c
 802c0f2:	2e00      	cmp	r6, #0
 802c0f4:	d0f9      	beq.n	802c0ea <__sflush_r+0x1a>
 802c0f6:	2300      	movs	r3, #0
 802c0f8:	f412 5280 	ands.w	r2, r2, #4096	; 0x1000
 802c0fc:	682f      	ldr	r7, [r5, #0]
 802c0fe:	6a21      	ldr	r1, [r4, #32]
 802c100:	602b      	str	r3, [r5, #0]
 802c102:	d032      	beq.n	802c16a <__sflush_r+0x9a>
 802c104:	6d60      	ldr	r0, [r4, #84]	; 0x54
 802c106:	89a3      	ldrh	r3, [r4, #12]
 802c108:	075a      	lsls	r2, r3, #29
 802c10a:	d505      	bpl.n	802c118 <__sflush_r+0x48>
 802c10c:	6863      	ldr	r3, [r4, #4]
 802c10e:	1ac0      	subs	r0, r0, r3
 802c110:	6b63      	ldr	r3, [r4, #52]	; 0x34
 802c112:	b10b      	cbz	r3, 802c118 <__sflush_r+0x48>
 802c114:	6c23      	ldr	r3, [r4, #64]	; 0x40
 802c116:	1ac0      	subs	r0, r0, r3
 802c118:	2300      	movs	r3, #0
 802c11a:	4602      	mov	r2, r0
 802c11c:	6ae6      	ldr	r6, [r4, #44]	; 0x2c
 802c11e:	6a21      	ldr	r1, [r4, #32]
 802c120:	4628      	mov	r0, r5
 802c122:	47b0      	blx	r6
 802c124:	1c43      	adds	r3, r0, #1
 802c126:	89a3      	ldrh	r3, [r4, #12]
 802c128:	d106      	bne.n	802c138 <__sflush_r+0x68>
 802c12a:	6829      	ldr	r1, [r5, #0]
 802c12c:	291d      	cmp	r1, #29
 802c12e:	d82b      	bhi.n	802c188 <__sflush_r+0xb8>
 802c130:	4a29      	ldr	r2, [pc, #164]	; (802c1d8 <__sflush_r+0x108>)
 802c132:	410a      	asrs	r2, r1
 802c134:	07d6      	lsls	r6, r2, #31
 802c136:	d427      	bmi.n	802c188 <__sflush_r+0xb8>
 802c138:	2200      	movs	r2, #0
 802c13a:	6062      	str	r2, [r4, #4]
 802c13c:	04d9      	lsls	r1, r3, #19
 802c13e:	6922      	ldr	r2, [r4, #16]
 802c140:	6022      	str	r2, [r4, #0]
 802c142:	d504      	bpl.n	802c14e <__sflush_r+0x7e>
 802c144:	1c42      	adds	r2, r0, #1
 802c146:	d101      	bne.n	802c14c <__sflush_r+0x7c>
 802c148:	682b      	ldr	r3, [r5, #0]
 802c14a:	b903      	cbnz	r3, 802c14e <__sflush_r+0x7e>
 802c14c:	6560      	str	r0, [r4, #84]	; 0x54
 802c14e:	6b61      	ldr	r1, [r4, #52]	; 0x34
 802c150:	602f      	str	r7, [r5, #0]
 802c152:	2900      	cmp	r1, #0
 802c154:	d0c9      	beq.n	802c0ea <__sflush_r+0x1a>
 802c156:	f104 0344 	add.w	r3, r4, #68	; 0x44
 802c15a:	4299      	cmp	r1, r3
 802c15c:	d002      	beq.n	802c164 <__sflush_r+0x94>
 802c15e:	4628      	mov	r0, r5
 802c160:	f7ff fc96 	bl	802ba90 <_free_r>
 802c164:	2000      	movs	r0, #0
 802c166:	6360      	str	r0, [r4, #52]	; 0x34
 802c168:	e7c0      	b.n	802c0ec <__sflush_r+0x1c>
 802c16a:	2301      	movs	r3, #1
 802c16c:	4628      	mov	r0, r5
 802c16e:	47b0      	blx	r6
 802c170:	1c41      	adds	r1, r0, #1
 802c172:	d1c8      	bne.n	802c106 <__sflush_r+0x36>
 802c174:	682b      	ldr	r3, [r5, #0]
 802c176:	2b00      	cmp	r3, #0
 802c178:	d0c5      	beq.n	802c106 <__sflush_r+0x36>
 802c17a:	2b1d      	cmp	r3, #29
 802c17c:	d001      	beq.n	802c182 <__sflush_r+0xb2>
 802c17e:	2b16      	cmp	r3, #22
 802c180:	d101      	bne.n	802c186 <__sflush_r+0xb6>
 802c182:	602f      	str	r7, [r5, #0]
 802c184:	e7b1      	b.n	802c0ea <__sflush_r+0x1a>
 802c186:	89a3      	ldrh	r3, [r4, #12]
 802c188:	f043 0340 	orr.w	r3, r3, #64	; 0x40
 802c18c:	81a3      	strh	r3, [r4, #12]
 802c18e:	e7ad      	b.n	802c0ec <__sflush_r+0x1c>
 802c190:	690f      	ldr	r7, [r1, #16]
 802c192:	2f00      	cmp	r7, #0
 802c194:	d0a9      	beq.n	802c0ea <__sflush_r+0x1a>
 802c196:	0793      	lsls	r3, r2, #30
 802c198:	680e      	ldr	r6, [r1, #0]
 802c19a:	bf08      	it	eq
 802c19c:	694b      	ldreq	r3, [r1, #20]
 802c19e:	600f      	str	r7, [r1, #0]
 802c1a0:	bf18      	it	ne
 802c1a2:	2300      	movne	r3, #0
 802c1a4:	eba6 0807 	sub.w	r8, r6, r7
 802c1a8:	608b      	str	r3, [r1, #8]
 802c1aa:	f1b8 0f00 	cmp.w	r8, #0
 802c1ae:	dd9c      	ble.n	802c0ea <__sflush_r+0x1a>
 802c1b0:	6a21      	ldr	r1, [r4, #32]
 802c1b2:	6aa6      	ldr	r6, [r4, #40]	; 0x28
 802c1b4:	4643      	mov	r3, r8
 802c1b6:	463a      	mov	r2, r7
 802c1b8:	4628      	mov	r0, r5
 802c1ba:	47b0      	blx	r6
 802c1bc:	2800      	cmp	r0, #0
 802c1be:	dc06      	bgt.n	802c1ce <__sflush_r+0xfe>
 802c1c0:	89a3      	ldrh	r3, [r4, #12]
 802c1c2:	f043 0340 	orr.w	r3, r3, #64	; 0x40
 802c1c6:	81a3      	strh	r3, [r4, #12]
 802c1c8:	f04f 30ff 	mov.w	r0, #4294967295
 802c1cc:	e78e      	b.n	802c0ec <__sflush_r+0x1c>
 802c1ce:	4407      	add	r7, r0
 802c1d0:	eba8 0800 	sub.w	r8, r8, r0
 802c1d4:	e7e9      	b.n	802c1aa <__sflush_r+0xda>
 802c1d6:	bf00      	nop
 802c1d8:	dfbffffe 	.word	0xdfbffffe

0802c1dc <_fflush_r>:
 802c1dc:	b538      	push	{r3, r4, r5, lr}
 802c1de:	690b      	ldr	r3, [r1, #16]
 802c1e0:	4605      	mov	r5, r0
 802c1e2:	460c      	mov	r4, r1
 802c1e4:	b913      	cbnz	r3, 802c1ec <_fflush_r+0x10>
 802c1e6:	2500      	movs	r5, #0
 802c1e8:	4628      	mov	r0, r5
 802c1ea:	bd38      	pop	{r3, r4, r5, pc}
 802c1ec:	b118      	cbz	r0, 802c1f6 <_fflush_r+0x1a>
 802c1ee:	6a03      	ldr	r3, [r0, #32]
 802c1f0:	b90b      	cbnz	r3, 802c1f6 <_fflush_r+0x1a>
 802c1f2:	f7ff fa2f 	bl	802b654 <__sinit>
 802c1f6:	f9b4 300c 	ldrsh.w	r3, [r4, #12]
 802c1fa:	2b00      	cmp	r3, #0
 802c1fc:	d0f3      	beq.n	802c1e6 <_fflush_r+0xa>
 802c1fe:	6e62      	ldr	r2, [r4, #100]	; 0x64
 802c200:	07d0      	lsls	r0, r2, #31
 802c202:	d404      	bmi.n	802c20e <_fflush_r+0x32>
 802c204:	0599      	lsls	r1, r3, #22
 802c206:	d402      	bmi.n	802c20e <_fflush_r+0x32>
 802c208:	6da0      	ldr	r0, [r4, #88]	; 0x58
 802c20a:	f7ff fbd2 	bl	802b9b2 <__retarget_lock_acquire_recursive>
 802c20e:	4628      	mov	r0, r5
 802c210:	4621      	mov	r1, r4
 802c212:	f7ff ff5d 	bl	802c0d0 <__sflush_r>
 802c216:	6e63      	ldr	r3, [r4, #100]	; 0x64
 802c218:	07da      	lsls	r2, r3, #31
 802c21a:	4605      	mov	r5, r0
 802c21c:	d4e4      	bmi.n	802c1e8 <_fflush_r+0xc>
 802c21e:	89a3      	ldrh	r3, [r4, #12]
 802c220:	059b      	lsls	r3, r3, #22
 802c222:	d4e1      	bmi.n	802c1e8 <_fflush_r+0xc>
 802c224:	6da0      	ldr	r0, [r4, #88]	; 0x58
 802c226:	f7ff fbc5 	bl	802b9b4 <__retarget_lock_release_recursive>
 802c22a:	e7dd      	b.n	802c1e8 <_fflush_r+0xc>

0802c22c <__swbuf_r>:
 802c22c:	b5f8      	push	{r3, r4, r5, r6, r7, lr}
 802c22e:	460e      	mov	r6, r1
 802c230:	4614      	mov	r4, r2
 802c232:	4605      	mov	r5, r0
 802c234:	b118      	cbz	r0, 802c23e <__swbuf_r+0x12>
 802c236:	6a03      	ldr	r3, [r0, #32]
 802c238:	b90b      	cbnz	r3, 802c23e <__swbuf_r+0x12>
 802c23a:	f7ff fa0b 	bl	802b654 <__sinit>
 802c23e:	69a3      	ldr	r3, [r4, #24]
 802c240:	60a3      	str	r3, [r4, #8]
 802c242:	89a3      	ldrh	r3, [r4, #12]
 802c244:	071a      	lsls	r2, r3, #28
 802c246:	d525      	bpl.n	802c294 <__swbuf_r+0x68>
 802c248:	6923      	ldr	r3, [r4, #16]
 802c24a:	b31b      	cbz	r3, 802c294 <__swbuf_r+0x68>
 802c24c:	6823      	ldr	r3, [r4, #0]
 802c24e:	6922      	ldr	r2, [r4, #16]
 802c250:	1a98      	subs	r0, r3, r2
 802c252:	6963      	ldr	r3, [r4, #20]
 802c254:	b2f6      	uxtb	r6, r6
 802c256:	4283      	cmp	r3, r0
 802c258:	4637      	mov	r7, r6
 802c25a:	dc04      	bgt.n	802c266 <__swbuf_r+0x3a>
 802c25c:	4621      	mov	r1, r4
 802c25e:	4628      	mov	r0, r5
 802c260:	f7ff ffbc 	bl	802c1dc <_fflush_r>
 802c264:	b9e0      	cbnz	r0, 802c2a0 <__swbuf_r+0x74>
 802c266:	68a3      	ldr	r3, [r4, #8]
 802c268:	3b01      	subs	r3, #1
 802c26a:	60a3      	str	r3, [r4, #8]
 802c26c:	6823      	ldr	r3, [r4, #0]
 802c26e:	1c5a      	adds	r2, r3, #1
 802c270:	6022      	str	r2, [r4, #0]
 802c272:	701e      	strb	r6, [r3, #0]
 802c274:	6962      	ldr	r2, [r4, #20]
 802c276:	1c43      	adds	r3, r0, #1
 802c278:	429a      	cmp	r2, r3
 802c27a:	d004      	beq.n	802c286 <__swbuf_r+0x5a>
 802c27c:	89a3      	ldrh	r3, [r4, #12]
 802c27e:	07db      	lsls	r3, r3, #31
 802c280:	d506      	bpl.n	802c290 <__swbuf_r+0x64>
 802c282:	2e0a      	cmp	r6, #10
 802c284:	d104      	bne.n	802c290 <__swbuf_r+0x64>
 802c286:	4621      	mov	r1, r4
 802c288:	4628      	mov	r0, r5
 802c28a:	f7ff ffa7 	bl	802c1dc <_fflush_r>
 802c28e:	b938      	cbnz	r0, 802c2a0 <__swbuf_r+0x74>
 802c290:	4638      	mov	r0, r7
 802c292:	bdf8      	pop	{r3, r4, r5, r6, r7, pc}
 802c294:	4621      	mov	r1, r4
 802c296:	4628      	mov	r0, r5
 802c298:	f000 f806 	bl	802c2a8 <__swsetup_r>
 802c29c:	2800      	cmp	r0, #0
 802c29e:	d0d5      	beq.n	802c24c <__swbuf_r+0x20>
 802c2a0:	f04f 37ff 	mov.w	r7, #4294967295
 802c2a4:	e7f4      	b.n	802c290 <__swbuf_r+0x64>
	...

0802c2a8 <__swsetup_r>:
 802c2a8:	b538      	push	{r3, r4, r5, lr}
 802c2aa:	4b2a      	ldr	r3, [pc, #168]	; (802c354 <__swsetup_r+0xac>)
 802c2ac:	4605      	mov	r5, r0
 802c2ae:	6818      	ldr	r0, [r3, #0]
 802c2b0:	460c      	mov	r4, r1
 802c2b2:	b118      	cbz	r0, 802c2bc <__swsetup_r+0x14>
 802c2b4:	6a03      	ldr	r3, [r0, #32]
 802c2b6:	b90b      	cbnz	r3, 802c2bc <__swsetup_r+0x14>
 802c2b8:	f7ff f9cc 	bl	802b654 <__sinit>
 802c2bc:	89a3      	ldrh	r3, [r4, #12]
 802c2be:	f9b4 200c 	ldrsh.w	r2, [r4, #12]
 802c2c2:	0718      	lsls	r0, r3, #28
 802c2c4:	d422      	bmi.n	802c30c <__swsetup_r+0x64>
 802c2c6:	06d9      	lsls	r1, r3, #27
 802c2c8:	d407      	bmi.n	802c2da <__swsetup_r+0x32>
 802c2ca:	2309      	movs	r3, #9
 802c2cc:	602b      	str	r3, [r5, #0]
 802c2ce:	f042 0340 	orr.w	r3, r2, #64	; 0x40
 802c2d2:	81a3      	strh	r3, [r4, #12]
 802c2d4:	f04f 30ff 	mov.w	r0, #4294967295
 802c2d8:	e034      	b.n	802c344 <__swsetup_r+0x9c>
 802c2da:	0758      	lsls	r0, r3, #29
 802c2dc:	d512      	bpl.n	802c304 <__swsetup_r+0x5c>
 802c2de:	6b61      	ldr	r1, [r4, #52]	; 0x34
 802c2e0:	b141      	cbz	r1, 802c2f4 <__swsetup_r+0x4c>
 802c2e2:	f104 0344 	add.w	r3, r4, #68	; 0x44
 802c2e6:	4299      	cmp	r1, r3
 802c2e8:	d002      	beq.n	802c2f0 <__swsetup_r+0x48>
 802c2ea:	4628      	mov	r0, r5
 802c2ec:	f7ff fbd0 	bl	802ba90 <_free_r>
 802c2f0:	2300      	movs	r3, #0
 802c2f2:	6363      	str	r3, [r4, #52]	; 0x34
 802c2f4:	89a3      	ldrh	r3, [r4, #12]
 802c2f6:	f023 0324 	bic.w	r3, r3, #36	; 0x24
 802c2fa:	81a3      	strh	r3, [r4, #12]
 802c2fc:	2300      	movs	r3, #0
 802c2fe:	6063      	str	r3, [r4, #4]
 802c300:	6923      	ldr	r3, [r4, #16]
 802c302:	6023      	str	r3, [r4, #0]
 802c304:	89a3      	ldrh	r3, [r4, #12]
 802c306:	f043 0308 	orr.w	r3, r3, #8
 802c30a:	81a3      	strh	r3, [r4, #12]
 802c30c:	6923      	ldr	r3, [r4, #16]
 802c30e:	b94b      	cbnz	r3, 802c324 <__swsetup_r+0x7c>
 802c310:	89a3      	ldrh	r3, [r4, #12]
 802c312:	f403 7320 	and.w	r3, r3, #640	; 0x280
 802c316:	f5b3 7f00 	cmp.w	r3, #512	; 0x200
 802c31a:	d003      	beq.n	802c324 <__swsetup_r+0x7c>
 802c31c:	4621      	mov	r1, r4
 802c31e:	4628      	mov	r0, r5
 802c320:	f000 f840 	bl	802c3a4 <__smakebuf_r>
 802c324:	89a0      	ldrh	r0, [r4, #12]
 802c326:	f9b4 200c 	ldrsh.w	r2, [r4, #12]
 802c32a:	f010 0301 	ands.w	r3, r0, #1
 802c32e:	d00a      	beq.n	802c346 <__swsetup_r+0x9e>
 802c330:	2300      	movs	r3, #0
 802c332:	60a3      	str	r3, [r4, #8]
 802c334:	6963      	ldr	r3, [r4, #20]
 802c336:	425b      	negs	r3, r3
 802c338:	61a3      	str	r3, [r4, #24]
 802c33a:	6923      	ldr	r3, [r4, #16]
 802c33c:	b943      	cbnz	r3, 802c350 <__swsetup_r+0xa8>
 802c33e:	f010 0080 	ands.w	r0, r0, #128	; 0x80
 802c342:	d1c4      	bne.n	802c2ce <__swsetup_r+0x26>
 802c344:	bd38      	pop	{r3, r4, r5, pc}
 802c346:	0781      	lsls	r1, r0, #30
 802c348:	bf58      	it	pl
 802c34a:	6963      	ldrpl	r3, [r4, #20]
 802c34c:	60a3      	str	r3, [r4, #8]
 802c34e:	e7f4      	b.n	802c33a <__swsetup_r+0x92>
 802c350:	2000      	movs	r0, #0
 802c352:	e7f7      	b.n	802c344 <__swsetup_r+0x9c>
 802c354:	20000160 	.word	0x20000160

0802c358 <__swhatbuf_r>:
 802c358:	b570      	push	{r4, r5, r6, lr}
 802c35a:	460c      	mov	r4, r1
 802c35c:	f9b1 100e 	ldrsh.w	r1, [r1, #14]
 802c360:	2900      	cmp	r1, #0
 802c362:	b096      	sub	sp, #88	; 0x58
 802c364:	4615      	mov	r5, r2
 802c366:	461e      	mov	r6, r3
 802c368:	da0d      	bge.n	802c386 <__swhatbuf_r+0x2e>
 802c36a:	89a3      	ldrh	r3, [r4, #12]
 802c36c:	f013 0f80 	tst.w	r3, #128	; 0x80
 802c370:	f04f 0100 	mov.w	r1, #0
 802c374:	bf0c      	ite	eq
 802c376:	f44f 6380 	moveq.w	r3, #1024	; 0x400
 802c37a:	2340      	movne	r3, #64	; 0x40
 802c37c:	2000      	movs	r0, #0
 802c37e:	6031      	str	r1, [r6, #0]
 802c380:	602b      	str	r3, [r5, #0]
 802c382:	b016      	add	sp, #88	; 0x58
 802c384:	bd70      	pop	{r4, r5, r6, pc}
 802c386:	466a      	mov	r2, sp
 802c388:	f000 f848 	bl	802c41c <_fstat_r>
 802c38c:	2800      	cmp	r0, #0
 802c38e:	dbec      	blt.n	802c36a <__swhatbuf_r+0x12>
 802c390:	9901      	ldr	r1, [sp, #4]
 802c392:	f401 4170 	and.w	r1, r1, #61440	; 0xf000
 802c396:	f5a1 5300 	sub.w	r3, r1, #8192	; 0x2000
 802c39a:	4259      	negs	r1, r3
 802c39c:	4159      	adcs	r1, r3
 802c39e:	f44f 6380 	mov.w	r3, #1024	; 0x400
 802c3a2:	e7eb      	b.n	802c37c <__swhatbuf_r+0x24>

0802c3a4 <__smakebuf_r>:
 802c3a4:	898b      	ldrh	r3, [r1, #12]
 802c3a6:	b573      	push	{r0, r1, r4, r5, r6, lr}
 802c3a8:	079d      	lsls	r5, r3, #30
 802c3aa:	4606      	mov	r6, r0
 802c3ac:	460c      	mov	r4, r1
 802c3ae:	d507      	bpl.n	802c3c0 <__smakebuf_r+0x1c>
 802c3b0:	f104 0347 	add.w	r3, r4, #71	; 0x47
 802c3b4:	6023      	str	r3, [r4, #0]
 802c3b6:	6123      	str	r3, [r4, #16]
 802c3b8:	2301      	movs	r3, #1
 802c3ba:	6163      	str	r3, [r4, #20]
 802c3bc:	b002      	add	sp, #8
 802c3be:	bd70      	pop	{r4, r5, r6, pc}
 802c3c0:	ab01      	add	r3, sp, #4
 802c3c2:	466a      	mov	r2, sp
 802c3c4:	f7ff ffc8 	bl	802c358 <__swhatbuf_r>
 802c3c8:	9900      	ldr	r1, [sp, #0]
 802c3ca:	4605      	mov	r5, r0
 802c3cc:	4630      	mov	r0, r6
 802c3ce:	f7ff f81b 	bl	802b408 <_malloc_r>
 802c3d2:	b948      	cbnz	r0, 802c3e8 <__smakebuf_r+0x44>
 802c3d4:	f9b4 300c 	ldrsh.w	r3, [r4, #12]
 802c3d8:	059a      	lsls	r2, r3, #22
 802c3da:	d4ef      	bmi.n	802c3bc <__smakebuf_r+0x18>
 802c3dc:	f023 0303 	bic.w	r3, r3, #3
 802c3e0:	f043 0302 	orr.w	r3, r3, #2
 802c3e4:	81a3      	strh	r3, [r4, #12]
 802c3e6:	e7e3      	b.n	802c3b0 <__smakebuf_r+0xc>
 802c3e8:	89a3      	ldrh	r3, [r4, #12]
 802c3ea:	6020      	str	r0, [r4, #0]
 802c3ec:	f043 0380 	orr.w	r3, r3, #128	; 0x80
 802c3f0:	81a3      	strh	r3, [r4, #12]
 802c3f2:	9b00      	ldr	r3, [sp, #0]
 802c3f4:	6163      	str	r3, [r4, #20]
 802c3f6:	9b01      	ldr	r3, [sp, #4]
 802c3f8:	6120      	str	r0, [r4, #16]
 802c3fa:	b15b      	cbz	r3, 802c414 <__smakebuf_r+0x70>
 802c3fc:	f9b4 100e 	ldrsh.w	r1, [r4, #14]
 802c400:	4630      	mov	r0, r6
 802c402:	f000 f81d 	bl	802c440 <_isatty_r>
 802c406:	b128      	cbz	r0, 802c414 <__smakebuf_r+0x70>
 802c408:	89a3      	ldrh	r3, [r4, #12]
 802c40a:	f023 0303 	bic.w	r3, r3, #3
 802c40e:	f043 0301 	orr.w	r3, r3, #1
 802c412:	81a3      	strh	r3, [r4, #12]
 802c414:	89a3      	ldrh	r3, [r4, #12]
 802c416:	431d      	orrs	r5, r3
 802c418:	81a5      	strh	r5, [r4, #12]
 802c41a:	e7cf      	b.n	802c3bc <__smakebuf_r+0x18>

0802c41c <_fstat_r>:
 802c41c:	b538      	push	{r3, r4, r5, lr}
 802c41e:	4d07      	ldr	r5, [pc, #28]	; (802c43c <_fstat_r+0x20>)
 802c420:	2300      	movs	r3, #0
 802c422:	4604      	mov	r4, r0
 802c424:	4608      	mov	r0, r1
 802c426:	4611      	mov	r1, r2
 802c428:	602b      	str	r3, [r5, #0]
 802c42a:	f7d5 fbb9 	bl	8001ba0 <_fstat>
 802c42e:	1c43      	adds	r3, r0, #1
 802c430:	d102      	bne.n	802c438 <_fstat_r+0x1c>
 802c432:	682b      	ldr	r3, [r5, #0]
 802c434:	b103      	cbz	r3, 802c438 <_fstat_r+0x1c>
 802c436:	6023      	str	r3, [r4, #0]
 802c438:	bd38      	pop	{r3, r4, r5, pc}
 802c43a:	bf00      	nop
 802c43c:	200142b4 	.word	0x200142b4

0802c440 <_isatty_r>:
 802c440:	b538      	push	{r3, r4, r5, lr}
 802c442:	4d06      	ldr	r5, [pc, #24]	; (802c45c <_isatty_r+0x1c>)
 802c444:	2300      	movs	r3, #0
 802c446:	4604      	mov	r4, r0
 802c448:	4608      	mov	r0, r1
 802c44a:	602b      	str	r3, [r5, #0]
 802c44c:	f7d5 fbae 	bl	8001bac <_isatty>
 802c450:	1c43      	adds	r3, r0, #1
 802c452:	d102      	bne.n	802c45a <_isatty_r+0x1a>
 802c454:	682b      	ldr	r3, [r5, #0]
 802c456:	b103      	cbz	r3, 802c45a <_isatty_r+0x1a>
 802c458:	6023      	str	r3, [r4, #0]
 802c45a:	bd38      	pop	{r3, r4, r5, pc}
 802c45c:	200142b4 	.word	0x200142b4

0802c460 <_init>:
 802c460:	b5f8      	push	{r3, r4, r5, r6, r7, lr}
 802c462:	bf00      	nop
 802c464:	bcf8      	pop	{r3, r4, r5, r6, r7}
 802c466:	bc08      	pop	{r3}
 802c468:	469e      	mov	lr, r3
 802c46a:	4770      	bx	lr

0802c46c <_fini>:
 802c46c:	b5f8      	push	{r3, r4, r5, r6, r7, lr}
 802c46e:	bf00      	nop
 802c470:	bcf8      	pop	{r3, r4, r5, r6, r7}
 802c472:	bc08      	pop	{r3}
 802c474:	469e      	mov	lr, r3
 802c476:	4770      	bx	lr

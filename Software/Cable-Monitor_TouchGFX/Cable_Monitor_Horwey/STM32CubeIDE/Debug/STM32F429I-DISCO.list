
STM32F429I-DISCO.elf:     file format elf32-littlearm

Sections:
Idx Name          Size      VMA       LMA       File off  Algn
  0 .isr_vector   000001ac  08000000  08000000  00010000  2**0
                  CONTENTS, ALLOC, LOAD, READONLY, DATA
  1 .text         0002afac  080001b0  080001b0  000101b0  2**4
                  CONTENTS, ALLOC, LOAD, READONLY, CODE
  2 .rodata       00017538  0802b15c  0802b15c  0003b15c  2**2
                  CONTENTS, ALLOC, LOAD, READONLY, DATA
  3 FontFlashSection 00002d3e  08042694  08042694  00052694  2**2
                  CONTENTS, ALLOC, LOAD, READONLY, DATA
  4 FontSearchFlashSection 00000170  080453d4  080453d4  000553d4  2**2
                  CONTENTS, ALLOC, LOAD, READONLY, DATA
  5 TextFlashSection 00000674  08045544  08045544  00055544  2**2
                  CONTENTS, ALLOC, LOAD, READONLY, DATA
  6 ExtFlashSection 00119030  08045bb8  08045bb8  00055bb8  2**2
                  CONTENTS, ALLOC, LOAD, READONLY, DATA
  7 .ARM.extab    00000000  0815ebe8  0815ebe8  00170168  2**0
                  CONTENTS
  8 .ARM          00000008  0815ebe8  0815ebe8  0016ebe8  2**2
                  CONTENTS, ALLOC, LOAD, READONLY, DATA
  9 .preinit_array 00000000  0815ebf0  0815ebf0  00170168  2**0
                  CONTENTS, ALLOC, LOAD, DATA
 10 .init_array   00000014  0815ebf0  0815ebf0  0016ebf0  2**2
                  CONTENTS, ALLOC, LOAD, DATA
 11 .fini_array   00000004  0815ec04  0815ec04  0016ec04  2**2
                  CONTENTS, ALLOC, LOAD, DATA
 12 .data         00000168  20000000  0815ec08  00170000  2**2
                  CONTENTS, ALLOC, LOAD, DATA
 13 .bss          000139f4  20000168  0815ed70  00170168  2**3
                  ALLOC
 14 ._user_heap_stack 00001404  20013b5c  0815ed70  00173b5c  2**0
                  ALLOC
 15 .ARM.attributes 00000030  00000000  00000000  00170168  2**0
                  CONTENTS, READONLY
 16 TouchGFX_Framebuffer 00070800  d0000000  d0000000  00180000  2**2
                  ALLOC
 17 .comment      00000132  00000000  00000000  00170198  2**0
                  CONTENTS, READONLY
 18 .debug_line   0009bb63  00000000  00000000  001702ca  2**0
                  CONTENTS, READONLY, DEBUGGING, OCTETS
 19 .debug_line_str 00000093  00000000  00000000  0020be2d  2**0
                  CONTENTS, READONLY, DEBUGGING, OCTETS
 20 .debug_info   0029320b  00000000  00000000  0020bec0  2**0
                  CONTENTS, READONLY, DEBUGGING, OCTETS
 21 .debug_abbrev 000328f4  00000000  00000000  0049f0cb  2**0
                  CONTENTS, READONLY, DEBUGGING, OCTETS
 22 .debug_aranges 00004810  00000000  00000000  004d19c0  2**3
                  CONTENTS, READONLY, DEBUGGING, OCTETS
 23 .debug_str    001208e7  00000000  00000000  004d61d0  2**0
                  CONTENTS, READONLY, DEBUGGING, OCTETS
 24 .debug_rnglists 00008065  00000000  00000000  005f6ab7  2**0
                  CONTENTS, READONLY, DEBUGGING, OCTETS
 25 .debug_loclists 0003282a  00000000  00000000  005feb1c  2**0
                  CONTENTS, READONLY, DEBUGGING, OCTETS
 26 .debug_macro  0003c7cc  00000000  00000000  00631346  2**0
                  CONTENTS, READONLY, DEBUGGING, OCTETS
 27 .debug_frame  0000d3bc  00000000  00000000  0066db14  2**2
                  CONTENTS, READONLY, DEBUGGING, OCTETS
 28 .debug_loc    00003378  00000000  00000000  0067aed0  2**0
                  CONTENTS, READONLY, DEBUGGING, OCTETS
 29 .debug_ranges 00000140  00000000  00000000  0067e248  2**0
                  CONTENTS, READONLY, DEBUGGING, OCTETS

Disassembly of section .text:

080001b0 <__do_global_dtors_aux>:
 80001b0:	b510      	push	{r4, lr}
 80001b2:	4c05      	ldr	r4, [pc, #20]	; (80001c8 <__do_global_dtors_aux+0x18>)
 80001b4:	7823      	ldrb	r3, [r4, #0]
 80001b6:	b933      	cbnz	r3, 80001c6 <__do_global_dtors_aux+0x16>
 80001b8:	4b04      	ldr	r3, [pc, #16]	; (80001cc <__do_global_dtors_aux+0x1c>)
 80001ba:	b113      	cbz	r3, 80001c2 <__do_global_dtors_aux+0x12>
 80001bc:	4804      	ldr	r0, [pc, #16]	; (80001d0 <__do_global_dtors_aux+0x20>)
 80001be:	f3af 8000 	nop.w
 80001c2:	2301      	movs	r3, #1
 80001c4:	7023      	strb	r3, [r4, #0]
 80001c6:	bd10      	pop	{r4, pc}
 80001c8:	20000168 	.word	0x20000168
 80001cc:	00000000 	.word	0x00000000
 80001d0:	0802b144 	.word	0x0802b144

080001d4 <frame_dummy>:
 80001d4:	b508      	push	{r3, lr}
 80001d6:	4b03      	ldr	r3, [pc, #12]	; (80001e4 <frame_dummy+0x10>)
 80001d8:	b11b      	cbz	r3, 80001e2 <frame_dummy+0xe>
 80001da:	4903      	ldr	r1, [pc, #12]	; (80001e8 <frame_dummy+0x14>)
 80001dc:	4803      	ldr	r0, [pc, #12]	; (80001ec <frame_dummy+0x18>)
 80001de:	f3af 8000 	nop.w
 80001e2:	bd08      	pop	{r3, pc}
 80001e4:	00000000 	.word	0x00000000
 80001e8:	2000016c 	.word	0x2000016c
 80001ec:	0802b144 	.word	0x0802b144

080001f0 <arm_bitreversal_32>:
 80001f0:	1c4b      	adds	r3, r1, #1
 80001f2:	2b01      	cmp	r3, #1
 80001f4:	bf98      	it	ls
 80001f6:	4770      	bxls	lr
 80001f8:	e92d 03f0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9}
 80001fc:	1c91      	adds	r1, r2, #2
 80001fe:	089b      	lsrs	r3, r3, #2

08000200 <arm_bitreversal_32_0>:
 8000200:	f8b1 8004 	ldrh.w	r8, [r1, #4]
 8000204:	f8b1 9002 	ldrh.w	r9, [r1, #2]
 8000208:	880a      	ldrh	r2, [r1, #0]
 800020a:	f831 cc02 	ldrh.w	ip, [r1, #-2]
 800020e:	4480      	add	r8, r0
 8000210:	4481      	add	r9, r0
 8000212:	4402      	add	r2, r0
 8000214:	4484      	add	ip, r0
 8000216:	f8d9 7000 	ldr.w	r7, [r9]
 800021a:	f8d8 6000 	ldr.w	r6, [r8]
 800021e:	6815      	ldr	r5, [r2, #0]
 8000220:	f8dc 4000 	ldr.w	r4, [ip]
 8000224:	f8c9 6000 	str.w	r6, [r9]
 8000228:	f8c8 7000 	str.w	r7, [r8]
 800022c:	f8cc 5000 	str.w	r5, [ip]
 8000230:	6014      	str	r4, [r2, #0]
 8000232:	f8d9 7004 	ldr.w	r7, [r9, #4]
 8000236:	f8d8 6004 	ldr.w	r6, [r8, #4]
 800023a:	6855      	ldr	r5, [r2, #4]
 800023c:	f8dc 4004 	ldr.w	r4, [ip, #4]
 8000240:	f8c9 6004 	str.w	r6, [r9, #4]
 8000244:	f8c8 7004 	str.w	r7, [r8, #4]
 8000248:	f8cc 5004 	str.w	r5, [ip, #4]
 800024c:	6054      	str	r4, [r2, #4]
 800024e:	3108      	adds	r1, #8
 8000250:	3b01      	subs	r3, #1
 8000252:	d1d5      	bne.n	8000200 <arm_bitreversal_32_0>
 8000254:	e8bd 03f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9}
 8000258:	4770      	bx	lr

0800025a <arm_bitreversal_16>:
 800025a:	1c4b      	adds	r3, r1, #1
 800025c:	2b01      	cmp	r3, #1
 800025e:	bf98      	it	ls
 8000260:	4770      	bxls	lr
 8000262:	e92d 03f0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9}
 8000266:	1c91      	adds	r1, r2, #2
 8000268:	089b      	lsrs	r3, r3, #2

0800026a <arm_bitreversal_16_0>:
 800026a:	f8b1 8004 	ldrh.w	r8, [r1, #4]
 800026e:	f8b1 9002 	ldrh.w	r9, [r1, #2]
 8000272:	880a      	ldrh	r2, [r1, #0]
 8000274:	f831 cc02 	ldrh.w	ip, [r1, #-2]
 8000278:	eb00 0858 	add.w	r8, r0, r8, lsr #1
 800027c:	eb00 0959 	add.w	r9, r0, r9, lsr #1
 8000280:	eb00 0252 	add.w	r2, r0, r2, lsr #1
 8000284:	eb00 0c5c 	add.w	ip, r0, ip, lsr #1
 8000288:	f8d9 7000 	ldr.w	r7, [r9]
 800028c:	f8d8 6000 	ldr.w	r6, [r8]
 8000290:	6815      	ldr	r5, [r2, #0]
 8000292:	f8dc 4000 	ldr.w	r4, [ip]
 8000296:	f8c9 6000 	str.w	r6, [r9]
 800029a:	f8c8 7000 	str.w	r7, [r8]
 800029e:	f8cc 5000 	str.w	r5, [ip]
 80002a2:	6014      	str	r4, [r2, #0]
 80002a4:	3108      	adds	r1, #8
 80002a6:	3b01      	subs	r3, #1
 80002a8:	d1df      	bne.n	800026a <arm_bitreversal_16_0>
 80002aa:	e8bd 03f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9}
 80002ae:	4770      	bx	lr

080002b0 <memchr>:
 80002b0:	f001 01ff 	and.w	r1, r1, #255	; 0xff
 80002b4:	2a10      	cmp	r2, #16
 80002b6:	db2b      	blt.n	8000310 <memchr+0x60>
 80002b8:	f010 0f07 	tst.w	r0, #7
 80002bc:	d008      	beq.n	80002d0 <memchr+0x20>
 80002be:	f810 3b01 	ldrb.w	r3, [r0], #1
 80002c2:	3a01      	subs	r2, #1
 80002c4:	428b      	cmp	r3, r1
 80002c6:	d02d      	beq.n	8000324 <memchr+0x74>
 80002c8:	f010 0f07 	tst.w	r0, #7
 80002cc:	b342      	cbz	r2, 8000320 <memchr+0x70>
 80002ce:	d1f6      	bne.n	80002be <memchr+0xe>
 80002d0:	b4f0      	push	{r4, r5, r6, r7}
 80002d2:	ea41 2101 	orr.w	r1, r1, r1, lsl #8
 80002d6:	ea41 4101 	orr.w	r1, r1, r1, lsl #16
 80002da:	f022 0407 	bic.w	r4, r2, #7
 80002de:	f07f 0700 	mvns.w	r7, #0
 80002e2:	2300      	movs	r3, #0
 80002e4:	e8f0 5602 	ldrd	r5, r6, [r0], #8
 80002e8:	3c08      	subs	r4, #8
 80002ea:	ea85 0501 	eor.w	r5, r5, r1
 80002ee:	ea86 0601 	eor.w	r6, r6, r1
 80002f2:	fa85 f547 	uadd8	r5, r5, r7
 80002f6:	faa3 f587 	sel	r5, r3, r7
 80002fa:	fa86 f647 	uadd8	r6, r6, r7
 80002fe:	faa5 f687 	sel	r6, r5, r7
 8000302:	b98e      	cbnz	r6, 8000328 <memchr+0x78>
 8000304:	d1ee      	bne.n	80002e4 <memchr+0x34>
 8000306:	bcf0      	pop	{r4, r5, r6, r7}
 8000308:	f001 01ff 	and.w	r1, r1, #255	; 0xff
 800030c:	f002 0207 	and.w	r2, r2, #7
 8000310:	b132      	cbz	r2, 8000320 <memchr+0x70>
 8000312:	f810 3b01 	ldrb.w	r3, [r0], #1
 8000316:	3a01      	subs	r2, #1
 8000318:	ea83 0301 	eor.w	r3, r3, r1
 800031c:	b113      	cbz	r3, 8000324 <memchr+0x74>
 800031e:	d1f8      	bne.n	8000312 <memchr+0x62>
 8000320:	2000      	movs	r0, #0
 8000322:	4770      	bx	lr
 8000324:	3801      	subs	r0, #1
 8000326:	4770      	bx	lr
 8000328:	2d00      	cmp	r5, #0
 800032a:	bf06      	itte	eq
 800032c:	4635      	moveq	r5, r6
 800032e:	3803      	subeq	r0, #3
 8000330:	3807      	subne	r0, #7
 8000332:	f015 0f01 	tst.w	r5, #1
 8000336:	d107      	bne.n	8000348 <memchr+0x98>
 8000338:	3001      	adds	r0, #1
 800033a:	f415 7f80 	tst.w	r5, #256	; 0x100
 800033e:	bf02      	ittt	eq
 8000340:	3001      	addeq	r0, #1
 8000342:	f415 3fc0 	tsteq.w	r5, #98304	; 0x18000
 8000346:	3001      	addeq	r0, #1
 8000348:	bcf0      	pop	{r4, r5, r6, r7}
 800034a:	3801      	subs	r0, #1
 800034c:	4770      	bx	lr
 800034e:	bf00      	nop

08000350 <__aeabi_uldivmod>:
 8000350:	b953      	cbnz	r3, 8000368 <__aeabi_uldivmod+0x18>
 8000352:	b94a      	cbnz	r2, 8000368 <__aeabi_uldivmod+0x18>
 8000354:	2900      	cmp	r1, #0
 8000356:	bf08      	it	eq
 8000358:	2800      	cmpeq	r0, #0
 800035a:	bf1c      	itt	ne
 800035c:	f04f 31ff 	movne.w	r1, #4294967295
 8000360:	f04f 30ff 	movne.w	r0, #4294967295
 8000364:	f000 b970 	b.w	8000648 <__aeabi_idiv0>
 8000368:	f1ad 0c08 	sub.w	ip, sp, #8
 800036c:	e96d ce04 	strd	ip, lr, [sp, #-16]!
 8000370:	f000 f806 	bl	8000380 <__udivmoddi4>
 8000374:	f8dd e004 	ldr.w	lr, [sp, #4]
 8000378:	e9dd 2302 	ldrd	r2, r3, [sp, #8]
 800037c:	b004      	add	sp, #16
 800037e:	4770      	bx	lr

08000380 <__udivmoddi4>:
 8000380:	e92d 47f0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, lr}
 8000384:	9e08      	ldr	r6, [sp, #32]
 8000386:	460d      	mov	r5, r1
 8000388:	4604      	mov	r4, r0
 800038a:	460f      	mov	r7, r1
 800038c:	2b00      	cmp	r3, #0
 800038e:	d14a      	bne.n	8000426 <__udivmoddi4+0xa6>
 8000390:	428a      	cmp	r2, r1
 8000392:	4694      	mov	ip, r2
 8000394:	d965      	bls.n	8000462 <__udivmoddi4+0xe2>
 8000396:	fab2 f382 	clz	r3, r2
 800039a:	b143      	cbz	r3, 80003ae <__udivmoddi4+0x2e>
 800039c:	fa02 fc03 	lsl.w	ip, r2, r3
 80003a0:	f1c3 0220 	rsb	r2, r3, #32
 80003a4:	409f      	lsls	r7, r3
 80003a6:	fa20 f202 	lsr.w	r2, r0, r2
 80003aa:	4317      	orrs	r7, r2
 80003ac:	409c      	lsls	r4, r3
 80003ae:	ea4f 4e1c 	mov.w	lr, ip, lsr #16
 80003b2:	fa1f f58c 	uxth.w	r5, ip
 80003b6:	fbb7 f1fe 	udiv	r1, r7, lr
 80003ba:	0c22      	lsrs	r2, r4, #16
 80003bc:	fb0e 7711 	mls	r7, lr, r1, r7
 80003c0:	ea42 4207 	orr.w	r2, r2, r7, lsl #16
 80003c4:	fb01 f005 	mul.w	r0, r1, r5
 80003c8:	4290      	cmp	r0, r2
 80003ca:	d90a      	bls.n	80003e2 <__udivmoddi4+0x62>
 80003cc:	eb1c 0202 	adds.w	r2, ip, r2
 80003d0:	f101 37ff 	add.w	r7, r1, #4294967295
 80003d4:	f080 811c 	bcs.w	8000610 <__udivmoddi4+0x290>
 80003d8:	4290      	cmp	r0, r2
 80003da:	f240 8119 	bls.w	8000610 <__udivmoddi4+0x290>
 80003de:	3902      	subs	r1, #2
 80003e0:	4462      	add	r2, ip
 80003e2:	1a12      	subs	r2, r2, r0
 80003e4:	b2a4      	uxth	r4, r4
 80003e6:	fbb2 f0fe 	udiv	r0, r2, lr
 80003ea:	fb0e 2210 	mls	r2, lr, r0, r2
 80003ee:	ea44 4402 	orr.w	r4, r4, r2, lsl #16
 80003f2:	fb00 f505 	mul.w	r5, r0, r5
 80003f6:	42a5      	cmp	r5, r4
 80003f8:	d90a      	bls.n	8000410 <__udivmoddi4+0x90>
 80003fa:	eb1c 0404 	adds.w	r4, ip, r4
 80003fe:	f100 32ff 	add.w	r2, r0, #4294967295
 8000402:	f080 8107 	bcs.w	8000614 <__udivmoddi4+0x294>
 8000406:	42a5      	cmp	r5, r4
 8000408:	f240 8104 	bls.w	8000614 <__udivmoddi4+0x294>
 800040c:	4464      	add	r4, ip
 800040e:	3802      	subs	r0, #2
 8000410:	ea40 4001 	orr.w	r0, r0, r1, lsl #16
 8000414:	1b64      	subs	r4, r4, r5
 8000416:	2100      	movs	r1, #0
 8000418:	b11e      	cbz	r6, 8000422 <__udivmoddi4+0xa2>
 800041a:	40dc      	lsrs	r4, r3
 800041c:	2300      	movs	r3, #0
 800041e:	e9c6 4300 	strd	r4, r3, [r6]
 8000422:	e8bd 87f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, pc}
 8000426:	428b      	cmp	r3, r1
 8000428:	d908      	bls.n	800043c <__udivmoddi4+0xbc>
 800042a:	2e00      	cmp	r6, #0
 800042c:	f000 80ed 	beq.w	800060a <__udivmoddi4+0x28a>
 8000430:	2100      	movs	r1, #0
 8000432:	e9c6 0500 	strd	r0, r5, [r6]
 8000436:	4608      	mov	r0, r1
 8000438:	e8bd 87f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, pc}
 800043c:	fab3 f183 	clz	r1, r3
 8000440:	2900      	cmp	r1, #0
 8000442:	d149      	bne.n	80004d8 <__udivmoddi4+0x158>
 8000444:	42ab      	cmp	r3, r5
 8000446:	d302      	bcc.n	800044e <__udivmoddi4+0xce>
 8000448:	4282      	cmp	r2, r0
 800044a:	f200 80f8 	bhi.w	800063e <__udivmoddi4+0x2be>
 800044e:	1a84      	subs	r4, r0, r2
 8000450:	eb65 0203 	sbc.w	r2, r5, r3
 8000454:	2001      	movs	r0, #1
 8000456:	4617      	mov	r7, r2
 8000458:	2e00      	cmp	r6, #0
 800045a:	d0e2      	beq.n	8000422 <__udivmoddi4+0xa2>
 800045c:	e9c6 4700 	strd	r4, r7, [r6]
 8000460:	e7df      	b.n	8000422 <__udivmoddi4+0xa2>
 8000462:	b902      	cbnz	r2, 8000466 <__udivmoddi4+0xe6>
 8000464:	deff      	udf	#255	; 0xff
 8000466:	fab2 f382 	clz	r3, r2
 800046a:	2b00      	cmp	r3, #0
 800046c:	f040 8090 	bne.w	8000590 <__udivmoddi4+0x210>
 8000470:	1a8a      	subs	r2, r1, r2
 8000472:	ea4f 471c 	mov.w	r7, ip, lsr #16
 8000476:	fa1f fe8c 	uxth.w	lr, ip
 800047a:	2101      	movs	r1, #1
 800047c:	fbb2 f5f7 	udiv	r5, r2, r7
 8000480:	fb07 2015 	mls	r0, r7, r5, r2
 8000484:	0c22      	lsrs	r2, r4, #16
 8000486:	ea42 4200 	orr.w	r2, r2, r0, lsl #16
 800048a:	fb0e f005 	mul.w	r0, lr, r5
 800048e:	4290      	cmp	r0, r2
 8000490:	d908      	bls.n	80004a4 <__udivmoddi4+0x124>
 8000492:	eb1c 0202 	adds.w	r2, ip, r2
 8000496:	f105 38ff 	add.w	r8, r5, #4294967295
 800049a:	d202      	bcs.n	80004a2 <__udivmoddi4+0x122>
 800049c:	4290      	cmp	r0, r2
 800049e:	f200 80cb 	bhi.w	8000638 <__udivmoddi4+0x2b8>
 80004a2:	4645      	mov	r5, r8
 80004a4:	1a12      	subs	r2, r2, r0
 80004a6:	b2a4      	uxth	r4, r4
 80004a8:	fbb2 f0f7 	udiv	r0, r2, r7
 80004ac:	fb07 2210 	mls	r2, r7, r0, r2
 80004b0:	ea44 4402 	orr.w	r4, r4, r2, lsl #16
 80004b4:	fb0e fe00 	mul.w	lr, lr, r0
 80004b8:	45a6      	cmp	lr, r4
 80004ba:	d908      	bls.n	80004ce <__udivmoddi4+0x14e>
 80004bc:	eb1c 0404 	adds.w	r4, ip, r4
 80004c0:	f100 32ff 	add.w	r2, r0, #4294967295
 80004c4:	d202      	bcs.n	80004cc <__udivmoddi4+0x14c>
 80004c6:	45a6      	cmp	lr, r4
 80004c8:	f200 80bb 	bhi.w	8000642 <__udivmoddi4+0x2c2>
 80004cc:	4610      	mov	r0, r2
 80004ce:	eba4 040e 	sub.w	r4, r4, lr
 80004d2:	ea40 4005 	orr.w	r0, r0, r5, lsl #16
 80004d6:	e79f      	b.n	8000418 <__udivmoddi4+0x98>
 80004d8:	f1c1 0720 	rsb	r7, r1, #32
 80004dc:	408b      	lsls	r3, r1
 80004de:	fa22 fc07 	lsr.w	ip, r2, r7
 80004e2:	ea4c 0c03 	orr.w	ip, ip, r3
 80004e6:	fa05 f401 	lsl.w	r4, r5, r1
 80004ea:	fa20 f307 	lsr.w	r3, r0, r7
 80004ee:	40fd      	lsrs	r5, r7
 80004f0:	ea4f 491c 	mov.w	r9, ip, lsr #16
 80004f4:	4323      	orrs	r3, r4
 80004f6:	fbb5 f8f9 	udiv	r8, r5, r9
 80004fa:	fa1f fe8c 	uxth.w	lr, ip
 80004fe:	fb09 5518 	mls	r5, r9, r8, r5
 8000502:	0c1c      	lsrs	r4, r3, #16
 8000504:	ea44 4405 	orr.w	r4, r4, r5, lsl #16
 8000508:	fb08 f50e 	mul.w	r5, r8, lr
 800050c:	42a5      	cmp	r5, r4
 800050e:	fa02 f201 	lsl.w	r2, r2, r1
 8000512:	fa00 f001 	lsl.w	r0, r0, r1
 8000516:	d90b      	bls.n	8000530 <__udivmoddi4+0x1b0>
 8000518:	eb1c 0404 	adds.w	r4, ip, r4
 800051c:	f108 3aff 	add.w	sl, r8, #4294967295
 8000520:	f080 8088 	bcs.w	8000634 <__udivmoddi4+0x2b4>
 8000524:	42a5      	cmp	r5, r4
 8000526:	f240 8085 	bls.w	8000634 <__udivmoddi4+0x2b4>
 800052a:	f1a8 0802 	sub.w	r8, r8, #2
 800052e:	4464      	add	r4, ip
 8000530:	1b64      	subs	r4, r4, r5
 8000532:	b29d      	uxth	r5, r3
 8000534:	fbb4 f3f9 	udiv	r3, r4, r9
 8000538:	fb09 4413 	mls	r4, r9, r3, r4
 800053c:	ea45 4404 	orr.w	r4, r5, r4, lsl #16
 8000540:	fb03 fe0e 	mul.w	lr, r3, lr
 8000544:	45a6      	cmp	lr, r4
 8000546:	d908      	bls.n	800055a <__udivmoddi4+0x1da>
 8000548:	eb1c 0404 	adds.w	r4, ip, r4
 800054c:	f103 35ff 	add.w	r5, r3, #4294967295
 8000550:	d26c      	bcs.n	800062c <__udivmoddi4+0x2ac>
 8000552:	45a6      	cmp	lr, r4
 8000554:	d96a      	bls.n	800062c <__udivmoddi4+0x2ac>
 8000556:	3b02      	subs	r3, #2
 8000558:	4464      	add	r4, ip
 800055a:	ea43 4308 	orr.w	r3, r3, r8, lsl #16
 800055e:	fba3 9502 	umull	r9, r5, r3, r2
 8000562:	eba4 040e 	sub.w	r4, r4, lr
 8000566:	42ac      	cmp	r4, r5
 8000568:	46c8      	mov	r8, r9
 800056a:	46ae      	mov	lr, r5
 800056c:	d356      	bcc.n	800061c <__udivmoddi4+0x29c>
 800056e:	d053      	beq.n	8000618 <__udivmoddi4+0x298>
 8000570:	b156      	cbz	r6, 8000588 <__udivmoddi4+0x208>
 8000572:	ebb0 0208 	subs.w	r2, r0, r8
 8000576:	eb64 040e 	sbc.w	r4, r4, lr
 800057a:	fa04 f707 	lsl.w	r7, r4, r7
 800057e:	40ca      	lsrs	r2, r1
 8000580:	40cc      	lsrs	r4, r1
 8000582:	4317      	orrs	r7, r2
 8000584:	e9c6 7400 	strd	r7, r4, [r6]
 8000588:	4618      	mov	r0, r3
 800058a:	2100      	movs	r1, #0
 800058c:	e8bd 87f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, pc}
 8000590:	f1c3 0120 	rsb	r1, r3, #32
 8000594:	fa02 fc03 	lsl.w	ip, r2, r3
 8000598:	fa20 f201 	lsr.w	r2, r0, r1
 800059c:	fa25 f101 	lsr.w	r1, r5, r1
 80005a0:	409d      	lsls	r5, r3
 80005a2:	432a      	orrs	r2, r5
 80005a4:	ea4f 471c 	mov.w	r7, ip, lsr #16
 80005a8:	fa1f fe8c 	uxth.w	lr, ip
 80005ac:	fbb1 f0f7 	udiv	r0, r1, r7
 80005b0:	fb07 1510 	mls	r5, r7, r0, r1
 80005b4:	0c11      	lsrs	r1, r2, #16
 80005b6:	ea41 4105 	orr.w	r1, r1, r5, lsl #16
 80005ba:	fb00 f50e 	mul.w	r5, r0, lr
 80005be:	428d      	cmp	r5, r1
 80005c0:	fa04 f403 	lsl.w	r4, r4, r3
 80005c4:	d908      	bls.n	80005d8 <__udivmoddi4+0x258>
 80005c6:	eb1c 0101 	adds.w	r1, ip, r1
 80005ca:	f100 38ff 	add.w	r8, r0, #4294967295
 80005ce:	d22f      	bcs.n	8000630 <__udivmoddi4+0x2b0>
 80005d0:	428d      	cmp	r5, r1
 80005d2:	d92d      	bls.n	8000630 <__udivmoddi4+0x2b0>
 80005d4:	3802      	subs	r0, #2
 80005d6:	4461      	add	r1, ip
 80005d8:	1b49      	subs	r1, r1, r5
 80005da:	b292      	uxth	r2, r2
 80005dc:	fbb1 f5f7 	udiv	r5, r1, r7
 80005e0:	fb07 1115 	mls	r1, r7, r5, r1
 80005e4:	ea42 4201 	orr.w	r2, r2, r1, lsl #16
 80005e8:	fb05 f10e 	mul.w	r1, r5, lr
 80005ec:	4291      	cmp	r1, r2
 80005ee:	d908      	bls.n	8000602 <__udivmoddi4+0x282>
 80005f0:	eb1c 0202 	adds.w	r2, ip, r2
 80005f4:	f105 38ff 	add.w	r8, r5, #4294967295
 80005f8:	d216      	bcs.n	8000628 <__udivmoddi4+0x2a8>
 80005fa:	4291      	cmp	r1, r2
 80005fc:	d914      	bls.n	8000628 <__udivmoddi4+0x2a8>
 80005fe:	3d02      	subs	r5, #2
 8000600:	4462      	add	r2, ip
 8000602:	1a52      	subs	r2, r2, r1
 8000604:	ea45 4100 	orr.w	r1, r5, r0, lsl #16
 8000608:	e738      	b.n	800047c <__udivmoddi4+0xfc>
 800060a:	4631      	mov	r1, r6
 800060c:	4630      	mov	r0, r6
 800060e:	e708      	b.n	8000422 <__udivmoddi4+0xa2>
 8000610:	4639      	mov	r1, r7
 8000612:	e6e6      	b.n	80003e2 <__udivmoddi4+0x62>
 8000614:	4610      	mov	r0, r2
 8000616:	e6fb      	b.n	8000410 <__udivmoddi4+0x90>
 8000618:	4548      	cmp	r0, r9
 800061a:	d2a9      	bcs.n	8000570 <__udivmoddi4+0x1f0>
 800061c:	ebb9 0802 	subs.w	r8, r9, r2
 8000620:	eb65 0e0c 	sbc.w	lr, r5, ip
 8000624:	3b01      	subs	r3, #1
 8000626:	e7a3      	b.n	8000570 <__udivmoddi4+0x1f0>
 8000628:	4645      	mov	r5, r8
 800062a:	e7ea      	b.n	8000602 <__udivmoddi4+0x282>
 800062c:	462b      	mov	r3, r5
 800062e:	e794      	b.n	800055a <__udivmoddi4+0x1da>
 8000630:	4640      	mov	r0, r8
 8000632:	e7d1      	b.n	80005d8 <__udivmoddi4+0x258>
 8000634:	46d0      	mov	r8, sl
 8000636:	e77b      	b.n	8000530 <__udivmoddi4+0x1b0>
 8000638:	3d02      	subs	r5, #2
 800063a:	4462      	add	r2, ip
 800063c:	e732      	b.n	80004a4 <__udivmoddi4+0x124>
 800063e:	4608      	mov	r0, r1
 8000640:	e70a      	b.n	8000458 <__udivmoddi4+0xd8>
 8000642:	4464      	add	r4, ip
 8000644:	3802      	subs	r0, #2
 8000646:	e742      	b.n	80004ce <__udivmoddi4+0x14e>

08000648 <__aeabi_idiv0>:
 8000648:	4770      	bx	lr
 800064a:	bf00      	nop

0800064c <Reset_Handler>:

    .section  .text.Reset_Handler
  .weak  Reset_Handler
  .type  Reset_Handler, %function
Reset_Handler: 
  ldr   sp, =_estack       /* set stack pointer */
 800064c:	f8df d034 	ldr.w	sp, [pc, #52]	; 8000684 <LoopFillZerobss+0x14>
 
/* Copy the data segment initializers from flash to SRAM */  
  movs  r1, #0
 8000650:	2100      	movs	r1, #0
  b  LoopCopyDataInit
 8000652:	e003      	b.n	800065c <LoopCopyDataInit>

08000654 <CopyDataInit>:

CopyDataInit:
  ldr  r3, =_sidata
 8000654:	4b0c      	ldr	r3, [pc, #48]	; (8000688 <LoopFillZerobss+0x18>)
  ldr  r3, [r3, r1]
 8000656:	585b      	ldr	r3, [r3, r1]
  str  r3, [r0, r1]
 8000658:	5043      	str	r3, [r0, r1]
  adds  r1, r1, #4
 800065a:	3104      	adds	r1, #4

0800065c <LoopCopyDataInit>:
    
LoopCopyDataInit:
  ldr  r0, =_sdata
 800065c:	480b      	ldr	r0, [pc, #44]	; (800068c <LoopFillZerobss+0x1c>)
  ldr  r3, =_edata
 800065e:	4b0c      	ldr	r3, [pc, #48]	; (8000690 <LoopFillZerobss+0x20>)
  adds  r2, r0, r1
 8000660:	1842      	adds	r2, r0, r1
  cmp  r2, r3
 8000662:	429a      	cmp	r2, r3
  bcc  CopyDataInit
 8000664:	d3f6      	bcc.n	8000654 <CopyDataInit>
  ldr  r2, =_sbss
 8000666:	4a0b      	ldr	r2, [pc, #44]	; (8000694 <LoopFillZerobss+0x24>)
  b  LoopFillZerobss
 8000668:	e002      	b.n	8000670 <LoopFillZerobss>

0800066a <FillZerobss>:
/* Zero fill the bss segment. */  
FillZerobss:
  movs  r3, #0
 800066a:	2300      	movs	r3, #0
  str  r3, [r2], #4
 800066c:	f842 3b04 	str.w	r3, [r2], #4

08000670 <LoopFillZerobss>:
    
LoopFillZerobss:
  ldr  r3, = _ebss
 8000670:	4b09      	ldr	r3, [pc, #36]	; (8000698 <LoopFillZerobss+0x28>)
  cmp  r2, r3
 8000672:	429a      	cmp	r2, r3
  bcc  FillZerobss
 8000674:	d3f9      	bcc.n	800066a <FillZerobss>

/* Call the clock system intitialization function.*/
  bl  SystemInit   
 8000676:	f008 fcd1 	bl	800901c <SystemInit>
/* Call static constructors */
    bl __libc_init_array
 800067a:	f029 ffe7 	bl	802a64c <__libc_init_array>
/* Call the application's entry point.*/
  bl  main
 800067e:	f000 fe85 	bl	800138c <main>
  bx  lr    
 8000682:	4770      	bx	lr
  ldr   sp, =_estack       /* set stack pointer */
 8000684:	20030000 	.word	0x20030000
  ldr  r3, =_sidata
 8000688:	0815ec08 	.word	0x0815ec08
  ldr  r0, =_sdata
 800068c:	20000000 	.word	0x20000000
  ldr  r3, =_edata
 8000690:	20000168 	.word	0x20000168
  ldr  r2, =_sbss
 8000694:	20000168 	.word	0x20000168
  ldr  r3, = _ebss
 8000698:	20013b5c 	.word	0x20013b5c

0800069c <ADC_IRQHandler>:
 * @retval None       
*/
    .section  .text.Default_Handler,"ax",%progbits
Default_Handler:
Infinite_Loop:
  b  Infinite_Loop
 800069c:	e7fe      	b.n	800069c <ADC_IRQHandler>
	...

080006a0 <MX_TouchGFX_PreOSInit>:
/**
 * PreOS Initialization function
 */
void MX_TouchGFX_PreOSInit(void)
{
}
 80006a0:	4770      	bx	lr
 80006a2:	bf00      	nop

080006a4 <MX_TouchGFX_Init>:

/**
 * Initialize TouchGFX application
 */
void MX_TouchGFX_Init(void)
{
 80006a4:	b508      	push	{r3, lr}
  // Calling forward to touchgfx_init in C++ domain
  touchgfx_components_init();
 80006a6:	f000 fbab 	bl	8000e00 <touchgfx_components_init>
  touchgfx_init();
}
 80006aa:	e8bd 4008 	ldmia.w	sp!, {r3, lr}
  touchgfx_init();
 80006ae:	f000 bb33 	b.w	8000d18 <touchgfx_init>
 80006b2:	bf00      	nop

080006b4 <TouchGFX_Task>:
 * TouchGFX application thread
 */
void TouchGFX_Task(void *argument)
{
  // Calling forward to touchgfx_taskEntry in C++ domain
  touchgfx_taskEntry();
 80006b4:	f000 bba6 	b.w	8000e04 <touchgfx_taskEntry>

080006b8 <_ZN20STM32TouchControllerD1Ev>:
 * @brief This class specializes TouchController Interface.
 *
 * @sa touchgfx::TouchController
 */

class STM32TouchController : public touchgfx::TouchController
 80006b8:	4770      	bx	lr

080006ba <_ZN20STM32TouchControllerD0Ev>:
 80006ba:	b510      	push	{r4, lr}
 80006bc:	2104      	movs	r1, #4
 80006be:	4604      	mov	r4, r0
 80006c0:	f028 fead 	bl	802941e <_ZdlPvj>
 80006c4:	4620      	mov	r0, r4
 80006c6:	bd10      	pop	{r4, pc}

080006c8 <_Z11BSP_TS_Inittt>:
  * @param  XSize: The maximum X size of the TS area on LCD
  * @param  YSize: The maximum Y size of the TS area on LCD
  * @retval TS_OK: if all initializations are OK. Other value if error.
  */
uint8_t BSP_TS_Init(uint16_t XSize, uint16_t YSize)
{
 80006c8:	b538      	push	{r3, r4, r5, lr}
    uint8_t ret = TS_ERROR;

    /* Initialize x and y positions boundaries */
    TsXBoundary = XSize;
 80006ca:	4b0c      	ldr	r3, [pc, #48]	; (80006fc <_Z11BSP_TS_Inittt+0x34>)
    TsYBoundary = YSize;

    /* Read ID and verify if the IO expander is ready */
    if (stmpe811_ts_drv.ReadID(TS_I2C_ADDRESS) == STMPE811_ID)
 80006cc:	4c0c      	ldr	r4, [pc, #48]	; (8000700 <_Z11BSP_TS_Inittt+0x38>)
    TsXBoundary = XSize;
 80006ce:	8018      	strh	r0, [r3, #0]
    TsYBoundary = YSize;
 80006d0:	4b0c      	ldr	r3, [pc, #48]	; (8000704 <_Z11BSP_TS_Inittt+0x3c>)
    if (stmpe811_ts_drv.ReadID(TS_I2C_ADDRESS) == STMPE811_ID)
 80006d2:	2082      	movs	r0, #130	; 0x82
    TsYBoundary = YSize;
 80006d4:	8019      	strh	r1, [r3, #0]
    if (stmpe811_ts_drv.ReadID(TS_I2C_ADDRESS) == STMPE811_ID)
 80006d6:	6863      	ldr	r3, [r4, #4]
 80006d8:	4798      	blx	r3
 80006da:	f640 0311 	movw	r3, #2065	; 0x811
 80006de:	4298      	cmp	r0, r3
 80006e0:	d10a      	bne.n	80006f8 <_Z11BSP_TS_Inittt+0x30>
    {
        /* Initialize the TS driver structure */
        TsDrv = &stmpe811_ts_drv;
 80006e2:	4d09      	ldr	r5, [pc, #36]	; (8000708 <_Z11BSP_TS_Inittt+0x40>)
    }

    if (ret == TS_OK)
    {
        /* Initialize the LL TS Driver */
        TsDrv->Init(TS_I2C_ADDRESS);
 80006e4:	6823      	ldr	r3, [r4, #0]
        TsDrv = &stmpe811_ts_drv;
 80006e6:	602c      	str	r4, [r5, #0]
        TsDrv->Init(TS_I2C_ADDRESS);
 80006e8:	2082      	movs	r0, #130	; 0x82
 80006ea:	4798      	blx	r3
        TsDrv->Start(TS_I2C_ADDRESS);
 80006ec:	682b      	ldr	r3, [r5, #0]
 80006ee:	2082      	movs	r0, #130	; 0x82
 80006f0:	68db      	ldr	r3, [r3, #12]
 80006f2:	4798      	blx	r3
 80006f4:	2000      	movs	r0, #0
    }

    return ret;
}
 80006f6:	bd38      	pop	{r3, r4, r5, pc}
    uint8_t ret = TS_ERROR;
 80006f8:	2001      	movs	r0, #1
 80006fa:	e7fc      	b.n	80006f6 <_Z11BSP_TS_Inittt+0x2e>
 80006fc:	20000184 	.word	0x20000184
 8000700:	20000050 	.word	0x20000050
 8000704:	20000186 	.word	0x20000186
 8000708:	20000188 	.word	0x20000188

0800070c <_ZN20STM32TouchController4initEv>:
    BSP_TS_Init(240, 320);
 800070c:	f44f 71a0 	mov.w	r1, #320	; 0x140
 8000710:	20f0      	movs	r0, #240	; 0xf0
 8000712:	f7ff bfd9 	b.w	80006c8 <_Z11BSP_TS_Inittt>
	...

08000718 <_Z15BSP_TS_GetStateP15TS_StateTypeDef>:
/**
  * @brief  Returns status and positions of the touch screen.
  * @param  TsState: Pointer to touch screen current state structure
  */
void BSP_TS_GetState(TS_StateTypeDef* TsState)
{
 8000718:	b5f7      	push	{r0, r1, r2, r4, r5, r6, r7, lr}
    static uint32_t _x = 0, _y = 0;
    uint16_t xDiff, yDiff, x, y, xr, yr;

    TsState->TouchDetected = TsDrv->DetectTouch(TS_I2C_ADDRESS);
 800071a:	4d33      	ldr	r5, [pc, #204]	; (80007e8 <_Z15BSP_TS_GetStateP15TS_StateTypeDef+0xd0>)
 800071c:	682b      	ldr	r3, [r5, #0]
{
 800071e:	4604      	mov	r4, r0
    TsState->TouchDetected = TsDrv->DetectTouch(TS_I2C_ADDRESS);
 8000720:	691b      	ldr	r3, [r3, #16]
 8000722:	2082      	movs	r0, #130	; 0x82
 8000724:	4798      	blx	r3
 8000726:	b280      	uxth	r0, r0
 8000728:	8020      	strh	r0, [r4, #0]

    if (TsState->TouchDetected)
 800072a:	2800      	cmp	r0, #0
 800072c:	d04a      	beq.n	80007c4 <_Z15BSP_TS_GetStateP15TS_StateTypeDef+0xac>
    {
        TsDrv->GetXY(TS_I2C_ADDRESS, &x, &y);
 800072e:	682b      	ldr	r3, [r5, #0]
 8000730:	f10d 0206 	add.w	r2, sp, #6
 8000734:	695b      	ldr	r3, [r3, #20]
 8000736:	a901      	add	r1, sp, #4
 8000738:	2082      	movs	r0, #130	; 0x82
 800073a:	4798      	blx	r3

        //Ensures the coordinates is within the screen
        if (y > 3700)
 800073c:	f8bd 3006 	ldrh.w	r3, [sp, #6]
 8000740:	f640 6274 	movw	r2, #3700	; 0xe74
 8000744:	4293      	cmp	r3, r2
 8000746:	d93f      	bls.n	80007c8 <_Z15BSP_TS_GetStateP15TS_StateTypeDef+0xb0>
        {
            y = 3700;
 8000748:	f8ad 2006 	strh.w	r2, [sp, #6]

        /* Y value first correction */
        y -= 180;

        /* Y value second correction */
        y = 3520 - y;
 800074c:	f8bd 3006 	ldrh.w	r3, [sp, #6]
 8000750:	1ad2      	subs	r2, r2, r3
 8000752:	b292      	uxth	r2, r2

        /* Y value third correction */
        yr = y / 11;

        /* Return y position value */
        if (yr <= 0)
 8000754:	2a0a      	cmp	r2, #10
 8000756:	d93d      	bls.n	80007d4 <_Z15BSP_TS_GetStateP15TS_StateTypeDef+0xbc>
        yr = y / 11;
 8000758:	230b      	movs	r3, #11
 800075a:	fbb2 f2f3 	udiv	r2, r2, r3
        {
            yr = 0;
        }
        else if (yr > TsYBoundary)
 800075e:	4b23      	ldr	r3, [pc, #140]	; (80007ec <_Z15BSP_TS_GetStateP15TS_StateTypeDef+0xd4>)
 8000760:	881b      	ldrh	r3, [r3, #0]
 8000762:	429a      	cmp	r2, r3
 8000764:	d901      	bls.n	800076a <_Z15BSP_TS_GetStateP15TS_StateTypeDef+0x52>
        {
            yr = TsYBoundary - 1;
 8000766:	3b01      	subs	r3, #1
 8000768:	b29a      	uxth	r2, r3
        {
        }
        y = yr;

        /* X value first correction */
        if (x <= 3000)
 800076a:	f8bd 3004 	ldrh.w	r3, [sp, #4]
 800076e:	f640 31b8 	movw	r1, #3000	; 0xbb8
 8000772:	428b      	cmp	r3, r1
 8000774:	d830      	bhi.n	80007d8 <_Z15BSP_TS_GetStateP15TS_StateTypeDef+0xc0>
        {
            x = 3870 - x;
 8000776:	f5c3 6371 	rsb	r3, r3, #3856	; 0xf10
 800077a:	330e      	adds	r3, #14
 800077c:	b29b      	uxth	r3, r3
        {
            x = 3800 - x;
        }

        /* X value second correction */
        xr = x / 15;
 800077e:	210f      	movs	r1, #15
 8000780:	fbb3 f3f1 	udiv	r3, r3, r1
        /* Return X position value */
        if (xr <= 0)
        {
            xr = 0;
        }
        else if (xr > TsXBoundary)
 8000784:	491a      	ldr	r1, [pc, #104]	; (80007f0 <_Z15BSP_TS_GetStateP15TS_StateTypeDef+0xd8>)
 8000786:	8809      	ldrh	r1, [r1, #0]
 8000788:	428b      	cmp	r3, r1
 800078a:	d901      	bls.n	8000790 <_Z15BSP_TS_GetStateP15TS_StateTypeDef+0x78>
        {
            xr = TsXBoundary - 1;
 800078c:	3901      	subs	r1, #1
 800078e:	b28b      	uxth	r3, r1
        else
        {
        }

        x = xr;
        xDiff = x > _x ? (x - _x) : (_x - x);
 8000790:	4e18      	ldr	r6, [pc, #96]	; (80007f4 <_Z15BSP_TS_GetStateP15TS_StateTypeDef+0xdc>)
        yDiff = y > _y ? (y - _y) : (_y - y);
 8000792:	4d19      	ldr	r5, [pc, #100]	; (80007f8 <_Z15BSP_TS_GetStateP15TS_StateTypeDef+0xe0>)
        xDiff = x > _x ? (x - _x) : (_x - x);
 8000794:	6830      	ldr	r0, [r6, #0]
        yDiff = y > _y ? (y - _y) : (_y - y);
 8000796:	682f      	ldr	r7, [r5, #0]
        xDiff = x > _x ? (x - _x) : (_x - x);
 8000798:	4283      	cmp	r3, r0
 800079a:	b281      	uxth	r1, r0
 800079c:	bf8c      	ite	hi
 800079e:	1a59      	subhi	r1, r3, r1
 80007a0:	1ac9      	subls	r1, r1, r3
        yDiff = y > _y ? (y - _y) : (_y - y);
 80007a2:	b2b8      	uxth	r0, r7
 80007a4:	42ba      	cmp	r2, r7
 80007a6:	bf8c      	ite	hi
 80007a8:	1a10      	subhi	r0, r2, r0
 80007aa:	1a80      	subls	r0, r0, r2
        xDiff = x > _x ? (x - _x) : (_x - x);
 80007ac:	b289      	uxth	r1, r1
        yDiff = y > _y ? (y - _y) : (_y - y);
 80007ae:	b280      	uxth	r0, r0

        if (xDiff + yDiff > 5)
 80007b0:	4401      	add	r1, r0
 80007b2:	2905      	cmp	r1, #5
        {
            _x = x;
 80007b4:	bfc8      	it	gt
 80007b6:	6033      	strgt	r3, [r6, #0]
            _y = y;
        }

        /* Update the X position */
        TsState->X = _x;
 80007b8:	6833      	ldr	r3, [r6, #0]
            _y = y;
 80007ba:	bfc8      	it	gt
 80007bc:	602a      	strgt	r2, [r5, #0]
        TsState->X = _x;
 80007be:	8063      	strh	r3, [r4, #2]

        /* Update the Y position */
        TsState->Y = _y;
 80007c0:	682b      	ldr	r3, [r5, #0]
 80007c2:	80a3      	strh	r3, [r4, #4]
    }
}
 80007c4:	b003      	add	sp, #12
 80007c6:	bdf0      	pop	{r4, r5, r6, r7, pc}
        else if (y < 180)
 80007c8:	2bb3      	cmp	r3, #179	; 0xb3
            y = 180;
 80007ca:	bf9c      	itt	ls
 80007cc:	23b4      	movls	r3, #180	; 0xb4
 80007ce:	f8ad 3006 	strhls.w	r3, [sp, #6]
 80007d2:	e7bb      	b.n	800074c <_Z15BSP_TS_GetStateP15TS_StateTypeDef+0x34>
            yr = 0;
 80007d4:	2200      	movs	r2, #0
 80007d6:	e7c8      	b.n	800076a <_Z15BSP_TS_GetStateP15TS_StateTypeDef+0x52>
            x = 3800 - x;
 80007d8:	f5c3 636d 	rsb	r3, r3, #3792	; 0xed0
 80007dc:	3308      	adds	r3, #8
 80007de:	b29b      	uxth	r3, r3
        if (xr <= 0)
 80007e0:	2b0e      	cmp	r3, #14
 80007e2:	d8cc      	bhi.n	800077e <_Z15BSP_TS_GetStateP15TS_StateTypeDef+0x66>
            xr = 0;
 80007e4:	2300      	movs	r3, #0
 80007e6:	e7d3      	b.n	8000790 <_Z15BSP_TS_GetStateP15TS_StateTypeDef+0x78>
 80007e8:	20000188 	.word	0x20000188
 80007ec:	20000186 	.word	0x20000186
 80007f0:	20000184 	.word	0x20000184
 80007f4:	2000018c 	.word	0x2000018c
 80007f8:	20000190 	.word	0x20000190

080007fc <_ZN20STM32TouchController11sampleTouchERlS0_>:
{
 80007fc:	b537      	push	{r0, r1, r2, r4, r5, lr}
    BSP_TS_GetState(&state);
 80007fe:	4668      	mov	r0, sp
{
 8000800:	460d      	mov	r5, r1
 8000802:	4614      	mov	r4, r2
    BSP_TS_GetState(&state);
 8000804:	f7ff ff88 	bl	8000718 <_Z15BSP_TS_GetStateP15TS_StateTypeDef>
    if (state.TouchDetected)
 8000808:	f8bd 0000 	ldrh.w	r0, [sp]
 800080c:	b148      	cbz	r0, 8000822 <_ZN20STM32TouchController11sampleTouchERlS0_+0x26>
        x = state.X;
 800080e:	f8bd 3002 	ldrh.w	r3, [sp, #2]
 8000812:	602b      	str	r3, [r5, #0]
        y = state.Y;
 8000814:	f8bd 3004 	ldrh.w	r3, [sp, #4]
 8000818:	6023      	str	r3, [r4, #0]
        sleep_timeout_value = 60;
 800081a:	4b03      	ldr	r3, [pc, #12]	; (8000828 <_ZN20STM32TouchController11sampleTouchERlS0_+0x2c>)
 800081c:	223c      	movs	r2, #60	; 0x3c
 800081e:	601a      	str	r2, [r3, #0]
        return true;
 8000820:	2001      	movs	r0, #1
}
 8000822:	b003      	add	sp, #12
 8000824:	bd30      	pop	{r4, r5, pc}
 8000826:	bf00      	nop
 8000828:	20000014 	.word	0x20000014

0800082c <_ZN8touchgfx4GPIO3setENS0_7GPIO_IDE>:
/*
 * Sets a pin high.
 */
void GPIO::set(GPIO_ID id)
{
    switch (id)
 800082c:	b110      	cbz	r0, 8000834 <_ZN8touchgfx4GPIO3setENS0_7GPIO_IDE+0x8>
 800082e:	2802      	cmp	r0, #2
 8000830:	d009      	beq.n	8000846 <_ZN8touchgfx4GPIO3setENS0_7GPIO_IDE+0x1a>
 8000832:	4770      	bx	lr
    {
    case GPIO::VSYNC_FREQ:
#if defined(VSYNC_FREQ_GPIO_Port) && defined(VSYNC_FREQ_Pin)
        HAL_GPIO_WritePin(VSYNC_FREQ_GPIO_Port, VSYNC_FREQ_Pin, M_GPIO_PIN_SET(id));
 8000834:	4b07      	ldr	r3, [pc, #28]	; (8000854 <_ZN8touchgfx4GPIO3setENS0_7GPIO_IDE+0x28>)
 8000836:	681a      	ldr	r2, [r3, #0]
 8000838:	fab2 f282 	clz	r2, r2
 800083c:	0952      	lsrs	r2, r2, #5
 800083e:	2104      	movs	r1, #4
        HAL_GPIO_WritePin(RENDER_TIME_GPIO_Port, RENDER_TIME_Pin, M_GPIO_PIN_SET(id));
#endif
        break;
    case GPIO::FRAME_RATE:
#if defined(FRAME_RATE_GPIO_Port) && defined(FRAME_RATE_Pin)
        HAL_GPIO_WritePin(FRAME_RATE_GPIO_Port, FRAME_RATE_Pin, M_GPIO_PIN_SET(id));
 8000840:	4805      	ldr	r0, [pc, #20]	; (8000858 <_ZN8touchgfx4GPIO3setENS0_7GPIO_IDE+0x2c>)
 8000842:	f008 bff5 	b.w	8009830 <HAL_GPIO_WritePin>
 8000846:	4b03      	ldr	r3, [pc, #12]	; (8000854 <_ZN8touchgfx4GPIO3setENS0_7GPIO_IDE+0x28>)
 8000848:	689a      	ldr	r2, [r3, #8]
 800084a:	fab2 f282 	clz	r2, r2
 800084e:	0952      	lsrs	r2, r2, #5
 8000850:	2110      	movs	r1, #16
 8000852:	e7f5      	b.n	8000840 <_ZN8touchgfx4GPIO3setENS0_7GPIO_IDE+0x14>
 8000854:	20000194 	.word	0x20000194
 8000858:	40021000 	.word	0x40021000

0800085c <_ZN8touchgfx4GPIO5clearENS0_7GPIO_IDE>:
/*
 * Sets a pin low.
 */
void GPIO::clear(GPIO_ID id)
{
    switch (id)
 800085c:	b110      	cbz	r0, 8000864 <_ZN8touchgfx4GPIO5clearENS0_7GPIO_IDE+0x8>
 800085e:	2802      	cmp	r0, #2
 8000860:	d009      	beq.n	8000876 <_ZN8touchgfx4GPIO5clearENS0_7GPIO_IDE+0x1a>
 8000862:	4770      	bx	lr
    {
    case GPIO::VSYNC_FREQ:
#if defined(VSYNC_FREQ_GPIO_Port) && defined(VSYNC_FREQ_Pin)
        HAL_GPIO_WritePin(VSYNC_FREQ_GPIO_Port, VSYNC_FREQ_Pin, M_GPIO_PIN_RESET(id));
 8000864:	4b07      	ldr	r3, [pc, #28]	; (8000884 <_ZN8touchgfx4GPIO5clearENS0_7GPIO_IDE+0x28>)
 8000866:	681a      	ldr	r2, [r3, #0]
 8000868:	3a00      	subs	r2, #0
 800086a:	bf18      	it	ne
 800086c:	2201      	movne	r2, #1
 800086e:	2104      	movs	r1, #4
        HAL_GPIO_WritePin(RENDER_TIME_GPIO_Port, RENDER_TIME_Pin, M_GPIO_PIN_RESET(id));
#endif
        break;
    case GPIO::FRAME_RATE:
#if defined(FRAME_RATE_GPIO_Port) && defined(FRAME_RATE_Pin)
        HAL_GPIO_WritePin(FRAME_RATE_GPIO_Port, FRAME_RATE_Pin, M_GPIO_PIN_RESET(id));
 8000870:	4805      	ldr	r0, [pc, #20]	; (8000888 <_ZN8touchgfx4GPIO5clearENS0_7GPIO_IDE+0x2c>)
 8000872:	f008 bfdd 	b.w	8009830 <HAL_GPIO_WritePin>
 8000876:	4b03      	ldr	r3, [pc, #12]	; (8000884 <_ZN8touchgfx4GPIO5clearENS0_7GPIO_IDE+0x28>)
 8000878:	689a      	ldr	r2, [r3, #8]
 800087a:	3a00      	subs	r2, #0
 800087c:	bf18      	it	ne
 800087e:	2201      	movne	r2, #1
 8000880:	2110      	movs	r1, #16
 8000882:	e7f5      	b.n	8000870 <_ZN8touchgfx4GPIO5clearENS0_7GPIO_IDE+0x14>
 8000884:	20000194 	.word	0x20000194
 8000888:	40021000 	.word	0x40021000

0800088c <_ZN8touchgfx4GPIO6toggleENS0_7GPIO_IDE>:
/*
 * Toggles a pin.
 */
void GPIO::toggle(GPIO_ID id)
{
    switch (id)
 800088c:	b110      	cbz	r0, 8000894 <_ZN8touchgfx4GPIO6toggleENS0_7GPIO_IDE+0x8>
 800088e:	2802      	cmp	r0, #2
 8000890:	d004      	beq.n	800089c <_ZN8touchgfx4GPIO6toggleENS0_7GPIO_IDE+0x10>
 8000892:	4770      	bx	lr
    {
    case GPIO::VSYNC_FREQ:
#if defined(VSYNC_FREQ_GPIO_Port) && defined(VSYNC_FREQ_Pin)
        HAL_GPIO_TogglePin(VSYNC_FREQ_GPIO_Port, VSYNC_FREQ_Pin);
 8000894:	2104      	movs	r1, #4
        HAL_GPIO_TogglePin(RENDER_TIME_GPIO_Port, RENDER_TIME_Pin);
#endif
        break;
    case GPIO::FRAME_RATE:
#if defined(FRAME_RATE_GPIO_Port) && defined(FRAME_RATE_Pin)
        HAL_GPIO_TogglePin(FRAME_RATE_GPIO_Port, FRAME_RATE_Pin);
 8000896:	4802      	ldr	r0, [pc, #8]	; (80008a0 <_ZN8touchgfx4GPIO6toggleENS0_7GPIO_IDE+0x14>)
 8000898:	f008 bfce 	b.w	8009838 <HAL_GPIO_TogglePin>
 800089c:	2110      	movs	r1, #16
 800089e:	e7fa      	b.n	8000896 <_ZN8touchgfx4GPIO6toggleENS0_7GPIO_IDE+0xa>
 80008a0:	40021000 	.word	0x40021000

080008a4 <_ZN8touchgfx4GPIO3getENS0_7GPIO_IDE>:

/*
 * Gets the state of a pin.
 */
bool GPIO::get(GPIO_ID id)
{
 80008a4:	b508      	push	{r3, lr}
    GPIO_PinState bitstatus = GPIO_PIN_RESET;
    switch (id)
 80008a6:	b130      	cbz	r0, 80008b6 <_ZN8touchgfx4GPIO3getENS0_7GPIO_IDE+0x12>
 80008a8:	2802      	cmp	r0, #2
 80008aa:	d009      	beq.n	80008c0 <_ZN8touchgfx4GPIO3getENS0_7GPIO_IDE+0x1c>
 80008ac:	2000      	movs	r0, #0
        bitstatus = HAL_GPIO_ReadPin(MCU_ACTIVE_GPIO_Port, MCU_ACTIVE_Pin);
#endif
        break;
    }
    return (bitstatus == GPIO_PIN_SET);
}
 80008ae:	1e43      	subs	r3, r0, #1
 80008b0:	4258      	negs	r0, r3
 80008b2:	4158      	adcs	r0, r3
 80008b4:	bd08      	pop	{r3, pc}
        bitstatus = HAL_GPIO_ReadPin(VSYNC_FREQ_GPIO_Port, VSYNC_FREQ_Pin);
 80008b6:	2104      	movs	r1, #4
        bitstatus = HAL_GPIO_ReadPin(FRAME_RATE_GPIO_Port, FRAME_RATE_Pin);
 80008b8:	4802      	ldr	r0, [pc, #8]	; (80008c4 <_ZN8touchgfx4GPIO3getENS0_7GPIO_IDE+0x20>)
 80008ba:	f008 ffb3 	bl	8009824 <HAL_GPIO_ReadPin>
        break;
 80008be:	e7f6      	b.n	80008ae <_ZN8touchgfx4GPIO3getENS0_7GPIO_IDE+0xa>
        bitstatus = HAL_GPIO_ReadPin(FRAME_RATE_GPIO_Port, FRAME_RATE_Pin);
 80008c0:	2110      	movs	r1, #16
 80008c2:	e7f9      	b.n	80008b8 <_ZN8touchgfx4GPIO3getENS0_7GPIO_IDE+0x14>
 80008c4:	40021000 	.word	0x40021000

080008c8 <_ZN8touchgfx4GPIO4initEv>:
{
 80008c8:	b570      	push	{r4, r5, r6, lr}
 80008ca:	4d08      	ldr	r5, [pc, #32]	; (80008ec <_ZN8touchgfx4GPIO4initEv+0x24>)
    for (int id = 0; id <= 4; id++)
 80008cc:	2400      	movs	r4, #0
                GPIO_InvertedLevels[id] = 1;
 80008ce:	2601      	movs	r6, #1
        if (GPIO::get(static_cast<GPIO_ID>(id)))
 80008d0:	b2e0      	uxtb	r0, r4
 80008d2:	f7ff ffe7 	bl	80008a4 <_ZN8touchgfx4GPIO3getENS0_7GPIO_IDE>
 80008d6:	b118      	cbz	r0, 80008e0 <_ZN8touchgfx4GPIO4initEv+0x18>
            if (GPIO_InvertedLevels[id] != 1)
 80008d8:	682b      	ldr	r3, [r5, #0]
 80008da:	2b01      	cmp	r3, #1
                GPIO_InvertedLevels[id] = 1;
 80008dc:	bf18      	it	ne
 80008de:	602e      	strne	r6, [r5, #0]
    for (int id = 0; id <= 4; id++)
 80008e0:	3401      	adds	r4, #1
 80008e2:	2c05      	cmp	r4, #5
 80008e4:	f105 0504 	add.w	r5, r5, #4
 80008e8:	d1f2      	bne.n	80008d0 <_ZN8touchgfx4GPIO4initEv+0x8>
}
 80008ea:	bd70      	pop	{r4, r5, r6, pc}
 80008ec:	20000194 	.word	0x20000194

080008f0 <_ZN8touchgfx3HAL21setDisplayOrientationENS_18DisplayOrientationE>:
     * @note A screen transition must occur before this takes effect!
     */
    virtual void setDisplayOrientation(DisplayOrientation orientation)
    {
        requestedOrientation = orientation;
        displayOrientationChangeRequested = true;
 80008f0:	2301      	movs	r3, #1
        requestedOrientation = orientation;
 80008f2:	f880 1078 	strb.w	r1, [r0, #120]	; 0x78
        displayOrientationChangeRequested = true;
 80008f6:	f880 3079 	strb.w	r3, [r0, #121]	; 0x79
    }
 80008fa:	4770      	bx	lr

080008fc <_ZN8touchgfx3HAL9sampleKeyERh>:
     */
    virtual bool sampleKey(uint8_t& key)
    {
        (void)key; // Unused variable
        return false;
    }
 80008fc:	2000      	movs	r0, #0
 80008fe:	4770      	bx	lr

08000900 <_ZN8touchgfx3HAL19setAnimationStorageEPv>:
     * @see setFrameBufferStartAddresses
     */
    virtual void setAnimationStorage(void* animationStorage)
    {
        frameBuffer2 = reinterpret_cast<uint16_t*>(animationStorage);
        USE_ANIMATION_STORAGE = animationStorage != 0;
 8000900:	4b03      	ldr	r3, [pc, #12]	; (8000910 <_ZN8touchgfx3HAL19setAnimationStorageEPv+0x10>)
        frameBuffer2 = reinterpret_cast<uint16_t*>(animationStorage);
 8000902:	6441      	str	r1, [r0, #68]	; 0x44
        USE_ANIMATION_STORAGE = animationStorage != 0;
 8000904:	3900      	subs	r1, #0
 8000906:	bf18      	it	ne
 8000908:	2101      	movne	r1, #1
 800090a:	7019      	strb	r1, [r3, #0]
    }
 800090c:	4770      	bx	lr
 800090e:	bf00      	nop
 8000910:	20012f23 	.word	0x20012f23

08000914 <_ZNK8touchgfx3HAL18getFlashDataReaderEv>:
     * @return the FlashDataReader.
     */
    virtual FlashDataReader* getFlashDataReader() const
    {
        return 0;
    }
 8000914:	2000      	movs	r0, #0
 8000916:	4770      	bx	lr

08000918 <_ZN8touchgfx3HAL9taskDelayEt>:
     *
     * @see registerTaskDelayFunction
     */
    virtual void taskDelay(uint16_t ms)
    {
        if (taskDelayFunc)
 8000918:	6b83      	ldr	r3, [r0, #56]	; 0x38
 800091a:	b10b      	cbz	r3, 8000920 <_ZN8touchgfx3HAL9taskDelayEt+0x8>
        {
            taskDelayFunc(ms);
 800091c:	4608      	mov	r0, r1
 800091e:	4718      	bx	r3
        }
    }
 8000920:	4770      	bx	lr

08000922 <_ZN8touchgfx3HAL17getTFTCurrentLineEv>:
     *         implemented".
     */
    virtual uint16_t getTFTCurrentLine()
    {
        return 0xFFFFu;
    }
 8000922:	f64f 70ff 	movw	r0, #65535	; 0xffff
 8000926:	4770      	bx	lr

08000928 <_ZN8touchgfx3HAL10getDMATypeEv>:
     *
     * @return a DMAType value of the concrete DMA implementation.
     */
    virtual DMAType getDMAType()
    {
        return dma.getDMAType();
 8000928:	6840      	ldr	r0, [r0, #4]
 800092a:	6803      	ldr	r3, [r0, #0]
 800092c:	699b      	ldr	r3, [r3, #24]
 800092e:	4718      	bx	r3

08000930 <_ZN8touchgfx3HAL15InvalidateCacheEv>:
     * Called by setRenderingMethod when changing rendering method
     * from Hardware to Software indicating the cache should be invalidated.
     */
    virtual void InvalidateCache()
    {
    }
 8000930:	4770      	bx	lr

08000932 <_ZN8touchgfx3HAL10FlushCacheEv>:
     * Called by setRenderingMethod when changing rendering method
     * from Software to Hardware indicating the cache should be invalidated.
     */
    virtual void FlushCache()
    {
    }
 8000932:	4770      	bx	lr

08000934 <_ZN11TouchGFXHALD1Ev>:
 *
 * @brief HAL implementation for TouchGFX.
 *
 * @sa HAL
 */
class TouchGFXHAL : public TouchGFXGeneratedHAL
 8000934:	4770      	bx	lr
	...

08000938 <_ZN11TouchGFXHAL10initializeEv>:
LOCATION_PRAGMA("TouchGFX_Framebuffer")
uint32_t animationStorage[(240 * 320 * 2 + 3) / 4] LOCATION_ATTRIBUTE("TouchGFX_Framebuffer");
}

void TouchGFXHAL::initialize()
{
 8000938:	b510      	push	{r4, lr}
 800093a:	4604      	mov	r4, r0
    //
    // To overwrite the generated implementation, omit call to parent function
    // and implemented needed functionality here.
    // Please note, HAL::initialize() must be called to initialize the framework.

    TouchGFXGeneratedHAL::initialize();
 800093c:	f000 fb4e 	bl	8000fdc <_ZN20TouchGFXGeneratedHAL10initializeEv>

    // Add animation storage
    setAnimationStorage((void*)animationStorage);
 8000940:	6823      	ldr	r3, [r4, #0]
 8000942:	4903      	ldr	r1, [pc, #12]	; (8000950 <_ZN11TouchGFXHAL10initializeEv+0x18>)
 8000944:	f8d3 308c 	ldr.w	r3, [r3, #140]	; 0x8c
 8000948:	4620      	mov	r0, r4
}
 800094a:	e8bd 4010 	ldmia.w	sp!, {r4, lr}
    setAnimationStorage((void*)animationStorage);
 800094e:	4718      	bx	r3
 8000950:	d0000000 	.word	0xd0000000

08000954 <_ZN11TouchGFXHAL9taskEntryEv>:

void TouchGFXHAL::taskEntry()
{
 8000954:	b508      	push	{r3, lr}
    enableLCDControllerInterrupt();
 8000956:	6803      	ldr	r3, [r0, #0]
{
 8000958:	4604      	mov	r4, r0
    enableLCDControllerInterrupt();
 800095a:	f8d3 3080 	ldr.w	r3, [r3, #128]	; 0x80
 800095e:	4798      	blx	r3
    enableInterrupts();
 8000960:	6823      	ldr	r3, [r4, #0]
 8000962:	4620      	mov	r0, r4
 8000964:	6f9b      	ldr	r3, [r3, #120]	; 0x78
 8000966:	4798      	blx	r3

    OSWrappers::waitForVSync();
 8000968:	f000 f8ec 	bl	8000b44 <_ZN8touchgfx10OSWrappers12waitForVSyncEv>
    backPorchExited();
 800096c:	6823      	ldr	r3, [r4, #0]
 800096e:	4620      	mov	r0, r4
 8000970:	6f1b      	ldr	r3, [r3, #112]	; 0x70
 8000972:	4798      	blx	r3

    LCD_IO_WriteReg(0x29);
 8000974:	2029      	movs	r0, #41	; 0x29
 8000976:	f001 f84d 	bl	8001a14 <LCD_IO_WriteReg>

    for (;;)
    {
        OSWrappers::waitForVSync();
 800097a:	f000 f8e3 	bl	8000b44 <_ZN8touchgfx10OSWrappers12waitForVSyncEv>
        backPorchExited();
 800097e:	6823      	ldr	r3, [r4, #0]
 8000980:	4620      	mov	r0, r4
 8000982:	6f1b      	ldr	r3, [r3, #112]	; 0x70
 8000984:	4798      	blx	r3
    for (;;)
 8000986:	e7f8      	b.n	800097a <_ZN11TouchGFXHAL9taskEntryEv+0x26>

08000988 <_ZN8touchgfx3HAL15backPorchExitedEv>:
    virtual void backPorchExited()
 8000988:	b510      	push	{r4, lr}
 800098a:	4604      	mov	r4, r0
        swapFrameBuffers();
 800098c:	f010 fa62 	bl	8010e54 <_ZN8touchgfx3HAL16swapFrameBuffersEv>
        tick();
 8000990:	6823      	ldr	r3, [r4, #0]
 8000992:	4620      	mov	r0, r4
 8000994:	f8d3 30ac 	ldr.w	r3, [r3, #172]	; 0xac
    }
 8000998:	e8bd 4010 	ldmia.w	sp!, {r4, lr}
        tick();
 800099c:	4718      	bx	r3

0800099e <_ZNK11TouchGFXHAL17getTFTFrameBufferEv>:
    // Calling parent implementation of getTFTFrameBuffer().
    //
    // To overwrite the generated implementation, omit call to parent function
    // and implemented needed functionality here.

    return TouchGFXGeneratedHAL::getTFTFrameBuffer();
 800099e:	f000 bb0f 	b.w	8000fc0 <_ZNK20TouchGFXGeneratedHAL17getTFTFrameBufferEv>

080009a2 <_ZN11TouchGFXHAL17setTFTFrameBufferEPt>:
    // Calling parent implementation of setTFTFrameBuffer(uint16_t* address).
    //
    // To overwrite the generated implementation, omit call to parent function
    // and implemented needed functionality here.

    TouchGFXGeneratedHAL::setTFTFrameBuffer(address);
 80009a2:	f000 bb13 	b.w	8000fcc <_ZN20TouchGFXGeneratedHAL17setTFTFrameBufferEPt>

080009a6 <_ZN11TouchGFXHAL16flushFrameBufferERKN8touchgfx4RectE>:
    // To overwrite the generated implementation, omit call to parent function
    // and implemented needed functionality here.
    // Please note, HAL::flushFrameBuffer(const touchgfx::Rect& rect) must
    // be called to notify the touchgfx framework that flush has been performed.

    TouchGFXGeneratedHAL::flushFrameBuffer(rect);
 80009a6:	f000 bb37 	b.w	8001018 <_ZN20TouchGFXGeneratedHAL16flushFrameBufferERKN8touchgfx4RectE>

080009aa <_ZN11TouchGFXHAL19configureInterruptsEv>:
    // Calling parent implementation of configureInterrupts().
    //
    // To overwrite the generated implementation, omit call to parent function
    // and implemented needed functionality here.

    TouchGFXGeneratedHAL::configureInterrupts();
 80009aa:	f000 badf 	b.w	8000f6c <_ZN20TouchGFXGeneratedHAL19configureInterruptsEv>

080009ae <_ZN11TouchGFXHAL16enableInterruptsEv>:
    // Calling parent implementation of enableInterrupts().
    //
    // To overwrite the generated implementation, omit call to parent function
    // and implemented needed functionality here.

    TouchGFXGeneratedHAL::enableInterrupts();
 80009ae:	f000 bae5 	b.w	8000f7c <_ZN20TouchGFXGeneratedHAL16enableInterruptsEv>

080009b2 <_ZN11TouchGFXHAL17disableInterruptsEv>:
    // Calling parent implementation of disableInterrupts().
    //
    // To overwrite the generated implementation, omit call to parent function
    // and implemented needed functionality here.

    TouchGFXGeneratedHAL::disableInterrupts();
 80009b2:	f000 bb3d 	b.w	8001030 <_ZN20TouchGFXGeneratedHAL17disableInterruptsEv>

080009b6 <_ZN11TouchGFXHAL28enableLCDControllerInterruptEv>:
    // Calling parent implementation of enableLCDControllerInterrupt().
    //
    // To overwrite the generated implementation, omit call to parent function
    // and implemented needed functionality here.

    TouchGFXGeneratedHAL::enableLCDControllerInterrupt();
 80009b6:	f000 bae9 	b.w	8000f8c <_ZN20TouchGFXGeneratedHAL28enableLCDControllerInterruptEv>

080009ba <_ZN11TouchGFXHAL16flushFrameBufferEv>:
     * Rect version.
     * @see HAL::flushFrameBuffer
     */
    virtual void flushFrameBuffer()
    {
        HAL::flushFrameBuffer();
 80009ba:	f00f bcb7 	b.w	801032c <_ZN8touchgfx3HAL16flushFrameBufferEv>

080009be <_ZN11TouchGFXHALD0Ev>:
 80009be:	b510      	push	{r4, lr}
 80009c0:	217c      	movs	r1, #124	; 0x7c
 80009c2:	4604      	mov	r4, r0
 80009c4:	f028 fd2b 	bl	802941e <_ZdlPvj>
 80009c8:	4620      	mov	r0, r4
 80009ca:	bd10      	pop	{r4, pc}

080009cc <_ZN8touchgfx3HAL11getBlitCapsEv>:
        if (useDMAAcceleration)
 80009cc:	f890 307a 	ldrb.w	r3, [r0, #122]	; 0x7a
 80009d0:	b11b      	cbz	r3, 80009da <_ZN8touchgfx3HAL11getBlitCapsEv+0xe>
            return dma.getBlitCaps();
 80009d2:	6840      	ldr	r0, [r0, #4]
 80009d4:	6803      	ldr	r3, [r0, #0]
 80009d6:	681b      	ldr	r3, [r3, #0]
 80009d8:	4718      	bx	r3
    }
 80009da:	4618      	mov	r0, r3
 80009dc:	4770      	bx	lr
	...

080009e0 <_ZN8touchgfx3HAL31performDisplayOrientationChangeEv>:
    virtual void performDisplayOrientationChange()
 80009e0:	b510      	push	{r4, lr}
        if (requestedOrientation != nativeDisplayOrientation)
 80009e2:	f890 1034 	ldrb.w	r1, [r0, #52]	; 0x34
 80009e6:	f890 4078 	ldrb.w	r4, [r0, #120]	; 0x78
            if (DISPLAY_ROTATION == rotate0)
 80009ea:	4b0c      	ldr	r3, [pc, #48]	; (8000a1c <_ZN8touchgfx3HAL31performDisplayOrientationChangeEv+0x3c>)
        if (requestedOrientation != nativeDisplayOrientation)
 80009ec:	428c      	cmp	r4, r1
            if (DISPLAY_ROTATION == rotate0)
 80009ee:	781a      	ldrb	r2, [r3, #0]
        if (requestedOrientation != nativeDisplayOrientation)
 80009f0:	d009      	beq.n	8000a06 <_ZN8touchgfx3HAL31performDisplayOrientationChangeEv+0x26>
            if (DISPLAY_ROTATION == rotate0)
 80009f2:	b93a      	cbnz	r2, 8000a04 <_ZN8touchgfx3HAL31performDisplayOrientationChangeEv+0x24>
                DISPLAY_HEIGHT = DISPLAY_WIDTH;
 80009f4:	4a0a      	ldr	r2, [pc, #40]	; (8000a20 <_ZN8touchgfx3HAL31performDisplayOrientationChangeEv+0x40>)
                const uint16_t tmp = DISPLAY_HEIGHT;
 80009f6:	490b      	ldr	r1, [pc, #44]	; (8000a24 <_ZN8touchgfx3HAL31performDisplayOrientationChangeEv+0x44>)
                DISPLAY_HEIGHT = DISPLAY_WIDTH;
 80009f8:	8814      	ldrh	r4, [r2, #0]
                const uint16_t tmp = DISPLAY_HEIGHT;
 80009fa:	8808      	ldrh	r0, [r1, #0]
                DISPLAY_WIDTH = tmp;
 80009fc:	8010      	strh	r0, [r2, #0]
                DISPLAY_HEIGHT = DISPLAY_WIDTH;
 80009fe:	800c      	strh	r4, [r1, #0]
                DISPLAY_ROTATION = rotate90;
 8000a00:	2201      	movs	r2, #1
            DISPLAY_ROTATION = rotate0;
 8000a02:	701a      	strb	r2, [r3, #0]
    }
 8000a04:	bd10      	pop	{r4, pc}
        else if (DISPLAY_ROTATION != rotate0)
 8000a06:	2a00      	cmp	r2, #0
 8000a08:	d0fc      	beq.n	8000a04 <_ZN8touchgfx3HAL31performDisplayOrientationChangeEv+0x24>
            DISPLAY_HEIGHT = DISPLAY_WIDTH;
 8000a0a:	4a05      	ldr	r2, [pc, #20]	; (8000a20 <_ZN8touchgfx3HAL31performDisplayOrientationChangeEv+0x40>)
            const uint16_t tmp = DISPLAY_HEIGHT;
 8000a0c:	4905      	ldr	r1, [pc, #20]	; (8000a24 <_ZN8touchgfx3HAL31performDisplayOrientationChangeEv+0x44>)
            DISPLAY_HEIGHT = DISPLAY_WIDTH;
 8000a0e:	8814      	ldrh	r4, [r2, #0]
            const uint16_t tmp = DISPLAY_HEIGHT;
 8000a10:	8808      	ldrh	r0, [r1, #0]
            DISPLAY_WIDTH = tmp;
 8000a12:	8010      	strh	r0, [r2, #0]
            DISPLAY_HEIGHT = DISPLAY_WIDTH;
 8000a14:	800c      	strh	r4, [r1, #0]
            DISPLAY_ROTATION = rotate0;
 8000a16:	2200      	movs	r2, #0
 8000a18:	e7f3      	b.n	8000a02 <_ZN8touchgfx3HAL31performDisplayOrientationChangeEv+0x22>
 8000a1a:	bf00      	nop
 8000a1c:	20012f1c 	.word	0x20012f1c
 8000a20:	20012f18 	.word	0x20012f18
 8000a24:	20012f1a 	.word	0x20012f1a

08000a28 <_ZN8touchgfx3HAL28setFrameBufferStartAddressesEPvS1_S1_>:
    virtual void setFrameBufferStartAddresses(void* frameBuffer, void* doubleBuffer, void* animationStorage)
 8000a28:	b570      	push	{r4, r5, r6, lr}
 8000a2a:	460d      	mov	r5, r1
 8000a2c:	4619      	mov	r1, r3
        assert(frameBuffer != 0 && "A framebuffer address must be set");
 8000a2e:	b935      	cbnz	r5, 8000a3e <_ZN8touchgfx3HAL28setFrameBufferStartAddressesEPvS1_S1_+0x16>
 8000a30:	4b09      	ldr	r3, [pc, #36]	; (8000a58 <_ZN8touchgfx3HAL28setFrameBufferStartAddressesEPvS1_S1_+0x30>)
 8000a32:	4a0a      	ldr	r2, [pc, #40]	; (8000a5c <_ZN8touchgfx3HAL28setFrameBufferStartAddressesEPvS1_S1_+0x34>)
 8000a34:	480a      	ldr	r0, [pc, #40]	; (8000a60 <_ZN8touchgfx3HAL28setFrameBufferStartAddressesEPvS1_S1_+0x38>)
 8000a36:	f240 21d2 	movw	r1, #722	; 0x2d2
 8000a3a:	f029 fb03 	bl	802a044 <__assert_func>
        frameBuffer1 = reinterpret_cast<uint16_t*>(doubleBuffer);
 8000a3e:	e9c0 520f 	strd	r5, r2, [r0, #60]	; 0x3c
        USE_DOUBLE_BUFFERING = doubleBuffer != 0;
 8000a42:	4b08      	ldr	r3, [pc, #32]	; (8000a64 <_ZN8touchgfx3HAL28setFrameBufferStartAddressesEPvS1_S1_+0x3c>)
 8000a44:	3a00      	subs	r2, #0
 8000a46:	bf18      	it	ne
 8000a48:	2201      	movne	r2, #1
 8000a4a:	701a      	strb	r2, [r3, #0]
        setAnimationStorage(animationStorage);
 8000a4c:	6803      	ldr	r3, [r0, #0]
    }
 8000a4e:	e8bd 4070 	ldmia.w	sp!, {r4, r5, r6, lr}
        setAnimationStorage(animationStorage);
 8000a52:	f8d3 308c 	ldr.w	r3, [r3, #140]	; 0x8c
 8000a56:	4718      	bx	r3
 8000a58:	0802b1b4 	.word	0x0802b1b4
 8000a5c:	0802b1ec 	.word	0x0802b1ec
 8000a60:	0802b23a 	.word	0x0802b23a
 8000a64:	20012f22 	.word	0x20012f22

08000a68 <_ZN8touchgfx3HAL18setFrameBufferSizeEtt>:
    virtual void setFrameBufferSize(uint16_t width, uint16_t height)
 8000a68:	b508      	push	{r3, lr}
        assert(width >= DISPLAY_WIDTH && height >= DISPLAY_HEIGHT && "Framebuffer cannot be smaller than display");
 8000a6a:	4b09      	ldr	r3, [pc, #36]	; (8000a90 <_ZN8touchgfx3HAL18setFrameBufferSizeEtt+0x28>)
 8000a6c:	881b      	ldrh	r3, [r3, #0]
 8000a6e:	428b      	cmp	r3, r1
 8000a70:	d803      	bhi.n	8000a7a <_ZN8touchgfx3HAL18setFrameBufferSizeEtt+0x12>
 8000a72:	4b08      	ldr	r3, [pc, #32]	; (8000a94 <_ZN8touchgfx3HAL18setFrameBufferSizeEtt+0x2c>)
 8000a74:	881b      	ldrh	r3, [r3, #0]
 8000a76:	4293      	cmp	r3, r2
 8000a78:	d905      	bls.n	8000a86 <_ZN8touchgfx3HAL18setFrameBufferSizeEtt+0x1e>
 8000a7a:	4b07      	ldr	r3, [pc, #28]	; (8000a98 <_ZN8touchgfx3HAL18setFrameBufferSizeEtt+0x30>)
 8000a7c:	4a07      	ldr	r2, [pc, #28]	; (8000a9c <_ZN8touchgfx3HAL18setFrameBufferSizeEtt+0x34>)
 8000a7e:	4808      	ldr	r0, [pc, #32]	; (8000aa0 <_ZN8touchgfx3HAL18setFrameBufferSizeEtt+0x38>)
 8000a80:	219e      	movs	r1, #158	; 0x9e
 8000a82:	f029 fadf 	bl	802a044 <__assert_func>
        FRAME_BUFFER_WIDTH = width;
 8000a86:	4b07      	ldr	r3, [pc, #28]	; (8000aa4 <_ZN8touchgfx3HAL18setFrameBufferSizeEtt+0x3c>)
 8000a88:	8019      	strh	r1, [r3, #0]
        FRAME_BUFFER_HEIGHT = height;
 8000a8a:	4b07      	ldr	r3, [pc, #28]	; (8000aa8 <_ZN8touchgfx3HAL18setFrameBufferSizeEtt+0x40>)
 8000a8c:	801a      	strh	r2, [r3, #0]
    }
 8000a8e:	bd08      	pop	{r3, pc}
 8000a90:	20012f18 	.word	0x20012f18
 8000a94:	20012f1a 	.word	0x20012f1a
 8000a98:	0802b27f 	.word	0x0802b27f
 8000a9c:	0802b2e2 	.word	0x0802b2e2
 8000aa0:	0802b23a 	.word	0x0802b23a
 8000aa4:	20012f1e 	.word	0x20012f1e
 8000aa8:	20012f20 	.word	0x20012f20

08000aac <_ZN8touchgfx10OSWrappers10initializeEv>:
 * Initialize frame buffer semaphore and queue/mutex for VSYNC signal.
 */
void OSWrappers::initialize()
{
    // Create a queue of length 1
    frame_buffer_sem = osSemaphoreNew(1, 1, NULL); // Binary semaphore
 8000aac:	2101      	movs	r1, #1
{
 8000aae:	b508      	push	{r3, lr}
    frame_buffer_sem = osSemaphoreNew(1, 1, NULL); // Binary semaphore
 8000ab0:	2200      	movs	r2, #0
 8000ab2:	4608      	mov	r0, r1
 8000ab4:	f00c fa40 	bl	800cf38 <osSemaphoreNew>
 8000ab8:	4b0a      	ldr	r3, [pc, #40]	; (8000ae4 <_ZN8touchgfx10OSWrappers10initializeEv+0x38>)
 8000aba:	6018      	str	r0, [r3, #0]
    assert((frame_buffer_sem != NULL) && "Creation of framebuffer semaphore failed");
 8000abc:	b928      	cbnz	r0, 8000aca <_ZN8touchgfx10OSWrappers10initializeEv+0x1e>
 8000abe:	4b0a      	ldr	r3, [pc, #40]	; (8000ae8 <_ZN8touchgfx10OSWrappers10initializeEv+0x3c>)
 8000ac0:	4a0a      	ldr	r2, [pc, #40]	; (8000aec <_ZN8touchgfx10OSWrappers10initializeEv+0x40>)
 8000ac2:	2128      	movs	r1, #40	; 0x28

    // Create a queue of length 1
    vsync_queue = osMessageQueueNew(1, 4, NULL);
    assert((vsync_queue != NULL) && "Creation of vsync message queue failed");
 8000ac4:	480a      	ldr	r0, [pc, #40]	; (8000af0 <_ZN8touchgfx10OSWrappers10initializeEv+0x44>)
 8000ac6:	f029 fabd 	bl	802a044 <__assert_func>
    vsync_queue = osMessageQueueNew(1, 4, NULL);
 8000aca:	2200      	movs	r2, #0
 8000acc:	2104      	movs	r1, #4
 8000ace:	2001      	movs	r0, #1
 8000ad0:	f00c fae6 	bl	800d0a0 <osMessageQueueNew>
 8000ad4:	4b07      	ldr	r3, [pc, #28]	; (8000af4 <_ZN8touchgfx10OSWrappers10initializeEv+0x48>)
 8000ad6:	6018      	str	r0, [r3, #0]
    assert((vsync_queue != NULL) && "Creation of vsync message queue failed");
 8000ad8:	b918      	cbnz	r0, 8000ae2 <_ZN8touchgfx10OSWrappers10initializeEv+0x36>
 8000ada:	4b07      	ldr	r3, [pc, #28]	; (8000af8 <_ZN8touchgfx10OSWrappers10initializeEv+0x4c>)
 8000adc:	4a03      	ldr	r2, [pc, #12]	; (8000aec <_ZN8touchgfx10OSWrappers10initializeEv+0x40>)
 8000ade:	212c      	movs	r1, #44	; 0x2c
 8000ae0:	e7f0      	b.n	8000ac4 <_ZN8touchgfx10OSWrappers10initializeEv+0x18>
}
 8000ae2:	bd08      	pop	{r3, pc}
 8000ae4:	200001a8 	.word	0x200001a8
 8000ae8:	0802b400 	.word	0x0802b400
 8000aec:	0802b449 	.word	0x0802b449
 8000af0:	0802b478 	.word	0x0802b478
 8000af4:	200001a4 	.word	0x200001a4
 8000af8:	0802b4f2 	.word	0x0802b4f2

08000afc <_ZN8touchgfx10OSWrappers24takeFrameBufferSemaphoreEv>:
/*
 * Take the frame buffer semaphore. Blocks until semaphore is available.
 */
void OSWrappers::takeFrameBufferSemaphore()
{
    osSemaphoreAcquire(frame_buffer_sem, osWaitForever);
 8000afc:	4b02      	ldr	r3, [pc, #8]	; (8000b08 <_ZN8touchgfx10OSWrappers24takeFrameBufferSemaphoreEv+0xc>)
 8000afe:	f04f 31ff 	mov.w	r1, #4294967295
 8000b02:	6818      	ldr	r0, [r3, #0]
 8000b04:	f00c ba6c 	b.w	800cfe0 <osSemaphoreAcquire>
 8000b08:	200001a8 	.word	0x200001a8

08000b0c <_ZN8touchgfx10OSWrappers24giveFrameBufferSemaphoreEv>:
/*
 * Release the frame buffer semaphore.
 */
void OSWrappers::giveFrameBufferSemaphore()
{
    osSemaphoreRelease(frame_buffer_sem);
 8000b0c:	4b01      	ldr	r3, [pc, #4]	; (8000b14 <_ZN8touchgfx10OSWrappers24giveFrameBufferSemaphoreEv+0x8>)
 8000b0e:	6818      	ldr	r0, [r3, #0]
 8000b10:	f00c ba9a 	b.w	800d048 <osSemaphoreRelease>
 8000b14:	200001a8 	.word	0x200001a8

08000b18 <_ZN8touchgfx10OSWrappers27tryTakeFrameBufferSemaphoreEv>:
 * Note must return immediately! This function does not care who has the taken the semaphore,
 * it only serves to make sure that the semaphore is taken by someone.
 */
void OSWrappers::tryTakeFrameBufferSemaphore()
{
    osSemaphoreAcquire(frame_buffer_sem, 0);
 8000b18:	4b02      	ldr	r3, [pc, #8]	; (8000b24 <_ZN8touchgfx10OSWrappers27tryTakeFrameBufferSemaphoreEv+0xc>)
 8000b1a:	2100      	movs	r1, #0
 8000b1c:	6818      	ldr	r0, [r3, #0]
 8000b1e:	f00c ba5f 	b.w	800cfe0 <osSemaphoreAcquire>
 8000b22:	bf00      	nop
 8000b24:	200001a8 	.word	0x200001a8

08000b28 <_ZN8touchgfx10OSWrappers31giveFrameBufferSemaphoreFromISREv>:
 8000b28:	f7ff bff0 	b.w	8000b0c <_ZN8touchgfx10OSWrappers24giveFrameBufferSemaphoreEv>

08000b2c <_ZN8touchgfx10OSWrappers11signalVSyncEv>:
 * Note This function is called from an ISR, and should (depending on OS) trigger a
 * scheduling.
 */
void OSWrappers::signalVSync()
{
    osMessageQueuePut(vsync_queue, &dummy, 0, 0);
 8000b2c:	4803      	ldr	r0, [pc, #12]	; (8000b3c <_ZN8touchgfx10OSWrappers11signalVSyncEv+0x10>)
 8000b2e:	4904      	ldr	r1, [pc, #16]	; (8000b40 <_ZN8touchgfx10OSWrappers11signalVSyncEv+0x14>)
 8000b30:	6800      	ldr	r0, [r0, #0]
 8000b32:	2300      	movs	r3, #0
 8000b34:	461a      	mov	r2, r3
 8000b36:	f00c baed 	b.w	800d114 <osMessageQueuePut>
 8000b3a:	bf00      	nop
 8000b3c:	200001a4 	.word	0x200001a4
 8000b40:	20000004 	.word	0x20000004

08000b44 <_ZN8touchgfx10OSWrappers12waitForVSyncEv>:
 *
 * Note This function must first clear the mutex/queue and then wait for the next one to
 * occur.
 */
void OSWrappers::waitForVSync()
{
 8000b44:	b513      	push	{r0, r1, r4, lr}
    uint32_t dummyGet;
    // First make sure the queue is empty, by trying to remove an element with 0 timeout.
    osMessageQueueGet(vsync_queue, &dummyGet, 0, 0);
 8000b46:	4c08      	ldr	r4, [pc, #32]	; (8000b68 <_ZN8touchgfx10OSWrappers12waitForVSyncEv+0x24>)
 8000b48:	2300      	movs	r3, #0
 8000b4a:	461a      	mov	r2, r3
 8000b4c:	a901      	add	r1, sp, #4
 8000b4e:	6820      	ldr	r0, [r4, #0]
 8000b50:	f00c fb16 	bl	800d180 <osMessageQueueGet>

    // Then, wait for next VSYNC to occur.
    osMessageQueueGet(vsync_queue, &dummyGet, 0, osWaitForever);
 8000b54:	6820      	ldr	r0, [r4, #0]
 8000b56:	f04f 33ff 	mov.w	r3, #4294967295
 8000b5a:	2200      	movs	r2, #0
 8000b5c:	a901      	add	r1, sp, #4
 8000b5e:	f00c fb0f 	bl	800d180 <osMessageQueueGet>
}
 8000b62:	b002      	add	sp, #8
 8000b64:	bd10      	pop	{r4, pc}
 8000b66:	bf00      	nop
 8000b68:	200001a4 	.word	0x200001a4

08000b6c <_ZN8touchgfx13DMA_Interface10initializeEv>:
    }

    /** Perform initialization. Does nothing in this base class. */
    virtual void initialize()
    {
    }
 8000b6c:	4770      	bx	lr

08000b6e <_ZN8touchgfx13DMA_Interface10getDMATypeEv>:
     * @return a DMAType value of the concrete DMA_Interface implementation.
     */
    virtual DMAType getDMAType()
    {
        return DMA_TYPE_GENERIC;
    }
 8000b6e:	2000      	movs	r0, #0
 8000b70:	4770      	bx	lr

08000b72 <_ZN8STM32DMA18signalDMAInterruptEv>:
     *
     * @brief Does nothing.
     */
    virtual void signalDMAInterrupt()
    {
    }
 8000b72:	4770      	bx	lr

08000b74 <_ZN8STM32DMA5flushEv>:
     * @brief Block until all DMA transfers are complete. Since this particular DMA does not do
     * anything, return immediately.
     */
    virtual void flush()
    {
    }
 8000b74:	4770      	bx	lr

08000b76 <_ZN8STM32DMA11getBlitCapsEv>:
}

touchgfx::BlitOperations STM32DMA::getBlitCaps()
{
    return static_cast<touchgfx::BlitOperations>(0);
}
 8000b76:	2000      	movs	r0, #0
 8000b78:	4770      	bx	lr

08000b7a <_ZN8STM32DMAD1Ev>:
class STM32DMA : public touchgfx::DMA_Interface
 8000b7a:	4770      	bx	lr

08000b7c <_ZN8STM32DMA13setupDataCopyERKN8touchgfx6BlitOpE>:

void STM32DMA::setupDataCopy(const touchgfx::BlitOp& blitOp)
{
 8000b7c:	b508      	push	{r3, lr}
    assert(0 && "DMA operation not supported");
 8000b7e:	4a03      	ldr	r2, [pc, #12]	; (8000b8c <_ZN8STM32DMA13setupDataCopyERKN8touchgfx6BlitOpE+0x10>)
 8000b80:	4b03      	ldr	r3, [pc, #12]	; (8000b90 <_ZN8STM32DMA13setupDataCopyERKN8touchgfx6BlitOpE+0x14>)
 8000b82:	4804      	ldr	r0, [pc, #16]	; (8000b94 <_ZN8STM32DMA13setupDataCopyERKN8touchgfx6BlitOpE+0x18>)
 8000b84:	2122      	movs	r1, #34	; 0x22
 8000b86:	f029 fa5d 	bl	802a044 <__assert_func>
 8000b8a:	bf00      	nop
 8000b8c:	0802b557 	.word	0x0802b557
 8000b90:	0802b534 	.word	0x0802b534
 8000b94:	0802b595 	.word	0x0802b595

08000b98 <_ZN8STM32DMA13setupDataFillERKN8touchgfx6BlitOpE>:
}

void STM32DMA::setupDataFill(const touchgfx::BlitOp& blitOp)
{
 8000b98:	b508      	push	{r3, lr}
    assert(0 && "DMA operation not supported");
 8000b9a:	4a03      	ldr	r2, [pc, #12]	; (8000ba8 <_ZN8STM32DMA13setupDataFillERKN8touchgfx6BlitOpE+0x10>)
 8000b9c:	4b03      	ldr	r3, [pc, #12]	; (8000bac <_ZN8STM32DMA13setupDataFillERKN8touchgfx6BlitOpE+0x14>)
 8000b9e:	4804      	ldr	r0, [pc, #16]	; (8000bb0 <_ZN8STM32DMA13setupDataFillERKN8touchgfx6BlitOpE+0x18>)
 8000ba0:	2127      	movs	r1, #39	; 0x27
 8000ba2:	f029 fa4f 	bl	802a044 <__assert_func>
 8000ba6:	bf00      	nop
 8000ba8:	0802b60d 	.word	0x0802b60d
 8000bac:	0802b534 	.word	0x0802b534
 8000bb0:	0802b595 	.word	0x0802b595

08000bb4 <_ZN8STM32DMAD0Ev>:
 8000bb4:	b510      	push	{r4, lr}
 8000bb6:	2144      	movs	r1, #68	; 0x44
 8000bb8:	4604      	mov	r4, r0
 8000bba:	f028 fc30 	bl	802941e <_ZdlPvj>
 8000bbe:	4620      	mov	r0, r4
 8000bc0:	bd10      	pop	{r4, pc}
	...

08000bc4 <_ZN8STM32DMAC1Ev>:
STM32DMA::STM32DMA()
 8000bc4:	b538      	push	{r3, r4, r5, lr}
 8000bc6:	4604      	mov	r4, r0
    : DMA_Interface(q), q(&b, 1)
 8000bc8:	4621      	mov	r1, r4
     * Constructs a DMA Interface object.
     *
     * @param [in] dmaQueue Reference to the queue of DMA operations.
     */
    DMA_Interface(DMA_Queue& dmaQueue)
        : queue(dmaQueue), isRunning(false), isAllowed(false)
 8000bca:	2500      	movs	r5, #0
 8000bcc:	4b06      	ldr	r3, [pc, #24]	; (8000be8 <_ZN8STM32DMAC1Ev+0x24>)
 8000bce:	7225      	strb	r5, [r4, #8]
 8000bd0:	300c      	adds	r0, #12
 8000bd2:	6060      	str	r0, [r4, #4]
 8000bd4:	7265      	strb	r5, [r4, #9]
 8000bd6:	2201      	movs	r2, #1
 8000bd8:	f841 3b20 	str.w	r3, [r1], #32
 8000bdc:	f010 fa92 	bl	8011104 <_ZN8touchgfx17LockFreeDMA_QueueC1EPNS_6BlitOpEi>
 */
struct colortype
{
    /** Default constructor. Creates a black (0) color. */
    colortype()
        : color(0)
 8000be0:	62e5      	str	r5, [r4, #44]	; 0x2c
}
 8000be2:	4620      	mov	r0, r4
 8000be4:	bd38      	pop	{r3, r4, r5, pc}
 8000be6:	bf00      	nop
 8000be8:	0802b654 	.word	0x0802b654

08000bec <_ZNK8touchgfx9PartitionINS_4meta8TypeListINS_14WipeTransitionILNS_9DirectionE3EEENS2_INS1_3NilES6_EEEELt1EE8capacityEv>:
    };

    virtual uint16_t capacity() const
    {
        return NUMBER_OF_ELEMENTS;
    }
 8000bec:	2001      	movs	r0, #1
 8000bee:	4770      	bx	lr

08000bf0 <_ZN8touchgfx9PartitionINS_4meta8TypeListINS_14WipeTransitionILNS_9DirectionE3EEENS2_INS1_3NilES6_EEEELt1EE12element_sizeEv>:

    virtual uint32_t element_size()
    {
        return sizeof(stBlocks[0]);
    }
 8000bf0:	2038      	movs	r0, #56	; 0x38
 8000bf2:	4770      	bx	lr

08000bf4 <_ZN8touchgfx9PartitionINS_4meta8TypeListINS_14WipeTransitionILNS_9DirectionE3EEENS2_INS1_3NilES6_EEEELt1EE7elementEt>:

protected:
    virtual void* element(uint16_t index)
    {
        return &stBlocks[index];
 8000bf4:	2338      	movs	r3, #56	; 0x38
 8000bf6:	fb03 0001 	mla	r0, r3, r1, r0
    }
 8000bfa:	3008      	adds	r0, #8
 8000bfc:	4770      	bx	lr

08000bfe <_ZNK8touchgfx9PartitionINS_4meta8TypeListINS_14WipeTransitionILNS_9DirectionE3EEENS2_INS1_3NilES6_EEEELt1EE7elementEt>:

    virtual const void* element(uint16_t index) const
    {
        return &stBlocks[index];
 8000bfe:	2338      	movs	r3, #56	; 0x38
 8000c00:	fb03 0001 	mla	r0, r3, r1, r0
    }
 8000c04:	3008      	adds	r0, #8
 8000c06:	4770      	bx	lr

08000c08 <_ZNK8touchgfx9PartitionINS_4meta8TypeListI33Measurement_Single_Display_1PViewNS2_INS1_3NilES4_EEEELt1EE8capacityEv>:
    }
 8000c08:	2001      	movs	r0, #1
 8000c0a:	4770      	bx	lr

08000c0c <_ZN8touchgfx9PartitionINS_4meta8TypeListI33Measurement_Single_Display_1PViewNS2_INS1_3NilES4_EEEELt1EE12element_sizeEv>:
    }
 8000c0c:	f241 30f4 	movw	r0, #5108	; 0x13f4
 8000c10:	4770      	bx	lr

08000c12 <_ZN8touchgfx9PartitionINS_4meta8TypeListI33Measurement_Single_Display_1PViewNS2_INS1_3NilES4_EEEELt1EE7elementEt>:
        return &stBlocks[index];
 8000c12:	f241 33f4 	movw	r3, #5108	; 0x13f4
 8000c16:	fb03 0001 	mla	r0, r3, r1, r0
    }
 8000c1a:	3008      	adds	r0, #8
 8000c1c:	4770      	bx	lr

08000c1e <_ZNK8touchgfx9PartitionINS_4meta8TypeListI33Measurement_Single_Display_1PViewNS2_INS1_3NilES4_EEEELt1EE7elementEt>:
        return &stBlocks[index];
 8000c1e:	f241 33f4 	movw	r3, #5108	; 0x13f4
 8000c22:	fb03 0001 	mla	r0, r3, r1, r0
    }
 8000c26:	3008      	adds	r0, #8
 8000c28:	4770      	bx	lr

08000c2a <_ZNK8touchgfx9PartitionINS_4meta8TypeListI21Shutting_OffPresenterNS2_INS1_3NilES4_EEEELt1EE8capacityEv>:
    }
 8000c2a:	2001      	movs	r0, #1
 8000c2c:	4770      	bx	lr

08000c2e <_ZN8touchgfx9PartitionINS_4meta8TypeListI21Shutting_OffPresenterNS2_INS1_3NilES4_EEEELt1EE12element_sizeEv>:
    }
 8000c2e:	2010      	movs	r0, #16
 8000c30:	4770      	bx	lr

08000c32 <_ZN8touchgfx9PartitionINS_4meta8TypeListI21Shutting_OffPresenterNS2_INS1_3NilES4_EEEELt1EE7elementEt>:
        return &stBlocks[index];
 8000c32:	eb00 1001 	add.w	r0, r0, r1, lsl #4
    }
 8000c36:	3008      	adds	r0, #8
 8000c38:	4770      	bx	lr

08000c3a <_ZNK8touchgfx9PartitionINS_4meta8TypeListI21Shutting_OffPresenterNS2_INS1_3NilES4_EEEELt1EE7elementEt>:
        return &stBlocks[index];
 8000c3a:	eb00 1001 	add.w	r0, r0, r1, lsl #4
    }
 8000c3e:	3008      	adds	r0, #8
 8000c40:	4770      	bx	lr

08000c42 <_ZN16FrontendHeapBase15gotoStartScreenER19FrontendApplication>:
     */
    typedef touchgfx::meta::select_type_maxsize< GeneratedTransitionTypes >::type MaxGeneratedTransitionType;

    virtual void gotoStartScreen(FrontendApplication& app)
    {
        app.gotoMain_MenuScreenNoTransition();
 8000c42:	4608      	mov	r0, r1
 8000c44:	f002 be86 	b.w	8003954 <_ZN23FrontendApplicationBase31gotoMain_MenuScreenNoTransitionEv>

08000c48 <_ZN8touchgfx9PartitionINS_4meta8TypeListINS_14WipeTransitionILNS_9DirectionE3EEENS2_INS1_3NilES6_EEEELt1EED1Ev>:
class Partition : public AbstractPartition
 8000c48:	b510      	push	{r4, lr}
 8000c4a:	4b03      	ldr	r3, [pc, #12]	; (8000c58 <_ZN8touchgfx9PartitionINS_4meta8TypeListINS_14WipeTransitionILNS_9DirectionE3EEENS2_INS1_3NilES6_EEEELt1EED1Ev+0x10>)
 8000c4c:	6003      	str	r3, [r0, #0]
 8000c4e:	4604      	mov	r4, r0
 8000c50:	f00e fef5 	bl	800fa3e <_ZN8touchgfx17AbstractPartitionD1Ev>
 8000c54:	4620      	mov	r0, r4
 8000c56:	bd10      	pop	{r4, pc}
 8000c58:	0802b70c 	.word	0x0802b70c

08000c5c <_ZN8touchgfx9PartitionINS_4meta8TypeListINS_14WipeTransitionILNS_9DirectionE3EEENS2_INS1_3NilES6_EEEELt1EED0Ev>:
 8000c5c:	b510      	push	{r4, lr}
 8000c5e:	4604      	mov	r4, r0
 8000c60:	f7ff fff2 	bl	8000c48 <_ZN8touchgfx9PartitionINS_4meta8TypeListINS_14WipeTransitionILNS_9DirectionE3EEENS2_INS1_3NilES6_EEEELt1EED1Ev>
 8000c64:	4620      	mov	r0, r4
 8000c66:	2140      	movs	r1, #64	; 0x40
 8000c68:	f028 fbd9 	bl	802941e <_ZdlPvj>
 8000c6c:	4620      	mov	r0, r4
 8000c6e:	bd10      	pop	{r4, pc}

08000c70 <_ZN8touchgfx9PartitionINS_4meta8TypeListI33Measurement_Single_Display_1PViewNS2_INS1_3NilES4_EEEELt1EED1Ev>:
 8000c70:	b510      	push	{r4, lr}
 8000c72:	4b03      	ldr	r3, [pc, #12]	; (8000c80 <_ZN8touchgfx9PartitionINS_4meta8TypeListI33Measurement_Single_Display_1PViewNS2_INS1_3NilES4_EEEELt1EED1Ev+0x10>)
 8000c74:	6003      	str	r3, [r0, #0]
 8000c76:	4604      	mov	r4, r0
 8000c78:	f00e fee1 	bl	800fa3e <_ZN8touchgfx17AbstractPartitionD1Ev>
 8000c7c:	4620      	mov	r0, r4
 8000c7e:	bd10      	pop	{r4, pc}
 8000c80:	0802b6d8 	.word	0x0802b6d8

08000c84 <_ZN8touchgfx9PartitionINS_4meta8TypeListI33Measurement_Single_Display_1PViewNS2_INS1_3NilES4_EEEELt1EED0Ev>:
 8000c84:	b510      	push	{r4, lr}
 8000c86:	4604      	mov	r4, r0
 8000c88:	f7ff fff2 	bl	8000c70 <_ZN8touchgfx9PartitionINS_4meta8TypeListI33Measurement_Single_Display_1PViewNS2_INS1_3NilES4_EEEELt1EED1Ev>
 8000c8c:	4620      	mov	r0, r4
 8000c8e:	f241 31fc 	movw	r1, #5116	; 0x13fc
 8000c92:	f028 fbc4 	bl	802941e <_ZdlPvj>
 8000c96:	4620      	mov	r0, r4
 8000c98:	bd10      	pop	{r4, pc}
	...

08000c9c <_ZN8touchgfx9PartitionINS_4meta8TypeListI21Shutting_OffPresenterNS2_INS1_3NilES4_EEEELt1EED1Ev>:
 8000c9c:	b510      	push	{r4, lr}
 8000c9e:	4b03      	ldr	r3, [pc, #12]	; (8000cac <_ZN8touchgfx9PartitionINS_4meta8TypeListI21Shutting_OffPresenterNS2_INS1_3NilES4_EEEELt1EED1Ev+0x10>)
 8000ca0:	6003      	str	r3, [r0, #0]
 8000ca2:	4604      	mov	r4, r0
 8000ca4:	f00e fecb 	bl	800fa3e <_ZN8touchgfx17AbstractPartitionD1Ev>
 8000ca8:	4620      	mov	r0, r4
 8000caa:	bd10      	pop	{r4, pc}
 8000cac:	0802b6a4 	.word	0x0802b6a4

08000cb0 <_ZN8touchgfx9PartitionINS_4meta8TypeListI21Shutting_OffPresenterNS2_INS1_3NilES4_EEEELt1EED0Ev>:
 8000cb0:	b510      	push	{r4, lr}
 8000cb2:	4604      	mov	r4, r0
 8000cb4:	f7ff fff2 	bl	8000c9c <_ZN8touchgfx9PartitionINS_4meta8TypeListI21Shutting_OffPresenterNS2_INS1_3NilES4_EEEELt1EED1Ev>
 8000cb8:	4620      	mov	r0, r4
 8000cba:	2118      	movs	r1, #24
 8000cbc:	f028 fbaf 	bl	802941e <_ZdlPvj>
 8000cc0:	4620      	mov	r0, r4
 8000cc2:	bd10      	pop	{r4, pc}

08000cc4 <_ZN12FrontendHeapD1Ev>:
#ifndef FRONTENDHEAP_HPP
#define FRONTENDHEAP_HPP

#include <gui_generated/common/FrontendHeapBase.hpp>

class FrontendHeap : public FrontendHeapBase
 8000cc4:	b510      	push	{r4, lr}
 8000cc6:	4b09      	ldr	r3, [pc, #36]	; (8000cec <_ZN12FrontendHeapD1Ev+0x28>)
 8000cc8:	6003      	str	r3, [r0, #0]
 8000cca:	4604      	mov	r4, r0
 8000ccc:	f500 50a1 	add.w	r0, r0, #5152	; 0x1420
 8000cd0:	3008      	adds	r0, #8
 8000cd2:	f7ff ffb9 	bl	8000c48 <_ZN8touchgfx9PartitionINS_4meta8TypeListINS_14WipeTransitionILNS_9DirectionE3EEENS2_INS1_3NilES6_EEEELt1EED1Ev>
 8000cd6:	f104 002c 	add.w	r0, r4, #44	; 0x2c
 8000cda:	f7ff ffc9 	bl	8000c70 <_ZN8touchgfx9PartitionINS_4meta8TypeListI33Measurement_Single_Display_1PViewNS2_INS1_3NilES4_EEEELt1EED1Ev>
 8000cde:	f104 0014 	add.w	r0, r4, #20
 8000ce2:	f7ff ffdb 	bl	8000c9c <_ZN8touchgfx9PartitionINS_4meta8TypeListI21Shutting_OffPresenterNS2_INS1_3NilES4_EEEELt1EED1Ev>
 8000ce6:	4620      	mov	r0, r4
 8000ce8:	bd10      	pop	{r4, pc}
 8000cea:	bf00      	nop
 8000cec:	0802b740 	.word	0x0802b740

08000cf0 <__tcf_0>:
                            > > CombinedTransitionTypes;
    typedef touchgfx::meta::select_type_maxsize< CombinedTransitionTypes >::type MaxTransitionType;

    static FrontendHeap& getInstance()
    {
        static FrontendHeap instance;
 8000cf0:	b508      	push	{r3, lr}
 8000cf2:	4802      	ldr	r0, [pc, #8]	; (8000cfc <__tcf_0+0xc>)
 8000cf4:	f7ff ffe6 	bl	8000cc4 <_ZN12FrontendHeapD1Ev>
 8000cf8:	bd08      	pop	{r3, pc}
 8000cfa:	bf00      	nop
 8000cfc:	200001b0 	.word	0x200001b0

08000d00 <_ZN12FrontendHeapD0Ev>:
class FrontendHeap : public FrontendHeapBase
 8000d00:	b510      	push	{r4, lr}
 8000d02:	4604      	mov	r4, r0
 8000d04:	f7ff ffde 	bl	8000cc4 <_ZN12FrontendHeapD1Ev>
 8000d08:	4620      	mov	r0, r4
 8000d0a:	f241 51cc 	movw	r1, #5580	; 0x15cc
 8000d0e:	f028 fb86 	bl	802941e <_ZdlPvj>
 8000d12:	4620      	mov	r0, r4
 8000d14:	bd10      	pop	{r4, pc}
	...

08000d18 <touchgfx_init>:
static ApplicationFontProvider fontProvider;
static Texts texts;
static TouchGFXHAL hal(dma, display, tc, 240, 320);

void touchgfx_init()
{
 8000d18:	e92d 41f3 	stmdb	sp!, {r0, r1, r4, r5, r6, r7, r8, lr}
    Bitmap::registerBitmapDatabase(BitmapDatabase::getInstance(), BitmapDatabase::getInstanceSize());
 8000d1c:	f001 fc0c 	bl	8002538 <_ZN14BitmapDatabase11getInstanceEv>
 8000d20:	4605      	mov	r5, r0
 8000d22:	f001 fc0d 	bl	8002540 <_ZN14BitmapDatabase15getInstanceSizeEv>
 8000d26:	2400      	movs	r4, #0
 8000d28:	4601      	mov	r1, r0
 8000d2a:	4623      	mov	r3, r4
 8000d2c:	4628      	mov	r0, r5
 8000d2e:	4622      	mov	r2, r4
 8000d30:	9400      	str	r4, [sp, #0]
 8000d32:	f017 fefb 	bl	8018b2c <_ZN8touchgfx6Bitmap22registerBitmapDatabaseEPKNS0_10BitmapDataEtPtmm>
     *
     * @param  t The array of texts.
     */
    static void registerTexts(const Texts* t)
    {
        texts = t;
 8000d36:	4b26      	ldr	r3, [pc, #152]	; (8000dd0 <touchgfx_init+0xb8>)
 8000d38:	4a26      	ldr	r2, [pc, #152]	; (8000dd4 <touchgfx_init+0xbc>)
        static FrontendHeap instance;
 8000d3a:	4d27      	ldr	r5, [pc, #156]	; (8000dd8 <touchgfx_init+0xc0>)
 8000d3c:	601a      	str	r2, [r3, #0]
    TypedText::registerTexts(&texts);
    Texts::setLanguage(0);
 8000d3e:	4620      	mov	r0, r4
 8000d40:	f007 f9d8 	bl	80080f4 <_ZN8touchgfx5Texts11setLanguageEt>

    FontManager::setFontProvider(&fontProvider);
 8000d44:	4825      	ldr	r0, [pc, #148]	; (8000ddc <touchgfx_init+0xc4>)
 8000d46:	f017 fe59 	bl	80189fc <_ZN8touchgfx11FontManager15setFontProviderEPNS_12FontProviderE>
 8000d4a:	682b      	ldr	r3, [r5, #0]
 8000d4c:	f3bf 8f5b 	dmb	ish
 8000d50:	07db      	lsls	r3, r3, #31
 8000d52:	d436      	bmi.n	8000dc2 <touchgfx_init+0xaa>
 8000d54:	4628      	mov	r0, r5
 8000d56:	f028 fb64 	bl	8029422 <__cxa_guard_acquire>
 8000d5a:	b390      	cbz	r0, 8000dc2 <touchgfx_init+0xaa>
     */
    MVPHeap(AbstractPartition& pres,
            AbstractPartition& scr,
            AbstractPartition& tra,
            MVPApplication& app)
        : presenterStorage(pres),
 8000d5c:	4c20      	ldr	r4, [pc, #128]	; (8000de0 <touchgfx_init+0xc8>)
          screenStorage(scr),
          transitionStorage(tra),
 8000d5e:	4f21      	ldr	r7, [pc, #132]	; (8000de4 <touchgfx_init+0xcc>)
    Model model;
    FrontendApplication app;

private:
    FrontendHeap() : FrontendHeapBase(presenters, views, transitions, app),
                     app(model, *this)
 8000d60:	4b21      	ldr	r3, [pc, #132]	; (8000de8 <touchgfx_init+0xd0>)
 8000d62:	6023      	str	r3, [r4, #0]
          frontendApplication(app)
 8000d64:	f107 0648 	add.w	r6, r7, #72	; 0x48
        : presenterStorage(pres),
 8000d68:	f104 0014 	add.w	r0, r4, #20
          screenStorage(scr),
 8000d6c:	f104 082c 	add.w	r8, r4, #44	; 0x2c
        : presenterStorage(pres),
 8000d70:	6060      	str	r0, [r4, #4]
          screenStorage(scr),
 8000d72:	f8c4 8008 	str.w	r8, [r4, #8]
          transitionStorage(tra),
 8000d76:	60e7      	str	r7, [r4, #12]
          frontendApplication(app)
 8000d78:	6126      	str	r6, [r4, #16]
 8000d7a:	f00e fe61 	bl	800fa40 <_ZN8touchgfx17AbstractPartitionC1Ev>
 8000d7e:	4b1b      	ldr	r3, [pc, #108]	; (8000dec <touchgfx_init+0xd4>)
 8000d80:	6163      	str	r3, [r4, #20]
 8000d82:	4640      	mov	r0, r8
 8000d84:	f00e fe5c 	bl	800fa40 <_ZN8touchgfx17AbstractPartitionC1Ev>
 8000d88:	4b19      	ldr	r3, [pc, #100]	; (8000df0 <touchgfx_init+0xd8>)
 8000d8a:	62e3      	str	r3, [r4, #44]	; 0x2c
 8000d8c:	4638      	mov	r0, r7
 8000d8e:	f00e fe57 	bl	800fa40 <_ZN8touchgfx17AbstractPartitionC1Ev>
 8000d92:	f504 5380 	add.w	r3, r4, #4096	; 0x1000
 8000d96:	4a17      	ldr	r2, [pc, #92]	; (8000df4 <touchgfx_init+0xdc>)
 8000d98:	f8c3 2428 	str.w	r2, [r3, #1064]	; 0x428
 8000d9c:	f503 608d 	add.w	r0, r3, #1128	; 0x468
 8000da0:	f007 fdfc 	bl	800899c <_ZN5ModelC1Ev>
 8000da4:	4622      	mov	r2, r4
 8000da6:	f107 0140 	add.w	r1, r7, #64	; 0x40
 8000daa:	4630      	mov	r0, r6
 8000dac:	f007 fafc 	bl	80083a8 <_ZN19FrontendApplicationC1ER5ModelR12FrontendHeap>
 8000db0:	4630      	mov	r0, r6
 8000db2:	f002 fdcf 	bl	8003954 <_ZN23FrontendApplicationBase31gotoMain_MenuScreenNoTransitionEv>
        static FrontendHeap instance;
 8000db6:	4810      	ldr	r0, [pc, #64]	; (8000df8 <touchgfx_init+0xe0>)
 8000db8:	f029 f962 	bl	802a080 <atexit>
 8000dbc:	4628      	mov	r0, r5
 8000dbe:	f028 fb3c 	bl	802943a <__cxa_guard_release>
    (void)heap;

    /*
     * Initialize TouchGFX
     */
    hal.initialize();
 8000dc2:	480e      	ldr	r0, [pc, #56]	; (8000dfc <touchgfx_init+0xe4>)
}
 8000dc4:	b002      	add	sp, #8
 8000dc6:	e8bd 41f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, lr}
    hal.initialize();
 8000dca:	f7ff bdb5 	b.w	8000938 <_ZN11TouchGFXHAL10initializeEv>
 8000dce:	bf00      	nop
 8000dd0:	20012f88 	.word	0x20012f88
 8000dd4:	20001840 	.word	0x20001840
 8000dd8:	200001ac 	.word	0x200001ac
 8000ddc:	20000008 	.word	0x20000008
 8000de0:	200001b0 	.word	0x200001b0
 8000de4:	200015d8 	.word	0x200015d8
 8000de8:	0802b740 	.word	0x0802b740
 8000dec:	0802b6a4 	.word	0x0802b6a4
 8000df0:	0802b6d8 	.word	0x0802b6d8
 8000df4:	0802b70c 	.word	0x0802b70c
 8000df8:	08000cf1 	.word	0x08000cf1
 8000dfc:	200017c4 	.word	0x200017c4

08000e00 <touchgfx_components_init>:

void touchgfx_components_init()
{
}
 8000e00:	4770      	bx	lr
	...

08000e04 <touchgfx_taskEntry>:
     * Main event loop. Will wait for VSYNC signal, and then process next frame. Call
     * this function from your GUI task.
     *
     * Note This function never returns
     */
    hal.taskEntry();
 8000e04:	4801      	ldr	r0, [pc, #4]	; (8000e0c <touchgfx_taskEntry+0x8>)
 8000e06:	f7ff bda5 	b.w	8000954 <_ZN11TouchGFXHAL9taskEntryEv>
 8000e0a:	bf00      	nop
 8000e0c:	200017c4 	.word	0x200017c4

08000e10 <_GLOBAL__sub_I_touchgfx_init>:
}
 8000e10:	b570      	push	{r4, r5, r6, lr}
static STM32DMA dma;
 8000e12:	4e22      	ldr	r6, [pc, #136]	; (8000e9c <_GLOBAL__sub_I_touchgfx_init+0x8c>)
{
public:

    STM32TouchController() {}
 8000e14:	4c22      	ldr	r4, [pc, #136]	; (8000ea0 <_GLOBAL__sub_I_touchgfx_init+0x90>)
static LCD16bpp display;
 8000e16:	4d23      	ldr	r5, [pc, #140]	; (8000ea4 <_GLOBAL__sub_I_touchgfx_init+0x94>)
 8000e18:	4b23      	ldr	r3, [pc, #140]	; (8000ea8 <_GLOBAL__sub_I_touchgfx_init+0x98>)
 8000e1a:	6023      	str	r3, [r4, #0]
static STM32DMA dma;
 8000e1c:	4630      	mov	r0, r6
 8000e1e:	f7ff fed1 	bl	8000bc4 <_ZN8STM32DMAC1Ev>
static LCD16bpp display;
 8000e22:	4628      	mov	r0, r5
 8000e24:	f01c f94e 	bl	801d0c4 <_ZN8touchgfx8LCD16bppC1Ev>
        : dma(dmaInterface),
 8000e28:	4b20      	ldr	r3, [pc, #128]	; (8000eac <_GLOBAL__sub_I_touchgfx_init+0x9c>)
        FRAME_BUFFER_WIDTH = DISPLAY_WIDTH = width;
 8000e2a:	4821      	ldr	r0, [pc, #132]	; (8000eb0 <_GLOBAL__sub_I_touchgfx_init+0xa0>)
          touchController(touchCtrl),
 8000e2c:	60dc      	str	r4, [r3, #12]
          mcuInstrumentation(0),
 8000e2e:	2200      	movs	r2, #0
          refreshStrategy(REFRESH_STRATEGY_DEFAULT),
 8000e30:	f44f 7180 	mov.w	r1, #256	; 0x100
          auxiliaryLCD(0),
 8000e34:	e9c3 1212 	strd	r1, r2, [r3, #72]	; 0x48
          touchSampleRate(1),
 8000e38:	491e      	ldr	r1, [pc, #120]	; (8000eb4 <_GLOBAL__sub_I_touchgfx_init+0xa4>)
    };

public:
    /** Default constructor. Does nothing. */
    Gestures()
        : drag(), listener(0), dragThresholdValue(0)
 8000e3a:	861a      	strh	r2, [r3, #48]	; 0x30
          vSyncCompensationEnabled(false),
 8000e3c:	e9c3 121a 	strd	r1, r2, [r3, #104]	; 0x68
          requestedOrientation(ORIENTATION_LANDSCAPE),
 8000e40:	491d      	ldr	r1, [pc, #116]	; (8000eb8 <_GLOBAL__sub_I_touchgfx_init+0xa8>)
 8000e42:	6799      	str	r1, [r3, #120]	; 0x78
        instance = this;
 8000e44:	491d      	ldr	r1, [pc, #116]	; (8000ebc <_GLOBAL__sub_I_touchgfx_init+0xac>)
          useAuxiliaryLCD(false),
 8000e46:	f883 2058 	strb.w	r2, [r3, #88]	; 0x58
        instance = this;
 8000e4a:	600b      	str	r3, [r1, #0]
        FRAME_BUFFER_WIDTH = DISPLAY_WIDTH = width;
 8000e4c:	21f0      	movs	r1, #240	; 0xf0
 8000e4e:	8001      	strh	r1, [r0, #0]
 8000e50:	481b      	ldr	r0, [pc, #108]	; (8000ec0 <_GLOBAL__sub_I_touchgfx_init+0xb0>)
          lastY(0),
 8000e52:	665a      	str	r2, [r3, #100]	; 0x64
        FRAME_BUFFER_WIDTH = DISPLAY_WIDTH = width;
 8000e54:	8001      	strh	r1, [r0, #0]
        FRAME_BUFFER_HEIGHT = DISPLAY_HEIGHT = height;
 8000e56:	481b      	ldr	r0, [pc, #108]	; (8000ec4 <_GLOBAL__sub_I_touchgfx_init+0xb4>)
          updateMCULoad(0),
 8000e58:	f883 2070 	strb.w	r2, [r3, #112]	; 0x70
        FRAME_BUFFER_HEIGHT = DISPLAY_HEIGHT = height;
 8000e5c:	f44f 71a0 	mov.w	r1, #320	; 0x140
          buttonController(0),
 8000e60:	e9c3 2204 	strd	r2, r2, [r3, #16]
 8000e64:	e9c3 2206 	strd	r2, r2, [r3, #24]
 8000e68:	e9c3 2208 	strd	r2, r2, [r3, #32]
 8000e6c:	e9c3 220a 	strd	r2, r2, [r3, #40]	; 0x28
          frameBuffer0(0),
 8000e70:	e9c3 220e 	strd	r2, r2, [r3, #56]	; 0x38
          frameBuffer2(0),
 8000e74:	e9c3 2210 	strd	r2, r2, [r3, #64]	; 0x40
class Rect
{
public:
    /** Default constructor. Resulting in an empty Rect with coordinates 0,0. */
    Rect()
        : x(0), y(0), width(0), height(0)
 8000e78:	e9c3 2214 	strd	r2, r2, [r3, #80]	; 0x50
          lastX(0),
 8000e7c:	e9c3 2217 	strd	r2, r2, [r3, #92]	; 0x5c
          cc_begin(0),
 8000e80:	675a      	str	r2, [r3, #116]	; 0x74
          lcdRef(display),
 8000e82:	e9c3 6501 	strd	r6, r5, [r3, #4]
        FRAME_BUFFER_HEIGHT = DISPLAY_HEIGHT = height;
 8000e86:	8001      	strh	r1, [r0, #0]
 8000e88:	480f      	ldr	r0, [pc, #60]	; (8000ec8 <_GLOBAL__sub_I_touchgfx_init+0xb8>)
 8000e8a:	8001      	strh	r1, [r0, #0]
        DISPLAY_ROTATION = rotate0;
 8000e8c:	490f      	ldr	r1, [pc, #60]	; (8000ecc <_GLOBAL__sub_I_touchgfx_init+0xbc>)
 8000e8e:	700a      	strb	r2, [r1, #0]
        nativeDisplayOrientation = ((width >= height) ? ORIENTATION_LANDSCAPE : ORIENTATION_PORTRAIT);
 8000e90:	2201      	movs	r2, #1
 8000e92:	f883 2034 	strb.w	r2, [r3, #52]	; 0x34
     * @param [in,out] display Reference to LCD interface.
     * @param [in,out] tc      Reference to Touch Controller driver.
     * @param width            Width of the display.
     * @param height           Height of the display.
     */
    TouchGFXHAL(touchgfx::DMA_Interface& dma, touchgfx::LCD& display, touchgfx::TouchController& tc, uint16_t width, uint16_t height) : TouchGFXGeneratedHAL(dma, display, tc, width, height)
 8000e96:	4a0e      	ldr	r2, [pc, #56]	; (8000ed0 <_GLOBAL__sub_I_touchgfx_init+0xc0>)
 8000e98:	601a      	str	r2, [r3, #0]
}
 8000e9a:	bd70      	pop	{r4, r5, r6, pc}
 8000e9c:	20001780 	.word	0x20001780
 8000ea0:	2000177c 	.word	0x2000177c
 8000ea4:	20001844 	.word	0x20001844
 8000ea8:	0802b1a4 	.word	0x0802b1a4
 8000eac:	200017c4 	.word	0x200017c4
 8000eb0:	20012f18 	.word	0x20012f18
 8000eb4:	01000001 	.word	0x01000001
 8000eb8:	01010000 	.word	0x01010000
 8000ebc:	20012f24 	.word	0x20012f24
 8000ec0:	20012f1e 	.word	0x20012f1e
 8000ec4:	20012f1a 	.word	0x20012f1a
 8000ec8:	20012f20 	.word	0x20012f20
 8000ecc:	20012f1c 	.word	0x20012f1c
 8000ed0:	0802b330 	.word	0x0802b330

08000ed4 <_ZN8touchgfx8Drawable13getFirstChildEv>:
     * @see Container::getFirstChild
     */
    virtual Drawable* getFirstChild()
    {
        return 0;
    }
 8000ed4:	2000      	movs	r0, #0
 8000ed6:	4770      	bx	lr

08000ed8 <_ZN8touchgfx8Drawable4setXEs>:
     *
     * @note For most Drawable widgets, changing this does normally not automatically yield a redraw.
     */
    virtual void setX(int16_t x)
    {
        rect.x = x;
 8000ed8:	8081      	strh	r1, [r0, #4]
    }
 8000eda:	4770      	bx	lr

08000edc <_ZN8touchgfx8Drawable4setYEs>:
     *
     * @note For most Drawable widgets, changing this does normally not automatically yield a redraw.
     */
    virtual void setY(int16_t y)
    {
        rect.y = y;
 8000edc:	80c1      	strh	r1, [r0, #6]
    }
 8000ede:	4770      	bx	lr

08000ee0 <_ZN8touchgfx8Drawable8setWidthEs>:
     *
     * @note For most Drawable widgets, changing this does normally not automatically yield a redraw.
     */
    virtual void setWidth(int16_t width)
    {
        rect.width = width;
 8000ee0:	8101      	strh	r1, [r0, #8]
    }
 8000ee2:	4770      	bx	lr

08000ee4 <_ZN8touchgfx8Drawable9setHeightEs>:
     *
     * @note For most Drawable widgets, changing this does normally not automatically yield a redraw.
     */
    virtual void setHeight(int16_t height)
    {
        rect.height = height;
 8000ee4:	8141      	strh	r1, [r0, #10]
    }
 8000ee6:	4770      	bx	lr

08000ee8 <_ZN8touchgfx8Drawable20childGeometryChangedEv>:
     * one or more of its children has changed. Currently only used in ScrollableContainer
     * to redraw scrollbars when the size of the scrolling contents changes.
     */
    virtual void childGeometryChanged()
    {
    }
 8000ee8:	4770      	bx	lr

08000eea <_ZN8touchgfx8Drawable16handleClickEventERKNS_10ClickEventE>:
     * @param  event The ClickEvent received from the HAL.
     */
    virtual void handleClickEvent(const ClickEvent& event)
    {
        (void)event; // Unused variable
    }
 8000eea:	4770      	bx	lr

08000eec <_ZN8touchgfx8Drawable18handleGestureEventERKNS_12GestureEventE>:
     * @param  event The GestureEvent received from the HAL.
     */
    virtual void handleGestureEvent(const GestureEvent& event)
    {
        (void)event; // Unused variable
    }
 8000eec:	4770      	bx	lr

08000eee <_ZN8touchgfx8Drawable15handleDragEventERKNS_9DragEventE>:
     * @param  event The DragEvent received from the HAL.
     */
    virtual void handleDragEvent(const DragEvent& event)
    {
        (void)event; // Unused variable
    }
 8000eee:	4770      	bx	lr

08000ef0 <_ZN8touchgfx8Drawable15handleTickEventEv>:
     *
     * @see Application::registerTimerWidget
     */
    virtual void handleTickEvent()
    {
    }
 8000ef0:	4770      	bx	lr

08000ef2 <_ZN8touchgfx8Drawable6moveToEss>:
     *
     * @see moveRelative, setXY
     *
     * @note Will redraw the appropriate areas of the screen.
     */
    virtual void moveTo(int16_t x, int16_t y)
 8000ef2:	b410      	push	{r4}
    {
        moveRelative(x - rect.x, y - rect.y);
 8000ef4:	88c4      	ldrh	r4, [r0, #6]
 8000ef6:	6803      	ldr	r3, [r0, #0]
 8000ef8:	1b12      	subs	r2, r2, r4
 8000efa:	8884      	ldrh	r4, [r0, #4]
 8000efc:	6d5b      	ldr	r3, [r3, #84]	; 0x54
 8000efe:	1b09      	subs	r1, r1, r4
 8000f00:	b212      	sxth	r2, r2
    }
 8000f02:	f85d 4b04 	ldr.w	r4, [sp], #4
        moveRelative(x - rect.x, y - rect.y);
 8000f06:	b209      	sxth	r1, r1
 8000f08:	4718      	bx	r3

08000f0a <_ZN8touchgfx8Drawable14setupDrawChainERKNS_4RectEPPS0_>:
     * @note For TouchGFX internal use only.
     */
    void resetDrawChainCache()
    {
        // Resetting the cached indicators
        cachedVisibleRect.x = UNCACHED_INDICATOR;
 8000f0a:	f64f 73ff 	movw	r3, #65535	; 0xffff
 8000f0e:	8183      	strh	r3, [r0, #12]
        cachedAbsX = UNCACHED_INDICATOR;
 8000f10:	f04f 33ff 	mov.w	r3, #4294967295
 8000f14:	6203      	str	r3, [r0, #32]
     */
    virtual void setupDrawChain(const Rect& invalidatedArea, Drawable** nextPreviousElement)
    {
        (void)invalidatedArea; // Unused variable
        resetDrawChainCache();
        nextDrawChainElement = *nextPreviousElement;
 8000f16:	6813      	ldr	r3, [r2, #0]
 8000f18:	61c3      	str	r3, [r0, #28]
        *nextPreviousElement = this;
 8000f1a:	6010      	str	r0, [r2, #0]
    }
 8000f1c:	4770      	bx	lr

08000f1e <_ZN8touchgfx6Widget12getLastChildEssPPNS_8DrawableE>:
     *
     * @param [out] last Result, the address of the actual instance of the Widget.
     */
    virtual void getLastChild(int16_t /*x*/, int16_t /*y*/, Drawable** last)
    {
        if (isVisible() && isTouchable())
 8000f1e:	f890 2025 	ldrb.w	r2, [r0, #37]	; 0x25
 8000f22:	b11a      	cbz	r2, 8000f2c <_ZN8touchgfx6Widget12getLastChildEssPPNS_8DrawableE+0xe>
 8000f24:	f890 2024 	ldrb.w	r2, [r0, #36]	; 0x24
 8000f28:	b102      	cbz	r2, 8000f2c <_ZN8touchgfx6Widget12getLastChildEssPPNS_8DrawableE+0xe>
        {
            *last = this;
 8000f2a:	6018      	str	r0, [r3, #0]
        }
    }
 8000f2c:	4770      	bx	lr

08000f2e <_ZNK8touchgfx15AbstractPainter18getRenderingMethodEv>:
     * @return HARDWARE if painter uses hardware based drawing, SOFTWARE otherwise.
     */
    virtual HAL::RenderingMethod getRenderingMethod() const
    {
        return HAL::SOFTWARE;
    }
 8000f2e:	2000      	movs	r0, #0
 8000f30:	4770      	bx	lr

08000f32 <_ZNK8touchgfx15AbstractPainter5setupERKNS_4RectE>:
     *
     * @see AbstractPainter::paint, AbstractPainter::tearDown
     */
    virtual bool setup(const Rect& widgetRect) const
    {
        widgetWidth = widgetRect.width;
 8000f32:	888b      	ldrh	r3, [r1, #4]
 8000f34:	8083      	strh	r3, [r0, #4]
        return true;
    }
 8000f36:	2001      	movs	r0, #1
 8000f38:	4770      	bx	lr

08000f3a <_ZNK8touchgfx15AbstractPainter8tearDownEv>:
     * @see AbstractPainter::paint, AbstractPainter::setup
     */
    virtual void tearDown() const
    {
        return;
    }
 8000f3a:	4770      	bx	lr

08000f3c <_ZN8touchgfx12CanvasWidget8setAlphaEh>:
    }

    /** @copydoc Image::setAlpha */
    virtual void setAlpha(uint8_t newAlpha)
    {
        alpha = newAlpha;
 8000f3c:	f880 1026 	strb.w	r1, [r0, #38]	; 0x26
    }
 8000f40:	4770      	bx	lr

08000f42 <_ZNK8touchgfx12CanvasWidget8getAlphaEv>:

    /** @copydoc Image::getAlpha() */
    virtual uint8_t getAlpha() const
    {
        return alpha;
    }
 8000f42:	f890 0026 	ldrb.w	r0, [r0, #38]	; 0x26
 8000f46:	4770      	bx	lr

08000f48 <_ZNK8touchgfx12CanvasWidget14getMinimalRectEv>:
     * overwritten in subclasses and return the minimal rectangle containing the shape. See
     * classes such as Circle for example implementations.
     *
     * @return The minimal rectangle containing the shape drawn.
     */
    virtual Rect getMinimalRect() const
 8000f48:	b510      	push	{r4, lr}
     * @param  rectY      The y coordinate.
     * @param  rectWidth  The width.
     * @param  rectHeight The height.
     */
    Rect(int16_t rectX, int16_t rectY, int16_t rectWidth, int16_t rectHeight)
        : x(rectX), y(rectY), width(rectWidth), height(rectHeight)
 8000f4a:	2200      	movs	r2, #0
        return rect.width;
 8000f4c:	f9b1 4008 	ldrsh.w	r4, [r1, #8]
        return rect.height;
 8000f50:	f9b1 100a 	ldrsh.w	r1, [r1, #10]
 8000f54:	8002      	strh	r2, [r0, #0]
 8000f56:	8042      	strh	r2, [r0, #2]
 8000f58:	8084      	strh	r4, [r0, #4]
 8000f5a:	80c1      	strh	r1, [r0, #6]
    {
        return Rect(0, 0, getWidth(), getHeight());
    }
 8000f5c:	bd10      	pop	{r4, pc}

08000f5e <_ZNK8touchgfx12CanvasWidget12getSolidRectEv>:
        : x(0), y(0), width(0), height(0)
 8000f5e:	2200      	movs	r2, #0
 8000f60:	8002      	strh	r2, [r0, #0]
 8000f62:	8042      	strh	r2, [r0, #2]
 8000f64:	8082      	strh	r2, [r0, #4]
 8000f66:	80c2      	strh	r2, [r0, #6]
     *       lines will not be drawn and may cause strange display artifacts.
     */
    virtual Rect getSolidRect() const
    {
        return Rect();
    }
 8000f68:	4770      	bx	lr
	...

08000f6c <_ZN20TouchGFXGeneratedHAL19configureInterruptsEv>:
 */
__STATIC_INLINE void __NVIC_SetPriority(IRQn_Type IRQn, uint32_t priority)
{
  if ((int32_t)(IRQn) >= 0)
  {
    NVIC->IP[((uint32_t)IRQn)]               = (uint8_t)((priority << (8U - __NVIC_PRIO_BITS)) & (uint32_t)0xFFUL);
 8000f6c:	4b02      	ldr	r3, [pc, #8]	; (8000f78 <_ZN20TouchGFXGeneratedHAL19configureInterruptsEv+0xc>)
 8000f6e:	2290      	movs	r2, #144	; 0x90
 8000f70:	f883 2358 	strb.w	r2, [r3, #856]	; 0x358
}

void TouchGFXGeneratedHAL::configureInterrupts()
{
    NVIC_SetPriority(LTDC_IRQn, 9);
}
 8000f74:	4770      	bx	lr
 8000f76:	bf00      	nop
 8000f78:	e000e100 	.word	0xe000e100

08000f7c <_ZN20TouchGFXGeneratedHAL16enableInterruptsEv>:
    NVIC->ISER[(((uint32_t)IRQn) >> 5UL)] = (uint32_t)(1UL << (((uint32_t)IRQn) & 0x1FUL));
 8000f7c:	4b02      	ldr	r3, [pc, #8]	; (8000f88 <_ZN20TouchGFXGeneratedHAL16enableInterruptsEv+0xc>)
 8000f7e:	f04f 7280 	mov.w	r2, #16777216	; 0x1000000
 8000f82:	609a      	str	r2, [r3, #8]

void TouchGFXGeneratedHAL::enableInterrupts()
{
    NVIC_EnableIRQ(LTDC_IRQn);
}
 8000f84:	4770      	bx	lr
 8000f86:	bf00      	nop
 8000f88:	e000e100 	.word	0xe000e100

08000f8c <_ZN20TouchGFXGeneratedHAL28enableLCDControllerInterruptEv>:
    NVIC_DisableIRQ(LTDC_IRQn);
}

void TouchGFXGeneratedHAL::enableLCDControllerInterrupt()
{
    lcd_int_active_line = (LTDC->BPCR & 0x7FF) - 1;
 8000f8c:	4a09      	ldr	r2, [pc, #36]	; (8000fb4 <_ZN20TouchGFXGeneratedHAL28enableLCDControllerInterruptEv+0x28>)
 8000f8e:	490a      	ldr	r1, [pc, #40]	; (8000fb8 <_ZN20TouchGFXGeneratedHAL28enableLCDControllerInterruptEv+0x2c>)
 8000f90:	68d3      	ldr	r3, [r2, #12]
    lcd_int_porch_line = (LTDC->AWCR & 0x7FF) - 1;
 8000f92:	480a      	ldr	r0, [pc, #40]	; (8000fbc <_ZN20TouchGFXGeneratedHAL28enableLCDControllerInterruptEv+0x30>)
    lcd_int_active_line = (LTDC->BPCR & 0x7FF) - 1;
 8000f94:	f3c3 030a 	ubfx	r3, r3, #0, #11
 8000f98:	3b01      	subs	r3, #1
 8000f9a:	b29b      	uxth	r3, r3
 8000f9c:	800b      	strh	r3, [r1, #0]
    lcd_int_porch_line = (LTDC->AWCR & 0x7FF) - 1;
 8000f9e:	6911      	ldr	r1, [r2, #16]
 8000fa0:	f3c1 010a 	ubfx	r1, r1, #0, #11
 8000fa4:	3901      	subs	r1, #1
 8000fa6:	8001      	strh	r1, [r0, #0]

    /* Sets the Line Interrupt position */
    LTDC->LIPCR = lcd_int_active_line;
 8000fa8:	6413      	str	r3, [r2, #64]	; 0x40
    /* Line Interrupt Enable            */
    LTDC->IER |= LTDC_IER_LIE;
 8000faa:	6b53      	ldr	r3, [r2, #52]	; 0x34
 8000fac:	f043 0301 	orr.w	r3, r3, #1
 8000fb0:	6353      	str	r3, [r2, #52]	; 0x34
}
 8000fb2:	4770      	bx	lr
 8000fb4:	40016800 	.word	0x40016800
 8000fb8:	200018ca 	.word	0x200018ca
 8000fbc:	200018c8 	.word	0x200018c8

08000fc0 <_ZNK20TouchGFXGeneratedHAL17getTFTFrameBufferEv>:
    HAL::endFrame();
}

uint16_t* TouchGFXGeneratedHAL::getTFTFrameBuffer() const
{
    return (uint16_t*)LTDC_Layer1->CFBAR;
 8000fc0:	4b01      	ldr	r3, [pc, #4]	; (8000fc8 <_ZNK20TouchGFXGeneratedHAL17getTFTFrameBufferEv+0x8>)
 8000fc2:	f8d3 00ac 	ldr.w	r0, [r3, #172]	; 0xac
}
 8000fc6:	4770      	bx	lr
 8000fc8:	40016800 	.word	0x40016800

08000fcc <_ZN20TouchGFXGeneratedHAL17setTFTFrameBufferEPt>:

void TouchGFXGeneratedHAL::setTFTFrameBuffer(uint16_t* adr)
{
    LTDC_Layer1->CFBAR = (uint32_t)adr;
 8000fcc:	4b02      	ldr	r3, [pc, #8]	; (8000fd8 <_ZN20TouchGFXGeneratedHAL17setTFTFrameBufferEPt+0xc>)

    /* Reload immediate */
    LTDC->SRCR = (uint32_t)LTDC_SRCR_IMR;
 8000fce:	2201      	movs	r2, #1
    LTDC_Layer1->CFBAR = (uint32_t)adr;
 8000fd0:	f8c3 10ac 	str.w	r1, [r3, #172]	; 0xac
    LTDC->SRCR = (uint32_t)LTDC_SRCR_IMR;
 8000fd4:	625a      	str	r2, [r3, #36]	; 0x24
}
 8000fd6:	4770      	bx	lr
 8000fd8:	40016800 	.word	0x40016800

08000fdc <_ZN20TouchGFXGeneratedHAL10initializeEv>:
{
 8000fdc:	b570      	push	{r4, r5, r6, lr}
 8000fde:	4604      	mov	r4, r0
    HAL::initialize();
 8000fe0:	f00f f9f9 	bl	80103d6 <_ZN8touchgfx3HAL10initializeEv>
    registerEventListener(*(Application::getInstance()));
 8000fe4:	6823      	ldr	r3, [r4, #0]
 8000fe6:	6e5d      	ldr	r5, [r3, #100]	; 0x64
 8000fe8:	f014 f9a2 	bl	8015330 <_ZN8touchgfx11Application11getInstanceEv>
 8000fec:	4601      	mov	r1, r0
 8000fee:	4620      	mov	r0, r4
 8000ff0:	47a8      	blx	r5
    setFrameBufferStartAddresses((void*)frameBuf, (void*)(frameBuf + sizeof(frameBuf) / (sizeof(uint32_t) * 2)), (void*)0);
 8000ff2:	6823      	ldr	r3, [r4, #0]
 8000ff4:	4a05      	ldr	r2, [pc, #20]	; (800100c <_ZN20TouchGFXGeneratedHAL10initializeEv+0x30>)
 8000ff6:	f8d3 5088 	ldr.w	r5, [r3, #136]	; 0x88
 8000ffa:	4620      	mov	r0, r4
 8000ffc:	46ac      	mov	ip, r5
 8000ffe:	2300      	movs	r3, #0
}
 8001000:	e8bd 4070 	ldmia.w	sp!, {r4, r5, r6, lr}
    setFrameBufferStartAddresses((void*)frameBuf, (void*)(frameBuf + sizeof(frameBuf) / (sizeof(uint32_t) * 2)), (void*)0);
 8001004:	f5a2 3116 	sub.w	r1, r2, #153600	; 0x25800
 8001008:	4760      	bx	ip
 800100a:	bf00      	nop
 800100c:	d004b000 	.word	0xd004b000

08001010 <_ZN20TouchGFXGeneratedHAL10beginFrameEv>:
    return HAL::beginFrame();
 8001010:	f00f b9c8 	b.w	80103a4 <_ZN8touchgfx3HAL10beginFrameEv>

08001014 <_ZN20TouchGFXGeneratedHAL8endFrameEv>:
    HAL::endFrame();
 8001014:	f00f b9d2 	b.w	80103bc <_ZN8touchgfx3HAL8endFrameEv>

08001018 <_ZN20TouchGFXGeneratedHAL16flushFrameBufferERKN8touchgfx4RectE>:

void TouchGFXGeneratedHAL::flushFrameBuffer(const touchgfx::Rect& rect)
{
    HAL::flushFrameBuffer(rect);
 8001018:	f00f b98e 	b.w	8010338 <_ZN8touchgfx3HAL16flushFrameBufferERKNS_4RectE>

0800101c <_ZN20TouchGFXGeneratedHAL9blockCopyEPvPKvm>:
}

bool TouchGFXGeneratedHAL::blockCopy(void* RESTRICT dest, const void* RESTRICT src, uint32_t numBytes)
{
    return HAL::blockCopy(dest, src, numBytes);
 800101c:	f00f baef 	b.w	80105fe <_ZN8touchgfx3HAL9blockCopyEPvPKvm>

08001020 <_ZNK8touchgfx8Drawable17invalidateContentEv>:
        if (visible)
 8001020:	f890 2025 	ldrb.w	r2, [r0, #37]	; 0x25
 8001024:	b112      	cbz	r2, 800102c <_ZNK8touchgfx8Drawable17invalidateContentEv+0xc>
            invalidate();
 8001026:	6803      	ldr	r3, [r0, #0]
 8001028:	695b      	ldr	r3, [r3, #20]
 800102a:	4718      	bx	r3
    }
 800102c:	4770      	bx	lr
	...

08001030 <_ZN20TouchGFXGeneratedHAL17disableInterruptsEv>:
    NVIC->ICER[(((uint32_t)IRQn) >> 5UL)] = (uint32_t)(1UL << (((uint32_t)IRQn) & 0x1FUL));
 8001030:	4b04      	ldr	r3, [pc, #16]	; (8001044 <_ZN20TouchGFXGeneratedHAL17disableInterruptsEv+0x14>)
 8001032:	f04f 7280 	mov.w	r2, #16777216	; 0x1000000
 8001036:	f8c3 2088 	str.w	r2, [r3, #136]	; 0x88
  \details Acts as a special kind of Data Memory Barrier.
           It completes when all explicit memory accesses before this instruction complete.
 */
__STATIC_FORCEINLINE void __DSB(void)
{
  __ASM volatile ("dsb 0xF":::"memory");
 800103a:	f3bf 8f4f 	dsb	sy
  __ASM volatile ("isb 0xF":::"memory");
 800103e:	f3bf 8f6f 	isb	sy
}
 8001042:	4770      	bx	lr
 8001044:	e000e100 	.word	0xe000e100

08001048 <_ZN8touchgfx21AbstractPainterRGB565C1Ev>:
public:
    static const uint16_t RMASK = 0xF800; ///< Mask for red   (1111100000000000)
    static const uint16_t GMASK = 0x07E0; ///< Mask for green (0000011111100000)
    static const uint16_t BMASK = 0x001F; ///< Mask for blue  (0000000000011111)

    AbstractPainterRGB565()
 8001048:	b570      	push	{r4, r5, r6, lr}
        : widgetWidth(0)
 800104a:	2300      	movs	r3, #0
        if (instance->useAuxiliaryLCD && instance->auxiliaryLCD)
 800104c:	4e12      	ldr	r6, [pc, #72]	; (8001098 <_ZN8touchgfx21AbstractPainterRGB565C1Ev+0x50>)
 800104e:	8083      	strh	r3, [r0, #4]
        : AbstractPainter()
 8001050:	4b12      	ldr	r3, [pc, #72]	; (800109c <_ZN8touchgfx21AbstractPainterRGB565C1Ev+0x54>)
 8001052:	6003      	str	r3, [r0, #0]
 8001054:	6833      	ldr	r3, [r6, #0]
 8001056:	f893 2058 	ldrb.w	r2, [r3, #88]	; 0x58
    AbstractPainterRGB565()
 800105a:	4605      	mov	r5, r0
 800105c:	b10a      	cbz	r2, 8001062 <_ZN8touchgfx21AbstractPainterRGB565C1Ev+0x1a>
 800105e:	6cd8      	ldr	r0, [r3, #76]	; 0x4c
 8001060:	b900      	cbnz	r0, 8001064 <_ZN8touchgfx21AbstractPainterRGB565C1Ev+0x1c>
        return instance->lcdRef;
 8001062:	6898      	ldr	r0, [r3, #8]
     *
     * @return True if the format matches the framebuffer format, false otherwise.
     */
    FORCE_INLINE_FUNCTION static bool compatibleFramebuffer(Bitmap::BitmapFormat format)
    {
        bool compat = HAL::lcd().framebufferFormat() == format;
 8001064:	6803      	ldr	r3, [r0, #0]
 8001066:	6adb      	ldr	r3, [r3, #44]	; 0x2c
 8001068:	4798      	blx	r3
        return auxiliaryLCD;
 800106a:	6833      	ldr	r3, [r6, #0]
 800106c:	fab0 f480 	clz	r4, r0
 8001070:	6cd8      	ldr	r0, [r3, #76]	; 0x4c
 8001072:	0964      	lsrs	r4, r4, #5
        if (HAL::getInstance()->getAuxiliaryLCD())
 8001074:	b130      	cbz	r0, 8001084 <_ZN8touchgfx21AbstractPainterRGB565C1Ev+0x3c>
        {
            compat |= HAL::getInstance()->getAuxiliaryLCD()->framebufferFormat() == format;
 8001076:	6803      	ldr	r3, [r0, #0]
 8001078:	6adb      	ldr	r3, [r3, #44]	; 0x2c
 800107a:	4798      	blx	r3
 800107c:	2800      	cmp	r0, #0
 800107e:	bf08      	it	eq
 8001080:	f044 0401 	orreq.w	r4, r4, #1
    {
        assert(compatibleFramebuffer(Bitmap::RGB565) && "The chosen painter only works with RGB565 displays");
 8001084:	b92c      	cbnz	r4, 8001092 <_ZN8touchgfx21AbstractPainterRGB565C1Ev+0x4a>
 8001086:	4b06      	ldr	r3, [pc, #24]	; (80010a0 <_ZN8touchgfx21AbstractPainterRGB565C1Ev+0x58>)
 8001088:	4a06      	ldr	r2, [pc, #24]	; (80010a4 <_ZN8touchgfx21AbstractPainterRGB565C1Ev+0x5c>)
 800108a:	4807      	ldr	r0, [pc, #28]	; (80010a8 <_ZN8touchgfx21AbstractPainterRGB565C1Ev+0x60>)
 800108c:	212c      	movs	r1, #44	; 0x2c
 800108e:	f028 ffd9 	bl	802a044 <__assert_func>
    }
 8001092:	4628      	mov	r0, r5
 8001094:	bd70      	pop	{r4, r5, r6, pc}
 8001096:	bf00      	nop
 8001098:	20012f24 	.word	0x20012f24
 800109c:	0802b850 	.word	0x0802b850
 80010a0:	0802b74c 	.word	0x0802b74c
 80010a4:	0802b7aa 	.word	0x0802b7aa
 80010a8:	0802b7e3 	.word	0x0802b7e3

080010ac <_ZN8touchgfx5paint8tearDownEv>:
    blendL8CLUT = data;
}

void tearDown()
{
}
 80010ac:	4770      	bx	lr
	...

080010b0 <_ZN8touchgfx5paint6rgb56513lineFromColorEPtjmhm>:
{
    return ((color >> 8) & 0xF800) | ((color >> 5) & 0x07E0) | ((color >> 3) & 0x001F);
}

void lineFromColor(uint16_t* const ptr, const unsigned count, const uint32_t color, const uint8_t alpha, const uint32_t color565)
{
 80010b0:	e92d 41f0 	stmdb	sp!, {r4, r5, r6, r7, r8, lr}
    uint16_t* framebuffer = ptr;
    const uint16_t* const lineEnd = framebuffer + count;
    if (alpha == 0xFF)
 80010b4:	2bff      	cmp	r3, #255	; 0xff
    {
        do
        {
            *framebuffer = color565;
 80010b6:	f8bd 4018 	ldrh.w	r4, [sp, #24]
    const uint16_t* const lineEnd = framebuffer + count;
 80010ba:	eb00 0141 	add.w	r1, r0, r1, lsl #1
    if (alpha == 0xFF)
 80010be:	d105      	bne.n	80010cc <_ZN8touchgfx5paint6rgb56513lineFromColorEPtjmhm+0x1c>
            *framebuffer = color565;
 80010c0:	f820 4b02 	strh.w	r4, [r0], #2
        } while (++framebuffer < lineEnd);
 80010c4:	4281      	cmp	r1, r0
 80010c6:	d8fb      	bhi.n	80010c0 <_ZN8touchgfx5paint6rgb56513lineFromColorEPtjmhm+0x10>
        do
        {
            *framebuffer = alphaBlend(color565, *framebuffer, alpha);
        } while (++framebuffer < lineEnd);
    }
}
 80010c8:	e8bd 81f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, pc}
    return alphaBlend(newpix & RMASK, newpix & GMASK, newpix & BMASK, bufpix, alpha);
 80010cc:	4f17      	ldr	r7, [pc, #92]	; (800112c <_ZN8touchgfx5paint6rgb56513lineFromColorEPtjmhm+0x7c>)
           (((G * alpha + (bufpix & GMASK) * ialpha) / 255) & GMASK) |
 80010ce:	f404 66fc 	and.w	r6, r4, #2016	; 0x7e0
    return (((R * alpha + (bufpix & RMASK) * ialpha) / 255) & RMASK) |
 80010d2:	ea04 0c07 	and.w	ip, r4, r7
           (((B * alpha + (bufpix & BMASK) * ialpha) / 255) & BMASK);
 80010d6:	f004 041f 	and.w	r4, r4, #31
    return (((R * alpha + (bufpix & RMASK) * ialpha) / 255) & RMASK) |
 80010da:	fb03 fc0c 	mul.w	ip, r3, ip
           (((G * alpha + (bufpix & GMASK) * ialpha) / 255) & GMASK) |
 80010de:	435e      	muls	r6, r3
           (((B * alpha + (bufpix & BMASK) * ialpha) / 255) & BMASK);
 80010e0:	435c      	muls	r4, r3
    const uint8_t ialpha = 0xFF - alpha;
 80010e2:	43db      	mvns	r3, r3
    return (((R * alpha + (bufpix & RMASK) * ialpha) / 255) & RMASK) |
 80010e4:	b2db      	uxtb	r3, r3
 80010e6:	25ff      	movs	r5, #255	; 0xff
            *framebuffer = alphaBlend(color565, *framebuffer, alpha);
 80010e8:	f8b0 e000 	ldrh.w	lr, [r0]
    return (((R * alpha + (bufpix & RMASK) * ialpha) / 255) & RMASK) |
 80010ec:	ea0e 0207 	and.w	r2, lr, r7
           (((G * alpha + (bufpix & GMASK) * ialpha) / 255) & GMASK) |
 80010f0:	f40e 68fc 	and.w	r8, lr, #2016	; 0x7e0
    return (((R * alpha + (bufpix & RMASK) * ialpha) / 255) & RMASK) |
 80010f4:	fb03 c202 	mla	r2, r3, r2, ip
           (((G * alpha + (bufpix & GMASK) * ialpha) / 255) & GMASK) |
 80010f8:	fb03 6808 	mla	r8, r3, r8, r6
           (((B * alpha + (bufpix & BMASK) * ialpha) / 255) & BMASK);
 80010fc:	f00e 0e1f 	and.w	lr, lr, #31
    return (((R * alpha + (bufpix & RMASK) * ialpha) / 255) & RMASK) |
 8001100:	fbb2 f2f5 	udiv	r2, r2, r5
           (((G * alpha + (bufpix & GMASK) * ialpha) / 255) & GMASK) |
 8001104:	fbb8 f8f5 	udiv	r8, r8, r5
    return (((R * alpha + (bufpix & RMASK) * ialpha) / 255) & RMASK) |
 8001108:	403a      	ands	r2, r7
           (((G * alpha + (bufpix & GMASK) * ialpha) / 255) & GMASK) |
 800110a:	f408 68fc 	and.w	r8, r8, #2016	; 0x7e0
    return (((R * alpha + (bufpix & RMASK) * ialpha) / 255) & RMASK) |
 800110e:	ea42 0208 	orr.w	r2, r2, r8
           (((B * alpha + (bufpix & BMASK) * ialpha) / 255) & BMASK);
 8001112:	fb03 4e0e 	mla	lr, r3, lr, r4
 8001116:	fbbe fef5 	udiv	lr, lr, r5
 800111a:	f00e 0e1f 	and.w	lr, lr, #31
           (((G * alpha + (bufpix & GMASK) * ialpha) / 255) & GMASK) |
 800111e:	ea42 020e 	orr.w	r2, r2, lr
            *framebuffer = alphaBlend(color565, *framebuffer, alpha);
 8001122:	f820 2b02 	strh.w	r2, [r0], #2
        } while (++framebuffer < lineEnd);
 8001126:	4281      	cmp	r1, r0
 8001128:	d8de      	bhi.n	80010e8 <_ZN8touchgfx5paint6rgb56513lineFromColorEPtjmhm+0x38>
 800112a:	e7cd      	b.n	80010c8 <_ZN8touchgfx5paint6rgb56513lineFromColorEPtjmhm+0x18>
 800112c:	fffff800 	.word	0xfffff800

08001130 <HAL_LTDC_LineEventCallback>:
}

extern "C"
{
    void HAL_LTDC_LineEventCallback(LTDC_HandleTypeDef* hltdc)
    {
 8001130:	b510      	push	{r4, lr}
        return instance;
 8001132:	4c14      	ldr	r4, [pc, #80]	; (8001184 <HAL_LTDC_LineEventCallback+0x54>)
        if (!HAL::getInstance())
 8001134:	6823      	ldr	r3, [r4, #0]
 8001136:	b323      	cbz	r3, 8001182 <HAL_LTDC_LineEventCallback+0x52>
        {
            return;
        }

        if (LTDC->LIPCR == lcd_int_active_line)
 8001138:	4b13      	ldr	r3, [pc, #76]	; (8001188 <HAL_LTDC_LineEventCallback+0x58>)
 800113a:	4a14      	ldr	r2, [pc, #80]	; (800118c <HAL_LTDC_LineEventCallback+0x5c>)
 800113c:	6c1b      	ldr	r3, [r3, #64]	; 0x40
 800113e:	8811      	ldrh	r1, [r2, #0]
 8001140:	428b      	cmp	r3, r1
 8001142:	d113      	bne.n	800116c <HAL_LTDC_LineEventCallback+0x3c>
        {
            //entering active area
            HAL_LTDC_ProgramLineEvent(hltdc, lcd_int_porch_line);
 8001144:	4b12      	ldr	r3, [pc, #72]	; (8001190 <HAL_LTDC_LineEventCallback+0x60>)
 8001146:	8819      	ldrh	r1, [r3, #0]
 8001148:	f00a f98e 	bl	800b468 <HAL_LTDC_ProgramLineEvent>
 800114c:	6822      	ldr	r2, [r4, #0]
        vSyncCnt++;
 800114e:	f892 306a 	ldrb.w	r3, [r2, #106]	; 0x6a
 8001152:	3301      	adds	r3, #1
 8001154:	f882 306a 	strb.w	r3, [r2, #106]	; 0x6a
            HAL::getInstance()->vSync();
            OSWrappers::signalVSync();
 8001158:	f7ff fce8 	bl	8000b2c <_ZN8touchgfx10OSWrappers11signalVSyncEv>

            // Swap frame buffers immediately instead of waiting for the task to be scheduled in.
            // Note: task will also swap when it wakes up, but that operation is guarded and will not have
            // any effect if already swapped.
            HAL::getInstance()->swapFrameBuffers();
 800115c:	6820      	ldr	r0, [r4, #0]
 800115e:	f00f fe79 	bl	8010e54 <_ZN8touchgfx3HAL16swapFrameBuffersEv>

            // Signal to the framework that display update has finished.
            HAL::getInstance()->frontPorchEntered();
            GPIO::clear(GPIO::VSYNC_FREQ);
        }
    }
 8001162:	e8bd 4010 	ldmia.w	sp!, {r4, lr}
            GPIO::set(GPIO::VSYNC_FREQ);
 8001166:	2000      	movs	r0, #0
 8001168:	f7ff bb60 	b.w	800082c <_ZN8touchgfx4GPIO3setENS0_7GPIO_IDE>
            HAL_LTDC_ProgramLineEvent(hltdc, lcd_int_active_line);
 800116c:	f00a f97c 	bl	800b468 <HAL_LTDC_ProgramLineEvent>
        return instance;
 8001170:	6820      	ldr	r0, [r4, #0]
        allowDMATransfers();
 8001172:	6803      	ldr	r3, [r0, #0]
 8001174:	6a1b      	ldr	r3, [r3, #32]
 8001176:	4798      	blx	r3
    }
 8001178:	e8bd 4010 	ldmia.w	sp!, {r4, lr}
            GPIO::clear(GPIO::VSYNC_FREQ);
 800117c:	2000      	movs	r0, #0
 800117e:	f7ff bb6d 	b.w	800085c <_ZN8touchgfx4GPIO5clearENS0_7GPIO_IDE>
    }
 8001182:	bd10      	pop	{r4, pc}
 8001184:	20012f24 	.word	0x20012f24
 8001188:	40016800 	.word	0x40016800
 800118c:	200018ca 	.word	0x200018ca
 8001190:	200018c8 	.word	0x200018c8

08001194 <calculate_freq_and_signalstrength>:
 * @param Channel The channel number.
 * @param samples Pointer to the input samples array.
 * @param given_frequency The given frequency.
 * @return FFT structure containing the main frequency and signal strength.
 */
FFT calculate_freq_and_signalstrength(uint8_t Channel, uint32_t* samples, uint8_t given_frequency) {
 8001194:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 8001198:	ed2d 8b02 	vpush	{d8}
 800119c:	b091      	sub	sp, #68	; 0x44
 800119e:	af00      	add	r7, sp, #0
 80011a0:	4605      	mov	r5, r0
 80011a2:	4688      	mov	r8, r1
 80011a4:	60fa      	str	r2, [r7, #12]
    // Perform FFT using CMSIS-DSP library
	uint8_t buffer_size = MEAS_get_num_of_samples();
 80011a6:	f000 fe01 	bl	8001dac <MEAS_get_num_of_samples>
    const uint32_t fft_size = buffer_size;
    // Convert the samples to the specific channel
    float32_t input_samples[buffer_size];
 80011aa:	b203      	sxth	r3, r0
 80011ac:	60bb      	str	r3, [r7, #8]
 80011ae:	009b      	lsls	r3, r3, #2
 80011b0:	607b      	str	r3, [r7, #4]
 80011b2:	3307      	adds	r3, #7
 80011b4:	f023 0307 	bic.w	r3, r3, #7
 80011b8:	ebad 0d03 	sub.w	sp, sp, r3
	uint8_t buffer_size = MEAS_get_num_of_samples();
 80011bc:	4604      	mov	r4, r0
    float32_t input_samples[buffer_size];
 80011be:	46ea      	mov	sl, sp
    for (uint32_t i = 0; i < fft_size; i++) {
 80011c0:	b1f0      	cbz	r0, 8001200 <calculate_freq_and_signalstrength+0x6c>
 80011c2:	3d01      	subs	r5, #1
 80011c4:	46d1      	mov	r9, sl
        input_samples[i] = (float32_t)samples[i * MEAS_get_num_of_chan() + (Channel - 1)];
 80011c6:	46d3      	mov	fp, sl
    for (uint32_t i = 0; i < fft_size; i++) {
 80011c8:	2600      	movs	r6, #0
        input_samples[i] = (float32_t)samples[i * MEAS_get_num_of_chan() + (Channel - 1)];
 80011ca:	f000 fded 	bl	8001da8 <MEAS_get_num_of_chan>
 80011ce:	fb06 5000 	mla	r0, r6, r0, r5
 80011d2:	eb08 0380 	add.w	r3, r8, r0, lsl #2
 80011d6:	edd3 7a00 	vldr	s15, [r3]
    for (uint32_t i = 0; i < fft_size; i++) {
 80011da:	3601      	adds	r6, #1
        input_samples[i] = (float32_t)samples[i * MEAS_get_num_of_chan() + (Channel - 1)];
 80011dc:	eef8 7a67 	vcvt.f32.u32	s15, s15
    for (uint32_t i = 0; i < fft_size; i++) {
 80011e0:	42b4      	cmp	r4, r6
        input_samples[i] = (float32_t)samples[i * MEAS_get_num_of_chan() + (Channel - 1)];
 80011e2:	eceb 7a01 	vstmia	fp!, {s15}
    for (uint32_t i = 0; i < fft_size; i++) {
 80011e6:	d1f0      	bne.n	80011ca <calculate_freq_and_signalstrength+0x36>
 80011e8:	687e      	ldr	r6, [r7, #4]
    }
    
    // remove DC component
    for (uint32_t i = 0; i < fft_size; i++) {
        input_samples[i] -= 2047.5;
 80011ea:	ed9f 7a2b 	vldr	s14, [pc, #172]	; 8001298 <calculate_freq_and_signalstrength+0x104>
 80011ee:	4456      	add	r6, sl
 80011f0:	edd9 7a00 	vldr	s15, [r9]
 80011f4:	ee77 7ac7 	vsub.f32	s15, s15, s14
 80011f8:	ece9 7a01 	vstmia	r9!, {s15}
    for (uint32_t i = 0; i < fft_size; i++) {
 80011fc:	454e      	cmp	r6, r9
 80011fe:	d1f7      	bne.n	80011f0 <calculate_freq_and_signalstrength+0x5c>
    }

    // Create an array for the FFT output
    float32_t fft_complex_output[2*buffer_size];
 8001200:	68bb      	ldr	r3, [r7, #8]
 8001202:	466a      	mov	r2, sp
 8001204:	eba2 03c3 	sub.w	r3, r2, r3, lsl #3
 8001208:	469d      	mov	sp, r3

    //calculate the index of the given frequency
    uint32_t index = (uint32_t)given_frequency * fft_size / MEAS_get_samp_freq();

    //calculate the signal strength
    float signal_strength = 2* fft_complex_output[index] / fft_size;
 800120a:	ee07 4a90 	vmov	s15, r4
    uint32_t index = (uint32_t)given_frequency * fft_size / MEAS_get_samp_freq();
 800120e:	68fb      	ldr	r3, [r7, #12]
    float32_t fft_complex_output[2*buffer_size];
 8001210:	466d      	mov	r5, sp
    arm_rfft_fast_init_f32(&fft_struct, fft_size);
 8001212:	b2a1      	uxth	r1, r4
 8001214:	f107 0028 	add.w	r0, r7, #40	; 0x28
    float signal_strength = 2* fft_complex_output[index] / fft_size;
 8001218:	eef8 8a67 	vcvt.f32.u32	s17, s15
    uint32_t index = (uint32_t)given_frequency * fft_size / MEAS_get_samp_freq();
 800121c:	fb13 f904 	smulbb	r9, r3, r4
    arm_rfft_fast_init_f32(&fft_struct, fft_size);
 8001220:	f027 f83c 	bl	802829c <arm_rfft_fast_init_f32>
    arm_cmplx_mag_f32(fft_complex_output, fft_complex_output, fft_size / 2);
 8001224:	0864      	lsrs	r4, r4, #1
    arm_rfft_fast_f32(&fft_struct, input_samples, fft_complex_output, 0);
 8001226:	2300      	movs	r3, #0
 8001228:	4651      	mov	r1, sl
 800122a:	f107 0028 	add.w	r0, r7, #40	; 0x28
 800122e:	462a      	mov	r2, r5
 8001230:	f027 f8b8 	bl	80283a4 <arm_rfft_fast_f32>
    arm_cmplx_mag_f32(fft_complex_output, fft_complex_output, fft_size / 2);
 8001234:	4622      	mov	r2, r4
 8001236:	4629      	mov	r1, r5
 8001238:	4628      	mov	r0, r5
 800123a:	f027 fd21 	bl	8028c80 <arm_cmplx_mag_f32>
    uint32_t index = (uint32_t)given_frequency * fft_size / MEAS_get_samp_freq();
 800123e:	f000 fdb7 	bl	8001db0 <MEAS_get_samp_freq>
 8001242:	fbb9 f9f0 	udiv	r9, r9, r0
    float signal_strength = 2* fft_complex_output[index] / fft_size;
 8001246:	eb05 0989 	add.w	r9, r5, r9, lsl #2
 800124a:	edd9 7a00 	vldr	s15, [r9]
 800124e:	ee77 7aa7 	vadd.f32	s15, s15, s15

    // Find the index of the maximum magnitude in the first half of the array
    uint32_t maxIndex;
    float32_t maxValue;
    arm_max_f32(fft_complex_output, fft_size / 2, &maxValue, &maxIndex);
 8001252:	f107 0318 	add.w	r3, r7, #24
    float signal_strength = 2* fft_complex_output[index] / fft_size;
 8001256:	eec7 0aa8 	vdiv.f32	s1, s15, s17
    arm_max_f32(fft_complex_output, fft_size / 2, &maxValue, &maxIndex);
 800125a:	f107 021c 	add.w	r2, r7, #28
 800125e:	4621      	mov	r1, r4
 8001260:	4628      	mov	r0, r5
    float signal_strength = 2* fft_complex_output[index] / fft_size;
 8001262:	edc7 0a03 	vstr	s1, [r7, #12]
    arm_max_f32(fft_complex_output, fft_size / 2, &maxValue, &maxIndex);
 8001266:	f026 ffb1 	bl	80281cc <arm_max_f32>

    // Calculate the main frequency
    float main_frequency = (float)maxIndex * ((float)MEAS_get_samp_freq()) / fft_size;
 800126a:	edd7 7a06 	vldr	s15, [r7, #24]
 800126e:	eeb8 8a67 	vcvt.f32.u32	s16, s15
 8001272:	f000 fd9d 	bl	8001db0 <MEAS_get_samp_freq>
 8001276:	ee07 0a90 	vmov	s15, r0
 800127a:	eef8 7a67 	vcvt.f32.u32	s15, s15
    FFT fft;

    // return the calculated values
    fft.main_freq = main_frequency;
    fft.signal_strength = signal_strength;
    return fft;
 800127e:	edd7 0a03 	vldr	s1, [r7, #12]
    float main_frequency = (float)maxIndex * ((float)MEAS_get_samp_freq()) / fft_size;
 8001282:	ee67 7a88 	vmul.f32	s15, s15, s16
}
 8001286:	3744      	adds	r7, #68	; 0x44
    float main_frequency = (float)maxIndex * ((float)MEAS_get_samp_freq()) / fft_size;
 8001288:	ee87 0aa8 	vdiv.f32	s0, s15, s17
}
 800128c:	46bd      	mov	sp, r7
 800128e:	ecbd 8b02 	vpop	{d8}
 8001292:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
 8001296:	bf00      	nop
 8001298:	44fff000 	.word	0x44fff000

0800129c <StartDefaultTask>:
  * @param  argument: Not used
  * @retval None
  */
/* USER CODE END Header_StartDefaultTask */
void StartDefaultTask(void *argument)
{
 800129c:	b508      	push	{r3, lr}
  /* USER CODE BEGIN 5 */
  /* Infinite loop */
  for(;;)
  {
    osDelay(100);
 800129e:	2064      	movs	r0, #100	; 0x64
 80012a0:	f00b fe3c 	bl	800cf1c <osDelay>
  for(;;)
 80012a4:	e7fb      	b.n	800129e <StartDefaultTask+0x2>
 80012a6:	bf00      	nop

080012a8 <StartTimeoutTask>:
* @param argument: Not used
* @retval None
*/
/* USER CODE END Header_StartTimeoutTask */
void StartTimeoutTask(void *argument)
{
 80012a8:	b580      	push	{r7, lr}
 80012aa:	4c0c      	ldr	r4, [pc, #48]	; (80012dc <StartTimeoutTask+0x34>)
 80012ac:	4f0c      	ldr	r7, [pc, #48]	; (80012e0 <StartTimeoutTask+0x38>)
	  osMessageQueuePut(TimeoutQueueHandle, &sleep_timeout_value, 0, 0);

	  if(sleep_timeout_value == 0)
	  {
		  sleep_timeout_value = 60;
		  HAL_GPIO_WritePin(GPIOE, GPIO_PIN_5, GPIO_PIN_RESET);	//shut down device
 80012ae:	4e0d      	ldr	r6, [pc, #52]	; (80012e4 <StartTimeoutTask+0x3c>)
	  sleep_timeout_value--;
 80012b0:	6820      	ldr	r0, [r4, #0]
	  osMessageQueuePut(TimeoutQueueHandle, &sleep_timeout_value, 0, 0);
 80012b2:	2300      	movs	r3, #0
 80012b4:	461a      	mov	r2, r3
 80012b6:	4621      	mov	r1, r4
	  sleep_timeout_value--;
 80012b8:	1e45      	subs	r5, r0, #1
	  osMessageQueuePut(TimeoutQueueHandle, &sleep_timeout_value, 0, 0);
 80012ba:	6838      	ldr	r0, [r7, #0]
	  sleep_timeout_value--;
 80012bc:	6025      	str	r5, [r4, #0]
	  osMessageQueuePut(TimeoutQueueHandle, &sleep_timeout_value, 0, 0);
 80012be:	f00b ff29 	bl	800d114 <osMessageQueuePut>
	  if(sleep_timeout_value == 0)
 80012c2:	6822      	ldr	r2, [r4, #0]
		  sleep_timeout_value = 60;
 80012c4:	233c      	movs	r3, #60	; 0x3c
		  HAL_GPIO_WritePin(GPIOE, GPIO_PIN_5, GPIO_PIN_RESET);	//shut down device
 80012c6:	2120      	movs	r1, #32
 80012c8:	4630      	mov	r0, r6
	  if(sleep_timeout_value == 0)
 80012ca:	b912      	cbnz	r2, 80012d2 <StartTimeoutTask+0x2a>
		  sleep_timeout_value = 60;
 80012cc:	6023      	str	r3, [r4, #0]
		  HAL_GPIO_WritePin(GPIOE, GPIO_PIN_5, GPIO_PIN_RESET);	//shut down device
 80012ce:	f008 faaf 	bl	8009830 <HAL_GPIO_WritePin>


	  // Toggle onboard LED as heartbeat visual feedback
//	  HAL_GPIO_TogglePin(GPIOG, GPIO_PIN_13);

	  osDelay(1000);
 80012d2:	f44f 707a 	mov.w	r0, #1000	; 0x3e8
 80012d6:	f00b fe21 	bl	800cf1c <osDelay>
	  sleep_timeout_value--;
 80012da:	e7e9      	b.n	80012b0 <StartTimeoutTask+0x8>
 80012dc:	20000014 	.word	0x20000014
 80012e0:	200018d4 	.word	0x200018d4
 80012e4:	40021000 	.word	0x40021000

080012e8 <updateGUI_test>:
	return sleep_timeout_value;
 80012e8:	4b01      	ldr	r3, [pc, #4]	; (80012f0 <updateGUI_test+0x8>)
}
 80012ea:	6818      	ldr	r0, [r3, #0]
 80012ec:	4770      	bx	lr
 80012ee:	bf00      	nop
 80012f0:	20000014 	.word	0x20000014

080012f4 <SystemClock_Config>:
{
 80012f4:	b530      	push	{r4, r5, lr}
  RCC_OscInitTypeDef RCC_OscInitStruct = {0};
 80012f6:	2400      	movs	r4, #0
{
 80012f8:	b095      	sub	sp, #84	; 0x54
  RCC_OscInitTypeDef RCC_OscInitStruct = {0};
 80012fa:	e9cd 440a 	strd	r4, r4, [sp, #40]	; 0x28
 80012fe:	e9cd 440c 	strd	r4, r4, [sp, #48]	; 0x30
  RCC_ClkInitTypeDef RCC_ClkInitStruct = {0};
 8001302:	e9cd 4403 	strd	r4, r4, [sp, #12]
 8001306:	e9cd 4405 	strd	r4, r4, [sp, #20]
  __HAL_RCC_PWR_CLK_ENABLE();
 800130a:	4a1e      	ldr	r2, [pc, #120]	; (8001384 <SystemClock_Config+0x90>)
 800130c:	9401      	str	r4, [sp, #4]
  RCC_ClkInitTypeDef RCC_ClkInitStruct = {0};
 800130e:	9407      	str	r4, [sp, #28]
  __HAL_RCC_PWR_CLK_ENABLE();
 8001310:	6c11      	ldr	r1, [r2, #64]	; 0x40
  __HAL_PWR_VOLTAGESCALING_CONFIG(PWR_REGULATOR_VOLTAGE_SCALE1);
 8001312:	4b1d      	ldr	r3, [pc, #116]	; (8001388 <SystemClock_Config+0x94>)
  __HAL_RCC_PWR_CLK_ENABLE();
 8001314:	f041 5180 	orr.w	r1, r1, #268435456	; 0x10000000
 8001318:	6411      	str	r1, [r2, #64]	; 0x40
 800131a:	6c12      	ldr	r2, [r2, #64]	; 0x40
 800131c:	f002 5280 	and.w	r2, r2, #268435456	; 0x10000000
 8001320:	9201      	str	r2, [sp, #4]
 8001322:	9a01      	ldr	r2, [sp, #4]
  __HAL_PWR_VOLTAGESCALING_CONFIG(PWR_REGULATOR_VOLTAGE_SCALE1);
 8001324:	9402      	str	r4, [sp, #8]
 8001326:	681a      	ldr	r2, [r3, #0]
 8001328:	f442 4240 	orr.w	r2, r2, #49152	; 0xc000
 800132c:	601a      	str	r2, [r3, #0]
 800132e:	681b      	ldr	r3, [r3, #0]
 8001330:	f403 4340 	and.w	r3, r3, #49152	; 0xc000
 8001334:	9302      	str	r3, [sp, #8]
  RCC_OscInitStruct.OscillatorType = RCC_OSCILLATORTYPE_HSE;
 8001336:	2201      	movs	r2, #1
 8001338:	f44f 3380 	mov.w	r3, #65536	; 0x10000
 800133c:	e9cd 2308 	strd	r2, r3, [sp, #32]
  RCC_OscInitStruct.PLL.PLLM = 8;
 8001340:	2308      	movs	r3, #8
  RCC_OscInitStruct.PLL.PLLState = RCC_PLL_ON;
 8001342:	2502      	movs	r5, #2
  RCC_OscInitStruct.PLL.PLLM = 8;
 8001344:	9310      	str	r3, [sp, #64]	; 0x40
  RCC_OscInitStruct.PLL.PLLSource = RCC_PLLSOURCE_HSE;
 8001346:	f44f 0280 	mov.w	r2, #4194304	; 0x400000
  RCC_OscInitStruct.PLL.PLLN = 336;
 800134a:	f44f 73a8 	mov.w	r3, #336	; 0x150
  RCC_OscInitStruct.PLL.PLLSource = RCC_PLLSOURCE_HSE;
 800134e:	e9cd 520e 	strd	r5, r2, [sp, #56]	; 0x38
  RCC_OscInitStruct.PLL.PLLN = 336;
 8001352:	9311      	str	r3, [sp, #68]	; 0x44
  RCC_OscInitStruct.PLL.PLLP = RCC_PLLP_DIV2;
 8001354:	2202      	movs	r2, #2
 8001356:	2304      	movs	r3, #4
  if (HAL_RCC_OscConfig(&RCC_OscInitStruct) != HAL_OK)
 8001358:	a808      	add	r0, sp, #32
  RCC_OscInitStruct.PLL.PLLP = RCC_PLLP_DIV2;
 800135a:	e9cd 2312 	strd	r2, r3, [sp, #72]	; 0x48
  __HAL_PWR_VOLTAGESCALING_CONFIG(PWR_REGULATOR_VOLTAGE_SCALE1);
 800135e:	9902      	ldr	r1, [sp, #8]
  if (HAL_RCC_OscConfig(&RCC_OscInitStruct) != HAL_OK)
 8001360:	f00a f8a4 	bl	800b4ac <HAL_RCC_OscConfig>
  RCC_ClkInitStruct.ClockType = RCC_CLOCKTYPE_HCLK|RCC_CLOCKTYPE_SYSCLK
 8001364:	230f      	movs	r3, #15
  RCC_ClkInitStruct.SYSCLKSource = RCC_SYSCLKSOURCE_PLLCLK;
 8001366:	e9cd 3503 	strd	r3, r5, [sp, #12]
  RCC_ClkInitStruct.APB1CLKDivider = RCC_HCLK_DIV4;
 800136a:	f44f 52a0 	mov.w	r2, #5120	; 0x1400
  RCC_ClkInitStruct.APB2CLKDivider = RCC_HCLK_DIV2;
 800136e:	f44f 5380 	mov.w	r3, #4096	; 0x1000
  if (HAL_RCC_ClockConfig(&RCC_ClkInitStruct, FLASH_LATENCY_5) != HAL_OK)
 8001372:	a803      	add	r0, sp, #12
 8001374:	2105      	movs	r1, #5
  RCC_ClkInitStruct.APB1CLKDivider = RCC_HCLK_DIV4;
 8001376:	e9cd 4205 	strd	r4, r2, [sp, #20]
  RCC_ClkInitStruct.APB2CLKDivider = RCC_HCLK_DIV2;
 800137a:	9307      	str	r3, [sp, #28]
  if (HAL_RCC_ClockConfig(&RCC_ClkInitStruct, FLASH_LATENCY_5) != HAL_OK)
 800137c:	f00a faae 	bl	800b8dc <HAL_RCC_ClockConfig>
}
 8001380:	b015      	add	sp, #84	; 0x54
 8001382:	bd30      	pop	{r4, r5, pc}
 8001384:	40023800 	.word	0x40023800
 8001388:	40007000 	.word	0x40007000

0800138c <main>:
{
 800138c:	e92d 4880 	stmdb	sp!, {r7, fp, lr}
  GPIO_InitTypeDef GPIO_InitStruct = {0};
 8001390:	2400      	movs	r4, #0
{
 8001392:	b09f      	sub	sp, #124	; 0x7c
  HAL_Init();
 8001394:	f007 fe50 	bl	8009038 <HAL_Init>
  SystemClock_Config();
 8001398:	f7ff ffac 	bl	80012f4 <SystemClock_Config>
  MEAS_GPIO_analog_init();         // Configure GPIOs in analog mode
 800139c:	f000 fbb0 	bl	8001b00 <MEAS_GPIO_analog_init>
  MEAS_timer_init();               // Configure the timer
 80013a0:	f000 fbe2 	bl	8001b68 <MEAS_timer_init>
  GPIO_InitTypeDef GPIO_InitStruct = {0};
 80013a4:	e9cd 4411 	strd	r4, r4, [sp, #68]	; 0x44
 80013a8:	e9cd 4413 	strd	r4, r4, [sp, #76]	; 0x4c
  __HAL_RCC_GPIOE_CLK_ENABLE();
 80013ac:	4dc0      	ldr	r5, [pc, #768]	; (80016b0 <main+0x324>)
 80013ae:	9402      	str	r4, [sp, #8]
  GPIO_InitTypeDef GPIO_InitStruct = {0};
 80013b0:	9415      	str	r4, [sp, #84]	; 0x54
  __HAL_RCC_GPIOE_CLK_ENABLE();
 80013b2:	6b2b      	ldr	r3, [r5, #48]	; 0x30
  HAL_GPIO_WritePin(GPIOE, VSYNC_FREQ_Pin|FRAME_RATE_Pin, GPIO_PIN_RESET);
 80013b4:	48bf      	ldr	r0, [pc, #764]	; (80016b4 <main+0x328>)
  __HAL_RCC_GPIOE_CLK_ENABLE();
 80013b6:	f043 0310 	orr.w	r3, r3, #16
 80013ba:	632b      	str	r3, [r5, #48]	; 0x30
 80013bc:	6b2b      	ldr	r3, [r5, #48]	; 0x30
 80013be:	f003 0310 	and.w	r3, r3, #16
 80013c2:	9302      	str	r3, [sp, #8]
 80013c4:	9b02      	ldr	r3, [sp, #8]
  __HAL_RCC_GPIOF_CLK_ENABLE();
 80013c6:	9403      	str	r4, [sp, #12]
 80013c8:	6b2b      	ldr	r3, [r5, #48]	; 0x30
 80013ca:	f043 0320 	orr.w	r3, r3, #32
 80013ce:	632b      	str	r3, [r5, #48]	; 0x30
 80013d0:	6b2b      	ldr	r3, [r5, #48]	; 0x30
 80013d2:	f003 0320 	and.w	r3, r3, #32
 80013d6:	9303      	str	r3, [sp, #12]
 80013d8:	9b03      	ldr	r3, [sp, #12]
  __HAL_RCC_GPIOH_CLK_ENABLE();
 80013da:	9404      	str	r4, [sp, #16]
 80013dc:	6b2b      	ldr	r3, [r5, #48]	; 0x30
 80013de:	f043 0380 	orr.w	r3, r3, #128	; 0x80
 80013e2:	632b      	str	r3, [r5, #48]	; 0x30
 80013e4:	6b2b      	ldr	r3, [r5, #48]	; 0x30
 80013e6:	f003 0380 	and.w	r3, r3, #128	; 0x80
 80013ea:	9304      	str	r3, [sp, #16]
 80013ec:	9b04      	ldr	r3, [sp, #16]
  __HAL_RCC_GPIOC_CLK_ENABLE();
 80013ee:	9405      	str	r4, [sp, #20]
 80013f0:	6b2b      	ldr	r3, [r5, #48]	; 0x30
 80013f2:	f043 0304 	orr.w	r3, r3, #4
 80013f6:	632b      	str	r3, [r5, #48]	; 0x30
 80013f8:	6b2b      	ldr	r3, [r5, #48]	; 0x30
 80013fa:	f003 0304 	and.w	r3, r3, #4
 80013fe:	9305      	str	r3, [sp, #20]
 8001400:	9b05      	ldr	r3, [sp, #20]
  __HAL_RCC_GPIOA_CLK_ENABLE();
 8001402:	9406      	str	r4, [sp, #24]
 8001404:	6b2b      	ldr	r3, [r5, #48]	; 0x30
 8001406:	f043 0301 	orr.w	r3, r3, #1
 800140a:	632b      	str	r3, [r5, #48]	; 0x30
 800140c:	6b2b      	ldr	r3, [r5, #48]	; 0x30
 800140e:	f003 0301 	and.w	r3, r3, #1
 8001412:	9306      	str	r3, [sp, #24]
 8001414:	9b06      	ldr	r3, [sp, #24]
  __HAL_RCC_GPIOB_CLK_ENABLE();
 8001416:	9407      	str	r4, [sp, #28]
 8001418:	6b2b      	ldr	r3, [r5, #48]	; 0x30
 800141a:	f043 0302 	orr.w	r3, r3, #2
 800141e:	632b      	str	r3, [r5, #48]	; 0x30
 8001420:	6b2b      	ldr	r3, [r5, #48]	; 0x30
 8001422:	f003 0302 	and.w	r3, r3, #2
 8001426:	9307      	str	r3, [sp, #28]
 8001428:	9b07      	ldr	r3, [sp, #28]
  __HAL_RCC_GPIOG_CLK_ENABLE();
 800142a:	9408      	str	r4, [sp, #32]
 800142c:	6b2b      	ldr	r3, [r5, #48]	; 0x30
 800142e:	f043 0340 	orr.w	r3, r3, #64	; 0x40
 8001432:	632b      	str	r3, [r5, #48]	; 0x30
 8001434:	6b2b      	ldr	r3, [r5, #48]	; 0x30
 8001436:	f003 0340 	and.w	r3, r3, #64	; 0x40
 800143a:	9308      	str	r3, [sp, #32]
 800143c:	9b08      	ldr	r3, [sp, #32]
  __HAL_RCC_GPIOD_CLK_ENABLE();
 800143e:	9409      	str	r4, [sp, #36]	; 0x24
 8001440:	6b2b      	ldr	r3, [r5, #48]	; 0x30
 8001442:	f043 0308 	orr.w	r3, r3, #8
 8001446:	632b      	str	r3, [r5, #48]	; 0x30
 8001448:	6b2b      	ldr	r3, [r5, #48]	; 0x30
 800144a:	f003 0308 	and.w	r3, r3, #8
  HAL_GPIO_WritePin(GPIOE, VSYNC_FREQ_Pin|FRAME_RATE_Pin, GPIO_PIN_RESET);
 800144e:	4622      	mov	r2, r4
  __HAL_RCC_GPIOD_CLK_ENABLE();
 8001450:	9309      	str	r3, [sp, #36]	; 0x24
  HAL_GPIO_WritePin(GPIOE, VSYNC_FREQ_Pin|FRAME_RATE_Pin, GPIO_PIN_RESET);
 8001452:	2114      	movs	r1, #20
  __HAL_RCC_GPIOD_CLK_ENABLE();
 8001454:	9b09      	ldr	r3, [sp, #36]	; 0x24
  HAL_GPIO_WritePin(GPIOE, VSYNC_FREQ_Pin|FRAME_RATE_Pin, GPIO_PIN_RESET);
 8001456:	f008 f9eb 	bl	8009830 <HAL_GPIO_WritePin>
  HAL_GPIO_WritePin(POWER_ON_DEVICE_GPIO_Port, POWER_ON_DEVICE_Pin, GPIO_PIN_SET);
 800145a:	4896      	ldr	r0, [pc, #600]	; (80016b4 <main+0x328>)
 800145c:	2120      	movs	r1, #32
 800145e:	2201      	movs	r2, #1
 8001460:	f008 f9e6 	bl	8009830 <HAL_GPIO_WritePin>
  HAL_GPIO_WritePin(GPIOC, GPIO_PIN_2, GPIO_PIN_RESET);
 8001464:	4894      	ldr	r0, [pc, #592]	; (80016b8 <main+0x32c>)
 8001466:	4622      	mov	r2, r4
 8001468:	2104      	movs	r1, #4
 800146a:	f008 f9e1 	bl	8009830 <HAL_GPIO_WritePin>
  HAL_GPIO_WritePin(GPIOD, GPIO_PIN_12|GPIO_PIN_13, GPIO_PIN_RESET);
 800146e:	4893      	ldr	r0, [pc, #588]	; (80016bc <main+0x330>)
 8001470:	4622      	mov	r2, r4
 8001472:	f44f 5140 	mov.w	r1, #12288	; 0x3000
 8001476:	f008 f9db 	bl	8009830 <HAL_GPIO_WritePin>
  HAL_GPIO_WritePin(DEVICE_ON_GPIO_Port, DEVICE_ON_Pin, GPIO_PIN_SET);
 800147a:	2201      	movs	r2, #1
 800147c:	4890      	ldr	r0, [pc, #576]	; (80016c0 <main+0x334>)
 800147e:	f44f 5100 	mov.w	r1, #8192	; 0x2000
 8001482:	f008 f9d5 	bl	8009830 <HAL_GPIO_WritePin>
  GPIO_InitStruct.Mode = GPIO_MODE_OUTPUT_PP;
 8001486:	2601      	movs	r6, #1
  GPIO_InitStruct.Speed = GPIO_SPEED_FREQ_VERY_HIGH;
 8001488:	f04f 0903 	mov.w	r9, #3
  GPIO_InitStruct.Pin = VSYNC_FREQ_Pin|FRAME_RATE_Pin;
 800148c:	2314      	movs	r3, #20
  HAL_GPIO_Init(GPIOE, &GPIO_InitStruct);
 800148e:	4889      	ldr	r0, [pc, #548]	; (80016b4 <main+0x328>)
 8001490:	a911      	add	r1, sp, #68	; 0x44
  GPIO_InitStruct.Pin = DEVICE_ON_OFF_TRIGGER_Pin;
 8001492:	f04f 0808 	mov.w	r8, #8
  GPIO_InitStruct.Mode = GPIO_MODE_OUTPUT_PP;
 8001496:	e9cd 3611 	strd	r3, r6, [sp, #68]	; 0x44
  GPIO_InitStruct.Speed = GPIO_SPEED_FREQ_VERY_HIGH;
 800149a:	e9cd 4913 	strd	r4, r9, [sp, #76]	; 0x4c
  HAL_GPIO_Init(GPIOE, &GPIO_InitStruct);
 800149e:	f008 f883 	bl	80095a8 <HAL_GPIO_Init>
  GPIO_InitStruct.Mode = GPIO_MODE_IT_RISING;
 80014a2:	f44f 1388 	mov.w	r3, #1114112	; 0x110000
  HAL_GPIO_Init(DEVICE_ON_OFF_TRIGGER_GPIO_Port, &GPIO_InitStruct);
 80014a6:	4883      	ldr	r0, [pc, #524]	; (80016b4 <main+0x328>)
  GPIO_InitStruct.Pin = DEVICE_ON_OFF_TRIGGER_Pin;
 80014a8:	f8cd 8044 	str.w	r8, [sp, #68]	; 0x44
  HAL_GPIO_Init(DEVICE_ON_OFF_TRIGGER_GPIO_Port, &GPIO_InitStruct);
 80014ac:	a911      	add	r1, sp, #68	; 0x44
  GPIO_InitStruct.Mode = GPIO_MODE_IT_RISING;
 80014ae:	9312      	str	r3, [sp, #72]	; 0x48
  GPIO_InitStruct.Pull = GPIO_NOPULL;
 80014b0:	9413      	str	r4, [sp, #76]	; 0x4c
  HAL_GPIO_Init(DEVICE_ON_OFF_TRIGGER_GPIO_Port, &GPIO_InitStruct);
 80014b2:	f008 f879 	bl	80095a8 <HAL_GPIO_Init>
  GPIO_InitStruct.Pin = POWER_ON_DEVICE_Pin;
 80014b6:	2320      	movs	r3, #32
  HAL_GPIO_Init(POWER_ON_DEVICE_GPIO_Port, &GPIO_InitStruct);
 80014b8:	487e      	ldr	r0, [pc, #504]	; (80016b4 <main+0x328>)
  GPIO_InitStruct.Pin = POWER_ON_DEVICE_Pin;
 80014ba:	9311      	str	r3, [sp, #68]	; 0x44
  HAL_GPIO_Init(POWER_ON_DEVICE_GPIO_Port, &GPIO_InitStruct);
 80014bc:	a911      	add	r1, sp, #68	; 0x44
  GPIO_InitStruct.Speed = GPIO_SPEED_FREQ_HIGH;
 80014be:	2702      	movs	r7, #2
  GPIO_InitStruct.Pin = GPIO_PIN_2;
 80014c0:	f04f 0a04 	mov.w	sl, #4
  GPIO_InitStruct.Pull = GPIO_NOPULL;
 80014c4:	e9cd 6412 	strd	r6, r4, [sp, #72]	; 0x48
  GPIO_InitStruct.Speed = GPIO_SPEED_FREQ_LOW;
 80014c8:	9414      	str	r4, [sp, #80]	; 0x50
  HAL_GPIO_Init(POWER_ON_DEVICE_GPIO_Port, &GPIO_InitStruct);
 80014ca:	f008 f86d 	bl	80095a8 <HAL_GPIO_Init>
  HAL_GPIO_Init(GPIOC, &GPIO_InitStruct);
 80014ce:	487a      	ldr	r0, [pc, #488]	; (80016b8 <main+0x32c>)
  GPIO_InitStruct.Pin = GPIO_PIN_2;
 80014d0:	f8cd a044 	str.w	sl, [sp, #68]	; 0x44
  HAL_GPIO_Init(GPIOC, &GPIO_InitStruct);
 80014d4:	a911      	add	r1, sp, #68	; 0x44
  GPIO_InitStruct.Pull = GPIO_NOPULL;
 80014d6:	e9cd 6412 	strd	r6, r4, [sp, #72]	; 0x48
  GPIO_InitStruct.Speed = GPIO_SPEED_FREQ_HIGH;
 80014da:	9714      	str	r7, [sp, #80]	; 0x50
  HAL_GPIO_Init(GPIOC, &GPIO_InitStruct);
 80014dc:	f008 f864 	bl	80095a8 <HAL_GPIO_Init>
  GPIO_InitStruct.Pin = GPIO_PIN_12|GPIO_PIN_13;
 80014e0:	f44f 5340 	mov.w	r3, #12288	; 0x3000
  HAL_GPIO_Init(GPIOD, &GPIO_InitStruct);
 80014e4:	4875      	ldr	r0, [pc, #468]	; (80016bc <main+0x330>)
  GPIO_InitStruct.Pin = GPIO_PIN_12|GPIO_PIN_13;
 80014e6:	9311      	str	r3, [sp, #68]	; 0x44
  HAL_GPIO_Init(GPIOD, &GPIO_InitStruct);
 80014e8:	a911      	add	r1, sp, #68	; 0x44
  GPIO_InitStruct.Pull = GPIO_NOPULL;
 80014ea:	e9cd 6412 	strd	r6, r4, [sp, #72]	; 0x48
  GPIO_InitStruct.Speed = GPIO_SPEED_FREQ_HIGH;
 80014ee:	9714      	str	r7, [sp, #80]	; 0x50
  HAL_GPIO_Init(GPIOD, &GPIO_InitStruct);
 80014f0:	f008 f85a 	bl	80095a8 <HAL_GPIO_Init>
  GPIO_InitStruct.Pin = GPIO_PIN_15;
 80014f4:	f44f 4300 	mov.w	r3, #32768	; 0x8000
  HAL_GPIO_Init(GPIOA, &GPIO_InitStruct);
 80014f8:	4872      	ldr	r0, [pc, #456]	; (80016c4 <main+0x338>)
  GPIO_InitStruct.Pin = GPIO_PIN_15;
 80014fa:	9311      	str	r3, [sp, #68]	; 0x44
  HAL_GPIO_Init(GPIOA, &GPIO_InitStruct);
 80014fc:	a911      	add	r1, sp, #68	; 0x44
  GPIO_InitStruct.Alternate = GPIO_AF15_EVENTOUT;
 80014fe:	230f      	movs	r3, #15
 8001500:	9315      	str	r3, [sp, #84]	; 0x54
  GPIO_InitStruct.Pin = DEVICE_ON_Pin;
 8001502:	f44f 5b00 	mov.w	fp, #8192	; 0x2000
  GPIO_InitStruct.Pull = GPIO_NOPULL;
 8001506:	e9cd 7412 	strd	r7, r4, [sp, #72]	; 0x48
  GPIO_InitStruct.Speed = GPIO_SPEED_FREQ_LOW;
 800150a:	9414      	str	r4, [sp, #80]	; 0x50
  HAL_GPIO_Init(GPIOA, &GPIO_InitStruct);
 800150c:	f008 f84c 	bl	80095a8 <HAL_GPIO_Init>
  HAL_GPIO_Init(DEVICE_ON_GPIO_Port, &GPIO_InitStruct);
 8001510:	486b      	ldr	r0, [pc, #428]	; (80016c0 <main+0x334>)
  GPIO_InitStruct.Pin = DEVICE_ON_Pin;
 8001512:	f8cd b044 	str.w	fp, [sp, #68]	; 0x44
  HAL_GPIO_Init(DEVICE_ON_GPIO_Port, &GPIO_InitStruct);
 8001516:	a911      	add	r1, sp, #68	; 0x44
  GPIO_InitStruct.Pull = GPIO_NOPULL;
 8001518:	e9cd 6412 	strd	r6, r4, [sp, #72]	; 0x48
  GPIO_InitStruct.Speed = GPIO_SPEED_FREQ_LOW;
 800151c:	9414      	str	r4, [sp, #80]	; 0x50
  HAL_GPIO_Init(DEVICE_ON_GPIO_Port, &GPIO_InitStruct);
 800151e:	f008 f843 	bl	80095a8 <HAL_GPIO_Init>
  HAL_NVIC_SetPriority(EXTI3_IRQn, 5, 0);
 8001522:	4622      	mov	r2, r4
 8001524:	2105      	movs	r1, #5
 8001526:	2009      	movs	r0, #9
 8001528:	f007 fdd6 	bl	80090d8 <HAL_NVIC_SetPriority>
  HAL_NVIC_EnableIRQ(EXTI3_IRQn);
 800152c:	2009      	movs	r0, #9
 800152e:	f007 fe11 	bl	8009154 <HAL_NVIC_EnableIRQ>
  __HAL_RCC_DMA1_CLK_ENABLE();
 8001532:	9401      	str	r4, [sp, #4]
 8001534:	6b2b      	ldr	r3, [r5, #48]	; 0x30
 8001536:	f443 1300 	orr.w	r3, r3, #2097152	; 0x200000
 800153a:	632b      	str	r3, [r5, #48]	; 0x30
 800153c:	6b2b      	ldr	r3, [r5, #48]	; 0x30
  hi2c3.Instance = I2C3;
 800153e:	4d62      	ldr	r5, [pc, #392]	; (80016c8 <main+0x33c>)
  __HAL_RCC_DMA1_CLK_ENABLE();
 8001540:	f403 1300 	and.w	r3, r3, #2097152	; 0x200000
  HAL_NVIC_SetPriority(DMA1_Stream1_IRQn, 5, 0);
 8001544:	4622      	mov	r2, r4
 8001546:	2105      	movs	r1, #5
  __HAL_RCC_DMA1_CLK_ENABLE();
 8001548:	9301      	str	r3, [sp, #4]
  HAL_NVIC_SetPriority(DMA1_Stream1_IRQn, 5, 0);
 800154a:	200c      	movs	r0, #12
  __HAL_RCC_DMA1_CLK_ENABLE();
 800154c:	9b01      	ldr	r3, [sp, #4]
  HAL_NVIC_SetPriority(DMA1_Stream1_IRQn, 5, 0);
 800154e:	f007 fdc3 	bl	80090d8 <HAL_NVIC_SetPriority>
  HAL_NVIC_EnableIRQ(DMA1_Stream1_IRQn);
 8001552:	200c      	movs	r0, #12
 8001554:	f007 fdfe 	bl	8009154 <HAL_NVIC_EnableIRQ>
  hcrc.Instance = CRC;
 8001558:	485c      	ldr	r0, [pc, #368]	; (80016cc <main+0x340>)
 800155a:	4b5d      	ldr	r3, [pc, #372]	; (80016d0 <main+0x344>)
 800155c:	6003      	str	r3, [r0, #0]
  if (HAL_CRC_Init(&hcrc) != HAL_OK)
 800155e:	f007 fe07 	bl	8009170 <HAL_CRC_Init>
  hi2c3.Init.ClockSpeed = 100000;
 8001562:	495c      	ldr	r1, [pc, #368]	; (80016d4 <main+0x348>)
 8001564:	4b5c      	ldr	r3, [pc, #368]	; (80016d8 <main+0x34c>)
  if (HAL_I2C_Init(&hi2c3) != HAL_OK)
 8001566:	4628      	mov	r0, r5
  hi2c3.Init.ClockSpeed = 100000;
 8001568:	e9c5 1300 	strd	r1, r3, [r5]
  hi2c3.Init.AddressingMode = I2C_ADDRESSINGMODE_7BIT;
 800156c:	f44f 4380 	mov.w	r3, #16384	; 0x4000
 8001570:	612b      	str	r3, [r5, #16]
  hi2c3.Init.OwnAddress1 = 0;
 8001572:	e9c5 4402 	strd	r4, r4, [r5, #8]
  hi2c3.Init.OwnAddress2 = 0;
 8001576:	e9c5 4405 	strd	r4, r4, [r5, #20]
  hi2c3.Init.NoStretchMode = I2C_NOSTRETCH_DISABLE;
 800157a:	e9c5 4407 	strd	r4, r4, [r5, #28]
  if (HAL_I2C_Init(&hi2c3) != HAL_OK)
 800157e:	f008 fbbd 	bl	8009cfc <HAL_I2C_Init>
  if (HAL_I2CEx_ConfigAnalogFilter(&hi2c3, I2C_ANALOGFILTER_DISABLE) != HAL_OK)
 8001582:	2110      	movs	r1, #16
 8001584:	4628      	mov	r0, r5
 8001586:	f009 fd85 	bl	800b094 <HAL_I2CEx_ConfigAnalogFilter>
  if (HAL_I2CEx_ConfigDigitalFilter(&hi2c3, 0) != HAL_OK)
 800158a:	4621      	mov	r1, r4
 800158c:	4628      	mov	r0, r5
 800158e:	f009 fda1 	bl	800b0d4 <HAL_I2CEx_ConfigDigitalFilter>
  hspi5.Init.Mode = SPI_MODE_MASTER;
 8001592:	f8df c15c 	ldr.w	ip, [pc, #348]	; 80016f0 <main+0x364>
  hspi5.Instance = SPI5;
 8001596:	4851      	ldr	r0, [pc, #324]	; (80016dc <main+0x350>)
  hsdram1.Instance = FMC_SDRAM_DEVICE;
 8001598:	4d51      	ldr	r5, [pc, #324]	; (80016e0 <main+0x354>)
  hspi5.Init.CRCCalculation = SPI_CRCCALCULATION_DISABLE;
 800159a:	6284      	str	r4, [r0, #40]	; 0x28
  hspi5.Init.Mode = SPI_MODE_MASTER;
 800159c:	f44f 7382 	mov.w	r3, #260	; 0x104
  hspi5.Init.BaudRatePrescaler = SPI_BAUDRATEPRESCALER_16;
 80015a0:	f44f 7e00 	mov.w	lr, #512	; 0x200
  hspi5.Init.Mode = SPI_MODE_MASTER;
 80015a4:	e9c0 c300 	strd	ip, r3, [r0]
  hspi5.Init.BaudRatePrescaler = SPI_BAUDRATEPRESCALER_16;
 80015a8:	2318      	movs	r3, #24
 80015aa:	e9c0 e306 	strd	lr, r3, [r0, #24]
  hspi5.Init.CRCPolynomial = 10;
 80015ae:	230a      	movs	r3, #10
 80015b0:	62c3      	str	r3, [r0, #44]	; 0x2c
  hspi5.Init.DataSize = SPI_DATASIZE_8BIT;
 80015b2:	e9c0 4402 	strd	r4, r4, [r0, #8]
  hspi5.Init.CLKPhase = SPI_PHASE_1EDGE;
 80015b6:	e9c0 4404 	strd	r4, r4, [r0, #16]
  hspi5.Init.TIMode = SPI_TIMODE_DISABLE;
 80015ba:	e9c0 4408 	strd	r4, r4, [r0, #32]
  if (HAL_SPI_Init(&hspi5) != HAL_OK)
 80015be:	f00a fc7b 	bl	800beb8 <HAL_SPI_Init>
  SdramTiming.ExitSelfRefreshDelay = 7;
 80015c2:	2307      	movs	r3, #7
 80015c4:	9312      	str	r3, [sp, #72]	; 0x48
  SdramTiming.RowCycleDelay = 7;
 80015c6:	9314      	str	r3, [sp, #80]	; 0x50
  hsdram1.Instance = FMC_SDRAM_DEVICE;
 80015c8:	4b46      	ldr	r3, [pc, #280]	; (80016e4 <main+0x358>)
 80015ca:	602b      	str	r3, [r5, #0]
  hsdram1.Init.CASLatency = FMC_SDRAM_CAS_LATENCY_3;
 80015cc:	2040      	movs	r0, #64	; 0x40
 80015ce:	f44f 73c0 	mov.w	r3, #384	; 0x180
 80015d2:	e9c5 0305 	strd	r0, r3, [r5, #20]
  hsdram1.Init.ReadPipeDelay = FMC_SDRAM_RPIPE_DELAY_1;
 80015d6:	f8c5 b028 	str.w	fp, [r5, #40]	; 0x28
  hsdram1.Init.SDClockPeriod = FMC_SDRAM_CLOCK_PERIOD_2;
 80015da:	f44f 6300 	mov.w	r3, #2048	; 0x800
  hsdram1.Init.MemoryDataWidth = FMC_SDRAM_MEM_BUS_WIDTH_16;
 80015de:	f04f 0b10 	mov.w	fp, #16
  if (HAL_SDRAM_Init(&hsdram1, &SdramTiming) != HAL_OK)
 80015e2:	a911      	add	r1, sp, #68	; 0x44
 80015e4:	4628      	mov	r0, r5
  hsdram1.Init.SDClockPeriod = FMC_SDRAM_CLOCK_PERIOD_2;
 80015e6:	622b      	str	r3, [r5, #32]
  hsdram1.Init.RowBitsNumber = FMC_SDRAM_ROW_BITS_NUM_12;
 80015e8:	f8c5 a00c 	str.w	sl, [r5, #12]
  hsdram1.Init.ColumnBitsNumber = FMC_SDRAM_COLUMN_BITS_NUM_8;
 80015ec:	e9c5 6401 	strd	r6, r4, [r5, #4]
  SdramTiming.RPDelay = 2;
 80015f0:	e9cd 9715 	strd	r9, r7, [sp, #84]	; 0x54
  hsdram1.Init.WriteProtection = FMC_SDRAM_WRITE_PROTECTION_DISABLE;
 80015f4:	61ec      	str	r4, [r5, #28]
  hsdram1.Init.ReadBurst = FMC_SDRAM_RBURST_DISABLE;
 80015f6:	626c      	str	r4, [r5, #36]	; 0x24
  SdramTiming.SelfRefreshTime = 4;
 80015f8:	f8cd a04c 	str.w	sl, [sp, #76]	; 0x4c
  hsdram1.Init.MemoryDataWidth = FMC_SDRAM_MEM_BUS_WIDTH_16;
 80015fc:	f8c5 b010 	str.w	fp, [r5, #16]
  SdramTiming.LoadToActiveDelay = 2;
 8001600:	9711      	str	r7, [sp, #68]	; 0x44
  SdramTiming.RCDDelay = 2;
 8001602:	9717      	str	r7, [sp, #92]	; 0x5c
  if (HAL_SDRAM_Init(&hsdram1, &SdramTiming) != HAL_OK)
 8001604:	f00a fb66 	bl	800bcd4 <HAL_SDRAM_Init>
  HAL_SDRAM_SendCommand(hsdram, Command, SDRAM_TIMEOUT);
 8001608:	f64f 72ff 	movw	r2, #65535	; 0xffff
 800160c:	a90d      	add	r1, sp, #52	; 0x34
 800160e:	4628      	mov	r0, r5
  Command->CommandTarget           = FMC_SDRAM_CMD_TARGET_BANK2;
 8001610:	e9cd 680d 	strd	r6, r8, [sp, #52]	; 0x34
  Command->ModeRegisterDefinition  = 0;
 8001614:	e9cd 640f 	strd	r6, r4, [sp, #60]	; 0x3c
 __IO uint32_t tmpmrd =0;
 8001618:	940a      	str	r4, [sp, #40]	; 0x28
  HAL_SDRAM_SendCommand(hsdram, Command, SDRAM_TIMEOUT);
 800161a:	f00a fb7d 	bl	800bd18 <HAL_SDRAM_SendCommand>
  HAL_Delay(1);
 800161e:	4630      	mov	r0, r6
 8001620:	f007 fd36 	bl	8009090 <HAL_Delay>
  HAL_SDRAM_SendCommand(hsdram, Command, SDRAM_TIMEOUT);
 8001624:	f64f 72ff 	movw	r2, #65535	; 0xffff
 8001628:	a90d      	add	r1, sp, #52	; 0x34
 800162a:	4628      	mov	r0, r5
  Command->CommandTarget           = FMC_SDRAM_CMD_TARGET_BANK2;
 800162c:	e9cd 780d 	strd	r7, r8, [sp, #52]	; 0x34
  Command->ModeRegisterDefinition  = 0;
 8001630:	e9cd 640f 	strd	r6, r4, [sp, #60]	; 0x3c
  HAL_SDRAM_SendCommand(hsdram, Command, SDRAM_TIMEOUT);
 8001634:	f00a fb70 	bl	800bd18 <HAL_SDRAM_SendCommand>
  HAL_SDRAM_SendCommand(hsdram, Command, SDRAM_TIMEOUT);
 8001638:	f64f 72ff 	movw	r2, #65535	; 0xffff
 800163c:	a90d      	add	r1, sp, #52	; 0x34
 800163e:	4628      	mov	r0, r5
  Command->CommandTarget           = FMC_SDRAM_CMD_TARGET_BANK2;
 8001640:	e9cd 980d 	strd	r9, r8, [sp, #52]	; 0x34
  Command->ModeRegisterDefinition  = 0;
 8001644:	e9cd a40f 	strd	sl, r4, [sp, #60]	; 0x3c
  HAL_SDRAM_SendCommand(hsdram, Command, SDRAM_TIMEOUT);
 8001648:	f00a fb66 	bl	800bd18 <HAL_SDRAM_SendCommand>
  tmpmrd = (uint32_t)SDRAM_MODEREG_BURST_LENGTH_1          |
 800164c:	f44f 730c 	mov.w	r3, #560	; 0x230
 8001650:	930a      	str	r3, [sp, #40]	; 0x28
  Command->ModeRegisterDefinition  = tmpmrd;
 8001652:	9b0a      	ldr	r3, [sp, #40]	; 0x28
 8001654:	9310      	str	r3, [sp, #64]	; 0x40
  HAL_SDRAM_SendCommand(hsdram, Command, SDRAM_TIMEOUT);
 8001656:	f64f 72ff 	movw	r2, #65535	; 0xffff
 800165a:	a90d      	add	r1, sp, #52	; 0x34
 800165c:	4628      	mov	r0, r5
  Command->CommandTarget           = FMC_SDRAM_CMD_TARGET_BANK2;
 800165e:	e9cd a80d 	strd	sl, r8, [sp, #52]	; 0x34
  Command->AutoRefreshNumber       = 1;
 8001662:	960f      	str	r6, [sp, #60]	; 0x3c
  HAL_SDRAM_SendCommand(hsdram, Command, SDRAM_TIMEOUT);
 8001664:	f00a fb58 	bl	800bd18 <HAL_SDRAM_SendCommand>
  HAL_SDRAM_ProgramRefreshRate(hsdram, REFRESH_COUNT);
 8001668:	4628      	mov	r0, r5
 800166a:	f240 516a 	movw	r1, #1386	; 0x56a
  hltdc.Instance = LTDC;
 800166e:	4d1e      	ldr	r5, [pc, #120]	; (80016e8 <main+0x35c>)
  HAL_SDRAM_ProgramRefreshRate(hsdram, REFRESH_COUNT);
 8001670:	f00a fb70 	bl	800bd54 <HAL_SDRAM_ProgramRefreshRate>
  LTDC_LayerCfgTypeDef pLayerCfg = {0};
 8001674:	2234      	movs	r2, #52	; 0x34
 8001676:	4621      	mov	r1, r4
 8001678:	a811      	add	r0, sp, #68	; 0x44
 800167a:	f028 fee8 	bl	802a44e <memset>
  hltdc.Instance = LTDC;
 800167e:	4b1b      	ldr	r3, [pc, #108]	; (80016ec <main+0x360>)
 8001680:	602b      	str	r3, [r5, #0]
  hltdc.Init.AccumulatedHBP = 29;
 8001682:	231d      	movs	r3, #29
 8001684:	61eb      	str	r3, [r5, #28]
  hltdc.Init.AccumulatedActiveH = 323;
 8001686:	f240 180d 	movw	r8, #269	; 0x10d
 800168a:	f240 1343 	movw	r3, #323	; 0x143
 800168e:	e9c5 8309 	strd	r8, r3, [r5, #36]	; 0x24
  hltdc.Init.AccumulatedVBP = 3;
 8001692:	f8c5 9020 	str.w	r9, [r5, #32]
  hltdc.Init.TotalHeigh = 327;
 8001696:	f240 1347 	movw	r3, #327	; 0x147
  hltdc.Init.Backcolor.Blue = 0;
 800169a:	86ac      	strh	r4, [r5, #52]	; 0x34
  hltdc.Init.HorizontalSync = 9;
 800169c:	f04f 0909 	mov.w	r9, #9
  hltdc.Init.TotalHeigh = 327;
 80016a0:	f240 1a17 	movw	sl, #279	; 0x117
  if (HAL_LTDC_Init(&hltdc) != HAL_OK)
 80016a4:	4628      	mov	r0, r5
  hltdc.Init.TotalHeigh = 327;
 80016a6:	e9c5 a30b 	strd	sl, r3, [r5, #44]	; 0x2c
  hltdc.Init.VSPolarity = LTDC_VSPOLARITY_AL;
 80016aa:	e9c5 4401 	strd	r4, r4, [r5, #4]
 80016ae:	e021      	b.n	80016f4 <main+0x368>
 80016b0:	40023800 	.word	0x40023800
 80016b4:	40021000 	.word	0x40021000
 80016b8:	40020800 	.word	0x40020800
 80016bc:	40020c00 	.word	0x40020c00
 80016c0:	40021800 	.word	0x40021800
 80016c4:	40020000 	.word	0x40020000
 80016c8:	20001988 	.word	0x20001988
 80016cc:	200018e0 	.word	0x200018e0
 80016d0:	40023000 	.word	0x40023000
 80016d4:	40005c00 	.word	0x40005c00
 80016d8:	000186a0 	.word	0x000186a0
 80016dc:	20001ab8 	.word	0x20001ab8
 80016e0:	20001a84 	.word	0x20001a84
 80016e4:	a0000140 	.word	0xa0000140
 80016e8:	200019dc 	.word	0x200019dc
 80016ec:	40016800 	.word	0x40016800
 80016f0:	40015000 	.word	0x40015000
  hltdc.Init.PCPolarity = LTDC_PCPOLARITY_IPC;
 80016f4:	e9c5 4403 	strd	r4, r4, [r5, #12]
  hltdc.Init.VerticalSync = 1;
 80016f8:	61ae      	str	r6, [r5, #24]
  hltdc.Init.Backcolor.Red = 0;
 80016fa:	f885 4036 	strb.w	r4, [r5, #54]	; 0x36
  hltdc.Init.HorizontalSync = 9;
 80016fe:	f8c5 9014 	str.w	r9, [r5, #20]
  if (HAL_LTDC_Init(&hltdc) != HAL_OK)
 8001702:	f009 fd0b 	bl	800b11c <HAL_LTDC_Init>
  pLayerCfg.WindowX1 = 240;
 8001706:	23f0      	movs	r3, #240	; 0xf0
 8001708:	9312      	str	r3, [sp, #72]	; 0x48
  pLayerCfg.ImageWidth = 240;
 800170a:	931b      	str	r3, [sp, #108]	; 0x6c
  pLayerCfg.WindowY1 = 320;
 800170c:	f44f 73a0 	mov.w	r3, #320	; 0x140
 8001710:	9314      	str	r3, [sp, #80]	; 0x50
  pLayerCfg.ImageHeight = 320;
 8001712:	931c      	str	r3, [sp, #112]	; 0x70
  pLayerCfg.Alpha = 255;
 8001714:	23ff      	movs	r3, #255	; 0xff
  pLayerCfg.BlendingFactor2 = LTDC_BLENDING_FACTOR2_CA;
 8001716:	f44f 6c80 	mov.w	ip, #1024	; 0x400
  if (HAL_LTDC_ConfigLayer(&hltdc, &pLayerCfg, 0) != HAL_OK)
 800171a:	4622      	mov	r2, r4
 800171c:	a911      	add	r1, sp, #68	; 0x44
 800171e:	4628      	mov	r0, r5
  pLayerCfg.Alpha = 255;
 8001720:	9316      	str	r3, [sp, #88]	; 0x58
  pLayerCfg.BlendingFactor2 = LTDC_BLENDING_FACTOR2_CA;
 8001722:	2305      	movs	r3, #5
 8001724:	e9cd c318 	strd	ip, r3, [sp, #96]	; 0x60
  LcdDrv = &ili9341_drv;
 8001728:	4d60      	ldr	r5, [pc, #384]	; (80018ac <main+0x520>)
  pLayerCfg.WindowX0 = 0;
 800172a:	9411      	str	r4, [sp, #68]	; 0x44
  pLayerCfg.WindowY0 = 0;
 800172c:	9413      	str	r4, [sp, #76]	; 0x4c
  pLayerCfg.PixelFormat = LTDC_PIXEL_FORMAT_RGB565;
 800172e:	9715      	str	r7, [sp, #84]	; 0x54
  pLayerCfg.Alpha0 = 0;
 8001730:	9417      	str	r4, [sp, #92]	; 0x5c
  pLayerCfg.FBStartAdress = 0;
 8001732:	941a      	str	r4, [sp, #104]	; 0x68
  pLayerCfg.Backcolor.Blue = 0;
 8001734:	f8ad 4074 	strh.w	r4, [sp, #116]	; 0x74
  pLayerCfg.Backcolor.Red = 0;
 8001738:	f88d 4076 	strb.w	r4, [sp, #118]	; 0x76
  if (HAL_LTDC_ConfigLayer(&hltdc, &pLayerCfg, 0) != HAL_OK)
 800173c:	f009 fdc4 	bl	800b2c8 <HAL_LTDC_ConfigLayer>
  LcdDrv = &ili9341_drv;
 8001740:	4b5b      	ldr	r3, [pc, #364]	; (80018b0 <main+0x524>)
 8001742:	602b      	str	r3, [r5, #0]
  LcdDrv->Init();
 8001744:	681b      	ldr	r3, [r3, #0]
  htim1.Instance = TIM1;
 8001746:	f8df 81ac 	ldr.w	r8, [pc, #428]	; 80018f4 <main+0x568>
  LcdDrv->Init();
 800174a:	4798      	blx	r3
  LcdDrv->DisplayOff();
 800174c:	682b      	ldr	r3, [r5, #0]
  htim3.Instance = TIM3;
 800174e:	4d59      	ldr	r5, [pc, #356]	; (80018b4 <main+0x528>)
  LcdDrv->DisplayOff();
 8001750:	68db      	ldr	r3, [r3, #12]
 8001752:	4798      	blx	r3
  htim1.Init.Period = 65535;
 8001754:	f64f 7aff 	movw	sl, #65535	; 0xffff
  htim1.Instance = TIM1;
 8001758:	4b57      	ldr	r3, [pc, #348]	; (80018b8 <main+0x52c>)
 800175a:	f8c8 3000 	str.w	r3, [r8]
  if (HAL_TIM_Base_Init(&htim1) != HAL_OK)
 800175e:	4640      	mov	r0, r8
  htim1.Init.Period = 65535;
 8001760:	f8c8 a00c 	str.w	sl, [r8, #12]
  htim1.Init.CounterMode = TIM_COUNTERMODE_UP;
 8001764:	e9c8 4401 	strd	r4, r4, [r8, #4]
  htim1.Init.RepetitionCounter = 0;
 8001768:	e9c8 4404 	strd	r4, r4, [r8, #16]
  htim1.Init.AutoReloadPreload = TIM_AUTORELOAD_PRELOAD_DISABLE;
 800176c:	f8c8 4018 	str.w	r4, [r8, #24]
  TIM_SlaveConfigTypeDef sSlaveConfig = {0};
 8001770:	e9cd 4411 	strd	r4, r4, [sp, #68]	; 0x44
 8001774:	e9cd 4413 	strd	r4, r4, [sp, #76]	; 0x4c
  TIM_MasterConfigTypeDef sMasterConfig = {0};
 8001778:	e9cd 440d 	strd	r4, r4, [sp, #52]	; 0x34
  TIM_SlaveConfigTypeDef sSlaveConfig = {0};
 800177c:	9415      	str	r4, [sp, #84]	; 0x54
  if (HAL_TIM_Base_Init(&htim1) != HAL_OK)
 800177e:	f00a ff8b 	bl	800c698 <HAL_TIM_Base_Init>
  if (HAL_TIM_SlaveConfigSynchro(&htim1, &sSlaveConfig) != HAL_OK)
 8001782:	a911      	add	r1, sp, #68	; 0x44
 8001784:	4640      	mov	r0, r8
  sSlaveConfig.InputTrigger = TIM_TS_ITR0;
 8001786:	e9cd 4411 	strd	r4, r4, [sp, #68]	; 0x44
  if (HAL_TIM_SlaveConfigSynchro(&htim1, &sSlaveConfig) != HAL_OK)
 800178a:	f00b f8ff 	bl	800c98c <HAL_TIM_SlaveConfigSynchro>
  if (HAL_TIMEx_MasterConfigSynchronization(&htim1, &sMasterConfig) != HAL_OK)
 800178e:	a90d      	add	r1, sp, #52	; 0x34
 8001790:	4640      	mov	r0, r8
  sMasterConfig.MasterSlaveMode = TIM_MASTERSLAVEMODE_DISABLE;
 8001792:	e9cd 440d 	strd	r4, r4, [sp, #52]	; 0x34
  if (HAL_TIMEx_MasterConfigSynchronization(&htim1, &sMasterConfig) != HAL_OK)
 8001796:	f00b fa37 	bl	800cc08 <HAL_TIMEx_MasterConfigSynchronization>
  htim3.Instance = TIM3;
 800179a:	4b48      	ldr	r3, [pc, #288]	; (80018bc <main+0x530>)
 800179c:	602b      	str	r3, [r5, #0]
  if (HAL_TIM_Base_Init(&htim3) != HAL_OK)
 800179e:	4628      	mov	r0, r5
  htim3.Init.Period = 65535;
 80017a0:	f8c5 a00c 	str.w	sl, [r5, #12]
  htim3.Init.CounterMode = TIM_COUNTERMODE_UP;
 80017a4:	e9c5 4401 	strd	r4, r4, [r5, #4]
  htim3.Init.ClockDivision = TIM_CLOCKDIVISION_DIV1;
 80017a8:	612c      	str	r4, [r5, #16]
  htim3.Init.AutoReloadPreload = TIM_AUTORELOAD_PRELOAD_DISABLE;
 80017aa:	61ac      	str	r4, [r5, #24]
  sClockSourceConfig.ClockSource = TIM_CLOCKSOURCE_INTERNAL;
 80017ac:	f44f 5a80 	mov.w	sl, #4096	; 0x1000
  TIM_ClockConfigTypeDef sClockSourceConfig = {0};
 80017b0:	e9cd 440d 	strd	r4, r4, [sp, #52]	; 0x34
 80017b4:	e9cd 440f 	strd	r4, r4, [sp, #60]	; 0x3c
  TIM_SlaveConfigTypeDef sSlaveConfig = {0};
 80017b8:	e9cd 4411 	strd	r4, r4, [sp, #68]	; 0x44
 80017bc:	e9cd 4413 	strd	r4, r4, [sp, #76]	; 0x4c
 80017c0:	9415      	str	r4, [sp, #84]	; 0x54
  TIM_MasterConfigTypeDef sMasterConfig = {0};
 80017c2:	940b      	str	r4, [sp, #44]	; 0x2c
 80017c4:	940c      	str	r4, [sp, #48]	; 0x30
  if (HAL_TIM_Base_Init(&htim3) != HAL_OK)
 80017c6:	f00a ff67 	bl	800c698 <HAL_TIM_Base_Init>
  if (HAL_TIM_ConfigClockSource(&htim3, &sClockSourceConfig) != HAL_OK)
 80017ca:	a90d      	add	r1, sp, #52	; 0x34
 80017cc:	4628      	mov	r0, r5
  hdma2d.Instance = DMA2D;
 80017ce:	f8df 8128 	ldr.w	r8, [pc, #296]	; 80018f8 <main+0x56c>
  sClockSourceConfig.ClockSource = TIM_CLOCKSOURCE_INTERNAL;
 80017d2:	f8cd a034 	str.w	sl, [sp, #52]	; 0x34
  if (HAL_TIM_ConfigClockSource(&htim3, &sClockSourceConfig) != HAL_OK)
 80017d6:	f00b f829 	bl	800c82c <HAL_TIM_ConfigClockSource>
  if (HAL_TIM_SlaveConfigSynchro(&htim3, &sSlaveConfig) != HAL_OK)
 80017da:	a911      	add	r1, sp, #68	; 0x44
 80017dc:	4628      	mov	r0, r5
  sSlaveConfig.InputTrigger = TIM_TS_ITR0;
 80017de:	e9cd 4411 	strd	r4, r4, [sp, #68]	; 0x44
  if (HAL_TIM_SlaveConfigSynchro(&htim3, &sSlaveConfig) != HAL_OK)
 80017e2:	f00b f8d3 	bl	800c98c <HAL_TIM_SlaveConfigSynchro>
  if (HAL_TIMEx_MasterConfigSynchronization(&htim3, &sMasterConfig) != HAL_OK)
 80017e6:	a90b      	add	r1, sp, #44	; 0x2c
 80017e8:	4628      	mov	r0, r5
  sMasterConfig.MasterSlaveMode = TIM_MASTERSLAVEMODE_DISABLE;
 80017ea:	e9cd 440b 	strd	r4, r4, [sp, #44]	; 0x2c
  if (HAL_TIMEx_MasterConfigSynchronization(&htim3, &sMasterConfig) != HAL_OK)
 80017ee:	f00b fa0b 	bl	800cc08 <HAL_TIMEx_MasterConfigSynchronization>
  hdma2d.Instance = DMA2D;
 80017f2:	4b33      	ldr	r3, [pc, #204]	; (80018c0 <main+0x534>)
  htim2.Instance = TIM2;
 80017f4:	4d33      	ldr	r5, [pc, #204]	; (80018c4 <main+0x538>)
  hdma2d.Instance = DMA2D;
 80017f6:	f8c8 3000 	str.w	r3, [r8]
  hdma2d.LayerCfg[1].InputColorMode = DMA2D_INPUT_ARGB8888;
 80017fa:	e9c8 440a 	strd	r4, r4, [r8, #40]	; 0x28
  hdma2d.LayerCfg[1].InputAlpha = 0;
 80017fe:	e9c8 440c 	strd	r4, r4, [r8, #48]	; 0x30
  if (HAL_DMA2D_Init(&hdma2d) != HAL_OK)
 8001802:	4640      	mov	r0, r8
  hdma2d.Init.ColorMode = DMA2D_OUTPUT_ARGB8888;
 8001804:	e9c8 4401 	strd	r4, r4, [r8, #4]
  hdma2d.Init.OutputOffset = 0;
 8001808:	f8c8 400c 	str.w	r4, [r8, #12]
  if (HAL_DMA2D_Init(&hdma2d) != HAL_OK)
 800180c:	f007 fe48 	bl	80094a0 <HAL_DMA2D_Init>
  if (HAL_DMA2D_ConfigLayer(&hdma2d, 1) != HAL_OK)
 8001810:	4631      	mov	r1, r6
 8001812:	4640      	mov	r0, r8
 8001814:	f007 fe72 	bl	80094fc <HAL_DMA2D_ConfigLayer>
  htim2.Init.Prescaler = 13124;
 8001818:	f04f 4e80 	mov.w	lr, #1073741824	; 0x40000000
 800181c:	f243 3344 	movw	r3, #13124	; 0x3344
 8001820:	e9c5 e300 	strd	lr, r3, [r5]
  if (HAL_TIM_Base_Init(&htim2) != HAL_OK)
 8001824:	4628      	mov	r0, r5
  htim2.Init.AutoReloadPreload = TIM_AUTORELOAD_PRELOAD_ENABLE;
 8001826:	2380      	movs	r3, #128	; 0x80
 8001828:	61ab      	str	r3, [r5, #24]
  htim2.Init.Period = 9;
 800182a:	f8c5 900c 	str.w	r9, [r5, #12]
  htim2.Init.CounterMode = TIM_COUNTERMODE_UP;
 800182e:	60ac      	str	r4, [r5, #8]
  htim2.Init.ClockDivision = TIM_CLOCKDIVISION_DIV1;
 8001830:	612c      	str	r4, [r5, #16]
  TIM_ClockConfigTypeDef sClockSourceConfig = {0};
 8001832:	e9cd 4411 	strd	r4, r4, [sp, #68]	; 0x44
 8001836:	e9cd 4413 	strd	r4, r4, [sp, #76]	; 0x4c
  TIM_MasterConfigTypeDef sMasterConfig = {0};
 800183a:	e9cd 440d 	strd	r4, r4, [sp, #52]	; 0x34
  if (HAL_TIM_Base_Init(&htim2) != HAL_OK)
 800183e:	f00a ff2b 	bl	800c698 <HAL_TIM_Base_Init>
  if (HAL_TIM_ConfigClockSource(&htim2, &sClockSourceConfig) != HAL_OK)
 8001842:	a911      	add	r1, sp, #68	; 0x44
 8001844:	4628      	mov	r0, r5
  sClockSourceConfig.ClockSource = TIM_CLOCKSOURCE_INTERNAL;
 8001846:	f8cd a044 	str.w	sl, [sp, #68]	; 0x44
  if (HAL_TIM_ConfigClockSource(&htim2, &sClockSourceConfig) != HAL_OK)
 800184a:	f00a ffef 	bl	800c82c <HAL_TIM_ConfigClockSource>
  if (HAL_TIMEx_MasterConfigSynchronization(&htim2, &sMasterConfig) != HAL_OK)
 800184e:	a90d      	add	r1, sp, #52	; 0x34
 8001850:	4628      	mov	r0, r5
  sMasterConfig.MasterSlaveMode = TIM_MASTERSLAVEMODE_DISABLE;
 8001852:	e9cd 440d 	strd	r4, r4, [sp, #52]	; 0x34
  if (HAL_TIMEx_MasterConfigSynchronization(&htim2, &sMasterConfig) != HAL_OK)
 8001856:	f00b f9d7 	bl	800cc08 <HAL_TIMEx_MasterConfigSynchronization>
  HAL_TIM_Base_Start_IT(&htim2);
 800185a:	4628      	mov	r0, r5
 800185c:	f00a ffaa 	bl	800c7b4 <HAL_TIM_Base_Start_IT>
  MX_TouchGFX_Init();
 8001860:	f7fe ff20 	bl	80006a4 <MX_TouchGFX_Init>
  MX_TouchGFX_PreOSInit();
 8001864:	f7fe ff1c 	bl	80006a0 <MX_TouchGFX_PreOSInit>
  osKernelInitialize();
 8001868:	f00b fae0 	bl	800ce2c <osKernelInitialize>
  TimeoutQueueHandle = osMessageQueueNew (16, sizeof(uint16_t), &TimeoutQueue_attributes);
 800186c:	4a16      	ldr	r2, [pc, #88]	; (80018c8 <main+0x53c>)
 800186e:	4639      	mov	r1, r7
 8001870:	4658      	mov	r0, fp
 8001872:	f00b fc15 	bl	800d0a0 <osMessageQueueNew>
 8001876:	4b15      	ldr	r3, [pc, #84]	; (80018cc <main+0x540>)
  defaultTaskHandle = osThreadNew(StartDefaultTask, NULL, &defaultTask_attributes);
 8001878:	4a15      	ldr	r2, [pc, #84]	; (80018d0 <main+0x544>)
  TimeoutQueueHandle = osMessageQueueNew (16, sizeof(uint16_t), &TimeoutQueue_attributes);
 800187a:	6018      	str	r0, [r3, #0]
  defaultTaskHandle = osThreadNew(StartDefaultTask, NULL, &defaultTask_attributes);
 800187c:	4621      	mov	r1, r4
 800187e:	4815      	ldr	r0, [pc, #84]	; (80018d4 <main+0x548>)
 8001880:	f00b fb00 	bl	800ce84 <osThreadNew>
 8001884:	4b14      	ldr	r3, [pc, #80]	; (80018d8 <main+0x54c>)
  GUI_TaskHandle = osThreadNew(TouchGFX_Task, NULL, &GUI_Task_attributes);
 8001886:	4a15      	ldr	r2, [pc, #84]	; (80018dc <main+0x550>)
  defaultTaskHandle = osThreadNew(StartDefaultTask, NULL, &defaultTask_attributes);
 8001888:	6018      	str	r0, [r3, #0]
  GUI_TaskHandle = osThreadNew(TouchGFX_Task, NULL, &GUI_Task_attributes);
 800188a:	4621      	mov	r1, r4
 800188c:	4814      	ldr	r0, [pc, #80]	; (80018e0 <main+0x554>)
 800188e:	f00b faf9 	bl	800ce84 <osThreadNew>
 8001892:	4b14      	ldr	r3, [pc, #80]	; (80018e4 <main+0x558>)
  TimeoutTaskHandle = osThreadNew(StartTimeoutTask, NULL, &TimeoutTask_attributes);
 8001894:	4a14      	ldr	r2, [pc, #80]	; (80018e8 <main+0x55c>)
  GUI_TaskHandle = osThreadNew(TouchGFX_Task, NULL, &GUI_Task_attributes);
 8001896:	4605      	mov	r5, r0
  TimeoutTaskHandle = osThreadNew(StartTimeoutTask, NULL, &TimeoutTask_attributes);
 8001898:	4621      	mov	r1, r4
 800189a:	4814      	ldr	r0, [pc, #80]	; (80018ec <main+0x560>)
  GUI_TaskHandle = osThreadNew(TouchGFX_Task, NULL, &GUI_Task_attributes);
 800189c:	601d      	str	r5, [r3, #0]
  TimeoutTaskHandle = osThreadNew(StartTimeoutTask, NULL, &TimeoutTask_attributes);
 800189e:	f00b faf1 	bl	800ce84 <osThreadNew>
 80018a2:	4b13      	ldr	r3, [pc, #76]	; (80018f0 <main+0x564>)
 80018a4:	6018      	str	r0, [r3, #0]
  osKernelStart();
 80018a6:	f00b fad3 	bl	800ce50 <osKernelStart>
  while (1)
 80018aa:	e7fe      	b.n	80018aa <main+0x51e>
 80018ac:	200018d0 	.word	0x200018d0
 80018b0:	20000018 	.word	0x20000018
 80018b4:	20001ba0 	.word	0x20001ba0
 80018b8:	40010000 	.word	0x40010000
 80018bc:	40000400 	.word	0x40000400
 80018c0:	4002b000 	.word	0x4002b000
 80018c4:	20001b58 	.word	0x20001b58
 80018c8:	0802b8c0 	.word	0x0802b8c0
 80018cc:	200018d4 	.word	0x200018d4
 80018d0:	0802b8fc 	.word	0x0802b8fc
 80018d4:	0800129d 	.word	0x0800129d
 80018d8:	200018dc 	.word	0x200018dc
 80018dc:	0802b89c 	.word	0x0802b89c
 80018e0:	080006b5 	.word	0x080006b5
 80018e4:	200018cc 	.word	0x200018cc
 80018e8:	0802b8d8 	.word	0x0802b8d8
 80018ec:	080012a9 	.word	0x080012a9
 80018f0:	200018d8 	.word	0x200018d8
 80018f4:	20001b10 	.word	0x20001b10
 80018f8:	200018e8 	.word	0x200018e8

080018fc <IOE_Init>:
 80018fc:	4770      	bx	lr
 80018fe:	bf00      	nop

08001900 <IOE_ITConfig>:
 8001900:	4770      	bx	lr
 8001902:	bf00      	nop

08001904 <IOE_Write>:
{
 8001904:	b510      	push	{r4, lr}
  status = HAL_I2C_Mem_Write(&hi2c3, Addr, (uint16_t)Reg, I2C_MEMADD_SIZE_8BIT, &Value, 1, I2c3Timeout);
 8001906:	4c09      	ldr	r4, [pc, #36]	; (800192c <IOE_Write+0x28>)
{
 8001908:	b086      	sub	sp, #24
  status = HAL_I2C_Mem_Write(&hi2c3, Addr, (uint16_t)Reg, I2C_MEMADD_SIZE_8BIT, &Value, 1, I2c3Timeout);
 800190a:	6824      	ldr	r4, [r4, #0]
 800190c:	9402      	str	r4, [sp, #8]
{
 800190e:	4614      	mov	r4, r2
  status = HAL_I2C_Mem_Write(&hi2c3, Addr, (uint16_t)Reg, I2C_MEMADD_SIZE_8BIT, &Value, 1, I2c3Timeout);
 8001910:	2301      	movs	r3, #1
 8001912:	f88d 4017 	strb.w	r4, [sp, #23]
 8001916:	f10d 0417 	add.w	r4, sp, #23
 800191a:	460a      	mov	r2, r1
 800191c:	9301      	str	r3, [sp, #4]
 800191e:	4601      	mov	r1, r0
 8001920:	9400      	str	r4, [sp, #0]
 8001922:	4803      	ldr	r0, [pc, #12]	; (8001930 <IOE_Write+0x2c>)
 8001924:	f008 fab2 	bl	8009e8c <HAL_I2C_Mem_Write>
}
 8001928:	b006      	add	sp, #24
 800192a:	bd10      	pop	{r4, pc}
 800192c:	2000000c 	.word	0x2000000c
 8001930:	20001988 	.word	0x20001988

08001934 <IOE_Read>:
{
 8001934:	b500      	push	{lr}
  status = HAL_I2C_Mem_Read(&hi2c3, Addr, Reg, I2C_MEMADD_SIZE_8BIT, &value, 1, I2c3Timeout);
 8001936:	4b0b      	ldr	r3, [pc, #44]	; (8001964 <IOE_Read+0x30>)
{
 8001938:	b087      	sub	sp, #28
  status = HAL_I2C_Mem_Read(&hi2c3, Addr, Reg, I2C_MEMADD_SIZE_8BIT, &value, 1, I2c3Timeout);
 800193a:	681b      	ldr	r3, [r3, #0]
 800193c:	9302      	str	r3, [sp, #8]
{
 800193e:	4684      	mov	ip, r0
 8001940:	460a      	mov	r2, r1
  status = HAL_I2C_Mem_Read(&hi2c3, Addr, Reg, I2C_MEMADD_SIZE_8BIT, &value, 1, I2c3Timeout);
 8001942:	2301      	movs	r3, #1
 8001944:	f10d 0117 	add.w	r1, sp, #23
  uint8_t value = 0;
 8001948:	2000      	movs	r0, #0
  status = HAL_I2C_Mem_Read(&hi2c3, Addr, Reg, I2C_MEMADD_SIZE_8BIT, &value, 1, I2c3Timeout);
 800194a:	e9cd 1300 	strd	r1, r3, [sp]
  uint8_t value = 0;
 800194e:	f88d 0017 	strb.w	r0, [sp, #23]
  status = HAL_I2C_Mem_Read(&hi2c3, Addr, Reg, I2C_MEMADD_SIZE_8BIT, &value, 1, I2c3Timeout);
 8001952:	4661      	mov	r1, ip
 8001954:	4804      	ldr	r0, [pc, #16]	; (8001968 <IOE_Read+0x34>)
 8001956:	f008 fb8b 	bl	800a070 <HAL_I2C_Mem_Read>
}
 800195a:	f89d 0017 	ldrb.w	r0, [sp, #23]
 800195e:	b007      	add	sp, #28
 8001960:	f85d fb04 	ldr.w	pc, [sp], #4
 8001964:	2000000c 	.word	0x2000000c
 8001968:	20001988 	.word	0x20001988

0800196c <IOE_ReadMultiple>:
{
 800196c:	b510      	push	{r4, lr}
  status = HAL_I2C_Mem_Read(&hi2c3, Addr, (uint16_t)Reg, I2C_MEMADD_SIZE_8BIT, pBuffer, Length, I2c3Timeout);
 800196e:	4c09      	ldr	r4, [pc, #36]	; (8001994 <IOE_ReadMultiple+0x28>)
{
 8001970:	b084      	sub	sp, #16
 8001972:	4684      	mov	ip, r0
  status = HAL_I2C_Mem_Read(&hi2c3, Addr, (uint16_t)Reg, I2C_MEMADD_SIZE_8BIT, pBuffer, Length, I2c3Timeout);
 8001974:	6820      	ldr	r0, [r4, #0]
 8001976:	9002      	str	r0, [sp, #8]
 8001978:	e9cd 2300 	strd	r2, r3, [sp]
 800197c:	4806      	ldr	r0, [pc, #24]	; (8001998 <IOE_ReadMultiple+0x2c>)
 800197e:	460a      	mov	r2, r1
 8001980:	2301      	movs	r3, #1
 8001982:	4661      	mov	r1, ip
 8001984:	f008 fb74 	bl	800a070 <HAL_I2C_Mem_Read>
}
 8001988:	3800      	subs	r0, #0
 800198a:	bf18      	it	ne
 800198c:	2001      	movne	r0, #1
 800198e:	b004      	add	sp, #16
 8001990:	bd10      	pop	{r4, pc}
 8001992:	bf00      	nop
 8001994:	2000000c 	.word	0x2000000c
 8001998:	20001988 	.word	0x20001988

0800199c <IOE_Delay>:
 800199c:	f007 bb78 	b.w	8009090 <HAL_Delay>

080019a0 <LCD_IO_Init>:
{
 80019a0:	b508      	push	{r3, lr}
  HAL_GPIO_WritePin(GPIOC, GPIO_PIN_2, GPIO_PIN_RESET);
 80019a2:	4806      	ldr	r0, [pc, #24]	; (80019bc <LCD_IO_Init+0x1c>)
 80019a4:	2200      	movs	r2, #0
 80019a6:	2104      	movs	r1, #4
 80019a8:	f007 ff42 	bl	8009830 <HAL_GPIO_WritePin>
}
 80019ac:	e8bd 4008 	ldmia.w	sp!, {r3, lr}
  HAL_GPIO_WritePin(GPIOC, GPIO_PIN_2, GPIO_PIN_SET);
 80019b0:	4802      	ldr	r0, [pc, #8]	; (80019bc <LCD_IO_Init+0x1c>)
 80019b2:	2201      	movs	r2, #1
 80019b4:	2104      	movs	r1, #4
 80019b6:	f007 bf3b 	b.w	8009830 <HAL_GPIO_WritePin>
 80019ba:	bf00      	nop
 80019bc:	40020800 	.word	0x40020800

080019c0 <LCD_IO_WriteData>:
{
 80019c0:	b530      	push	{r4, r5, lr}
  HAL_GPIO_WritePin(GPIOC, GPIO_PIN_2, GPIO_PIN_RESET);
 80019c2:	4d10      	ldr	r5, [pc, #64]	; (8001a04 <LCD_IO_WriteData+0x44>)
{
 80019c4:	b083      	sub	sp, #12
 80019c6:	4604      	mov	r4, r0
  HAL_GPIO_WritePin(GPIOD, GPIO_PIN_13, GPIO_PIN_SET);
 80019c8:	2201      	movs	r2, #1
 80019ca:	480f      	ldr	r0, [pc, #60]	; (8001a08 <LCD_IO_WriteData+0x48>)
 80019cc:	f44f 5100 	mov.w	r1, #8192	; 0x2000
 80019d0:	f007 ff2e 	bl	8009830 <HAL_GPIO_WritePin>
  HAL_GPIO_WritePin(GPIOC, GPIO_PIN_2, GPIO_PIN_RESET);
 80019d4:	4628      	mov	r0, r5
 80019d6:	2200      	movs	r2, #0
 80019d8:	2104      	movs	r1, #4
 80019da:	f007 ff29 	bl	8009830 <HAL_GPIO_WritePin>
  status = HAL_SPI_Transmit(&hspi5, (uint8_t*) &Value, 1, Spi5Timeout);
 80019de:	4b0b      	ldr	r3, [pc, #44]	; (8001a0c <LCD_IO_WriteData+0x4c>)
 80019e0:	480b      	ldr	r0, [pc, #44]	; (8001a10 <LCD_IO_WriteData+0x50>)
 80019e2:	681b      	ldr	r3, [r3, #0]
 80019e4:	f8ad 4006 	strh.w	r4, [sp, #6]
 80019e8:	f10d 0106 	add.w	r1, sp, #6
 80019ec:	2201      	movs	r2, #1
 80019ee:	f00a fac5 	bl	800bf7c <HAL_SPI_Transmit>
  HAL_GPIO_WritePin(GPIOC, GPIO_PIN_2, GPIO_PIN_SET);
 80019f2:	2201      	movs	r2, #1
 80019f4:	2104      	movs	r1, #4
 80019f6:	4628      	mov	r0, r5
}
 80019f8:	b003      	add	sp, #12
 80019fa:	e8bd 4030 	ldmia.w	sp!, {r4, r5, lr}
  HAL_GPIO_WritePin(GPIOC, GPIO_PIN_2, GPIO_PIN_SET);
 80019fe:	f007 bf17 	b.w	8009830 <HAL_GPIO_WritePin>
 8001a02:	bf00      	nop
 8001a04:	40020800 	.word	0x40020800
 8001a08:	40020c00 	.word	0x40020c00
 8001a0c:	20000010 	.word	0x20000010
 8001a10:	20001ab8 	.word	0x20001ab8

08001a14 <LCD_IO_WriteReg>:
{
 8001a14:	b530      	push	{r4, r5, lr}
  HAL_GPIO_WritePin(GPIOC, GPIO_PIN_2, GPIO_PIN_RESET);
 8001a16:	4d10      	ldr	r5, [pc, #64]	; (8001a58 <LCD_IO_WriteReg+0x44>)
{
 8001a18:	b083      	sub	sp, #12
 8001a1a:	4604      	mov	r4, r0
  HAL_GPIO_WritePin(GPIOD, GPIO_PIN_13, GPIO_PIN_RESET);
 8001a1c:	2200      	movs	r2, #0
 8001a1e:	480f      	ldr	r0, [pc, #60]	; (8001a5c <LCD_IO_WriteReg+0x48>)
 8001a20:	f44f 5100 	mov.w	r1, #8192	; 0x2000
 8001a24:	f007 ff04 	bl	8009830 <HAL_GPIO_WritePin>
  HAL_GPIO_WritePin(GPIOC, GPIO_PIN_2, GPIO_PIN_RESET);
 8001a28:	4628      	mov	r0, r5
 8001a2a:	2200      	movs	r2, #0
 8001a2c:	2104      	movs	r1, #4
 8001a2e:	f007 feff 	bl	8009830 <HAL_GPIO_WritePin>
  status = HAL_SPI_Transmit(&hspi5, (uint8_t*) &Value, 1, Spi5Timeout);
 8001a32:	4b0b      	ldr	r3, [pc, #44]	; (8001a60 <LCD_IO_WriteReg+0x4c>)
 8001a34:	480b      	ldr	r0, [pc, #44]	; (8001a64 <LCD_IO_WriteReg+0x50>)
 8001a36:	681b      	ldr	r3, [r3, #0]
  SPI5_Write(Reg);
 8001a38:	f8ad 4006 	strh.w	r4, [sp, #6]
  status = HAL_SPI_Transmit(&hspi5, (uint8_t*) &Value, 1, Spi5Timeout);
 8001a3c:	f10d 0106 	add.w	r1, sp, #6
 8001a40:	2201      	movs	r2, #1
 8001a42:	f00a fa9b 	bl	800bf7c <HAL_SPI_Transmit>
  HAL_GPIO_WritePin(GPIOC, GPIO_PIN_2, GPIO_PIN_SET);
 8001a46:	2201      	movs	r2, #1
 8001a48:	2104      	movs	r1, #4
 8001a4a:	4628      	mov	r0, r5
}
 8001a4c:	b003      	add	sp, #12
 8001a4e:	e8bd 4030 	ldmia.w	sp!, {r4, r5, lr}
  HAL_GPIO_WritePin(GPIOC, GPIO_PIN_2, GPIO_PIN_SET);
 8001a52:	f007 beed 	b.w	8009830 <HAL_GPIO_WritePin>
 8001a56:	bf00      	nop
 8001a58:	40020800 	.word	0x40020800
 8001a5c:	40020c00 	.word	0x40020c00
 8001a60:	20000010 	.word	0x20000010
 8001a64:	20001ab8 	.word	0x20001ab8

08001a68 <LCD_IO_ReadData>:
{
 8001a68:	e92d 43f0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, lr}
  HAL_GPIO_WritePin(GPIOC, GPIO_PIN_2, GPIO_PIN_RESET);
 8001a6c:	4e19      	ldr	r6, [pc, #100]	; (8001ad4 <LCD_IO_ReadData+0x6c>)
  HAL_GPIO_WritePin(GPIOD, GPIO_PIN_13, GPIO_PIN_RESET);
 8001a6e:	4f1a      	ldr	r7, [pc, #104]	; (8001ad8 <LCD_IO_ReadData+0x70>)
  status = HAL_SPI_Transmit(&hspi5, (uint8_t*) &Value, 1, Spi5Timeout);
 8001a70:	f8df 9068 	ldr.w	r9, [pc, #104]	; 8001adc <LCD_IO_ReadData+0x74>
 8001a74:	f8df 8068 	ldr.w	r8, [pc, #104]	; 8001ae0 <LCD_IO_ReadData+0x78>
{
 8001a78:	b083      	sub	sp, #12
 8001a7a:	460c      	mov	r4, r1
 8001a7c:	4605      	mov	r5, r0
  HAL_GPIO_WritePin(GPIOC, GPIO_PIN_2, GPIO_PIN_RESET);
 8001a7e:	2200      	movs	r2, #0
 8001a80:	4630      	mov	r0, r6
 8001a82:	2104      	movs	r1, #4
 8001a84:	f007 fed4 	bl	8009830 <HAL_GPIO_WritePin>
  HAL_GPIO_WritePin(GPIOD, GPIO_PIN_13, GPIO_PIN_RESET);
 8001a88:	4638      	mov	r0, r7
 8001a8a:	2200      	movs	r2, #0
 8001a8c:	f44f 5100 	mov.w	r1, #8192	; 0x2000
 8001a90:	f007 fece 	bl	8009830 <HAL_GPIO_WritePin>
  status = HAL_SPI_Transmit(&hspi5, (uint8_t*) &Value, 1, Spi5Timeout);
 8001a94:	f8d9 3000 	ldr.w	r3, [r9]
 8001a98:	f8ad 5004 	strh.w	r5, [sp, #4]
 8001a9c:	a901      	add	r1, sp, #4
 8001a9e:	2201      	movs	r2, #1
 8001aa0:	4640      	mov	r0, r8
 8001aa2:	f00a fa6b 	bl	800bf7c <HAL_SPI_Transmit>
  status = HAL_SPI_Receive(&hspi5, (uint8_t*) &readvalue, ReadSize, Spi5Timeout);
 8001aa6:	f8d9 3000 	ldr.w	r3, [r9]
 8001aaa:	4622      	mov	r2, r4
 8001aac:	a901      	add	r1, sp, #4
 8001aae:	4640      	mov	r0, r8
 8001ab0:	f00a fd0c 	bl	800c4cc <HAL_SPI_Receive>
  HAL_GPIO_WritePin(GPIOD, GPIO_PIN_13, GPIO_PIN_SET);
 8001ab4:	4638      	mov	r0, r7
 8001ab6:	2201      	movs	r2, #1
 8001ab8:	f44f 5100 	mov.w	r1, #8192	; 0x2000
  return readvalue;
 8001abc:	9c01      	ldr	r4, [sp, #4]
  HAL_GPIO_WritePin(GPIOD, GPIO_PIN_13, GPIO_PIN_SET);
 8001abe:	f007 feb7 	bl	8009830 <HAL_GPIO_WritePin>
  HAL_GPIO_WritePin(GPIOC, GPIO_PIN_2, GPIO_PIN_SET);
 8001ac2:	4630      	mov	r0, r6
 8001ac4:	2201      	movs	r2, #1
 8001ac6:	2104      	movs	r1, #4
 8001ac8:	f007 feb2 	bl	8009830 <HAL_GPIO_WritePin>
}
 8001acc:	4620      	mov	r0, r4
 8001ace:	b003      	add	sp, #12
 8001ad0:	e8bd 83f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, pc}
 8001ad4:	40020800 	.word	0x40020800
 8001ad8:	40020c00 	.word	0x40020c00
 8001adc:	20000010 	.word	0x20000010
 8001ae0:	20001ab8 	.word	0x20001ab8

08001ae4 <LCD_Delay>:
  HAL_Delay(Delay);
 8001ae4:	f007 bad4 	b.w	8009090 <HAL_Delay>

08001ae8 <HAL_TIM_PeriodElapsedCallback>:
void HAL_TIM_PeriodElapsedCallback(TIM_HandleTypeDef *htim)
{
  /* USER CODE BEGIN Callback 0 */

  /* USER CODE END Callback 0 */
  if (htim->Instance == TIM6) {
 8001ae8:	4b03      	ldr	r3, [pc, #12]	; (8001af8 <HAL_TIM_PeriodElapsedCallback+0x10>)
 8001aea:	6802      	ldr	r2, [r0, #0]
 8001aec:	429a      	cmp	r2, r3
 8001aee:	d000      	beq.n	8001af2 <HAL_TIM_PeriodElapsedCallback+0xa>
    HAL_IncTick();
  }
  /* USER CODE BEGIN Callback 1 */

  /* USER CODE END Callback 1 */
}
 8001af0:	4770      	bx	lr
    HAL_IncTick();
 8001af2:	f007 babb 	b.w	800906c <HAL_IncTick>
 8001af6:	bf00      	nop
 8001af8:	40001000 	.word	0x40001000

08001afc <Error_Handler>:
{
  /* USER CODE BEGIN Error_Handler_Debug */
  /* User can add his own implementation to report the HAL error return state */

  /* USER CODE END Error_Handler_Debug */
}
 8001afc:	4770      	bx	lr
 8001afe:	bf00      	nop

08001b00 <MEAS_GPIO_analog_init>:
 * - ADC3_IN4 = GPIO PF6 (Pad left)
 * - ADC123_IN13 = GPIO PC3 (Pad right)
 * - ADC3_IN6 = GPIO PF8 (Hall sensor Left)
 * - ADC123_IN11 = GPIO PC1 (Hall sensor Right)
 *****************************************************************************/
void MEAS_GPIO_analog_init(void) {
 8001b00:	b410      	push	{r4}
 8001b02:	b083      	sub	sp, #12
    __HAL_RCC_GPIOF_CLK_ENABLE();  // Enable Clock for GPIO port F
 8001b04:	4b15      	ldr	r3, [pc, #84]	; (8001b5c <MEAS_GPIO_analog_init+0x5c>)
    GPIOF->MODER |= (3UL << GPIO_MODER_MODER6_Pos);  // Analog PF6 = ADC3_IN4
 8001b06:	4916      	ldr	r1, [pc, #88]	; (8001b60 <MEAS_GPIO_analog_init+0x60>)
    __HAL_RCC_GPIOF_CLK_ENABLE();  // Enable Clock for GPIO port F
 8001b08:	2400      	movs	r4, #0
 8001b0a:	9400      	str	r4, [sp, #0]
 8001b0c:	6b1a      	ldr	r2, [r3, #48]	; 0x30
 8001b0e:	f042 0220 	orr.w	r2, r2, #32
 8001b12:	631a      	str	r2, [r3, #48]	; 0x30
 8001b14:	6b1a      	ldr	r2, [r3, #48]	; 0x30
 8001b16:	f002 0220 	and.w	r2, r2, #32
 8001b1a:	9200      	str	r2, [sp, #0]
 8001b1c:	9a00      	ldr	r2, [sp, #0]
    GPIOF->MODER |= (3UL << GPIO_MODER_MODER6_Pos);  // Analog PF6 = ADC3_IN4
 8001b1e:	6808      	ldr	r0, [r1, #0]
    GPIOF->MODER |= (3UL << GPIO_MODER_MODER8_Pos);  // Analog PF8 = ADC3_IN6
    __HAL_RCC_GPIOC_CLK_ENABLE();  // Enable Clock for GPIO port C
    GPIOC->MODER |= (3UL << GPIO_MODER_MODER3_Pos);  // Analog PC3 = ADC3_IN13
 8001b20:	4a10      	ldr	r2, [pc, #64]	; (8001b64 <MEAS_GPIO_analog_init+0x64>)
    GPIOF->MODER |= (3UL << GPIO_MODER_MODER6_Pos);  // Analog PF6 = ADC3_IN4
 8001b22:	f440 5040 	orr.w	r0, r0, #12288	; 0x3000
 8001b26:	6008      	str	r0, [r1, #0]
    GPIOF->MODER |= (3UL << GPIO_MODER_MODER8_Pos);  // Analog PF8 = ADC3_IN6
 8001b28:	6808      	ldr	r0, [r1, #0]
 8001b2a:	f440 3040 	orr.w	r0, r0, #196608	; 0x30000
 8001b2e:	6008      	str	r0, [r1, #0]
    __HAL_RCC_GPIOC_CLK_ENABLE();  // Enable Clock for GPIO port C
 8001b30:	9401      	str	r4, [sp, #4]
 8001b32:	6b19      	ldr	r1, [r3, #48]	; 0x30
 8001b34:	f041 0104 	orr.w	r1, r1, #4
 8001b38:	6319      	str	r1, [r3, #48]	; 0x30
 8001b3a:	6b1b      	ldr	r3, [r3, #48]	; 0x30
 8001b3c:	f003 0304 	and.w	r3, r3, #4
 8001b40:	9301      	str	r3, [sp, #4]
 8001b42:	9b01      	ldr	r3, [sp, #4]
    GPIOC->MODER |= (3UL << GPIO_MODER_MODER3_Pos);  // Analog PC3 = ADC3_IN13
 8001b44:	6813      	ldr	r3, [r2, #0]
 8001b46:	f043 03c0 	orr.w	r3, r3, #192	; 0xc0
 8001b4a:	6013      	str	r3, [r2, #0]
    GPIOC->MODER |= (3UL << GPIO_MODER_MODER1_Pos);  // Analog PC1 = ADC3_IN11
 8001b4c:	6813      	ldr	r3, [r2, #0]
 8001b4e:	f043 030c 	orr.w	r3, r3, #12
 8001b52:	6013      	str	r3, [r2, #0]
}
 8001b54:	b003      	add	sp, #12
 8001b56:	f85d 4b04 	ldr.w	r4, [sp], #4
 8001b5a:	4770      	bx	lr
 8001b5c:	40023800 	.word	0x40023800
 8001b60:	40021400 	.word	0x40021400
 8001b64:	40020800 	.word	0x40020800

08001b68 <MEAS_timer_init>:
/** ***************************************************************************
 * @brief Configure the timer to trigger the ADC(s)
 *
 * @note For debugging purposes the timer interrupt might be useful.
 *****************************************************************************/
void MEAS_timer_init(void) {
 8001b68:	b082      	sub	sp, #8
    __HAL_RCC_TIM2_CLK_ENABLE();  // Enable Clock for TIM2
 8001b6a:	4a0c      	ldr	r2, [pc, #48]	; (8001b9c <MEAS_timer_init+0x34>)
 8001b6c:	2300      	movs	r3, #0
 8001b6e:	9301      	str	r3, [sp, #4]
 8001b70:	6c11      	ldr	r1, [r2, #64]	; 0x40
 8001b72:	f041 0101 	orr.w	r1, r1, #1
 8001b76:	6411      	str	r1, [r2, #64]	; 0x40
 8001b78:	6c12      	ldr	r2, [r2, #64]	; 0x40
    TIM2->PSC = TIM_PRESCALE;     // Prescaler for clock freq. = 1MHz
 8001b7a:	f04f 4380 	mov.w	r3, #1073741824	; 0x40000000
    __HAL_RCC_TIM2_CLK_ENABLE();  // Enable Clock for TIM2
 8001b7e:	f002 0201 	and.w	r2, r2, #1
 8001b82:	9201      	str	r2, [sp, #4]
    TIM2->PSC = TIM_PRESCALE;     // Prescaler for clock freq. = 1MHz
 8001b84:	f243 3144 	movw	r1, #13124	; 0x3344
    TIM2->ARR = TIM_TOP;          // Auto reload = counter top value
 8001b88:	2209      	movs	r2, #9
    __HAL_RCC_TIM2_CLK_ENABLE();  // Enable Clock for TIM2
 8001b8a:	9801      	ldr	r0, [sp, #4]
    TIM2->PSC = TIM_PRESCALE;     // Prescaler for clock freq. = 1MHz
 8001b8c:	6299      	str	r1, [r3, #40]	; 0x28
    TIM2->ARR = TIM_TOP;          // Auto reload = counter top value
 8001b8e:	62da      	str	r2, [r3, #44]	; 0x2c
    TIM2->CR2 |= TIM_CR2_MMS_1;   // TRGO on update
 8001b90:	685a      	ldr	r2, [r3, #4]
 8001b92:	f042 0220 	orr.w	r2, r2, #32
 8001b96:	605a      	str	r2, [r3, #4]
}
 8001b98:	b002      	add	sp, #8
 8001b9a:	4770      	bx	lr
 8001b9c:	40023800 	.word	0x40023800

08001ba0 <MEAS_ADC3_scan_init>:
 * @n As each conversion triggers the DMA, the number of transfers is doubled.
 * @n The DMA triggers the transfer complete interrupt when all data is ready.
 * @n The inputs used are ADC3_IN4 = GPIO PF6 (Pad Right), ADC3_IN13 = GPIO PC3
 *(Pad Left), ADC_IN6 = GPIO PF8 (HS-Right), ADC3_IN11 = GPIO PC1 (HS-Left)
 *****************************************************************************/
void MEAS_ADC3_scan_init(void) {
 8001ba0:	b410      	push	{r4}
 8001ba2:	b083      	sub	sp, #12
    __HAL_RCC_ADC3_CLK_ENABLE();               // Enable Clock for ADC3
 8001ba4:	4934      	ldr	r1, [pc, #208]	; (8001c78 <MEAS_ADC3_scan_init+0xd8>)
    ADC3->SQR1 |= (3UL << ADC_SQR1_L_Pos);     // Convert 4 inputs (4-1)
 8001ba6:	4a35      	ldr	r2, [pc, #212]	; (8001c7c <MEAS_ADC3_scan_init+0xdc>)
    __HAL_RCC_ADC3_CLK_ENABLE();               // Enable Clock for ADC3
 8001ba8:	2400      	movs	r4, #0
 8001baa:	9400      	str	r4, [sp, #0]
 8001bac:	6c4b      	ldr	r3, [r1, #68]	; 0x44
 8001bae:	f443 6380 	orr.w	r3, r3, #1024	; 0x400
 8001bb2:	644b      	str	r3, [r1, #68]	; 0x44
 8001bb4:	6c4b      	ldr	r3, [r1, #68]	; 0x44
 8001bb6:	f403 6380 	and.w	r3, r3, #1024	; 0x400
 8001bba:	9300      	str	r3, [sp, #0]
 8001bbc:	9b00      	ldr	r3, [sp, #0]
    ADC3->SQR1 |= (3UL << ADC_SQR1_L_Pos);     // Convert 4 inputs (4-1)
 8001bbe:	6ad0      	ldr	r0, [r2, #44]	; 0x2c
    ADC3->CR1 |= ADC_CR1_SCAN;                 // Enable scan mode
    ADC3->CR2 |= (1UL << ADC_CR2_EXTEN_Pos);   // En. ext. trigger on rising e.
    ADC3->CR2 |= (6UL << ADC_CR2_EXTSEL_Pos);  // Timer 2 TRGO event
    ADC3->CR2 |= ADC_CR2_DMA;                  // Enable DMA mode
    __HAL_RCC_DMA2_CLK_ENABLE();               // Enable Clock for DMA2
    DMA2_Stream1->CR &= ~DMA_SxCR_EN;          // Disable the DMA stream 1
 8001bc0:	4b2f      	ldr	r3, [pc, #188]	; (8001c80 <MEAS_ADC3_scan_init+0xe0>)
    ADC3->SQR1 |= (3UL << ADC_SQR1_L_Pos);     // Convert 4 inputs (4-1)
 8001bc2:	f440 1040 	orr.w	r0, r0, #3145728	; 0x300000
 8001bc6:	62d0      	str	r0, [r2, #44]	; 0x2c
    ADC3->SQR3 |= (4UL << ADC_SQR3_SQ1_Pos);   // Input 4 = first conversion
 8001bc8:	6b50      	ldr	r0, [r2, #52]	; 0x34
 8001bca:	f040 0004 	orr.w	r0, r0, #4
 8001bce:	6350      	str	r0, [r2, #52]	; 0x34
    ADC3->SQR3 |= (13UL << ADC_SQR3_SQ2_Pos);  // Input 13 = second conversion
 8001bd0:	6b50      	ldr	r0, [r2, #52]	; 0x34
 8001bd2:	f440 70d0 	orr.w	r0, r0, #416	; 0x1a0
 8001bd6:	6350      	str	r0, [r2, #52]	; 0x34
    ADC3->SQR3 |= (6UL << ADC_SQR3_SQ3_Pos);   // Input 6 = third conversion
 8001bd8:	6b50      	ldr	r0, [r2, #52]	; 0x34
 8001bda:	f440 50c0 	orr.w	r0, r0, #6144	; 0x1800
 8001bde:	6350      	str	r0, [r2, #52]	; 0x34
    ADC3->SQR3 |= (11UL << ADC_SQR3_SQ4_Pos);  // Input 11 = fourth conversion
 8001be0:	6b50      	ldr	r0, [r2, #52]	; 0x34
 8001be2:	f440 20b0 	orr.w	r0, r0, #360448	; 0x58000
 8001be6:	6350      	str	r0, [r2, #52]	; 0x34
    ADC3->CR1 |= ADC_CR1_SCAN;                 // Enable scan mode
 8001be8:	6850      	ldr	r0, [r2, #4]
 8001bea:	f440 7080 	orr.w	r0, r0, #256	; 0x100
 8001bee:	6050      	str	r0, [r2, #4]
    ADC3->CR2 |= (1UL << ADC_CR2_EXTEN_Pos);   // En. ext. trigger on rising e.
 8001bf0:	6890      	ldr	r0, [r2, #8]
 8001bf2:	f040 5080 	orr.w	r0, r0, #268435456	; 0x10000000
 8001bf6:	6090      	str	r0, [r2, #8]
    ADC3->CR2 |= (6UL << ADC_CR2_EXTSEL_Pos);  // Timer 2 TRGO event
 8001bf8:	6890      	ldr	r0, [r2, #8]
 8001bfa:	f040 60c0 	orr.w	r0, r0, #100663296	; 0x6000000
 8001bfe:	6090      	str	r0, [r2, #8]
    ADC3->CR2 |= ADC_CR2_DMA;                  // Enable DMA mode
 8001c00:	6890      	ldr	r0, [r2, #8]
 8001c02:	f440 7080 	orr.w	r0, r0, #256	; 0x100
 8001c06:	6090      	str	r0, [r2, #8]
    __HAL_RCC_DMA2_CLK_ENABLE();               // Enable Clock for DMA2
 8001c08:	9401      	str	r4, [sp, #4]
 8001c0a:	6b0a      	ldr	r2, [r1, #48]	; 0x30
 8001c0c:	f442 0280 	orr.w	r2, r2, #4194304	; 0x400000
 8001c10:	630a      	str	r2, [r1, #48]	; 0x30
 8001c12:	6b0a      	ldr	r2, [r1, #48]	; 0x30
 8001c14:	f402 0280 	and.w	r2, r2, #4194304	; 0x400000
 8001c18:	9201      	str	r2, [sp, #4]
 8001c1a:	9a01      	ldr	r2, [sp, #4]
    DMA2_Stream1->CR &= ~DMA_SxCR_EN;          // Disable the DMA stream 1
 8001c1c:	6a9a      	ldr	r2, [r3, #40]	; 0x28
 8001c1e:	f022 0201 	bic.w	r2, r2, #1
 8001c22:	629a      	str	r2, [r3, #40]	; 0x28
    while (DMA2_Stream1->CR & DMA_SxCR_EN){};  // Wait for DMA to finish
 8001c24:	6a9a      	ldr	r2, [r3, #40]	; 0x28
 8001c26:	07d2      	lsls	r2, r2, #31
 8001c28:	d4fc      	bmi.n	8001c24 <MEAS_ADC3_scan_init+0x84>
    DMA2->LIFCR |= DMA_LIFCR_CTCIF1;  // Clear transfer complete interrupt fl.
 8001c2a:	689a      	ldr	r2, [r3, #8]
    DMA2_Stream1->CR |= DMA_SxCR_PSIZE_1;  // Peripheral data size = 32 bit
    DMA2_Stream1->CR |= DMA_SxCR_MINC;     // Increment memory address pointer
    DMA2_Stream1->CR |= DMA_SxCR_TCIE;     // Transfer complete interrupt enable
    DMA2_Stream1->NDTR =
        INPUT_COUNT * ADC_NUMS;  // Number of data items to transfer
    DMA2_Stream1->PAR = (uint32_t)&ADC3->DR;     // Peripheral register address
 8001c2c:	4815      	ldr	r0, [pc, #84]	; (8001c84 <MEAS_ADC3_scan_init+0xe4>)
    DMA2_Stream1->M0AR = (uint32_t)ADC_samples;  // Buffer memory loc. address
 8001c2e:	4916      	ldr	r1, [pc, #88]	; (8001c88 <MEAS_ADC3_scan_init+0xe8>)
    DMA2->LIFCR |= DMA_LIFCR_CTCIF1;  // Clear transfer complete interrupt fl.
 8001c30:	f442 6200 	orr.w	r2, r2, #2048	; 0x800
 8001c34:	609a      	str	r2, [r3, #8]
    DMA2_Stream1->CR |= (2UL << DMA_SxCR_CHSEL_Pos);  // Select channel 2
 8001c36:	6a9a      	ldr	r2, [r3, #40]	; 0x28
 8001c38:	f042 6280 	orr.w	r2, r2, #67108864	; 0x4000000
 8001c3c:	629a      	str	r2, [r3, #40]	; 0x28
    DMA2_Stream1->CR |= DMA_SxCR_PL_1;                // Priority high
 8001c3e:	6a9a      	ldr	r2, [r3, #40]	; 0x28
 8001c40:	f442 3200 	orr.w	r2, r2, #131072	; 0x20000
 8001c44:	629a      	str	r2, [r3, #40]	; 0x28
    DMA2_Stream1->CR |= DMA_SxCR_MSIZE_1;  // Memory data size = 32 bit
 8001c46:	6a9a      	ldr	r2, [r3, #40]	; 0x28
 8001c48:	f442 4280 	orr.w	r2, r2, #16384	; 0x4000
 8001c4c:	629a      	str	r2, [r3, #40]	; 0x28
    DMA2_Stream1->CR |= DMA_SxCR_PSIZE_1;  // Peripheral data size = 32 bit
 8001c4e:	6a9a      	ldr	r2, [r3, #40]	; 0x28
 8001c50:	f442 5280 	orr.w	r2, r2, #4096	; 0x1000
 8001c54:	629a      	str	r2, [r3, #40]	; 0x28
    DMA2_Stream1->CR |= DMA_SxCR_MINC;     // Increment memory address pointer
 8001c56:	6a9a      	ldr	r2, [r3, #40]	; 0x28
 8001c58:	f442 6280 	orr.w	r2, r2, #1024	; 0x400
 8001c5c:	629a      	str	r2, [r3, #40]	; 0x28
    DMA2_Stream1->CR |= DMA_SxCR_TCIE;     // Transfer complete interrupt enable
 8001c5e:	6a9a      	ldr	r2, [r3, #40]	; 0x28
    DMA2_Stream1->NDTR =
 8001c60:	f44f 7480 	mov.w	r4, #256	; 0x100
    DMA2_Stream1->CR |= DMA_SxCR_TCIE;     // Transfer complete interrupt enable
 8001c64:	f042 0210 	orr.w	r2, r2, #16
 8001c68:	629a      	str	r2, [r3, #40]	; 0x28
    DMA2_Stream1->NDTR =
 8001c6a:	62dc      	str	r4, [r3, #44]	; 0x2c
    DMA2_Stream1->PAR = (uint32_t)&ADC3->DR;     // Peripheral register address
 8001c6c:	6318      	str	r0, [r3, #48]	; 0x30
    DMA2_Stream1->M0AR = (uint32_t)ADC_samples;  // Buffer memory loc. address
 8001c6e:	6359      	str	r1, [r3, #52]	; 0x34
}
 8001c70:	b003      	add	sp, #12
 8001c72:	f85d 4b04 	ldr.w	r4, [sp], #4
 8001c76:	4770      	bx	lr
 8001c78:	40023800 	.word	0x40023800
 8001c7c:	40012200 	.word	0x40012200
 8001c80:	40026400 	.word	0x40026400
 8001c84:	4001224c 	.word	0x4001224c
 8001c88:	20001be8 	.word	0x20001be8

08001c8c <DMA2_Stream1_IRQHandler>:
 * and are ready for processing.
 *****************************************************************************/
void DMA2_Stream1_IRQHandler(void)
{
    static int debug = 0;
    debug++;
 8001c8c:	4920      	ldr	r1, [pc, #128]	; (8001d10 <DMA2_Stream1_IRQHandler+0x84>)
    //HAL_GPIO_TogglePin(GPIOG, GPIO_PIN_13);

	if (DMA2->LISR & DMA_LISR_TCIF1) // Stream1 transfer compl. interrupt f.
 8001c8e:	4b21      	ldr	r3, [pc, #132]	; (8001d14 <DMA2_Stream1_IRQHandler+0x88>)
    debug++;
 8001c90:	680a      	ldr	r2, [r1, #0]
 8001c92:	3201      	adds	r2, #1
 8001c94:	600a      	str	r2, [r1, #0]
	if (DMA2->LISR & DMA_LISR_TCIF1) // Stream1 transfer compl. interrupt f.
 8001c96:	681a      	ldr	r2, [r3, #0]
 8001c98:	0511      	lsls	r1, r2, #20
 8001c9a:	d400      	bmi.n	8001c9e <DMA2_Stream1_IRQHandler+0x12>

        // copy data from DMA buffer to ADC_samples
        MEAS_ADC_reset();
        MEAS_data_ready = true;
    }
}
 8001c9c:	4770      	bx	lr
 8001c9e:	4a1e      	ldr	r2, [pc, #120]	; (8001d18 <DMA2_Stream1_IRQHandler+0x8c>)
 8001ca0:	f04f 7100 	mov.w	r1, #33554432	; 0x2000000
 8001ca4:	f8c2 1084 	str.w	r1, [r2, #132]	; 0x84
  __ASM volatile ("dsb 0xF":::"memory");
 8001ca8:	f3bf 8f4f 	dsb	sy
  __ASM volatile ("isb 0xF":::"memory");
 8001cac:	f3bf 8f6f 	isb	sy
    NVIC->ICPR[(((uint32_t)IRQn) >> 5UL)] = (uint32_t)(1UL << (((uint32_t)IRQn) & 0x1FUL));
 8001cb0:	f8c2 1184 	str.w	r1, [r2, #388]	; 0x184
        DMA2_Stream1->CR &= ~DMA_SxCR_EN;         // Disable the DMA
 8001cb4:	6a9a      	ldr	r2, [r3, #40]	; 0x28
 8001cb6:	f022 0201 	bic.w	r2, r2, #1
 8001cba:	629a      	str	r2, [r3, #40]	; 0x28
        while (DMA2_Stream1->CR & DMA_SxCR_EN)	  // Wait for DMA to finish
 8001cbc:	6a9a      	ldr	r2, [r3, #40]	; 0x28
 8001cbe:	07d2      	lsls	r2, r2, #31
 8001cc0:	d4fc      	bmi.n	8001cbc <DMA2_Stream1_IRQHandler+0x30>
        DMA2->LIFCR |= DMA_LIFCR_CTCIF1;// clr transfer complete interrupt fl.
 8001cc2:	6899      	ldr	r1, [r3, #8]
        TIM2->CR1 &= ~TIM_CR1_CEN;   // Disable timer
 8001cc4:	f04f 4280 	mov.w	r2, #1073741824	; 0x40000000
        DMA2->LIFCR |= DMA_LIFCR_CTCIF1;// clr transfer complete interrupt fl.
 8001cc8:	f441 6100 	orr.w	r1, r1, #2048	; 0x800
 8001ccc:	6099      	str	r1, [r3, #8]
        TIM2->CR1 &= ~TIM_CR1_CEN;   // Disable timer
 8001cce:	6813      	ldr	r3, [r2, #0]
        ADC3->CR2 &= ~ADC_CR2_ADON;  // Disable ADC3
 8001cd0:	4912      	ldr	r1, [pc, #72]	; (8001d1c <DMA2_Stream1_IRQHandler+0x90>)
        TIM2->CR1 &= ~TIM_CR1_CEN;   // Disable timer
 8001cd2:	f023 0301 	bic.w	r3, r3, #1
 8001cd6:	6013      	str	r3, [r2, #0]
        ADC3->CR2 &= ~ADC_CR2_ADON;  // Disable ADC3
 8001cd8:	6888      	ldr	r0, [r1, #8]
    RCC->APB2RSTR |= RCC_APB2RSTR_ADCRST;   // Reset ADCs
 8001cda:	4b11      	ldr	r3, [pc, #68]	; (8001d20 <DMA2_Stream1_IRQHandler+0x94>)
        ADC3->CR2 &= ~ADC_CR2_ADON;  // Disable ADC3
 8001cdc:	f020 0001 	bic.w	r0, r0, #1
 8001ce0:	6088      	str	r0, [r1, #8]
        ADC3->CR2 &= ~ADC_CR2_DMA;   // Disable DMA mode
 8001ce2:	6888      	ldr	r0, [r1, #8]
 8001ce4:	f420 7080 	bic.w	r0, r0, #256	; 0x100
 8001ce8:	6088      	str	r0, [r1, #8]
    RCC->APB2RSTR |= RCC_APB2RSTR_ADCRST;   // Reset ADCs
 8001cea:	6a59      	ldr	r1, [r3, #36]	; 0x24
        MEAS_data_ready = true;
 8001cec:	480d      	ldr	r0, [pc, #52]	; (8001d24 <DMA2_Stream1_IRQHandler+0x98>)
    RCC->APB2RSTR |= RCC_APB2RSTR_ADCRST;   // Reset ADCs
 8001cee:	f441 7180 	orr.w	r1, r1, #256	; 0x100
 8001cf2:	6259      	str	r1, [r3, #36]	; 0x24
    RCC->APB2RSTR &= ~RCC_APB2RSTR_ADCRST;  // Release reset of ADCs
 8001cf4:	6a59      	ldr	r1, [r3, #36]	; 0x24
 8001cf6:	f421 7180 	bic.w	r1, r1, #256	; 0x100
 8001cfa:	6259      	str	r1, [r3, #36]	; 0x24
    TIM2->CR1 &= ~TIM_CR1_CEN;              // Disable timer
 8001cfc:	6813      	ldr	r3, [r2, #0]
        MEAS_data_ready = true;
 8001cfe:	f04f 0c01 	mov.w	ip, #1
    TIM2->CR1 &= ~TIM_CR1_CEN;              // Disable timer
 8001d02:	f023 0301 	bic.w	r3, r3, #1
 8001d06:	6013      	str	r3, [r2, #0]
        MEAS_data_ready = true;
 8001d08:	f880 c000 	strb.w	ip, [r0]
}
 8001d0c:	4770      	bx	lr
 8001d0e:	bf00      	nop
 8001d10:	20001fec 	.word	0x20001fec
 8001d14:	40026400 	.word	0x40026400
 8001d18:	e000e100 	.word	0xe000e100
 8001d1c:	40012200 	.word	0x40012200
 8001d20:	40023800 	.word	0x40023800
 8001d24:	20001fe8 	.word	0x20001fe8

08001d28 <MEAS_start_measure>:
 *
 * @note The result is stored alternated e.g. every 4th is together.
 *****************************************************************************/
// Start the measurement procedure
uint32_t* MEAS_start_measure(void)
{
 8001d28:	b510      	push	{r4, lr}
    DMA2_Stream1->CR |= DMA_SxCR_EN;          // Enable DMA
 8001d2a:	4c18      	ldr	r4, [pc, #96]	; (8001d8c <MEAS_start_measure+0x64>)
        buffer[i] = 0;
 8001d2c:	4818      	ldr	r0, [pc, #96]	; (8001d90 <MEAS_start_measure+0x68>)
 8001d2e:	f44f 6280 	mov.w	r2, #1024	; 0x400
 8001d32:	2100      	movs	r1, #0
 8001d34:	f028 fb8b 	bl	802a44e <memset>
    //works
	MEAS_Buffer_reset(INPUT_COUNT, ADC_samples);

    //
	MEAS_ADC3_scan_init();
 8001d38:	f7ff ff32 	bl	8001ba0 <MEAS_ADC3_scan_init>
    DMA2_Stream1->CR |= DMA_SxCR_EN;          // Enable DMA
 8001d3c:	6aa3      	ldr	r3, [r4, #40]	; 0x28
 8001d3e:	4915      	ldr	r1, [pc, #84]	; (8001d94 <MEAS_start_measure+0x6c>)
    ADC3->CR2 |= ADC_CR2_ADON;          // Enable ADC3
 8001d40:	4a15      	ldr	r2, [pc, #84]	; (8001d98 <MEAS_start_measure+0x70>)
 8001d42:	f04f 7000 	mov.w	r0, #33554432	; 0x2000000
    DMA2_Stream1->CR |= DMA_SxCR_EN;          // Enable DMA
 8001d46:	f043 0301 	orr.w	r3, r3, #1
 8001d4a:	62a3      	str	r3, [r4, #40]	; 0x28
 8001d4c:	f8c1 0184 	str.w	r0, [r1, #388]	; 0x184
    NVIC->ISER[(((uint32_t)IRQn) >> 5UL)] = (uint32_t)(1UL << (((uint32_t)IRQn) & 0x1FUL));
 8001d50:	6048      	str	r0, [r1, #4]
    ADC3->CR2 |= ADC_CR2_ADON;          // Enable ADC3
 8001d52:	6893      	ldr	r3, [r2, #8]
    TIM2->CR1 |= TIM_CR1_CEN;           // Enable timer
 8001d54:	f04f 4180 	mov.w	r1, #1073741824	; 0x40000000
    ADC3->CR2 |= ADC_CR2_ADON;          // Enable ADC3
 8001d58:	f043 0301 	orr.w	r3, r3, #1
 8001d5c:	6093      	str	r3, [r2, #8]
    TIM2->CR1 |= TIM_CR1_CEN;           // Enable timer
 8001d5e:	680b      	ldr	r3, [r1, #0]

	//
    MEAS_ADC3_scan_start();

    static int timeout = 0;
    while ((!MEAS_data_ready) & (timeout > 99999))
 8001d60:	4a0e      	ldr	r2, [pc, #56]	; (8001d9c <MEAS_start_measure+0x74>)
    TIM2->CR1 |= TIM_CR1_CEN;           // Enable timer
 8001d62:	f043 0301 	orr.w	r3, r3, #1
 8001d66:	600b      	str	r3, [r1, #0]
    while ((!MEAS_data_ready) & (timeout > 99999))
 8001d68:	6811      	ldr	r1, [r2, #0]
 8001d6a:	4b0d      	ldr	r3, [pc, #52]	; (8001da0 <MEAS_start_measure+0x78>)
 8001d6c:	4299      	cmp	r1, r3
 8001d6e:	490d      	ldr	r1, [pc, #52]	; (8001da4 <MEAS_start_measure+0x7c>)
 8001d70:	dd03      	ble.n	8001d7a <MEAS_start_measure+0x52>
 8001d72:	780b      	ldrb	r3, [r1, #0]
 8001d74:	2b01      	cmp	r3, #1
 8001d76:	d000      	beq.n	8001d7a <MEAS_start_measure+0x52>
 8001d78:	e7fe      	b.n	8001d78 <MEAS_start_measure+0x50>
    {
    	// Wait for data
    	timeout++;
    }
    MEAS_data_ready = false;
 8001d7a:	2300      	movs	r3, #0
    timeout=0;

    HAL_Delay(100);
 8001d7c:	2064      	movs	r0, #100	; 0x64
    MEAS_data_ready = false;
 8001d7e:	700b      	strb	r3, [r1, #0]
    timeout=0;
 8001d80:	6013      	str	r3, [r2, #0]
    HAL_Delay(100);
 8001d82:	f007 f985 	bl	8009090 <HAL_Delay>

    return ADC_samples;
}
 8001d86:	4802      	ldr	r0, [pc, #8]	; (8001d90 <MEAS_start_measure+0x68>)
 8001d88:	bd10      	pop	{r4, pc}
 8001d8a:	bf00      	nop
 8001d8c:	40026400 	.word	0x40026400
 8001d90:	20001be8 	.word	0x20001be8
 8001d94:	e000e100 	.word	0xe000e100
 8001d98:	40012200 	.word	0x40012200
 8001d9c:	20001ff0 	.word	0x20001ff0
 8001da0:	0001869f 	.word	0x0001869f
 8001da4:	20001fe8 	.word	0x20001fe8

08001da8 <MEAS_get_num_of_chan>:
 * @return Number of channels
 *****************************************************************************/
uint8_t MEAS_get_num_of_chan(void)
{
	return INPUT_COUNT;
}
 8001da8:	2004      	movs	r0, #4
 8001daa:	4770      	bx	lr

08001dac <MEAS_get_num_of_samples>:
 * @return Number of samples
 *****************************************************************************/
uint8_t MEAS_get_num_of_samples(void)
{
	return ADC_NUMS;
}
 8001dac:	2040      	movs	r0, #64	; 0x40
 8001dae:	4770      	bx	lr

08001db0 <MEAS_get_samp_freq>:
 * @return Sampling frequency
 *****************************************************************************/
uint16_t MEAS_get_samp_freq(void)
{
	return ADC_FS;
}
 8001db0:	f44f 7020 	mov.w	r0, #640	; 0x280
 8001db4:	4770      	bx	lr
 8001db6:	bf00      	nop

08001db8 <HAL_MspInit>:
/* USER CODE END 0 */
/**
  * Initializes the Global MSP.
  */
void HAL_MspInit(void)
{
 8001db8:	b082      	sub	sp, #8
  /* USER CODE BEGIN MspInit 0 */

  /* USER CODE END MspInit 0 */

  __HAL_RCC_SYSCFG_CLK_ENABLE();
 8001dba:	4b0e      	ldr	r3, [pc, #56]	; (8001df4 <HAL_MspInit+0x3c>)
 8001dbc:	2200      	movs	r2, #0
 8001dbe:	9200      	str	r2, [sp, #0]
 8001dc0:	6c59      	ldr	r1, [r3, #68]	; 0x44
 8001dc2:	f441 4180 	orr.w	r1, r1, #16384	; 0x4000
 8001dc6:	6459      	str	r1, [r3, #68]	; 0x44
 8001dc8:	6c58      	ldr	r0, [r3, #68]	; 0x44
 8001dca:	f400 4080 	and.w	r0, r0, #16384	; 0x4000
 8001dce:	9000      	str	r0, [sp, #0]
 8001dd0:	9800      	ldr	r0, [sp, #0]
  __HAL_RCC_PWR_CLK_ENABLE();
 8001dd2:	9201      	str	r2, [sp, #4]
 8001dd4:	6c18      	ldr	r0, [r3, #64]	; 0x40
 8001dd6:	f040 5080 	orr.w	r0, r0, #268435456	; 0x10000000
 8001dda:	6418      	str	r0, [r3, #64]	; 0x40
 8001ddc:	6c1b      	ldr	r3, [r3, #64]	; 0x40
 8001dde:	f003 5380 	and.w	r3, r3, #268435456	; 0x10000000
 8001de2:	9301      	str	r3, [sp, #4]
 8001de4:	9b01      	ldr	r3, [sp, #4]

  /* System interrupt init*/
  /* PendSV_IRQn interrupt configuration */
  HAL_NVIC_SetPriority(PendSV_IRQn, 15, 0);
 8001de6:	210f      	movs	r1, #15
 8001de8:	f06f 0001 	mvn.w	r0, #1

  /* USER CODE BEGIN MspInit 1 */

  /* USER CODE END MspInit 1 */
}
 8001dec:	b002      	add	sp, #8
  HAL_NVIC_SetPriority(PendSV_IRQn, 15, 0);
 8001dee:	f007 b973 	b.w	80090d8 <HAL_NVIC_SetPriority>
 8001df2:	bf00      	nop
 8001df4:	40023800 	.word	0x40023800

08001df8 <HAL_CRC_MspInit>:
* @param hcrc: CRC handle pointer
* @retval None
*/
void HAL_CRC_MspInit(CRC_HandleTypeDef* hcrc)
{
  if(hcrc->Instance==CRC)
 8001df8:	4b0b      	ldr	r3, [pc, #44]	; (8001e28 <HAL_CRC_MspInit+0x30>)
 8001dfa:	6802      	ldr	r2, [r0, #0]
 8001dfc:	429a      	cmp	r2, r3
 8001dfe:	d000      	beq.n	8001e02 <HAL_CRC_MspInit+0xa>
 8001e00:	4770      	bx	lr
{
 8001e02:	b082      	sub	sp, #8
  {
  /* USER CODE BEGIN CRC_MspInit 0 */

  /* USER CODE END CRC_MspInit 0 */
    /* Peripheral clock enable */
    __HAL_RCC_CRC_CLK_ENABLE();
 8001e04:	2200      	movs	r2, #0
 8001e06:	9201      	str	r2, [sp, #4]
 8001e08:	f8d3 2830 	ldr.w	r2, [r3, #2096]	; 0x830
 8001e0c:	f442 5280 	orr.w	r2, r2, #4096	; 0x1000
 8001e10:	f8c3 2830 	str.w	r2, [r3, #2096]	; 0x830
 8001e14:	f503 6300 	add.w	r3, r3, #2048	; 0x800
 8001e18:	6b1b      	ldr	r3, [r3, #48]	; 0x30
 8001e1a:	f403 5380 	and.w	r3, r3, #4096	; 0x1000
 8001e1e:	9301      	str	r3, [sp, #4]
 8001e20:	9b01      	ldr	r3, [sp, #4]
  /* USER CODE BEGIN CRC_MspInit 1 */

  /* USER CODE END CRC_MspInit 1 */
  }

}
 8001e22:	b002      	add	sp, #8
 8001e24:	4770      	bx	lr
 8001e26:	bf00      	nop
 8001e28:	40023000 	.word	0x40023000

08001e2c <HAL_DMA2D_MspInit>:
* @param hdma2d: DMA2D handle pointer
* @retval None
*/
void HAL_DMA2D_MspInit(DMA2D_HandleTypeDef* hdma2d)
{
  if(hdma2d->Instance==DMA2D)
 8001e2c:	4b0a      	ldr	r3, [pc, #40]	; (8001e58 <HAL_DMA2D_MspInit+0x2c>)
 8001e2e:	6802      	ldr	r2, [r0, #0]
 8001e30:	429a      	cmp	r2, r3
 8001e32:	d000      	beq.n	8001e36 <HAL_DMA2D_MspInit+0xa>
 8001e34:	4770      	bx	lr
{
 8001e36:	b082      	sub	sp, #8
  {
  /* USER CODE BEGIN DMA2D_MspInit 0 */

  /* USER CODE END DMA2D_MspInit 0 */
    /* Peripheral clock enable */
    __HAL_RCC_DMA2D_CLK_ENABLE();
 8001e38:	f5a3 43f0 	sub.w	r3, r3, #30720	; 0x7800
 8001e3c:	2200      	movs	r2, #0
 8001e3e:	9201      	str	r2, [sp, #4]
 8001e40:	6b1a      	ldr	r2, [r3, #48]	; 0x30
 8001e42:	f442 0200 	orr.w	r2, r2, #8388608	; 0x800000
 8001e46:	631a      	str	r2, [r3, #48]	; 0x30
 8001e48:	6b1b      	ldr	r3, [r3, #48]	; 0x30
 8001e4a:	f403 0300 	and.w	r3, r3, #8388608	; 0x800000
 8001e4e:	9301      	str	r3, [sp, #4]
 8001e50:	9b01      	ldr	r3, [sp, #4]
  /* USER CODE BEGIN DMA2D_MspInit 1 */

  /* USER CODE END DMA2D_MspInit 1 */
  }

}
 8001e52:	b002      	add	sp, #8
 8001e54:	4770      	bx	lr
 8001e56:	bf00      	nop
 8001e58:	4002b000 	.word	0x4002b000

08001e5c <HAL_I2C_MspInit>:
* This function configures the hardware resources used in this example
* @param hi2c: I2C handle pointer
* @retval None
*/
void HAL_I2C_MspInit(I2C_HandleTypeDef* hi2c)
{
 8001e5c:	e92d 4370 	stmdb	sp!, {r4, r5, r6, r8, r9, lr}
  GPIO_InitTypeDef GPIO_InitStruct = {0};
  if(hi2c->Instance==I2C3)
 8001e60:	4b2e      	ldr	r3, [pc, #184]	; (8001f1c <HAL_I2C_MspInit+0xc0>)
 8001e62:	6802      	ldr	r2, [r0, #0]
{
 8001e64:	b08a      	sub	sp, #40	; 0x28
  GPIO_InitTypeDef GPIO_InitStruct = {0};
 8001e66:	2400      	movs	r4, #0
  if(hi2c->Instance==I2C3)
 8001e68:	429a      	cmp	r2, r3
  GPIO_InitTypeDef GPIO_InitStruct = {0};
 8001e6a:	e9cd 4404 	strd	r4, r4, [sp, #16]
 8001e6e:	e9cd 4406 	strd	r4, r4, [sp, #24]
 8001e72:	9408      	str	r4, [sp, #32]
  if(hi2c->Instance==I2C3)
 8001e74:	d002      	beq.n	8001e7c <HAL_I2C_MspInit+0x20>
    /* Release the I2C Peripheral Clock Reset */  
    __HAL_RCC_I2C3_RELEASE_RESET(); 
  /* USER CODE END I2C3_MspInit 1 */
  }

}
 8001e76:	b00a      	add	sp, #40	; 0x28
 8001e78:	e8bd 8370 	ldmia.w	sp!, {r4, r5, r6, r8, r9, pc}
    __HAL_RCC_GPIOC_CLK_ENABLE();
 8001e7c:	4d28      	ldr	r5, [pc, #160]	; (8001f20 <HAL_I2C_MspInit+0xc4>)
 8001e7e:	9401      	str	r4, [sp, #4]
 8001e80:	6b2b      	ldr	r3, [r5, #48]	; 0x30
    HAL_GPIO_Init(GPIOC, &GPIO_InitStruct);
 8001e82:	4828      	ldr	r0, [pc, #160]	; (8001f24 <HAL_I2C_MspInit+0xc8>)
    __HAL_RCC_GPIOC_CLK_ENABLE();
 8001e84:	f043 0304 	orr.w	r3, r3, #4
 8001e88:	632b      	str	r3, [r5, #48]	; 0x30
 8001e8a:	6b2b      	ldr	r3, [r5, #48]	; 0x30
 8001e8c:	f003 0304 	and.w	r3, r3, #4
 8001e90:	9301      	str	r3, [sp, #4]
 8001e92:	9b01      	ldr	r3, [sp, #4]
    __HAL_RCC_GPIOA_CLK_ENABLE();
 8001e94:	9402      	str	r4, [sp, #8]
 8001e96:	6b2b      	ldr	r3, [r5, #48]	; 0x30
 8001e98:	f043 0301 	orr.w	r3, r3, #1
 8001e9c:	632b      	str	r3, [r5, #48]	; 0x30
 8001e9e:	6b2b      	ldr	r3, [r5, #48]	; 0x30
 8001ea0:	f003 0301 	and.w	r3, r3, #1
 8001ea4:	9302      	str	r3, [sp, #8]
    GPIO_InitStruct.Pin = GPIO_PIN_9;
 8001ea6:	f44f 7200 	mov.w	r2, #512	; 0x200
 8001eaa:	f04f 0801 	mov.w	r8, #1
 8001eae:	f04f 0903 	mov.w	r9, #3
    GPIO_InitStruct.Alternate = GPIO_AF4_I2C3;
 8001eb2:	2604      	movs	r6, #4
    HAL_GPIO_Init(GPIOC, &GPIO_InitStruct);
 8001eb4:	a904      	add	r1, sp, #16
    GPIO_InitStruct.Pin = GPIO_PIN_9;
 8001eb6:	2312      	movs	r3, #18
 8001eb8:	e9cd 2304 	strd	r2, r3, [sp, #16]
 8001ebc:	e9cd 8906 	strd	r8, r9, [sp, #24]
    __HAL_RCC_GPIOA_CLK_ENABLE();
 8001ec0:	9b02      	ldr	r3, [sp, #8]
    GPIO_InitStruct.Alternate = GPIO_AF4_I2C3;
 8001ec2:	9608      	str	r6, [sp, #32]
    HAL_GPIO_Init(GPIOC, &GPIO_InitStruct);
 8001ec4:	f007 fb70 	bl	80095a8 <HAL_GPIO_Init>
    HAL_GPIO_Init(GPIOA, &GPIO_InitStruct);
 8001ec8:	a904      	add	r1, sp, #16
    GPIO_InitStruct.Pin = GPIO_PIN_8;
 8001eca:	f44f 7280 	mov.w	r2, #256	; 0x100
 8001ece:	2312      	movs	r3, #18
    HAL_GPIO_Init(GPIOA, &GPIO_InitStruct);
 8001ed0:	4815      	ldr	r0, [pc, #84]	; (8001f28 <HAL_I2C_MspInit+0xcc>)
    GPIO_InitStruct.Alternate = GPIO_AF4_I2C3;
 8001ed2:	9608      	str	r6, [sp, #32]
    GPIO_InitStruct.Pin = GPIO_PIN_8;
 8001ed4:	e9cd 2304 	strd	r2, r3, [sp, #16]
 8001ed8:	e9cd 8906 	strd	r8, r9, [sp, #24]
    HAL_GPIO_Init(GPIOA, &GPIO_InitStruct);
 8001edc:	f007 fb64 	bl	80095a8 <HAL_GPIO_Init>
    __HAL_RCC_I2C3_CLK_ENABLE();
 8001ee0:	9403      	str	r4, [sp, #12]
 8001ee2:	6c2b      	ldr	r3, [r5, #64]	; 0x40
 8001ee4:	f443 0300 	orr.w	r3, r3, #8388608	; 0x800000
 8001ee8:	642b      	str	r3, [r5, #64]	; 0x40
 8001eea:	6c2b      	ldr	r3, [r5, #64]	; 0x40
 8001eec:	f403 0300 	and.w	r3, r3, #8388608	; 0x800000
    HAL_NVIC_SetPriority(I2C3_EV_IRQn, 5, 0);
 8001ef0:	4622      	mov	r2, r4
 8001ef2:	2105      	movs	r1, #5
    __HAL_RCC_I2C3_CLK_ENABLE();
 8001ef4:	9303      	str	r3, [sp, #12]
    HAL_NVIC_SetPriority(I2C3_EV_IRQn, 5, 0);
 8001ef6:	2048      	movs	r0, #72	; 0x48
    __HAL_RCC_I2C3_CLK_ENABLE();
 8001ef8:	9b03      	ldr	r3, [sp, #12]
    HAL_NVIC_SetPriority(I2C3_EV_IRQn, 5, 0);
 8001efa:	f007 f8ed 	bl	80090d8 <HAL_NVIC_SetPriority>
    HAL_NVIC_EnableIRQ(I2C3_EV_IRQn);
 8001efe:	2048      	movs	r0, #72	; 0x48
 8001f00:	f007 f928 	bl	8009154 <HAL_NVIC_EnableIRQ>
    __HAL_RCC_I2C3_FORCE_RESET();
 8001f04:	6a2b      	ldr	r3, [r5, #32]
 8001f06:	f443 0300 	orr.w	r3, r3, #8388608	; 0x800000
 8001f0a:	622b      	str	r3, [r5, #32]
    __HAL_RCC_I2C3_RELEASE_RESET(); 
 8001f0c:	6a2b      	ldr	r3, [r5, #32]
 8001f0e:	f423 0300 	bic.w	r3, r3, #8388608	; 0x800000
 8001f12:	622b      	str	r3, [r5, #32]
}
 8001f14:	b00a      	add	sp, #40	; 0x28
 8001f16:	e8bd 8370 	ldmia.w	sp!, {r4, r5, r6, r8, r9, pc}
 8001f1a:	bf00      	nop
 8001f1c:	40005c00 	.word	0x40005c00
 8001f20:	40023800 	.word	0x40023800
 8001f24:	40020800 	.word	0x40020800
 8001f28:	40020000 	.word	0x40020000

08001f2c <HAL_LTDC_MspInit>:
* This function configures the hardware resources used in this example
* @param hltdc: LTDC handle pointer
* @retval None
*/
void HAL_LTDC_MspInit(LTDC_HandleTypeDef* hltdc)
{
 8001f2c:	e92d 41f0 	stmdb	sp!, {r4, r5, r6, r7, r8, lr}
 8001f30:	4604      	mov	r4, r0
 8001f32:	b09a      	sub	sp, #104	; 0x68
  GPIO_InitTypeDef GPIO_InitStruct = {0};
 8001f34:	2100      	movs	r1, #0
  RCC_PeriphCLKInitTypeDef PeriphClkInitStruct = {0};
 8001f36:	2230      	movs	r2, #48	; 0x30
 8001f38:	a80e      	add	r0, sp, #56	; 0x38
  GPIO_InitTypeDef GPIO_InitStruct = {0};
 8001f3a:	e9cd 1108 	strd	r1, r1, [sp, #32]
 8001f3e:	e9cd 110a 	strd	r1, r1, [sp, #40]	; 0x28
 8001f42:	910c      	str	r1, [sp, #48]	; 0x30
  RCC_PeriphCLKInitTypeDef PeriphClkInitStruct = {0};
 8001f44:	f028 fa83 	bl	802a44e <memset>
  if(hltdc->Instance==LTDC)
 8001f48:	4b67      	ldr	r3, [pc, #412]	; (80020e8 <HAL_LTDC_MspInit+0x1bc>)
 8001f4a:	6822      	ldr	r2, [r4, #0]
 8001f4c:	429a      	cmp	r2, r3
 8001f4e:	d002      	beq.n	8001f56 <HAL_LTDC_MspInit+0x2a>
  /* USER CODE BEGIN LTDC_MspInit 1 */

  /* USER CODE END LTDC_MspInit 1 */
  }

}
 8001f50:	b01a      	add	sp, #104	; 0x68
 8001f52:	e8bd 81f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, pc}
    PeriphClkInitStruct.PLLSAI.PLLSAIN = 192;
 8001f56:	23c0      	movs	r3, #192	; 0xc0
    PeriphClkInitStruct.PeriphClockSelection = RCC_PERIPHCLK_LTDC;
 8001f58:	2108      	movs	r1, #8
    PeriphClkInitStruct.PLLSAI.PLLSAIR = 4;
 8001f5a:	2204      	movs	r2, #4
    PeriphClkInitStruct.PLLSAI.PLLSAIN = 192;
 8001f5c:	9312      	str	r3, [sp, #72]	; 0x48
    if (HAL_RCCEx_PeriphCLKConfig(&PeriphClkInitStruct) != HAL_OK)
 8001f5e:	a80e      	add	r0, sp, #56	; 0x38
    PeriphClkInitStruct.PLLSAIDivR = RCC_PLLSAIDIVR_8;
 8001f60:	f44f 3300 	mov.w	r3, #131072	; 0x20000
    PeriphClkInitStruct.PeriphClockSelection = RCC_PERIPHCLK_LTDC;
 8001f64:	910e      	str	r1, [sp, #56]	; 0x38
    PeriphClkInitStruct.PLLSAI.PLLSAIR = 4;
 8001f66:	9214      	str	r2, [sp, #80]	; 0x50
    PeriphClkInitStruct.PLLSAIDivR = RCC_PLLSAIDIVR_8;
 8001f68:	9317      	str	r3, [sp, #92]	; 0x5c
    if (HAL_RCCEx_PeriphCLKConfig(&PeriphClkInitStruct) != HAL_OK)
 8001f6a:	f009 fd87 	bl	800ba7c <HAL_RCCEx_PeriphCLKConfig>
 8001f6e:	2800      	cmp	r0, #0
 8001f70:	f040 80b7 	bne.w	80020e2 <HAL_LTDC_MspInit+0x1b6>
    __HAL_RCC_LTDC_CLK_ENABLE();
 8001f74:	4b5d      	ldr	r3, [pc, #372]	; (80020ec <HAL_LTDC_MspInit+0x1c0>)
    HAL_GPIO_Init(GPIOF, &GPIO_InitStruct);
 8001f76:	485e      	ldr	r0, [pc, #376]	; (80020f0 <HAL_LTDC_MspInit+0x1c4>)
    __HAL_RCC_LTDC_CLK_ENABLE();
 8001f78:	2400      	movs	r4, #0
 8001f7a:	9401      	str	r4, [sp, #4]
 8001f7c:	6c5a      	ldr	r2, [r3, #68]	; 0x44
 8001f7e:	f042 6280 	orr.w	r2, r2, #67108864	; 0x4000000
 8001f82:	645a      	str	r2, [r3, #68]	; 0x44
 8001f84:	6c5a      	ldr	r2, [r3, #68]	; 0x44
 8001f86:	f002 6280 	and.w	r2, r2, #67108864	; 0x4000000
 8001f8a:	9201      	str	r2, [sp, #4]
 8001f8c:	9a01      	ldr	r2, [sp, #4]
    __HAL_RCC_GPIOF_CLK_ENABLE();
 8001f8e:	9402      	str	r4, [sp, #8]
 8001f90:	6b1a      	ldr	r2, [r3, #48]	; 0x30
 8001f92:	f042 0220 	orr.w	r2, r2, #32
 8001f96:	631a      	str	r2, [r3, #48]	; 0x30
 8001f98:	6b1a      	ldr	r2, [r3, #48]	; 0x30
 8001f9a:	f002 0220 	and.w	r2, r2, #32
 8001f9e:	9202      	str	r2, [sp, #8]
 8001fa0:	9a02      	ldr	r2, [sp, #8]
    __HAL_RCC_GPIOA_CLK_ENABLE();
 8001fa2:	9403      	str	r4, [sp, #12]
 8001fa4:	6b1a      	ldr	r2, [r3, #48]	; 0x30
 8001fa6:	f042 0201 	orr.w	r2, r2, #1
 8001faa:	631a      	str	r2, [r3, #48]	; 0x30
 8001fac:	6b1a      	ldr	r2, [r3, #48]	; 0x30
 8001fae:	f002 0201 	and.w	r2, r2, #1
 8001fb2:	9203      	str	r2, [sp, #12]
 8001fb4:	9a03      	ldr	r2, [sp, #12]
    __HAL_RCC_GPIOB_CLK_ENABLE();
 8001fb6:	9404      	str	r4, [sp, #16]
 8001fb8:	6b1a      	ldr	r2, [r3, #48]	; 0x30
 8001fba:	f042 0202 	orr.w	r2, r2, #2
 8001fbe:	631a      	str	r2, [r3, #48]	; 0x30
 8001fc0:	6b1a      	ldr	r2, [r3, #48]	; 0x30
 8001fc2:	f002 0202 	and.w	r2, r2, #2
 8001fc6:	9204      	str	r2, [sp, #16]
 8001fc8:	9a04      	ldr	r2, [sp, #16]
    __HAL_RCC_GPIOG_CLK_ENABLE();
 8001fca:	9405      	str	r4, [sp, #20]
 8001fcc:	6b1a      	ldr	r2, [r3, #48]	; 0x30
 8001fce:	f042 0240 	orr.w	r2, r2, #64	; 0x40
 8001fd2:	631a      	str	r2, [r3, #48]	; 0x30
 8001fd4:	6b1a      	ldr	r2, [r3, #48]	; 0x30
 8001fd6:	f002 0240 	and.w	r2, r2, #64	; 0x40
 8001fda:	9205      	str	r2, [sp, #20]
 8001fdc:	9a05      	ldr	r2, [sp, #20]
    __HAL_RCC_GPIOC_CLK_ENABLE();
 8001fde:	9406      	str	r4, [sp, #24]
 8001fe0:	6b1a      	ldr	r2, [r3, #48]	; 0x30
 8001fe2:	f042 0204 	orr.w	r2, r2, #4
 8001fe6:	631a      	str	r2, [r3, #48]	; 0x30
 8001fe8:	6b1a      	ldr	r2, [r3, #48]	; 0x30
 8001fea:	f002 0204 	and.w	r2, r2, #4
 8001fee:	9206      	str	r2, [sp, #24]
 8001ff0:	9a06      	ldr	r2, [sp, #24]
    __HAL_RCC_GPIOD_CLK_ENABLE();
 8001ff2:	9407      	str	r4, [sp, #28]
 8001ff4:	6b1a      	ldr	r2, [r3, #48]	; 0x30
 8001ff6:	f042 0208 	orr.w	r2, r2, #8
 8001ffa:	631a      	str	r2, [r3, #48]	; 0x30
 8001ffc:	6b1b      	ldr	r3, [r3, #48]	; 0x30
 8001ffe:	f003 0308 	and.w	r3, r3, #8
    GPIO_InitStruct.Pin = GPIO_PIN_10;
 8002002:	2600      	movs	r6, #0
 8002004:	2702      	movs	r7, #2
    GPIO_InitStruct.Alternate = GPIO_AF14_LTDC;
 8002006:	250e      	movs	r5, #14
    __HAL_RCC_GPIOD_CLK_ENABLE();
 8002008:	9307      	str	r3, [sp, #28]
    HAL_GPIO_Init(GPIOF, &GPIO_InitStruct);
 800200a:	a908      	add	r1, sp, #32
    GPIO_InitStruct.Pin = GPIO_PIN_10;
 800200c:	f44f 6280 	mov.w	r2, #1024	; 0x400
 8002010:	2302      	movs	r3, #2
 8002012:	e9cd 2308 	strd	r2, r3, [sp, #32]
 8002016:	e9cd 670a 	strd	r6, r7, [sp, #40]	; 0x28
    __HAL_RCC_GPIOD_CLK_ENABLE();
 800201a:	9b07      	ldr	r3, [sp, #28]
    GPIO_InitStruct.Alternate = GPIO_AF14_LTDC;
 800201c:	950c      	str	r5, [sp, #48]	; 0x30
    HAL_GPIO_Init(GPIOF, &GPIO_InitStruct);
 800201e:	f007 fac3 	bl	80095a8 <HAL_GPIO_Init>
    HAL_GPIO_Init(GPIOA, &GPIO_InitStruct);
 8002022:	a908      	add	r1, sp, #32
    GPIO_InitStruct.Pin = GPIO_PIN_3|GPIO_PIN_4|GPIO_PIN_6|GPIO_PIN_11
 8002024:	f641 0258 	movw	r2, #6232	; 0x1858
 8002028:	2302      	movs	r3, #2
    HAL_GPIO_Init(GPIOA, &GPIO_InitStruct);
 800202a:	4832      	ldr	r0, [pc, #200]	; (80020f4 <HAL_LTDC_MspInit+0x1c8>)
    GPIO_InitStruct.Alternate = GPIO_AF14_LTDC;
 800202c:	950c      	str	r5, [sp, #48]	; 0x30
    GPIO_InitStruct.Pin = GPIO_PIN_3|GPIO_PIN_4|GPIO_PIN_6|GPIO_PIN_11
 800202e:	e9cd 2308 	strd	r2, r3, [sp, #32]
    GPIO_InitStruct.Alternate = GPIO_AF9_LTDC;
 8002032:	f04f 0809 	mov.w	r8, #9
    GPIO_InitStruct.Pin = GPIO_PIN_3|GPIO_PIN_4|GPIO_PIN_6|GPIO_PIN_11
 8002036:	e9cd 670a 	strd	r6, r7, [sp, #40]	; 0x28
    HAL_GPIO_Init(GPIOA, &GPIO_InitStruct);
 800203a:	f007 fab5 	bl	80095a8 <HAL_GPIO_Init>
    HAL_GPIO_Init(GPIOB, &GPIO_InitStruct);
 800203e:	a908      	add	r1, sp, #32
    GPIO_InitStruct.Pin = GPIO_PIN_0|GPIO_PIN_1;
 8002040:	2203      	movs	r2, #3
 8002042:	2302      	movs	r3, #2
    HAL_GPIO_Init(GPIOB, &GPIO_InitStruct);
 8002044:	482c      	ldr	r0, [pc, #176]	; (80020f8 <HAL_LTDC_MspInit+0x1cc>)
    GPIO_InitStruct.Alternate = GPIO_AF9_LTDC;
 8002046:	f8cd 8030 	str.w	r8, [sp, #48]	; 0x30
    GPIO_InitStruct.Pin = GPIO_PIN_0|GPIO_PIN_1;
 800204a:	e9cd 2308 	strd	r2, r3, [sp, #32]
 800204e:	e9cd 670a 	strd	r6, r7, [sp, #40]	; 0x28
    HAL_GPIO_Init(GPIOB, &GPIO_InitStruct);
 8002052:	f007 faa9 	bl	80095a8 <HAL_GPIO_Init>
    HAL_GPIO_Init(GPIOB, &GPIO_InitStruct);
 8002056:	a908      	add	r1, sp, #32
    GPIO_InitStruct.Pin = GPIO_PIN_10|GPIO_PIN_11|GPIO_PIN_8|GPIO_PIN_9;
 8002058:	f44f 6270 	mov.w	r2, #3840	; 0xf00
 800205c:	2302      	movs	r3, #2
    HAL_GPIO_Init(GPIOB, &GPIO_InitStruct);
 800205e:	4826      	ldr	r0, [pc, #152]	; (80020f8 <HAL_LTDC_MspInit+0x1cc>)
    GPIO_InitStruct.Alternate = GPIO_AF14_LTDC;
 8002060:	950c      	str	r5, [sp, #48]	; 0x30
    GPIO_InitStruct.Pin = GPIO_PIN_10|GPIO_PIN_11|GPIO_PIN_8|GPIO_PIN_9;
 8002062:	e9cd 2308 	strd	r2, r3, [sp, #32]
 8002066:	e9cd 670a 	strd	r6, r7, [sp, #40]	; 0x28
    HAL_GPIO_Init(GPIOB, &GPIO_InitStruct);
 800206a:	f007 fa9d 	bl	80095a8 <HAL_GPIO_Init>
    HAL_GPIO_Init(GPIOG, &GPIO_InitStruct);
 800206e:	a908      	add	r1, sp, #32
    GPIO_InitStruct.Pin = GPIO_PIN_6|GPIO_PIN_7|GPIO_PIN_11;
 8002070:	f44f 620c 	mov.w	r2, #2240	; 0x8c0
 8002074:	2302      	movs	r3, #2
    HAL_GPIO_Init(GPIOG, &GPIO_InitStruct);
 8002076:	4821      	ldr	r0, [pc, #132]	; (80020fc <HAL_LTDC_MspInit+0x1d0>)
    GPIO_InitStruct.Alternate = GPIO_AF14_LTDC;
 8002078:	950c      	str	r5, [sp, #48]	; 0x30
    GPIO_InitStruct.Pin = GPIO_PIN_6|GPIO_PIN_7|GPIO_PIN_11;
 800207a:	e9cd 2308 	strd	r2, r3, [sp, #32]
 800207e:	e9cd 670a 	strd	r6, r7, [sp, #40]	; 0x28
    HAL_GPIO_Init(GPIOG, &GPIO_InitStruct);
 8002082:	f007 fa91 	bl	80095a8 <HAL_GPIO_Init>
    HAL_GPIO_Init(GPIOC, &GPIO_InitStruct);
 8002086:	a908      	add	r1, sp, #32
    GPIO_InitStruct.Pin = GPIO_PIN_6|GPIO_PIN_7;
 8002088:	22c0      	movs	r2, #192	; 0xc0
 800208a:	2302      	movs	r3, #2
    HAL_GPIO_Init(GPIOC, &GPIO_InitStruct);
 800208c:	481c      	ldr	r0, [pc, #112]	; (8002100 <HAL_LTDC_MspInit+0x1d4>)
    GPIO_InitStruct.Alternate = GPIO_AF14_LTDC;
 800208e:	950c      	str	r5, [sp, #48]	; 0x30
    GPIO_InitStruct.Pin = GPIO_PIN_6|GPIO_PIN_7;
 8002090:	e9cd 2308 	strd	r2, r3, [sp, #32]
 8002094:	e9cd 670a 	strd	r6, r7, [sp, #40]	; 0x28
    HAL_GPIO_Init(GPIOC, &GPIO_InitStruct);
 8002098:	f007 fa86 	bl	80095a8 <HAL_GPIO_Init>
    HAL_GPIO_Init(GPIOD, &GPIO_InitStruct);
 800209c:	a908      	add	r1, sp, #32
    GPIO_InitStruct.Pin = GPIO_PIN_3;
 800209e:	2208      	movs	r2, #8
 80020a0:	2302      	movs	r3, #2
    HAL_GPIO_Init(GPIOD, &GPIO_InitStruct);
 80020a2:	4818      	ldr	r0, [pc, #96]	; (8002104 <HAL_LTDC_MspInit+0x1d8>)
    GPIO_InitStruct.Alternate = GPIO_AF14_LTDC;
 80020a4:	950c      	str	r5, [sp, #48]	; 0x30
    GPIO_InitStruct.Pin = GPIO_PIN_3;
 80020a6:	e9cd 2308 	strd	r2, r3, [sp, #32]
 80020aa:	e9cd 670a 	strd	r6, r7, [sp, #40]	; 0x28
    HAL_GPIO_Init(GPIOD, &GPIO_InitStruct);
 80020ae:	f007 fa7b 	bl	80095a8 <HAL_GPIO_Init>
    GPIO_InitStruct.Pin = GPIO_PIN_10|GPIO_PIN_12;
 80020b2:	2302      	movs	r3, #2
    HAL_GPIO_Init(GPIOG, &GPIO_InitStruct);
 80020b4:	a908      	add	r1, sp, #32
    GPIO_InitStruct.Pin = GPIO_PIN_10|GPIO_PIN_12;
 80020b6:	f44f 52a0 	mov.w	r2, #5120	; 0x1400
    HAL_GPIO_Init(GPIOG, &GPIO_InitStruct);
 80020ba:	4810      	ldr	r0, [pc, #64]	; (80020fc <HAL_LTDC_MspInit+0x1d0>)
    GPIO_InitStruct.Alternate = GPIO_AF9_LTDC;
 80020bc:	f8cd 8030 	str.w	r8, [sp, #48]	; 0x30
    GPIO_InitStruct.Pin = GPIO_PIN_10|GPIO_PIN_12;
 80020c0:	e9cd 2308 	strd	r2, r3, [sp, #32]
 80020c4:	e9cd 670a 	strd	r6, r7, [sp, #40]	; 0x28
    HAL_GPIO_Init(GPIOG, &GPIO_InitStruct);
 80020c8:	f007 fa6e 	bl	80095a8 <HAL_GPIO_Init>
    HAL_NVIC_SetPriority(LTDC_IRQn, 5, 0);
 80020cc:	4622      	mov	r2, r4
 80020ce:	2105      	movs	r1, #5
 80020d0:	2058      	movs	r0, #88	; 0x58
 80020d2:	f007 f801 	bl	80090d8 <HAL_NVIC_SetPriority>
    HAL_NVIC_EnableIRQ(LTDC_IRQn);
 80020d6:	2058      	movs	r0, #88	; 0x58
 80020d8:	f007 f83c 	bl	8009154 <HAL_NVIC_EnableIRQ>
}
 80020dc:	b01a      	add	sp, #104	; 0x68
 80020de:	e8bd 81f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, pc}
      Error_Handler();
 80020e2:	f7ff fd0b 	bl	8001afc <Error_Handler>
 80020e6:	e745      	b.n	8001f74 <HAL_LTDC_MspInit+0x48>
 80020e8:	40016800 	.word	0x40016800
 80020ec:	40023800 	.word	0x40023800
 80020f0:	40021400 	.word	0x40021400
 80020f4:	40020000 	.word	0x40020000
 80020f8:	40020400 	.word	0x40020400
 80020fc:	40021800 	.word	0x40021800
 8002100:	40020800 	.word	0x40020800
 8002104:	40020c00 	.word	0x40020c00

08002108 <HAL_SPI_MspInit>:
* This function configures the hardware resources used in this example
* @param hspi: SPI handle pointer
* @retval None
*/
void HAL_SPI_MspInit(SPI_HandleTypeDef* hspi)
{
 8002108:	b510      	push	{r4, lr}
  GPIO_InitTypeDef GPIO_InitStruct = {0};
  if(hspi->Instance==SPI5)
 800210a:	4a1b      	ldr	r2, [pc, #108]	; (8002178 <HAL_SPI_MspInit+0x70>)
 800210c:	6801      	ldr	r1, [r0, #0]
{
 800210e:	b088      	sub	sp, #32
  GPIO_InitTypeDef GPIO_InitStruct = {0};
 8002110:	2300      	movs	r3, #0
  if(hspi->Instance==SPI5)
 8002112:	4291      	cmp	r1, r2
  GPIO_InitTypeDef GPIO_InitStruct = {0};
 8002114:	e9cd 3302 	strd	r3, r3, [sp, #8]
 8002118:	e9cd 3304 	strd	r3, r3, [sp, #16]
 800211c:	9306      	str	r3, [sp, #24]
  if(hspi->Instance==SPI5)
 800211e:	d001      	beq.n	8002124 <HAL_SPI_MspInit+0x1c>
  /* USER CODE BEGIN SPI5_MspInit 1 */

  /* USER CODE END SPI5_MspInit 1 */
  }

}
 8002120:	b008      	add	sp, #32
 8002122:	bd10      	pop	{r4, pc}
    __HAL_RCC_SPI5_CLK_ENABLE();
 8002124:	f502 4268 	add.w	r2, r2, #59392	; 0xe800
 8002128:	9300      	str	r3, [sp, #0]
 800212a:	6c50      	ldr	r0, [r2, #68]	; 0x44
 800212c:	f440 1080 	orr.w	r0, r0, #1048576	; 0x100000
 8002130:	6450      	str	r0, [r2, #68]	; 0x44
 8002132:	6c50      	ldr	r0, [r2, #68]	; 0x44
 8002134:	f400 1080 	and.w	r0, r0, #1048576	; 0x100000
 8002138:	9000      	str	r0, [sp, #0]
 800213a:	9800      	ldr	r0, [sp, #0]
    __HAL_RCC_GPIOF_CLK_ENABLE();
 800213c:	9301      	str	r3, [sp, #4]
 800213e:	6b13      	ldr	r3, [r2, #48]	; 0x30
    HAL_GPIO_Init(GPIOF, &GPIO_InitStruct);
 8002140:	480e      	ldr	r0, [pc, #56]	; (800217c <HAL_SPI_MspInit+0x74>)
    __HAL_RCC_GPIOF_CLK_ENABLE();
 8002142:	f043 0320 	orr.w	r3, r3, #32
 8002146:	6313      	str	r3, [r2, #48]	; 0x30
 8002148:	6b13      	ldr	r3, [r2, #48]	; 0x30
    GPIO_InitStruct.Pin = GPIO_PIN_7|GPIO_PIN_8|GPIO_PIN_9;
 800214a:	ed9f 7b09 	vldr	d7, [pc, #36]	; 8002170 <HAL_SPI_MspInit+0x68>
    __HAL_RCC_GPIOF_CLK_ENABLE();
 800214e:	f003 0320 	and.w	r3, r3, #32
 8002152:	9301      	str	r3, [sp, #4]
    GPIO_InitStruct.Speed = GPIO_SPEED_FREQ_VERY_HIGH;
 8002154:	2203      	movs	r2, #3
    GPIO_InitStruct.Alternate = GPIO_AF5_SPI5;
 8002156:	2305      	movs	r3, #5
    HAL_GPIO_Init(GPIOF, &GPIO_InitStruct);
 8002158:	a902      	add	r1, sp, #8
    GPIO_InitStruct.Pin = GPIO_PIN_7|GPIO_PIN_8|GPIO_PIN_9;
 800215a:	ed8d 7b02 	vstr	d7, [sp, #8]
    GPIO_InitStruct.Alternate = GPIO_AF5_SPI5;
 800215e:	e9cd 2305 	strd	r2, r3, [sp, #20]
    __HAL_RCC_GPIOF_CLK_ENABLE();
 8002162:	9c01      	ldr	r4, [sp, #4]
    HAL_GPIO_Init(GPIOF, &GPIO_InitStruct);
 8002164:	f007 fa20 	bl	80095a8 <HAL_GPIO_Init>
}
 8002168:	b008      	add	sp, #32
 800216a:	bd10      	pop	{r4, pc}
 800216c:	f3af 8000 	nop.w
 8002170:	00000380 	.word	0x00000380
 8002174:	00000002 	.word	0x00000002
 8002178:	40015000 	.word	0x40015000
 800217c:	40021400 	.word	0x40021400

08002180 <HAL_TIM_Base_MspInit>:
* This function configures the hardware resources used in this example
* @param htim_base: TIM_Base handle pointer
* @retval None
*/
void HAL_TIM_Base_MspInit(TIM_HandleTypeDef* htim_base)
{
 8002180:	b530      	push	{r4, r5, lr}
  if(htim_base->Instance==TIM1)
 8002182:	4a31      	ldr	r2, [pc, #196]	; (8002248 <HAL_TIM_Base_MspInit+0xc8>)
 8002184:	6803      	ldr	r3, [r0, #0]
 8002186:	4293      	cmp	r3, r2
{
 8002188:	b085      	sub	sp, #20
  if(htim_base->Instance==TIM1)
 800218a:	d007      	beq.n	800219c <HAL_TIM_Base_MspInit+0x1c>
    __HAL_RCC_TIM1_CLK_ENABLE();
  /* USER CODE BEGIN TIM1_MspInit 1 */

  /* USER CODE END TIM1_MspInit 1 */
  }
  else if(htim_base->Instance==TIM2)
 800218c:	f1b3 4f80 	cmp.w	r3, #1073741824	; 0x40000000
 8002190:	d020      	beq.n	80021d4 <HAL_TIM_Base_MspInit+0x54>
    HAL_NVIC_EnableIRQ(TIM2_IRQn);
  /* USER CODE BEGIN TIM2_MspInit 1 */

  /* USER CODE END TIM2_MspInit 1 */
  }
  else if(htim_base->Instance==TIM3)
 8002192:	4a2e      	ldr	r2, [pc, #184]	; (800224c <HAL_TIM_Base_MspInit+0xcc>)
 8002194:	4293      	cmp	r3, r2
 8002196:	d00f      	beq.n	80021b8 <HAL_TIM_Base_MspInit+0x38>
  /* USER CODE BEGIN TIM3_MspInit 1 */

  /* USER CODE END TIM3_MspInit 1 */
  }

}
 8002198:	b005      	add	sp, #20
 800219a:	bd30      	pop	{r4, r5, pc}
    __HAL_RCC_TIM1_CLK_ENABLE();
 800219c:	4b2c      	ldr	r3, [pc, #176]	; (8002250 <HAL_TIM_Base_MspInit+0xd0>)
 800219e:	2200      	movs	r2, #0
 80021a0:	9201      	str	r2, [sp, #4]
 80021a2:	6c5a      	ldr	r2, [r3, #68]	; 0x44
 80021a4:	f042 0201 	orr.w	r2, r2, #1
 80021a8:	645a      	str	r2, [r3, #68]	; 0x44
 80021aa:	6c5b      	ldr	r3, [r3, #68]	; 0x44
 80021ac:	f003 0301 	and.w	r3, r3, #1
 80021b0:	9301      	str	r3, [sp, #4]
 80021b2:	9b01      	ldr	r3, [sp, #4]
}
 80021b4:	b005      	add	sp, #20
 80021b6:	bd30      	pop	{r4, r5, pc}
    __HAL_RCC_TIM3_CLK_ENABLE();
 80021b8:	4b25      	ldr	r3, [pc, #148]	; (8002250 <HAL_TIM_Base_MspInit+0xd0>)
 80021ba:	2200      	movs	r2, #0
 80021bc:	9203      	str	r2, [sp, #12]
 80021be:	6c1a      	ldr	r2, [r3, #64]	; 0x40
 80021c0:	f042 0202 	orr.w	r2, r2, #2
 80021c4:	641a      	str	r2, [r3, #64]	; 0x40
 80021c6:	6c1b      	ldr	r3, [r3, #64]	; 0x40
 80021c8:	f003 0302 	and.w	r3, r3, #2
 80021cc:	9303      	str	r3, [sp, #12]
 80021ce:	9b03      	ldr	r3, [sp, #12]
}
 80021d0:	b005      	add	sp, #20
 80021d2:	bd30      	pop	{r4, r5, pc}
    __HAL_RCC_TIM2_CLK_ENABLE();
 80021d4:	2300      	movs	r3, #0
 80021d6:	4a1e      	ldr	r2, [pc, #120]	; (8002250 <HAL_TIM_Base_MspInit+0xd0>)
 80021d8:	9302      	str	r3, [sp, #8]
 80021da:	6c11      	ldr	r1, [r2, #64]	; 0x40
    hdma_tim2_up_ch3.Instance = DMA1_Stream1;
 80021dc:	4d1d      	ldr	r5, [pc, #116]	; (8002254 <HAL_TIM_Base_MspInit+0xd4>)
    __HAL_RCC_TIM2_CLK_ENABLE();
 80021de:	f041 0101 	orr.w	r1, r1, #1
 80021e2:	6411      	str	r1, [r2, #64]	; 0x40
 80021e4:	6c12      	ldr	r2, [r2, #64]	; 0x40
    hdma_tim2_up_ch3.Instance = DMA1_Stream1;
 80021e6:	491c      	ldr	r1, [pc, #112]	; (8002258 <HAL_TIM_Base_MspInit+0xd8>)
    hdma_tim2_up_ch3.Init.PeriphInc = DMA_PINC_DISABLE;
 80021e8:	60eb      	str	r3, [r5, #12]
    __HAL_RCC_TIM2_CLK_ENABLE();
 80021ea:	f002 0201 	and.w	r2, r2, #1
 80021ee:	9202      	str	r2, [sp, #8]
    hdma_tim2_up_ch3.Init.Channel = DMA_CHANNEL_3;
 80021f0:	f04f 62c0 	mov.w	r2, #100663296	; 0x6000000
 80021f4:	e9c5 1200 	strd	r1, r2, [r5]
    hdma_tim2_up_ch3.Init.Direction = DMA_MEMORY_TO_PERIPH;
 80021f8:	2140      	movs	r1, #64	; 0x40
    hdma_tim2_up_ch3.Init.MemInc = DMA_MINC_ENABLE;
 80021fa:	f44f 6280 	mov.w	r2, #1024	; 0x400
    hdma_tim2_up_ch3.Init.Direction = DMA_MEMORY_TO_PERIPH;
 80021fe:	60a9      	str	r1, [r5, #8]
    hdma_tim2_up_ch3.Init.MemInc = DMA_MINC_ENABLE;
 8002200:	612a      	str	r2, [r5, #16]
    hdma_tim2_up_ch3.Init.MemDataAlignment = DMA_MDATAALIGN_WORD;
 8002202:	f44f 5180 	mov.w	r1, #4096	; 0x1000
 8002206:	f44f 4280 	mov.w	r2, #16384	; 0x4000
 800220a:	e9c5 1205 	strd	r1, r2, [r5, #20]
 800220e:	4604      	mov	r4, r0
    hdma_tim2_up_ch3.Init.Priority = DMA_PRIORITY_MEDIUM;
 8002210:	f44f 3280 	mov.w	r2, #65536	; 0x10000
    __HAL_RCC_TIM2_CLK_ENABLE();
 8002214:	9802      	ldr	r0, [sp, #8]
    hdma_tim2_up_ch3.Init.FIFOMode = DMA_FIFOMODE_DISABLE;
 8002216:	626b      	str	r3, [r5, #36]	; 0x24
    if (HAL_DMA_Init(&hdma_tim2_up_ch3) != HAL_OK)
 8002218:	4628      	mov	r0, r5
    hdma_tim2_up_ch3.Init.Priority = DMA_PRIORITY_MEDIUM;
 800221a:	e9c5 3207 	strd	r3, r2, [r5, #28]
    if (HAL_DMA_Init(&hdma_tim2_up_ch3) != HAL_OK)
 800221e:	f006 ffbb 	bl	8009198 <HAL_DMA_Init>
 8002222:	b968      	cbnz	r0, 8002240 <HAL_TIM_Base_MspInit+0xc0>
    __HAL_LINKDMA(htim_base,hdma[TIM_DMA_ID_UPDATE],hdma_tim2_up_ch3);
 8002224:	6225      	str	r5, [r4, #32]
    __HAL_LINKDMA(htim_base,hdma[TIM_DMA_ID_CC3],hdma_tim2_up_ch3);
 8002226:	62e5      	str	r5, [r4, #44]	; 0x2c
    HAL_NVIC_SetPriority(TIM2_IRQn, 5, 0);
 8002228:	201c      	movs	r0, #28
 800222a:	2200      	movs	r2, #0
 800222c:	2105      	movs	r1, #5
    __HAL_LINKDMA(htim_base,hdma[TIM_DMA_ID_CC3],hdma_tim2_up_ch3);
 800222e:	63ac      	str	r4, [r5, #56]	; 0x38
    HAL_NVIC_SetPriority(TIM2_IRQn, 5, 0);
 8002230:	f006 ff52 	bl	80090d8 <HAL_NVIC_SetPriority>
    HAL_NVIC_EnableIRQ(TIM2_IRQn);
 8002234:	201c      	movs	r0, #28
}
 8002236:	b005      	add	sp, #20
 8002238:	e8bd 4030 	ldmia.w	sp!, {r4, r5, lr}
    HAL_NVIC_EnableIRQ(TIM2_IRQn);
 800223c:	f006 bf8a 	b.w	8009154 <HAL_NVIC_EnableIRQ>
      Error_Handler();
 8002240:	f7ff fc5c 	bl	8001afc <Error_Handler>
 8002244:	e7ee      	b.n	8002224 <HAL_TIM_Base_MspInit+0xa4>
 8002246:	bf00      	nop
 8002248:	40010000 	.word	0x40010000
 800224c:	40000400 	.word	0x40000400
 8002250:	40023800 	.word	0x40023800
 8002254:	20001928 	.word	0x20001928
 8002258:	40026028 	.word	0x40026028

0800225c <HAL_SDRAM_MspInit>:
  /* USER CODE BEGIN FMC_MspInit 1 */

  /* USER CODE END FMC_MspInit 1 */
}

void HAL_SDRAM_MspInit(SDRAM_HandleTypeDef* hsdram){
 800225c:	b5f0      	push	{r4, r5, r6, r7, lr}
  if (FMC_Initialized) {
 800225e:	4b2b      	ldr	r3, [pc, #172]	; (800230c <HAL_SDRAM_MspInit+0xb0>)
void HAL_SDRAM_MspInit(SDRAM_HandleTypeDef* hsdram){
 8002260:	b089      	sub	sp, #36	; 0x24
  if (FMC_Initialized) {
 8002262:	681c      	ldr	r4, [r3, #0]
  GPIO_InitTypeDef GPIO_InitStruct ={0};
 8002264:	2200      	movs	r2, #0
 8002266:	9204      	str	r2, [sp, #16]
  if (FMC_Initialized) {
 8002268:	2c00      	cmp	r4, #0
 800226a:	d14c      	bne.n	8002306 <HAL_SDRAM_MspInit+0xaa>
  FMC_Initialized = 1;
 800226c:	2701      	movs	r7, #1
  __HAL_RCC_FMC_CLK_ENABLE();
 800226e:	4a28      	ldr	r2, [pc, #160]	; (8002310 <HAL_SDRAM_MspInit+0xb4>)
 8002270:	9401      	str	r4, [sp, #4]
  FMC_Initialized = 1;
 8002272:	601f      	str	r7, [r3, #0]
  __HAL_RCC_FMC_CLK_ENABLE();
 8002274:	6b93      	ldr	r3, [r2, #56]	; 0x38
  HAL_GPIO_Init(GPIOF, &GPIO_InitStruct);
 8002276:	4827      	ldr	r0, [pc, #156]	; (8002314 <HAL_SDRAM_MspInit+0xb8>)
  __HAL_RCC_FMC_CLK_ENABLE();
 8002278:	433b      	orrs	r3, r7
 800227a:	6393      	str	r3, [r2, #56]	; 0x38
 800227c:	6b93      	ldr	r3, [r2, #56]	; 0x38
 800227e:	403b      	ands	r3, r7
  GPIO_InitStruct.Speed = GPIO_SPEED_FREQ_VERY_HIGH;
 8002280:	2603      	movs	r6, #3
  GPIO_InitStruct.Alternate = GPIO_AF12_FMC;
 8002282:	250c      	movs	r5, #12
  GPIO_InitStruct.Pin = GPIO_PIN_0|GPIO_PIN_1|GPIO_PIN_2|GPIO_PIN_3
 8002284:	f64f 023f 	movw	r2, #63551	; 0xf83f
  __HAL_RCC_FMC_CLK_ENABLE();
 8002288:	9301      	str	r3, [sp, #4]
  HAL_GPIO_Init(GPIOF, &GPIO_InitStruct);
 800228a:	a902      	add	r1, sp, #8
  GPIO_InitStruct.Pin = GPIO_PIN_0|GPIO_PIN_1|GPIO_PIN_2|GPIO_PIN_3
 800228c:	2302      	movs	r3, #2
 800228e:	e9cd 2302 	strd	r2, r3, [sp, #8]
  GPIO_InitStruct.Alternate = GPIO_AF12_FMC;
 8002292:	e9cd 6505 	strd	r6, r5, [sp, #20]
  __HAL_RCC_FMC_CLK_ENABLE();
 8002296:	9b01      	ldr	r3, [sp, #4]
  HAL_GPIO_Init(GPIOF, &GPIO_InitStruct);
 8002298:	f007 f986 	bl	80095a8 <HAL_GPIO_Init>
  HAL_GPIO_Init(GPIOC, &GPIO_InitStruct);
 800229c:	481e      	ldr	r0, [pc, #120]	; (8002318 <HAL_SDRAM_MspInit+0xbc>)
  GPIO_InitStruct.Pin = GPIO_PIN_0;
 800229e:	9702      	str	r7, [sp, #8]
  HAL_GPIO_Init(GPIOC, &GPIO_InitStruct);
 80022a0:	a902      	add	r1, sp, #8
  GPIO_InitStruct.Mode = GPIO_MODE_AF_PP;
 80022a2:	2702      	movs	r7, #2
  GPIO_InitStruct.Pull = GPIO_NOPULL;
 80022a4:	e9cd 7403 	strd	r7, r4, [sp, #12]
  GPIO_InitStruct.Alternate = GPIO_AF12_FMC;
 80022a8:	e9cd 6505 	strd	r6, r5, [sp, #20]
  HAL_GPIO_Init(GPIOC, &GPIO_InitStruct);
 80022ac:	f007 f97c 	bl	80095a8 <HAL_GPIO_Init>
  GPIO_InitStruct.Pin = GPIO_PIN_0|GPIO_PIN_1|GPIO_PIN_4|GPIO_PIN_5
 80022b0:	f248 1333 	movw	r3, #33075	; 0x8133
  HAL_GPIO_Init(GPIOG, &GPIO_InitStruct);
 80022b4:	4819      	ldr	r0, [pc, #100]	; (800231c <HAL_SDRAM_MspInit+0xc0>)
  GPIO_InitStruct.Pin = GPIO_PIN_0|GPIO_PIN_1|GPIO_PIN_4|GPIO_PIN_5
 80022b6:	9302      	str	r3, [sp, #8]
  HAL_GPIO_Init(GPIOG, &GPIO_InitStruct);
 80022b8:	a902      	add	r1, sp, #8
  GPIO_InitStruct.Pull = GPIO_NOPULL;
 80022ba:	e9cd 7403 	strd	r7, r4, [sp, #12]
  GPIO_InitStruct.Alternate = GPIO_AF12_FMC;
 80022be:	e9cd 6505 	strd	r6, r5, [sp, #20]
  HAL_GPIO_Init(GPIOG, &GPIO_InitStruct);
 80022c2:	f007 f971 	bl	80095a8 <HAL_GPIO_Init>
  GPIO_InitStruct.Pin = GPIO_PIN_7|GPIO_PIN_8|GPIO_PIN_9|GPIO_PIN_10
 80022c6:	f64f 7383 	movw	r3, #65411	; 0xff83
  HAL_GPIO_Init(GPIOE, &GPIO_InitStruct);
 80022ca:	4815      	ldr	r0, [pc, #84]	; (8002320 <HAL_SDRAM_MspInit+0xc4>)
  GPIO_InitStruct.Pin = GPIO_PIN_7|GPIO_PIN_8|GPIO_PIN_9|GPIO_PIN_10
 80022cc:	9302      	str	r3, [sp, #8]
  HAL_GPIO_Init(GPIOE, &GPIO_InitStruct);
 80022ce:	a902      	add	r1, sp, #8
  GPIO_InitStruct.Pull = GPIO_NOPULL;
 80022d0:	e9cd 7403 	strd	r7, r4, [sp, #12]
  GPIO_InitStruct.Alternate = GPIO_AF12_FMC;
 80022d4:	e9cd 6505 	strd	r6, r5, [sp, #20]
  HAL_GPIO_Init(GPIOE, &GPIO_InitStruct);
 80022d8:	f007 f966 	bl	80095a8 <HAL_GPIO_Init>
  GPIO_InitStruct.Pin = GPIO_PIN_8|GPIO_PIN_9|GPIO_PIN_10|GPIO_PIN_14
 80022dc:	f24c 7303 	movw	r3, #50947	; 0xc703
  HAL_GPIO_Init(GPIOD, &GPIO_InitStruct);
 80022e0:	4810      	ldr	r0, [pc, #64]	; (8002324 <HAL_SDRAM_MspInit+0xc8>)
  GPIO_InitStruct.Pin = GPIO_PIN_8|GPIO_PIN_9|GPIO_PIN_10|GPIO_PIN_14
 80022e2:	9302      	str	r3, [sp, #8]
  HAL_GPIO_Init(GPIOD, &GPIO_InitStruct);
 80022e4:	a902      	add	r1, sp, #8
  GPIO_InitStruct.Pull = GPIO_NOPULL;
 80022e6:	e9cd 7403 	strd	r7, r4, [sp, #12]
  GPIO_InitStruct.Alternate = GPIO_AF12_FMC;
 80022ea:	e9cd 6505 	strd	r6, r5, [sp, #20]
  HAL_GPIO_Init(GPIOD, &GPIO_InitStruct);
 80022ee:	f007 f95b 	bl	80095a8 <HAL_GPIO_Init>
  GPIO_InitStruct.Pin = GPIO_PIN_5|GPIO_PIN_6;
 80022f2:	2360      	movs	r3, #96	; 0x60
  HAL_GPIO_Init(GPIOB, &GPIO_InitStruct);
 80022f4:	480c      	ldr	r0, [pc, #48]	; (8002328 <HAL_SDRAM_MspInit+0xcc>)
  GPIO_InitStruct.Mode = GPIO_MODE_AF_PP;
 80022f6:	9703      	str	r7, [sp, #12]
  HAL_GPIO_Init(GPIOB, &GPIO_InitStruct);
 80022f8:	a902      	add	r1, sp, #8
  GPIO_InitStruct.Speed = GPIO_SPEED_FREQ_VERY_HIGH;
 80022fa:	e9cd 4604 	strd	r4, r6, [sp, #16]
  GPIO_InitStruct.Alternate = GPIO_AF12_FMC;
 80022fe:	9506      	str	r5, [sp, #24]
  GPIO_InitStruct.Pin = GPIO_PIN_5|GPIO_PIN_6;
 8002300:	9302      	str	r3, [sp, #8]
  HAL_GPIO_Init(GPIOB, &GPIO_InitStruct);
 8002302:	f007 f951 	bl	80095a8 <HAL_GPIO_Init>
  /* USER CODE END SDRAM_MspInit 0 */
  HAL_FMC_MspInit();
  /* USER CODE BEGIN SDRAM_MspInit 1 */

  /* USER CODE END SDRAM_MspInit 1 */
}
 8002306:	b009      	add	sp, #36	; 0x24
 8002308:	bdf0      	pop	{r4, r5, r6, r7, pc}
 800230a:	bf00      	nop
 800230c:	20001ff4 	.word	0x20001ff4
 8002310:	40023800 	.word	0x40023800
 8002314:	40021400 	.word	0x40021400
 8002318:	40020800 	.word	0x40020800
 800231c:	40021800 	.word	0x40021800
 8002320:	40021000 	.word	0x40021000
 8002324:	40020c00 	.word	0x40020c00
 8002328:	40020400 	.word	0x40020400

0800232c <HAL_InitTick>:
  *         reset by HAL_Init() or at any time when clock is configured, by HAL_RCC_ClockConfig().
  * @param  TickPriority: Tick interrupt priority.
  * @retval HAL status
  */
HAL_StatusTypeDef HAL_InitTick(uint32_t TickPriority)
{
 800232c:	b570      	push	{r4, r5, r6, lr}
 800232e:	b088      	sub	sp, #32
  uint32_t              uwPrescalerValue = 0U;
  uint32_t              pFLatency;
  HAL_StatusTypeDef     status;

  /* Enable TIM6 clock */
  __HAL_RCC_TIM6_CLK_ENABLE();
 8002330:	4b23      	ldr	r3, [pc, #140]	; (80023c0 <HAL_InitTick+0x94>)
 8002332:	2200      	movs	r2, #0
 8002334:	9202      	str	r2, [sp, #8]
 8002336:	6c1a      	ldr	r2, [r3, #64]	; 0x40
 8002338:	f042 0210 	orr.w	r2, r2, #16
 800233c:	641a      	str	r2, [r3, #64]	; 0x40
 800233e:	6c1b      	ldr	r3, [r3, #64]	; 0x40
 8002340:	f003 0310 	and.w	r3, r3, #16
 8002344:	9302      	str	r3, [sp, #8]
{
 8002346:	4605      	mov	r5, r0

  /* Get clock configuration */
  HAL_RCC_GetClockConfig(&clkconfig, &pFLatency);
 8002348:	a901      	add	r1, sp, #4
 800234a:	a803      	add	r0, sp, #12
  __HAL_RCC_TIM6_CLK_ENABLE();
 800234c:	9b02      	ldr	r3, [sp, #8]
  HAL_RCC_GetClockConfig(&clkconfig, &pFLatency);
 800234e:	f009 fb73 	bl	800ba38 <HAL_RCC_GetClockConfig>

  /* Get APB1 prescaler */
  uwAPB1Prescaler = clkconfig.APB1CLKDivider;
  /* Compute TIM6 clock */
  if (uwAPB1Prescaler == RCC_HCLK_DIV1)
 8002352:	9b06      	ldr	r3, [sp, #24]
 8002354:	b9d3      	cbnz	r3, 800238c <HAL_InitTick+0x60>
  {
    uwTimclock = HAL_RCC_GetPCLK1Freq();
 8002356:	f009 fb5f 	bl	800ba18 <HAL_RCC_GetPCLK1Freq>
 800235a:	4603      	mov	r3, r0
  {
    uwTimclock = 2UL * HAL_RCC_GetPCLK1Freq();
  }

  /* Compute the prescaler value to have TIM6 counter clock equal to 1MHz */
  uwPrescalerValue = (uint32_t) ((uwTimclock / 1000000U) - 1U);
 800235c:	4a19      	ldr	r2, [pc, #100]	; (80023c4 <HAL_InitTick+0x98>)

  /* Initialize TIM6 */
  htim6.Instance = TIM6;
 800235e:	4c1a      	ldr	r4, [pc, #104]	; (80023c8 <HAL_InitTick+0x9c>)
 8002360:	491a      	ldr	r1, [pc, #104]	; (80023cc <HAL_InitTick+0xa0>)
  uwPrescalerValue = (uint32_t) ((uwTimclock / 1000000U) - 1U);
 8002362:	fba2 2303 	umull	r2, r3, r2, r3
 8002366:	0c9b      	lsrs	r3, r3, #18
 8002368:	3b01      	subs	r3, #1
  + ClockDivision = 0
  + Counter direction = Up
  */
  htim6.Init.Period = (1000000U / 1000U) - 1U;
  htim6.Init.Prescaler = uwPrescalerValue;
  htim6.Init.ClockDivision = 0;
 800236a:	2200      	movs	r2, #0
  htim6.Init.Prescaler = uwPrescalerValue;
 800236c:	e9c4 1300 	strd	r1, r3, [r4]
  htim6.Init.CounterMode = TIM_COUNTERMODE_UP;
  htim6.Init.AutoReloadPreload = TIM_AUTORELOAD_PRELOAD_DISABLE;

  status = HAL_TIM_Base_Init(&htim6);
 8002370:	4620      	mov	r0, r4
  htim6.Init.Period = (1000000U / 1000U) - 1U;
 8002372:	f240 33e7 	movw	r3, #999	; 0x3e7
  htim6.Init.ClockDivision = 0;
 8002376:	6122      	str	r2, [r4, #16]
  htim6.Init.CounterMode = TIM_COUNTERMODE_UP;
 8002378:	60a2      	str	r2, [r4, #8]
  htim6.Init.AutoReloadPreload = TIM_AUTORELOAD_PRELOAD_DISABLE;
 800237a:	61a2      	str	r2, [r4, #24]
  htim6.Init.Period = (1000000U / 1000U) - 1U;
 800237c:	60e3      	str	r3, [r4, #12]
  status = HAL_TIM_Base_Init(&htim6);
 800237e:	f00a f98b 	bl	800c698 <HAL_TIM_Base_Init>
  if (status == HAL_OK)
 8002382:	4606      	mov	r6, r0
 8002384:	b130      	cbz	r0, 8002394 <HAL_InitTick+0x68>
    }
  }

 /* Return function status */
  return status;
}
 8002386:	4630      	mov	r0, r6
 8002388:	b008      	add	sp, #32
 800238a:	bd70      	pop	{r4, r5, r6, pc}
    uwTimclock = 2UL * HAL_RCC_GetPCLK1Freq();
 800238c:	f009 fb44 	bl	800ba18 <HAL_RCC_GetPCLK1Freq>
 8002390:	0043      	lsls	r3, r0, #1
 8002392:	e7e3      	b.n	800235c <HAL_InitTick+0x30>
    status = HAL_TIM_Base_Start_IT(&htim6);
 8002394:	4620      	mov	r0, r4
 8002396:	f00a fa0d 	bl	800c7b4 <HAL_TIM_Base_Start_IT>
    if (status == HAL_OK)
 800239a:	4606      	mov	r6, r0
 800239c:	2800      	cmp	r0, #0
 800239e:	d1f2      	bne.n	8002386 <HAL_InitTick+0x5a>
        HAL_NVIC_EnableIRQ(TIM6_DAC_IRQn);
 80023a0:	2036      	movs	r0, #54	; 0x36
 80023a2:	f006 fed7 	bl	8009154 <HAL_NVIC_EnableIRQ>
      if (TickPriority < (1UL << __NVIC_PRIO_BITS))
 80023a6:	2d0f      	cmp	r5, #15
 80023a8:	d901      	bls.n	80023ae <HAL_InitTick+0x82>
        status = HAL_ERROR;
 80023aa:	2601      	movs	r6, #1
 80023ac:	e7eb      	b.n	8002386 <HAL_InitTick+0x5a>
        HAL_NVIC_SetPriority(TIM6_DAC_IRQn, TickPriority, 0U);
 80023ae:	4632      	mov	r2, r6
 80023b0:	4629      	mov	r1, r5
 80023b2:	2036      	movs	r0, #54	; 0x36
 80023b4:	f006 fe90 	bl	80090d8 <HAL_NVIC_SetPriority>
        uwTickPrio = TickPriority;
 80023b8:	4b05      	ldr	r3, [pc, #20]	; (80023d0 <HAL_InitTick+0xa4>)
 80023ba:	601d      	str	r5, [r3, #0]
 80023bc:	e7e3      	b.n	8002386 <HAL_InitTick+0x5a>
 80023be:	bf00      	nop
 80023c0:	40023800 	.word	0x40023800
 80023c4:	431bde83 	.word	0x431bde83
 80023c8:	20001ff8 	.word	0x20001ff8
 80023cc:	40001000 	.word	0x40001000
 80023d0:	20000080 	.word	0x20000080

080023d4 <NMI_Handler>:

  /* USER CODE END NonMaskableInt_IRQn 0 */
  /* USER CODE BEGIN NonMaskableInt_IRQn 1 */

  /* USER CODE END NonMaskableInt_IRQn 1 */
}
 80023d4:	4770      	bx	lr
 80023d6:	bf00      	nop

080023d8 <HardFault_Handler>:
void HardFault_Handler(void)
{
  /* USER CODE BEGIN HardFault_IRQn 0 */

  /* USER CODE END HardFault_IRQn 0 */
  while (1)
 80023d8:	e7fe      	b.n	80023d8 <HardFault_Handler>
 80023da:	bf00      	nop

080023dc <MemManage_Handler>:
void MemManage_Handler(void)
{
  /* USER CODE BEGIN MemoryManagement_IRQn 0 */

  /* USER CODE END MemoryManagement_IRQn 0 */
  while (1)
 80023dc:	e7fe      	b.n	80023dc <MemManage_Handler>
 80023de:	bf00      	nop

080023e0 <BusFault_Handler>:
void BusFault_Handler(void)
{
  /* USER CODE BEGIN BusFault_IRQn 0 */

  /* USER CODE END BusFault_IRQn 0 */
  while (1)
 80023e0:	e7fe      	b.n	80023e0 <BusFault_Handler>
 80023e2:	bf00      	nop

080023e4 <UsageFault_Handler>:
void UsageFault_Handler(void)
{
  /* USER CODE BEGIN UsageFault_IRQn 0 */

  /* USER CODE END UsageFault_IRQn 0 */
  while (1)
 80023e4:	e7fe      	b.n	80023e4 <UsageFault_Handler>
 80023e6:	bf00      	nop

080023e8 <DebugMon_Handler>:
 80023e8:	4770      	bx	lr
 80023ea:	bf00      	nop

080023ec <EXTI3_IRQHandler>:

/**
  * @brief This function handles EXTI line3 interrupt.
  */
void EXTI3_IRQHandler(void)
{
 80023ec:	b508      	push	{r3, lr}
  /* USER CODE BEGIN EXTI3_IRQn 0 */

  HAL_Delay(200);
 80023ee:	20c8      	movs	r0, #200	; 0xc8
 80023f0:	f006 fe4e 	bl	8009090 <HAL_Delay>
  HAL_GPIO_WritePin(GPIOE, GPIO_PIN_5, GPIO_PIN_RESET);
 80023f4:	4804      	ldr	r0, [pc, #16]	; (8002408 <EXTI3_IRQHandler+0x1c>)
 80023f6:	2200      	movs	r2, #0
 80023f8:	2120      	movs	r1, #32
 80023fa:	f007 fa19 	bl	8009830 <HAL_GPIO_WritePin>
  /* USER CODE END EXTI3_IRQn 0 */
  HAL_GPIO_EXTI_IRQHandler(DEVICE_ON_OFF_TRIGGER_Pin);
  /* USER CODE BEGIN EXTI3_IRQn 1 */

  /* USER CODE END EXTI3_IRQn 1 */
}
 80023fe:	e8bd 4008 	ldmia.w	sp!, {r3, lr}
  HAL_GPIO_EXTI_IRQHandler(DEVICE_ON_OFF_TRIGGER_Pin);
 8002402:	2008      	movs	r0, #8
 8002404:	f007 ba24 	b.w	8009850 <HAL_GPIO_EXTI_IRQHandler>
 8002408:	40021000 	.word	0x40021000

0800240c <DMA1_Stream1_IRQHandler>:
void DMA1_Stream1_IRQHandler(void)
{
  /* USER CODE BEGIN DMA1_Stream1_IRQn 0 */

  /* USER CODE END DMA1_Stream1_IRQn 0 */
  HAL_DMA_IRQHandler(&hdma_tim2_up_ch3);
 800240c:	4801      	ldr	r0, [pc, #4]	; (8002414 <DMA1_Stream1_IRQHandler+0x8>)
 800240e:	f006 bf6d 	b.w	80092ec <HAL_DMA_IRQHandler>
 8002412:	bf00      	nop
 8002414:	20001928 	.word	0x20001928

08002418 <TIM2_IRQHandler>:
void TIM2_IRQHandler(void)
{
  /* USER CODE BEGIN TIM2_IRQn 0 */
//  HAL_GPIO_TogglePin(GPIOG, GPIO_PIN_13);
  /* USER CODE END TIM2_IRQn 0 */
  HAL_TIM_IRQHandler(&htim2);
 8002418:	4801      	ldr	r0, [pc, #4]	; (8002420 <TIM2_IRQHandler+0x8>)
 800241a:	f00a bb4b 	b.w	800cab4 <HAL_TIM_IRQHandler>
 800241e:	bf00      	nop
 8002420:	20001b58 	.word	0x20001b58

08002424 <TIM6_DAC_IRQHandler>:
void TIM6_DAC_IRQHandler(void)
{
  /* USER CODE BEGIN TIM6_DAC_IRQn 0 */

  /* USER CODE END TIM6_DAC_IRQn 0 */
  HAL_TIM_IRQHandler(&htim6);
 8002424:	4801      	ldr	r0, [pc, #4]	; (800242c <TIM6_DAC_IRQHandler+0x8>)
 8002426:	f00a bb45 	b.w	800cab4 <HAL_TIM_IRQHandler>
 800242a:	bf00      	nop
 800242c:	20001ff8 	.word	0x20001ff8

08002430 <I2C3_EV_IRQHandler>:
void I2C3_EV_IRQHandler(void)
{
  /* USER CODE BEGIN I2C3_EV_IRQn 0 */

  /* USER CODE END I2C3_EV_IRQn 0 */
  HAL_I2C_EV_IRQHandler(&hi2c3);
 8002430:	4801      	ldr	r0, [pc, #4]	; (8002438 <I2C3_EV_IRQHandler+0x8>)
 8002432:	f008 b96d 	b.w	800a710 <HAL_I2C_EV_IRQHandler>
 8002436:	bf00      	nop
 8002438:	20001988 	.word	0x20001988

0800243c <LTDC_IRQHandler>:
void LTDC_IRQHandler(void)
{
  /* USER CODE BEGIN LTDC_IRQn 0 */

  /* USER CODE END LTDC_IRQn 0 */
  HAL_LTDC_IRQHandler(&hltdc);
 800243c:	4801      	ldr	r0, [pc, #4]	; (8002444 <LTDC_IRQHandler+0x8>)
 800243e:	f008 bee1 	b.w	800b204 <HAL_LTDC_IRQHandler>
 8002442:	bf00      	nop
 8002444:	200019dc 	.word	0x200019dc

08002448 <_getpid>:
}

int _getpid(void)
{
	return 1;
}
 8002448:	2001      	movs	r0, #1
 800244a:	4770      	bx	lr

0800244c <_kill>:

int _kill(int pid, int sig)
{
 800244c:	b508      	push	{r3, lr}
	errno = EINVAL;
 800244e:	f028 f8f7 	bl	802a640 <__errno>
 8002452:	2316      	movs	r3, #22
 8002454:	6003      	str	r3, [r0, #0]
	return -1;
}
 8002456:	f04f 30ff 	mov.w	r0, #4294967295
 800245a:	bd08      	pop	{r3, pc}

0800245c <_exit>:

void _exit (int status)
{
 800245c:	b508      	push	{r3, lr}
	errno = EINVAL;
 800245e:	f028 f8ef 	bl	802a640 <__errno>
 8002462:	2316      	movs	r3, #22
 8002464:	6003      	str	r3, [r0, #0]
	_kill(status, -1);
	while (1) {}		/* Make sure we hang here */
 8002466:	e7fe      	b.n	8002466 <_exit+0xa>

08002468 <_read>:
}

__attribute__((weak)) int _read(int file, char *ptr, int len)
{
 8002468:	b570      	push	{r4, r5, r6, lr}
	int DataIdx;

	for (DataIdx = 0; DataIdx < len; DataIdx++)
 800246a:	1e16      	subs	r6, r2, #0
 800246c:	dd07      	ble.n	800247e <_read+0x16>
 800246e:	460c      	mov	r4, r1
 8002470:	198d      	adds	r5, r1, r6
	{
		*ptr++ = __io_getchar();
 8002472:	f3af 8000 	nop.w
 8002476:	f804 0b01 	strb.w	r0, [r4], #1
	for (DataIdx = 0; DataIdx < len; DataIdx++)
 800247a:	42a5      	cmp	r5, r4
 800247c:	d1f9      	bne.n	8002472 <_read+0xa>
	}

return len;
}
 800247e:	4630      	mov	r0, r6
 8002480:	bd70      	pop	{r4, r5, r6, pc}
 8002482:	bf00      	nop

08002484 <_write>:

__attribute__((weak)) int _write(int file, char *ptr, int len)
{
 8002484:	b570      	push	{r4, r5, r6, lr}
	int DataIdx;

	for (DataIdx = 0; DataIdx < len; DataIdx++)
 8002486:	1e16      	subs	r6, r2, #0
 8002488:	dd07      	ble.n	800249a <_write+0x16>
 800248a:	460c      	mov	r4, r1
 800248c:	198d      	adds	r5, r1, r6
	{
		__io_putchar(*ptr++);
 800248e:	f814 0b01 	ldrb.w	r0, [r4], #1
 8002492:	f3af 8000 	nop.w
	for (DataIdx = 0; DataIdx < len; DataIdx++)
 8002496:	42ac      	cmp	r4, r5
 8002498:	d1f9      	bne.n	800248e <_write+0xa>
	}
	return len;
}
 800249a:	4630      	mov	r0, r6
 800249c:	bd70      	pop	{r4, r5, r6, pc}
 800249e:	bf00      	nop

080024a0 <_close>:

int _close(int file)
{
	return -1;
}
 80024a0:	f04f 30ff 	mov.w	r0, #4294967295
 80024a4:	4770      	bx	lr
 80024a6:	bf00      	nop

080024a8 <_fstat>:


int _fstat(int file, struct stat *st)
{
	st->st_mode = S_IFCHR;
 80024a8:	f44f 5300 	mov.w	r3, #8192	; 0x2000
 80024ac:	604b      	str	r3, [r1, #4]
	return 0;
}
 80024ae:	2000      	movs	r0, #0
 80024b0:	4770      	bx	lr
 80024b2:	bf00      	nop

080024b4 <_isatty>:

int _isatty(int file)
{
	return 1;
}
 80024b4:	2001      	movs	r0, #1
 80024b6:	4770      	bx	lr

080024b8 <_lseek>:

int _lseek(int file, int ptr, int dir)
{
	return 0;
}
 80024b8:	2000      	movs	r0, #0
 80024ba:	4770      	bx	lr

080024bc <_sbrk>:
{
	extern char end asm("end");
	static char *heap_end;
	char *prev_heap_end;

	if (heap_end == 0)
 80024bc:	4a0b      	ldr	r2, [pc, #44]	; (80024ec <_sbrk+0x30>)
{
 80024be:	b508      	push	{r3, lr}
 80024c0:	4603      	mov	r3, r0
	if (heap_end == 0)
 80024c2:	6810      	ldr	r0, [r2, #0]
 80024c4:	b128      	cbz	r0, 80024d2 <_sbrk+0x16>
		heap_end = &end;

	prev_heap_end = heap_end;
	if (heap_end + incr > stack_ptr)
 80024c6:	4403      	add	r3, r0
 80024c8:	4669      	mov	r1, sp
 80024ca:	428b      	cmp	r3, r1
 80024cc:	d807      	bhi.n	80024de <_sbrk+0x22>
	{
		errno = ENOMEM;
		return (caddr_t) -1;
	}

	heap_end += incr;
 80024ce:	6013      	str	r3, [r2, #0]

	return (caddr_t) prev_heap_end;
}
 80024d0:	bd08      	pop	{r3, pc}
		heap_end = &end;
 80024d2:	4807      	ldr	r0, [pc, #28]	; (80024f0 <_sbrk+0x34>)
 80024d4:	6010      	str	r0, [r2, #0]
	if (heap_end + incr > stack_ptr)
 80024d6:	4403      	add	r3, r0
 80024d8:	4669      	mov	r1, sp
 80024da:	428b      	cmp	r3, r1
 80024dc:	d9f7      	bls.n	80024ce <_sbrk+0x12>
		errno = ENOMEM;
 80024de:	f028 f8af 	bl	802a640 <__errno>
 80024e2:	230c      	movs	r3, #12
 80024e4:	6003      	str	r3, [r0, #0]
		return (caddr_t) -1;
 80024e6:	f04f 30ff 	mov.w	r0, #4294967295
}
 80024ea:	bd08      	pop	{r3, pc}
 80024ec:	20002040 	.word	0x20002040
 80024f0:	20013b60 	.word	0x20013b60

080024f4 <_ZN23ApplicationFontProviderD1Ev>:
    static const touchgfx::FontId SMALL = 2;     // verdana_10_4bpp
    static const touchgfx::FontId NORMAL_12 = 3; // verdana_12_4bpp
    static const uint16_t NUMBER_OF_FONTS = 4;
};

class ApplicationFontProvider : public touchgfx::FontProvider
 80024f4:	4770      	bx	lr

080024f6 <_ZN23ApplicationFontProviderD0Ev>:
 80024f6:	b510      	push	{r4, lr}
 80024f8:	2104      	movs	r1, #4
 80024fa:	4604      	mov	r4, r0
 80024fc:	f026 ff8f 	bl	802941e <_ZdlPvj>
 8002500:	4620      	mov	r0, r4
 8002502:	bd10      	pop	{r4, pc}

08002504 <_ZN23ApplicationFontProvider7getFontEt>:
#include <fonts/ApplicationFontProvider.hpp>
#include <fonts/GeneratedFont.hpp>
#include <texts/TypedTextDatabase.hpp>

touchgfx::Font* ApplicationFontProvider::getFont(touchgfx::FontId typography)
{
 8002504:	b508      	push	{r3, lr}
    switch (typography)
 8002506:	2903      	cmp	r1, #3
 8002508:	d813      	bhi.n	8002532 <_ZN23ApplicationFontProvider7getFontEt+0x2e>
 800250a:	e8df f001 	tbb	[pc, r1]
 800250e:	0602      	.short	0x0602
 8002510:	0e0a      	.short	0x0e0a
    {
    case Typography::DEFAULT:
        // verdana_19_4bpp
        return const_cast<touchgfx::Font*>(TypedTextDatabase::getFonts()[0]);
 8002512:	f005 fe3b 	bl	800818c <_ZN17TypedTextDatabase8getFontsEv>
 8002516:	6800      	ldr	r0, [r0, #0]
        // verdana_12_4bpp
        return const_cast<touchgfx::Font*>(TypedTextDatabase::getFonts()[3]);
    default:
        return 0;
    }
}
 8002518:	bd08      	pop	{r3, pc}
        return const_cast<touchgfx::Font*>(TypedTextDatabase::getFonts()[1]);
 800251a:	f005 fe37 	bl	800818c <_ZN17TypedTextDatabase8getFontsEv>
 800251e:	6840      	ldr	r0, [r0, #4]
 8002520:	e7fa      	b.n	8002518 <_ZN23ApplicationFontProvider7getFontEt+0x14>
        return const_cast<touchgfx::Font*>(TypedTextDatabase::getFonts()[2]);
 8002522:	f005 fe33 	bl	800818c <_ZN17TypedTextDatabase8getFontsEv>
 8002526:	6880      	ldr	r0, [r0, #8]
 8002528:	e7f6      	b.n	8002518 <_ZN23ApplicationFontProvider7getFontEt+0x14>
        return const_cast<touchgfx::Font*>(TypedTextDatabase::getFonts()[3]);
 800252a:	f005 fe2f 	bl	800818c <_ZN17TypedTextDatabase8getFontsEv>
 800252e:	68c0      	ldr	r0, [r0, #12]
 8002530:	e7f2      	b.n	8002518 <_ZN23ApplicationFontProvider7getFontEt+0x14>
    switch (typography)
 8002532:	2000      	movs	r0, #0
 8002534:	e7f0      	b.n	8002518 <_ZN23ApplicationFontProvider7getFontEt+0x14>
	...

08002538 <_ZN14BitmapDatabase11getInstanceEv>:
namespace BitmapDatabase
{
const touchgfx::Bitmap::BitmapData* getInstance()
{
    return bitmap_database;
}
 8002538:	4800      	ldr	r0, [pc, #0]	; (800253c <_ZN14BitmapDatabase11getInstanceEv+0x4>)
 800253a:	4770      	bx	lr
 800253c:	0802b934 	.word	0x0802b934

08002540 <_ZN14BitmapDatabase15getInstanceSizeEv>:

uint16_t getInstanceSize()
{
    return (uint16_t)(sizeof(bitmap_database) / sizeof(touchgfx::Bitmap::BitmapData));
}
 8002540:	200d      	movs	r0, #13
 8002542:	4770      	bx	lr

08002544 <_ZNK8touchgfx4Font8getGlyphEt>:
     *
     * @return A pointer to the glyph node or null if the glyph was not found.
     *
     * @see TextProvider::getNextLigature
     */
    virtual const GlyphNode* getGlyph(Unicode::UnicodeChar unicode) const
 8002544:	b513      	push	{r0, r1, r4, lr}
 8002546:	2400      	movs	r4, #0
    {
        if (unicode == 0)
 8002548:	b151      	cbz	r1, 8002560 <_ZNK8touchgfx4Font8getGlyphEt+0x1c>
        {
            return 0;
        }
        const uint8_t* dummyPixelDataPointer = 0;
        uint8_t bitsPerPixelDummy = 0;
        const GlyphNode* glyph = getGlyph(unicode, dummyPixelDataPointer, bitsPerPixelDummy);
 800254a:	6803      	ldr	r3, [r0, #0]
        const uint8_t* dummyPixelDataPointer = 0;
 800254c:	9401      	str	r4, [sp, #4]
        uint8_t bitsPerPixelDummy = 0;
 800254e:	f88d 4003 	strb.w	r4, [sp, #3]
        const GlyphNode* glyph = getGlyph(unicode, dummyPixelDataPointer, bitsPerPixelDummy);
 8002552:	aa01      	add	r2, sp, #4
 8002554:	689c      	ldr	r4, [r3, #8]
 8002556:	f10d 0303 	add.w	r3, sp, #3
 800255a:	47a0      	blx	r4
        return glyph;
    }
 800255c:	b002      	add	sp, #8
 800255e:	bd10      	pop	{r4, pc}
            return 0;
 8002560:	4608      	mov	r0, r1
 8002562:	e7fb      	b.n	800255c <_ZNK8touchgfx4Font8getGlyphEt+0x18>

08002564 <_ZNK8touchgfx4Font15getFallbackCharEv>:
     * @return The default character for the typography in case no glyph is available.
     */
    virtual Unicode::UnicodeChar getFallbackChar() const
    {
        return fallbackCharacter;
    }
 8002564:	89c0      	ldrh	r0, [r0, #14]
 8002566:	4770      	bx	lr

08002568 <_ZNK8touchgfx4Font15getEllipsisCharEv>:
     * @see TextArea::setWideTextAction
     */
    virtual Unicode::UnicodeChar getEllipsisChar() const
    {
        return ellipsisCharacter;
    }
 8002568:	8a00      	ldrh	r0, [r0, #16]
 800256a:	4770      	bx	lr

0800256c <_ZNK8touchgfx4Font11getBaselineEv>:
     *       getHeight for this.
     */
    FORCE_INLINE_FUNCTION virtual uint16_t getBaseline() const
    {
        return baselineHeight;
    }
 800256c:	88c0      	ldrh	r0, [r0, #6]
 800256e:	4770      	bx	lr

08002570 <_ZNK8touchgfx4Font9getHeightEv>:
     * @return The font height.
     */
    FORCE_INLINE_FUNCTION virtual uint16_t getHeight() const
    {
        return fontHeight;
    }
 8002570:	8880      	ldrh	r0, [r0, #4]
 8002572:	4770      	bx	lr

08002574 <_ZNK8touchgfx4Font15getBitsPerPixelEv>:
     *
     * @return The number of bits used per pixel in this font.
     */
    FORCE_INLINE_FUNCTION virtual uint8_t getBitsPerPixel() const
    {
        return bPerPixel;
 8002574:	7a80      	ldrb	r0, [r0, #10]
    }
 8002576:	f000 007f 	and.w	r0, r0, #127	; 0x7f
 800257a:	4770      	bx	lr

0800257c <_ZNK8touchgfx4Font15getByteAlignRowEv>:
     *
     * @return True if each glyph row is stored byte aligned, false otherwise.
     */
    FORCE_INLINE_FUNCTION virtual uint8_t getByteAlignRow() const
    {
        return bAlignRow;
 800257c:	7a80      	ldrb	r0, [r0, #10]
    }
 800257e:	09c0      	lsrs	r0, r0, #7
 8002580:	4770      	bx	lr

08002582 <_ZN8touchgfx6Screen11setupScreenEv>:
     *
     * @see Application::switchScreen
     */
    virtual void setupScreen()
    {
    }
 8002582:	4770      	bx	lr

08002584 <_ZN8touchgfx6Screen15afterTransitionEv>:
     *
     * @see Application::handleTickEvent
     */
    virtual void afterTransition()
    {
    }
 8002584:	4770      	bx	lr

08002586 <_ZN8touchgfx6Screen14tearDownScreenEv>:
     *
     * @see Application::switchScreen
     */
    virtual void tearDownScreen()
    {
    }
 8002586:	4770      	bx	lr

08002588 <_ZN8touchgfx6Screen15handleTickEventEv>:
     * Called by the Application on the current screen with a frequency of
     * Application::TICK_INTERVAL_MS.
     */
    virtual void handleTickEvent()
    {
    }
 8002588:	4770      	bx	lr

0800258a <_ZN8touchgfx6Screen14handleKeyEventEh>:
     * @param  key The key to handle.
     */
    virtual void handleKeyEvent(uint8_t key)
    {
        (void)key; // Unused variable
    }
 800258a:	4770      	bx	lr

0800258c <_ZN8touchgfx9TypedTextD1Ev>:
    }
 800258c:	4770      	bx	lr

0800258e <_ZN8touchgfx8TextArea8setWidthEs>:
    TextArea()
        : Widget(), typedText(TYPED_TEXT_INVALID), color(0), linespace(0), alpha(255), indentation(0), rotation(TEXT_ROTATE_0), wideTextAction(WIDE_TEXT_NONE), boundingArea()
    {
    }

    virtual void setWidth(int16_t width)
 800258e:	b530      	push	{r4, r5, lr}
    {
        Widget::setWidth(width);
        boundingArea = calculateBoundingArea();
 8002590:	6803      	ldr	r3, [r0, #0]
        rect.width = width;
 8002592:	8101      	strh	r1, [r0, #8]
    virtual void setWidth(int16_t width)
 8002594:	b085      	sub	sp, #20
        boundingArea = calculateBoundingArea();
 8002596:	466d      	mov	r5, sp
 8002598:	4601      	mov	r1, r0
 800259a:	f8d3 3084 	ldr.w	r3, [r3, #132]	; 0x84
    virtual void setWidth(int16_t width)
 800259e:	4604      	mov	r4, r0
        boundingArea = calculateBoundingArea();
 80025a0:	4628      	mov	r0, r5
 80025a2:	4798      	blx	r3
 80025a4:	e895 0007 	ldmia.w	r5, {r0, r1, r2}
 80025a8:	343c      	adds	r4, #60	; 0x3c
 80025aa:	e884 0007 	stmia.w	r4, {r0, r1, r2}
    }
 80025ae:	b005      	add	sp, #20
 80025b0:	bd30      	pop	{r4, r5, pc}

080025b2 <_ZN8touchgfx8TextArea9setHeightEs>:

    virtual void setHeight(int16_t height)
 80025b2:	b530      	push	{r4, r5, lr}
    {
        Widget::setHeight(height);
        boundingArea = calculateBoundingArea();
 80025b4:	6803      	ldr	r3, [r0, #0]
        rect.height = height;
 80025b6:	8141      	strh	r1, [r0, #10]
    virtual void setHeight(int16_t height)
 80025b8:	b085      	sub	sp, #20
        boundingArea = calculateBoundingArea();
 80025ba:	466d      	mov	r5, sp
 80025bc:	4601      	mov	r1, r0
 80025be:	f8d3 3084 	ldr.w	r3, [r3, #132]	; 0x84
    virtual void setHeight(int16_t height)
 80025c2:	4604      	mov	r4, r0
        boundingArea = calculateBoundingArea();
 80025c4:	4628      	mov	r0, r5
 80025c6:	4798      	blx	r3
 80025c8:	e895 0007 	ldmia.w	r5, {r0, r1, r2}
 80025cc:	343c      	adds	r4, #60	; 0x3c
 80025ce:	e884 0007 	stmia.w	r4, {r0, r1, r2}
    }
 80025d2:	b005      	add	sp, #20
 80025d4:	bd30      	pop	{r4, r5, pc}

080025d6 <_ZNK8touchgfx8TextArea12getSolidRectEv>:
 80025d6:	2200      	movs	r2, #0
 80025d8:	8002      	strh	r2, [r0, #0]
 80025da:	8042      	strh	r2, [r0, #2]
 80025dc:	8082      	strh	r2, [r0, #4]
 80025de:	80c2      	strh	r2, [r0, #6]

    virtual Rect getSolidRect() const
    {
        return Rect();
    }
 80025e0:	4770      	bx	lr

080025e2 <_ZN8touchgfx8TextArea8setAlphaEh>:
    /**
     * @copydoc Image::setAlpha
     */
    virtual void setAlpha(uint8_t newAlpha)
    {
        alpha = newAlpha;
 80025e2:	f880 1036 	strb.w	r1, [r0, #54]	; 0x36
    }
 80025e6:	4770      	bx	lr

080025e8 <_ZN8touchgfx8TextArea13setXBaselineYEss>:
     * @param  x         The x coordinate of the TextArea.
     * @param  baselineY The y coordinate of the baseline of the text.
     *
     * @note setTypedText() must be called prior to setting the baseline.
     */
    virtual void setXBaselineY(int16_t x, int16_t baselineY)
 80025e8:	b570      	push	{r4, r5, r6, lr}
    {
        setX(x);
 80025ea:	6803      	ldr	r3, [r0, #0]
    virtual void setXBaselineY(int16_t x, int16_t baselineY)
 80025ec:	4604      	mov	r4, r0
        setX(x);
 80025ee:	6b1b      	ldr	r3, [r3, #48]	; 0x30
    virtual void setXBaselineY(int16_t x, int16_t baselineY)
 80025f0:	4615      	mov	r5, r2
        setX(x);
 80025f2:	4798      	blx	r3
        setBaselineY(baselineY);
 80025f4:	6823      	ldr	r3, [r4, #0]
 80025f6:	4629      	mov	r1, r5
 80025f8:	4620      	mov	r0, r4
 80025fa:	6e5b      	ldr	r3, [r3, #100]	; 0x64
    }
 80025fc:	e8bd 4070 	ldmia.w	sp!, {r4, r5, r6, lr}
        setBaselineY(baselineY);
 8002600:	4718      	bx	r3

08002602 <_ZNK8touchgfx8TextArea12getWildcard2Ev>:
     * @see TextAreaWithOneWildcard, TextAreaWithTwoWildcards
     */
    virtual const Unicode::UnicodeChar* getWildcard2() const
    {
        return 0;
    }
 8002602:	2000      	movs	r0, #0
 8002604:	4770      	bx	lr

08002606 <_ZNK8touchgfx23TextAreaWithOneWildcard12getWildcard1Ev>:
    }

    virtual const Unicode::UnicodeChar* getWildcard1() const
    {
        return wc1;
    }
 8002606:	6c80      	ldr	r0, [r0, #72]	; 0x48
 8002608:	4770      	bx	lr

0800260a <_ZN19CalibrationViewBase11setupScreenEv>:
}

void CalibrationViewBase::setupScreen()
{

}
 800260a:	4770      	bx	lr

0800260c <_ZN8touchgfx8CallbackI19CalibrationViewBaseRKNS_14AbstractButtonEvvED1Ev>:
 *
 * @note The member function to call must return void. The function can have zero, one, two or
 *       three arguments of any type.
 */
template <class dest_type, typename T1>
struct Callback<dest_type, T1, void, void> : public GenericCallback<T1>
 800260c:	4770      	bx	lr

0800260e <_ZN8touchgfx23TextAreaWithOneWildcardD1Ev>:
class TextAreaWithOneWildcard : public TextAreaWithWildcardBase
 800260e:	4770      	bx	lr

08002610 <_ZN8touchgfx8CallbackI19CalibrationViewBaseRKNS_14AbstractButtonEvvE7executeES4_>:
     *
     * @param  t1 This value will be passed as the first argument in the function call.
     *
     * @see isValid
     */
    virtual void execute(T1 t1)
 8002610:	b430      	push	{r4, r5}
    {
        (pobject->*pmemfun)(t1);
 8002612:	68c2      	ldr	r2, [r0, #12]
 8002614:	6844      	ldr	r4, [r0, #4]
 8002616:	1055      	asrs	r5, r2, #1
    virtual void execute(T1 t1)
 8002618:	4603      	mov	r3, r0
        (pobject->*pmemfun)(t1);
 800261a:	eb04 0062 	add.w	r0, r4, r2, asr #1
 800261e:	07d2      	lsls	r2, r2, #31
 8002620:	bf48      	it	mi
 8002622:	5962      	ldrmi	r2, [r4, r5]
 8002624:	689b      	ldr	r3, [r3, #8]
    }
 8002626:	bc30      	pop	{r4, r5}
        (pobject->*pmemfun)(t1);
 8002628:	bf48      	it	mi
 800262a:	58d3      	ldrmi	r3, [r2, r3]
 800262c:	4718      	bx	r3

0800262e <_ZNK8touchgfx8CallbackI19CalibrationViewBaseRKNS_14AbstractButtonEvvE7isValidEv>:
     *
     * @return true if valid, false if not.
     */
    virtual bool isValid() const
    {
        return (pobject != 0) && (pmemfun != 0);
 800262e:	6843      	ldr	r3, [r0, #4]
 8002630:	b12b      	cbz	r3, 800263e <_ZNK8touchgfx8CallbackI19CalibrationViewBaseRKNS_14AbstractButtonEvvE7isValidEv+0x10>
 8002632:	6883      	ldr	r3, [r0, #8]
 8002634:	b92b      	cbnz	r3, 8002642 <_ZNK8touchgfx8CallbackI19CalibrationViewBaseRKNS_14AbstractButtonEvvE7isValidEv+0x14>
 8002636:	68c0      	ldr	r0, [r0, #12]
 8002638:	f000 0001 	and.w	r0, r0, #1
 800263c:	4770      	bx	lr
 800263e:	4618      	mov	r0, r3
 8002640:	4770      	bx	lr
 8002642:	2001      	movs	r0, #1
    }
 8002644:	4770      	bx	lr

08002646 <_ZN8touchgfx9TypedTextD0Ev>:
    virtual ~TypedText()
 8002646:	b510      	push	{r4, lr}
    }
 8002648:	2108      	movs	r1, #8
    virtual ~TypedText()
 800264a:	4604      	mov	r4, r0
    }
 800264c:	f026 fee7 	bl	802941e <_ZdlPvj>
 8002650:	4620      	mov	r0, r4
 8002652:	bd10      	pop	{r4, pc}

08002654 <_ZN8touchgfx23TextAreaWithOneWildcardD0Ev>:
 8002654:	b510      	push	{r4, lr}
 8002656:	214c      	movs	r1, #76	; 0x4c
 8002658:	4604      	mov	r4, r0
 800265a:	f026 fee0 	bl	802941e <_ZdlPvj>
 800265e:	4620      	mov	r0, r4
 8002660:	bd10      	pop	{r4, pc}

08002662 <_ZN8touchgfx8CallbackI19CalibrationViewBaseRKNS_14AbstractButtonEvvED0Ev>:
struct Callback<dest_type, T1, void, void> : public GenericCallback<T1>
 8002662:	b510      	push	{r4, lr}
 8002664:	2110      	movs	r1, #16
 8002666:	4604      	mov	r4, r0
 8002668:	f026 fed9 	bl	802941e <_ZdlPvj>
 800266c:	4620      	mov	r0, r4
 800266e:	bd10      	pop	{r4, pc}

08002670 <_ZN19CalibrationViewBaseD1Ev>:
CalibrationViewBase::~CalibrationViewBase()
 8002670:	b510      	push	{r4, lr}
 8002672:	4b03      	ldr	r3, [pc, #12]	; (8002680 <_ZN19CalibrationViewBaseD1Ev+0x10>)
 8002674:	6003      	str	r3, [r0, #0]
 8002676:	4604      	mov	r4, r0
    touchgfx::CanvasWidgetRenderer::resetBuffer();
 8002678:	f011 f958 	bl	801392c <_ZN8touchgfx20CanvasWidgetRenderer11resetBufferEv>
}
 800267c:	4620      	mov	r0, r4
 800267e:	bd10      	pop	{r4, pc}
 8002680:	0802bca0 	.word	0x0802bca0

08002684 <_ZN19CalibrationViewBaseD0Ev>:
CalibrationViewBase::~CalibrationViewBase()
 8002684:	b507      	push	{r0, r1, r2, lr}
 8002686:	4b07      	ldr	r3, [pc, #28]	; (80026a4 <_ZN19CalibrationViewBaseD0Ev+0x20>)
 8002688:	6003      	str	r3, [r0, #0]
 800268a:	9001      	str	r0, [sp, #4]
    touchgfx::CanvasWidgetRenderer::resetBuffer();
 800268c:	f011 f94e 	bl	801392c <_ZN8touchgfx20CanvasWidgetRenderer11resetBufferEv>
}
 8002690:	9801      	ldr	r0, [sp, #4]
 8002692:	f44f 518a 	mov.w	r1, #4416	; 0x1140
 8002696:	f026 fec2 	bl	802941e <_ZdlPvj>
 800269a:	9801      	ldr	r0, [sp, #4]
 800269c:	b003      	add	sp, #12
 800269e:	f85d fb04 	ldr.w	pc, [sp], #4
 80026a2:	bf00      	nop
 80026a4:	0802bca0 	.word	0x0802bca0

080026a8 <_ZNK8touchgfx24TextAreaWithWildcardBase17invalidateContentEv>:
    virtual void invalidateContent() const
 80026a8:	b508      	push	{r3, lr}
        Widget::invalidateContent();
 80026aa:	f7fe fcb9 	bl	8001020 <_ZNK8touchgfx8Drawable17invalidateContentEv>
    }
 80026ae:	bd08      	pop	{r3, pc}

080026b0 <_ZN8touchgfx8TextArea12setBaselineYEs>:
        setY(baselineY - getTypedText().getFont()->getBaseline());
 80026b0:	6803      	ldr	r3, [r0, #0]
    virtual void setBaselineY(int16_t baselineY)
 80026b2:	b570      	push	{r4, r5, r6, lr}
        setY(baselineY - getTypedText().getFont()->getBaseline());
 80026b4:	6b5e      	ldr	r6, [r3, #52]	; 0x34
        assert(typedTexts != 0 && "TypedText database has not been initialized.");
 80026b6:	4b12      	ldr	r3, [pc, #72]	; (8002700 <_ZN8touchgfx8TextArea12setBaselineYEs+0x50>)
 80026b8:	681b      	ldr	r3, [r3, #0]
    virtual void setBaselineY(int16_t baselineY)
 80026ba:	4604      	mov	r4, r0
        setY(baselineY - getTypedText().getFont()->getBaseline());
 80026bc:	b28d      	uxth	r5, r1
 80026be:	b92b      	cbnz	r3, 80026cc <_ZN8touchgfx8TextArea12setBaselineYEs+0x1c>
 80026c0:	4b10      	ldr	r3, [pc, #64]	; (8002704 <_ZN8touchgfx8TextArea12setBaselineYEs+0x54>)
 80026c2:	4a11      	ldr	r2, [pc, #68]	; (8002708 <_ZN8touchgfx8TextArea12setBaselineYEs+0x58>)
 80026c4:	216c      	movs	r1, #108	; 0x6c
        assert(hasValidId() && "typedTextId larger than numberOfTypedTexts.");
 80026c6:	4811      	ldr	r0, [pc, #68]	; (800270c <_ZN8touchgfx8TextArea12setBaselineYEs+0x5c>)
 80026c8:	f027 fcbc 	bl	802a044 <__assert_func>
        return typedTextId < numberOfTypedTexts;
 80026cc:	4910      	ldr	r1, [pc, #64]	; (8002710 <_ZN8touchgfx8TextArea12setBaselineYEs+0x60>)
 80026ce:	8d82      	ldrh	r2, [r0, #44]	; 0x2c
        assert(hasValidId() && "typedTextId larger than numberOfTypedTexts.");
 80026d0:	8809      	ldrh	r1, [r1, #0]
 80026d2:	4291      	cmp	r1, r2
 80026d4:	d803      	bhi.n	80026de <_ZN8touchgfx8TextArea12setBaselineYEs+0x2e>
 80026d6:	4b0f      	ldr	r3, [pc, #60]	; (8002714 <_ZN8touchgfx8TextArea12setBaselineYEs+0x64>)
 80026d8:	4a0b      	ldr	r2, [pc, #44]	; (8002708 <_ZN8touchgfx8TextArea12setBaselineYEs+0x58>)
 80026da:	216d      	movs	r1, #109	; 0x6d
 80026dc:	e7f3      	b.n	80026c6 <_ZN8touchgfx8TextArea12setBaselineYEs+0x16>
        return fonts[typedTexts[typedTextId].fontIdx];
 80026de:	f813 2012 	ldrb.w	r2, [r3, r2, lsl #1]
 80026e2:	4b0d      	ldr	r3, [pc, #52]	; (8002718 <_ZN8touchgfx8TextArea12setBaselineYEs+0x68>)
 80026e4:	681b      	ldr	r3, [r3, #0]
 80026e6:	f853 0022 	ldr.w	r0, [r3, r2, lsl #2]
 80026ea:	6803      	ldr	r3, [r0, #0]
 80026ec:	6b1b      	ldr	r3, [r3, #48]	; 0x30
 80026ee:	4798      	blx	r3
 80026f0:	1a28      	subs	r0, r5, r0
 80026f2:	b201      	sxth	r1, r0
 80026f4:	4633      	mov	r3, r6
 80026f6:	4620      	mov	r0, r4
    }
 80026f8:	e8bd 4070 	ldmia.w	sp!, {r4, r5, r6, lr}
        setY(baselineY - getTypedText().getFont()->getBaseline());
 80026fc:	4718      	bx	r3
 80026fe:	bf00      	nop
 8002700:	20012f7c 	.word	0x20012f7c
 8002704:	0802ba38 	.word	0x0802ba38
 8002708:	0802ba7a 	.word	0x0802ba7a
 800270c:	0802bab5 	.word	0x0802bab5
 8002710:	20012f80 	.word	0x20012f80
 8002714:	0802bafc 	.word	0x0802bafc
 8002718:	20012f84 	.word	0x20012f84

0800271c <_ZN19CalibrationViewBase21buttonCallbackHandlerERKN8touchgfx14AbstractButtonE>:

void CalibrationViewBase::buttonCallbackHandler(const touchgfx::AbstractButton& src)
{
 800271c:	b538      	push	{r3, r4, r5, lr}
    if (&src == &buttonWithLabel3)
 800271e:	f500 7310 	add.w	r3, r0, #576	; 0x240
 8002722:	4299      	cmp	r1, r3
{
 8002724:	4604      	mov	r4, r0
 8002726:	460d      	mov	r5, r1
    if (&src == &buttonWithLabel3)
 8002728:	d103      	bne.n	8002732 <_ZN19CalibrationViewBase21buttonCallbackHandlerERKN8touchgfx14AbstractButtonE+0x16>
    virtual ~CalibrationViewBase();
    virtual void setupScreen();

protected:
    FrontendApplication& application() {
        return *static_cast<FrontendApplication*>(touchgfx::Application::getInstance());
 800272a:	f012 fe01 	bl	8015330 <_ZN8touchgfx11Application11getInstanceEv>
    {
        //Interaction1
        //When buttonWithLabel3 clicked change screen to Main_Menu
        //Go to Main_Menu with screen transition towards West
        application().gotoMain_MenuScreenWipeTransitionWest();
 800272e:	f001 f921 	bl	8003974 <_ZN23FrontendApplicationBase37gotoMain_MenuScreenWipeTransitionWestEv>
    }
    if (&src == &buttonWithLabel1)
 8002732:	f504 7334 	add.w	r3, r4, #720	; 0x2d0
 8002736:	429d      	cmp	r5, r3
 8002738:	d103      	bne.n	8002742 <_ZN19CalibrationViewBase21buttonCallbackHandlerERKN8touchgfx14AbstractButtonE+0x26>
 800273a:	f012 fdf9 	bl	8015330 <_ZN8touchgfx11Application11getInstanceEv>
    {
        //Interaction2
        //When buttonWithLabel1 clicked change screen to Calibration_Pad
        //Go to Calibration_Pad with screen transition towards East
        application().gotoCalibration_PadScreenWipeTransitionEast();
 800273e:	f001 f9d9 	bl	8003af4 <_ZN23FrontendApplicationBase43gotoCalibration_PadScreenWipeTransitionEastEv>
    }
    if (&src == &buttonWithLabel2)
 8002742:	f504 7422 	add.w	r4, r4, #648	; 0x288
 8002746:	42a5      	cmp	r5, r4
 8002748:	d105      	bne.n	8002756 <_ZN19CalibrationViewBase21buttonCallbackHandlerERKN8touchgfx14AbstractButtonE+0x3a>
 800274a:	f012 fdf1 	bl	8015330 <_ZN8touchgfx11Application11getInstanceEv>
        //Interaction3
        //When buttonWithLabel2 clicked change screen to Calibration_Hall
        //Go to Calibration_Hall with screen transition towards East
        application().gotoCalibration_HallScreenWipeTransitionEast();
    }
}
 800274e:	e8bd 4038 	ldmia.w	sp!, {r3, r4, r5, lr}
        application().gotoCalibration_HallScreenWipeTransitionEast();
 8002752:	f001 b9df 	b.w	8003b14 <_ZN23FrontendApplicationBase44gotoCalibration_HallScreenWipeTransitionEastEv>
}
 8002756:	bd38      	pop	{r3, r4, r5, pc}

08002758 <_ZNK8touchgfx24TextAreaWithWildcardBase21calculateBoundingAreaEv>:

        /**
         * Initializes a new instance of the BoundingArea class which is invalid by default.
         */
        BoundingArea()
            : rect(Rect(0, 0, -1, -1)), // Negative width and height means invalid rectangle
 8002758:	2200      	movs	r2, #0
 800275a:	f04f 31ff 	mov.w	r1, #4294967295
 800275e:	e9c0 2100 	strd	r2, r1, [r0]
              text(0)
 8002762:	6082      	str	r2, [r0, #8]
    }
 8002764:	4770      	bx	lr

08002766 <_ZN8touchgfx8Drawable5setXYEss>:
    void setXY(int16_t x, int16_t y)
 8002766:	b570      	push	{r4, r5, r6, lr}
        setX(x);
 8002768:	6803      	ldr	r3, [r0, #0]
    void setXY(int16_t x, int16_t y)
 800276a:	4604      	mov	r4, r0
        setX(x);
 800276c:	6b1b      	ldr	r3, [r3, #48]	; 0x30
    void setXY(int16_t x, int16_t y)
 800276e:	4615      	mov	r5, r2
        setX(x);
 8002770:	4798      	blx	r3
        setY(y);
 8002772:	6823      	ldr	r3, [r4, #0]
 8002774:	4629      	mov	r1, r5
 8002776:	4620      	mov	r0, r4
 8002778:	6b5b      	ldr	r3, [r3, #52]	; 0x34
    }
 800277a:	e8bd 4070 	ldmia.w	sp!, {r4, r5, r6, lr}
        setY(y);
 800277e:	4718      	bx	r3

08002780 <_ZN8touchgfx8Drawable11setPositionEssss>:
    void setPosition(int16_t x, int16_t y, int16_t width, int16_t height)
 8002780:	b570      	push	{r4, r5, r6, lr}
 8002782:	4604      	mov	r4, r0
 8002784:	461d      	mov	r5, r3
 8002786:	f9bd 6010 	ldrsh.w	r6, [sp, #16]
        setXY(x, y);
 800278a:	f7ff ffec 	bl	8002766 <_ZN8touchgfx8Drawable5setXYEss>
        setWidth(width);
 800278e:	6823      	ldr	r3, [r4, #0]
 8002790:	4629      	mov	r1, r5
 8002792:	4620      	mov	r0, r4
 8002794:	6b9b      	ldr	r3, [r3, #56]	; 0x38
 8002796:	4798      	blx	r3
        setHeight(height);
 8002798:	6823      	ldr	r3, [r4, #0]
 800279a:	4631      	mov	r1, r6
 800279c:	4620      	mov	r0, r4
 800279e:	6bdb      	ldr	r3, [r3, #60]	; 0x3c
    }
 80027a0:	e8bd 4070 	ldmia.w	sp!, {r4, r5, r6, lr}
        setHeight(height);
 80027a4:	4718      	bx	r3
	...

080027a8 <_ZN8touchgfx6WidgetC1Ev>:
 80027a8:	2200      	movs	r2, #0
 80027aa:	e9c0 2201 	strd	r2, r2, [r0, #4]
 80027ae:	e9c0 2203 	strd	r2, r2, [r0, #12]
          nextSibling(0),
 80027b2:	e9c0 2205 	strd	r2, r2, [r0, #20]
          cachedAbsX(0),
 80027b6:	e9c0 2207 	strd	r2, r2, [r0, #28]
          touchable(false),
 80027ba:	f44f 7280 	mov.w	r2, #256	; 0x100
 80027be:	8482      	strh	r2, [r0, #36]	; 0x24
class Widget : public Drawable
 80027c0:	4a01      	ldr	r2, [pc, #4]	; (80027c8 <_ZN8touchgfx6WidgetC1Ev+0x20>)
 80027c2:	6002      	str	r2, [r0, #0]
 80027c4:	4770      	bx	lr
 80027c6:	bf00      	nop
 80027c8:	0802bb80 	.word	0x0802bb80

080027cc <_ZN8touchgfx8TextAreaC1Ev>:
    TextArea()
 80027cc:	b510      	push	{r4, lr}
        : Widget(), typedText(TYPED_TEXT_INVALID), color(0), linespace(0), alpha(255), indentation(0), rotation(TEXT_ROTATE_0), wideTextAction(WIDE_TEXT_NONE), boundingArea()
 80027ce:	2226      	movs	r2, #38	; 0x26
    TextArea()
 80027d0:	4604      	mov	r4, r0
        : Widget(), typedText(TYPED_TEXT_INVALID), color(0), linespace(0), alpha(255), indentation(0), rotation(TEXT_ROTATE_0), wideTextAction(WIDE_TEXT_NONE), boundingArea()
 80027d2:	2100      	movs	r1, #0
 80027d4:	f027 fe3b 	bl	802a44e <memset>
 80027d8:	4620      	mov	r0, r4
 80027da:	f7ff ffe5 	bl	80027a8 <_ZN8touchgfx6WidgetC1Ev>
 80027de:	4b0a      	ldr	r3, [pc, #40]	; (8002808 <_ZN8touchgfx8TextAreaC1Ev+0x3c>)
 80027e0:	6023      	str	r3, [r4, #0]
        : typedTextId(id)
 80027e2:	4b0a      	ldr	r3, [pc, #40]	; (800280c <_ZN8touchgfx8TextAreaC1Ev+0x40>)
 80027e4:	62a3      	str	r3, [r4, #40]	; 0x28
 80027e6:	f64f 73ff 	movw	r3, #65535	; 0xffff
 80027ea:	85a3      	strh	r3, [r4, #44]	; 0x2c
 80027ec:	f44f 027f 	mov.w	r2, #16711680	; 0xff0000
 80027f0:	2300      	movs	r3, #0
 80027f2:	e9c4 320c 	strd	r3, r2, [r4, #48]	; 0x30
        : x(rectX), y(rectY), width(rectWidth), height(rectHeight)
 80027f6:	f04f 32ff 	mov.w	r2, #4294967295
              text(0)
 80027fa:	e9c4 2310 	strd	r2, r3, [r4, #64]	; 0x40
        : Widget(), typedText(TYPED_TEXT_INVALID), color(0), linespace(0), alpha(255), indentation(0), rotation(TEXT_ROTATE_0), wideTextAction(WIDE_TEXT_NONE), boundingArea()
 80027fe:	8723      	strh	r3, [r4, #56]	; 0x38
 8002800:	63e3      	str	r3, [r4, #60]	; 0x3c
    }
 8002802:	4620      	mov	r0, r4
 8002804:	bd10      	pop	{r4, pc}
 8002806:	bf00      	nop
 8002808:	0802e4b0 	.word	0x0802e4b0
 800280c:	0802bbe8 	.word	0x0802bbe8

08002810 <_ZN8touchgfx15ButtonWithLabel18updateTextPositionEv>:
        return typedTextId < numberOfTypedTexts;
 8002810:	4b1a      	ldr	r3, [pc, #104]	; (800287c <_ZN8touchgfx15ButtonWithLabel18updateTextPositionEv+0x6c>)
     * change you may need to reposition the label text by calling this function to keep the
     * text horizontally centered.
     *
     * @note The user code must call invalidate() in order to update the button on the display.
     */
    void updateTextPosition()
 8002812:	b573      	push	{r0, r1, r4, r5, r6, lr}
    {
        if (typedText.hasValidId())
 8002814:	881b      	ldrh	r3, [r3, #0]
 8002816:	8f01      	ldrh	r1, [r0, #56]	; 0x38
 8002818:	428b      	cmp	r3, r1
    void updateTextPosition()
 800281a:	4606      	mov	r6, r0
        if (typedText.hasValidId())
 800281c:	d92b      	bls.n	8002876 <_ZN8touchgfx15ButtonWithLabel18updateTextPositionEv+0x66>
        assert(typedTexts != 0 && "TypedText database has not been initialized.");
 800281e:	4b18      	ldr	r3, [pc, #96]	; (8002880 <_ZN8touchgfx15ButtonWithLabel18updateTextPositionEv+0x70>)
 8002820:	681b      	ldr	r3, [r3, #0]
 8002822:	b92b      	cbnz	r3, 8002830 <_ZN8touchgfx15ButtonWithLabel18updateTextPositionEv+0x20>
 8002824:	4b17      	ldr	r3, [pc, #92]	; (8002884 <_ZN8touchgfx15ButtonWithLabel18updateTextPositionEv+0x74>)
 8002826:	4a18      	ldr	r2, [pc, #96]	; (8002888 <_ZN8touchgfx15ButtonWithLabel18updateTextPositionEv+0x78>)
 8002828:	4818      	ldr	r0, [pc, #96]	; (800288c <_ZN8touchgfx15ButtonWithLabel18updateTextPositionEv+0x7c>)
 800282a:	216c      	movs	r1, #108	; 0x6c
 800282c:	f027 fc0a 	bl	802a044 <__assert_func>
        return fonts[typedTexts[typedTextId].fontIdx];
 8002830:	f813 2011 	ldrb.w	r2, [r3, r1, lsl #1]
 8002834:	4b16      	ldr	r3, [pc, #88]	; (8002890 <_ZN8touchgfx15ButtonWithLabel18updateTextPositionEv+0x80>)
 8002836:	681b      	ldr	r3, [r3, #0]
 8002838:	f853 5022 	ldr.w	r5, [r3, r2, lsl #2]
        return texts->getText(typedTextId);
 800283c:	4b15      	ldr	r3, [pc, #84]	; (8002894 <_ZN8touchgfx15ButtonWithLabel18updateTextPositionEv+0x84>)
 800283e:	6818      	ldr	r0, [r3, #0]
 8002840:	f005 fc94 	bl	800816c <_ZNK8touchgfx5Texts7getTextEt>
        {
            const Font* f = typedText.getFont();
            const Unicode::UnicodeChar* s = typedText.getText();
            textHeightIncludingSpacing = f->getHeight() * f->getNumberOfLines(s) + f->getSpacingAbove(s);
 8002844:	682b      	ldr	r3, [r5, #0]
 8002846:	9001      	str	r0, [sp, #4]
 8002848:	6b9b      	ldr	r3, [r3, #56]	; 0x38
 800284a:	4628      	mov	r0, r5
 800284c:	4798      	blx	r3
 800284e:	682b      	ldr	r3, [r5, #0]
 8002850:	9901      	ldr	r1, [sp, #4]
 8002852:	6c9b      	ldr	r3, [r3, #72]	; 0x48
 8002854:	4604      	mov	r4, r0
 8002856:	4628      	mov	r0, r5
 8002858:	4798      	blx	r3
 800285a:	682b      	ldr	r3, [r5, #0]
 800285c:	9901      	ldr	r1, [sp, #4]
 800285e:	6a5b      	ldr	r3, [r3, #36]	; 0x24
 8002860:	fb14 f400 	smulbb	r4, r4, r0
 8002864:	4628      	mov	r0, r5
 8002866:	4798      	blx	r3
 8002868:	b2a4      	uxth	r4, r4
 800286a:	1823      	adds	r3, r4, r0
 800286c:	b21b      	sxth	r3, r3
 800286e:	f8a6 3046 	strh.w	r3, [r6, #70]	; 0x46
        }
        else
        {
            textHeightIncludingSpacing = 0;
        }
    }
 8002872:	b002      	add	sp, #8
 8002874:	bd70      	pop	{r4, r5, r6, pc}
 8002876:	2300      	movs	r3, #0
 8002878:	e7f9      	b.n	800286e <_ZN8touchgfx15ButtonWithLabel18updateTextPositionEv+0x5e>
 800287a:	bf00      	nop
 800287c:	20012f80 	.word	0x20012f80
 8002880:	20012f7c 	.word	0x20012f7c
 8002884:	0802ba38 	.word	0x0802ba38
 8002888:	0802ba7a 	.word	0x0802ba7a
 800288c:	0802bab5 	.word	0x0802bab5
 8002890:	20012f84 	.word	0x20012f84
 8002894:	20012f88 	.word	0x20012f88

08002898 <_ZN19CalibrationViewBaseC1Ev>:
CalibrationViewBase::CalibrationViewBase() :
 8002898:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 800289c:	ed2d 8b06 	vpush	{d8-d10}
 80028a0:	4604      	mov	r4, r0
 80028a2:	b08d      	sub	sp, #52	; 0x34
    buttonCallback(this, &CalibrationViewBase::buttonCallbackHandler)
 80028a4:	46a3      	mov	fp, r4
template <class T>
class View : public Screen
{
public:
    View()
        : presenter(0)
 80028a6:	2500      	movs	r5, #0
 80028a8:	f014 f9c2 	bl	8016c30 <_ZN8touchgfx6ScreenC1Ev>
 80028ac:	4b66      	ldr	r3, [pc, #408]	; (8002a48 <_ZN19CalibrationViewBaseC1Ev+0x1b0>)
 80028ae:	63e5      	str	r5, [r4, #60]	; 0x3c
 80028b0:	f84b 3b40 	str.w	r3, [fp], #64
class Box : public Widget
{
public:
    /** Construct a new Box with a default alpha value of 255 (solid) */
    Box()
        : Widget(), alpha(255), color(0)
 80028b4:	2226      	movs	r2, #38	; 0x26
 80028b6:	4629      	mov	r1, r5
 80028b8:	4658      	mov	r0, fp
 80028ba:	f027 fdc8 	bl	802a44e <memset>
 80028be:	4658      	mov	r0, fp
 80028c0:	f7ff ff72 	bl	80027a8 <_ZN8touchgfx6WidgetC1Ev>
 80028c4:	f104 0a6c 	add.w	sl, r4, #108	; 0x6c
 80028c8:	26ff      	movs	r6, #255	; 0xff
 80028ca:	4b60      	ldr	r3, [pc, #384]	; (8002a4c <_ZN19CalibrationViewBaseC1Ev+0x1b4>)
 80028cc:	6423      	str	r3, [r4, #64]	; 0x40
     * @param   bmp (Optional) The bitmap to display.
     *
     * @see setBitmap
     */
    Image(const Bitmap& bmp = Bitmap())
        : Widget(), bitmap(bmp), alpha(255)
 80028ce:	2226      	movs	r2, #38	; 0x26
     * array.
     *
     * @param  id (Optional) The unique bitmap identifier.
     */
    Bitmap(const BitmapId id = BITMAP_INVALID)
        : bitmapId(id)
 80028d0:	f64f 73ff 	movw	r3, #65535	; 0xffff
 80028d4:	4629      	mov	r1, r5
 80028d6:	f884 6066 	strb.w	r6, [r4, #102]	; 0x66
 80028da:	4650      	mov	r0, sl
        : color(col)
 80028dc:	66a5      	str	r5, [r4, #104]	; 0x68
 80028de:	f8ad 3028 	strh.w	r3, [sp, #40]	; 0x28
 80028e2:	f027 fdb4 	bl	802a44e <memset>
 80028e6:	4650      	mov	r0, sl
 80028e8:	f7ff ff5e 	bl	80027a8 <_ZN8touchgfx6WidgetC1Ev>
 80028ec:	4b58      	ldr	r3, [pc, #352]	; (8002a50 <_ZN19CalibrationViewBaseC1Ev+0x1b8>)
 80028ee:	66e3      	str	r3, [r4, #108]	; 0x6c
 80028f0:	f8bd 3028 	ldrh.w	r3, [sp, #40]	; 0x28
 80028f4:	f8a4 3092 	strh.w	r3, [r4, #146]	; 0x92
    {
        Image::setBitmap(bmp);
 80028f8:	a90a      	add	r1, sp, #40	; 0x28
 80028fa:	4650      	mov	r0, sl
 80028fc:	f104 0998 	add.w	r9, r4, #152	; 0x98
        : Widget(), bitmap(bmp), alpha(255)
 8002900:	f884 6094 	strb.w	r6, [r4, #148]	; 0x94
        Image::setBitmap(bmp);
 8002904:	f010 f80b 	bl	801291e <_ZN8touchgfx5Image9setBitmapERKNS_6BitmapE>
        : TextArea()
 8002908:	4648      	mov	r0, r9
 800290a:	f7ff ff5f 	bl	80027cc <_ZN8touchgfx8TextAreaC1Ev>
 800290e:	f104 07e4 	add.w	r7, r4, #228	; 0xe4
        : TextAreaWithWildcardBase(), wc1(0)
 8002912:	4b50      	ldr	r3, [pc, #320]	; (8002a54 <_ZN19CalibrationViewBaseC1Ev+0x1bc>)
 8002914:	f8c4 3098 	str.w	r3, [r4, #152]	; 0x98
 8002918:	f8c4 50e0 	str.w	r5, [r4, #224]	; 0xe0
 800291c:	4638      	mov	r0, r7
 800291e:	f00e fec7 	bl	80116b0 <_ZN8touchgfx4LineC1Ev>
 8002922:	f504 73aa 	add.w	r3, r4, #340	; 0x154
     * Initializes a new instance of the PainterRGB565 class.
     *
     * @param  color (Optional) the color, default is black.
     */
    PainterRGB565(colortype color = 0)
        : AbstractPainterRGB565(), AbstractPainterColor(color)
 8002926:	4618      	mov	r0, r3
 8002928:	9303      	str	r3, [sp, #12]
 800292a:	f7fe fb8d 	bl	8001048 <_ZN8touchgfx21AbstractPainterRGB565C1Ev>
 800292e:	4b4a      	ldr	r3, [pc, #296]	; (8002a58 <_ZN19CalibrationViewBaseC1Ev+0x1c0>)
 8002930:	f8c4 3154 	str.w	r3, [r4, #340]	; 0x154
 8002934:	f504 78b4 	add.w	r8, r4, #360	; 0x168
 8002938:	3324      	adds	r3, #36	; 0x24
 800293a:	f8c4 315c 	str.w	r3, [r4, #348]	; 0x15c
     *
     * @param  color The color.
     */
    virtual void setColor(colortype color)
    {
        painterColor = color;
 800293e:	f8c4 5160 	str.w	r5, [r4, #352]	; 0x160
 8002942:	4640      	mov	r0, r8
 8002944:	f7ff ff42 	bl	80027cc <_ZN8touchgfx8TextAreaC1Ev>
 8002948:	f504 73d8 	add.w	r3, r4, #432	; 0x1b0
 800294c:	4618      	mov	r0, r3
 800294e:	ee08 3a10 	vmov	s16, r3
 8002952:	f7ff ff3b 	bl	80027cc <_ZN8touchgfx8TextAreaC1Ev>
 8002956:	f504 73fc 	add.w	r3, r4, #504	; 0x1f8
 800295a:	4618      	mov	r0, r3
 800295c:	ee08 3a90 	vmov	s17, r3
 8002960:	f7ff ff34 	bl	80027cc <_ZN8touchgfx8TextAreaC1Ev>
 8002964:	f504 7310 	add.w	r3, r4, #576	; 0x240
 8002968:	4618      	mov	r0, r3
 800296a:	ee09 3a10 	vmov	s18, r3
 800296e:	f010 f917 	bl	8012ba0 <_ZN8touchgfx15ButtonWithLabelC1Ev>
 8002972:	f504 7322 	add.w	r3, r4, #648	; 0x288
 8002976:	4618      	mov	r0, r3
 8002978:	ee09 3a90 	vmov	s19, r3
 800297c:	f010 f910 	bl	8012ba0 <_ZN8touchgfx15ButtonWithLabelC1Ev>
 8002980:	f504 7334 	add.w	r3, r4, #720	; 0x2d0
 8002984:	4618      	mov	r0, r3
 8002986:	ee0a 3a10 	vmov	s20, r3
 800298a:	f010 f909 	bl	8012ba0 <_ZN8touchgfx15ButtonWithLabelC1Ev>
        : pobject(pObject), pmemfun(pmemfun_1)
 800298e:	4a33      	ldr	r2, [pc, #204]	; (8002a5c <_ZN19CalibrationViewBaseC1Ev+0x1c4>)
 8002990:	f504 5380 	add.w	r3, r4, #4096	; 0x1000
 8002994:	e9c3 244c 	strd	r2, r4, [r3, #304]	; 0x130
 8002998:	4a31      	ldr	r2, [pc, #196]	; (8002a60 <_ZN19CalibrationViewBaseC1Ev+0x1c8>)
    touchgfx::CanvasWidgetRenderer::setupBuffer(canvasBuffer, CANVAS_BUFFER_SIZE);
 800299a:	f44f 6161 	mov.w	r1, #3600	; 0xe10
 800299e:	e9c3 254e 	strd	r2, r5, [r3, #312]	; 0x138
 80029a2:	f504 7048 	add.w	r0, r4, #800	; 0x320
 80029a6:	f010 ffb7 	bl	8013918 <_ZN8touchgfx20CanvasWidgetRenderer11setupBufferEPhj>
    __background.setPosition(0, 0, 240, 320);
 80029aa:	f44f 73a0 	mov.w	r3, #320	; 0x140
 80029ae:	462a      	mov	r2, r5
 80029b0:	4658      	mov	r0, fp
 80029b2:	9300      	str	r3, [sp, #0]
 80029b4:	4629      	mov	r1, r5
 80029b6:	23f0      	movs	r3, #240	; 0xf0
 80029b8:	f7ff fee2 	bl	8002780 <_ZN8touchgfx8Drawable11setPositionEssss>
     * @note Must not be called with a Drawable that was already added to the screen. If in doubt,
     *       call remove() first.
     */
    void add(Drawable& d)
    {
        container.add(d);
 80029bc:	1d26      	adds	r6, r4, #4
     *
     * @see getColor, Color::getColorFromRGB
     */
    void setColor(colortype newColor)
    {
        color = newColor;
 80029be:	f04f 437f 	mov.w	r3, #4278190080	; 0xff000000
 80029c2:	66a3      	str	r3, [r4, #104]	; 0x68
 80029c4:	4659      	mov	r1, fp
 80029c6:	4630      	mov	r0, r6
 80029c8:	f00d fa1a 	bl	800fe00 <_ZN8touchgfx9Container3addERNS_8DrawableE>
    image1.setXY(0, 0);
 80029cc:	462a      	mov	r2, r5
 80029ce:	4650      	mov	r0, sl
 80029d0:	4629      	mov	r1, r5
 80029d2:	f7ff fec8 	bl	8002766 <_ZN8touchgfx8Drawable5setXYEss>
 80029d6:	2309      	movs	r3, #9
    image1.setBitmap(touchgfx::Bitmap(BITMAP_BACKGROUND_2_RESIZED_4_ID));
 80029d8:	4650      	mov	r0, sl
 80029da:	a90a      	add	r1, sp, #40	; 0x28
 80029dc:	f8ad 3028 	strh.w	r3, [sp, #40]	; 0x28
 80029e0:	f00f ff9d 	bl	801291e <_ZN8touchgfx5Image9setBitmapERKNS_6BitmapE>
 80029e4:	4651      	mov	r1, sl
 80029e6:	4630      	mov	r0, r6
 80029e8:	f00d fa0a 	bl	800fe00 <_ZN8touchgfx9Container3addERNS_8DrawableE>
    textArea3_1.setXY(89, 308);
 80029ec:	f44f 729a 	mov.w	r2, #308	; 0x134
 80029f0:	2159      	movs	r1, #89	; 0x59
 80029f2:	4648      	mov	r0, r9
 80029f4:	f7ff feb7 	bl	8002766 <_ZN8touchgfx8Drawable5setXYEss>
        boundingArea = calculateBoundingArea();
 80029f8:	f8d4 3098 	ldr.w	r3, [r4, #152]	; 0x98
        linespace = space;
 80029fc:	f8a4 50cc 	strh.w	r5, [r4, #204]	; 0xcc
        boundingArea = calculateBoundingArea();
 8002a00:	f10d 0a10 	add.w	sl, sp, #16
        color = newColor;
 8002a04:	f04f 3bff 	mov.w	fp, #4294967295
        boundingArea = calculateBoundingArea();
 8002a08:	4650      	mov	r0, sl
 8002a0a:	f8d3 3084 	ldr.w	r3, [r3, #132]	; 0x84
        color = newColor;
 8002a0e:	f8c4 b0c8 	str.w	fp, [r4, #200]	; 0xc8
        boundingArea = calculateBoundingArea();
 8002a12:	4649      	mov	r1, r9
 8002a14:	4798      	blx	r3
 8002a16:	e89a 0007 	ldmia.w	sl, {r0, r1, r2}
 8002a1a:	f104 03d4 	add.w	r3, r4, #212	; 0xd4
 8002a1e:	e883 0007 	stmia.w	r3, {r0, r1, r2}
        assert(typedTexts != 0 && "TypedText database has not been initialized.");
 8002a22:	4b10      	ldr	r3, [pc, #64]	; (8002a64 <_ZN19CalibrationViewBaseC1Ev+0x1cc>)
 8002a24:	681b      	ldr	r3, [r3, #0]
    Unicode::snprintf(textArea3_1Buffer, TEXTAREA3_1_SIZE, "%s", touchgfx::TypedText(T___SINGLEUSE_I8KB).getText());
 8002a26:	f504 7a46 	add.w	sl, r4, #792	; 0x318
 8002a2a:	b92b      	cbnz	r3, 8002a38 <_ZN19CalibrationViewBaseC1Ev+0x1a0>
 8002a2c:	4b0e      	ldr	r3, [pc, #56]	; (8002a68 <_ZN19CalibrationViewBaseC1Ev+0x1d0>)
 8002a2e:	4a0f      	ldr	r2, [pc, #60]	; (8002a6c <_ZN19CalibrationViewBaseC1Ev+0x1d4>)
 8002a30:	2160      	movs	r1, #96	; 0x60
        assert(hasValidId() && "typedTextId larger than numberOfTypedTexts.");
 8002a32:	480f      	ldr	r0, [pc, #60]	; (8002a70 <_ZN19CalibrationViewBaseC1Ev+0x1d8>)
 8002a34:	f027 fb06 	bl	802a044 <__assert_func>
        return typedTextId < numberOfTypedTexts;
 8002a38:	4b0e      	ldr	r3, [pc, #56]	; (8002a74 <_ZN19CalibrationViewBaseC1Ev+0x1dc>)
        assert(hasValidId() && "typedTextId larger than numberOfTypedTexts.");
 8002a3a:	881b      	ldrh	r3, [r3, #0]
 8002a3c:	2b14      	cmp	r3, #20
 8002a3e:	d81d      	bhi.n	8002a7c <_ZN19CalibrationViewBaseC1Ev+0x1e4>
 8002a40:	4b0d      	ldr	r3, [pc, #52]	; (8002a78 <_ZN19CalibrationViewBaseC1Ev+0x1e0>)
 8002a42:	4a0a      	ldr	r2, [pc, #40]	; (8002a6c <_ZN19CalibrationViewBaseC1Ev+0x1d4>)
 8002a44:	2161      	movs	r1, #97	; 0x61
 8002a46:	e7f4      	b.n	8002a32 <_ZN19CalibrationViewBaseC1Ev+0x19a>
 8002a48:	0802bca0 	.word	0x0802bca0
 8002a4c:	0802e540 	.word	0x0802e540
 8002a50:	0802e708 	.word	0x0802e708
 8002a54:	0802bbf8 	.word	0x0802bbf8
 8002a58:	0802e274 	.word	0x0802e274
 8002a5c:	0802bc88 	.word	0x0802bc88
 8002a60:	0800271d 	.word	0x0800271d
 8002a64:	20012f7c 	.word	0x20012f7c
 8002a68:	0802ba38 	.word	0x0802ba38
 8002a6c:	0802bb3a 	.word	0x0802bb3a
 8002a70:	0802bab5 	.word	0x0802bab5
 8002a74:	20012f80 	.word	0x20012f80
 8002a78:	0802bafc 	.word	0x0802bafc
        return texts->getText(typedTextId);
 8002a7c:	4b93      	ldr	r3, [pc, #588]	; (8002ccc <_ZN19CalibrationViewBaseC1Ev+0x434>)
 8002a7e:	2114      	movs	r1, #20
 8002a80:	6818      	ldr	r0, [r3, #0]
 8002a82:	f005 fb73 	bl	800816c <_ZNK8touchgfx5Texts7getTextEt>
 8002a86:	4a92      	ldr	r2, [pc, #584]	; (8002cd0 <_ZN19CalibrationViewBaseC1Ev+0x438>)
 8002a88:	4603      	mov	r3, r0
 8002a8a:	2104      	movs	r1, #4
 8002a8c:	4650      	mov	r0, sl
 8002a8e:	f015 fdbf 	bl	8018610 <_ZN8touchgfx7Unicode8snprintfEPttPKcz>
    textArea3_1.resizeToCurrentText();
 8002a92:	4648      	mov	r0, r9
        wc1 = value;
 8002a94:	f8c4 a0e0 	str.w	sl, [r4, #224]	; 0xe0
 8002a98:	f00f fb46 	bl	8012128 <_ZN8touchgfx8TextArea19resizeToCurrentTextEv>
        : typedTextId(id)
 8002a9c:	4b8d      	ldr	r3, [pc, #564]	; (8002cd4 <_ZN19CalibrationViewBaseC1Ev+0x43c>)
 8002a9e:	930a      	str	r3, [sp, #40]	; 0x28
    textArea3_1.setTypedText(touchgfx::TypedText(T___SINGLEUSE_RBVT));
 8002aa0:	a90a      	add	r1, sp, #40	; 0x28
 8002aa2:	2315      	movs	r3, #21
 8002aa4:	4648      	mov	r0, r9
 8002aa6:	f8ad 302c 	strh.w	r3, [sp, #44]	; 0x2c
 8002aaa:	f00f fb5d 	bl	8012168 <_ZN8touchgfx8TextArea12setTypedTextERKNS_9TypedTextE>
 8002aae:	4649      	mov	r1, r9
 8002ab0:	4630      	mov	r0, r6
 8002ab2:	f00d f9a5 	bl	800fe00 <_ZN8touchgfx9Container3addERNS_8DrawableE>
    line1.setPosition(0, 50, 240, 10);
 8002ab6:	230a      	movs	r3, #10
 8002ab8:	9300      	str	r3, [sp, #0]
 8002aba:	2232      	movs	r2, #50	; 0x32
 8002abc:	23f0      	movs	r3, #240	; 0xf0
 8002abe:	4629      	mov	r1, r5
 8002ac0:	4638      	mov	r0, r7
 8002ac2:	f7ff fe5d 	bl	8002780 <_ZN8touchgfx8Drawable11setPositionEssss>
        canvasPainter = &painter;
 8002ac6:	9b03      	ldr	r3, [sp, #12]
 8002ac8:	f8c4 310c 	str.w	r3, [r4, #268]	; 0x10c
     * @note The area containing the Line is not invalidated.
     */
    template <typename T>
    void setStart(T x, T y)
    {
        setStart(CWRUtil::toQ5<T>(x), CWRUtil::toQ5<T>(y));
 8002acc:	22a0      	movs	r2, #160	; 0xa0
 8002ace:	4611      	mov	r1, r2
 8002ad0:	4638      	mov	r0, r7
 8002ad2:	f8c4 b160 	str.w	fp, [r4, #352]	; 0x160
    }

    virtual void setColor(colortype color)
    {
        AbstractPainterColor::setColor(color);
        color565 = LCD16bpp::getNativeColor(painterColor);
 8002ad6:	f8a4 b164 	strh.w	fp, [r4, #356]	; 0x164
 8002ada:	f00e feff 	bl	80118dc <_ZN8touchgfx4Line8setStartENS_7CWRUtil2Q5ES2_>
     * @note The area containing the Line is not invalidated.
     */
    template <typename T>
    void setEnd(T x, T y)
    {
        setEnd(CWRUtil::toQ5<T>(x), CWRUtil::toQ5<T>(y));
 8002ade:	22a0      	movs	r2, #160	; 0xa0
 8002ae0:	f44f 51eb 	mov.w	r1, #7520	; 0x1d60
 8002ae4:	4638      	mov	r0, r7
 8002ae6:	f00e ff04 	bl	80118f2 <_ZN8touchgfx4Line6setEndENS_7CWRUtil2Q5ES2_>
     *
     * @note The area containing the Line is not invalidated.
     */
    void setLineWidth(CWRUtil::Q5 widthQ5)
    {
        if (lineWidthQ5 == widthQ5)
 8002aea:	f8d4 3120 	ldr.w	r3, [r4, #288]	; 0x120
 8002aee:	2b20      	cmp	r3, #32
 8002af0:	d005      	beq.n	8002afe <_ZN19CalibrationViewBaseC1Ev+0x266>
        {
            return;
        }

        lineWidthQ5 = widthQ5;
 8002af2:	2320      	movs	r3, #32
 8002af4:	f8c4 3120 	str.w	r3, [r4, #288]	; 0x120

        updateCachedShape();
 8002af8:	4638      	mov	r0, r7
 8002afa:	f00e fdf9 	bl	80116f0 <_ZN8touchgfx4Line17updateCachedShapeEv>
    line1.setLineEndingStyle(touchgfx::Line::ROUND_CAP_ENDING);
 8002afe:	4638      	mov	r0, r7
 8002b00:	2101      	movs	r1, #1
 8002b02:	f00e ff01 	bl	8011908 <_ZN8touchgfx4Line18setLineEndingStyleENS0_17LINE_ENDING_STYLEE>
 8002b06:	4639      	mov	r1, r7
 8002b08:	4630      	mov	r0, r6
 8002b0a:	ad04      	add	r5, sp, #16
        color = newColor;
 8002b0c:	f04f 37ff 	mov.w	r7, #4294967295
 8002b10:	f00d f976 	bl	800fe00 <_ZN8touchgfx9Container3addERNS_8DrawableE>
        linespace = space;
 8002b14:	f04f 0a00 	mov.w	sl, #0
    textArea3.setXY(70, 60);
 8002b18:	223c      	movs	r2, #60	; 0x3c
 8002b1a:	4640      	mov	r0, r8
 8002b1c:	2146      	movs	r1, #70	; 0x46
 8002b1e:	f7ff fe22 	bl	8002766 <_ZN8touchgfx8Drawable5setXYEss>
        boundingArea = calculateBoundingArea();
 8002b22:	4641      	mov	r1, r8
 8002b24:	4628      	mov	r0, r5
        color = newColor;
 8002b26:	f8c4 7198 	str.w	r7, [r4, #408]	; 0x198
        linespace = space;
 8002b2a:	f8a4 a19c 	strh.w	sl, [r4, #412]	; 0x19c
        boundingArea = calculateBoundingArea();
 8002b2e:	f00f f881 	bl	8011c34 <_ZNK8touchgfx8TextArea21calculateBoundingAreaEv>
 8002b32:	e895 0007 	ldmia.w	r5, {r0, r1, r2}
 8002b36:	f108 033c 	add.w	r3, r8, #60	; 0x3c
 8002b3a:	e883 0007 	stmia.w	r3, {r0, r1, r2}
 8002b3e:	f8df 9194 	ldr.w	r9, [pc, #404]	; 8002cd4 <_ZN19CalibrationViewBaseC1Ev+0x43c>
 8002b42:	f8cd 9028 	str.w	r9, [sp, #40]	; 0x28
 8002b46:	230d      	movs	r3, #13
    textArea3.setTypedText(touchgfx::TypedText(T___SINGLEUSE_05WF));
 8002b48:	a90a      	add	r1, sp, #40	; 0x28
 8002b4a:	4640      	mov	r0, r8
 8002b4c:	f8ad 302c 	strh.w	r3, [sp, #44]	; 0x2c
 8002b50:	f00f fb0a 	bl	8012168 <_ZN8touchgfx8TextArea12setTypedTextERKNS_9TypedTextE>
 8002b54:	4641      	mov	r1, r8
 8002b56:	4630      	mov	r0, r6
 8002b58:	f00d f952 	bl	800fe00 <_ZN8touchgfx9Container3addERNS_8DrawableE>
    textArea2.setXY(69, 35);
 8002b5c:	ee18 0a10 	vmov	r0, s16
 8002b60:	2223      	movs	r2, #35	; 0x23
 8002b62:	2145      	movs	r1, #69	; 0x45
 8002b64:	f7ff fdff 	bl	8002766 <_ZN8touchgfx8Drawable5setXYEss>
 8002b68:	ee18 1a10 	vmov	r1, s16
 8002b6c:	4628      	mov	r0, r5
        color = newColor;
 8002b6e:	f8c4 71e0 	str.w	r7, [r4, #480]	; 0x1e0
        linespace = space;
 8002b72:	f8a4 a1e4 	strh.w	sl, [r4, #484]	; 0x1e4
        boundingArea = calculateBoundingArea();
 8002b76:	f00f f85d 	bl	8011c34 <_ZNK8touchgfx8TextArea21calculateBoundingAreaEv>
 8002b7a:	e895 0007 	ldmia.w	r5, {r0, r1, r2}
 8002b7e:	ee18 3a10 	vmov	r3, s16
 8002b82:	333c      	adds	r3, #60	; 0x3c
 8002b84:	e883 0007 	stmia.w	r3, {r0, r1, r2}
 8002b88:	234a      	movs	r3, #74	; 0x4a
    textArea2.setTypedText(touchgfx::TypedText(T___SINGLEUSE_Y01G));
 8002b8a:	ee18 0a10 	vmov	r0, s16
 8002b8e:	a90a      	add	r1, sp, #40	; 0x28
 8002b90:	f8ad 302c 	strh.w	r3, [sp, #44]	; 0x2c
 8002b94:	f8cd 9028 	str.w	r9, [sp, #40]	; 0x28
 8002b98:	f00f fae6 	bl	8012168 <_ZN8touchgfx8TextArea12setTypedTextERKNS_9TypedTextE>
 8002b9c:	ee18 1a10 	vmov	r1, s16
 8002ba0:	4630      	mov	r0, r6
 8002ba2:	f00d f92d 	bl	800fe00 <_ZN8touchgfx9Container3addERNS_8DrawableE>
    textArea1.setXY(54, 12);
 8002ba6:	ee18 0a90 	vmov	r0, s17
 8002baa:	220c      	movs	r2, #12
 8002bac:	2136      	movs	r1, #54	; 0x36
 8002bae:	f7ff fdda 	bl	8002766 <_ZN8touchgfx8Drawable5setXYEss>
 8002bb2:	ee18 1a90 	vmov	r1, s17
 8002bb6:	4628      	mov	r0, r5
        color = newColor;
 8002bb8:	f8c4 7228 	str.w	r7, [r4, #552]	; 0x228
        linespace = space;
 8002bbc:	f8a4 a22c 	strh.w	sl, [r4, #556]	; 0x22c
        boundingArea = calculateBoundingArea();
 8002bc0:	f00f f838 	bl	8011c34 <_ZNK8touchgfx8TextArea21calculateBoundingAreaEv>
 8002bc4:	e895 0007 	ldmia.w	r5, {r0, r1, r2}
 8002bc8:	ee18 3a90 	vmov	r3, s17
 8002bcc:	333c      	adds	r3, #60	; 0x3c
 8002bce:	e883 0007 	stmia.w	r3, {r0, r1, r2}
 8002bd2:	2349      	movs	r3, #73	; 0x49
    textArea1.setTypedText(touchgfx::TypedText(T___SINGLEUSE_2ABZ));
 8002bd4:	ee18 0a90 	vmov	r0, s17
 8002bd8:	a90a      	add	r1, sp, #40	; 0x28
 8002bda:	f8ad 302c 	strh.w	r3, [sp, #44]	; 0x2c
 8002bde:	f8cd 9028 	str.w	r9, [sp, #40]	; 0x28
 8002be2:	f00f fac1 	bl	8012168 <_ZN8touchgfx8TextArea12setTypedTextERKNS_9TypedTextE>
 8002be6:	ee18 1a90 	vmov	r1, s17
 8002bea:	4630      	mov	r0, r6
 8002bec:	f00d f908 	bl	800fe00 <_ZN8touchgfx9Container3addERNS_8DrawableE>
    buttonWithLabel3.setXY(33, 240);
 8002bf0:	ee19 0a10 	vmov	r0, s18
 8002bf4:	22f0      	movs	r2, #240	; 0xf0
 8002bf6:	2121      	movs	r1, #33	; 0x21
 8002bf8:	f7ff fdb5 	bl	8002766 <_ZN8touchgfx8Drawable5setXYEss>
 8002bfc:	f04f 0903 	mov.w	r9, #3
    buttonWithLabel3.setBitmaps(touchgfx::Bitmap(BITMAP_ALTERNATE_THEME_IMAGES_WIDGETS_BUTTON_REGULAR_HEIGHT_50_SMALL_ROUND_PRESSED_ID), touchgfx::Bitmap(BITMAP_ALTERNATE_THEME_IMAGES_WIDGETS_BUTTON_REGULAR_HEIGHT_50_SMALL_ROUND_NORMAL_ID));
 8002c00:	aa0a      	add	r2, sp, #40	; 0x28
 8002c02:	f04f 0802 	mov.w	r8, #2
 8002c06:	a909      	add	r1, sp, #36	; 0x24
 8002c08:	ee19 0a10 	vmov	r0, s18
 8002c0c:	f8ad 9024 	strh.w	r9, [sp, #36]	; 0x24
 8002c10:	f8ad 8028 	strh.w	r8, [sp, #40]	; 0x28
    buttonWithLabel3.setAction(buttonCallback);
 8002c14:	f504 5589 	add.w	r5, r4, #4384	; 0x1120
    buttonWithLabel3.setBitmaps(touchgfx::Bitmap(BITMAP_ALTERNATE_THEME_IMAGES_WIDGETS_BUTTON_REGULAR_HEIGHT_50_SMALL_ROUND_PRESSED_ID), touchgfx::Bitmap(BITMAP_ALTERNATE_THEME_IMAGES_WIDGETS_BUTTON_REGULAR_HEIGHT_50_SMALL_ROUND_NORMAL_ID));
 8002c18:	f00f fc8b 	bl	8012532 <_ZN8touchgfx6Button10setBitmapsERKNS_6BitmapES3_>
class TypedText
 8002c1c:	2348      	movs	r3, #72	; 0x48
 8002c1e:	f8a4 3278 	strh.w	r3, [r4, #632]	; 0x278
    buttonWithLabel3.setAction(buttonCallback);
 8002c22:	3510      	adds	r5, #16
        updateTextPosition();
 8002c24:	ee19 0a10 	vmov	r0, s18
 8002c28:	f7ff fdf2 	bl	8002810 <_ZN8touchgfx15ButtonWithLabel18updateTextPositionEv>
 8002c2c:	ee19 1a10 	vmov	r1, s18
 8002c30:	4630      	mov	r0, r6
        colorPressed = col;
 8002c32:	e9c4 779f 	strd	r7, r7, [r4, #636]	; 0x27c
     *
     * @see GenericCallback, handleClickEvent, ClickEvent
     */
    void setAction(GenericCallback<const AbstractButton&>& callback)
    {
        action = &callback;
 8002c36:	f8c4 5268 	str.w	r5, [r4, #616]	; 0x268
 8002c3a:	f00d f8e1 	bl	800fe00 <_ZN8touchgfx9Container3addERNS_8DrawableE>
    buttonWithLabel2.setXY(33, 170);
 8002c3e:	ee19 0a90 	vmov	r0, s19
 8002c42:	22aa      	movs	r2, #170	; 0xaa
 8002c44:	2121      	movs	r1, #33	; 0x21
 8002c46:	f7ff fd8e 	bl	8002766 <_ZN8touchgfx8Drawable5setXYEss>
    buttonWithLabel2.setBitmaps(touchgfx::Bitmap(BITMAP_ALTERNATE_THEME_IMAGES_WIDGETS_BUTTON_REGULAR_HEIGHT_50_SMALL_ROUND_PRESSED_ID), touchgfx::Bitmap(BITMAP_ALTERNATE_THEME_IMAGES_WIDGETS_BUTTON_REGULAR_HEIGHT_50_SMALL_ROUND_NORMAL_ID));
 8002c4a:	aa0a      	add	r2, sp, #40	; 0x28
 8002c4c:	a909      	add	r1, sp, #36	; 0x24
 8002c4e:	ee19 0a90 	vmov	r0, s19
 8002c52:	f8ad 9024 	strh.w	r9, [sp, #36]	; 0x24
 8002c56:	f8ad 8028 	strh.w	r8, [sp, #40]	; 0x28
 8002c5a:	f00f fc6a 	bl	8012532 <_ZN8touchgfx6Button10setBitmapsERKNS_6BitmapES3_>
 8002c5e:	2347      	movs	r3, #71	; 0x47
 8002c60:	f8a4 32c0 	strh.w	r3, [r4, #704]	; 0x2c0
        updateTextPosition();
 8002c64:	ee19 0a90 	vmov	r0, s19
 8002c68:	f7ff fdd2 	bl	8002810 <_ZN8touchgfx15ButtonWithLabel18updateTextPositionEv>
 8002c6c:	ee19 1a90 	vmov	r1, s19
 8002c70:	4630      	mov	r0, r6
        colorPressed = col;
 8002c72:	e9c4 77b1 	strd	r7, r7, [r4, #708]	; 0x2c4
 8002c76:	f8c4 52b0 	str.w	r5, [r4, #688]	; 0x2b0
 8002c7a:	f00d f8c1 	bl	800fe00 <_ZN8touchgfx9Container3addERNS_8DrawableE>
    buttonWithLabel1.setXY(33, 100);
 8002c7e:	ee1a 0a10 	vmov	r0, s20
 8002c82:	2264      	movs	r2, #100	; 0x64
 8002c84:	2121      	movs	r1, #33	; 0x21
 8002c86:	f7ff fd6e 	bl	8002766 <_ZN8touchgfx8Drawable5setXYEss>
    buttonWithLabel1.setBitmaps(touchgfx::Bitmap(BITMAP_ALTERNATE_THEME_IMAGES_WIDGETS_BUTTON_REGULAR_HEIGHT_50_SMALL_ROUND_PRESSED_ID), touchgfx::Bitmap(BITMAP_ALTERNATE_THEME_IMAGES_WIDGETS_BUTTON_REGULAR_HEIGHT_50_SMALL_ROUND_NORMAL_ID));
 8002c8a:	aa0a      	add	r2, sp, #40	; 0x28
 8002c8c:	a909      	add	r1, sp, #36	; 0x24
 8002c8e:	ee1a 0a10 	vmov	r0, s20
 8002c92:	f8ad 9024 	strh.w	r9, [sp, #36]	; 0x24
 8002c96:	f8ad 8028 	strh.w	r8, [sp, #40]	; 0x28
 8002c9a:	f00f fc4a 	bl	8012532 <_ZN8touchgfx6Button10setBitmapsERKNS_6BitmapES3_>
 8002c9e:	2346      	movs	r3, #70	; 0x46
        updateTextPosition();
 8002ca0:	ee1a 0a10 	vmov	r0, s20
 8002ca4:	f8a4 3308 	strh.w	r3, [r4, #776]	; 0x308
 8002ca8:	f7ff fdb2 	bl	8002810 <_ZN8touchgfx15ButtonWithLabel18updateTextPositionEv>
 8002cac:	4630      	mov	r0, r6
        colorPressed = col;
 8002cae:	e9c4 77c3 	strd	r7, r7, [r4, #780]	; 0x30c
 8002cb2:	ee1a 1a10 	vmov	r1, s20
 8002cb6:	f8c4 52f8 	str.w	r5, [r4, #760]	; 0x2f8
 8002cba:	f00d f8a1 	bl	800fe00 <_ZN8touchgfx9Container3addERNS_8DrawableE>
}
 8002cbe:	4620      	mov	r0, r4
 8002cc0:	b00d      	add	sp, #52	; 0x34
 8002cc2:	ecbd 8b06 	vpop	{d8-d10}
 8002cc6:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
 8002cca:	bf00      	nop
 8002ccc:	20012f88 	.word	0x20012f88
 8002cd0:	0802bb72 	.word	0x0802bb72
 8002cd4:	0802bbe8 	.word	0x0802bbe8

08002cd8 <_ZN24Calibration_HallViewBase11setupScreenEv>:
}

void Calibration_HallViewBase::setupScreen()
{

}
 8002cd8:	4770      	bx	lr

08002cda <_ZN8touchgfx8CallbackI24Calibration_HallViewBaseRKNS_14AbstractButtonEvvED1Ev>:
struct Callback<dest_type, T1, void, void> : public GenericCallback<T1>
 8002cda:	4770      	bx	lr

08002cdc <_ZN8touchgfx8CallbackI24Calibration_HallViewBaseRKNS_14AbstractButtonEvvE7executeES4_>:
    virtual void execute(T1 t1)
 8002cdc:	b430      	push	{r4, r5}
        (pobject->*pmemfun)(t1);
 8002cde:	68c2      	ldr	r2, [r0, #12]
 8002ce0:	6844      	ldr	r4, [r0, #4]
 8002ce2:	1055      	asrs	r5, r2, #1
    virtual void execute(T1 t1)
 8002ce4:	4603      	mov	r3, r0
        (pobject->*pmemfun)(t1);
 8002ce6:	eb04 0062 	add.w	r0, r4, r2, asr #1
 8002cea:	07d2      	lsls	r2, r2, #31
 8002cec:	bf48      	it	mi
 8002cee:	5962      	ldrmi	r2, [r4, r5]
 8002cf0:	689b      	ldr	r3, [r3, #8]
    }
 8002cf2:	bc30      	pop	{r4, r5}
        (pobject->*pmemfun)(t1);
 8002cf4:	bf48      	it	mi
 8002cf6:	58d3      	ldrmi	r3, [r2, r3]
 8002cf8:	4718      	bx	r3

08002cfa <_ZNK8touchgfx8CallbackI24Calibration_HallViewBaseRKNS_14AbstractButtonEvvE7isValidEv>:
        return (pobject != 0) && (pmemfun != 0);
 8002cfa:	6843      	ldr	r3, [r0, #4]
 8002cfc:	b12b      	cbz	r3, 8002d0a <_ZNK8touchgfx8CallbackI24Calibration_HallViewBaseRKNS_14AbstractButtonEvvE7isValidEv+0x10>
 8002cfe:	6883      	ldr	r3, [r0, #8]
 8002d00:	b92b      	cbnz	r3, 8002d0e <_ZNK8touchgfx8CallbackI24Calibration_HallViewBaseRKNS_14AbstractButtonEvvE7isValidEv+0x14>
 8002d02:	68c0      	ldr	r0, [r0, #12]
 8002d04:	f000 0001 	and.w	r0, r0, #1
 8002d08:	4770      	bx	lr
 8002d0a:	4618      	mov	r0, r3
 8002d0c:	4770      	bx	lr
 8002d0e:	2001      	movs	r0, #1
    }
 8002d10:	4770      	bx	lr

08002d12 <_ZN8touchgfx8CallbackI24Calibration_HallViewBaseRKNS_14AbstractButtonEvvED0Ev>:
struct Callback<dest_type, T1, void, void> : public GenericCallback<T1>
 8002d12:	b510      	push	{r4, lr}
 8002d14:	2110      	movs	r1, #16
 8002d16:	4604      	mov	r4, r0
 8002d18:	f026 fb81 	bl	802941e <_ZdlPvj>
 8002d1c:	4620      	mov	r0, r4
 8002d1e:	bd10      	pop	{r4, pc}

08002d20 <_ZN24Calibration_HallViewBaseD1Ev>:
Calibration_HallViewBase::~Calibration_HallViewBase()
 8002d20:	b510      	push	{r4, lr}
 8002d22:	4b03      	ldr	r3, [pc, #12]	; (8002d30 <_ZN24Calibration_HallViewBaseD1Ev+0x10>)
 8002d24:	6003      	str	r3, [r0, #0]
 8002d26:	4604      	mov	r4, r0
    touchgfx::CanvasWidgetRenderer::resetBuffer();
 8002d28:	f010 fe00 	bl	801392c <_ZN8touchgfx20CanvasWidgetRenderer11resetBufferEv>
}
 8002d2c:	4620      	mov	r0, r4
 8002d2e:	bd10      	pop	{r4, pc}
 8002d30:	0802bcec 	.word	0x0802bcec

08002d34 <_ZN24Calibration_HallViewBaseD0Ev>:
Calibration_HallViewBase::~Calibration_HallViewBase()
 8002d34:	b507      	push	{r0, r1, r2, lr}
 8002d36:	4b07      	ldr	r3, [pc, #28]	; (8002d54 <_ZN24Calibration_HallViewBaseD0Ev+0x20>)
 8002d38:	6003      	str	r3, [r0, #0]
 8002d3a:	9001      	str	r0, [sp, #4]
    touchgfx::CanvasWidgetRenderer::resetBuffer();
 8002d3c:	f010 fdf6 	bl	801392c <_ZN8touchgfx20CanvasWidgetRenderer11resetBufferEv>
}
 8002d40:	9801      	ldr	r0, [sp, #4]
 8002d42:	f241 015c 	movw	r1, #4188	; 0x105c
 8002d46:	f026 fb6a 	bl	802941e <_ZdlPvj>
 8002d4a:	9801      	ldr	r0, [sp, #4]
 8002d4c:	b003      	add	sp, #12
 8002d4e:	f85d fb04 	ldr.w	pc, [sp], #4
 8002d52:	bf00      	nop
 8002d54:	0802bcec 	.word	0x0802bcec

08002d58 <_ZN24Calibration_HallViewBase21buttonCallbackHandlerERKN8touchgfx14AbstractButtonE>:

void Calibration_HallViewBase::buttonCallbackHandler(const touchgfx::AbstractButton& src)
{
    if (&src == &buttonWithLabel3)
 8002d58:	3098      	adds	r0, #152	; 0x98
 8002d5a:	4288      	cmp	r0, r1
{
 8002d5c:	b508      	push	{r3, lr}
    if (&src == &buttonWithLabel3)
 8002d5e:	d105      	bne.n	8002d6c <_ZN24Calibration_HallViewBase21buttonCallbackHandlerERKN8touchgfx14AbstractButtonE+0x14>
    virtual ~Calibration_HallViewBase();
    virtual void setupScreen();

protected:
    FrontendApplication& application() {
        return *static_cast<FrontendApplication*>(touchgfx::Application::getInstance());
 8002d60:	f012 fae6 	bl	8015330 <_ZN8touchgfx11Application11getInstanceEv>
        //Interaction1
        //When buttonWithLabel3 clicked change screen to Calibration
        //Go to Calibration with screen transition towards West
        application().gotoCalibrationScreenWipeTransitionWest();
    }
}
 8002d64:	e8bd 4008 	ldmia.w	sp!, {r3, lr}
        application().gotoCalibrationScreenWipeTransitionWest();
 8002d68:	f000 beb4 	b.w	8003ad4 <_ZN23FrontendApplicationBase39gotoCalibrationScreenWipeTransitionWestEv>
}
 8002d6c:	bd08      	pop	{r3, pc}
	...

08002d70 <_ZN24Calibration_HallViewBaseC1Ev>:
Calibration_HallViewBase::Calibration_HallViewBase() :
 8002d70:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 8002d74:	ed2d 8b02 	vpush	{d8}
 8002d78:	4604      	mov	r4, r0
 8002d7a:	b08d      	sub	sp, #52	; 0x34
    buttonCallback(this, &Calibration_HallViewBase::buttonCallbackHandler)
 8002d7c:	46a1      	mov	r9, r4
 8002d7e:	2500      	movs	r5, #0
 8002d80:	f013 ff56 	bl	8016c30 <_ZN8touchgfx6ScreenC1Ev>
 8002d84:	4ba5      	ldr	r3, [pc, #660]	; (800301c <_ZN24Calibration_HallViewBaseC1Ev+0x2ac>)
 8002d86:	63e5      	str	r5, [r4, #60]	; 0x3c
 8002d88:	f849 3b40 	str.w	r3, [r9], #64
        : Widget(), alpha(255), color(0)
 8002d8c:	2226      	movs	r2, #38	; 0x26
 8002d8e:	4629      	mov	r1, r5
 8002d90:	4648      	mov	r0, r9
 8002d92:	f027 fb5c 	bl	802a44e <memset>
 8002d96:	4648      	mov	r0, r9
 8002d98:	f7ff fd06 	bl	80027a8 <_ZN8touchgfx6WidgetC1Ev>
 8002d9c:	f104 086c 	add.w	r8, r4, #108	; 0x6c
 8002da0:	26ff      	movs	r6, #255	; 0xff
 8002da2:	4b9f      	ldr	r3, [pc, #636]	; (8003020 <_ZN24Calibration_HallViewBaseC1Ev+0x2b0>)
 8002da4:	6423      	str	r3, [r4, #64]	; 0x40
        : Widget(), bitmap(bmp), alpha(255)
 8002da6:	2226      	movs	r2, #38	; 0x26
 8002da8:	f64f 73ff 	movw	r3, #65535	; 0xffff
 8002dac:	4629      	mov	r1, r5
 8002dae:	f884 6066 	strb.w	r6, [r4, #102]	; 0x66
 8002db2:	4640      	mov	r0, r8
 8002db4:	66a5      	str	r5, [r4, #104]	; 0x68
 8002db6:	f8ad 3028 	strh.w	r3, [sp, #40]	; 0x28
 8002dba:	f027 fb48 	bl	802a44e <memset>
 8002dbe:	4640      	mov	r0, r8
 8002dc0:	f7ff fcf2 	bl	80027a8 <_ZN8touchgfx6WidgetC1Ev>
 8002dc4:	4b97      	ldr	r3, [pc, #604]	; (8003024 <_ZN24Calibration_HallViewBaseC1Ev+0x2b4>)
 8002dc6:	66e3      	str	r3, [r4, #108]	; 0x6c
 8002dc8:	f8bd 3028 	ldrh.w	r3, [sp, #40]	; 0x28
 8002dcc:	f8a4 3092 	strh.w	r3, [r4, #146]	; 0x92
        Image::setBitmap(bmp);
 8002dd0:	a90a      	add	r1, sp, #40	; 0x28
 8002dd2:	f104 0b98 	add.w	fp, r4, #152	; 0x98
 8002dd6:	4640      	mov	r0, r8
        : Widget(), bitmap(bmp), alpha(255)
 8002dd8:	f884 6094 	strb.w	r6, [r4, #148]	; 0x94
        Image::setBitmap(bmp);
 8002ddc:	f00f fd9f 	bl	801291e <_ZN8touchgfx5Image9setBitmapERKNS_6BitmapE>
 8002de0:	4658      	mov	r0, fp
 8002de2:	f00f fedd 	bl	8012ba0 <_ZN8touchgfx15ButtonWithLabelC1Ev>
 8002de6:	f104 03e0 	add.w	r3, r4, #224	; 0xe0
 8002dea:	f504 7794 	add.w	r7, r4, #296	; 0x128
 8002dee:	4618      	mov	r0, r3
 8002df0:	ee08 3a90 	vmov	s17, r3
 8002df4:	f7ff fcea 	bl	80027cc <_ZN8touchgfx8TextAreaC1Ev>
 8002df8:	4638      	mov	r0, r7
 8002dfa:	f00e fc59 	bl	80116b0 <_ZN8touchgfx4LineC1Ev>
 8002dfe:	f504 73cc 	add.w	r3, r4, #408	; 0x198
        : AbstractPainterRGB565(), AbstractPainterColor(color)
 8002e02:	4618      	mov	r0, r3
 8002e04:	9303      	str	r3, [sp, #12]
 8002e06:	f7fe f91f 	bl	8001048 <_ZN8touchgfx21AbstractPainterRGB565C1Ev>
 8002e0a:	4b87      	ldr	r3, [pc, #540]	; (8003028 <_ZN24Calibration_HallViewBaseC1Ev+0x2b8>)
 8002e0c:	f8c4 3198 	str.w	r3, [r4, #408]	; 0x198
 8002e10:	3324      	adds	r3, #36	; 0x24
 8002e12:	f8c4 31a0 	str.w	r3, [r4, #416]	; 0x1a0
 8002e16:	f504 73d6 	add.w	r3, r4, #428	; 0x1ac
 8002e1a:	4618      	mov	r0, r3
 8002e1c:	f8c4 51a4 	str.w	r5, [r4, #420]	; 0x1a4
 8002e20:	f504 7afa 	add.w	sl, r4, #500	; 0x1f4
 8002e24:	ee08 3a10 	vmov	s16, r3
 8002e28:	f7ff fcd0 	bl	80027cc <_ZN8touchgfx8TextAreaC1Ev>
 8002e2c:	4650      	mov	r0, sl
 8002e2e:	f7ff fccd 	bl	80027cc <_ZN8touchgfx8TextAreaC1Ev>
        : pobject(pObject), pmemfun(pmemfun_1)
 8002e32:	4a7e      	ldr	r2, [pc, #504]	; (800302c <_ZN24Calibration_HallViewBaseC1Ev+0x2bc>)
 8002e34:	f504 5380 	add.w	r3, r4, #4096	; 0x1000
 8002e38:	e9c3 2413 	strd	r2, r4, [r3, #76]	; 0x4c
 8002e3c:	4a7c      	ldr	r2, [pc, #496]	; (8003030 <_ZN24Calibration_HallViewBaseC1Ev+0x2c0>)
    touchgfx::CanvasWidgetRenderer::setupBuffer(canvasBuffer, CANVAS_BUFFER_SIZE);
 8002e3e:	f44f 6161 	mov.w	r1, #3600	; 0xe10
 8002e42:	e9c3 2515 	strd	r2, r5, [r3, #84]	; 0x54
 8002e46:	f504 700f 	add.w	r0, r4, #572	; 0x23c
 8002e4a:	f010 fd65 	bl	8013918 <_ZN8touchgfx20CanvasWidgetRenderer11setupBufferEPhj>
    __background.setPosition(0, 0, 240, 320);
 8002e4e:	f44f 73a0 	mov.w	r3, #320	; 0x140
 8002e52:	462a      	mov	r2, r5
 8002e54:	4648      	mov	r0, r9
 8002e56:	9300      	str	r3, [sp, #0]
 8002e58:	4629      	mov	r1, r5
 8002e5a:	23f0      	movs	r3, #240	; 0xf0
 8002e5c:	f7ff fc90 	bl	8002780 <_ZN8touchgfx8Drawable11setPositionEssss>
 8002e60:	1d26      	adds	r6, r4, #4
        color = newColor;
 8002e62:	f04f 437f 	mov.w	r3, #4278190080	; 0xff000000
 8002e66:	66a3      	str	r3, [r4, #104]	; 0x68
 8002e68:	4649      	mov	r1, r9
 8002e6a:	4630      	mov	r0, r6
 8002e6c:	f00c ffc8 	bl	800fe00 <_ZN8touchgfx9Container3addERNS_8DrawableE>
    image1.setXY(0, 0);
 8002e70:	462a      	mov	r2, r5
 8002e72:	4640      	mov	r0, r8
 8002e74:	4629      	mov	r1, r5
 8002e76:	f7ff fc76 	bl	8002766 <_ZN8touchgfx8Drawable5setXYEss>
 8002e7a:	f04f 0909 	mov.w	r9, #9
    image1.setBitmap(touchgfx::Bitmap(BITMAP_BACKGROUND_2_RESIZED_4_ID));
 8002e7e:	4640      	mov	r0, r8
 8002e80:	a90a      	add	r1, sp, #40	; 0x28
 8002e82:	f8ad 9028 	strh.w	r9, [sp, #40]	; 0x28
 8002e86:	f00f fd4a 	bl	801291e <_ZN8touchgfx5Image9setBitmapERKNS_6BitmapE>
 8002e8a:	4641      	mov	r1, r8
 8002e8c:	4630      	mov	r0, r6
 8002e8e:	f00c ffb7 	bl	800fe00 <_ZN8touchgfx9Container3addERNS_8DrawableE>
    buttonWithLabel3.setXY(33, 257);
 8002e92:	4658      	mov	r0, fp
 8002e94:	f240 1201 	movw	r2, #257	; 0x101
 8002e98:	2121      	movs	r1, #33	; 0x21
 8002e9a:	f7ff fc64 	bl	8002766 <_ZN8touchgfx8Drawable5setXYEss>
 8002e9e:	2303      	movs	r3, #3
    buttonWithLabel3.setBitmaps(touchgfx::Bitmap(BITMAP_ALTERNATE_THEME_IMAGES_WIDGETS_BUTTON_REGULAR_HEIGHT_50_SMALL_ROUND_PRESSED_ID), touchgfx::Bitmap(BITMAP_ALTERNATE_THEME_IMAGES_WIDGETS_BUTTON_REGULAR_HEIGHT_50_SMALL_ROUND_NORMAL_ID));
 8002ea0:	aa0a      	add	r2, sp, #40	; 0x28
 8002ea2:	a909      	add	r1, sp, #36	; 0x24
 8002ea4:	4658      	mov	r0, fp
 8002ea6:	f8ad 3024 	strh.w	r3, [sp, #36]	; 0x24
 8002eaa:	2302      	movs	r3, #2
 8002eac:	f8ad 3028 	strh.w	r3, [sp, #40]	; 0x28
 8002eb0:	f00f fb3f 	bl	8012532 <_ZN8touchgfx6Button10setBitmapsERKNS_6BitmapES3_>
        updateTextPosition();
 8002eb4:	4658      	mov	r0, fp
 8002eb6:	f8a4 90d0 	strh.w	r9, [r4, #208]	; 0xd0
 8002eba:	f7ff fca9 	bl	8002810 <_ZN8touchgfx15ButtonWithLabel18updateTextPositionEv>
    buttonWithLabel3.setAction(buttonCallback);
 8002ebe:	f504 5382 	add.w	r3, r4, #4160	; 0x1040
 8002ec2:	330c      	adds	r3, #12
        color = col;
 8002ec4:	f04f 39ff 	mov.w	r9, #4294967295
 8002ec8:	f8c4 30c0 	str.w	r3, [r4, #192]	; 0xc0
 8002ecc:	4659      	mov	r1, fp
 8002ece:	4630      	mov	r0, r6
        colorPressed = col;
 8002ed0:	e9c4 9935 	strd	r9, r9, [r4, #212]	; 0xd4
 8002ed4:	f00c ff94 	bl	800fe00 <_ZN8touchgfx9Container3addERNS_8DrawableE>
 8002ed8:	f10d 0810 	add.w	r8, sp, #16
    textArea3.setXY(32, 60);
 8002edc:	223c      	movs	r2, #60	; 0x3c
 8002ede:	ee18 0a90 	vmov	r0, s17
 8002ee2:	2120      	movs	r1, #32
 8002ee4:	f7ff fc3f 	bl	8002766 <_ZN8touchgfx8Drawable5setXYEss>
 8002ee8:	ee18 1a90 	vmov	r1, s17
 8002eec:	4640      	mov	r0, r8
        color = newColor;
 8002eee:	f8c4 9110 	str.w	r9, [r4, #272]	; 0x110
        linespace = space;
 8002ef2:	f8a4 5114 	strh.w	r5, [r4, #276]	; 0x114
        boundingArea = calculateBoundingArea();
 8002ef6:	f00e fe9d 	bl	8011c34 <_ZNK8touchgfx8TextArea21calculateBoundingAreaEv>
 8002efa:	e898 0007 	ldmia.w	r8, {r0, r1, r2}
 8002efe:	f504 738e 	add.w	r3, r4, #284	; 0x11c
 8002f02:	e883 0007 	stmia.w	r3, {r0, r1, r2}
        : typedTextId(id)
 8002f06:	f8df b12c 	ldr.w	fp, [pc, #300]	; 8003034 <_ZN24Calibration_HallViewBaseC1Ev+0x2c4>
 8002f0a:	f8cd b028 	str.w	fp, [sp, #40]	; 0x28
 8002f0e:	230a      	movs	r3, #10
    textArea3.setTypedText(touchgfx::TypedText(T___SINGLEUSE_AQKY));
 8002f10:	ee18 0a90 	vmov	r0, s17
 8002f14:	a90a      	add	r1, sp, #40	; 0x28
 8002f16:	f8ad 302c 	strh.w	r3, [sp, #44]	; 0x2c
 8002f1a:	f00f f925 	bl	8012168 <_ZN8touchgfx8TextArea12setTypedTextERKNS_9TypedTextE>
 8002f1e:	ee18 1a90 	vmov	r1, s17
 8002f22:	4630      	mov	r0, r6
 8002f24:	f00c ff6c 	bl	800fe00 <_ZN8touchgfx9Container3addERNS_8DrawableE>
    line1.setPosition(0, 50, 240, 10);
 8002f28:	230a      	movs	r3, #10
 8002f2a:	9300      	str	r3, [sp, #0]
 8002f2c:	2232      	movs	r2, #50	; 0x32
 8002f2e:	23f0      	movs	r3, #240	; 0xf0
 8002f30:	4629      	mov	r1, r5
 8002f32:	4638      	mov	r0, r7
 8002f34:	f7ff fc24 	bl	8002780 <_ZN8touchgfx8Drawable11setPositionEssss>
 8002f38:	9b03      	ldr	r3, [sp, #12]
 8002f3a:	f8c4 3150 	str.w	r3, [r4, #336]	; 0x150
        setStart(CWRUtil::toQ5<T>(x), CWRUtil::toQ5<T>(y));
 8002f3e:	22a0      	movs	r2, #160	; 0xa0
 8002f40:	4611      	mov	r1, r2
 8002f42:	4638      	mov	r0, r7
 8002f44:	f8c4 91a4 	str.w	r9, [r4, #420]	; 0x1a4
        color565 = LCD16bpp::getNativeColor(painterColor);
 8002f48:	f8a4 91a8 	strh.w	r9, [r4, #424]	; 0x1a8
 8002f4c:	f00e fcc6 	bl	80118dc <_ZN8touchgfx4Line8setStartENS_7CWRUtil2Q5ES2_>
        setEnd(CWRUtil::toQ5<T>(x), CWRUtil::toQ5<T>(y));
 8002f50:	22a0      	movs	r2, #160	; 0xa0
 8002f52:	f44f 51eb 	mov.w	r1, #7520	; 0x1d60
 8002f56:	4638      	mov	r0, r7
 8002f58:	f00e fccb 	bl	80118f2 <_ZN8touchgfx4Line6setEndENS_7CWRUtil2Q5ES2_>
        if (lineWidthQ5 == widthQ5)
 8002f5c:	f8d4 3164 	ldr.w	r3, [r4, #356]	; 0x164
 8002f60:	2b20      	cmp	r3, #32
 8002f62:	d005      	beq.n	8002f70 <_ZN24Calibration_HallViewBaseC1Ev+0x200>
        lineWidthQ5 = widthQ5;
 8002f64:	2320      	movs	r3, #32
 8002f66:	f8c4 3164 	str.w	r3, [r4, #356]	; 0x164
        updateCachedShape();
 8002f6a:	4638      	mov	r0, r7
 8002f6c:	f00e fbc0 	bl	80116f0 <_ZN8touchgfx4Line17updateCachedShapeEv>
    line1.setLineEndingStyle(touchgfx::Line::ROUND_CAP_ENDING);
 8002f70:	4638      	mov	r0, r7
 8002f72:	2101      	movs	r1, #1
 8002f74:	f00e fcc8 	bl	8011908 <_ZN8touchgfx4Line18setLineEndingStyleENS0_17LINE_ENDING_STYLEE>
 8002f78:	4639      	mov	r1, r7
 8002f7a:	4630      	mov	r0, r6
 8002f7c:	f00c ff40 	bl	800fe00 <_ZN8touchgfx9Container3addERNS_8DrawableE>
        color = newColor;
 8002f80:	f04f 37ff 	mov.w	r7, #4294967295
    textArea2.setXY(69, 35);
 8002f84:	ee18 0a10 	vmov	r0, s16
 8002f88:	2223      	movs	r2, #35	; 0x23
        linespace = space;
 8002f8a:	2500      	movs	r5, #0
 8002f8c:	2145      	movs	r1, #69	; 0x45
 8002f8e:	f7ff fbea 	bl	8002766 <_ZN8touchgfx8Drawable5setXYEss>
        boundingArea = calculateBoundingArea();
 8002f92:	ee18 1a10 	vmov	r1, s16
 8002f96:	4640      	mov	r0, r8
        color = newColor;
 8002f98:	f8c4 71dc 	str.w	r7, [r4, #476]	; 0x1dc
        linespace = space;
 8002f9c:	f8a4 51e0 	strh.w	r5, [r4, #480]	; 0x1e0
        boundingArea = calculateBoundingArea();
 8002fa0:	f00e fe48 	bl	8011c34 <_ZNK8touchgfx8TextArea21calculateBoundingAreaEv>
 8002fa4:	e898 0007 	ldmia.w	r8, {r0, r1, r2}
 8002fa8:	ee18 3a10 	vmov	r3, s16
 8002fac:	333c      	adds	r3, #60	; 0x3c
 8002fae:	e883 0007 	stmia.w	r3, {r0, r1, r2}
 8002fb2:	230b      	movs	r3, #11
    textArea2.setTypedText(touchgfx::TypedText(T___SINGLEUSE_4V7Y));
 8002fb4:	ee18 0a10 	vmov	r0, s16
 8002fb8:	a90a      	add	r1, sp, #40	; 0x28
 8002fba:	f8ad 302c 	strh.w	r3, [sp, #44]	; 0x2c
 8002fbe:	f8cd b028 	str.w	fp, [sp, #40]	; 0x28
 8002fc2:	f00f f8d1 	bl	8012168 <_ZN8touchgfx8TextArea12setTypedTextERKNS_9TypedTextE>
 8002fc6:	ee18 1a10 	vmov	r1, s16
 8002fca:	4630      	mov	r0, r6
 8002fcc:	f00c ff18 	bl	800fe00 <_ZN8touchgfx9Container3addERNS_8DrawableE>
    textArea1.setXY(54, 12);
 8002fd0:	220c      	movs	r2, #12
 8002fd2:	4650      	mov	r0, sl
 8002fd4:	2136      	movs	r1, #54	; 0x36
 8002fd6:	f7ff fbc6 	bl	8002766 <_ZN8touchgfx8Drawable5setXYEss>
 8002fda:	4651      	mov	r1, sl
 8002fdc:	4640      	mov	r0, r8
        color = newColor;
 8002fde:	f8c4 7224 	str.w	r7, [r4, #548]	; 0x224
        linespace = space;
 8002fe2:	f8a4 5228 	strh.w	r5, [r4, #552]	; 0x228
        boundingArea = calculateBoundingArea();
 8002fe6:	f00e fe25 	bl	8011c34 <_ZNK8touchgfx8TextArea21calculateBoundingAreaEv>
 8002fea:	e898 0007 	ldmia.w	r8, {r0, r1, r2}
 8002fee:	f10a 033c 	add.w	r3, sl, #60	; 0x3c
 8002ff2:	e883 0007 	stmia.w	r3, {r0, r1, r2}
 8002ff6:	230c      	movs	r3, #12
    textArea1.setTypedText(touchgfx::TypedText(T___SINGLEUSE_TVZ0));
 8002ff8:	a90a      	add	r1, sp, #40	; 0x28
 8002ffa:	4650      	mov	r0, sl
 8002ffc:	f8ad 302c 	strh.w	r3, [sp, #44]	; 0x2c
 8003000:	f8cd b028 	str.w	fp, [sp, #40]	; 0x28
 8003004:	f00f f8b0 	bl	8012168 <_ZN8touchgfx8TextArea12setTypedTextERKNS_9TypedTextE>
 8003008:	4630      	mov	r0, r6
 800300a:	4651      	mov	r1, sl
 800300c:	f00c fef8 	bl	800fe00 <_ZN8touchgfx9Container3addERNS_8DrawableE>
}
 8003010:	4620      	mov	r0, r4
 8003012:	b00d      	add	sp, #52	; 0x34
 8003014:	ecbd 8b02 	vpop	{d8}
 8003018:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
 800301c:	0802bcec 	.word	0x0802bcec
 8003020:	0802e540 	.word	0x0802e540
 8003024:	0802e708 	.word	0x0802e708
 8003028:	0802e274 	.word	0x0802e274
 800302c:	0802bcd4 	.word	0x0802bcd4
 8003030:	08002d59 	.word	0x08002d59
 8003034:	0802bbe8 	.word	0x0802bbe8

08003038 <_ZN23Calibration_PadViewBase11setupScreenEv>:
}

void Calibration_PadViewBase::setupScreen()
{

}
 8003038:	4770      	bx	lr

0800303a <_ZN8touchgfx8CallbackI23Calibration_PadViewBaseRKNS_14AbstractButtonEvvED1Ev>:
struct Callback<dest_type, T1, void, void> : public GenericCallback<T1>
 800303a:	4770      	bx	lr

0800303c <_ZN8touchgfx8CallbackI23Calibration_PadViewBaseRKNS_14AbstractButtonEvvE7executeES4_>:
    virtual void execute(T1 t1)
 800303c:	b430      	push	{r4, r5}
        (pobject->*pmemfun)(t1);
 800303e:	68c2      	ldr	r2, [r0, #12]
 8003040:	6844      	ldr	r4, [r0, #4]
 8003042:	1055      	asrs	r5, r2, #1
    virtual void execute(T1 t1)
 8003044:	4603      	mov	r3, r0
        (pobject->*pmemfun)(t1);
 8003046:	eb04 0062 	add.w	r0, r4, r2, asr #1
 800304a:	07d2      	lsls	r2, r2, #31
 800304c:	bf48      	it	mi
 800304e:	5962      	ldrmi	r2, [r4, r5]
 8003050:	689b      	ldr	r3, [r3, #8]
    }
 8003052:	bc30      	pop	{r4, r5}
        (pobject->*pmemfun)(t1);
 8003054:	bf48      	it	mi
 8003056:	58d3      	ldrmi	r3, [r2, r3]
 8003058:	4718      	bx	r3

0800305a <_ZNK8touchgfx8CallbackI23Calibration_PadViewBaseRKNS_14AbstractButtonEvvE7isValidEv>:
        return (pobject != 0) && (pmemfun != 0);
 800305a:	6843      	ldr	r3, [r0, #4]
 800305c:	b12b      	cbz	r3, 800306a <_ZNK8touchgfx8CallbackI23Calibration_PadViewBaseRKNS_14AbstractButtonEvvE7isValidEv+0x10>
 800305e:	6883      	ldr	r3, [r0, #8]
 8003060:	b92b      	cbnz	r3, 800306e <_ZNK8touchgfx8CallbackI23Calibration_PadViewBaseRKNS_14AbstractButtonEvvE7isValidEv+0x14>
 8003062:	68c0      	ldr	r0, [r0, #12]
 8003064:	f000 0001 	and.w	r0, r0, #1
 8003068:	4770      	bx	lr
 800306a:	4618      	mov	r0, r3
 800306c:	4770      	bx	lr
 800306e:	2001      	movs	r0, #1
    }
 8003070:	4770      	bx	lr

08003072 <_ZN8touchgfx8CallbackI23Calibration_PadViewBaseRKNS_14AbstractButtonEvvED0Ev>:
struct Callback<dest_type, T1, void, void> : public GenericCallback<T1>
 8003072:	b510      	push	{r4, lr}
 8003074:	2110      	movs	r1, #16
 8003076:	4604      	mov	r4, r0
 8003078:	f026 f9d1 	bl	802941e <_ZdlPvj>
 800307c:	4620      	mov	r0, r4
 800307e:	bd10      	pop	{r4, pc}

08003080 <_ZN23Calibration_PadViewBaseD1Ev>:
Calibration_PadViewBase::~Calibration_PadViewBase()
 8003080:	b510      	push	{r4, lr}
 8003082:	4b03      	ldr	r3, [pc, #12]	; (8003090 <_ZN23Calibration_PadViewBaseD1Ev+0x10>)
 8003084:	6003      	str	r3, [r0, #0]
 8003086:	4604      	mov	r4, r0
    touchgfx::CanvasWidgetRenderer::resetBuffer();
 8003088:	f010 fc50 	bl	801392c <_ZN8touchgfx20CanvasWidgetRenderer11resetBufferEv>
}
 800308c:	4620      	mov	r0, r4
 800308e:	bd10      	pop	{r4, pc}
 8003090:	0802bd38 	.word	0x0802bd38

08003094 <_ZN23Calibration_PadViewBaseD0Ev>:
Calibration_PadViewBase::~Calibration_PadViewBase()
 8003094:	b507      	push	{r0, r1, r2, lr}
 8003096:	4b07      	ldr	r3, [pc, #28]	; (80030b4 <_ZN23Calibration_PadViewBaseD0Ev+0x20>)
 8003098:	6003      	str	r3, [r0, #0]
 800309a:	9001      	str	r0, [sp, #4]
    touchgfx::CanvasWidgetRenderer::resetBuffer();
 800309c:	f010 fc46 	bl	801392c <_ZN8touchgfx20CanvasWidgetRenderer11resetBufferEv>
}
 80030a0:	9801      	ldr	r0, [sp, #4]
 80030a2:	f241 015c 	movw	r1, #4188	; 0x105c
 80030a6:	f026 f9ba 	bl	802941e <_ZdlPvj>
 80030aa:	9801      	ldr	r0, [sp, #4]
 80030ac:	b003      	add	sp, #12
 80030ae:	f85d fb04 	ldr.w	pc, [sp], #4
 80030b2:	bf00      	nop
 80030b4:	0802bd38 	.word	0x0802bd38

080030b8 <_ZN23Calibration_PadViewBase21buttonCallbackHandlerERKN8touchgfx14AbstractButtonE>:

void Calibration_PadViewBase::buttonCallbackHandler(const touchgfx::AbstractButton& src)
{
    if (&src == &buttonWithLabel3)
 80030b8:	3098      	adds	r0, #152	; 0x98
 80030ba:	4288      	cmp	r0, r1
{
 80030bc:	b508      	push	{r3, lr}
    if (&src == &buttonWithLabel3)
 80030be:	d105      	bne.n	80030cc <_ZN23Calibration_PadViewBase21buttonCallbackHandlerERKN8touchgfx14AbstractButtonE+0x14>
    virtual ~Calibration_PadViewBase();
    virtual void setupScreen();

protected:
    FrontendApplication& application() {
        return *static_cast<FrontendApplication*>(touchgfx::Application::getInstance());
 80030c0:	f012 f936 	bl	8015330 <_ZN8touchgfx11Application11getInstanceEv>
        //Interaction1
        //When buttonWithLabel3 clicked change screen to Calibration
        //Go to Calibration with screen transition towards West
        application().gotoCalibrationScreenWipeTransitionWest();
    }
}
 80030c4:	e8bd 4008 	ldmia.w	sp!, {r3, lr}
        application().gotoCalibrationScreenWipeTransitionWest();
 80030c8:	f000 bd04 	b.w	8003ad4 <_ZN23FrontendApplicationBase39gotoCalibrationScreenWipeTransitionWestEv>
}
 80030cc:	bd08      	pop	{r3, pc}
	...

080030d0 <_ZN23Calibration_PadViewBaseC1Ev>:
Calibration_PadViewBase::Calibration_PadViewBase() :
 80030d0:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 80030d4:	ed2d 8b02 	vpush	{d8}
 80030d8:	4604      	mov	r4, r0
 80030da:	b08d      	sub	sp, #52	; 0x34
    buttonCallback(this, &Calibration_PadViewBase::buttonCallbackHandler)
 80030dc:	46a1      	mov	r9, r4
 80030de:	2500      	movs	r5, #0
 80030e0:	f013 fda6 	bl	8016c30 <_ZN8touchgfx6ScreenC1Ev>
 80030e4:	4ba5      	ldr	r3, [pc, #660]	; (800337c <_ZN23Calibration_PadViewBaseC1Ev+0x2ac>)
 80030e6:	63e5      	str	r5, [r4, #60]	; 0x3c
 80030e8:	f849 3b40 	str.w	r3, [r9], #64
        : Widget(), alpha(255), color(0)
 80030ec:	2226      	movs	r2, #38	; 0x26
 80030ee:	4629      	mov	r1, r5
 80030f0:	4648      	mov	r0, r9
 80030f2:	f027 f9ac 	bl	802a44e <memset>
 80030f6:	4648      	mov	r0, r9
 80030f8:	f7ff fb56 	bl	80027a8 <_ZN8touchgfx6WidgetC1Ev>
 80030fc:	f104 086c 	add.w	r8, r4, #108	; 0x6c
 8003100:	26ff      	movs	r6, #255	; 0xff
 8003102:	4b9f      	ldr	r3, [pc, #636]	; (8003380 <_ZN23Calibration_PadViewBaseC1Ev+0x2b0>)
 8003104:	6423      	str	r3, [r4, #64]	; 0x40
        : Widget(), bitmap(bmp), alpha(255)
 8003106:	2226      	movs	r2, #38	; 0x26
 8003108:	f64f 73ff 	movw	r3, #65535	; 0xffff
 800310c:	4629      	mov	r1, r5
 800310e:	f884 6066 	strb.w	r6, [r4, #102]	; 0x66
 8003112:	4640      	mov	r0, r8
 8003114:	66a5      	str	r5, [r4, #104]	; 0x68
 8003116:	f8ad 3028 	strh.w	r3, [sp, #40]	; 0x28
 800311a:	f027 f998 	bl	802a44e <memset>
 800311e:	4640      	mov	r0, r8
 8003120:	f7ff fb42 	bl	80027a8 <_ZN8touchgfx6WidgetC1Ev>
 8003124:	4b97      	ldr	r3, [pc, #604]	; (8003384 <_ZN23Calibration_PadViewBaseC1Ev+0x2b4>)
 8003126:	66e3      	str	r3, [r4, #108]	; 0x6c
 8003128:	f8bd 3028 	ldrh.w	r3, [sp, #40]	; 0x28
 800312c:	f8a4 3092 	strh.w	r3, [r4, #146]	; 0x92
        Image::setBitmap(bmp);
 8003130:	a90a      	add	r1, sp, #40	; 0x28
 8003132:	f104 0b98 	add.w	fp, r4, #152	; 0x98
 8003136:	4640      	mov	r0, r8
        : Widget(), bitmap(bmp), alpha(255)
 8003138:	f884 6094 	strb.w	r6, [r4, #148]	; 0x94
        Image::setBitmap(bmp);
 800313c:	f00f fbef 	bl	801291e <_ZN8touchgfx5Image9setBitmapERKNS_6BitmapE>
 8003140:	4658      	mov	r0, fp
 8003142:	f00f fd2d 	bl	8012ba0 <_ZN8touchgfx15ButtonWithLabelC1Ev>
 8003146:	f104 03e0 	add.w	r3, r4, #224	; 0xe0
 800314a:	f504 7794 	add.w	r7, r4, #296	; 0x128
 800314e:	4618      	mov	r0, r3
 8003150:	ee08 3a90 	vmov	s17, r3
 8003154:	f7ff fb3a 	bl	80027cc <_ZN8touchgfx8TextAreaC1Ev>
 8003158:	4638      	mov	r0, r7
 800315a:	f00e faa9 	bl	80116b0 <_ZN8touchgfx4LineC1Ev>
 800315e:	f504 73cc 	add.w	r3, r4, #408	; 0x198
        : AbstractPainterRGB565(), AbstractPainterColor(color)
 8003162:	4618      	mov	r0, r3
 8003164:	9303      	str	r3, [sp, #12]
 8003166:	f7fd ff6f 	bl	8001048 <_ZN8touchgfx21AbstractPainterRGB565C1Ev>
 800316a:	4b87      	ldr	r3, [pc, #540]	; (8003388 <_ZN23Calibration_PadViewBaseC1Ev+0x2b8>)
 800316c:	f8c4 3198 	str.w	r3, [r4, #408]	; 0x198
 8003170:	3324      	adds	r3, #36	; 0x24
 8003172:	f8c4 31a0 	str.w	r3, [r4, #416]	; 0x1a0
 8003176:	f504 73d6 	add.w	r3, r4, #428	; 0x1ac
 800317a:	4618      	mov	r0, r3
 800317c:	f8c4 51a4 	str.w	r5, [r4, #420]	; 0x1a4
 8003180:	f504 7afa 	add.w	sl, r4, #500	; 0x1f4
 8003184:	ee08 3a10 	vmov	s16, r3
 8003188:	f7ff fb20 	bl	80027cc <_ZN8touchgfx8TextAreaC1Ev>
 800318c:	4650      	mov	r0, sl
 800318e:	f7ff fb1d 	bl	80027cc <_ZN8touchgfx8TextAreaC1Ev>
        : pobject(pObject), pmemfun(pmemfun_1)
 8003192:	4a7e      	ldr	r2, [pc, #504]	; (800338c <_ZN23Calibration_PadViewBaseC1Ev+0x2bc>)
 8003194:	f504 5380 	add.w	r3, r4, #4096	; 0x1000
 8003198:	e9c3 2413 	strd	r2, r4, [r3, #76]	; 0x4c
 800319c:	4a7c      	ldr	r2, [pc, #496]	; (8003390 <_ZN23Calibration_PadViewBaseC1Ev+0x2c0>)
    touchgfx::CanvasWidgetRenderer::setupBuffer(canvasBuffer, CANVAS_BUFFER_SIZE);
 800319e:	f44f 6161 	mov.w	r1, #3600	; 0xe10
 80031a2:	e9c3 2515 	strd	r2, r5, [r3, #84]	; 0x54
 80031a6:	f504 700f 	add.w	r0, r4, #572	; 0x23c
 80031aa:	f010 fbb5 	bl	8013918 <_ZN8touchgfx20CanvasWidgetRenderer11setupBufferEPhj>
    __background.setPosition(0, 0, 240, 320);
 80031ae:	f44f 73a0 	mov.w	r3, #320	; 0x140
 80031b2:	462a      	mov	r2, r5
 80031b4:	4648      	mov	r0, r9
 80031b6:	9300      	str	r3, [sp, #0]
 80031b8:	4629      	mov	r1, r5
 80031ba:	23f0      	movs	r3, #240	; 0xf0
 80031bc:	f7ff fae0 	bl	8002780 <_ZN8touchgfx8Drawable11setPositionEssss>
 80031c0:	1d26      	adds	r6, r4, #4
        color = newColor;
 80031c2:	f04f 437f 	mov.w	r3, #4278190080	; 0xff000000
 80031c6:	66a3      	str	r3, [r4, #104]	; 0x68
 80031c8:	4649      	mov	r1, r9
 80031ca:	4630      	mov	r0, r6
 80031cc:	f00c fe18 	bl	800fe00 <_ZN8touchgfx9Container3addERNS_8DrawableE>
    image1.setXY(0, 0);
 80031d0:	462a      	mov	r2, r5
 80031d2:	4640      	mov	r0, r8
 80031d4:	4629      	mov	r1, r5
 80031d6:	f7ff fac6 	bl	8002766 <_ZN8touchgfx8Drawable5setXYEss>
 80031da:	2309      	movs	r3, #9
    image1.setBitmap(touchgfx::Bitmap(BITMAP_BACKGROUND_2_RESIZED_4_ID));
 80031dc:	4640      	mov	r0, r8
 80031de:	a90a      	add	r1, sp, #40	; 0x28
 80031e0:	f8ad 3028 	strh.w	r3, [sp, #40]	; 0x28
 80031e4:	f00f fb9b 	bl	801291e <_ZN8touchgfx5Image9setBitmapERKNS_6BitmapE>
 80031e8:	4641      	mov	r1, r8
 80031ea:	4630      	mov	r0, r6
 80031ec:	f00c fe08 	bl	800fe00 <_ZN8touchgfx9Container3addERNS_8DrawableE>
    buttonWithLabel3.setXY(33, 257);
 80031f0:	4658      	mov	r0, fp
 80031f2:	f240 1201 	movw	r2, #257	; 0x101
 80031f6:	2121      	movs	r1, #33	; 0x21
 80031f8:	f7ff fab5 	bl	8002766 <_ZN8touchgfx8Drawable5setXYEss>
 80031fc:	2303      	movs	r3, #3
    buttonWithLabel3.setBitmaps(touchgfx::Bitmap(BITMAP_ALTERNATE_THEME_IMAGES_WIDGETS_BUTTON_REGULAR_HEIGHT_50_SMALL_ROUND_PRESSED_ID), touchgfx::Bitmap(BITMAP_ALTERNATE_THEME_IMAGES_WIDGETS_BUTTON_REGULAR_HEIGHT_50_SMALL_ROUND_NORMAL_ID));
 80031fe:	aa0a      	add	r2, sp, #40	; 0x28
 8003200:	a909      	add	r1, sp, #36	; 0x24
 8003202:	4658      	mov	r0, fp
 8003204:	f8ad 3024 	strh.w	r3, [sp, #36]	; 0x24
 8003208:	2302      	movs	r3, #2
 800320a:	f8ad 3028 	strh.w	r3, [sp, #40]	; 0x28
 800320e:	f00f f990 	bl	8012532 <_ZN8touchgfx6Button10setBitmapsERKNS_6BitmapES3_>
class TypedText
 8003212:	230f      	movs	r3, #15
        updateTextPosition();
 8003214:	4658      	mov	r0, fp
 8003216:	f8a4 30d0 	strh.w	r3, [r4, #208]	; 0xd0
 800321a:	f7ff faf9 	bl	8002810 <_ZN8touchgfx15ButtonWithLabel18updateTextPositionEv>
    buttonWithLabel3.setAction(buttonCallback);
 800321e:	f504 5382 	add.w	r3, r4, #4160	; 0x1040
 8003222:	330c      	adds	r3, #12
        color = col;
 8003224:	f04f 39ff 	mov.w	r9, #4294967295
 8003228:	f8c4 30c0 	str.w	r3, [r4, #192]	; 0xc0
 800322c:	4659      	mov	r1, fp
 800322e:	4630      	mov	r0, r6
        colorPressed = col;
 8003230:	e9c4 9935 	strd	r9, r9, [r4, #212]	; 0xd4
 8003234:	f00c fde4 	bl	800fe00 <_ZN8touchgfx9Container3addERNS_8DrawableE>
 8003238:	f10d 0810 	add.w	r8, sp, #16
    textArea3.setXY(58, 60);
 800323c:	223c      	movs	r2, #60	; 0x3c
 800323e:	ee18 0a90 	vmov	r0, s17
 8003242:	213a      	movs	r1, #58	; 0x3a
 8003244:	f7ff fa8f 	bl	8002766 <_ZN8touchgfx8Drawable5setXYEss>
 8003248:	ee18 1a90 	vmov	r1, s17
 800324c:	4640      	mov	r0, r8
        color = newColor;
 800324e:	f8c4 9110 	str.w	r9, [r4, #272]	; 0x110
        linespace = space;
 8003252:	f8a4 5114 	strh.w	r5, [r4, #276]	; 0x114
        boundingArea = calculateBoundingArea();
 8003256:	f00e fced 	bl	8011c34 <_ZNK8touchgfx8TextArea21calculateBoundingAreaEv>
 800325a:	e898 0007 	ldmia.w	r8, {r0, r1, r2}
 800325e:	f504 738e 	add.w	r3, r4, #284	; 0x11c
 8003262:	e883 0007 	stmia.w	r3, {r0, r1, r2}
        : typedTextId(id)
 8003266:	f8df b12c 	ldr.w	fp, [pc, #300]	; 8003394 <_ZN23Calibration_PadViewBaseC1Ev+0x2c4>
 800326a:	f8cd b028 	str.w	fp, [sp, #40]	; 0x28
 800326e:	230e      	movs	r3, #14
    textArea3.setTypedText(touchgfx::TypedText(T___SINGLEUSE_X786));
 8003270:	ee18 0a90 	vmov	r0, s17
 8003274:	a90a      	add	r1, sp, #40	; 0x28
 8003276:	f8ad 302c 	strh.w	r3, [sp, #44]	; 0x2c
 800327a:	f00e ff75 	bl	8012168 <_ZN8touchgfx8TextArea12setTypedTextERKNS_9TypedTextE>
 800327e:	ee18 1a90 	vmov	r1, s17
 8003282:	4630      	mov	r0, r6
 8003284:	f00c fdbc 	bl	800fe00 <_ZN8touchgfx9Container3addERNS_8DrawableE>
    line1.setPosition(0, 50, 240, 10);
 8003288:	230a      	movs	r3, #10
 800328a:	9300      	str	r3, [sp, #0]
 800328c:	2232      	movs	r2, #50	; 0x32
 800328e:	23f0      	movs	r3, #240	; 0xf0
 8003290:	4629      	mov	r1, r5
 8003292:	4638      	mov	r0, r7
 8003294:	f7ff fa74 	bl	8002780 <_ZN8touchgfx8Drawable11setPositionEssss>
 8003298:	9b03      	ldr	r3, [sp, #12]
 800329a:	f8c4 3150 	str.w	r3, [r4, #336]	; 0x150
        setStart(CWRUtil::toQ5<T>(x), CWRUtil::toQ5<T>(y));
 800329e:	22a0      	movs	r2, #160	; 0xa0
 80032a0:	4611      	mov	r1, r2
 80032a2:	4638      	mov	r0, r7
 80032a4:	f8c4 91a4 	str.w	r9, [r4, #420]	; 0x1a4
        color565 = LCD16bpp::getNativeColor(painterColor);
 80032a8:	f8a4 91a8 	strh.w	r9, [r4, #424]	; 0x1a8
 80032ac:	f00e fb16 	bl	80118dc <_ZN8touchgfx4Line8setStartENS_7CWRUtil2Q5ES2_>
        setEnd(CWRUtil::toQ5<T>(x), CWRUtil::toQ5<T>(y));
 80032b0:	22a0      	movs	r2, #160	; 0xa0
 80032b2:	f44f 51eb 	mov.w	r1, #7520	; 0x1d60
 80032b6:	4638      	mov	r0, r7
 80032b8:	f00e fb1b 	bl	80118f2 <_ZN8touchgfx4Line6setEndENS_7CWRUtil2Q5ES2_>
        if (lineWidthQ5 == widthQ5)
 80032bc:	f8d4 3164 	ldr.w	r3, [r4, #356]	; 0x164
 80032c0:	2b20      	cmp	r3, #32
 80032c2:	d005      	beq.n	80032d0 <_ZN23Calibration_PadViewBaseC1Ev+0x200>
        lineWidthQ5 = widthQ5;
 80032c4:	2320      	movs	r3, #32
 80032c6:	f8c4 3164 	str.w	r3, [r4, #356]	; 0x164
        updateCachedShape();
 80032ca:	4638      	mov	r0, r7
 80032cc:	f00e fa10 	bl	80116f0 <_ZN8touchgfx4Line17updateCachedShapeEv>
    line1.setLineEndingStyle(touchgfx::Line::ROUND_CAP_ENDING);
 80032d0:	4638      	mov	r0, r7
 80032d2:	2101      	movs	r1, #1
 80032d4:	f00e fb18 	bl	8011908 <_ZN8touchgfx4Line18setLineEndingStyleENS0_17LINE_ENDING_STYLEE>
 80032d8:	4639      	mov	r1, r7
 80032da:	4630      	mov	r0, r6
 80032dc:	f00c fd90 	bl	800fe00 <_ZN8touchgfx9Container3addERNS_8DrawableE>
        color = newColor;
 80032e0:	f04f 37ff 	mov.w	r7, #4294967295
    textArea2.setXY(69, 35);
 80032e4:	ee18 0a10 	vmov	r0, s16
 80032e8:	2223      	movs	r2, #35	; 0x23
        linespace = space;
 80032ea:	2500      	movs	r5, #0
 80032ec:	2145      	movs	r1, #69	; 0x45
 80032ee:	f7ff fa3a 	bl	8002766 <_ZN8touchgfx8Drawable5setXYEss>
        boundingArea = calculateBoundingArea();
 80032f2:	ee18 1a10 	vmov	r1, s16
 80032f6:	4640      	mov	r0, r8
        color = newColor;
 80032f8:	f8c4 71dc 	str.w	r7, [r4, #476]	; 0x1dc
        linespace = space;
 80032fc:	f8a4 51e0 	strh.w	r5, [r4, #480]	; 0x1e0
        boundingArea = calculateBoundingArea();
 8003300:	f00e fc98 	bl	8011c34 <_ZNK8touchgfx8TextArea21calculateBoundingAreaEv>
 8003304:	e898 0007 	ldmia.w	r8, {r0, r1, r2}
 8003308:	ee18 3a10 	vmov	r3, s16
 800330c:	333c      	adds	r3, #60	; 0x3c
 800330e:	e883 0007 	stmia.w	r3, {r0, r1, r2}
 8003312:	2310      	movs	r3, #16
    textArea2.setTypedText(touchgfx::TypedText(T___SINGLEUSE_FJID));
 8003314:	ee18 0a10 	vmov	r0, s16
 8003318:	a90a      	add	r1, sp, #40	; 0x28
 800331a:	f8ad 302c 	strh.w	r3, [sp, #44]	; 0x2c
 800331e:	f8cd b028 	str.w	fp, [sp, #40]	; 0x28
 8003322:	f00e ff21 	bl	8012168 <_ZN8touchgfx8TextArea12setTypedTextERKNS_9TypedTextE>
 8003326:	ee18 1a10 	vmov	r1, s16
 800332a:	4630      	mov	r0, r6
 800332c:	f00c fd68 	bl	800fe00 <_ZN8touchgfx9Container3addERNS_8DrawableE>
    textArea1.setXY(54, 12);
 8003330:	220c      	movs	r2, #12
 8003332:	4650      	mov	r0, sl
 8003334:	2136      	movs	r1, #54	; 0x36
 8003336:	f7ff fa16 	bl	8002766 <_ZN8touchgfx8Drawable5setXYEss>
 800333a:	4651      	mov	r1, sl
 800333c:	4640      	mov	r0, r8
        color = newColor;
 800333e:	f8c4 7224 	str.w	r7, [r4, #548]	; 0x224
        linespace = space;
 8003342:	f8a4 5228 	strh.w	r5, [r4, #552]	; 0x228
        boundingArea = calculateBoundingArea();
 8003346:	f00e fc75 	bl	8011c34 <_ZNK8touchgfx8TextArea21calculateBoundingAreaEv>
 800334a:	e898 0007 	ldmia.w	r8, {r0, r1, r2}
 800334e:	f10a 033c 	add.w	r3, sl, #60	; 0x3c
 8003352:	e883 0007 	stmia.w	r3, {r0, r1, r2}
 8003356:	2311      	movs	r3, #17
    textArea1.setTypedText(touchgfx::TypedText(T___SINGLEUSE_EAAK));
 8003358:	a90a      	add	r1, sp, #40	; 0x28
 800335a:	4650      	mov	r0, sl
 800335c:	f8ad 302c 	strh.w	r3, [sp, #44]	; 0x2c
 8003360:	f8cd b028 	str.w	fp, [sp, #40]	; 0x28
 8003364:	f00e ff00 	bl	8012168 <_ZN8touchgfx8TextArea12setTypedTextERKNS_9TypedTextE>
 8003368:	4630      	mov	r0, r6
 800336a:	4651      	mov	r1, sl
 800336c:	f00c fd48 	bl	800fe00 <_ZN8touchgfx9Container3addERNS_8DrawableE>
}
 8003370:	4620      	mov	r0, r4
 8003372:	b00d      	add	sp, #52	; 0x34
 8003374:	ecbd 8b02 	vpop	{d8}
 8003378:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
 800337c:	0802bd38 	.word	0x0802bd38
 8003380:	0802e540 	.word	0x0802e540
 8003384:	0802e708 	.word	0x0802e708
 8003388:	0802e274 	.word	0x0802e274
 800338c:	0802bd20 	.word	0x0802bd20
 8003390:	080030b9 	.word	0x080030b9
 8003394:	0802bbe8 	.word	0x0802bbe8

08003398 <_ZN8touchgfx11Application19changeToStartScreenEv>:
     *       this is explicitly done in your
     *       FrontendApplication::changeToStartScreen().
     */
    virtual void changeToStartScreen()
    {
    }
 8003398:	4770      	bx	lr

0800339a <_ZN8touchgfx11Application15appSwitchScreenEh>:
     * @param screenId An id that maps to the desired screen.
     */
    virtual void appSwitchScreen(uint8_t screenId)
    {
        (void)screenId; // Unused variable
    }
 800339a:	4770      	bx	lr

0800339c <_ZN8touchgfx11Application13requestRedrawERNS_4RectE>:
     *
     * @param [in,out] rect The Rect that must be redrawn.
     */
    virtual void requestRedraw(Rect& rect)
    {
        redraw = rect;
 800339c:	f500 7398 	add.w	r3, r0, #304	; 0x130
 80033a0:	6808      	ldr	r0, [r1, #0]
 80033a2:	6849      	ldr	r1, [r1, #4]
 80033a4:	c303      	stmia	r3!, {r0, r1}
    }
 80033a6:	4770      	bx	lr

080033a8 <_ZN8touchgfx10Transition8tearDownEv>:
     * Tears down the Animation. Called before the destructor is called, when the
     * application changes the transition.
     */
    virtual void tearDown()
    {
    }
 80033a8:	4770      	bx	lr

080033aa <_ZN8touchgfx10Transition4initEv>:
     * Initializes the transition. Called after the constructor is called, when the
     * application changes the transition.
     */
    virtual void init()
    {
    }
 80033aa:	4770      	bx	lr

080033ac <_ZN8touchgfx10Transition18setScreenContainerERNS_9ContainerE>:
     *
     * @param [in] cont The Container the transition should have access to.
     */
    virtual void setScreenContainer(Container& cont)
    {
        screenContainer = &cont;
 80033ac:	6041      	str	r1, [r0, #4]
    }
 80033ae:	4770      	bx	lr

080033b0 <_ZNK8touchgfx10Transition13FullSolidRect12getSolidRectEv>:
     * A Widget that reports solid and but does not draw anything.
     */
    class FullSolidRect : public Widget
    {
    public:
        virtual Rect getSolidRect() const
 80033b0:	b510      	push	{r4, lr}
        : x(rectX), y(rectY), width(rectWidth), height(rectHeight)
 80033b2:	2200      	movs	r2, #0
        {
            return Rect(0, 0, rect.width, rect.height);
 80033b4:	f9b1 4008 	ldrsh.w	r4, [r1, #8]
 80033b8:	f9b1 100a 	ldrsh.w	r1, [r1, #10]
 80033bc:	8002      	strh	r2, [r0, #0]
 80033be:	8042      	strh	r2, [r0, #2]
 80033c0:	8084      	strh	r4, [r0, #4]
 80033c2:	80c1      	strh	r1, [r0, #6]
        }
 80033c4:	bd10      	pop	{r4, pc}

080033c6 <_ZNK8touchgfx10Transition13FullSolidRect4drawERKNS_4RectE>:

        virtual void draw(const Rect& area) const
        {
        }
 80033c6:	4770      	bx	lr

080033c8 <_ZN23FrontendApplicationBaseD1Ev>:

class FrontendApplicationBase : public touchgfx::MVPApplication
{
public:
    FrontendApplicationBase(Model& m, FrontendHeap& heap);
    virtual ~FrontendApplicationBase() { }
 80033c8:	4770      	bx	lr
	...

080033cc <_ZN23FrontendApplicationBase19changeToStartScreenEv>:
 *
 * @note The member function to call must return void. The function can have zero, one, two or
 *       three arguments of any type.
 */
template <class dest_type>
struct Callback<dest_type, void, void, void> : public GenericCallback<>
 80033cc:	4b06      	ldr	r3, [pc, #24]	; (80033e8 <_ZN23FrontendApplicationBase19changeToStartScreenEv+0x1c>)
 80033ce:	f8c0 314c 	str.w	r3, [r0, #332]	; 0x14c
 80033d2:	2300      	movs	r3, #0
 80033d4:	f8c0 3150 	str.w	r3, [r0, #336]	; 0x150
// Main_Menu

void FrontendApplicationBase::gotoMain_MenuScreenNoTransition()
{
    transitionCallback = touchgfx::Callback<FrontendApplicationBase>(this, &FrontendApplicationBase::gotoMain_MenuScreenNoTransitionImpl);
    pendingScreenTransitionCallback = &transitionCallback;
 80033d8:	f500 73a2 	add.w	r3, r0, #324	; 0x144
 80033dc:	f8c0 0148 	str.w	r0, [r0, #328]	; 0x148
 80033e0:	f8c0 3140 	str.w	r3, [r0, #320]	; 0x140

    virtual void changeToStartScreen()
    {
        gotoMain_MenuScreenNoTransition();
    }
 80033e4:	4770      	bx	lr
 80033e6:	bf00      	nop
 80033e8:	08003789 	.word	0x08003789

080033ec <_ZN8touchgfx12NoTransition15handleTickEventEv>:
{
public:
    /** Indicates that the transition is done after the first tick. */
    virtual void handleTickEvent()
    {
        done = true;
 80033ec:	2301      	movs	r3, #1
 80033ee:	7203      	strb	r3, [r0, #8]
    }
 80033f0:	4770      	bx	lr

080033f2 <_ZN8touchgfx10Transition13FullSolidRectD1Ev>:
    class FullSolidRect : public Widget
 80033f2:	4770      	bx	lr

080033f4 <_ZN8touchgfx14WipeTransitionILNS_9DirectionE3EED1Ev>:
 * the given direction.  This transition only draws the pixels in the
 * framebuffer once, and never moves any pixels. It is therefore very
 * useful on MCUs with limited performance.
 */
template <Direction templateDirection>
class WipeTransition : public Transition
 80033f4:	4770      	bx	lr

080033f6 <_ZN8touchgfx14WipeTransitionILNS_9DirectionE2EED1Ev>:
 80033f6:	4770      	bx	lr

080033f8 <_ZN8touchgfx12NoTransitionD1Ev>:
class NoTransition : public Transition
 80033f8:	4770      	bx	lr

080033fa <_ZN8touchgfx8CallbackI23FrontendApplicationBasevvvED1Ev>:
 80033fa:	4770      	bx	lr

080033fc <_ZN8touchgfx14WipeTransitionILNS_9DirectionE3EE8tearDownEv>:
            // Synchronize framebuffers
            Application::getInstance()->copyInvalidatedAreasFromTFTToClientBuffer();
        }
    }

    virtual void tearDown()
 80033fc:	4601      	mov	r1, r0
    {
        screenContainer->remove(solid);
 80033fe:	6840      	ldr	r0, [r0, #4]
 8003400:	6803      	ldr	r3, [r0, #0]
 8003402:	3110      	adds	r1, #16
 8003404:	6e5b      	ldr	r3, [r3, #100]	; 0x64
 8003406:	4718      	bx	r3

08003408 <_ZN8touchgfx14WipeTransitionILNS_9DirectionE3EE4initEv>:
    }

    virtual void init()
 8003408:	4601      	mov	r1, r0
    {
        Transition::init();
        // Add the solid (and not-drawing-anything) widget on top to cover the other widgets
        screenContainer->add(solid);
 800340a:	6840      	ldr	r0, [r0, #4]
 800340c:	6803      	ldr	r3, [r0, #0]
 800340e:	3110      	adds	r1, #16
 8003410:	6e1b      	ldr	r3, [r3, #96]	; 0x60
 8003412:	4718      	bx	r3

08003414 <_ZN8touchgfx14WipeTransitionILNS_9DirectionE3EE10invalidateEv>:
     * Wipe transition does not require an invalidation. Invalidation
     * is handled by the class. Do no invalidation initially.
     */
    virtual void invalidate()
    {
    }
 8003414:	4770      	bx	lr

08003416 <_ZN8touchgfx14WipeTransitionILNS_9DirectionE2EE8tearDownEv>:
    virtual void tearDown()
 8003416:	4601      	mov	r1, r0
        screenContainer->remove(solid);
 8003418:	6840      	ldr	r0, [r0, #4]
 800341a:	6803      	ldr	r3, [r0, #0]
 800341c:	3110      	adds	r1, #16
 800341e:	6e5b      	ldr	r3, [r3, #100]	; 0x64
 8003420:	4718      	bx	r3

08003422 <_ZN8touchgfx14WipeTransitionILNS_9DirectionE2EE4initEv>:
    virtual void init()
 8003422:	4601      	mov	r1, r0
        screenContainer->add(solid);
 8003424:	6840      	ldr	r0, [r0, #4]
 8003426:	6803      	ldr	r3, [r0, #0]
 8003428:	3110      	adds	r1, #16
 800342a:	6e1b      	ldr	r3, [r3, #96]	; 0x60
 800342c:	4718      	bx	r3

0800342e <_ZN8touchgfx14WipeTransitionILNS_9DirectionE2EE10invalidateEv>:
    }
 800342e:	4770      	bx	lr

08003430 <_ZN8touchgfx8CallbackI23FrontendApplicationBasevvvE7executeEv>:

    /**
     * Calls the member function. Do not call execute unless isValid() returns true (ie. a
     * pointer to the object and the function has been set).
     */
    virtual void execute()
 8003430:	b410      	push	{r4}
    {
        (pobject->*pmemfun)();
 8003432:	68c2      	ldr	r2, [r0, #12]
 8003434:	6841      	ldr	r1, [r0, #4]
 8003436:	1054      	asrs	r4, r2, #1
    virtual void execute()
 8003438:	4603      	mov	r3, r0
        (pobject->*pmemfun)();
 800343a:	eb01 0062 	add.w	r0, r1, r2, asr #1
 800343e:	07d2      	lsls	r2, r2, #31
 8003440:	bf48      	it	mi
 8003442:	590a      	ldrmi	r2, [r1, r4]
 8003444:	689b      	ldr	r3, [r3, #8]
    }
 8003446:	f85d 4b04 	ldr.w	r4, [sp], #4
        (pobject->*pmemfun)();
 800344a:	bf48      	it	mi
 800344c:	58d3      	ldrmi	r3, [r2, r3]
 800344e:	4718      	bx	r3

08003450 <_ZNK8touchgfx8CallbackI23FrontendApplicationBasevvvE7isValidEv>:
     *
     * @return true If the callback is valid (i.e. safe to call execute).
     */
    virtual bool isValid() const
    {
        return (pobject != 0) && (pmemfun != 0);
 8003450:	6843      	ldr	r3, [r0, #4]
 8003452:	b12b      	cbz	r3, 8003460 <_ZNK8touchgfx8CallbackI23FrontendApplicationBasevvvE7isValidEv+0x10>
 8003454:	6883      	ldr	r3, [r0, #8]
 8003456:	b92b      	cbnz	r3, 8003464 <_ZNK8touchgfx8CallbackI23FrontendApplicationBasevvvE7isValidEv+0x14>
 8003458:	68c0      	ldr	r0, [r0, #12]
 800345a:	f000 0001 	and.w	r0, r0, #1
 800345e:	4770      	bx	lr
 8003460:	4618      	mov	r0, r3
 8003462:	4770      	bx	lr
 8003464:	2001      	movs	r0, #1
    }
 8003466:	4770      	bx	lr

08003468 <_ZN8touchgfx12NoTransitionD0Ev>:
 8003468:	b510      	push	{r4, lr}
 800346a:	210c      	movs	r1, #12
 800346c:	4604      	mov	r4, r0
 800346e:	f025 ffd6 	bl	802941e <_ZdlPvj>
 8003472:	4620      	mov	r0, r4
 8003474:	bd10      	pop	{r4, pc}

08003476 <_ZN8touchgfx8CallbackI23FrontendApplicationBasevvvED0Ev>:
struct Callback<dest_type, void, void, void> : public GenericCallback<>
 8003476:	b510      	push	{r4, lr}
 8003478:	2110      	movs	r1, #16
 800347a:	4604      	mov	r4, r0
 800347c:	f025 ffcf 	bl	802941e <_ZdlPvj>
 8003480:	4620      	mov	r0, r4
 8003482:	bd10      	pop	{r4, pc}

08003484 <_ZN23FrontendApplicationBaseD0Ev>:
    virtual ~FrontendApplicationBase() { }
 8003484:	b510      	push	{r4, lr}
 8003486:	f44f 71ae 	mov.w	r1, #348	; 0x15c
 800348a:	4604      	mov	r4, r0
 800348c:	f025 ffc7 	bl	802941e <_ZdlPvj>
 8003490:	4620      	mov	r0, r4
 8003492:	bd10      	pop	{r4, pc}

08003494 <_ZN8touchgfx14WipeTransitionILNS_9DirectionE3EED0Ev>:
class WipeTransition : public Transition
 8003494:	b510      	push	{r4, lr}
 8003496:	2138      	movs	r1, #56	; 0x38
 8003498:	4604      	mov	r4, r0
 800349a:	f025 ffc0 	bl	802941e <_ZdlPvj>
 800349e:	4620      	mov	r0, r4
 80034a0:	bd10      	pop	{r4, pc}

080034a2 <_ZN8touchgfx10Transition13FullSolidRectD0Ev>:
 80034a2:	b510      	push	{r4, lr}
 80034a4:	2128      	movs	r1, #40	; 0x28
 80034a6:	4604      	mov	r4, r0
 80034a8:	f025 ffb9 	bl	802941e <_ZdlPvj>
 80034ac:	4620      	mov	r0, r4
 80034ae:	bd10      	pop	{r4, pc}

080034b0 <_ZN8touchgfx14WipeTransitionILNS_9DirectionE2EED0Ev>:
 80034b0:	b510      	push	{r4, lr}
 80034b2:	2138      	movs	r1, #56	; 0x38
 80034b4:	4604      	mov	r4, r0
 80034b6:	f025 ffb2 	bl	802941e <_ZdlPvj>
 80034ba:	4620      	mov	r0, r4
 80034bc:	bd10      	pop	{r4, pc}

080034be <_ZN8touchgfx10Transition10invalidateEv>:
    virtual void invalidate()
 80034be:	b510      	push	{r4, lr}
        Application::getInstance()->invalidate();
 80034c0:	f011 ff36 	bl	8015330 <_ZN8touchgfx11Application11getInstanceEv>
 80034c4:	6803      	ldr	r3, [r0, #0]
    }
 80034c6:	e8bd 4010 	ldmia.w	sp!, {r4, lr}
        Application::getInstance()->invalidate();
 80034ca:	6bdb      	ldr	r3, [r3, #60]	; 0x3c
 80034cc:	4718      	bx	r3
	...

080034d0 <_ZN8touchgfx14WipeTransitionILNS_9DirectionE3EE15handleTickEventEv>:
    virtual void handleTickEvent()
 80034d0:	b513      	push	{r0, r1, r4, lr}
 80034d2:	4604      	mov	r4, r0
        animationCounter++;
 80034d4:	7a80      	ldrb	r0, [r0, #10]
        if (animationCounter > animationSteps)
 80034d6:	7a63      	ldrb	r3, [r4, #9]
        animationCounter++;
 80034d8:	3001      	adds	r0, #1
 80034da:	b2c0      	uxtb	r0, r0
        if (animationCounter > animationSteps)
 80034dc:	4298      	cmp	r0, r3
        animationCounter++;
 80034de:	72a0      	strb	r0, [r4, #10]
        if (animationCounter > animationSteps)
 80034e0:	d905      	bls.n	80034ee <_ZN8touchgfx14WipeTransitionILNS_9DirectionE3EE15handleTickEventEv+0x1e>
            done = true;
 80034e2:	2301      	movs	r3, #1
 80034e4:	7223      	strb	r3, [r4, #8]
            animationCounter = 0;
 80034e6:	2300      	movs	r3, #0
 80034e8:	72a3      	strb	r3, [r4, #10]
    }
 80034ea:	b002      	add	sp, #8
 80034ec:	bd10      	pop	{r4, pc}
        calculatedValue = EasingEquations::cubicEaseOut(animationCounter, 0, targetValue, animationSteps);
 80034ee:	f9b4 200c 	ldrsh.w	r2, [r4, #12]
 80034f2:	2100      	movs	r1, #0
 80034f4:	f013 fd4e 	bl	8016f94 <_ZN8touchgfx15EasingEquations12cubicEaseOutEtsst>
        if ((calculatedValue % 2) != 0)
 80034f8:	f010 0201 	ands.w	r2, r0, #1
 80034fc:	b283      	uxth	r3, r0
 80034fe:	d12a      	bne.n	8003556 <_ZN8touchgfx14WipeTransitionILNS_9DirectionE3EE15handleTickEventEv+0x86>
        calculatedValue = EasingEquations::cubicEaseOut(animationCounter, 0, targetValue, animationSteps);
 8003500:	81e0      	strh	r0, [r4, #14]
                solid.setWidth(HAL::DISPLAY_WIDTH - calculatedValue);
 8003502:	4a19      	ldr	r2, [pc, #100]	; (8003568 <_ZN8touchgfx14WipeTransitionILNS_9DirectionE3EE15handleTickEventEv+0x98>)
 8003504:	f9b4 000e 	ldrsh.w	r0, [r4, #14]
 8003508:	89e3      	ldrh	r3, [r4, #14]
 800350a:	8812      	ldrh	r2, [r2, #0]
        return rect.x;
 800350c:	f9b4 1014 	ldrsh.w	r1, [r4, #20]
        rect.x = x;
 8003510:	82a0      	strh	r0, [r4, #20]
 8003512:	2000      	movs	r0, #0
 8003514:	1ad2      	subs	r2, r2, r3
 8003516:	f8ad 0002 	strh.w	r0, [sp, #2]
                screenContainer->invalidateRect(r);
 800351a:	6860      	ldr	r0, [r4, #4]
        rect.width = width;
 800351c:	8322      	strh	r2, [r4, #24]
                const uint16_t delta = calculatedValue - prevSolidPos;
 800351e:	1a5b      	subs	r3, r3, r1
                Rect r(prevSolidPos, 0, delta, HAL::DISPLAY_HEIGHT);
 8003520:	4a12      	ldr	r2, [pc, #72]	; (800356c <_ZN8touchgfx14WipeTransitionILNS_9DirectionE3EE15handleTickEventEv+0x9c>)
 8003522:	f8ad 3004 	strh.w	r3, [sp, #4]
                screenContainer->invalidateRect(r);
 8003526:	6803      	ldr	r3, [r0, #0]
                Rect r(prevSolidPos, 0, delta, HAL::DISPLAY_HEIGHT);
 8003528:	f9b2 2000 	ldrsh.w	r2, [r2]
                screenContainer->invalidateRect(r);
 800352c:	691b      	ldr	r3, [r3, #16]
 800352e:	f8ad 1000 	strh.w	r1, [sp]
 8003532:	f8ad 2006 	strh.w	r2, [sp, #6]
 8003536:	4669      	mov	r1, sp
 8003538:	4798      	blx	r3
        if (animationCounter == 1 && HAL::USE_DOUBLE_BUFFERING)
 800353a:	7aa3      	ldrb	r3, [r4, #10]
 800353c:	2b01      	cmp	r3, #1
 800353e:	d1d4      	bne.n	80034ea <_ZN8touchgfx14WipeTransitionILNS_9DirectionE3EE15handleTickEventEv+0x1a>
 8003540:	4b0b      	ldr	r3, [pc, #44]	; (8003570 <_ZN8touchgfx14WipeTransitionILNS_9DirectionE3EE15handleTickEventEv+0xa0>)
 8003542:	781b      	ldrb	r3, [r3, #0]
 8003544:	2b00      	cmp	r3, #0
 8003546:	d0d0      	beq.n	80034ea <_ZN8touchgfx14WipeTransitionILNS_9DirectionE3EE15handleTickEventEv+0x1a>
            Application::getInstance()->copyInvalidatedAreasFromTFTToClientBuffer();
 8003548:	f011 fef2 	bl	8015330 <_ZN8touchgfx11Application11getInstanceEv>
    }
 800354c:	b002      	add	sp, #8
 800354e:	e8bd 4010 	ldmia.w	sp!, {r4, lr}
            Application::getInstance()->copyInvalidatedAreasFromTFTToClientBuffer();
 8003552:	f011 bef3 	b.w	801533c <_ZN8touchgfx11Application41copyInvalidatedAreasFromTFTToClientBufferEv>
            calculatedValue += (calculatedValue > 0 ? 1 : -1);
 8003556:	f64f 71ff 	movw	r1, #65535	; 0xffff
 800355a:	2800      	cmp	r0, #0
 800355c:	bfd8      	it	le
 800355e:	460a      	movle	r2, r1
 8003560:	4413      	add	r3, r2
 8003562:	81e3      	strh	r3, [r4, #14]
 8003564:	e7cd      	b.n	8003502 <_ZN8touchgfx14WipeTransitionILNS_9DirectionE3EE15handleTickEventEv+0x32>
 8003566:	bf00      	nop
 8003568:	20012f18 	.word	0x20012f18
 800356c:	20012f1a 	.word	0x20012f1a
 8003570:	20012f22 	.word	0x20012f22

08003574 <_ZN8touchgfx14MVPApplication29handlePendingScreenTransitionEv>:
    /**
     * Handles the pending screen transition.
     *
     * Delegates the work to evaluatePendingScreenTransition()
     */
    virtual void handlePendingScreenTransition()
 8003574:	b510      	push	{r4, lr}
 8003576:	4604      	mov	r4, r0
     * Evaluates the pending Callback instances. If a callback is valid, it is executed and
     * a Screen transition is executed.
     */
    void evaluatePendingScreenTransition()
    {
        if (pendingScreenTransitionCallback && pendingScreenTransitionCallback->isValid())
 8003578:	f8d0 0140 	ldr.w	r0, [r0, #320]	; 0x140
 800357c:	b158      	cbz	r0, 8003596 <_ZN8touchgfx14MVPApplication29handlePendingScreenTransitionEv+0x22>
 800357e:	6803      	ldr	r3, [r0, #0]
 8003580:	68db      	ldr	r3, [r3, #12]
 8003582:	4798      	blx	r3
 8003584:	b138      	cbz	r0, 8003596 <_ZN8touchgfx14MVPApplication29handlePendingScreenTransitionEv+0x22>
        {
            pendingScreenTransitionCallback->execute();
 8003586:	f8d4 0140 	ldr.w	r0, [r4, #320]	; 0x140
 800358a:	6803      	ldr	r3, [r0, #0]
 800358c:	689b      	ldr	r3, [r3, #8]
 800358e:	4798      	blx	r3
            pendingScreenTransitionCallback = 0;
 8003590:	2300      	movs	r3, #0
 8003592:	f8c4 3140 	str.w	r3, [r4, #320]	; 0x140
    }
 8003596:	bd10      	pop	{r4, pc}

08003598 <_ZN23FrontendApplicationBase38gotoShutting_OffScreenNoTransitionImplEv>:
    transitionCallback = touchgfx::Callback<FrontendApplicationBase>(this, &FrontendApplicationBase::gotoShutting_OffScreenNoTransitionImpl);
    pendingScreenTransitionCallback = &transitionCallback;
}

void FrontendApplicationBase::gotoShutting_OffScreenNoTransitionImpl()
{
 8003598:	e92d 4ff1 	stmdb	sp!, {r0, r4, r5, r6, r7, r8, r9, sl, fp, lr}
    touchgfx::makeTransition<Shutting_OffView, Shutting_OffPresenter, touchgfx::NoTransition, Model >(&currentScreen, &currentPresenter, frontendHeap, &currentTransition, &model);
 800359c:	e9d0 5a55 	ldrd	r5, sl, [r0, #340]	; 0x154
{
 80035a0:	4607      	mov	r7, r0
 *         value as the old presenter due to memory reuse.
 */
template <class ScreenType, class PresenterType, class TransType, class ModelType>
PresenterType* makeTransition(Screen** currentScreen, Presenter** currentPresenter, MVPHeap& heap, Transition** currentTrans, ModelType* model)
{
    assert(sizeof(ScreenType) <= heap.screenStorage.element_size() && "View allocation error: Check that all views are added to FrontendHeap::ViewTypes");
 80035a2:	68a8      	ldr	r0, [r5, #8]
 80035a4:	6803      	ldr	r3, [r0, #0]
 80035a6:	6a1b      	ldr	r3, [r3, #32]
 80035a8:	4798      	blx	r3
 80035aa:	2897      	cmp	r0, #151	; 0x97
 80035ac:	d805      	bhi.n	80035ba <_ZN23FrontendApplicationBase38gotoShutting_OffScreenNoTransitionImplEv+0x22>
 80035ae:	4b46      	ldr	r3, [pc, #280]	; (80036c8 <_ZN23FrontendApplicationBase38gotoShutting_OffScreenNoTransitionImplEv+0x130>)
 80035b0:	4a46      	ldr	r2, [pc, #280]	; (80036cc <_ZN23FrontendApplicationBase38gotoShutting_OffScreenNoTransitionImplEv+0x134>)
 80035b2:	21a3      	movs	r1, #163	; 0xa3
    assert(sizeof(PresenterType) <= heap.presenterStorage.element_size() && "Presenter allocation error: Check that all presenters are added to FrontendHeap::PresenterTypes");
 80035b4:	4846      	ldr	r0, [pc, #280]	; (80036d0 <_ZN23FrontendApplicationBase38gotoShutting_OffScreenNoTransitionImplEv+0x138>)
 80035b6:	f026 fd45 	bl	802a044 <__assert_func>
 80035ba:	6868      	ldr	r0, [r5, #4]
 80035bc:	6803      	ldr	r3, [r0, #0]
 80035be:	6a1b      	ldr	r3, [r3, #32]
 80035c0:	4798      	blx	r3
 80035c2:	280f      	cmp	r0, #15
 80035c4:	d803      	bhi.n	80035ce <_ZN23FrontendApplicationBase38gotoShutting_OffScreenNoTransitionImplEv+0x36>
 80035c6:	4b43      	ldr	r3, [pc, #268]	; (80036d4 <_ZN23FrontendApplicationBase38gotoShutting_OffScreenNoTransitionImplEv+0x13c>)
 80035c8:	4a40      	ldr	r2, [pc, #256]	; (80036cc <_ZN23FrontendApplicationBase38gotoShutting_OffScreenNoTransitionImplEv+0x134>)
 80035ca:	21a4      	movs	r1, #164	; 0xa4
 80035cc:	e7f2      	b.n	80035b4 <_ZN23FrontendApplicationBase38gotoShutting_OffScreenNoTransitionImplEv+0x1c>
    assert(sizeof(TransType) <= heap.transitionStorage.element_size() && "Transition allocation error: Check that all transitions are added to FrontendHeap::TransitionTypes");
 80035ce:	68e8      	ldr	r0, [r5, #12]
 80035d0:	6803      	ldr	r3, [r0, #0]
 80035d2:	6a1b      	ldr	r3, [r3, #32]
 80035d4:	4798      	blx	r3
 80035d6:	280b      	cmp	r0, #11
 80035d8:	d803      	bhi.n	80035e2 <_ZN23FrontendApplicationBase38gotoShutting_OffScreenNoTransitionImplEv+0x4a>
 80035da:	4b3f      	ldr	r3, [pc, #252]	; (80036d8 <_ZN23FrontendApplicationBase38gotoShutting_OffScreenNoTransitionImplEv+0x140>)
 80035dc:	4a3b      	ldr	r2, [pc, #236]	; (80036cc <_ZN23FrontendApplicationBase38gotoShutting_OffScreenNoTransitionImplEv+0x134>)
 80035de:	21a5      	movs	r1, #165	; 0xa5
 80035e0:	e7e8      	b.n	80035b4 <_ZN23FrontendApplicationBase38gotoShutting_OffScreenNoTransitionImplEv+0x1c>
    Application::getInstance()->clearAllTimerWidgets();
 80035e2:	f011 fea5 	bl	8015330 <_ZN8touchgfx11Application11getInstanceEv>
    if (*currentTrans)
 80035e6:	f8df 90f8 	ldr.w	r9, [pc, #248]	; 80036e0 <_ZN23FrontendApplicationBase38gotoShutting_OffScreenNoTransitionImplEv+0x148>

    /** Clears all currently registered timer widgets. */

    void clearAllTimerWidgets()
    {
        timerWidgets.clear();
 80035ea:	3004      	adds	r0, #4
 80035ec:	f011 ff06 	bl	80153fc <_ZN8touchgfx11Application12TimerWidgets5clearEv>
 80035f0:	f8d9 0000 	ldr.w	r0, [r9]
 80035f4:	b110      	cbz	r0, 80035fc <_ZN23FrontendApplicationBase38gotoShutting_OffScreenNoTransitionImplEv+0x64>
        (*currentTrans)->tearDown();
 80035f6:	6803      	ldr	r3, [r0, #0]
 80035f8:	68db      	ldr	r3, [r3, #12]
 80035fa:	4798      	blx	r3
    if (*currentTrans)
 80035fc:	f8d9 0000 	ldr.w	r0, [r9]
 8003600:	b110      	cbz	r0, 8003608 <_ZN23FrontendApplicationBase38gotoShutting_OffScreenNoTransitionImplEv+0x70>
        (*currentTrans)->~Transition();
 8003602:	6803      	ldr	r3, [r0, #0]
 8003604:	681b      	ldr	r3, [r3, #0]
 8003606:	4798      	blx	r3
    if (*currentScreen)
 8003608:	f8df 80d8 	ldr.w	r8, [pc, #216]	; 80036e4 <_ZN23FrontendApplicationBase38gotoShutting_OffScreenNoTransitionImplEv+0x14c>
 800360c:	f8d8 0000 	ldr.w	r0, [r8]
 8003610:	b110      	cbz	r0, 8003618 <_ZN23FrontendApplicationBase38gotoShutting_OffScreenNoTransitionImplEv+0x80>
        (*currentScreen)->tearDownScreen();
 8003612:	6803      	ldr	r3, [r0, #0]
 8003614:	695b      	ldr	r3, [r3, #20]
 8003616:	4798      	blx	r3
    if (*currentPresenter)
 8003618:	f8d7 013c 	ldr.w	r0, [r7, #316]	; 0x13c
 800361c:	b110      	cbz	r0, 8003624 <_ZN23FrontendApplicationBase38gotoShutting_OffScreenNoTransitionImplEv+0x8c>
        (*currentPresenter)->deactivate();
 800361e:	6803      	ldr	r3, [r0, #0]
 8003620:	685b      	ldr	r3, [r3, #4]
 8003622:	4798      	blx	r3
    if (*currentScreen)
 8003624:	f8d8 0000 	ldr.w	r0, [r8]
 8003628:	b110      	cbz	r0, 8003630 <_ZN23FrontendApplicationBase38gotoShutting_OffScreenNoTransitionImplEv+0x98>
        (*currentScreen)->~Screen();
 800362a:	6803      	ldr	r3, [r0, #0]
 800362c:	681b      	ldr	r3, [r3, #0]
 800362e:	4798      	blx	r3
    if (*currentPresenter)
 8003630:	f8d7 013c 	ldr.w	r0, [r7, #316]	; 0x13c
 8003634:	b110      	cbz	r0, 800363c <_ZN23FrontendApplicationBase38gotoShutting_OffScreenNoTransitionImplEv+0xa4>
        (*currentPresenter)->~Presenter();
 8003636:	6803      	ldr	r3, [r0, #0]
 8003638:	689b      	ldr	r3, [r3, #8]
 800363a:	4798      	blx	r3

    prepareTransition(currentScreen, currentPresenter, currentTrans);

    TransType* newTransition = new (&heap.transitionStorage.at<TransType>(0)) TransType;
 800363c:	68e8      	ldr	r0, [r5, #12]
     * @return A typed reference to the object at the specified index.
     */
    template <typename T>
    T& at(const uint16_t index)
    {
        return *static_cast<T*>(element(index));
 800363e:	6803      	ldr	r3, [r0, #0]
 8003640:	2100      	movs	r1, #0
 8003642:	6a5b      	ldr	r3, [r3, #36]	; 0x24
 8003644:	4798      	blx	r3
        : screenContainer(0), done(false)
 8003646:	f04f 0b00 	mov.w	fp, #0
 800364a:	4b24      	ldr	r3, [pc, #144]	; (80036dc <_ZN23FrontendApplicationBase38gotoShutting_OffScreenNoTransitionImplEv+0x144>)
 800364c:	6003      	str	r3, [r0, #0]
 800364e:	4604      	mov	r4, r0
 8003650:	f8c0 b004 	str.w	fp, [r0, #4]
 8003654:	f880 b008 	strb.w	fp, [r0, #8]
    ScreenType* newScreen = new (&heap.screenStorage.at<ScreenType>(0)) ScreenType;
 8003658:	68a8      	ldr	r0, [r5, #8]
 800365a:	6803      	ldr	r3, [r0, #0]
 800365c:	4659      	mov	r1, fp
 800365e:	6a5b      	ldr	r3, [r3, #36]	; 0x24
 8003660:	4798      	blx	r3
 8003662:	4606      	mov	r6, r0
 8003664:	f005 fa4c 	bl	8008b00 <_ZN16Shutting_OffViewC1Ev>
    PresenterType* newPresenter = new (&heap.presenterStorage.at<PresenterType>(0)) PresenterType(*newScreen);
 8003668:	6868      	ldr	r0, [r5, #4]
 800366a:	6803      	ldr	r3, [r0, #0]
 800366c:	4659      	mov	r1, fp
 800366e:	6a5b      	ldr	r3, [r3, #36]	; 0x24
 8003670:	4798      	blx	r3
 8003672:	4631      	mov	r1, r6
 8003674:	4605      	mov	r5, r0
 8003676:	f005 fa1f 	bl	8008ab8 <_ZN21Shutting_OffPresenterC1ER16Shutting_OffView>
    *currentTrans = newTransition;
 800367a:	f8c9 4000 	str.w	r4, [r9]
    *currentPresenter = newPresenter;
 800367e:	f8c7 513c 	str.w	r5, [r7, #316]	; 0x13c
    *currentScreen = newScreen;
 8003682:	f8c8 6000 	str.w	r6, [r8]
    model->bind(newPresenter);
 8003686:	b1e5      	cbz	r5, 80036c2 <_ZN23FrontendApplicationBase38gotoShutting_OffScreenNoTransitionImplEv+0x12a>
 8003688:	1d2b      	adds	r3, r5, #4
public:
    Model();

    void bind(ModelListener* listener)
    {
        modelListener = listener;
 800368a:	f8ca 3000 	str.w	r3, [sl]
    newScreen->setupScreen();
 800368e:	6833      	ldr	r3, [r6, #0]
    
    virtual ~ModelListener() {}

    void bind(Model* m)
    {
        model = m;
 8003690:	f8c5 a008 	str.w	sl, [r5, #8]
 8003694:	4630      	mov	r0, r6
 8003696:	68db      	ldr	r3, [r3, #12]
     *
     * @param [in] newPresenter The specific Presenter to be associated with the View.
     */
    void bind(T& newPresenter)
    {
        presenter = &newPresenter;
 8003698:	63f5      	str	r5, [r6, #60]	; 0x3c
 800369a:	4798      	blx	r3
    newPresenter->activate();
 800369c:	682b      	ldr	r3, [r5, #0]
 800369e:	4628      	mov	r0, r5
 80036a0:	681b      	ldr	r3, [r3, #0]
 80036a2:	4798      	blx	r3
    newScreen->bindTransition(*newTransition);
 80036a4:	4621      	mov	r1, r4
 80036a6:	4630      	mov	r0, r6
 80036a8:	f013 fc6e 	bl	8016f88 <_ZN8touchgfx6Screen14bindTransitionERNS_10TransitionE>
    newTransition->init();
 80036ac:	6823      	ldr	r3, [r4, #0]
 80036ae:	4620      	mov	r0, r4
 80036b0:	691b      	ldr	r3, [r3, #16]
 80036b2:	4798      	blx	r3
    newTransition->invalidate();
 80036b4:	6823      	ldr	r3, [r4, #0]
 80036b6:	695b      	ldr	r3, [r3, #20]
 80036b8:	4620      	mov	r0, r4
}
 80036ba:	b001      	add	sp, #4
 80036bc:	e8bd 4ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 80036c0:	4718      	bx	r3
    model->bind(newPresenter);
 80036c2:	462b      	mov	r3, r5
 80036c4:	e7e1      	b.n	800368a <_ZN23FrontendApplicationBase38gotoShutting_OffScreenNoTransitionImplEv+0xf2>
 80036c6:	bf00      	nop
 80036c8:	0802bd64 	.word	0x0802bd64
 80036cc:	0802bdf2 	.word	0x0802bdf2
 80036d0:	0802bf00 	.word	0x0802bf00
 80036d4:	0802bf47 	.word	0x0802bf47
 80036d8:	0802bfea 	.word	0x0802bfea
 80036dc:	0802d408 	.word	0x0802d408
 80036e0:	20012f6c 	.word	0x20012f6c
 80036e4:	20012f68 	.word	0x20012f68

080036e8 <_ZN8touchgfx14WipeTransitionILNS_9DirectionE2EE15handleTickEventEv>:
    virtual void handleTickEvent()
 80036e8:	b537      	push	{r0, r1, r2, r4, r5, lr}
 80036ea:	4604      	mov	r4, r0
        animationCounter++;
 80036ec:	7a80      	ldrb	r0, [r0, #10]
        if (animationCounter > animationSteps)
 80036ee:	7a63      	ldrb	r3, [r4, #9]
        animationCounter++;
 80036f0:	3001      	adds	r0, #1
 80036f2:	b2c0      	uxtb	r0, r0
        if (animationCounter > animationSteps)
 80036f4:	4298      	cmp	r0, r3
        animationCounter++;
 80036f6:	72a0      	strb	r0, [r4, #10]
        if (animationCounter > animationSteps)
 80036f8:	d905      	bls.n	8003706 <_ZN8touchgfx14WipeTransitionILNS_9DirectionE2EE15handleTickEventEv+0x1e>
            done = true;
 80036fa:	2301      	movs	r3, #1
 80036fc:	7223      	strb	r3, [r4, #8]
            animationCounter = 0;
 80036fe:	2300      	movs	r3, #0
 8003700:	72a3      	strb	r3, [r4, #10]
    }
 8003702:	b003      	add	sp, #12
 8003704:	bd30      	pop	{r4, r5, pc}
        calculatedValue = EasingEquations::cubicEaseOut(animationCounter, 0, targetValue, animationSteps);
 8003706:	f9b4 200c 	ldrsh.w	r2, [r4, #12]
 800370a:	2100      	movs	r1, #0
 800370c:	f013 fc42 	bl	8016f94 <_ZN8touchgfx15EasingEquations12cubicEaseOutEtsst>
        if ((calculatedValue % 2) != 0)
 8003710:	f010 0201 	ands.w	r2, r0, #1
 8003714:	b283      	uxth	r3, r0
 8003716:	d128      	bne.n	800376a <_ZN8touchgfx14WipeTransitionILNS_9DirectionE2EE15handleTickEventEv+0x82>
        calculatedValue = EasingEquations::cubicEaseOut(animationCounter, 0, targetValue, animationSteps);
 8003718:	81e0      	strh	r0, [r4, #14]
                solid.setWidth(HAL::DISPLAY_WIDTH - calculatedValue);
 800371a:	4b18      	ldr	r3, [pc, #96]	; (800377c <_ZN8touchgfx14WipeTransitionILNS_9DirectionE2EE15handleTickEventEv+0x94>)
                Rect r(solid.getWidth(), 0, delta, HAL::DISPLAY_HEIGHT);
 800371c:	4818      	ldr	r0, [pc, #96]	; (8003780 <_ZN8touchgfx14WipeTransitionILNS_9DirectionE2EE15handleTickEventEv+0x98>)
                solid.setWidth(HAL::DISPLAY_WIDTH - calculatedValue);
 800371e:	8819      	ldrh	r1, [r3, #0]
                const uint16_t prevSolidWidth = solid.getWidth();
 8003720:	8b25      	ldrh	r5, [r4, #24]
                solid.setWidth(HAL::DISPLAY_WIDTH - calculatedValue);
 8003722:	89e3      	ldrh	r3, [r4, #14]
                Rect r(solid.getWidth(), 0, delta, HAL::DISPLAY_HEIGHT);
 8003724:	f9b0 0000 	ldrsh.w	r0, [r0]
 8003728:	f8ad 0006 	strh.w	r0, [sp, #6]
                solid.setWidth(HAL::DISPLAY_WIDTH - calculatedValue);
 800372c:	1aca      	subs	r2, r1, r3
                screenContainer->invalidateRect(r);
 800372e:	6860      	ldr	r0, [r4, #4]
                const uint16_t delta = prevSolidWidth - solid.getWidth();
 8003730:	442b      	add	r3, r5
 8003732:	1a5b      	subs	r3, r3, r1
                solid.setWidth(HAL::DISPLAY_WIDTH - calculatedValue);
 8003734:	b212      	sxth	r2, r2
 8003736:	f8ad 3004 	strh.w	r3, [sp, #4]
                screenContainer->invalidateRect(r);
 800373a:	6803      	ldr	r3, [r0, #0]
 800373c:	8322      	strh	r2, [r4, #24]
 800373e:	f8ad 2000 	strh.w	r2, [sp]
 8003742:	2200      	movs	r2, #0
 8003744:	691b      	ldr	r3, [r3, #16]
 8003746:	f8ad 2002 	strh.w	r2, [sp, #2]
 800374a:	4669      	mov	r1, sp
 800374c:	4798      	blx	r3
        if (animationCounter == 1 && HAL::USE_DOUBLE_BUFFERING)
 800374e:	7aa3      	ldrb	r3, [r4, #10]
 8003750:	2b01      	cmp	r3, #1
 8003752:	d1d6      	bne.n	8003702 <_ZN8touchgfx14WipeTransitionILNS_9DirectionE2EE15handleTickEventEv+0x1a>
 8003754:	4b0b      	ldr	r3, [pc, #44]	; (8003784 <_ZN8touchgfx14WipeTransitionILNS_9DirectionE2EE15handleTickEventEv+0x9c>)
 8003756:	781b      	ldrb	r3, [r3, #0]
 8003758:	2b00      	cmp	r3, #0
 800375a:	d0d2      	beq.n	8003702 <_ZN8touchgfx14WipeTransitionILNS_9DirectionE2EE15handleTickEventEv+0x1a>
            Application::getInstance()->copyInvalidatedAreasFromTFTToClientBuffer();
 800375c:	f011 fde8 	bl	8015330 <_ZN8touchgfx11Application11getInstanceEv>
    }
 8003760:	b003      	add	sp, #12
 8003762:	e8bd 4030 	ldmia.w	sp!, {r4, r5, lr}
            Application::getInstance()->copyInvalidatedAreasFromTFTToClientBuffer();
 8003766:	f011 bde9 	b.w	801533c <_ZN8touchgfx11Application41copyInvalidatedAreasFromTFTToClientBufferEv>
            calculatedValue += (calculatedValue > 0 ? 1 : -1);
 800376a:	f64f 71ff 	movw	r1, #65535	; 0xffff
 800376e:	2800      	cmp	r0, #0
 8003770:	bfd8      	it	le
 8003772:	460a      	movle	r2, r1
 8003774:	4413      	add	r3, r2
 8003776:	81e3      	strh	r3, [r4, #14]
 8003778:	e7cf      	b.n	800371a <_ZN8touchgfx14WipeTransitionILNS_9DirectionE2EE15handleTickEventEv+0x32>
 800377a:	bf00      	nop
 800377c:	20012f18 	.word	0x20012f18
 8003780:	20012f1a 	.word	0x20012f1a
 8003784:	20012f22 	.word	0x20012f22

08003788 <_ZN23FrontendApplicationBase35gotoMain_MenuScreenNoTransitionImplEv>:
{
 8003788:	e92d 4ff1 	stmdb	sp!, {r0, r4, r5, r6, r7, r8, r9, sl, fp, lr}
    touchgfx::makeTransition<Main_MenuView, Main_MenuPresenter, touchgfx::NoTransition, Model >(&currentScreen, &currentPresenter, frontendHeap, &currentTransition, &model);
 800378c:	e9d0 5a55 	ldrd	r5, sl, [r0, #340]	; 0x154
{
 8003790:	4607      	mov	r7, r0
    assert(sizeof(ScreenType) <= heap.screenStorage.element_size() && "View allocation error: Check that all views are added to FrontendHeap::ViewTypes");
 8003792:	68a8      	ldr	r0, [r5, #8]
 8003794:	6803      	ldr	r3, [r0, #0]
 8003796:	6a1b      	ldr	r3, [r3, #32]
 8003798:	4798      	blx	r3
 800379a:	f241 137b 	movw	r3, #4475	; 0x117b
 800379e:	4298      	cmp	r0, r3
 80037a0:	d805      	bhi.n	80037ae <_ZN23FrontendApplicationBase35gotoMain_MenuScreenNoTransitionImplEv+0x26>
 80037a2:	4b46      	ldr	r3, [pc, #280]	; (80038bc <_ZN23FrontendApplicationBase35gotoMain_MenuScreenNoTransitionImplEv+0x134>)
 80037a4:	4a46      	ldr	r2, [pc, #280]	; (80038c0 <_ZN23FrontendApplicationBase35gotoMain_MenuScreenNoTransitionImplEv+0x138>)
 80037a6:	21a3      	movs	r1, #163	; 0xa3
    assert(sizeof(PresenterType) <= heap.presenterStorage.element_size() && "Presenter allocation error: Check that all presenters are added to FrontendHeap::PresenterTypes");
 80037a8:	4846      	ldr	r0, [pc, #280]	; (80038c4 <_ZN23FrontendApplicationBase35gotoMain_MenuScreenNoTransitionImplEv+0x13c>)
 80037aa:	f026 fc4b 	bl	802a044 <__assert_func>
 80037ae:	6868      	ldr	r0, [r5, #4]
 80037b0:	6803      	ldr	r3, [r0, #0]
 80037b2:	6a1b      	ldr	r3, [r3, #32]
 80037b4:	4798      	blx	r3
 80037b6:	280f      	cmp	r0, #15
 80037b8:	d803      	bhi.n	80037c2 <_ZN23FrontendApplicationBase35gotoMain_MenuScreenNoTransitionImplEv+0x3a>
 80037ba:	4b43      	ldr	r3, [pc, #268]	; (80038c8 <_ZN23FrontendApplicationBase35gotoMain_MenuScreenNoTransitionImplEv+0x140>)
 80037bc:	4a40      	ldr	r2, [pc, #256]	; (80038c0 <_ZN23FrontendApplicationBase35gotoMain_MenuScreenNoTransitionImplEv+0x138>)
 80037be:	21a4      	movs	r1, #164	; 0xa4
 80037c0:	e7f2      	b.n	80037a8 <_ZN23FrontendApplicationBase35gotoMain_MenuScreenNoTransitionImplEv+0x20>
    assert(sizeof(TransType) <= heap.transitionStorage.element_size() && "Transition allocation error: Check that all transitions are added to FrontendHeap::TransitionTypes");
 80037c2:	68e8      	ldr	r0, [r5, #12]
 80037c4:	6803      	ldr	r3, [r0, #0]
 80037c6:	6a1b      	ldr	r3, [r3, #32]
 80037c8:	4798      	blx	r3
 80037ca:	280b      	cmp	r0, #11
 80037cc:	d803      	bhi.n	80037d6 <_ZN23FrontendApplicationBase35gotoMain_MenuScreenNoTransitionImplEv+0x4e>
 80037ce:	4b3f      	ldr	r3, [pc, #252]	; (80038cc <_ZN23FrontendApplicationBase35gotoMain_MenuScreenNoTransitionImplEv+0x144>)
 80037d0:	4a3b      	ldr	r2, [pc, #236]	; (80038c0 <_ZN23FrontendApplicationBase35gotoMain_MenuScreenNoTransitionImplEv+0x138>)
 80037d2:	21a5      	movs	r1, #165	; 0xa5
 80037d4:	e7e8      	b.n	80037a8 <_ZN23FrontendApplicationBase35gotoMain_MenuScreenNoTransitionImplEv+0x20>
    Application::getInstance()->clearAllTimerWidgets();
 80037d6:	f011 fdab 	bl	8015330 <_ZN8touchgfx11Application11getInstanceEv>
    if (*currentTrans)
 80037da:	f8df 90f8 	ldr.w	r9, [pc, #248]	; 80038d4 <_ZN23FrontendApplicationBase35gotoMain_MenuScreenNoTransitionImplEv+0x14c>
 80037de:	3004      	adds	r0, #4
 80037e0:	f011 fe0c 	bl	80153fc <_ZN8touchgfx11Application12TimerWidgets5clearEv>
 80037e4:	f8d9 0000 	ldr.w	r0, [r9]
 80037e8:	b110      	cbz	r0, 80037f0 <_ZN23FrontendApplicationBase35gotoMain_MenuScreenNoTransitionImplEv+0x68>
        (*currentTrans)->tearDown();
 80037ea:	6803      	ldr	r3, [r0, #0]
 80037ec:	68db      	ldr	r3, [r3, #12]
 80037ee:	4798      	blx	r3
    if (*currentTrans)
 80037f0:	f8d9 0000 	ldr.w	r0, [r9]
 80037f4:	b110      	cbz	r0, 80037fc <_ZN23FrontendApplicationBase35gotoMain_MenuScreenNoTransitionImplEv+0x74>
        (*currentTrans)->~Transition();
 80037f6:	6803      	ldr	r3, [r0, #0]
 80037f8:	681b      	ldr	r3, [r3, #0]
 80037fa:	4798      	blx	r3
    if (*currentScreen)
 80037fc:	f8df 80d8 	ldr.w	r8, [pc, #216]	; 80038d8 <_ZN23FrontendApplicationBase35gotoMain_MenuScreenNoTransitionImplEv+0x150>
 8003800:	f8d8 0000 	ldr.w	r0, [r8]
 8003804:	b110      	cbz	r0, 800380c <_ZN23FrontendApplicationBase35gotoMain_MenuScreenNoTransitionImplEv+0x84>
        (*currentScreen)->tearDownScreen();
 8003806:	6803      	ldr	r3, [r0, #0]
 8003808:	695b      	ldr	r3, [r3, #20]
 800380a:	4798      	blx	r3
    if (*currentPresenter)
 800380c:	f8d7 013c 	ldr.w	r0, [r7, #316]	; 0x13c
 8003810:	b110      	cbz	r0, 8003818 <_ZN23FrontendApplicationBase35gotoMain_MenuScreenNoTransitionImplEv+0x90>
        (*currentPresenter)->deactivate();
 8003812:	6803      	ldr	r3, [r0, #0]
 8003814:	685b      	ldr	r3, [r3, #4]
 8003816:	4798      	blx	r3
    if (*currentScreen)
 8003818:	f8d8 0000 	ldr.w	r0, [r8]
 800381c:	b110      	cbz	r0, 8003824 <_ZN23FrontendApplicationBase35gotoMain_MenuScreenNoTransitionImplEv+0x9c>
        (*currentScreen)->~Screen();
 800381e:	6803      	ldr	r3, [r0, #0]
 8003820:	681b      	ldr	r3, [r3, #0]
 8003822:	4798      	blx	r3
    if (*currentPresenter)
 8003824:	f8d7 013c 	ldr.w	r0, [r7, #316]	; 0x13c
 8003828:	b110      	cbz	r0, 8003830 <_ZN23FrontendApplicationBase35gotoMain_MenuScreenNoTransitionImplEv+0xa8>
        (*currentPresenter)->~Presenter();
 800382a:	6803      	ldr	r3, [r0, #0]
 800382c:	689b      	ldr	r3, [r3, #8]
 800382e:	4798      	blx	r3
    TransType* newTransition = new (&heap.transitionStorage.at<TransType>(0)) TransType;
 8003830:	68e8      	ldr	r0, [r5, #12]
 8003832:	6803      	ldr	r3, [r0, #0]
 8003834:	2100      	movs	r1, #0
 8003836:	6a5b      	ldr	r3, [r3, #36]	; 0x24
 8003838:	4798      	blx	r3
 800383a:	f04f 0b00 	mov.w	fp, #0
 800383e:	4b24      	ldr	r3, [pc, #144]	; (80038d0 <_ZN23FrontendApplicationBase35gotoMain_MenuScreenNoTransitionImplEv+0x148>)
 8003840:	6003      	str	r3, [r0, #0]
 8003842:	4604      	mov	r4, r0
 8003844:	f8c0 b004 	str.w	fp, [r0, #4]
 8003848:	f880 b008 	strb.w	fp, [r0, #8]
    ScreenType* newScreen = new (&heap.screenStorage.at<ScreenType>(0)) ScreenType;
 800384c:	68a8      	ldr	r0, [r5, #8]
 800384e:	6803      	ldr	r3, [r0, #0]
 8003850:	4659      	mov	r1, fp
 8003852:	6a5b      	ldr	r3, [r3, #36]	; 0x24
 8003854:	4798      	blx	r3
 8003856:	4606      	mov	r6, r0
 8003858:	f004 fe0e 	bl	8008478 <_ZN13Main_MenuViewC1Ev>
    PresenterType* newPresenter = new (&heap.presenterStorage.at<PresenterType>(0)) PresenterType(*newScreen);
 800385c:	6868      	ldr	r0, [r5, #4]
 800385e:	6803      	ldr	r3, [r0, #0]
 8003860:	4659      	mov	r1, fp
 8003862:	6a5b      	ldr	r3, [r3, #36]	; 0x24
 8003864:	4798      	blx	r3
 8003866:	4631      	mov	r1, r6
 8003868:	4605      	mov	r5, r0
 800386a:	f004 fddf 	bl	800842c <_ZN18Main_MenuPresenterC1ER13Main_MenuView>
    *currentTrans = newTransition;
 800386e:	f8c9 4000 	str.w	r4, [r9]
    *currentPresenter = newPresenter;
 8003872:	f8c7 513c 	str.w	r5, [r7, #316]	; 0x13c
    *currentScreen = newScreen;
 8003876:	f8c8 6000 	str.w	r6, [r8]
    model->bind(newPresenter);
 800387a:	b1e5      	cbz	r5, 80038b6 <_ZN23FrontendApplicationBase35gotoMain_MenuScreenNoTransitionImplEv+0x12e>
 800387c:	1d2b      	adds	r3, r5, #4
 800387e:	f8ca 3000 	str.w	r3, [sl]
    newScreen->setupScreen();
 8003882:	6833      	ldr	r3, [r6, #0]
 8003884:	f8c5 a008 	str.w	sl, [r5, #8]
 8003888:	4630      	mov	r0, r6
 800388a:	68db      	ldr	r3, [r3, #12]
 800388c:	63f5      	str	r5, [r6, #60]	; 0x3c
 800388e:	4798      	blx	r3
    newPresenter->activate();
 8003890:	682b      	ldr	r3, [r5, #0]
 8003892:	4628      	mov	r0, r5
 8003894:	681b      	ldr	r3, [r3, #0]
 8003896:	4798      	blx	r3
    newScreen->bindTransition(*newTransition);
 8003898:	4621      	mov	r1, r4
 800389a:	4630      	mov	r0, r6
 800389c:	f013 fb74 	bl	8016f88 <_ZN8touchgfx6Screen14bindTransitionERNS_10TransitionE>
    newTransition->init();
 80038a0:	6823      	ldr	r3, [r4, #0]
 80038a2:	4620      	mov	r0, r4
 80038a4:	691b      	ldr	r3, [r3, #16]
 80038a6:	4798      	blx	r3
    newTransition->invalidate();
 80038a8:	6823      	ldr	r3, [r4, #0]
 80038aa:	695b      	ldr	r3, [r3, #20]
 80038ac:	4620      	mov	r0, r4
}
 80038ae:	b001      	add	sp, #4
 80038b0:	e8bd 4ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 80038b4:	4718      	bx	r3
    model->bind(newPresenter);
 80038b6:	462b      	mov	r3, r5
 80038b8:	e7e1      	b.n	800387e <_ZN23FrontendApplicationBase35gotoMain_MenuScreenNoTransitionImplEv+0xf6>
 80038ba:	bf00      	nop
 80038bc:	0802bd64 	.word	0x0802bd64
 80038c0:	0802c08d 	.word	0x0802c08d
 80038c4:	0802bf00 	.word	0x0802bf00
 80038c8:	0802bf47 	.word	0x0802bf47
 80038cc:	0802bfea 	.word	0x0802bfea
 80038d0:	0802d408 	.word	0x0802d408
 80038d4:	20012f6c 	.word	0x20012f6c
 80038d8:	20012f68 	.word	0x20012f68

080038dc <_ZN8touchgfx3HAL3lcdEv>:
        if (instance->useAuxiliaryLCD && instance->auxiliaryLCD)
 80038dc:	4b04      	ldr	r3, [pc, #16]	; (80038f0 <_ZN8touchgfx3HAL3lcdEv+0x14>)
 80038de:	681b      	ldr	r3, [r3, #0]
 80038e0:	f893 2058 	ldrb.w	r2, [r3, #88]	; 0x58
 80038e4:	b10a      	cbz	r2, 80038ea <_ZN8touchgfx3HAL3lcdEv+0xe>
 80038e6:	6cd8      	ldr	r0, [r3, #76]	; 0x4c
 80038e8:	b900      	cbnz	r0, 80038ec <_ZN8touchgfx3HAL3lcdEv+0x10>
        return instance->lcdRef;
 80038ea:	6898      	ldr	r0, [r3, #8]
    }
 80038ec:	4770      	bx	lr
 80038ee:	bf00      	nop
 80038f0:	20012f24 	.word	0x20012f24

080038f4 <_ZN23FrontendApplicationBaseC1ER5ModelR12FrontendHeap>:
FrontendApplicationBase::FrontendApplicationBase(Model& m, FrontendHeap& heap)
 80038f4:	b5f8      	push	{r3, r4, r5, r6, r7, lr}
 80038f6:	4604      	mov	r4, r0
 80038f8:	4617      	mov	r7, r2
 80038fa:	460e      	mov	r6, r1
          pendingScreenTransitionCallback(0)
 80038fc:	f011 fe4c 	bl	8015598 <_ZN8touchgfx11ApplicationC1Ev>
        instance = this;
 8003900:	4b10      	ldr	r3, [pc, #64]	; (8003944 <_ZN23FrontendApplicationBaseC1ER5ModelR12FrontendHeap+0x50>)
 8003902:	601c      	str	r4, [r3, #0]
      model(m)
 8003904:	4b10      	ldr	r3, [pc, #64]	; (8003948 <_ZN23FrontendApplicationBaseC1ER5ModelR12FrontendHeap+0x54>)
 8003906:	6023      	str	r3, [r4, #0]
        : pobject(0), pmemfun(0)
 8003908:	4b10      	ldr	r3, [pc, #64]	; (800394c <_ZN23FrontendApplicationBaseC1ER5ModelR12FrontendHeap+0x58>)
        : currentPresenter(0),
 800390a:	2500      	movs	r5, #0
 800390c:	e9c4 3551 	strd	r3, r5, [r4, #324]	; 0x144
        return instance;
 8003910:	4b0f      	ldr	r3, [pc, #60]	; (8003950 <_ZN23FrontendApplicationBaseC1ER5ModelR12FrontendHeap+0x5c>)
 8003912:	e9c4 5553 	strd	r5, r5, [r4, #332]	; 0x14c
 8003916:	6818      	ldr	r0, [r3, #0]
    touchgfx::HAL::getInstance()->setDisplayOrientation(touchgfx::ORIENTATION_PORTRAIT);
 8003918:	6803      	ldr	r3, [r0, #0]
 800391a:	2101      	movs	r1, #1
 800391c:	689b      	ldr	r3, [r3, #8]
          pendingScreenTransitionCallback(0)
 800391e:	e9c4 554f 	strd	r5, r5, [r4, #316]	; 0x13c
      model(m)
 8003922:	e9c4 7655 	strd	r7, r6, [r4, #340]	; 0x154
    touchgfx::HAL::getInstance()->setDisplayOrientation(touchgfx::ORIENTATION_PORTRAIT);
 8003926:	4798      	blx	r3
    touchgfx::Texts::setLanguage(GB);
 8003928:	4628      	mov	r0, r5
 800392a:	f004 fbe3 	bl	80080f4 <_ZN8touchgfx5Texts11setLanguageEt>
    reinterpret_cast<touchgfx::LCD16bpp&>(touchgfx::HAL::lcd()).enableTextureMapperAll();
 800392e:	f7ff ffd5 	bl	80038dc <_ZN8touchgfx3HAL3lcdEv>
 8003932:	f01b f9f6 	bl	801ed22 <_ZN8touchgfx8LCD16bpp22enableTextureMapperAllEv>
    reinterpret_cast<touchgfx::LCD16bpp&>(touchgfx::HAL::lcd()).enableDecompressorL8_All();
 8003936:	f7ff ffd1 	bl	80038dc <_ZN8touchgfx3HAL3lcdEv>
 800393a:	f01b fa6d 	bl	801ee18 <_ZN8touchgfx8LCD16bpp24enableDecompressorL8_AllEv>
}
 800393e:	4620      	mov	r0, r4
 8003940:	bdf8      	pop	{r3, r4, r5, r6, r7, pc}
 8003942:	bf00      	nop
 8003944:	20012f78 	.word	0x20012f78
 8003948:	0802d3b4 	.word	0x0802d3b4
 800394c:	0802d39c 	.word	0x0802d39c
 8003950:	20012f24 	.word	0x20012f24

08003954 <_ZN23FrontendApplicationBase31gotoMain_MenuScreenNoTransitionEv>:
struct Callback<dest_type, void, void, void> : public GenericCallback<>
 8003954:	4b06      	ldr	r3, [pc, #24]	; (8003970 <_ZN23FrontendApplicationBase31gotoMain_MenuScreenNoTransitionEv+0x1c>)
 8003956:	f8c0 314c 	str.w	r3, [r0, #332]	; 0x14c
 800395a:	2300      	movs	r3, #0
 800395c:	f8c0 3150 	str.w	r3, [r0, #336]	; 0x150
    pendingScreenTransitionCallback = &transitionCallback;
 8003960:	f500 73a2 	add.w	r3, r0, #324	; 0x144
 8003964:	f8c0 0148 	str.w	r0, [r0, #328]	; 0x148
 8003968:	f8c0 3140 	str.w	r3, [r0, #320]	; 0x140
}
 800396c:	4770      	bx	lr
 800396e:	bf00      	nop
 8003970:	08003789 	.word	0x08003789

08003974 <_ZN23FrontendApplicationBase37gotoMain_MenuScreenWipeTransitionWestEv>:
 8003974:	4b06      	ldr	r3, [pc, #24]	; (8003990 <_ZN23FrontendApplicationBase37gotoMain_MenuScreenWipeTransitionWestEv+0x1c>)
 8003976:	f8c0 314c 	str.w	r3, [r0, #332]	; 0x14c
 800397a:	2300      	movs	r3, #0
 800397c:	f8c0 3150 	str.w	r3, [r0, #336]	; 0x150
    pendingScreenTransitionCallback = &transitionCallback;
 8003980:	f500 73a2 	add.w	r3, r0, #324	; 0x144
 8003984:	f8c0 0148 	str.w	r0, [r0, #328]	; 0x148
 8003988:	f8c0 3140 	str.w	r3, [r0, #320]	; 0x140
}
 800398c:	4770      	bx	lr
 800398e:	bf00      	nop
 8003990:	08003f99 	.word	0x08003f99

08003994 <_ZN23FrontendApplicationBase39gotoMeasurementScreenWipeTransitionEastEv>:
 8003994:	4b06      	ldr	r3, [pc, #24]	; (80039b0 <_ZN23FrontendApplicationBase39gotoMeasurementScreenWipeTransitionEastEv+0x1c>)
 8003996:	f8c0 314c 	str.w	r3, [r0, #332]	; 0x14c
 800399a:	2300      	movs	r3, #0
 800399c:	f8c0 3150 	str.w	r3, [r0, #336]	; 0x150
    pendingScreenTransitionCallback = &transitionCallback;
 80039a0:	f500 73a2 	add.w	r3, r0, #324	; 0x144
 80039a4:	f8c0 0148 	str.w	r0, [r0, #328]	; 0x148
 80039a8:	f8c0 3140 	str.w	r3, [r0, #320]	; 0x140
}
 80039ac:	4770      	bx	lr
 80039ae:	bf00      	nop
 80039b0:	08004dbd 	.word	0x08004dbd

080039b4 <_ZN23FrontendApplicationBase39gotoMeasurementScreenWipeTransitionWestEv>:
 80039b4:	4b06      	ldr	r3, [pc, #24]	; (80039d0 <_ZN23FrontendApplicationBase39gotoMeasurementScreenWipeTransitionWestEv+0x1c>)
 80039b6:	f8c0 314c 	str.w	r3, [r0, #332]	; 0x14c
 80039ba:	2300      	movs	r3, #0
 80039bc:	f8c0 3150 	str.w	r3, [r0, #336]	; 0x150
    pendingScreenTransitionCallback = &transitionCallback;
 80039c0:	f500 73a2 	add.w	r3, r0, #324	; 0x144
 80039c4:	f8c0 0148 	str.w	r0, [r0, #328]	; 0x148
 80039c8:	f8c0 3140 	str.w	r3, [r0, #320]	; 0x140
}
 80039cc:	4770      	bx	lr
 80039ce:	bf00      	nop
 80039d0:	08003e59 	.word	0x08003e59

080039d4 <_ZN23FrontendApplicationBase46gotoMeasurement_SingleScreenWipeTransitionEastEv>:
 80039d4:	4b06      	ldr	r3, [pc, #24]	; (80039f0 <_ZN23FrontendApplicationBase46gotoMeasurement_SingleScreenWipeTransitionEastEv+0x1c>)
 80039d6:	f8c0 314c 	str.w	r3, [r0, #332]	; 0x14c
 80039da:	2300      	movs	r3, #0
 80039dc:	f8c0 3150 	str.w	r3, [r0, #336]	; 0x150
    pendingScreenTransitionCallback = &transitionCallback;
 80039e0:	f500 73a2 	add.w	r3, r0, #324	; 0x144
 80039e4:	f8c0 0148 	str.w	r0, [r0, #328]	; 0x148
 80039e8:	f8c0 3140 	str.w	r3, [r0, #320]	; 0x140
}
 80039ec:	4770      	bx	lr
 80039ee:	bf00      	nop
 80039f0:	08004c7d 	.word	0x08004c7d

080039f4 <_ZN23FrontendApplicationBase57gotoMeasurement_Single_Display_1PScreenWipeTransitionEastEv>:
 80039f4:	4b06      	ldr	r3, [pc, #24]	; (8003a10 <_ZN23FrontendApplicationBase57gotoMeasurement_Single_Display_1PScreenWipeTransitionEastEv+0x1c>)
 80039f6:	f8c0 314c 	str.w	r3, [r0, #332]	; 0x14c
 80039fa:	2300      	movs	r3, #0
 80039fc:	f8c0 3150 	str.w	r3, [r0, #336]	; 0x150
    pendingScreenTransitionCallback = &transitionCallback;
 8003a00:	f500 73a2 	add.w	r3, r0, #324	; 0x144
 8003a04:	f8c0 0148 	str.w	r0, [r0, #328]	; 0x148
 8003a08:	f8c0 3140 	str.w	r3, [r0, #320]	; 0x140
}
 8003a0c:	4770      	bx	lr
 8003a0e:	bf00      	nop
 8003a10:	08004b3d 	.word	0x08004b3d

08003a14 <_ZN23FrontendApplicationBase57gotoMeasurement_Single_Display_3PScreenWipeTransitionEastEv>:
 8003a14:	4b06      	ldr	r3, [pc, #24]	; (8003a30 <_ZN23FrontendApplicationBase57gotoMeasurement_Single_Display_3PScreenWipeTransitionEastEv+0x1c>)
 8003a16:	f8c0 314c 	str.w	r3, [r0, #332]	; 0x14c
 8003a1a:	2300      	movs	r3, #0
 8003a1c:	f8c0 3150 	str.w	r3, [r0, #336]	; 0x150
    pendingScreenTransitionCallback = &transitionCallback;
 8003a20:	f500 73a2 	add.w	r3, r0, #324	; 0x144
 8003a24:	f8c0 0148 	str.w	r0, [r0, #328]	; 0x148
 8003a28:	f8c0 3140 	str.w	r3, [r0, #320]	; 0x140
}
 8003a2c:	4770      	bx	lr
 8003a2e:	bf00      	nop
 8003a30:	080049fd 	.word	0x080049fd

08003a34 <_ZN23FrontendApplicationBase48gotoMeasurement_AccurateScreenWipeTransitionEastEv>:
 8003a34:	4b06      	ldr	r3, [pc, #24]	; (8003a50 <_ZN23FrontendApplicationBase48gotoMeasurement_AccurateScreenWipeTransitionEastEv+0x1c>)
 8003a36:	f8c0 314c 	str.w	r3, [r0, #332]	; 0x14c
 8003a3a:	2300      	movs	r3, #0
 8003a3c:	f8c0 3150 	str.w	r3, [r0, #336]	; 0x150
    pendingScreenTransitionCallback = &transitionCallback;
 8003a40:	f500 73a2 	add.w	r3, r0, #324	; 0x144
 8003a44:	f8c0 0148 	str.w	r0, [r0, #328]	; 0x148
 8003a48:	f8c0 3140 	str.w	r3, [r0, #320]	; 0x140
}
 8003a4c:	4770      	bx	lr
 8003a4e:	bf00      	nop
 8003a50:	080048bd 	.word	0x080048bd

08003a54 <_ZN23FrontendApplicationBase48gotoMeasurement_AccurateScreenWipeTransitionWestEv>:
 8003a54:	4b06      	ldr	r3, [pc, #24]	; (8003a70 <_ZN23FrontendApplicationBase48gotoMeasurement_AccurateScreenWipeTransitionWestEv+0x1c>)
 8003a56:	f8c0 314c 	str.w	r3, [r0, #332]	; 0x14c
 8003a5a:	2300      	movs	r3, #0
 8003a5c:	f8c0 3150 	str.w	r3, [r0, #336]	; 0x150
    pendingScreenTransitionCallback = &transitionCallback;
 8003a60:	f500 73a2 	add.w	r3, r0, #324	; 0x144
 8003a64:	f8c0 0148 	str.w	r0, [r0, #328]	; 0x148
 8003a68:	f8c0 3140 	str.w	r3, [r0, #320]	; 0x140
}
 8003a6c:	4770      	bx	lr
 8003a6e:	bf00      	nop
 8003a70:	08003d19 	.word	0x08003d19

08003a74 <_ZN23FrontendApplicationBase56gotoMeasurement_Accurate_DisplayScreenWipeTransitionEastEv>:
 8003a74:	4b06      	ldr	r3, [pc, #24]	; (8003a90 <_ZN23FrontendApplicationBase56gotoMeasurement_Accurate_DisplayScreenWipeTransitionEastEv+0x1c>)
 8003a76:	f8c0 314c 	str.w	r3, [r0, #332]	; 0x14c
 8003a7a:	2300      	movs	r3, #0
 8003a7c:	f8c0 3150 	str.w	r3, [r0, #336]	; 0x150
    pendingScreenTransitionCallback = &transitionCallback;
 8003a80:	f500 73a2 	add.w	r3, r0, #324	; 0x144
 8003a84:	f8c0 0148 	str.w	r0, [r0, #328]	; 0x148
 8003a88:	f8c0 3140 	str.w	r3, [r0, #320]	; 0x140
}
 8003a8c:	4770      	bx	lr
 8003a8e:	bf00      	nop
 8003a90:	0800477d 	.word	0x0800477d

08003a94 <_ZN23FrontendApplicationBase58gotoMeasurement_Accurate_Display_2ScreenWipeTransitionEastEv>:
 8003a94:	4b06      	ldr	r3, [pc, #24]	; (8003ab0 <_ZN23FrontendApplicationBase58gotoMeasurement_Accurate_Display_2ScreenWipeTransitionEastEv+0x1c>)
 8003a96:	f8c0 314c 	str.w	r3, [r0, #332]	; 0x14c
 8003a9a:	2300      	movs	r3, #0
 8003a9c:	f8c0 3150 	str.w	r3, [r0, #336]	; 0x150
    pendingScreenTransitionCallback = &transitionCallback;
 8003aa0:	f500 73a2 	add.w	r3, r0, #324	; 0x144
 8003aa4:	f8c0 0148 	str.w	r0, [r0, #328]	; 0x148
 8003aa8:	f8c0 3140 	str.w	r3, [r0, #320]	; 0x140
}
 8003aac:	4770      	bx	lr
 8003aae:	bf00      	nop
 8003ab0:	0800463d 	.word	0x0800463d

08003ab4 <_ZN23FrontendApplicationBase39gotoCalibrationScreenWipeTransitionEastEv>:
 8003ab4:	4b06      	ldr	r3, [pc, #24]	; (8003ad0 <_ZN23FrontendApplicationBase39gotoCalibrationScreenWipeTransitionEastEv+0x1c>)
 8003ab6:	f8c0 314c 	str.w	r3, [r0, #332]	; 0x14c
 8003aba:	2300      	movs	r3, #0
 8003abc:	f8c0 3150 	str.w	r3, [r0, #336]	; 0x150
    pendingScreenTransitionCallback = &transitionCallback;
 8003ac0:	f500 73a2 	add.w	r3, r0, #324	; 0x144
 8003ac4:	f8c0 0148 	str.w	r0, [r0, #328]	; 0x148
 8003ac8:	f8c0 3140 	str.w	r3, [r0, #320]	; 0x140
}
 8003acc:	4770      	bx	lr
 8003ace:	bf00      	nop
 8003ad0:	080044fd 	.word	0x080044fd

08003ad4 <_ZN23FrontendApplicationBase39gotoCalibrationScreenWipeTransitionWestEv>:
 8003ad4:	4b06      	ldr	r3, [pc, #24]	; (8003af0 <_ZN23FrontendApplicationBase39gotoCalibrationScreenWipeTransitionWestEv+0x1c>)
 8003ad6:	f8c0 314c 	str.w	r3, [r0, #332]	; 0x14c
 8003ada:	2300      	movs	r3, #0
 8003adc:	f8c0 3150 	str.w	r3, [r0, #336]	; 0x150
    pendingScreenTransitionCallback = &transitionCallback;
 8003ae0:	f500 73a2 	add.w	r3, r0, #324	; 0x144
 8003ae4:	f8c0 0148 	str.w	r0, [r0, #328]	; 0x148
 8003ae8:	f8c0 3140 	str.w	r3, [r0, #320]	; 0x140
}
 8003aec:	4770      	bx	lr
 8003aee:	bf00      	nop
 8003af0:	08003bd9 	.word	0x08003bd9

08003af4 <_ZN23FrontendApplicationBase43gotoCalibration_PadScreenWipeTransitionEastEv>:
 8003af4:	4b06      	ldr	r3, [pc, #24]	; (8003b10 <_ZN23FrontendApplicationBase43gotoCalibration_PadScreenWipeTransitionEastEv+0x1c>)
 8003af6:	f8c0 314c 	str.w	r3, [r0, #332]	; 0x14c
 8003afa:	2300      	movs	r3, #0
 8003afc:	f8c0 3150 	str.w	r3, [r0, #336]	; 0x150
    pendingScreenTransitionCallback = &transitionCallback;
 8003b00:	f500 73a2 	add.w	r3, r0, #324	; 0x144
 8003b04:	f8c0 0148 	str.w	r0, [r0, #328]	; 0x148
 8003b08:	f8c0 3140 	str.w	r3, [r0, #320]	; 0x140
}
 8003b0c:	4770      	bx	lr
 8003b0e:	bf00      	nop
 8003b10:	080043bd 	.word	0x080043bd

08003b14 <_ZN23FrontendApplicationBase44gotoCalibration_HallScreenWipeTransitionEastEv>:
 8003b14:	4b06      	ldr	r3, [pc, #24]	; (8003b30 <_ZN23FrontendApplicationBase44gotoCalibration_HallScreenWipeTransitionEastEv+0x1c>)
 8003b16:	f8c0 314c 	str.w	r3, [r0, #332]	; 0x14c
 8003b1a:	2300      	movs	r3, #0
 8003b1c:	f8c0 3150 	str.w	r3, [r0, #336]	; 0x150
    pendingScreenTransitionCallback = &transitionCallback;
 8003b20:	f500 73a2 	add.w	r3, r0, #324	; 0x144
 8003b24:	f8c0 0148 	str.w	r0, [r0, #328]	; 0x148
 8003b28:	f8c0 3140 	str.w	r3, [r0, #320]	; 0x140
}
 8003b2c:	4770      	bx	lr
 8003b2e:	bf00      	nop
 8003b30:	0800427d 	.word	0x0800427d

08003b34 <_ZN23FrontendApplicationBase40gotoProject_InfoScreenWipeTransitionEastEv>:
 8003b34:	4b06      	ldr	r3, [pc, #24]	; (8003b50 <_ZN23FrontendApplicationBase40gotoProject_InfoScreenWipeTransitionEastEv+0x1c>)
 8003b36:	f8c0 314c 	str.w	r3, [r0, #332]	; 0x14c
 8003b3a:	2300      	movs	r3, #0
 8003b3c:	f8c0 3150 	str.w	r3, [r0, #336]	; 0x150
    pendingScreenTransitionCallback = &transitionCallback;
 8003b40:	f500 73a2 	add.w	r3, r0, #324	; 0x144
 8003b44:	f8c0 0148 	str.w	r0, [r0, #328]	; 0x148
 8003b48:	f8c0 3140 	str.w	r3, [r0, #320]	; 0x140
}
 8003b4c:	4770      	bx	lr
 8003b4e:	bf00      	nop
 8003b50:	0800413d 	.word	0x0800413d

08003b54 <_ZN23FrontendApplicationBase34gotoShutting_OffScreenNoTransitionEv>:
 8003b54:	4b06      	ldr	r3, [pc, #24]	; (8003b70 <_ZN23FrontendApplicationBase34gotoShutting_OffScreenNoTransitionEv+0x1c>)
 8003b56:	f8c0 314c 	str.w	r3, [r0, #332]	; 0x14c
 8003b5a:	2300      	movs	r3, #0
 8003b5c:	f8c0 3150 	str.w	r3, [r0, #336]	; 0x150
    pendingScreenTransitionCallback = &transitionCallback;
 8003b60:	f500 73a2 	add.w	r3, r0, #324	; 0x144
 8003b64:	f8c0 0148 	str.w	r0, [r0, #328]	; 0x148
 8003b68:	f8c0 3140 	str.w	r3, [r0, #320]	; 0x140
}
 8003b6c:	4770      	bx	lr
 8003b6e:	bf00      	nop
 8003b70:	08003599 	.word	0x08003599

08003b74 <_ZN8touchgfx17AbstractPartition2atINS_14WipeTransitionILNS_9DirectionE3EEEEERT_t>:
 8003b74:	6803      	ldr	r3, [r0, #0]
 8003b76:	6a5b      	ldr	r3, [r3, #36]	; 0x24
 8003b78:	4718      	bx	r3
	...

08003b7c <_ZN8touchgfx14WipeTransitionILNS_9DirectionE3EEC1Eh>:
          solid()
 8003b7c:	4b12      	ldr	r3, [pc, #72]	; (8003bc8 <_ZN8touchgfx14WipeTransitionILNS_9DirectionE3EEC1Eh+0x4c>)
    WipeTransition(const uint8_t transitionSteps = 20)
 8003b7e:	b513      	push	{r0, r1, r4, lr}
          solid()
 8003b80:	6003      	str	r3, [r0, #0]
 8003b82:	f44f 7380 	mov.w	r3, #256	; 0x100
 8003b86:	6343      	str	r3, [r0, #52]	; 0x34
    class FullSolidRect : public Widget
 8003b88:	4b10      	ldr	r3, [pc, #64]	; (8003bcc <_ZN8touchgfx14WipeTransitionILNS_9DirectionE3EEC1Eh+0x50>)
          animationSteps(transitionSteps),
 8003b8a:	7241      	strb	r1, [r0, #9]
 8003b8c:	6103      	str	r3, [r0, #16]
        solid.setPosition(0, 0, HAL::DISPLAY_WIDTH, HAL::DISPLAY_HEIGHT);
 8003b8e:	4910      	ldr	r1, [pc, #64]	; (8003bd0 <_ZN8touchgfx14WipeTransitionILNS_9DirectionE3EEC1Eh+0x54>)
            targetValue = HAL::DISPLAY_WIDTH;
 8003b90:	4b10      	ldr	r3, [pc, #64]	; (8003bd4 <_ZN8touchgfx14WipeTransitionILNS_9DirectionE3EEC1Eh+0x58>)
        solid.setPosition(0, 0, HAL::DISPLAY_WIDTH, HAL::DISPLAY_HEIGHT);
 8003b92:	f9b1 1000 	ldrsh.w	r1, [r1]
            targetValue = HAL::DISPLAY_WIDTH;
 8003b96:	f9b3 3000 	ldrsh.w	r3, [r3]
 8003b9a:	8183      	strh	r3, [r0, #12]
        : screenContainer(0), done(false)
 8003b9c:	2200      	movs	r2, #0
 8003b9e:	6042      	str	r2, [r0, #4]
 8003ba0:	7202      	strb	r2, [r0, #8]
          animationCounter(0),
 8003ba2:	7282      	strb	r2, [r0, #10]
          calculatedValue(0),
 8003ba4:	81c2      	strh	r2, [r0, #14]
          solid()
 8003ba6:	e9c0 2205 	strd	r2, r2, [r0, #20]
 8003baa:	e9c0 2207 	strd	r2, r2, [r0, #28]
 8003bae:	e9c0 2209 	strd	r2, r2, [r0, #36]	; 0x24
 8003bb2:	e9c0 220b 	strd	r2, r2, [r0, #44]	; 0x2c
    WipeTransition(const uint8_t transitionSteps = 20)
 8003bb6:	4604      	mov	r4, r0
        solid.setPosition(0, 0, HAL::DISPLAY_WIDTH, HAL::DISPLAY_HEIGHT);
 8003bb8:	9100      	str	r1, [sp, #0]
 8003bba:	3010      	adds	r0, #16
 8003bbc:	4611      	mov	r1, r2
 8003bbe:	f7fe fddf 	bl	8002780 <_ZN8touchgfx8Drawable11setPositionEssss>
    }
 8003bc2:	4620      	mov	r0, r4
 8003bc4:	b002      	add	sp, #8
 8003bc6:	bd10      	pop	{r4, pc}
 8003bc8:	0802d450 	.word	0x0802d450
 8003bcc:	0802d334 	.word	0x0802d334
 8003bd0:	20012f1a 	.word	0x20012f1a
 8003bd4:	20012f18 	.word	0x20012f18

08003bd8 <_ZN23FrontendApplicationBase43gotoCalibrationScreenWipeTransitionWestImplEv>:
{
 8003bd8:	e92d 47f0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, lr}
    touchgfx::makeTransition<CalibrationView, CalibrationPresenter, touchgfx::WipeTransition<WEST>, Model >(&currentScreen, &currentPresenter, frontendHeap, &currentTransition, &model);
 8003bdc:	e9d0 4a55 	ldrd	r4, sl, [r0, #340]	; 0x154
{
 8003be0:	4607      	mov	r7, r0
    assert(sizeof(ScreenType) <= heap.screenStorage.element_size() && "View allocation error: Check that all views are added to FrontendHeap::ViewTypes");
 8003be2:	68a0      	ldr	r0, [r4, #8]
 8003be4:	6803      	ldr	r3, [r0, #0]
 8003be6:	6a1b      	ldr	r3, [r3, #32]
 8003be8:	4798      	blx	r3
 8003bea:	f5b0 5f8a 	cmp.w	r0, #4416	; 0x1140
 8003bee:	d205      	bcs.n	8003bfc <_ZN23FrontendApplicationBase43gotoCalibrationScreenWipeTransitionWestImplEv+0x24>
 8003bf0:	4b42      	ldr	r3, [pc, #264]	; (8003cfc <_ZN23FrontendApplicationBase43gotoCalibrationScreenWipeTransitionWestImplEv+0x124>)
 8003bf2:	4a43      	ldr	r2, [pc, #268]	; (8003d00 <_ZN23FrontendApplicationBase43gotoCalibrationScreenWipeTransitionWestImplEv+0x128>)
 8003bf4:	21a3      	movs	r1, #163	; 0xa3
    assert(sizeof(PresenterType) <= heap.presenterStorage.element_size() && "Presenter allocation error: Check that all presenters are added to FrontendHeap::PresenterTypes");
 8003bf6:	4843      	ldr	r0, [pc, #268]	; (8003d04 <_ZN23FrontendApplicationBase43gotoCalibrationScreenWipeTransitionWestImplEv+0x12c>)
 8003bf8:	f026 fa24 	bl	802a044 <__assert_func>
 8003bfc:	6860      	ldr	r0, [r4, #4]
 8003bfe:	6803      	ldr	r3, [r0, #0]
 8003c00:	6a1b      	ldr	r3, [r3, #32]
 8003c02:	4798      	blx	r3
 8003c04:	280f      	cmp	r0, #15
 8003c06:	d803      	bhi.n	8003c10 <_ZN23FrontendApplicationBase43gotoCalibrationScreenWipeTransitionWestImplEv+0x38>
 8003c08:	4b3f      	ldr	r3, [pc, #252]	; (8003d08 <_ZN23FrontendApplicationBase43gotoCalibrationScreenWipeTransitionWestImplEv+0x130>)
 8003c0a:	4a3d      	ldr	r2, [pc, #244]	; (8003d00 <_ZN23FrontendApplicationBase43gotoCalibrationScreenWipeTransitionWestImplEv+0x128>)
 8003c0c:	21a4      	movs	r1, #164	; 0xa4
 8003c0e:	e7f2      	b.n	8003bf6 <_ZN23FrontendApplicationBase43gotoCalibrationScreenWipeTransitionWestImplEv+0x1e>
    assert(sizeof(TransType) <= heap.transitionStorage.element_size() && "Transition allocation error: Check that all transitions are added to FrontendHeap::TransitionTypes");
 8003c10:	68e0      	ldr	r0, [r4, #12]
 8003c12:	6803      	ldr	r3, [r0, #0]
 8003c14:	6a1b      	ldr	r3, [r3, #32]
 8003c16:	4798      	blx	r3
 8003c18:	2837      	cmp	r0, #55	; 0x37
 8003c1a:	d803      	bhi.n	8003c24 <_ZN23FrontendApplicationBase43gotoCalibrationScreenWipeTransitionWestImplEv+0x4c>
 8003c1c:	4b3b      	ldr	r3, [pc, #236]	; (8003d0c <_ZN23FrontendApplicationBase43gotoCalibrationScreenWipeTransitionWestImplEv+0x134>)
 8003c1e:	4a38      	ldr	r2, [pc, #224]	; (8003d00 <_ZN23FrontendApplicationBase43gotoCalibrationScreenWipeTransitionWestImplEv+0x128>)
 8003c20:	21a5      	movs	r1, #165	; 0xa5
 8003c22:	e7e8      	b.n	8003bf6 <_ZN23FrontendApplicationBase43gotoCalibrationScreenWipeTransitionWestImplEv+0x1e>
    Application::getInstance()->clearAllTimerWidgets();
 8003c24:	f011 fb84 	bl	8015330 <_ZN8touchgfx11Application11getInstanceEv>
    if (*currentTrans)
 8003c28:	f8df 90e4 	ldr.w	r9, [pc, #228]	; 8003d10 <_ZN23FrontendApplicationBase43gotoCalibrationScreenWipeTransitionWestImplEv+0x138>
 8003c2c:	3004      	adds	r0, #4
 8003c2e:	f011 fbe5 	bl	80153fc <_ZN8touchgfx11Application12TimerWidgets5clearEv>
 8003c32:	f8d9 0000 	ldr.w	r0, [r9]
 8003c36:	b110      	cbz	r0, 8003c3e <_ZN23FrontendApplicationBase43gotoCalibrationScreenWipeTransitionWestImplEv+0x66>
        (*currentTrans)->tearDown();
 8003c38:	6803      	ldr	r3, [r0, #0]
 8003c3a:	68db      	ldr	r3, [r3, #12]
 8003c3c:	4798      	blx	r3
    if (*currentTrans)
 8003c3e:	f8d9 0000 	ldr.w	r0, [r9]
 8003c42:	b110      	cbz	r0, 8003c4a <_ZN23FrontendApplicationBase43gotoCalibrationScreenWipeTransitionWestImplEv+0x72>
        (*currentTrans)->~Transition();
 8003c44:	6803      	ldr	r3, [r0, #0]
 8003c46:	681b      	ldr	r3, [r3, #0]
 8003c48:	4798      	blx	r3
    if (*currentScreen)
 8003c4a:	f8df 80c8 	ldr.w	r8, [pc, #200]	; 8003d14 <_ZN23FrontendApplicationBase43gotoCalibrationScreenWipeTransitionWestImplEv+0x13c>
 8003c4e:	f8d8 0000 	ldr.w	r0, [r8]
 8003c52:	b110      	cbz	r0, 8003c5a <_ZN23FrontendApplicationBase43gotoCalibrationScreenWipeTransitionWestImplEv+0x82>
        (*currentScreen)->tearDownScreen();
 8003c54:	6803      	ldr	r3, [r0, #0]
 8003c56:	695b      	ldr	r3, [r3, #20]
 8003c58:	4798      	blx	r3
    if (*currentPresenter)
 8003c5a:	f8d7 013c 	ldr.w	r0, [r7, #316]	; 0x13c
 8003c5e:	b110      	cbz	r0, 8003c66 <_ZN23FrontendApplicationBase43gotoCalibrationScreenWipeTransitionWestImplEv+0x8e>
        (*currentPresenter)->deactivate();
 8003c60:	6803      	ldr	r3, [r0, #0]
 8003c62:	685b      	ldr	r3, [r3, #4]
 8003c64:	4798      	blx	r3
    if (*currentScreen)
 8003c66:	f8d8 0000 	ldr.w	r0, [r8]
 8003c6a:	b110      	cbz	r0, 8003c72 <_ZN23FrontendApplicationBase43gotoCalibrationScreenWipeTransitionWestImplEv+0x9a>
        (*currentScreen)->~Screen();
 8003c6c:	6803      	ldr	r3, [r0, #0]
 8003c6e:	681b      	ldr	r3, [r3, #0]
 8003c70:	4798      	blx	r3
    if (*currentPresenter)
 8003c72:	f8d7 013c 	ldr.w	r0, [r7, #316]	; 0x13c
 8003c76:	b110      	cbz	r0, 8003c7e <_ZN23FrontendApplicationBase43gotoCalibrationScreenWipeTransitionWestImplEv+0xa6>
        (*currentPresenter)->~Presenter();
 8003c78:	6803      	ldr	r3, [r0, #0]
 8003c7a:	689b      	ldr	r3, [r3, #8]
 8003c7c:	4798      	blx	r3
    TransType* newTransition = new (&heap.transitionStorage.at<TransType>(0)) TransType;
 8003c7e:	68e0      	ldr	r0, [r4, #12]
 8003c80:	2100      	movs	r1, #0
 8003c82:	f7ff ff77 	bl	8003b74 <_ZN8touchgfx17AbstractPartition2atINS_14WipeTransitionILNS_9DirectionE3EEEEERT_t>
 8003c86:	2114      	movs	r1, #20
 8003c88:	4605      	mov	r5, r0
 8003c8a:	f7ff ff77 	bl	8003b7c <_ZN8touchgfx14WipeTransitionILNS_9DirectionE3EEC1Eh>
    ScreenType* newScreen = new (&heap.screenStorage.at<ScreenType>(0)) ScreenType;
 8003c8e:	68a0      	ldr	r0, [r4, #8]
 8003c90:	6803      	ldr	r3, [r0, #0]
 8003c92:	2100      	movs	r1, #0
 8003c94:	6a5b      	ldr	r3, [r3, #36]	; 0x24
 8003c96:	4798      	blx	r3
 8003c98:	4606      	mov	r6, r0
 8003c9a:	f004 fac9 	bl	8008230 <_ZN15CalibrationViewC1Ev>
    PresenterType* newPresenter = new (&heap.presenterStorage.at<PresenterType>(0)) PresenterType(*newScreen);
 8003c9e:	6860      	ldr	r0, [r4, #4]
 8003ca0:	6803      	ldr	r3, [r0, #0]
 8003ca2:	2100      	movs	r1, #0
 8003ca4:	6a5b      	ldr	r3, [r3, #36]	; 0x24
 8003ca6:	4798      	blx	r3
 8003ca8:	4631      	mov	r1, r6
 8003caa:	4604      	mov	r4, r0
 8003cac:	f004 fa9a 	bl	80081e4 <_ZN20CalibrationPresenterC1ER15CalibrationView>
    *currentTrans = newTransition;
 8003cb0:	f8c9 5000 	str.w	r5, [r9]
    *currentPresenter = newPresenter;
 8003cb4:	f8c7 413c 	str.w	r4, [r7, #316]	; 0x13c
    *currentScreen = newScreen;
 8003cb8:	f8c8 6000 	str.w	r6, [r8]
    model->bind(newPresenter);
 8003cbc:	b1dc      	cbz	r4, 8003cf6 <_ZN23FrontendApplicationBase43gotoCalibrationScreenWipeTransitionWestImplEv+0x11e>
 8003cbe:	1d23      	adds	r3, r4, #4
 8003cc0:	f8ca 3000 	str.w	r3, [sl]
    newScreen->setupScreen();
 8003cc4:	6833      	ldr	r3, [r6, #0]
 8003cc6:	f8c4 a008 	str.w	sl, [r4, #8]
 8003cca:	4630      	mov	r0, r6
 8003ccc:	68db      	ldr	r3, [r3, #12]
 8003cce:	63f4      	str	r4, [r6, #60]	; 0x3c
 8003cd0:	4798      	blx	r3
    newPresenter->activate();
 8003cd2:	6823      	ldr	r3, [r4, #0]
 8003cd4:	4620      	mov	r0, r4
 8003cd6:	681b      	ldr	r3, [r3, #0]
 8003cd8:	4798      	blx	r3
    newScreen->bindTransition(*newTransition);
 8003cda:	4629      	mov	r1, r5
 8003cdc:	4630      	mov	r0, r6
 8003cde:	f013 f953 	bl	8016f88 <_ZN8touchgfx6Screen14bindTransitionERNS_10TransitionE>
    newTransition->init();
 8003ce2:	682b      	ldr	r3, [r5, #0]
 8003ce4:	4628      	mov	r0, r5
 8003ce6:	691b      	ldr	r3, [r3, #16]
 8003ce8:	4798      	blx	r3
    newTransition->invalidate();
 8003cea:	682b      	ldr	r3, [r5, #0]
 8003cec:	4628      	mov	r0, r5
 8003cee:	695b      	ldr	r3, [r3, #20]
}
 8003cf0:	e8bd 47f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, lr}
 8003cf4:	4718      	bx	r3
    model->bind(newPresenter);
 8003cf6:	4623      	mov	r3, r4
 8003cf8:	e7e2      	b.n	8003cc0 <_ZN23FrontendApplicationBase43gotoCalibrationScreenWipeTransitionWestImplEv+0xe8>
 8003cfa:	bf00      	nop
 8003cfc:	0802bd64 	.word	0x0802bd64
 8003d00:	0802c195 	.word	0x0802c195
 8003d04:	0802bf00 	.word	0x0802bf00
 8003d08:	0802bf47 	.word	0x0802bf47
 8003d0c:	0802bfea 	.word	0x0802bfea
 8003d10:	20012f6c 	.word	0x20012f6c
 8003d14:	20012f68 	.word	0x20012f68

08003d18 <_ZN23FrontendApplicationBase52gotoMeasurement_AccurateScreenWipeTransitionWestImplEv>:
{
 8003d18:	e92d 47f0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, lr}
    touchgfx::makeTransition<Measurement_AccurateView, Measurement_AccuratePresenter, touchgfx::WipeTransition<WEST>, Model >(&currentScreen, &currentPresenter, frontendHeap, &currentTransition, &model);
 8003d1c:	e9d0 4a55 	ldrd	r4, sl, [r0, #340]	; 0x154
{
 8003d20:	4607      	mov	r7, r0
    assert(sizeof(ScreenType) <= heap.screenStorage.element_size() && "View allocation error: Check that all views are added to FrontendHeap::ViewTypes");
 8003d22:	68a0      	ldr	r0, [r4, #8]
 8003d24:	6803      	ldr	r3, [r0, #0]
 8003d26:	6a1b      	ldr	r3, [r3, #32]
 8003d28:	4798      	blx	r3
 8003d2a:	f5b0 5f8a 	cmp.w	r0, #4416	; 0x1140
 8003d2e:	d205      	bcs.n	8003d3c <_ZN23FrontendApplicationBase52gotoMeasurement_AccurateScreenWipeTransitionWestImplEv+0x24>
 8003d30:	4b42      	ldr	r3, [pc, #264]	; (8003e3c <_ZN23FrontendApplicationBase52gotoMeasurement_AccurateScreenWipeTransitionWestImplEv+0x124>)
 8003d32:	4a43      	ldr	r2, [pc, #268]	; (8003e40 <_ZN23FrontendApplicationBase52gotoMeasurement_AccurateScreenWipeTransitionWestImplEv+0x128>)
 8003d34:	21a3      	movs	r1, #163	; 0xa3
    assert(sizeof(PresenterType) <= heap.presenterStorage.element_size() && "Presenter allocation error: Check that all presenters are added to FrontendHeap::PresenterTypes");
 8003d36:	4843      	ldr	r0, [pc, #268]	; (8003e44 <_ZN23FrontendApplicationBase52gotoMeasurement_AccurateScreenWipeTransitionWestImplEv+0x12c>)
 8003d38:	f026 f984 	bl	802a044 <__assert_func>
 8003d3c:	6860      	ldr	r0, [r4, #4]
 8003d3e:	6803      	ldr	r3, [r0, #0]
 8003d40:	6a1b      	ldr	r3, [r3, #32]
 8003d42:	4798      	blx	r3
 8003d44:	280f      	cmp	r0, #15
 8003d46:	d803      	bhi.n	8003d50 <_ZN23FrontendApplicationBase52gotoMeasurement_AccurateScreenWipeTransitionWestImplEv+0x38>
 8003d48:	4b3f      	ldr	r3, [pc, #252]	; (8003e48 <_ZN23FrontendApplicationBase52gotoMeasurement_AccurateScreenWipeTransitionWestImplEv+0x130>)
 8003d4a:	4a3d      	ldr	r2, [pc, #244]	; (8003e40 <_ZN23FrontendApplicationBase52gotoMeasurement_AccurateScreenWipeTransitionWestImplEv+0x128>)
 8003d4c:	21a4      	movs	r1, #164	; 0xa4
 8003d4e:	e7f2      	b.n	8003d36 <_ZN23FrontendApplicationBase52gotoMeasurement_AccurateScreenWipeTransitionWestImplEv+0x1e>
    assert(sizeof(TransType) <= heap.transitionStorage.element_size() && "Transition allocation error: Check that all transitions are added to FrontendHeap::TransitionTypes");
 8003d50:	68e0      	ldr	r0, [r4, #12]
 8003d52:	6803      	ldr	r3, [r0, #0]
 8003d54:	6a1b      	ldr	r3, [r3, #32]
 8003d56:	4798      	blx	r3
 8003d58:	2837      	cmp	r0, #55	; 0x37
 8003d5a:	d803      	bhi.n	8003d64 <_ZN23FrontendApplicationBase52gotoMeasurement_AccurateScreenWipeTransitionWestImplEv+0x4c>
 8003d5c:	4b3b      	ldr	r3, [pc, #236]	; (8003e4c <_ZN23FrontendApplicationBase52gotoMeasurement_AccurateScreenWipeTransitionWestImplEv+0x134>)
 8003d5e:	4a38      	ldr	r2, [pc, #224]	; (8003e40 <_ZN23FrontendApplicationBase52gotoMeasurement_AccurateScreenWipeTransitionWestImplEv+0x128>)
 8003d60:	21a5      	movs	r1, #165	; 0xa5
 8003d62:	e7e8      	b.n	8003d36 <_ZN23FrontendApplicationBase52gotoMeasurement_AccurateScreenWipeTransitionWestImplEv+0x1e>
    Application::getInstance()->clearAllTimerWidgets();
 8003d64:	f011 fae4 	bl	8015330 <_ZN8touchgfx11Application11getInstanceEv>
    if (*currentTrans)
 8003d68:	f8df 90e4 	ldr.w	r9, [pc, #228]	; 8003e50 <_ZN23FrontendApplicationBase52gotoMeasurement_AccurateScreenWipeTransitionWestImplEv+0x138>
 8003d6c:	3004      	adds	r0, #4
 8003d6e:	f011 fb45 	bl	80153fc <_ZN8touchgfx11Application12TimerWidgets5clearEv>
 8003d72:	f8d9 0000 	ldr.w	r0, [r9]
 8003d76:	b110      	cbz	r0, 8003d7e <_ZN23FrontendApplicationBase52gotoMeasurement_AccurateScreenWipeTransitionWestImplEv+0x66>
        (*currentTrans)->tearDown();
 8003d78:	6803      	ldr	r3, [r0, #0]
 8003d7a:	68db      	ldr	r3, [r3, #12]
 8003d7c:	4798      	blx	r3
    if (*currentTrans)
 8003d7e:	f8d9 0000 	ldr.w	r0, [r9]
 8003d82:	b110      	cbz	r0, 8003d8a <_ZN23FrontendApplicationBase52gotoMeasurement_AccurateScreenWipeTransitionWestImplEv+0x72>
        (*currentTrans)->~Transition();
 8003d84:	6803      	ldr	r3, [r0, #0]
 8003d86:	681b      	ldr	r3, [r3, #0]
 8003d88:	4798      	blx	r3
    if (*currentScreen)
 8003d8a:	f8df 80c8 	ldr.w	r8, [pc, #200]	; 8003e54 <_ZN23FrontendApplicationBase52gotoMeasurement_AccurateScreenWipeTransitionWestImplEv+0x13c>
 8003d8e:	f8d8 0000 	ldr.w	r0, [r8]
 8003d92:	b110      	cbz	r0, 8003d9a <_ZN23FrontendApplicationBase52gotoMeasurement_AccurateScreenWipeTransitionWestImplEv+0x82>
        (*currentScreen)->tearDownScreen();
 8003d94:	6803      	ldr	r3, [r0, #0]
 8003d96:	695b      	ldr	r3, [r3, #20]
 8003d98:	4798      	blx	r3
    if (*currentPresenter)
 8003d9a:	f8d7 013c 	ldr.w	r0, [r7, #316]	; 0x13c
 8003d9e:	b110      	cbz	r0, 8003da6 <_ZN23FrontendApplicationBase52gotoMeasurement_AccurateScreenWipeTransitionWestImplEv+0x8e>
        (*currentPresenter)->deactivate();
 8003da0:	6803      	ldr	r3, [r0, #0]
 8003da2:	685b      	ldr	r3, [r3, #4]
 8003da4:	4798      	blx	r3
    if (*currentScreen)
 8003da6:	f8d8 0000 	ldr.w	r0, [r8]
 8003daa:	b110      	cbz	r0, 8003db2 <_ZN23FrontendApplicationBase52gotoMeasurement_AccurateScreenWipeTransitionWestImplEv+0x9a>
        (*currentScreen)->~Screen();
 8003dac:	6803      	ldr	r3, [r0, #0]
 8003dae:	681b      	ldr	r3, [r3, #0]
 8003db0:	4798      	blx	r3
    if (*currentPresenter)
 8003db2:	f8d7 013c 	ldr.w	r0, [r7, #316]	; 0x13c
 8003db6:	b110      	cbz	r0, 8003dbe <_ZN23FrontendApplicationBase52gotoMeasurement_AccurateScreenWipeTransitionWestImplEv+0xa6>
        (*currentPresenter)->~Presenter();
 8003db8:	6803      	ldr	r3, [r0, #0]
 8003dba:	689b      	ldr	r3, [r3, #8]
 8003dbc:	4798      	blx	r3
    TransType* newTransition = new (&heap.transitionStorage.at<TransType>(0)) TransType;
 8003dbe:	68e0      	ldr	r0, [r4, #12]
 8003dc0:	2100      	movs	r1, #0
 8003dc2:	f7ff fed7 	bl	8003b74 <_ZN8touchgfx17AbstractPartition2atINS_14WipeTransitionILNS_9DirectionE3EEEEERT_t>
 8003dc6:	2114      	movs	r1, #20
 8003dc8:	4605      	mov	r5, r0
 8003dca:	f7ff fed7 	bl	8003b7c <_ZN8touchgfx14WipeTransitionILNS_9DirectionE3EEC1Eh>
    ScreenType* newScreen = new (&heap.screenStorage.at<ScreenType>(0)) ScreenType;
 8003dce:	68a0      	ldr	r0, [r4, #8]
 8003dd0:	6803      	ldr	r3, [r0, #0]
 8003dd2:	2100      	movs	r1, #0
 8003dd4:	6a5b      	ldr	r3, [r3, #36]	; 0x24
 8003dd6:	4798      	blx	r3
 8003dd8:	4606      	mov	r6, r0
 8003dda:	f004 fc0d 	bl	80085f8 <_ZN24Measurement_AccurateViewC1Ev>
    PresenterType* newPresenter = new (&heap.presenterStorage.at<PresenterType>(0)) PresenterType(*newScreen);
 8003dde:	6860      	ldr	r0, [r4, #4]
 8003de0:	6803      	ldr	r3, [r0, #0]
 8003de2:	2100      	movs	r1, #0
 8003de4:	6a5b      	ldr	r3, [r3, #36]	; 0x24
 8003de6:	4798      	blx	r3
 8003de8:	4631      	mov	r1, r6
 8003dea:	4604      	mov	r4, r0
 8003dec:	f004 fbde 	bl	80085ac <_ZN29Measurement_AccuratePresenterC1ER24Measurement_AccurateView>
    *currentTrans = newTransition;
 8003df0:	f8c9 5000 	str.w	r5, [r9]
    *currentPresenter = newPresenter;
 8003df4:	f8c7 413c 	str.w	r4, [r7, #316]	; 0x13c
    *currentScreen = newScreen;
 8003df8:	f8c8 6000 	str.w	r6, [r8]
    model->bind(newPresenter);
 8003dfc:	b1dc      	cbz	r4, 8003e36 <_ZN23FrontendApplicationBase52gotoMeasurement_AccurateScreenWipeTransitionWestImplEv+0x11e>
 8003dfe:	1d23      	adds	r3, r4, #4
 8003e00:	f8ca 3000 	str.w	r3, [sl]
    newScreen->setupScreen();
 8003e04:	6833      	ldr	r3, [r6, #0]
 8003e06:	f8c4 a008 	str.w	sl, [r4, #8]
 8003e0a:	4630      	mov	r0, r6
 8003e0c:	68db      	ldr	r3, [r3, #12]
 8003e0e:	63f4      	str	r4, [r6, #60]	; 0x3c
 8003e10:	4798      	blx	r3
    newPresenter->activate();
 8003e12:	6823      	ldr	r3, [r4, #0]
 8003e14:	4620      	mov	r0, r4
 8003e16:	681b      	ldr	r3, [r3, #0]
 8003e18:	4798      	blx	r3
    newScreen->bindTransition(*newTransition);
 8003e1a:	4629      	mov	r1, r5
 8003e1c:	4630      	mov	r0, r6
 8003e1e:	f013 f8b3 	bl	8016f88 <_ZN8touchgfx6Screen14bindTransitionERNS_10TransitionE>
    newTransition->init();
 8003e22:	682b      	ldr	r3, [r5, #0]
 8003e24:	4628      	mov	r0, r5
 8003e26:	691b      	ldr	r3, [r3, #16]
 8003e28:	4798      	blx	r3
    newTransition->invalidate();
 8003e2a:	682b      	ldr	r3, [r5, #0]
 8003e2c:	4628      	mov	r0, r5
 8003e2e:	695b      	ldr	r3, [r3, #20]
}
 8003e30:	e8bd 47f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, lr}
 8003e34:	4718      	bx	r3
    model->bind(newPresenter);
 8003e36:	4623      	mov	r3, r4
 8003e38:	e7e2      	b.n	8003e00 <_ZN23FrontendApplicationBase52gotoMeasurement_AccurateScreenWipeTransitionWestImplEv+0xe8>
 8003e3a:	bf00      	nop
 8003e3c:	0802bd64 	.word	0x0802bd64
 8003e40:	0802c2b3 	.word	0x0802c2b3
 8003e44:	0802bf00 	.word	0x0802bf00
 8003e48:	0802bf47 	.word	0x0802bf47
 8003e4c:	0802bfea 	.word	0x0802bfea
 8003e50:	20012f6c 	.word	0x20012f6c
 8003e54:	20012f68 	.word	0x20012f68

08003e58 <_ZN23FrontendApplicationBase43gotoMeasurementScreenWipeTransitionWestImplEv>:
{
 8003e58:	e92d 47f0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, lr}
    touchgfx::makeTransition<MeasurementView, MeasurementPresenter, touchgfx::WipeTransition<WEST>, Model >(&currentScreen, &currentPresenter, frontendHeap, &currentTransition, &model);
 8003e5c:	e9d0 4a55 	ldrd	r4, sl, [r0, #340]	; 0x154
{
 8003e60:	4607      	mov	r7, r0
    assert(sizeof(ScreenType) <= heap.screenStorage.element_size() && "View allocation error: Check that all views are added to FrontendHeap::ViewTypes");
 8003e62:	68a0      	ldr	r0, [r4, #8]
 8003e64:	6803      	ldr	r3, [r0, #0]
 8003e66:	6a1b      	ldr	r3, [r3, #32]
 8003e68:	4798      	blx	r3
 8003e6a:	f5b0 5f8a 	cmp.w	r0, #4416	; 0x1140
 8003e6e:	d205      	bcs.n	8003e7c <_ZN23FrontendApplicationBase43gotoMeasurementScreenWipeTransitionWestImplEv+0x24>
 8003e70:	4b42      	ldr	r3, [pc, #264]	; (8003f7c <_ZN23FrontendApplicationBase43gotoMeasurementScreenWipeTransitionWestImplEv+0x124>)
 8003e72:	4a43      	ldr	r2, [pc, #268]	; (8003f80 <_ZN23FrontendApplicationBase43gotoMeasurementScreenWipeTransitionWestImplEv+0x128>)
 8003e74:	21a3      	movs	r1, #163	; 0xa3
    assert(sizeof(PresenterType) <= heap.presenterStorage.element_size() && "Presenter allocation error: Check that all presenters are added to FrontendHeap::PresenterTypes");
 8003e76:	4843      	ldr	r0, [pc, #268]	; (8003f84 <_ZN23FrontendApplicationBase43gotoMeasurementScreenWipeTransitionWestImplEv+0x12c>)
 8003e78:	f026 f8e4 	bl	802a044 <__assert_func>
 8003e7c:	6860      	ldr	r0, [r4, #4]
 8003e7e:	6803      	ldr	r3, [r0, #0]
 8003e80:	6a1b      	ldr	r3, [r3, #32]
 8003e82:	4798      	blx	r3
 8003e84:	280f      	cmp	r0, #15
 8003e86:	d803      	bhi.n	8003e90 <_ZN23FrontendApplicationBase43gotoMeasurementScreenWipeTransitionWestImplEv+0x38>
 8003e88:	4b3f      	ldr	r3, [pc, #252]	; (8003f88 <_ZN23FrontendApplicationBase43gotoMeasurementScreenWipeTransitionWestImplEv+0x130>)
 8003e8a:	4a3d      	ldr	r2, [pc, #244]	; (8003f80 <_ZN23FrontendApplicationBase43gotoMeasurementScreenWipeTransitionWestImplEv+0x128>)
 8003e8c:	21a4      	movs	r1, #164	; 0xa4
 8003e8e:	e7f2      	b.n	8003e76 <_ZN23FrontendApplicationBase43gotoMeasurementScreenWipeTransitionWestImplEv+0x1e>
    assert(sizeof(TransType) <= heap.transitionStorage.element_size() && "Transition allocation error: Check that all transitions are added to FrontendHeap::TransitionTypes");
 8003e90:	68e0      	ldr	r0, [r4, #12]
 8003e92:	6803      	ldr	r3, [r0, #0]
 8003e94:	6a1b      	ldr	r3, [r3, #32]
 8003e96:	4798      	blx	r3
 8003e98:	2837      	cmp	r0, #55	; 0x37
 8003e9a:	d803      	bhi.n	8003ea4 <_ZN23FrontendApplicationBase43gotoMeasurementScreenWipeTransitionWestImplEv+0x4c>
 8003e9c:	4b3b      	ldr	r3, [pc, #236]	; (8003f8c <_ZN23FrontendApplicationBase43gotoMeasurementScreenWipeTransitionWestImplEv+0x134>)
 8003e9e:	4a38      	ldr	r2, [pc, #224]	; (8003f80 <_ZN23FrontendApplicationBase43gotoMeasurementScreenWipeTransitionWestImplEv+0x128>)
 8003ea0:	21a5      	movs	r1, #165	; 0xa5
 8003ea2:	e7e8      	b.n	8003e76 <_ZN23FrontendApplicationBase43gotoMeasurementScreenWipeTransitionWestImplEv+0x1e>
    Application::getInstance()->clearAllTimerWidgets();
 8003ea4:	f011 fa44 	bl	8015330 <_ZN8touchgfx11Application11getInstanceEv>
    if (*currentTrans)
 8003ea8:	f8df 90e4 	ldr.w	r9, [pc, #228]	; 8003f90 <_ZN23FrontendApplicationBase43gotoMeasurementScreenWipeTransitionWestImplEv+0x138>
 8003eac:	3004      	adds	r0, #4
 8003eae:	f011 faa5 	bl	80153fc <_ZN8touchgfx11Application12TimerWidgets5clearEv>
 8003eb2:	f8d9 0000 	ldr.w	r0, [r9]
 8003eb6:	b110      	cbz	r0, 8003ebe <_ZN23FrontendApplicationBase43gotoMeasurementScreenWipeTransitionWestImplEv+0x66>
        (*currentTrans)->tearDown();
 8003eb8:	6803      	ldr	r3, [r0, #0]
 8003eba:	68db      	ldr	r3, [r3, #12]
 8003ebc:	4798      	blx	r3
    if (*currentTrans)
 8003ebe:	f8d9 0000 	ldr.w	r0, [r9]
 8003ec2:	b110      	cbz	r0, 8003eca <_ZN23FrontendApplicationBase43gotoMeasurementScreenWipeTransitionWestImplEv+0x72>
        (*currentTrans)->~Transition();
 8003ec4:	6803      	ldr	r3, [r0, #0]
 8003ec6:	681b      	ldr	r3, [r3, #0]
 8003ec8:	4798      	blx	r3
    if (*currentScreen)
 8003eca:	f8df 80c8 	ldr.w	r8, [pc, #200]	; 8003f94 <_ZN23FrontendApplicationBase43gotoMeasurementScreenWipeTransitionWestImplEv+0x13c>
 8003ece:	f8d8 0000 	ldr.w	r0, [r8]
 8003ed2:	b110      	cbz	r0, 8003eda <_ZN23FrontendApplicationBase43gotoMeasurementScreenWipeTransitionWestImplEv+0x82>
        (*currentScreen)->tearDownScreen();
 8003ed4:	6803      	ldr	r3, [r0, #0]
 8003ed6:	695b      	ldr	r3, [r3, #20]
 8003ed8:	4798      	blx	r3
    if (*currentPresenter)
 8003eda:	f8d7 013c 	ldr.w	r0, [r7, #316]	; 0x13c
 8003ede:	b110      	cbz	r0, 8003ee6 <_ZN23FrontendApplicationBase43gotoMeasurementScreenWipeTransitionWestImplEv+0x8e>
        (*currentPresenter)->deactivate();
 8003ee0:	6803      	ldr	r3, [r0, #0]
 8003ee2:	685b      	ldr	r3, [r3, #4]
 8003ee4:	4798      	blx	r3
    if (*currentScreen)
 8003ee6:	f8d8 0000 	ldr.w	r0, [r8]
 8003eea:	b110      	cbz	r0, 8003ef2 <_ZN23FrontendApplicationBase43gotoMeasurementScreenWipeTransitionWestImplEv+0x9a>
        (*currentScreen)->~Screen();
 8003eec:	6803      	ldr	r3, [r0, #0]
 8003eee:	681b      	ldr	r3, [r3, #0]
 8003ef0:	4798      	blx	r3
    if (*currentPresenter)
 8003ef2:	f8d7 013c 	ldr.w	r0, [r7, #316]	; 0x13c
 8003ef6:	b110      	cbz	r0, 8003efe <_ZN23FrontendApplicationBase43gotoMeasurementScreenWipeTransitionWestImplEv+0xa6>
        (*currentPresenter)->~Presenter();
 8003ef8:	6803      	ldr	r3, [r0, #0]
 8003efa:	689b      	ldr	r3, [r3, #8]
 8003efc:	4798      	blx	r3
    TransType* newTransition = new (&heap.transitionStorage.at<TransType>(0)) TransType;
 8003efe:	68e0      	ldr	r0, [r4, #12]
 8003f00:	2100      	movs	r1, #0
 8003f02:	f7ff fe37 	bl	8003b74 <_ZN8touchgfx17AbstractPartition2atINS_14WipeTransitionILNS_9DirectionE3EEEEERT_t>
 8003f06:	2114      	movs	r1, #20
 8003f08:	4605      	mov	r5, r0
 8003f0a:	f7ff fe37 	bl	8003b7c <_ZN8touchgfx14WipeTransitionILNS_9DirectionE3EEC1Eh>
    ScreenType* newScreen = new (&heap.screenStorage.at<ScreenType>(0)) ScreenType;
 8003f0e:	68a0      	ldr	r0, [r4, #8]
 8003f10:	6803      	ldr	r3, [r0, #0]
 8003f12:	2100      	movs	r1, #0
 8003f14:	6a5b      	ldr	r3, [r3, #36]	; 0x24
 8003f16:	4798      	blx	r3
 8003f18:	4606      	mov	r6, r0
 8003f1a:	f004 fb0d 	bl	8008538 <_ZN15MeasurementViewC1Ev>
    PresenterType* newPresenter = new (&heap.presenterStorage.at<PresenterType>(0)) PresenterType(*newScreen);
 8003f1e:	6860      	ldr	r0, [r4, #4]
 8003f20:	6803      	ldr	r3, [r0, #0]
 8003f22:	2100      	movs	r1, #0
 8003f24:	6a5b      	ldr	r3, [r3, #36]	; 0x24
 8003f26:	4798      	blx	r3
 8003f28:	4631      	mov	r1, r6
 8003f2a:	4604      	mov	r4, r0
 8003f2c:	f004 fade 	bl	80084ec <_ZN20MeasurementPresenterC1ER15MeasurementView>
    *currentTrans = newTransition;
 8003f30:	f8c9 5000 	str.w	r5, [r9]
    *currentPresenter = newPresenter;
 8003f34:	f8c7 413c 	str.w	r4, [r7, #316]	; 0x13c
    *currentScreen = newScreen;
 8003f38:	f8c8 6000 	str.w	r6, [r8]
    model->bind(newPresenter);
 8003f3c:	b1dc      	cbz	r4, 8003f76 <_ZN23FrontendApplicationBase43gotoMeasurementScreenWipeTransitionWestImplEv+0x11e>
 8003f3e:	1d23      	adds	r3, r4, #4
 8003f40:	f8ca 3000 	str.w	r3, [sl]
    newScreen->setupScreen();
 8003f44:	6833      	ldr	r3, [r6, #0]
 8003f46:	f8c4 a008 	str.w	sl, [r4, #8]
 8003f4a:	4630      	mov	r0, r6
 8003f4c:	68db      	ldr	r3, [r3, #12]
 8003f4e:	63f4      	str	r4, [r6, #60]	; 0x3c
 8003f50:	4798      	blx	r3
    newPresenter->activate();
 8003f52:	6823      	ldr	r3, [r4, #0]
 8003f54:	4620      	mov	r0, r4
 8003f56:	681b      	ldr	r3, [r3, #0]
 8003f58:	4798      	blx	r3
    newScreen->bindTransition(*newTransition);
 8003f5a:	4629      	mov	r1, r5
 8003f5c:	4630      	mov	r0, r6
 8003f5e:	f013 f813 	bl	8016f88 <_ZN8touchgfx6Screen14bindTransitionERNS_10TransitionE>
    newTransition->init();
 8003f62:	682b      	ldr	r3, [r5, #0]
 8003f64:	4628      	mov	r0, r5
 8003f66:	691b      	ldr	r3, [r3, #16]
 8003f68:	4798      	blx	r3
    newTransition->invalidate();
 8003f6a:	682b      	ldr	r3, [r5, #0]
 8003f6c:	4628      	mov	r0, r5
 8003f6e:	695b      	ldr	r3, [r3, #20]
}
 8003f70:	e8bd 47f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, lr}
 8003f74:	4718      	bx	r3
    model->bind(newPresenter);
 8003f76:	4623      	mov	r3, r4
 8003f78:	e7e2      	b.n	8003f40 <_ZN23FrontendApplicationBase43gotoMeasurementScreenWipeTransitionWestImplEv+0xe8>
 8003f7a:	bf00      	nop
 8003f7c:	0802bd64 	.word	0x0802bd64
 8003f80:	0802c3e3 	.word	0x0802c3e3
 8003f84:	0802bf00 	.word	0x0802bf00
 8003f88:	0802bf47 	.word	0x0802bf47
 8003f8c:	0802bfea 	.word	0x0802bfea
 8003f90:	20012f6c 	.word	0x20012f6c
 8003f94:	20012f68 	.word	0x20012f68

08003f98 <_ZN23FrontendApplicationBase41gotoMain_MenuScreenWipeTransitionWestImplEv>:
{
 8003f98:	e92d 47f0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, lr}
    touchgfx::makeTransition<Main_MenuView, Main_MenuPresenter, touchgfx::WipeTransition<WEST>, Model >(&currentScreen, &currentPresenter, frontendHeap, &currentTransition, &model);
 8003f9c:	e9d0 4a55 	ldrd	r4, sl, [r0, #340]	; 0x154
{
 8003fa0:	4607      	mov	r7, r0
    assert(sizeof(ScreenType) <= heap.screenStorage.element_size() && "View allocation error: Check that all views are added to FrontendHeap::ViewTypes");
 8003fa2:	68a0      	ldr	r0, [r4, #8]
 8003fa4:	6803      	ldr	r3, [r0, #0]
 8003fa6:	6a1b      	ldr	r3, [r3, #32]
 8003fa8:	4798      	blx	r3
 8003faa:	f241 137b 	movw	r3, #4475	; 0x117b
 8003fae:	4298      	cmp	r0, r3
 8003fb0:	d805      	bhi.n	8003fbe <_ZN23FrontendApplicationBase41gotoMain_MenuScreenWipeTransitionWestImplEv+0x26>
 8003fb2:	4b42      	ldr	r3, [pc, #264]	; (80040bc <_ZN23FrontendApplicationBase41gotoMain_MenuScreenWipeTransitionWestImplEv+0x124>)
 8003fb4:	4a42      	ldr	r2, [pc, #264]	; (80040c0 <_ZN23FrontendApplicationBase41gotoMain_MenuScreenWipeTransitionWestImplEv+0x128>)
 8003fb6:	21a3      	movs	r1, #163	; 0xa3
    assert(sizeof(PresenterType) <= heap.presenterStorage.element_size() && "Presenter allocation error: Check that all presenters are added to FrontendHeap::PresenterTypes");
 8003fb8:	4842      	ldr	r0, [pc, #264]	; (80040c4 <_ZN23FrontendApplicationBase41gotoMain_MenuScreenWipeTransitionWestImplEv+0x12c>)
 8003fba:	f026 f843 	bl	802a044 <__assert_func>
 8003fbe:	6860      	ldr	r0, [r4, #4]
 8003fc0:	6803      	ldr	r3, [r0, #0]
 8003fc2:	6a1b      	ldr	r3, [r3, #32]
 8003fc4:	4798      	blx	r3
 8003fc6:	280f      	cmp	r0, #15
 8003fc8:	d803      	bhi.n	8003fd2 <_ZN23FrontendApplicationBase41gotoMain_MenuScreenWipeTransitionWestImplEv+0x3a>
 8003fca:	4b3f      	ldr	r3, [pc, #252]	; (80040c8 <_ZN23FrontendApplicationBase41gotoMain_MenuScreenWipeTransitionWestImplEv+0x130>)
 8003fcc:	4a3c      	ldr	r2, [pc, #240]	; (80040c0 <_ZN23FrontendApplicationBase41gotoMain_MenuScreenWipeTransitionWestImplEv+0x128>)
 8003fce:	21a4      	movs	r1, #164	; 0xa4
 8003fd0:	e7f2      	b.n	8003fb8 <_ZN23FrontendApplicationBase41gotoMain_MenuScreenWipeTransitionWestImplEv+0x20>
    assert(sizeof(TransType) <= heap.transitionStorage.element_size() && "Transition allocation error: Check that all transitions are added to FrontendHeap::TransitionTypes");
 8003fd2:	68e0      	ldr	r0, [r4, #12]
 8003fd4:	6803      	ldr	r3, [r0, #0]
 8003fd6:	6a1b      	ldr	r3, [r3, #32]
 8003fd8:	4798      	blx	r3
 8003fda:	2837      	cmp	r0, #55	; 0x37
 8003fdc:	d803      	bhi.n	8003fe6 <_ZN23FrontendApplicationBase41gotoMain_MenuScreenWipeTransitionWestImplEv+0x4e>
 8003fde:	4b3b      	ldr	r3, [pc, #236]	; (80040cc <_ZN23FrontendApplicationBase41gotoMain_MenuScreenWipeTransitionWestImplEv+0x134>)
 8003fe0:	4a37      	ldr	r2, [pc, #220]	; (80040c0 <_ZN23FrontendApplicationBase41gotoMain_MenuScreenWipeTransitionWestImplEv+0x128>)
 8003fe2:	21a5      	movs	r1, #165	; 0xa5
 8003fe4:	e7e8      	b.n	8003fb8 <_ZN23FrontendApplicationBase41gotoMain_MenuScreenWipeTransitionWestImplEv+0x20>
    Application::getInstance()->clearAllTimerWidgets();
 8003fe6:	f011 f9a3 	bl	8015330 <_ZN8touchgfx11Application11getInstanceEv>
    if (*currentTrans)
 8003fea:	f8df 90e4 	ldr.w	r9, [pc, #228]	; 80040d0 <_ZN23FrontendApplicationBase41gotoMain_MenuScreenWipeTransitionWestImplEv+0x138>
 8003fee:	3004      	adds	r0, #4
 8003ff0:	f011 fa04 	bl	80153fc <_ZN8touchgfx11Application12TimerWidgets5clearEv>
 8003ff4:	f8d9 0000 	ldr.w	r0, [r9]
 8003ff8:	b110      	cbz	r0, 8004000 <_ZN23FrontendApplicationBase41gotoMain_MenuScreenWipeTransitionWestImplEv+0x68>
        (*currentTrans)->tearDown();
 8003ffa:	6803      	ldr	r3, [r0, #0]
 8003ffc:	68db      	ldr	r3, [r3, #12]
 8003ffe:	4798      	blx	r3
    if (*currentTrans)
 8004000:	f8d9 0000 	ldr.w	r0, [r9]
 8004004:	b110      	cbz	r0, 800400c <_ZN23FrontendApplicationBase41gotoMain_MenuScreenWipeTransitionWestImplEv+0x74>
        (*currentTrans)->~Transition();
 8004006:	6803      	ldr	r3, [r0, #0]
 8004008:	681b      	ldr	r3, [r3, #0]
 800400a:	4798      	blx	r3
    if (*currentScreen)
 800400c:	f8df 80c4 	ldr.w	r8, [pc, #196]	; 80040d4 <_ZN23FrontendApplicationBase41gotoMain_MenuScreenWipeTransitionWestImplEv+0x13c>
 8004010:	f8d8 0000 	ldr.w	r0, [r8]
 8004014:	b110      	cbz	r0, 800401c <_ZN23FrontendApplicationBase41gotoMain_MenuScreenWipeTransitionWestImplEv+0x84>
        (*currentScreen)->tearDownScreen();
 8004016:	6803      	ldr	r3, [r0, #0]
 8004018:	695b      	ldr	r3, [r3, #20]
 800401a:	4798      	blx	r3
    if (*currentPresenter)
 800401c:	f8d7 013c 	ldr.w	r0, [r7, #316]	; 0x13c
 8004020:	b110      	cbz	r0, 8004028 <_ZN23FrontendApplicationBase41gotoMain_MenuScreenWipeTransitionWestImplEv+0x90>
        (*currentPresenter)->deactivate();
 8004022:	6803      	ldr	r3, [r0, #0]
 8004024:	685b      	ldr	r3, [r3, #4]
 8004026:	4798      	blx	r3
    if (*currentScreen)
 8004028:	f8d8 0000 	ldr.w	r0, [r8]
 800402c:	b110      	cbz	r0, 8004034 <_ZN23FrontendApplicationBase41gotoMain_MenuScreenWipeTransitionWestImplEv+0x9c>
        (*currentScreen)->~Screen();
 800402e:	6803      	ldr	r3, [r0, #0]
 8004030:	681b      	ldr	r3, [r3, #0]
 8004032:	4798      	blx	r3
    if (*currentPresenter)
 8004034:	f8d7 013c 	ldr.w	r0, [r7, #316]	; 0x13c
 8004038:	b110      	cbz	r0, 8004040 <_ZN23FrontendApplicationBase41gotoMain_MenuScreenWipeTransitionWestImplEv+0xa8>
        (*currentPresenter)->~Presenter();
 800403a:	6803      	ldr	r3, [r0, #0]
 800403c:	689b      	ldr	r3, [r3, #8]
 800403e:	4798      	blx	r3
    TransType* newTransition = new (&heap.transitionStorage.at<TransType>(0)) TransType;
 8004040:	68e0      	ldr	r0, [r4, #12]
 8004042:	2100      	movs	r1, #0
 8004044:	f7ff fd96 	bl	8003b74 <_ZN8touchgfx17AbstractPartition2atINS_14WipeTransitionILNS_9DirectionE3EEEEERT_t>
 8004048:	2114      	movs	r1, #20
 800404a:	4605      	mov	r5, r0
 800404c:	f7ff fd96 	bl	8003b7c <_ZN8touchgfx14WipeTransitionILNS_9DirectionE3EEC1Eh>
    ScreenType* newScreen = new (&heap.screenStorage.at<ScreenType>(0)) ScreenType;
 8004050:	68a0      	ldr	r0, [r4, #8]
 8004052:	6803      	ldr	r3, [r0, #0]
 8004054:	2100      	movs	r1, #0
 8004056:	6a5b      	ldr	r3, [r3, #36]	; 0x24
 8004058:	4798      	blx	r3
 800405a:	4606      	mov	r6, r0
 800405c:	f004 fa0c 	bl	8008478 <_ZN13Main_MenuViewC1Ev>
    PresenterType* newPresenter = new (&heap.presenterStorage.at<PresenterType>(0)) PresenterType(*newScreen);
 8004060:	6860      	ldr	r0, [r4, #4]
 8004062:	6803      	ldr	r3, [r0, #0]
 8004064:	2100      	movs	r1, #0
 8004066:	6a5b      	ldr	r3, [r3, #36]	; 0x24
 8004068:	4798      	blx	r3
 800406a:	4631      	mov	r1, r6
 800406c:	4604      	mov	r4, r0
 800406e:	f004 f9dd 	bl	800842c <_ZN18Main_MenuPresenterC1ER13Main_MenuView>
    *currentTrans = newTransition;
 8004072:	f8c9 5000 	str.w	r5, [r9]
    *currentPresenter = newPresenter;
 8004076:	f8c7 413c 	str.w	r4, [r7, #316]	; 0x13c
    *currentScreen = newScreen;
 800407a:	f8c8 6000 	str.w	r6, [r8]
    model->bind(newPresenter);
 800407e:	b1dc      	cbz	r4, 80040b8 <_ZN23FrontendApplicationBase41gotoMain_MenuScreenWipeTransitionWestImplEv+0x120>
 8004080:	1d23      	adds	r3, r4, #4
 8004082:	f8ca 3000 	str.w	r3, [sl]
    newScreen->setupScreen();
 8004086:	6833      	ldr	r3, [r6, #0]
 8004088:	f8c4 a008 	str.w	sl, [r4, #8]
 800408c:	4630      	mov	r0, r6
 800408e:	68db      	ldr	r3, [r3, #12]
 8004090:	63f4      	str	r4, [r6, #60]	; 0x3c
 8004092:	4798      	blx	r3
    newPresenter->activate();
 8004094:	6823      	ldr	r3, [r4, #0]
 8004096:	4620      	mov	r0, r4
 8004098:	681b      	ldr	r3, [r3, #0]
 800409a:	4798      	blx	r3
    newScreen->bindTransition(*newTransition);
 800409c:	4629      	mov	r1, r5
 800409e:	4630      	mov	r0, r6
 80040a0:	f012 ff72 	bl	8016f88 <_ZN8touchgfx6Screen14bindTransitionERNS_10TransitionE>
    newTransition->init();
 80040a4:	682b      	ldr	r3, [r5, #0]
 80040a6:	4628      	mov	r0, r5
 80040a8:	691b      	ldr	r3, [r3, #16]
 80040aa:	4798      	blx	r3
    newTransition->invalidate();
 80040ac:	682b      	ldr	r3, [r5, #0]
 80040ae:	4628      	mov	r0, r5
 80040b0:	695b      	ldr	r3, [r3, #20]
}
 80040b2:	e8bd 47f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, lr}
 80040b6:	4718      	bx	r3
    model->bind(newPresenter);
 80040b8:	4623      	mov	r3, r4
 80040ba:	e7e2      	b.n	8004082 <_ZN23FrontendApplicationBase41gotoMain_MenuScreenWipeTransitionWestImplEv+0xea>
 80040bc:	0802bd64 	.word	0x0802bd64
 80040c0:	0802c501 	.word	0x0802c501
 80040c4:	0802bf00 	.word	0x0802bf00
 80040c8:	0802bf47 	.word	0x0802bf47
 80040cc:	0802bfea 	.word	0x0802bfea
 80040d0:	20012f6c 	.word	0x20012f6c
 80040d4:	20012f68 	.word	0x20012f68

080040d8 <_ZN8touchgfx17AbstractPartition2atINS_14WipeTransitionILNS_9DirectionE2EEEEERT_t>:
 80040d8:	6803      	ldr	r3, [r0, #0]
 80040da:	6a5b      	ldr	r3, [r3, #36]	; 0x24
 80040dc:	4718      	bx	r3
	...

080040e0 <_ZN8touchgfx14WipeTransitionILNS_9DirectionE2EEC1Eh>:
          solid()
 80040e0:	4b12      	ldr	r3, [pc, #72]	; (800412c <_ZN8touchgfx14WipeTransitionILNS_9DirectionE2EEC1Eh+0x4c>)
    WipeTransition(const uint8_t transitionSteps = 20)
 80040e2:	b513      	push	{r0, r1, r4, lr}
          solid()
 80040e4:	6003      	str	r3, [r0, #0]
 80040e6:	f44f 7380 	mov.w	r3, #256	; 0x100
 80040ea:	6343      	str	r3, [r0, #52]	; 0x34
    class FullSolidRect : public Widget
 80040ec:	4b10      	ldr	r3, [pc, #64]	; (8004130 <_ZN8touchgfx14WipeTransitionILNS_9DirectionE2EEC1Eh+0x50>)
          animationSteps(transitionSteps),
 80040ee:	7241      	strb	r1, [r0, #9]
 80040f0:	6103      	str	r3, [r0, #16]
        solid.setPosition(0, 0, HAL::DISPLAY_WIDTH, HAL::DISPLAY_HEIGHT);
 80040f2:	4910      	ldr	r1, [pc, #64]	; (8004134 <_ZN8touchgfx14WipeTransitionILNS_9DirectionE2EEC1Eh+0x54>)
            targetValue = HAL::DISPLAY_WIDTH;
 80040f4:	4b10      	ldr	r3, [pc, #64]	; (8004138 <_ZN8touchgfx14WipeTransitionILNS_9DirectionE2EEC1Eh+0x58>)
        solid.setPosition(0, 0, HAL::DISPLAY_WIDTH, HAL::DISPLAY_HEIGHT);
 80040f6:	f9b1 1000 	ldrsh.w	r1, [r1]
            targetValue = HAL::DISPLAY_WIDTH;
 80040fa:	f9b3 3000 	ldrsh.w	r3, [r3]
 80040fe:	8183      	strh	r3, [r0, #12]
        : screenContainer(0), done(false)
 8004100:	2200      	movs	r2, #0
 8004102:	6042      	str	r2, [r0, #4]
 8004104:	7202      	strb	r2, [r0, #8]
          animationCounter(0),
 8004106:	7282      	strb	r2, [r0, #10]
          calculatedValue(0),
 8004108:	81c2      	strh	r2, [r0, #14]
          solid()
 800410a:	e9c0 2205 	strd	r2, r2, [r0, #20]
 800410e:	e9c0 2207 	strd	r2, r2, [r0, #28]
 8004112:	e9c0 2209 	strd	r2, r2, [r0, #36]	; 0x24
 8004116:	e9c0 220b 	strd	r2, r2, [r0, #44]	; 0x2c
    WipeTransition(const uint8_t transitionSteps = 20)
 800411a:	4604      	mov	r4, r0
        solid.setPosition(0, 0, HAL::DISPLAY_WIDTH, HAL::DISPLAY_HEIGHT);
 800411c:	9100      	str	r1, [sp, #0]
 800411e:	3010      	adds	r0, #16
 8004120:	4611      	mov	r1, r2
 8004122:	f7fe fb2d 	bl	8002780 <_ZN8touchgfx8Drawable11setPositionEssss>
    }
 8004126:	4620      	mov	r0, r4
 8004128:	b002      	add	sp, #8
 800412a:	bd10      	pop	{r4, pc}
 800412c:	0802d42c 	.word	0x0802d42c
 8004130:	0802d334 	.word	0x0802d334
 8004134:	20012f1a 	.word	0x20012f1a
 8004138:	20012f18 	.word	0x20012f18

0800413c <_ZN23FrontendApplicationBase44gotoProject_InfoScreenWipeTransitionEastImplEv>:
{
 800413c:	e92d 47f0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, lr}
    touchgfx::makeTransition<Project_InfoView, Project_InfoPresenter, touchgfx::WipeTransition<EAST>, Model >(&currentScreen, &currentPresenter, frontendHeap, &currentTransition, &model);
 8004140:	e9d0 4a55 	ldrd	r4, sl, [r0, #340]	; 0x154
{
 8004144:	4607      	mov	r7, r0
    assert(sizeof(ScreenType) <= heap.screenStorage.element_size() && "View allocation error: Check that all views are added to FrontendHeap::ViewTypes");
 8004146:	68a0      	ldr	r0, [r4, #8]
 8004148:	6803      	ldr	r3, [r0, #0]
 800414a:	6a1b      	ldr	r3, [r3, #32]
 800414c:	4798      	blx	r3
 800414e:	f241 03af 	movw	r3, #4271	; 0x10af
 8004152:	4298      	cmp	r0, r3
 8004154:	d805      	bhi.n	8004162 <_ZN23FrontendApplicationBase44gotoProject_InfoScreenWipeTransitionEastImplEv+0x26>
 8004156:	4b42      	ldr	r3, [pc, #264]	; (8004260 <_ZN23FrontendApplicationBase44gotoProject_InfoScreenWipeTransitionEastImplEv+0x124>)
 8004158:	4a42      	ldr	r2, [pc, #264]	; (8004264 <_ZN23FrontendApplicationBase44gotoProject_InfoScreenWipeTransitionEastImplEv+0x128>)
 800415a:	21a3      	movs	r1, #163	; 0xa3
    assert(sizeof(PresenterType) <= heap.presenterStorage.element_size() && "Presenter allocation error: Check that all presenters are added to FrontendHeap::PresenterTypes");
 800415c:	4842      	ldr	r0, [pc, #264]	; (8004268 <_ZN23FrontendApplicationBase44gotoProject_InfoScreenWipeTransitionEastImplEv+0x12c>)
 800415e:	f025 ff71 	bl	802a044 <__assert_func>
 8004162:	6860      	ldr	r0, [r4, #4]
 8004164:	6803      	ldr	r3, [r0, #0]
 8004166:	6a1b      	ldr	r3, [r3, #32]
 8004168:	4798      	blx	r3
 800416a:	280f      	cmp	r0, #15
 800416c:	d803      	bhi.n	8004176 <_ZN23FrontendApplicationBase44gotoProject_InfoScreenWipeTransitionEastImplEv+0x3a>
 800416e:	4b3f      	ldr	r3, [pc, #252]	; (800426c <_ZN23FrontendApplicationBase44gotoProject_InfoScreenWipeTransitionEastImplEv+0x130>)
 8004170:	4a3c      	ldr	r2, [pc, #240]	; (8004264 <_ZN23FrontendApplicationBase44gotoProject_InfoScreenWipeTransitionEastImplEv+0x128>)
 8004172:	21a4      	movs	r1, #164	; 0xa4
 8004174:	e7f2      	b.n	800415c <_ZN23FrontendApplicationBase44gotoProject_InfoScreenWipeTransitionEastImplEv+0x20>
    assert(sizeof(TransType) <= heap.transitionStorage.element_size() && "Transition allocation error: Check that all transitions are added to FrontendHeap::TransitionTypes");
 8004176:	68e0      	ldr	r0, [r4, #12]
 8004178:	6803      	ldr	r3, [r0, #0]
 800417a:	6a1b      	ldr	r3, [r3, #32]
 800417c:	4798      	blx	r3
 800417e:	2837      	cmp	r0, #55	; 0x37
 8004180:	d803      	bhi.n	800418a <_ZN23FrontendApplicationBase44gotoProject_InfoScreenWipeTransitionEastImplEv+0x4e>
 8004182:	4b3b      	ldr	r3, [pc, #236]	; (8004270 <_ZN23FrontendApplicationBase44gotoProject_InfoScreenWipeTransitionEastImplEv+0x134>)
 8004184:	4a37      	ldr	r2, [pc, #220]	; (8004264 <_ZN23FrontendApplicationBase44gotoProject_InfoScreenWipeTransitionEastImplEv+0x128>)
 8004186:	21a5      	movs	r1, #165	; 0xa5
 8004188:	e7e8      	b.n	800415c <_ZN23FrontendApplicationBase44gotoProject_InfoScreenWipeTransitionEastImplEv+0x20>
    Application::getInstance()->clearAllTimerWidgets();
 800418a:	f011 f8d1 	bl	8015330 <_ZN8touchgfx11Application11getInstanceEv>
    if (*currentTrans)
 800418e:	f8df 90e4 	ldr.w	r9, [pc, #228]	; 8004274 <_ZN23FrontendApplicationBase44gotoProject_InfoScreenWipeTransitionEastImplEv+0x138>
 8004192:	3004      	adds	r0, #4
 8004194:	f011 f932 	bl	80153fc <_ZN8touchgfx11Application12TimerWidgets5clearEv>
 8004198:	f8d9 0000 	ldr.w	r0, [r9]
 800419c:	b110      	cbz	r0, 80041a4 <_ZN23FrontendApplicationBase44gotoProject_InfoScreenWipeTransitionEastImplEv+0x68>
        (*currentTrans)->tearDown();
 800419e:	6803      	ldr	r3, [r0, #0]
 80041a0:	68db      	ldr	r3, [r3, #12]
 80041a2:	4798      	blx	r3
    if (*currentTrans)
 80041a4:	f8d9 0000 	ldr.w	r0, [r9]
 80041a8:	b110      	cbz	r0, 80041b0 <_ZN23FrontendApplicationBase44gotoProject_InfoScreenWipeTransitionEastImplEv+0x74>
        (*currentTrans)->~Transition();
 80041aa:	6803      	ldr	r3, [r0, #0]
 80041ac:	681b      	ldr	r3, [r3, #0]
 80041ae:	4798      	blx	r3
    if (*currentScreen)
 80041b0:	f8df 80c4 	ldr.w	r8, [pc, #196]	; 8004278 <_ZN23FrontendApplicationBase44gotoProject_InfoScreenWipeTransitionEastImplEv+0x13c>
 80041b4:	f8d8 0000 	ldr.w	r0, [r8]
 80041b8:	b110      	cbz	r0, 80041c0 <_ZN23FrontendApplicationBase44gotoProject_InfoScreenWipeTransitionEastImplEv+0x84>
        (*currentScreen)->tearDownScreen();
 80041ba:	6803      	ldr	r3, [r0, #0]
 80041bc:	695b      	ldr	r3, [r3, #20]
 80041be:	4798      	blx	r3
    if (*currentPresenter)
 80041c0:	f8d7 013c 	ldr.w	r0, [r7, #316]	; 0x13c
 80041c4:	b110      	cbz	r0, 80041cc <_ZN23FrontendApplicationBase44gotoProject_InfoScreenWipeTransitionEastImplEv+0x90>
        (*currentPresenter)->deactivate();
 80041c6:	6803      	ldr	r3, [r0, #0]
 80041c8:	685b      	ldr	r3, [r3, #4]
 80041ca:	4798      	blx	r3
    if (*currentScreen)
 80041cc:	f8d8 0000 	ldr.w	r0, [r8]
 80041d0:	b110      	cbz	r0, 80041d8 <_ZN23FrontendApplicationBase44gotoProject_InfoScreenWipeTransitionEastImplEv+0x9c>
        (*currentScreen)->~Screen();
 80041d2:	6803      	ldr	r3, [r0, #0]
 80041d4:	681b      	ldr	r3, [r3, #0]
 80041d6:	4798      	blx	r3
    if (*currentPresenter)
 80041d8:	f8d7 013c 	ldr.w	r0, [r7, #316]	; 0x13c
 80041dc:	b110      	cbz	r0, 80041e4 <_ZN23FrontendApplicationBase44gotoProject_InfoScreenWipeTransitionEastImplEv+0xa8>
        (*currentPresenter)->~Presenter();
 80041de:	6803      	ldr	r3, [r0, #0]
 80041e0:	689b      	ldr	r3, [r3, #8]
 80041e2:	4798      	blx	r3
    TransType* newTransition = new (&heap.transitionStorage.at<TransType>(0)) TransType;
 80041e4:	68e0      	ldr	r0, [r4, #12]
 80041e6:	2100      	movs	r1, #0
 80041e8:	f7ff ff76 	bl	80040d8 <_ZN8touchgfx17AbstractPartition2atINS_14WipeTransitionILNS_9DirectionE2EEEEERT_t>
 80041ec:	2114      	movs	r1, #20
 80041ee:	4605      	mov	r5, r0
 80041f0:	f7ff ff76 	bl	80040e0 <_ZN8touchgfx14WipeTransitionILNS_9DirectionE2EEC1Eh>
    ScreenType* newScreen = new (&heap.screenStorage.at<ScreenType>(0)) ScreenType;
 80041f4:	68a0      	ldr	r0, [r4, #8]
 80041f6:	6803      	ldr	r3, [r0, #0]
 80041f8:	2100      	movs	r1, #0
 80041fa:	6a5b      	ldr	r3, [r3, #36]	; 0x24
 80041fc:	4798      	blx	r3
 80041fe:	4606      	mov	r6, r0
 8004200:	f004 fc26 	bl	8008a50 <_ZN16Project_InfoViewC1Ev>
    PresenterType* newPresenter = new (&heap.presenterStorage.at<PresenterType>(0)) PresenterType(*newScreen);
 8004204:	6860      	ldr	r0, [r4, #4]
 8004206:	6803      	ldr	r3, [r0, #0]
 8004208:	2100      	movs	r1, #0
 800420a:	6a5b      	ldr	r3, [r3, #36]	; 0x24
 800420c:	4798      	blx	r3
 800420e:	4631      	mov	r1, r6
 8004210:	4604      	mov	r4, r0
 8004212:	f004 fbf7 	bl	8008a04 <_ZN21Project_InfoPresenterC1ER16Project_InfoView>
    *currentTrans = newTransition;
 8004216:	f8c9 5000 	str.w	r5, [r9]
    *currentPresenter = newPresenter;
 800421a:	f8c7 413c 	str.w	r4, [r7, #316]	; 0x13c
    *currentScreen = newScreen;
 800421e:	f8c8 6000 	str.w	r6, [r8]
    model->bind(newPresenter);
 8004222:	b1dc      	cbz	r4, 800425c <_ZN23FrontendApplicationBase44gotoProject_InfoScreenWipeTransitionEastImplEv+0x120>
 8004224:	1d23      	adds	r3, r4, #4
 8004226:	f8ca 3000 	str.w	r3, [sl]
    newScreen->setupScreen();
 800422a:	6833      	ldr	r3, [r6, #0]
 800422c:	f8c4 a008 	str.w	sl, [r4, #8]
 8004230:	4630      	mov	r0, r6
 8004232:	68db      	ldr	r3, [r3, #12]
 8004234:	63f4      	str	r4, [r6, #60]	; 0x3c
 8004236:	4798      	blx	r3
    newPresenter->activate();
 8004238:	6823      	ldr	r3, [r4, #0]
 800423a:	4620      	mov	r0, r4
 800423c:	681b      	ldr	r3, [r3, #0]
 800423e:	4798      	blx	r3
    newScreen->bindTransition(*newTransition);
 8004240:	4629      	mov	r1, r5
 8004242:	4630      	mov	r0, r6
 8004244:	f012 fea0 	bl	8016f88 <_ZN8touchgfx6Screen14bindTransitionERNS_10TransitionE>
    newTransition->init();
 8004248:	682b      	ldr	r3, [r5, #0]
 800424a:	4628      	mov	r0, r5
 800424c:	691b      	ldr	r3, [r3, #16]
 800424e:	4798      	blx	r3
    newTransition->invalidate();
 8004250:	682b      	ldr	r3, [r5, #0]
 8004252:	4628      	mov	r0, r5
 8004254:	695b      	ldr	r3, [r3, #20]
}
 8004256:	e8bd 47f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, lr}
 800425a:	4718      	bx	r3
    model->bind(newPresenter);
 800425c:	4623      	mov	r3, r4
 800425e:	e7e2      	b.n	8004226 <_ZN23FrontendApplicationBase44gotoProject_InfoScreenWipeTransitionEastImplEv+0xea>
 8004260:	0802bd64 	.word	0x0802bd64
 8004264:	0802c61b 	.word	0x0802c61b
 8004268:	0802bf00 	.word	0x0802bf00
 800426c:	0802bf47 	.word	0x0802bf47
 8004270:	0802bfea 	.word	0x0802bfea
 8004274:	20012f6c 	.word	0x20012f6c
 8004278:	20012f68 	.word	0x20012f68

0800427c <_ZN23FrontendApplicationBase48gotoCalibration_HallScreenWipeTransitionEastImplEv>:
{
 800427c:	e92d 47f0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, lr}
    touchgfx::makeTransition<Calibration_HallView, Calibration_HallPresenter, touchgfx::WipeTransition<EAST>, Model >(&currentScreen, &currentPresenter, frontendHeap, &currentTransition, &model);
 8004280:	e9d0 4a55 	ldrd	r4, sl, [r0, #340]	; 0x154
{
 8004284:	4607      	mov	r7, r0
    assert(sizeof(ScreenType) <= heap.screenStorage.element_size() && "View allocation error: Check that all views are added to FrontendHeap::ViewTypes");
 8004286:	68a0      	ldr	r0, [r4, #8]
 8004288:	6803      	ldr	r3, [r0, #0]
 800428a:	6a1b      	ldr	r3, [r3, #32]
 800428c:	4798      	blx	r3
 800428e:	f241 035b 	movw	r3, #4187	; 0x105b
 8004292:	4298      	cmp	r0, r3
 8004294:	d805      	bhi.n	80042a2 <_ZN23FrontendApplicationBase48gotoCalibration_HallScreenWipeTransitionEastImplEv+0x26>
 8004296:	4b42      	ldr	r3, [pc, #264]	; (80043a0 <_ZN23FrontendApplicationBase48gotoCalibration_HallScreenWipeTransitionEastImplEv+0x124>)
 8004298:	4a42      	ldr	r2, [pc, #264]	; (80043a4 <_ZN23FrontendApplicationBase48gotoCalibration_HallScreenWipeTransitionEastImplEv+0x128>)
 800429a:	21a3      	movs	r1, #163	; 0xa3
    assert(sizeof(PresenterType) <= heap.presenterStorage.element_size() && "Presenter allocation error: Check that all presenters are added to FrontendHeap::PresenterTypes");
 800429c:	4842      	ldr	r0, [pc, #264]	; (80043a8 <_ZN23FrontendApplicationBase48gotoCalibration_HallScreenWipeTransitionEastImplEv+0x12c>)
 800429e:	f025 fed1 	bl	802a044 <__assert_func>
 80042a2:	6860      	ldr	r0, [r4, #4]
 80042a4:	6803      	ldr	r3, [r0, #0]
 80042a6:	6a1b      	ldr	r3, [r3, #32]
 80042a8:	4798      	blx	r3
 80042aa:	280f      	cmp	r0, #15
 80042ac:	d803      	bhi.n	80042b6 <_ZN23FrontendApplicationBase48gotoCalibration_HallScreenWipeTransitionEastImplEv+0x3a>
 80042ae:	4b3f      	ldr	r3, [pc, #252]	; (80043ac <_ZN23FrontendApplicationBase48gotoCalibration_HallScreenWipeTransitionEastImplEv+0x130>)
 80042b0:	4a3c      	ldr	r2, [pc, #240]	; (80043a4 <_ZN23FrontendApplicationBase48gotoCalibration_HallScreenWipeTransitionEastImplEv+0x128>)
 80042b2:	21a4      	movs	r1, #164	; 0xa4
 80042b4:	e7f2      	b.n	800429c <_ZN23FrontendApplicationBase48gotoCalibration_HallScreenWipeTransitionEastImplEv+0x20>
    assert(sizeof(TransType) <= heap.transitionStorage.element_size() && "Transition allocation error: Check that all transitions are added to FrontendHeap::TransitionTypes");
 80042b6:	68e0      	ldr	r0, [r4, #12]
 80042b8:	6803      	ldr	r3, [r0, #0]
 80042ba:	6a1b      	ldr	r3, [r3, #32]
 80042bc:	4798      	blx	r3
 80042be:	2837      	cmp	r0, #55	; 0x37
 80042c0:	d803      	bhi.n	80042ca <_ZN23FrontendApplicationBase48gotoCalibration_HallScreenWipeTransitionEastImplEv+0x4e>
 80042c2:	4b3b      	ldr	r3, [pc, #236]	; (80043b0 <_ZN23FrontendApplicationBase48gotoCalibration_HallScreenWipeTransitionEastImplEv+0x134>)
 80042c4:	4a37      	ldr	r2, [pc, #220]	; (80043a4 <_ZN23FrontendApplicationBase48gotoCalibration_HallScreenWipeTransitionEastImplEv+0x128>)
 80042c6:	21a5      	movs	r1, #165	; 0xa5
 80042c8:	e7e8      	b.n	800429c <_ZN23FrontendApplicationBase48gotoCalibration_HallScreenWipeTransitionEastImplEv+0x20>
    Application::getInstance()->clearAllTimerWidgets();
 80042ca:	f011 f831 	bl	8015330 <_ZN8touchgfx11Application11getInstanceEv>
    if (*currentTrans)
 80042ce:	f8df 90e4 	ldr.w	r9, [pc, #228]	; 80043b4 <_ZN23FrontendApplicationBase48gotoCalibration_HallScreenWipeTransitionEastImplEv+0x138>
 80042d2:	3004      	adds	r0, #4
 80042d4:	f011 f892 	bl	80153fc <_ZN8touchgfx11Application12TimerWidgets5clearEv>
 80042d8:	f8d9 0000 	ldr.w	r0, [r9]
 80042dc:	b110      	cbz	r0, 80042e4 <_ZN23FrontendApplicationBase48gotoCalibration_HallScreenWipeTransitionEastImplEv+0x68>
        (*currentTrans)->tearDown();
 80042de:	6803      	ldr	r3, [r0, #0]
 80042e0:	68db      	ldr	r3, [r3, #12]
 80042e2:	4798      	blx	r3
    if (*currentTrans)
 80042e4:	f8d9 0000 	ldr.w	r0, [r9]
 80042e8:	b110      	cbz	r0, 80042f0 <_ZN23FrontendApplicationBase48gotoCalibration_HallScreenWipeTransitionEastImplEv+0x74>
        (*currentTrans)->~Transition();
 80042ea:	6803      	ldr	r3, [r0, #0]
 80042ec:	681b      	ldr	r3, [r3, #0]
 80042ee:	4798      	blx	r3
    if (*currentScreen)
 80042f0:	f8df 80c4 	ldr.w	r8, [pc, #196]	; 80043b8 <_ZN23FrontendApplicationBase48gotoCalibration_HallScreenWipeTransitionEastImplEv+0x13c>
 80042f4:	f8d8 0000 	ldr.w	r0, [r8]
 80042f8:	b110      	cbz	r0, 8004300 <_ZN23FrontendApplicationBase48gotoCalibration_HallScreenWipeTransitionEastImplEv+0x84>
        (*currentScreen)->tearDownScreen();
 80042fa:	6803      	ldr	r3, [r0, #0]
 80042fc:	695b      	ldr	r3, [r3, #20]
 80042fe:	4798      	blx	r3
    if (*currentPresenter)
 8004300:	f8d7 013c 	ldr.w	r0, [r7, #316]	; 0x13c
 8004304:	b110      	cbz	r0, 800430c <_ZN23FrontendApplicationBase48gotoCalibration_HallScreenWipeTransitionEastImplEv+0x90>
        (*currentPresenter)->deactivate();
 8004306:	6803      	ldr	r3, [r0, #0]
 8004308:	685b      	ldr	r3, [r3, #4]
 800430a:	4798      	blx	r3
    if (*currentScreen)
 800430c:	f8d8 0000 	ldr.w	r0, [r8]
 8004310:	b110      	cbz	r0, 8004318 <_ZN23FrontendApplicationBase48gotoCalibration_HallScreenWipeTransitionEastImplEv+0x9c>
        (*currentScreen)->~Screen();
 8004312:	6803      	ldr	r3, [r0, #0]
 8004314:	681b      	ldr	r3, [r3, #0]
 8004316:	4798      	blx	r3
    if (*currentPresenter)
 8004318:	f8d7 013c 	ldr.w	r0, [r7, #316]	; 0x13c
 800431c:	b110      	cbz	r0, 8004324 <_ZN23FrontendApplicationBase48gotoCalibration_HallScreenWipeTransitionEastImplEv+0xa8>
        (*currentPresenter)->~Presenter();
 800431e:	6803      	ldr	r3, [r0, #0]
 8004320:	689b      	ldr	r3, [r3, #8]
 8004322:	4798      	blx	r3
    TransType* newTransition = new (&heap.transitionStorage.at<TransType>(0)) TransType;
 8004324:	68e0      	ldr	r0, [r4, #12]
 8004326:	2100      	movs	r1, #0
 8004328:	f7ff fed6 	bl	80040d8 <_ZN8touchgfx17AbstractPartition2atINS_14WipeTransitionILNS_9DirectionE2EEEEERT_t>
 800432c:	2114      	movs	r1, #20
 800432e:	4605      	mov	r5, r0
 8004330:	f7ff fed6 	bl	80040e0 <_ZN8touchgfx14WipeTransitionILNS_9DirectionE2EEC1Eh>
    ScreenType* newScreen = new (&heap.screenStorage.at<ScreenType>(0)) ScreenType;
 8004334:	68a0      	ldr	r0, [r4, #8]
 8004336:	6803      	ldr	r3, [r0, #0]
 8004338:	2100      	movs	r1, #0
 800433a:	6a5b      	ldr	r3, [r3, #36]	; 0x24
 800433c:	4798      	blx	r3
 800433e:	4606      	mov	r6, r0
 8004340:	f003 ffd0 	bl	80082e4 <_ZN20Calibration_HallViewC1Ev>
    PresenterType* newPresenter = new (&heap.presenterStorage.at<PresenterType>(0)) PresenterType(*newScreen);
 8004344:	6860      	ldr	r0, [r4, #4]
 8004346:	6803      	ldr	r3, [r0, #0]
 8004348:	2100      	movs	r1, #0
 800434a:	6a5b      	ldr	r3, [r3, #36]	; 0x24
 800434c:	4798      	blx	r3
 800434e:	4631      	mov	r1, r6
 8004350:	4604      	mov	r4, r0
 8004352:	f003 ffa1 	bl	8008298 <_ZN25Calibration_HallPresenterC1ER20Calibration_HallView>
    *currentTrans = newTransition;
 8004356:	f8c9 5000 	str.w	r5, [r9]
    *currentPresenter = newPresenter;
 800435a:	f8c7 413c 	str.w	r4, [r7, #316]	; 0x13c
    *currentScreen = newScreen;
 800435e:	f8c8 6000 	str.w	r6, [r8]
    model->bind(newPresenter);
 8004362:	b1dc      	cbz	r4, 800439c <_ZN23FrontendApplicationBase48gotoCalibration_HallScreenWipeTransitionEastImplEv+0x120>
 8004364:	1d23      	adds	r3, r4, #4
 8004366:	f8ca 3000 	str.w	r3, [sl]
    newScreen->setupScreen();
 800436a:	6833      	ldr	r3, [r6, #0]
 800436c:	f8c4 a008 	str.w	sl, [r4, #8]
 8004370:	4630      	mov	r0, r6
 8004372:	68db      	ldr	r3, [r3, #12]
 8004374:	63f4      	str	r4, [r6, #60]	; 0x3c
 8004376:	4798      	blx	r3
    newPresenter->activate();
 8004378:	6823      	ldr	r3, [r4, #0]
 800437a:	4620      	mov	r0, r4
 800437c:	681b      	ldr	r3, [r3, #0]
 800437e:	4798      	blx	r3
    newScreen->bindTransition(*newTransition);
 8004380:	4629      	mov	r1, r5
 8004382:	4630      	mov	r0, r6
 8004384:	f012 fe00 	bl	8016f88 <_ZN8touchgfx6Screen14bindTransitionERNS_10TransitionE>
    newTransition->init();
 8004388:	682b      	ldr	r3, [r5, #0]
 800438a:	4628      	mov	r0, r5
 800438c:	691b      	ldr	r3, [r3, #16]
 800438e:	4798      	blx	r3
    newTransition->invalidate();
 8004390:	682b      	ldr	r3, [r5, #0]
 8004392:	4628      	mov	r0, r5
 8004394:	695b      	ldr	r3, [r3, #20]
}
 8004396:	e8bd 47f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, lr}
 800439a:	4718      	bx	r3
    model->bind(newPresenter);
 800439c:	4623      	mov	r3, r4
 800439e:	e7e2      	b.n	8004366 <_ZN23FrontendApplicationBase48gotoCalibration_HallScreenWipeTransitionEastImplEv+0xea>
 80043a0:	0802bd64 	.word	0x0802bd64
 80043a4:	0802c73b 	.word	0x0802c73b
 80043a8:	0802bf00 	.word	0x0802bf00
 80043ac:	0802bf47 	.word	0x0802bf47
 80043b0:	0802bfea 	.word	0x0802bfea
 80043b4:	20012f6c 	.word	0x20012f6c
 80043b8:	20012f68 	.word	0x20012f68

080043bc <_ZN23FrontendApplicationBase47gotoCalibration_PadScreenWipeTransitionEastImplEv>:
{
 80043bc:	e92d 47f0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, lr}
    touchgfx::makeTransition<Calibration_PadView, Calibration_PadPresenter, touchgfx::WipeTransition<EAST>, Model >(&currentScreen, &currentPresenter, frontendHeap, &currentTransition, &model);
 80043c0:	e9d0 4a55 	ldrd	r4, sl, [r0, #340]	; 0x154
{
 80043c4:	4607      	mov	r7, r0
    assert(sizeof(ScreenType) <= heap.screenStorage.element_size() && "View allocation error: Check that all views are added to FrontendHeap::ViewTypes");
 80043c6:	68a0      	ldr	r0, [r4, #8]
 80043c8:	6803      	ldr	r3, [r0, #0]
 80043ca:	6a1b      	ldr	r3, [r3, #32]
 80043cc:	4798      	blx	r3
 80043ce:	f241 035b 	movw	r3, #4187	; 0x105b
 80043d2:	4298      	cmp	r0, r3
 80043d4:	d805      	bhi.n	80043e2 <_ZN23FrontendApplicationBase47gotoCalibration_PadScreenWipeTransitionEastImplEv+0x26>
 80043d6:	4b42      	ldr	r3, [pc, #264]	; (80044e0 <_ZN23FrontendApplicationBase47gotoCalibration_PadScreenWipeTransitionEastImplEv+0x124>)
 80043d8:	4a42      	ldr	r2, [pc, #264]	; (80044e4 <_ZN23FrontendApplicationBase47gotoCalibration_PadScreenWipeTransitionEastImplEv+0x128>)
 80043da:	21a3      	movs	r1, #163	; 0xa3
    assert(sizeof(PresenterType) <= heap.presenterStorage.element_size() && "Presenter allocation error: Check that all presenters are added to FrontendHeap::PresenterTypes");
 80043dc:	4842      	ldr	r0, [pc, #264]	; (80044e8 <_ZN23FrontendApplicationBase47gotoCalibration_PadScreenWipeTransitionEastImplEv+0x12c>)
 80043de:	f025 fe31 	bl	802a044 <__assert_func>
 80043e2:	6860      	ldr	r0, [r4, #4]
 80043e4:	6803      	ldr	r3, [r0, #0]
 80043e6:	6a1b      	ldr	r3, [r3, #32]
 80043e8:	4798      	blx	r3
 80043ea:	280f      	cmp	r0, #15
 80043ec:	d803      	bhi.n	80043f6 <_ZN23FrontendApplicationBase47gotoCalibration_PadScreenWipeTransitionEastImplEv+0x3a>
 80043ee:	4b3f      	ldr	r3, [pc, #252]	; (80044ec <_ZN23FrontendApplicationBase47gotoCalibration_PadScreenWipeTransitionEastImplEv+0x130>)
 80043f0:	4a3c      	ldr	r2, [pc, #240]	; (80044e4 <_ZN23FrontendApplicationBase47gotoCalibration_PadScreenWipeTransitionEastImplEv+0x128>)
 80043f2:	21a4      	movs	r1, #164	; 0xa4
 80043f4:	e7f2      	b.n	80043dc <_ZN23FrontendApplicationBase47gotoCalibration_PadScreenWipeTransitionEastImplEv+0x20>
    assert(sizeof(TransType) <= heap.transitionStorage.element_size() && "Transition allocation error: Check that all transitions are added to FrontendHeap::TransitionTypes");
 80043f6:	68e0      	ldr	r0, [r4, #12]
 80043f8:	6803      	ldr	r3, [r0, #0]
 80043fa:	6a1b      	ldr	r3, [r3, #32]
 80043fc:	4798      	blx	r3
 80043fe:	2837      	cmp	r0, #55	; 0x37
 8004400:	d803      	bhi.n	800440a <_ZN23FrontendApplicationBase47gotoCalibration_PadScreenWipeTransitionEastImplEv+0x4e>
 8004402:	4b3b      	ldr	r3, [pc, #236]	; (80044f0 <_ZN23FrontendApplicationBase47gotoCalibration_PadScreenWipeTransitionEastImplEv+0x134>)
 8004404:	4a37      	ldr	r2, [pc, #220]	; (80044e4 <_ZN23FrontendApplicationBase47gotoCalibration_PadScreenWipeTransitionEastImplEv+0x128>)
 8004406:	21a5      	movs	r1, #165	; 0xa5
 8004408:	e7e8      	b.n	80043dc <_ZN23FrontendApplicationBase47gotoCalibration_PadScreenWipeTransitionEastImplEv+0x20>
    Application::getInstance()->clearAllTimerWidgets();
 800440a:	f010 ff91 	bl	8015330 <_ZN8touchgfx11Application11getInstanceEv>
    if (*currentTrans)
 800440e:	f8df 90e4 	ldr.w	r9, [pc, #228]	; 80044f4 <_ZN23FrontendApplicationBase47gotoCalibration_PadScreenWipeTransitionEastImplEv+0x138>
 8004412:	3004      	adds	r0, #4
 8004414:	f010 fff2 	bl	80153fc <_ZN8touchgfx11Application12TimerWidgets5clearEv>
 8004418:	f8d9 0000 	ldr.w	r0, [r9]
 800441c:	b110      	cbz	r0, 8004424 <_ZN23FrontendApplicationBase47gotoCalibration_PadScreenWipeTransitionEastImplEv+0x68>
        (*currentTrans)->tearDown();
 800441e:	6803      	ldr	r3, [r0, #0]
 8004420:	68db      	ldr	r3, [r3, #12]
 8004422:	4798      	blx	r3
    if (*currentTrans)
 8004424:	f8d9 0000 	ldr.w	r0, [r9]
 8004428:	b110      	cbz	r0, 8004430 <_ZN23FrontendApplicationBase47gotoCalibration_PadScreenWipeTransitionEastImplEv+0x74>
        (*currentTrans)->~Transition();
 800442a:	6803      	ldr	r3, [r0, #0]
 800442c:	681b      	ldr	r3, [r3, #0]
 800442e:	4798      	blx	r3
    if (*currentScreen)
 8004430:	f8df 80c4 	ldr.w	r8, [pc, #196]	; 80044f8 <_ZN23FrontendApplicationBase47gotoCalibration_PadScreenWipeTransitionEastImplEv+0x13c>
 8004434:	f8d8 0000 	ldr.w	r0, [r8]
 8004438:	b110      	cbz	r0, 8004440 <_ZN23FrontendApplicationBase47gotoCalibration_PadScreenWipeTransitionEastImplEv+0x84>
        (*currentScreen)->tearDownScreen();
 800443a:	6803      	ldr	r3, [r0, #0]
 800443c:	695b      	ldr	r3, [r3, #20]
 800443e:	4798      	blx	r3
    if (*currentPresenter)
 8004440:	f8d7 013c 	ldr.w	r0, [r7, #316]	; 0x13c
 8004444:	b110      	cbz	r0, 800444c <_ZN23FrontendApplicationBase47gotoCalibration_PadScreenWipeTransitionEastImplEv+0x90>
        (*currentPresenter)->deactivate();
 8004446:	6803      	ldr	r3, [r0, #0]
 8004448:	685b      	ldr	r3, [r3, #4]
 800444a:	4798      	blx	r3
    if (*currentScreen)
 800444c:	f8d8 0000 	ldr.w	r0, [r8]
 8004450:	b110      	cbz	r0, 8004458 <_ZN23FrontendApplicationBase47gotoCalibration_PadScreenWipeTransitionEastImplEv+0x9c>
        (*currentScreen)->~Screen();
 8004452:	6803      	ldr	r3, [r0, #0]
 8004454:	681b      	ldr	r3, [r3, #0]
 8004456:	4798      	blx	r3
    if (*currentPresenter)
 8004458:	f8d7 013c 	ldr.w	r0, [r7, #316]	; 0x13c
 800445c:	b110      	cbz	r0, 8004464 <_ZN23FrontendApplicationBase47gotoCalibration_PadScreenWipeTransitionEastImplEv+0xa8>
        (*currentPresenter)->~Presenter();
 800445e:	6803      	ldr	r3, [r0, #0]
 8004460:	689b      	ldr	r3, [r3, #8]
 8004462:	4798      	blx	r3
    TransType* newTransition = new (&heap.transitionStorage.at<TransType>(0)) TransType;
 8004464:	68e0      	ldr	r0, [r4, #12]
 8004466:	2100      	movs	r1, #0
 8004468:	f7ff fe36 	bl	80040d8 <_ZN8touchgfx17AbstractPartition2atINS_14WipeTransitionILNS_9DirectionE2EEEEERT_t>
 800446c:	2114      	movs	r1, #20
 800446e:	4605      	mov	r5, r0
 8004470:	f7ff fe36 	bl	80040e0 <_ZN8touchgfx14WipeTransitionILNS_9DirectionE2EEC1Eh>
    ScreenType* newScreen = new (&heap.screenStorage.at<ScreenType>(0)) ScreenType;
 8004474:	68a0      	ldr	r0, [r4, #8]
 8004476:	6803      	ldr	r3, [r0, #0]
 8004478:	2100      	movs	r1, #0
 800447a:	6a5b      	ldr	r3, [r3, #36]	; 0x24
 800447c:	4798      	blx	r3
 800447e:	4606      	mov	r6, r0
 8004480:	f003 ff72 	bl	8008368 <_ZN19Calibration_PadViewC1Ev>
    PresenterType* newPresenter = new (&heap.presenterStorage.at<PresenterType>(0)) PresenterType(*newScreen);
 8004484:	6860      	ldr	r0, [r4, #4]
 8004486:	6803      	ldr	r3, [r0, #0]
 8004488:	2100      	movs	r1, #0
 800448a:	6a5b      	ldr	r3, [r3, #36]	; 0x24
 800448c:	4798      	blx	r3
 800448e:	4631      	mov	r1, r6
 8004490:	4604      	mov	r4, r0
 8004492:	f003 ff43 	bl	800831c <_ZN24Calibration_PadPresenterC1ER19Calibration_PadView>
    *currentTrans = newTransition;
 8004496:	f8c9 5000 	str.w	r5, [r9]
    *currentPresenter = newPresenter;
 800449a:	f8c7 413c 	str.w	r4, [r7, #316]	; 0x13c
    *currentScreen = newScreen;
 800449e:	f8c8 6000 	str.w	r6, [r8]
    model->bind(newPresenter);
 80044a2:	b1dc      	cbz	r4, 80044dc <_ZN23FrontendApplicationBase47gotoCalibration_PadScreenWipeTransitionEastImplEv+0x120>
 80044a4:	1d23      	adds	r3, r4, #4
 80044a6:	f8ca 3000 	str.w	r3, [sl]
    newScreen->setupScreen();
 80044aa:	6833      	ldr	r3, [r6, #0]
 80044ac:	f8c4 a008 	str.w	sl, [r4, #8]
 80044b0:	4630      	mov	r0, r6
 80044b2:	68db      	ldr	r3, [r3, #12]
 80044b4:	63f4      	str	r4, [r6, #60]	; 0x3c
 80044b6:	4798      	blx	r3
    newPresenter->activate();
 80044b8:	6823      	ldr	r3, [r4, #0]
 80044ba:	4620      	mov	r0, r4
 80044bc:	681b      	ldr	r3, [r3, #0]
 80044be:	4798      	blx	r3
    newScreen->bindTransition(*newTransition);
 80044c0:	4629      	mov	r1, r5
 80044c2:	4630      	mov	r0, r6
 80044c4:	f012 fd60 	bl	8016f88 <_ZN8touchgfx6Screen14bindTransitionERNS_10TransitionE>
    newTransition->init();
 80044c8:	682b      	ldr	r3, [r5, #0]
 80044ca:	4628      	mov	r0, r5
 80044cc:	691b      	ldr	r3, [r3, #16]
 80044ce:	4798      	blx	r3
    newTransition->invalidate();
 80044d0:	682b      	ldr	r3, [r5, #0]
 80044d2:	4628      	mov	r0, r5
 80044d4:	695b      	ldr	r3, [r3, #20]
}
 80044d6:	e8bd 47f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, lr}
 80044da:	4718      	bx	r3
    model->bind(newPresenter);
 80044dc:	4623      	mov	r3, r4
 80044de:	e7e2      	b.n	80044a6 <_ZN23FrontendApplicationBase47gotoCalibration_PadScreenWipeTransitionEastImplEv+0xea>
 80044e0:	0802bd64 	.word	0x0802bd64
 80044e4:	0802c863 	.word	0x0802c863
 80044e8:	0802bf00 	.word	0x0802bf00
 80044ec:	0802bf47 	.word	0x0802bf47
 80044f0:	0802bfea 	.word	0x0802bfea
 80044f4:	20012f6c 	.word	0x20012f6c
 80044f8:	20012f68 	.word	0x20012f68

080044fc <_ZN23FrontendApplicationBase43gotoCalibrationScreenWipeTransitionEastImplEv>:
{
 80044fc:	e92d 47f0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, lr}
    touchgfx::makeTransition<CalibrationView, CalibrationPresenter, touchgfx::WipeTransition<EAST>, Model >(&currentScreen, &currentPresenter, frontendHeap, &currentTransition, &model);
 8004500:	e9d0 4a55 	ldrd	r4, sl, [r0, #340]	; 0x154
{
 8004504:	4607      	mov	r7, r0
    assert(sizeof(ScreenType) <= heap.screenStorage.element_size() && "View allocation error: Check that all views are added to FrontendHeap::ViewTypes");
 8004506:	68a0      	ldr	r0, [r4, #8]
 8004508:	6803      	ldr	r3, [r0, #0]
 800450a:	6a1b      	ldr	r3, [r3, #32]
 800450c:	4798      	blx	r3
 800450e:	f5b0 5f8a 	cmp.w	r0, #4416	; 0x1140
 8004512:	d205      	bcs.n	8004520 <_ZN23FrontendApplicationBase43gotoCalibrationScreenWipeTransitionEastImplEv+0x24>
 8004514:	4b42      	ldr	r3, [pc, #264]	; (8004620 <_ZN23FrontendApplicationBase43gotoCalibrationScreenWipeTransitionEastImplEv+0x124>)
 8004516:	4a43      	ldr	r2, [pc, #268]	; (8004624 <_ZN23FrontendApplicationBase43gotoCalibrationScreenWipeTransitionEastImplEv+0x128>)
 8004518:	21a3      	movs	r1, #163	; 0xa3
    assert(sizeof(PresenterType) <= heap.presenterStorage.element_size() && "Presenter allocation error: Check that all presenters are added to FrontendHeap::PresenterTypes");
 800451a:	4843      	ldr	r0, [pc, #268]	; (8004628 <_ZN23FrontendApplicationBase43gotoCalibrationScreenWipeTransitionEastImplEv+0x12c>)
 800451c:	f025 fd92 	bl	802a044 <__assert_func>
 8004520:	6860      	ldr	r0, [r4, #4]
 8004522:	6803      	ldr	r3, [r0, #0]
 8004524:	6a1b      	ldr	r3, [r3, #32]
 8004526:	4798      	blx	r3
 8004528:	280f      	cmp	r0, #15
 800452a:	d803      	bhi.n	8004534 <_ZN23FrontendApplicationBase43gotoCalibrationScreenWipeTransitionEastImplEv+0x38>
 800452c:	4b3f      	ldr	r3, [pc, #252]	; (800462c <_ZN23FrontendApplicationBase43gotoCalibrationScreenWipeTransitionEastImplEv+0x130>)
 800452e:	4a3d      	ldr	r2, [pc, #244]	; (8004624 <_ZN23FrontendApplicationBase43gotoCalibrationScreenWipeTransitionEastImplEv+0x128>)
 8004530:	21a4      	movs	r1, #164	; 0xa4
 8004532:	e7f2      	b.n	800451a <_ZN23FrontendApplicationBase43gotoCalibrationScreenWipeTransitionEastImplEv+0x1e>
    assert(sizeof(TransType) <= heap.transitionStorage.element_size() && "Transition allocation error: Check that all transitions are added to FrontendHeap::TransitionTypes");
 8004534:	68e0      	ldr	r0, [r4, #12]
 8004536:	6803      	ldr	r3, [r0, #0]
 8004538:	6a1b      	ldr	r3, [r3, #32]
 800453a:	4798      	blx	r3
 800453c:	2837      	cmp	r0, #55	; 0x37
 800453e:	d803      	bhi.n	8004548 <_ZN23FrontendApplicationBase43gotoCalibrationScreenWipeTransitionEastImplEv+0x4c>
 8004540:	4b3b      	ldr	r3, [pc, #236]	; (8004630 <_ZN23FrontendApplicationBase43gotoCalibrationScreenWipeTransitionEastImplEv+0x134>)
 8004542:	4a38      	ldr	r2, [pc, #224]	; (8004624 <_ZN23FrontendApplicationBase43gotoCalibrationScreenWipeTransitionEastImplEv+0x128>)
 8004544:	21a5      	movs	r1, #165	; 0xa5
 8004546:	e7e8      	b.n	800451a <_ZN23FrontendApplicationBase43gotoCalibrationScreenWipeTransitionEastImplEv+0x1e>
    Application::getInstance()->clearAllTimerWidgets();
 8004548:	f010 fef2 	bl	8015330 <_ZN8touchgfx11Application11getInstanceEv>
    if (*currentTrans)
 800454c:	f8df 90e4 	ldr.w	r9, [pc, #228]	; 8004634 <_ZN23FrontendApplicationBase43gotoCalibrationScreenWipeTransitionEastImplEv+0x138>
 8004550:	3004      	adds	r0, #4
 8004552:	f010 ff53 	bl	80153fc <_ZN8touchgfx11Application12TimerWidgets5clearEv>
 8004556:	f8d9 0000 	ldr.w	r0, [r9]
 800455a:	b110      	cbz	r0, 8004562 <_ZN23FrontendApplicationBase43gotoCalibrationScreenWipeTransitionEastImplEv+0x66>
        (*currentTrans)->tearDown();
 800455c:	6803      	ldr	r3, [r0, #0]
 800455e:	68db      	ldr	r3, [r3, #12]
 8004560:	4798      	blx	r3
    if (*currentTrans)
 8004562:	f8d9 0000 	ldr.w	r0, [r9]
 8004566:	b110      	cbz	r0, 800456e <_ZN23FrontendApplicationBase43gotoCalibrationScreenWipeTransitionEastImplEv+0x72>
        (*currentTrans)->~Transition();
 8004568:	6803      	ldr	r3, [r0, #0]
 800456a:	681b      	ldr	r3, [r3, #0]
 800456c:	4798      	blx	r3
    if (*currentScreen)
 800456e:	f8df 80c8 	ldr.w	r8, [pc, #200]	; 8004638 <_ZN23FrontendApplicationBase43gotoCalibrationScreenWipeTransitionEastImplEv+0x13c>
 8004572:	f8d8 0000 	ldr.w	r0, [r8]
 8004576:	b110      	cbz	r0, 800457e <_ZN23FrontendApplicationBase43gotoCalibrationScreenWipeTransitionEastImplEv+0x82>
        (*currentScreen)->tearDownScreen();
 8004578:	6803      	ldr	r3, [r0, #0]
 800457a:	695b      	ldr	r3, [r3, #20]
 800457c:	4798      	blx	r3
    if (*currentPresenter)
 800457e:	f8d7 013c 	ldr.w	r0, [r7, #316]	; 0x13c
 8004582:	b110      	cbz	r0, 800458a <_ZN23FrontendApplicationBase43gotoCalibrationScreenWipeTransitionEastImplEv+0x8e>
        (*currentPresenter)->deactivate();
 8004584:	6803      	ldr	r3, [r0, #0]
 8004586:	685b      	ldr	r3, [r3, #4]
 8004588:	4798      	blx	r3
    if (*currentScreen)
 800458a:	f8d8 0000 	ldr.w	r0, [r8]
 800458e:	b110      	cbz	r0, 8004596 <_ZN23FrontendApplicationBase43gotoCalibrationScreenWipeTransitionEastImplEv+0x9a>
        (*currentScreen)->~Screen();
 8004590:	6803      	ldr	r3, [r0, #0]
 8004592:	681b      	ldr	r3, [r3, #0]
 8004594:	4798      	blx	r3
    if (*currentPresenter)
 8004596:	f8d7 013c 	ldr.w	r0, [r7, #316]	; 0x13c
 800459a:	b110      	cbz	r0, 80045a2 <_ZN23FrontendApplicationBase43gotoCalibrationScreenWipeTransitionEastImplEv+0xa6>
        (*currentPresenter)->~Presenter();
 800459c:	6803      	ldr	r3, [r0, #0]
 800459e:	689b      	ldr	r3, [r3, #8]
 80045a0:	4798      	blx	r3
    TransType* newTransition = new (&heap.transitionStorage.at<TransType>(0)) TransType;
 80045a2:	68e0      	ldr	r0, [r4, #12]
 80045a4:	2100      	movs	r1, #0
 80045a6:	f7ff fd97 	bl	80040d8 <_ZN8touchgfx17AbstractPartition2atINS_14WipeTransitionILNS_9DirectionE2EEEEERT_t>
 80045aa:	2114      	movs	r1, #20
 80045ac:	4605      	mov	r5, r0
 80045ae:	f7ff fd97 	bl	80040e0 <_ZN8touchgfx14WipeTransitionILNS_9DirectionE2EEC1Eh>
    ScreenType* newScreen = new (&heap.screenStorage.at<ScreenType>(0)) ScreenType;
 80045b2:	68a0      	ldr	r0, [r4, #8]
 80045b4:	6803      	ldr	r3, [r0, #0]
 80045b6:	2100      	movs	r1, #0
 80045b8:	6a5b      	ldr	r3, [r3, #36]	; 0x24
 80045ba:	4798      	blx	r3
 80045bc:	4606      	mov	r6, r0
 80045be:	f003 fe37 	bl	8008230 <_ZN15CalibrationViewC1Ev>
    PresenterType* newPresenter = new (&heap.presenterStorage.at<PresenterType>(0)) PresenterType(*newScreen);
 80045c2:	6860      	ldr	r0, [r4, #4]
 80045c4:	6803      	ldr	r3, [r0, #0]
 80045c6:	2100      	movs	r1, #0
 80045c8:	6a5b      	ldr	r3, [r3, #36]	; 0x24
 80045ca:	4798      	blx	r3
 80045cc:	4631      	mov	r1, r6
 80045ce:	4604      	mov	r4, r0
 80045d0:	f003 fe08 	bl	80081e4 <_ZN20CalibrationPresenterC1ER15CalibrationView>
    *currentTrans = newTransition;
 80045d4:	f8c9 5000 	str.w	r5, [r9]
    *currentPresenter = newPresenter;
 80045d8:	f8c7 413c 	str.w	r4, [r7, #316]	; 0x13c
    *currentScreen = newScreen;
 80045dc:	f8c8 6000 	str.w	r6, [r8]
    model->bind(newPresenter);
 80045e0:	b1dc      	cbz	r4, 800461a <_ZN23FrontendApplicationBase43gotoCalibrationScreenWipeTransitionEastImplEv+0x11e>
 80045e2:	1d23      	adds	r3, r4, #4
 80045e4:	f8ca 3000 	str.w	r3, [sl]
    newScreen->setupScreen();
 80045e8:	6833      	ldr	r3, [r6, #0]
 80045ea:	f8c4 a008 	str.w	sl, [r4, #8]
 80045ee:	4630      	mov	r0, r6
 80045f0:	68db      	ldr	r3, [r3, #12]
 80045f2:	63f4      	str	r4, [r6, #60]	; 0x3c
 80045f4:	4798      	blx	r3
    newPresenter->activate();
 80045f6:	6823      	ldr	r3, [r4, #0]
 80045f8:	4620      	mov	r0, r4
 80045fa:	681b      	ldr	r3, [r3, #0]
 80045fc:	4798      	blx	r3
    newScreen->bindTransition(*newTransition);
 80045fe:	4629      	mov	r1, r5
 8004600:	4630      	mov	r0, r6
 8004602:	f012 fcc1 	bl	8016f88 <_ZN8touchgfx6Screen14bindTransitionERNS_10TransitionE>
    newTransition->init();
 8004606:	682b      	ldr	r3, [r5, #0]
 8004608:	4628      	mov	r0, r5
 800460a:	691b      	ldr	r3, [r3, #16]
 800460c:	4798      	blx	r3
    newTransition->invalidate();
 800460e:	682b      	ldr	r3, [r5, #0]
 8004610:	4628      	mov	r0, r5
 8004612:	695b      	ldr	r3, [r3, #20]
}
 8004614:	e8bd 47f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, lr}
 8004618:	4718      	bx	r3
    model->bind(newPresenter);
 800461a:	4623      	mov	r3, r4
 800461c:	e7e2      	b.n	80045e4 <_ZN23FrontendApplicationBase43gotoCalibrationScreenWipeTransitionEastImplEv+0xe8>
 800461e:	bf00      	nop
 8004620:	0802bd64 	.word	0x0802bd64
 8004624:	0802c989 	.word	0x0802c989
 8004628:	0802bf00 	.word	0x0802bf00
 800462c:	0802bf47 	.word	0x0802bf47
 8004630:	0802bfea 	.word	0x0802bfea
 8004634:	20012f6c 	.word	0x20012f6c
 8004638:	20012f68 	.word	0x20012f68

0800463c <_ZN23FrontendApplicationBase62gotoMeasurement_Accurate_Display_2ScreenWipeTransitionEastImplEv>:
{
 800463c:	e92d 47f0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, lr}
    touchgfx::makeTransition<Measurement_Accurate_Display_2View, Measurement_Accurate_Display_2Presenter, touchgfx::WipeTransition<EAST>, Model >(&currentScreen, &currentPresenter, frontendHeap, &currentTransition, &model);
 8004640:	e9d0 4a55 	ldrd	r4, sl, [r0, #340]	; 0x154
{
 8004644:	4607      	mov	r7, r0
    assert(sizeof(ScreenType) <= heap.screenStorage.element_size() && "View allocation error: Check that all views are added to FrontendHeap::ViewTypes");
 8004646:	68a0      	ldr	r0, [r4, #8]
 8004648:	6803      	ldr	r3, [r0, #0]
 800464a:	6a1b      	ldr	r3, [r3, #32]
 800464c:	4798      	blx	r3
 800464e:	f241 33e3 	movw	r3, #5091	; 0x13e3
 8004652:	4298      	cmp	r0, r3
 8004654:	d805      	bhi.n	8004662 <_ZN23FrontendApplicationBase62gotoMeasurement_Accurate_Display_2ScreenWipeTransitionEastImplEv+0x26>
 8004656:	4b42      	ldr	r3, [pc, #264]	; (8004760 <_ZN23FrontendApplicationBase62gotoMeasurement_Accurate_Display_2ScreenWipeTransitionEastImplEv+0x124>)
 8004658:	4a42      	ldr	r2, [pc, #264]	; (8004764 <_ZN23FrontendApplicationBase62gotoMeasurement_Accurate_Display_2ScreenWipeTransitionEastImplEv+0x128>)
 800465a:	21a3      	movs	r1, #163	; 0xa3
    assert(sizeof(PresenterType) <= heap.presenterStorage.element_size() && "Presenter allocation error: Check that all presenters are added to FrontendHeap::PresenterTypes");
 800465c:	4842      	ldr	r0, [pc, #264]	; (8004768 <_ZN23FrontendApplicationBase62gotoMeasurement_Accurate_Display_2ScreenWipeTransitionEastImplEv+0x12c>)
 800465e:	f025 fcf1 	bl	802a044 <__assert_func>
 8004662:	6860      	ldr	r0, [r4, #4]
 8004664:	6803      	ldr	r3, [r0, #0]
 8004666:	6a1b      	ldr	r3, [r3, #32]
 8004668:	4798      	blx	r3
 800466a:	280f      	cmp	r0, #15
 800466c:	d803      	bhi.n	8004676 <_ZN23FrontendApplicationBase62gotoMeasurement_Accurate_Display_2ScreenWipeTransitionEastImplEv+0x3a>
 800466e:	4b3f      	ldr	r3, [pc, #252]	; (800476c <_ZN23FrontendApplicationBase62gotoMeasurement_Accurate_Display_2ScreenWipeTransitionEastImplEv+0x130>)
 8004670:	4a3c      	ldr	r2, [pc, #240]	; (8004764 <_ZN23FrontendApplicationBase62gotoMeasurement_Accurate_Display_2ScreenWipeTransitionEastImplEv+0x128>)
 8004672:	21a4      	movs	r1, #164	; 0xa4
 8004674:	e7f2      	b.n	800465c <_ZN23FrontendApplicationBase62gotoMeasurement_Accurate_Display_2ScreenWipeTransitionEastImplEv+0x20>
    assert(sizeof(TransType) <= heap.transitionStorage.element_size() && "Transition allocation error: Check that all transitions are added to FrontendHeap::TransitionTypes");
 8004676:	68e0      	ldr	r0, [r4, #12]
 8004678:	6803      	ldr	r3, [r0, #0]
 800467a:	6a1b      	ldr	r3, [r3, #32]
 800467c:	4798      	blx	r3
 800467e:	2837      	cmp	r0, #55	; 0x37
 8004680:	d803      	bhi.n	800468a <_ZN23FrontendApplicationBase62gotoMeasurement_Accurate_Display_2ScreenWipeTransitionEastImplEv+0x4e>
 8004682:	4b3b      	ldr	r3, [pc, #236]	; (8004770 <_ZN23FrontendApplicationBase62gotoMeasurement_Accurate_Display_2ScreenWipeTransitionEastImplEv+0x134>)
 8004684:	4a37      	ldr	r2, [pc, #220]	; (8004764 <_ZN23FrontendApplicationBase62gotoMeasurement_Accurate_Display_2ScreenWipeTransitionEastImplEv+0x128>)
 8004686:	21a5      	movs	r1, #165	; 0xa5
 8004688:	e7e8      	b.n	800465c <_ZN23FrontendApplicationBase62gotoMeasurement_Accurate_Display_2ScreenWipeTransitionEastImplEv+0x20>
    Application::getInstance()->clearAllTimerWidgets();
 800468a:	f010 fe51 	bl	8015330 <_ZN8touchgfx11Application11getInstanceEv>
    if (*currentTrans)
 800468e:	f8df 90e4 	ldr.w	r9, [pc, #228]	; 8004774 <_ZN23FrontendApplicationBase62gotoMeasurement_Accurate_Display_2ScreenWipeTransitionEastImplEv+0x138>
 8004692:	3004      	adds	r0, #4
 8004694:	f010 feb2 	bl	80153fc <_ZN8touchgfx11Application12TimerWidgets5clearEv>
 8004698:	f8d9 0000 	ldr.w	r0, [r9]
 800469c:	b110      	cbz	r0, 80046a4 <_ZN23FrontendApplicationBase62gotoMeasurement_Accurate_Display_2ScreenWipeTransitionEastImplEv+0x68>
        (*currentTrans)->tearDown();
 800469e:	6803      	ldr	r3, [r0, #0]
 80046a0:	68db      	ldr	r3, [r3, #12]
 80046a2:	4798      	blx	r3
    if (*currentTrans)
 80046a4:	f8d9 0000 	ldr.w	r0, [r9]
 80046a8:	b110      	cbz	r0, 80046b0 <_ZN23FrontendApplicationBase62gotoMeasurement_Accurate_Display_2ScreenWipeTransitionEastImplEv+0x74>
        (*currentTrans)->~Transition();
 80046aa:	6803      	ldr	r3, [r0, #0]
 80046ac:	681b      	ldr	r3, [r3, #0]
 80046ae:	4798      	blx	r3
    if (*currentScreen)
 80046b0:	f8df 80c4 	ldr.w	r8, [pc, #196]	; 8004778 <_ZN23FrontendApplicationBase62gotoMeasurement_Accurate_Display_2ScreenWipeTransitionEastImplEv+0x13c>
 80046b4:	f8d8 0000 	ldr.w	r0, [r8]
 80046b8:	b110      	cbz	r0, 80046c0 <_ZN23FrontendApplicationBase62gotoMeasurement_Accurate_Display_2ScreenWipeTransitionEastImplEv+0x84>
        (*currentScreen)->tearDownScreen();
 80046ba:	6803      	ldr	r3, [r0, #0]
 80046bc:	695b      	ldr	r3, [r3, #20]
 80046be:	4798      	blx	r3
    if (*currentPresenter)
 80046c0:	f8d7 013c 	ldr.w	r0, [r7, #316]	; 0x13c
 80046c4:	b110      	cbz	r0, 80046cc <_ZN23FrontendApplicationBase62gotoMeasurement_Accurate_Display_2ScreenWipeTransitionEastImplEv+0x90>
        (*currentPresenter)->deactivate();
 80046c6:	6803      	ldr	r3, [r0, #0]
 80046c8:	685b      	ldr	r3, [r3, #4]
 80046ca:	4798      	blx	r3
    if (*currentScreen)
 80046cc:	f8d8 0000 	ldr.w	r0, [r8]
 80046d0:	b110      	cbz	r0, 80046d8 <_ZN23FrontendApplicationBase62gotoMeasurement_Accurate_Display_2ScreenWipeTransitionEastImplEv+0x9c>
        (*currentScreen)->~Screen();
 80046d2:	6803      	ldr	r3, [r0, #0]
 80046d4:	681b      	ldr	r3, [r3, #0]
 80046d6:	4798      	blx	r3
    if (*currentPresenter)
 80046d8:	f8d7 013c 	ldr.w	r0, [r7, #316]	; 0x13c
 80046dc:	b110      	cbz	r0, 80046e4 <_ZN23FrontendApplicationBase62gotoMeasurement_Accurate_Display_2ScreenWipeTransitionEastImplEv+0xa8>
        (*currentPresenter)->~Presenter();
 80046de:	6803      	ldr	r3, [r0, #0]
 80046e0:	689b      	ldr	r3, [r3, #8]
 80046e2:	4798      	blx	r3
    TransType* newTransition = new (&heap.transitionStorage.at<TransType>(0)) TransType;
 80046e4:	68e0      	ldr	r0, [r4, #12]
 80046e6:	2100      	movs	r1, #0
 80046e8:	f7ff fcf6 	bl	80040d8 <_ZN8touchgfx17AbstractPartition2atINS_14WipeTransitionILNS_9DirectionE2EEEEERT_t>
 80046ec:	2114      	movs	r1, #20
 80046ee:	4605      	mov	r5, r0
 80046f0:	f7ff fcf6 	bl	80040e0 <_ZN8touchgfx14WipeTransitionILNS_9DirectionE2EEC1Eh>
    ScreenType* newScreen = new (&heap.screenStorage.at<ScreenType>(0)) ScreenType;
 80046f4:	68a0      	ldr	r0, [r4, #8]
 80046f6:	6803      	ldr	r3, [r0, #0]
 80046f8:	2100      	movs	r1, #0
 80046fa:	6a5b      	ldr	r3, [r3, #36]	; 0x24
 80046fc:	4798      	blx	r3
 80046fe:	4606      	mov	r6, r0
 8004700:	f004 f816 	bl	8008730 <_ZN34Measurement_Accurate_Display_2ViewC1Ev>
    PresenterType* newPresenter = new (&heap.presenterStorage.at<PresenterType>(0)) PresenterType(*newScreen);
 8004704:	6860      	ldr	r0, [r4, #4]
 8004706:	6803      	ldr	r3, [r0, #0]
 8004708:	2100      	movs	r1, #0
 800470a:	6a5b      	ldr	r3, [r3, #36]	; 0x24
 800470c:	4798      	blx	r3
 800470e:	4631      	mov	r1, r6
 8004710:	4604      	mov	r4, r0
 8004712:	f003 ffe7 	bl	80086e4 <_ZN39Measurement_Accurate_Display_2PresenterC1ER34Measurement_Accurate_Display_2View>
    *currentTrans = newTransition;
 8004716:	f8c9 5000 	str.w	r5, [r9]
    *currentPresenter = newPresenter;
 800471a:	f8c7 413c 	str.w	r4, [r7, #316]	; 0x13c
    *currentScreen = newScreen;
 800471e:	f8c8 6000 	str.w	r6, [r8]
    model->bind(newPresenter);
 8004722:	b1dc      	cbz	r4, 800475c <_ZN23FrontendApplicationBase62gotoMeasurement_Accurate_Display_2ScreenWipeTransitionEastImplEv+0x120>
 8004724:	1d23      	adds	r3, r4, #4
 8004726:	f8ca 3000 	str.w	r3, [sl]
    newScreen->setupScreen();
 800472a:	6833      	ldr	r3, [r6, #0]
 800472c:	f8c4 a008 	str.w	sl, [r4, #8]
 8004730:	4630      	mov	r0, r6
 8004732:	68db      	ldr	r3, [r3, #12]
 8004734:	63f4      	str	r4, [r6, #60]	; 0x3c
 8004736:	4798      	blx	r3
    newPresenter->activate();
 8004738:	6823      	ldr	r3, [r4, #0]
 800473a:	4620      	mov	r0, r4
 800473c:	681b      	ldr	r3, [r3, #0]
 800473e:	4798      	blx	r3
    newScreen->bindTransition(*newTransition);
 8004740:	4629      	mov	r1, r5
 8004742:	4630      	mov	r0, r6
 8004744:	f012 fc20 	bl	8016f88 <_ZN8touchgfx6Screen14bindTransitionERNS_10TransitionE>
    newTransition->init();
 8004748:	682b      	ldr	r3, [r5, #0]
 800474a:	4628      	mov	r0, r5
 800474c:	691b      	ldr	r3, [r3, #16]
 800474e:	4798      	blx	r3
    newTransition->invalidate();
 8004750:	682b      	ldr	r3, [r5, #0]
 8004752:	4628      	mov	r0, r5
 8004754:	695b      	ldr	r3, [r3, #20]
}
 8004756:	e8bd 47f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, lr}
 800475a:	4718      	bx	r3
    model->bind(newPresenter);
 800475c:	4623      	mov	r3, r4
 800475e:	e7e2      	b.n	8004726 <_ZN23FrontendApplicationBase62gotoMeasurement_Accurate_Display_2ScreenWipeTransitionEastImplEv+0xea>
 8004760:	0802bd64 	.word	0x0802bd64
 8004764:	0802caa7 	.word	0x0802caa7
 8004768:	0802bf00 	.word	0x0802bf00
 800476c:	0802bf47 	.word	0x0802bf47
 8004770:	0802bfea 	.word	0x0802bfea
 8004774:	20012f6c 	.word	0x20012f6c
 8004778:	20012f68 	.word	0x20012f68

0800477c <_ZN23FrontendApplicationBase60gotoMeasurement_Accurate_DisplayScreenWipeTransitionEastImplEv>:
{
 800477c:	e92d 47f0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, lr}
    touchgfx::makeTransition<Measurement_Accurate_DisplayView, Measurement_Accurate_DisplayPresenter, touchgfx::WipeTransition<EAST>, Model >(&currentScreen, &currentPresenter, frontendHeap, &currentTransition, &model);
 8004780:	e9d0 4a55 	ldrd	r4, sl, [r0, #340]	; 0x154
{
 8004784:	4607      	mov	r7, r0
    assert(sizeof(ScreenType) <= heap.screenStorage.element_size() && "View allocation error: Check that all views are added to FrontendHeap::ViewTypes");
 8004786:	68a0      	ldr	r0, [r4, #8]
 8004788:	6803      	ldr	r3, [r0, #0]
 800478a:	6a1b      	ldr	r3, [r3, #32]
 800478c:	4798      	blx	r3
 800478e:	f241 33e3 	movw	r3, #5091	; 0x13e3
 8004792:	4298      	cmp	r0, r3
 8004794:	d805      	bhi.n	80047a2 <_ZN23FrontendApplicationBase60gotoMeasurement_Accurate_DisplayScreenWipeTransitionEastImplEv+0x26>
 8004796:	4b42      	ldr	r3, [pc, #264]	; (80048a0 <_ZN23FrontendApplicationBase60gotoMeasurement_Accurate_DisplayScreenWipeTransitionEastImplEv+0x124>)
 8004798:	4a42      	ldr	r2, [pc, #264]	; (80048a4 <_ZN23FrontendApplicationBase60gotoMeasurement_Accurate_DisplayScreenWipeTransitionEastImplEv+0x128>)
 800479a:	21a3      	movs	r1, #163	; 0xa3
    assert(sizeof(PresenterType) <= heap.presenterStorage.element_size() && "Presenter allocation error: Check that all presenters are added to FrontendHeap::PresenterTypes");
 800479c:	4842      	ldr	r0, [pc, #264]	; (80048a8 <_ZN23FrontendApplicationBase60gotoMeasurement_Accurate_DisplayScreenWipeTransitionEastImplEv+0x12c>)
 800479e:	f025 fc51 	bl	802a044 <__assert_func>
 80047a2:	6860      	ldr	r0, [r4, #4]
 80047a4:	6803      	ldr	r3, [r0, #0]
 80047a6:	6a1b      	ldr	r3, [r3, #32]
 80047a8:	4798      	blx	r3
 80047aa:	280f      	cmp	r0, #15
 80047ac:	d803      	bhi.n	80047b6 <_ZN23FrontendApplicationBase60gotoMeasurement_Accurate_DisplayScreenWipeTransitionEastImplEv+0x3a>
 80047ae:	4b3f      	ldr	r3, [pc, #252]	; (80048ac <_ZN23FrontendApplicationBase60gotoMeasurement_Accurate_DisplayScreenWipeTransitionEastImplEv+0x130>)
 80047b0:	4a3c      	ldr	r2, [pc, #240]	; (80048a4 <_ZN23FrontendApplicationBase60gotoMeasurement_Accurate_DisplayScreenWipeTransitionEastImplEv+0x128>)
 80047b2:	21a4      	movs	r1, #164	; 0xa4
 80047b4:	e7f2      	b.n	800479c <_ZN23FrontendApplicationBase60gotoMeasurement_Accurate_DisplayScreenWipeTransitionEastImplEv+0x20>
    assert(sizeof(TransType) <= heap.transitionStorage.element_size() && "Transition allocation error: Check that all transitions are added to FrontendHeap::TransitionTypes");
 80047b6:	68e0      	ldr	r0, [r4, #12]
 80047b8:	6803      	ldr	r3, [r0, #0]
 80047ba:	6a1b      	ldr	r3, [r3, #32]
 80047bc:	4798      	blx	r3
 80047be:	2837      	cmp	r0, #55	; 0x37
 80047c0:	d803      	bhi.n	80047ca <_ZN23FrontendApplicationBase60gotoMeasurement_Accurate_DisplayScreenWipeTransitionEastImplEv+0x4e>
 80047c2:	4b3b      	ldr	r3, [pc, #236]	; (80048b0 <_ZN23FrontendApplicationBase60gotoMeasurement_Accurate_DisplayScreenWipeTransitionEastImplEv+0x134>)
 80047c4:	4a37      	ldr	r2, [pc, #220]	; (80048a4 <_ZN23FrontendApplicationBase60gotoMeasurement_Accurate_DisplayScreenWipeTransitionEastImplEv+0x128>)
 80047c6:	21a5      	movs	r1, #165	; 0xa5
 80047c8:	e7e8      	b.n	800479c <_ZN23FrontendApplicationBase60gotoMeasurement_Accurate_DisplayScreenWipeTransitionEastImplEv+0x20>
    Application::getInstance()->clearAllTimerWidgets();
 80047ca:	f010 fdb1 	bl	8015330 <_ZN8touchgfx11Application11getInstanceEv>
    if (*currentTrans)
 80047ce:	f8df 90e4 	ldr.w	r9, [pc, #228]	; 80048b4 <_ZN23FrontendApplicationBase60gotoMeasurement_Accurate_DisplayScreenWipeTransitionEastImplEv+0x138>
 80047d2:	3004      	adds	r0, #4
 80047d4:	f010 fe12 	bl	80153fc <_ZN8touchgfx11Application12TimerWidgets5clearEv>
 80047d8:	f8d9 0000 	ldr.w	r0, [r9]
 80047dc:	b110      	cbz	r0, 80047e4 <_ZN23FrontendApplicationBase60gotoMeasurement_Accurate_DisplayScreenWipeTransitionEastImplEv+0x68>
        (*currentTrans)->tearDown();
 80047de:	6803      	ldr	r3, [r0, #0]
 80047e0:	68db      	ldr	r3, [r3, #12]
 80047e2:	4798      	blx	r3
    if (*currentTrans)
 80047e4:	f8d9 0000 	ldr.w	r0, [r9]
 80047e8:	b110      	cbz	r0, 80047f0 <_ZN23FrontendApplicationBase60gotoMeasurement_Accurate_DisplayScreenWipeTransitionEastImplEv+0x74>
        (*currentTrans)->~Transition();
 80047ea:	6803      	ldr	r3, [r0, #0]
 80047ec:	681b      	ldr	r3, [r3, #0]
 80047ee:	4798      	blx	r3
    if (*currentScreen)
 80047f0:	f8df 80c4 	ldr.w	r8, [pc, #196]	; 80048b8 <_ZN23FrontendApplicationBase60gotoMeasurement_Accurate_DisplayScreenWipeTransitionEastImplEv+0x13c>
 80047f4:	f8d8 0000 	ldr.w	r0, [r8]
 80047f8:	b110      	cbz	r0, 8004800 <_ZN23FrontendApplicationBase60gotoMeasurement_Accurate_DisplayScreenWipeTransitionEastImplEv+0x84>
        (*currentScreen)->tearDownScreen();
 80047fa:	6803      	ldr	r3, [r0, #0]
 80047fc:	695b      	ldr	r3, [r3, #20]
 80047fe:	4798      	blx	r3
    if (*currentPresenter)
 8004800:	f8d7 013c 	ldr.w	r0, [r7, #316]	; 0x13c
 8004804:	b110      	cbz	r0, 800480c <_ZN23FrontendApplicationBase60gotoMeasurement_Accurate_DisplayScreenWipeTransitionEastImplEv+0x90>
        (*currentPresenter)->deactivate();
 8004806:	6803      	ldr	r3, [r0, #0]
 8004808:	685b      	ldr	r3, [r3, #4]
 800480a:	4798      	blx	r3
    if (*currentScreen)
 800480c:	f8d8 0000 	ldr.w	r0, [r8]
 8004810:	b110      	cbz	r0, 8004818 <_ZN23FrontendApplicationBase60gotoMeasurement_Accurate_DisplayScreenWipeTransitionEastImplEv+0x9c>
        (*currentScreen)->~Screen();
 8004812:	6803      	ldr	r3, [r0, #0]
 8004814:	681b      	ldr	r3, [r3, #0]
 8004816:	4798      	blx	r3
    if (*currentPresenter)
 8004818:	f8d7 013c 	ldr.w	r0, [r7, #316]	; 0x13c
 800481c:	b110      	cbz	r0, 8004824 <_ZN23FrontendApplicationBase60gotoMeasurement_Accurate_DisplayScreenWipeTransitionEastImplEv+0xa8>
        (*currentPresenter)->~Presenter();
 800481e:	6803      	ldr	r3, [r0, #0]
 8004820:	689b      	ldr	r3, [r3, #8]
 8004822:	4798      	blx	r3
    TransType* newTransition = new (&heap.transitionStorage.at<TransType>(0)) TransType;
 8004824:	68e0      	ldr	r0, [r4, #12]
 8004826:	2100      	movs	r1, #0
 8004828:	f7ff fc56 	bl	80040d8 <_ZN8touchgfx17AbstractPartition2atINS_14WipeTransitionILNS_9DirectionE2EEEEERT_t>
 800482c:	2114      	movs	r1, #20
 800482e:	4605      	mov	r5, r0
 8004830:	f7ff fc56 	bl	80040e0 <_ZN8touchgfx14WipeTransitionILNS_9DirectionE2EEC1Eh>
    ScreenType* newScreen = new (&heap.screenStorage.at<ScreenType>(0)) ScreenType;
 8004834:	68a0      	ldr	r0, [r4, #8]
 8004836:	6803      	ldr	r3, [r0, #0]
 8004838:	2100      	movs	r1, #0
 800483a:	6a5b      	ldr	r3, [r3, #36]	; 0x24
 800483c:	4798      	blx	r3
 800483e:	4606      	mov	r6, r0
 8004840:	f003 ff34 	bl	80086ac <_ZN32Measurement_Accurate_DisplayViewC1Ev>
    PresenterType* newPresenter = new (&heap.presenterStorage.at<PresenterType>(0)) PresenterType(*newScreen);
 8004844:	6860      	ldr	r0, [r4, #4]
 8004846:	6803      	ldr	r3, [r0, #0]
 8004848:	2100      	movs	r1, #0
 800484a:	6a5b      	ldr	r3, [r3, #36]	; 0x24
 800484c:	4798      	blx	r3
 800484e:	4631      	mov	r1, r6
 8004850:	4604      	mov	r4, r0
 8004852:	f003 ff05 	bl	8008660 <_ZN37Measurement_Accurate_DisplayPresenterC1ER32Measurement_Accurate_DisplayView>
    *currentTrans = newTransition;
 8004856:	f8c9 5000 	str.w	r5, [r9]
    *currentPresenter = newPresenter;
 800485a:	f8c7 413c 	str.w	r4, [r7, #316]	; 0x13c
    *currentScreen = newScreen;
 800485e:	f8c8 6000 	str.w	r6, [r8]
    model->bind(newPresenter);
 8004862:	b1dc      	cbz	r4, 800489c <_ZN23FrontendApplicationBase60gotoMeasurement_Accurate_DisplayScreenWipeTransitionEastImplEv+0x120>
 8004864:	1d23      	adds	r3, r4, #4
 8004866:	f8ca 3000 	str.w	r3, [sl]
    newScreen->setupScreen();
 800486a:	6833      	ldr	r3, [r6, #0]
 800486c:	f8c4 a008 	str.w	sl, [r4, #8]
 8004870:	4630      	mov	r0, r6
 8004872:	68db      	ldr	r3, [r3, #12]
 8004874:	63f4      	str	r4, [r6, #60]	; 0x3c
 8004876:	4798      	blx	r3
    newPresenter->activate();
 8004878:	6823      	ldr	r3, [r4, #0]
 800487a:	4620      	mov	r0, r4
 800487c:	681b      	ldr	r3, [r3, #0]
 800487e:	4798      	blx	r3
    newScreen->bindTransition(*newTransition);
 8004880:	4629      	mov	r1, r5
 8004882:	4630      	mov	r0, r6
 8004884:	f012 fb80 	bl	8016f88 <_ZN8touchgfx6Screen14bindTransitionERNS_10TransitionE>
    newTransition->init();
 8004888:	682b      	ldr	r3, [r5, #0]
 800488a:	4628      	mov	r0, r5
 800488c:	691b      	ldr	r3, [r3, #16]
 800488e:	4798      	blx	r3
    newTransition->invalidate();
 8004890:	682b      	ldr	r3, [r5, #0]
 8004892:	4628      	mov	r0, r5
 8004894:	695b      	ldr	r3, [r3, #20]
}
 8004896:	e8bd 47f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, lr}
 800489a:	4718      	bx	r3
    model->bind(newPresenter);
 800489c:	4623      	mov	r3, r4
 800489e:	e7e2      	b.n	8004866 <_ZN23FrontendApplicationBase60gotoMeasurement_Accurate_DisplayScreenWipeTransitionEastImplEv+0xea>
 80048a0:	0802bd64 	.word	0x0802bd64
 80048a4:	0802cbeb 	.word	0x0802cbeb
 80048a8:	0802bf00 	.word	0x0802bf00
 80048ac:	0802bf47 	.word	0x0802bf47
 80048b0:	0802bfea 	.word	0x0802bfea
 80048b4:	20012f6c 	.word	0x20012f6c
 80048b8:	20012f68 	.word	0x20012f68

080048bc <_ZN23FrontendApplicationBase52gotoMeasurement_AccurateScreenWipeTransitionEastImplEv>:
{
 80048bc:	e92d 47f0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, lr}
    touchgfx::makeTransition<Measurement_AccurateView, Measurement_AccuratePresenter, touchgfx::WipeTransition<EAST>, Model >(&currentScreen, &currentPresenter, frontendHeap, &currentTransition, &model);
 80048c0:	e9d0 4a55 	ldrd	r4, sl, [r0, #340]	; 0x154
{
 80048c4:	4607      	mov	r7, r0
    assert(sizeof(ScreenType) <= heap.screenStorage.element_size() && "View allocation error: Check that all views are added to FrontendHeap::ViewTypes");
 80048c6:	68a0      	ldr	r0, [r4, #8]
 80048c8:	6803      	ldr	r3, [r0, #0]
 80048ca:	6a1b      	ldr	r3, [r3, #32]
 80048cc:	4798      	blx	r3
 80048ce:	f5b0 5f8a 	cmp.w	r0, #4416	; 0x1140
 80048d2:	d205      	bcs.n	80048e0 <_ZN23FrontendApplicationBase52gotoMeasurement_AccurateScreenWipeTransitionEastImplEv+0x24>
 80048d4:	4b42      	ldr	r3, [pc, #264]	; (80049e0 <_ZN23FrontendApplicationBase52gotoMeasurement_AccurateScreenWipeTransitionEastImplEv+0x124>)
 80048d6:	4a43      	ldr	r2, [pc, #268]	; (80049e4 <_ZN23FrontendApplicationBase52gotoMeasurement_AccurateScreenWipeTransitionEastImplEv+0x128>)
 80048d8:	21a3      	movs	r1, #163	; 0xa3
    assert(sizeof(PresenterType) <= heap.presenterStorage.element_size() && "Presenter allocation error: Check that all presenters are added to FrontendHeap::PresenterTypes");
 80048da:	4843      	ldr	r0, [pc, #268]	; (80049e8 <_ZN23FrontendApplicationBase52gotoMeasurement_AccurateScreenWipeTransitionEastImplEv+0x12c>)
 80048dc:	f025 fbb2 	bl	802a044 <__assert_func>
 80048e0:	6860      	ldr	r0, [r4, #4]
 80048e2:	6803      	ldr	r3, [r0, #0]
 80048e4:	6a1b      	ldr	r3, [r3, #32]
 80048e6:	4798      	blx	r3
 80048e8:	280f      	cmp	r0, #15
 80048ea:	d803      	bhi.n	80048f4 <_ZN23FrontendApplicationBase52gotoMeasurement_AccurateScreenWipeTransitionEastImplEv+0x38>
 80048ec:	4b3f      	ldr	r3, [pc, #252]	; (80049ec <_ZN23FrontendApplicationBase52gotoMeasurement_AccurateScreenWipeTransitionEastImplEv+0x130>)
 80048ee:	4a3d      	ldr	r2, [pc, #244]	; (80049e4 <_ZN23FrontendApplicationBase52gotoMeasurement_AccurateScreenWipeTransitionEastImplEv+0x128>)
 80048f0:	21a4      	movs	r1, #164	; 0xa4
 80048f2:	e7f2      	b.n	80048da <_ZN23FrontendApplicationBase52gotoMeasurement_AccurateScreenWipeTransitionEastImplEv+0x1e>
    assert(sizeof(TransType) <= heap.transitionStorage.element_size() && "Transition allocation error: Check that all transitions are added to FrontendHeap::TransitionTypes");
 80048f4:	68e0      	ldr	r0, [r4, #12]
 80048f6:	6803      	ldr	r3, [r0, #0]
 80048f8:	6a1b      	ldr	r3, [r3, #32]
 80048fa:	4798      	blx	r3
 80048fc:	2837      	cmp	r0, #55	; 0x37
 80048fe:	d803      	bhi.n	8004908 <_ZN23FrontendApplicationBase52gotoMeasurement_AccurateScreenWipeTransitionEastImplEv+0x4c>
 8004900:	4b3b      	ldr	r3, [pc, #236]	; (80049f0 <_ZN23FrontendApplicationBase52gotoMeasurement_AccurateScreenWipeTransitionEastImplEv+0x134>)
 8004902:	4a38      	ldr	r2, [pc, #224]	; (80049e4 <_ZN23FrontendApplicationBase52gotoMeasurement_AccurateScreenWipeTransitionEastImplEv+0x128>)
 8004904:	21a5      	movs	r1, #165	; 0xa5
 8004906:	e7e8      	b.n	80048da <_ZN23FrontendApplicationBase52gotoMeasurement_AccurateScreenWipeTransitionEastImplEv+0x1e>
    Application::getInstance()->clearAllTimerWidgets();
 8004908:	f010 fd12 	bl	8015330 <_ZN8touchgfx11Application11getInstanceEv>
    if (*currentTrans)
 800490c:	f8df 90e4 	ldr.w	r9, [pc, #228]	; 80049f4 <_ZN23FrontendApplicationBase52gotoMeasurement_AccurateScreenWipeTransitionEastImplEv+0x138>
 8004910:	3004      	adds	r0, #4
 8004912:	f010 fd73 	bl	80153fc <_ZN8touchgfx11Application12TimerWidgets5clearEv>
 8004916:	f8d9 0000 	ldr.w	r0, [r9]
 800491a:	b110      	cbz	r0, 8004922 <_ZN23FrontendApplicationBase52gotoMeasurement_AccurateScreenWipeTransitionEastImplEv+0x66>
        (*currentTrans)->tearDown();
 800491c:	6803      	ldr	r3, [r0, #0]
 800491e:	68db      	ldr	r3, [r3, #12]
 8004920:	4798      	blx	r3
    if (*currentTrans)
 8004922:	f8d9 0000 	ldr.w	r0, [r9]
 8004926:	b110      	cbz	r0, 800492e <_ZN23FrontendApplicationBase52gotoMeasurement_AccurateScreenWipeTransitionEastImplEv+0x72>
        (*currentTrans)->~Transition();
 8004928:	6803      	ldr	r3, [r0, #0]
 800492a:	681b      	ldr	r3, [r3, #0]
 800492c:	4798      	blx	r3
    if (*currentScreen)
 800492e:	f8df 80c8 	ldr.w	r8, [pc, #200]	; 80049f8 <_ZN23FrontendApplicationBase52gotoMeasurement_AccurateScreenWipeTransitionEastImplEv+0x13c>
 8004932:	f8d8 0000 	ldr.w	r0, [r8]
 8004936:	b110      	cbz	r0, 800493e <_ZN23FrontendApplicationBase52gotoMeasurement_AccurateScreenWipeTransitionEastImplEv+0x82>
        (*currentScreen)->tearDownScreen();
 8004938:	6803      	ldr	r3, [r0, #0]
 800493a:	695b      	ldr	r3, [r3, #20]
 800493c:	4798      	blx	r3
    if (*currentPresenter)
 800493e:	f8d7 013c 	ldr.w	r0, [r7, #316]	; 0x13c
 8004942:	b110      	cbz	r0, 800494a <_ZN23FrontendApplicationBase52gotoMeasurement_AccurateScreenWipeTransitionEastImplEv+0x8e>
        (*currentPresenter)->deactivate();
 8004944:	6803      	ldr	r3, [r0, #0]
 8004946:	685b      	ldr	r3, [r3, #4]
 8004948:	4798      	blx	r3
    if (*currentScreen)
 800494a:	f8d8 0000 	ldr.w	r0, [r8]
 800494e:	b110      	cbz	r0, 8004956 <_ZN23FrontendApplicationBase52gotoMeasurement_AccurateScreenWipeTransitionEastImplEv+0x9a>
        (*currentScreen)->~Screen();
 8004950:	6803      	ldr	r3, [r0, #0]
 8004952:	681b      	ldr	r3, [r3, #0]
 8004954:	4798      	blx	r3
    if (*currentPresenter)
 8004956:	f8d7 013c 	ldr.w	r0, [r7, #316]	; 0x13c
 800495a:	b110      	cbz	r0, 8004962 <_ZN23FrontendApplicationBase52gotoMeasurement_AccurateScreenWipeTransitionEastImplEv+0xa6>
        (*currentPresenter)->~Presenter();
 800495c:	6803      	ldr	r3, [r0, #0]
 800495e:	689b      	ldr	r3, [r3, #8]
 8004960:	4798      	blx	r3
    TransType* newTransition = new (&heap.transitionStorage.at<TransType>(0)) TransType;
 8004962:	68e0      	ldr	r0, [r4, #12]
 8004964:	2100      	movs	r1, #0
 8004966:	f7ff fbb7 	bl	80040d8 <_ZN8touchgfx17AbstractPartition2atINS_14WipeTransitionILNS_9DirectionE2EEEEERT_t>
 800496a:	2114      	movs	r1, #20
 800496c:	4605      	mov	r5, r0
 800496e:	f7ff fbb7 	bl	80040e0 <_ZN8touchgfx14WipeTransitionILNS_9DirectionE2EEC1Eh>
    ScreenType* newScreen = new (&heap.screenStorage.at<ScreenType>(0)) ScreenType;
 8004972:	68a0      	ldr	r0, [r4, #8]
 8004974:	6803      	ldr	r3, [r0, #0]
 8004976:	2100      	movs	r1, #0
 8004978:	6a5b      	ldr	r3, [r3, #36]	; 0x24
 800497a:	4798      	blx	r3
 800497c:	4606      	mov	r6, r0
 800497e:	f003 fe3b 	bl	80085f8 <_ZN24Measurement_AccurateViewC1Ev>
    PresenterType* newPresenter = new (&heap.presenterStorage.at<PresenterType>(0)) PresenterType(*newScreen);
 8004982:	6860      	ldr	r0, [r4, #4]
 8004984:	6803      	ldr	r3, [r0, #0]
 8004986:	2100      	movs	r1, #0
 8004988:	6a5b      	ldr	r3, [r3, #36]	; 0x24
 800498a:	4798      	blx	r3
 800498c:	4631      	mov	r1, r6
 800498e:	4604      	mov	r4, r0
 8004990:	f003 fe0c 	bl	80085ac <_ZN29Measurement_AccuratePresenterC1ER24Measurement_AccurateView>
    *currentTrans = newTransition;
 8004994:	f8c9 5000 	str.w	r5, [r9]
    *currentPresenter = newPresenter;
 8004998:	f8c7 413c 	str.w	r4, [r7, #316]	; 0x13c
    *currentScreen = newScreen;
 800499c:	f8c8 6000 	str.w	r6, [r8]
    model->bind(newPresenter);
 80049a0:	b1dc      	cbz	r4, 80049da <_ZN23FrontendApplicationBase52gotoMeasurement_AccurateScreenWipeTransitionEastImplEv+0x11e>
 80049a2:	1d23      	adds	r3, r4, #4
 80049a4:	f8ca 3000 	str.w	r3, [sl]
    newScreen->setupScreen();
 80049a8:	6833      	ldr	r3, [r6, #0]
 80049aa:	f8c4 a008 	str.w	sl, [r4, #8]
 80049ae:	4630      	mov	r0, r6
 80049b0:	68db      	ldr	r3, [r3, #12]
 80049b2:	63f4      	str	r4, [r6, #60]	; 0x3c
 80049b4:	4798      	blx	r3
    newPresenter->activate();
 80049b6:	6823      	ldr	r3, [r4, #0]
 80049b8:	4620      	mov	r0, r4
 80049ba:	681b      	ldr	r3, [r3, #0]
 80049bc:	4798      	blx	r3
    newScreen->bindTransition(*newTransition);
 80049be:	4629      	mov	r1, r5
 80049c0:	4630      	mov	r0, r6
 80049c2:	f012 fae1 	bl	8016f88 <_ZN8touchgfx6Screen14bindTransitionERNS_10TransitionE>
    newTransition->init();
 80049c6:	682b      	ldr	r3, [r5, #0]
 80049c8:	4628      	mov	r0, r5
 80049ca:	691b      	ldr	r3, [r3, #16]
 80049cc:	4798      	blx	r3
    newTransition->invalidate();
 80049ce:	682b      	ldr	r3, [r5, #0]
 80049d0:	4628      	mov	r0, r5
 80049d2:	695b      	ldr	r3, [r3, #20]
}
 80049d4:	e8bd 47f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, lr}
 80049d8:	4718      	bx	r3
    model->bind(newPresenter);
 80049da:	4623      	mov	r3, r4
 80049dc:	e7e2      	b.n	80049a4 <_ZN23FrontendApplicationBase52gotoMeasurement_AccurateScreenWipeTransitionEastImplEv+0xe8>
 80049de:	bf00      	nop
 80049e0:	0802bd64 	.word	0x0802bd64
 80049e4:	0802cd2b 	.word	0x0802cd2b
 80049e8:	0802bf00 	.word	0x0802bf00
 80049ec:	0802bf47 	.word	0x0802bf47
 80049f0:	0802bfea 	.word	0x0802bfea
 80049f4:	20012f6c 	.word	0x20012f6c
 80049f8:	20012f68 	.word	0x20012f68

080049fc <_ZN23FrontendApplicationBase61gotoMeasurement_Single_Display_3PScreenWipeTransitionEastImplEv>:
{
 80049fc:	e92d 47f0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, lr}
    touchgfx::makeTransition<Measurement_Single_Display_3PView, Measurement_Single_Display_3PPresenter, touchgfx::WipeTransition<EAST>, Model >(&currentScreen, &currentPresenter, frontendHeap, &currentTransition, &model);
 8004a00:	e9d0 4a55 	ldrd	r4, sl, [r0, #340]	; 0x154
{
 8004a04:	4607      	mov	r7, r0
    assert(sizeof(ScreenType) <= heap.screenStorage.element_size() && "View allocation error: Check that all views are added to FrontendHeap::ViewTypes");
 8004a06:	68a0      	ldr	r0, [r4, #8]
 8004a08:	6803      	ldr	r3, [r0, #0]
 8004a0a:	6a1b      	ldr	r3, [r3, #32]
 8004a0c:	4798      	blx	r3
 8004a0e:	f241 33e3 	movw	r3, #5091	; 0x13e3
 8004a12:	4298      	cmp	r0, r3
 8004a14:	d805      	bhi.n	8004a22 <_ZN23FrontendApplicationBase61gotoMeasurement_Single_Display_3PScreenWipeTransitionEastImplEv+0x26>
 8004a16:	4b42      	ldr	r3, [pc, #264]	; (8004b20 <_ZN23FrontendApplicationBase61gotoMeasurement_Single_Display_3PScreenWipeTransitionEastImplEv+0x124>)
 8004a18:	4a42      	ldr	r2, [pc, #264]	; (8004b24 <_ZN23FrontendApplicationBase61gotoMeasurement_Single_Display_3PScreenWipeTransitionEastImplEv+0x128>)
 8004a1a:	21a3      	movs	r1, #163	; 0xa3
    assert(sizeof(PresenterType) <= heap.presenterStorage.element_size() && "Presenter allocation error: Check that all presenters are added to FrontendHeap::PresenterTypes");
 8004a1c:	4842      	ldr	r0, [pc, #264]	; (8004b28 <_ZN23FrontendApplicationBase61gotoMeasurement_Single_Display_3PScreenWipeTransitionEastImplEv+0x12c>)
 8004a1e:	f025 fb11 	bl	802a044 <__assert_func>
 8004a22:	6860      	ldr	r0, [r4, #4]
 8004a24:	6803      	ldr	r3, [r0, #0]
 8004a26:	6a1b      	ldr	r3, [r3, #32]
 8004a28:	4798      	blx	r3
 8004a2a:	280f      	cmp	r0, #15
 8004a2c:	d803      	bhi.n	8004a36 <_ZN23FrontendApplicationBase61gotoMeasurement_Single_Display_3PScreenWipeTransitionEastImplEv+0x3a>
 8004a2e:	4b3f      	ldr	r3, [pc, #252]	; (8004b2c <_ZN23FrontendApplicationBase61gotoMeasurement_Single_Display_3PScreenWipeTransitionEastImplEv+0x130>)
 8004a30:	4a3c      	ldr	r2, [pc, #240]	; (8004b24 <_ZN23FrontendApplicationBase61gotoMeasurement_Single_Display_3PScreenWipeTransitionEastImplEv+0x128>)
 8004a32:	21a4      	movs	r1, #164	; 0xa4
 8004a34:	e7f2      	b.n	8004a1c <_ZN23FrontendApplicationBase61gotoMeasurement_Single_Display_3PScreenWipeTransitionEastImplEv+0x20>
    assert(sizeof(TransType) <= heap.transitionStorage.element_size() && "Transition allocation error: Check that all transitions are added to FrontendHeap::TransitionTypes");
 8004a36:	68e0      	ldr	r0, [r4, #12]
 8004a38:	6803      	ldr	r3, [r0, #0]
 8004a3a:	6a1b      	ldr	r3, [r3, #32]
 8004a3c:	4798      	blx	r3
 8004a3e:	2837      	cmp	r0, #55	; 0x37
 8004a40:	d803      	bhi.n	8004a4a <_ZN23FrontendApplicationBase61gotoMeasurement_Single_Display_3PScreenWipeTransitionEastImplEv+0x4e>
 8004a42:	4b3b      	ldr	r3, [pc, #236]	; (8004b30 <_ZN23FrontendApplicationBase61gotoMeasurement_Single_Display_3PScreenWipeTransitionEastImplEv+0x134>)
 8004a44:	4a37      	ldr	r2, [pc, #220]	; (8004b24 <_ZN23FrontendApplicationBase61gotoMeasurement_Single_Display_3PScreenWipeTransitionEastImplEv+0x128>)
 8004a46:	21a5      	movs	r1, #165	; 0xa5
 8004a48:	e7e8      	b.n	8004a1c <_ZN23FrontendApplicationBase61gotoMeasurement_Single_Display_3PScreenWipeTransitionEastImplEv+0x20>
    Application::getInstance()->clearAllTimerWidgets();
 8004a4a:	f010 fc71 	bl	8015330 <_ZN8touchgfx11Application11getInstanceEv>
    if (*currentTrans)
 8004a4e:	f8df 90e4 	ldr.w	r9, [pc, #228]	; 8004b34 <_ZN23FrontendApplicationBase61gotoMeasurement_Single_Display_3PScreenWipeTransitionEastImplEv+0x138>
 8004a52:	3004      	adds	r0, #4
 8004a54:	f010 fcd2 	bl	80153fc <_ZN8touchgfx11Application12TimerWidgets5clearEv>
 8004a58:	f8d9 0000 	ldr.w	r0, [r9]
 8004a5c:	b110      	cbz	r0, 8004a64 <_ZN23FrontendApplicationBase61gotoMeasurement_Single_Display_3PScreenWipeTransitionEastImplEv+0x68>
        (*currentTrans)->tearDown();
 8004a5e:	6803      	ldr	r3, [r0, #0]
 8004a60:	68db      	ldr	r3, [r3, #12]
 8004a62:	4798      	blx	r3
    if (*currentTrans)
 8004a64:	f8d9 0000 	ldr.w	r0, [r9]
 8004a68:	b110      	cbz	r0, 8004a70 <_ZN23FrontendApplicationBase61gotoMeasurement_Single_Display_3PScreenWipeTransitionEastImplEv+0x74>
        (*currentTrans)->~Transition();
 8004a6a:	6803      	ldr	r3, [r0, #0]
 8004a6c:	681b      	ldr	r3, [r3, #0]
 8004a6e:	4798      	blx	r3
    if (*currentScreen)
 8004a70:	f8df 80c4 	ldr.w	r8, [pc, #196]	; 8004b38 <_ZN23FrontendApplicationBase61gotoMeasurement_Single_Display_3PScreenWipeTransitionEastImplEv+0x13c>
 8004a74:	f8d8 0000 	ldr.w	r0, [r8]
 8004a78:	b110      	cbz	r0, 8004a80 <_ZN23FrontendApplicationBase61gotoMeasurement_Single_Display_3PScreenWipeTransitionEastImplEv+0x84>
        (*currentScreen)->tearDownScreen();
 8004a7a:	6803      	ldr	r3, [r0, #0]
 8004a7c:	695b      	ldr	r3, [r3, #20]
 8004a7e:	4798      	blx	r3
    if (*currentPresenter)
 8004a80:	f8d7 013c 	ldr.w	r0, [r7, #316]	; 0x13c
 8004a84:	b110      	cbz	r0, 8004a8c <_ZN23FrontendApplicationBase61gotoMeasurement_Single_Display_3PScreenWipeTransitionEastImplEv+0x90>
        (*currentPresenter)->deactivate();
 8004a86:	6803      	ldr	r3, [r0, #0]
 8004a88:	685b      	ldr	r3, [r3, #4]
 8004a8a:	4798      	blx	r3
    if (*currentScreen)
 8004a8c:	f8d8 0000 	ldr.w	r0, [r8]
 8004a90:	b110      	cbz	r0, 8004a98 <_ZN23FrontendApplicationBase61gotoMeasurement_Single_Display_3PScreenWipeTransitionEastImplEv+0x9c>
        (*currentScreen)->~Screen();
 8004a92:	6803      	ldr	r3, [r0, #0]
 8004a94:	681b      	ldr	r3, [r3, #0]
 8004a96:	4798      	blx	r3
    if (*currentPresenter)
 8004a98:	f8d7 013c 	ldr.w	r0, [r7, #316]	; 0x13c
 8004a9c:	b110      	cbz	r0, 8004aa4 <_ZN23FrontendApplicationBase61gotoMeasurement_Single_Display_3PScreenWipeTransitionEastImplEv+0xa8>
        (*currentPresenter)->~Presenter();
 8004a9e:	6803      	ldr	r3, [r0, #0]
 8004aa0:	689b      	ldr	r3, [r3, #8]
 8004aa2:	4798      	blx	r3
    TransType* newTransition = new (&heap.transitionStorage.at<TransType>(0)) TransType;
 8004aa4:	68e0      	ldr	r0, [r4, #12]
 8004aa6:	2100      	movs	r1, #0
 8004aa8:	f7ff fb16 	bl	80040d8 <_ZN8touchgfx17AbstractPartition2atINS_14WipeTransitionILNS_9DirectionE2EEEEERT_t>
 8004aac:	2114      	movs	r1, #20
 8004aae:	4605      	mov	r5, r0
 8004ab0:	f7ff fb16 	bl	80040e0 <_ZN8touchgfx14WipeTransitionILNS_9DirectionE2EEC1Eh>
    ScreenType* newScreen = new (&heap.screenStorage.at<ScreenType>(0)) ScreenType;
 8004ab4:	68a0      	ldr	r0, [r4, #8]
 8004ab6:	6803      	ldr	r3, [r0, #0]
 8004ab8:	2100      	movs	r1, #0
 8004aba:	6a5b      	ldr	r3, [r3, #36]	; 0x24
 8004abc:	4798      	blx	r3
 8004abe:	4606      	mov	r6, r0
 8004ac0:	f003 ff60 	bl	8008984 <_ZN33Measurement_Single_Display_3PViewC1Ev>
    PresenterType* newPresenter = new (&heap.presenterStorage.at<PresenterType>(0)) PresenterType(*newScreen);
 8004ac4:	6860      	ldr	r0, [r4, #4]
 8004ac6:	6803      	ldr	r3, [r0, #0]
 8004ac8:	2100      	movs	r1, #0
 8004aca:	6a5b      	ldr	r3, [r3, #36]	; 0x24
 8004acc:	4798      	blx	r3
 8004ace:	4631      	mov	r1, r6
 8004ad0:	4604      	mov	r4, r0
 8004ad2:	f003 ff31 	bl	8008938 <_ZN38Measurement_Single_Display_3PPresenterC1ER33Measurement_Single_Display_3PView>
    *currentTrans = newTransition;
 8004ad6:	f8c9 5000 	str.w	r5, [r9]
    *currentPresenter = newPresenter;
 8004ada:	f8c7 413c 	str.w	r4, [r7, #316]	; 0x13c
    *currentScreen = newScreen;
 8004ade:	f8c8 6000 	str.w	r6, [r8]
    model->bind(newPresenter);
 8004ae2:	b1dc      	cbz	r4, 8004b1c <_ZN23FrontendApplicationBase61gotoMeasurement_Single_Display_3PScreenWipeTransitionEastImplEv+0x120>
 8004ae4:	1d23      	adds	r3, r4, #4
 8004ae6:	f8ca 3000 	str.w	r3, [sl]
    newScreen->setupScreen();
 8004aea:	6833      	ldr	r3, [r6, #0]
 8004aec:	f8c4 a008 	str.w	sl, [r4, #8]
 8004af0:	4630      	mov	r0, r6
 8004af2:	68db      	ldr	r3, [r3, #12]
 8004af4:	63f4      	str	r4, [r6, #60]	; 0x3c
 8004af6:	4798      	blx	r3
    newPresenter->activate();
 8004af8:	6823      	ldr	r3, [r4, #0]
 8004afa:	4620      	mov	r0, r4
 8004afc:	681b      	ldr	r3, [r3, #0]
 8004afe:	4798      	blx	r3
    newScreen->bindTransition(*newTransition);
 8004b00:	4629      	mov	r1, r5
 8004b02:	4630      	mov	r0, r6
 8004b04:	f012 fa40 	bl	8016f88 <_ZN8touchgfx6Screen14bindTransitionERNS_10TransitionE>
    newTransition->init();
 8004b08:	682b      	ldr	r3, [r5, #0]
 8004b0a:	4628      	mov	r0, r5
 8004b0c:	691b      	ldr	r3, [r3, #16]
 8004b0e:	4798      	blx	r3
    newTransition->invalidate();
 8004b10:	682b      	ldr	r3, [r5, #0]
 8004b12:	4628      	mov	r0, r5
 8004b14:	695b      	ldr	r3, [r3, #20]
}
 8004b16:	e8bd 47f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, lr}
 8004b1a:	4718      	bx	r3
    model->bind(newPresenter);
 8004b1c:	4623      	mov	r3, r4
 8004b1e:	e7e2      	b.n	8004ae6 <_ZN23FrontendApplicationBase61gotoMeasurement_Single_Display_3PScreenWipeTransitionEastImplEv+0xea>
 8004b20:	0802bd64 	.word	0x0802bd64
 8004b24:	0802ce5b 	.word	0x0802ce5b
 8004b28:	0802bf00 	.word	0x0802bf00
 8004b2c:	0802bf47 	.word	0x0802bf47
 8004b30:	0802bfea 	.word	0x0802bfea
 8004b34:	20012f6c 	.word	0x20012f6c
 8004b38:	20012f68 	.word	0x20012f68

08004b3c <_ZN23FrontendApplicationBase61gotoMeasurement_Single_Display_1PScreenWipeTransitionEastImplEv>:
{
 8004b3c:	e92d 47f0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, lr}
    touchgfx::makeTransition<Measurement_Single_Display_1PView, Measurement_Single_Display_1PPresenter, touchgfx::WipeTransition<EAST>, Model >(&currentScreen, &currentPresenter, frontendHeap, &currentTransition, &model);
 8004b40:	e9d0 4a55 	ldrd	r4, sl, [r0, #340]	; 0x154
{
 8004b44:	4607      	mov	r7, r0
    assert(sizeof(ScreenType) <= heap.screenStorage.element_size() && "View allocation error: Check that all views are added to FrontendHeap::ViewTypes");
 8004b46:	68a0      	ldr	r0, [r4, #8]
 8004b48:	6803      	ldr	r3, [r0, #0]
 8004b4a:	6a1b      	ldr	r3, [r3, #32]
 8004b4c:	4798      	blx	r3
 8004b4e:	f241 33f3 	movw	r3, #5107	; 0x13f3
 8004b52:	4298      	cmp	r0, r3
 8004b54:	d805      	bhi.n	8004b62 <_ZN23FrontendApplicationBase61gotoMeasurement_Single_Display_1PScreenWipeTransitionEastImplEv+0x26>
 8004b56:	4b42      	ldr	r3, [pc, #264]	; (8004c60 <_ZN23FrontendApplicationBase61gotoMeasurement_Single_Display_1PScreenWipeTransitionEastImplEv+0x124>)
 8004b58:	4a42      	ldr	r2, [pc, #264]	; (8004c64 <_ZN23FrontendApplicationBase61gotoMeasurement_Single_Display_1PScreenWipeTransitionEastImplEv+0x128>)
 8004b5a:	21a3      	movs	r1, #163	; 0xa3
    assert(sizeof(PresenterType) <= heap.presenterStorage.element_size() && "Presenter allocation error: Check that all presenters are added to FrontendHeap::PresenterTypes");
 8004b5c:	4842      	ldr	r0, [pc, #264]	; (8004c68 <_ZN23FrontendApplicationBase61gotoMeasurement_Single_Display_1PScreenWipeTransitionEastImplEv+0x12c>)
 8004b5e:	f025 fa71 	bl	802a044 <__assert_func>
 8004b62:	6860      	ldr	r0, [r4, #4]
 8004b64:	6803      	ldr	r3, [r0, #0]
 8004b66:	6a1b      	ldr	r3, [r3, #32]
 8004b68:	4798      	blx	r3
 8004b6a:	280f      	cmp	r0, #15
 8004b6c:	d803      	bhi.n	8004b76 <_ZN23FrontendApplicationBase61gotoMeasurement_Single_Display_1PScreenWipeTransitionEastImplEv+0x3a>
 8004b6e:	4b3f      	ldr	r3, [pc, #252]	; (8004c6c <_ZN23FrontendApplicationBase61gotoMeasurement_Single_Display_1PScreenWipeTransitionEastImplEv+0x130>)
 8004b70:	4a3c      	ldr	r2, [pc, #240]	; (8004c64 <_ZN23FrontendApplicationBase61gotoMeasurement_Single_Display_1PScreenWipeTransitionEastImplEv+0x128>)
 8004b72:	21a4      	movs	r1, #164	; 0xa4
 8004b74:	e7f2      	b.n	8004b5c <_ZN23FrontendApplicationBase61gotoMeasurement_Single_Display_1PScreenWipeTransitionEastImplEv+0x20>
    assert(sizeof(TransType) <= heap.transitionStorage.element_size() && "Transition allocation error: Check that all transitions are added to FrontendHeap::TransitionTypes");
 8004b76:	68e0      	ldr	r0, [r4, #12]
 8004b78:	6803      	ldr	r3, [r0, #0]
 8004b7a:	6a1b      	ldr	r3, [r3, #32]
 8004b7c:	4798      	blx	r3
 8004b7e:	2837      	cmp	r0, #55	; 0x37
 8004b80:	d803      	bhi.n	8004b8a <_ZN23FrontendApplicationBase61gotoMeasurement_Single_Display_1PScreenWipeTransitionEastImplEv+0x4e>
 8004b82:	4b3b      	ldr	r3, [pc, #236]	; (8004c70 <_ZN23FrontendApplicationBase61gotoMeasurement_Single_Display_1PScreenWipeTransitionEastImplEv+0x134>)
 8004b84:	4a37      	ldr	r2, [pc, #220]	; (8004c64 <_ZN23FrontendApplicationBase61gotoMeasurement_Single_Display_1PScreenWipeTransitionEastImplEv+0x128>)
 8004b86:	21a5      	movs	r1, #165	; 0xa5
 8004b88:	e7e8      	b.n	8004b5c <_ZN23FrontendApplicationBase61gotoMeasurement_Single_Display_1PScreenWipeTransitionEastImplEv+0x20>
    Application::getInstance()->clearAllTimerWidgets();
 8004b8a:	f010 fbd1 	bl	8015330 <_ZN8touchgfx11Application11getInstanceEv>
    if (*currentTrans)
 8004b8e:	f8df 90e4 	ldr.w	r9, [pc, #228]	; 8004c74 <_ZN23FrontendApplicationBase61gotoMeasurement_Single_Display_1PScreenWipeTransitionEastImplEv+0x138>
 8004b92:	3004      	adds	r0, #4
 8004b94:	f010 fc32 	bl	80153fc <_ZN8touchgfx11Application12TimerWidgets5clearEv>
 8004b98:	f8d9 0000 	ldr.w	r0, [r9]
 8004b9c:	b110      	cbz	r0, 8004ba4 <_ZN23FrontendApplicationBase61gotoMeasurement_Single_Display_1PScreenWipeTransitionEastImplEv+0x68>
        (*currentTrans)->tearDown();
 8004b9e:	6803      	ldr	r3, [r0, #0]
 8004ba0:	68db      	ldr	r3, [r3, #12]
 8004ba2:	4798      	blx	r3
    if (*currentTrans)
 8004ba4:	f8d9 0000 	ldr.w	r0, [r9]
 8004ba8:	b110      	cbz	r0, 8004bb0 <_ZN23FrontendApplicationBase61gotoMeasurement_Single_Display_1PScreenWipeTransitionEastImplEv+0x74>
        (*currentTrans)->~Transition();
 8004baa:	6803      	ldr	r3, [r0, #0]
 8004bac:	681b      	ldr	r3, [r3, #0]
 8004bae:	4798      	blx	r3
    if (*currentScreen)
 8004bb0:	f8df 80c4 	ldr.w	r8, [pc, #196]	; 8004c78 <_ZN23FrontendApplicationBase61gotoMeasurement_Single_Display_1PScreenWipeTransitionEastImplEv+0x13c>
 8004bb4:	f8d8 0000 	ldr.w	r0, [r8]
 8004bb8:	b110      	cbz	r0, 8004bc0 <_ZN23FrontendApplicationBase61gotoMeasurement_Single_Display_1PScreenWipeTransitionEastImplEv+0x84>
        (*currentScreen)->tearDownScreen();
 8004bba:	6803      	ldr	r3, [r0, #0]
 8004bbc:	695b      	ldr	r3, [r3, #20]
 8004bbe:	4798      	blx	r3
    if (*currentPresenter)
 8004bc0:	f8d7 013c 	ldr.w	r0, [r7, #316]	; 0x13c
 8004bc4:	b110      	cbz	r0, 8004bcc <_ZN23FrontendApplicationBase61gotoMeasurement_Single_Display_1PScreenWipeTransitionEastImplEv+0x90>
        (*currentPresenter)->deactivate();
 8004bc6:	6803      	ldr	r3, [r0, #0]
 8004bc8:	685b      	ldr	r3, [r3, #4]
 8004bca:	4798      	blx	r3
    if (*currentScreen)
 8004bcc:	f8d8 0000 	ldr.w	r0, [r8]
 8004bd0:	b110      	cbz	r0, 8004bd8 <_ZN23FrontendApplicationBase61gotoMeasurement_Single_Display_1PScreenWipeTransitionEastImplEv+0x9c>
        (*currentScreen)->~Screen();
 8004bd2:	6803      	ldr	r3, [r0, #0]
 8004bd4:	681b      	ldr	r3, [r3, #0]
 8004bd6:	4798      	blx	r3
    if (*currentPresenter)
 8004bd8:	f8d7 013c 	ldr.w	r0, [r7, #316]	; 0x13c
 8004bdc:	b110      	cbz	r0, 8004be4 <_ZN23FrontendApplicationBase61gotoMeasurement_Single_Display_1PScreenWipeTransitionEastImplEv+0xa8>
        (*currentPresenter)->~Presenter();
 8004bde:	6803      	ldr	r3, [r0, #0]
 8004be0:	689b      	ldr	r3, [r3, #8]
 8004be2:	4798      	blx	r3
    TransType* newTransition = new (&heap.transitionStorage.at<TransType>(0)) TransType;
 8004be4:	68e0      	ldr	r0, [r4, #12]
 8004be6:	2100      	movs	r1, #0
 8004be8:	f7ff fa76 	bl	80040d8 <_ZN8touchgfx17AbstractPartition2atINS_14WipeTransitionILNS_9DirectionE2EEEEERT_t>
 8004bec:	2114      	movs	r1, #20
 8004bee:	4605      	mov	r5, r0
 8004bf0:	f7ff fa76 	bl	80040e0 <_ZN8touchgfx14WipeTransitionILNS_9DirectionE2EEC1Eh>
    ScreenType* newScreen = new (&heap.screenStorage.at<ScreenType>(0)) ScreenType;
 8004bf4:	68a0      	ldr	r0, [r4, #8]
 8004bf6:	6803      	ldr	r3, [r0, #0]
 8004bf8:	2100      	movs	r1, #0
 8004bfa:	6a5b      	ldr	r3, [r3, #36]	; 0x24
 8004bfc:	4798      	blx	r3
 8004bfe:	4606      	mov	r6, r0
 8004c00:	f003 fe38 	bl	8008874 <_ZN33Measurement_Single_Display_1PViewC1Ev>
    PresenterType* newPresenter = new (&heap.presenterStorage.at<PresenterType>(0)) PresenterType(*newScreen);
 8004c04:	6860      	ldr	r0, [r4, #4]
 8004c06:	6803      	ldr	r3, [r0, #0]
 8004c08:	2100      	movs	r1, #0
 8004c0a:	6a5b      	ldr	r3, [r3, #36]	; 0x24
 8004c0c:	4798      	blx	r3
 8004c0e:	4631      	mov	r1, r6
 8004c10:	4604      	mov	r4, r0
 8004c12:	f003 fe09 	bl	8008828 <_ZN38Measurement_Single_Display_1PPresenterC1ER33Measurement_Single_Display_1PView>
    *currentTrans = newTransition;
 8004c16:	f8c9 5000 	str.w	r5, [r9]
    *currentPresenter = newPresenter;
 8004c1a:	f8c7 413c 	str.w	r4, [r7, #316]	; 0x13c
    *currentScreen = newScreen;
 8004c1e:	f8c8 6000 	str.w	r6, [r8]
    model->bind(newPresenter);
 8004c22:	b1dc      	cbz	r4, 8004c5c <_ZN23FrontendApplicationBase61gotoMeasurement_Single_Display_1PScreenWipeTransitionEastImplEv+0x120>
 8004c24:	1d23      	adds	r3, r4, #4
 8004c26:	f8ca 3000 	str.w	r3, [sl]
    newScreen->setupScreen();
 8004c2a:	6833      	ldr	r3, [r6, #0]
 8004c2c:	f8c4 a008 	str.w	sl, [r4, #8]
 8004c30:	4630      	mov	r0, r6
 8004c32:	68db      	ldr	r3, [r3, #12]
 8004c34:	63f4      	str	r4, [r6, #60]	; 0x3c
 8004c36:	4798      	blx	r3
    newPresenter->activate();
 8004c38:	6823      	ldr	r3, [r4, #0]
 8004c3a:	4620      	mov	r0, r4
 8004c3c:	681b      	ldr	r3, [r3, #0]
 8004c3e:	4798      	blx	r3
    newScreen->bindTransition(*newTransition);
 8004c40:	4629      	mov	r1, r5
 8004c42:	4630      	mov	r0, r6
 8004c44:	f012 f9a0 	bl	8016f88 <_ZN8touchgfx6Screen14bindTransitionERNS_10TransitionE>
    newTransition->init();
 8004c48:	682b      	ldr	r3, [r5, #0]
 8004c4a:	4628      	mov	r0, r5
 8004c4c:	691b      	ldr	r3, [r3, #16]
 8004c4e:	4798      	blx	r3
    newTransition->invalidate();
 8004c50:	682b      	ldr	r3, [r5, #0]
 8004c52:	4628      	mov	r0, r5
 8004c54:	695b      	ldr	r3, [r3, #20]
}
 8004c56:	e8bd 47f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, lr}
 8004c5a:	4718      	bx	r3
    model->bind(newPresenter);
 8004c5c:	4623      	mov	r3, r4
 8004c5e:	e7e2      	b.n	8004c26 <_ZN23FrontendApplicationBase61gotoMeasurement_Single_Display_1PScreenWipeTransitionEastImplEv+0xea>
 8004c60:	0802bd64 	.word	0x0802bd64
 8004c64:	0802cf9d 	.word	0x0802cf9d
 8004c68:	0802bf00 	.word	0x0802bf00
 8004c6c:	0802bf47 	.word	0x0802bf47
 8004c70:	0802bfea 	.word	0x0802bfea
 8004c74:	20012f6c 	.word	0x20012f6c
 8004c78:	20012f68 	.word	0x20012f68

08004c7c <_ZN23FrontendApplicationBase50gotoMeasurement_SingleScreenWipeTransitionEastImplEv>:
{
 8004c7c:	e92d 47f0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, lr}
    touchgfx::makeTransition<Measurement_SingleView, Measurement_SinglePresenter, touchgfx::WipeTransition<EAST>, Model >(&currentScreen, &currentPresenter, frontendHeap, &currentTransition, &model);
 8004c80:	e9d0 4a55 	ldrd	r4, sl, [r0, #340]	; 0x154
{
 8004c84:	4607      	mov	r7, r0
    assert(sizeof(ScreenType) <= heap.screenStorage.element_size() && "View allocation error: Check that all views are added to FrontendHeap::ViewTypes");
 8004c86:	68a0      	ldr	r0, [r4, #8]
 8004c88:	6803      	ldr	r3, [r0, #0]
 8004c8a:	6a1b      	ldr	r3, [r3, #32]
 8004c8c:	4798      	blx	r3
 8004c8e:	f5b0 5f8a 	cmp.w	r0, #4416	; 0x1140
 8004c92:	d205      	bcs.n	8004ca0 <_ZN23FrontendApplicationBase50gotoMeasurement_SingleScreenWipeTransitionEastImplEv+0x24>
 8004c94:	4b42      	ldr	r3, [pc, #264]	; (8004da0 <_ZN23FrontendApplicationBase50gotoMeasurement_SingleScreenWipeTransitionEastImplEv+0x124>)
 8004c96:	4a43      	ldr	r2, [pc, #268]	; (8004da4 <_ZN23FrontendApplicationBase50gotoMeasurement_SingleScreenWipeTransitionEastImplEv+0x128>)
 8004c98:	21a3      	movs	r1, #163	; 0xa3
    assert(sizeof(PresenterType) <= heap.presenterStorage.element_size() && "Presenter allocation error: Check that all presenters are added to FrontendHeap::PresenterTypes");
 8004c9a:	4843      	ldr	r0, [pc, #268]	; (8004da8 <_ZN23FrontendApplicationBase50gotoMeasurement_SingleScreenWipeTransitionEastImplEv+0x12c>)
 8004c9c:	f025 f9d2 	bl	802a044 <__assert_func>
 8004ca0:	6860      	ldr	r0, [r4, #4]
 8004ca2:	6803      	ldr	r3, [r0, #0]
 8004ca4:	6a1b      	ldr	r3, [r3, #32]
 8004ca6:	4798      	blx	r3
 8004ca8:	280f      	cmp	r0, #15
 8004caa:	d803      	bhi.n	8004cb4 <_ZN23FrontendApplicationBase50gotoMeasurement_SingleScreenWipeTransitionEastImplEv+0x38>
 8004cac:	4b3f      	ldr	r3, [pc, #252]	; (8004dac <_ZN23FrontendApplicationBase50gotoMeasurement_SingleScreenWipeTransitionEastImplEv+0x130>)
 8004cae:	4a3d      	ldr	r2, [pc, #244]	; (8004da4 <_ZN23FrontendApplicationBase50gotoMeasurement_SingleScreenWipeTransitionEastImplEv+0x128>)
 8004cb0:	21a4      	movs	r1, #164	; 0xa4
 8004cb2:	e7f2      	b.n	8004c9a <_ZN23FrontendApplicationBase50gotoMeasurement_SingleScreenWipeTransitionEastImplEv+0x1e>
    assert(sizeof(TransType) <= heap.transitionStorage.element_size() && "Transition allocation error: Check that all transitions are added to FrontendHeap::TransitionTypes");
 8004cb4:	68e0      	ldr	r0, [r4, #12]
 8004cb6:	6803      	ldr	r3, [r0, #0]
 8004cb8:	6a1b      	ldr	r3, [r3, #32]
 8004cba:	4798      	blx	r3
 8004cbc:	2837      	cmp	r0, #55	; 0x37
 8004cbe:	d803      	bhi.n	8004cc8 <_ZN23FrontendApplicationBase50gotoMeasurement_SingleScreenWipeTransitionEastImplEv+0x4c>
 8004cc0:	4b3b      	ldr	r3, [pc, #236]	; (8004db0 <_ZN23FrontendApplicationBase50gotoMeasurement_SingleScreenWipeTransitionEastImplEv+0x134>)
 8004cc2:	4a38      	ldr	r2, [pc, #224]	; (8004da4 <_ZN23FrontendApplicationBase50gotoMeasurement_SingleScreenWipeTransitionEastImplEv+0x128>)
 8004cc4:	21a5      	movs	r1, #165	; 0xa5
 8004cc6:	e7e8      	b.n	8004c9a <_ZN23FrontendApplicationBase50gotoMeasurement_SingleScreenWipeTransitionEastImplEv+0x1e>
    Application::getInstance()->clearAllTimerWidgets();
 8004cc8:	f010 fb32 	bl	8015330 <_ZN8touchgfx11Application11getInstanceEv>
    if (*currentTrans)
 8004ccc:	f8df 90e4 	ldr.w	r9, [pc, #228]	; 8004db4 <_ZN23FrontendApplicationBase50gotoMeasurement_SingleScreenWipeTransitionEastImplEv+0x138>
 8004cd0:	3004      	adds	r0, #4
 8004cd2:	f010 fb93 	bl	80153fc <_ZN8touchgfx11Application12TimerWidgets5clearEv>
 8004cd6:	f8d9 0000 	ldr.w	r0, [r9]
 8004cda:	b110      	cbz	r0, 8004ce2 <_ZN23FrontendApplicationBase50gotoMeasurement_SingleScreenWipeTransitionEastImplEv+0x66>
        (*currentTrans)->tearDown();
 8004cdc:	6803      	ldr	r3, [r0, #0]
 8004cde:	68db      	ldr	r3, [r3, #12]
 8004ce0:	4798      	blx	r3
    if (*currentTrans)
 8004ce2:	f8d9 0000 	ldr.w	r0, [r9]
 8004ce6:	b110      	cbz	r0, 8004cee <_ZN23FrontendApplicationBase50gotoMeasurement_SingleScreenWipeTransitionEastImplEv+0x72>
        (*currentTrans)->~Transition();
 8004ce8:	6803      	ldr	r3, [r0, #0]
 8004cea:	681b      	ldr	r3, [r3, #0]
 8004cec:	4798      	blx	r3
    if (*currentScreen)
 8004cee:	f8df 80c8 	ldr.w	r8, [pc, #200]	; 8004db8 <_ZN23FrontendApplicationBase50gotoMeasurement_SingleScreenWipeTransitionEastImplEv+0x13c>
 8004cf2:	f8d8 0000 	ldr.w	r0, [r8]
 8004cf6:	b110      	cbz	r0, 8004cfe <_ZN23FrontendApplicationBase50gotoMeasurement_SingleScreenWipeTransitionEastImplEv+0x82>
        (*currentScreen)->tearDownScreen();
 8004cf8:	6803      	ldr	r3, [r0, #0]
 8004cfa:	695b      	ldr	r3, [r3, #20]
 8004cfc:	4798      	blx	r3
    if (*currentPresenter)
 8004cfe:	f8d7 013c 	ldr.w	r0, [r7, #316]	; 0x13c
 8004d02:	b110      	cbz	r0, 8004d0a <_ZN23FrontendApplicationBase50gotoMeasurement_SingleScreenWipeTransitionEastImplEv+0x8e>
        (*currentPresenter)->deactivate();
 8004d04:	6803      	ldr	r3, [r0, #0]
 8004d06:	685b      	ldr	r3, [r3, #4]
 8004d08:	4798      	blx	r3
    if (*currentScreen)
 8004d0a:	f8d8 0000 	ldr.w	r0, [r8]
 8004d0e:	b110      	cbz	r0, 8004d16 <_ZN23FrontendApplicationBase50gotoMeasurement_SingleScreenWipeTransitionEastImplEv+0x9a>
        (*currentScreen)->~Screen();
 8004d10:	6803      	ldr	r3, [r0, #0]
 8004d12:	681b      	ldr	r3, [r3, #0]
 8004d14:	4798      	blx	r3
    if (*currentPresenter)
 8004d16:	f8d7 013c 	ldr.w	r0, [r7, #316]	; 0x13c
 8004d1a:	b110      	cbz	r0, 8004d22 <_ZN23FrontendApplicationBase50gotoMeasurement_SingleScreenWipeTransitionEastImplEv+0xa6>
        (*currentPresenter)->~Presenter();
 8004d1c:	6803      	ldr	r3, [r0, #0]
 8004d1e:	689b      	ldr	r3, [r3, #8]
 8004d20:	4798      	blx	r3
    TransType* newTransition = new (&heap.transitionStorage.at<TransType>(0)) TransType;
 8004d22:	68e0      	ldr	r0, [r4, #12]
 8004d24:	2100      	movs	r1, #0
 8004d26:	f7ff f9d7 	bl	80040d8 <_ZN8touchgfx17AbstractPartition2atINS_14WipeTransitionILNS_9DirectionE2EEEEERT_t>
 8004d2a:	2114      	movs	r1, #20
 8004d2c:	4605      	mov	r5, r0
 8004d2e:	f7ff f9d7 	bl	80040e0 <_ZN8touchgfx14WipeTransitionILNS_9DirectionE2EEC1Eh>
    ScreenType* newScreen = new (&heap.screenStorage.at<ScreenType>(0)) ScreenType;
 8004d32:	68a0      	ldr	r0, [r4, #8]
 8004d34:	6803      	ldr	r3, [r0, #0]
 8004d36:	2100      	movs	r1, #0
 8004d38:	6a5b      	ldr	r3, [r3, #36]	; 0x24
 8004d3a:	4798      	blx	r3
 8004d3c:	4606      	mov	r6, r0
 8004d3e:	f003 fd3f 	bl	80087c0 <_ZN22Measurement_SingleViewC1Ev>
    PresenterType* newPresenter = new (&heap.presenterStorage.at<PresenterType>(0)) PresenterType(*newScreen);
 8004d42:	6860      	ldr	r0, [r4, #4]
 8004d44:	6803      	ldr	r3, [r0, #0]
 8004d46:	2100      	movs	r1, #0
 8004d48:	6a5b      	ldr	r3, [r3, #36]	; 0x24
 8004d4a:	4798      	blx	r3
 8004d4c:	4631      	mov	r1, r6
 8004d4e:	4604      	mov	r4, r0
 8004d50:	f003 fd10 	bl	8008774 <_ZN27Measurement_SinglePresenterC1ER22Measurement_SingleView>
    *currentTrans = newTransition;
 8004d54:	f8c9 5000 	str.w	r5, [r9]
    *currentPresenter = newPresenter;
 8004d58:	f8c7 413c 	str.w	r4, [r7, #316]	; 0x13c
    *currentScreen = newScreen;
 8004d5c:	f8c8 6000 	str.w	r6, [r8]
    model->bind(newPresenter);
 8004d60:	b1dc      	cbz	r4, 8004d9a <_ZN23FrontendApplicationBase50gotoMeasurement_SingleScreenWipeTransitionEastImplEv+0x11e>
 8004d62:	1d23      	adds	r3, r4, #4
 8004d64:	f8ca 3000 	str.w	r3, [sl]
    newScreen->setupScreen();
 8004d68:	6833      	ldr	r3, [r6, #0]
 8004d6a:	f8c4 a008 	str.w	sl, [r4, #8]
 8004d6e:	4630      	mov	r0, r6
 8004d70:	68db      	ldr	r3, [r3, #12]
 8004d72:	63f4      	str	r4, [r6, #60]	; 0x3c
 8004d74:	4798      	blx	r3
    newPresenter->activate();
 8004d76:	6823      	ldr	r3, [r4, #0]
 8004d78:	4620      	mov	r0, r4
 8004d7a:	681b      	ldr	r3, [r3, #0]
 8004d7c:	4798      	blx	r3
    newScreen->bindTransition(*newTransition);
 8004d7e:	4629      	mov	r1, r5
 8004d80:	4630      	mov	r0, r6
 8004d82:	f012 f901 	bl	8016f88 <_ZN8touchgfx6Screen14bindTransitionERNS_10TransitionE>
    newTransition->init();
 8004d86:	682b      	ldr	r3, [r5, #0]
 8004d88:	4628      	mov	r0, r5
 8004d8a:	691b      	ldr	r3, [r3, #16]
 8004d8c:	4798      	blx	r3
    newTransition->invalidate();
 8004d8e:	682b      	ldr	r3, [r5, #0]
 8004d90:	4628      	mov	r0, r5
 8004d92:	695b      	ldr	r3, [r3, #20]
}
 8004d94:	e8bd 47f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, lr}
 8004d98:	4718      	bx	r3
    model->bind(newPresenter);
 8004d9a:	4623      	mov	r3, r4
 8004d9c:	e7e2      	b.n	8004d64 <_ZN23FrontendApplicationBase50gotoMeasurement_SingleScreenWipeTransitionEastImplEv+0xe8>
 8004d9e:	bf00      	nop
 8004da0:	0802bd64 	.word	0x0802bd64
 8004da4:	0802d0df 	.word	0x0802d0df
 8004da8:	0802bf00 	.word	0x0802bf00
 8004dac:	0802bf47 	.word	0x0802bf47
 8004db0:	0802bfea 	.word	0x0802bfea
 8004db4:	20012f6c 	.word	0x20012f6c
 8004db8:	20012f68 	.word	0x20012f68

08004dbc <_ZN23FrontendApplicationBase43gotoMeasurementScreenWipeTransitionEastImplEv>:
{
 8004dbc:	e92d 47f0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, lr}
    touchgfx::makeTransition<MeasurementView, MeasurementPresenter, touchgfx::WipeTransition<EAST>, Model >(&currentScreen, &currentPresenter, frontendHeap, &currentTransition, &model);
 8004dc0:	e9d0 4a55 	ldrd	r4, sl, [r0, #340]	; 0x154
{
 8004dc4:	4607      	mov	r7, r0
    assert(sizeof(ScreenType) <= heap.screenStorage.element_size() && "View allocation error: Check that all views are added to FrontendHeap::ViewTypes");
 8004dc6:	68a0      	ldr	r0, [r4, #8]
 8004dc8:	6803      	ldr	r3, [r0, #0]
 8004dca:	6a1b      	ldr	r3, [r3, #32]
 8004dcc:	4798      	blx	r3
 8004dce:	f5b0 5f8a 	cmp.w	r0, #4416	; 0x1140
 8004dd2:	d205      	bcs.n	8004de0 <_ZN23FrontendApplicationBase43gotoMeasurementScreenWipeTransitionEastImplEv+0x24>
 8004dd4:	4b42      	ldr	r3, [pc, #264]	; (8004ee0 <_ZN23FrontendApplicationBase43gotoMeasurementScreenWipeTransitionEastImplEv+0x124>)
 8004dd6:	4a43      	ldr	r2, [pc, #268]	; (8004ee4 <_ZN23FrontendApplicationBase43gotoMeasurementScreenWipeTransitionEastImplEv+0x128>)
 8004dd8:	21a3      	movs	r1, #163	; 0xa3
    assert(sizeof(PresenterType) <= heap.presenterStorage.element_size() && "Presenter allocation error: Check that all presenters are added to FrontendHeap::PresenterTypes");
 8004dda:	4843      	ldr	r0, [pc, #268]	; (8004ee8 <_ZN23FrontendApplicationBase43gotoMeasurementScreenWipeTransitionEastImplEv+0x12c>)
 8004ddc:	f025 f932 	bl	802a044 <__assert_func>
 8004de0:	6860      	ldr	r0, [r4, #4]
 8004de2:	6803      	ldr	r3, [r0, #0]
 8004de4:	6a1b      	ldr	r3, [r3, #32]
 8004de6:	4798      	blx	r3
 8004de8:	280f      	cmp	r0, #15
 8004dea:	d803      	bhi.n	8004df4 <_ZN23FrontendApplicationBase43gotoMeasurementScreenWipeTransitionEastImplEv+0x38>
 8004dec:	4b3f      	ldr	r3, [pc, #252]	; (8004eec <_ZN23FrontendApplicationBase43gotoMeasurementScreenWipeTransitionEastImplEv+0x130>)
 8004dee:	4a3d      	ldr	r2, [pc, #244]	; (8004ee4 <_ZN23FrontendApplicationBase43gotoMeasurementScreenWipeTransitionEastImplEv+0x128>)
 8004df0:	21a4      	movs	r1, #164	; 0xa4
 8004df2:	e7f2      	b.n	8004dda <_ZN23FrontendApplicationBase43gotoMeasurementScreenWipeTransitionEastImplEv+0x1e>
    assert(sizeof(TransType) <= heap.transitionStorage.element_size() && "Transition allocation error: Check that all transitions are added to FrontendHeap::TransitionTypes");
 8004df4:	68e0      	ldr	r0, [r4, #12]
 8004df6:	6803      	ldr	r3, [r0, #0]
 8004df8:	6a1b      	ldr	r3, [r3, #32]
 8004dfa:	4798      	blx	r3
 8004dfc:	2837      	cmp	r0, #55	; 0x37
 8004dfe:	d803      	bhi.n	8004e08 <_ZN23FrontendApplicationBase43gotoMeasurementScreenWipeTransitionEastImplEv+0x4c>
 8004e00:	4b3b      	ldr	r3, [pc, #236]	; (8004ef0 <_ZN23FrontendApplicationBase43gotoMeasurementScreenWipeTransitionEastImplEv+0x134>)
 8004e02:	4a38      	ldr	r2, [pc, #224]	; (8004ee4 <_ZN23FrontendApplicationBase43gotoMeasurementScreenWipeTransitionEastImplEv+0x128>)
 8004e04:	21a5      	movs	r1, #165	; 0xa5
 8004e06:	e7e8      	b.n	8004dda <_ZN23FrontendApplicationBase43gotoMeasurementScreenWipeTransitionEastImplEv+0x1e>
    Application::getInstance()->clearAllTimerWidgets();
 8004e08:	f010 fa92 	bl	8015330 <_ZN8touchgfx11Application11getInstanceEv>
    if (*currentTrans)
 8004e0c:	f8df 90e4 	ldr.w	r9, [pc, #228]	; 8004ef4 <_ZN23FrontendApplicationBase43gotoMeasurementScreenWipeTransitionEastImplEv+0x138>
 8004e10:	3004      	adds	r0, #4
 8004e12:	f010 faf3 	bl	80153fc <_ZN8touchgfx11Application12TimerWidgets5clearEv>
 8004e16:	f8d9 0000 	ldr.w	r0, [r9]
 8004e1a:	b110      	cbz	r0, 8004e22 <_ZN23FrontendApplicationBase43gotoMeasurementScreenWipeTransitionEastImplEv+0x66>
        (*currentTrans)->tearDown();
 8004e1c:	6803      	ldr	r3, [r0, #0]
 8004e1e:	68db      	ldr	r3, [r3, #12]
 8004e20:	4798      	blx	r3
    if (*currentTrans)
 8004e22:	f8d9 0000 	ldr.w	r0, [r9]
 8004e26:	b110      	cbz	r0, 8004e2e <_ZN23FrontendApplicationBase43gotoMeasurementScreenWipeTransitionEastImplEv+0x72>
        (*currentTrans)->~Transition();
 8004e28:	6803      	ldr	r3, [r0, #0]
 8004e2a:	681b      	ldr	r3, [r3, #0]
 8004e2c:	4798      	blx	r3
    if (*currentScreen)
 8004e2e:	f8df 80c8 	ldr.w	r8, [pc, #200]	; 8004ef8 <_ZN23FrontendApplicationBase43gotoMeasurementScreenWipeTransitionEastImplEv+0x13c>
 8004e32:	f8d8 0000 	ldr.w	r0, [r8]
 8004e36:	b110      	cbz	r0, 8004e3e <_ZN23FrontendApplicationBase43gotoMeasurementScreenWipeTransitionEastImplEv+0x82>
        (*currentScreen)->tearDownScreen();
 8004e38:	6803      	ldr	r3, [r0, #0]
 8004e3a:	695b      	ldr	r3, [r3, #20]
 8004e3c:	4798      	blx	r3
    if (*currentPresenter)
 8004e3e:	f8d7 013c 	ldr.w	r0, [r7, #316]	; 0x13c
 8004e42:	b110      	cbz	r0, 8004e4a <_ZN23FrontendApplicationBase43gotoMeasurementScreenWipeTransitionEastImplEv+0x8e>
        (*currentPresenter)->deactivate();
 8004e44:	6803      	ldr	r3, [r0, #0]
 8004e46:	685b      	ldr	r3, [r3, #4]
 8004e48:	4798      	blx	r3
    if (*currentScreen)
 8004e4a:	f8d8 0000 	ldr.w	r0, [r8]
 8004e4e:	b110      	cbz	r0, 8004e56 <_ZN23FrontendApplicationBase43gotoMeasurementScreenWipeTransitionEastImplEv+0x9a>
        (*currentScreen)->~Screen();
 8004e50:	6803      	ldr	r3, [r0, #0]
 8004e52:	681b      	ldr	r3, [r3, #0]
 8004e54:	4798      	blx	r3
    if (*currentPresenter)
 8004e56:	f8d7 013c 	ldr.w	r0, [r7, #316]	; 0x13c
 8004e5a:	b110      	cbz	r0, 8004e62 <_ZN23FrontendApplicationBase43gotoMeasurementScreenWipeTransitionEastImplEv+0xa6>
        (*currentPresenter)->~Presenter();
 8004e5c:	6803      	ldr	r3, [r0, #0]
 8004e5e:	689b      	ldr	r3, [r3, #8]
 8004e60:	4798      	blx	r3
    TransType* newTransition = new (&heap.transitionStorage.at<TransType>(0)) TransType;
 8004e62:	68e0      	ldr	r0, [r4, #12]
 8004e64:	2100      	movs	r1, #0
 8004e66:	f7ff f937 	bl	80040d8 <_ZN8touchgfx17AbstractPartition2atINS_14WipeTransitionILNS_9DirectionE2EEEEERT_t>
 8004e6a:	2114      	movs	r1, #20
 8004e6c:	4605      	mov	r5, r0
 8004e6e:	f7ff f937 	bl	80040e0 <_ZN8touchgfx14WipeTransitionILNS_9DirectionE2EEC1Eh>
    ScreenType* newScreen = new (&heap.screenStorage.at<ScreenType>(0)) ScreenType;
 8004e72:	68a0      	ldr	r0, [r4, #8]
 8004e74:	6803      	ldr	r3, [r0, #0]
 8004e76:	2100      	movs	r1, #0
 8004e78:	6a5b      	ldr	r3, [r3, #36]	; 0x24
 8004e7a:	4798      	blx	r3
 8004e7c:	4606      	mov	r6, r0
 8004e7e:	f003 fb5b 	bl	8008538 <_ZN15MeasurementViewC1Ev>
    PresenterType* newPresenter = new (&heap.presenterStorage.at<PresenterType>(0)) PresenterType(*newScreen);
 8004e82:	6860      	ldr	r0, [r4, #4]
 8004e84:	6803      	ldr	r3, [r0, #0]
 8004e86:	2100      	movs	r1, #0
 8004e88:	6a5b      	ldr	r3, [r3, #36]	; 0x24
 8004e8a:	4798      	blx	r3
 8004e8c:	4631      	mov	r1, r6
 8004e8e:	4604      	mov	r4, r0
 8004e90:	f003 fb2c 	bl	80084ec <_ZN20MeasurementPresenterC1ER15MeasurementView>
    *currentTrans = newTransition;
 8004e94:	f8c9 5000 	str.w	r5, [r9]
    *currentPresenter = newPresenter;
 8004e98:	f8c7 413c 	str.w	r4, [r7, #316]	; 0x13c
    *currentScreen = newScreen;
 8004e9c:	f8c8 6000 	str.w	r6, [r8]
    model->bind(newPresenter);
 8004ea0:	b1dc      	cbz	r4, 8004eda <_ZN23FrontendApplicationBase43gotoMeasurementScreenWipeTransitionEastImplEv+0x11e>
 8004ea2:	1d23      	adds	r3, r4, #4
 8004ea4:	f8ca 3000 	str.w	r3, [sl]
    newScreen->setupScreen();
 8004ea8:	6833      	ldr	r3, [r6, #0]
 8004eaa:	f8c4 a008 	str.w	sl, [r4, #8]
 8004eae:	4630      	mov	r0, r6
 8004eb0:	68db      	ldr	r3, [r3, #12]
 8004eb2:	63f4      	str	r4, [r6, #60]	; 0x3c
 8004eb4:	4798      	blx	r3
    newPresenter->activate();
 8004eb6:	6823      	ldr	r3, [r4, #0]
 8004eb8:	4620      	mov	r0, r4
 8004eba:	681b      	ldr	r3, [r3, #0]
 8004ebc:	4798      	blx	r3
    newScreen->bindTransition(*newTransition);
 8004ebe:	4629      	mov	r1, r5
 8004ec0:	4630      	mov	r0, r6
 8004ec2:	f012 f861 	bl	8016f88 <_ZN8touchgfx6Screen14bindTransitionERNS_10TransitionE>
    newTransition->init();
 8004ec6:	682b      	ldr	r3, [r5, #0]
 8004ec8:	4628      	mov	r0, r5
 8004eca:	691b      	ldr	r3, [r3, #16]
 8004ecc:	4798      	blx	r3
    newTransition->invalidate();
 8004ece:	682b      	ldr	r3, [r5, #0]
 8004ed0:	4628      	mov	r0, r5
 8004ed2:	695b      	ldr	r3, [r3, #20]
}
 8004ed4:	e8bd 47f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, lr}
 8004ed8:	4718      	bx	r3
    model->bind(newPresenter);
 8004eda:	4623      	mov	r3, r4
 8004edc:	e7e2      	b.n	8004ea4 <_ZN23FrontendApplicationBase43gotoMeasurementScreenWipeTransitionEastImplEv+0xe8>
 8004ede:	bf00      	nop
 8004ee0:	0802bd64 	.word	0x0802bd64
 8004ee4:	0802d20b 	.word	0x0802d20b
 8004ee8:	0802bf00 	.word	0x0802bf00
 8004eec:	0802bf47 	.word	0x0802bf47
 8004ef0:	0802bfea 	.word	0x0802bfea
 8004ef4:	20012f6c 	.word	0x20012f6c
 8004ef8:	20012f68 	.word	0x20012f68

08004efc <_ZN8touchgfx9Container13getFirstChildEv>:
     * @see getNextSibling
     */
    virtual Drawable* getFirstChild()
    {
        return firstChild;
    }
 8004efc:	6a80      	ldr	r0, [r0, #40]	; 0x28
 8004efe:	4770      	bx	lr

08004f00 <_ZN21Gauge_with_ValuesBaseD1Ev>:
}

Gauge_with_ValuesBase::~Gauge_with_ValuesBase()
{

}
 8004f00:	4770      	bx	lr

08004f02 <_ZN21Gauge_with_ValuesBase10initializeEv>:

void Gauge_with_ValuesBase::initialize()
{

}
 8004f02:	4770      	bx	lr

08004f04 <_ZN21Gauge_with_ValuesBaseD0Ev>:
Gauge_with_ValuesBase::~Gauge_with_ValuesBase()
 8004f04:	b510      	push	{r4, lr}
}
 8004f06:	f44f 7162 	mov.w	r1, #904	; 0x388
Gauge_with_ValuesBase::~Gauge_with_ValuesBase()
 8004f0a:	4604      	mov	r4, r0
}
 8004f0c:	f024 fa87 	bl	802941e <_ZdlPvj>
 8004f10:	4620      	mov	r0, r4
 8004f12:	bd10      	pop	{r4, pc}

08004f14 <_ZN21Gauge_with_ValuesBaseC1Ev>:
Gauge_with_ValuesBase::Gauge_with_ValuesBase()
 8004f14:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
          touchable(false),
 8004f18:	f44f 7380 	mov.w	r3, #256	; 0x100
 8004f1c:	4680      	mov	r8, r0
        : x(0), y(0), width(0), height(0)
 8004f1e:	2600      	movs	r6, #0
 8004f20:	ed2d 8b02 	vpush	{d8}
 8004f24:	8483      	strh	r3, [r0, #36]	; 0x24
 8004f26:	4bb2      	ldr	r3, [pc, #712]	; (80051f0 <_ZN21Gauge_with_ValuesBaseC1Ev+0x2dc>)
          firstChild(0)
 8004f28:	6286      	str	r6, [r0, #40]	; 0x28
 8004f2a:	e9c0 6601 	strd	r6, r6, [r0, #4]
 8004f2e:	e9c0 6603 	strd	r6, r6, [r0, #12]
          nextSibling(0),
 8004f32:	e9c0 6605 	strd	r6, r6, [r0, #20]
          cachedAbsX(0),
 8004f36:	e9c0 6607 	strd	r6, r6, [r0, #28]
 8004f3a:	f848 3b2c 	str.w	r3, [r8], #44
 8004f3e:	b08b      	sub	sp, #44	; 0x2c
 8004f40:	4604      	mov	r4, r0
 8004f42:	4640      	mov	r0, r8
 8004f44:	f7fd fc42 	bl	80027cc <_ZN8touchgfx8TextAreaC1Ev>
 8004f48:	f104 0374 	add.w	r3, r4, #116	; 0x74
 8004f4c:	f104 0bbc 	add.w	fp, r4, #188	; 0xbc
 8004f50:	4618      	mov	r0, r3
 8004f52:	9303      	str	r3, [sp, #12]
 8004f54:	f504 7a82 	add.w	sl, r4, #260	; 0x104
 8004f58:	f7fd fc38 	bl	80027cc <_ZN8touchgfx8TextAreaC1Ev>
 8004f5c:	4658      	mov	r0, fp
 8004f5e:	f7fd fc35 	bl	80027cc <_ZN8touchgfx8TextAreaC1Ev>
 8004f62:	f504 79a8 	add.w	r9, r4, #336	; 0x150
        : TextAreaWithWildcardBase(), wc1(0)
 8004f66:	4da3      	ldr	r5, [pc, #652]	; (80051f4 <_ZN21Gauge_with_ValuesBaseC1Ev+0x2e0>)
        : TextArea()
 8004f68:	4650      	mov	r0, sl
 8004f6a:	f7fd fc2f 	bl	80027cc <_ZN8touchgfx8TextAreaC1Ev>
        : TextAreaWithWildcardBase(), wc1(0)
 8004f6e:	f8c4 5104 	str.w	r5, [r4, #260]	; 0x104
 8004f72:	f8c4 614c 	str.w	r6, [r4, #332]	; 0x14c
        : TextArea()
 8004f76:	4648      	mov	r0, r9
 8004f78:	f7fd fc28 	bl	80027cc <_ZN8touchgfx8TextAreaC1Ev>
 8004f7c:	f504 73ce 	add.w	r3, r4, #412	; 0x19c
 8004f80:	f504 77f4 	add.w	r7, r4, #488	; 0x1e8
 8004f84:	4618      	mov	r0, r3
        : TextAreaWithWildcardBase(), wc1(0)
 8004f86:	f8c4 5150 	str.w	r5, [r4, #336]	; 0x150
 8004f8a:	f8c4 6198 	str.w	r6, [r4, #408]	; 0x198
 8004f8e:	ee08 3a10 	vmov	s16, r3
        : TextArea()
 8004f92:	f7fd fc1b 	bl	80027cc <_ZN8touchgfx8TextAreaC1Ev>
        : TextAreaWithWildcardBase(), wc1(0)
 8004f96:	f8c4 519c 	str.w	r5, [r4, #412]	; 0x19c
 8004f9a:	f8c4 61e4 	str.w	r6, [r4, #484]	; 0x1e4
 8004f9e:	4638      	mov	r0, r7
 8004fa0:	f00d f980 	bl	80122a4 <_ZN8touchgfx5GaugeC1Ev>
        rect.width = width;
 8004fa4:	4a94      	ldr	r2, [pc, #592]	; (80051f8 <_ZN21Gauge_with_ValuesBaseC1Ev+0x2e4>)
 8004fa6:	60a2      	str	r2, [r4, #8]
    textArea4_2.setXY(217, 109);
 8004fa8:	4640      	mov	r0, r8
 8004faa:	226d      	movs	r2, #109	; 0x6d
 8004fac:	21d9      	movs	r1, #217	; 0xd9
 8004fae:	ad04      	add	r5, sp, #16
 8004fb0:	f7fd fbd9 	bl	8002766 <_ZN8touchgfx8Drawable5setXYEss>
        color = newColor;
 8004fb4:	f04f 33ff 	mov.w	r3, #4294967295
 8004fb8:	65e3      	str	r3, [r4, #92]	; 0x5c
        boundingArea = calculateBoundingArea();
 8004fba:	4641      	mov	r1, r8
 8004fbc:	4628      	mov	r0, r5
        linespace = space;
 8004fbe:	f8a4 6060 	strh.w	r6, [r4, #96]	; 0x60
        boundingArea = calculateBoundingArea();
 8004fc2:	f00c fe37 	bl	8011c34 <_ZNK8touchgfx8TextArea21calculateBoundingAreaEv>
 8004fc6:	e895 0007 	ldmia.w	r5, {r0, r1, r2}
 8004fca:	f104 0c68 	add.w	ip, r4, #104	; 0x68
 8004fce:	e88c 0007 	stmia.w	ip, {r0, r1, r2}
 8004fd2:	4b8a      	ldr	r3, [pc, #552]	; (80051fc <_ZN21Gauge_with_ValuesBaseC1Ev+0x2e8>)
 8004fd4:	9308      	str	r3, [sp, #32]
 8004fd6:	222f      	movs	r2, #47	; 0x2f
    textArea4_2.setTypedText(touchgfx::TypedText(T___SINGLEUSE_D6CM));
 8004fd8:	a908      	add	r1, sp, #32
 8004fda:	4640      	mov	r0, r8
 8004fdc:	f8ad 2024 	strh.w	r2, [sp, #36]	; 0x24
 8004fe0:	f00d f8c2 	bl	8012168 <_ZN8touchgfx8TextArea12setTypedTextERKNS_9TypedTextE>
    add(textArea4_2);
 8004fe4:	4641      	mov	r1, r8
 8004fe6:	4620      	mov	r0, r4
 8004fe8:	f00a ff0a 	bl	800fe00 <_ZN8touchgfx9Container3addERNS_8DrawableE>
    textArea4_1.setXY(0, 109);
 8004fec:	9b03      	ldr	r3, [sp, #12]
 8004fee:	4631      	mov	r1, r6
 8004ff0:	4618      	mov	r0, r3
 8004ff2:	226d      	movs	r2, #109	; 0x6d
 8004ff4:	f7fd fbb7 	bl	8002766 <_ZN8touchgfx8Drawable5setXYEss>
 8004ff8:	9b03      	ldr	r3, [sp, #12]
        linespace = space;
 8004ffa:	f8a4 60a8 	strh.w	r6, [r4, #168]	; 0xa8
        color = newColor;
 8004ffe:	f04f 32ff 	mov.w	r2, #4294967295
 8005002:	f8c4 20a4 	str.w	r2, [r4, #164]	; 0xa4
        boundingArea = calculateBoundingArea();
 8005006:	4619      	mov	r1, r3
 8005008:	4628      	mov	r0, r5
 800500a:	f00c fe13 	bl	8011c34 <_ZNK8touchgfx8TextArea21calculateBoundingAreaEv>
 800500e:	e895 0007 	ldmia.w	r5, {r0, r1, r2}
 8005012:	4b7a      	ldr	r3, [pc, #488]	; (80051fc <_ZN21Gauge_with_ValuesBaseC1Ev+0x2e8>)
 8005014:	9308      	str	r3, [sp, #32]
    textArea4_1.setTypedText(touchgfx::TypedText(T___SINGLEUSE_YENI));
 8005016:	9b03      	ldr	r3, [sp, #12]
 8005018:	f104 0cb0 	add.w	ip, r4, #176	; 0xb0
 800501c:	e88c 0007 	stmia.w	ip, {r0, r1, r2}
 8005020:	2230      	movs	r2, #48	; 0x30
 8005022:	a908      	add	r1, sp, #32
 8005024:	4618      	mov	r0, r3
 8005026:	f8ad 2024 	strh.w	r2, [sp, #36]	; 0x24
 800502a:	f00d f89d 	bl	8012168 <_ZN8touchgfx8TextArea12setTypedTextERKNS_9TypedTextE>
    add(textArea4_1);
 800502e:	9b03      	ldr	r3, [sp, #12]
 8005030:	4620      	mov	r0, r4
 8005032:	4619      	mov	r1, r3
 8005034:	f00a fee4 	bl	800fe00 <_ZN8touchgfx9Container3addERNS_8DrawableE>
    textArea4.setXY(113, 0);
 8005038:	4632      	mov	r2, r6
 800503a:	4658      	mov	r0, fp
 800503c:	2171      	movs	r1, #113	; 0x71
 800503e:	f7fd fb92 	bl	8002766 <_ZN8touchgfx8Drawable5setXYEss>
        color = newColor;
 8005042:	f04f 32ff 	mov.w	r2, #4294967295
 8005046:	f8c4 20ec 	str.w	r2, [r4, #236]	; 0xec
        boundingArea = calculateBoundingArea();
 800504a:	4659      	mov	r1, fp
 800504c:	4628      	mov	r0, r5
        linespace = space;
 800504e:	f8a4 60f0 	strh.w	r6, [r4, #240]	; 0xf0
        boundingArea = calculateBoundingArea();
 8005052:	f00c fdef 	bl	8011c34 <_ZNK8touchgfx8TextArea21calculateBoundingAreaEv>
 8005056:	e895 0007 	ldmia.w	r5, {r0, r1, r2}
 800505a:	f104 03f8 	add.w	r3, r4, #248	; 0xf8
 800505e:	e883 0007 	stmia.w	r3, {r0, r1, r2}
 8005062:	4b66      	ldr	r3, [pc, #408]	; (80051fc <_ZN21Gauge_with_ValuesBaseC1Ev+0x2e8>)
 8005064:	9308      	str	r3, [sp, #32]
    textArea4.setTypedText(touchgfx::TypedText(T___SINGLEUSE_Z8XU));
 8005066:	a908      	add	r1, sp, #32
 8005068:	2331      	movs	r3, #49	; 0x31
 800506a:	4658      	mov	r0, fp
 800506c:	f8ad 3024 	strh.w	r3, [sp, #36]	; 0x24
 8005070:	f00d f87a 	bl	8012168 <_ZN8touchgfx8TextArea12setTypedTextERKNS_9TypedTextE>
    add(textArea4);
 8005074:	4659      	mov	r1, fp
 8005076:	4620      	mov	r0, r4
 8005078:	f00a fec2 	bl	800fe00 <_ZN8touchgfx9Container3addERNS_8DrawableE>
    textArea5.setXY(76, 124);
 800507c:	4650      	mov	r0, sl
 800507e:	227c      	movs	r2, #124	; 0x7c
 8005080:	214c      	movs	r1, #76	; 0x4c
 8005082:	f7fd fb70 	bl	8002766 <_ZN8touchgfx8Drawable5setXYEss>
 8005086:	f8d4 3104 	ldr.w	r3, [r4, #260]	; 0x104
        linespace = space;
 800508a:	f8a4 6138 	strh.w	r6, [r4, #312]	; 0x138
        color = newColor;
 800508e:	f04f 32ff 	mov.w	r2, #4294967295
 8005092:	f8c4 2134 	str.w	r2, [r4, #308]	; 0x134
        boundingArea = calculateBoundingArea();
 8005096:	4651      	mov	r1, sl
 8005098:	4628      	mov	r0, r5
 800509a:	f8d3 3084 	ldr.w	r3, [r3, #132]	; 0x84
 800509e:	4798      	blx	r3
 80050a0:	e895 0007 	ldmia.w	r5, {r0, r1, r2}
 80050a4:	f504 73a0 	add.w	r3, r4, #320	; 0x140
 80050a8:	e883 0007 	stmia.w	r3, {r0, r1, r2}
 80050ac:	4b53      	ldr	r3, [pc, #332]	; (80051fc <_ZN21Gauge_with_ValuesBaseC1Ev+0x2e8>)
 80050ae:	9308      	str	r3, [sp, #32]
    textArea5.setTypedText(touchgfx::TypedText(T___SINGLEUSE_RQ3J));
 80050b0:	a908      	add	r1, sp, #32
 80050b2:	232e      	movs	r3, #46	; 0x2e
 80050b4:	4650      	mov	r0, sl
 80050b6:	f8ad 3024 	strh.w	r3, [sp, #36]	; 0x24
 80050ba:	f00d f855 	bl	8012168 <_ZN8touchgfx8TextArea12setTypedTextERKNS_9TypedTextE>
    add(textArea5);
 80050be:	4651      	mov	r1, sl
 80050c0:	4620      	mov	r0, r4
 80050c2:	f00a fe9d 	bl	800fe00 <_ZN8touchgfx9Container3addERNS_8DrawableE>
    textArea5_1.setXY(86, 139);
 80050c6:	4648      	mov	r0, r9
 80050c8:	228b      	movs	r2, #139	; 0x8b
 80050ca:	2156      	movs	r1, #86	; 0x56
 80050cc:	f7fd fb4b 	bl	8002766 <_ZN8touchgfx8Drawable5setXYEss>
 80050d0:	f8d4 3150 	ldr.w	r3, [r4, #336]	; 0x150
        linespace = space;
 80050d4:	f8a4 6184 	strh.w	r6, [r4, #388]	; 0x184
        color = newColor;
 80050d8:	f04f 32ff 	mov.w	r2, #4294967295
 80050dc:	f8c4 2180 	str.w	r2, [r4, #384]	; 0x180
        boundingArea = calculateBoundingArea();
 80050e0:	4649      	mov	r1, r9
 80050e2:	4628      	mov	r0, r5
 80050e4:	f8d3 3084 	ldr.w	r3, [r3, #132]	; 0x84
 80050e8:	4798      	blx	r3
 80050ea:	e895 0007 	ldmia.w	r5, {r0, r1, r2}
 80050ee:	f504 73c6 	add.w	r3, r4, #396	; 0x18c
 80050f2:	e883 0007 	stmia.w	r3, {r0, r1, r2}
 80050f6:	4b41      	ldr	r3, [pc, #260]	; (80051fc <_ZN21Gauge_with_ValuesBaseC1Ev+0x2e8>)
 80050f8:	9308      	str	r3, [sp, #32]
    textArea5_1.setTypedText(touchgfx::TypedText(T___SINGLEUSE_54VS));
 80050fa:	a908      	add	r1, sp, #32
 80050fc:	232d      	movs	r3, #45	; 0x2d
 80050fe:	4648      	mov	r0, r9
 8005100:	f8ad 3024 	strh.w	r3, [sp, #36]	; 0x24
 8005104:	f00d f830 	bl	8012168 <_ZN8touchgfx8TextArea12setTypedTextERKNS_9TypedTextE>
    add(textArea5_1);
 8005108:	4649      	mov	r1, r9
 800510a:	4620      	mov	r0, r4
 800510c:	f00a fe78 	bl	800fe00 <_ZN8touchgfx9Container3addERNS_8DrawableE>
    textArea5_2.setXY(86, 154);
 8005110:	ee18 0a10 	vmov	r0, s16
 8005114:	229a      	movs	r2, #154	; 0x9a
 8005116:	2156      	movs	r1, #86	; 0x56
 8005118:	f7fd fb25 	bl	8002766 <_ZN8touchgfx8Drawable5setXYEss>
 800511c:	f8d4 319c 	ldr.w	r3, [r4, #412]	; 0x19c
        linespace = space;
 8005120:	f8a4 61d0 	strh.w	r6, [r4, #464]	; 0x1d0
        color = newColor;
 8005124:	f04f 32ff 	mov.w	r2, #4294967295
        boundingArea = calculateBoundingArea();
 8005128:	ee18 1a10 	vmov	r1, s16
        color = newColor;
 800512c:	f8c4 21cc 	str.w	r2, [r4, #460]	; 0x1cc
        boundingArea = calculateBoundingArea();
 8005130:	4628      	mov	r0, r5
 8005132:	f8d3 3084 	ldr.w	r3, [r3, #132]	; 0x84
 8005136:	4798      	blx	r3
 8005138:	e895 0007 	ldmia.w	r5, {r0, r1, r2}
 800513c:	f504 73ec 	add.w	r3, r4, #472	; 0x1d8
 8005140:	e883 0007 	stmia.w	r3, {r0, r1, r2}
 8005144:	4b2d      	ldr	r3, [pc, #180]	; (80051fc <_ZN21Gauge_with_ValuesBaseC1Ev+0x2e8>)
 8005146:	9308      	str	r3, [sp, #32]
    textArea5_2.setTypedText(touchgfx::TypedText(T___SINGLEUSE_UKDF));
 8005148:	ee18 0a10 	vmov	r0, s16
 800514c:	232c      	movs	r3, #44	; 0x2c
 800514e:	a908      	add	r1, sp, #32
 8005150:	f8ad 3024 	strh.w	r3, [sp, #36]	; 0x24
 8005154:	f00d f808 	bl	8012168 <_ZN8touchgfx8TextArea12setTypedTextERKNS_9TypedTextE>
    add(textArea5_2);
 8005158:	ee18 1a10 	vmov	r1, s16
 800515c:	4620      	mov	r0, r4
 800515e:	f00a fe4f 	bl	800fe00 <_ZN8touchgfx9Container3addERNS_8DrawableE>
 8005162:	2304      	movs	r3, #4
    gauge1.setBackground(touchgfx::Bitmap(BITMAP_ALTERNATE_THEME_IMAGES_WIDGETS_GAUGE_SMALL_BACKGROUNDS_LIGHT_PRECISION_ID));
 8005164:	a908      	add	r1, sp, #32
 8005166:	4638      	mov	r0, r7
 8005168:	f8ad 3020 	strh.w	r3, [sp, #32]
 800516c:	f00a fdda 	bl	800fd24 <_ZN8touchgfx25AbstractProgressIndicator13setBackgroundERKNS_6BitmapE>
        setXY(x, y);
 8005170:	2212      	movs	r2, #18
 8005172:	4638      	mov	r0, r7
 8005174:	211c      	movs	r1, #28
 8005176:	f7fd faf6 	bl	8002766 <_ZN8touchgfx8Drawable5setXYEss>
        setWidth(width);
 800517a:	f8d4 31e8 	ldr.w	r3, [r4, #488]	; 0x1e8
 800517e:	4638      	mov	r0, r7
 8005180:	6b9b      	ldr	r3, [r3, #56]	; 0x38
 8005182:	21b8      	movs	r1, #184	; 0xb8
 8005184:	4798      	blx	r3
        setHeight(height);
 8005186:	f8d4 31e8 	ldr.w	r3, [r4, #488]	; 0x1e8
 800518a:	4638      	mov	r0, r7
 800518c:	6bdb      	ldr	r3, [r3, #60]	; 0x3c
 800518e:	216a      	movs	r1, #106	; 0x6a
 8005190:	4798      	blx	r3
    gauge1.setCenter(92, 92);
 8005192:	225c      	movs	r2, #92	; 0x5c
 8005194:	4611      	mov	r1, r2
 8005196:	4638      	mov	r0, r7
 8005198:	f00d f92f 	bl	80123fa <_ZN8touchgfx5Gauge9setCenterEii>
    gauge1.setStartEndAngle(-90, 90);
 800519c:	4638      	mov	r0, r7
 800519e:	225a      	movs	r2, #90	; 0x5a
 80051a0:	f06f 0159 	mvn.w	r1, #89	; 0x59
 80051a4:	f00d f9ae 	bl	8012504 <_ZN8touchgfx5Gauge16setStartEndAngleEii>
    gauge1.setRange(-90, 90);
 80051a8:	4633      	mov	r3, r6
 80051aa:	225a      	movs	r2, #90	; 0x5a
 80051ac:	4638      	mov	r0, r7
 80051ae:	9600      	str	r6, [sp, #0]
 80051b0:	f06f 0159 	mvn.w	r1, #89	; 0x59
 80051b4:	f00a fc63 	bl	800fa7e <_ZN8touchgfx25AbstractProgressIndicator8setRangeEiitt>
    gauge1.setValue(0);
 80051b8:	4631      	mov	r1, r6
 80051ba:	4638      	mov	r0, r7
 80051bc:	f00d f94c 	bl	8012458 <_ZN8touchgfx5Gauge8setValueEi>
    gauge1.setNeedle(BITMAP_ALTERNATE_THEME_IMAGES_WIDGETS_GAUGE_SMALL_NEEDLES_ROUGH_ID, 8, 53);
 80051c0:	2335      	movs	r3, #53	; 0x35
 80051c2:	2208      	movs	r2, #8
 80051c4:	4638      	mov	r0, r7
 80051c6:	2105      	movs	r1, #5
 80051c8:	f00d f902 	bl	80123d0 <_ZN8touchgfx5Gauge9setNeedleEtss>
    gauge1.setMovingNeedleRenderingAlgorithm(touchgfx::TextureMapper::BILINEAR_INTERPOLATION);
 80051cc:	4638      	mov	r0, r7
 80051ce:	2101      	movs	r1, #1
 80051d0:	f00d f8a0 	bl	8012314 <_ZN8touchgfx5Gauge33setMovingNeedleRenderingAlgorithmENS_13TextureMapper18RenderingAlgorithmE>
    gauge1.setSteadyNeedleRenderingAlgorithm(touchgfx::TextureMapper::BILINEAR_INTERPOLATION);
 80051d4:	4638      	mov	r0, r7
 80051d6:	2101      	movs	r1, #1
 80051d8:	f00d f89f 	bl	801231a <_ZN8touchgfx5Gauge33setSteadyNeedleRenderingAlgorithmENS_13TextureMapper18RenderingAlgorithmE>
    add(gauge1);
 80051dc:	4620      	mov	r0, r4
 80051de:	4639      	mov	r1, r7
 80051e0:	f00a fe0e 	bl	800fe00 <_ZN8touchgfx9Container3addERNS_8DrawableE>
}
 80051e4:	4620      	mov	r0, r4
 80051e6:	b00b      	add	sp, #44	; 0x2c
 80051e8:	ecbd 8b02 	vpop	{d8}
 80051ec:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
 80051f0:	0802d474 	.word	0x0802d474
 80051f4:	0802bbf8 	.word	0x0802bbf8
 80051f8:	00a900f0 	.word	0x00a900f0
 80051fc:	0802bbe8 	.word	0x0802bbe8

08005200 <_ZNK8touchgfx13GeneratedFont12getGSUBTableEv>:
    virtual int8_t getKerning(Unicode::UnicodeChar prevChar, const GlyphNode* glyph) const;

    virtual const uint16_t* getGSUBTable() const
    {
        return gsubTable;
    }
 8005200:	6a40      	ldr	r0, [r0, #36]	; 0x24
 8005202:	4770      	bx	lr

08005204 <_ZNK8touchgfx13GeneratedFont23getContextualFormsTableEv>:

    virtual const FontContextualFormsTable* getContextualFormsTable() const
    {
        return arabicTable;
    }
 8005204:	6a80      	ldr	r0, [r0, #40]	; 0x28
 8005206:	4770      	bx	lr

08005208 <_ZN8touchgfx13GeneratedFontD1Ev>:
class GeneratedFont : public ConstFont
 8005208:	4770      	bx	lr

0800520a <_ZNK8touchgfx13GeneratedFont12getPixelDataEPKNS_9GlyphNodeE>:
}

const uint8_t* GeneratedFont::getPixelData(const GlyphNode* glyph) const
{
    const uint8_t* const* table = (const uint8_t* const*)glyphData;
    return &(table[glyph->unicode / 2048][glyph->dataOffset]);
 800520a:	888b      	ldrh	r3, [r1, #4]
 800520c:	69c0      	ldr	r0, [r0, #28]
 800520e:	680a      	ldr	r2, [r1, #0]
 8005210:	0adb      	lsrs	r3, r3, #11
 8005212:	f850 0023 	ldr.w	r0, [r0, r3, lsl #2]
}
 8005216:	4410      	add	r0, r2
 8005218:	4770      	bx	lr

0800521a <_ZNK8touchgfx13GeneratedFont10getKerningEtPKNS_9GlyphNodeE>:

int8_t GeneratedFont::getKerning(Unicode::UnicodeChar prevChar, const GlyphNode* glyph) const
{
 800521a:	b510      	push	{r4, lr}
    if (!glyph || glyph->kerningTableSize == 0)
 800521c:	b1c2      	cbz	r2, 8005250 <_ZNK8touchgfx13GeneratedFont10getKerningEtPKNS_9GlyphNodeE+0x36>
 800521e:	7b13      	ldrb	r3, [r2, #12]
 8005220:	b1b3      	cbz	r3, 8005250 <_ZNK8touchgfx13GeneratedFont10getKerningEtPKNS_9GlyphNodeE+0x36>
        return ((flags & GLYPH_DATA_KERNINGTABLEPOS_BIT8_10) << 8) | _kerningTablePos;
 8005222:	7b54      	ldrb	r4, [r2, #13]
 8005224:	7ad2      	ldrb	r2, [r2, #11]
 8005226:	0224      	lsls	r4, r4, #8
 8005228:	f404 64e0 	and.w	r4, r4, #1792	; 0x700
    {
        return 0;
    }

    const KerningNode* kerndata = kerningData + glyph->kerningTablePos();
 800522c:	4314      	orrs	r4, r2
 800522e:	6a02      	ldr	r2, [r0, #32]
    for (uint16_t i = glyph->kerningTableSize; i > 0; i--, kerndata++)
 8005230:	b298      	uxth	r0, r3
    const KerningNode* kerndata = kerningData + glyph->kerningTablePos();
 8005232:	eb02 0284 	add.w	r2, r2, r4, lsl #2
    {
        if (prevChar == kerndata->unicodePrevChar)
 8005236:	8813      	ldrh	r3, [r2, #0]
 8005238:	428b      	cmp	r3, r1
 800523a:	d102      	bne.n	8005242 <_ZNK8touchgfx13GeneratedFont10getKerningEtPKNS_9GlyphNodeE+0x28>
        {
            return kerndata->distance;
 800523c:	f992 0002 	ldrsb.w	r0, [r2, #2]
        {
            break;
        }
    }
    return 0;
}
 8005240:	bd10      	pop	{r4, pc}
        if (prevChar < kerndata->unicodePrevChar)
 8005242:	d805      	bhi.n	8005250 <_ZNK8touchgfx13GeneratedFont10getKerningEtPKNS_9GlyphNodeE+0x36>
    for (uint16_t i = glyph->kerningTableSize; i > 0; i--, kerndata++)
 8005244:	3801      	subs	r0, #1
 8005246:	b280      	uxth	r0, r0
 8005248:	3204      	adds	r2, #4
 800524a:	2800      	cmp	r0, #0
 800524c:	d1f3      	bne.n	8005236 <_ZNK8touchgfx13GeneratedFont10getKerningEtPKNS_9GlyphNodeE+0x1c>
 800524e:	e7f7      	b.n	8005240 <_ZNK8touchgfx13GeneratedFont10getKerningEtPKNS_9GlyphNodeE+0x26>
        return 0;
 8005250:	2000      	movs	r0, #0
 8005252:	e7f5      	b.n	8005240 <_ZNK8touchgfx13GeneratedFont10getKerningEtPKNS_9GlyphNodeE+0x26>

08005254 <_ZN8touchgfx13GeneratedFontD0Ev>:
 8005254:	b510      	push	{r4, lr}
 8005256:	212c      	movs	r1, #44	; 0x2c
 8005258:	4604      	mov	r4, r0
 800525a:	f024 f8e0 	bl	802941e <_ZdlPvj>
 800525e:	4620      	mov	r0, r4
 8005260:	bd10      	pop	{r4, pc}
	...

08005264 <_ZN8touchgfx13GeneratedFontC1EPKNS_9GlyphNodeEttthhhhhhPKPKhPKNS_11KerningNodeEttPKtPKNS_24FontContextualFormsTableE>:
GeneratedFont::GeneratedFont(const GlyphNode* glyphs, uint16_t numGlyphs, uint16_t height, uint16_t baseline, uint8_t pixAboveTop, uint8_t pixBelowBottom, uint8_t bitsPerPixel, uint8_t byteAlignRow, uint8_t maxLeft, uint8_t maxRight, const uint8_t* const* glyphDataInternalFlash, const KerningNode* kerningList, const Unicode::UnicodeChar fallbackChar, const Unicode::UnicodeChar ellipsisChar, const uint16_t* const gsubData, const FontContextualFormsTable* formsTable)
 8005264:	b530      	push	{r4, r5, lr}
 8005266:	b08b      	sub	sp, #44	; 0x2c
 8005268:	4604      	mov	r4, r0
      arabicTable(formsTable)
 800526a:	f8bd 5060 	ldrh.w	r5, [sp, #96]	; 0x60
 800526e:	9508      	str	r5, [sp, #32]
 8005270:	f8bd 505c 	ldrh.w	r5, [sp, #92]	; 0x5c
 8005274:	9507      	str	r5, [sp, #28]
 8005276:	f89d 5050 	ldrb.w	r5, [sp, #80]	; 0x50
 800527a:	9506      	str	r5, [sp, #24]
 800527c:	f89d 504c 	ldrb.w	r5, [sp, #76]	; 0x4c
 8005280:	9505      	str	r5, [sp, #20]
 8005282:	f89d 5048 	ldrb.w	r5, [sp, #72]	; 0x48
 8005286:	9504      	str	r5, [sp, #16]
 8005288:	f89d 5044 	ldrb.w	r5, [sp, #68]	; 0x44
 800528c:	9503      	str	r5, [sp, #12]
 800528e:	f89d 5040 	ldrb.w	r5, [sp, #64]	; 0x40
 8005292:	9502      	str	r5, [sp, #8]
 8005294:	f89d 503c 	ldrb.w	r5, [sp, #60]	; 0x3c
 8005298:	9501      	str	r5, [sp, #4]
 800529a:	f8bd 5038 	ldrh.w	r5, [sp, #56]	; 0x38
 800529e:	9500      	str	r5, [sp, #0]
 80052a0:	f011 f9dc 	bl	801665c <_ZN8touchgfx9ConstFontC1EPKNS_9GlyphNodeEttthhhhhhtt>
 80052a4:	4b06      	ldr	r3, [pc, #24]	; (80052c0 <_ZN8touchgfx13GeneratedFontC1EPKNS_9GlyphNodeEttthhhhhhPKPKhPKNS_11KerningNodeEttPKtPKNS_24FontContextualFormsTableE+0x5c>)
 80052a6:	6023      	str	r3, [r4, #0]
      glyphData(glyphDataInternalFlash),
 80052a8:	9b15      	ldr	r3, [sp, #84]	; 0x54
 80052aa:	61e3      	str	r3, [r4, #28]
      kerningData(kerningList),
 80052ac:	9b16      	ldr	r3, [sp, #88]	; 0x58
 80052ae:	6223      	str	r3, [r4, #32]
      gsubTable(gsubData),
 80052b0:	9b19      	ldr	r3, [sp, #100]	; 0x64
 80052b2:	6263      	str	r3, [r4, #36]	; 0x24
      arabicTable(formsTable)
 80052b4:	9b1a      	ldr	r3, [sp, #104]	; 0x68
 80052b6:	62a3      	str	r3, [r4, #40]	; 0x28
}
 80052b8:	4620      	mov	r0, r4
 80052ba:	b00b      	add	sp, #44	; 0x2c
 80052bc:	bd30      	pop	{r4, r5, pc}
 80052be:	bf00      	nop
 80052c0:	0802d508 	.word	0x0802d508

080052c4 <_ZN17Main_MenuViewBase11setupScreenEv>:
}

void Main_MenuViewBase::setupScreen()
{

}
 80052c4:	4770      	bx	lr

080052c6 <_ZN8touchgfx8CallbackI17Main_MenuViewBaseRKNS_14AbstractButtonEvvED1Ev>:
struct Callback<dest_type, T1, void, void> : public GenericCallback<T1>
 80052c6:	4770      	bx	lr

080052c8 <_ZN8touchgfx8CallbackI17Main_MenuViewBaseRKNS_14AbstractButtonEvvE7executeES4_>:
    virtual void execute(T1 t1)
 80052c8:	b430      	push	{r4, r5}
        (pobject->*pmemfun)(t1);
 80052ca:	68c2      	ldr	r2, [r0, #12]
 80052cc:	6844      	ldr	r4, [r0, #4]
 80052ce:	1055      	asrs	r5, r2, #1
    virtual void execute(T1 t1)
 80052d0:	4603      	mov	r3, r0
        (pobject->*pmemfun)(t1);
 80052d2:	eb04 0062 	add.w	r0, r4, r2, asr #1
 80052d6:	07d2      	lsls	r2, r2, #31
 80052d8:	bf48      	it	mi
 80052da:	5962      	ldrmi	r2, [r4, r5]
 80052dc:	689b      	ldr	r3, [r3, #8]
    }
 80052de:	bc30      	pop	{r4, r5}
        (pobject->*pmemfun)(t1);
 80052e0:	bf48      	it	mi
 80052e2:	58d3      	ldrmi	r3, [r2, r3]
 80052e4:	4718      	bx	r3

080052e6 <_ZNK8touchgfx8CallbackI17Main_MenuViewBaseRKNS_14AbstractButtonEvvE7isValidEv>:
        return (pobject != 0) && (pmemfun != 0);
 80052e6:	6843      	ldr	r3, [r0, #4]
 80052e8:	b12b      	cbz	r3, 80052f6 <_ZNK8touchgfx8CallbackI17Main_MenuViewBaseRKNS_14AbstractButtonEvvE7isValidEv+0x10>
 80052ea:	6883      	ldr	r3, [r0, #8]
 80052ec:	b92b      	cbnz	r3, 80052fa <_ZNK8touchgfx8CallbackI17Main_MenuViewBaseRKNS_14AbstractButtonEvvE7isValidEv+0x14>
 80052ee:	68c0      	ldr	r0, [r0, #12]
 80052f0:	f000 0001 	and.w	r0, r0, #1
 80052f4:	4770      	bx	lr
 80052f6:	4618      	mov	r0, r3
 80052f8:	4770      	bx	lr
 80052fa:	2001      	movs	r0, #1
    }
 80052fc:	4770      	bx	lr

080052fe <_ZN8touchgfx8CallbackI17Main_MenuViewBaseRKNS_14AbstractButtonEvvED0Ev>:
struct Callback<dest_type, T1, void, void> : public GenericCallback<T1>
 80052fe:	b510      	push	{r4, lr}
 8005300:	2110      	movs	r1, #16
 8005302:	4604      	mov	r4, r0
 8005304:	f024 f88b 	bl	802941e <_ZdlPvj>
 8005308:	4620      	mov	r0, r4
 800530a:	bd10      	pop	{r4, pc}

0800530c <_ZN17Main_MenuViewBaseD1Ev>:
Main_MenuViewBase::~Main_MenuViewBase()
 800530c:	b510      	push	{r4, lr}
 800530e:	4b03      	ldr	r3, [pc, #12]	; (800531c <_ZN17Main_MenuViewBaseD1Ev+0x10>)
 8005310:	6003      	str	r3, [r0, #0]
 8005312:	4604      	mov	r4, r0
    touchgfx::CanvasWidgetRenderer::resetBuffer();
 8005314:	f00e fb0a 	bl	801392c <_ZN8touchgfx20CanvasWidgetRenderer11resetBufferEv>
}
 8005318:	4620      	mov	r0, r4
 800531a:	bd10      	pop	{r4, pc}
 800531c:	0802d580 	.word	0x0802d580

08005320 <_ZN17Main_MenuViewBaseD0Ev>:
Main_MenuViewBase::~Main_MenuViewBase()
 8005320:	b507      	push	{r0, r1, r2, lr}
 8005322:	4b07      	ldr	r3, [pc, #28]	; (8005340 <_ZN17Main_MenuViewBaseD0Ev+0x20>)
 8005324:	6003      	str	r3, [r0, #0]
 8005326:	9001      	str	r0, [sp, #4]
    touchgfx::CanvasWidgetRenderer::resetBuffer();
 8005328:	f00e fb00 	bl	801392c <_ZN8touchgfx20CanvasWidgetRenderer11resetBufferEv>
}
 800532c:	9801      	ldr	r0, [sp, #4]
 800532e:	f241 117c 	movw	r1, #4476	; 0x117c
 8005332:	f024 f874 	bl	802941e <_ZdlPvj>
 8005336:	9801      	ldr	r0, [sp, #4]
 8005338:	b003      	add	sp, #12
 800533a:	f85d fb04 	ldr.w	pc, [sp], #4
 800533e:	bf00      	nop
 8005340:	0802d580 	.word	0x0802d580

08005344 <_ZN17Main_MenuViewBase21buttonCallbackHandlerERKN8touchgfx14AbstractButtonE>:

void Main_MenuViewBase::buttonCallbackHandler(const touchgfx::AbstractButton& src)
{
 8005344:	b538      	push	{r3, r4, r5, lr}
    if (&src == &buttonWithLabel1)
 8005346:	f500 7334 	add.w	r3, r0, #720	; 0x2d0
 800534a:	4299      	cmp	r1, r3
{
 800534c:	4604      	mov	r4, r0
 800534e:	460d      	mov	r5, r1
    if (&src == &buttonWithLabel1)
 8005350:	d103      	bne.n	800535a <_ZN17Main_MenuViewBase21buttonCallbackHandlerERKN8touchgfx14AbstractButtonE+0x16>
    virtual ~Main_MenuViewBase();
    virtual void setupScreen();

protected:
    FrontendApplication& application() {
        return *static_cast<FrontendApplication*>(touchgfx::Application::getInstance());
 8005352:	f00f ffed 	bl	8015330 <_ZN8touchgfx11Application11getInstanceEv>
    {
        //Interaction1
        //When buttonWithLabel1 clicked change screen to Measurement
        //Go to Measurement with screen transition towards East
        application().gotoMeasurementScreenWipeTransitionEast();
 8005356:	f7fe fb1d 	bl	8003994 <_ZN23FrontendApplicationBase39gotoMeasurementScreenWipeTransitionEastEv>
    }
    if (&src == &buttonWithLabel2)
 800535a:	f504 7322 	add.w	r3, r4, #648	; 0x288
 800535e:	429d      	cmp	r5, r3
 8005360:	d103      	bne.n	800536a <_ZN17Main_MenuViewBase21buttonCallbackHandlerERKN8touchgfx14AbstractButtonE+0x26>
 8005362:	f00f ffe5 	bl	8015330 <_ZN8touchgfx11Application11getInstanceEv>
    {
        //Interaction2
        //When buttonWithLabel2 clicked change screen to Calibration
        //Go to Calibration with screen transition towards East
        application().gotoCalibrationScreenWipeTransitionEast();
 8005366:	f7fe fba5 	bl	8003ab4 <_ZN23FrontendApplicationBase39gotoCalibrationScreenWipeTransitionEastEv>
    }
    if (&src == &buttonWithLabel3)
 800536a:	f504 7310 	add.w	r3, r4, #576	; 0x240
 800536e:	429d      	cmp	r5, r3
 8005370:	d103      	bne.n	800537a <_ZN17Main_MenuViewBase21buttonCallbackHandlerERKN8touchgfx14AbstractButtonE+0x36>
 8005372:	f00f ffdd 	bl	8015330 <_ZN8touchgfx11Application11getInstanceEv>
    {
        //Interaction3
        //When buttonWithLabel3 clicked change screen to Project_Info
        //Go to Project_Info with screen transition towards East
        application().gotoProject_InfoScreenWipeTransitionEast();
 8005376:	f7fe fbdd 	bl	8003b34 <_ZN23FrontendApplicationBase40gotoProject_InfoScreenWipeTransitionEastEv>
    }
    if (&src == &buttonWithIcon1)
 800537a:	f504 7446 	add.w	r4, r4, #792	; 0x318
 800537e:	42a5      	cmp	r5, r4
 8005380:	d10a      	bne.n	8005398 <_ZN17Main_MenuViewBase21buttonCallbackHandlerERKN8touchgfx14AbstractButtonE+0x54>
    {
        //Interaction4
        //When buttonWithIcon1 clicked execute C++ code
        //Execute C++ code
        #ifndef SIMULATOR
        HAL_GPIO_WritePin(GPIOE, GPIO_PIN_5, GPIO_PIN_RESET);
 8005382:	4806      	ldr	r0, [pc, #24]	; (800539c <_ZN17Main_MenuViewBase21buttonCallbackHandlerERKN8touchgfx14AbstractButtonE+0x58>)
 8005384:	2200      	movs	r2, #0
 8005386:	2120      	movs	r1, #32
 8005388:	f004 fa52 	bl	8009830 <HAL_GPIO_WritePin>
 800538c:	f00f ffd0 	bl	8015330 <_ZN8touchgfx11Application11getInstanceEv>
        //Interaction5
        //When buttonWithIcon1 clicked change screen to Shutting_Off
        //Go to Shutting_Off with no screen transition
        application().gotoShutting_OffScreenNoTransition();
    }
}
 8005390:	e8bd 4038 	ldmia.w	sp!, {r3, r4, r5, lr}
        application().gotoShutting_OffScreenNoTransition();
 8005394:	f7fe bbde 	b.w	8003b54 <_ZN23FrontendApplicationBase34gotoShutting_OffScreenNoTransitionEv>
}
 8005398:	bd38      	pop	{r3, r4, r5, pc}
 800539a:	bf00      	nop
 800539c:	40021000 	.word	0x40021000

080053a0 <_ZN17Main_MenuViewBaseC1Ev>:
Main_MenuViewBase::Main_MenuViewBase() :
 80053a0:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 80053a4:	ed2d 8b06 	vpush	{d8-d10}
 80053a8:	4604      	mov	r4, r0
 80053aa:	b08f      	sub	sp, #60	; 0x3c
    buttonCallback(this, &Main_MenuViewBase::buttonCallbackHandler)
 80053ac:	46a3      	mov	fp, r4
        : presenter(0)
 80053ae:	2500      	movs	r5, #0
 80053b0:	f011 fc3e 	bl	8016c30 <_ZN8touchgfx6ScreenC1Ev>
 80053b4:	4b6a      	ldr	r3, [pc, #424]	; (8005560 <_ZN17Main_MenuViewBaseC1Ev+0x1c0>)
 80053b6:	63e5      	str	r5, [r4, #60]	; 0x3c
 80053b8:	f84b 3b40 	str.w	r3, [fp], #64
        : Widget(), alpha(255), color(0)
 80053bc:	2226      	movs	r2, #38	; 0x26
 80053be:	4629      	mov	r1, r5
 80053c0:	4658      	mov	r0, fp
 80053c2:	f025 f844 	bl	802a44e <memset>
 80053c6:	4658      	mov	r0, fp
 80053c8:	f7fd f9ee 	bl	80027a8 <_ZN8touchgfx6WidgetC1Ev>
 80053cc:	f104 0a6c 	add.w	sl, r4, #108	; 0x6c
 80053d0:	26ff      	movs	r6, #255	; 0xff
 80053d2:	4b64      	ldr	r3, [pc, #400]	; (8005564 <_ZN17Main_MenuViewBaseC1Ev+0x1c4>)
 80053d4:	6423      	str	r3, [r4, #64]	; 0x40
        : Widget(), bitmap(bmp), alpha(255)
 80053d6:	2226      	movs	r2, #38	; 0x26
 80053d8:	f64f 73ff 	movw	r3, #65535	; 0xffff
 80053dc:	4629      	mov	r1, r5
 80053de:	f884 6066 	strb.w	r6, [r4, #102]	; 0x66
 80053e2:	4650      	mov	r0, sl
        : color(col)
 80053e4:	66a5      	str	r5, [r4, #104]	; 0x68
 80053e6:	f8ad 3030 	strh.w	r3, [sp, #48]	; 0x30
 80053ea:	f025 f830 	bl	802a44e <memset>
 80053ee:	4650      	mov	r0, sl
 80053f0:	f7fd f9da 	bl	80027a8 <_ZN8touchgfx6WidgetC1Ev>
 80053f4:	4b5c      	ldr	r3, [pc, #368]	; (8005568 <_ZN17Main_MenuViewBaseC1Ev+0x1c8>)
 80053f6:	66e3      	str	r3, [r4, #108]	; 0x6c
 80053f8:	f8bd 3030 	ldrh.w	r3, [sp, #48]	; 0x30
 80053fc:	f8a4 3092 	strh.w	r3, [r4, #146]	; 0x92
        Image::setBitmap(bmp);
 8005400:	a90c      	add	r1, sp, #48	; 0x30
 8005402:	4650      	mov	r0, sl
 8005404:	f104 0998 	add.w	r9, r4, #152	; 0x98
        : Widget(), bitmap(bmp), alpha(255)
 8005408:	f884 6094 	strb.w	r6, [r4, #148]	; 0x94
        Image::setBitmap(bmp);
 800540c:	f00d fa87 	bl	801291e <_ZN8touchgfx5Image9setBitmapERKNS_6BitmapE>
        : TextArea()
 8005410:	4648      	mov	r0, r9
 8005412:	f7fd f9db 	bl	80027cc <_ZN8touchgfx8TextAreaC1Ev>
 8005416:	f104 07e4 	add.w	r7, r4, #228	; 0xe4
        : TextAreaWithWildcardBase(), wc1(0)
 800541a:	4b54      	ldr	r3, [pc, #336]	; (800556c <_ZN17Main_MenuViewBaseC1Ev+0x1cc>)
 800541c:	f8c4 3098 	str.w	r3, [r4, #152]	; 0x98
 8005420:	f8c4 50e0 	str.w	r5, [r4, #224]	; 0xe0
 8005424:	4638      	mov	r0, r7
 8005426:	f00c f943 	bl	80116b0 <_ZN8touchgfx4LineC1Ev>
 800542a:	f504 73aa 	add.w	r3, r4, #340	; 0x154
        : AbstractPainterRGB565(), AbstractPainterColor(color)
 800542e:	4618      	mov	r0, r3
 8005430:	9303      	str	r3, [sp, #12]
 8005432:	f7fb fe09 	bl	8001048 <_ZN8touchgfx21AbstractPainterRGB565C1Ev>
 8005436:	4b4e      	ldr	r3, [pc, #312]	; (8005570 <_ZN17Main_MenuViewBaseC1Ev+0x1d0>)
 8005438:	f8c4 3154 	str.w	r3, [r4, #340]	; 0x154
 800543c:	f504 78b4 	add.w	r8, r4, #360	; 0x168
 8005440:	3324      	adds	r3, #36	; 0x24
 8005442:	f8c4 315c 	str.w	r3, [r4, #348]	; 0x15c
 8005446:	f8c4 5160 	str.w	r5, [r4, #352]	; 0x160
 800544a:	4640      	mov	r0, r8
 800544c:	f7fd f9be 	bl	80027cc <_ZN8touchgfx8TextAreaC1Ev>
 8005450:	f504 73d8 	add.w	r3, r4, #432	; 0x1b0
 8005454:	4618      	mov	r0, r3
 8005456:	ee08 3a10 	vmov	s16, r3
 800545a:	f7fd f9b7 	bl	80027cc <_ZN8touchgfx8TextAreaC1Ev>
 800545e:	f504 73fc 	add.w	r3, r4, #504	; 0x1f8
 8005462:	4618      	mov	r0, r3
 8005464:	ee08 3a90 	vmov	s17, r3
 8005468:	f7fd f9b0 	bl	80027cc <_ZN8touchgfx8TextAreaC1Ev>
 800546c:	f504 7310 	add.w	r3, r4, #576	; 0x240
 8005470:	4618      	mov	r0, r3
 8005472:	ee09 3a10 	vmov	s18, r3
 8005476:	f00d fb93 	bl	8012ba0 <_ZN8touchgfx15ButtonWithLabelC1Ev>
 800547a:	f504 7322 	add.w	r3, r4, #648	; 0x288
 800547e:	4618      	mov	r0, r3
 8005480:	ee09 3a90 	vmov	s19, r3
 8005484:	f00d fb8c 	bl	8012ba0 <_ZN8touchgfx15ButtonWithLabelC1Ev>
 8005488:	f504 7334 	add.w	r3, r4, #720	; 0x2d0
 800548c:	4618      	mov	r0, r3
 800548e:	ee0a 3a10 	vmov	s20, r3
 8005492:	f00d fb85 	bl	8012ba0 <_ZN8touchgfx15ButtonWithLabelC1Ev>
 8005496:	f504 7346 	add.w	r3, r4, #792	; 0x318
 800549a:	4618      	mov	r0, r3
 800549c:	ee0a 3a90 	vmov	s21, r3
 80054a0:	f00d fa16 	bl	80128d0 <_ZN8touchgfx14ButtonWithIconC1Ev>
        : pobject(pObject), pmemfun(pmemfun_1)
 80054a4:	4a33      	ldr	r2, [pc, #204]	; (8005574 <_ZN17Main_MenuViewBaseC1Ev+0x1d4>)
 80054a6:	f504 5380 	add.w	r3, r4, #4096	; 0x1000
 80054aa:	e9c3 245b 	strd	r2, r4, [r3, #364]	; 0x16c
 80054ae:	4a32      	ldr	r2, [pc, #200]	; (8005578 <_ZN17Main_MenuViewBaseC1Ev+0x1d8>)
    touchgfx::CanvasWidgetRenderer::setupBuffer(canvasBuffer, CANVAS_BUFFER_SIZE);
 80054b0:	f44f 6161 	mov.w	r1, #3600	; 0xe10
 80054b4:	e9c3 255d 	strd	r2, r5, [r3, #372]	; 0x174
 80054b8:	f504 7057 	add.w	r0, r4, #860	; 0x35c
 80054bc:	f00e fa2c 	bl	8013918 <_ZN8touchgfx20CanvasWidgetRenderer11setupBufferEPhj>
    __background.setPosition(0, 0, 240, 320);
 80054c0:	f44f 73a0 	mov.w	r3, #320	; 0x140
 80054c4:	462a      	mov	r2, r5
 80054c6:	4658      	mov	r0, fp
 80054c8:	9300      	str	r3, [sp, #0]
 80054ca:	4629      	mov	r1, r5
 80054cc:	23f0      	movs	r3, #240	; 0xf0
 80054ce:	f7fd f957 	bl	8002780 <_ZN8touchgfx8Drawable11setPositionEssss>
 80054d2:	1d26      	adds	r6, r4, #4
        color = newColor;
 80054d4:	f04f 437f 	mov.w	r3, #4278190080	; 0xff000000
 80054d8:	66a3      	str	r3, [r4, #104]	; 0x68
 80054da:	4659      	mov	r1, fp
 80054dc:	4630      	mov	r0, r6
 80054de:	f00a fc8f 	bl	800fe00 <_ZN8touchgfx9Container3addERNS_8DrawableE>
    image1.setXY(0, 0);
 80054e2:	462a      	mov	r2, r5
 80054e4:	4650      	mov	r0, sl
 80054e6:	4629      	mov	r1, r5
 80054e8:	f7fd f93d 	bl	8002766 <_ZN8touchgfx8Drawable5setXYEss>
 80054ec:	2309      	movs	r3, #9
    image1.setBitmap(touchgfx::Bitmap(BITMAP_BACKGROUND_2_RESIZED_4_ID));
 80054ee:	4650      	mov	r0, sl
 80054f0:	a90c      	add	r1, sp, #48	; 0x30
 80054f2:	f8ad 3030 	strh.w	r3, [sp, #48]	; 0x30
 80054f6:	f00d fa12 	bl	801291e <_ZN8touchgfx5Image9setBitmapERKNS_6BitmapE>
 80054fa:	4651      	mov	r1, sl
 80054fc:	4630      	mov	r0, r6
 80054fe:	f00a fc7f 	bl	800fe00 <_ZN8touchgfx9Container3addERNS_8DrawableE>
    textArea3.setXY(86, 308);
 8005502:	f44f 729a 	mov.w	r2, #308	; 0x134
 8005506:	2156      	movs	r1, #86	; 0x56
 8005508:	4648      	mov	r0, r9
 800550a:	f7fd f92c 	bl	8002766 <_ZN8touchgfx8Drawable5setXYEss>
 800550e:	f8d4 3098 	ldr.w	r3, [r4, #152]	; 0x98
        linespace = space;
 8005512:	f8a4 50cc 	strh.w	r5, [r4, #204]	; 0xcc
        boundingArea = calculateBoundingArea();
 8005516:	f10d 0a10 	add.w	sl, sp, #16
        color = newColor;
 800551a:	f04f 3bff 	mov.w	fp, #4294967295
        boundingArea = calculateBoundingArea();
 800551e:	4650      	mov	r0, sl
 8005520:	f8d3 3084 	ldr.w	r3, [r3, #132]	; 0x84
        color = newColor;
 8005524:	f8c4 b0c8 	str.w	fp, [r4, #200]	; 0xc8
        boundingArea = calculateBoundingArea();
 8005528:	4649      	mov	r1, r9
 800552a:	4798      	blx	r3
 800552c:	e89a 0007 	ldmia.w	sl, {r0, r1, r2}
 8005530:	f104 03d4 	add.w	r3, r4, #212	; 0xd4
 8005534:	e883 0007 	stmia.w	r3, {r0, r1, r2}
        assert(typedTexts != 0 && "TypedText database has not been initialized.");
 8005538:	4b10      	ldr	r3, [pc, #64]	; (800557c <_ZN17Main_MenuViewBaseC1Ev+0x1dc>)
 800553a:	681b      	ldr	r3, [r3, #0]
    Unicode::snprintf(textArea3Buffer, TEXTAREA3_SIZE, "%s", touchgfx::TypedText(T___SINGLEUSE_UQO1).getText());
 800553c:	f504 7a55 	add.w	sl, r4, #852	; 0x354
 8005540:	b92b      	cbnz	r3, 800554e <_ZN17Main_MenuViewBaseC1Ev+0x1ae>
 8005542:	4b0f      	ldr	r3, [pc, #60]	; (8005580 <_ZN17Main_MenuViewBaseC1Ev+0x1e0>)
 8005544:	4a0f      	ldr	r2, [pc, #60]	; (8005584 <_ZN17Main_MenuViewBaseC1Ev+0x1e4>)
 8005546:	2160      	movs	r1, #96	; 0x60
        assert(hasValidId() && "typedTextId larger than numberOfTypedTexts.");
 8005548:	480f      	ldr	r0, [pc, #60]	; (8005588 <_ZN17Main_MenuViewBaseC1Ev+0x1e8>)
 800554a:	f024 fd7b 	bl	802a044 <__assert_func>
        return typedTextId < numberOfTypedTexts;
 800554e:	4b0f      	ldr	r3, [pc, #60]	; (800558c <_ZN17Main_MenuViewBaseC1Ev+0x1ec>)
        assert(hasValidId() && "typedTextId larger than numberOfTypedTexts.");
 8005550:	881b      	ldrh	r3, [r3, #0]
 8005552:	2b2a      	cmp	r3, #42	; 0x2a
 8005554:	d81e      	bhi.n	8005594 <_ZN17Main_MenuViewBaseC1Ev+0x1f4>
 8005556:	4b0e      	ldr	r3, [pc, #56]	; (8005590 <_ZN17Main_MenuViewBaseC1Ev+0x1f0>)
 8005558:	4a0a      	ldr	r2, [pc, #40]	; (8005584 <_ZN17Main_MenuViewBaseC1Ev+0x1e4>)
 800555a:	2161      	movs	r1, #97	; 0x61
 800555c:	e7f4      	b.n	8005548 <_ZN17Main_MenuViewBaseC1Ev+0x1a8>
 800555e:	bf00      	nop
 8005560:	0802d580 	.word	0x0802d580
 8005564:	0802e540 	.word	0x0802e540
 8005568:	0802e708 	.word	0x0802e708
 800556c:	0802bbf8 	.word	0x0802bbf8
 8005570:	0802e274 	.word	0x0802e274
 8005574:	0802d568 	.word	0x0802d568
 8005578:	08005345 	.word	0x08005345
 800557c:	20012f7c 	.word	0x20012f7c
 8005580:	0802ba38 	.word	0x0802ba38
 8005584:	0802bb3a 	.word	0x0802bb3a
 8005588:	0802bab5 	.word	0x0802bab5
 800558c:	20012f80 	.word	0x20012f80
 8005590:	0802bafc 	.word	0x0802bafc
        return texts->getText(typedTextId);
 8005594:	4ba5      	ldr	r3, [pc, #660]	; (800582c <_ZN17Main_MenuViewBaseC1Ev+0x48c>)
 8005596:	212a      	movs	r1, #42	; 0x2a
 8005598:	6818      	ldr	r0, [r3, #0]
 800559a:	f002 fde7 	bl	800816c <_ZNK8touchgfx5Texts7getTextEt>
 800559e:	4aa4      	ldr	r2, [pc, #656]	; (8005830 <_ZN17Main_MenuViewBaseC1Ev+0x490>)
 80055a0:	4603      	mov	r3, r0
 80055a2:	2104      	movs	r1, #4
 80055a4:	4650      	mov	r0, sl
 80055a6:	f013 f833 	bl	8018610 <_ZN8touchgfx7Unicode8snprintfEPttPKcz>
    textArea3.resizeToCurrentText();
 80055aa:	4648      	mov	r0, r9
        wc1 = value;
 80055ac:	f8c4 a0e0 	str.w	sl, [r4, #224]	; 0xe0
 80055b0:	f00c fdba 	bl	8012128 <_ZN8touchgfx8TextArea19resizeToCurrentTextEv>
        : typedTextId(id)
 80055b4:	4b9f      	ldr	r3, [pc, #636]	; (8005834 <_ZN17Main_MenuViewBaseC1Ev+0x494>)
 80055b6:	930c      	str	r3, [sp, #48]	; 0x30
    textArea3.setTypedText(touchgfx::TypedText(T___SINGLEUSE_2SIJ));
 80055b8:	a90c      	add	r1, sp, #48	; 0x30
 80055ba:	232b      	movs	r3, #43	; 0x2b
 80055bc:	4648      	mov	r0, r9
 80055be:	f8ad 3034 	strh.w	r3, [sp, #52]	; 0x34
 80055c2:	f00c fdd1 	bl	8012168 <_ZN8touchgfx8TextArea12setTypedTextERKNS_9TypedTextE>
 80055c6:	4649      	mov	r1, r9
 80055c8:	4630      	mov	r0, r6
 80055ca:	f00a fc19 	bl	800fe00 <_ZN8touchgfx9Container3addERNS_8DrawableE>
    line1.setPosition(0, 50, 240, 10);
 80055ce:	230a      	movs	r3, #10
 80055d0:	9300      	str	r3, [sp, #0]
 80055d2:	2232      	movs	r2, #50	; 0x32
 80055d4:	23f0      	movs	r3, #240	; 0xf0
 80055d6:	4629      	mov	r1, r5
 80055d8:	4638      	mov	r0, r7
 80055da:	f7fd f8d1 	bl	8002780 <_ZN8touchgfx8Drawable11setPositionEssss>
 80055de:	9b03      	ldr	r3, [sp, #12]
 80055e0:	f8c4 310c 	str.w	r3, [r4, #268]	; 0x10c
        setStart(CWRUtil::toQ5<T>(x), CWRUtil::toQ5<T>(y));
 80055e4:	22a0      	movs	r2, #160	; 0xa0
 80055e6:	4611      	mov	r1, r2
 80055e8:	4638      	mov	r0, r7
 80055ea:	f8c4 b160 	str.w	fp, [r4, #352]	; 0x160
        color565 = LCD16bpp::getNativeColor(painterColor);
 80055ee:	f8a4 b164 	strh.w	fp, [r4, #356]	; 0x164
 80055f2:	f00c f973 	bl	80118dc <_ZN8touchgfx4Line8setStartENS_7CWRUtil2Q5ES2_>
        setEnd(CWRUtil::toQ5<T>(x), CWRUtil::toQ5<T>(y));
 80055f6:	22a0      	movs	r2, #160	; 0xa0
 80055f8:	f44f 51eb 	mov.w	r1, #7520	; 0x1d60
 80055fc:	4638      	mov	r0, r7
 80055fe:	f00c f978 	bl	80118f2 <_ZN8touchgfx4Line6setEndENS_7CWRUtil2Q5ES2_>
        if (lineWidthQ5 == widthQ5)
 8005602:	f8d4 3120 	ldr.w	r3, [r4, #288]	; 0x120
 8005606:	2b20      	cmp	r3, #32
 8005608:	d005      	beq.n	8005616 <_ZN17Main_MenuViewBaseC1Ev+0x276>
        lineWidthQ5 = widthQ5;
 800560a:	2320      	movs	r3, #32
 800560c:	f8c4 3120 	str.w	r3, [r4, #288]	; 0x120
        updateCachedShape();
 8005610:	4638      	mov	r0, r7
 8005612:	f00c f86d 	bl	80116f0 <_ZN8touchgfx4Line17updateCachedShapeEv>
    line1.setLineEndingStyle(touchgfx::Line::ROUND_CAP_ENDING);
 8005616:	4638      	mov	r0, r7
 8005618:	2101      	movs	r1, #1
 800561a:	f00c f975 	bl	8011908 <_ZN8touchgfx4Line18setLineEndingStyleENS0_17LINE_ENDING_STYLEE>
 800561e:	4639      	mov	r1, r7
 8005620:	4630      	mov	r0, r6
 8005622:	ad04      	add	r5, sp, #16
        color = newColor;
 8005624:	f04f 37ff 	mov.w	r7, #4294967295
 8005628:	f00a fbea 	bl	800fe00 <_ZN8touchgfx9Container3addERNS_8DrawableE>
        linespace = space;
 800562c:	f04f 0a00 	mov.w	sl, #0
    textArea2.setXY(69, 35);
 8005630:	2223      	movs	r2, #35	; 0x23
 8005632:	4640      	mov	r0, r8
 8005634:	2145      	movs	r1, #69	; 0x45
 8005636:	f7fd f896 	bl	8002766 <_ZN8touchgfx8Drawable5setXYEss>
        boundingArea = calculateBoundingArea();
 800563a:	4641      	mov	r1, r8
 800563c:	4628      	mov	r0, r5
        color = newColor;
 800563e:	f8c4 7198 	str.w	r7, [r4, #408]	; 0x198
        linespace = space;
 8005642:	f8a4 a19c 	strh.w	sl, [r4, #412]	; 0x19c
        boundingArea = calculateBoundingArea();
 8005646:	f00c faf5 	bl	8011c34 <_ZNK8touchgfx8TextArea21calculateBoundingAreaEv>
 800564a:	e895 0007 	ldmia.w	r5, {r0, r1, r2}
    textArea2.setTypedText(touchgfx::TypedText(T___SINGLEUSE_6D7Z));
 800564e:	f10d 0930 	add.w	r9, sp, #48	; 0x30
 8005652:	f108 033c 	add.w	r3, r8, #60	; 0x3c
 8005656:	e883 0007 	stmia.w	r3, {r0, r1, r2}
 800565a:	f8df b1d8 	ldr.w	fp, [pc, #472]	; 8005834 <_ZN17Main_MenuViewBaseC1Ev+0x494>
 800565e:	f8cd b030 	str.w	fp, [sp, #48]	; 0x30
 8005662:	2350      	movs	r3, #80	; 0x50
 8005664:	4649      	mov	r1, r9
 8005666:	4640      	mov	r0, r8
 8005668:	f8ad 3034 	strh.w	r3, [sp, #52]	; 0x34
 800566c:	f00c fd7c 	bl	8012168 <_ZN8touchgfx8TextArea12setTypedTextERKNS_9TypedTextE>
 8005670:	4641      	mov	r1, r8
 8005672:	4630      	mov	r0, r6
 8005674:	f00a fbc4 	bl	800fe00 <_ZN8touchgfx9Container3addERNS_8DrawableE>
    textArea1.setXY(54, 12);
 8005678:	ee18 0a10 	vmov	r0, s16
 800567c:	220c      	movs	r2, #12
 800567e:	2136      	movs	r1, #54	; 0x36
 8005680:	f7fd f871 	bl	8002766 <_ZN8touchgfx8Drawable5setXYEss>
 8005684:	ee18 1a10 	vmov	r1, s16
 8005688:	4628      	mov	r0, r5
        color = newColor;
 800568a:	f8c4 71e0 	str.w	r7, [r4, #480]	; 0x1e0
        linespace = space;
 800568e:	f8a4 a1e4 	strh.w	sl, [r4, #484]	; 0x1e4
        boundingArea = calculateBoundingArea();
 8005692:	f00c facf 	bl	8011c34 <_ZNK8touchgfx8TextArea21calculateBoundingAreaEv>
 8005696:	e895 0007 	ldmia.w	r5, {r0, r1, r2}
 800569a:	ee18 3a10 	vmov	r3, s16
 800569e:	333c      	adds	r3, #60	; 0x3c
 80056a0:	e883 0007 	stmia.w	r3, {r0, r1, r2}
 80056a4:	2351      	movs	r3, #81	; 0x51
    textArea1.setTypedText(touchgfx::TypedText(T___SINGLEUSE_9K1W));
 80056a6:	ee18 0a10 	vmov	r0, s16
 80056aa:	4649      	mov	r1, r9
 80056ac:	f8ad 3034 	strh.w	r3, [sp, #52]	; 0x34
 80056b0:	f8cd b030 	str.w	fp, [sp, #48]	; 0x30
 80056b4:	f00c fd58 	bl	8012168 <_ZN8touchgfx8TextArea12setTypedTextERKNS_9TypedTextE>
 80056b8:	ee18 1a10 	vmov	r1, s16
 80056bc:	4630      	mov	r0, r6
 80056be:	f00a fb9f 	bl	800fe00 <_ZN8touchgfx9Container3addERNS_8DrawableE>
    textArea3_1.setXY(88, 60);
 80056c2:	ee18 0a90 	vmov	r0, s17
 80056c6:	223c      	movs	r2, #60	; 0x3c
 80056c8:	2158      	movs	r1, #88	; 0x58
 80056ca:	f7fd f84c 	bl	8002766 <_ZN8touchgfx8Drawable5setXYEss>
 80056ce:	ee18 1a90 	vmov	r1, s17
 80056d2:	4628      	mov	r0, r5
        color = newColor;
 80056d4:	f8c4 7228 	str.w	r7, [r4, #552]	; 0x228
        linespace = space;
 80056d8:	f8a4 a22c 	strh.w	sl, [r4, #556]	; 0x22c
        boundingArea = calculateBoundingArea();
 80056dc:	f00c faaa 	bl	8011c34 <_ZNK8touchgfx8TextArea21calculateBoundingAreaEv>
 80056e0:	e895 0007 	ldmia.w	r5, {r0, r1, r2}
 80056e4:	ee18 3a90 	vmov	r3, s17
 80056e8:	333c      	adds	r3, #60	; 0x3c
 80056ea:	e883 0007 	stmia.w	r3, {r0, r1, r2}
 80056ee:	231a      	movs	r3, #26
    textArea3_1.setTypedText(touchgfx::TypedText(T___SINGLEUSE_L4HV));
 80056f0:	ee18 0a90 	vmov	r0, s17
 80056f4:	4649      	mov	r1, r9
 80056f6:	f8ad 3034 	strh.w	r3, [sp, #52]	; 0x34
 80056fa:	f8cd b030 	str.w	fp, [sp, #48]	; 0x30
 80056fe:	f00c fd33 	bl	8012168 <_ZN8touchgfx8TextArea12setTypedTextERKNS_9TypedTextE>
 8005702:	ee18 1a90 	vmov	r1, s17
 8005706:	4630      	mov	r0, r6
 8005708:	f00a fb7a 	bl	800fe00 <_ZN8touchgfx9Container3addERNS_8DrawableE>
    buttonWithLabel3.setXY(33, 240);
 800570c:	ee19 0a10 	vmov	r0, s18
 8005710:	22f0      	movs	r2, #240	; 0xf0
 8005712:	2121      	movs	r1, #33	; 0x21
 8005714:	f7fd f827 	bl	8002766 <_ZN8touchgfx8Drawable5setXYEss>
 8005718:	f04f 0b03 	mov.w	fp, #3
    buttonWithLabel3.setBitmaps(touchgfx::Bitmap(BITMAP_ALTERNATE_THEME_IMAGES_WIDGETS_BUTTON_REGULAR_HEIGHT_50_SMALL_ROUND_PRESSED_ID), touchgfx::Bitmap(BITMAP_ALTERNATE_THEME_IMAGES_WIDGETS_BUTTON_REGULAR_HEIGHT_50_SMALL_ROUND_NORMAL_ID));
 800571c:	464a      	mov	r2, r9
 800571e:	f04f 0802 	mov.w	r8, #2
 8005722:	a90b      	add	r1, sp, #44	; 0x2c
 8005724:	ee19 0a10 	vmov	r0, s18
 8005728:	f8ad b02c 	strh.w	fp, [sp, #44]	; 0x2c
 800572c:	f8ad 8030 	strh.w	r8, [sp, #48]	; 0x30
    buttonWithLabel3.setAction(buttonCallback);
 8005730:	f504 558b 	add.w	r5, r4, #4448	; 0x1160
    buttonWithLabel3.setBitmaps(touchgfx::Bitmap(BITMAP_ALTERNATE_THEME_IMAGES_WIDGETS_BUTTON_REGULAR_HEIGHT_50_SMALL_ROUND_PRESSED_ID), touchgfx::Bitmap(BITMAP_ALTERNATE_THEME_IMAGES_WIDGETS_BUTTON_REGULAR_HEIGHT_50_SMALL_ROUND_NORMAL_ID));
 8005734:	f00c fefd 	bl	8012532 <_ZN8touchgfx6Button10setBitmapsERKNS_6BitmapES3_>
class TypedText
 8005738:	2352      	movs	r3, #82	; 0x52
 800573a:	f8a4 3278 	strh.w	r3, [r4, #632]	; 0x278
    buttonWithLabel3.setAction(buttonCallback);
 800573e:	350c      	adds	r5, #12
        updateTextPosition();
 8005740:	ee19 0a10 	vmov	r0, s18
 8005744:	f7fd f864 	bl	8002810 <_ZN8touchgfx15ButtonWithLabel18updateTextPositionEv>
 8005748:	ee19 1a10 	vmov	r1, s18
 800574c:	4630      	mov	r0, r6
        colorPressed = col;
 800574e:	e9c4 779f 	strd	r7, r7, [r4, #636]	; 0x27c
 8005752:	f8c4 5268 	str.w	r5, [r4, #616]	; 0x268
 8005756:	f00a fb53 	bl	800fe00 <_ZN8touchgfx9Container3addERNS_8DrawableE>
    buttonWithLabel2.setXY(33, 170);
 800575a:	ee19 0a90 	vmov	r0, s19
 800575e:	22aa      	movs	r2, #170	; 0xaa
 8005760:	2121      	movs	r1, #33	; 0x21
 8005762:	f7fd f800 	bl	8002766 <_ZN8touchgfx8Drawable5setXYEss>
    buttonWithLabel2.setBitmaps(touchgfx::Bitmap(BITMAP_ALTERNATE_THEME_IMAGES_WIDGETS_BUTTON_REGULAR_HEIGHT_50_SMALL_ROUND_PRESSED_ID), touchgfx::Bitmap(BITMAP_ALTERNATE_THEME_IMAGES_WIDGETS_BUTTON_REGULAR_HEIGHT_50_SMALL_ROUND_NORMAL_ID));
 8005766:	464a      	mov	r2, r9
 8005768:	a90b      	add	r1, sp, #44	; 0x2c
 800576a:	ee19 0a90 	vmov	r0, s19
 800576e:	f8ad b02c 	strh.w	fp, [sp, #44]	; 0x2c
 8005772:	f8ad 8030 	strh.w	r8, [sp, #48]	; 0x30
 8005776:	f00c fedc 	bl	8012532 <_ZN8touchgfx6Button10setBitmapsERKNS_6BitmapES3_>
 800577a:	2353      	movs	r3, #83	; 0x53
 800577c:	f8a4 32c0 	strh.w	r3, [r4, #704]	; 0x2c0
        updateTextPosition();
 8005780:	ee19 0a90 	vmov	r0, s19
 8005784:	f7fd f844 	bl	8002810 <_ZN8touchgfx15ButtonWithLabel18updateTextPositionEv>
 8005788:	ee19 1a90 	vmov	r1, s19
 800578c:	4630      	mov	r0, r6
        colorPressed = col;
 800578e:	e9c4 77b1 	strd	r7, r7, [r4, #708]	; 0x2c4
 8005792:	f8c4 52b0 	str.w	r5, [r4, #688]	; 0x2b0
 8005796:	f00a fb33 	bl	800fe00 <_ZN8touchgfx9Container3addERNS_8DrawableE>
    buttonWithLabel1.setXY(33, 100);
 800579a:	ee1a 0a10 	vmov	r0, s20
 800579e:	2264      	movs	r2, #100	; 0x64
 80057a0:	2121      	movs	r1, #33	; 0x21
 80057a2:	f7fc ffe0 	bl	8002766 <_ZN8touchgfx8Drawable5setXYEss>
    buttonWithLabel1.setBitmaps(touchgfx::Bitmap(BITMAP_ALTERNATE_THEME_IMAGES_WIDGETS_BUTTON_REGULAR_HEIGHT_50_SMALL_ROUND_PRESSED_ID), touchgfx::Bitmap(BITMAP_ALTERNATE_THEME_IMAGES_WIDGETS_BUTTON_REGULAR_HEIGHT_50_SMALL_ROUND_NORMAL_ID));
 80057a6:	464a      	mov	r2, r9
 80057a8:	a90b      	add	r1, sp, #44	; 0x2c
 80057aa:	ee1a 0a10 	vmov	r0, s20
 80057ae:	f8ad b02c 	strh.w	fp, [sp, #44]	; 0x2c
 80057b2:	f8ad 8030 	strh.w	r8, [sp, #48]	; 0x30
 80057b6:	f00c febc 	bl	8012532 <_ZN8touchgfx6Button10setBitmapsERKNS_6BitmapES3_>
 80057ba:	2354      	movs	r3, #84	; 0x54
 80057bc:	f8a4 3308 	strh.w	r3, [r4, #776]	; 0x308
        updateTextPosition();
 80057c0:	ee1a 0a10 	vmov	r0, s20
 80057c4:	f7fd f824 	bl	8002810 <_ZN8touchgfx15ButtonWithLabel18updateTextPositionEv>
 80057c8:	ee1a 1a10 	vmov	r1, s20
 80057cc:	4630      	mov	r0, r6
        colorPressed = col;
 80057ce:	e9c4 77c3 	strd	r7, r7, [r4, #780]	; 0x30c
 80057d2:	f8c4 52f8 	str.w	r5, [r4, #760]	; 0x2f8
 80057d6:	f00a fb13 	bl	800fe00 <_ZN8touchgfx9Container3addERNS_8DrawableE>
    buttonWithIcon1.setXY(198, 5);
 80057da:	ee1a 0a90 	vmov	r0, s21
 80057de:	2205      	movs	r2, #5
 80057e0:	21c6      	movs	r1, #198	; 0xc6
 80057e2:	f7fc ffc0 	bl	8002766 <_ZN8touchgfx8Drawable5setXYEss>
 80057e6:	2301      	movs	r3, #1
 80057e8:	f8ad 3028 	strh.w	r3, [sp, #40]	; 0x28
 80057ec:	230a      	movs	r3, #10
    buttonWithIcon1.setBitmaps(touchgfx::Bitmap(BITMAP_ALTERNATE_THEME_IMAGES_WIDGETS_BUTTON_ICON_ROUND_MICRO_OUTLINE_NORMAL_ID), touchgfx::Bitmap(BITMAP_ALTERNATE_THEME_IMAGES_WIDGETS_BUTTON_ICON_ROUND_MICRO_OUTLINE_PRESSED_ID), touchgfx::Bitmap(BITMAP_POWER_OFF_36X36_ID), touchgfx::Bitmap(BITMAP_POWER_OFF_36X36_ID));
 80057ee:	ee1a 0a90 	vmov	r0, s21
 80057f2:	f8ad 302c 	strh.w	r3, [sp, #44]	; 0x2c
 80057f6:	f8ad 3030 	strh.w	r3, [sp, #48]	; 0x30
 80057fa:	aa0a      	add	r2, sp, #40	; 0x28
 80057fc:	ab0b      	add	r3, sp, #44	; 0x2c
 80057fe:	a909      	add	r1, sp, #36	; 0x24
 8005800:	f8cd 9000 	str.w	r9, [sp]
 8005804:	f8ad a024 	strh.w	sl, [sp, #36]	; 0x24
 8005808:	f00c ffcd 	bl	80127a6 <_ZN8touchgfx14ButtonWithIcon10setBitmapsERKNS_6BitmapES3_S3_S3_>
 800580c:	4630      	mov	r0, r6
 800580e:	ee1a 1a90 	vmov	r1, s21
     * @note The user code must call invalidate() in order to update the button on the display.
     * @note The value set is overwritten on a subsequent call to setBitmaps.
     */
    void setIconX(int16_t x)
    {
        iconX = x;
 8005812:	f8c4 a350 	str.w	sl, [r4, #848]	; 0x350
 8005816:	f8c4 5340 	str.w	r5, [r4, #832]	; 0x340
 800581a:	f00a faf1 	bl	800fe00 <_ZN8touchgfx9Container3addERNS_8DrawableE>
}
 800581e:	4620      	mov	r0, r4
 8005820:	b00f      	add	sp, #60	; 0x3c
 8005822:	ecbd 8b06 	vpop	{d8-d10}
 8005826:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
 800582a:	bf00      	nop
 800582c:	20012f88 	.word	0x20012f88
 8005830:	0802bb72 	.word	0x0802bb72
 8005834:	0802bbe8 	.word	0x0802bbe8

08005838 <_ZN19MeasurementViewBase11setupScreenEv>:
}

void MeasurementViewBase::setupScreen()
{

}
 8005838:	4770      	bx	lr

0800583a <_ZN8touchgfx8CallbackI19MeasurementViewBaseRKNS_14AbstractButtonEvvED1Ev>:
struct Callback<dest_type, T1, void, void> : public GenericCallback<T1>
 800583a:	4770      	bx	lr

0800583c <_ZN8touchgfx8CallbackI19MeasurementViewBaseRKNS_14AbstractButtonEvvE7executeES4_>:
    virtual void execute(T1 t1)
 800583c:	b430      	push	{r4, r5}
        (pobject->*pmemfun)(t1);
 800583e:	68c2      	ldr	r2, [r0, #12]
 8005840:	6844      	ldr	r4, [r0, #4]
 8005842:	1055      	asrs	r5, r2, #1
    virtual void execute(T1 t1)
 8005844:	4603      	mov	r3, r0
        (pobject->*pmemfun)(t1);
 8005846:	eb04 0062 	add.w	r0, r4, r2, asr #1
 800584a:	07d2      	lsls	r2, r2, #31
 800584c:	bf48      	it	mi
 800584e:	5962      	ldrmi	r2, [r4, r5]
 8005850:	689b      	ldr	r3, [r3, #8]
    }
 8005852:	bc30      	pop	{r4, r5}
        (pobject->*pmemfun)(t1);
 8005854:	bf48      	it	mi
 8005856:	58d3      	ldrmi	r3, [r2, r3]
 8005858:	4718      	bx	r3

0800585a <_ZNK8touchgfx8CallbackI19MeasurementViewBaseRKNS_14AbstractButtonEvvE7isValidEv>:
        return (pobject != 0) && (pmemfun != 0);
 800585a:	6843      	ldr	r3, [r0, #4]
 800585c:	b12b      	cbz	r3, 800586a <_ZNK8touchgfx8CallbackI19MeasurementViewBaseRKNS_14AbstractButtonEvvE7isValidEv+0x10>
 800585e:	6883      	ldr	r3, [r0, #8]
 8005860:	b92b      	cbnz	r3, 800586e <_ZNK8touchgfx8CallbackI19MeasurementViewBaseRKNS_14AbstractButtonEvvE7isValidEv+0x14>
 8005862:	68c0      	ldr	r0, [r0, #12]
 8005864:	f000 0001 	and.w	r0, r0, #1
 8005868:	4770      	bx	lr
 800586a:	4618      	mov	r0, r3
 800586c:	4770      	bx	lr
 800586e:	2001      	movs	r0, #1
    }
 8005870:	4770      	bx	lr

08005872 <_ZN8touchgfx8CallbackI19MeasurementViewBaseRKNS_14AbstractButtonEvvED0Ev>:
struct Callback<dest_type, T1, void, void> : public GenericCallback<T1>
 8005872:	b510      	push	{r4, lr}
 8005874:	2110      	movs	r1, #16
 8005876:	4604      	mov	r4, r0
 8005878:	f023 fdd1 	bl	802941e <_ZdlPvj>
 800587c:	4620      	mov	r0, r4
 800587e:	bd10      	pop	{r4, pc}

08005880 <_ZN19MeasurementViewBaseD1Ev>:
MeasurementViewBase::~MeasurementViewBase()
 8005880:	b510      	push	{r4, lr}
 8005882:	4b03      	ldr	r3, [pc, #12]	; (8005890 <_ZN19MeasurementViewBaseD1Ev+0x10>)
 8005884:	6003      	str	r3, [r0, #0]
 8005886:	4604      	mov	r4, r0
    touchgfx::CanvasWidgetRenderer::resetBuffer();
 8005888:	f00e f850 	bl	801392c <_ZN8touchgfx20CanvasWidgetRenderer11resetBufferEv>
}
 800588c:	4620      	mov	r0, r4
 800588e:	bd10      	pop	{r4, pc}
 8005890:	0802d5cc 	.word	0x0802d5cc

08005894 <_ZN19MeasurementViewBaseD0Ev>:
MeasurementViewBase::~MeasurementViewBase()
 8005894:	b507      	push	{r0, r1, r2, lr}
 8005896:	4b07      	ldr	r3, [pc, #28]	; (80058b4 <_ZN19MeasurementViewBaseD0Ev+0x20>)
 8005898:	6003      	str	r3, [r0, #0]
 800589a:	9001      	str	r0, [sp, #4]
    touchgfx::CanvasWidgetRenderer::resetBuffer();
 800589c:	f00e f846 	bl	801392c <_ZN8touchgfx20CanvasWidgetRenderer11resetBufferEv>
}
 80058a0:	9801      	ldr	r0, [sp, #4]
 80058a2:	f44f 518a 	mov.w	r1, #4416	; 0x1140
 80058a6:	f023 fdba 	bl	802941e <_ZdlPvj>
 80058aa:	9801      	ldr	r0, [sp, #4]
 80058ac:	b003      	add	sp, #12
 80058ae:	f85d fb04 	ldr.w	pc, [sp], #4
 80058b2:	bf00      	nop
 80058b4:	0802d5cc 	.word	0x0802d5cc

080058b8 <_ZN19MeasurementViewBase21buttonCallbackHandlerERKN8touchgfx14AbstractButtonE>:

void MeasurementViewBase::buttonCallbackHandler(const touchgfx::AbstractButton& src)
{
 80058b8:	b538      	push	{r3, r4, r5, lr}
    if (&src == &buttonWithLabel3)
 80058ba:	f500 7310 	add.w	r3, r0, #576	; 0x240
 80058be:	4299      	cmp	r1, r3
{
 80058c0:	4604      	mov	r4, r0
 80058c2:	460d      	mov	r5, r1
    if (&src == &buttonWithLabel3)
 80058c4:	d103      	bne.n	80058ce <_ZN19MeasurementViewBase21buttonCallbackHandlerERKN8touchgfx14AbstractButtonE+0x16>
    virtual ~MeasurementViewBase();
    virtual void setupScreen();

protected:
    FrontendApplication& application() {
        return *static_cast<FrontendApplication*>(touchgfx::Application::getInstance());
 80058c6:	f00f fd33 	bl	8015330 <_ZN8touchgfx11Application11getInstanceEv>
    {
        //Interaction1
        //When buttonWithLabel3 clicked change screen to Main_Menu
        //Go to Main_Menu with screen transition towards West
        application().gotoMain_MenuScreenWipeTransitionWest();
 80058ca:	f7fe f853 	bl	8003974 <_ZN23FrontendApplicationBase37gotoMain_MenuScreenWipeTransitionWestEv>
    }
    if (&src == &buttonWithLabel1)
 80058ce:	f504 7334 	add.w	r3, r4, #720	; 0x2d0
 80058d2:	429d      	cmp	r5, r3
 80058d4:	d103      	bne.n	80058de <_ZN19MeasurementViewBase21buttonCallbackHandlerERKN8touchgfx14AbstractButtonE+0x26>
 80058d6:	f00f fd2b 	bl	8015330 <_ZN8touchgfx11Application11getInstanceEv>
    {
        //Interaction2
        //When buttonWithLabel1 clicked change screen to Measurement_Single
        //Go to Measurement_Single with screen transition towards East
        application().gotoMeasurement_SingleScreenWipeTransitionEast();
 80058da:	f7fe f87b 	bl	80039d4 <_ZN23FrontendApplicationBase46gotoMeasurement_SingleScreenWipeTransitionEastEv>
    }
    if (&src == &buttonWithLabel2)
 80058de:	f504 7422 	add.w	r4, r4, #648	; 0x288
 80058e2:	42a5      	cmp	r5, r4
 80058e4:	d105      	bne.n	80058f2 <_ZN19MeasurementViewBase21buttonCallbackHandlerERKN8touchgfx14AbstractButtonE+0x3a>
 80058e6:	f00f fd23 	bl	8015330 <_ZN8touchgfx11Application11getInstanceEv>
        //Interaction3
        //When buttonWithLabel2 clicked change screen to Measurement_Accurate
        //Go to Measurement_Accurate with screen transition towards East
        application().gotoMeasurement_AccurateScreenWipeTransitionEast();
    }
}
 80058ea:	e8bd 4038 	ldmia.w	sp!, {r3, r4, r5, lr}
        application().gotoMeasurement_AccurateScreenWipeTransitionEast();
 80058ee:	f7fe b8a1 	b.w	8003a34 <_ZN23FrontendApplicationBase48gotoMeasurement_AccurateScreenWipeTransitionEastEv>
}
 80058f2:	bd38      	pop	{r3, r4, r5, pc}

080058f4 <_ZN19MeasurementViewBaseC1Ev>:
MeasurementViewBase::MeasurementViewBase() :
 80058f4:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 80058f8:	ed2d 8b06 	vpush	{d8-d10}
 80058fc:	4604      	mov	r4, r0
 80058fe:	b08d      	sub	sp, #52	; 0x34
    buttonCallback(this, &MeasurementViewBase::buttonCallbackHandler)
 8005900:	46a3      	mov	fp, r4
 8005902:	2500      	movs	r5, #0
 8005904:	f011 f994 	bl	8016c30 <_ZN8touchgfx6ScreenC1Ev>
 8005908:	4b66      	ldr	r3, [pc, #408]	; (8005aa4 <_ZN19MeasurementViewBaseC1Ev+0x1b0>)
 800590a:	63e5      	str	r5, [r4, #60]	; 0x3c
 800590c:	f84b 3b40 	str.w	r3, [fp], #64
        : Widget(), alpha(255), color(0)
 8005910:	2226      	movs	r2, #38	; 0x26
 8005912:	4629      	mov	r1, r5
 8005914:	4658      	mov	r0, fp
 8005916:	f024 fd9a 	bl	802a44e <memset>
 800591a:	4658      	mov	r0, fp
 800591c:	f7fc ff44 	bl	80027a8 <_ZN8touchgfx6WidgetC1Ev>
 8005920:	f104 0a6c 	add.w	sl, r4, #108	; 0x6c
 8005924:	26ff      	movs	r6, #255	; 0xff
 8005926:	4b60      	ldr	r3, [pc, #384]	; (8005aa8 <_ZN19MeasurementViewBaseC1Ev+0x1b4>)
 8005928:	6423      	str	r3, [r4, #64]	; 0x40
        : Widget(), bitmap(bmp), alpha(255)
 800592a:	2226      	movs	r2, #38	; 0x26
 800592c:	f64f 73ff 	movw	r3, #65535	; 0xffff
 8005930:	4629      	mov	r1, r5
 8005932:	f884 6066 	strb.w	r6, [r4, #102]	; 0x66
 8005936:	4650      	mov	r0, sl
 8005938:	66a5      	str	r5, [r4, #104]	; 0x68
 800593a:	f8ad 3028 	strh.w	r3, [sp, #40]	; 0x28
 800593e:	f024 fd86 	bl	802a44e <memset>
 8005942:	4650      	mov	r0, sl
 8005944:	f7fc ff30 	bl	80027a8 <_ZN8touchgfx6WidgetC1Ev>
 8005948:	4b58      	ldr	r3, [pc, #352]	; (8005aac <_ZN19MeasurementViewBaseC1Ev+0x1b8>)
 800594a:	66e3      	str	r3, [r4, #108]	; 0x6c
 800594c:	f8bd 3028 	ldrh.w	r3, [sp, #40]	; 0x28
 8005950:	f8a4 3092 	strh.w	r3, [r4, #146]	; 0x92
        Image::setBitmap(bmp);
 8005954:	a90a      	add	r1, sp, #40	; 0x28
 8005956:	4650      	mov	r0, sl
 8005958:	f104 0998 	add.w	r9, r4, #152	; 0x98
        : Widget(), bitmap(bmp), alpha(255)
 800595c:	f884 6094 	strb.w	r6, [r4, #148]	; 0x94
        Image::setBitmap(bmp);
 8005960:	f00c ffdd 	bl	801291e <_ZN8touchgfx5Image9setBitmapERKNS_6BitmapE>
        : TextArea()
 8005964:	4648      	mov	r0, r9
 8005966:	f7fc ff31 	bl	80027cc <_ZN8touchgfx8TextAreaC1Ev>
        : TextAreaWithWildcardBase(), wc1(0)
 800596a:	4b51      	ldr	r3, [pc, #324]	; (8005ab0 <_ZN19MeasurementViewBaseC1Ev+0x1bc>)
 800596c:	f8c4 3098 	str.w	r3, [r4, #152]	; 0x98
 8005970:	f104 03e4 	add.w	r3, r4, #228	; 0xe4
 8005974:	4618      	mov	r0, r3
 8005976:	f8c4 50e0 	str.w	r5, [r4, #224]	; 0xe0
 800597a:	f504 7796 	add.w	r7, r4, #300	; 0x12c
 800597e:	ee08 3a90 	vmov	s17, r3
 8005982:	f7fc ff23 	bl	80027cc <_ZN8touchgfx8TextAreaC1Ev>
 8005986:	4638      	mov	r0, r7
 8005988:	f00b fe92 	bl	80116b0 <_ZN8touchgfx4LineC1Ev>
 800598c:	f504 73ce 	add.w	r3, r4, #412	; 0x19c
        : AbstractPainterRGB565(), AbstractPainterColor(color)
 8005990:	4618      	mov	r0, r3
 8005992:	9303      	str	r3, [sp, #12]
 8005994:	f7fb fb58 	bl	8001048 <_ZN8touchgfx21AbstractPainterRGB565C1Ev>
 8005998:	4b46      	ldr	r3, [pc, #280]	; (8005ab4 <_ZN19MeasurementViewBaseC1Ev+0x1c0>)
 800599a:	f8c4 319c 	str.w	r3, [r4, #412]	; 0x19c
 800599e:	f504 78d8 	add.w	r8, r4, #432	; 0x1b0
 80059a2:	3324      	adds	r3, #36	; 0x24
 80059a4:	f8c4 31a4 	str.w	r3, [r4, #420]	; 0x1a4
 80059a8:	f8c4 51a8 	str.w	r5, [r4, #424]	; 0x1a8
 80059ac:	4640      	mov	r0, r8
 80059ae:	f7fc ff0d 	bl	80027cc <_ZN8touchgfx8TextAreaC1Ev>
 80059b2:	f504 73fc 	add.w	r3, r4, #504	; 0x1f8
 80059b6:	4618      	mov	r0, r3
 80059b8:	ee08 3a10 	vmov	s16, r3
 80059bc:	f7fc ff06 	bl	80027cc <_ZN8touchgfx8TextAreaC1Ev>
 80059c0:	f504 7310 	add.w	r3, r4, #576	; 0x240
 80059c4:	4618      	mov	r0, r3
 80059c6:	ee09 3a10 	vmov	s18, r3
 80059ca:	f00d f8e9 	bl	8012ba0 <_ZN8touchgfx15ButtonWithLabelC1Ev>
 80059ce:	f504 7322 	add.w	r3, r4, #648	; 0x288
 80059d2:	4618      	mov	r0, r3
 80059d4:	ee09 3a90 	vmov	s19, r3
 80059d8:	f00d f8e2 	bl	8012ba0 <_ZN8touchgfx15ButtonWithLabelC1Ev>
 80059dc:	f504 7334 	add.w	r3, r4, #720	; 0x2d0
 80059e0:	4618      	mov	r0, r3
 80059e2:	ee0a 3a10 	vmov	s20, r3
 80059e6:	f00d f8db 	bl	8012ba0 <_ZN8touchgfx15ButtonWithLabelC1Ev>
        : pobject(pObject), pmemfun(pmemfun_1)
 80059ea:	4a33      	ldr	r2, [pc, #204]	; (8005ab8 <_ZN19MeasurementViewBaseC1Ev+0x1c4>)
 80059ec:	f504 5380 	add.w	r3, r4, #4096	; 0x1000
 80059f0:	e9c3 244c 	strd	r2, r4, [r3, #304]	; 0x130
 80059f4:	4a31      	ldr	r2, [pc, #196]	; (8005abc <_ZN19MeasurementViewBaseC1Ev+0x1c8>)
    touchgfx::CanvasWidgetRenderer::setupBuffer(canvasBuffer, CANVAS_BUFFER_SIZE);
 80059f6:	f44f 6161 	mov.w	r1, #3600	; 0xe10
 80059fa:	e9c3 254e 	strd	r2, r5, [r3, #312]	; 0x138
 80059fe:	f504 7048 	add.w	r0, r4, #800	; 0x320
 8005a02:	f00d ff89 	bl	8013918 <_ZN8touchgfx20CanvasWidgetRenderer11setupBufferEPhj>
    __background.setPosition(0, 0, 240, 320);
 8005a06:	f44f 73a0 	mov.w	r3, #320	; 0x140
 8005a0a:	462a      	mov	r2, r5
 8005a0c:	4658      	mov	r0, fp
 8005a0e:	9300      	str	r3, [sp, #0]
 8005a10:	4629      	mov	r1, r5
 8005a12:	23f0      	movs	r3, #240	; 0xf0
 8005a14:	f7fc feb4 	bl	8002780 <_ZN8touchgfx8Drawable11setPositionEssss>
 8005a18:	1d26      	adds	r6, r4, #4
        color = newColor;
 8005a1a:	f04f 437f 	mov.w	r3, #4278190080	; 0xff000000
 8005a1e:	66a3      	str	r3, [r4, #104]	; 0x68
 8005a20:	4659      	mov	r1, fp
 8005a22:	4630      	mov	r0, r6
 8005a24:	f00a f9ec 	bl	800fe00 <_ZN8touchgfx9Container3addERNS_8DrawableE>
    image1.setXY(0, 0);
 8005a28:	462a      	mov	r2, r5
 8005a2a:	4650      	mov	r0, sl
 8005a2c:	4629      	mov	r1, r5
 8005a2e:	f7fc fe9a 	bl	8002766 <_ZN8touchgfx8Drawable5setXYEss>
 8005a32:	2309      	movs	r3, #9
    image1.setBitmap(touchgfx::Bitmap(BITMAP_BACKGROUND_2_RESIZED_4_ID));
 8005a34:	4650      	mov	r0, sl
 8005a36:	a90a      	add	r1, sp, #40	; 0x28
 8005a38:	f8ad 3028 	strh.w	r3, [sp, #40]	; 0x28
 8005a3c:	f00c ff6f 	bl	801291e <_ZN8touchgfx5Image9setBitmapERKNS_6BitmapE>
 8005a40:	4651      	mov	r1, sl
 8005a42:	4630      	mov	r0, r6
 8005a44:	f00a f9dc 	bl	800fe00 <_ZN8touchgfx9Container3addERNS_8DrawableE>
    textArea3_1.setXY(86, 308);
 8005a48:	f44f 729a 	mov.w	r2, #308	; 0x134
 8005a4c:	2156      	movs	r1, #86	; 0x56
 8005a4e:	4648      	mov	r0, r9
 8005a50:	f7fc fe89 	bl	8002766 <_ZN8touchgfx8Drawable5setXYEss>
        color = newColor;
 8005a54:	f04f 33ff 	mov.w	r3, #4294967295
 8005a58:	f8c4 30c8 	str.w	r3, [r4, #200]	; 0xc8
        boundingArea = calculateBoundingArea();
 8005a5c:	f8d4 3098 	ldr.w	r3, [r4, #152]	; 0x98
        linespace = space;
 8005a60:	f8a4 50cc 	strh.w	r5, [r4, #204]	; 0xcc
        boundingArea = calculateBoundingArea();
 8005a64:	f10d 0b10 	add.w	fp, sp, #16
 8005a68:	f8d3 3084 	ldr.w	r3, [r3, #132]	; 0x84
 8005a6c:	4649      	mov	r1, r9
 8005a6e:	4658      	mov	r0, fp
 8005a70:	4798      	blx	r3
 8005a72:	e89b 0007 	ldmia.w	fp, {r0, r1, r2}
 8005a76:	f104 03d4 	add.w	r3, r4, #212	; 0xd4
 8005a7a:	e883 0007 	stmia.w	r3, {r0, r1, r2}
        assert(typedTexts != 0 && "TypedText database has not been initialized.");
 8005a7e:	4b10      	ldr	r3, [pc, #64]	; (8005ac0 <_ZN19MeasurementViewBaseC1Ev+0x1cc>)
 8005a80:	681b      	ldr	r3, [r3, #0]
    Unicode::snprintf(textArea3_1Buffer, TEXTAREA3_1_SIZE, "%s", touchgfx::TypedText(T___SINGLEUSE_0CQH).getText());
 8005a82:	f504 7a46 	add.w	sl, r4, #792	; 0x318
 8005a86:	b92b      	cbnz	r3, 8005a94 <_ZN19MeasurementViewBaseC1Ev+0x1a0>
 8005a88:	4b0e      	ldr	r3, [pc, #56]	; (8005ac4 <_ZN19MeasurementViewBaseC1Ev+0x1d0>)
 8005a8a:	4a0f      	ldr	r2, [pc, #60]	; (8005ac8 <_ZN19MeasurementViewBaseC1Ev+0x1d4>)
 8005a8c:	2160      	movs	r1, #96	; 0x60
        assert(hasValidId() && "typedTextId larger than numberOfTypedTexts.");
 8005a8e:	480f      	ldr	r0, [pc, #60]	; (8005acc <_ZN19MeasurementViewBaseC1Ev+0x1d8>)
 8005a90:	f024 fad8 	bl	802a044 <__assert_func>
        return typedTextId < numberOfTypedTexts;
 8005a94:	4b0e      	ldr	r3, [pc, #56]	; (8005ad0 <_ZN19MeasurementViewBaseC1Ev+0x1dc>)
        assert(hasValidId() && "typedTextId larger than numberOfTypedTexts.");
 8005a96:	881b      	ldrh	r3, [r3, #0]
 8005a98:	2b1b      	cmp	r3, #27
 8005a9a:	d81d      	bhi.n	8005ad8 <_ZN19MeasurementViewBaseC1Ev+0x1e4>
 8005a9c:	4b0d      	ldr	r3, [pc, #52]	; (8005ad4 <_ZN19MeasurementViewBaseC1Ev+0x1e0>)
 8005a9e:	4a0a      	ldr	r2, [pc, #40]	; (8005ac8 <_ZN19MeasurementViewBaseC1Ev+0x1d4>)
 8005aa0:	2161      	movs	r1, #97	; 0x61
 8005aa2:	e7f4      	b.n	8005a8e <_ZN19MeasurementViewBaseC1Ev+0x19a>
 8005aa4:	0802d5cc 	.word	0x0802d5cc
 8005aa8:	0802e540 	.word	0x0802e540
 8005aac:	0802e708 	.word	0x0802e708
 8005ab0:	0802bbf8 	.word	0x0802bbf8
 8005ab4:	0802e274 	.word	0x0802e274
 8005ab8:	0802d5b4 	.word	0x0802d5b4
 8005abc:	080058b9 	.word	0x080058b9
 8005ac0:	20012f7c 	.word	0x20012f7c
 8005ac4:	0802ba38 	.word	0x0802ba38
 8005ac8:	0802bb3a 	.word	0x0802bb3a
 8005acc:	0802bab5 	.word	0x0802bab5
 8005ad0:	20012f80 	.word	0x20012f80
 8005ad4:	0802bafc 	.word	0x0802bafc
        return texts->getText(typedTextId);
 8005ad8:	4b95      	ldr	r3, [pc, #596]	; (8005d30 <_ZN19MeasurementViewBaseC1Ev+0x43c>)
 8005ada:	211b      	movs	r1, #27
 8005adc:	6818      	ldr	r0, [r3, #0]
 8005ade:	f002 fb45 	bl	800816c <_ZNK8touchgfx5Texts7getTextEt>
 8005ae2:	4a94      	ldr	r2, [pc, #592]	; (8005d34 <_ZN19MeasurementViewBaseC1Ev+0x440>)
 8005ae4:	4603      	mov	r3, r0
 8005ae6:	2104      	movs	r1, #4
 8005ae8:	4650      	mov	r0, sl
 8005aea:	f012 fd91 	bl	8018610 <_ZN8touchgfx7Unicode8snprintfEPttPKcz>
        wc1 = value;
 8005aee:	f8c4 a0e0 	str.w	sl, [r4, #224]	; 0xe0
    textArea3_1.resizeToCurrentText();
 8005af2:	4648      	mov	r0, r9
 8005af4:	f00c fb18 	bl	8012128 <_ZN8touchgfx8TextArea19resizeToCurrentTextEv>
        : typedTextId(id)
 8005af8:	f8df a23c 	ldr.w	sl, [pc, #572]	; 8005d38 <_ZN19MeasurementViewBaseC1Ev+0x444>
 8005afc:	f8cd a028 	str.w	sl, [sp, #40]	; 0x28
 8005b00:	231c      	movs	r3, #28
    textArea3_1.setTypedText(touchgfx::TypedText(T___SINGLEUSE_TOET));
 8005b02:	a90a      	add	r1, sp, #40	; 0x28
 8005b04:	4648      	mov	r0, r9
 8005b06:	f8ad 302c 	strh.w	r3, [sp, #44]	; 0x2c
 8005b0a:	f00c fb2d 	bl	8012168 <_ZN8touchgfx8TextArea12setTypedTextERKNS_9TypedTextE>
 8005b0e:	4649      	mov	r1, r9
 8005b10:	4630      	mov	r0, r6
 8005b12:	f00a f975 	bl	800fe00 <_ZN8touchgfx9Container3addERNS_8DrawableE>
    textArea3.setXY(61, 60);
 8005b16:	223c      	movs	r2, #60	; 0x3c
 8005b18:	ee18 0a90 	vmov	r0, s17
 8005b1c:	213d      	movs	r1, #61	; 0x3d
 8005b1e:	f7fc fe22 	bl	8002766 <_ZN8touchgfx8Drawable5setXYEss>
        color = newColor;
 8005b22:	f04f 33ff 	mov.w	r3, #4294967295
        boundingArea = calculateBoundingArea();
 8005b26:	ee18 1a90 	vmov	r1, s17
        color = newColor;
 8005b2a:	f8c4 3114 	str.w	r3, [r4, #276]	; 0x114
        boundingArea = calculateBoundingArea();
 8005b2e:	4658      	mov	r0, fp
        linespace = space;
 8005b30:	f8a4 5118 	strh.w	r5, [r4, #280]	; 0x118
        boundingArea = calculateBoundingArea();
 8005b34:	f00c f87e 	bl	8011c34 <_ZNK8touchgfx8TextArea21calculateBoundingAreaEv>
 8005b38:	e89b 0007 	ldmia.w	fp, {r0, r1, r2}
 8005b3c:	f504 7390 	add.w	r3, r4, #288	; 0x120
 8005b40:	e883 0007 	stmia.w	r3, {r0, r1, r2}
 8005b44:	2329      	movs	r3, #41	; 0x29
    textArea3.setTypedText(touchgfx::TypedText(T___SINGLEUSE_Q8CP));
 8005b46:	ee18 0a90 	vmov	r0, s17
 8005b4a:	a90a      	add	r1, sp, #40	; 0x28
 8005b4c:	f8ad 302c 	strh.w	r3, [sp, #44]	; 0x2c
 8005b50:	f8cd a028 	str.w	sl, [sp, #40]	; 0x28
 8005b54:	f00c fb08 	bl	8012168 <_ZN8touchgfx8TextArea12setTypedTextERKNS_9TypedTextE>
 8005b58:	ee18 1a90 	vmov	r1, s17
 8005b5c:	4630      	mov	r0, r6
 8005b5e:	f00a f94f 	bl	800fe00 <_ZN8touchgfx9Container3addERNS_8DrawableE>
    line1.setPosition(0, 50, 240, 10);
 8005b62:	230a      	movs	r3, #10
 8005b64:	9300      	str	r3, [sp, #0]
 8005b66:	2232      	movs	r2, #50	; 0x32
 8005b68:	23f0      	movs	r3, #240	; 0xf0
 8005b6a:	4629      	mov	r1, r5
 8005b6c:	4638      	mov	r0, r7
 8005b6e:	f7fc fe07 	bl	8002780 <_ZN8touchgfx8Drawable11setPositionEssss>
 8005b72:	f04f 33ff 	mov.w	r3, #4294967295
        setStart(CWRUtil::toQ5<T>(x), CWRUtil::toQ5<T>(y));
 8005b76:	22a0      	movs	r2, #160	; 0xa0
 8005b78:	f8c4 31a8 	str.w	r3, [r4, #424]	; 0x1a8
        color565 = LCD16bpp::getNativeColor(painterColor);
 8005b7c:	f8a4 31ac 	strh.w	r3, [r4, #428]	; 0x1ac
 8005b80:	9b03      	ldr	r3, [sp, #12]
 8005b82:	f8c4 3154 	str.w	r3, [r4, #340]	; 0x154
 8005b86:	4611      	mov	r1, r2
 8005b88:	4638      	mov	r0, r7
 8005b8a:	f00b fea7 	bl	80118dc <_ZN8touchgfx4Line8setStartENS_7CWRUtil2Q5ES2_>
        setEnd(CWRUtil::toQ5<T>(x), CWRUtil::toQ5<T>(y));
 8005b8e:	22a0      	movs	r2, #160	; 0xa0
 8005b90:	f44f 51eb 	mov.w	r1, #7520	; 0x1d60
 8005b94:	4638      	mov	r0, r7
 8005b96:	f00b feac 	bl	80118f2 <_ZN8touchgfx4Line6setEndENS_7CWRUtil2Q5ES2_>
        if (lineWidthQ5 == widthQ5)
 8005b9a:	f8d4 3168 	ldr.w	r3, [r4, #360]	; 0x168
 8005b9e:	2b20      	cmp	r3, #32
 8005ba0:	d005      	beq.n	8005bae <_ZN19MeasurementViewBaseC1Ev+0x2ba>
        lineWidthQ5 = widthQ5;
 8005ba2:	2320      	movs	r3, #32
 8005ba4:	f8c4 3168 	str.w	r3, [r4, #360]	; 0x168
        updateCachedShape();
 8005ba8:	4638      	mov	r0, r7
 8005baa:	f00b fda1 	bl	80116f0 <_ZN8touchgfx4Line17updateCachedShapeEv>
    line1.setLineEndingStyle(touchgfx::Line::ROUND_CAP_ENDING);
 8005bae:	4638      	mov	r0, r7
 8005bb0:	2101      	movs	r1, #1
 8005bb2:	f00b fea9 	bl	8011908 <_ZN8touchgfx4Line18setLineEndingStyleENS0_17LINE_ENDING_STYLEE>
 8005bb6:	4639      	mov	r1, r7
 8005bb8:	4630      	mov	r0, r6
 8005bba:	f00a f921 	bl	800fe00 <_ZN8touchgfx9Container3addERNS_8DrawableE>
        color = newColor;
 8005bbe:	f04f 35ff 	mov.w	r5, #4294967295
        boundingArea = calculateBoundingArea();
 8005bc2:	af04      	add	r7, sp, #16
    textArea2.setXY(69, 35);
 8005bc4:	2223      	movs	r2, #35	; 0x23
 8005bc6:	4640      	mov	r0, r8
        linespace = space;
 8005bc8:	f04f 0a00 	mov.w	sl, #0
 8005bcc:	2145      	movs	r1, #69	; 0x45
 8005bce:	f7fc fdca 	bl	8002766 <_ZN8touchgfx8Drawable5setXYEss>
        boundingArea = calculateBoundingArea();
 8005bd2:	4641      	mov	r1, r8
 8005bd4:	4638      	mov	r0, r7
        color = newColor;
 8005bd6:	f8c4 51e0 	str.w	r5, [r4, #480]	; 0x1e0
        linespace = space;
 8005bda:	f8a4 a1e4 	strh.w	sl, [r4, #484]	; 0x1e4
        boundingArea = calculateBoundingArea();
 8005bde:	f00c f829 	bl	8011c34 <_ZNK8touchgfx8TextArea21calculateBoundingAreaEv>
 8005be2:	e897 0007 	ldmia.w	r7, {r0, r1, r2}
 8005be6:	f108 033c 	add.w	r3, r8, #60	; 0x3c
 8005bea:	e883 0007 	stmia.w	r3, {r0, r1, r2}
 8005bee:	f8df 9148 	ldr.w	r9, [pc, #328]	; 8005d38 <_ZN19MeasurementViewBaseC1Ev+0x444>
 8005bf2:	f8cd 9028 	str.w	r9, [sp, #40]	; 0x28
 8005bf6:	234e      	movs	r3, #78	; 0x4e
    textArea2.setTypedText(touchgfx::TypedText(T___SINGLEUSE_V2L5));
 8005bf8:	a90a      	add	r1, sp, #40	; 0x28
 8005bfa:	4640      	mov	r0, r8
 8005bfc:	f8ad 302c 	strh.w	r3, [sp, #44]	; 0x2c
 8005c00:	f00c fab2 	bl	8012168 <_ZN8touchgfx8TextArea12setTypedTextERKNS_9TypedTextE>
 8005c04:	4641      	mov	r1, r8
 8005c06:	4630      	mov	r0, r6
 8005c08:	f00a f8fa 	bl	800fe00 <_ZN8touchgfx9Container3addERNS_8DrawableE>
    textArea1.setXY(54, 12);
 8005c0c:	ee18 0a10 	vmov	r0, s16
 8005c10:	220c      	movs	r2, #12
 8005c12:	2136      	movs	r1, #54	; 0x36
 8005c14:	f7fc fda7 	bl	8002766 <_ZN8touchgfx8Drawable5setXYEss>
 8005c18:	ee18 1a10 	vmov	r1, s16
 8005c1c:	4638      	mov	r0, r7
        color = newColor;
 8005c1e:	f8c4 5228 	str.w	r5, [r4, #552]	; 0x228
        linespace = space;
 8005c22:	f8a4 a22c 	strh.w	sl, [r4, #556]	; 0x22c
        boundingArea = calculateBoundingArea();
 8005c26:	f00c f805 	bl	8011c34 <_ZNK8touchgfx8TextArea21calculateBoundingAreaEv>
 8005c2a:	e897 0007 	ldmia.w	r7, {r0, r1, r2}
 8005c2e:	ee18 3a10 	vmov	r3, s16
 8005c32:	333c      	adds	r3, #60	; 0x3c
 8005c34:	e883 0007 	stmia.w	r3, {r0, r1, r2}
 8005c38:	234f      	movs	r3, #79	; 0x4f
    textArea1.setTypedText(touchgfx::TypedText(T___SINGLEUSE_FIV6));
 8005c3a:	ee18 0a10 	vmov	r0, s16
 8005c3e:	a90a      	add	r1, sp, #40	; 0x28
 8005c40:	f8ad 302c 	strh.w	r3, [sp, #44]	; 0x2c
 8005c44:	f8cd 9028 	str.w	r9, [sp, #40]	; 0x28
 8005c48:	f00c fa8e 	bl	8012168 <_ZN8touchgfx8TextArea12setTypedTextERKNS_9TypedTextE>
 8005c4c:	ee18 1a10 	vmov	r1, s16
 8005c50:	4630      	mov	r0, r6
 8005c52:	f00a f8d5 	bl	800fe00 <_ZN8touchgfx9Container3addERNS_8DrawableE>
    buttonWithLabel3.setXY(33, 240);
 8005c56:	ee19 0a10 	vmov	r0, s18
 8005c5a:	22f0      	movs	r2, #240	; 0xf0
 8005c5c:	2121      	movs	r1, #33	; 0x21
 8005c5e:	f7fc fd82 	bl	8002766 <_ZN8touchgfx8Drawable5setXYEss>
 8005c62:	f04f 0903 	mov.w	r9, #3
    buttonWithLabel3.setBitmaps(touchgfx::Bitmap(BITMAP_ALTERNATE_THEME_IMAGES_WIDGETS_BUTTON_REGULAR_HEIGHT_50_SMALL_ROUND_PRESSED_ID), touchgfx::Bitmap(BITMAP_ALTERNATE_THEME_IMAGES_WIDGETS_BUTTON_REGULAR_HEIGHT_50_SMALL_ROUND_NORMAL_ID));
 8005c66:	aa0a      	add	r2, sp, #40	; 0x28
 8005c68:	f04f 0802 	mov.w	r8, #2
 8005c6c:	a909      	add	r1, sp, #36	; 0x24
 8005c6e:	ee19 0a10 	vmov	r0, s18
 8005c72:	f8ad 9024 	strh.w	r9, [sp, #36]	; 0x24
 8005c76:	f8ad 8028 	strh.w	r8, [sp, #40]	; 0x28
    buttonWithLabel3.setAction(buttonCallback);
 8005c7a:	f504 5789 	add.w	r7, r4, #4384	; 0x1120
    buttonWithLabel3.setBitmaps(touchgfx::Bitmap(BITMAP_ALTERNATE_THEME_IMAGES_WIDGETS_BUTTON_REGULAR_HEIGHT_50_SMALL_ROUND_PRESSED_ID), touchgfx::Bitmap(BITMAP_ALTERNATE_THEME_IMAGES_WIDGETS_BUTTON_REGULAR_HEIGHT_50_SMALL_ROUND_NORMAL_ID));
 8005c7e:	f00c fc58 	bl	8012532 <_ZN8touchgfx6Button10setBitmapsERKNS_6BitmapES3_>
class TypedText
 8005c82:	234d      	movs	r3, #77	; 0x4d
 8005c84:	f8a4 3278 	strh.w	r3, [r4, #632]	; 0x278
    buttonWithLabel3.setAction(buttonCallback);
 8005c88:	3710      	adds	r7, #16
        updateTextPosition();
 8005c8a:	ee19 0a10 	vmov	r0, s18
 8005c8e:	f7fc fdbf 	bl	8002810 <_ZN8touchgfx15ButtonWithLabel18updateTextPositionEv>
 8005c92:	ee19 1a10 	vmov	r1, s18
 8005c96:	4630      	mov	r0, r6
        colorPressed = col;
 8005c98:	e9c4 559f 	strd	r5, r5, [r4, #636]	; 0x27c
 8005c9c:	f8c4 7268 	str.w	r7, [r4, #616]	; 0x268
 8005ca0:	f00a f8ae 	bl	800fe00 <_ZN8touchgfx9Container3addERNS_8DrawableE>
    buttonWithLabel2.setXY(33, 170);
 8005ca4:	ee19 0a90 	vmov	r0, s19
 8005ca8:	22aa      	movs	r2, #170	; 0xaa
 8005caa:	2121      	movs	r1, #33	; 0x21
 8005cac:	f7fc fd5b 	bl	8002766 <_ZN8touchgfx8Drawable5setXYEss>
    buttonWithLabel2.setBitmaps(touchgfx::Bitmap(BITMAP_ALTERNATE_THEME_IMAGES_WIDGETS_BUTTON_REGULAR_HEIGHT_50_SMALL_ROUND_PRESSED_ID), touchgfx::Bitmap(BITMAP_ALTERNATE_THEME_IMAGES_WIDGETS_BUTTON_REGULAR_HEIGHT_50_SMALL_ROUND_NORMAL_ID));
 8005cb0:	aa0a      	add	r2, sp, #40	; 0x28
 8005cb2:	a909      	add	r1, sp, #36	; 0x24
 8005cb4:	ee19 0a90 	vmov	r0, s19
 8005cb8:	f8ad 9024 	strh.w	r9, [sp, #36]	; 0x24
 8005cbc:	f8ad 8028 	strh.w	r8, [sp, #40]	; 0x28
 8005cc0:	f00c fc37 	bl	8012532 <_ZN8touchgfx6Button10setBitmapsERKNS_6BitmapES3_>
 8005cc4:	234c      	movs	r3, #76	; 0x4c
 8005cc6:	f8a4 32c0 	strh.w	r3, [r4, #704]	; 0x2c0
        updateTextPosition();
 8005cca:	ee19 0a90 	vmov	r0, s19
 8005cce:	f7fc fd9f 	bl	8002810 <_ZN8touchgfx15ButtonWithLabel18updateTextPositionEv>
 8005cd2:	ee19 1a90 	vmov	r1, s19
 8005cd6:	4630      	mov	r0, r6
        colorPressed = col;
 8005cd8:	e9c4 55b1 	strd	r5, r5, [r4, #708]	; 0x2c4
 8005cdc:	f8c4 72b0 	str.w	r7, [r4, #688]	; 0x2b0
 8005ce0:	f00a f88e 	bl	800fe00 <_ZN8touchgfx9Container3addERNS_8DrawableE>
    buttonWithLabel1.setXY(33, 100);
 8005ce4:	ee1a 0a10 	vmov	r0, s20
 8005ce8:	2264      	movs	r2, #100	; 0x64
 8005cea:	2121      	movs	r1, #33	; 0x21
 8005cec:	f7fc fd3b 	bl	8002766 <_ZN8touchgfx8Drawable5setXYEss>
    buttonWithLabel1.setBitmaps(touchgfx::Bitmap(BITMAP_ALTERNATE_THEME_IMAGES_WIDGETS_BUTTON_REGULAR_HEIGHT_50_SMALL_ROUND_PRESSED_ID), touchgfx::Bitmap(BITMAP_ALTERNATE_THEME_IMAGES_WIDGETS_BUTTON_REGULAR_HEIGHT_50_SMALL_ROUND_NORMAL_ID));
 8005cf0:	aa0a      	add	r2, sp, #40	; 0x28
 8005cf2:	a909      	add	r1, sp, #36	; 0x24
 8005cf4:	ee1a 0a10 	vmov	r0, s20
 8005cf8:	f8ad 9024 	strh.w	r9, [sp, #36]	; 0x24
 8005cfc:	f8ad 8028 	strh.w	r8, [sp, #40]	; 0x28
 8005d00:	f00c fc17 	bl	8012532 <_ZN8touchgfx6Button10setBitmapsERKNS_6BitmapES3_>
 8005d04:	234b      	movs	r3, #75	; 0x4b
        updateTextPosition();
 8005d06:	ee1a 0a10 	vmov	r0, s20
 8005d0a:	f8a4 3308 	strh.w	r3, [r4, #776]	; 0x308
 8005d0e:	f7fc fd7f 	bl	8002810 <_ZN8touchgfx15ButtonWithLabel18updateTextPositionEv>
 8005d12:	4630      	mov	r0, r6
        colorPressed = col;
 8005d14:	e9c4 55c3 	strd	r5, r5, [r4, #780]	; 0x30c
 8005d18:	ee1a 1a10 	vmov	r1, s20
 8005d1c:	f8c4 72f8 	str.w	r7, [r4, #760]	; 0x2f8
 8005d20:	f00a f86e 	bl	800fe00 <_ZN8touchgfx9Container3addERNS_8DrawableE>
}
 8005d24:	4620      	mov	r0, r4
 8005d26:	b00d      	add	sp, #52	; 0x34
 8005d28:	ecbd 8b06 	vpop	{d8-d10}
 8005d2c:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
 8005d30:	20012f88 	.word	0x20012f88
 8005d34:	0802bb72 	.word	0x0802bb72
 8005d38:	0802bbe8 	.word	0x0802bbe8

08005d3c <_ZN28Measurement_AccurateViewBase11setupScreenEv>:
}

void Measurement_AccurateViewBase::setupScreen()
{

}
 8005d3c:	4770      	bx	lr

08005d3e <_ZN8touchgfx8CallbackI28Measurement_AccurateViewBaseRKNS_14AbstractButtonEvvED1Ev>:
struct Callback<dest_type, T1, void, void> : public GenericCallback<T1>
 8005d3e:	4770      	bx	lr

08005d40 <_ZN8touchgfx8CallbackI28Measurement_AccurateViewBaseRKNS_14AbstractButtonEvvE7executeES4_>:
    virtual void execute(T1 t1)
 8005d40:	b430      	push	{r4, r5}
        (pobject->*pmemfun)(t1);
 8005d42:	68c2      	ldr	r2, [r0, #12]
 8005d44:	6844      	ldr	r4, [r0, #4]
 8005d46:	1055      	asrs	r5, r2, #1
    virtual void execute(T1 t1)
 8005d48:	4603      	mov	r3, r0
        (pobject->*pmemfun)(t1);
 8005d4a:	eb04 0062 	add.w	r0, r4, r2, asr #1
 8005d4e:	07d2      	lsls	r2, r2, #31
 8005d50:	bf48      	it	mi
 8005d52:	5962      	ldrmi	r2, [r4, r5]
 8005d54:	689b      	ldr	r3, [r3, #8]
    }
 8005d56:	bc30      	pop	{r4, r5}
        (pobject->*pmemfun)(t1);
 8005d58:	bf48      	it	mi
 8005d5a:	58d3      	ldrmi	r3, [r2, r3]
 8005d5c:	4718      	bx	r3

08005d5e <_ZNK8touchgfx8CallbackI28Measurement_AccurateViewBaseRKNS_14AbstractButtonEvvE7isValidEv>:
        return (pobject != 0) && (pmemfun != 0);
 8005d5e:	6843      	ldr	r3, [r0, #4]
 8005d60:	b12b      	cbz	r3, 8005d6e <_ZNK8touchgfx8CallbackI28Measurement_AccurateViewBaseRKNS_14AbstractButtonEvvE7isValidEv+0x10>
 8005d62:	6883      	ldr	r3, [r0, #8]
 8005d64:	b92b      	cbnz	r3, 8005d72 <_ZNK8touchgfx8CallbackI28Measurement_AccurateViewBaseRKNS_14AbstractButtonEvvE7isValidEv+0x14>
 8005d66:	68c0      	ldr	r0, [r0, #12]
 8005d68:	f000 0001 	and.w	r0, r0, #1
 8005d6c:	4770      	bx	lr
 8005d6e:	4618      	mov	r0, r3
 8005d70:	4770      	bx	lr
 8005d72:	2001      	movs	r0, #1
    }
 8005d74:	4770      	bx	lr

08005d76 <_ZN8touchgfx8CallbackI28Measurement_AccurateViewBaseRKNS_14AbstractButtonEvvED0Ev>:
struct Callback<dest_type, T1, void, void> : public GenericCallback<T1>
 8005d76:	b510      	push	{r4, lr}
 8005d78:	2110      	movs	r1, #16
 8005d7a:	4604      	mov	r4, r0
 8005d7c:	f023 fb4f 	bl	802941e <_ZdlPvj>
 8005d80:	4620      	mov	r0, r4
 8005d82:	bd10      	pop	{r4, pc}

08005d84 <_ZN28Measurement_AccurateViewBaseD1Ev>:
Measurement_AccurateViewBase::~Measurement_AccurateViewBase()
 8005d84:	b510      	push	{r4, lr}
 8005d86:	4b03      	ldr	r3, [pc, #12]	; (8005d94 <_ZN28Measurement_AccurateViewBaseD1Ev+0x10>)
 8005d88:	6003      	str	r3, [r0, #0]
 8005d8a:	4604      	mov	r4, r0
    touchgfx::CanvasWidgetRenderer::resetBuffer();
 8005d8c:	f00d fdce 	bl	801392c <_ZN8touchgfx20CanvasWidgetRenderer11resetBufferEv>
}
 8005d90:	4620      	mov	r0, r4
 8005d92:	bd10      	pop	{r4, pc}
 8005d94:	0802d618 	.word	0x0802d618

08005d98 <_ZN28Measurement_AccurateViewBaseD0Ev>:
Measurement_AccurateViewBase::~Measurement_AccurateViewBase()
 8005d98:	b507      	push	{r0, r1, r2, lr}
 8005d9a:	4b07      	ldr	r3, [pc, #28]	; (8005db8 <_ZN28Measurement_AccurateViewBaseD0Ev+0x20>)
 8005d9c:	6003      	str	r3, [r0, #0]
 8005d9e:	9001      	str	r0, [sp, #4]
    touchgfx::CanvasWidgetRenderer::resetBuffer();
 8005da0:	f00d fdc4 	bl	801392c <_ZN8touchgfx20CanvasWidgetRenderer11resetBufferEv>
}
 8005da4:	9801      	ldr	r0, [sp, #4]
 8005da6:	f44f 518a 	mov.w	r1, #4416	; 0x1140
 8005daa:	f023 fb38 	bl	802941e <_ZdlPvj>
 8005dae:	9801      	ldr	r0, [sp, #4]
 8005db0:	b003      	add	sp, #12
 8005db2:	f85d fb04 	ldr.w	pc, [sp], #4
 8005db6:	bf00      	nop
 8005db8:	0802d618 	.word	0x0802d618

08005dbc <_ZN28Measurement_AccurateViewBase21buttonCallbackHandlerERKN8touchgfx14AbstractButtonE>:

void Measurement_AccurateViewBase::buttonCallbackHandler(const touchgfx::AbstractButton& src)
{
 8005dbc:	b538      	push	{r3, r4, r5, lr}
    if (&src == &buttonWithLabel3)
 8005dbe:	f500 7310 	add.w	r3, r0, #576	; 0x240
 8005dc2:	4299      	cmp	r1, r3
{
 8005dc4:	4604      	mov	r4, r0
 8005dc6:	460d      	mov	r5, r1
    if (&src == &buttonWithLabel3)
 8005dc8:	d103      	bne.n	8005dd2 <_ZN28Measurement_AccurateViewBase21buttonCallbackHandlerERKN8touchgfx14AbstractButtonE+0x16>
    virtual ~Measurement_AccurateViewBase();
    virtual void setupScreen();

protected:
    FrontendApplication& application() {
        return *static_cast<FrontendApplication*>(touchgfx::Application::getInstance());
 8005dca:	f00f fab1 	bl	8015330 <_ZN8touchgfx11Application11getInstanceEv>
    {
        //Interaction1
        //When buttonWithLabel3 clicked change screen to Measurement
        //Go to Measurement with screen transition towards West
        application().gotoMeasurementScreenWipeTransitionWest();
 8005dce:	f7fd fdf1 	bl	80039b4 <_ZN23FrontendApplicationBase39gotoMeasurementScreenWipeTransitionWestEv>
    }
    if (&src == &buttonWithLabel2)
 8005dd2:	f504 7322 	add.w	r3, r4, #648	; 0x288
 8005dd6:	429d      	cmp	r5, r3
 8005dd8:	d103      	bne.n	8005de2 <_ZN28Measurement_AccurateViewBase21buttonCallbackHandlerERKN8touchgfx14AbstractButtonE+0x26>
 8005dda:	f00f faa9 	bl	8015330 <_ZN8touchgfx11Application11getInstanceEv>
    {
        //Interaction2
        //When buttonWithLabel2 clicked change screen to Measurement_Accurate_Display_2
        //Go to Measurement_Accurate_Display_2 with screen transition towards East
        application().gotoMeasurement_Accurate_Display_2ScreenWipeTransitionEast();
 8005dde:	f7fd fe59 	bl	8003a94 <_ZN23FrontendApplicationBase58gotoMeasurement_Accurate_Display_2ScreenWipeTransitionEastEv>
    }
    if (&src == &buttonWithLabel1)
 8005de2:	f504 7434 	add.w	r4, r4, #720	; 0x2d0
 8005de6:	42a5      	cmp	r5, r4
 8005de8:	d105      	bne.n	8005df6 <_ZN28Measurement_AccurateViewBase21buttonCallbackHandlerERKN8touchgfx14AbstractButtonE+0x3a>
 8005dea:	f00f faa1 	bl	8015330 <_ZN8touchgfx11Application11getInstanceEv>
        //Interaction3
        //When buttonWithLabel1 clicked change screen to Measurement_Accurate_Display
        //Go to Measurement_Accurate_Display with screen transition towards East
        application().gotoMeasurement_Accurate_DisplayScreenWipeTransitionEast();
    }
}
 8005dee:	e8bd 4038 	ldmia.w	sp!, {r3, r4, r5, lr}
        application().gotoMeasurement_Accurate_DisplayScreenWipeTransitionEast();
 8005df2:	f7fd be3f 	b.w	8003a74 <_ZN23FrontendApplicationBase56gotoMeasurement_Accurate_DisplayScreenWipeTransitionEastEv>
}
 8005df6:	bd38      	pop	{r3, r4, r5, pc}

08005df8 <_ZN28Measurement_AccurateViewBaseC1Ev>:
Measurement_AccurateViewBase::Measurement_AccurateViewBase() :
 8005df8:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 8005dfc:	ed2d 8b06 	vpush	{d8-d10}
 8005e00:	4604      	mov	r4, r0
 8005e02:	b08d      	sub	sp, #52	; 0x34
    buttonCallback(this, &Measurement_AccurateViewBase::buttonCallbackHandler)
 8005e04:	46a3      	mov	fp, r4
 8005e06:	2500      	movs	r5, #0
 8005e08:	f010 ff12 	bl	8016c30 <_ZN8touchgfx6ScreenC1Ev>
 8005e0c:	4b66      	ldr	r3, [pc, #408]	; (8005fa8 <_ZN28Measurement_AccurateViewBaseC1Ev+0x1b0>)
 8005e0e:	63e5      	str	r5, [r4, #60]	; 0x3c
 8005e10:	f84b 3b40 	str.w	r3, [fp], #64
        : Widget(), alpha(255), color(0)
 8005e14:	2226      	movs	r2, #38	; 0x26
 8005e16:	4629      	mov	r1, r5
 8005e18:	4658      	mov	r0, fp
 8005e1a:	f024 fb18 	bl	802a44e <memset>
 8005e1e:	4658      	mov	r0, fp
 8005e20:	f7fc fcc2 	bl	80027a8 <_ZN8touchgfx6WidgetC1Ev>
 8005e24:	f104 0a6c 	add.w	sl, r4, #108	; 0x6c
 8005e28:	26ff      	movs	r6, #255	; 0xff
 8005e2a:	4b60      	ldr	r3, [pc, #384]	; (8005fac <_ZN28Measurement_AccurateViewBaseC1Ev+0x1b4>)
 8005e2c:	6423      	str	r3, [r4, #64]	; 0x40
        : Widget(), bitmap(bmp), alpha(255)
 8005e2e:	2226      	movs	r2, #38	; 0x26
 8005e30:	f64f 73ff 	movw	r3, #65535	; 0xffff
 8005e34:	4629      	mov	r1, r5
 8005e36:	f884 6066 	strb.w	r6, [r4, #102]	; 0x66
 8005e3a:	4650      	mov	r0, sl
 8005e3c:	66a5      	str	r5, [r4, #104]	; 0x68
 8005e3e:	f8ad 3028 	strh.w	r3, [sp, #40]	; 0x28
 8005e42:	f024 fb04 	bl	802a44e <memset>
 8005e46:	4650      	mov	r0, sl
 8005e48:	f7fc fcae 	bl	80027a8 <_ZN8touchgfx6WidgetC1Ev>
 8005e4c:	4b58      	ldr	r3, [pc, #352]	; (8005fb0 <_ZN28Measurement_AccurateViewBaseC1Ev+0x1b8>)
 8005e4e:	66e3      	str	r3, [r4, #108]	; 0x6c
 8005e50:	f8bd 3028 	ldrh.w	r3, [sp, #40]	; 0x28
 8005e54:	f8a4 3092 	strh.w	r3, [r4, #146]	; 0x92
        Image::setBitmap(bmp);
 8005e58:	a90a      	add	r1, sp, #40	; 0x28
 8005e5a:	4650      	mov	r0, sl
 8005e5c:	f104 0998 	add.w	r9, r4, #152	; 0x98
        : Widget(), bitmap(bmp), alpha(255)
 8005e60:	f884 6094 	strb.w	r6, [r4, #148]	; 0x94
        Image::setBitmap(bmp);
 8005e64:	f00c fd5b 	bl	801291e <_ZN8touchgfx5Image9setBitmapERKNS_6BitmapE>
        : TextArea()
 8005e68:	4648      	mov	r0, r9
 8005e6a:	f7fc fcaf 	bl	80027cc <_ZN8touchgfx8TextAreaC1Ev>
 8005e6e:	f104 07e4 	add.w	r7, r4, #228	; 0xe4
        : TextAreaWithWildcardBase(), wc1(0)
 8005e72:	4b50      	ldr	r3, [pc, #320]	; (8005fb4 <_ZN28Measurement_AccurateViewBaseC1Ev+0x1bc>)
 8005e74:	f8c4 3098 	str.w	r3, [r4, #152]	; 0x98
 8005e78:	f8c4 50e0 	str.w	r5, [r4, #224]	; 0xe0
 8005e7c:	4638      	mov	r0, r7
 8005e7e:	f00b fc17 	bl	80116b0 <_ZN8touchgfx4LineC1Ev>
 8005e82:	f504 73aa 	add.w	r3, r4, #340	; 0x154
        : AbstractPainterRGB565(), AbstractPainterColor(color)
 8005e86:	4618      	mov	r0, r3
 8005e88:	9303      	str	r3, [sp, #12]
 8005e8a:	f7fb f8dd 	bl	8001048 <_ZN8touchgfx21AbstractPainterRGB565C1Ev>
 8005e8e:	4b4a      	ldr	r3, [pc, #296]	; (8005fb8 <_ZN28Measurement_AccurateViewBaseC1Ev+0x1c0>)
 8005e90:	f8c4 3154 	str.w	r3, [r4, #340]	; 0x154
 8005e94:	f504 78b4 	add.w	r8, r4, #360	; 0x168
 8005e98:	3324      	adds	r3, #36	; 0x24
 8005e9a:	f8c4 315c 	str.w	r3, [r4, #348]	; 0x15c
 8005e9e:	f8c4 5160 	str.w	r5, [r4, #352]	; 0x160
 8005ea2:	4640      	mov	r0, r8
 8005ea4:	f7fc fc92 	bl	80027cc <_ZN8touchgfx8TextAreaC1Ev>
 8005ea8:	f504 73d8 	add.w	r3, r4, #432	; 0x1b0
 8005eac:	4618      	mov	r0, r3
 8005eae:	ee08 3a10 	vmov	s16, r3
 8005eb2:	f7fc fc8b 	bl	80027cc <_ZN8touchgfx8TextAreaC1Ev>
 8005eb6:	f504 73fc 	add.w	r3, r4, #504	; 0x1f8
 8005eba:	4618      	mov	r0, r3
 8005ebc:	ee08 3a90 	vmov	s17, r3
 8005ec0:	f7fc fc84 	bl	80027cc <_ZN8touchgfx8TextAreaC1Ev>
 8005ec4:	f504 7310 	add.w	r3, r4, #576	; 0x240
 8005ec8:	4618      	mov	r0, r3
 8005eca:	ee09 3a10 	vmov	s18, r3
 8005ece:	f00c fe67 	bl	8012ba0 <_ZN8touchgfx15ButtonWithLabelC1Ev>
 8005ed2:	f504 7322 	add.w	r3, r4, #648	; 0x288
 8005ed6:	4618      	mov	r0, r3
 8005ed8:	ee09 3a90 	vmov	s19, r3
 8005edc:	f00c fe60 	bl	8012ba0 <_ZN8touchgfx15ButtonWithLabelC1Ev>
 8005ee0:	f504 7334 	add.w	r3, r4, #720	; 0x2d0
 8005ee4:	4618      	mov	r0, r3
 8005ee6:	ee0a 3a10 	vmov	s20, r3
 8005eea:	f00c fe59 	bl	8012ba0 <_ZN8touchgfx15ButtonWithLabelC1Ev>
        : pobject(pObject), pmemfun(pmemfun_1)
 8005eee:	4a33      	ldr	r2, [pc, #204]	; (8005fbc <_ZN28Measurement_AccurateViewBaseC1Ev+0x1c4>)
 8005ef0:	f504 5380 	add.w	r3, r4, #4096	; 0x1000
 8005ef4:	e9c3 244c 	strd	r2, r4, [r3, #304]	; 0x130
 8005ef8:	4a31      	ldr	r2, [pc, #196]	; (8005fc0 <_ZN28Measurement_AccurateViewBaseC1Ev+0x1c8>)
    touchgfx::CanvasWidgetRenderer::setupBuffer(canvasBuffer, CANVAS_BUFFER_SIZE);
 8005efa:	f44f 6161 	mov.w	r1, #3600	; 0xe10
 8005efe:	e9c3 254e 	strd	r2, r5, [r3, #312]	; 0x138
 8005f02:	f504 7048 	add.w	r0, r4, #800	; 0x320
 8005f06:	f00d fd07 	bl	8013918 <_ZN8touchgfx20CanvasWidgetRenderer11setupBufferEPhj>
    __background.setPosition(0, 0, 240, 320);
 8005f0a:	f44f 73a0 	mov.w	r3, #320	; 0x140
 8005f0e:	462a      	mov	r2, r5
 8005f10:	4658      	mov	r0, fp
 8005f12:	9300      	str	r3, [sp, #0]
 8005f14:	4629      	mov	r1, r5
 8005f16:	23f0      	movs	r3, #240	; 0xf0
 8005f18:	f7fc fc32 	bl	8002780 <_ZN8touchgfx8Drawable11setPositionEssss>
 8005f1c:	1d26      	adds	r6, r4, #4
        color = newColor;
 8005f1e:	f04f 437f 	mov.w	r3, #4278190080	; 0xff000000
 8005f22:	66a3      	str	r3, [r4, #104]	; 0x68
 8005f24:	4659      	mov	r1, fp
 8005f26:	4630      	mov	r0, r6
 8005f28:	f009 ff6a 	bl	800fe00 <_ZN8touchgfx9Container3addERNS_8DrawableE>
    image1.setXY(0, 0);
 8005f2c:	462a      	mov	r2, r5
 8005f2e:	4650      	mov	r0, sl
 8005f30:	4629      	mov	r1, r5
 8005f32:	f7fc fc18 	bl	8002766 <_ZN8touchgfx8Drawable5setXYEss>
 8005f36:	2309      	movs	r3, #9
    image1.setBitmap(touchgfx::Bitmap(BITMAP_BACKGROUND_2_RESIZED_4_ID));
 8005f38:	4650      	mov	r0, sl
 8005f3a:	a90a      	add	r1, sp, #40	; 0x28
 8005f3c:	f8ad 3028 	strh.w	r3, [sp, #40]	; 0x28
 8005f40:	f00c fced 	bl	801291e <_ZN8touchgfx5Image9setBitmapERKNS_6BitmapE>
 8005f44:	4651      	mov	r1, sl
 8005f46:	4630      	mov	r0, r6
 8005f48:	f009 ff5a 	bl	800fe00 <_ZN8touchgfx9Container3addERNS_8DrawableE>
    textArea3_1.setXY(86, 308);
 8005f4c:	f44f 729a 	mov.w	r2, #308	; 0x134
 8005f50:	2156      	movs	r1, #86	; 0x56
 8005f52:	4648      	mov	r0, r9
 8005f54:	f7fc fc07 	bl	8002766 <_ZN8touchgfx8Drawable5setXYEss>
 8005f58:	f8d4 3098 	ldr.w	r3, [r4, #152]	; 0x98
        linespace = space;
 8005f5c:	f8a4 50cc 	strh.w	r5, [r4, #204]	; 0xcc
        boundingArea = calculateBoundingArea();
 8005f60:	f10d 0a10 	add.w	sl, sp, #16
        color = newColor;
 8005f64:	f04f 3bff 	mov.w	fp, #4294967295
        boundingArea = calculateBoundingArea();
 8005f68:	4650      	mov	r0, sl
 8005f6a:	f8d3 3084 	ldr.w	r3, [r3, #132]	; 0x84
        color = newColor;
 8005f6e:	f8c4 b0c8 	str.w	fp, [r4, #200]	; 0xc8
        boundingArea = calculateBoundingArea();
 8005f72:	4649      	mov	r1, r9
 8005f74:	4798      	blx	r3
 8005f76:	e89a 0007 	ldmia.w	sl, {r0, r1, r2}
 8005f7a:	f104 03d4 	add.w	r3, r4, #212	; 0xd4
 8005f7e:	e883 0007 	stmia.w	r3, {r0, r1, r2}
        assert(typedTexts != 0 && "TypedText database has not been initialized.");
 8005f82:	4b10      	ldr	r3, [pc, #64]	; (8005fc4 <_ZN28Measurement_AccurateViewBaseC1Ev+0x1cc>)
 8005f84:	681b      	ldr	r3, [r3, #0]
    Unicode::snprintf(textArea3_1Buffer, TEXTAREA3_1_SIZE, "%s", touchgfx::TypedText(T___SINGLEUSE_CUW4).getText());
 8005f86:	f504 7a46 	add.w	sl, r4, #792	; 0x318
 8005f8a:	b92b      	cbnz	r3, 8005f98 <_ZN28Measurement_AccurateViewBaseC1Ev+0x1a0>
 8005f8c:	4b0e      	ldr	r3, [pc, #56]	; (8005fc8 <_ZN28Measurement_AccurateViewBaseC1Ev+0x1d0>)
 8005f8e:	4a0f      	ldr	r2, [pc, #60]	; (8005fcc <_ZN28Measurement_AccurateViewBaseC1Ev+0x1d4>)
 8005f90:	2160      	movs	r1, #96	; 0x60
        assert(hasValidId() && "typedTextId larger than numberOfTypedTexts.");
 8005f92:	480f      	ldr	r0, [pc, #60]	; (8005fd0 <_ZN28Measurement_AccurateViewBaseC1Ev+0x1d8>)
 8005f94:	f024 f856 	bl	802a044 <__assert_func>
        return typedTextId < numberOfTypedTexts;
 8005f98:	4b0e      	ldr	r3, [pc, #56]	; (8005fd4 <_ZN28Measurement_AccurateViewBaseC1Ev+0x1dc>)
        assert(hasValidId() && "typedTextId larger than numberOfTypedTexts.");
 8005f9a:	881b      	ldrh	r3, [r3, #0]
 8005f9c:	2b16      	cmp	r3, #22
 8005f9e:	d81d      	bhi.n	8005fdc <_ZN28Measurement_AccurateViewBaseC1Ev+0x1e4>
 8005fa0:	4b0d      	ldr	r3, [pc, #52]	; (8005fd8 <_ZN28Measurement_AccurateViewBaseC1Ev+0x1e0>)
 8005fa2:	4a0a      	ldr	r2, [pc, #40]	; (8005fcc <_ZN28Measurement_AccurateViewBaseC1Ev+0x1d4>)
 8005fa4:	2161      	movs	r1, #97	; 0x61
 8005fa6:	e7f4      	b.n	8005f92 <_ZN28Measurement_AccurateViewBaseC1Ev+0x19a>
 8005fa8:	0802d618 	.word	0x0802d618
 8005fac:	0802e540 	.word	0x0802e540
 8005fb0:	0802e708 	.word	0x0802e708
 8005fb4:	0802bbf8 	.word	0x0802bbf8
 8005fb8:	0802e274 	.word	0x0802e274
 8005fbc:	0802d600 	.word	0x0802d600
 8005fc0:	08005dbd 	.word	0x08005dbd
 8005fc4:	20012f7c 	.word	0x20012f7c
 8005fc8:	0802ba38 	.word	0x0802ba38
 8005fcc:	0802bb3a 	.word	0x0802bb3a
 8005fd0:	0802bab5 	.word	0x0802bab5
 8005fd4:	20012f80 	.word	0x20012f80
 8005fd8:	0802bafc 	.word	0x0802bafc
        return texts->getText(typedTextId);
 8005fdc:	4b93      	ldr	r3, [pc, #588]	; (800622c <_ZN28Measurement_AccurateViewBaseC1Ev+0x434>)
 8005fde:	2116      	movs	r1, #22
 8005fe0:	6818      	ldr	r0, [r3, #0]
 8005fe2:	f002 f8c3 	bl	800816c <_ZNK8touchgfx5Texts7getTextEt>
 8005fe6:	4a92      	ldr	r2, [pc, #584]	; (8006230 <_ZN28Measurement_AccurateViewBaseC1Ev+0x438>)
 8005fe8:	4603      	mov	r3, r0
 8005fea:	2104      	movs	r1, #4
 8005fec:	4650      	mov	r0, sl
 8005fee:	f012 fb0f 	bl	8018610 <_ZN8touchgfx7Unicode8snprintfEPttPKcz>
    textArea3_1.resizeToCurrentText();
 8005ff2:	4648      	mov	r0, r9
        wc1 = value;
 8005ff4:	f8c4 a0e0 	str.w	sl, [r4, #224]	; 0xe0
 8005ff8:	f00c f896 	bl	8012128 <_ZN8touchgfx8TextArea19resizeToCurrentTextEv>
        : typedTextId(id)
 8005ffc:	4b8d      	ldr	r3, [pc, #564]	; (8006234 <_ZN28Measurement_AccurateViewBaseC1Ev+0x43c>)
 8005ffe:	930a      	str	r3, [sp, #40]	; 0x28
    textArea3_1.setTypedText(touchgfx::TypedText(T___SINGLEUSE_SQC7));
 8006000:	a90a      	add	r1, sp, #40	; 0x28
 8006002:	2317      	movs	r3, #23
 8006004:	4648      	mov	r0, r9
 8006006:	f8ad 302c 	strh.w	r3, [sp, #44]	; 0x2c
 800600a:	f00c f8ad 	bl	8012168 <_ZN8touchgfx8TextArea12setTypedTextERKNS_9TypedTextE>
 800600e:	4649      	mov	r1, r9
 8006010:	4630      	mov	r0, r6
 8006012:	f009 fef5 	bl	800fe00 <_ZN8touchgfx9Container3addERNS_8DrawableE>
    line1.setPosition(0, 50, 240, 10);
 8006016:	230a      	movs	r3, #10
 8006018:	9300      	str	r3, [sp, #0]
 800601a:	2232      	movs	r2, #50	; 0x32
 800601c:	23f0      	movs	r3, #240	; 0xf0
 800601e:	4629      	mov	r1, r5
 8006020:	4638      	mov	r0, r7
 8006022:	f7fc fbad 	bl	8002780 <_ZN8touchgfx8Drawable11setPositionEssss>
 8006026:	9b03      	ldr	r3, [sp, #12]
 8006028:	f8c4 310c 	str.w	r3, [r4, #268]	; 0x10c
        setStart(CWRUtil::toQ5<T>(x), CWRUtil::toQ5<T>(y));
 800602c:	22a0      	movs	r2, #160	; 0xa0
 800602e:	4611      	mov	r1, r2
 8006030:	4638      	mov	r0, r7
 8006032:	f8c4 b160 	str.w	fp, [r4, #352]	; 0x160
        color565 = LCD16bpp::getNativeColor(painterColor);
 8006036:	f8a4 b164 	strh.w	fp, [r4, #356]	; 0x164
 800603a:	f00b fc4f 	bl	80118dc <_ZN8touchgfx4Line8setStartENS_7CWRUtil2Q5ES2_>
        setEnd(CWRUtil::toQ5<T>(x), CWRUtil::toQ5<T>(y));
 800603e:	22a0      	movs	r2, #160	; 0xa0
 8006040:	f44f 51eb 	mov.w	r1, #7520	; 0x1d60
 8006044:	4638      	mov	r0, r7
 8006046:	f00b fc54 	bl	80118f2 <_ZN8touchgfx4Line6setEndENS_7CWRUtil2Q5ES2_>
        if (lineWidthQ5 == widthQ5)
 800604a:	f8d4 3120 	ldr.w	r3, [r4, #288]	; 0x120
 800604e:	2b20      	cmp	r3, #32
 8006050:	d005      	beq.n	800605e <_ZN28Measurement_AccurateViewBaseC1Ev+0x266>
        lineWidthQ5 = widthQ5;
 8006052:	2320      	movs	r3, #32
 8006054:	f8c4 3120 	str.w	r3, [r4, #288]	; 0x120
        updateCachedShape();
 8006058:	4638      	mov	r0, r7
 800605a:	f00b fb49 	bl	80116f0 <_ZN8touchgfx4Line17updateCachedShapeEv>
    line1.setLineEndingStyle(touchgfx::Line::ROUND_CAP_ENDING);
 800605e:	4638      	mov	r0, r7
 8006060:	2101      	movs	r1, #1
 8006062:	f00b fc51 	bl	8011908 <_ZN8touchgfx4Line18setLineEndingStyleENS0_17LINE_ENDING_STYLEE>
 8006066:	4639      	mov	r1, r7
 8006068:	4630      	mov	r0, r6
 800606a:	ad04      	add	r5, sp, #16
        color = newColor;
 800606c:	f04f 37ff 	mov.w	r7, #4294967295
 8006070:	f009 fec6 	bl	800fe00 <_ZN8touchgfx9Container3addERNS_8DrawableE>
        linespace = space;
 8006074:	f04f 0a00 	mov.w	sl, #0
    textArea2.setXY(69, 35);
 8006078:	2223      	movs	r2, #35	; 0x23
 800607a:	4640      	mov	r0, r8
 800607c:	2145      	movs	r1, #69	; 0x45
 800607e:	f7fc fb72 	bl	8002766 <_ZN8touchgfx8Drawable5setXYEss>
        boundingArea = calculateBoundingArea();
 8006082:	4641      	mov	r1, r8
 8006084:	4628      	mov	r0, r5
        color = newColor;
 8006086:	f8c4 7198 	str.w	r7, [r4, #408]	; 0x198
        linespace = space;
 800608a:	f8a4 a19c 	strh.w	sl, [r4, #412]	; 0x19c
        boundingArea = calculateBoundingArea();
 800608e:	f00b fdd1 	bl	8011c34 <_ZNK8touchgfx8TextArea21calculateBoundingAreaEv>
 8006092:	e895 0007 	ldmia.w	r5, {r0, r1, r2}
 8006096:	f108 033c 	add.w	r3, r8, #60	; 0x3c
 800609a:	e883 0007 	stmia.w	r3, {r0, r1, r2}
 800609e:	f04f 0b3c 	mov.w	fp, #60	; 0x3c
 80060a2:	f8df 9190 	ldr.w	r9, [pc, #400]	; 8006234 <_ZN28Measurement_AccurateViewBaseC1Ev+0x43c>
 80060a6:	f8cd 9028 	str.w	r9, [sp, #40]	; 0x28
    textArea2.setTypedText(touchgfx::TypedText(T___SINGLEUSE_UWMX));
 80060aa:	a90a      	add	r1, sp, #40	; 0x28
 80060ac:	4640      	mov	r0, r8
 80060ae:	f8ad b02c 	strh.w	fp, [sp, #44]	; 0x2c
 80060b2:	f00c f859 	bl	8012168 <_ZN8touchgfx8TextArea12setTypedTextERKNS_9TypedTextE>
 80060b6:	4641      	mov	r1, r8
 80060b8:	4630      	mov	r0, r6
 80060ba:	f009 fea1 	bl	800fe00 <_ZN8touchgfx9Container3addERNS_8DrawableE>
    textArea1.setXY(54, 12);
 80060be:	ee18 0a10 	vmov	r0, s16
 80060c2:	220c      	movs	r2, #12
 80060c4:	2136      	movs	r1, #54	; 0x36
 80060c6:	f7fc fb4e 	bl	8002766 <_ZN8touchgfx8Drawable5setXYEss>
 80060ca:	ee18 1a10 	vmov	r1, s16
 80060ce:	4628      	mov	r0, r5
        color = newColor;
 80060d0:	f8c4 71e0 	str.w	r7, [r4, #480]	; 0x1e0
        linespace = space;
 80060d4:	f8a4 a1e4 	strh.w	sl, [r4, #484]	; 0x1e4
        boundingArea = calculateBoundingArea();
 80060d8:	f00b fdac 	bl	8011c34 <_ZNK8touchgfx8TextArea21calculateBoundingAreaEv>
 80060dc:	e895 0007 	ldmia.w	r5, {r0, r1, r2}
 80060e0:	ee18 3a10 	vmov	r3, s16
 80060e4:	445b      	add	r3, fp
 80060e6:	e883 0007 	stmia.w	r3, {r0, r1, r2}
 80060ea:	233b      	movs	r3, #59	; 0x3b
    textArea1.setTypedText(touchgfx::TypedText(T___SINGLEUSE_1X41));
 80060ec:	ee18 0a10 	vmov	r0, s16
 80060f0:	a90a      	add	r1, sp, #40	; 0x28
 80060f2:	f8ad 302c 	strh.w	r3, [sp, #44]	; 0x2c
 80060f6:	f8cd 9028 	str.w	r9, [sp, #40]	; 0x28
 80060fa:	f00c f835 	bl	8012168 <_ZN8touchgfx8TextArea12setTypedTextERKNS_9TypedTextE>
 80060fe:	ee18 1a10 	vmov	r1, s16
 8006102:	4630      	mov	r0, r6
 8006104:	f009 fe7c 	bl	800fe00 <_ZN8touchgfx9Container3addERNS_8DrawableE>
    textArea3.setXY(33, 60);
 8006108:	465a      	mov	r2, fp
 800610a:	ee18 0a90 	vmov	r0, s17
 800610e:	2121      	movs	r1, #33	; 0x21
 8006110:	f7fc fb29 	bl	8002766 <_ZN8touchgfx8Drawable5setXYEss>
 8006114:	ee18 1a90 	vmov	r1, s17
 8006118:	4628      	mov	r0, r5
        color = newColor;
 800611a:	f8c4 7228 	str.w	r7, [r4, #552]	; 0x228
        linespace = space;
 800611e:	f8a4 a22c 	strh.w	sl, [r4, #556]	; 0x22c
        boundingArea = calculateBoundingArea();
 8006122:	f00b fd87 	bl	8011c34 <_ZNK8touchgfx8TextArea21calculateBoundingAreaEv>
 8006126:	e895 0007 	ldmia.w	r5, {r0, r1, r2}
 800612a:	ee18 3a90 	vmov	r3, s17
 800612e:	445b      	add	r3, fp
 8006130:	e883 0007 	stmia.w	r3, {r0, r1, r2}
 8006134:	2325      	movs	r3, #37	; 0x25
    textArea3.setTypedText(touchgfx::TypedText(T___SINGLEUSE_D7H9));
 8006136:	ee18 0a90 	vmov	r0, s17
 800613a:	a90a      	add	r1, sp, #40	; 0x28
 800613c:	f8ad 302c 	strh.w	r3, [sp, #44]	; 0x2c
 8006140:	f8cd 9028 	str.w	r9, [sp, #40]	; 0x28
 8006144:	f00c f810 	bl	8012168 <_ZN8touchgfx8TextArea12setTypedTextERKNS_9TypedTextE>
 8006148:	ee18 1a90 	vmov	r1, s17
 800614c:	4630      	mov	r0, r6
 800614e:	f009 fe57 	bl	800fe00 <_ZN8touchgfx9Container3addERNS_8DrawableE>
    buttonWithLabel3.setXY(33, 240);
 8006152:	ee19 0a10 	vmov	r0, s18
 8006156:	22f0      	movs	r2, #240	; 0xf0
 8006158:	2121      	movs	r1, #33	; 0x21
 800615a:	f7fc fb04 	bl	8002766 <_ZN8touchgfx8Drawable5setXYEss>
 800615e:	f04f 0903 	mov.w	r9, #3
    buttonWithLabel3.setBitmaps(touchgfx::Bitmap(BITMAP_ALTERNATE_THEME_IMAGES_WIDGETS_BUTTON_REGULAR_HEIGHT_50_SMALL_ROUND_PRESSED_ID), touchgfx::Bitmap(BITMAP_ALTERNATE_THEME_IMAGES_WIDGETS_BUTTON_REGULAR_HEIGHT_50_SMALL_ROUND_NORMAL_ID));
 8006162:	aa0a      	add	r2, sp, #40	; 0x28
 8006164:	f04f 0802 	mov.w	r8, #2
 8006168:	a909      	add	r1, sp, #36	; 0x24
 800616a:	ee19 0a10 	vmov	r0, s18
 800616e:	f8ad 9024 	strh.w	r9, [sp, #36]	; 0x24
 8006172:	f8ad 8028 	strh.w	r8, [sp, #40]	; 0x28
    buttonWithLabel3.setAction(buttonCallback);
 8006176:	f504 5589 	add.w	r5, r4, #4384	; 0x1120
    buttonWithLabel3.setBitmaps(touchgfx::Bitmap(BITMAP_ALTERNATE_THEME_IMAGES_WIDGETS_BUTTON_REGULAR_HEIGHT_50_SMALL_ROUND_PRESSED_ID), touchgfx::Bitmap(BITMAP_ALTERNATE_THEME_IMAGES_WIDGETS_BUTTON_REGULAR_HEIGHT_50_SMALL_ROUND_NORMAL_ID));
 800617a:	f00c f9da 	bl	8012532 <_ZN8touchgfx6Button10setBitmapsERKNS_6BitmapES3_>
class TypedText
 800617e:	233a      	movs	r3, #58	; 0x3a
 8006180:	f8a4 3278 	strh.w	r3, [r4, #632]	; 0x278
    buttonWithLabel3.setAction(buttonCallback);
 8006184:	3510      	adds	r5, #16
        updateTextPosition();
 8006186:	ee19 0a10 	vmov	r0, s18
 800618a:	f7fc fb41 	bl	8002810 <_ZN8touchgfx15ButtonWithLabel18updateTextPositionEv>
 800618e:	ee19 1a10 	vmov	r1, s18
 8006192:	4630      	mov	r0, r6
        colorPressed = col;
 8006194:	e9c4 779f 	strd	r7, r7, [r4, #636]	; 0x27c
 8006198:	f8c4 5268 	str.w	r5, [r4, #616]	; 0x268
 800619c:	f009 fe30 	bl	800fe00 <_ZN8touchgfx9Container3addERNS_8DrawableE>
    buttonWithLabel2.setXY(33, 170);
 80061a0:	ee19 0a90 	vmov	r0, s19
 80061a4:	22aa      	movs	r2, #170	; 0xaa
 80061a6:	2121      	movs	r1, #33	; 0x21
 80061a8:	f7fc fadd 	bl	8002766 <_ZN8touchgfx8Drawable5setXYEss>
    buttonWithLabel2.setBitmaps(touchgfx::Bitmap(BITMAP_ALTERNATE_THEME_IMAGES_WIDGETS_BUTTON_REGULAR_HEIGHT_50_SMALL_ROUND_PRESSED_ID), touchgfx::Bitmap(BITMAP_ALTERNATE_THEME_IMAGES_WIDGETS_BUTTON_REGULAR_HEIGHT_50_SMALL_ROUND_NORMAL_ID));
 80061ac:	aa0a      	add	r2, sp, #40	; 0x28
 80061ae:	a909      	add	r1, sp, #36	; 0x24
 80061b0:	ee19 0a90 	vmov	r0, s19
 80061b4:	f8ad 9024 	strh.w	r9, [sp, #36]	; 0x24
 80061b8:	f8ad 8028 	strh.w	r8, [sp, #40]	; 0x28
 80061bc:	f00c f9b9 	bl	8012532 <_ZN8touchgfx6Button10setBitmapsERKNS_6BitmapES3_>
 80061c0:	2339      	movs	r3, #57	; 0x39
 80061c2:	f8a4 32c0 	strh.w	r3, [r4, #704]	; 0x2c0
        updateTextPosition();
 80061c6:	ee19 0a90 	vmov	r0, s19
 80061ca:	f7fc fb21 	bl	8002810 <_ZN8touchgfx15ButtonWithLabel18updateTextPositionEv>
 80061ce:	ee19 1a90 	vmov	r1, s19
 80061d2:	4630      	mov	r0, r6
        colorPressed = col;
 80061d4:	e9c4 77b1 	strd	r7, r7, [r4, #708]	; 0x2c4
 80061d8:	f8c4 52b0 	str.w	r5, [r4, #688]	; 0x2b0
 80061dc:	f009 fe10 	bl	800fe00 <_ZN8touchgfx9Container3addERNS_8DrawableE>
    buttonWithLabel1.setXY(33, 100);
 80061e0:	ee1a 0a10 	vmov	r0, s20
 80061e4:	2264      	movs	r2, #100	; 0x64
 80061e6:	2121      	movs	r1, #33	; 0x21
 80061e8:	f7fc fabd 	bl	8002766 <_ZN8touchgfx8Drawable5setXYEss>
    buttonWithLabel1.setBitmaps(touchgfx::Bitmap(BITMAP_ALTERNATE_THEME_IMAGES_WIDGETS_BUTTON_REGULAR_HEIGHT_50_SMALL_ROUND_PRESSED_ID), touchgfx::Bitmap(BITMAP_ALTERNATE_THEME_IMAGES_WIDGETS_BUTTON_REGULAR_HEIGHT_50_SMALL_ROUND_NORMAL_ID));
 80061ec:	aa0a      	add	r2, sp, #40	; 0x28
 80061ee:	a909      	add	r1, sp, #36	; 0x24
 80061f0:	ee1a 0a10 	vmov	r0, s20
 80061f4:	f8ad 9024 	strh.w	r9, [sp, #36]	; 0x24
 80061f8:	f8ad 8028 	strh.w	r8, [sp, #40]	; 0x28
 80061fc:	f00c f999 	bl	8012532 <_ZN8touchgfx6Button10setBitmapsERKNS_6BitmapES3_>
 8006200:	2338      	movs	r3, #56	; 0x38
        updateTextPosition();
 8006202:	ee1a 0a10 	vmov	r0, s20
 8006206:	f8a4 3308 	strh.w	r3, [r4, #776]	; 0x308
 800620a:	f7fc fb01 	bl	8002810 <_ZN8touchgfx15ButtonWithLabel18updateTextPositionEv>
 800620e:	4630      	mov	r0, r6
        colorPressed = col;
 8006210:	e9c4 77c3 	strd	r7, r7, [r4, #780]	; 0x30c
 8006214:	ee1a 1a10 	vmov	r1, s20
 8006218:	f8c4 52f8 	str.w	r5, [r4, #760]	; 0x2f8
 800621c:	f009 fdf0 	bl	800fe00 <_ZN8touchgfx9Container3addERNS_8DrawableE>
}
 8006220:	4620      	mov	r0, r4
 8006222:	b00d      	add	sp, #52	; 0x34
 8006224:	ecbd 8b06 	vpop	{d8-d10}
 8006228:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
 800622c:	20012f88 	.word	0x20012f88
 8006230:	0802bb72 	.word	0x0802bb72
 8006234:	0802bbe8 	.word	0x0802bbe8

08006238 <_ZN8touchgfx8CallbackI36Measurement_Accurate_DisplayViewBaseRKNS_14AbstractButtonEvvED1Ev>:
struct Callback<dest_type, T1, void, void> : public GenericCallback<T1>
 8006238:	4770      	bx	lr

0800623a <_ZN8touchgfx8CallbackI36Measurement_Accurate_DisplayViewBaseRKNS_14AbstractButtonEvvE7executeES4_>:
    virtual void execute(T1 t1)
 800623a:	b430      	push	{r4, r5}
        (pobject->*pmemfun)(t1);
 800623c:	68c2      	ldr	r2, [r0, #12]
 800623e:	6844      	ldr	r4, [r0, #4]
 8006240:	1055      	asrs	r5, r2, #1
    virtual void execute(T1 t1)
 8006242:	4603      	mov	r3, r0
        (pobject->*pmemfun)(t1);
 8006244:	eb04 0062 	add.w	r0, r4, r2, asr #1
 8006248:	07d2      	lsls	r2, r2, #31
 800624a:	bf48      	it	mi
 800624c:	5962      	ldrmi	r2, [r4, r5]
 800624e:	689b      	ldr	r3, [r3, #8]
    }
 8006250:	bc30      	pop	{r4, r5}
        (pobject->*pmemfun)(t1);
 8006252:	bf48      	it	mi
 8006254:	58d3      	ldrmi	r3, [r2, r3]
 8006256:	4718      	bx	r3

08006258 <_ZNK8touchgfx8CallbackI36Measurement_Accurate_DisplayViewBaseRKNS_14AbstractButtonEvvE7isValidEv>:
        return (pobject != 0) && (pmemfun != 0);
 8006258:	6843      	ldr	r3, [r0, #4]
 800625a:	b12b      	cbz	r3, 8006268 <_ZNK8touchgfx8CallbackI36Measurement_Accurate_DisplayViewBaseRKNS_14AbstractButtonEvvE7isValidEv+0x10>
 800625c:	6883      	ldr	r3, [r0, #8]
 800625e:	b92b      	cbnz	r3, 800626c <_ZNK8touchgfx8CallbackI36Measurement_Accurate_DisplayViewBaseRKNS_14AbstractButtonEvvE7isValidEv+0x14>
 8006260:	68c0      	ldr	r0, [r0, #12]
 8006262:	f000 0001 	and.w	r0, r0, #1
 8006266:	4770      	bx	lr
 8006268:	4618      	mov	r0, r3
 800626a:	4770      	bx	lr
 800626c:	2001      	movs	r0, #1
    }
 800626e:	4770      	bx	lr

08006270 <_ZN8touchgfx8CallbackI36Measurement_Accurate_DisplayViewBaseRKNS_14AbstractButtonEvvED0Ev>:
struct Callback<dest_type, T1, void, void> : public GenericCallback<T1>
 8006270:	b510      	push	{r4, lr}
 8006272:	2110      	movs	r1, #16
 8006274:	4604      	mov	r4, r0
 8006276:	f023 f8d2 	bl	802941e <_ZdlPvj>
 800627a:	4620      	mov	r0, r4
 800627c:	bd10      	pop	{r4, pc}

0800627e <_ZN36Measurement_Accurate_DisplayViewBase11setupScreenEv>:
    touchgfx::CanvasWidgetRenderer::resetBuffer();
}

void Measurement_Accurate_DisplayViewBase::setupScreen()
{
    gauge_with_Values1.initialize();
 800627e:	f500 700f 	add.w	r0, r0, #572	; 0x23c
 8006282:	f002 b8bb 	b.w	80083fc <_ZN17Gauge_with_Values10initializeEv>

08006286 <_ZN36Measurement_Accurate_DisplayViewBase21buttonCallbackHandlerERKN8touchgfx14AbstractButtonE>:
}

void Measurement_Accurate_DisplayViewBase::buttonCallbackHandler(const touchgfx::AbstractButton& src)
{
    if (&src == &buttonWithLabel3)
 8006286:	3098      	adds	r0, #152	; 0x98
 8006288:	4288      	cmp	r0, r1
{
 800628a:	b508      	push	{r3, lr}
    if (&src == &buttonWithLabel3)
 800628c:	d105      	bne.n	800629a <_ZN36Measurement_Accurate_DisplayViewBase21buttonCallbackHandlerERKN8touchgfx14AbstractButtonE+0x14>
    virtual ~Measurement_Accurate_DisplayViewBase();
    virtual void setupScreen();

protected:
    FrontendApplication& application() {
        return *static_cast<FrontendApplication*>(touchgfx::Application::getInstance());
 800628e:	f00f f84f 	bl	8015330 <_ZN8touchgfx11Application11getInstanceEv>
        //Interaction1
        //When buttonWithLabel3 clicked change screen to Measurement_Accurate
        //Go to Measurement_Accurate with screen transition towards West
        application().gotoMeasurement_AccurateScreenWipeTransitionWest();
    }
}
 8006292:	e8bd 4008 	ldmia.w	sp!, {r3, lr}
        application().gotoMeasurement_AccurateScreenWipeTransitionWest();
 8006296:	f7fd bbdd 	b.w	8003a54 <_ZN23FrontendApplicationBase48gotoMeasurement_AccurateScreenWipeTransitionWestEv>
}
 800629a:	bd08      	pop	{r3, pc}

0800629c <_ZN36Measurement_Accurate_DisplayViewBaseD1Ev>:
Measurement_Accurate_DisplayViewBase::~Measurement_Accurate_DisplayViewBase()
 800629c:	b510      	push	{r4, lr}
 800629e:	4b07      	ldr	r3, [pc, #28]	; (80062bc <_ZN36Measurement_Accurate_DisplayViewBaseD1Ev+0x20>)
 80062a0:	6003      	str	r3, [r0, #0]
 80062a2:	4604      	mov	r4, r0
    touchgfx::CanvasWidgetRenderer::resetBuffer();
 80062a4:	f00d fb42 	bl	801392c <_ZN8touchgfx20CanvasWidgetRenderer11resetBufferEv>

class Gauge_with_Values : public Gauge_with_ValuesBase
{
public:
    Gauge_with_Values();
    virtual ~Gauge_with_Values() {}
 80062a8:	4b05      	ldr	r3, [pc, #20]	; (80062c0 <_ZN36Measurement_Accurate_DisplayViewBaseD1Ev+0x24>)
 80062aa:	f8c4 323c 	str.w	r3, [r4, #572]	; 0x23c
 80062ae:	f504 700f 	add.w	r0, r4, #572	; 0x23c
 80062b2:	f7fe fe25 	bl	8004f00 <_ZN21Gauge_with_ValuesBaseD1Ev>
}
 80062b6:	4620      	mov	r0, r4
 80062b8:	bd10      	pop	{r4, pc}
 80062ba:	bf00      	nop
 80062bc:	0802d664 	.word	0x0802d664
 80062c0:	0802dbbc 	.word	0x0802dbbc

080062c4 <_ZN36Measurement_Accurate_DisplayViewBaseD0Ev>:
Measurement_Accurate_DisplayViewBase::~Measurement_Accurate_DisplayViewBase()
 80062c4:	b510      	push	{r4, lr}
 80062c6:	4604      	mov	r4, r0
}
 80062c8:	f7ff ffe8 	bl	800629c <_ZN36Measurement_Accurate_DisplayViewBaseD1Ev>
 80062cc:	4620      	mov	r0, r4
 80062ce:	f241 31e4 	movw	r1, #5092	; 0x13e4
 80062d2:	f023 f8a4 	bl	802941e <_ZdlPvj>
 80062d6:	4620      	mov	r0, r4
 80062d8:	bd10      	pop	{r4, pc}
	...

080062dc <_ZN36Measurement_Accurate_DisplayViewBaseC1Ev>:
Measurement_Accurate_DisplayViewBase::Measurement_Accurate_DisplayViewBase() :
 80062dc:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 80062e0:	ed2d 8b04 	vpush	{d8-d9}
 80062e4:	4604      	mov	r4, r0
 80062e6:	b08d      	sub	sp, #52	; 0x34
    buttonCallback(this, &Measurement_Accurate_DisplayViewBase::buttonCallbackHandler)
 80062e8:	46a1      	mov	r9, r4
 80062ea:	2500      	movs	r5, #0
 80062ec:	f010 fca0 	bl	8016c30 <_ZN8touchgfx6ScreenC1Ev>
 80062f0:	4bac      	ldr	r3, [pc, #688]	; (80065a4 <_ZN36Measurement_Accurate_DisplayViewBaseC1Ev+0x2c8>)
 80062f2:	63e5      	str	r5, [r4, #60]	; 0x3c
 80062f4:	f849 3b40 	str.w	r3, [r9], #64
        : Widget(), alpha(255), color(0)
 80062f8:	2226      	movs	r2, #38	; 0x26
 80062fa:	4629      	mov	r1, r5
 80062fc:	4648      	mov	r0, r9
 80062fe:	f024 f8a6 	bl	802a44e <memset>
 8006302:	4648      	mov	r0, r9
 8006304:	f7fc fa50 	bl	80027a8 <_ZN8touchgfx6WidgetC1Ev>
 8006308:	f104 086c 	add.w	r8, r4, #108	; 0x6c
 800630c:	26ff      	movs	r6, #255	; 0xff
 800630e:	4ba6      	ldr	r3, [pc, #664]	; (80065a8 <_ZN36Measurement_Accurate_DisplayViewBaseC1Ev+0x2cc>)
 8006310:	6423      	str	r3, [r4, #64]	; 0x40
        : Widget(), bitmap(bmp), alpha(255)
 8006312:	2226      	movs	r2, #38	; 0x26
 8006314:	f64f 73ff 	movw	r3, #65535	; 0xffff
 8006318:	4629      	mov	r1, r5
 800631a:	f884 6066 	strb.w	r6, [r4, #102]	; 0x66
 800631e:	4640      	mov	r0, r8
 8006320:	66a5      	str	r5, [r4, #104]	; 0x68
 8006322:	f8ad 3028 	strh.w	r3, [sp, #40]	; 0x28
 8006326:	f024 f892 	bl	802a44e <memset>
 800632a:	4640      	mov	r0, r8
 800632c:	f7fc fa3c 	bl	80027a8 <_ZN8touchgfx6WidgetC1Ev>
 8006330:	4b9e      	ldr	r3, [pc, #632]	; (80065ac <_ZN36Measurement_Accurate_DisplayViewBaseC1Ev+0x2d0>)
 8006332:	66e3      	str	r3, [r4, #108]	; 0x6c
 8006334:	f8bd 3028 	ldrh.w	r3, [sp, #40]	; 0x28
 8006338:	f8a4 3092 	strh.w	r3, [r4, #146]	; 0x92
        Image::setBitmap(bmp);
 800633c:	a90a      	add	r1, sp, #40	; 0x28
 800633e:	4640      	mov	r0, r8
        : Widget(), bitmap(bmp), alpha(255)
 8006340:	f884 6094 	strb.w	r6, [r4, #148]	; 0x94
        Image::setBitmap(bmp);
 8006344:	f00c faeb 	bl	801291e <_ZN8touchgfx5Image9setBitmapERKNS_6BitmapE>
 8006348:	f104 0398 	add.w	r3, r4, #152	; 0x98
 800634c:	4618      	mov	r0, r3
 800634e:	ee08 3a10 	vmov	s16, r3
 8006352:	f00c fc25 	bl	8012ba0 <_ZN8touchgfx15ButtonWithLabelC1Ev>
 8006356:	f104 03e0 	add.w	r3, r4, #224	; 0xe0
 800635a:	f504 7794 	add.w	r7, r4, #296	; 0x128
 800635e:	4618      	mov	r0, r3
 8006360:	ee08 3a90 	vmov	s17, r3
 8006364:	f7fc fa32 	bl	80027cc <_ZN8touchgfx8TextAreaC1Ev>
 8006368:	4638      	mov	r0, r7
 800636a:	f00b f9a1 	bl	80116b0 <_ZN8touchgfx4LineC1Ev>
 800636e:	f504 73cc 	add.w	r3, r4, #408	; 0x198
        : AbstractPainterRGB565(), AbstractPainterColor(color)
 8006372:	4618      	mov	r0, r3
 8006374:	9303      	str	r3, [sp, #12]
 8006376:	f7fa fe67 	bl	8001048 <_ZN8touchgfx21AbstractPainterRGB565C1Ev>
 800637a:	4b8d      	ldr	r3, [pc, #564]	; (80065b0 <_ZN36Measurement_Accurate_DisplayViewBaseC1Ev+0x2d4>)
 800637c:	f8c4 3198 	str.w	r3, [r4, #408]	; 0x198
 8006380:	f504 7bd6 	add.w	fp, r4, #428	; 0x1ac
 8006384:	3324      	adds	r3, #36	; 0x24
 8006386:	f8c4 31a0 	str.w	r3, [r4, #416]	; 0x1a0
 800638a:	f8c4 51a4 	str.w	r5, [r4, #420]	; 0x1a4
 800638e:	4658      	mov	r0, fp
 8006390:	f504 7afa 	add.w	sl, r4, #500	; 0x1f4
 8006394:	f7fc fa1a 	bl	80027cc <_ZN8touchgfx8TextAreaC1Ev>
 8006398:	4650      	mov	r0, sl
 800639a:	f7fc fa17 	bl	80027cc <_ZN8touchgfx8TextAreaC1Ev>
 800639e:	f504 730f 	add.w	r3, r4, #572	; 0x23c
 80063a2:	4618      	mov	r0, r3
 80063a4:	ee09 3a10 	vmov	s18, r3
 80063a8:	f002 f81e 	bl	80083e8 <_ZN17Gauge_with_ValuesC1Ev>
        : pobject(pObject), pmemfun(pmemfun_1)
 80063ac:	4a81      	ldr	r2, [pc, #516]	; (80065b4 <_ZN36Measurement_Accurate_DisplayViewBaseC1Ev+0x2d8>)
 80063ae:	f504 5380 	add.w	r3, r4, #4096	; 0x1000
 80063b2:	e9c3 24f5 	strd	r2, r4, [r3, #980]	; 0x3d4
 80063b6:	4a80      	ldr	r2, [pc, #512]	; (80065b8 <_ZN36Measurement_Accurate_DisplayViewBaseC1Ev+0x2dc>)
    touchgfx::CanvasWidgetRenderer::setupBuffer(canvasBuffer, CANVAS_BUFFER_SIZE);
 80063b8:	f44f 6161 	mov.w	r1, #3600	; 0xe10
 80063bc:	e9c3 25f7 	strd	r2, r5, [r3, #988]	; 0x3dc
 80063c0:	f204 50c4 	addw	r0, r4, #1476	; 0x5c4
 80063c4:	f00d faa8 	bl	8013918 <_ZN8touchgfx20CanvasWidgetRenderer11setupBufferEPhj>
    __background.setPosition(0, 0, 240, 320);
 80063c8:	f44f 73a0 	mov.w	r3, #320	; 0x140
 80063cc:	462a      	mov	r2, r5
 80063ce:	4648      	mov	r0, r9
 80063d0:	9300      	str	r3, [sp, #0]
 80063d2:	4629      	mov	r1, r5
 80063d4:	23f0      	movs	r3, #240	; 0xf0
 80063d6:	f7fc f9d3 	bl	8002780 <_ZN8touchgfx8Drawable11setPositionEssss>
 80063da:	1d26      	adds	r6, r4, #4
        color = newColor;
 80063dc:	f04f 437f 	mov.w	r3, #4278190080	; 0xff000000
 80063e0:	66a3      	str	r3, [r4, #104]	; 0x68
 80063e2:	4649      	mov	r1, r9
 80063e4:	4630      	mov	r0, r6
 80063e6:	f009 fd0b 	bl	800fe00 <_ZN8touchgfx9Container3addERNS_8DrawableE>
    image1.setXY(0, 0);
 80063ea:	462a      	mov	r2, r5
 80063ec:	4640      	mov	r0, r8
 80063ee:	4629      	mov	r1, r5
 80063f0:	f7fc f9b9 	bl	8002766 <_ZN8touchgfx8Drawable5setXYEss>
 80063f4:	2309      	movs	r3, #9
    image1.setBitmap(touchgfx::Bitmap(BITMAP_BACKGROUND_2_RESIZED_4_ID));
 80063f6:	4640      	mov	r0, r8
 80063f8:	a90a      	add	r1, sp, #40	; 0x28
 80063fa:	f8ad 3028 	strh.w	r3, [sp, #40]	; 0x28
 80063fe:	f00c fa8e 	bl	801291e <_ZN8touchgfx5Image9setBitmapERKNS_6BitmapE>
 8006402:	4641      	mov	r1, r8
 8006404:	4630      	mov	r0, r6
 8006406:	f009 fcfb 	bl	800fe00 <_ZN8touchgfx9Container3addERNS_8DrawableE>
    buttonWithLabel3.setXY(33, 257);
 800640a:	ee18 0a10 	vmov	r0, s16
 800640e:	f240 1201 	movw	r2, #257	; 0x101
 8006412:	2121      	movs	r1, #33	; 0x21
 8006414:	f7fc f9a7 	bl	8002766 <_ZN8touchgfx8Drawable5setXYEss>
 8006418:	2303      	movs	r3, #3
    buttonWithLabel3.setBitmaps(touchgfx::Bitmap(BITMAP_ALTERNATE_THEME_IMAGES_WIDGETS_BUTTON_REGULAR_HEIGHT_50_SMALL_ROUND_PRESSED_ID), touchgfx::Bitmap(BITMAP_ALTERNATE_THEME_IMAGES_WIDGETS_BUTTON_REGULAR_HEIGHT_50_SMALL_ROUND_NORMAL_ID));
 800641a:	aa0a      	add	r2, sp, #40	; 0x28
 800641c:	a909      	add	r1, sp, #36	; 0x24
 800641e:	ee18 0a10 	vmov	r0, s16
 8006422:	f8ad 3024 	strh.w	r3, [sp, #36]	; 0x24
 8006426:	2302      	movs	r3, #2
 8006428:	f8ad 3028 	strh.w	r3, [sp, #40]	; 0x28
 800642c:	f00c f881 	bl	8012532 <_ZN8touchgfx6Button10setBitmapsERKNS_6BitmapES3_>
 8006430:	2321      	movs	r3, #33	; 0x21
        updateTextPosition();
 8006432:	ee18 0a10 	vmov	r0, s16
 8006436:	f8a4 30d0 	strh.w	r3, [r4, #208]	; 0xd0
 800643a:	f7fc f9e9 	bl	8002810 <_ZN8touchgfx15ButtonWithLabel18updateTextPositionEv>
    buttonWithLabel3.setAction(buttonCallback);
 800643e:	f504 539e 	add.w	r3, r4, #5056	; 0x13c0
 8006442:	3314      	adds	r3, #20
        color = col;
 8006444:	f04f 39ff 	mov.w	r9, #4294967295
 8006448:	f8c4 30c0 	str.w	r3, [r4, #192]	; 0xc0
 800644c:	ee18 1a10 	vmov	r1, s16
 8006450:	4630      	mov	r0, r6
        colorPressed = col;
 8006452:	e9c4 9935 	strd	r9, r9, [r4, #212]	; 0xd4
 8006456:	f009 fcd3 	bl	800fe00 <_ZN8touchgfx9Container3addERNS_8DrawableE>
 800645a:	f10d 0810 	add.w	r8, sp, #16
    textArea3.setXY(23, 60);
 800645e:	223c      	movs	r2, #60	; 0x3c
 8006460:	ee18 0a90 	vmov	r0, s17
 8006464:	2117      	movs	r1, #23
 8006466:	f7fc f97e 	bl	8002766 <_ZN8touchgfx8Drawable5setXYEss>
 800646a:	ee18 1a90 	vmov	r1, s17
 800646e:	4640      	mov	r0, r8
        color = newColor;
 8006470:	f8c4 9110 	str.w	r9, [r4, #272]	; 0x110
        linespace = space;
 8006474:	f8a4 5114 	strh.w	r5, [r4, #276]	; 0x114
        boundingArea = calculateBoundingArea();
 8006478:	f00b fbdc 	bl	8011c34 <_ZNK8touchgfx8TextArea21calculateBoundingAreaEv>
 800647c:	e898 0007 	ldmia.w	r8, {r0, r1, r2}
 8006480:	f504 738e 	add.w	r3, r4, #284	; 0x11c
 8006484:	e883 0007 	stmia.w	r3, {r0, r1, r2}
        : typedTextId(id)
 8006488:	4b4c      	ldr	r3, [pc, #304]	; (80065bc <_ZN36Measurement_Accurate_DisplayViewBaseC1Ev+0x2e0>)
 800648a:	930a      	str	r3, [sp, #40]	; 0x28
    textArea3.setTypedText(touchgfx::TypedText(T___SINGLEUSE_ZR32));
 800648c:	ee18 0a90 	vmov	r0, s17
 8006490:	2322      	movs	r3, #34	; 0x22
 8006492:	a90a      	add	r1, sp, #40	; 0x28
 8006494:	f8ad 302c 	strh.w	r3, [sp, #44]	; 0x2c
 8006498:	f00b fe66 	bl	8012168 <_ZN8touchgfx8TextArea12setTypedTextERKNS_9TypedTextE>
 800649c:	ee18 1a90 	vmov	r1, s17
 80064a0:	4630      	mov	r0, r6
 80064a2:	f009 fcad 	bl	800fe00 <_ZN8touchgfx9Container3addERNS_8DrawableE>
    line1.setPosition(0, 50, 240, 10);
 80064a6:	230a      	movs	r3, #10
 80064a8:	9300      	str	r3, [sp, #0]
 80064aa:	2232      	movs	r2, #50	; 0x32
 80064ac:	23f0      	movs	r3, #240	; 0xf0
 80064ae:	4629      	mov	r1, r5
 80064b0:	4638      	mov	r0, r7
 80064b2:	f7fc f965 	bl	8002780 <_ZN8touchgfx8Drawable11setPositionEssss>
 80064b6:	9b03      	ldr	r3, [sp, #12]
 80064b8:	f8c4 3150 	str.w	r3, [r4, #336]	; 0x150
        setStart(CWRUtil::toQ5<T>(x), CWRUtil::toQ5<T>(y));
 80064bc:	22a0      	movs	r2, #160	; 0xa0
 80064be:	4611      	mov	r1, r2
 80064c0:	4638      	mov	r0, r7
 80064c2:	f8c4 91a4 	str.w	r9, [r4, #420]	; 0x1a4
        color565 = LCD16bpp::getNativeColor(painterColor);
 80064c6:	f8a4 91a8 	strh.w	r9, [r4, #424]	; 0x1a8
 80064ca:	f00b fa07 	bl	80118dc <_ZN8touchgfx4Line8setStartENS_7CWRUtil2Q5ES2_>
        setEnd(CWRUtil::toQ5<T>(x), CWRUtil::toQ5<T>(y));
 80064ce:	22a0      	movs	r2, #160	; 0xa0
 80064d0:	f44f 51eb 	mov.w	r1, #7520	; 0x1d60
 80064d4:	4638      	mov	r0, r7
 80064d6:	f00b fa0c 	bl	80118f2 <_ZN8touchgfx4Line6setEndENS_7CWRUtil2Q5ES2_>
        if (lineWidthQ5 == widthQ5)
 80064da:	f8d4 3164 	ldr.w	r3, [r4, #356]	; 0x164
 80064de:	2b20      	cmp	r3, #32
 80064e0:	d005      	beq.n	80064ee <_ZN36Measurement_Accurate_DisplayViewBaseC1Ev+0x212>
        lineWidthQ5 = widthQ5;
 80064e2:	2320      	movs	r3, #32
 80064e4:	f8c4 3164 	str.w	r3, [r4, #356]	; 0x164
        updateCachedShape();
 80064e8:	4638      	mov	r0, r7
 80064ea:	f00b f901 	bl	80116f0 <_ZN8touchgfx4Line17updateCachedShapeEv>
    line1.setLineEndingStyle(touchgfx::Line::ROUND_CAP_ENDING);
 80064ee:	4638      	mov	r0, r7
 80064f0:	2101      	movs	r1, #1
 80064f2:	f00b fa09 	bl	8011908 <_ZN8touchgfx4Line18setLineEndingStyleENS0_17LINE_ENDING_STYLEE>
 80064f6:	4639      	mov	r1, r7
 80064f8:	4630      	mov	r0, r6
 80064fa:	f009 fc81 	bl	800fe00 <_ZN8touchgfx9Container3addERNS_8DrawableE>
        linespace = space;
 80064fe:	2500      	movs	r5, #0
    textArea2.setXY(69, 35);
 8006500:	2223      	movs	r2, #35	; 0x23
 8006502:	4658      	mov	r0, fp
        color = newColor;
 8006504:	f04f 39ff 	mov.w	r9, #4294967295
 8006508:	2145      	movs	r1, #69	; 0x45
 800650a:	f7fc f92c 	bl	8002766 <_ZN8touchgfx8Drawable5setXYEss>
        boundingArea = calculateBoundingArea();
 800650e:	4659      	mov	r1, fp
 8006510:	4640      	mov	r0, r8
        color = newColor;
 8006512:	f8c4 91dc 	str.w	r9, [r4, #476]	; 0x1dc
        linespace = space;
 8006516:	f8a4 51e0 	strh.w	r5, [r4, #480]	; 0x1e0
        boundingArea = calculateBoundingArea();
 800651a:	f00b fb8b 	bl	8011c34 <_ZNK8touchgfx8TextArea21calculateBoundingAreaEv>
 800651e:	e898 0007 	ldmia.w	r8, {r0, r1, r2}
 8006522:	f10b 033c 	add.w	r3, fp, #60	; 0x3c
 8006526:	e883 0007 	stmia.w	r3, {r0, r1, r2}
 800652a:	4f24      	ldr	r7, [pc, #144]	; (80065bc <_ZN36Measurement_Accurate_DisplayViewBaseC1Ev+0x2e0>)
 800652c:	970a      	str	r7, [sp, #40]	; 0x28
 800652e:	2323      	movs	r3, #35	; 0x23
    textArea2.setTypedText(touchgfx::TypedText(T___SINGLEUSE_K7UP));
 8006530:	a90a      	add	r1, sp, #40	; 0x28
 8006532:	4658      	mov	r0, fp
 8006534:	f8ad 302c 	strh.w	r3, [sp, #44]	; 0x2c
 8006538:	f00b fe16 	bl	8012168 <_ZN8touchgfx8TextArea12setTypedTextERKNS_9TypedTextE>
 800653c:	4659      	mov	r1, fp
 800653e:	4630      	mov	r0, r6
 8006540:	f009 fc5e 	bl	800fe00 <_ZN8touchgfx9Container3addERNS_8DrawableE>
    textArea1.setXY(54, 12);
 8006544:	220c      	movs	r2, #12
 8006546:	4650      	mov	r0, sl
 8006548:	2136      	movs	r1, #54	; 0x36
 800654a:	f7fc f90c 	bl	8002766 <_ZN8touchgfx8Drawable5setXYEss>
 800654e:	4651      	mov	r1, sl
 8006550:	4640      	mov	r0, r8
        color = newColor;
 8006552:	f8c4 9224 	str.w	r9, [r4, #548]	; 0x224
        linespace = space;
 8006556:	f8a4 5228 	strh.w	r5, [r4, #552]	; 0x228
        boundingArea = calculateBoundingArea();
 800655a:	f00b fb6b 	bl	8011c34 <_ZNK8touchgfx8TextArea21calculateBoundingAreaEv>
 800655e:	e898 0007 	ldmia.w	r8, {r0, r1, r2}
 8006562:	f10a 033c 	add.w	r3, sl, #60	; 0x3c
 8006566:	e883 0007 	stmia.w	r3, {r0, r1, r2}
 800656a:	2324      	movs	r3, #36	; 0x24
    textArea1.setTypedText(touchgfx::TypedText(T___SINGLEUSE_0GAY));
 800656c:	a90a      	add	r1, sp, #40	; 0x28
 800656e:	4650      	mov	r0, sl
 8006570:	f8ad 302c 	strh.w	r3, [sp, #44]	; 0x2c
 8006574:	970a      	str	r7, [sp, #40]	; 0x28
 8006576:	f00b fdf7 	bl	8012168 <_ZN8touchgfx8TextArea12setTypedTextERKNS_9TypedTextE>
 800657a:	4651      	mov	r1, sl
 800657c:	4630      	mov	r0, r6
 800657e:	f009 fc3f 	bl	800fe00 <_ZN8touchgfx9Container3addERNS_8DrawableE>
    gauge_with_Values1.setXY(0, 78);
 8006582:	ee19 0a10 	vmov	r0, s18
 8006586:	224e      	movs	r2, #78	; 0x4e
 8006588:	4629      	mov	r1, r5
 800658a:	f7fc f8ec 	bl	8002766 <_ZN8touchgfx8Drawable5setXYEss>
 800658e:	4630      	mov	r0, r6
 8006590:	ee19 1a10 	vmov	r1, s18
 8006594:	f009 fc34 	bl	800fe00 <_ZN8touchgfx9Container3addERNS_8DrawableE>
}
 8006598:	4620      	mov	r0, r4
 800659a:	b00d      	add	sp, #52	; 0x34
 800659c:	ecbd 8b04 	vpop	{d8-d9}
 80065a0:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
 80065a4:	0802d664 	.word	0x0802d664
 80065a8:	0802e540 	.word	0x0802e540
 80065ac:	0802e708 	.word	0x0802e708
 80065b0:	0802e274 	.word	0x0802e274
 80065b4:	0802d64c 	.word	0x0802d64c
 80065b8:	08006287 	.word	0x08006287
 80065bc:	0802bbe8 	.word	0x0802bbe8

080065c0 <_ZN8touchgfx8CallbackI38Measurement_Accurate_Display_2ViewBaseRKNS_14AbstractButtonEvvED1Ev>:
struct Callback<dest_type, T1, void, void> : public GenericCallback<T1>
 80065c0:	4770      	bx	lr

080065c2 <_ZN8touchgfx8CallbackI38Measurement_Accurate_Display_2ViewBaseRKNS_14AbstractButtonEvvE7executeES4_>:
    virtual void execute(T1 t1)
 80065c2:	b430      	push	{r4, r5}
        (pobject->*pmemfun)(t1);
 80065c4:	68c2      	ldr	r2, [r0, #12]
 80065c6:	6844      	ldr	r4, [r0, #4]
 80065c8:	1055      	asrs	r5, r2, #1
    virtual void execute(T1 t1)
 80065ca:	4603      	mov	r3, r0
        (pobject->*pmemfun)(t1);
 80065cc:	eb04 0062 	add.w	r0, r4, r2, asr #1
 80065d0:	07d2      	lsls	r2, r2, #31
 80065d2:	bf48      	it	mi
 80065d4:	5962      	ldrmi	r2, [r4, r5]
 80065d6:	689b      	ldr	r3, [r3, #8]
    }
 80065d8:	bc30      	pop	{r4, r5}
        (pobject->*pmemfun)(t1);
 80065da:	bf48      	it	mi
 80065dc:	58d3      	ldrmi	r3, [r2, r3]
 80065de:	4718      	bx	r3

080065e0 <_ZNK8touchgfx8CallbackI38Measurement_Accurate_Display_2ViewBaseRKNS_14AbstractButtonEvvE7isValidEv>:
        return (pobject != 0) && (pmemfun != 0);
 80065e0:	6843      	ldr	r3, [r0, #4]
 80065e2:	b12b      	cbz	r3, 80065f0 <_ZNK8touchgfx8CallbackI38Measurement_Accurate_Display_2ViewBaseRKNS_14AbstractButtonEvvE7isValidEv+0x10>
 80065e4:	6883      	ldr	r3, [r0, #8]
 80065e6:	b92b      	cbnz	r3, 80065f4 <_ZNK8touchgfx8CallbackI38Measurement_Accurate_Display_2ViewBaseRKNS_14AbstractButtonEvvE7isValidEv+0x14>
 80065e8:	68c0      	ldr	r0, [r0, #12]
 80065ea:	f000 0001 	and.w	r0, r0, #1
 80065ee:	4770      	bx	lr
 80065f0:	4618      	mov	r0, r3
 80065f2:	4770      	bx	lr
 80065f4:	2001      	movs	r0, #1
    }
 80065f6:	4770      	bx	lr

080065f8 <_ZN8touchgfx8CallbackI38Measurement_Accurate_Display_2ViewBaseRKNS_14AbstractButtonEvvED0Ev>:
struct Callback<dest_type, T1, void, void> : public GenericCallback<T1>
 80065f8:	b510      	push	{r4, lr}
 80065fa:	2110      	movs	r1, #16
 80065fc:	4604      	mov	r4, r0
 80065fe:	f022 ff0e 	bl	802941e <_ZdlPvj>
 8006602:	4620      	mov	r0, r4
 8006604:	bd10      	pop	{r4, pc}

08006606 <_ZN38Measurement_Accurate_Display_2ViewBase11setupScreenEv>:
    touchgfx::CanvasWidgetRenderer::resetBuffer();
}

void Measurement_Accurate_Display_2ViewBase::setupScreen()
{
    gauge_with_Values1.initialize();
 8006606:	f500 700f 	add.w	r0, r0, #572	; 0x23c
 800660a:	f001 bef7 	b.w	80083fc <_ZN17Gauge_with_Values10initializeEv>

0800660e <_ZN38Measurement_Accurate_Display_2ViewBase21buttonCallbackHandlerERKN8touchgfx14AbstractButtonE>:
}

void Measurement_Accurate_Display_2ViewBase::buttonCallbackHandler(const touchgfx::AbstractButton& src)
{
    if (&src == &buttonWithLabel3)
 800660e:	3098      	adds	r0, #152	; 0x98
 8006610:	4288      	cmp	r0, r1
{
 8006612:	b508      	push	{r3, lr}
    if (&src == &buttonWithLabel3)
 8006614:	d105      	bne.n	8006622 <_ZN38Measurement_Accurate_Display_2ViewBase21buttonCallbackHandlerERKN8touchgfx14AbstractButtonE+0x14>
    virtual ~Measurement_Accurate_Display_2ViewBase();
    virtual void setupScreen();

protected:
    FrontendApplication& application() {
        return *static_cast<FrontendApplication*>(touchgfx::Application::getInstance());
 8006616:	f00e fe8b 	bl	8015330 <_ZN8touchgfx11Application11getInstanceEv>
        //Interaction1
        //When buttonWithLabel3 clicked change screen to Measurement_Accurate
        //Go to Measurement_Accurate with screen transition towards West
        application().gotoMeasurement_AccurateScreenWipeTransitionWest();
    }
}
 800661a:	e8bd 4008 	ldmia.w	sp!, {r3, lr}
        application().gotoMeasurement_AccurateScreenWipeTransitionWest();
 800661e:	f7fd ba19 	b.w	8003a54 <_ZN23FrontendApplicationBase48gotoMeasurement_AccurateScreenWipeTransitionWestEv>
}
 8006622:	bd08      	pop	{r3, pc}

08006624 <_ZN38Measurement_Accurate_Display_2ViewBaseD1Ev>:
Measurement_Accurate_Display_2ViewBase::~Measurement_Accurate_Display_2ViewBase()
 8006624:	b510      	push	{r4, lr}
 8006626:	4b07      	ldr	r3, [pc, #28]	; (8006644 <_ZN38Measurement_Accurate_Display_2ViewBaseD1Ev+0x20>)
 8006628:	6003      	str	r3, [r0, #0]
 800662a:	4604      	mov	r4, r0
    touchgfx::CanvasWidgetRenderer::resetBuffer();
 800662c:	f00d f97e 	bl	801392c <_ZN8touchgfx20CanvasWidgetRenderer11resetBufferEv>
 8006630:	4b05      	ldr	r3, [pc, #20]	; (8006648 <_ZN38Measurement_Accurate_Display_2ViewBaseD1Ev+0x24>)
 8006632:	f8c4 323c 	str.w	r3, [r4, #572]	; 0x23c
 8006636:	f504 700f 	add.w	r0, r4, #572	; 0x23c
 800663a:	f7fe fc61 	bl	8004f00 <_ZN21Gauge_with_ValuesBaseD1Ev>
}
 800663e:	4620      	mov	r0, r4
 8006640:	bd10      	pop	{r4, pc}
 8006642:	bf00      	nop
 8006644:	0802d6b0 	.word	0x0802d6b0
 8006648:	0802dbbc 	.word	0x0802dbbc

0800664c <_ZN38Measurement_Accurate_Display_2ViewBaseD0Ev>:
Measurement_Accurate_Display_2ViewBase::~Measurement_Accurate_Display_2ViewBase()
 800664c:	b510      	push	{r4, lr}
 800664e:	4604      	mov	r4, r0
}
 8006650:	f7ff ffe8 	bl	8006624 <_ZN38Measurement_Accurate_Display_2ViewBaseD1Ev>
 8006654:	4620      	mov	r0, r4
 8006656:	f241 31e4 	movw	r1, #5092	; 0x13e4
 800665a:	f022 fee0 	bl	802941e <_ZdlPvj>
 800665e:	4620      	mov	r0, r4
 8006660:	bd10      	pop	{r4, pc}
	...

08006664 <_ZN38Measurement_Accurate_Display_2ViewBaseC1Ev>:
Measurement_Accurate_Display_2ViewBase::Measurement_Accurate_Display_2ViewBase() :
 8006664:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 8006668:	ed2d 8b04 	vpush	{d8-d9}
 800666c:	4604      	mov	r4, r0
 800666e:	b08d      	sub	sp, #52	; 0x34
    buttonCallback(this, &Measurement_Accurate_Display_2ViewBase::buttonCallbackHandler)
 8006670:	46a1      	mov	r9, r4
 8006672:	2500      	movs	r5, #0
 8006674:	f010 fadc 	bl	8016c30 <_ZN8touchgfx6ScreenC1Ev>
 8006678:	4bac      	ldr	r3, [pc, #688]	; (800692c <_ZN38Measurement_Accurate_Display_2ViewBaseC1Ev+0x2c8>)
 800667a:	63e5      	str	r5, [r4, #60]	; 0x3c
 800667c:	f849 3b40 	str.w	r3, [r9], #64
        : Widget(), alpha(255), color(0)
 8006680:	2226      	movs	r2, #38	; 0x26
 8006682:	4629      	mov	r1, r5
 8006684:	4648      	mov	r0, r9
 8006686:	f023 fee2 	bl	802a44e <memset>
 800668a:	4648      	mov	r0, r9
 800668c:	f7fc f88c 	bl	80027a8 <_ZN8touchgfx6WidgetC1Ev>
 8006690:	f104 086c 	add.w	r8, r4, #108	; 0x6c
 8006694:	26ff      	movs	r6, #255	; 0xff
 8006696:	4ba6      	ldr	r3, [pc, #664]	; (8006930 <_ZN38Measurement_Accurate_Display_2ViewBaseC1Ev+0x2cc>)
 8006698:	6423      	str	r3, [r4, #64]	; 0x40
        : Widget(), bitmap(bmp), alpha(255)
 800669a:	2226      	movs	r2, #38	; 0x26
 800669c:	f64f 73ff 	movw	r3, #65535	; 0xffff
 80066a0:	4629      	mov	r1, r5
 80066a2:	f884 6066 	strb.w	r6, [r4, #102]	; 0x66
 80066a6:	4640      	mov	r0, r8
 80066a8:	66a5      	str	r5, [r4, #104]	; 0x68
 80066aa:	f8ad 3028 	strh.w	r3, [sp, #40]	; 0x28
 80066ae:	f023 fece 	bl	802a44e <memset>
 80066b2:	4640      	mov	r0, r8
 80066b4:	f7fc f878 	bl	80027a8 <_ZN8touchgfx6WidgetC1Ev>
 80066b8:	4b9e      	ldr	r3, [pc, #632]	; (8006934 <_ZN38Measurement_Accurate_Display_2ViewBaseC1Ev+0x2d0>)
 80066ba:	66e3      	str	r3, [r4, #108]	; 0x6c
 80066bc:	f8bd 3028 	ldrh.w	r3, [sp, #40]	; 0x28
 80066c0:	f8a4 3092 	strh.w	r3, [r4, #146]	; 0x92
        Image::setBitmap(bmp);
 80066c4:	a90a      	add	r1, sp, #40	; 0x28
 80066c6:	4640      	mov	r0, r8
        : Widget(), bitmap(bmp), alpha(255)
 80066c8:	f884 6094 	strb.w	r6, [r4, #148]	; 0x94
        Image::setBitmap(bmp);
 80066cc:	f00c f927 	bl	801291e <_ZN8touchgfx5Image9setBitmapERKNS_6BitmapE>
 80066d0:	f104 0398 	add.w	r3, r4, #152	; 0x98
 80066d4:	4618      	mov	r0, r3
 80066d6:	ee08 3a10 	vmov	s16, r3
 80066da:	f00c fa61 	bl	8012ba0 <_ZN8touchgfx15ButtonWithLabelC1Ev>
 80066de:	f104 03e0 	add.w	r3, r4, #224	; 0xe0
 80066e2:	f504 7794 	add.w	r7, r4, #296	; 0x128
 80066e6:	4618      	mov	r0, r3
 80066e8:	ee08 3a90 	vmov	s17, r3
 80066ec:	f7fc f86e 	bl	80027cc <_ZN8touchgfx8TextAreaC1Ev>
 80066f0:	4638      	mov	r0, r7
 80066f2:	f00a ffdd 	bl	80116b0 <_ZN8touchgfx4LineC1Ev>
 80066f6:	f504 73cc 	add.w	r3, r4, #408	; 0x198
        : AbstractPainterRGB565(), AbstractPainterColor(color)
 80066fa:	4618      	mov	r0, r3
 80066fc:	9303      	str	r3, [sp, #12]
 80066fe:	f7fa fca3 	bl	8001048 <_ZN8touchgfx21AbstractPainterRGB565C1Ev>
 8006702:	4b8d      	ldr	r3, [pc, #564]	; (8006938 <_ZN38Measurement_Accurate_Display_2ViewBaseC1Ev+0x2d4>)
 8006704:	f8c4 3198 	str.w	r3, [r4, #408]	; 0x198
 8006708:	f504 7bd6 	add.w	fp, r4, #428	; 0x1ac
 800670c:	3324      	adds	r3, #36	; 0x24
 800670e:	f8c4 31a0 	str.w	r3, [r4, #416]	; 0x1a0
 8006712:	f8c4 51a4 	str.w	r5, [r4, #420]	; 0x1a4
 8006716:	4658      	mov	r0, fp
 8006718:	f504 7afa 	add.w	sl, r4, #500	; 0x1f4
 800671c:	f7fc f856 	bl	80027cc <_ZN8touchgfx8TextAreaC1Ev>
 8006720:	4650      	mov	r0, sl
 8006722:	f7fc f853 	bl	80027cc <_ZN8touchgfx8TextAreaC1Ev>
 8006726:	f504 730f 	add.w	r3, r4, #572	; 0x23c
 800672a:	4618      	mov	r0, r3
 800672c:	ee09 3a10 	vmov	s18, r3
 8006730:	f001 fe5a 	bl	80083e8 <_ZN17Gauge_with_ValuesC1Ev>
        : pobject(pObject), pmemfun(pmemfun_1)
 8006734:	4a81      	ldr	r2, [pc, #516]	; (800693c <_ZN38Measurement_Accurate_Display_2ViewBaseC1Ev+0x2d8>)
 8006736:	f504 5380 	add.w	r3, r4, #4096	; 0x1000
 800673a:	e9c3 24f5 	strd	r2, r4, [r3, #980]	; 0x3d4
 800673e:	4a80      	ldr	r2, [pc, #512]	; (8006940 <_ZN38Measurement_Accurate_Display_2ViewBaseC1Ev+0x2dc>)
    touchgfx::CanvasWidgetRenderer::setupBuffer(canvasBuffer, CANVAS_BUFFER_SIZE);
 8006740:	f44f 6161 	mov.w	r1, #3600	; 0xe10
 8006744:	e9c3 25f7 	strd	r2, r5, [r3, #988]	; 0x3dc
 8006748:	f204 50c4 	addw	r0, r4, #1476	; 0x5c4
 800674c:	f00d f8e4 	bl	8013918 <_ZN8touchgfx20CanvasWidgetRenderer11setupBufferEPhj>
    __background.setPosition(0, 0, 240, 320);
 8006750:	f44f 73a0 	mov.w	r3, #320	; 0x140
 8006754:	462a      	mov	r2, r5
 8006756:	4648      	mov	r0, r9
 8006758:	9300      	str	r3, [sp, #0]
 800675a:	4629      	mov	r1, r5
 800675c:	23f0      	movs	r3, #240	; 0xf0
 800675e:	f7fc f80f 	bl	8002780 <_ZN8touchgfx8Drawable11setPositionEssss>
 8006762:	1d26      	adds	r6, r4, #4
        color = newColor;
 8006764:	f04f 437f 	mov.w	r3, #4278190080	; 0xff000000
 8006768:	66a3      	str	r3, [r4, #104]	; 0x68
 800676a:	4649      	mov	r1, r9
 800676c:	4630      	mov	r0, r6
 800676e:	f009 fb47 	bl	800fe00 <_ZN8touchgfx9Container3addERNS_8DrawableE>
    image1.setXY(0, 0);
 8006772:	462a      	mov	r2, r5
 8006774:	4640      	mov	r0, r8
 8006776:	4629      	mov	r1, r5
 8006778:	f7fb fff5 	bl	8002766 <_ZN8touchgfx8Drawable5setXYEss>
 800677c:	2309      	movs	r3, #9
    image1.setBitmap(touchgfx::Bitmap(BITMAP_BACKGROUND_2_RESIZED_4_ID));
 800677e:	4640      	mov	r0, r8
 8006780:	a90a      	add	r1, sp, #40	; 0x28
 8006782:	f8ad 3028 	strh.w	r3, [sp, #40]	; 0x28
 8006786:	f00c f8ca 	bl	801291e <_ZN8touchgfx5Image9setBitmapERKNS_6BitmapE>
 800678a:	4641      	mov	r1, r8
 800678c:	4630      	mov	r0, r6
 800678e:	f009 fb37 	bl	800fe00 <_ZN8touchgfx9Container3addERNS_8DrawableE>
    buttonWithLabel3.setXY(33, 257);
 8006792:	ee18 0a10 	vmov	r0, s16
 8006796:	f240 1201 	movw	r2, #257	; 0x101
 800679a:	2121      	movs	r1, #33	; 0x21
 800679c:	f7fb ffe3 	bl	8002766 <_ZN8touchgfx8Drawable5setXYEss>
 80067a0:	2303      	movs	r3, #3
    buttonWithLabel3.setBitmaps(touchgfx::Bitmap(BITMAP_ALTERNATE_THEME_IMAGES_WIDGETS_BUTTON_REGULAR_HEIGHT_50_SMALL_ROUND_PRESSED_ID), touchgfx::Bitmap(BITMAP_ALTERNATE_THEME_IMAGES_WIDGETS_BUTTON_REGULAR_HEIGHT_50_SMALL_ROUND_NORMAL_ID));
 80067a2:	aa0a      	add	r2, sp, #40	; 0x28
 80067a4:	a909      	add	r1, sp, #36	; 0x24
 80067a6:	ee18 0a10 	vmov	r0, s16
 80067aa:	f8ad 3024 	strh.w	r3, [sp, #36]	; 0x24
 80067ae:	2302      	movs	r3, #2
 80067b0:	f8ad 3028 	strh.w	r3, [sp, #40]	; 0x28
 80067b4:	f00b febd 	bl	8012532 <_ZN8touchgfx6Button10setBitmapsERKNS_6BitmapES3_>
class TypedText
 80067b8:	231d      	movs	r3, #29
        updateTextPosition();
 80067ba:	ee18 0a10 	vmov	r0, s16
 80067be:	f8a4 30d0 	strh.w	r3, [r4, #208]	; 0xd0
 80067c2:	f7fc f825 	bl	8002810 <_ZN8touchgfx15ButtonWithLabel18updateTextPositionEv>
    buttonWithLabel3.setAction(buttonCallback);
 80067c6:	f504 539e 	add.w	r3, r4, #5056	; 0x13c0
 80067ca:	3314      	adds	r3, #20
        color = col;
 80067cc:	f04f 39ff 	mov.w	r9, #4294967295
 80067d0:	f8c4 30c0 	str.w	r3, [r4, #192]	; 0xc0
 80067d4:	ee18 1a10 	vmov	r1, s16
 80067d8:	4630      	mov	r0, r6
        colorPressed = col;
 80067da:	e9c4 9935 	strd	r9, r9, [r4, #212]	; 0xd4
 80067de:	f009 fb0f 	bl	800fe00 <_ZN8touchgfx9Container3addERNS_8DrawableE>
 80067e2:	f10d 0810 	add.w	r8, sp, #16
    textArea3.setXY(23, 60);
 80067e6:	223c      	movs	r2, #60	; 0x3c
 80067e8:	ee18 0a90 	vmov	r0, s17
 80067ec:	2117      	movs	r1, #23
 80067ee:	f7fb ffba 	bl	8002766 <_ZN8touchgfx8Drawable5setXYEss>
 80067f2:	ee18 1a90 	vmov	r1, s17
 80067f6:	4640      	mov	r0, r8
        color = newColor;
 80067f8:	f8c4 9110 	str.w	r9, [r4, #272]	; 0x110
        linespace = space;
 80067fc:	f8a4 5114 	strh.w	r5, [r4, #276]	; 0x114
        boundingArea = calculateBoundingArea();
 8006800:	f00b fa18 	bl	8011c34 <_ZNK8touchgfx8TextArea21calculateBoundingAreaEv>
 8006804:	e898 0007 	ldmia.w	r8, {r0, r1, r2}
 8006808:	f504 738e 	add.w	r3, r4, #284	; 0x11c
 800680c:	e883 0007 	stmia.w	r3, {r0, r1, r2}
        : typedTextId(id)
 8006810:	4b4c      	ldr	r3, [pc, #304]	; (8006944 <_ZN38Measurement_Accurate_Display_2ViewBaseC1Ev+0x2e0>)
 8006812:	930a      	str	r3, [sp, #40]	; 0x28
    textArea3.setTypedText(touchgfx::TypedText(T___SINGLEUSE_TF2A));
 8006814:	ee18 0a90 	vmov	r0, s17
 8006818:	231e      	movs	r3, #30
 800681a:	a90a      	add	r1, sp, #40	; 0x28
 800681c:	f8ad 302c 	strh.w	r3, [sp, #44]	; 0x2c
 8006820:	f00b fca2 	bl	8012168 <_ZN8touchgfx8TextArea12setTypedTextERKNS_9TypedTextE>
 8006824:	ee18 1a90 	vmov	r1, s17
 8006828:	4630      	mov	r0, r6
 800682a:	f009 fae9 	bl	800fe00 <_ZN8touchgfx9Container3addERNS_8DrawableE>
    line1.setPosition(0, 50, 240, 10);
 800682e:	230a      	movs	r3, #10
 8006830:	9300      	str	r3, [sp, #0]
 8006832:	2232      	movs	r2, #50	; 0x32
 8006834:	23f0      	movs	r3, #240	; 0xf0
 8006836:	4629      	mov	r1, r5
 8006838:	4638      	mov	r0, r7
 800683a:	f7fb ffa1 	bl	8002780 <_ZN8touchgfx8Drawable11setPositionEssss>
 800683e:	9b03      	ldr	r3, [sp, #12]
 8006840:	f8c4 3150 	str.w	r3, [r4, #336]	; 0x150
        setStart(CWRUtil::toQ5<T>(x), CWRUtil::toQ5<T>(y));
 8006844:	22a0      	movs	r2, #160	; 0xa0
 8006846:	4611      	mov	r1, r2
 8006848:	4638      	mov	r0, r7
 800684a:	f8c4 91a4 	str.w	r9, [r4, #420]	; 0x1a4
        color565 = LCD16bpp::getNativeColor(painterColor);
 800684e:	f8a4 91a8 	strh.w	r9, [r4, #424]	; 0x1a8
 8006852:	f00b f843 	bl	80118dc <_ZN8touchgfx4Line8setStartENS_7CWRUtil2Q5ES2_>
        setEnd(CWRUtil::toQ5<T>(x), CWRUtil::toQ5<T>(y));
 8006856:	22a0      	movs	r2, #160	; 0xa0
 8006858:	f44f 51eb 	mov.w	r1, #7520	; 0x1d60
 800685c:	4638      	mov	r0, r7
 800685e:	f00b f848 	bl	80118f2 <_ZN8touchgfx4Line6setEndENS_7CWRUtil2Q5ES2_>
        if (lineWidthQ5 == widthQ5)
 8006862:	f8d4 3164 	ldr.w	r3, [r4, #356]	; 0x164
 8006866:	2b20      	cmp	r3, #32
 8006868:	d005      	beq.n	8006876 <_ZN38Measurement_Accurate_Display_2ViewBaseC1Ev+0x212>
        lineWidthQ5 = widthQ5;
 800686a:	2320      	movs	r3, #32
 800686c:	f8c4 3164 	str.w	r3, [r4, #356]	; 0x164
        updateCachedShape();
 8006870:	4638      	mov	r0, r7
 8006872:	f00a ff3d 	bl	80116f0 <_ZN8touchgfx4Line17updateCachedShapeEv>
    line1.setLineEndingStyle(touchgfx::Line::ROUND_CAP_ENDING);
 8006876:	4638      	mov	r0, r7
 8006878:	2101      	movs	r1, #1
 800687a:	f00b f845 	bl	8011908 <_ZN8touchgfx4Line18setLineEndingStyleENS0_17LINE_ENDING_STYLEE>
 800687e:	4639      	mov	r1, r7
 8006880:	4630      	mov	r0, r6
 8006882:	f009 fabd 	bl	800fe00 <_ZN8touchgfx9Container3addERNS_8DrawableE>
        linespace = space;
 8006886:	2500      	movs	r5, #0
    textArea2.setXY(69, 35);
 8006888:	2223      	movs	r2, #35	; 0x23
 800688a:	4658      	mov	r0, fp
        color = newColor;
 800688c:	f04f 39ff 	mov.w	r9, #4294967295
 8006890:	2145      	movs	r1, #69	; 0x45
 8006892:	f7fb ff68 	bl	8002766 <_ZN8touchgfx8Drawable5setXYEss>
        boundingArea = calculateBoundingArea();
 8006896:	4659      	mov	r1, fp
 8006898:	4640      	mov	r0, r8
        color = newColor;
 800689a:	f8c4 91dc 	str.w	r9, [r4, #476]	; 0x1dc
        linespace = space;
 800689e:	f8a4 51e0 	strh.w	r5, [r4, #480]	; 0x1e0
        boundingArea = calculateBoundingArea();
 80068a2:	f00b f9c7 	bl	8011c34 <_ZNK8touchgfx8TextArea21calculateBoundingAreaEv>
 80068a6:	e898 0007 	ldmia.w	r8, {r0, r1, r2}
 80068aa:	f10b 033c 	add.w	r3, fp, #60	; 0x3c
 80068ae:	e883 0007 	stmia.w	r3, {r0, r1, r2}
 80068b2:	4f24      	ldr	r7, [pc, #144]	; (8006944 <_ZN38Measurement_Accurate_Display_2ViewBaseC1Ev+0x2e0>)
 80068b4:	970a      	str	r7, [sp, #40]	; 0x28
 80068b6:	231f      	movs	r3, #31
    textArea2.setTypedText(touchgfx::TypedText(T___SINGLEUSE_A08K));
 80068b8:	a90a      	add	r1, sp, #40	; 0x28
 80068ba:	4658      	mov	r0, fp
 80068bc:	f8ad 302c 	strh.w	r3, [sp, #44]	; 0x2c
 80068c0:	f00b fc52 	bl	8012168 <_ZN8touchgfx8TextArea12setTypedTextERKNS_9TypedTextE>
 80068c4:	4659      	mov	r1, fp
 80068c6:	4630      	mov	r0, r6
 80068c8:	f009 fa9a 	bl	800fe00 <_ZN8touchgfx9Container3addERNS_8DrawableE>
    textArea1.setXY(54, 12);
 80068cc:	220c      	movs	r2, #12
 80068ce:	4650      	mov	r0, sl
 80068d0:	2136      	movs	r1, #54	; 0x36
 80068d2:	f7fb ff48 	bl	8002766 <_ZN8touchgfx8Drawable5setXYEss>
 80068d6:	4651      	mov	r1, sl
 80068d8:	4640      	mov	r0, r8
        color = newColor;
 80068da:	f8c4 9224 	str.w	r9, [r4, #548]	; 0x224
        linespace = space;
 80068de:	f8a4 5228 	strh.w	r5, [r4, #552]	; 0x228
        boundingArea = calculateBoundingArea();
 80068e2:	f00b f9a7 	bl	8011c34 <_ZNK8touchgfx8TextArea21calculateBoundingAreaEv>
 80068e6:	e898 0007 	ldmia.w	r8, {r0, r1, r2}
 80068ea:	f10a 033c 	add.w	r3, sl, #60	; 0x3c
 80068ee:	e883 0007 	stmia.w	r3, {r0, r1, r2}
 80068f2:	2320      	movs	r3, #32
    textArea1.setTypedText(touchgfx::TypedText(T___SINGLEUSE_IJWA));
 80068f4:	a90a      	add	r1, sp, #40	; 0x28
 80068f6:	4650      	mov	r0, sl
 80068f8:	f8ad 302c 	strh.w	r3, [sp, #44]	; 0x2c
 80068fc:	970a      	str	r7, [sp, #40]	; 0x28
 80068fe:	f00b fc33 	bl	8012168 <_ZN8touchgfx8TextArea12setTypedTextERKNS_9TypedTextE>
 8006902:	4651      	mov	r1, sl
 8006904:	4630      	mov	r0, r6
 8006906:	f009 fa7b 	bl	800fe00 <_ZN8touchgfx9Container3addERNS_8DrawableE>
    gauge_with_Values1.setXY(0, 78);
 800690a:	ee19 0a10 	vmov	r0, s18
 800690e:	224e      	movs	r2, #78	; 0x4e
 8006910:	4629      	mov	r1, r5
 8006912:	f7fb ff28 	bl	8002766 <_ZN8touchgfx8Drawable5setXYEss>
 8006916:	4630      	mov	r0, r6
 8006918:	ee19 1a10 	vmov	r1, s18
 800691c:	f009 fa70 	bl	800fe00 <_ZN8touchgfx9Container3addERNS_8DrawableE>
}
 8006920:	4620      	mov	r0, r4
 8006922:	b00d      	add	sp, #52	; 0x34
 8006924:	ecbd 8b04 	vpop	{d8-d9}
 8006928:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
 800692c:	0802d6b0 	.word	0x0802d6b0
 8006930:	0802e540 	.word	0x0802e540
 8006934:	0802e708 	.word	0x0802e708
 8006938:	0802e274 	.word	0x0802e274
 800693c:	0802d698 	.word	0x0802d698
 8006940:	0800660f 	.word	0x0800660f
 8006944:	0802bbe8 	.word	0x0802bbe8

08006948 <_ZN26Measurement_SingleViewBase11setupScreenEv>:
}

void Measurement_SingleViewBase::setupScreen()
{

}
 8006948:	4770      	bx	lr

0800694a <_ZN8touchgfx8CallbackI26Measurement_SingleViewBaseRKNS_14AbstractButtonEvvED1Ev>:
struct Callback<dest_type, T1, void, void> : public GenericCallback<T1>
 800694a:	4770      	bx	lr

0800694c <_ZN8touchgfx8CallbackI26Measurement_SingleViewBaseRKNS_14AbstractButtonEvvE7executeES4_>:
    virtual void execute(T1 t1)
 800694c:	b430      	push	{r4, r5}
        (pobject->*pmemfun)(t1);
 800694e:	68c2      	ldr	r2, [r0, #12]
 8006950:	6844      	ldr	r4, [r0, #4]
 8006952:	1055      	asrs	r5, r2, #1
    virtual void execute(T1 t1)
 8006954:	4603      	mov	r3, r0
        (pobject->*pmemfun)(t1);
 8006956:	eb04 0062 	add.w	r0, r4, r2, asr #1
 800695a:	07d2      	lsls	r2, r2, #31
 800695c:	bf48      	it	mi
 800695e:	5962      	ldrmi	r2, [r4, r5]
 8006960:	689b      	ldr	r3, [r3, #8]
    }
 8006962:	bc30      	pop	{r4, r5}
        (pobject->*pmemfun)(t1);
 8006964:	bf48      	it	mi
 8006966:	58d3      	ldrmi	r3, [r2, r3]
 8006968:	4718      	bx	r3

0800696a <_ZNK8touchgfx8CallbackI26Measurement_SingleViewBaseRKNS_14AbstractButtonEvvE7isValidEv>:
        return (pobject != 0) && (pmemfun != 0);
 800696a:	6843      	ldr	r3, [r0, #4]
 800696c:	b12b      	cbz	r3, 800697a <_ZNK8touchgfx8CallbackI26Measurement_SingleViewBaseRKNS_14AbstractButtonEvvE7isValidEv+0x10>
 800696e:	6883      	ldr	r3, [r0, #8]
 8006970:	b92b      	cbnz	r3, 800697e <_ZNK8touchgfx8CallbackI26Measurement_SingleViewBaseRKNS_14AbstractButtonEvvE7isValidEv+0x14>
 8006972:	68c0      	ldr	r0, [r0, #12]
 8006974:	f000 0001 	and.w	r0, r0, #1
 8006978:	4770      	bx	lr
 800697a:	4618      	mov	r0, r3
 800697c:	4770      	bx	lr
 800697e:	2001      	movs	r0, #1
    }
 8006980:	4770      	bx	lr

08006982 <_ZN8touchgfx8CallbackI26Measurement_SingleViewBaseRKNS_14AbstractButtonEvvED0Ev>:
struct Callback<dest_type, T1, void, void> : public GenericCallback<T1>
 8006982:	b510      	push	{r4, lr}
 8006984:	2110      	movs	r1, #16
 8006986:	4604      	mov	r4, r0
 8006988:	f022 fd49 	bl	802941e <_ZdlPvj>
 800698c:	4620      	mov	r0, r4
 800698e:	bd10      	pop	{r4, pc}

08006990 <_ZN26Measurement_SingleViewBaseD1Ev>:
Measurement_SingleViewBase::~Measurement_SingleViewBase()
 8006990:	b510      	push	{r4, lr}
 8006992:	4b03      	ldr	r3, [pc, #12]	; (80069a0 <_ZN26Measurement_SingleViewBaseD1Ev+0x10>)
 8006994:	6003      	str	r3, [r0, #0]
 8006996:	4604      	mov	r4, r0
    touchgfx::CanvasWidgetRenderer::resetBuffer();
 8006998:	f00c ffc8 	bl	801392c <_ZN8touchgfx20CanvasWidgetRenderer11resetBufferEv>
}
 800699c:	4620      	mov	r0, r4
 800699e:	bd10      	pop	{r4, pc}
 80069a0:	0802d6fc 	.word	0x0802d6fc

080069a4 <_ZN26Measurement_SingleViewBaseD0Ev>:
Measurement_SingleViewBase::~Measurement_SingleViewBase()
 80069a4:	b507      	push	{r0, r1, r2, lr}
 80069a6:	4b07      	ldr	r3, [pc, #28]	; (80069c4 <_ZN26Measurement_SingleViewBaseD0Ev+0x20>)
 80069a8:	6003      	str	r3, [r0, #0]
 80069aa:	9001      	str	r0, [sp, #4]
    touchgfx::CanvasWidgetRenderer::resetBuffer();
 80069ac:	f00c ffbe 	bl	801392c <_ZN8touchgfx20CanvasWidgetRenderer11resetBufferEv>
}
 80069b0:	9801      	ldr	r0, [sp, #4]
 80069b2:	f44f 518a 	mov.w	r1, #4416	; 0x1140
 80069b6:	f022 fd32 	bl	802941e <_ZdlPvj>
 80069ba:	9801      	ldr	r0, [sp, #4]
 80069bc:	b003      	add	sp, #12
 80069be:	f85d fb04 	ldr.w	pc, [sp], #4
 80069c2:	bf00      	nop
 80069c4:	0802d6fc 	.word	0x0802d6fc

080069c8 <_ZN26Measurement_SingleViewBase21buttonCallbackHandlerERKN8touchgfx14AbstractButtonE>:

void Measurement_SingleViewBase::buttonCallbackHandler(const touchgfx::AbstractButton& src)
{
 80069c8:	b538      	push	{r3, r4, r5, lr}
    if (&src == &buttonWithLabel3)
 80069ca:	f500 7310 	add.w	r3, r0, #576	; 0x240
 80069ce:	4299      	cmp	r1, r3
{
 80069d0:	4604      	mov	r4, r0
 80069d2:	460d      	mov	r5, r1
    if (&src == &buttonWithLabel3)
 80069d4:	d103      	bne.n	80069de <_ZN26Measurement_SingleViewBase21buttonCallbackHandlerERKN8touchgfx14AbstractButtonE+0x16>
    virtual ~Measurement_SingleViewBase();
    virtual void setupScreen();

protected:
    FrontendApplication& application() {
        return *static_cast<FrontendApplication*>(touchgfx::Application::getInstance());
 80069d6:	f00e fcab 	bl	8015330 <_ZN8touchgfx11Application11getInstanceEv>
    {
        //Interaction1
        //When buttonWithLabel3 clicked change screen to Measurement
        //Go to Measurement with screen transition towards West
        application().gotoMeasurementScreenWipeTransitionWest();
 80069da:	f7fc ffeb 	bl	80039b4 <_ZN23FrontendApplicationBase39gotoMeasurementScreenWipeTransitionWestEv>
    }
    if (&src == &buttonWithLabel1)
 80069de:	f504 7334 	add.w	r3, r4, #720	; 0x2d0
 80069e2:	429d      	cmp	r5, r3
 80069e4:	d103      	bne.n	80069ee <_ZN26Measurement_SingleViewBase21buttonCallbackHandlerERKN8touchgfx14AbstractButtonE+0x26>
 80069e6:	f00e fca3 	bl	8015330 <_ZN8touchgfx11Application11getInstanceEv>
    {
        //Interaction2
        //When buttonWithLabel1 clicked change screen to Measurement_Single_Display_1P
        //Go to Measurement_Single_Display_1P with screen transition towards East
        application().gotoMeasurement_Single_Display_1PScreenWipeTransitionEast();
 80069ea:	f7fd f803 	bl	80039f4 <_ZN23FrontendApplicationBase57gotoMeasurement_Single_Display_1PScreenWipeTransitionEastEv>
    }
    if (&src == &buttonWithLabel2)
 80069ee:	f504 7422 	add.w	r4, r4, #648	; 0x288
 80069f2:	42a5      	cmp	r5, r4
 80069f4:	d105      	bne.n	8006a02 <_ZN26Measurement_SingleViewBase21buttonCallbackHandlerERKN8touchgfx14AbstractButtonE+0x3a>
 80069f6:	f00e fc9b 	bl	8015330 <_ZN8touchgfx11Application11getInstanceEv>
        //Interaction3
        //When buttonWithLabel2 clicked change screen to Measurement_Single_Display_3P
        //Go to Measurement_Single_Display_3P with screen transition towards East
        application().gotoMeasurement_Single_Display_3PScreenWipeTransitionEast();
    }
}
 80069fa:	e8bd 4038 	ldmia.w	sp!, {r3, r4, r5, lr}
        application().gotoMeasurement_Single_Display_3PScreenWipeTransitionEast();
 80069fe:	f7fd b809 	b.w	8003a14 <_ZN23FrontendApplicationBase57gotoMeasurement_Single_Display_3PScreenWipeTransitionEastEv>
}
 8006a02:	bd38      	pop	{r3, r4, r5, pc}

08006a04 <_ZN26Measurement_SingleViewBaseC1Ev>:
Measurement_SingleViewBase::Measurement_SingleViewBase() :
 8006a04:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 8006a08:	ed2d 8b06 	vpush	{d8-d10}
 8006a0c:	4604      	mov	r4, r0
 8006a0e:	b08d      	sub	sp, #52	; 0x34
    buttonCallback(this, &Measurement_SingleViewBase::buttonCallbackHandler)
 8006a10:	46a3      	mov	fp, r4
 8006a12:	2500      	movs	r5, #0
 8006a14:	f010 f90c 	bl	8016c30 <_ZN8touchgfx6ScreenC1Ev>
 8006a18:	4b66      	ldr	r3, [pc, #408]	; (8006bb4 <_ZN26Measurement_SingleViewBaseC1Ev+0x1b0>)
 8006a1a:	63e5      	str	r5, [r4, #60]	; 0x3c
 8006a1c:	f84b 3b40 	str.w	r3, [fp], #64
        : Widget(), alpha(255), color(0)
 8006a20:	2226      	movs	r2, #38	; 0x26
 8006a22:	4629      	mov	r1, r5
 8006a24:	4658      	mov	r0, fp
 8006a26:	f023 fd12 	bl	802a44e <memset>
 8006a2a:	4658      	mov	r0, fp
 8006a2c:	f7fb febc 	bl	80027a8 <_ZN8touchgfx6WidgetC1Ev>
 8006a30:	f104 0a6c 	add.w	sl, r4, #108	; 0x6c
 8006a34:	26ff      	movs	r6, #255	; 0xff
 8006a36:	4b60      	ldr	r3, [pc, #384]	; (8006bb8 <_ZN26Measurement_SingleViewBaseC1Ev+0x1b4>)
 8006a38:	6423      	str	r3, [r4, #64]	; 0x40
        : Widget(), bitmap(bmp), alpha(255)
 8006a3a:	2226      	movs	r2, #38	; 0x26
 8006a3c:	f64f 73ff 	movw	r3, #65535	; 0xffff
 8006a40:	4629      	mov	r1, r5
 8006a42:	f884 6066 	strb.w	r6, [r4, #102]	; 0x66
 8006a46:	4650      	mov	r0, sl
 8006a48:	66a5      	str	r5, [r4, #104]	; 0x68
 8006a4a:	f8ad 3028 	strh.w	r3, [sp, #40]	; 0x28
 8006a4e:	f023 fcfe 	bl	802a44e <memset>
 8006a52:	4650      	mov	r0, sl
 8006a54:	f7fb fea8 	bl	80027a8 <_ZN8touchgfx6WidgetC1Ev>
 8006a58:	4b58      	ldr	r3, [pc, #352]	; (8006bbc <_ZN26Measurement_SingleViewBaseC1Ev+0x1b8>)
 8006a5a:	66e3      	str	r3, [r4, #108]	; 0x6c
 8006a5c:	f8bd 3028 	ldrh.w	r3, [sp, #40]	; 0x28
 8006a60:	f8a4 3092 	strh.w	r3, [r4, #146]	; 0x92
        Image::setBitmap(bmp);
 8006a64:	a90a      	add	r1, sp, #40	; 0x28
 8006a66:	4650      	mov	r0, sl
 8006a68:	f104 0998 	add.w	r9, r4, #152	; 0x98
        : Widget(), bitmap(bmp), alpha(255)
 8006a6c:	f884 6094 	strb.w	r6, [r4, #148]	; 0x94
        Image::setBitmap(bmp);
 8006a70:	f00b ff55 	bl	801291e <_ZN8touchgfx5Image9setBitmapERKNS_6BitmapE>
        : TextArea()
 8006a74:	4648      	mov	r0, r9
 8006a76:	f7fb fea9 	bl	80027cc <_ZN8touchgfx8TextAreaC1Ev>
        : TextAreaWithWildcardBase(), wc1(0)
 8006a7a:	4b51      	ldr	r3, [pc, #324]	; (8006bc0 <_ZN26Measurement_SingleViewBaseC1Ev+0x1bc>)
 8006a7c:	f8c4 3098 	str.w	r3, [r4, #152]	; 0x98
 8006a80:	f104 03e4 	add.w	r3, r4, #228	; 0xe4
 8006a84:	4618      	mov	r0, r3
 8006a86:	f8c4 50e0 	str.w	r5, [r4, #224]	; 0xe0
 8006a8a:	f504 7796 	add.w	r7, r4, #300	; 0x12c
 8006a8e:	ee08 3a90 	vmov	s17, r3
 8006a92:	f7fb fe9b 	bl	80027cc <_ZN8touchgfx8TextAreaC1Ev>
 8006a96:	4638      	mov	r0, r7
 8006a98:	f00a fe0a 	bl	80116b0 <_ZN8touchgfx4LineC1Ev>
 8006a9c:	f504 73ce 	add.w	r3, r4, #412	; 0x19c
        : AbstractPainterRGB565(), AbstractPainterColor(color)
 8006aa0:	4618      	mov	r0, r3
 8006aa2:	9303      	str	r3, [sp, #12]
 8006aa4:	f7fa fad0 	bl	8001048 <_ZN8touchgfx21AbstractPainterRGB565C1Ev>
 8006aa8:	4b46      	ldr	r3, [pc, #280]	; (8006bc4 <_ZN26Measurement_SingleViewBaseC1Ev+0x1c0>)
 8006aaa:	f8c4 319c 	str.w	r3, [r4, #412]	; 0x19c
 8006aae:	f504 78d8 	add.w	r8, r4, #432	; 0x1b0
 8006ab2:	3324      	adds	r3, #36	; 0x24
 8006ab4:	f8c4 31a4 	str.w	r3, [r4, #420]	; 0x1a4
 8006ab8:	f8c4 51a8 	str.w	r5, [r4, #424]	; 0x1a8
 8006abc:	4640      	mov	r0, r8
 8006abe:	f7fb fe85 	bl	80027cc <_ZN8touchgfx8TextAreaC1Ev>
 8006ac2:	f504 73fc 	add.w	r3, r4, #504	; 0x1f8
 8006ac6:	4618      	mov	r0, r3
 8006ac8:	ee08 3a10 	vmov	s16, r3
 8006acc:	f7fb fe7e 	bl	80027cc <_ZN8touchgfx8TextAreaC1Ev>
 8006ad0:	f504 7310 	add.w	r3, r4, #576	; 0x240
 8006ad4:	4618      	mov	r0, r3
 8006ad6:	ee09 3a10 	vmov	s18, r3
 8006ada:	f00c f861 	bl	8012ba0 <_ZN8touchgfx15ButtonWithLabelC1Ev>
 8006ade:	f504 7322 	add.w	r3, r4, #648	; 0x288
 8006ae2:	4618      	mov	r0, r3
 8006ae4:	ee09 3a90 	vmov	s19, r3
 8006ae8:	f00c f85a 	bl	8012ba0 <_ZN8touchgfx15ButtonWithLabelC1Ev>
 8006aec:	f504 7334 	add.w	r3, r4, #720	; 0x2d0
 8006af0:	4618      	mov	r0, r3
 8006af2:	ee0a 3a10 	vmov	s20, r3
 8006af6:	f00c f853 	bl	8012ba0 <_ZN8touchgfx15ButtonWithLabelC1Ev>
        : pobject(pObject), pmemfun(pmemfun_1)
 8006afa:	4a33      	ldr	r2, [pc, #204]	; (8006bc8 <_ZN26Measurement_SingleViewBaseC1Ev+0x1c4>)
 8006afc:	f504 5380 	add.w	r3, r4, #4096	; 0x1000
 8006b00:	e9c3 244c 	strd	r2, r4, [r3, #304]	; 0x130
 8006b04:	4a31      	ldr	r2, [pc, #196]	; (8006bcc <_ZN26Measurement_SingleViewBaseC1Ev+0x1c8>)
    touchgfx::CanvasWidgetRenderer::setupBuffer(canvasBuffer, CANVAS_BUFFER_SIZE);
 8006b06:	f44f 6161 	mov.w	r1, #3600	; 0xe10
 8006b0a:	e9c3 254e 	strd	r2, r5, [r3, #312]	; 0x138
 8006b0e:	f504 7048 	add.w	r0, r4, #800	; 0x320
 8006b12:	f00c ff01 	bl	8013918 <_ZN8touchgfx20CanvasWidgetRenderer11setupBufferEPhj>
    __background.setPosition(0, 0, 240, 320);
 8006b16:	f44f 73a0 	mov.w	r3, #320	; 0x140
 8006b1a:	462a      	mov	r2, r5
 8006b1c:	4658      	mov	r0, fp
 8006b1e:	9300      	str	r3, [sp, #0]
 8006b20:	4629      	mov	r1, r5
 8006b22:	23f0      	movs	r3, #240	; 0xf0
 8006b24:	f7fb fe2c 	bl	8002780 <_ZN8touchgfx8Drawable11setPositionEssss>
 8006b28:	1d26      	adds	r6, r4, #4
        color = newColor;
 8006b2a:	f04f 437f 	mov.w	r3, #4278190080	; 0xff000000
 8006b2e:	66a3      	str	r3, [r4, #104]	; 0x68
 8006b30:	4659      	mov	r1, fp
 8006b32:	4630      	mov	r0, r6
 8006b34:	f009 f964 	bl	800fe00 <_ZN8touchgfx9Container3addERNS_8DrawableE>
    image1.setXY(0, 0);
 8006b38:	462a      	mov	r2, r5
 8006b3a:	4650      	mov	r0, sl
 8006b3c:	4629      	mov	r1, r5
 8006b3e:	f7fb fe12 	bl	8002766 <_ZN8touchgfx8Drawable5setXYEss>
 8006b42:	2309      	movs	r3, #9
    image1.setBitmap(touchgfx::Bitmap(BITMAP_BACKGROUND_2_RESIZED_4_ID));
 8006b44:	4650      	mov	r0, sl
 8006b46:	a90a      	add	r1, sp, #40	; 0x28
 8006b48:	f8ad 3028 	strh.w	r3, [sp, #40]	; 0x28
 8006b4c:	f00b fee7 	bl	801291e <_ZN8touchgfx5Image9setBitmapERKNS_6BitmapE>
 8006b50:	4651      	mov	r1, sl
 8006b52:	4630      	mov	r0, r6
 8006b54:	f009 f954 	bl	800fe00 <_ZN8touchgfx9Container3addERNS_8DrawableE>
    textArea3_1.setXY(86, 308);
 8006b58:	f44f 729a 	mov.w	r2, #308	; 0x134
 8006b5c:	2156      	movs	r1, #86	; 0x56
 8006b5e:	4648      	mov	r0, r9
 8006b60:	f7fb fe01 	bl	8002766 <_ZN8touchgfx8Drawable5setXYEss>
        color = newColor;
 8006b64:	f04f 33ff 	mov.w	r3, #4294967295
 8006b68:	f8c4 30c8 	str.w	r3, [r4, #200]	; 0xc8
        boundingArea = calculateBoundingArea();
 8006b6c:	f8d4 3098 	ldr.w	r3, [r4, #152]	; 0x98
        linespace = space;
 8006b70:	f8a4 50cc 	strh.w	r5, [r4, #204]	; 0xcc
        boundingArea = calculateBoundingArea();
 8006b74:	f10d 0b10 	add.w	fp, sp, #16
 8006b78:	f8d3 3084 	ldr.w	r3, [r3, #132]	; 0x84
 8006b7c:	4649      	mov	r1, r9
 8006b7e:	4658      	mov	r0, fp
 8006b80:	4798      	blx	r3
 8006b82:	e89b 0007 	ldmia.w	fp, {r0, r1, r2}
 8006b86:	f104 03d4 	add.w	r3, r4, #212	; 0xd4
 8006b8a:	e883 0007 	stmia.w	r3, {r0, r1, r2}
        assert(typedTexts != 0 && "TypedText database has not been initialized.");
 8006b8e:	4b10      	ldr	r3, [pc, #64]	; (8006bd0 <_ZN26Measurement_SingleViewBaseC1Ev+0x1cc>)
 8006b90:	681b      	ldr	r3, [r3, #0]
    Unicode::snprintf(textArea3_1Buffer, TEXTAREA3_1_SIZE, "%s", touchgfx::TypedText(T___SINGLEUSE_DTDC).getText());
 8006b92:	f504 7a46 	add.w	sl, r4, #792	; 0x318
 8006b96:	b92b      	cbnz	r3, 8006ba4 <_ZN26Measurement_SingleViewBaseC1Ev+0x1a0>
 8006b98:	4b0e      	ldr	r3, [pc, #56]	; (8006bd4 <_ZN26Measurement_SingleViewBaseC1Ev+0x1d0>)
 8006b9a:	4a0f      	ldr	r2, [pc, #60]	; (8006bd8 <_ZN26Measurement_SingleViewBaseC1Ev+0x1d4>)
 8006b9c:	2160      	movs	r1, #96	; 0x60
        assert(hasValidId() && "typedTextId larger than numberOfTypedTexts.");
 8006b9e:	480f      	ldr	r0, [pc, #60]	; (8006bdc <_ZN26Measurement_SingleViewBaseC1Ev+0x1d8>)
 8006ba0:	f023 fa50 	bl	802a044 <__assert_func>
        return typedTextId < numberOfTypedTexts;
 8006ba4:	4b0e      	ldr	r3, [pc, #56]	; (8006be0 <_ZN26Measurement_SingleViewBaseC1Ev+0x1dc>)
        assert(hasValidId() && "typedTextId larger than numberOfTypedTexts.");
 8006ba6:	881b      	ldrh	r3, [r3, #0]
 8006ba8:	2b18      	cmp	r3, #24
 8006baa:	d81d      	bhi.n	8006be8 <_ZN26Measurement_SingleViewBaseC1Ev+0x1e4>
 8006bac:	4b0d      	ldr	r3, [pc, #52]	; (8006be4 <_ZN26Measurement_SingleViewBaseC1Ev+0x1e0>)
 8006bae:	4a0a      	ldr	r2, [pc, #40]	; (8006bd8 <_ZN26Measurement_SingleViewBaseC1Ev+0x1d4>)
 8006bb0:	2161      	movs	r1, #97	; 0x61
 8006bb2:	e7f4      	b.n	8006b9e <_ZN26Measurement_SingleViewBaseC1Ev+0x19a>
 8006bb4:	0802d6fc 	.word	0x0802d6fc
 8006bb8:	0802e540 	.word	0x0802e540
 8006bbc:	0802e708 	.word	0x0802e708
 8006bc0:	0802bbf8 	.word	0x0802bbf8
 8006bc4:	0802e274 	.word	0x0802e274
 8006bc8:	0802d6e4 	.word	0x0802d6e4
 8006bcc:	080069c9 	.word	0x080069c9
 8006bd0:	20012f7c 	.word	0x20012f7c
 8006bd4:	0802ba38 	.word	0x0802ba38
 8006bd8:	0802bb3a 	.word	0x0802bb3a
 8006bdc:	0802bab5 	.word	0x0802bab5
 8006be0:	20012f80 	.word	0x20012f80
 8006be4:	0802bafc 	.word	0x0802bafc
        return texts->getText(typedTextId);
 8006be8:	4b96      	ldr	r3, [pc, #600]	; (8006e44 <_ZN26Measurement_SingleViewBaseC1Ev+0x440>)
 8006bea:	2118      	movs	r1, #24
 8006bec:	6818      	ldr	r0, [r3, #0]
 8006bee:	f001 fabd 	bl	800816c <_ZNK8touchgfx5Texts7getTextEt>
 8006bf2:	4a95      	ldr	r2, [pc, #596]	; (8006e48 <_ZN26Measurement_SingleViewBaseC1Ev+0x444>)
 8006bf4:	4603      	mov	r3, r0
 8006bf6:	2104      	movs	r1, #4
 8006bf8:	4650      	mov	r0, sl
 8006bfa:	f011 fd09 	bl	8018610 <_ZN8touchgfx7Unicode8snprintfEPttPKcz>
        wc1 = value;
 8006bfe:	f8c4 a0e0 	str.w	sl, [r4, #224]	; 0xe0
    textArea3_1.resizeToCurrentText();
 8006c02:	4648      	mov	r0, r9
 8006c04:	f00b fa90 	bl	8012128 <_ZN8touchgfx8TextArea19resizeToCurrentTextEv>
        : typedTextId(id)
 8006c08:	f8df a240 	ldr.w	sl, [pc, #576]	; 8006e4c <_ZN26Measurement_SingleViewBaseC1Ev+0x448>
 8006c0c:	f8cd a028 	str.w	sl, [sp, #40]	; 0x28
 8006c10:	2319      	movs	r3, #25
    textArea3_1.setTypedText(touchgfx::TypedText(T___SINGLEUSE_VDD5));
 8006c12:	a90a      	add	r1, sp, #40	; 0x28
 8006c14:	4648      	mov	r0, r9
 8006c16:	f8ad 302c 	strh.w	r3, [sp, #44]	; 0x2c
 8006c1a:	f00b faa5 	bl	8012168 <_ZN8touchgfx8TextArea12setTypedTextERKNS_9TypedTextE>
 8006c1e:	4649      	mov	r1, r9
 8006c20:	4630      	mov	r0, r6
 8006c22:	f009 f8ed 	bl	800fe00 <_ZN8touchgfx9Container3addERNS_8DrawableE>
    textArea3.setXY(41, 60);
 8006c26:	223c      	movs	r2, #60	; 0x3c
 8006c28:	ee18 0a90 	vmov	r0, s17
 8006c2c:	2129      	movs	r1, #41	; 0x29
 8006c2e:	f7fb fd9a 	bl	8002766 <_ZN8touchgfx8Drawable5setXYEss>
        color = newColor;
 8006c32:	f04f 33ff 	mov.w	r3, #4294967295
        boundingArea = calculateBoundingArea();
 8006c36:	ee18 1a90 	vmov	r1, s17
        color = newColor;
 8006c3a:	f8c4 3114 	str.w	r3, [r4, #276]	; 0x114
        boundingArea = calculateBoundingArea();
 8006c3e:	4658      	mov	r0, fp
        linespace = space;
 8006c40:	f8a4 5118 	strh.w	r5, [r4, #280]	; 0x118
        boundingArea = calculateBoundingArea();
 8006c44:	f00a fff6 	bl	8011c34 <_ZNK8touchgfx8TextArea21calculateBoundingAreaEv>
 8006c48:	e89b 0007 	ldmia.w	fp, {r0, r1, r2}
 8006c4c:	f504 7390 	add.w	r3, r4, #288	; 0x120
 8006c50:	e883 0007 	stmia.w	r3, {r0, r1, r2}
 8006c54:	2328      	movs	r3, #40	; 0x28
    textArea3.setTypedText(touchgfx::TypedText(T___SINGLEUSE_1QNY));
 8006c56:	eb0d 0103 	add.w	r1, sp, r3
 8006c5a:	ee18 0a90 	vmov	r0, s17
 8006c5e:	f8ad 302c 	strh.w	r3, [sp, #44]	; 0x2c
 8006c62:	f8cd a028 	str.w	sl, [sp, #40]	; 0x28
 8006c66:	f00b fa7f 	bl	8012168 <_ZN8touchgfx8TextArea12setTypedTextERKNS_9TypedTextE>
 8006c6a:	ee18 1a90 	vmov	r1, s17
 8006c6e:	4630      	mov	r0, r6
 8006c70:	f009 f8c6 	bl	800fe00 <_ZN8touchgfx9Container3addERNS_8DrawableE>
    line1.setPosition(0, 50, 240, 10);
 8006c74:	230a      	movs	r3, #10
 8006c76:	9300      	str	r3, [sp, #0]
 8006c78:	2232      	movs	r2, #50	; 0x32
 8006c7a:	23f0      	movs	r3, #240	; 0xf0
 8006c7c:	4629      	mov	r1, r5
 8006c7e:	4638      	mov	r0, r7
 8006c80:	f7fb fd7e 	bl	8002780 <_ZN8touchgfx8Drawable11setPositionEssss>
 8006c84:	f04f 33ff 	mov.w	r3, #4294967295
        setStart(CWRUtil::toQ5<T>(x), CWRUtil::toQ5<T>(y));
 8006c88:	22a0      	movs	r2, #160	; 0xa0
 8006c8a:	f8c4 31a8 	str.w	r3, [r4, #424]	; 0x1a8
        color565 = LCD16bpp::getNativeColor(painterColor);
 8006c8e:	f8a4 31ac 	strh.w	r3, [r4, #428]	; 0x1ac
 8006c92:	9b03      	ldr	r3, [sp, #12]
 8006c94:	f8c4 3154 	str.w	r3, [r4, #340]	; 0x154
 8006c98:	4611      	mov	r1, r2
 8006c9a:	4638      	mov	r0, r7
 8006c9c:	f00a fe1e 	bl	80118dc <_ZN8touchgfx4Line8setStartENS_7CWRUtil2Q5ES2_>
        setEnd(CWRUtil::toQ5<T>(x), CWRUtil::toQ5<T>(y));
 8006ca0:	22a0      	movs	r2, #160	; 0xa0
 8006ca2:	f44f 51eb 	mov.w	r1, #7520	; 0x1d60
 8006ca6:	4638      	mov	r0, r7
 8006ca8:	f00a fe23 	bl	80118f2 <_ZN8touchgfx4Line6setEndENS_7CWRUtil2Q5ES2_>
        if (lineWidthQ5 == widthQ5)
 8006cac:	f8d4 3168 	ldr.w	r3, [r4, #360]	; 0x168
 8006cb0:	2b20      	cmp	r3, #32
 8006cb2:	d005      	beq.n	8006cc0 <_ZN26Measurement_SingleViewBaseC1Ev+0x2bc>
        lineWidthQ5 = widthQ5;
 8006cb4:	2320      	movs	r3, #32
 8006cb6:	f8c4 3168 	str.w	r3, [r4, #360]	; 0x168
        updateCachedShape();
 8006cba:	4638      	mov	r0, r7
 8006cbc:	f00a fd18 	bl	80116f0 <_ZN8touchgfx4Line17updateCachedShapeEv>
    line1.setLineEndingStyle(touchgfx::Line::ROUND_CAP_ENDING);
 8006cc0:	4638      	mov	r0, r7
 8006cc2:	2101      	movs	r1, #1
 8006cc4:	f00a fe20 	bl	8011908 <_ZN8touchgfx4Line18setLineEndingStyleENS0_17LINE_ENDING_STYLEE>
 8006cc8:	4639      	mov	r1, r7
 8006cca:	4630      	mov	r0, r6
 8006ccc:	f009 f898 	bl	800fe00 <_ZN8touchgfx9Container3addERNS_8DrawableE>
        color = newColor;
 8006cd0:	f04f 35ff 	mov.w	r5, #4294967295
        boundingArea = calculateBoundingArea();
 8006cd4:	af04      	add	r7, sp, #16
    textArea2.setXY(69, 35);
 8006cd6:	2223      	movs	r2, #35	; 0x23
 8006cd8:	4640      	mov	r0, r8
        linespace = space;
 8006cda:	f04f 0a00 	mov.w	sl, #0
 8006cde:	2145      	movs	r1, #69	; 0x45
 8006ce0:	f7fb fd41 	bl	8002766 <_ZN8touchgfx8Drawable5setXYEss>
        boundingArea = calculateBoundingArea();
 8006ce4:	4641      	mov	r1, r8
 8006ce6:	4638      	mov	r0, r7
        color = newColor;
 8006ce8:	f8c4 51e0 	str.w	r5, [r4, #480]	; 0x1e0
        linespace = space;
 8006cec:	f8a4 a1e4 	strh.w	sl, [r4, #484]	; 0x1e4
        boundingArea = calculateBoundingArea();
 8006cf0:	f00a ffa0 	bl	8011c34 <_ZNK8touchgfx8TextArea21calculateBoundingAreaEv>
 8006cf4:	e897 0007 	ldmia.w	r7, {r0, r1, r2}
 8006cf8:	f108 033c 	add.w	r3, r8, #60	; 0x3c
 8006cfc:	e883 0007 	stmia.w	r3, {r0, r1, r2}
 8006d00:	f8df 9148 	ldr.w	r9, [pc, #328]	; 8006e4c <_ZN26Measurement_SingleViewBaseC1Ev+0x448>
 8006d04:	f8cd 9028 	str.w	r9, [sp, #40]	; 0x28
 8006d08:	2341      	movs	r3, #65	; 0x41
    textArea2.setTypedText(touchgfx::TypedText(T___SINGLEUSE_T0FJ));
 8006d0a:	a90a      	add	r1, sp, #40	; 0x28
 8006d0c:	4640      	mov	r0, r8
 8006d0e:	f8ad 302c 	strh.w	r3, [sp, #44]	; 0x2c
 8006d12:	f00b fa29 	bl	8012168 <_ZN8touchgfx8TextArea12setTypedTextERKNS_9TypedTextE>
 8006d16:	4641      	mov	r1, r8
 8006d18:	4630      	mov	r0, r6
 8006d1a:	f009 f871 	bl	800fe00 <_ZN8touchgfx9Container3addERNS_8DrawableE>
    textArea1.setXY(54, 12);
 8006d1e:	ee18 0a10 	vmov	r0, s16
 8006d22:	220c      	movs	r2, #12
 8006d24:	2136      	movs	r1, #54	; 0x36
 8006d26:	f7fb fd1e 	bl	8002766 <_ZN8touchgfx8Drawable5setXYEss>
 8006d2a:	ee18 1a10 	vmov	r1, s16
 8006d2e:	4638      	mov	r0, r7
        color = newColor;
 8006d30:	f8c4 5228 	str.w	r5, [r4, #552]	; 0x228
        linespace = space;
 8006d34:	f8a4 a22c 	strh.w	sl, [r4, #556]	; 0x22c
        boundingArea = calculateBoundingArea();
 8006d38:	f00a ff7c 	bl	8011c34 <_ZNK8touchgfx8TextArea21calculateBoundingAreaEv>
 8006d3c:	e897 0007 	ldmia.w	r7, {r0, r1, r2}
 8006d40:	ee18 3a10 	vmov	r3, s16
 8006d44:	333c      	adds	r3, #60	; 0x3c
 8006d46:	e883 0007 	stmia.w	r3, {r0, r1, r2}
 8006d4a:	2340      	movs	r3, #64	; 0x40
    textArea1.setTypedText(touchgfx::TypedText(T___SINGLEUSE_3BUV));
 8006d4c:	ee18 0a10 	vmov	r0, s16
 8006d50:	a90a      	add	r1, sp, #40	; 0x28
 8006d52:	f8ad 302c 	strh.w	r3, [sp, #44]	; 0x2c
 8006d56:	f8cd 9028 	str.w	r9, [sp, #40]	; 0x28
 8006d5a:	f00b fa05 	bl	8012168 <_ZN8touchgfx8TextArea12setTypedTextERKNS_9TypedTextE>
 8006d5e:	ee18 1a10 	vmov	r1, s16
 8006d62:	4630      	mov	r0, r6
 8006d64:	f009 f84c 	bl	800fe00 <_ZN8touchgfx9Container3addERNS_8DrawableE>
    buttonWithLabel3.setXY(33, 240);
 8006d68:	ee19 0a10 	vmov	r0, s18
 8006d6c:	22f0      	movs	r2, #240	; 0xf0
 8006d6e:	2121      	movs	r1, #33	; 0x21
 8006d70:	f7fb fcf9 	bl	8002766 <_ZN8touchgfx8Drawable5setXYEss>
 8006d74:	f04f 0903 	mov.w	r9, #3
    buttonWithLabel3.setBitmaps(touchgfx::Bitmap(BITMAP_ALTERNATE_THEME_IMAGES_WIDGETS_BUTTON_REGULAR_HEIGHT_50_SMALL_ROUND_PRESSED_ID), touchgfx::Bitmap(BITMAP_ALTERNATE_THEME_IMAGES_WIDGETS_BUTTON_REGULAR_HEIGHT_50_SMALL_ROUND_NORMAL_ID));
 8006d78:	aa0a      	add	r2, sp, #40	; 0x28
 8006d7a:	f04f 0802 	mov.w	r8, #2
 8006d7e:	a909      	add	r1, sp, #36	; 0x24
 8006d80:	ee19 0a10 	vmov	r0, s18
 8006d84:	f8ad 9024 	strh.w	r9, [sp, #36]	; 0x24
 8006d88:	f8ad 8028 	strh.w	r8, [sp, #40]	; 0x28
    buttonWithLabel3.setAction(buttonCallback);
 8006d8c:	f504 5789 	add.w	r7, r4, #4384	; 0x1120
    buttonWithLabel3.setBitmaps(touchgfx::Bitmap(BITMAP_ALTERNATE_THEME_IMAGES_WIDGETS_BUTTON_REGULAR_HEIGHT_50_SMALL_ROUND_PRESSED_ID), touchgfx::Bitmap(BITMAP_ALTERNATE_THEME_IMAGES_WIDGETS_BUTTON_REGULAR_HEIGHT_50_SMALL_ROUND_NORMAL_ID));
 8006d90:	f00b fbcf 	bl	8012532 <_ZN8touchgfx6Button10setBitmapsERKNS_6BitmapES3_>
class TypedText
 8006d94:	233f      	movs	r3, #63	; 0x3f
 8006d96:	f8a4 3278 	strh.w	r3, [r4, #632]	; 0x278
    buttonWithLabel3.setAction(buttonCallback);
 8006d9a:	3710      	adds	r7, #16
        updateTextPosition();
 8006d9c:	ee19 0a10 	vmov	r0, s18
 8006da0:	f7fb fd36 	bl	8002810 <_ZN8touchgfx15ButtonWithLabel18updateTextPositionEv>
 8006da4:	ee19 1a10 	vmov	r1, s18
 8006da8:	4630      	mov	r0, r6
        colorPressed = col;
 8006daa:	e9c4 559f 	strd	r5, r5, [r4, #636]	; 0x27c
 8006dae:	f8c4 7268 	str.w	r7, [r4, #616]	; 0x268
 8006db2:	f009 f825 	bl	800fe00 <_ZN8touchgfx9Container3addERNS_8DrawableE>
    buttonWithLabel2.setXY(33, 170);
 8006db6:	ee19 0a90 	vmov	r0, s19
 8006dba:	22aa      	movs	r2, #170	; 0xaa
 8006dbc:	2121      	movs	r1, #33	; 0x21
 8006dbe:	f7fb fcd2 	bl	8002766 <_ZN8touchgfx8Drawable5setXYEss>
    buttonWithLabel2.setBitmaps(touchgfx::Bitmap(BITMAP_ALTERNATE_THEME_IMAGES_WIDGETS_BUTTON_REGULAR_HEIGHT_50_SMALL_ROUND_PRESSED_ID), touchgfx::Bitmap(BITMAP_ALTERNATE_THEME_IMAGES_WIDGETS_BUTTON_REGULAR_HEIGHT_50_SMALL_ROUND_NORMAL_ID));
 8006dc2:	aa0a      	add	r2, sp, #40	; 0x28
 8006dc4:	a909      	add	r1, sp, #36	; 0x24
 8006dc6:	ee19 0a90 	vmov	r0, s19
 8006dca:	f8ad 9024 	strh.w	r9, [sp, #36]	; 0x24
 8006dce:	f8ad 8028 	strh.w	r8, [sp, #40]	; 0x28
 8006dd2:	f00b fbae 	bl	8012532 <_ZN8touchgfx6Button10setBitmapsERKNS_6BitmapES3_>
 8006dd6:	233e      	movs	r3, #62	; 0x3e
 8006dd8:	f8a4 32c0 	strh.w	r3, [r4, #704]	; 0x2c0
        updateTextPosition();
 8006ddc:	ee19 0a90 	vmov	r0, s19
 8006de0:	f7fb fd16 	bl	8002810 <_ZN8touchgfx15ButtonWithLabel18updateTextPositionEv>
 8006de4:	ee19 1a90 	vmov	r1, s19
 8006de8:	4630      	mov	r0, r6
        colorPressed = col;
 8006dea:	e9c4 55b1 	strd	r5, r5, [r4, #708]	; 0x2c4
 8006dee:	f8c4 72b0 	str.w	r7, [r4, #688]	; 0x2b0
 8006df2:	f009 f805 	bl	800fe00 <_ZN8touchgfx9Container3addERNS_8DrawableE>
    buttonWithLabel1.setXY(33, 100);
 8006df6:	ee1a 0a10 	vmov	r0, s20
 8006dfa:	2264      	movs	r2, #100	; 0x64
 8006dfc:	2121      	movs	r1, #33	; 0x21
 8006dfe:	f7fb fcb2 	bl	8002766 <_ZN8touchgfx8Drawable5setXYEss>
    buttonWithLabel1.setBitmaps(touchgfx::Bitmap(BITMAP_ALTERNATE_THEME_IMAGES_WIDGETS_BUTTON_REGULAR_HEIGHT_50_SMALL_ROUND_PRESSED_ID), touchgfx::Bitmap(BITMAP_ALTERNATE_THEME_IMAGES_WIDGETS_BUTTON_REGULAR_HEIGHT_50_SMALL_ROUND_NORMAL_ID));
 8006e02:	aa0a      	add	r2, sp, #40	; 0x28
 8006e04:	a909      	add	r1, sp, #36	; 0x24
 8006e06:	ee1a 0a10 	vmov	r0, s20
 8006e0a:	f8ad 9024 	strh.w	r9, [sp, #36]	; 0x24
 8006e0e:	f8ad 8028 	strh.w	r8, [sp, #40]	; 0x28
 8006e12:	f00b fb8e 	bl	8012532 <_ZN8touchgfx6Button10setBitmapsERKNS_6BitmapES3_>
 8006e16:	233d      	movs	r3, #61	; 0x3d
        updateTextPosition();
 8006e18:	ee1a 0a10 	vmov	r0, s20
 8006e1c:	f8a4 3308 	strh.w	r3, [r4, #776]	; 0x308
 8006e20:	f7fb fcf6 	bl	8002810 <_ZN8touchgfx15ButtonWithLabel18updateTextPositionEv>
 8006e24:	4630      	mov	r0, r6
        colorPressed = col;
 8006e26:	e9c4 55c3 	strd	r5, r5, [r4, #780]	; 0x30c
 8006e2a:	ee1a 1a10 	vmov	r1, s20
 8006e2e:	f8c4 72f8 	str.w	r7, [r4, #760]	; 0x2f8
 8006e32:	f008 ffe5 	bl	800fe00 <_ZN8touchgfx9Container3addERNS_8DrawableE>
}
 8006e36:	4620      	mov	r0, r4
 8006e38:	b00d      	add	sp, #52	; 0x34
 8006e3a:	ecbd 8b06 	vpop	{d8-d10}
 8006e3e:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
 8006e42:	bf00      	nop
 8006e44:	20012f88 	.word	0x20012f88
 8006e48:	0802bb72 	.word	0x0802bb72
 8006e4c:	0802bbe8 	.word	0x0802bbe8

08006e50 <_ZN37Measurement_Single_Display_1PViewBase7testGuiEv>:
     * Virtual Action Handlers
     */
    virtual void testGui()
    {
        // Override and implement this function in Measurement_Single_Display_1P
    }
 8006e50:	4770      	bx	lr

08006e52 <_ZN37Measurement_Single_Display_1PViewBase11setupScreenEv>:
}

void Measurement_Single_Display_1PViewBase::setupScreen()
{

}
 8006e52:	4770      	bx	lr

08006e54 <_ZN37Measurement_Single_Display_1PViewBase15handleTickEventEv>:
void Measurement_Single_Display_1PViewBase::handleTickEvent()
{
    //Interaction2
    //When every N tick call virtual function
    //Call testGui
    testGui();
 8006e54:	6803      	ldr	r3, [r0, #0]
 8006e56:	6adb      	ldr	r3, [r3, #44]	; 0x2c
 8006e58:	4718      	bx	r3

08006e5a <_ZN8touchgfx8CallbackI37Measurement_Single_Display_1PViewBaseRKNS_14AbstractButtonEvvED1Ev>:
struct Callback<dest_type, T1, void, void> : public GenericCallback<T1>
 8006e5a:	4770      	bx	lr

08006e5c <_ZN8touchgfx8CallbackI37Measurement_Single_Display_1PViewBaseRKNS_14AbstractButtonEvvE7executeES4_>:
    virtual void execute(T1 t1)
 8006e5c:	b430      	push	{r4, r5}
        (pobject->*pmemfun)(t1);
 8006e5e:	68c2      	ldr	r2, [r0, #12]
 8006e60:	6844      	ldr	r4, [r0, #4]
 8006e62:	1055      	asrs	r5, r2, #1
    virtual void execute(T1 t1)
 8006e64:	4603      	mov	r3, r0
        (pobject->*pmemfun)(t1);
 8006e66:	eb04 0062 	add.w	r0, r4, r2, asr #1
 8006e6a:	07d2      	lsls	r2, r2, #31
 8006e6c:	bf48      	it	mi
 8006e6e:	5962      	ldrmi	r2, [r4, r5]
 8006e70:	689b      	ldr	r3, [r3, #8]
    }
 8006e72:	bc30      	pop	{r4, r5}
        (pobject->*pmemfun)(t1);
 8006e74:	bf48      	it	mi
 8006e76:	58d3      	ldrmi	r3, [r2, r3]
 8006e78:	4718      	bx	r3

08006e7a <_ZNK8touchgfx8CallbackI37Measurement_Single_Display_1PViewBaseRKNS_14AbstractButtonEvvE7isValidEv>:
        return (pobject != 0) && (pmemfun != 0);
 8006e7a:	6843      	ldr	r3, [r0, #4]
 8006e7c:	b12b      	cbz	r3, 8006e8a <_ZNK8touchgfx8CallbackI37Measurement_Single_Display_1PViewBaseRKNS_14AbstractButtonEvvE7isValidEv+0x10>
 8006e7e:	6883      	ldr	r3, [r0, #8]
 8006e80:	b92b      	cbnz	r3, 8006e8e <_ZNK8touchgfx8CallbackI37Measurement_Single_Display_1PViewBaseRKNS_14AbstractButtonEvvE7isValidEv+0x14>
 8006e82:	68c0      	ldr	r0, [r0, #12]
 8006e84:	f000 0001 	and.w	r0, r0, #1
 8006e88:	4770      	bx	lr
 8006e8a:	4618      	mov	r0, r3
 8006e8c:	4770      	bx	lr
 8006e8e:	2001      	movs	r0, #1
    }
 8006e90:	4770      	bx	lr

08006e92 <_ZN8touchgfx8CallbackI37Measurement_Single_Display_1PViewBaseRKNS_14AbstractButtonEvvED0Ev>:
struct Callback<dest_type, T1, void, void> : public GenericCallback<T1>
 8006e92:	b510      	push	{r4, lr}
 8006e94:	2110      	movs	r1, #16
 8006e96:	4604      	mov	r4, r0
 8006e98:	f022 fac1 	bl	802941e <_ZdlPvj>
 8006e9c:	4620      	mov	r0, r4
 8006e9e:	bd10      	pop	{r4, pc}

08006ea0 <_ZN37Measurement_Single_Display_1PViewBaseD1Ev>:
Measurement_Single_Display_1PViewBase::~Measurement_Single_Display_1PViewBase()
 8006ea0:	b510      	push	{r4, lr}
 8006ea2:	4b03      	ldr	r3, [pc, #12]	; (8006eb0 <_ZN37Measurement_Single_Display_1PViewBaseD1Ev+0x10>)
 8006ea4:	6003      	str	r3, [r0, #0]
 8006ea6:	4604      	mov	r4, r0
    touchgfx::CanvasWidgetRenderer::resetBuffer();
 8006ea8:	f00c fd40 	bl	801392c <_ZN8touchgfx20CanvasWidgetRenderer11resetBufferEv>
}
 8006eac:	4620      	mov	r0, r4
 8006eae:	bd10      	pop	{r4, pc}
 8006eb0:	0802d748 	.word	0x0802d748

08006eb4 <_ZN37Measurement_Single_Display_1PViewBaseD0Ev>:
Measurement_Single_Display_1PViewBase::~Measurement_Single_Display_1PViewBase()
 8006eb4:	b507      	push	{r0, r1, r2, lr}
 8006eb6:	4b07      	ldr	r3, [pc, #28]	; (8006ed4 <_ZN37Measurement_Single_Display_1PViewBaseD0Ev+0x20>)
 8006eb8:	6003      	str	r3, [r0, #0]
 8006eba:	9001      	str	r0, [sp, #4]
    touchgfx::CanvasWidgetRenderer::resetBuffer();
 8006ebc:	f00c fd36 	bl	801392c <_ZN8touchgfx20CanvasWidgetRenderer11resetBufferEv>
}
 8006ec0:	9801      	ldr	r0, [sp, #4]
 8006ec2:	f241 31f4 	movw	r1, #5108	; 0x13f4
 8006ec6:	f022 faaa 	bl	802941e <_ZdlPvj>
 8006eca:	9801      	ldr	r0, [sp, #4]
 8006ecc:	b003      	add	sp, #12
 8006ece:	f85d fb04 	ldr.w	pc, [sp], #4
 8006ed2:	bf00      	nop
 8006ed4:	0802d748 	.word	0x0802d748

08006ed8 <_ZN37Measurement_Single_Display_1PViewBase21buttonCallbackHandlerERKN8touchgfx14AbstractButtonE>:
    if (&src == &buttonWithLabel3)
 8006ed8:	f500 60aa 	add.w	r0, r0, #1360	; 0x550
 8006edc:	4288      	cmp	r0, r1
{
 8006ede:	b508      	push	{r3, lr}
    if (&src == &buttonWithLabel3)
 8006ee0:	d105      	bne.n	8006eee <_ZN37Measurement_Single_Display_1PViewBase21buttonCallbackHandlerERKN8touchgfx14AbstractButtonE+0x16>

protected:
    FrontendApplication& application() {
        return *static_cast<FrontendApplication*>(touchgfx::Application::getInstance());
 8006ee2:	f00e fa25 	bl	8015330 <_ZN8touchgfx11Application11getInstanceEv>
}
 8006ee6:	e8bd 4008 	ldmia.w	sp!, {r3, lr}
        application().gotoMeasurement_SingleScreenWipeTransitionEast();
 8006eea:	f7fc bd73 	b.w	80039d4 <_ZN23FrontendApplicationBase46gotoMeasurement_SingleScreenWipeTransitionEastEv>
}
 8006eee:	bd08      	pop	{r3, pc}

08006ef0 <_ZN37Measurement_Single_Display_1PViewBaseC1Ev>:
Measurement_Single_Display_1PViewBase::Measurement_Single_Display_1PViewBase() :
 8006ef0:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 8006ef4:	ed2d 8b0a 	vpush	{d8-d12}
 8006ef8:	4604      	mov	r4, r0
 8006efa:	b08d      	sub	sp, #52	; 0x34
    buttonCallback(this, &Measurement_Single_Display_1PViewBase::buttonCallbackHandler)
 8006efc:	46a1      	mov	r9, r4
 8006efe:	2500      	movs	r5, #0
 8006f00:	f00f fe96 	bl	8016c30 <_ZN8touchgfx6ScreenC1Ev>
 8006f04:	4ba8      	ldr	r3, [pc, #672]	; (80071a8 <_ZN37Measurement_Single_Display_1PViewBaseC1Ev+0x2b8>)
 8006f06:	63e5      	str	r5, [r4, #60]	; 0x3c
 8006f08:	f849 3b40 	str.w	r3, [r9], #64
        : Widget(), alpha(255), color(0)
 8006f0c:	2226      	movs	r2, #38	; 0x26
 8006f0e:	4629      	mov	r1, r5
 8006f10:	4648      	mov	r0, r9
 8006f12:	f023 fa9c 	bl	802a44e <memset>
 8006f16:	4648      	mov	r0, r9
 8006f18:	f7fb fc46 	bl	80027a8 <_ZN8touchgfx6WidgetC1Ev>
 8006f1c:	f104 086c 	add.w	r8, r4, #108	; 0x6c
 8006f20:	26ff      	movs	r6, #255	; 0xff
 8006f22:	4ba2      	ldr	r3, [pc, #648]	; (80071ac <_ZN37Measurement_Single_Display_1PViewBaseC1Ev+0x2bc>)
 8006f24:	6423      	str	r3, [r4, #64]	; 0x40
        : Widget(), bitmap(bmp), alpha(255)
 8006f26:	2226      	movs	r2, #38	; 0x26
 8006f28:	f64f 73ff 	movw	r3, #65535	; 0xffff
 8006f2c:	4629      	mov	r1, r5
 8006f2e:	f884 6066 	strb.w	r6, [r4, #102]	; 0x66
 8006f32:	4640      	mov	r0, r8
 8006f34:	66a5      	str	r5, [r4, #104]	; 0x68
 8006f36:	f8ad 3028 	strh.w	r3, [sp, #40]	; 0x28
 8006f3a:	f023 fa88 	bl	802a44e <memset>
 8006f3e:	4640      	mov	r0, r8
 8006f40:	f7fb fc32 	bl	80027a8 <_ZN8touchgfx6WidgetC1Ev>
 8006f44:	4b9a      	ldr	r3, [pc, #616]	; (80071b0 <_ZN37Measurement_Single_Display_1PViewBaseC1Ev+0x2c0>)
 8006f46:	66e3      	str	r3, [r4, #108]	; 0x6c
 8006f48:	f8bd 3028 	ldrh.w	r3, [sp, #40]	; 0x28
 8006f4c:	f8a4 3092 	strh.w	r3, [r4, #146]	; 0x92
        Image::setBitmap(bmp);
 8006f50:	a90a      	add	r1, sp, #40	; 0x28
 8006f52:	f104 0b98 	add.w	fp, r4, #152	; 0x98
 8006f56:	4640      	mov	r0, r8
        : Widget(), bitmap(bmp), alpha(255)
 8006f58:	f884 6094 	strb.w	r6, [r4, #148]	; 0x94
        Image::setBitmap(bmp);
 8006f5c:	f00b fcdf 	bl	801291e <_ZN8touchgfx5Image9setBitmapERKNS_6BitmapE>
 8006f60:	f104 07e0 	add.w	r7, r4, #224	; 0xe0
 8006f64:	4658      	mov	r0, fp
 8006f66:	f7fb fc31 	bl	80027cc <_ZN8touchgfx8TextAreaC1Ev>
 8006f6a:	4638      	mov	r0, r7
 8006f6c:	f00b f99a 	bl	80122a4 <_ZN8touchgfx5GaugeC1Ev>
 8006f70:	f504 7320 	add.w	r3, r4, #640	; 0x280
        : TextArea()
 8006f74:	4618      	mov	r0, r3
 8006f76:	ee09 3a10 	vmov	s18, r3
        : TextAreaWithWildcardBase(), wc1(0)
 8006f7a:	4e8e      	ldr	r6, [pc, #568]	; (80071b4 <_ZN37Measurement_Single_Display_1PViewBaseC1Ev+0x2c4>)
        : TextArea()
 8006f7c:	f7fb fc26 	bl	80027cc <_ZN8touchgfx8TextAreaC1Ev>
 8006f80:	f504 7333 	add.w	r3, r4, #716	; 0x2cc
        : TextAreaWithWildcardBase(), wc1(0)
 8006f84:	f8c4 6280 	str.w	r6, [r4, #640]	; 0x280
        : TextArea()
 8006f88:	4618      	mov	r0, r3
        : TextAreaWithWildcardBase(), wc1(0)
 8006f8a:	f8c4 52c8 	str.w	r5, [r4, #712]	; 0x2c8
 8006f8e:	ee09 3a90 	vmov	s19, r3
        : TextArea()
 8006f92:	f7fb fc1b 	bl	80027cc <_ZN8touchgfx8TextAreaC1Ev>
 8006f96:	f504 7346 	add.w	r3, r4, #792	; 0x318
        : TextAreaWithWildcardBase(), wc1(0)
 8006f9a:	f8c4 62cc 	str.w	r6, [r4, #716]	; 0x2cc
        : TextArea()
 8006f9e:	4618      	mov	r0, r3
        : TextAreaWithWildcardBase(), wc1(0)
 8006fa0:	f8c4 5314 	str.w	r5, [r4, #788]	; 0x314
 8006fa4:	ee0a 3a10 	vmov	s20, r3
        : TextArea()
 8006fa8:	f7fb fc10 	bl	80027cc <_ZN8touchgfx8TextAreaC1Ev>
 8006fac:	f504 7359 	add.w	r3, r4, #868	; 0x364
        : TextAreaWithWildcardBase(), wc1(0)
 8006fb0:	f8c4 6318 	str.w	r6, [r4, #792]	; 0x318
 8006fb4:	4618      	mov	r0, r3
 8006fb6:	f8c4 5360 	str.w	r5, [r4, #864]	; 0x360
 8006fba:	ee0a 3a90 	vmov	s21, r3
 8006fbe:	f7fb fc05 	bl	80027cc <_ZN8touchgfx8TextAreaC1Ev>
 8006fc2:	f504 736b 	add.w	r3, r4, #940	; 0x3ac
 8006fc6:	4618      	mov	r0, r3
 8006fc8:	ee0b 3a10 	vmov	s22, r3
 8006fcc:	f7fb fbfe 	bl	80027cc <_ZN8touchgfx8TextAreaC1Ev>
 8006fd0:	f504 737d 	add.w	r3, r4, #1012	; 0x3f4
 8006fd4:	4618      	mov	r0, r3
 8006fd6:	f204 4a3c 	addw	sl, r4, #1084	; 0x43c
 8006fda:	ee0b 3a90 	vmov	s23, r3
 8006fde:	f7fb fbf5 	bl	80027cc <_ZN8touchgfx8TextAreaC1Ev>
 8006fe2:	4650      	mov	r0, sl
 8006fe4:	f00a fb64 	bl	80116b0 <_ZN8touchgfx4LineC1Ev>
 8006fe8:	f204 43ac 	addw	r3, r4, #1196	; 0x4ac
        : AbstractPainterRGB565(), AbstractPainterColor(color)
 8006fec:	4618      	mov	r0, r3
 8006fee:	9303      	str	r3, [sp, #12]
 8006ff0:	f7fa f82a 	bl	8001048 <_ZN8touchgfx21AbstractPainterRGB565C1Ev>
 8006ff4:	4b70      	ldr	r3, [pc, #448]	; (80071b8 <_ZN37Measurement_Single_Display_1PViewBaseC1Ev+0x2c8>)
 8006ff6:	f8c4 34ac 	str.w	r3, [r4, #1196]	; 0x4ac
 8006ffa:	3324      	adds	r3, #36	; 0x24
 8006ffc:	f8c4 34b4 	str.w	r3, [r4, #1204]	; 0x4b4
 8007000:	f504 6398 	add.w	r3, r4, #1216	; 0x4c0
 8007004:	4618      	mov	r0, r3
 8007006:	f8c4 54b8 	str.w	r5, [r4, #1208]	; 0x4b8
 800700a:	ee08 3a10 	vmov	s16, r3
 800700e:	f7fb fbdd 	bl	80027cc <_ZN8touchgfx8TextAreaC1Ev>
 8007012:	f504 63a1 	add.w	r3, r4, #1288	; 0x508
 8007016:	4618      	mov	r0, r3
 8007018:	ee08 3a90 	vmov	s17, r3
 800701c:	f7fb fbd6 	bl	80027cc <_ZN8touchgfx8TextAreaC1Ev>
 8007020:	f504 63aa 	add.w	r3, r4, #1360	; 0x550
 8007024:	4618      	mov	r0, r3
 8007026:	ee0c 3a10 	vmov	s24, r3
 800702a:	f00b fdb9 	bl	8012ba0 <_ZN8touchgfx15ButtonWithLabelC1Ev>
        : pobject(pObject), pmemfun(pmemfun_1)
 800702e:	4a63      	ldr	r2, [pc, #396]	; (80071bc <_ZN37Measurement_Single_Display_1PViewBaseC1Ev+0x2cc>)
 8007030:	f504 5380 	add.w	r3, r4, #4096	; 0x1000
 8007034:	e9c3 24f9 	strd	r2, r4, [r3, #996]	; 0x3e4
 8007038:	4a61      	ldr	r2, [pc, #388]	; (80071c0 <_ZN37Measurement_Single_Display_1PViewBaseC1Ev+0x2d0>)
    touchgfx::CanvasWidgetRenderer::setupBuffer(canvasBuffer, CANVAS_BUFFER_SIZE);
 800703a:	f44f 6161 	mov.w	r1, #3600	; 0xe10
 800703e:	e9c3 25fb 	strd	r2, r5, [r3, #1004]	; 0x3ec
 8007042:	f204 50d4 	addw	r0, r4, #1492	; 0x5d4
 8007046:	f00c fc67 	bl	8013918 <_ZN8touchgfx20CanvasWidgetRenderer11setupBufferEPhj>
    __background.setPosition(0, 0, 240, 320);
 800704a:	f44f 73a0 	mov.w	r3, #320	; 0x140
 800704e:	462a      	mov	r2, r5
 8007050:	4648      	mov	r0, r9
 8007052:	9300      	str	r3, [sp, #0]
 8007054:	4629      	mov	r1, r5
 8007056:	23f0      	movs	r3, #240	; 0xf0
 8007058:	f7fb fb92 	bl	8002780 <_ZN8touchgfx8Drawable11setPositionEssss>
 800705c:	1d26      	adds	r6, r4, #4
        color = newColor;
 800705e:	f04f 437f 	mov.w	r3, #4278190080	; 0xff000000
 8007062:	66a3      	str	r3, [r4, #104]	; 0x68
 8007064:	4649      	mov	r1, r9
 8007066:	4630      	mov	r0, r6
 8007068:	f008 feca 	bl	800fe00 <_ZN8touchgfx9Container3addERNS_8DrawableE>
    image1.setXY(0, 0);
 800706c:	462a      	mov	r2, r5
 800706e:	4640      	mov	r0, r8
 8007070:	4629      	mov	r1, r5
 8007072:	f7fb fb78 	bl	8002766 <_ZN8touchgfx8Drawable5setXYEss>
 8007076:	2309      	movs	r3, #9
    image1.setBitmap(touchgfx::Bitmap(BITMAP_BACKGROUND_2_RESIZED_4_ID));
 8007078:	4640      	mov	r0, r8
 800707a:	a90a      	add	r1, sp, #40	; 0x28
 800707c:	f8ad 3028 	strh.w	r3, [sp, #40]	; 0x28
 8007080:	f00b fc4d 	bl	801291e <_ZN8touchgfx5Image9setBitmapERKNS_6BitmapE>
 8007084:	4641      	mov	r1, r8
 8007086:	4630      	mov	r0, r6
 8007088:	f008 feba 	bl	800fe00 <_ZN8touchgfx9Container3addERNS_8DrawableE>
    textArea3.setXY(31, 60);
 800708c:	223c      	movs	r2, #60	; 0x3c
 800708e:	211f      	movs	r1, #31
 8007090:	4658      	mov	r0, fp
 8007092:	f7fb fb68 	bl	8002766 <_ZN8touchgfx8Drawable5setXYEss>
 8007096:	f10d 0810 	add.w	r8, sp, #16
        color = newColor;
 800709a:	f04f 33ff 	mov.w	r3, #4294967295
 800709e:	f8c4 30c8 	str.w	r3, [r4, #200]	; 0xc8
        boundingArea = calculateBoundingArea();
 80070a2:	4659      	mov	r1, fp
 80070a4:	4640      	mov	r0, r8
        linespace = space;
 80070a6:	f8a4 50cc 	strh.w	r5, [r4, #204]	; 0xcc
        boundingArea = calculateBoundingArea();
 80070aa:	f00a fdc3 	bl	8011c34 <_ZNK8touchgfx8TextArea21calculateBoundingAreaEv>
 80070ae:	e898 0007 	ldmia.w	r8, {r0, r1, r2}
 80070b2:	f104 03d4 	add.w	r3, r4, #212	; 0xd4
 80070b6:	e883 0007 	stmia.w	r3, {r0, r1, r2}
        : typedTextId(id)
 80070ba:	4b42      	ldr	r3, [pc, #264]	; (80071c4 <_ZN37Measurement_Single_Display_1PViewBaseC1Ev+0x2d4>)
 80070bc:	930a      	str	r3, [sp, #40]	; 0x28
    textArea3.setTypedText(touchgfx::TypedText(T___SINGLEUSE_M3QF));
 80070be:	a90a      	add	r1, sp, #40	; 0x28
 80070c0:	2327      	movs	r3, #39	; 0x27
 80070c2:	4658      	mov	r0, fp
 80070c4:	f8ad 302c 	strh.w	r3, [sp, #44]	; 0x2c
 80070c8:	f00b f84e 	bl	8012168 <_ZN8touchgfx8TextArea12setTypedTextERKNS_9TypedTextE>
 80070cc:	4659      	mov	r1, fp
 80070ce:	4630      	mov	r0, r6
 80070d0:	f008 fe96 	bl	800fe00 <_ZN8touchgfx9Container3addERNS_8DrawableE>
 80070d4:	f04f 0304 	mov.w	r3, #4
    SMD1_gauge.setBackground(touchgfx::Bitmap(BITMAP_ALTERNATE_THEME_IMAGES_WIDGETS_GAUGE_SMALL_BACKGROUNDS_LIGHT_PRECISION_ID));
 80070d8:	4638      	mov	r0, r7
 80070da:	a90a      	add	r1, sp, #40	; 0x28
 80070dc:	f8ad 3028 	strh.w	r3, [sp, #40]	; 0x28
 80070e0:	f008 fe20 	bl	800fd24 <_ZN8touchgfx25AbstractProgressIndicator13setBackgroundERKNS_6BitmapE>
    SMD1_gauge.setPosition(28, 94, 184, 106);
 80070e4:	236a      	movs	r3, #106	; 0x6a
 80070e6:	4638      	mov	r0, r7
 80070e8:	9300      	str	r3, [sp, #0]
 80070ea:	225e      	movs	r2, #94	; 0x5e
 80070ec:	23b8      	movs	r3, #184	; 0xb8
 80070ee:	211c      	movs	r1, #28
 80070f0:	f7fb fb46 	bl	8002780 <_ZN8touchgfx8Drawable11setPositionEssss>
    SMD1_gauge.setCenter(92, 92);
 80070f4:	225c      	movs	r2, #92	; 0x5c
 80070f6:	4611      	mov	r1, r2
 80070f8:	4638      	mov	r0, r7
 80070fa:	f00b f97e 	bl	80123fa <_ZN8touchgfx5Gauge9setCenterEii>
    SMD1_gauge.setStartEndAngle(-90, 90);
 80070fe:	4638      	mov	r0, r7
 8007100:	225a      	movs	r2, #90	; 0x5a
 8007102:	f06f 0159 	mvn.w	r1, #89	; 0x59
 8007106:	f00b f9fd 	bl	8012504 <_ZN8touchgfx5Gauge16setStartEndAngleEii>
    SMD1_gauge.setRange(-90, 90);
 800710a:	462b      	mov	r3, r5
 800710c:	225a      	movs	r2, #90	; 0x5a
 800710e:	4638      	mov	r0, r7
 8007110:	f06f 0159 	mvn.w	r1, #89	; 0x59
 8007114:	9500      	str	r5, [sp, #0]
 8007116:	f008 fcb2 	bl	800fa7e <_ZN8touchgfx25AbstractProgressIndicator8setRangeEiitt>
    SMD1_gauge.setValue(0);
 800711a:	4638      	mov	r0, r7
 800711c:	4629      	mov	r1, r5
 800711e:	f00b f99b 	bl	8012458 <_ZN8touchgfx5Gauge8setValueEi>
    SMD1_gauge.setNeedle(BITMAP_ALTERNATE_THEME_IMAGES_WIDGETS_GAUGE_SMALL_NEEDLES_ROUGH_ID, 8, 53);
 8007122:	2335      	movs	r3, #53	; 0x35
 8007124:	2208      	movs	r2, #8
 8007126:	4638      	mov	r0, r7
 8007128:	2105      	movs	r1, #5
 800712a:	f00b f951 	bl	80123d0 <_ZN8touchgfx5Gauge9setNeedleEtss>
    SMD1_gauge.setMovingNeedleRenderingAlgorithm(touchgfx::TextureMapper::BILINEAR_INTERPOLATION);
 800712e:	4638      	mov	r0, r7
 8007130:	2101      	movs	r1, #1
 8007132:	f00b f8ef 	bl	8012314 <_ZN8touchgfx5Gauge33setMovingNeedleRenderingAlgorithmENS_13TextureMapper18RenderingAlgorithmE>
    SMD1_gauge.setSteadyNeedleRenderingAlgorithm(touchgfx::TextureMapper::BILINEAR_INTERPOLATION);
 8007136:	4638      	mov	r0, r7
 8007138:	2101      	movs	r1, #1
 800713a:	f00b f8ee 	bl	801231a <_ZN8touchgfx5Gauge33setSteadyNeedleRenderingAlgorithmENS_13TextureMapper18RenderingAlgorithmE>
 800713e:	4639      	mov	r1, r7
 8007140:	4630      	mov	r0, r6
 8007142:	f008 fe5d 	bl	800fe00 <_ZN8touchgfx9Container3addERNS_8DrawableE>
    SMD1_Current.setPosition(0, 230, 240, 15);
 8007146:	230f      	movs	r3, #15
 8007148:	22e6      	movs	r2, #230	; 0xe6
 800714a:	ee19 0a10 	vmov	r0, s18
 800714e:	9300      	str	r3, [sp, #0]
 8007150:	4629      	mov	r1, r5
 8007152:	23f0      	movs	r3, #240	; 0xf0
 8007154:	f7fb fb14 	bl	8002780 <_ZN8touchgfx8Drawable11setPositionEssss>
        color = newColor;
 8007158:	f04f 33ff 	mov.w	r3, #4294967295
 800715c:	f8c4 32b0 	str.w	r3, [r4, #688]	; 0x2b0
        boundingArea = calculateBoundingArea();
 8007160:	f8d4 3280 	ldr.w	r3, [r4, #640]	; 0x280
        linespace = space;
 8007164:	f8a4 52b4 	strh.w	r5, [r4, #692]	; 0x2b4
        boundingArea = calculateBoundingArea();
 8007168:	f8d3 3084 	ldr.w	r3, [r3, #132]	; 0x84
        assert(typedTexts != 0 && "TypedText database has not been initialized.");
 800716c:	4f16      	ldr	r7, [pc, #88]	; (80071c8 <_ZN37Measurement_Single_Display_1PViewBaseC1Ev+0x2d8>)
 800716e:	ee19 1a10 	vmov	r1, s18
 8007172:	4640      	mov	r0, r8
 8007174:	4798      	blx	r3
 8007176:	e898 0007 	ldmia.w	r8, {r0, r1, r2}
 800717a:	f504 732f 	add.w	r3, r4, #700	; 0x2bc
 800717e:	e883 0007 	stmia.w	r3, {r0, r1, r2}
 8007182:	683b      	ldr	r3, [r7, #0]
    Unicode::snprintf(SMD1_CurrentBuffer, SMD1_CURRENT_SIZE, "%s", touchgfx::TypedText(T___SINGLEUSE_1WKT).getText());
 8007184:	f504 69b3 	add.w	r9, r4, #1432	; 0x598
 8007188:	b92b      	cbnz	r3, 8007196 <_ZN37Measurement_Single_Display_1PViewBaseC1Ev+0x2a6>
 800718a:	4b10      	ldr	r3, [pc, #64]	; (80071cc <_ZN37Measurement_Single_Display_1PViewBaseC1Ev+0x2dc>)
 800718c:	4a10      	ldr	r2, [pc, #64]	; (80071d0 <_ZN37Measurement_Single_Display_1PViewBaseC1Ev+0x2e0>)
 800718e:	2160      	movs	r1, #96	; 0x60
        assert(hasValidId() && "typedTextId larger than numberOfTypedTexts.");
 8007190:	4810      	ldr	r0, [pc, #64]	; (80071d4 <_ZN37Measurement_Single_Display_1PViewBaseC1Ev+0x2e4>)
 8007192:	f022 ff57 	bl	802a044 <__assert_func>
        return typedTextId < numberOfTypedTexts;
 8007196:	f8df b044 	ldr.w	fp, [pc, #68]	; 80071dc <_ZN37Measurement_Single_Display_1PViewBaseC1Ev+0x2ec>
        assert(hasValidId() && "typedTextId larger than numberOfTypedTexts.");
 800719a:	f8bb 3000 	ldrh.w	r3, [fp]
 800719e:	b9fb      	cbnz	r3, 80071e0 <_ZN37Measurement_Single_Display_1PViewBaseC1Ev+0x2f0>
 80071a0:	4b0d      	ldr	r3, [pc, #52]	; (80071d8 <_ZN37Measurement_Single_Display_1PViewBaseC1Ev+0x2e8>)
 80071a2:	4a0b      	ldr	r2, [pc, #44]	; (80071d0 <_ZN37Measurement_Single_Display_1PViewBaseC1Ev+0x2e0>)
 80071a4:	2161      	movs	r1, #97	; 0x61
 80071a6:	e7f3      	b.n	8007190 <_ZN37Measurement_Single_Display_1PViewBaseC1Ev+0x2a0>
 80071a8:	0802d748 	.word	0x0802d748
 80071ac:	0802e540 	.word	0x0802e540
 80071b0:	0802e708 	.word	0x0802e708
 80071b4:	0802bbf8 	.word	0x0802bbf8
 80071b8:	0802e274 	.word	0x0802e274
 80071bc:	0802d730 	.word	0x0802d730
 80071c0:	08006ed9 	.word	0x08006ed9
 80071c4:	0802bbe8 	.word	0x0802bbe8
 80071c8:	20012f7c 	.word	0x20012f7c
 80071cc:	0802ba38 	.word	0x0802ba38
 80071d0:	0802bb3a 	.word	0x0802bb3a
 80071d4:	0802bab5 	.word	0x0802bab5
 80071d8:	0802bafc 	.word	0x0802bafc
 80071dc:	20012f80 	.word	0x20012f80
        return texts->getText(typedTextId);
 80071e0:	4bdf      	ldr	r3, [pc, #892]	; (8007560 <_ZN37Measurement_Single_Display_1PViewBaseC1Ev+0x670>)
 80071e2:	4629      	mov	r1, r5
 80071e4:	6818      	ldr	r0, [r3, #0]
 80071e6:	f000 ffc1 	bl	800816c <_ZNK8touchgfx5Texts7getTextEt>
 80071ea:	4ade      	ldr	r2, [pc, #888]	; (8007564 <_ZN37Measurement_Single_Display_1PViewBaseC1Ev+0x674>)
 80071ec:	4603      	mov	r3, r0
 80071ee:	210a      	movs	r1, #10
 80071f0:	4648      	mov	r0, r9
 80071f2:	f011 fa0d 	bl	8018610 <_ZN8touchgfx7Unicode8snprintfEPttPKcz>
        : typedTextId(id)
 80071f6:	4bdc      	ldr	r3, [pc, #880]	; (8007568 <_ZN37Measurement_Single_Display_1PViewBaseC1Ev+0x678>)
        wc1 = value;
 80071f8:	f8c4 92c8 	str.w	r9, [r4, #712]	; 0x2c8
    SMD1_Current.setTypedText(touchgfx::TypedText(T___SINGLEUSE_Y5P8));
 80071fc:	ee19 0a10 	vmov	r0, s18
 8007200:	930a      	str	r3, [sp, #40]	; 0x28
 8007202:	a90a      	add	r1, sp, #40	; 0x28
 8007204:	2303      	movs	r3, #3
 8007206:	f8ad 302c 	strh.w	r3, [sp, #44]	; 0x2c
 800720a:	f00a ffad 	bl	8012168 <_ZN8touchgfx8TextArea12setTypedTextERKNS_9TypedTextE>
 800720e:	ee19 1a10 	vmov	r1, s18
 8007212:	4630      	mov	r0, r6
 8007214:	f008 fdf4 	bl	800fe00 <_ZN8touchgfx9Container3addERNS_8DrawableE>
    SMD1_Frequency.setPosition(0, 215, 240, 15);
 8007218:	210f      	movs	r1, #15
 800721a:	22d7      	movs	r2, #215	; 0xd7
 800721c:	ee19 0a90 	vmov	r0, s19
 8007220:	9100      	str	r1, [sp, #0]
 8007222:	23f0      	movs	r3, #240	; 0xf0
 8007224:	4629      	mov	r1, r5
 8007226:	f7fb faab 	bl	8002780 <_ZN8touchgfx8Drawable11setPositionEssss>
 800722a:	f8d4 32cc 	ldr.w	r3, [r4, #716]	; 0x2cc
        linespace = space;
 800722e:	f8a4 5300 	strh.w	r5, [r4, #768]	; 0x300
        color = newColor;
 8007232:	f04f 31ff 	mov.w	r1, #4294967295
        boundingArea = calculateBoundingArea();
 8007236:	f8d3 3084 	ldr.w	r3, [r3, #132]	; 0x84
        color = newColor;
 800723a:	f8c4 12fc 	str.w	r1, [r4, #764]	; 0x2fc
        boundingArea = calculateBoundingArea();
 800723e:	4640      	mov	r0, r8
 8007240:	ee19 1a90 	vmov	r1, s19
 8007244:	4798      	blx	r3
 8007246:	e898 0007 	ldmia.w	r8, {r0, r1, r2}
 800724a:	f504 7342 	add.w	r3, r4, #776	; 0x308
 800724e:	e883 0007 	stmia.w	r3, {r0, r1, r2}
        assert(typedTexts != 0 && "TypedText database has not been initialized.");
 8007252:	683b      	ldr	r3, [r7, #0]
    Unicode::snprintf(SMD1_FrequencyBuffer, SMD1_FREQUENCY_SIZE, "%s", touchgfx::TypedText(T___SINGLEUSE_9OHS).getText());
 8007254:	f204 59ac 	addw	r9, r4, #1452	; 0x5ac
 8007258:	2b00      	cmp	r3, #0
 800725a:	d096      	beq.n	800718a <_ZN37Measurement_Single_Display_1PViewBaseC1Ev+0x29a>
        assert(hasValidId() && "typedTextId larger than numberOfTypedTexts.");
 800725c:	f8bb 3000 	ldrh.w	r3, [fp]
 8007260:	2b01      	cmp	r3, #1
 8007262:	d99d      	bls.n	80071a0 <_ZN37Measurement_Single_Display_1PViewBaseC1Ev+0x2b0>
        return texts->getText(typedTextId);
 8007264:	4abe      	ldr	r2, [pc, #760]	; (8007560 <_ZN37Measurement_Single_Display_1PViewBaseC1Ev+0x670>)
 8007266:	2101      	movs	r1, #1
 8007268:	6810      	ldr	r0, [r2, #0]
 800726a:	f000 ff7f 	bl	800816c <_ZNK8touchgfx5Texts7getTextEt>
 800726e:	4abd      	ldr	r2, [pc, #756]	; (8007564 <_ZN37Measurement_Single_Display_1PViewBaseC1Ev+0x674>)
 8007270:	4603      	mov	r3, r0
 8007272:	210a      	movs	r1, #10
 8007274:	4648      	mov	r0, r9
 8007276:	f011 f9cb 	bl	8018610 <_ZN8touchgfx7Unicode8snprintfEPttPKcz>
        : typedTextId(id)
 800727a:	f04f 0104 	mov.w	r1, #4
 800727e:	4bba      	ldr	r3, [pc, #744]	; (8007568 <_ZN37Measurement_Single_Display_1PViewBaseC1Ev+0x678>)
 8007280:	f8c4 9314 	str.w	r9, [r4, #788]	; 0x314
    SMD1_Frequency.setTypedText(touchgfx::TypedText(T___SINGLEUSE_PCCW));
 8007284:	ee19 0a90 	vmov	r0, s19
 8007288:	f8ad 102c 	strh.w	r1, [sp, #44]	; 0x2c
 800728c:	a90a      	add	r1, sp, #40	; 0x28
 800728e:	930a      	str	r3, [sp, #40]	; 0x28
 8007290:	f00a ff6a 	bl	8012168 <_ZN8touchgfx8TextArea12setTypedTextERKNS_9TypedTextE>
 8007294:	ee19 1a90 	vmov	r1, s19
 8007298:	4630      	mov	r0, r6
 800729a:	f008 fdb1 	bl	800fe00 <_ZN8touchgfx9Container3addERNS_8DrawableE>
    SMD1_Distance.setPosition(0, 200, 240, 15);
 800729e:	210f      	movs	r1, #15
 80072a0:	22c8      	movs	r2, #200	; 0xc8
 80072a2:	ee1a 0a10 	vmov	r0, s20
 80072a6:	9100      	str	r1, [sp, #0]
 80072a8:	23f0      	movs	r3, #240	; 0xf0
 80072aa:	4629      	mov	r1, r5
 80072ac:	f7fb fa68 	bl	8002780 <_ZN8touchgfx8Drawable11setPositionEssss>
 80072b0:	f8d4 3318 	ldr.w	r3, [r4, #792]	; 0x318
        linespace = space;
 80072b4:	f8a4 534c 	strh.w	r5, [r4, #844]	; 0x34c
        color = newColor;
 80072b8:	f04f 31ff 	mov.w	r1, #4294967295
        boundingArea = calculateBoundingArea();
 80072bc:	f8d3 3084 	ldr.w	r3, [r3, #132]	; 0x84
        color = newColor;
 80072c0:	f8c4 1348 	str.w	r1, [r4, #840]	; 0x348
        boundingArea = calculateBoundingArea();
 80072c4:	4640      	mov	r0, r8
 80072c6:	ee1a 1a10 	vmov	r1, s20
 80072ca:	4798      	blx	r3
 80072cc:	e898 0007 	ldmia.w	r8, {r0, r1, r2}
 80072d0:	f504 7355 	add.w	r3, r4, #852	; 0x354
 80072d4:	e883 0007 	stmia.w	r3, {r0, r1, r2}
        assert(typedTexts != 0 && "TypedText database has not been initialized.");
 80072d8:	683b      	ldr	r3, [r7, #0]
    Unicode::snprintf(SMD1_DistanceBuffer, SMD1_DISTANCE_SIZE, "%s", touchgfx::TypedText(T___SINGLEUSE_LVUK).getText());
 80072da:	f504 69b8 	add.w	r9, r4, #1472	; 0x5c0
 80072de:	2b00      	cmp	r3, #0
 80072e0:	f43f af53 	beq.w	800718a <_ZN37Measurement_Single_Display_1PViewBaseC1Ev+0x29a>
        assert(hasValidId() && "typedTextId larger than numberOfTypedTexts.");
 80072e4:	f8bb 3000 	ldrh.w	r3, [fp]
 80072e8:	2b02      	cmp	r3, #2
 80072ea:	f67f af59 	bls.w	80071a0 <_ZN37Measurement_Single_Display_1PViewBaseC1Ev+0x2b0>
        return texts->getText(typedTextId);
 80072ee:	4a9c      	ldr	r2, [pc, #624]	; (8007560 <_ZN37Measurement_Single_Display_1PViewBaseC1Ev+0x670>)
        : typedTextId(id)
 80072f0:	4f9d      	ldr	r7, [pc, #628]	; (8007568 <_ZN37Measurement_Single_Display_1PViewBaseC1Ev+0x678>)
        return texts->getText(typedTextId);
 80072f2:	6810      	ldr	r0, [r2, #0]
 80072f4:	2102      	movs	r1, #2
 80072f6:	f000 ff39 	bl	800816c <_ZNK8touchgfx5Texts7getTextEt>
 80072fa:	4a9a      	ldr	r2, [pc, #616]	; (8007564 <_ZN37Measurement_Single_Display_1PViewBaseC1Ev+0x674>)
 80072fc:	4603      	mov	r3, r0
 80072fe:	210a      	movs	r1, #10
 8007300:	4648      	mov	r0, r9
 8007302:	f011 f985 	bl	8018610 <_ZN8touchgfx7Unicode8snprintfEPttPKcz>
        : typedTextId(id)
 8007306:	2305      	movs	r3, #5
    SMD1_Distance.setTypedText(touchgfx::TypedText(T_SMD1_DISTANCE));
 8007308:	ee1a 0a10 	vmov	r0, s20
 800730c:	a90a      	add	r1, sp, #40	; 0x28
 800730e:	f8c4 9360 	str.w	r9, [r4, #864]	; 0x360
 8007312:	f8ad 302c 	strh.w	r3, [sp, #44]	; 0x2c
 8007316:	970a      	str	r7, [sp, #40]	; 0x28
 8007318:	f00a ff26 	bl	8012168 <_ZN8touchgfx8TextArea12setTypedTextERKNS_9TypedTextE>
 800731c:	ee1a 1a10 	vmov	r1, s20
 8007320:	4630      	mov	r0, r6
 8007322:	f008 fd6d 	bl	800fe00 <_ZN8touchgfx9Container3addERNS_8DrawableE>
    textArea4.setXY(113, 76);
 8007326:	224c      	movs	r2, #76	; 0x4c
 8007328:	ee1a 0a90 	vmov	r0, s21
 800732c:	2171      	movs	r1, #113	; 0x71
 800732e:	f7fb fa1a 	bl	8002766 <_ZN8touchgfx8Drawable5setXYEss>
        color = newColor;
 8007332:	f04f 33ff 	mov.w	r3, #4294967295
        boundingArea = calculateBoundingArea();
 8007336:	ee1a 1a90 	vmov	r1, s21
        color = newColor;
 800733a:	f8c4 3394 	str.w	r3, [r4, #916]	; 0x394
        boundingArea = calculateBoundingArea();
 800733e:	4640      	mov	r0, r8
        linespace = space;
 8007340:	f8a4 5398 	strh.w	r5, [r4, #920]	; 0x398
        boundingArea = calculateBoundingArea();
 8007344:	f00a fc76 	bl	8011c34 <_ZNK8touchgfx8TextArea21calculateBoundingAreaEv>
 8007348:	e898 0007 	ldmia.w	r8, {r0, r1, r2}
 800734c:	f504 7368 	add.w	r3, r4, #928	; 0x3a0
 8007350:	e883 0007 	stmia.w	r3, {r0, r1, r2}
 8007354:	2306      	movs	r3, #6
    textArea4.setTypedText(touchgfx::TypedText(T___SINGLEUSE_Q5GP));
 8007356:	ee1a 0a90 	vmov	r0, s21
 800735a:	a90a      	add	r1, sp, #40	; 0x28
 800735c:	f8ad 302c 	strh.w	r3, [sp, #44]	; 0x2c
 8007360:	970a      	str	r7, [sp, #40]	; 0x28
 8007362:	f00a ff01 	bl	8012168 <_ZN8touchgfx8TextArea12setTypedTextERKNS_9TypedTextE>
 8007366:	ee1a 1a90 	vmov	r1, s21
 800736a:	4630      	mov	r0, r6
 800736c:	f008 fd48 	bl	800fe00 <_ZN8touchgfx9Container3addERNS_8DrawableE>
    textArea4_1.setXY(0, 185);
 8007370:	22b9      	movs	r2, #185	; 0xb9
 8007372:	ee1b 0a10 	vmov	r0, s22
 8007376:	4629      	mov	r1, r5
 8007378:	f7fb f9f5 	bl	8002766 <_ZN8touchgfx8Drawable5setXYEss>
        color = newColor;
 800737c:	f04f 33ff 	mov.w	r3, #4294967295
        boundingArea = calculateBoundingArea();
 8007380:	ee1b 1a10 	vmov	r1, s22
        color = newColor;
 8007384:	f8c4 33dc 	str.w	r3, [r4, #988]	; 0x3dc
        boundingArea = calculateBoundingArea();
 8007388:	4640      	mov	r0, r8
        linespace = space;
 800738a:	f8a4 53e0 	strh.w	r5, [r4, #992]	; 0x3e0
        boundingArea = calculateBoundingArea();
 800738e:	f00a fc51 	bl	8011c34 <_ZNK8touchgfx8TextArea21calculateBoundingAreaEv>
 8007392:	e898 0007 	ldmia.w	r8, {r0, r1, r2}
 8007396:	f504 737a 	add.w	r3, r4, #1000	; 0x3e8
 800739a:	e883 0007 	stmia.w	r3, {r0, r1, r2}
 800739e:	2307      	movs	r3, #7
    textArea4_1.setTypedText(touchgfx::TypedText(T___SINGLEUSE_VCZH));
 80073a0:	ee1b 0a10 	vmov	r0, s22
 80073a4:	a90a      	add	r1, sp, #40	; 0x28
 80073a6:	f8ad 302c 	strh.w	r3, [sp, #44]	; 0x2c
 80073aa:	970a      	str	r7, [sp, #40]	; 0x28
 80073ac:	f00a fedc 	bl	8012168 <_ZN8touchgfx8TextArea12setTypedTextERKNS_9TypedTextE>
 80073b0:	ee1b 1a10 	vmov	r1, s22
 80073b4:	4630      	mov	r0, r6
 80073b6:	f008 fd23 	bl	800fe00 <_ZN8touchgfx9Container3addERNS_8DrawableE>
    textArea4_2.setXY(217, 185);
 80073ba:	22b9      	movs	r2, #185	; 0xb9
 80073bc:	ee1b 0a90 	vmov	r0, s23
 80073c0:	21d9      	movs	r1, #217	; 0xd9
 80073c2:	f7fb f9d0 	bl	8002766 <_ZN8touchgfx8Drawable5setXYEss>
        color = newColor;
 80073c6:	f04f 33ff 	mov.w	r3, #4294967295
        boundingArea = calculateBoundingArea();
 80073ca:	ee1b 1a90 	vmov	r1, s23
        color = newColor;
 80073ce:	f8c4 3424 	str.w	r3, [r4, #1060]	; 0x424
        boundingArea = calculateBoundingArea();
 80073d2:	4640      	mov	r0, r8
        linespace = space;
 80073d4:	f8a4 5428 	strh.w	r5, [r4, #1064]	; 0x428
        boundingArea = calculateBoundingArea();
 80073d8:	f00a fc2c 	bl	8011c34 <_ZNK8touchgfx8TextArea21calculateBoundingAreaEv>
 80073dc:	e898 0007 	ldmia.w	r8, {r0, r1, r2}
 80073e0:	f504 6386 	add.w	r3, r4, #1072	; 0x430
 80073e4:	e883 0007 	stmia.w	r3, {r0, r1, r2}
 80073e8:	2308      	movs	r3, #8
    textArea4_2.setTypedText(touchgfx::TypedText(T___SINGLEUSE_B5GD));
 80073ea:	ee1b 0a90 	vmov	r0, s23
 80073ee:	a90a      	add	r1, sp, #40	; 0x28
 80073f0:	f8ad 302c 	strh.w	r3, [sp, #44]	; 0x2c
 80073f4:	970a      	str	r7, [sp, #40]	; 0x28
 80073f6:	f00a feb7 	bl	8012168 <_ZN8touchgfx8TextArea12setTypedTextERKNS_9TypedTextE>
 80073fa:	ee1b 1a90 	vmov	r1, s23
 80073fe:	4630      	mov	r0, r6
 8007400:	f008 fcfe 	bl	800fe00 <_ZN8touchgfx9Container3addERNS_8DrawableE>
    line1.setPosition(0, 50, 240, 10);
 8007404:	230a      	movs	r3, #10
 8007406:	9300      	str	r3, [sp, #0]
 8007408:	2232      	movs	r2, #50	; 0x32
 800740a:	23f0      	movs	r3, #240	; 0xf0
 800740c:	4629      	mov	r1, r5
 800740e:	4650      	mov	r0, sl
 8007410:	f7fb f9b6 	bl	8002780 <_ZN8touchgfx8Drawable11setPositionEssss>
 8007414:	f04f 33ff 	mov.w	r3, #4294967295
        setStart(CWRUtil::toQ5<T>(x), CWRUtil::toQ5<T>(y));
 8007418:	22a0      	movs	r2, #160	; 0xa0
 800741a:	f8c4 34b8 	str.w	r3, [r4, #1208]	; 0x4b8
        color565 = LCD16bpp::getNativeColor(painterColor);
 800741e:	f8a4 34bc 	strh.w	r3, [r4, #1212]	; 0x4bc
 8007422:	9b03      	ldr	r3, [sp, #12]
 8007424:	f8c4 3464 	str.w	r3, [r4, #1124]	; 0x464
 8007428:	4611      	mov	r1, r2
 800742a:	4650      	mov	r0, sl
 800742c:	f00a fa56 	bl	80118dc <_ZN8touchgfx4Line8setStartENS_7CWRUtil2Q5ES2_>
        setEnd(CWRUtil::toQ5<T>(x), CWRUtil::toQ5<T>(y));
 8007430:	22a0      	movs	r2, #160	; 0xa0
 8007432:	f44f 51eb 	mov.w	r1, #7520	; 0x1d60
 8007436:	4650      	mov	r0, sl
 8007438:	f00a fa5b 	bl	80118f2 <_ZN8touchgfx4Line6setEndENS_7CWRUtil2Q5ES2_>
        if (lineWidthQ5 == widthQ5)
 800743c:	f8d4 3478 	ldr.w	r3, [r4, #1144]	; 0x478
 8007440:	2b20      	cmp	r3, #32
 8007442:	d005      	beq.n	8007450 <_ZN37Measurement_Single_Display_1PViewBaseC1Ev+0x560>
        lineWidthQ5 = widthQ5;
 8007444:	2320      	movs	r3, #32
 8007446:	f8c4 3478 	str.w	r3, [r4, #1144]	; 0x478
        updateCachedShape();
 800744a:	4650      	mov	r0, sl
 800744c:	f00a f950 	bl	80116f0 <_ZN8touchgfx4Line17updateCachedShapeEv>
    line1.setLineEndingStyle(touchgfx::Line::ROUND_CAP_ENDING);
 8007450:	4650      	mov	r0, sl
 8007452:	2101      	movs	r1, #1
 8007454:	f00a fa58 	bl	8011908 <_ZN8touchgfx4Line18setLineEndingStyleENS0_17LINE_ENDING_STYLEE>
 8007458:	4651      	mov	r1, sl
 800745a:	4630      	mov	r0, r6
 800745c:	f008 fcd0 	bl	800fe00 <_ZN8touchgfx9Container3addERNS_8DrawableE>
        color = newColor;
 8007460:	f04f 37ff 	mov.w	r7, #4294967295
        boundingArea = calculateBoundingArea();
 8007464:	ad04      	add	r5, sp, #16
    textArea2.setXY(69, 35);
 8007466:	ee18 0a10 	vmov	r0, s16
 800746a:	2223      	movs	r2, #35	; 0x23
        linespace = space;
 800746c:	f04f 0900 	mov.w	r9, #0
 8007470:	2145      	movs	r1, #69	; 0x45
 8007472:	f7fb f978 	bl	8002766 <_ZN8touchgfx8Drawable5setXYEss>
        boundingArea = calculateBoundingArea();
 8007476:	ee18 1a10 	vmov	r1, s16
 800747a:	4628      	mov	r0, r5
        color = newColor;
 800747c:	f8c4 74f0 	str.w	r7, [r4, #1264]	; 0x4f0
        linespace = space;
 8007480:	f8a4 94f4 	strh.w	r9, [r4, #1268]	; 0x4f4
        boundingArea = calculateBoundingArea();
 8007484:	f00a fbd6 	bl	8011c34 <_ZNK8touchgfx8TextArea21calculateBoundingAreaEv>
 8007488:	e895 0007 	ldmia.w	r5, {r0, r1, r2}
 800748c:	ee18 3a10 	vmov	r3, s16
 8007490:	333c      	adds	r3, #60	; 0x3c
 8007492:	e883 0007 	stmia.w	r3, {r0, r1, r2}
 8007496:	f8df 80d0 	ldr.w	r8, [pc, #208]	; 8007568 <_ZN37Measurement_Single_Display_1PViewBaseC1Ev+0x678>
 800749a:	f8cd 8028 	str.w	r8, [sp, #40]	; 0x28
 800749e:	2334      	movs	r3, #52	; 0x34
    textArea2.setTypedText(touchgfx::TypedText(T___SINGLEUSE_9O3K));
 80074a0:	ee18 0a10 	vmov	r0, s16
 80074a4:	a90a      	add	r1, sp, #40	; 0x28
 80074a6:	f8ad 302c 	strh.w	r3, [sp, #44]	; 0x2c
 80074aa:	f00a fe5d 	bl	8012168 <_ZN8touchgfx8TextArea12setTypedTextERKNS_9TypedTextE>
 80074ae:	ee18 1a10 	vmov	r1, s16
 80074b2:	4630      	mov	r0, r6
 80074b4:	f008 fca4 	bl	800fe00 <_ZN8touchgfx9Container3addERNS_8DrawableE>
    textArea1.setXY(54, 12);
 80074b8:	ee18 0a90 	vmov	r0, s17
 80074bc:	220c      	movs	r2, #12
 80074be:	2136      	movs	r1, #54	; 0x36
 80074c0:	f7fb f951 	bl	8002766 <_ZN8touchgfx8Drawable5setXYEss>
 80074c4:	ee18 1a90 	vmov	r1, s17
 80074c8:	4628      	mov	r0, r5
        color = newColor;
 80074ca:	f8c4 7538 	str.w	r7, [r4, #1336]	; 0x538
        linespace = space;
 80074ce:	f8a4 953c 	strh.w	r9, [r4, #1340]	; 0x53c
        boundingArea = calculateBoundingArea();
 80074d2:	f00a fbaf 	bl	8011c34 <_ZNK8touchgfx8TextArea21calculateBoundingAreaEv>
 80074d6:	e895 0007 	ldmia.w	r5, {r0, r1, r2}
 80074da:	ee18 3a90 	vmov	r3, s17
 80074de:	333c      	adds	r3, #60	; 0x3c
 80074e0:	e883 0007 	stmia.w	r3, {r0, r1, r2}
 80074e4:	2333      	movs	r3, #51	; 0x33
    textArea1.setTypedText(touchgfx::TypedText(T___SINGLEUSE_T27V));
 80074e6:	ee18 0a90 	vmov	r0, s17
 80074ea:	a90a      	add	r1, sp, #40	; 0x28
 80074ec:	f8ad 302c 	strh.w	r3, [sp, #44]	; 0x2c
 80074f0:	f8cd 8028 	str.w	r8, [sp, #40]	; 0x28
 80074f4:	f00a fe38 	bl	8012168 <_ZN8touchgfx8TextArea12setTypedTextERKNS_9TypedTextE>
 80074f8:	ee18 1a90 	vmov	r1, s17
 80074fc:	4630      	mov	r0, r6
 80074fe:	f008 fc7f 	bl	800fe00 <_ZN8touchgfx9Container3addERNS_8DrawableE>
    buttonWithLabel3.setXY(33, 256);
 8007502:	ee1c 0a10 	vmov	r0, s24
 8007506:	f44f 7280 	mov.w	r2, #256	; 0x100
 800750a:	2121      	movs	r1, #33	; 0x21
 800750c:	f7fb f92b 	bl	8002766 <_ZN8touchgfx8Drawable5setXYEss>
 8007510:	2303      	movs	r3, #3
    buttonWithLabel3.setBitmaps(touchgfx::Bitmap(BITMAP_ALTERNATE_THEME_IMAGES_WIDGETS_BUTTON_REGULAR_HEIGHT_50_SMALL_ROUND_PRESSED_ID), touchgfx::Bitmap(BITMAP_ALTERNATE_THEME_IMAGES_WIDGETS_BUTTON_REGULAR_HEIGHT_50_SMALL_ROUND_NORMAL_ID));
 8007512:	aa0a      	add	r2, sp, #40	; 0x28
 8007514:	a909      	add	r1, sp, #36	; 0x24
 8007516:	ee1c 0a10 	vmov	r0, s24
 800751a:	f8ad 3024 	strh.w	r3, [sp, #36]	; 0x24
 800751e:	2302      	movs	r3, #2
 8007520:	f8ad 3028 	strh.w	r3, [sp, #40]	; 0x28
 8007524:	f00b f805 	bl	8012532 <_ZN8touchgfx6Button10setBitmapsERKNS_6BitmapES3_>
class TypedText
 8007528:	2332      	movs	r3, #50	; 0x32
        updateTextPosition();
 800752a:	ee1c 0a10 	vmov	r0, s24
 800752e:	f8a4 3588 	strh.w	r3, [r4, #1416]	; 0x588
 8007532:	f7fb f96d 	bl	8002810 <_ZN8touchgfx15ButtonWithLabel18updateTextPositionEv>
    buttonWithLabel3.setAction(buttonCallback);
 8007536:	f504 539f 	add.w	r3, r4, #5088	; 0x13e0
 800753a:	3304      	adds	r3, #4
 800753c:	4630      	mov	r0, r6
 800753e:	ee1c 1a10 	vmov	r1, s24
        color = col;
 8007542:	f8c4 758c 	str.w	r7, [r4, #1420]	; 0x58c
        colorPressed = col;
 8007546:	f8c4 7590 	str.w	r7, [r4, #1424]	; 0x590
 800754a:	f8c4 3578 	str.w	r3, [r4, #1400]	; 0x578
 800754e:	f008 fc57 	bl	800fe00 <_ZN8touchgfx9Container3addERNS_8DrawableE>
}
 8007552:	4620      	mov	r0, r4
 8007554:	b00d      	add	sp, #52	; 0x34
 8007556:	ecbd 8b0a 	vpop	{d8-d12}
 800755a:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
 800755e:	bf00      	nop
 8007560:	20012f88 	.word	0x20012f88
 8007564:	0802bb72 	.word	0x0802bb72
 8007568:	0802bbe8 	.word	0x0802bbe8

0800756c <_ZN8touchgfx8CallbackI37Measurement_Single_Display_3PViewBaseRKNS_14AbstractButtonEvvED1Ev>:
struct Callback<dest_type, T1, void, void> : public GenericCallback<T1>
 800756c:	4770      	bx	lr

0800756e <_ZN8touchgfx8CallbackI37Measurement_Single_Display_3PViewBaseRKNS_14AbstractButtonEvvE7executeES4_>:
    virtual void execute(T1 t1)
 800756e:	b430      	push	{r4, r5}
        (pobject->*pmemfun)(t1);
 8007570:	68c2      	ldr	r2, [r0, #12]
 8007572:	6844      	ldr	r4, [r0, #4]
 8007574:	1055      	asrs	r5, r2, #1
    virtual void execute(T1 t1)
 8007576:	4603      	mov	r3, r0
        (pobject->*pmemfun)(t1);
 8007578:	eb04 0062 	add.w	r0, r4, r2, asr #1
 800757c:	07d2      	lsls	r2, r2, #31
 800757e:	bf48      	it	mi
 8007580:	5962      	ldrmi	r2, [r4, r5]
 8007582:	689b      	ldr	r3, [r3, #8]
    }
 8007584:	bc30      	pop	{r4, r5}
        (pobject->*pmemfun)(t1);
 8007586:	bf48      	it	mi
 8007588:	58d3      	ldrmi	r3, [r2, r3]
 800758a:	4718      	bx	r3

0800758c <_ZNK8touchgfx8CallbackI37Measurement_Single_Display_3PViewBaseRKNS_14AbstractButtonEvvE7isValidEv>:
        return (pobject != 0) && (pmemfun != 0);
 800758c:	6843      	ldr	r3, [r0, #4]
 800758e:	b12b      	cbz	r3, 800759c <_ZNK8touchgfx8CallbackI37Measurement_Single_Display_3PViewBaseRKNS_14AbstractButtonEvvE7isValidEv+0x10>
 8007590:	6883      	ldr	r3, [r0, #8]
 8007592:	b92b      	cbnz	r3, 80075a0 <_ZNK8touchgfx8CallbackI37Measurement_Single_Display_3PViewBaseRKNS_14AbstractButtonEvvE7isValidEv+0x14>
 8007594:	68c0      	ldr	r0, [r0, #12]
 8007596:	f000 0001 	and.w	r0, r0, #1
 800759a:	4770      	bx	lr
 800759c:	4618      	mov	r0, r3
 800759e:	4770      	bx	lr
 80075a0:	2001      	movs	r0, #1
    }
 80075a2:	4770      	bx	lr

080075a4 <_ZN8touchgfx8CallbackI37Measurement_Single_Display_3PViewBaseRKNS_14AbstractButtonEvvED0Ev>:
struct Callback<dest_type, T1, void, void> : public GenericCallback<T1>
 80075a4:	b510      	push	{r4, lr}
 80075a6:	2110      	movs	r1, #16
 80075a8:	4604      	mov	r4, r0
 80075aa:	f021 ff38 	bl	802941e <_ZdlPvj>
 80075ae:	4620      	mov	r0, r4
 80075b0:	bd10      	pop	{r4, pc}

080075b2 <_ZN37Measurement_Single_Display_3PViewBase11setupScreenEv>:
    touchgfx::CanvasWidgetRenderer::resetBuffer();
}

void Measurement_Single_Display_3PViewBase::setupScreen()
{
    gauge_with_Values1.initialize();
 80075b2:	f500 700f 	add.w	r0, r0, #572	; 0x23c
 80075b6:	f000 bf21 	b.w	80083fc <_ZN17Gauge_with_Values10initializeEv>

080075ba <_ZN37Measurement_Single_Display_3PViewBase21buttonCallbackHandlerERKN8touchgfx14AbstractButtonE>:
}

void Measurement_Single_Display_3PViewBase::buttonCallbackHandler(const touchgfx::AbstractButton& src)
{
    if (&src == &buttonWithLabel3)
 80075ba:	f500 70fa 	add.w	r0, r0, #500	; 0x1f4
 80075be:	4288      	cmp	r0, r1
{
 80075c0:	b508      	push	{r3, lr}
    if (&src == &buttonWithLabel3)
 80075c2:	d105      	bne.n	80075d0 <_ZN37Measurement_Single_Display_3PViewBase21buttonCallbackHandlerERKN8touchgfx14AbstractButtonE+0x16>
    virtual ~Measurement_Single_Display_3PViewBase();
    virtual void setupScreen();

protected:
    FrontendApplication& application() {
        return *static_cast<FrontendApplication*>(touchgfx::Application::getInstance());
 80075c4:	f00d feb4 	bl	8015330 <_ZN8touchgfx11Application11getInstanceEv>
        //Interaction1
        //When buttonWithLabel3 clicked change screen to Measurement_Single
        //Go to Measurement_Single with screen transition towards East
        application().gotoMeasurement_SingleScreenWipeTransitionEast();
    }
}
 80075c8:	e8bd 4008 	ldmia.w	sp!, {r3, lr}
        application().gotoMeasurement_SingleScreenWipeTransitionEast();
 80075cc:	f7fc ba02 	b.w	80039d4 <_ZN23FrontendApplicationBase46gotoMeasurement_SingleScreenWipeTransitionEastEv>
}
 80075d0:	bd08      	pop	{r3, pc}
	...

080075d4 <_ZN37Measurement_Single_Display_3PViewBaseD1Ev>:
Measurement_Single_Display_3PViewBase::~Measurement_Single_Display_3PViewBase()
 80075d4:	b510      	push	{r4, lr}
 80075d6:	4b07      	ldr	r3, [pc, #28]	; (80075f4 <_ZN37Measurement_Single_Display_3PViewBaseD1Ev+0x20>)
 80075d8:	6003      	str	r3, [r0, #0]
 80075da:	4604      	mov	r4, r0
    touchgfx::CanvasWidgetRenderer::resetBuffer();
 80075dc:	f00c f9a6 	bl	801392c <_ZN8touchgfx20CanvasWidgetRenderer11resetBufferEv>
 80075e0:	4b05      	ldr	r3, [pc, #20]	; (80075f8 <_ZN37Measurement_Single_Display_3PViewBaseD1Ev+0x24>)
 80075e2:	f8c4 323c 	str.w	r3, [r4, #572]	; 0x23c
 80075e6:	f504 700f 	add.w	r0, r4, #572	; 0x23c
 80075ea:	f7fd fc89 	bl	8004f00 <_ZN21Gauge_with_ValuesBaseD1Ev>
}
 80075ee:	4620      	mov	r0, r4
 80075f0:	bd10      	pop	{r4, pc}
 80075f2:	bf00      	nop
 80075f4:	0802d798 	.word	0x0802d798
 80075f8:	0802dbbc 	.word	0x0802dbbc

080075fc <_ZN37Measurement_Single_Display_3PViewBaseD0Ev>:
Measurement_Single_Display_3PViewBase::~Measurement_Single_Display_3PViewBase()
 80075fc:	b510      	push	{r4, lr}
 80075fe:	4604      	mov	r4, r0
}
 8007600:	f7ff ffe8 	bl	80075d4 <_ZN37Measurement_Single_Display_3PViewBaseD1Ev>
 8007604:	4620      	mov	r0, r4
 8007606:	f241 31e4 	movw	r1, #5092	; 0x13e4
 800760a:	f021 ff08 	bl	802941e <_ZdlPvj>
 800760e:	4620      	mov	r0, r4
 8007610:	bd10      	pop	{r4, pc}
	...

08007614 <_ZN37Measurement_Single_Display_3PViewBaseC1Ev>:
Measurement_Single_Display_3PViewBase::Measurement_Single_Display_3PViewBase() :
 8007614:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 8007618:	ed2d 8b04 	vpush	{d8-d9}
 800761c:	4604      	mov	r4, r0
 800761e:	b08d      	sub	sp, #52	; 0x34
    buttonCallback(this, &Measurement_Single_Display_3PViewBase::buttonCallbackHandler)
 8007620:	46a3      	mov	fp, r4
 8007622:	2500      	movs	r5, #0
 8007624:	f00f fb04 	bl	8016c30 <_ZN8touchgfx6ScreenC1Ev>
 8007628:	4bae      	ldr	r3, [pc, #696]	; (80078e4 <_ZN37Measurement_Single_Display_3PViewBaseC1Ev+0x2d0>)
 800762a:	63e5      	str	r5, [r4, #60]	; 0x3c
 800762c:	f84b 3b40 	str.w	r3, [fp], #64
        : Widget(), alpha(255), color(0)
 8007630:	2226      	movs	r2, #38	; 0x26
 8007632:	4629      	mov	r1, r5
 8007634:	4658      	mov	r0, fp
 8007636:	f022 ff0a 	bl	802a44e <memset>
 800763a:	4658      	mov	r0, fp
 800763c:	f7fb f8b4 	bl	80027a8 <_ZN8touchgfx6WidgetC1Ev>
 8007640:	f104 0a6c 	add.w	sl, r4, #108	; 0x6c
 8007644:	26ff      	movs	r6, #255	; 0xff
 8007646:	4ba8      	ldr	r3, [pc, #672]	; (80078e8 <_ZN37Measurement_Single_Display_3PViewBaseC1Ev+0x2d4>)
 8007648:	6423      	str	r3, [r4, #64]	; 0x40
        : Widget(), bitmap(bmp), alpha(255)
 800764a:	2226      	movs	r2, #38	; 0x26
 800764c:	f64f 73ff 	movw	r3, #65535	; 0xffff
 8007650:	4629      	mov	r1, r5
 8007652:	f884 6066 	strb.w	r6, [r4, #102]	; 0x66
 8007656:	66a5      	str	r5, [r4, #104]	; 0x68
 8007658:	4650      	mov	r0, sl
 800765a:	f8ad 3028 	strh.w	r3, [sp, #40]	; 0x28
 800765e:	f022 fef6 	bl	802a44e <memset>
 8007662:	4650      	mov	r0, sl
 8007664:	f7fb f8a0 	bl	80027a8 <_ZN8touchgfx6WidgetC1Ev>
 8007668:	4ba0      	ldr	r3, [pc, #640]	; (80078ec <_ZN37Measurement_Single_Display_3PViewBaseC1Ev+0x2d8>)
 800766a:	66e3      	str	r3, [r4, #108]	; 0x6c
 800766c:	f8bd 3028 	ldrh.w	r3, [sp, #40]	; 0x28
 8007670:	f8a4 3092 	strh.w	r3, [r4, #146]	; 0x92
        Image::setBitmap(bmp);
 8007674:	a90a      	add	r1, sp, #40	; 0x28
 8007676:	f104 0798 	add.w	r7, r4, #152	; 0x98
        : Widget(), bitmap(bmp), alpha(255)
 800767a:	f884 6094 	strb.w	r6, [r4, #148]	; 0x94
        Image::setBitmap(bmp);
 800767e:	4650      	mov	r0, sl
 8007680:	f00b f94d 	bl	801291e <_ZN8touchgfx5Image9setBitmapERKNS_6BitmapE>
 8007684:	4638      	mov	r0, r7
 8007686:	f00a f813 	bl	80116b0 <_ZN8touchgfx4LineC1Ev>
 800768a:	f504 7384 	add.w	r3, r4, #264	; 0x108
        : AbstractPainterRGB565(), AbstractPainterColor(color)
 800768e:	4618      	mov	r0, r3
 8007690:	9303      	str	r3, [sp, #12]
 8007692:	f7f9 fcd9 	bl	8001048 <_ZN8touchgfx21AbstractPainterRGB565C1Ev>
 8007696:	4b96      	ldr	r3, [pc, #600]	; (80078f0 <_ZN37Measurement_Single_Display_3PViewBaseC1Ev+0x2dc>)
 8007698:	f8c4 3108 	str.w	r3, [r4, #264]	; 0x108
 800769c:	f504 798e 	add.w	r9, r4, #284	; 0x11c
 80076a0:	3324      	adds	r3, #36	; 0x24
 80076a2:	f8c4 3110 	str.w	r3, [r4, #272]	; 0x110
 80076a6:	f8c4 5114 	str.w	r5, [r4, #276]	; 0x114
 80076aa:	4648      	mov	r0, r9
 80076ac:	f504 78b2 	add.w	r8, r4, #356	; 0x164
 80076b0:	f7fb f88c 	bl	80027cc <_ZN8touchgfx8TextAreaC1Ev>
 80076b4:	4640      	mov	r0, r8
 80076b6:	f7fb f889 	bl	80027cc <_ZN8touchgfx8TextAreaC1Ev>
 80076ba:	f504 73d6 	add.w	r3, r4, #428	; 0x1ac
 80076be:	4618      	mov	r0, r3
 80076c0:	ee08 3a10 	vmov	s16, r3
 80076c4:	f7fb f882 	bl	80027cc <_ZN8touchgfx8TextAreaC1Ev>
 80076c8:	f504 73fa 	add.w	r3, r4, #500	; 0x1f4
 80076cc:	4618      	mov	r0, r3
 80076ce:	ee08 3a90 	vmov	s17, r3
 80076d2:	f00b fa65 	bl	8012ba0 <_ZN8touchgfx15ButtonWithLabelC1Ev>
 80076d6:	f504 730f 	add.w	r3, r4, #572	; 0x23c
 80076da:	4618      	mov	r0, r3
 80076dc:	ee09 3a10 	vmov	s18, r3
 80076e0:	f000 fe82 	bl	80083e8 <_ZN17Gauge_with_ValuesC1Ev>
        : pobject(pObject), pmemfun(pmemfun_1)
 80076e4:	4a83      	ldr	r2, [pc, #524]	; (80078f4 <_ZN37Measurement_Single_Display_3PViewBaseC1Ev+0x2e0>)
 80076e6:	f504 5380 	add.w	r3, r4, #4096	; 0x1000
 80076ea:	e9c3 24f5 	strd	r2, r4, [r3, #980]	; 0x3d4
 80076ee:	4a82      	ldr	r2, [pc, #520]	; (80078f8 <_ZN37Measurement_Single_Display_3PViewBaseC1Ev+0x2e4>)
    touchgfx::CanvasWidgetRenderer::setupBuffer(canvasBuffer, CANVAS_BUFFER_SIZE);
 80076f0:	f44f 6161 	mov.w	r1, #3600	; 0xe10
 80076f4:	e9c3 25f7 	strd	r2, r5, [r3, #988]	; 0x3dc
 80076f8:	f204 50c4 	addw	r0, r4, #1476	; 0x5c4
 80076fc:	f00c f90c 	bl	8013918 <_ZN8touchgfx20CanvasWidgetRenderer11setupBufferEPhj>
    __background.setPosition(0, 0, 240, 320);
 8007700:	f44f 73a0 	mov.w	r3, #320	; 0x140
 8007704:	462a      	mov	r2, r5
 8007706:	9300      	str	r3, [sp, #0]
 8007708:	4629      	mov	r1, r5
 800770a:	23f0      	movs	r3, #240	; 0xf0
 800770c:	4658      	mov	r0, fp
 800770e:	f7fb f837 	bl	8002780 <_ZN8touchgfx8Drawable11setPositionEssss>
 8007712:	1d26      	adds	r6, r4, #4
        color = newColor;
 8007714:	f04f 437f 	mov.w	r3, #4278190080	; 0xff000000
 8007718:	66a3      	str	r3, [r4, #104]	; 0x68
 800771a:	4659      	mov	r1, fp
 800771c:	4630      	mov	r0, r6
 800771e:	f008 fb6f 	bl	800fe00 <_ZN8touchgfx9Container3addERNS_8DrawableE>
    image1.setXY(0, 0);
 8007722:	462a      	mov	r2, r5
 8007724:	4629      	mov	r1, r5
 8007726:	4650      	mov	r0, sl
 8007728:	f7fb f81d 	bl	8002766 <_ZN8touchgfx8Drawable5setXYEss>
 800772c:	2309      	movs	r3, #9
    image1.setBitmap(touchgfx::Bitmap(BITMAP_BACKGROUND_2_RESIZED_4_ID));
 800772e:	a90a      	add	r1, sp, #40	; 0x28
 8007730:	4650      	mov	r0, sl
 8007732:	f8ad 3028 	strh.w	r3, [sp, #40]	; 0x28
 8007736:	f00b f8f2 	bl	801291e <_ZN8touchgfx5Image9setBitmapERKNS_6BitmapE>
 800773a:	4651      	mov	r1, sl
 800773c:	4630      	mov	r0, r6
 800773e:	f008 fb5f 	bl	800fe00 <_ZN8touchgfx9Container3addERNS_8DrawableE>
    line1.setPosition(0, 50, 240, 10);
 8007742:	230a      	movs	r3, #10
 8007744:	9300      	str	r3, [sp, #0]
 8007746:	2232      	movs	r2, #50	; 0x32
 8007748:	23f0      	movs	r3, #240	; 0xf0
 800774a:	4629      	mov	r1, r5
 800774c:	4638      	mov	r0, r7
 800774e:	f7fb f817 	bl	8002780 <_ZN8touchgfx8Drawable11setPositionEssss>
 8007752:	f04f 33ff 	mov.w	r3, #4294967295
        setStart(CWRUtil::toQ5<T>(x), CWRUtil::toQ5<T>(y));
 8007756:	22a0      	movs	r2, #160	; 0xa0
 8007758:	f8c4 3114 	str.w	r3, [r4, #276]	; 0x114
        color565 = LCD16bpp::getNativeColor(painterColor);
 800775c:	f8a4 3118 	strh.w	r3, [r4, #280]	; 0x118
 8007760:	9b03      	ldr	r3, [sp, #12]
 8007762:	f8c4 30c0 	str.w	r3, [r4, #192]	; 0xc0
 8007766:	4611      	mov	r1, r2
 8007768:	4638      	mov	r0, r7
 800776a:	f00a f8b7 	bl	80118dc <_ZN8touchgfx4Line8setStartENS_7CWRUtil2Q5ES2_>
        setEnd(CWRUtil::toQ5<T>(x), CWRUtil::toQ5<T>(y));
 800776e:	22a0      	movs	r2, #160	; 0xa0
 8007770:	f44f 51eb 	mov.w	r1, #7520	; 0x1d60
 8007774:	4638      	mov	r0, r7
 8007776:	f00a f8bc 	bl	80118f2 <_ZN8touchgfx4Line6setEndENS_7CWRUtil2Q5ES2_>
        if (lineWidthQ5 == widthQ5)
 800777a:	f8d4 30d4 	ldr.w	r3, [r4, #212]	; 0xd4
 800777e:	2b20      	cmp	r3, #32
 8007780:	d005      	beq.n	800778e <_ZN37Measurement_Single_Display_3PViewBaseC1Ev+0x17a>
        lineWidthQ5 = widthQ5;
 8007782:	2320      	movs	r3, #32
 8007784:	f8c4 30d4 	str.w	r3, [r4, #212]	; 0xd4
        updateCachedShape();
 8007788:	4638      	mov	r0, r7
 800778a:	f009 ffb1 	bl	80116f0 <_ZN8touchgfx4Line17updateCachedShapeEv>
    line1.setLineEndingStyle(touchgfx::Line::ROUND_CAP_ENDING);
 800778e:	4638      	mov	r0, r7
 8007790:	2101      	movs	r1, #1
 8007792:	f00a f8b9 	bl	8011908 <_ZN8touchgfx4Line18setLineEndingStyleENS0_17LINE_ENDING_STYLEE>
 8007796:	4639      	mov	r1, r7
 8007798:	4630      	mov	r0, r6
 800779a:	ad04      	add	r5, sp, #16
 800779c:	f008 fb30 	bl	800fe00 <_ZN8touchgfx9Container3addERNS_8DrawableE>
        color = newColor;
 80077a0:	f04f 37ff 	mov.w	r7, #4294967295
        linespace = space;
 80077a4:	f04f 0a00 	mov.w	sl, #0
    textArea2.setXY(69, 35);
 80077a8:	2223      	movs	r2, #35	; 0x23
 80077aa:	4648      	mov	r0, r9
 80077ac:	2145      	movs	r1, #69	; 0x45
 80077ae:	f7fa ffda 	bl	8002766 <_ZN8touchgfx8Drawable5setXYEss>
        boundingArea = calculateBoundingArea();
 80077b2:	4649      	mov	r1, r9
 80077b4:	4628      	mov	r0, r5
        color = newColor;
 80077b6:	f8c4 714c 	str.w	r7, [r4, #332]	; 0x14c
        linespace = space;
 80077ba:	f8a4 a150 	strh.w	sl, [r4, #336]	; 0x150
        boundingArea = calculateBoundingArea();
 80077be:	f00a fa39 	bl	8011c34 <_ZNK8touchgfx8TextArea21calculateBoundingAreaEv>
 80077c2:	e895 0007 	ldmia.w	r5, {r0, r1, r2}
 80077c6:	f109 033c 	add.w	r3, r9, #60	; 0x3c
 80077ca:	e883 0007 	stmia.w	r3, {r0, r1, r2}
        : typedTextId(id)
 80077ce:	f8df b12c 	ldr.w	fp, [pc, #300]	; 80078fc <_ZN37Measurement_Single_Display_3PViewBaseC1Ev+0x2e8>
 80077d2:	f8cd b028 	str.w	fp, [sp, #40]	; 0x28
 80077d6:	2337      	movs	r3, #55	; 0x37
    textArea2.setTypedText(touchgfx::TypedText(T___SINGLEUSE_DCTT));
 80077d8:	a90a      	add	r1, sp, #40	; 0x28
 80077da:	4648      	mov	r0, r9
 80077dc:	f8ad 302c 	strh.w	r3, [sp, #44]	; 0x2c
 80077e0:	f00a fcc2 	bl	8012168 <_ZN8touchgfx8TextArea12setTypedTextERKNS_9TypedTextE>
 80077e4:	4649      	mov	r1, r9
 80077e6:	4630      	mov	r0, r6
 80077e8:	f008 fb0a 	bl	800fe00 <_ZN8touchgfx9Container3addERNS_8DrawableE>
    textArea3.setXY(31, 60);
 80077ec:	223c      	movs	r2, #60	; 0x3c
 80077ee:	4640      	mov	r0, r8
 80077f0:	211f      	movs	r1, #31
 80077f2:	f7fa ffb8 	bl	8002766 <_ZN8touchgfx8Drawable5setXYEss>
 80077f6:	4641      	mov	r1, r8
 80077f8:	4628      	mov	r0, r5
        color = newColor;
 80077fa:	f8c4 7194 	str.w	r7, [r4, #404]	; 0x194
        linespace = space;
 80077fe:	f8a4 a198 	strh.w	sl, [r4, #408]	; 0x198
        boundingArea = calculateBoundingArea();
 8007802:	f00a fa17 	bl	8011c34 <_ZNK8touchgfx8TextArea21calculateBoundingAreaEv>
 8007806:	e895 0007 	ldmia.w	r5, {r0, r1, r2}
 800780a:	f108 033c 	add.w	r3, r8, #60	; 0x3c
 800780e:	e883 0007 	stmia.w	r3, {r0, r1, r2}
 8007812:	2326      	movs	r3, #38	; 0x26
    textArea3.setTypedText(touchgfx::TypedText(T___SINGLEUSE_0LJ7));
 8007814:	a90a      	add	r1, sp, #40	; 0x28
 8007816:	4640      	mov	r0, r8
 8007818:	f8ad 302c 	strh.w	r3, [sp, #44]	; 0x2c
 800781c:	f8cd b028 	str.w	fp, [sp, #40]	; 0x28
 8007820:	f00a fca2 	bl	8012168 <_ZN8touchgfx8TextArea12setTypedTextERKNS_9TypedTextE>
 8007824:	4641      	mov	r1, r8
 8007826:	4630      	mov	r0, r6
 8007828:	f008 faea 	bl	800fe00 <_ZN8touchgfx9Container3addERNS_8DrawableE>
    textArea1.setXY(54, 12);
 800782c:	ee18 0a10 	vmov	r0, s16
 8007830:	220c      	movs	r2, #12
 8007832:	2136      	movs	r1, #54	; 0x36
 8007834:	f7fa ff97 	bl	8002766 <_ZN8touchgfx8Drawable5setXYEss>
 8007838:	ee18 1a10 	vmov	r1, s16
 800783c:	4628      	mov	r0, r5
        color = newColor;
 800783e:	f8c4 71dc 	str.w	r7, [r4, #476]	; 0x1dc
        linespace = space;
 8007842:	f8a4 a1e0 	strh.w	sl, [r4, #480]	; 0x1e0
        boundingArea = calculateBoundingArea();
 8007846:	f00a f9f5 	bl	8011c34 <_ZNK8touchgfx8TextArea21calculateBoundingAreaEv>
 800784a:	e895 0007 	ldmia.w	r5, {r0, r1, r2}
 800784e:	ee18 3a10 	vmov	r3, s16
 8007852:	333c      	adds	r3, #60	; 0x3c
 8007854:	e883 0007 	stmia.w	r3, {r0, r1, r2}
 8007858:	2336      	movs	r3, #54	; 0x36
    textArea1.setTypedText(touchgfx::TypedText(T___SINGLEUSE_SPOY));
 800785a:	ee18 0a10 	vmov	r0, s16
 800785e:	a90a      	add	r1, sp, #40	; 0x28
 8007860:	f8ad 302c 	strh.w	r3, [sp, #44]	; 0x2c
 8007864:	f8cd b028 	str.w	fp, [sp, #40]	; 0x28
 8007868:	f00a fc7e 	bl	8012168 <_ZN8touchgfx8TextArea12setTypedTextERKNS_9TypedTextE>
 800786c:	ee18 1a10 	vmov	r1, s16
 8007870:	4630      	mov	r0, r6
 8007872:	f008 fac5 	bl	800fe00 <_ZN8touchgfx9Container3addERNS_8DrawableE>
    buttonWithLabel3.setXY(33, 257);
 8007876:	ee18 0a90 	vmov	r0, s17
 800787a:	f240 1201 	movw	r2, #257	; 0x101
 800787e:	2121      	movs	r1, #33	; 0x21
 8007880:	f7fa ff71 	bl	8002766 <_ZN8touchgfx8Drawable5setXYEss>
 8007884:	2303      	movs	r3, #3
    buttonWithLabel3.setBitmaps(touchgfx::Bitmap(BITMAP_ALTERNATE_THEME_IMAGES_WIDGETS_BUTTON_REGULAR_HEIGHT_50_SMALL_ROUND_PRESSED_ID), touchgfx::Bitmap(BITMAP_ALTERNATE_THEME_IMAGES_WIDGETS_BUTTON_REGULAR_HEIGHT_50_SMALL_ROUND_NORMAL_ID));
 8007886:	aa0a      	add	r2, sp, #40	; 0x28
 8007888:	a909      	add	r1, sp, #36	; 0x24
 800788a:	ee18 0a90 	vmov	r0, s17
 800788e:	f8ad 3024 	strh.w	r3, [sp, #36]	; 0x24
 8007892:	2302      	movs	r3, #2
 8007894:	f8ad 3028 	strh.w	r3, [sp, #40]	; 0x28
 8007898:	f00a fe4b 	bl	8012532 <_ZN8touchgfx6Button10setBitmapsERKNS_6BitmapES3_>
class TypedText
 800789c:	2335      	movs	r3, #53	; 0x35
        updateTextPosition();
 800789e:	ee18 0a90 	vmov	r0, s17
 80078a2:	f8a4 322c 	strh.w	r3, [r4, #556]	; 0x22c
 80078a6:	f7fa ffb3 	bl	8002810 <_ZN8touchgfx15ButtonWithLabel18updateTextPositionEv>
    buttonWithLabel3.setAction(buttonCallback);
 80078aa:	f504 539e 	add.w	r3, r4, #5056	; 0x13c0
 80078ae:	3314      	adds	r3, #20
 80078b0:	f8c4 321c 	str.w	r3, [r4, #540]	; 0x21c
 80078b4:	ee18 1a90 	vmov	r1, s17
 80078b8:	4630      	mov	r0, r6
        colorPressed = col;
 80078ba:	e9c4 778c 	strd	r7, r7, [r4, #560]	; 0x230
 80078be:	f008 fa9f 	bl	800fe00 <_ZN8touchgfx9Container3addERNS_8DrawableE>
    gauge_with_Values1.setXY(0, 78);
 80078c2:	ee19 0a10 	vmov	r0, s18
 80078c6:	224e      	movs	r2, #78	; 0x4e
 80078c8:	4651      	mov	r1, sl
 80078ca:	f7fa ff4c 	bl	8002766 <_ZN8touchgfx8Drawable5setXYEss>
 80078ce:	4630      	mov	r0, r6
 80078d0:	ee19 1a10 	vmov	r1, s18
 80078d4:	f008 fa94 	bl	800fe00 <_ZN8touchgfx9Container3addERNS_8DrawableE>
}
 80078d8:	4620      	mov	r0, r4
 80078da:	b00d      	add	sp, #52	; 0x34
 80078dc:	ecbd 8b04 	vpop	{d8-d9}
 80078e0:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
 80078e4:	0802d798 	.word	0x0802d798
 80078e8:	0802e540 	.word	0x0802e540
 80078ec:	0802e708 	.word	0x0802e708
 80078f0:	0802e274 	.word	0x0802e274
 80078f4:	0802d780 	.word	0x0802d780
 80078f8:	080075bb 	.word	0x080075bb
 80078fc:	0802bbe8 	.word	0x0802bbe8

08007900 <_ZN20Project_InfoViewBase11setupScreenEv>:
}

void Project_InfoViewBase::setupScreen()
{

}
 8007900:	4770      	bx	lr

08007902 <_ZN8touchgfx8CallbackI20Project_InfoViewBaseRKNS_14AbstractButtonEvvED1Ev>:
struct Callback<dest_type, T1, void, void> : public GenericCallback<T1>
 8007902:	4770      	bx	lr

08007904 <_ZN8touchgfx8CallbackI20Project_InfoViewBaseRKNS_14AbstractButtonEvvE7executeES4_>:
    virtual void execute(T1 t1)
 8007904:	b430      	push	{r4, r5}
        (pobject->*pmemfun)(t1);
 8007906:	68c2      	ldr	r2, [r0, #12]
 8007908:	6844      	ldr	r4, [r0, #4]
 800790a:	1055      	asrs	r5, r2, #1
    virtual void execute(T1 t1)
 800790c:	4603      	mov	r3, r0
        (pobject->*pmemfun)(t1);
 800790e:	eb04 0062 	add.w	r0, r4, r2, asr #1
 8007912:	07d2      	lsls	r2, r2, #31
 8007914:	bf48      	it	mi
 8007916:	5962      	ldrmi	r2, [r4, r5]
 8007918:	689b      	ldr	r3, [r3, #8]
    }
 800791a:	bc30      	pop	{r4, r5}
        (pobject->*pmemfun)(t1);
 800791c:	bf48      	it	mi
 800791e:	58d3      	ldrmi	r3, [r2, r3]
 8007920:	4718      	bx	r3

08007922 <_ZNK8touchgfx8CallbackI20Project_InfoViewBaseRKNS_14AbstractButtonEvvE7isValidEv>:
        return (pobject != 0) && (pmemfun != 0);
 8007922:	6843      	ldr	r3, [r0, #4]
 8007924:	b12b      	cbz	r3, 8007932 <_ZNK8touchgfx8CallbackI20Project_InfoViewBaseRKNS_14AbstractButtonEvvE7isValidEv+0x10>
 8007926:	6883      	ldr	r3, [r0, #8]
 8007928:	b92b      	cbnz	r3, 8007936 <_ZNK8touchgfx8CallbackI20Project_InfoViewBaseRKNS_14AbstractButtonEvvE7isValidEv+0x14>
 800792a:	68c0      	ldr	r0, [r0, #12]
 800792c:	f000 0001 	and.w	r0, r0, #1
 8007930:	4770      	bx	lr
 8007932:	4618      	mov	r0, r3
 8007934:	4770      	bx	lr
 8007936:	2001      	movs	r0, #1
    }
 8007938:	4770      	bx	lr

0800793a <_ZN8touchgfx8CallbackI20Project_InfoViewBaseRKNS_14AbstractButtonEvvED0Ev>:
struct Callback<dest_type, T1, void, void> : public GenericCallback<T1>
 800793a:	b510      	push	{r4, lr}
 800793c:	2110      	movs	r1, #16
 800793e:	4604      	mov	r4, r0
 8007940:	f021 fd6d 	bl	802941e <_ZdlPvj>
 8007944:	4620      	mov	r0, r4
 8007946:	bd10      	pop	{r4, pc}

08007948 <_ZN20Project_InfoViewBaseD1Ev>:
Project_InfoViewBase::~Project_InfoViewBase()
 8007948:	b510      	push	{r4, lr}
 800794a:	4b03      	ldr	r3, [pc, #12]	; (8007958 <_ZN20Project_InfoViewBaseD1Ev+0x10>)
 800794c:	6003      	str	r3, [r0, #0]
 800794e:	4604      	mov	r4, r0
    touchgfx::CanvasWidgetRenderer::resetBuffer();
 8007950:	f00b ffec 	bl	801392c <_ZN8touchgfx20CanvasWidgetRenderer11resetBufferEv>
}
 8007954:	4620      	mov	r0, r4
 8007956:	bd10      	pop	{r4, pc}
 8007958:	0802d7e4 	.word	0x0802d7e4

0800795c <_ZN20Project_InfoViewBaseD0Ev>:
Project_InfoViewBase::~Project_InfoViewBase()
 800795c:	b507      	push	{r0, r1, r2, lr}
 800795e:	4b07      	ldr	r3, [pc, #28]	; (800797c <_ZN20Project_InfoViewBaseD0Ev+0x20>)
 8007960:	6003      	str	r3, [r0, #0]
 8007962:	9001      	str	r0, [sp, #4]
    touchgfx::CanvasWidgetRenderer::resetBuffer();
 8007964:	f00b ffe2 	bl	801392c <_ZN8touchgfx20CanvasWidgetRenderer11resetBufferEv>
}
 8007968:	9801      	ldr	r0, [sp, #4]
 800796a:	f241 01b0 	movw	r1, #4272	; 0x10b0
 800796e:	f021 fd56 	bl	802941e <_ZdlPvj>
 8007972:	9801      	ldr	r0, [sp, #4]
 8007974:	b003      	add	sp, #12
 8007976:	f85d fb04 	ldr.w	pc, [sp], #4
 800797a:	bf00      	nop
 800797c:	0802d7e4 	.word	0x0802d7e4

08007980 <_ZN20Project_InfoViewBase21buttonCallbackHandlerERKN8touchgfx14AbstractButtonE>:

void Project_InfoViewBase::buttonCallbackHandler(const touchgfx::AbstractButton& src)
{
    if (&src == &buttonWithLabel3)
 8007980:	f500 70b4 	add.w	r0, r0, #360	; 0x168
 8007984:	4288      	cmp	r0, r1
{
 8007986:	b508      	push	{r3, lr}
    if (&src == &buttonWithLabel3)
 8007988:	d105      	bne.n	8007996 <_ZN20Project_InfoViewBase21buttonCallbackHandlerERKN8touchgfx14AbstractButtonE+0x16>
    virtual ~Project_InfoViewBase();
    virtual void setupScreen();

protected:
    FrontendApplication& application() {
        return *static_cast<FrontendApplication*>(touchgfx::Application::getInstance());
 800798a:	f00d fcd1 	bl	8015330 <_ZN8touchgfx11Application11getInstanceEv>
        //Interaction1
        //When buttonWithLabel3 clicked change screen to Main_Menu
        //Go to Main_Menu with screen transition towards West
        application().gotoMain_MenuScreenWipeTransitionWest();
    }
}
 800798e:	e8bd 4008 	ldmia.w	sp!, {r3, lr}
        application().gotoMain_MenuScreenWipeTransitionWest();
 8007992:	f7fb bfef 	b.w	8003974 <_ZN23FrontendApplicationBase37gotoMain_MenuScreenWipeTransitionWestEv>
}
 8007996:	bd08      	pop	{r3, pc}

08007998 <_ZN20Project_InfoViewBaseC1Ev>:
Project_InfoViewBase::Project_InfoViewBase() :
 8007998:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 800799c:	ed2d 8b04 	vpush	{d8-d9}
 80079a0:	4604      	mov	r4, r0
 80079a2:	b08d      	sub	sp, #52	; 0x34
    buttonCallback(this, &Project_InfoViewBase::buttonCallbackHandler)
 80079a4:	46a3      	mov	fp, r4
 80079a6:	2500      	movs	r5, #0
 80079a8:	f00f f942 	bl	8016c30 <_ZN8touchgfx6ScreenC1Ev>
 80079ac:	4bd1      	ldr	r3, [pc, #836]	; (8007cf4 <_ZN20Project_InfoViewBaseC1Ev+0x35c>)
 80079ae:	63e5      	str	r5, [r4, #60]	; 0x3c
 80079b0:	f84b 3b40 	str.w	r3, [fp], #64
        : Widget(), alpha(255), color(0)
 80079b4:	2226      	movs	r2, #38	; 0x26
 80079b6:	4629      	mov	r1, r5
 80079b8:	4658      	mov	r0, fp
 80079ba:	f022 fd48 	bl	802a44e <memset>
 80079be:	4658      	mov	r0, fp
 80079c0:	f7fa fef2 	bl	80027a8 <_ZN8touchgfx6WidgetC1Ev>
 80079c4:	f104 0a6c 	add.w	sl, r4, #108	; 0x6c
 80079c8:	26ff      	movs	r6, #255	; 0xff
 80079ca:	4bcb      	ldr	r3, [pc, #812]	; (8007cf8 <_ZN20Project_InfoViewBaseC1Ev+0x360>)
 80079cc:	6423      	str	r3, [r4, #64]	; 0x40
        : Widget(), bitmap(bmp), alpha(255)
 80079ce:	2226      	movs	r2, #38	; 0x26
 80079d0:	f64f 73ff 	movw	r3, #65535	; 0xffff
 80079d4:	4629      	mov	r1, r5
 80079d6:	f884 6066 	strb.w	r6, [r4, #102]	; 0x66
 80079da:	4650      	mov	r0, sl
 80079dc:	66a5      	str	r5, [r4, #104]	; 0x68
 80079de:	f8ad 3028 	strh.w	r3, [sp, #40]	; 0x28
 80079e2:	f022 fd34 	bl	802a44e <memset>
 80079e6:	4650      	mov	r0, sl
 80079e8:	f7fa fede 	bl	80027a8 <_ZN8touchgfx6WidgetC1Ev>
 80079ec:	4bc3      	ldr	r3, [pc, #780]	; (8007cfc <_ZN20Project_InfoViewBaseC1Ev+0x364>)
 80079ee:	66e3      	str	r3, [r4, #108]	; 0x6c
 80079f0:	f8bd 3028 	ldrh.w	r3, [sp, #40]	; 0x28
 80079f4:	f8a4 3092 	strh.w	r3, [r4, #146]	; 0x92
        Image::setBitmap(bmp);
 80079f8:	a90a      	add	r1, sp, #40	; 0x28
 80079fa:	4650      	mov	r0, sl
 80079fc:	f104 0998 	add.w	r9, r4, #152	; 0x98
        : Widget(), bitmap(bmp), alpha(255)
 8007a00:	f884 6094 	strb.w	r6, [r4, #148]	; 0x94
        Image::setBitmap(bmp);
 8007a04:	f00a ff8b 	bl	801291e <_ZN8touchgfx5Image9setBitmapERKNS_6BitmapE>
        : TextArea()
 8007a08:	4648      	mov	r0, r9
 8007a0a:	f7fa fedf 	bl	80027cc <_ZN8touchgfx8TextAreaC1Ev>
 8007a0e:	f104 07e4 	add.w	r7, r4, #228	; 0xe4
        : TextAreaWithWildcardBase(), wc1(0)
 8007a12:	4bbb      	ldr	r3, [pc, #748]	; (8007d00 <_ZN20Project_InfoViewBaseC1Ev+0x368>)
 8007a14:	f8c4 3098 	str.w	r3, [r4, #152]	; 0x98
 8007a18:	f8c4 50e0 	str.w	r5, [r4, #224]	; 0xe0
 8007a1c:	4638      	mov	r0, r7
 8007a1e:	f009 fe47 	bl	80116b0 <_ZN8touchgfx4LineC1Ev>
 8007a22:	f504 73aa 	add.w	r3, r4, #340	; 0x154
        : AbstractPainterRGB565(), AbstractPainterColor(color)
 8007a26:	4618      	mov	r0, r3
 8007a28:	9303      	str	r3, [sp, #12]
 8007a2a:	f7f9 fb0d 	bl	8001048 <_ZN8touchgfx21AbstractPainterRGB565C1Ev>
 8007a2e:	4bb5      	ldr	r3, [pc, #724]	; (8007d04 <_ZN20Project_InfoViewBaseC1Ev+0x36c>)
 8007a30:	f8c4 3154 	str.w	r3, [r4, #340]	; 0x154
 8007a34:	3324      	adds	r3, #36	; 0x24
 8007a36:	f8c4 315c 	str.w	r3, [r4, #348]	; 0x15c
 8007a3a:	f504 73b4 	add.w	r3, r4, #360	; 0x168
 8007a3e:	4618      	mov	r0, r3
 8007a40:	f8c4 5160 	str.w	r5, [r4, #352]	; 0x160
 8007a44:	f504 78d8 	add.w	r8, r4, #432	; 0x1b0
 8007a48:	ee09 3a10 	vmov	s18, r3
 8007a4c:	f00b f8a8 	bl	8012ba0 <_ZN8touchgfx15ButtonWithLabelC1Ev>
 8007a50:	4640      	mov	r0, r8
 8007a52:	f7fa febb 	bl	80027cc <_ZN8touchgfx8TextAreaC1Ev>
 8007a56:	f504 73fc 	add.w	r3, r4, #504	; 0x1f8
 8007a5a:	4618      	mov	r0, r3
 8007a5c:	ee08 3a10 	vmov	s16, r3
 8007a60:	f7fa feb4 	bl	80027cc <_ZN8touchgfx8TextAreaC1Ev>
 8007a64:	f504 7310 	add.w	r3, r4, #576	; 0x240
 8007a68:	4618      	mov	r0, r3
 8007a6a:	ee08 3a90 	vmov	s17, r3
 8007a6e:	f7fa fead 	bl	80027cc <_ZN8touchgfx8TextAreaC1Ev>
        : pobject(pObject), pmemfun(pmemfun_1)
 8007a72:	4aa5      	ldr	r2, [pc, #660]	; (8007d08 <_ZN20Project_InfoViewBaseC1Ev+0x370>)
 8007a74:	f504 5380 	add.w	r3, r4, #4096	; 0x1000
 8007a78:	e9c3 2428 	strd	r2, r4, [r3, #160]	; 0xa0
 8007a7c:	4aa3      	ldr	r2, [pc, #652]	; (8007d0c <_ZN20Project_InfoViewBaseC1Ev+0x374>)
    touchgfx::CanvasWidgetRenderer::setupBuffer(canvasBuffer, CANVAS_BUFFER_SIZE);
 8007a7e:	f44f 6161 	mov.w	r1, #3600	; 0xe10
 8007a82:	e9c3 252a 	strd	r2, r5, [r3, #168]	; 0xa8
 8007a86:	f504 7024 	add.w	r0, r4, #656	; 0x290
 8007a8a:	f00b ff45 	bl	8013918 <_ZN8touchgfx20CanvasWidgetRenderer11setupBufferEPhj>
    __background.setPosition(0, 0, 240, 320);
 8007a8e:	f44f 73a0 	mov.w	r3, #320	; 0x140
 8007a92:	462a      	mov	r2, r5
 8007a94:	4658      	mov	r0, fp
 8007a96:	9300      	str	r3, [sp, #0]
 8007a98:	4629      	mov	r1, r5
 8007a9a:	23f0      	movs	r3, #240	; 0xf0
 8007a9c:	f7fa fe70 	bl	8002780 <_ZN8touchgfx8Drawable11setPositionEssss>
 8007aa0:	1d26      	adds	r6, r4, #4
        color = newColor;
 8007aa2:	f04f 437f 	mov.w	r3, #4278190080	; 0xff000000
 8007aa6:	66a3      	str	r3, [r4, #104]	; 0x68
 8007aa8:	4659      	mov	r1, fp
 8007aaa:	4630      	mov	r0, r6
 8007aac:	f008 f9a8 	bl	800fe00 <_ZN8touchgfx9Container3addERNS_8DrawableE>
    image1.setXY(0, 0);
 8007ab0:	462a      	mov	r2, r5
 8007ab2:	4650      	mov	r0, sl
 8007ab4:	4629      	mov	r1, r5
 8007ab6:	f7fa fe56 	bl	8002766 <_ZN8touchgfx8Drawable5setXYEss>
 8007aba:	2309      	movs	r3, #9
    image1.setBitmap(touchgfx::Bitmap(BITMAP_BACKGROUND_2_RESIZED_4_ID));
 8007abc:	4650      	mov	r0, sl
 8007abe:	a90a      	add	r1, sp, #40	; 0x28
 8007ac0:	f8ad 3028 	strh.w	r3, [sp, #40]	; 0x28
 8007ac4:	f00a ff2b 	bl	801291e <_ZN8touchgfx5Image9setBitmapERKNS_6BitmapE>
 8007ac8:	4651      	mov	r1, sl
 8007aca:	4630      	mov	r0, r6
 8007acc:	f008 f998 	bl	800fe00 <_ZN8touchgfx9Container3addERNS_8DrawableE>
    textArea3_1.setXY(86, 308);
 8007ad0:	f44f 729a 	mov.w	r2, #308	; 0x134
 8007ad4:	2156      	movs	r1, #86	; 0x56
 8007ad6:	4648      	mov	r0, r9
 8007ad8:	f7fa fe45 	bl	8002766 <_ZN8touchgfx8Drawable5setXYEss>
 8007adc:	f8d4 3098 	ldr.w	r3, [r4, #152]	; 0x98
        linespace = space;
 8007ae0:	f8a4 50cc 	strh.w	r5, [r4, #204]	; 0xcc
        boundingArea = calculateBoundingArea();
 8007ae4:	f10d 0a10 	add.w	sl, sp, #16
        color = newColor;
 8007ae8:	f04f 3bff 	mov.w	fp, #4294967295
        boundingArea = calculateBoundingArea();
 8007aec:	4650      	mov	r0, sl
 8007aee:	f8d3 3084 	ldr.w	r3, [r3, #132]	; 0x84
        color = newColor;
 8007af2:	f8c4 b0c8 	str.w	fp, [r4, #200]	; 0xc8
        boundingArea = calculateBoundingArea();
 8007af6:	4649      	mov	r1, r9
 8007af8:	4798      	blx	r3
 8007afa:	e89a 0007 	ldmia.w	sl, {r0, r1, r2}
 8007afe:	f104 03d4 	add.w	r3, r4, #212	; 0xd4
 8007b02:	e883 0007 	stmia.w	r3, {r0, r1, r2}
        assert(typedTexts != 0 && "TypedText database has not been initialized.");
 8007b06:	4b82      	ldr	r3, [pc, #520]	; (8007d10 <_ZN20Project_InfoViewBaseC1Ev+0x378>)
 8007b08:	681b      	ldr	r3, [r3, #0]
    Unicode::snprintf(textArea3_1Buffer, TEXTAREA3_1_SIZE, "%s", touchgfx::TypedText(T___SINGLEUSE_5C9S).getText());
 8007b0a:	f504 7a22 	add.w	sl, r4, #648	; 0x288
 8007b0e:	b92b      	cbnz	r3, 8007b1c <_ZN20Project_InfoViewBaseC1Ev+0x184>
 8007b10:	4b80      	ldr	r3, [pc, #512]	; (8007d14 <_ZN20Project_InfoViewBaseC1Ev+0x37c>)
 8007b12:	4a81      	ldr	r2, [pc, #516]	; (8007d18 <_ZN20Project_InfoViewBaseC1Ev+0x380>)
 8007b14:	2160      	movs	r1, #96	; 0x60
        assert(hasValidId() && "typedTextId larger than numberOfTypedTexts.");
 8007b16:	4881      	ldr	r0, [pc, #516]	; (8007d1c <_ZN20Project_InfoViewBaseC1Ev+0x384>)
 8007b18:	f022 fa94 	bl	802a044 <__assert_func>
        return typedTextId < numberOfTypedTexts;
 8007b1c:	4b80      	ldr	r3, [pc, #512]	; (8007d20 <_ZN20Project_InfoViewBaseC1Ev+0x388>)
        assert(hasValidId() && "typedTextId larger than numberOfTypedTexts.");
 8007b1e:	881b      	ldrh	r3, [r3, #0]
 8007b20:	2b12      	cmp	r3, #18
 8007b22:	d803      	bhi.n	8007b2c <_ZN20Project_InfoViewBaseC1Ev+0x194>
 8007b24:	4b7f      	ldr	r3, [pc, #508]	; (8007d24 <_ZN20Project_InfoViewBaseC1Ev+0x38c>)
 8007b26:	4a7c      	ldr	r2, [pc, #496]	; (8007d18 <_ZN20Project_InfoViewBaseC1Ev+0x380>)
 8007b28:	2161      	movs	r1, #97	; 0x61
 8007b2a:	e7f4      	b.n	8007b16 <_ZN20Project_InfoViewBaseC1Ev+0x17e>
        return texts->getText(typedTextId);
 8007b2c:	4b7e      	ldr	r3, [pc, #504]	; (8007d28 <_ZN20Project_InfoViewBaseC1Ev+0x390>)
 8007b2e:	2112      	movs	r1, #18
 8007b30:	6818      	ldr	r0, [r3, #0]
 8007b32:	f000 fb1b 	bl	800816c <_ZNK8touchgfx5Texts7getTextEt>
 8007b36:	4a7d      	ldr	r2, [pc, #500]	; (8007d2c <_ZN20Project_InfoViewBaseC1Ev+0x394>)
 8007b38:	4603      	mov	r3, r0
 8007b3a:	2104      	movs	r1, #4
 8007b3c:	4650      	mov	r0, sl
 8007b3e:	f010 fd67 	bl	8018610 <_ZN8touchgfx7Unicode8snprintfEPttPKcz>
    textArea3_1.resizeToCurrentText();
 8007b42:	4648      	mov	r0, r9
        wc1 = value;
 8007b44:	f8c4 a0e0 	str.w	sl, [r4, #224]	; 0xe0
 8007b48:	f00a faee 	bl	8012128 <_ZN8touchgfx8TextArea19resizeToCurrentTextEv>
        : typedTextId(id)
 8007b4c:	4b78      	ldr	r3, [pc, #480]	; (8007d30 <_ZN20Project_InfoViewBaseC1Ev+0x398>)
 8007b4e:	930a      	str	r3, [sp, #40]	; 0x28
    textArea3_1.setTypedText(touchgfx::TypedText(T___SINGLEUSE_KYIO));
 8007b50:	a90a      	add	r1, sp, #40	; 0x28
 8007b52:	2313      	movs	r3, #19
 8007b54:	4648      	mov	r0, r9
 8007b56:	f8ad 302c 	strh.w	r3, [sp, #44]	; 0x2c
 8007b5a:	f00a fb05 	bl	8012168 <_ZN8touchgfx8TextArea12setTypedTextERKNS_9TypedTextE>
 8007b5e:	4649      	mov	r1, r9
 8007b60:	4630      	mov	r0, r6
 8007b62:	f008 f94d 	bl	800fe00 <_ZN8touchgfx9Container3addERNS_8DrawableE>
    line1.setPosition(0, 50, 240, 10);
 8007b66:	230a      	movs	r3, #10
 8007b68:	9300      	str	r3, [sp, #0]
 8007b6a:	2232      	movs	r2, #50	; 0x32
 8007b6c:	23f0      	movs	r3, #240	; 0xf0
 8007b6e:	4629      	mov	r1, r5
 8007b70:	4638      	mov	r0, r7
 8007b72:	f7fa fe05 	bl	8002780 <_ZN8touchgfx8Drawable11setPositionEssss>
 8007b76:	9b03      	ldr	r3, [sp, #12]
 8007b78:	f8c4 310c 	str.w	r3, [r4, #268]	; 0x10c
        setStart(CWRUtil::toQ5<T>(x), CWRUtil::toQ5<T>(y));
 8007b7c:	22a0      	movs	r2, #160	; 0xa0
 8007b7e:	4611      	mov	r1, r2
 8007b80:	4638      	mov	r0, r7
 8007b82:	f8c4 b160 	str.w	fp, [r4, #352]	; 0x160
        color565 = LCD16bpp::getNativeColor(painterColor);
 8007b86:	f8a4 b164 	strh.w	fp, [r4, #356]	; 0x164
 8007b8a:	f009 fea7 	bl	80118dc <_ZN8touchgfx4Line8setStartENS_7CWRUtil2Q5ES2_>
        setEnd(CWRUtil::toQ5<T>(x), CWRUtil::toQ5<T>(y));
 8007b8e:	22a0      	movs	r2, #160	; 0xa0
 8007b90:	f44f 51eb 	mov.w	r1, #7520	; 0x1d60
 8007b94:	4638      	mov	r0, r7
 8007b96:	f009 feac 	bl	80118f2 <_ZN8touchgfx4Line6setEndENS_7CWRUtil2Q5ES2_>
        if (lineWidthQ5 == widthQ5)
 8007b9a:	f8d4 3120 	ldr.w	r3, [r4, #288]	; 0x120
 8007b9e:	2b20      	cmp	r3, #32
 8007ba0:	d005      	beq.n	8007bae <_ZN20Project_InfoViewBaseC1Ev+0x216>
        lineWidthQ5 = widthQ5;
 8007ba2:	2320      	movs	r3, #32
 8007ba4:	f8c4 3120 	str.w	r3, [r4, #288]	; 0x120
        updateCachedShape();
 8007ba8:	4638      	mov	r0, r7
 8007baa:	f009 fda1 	bl	80116f0 <_ZN8touchgfx4Line17updateCachedShapeEv>
    line1.setLineEndingStyle(touchgfx::Line::ROUND_CAP_ENDING);
 8007bae:	4638      	mov	r0, r7
 8007bb0:	2101      	movs	r1, #1
 8007bb2:	f009 fea9 	bl	8011908 <_ZN8touchgfx4Line18setLineEndingStyleENS0_17LINE_ENDING_STYLEE>
 8007bb6:	4639      	mov	r1, r7
 8007bb8:	4630      	mov	r0, r6
 8007bba:	f008 f921 	bl	800fe00 <_ZN8touchgfx9Container3addERNS_8DrawableE>
    buttonWithLabel3.setXY(33, 240);
 8007bbe:	ee19 0a10 	vmov	r0, s18
 8007bc2:	22f0      	movs	r2, #240	; 0xf0
 8007bc4:	2121      	movs	r1, #33	; 0x21
 8007bc6:	f7fa fdce 	bl	8002766 <_ZN8touchgfx8Drawable5setXYEss>
 8007bca:	2303      	movs	r3, #3
    buttonWithLabel3.setBitmaps(touchgfx::Bitmap(BITMAP_ALTERNATE_THEME_IMAGES_WIDGETS_BUTTON_REGULAR_HEIGHT_50_SMALL_ROUND_PRESSED_ID), touchgfx::Bitmap(BITMAP_ALTERNATE_THEME_IMAGES_WIDGETS_BUTTON_REGULAR_HEIGHT_50_SMALL_ROUND_NORMAL_ID));
 8007bcc:	aa0a      	add	r2, sp, #40	; 0x28
 8007bce:	a909      	add	r1, sp, #36	; 0x24
 8007bd0:	ee19 0a10 	vmov	r0, s18
 8007bd4:	f8ad 3024 	strh.w	r3, [sp, #36]	; 0x24
 8007bd8:	2302      	movs	r3, #2
 8007bda:	f8ad 3028 	strh.w	r3, [sp, #40]	; 0x28
 8007bde:	f00a fca8 	bl	8012532 <_ZN8touchgfx6Button10setBitmapsERKNS_6BitmapES3_>
class TypedText
 8007be2:	2342      	movs	r3, #66	; 0x42
        updateTextPosition();
 8007be4:	ee19 0a10 	vmov	r0, s18
 8007be8:	f8a4 31a0 	strh.w	r3, [r4, #416]	; 0x1a0
 8007bec:	f7fa fe10 	bl	8002810 <_ZN8touchgfx15ButtonWithLabel18updateTextPositionEv>
        color = col;
 8007bf0:	f04f 37ff 	mov.w	r7, #4294967295
    buttonWithLabel3.setAction(buttonCallback);
 8007bf4:	f504 5385 	add.w	r3, r4, #4256	; 0x10a0
 8007bf8:	f8c4 3190 	str.w	r3, [r4, #400]	; 0x190
 8007bfc:	ee19 1a10 	vmov	r1, s18
 8007c00:	4630      	mov	r0, r6
        colorPressed = col;
 8007c02:	e9c4 7769 	strd	r7, r7, [r4, #420]	; 0x1a4
 8007c06:	ad04      	add	r5, sp, #16
 8007c08:	f008 f8fa 	bl	800fe00 <_ZN8touchgfx9Container3addERNS_8DrawableE>
        linespace = space;
 8007c0c:	f04f 0a00 	mov.w	sl, #0
    textArea3.setXY(5, 91);
 8007c10:	225b      	movs	r2, #91	; 0x5b
 8007c12:	4640      	mov	r0, r8
 8007c14:	2105      	movs	r1, #5
 8007c16:	f7fa fda6 	bl	8002766 <_ZN8touchgfx8Drawable5setXYEss>
        boundingArea = calculateBoundingArea();
 8007c1a:	4641      	mov	r1, r8
 8007c1c:	4628      	mov	r0, r5
        color = newColor;
 8007c1e:	f8c4 71e0 	str.w	r7, [r4, #480]	; 0x1e0
        linespace = space;
 8007c22:	f8a4 a1e4 	strh.w	sl, [r4, #484]	; 0x1e4
        boundingArea = calculateBoundingArea();
 8007c26:	f00a f805 	bl	8011c34 <_ZNK8touchgfx8TextArea21calculateBoundingAreaEv>
 8007c2a:	e895 0007 	ldmia.w	r5, {r0, r1, r2}
 8007c2e:	f108 033c 	add.w	r3, r8, #60	; 0x3c
 8007c32:	e883 0007 	stmia.w	r3, {r0, r1, r2}
        : typedTextId(id)
 8007c36:	f8df 90f8 	ldr.w	r9, [pc, #248]	; 8007d30 <_ZN20Project_InfoViewBaseC1Ev+0x398>
 8007c3a:	f8cd 9028 	str.w	r9, [sp, #40]	; 0x28
 8007c3e:	2343      	movs	r3, #67	; 0x43
    textArea3.setTypedText(touchgfx::TypedText(T___SINGLEUSE_9J9T));
 8007c40:	a90a      	add	r1, sp, #40	; 0x28
 8007c42:	4640      	mov	r0, r8
 8007c44:	f8ad 302c 	strh.w	r3, [sp, #44]	; 0x2c
 8007c48:	f00a fa8e 	bl	8012168 <_ZN8touchgfx8TextArea12setTypedTextERKNS_9TypedTextE>
 8007c4c:	4641      	mov	r1, r8
 8007c4e:	4630      	mov	r0, r6
 8007c50:	f008 f8d6 	bl	800fe00 <_ZN8touchgfx9Container3addERNS_8DrawableE>
    textArea2.setXY(69, 35);
 8007c54:	ee18 0a10 	vmov	r0, s16
 8007c58:	2223      	movs	r2, #35	; 0x23
 8007c5a:	2145      	movs	r1, #69	; 0x45
 8007c5c:	f7fa fd83 	bl	8002766 <_ZN8touchgfx8Drawable5setXYEss>
 8007c60:	ee18 1a10 	vmov	r1, s16
 8007c64:	4628      	mov	r0, r5
        color = newColor;
 8007c66:	f8c4 7228 	str.w	r7, [r4, #552]	; 0x228
        linespace = space;
 8007c6a:	f8a4 a22c 	strh.w	sl, [r4, #556]	; 0x22c
        boundingArea = calculateBoundingArea();
 8007c6e:	f009 ffe1 	bl	8011c34 <_ZNK8touchgfx8TextArea21calculateBoundingAreaEv>
 8007c72:	e895 0007 	ldmia.w	r5, {r0, r1, r2}
 8007c76:	ee18 3a10 	vmov	r3, s16
 8007c7a:	333c      	adds	r3, #60	; 0x3c
 8007c7c:	e883 0007 	stmia.w	r3, {r0, r1, r2}
 8007c80:	2345      	movs	r3, #69	; 0x45
    textArea2.setTypedText(touchgfx::TypedText(T___SINGLEUSE_8N0V));
 8007c82:	ee18 0a10 	vmov	r0, s16
 8007c86:	a90a      	add	r1, sp, #40	; 0x28
 8007c88:	f8ad 302c 	strh.w	r3, [sp, #44]	; 0x2c
 8007c8c:	f8cd 9028 	str.w	r9, [sp, #40]	; 0x28
 8007c90:	f00a fa6a 	bl	8012168 <_ZN8touchgfx8TextArea12setTypedTextERKNS_9TypedTextE>
 8007c94:	ee18 1a10 	vmov	r1, s16
 8007c98:	4630      	mov	r0, r6
 8007c9a:	f008 f8b1 	bl	800fe00 <_ZN8touchgfx9Container3addERNS_8DrawableE>
    textArea1.setXY(54, 12);
 8007c9e:	ee18 0a90 	vmov	r0, s17
 8007ca2:	220c      	movs	r2, #12
 8007ca4:	2136      	movs	r1, #54	; 0x36
 8007ca6:	f7fa fd5e 	bl	8002766 <_ZN8touchgfx8Drawable5setXYEss>
 8007caa:	ee18 1a90 	vmov	r1, s17
 8007cae:	4628      	mov	r0, r5
        color = newColor;
 8007cb0:	f8c4 7270 	str.w	r7, [r4, #624]	; 0x270
        linespace = space;
 8007cb4:	f8a4 a274 	strh.w	sl, [r4, #628]	; 0x274
        boundingArea = calculateBoundingArea();
 8007cb8:	f009 ffbc 	bl	8011c34 <_ZNK8touchgfx8TextArea21calculateBoundingAreaEv>
 8007cbc:	e895 0007 	ldmia.w	r5, {r0, r1, r2}
 8007cc0:	ee18 3a90 	vmov	r3, s17
 8007cc4:	333c      	adds	r3, #60	; 0x3c
 8007cc6:	e883 0007 	stmia.w	r3, {r0, r1, r2}
 8007cca:	2344      	movs	r3, #68	; 0x44
    textArea1.setTypedText(touchgfx::TypedText(T___SINGLEUSE_SSFQ));
 8007ccc:	ee18 0a90 	vmov	r0, s17
 8007cd0:	a90a      	add	r1, sp, #40	; 0x28
 8007cd2:	f8ad 302c 	strh.w	r3, [sp, #44]	; 0x2c
 8007cd6:	f8cd 9028 	str.w	r9, [sp, #40]	; 0x28
 8007cda:	f00a fa45 	bl	8012168 <_ZN8touchgfx8TextArea12setTypedTextERKNS_9TypedTextE>
 8007cde:	4630      	mov	r0, r6
 8007ce0:	ee18 1a90 	vmov	r1, s17
 8007ce4:	f008 f88c 	bl	800fe00 <_ZN8touchgfx9Container3addERNS_8DrawableE>
}
 8007ce8:	4620      	mov	r0, r4
 8007cea:	b00d      	add	sp, #52	; 0x34
 8007cec:	ecbd 8b04 	vpop	{d8-d9}
 8007cf0:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
 8007cf4:	0802d7e4 	.word	0x0802d7e4
 8007cf8:	0802e540 	.word	0x0802e540
 8007cfc:	0802e708 	.word	0x0802e708
 8007d00:	0802bbf8 	.word	0x0802bbf8
 8007d04:	0802e274 	.word	0x0802e274
 8007d08:	0802d7cc 	.word	0x0802d7cc
 8007d0c:	08007981 	.word	0x08007981
 8007d10:	20012f7c 	.word	0x20012f7c
 8007d14:	0802ba38 	.word	0x0802ba38
 8007d18:	0802bb3a 	.word	0x0802bb3a
 8007d1c:	0802bab5 	.word	0x0802bab5
 8007d20:	20012f80 	.word	0x20012f80
 8007d24:	0802bafc 	.word	0x0802bafc
 8007d28:	20012f88 	.word	0x20012f88
 8007d2c:	0802bb72 	.word	0x0802bb72
 8007d30:	0802bbe8 	.word	0x0802bbe8

08007d34 <_ZN20Shutting_OffViewBaseD1Ev>:
}

Shutting_OffViewBase::~Shutting_OffViewBase()
{

}
 8007d34:	4770      	bx	lr

08007d36 <_ZN20Shutting_OffViewBase11setupScreenEv>:

void Shutting_OffViewBase::setupScreen()
{

}
 8007d36:	4770      	bx	lr

08007d38 <_ZN20Shutting_OffViewBaseD0Ev>:
Shutting_OffViewBase::~Shutting_OffViewBase()
 8007d38:	b510      	push	{r4, lr}
}
 8007d3a:	2198      	movs	r1, #152	; 0x98
Shutting_OffViewBase::~Shutting_OffViewBase()
 8007d3c:	4604      	mov	r4, r0
}
 8007d3e:	f021 fb6e 	bl	802941e <_ZdlPvj>
 8007d42:	4620      	mov	r0, r4
 8007d44:	bd10      	pop	{r4, pc}
	...

08007d48 <_ZN20Shutting_OffViewBaseC1Ev>:
Shutting_OffViewBase::Shutting_OffViewBase()
 8007d48:	e92d 41f3 	stmdb	sp!, {r0, r1, r4, r5, r6, r7, r8, lr}
 8007d4c:	4604      	mov	r4, r0
 8007d4e:	4626      	mov	r6, r4
 8007d50:	f00e ff6e 	bl	8016c30 <_ZN8touchgfx6ScreenC1Ev>
 8007d54:	2500      	movs	r5, #0
 8007d56:	4b2e      	ldr	r3, [pc, #184]	; (8007e10 <_ZN20Shutting_OffViewBaseC1Ev+0xc8>)
 8007d58:	63e5      	str	r5, [r4, #60]	; 0x3c
 8007d5a:	f846 3b40 	str.w	r3, [r6], #64
        : Widget(), alpha(255), color(0)
 8007d5e:	4b2d      	ldr	r3, [pc, #180]	; (8007e14 <_ZN20Shutting_OffViewBaseC1Ev+0xcc>)
          cachedAbsX(0),
 8007d60:	6625      	str	r5, [r4, #96]	; 0x60
        : x(0), y(0), width(0), height(0)
 8007d62:	e9c4 3510 	strd	r3, r5, [r4, #64]	; 0x40
          touchable(false),
 8007d66:	f44f 7280 	mov.w	r2, #256	; 0x100
 8007d6a:	23ff      	movs	r3, #255	; 0xff
 8007d6c:	f104 076c 	add.w	r7, r4, #108	; 0x6c
 8007d70:	f8a4 2064 	strh.w	r2, [r4, #100]	; 0x64
 8007d74:	f884 3066 	strb.w	r3, [r4, #102]	; 0x66
 8007d78:	f8a4 2090 	strh.w	r2, [r4, #144]	; 0x90
 8007d7c:	f64f 73ff 	movw	r3, #65535	; 0xffff
        : Widget(), bitmap(bmp), alpha(255)
 8007d80:	4a25      	ldr	r2, [pc, #148]	; (8007e18 <_ZN20Shutting_OffViewBaseC1Ev+0xd0>)
 8007d82:	f8a4 3092 	strh.w	r3, [r4, #146]	; 0x92
 8007d86:	f884 3094 	strb.w	r3, [r4, #148]	; 0x94
 8007d8a:	66e2      	str	r2, [r4, #108]	; 0x6c
        Image::setBitmap(bmp);
 8007d8c:	a901      	add	r1, sp, #4
 8007d8e:	4638      	mov	r0, r7
 8007d90:	e9c4 5512 	strd	r5, r5, [r4, #72]	; 0x48
          parent(0),
 8007d94:	e9c4 5514 	strd	r5, r5, [r4, #80]	; 0x50
          nextDrawChainElement(0),
 8007d98:	e9c4 5516 	strd	r5, r5, [r4, #88]	; 0x58
 8007d9c:	e9c4 551c 	strd	r5, r5, [r4, #112]	; 0x70
 8007da0:	e9c4 551e 	strd	r5, r5, [r4, #120]	; 0x78
          nextSibling(0),
 8007da4:	e9c4 5520 	strd	r5, r5, [r4, #128]	; 0x80
          cachedAbsX(0),
 8007da8:	e9c4 5522 	strd	r5, r5, [r4, #136]	; 0x88
        : color(col)
 8007dac:	66a5      	str	r5, [r4, #104]	; 0x68
 8007dae:	f8ad 3004 	strh.w	r3, [sp, #4]
 8007db2:	f00a fdb4 	bl	801291e <_ZN8touchgfx5Image9setBitmapERKNS_6BitmapE>
        setXY(x, y);
 8007db6:	462a      	mov	r2, r5
 8007db8:	4629      	mov	r1, r5
 8007dba:	4630      	mov	r0, r6
 8007dbc:	f7fa fcd3 	bl	8002766 <_ZN8touchgfx8Drawable5setXYEss>
        setWidth(width);
 8007dc0:	4630      	mov	r0, r6
 8007dc2:	21f0      	movs	r1, #240	; 0xf0
 8007dc4:	f7f9 f88c 	bl	8000ee0 <_ZN8touchgfx8Drawable8setWidthEs>
        setHeight(height);
 8007dc8:	4630      	mov	r0, r6
 8007dca:	f44f 71a0 	mov.w	r1, #320	; 0x140
 8007dce:	f7f9 f889 	bl	8000ee4 <_ZN8touchgfx8Drawable9setHeightEs>
 8007dd2:	f104 0804 	add.w	r8, r4, #4
        color = newColor;
 8007dd6:	f04f 437f 	mov.w	r3, #4278190080	; 0xff000000
 8007dda:	66a3      	str	r3, [r4, #104]	; 0x68
 8007ddc:	4631      	mov	r1, r6
 8007dde:	4640      	mov	r0, r8
 8007de0:	f008 f80e 	bl	800fe00 <_ZN8touchgfx9Container3addERNS_8DrawableE>
    image1.setXY(-3, 0);
 8007de4:	462a      	mov	r2, r5
 8007de6:	4638      	mov	r0, r7
 8007de8:	f06f 0102 	mvn.w	r1, #2
 8007dec:	f7fa fcbb 	bl	8002766 <_ZN8touchgfx8Drawable5setXYEss>
 8007df0:	230b      	movs	r3, #11
    image1.setBitmap(touchgfx::Bitmap(BITMAP_SHUTDOWN_ID));
 8007df2:	a901      	add	r1, sp, #4
 8007df4:	4638      	mov	r0, r7
 8007df6:	f8ad 3004 	strh.w	r3, [sp, #4]
 8007dfa:	f00a fd90 	bl	801291e <_ZN8touchgfx5Image9setBitmapERKNS_6BitmapE>
 8007dfe:	4640      	mov	r0, r8
 8007e00:	4639      	mov	r1, r7
 8007e02:	f007 fffd 	bl	800fe00 <_ZN8touchgfx9Container3addERNS_8DrawableE>
}
 8007e06:	4620      	mov	r0, r4
 8007e08:	b002      	add	sp, #8
 8007e0a:	e8bd 81f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, pc}
 8007e0e:	bf00      	nop
 8007e10:	0802d818 	.word	0x0802d818
 8007e14:	0802e540 	.word	0x0802e540
 8007e18:	0802e708 	.word	0x0802e708

08007e1c <__tcf_0>:
KEEP extern const touchgfx::KerningNode kerning_verdana_10_4bpp[] FONT_KERNING_LOCATION_FLASH_ATTRIBUTE;
touchgfx::GeneratedFont& getFont_verdana_10_4bpp();

touchgfx::GeneratedFont& getFont_verdana_10_4bpp()
{
    static touchgfx::GeneratedFont verdana_10_4bpp(glyphs_verdana_10_4bpp, 95, 12, 10, 0, 0, 4, 1, 1, 1, unicodes_verdana_10_4bpp, kerning_verdana_10_4bpp, 63, 0, 0, 0);
 8007e1c:	4770      	bx	lr
	...

08007e20 <_Z23getFont_verdana_10_4bppv>:
{
 8007e20:	b530      	push	{r4, r5, lr}
    static touchgfx::GeneratedFont verdana_10_4bpp(glyphs_verdana_10_4bpp, 95, 12, 10, 0, 0, 4, 1, 1, 1, unicodes_verdana_10_4bpp, kerning_verdana_10_4bpp, 63, 0, 0, 0);
 8007e22:	4d17      	ldr	r5, [pc, #92]	; (8007e80 <_Z23getFont_verdana_10_4bppv+0x60>)
 8007e24:	682c      	ldr	r4, [r5, #0]
 8007e26:	f3bf 8f5b 	dmb	ish
 8007e2a:	f014 0401 	ands.w	r4, r4, #1
{
 8007e2e:	b08f      	sub	sp, #60	; 0x3c
    static touchgfx::GeneratedFont verdana_10_4bpp(glyphs_verdana_10_4bpp, 95, 12, 10, 0, 0, 4, 1, 1, 1, unicodes_verdana_10_4bpp, kerning_verdana_10_4bpp, 63, 0, 0, 0);
 8007e30:	d122      	bne.n	8007e78 <_Z23getFont_verdana_10_4bppv+0x58>
 8007e32:	4628      	mov	r0, r5
 8007e34:	f021 faf5 	bl	8029422 <__cxa_guard_acquire>
 8007e38:	b1f0      	cbz	r0, 8007e78 <_Z23getFont_verdana_10_4bppv+0x58>
 8007e3a:	233f      	movs	r3, #63	; 0x3f
 8007e3c:	9309      	str	r3, [sp, #36]	; 0x24
 8007e3e:	4b11      	ldr	r3, [pc, #68]	; (8007e84 <_Z23getFont_verdana_10_4bppv+0x64>)
 8007e40:	9308      	str	r3, [sp, #32]
 8007e42:	4b11      	ldr	r3, [pc, #68]	; (8007e88 <_Z23getFont_verdana_10_4bppv+0x68>)
 8007e44:	9307      	str	r3, [sp, #28]
 8007e46:	2301      	movs	r3, #1
 8007e48:	e9cd 3305 	strd	r3, r3, [sp, #20]
 8007e4c:	9304      	str	r3, [sp, #16]
 8007e4e:	2304      	movs	r3, #4
 8007e50:	e9cd 4302 	strd	r4, r3, [sp, #8]
 8007e54:	230a      	movs	r3, #10
 8007e56:	490d      	ldr	r1, [pc, #52]	; (8007e8c <_Z23getFont_verdana_10_4bppv+0x6c>)
 8007e58:	9300      	str	r3, [sp, #0]
 8007e5a:	225f      	movs	r2, #95	; 0x5f
 8007e5c:	230c      	movs	r3, #12
 8007e5e:	e9cd 440b 	strd	r4, r4, [sp, #44]	; 0x2c
 8007e62:	480b      	ldr	r0, [pc, #44]	; (8007e90 <_Z23getFont_verdana_10_4bppv+0x70>)
 8007e64:	940a      	str	r4, [sp, #40]	; 0x28
 8007e66:	9401      	str	r4, [sp, #4]
 8007e68:	f7fd f9fc 	bl	8005264 <_ZN8touchgfx13GeneratedFontC1EPKNS_9GlyphNodeEttthhhhhhPKPKhPKNS_11KerningNodeEttPKtPKNS_24FontContextualFormsTableE>
 8007e6c:	4809      	ldr	r0, [pc, #36]	; (8007e94 <_Z23getFont_verdana_10_4bppv+0x74>)
 8007e6e:	f022 f907 	bl	802a080 <atexit>
 8007e72:	4628      	mov	r0, r5
 8007e74:	f021 fae1 	bl	802943a <__cxa_guard_release>
    return verdana_10_4bpp;
}
 8007e78:	4805      	ldr	r0, [pc, #20]	; (8007e90 <_Z23getFont_verdana_10_4bppv+0x70>)
 8007e7a:	b00f      	add	sp, #60	; 0x3c
 8007e7c:	bd30      	pop	{r4, r5, pc}
 8007e7e:	bf00      	nop
 8007e80:	20002044 	.word	0x20002044
 8007e84:	080453d4 	.word	0x080453d4
 8007e88:	08045534 	.word	0x08045534
 8007e8c:	080446bc 	.word	0x080446bc
 8007e90:	20002048 	.word	0x20002048
 8007e94:	08007e1d 	.word	0x08007e1d

08007e98 <__tcf_0>:
KEEP extern const touchgfx::KerningNode kerning_verdana_12_4bpp[] FONT_KERNING_LOCATION_FLASH_ATTRIBUTE;
touchgfx::GeneratedFont& getFont_verdana_12_4bpp();

touchgfx::GeneratedFont& getFont_verdana_12_4bpp()
{
    static touchgfx::GeneratedFont verdana_12_4bpp(glyphs_verdana_12_4bpp, 96, 15, 12, 0, 0, 4, 1, 1, 1, unicodes_verdana_12_4bpp, kerning_verdana_12_4bpp, 63, 0, 0, 0);
 8007e98:	4770      	bx	lr
	...

08007e9c <_Z23getFont_verdana_12_4bppv>:
{
 8007e9c:	b530      	push	{r4, r5, lr}
    static touchgfx::GeneratedFont verdana_12_4bpp(glyphs_verdana_12_4bpp, 96, 15, 12, 0, 0, 4, 1, 1, 1, unicodes_verdana_12_4bpp, kerning_verdana_12_4bpp, 63, 0, 0, 0);
 8007e9e:	4d17      	ldr	r5, [pc, #92]	; (8007efc <_Z23getFont_verdana_12_4bppv+0x60>)
 8007ea0:	682c      	ldr	r4, [r5, #0]
 8007ea2:	f3bf 8f5b 	dmb	ish
 8007ea6:	f014 0401 	ands.w	r4, r4, #1
{
 8007eaa:	b08f      	sub	sp, #60	; 0x3c
    static touchgfx::GeneratedFont verdana_12_4bpp(glyphs_verdana_12_4bpp, 96, 15, 12, 0, 0, 4, 1, 1, 1, unicodes_verdana_12_4bpp, kerning_verdana_12_4bpp, 63, 0, 0, 0);
 8007eac:	d122      	bne.n	8007ef4 <_Z23getFont_verdana_12_4bppv+0x58>
 8007eae:	4628      	mov	r0, r5
 8007eb0:	f021 fab7 	bl	8029422 <__cxa_guard_acquire>
 8007eb4:	b1f0      	cbz	r0, 8007ef4 <_Z23getFont_verdana_12_4bppv+0x58>
 8007eb6:	233f      	movs	r3, #63	; 0x3f
 8007eb8:	9309      	str	r3, [sp, #36]	; 0x24
 8007eba:	4b11      	ldr	r3, [pc, #68]	; (8007f00 <_Z23getFont_verdana_12_4bppv+0x64>)
 8007ebc:	9308      	str	r3, [sp, #32]
 8007ebe:	4b11      	ldr	r3, [pc, #68]	; (8007f04 <_Z23getFont_verdana_12_4bppv+0x68>)
 8007ec0:	9307      	str	r3, [sp, #28]
 8007ec2:	2301      	movs	r3, #1
 8007ec4:	e9cd 3305 	strd	r3, r3, [sp, #20]
 8007ec8:	9304      	str	r3, [sp, #16]
 8007eca:	2304      	movs	r3, #4
 8007ecc:	e9cd 4302 	strd	r4, r3, [sp, #8]
 8007ed0:	230c      	movs	r3, #12
 8007ed2:	490d      	ldr	r1, [pc, #52]	; (8007f08 <_Z23getFont_verdana_12_4bppv+0x6c>)
 8007ed4:	9300      	str	r3, [sp, #0]
 8007ed6:	2260      	movs	r2, #96	; 0x60
 8007ed8:	230f      	movs	r3, #15
 8007eda:	e9cd 440b 	strd	r4, r4, [sp, #44]	; 0x2c
 8007ede:	480b      	ldr	r0, [pc, #44]	; (8007f0c <_Z23getFont_verdana_12_4bppv+0x70>)
 8007ee0:	940a      	str	r4, [sp, #40]	; 0x28
 8007ee2:	9401      	str	r4, [sp, #4]
 8007ee4:	f7fd f9be 	bl	8005264 <_ZN8touchgfx13GeneratedFontC1EPKNS_9GlyphNodeEttthhhhhhPKPKhPKNS_11KerningNodeEttPKtPKNS_24FontContextualFormsTableE>
 8007ee8:	4809      	ldr	r0, [pc, #36]	; (8007f10 <_Z23getFont_verdana_12_4bppv+0x74>)
 8007eea:	f022 f8c9 	bl	802a080 <atexit>
 8007eee:	4628      	mov	r0, r5
 8007ef0:	f021 faa3 	bl	802943a <__cxa_guard_release>
    return verdana_12_4bpp;
}
 8007ef4:	4805      	ldr	r0, [pc, #20]	; (8007f0c <_Z23getFont_verdana_12_4bppv+0x70>)
 8007ef6:	b00f      	add	sp, #60	; 0x3c
 8007ef8:	bd30      	pop	{r4, r5, pc}
 8007efa:	bf00      	nop
 8007efc:	20002074 	.word	0x20002074
 8007f00:	08045408 	.word	0x08045408
 8007f04:	08045538 	.word	0x08045538
 8007f08:	08044bf0 	.word	0x08044bf0
 8007f0c:	20002078 	.word	0x20002078
 8007f10:	08007e99 	.word	0x08007e99

08007f14 <__tcf_0>:
KEEP extern const touchgfx::KerningNode kerning_verdana_19_4bpp[] FONT_KERNING_LOCATION_FLASH_ATTRIBUTE;
touchgfx::GeneratedFont& getFont_verdana_19_4bpp();

touchgfx::GeneratedFont& getFont_verdana_19_4bpp()
{
    static touchgfx::GeneratedFont verdana_19_4bpp(glyphs_verdana_19_4bpp, 47, 23, 19, 0, 0, 4, 1, 1, 1, unicodes_verdana_19_4bpp, kerning_verdana_19_4bpp, 63, 0, 0, 0);
 8007f14:	4770      	bx	lr
	...

08007f18 <_Z23getFont_verdana_19_4bppv>:
{
 8007f18:	b530      	push	{r4, r5, lr}
    static touchgfx::GeneratedFont verdana_19_4bpp(glyphs_verdana_19_4bpp, 47, 23, 19, 0, 0, 4, 1, 1, 1, unicodes_verdana_19_4bpp, kerning_verdana_19_4bpp, 63, 0, 0, 0);
 8007f1a:	4d17      	ldr	r5, [pc, #92]	; (8007f78 <_Z23getFont_verdana_19_4bppv+0x60>)
 8007f1c:	682c      	ldr	r4, [r5, #0]
 8007f1e:	f3bf 8f5b 	dmb	ish
 8007f22:	f014 0401 	ands.w	r4, r4, #1
{
 8007f26:	b08f      	sub	sp, #60	; 0x3c
    static touchgfx::GeneratedFont verdana_19_4bpp(glyphs_verdana_19_4bpp, 47, 23, 19, 0, 0, 4, 1, 1, 1, unicodes_verdana_19_4bpp, kerning_verdana_19_4bpp, 63, 0, 0, 0);
 8007f28:	d122      	bne.n	8007f70 <_Z23getFont_verdana_19_4bppv+0x58>
 8007f2a:	4628      	mov	r0, r5
 8007f2c:	f021 fa79 	bl	8029422 <__cxa_guard_acquire>
 8007f30:	b1f0      	cbz	r0, 8007f70 <_Z23getFont_verdana_19_4bppv+0x58>
 8007f32:	233f      	movs	r3, #63	; 0x3f
 8007f34:	9309      	str	r3, [sp, #36]	; 0x24
 8007f36:	4b11      	ldr	r3, [pc, #68]	; (8007f7c <_Z23getFont_verdana_19_4bppv+0x64>)
 8007f38:	9308      	str	r3, [sp, #32]
 8007f3a:	4b11      	ldr	r3, [pc, #68]	; (8007f80 <_Z23getFont_verdana_19_4bppv+0x68>)
 8007f3c:	9307      	str	r3, [sp, #28]
 8007f3e:	2301      	movs	r3, #1
 8007f40:	e9cd 3305 	strd	r3, r3, [sp, #20]
 8007f44:	9304      	str	r3, [sp, #16]
 8007f46:	2304      	movs	r3, #4
 8007f48:	e9cd 4302 	strd	r4, r3, [sp, #8]
 8007f4c:	2313      	movs	r3, #19
 8007f4e:	490d      	ldr	r1, [pc, #52]	; (8007f84 <_Z23getFont_verdana_19_4bppv+0x6c>)
 8007f50:	9300      	str	r3, [sp, #0]
 8007f52:	222f      	movs	r2, #47	; 0x2f
 8007f54:	2317      	movs	r3, #23
 8007f56:	e9cd 440b 	strd	r4, r4, [sp, #44]	; 0x2c
 8007f5a:	480b      	ldr	r0, [pc, #44]	; (8007f88 <_Z23getFont_verdana_19_4bppv+0x70>)
 8007f5c:	940a      	str	r4, [sp, #40]	; 0x28
 8007f5e:	9401      	str	r4, [sp, #4]
 8007f60:	f7fd f980 	bl	8005264 <_ZN8touchgfx13GeneratedFontC1EPKNS_9GlyphNodeEttthhhhhhPKPKhPKNS_11KerningNodeEttPKtPKNS_24FontContextualFormsTableE>
 8007f64:	4809      	ldr	r0, [pc, #36]	; (8007f8c <_Z23getFont_verdana_19_4bppv+0x74>)
 8007f66:	f022 f88b 	bl	802a080 <atexit>
 8007f6a:	4628      	mov	r0, r5
 8007f6c:	f021 fa65 	bl	802943a <__cxa_guard_release>
    return verdana_19_4bpp;
}
 8007f70:	4805      	ldr	r0, [pc, #20]	; (8007f88 <_Z23getFont_verdana_19_4bppv+0x70>)
 8007f72:	b00f      	add	sp, #60	; 0x3c
 8007f74:	bd30      	pop	{r4, r5, pc}
 8007f76:	bf00      	nop
 8007f78:	200020a4 	.word	0x200020a4
 8007f7c:	0804548c 	.word	0x0804548c
 8007f80:	0804553c 	.word	0x0804553c
 8007f84:	08045130 	.word	0x08045130
 8007f88:	200020a8 	.word	0x200020a8
 8007f8c:	08007f15 	.word	0x08007f15

08007f90 <__tcf_0>:
KEEP extern const touchgfx::KerningNode kerning_verdana_40_4bpp[] FONT_KERNING_LOCATION_FLASH_ATTRIBUTE;
touchgfx::GeneratedFont& getFont_verdana_40_4bpp();

touchgfx::GeneratedFont& getFont_verdana_40_4bpp()
{
    static touchgfx::GeneratedFont verdana_40_4bpp(glyphs_verdana_40_4bpp, 1, 40, 40, 0, 0, 4, 1, 0, 0, unicodes_verdana_40_4bpp, kerning_verdana_40_4bpp, 63, 0, 0, 0);
 8007f90:	4770      	bx	lr
	...

08007f94 <_Z23getFont_verdana_40_4bppv>:
{
 8007f94:	b530      	push	{r4, r5, lr}
    static touchgfx::GeneratedFont verdana_40_4bpp(glyphs_verdana_40_4bpp, 1, 40, 40, 0, 0, 4, 1, 0, 0, unicodes_verdana_40_4bpp, kerning_verdana_40_4bpp, 63, 0, 0, 0);
 8007f96:	4d16      	ldr	r5, [pc, #88]	; (8007ff0 <_Z23getFont_verdana_40_4bppv+0x5c>)
 8007f98:	682c      	ldr	r4, [r5, #0]
 8007f9a:	f3bf 8f5b 	dmb	ish
 8007f9e:	f014 0401 	ands.w	r4, r4, #1
{
 8007fa2:	b08f      	sub	sp, #60	; 0x3c
    static touchgfx::GeneratedFont verdana_40_4bpp(glyphs_verdana_40_4bpp, 1, 40, 40, 0, 0, 4, 1, 0, 0, unicodes_verdana_40_4bpp, kerning_verdana_40_4bpp, 63, 0, 0, 0);
 8007fa4:	d120      	bne.n	8007fe8 <_Z23getFont_verdana_40_4bppv+0x54>
 8007fa6:	4628      	mov	r0, r5
 8007fa8:	f021 fa3b 	bl	8029422 <__cxa_guard_acquire>
 8007fac:	b1e0      	cbz	r0, 8007fe8 <_Z23getFont_verdana_40_4bppv+0x54>
 8007fae:	233f      	movs	r3, #63	; 0x3f
 8007fb0:	9309      	str	r3, [sp, #36]	; 0x24
 8007fb2:	4b10      	ldr	r3, [pc, #64]	; (8007ff4 <_Z23getFont_verdana_40_4bppv+0x60>)
 8007fb4:	9308      	str	r3, [sp, #32]
 8007fb6:	4b10      	ldr	r3, [pc, #64]	; (8007ff8 <_Z23getFont_verdana_40_4bppv+0x64>)
 8007fb8:	4910      	ldr	r1, [pc, #64]	; (8007ffc <_Z23getFont_verdana_40_4bppv+0x68>)
 8007fba:	4811      	ldr	r0, [pc, #68]	; (8008000 <_Z23getFont_verdana_40_4bppv+0x6c>)
 8007fbc:	940a      	str	r4, [sp, #40]	; 0x28
 8007fbe:	2201      	movs	r2, #1
 8007fc0:	e9cd 4306 	strd	r4, r3, [sp, #24]
 8007fc4:	2304      	movs	r3, #4
 8007fc6:	e9cd 3203 	strd	r3, r2, [sp, #12]
 8007fca:	2328      	movs	r3, #40	; 0x28
 8007fcc:	9300      	str	r3, [sp, #0]
 8007fce:	e9cd 440b 	strd	r4, r4, [sp, #44]	; 0x2c
 8007fd2:	e9cd 4401 	strd	r4, r4, [sp, #4]
 8007fd6:	9405      	str	r4, [sp, #20]
 8007fd8:	f7fd f944 	bl	8005264 <_ZN8touchgfx13GeneratedFontC1EPKNS_9GlyphNodeEttthhhhhhPKPKhPKNS_11KerningNodeEttPKtPKNS_24FontContextualFormsTableE>
 8007fdc:	4809      	ldr	r0, [pc, #36]	; (8008004 <_Z23getFont_verdana_40_4bppv+0x70>)
 8007fde:	f022 f84f 	bl	802a080 <atexit>
 8007fe2:	4628      	mov	r0, r5
 8007fe4:	f021 fa29 	bl	802943a <__cxa_guard_release>
    return verdana_40_4bpp;
}
 8007fe8:	4805      	ldr	r0, [pc, #20]	; (8008000 <_Z23getFont_verdana_40_4bppv+0x6c>)
 8007fea:	b00f      	add	sp, #60	; 0x3c
 8007fec:	bd30      	pop	{r4, r5, pc}
 8007fee:	bf00      	nop
 8007ff0:	200020d4 	.word	0x200020d4
 8007ff4:	08045530 	.word	0x08045530
 8007ff8:	08045540 	.word	0x08045540
 8007ffc:	080453c4 	.word	0x080453c4
 8008000:	200020d8 	.word	0x200020d8
 8008004:	08007f91 	.word	0x08007f91

08008008 <_ZNK8touchgfx4Font12getGSUBTableEv>:
     * @return The GSUB table or null if font has GSUB no table.
     */
    virtual const uint16_t* getGSUBTable() const
    {
        return 0;
    }
 8008008:	2000      	movs	r0, #0
 800800a:	4770      	bx	lr

0800800c <_ZNK8touchgfx4Font23getContextualFormsTableEv>:
     * @return The FontContextualFormsTable or null if the font has no table.
     */
    virtual const FontContextualFormsTable* getContextualFormsTable() const
    {
        return 0;
    }
 800800c:	2000      	movs	r0, #0
 800800e:	4770      	bx	lr

08008010 <_ZNK8touchgfx4Font14getStringWidthEPKtz>:
#include <touchgfx/hal/HAL.hpp>
#include <touchgfx/lcd/LCD.hpp>
#include <texts/TypedTextDatabase.hpp>

uint16_t touchgfx::Font::getStringWidth(const touchgfx::Unicode::UnicodeChar* text, ...) const
{
 8008010:	b40e      	push	{r1, r2, r3}
 8008012:	b503      	push	{r0, r1, lr}
 8008014:	ab03      	add	r3, sp, #12
    va_list pArg;
    va_start(pArg, text);
    uint16_t width = getStringWidthLTR(TEXT_DIRECTION_LTR, text, pArg);
 8008016:	2100      	movs	r1, #0
{
 8008018:	f853 2b04 	ldr.w	r2, [r3], #4
    va_start(pArg, text);
 800801c:	9301      	str	r3, [sp, #4]
    uint16_t width = getStringWidthLTR(TEXT_DIRECTION_LTR, text, pArg);
 800801e:	f00e f945 	bl	80162ac <_ZNK8touchgfx4Font17getStringWidthLTREhPKtSt9__va_list>
    va_end(pArg);
    return width;
}
 8008022:	b002      	add	sp, #8
 8008024:	f85d eb04 	ldr.w	lr, [sp], #4
 8008028:	b003      	add	sp, #12
 800802a:	4770      	bx	lr

0800802c <_ZNK8touchgfx4Font14getStringWidthEhPKtz>:

uint16_t touchgfx::Font::getStringWidth(touchgfx::TextDirection textDirection, const touchgfx::Unicode::UnicodeChar* text, ...) const
{
 800802c:	b40c      	push	{r2, r3}
 800802e:	b507      	push	{r0, r1, r2, lr}
 8008030:	ab04      	add	r3, sp, #16
 8008032:	f853 2b04 	ldr.w	r2, [r3], #4
    va_list pArg;
    va_start(pArg, text);
 8008036:	9301      	str	r3, [sp, #4]
    uint16_t width = getStringWidthLTR(textDirection, text, pArg);
 8008038:	f00e f938 	bl	80162ac <_ZNK8touchgfx4Font17getStringWidthLTREhPKtSt9__va_list>
    va_end(pArg);
    return width;
}
 800803c:	b003      	add	sp, #12
 800803e:	f85d eb04 	ldr.w	lr, [sp], #4
 8008042:	b002      	add	sp, #8
 8008044:	4770      	bx	lr
	...

08008048 <_ZN8touchgfx12TextProvider15getNextLigatureEh>:

touchgfx::Unicode::UnicodeChar touchgfx::TextProvider::getNextLigature(TextDirection direction)
{
    if (fontGsubTable && nextCharacters.peekChar())
 8008048:	6c43      	ldr	r3, [r0, #68]	; 0x44
{
 800804a:	b510      	push	{r4, lr}
 800804c:	4604      	mov	r4, r0
    if (fontGsubTable && nextCharacters.peekChar())
 800804e:	b373      	cbz	r3, 80080ae <_ZN8touchgfx12TextProvider15getNextLigatureEh+0x66>
            return used == size;
        }

        FORCE_INLINE_FUNCTION Unicode::UnicodeChar peekChar()
        {
            assert(used > 0);
 8008050:	8f03      	ldrh	r3, [r0, #56]	; 0x38
 8008052:	b92b      	cbnz	r3, 8008060 <_ZN8touchgfx12TextProvider15getNextLigatureEh+0x18>
 8008054:	4b18      	ldr	r3, [pc, #96]	; (80080b8 <_ZN8touchgfx12TextProvider15getNextLigatureEh+0x70>)
 8008056:	4a19      	ldr	r2, [pc, #100]	; (80080bc <_ZN8touchgfx12TextProvider15getNextLigatureEh+0x74>)
 8008058:	21c5      	movs	r1, #197	; 0xc5
            return buffer[pos];
        }

        FORCE_INLINE_FUNCTION Unicode::UnicodeChar peekChar(uint16_t offset)
        {
            assert(offset < used);
 800805a:	4819      	ldr	r0, [pc, #100]	; (80080c0 <_ZN8touchgfx12TextProvider15getNextLigatureEh+0x78>)
 800805c:	f021 fff2 	bl	802a044 <__assert_func>
            return buffer[pos];
 8008060:	8ec3      	ldrh	r3, [r0, #54]	; 0x36
 8008062:	eb00 0343 	add.w	r3, r0, r3, lsl #1
 8008066:	8c5b      	ldrh	r3, [r3, #34]	; 0x22
 8008068:	b30b      	cbz	r3, 80080ae <_ZN8touchgfx12TextProvider15getNextLigatureEh+0x66>
    {
        substituteGlyphs();
 800806a:	f00f fd1c 	bl	8017aa6 <_ZN8touchgfx12TextProvider16substituteGlyphsEv>
            assert(offset < used);
 800806e:	8f23      	ldrh	r3, [r4, #56]	; 0x38
 8008070:	2b01      	cmp	r3, #1
 8008072:	d803      	bhi.n	800807c <_ZN8touchgfx12TextProvider15getNextLigatureEh+0x34>
 8008074:	4b13      	ldr	r3, [pc, #76]	; (80080c4 <_ZN8touchgfx12TextProvider15getNextLigatureEh+0x7c>)
 8008076:	4a14      	ldr	r2, [pc, #80]	; (80080c8 <_ZN8touchgfx12TextProvider15getNextLigatureEh+0x80>)
 8008078:	21cb      	movs	r1, #203	; 0xcb
 800807a:	e7ee      	b.n	800805a <_ZN8touchgfx12TextProvider15getNextLigatureEh+0x12>
            const uint16_t index = pos + offset;
 800807c:	8ee2      	ldrh	r2, [r4, #54]	; 0x36
 800807e:	1c53      	adds	r3, r2, #1
 8008080:	b29b      	uxth	r3, r3
            return buffer[index < size ? index : index - size];
 8008082:	2b09      	cmp	r3, #9
 8008084:	4619      	mov	r1, r3
 8008086:	bf88      	it	hi
 8008088:	f1a3 010a 	subhi.w	r1, r3, #10
 800808c:	eb04 0141 	add.w	r1, r4, r1, lsl #1
        if (nextCharacters.peekChar(1) == 0x093F) // Hindi I-matra
 8008090:	f640 103f 	movw	r0, #2367	; 0x93f
 8008094:	8c49      	ldrh	r1, [r1, #34]	; 0x22
 8008096:	4281      	cmp	r1, r0
 8008098:	d109      	bne.n	80080ae <_ZN8touchgfx12TextProvider15getNextLigatureEh+0x66>
        FORCE_INLINE_FUNCTION Unicode::UnicodeChar peekChar()
 800809a:	2b0a      	cmp	r3, #10
 800809c:	eb04 0242 	add.w	r2, r4, r2, lsl #1
 80080a0:	bf28      	it	cs
 80080a2:	2300      	movcs	r3, #0

        FORCE_INLINE_FUNCTION void replaceAt1(Unicode::UnicodeChar newChar)
        {
            assert(used > 1);
            const uint16_t index = pos + 1;
            buffer[index < size ? index : 0] = newChar;
 80080a4:	eb04 0343 	add.w	r3, r4, r3, lsl #1
            return buffer[pos];
 80080a8:	8c50      	ldrh	r0, [r2, #34]	; 0x22
            buffer[index < size ? index : 0] = newChar;
 80080aa:	8458      	strh	r0, [r3, #34]	; 0x22
            buffer[pos] = newChar;
 80080ac:	8451      	strh	r1, [r2, #34]	; 0x22
        {
            nextCharacters.replaceAt1(nextCharacters.peekChar());
            nextCharacters.replaceAt0(0x093F);
        }
    }
    return getNextChar();
 80080ae:	4620      	mov	r0, r4
}
 80080b0:	e8bd 4010 	ldmia.w	sp!, {r4, lr}
    return getNextChar();
 80080b4:	f00f bbfa 	b.w	80178ac <_ZN8touchgfx12TextProvider11getNextCharEv>
 80080b8:	0802d844 	.word	0x0802d844
 80080bc:	0802d84d 	.word	0x0802d84d
 80080c0:	0802d8f8 	.word	0x0802d8f8
 80080c4:	0802d942 	.word	0x0802d942
 80080c8:	0802d950 	.word	0x0802d950

080080cc <_ZN8touchgfx12TextProvider18initializeInternalEv>:

void touchgfx::TextProvider::initializeInternal()
{
    fillInputBuffer();
 80080cc:	f00f bbb5 	b.w	801783a <_ZN8touchgfx12TextProvider15fillInputBufferEv>

080080d0 <_ZN8touchgfx3LCD10drawStringENS_4RectERKS1_RKNS0_13StringVisualsEPKtz>:
}

void touchgfx::LCD::drawString(touchgfx::Rect widgetArea, const touchgfx::Rect& invalidatedArea, const touchgfx::LCD::StringVisuals& stringVisuals, const touchgfx::Unicode::UnicodeChar* format, ...)
{
 80080d0:	b510      	push	{r4, lr}
 80080d2:	b086      	sub	sp, #24
 80080d4:	ac02      	add	r4, sp, #8
 80080d6:	e884 0006 	stmia.w	r4, {r1, r2}
 80080da:	461a      	mov	r2, r3
    va_list pArg;
    va_start(pArg, format);
 80080dc:	ab0a      	add	r3, sp, #40	; 0x28
 80080de:	9305      	str	r3, [sp, #20]
    drawStringLTR(widgetArea, invalidatedArea, stringVisuals, format, pArg);
 80080e0:	9301      	str	r3, [sp, #4]
 80080e2:	9b09      	ldr	r3, [sp, #36]	; 0x24
 80080e4:	9300      	str	r3, [sp, #0]
 80080e6:	4621      	mov	r1, r4
 80080e8:	9b08      	ldr	r3, [sp, #32]
 80080ea:	f00c fca3 	bl	8014a34 <_ZN8touchgfx3LCD13drawStringLTRERKNS_4RectES3_RKNS0_13StringVisualsEPKtSt9__va_list>
    va_end(pArg);
}
 80080ee:	b006      	add	sp, #24
 80080f0:	bd10      	pop	{r4, pc}
	...

080080f4 <_ZN8touchgfx5Texts11setLanguageEt>:
touchgfx::LanguageId touchgfx::Texts::currentLanguage = static_cast<touchgfx::LanguageId>(0);
static const touchgfx::Unicode::UnicodeChar* currentLanguagePtr = 0;
static const uint32_t* currentLanguageIndices = 0;

void touchgfx::Texts::setLanguage(touchgfx::LanguageId id)
{
 80080f4:	b538      	push	{r3, r4, r5, lr}
    const touchgfx::TypedText::TypedTextData* currentLanguageTypedText = 0;
    if (id < 1)
 80080f6:	bb18      	cbnz	r0, 8008140 <_ZN8touchgfx5Texts11setLanguageEt+0x4c>
    {
        if (languagesArray[id] != 0)
 80080f8:	4b12      	ldr	r3, [pc, #72]	; (8008144 <_ZN8touchgfx5Texts11setLanguageEt+0x50>)
 80080fa:	4813      	ldr	r0, [pc, #76]	; (8008148 <_ZN8touchgfx5Texts11setLanguageEt+0x54>)
 80080fc:	681c      	ldr	r4, [r3, #0]
 80080fe:	4913      	ldr	r1, [pc, #76]	; (800814c <_ZN8touchgfx5Texts11setLanguageEt+0x58>)
 8008100:	b1b4      	cbz	r4, 8008130 <_ZN8touchgfx5Texts11setLanguageEt+0x3c>
        {
            // Dynamic translation is added
            const TranslationHeader* translation = languagesArray[id];
            currentLanguagePtr = (const touchgfx::Unicode::UnicodeChar*)(((const uint8_t*)translation) + translation->offset_to_texts);
 8008102:	6822      	ldr	r2, [r4, #0]
 8008104:	4422      	add	r2, r4
 8008106:	6002      	str	r2, [r0, #0]
            currentLanguageIndices = (const uint32_t*)(((const uint8_t*)translation) + translation->offset_to_indices);
 8008108:	6862      	ldr	r2, [r4, #4]
 800810a:	4422      	add	r2, r4
 800810c:	600a      	str	r2, [r1, #0]
            currentLanguageTypedText = (const touchgfx::TypedText::TypedTextData*)(((const uint8_t*)translation) + translation->offset_to_typedtext);
 800810e:	68a2      	ldr	r2, [r4, #8]
 8008110:	4414      	add	r4, r2
        }
    }

    if (currentLanguageTypedText)
    {
        currentLanguage = id;
 8008112:	4b0f      	ldr	r3, [pc, #60]	; (8008150 <_ZN8touchgfx5Texts11setLanguageEt+0x5c>)
 8008114:	2200      	movs	r2, #0
 8008116:	801a      	strh	r2, [r3, #0]
        touchgfx::TypedText::registerTypedTextDatabase(currentLanguageTypedText,
                                                       TypedTextDatabase::getFonts(), TypedTextDatabase::getInstanceSize());
 8008118:	f000 f838 	bl	800818c <_ZN17TypedTextDatabase8getFontsEv>
 800811c:	4605      	mov	r5, r0
        touchgfx::TypedText::registerTypedTextDatabase(currentLanguageTypedText,
 800811e:	f000 f833 	bl	8008188 <_ZN17TypedTextDatabase15getInstanceSizeEv>
        typedTexts = data;
 8008122:	4b0c      	ldr	r3, [pc, #48]	; (8008154 <_ZN8touchgfx5Texts11setLanguageEt+0x60>)
 8008124:	601c      	str	r4, [r3, #0]
        fonts = f;
 8008126:	4b0c      	ldr	r3, [pc, #48]	; (8008158 <_ZN8touchgfx5Texts11setLanguageEt+0x64>)
 8008128:	601d      	str	r5, [r3, #0]
        numberOfTypedTexts = n;
 800812a:	4b0c      	ldr	r3, [pc, #48]	; (800815c <_ZN8touchgfx5Texts11setLanguageEt+0x68>)
 800812c:	8018      	strh	r0, [r3, #0]
    }
}
 800812e:	e007      	b.n	8008140 <_ZN8touchgfx5Texts11setLanguageEt+0x4c>
            currentLanguagePtr = texts_all_languages;
 8008130:	4b0b      	ldr	r3, [pc, #44]	; (8008160 <_ZN8touchgfx5Texts11setLanguageEt+0x6c>)
 8008132:	6003      	str	r3, [r0, #0]
            currentLanguageIndices = staticLanguageIndices[id];
 8008134:	4b0b      	ldr	r3, [pc, #44]	; (8008164 <_ZN8touchgfx5Texts11setLanguageEt+0x70>)
 8008136:	600b      	str	r3, [r1, #0]
            currentLanguageTypedText = typedTextDatabaseArray[id];
 8008138:	4b0b      	ldr	r3, [pc, #44]	; (8008168 <_ZN8touchgfx5Texts11setLanguageEt+0x74>)
 800813a:	681c      	ldr	r4, [r3, #0]
    if (currentLanguageTypedText)
 800813c:	2c00      	cmp	r4, #0
 800813e:	d1e8      	bne.n	8008112 <_ZN8touchgfx5Texts11setLanguageEt+0x1e>
}
 8008140:	bd38      	pop	{r3, r4, r5, pc}
 8008142:	bf00      	nop
 8008144:	20002104 	.word	0x20002104
 8008148:	20002108 	.word	0x20002108
 800814c:	2000210c 	.word	0x2000210c
 8008150:	20002110 	.word	0x20002110
 8008154:	20012f7c 	.word	0x20012f7c
 8008158:	20012f84 	.word	0x20012f84
 800815c:	20012f80 	.word	0x20012f80
 8008160:	08045698 	.word	0x08045698
 8008164:	08045544 	.word	0x08045544
 8008168:	08045bb4 	.word	0x08045bb4

0800816c <_ZNK8touchgfx5Texts7getTextEt>:
    languagesArray[id] = (const TranslationHeader*)translation;
}

const touchgfx::Unicode::UnicodeChar* touchgfx::Texts::getText(TypedTextId id) const
{
    return &currentLanguagePtr[currentLanguageIndices[id]];
 800816c:	4b04      	ldr	r3, [pc, #16]	; (8008180 <_ZNK8touchgfx5Texts7getTextEt+0x14>)
 800816e:	681b      	ldr	r3, [r3, #0]
 8008170:	f853 0021 	ldr.w	r0, [r3, r1, lsl #2]
 8008174:	4b03      	ldr	r3, [pc, #12]	; (8008184 <_ZNK8touchgfx5Texts7getTextEt+0x18>)
 8008176:	681b      	ldr	r3, [r3, #0]
}
 8008178:	eb03 0040 	add.w	r0, r3, r0, lsl #1
 800817c:	4770      	bx	lr
 800817e:	bf00      	nop
 8008180:	2000210c 	.word	0x2000210c
 8008184:	20002108 	.word	0x20002108

08008188 <_ZN17TypedTextDatabase15getInstanceSizeEv>:
}

uint16_t getInstanceSize()
{
    return sizeof(typedText_database_DEFAULT) / sizeof(touchgfx::TypedText::TypedTextData);
}
 8008188:	2055      	movs	r0, #85	; 0x55
 800818a:	4770      	bx	lr

0800818c <_ZN17TypedTextDatabase8getFontsEv>:

const touchgfx::Font** getFonts()
{
    return touchgfx_fonts;
}
 800818c:	4800      	ldr	r0, [pc, #0]	; (8008190 <_ZN17TypedTextDatabase8getFontsEv+0x4>)
 800818e:	4770      	bx	lr
 8008190:	20002114 	.word	0x20002114

08008194 <_GLOBAL__sub_I_touchgfx_fonts>:
    case 3:
        touchgfx_fonts[3] = &(getFont_verdana_12_4bpp());
        break;
    }
}
} // namespace TypedTextDatabase
 8008194:	b510      	push	{r4, lr}
    &(getFont_verdana_19_4bpp()),
 8008196:	f7ff febf 	bl	8007f18 <_Z23getFont_verdana_19_4bppv>
};
 800819a:	4c06      	ldr	r4, [pc, #24]	; (80081b4 <_GLOBAL__sub_I_touchgfx_fonts+0x20>)
 800819c:	6020      	str	r0, [r4, #0]
    &(getFont_verdana_40_4bpp()),
 800819e:	f7ff fef9 	bl	8007f94 <_Z23getFont_verdana_40_4bppv>
};
 80081a2:	6060      	str	r0, [r4, #4]
    &(getFont_verdana_10_4bpp()),
 80081a4:	f7ff fe3c 	bl	8007e20 <_Z23getFont_verdana_10_4bppv>
};
 80081a8:	60a0      	str	r0, [r4, #8]
    &(getFont_verdana_12_4bpp())
 80081aa:	f7ff fe77 	bl	8007e9c <_Z23getFont_verdana_12_4bppv>
};
 80081ae:	60e0      	str	r0, [r4, #12]
} // namespace TypedTextDatabase
 80081b0:	bd10      	pop	{r4, pc}
 80081b2:	bf00      	nop
 80081b4:	20002114 	.word	0x20002114

080081b8 <_ZN20CalibrationPresenterD1Ev>:
     * The deactivate function is called automatically when this screen is "switched out"
     * (ie. made inactive). Teardown functionality can be placed here.
     */
    virtual void deactivate();

    virtual ~CalibrationPresenter() {}
 80081b8:	4770      	bx	lr

080081ba <_ZThn4_N20CalibrationPresenterD1Ev>:
 80081ba:	3804      	subs	r0, #4
 80081bc:	4770      	bx	lr

080081be <_ZN20CalibrationPresenter10deactivateEv>:
}

void CalibrationPresenter::activate()
{

}
 80081be:	4770      	bx	lr

080081c0 <_ZN20CalibrationPresenter15setTimeoutValueEi>:

}

void CalibrationPresenter::setTimeoutValue(int value)
{
	view.setTimeoutValue(value);
 80081c0:	68c0      	ldr	r0, [r0, #12]
 80081c2:	6803      	ldr	r3, [r0, #0]
 80081c4:	6adb      	ldr	r3, [r3, #44]	; 0x2c
 80081c6:	4718      	bx	r3

080081c8 <_ZThn4_N20CalibrationPresenter15setTimeoutValueEi>:

    virtual void setTimeoutValue(int value);
 80081c8:	f1a0 0004 	sub.w	r0, r0, #4
 80081cc:	f7ff bff8 	b.w	80081c0 <_ZN20CalibrationPresenter15setTimeoutValueEi>

080081d0 <_ZN20CalibrationPresenterD0Ev>:
    virtual ~CalibrationPresenter() {}
 80081d0:	b510      	push	{r4, lr}
 80081d2:	2110      	movs	r1, #16
 80081d4:	4604      	mov	r4, r0
 80081d6:	f021 f922 	bl	802941e <_ZdlPvj>
 80081da:	4620      	mov	r0, r4
 80081dc:	bd10      	pop	{r4, pc}

080081de <_ZThn4_N20CalibrationPresenterD0Ev>:
 80081de:	f1a0 0004 	sub.w	r0, r0, #4
 80081e2:	e7f5      	b.n	80081d0 <_ZN20CalibrationPresenterD0Ev>

080081e4 <_ZN20CalibrationPresenterC1ER15CalibrationView>:
CalibrationPresenter::CalibrationPresenter(CalibrationView& v)
 80081e4:	b510      	push	{r4, lr}
    ModelListener() : model(0) {}
 80081e6:	2200      	movs	r2, #0
 80081e8:	6082      	str	r2, [r0, #8]
    : view(v)
 80081ea:	4a04      	ldr	r2, [pc, #16]	; (80081fc <_ZN20CalibrationPresenterC1ER15CalibrationView+0x18>)
 80081ec:	60c1      	str	r1, [r0, #12]
 80081ee:	f102 0408 	add.w	r4, r2, #8
 80081f2:	3224      	adds	r2, #36	; 0x24
 80081f4:	6004      	str	r4, [r0, #0]
 80081f6:	6042      	str	r2, [r0, #4]
}
 80081f8:	bd10      	pop	{r4, pc}
 80081fa:	bf00      	nop
 80081fc:	0802da24 	.word	0x0802da24

08008200 <_ZN15CalibrationView14tearDownScreenEv>:
}

void CalibrationView::tearDownScreen()
{
    CalibrationViewBase::tearDownScreen();
}
 8008200:	4770      	bx	lr
	...

08008204 <_ZN15CalibrationViewD1Ev>:

class CalibrationView : public CalibrationViewBase
{
public:
    CalibrationView();
    virtual ~CalibrationView() {}
 8008204:	b510      	push	{r4, lr}
 8008206:	4b03      	ldr	r3, [pc, #12]	; (8008214 <_ZN15CalibrationViewD1Ev+0x10>)
 8008208:	6003      	str	r3, [r0, #0]
 800820a:	4604      	mov	r4, r0
 800820c:	f7fa fa30 	bl	8002670 <_ZN19CalibrationViewBaseD1Ev>
 8008210:	4620      	mov	r0, r4
 8008212:	bd10      	pop	{r4, pc}
 8008214:	0802da60 	.word	0x0802da60

08008218 <_ZN15CalibrationViewD0Ev>:
 8008218:	b510      	push	{r4, lr}
 800821a:	4604      	mov	r4, r0
 800821c:	f7ff fff2 	bl	8008204 <_ZN15CalibrationViewD1Ev>
 8008220:	4620      	mov	r0, r4
 8008222:	f44f 518a 	mov.w	r1, #4416	; 0x1140
 8008226:	f021 f8fa 	bl	802941e <_ZdlPvj>
 800822a:	4620      	mov	r0, r4
 800822c:	bd10      	pop	{r4, pc}
	...

08008230 <_ZN15CalibrationViewC1Ev>:
CalibrationView::CalibrationView()
 8008230:	b510      	push	{r4, lr}
 8008232:	4604      	mov	r4, r0
 8008234:	f7fa fb30 	bl	8002898 <_ZN19CalibrationViewBaseC1Ev>
 8008238:	4b01      	ldr	r3, [pc, #4]	; (8008240 <_ZN15CalibrationViewC1Ev+0x10>)
 800823a:	6023      	str	r3, [r4, #0]
}
 800823c:	4620      	mov	r0, r4
 800823e:	bd10      	pop	{r4, pc}
 8008240:	0802da60 	.word	0x0802da60

08008244 <_ZN15CalibrationView11setupScreenEv>:
    CalibrationViewBase::setupScreen();
 8008244:	f7fa b9e1 	b.w	800260a <_ZN19CalibrationViewBase11setupScreenEv>

08008248 <_ZN15CalibrationView15setTimeoutValueEi>:

void CalibrationView::setTimeoutValue(int value)
{
 8008248:	b538      	push	{r3, r4, r5, lr}
	//display the timeout value on the GUI
	Unicode::snprintf(textArea3_1Buffer, TEXTAREA3_1_SIZE, "%d", value);
 800824a:	4a0a      	ldr	r2, [pc, #40]	; (8008274 <_ZN15CalibrationView15setTimeoutValueEi+0x2c>)
{
 800824c:	4605      	mov	r5, r0
 800824e:	460c      	mov	r4, r1
	Unicode::snprintf(textArea3_1Buffer, TEXTAREA3_1_SIZE, "%d", value);
 8008250:	460b      	mov	r3, r1
 8008252:	f500 7046 	add.w	r0, r0, #792	; 0x318
 8008256:	2104      	movs	r1, #4
 8008258:	f010 f9da 	bl	8018610 <_ZN8touchgfx7Unicode8snprintfEPttPKcz>
	textArea3_1.invalidate();
 800825c:	f105 0098 	add.w	r0, r5, #152	; 0x98
 8008260:	f00e f94e 	bl	8016500 <_ZNK8touchgfx8Drawable10invalidateEv>

	if(value == 0)
 8008264:	b92c      	cbnz	r4, 8008272 <_ZN15CalibrationView15setTimeoutValueEi+0x2a>
 8008266:	f00d f863 	bl	8015330 <_ZN8touchgfx11Application11getInstanceEv>
	{
		//application().gotoMeasurement_SingleScreenSlideTransitionWest();
		application().gotoShutting_OffScreenNoTransition();
	}
}
 800826a:	e8bd 4038 	ldmia.w	sp!, {r3, r4, r5, lr}
		application().gotoShutting_OffScreenNoTransition();
 800826e:	f7fb bc71 	b.w	8003b54 <_ZN23FrontendApplicationBase34gotoShutting_OffScreenNoTransitionEv>
}
 8008272:	bd38      	pop	{r3, r4, r5, pc}
 8008274:	0802da54 	.word	0x0802da54

08008278 <_ZN25Calibration_HallPresenterD1Ev>:
     * The deactivate function is called automatically when this screen is "switched out"
     * (ie. made inactive). Teardown functionality can be placed here.
     */
    virtual void deactivate();

    virtual ~Calibration_HallPresenter() {}
 8008278:	4770      	bx	lr

0800827a <_ZThn4_N25Calibration_HallPresenterD1Ev>:
 800827a:	3804      	subs	r0, #4
 800827c:	4770      	bx	lr

0800827e <_ZN25Calibration_HallPresenter10deactivateEv>:
}

void Calibration_HallPresenter::activate()
{

}
 800827e:	4770      	bx	lr

08008280 <_ZN25Calibration_HallPresenter15setTimeoutValueEi>:
}

void Calibration_HallPresenter::setTimeoutValue(int value)
{

}
 8008280:	4770      	bx	lr

08008282 <_ZN25Calibration_HallPresenterD0Ev>:
 8008282:	b510      	push	{r4, lr}
 8008284:	2110      	movs	r1, #16
 8008286:	4604      	mov	r4, r0
 8008288:	f021 f8c9 	bl	802941e <_ZdlPvj>
 800828c:	4620      	mov	r0, r4
 800828e:	bd10      	pop	{r4, pc}

08008290 <_ZThn4_N25Calibration_HallPresenterD0Ev>:
 8008290:	f1a0 0004 	sub.w	r0, r0, #4
 8008294:	e7f5      	b.n	8008282 <_ZN25Calibration_HallPresenterD0Ev>

08008296 <_ZThn4_N25Calibration_HallPresenter15setTimeoutValueEi>:
 8008296:	4770      	bx	lr

08008298 <_ZN25Calibration_HallPresenterC1ER20Calibration_HallView>:
Calibration_HallPresenter::Calibration_HallPresenter(Calibration_HallView& v)
 8008298:	b510      	push	{r4, lr}
 800829a:	2200      	movs	r2, #0
 800829c:	6082      	str	r2, [r0, #8]
    : view(v)
 800829e:	4a04      	ldr	r2, [pc, #16]	; (80082b0 <_ZN25Calibration_HallPresenterC1ER20Calibration_HallView+0x18>)
 80082a0:	60c1      	str	r1, [r0, #12]
 80082a2:	f102 0408 	add.w	r4, r2, #8
 80082a6:	3224      	adds	r2, #36	; 0x24
 80082a8:	6004      	str	r4, [r0, #0]
 80082aa:	6042      	str	r2, [r0, #4]
}
 80082ac:	bd10      	pop	{r4, pc}
 80082ae:	bf00      	nop
 80082b0:	0802da90 	.word	0x0802da90

080082b4 <_ZN20Calibration_HallView14tearDownScreenEv>:
}

void Calibration_HallView::tearDownScreen()
{
    Calibration_HallViewBase::tearDownScreen();
}
 80082b4:	4770      	bx	lr

080082b6 <_ZN20Calibration_HallView15setTimeoutValueEi>:

void Calibration_HallView::setTimeoutValue(int value)
{

}
 80082b6:	4770      	bx	lr

080082b8 <_ZN20Calibration_HallViewD1Ev>:

class Calibration_HallView : public Calibration_HallViewBase
{
public:
    Calibration_HallView();
    virtual ~Calibration_HallView() {}
 80082b8:	b510      	push	{r4, lr}
 80082ba:	4b03      	ldr	r3, [pc, #12]	; (80082c8 <_ZN20Calibration_HallViewD1Ev+0x10>)
 80082bc:	6003      	str	r3, [r0, #0]
 80082be:	4604      	mov	r4, r0
 80082c0:	f7fa fd2e 	bl	8002d20 <_ZN24Calibration_HallViewBaseD1Ev>
 80082c4:	4620      	mov	r0, r4
 80082c6:	bd10      	pop	{r4, pc}
 80082c8:	0802dac8 	.word	0x0802dac8

080082cc <_ZN20Calibration_HallViewD0Ev>:
 80082cc:	b510      	push	{r4, lr}
 80082ce:	4604      	mov	r4, r0
 80082d0:	f7ff fff2 	bl	80082b8 <_ZN20Calibration_HallViewD1Ev>
 80082d4:	4620      	mov	r0, r4
 80082d6:	f241 015c 	movw	r1, #4188	; 0x105c
 80082da:	f021 f8a0 	bl	802941e <_ZdlPvj>
 80082de:	4620      	mov	r0, r4
 80082e0:	bd10      	pop	{r4, pc}
	...

080082e4 <_ZN20Calibration_HallViewC1Ev>:
Calibration_HallView::Calibration_HallView()
 80082e4:	b510      	push	{r4, lr}
 80082e6:	4604      	mov	r4, r0
 80082e8:	f7fa fd42 	bl	8002d70 <_ZN24Calibration_HallViewBaseC1Ev>
 80082ec:	4b01      	ldr	r3, [pc, #4]	; (80082f4 <_ZN20Calibration_HallViewC1Ev+0x10>)
 80082ee:	6023      	str	r3, [r4, #0]
}
 80082f0:	4620      	mov	r0, r4
 80082f2:	bd10      	pop	{r4, pc}
 80082f4:	0802dac8 	.word	0x0802dac8

080082f8 <_ZN20Calibration_HallView11setupScreenEv>:
    Calibration_HallViewBase::setupScreen();
 80082f8:	f7fa bcee 	b.w	8002cd8 <_ZN24Calibration_HallViewBase11setupScreenEv>

080082fc <_ZN24Calibration_PadPresenterD1Ev>:
     * The deactivate function is called automatically when this screen is "switched out"
     * (ie. made inactive). Teardown functionality can be placed here.
     */
    virtual void deactivate();

    virtual ~Calibration_PadPresenter() {}
 80082fc:	4770      	bx	lr

080082fe <_ZThn4_N24Calibration_PadPresenterD1Ev>:
 80082fe:	3804      	subs	r0, #4
 8008300:	4770      	bx	lr

08008302 <_ZN24Calibration_PadPresenter10deactivateEv>:
}

void Calibration_PadPresenter::activate()
{

}
 8008302:	4770      	bx	lr

08008304 <_ZN24Calibration_PadPresenter15setTimeoutValueEi>:
}

void Calibration_PadPresenter::setTimeoutValue(int value)
{

}
 8008304:	4770      	bx	lr

08008306 <_ZN24Calibration_PadPresenterD0Ev>:
 8008306:	b510      	push	{r4, lr}
 8008308:	2110      	movs	r1, #16
 800830a:	4604      	mov	r4, r0
 800830c:	f021 f887 	bl	802941e <_ZdlPvj>
 8008310:	4620      	mov	r0, r4
 8008312:	bd10      	pop	{r4, pc}

08008314 <_ZThn4_N24Calibration_PadPresenterD0Ev>:
 8008314:	f1a0 0004 	sub.w	r0, r0, #4
 8008318:	e7f5      	b.n	8008306 <_ZN24Calibration_PadPresenterD0Ev>

0800831a <_ZThn4_N24Calibration_PadPresenter15setTimeoutValueEi>:
 800831a:	4770      	bx	lr

0800831c <_ZN24Calibration_PadPresenterC1ER19Calibration_PadView>:
Calibration_PadPresenter::Calibration_PadPresenter(Calibration_PadView& v)
 800831c:	b510      	push	{r4, lr}
 800831e:	2200      	movs	r2, #0
 8008320:	6082      	str	r2, [r0, #8]
    : view(v)
 8008322:	4a04      	ldr	r2, [pc, #16]	; (8008334 <_ZN24Calibration_PadPresenterC1ER19Calibration_PadView+0x18>)
 8008324:	60c1      	str	r1, [r0, #12]
 8008326:	f102 0408 	add.w	r4, r2, #8
 800832a:	3224      	adds	r2, #36	; 0x24
 800832c:	6004      	str	r4, [r0, #0]
 800832e:	6042      	str	r2, [r0, #4]
}
 8008330:	bd10      	pop	{r4, pc}
 8008332:	bf00      	nop
 8008334:	0802daf8 	.word	0x0802daf8

08008338 <_ZN19Calibration_PadView14tearDownScreenEv>:
}

void Calibration_PadView::tearDownScreen()
{
    Calibration_PadViewBase::tearDownScreen();
}
 8008338:	4770      	bx	lr

0800833a <_ZN19Calibration_PadView15setTimeoutValueEi>:

void Calibration_PadView::setTimeoutValue(int value)
{

}
 800833a:	4770      	bx	lr

0800833c <_ZN19Calibration_PadViewD1Ev>:

class Calibration_PadView : public Calibration_PadViewBase
{
public:
    Calibration_PadView();
    virtual ~Calibration_PadView() {}
 800833c:	b510      	push	{r4, lr}
 800833e:	4b03      	ldr	r3, [pc, #12]	; (800834c <_ZN19Calibration_PadViewD1Ev+0x10>)
 8008340:	6003      	str	r3, [r0, #0]
 8008342:	4604      	mov	r4, r0
 8008344:	f7fa fe9c 	bl	8003080 <_ZN23Calibration_PadViewBaseD1Ev>
 8008348:	4620      	mov	r0, r4
 800834a:	bd10      	pop	{r4, pc}
 800834c:	0802db30 	.word	0x0802db30

08008350 <_ZN19Calibration_PadViewD0Ev>:
 8008350:	b510      	push	{r4, lr}
 8008352:	4604      	mov	r4, r0
 8008354:	f7ff fff2 	bl	800833c <_ZN19Calibration_PadViewD1Ev>
 8008358:	4620      	mov	r0, r4
 800835a:	f241 015c 	movw	r1, #4188	; 0x105c
 800835e:	f021 f85e 	bl	802941e <_ZdlPvj>
 8008362:	4620      	mov	r0, r4
 8008364:	bd10      	pop	{r4, pc}
	...

08008368 <_ZN19Calibration_PadViewC1Ev>:
Calibration_PadView::Calibration_PadView()
 8008368:	b510      	push	{r4, lr}
 800836a:	4604      	mov	r4, r0
 800836c:	f7fa feb0 	bl	80030d0 <_ZN23Calibration_PadViewBaseC1Ev>
 8008370:	4b01      	ldr	r3, [pc, #4]	; (8008378 <_ZN19Calibration_PadViewC1Ev+0x10>)
 8008372:	6023      	str	r3, [r4, #0]
}
 8008374:	4620      	mov	r0, r4
 8008376:	bd10      	pop	{r4, pc}
 8008378:	0802db30 	.word	0x0802db30

0800837c <_ZN19Calibration_PadView11setupScreenEv>:
    Calibration_PadViewBase::setupScreen();
 800837c:	f7fa be5c 	b.w	8003038 <_ZN23Calibration_PadViewBase11setupScreenEv>

08008380 <_ZN19FrontendApplicationD1Ev>:

class FrontendApplication : public FrontendApplicationBase
{
public:
    FrontendApplication(Model& m, FrontendHeap& heap);
    virtual ~FrontendApplication() { }
 8008380:	4770      	bx	lr

08008382 <_ZN19FrontendApplicationD0Ev>:
 8008382:	b510      	push	{r4, lr}
 8008384:	f44f 71ae 	mov.w	r1, #348	; 0x15c
 8008388:	4604      	mov	r4, r0
 800838a:	f021 f848 	bl	802941e <_ZdlPvj>
 800838e:	4620      	mov	r0, r4
 8008390:	bd10      	pop	{r4, pc}

08008392 <_ZN19FrontendApplication15handleTickEventEv>:

    virtual void handleTickEvent()
 8008392:	b510      	push	{r4, lr}
 8008394:	4604      	mov	r4, r0
    {
        model.tick();
 8008396:	f8d0 0158 	ldr.w	r0, [r0, #344]	; 0x158
 800839a:	f000 fb05 	bl	80089a8 <_ZN5Model4tickEv>
        FrontendApplicationBase::handleTickEvent();
 800839e:	4620      	mov	r0, r4
    }
 80083a0:	e8bd 4010 	ldmia.w	sp!, {r4, lr}
        FrontendApplicationBase::handleTickEvent();
 80083a4:	f00d b888 	b.w	80154b8 <_ZN8touchgfx11Application15handleTickEventEv>

080083a8 <_ZN19FrontendApplicationC1ER5ModelR12FrontendHeap>:
#include <gui/common/FrontendApplication.hpp>

FrontendApplication::FrontendApplication(Model& m, FrontendHeap& heap)
 80083a8:	b510      	push	{r4, lr}
 80083aa:	4604      	mov	r4, r0
    : FrontendApplicationBase(m, heap)
 80083ac:	f7fb faa2 	bl	80038f4 <_ZN23FrontendApplicationBaseC1ER5ModelR12FrontendHeap>
 80083b0:	4b01      	ldr	r3, [pc, #4]	; (80083b8 <_ZN19FrontendApplicationC1ER5ModelR12FrontendHeap+0x10>)
 80083b2:	6023      	str	r3, [r4, #0]
{

}
 80083b4:	4620      	mov	r0, r4
 80083b6:	bd10      	pop	{r4, pc}
 80083b8:	0802db68 	.word	0x0802db68

080083bc <_ZN17Gauge_with_ValuesD1Ev>:
 80083bc:	b510      	push	{r4, lr}
 80083be:	4b03      	ldr	r3, [pc, #12]	; (80083cc <_ZN17Gauge_with_ValuesD1Ev+0x10>)
 80083c0:	6003      	str	r3, [r0, #0]
 80083c2:	4604      	mov	r4, r0
 80083c4:	f7fc fd9c 	bl	8004f00 <_ZN21Gauge_with_ValuesBaseD1Ev>
 80083c8:	4620      	mov	r0, r4
 80083ca:	bd10      	pop	{r4, pc}
 80083cc:	0802dbbc 	.word	0x0802dbbc

080083d0 <_ZN17Gauge_with_ValuesD0Ev>:
 80083d0:	b510      	push	{r4, lr}
 80083d2:	4604      	mov	r4, r0
 80083d4:	f7ff fff2 	bl	80083bc <_ZN17Gauge_with_ValuesD1Ev>
 80083d8:	4620      	mov	r0, r4
 80083da:	f44f 7162 	mov.w	r1, #904	; 0x388
 80083de:	f021 f81e 	bl	802941e <_ZdlPvj>
 80083e2:	4620      	mov	r0, r4
 80083e4:	bd10      	pop	{r4, pc}
	...

080083e8 <_ZN17Gauge_with_ValuesC1Ev>:
#include <gui/containers/Gauge_with_Values.hpp>

Gauge_with_Values::Gauge_with_Values()
 80083e8:	b510      	push	{r4, lr}
 80083ea:	4604      	mov	r4, r0
 80083ec:	f7fc fd92 	bl	8004f14 <_ZN21Gauge_with_ValuesBaseC1Ev>
 80083f0:	4b01      	ldr	r3, [pc, #4]	; (80083f8 <_ZN17Gauge_with_ValuesC1Ev+0x10>)
 80083f2:	6023      	str	r3, [r4, #0]
{

}
 80083f4:	4620      	mov	r0, r4
 80083f6:	bd10      	pop	{r4, pc}
 80083f8:	0802dbbc 	.word	0x0802dbbc

080083fc <_ZN17Gauge_with_Values10initializeEv>:

void Gauge_with_Values::initialize()
{
    Gauge_with_ValuesBase::initialize();
 80083fc:	f7fc bd81 	b.w	8004f02 <_ZN21Gauge_with_ValuesBase10initializeEv>

08008400 <_ZN18Main_MenuPresenterD1Ev>:
     * The deactivate function is called automatically when this screen is "switched out"
     * (ie. made inactive). Teardown functionality can be placed here.
     */
    virtual void deactivate();

    virtual ~Main_MenuPresenter() {}
 8008400:	4770      	bx	lr

08008402 <_ZThn4_N18Main_MenuPresenterD1Ev>:
 8008402:	3804      	subs	r0, #4
 8008404:	4770      	bx	lr

08008406 <_ZN18Main_MenuPresenter10deactivateEv>:
}

void Main_MenuPresenter::activate()
{

}
 8008406:	4770      	bx	lr

08008408 <_ZN18Main_MenuPresenter15setTimeoutValueEi>:

}

void Main_MenuPresenter::setTimeoutValue(int value)
{
	view.setTimeoutValue(value);
 8008408:	68c0      	ldr	r0, [r0, #12]
 800840a:	6803      	ldr	r3, [r0, #0]
 800840c:	6adb      	ldr	r3, [r3, #44]	; 0x2c
 800840e:	4718      	bx	r3

08008410 <_ZThn4_N18Main_MenuPresenter15setTimeoutValueEi>:

    virtual void setTimeoutValue(int value);
 8008410:	f1a0 0004 	sub.w	r0, r0, #4
 8008414:	f7ff bff8 	b.w	8008408 <_ZN18Main_MenuPresenter15setTimeoutValueEi>

08008418 <_ZN18Main_MenuPresenterD0Ev>:
    virtual ~Main_MenuPresenter() {}
 8008418:	b510      	push	{r4, lr}
 800841a:	2110      	movs	r1, #16
 800841c:	4604      	mov	r4, r0
 800841e:	f020 fffe 	bl	802941e <_ZdlPvj>
 8008422:	4620      	mov	r0, r4
 8008424:	bd10      	pop	{r4, pc}

08008426 <_ZThn4_N18Main_MenuPresenterD0Ev>:
 8008426:	f1a0 0004 	sub.w	r0, r0, #4
 800842a:	e7f5      	b.n	8008418 <_ZN18Main_MenuPresenterD0Ev>

0800842c <_ZN18Main_MenuPresenterC1ER13Main_MenuView>:
Main_MenuPresenter::Main_MenuPresenter(Main_MenuView& v)
 800842c:	b510      	push	{r4, lr}
 800842e:	2200      	movs	r2, #0
 8008430:	6082      	str	r2, [r0, #8]
    : view(v)
 8008432:	4a04      	ldr	r2, [pc, #16]	; (8008444 <_ZN18Main_MenuPresenterC1ER13Main_MenuView+0x18>)
 8008434:	60c1      	str	r1, [r0, #12]
 8008436:	f102 0408 	add.w	r4, r2, #8
 800843a:	3224      	adds	r2, #36	; 0x24
 800843c:	6004      	str	r4, [r0, #0]
 800843e:	6042      	str	r2, [r0, #4]
}
 8008440:	bd10      	pop	{r4, pc}
 8008442:	bf00      	nop
 8008444:	0802dc48 	.word	0x0802dc48

08008448 <_ZN13Main_MenuView14tearDownScreenEv>:
}

void Main_MenuView::tearDownScreen()
{
    Main_MenuViewBase::tearDownScreen();
}
 8008448:	4770      	bx	lr
	...

0800844c <_ZN13Main_MenuViewD1Ev>:

class Main_MenuView : public Main_MenuViewBase
{
public:
    Main_MenuView();
    virtual ~Main_MenuView() {}
 800844c:	b510      	push	{r4, lr}
 800844e:	4b03      	ldr	r3, [pc, #12]	; (800845c <_ZN13Main_MenuViewD1Ev+0x10>)
 8008450:	6003      	str	r3, [r0, #0]
 8008452:	4604      	mov	r4, r0
 8008454:	f7fc ff5a 	bl	800530c <_ZN17Main_MenuViewBaseD1Ev>
 8008458:	4620      	mov	r0, r4
 800845a:	bd10      	pop	{r4, pc}
 800845c:	0802dc80 	.word	0x0802dc80

08008460 <_ZN13Main_MenuViewD0Ev>:
 8008460:	b510      	push	{r4, lr}
 8008462:	4604      	mov	r4, r0
 8008464:	f7ff fff2 	bl	800844c <_ZN13Main_MenuViewD1Ev>
 8008468:	4620      	mov	r0, r4
 800846a:	f241 117c 	movw	r1, #4476	; 0x117c
 800846e:	f020 ffd6 	bl	802941e <_ZdlPvj>
 8008472:	4620      	mov	r0, r4
 8008474:	bd10      	pop	{r4, pc}
	...

08008478 <_ZN13Main_MenuViewC1Ev>:
Main_MenuView::Main_MenuView()
 8008478:	b510      	push	{r4, lr}
 800847a:	4604      	mov	r4, r0
 800847c:	f7fc ff90 	bl	80053a0 <_ZN17Main_MenuViewBaseC1Ev>
 8008480:	4b01      	ldr	r3, [pc, #4]	; (8008488 <_ZN13Main_MenuViewC1Ev+0x10>)
 8008482:	6023      	str	r3, [r4, #0]
}
 8008484:	4620      	mov	r0, r4
 8008486:	bd10      	pop	{r4, pc}
 8008488:	0802dc80 	.word	0x0802dc80

0800848c <_ZN13Main_MenuView11setupScreenEv>:
    Main_MenuViewBase::setupScreen();
 800848c:	f7fc bf1a 	b.w	80052c4 <_ZN17Main_MenuViewBase11setupScreenEv>

08008490 <_ZN13Main_MenuView15setTimeoutValueEi>:

void Main_MenuView::setTimeoutValue(int value)
{
 8008490:	b538      	push	{r3, r4, r5, lr}
	//display the timeout value on the GUI
	Unicode::snprintf(textArea3Buffer, TEXTAREA3_SIZE, "%d", value);
 8008492:	4a0a      	ldr	r2, [pc, #40]	; (80084bc <_ZN13Main_MenuView15setTimeoutValueEi+0x2c>)
{
 8008494:	4605      	mov	r5, r0
 8008496:	460c      	mov	r4, r1
	Unicode::snprintf(textArea3Buffer, TEXTAREA3_SIZE, "%d", value);
 8008498:	460b      	mov	r3, r1
 800849a:	f500 7055 	add.w	r0, r0, #852	; 0x354
 800849e:	2104      	movs	r1, #4
 80084a0:	f010 f8b6 	bl	8018610 <_ZN8touchgfx7Unicode8snprintfEPttPKcz>
	textArea3.invalidate();
 80084a4:	f105 0098 	add.w	r0, r5, #152	; 0x98
 80084a8:	f00e f82a 	bl	8016500 <_ZNK8touchgfx8Drawable10invalidateEv>

	if(value == 0)
 80084ac:	b92c      	cbnz	r4, 80084ba <_ZN13Main_MenuView15setTimeoutValueEi+0x2a>
 80084ae:	f00c ff3f 	bl	8015330 <_ZN8touchgfx11Application11getInstanceEv>
	{
		//application().gotoMeasurement_SingleScreenSlideTransitionWest();
		application().gotoShutting_OffScreenNoTransition();
	}
}
 80084b2:	e8bd 4038 	ldmia.w	sp!, {r3, r4, r5, lr}
		application().gotoShutting_OffScreenNoTransition();
 80084b6:	f7fb bb4d 	b.w	8003b54 <_ZN23FrontendApplicationBase34gotoShutting_OffScreenNoTransitionEv>
}
 80084ba:	bd38      	pop	{r3, r4, r5, pc}
 80084bc:	0802da54 	.word	0x0802da54

080084c0 <_ZN20MeasurementPresenterD1Ev>:
     * The deactivate function is called automatically when this screen is "switched out"
     * (ie. made inactive). Teardown functionality can be placed here.
     */
    virtual void deactivate();

    virtual ~MeasurementPresenter() {}
 80084c0:	4770      	bx	lr

080084c2 <_ZThn4_N20MeasurementPresenterD1Ev>:
 80084c2:	3804      	subs	r0, #4
 80084c4:	4770      	bx	lr

080084c6 <_ZN20MeasurementPresenter10deactivateEv>:
}

void MeasurementPresenter::activate()
{

}
 80084c6:	4770      	bx	lr

080084c8 <_ZN20MeasurementPresenter15setTimeoutValueEi>:

}

void MeasurementPresenter::setTimeoutValue(int value)
{
	view.setTimeoutValue(value);
 80084c8:	68c0      	ldr	r0, [r0, #12]
 80084ca:	6803      	ldr	r3, [r0, #0]
 80084cc:	6adb      	ldr	r3, [r3, #44]	; 0x2c
 80084ce:	4718      	bx	r3

080084d0 <_ZThn4_N20MeasurementPresenter15setTimeoutValueEi>:

    virtual void setTimeoutValue(int value);
 80084d0:	f1a0 0004 	sub.w	r0, r0, #4
 80084d4:	f7ff bff8 	b.w	80084c8 <_ZN20MeasurementPresenter15setTimeoutValueEi>

080084d8 <_ZN20MeasurementPresenterD0Ev>:
    virtual ~MeasurementPresenter() {}
 80084d8:	b510      	push	{r4, lr}
 80084da:	2110      	movs	r1, #16
 80084dc:	4604      	mov	r4, r0
 80084de:	f020 ff9e 	bl	802941e <_ZdlPvj>
 80084e2:	4620      	mov	r0, r4
 80084e4:	bd10      	pop	{r4, pc}

080084e6 <_ZThn4_N20MeasurementPresenterD0Ev>:
 80084e6:	f1a0 0004 	sub.w	r0, r0, #4
 80084ea:	e7f5      	b.n	80084d8 <_ZN20MeasurementPresenterD0Ev>

080084ec <_ZN20MeasurementPresenterC1ER15MeasurementView>:
MeasurementPresenter::MeasurementPresenter(MeasurementView& v)
 80084ec:	b510      	push	{r4, lr}
 80084ee:	2200      	movs	r2, #0
 80084f0:	6082      	str	r2, [r0, #8]
    : view(v)
 80084f2:	4a04      	ldr	r2, [pc, #16]	; (8008504 <_ZN20MeasurementPresenterC1ER15MeasurementView+0x18>)
 80084f4:	60c1      	str	r1, [r0, #12]
 80084f6:	f102 0408 	add.w	r4, r2, #8
 80084fa:	3224      	adds	r2, #36	; 0x24
 80084fc:	6004      	str	r4, [r0, #0]
 80084fe:	6042      	str	r2, [r0, #4]
}
 8008500:	bd10      	pop	{r4, pc}
 8008502:	bf00      	nop
 8008504:	0802dcb0 	.word	0x0802dcb0

08008508 <_ZN15MeasurementView14tearDownScreenEv>:
}

void MeasurementView::tearDownScreen()
{
    MeasurementViewBase::tearDownScreen();
}
 8008508:	4770      	bx	lr
	...

0800850c <_ZN15MeasurementViewD1Ev>:

class MeasurementView : public MeasurementViewBase
{
public:
    MeasurementView();
    virtual ~MeasurementView() {}
 800850c:	b510      	push	{r4, lr}
 800850e:	4b03      	ldr	r3, [pc, #12]	; (800851c <_ZN15MeasurementViewD1Ev+0x10>)
 8008510:	6003      	str	r3, [r0, #0]
 8008512:	4604      	mov	r4, r0
 8008514:	f7fd f9b4 	bl	8005880 <_ZN19MeasurementViewBaseD1Ev>
 8008518:	4620      	mov	r0, r4
 800851a:	bd10      	pop	{r4, pc}
 800851c:	0802dce8 	.word	0x0802dce8

08008520 <_ZN15MeasurementViewD0Ev>:
 8008520:	b510      	push	{r4, lr}
 8008522:	4604      	mov	r4, r0
 8008524:	f7ff fff2 	bl	800850c <_ZN15MeasurementViewD1Ev>
 8008528:	4620      	mov	r0, r4
 800852a:	f44f 518a 	mov.w	r1, #4416	; 0x1140
 800852e:	f020 ff76 	bl	802941e <_ZdlPvj>
 8008532:	4620      	mov	r0, r4
 8008534:	bd10      	pop	{r4, pc}
	...

08008538 <_ZN15MeasurementViewC1Ev>:
MeasurementView::MeasurementView()
 8008538:	b510      	push	{r4, lr}
 800853a:	4604      	mov	r4, r0
 800853c:	f7fd f9da 	bl	80058f4 <_ZN19MeasurementViewBaseC1Ev>
 8008540:	4b01      	ldr	r3, [pc, #4]	; (8008548 <_ZN15MeasurementViewC1Ev+0x10>)
 8008542:	6023      	str	r3, [r4, #0]
}
 8008544:	4620      	mov	r0, r4
 8008546:	bd10      	pop	{r4, pc}
 8008548:	0802dce8 	.word	0x0802dce8

0800854c <_ZN15MeasurementView11setupScreenEv>:
    MeasurementViewBase::setupScreen();
 800854c:	f7fd b974 	b.w	8005838 <_ZN19MeasurementViewBase11setupScreenEv>

08008550 <_ZN15MeasurementView15setTimeoutValueEi>:

void MeasurementView::setTimeoutValue(int value)
{
 8008550:	b538      	push	{r3, r4, r5, lr}
	//display the timeout value on the GUI
	Unicode::snprintf(textArea3_1Buffer, TEXTAREA3_1_SIZE, "%d", value);
 8008552:	4a0a      	ldr	r2, [pc, #40]	; (800857c <_ZN15MeasurementView15setTimeoutValueEi+0x2c>)
{
 8008554:	4605      	mov	r5, r0
 8008556:	460c      	mov	r4, r1
	Unicode::snprintf(textArea3_1Buffer, TEXTAREA3_1_SIZE, "%d", value);
 8008558:	460b      	mov	r3, r1
 800855a:	f500 7046 	add.w	r0, r0, #792	; 0x318
 800855e:	2104      	movs	r1, #4
 8008560:	f010 f856 	bl	8018610 <_ZN8touchgfx7Unicode8snprintfEPttPKcz>
	textArea3_1.invalidate();
 8008564:	f105 0098 	add.w	r0, r5, #152	; 0x98
 8008568:	f00d ffca 	bl	8016500 <_ZNK8touchgfx8Drawable10invalidateEv>

	if(value == 0)
 800856c:	b92c      	cbnz	r4, 800857a <_ZN15MeasurementView15setTimeoutValueEi+0x2a>
 800856e:	f00c fedf 	bl	8015330 <_ZN8touchgfx11Application11getInstanceEv>
	{
		//application().gotoMeasurement_SingleScreenSlideTransitionWest();
		application().gotoShutting_OffScreenNoTransition();
	}
}
 8008572:	e8bd 4038 	ldmia.w	sp!, {r3, r4, r5, lr}
		application().gotoShutting_OffScreenNoTransition();
 8008576:	f7fb baed 	b.w	8003b54 <_ZN23FrontendApplicationBase34gotoShutting_OffScreenNoTransitionEv>
}
 800857a:	bd38      	pop	{r3, r4, r5, pc}
 800857c:	0802da54 	.word	0x0802da54

08008580 <_ZN29Measurement_AccuratePresenterD1Ev>:
     * The deactivate function is called automatically when this screen is "switched out"
     * (ie. made inactive). Teardown functionality can be placed here.
     */
    virtual void deactivate();

    virtual ~Measurement_AccuratePresenter() {}
 8008580:	4770      	bx	lr

08008582 <_ZThn4_N29Measurement_AccuratePresenterD1Ev>:
 8008582:	3804      	subs	r0, #4
 8008584:	4770      	bx	lr

08008586 <_ZN29Measurement_AccuratePresenter10deactivateEv>:
}

void Measurement_AccuratePresenter::activate()
{

}
 8008586:	4770      	bx	lr

08008588 <_ZN29Measurement_AccuratePresenter15setTimeoutValueEi>:

}

void Measurement_AccuratePresenter::setTimeoutValue(int value)
{
	view.setTimeoutValue(value);
 8008588:	68c0      	ldr	r0, [r0, #12]
 800858a:	6803      	ldr	r3, [r0, #0]
 800858c:	6adb      	ldr	r3, [r3, #44]	; 0x2c
 800858e:	4718      	bx	r3

08008590 <_ZThn4_N29Measurement_AccuratePresenter15setTimeoutValueEi>:

    virtual void setTimeoutValue(int value);
 8008590:	f1a0 0004 	sub.w	r0, r0, #4
 8008594:	f7ff bff8 	b.w	8008588 <_ZN29Measurement_AccuratePresenter15setTimeoutValueEi>

08008598 <_ZN29Measurement_AccuratePresenterD0Ev>:
    virtual ~Measurement_AccuratePresenter() {}
 8008598:	b510      	push	{r4, lr}
 800859a:	2110      	movs	r1, #16
 800859c:	4604      	mov	r4, r0
 800859e:	f020 ff3e 	bl	802941e <_ZdlPvj>
 80085a2:	4620      	mov	r0, r4
 80085a4:	bd10      	pop	{r4, pc}

080085a6 <_ZThn4_N29Measurement_AccuratePresenterD0Ev>:
 80085a6:	f1a0 0004 	sub.w	r0, r0, #4
 80085aa:	e7f5      	b.n	8008598 <_ZN29Measurement_AccuratePresenterD0Ev>

080085ac <_ZN29Measurement_AccuratePresenterC1ER24Measurement_AccurateView>:
Measurement_AccuratePresenter::Measurement_AccuratePresenter(Measurement_AccurateView& v)
 80085ac:	b510      	push	{r4, lr}
 80085ae:	2200      	movs	r2, #0
 80085b0:	6082      	str	r2, [r0, #8]
    : view(v)
 80085b2:	4a04      	ldr	r2, [pc, #16]	; (80085c4 <_ZN29Measurement_AccuratePresenterC1ER24Measurement_AccurateView+0x18>)
 80085b4:	60c1      	str	r1, [r0, #12]
 80085b6:	f102 0408 	add.w	r4, r2, #8
 80085ba:	3224      	adds	r2, #36	; 0x24
 80085bc:	6004      	str	r4, [r0, #0]
 80085be:	6042      	str	r2, [r0, #4]
}
 80085c0:	bd10      	pop	{r4, pc}
 80085c2:	bf00      	nop
 80085c4:	0802dd18 	.word	0x0802dd18

080085c8 <_ZN24Measurement_AccurateView14tearDownScreenEv>:
}

void Measurement_AccurateView::tearDownScreen()
{
    Measurement_AccurateViewBase::tearDownScreen();
}
 80085c8:	4770      	bx	lr
	...

080085cc <_ZN24Measurement_AccurateViewD1Ev>:

class Measurement_AccurateView : public Measurement_AccurateViewBase
{
public:
    Measurement_AccurateView();
    virtual ~Measurement_AccurateView() {}
 80085cc:	b510      	push	{r4, lr}
 80085ce:	4b03      	ldr	r3, [pc, #12]	; (80085dc <_ZN24Measurement_AccurateViewD1Ev+0x10>)
 80085d0:	6003      	str	r3, [r0, #0]
 80085d2:	4604      	mov	r4, r0
 80085d4:	f7fd fbd6 	bl	8005d84 <_ZN28Measurement_AccurateViewBaseD1Ev>
 80085d8:	4620      	mov	r0, r4
 80085da:	bd10      	pop	{r4, pc}
 80085dc:	0802dd50 	.word	0x0802dd50

080085e0 <_ZN24Measurement_AccurateViewD0Ev>:
 80085e0:	b510      	push	{r4, lr}
 80085e2:	4604      	mov	r4, r0
 80085e4:	f7ff fff2 	bl	80085cc <_ZN24Measurement_AccurateViewD1Ev>
 80085e8:	4620      	mov	r0, r4
 80085ea:	f44f 518a 	mov.w	r1, #4416	; 0x1140
 80085ee:	f020 ff16 	bl	802941e <_ZdlPvj>
 80085f2:	4620      	mov	r0, r4
 80085f4:	bd10      	pop	{r4, pc}
	...

080085f8 <_ZN24Measurement_AccurateViewC1Ev>:
Measurement_AccurateView::Measurement_AccurateView()
 80085f8:	b510      	push	{r4, lr}
 80085fa:	4604      	mov	r4, r0
 80085fc:	f7fd fbfc 	bl	8005df8 <_ZN28Measurement_AccurateViewBaseC1Ev>
 8008600:	4b01      	ldr	r3, [pc, #4]	; (8008608 <_ZN24Measurement_AccurateViewC1Ev+0x10>)
 8008602:	6023      	str	r3, [r4, #0]
}
 8008604:	4620      	mov	r0, r4
 8008606:	bd10      	pop	{r4, pc}
 8008608:	0802dd50 	.word	0x0802dd50

0800860c <_ZN24Measurement_AccurateView11setupScreenEv>:
    Measurement_AccurateViewBase::setupScreen();
 800860c:	f7fd bb96 	b.w	8005d3c <_ZN28Measurement_AccurateViewBase11setupScreenEv>

08008610 <_ZN24Measurement_AccurateView15setTimeoutValueEi>:

void Measurement_AccurateView::setTimeoutValue(int value)
{
 8008610:	b538      	push	{r3, r4, r5, lr}
	//display the timeout value on the GUI
	Unicode::snprintf(textArea3_1Buffer, TEXTAREA3_1_SIZE, "%d", value);
 8008612:	4a0a      	ldr	r2, [pc, #40]	; (800863c <_ZN24Measurement_AccurateView15setTimeoutValueEi+0x2c>)
{
 8008614:	4605      	mov	r5, r0
 8008616:	460c      	mov	r4, r1
	Unicode::snprintf(textArea3_1Buffer, TEXTAREA3_1_SIZE, "%d", value);
 8008618:	460b      	mov	r3, r1
 800861a:	f500 7046 	add.w	r0, r0, #792	; 0x318
 800861e:	2104      	movs	r1, #4
 8008620:	f00f fff6 	bl	8018610 <_ZN8touchgfx7Unicode8snprintfEPttPKcz>
	textArea3_1.invalidate();
 8008624:	f105 0098 	add.w	r0, r5, #152	; 0x98
 8008628:	f00d ff6a 	bl	8016500 <_ZNK8touchgfx8Drawable10invalidateEv>

	if(value == 0)
 800862c:	b92c      	cbnz	r4, 800863a <_ZN24Measurement_AccurateView15setTimeoutValueEi+0x2a>
 800862e:	f00c fe7f 	bl	8015330 <_ZN8touchgfx11Application11getInstanceEv>
	{
		//application().gotoMeasurement_SingleScreenSlideTransitionWest();
		application().gotoShutting_OffScreenNoTransition();
	}
}
 8008632:	e8bd 4038 	ldmia.w	sp!, {r3, r4, r5, lr}
		application().gotoShutting_OffScreenNoTransition();
 8008636:	f7fb ba8d 	b.w	8003b54 <_ZN23FrontendApplicationBase34gotoShutting_OffScreenNoTransitionEv>
}
 800863a:	bd38      	pop	{r3, r4, r5, pc}
 800863c:	0802da54 	.word	0x0802da54

08008640 <_ZN37Measurement_Accurate_DisplayPresenterD1Ev>:
     * The deactivate function is called automatically when this screen is "switched out"
     * (ie. made inactive). Teardown functionality can be placed here.
     */
    virtual void deactivate();

    virtual ~Measurement_Accurate_DisplayPresenter() {}
 8008640:	4770      	bx	lr

08008642 <_ZThn4_N37Measurement_Accurate_DisplayPresenterD1Ev>:
 8008642:	3804      	subs	r0, #4
 8008644:	4770      	bx	lr

08008646 <_ZN37Measurement_Accurate_DisplayPresenter10deactivateEv>:
}

void Measurement_Accurate_DisplayPresenter::activate()
{

}
 8008646:	4770      	bx	lr

08008648 <_ZN37Measurement_Accurate_DisplayPresenter15setTimeoutValueEi>:
}

void Measurement_Accurate_DisplayPresenter::setTimeoutValue(int value)
{

}
 8008648:	4770      	bx	lr

0800864a <_ZN37Measurement_Accurate_DisplayPresenterD0Ev>:
 800864a:	b510      	push	{r4, lr}
 800864c:	2110      	movs	r1, #16
 800864e:	4604      	mov	r4, r0
 8008650:	f020 fee5 	bl	802941e <_ZdlPvj>
 8008654:	4620      	mov	r0, r4
 8008656:	bd10      	pop	{r4, pc}

08008658 <_ZThn4_N37Measurement_Accurate_DisplayPresenterD0Ev>:
 8008658:	f1a0 0004 	sub.w	r0, r0, #4
 800865c:	e7f5      	b.n	800864a <_ZN37Measurement_Accurate_DisplayPresenterD0Ev>

0800865e <_ZThn4_N37Measurement_Accurate_DisplayPresenter15setTimeoutValueEi>:
 800865e:	4770      	bx	lr

08008660 <_ZN37Measurement_Accurate_DisplayPresenterC1ER32Measurement_Accurate_DisplayView>:
Measurement_Accurate_DisplayPresenter::Measurement_Accurate_DisplayPresenter(Measurement_Accurate_DisplayView& v)
 8008660:	b510      	push	{r4, lr}
 8008662:	2200      	movs	r2, #0
 8008664:	6082      	str	r2, [r0, #8]
    : view(v)
 8008666:	4a04      	ldr	r2, [pc, #16]	; (8008678 <_ZN37Measurement_Accurate_DisplayPresenterC1ER32Measurement_Accurate_DisplayView+0x18>)
 8008668:	60c1      	str	r1, [r0, #12]
 800866a:	f102 0408 	add.w	r4, r2, #8
 800866e:	3224      	adds	r2, #36	; 0x24
 8008670:	6004      	str	r4, [r0, #0]
 8008672:	6042      	str	r2, [r0, #4]
}
 8008674:	bd10      	pop	{r4, pc}
 8008676:	bf00      	nop
 8008678:	0802dd80 	.word	0x0802dd80

0800867c <_ZN32Measurement_Accurate_DisplayView14tearDownScreenEv>:
}

void Measurement_Accurate_DisplayView::tearDownScreen()
{
    Measurement_Accurate_DisplayViewBase::tearDownScreen();
}
 800867c:	4770      	bx	lr
	...

08008680 <_ZN32Measurement_Accurate_DisplayViewD1Ev>:

class Measurement_Accurate_DisplayView : public Measurement_Accurate_DisplayViewBase
{
public:
    Measurement_Accurate_DisplayView();
    virtual ~Measurement_Accurate_DisplayView() {}
 8008680:	b510      	push	{r4, lr}
 8008682:	4b03      	ldr	r3, [pc, #12]	; (8008690 <_ZN32Measurement_Accurate_DisplayViewD1Ev+0x10>)
 8008684:	6003      	str	r3, [r0, #0]
 8008686:	4604      	mov	r4, r0
 8008688:	f7fd fe08 	bl	800629c <_ZN36Measurement_Accurate_DisplayViewBaseD1Ev>
 800868c:	4620      	mov	r0, r4
 800868e:	bd10      	pop	{r4, pc}
 8008690:	0802ddb8 	.word	0x0802ddb8

08008694 <_ZN32Measurement_Accurate_DisplayViewD0Ev>:
 8008694:	b510      	push	{r4, lr}
 8008696:	4604      	mov	r4, r0
 8008698:	f7ff fff2 	bl	8008680 <_ZN32Measurement_Accurate_DisplayViewD1Ev>
 800869c:	4620      	mov	r0, r4
 800869e:	f241 31e4 	movw	r1, #5092	; 0x13e4
 80086a2:	f020 febc 	bl	802941e <_ZdlPvj>
 80086a6:	4620      	mov	r0, r4
 80086a8:	bd10      	pop	{r4, pc}
	...

080086ac <_ZN32Measurement_Accurate_DisplayViewC1Ev>:
Measurement_Accurate_DisplayView::Measurement_Accurate_DisplayView()
 80086ac:	b510      	push	{r4, lr}
 80086ae:	4604      	mov	r4, r0
 80086b0:	f7fd fe14 	bl	80062dc <_ZN36Measurement_Accurate_DisplayViewBaseC1Ev>
 80086b4:	4b01      	ldr	r3, [pc, #4]	; (80086bc <_ZN32Measurement_Accurate_DisplayViewC1Ev+0x10>)
 80086b6:	6023      	str	r3, [r4, #0]
}
 80086b8:	4620      	mov	r0, r4
 80086ba:	bd10      	pop	{r4, pc}
 80086bc:	0802ddb8 	.word	0x0802ddb8

080086c0 <_ZN32Measurement_Accurate_DisplayView11setupScreenEv>:
    Measurement_Accurate_DisplayViewBase::setupScreen();
 80086c0:	f7fd bddd 	b.w	800627e <_ZN36Measurement_Accurate_DisplayViewBase11setupScreenEv>

080086c4 <_ZN39Measurement_Accurate_Display_2PresenterD1Ev>:
     * The deactivate function is called automatically when this screen is "switched out"
     * (ie. made inactive). Teardown functionality can be placed here.
     */
    virtual void deactivate();

    virtual ~Measurement_Accurate_Display_2Presenter() {}
 80086c4:	4770      	bx	lr

080086c6 <_ZThn4_N39Measurement_Accurate_Display_2PresenterD1Ev>:
 80086c6:	3804      	subs	r0, #4
 80086c8:	4770      	bx	lr

080086ca <_ZN39Measurement_Accurate_Display_2Presenter10deactivateEv>:
}

void Measurement_Accurate_Display_2Presenter::activate()
{

}
 80086ca:	4770      	bx	lr

080086cc <_ZN39Measurement_Accurate_Display_2Presenter15setTimeoutValueEi>:
}

void Measurement_Accurate_Display_2Presenter::setTimeoutValue(int value)
{

}
 80086cc:	4770      	bx	lr

080086ce <_ZN39Measurement_Accurate_Display_2PresenterD0Ev>:
 80086ce:	b510      	push	{r4, lr}
 80086d0:	2110      	movs	r1, #16
 80086d2:	4604      	mov	r4, r0
 80086d4:	f020 fea3 	bl	802941e <_ZdlPvj>
 80086d8:	4620      	mov	r0, r4
 80086da:	bd10      	pop	{r4, pc}

080086dc <_ZThn4_N39Measurement_Accurate_Display_2PresenterD0Ev>:
 80086dc:	f1a0 0004 	sub.w	r0, r0, #4
 80086e0:	e7f5      	b.n	80086ce <_ZN39Measurement_Accurate_Display_2PresenterD0Ev>

080086e2 <_ZThn4_N39Measurement_Accurate_Display_2Presenter15setTimeoutValueEi>:
 80086e2:	4770      	bx	lr

080086e4 <_ZN39Measurement_Accurate_Display_2PresenterC1ER34Measurement_Accurate_Display_2View>:
Measurement_Accurate_Display_2Presenter::Measurement_Accurate_Display_2Presenter(Measurement_Accurate_Display_2View& v)
 80086e4:	b510      	push	{r4, lr}
 80086e6:	2200      	movs	r2, #0
 80086e8:	6082      	str	r2, [r0, #8]
    : view(v)
 80086ea:	4a04      	ldr	r2, [pc, #16]	; (80086fc <_ZN39Measurement_Accurate_Display_2PresenterC1ER34Measurement_Accurate_Display_2View+0x18>)
 80086ec:	60c1      	str	r1, [r0, #12]
 80086ee:	f102 0408 	add.w	r4, r2, #8
 80086f2:	3224      	adds	r2, #36	; 0x24
 80086f4:	6004      	str	r4, [r0, #0]
 80086f6:	6042      	str	r2, [r0, #4]
}
 80086f8:	bd10      	pop	{r4, pc}
 80086fa:	bf00      	nop
 80086fc:	0802dde4 	.word	0x0802dde4

08008700 <_ZN34Measurement_Accurate_Display_2View14tearDownScreenEv>:
}

void Measurement_Accurate_Display_2View::tearDownScreen()
{
    Measurement_Accurate_Display_2ViewBase::tearDownScreen();
}
 8008700:	4770      	bx	lr
	...

08008704 <_ZN34Measurement_Accurate_Display_2ViewD1Ev>:

class Measurement_Accurate_Display_2View : public Measurement_Accurate_Display_2ViewBase
{
public:
    Measurement_Accurate_Display_2View();
    virtual ~Measurement_Accurate_Display_2View() {}
 8008704:	b510      	push	{r4, lr}
 8008706:	4b03      	ldr	r3, [pc, #12]	; (8008714 <_ZN34Measurement_Accurate_Display_2ViewD1Ev+0x10>)
 8008708:	6003      	str	r3, [r0, #0]
 800870a:	4604      	mov	r4, r0
 800870c:	f7fd ff8a 	bl	8006624 <_ZN38Measurement_Accurate_Display_2ViewBaseD1Ev>
 8008710:	4620      	mov	r0, r4
 8008712:	bd10      	pop	{r4, pc}
 8008714:	0802de1c 	.word	0x0802de1c

08008718 <_ZN34Measurement_Accurate_Display_2ViewD0Ev>:
 8008718:	b510      	push	{r4, lr}
 800871a:	4604      	mov	r4, r0
 800871c:	f7ff fff2 	bl	8008704 <_ZN34Measurement_Accurate_Display_2ViewD1Ev>
 8008720:	4620      	mov	r0, r4
 8008722:	f241 31e4 	movw	r1, #5092	; 0x13e4
 8008726:	f020 fe7a 	bl	802941e <_ZdlPvj>
 800872a:	4620      	mov	r0, r4
 800872c:	bd10      	pop	{r4, pc}
	...

08008730 <_ZN34Measurement_Accurate_Display_2ViewC1Ev>:
Measurement_Accurate_Display_2View::Measurement_Accurate_Display_2View()
 8008730:	b510      	push	{r4, lr}
 8008732:	4604      	mov	r4, r0
 8008734:	f7fd ff96 	bl	8006664 <_ZN38Measurement_Accurate_Display_2ViewBaseC1Ev>
 8008738:	4b01      	ldr	r3, [pc, #4]	; (8008740 <_ZN34Measurement_Accurate_Display_2ViewC1Ev+0x10>)
 800873a:	6023      	str	r3, [r4, #0]
}
 800873c:	4620      	mov	r0, r4
 800873e:	bd10      	pop	{r4, pc}
 8008740:	0802de1c 	.word	0x0802de1c

08008744 <_ZN34Measurement_Accurate_Display_2View11setupScreenEv>:
    Measurement_Accurate_Display_2ViewBase::setupScreen();
 8008744:	f7fd bf5f 	b.w	8006606 <_ZN38Measurement_Accurate_Display_2ViewBase11setupScreenEv>

08008748 <_ZN27Measurement_SinglePresenterD1Ev>:
     * The deactivate function is called automatically when this screen is "switched out"
     * (ie. made inactive). Teardown functionality can be placed here.
     */
    virtual void deactivate();

    virtual ~Measurement_SinglePresenter() {}
 8008748:	4770      	bx	lr

0800874a <_ZThn4_N27Measurement_SinglePresenterD1Ev>:
 800874a:	3804      	subs	r0, #4
 800874c:	4770      	bx	lr

0800874e <_ZN27Measurement_SinglePresenter10deactivateEv>:
}

void Measurement_SinglePresenter::activate()
{

}
 800874e:	4770      	bx	lr

08008750 <_ZN27Measurement_SinglePresenter15setTimeoutValueEi>:

}

void Measurement_SinglePresenter::setTimeoutValue(int value)
{
	view.setTimeoutValue(value);
 8008750:	68c0      	ldr	r0, [r0, #12]
 8008752:	6803      	ldr	r3, [r0, #0]
 8008754:	6adb      	ldr	r3, [r3, #44]	; 0x2c
 8008756:	4718      	bx	r3

08008758 <_ZThn4_N27Measurement_SinglePresenter15setTimeoutValueEi>:

    virtual void setTimeoutValue(int value);
 8008758:	f1a0 0004 	sub.w	r0, r0, #4
 800875c:	f7ff bff8 	b.w	8008750 <_ZN27Measurement_SinglePresenter15setTimeoutValueEi>

08008760 <_ZN27Measurement_SinglePresenterD0Ev>:
    virtual ~Measurement_SinglePresenter() {}
 8008760:	b510      	push	{r4, lr}
 8008762:	2110      	movs	r1, #16
 8008764:	4604      	mov	r4, r0
 8008766:	f020 fe5a 	bl	802941e <_ZdlPvj>
 800876a:	4620      	mov	r0, r4
 800876c:	bd10      	pop	{r4, pc}

0800876e <_ZThn4_N27Measurement_SinglePresenterD0Ev>:
 800876e:	f1a0 0004 	sub.w	r0, r0, #4
 8008772:	e7f5      	b.n	8008760 <_ZN27Measurement_SinglePresenterD0Ev>

08008774 <_ZN27Measurement_SinglePresenterC1ER22Measurement_SingleView>:
Measurement_SinglePresenter::Measurement_SinglePresenter(Measurement_SingleView& v)
 8008774:	b510      	push	{r4, lr}
 8008776:	2200      	movs	r2, #0
 8008778:	6082      	str	r2, [r0, #8]
    : view(v)
 800877a:	4a04      	ldr	r2, [pc, #16]	; (800878c <_ZN27Measurement_SinglePresenterC1ER22Measurement_SingleView+0x18>)
 800877c:	60c1      	str	r1, [r0, #12]
 800877e:	f102 0408 	add.w	r4, r2, #8
 8008782:	3224      	adds	r2, #36	; 0x24
 8008784:	6004      	str	r4, [r0, #0]
 8008786:	6042      	str	r2, [r0, #4]
}
 8008788:	bd10      	pop	{r4, pc}
 800878a:	bf00      	nop
 800878c:	0802de48 	.word	0x0802de48

08008790 <_ZN22Measurement_SingleView14tearDownScreenEv>:
}

void Measurement_SingleView::tearDownScreen()
{
    Measurement_SingleViewBase::tearDownScreen();
}
 8008790:	4770      	bx	lr
	...

08008794 <_ZN22Measurement_SingleViewD1Ev>:

class Measurement_SingleView : public Measurement_SingleViewBase
{
public:
    Measurement_SingleView();
    virtual ~Measurement_SingleView() {}
 8008794:	b510      	push	{r4, lr}
 8008796:	4b03      	ldr	r3, [pc, #12]	; (80087a4 <_ZN22Measurement_SingleViewD1Ev+0x10>)
 8008798:	6003      	str	r3, [r0, #0]
 800879a:	4604      	mov	r4, r0
 800879c:	f7fe f8f8 	bl	8006990 <_ZN26Measurement_SingleViewBaseD1Ev>
 80087a0:	4620      	mov	r0, r4
 80087a2:	bd10      	pop	{r4, pc}
 80087a4:	0802de80 	.word	0x0802de80

080087a8 <_ZN22Measurement_SingleViewD0Ev>:
 80087a8:	b510      	push	{r4, lr}
 80087aa:	4604      	mov	r4, r0
 80087ac:	f7ff fff2 	bl	8008794 <_ZN22Measurement_SingleViewD1Ev>
 80087b0:	4620      	mov	r0, r4
 80087b2:	f44f 518a 	mov.w	r1, #4416	; 0x1140
 80087b6:	f020 fe32 	bl	802941e <_ZdlPvj>
 80087ba:	4620      	mov	r0, r4
 80087bc:	bd10      	pop	{r4, pc}
	...

080087c0 <_ZN22Measurement_SingleViewC1Ev>:
Measurement_SingleView::Measurement_SingleView()
 80087c0:	b510      	push	{r4, lr}
 80087c2:	4604      	mov	r4, r0
 80087c4:	f7fe f91e 	bl	8006a04 <_ZN26Measurement_SingleViewBaseC1Ev>
 80087c8:	4b01      	ldr	r3, [pc, #4]	; (80087d0 <_ZN22Measurement_SingleViewC1Ev+0x10>)
 80087ca:	6023      	str	r3, [r4, #0]
}
 80087cc:	4620      	mov	r0, r4
 80087ce:	bd10      	pop	{r4, pc}
 80087d0:	0802de80 	.word	0x0802de80

080087d4 <_ZN22Measurement_SingleView11setupScreenEv>:
    Measurement_SingleViewBase::setupScreen();
 80087d4:	f7fe b8b8 	b.w	8006948 <_ZN26Measurement_SingleViewBase11setupScreenEv>

080087d8 <_ZN22Measurement_SingleView15setTimeoutValueEi>:

void Measurement_SingleView::setTimeoutValue(int value)
{
 80087d8:	b538      	push	{r3, r4, r5, lr}
	//display the timeout value on the GUI
	Unicode::snprintf(textArea3_1Buffer, TEXTAREA3_1_SIZE, "%d", value);
 80087da:	4a0a      	ldr	r2, [pc, #40]	; (8008804 <_ZN22Measurement_SingleView15setTimeoutValueEi+0x2c>)
{
 80087dc:	4605      	mov	r5, r0
 80087de:	460c      	mov	r4, r1
	Unicode::snprintf(textArea3_1Buffer, TEXTAREA3_1_SIZE, "%d", value);
 80087e0:	460b      	mov	r3, r1
 80087e2:	f500 7046 	add.w	r0, r0, #792	; 0x318
 80087e6:	2104      	movs	r1, #4
 80087e8:	f00f ff12 	bl	8018610 <_ZN8touchgfx7Unicode8snprintfEPttPKcz>
	textArea3_1.invalidate();
 80087ec:	f105 0098 	add.w	r0, r5, #152	; 0x98
 80087f0:	f00d fe86 	bl	8016500 <_ZNK8touchgfx8Drawable10invalidateEv>

	if(value == 0)
 80087f4:	b92c      	cbnz	r4, 8008802 <_ZN22Measurement_SingleView15setTimeoutValueEi+0x2a>
 80087f6:	f00c fd9b 	bl	8015330 <_ZN8touchgfx11Application11getInstanceEv>
	{
		//application().gotoMeasurement_SingleScreenSlideTransitionWest();
		application().gotoShutting_OffScreenNoTransition();
	}
}
 80087fa:	e8bd 4038 	ldmia.w	sp!, {r3, r4, r5, lr}
		application().gotoShutting_OffScreenNoTransition();
 80087fe:	f7fb b9a9 	b.w	8003b54 <_ZN23FrontendApplicationBase34gotoShutting_OffScreenNoTransitionEv>
}
 8008802:	bd38      	pop	{r3, r4, r5, pc}
 8008804:	0802da54 	.word	0x0802da54

08008808 <_ZN38Measurement_Single_Display_1PPresenterD1Ev>:
     * The deactivate function is called automatically when this screen is "switched out"
     * (ie. made inactive). Teardown functionality can be placed here.
     */
    virtual void deactivate();

    virtual ~Measurement_Single_Display_1PPresenter() {}
 8008808:	4770      	bx	lr

0800880a <_ZThn4_N38Measurement_Single_Display_1PPresenterD1Ev>:
 800880a:	3804      	subs	r0, #4
 800880c:	4770      	bx	lr

0800880e <_ZN38Measurement_Single_Display_1PPresenter10deactivateEv>:
}

void Measurement_Single_Display_1PPresenter::activate()
{

}
 800880e:	4770      	bx	lr

08008810 <_ZN38Measurement_Single_Display_1PPresenter15setTimeoutValueEi>:
}

void Measurement_Single_Display_1PPresenter::setTimeoutValue(int value)
{

}
 8008810:	4770      	bx	lr

08008812 <_ZN38Measurement_Single_Display_1PPresenterD0Ev>:
 8008812:	b510      	push	{r4, lr}
 8008814:	2110      	movs	r1, #16
 8008816:	4604      	mov	r4, r0
 8008818:	f020 fe01 	bl	802941e <_ZdlPvj>
 800881c:	4620      	mov	r0, r4
 800881e:	bd10      	pop	{r4, pc}

08008820 <_ZThn4_N38Measurement_Single_Display_1PPresenterD0Ev>:
 8008820:	f1a0 0004 	sub.w	r0, r0, #4
 8008824:	e7f5      	b.n	8008812 <_ZN38Measurement_Single_Display_1PPresenterD0Ev>

08008826 <_ZThn4_N38Measurement_Single_Display_1PPresenter15setTimeoutValueEi>:
 8008826:	4770      	bx	lr

08008828 <_ZN38Measurement_Single_Display_1PPresenterC1ER33Measurement_Single_Display_1PView>:
Measurement_Single_Display_1PPresenter::Measurement_Single_Display_1PPresenter(Measurement_Single_Display_1PView& v)
 8008828:	b510      	push	{r4, lr}
 800882a:	2200      	movs	r2, #0
 800882c:	6082      	str	r2, [r0, #8]
    : view(v)
 800882e:	4a04      	ldr	r2, [pc, #16]	; (8008840 <_ZN38Measurement_Single_Display_1PPresenterC1ER33Measurement_Single_Display_1PView+0x18>)
 8008830:	60c1      	str	r1, [r0, #12]
 8008832:	f102 0408 	add.w	r4, r2, #8
 8008836:	3224      	adds	r2, #36	; 0x24
 8008838:	6004      	str	r4, [r0, #0]
 800883a:	6042      	str	r2, [r0, #4]
}
 800883c:	bd10      	pop	{r4, pc}
 800883e:	bf00      	nop
 8008840:	0802deb0 	.word	0x0802deb0

08008844 <_ZN33Measurement_Single_Display_1PView14tearDownScreenEv>:
}

void Measurement_Single_Display_1PView::tearDownScreen()
{
    Measurement_Single_Display_1PViewBase::tearDownScreen();
}
 8008844:	4770      	bx	lr
	...

08008848 <_ZN33Measurement_Single_Display_1PViewD1Ev>:

class Measurement_Single_Display_1PView : public Measurement_Single_Display_1PViewBase
{
public:
    Measurement_Single_Display_1PView();
    virtual ~Measurement_Single_Display_1PView() {}
 8008848:	b510      	push	{r4, lr}
 800884a:	4b03      	ldr	r3, [pc, #12]	; (8008858 <_ZN33Measurement_Single_Display_1PViewD1Ev+0x10>)
 800884c:	6003      	str	r3, [r0, #0]
 800884e:	4604      	mov	r4, r0
 8008850:	f7fe fb26 	bl	8006ea0 <_ZN37Measurement_Single_Display_1PViewBaseD1Ev>
 8008854:	4620      	mov	r0, r4
 8008856:	bd10      	pop	{r4, pc}
 8008858:	0802def0 	.word	0x0802def0

0800885c <_ZN33Measurement_Single_Display_1PViewD0Ev>:
 800885c:	b510      	push	{r4, lr}
 800885e:	4604      	mov	r4, r0
 8008860:	f7ff fff2 	bl	8008848 <_ZN33Measurement_Single_Display_1PViewD1Ev>
 8008864:	4620      	mov	r0, r4
 8008866:	f241 31f4 	movw	r1, #5108	; 0x13f4
 800886a:	f020 fdd8 	bl	802941e <_ZdlPvj>
 800886e:	4620      	mov	r0, r4
 8008870:	bd10      	pop	{r4, pc}
	...

08008874 <_ZN33Measurement_Single_Display_1PViewC1Ev>:
Measurement_Single_Display_1PView::Measurement_Single_Display_1PView()
 8008874:	b510      	push	{r4, lr}
 8008876:	4604      	mov	r4, r0
 8008878:	f7fe fb3a 	bl	8006ef0 <_ZN37Measurement_Single_Display_1PViewBaseC1Ev>
 800887c:	4b01      	ldr	r3, [pc, #4]	; (8008884 <_ZN33Measurement_Single_Display_1PViewC1Ev+0x10>)
 800887e:	6023      	str	r3, [r4, #0]
}
 8008880:	4620      	mov	r0, r4
 8008882:	bd10      	pop	{r4, pc}
 8008884:	0802def0 	.word	0x0802def0

08008888 <_ZN33Measurement_Single_Display_1PView11setupScreenEv>:
    Measurement_Single_Display_1PViewBase::setupScreen();
 8008888:	f7fe bae3 	b.w	8006e52 <_ZN37Measurement_Single_Display_1PViewBase11setupScreenEv>

0800888c <_ZN33Measurement_Single_Display_1PView7testGuiEv>:

void Measurement_Single_Display_1PView::testGui()
{
 800888c:	b530      	push	{r4, r5, lr}
 800888e:	b087      	sub	sp, #28
 8008890:	4604      	mov	r4, r0
#ifndef SIMULATOR
	int test = 	0;

	test = updateGUI_test();
 8008892:	f7f8 fd29 	bl	80012e8 <updateGUI_test>
 8008896:	4605      	mov	r5, r0

	uint32_t* Samples = MEAS_start_measure();
 8008898:	f7f9 fa46 	bl	8001d28 <MEAS_start_measure>

	//callback to fft
	FFT fft = calculate_freq_and_signalstrength(1, Samples, 50);
 800889c:	2232      	movs	r2, #50	; 0x32
	uint32_t* Samples = MEAS_start_measure();
 800889e:	4601      	mov	r1, r0
	FFT fft = calculate_freq_and_signalstrength(1, Samples, 50);
 80088a0:	2001      	movs	r0, #1
 80088a2:	f7f8 fc77 	bl	8001194 <calculate_freq_and_signalstrength>

	//update GUI values
	//set gauge angle
	SMD1_gauge.setValue(test);
 80088a6:	f104 00e0 	add.w	r0, r4, #224	; 0xe0
 80088aa:	4629      	mov	r1, r5
	FFT fft = calculate_freq_and_signalstrength(1, Samples, 50);
 80088ac:	ed8d 0a04 	vstr	s0, [sp, #16]
 80088b0:	edcd 0a05 	vstr	s1, [sp, #20]
	SMD1_gauge.setValue(test);
 80088b4:	9001      	str	r0, [sp, #4]
 80088b6:	f009 fdcf 	bl	8012458 <_ZN8touchgfx5Gauge8setValueEi>
	SMD1_gauge.invalidate();
 80088ba:	9801      	ldr	r0, [sp, #4]
 80088bc:	f00d fe20 	bl	8016500 <_ZNK8touchgfx8Drawable10invalidateEv>

	//set current value
	Unicode::snprintf(SMD1_CurrentBuffer, SMD1_CURRENT_SIZE, "%d", test);
 80088c0:	462b      	mov	r3, r5
 80088c2:	4a13      	ldr	r2, [pc, #76]	; (8008910 <_ZN33Measurement_Single_Display_1PView7testGuiEv+0x84>)
 80088c4:	210a      	movs	r1, #10
 80088c6:	f504 60b3 	add.w	r0, r4, #1432	; 0x598
 80088ca:	f00f fea1 	bl	8018610 <_ZN8touchgfx7Unicode8snprintfEPttPKcz>
	SMD1_Current.invalidate();
 80088ce:	f504 7020 	add.w	r0, r4, #640	; 0x280
 80088d2:	f00d fe15 	bl	8016500 <_ZNK8touchgfx8Drawable10invalidateEv>

	//set frequency value
	Unicode::snprintfFloat(SMD1_FrequencyBuffer, SMD1_FREQUENCY_SIZE, "%.2f", fft.main_freq);
 80088d6:	9b04      	ldr	r3, [sp, #16]
     *
     * @see snprintf, snprintfFloats
     */
    static UnicodeChar* snprintfFloat(UnicodeChar* dst, uint16_t dstSize, const char* format, const float value)
    {
        return snprintfFloats(dst, dstSize, format, &value);
 80088d8:	4a0e      	ldr	r2, [pc, #56]	; (8008914 <_ZN33Measurement_Single_Display_1PView7testGuiEv+0x88>)
 80088da:	9303      	str	r3, [sp, #12]
 80088dc:	210a      	movs	r1, #10
 80088de:	ab03      	add	r3, sp, #12
 80088e0:	f204 50ac 	addw	r0, r4, #1452	; 0x5ac
 80088e4:	f010 f880 	bl	80189e8 <_ZN8touchgfx7Unicode14snprintfFloatsEPttPKcPKf>
	SMD1_Frequency.invalidate();
 80088e8:	f504 7033 	add.w	r0, r4, #716	; 0x2cc
 80088ec:	f00d fe08 	bl	8016500 <_ZNK8touchgfx8Drawable10invalidateEv>

	//set distance value
	Unicode::snprintfFloat(SMD1_DistanceBuffer, SMD1_DISTANCE_SIZE, "%.2f", fft.signal_strength);
 80088f0:	9b05      	ldr	r3, [sp, #20]
 80088f2:	9303      	str	r3, [sp, #12]
 80088f4:	4a07      	ldr	r2, [pc, #28]	; (8008914 <_ZN33Measurement_Single_Display_1PView7testGuiEv+0x88>)
 80088f6:	ab03      	add	r3, sp, #12
 80088f8:	210a      	movs	r1, #10
 80088fa:	f504 60b8 	add.w	r0, r4, #1472	; 0x5c0
 80088fe:	f010 f873 	bl	80189e8 <_ZN8touchgfx7Unicode14snprintfFloatsEPttPKcPKf>
	SMD1_Distance.invalidate();
 8008902:	f504 7046 	add.w	r0, r4, #792	; 0x318
#endif
}
 8008906:	b007      	add	sp, #28
 8008908:	e8bd 4030 	ldmia.w	sp!, {r4, r5, lr}
	SMD1_Distance.invalidate();
 800890c:	f00d bdf8 	b.w	8016500 <_ZNK8touchgfx8Drawable10invalidateEv>
 8008910:	0802da54 	.word	0x0802da54
 8008914:	0802dee0 	.word	0x0802dee0

08008918 <_ZN38Measurement_Single_Display_3PPresenterD1Ev>:
     * The deactivate function is called automatically when this screen is "switched out"
     * (ie. made inactive). Teardown functionality can be placed here.
     */
    virtual void deactivate();

    virtual ~Measurement_Single_Display_3PPresenter() {}
 8008918:	4770      	bx	lr

0800891a <_ZThn4_N38Measurement_Single_Display_3PPresenterD1Ev>:
 800891a:	3804      	subs	r0, #4
 800891c:	4770      	bx	lr

0800891e <_ZN38Measurement_Single_Display_3PPresenter10deactivateEv>:
}

void Measurement_Single_Display_3PPresenter::activate()
{

}
 800891e:	4770      	bx	lr

08008920 <_ZN38Measurement_Single_Display_3PPresenter15setTimeoutValueEi>:
}

void Measurement_Single_Display_3PPresenter::setTimeoutValue(int value)
{

}
 8008920:	4770      	bx	lr

08008922 <_ZN38Measurement_Single_Display_3PPresenterD0Ev>:
 8008922:	b510      	push	{r4, lr}
 8008924:	2110      	movs	r1, #16
 8008926:	4604      	mov	r4, r0
 8008928:	f020 fd79 	bl	802941e <_ZdlPvj>
 800892c:	4620      	mov	r0, r4
 800892e:	bd10      	pop	{r4, pc}

08008930 <_ZThn4_N38Measurement_Single_Display_3PPresenterD0Ev>:
 8008930:	f1a0 0004 	sub.w	r0, r0, #4
 8008934:	e7f5      	b.n	8008922 <_ZN38Measurement_Single_Display_3PPresenterD0Ev>

08008936 <_ZThn4_N38Measurement_Single_Display_3PPresenter15setTimeoutValueEi>:
 8008936:	4770      	bx	lr

08008938 <_ZN38Measurement_Single_Display_3PPresenterC1ER33Measurement_Single_Display_3PView>:
Measurement_Single_Display_3PPresenter::Measurement_Single_Display_3PPresenter(Measurement_Single_Display_3PView& v)
 8008938:	b510      	push	{r4, lr}
 800893a:	2200      	movs	r2, #0
 800893c:	6082      	str	r2, [r0, #8]
    : view(v)
 800893e:	4a04      	ldr	r2, [pc, #16]	; (8008950 <_ZN38Measurement_Single_Display_3PPresenterC1ER33Measurement_Single_Display_3PView+0x18>)
 8008940:	60c1      	str	r1, [r0, #12]
 8008942:	f102 0408 	add.w	r4, r2, #8
 8008946:	3224      	adds	r2, #36	; 0x24
 8008948:	6004      	str	r4, [r0, #0]
 800894a:	6042      	str	r2, [r0, #4]
}
 800894c:	bd10      	pop	{r4, pc}
 800894e:	bf00      	nop
 8008950:	0802df20 	.word	0x0802df20

08008954 <_ZN33Measurement_Single_Display_3PView14tearDownScreenEv>:
}

void Measurement_Single_Display_3PView::tearDownScreen()
{
    Measurement_Single_Display_3PViewBase::tearDownScreen();
}
 8008954:	4770      	bx	lr
	...

08008958 <_ZN33Measurement_Single_Display_3PViewD1Ev>:

class Measurement_Single_Display_3PView : public Measurement_Single_Display_3PViewBase
{
public:
    Measurement_Single_Display_3PView();
    virtual ~Measurement_Single_Display_3PView() {}
 8008958:	b510      	push	{r4, lr}
 800895a:	4b03      	ldr	r3, [pc, #12]	; (8008968 <_ZN33Measurement_Single_Display_3PViewD1Ev+0x10>)
 800895c:	6003      	str	r3, [r0, #0]
 800895e:	4604      	mov	r4, r0
 8008960:	f7fe fe38 	bl	80075d4 <_ZN37Measurement_Single_Display_3PViewBaseD1Ev>
 8008964:	4620      	mov	r0, r4
 8008966:	bd10      	pop	{r4, pc}
 8008968:	0802df58 	.word	0x0802df58

0800896c <_ZN33Measurement_Single_Display_3PViewD0Ev>:
 800896c:	b510      	push	{r4, lr}
 800896e:	4604      	mov	r4, r0
 8008970:	f7ff fff2 	bl	8008958 <_ZN33Measurement_Single_Display_3PViewD1Ev>
 8008974:	4620      	mov	r0, r4
 8008976:	f241 31e4 	movw	r1, #5092	; 0x13e4
 800897a:	f020 fd50 	bl	802941e <_ZdlPvj>
 800897e:	4620      	mov	r0, r4
 8008980:	bd10      	pop	{r4, pc}
	...

08008984 <_ZN33Measurement_Single_Display_3PViewC1Ev>:
Measurement_Single_Display_3PView::Measurement_Single_Display_3PView()
 8008984:	b510      	push	{r4, lr}
 8008986:	4604      	mov	r4, r0
 8008988:	f7fe fe44 	bl	8007614 <_ZN37Measurement_Single_Display_3PViewBaseC1Ev>
 800898c:	4b01      	ldr	r3, [pc, #4]	; (8008994 <_ZN33Measurement_Single_Display_3PViewC1Ev+0x10>)
 800898e:	6023      	str	r3, [r4, #0]
}
 8008990:	4620      	mov	r0, r4
 8008992:	bd10      	pop	{r4, pc}
 8008994:	0802df58 	.word	0x0802df58

08008998 <_ZN33Measurement_Single_Display_3PView11setupScreenEv>:
    Measurement_Single_Display_3PViewBase::setupScreen();
 8008998:	f7fe be0b 	b.w	80075b2 <_ZN37Measurement_Single_Display_3PViewBase11setupScreenEv>

0800899c <_ZN5ModelC1Ev>:
}
#endif



Model::Model() : modelListener(0), Timeout_Value(60)
 800899c:	2100      	movs	r1, #0
 800899e:	223c      	movs	r2, #60	; 0x3c
 80089a0:	e9c0 1200 	strd	r1, r2, [r0]
{

}
 80089a4:	4770      	bx	lr
	...

080089a8 <_ZN5Model4tickEv>:

void Model::tick()
{
 80089a8:	b570      	push	{r4, r5, r6, lr}
#ifndef SIMULATOR

	if(osMessageQueueGetCount(TimeoutQueueHandle) > 0)
 80089aa:	4d0a      	ldr	r5, [pc, #40]	; (80089d4 <_ZN5Model4tickEv+0x2c>)
{
 80089ac:	4604      	mov	r4, r0
	if(osMessageQueueGetCount(TimeoutQueueHandle) > 0)
 80089ae:	6828      	ldr	r0, [r5, #0]
 80089b0:	f004 fc1a 	bl	800d1e8 <osMessageQueueGetCount>
 80089b4:	b168      	cbz	r0, 80089d2 <_ZN5Model4tickEv+0x2a>
	{
		if(osMessageQueueGet(TimeoutQueueHandle, &Timeout_Value, 0, 0) == osOK)
 80089b6:	2300      	movs	r3, #0
 80089b8:	6828      	ldr	r0, [r5, #0]
 80089ba:	461a      	mov	r2, r3
 80089bc:	1d21      	adds	r1, r4, #4
 80089be:	f004 fbdf 	bl	800d180 <osMessageQueueGet>
 80089c2:	b930      	cbnz	r0, 80089d2 <_ZN5Model4tickEv+0x2a>
		{
			modelListener->setTimeoutValue(Timeout_Value);
 80089c4:	6820      	ldr	r0, [r4, #0]
 80089c6:	6861      	ldr	r1, [r4, #4]
 80089c8:	6803      	ldr	r3, [r0, #0]
		}
	}
#endif
}
 80089ca:	e8bd 4070 	ldmia.w	sp!, {r4, r5, r6, lr}
			modelListener->setTimeoutValue(Timeout_Value);
 80089ce:	689b      	ldr	r3, [r3, #8]
 80089d0:	4718      	bx	r3
}
 80089d2:	bd70      	pop	{r4, r5, r6, pc}
 80089d4:	200018d4 	.word	0x200018d4

080089d8 <_ZN21Project_InfoPresenterD1Ev>:
     * The deactivate function is called automatically when this screen is "switched out"
     * (ie. made inactive). Teardown functionality can be placed here.
     */
    virtual void deactivate();

    virtual ~Project_InfoPresenter() {}
 80089d8:	4770      	bx	lr

080089da <_ZThn4_N21Project_InfoPresenterD1Ev>:
 80089da:	3804      	subs	r0, #4
 80089dc:	4770      	bx	lr

080089de <_ZN21Project_InfoPresenter10deactivateEv>:
}

void Project_InfoPresenter::activate()
{

}
 80089de:	4770      	bx	lr

080089e0 <_ZN21Project_InfoPresenter15setTimeoutValueEi>:

}

void Project_InfoPresenter::setTimeoutValue(int value)
{
	view.setTimeoutValue(value);
 80089e0:	68c0      	ldr	r0, [r0, #12]
 80089e2:	6803      	ldr	r3, [r0, #0]
 80089e4:	6adb      	ldr	r3, [r3, #44]	; 0x2c
 80089e6:	4718      	bx	r3

080089e8 <_ZThn4_N21Project_InfoPresenter15setTimeoutValueEi>:

    virtual void setTimeoutValue(int value);
 80089e8:	f1a0 0004 	sub.w	r0, r0, #4
 80089ec:	f7ff bff8 	b.w	80089e0 <_ZN21Project_InfoPresenter15setTimeoutValueEi>

080089f0 <_ZN21Project_InfoPresenterD0Ev>:
    virtual ~Project_InfoPresenter() {}
 80089f0:	b510      	push	{r4, lr}
 80089f2:	2110      	movs	r1, #16
 80089f4:	4604      	mov	r4, r0
 80089f6:	f020 fd12 	bl	802941e <_ZdlPvj>
 80089fa:	4620      	mov	r0, r4
 80089fc:	bd10      	pop	{r4, pc}

080089fe <_ZThn4_N21Project_InfoPresenterD0Ev>:
 80089fe:	f1a0 0004 	sub.w	r0, r0, #4
 8008a02:	e7f5      	b.n	80089f0 <_ZN21Project_InfoPresenterD0Ev>

08008a04 <_ZN21Project_InfoPresenterC1ER16Project_InfoView>:
Project_InfoPresenter::Project_InfoPresenter(Project_InfoView& v)
 8008a04:	b510      	push	{r4, lr}
 8008a06:	2200      	movs	r2, #0
 8008a08:	6082      	str	r2, [r0, #8]
    : view(v)
 8008a0a:	4a04      	ldr	r2, [pc, #16]	; (8008a1c <_ZN21Project_InfoPresenterC1ER16Project_InfoView+0x18>)
 8008a0c:	60c1      	str	r1, [r0, #12]
 8008a0e:	f102 0408 	add.w	r4, r2, #8
 8008a12:	3224      	adds	r2, #36	; 0x24
 8008a14:	6004      	str	r4, [r0, #0]
 8008a16:	6042      	str	r2, [r0, #4]
}
 8008a18:	bd10      	pop	{r4, pc}
 8008a1a:	bf00      	nop
 8008a1c:	0802df84 	.word	0x0802df84

08008a20 <_ZN16Project_InfoView14tearDownScreenEv>:
}

void Project_InfoView::tearDownScreen()
{
    Project_InfoViewBase::tearDownScreen();
}
 8008a20:	4770      	bx	lr
	...

08008a24 <_ZN16Project_InfoViewD1Ev>:

class Project_InfoView : public Project_InfoViewBase
{
public:
    Project_InfoView();
    virtual ~Project_InfoView() {}
 8008a24:	b510      	push	{r4, lr}
 8008a26:	4b03      	ldr	r3, [pc, #12]	; (8008a34 <_ZN16Project_InfoViewD1Ev+0x10>)
 8008a28:	6003      	str	r3, [r0, #0]
 8008a2a:	4604      	mov	r4, r0
 8008a2c:	f7fe ff8c 	bl	8007948 <_ZN20Project_InfoViewBaseD1Ev>
 8008a30:	4620      	mov	r0, r4
 8008a32:	bd10      	pop	{r4, pc}
 8008a34:	0802dfbc 	.word	0x0802dfbc

08008a38 <_ZN16Project_InfoViewD0Ev>:
 8008a38:	b510      	push	{r4, lr}
 8008a3a:	4604      	mov	r4, r0
 8008a3c:	f7ff fff2 	bl	8008a24 <_ZN16Project_InfoViewD1Ev>
 8008a40:	4620      	mov	r0, r4
 8008a42:	f241 01b0 	movw	r1, #4272	; 0x10b0
 8008a46:	f020 fcea 	bl	802941e <_ZdlPvj>
 8008a4a:	4620      	mov	r0, r4
 8008a4c:	bd10      	pop	{r4, pc}
	...

08008a50 <_ZN16Project_InfoViewC1Ev>:
Project_InfoView::Project_InfoView()
 8008a50:	b510      	push	{r4, lr}
 8008a52:	4604      	mov	r4, r0
 8008a54:	f7fe ffa0 	bl	8007998 <_ZN20Project_InfoViewBaseC1Ev>
 8008a58:	4b01      	ldr	r3, [pc, #4]	; (8008a60 <_ZN16Project_InfoViewC1Ev+0x10>)
 8008a5a:	6023      	str	r3, [r4, #0]
}
 8008a5c:	4620      	mov	r0, r4
 8008a5e:	bd10      	pop	{r4, pc}
 8008a60:	0802dfbc 	.word	0x0802dfbc

08008a64 <_ZN16Project_InfoView11setupScreenEv>:
    Project_InfoViewBase::setupScreen();
 8008a64:	f7fe bf4c 	b.w	8007900 <_ZN20Project_InfoViewBase11setupScreenEv>

08008a68 <_ZN16Project_InfoView15setTimeoutValueEi>:

void Project_InfoView::setTimeoutValue(int value)
{
 8008a68:	b538      	push	{r3, r4, r5, lr}
	//display the timeout value on the GUI
	Unicode::snprintf(textArea3_1Buffer, TEXTAREA3_1_SIZE, "%d", value);
 8008a6a:	4a0a      	ldr	r2, [pc, #40]	; (8008a94 <_ZN16Project_InfoView15setTimeoutValueEi+0x2c>)
{
 8008a6c:	4605      	mov	r5, r0
 8008a6e:	460c      	mov	r4, r1
	Unicode::snprintf(textArea3_1Buffer, TEXTAREA3_1_SIZE, "%d", value);
 8008a70:	460b      	mov	r3, r1
 8008a72:	f500 7022 	add.w	r0, r0, #648	; 0x288
 8008a76:	2104      	movs	r1, #4
 8008a78:	f00f fdca 	bl	8018610 <_ZN8touchgfx7Unicode8snprintfEPttPKcz>
	textArea3_1.invalidate();
 8008a7c:	f105 0098 	add.w	r0, r5, #152	; 0x98
 8008a80:	f00d fd3e 	bl	8016500 <_ZNK8touchgfx8Drawable10invalidateEv>

	if (value == 0) {
 8008a84:	b92c      	cbnz	r4, 8008a92 <_ZN16Project_InfoView15setTimeoutValueEi+0x2a>
 8008a86:	f00c fc53 	bl	8015330 <_ZN8touchgfx11Application11getInstanceEv>
		//application().gotoMeasurement_SingleScreenSlideTransitionWest();
		application().gotoShutting_OffScreenNoTransition();
	}
}
 8008a8a:	e8bd 4038 	ldmia.w	sp!, {r3, r4, r5, lr}
		application().gotoShutting_OffScreenNoTransition();
 8008a8e:	f7fb b861 	b.w	8003b54 <_ZN23FrontendApplicationBase34gotoShutting_OffScreenNoTransitionEv>
}
 8008a92:	bd38      	pop	{r3, r4, r5, pc}
 8008a94:	0802da54 	.word	0x0802da54

08008a98 <_ZN21Shutting_OffPresenterD1Ev>:
     * The deactivate function is called automatically when this screen is "switched out"
     * (ie. made inactive). Teardown functionality can be placed here.
     */
    virtual void deactivate();

    virtual ~Shutting_OffPresenter() {}
 8008a98:	4770      	bx	lr

08008a9a <_ZThn4_N21Shutting_OffPresenterD1Ev>:
 8008a9a:	3804      	subs	r0, #4
 8008a9c:	4770      	bx	lr

08008a9e <_ZN21Shutting_OffPresenter10deactivateEv>:
}

void Shutting_OffPresenter::activate()
{

}
 8008a9e:	4770      	bx	lr

08008aa0 <_ZN21Shutting_OffPresenter15setTimeoutValueEi>:
}

void Shutting_OffPresenter::setTimeoutValue(int value)
{

}
 8008aa0:	4770      	bx	lr

08008aa2 <_ZN21Shutting_OffPresenterD0Ev>:
 8008aa2:	b510      	push	{r4, lr}
 8008aa4:	2110      	movs	r1, #16
 8008aa6:	4604      	mov	r4, r0
 8008aa8:	f020 fcb9 	bl	802941e <_ZdlPvj>
 8008aac:	4620      	mov	r0, r4
 8008aae:	bd10      	pop	{r4, pc}

08008ab0 <_ZThn4_N21Shutting_OffPresenterD0Ev>:
 8008ab0:	f1a0 0004 	sub.w	r0, r0, #4
 8008ab4:	e7f5      	b.n	8008aa2 <_ZN21Shutting_OffPresenterD0Ev>

08008ab6 <_ZThn4_N21Shutting_OffPresenter15setTimeoutValueEi>:
 8008ab6:	4770      	bx	lr

08008ab8 <_ZN21Shutting_OffPresenterC1ER16Shutting_OffView>:
Shutting_OffPresenter::Shutting_OffPresenter(Shutting_OffView& v)
 8008ab8:	b510      	push	{r4, lr}
 8008aba:	2200      	movs	r2, #0
 8008abc:	6082      	str	r2, [r0, #8]
    : view(v)
 8008abe:	4a04      	ldr	r2, [pc, #16]	; (8008ad0 <_ZN21Shutting_OffPresenterC1ER16Shutting_OffView+0x18>)
 8008ac0:	60c1      	str	r1, [r0, #12]
 8008ac2:	f102 0408 	add.w	r4, r2, #8
 8008ac6:	3224      	adds	r2, #36	; 0x24
 8008ac8:	6004      	str	r4, [r0, #0]
 8008aca:	6042      	str	r2, [r0, #4]
}
 8008acc:	bd10      	pop	{r4, pc}
 8008ace:	bf00      	nop
 8008ad0:	0802dfec 	.word	0x0802dfec

08008ad4 <_ZN16Shutting_OffView14tearDownScreenEv>:
}

void Shutting_OffView::tearDownScreen()
{
    Shutting_OffViewBase::tearDownScreen();
}
 8008ad4:	4770      	bx	lr
	...

08008ad8 <_ZN16Shutting_OffViewD1Ev>:

class Shutting_OffView : public Shutting_OffViewBase
{
public:
    Shutting_OffView();
    virtual ~Shutting_OffView() {}
 8008ad8:	b510      	push	{r4, lr}
 8008ada:	4b03      	ldr	r3, [pc, #12]	; (8008ae8 <_ZN16Shutting_OffViewD1Ev+0x10>)
 8008adc:	6003      	str	r3, [r0, #0]
 8008ade:	4604      	mov	r4, r0
 8008ae0:	f7ff f928 	bl	8007d34 <_ZN20Shutting_OffViewBaseD1Ev>
 8008ae4:	4620      	mov	r0, r4
 8008ae6:	bd10      	pop	{r4, pc}
 8008ae8:	0802e024 	.word	0x0802e024

08008aec <_ZN16Shutting_OffViewD0Ev>:
 8008aec:	b510      	push	{r4, lr}
 8008aee:	4604      	mov	r4, r0
 8008af0:	f7ff fff2 	bl	8008ad8 <_ZN16Shutting_OffViewD1Ev>
 8008af4:	4620      	mov	r0, r4
 8008af6:	2198      	movs	r1, #152	; 0x98
 8008af8:	f020 fc91 	bl	802941e <_ZdlPvj>
 8008afc:	4620      	mov	r0, r4
 8008afe:	bd10      	pop	{r4, pc}

08008b00 <_ZN16Shutting_OffViewC1Ev>:
Shutting_OffView::Shutting_OffView()
 8008b00:	b510      	push	{r4, lr}
 8008b02:	4604      	mov	r4, r0
 8008b04:	f7ff f920 	bl	8007d48 <_ZN20Shutting_OffViewBaseC1Ev>
 8008b08:	4b01      	ldr	r3, [pc, #4]	; (8008b10 <_ZN16Shutting_OffViewC1Ev+0x10>)
 8008b0a:	6023      	str	r3, [r4, #0]
}
 8008b0c:	4620      	mov	r0, r4
 8008b0e:	bd10      	pop	{r4, pc}
 8008b10:	0802e024 	.word	0x0802e024

08008b14 <_ZN16Shutting_OffView11setupScreenEv>:
    Shutting_OffViewBase::setupScreen();
 8008b14:	f7ff b90f 	b.w	8007d36 <_ZN20Shutting_OffViewBase11setupScreenEv>

08008b18 <ili9341_GetLcdPixelWidth>:
  */
uint16_t ili9341_GetLcdPixelWidth(void)
{
  /* Return LCD PIXEL WIDTH */
  return ILI9341_LCD_PIXEL_WIDTH;
}
 8008b18:	20f0      	movs	r0, #240	; 0xf0
 8008b1a:	4770      	bx	lr

08008b1c <ili9341_GetLcdPixelHeight>:
  */
uint16_t ili9341_GetLcdPixelHeight(void)
{
  /* Return LCD PIXEL HEIGHT */
  return ILI9341_LCD_PIXEL_HEIGHT;
}
 8008b1c:	f44f 70a0 	mov.w	r0, #320	; 0x140
 8008b20:	4770      	bx	lr
 8008b22:	bf00      	nop

08008b24 <ili9341_DisplayOn>:
  LCD_IO_WriteReg(LCD_Reg);
 8008b24:	2029      	movs	r0, #41	; 0x29
 8008b26:	f7f8 bf75 	b.w	8001a14 <LCD_IO_WriteReg>
 8008b2a:	bf00      	nop

08008b2c <ili9341_DisplayOff>:
 8008b2c:	2028      	movs	r0, #40	; 0x28
 8008b2e:	f7f8 bf71 	b.w	8001a14 <LCD_IO_WriteReg>
 8008b32:	bf00      	nop

08008b34 <ili9341_Init>:
{
 8008b34:	b508      	push	{r3, lr}
  LCD_IO_Init();
 8008b36:	f7f8 ff33 	bl	80019a0 <LCD_IO_Init>
  LCD_IO_WriteReg(LCD_Reg);
 8008b3a:	20ca      	movs	r0, #202	; 0xca
 8008b3c:	f7f8 ff6a 	bl	8001a14 <LCD_IO_WriteReg>
  LCD_IO_WriteData(RegValue);
 8008b40:	20c3      	movs	r0, #195	; 0xc3
 8008b42:	f7f8 ff3d 	bl	80019c0 <LCD_IO_WriteData>
 8008b46:	2008      	movs	r0, #8
 8008b48:	f7f8 ff3a 	bl	80019c0 <LCD_IO_WriteData>
 8008b4c:	2050      	movs	r0, #80	; 0x50
 8008b4e:	f7f8 ff37 	bl	80019c0 <LCD_IO_WriteData>
  LCD_IO_WriteReg(LCD_Reg);
 8008b52:	20cf      	movs	r0, #207	; 0xcf
 8008b54:	f7f8 ff5e 	bl	8001a14 <LCD_IO_WriteReg>
  LCD_IO_WriteData(RegValue);
 8008b58:	2000      	movs	r0, #0
 8008b5a:	f7f8 ff31 	bl	80019c0 <LCD_IO_WriteData>
 8008b5e:	20c1      	movs	r0, #193	; 0xc1
 8008b60:	f7f8 ff2e 	bl	80019c0 <LCD_IO_WriteData>
 8008b64:	2030      	movs	r0, #48	; 0x30
 8008b66:	f7f8 ff2b 	bl	80019c0 <LCD_IO_WriteData>
  LCD_IO_WriteReg(LCD_Reg);
 8008b6a:	20ed      	movs	r0, #237	; 0xed
 8008b6c:	f7f8 ff52 	bl	8001a14 <LCD_IO_WriteReg>
  LCD_IO_WriteData(RegValue);
 8008b70:	2064      	movs	r0, #100	; 0x64
 8008b72:	f7f8 ff25 	bl	80019c0 <LCD_IO_WriteData>
 8008b76:	2003      	movs	r0, #3
 8008b78:	f7f8 ff22 	bl	80019c0 <LCD_IO_WriteData>
 8008b7c:	2012      	movs	r0, #18
 8008b7e:	f7f8 ff1f 	bl	80019c0 <LCD_IO_WriteData>
 8008b82:	2081      	movs	r0, #129	; 0x81
 8008b84:	f7f8 ff1c 	bl	80019c0 <LCD_IO_WriteData>
  LCD_IO_WriteReg(LCD_Reg);
 8008b88:	20e8      	movs	r0, #232	; 0xe8
 8008b8a:	f7f8 ff43 	bl	8001a14 <LCD_IO_WriteReg>
  LCD_IO_WriteData(RegValue);
 8008b8e:	2085      	movs	r0, #133	; 0x85
 8008b90:	f7f8 ff16 	bl	80019c0 <LCD_IO_WriteData>
 8008b94:	2000      	movs	r0, #0
 8008b96:	f7f8 ff13 	bl	80019c0 <LCD_IO_WriteData>
 8008b9a:	2078      	movs	r0, #120	; 0x78
 8008b9c:	f7f8 ff10 	bl	80019c0 <LCD_IO_WriteData>
  LCD_IO_WriteReg(LCD_Reg);
 8008ba0:	20cb      	movs	r0, #203	; 0xcb
 8008ba2:	f7f8 ff37 	bl	8001a14 <LCD_IO_WriteReg>
  LCD_IO_WriteData(RegValue);
 8008ba6:	2039      	movs	r0, #57	; 0x39
 8008ba8:	f7f8 ff0a 	bl	80019c0 <LCD_IO_WriteData>
 8008bac:	202c      	movs	r0, #44	; 0x2c
 8008bae:	f7f8 ff07 	bl	80019c0 <LCD_IO_WriteData>
 8008bb2:	2000      	movs	r0, #0
 8008bb4:	f7f8 ff04 	bl	80019c0 <LCD_IO_WriteData>
 8008bb8:	2034      	movs	r0, #52	; 0x34
 8008bba:	f7f8 ff01 	bl	80019c0 <LCD_IO_WriteData>
 8008bbe:	2002      	movs	r0, #2
 8008bc0:	f7f8 fefe 	bl	80019c0 <LCD_IO_WriteData>
  LCD_IO_WriteReg(LCD_Reg);
 8008bc4:	20f7      	movs	r0, #247	; 0xf7
 8008bc6:	f7f8 ff25 	bl	8001a14 <LCD_IO_WriteReg>
  LCD_IO_WriteData(RegValue);
 8008bca:	2020      	movs	r0, #32
 8008bcc:	f7f8 fef8 	bl	80019c0 <LCD_IO_WriteData>
  LCD_IO_WriteReg(LCD_Reg);
 8008bd0:	20ea      	movs	r0, #234	; 0xea
 8008bd2:	f7f8 ff1f 	bl	8001a14 <LCD_IO_WriteReg>
  LCD_IO_WriteData(RegValue);
 8008bd6:	2000      	movs	r0, #0
 8008bd8:	f7f8 fef2 	bl	80019c0 <LCD_IO_WriteData>
 8008bdc:	2000      	movs	r0, #0
 8008bde:	f7f8 feef 	bl	80019c0 <LCD_IO_WriteData>
  LCD_IO_WriteReg(LCD_Reg);
 8008be2:	20b1      	movs	r0, #177	; 0xb1
 8008be4:	f7f8 ff16 	bl	8001a14 <LCD_IO_WriteReg>
  LCD_IO_WriteData(RegValue);
 8008be8:	2000      	movs	r0, #0
 8008bea:	f7f8 fee9 	bl	80019c0 <LCD_IO_WriteData>
 8008bee:	201b      	movs	r0, #27
 8008bf0:	f7f8 fee6 	bl	80019c0 <LCD_IO_WriteData>
  LCD_IO_WriteReg(LCD_Reg);
 8008bf4:	20b6      	movs	r0, #182	; 0xb6
 8008bf6:	f7f8 ff0d 	bl	8001a14 <LCD_IO_WriteReg>
  LCD_IO_WriteData(RegValue);
 8008bfa:	200a      	movs	r0, #10
 8008bfc:	f7f8 fee0 	bl	80019c0 <LCD_IO_WriteData>
 8008c00:	20a2      	movs	r0, #162	; 0xa2
 8008c02:	f7f8 fedd 	bl	80019c0 <LCD_IO_WriteData>
  LCD_IO_WriteReg(LCD_Reg);
 8008c06:	20c0      	movs	r0, #192	; 0xc0
 8008c08:	f7f8 ff04 	bl	8001a14 <LCD_IO_WriteReg>
  LCD_IO_WriteData(RegValue);
 8008c0c:	2010      	movs	r0, #16
 8008c0e:	f7f8 fed7 	bl	80019c0 <LCD_IO_WriteData>
  LCD_IO_WriteReg(LCD_Reg);
 8008c12:	20c1      	movs	r0, #193	; 0xc1
 8008c14:	f7f8 fefe 	bl	8001a14 <LCD_IO_WriteReg>
  LCD_IO_WriteData(RegValue);
 8008c18:	2010      	movs	r0, #16
 8008c1a:	f7f8 fed1 	bl	80019c0 <LCD_IO_WriteData>
  LCD_IO_WriteReg(LCD_Reg);
 8008c1e:	20c5      	movs	r0, #197	; 0xc5
 8008c20:	f7f8 fef8 	bl	8001a14 <LCD_IO_WriteReg>
  LCD_IO_WriteData(RegValue);
 8008c24:	2045      	movs	r0, #69	; 0x45
 8008c26:	f7f8 fecb 	bl	80019c0 <LCD_IO_WriteData>
 8008c2a:	2015      	movs	r0, #21
 8008c2c:	f7f8 fec8 	bl	80019c0 <LCD_IO_WriteData>
  LCD_IO_WriteReg(LCD_Reg);
 8008c30:	20c7      	movs	r0, #199	; 0xc7
 8008c32:	f7f8 feef 	bl	8001a14 <LCD_IO_WriteReg>
  LCD_IO_WriteData(RegValue);
 8008c36:	2090      	movs	r0, #144	; 0x90
 8008c38:	f7f8 fec2 	bl	80019c0 <LCD_IO_WriteData>
  LCD_IO_WriteReg(LCD_Reg);
 8008c3c:	2036      	movs	r0, #54	; 0x36
 8008c3e:	f7f8 fee9 	bl	8001a14 <LCD_IO_WriteReg>
  LCD_IO_WriteData(RegValue);
 8008c42:	20c8      	movs	r0, #200	; 0xc8
 8008c44:	f7f8 febc 	bl	80019c0 <LCD_IO_WriteData>
  LCD_IO_WriteReg(LCD_Reg);
 8008c48:	20f2      	movs	r0, #242	; 0xf2
 8008c4a:	f7f8 fee3 	bl	8001a14 <LCD_IO_WriteReg>
  LCD_IO_WriteData(RegValue);
 8008c4e:	2000      	movs	r0, #0
 8008c50:	f7f8 feb6 	bl	80019c0 <LCD_IO_WriteData>
  LCD_IO_WriteReg(LCD_Reg);
 8008c54:	20b0      	movs	r0, #176	; 0xb0
 8008c56:	f7f8 fedd 	bl	8001a14 <LCD_IO_WriteReg>
  LCD_IO_WriteData(RegValue);
 8008c5a:	20c2      	movs	r0, #194	; 0xc2
 8008c5c:	f7f8 feb0 	bl	80019c0 <LCD_IO_WriteData>
  LCD_IO_WriteReg(LCD_Reg);
 8008c60:	20b6      	movs	r0, #182	; 0xb6
 8008c62:	f7f8 fed7 	bl	8001a14 <LCD_IO_WriteReg>
  LCD_IO_WriteData(RegValue);
 8008c66:	200a      	movs	r0, #10
 8008c68:	f7f8 feaa 	bl	80019c0 <LCD_IO_WriteData>
 8008c6c:	20a7      	movs	r0, #167	; 0xa7
 8008c6e:	f7f8 fea7 	bl	80019c0 <LCD_IO_WriteData>
 8008c72:	2027      	movs	r0, #39	; 0x27
 8008c74:	f7f8 fea4 	bl	80019c0 <LCD_IO_WriteData>
 8008c78:	2004      	movs	r0, #4
 8008c7a:	f7f8 fea1 	bl	80019c0 <LCD_IO_WriteData>
  LCD_IO_WriteReg(LCD_Reg);
 8008c7e:	202a      	movs	r0, #42	; 0x2a
 8008c80:	f7f8 fec8 	bl	8001a14 <LCD_IO_WriteReg>
  LCD_IO_WriteData(RegValue);
 8008c84:	2000      	movs	r0, #0
 8008c86:	f7f8 fe9b 	bl	80019c0 <LCD_IO_WriteData>
 8008c8a:	2000      	movs	r0, #0
 8008c8c:	f7f8 fe98 	bl	80019c0 <LCD_IO_WriteData>
 8008c90:	2000      	movs	r0, #0
 8008c92:	f7f8 fe95 	bl	80019c0 <LCD_IO_WriteData>
 8008c96:	20ef      	movs	r0, #239	; 0xef
 8008c98:	f7f8 fe92 	bl	80019c0 <LCD_IO_WriteData>
  LCD_IO_WriteReg(LCD_Reg);
 8008c9c:	202b      	movs	r0, #43	; 0x2b
 8008c9e:	f7f8 feb9 	bl	8001a14 <LCD_IO_WriteReg>
  LCD_IO_WriteData(RegValue);
 8008ca2:	2000      	movs	r0, #0
 8008ca4:	f7f8 fe8c 	bl	80019c0 <LCD_IO_WriteData>
 8008ca8:	2000      	movs	r0, #0
 8008caa:	f7f8 fe89 	bl	80019c0 <LCD_IO_WriteData>
 8008cae:	2001      	movs	r0, #1
 8008cb0:	f7f8 fe86 	bl	80019c0 <LCD_IO_WriteData>
 8008cb4:	203f      	movs	r0, #63	; 0x3f
 8008cb6:	f7f8 fe83 	bl	80019c0 <LCD_IO_WriteData>
  LCD_IO_WriteReg(LCD_Reg);
 8008cba:	20f6      	movs	r0, #246	; 0xf6
 8008cbc:	f7f8 feaa 	bl	8001a14 <LCD_IO_WriteReg>
  LCD_IO_WriteData(RegValue);
 8008cc0:	2001      	movs	r0, #1
 8008cc2:	f7f8 fe7d 	bl	80019c0 <LCD_IO_WriteData>
 8008cc6:	2000      	movs	r0, #0
 8008cc8:	f7f8 fe7a 	bl	80019c0 <LCD_IO_WriteData>
 8008ccc:	2006      	movs	r0, #6
 8008cce:	f7f8 fe77 	bl	80019c0 <LCD_IO_WriteData>
  LCD_IO_WriteReg(LCD_Reg);
 8008cd2:	202c      	movs	r0, #44	; 0x2c
 8008cd4:	f7f8 fe9e 	bl	8001a14 <LCD_IO_WriteReg>
  LCD_Delay(200);
 8008cd8:	20c8      	movs	r0, #200	; 0xc8
 8008cda:	f7f8 ff03 	bl	8001ae4 <LCD_Delay>
  LCD_IO_WriteReg(LCD_Reg);
 8008cde:	2026      	movs	r0, #38	; 0x26
 8008ce0:	f7f8 fe98 	bl	8001a14 <LCD_IO_WriteReg>
  LCD_IO_WriteData(RegValue);
 8008ce4:	2001      	movs	r0, #1
 8008ce6:	f7f8 fe6b 	bl	80019c0 <LCD_IO_WriteData>
  LCD_IO_WriteReg(LCD_Reg);
 8008cea:	20e0      	movs	r0, #224	; 0xe0
 8008cec:	f7f8 fe92 	bl	8001a14 <LCD_IO_WriteReg>
  LCD_IO_WriteData(RegValue);
 8008cf0:	200f      	movs	r0, #15
 8008cf2:	f7f8 fe65 	bl	80019c0 <LCD_IO_WriteData>
 8008cf6:	2029      	movs	r0, #41	; 0x29
 8008cf8:	f7f8 fe62 	bl	80019c0 <LCD_IO_WriteData>
 8008cfc:	2024      	movs	r0, #36	; 0x24
 8008cfe:	f7f8 fe5f 	bl	80019c0 <LCD_IO_WriteData>
 8008d02:	200c      	movs	r0, #12
 8008d04:	f7f8 fe5c 	bl	80019c0 <LCD_IO_WriteData>
 8008d08:	200e      	movs	r0, #14
 8008d0a:	f7f8 fe59 	bl	80019c0 <LCD_IO_WriteData>
 8008d0e:	2009      	movs	r0, #9
 8008d10:	f7f8 fe56 	bl	80019c0 <LCD_IO_WriteData>
 8008d14:	204e      	movs	r0, #78	; 0x4e
 8008d16:	f7f8 fe53 	bl	80019c0 <LCD_IO_WriteData>
 8008d1a:	2078      	movs	r0, #120	; 0x78
 8008d1c:	f7f8 fe50 	bl	80019c0 <LCD_IO_WriteData>
 8008d20:	203c      	movs	r0, #60	; 0x3c
 8008d22:	f7f8 fe4d 	bl	80019c0 <LCD_IO_WriteData>
 8008d26:	2009      	movs	r0, #9
 8008d28:	f7f8 fe4a 	bl	80019c0 <LCD_IO_WriteData>
 8008d2c:	2013      	movs	r0, #19
 8008d2e:	f7f8 fe47 	bl	80019c0 <LCD_IO_WriteData>
 8008d32:	2005      	movs	r0, #5
 8008d34:	f7f8 fe44 	bl	80019c0 <LCD_IO_WriteData>
 8008d38:	2017      	movs	r0, #23
 8008d3a:	f7f8 fe41 	bl	80019c0 <LCD_IO_WriteData>
 8008d3e:	2011      	movs	r0, #17
 8008d40:	f7f8 fe3e 	bl	80019c0 <LCD_IO_WriteData>
 8008d44:	2000      	movs	r0, #0
 8008d46:	f7f8 fe3b 	bl	80019c0 <LCD_IO_WriteData>
  LCD_IO_WriteReg(LCD_Reg);
 8008d4a:	20e1      	movs	r0, #225	; 0xe1
 8008d4c:	f7f8 fe62 	bl	8001a14 <LCD_IO_WriteReg>
  LCD_IO_WriteData(RegValue);
 8008d50:	2000      	movs	r0, #0
 8008d52:	f7f8 fe35 	bl	80019c0 <LCD_IO_WriteData>
 8008d56:	2016      	movs	r0, #22
 8008d58:	f7f8 fe32 	bl	80019c0 <LCD_IO_WriteData>
 8008d5c:	201b      	movs	r0, #27
 8008d5e:	f7f8 fe2f 	bl	80019c0 <LCD_IO_WriteData>
 8008d62:	2004      	movs	r0, #4
 8008d64:	f7f8 fe2c 	bl	80019c0 <LCD_IO_WriteData>
 8008d68:	2011      	movs	r0, #17
 8008d6a:	f7f8 fe29 	bl	80019c0 <LCD_IO_WriteData>
 8008d6e:	2007      	movs	r0, #7
 8008d70:	f7f8 fe26 	bl	80019c0 <LCD_IO_WriteData>
 8008d74:	2031      	movs	r0, #49	; 0x31
 8008d76:	f7f8 fe23 	bl	80019c0 <LCD_IO_WriteData>
 8008d7a:	2033      	movs	r0, #51	; 0x33
 8008d7c:	f7f8 fe20 	bl	80019c0 <LCD_IO_WriteData>
 8008d80:	2042      	movs	r0, #66	; 0x42
 8008d82:	f7f8 fe1d 	bl	80019c0 <LCD_IO_WriteData>
 8008d86:	2005      	movs	r0, #5
 8008d88:	f7f8 fe1a 	bl	80019c0 <LCD_IO_WriteData>
 8008d8c:	200c      	movs	r0, #12
 8008d8e:	f7f8 fe17 	bl	80019c0 <LCD_IO_WriteData>
 8008d92:	200a      	movs	r0, #10
 8008d94:	f7f8 fe14 	bl	80019c0 <LCD_IO_WriteData>
 8008d98:	2028      	movs	r0, #40	; 0x28
 8008d9a:	f7f8 fe11 	bl	80019c0 <LCD_IO_WriteData>
 8008d9e:	202f      	movs	r0, #47	; 0x2f
 8008da0:	f7f8 fe0e 	bl	80019c0 <LCD_IO_WriteData>
 8008da4:	200f      	movs	r0, #15
 8008da6:	f7f8 fe0b 	bl	80019c0 <LCD_IO_WriteData>
  LCD_IO_WriteReg(LCD_Reg);
 8008daa:	2011      	movs	r0, #17
 8008dac:	f7f8 fe32 	bl	8001a14 <LCD_IO_WriteReg>
  LCD_Delay(200);
 8008db0:	20c8      	movs	r0, #200	; 0xc8
 8008db2:	f7f8 fe97 	bl	8001ae4 <LCD_Delay>
  LCD_IO_WriteReg(LCD_Reg);
 8008db6:	2029      	movs	r0, #41	; 0x29
 8008db8:	f7f8 fe2c 	bl	8001a14 <LCD_IO_WriteReg>
}
 8008dbc:	e8bd 4008 	ldmia.w	sp!, {r3, lr}
  LCD_IO_WriteReg(LCD_Reg);
 8008dc0:	202c      	movs	r0, #44	; 0x2c
 8008dc2:	f7f8 be27 	b.w	8001a14 <LCD_IO_WriteReg>
 8008dc6:	bf00      	nop

08008dc8 <ili9341_ReadID>:
{
 8008dc8:	b508      	push	{r3, lr}
  LCD_IO_Init();
 8008dca:	f7f8 fde9 	bl	80019a0 <LCD_IO_Init>
  return (LCD_IO_ReadData(RegValue, ReadSize));
 8008dce:	2103      	movs	r1, #3
 8008dd0:	20d3      	movs	r0, #211	; 0xd3
 8008dd2:	f7f8 fe49 	bl	8001a68 <LCD_IO_ReadData>
}
 8008dd6:	b280      	uxth	r0, r0
 8008dd8:	bd08      	pop	{r3, pc}
 8008dda:	bf00      	nop

08008ddc <stmpe811_TS_ClearIT>:
  * @retval None
  */
void stmpe811_ClearGlobalIT(uint16_t DeviceAddr, uint8_t Source)
{
  /* Write 1 to the bits that have to be cleared */
  IOE_Write(DeviceAddr, STMPE811_REG_INT_STA, Source);
 8008ddc:	221f      	movs	r2, #31
 8008dde:	210b      	movs	r1, #11
 8008de0:	b2c0      	uxtb	r0, r0
 8008de2:	f7f8 bd8f 	b.w	8001904 <IOE_Write>
 8008de6:	bf00      	nop

08008de8 <stmpe811_Reset>:
{
 8008de8:	b510      	push	{r4, lr}
  IOE_Write(DeviceAddr, STMPE811_REG_SYS_CTRL1, 2);
 8008dea:	b2c4      	uxtb	r4, r0
 8008dec:	2202      	movs	r2, #2
 8008dee:	2103      	movs	r1, #3
 8008df0:	4620      	mov	r0, r4
 8008df2:	f7f8 fd87 	bl	8001904 <IOE_Write>
  IOE_Delay(10); 
 8008df6:	200a      	movs	r0, #10
 8008df8:	f7f8 fdd0 	bl	800199c <IOE_Delay>
  IOE_Write(DeviceAddr, STMPE811_REG_SYS_CTRL1, 0);
 8008dfc:	4620      	mov	r0, r4
 8008dfe:	2200      	movs	r2, #0
 8008e00:	2103      	movs	r1, #3
 8008e02:	f7f8 fd7f 	bl	8001904 <IOE_Write>
}
 8008e06:	e8bd 4010 	ldmia.w	sp!, {r4, lr}
  IOE_Delay(2); 
 8008e0a:	2002      	movs	r0, #2
 8008e0c:	f7f8 bdc6 	b.w	800199c <IOE_Delay>

08008e10 <stmpe811_ReadID>:
{
 8008e10:	b510      	push	{r4, lr}
  return ((IOE_Read(DeviceAddr, STMPE811_REG_CHP_ID_LSB) << 8) |\
 8008e12:	b2c4      	uxtb	r4, r0
  IOE_Init(); 
 8008e14:	f7f8 fd72 	bl	80018fc <IOE_Init>
  return ((IOE_Read(DeviceAddr, STMPE811_REG_CHP_ID_LSB) << 8) |\
 8008e18:	2100      	movs	r1, #0
 8008e1a:	4620      	mov	r0, r4
 8008e1c:	f7f8 fd8a 	bl	8001934 <IOE_Read>
          (IOE_Read(DeviceAddr, STMPE811_REG_CHP_ID_MSB)));
 8008e20:	2101      	movs	r1, #1
  return ((IOE_Read(DeviceAddr, STMPE811_REG_CHP_ID_LSB) << 8) |\
 8008e22:	4603      	mov	r3, r0
          (IOE_Read(DeviceAddr, STMPE811_REG_CHP_ID_MSB)));
 8008e24:	4620      	mov	r0, r4
  return ((IOE_Read(DeviceAddr, STMPE811_REG_CHP_ID_LSB) << 8) |\
 8008e26:	461c      	mov	r4, r3
          (IOE_Read(DeviceAddr, STMPE811_REG_CHP_ID_MSB)));
 8008e28:	f7f8 fd84 	bl	8001934 <IOE_Read>
  return ((IOE_Read(DeviceAddr, STMPE811_REG_CHP_ID_LSB) << 8) |\
 8008e2c:	ea40 2004 	orr.w	r0, r0, r4, lsl #8
}
 8008e30:	b280      	uxth	r0, r0
 8008e32:	bd10      	pop	{r4, pc}

08008e34 <stmpe811_TS_DetectTouch>:
  * @brief  Return if there is touch detected or not.
  * @param  DeviceAddr: Device address on communication Bus.
  * @retval Touch detected state.
  */
uint8_t stmpe811_TS_DetectTouch(uint16_t DeviceAddr)
{
 8008e34:	b510      	push	{r4, lr}
  uint8_t state;
  uint8_t ret = 0;
  
  state = ((IOE_Read(DeviceAddr, STMPE811_REG_TSC_CTRL) & (uint8_t)STMPE811_TS_CTRL_STATUS) == (uint8_t)0x80);
 8008e36:	b2c4      	uxtb	r4, r0
 8008e38:	2140      	movs	r1, #64	; 0x40
 8008e3a:	4620      	mov	r0, r4
 8008e3c:	f7f8 fd7a 	bl	8001934 <IOE_Read>
  
  if(state > 0)
 8008e40:	0603      	lsls	r3, r0, #24
 8008e42:	d40b      	bmi.n	8008e5c <stmpe811_TS_DetectTouch+0x28>
    }
  }
  else
  {
    /* Reset FIFO */
    IOE_Write(DeviceAddr, STMPE811_REG_FIFO_STA, 0x01);
 8008e44:	4620      	mov	r0, r4
 8008e46:	2201      	movs	r2, #1
 8008e48:	214b      	movs	r1, #75	; 0x4b
 8008e4a:	f7f8 fd5b 	bl	8001904 <IOE_Write>
    /* Enable the FIFO again */
    IOE_Write(DeviceAddr, STMPE811_REG_FIFO_STA, 0x00);
 8008e4e:	4620      	mov	r0, r4
 8008e50:	2200      	movs	r2, #0
 8008e52:	214b      	movs	r1, #75	; 0x4b
 8008e54:	f7f8 fd56 	bl	8001904 <IOE_Write>
  uint8_t ret = 0;
 8008e58:	2000      	movs	r0, #0
  }
  
  return ret;
}
 8008e5a:	bd10      	pop	{r4, pc}
    if(IOE_Read(DeviceAddr, STMPE811_REG_FIFO_SIZE) > 0)
 8008e5c:	214c      	movs	r1, #76	; 0x4c
 8008e5e:	4620      	mov	r0, r4
 8008e60:	f7f8 fd68 	bl	8001934 <IOE_Read>
      ret = 1;
 8008e64:	3800      	subs	r0, #0
 8008e66:	bf18      	it	ne
 8008e68:	2001      	movne	r0, #1
}
 8008e6a:	bd10      	pop	{r4, pc}

08008e6c <stmpe811_TS_ITStatus>:
  * @brief  Configure the selected source to generate a global interrupt or not
  * @param  DeviceAddr: Device address on communication Bus.    
  * @retval TS interrupts status
  */
uint8_t stmpe811_TS_ITStatus(uint16_t DeviceAddr)
{
 8008e6c:	b508      	push	{r3, lr}
  return((IOE_Read(DeviceAddr, STMPE811_REG_INT_STA) & Source));
 8008e6e:	210b      	movs	r1, #11
 8008e70:	b2c0      	uxtb	r0, r0
 8008e72:	f7f8 fd5f 	bl	8001934 <IOE_Read>
  /* Return TS interrupts status */
  return(stmpe811_ReadGITStatus(DeviceAddr, STMPE811_TS_IT));
}
 8008e76:	f000 001f 	and.w	r0, r0, #31
 8008e7a:	bd08      	pop	{r3, pc}

08008e7c <stmpe811_TS_GetXY>:
{
 8008e7c:	b570      	push	{r4, r5, r6, lr}
  IOE_ReadMultiple(DeviceAddr, STMPE811_REG_TSC_DATA_NON_INC, dataXYZ, sizeof(dataXYZ)) ;
 8008e7e:	2304      	movs	r3, #4
{
 8008e80:	b082      	sub	sp, #8
  IOE_ReadMultiple(DeviceAddr, STMPE811_REG_TSC_DATA_NON_INC, dataXYZ, sizeof(dataXYZ)) ;
 8008e82:	b2c4      	uxtb	r4, r0
{
 8008e84:	4615      	mov	r5, r2
 8008e86:	460e      	mov	r6, r1
  IOE_ReadMultiple(DeviceAddr, STMPE811_REG_TSC_DATA_NON_INC, dataXYZ, sizeof(dataXYZ)) ;
 8008e88:	eb0d 0203 	add.w	r2, sp, r3
 8008e8c:	21d7      	movs	r1, #215	; 0xd7
 8008e8e:	4620      	mov	r0, r4
 8008e90:	f7f8 fd6c 	bl	800196c <IOE_ReadMultiple>
  uldataXYZ = (dataXYZ[0] << 24)|(dataXYZ[1] << 16)|(dataXYZ[2] << 8)|(dataXYZ[3] << 0);     
 8008e94:	9b01      	ldr	r3, [sp, #4]
 8008e96:	ba1b      	rev	r3, r3
  *X = (uldataXYZ >> 20) & 0x00000FFF;     
 8008e98:	0d1a      	lsrs	r2, r3, #20
  *Y = (uldataXYZ >>  8) & 0x00000FFF;     
 8008e9a:	f3c3 230b 	ubfx	r3, r3, #8, #12
  *X = (uldataXYZ >> 20) & 0x00000FFF;     
 8008e9e:	8032      	strh	r2, [r6, #0]
  IOE_Write(DeviceAddr, STMPE811_REG_FIFO_STA, 0x01);
 8008ea0:	4620      	mov	r0, r4
  *Y = (uldataXYZ >>  8) & 0x00000FFF;     
 8008ea2:	802b      	strh	r3, [r5, #0]
  IOE_Write(DeviceAddr, STMPE811_REG_FIFO_STA, 0x01);
 8008ea4:	2201      	movs	r2, #1
 8008ea6:	214b      	movs	r1, #75	; 0x4b
 8008ea8:	f7f8 fd2c 	bl	8001904 <IOE_Write>
  IOE_Write(DeviceAddr, STMPE811_REG_FIFO_STA, 0x00);
 8008eac:	2200      	movs	r2, #0
 8008eae:	214b      	movs	r1, #75	; 0x4b
 8008eb0:	4620      	mov	r0, r4
 8008eb2:	f7f8 fd27 	bl	8001904 <IOE_Write>
}
 8008eb6:	b002      	add	sp, #8
 8008eb8:	bd70      	pop	{r4, r5, r6, pc}
 8008eba:	bf00      	nop

08008ebc <stmpe811_TS_Start>:
{
 8008ebc:	b538      	push	{r3, r4, r5, lr}
  mode = IOE_Read(DeviceAddr, STMPE811_REG_SYS_CTRL2);
 8008ebe:	b2c4      	uxtb	r4, r0
 8008ec0:	2104      	movs	r1, #4
 8008ec2:	4620      	mov	r0, r4
 8008ec4:	f7f8 fd36 	bl	8001934 <IOE_Read>
  IOE_Write(DeviceAddr, STMPE811_REG_SYS_CTRL2, mode); 
 8008ec8:	2104      	movs	r1, #4
 8008eca:	f000 02fb 	and.w	r2, r0, #251	; 0xfb
  mode = IOE_Read(DeviceAddr, STMPE811_REG_SYS_CTRL2);
 8008ece:	4605      	mov	r5, r0
  IOE_Write(DeviceAddr, STMPE811_REG_SYS_CTRL2, mode); 
 8008ed0:	4620      	mov	r0, r4
 8008ed2:	f7f8 fd17 	bl	8001904 <IOE_Write>
  tmp = IOE_Read(DeviceAddr, STMPE811_REG_IO_AF);
 8008ed6:	2117      	movs	r1, #23
 8008ed8:	4620      	mov	r0, r4
 8008eda:	f7f8 fd2b 	bl	8001934 <IOE_Read>
  IOE_Write(DeviceAddr, STMPE811_REG_IO_AF, tmp); 
 8008ede:	2117      	movs	r1, #23
 8008ee0:	f000 020f 	and.w	r2, r0, #15
 8008ee4:	4620      	mov	r0, r4
 8008ee6:	f7f8 fd0d 	bl	8001904 <IOE_Write>
  IOE_Write(DeviceAddr, STMPE811_REG_SYS_CTRL2, mode); 
 8008eea:	f005 02f8 	and.w	r2, r5, #248	; 0xf8
 8008eee:	4620      	mov	r0, r4
 8008ef0:	2104      	movs	r1, #4
 8008ef2:	f7f8 fd07 	bl	8001904 <IOE_Write>
  IOE_Write(DeviceAddr, STMPE811_REG_ADC_CTRL1, 0x49);
 8008ef6:	2249      	movs	r2, #73	; 0x49
 8008ef8:	2120      	movs	r1, #32
 8008efa:	4620      	mov	r0, r4
 8008efc:	f7f8 fd02 	bl	8001904 <IOE_Write>
  IOE_Delay(2); 
 8008f00:	2002      	movs	r0, #2
 8008f02:	f7f8 fd4b 	bl	800199c <IOE_Delay>
  IOE_Write(DeviceAddr, STMPE811_REG_ADC_CTRL2, 0x01);
 8008f06:	4620      	mov	r0, r4
 8008f08:	2201      	movs	r2, #1
 8008f0a:	2121      	movs	r1, #33	; 0x21
 8008f0c:	f7f8 fcfa 	bl	8001904 <IOE_Write>
  IOE_Write(DeviceAddr, STMPE811_REG_TSC_CFG, 0x9A); 
 8008f10:	4620      	mov	r0, r4
 8008f12:	229a      	movs	r2, #154	; 0x9a
 8008f14:	2141      	movs	r1, #65	; 0x41
 8008f16:	f7f8 fcf5 	bl	8001904 <IOE_Write>
  IOE_Write(DeviceAddr, STMPE811_REG_FIFO_TH, 0x01);
 8008f1a:	4620      	mov	r0, r4
 8008f1c:	2201      	movs	r2, #1
 8008f1e:	214a      	movs	r1, #74	; 0x4a
 8008f20:	f7f8 fcf0 	bl	8001904 <IOE_Write>
  IOE_Write(DeviceAddr, STMPE811_REG_FIFO_STA, 0x01);
 8008f24:	4620      	mov	r0, r4
 8008f26:	2201      	movs	r2, #1
 8008f28:	214b      	movs	r1, #75	; 0x4b
 8008f2a:	f7f8 fceb 	bl	8001904 <IOE_Write>
  IOE_Write(DeviceAddr, STMPE811_REG_FIFO_STA, 0x00);
 8008f2e:	4620      	mov	r0, r4
 8008f30:	2200      	movs	r2, #0
 8008f32:	214b      	movs	r1, #75	; 0x4b
 8008f34:	f7f8 fce6 	bl	8001904 <IOE_Write>
  IOE_Write(DeviceAddr, STMPE811_REG_TSC_FRACT_XYZ, 0x01);
 8008f38:	4620      	mov	r0, r4
 8008f3a:	2201      	movs	r2, #1
 8008f3c:	2156      	movs	r1, #86	; 0x56
 8008f3e:	f7f8 fce1 	bl	8001904 <IOE_Write>
  IOE_Write(DeviceAddr, STMPE811_REG_TSC_I_DRIVE, 0x01);
 8008f42:	4620      	mov	r0, r4
 8008f44:	2201      	movs	r2, #1
 8008f46:	2158      	movs	r1, #88	; 0x58
 8008f48:	f7f8 fcdc 	bl	8001904 <IOE_Write>
  IOE_Write(DeviceAddr, STMPE811_REG_TSC_CTRL, 0x01);
 8008f4c:	4620      	mov	r0, r4
 8008f4e:	2201      	movs	r2, #1
 8008f50:	2140      	movs	r1, #64	; 0x40
 8008f52:	f7f8 fcd7 	bl	8001904 <IOE_Write>
  IOE_Write(DeviceAddr, STMPE811_REG_INT_STA, 0xFF);
 8008f56:	4620      	mov	r0, r4
 8008f58:	22ff      	movs	r2, #255	; 0xff
 8008f5a:	210b      	movs	r1, #11
 8008f5c:	f7f8 fcd2 	bl	8001904 <IOE_Write>
}
 8008f60:	e8bd 4038 	ldmia.w	sp!, {r3, r4, r5, lr}
  IOE_Delay(2); 
 8008f64:	2002      	movs	r0, #2
 8008f66:	f7f8 bd19 	b.w	800199c <IOE_Delay>
 8008f6a:	bf00      	nop

08008f6c <stmpe811_TS_DisableIT>:
{
 8008f6c:	b510      	push	{r4, lr}
  tmp = IOE_Read(DeviceAddr, STMPE811_REG_INT_CTRL);
 8008f6e:	b2c4      	uxtb	r4, r0
 8008f70:	2109      	movs	r1, #9
 8008f72:	4620      	mov	r0, r4
 8008f74:	f7f8 fcde 	bl	8001934 <IOE_Read>
  IOE_Write(DeviceAddr, STMPE811_REG_INT_CTRL, tmp);
 8008f78:	2109      	movs	r1, #9
 8008f7a:	f000 02fe 	and.w	r2, r0, #254	; 0xfe
 8008f7e:	4620      	mov	r0, r4
 8008f80:	f7f8 fcc0 	bl	8001904 <IOE_Write>
  tmp = IOE_Read(DeviceAddr, STMPE811_REG_INT_EN);
 8008f84:	210a      	movs	r1, #10
 8008f86:	4620      	mov	r0, r4
 8008f88:	f7f8 fcd4 	bl	8001934 <IOE_Read>
  IOE_Write(DeviceAddr, STMPE811_REG_INT_EN, tmp);   
 8008f8c:	210a      	movs	r1, #10
 8008f8e:	f000 02e0 	and.w	r2, r0, #224	; 0xe0
 8008f92:	4620      	mov	r0, r4
}
 8008f94:	e8bd 4010 	ldmia.w	sp!, {r4, lr}
  IOE_Write(DeviceAddr, STMPE811_REG_INT_EN, tmp);   
 8008f98:	f7f8 bcb4 	b.w	8001904 <IOE_Write>

08008f9c <stmpe811_TS_EnableIT>:
{
 8008f9c:	b510      	push	{r4, lr}
  tmp = IOE_Read(DeviceAddr, STMPE811_REG_INT_EN);
 8008f9e:	b2c4      	uxtb	r4, r0
  IOE_ITConfig();
 8008fa0:	f7f8 fcae 	bl	8001900 <IOE_ITConfig>
  tmp = IOE_Read(DeviceAddr, STMPE811_REG_INT_EN);
 8008fa4:	210a      	movs	r1, #10
 8008fa6:	4620      	mov	r0, r4
 8008fa8:	f7f8 fcc4 	bl	8001934 <IOE_Read>
  tmp |= Source; 
 8008fac:	f040 001f 	orr.w	r0, r0, #31
  IOE_Write(DeviceAddr, STMPE811_REG_INT_EN, tmp);   
 8008fb0:	b2c2      	uxtb	r2, r0
 8008fb2:	210a      	movs	r1, #10
 8008fb4:	4620      	mov	r0, r4
 8008fb6:	f7f8 fca5 	bl	8001904 <IOE_Write>
  tmp = IOE_Read(DeviceAddr, STMPE811_REG_INT_CTRL);
 8008fba:	2109      	movs	r1, #9
 8008fbc:	4620      	mov	r0, r4
 8008fbe:	f7f8 fcb9 	bl	8001934 <IOE_Read>
  tmp |= (uint8_t)STMPE811_GIT_EN;
 8008fc2:	f040 0001 	orr.w	r0, r0, #1
  IOE_Write(DeviceAddr, STMPE811_REG_INT_CTRL, tmp); 
 8008fc6:	b2c2      	uxtb	r2, r0
 8008fc8:	2109      	movs	r1, #9
 8008fca:	4620      	mov	r0, r4
}
 8008fcc:	e8bd 4010 	ldmia.w	sp!, {r4, lr}
  IOE_Write(DeviceAddr, STMPE811_REG_INT_CTRL, tmp); 
 8008fd0:	f7f8 bc98 	b.w	8001904 <IOE_Write>

08008fd4 <stmpe811_Init>:
  uint8_t idx = 0;
  
  /* Check all the registered instances */
  for(idx = 0; idx < STMPE811_MAX_INSTANCE ; idx ++)
  {
    if(stmpe811[idx] == DeviceAddr)
 8008fd4:	4a10      	ldr	r2, [pc, #64]	; (8009018 <stmpe811_Init+0x44>)
 8008fd6:	7813      	ldrb	r3, [r2, #0]
 8008fd8:	4298      	cmp	r0, r3
 8008fda:	d004      	beq.n	8008fe6 <stmpe811_Init+0x12>
 8008fdc:	7851      	ldrb	r1, [r2, #1]
 8008fde:	4288      	cmp	r0, r1
 8008fe0:	d001      	beq.n	8008fe6 <stmpe811_Init+0x12>
 8008fe2:	b113      	cbz	r3, 8008fea <stmpe811_Init+0x16>
 8008fe4:	b101      	cbz	r1, 8008fe8 <stmpe811_Init+0x14>
 8008fe6:	4770      	bx	lr
 8008fe8:	2301      	movs	r3, #1
{
 8008fea:	b510      	push	{r4, lr}
      stmpe811[empty] = DeviceAddr;
 8008fec:	b2c4      	uxtb	r4, r0
 8008fee:	54d4      	strb	r4, [r2, r3]
      IOE_Init(); 
 8008ff0:	f7f8 fc84 	bl	80018fc <IOE_Init>
  IOE_Write(DeviceAddr, STMPE811_REG_SYS_CTRL1, 2);
 8008ff4:	2202      	movs	r2, #2
 8008ff6:	2103      	movs	r1, #3
 8008ff8:	4620      	mov	r0, r4
 8008ffa:	f7f8 fc83 	bl	8001904 <IOE_Write>
  IOE_Delay(10); 
 8008ffe:	200a      	movs	r0, #10
 8009000:	f7f8 fccc 	bl	800199c <IOE_Delay>
  IOE_Write(DeviceAddr, STMPE811_REG_SYS_CTRL1, 0);
 8009004:	4620      	mov	r0, r4
 8009006:	2200      	movs	r2, #0
 8009008:	2103      	movs	r1, #3
 800900a:	f7f8 fc7b 	bl	8001904 <IOE_Write>
}
 800900e:	e8bd 4010 	ldmia.w	sp!, {r4, lr}
  IOE_Delay(2); 
 8009012:	2002      	movs	r0, #2
 8009014:	f7f8 bcc2 	b.w	800199c <IOE_Delay>
 8009018:	20002124 	.word	0x20002124

0800901c <SystemInit>:
  */
void SystemInit(void)
{
  /* FPU settings ------------------------------------------------------------*/
  #if (__FPU_PRESENT == 1) && (__FPU_USED == 1)
    SCB->CPACR |= ((3UL << 10*2)|(3UL << 11*2));  /* set CP10 and CP11 Full Access */
 800901c:	4b05      	ldr	r3, [pc, #20]	; (8009034 <SystemInit+0x18>)
 800901e:	f8d3 2088 	ldr.w	r2, [r3, #136]	; 0x88

  /* Configure the Vector Table location add offset address ------------------*/
#ifdef VECT_TAB_SRAM
  SCB->VTOR = SRAM_BASE | VECT_TAB_OFFSET; /* Vector Table Relocation in Internal SRAM */
#else
  SCB->VTOR = FLASH_BASE | VECT_TAB_OFFSET; /* Vector Table Relocation in Internal FLASH */
 8009022:	f04f 6100 	mov.w	r1, #134217728	; 0x8000000
    SCB->CPACR |= ((3UL << 10*2)|(3UL << 11*2));  /* set CP10 and CP11 Full Access */
 8009026:	f442 0270 	orr.w	r2, r2, #15728640	; 0xf00000
 800902a:	f8c3 2088 	str.w	r2, [r3, #136]	; 0x88
  SCB->VTOR = FLASH_BASE | VECT_TAB_OFFSET; /* Vector Table Relocation in Internal FLASH */
 800902e:	6099      	str	r1, [r3, #8]
#endif
}
 8009030:	4770      	bx	lr
 8009032:	bf00      	nop
 8009034:	e000ed00 	.word	0xe000ed00

08009038 <HAL_Init>:
  *         need to ensure that the SysTick time base is always set to 1 millisecond
  *         to have correct HAL operation.
  * @retval HAL status
  */
HAL_StatusTypeDef HAL_Init(void)
{
 8009038:	b508      	push	{r3, lr}
  /* Configure Flash prefetch, Instruction cache, Data cache */ 
#if (INSTRUCTION_CACHE_ENABLE != 0U)
  __HAL_FLASH_INSTRUCTION_CACHE_ENABLE();
 800903a:	4b0b      	ldr	r3, [pc, #44]	; (8009068 <HAL_Init+0x30>)
 800903c:	681a      	ldr	r2, [r3, #0]
 800903e:	f442 7200 	orr.w	r2, r2, #512	; 0x200
 8009042:	601a      	str	r2, [r3, #0]
#endif /* INSTRUCTION_CACHE_ENABLE */

#if (DATA_CACHE_ENABLE != 0U)
  __HAL_FLASH_DATA_CACHE_ENABLE();
 8009044:	681a      	ldr	r2, [r3, #0]
 8009046:	f442 6280 	orr.w	r2, r2, #1024	; 0x400
 800904a:	601a      	str	r2, [r3, #0]
#endif /* DATA_CACHE_ENABLE */

#if (PREFETCH_ENABLE != 0U)
  __HAL_FLASH_PREFETCH_BUFFER_ENABLE();
 800904c:	681a      	ldr	r2, [r3, #0]
 800904e:	f442 7280 	orr.w	r2, r2, #256	; 0x100
 8009052:	601a      	str	r2, [r3, #0]
#endif /* PREFETCH_ENABLE */

  /* Set Interrupt Group Priority */
  HAL_NVIC_SetPriorityGrouping(NVIC_PRIORITYGROUP_4);
 8009054:	2003      	movs	r0, #3
 8009056:	f000 f82d 	bl	80090b4 <HAL_NVIC_SetPriorityGrouping>

  /* Use systick as time base source and configure 1ms tick (default clock after Reset is HSI) */
  HAL_InitTick(TICK_INT_PRIORITY);
 800905a:	2000      	movs	r0, #0
 800905c:	f7f9 f966 	bl	800232c <HAL_InitTick>

  /* Init the low level hardware */
  HAL_MspInit();
 8009060:	f7f8 feaa 	bl	8001db8 <HAL_MspInit>

  /* Return function status */
  return HAL_OK;
}
 8009064:	2000      	movs	r0, #0
 8009066:	bd08      	pop	{r3, pc}
 8009068:	40023c00 	.word	0x40023c00

0800906c <HAL_IncTick>:
  *      implementations in user file.
  * @retval None
  */
__weak void HAL_IncTick(void)
{
  uwTick += uwTickFreq;
 800906c:	4a03      	ldr	r2, [pc, #12]	; (800907c <HAL_IncTick+0x10>)
 800906e:	4b04      	ldr	r3, [pc, #16]	; (8009080 <HAL_IncTick+0x14>)
 8009070:	6811      	ldr	r1, [r2, #0]
 8009072:	781b      	ldrb	r3, [r3, #0]
 8009074:	440b      	add	r3, r1
 8009076:	6013      	str	r3, [r2, #0]
}
 8009078:	4770      	bx	lr
 800907a:	bf00      	nop
 800907c:	20002128 	.word	0x20002128
 8009080:	2000007c 	.word	0x2000007c

08009084 <HAL_GetTick>:
  *       implementations in user file.
  * @retval tick value
  */
__weak uint32_t HAL_GetTick(void)
{
  return uwTick;
 8009084:	4b01      	ldr	r3, [pc, #4]	; (800908c <HAL_GetTick+0x8>)
 8009086:	6818      	ldr	r0, [r3, #0]
}
 8009088:	4770      	bx	lr
 800908a:	bf00      	nop
 800908c:	20002128 	.word	0x20002128

08009090 <HAL_Delay>:
  *       implementations in user file.
  * @param Delay specifies the delay time length, in milliseconds.
  * @retval None
  */
__weak void HAL_Delay(uint32_t Delay)
{
 8009090:	b538      	push	{r3, r4, r5, lr}
 8009092:	4604      	mov	r4, r0
  uint32_t tickstart = HAL_GetTick();
 8009094:	f7ff fff6 	bl	8009084 <HAL_GetTick>
  uint32_t wait = Delay;

  /* Add a freq to guarantee minimum wait */
  if (wait < HAL_MAX_DELAY)
 8009098:	1c63      	adds	r3, r4, #1
  uint32_t tickstart = HAL_GetTick();
 800909a:	4605      	mov	r5, r0
  if (wait < HAL_MAX_DELAY)
 800909c:	d002      	beq.n	80090a4 <HAL_Delay+0x14>
  {
    wait += (uint32_t)(uwTickFreq);
 800909e:	4b04      	ldr	r3, [pc, #16]	; (80090b0 <HAL_Delay+0x20>)
 80090a0:	781b      	ldrb	r3, [r3, #0]
 80090a2:	441c      	add	r4, r3
  }

  while((HAL_GetTick() - tickstart) < wait)
 80090a4:	f7ff ffee 	bl	8009084 <HAL_GetTick>
 80090a8:	1b43      	subs	r3, r0, r5
 80090aa:	42a3      	cmp	r3, r4
 80090ac:	d3fa      	bcc.n	80090a4 <HAL_Delay+0x14>
  {
  }
}
 80090ae:	bd38      	pop	{r3, r4, r5, pc}
 80090b0:	2000007c 	.word	0x2000007c

080090b4 <HAL_NVIC_SetPriorityGrouping>:
  reg_value  =  SCB->AIRCR;                                                   /* read old register configuration    */
 80090b4:	4907      	ldr	r1, [pc, #28]	; (80090d4 <HAL_NVIC_SetPriorityGrouping+0x20>)
 80090b6:	68ca      	ldr	r2, [r1, #12]
                (PriorityGroupTmp << SCB_AIRCR_PRIGROUP_Pos)  );              /* Insert write key and priority group */
 80090b8:	0203      	lsls	r3, r0, #8
  reg_value &= ~((uint32_t)(SCB_AIRCR_VECTKEY_Msk | SCB_AIRCR_PRIGROUP_Msk)); /* clear bits to change               */
 80090ba:	f64f 00ff 	movw	r0, #63743	; 0xf8ff
                (PriorityGroupTmp << SCB_AIRCR_PRIGROUP_Pos)  );              /* Insert write key and priority group */
 80090be:	f403 63e0 	and.w	r3, r3, #1792	; 0x700
  reg_value &= ~((uint32_t)(SCB_AIRCR_VECTKEY_Msk | SCB_AIRCR_PRIGROUP_Msk)); /* clear bits to change               */
 80090c2:	4002      	ands	r2, r0
                ((uint32_t)0x5FAUL << SCB_AIRCR_VECTKEY_Pos) |
 80090c4:	4313      	orrs	r3, r2
  reg_value  =  (reg_value                                   |
 80090c6:	f043 63bf 	orr.w	r3, r3, #100139008	; 0x5f80000
 80090ca:	f443 3300 	orr.w	r3, r3, #131072	; 0x20000
  SCB->AIRCR =  reg_value;
 80090ce:	60cb      	str	r3, [r1, #12]
  /* Check the parameters */
  assert_param(IS_NVIC_PRIORITY_GROUP(PriorityGroup));
  
  /* Set the PRIGROUP[10:8] bits according to the PriorityGroup parameter value */
  NVIC_SetPriorityGrouping(PriorityGroup);
}
 80090d0:	4770      	bx	lr
 80090d2:	bf00      	nop
 80090d4:	e000ed00 	.word	0xe000ed00

080090d8 <HAL_NVIC_SetPriority>:
  return ((uint32_t)((SCB->AIRCR & SCB_AIRCR_PRIGROUP_Msk) >> SCB_AIRCR_PRIGROUP_Pos));
 80090d8:	4b1c      	ldr	r3, [pc, #112]	; (800914c <HAL_NVIC_SetPriority+0x74>)
 80090da:	68db      	ldr	r3, [r3, #12]
 80090dc:	f3c3 2302 	ubfx	r3, r3, #8, #3
  *         This parameter can be a value between 0 and 15
  *         A lower priority value indicates a higher priority.          
  * @retval None
  */
void HAL_NVIC_SetPriority(IRQn_Type IRQn, uint32_t PreemptPriority, uint32_t SubPriority)
{ 
 80090e0:	b500      	push	{lr}
{
  uint32_t PriorityGroupTmp = (PriorityGroup & (uint32_t)0x07UL);   /* only values 0..7 are used          */
  uint32_t PreemptPriorityBits;
  uint32_t SubPriorityBits;

  PreemptPriorityBits = ((7UL - PriorityGroupTmp) > (uint32_t)(__NVIC_PRIO_BITS)) ? (uint32_t)(__NVIC_PRIO_BITS) : (uint32_t)(7UL - PriorityGroupTmp);
 80090e2:	f1c3 0e07 	rsb	lr, r3, #7
 80090e6:	f1be 0f04 	cmp.w	lr, #4
  SubPriorityBits     = ((PriorityGroupTmp + (uint32_t)(__NVIC_PRIO_BITS)) < (uint32_t)7UL) ? (uint32_t)0UL : (uint32_t)((PriorityGroupTmp - 7UL) + (uint32_t)(__NVIC_PRIO_BITS));
 80090ea:	f103 0c04 	add.w	ip, r3, #4
  PreemptPriorityBits = ((7UL - PriorityGroupTmp) > (uint32_t)(__NVIC_PRIO_BITS)) ? (uint32_t)(__NVIC_PRIO_BITS) : (uint32_t)(7UL - PriorityGroupTmp);
 80090ee:	bf28      	it	cs
 80090f0:	f04f 0e04 	movcs.w	lr, #4
  SubPriorityBits     = ((PriorityGroupTmp + (uint32_t)(__NVIC_PRIO_BITS)) < (uint32_t)7UL) ? (uint32_t)0UL : (uint32_t)((PriorityGroupTmp - 7UL) + (uint32_t)(__NVIC_PRIO_BITS));
 80090f4:	f1bc 0f06 	cmp.w	ip, #6
 80090f8:	d91b      	bls.n	8009132 <HAL_NVIC_SetPriority+0x5a>
 80090fa:	3b03      	subs	r3, #3

  return (
           ((PreemptPriority & (uint32_t)((1UL << (PreemptPriorityBits)) - 1UL)) << SubPriorityBits) |
           ((SubPriority     & (uint32_t)((1UL << (SubPriorityBits    )) - 1UL)))
 80090fc:	f04f 3cff 	mov.w	ip, #4294967295
 8009100:	fa0c fc03 	lsl.w	ip, ip, r3
 8009104:	ea22 020c 	bic.w	r2, r2, ip
           ((PreemptPriority & (uint32_t)((1UL << (PreemptPriorityBits)) - 1UL)) << SubPriorityBits) |
 8009108:	f04f 3cff 	mov.w	ip, #4294967295
 800910c:	fa0c fc0e 	lsl.w	ip, ip, lr
 8009110:	ea21 010c 	bic.w	r1, r1, ip
 8009114:	4099      	lsls	r1, r3
  if ((int32_t)(IRQn) >= 0)
 8009116:	2800      	cmp	r0, #0
           ((PreemptPriority & (uint32_t)((1UL << (PreemptPriorityBits)) - 1UL)) << SubPriorityBits) |
 8009118:	ea41 0102 	orr.w	r1, r1, r2
  if ((int32_t)(IRQn) >= 0)
 800911c:	db0c      	blt.n	8009138 <HAL_NVIC_SetPriority+0x60>
    NVIC->IP[((uint32_t)IRQn)]               = (uint8_t)((priority << (8U - __NVIC_PRIO_BITS)) & (uint32_t)0xFFUL);
 800911e:	f100 4060 	add.w	r0, r0, #3758096384	; 0xe0000000
 8009122:	0109      	lsls	r1, r1, #4
 8009124:	f500 4061 	add.w	r0, r0, #57600	; 0xe100
 8009128:	b2c9      	uxtb	r1, r1
 800912a:	f880 1300 	strb.w	r1, [r0, #768]	; 0x300
  assert_param(IS_NVIC_PREEMPTION_PRIORITY(PreemptPriority));
  
  prioritygroup = NVIC_GetPriorityGrouping();
  
  NVIC_SetPriority(IRQn, NVIC_EncodePriority(prioritygroup, PreemptPriority, SubPriority));
}
 800912e:	f85d fb04 	ldr.w	pc, [sp], #4
 8009132:	2200      	movs	r2, #0
  SubPriorityBits     = ((PriorityGroupTmp + (uint32_t)(__NVIC_PRIO_BITS)) < (uint32_t)7UL) ? (uint32_t)0UL : (uint32_t)((PriorityGroupTmp - 7UL) + (uint32_t)(__NVIC_PRIO_BITS));
 8009134:	4613      	mov	r3, r2
 8009136:	e7e7      	b.n	8009108 <HAL_NVIC_SetPriority+0x30>
    SCB->SHP[(((uint32_t)IRQn) & 0xFUL)-4UL] = (uint8_t)((priority << (8U - __NVIC_PRIO_BITS)) & (uint32_t)0xFFUL);
 8009138:	4b05      	ldr	r3, [pc, #20]	; (8009150 <HAL_NVIC_SetPriority+0x78>)
 800913a:	f000 000f 	and.w	r0, r0, #15
 800913e:	0109      	lsls	r1, r1, #4
 8009140:	4403      	add	r3, r0
 8009142:	b2c9      	uxtb	r1, r1
 8009144:	7619      	strb	r1, [r3, #24]
 8009146:	f85d fb04 	ldr.w	pc, [sp], #4
 800914a:	bf00      	nop
 800914c:	e000ed00 	.word	0xe000ed00
 8009150:	e000ecfc 	.word	0xe000ecfc

08009154 <HAL_NVIC_EnableIRQ>:
  if ((int32_t)(IRQn) >= 0)
 8009154:	2800      	cmp	r0, #0
 8009156:	db07      	blt.n	8009168 <HAL_NVIC_EnableIRQ+0x14>
    NVIC->ISER[(((uint32_t)IRQn) >> 5UL)] = (uint32_t)(1UL << (((uint32_t)IRQn) & 0x1FUL));
 8009158:	0941      	lsrs	r1, r0, #5
 800915a:	4a04      	ldr	r2, [pc, #16]	; (800916c <HAL_NVIC_EnableIRQ+0x18>)
 800915c:	f000 001f 	and.w	r0, r0, #31
 8009160:	2301      	movs	r3, #1
 8009162:	4083      	lsls	r3, r0
 8009164:	f842 3021 	str.w	r3, [r2, r1, lsl #2]
  /* Check the parameters */
  assert_param(IS_NVIC_DEVICE_IRQ(IRQn));
  
  /* Enable interrupt */
  NVIC_EnableIRQ(IRQn);
}
 8009168:	4770      	bx	lr
 800916a:	bf00      	nop
 800916c:	e000e100 	.word	0xe000e100

08009170 <HAL_CRC_Init>:
  * @retval HAL status
  */
HAL_StatusTypeDef HAL_CRC_Init(CRC_HandleTypeDef *hcrc)
{
  /* Check the CRC handle allocation */
  if (hcrc == NULL)
 8009170:	b180      	cbz	r0, 8009194 <HAL_CRC_Init+0x24>
{
 8009172:	b510      	push	{r4, lr}
  }

  /* Check the parameters */
  assert_param(IS_CRC_ALL_INSTANCE(hcrc->Instance));

  if (hcrc->State == HAL_CRC_STATE_RESET)
 8009174:	7943      	ldrb	r3, [r0, #5]
 8009176:	4604      	mov	r4, r0
 8009178:	f003 02ff 	and.w	r2, r3, #255	; 0xff
 800917c:	b11b      	cbz	r3, 8009186 <HAL_CRC_Init+0x16>
    /* Init the low level hardware */
    HAL_CRC_MspInit(hcrc);
  }

  /* Change CRC peripheral state */
  hcrc->State = HAL_CRC_STATE_READY;
 800917e:	2301      	movs	r3, #1
 8009180:	7163      	strb	r3, [r4, #5]

  /* Return function status */
  return HAL_OK;
 8009182:	2000      	movs	r0, #0
}
 8009184:	bd10      	pop	{r4, pc}
    hcrc->Lock = HAL_UNLOCKED;
 8009186:	7102      	strb	r2, [r0, #4]
    HAL_CRC_MspInit(hcrc);
 8009188:	f7f8 fe36 	bl	8001df8 <HAL_CRC_MspInit>
  hcrc->State = HAL_CRC_STATE_READY;
 800918c:	2301      	movs	r3, #1
 800918e:	7163      	strb	r3, [r4, #5]
  return HAL_OK;
 8009190:	2000      	movs	r0, #0
}
 8009192:	bd10      	pop	{r4, pc}
    return HAL_ERROR;
 8009194:	2001      	movs	r0, #1
}
 8009196:	4770      	bx	lr

08009198 <HAL_DMA_Init>:
  * @param  hdma Pointer to a DMA_HandleTypeDef structure that contains
  *               the configuration information for the specified DMA Stream.  
  * @retval HAL status
  */
HAL_StatusTypeDef HAL_DMA_Init(DMA_HandleTypeDef *hdma)
{
 8009198:	b538      	push	{r3, r4, r5, lr}
 800919a:	4604      	mov	r4, r0
  uint32_t tmp = 0U;
  uint32_t tickstart = HAL_GetTick();
 800919c:	f7ff ff72 	bl	8009084 <HAL_GetTick>
  DMA_Base_Registers *regs;

  /* Check the DMA peripheral state */
  if(hdma == NULL)
 80091a0:	2c00      	cmp	r4, #0
 80091a2:	d052      	beq.n	800924a <HAL_DMA_Init+0xb2>

  /* Allocate lock resource */
  __HAL_UNLOCK(hdma);
  
  /* Disable the peripheral */
  __HAL_DMA_DISABLE(hdma);
 80091a4:	6823      	ldr	r3, [r4, #0]
  __HAL_UNLOCK(hdma);
 80091a6:	2200      	movs	r2, #0
  hdma->State = HAL_DMA_STATE_BUSY;
 80091a8:	2102      	movs	r1, #2
 80091aa:	f884 1035 	strb.w	r1, [r4, #53]	; 0x35
  __HAL_UNLOCK(hdma);
 80091ae:	f884 2034 	strb.w	r2, [r4, #52]	; 0x34
  __HAL_DMA_DISABLE(hdma);
 80091b2:	681a      	ldr	r2, [r3, #0]
 80091b4:	f022 0201 	bic.w	r2, r2, #1
 80091b8:	4605      	mov	r5, r0
 80091ba:	601a      	str	r2, [r3, #0]
  
  /* Check if the DMA Stream is effectively disabled */
  while((hdma->Instance->CR & DMA_SxCR_EN) != RESET)
 80091bc:	e005      	b.n	80091ca <HAL_DMA_Init+0x32>
  {
    /* Check for the Timeout */
    if((HAL_GetTick() - tickstart ) > HAL_TIMEOUT_DMA_ABORT)
 80091be:	f7ff ff61 	bl	8009084 <HAL_GetTick>
 80091c2:	1b43      	subs	r3, r0, r5
 80091c4:	2b05      	cmp	r3, #5
 80091c6:	d839      	bhi.n	800923c <HAL_DMA_Init+0xa4>
  while((hdma->Instance->CR & DMA_SxCR_EN) != RESET)
 80091c8:	6823      	ldr	r3, [r4, #0]
 80091ca:	681a      	ldr	r2, [r3, #0]
 80091cc:	07d1      	lsls	r1, r2, #31
 80091ce:	d4f6      	bmi.n	80091be <HAL_DMA_Init+0x26>
                      DMA_SxCR_PL    | DMA_SxCR_MSIZE  | DMA_SxCR_PSIZE  | \
                      DMA_SxCR_MINC  | DMA_SxCR_PINC   | DMA_SxCR_CIRC   | \
                      DMA_SxCR_DIR   | DMA_SxCR_CT     | DMA_SxCR_DBM));

  /* Prepare the DMA Stream configuration */
  tmp |=  hdma->Init.Channel             | hdma->Init.Direction        |
 80091d0:	e9d4 2001 	ldrd	r2, r0, [r4, #4]
 80091d4:	68e1      	ldr	r1, [r4, #12]
 80091d6:	4302      	orrs	r2, r0
 80091d8:	430a      	orrs	r2, r1
          hdma->Init.PeriphInc           | hdma->Init.MemInc           |
 80091da:	e9d4 5104 	ldrd	r5, r1, [r4, #16]
          hdma->Init.PeriphDataAlignment | hdma->Init.MemDataAlignment |
 80091de:	69a0      	ldr	r0, [r4, #24]
          hdma->Init.PeriphInc           | hdma->Init.MemInc           |
 80091e0:	432a      	orrs	r2, r5
 80091e2:	430a      	orrs	r2, r1
          hdma->Init.PeriphDataAlignment | hdma->Init.MemDataAlignment |
 80091e4:	69e1      	ldr	r1, [r4, #28]
  tmp = hdma->Instance->CR;
 80091e6:	681d      	ldr	r5, [r3, #0]
          hdma->Init.PeriphDataAlignment | hdma->Init.MemDataAlignment |
 80091e8:	4302      	orrs	r2, r0
 80091ea:	430a      	orrs	r2, r1
  tmp &= ((uint32_t)~(DMA_SxCR_CHSEL | DMA_SxCR_MBURST | DMA_SxCR_PBURST | \
 80091ec:	4933      	ldr	r1, [pc, #204]	; (80092bc <HAL_DMA_Init+0x124>)
 80091ee:	4029      	ands	r1, r5
          hdma->Init.Mode                | hdma->Init.Priority;
 80091f0:	6a25      	ldr	r5, [r4, #32]
 80091f2:	432a      	orrs	r2, r5
  tmp |=  hdma->Init.Channel             | hdma->Init.Direction        |
 80091f4:	430a      	orrs	r2, r1

  /* the Memory burst and peripheral burst are not used when the FIFO is disabled */
  if(hdma->Init.FIFOMode == DMA_FIFOMODE_ENABLE)
 80091f6:	6a61      	ldr	r1, [r4, #36]	; 0x24
 80091f8:	2904      	cmp	r1, #4
 80091fa:	d028      	beq.n	800924e <HAL_DMA_Init+0xb6>
    /* Get memory burst and peripheral burst */
    tmp |=  hdma->Init.MemBurst | hdma->Init.PeriphBurst;
  }
  
  /* Write to DMA Stream CR register */
  hdma->Instance->CR = tmp;  
 80091fc:	601a      	str	r2, [r3, #0]

  /* Get the FCR register value */
  tmp = hdma->Instance->FCR;
 80091fe:	695a      	ldr	r2, [r3, #20]

  /* Clear Direct mode and FIFO threshold bits */
  tmp &= (uint32_t)~(DMA_SxFCR_DMDIS | DMA_SxFCR_FTH);
 8009200:	f022 0207 	bic.w	r2, r2, #7

  /* Prepare the DMA Stream FIFO configuration */
  tmp |= hdma->Init.FIFOMode;
 8009204:	4311      	orrs	r1, r2
  *                     the configuration information for the specified DMA Stream. 
  * @retval Stream base address
  */
static uint32_t DMA_CalcBaseAndBitshift(DMA_HandleTypeDef *hdma)
{
  uint32_t stream_number = (((uint32_t)hdma->Instance & 0xFFU) - 16U) / 24U;
 8009206:	b2d8      	uxtb	r0, r3
 8009208:	4a2d      	ldr	r2, [pc, #180]	; (80092c0 <HAL_DMA_Init+0x128>)
  hdma->Instance->FCR = tmp;
 800920a:	6159      	str	r1, [r3, #20]
  uint32_t stream_number = (((uint32_t)hdma->Instance & 0xFFU) - 16U) / 24U;
 800920c:	3810      	subs	r0, #16
 800920e:	fba2 5200 	umull	r5, r2, r2, r0
 8009212:	0912      	lsrs	r2, r2, #4
  
  /* lookup table for necessary bitshift of flags within status registers */
  static const uint8_t flagBitshiftOffset[8U] = {0U, 6U, 16U, 22U, 0U, 6U, 16U, 22U};
  hdma->StreamIndex = flagBitshiftOffset[stream_number];
 8009214:	492b      	ldr	r1, [pc, #172]	; (80092c4 <HAL_DMA_Init+0x12c>)
  
  if (stream_number > 3U)
  {
    /* return pointer to HISR and HIFCR */
    hdma->StreamBaseAddress = (((uint32_t)hdma->Instance & (uint32_t)(~0x3FFU)) + 4U);
 8009216:	f423 737f 	bic.w	r3, r3, #1020	; 0x3fc
  hdma->StreamIndex = flagBitshiftOffset[stream_number];
 800921a:	5c89      	ldrb	r1, [r1, r2]
 800921c:	65e1      	str	r1, [r4, #92]	; 0x5c
    hdma->StreamBaseAddress = (((uint32_t)hdma->Instance & (uint32_t)(~0x3FFU)) + 4U);
 800921e:	f023 0303 	bic.w	r3, r3, #3
  if (stream_number > 3U)
 8009222:	285f      	cmp	r0, #95	; 0x5f
    hdma->StreamBaseAddress = (((uint32_t)hdma->Instance & (uint32_t)(~0x3FFU)) + 4U);
 8009224:	bf88      	it	hi
 8009226:	3304      	addhi	r3, #4
  regs->IFCR = 0x3FU << hdma->StreamIndex;
 8009228:	223f      	movs	r2, #63	; 0x3f
 800922a:	408a      	lsls	r2, r1
 800922c:	65a3      	str	r3, [r4, #88]	; 0x58
  hdma->ErrorCode = HAL_DMA_ERROR_NONE;
 800922e:	2000      	movs	r0, #0
  regs->IFCR = 0x3FU << hdma->StreamIndex;
 8009230:	609a      	str	r2, [r3, #8]
  hdma->State = HAL_DMA_STATE_READY;
 8009232:	2301      	movs	r3, #1
  hdma->ErrorCode = HAL_DMA_ERROR_NONE;
 8009234:	6560      	str	r0, [r4, #84]	; 0x54
  hdma->State = HAL_DMA_STATE_READY;
 8009236:	f884 3035 	strb.w	r3, [r4, #53]	; 0x35
}
 800923a:	bd38      	pop	{r3, r4, r5, pc}
      hdma->State = HAL_DMA_STATE_TIMEOUT;
 800923c:	2303      	movs	r3, #3
      hdma->ErrorCode = HAL_DMA_ERROR_TIMEOUT;
 800923e:	2220      	movs	r2, #32
 8009240:	6562      	str	r2, [r4, #84]	; 0x54
      hdma->State = HAL_DMA_STATE_TIMEOUT;
 8009242:	f884 3035 	strb.w	r3, [r4, #53]	; 0x35
      return HAL_TIMEOUT;
 8009246:	4618      	mov	r0, r3
}
 8009248:	bd38      	pop	{r3, r4, r5, pc}
    return HAL_ERROR;
 800924a:	2001      	movs	r0, #1
}
 800924c:	bd38      	pop	{r3, r4, r5, pc}
    tmp |=  hdma->Init.MemBurst | hdma->Init.PeriphBurst;
 800924e:	e9d4 510b 	ldrd	r5, r1, [r4, #44]	; 0x2c
 8009252:	4329      	orrs	r1, r5
 8009254:	4311      	orrs	r1, r2
  hdma->Instance->CR = tmp;  
 8009256:	6019      	str	r1, [r3, #0]
  tmp = hdma->Instance->FCR;
 8009258:	6959      	ldr	r1, [r3, #20]
    tmp |= hdma->Init.FIFOThreshold;
 800925a:	6aa2      	ldr	r2, [r4, #40]	; 0x28
  tmp &= (uint32_t)~(DMA_SxFCR_DMDIS | DMA_SxFCR_FTH);
 800925c:	f021 0107 	bic.w	r1, r1, #7
 8009260:	4311      	orrs	r1, r2
    tmp |= hdma->Init.FIFOThreshold;
 8009262:	f041 0104 	orr.w	r1, r1, #4
    if (hdma->Init.MemBurst != DMA_MBURST_SINGLE)
 8009266:	2d00      	cmp	r5, #0
 8009268:	d0cd      	beq.n	8009206 <HAL_DMA_Init+0x6e>
{
  HAL_StatusTypeDef status = HAL_OK;
  uint32_t tmp = hdma->Init.FIFOThreshold;
  
  /* Memory Data size equal to Byte */
  if(hdma->Init.MemDataAlignment == DMA_MDATAALIGN_BYTE)
 800926a:	b178      	cbz	r0, 800928c <HAL_DMA_Init+0xf4>
      break;
    }
  }
  
  /* Memory Data size equal to Half-Word */
  else if (hdma->Init.MemDataAlignment == DMA_MDATAALIGN_HALFWORD)
 800926c:	f5b0 5f00 	cmp.w	r0, #8192	; 0x2000
 8009270:	d016      	beq.n	80092a0 <HAL_DMA_Init+0x108>
  }
  
  /* Memory Data size equal to Word */
  else
  {
    switch (tmp)
 8009272:	2a02      	cmp	r2, #2
 8009274:	d903      	bls.n	800927e <HAL_DMA_Init+0xe6>
 8009276:	2a03      	cmp	r2, #3
 8009278:	d1c5      	bne.n	8009206 <HAL_DMA_Init+0x6e>
    case DMA_FIFO_THRESHOLD_HALFFULL:
    case DMA_FIFO_THRESHOLD_3QUARTERSFULL:
      status = HAL_ERROR;
      break;
    case DMA_FIFO_THRESHOLD_FULL:
      if ((hdma->Init.MemBurst & DMA_SxCR_MBURST_1) == DMA_SxCR_MBURST_1)
 800927a:	01ea      	lsls	r2, r5, #7
 800927c:	d5c3      	bpl.n	8009206 <HAL_DMA_Init+0x6e>
        hdma->State = HAL_DMA_STATE_READY;
 800927e:	2301      	movs	r3, #1
        hdma->ErrorCode = HAL_DMA_ERROR_PARAM;
 8009280:	2240      	movs	r2, #64	; 0x40
 8009282:	6562      	str	r2, [r4, #84]	; 0x54
        hdma->State = HAL_DMA_STATE_READY;
 8009284:	f884 3035 	strb.w	r3, [r4, #53]	; 0x35
        return HAL_ERROR; 
 8009288:	4618      	mov	r0, r3
}
 800928a:	bd38      	pop	{r3, r4, r5, pc}
    switch (tmp)
 800928c:	2a01      	cmp	r2, #1
 800928e:	d003      	beq.n	8009298 <HAL_DMA_Init+0x100>
 8009290:	f032 0202 	bics.w	r2, r2, #2
 8009294:	d1b7      	bne.n	8009206 <HAL_DMA_Init+0x6e>
 8009296:	e7f0      	b.n	800927a <HAL_DMA_Init+0xe2>
      if (hdma->Init.MemBurst == DMA_MBURST_INC16)
 8009298:	f1b5 7fc0 	cmp.w	r5, #25165824	; 0x1800000
 800929c:	d1b3      	bne.n	8009206 <HAL_DMA_Init+0x6e>
 800929e:	e7ee      	b.n	800927e <HAL_DMA_Init+0xe6>
    switch (tmp)
 80092a0:	2a03      	cmp	r2, #3
 80092a2:	d8b0      	bhi.n	8009206 <HAL_DMA_Init+0x6e>
 80092a4:	a001      	add	r0, pc, #4	; (adr r0, 80092ac <HAL_DMA_Init+0x114>)
 80092a6:	f850 f022 	ldr.w	pc, [r0, r2, lsl #2]
 80092aa:	bf00      	nop
 80092ac:	0800927f 	.word	0x0800927f
 80092b0:	0800927b 	.word	0x0800927b
 80092b4:	0800927f 	.word	0x0800927f
 80092b8:	08009299 	.word	0x08009299
 80092bc:	f010803f 	.word	0xf010803f
 80092c0:	aaaaaaab 	.word	0xaaaaaaab
 80092c4:	0802e068 	.word	0x0802e068

080092c8 <HAL_DMA_Abort_IT>:
  if(hdma->State != HAL_DMA_STATE_BUSY)
 80092c8:	f890 3035 	ldrb.w	r3, [r0, #53]	; 0x35
 80092cc:	2b02      	cmp	r3, #2
 80092ce:	d003      	beq.n	80092d8 <HAL_DMA_Abort_IT+0x10>
    hdma->ErrorCode = HAL_DMA_ERROR_NO_XFER;
 80092d0:	2380      	movs	r3, #128	; 0x80
 80092d2:	6543      	str	r3, [r0, #84]	; 0x54
    return HAL_ERROR;
 80092d4:	2001      	movs	r0, #1
 80092d6:	4770      	bx	lr
    __HAL_DMA_DISABLE(hdma);
 80092d8:	6802      	ldr	r2, [r0, #0]
    hdma->State = HAL_DMA_STATE_ABORT;
 80092da:	2305      	movs	r3, #5
 80092dc:	f880 3035 	strb.w	r3, [r0, #53]	; 0x35
    __HAL_DMA_DISABLE(hdma);
 80092e0:	6813      	ldr	r3, [r2, #0]
 80092e2:	f023 0301 	bic.w	r3, r3, #1
  return HAL_OK;
 80092e6:	2000      	movs	r0, #0
    __HAL_DMA_DISABLE(hdma);
 80092e8:	6013      	str	r3, [r2, #0]
}
 80092ea:	4770      	bx	lr

080092ec <HAL_DMA_IRQHandler>:
{
 80092ec:	b5f0      	push	{r4, r5, r6, r7, lr}
 80092ee:	b083      	sub	sp, #12
  uint32_t timeout = SystemCoreClock / 9600U;
 80092f0:	4a67      	ldr	r2, [pc, #412]	; (8009490 <HAL_DMA_IRQHandler+0x1a4>)
  DMA_Base_Registers *regs = (DMA_Base_Registers *)hdma->StreamBaseAddress;
 80092f2:	6d87      	ldr	r7, [r0, #88]	; 0x58
  uint32_t timeout = SystemCoreClock / 9600U;
 80092f4:	6816      	ldr	r6, [r2, #0]
  __IO uint32_t count = 0U;
 80092f6:	2300      	movs	r3, #0
 80092f8:	9301      	str	r3, [sp, #4]
  if ((tmpisr & (DMA_FLAG_TEIF0_4 << hdma->StreamIndex)) != RESET)
 80092fa:	6dc3      	ldr	r3, [r0, #92]	; 0x5c
  tmpisr = regs->ISR;
 80092fc:	683d      	ldr	r5, [r7, #0]
  if ((tmpisr & (DMA_FLAG_TEIF0_4 << hdma->StreamIndex)) != RESET)
 80092fe:	2208      	movs	r2, #8
 8009300:	409a      	lsls	r2, r3
 8009302:	422a      	tst	r2, r5
{
 8009304:	4604      	mov	r4, r0
  if ((tmpisr & (DMA_FLAG_TEIF0_4 << hdma->StreamIndex)) != RESET)
 8009306:	d003      	beq.n	8009310 <HAL_DMA_IRQHandler+0x24>
    if(__HAL_DMA_GET_IT_SOURCE(hdma, DMA_IT_TE) != RESET)
 8009308:	6801      	ldr	r1, [r0, #0]
 800930a:	6808      	ldr	r0, [r1, #0]
 800930c:	0740      	lsls	r0, r0, #29
 800930e:	d478      	bmi.n	8009402 <HAL_DMA_IRQHandler+0x116>
  if ((tmpisr & (DMA_FLAG_FEIF0_4 << hdma->StreamIndex)) != RESET)
 8009310:	2201      	movs	r2, #1
 8009312:	409a      	lsls	r2, r3
 8009314:	422a      	tst	r2, r5
 8009316:	d003      	beq.n	8009320 <HAL_DMA_IRQHandler+0x34>
    if(__HAL_DMA_GET_IT_SOURCE(hdma, DMA_IT_FE) != RESET)
 8009318:	6821      	ldr	r1, [r4, #0]
 800931a:	6949      	ldr	r1, [r1, #20]
 800931c:	0608      	lsls	r0, r1, #24
 800931e:	d46a      	bmi.n	80093f6 <HAL_DMA_IRQHandler+0x10a>
  if ((tmpisr & (DMA_FLAG_DMEIF0_4 << hdma->StreamIndex)) != RESET)
 8009320:	2204      	movs	r2, #4
 8009322:	409a      	lsls	r2, r3
 8009324:	422a      	tst	r2, r5
 8009326:	d003      	beq.n	8009330 <HAL_DMA_IRQHandler+0x44>
    if(__HAL_DMA_GET_IT_SOURCE(hdma, DMA_IT_DME) != RESET)
 8009328:	6821      	ldr	r1, [r4, #0]
 800932a:	6809      	ldr	r1, [r1, #0]
 800932c:	0789      	lsls	r1, r1, #30
 800932e:	d45c      	bmi.n	80093ea <HAL_DMA_IRQHandler+0xfe>
  if ((tmpisr & (DMA_FLAG_HTIF0_4 << hdma->StreamIndex)) != RESET)
 8009330:	2210      	movs	r2, #16
 8009332:	409a      	lsls	r2, r3
 8009334:	422a      	tst	r2, r5
 8009336:	d003      	beq.n	8009340 <HAL_DMA_IRQHandler+0x54>
    if(__HAL_DMA_GET_IT_SOURCE(hdma, DMA_IT_HT) != RESET)
 8009338:	6821      	ldr	r1, [r4, #0]
 800933a:	6808      	ldr	r0, [r1, #0]
 800933c:	0700      	lsls	r0, r0, #28
 800933e:	d441      	bmi.n	80093c4 <HAL_DMA_IRQHandler+0xd8>
  if ((tmpisr & (DMA_FLAG_TCIF0_4 << hdma->StreamIndex)) != RESET)
 8009340:	2220      	movs	r2, #32
 8009342:	409a      	lsls	r2, r3
 8009344:	422a      	tst	r2, r5
 8009346:	d014      	beq.n	8009372 <HAL_DMA_IRQHandler+0x86>
    if(__HAL_DMA_GET_IT_SOURCE(hdma, DMA_IT_TC) != RESET)
 8009348:	6821      	ldr	r1, [r4, #0]
 800934a:	6808      	ldr	r0, [r1, #0]
 800934c:	06c0      	lsls	r0, r0, #27
 800934e:	d510      	bpl.n	8009372 <HAL_DMA_IRQHandler+0x86>
      regs->IFCR = DMA_FLAG_TCIF0_4 << hdma->StreamIndex;
 8009350:	60ba      	str	r2, [r7, #8]
      if(HAL_DMA_STATE_ABORT == hdma->State)
 8009352:	f894 2035 	ldrb.w	r2, [r4, #53]	; 0x35
 8009356:	2a05      	cmp	r2, #5
 8009358:	d063      	beq.n	8009422 <HAL_DMA_IRQHandler+0x136>
      if(((hdma->Instance->CR) & (uint32_t)(DMA_SxCR_DBM)) != RESET)
 800935a:	680b      	ldr	r3, [r1, #0]
 800935c:	f413 2f80 	tst.w	r3, #262144	; 0x40000
        if((hdma->Instance->CR & DMA_SxCR_CT) == RESET)
 8009360:	680b      	ldr	r3, [r1, #0]
      if(((hdma->Instance->CR) & (uint32_t)(DMA_SxCR_DBM)) != RESET)
 8009362:	d07e      	beq.n	8009462 <HAL_DMA_IRQHandler+0x176>
        if((hdma->Instance->CR & DMA_SxCR_CT) == RESET)
 8009364:	0319      	lsls	r1, r3, #12
 8009366:	f140 8089 	bpl.w	800947c <HAL_DMA_IRQHandler+0x190>
        if(hdma->XferCpltCallback != NULL)
 800936a:	6be3      	ldr	r3, [r4, #60]	; 0x3c
 800936c:	b10b      	cbz	r3, 8009372 <HAL_DMA_IRQHandler+0x86>
          hdma->XferCpltCallback(hdma);
 800936e:	4620      	mov	r0, r4
 8009370:	4798      	blx	r3
  if(hdma->ErrorCode != HAL_DMA_ERROR_NONE)
 8009372:	6d63      	ldr	r3, [r4, #84]	; 0x54
 8009374:	b323      	cbz	r3, 80093c0 <HAL_DMA_IRQHandler+0xd4>
    if((hdma->ErrorCode & HAL_DMA_ERROR_TE) != RESET)
 8009376:	6d63      	ldr	r3, [r4, #84]	; 0x54
 8009378:	07da      	lsls	r2, r3, #31
 800937a:	d51a      	bpl.n	80093b2 <HAL_DMA_IRQHandler+0xc6>
      __HAL_DMA_DISABLE(hdma);
 800937c:	6822      	ldr	r2, [r4, #0]
  uint32_t timeout = SystemCoreClock / 9600U;
 800937e:	4945      	ldr	r1, [pc, #276]	; (8009494 <HAL_DMA_IRQHandler+0x1a8>)
      hdma->State = HAL_DMA_STATE_ABORT;
 8009380:	2305      	movs	r3, #5
 8009382:	f884 3035 	strb.w	r3, [r4, #53]	; 0x35
      __HAL_DMA_DISABLE(hdma);
 8009386:	6813      	ldr	r3, [r2, #0]
  uint32_t timeout = SystemCoreClock / 9600U;
 8009388:	fba1 1606 	umull	r1, r6, r1, r6
      __HAL_DMA_DISABLE(hdma);
 800938c:	f023 0301 	bic.w	r3, r3, #1
  uint32_t timeout = SystemCoreClock / 9600U;
 8009390:	0ab6      	lsrs	r6, r6, #10
      __HAL_DMA_DISABLE(hdma);
 8009392:	6013      	str	r3, [r2, #0]
 8009394:	e002      	b.n	800939c <HAL_DMA_IRQHandler+0xb0>
      while((hdma->Instance->CR & DMA_SxCR_EN) != RESET);
 8009396:	6813      	ldr	r3, [r2, #0]
 8009398:	07db      	lsls	r3, r3, #31
 800939a:	d504      	bpl.n	80093a6 <HAL_DMA_IRQHandler+0xba>
        if (++count > timeout)
 800939c:	9b01      	ldr	r3, [sp, #4]
 800939e:	3301      	adds	r3, #1
 80093a0:	42b3      	cmp	r3, r6
 80093a2:	9301      	str	r3, [sp, #4]
 80093a4:	d9f7      	bls.n	8009396 <HAL_DMA_IRQHandler+0xaa>
      hdma->State = HAL_DMA_STATE_READY;
 80093a6:	2201      	movs	r2, #1
      __HAL_UNLOCK(hdma);
 80093a8:	2300      	movs	r3, #0
      hdma->State = HAL_DMA_STATE_READY;
 80093aa:	f884 2035 	strb.w	r2, [r4, #53]	; 0x35
      __HAL_UNLOCK(hdma);
 80093ae:	f884 3034 	strb.w	r3, [r4, #52]	; 0x34
    if(hdma->XferErrorCallback != NULL)
 80093b2:	6ce3      	ldr	r3, [r4, #76]	; 0x4c
 80093b4:	b123      	cbz	r3, 80093c0 <HAL_DMA_IRQHandler+0xd4>
      hdma->XferErrorCallback(hdma);
 80093b6:	4620      	mov	r0, r4
}
 80093b8:	b003      	add	sp, #12
 80093ba:	e8bd 40f0 	ldmia.w	sp!, {r4, r5, r6, r7, lr}
      hdma->XferErrorCallback(hdma);
 80093be:	4718      	bx	r3
}
 80093c0:	b003      	add	sp, #12
 80093c2:	bdf0      	pop	{r4, r5, r6, r7, pc}
      regs->IFCR = DMA_FLAG_HTIF0_4 << hdma->StreamIndex;
 80093c4:	60ba      	str	r2, [r7, #8]
      if(((hdma->Instance->CR) & (uint32_t)(DMA_SxCR_DBM)) != RESET)
 80093c6:	680a      	ldr	r2, [r1, #0]
 80093c8:	f412 2f80 	tst.w	r2, #262144	; 0x40000
        if((hdma->Instance->CR & DMA_SxCR_CT) == RESET)
 80093cc:	680a      	ldr	r2, [r1, #0]
      if(((hdma->Instance->CR) & (uint32_t)(DMA_SxCR_DBM)) != RESET)
 80093ce:	d122      	bne.n	8009416 <HAL_DMA_IRQHandler+0x12a>
        if((hdma->Instance->CR & DMA_SxCR_CIRC) == RESET)
 80093d0:	05d2      	lsls	r2, r2, #23
 80093d2:	d403      	bmi.n	80093dc <HAL_DMA_IRQHandler+0xf0>
          hdma->Instance->CR  &= ~(DMA_IT_HT);
 80093d4:	680a      	ldr	r2, [r1, #0]
 80093d6:	f022 0208 	bic.w	r2, r2, #8
 80093da:	600a      	str	r2, [r1, #0]
        if(hdma->XferHalfCpltCallback != NULL)
 80093dc:	6c22      	ldr	r2, [r4, #64]	; 0x40
 80093de:	2a00      	cmp	r2, #0
 80093e0:	d0ae      	beq.n	8009340 <HAL_DMA_IRQHandler+0x54>
          hdma->XferHalfCpltCallback(hdma);
 80093e2:	4620      	mov	r0, r4
 80093e4:	4790      	blx	r2
  if ((tmpisr & (DMA_FLAG_TCIF0_4 << hdma->StreamIndex)) != RESET)
 80093e6:	6de3      	ldr	r3, [r4, #92]	; 0x5c
 80093e8:	e7aa      	b.n	8009340 <HAL_DMA_IRQHandler+0x54>
      regs->IFCR = DMA_FLAG_DMEIF0_4 << hdma->StreamIndex;
 80093ea:	60ba      	str	r2, [r7, #8]
      hdma->ErrorCode |= HAL_DMA_ERROR_DME;
 80093ec:	6d62      	ldr	r2, [r4, #84]	; 0x54
 80093ee:	f042 0204 	orr.w	r2, r2, #4
 80093f2:	6562      	str	r2, [r4, #84]	; 0x54
 80093f4:	e79c      	b.n	8009330 <HAL_DMA_IRQHandler+0x44>
      regs->IFCR = DMA_FLAG_FEIF0_4 << hdma->StreamIndex;
 80093f6:	60ba      	str	r2, [r7, #8]
      hdma->ErrorCode |= HAL_DMA_ERROR_FE;
 80093f8:	6d62      	ldr	r2, [r4, #84]	; 0x54
 80093fa:	f042 0202 	orr.w	r2, r2, #2
 80093fe:	6562      	str	r2, [r4, #84]	; 0x54
 8009400:	e78e      	b.n	8009320 <HAL_DMA_IRQHandler+0x34>
      hdma->Instance->CR  &= ~(DMA_IT_TE);
 8009402:	6808      	ldr	r0, [r1, #0]
 8009404:	f020 0004 	bic.w	r0, r0, #4
 8009408:	6008      	str	r0, [r1, #0]
      regs->IFCR = DMA_FLAG_TEIF0_4 << hdma->StreamIndex;
 800940a:	60ba      	str	r2, [r7, #8]
      hdma->ErrorCode |= HAL_DMA_ERROR_TE;
 800940c:	6d62      	ldr	r2, [r4, #84]	; 0x54
 800940e:	f042 0201 	orr.w	r2, r2, #1
 8009412:	6562      	str	r2, [r4, #84]	; 0x54
 8009414:	e77c      	b.n	8009310 <HAL_DMA_IRQHandler+0x24>
        if((hdma->Instance->CR & DMA_SxCR_CT) == RESET)
 8009416:	0311      	lsls	r1, r2, #12
 8009418:	d5e0      	bpl.n	80093dc <HAL_DMA_IRQHandler+0xf0>
          if(hdma->XferM1HalfCpltCallback != NULL)
 800941a:	6ca2      	ldr	r2, [r4, #72]	; 0x48
 800941c:	2a00      	cmp	r2, #0
 800941e:	d1e0      	bne.n	80093e2 <HAL_DMA_IRQHandler+0xf6>
 8009420:	e78e      	b.n	8009340 <HAL_DMA_IRQHandler+0x54>
        hdma->Instance->CR  &= ~(DMA_IT_TC | DMA_IT_TE | DMA_IT_DME);
 8009422:	680a      	ldr	r2, [r1, #0]
 8009424:	f022 0216 	bic.w	r2, r2, #22
 8009428:	600a      	str	r2, [r1, #0]
        hdma->Instance->FCR &= ~(DMA_IT_FE);
 800942a:	694a      	ldr	r2, [r1, #20]
 800942c:	f022 0280 	bic.w	r2, r2, #128	; 0x80
 8009430:	614a      	str	r2, [r1, #20]
        if((hdma->XferHalfCpltCallback != NULL) || (hdma->XferM1HalfCpltCallback != NULL))
 8009432:	6c22      	ldr	r2, [r4, #64]	; 0x40
 8009434:	b33a      	cbz	r2, 8009486 <HAL_DMA_IRQHandler+0x19a>
          hdma->Instance->CR  &= ~(DMA_IT_HT);
 8009436:	680a      	ldr	r2, [r1, #0]
 8009438:	f022 0208 	bic.w	r2, r2, #8
 800943c:	600a      	str	r2, [r1, #0]
        regs->IFCR = 0x3FU << hdma->StreamIndex;
 800943e:	223f      	movs	r2, #63	; 0x3f
 8009440:	fa02 f303 	lsl.w	r3, r2, r3
        if(hdma->XferAbortCallback != NULL)
 8009444:	6d21      	ldr	r1, [r4, #80]	; 0x50
        regs->IFCR = 0x3FU << hdma->StreamIndex;
 8009446:	60bb      	str	r3, [r7, #8]
        hdma->State = HAL_DMA_STATE_READY;
 8009448:	2201      	movs	r2, #1
        __HAL_UNLOCK(hdma);
 800944a:	2300      	movs	r3, #0
        hdma->State = HAL_DMA_STATE_READY;
 800944c:	f884 2035 	strb.w	r2, [r4, #53]	; 0x35
        __HAL_UNLOCK(hdma);
 8009450:	f884 3034 	strb.w	r3, [r4, #52]	; 0x34
        if(hdma->XferAbortCallback != NULL)
 8009454:	2900      	cmp	r1, #0
 8009456:	d0b3      	beq.n	80093c0 <HAL_DMA_IRQHandler+0xd4>
          hdma->XferAbortCallback(hdma);
 8009458:	4620      	mov	r0, r4
}
 800945a:	b003      	add	sp, #12
 800945c:	e8bd 40f0 	ldmia.w	sp!, {r4, r5, r6, r7, lr}
          hdma->XferAbortCallback(hdma);
 8009460:	4708      	bx	r1
        if((hdma->Instance->CR & DMA_SxCR_CIRC) == RESET)
 8009462:	f413 7380 	ands.w	r3, r3, #256	; 0x100
 8009466:	d180      	bne.n	800936a <HAL_DMA_IRQHandler+0x7e>
          hdma->Instance->CR  &= ~(DMA_IT_TC);
 8009468:	680a      	ldr	r2, [r1, #0]
 800946a:	f022 0210 	bic.w	r2, r2, #16
 800946e:	600a      	str	r2, [r1, #0]
          hdma->State = HAL_DMA_STATE_READY;
 8009470:	2201      	movs	r2, #1
 8009472:	f884 2035 	strb.w	r2, [r4, #53]	; 0x35
          __HAL_UNLOCK(hdma);
 8009476:	f884 3034 	strb.w	r3, [r4, #52]	; 0x34
 800947a:	e776      	b.n	800936a <HAL_DMA_IRQHandler+0x7e>
          if(hdma->XferM1CpltCallback != NULL)
 800947c:	6c63      	ldr	r3, [r4, #68]	; 0x44
 800947e:	2b00      	cmp	r3, #0
 8009480:	f47f af75 	bne.w	800936e <HAL_DMA_IRQHandler+0x82>
 8009484:	e775      	b.n	8009372 <HAL_DMA_IRQHandler+0x86>
        if((hdma->XferHalfCpltCallback != NULL) || (hdma->XferM1HalfCpltCallback != NULL))
 8009486:	6ca2      	ldr	r2, [r4, #72]	; 0x48
 8009488:	2a00      	cmp	r2, #0
 800948a:	d1d4      	bne.n	8009436 <HAL_DMA_IRQHandler+0x14a>
 800948c:	e7d7      	b.n	800943e <HAL_DMA_IRQHandler+0x152>
 800948e:	bf00      	nop
 8009490:	20000078 	.word	0x20000078
 8009494:	1b4e81b5 	.word	0x1b4e81b5

08009498 <HAL_DMA_GetState>:
  return hdma->State;
 8009498:	f890 0035 	ldrb.w	r0, [r0, #53]	; 0x35
}
 800949c:	4770      	bx	lr
 800949e:	bf00      	nop

080094a0 <HAL_DMA2D_Init>:
  * @retval HAL status
  */
HAL_StatusTypeDef HAL_DMA2D_Init(DMA2D_HandleTypeDef *hdma2d)
{
  /* Check the DMA2D peripheral state */
  if (hdma2d == NULL)
 80094a0:	b348      	cbz	r0, 80094f6 <HAL_DMA2D_Init+0x56>
{
 80094a2:	b510      	push	{r4, lr}

    /* Init the low level hardware */
    hdma2d->MspInitCallback(hdma2d);
  }
#else
  if (hdma2d->State == HAL_DMA2D_STATE_RESET)
 80094a4:	f890 3039 	ldrb.w	r3, [r0, #57]	; 0x39
 80094a8:	4604      	mov	r4, r0
 80094aa:	f003 02ff 	and.w	r2, r3, #255	; 0xff
 80094ae:	b1eb      	cbz	r3, 80094ec <HAL_DMA2D_Init+0x4c>

  /* Change DMA2D peripheral state */
  hdma2d->State = HAL_DMA2D_STATE_BUSY;

  /* DMA2D CR register configuration -------------------------------------------*/
  MODIFY_REG(hdma2d->Instance->CR, DMA2D_CR_MODE, hdma2d->Init.Mode);
 80094b0:	6822      	ldr	r2, [r4, #0]
 80094b2:	6861      	ldr	r1, [r4, #4]
  hdma2d->State = HAL_DMA2D_STATE_BUSY;
 80094b4:	2302      	movs	r3, #2
 80094b6:	f884 3039 	strb.w	r3, [r4, #57]	; 0x39
  MODIFY_REG(hdma2d->Instance->CR, DMA2D_CR_MODE, hdma2d->Init.Mode);
 80094ba:	6813      	ldr	r3, [r2, #0]
 80094bc:	f423 3340 	bic.w	r3, r3, #196608	; 0x30000
 80094c0:	430b      	orrs	r3, r1
 80094c2:	6013      	str	r3, [r2, #0]

  /* DMA2D OPFCCR register configuration ---------------------------------------*/
  MODIFY_REG(hdma2d->Instance->OPFCCR, DMA2D_OPFCCR_CM, hdma2d->Init.ColorMode);
 80094c4:	6b53      	ldr	r3, [r2, #52]	; 0x34
 80094c6:	68a1      	ldr	r1, [r4, #8]
 80094c8:	f023 0307 	bic.w	r3, r3, #7
 80094cc:	430b      	orrs	r3, r1
 80094ce:	6353      	str	r3, [r2, #52]	; 0x34

  /* DMA2D OOR register configuration ------------------------------------------*/
  MODIFY_REG(hdma2d->Instance->OOR, DMA2D_OOR_LO, hdma2d->Init.OutputOffset);
 80094d0:	6c13      	ldr	r3, [r2, #64]	; 0x40
 80094d2:	68e1      	ldr	r1, [r4, #12]
 80094d4:	f423 537f 	bic.w	r3, r3, #16320	; 0x3fc0
 80094d8:	f023 033f 	bic.w	r3, r3, #63	; 0x3f
 80094dc:	430b      	orrs	r3, r1
 80094de:	6413      	str	r3, [r2, #64]	; 0x40


  /* Update error code */
  hdma2d->ErrorCode = HAL_DMA2D_ERROR_NONE;
 80094e0:	2000      	movs	r0, #0

  /* Initialize the DMA2D state*/
  hdma2d->State  = HAL_DMA2D_STATE_READY;
 80094e2:	2301      	movs	r3, #1
  hdma2d->ErrorCode = HAL_DMA2D_ERROR_NONE;
 80094e4:	63e0      	str	r0, [r4, #60]	; 0x3c
  hdma2d->State  = HAL_DMA2D_STATE_READY;
 80094e6:	f884 3039 	strb.w	r3, [r4, #57]	; 0x39

  return HAL_OK;
}
 80094ea:	bd10      	pop	{r4, pc}
    hdma2d->Lock = HAL_UNLOCKED;
 80094ec:	f880 2038 	strb.w	r2, [r0, #56]	; 0x38
    HAL_DMA2D_MspInit(hdma2d);
 80094f0:	f7f8 fc9c 	bl	8001e2c <HAL_DMA2D_MspInit>
 80094f4:	e7dc      	b.n	80094b0 <HAL_DMA2D_Init+0x10>
    return HAL_ERROR;
 80094f6:	2001      	movs	r0, #1
}
 80094f8:	4770      	bx	lr
 80094fa:	bf00      	nop

080094fc <HAL_DMA2D_ConfigLayer>:
      assert_param(IS_DMA2D_ALPHA_MODE(hdma2d->LayerCfg[LayerIdx].AlphaMode));
    }
  }

  /* Process locked */
  __HAL_LOCK(hdma2d);
 80094fc:	f890 3038 	ldrb.w	r3, [r0, #56]	; 0x38
 8009500:	2b01      	cmp	r3, #1
 8009502:	d04d      	beq.n	80095a0 <HAL_DMA2D_ConfigLayer+0xa4>
 8009504:	2201      	movs	r2, #1

  /* Change DMA2D peripheral state */
  hdma2d->State = HAL_DMA2D_STATE_BUSY;
 8009506:	2302      	movs	r3, #2
{
 8009508:	b470      	push	{r4, r5, r6}

  pLayerCfg = &hdma2d->LayerCfg[LayerIdx];

  /* Prepare the value to be written to the BGPFCCR or FGPFCCR register */
  regValue = pLayerCfg->InputColorMode | (pLayerCfg->AlphaMode << DMA2D_BGPFCCR_AM_Pos);
 800950a:	eb00 1c01 	add.w	ip, r0, r1, lsl #4
  __HAL_LOCK(hdma2d);
 800950e:	f880 2038 	strb.w	r2, [r0, #56]	; 0x38
  hdma2d->State = HAL_DMA2D_STATE_BUSY;
 8009512:	f880 3039 	strb.w	r3, [r0, #57]	; 0x39
  regValue = pLayerCfg->InputColorMode | (pLayerCfg->AlphaMode << DMA2D_BGPFCCR_AM_Pos);
 8009516:	e9dc 2307 	ldrd	r2, r3, [ip, #28]
 800951a:	ea42 4303 	orr.w	r3, r2, r3, lsl #16
  regMask  = DMA2D_BGPFCCR_CM | DMA2D_BGPFCCR_AM | DMA2D_BGPFCCR_ALPHA;


  if ((pLayerCfg->InputColorMode == DMA2D_INPUT_A4) || (pLayerCfg->InputColorMode == DMA2D_INPUT_A8))
 800951e:	3a09      	subs	r2, #9
 8009520:	2a01      	cmp	r2, #1
  {
    regValue |= (pLayerCfg->InputAlpha & DMA2D_BGPFCCR_ALPHA);
 8009522:	f8dc 2024 	ldr.w	r2, [ip, #36]	; 0x24
  if ((pLayerCfg->InputColorMode == DMA2D_INPUT_A4) || (pLayerCfg->InputColorMode == DMA2D_INPUT_A8))
 8009526:	d91d      	bls.n	8009564 <HAL_DMA2D_ConfigLayer+0x68>
  }
  else
  {
    regValue |= (pLayerCfg->InputAlpha << DMA2D_BGPFCCR_ALPHA_Pos);
 8009528:	ea43 6302 	orr.w	r3, r3, r2, lsl #24
  }

  /* Configure the background DMA2D layer */
  if (LayerIdx == DMA2D_BACKGROUND_LAYER)
 800952c:	b189      	cbz	r1, 8009552 <HAL_DMA2D_ConfigLayer+0x56>
  else
  {


    /* Write DMA2D FGPFCCR register */
    MODIFY_REG(hdma2d->Instance->FGPFCCR, regMask, regValue);
 800952e:	6801      	ldr	r1, [r0, #0]
 8009530:	4a1c      	ldr	r2, [pc, #112]	; (80095a4 <HAL_DMA2D_ConfigLayer+0xa8>)
 8009532:	69cd      	ldr	r5, [r1, #28]

    /* DMA2D FGOR register configuration -------------------------------------*/
    WRITE_REG(hdma2d->Instance->FGOR, pLayerCfg->InputOffset);
 8009534:	f8dc 4018 	ldr.w	r4, [ip, #24]
    MODIFY_REG(hdma2d->Instance->FGPFCCR, regMask, regValue);
 8009538:	402a      	ands	r2, r5
 800953a:	431a      	orrs	r2, r3
 800953c:	61ca      	str	r2, [r1, #28]
    WRITE_REG(hdma2d->Instance->FGOR, pLayerCfg->InputOffset);
 800953e:	610c      	str	r4, [r1, #16]
  }
  /* Initialize the DMA2D state*/
  hdma2d->State = HAL_DMA2D_STATE_READY;

  /* Process unlocked */
  __HAL_UNLOCK(hdma2d);
 8009540:	2300      	movs	r3, #0
  hdma2d->State = HAL_DMA2D_STATE_READY;
 8009542:	2201      	movs	r2, #1
 8009544:	f880 2039 	strb.w	r2, [r0, #57]	; 0x39
  __HAL_UNLOCK(hdma2d);
 8009548:	f880 3038 	strb.w	r3, [r0, #56]	; 0x38

  return HAL_OK;
}
 800954c:	bc70      	pop	{r4, r5, r6}
  return HAL_OK;
 800954e:	4618      	mov	r0, r3
}
 8009550:	4770      	bx	lr
    MODIFY_REG(hdma2d->Instance->BGPFCCR, regMask, regValue);
 8009552:	6801      	ldr	r1, [r0, #0]
 8009554:	4a13      	ldr	r2, [pc, #76]	; (80095a4 <HAL_DMA2D_ConfigLayer+0xa8>)
 8009556:	6a4c      	ldr	r4, [r1, #36]	; 0x24
 8009558:	4022      	ands	r2, r4
 800955a:	431a      	orrs	r2, r3
    WRITE_REG(hdma2d->Instance->BGOR, pLayerCfg->InputOffset);
 800955c:	6984      	ldr	r4, [r0, #24]
    MODIFY_REG(hdma2d->Instance->BGPFCCR, regMask, regValue);
 800955e:	624a      	str	r2, [r1, #36]	; 0x24
    WRITE_REG(hdma2d->Instance->BGOR, pLayerCfg->InputOffset);
 8009560:	618c      	str	r4, [r1, #24]
    if ((pLayerCfg->InputColorMode == DMA2D_INPUT_A4) || (pLayerCfg->InputColorMode == DMA2D_INPUT_A8))
 8009562:	e7ed      	b.n	8009540 <HAL_DMA2D_ConfigLayer+0x44>
    regValue |= (pLayerCfg->InputAlpha & DMA2D_BGPFCCR_ALPHA);
 8009564:	f002 447f 	and.w	r4, r2, #4278190080	; 0xff000000
 8009568:	4323      	orrs	r3, r4
  if (LayerIdx == DMA2D_BACKGROUND_LAYER)
 800956a:	b961      	cbnz	r1, 8009586 <HAL_DMA2D_ConfigLayer+0x8a>
    MODIFY_REG(hdma2d->Instance->BGPFCCR, regMask, regValue);
 800956c:	6801      	ldr	r1, [r0, #0]
 800956e:	4a0d      	ldr	r2, [pc, #52]	; (80095a4 <HAL_DMA2D_ConfigLayer+0xa8>)
 8009570:	6a4c      	ldr	r4, [r1, #36]	; 0x24
    WRITE_REG(hdma2d->Instance->BGOR, pLayerCfg->InputOffset);
 8009572:	6985      	ldr	r5, [r0, #24]
    MODIFY_REG(hdma2d->Instance->BGPFCCR, regMask, regValue);
 8009574:	4022      	ands	r2, r4
      WRITE_REG(hdma2d->Instance->BGCOLR, pLayerCfg->InputAlpha & (DMA2D_BGCOLR_BLUE | DMA2D_BGCOLR_GREEN | \
 8009576:	6a44      	ldr	r4, [r0, #36]	; 0x24
    MODIFY_REG(hdma2d->Instance->BGPFCCR, regMask, regValue);
 8009578:	431a      	orrs	r2, r3
      WRITE_REG(hdma2d->Instance->BGCOLR, pLayerCfg->InputAlpha & (DMA2D_BGCOLR_BLUE | DMA2D_BGCOLR_GREEN | \
 800957a:	f024 447f 	bic.w	r4, r4, #4278190080	; 0xff000000
    MODIFY_REG(hdma2d->Instance->BGPFCCR, regMask, regValue);
 800957e:	624a      	str	r2, [r1, #36]	; 0x24
    WRITE_REG(hdma2d->Instance->BGOR, pLayerCfg->InputOffset);
 8009580:	618d      	str	r5, [r1, #24]
      WRITE_REG(hdma2d->Instance->BGCOLR, pLayerCfg->InputAlpha & (DMA2D_BGCOLR_BLUE | DMA2D_BGCOLR_GREEN | \
 8009582:	628c      	str	r4, [r1, #40]	; 0x28
 8009584:	e7dc      	b.n	8009540 <HAL_DMA2D_ConfigLayer+0x44>
    MODIFY_REG(hdma2d->Instance->FGPFCCR, regMask, regValue);
 8009586:	6804      	ldr	r4, [r0, #0]
 8009588:	4906      	ldr	r1, [pc, #24]	; (80095a4 <HAL_DMA2D_ConfigLayer+0xa8>)
 800958a:	69e6      	ldr	r6, [r4, #28]
    WRITE_REG(hdma2d->Instance->FGOR, pLayerCfg->InputOffset);
 800958c:	f8dc 5018 	ldr.w	r5, [ip, #24]
    MODIFY_REG(hdma2d->Instance->FGPFCCR, regMask, regValue);
 8009590:	4031      	ands	r1, r6
      WRITE_REG(hdma2d->Instance->FGCOLR, pLayerCfg->InputAlpha & (DMA2D_FGCOLR_BLUE | DMA2D_FGCOLR_GREEN | \
 8009592:	f022 427f 	bic.w	r2, r2, #4278190080	; 0xff000000
    MODIFY_REG(hdma2d->Instance->FGPFCCR, regMask, regValue);
 8009596:	4319      	orrs	r1, r3
 8009598:	61e1      	str	r1, [r4, #28]
    WRITE_REG(hdma2d->Instance->FGOR, pLayerCfg->InputOffset);
 800959a:	6125      	str	r5, [r4, #16]
      WRITE_REG(hdma2d->Instance->FGCOLR, pLayerCfg->InputAlpha & (DMA2D_FGCOLR_BLUE | DMA2D_FGCOLR_GREEN | \
 800959c:	6222      	str	r2, [r4, #32]
 800959e:	e7cf      	b.n	8009540 <HAL_DMA2D_ConfigLayer+0x44>
  __HAL_LOCK(hdma2d);
 80095a0:	2002      	movs	r0, #2
}
 80095a2:	4770      	bx	lr
 80095a4:	00fcfff0 	.word	0x00fcfff0

080095a8 <HAL_GPIO_Init>:
  * @param  GPIO_Init pointer to a GPIO_InitTypeDef structure that contains
  *         the configuration information for the specified GPIO peripheral.
  * @retval None
  */
void HAL_GPIO_Init(GPIO_TypeDef  *GPIOx, GPIO_InitTypeDef *GPIO_Init)
{
 80095a8:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
  for(position = 0U; position < GPIO_NUMBER; position++)
  {
    /* Get the IO position */
    ioposition = 0x01U << position;
    /* Get the current IO position */
    iocurrent = (uint32_t)(GPIO_Init->Pin) & ioposition;
 80095ac:	2200      	movs	r2, #0
 80095ae:	680c      	ldr	r4, [r1, #0]
      /*--------------------- EXTI Mode Configuration ------------------------*/
      /* Configure the External Interrupt or event for the current IO */
      if((GPIO_Init->Mode & EXTI_MODE) != 0x00U)
      {
        /* Enable SYSCFG Clock */
        __HAL_RCC_SYSCFG_CLK_ENABLE();
 80095b0:	f8df a260 	ldr.w	sl, [pc, #608]	; 8009814 <HAL_GPIO_Init+0x26c>
        temp &= ~(0x0FU << (4U * (position & 0x03U)));
        temp |= ((uint32_t)(GPIO_GET_INDEX(GPIOx)) << (4U * (position & 0x03U)));
        SYSCFG->EXTICR[position >> 2U] = temp;

        /* Clear Rising Falling edge configuration */
        temp = EXTI->RTSR;
 80095b4:	4e90      	ldr	r6, [pc, #576]	; (80097f8 <HAL_GPIO_Init+0x250>)
{
 80095b6:	b085      	sub	sp, #20
  for(position = 0U; position < GPIO_NUMBER; position++)
 80095b8:	4613      	mov	r3, r2
        temp |= ((uint32_t)(GPIO_GET_INDEX(GPIOx)) << (4U * (position & 0x03U)));
 80095ba:	4689      	mov	r9, r1
 80095bc:	e005      	b.n	80095ca <HAL_GPIO_Init+0x22>
  for(position = 0U; position < GPIO_NUMBER; position++)
 80095be:	3301      	adds	r3, #1
 80095c0:	2b10      	cmp	r3, #16
 80095c2:	f102 0202 	add.w	r2, r2, #2
 80095c6:	f000 8095 	beq.w	80096f4 <HAL_GPIO_Init+0x14c>
    ioposition = 0x01U << position;
 80095ca:	2101      	movs	r1, #1
 80095cc:	4099      	lsls	r1, r3
    iocurrent = (uint32_t)(GPIO_Init->Pin) & ioposition;
 80095ce:	ea01 0b04 	and.w	fp, r1, r4
    if(iocurrent == ioposition)
 80095d2:	43a1      	bics	r1, r4
 80095d4:	d1f3      	bne.n	80095be <HAL_GPIO_Init+0x16>
      if(((GPIO_Init->Mode & GPIO_MODE) == MODE_OUTPUT) || \
 80095d6:	f8d9 c004 	ldr.w	ip, [r9, #4]
 80095da:	f00c 0103 	and.w	r1, ip, #3
 80095de:	1e4d      	subs	r5, r1, #1
 80095e0:	2d01      	cmp	r5, #1
 80095e2:	f240 808a 	bls.w	80096fa <HAL_GPIO_Init+0x152>
      if((GPIO_Init->Mode & GPIO_MODE) != MODE_ANALOG)
 80095e6:	2903      	cmp	r1, #3
 80095e8:	f040 80ca 	bne.w	8009780 <HAL_GPIO_Init+0x1d8>
        temp &= ~(GPIO_OSPEEDER_OSPEEDR0 << (position * 2U));
 80095ec:	4091      	lsls	r1, r2
 80095ee:	43cd      	mvns	r5, r1
      temp = GPIOx->MODER;
 80095f0:	6807      	ldr	r7, [r0, #0]
      temp &= ~(GPIO_MODER_MODER0 << (position * 2U));
 80095f2:	403d      	ands	r5, r7
      temp |= ((GPIO_Init->Mode & GPIO_MODE) << (position * 2U));
 80095f4:	4329      	orrs	r1, r5
      if((GPIO_Init->Mode & EXTI_MODE) != 0x00U)
 80095f6:	f41c 3f40 	tst.w	ip, #196608	; 0x30000
      GPIOx->MODER = temp;
 80095fa:	6001      	str	r1, [r0, #0]
      if((GPIO_Init->Mode & EXTI_MODE) != 0x00U)
 80095fc:	d0df      	beq.n	80095be <HAL_GPIO_Init+0x16>
        __HAL_RCC_SYSCFG_CLK_ENABLE();
 80095fe:	2100      	movs	r1, #0
 8009600:	9103      	str	r1, [sp, #12]
 8009602:	f8da 1044 	ldr.w	r1, [sl, #68]	; 0x44
 8009606:	f441 4180 	orr.w	r1, r1, #16384	; 0x4000
 800960a:	f8ca 1044 	str.w	r1, [sl, #68]	; 0x44
 800960e:	f8da 1044 	ldr.w	r1, [sl, #68]	; 0x44
 8009612:	f401 4180 	and.w	r1, r1, #16384	; 0x4000
 8009616:	9103      	str	r1, [sp, #12]
 8009618:	9903      	ldr	r1, [sp, #12]
        temp = SYSCFG->EXTICR[position >> 2U];
 800961a:	f023 0103 	bic.w	r1, r3, #3
 800961e:	f101 4180 	add.w	r1, r1, #1073741824	; 0x40000000
 8009622:	f501 319c 	add.w	r1, r1, #79872	; 0x13800
        temp &= ~(0x0FU << (4U * (position & 0x03U)));
 8009626:	f003 0703 	and.w	r7, r3, #3
        temp = SYSCFG->EXTICR[position >> 2U];
 800962a:	688d      	ldr	r5, [r1, #8]
        temp &= ~(0x0FU << (4U * (position & 0x03U)));
 800962c:	00bf      	lsls	r7, r7, #2
 800962e:	f04f 0e0f 	mov.w	lr, #15
 8009632:	fa0e fe07 	lsl.w	lr, lr, r7
 8009636:	ea25 080e 	bic.w	r8, r5, lr
        temp |= ((uint32_t)(GPIO_GET_INDEX(GPIOx)) << (4U * (position & 0x03U)));
 800963a:	4d70      	ldr	r5, [pc, #448]	; (80097fc <HAL_GPIO_Init+0x254>)
 800963c:	42a8      	cmp	r0, r5
 800963e:	d02e      	beq.n	800969e <HAL_GPIO_Init+0xf6>
 8009640:	f505 6580 	add.w	r5, r5, #1024	; 0x400
 8009644:	42a8      	cmp	r0, r5
 8009646:	f000 809f 	beq.w	8009788 <HAL_GPIO_Init+0x1e0>
 800964a:	4d6d      	ldr	r5, [pc, #436]	; (8009800 <HAL_GPIO_Init+0x258>)
 800964c:	42a8      	cmp	r0, r5
 800964e:	f000 80a2 	beq.w	8009796 <HAL_GPIO_Init+0x1ee>
 8009652:	4d6c      	ldr	r5, [pc, #432]	; (8009804 <HAL_GPIO_Init+0x25c>)
 8009654:	42a8      	cmp	r0, r5
 8009656:	f000 80a5 	beq.w	80097a4 <HAL_GPIO_Init+0x1fc>
 800965a:	4d6b      	ldr	r5, [pc, #428]	; (8009808 <HAL_GPIO_Init+0x260>)
 800965c:	42a8      	cmp	r0, r5
 800965e:	f000 80a8 	beq.w	80097b2 <HAL_GPIO_Init+0x20a>
 8009662:	4d6a      	ldr	r5, [pc, #424]	; (800980c <HAL_GPIO_Init+0x264>)
 8009664:	42a8      	cmp	r0, r5
 8009666:	f000 80b2 	beq.w	80097ce <HAL_GPIO_Init+0x226>
 800966a:	4d69      	ldr	r5, [pc, #420]	; (8009810 <HAL_GPIO_Init+0x268>)
 800966c:	42a8      	cmp	r0, r5
 800966e:	f000 80b5 	beq.w	80097dc <HAL_GPIO_Init+0x234>
 8009672:	f8df e1a4 	ldr.w	lr, [pc, #420]	; 8009818 <HAL_GPIO_Init+0x270>
 8009676:	4570      	cmp	r0, lr
 8009678:	f000 80a2 	beq.w	80097c0 <HAL_GPIO_Init+0x218>
 800967c:	f8df e19c 	ldr.w	lr, [pc, #412]	; 800981c <HAL_GPIO_Init+0x274>
 8009680:	4570      	cmp	r0, lr
 8009682:	f000 80b2 	beq.w	80097ea <HAL_GPIO_Init+0x242>
 8009686:	f8df e198 	ldr.w	lr, [pc, #408]	; 8009820 <HAL_GPIO_Init+0x278>
 800968a:	4570      	cmp	r0, lr
 800968c:	bf0c      	ite	eq
 800968e:	f04f 0e09 	moveq.w	lr, #9
 8009692:	f04f 0e0a 	movne.w	lr, #10
 8009696:	fa0e f707 	lsl.w	r7, lr, r7
 800969a:	ea48 0807 	orr.w	r8, r8, r7
        SYSCFG->EXTICR[position >> 2U] = temp;
 800969e:	f8c1 8008 	str.w	r8, [r1, #8]
        temp = EXTI->RTSR;
 80096a2:	68b1      	ldr	r1, [r6, #8]
        temp &= ~((uint32_t)iocurrent);
 80096a4:	ea6f 050b 	mvn.w	r5, fp
        if((GPIO_Init->Mode & TRIGGER_RISING) != 0x00U)
 80096a8:	f41c 1f80 	tst.w	ip, #1048576	; 0x100000
        temp &= ~((uint32_t)iocurrent);
 80096ac:	bf0c      	ite	eq
 80096ae:	4029      	andeq	r1, r5
        {
          temp |= iocurrent;
 80096b0:	ea4b 0101 	orrne.w	r1, fp, r1
        }
        EXTI->RTSR = temp;
 80096b4:	60b1      	str	r1, [r6, #8]

        temp = EXTI->FTSR;
 80096b6:	68f1      	ldr	r1, [r6, #12]
        temp &= ~((uint32_t)iocurrent);
        if((GPIO_Init->Mode & TRIGGER_FALLING) != 0x00U)
 80096b8:	f41c 1f00 	tst.w	ip, #2097152	; 0x200000
        temp &= ~((uint32_t)iocurrent);
 80096bc:	bf0c      	ite	eq
 80096be:	4029      	andeq	r1, r5
        {
          temp |= iocurrent;
 80096c0:	ea4b 0101 	orrne.w	r1, fp, r1
        }
        EXTI->FTSR = temp;
 80096c4:	60f1      	str	r1, [r6, #12]

        temp = EXTI->EMR;
 80096c6:	6871      	ldr	r1, [r6, #4]
        temp &= ~((uint32_t)iocurrent);
        if((GPIO_Init->Mode & EXTI_EVT) != 0x00U)
 80096c8:	f41c 3f00 	tst.w	ip, #131072	; 0x20000
        temp &= ~((uint32_t)iocurrent);
 80096cc:	bf0c      	ite	eq
 80096ce:	4029      	andeq	r1, r5
        {
          temp |= iocurrent;
 80096d0:	ea4b 0101 	orrne.w	r1, fp, r1
        }
        EXTI->EMR = temp;
 80096d4:	6071      	str	r1, [r6, #4]

        /* Clear EXTI line configuration */
        temp = EXTI->IMR;
 80096d6:	6831      	ldr	r1, [r6, #0]
        temp &= ~((uint32_t)iocurrent);
        if((GPIO_Init->Mode & EXTI_IT) != 0x00U)
 80096d8:	f41c 3f80 	tst.w	ip, #65536	; 0x10000
  for(position = 0U; position < GPIO_NUMBER; position++)
 80096dc:	f103 0301 	add.w	r3, r3, #1
        temp &= ~((uint32_t)iocurrent);
 80096e0:	bf0c      	ite	eq
 80096e2:	4029      	andeq	r1, r5
        {
          temp |= iocurrent;
 80096e4:	ea4b 0101 	orrne.w	r1, fp, r1
  for(position = 0U; position < GPIO_NUMBER; position++)
 80096e8:	2b10      	cmp	r3, #16
        }
        EXTI->IMR = temp;
 80096ea:	6031      	str	r1, [r6, #0]
  for(position = 0U; position < GPIO_NUMBER; position++)
 80096ec:	f102 0202 	add.w	r2, r2, #2
 80096f0:	f47f af6b 	bne.w	80095ca <HAL_GPIO_Init+0x22>
      }
    }
  }
}
 80096f4:	b005      	add	sp, #20
 80096f6:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
        temp |= (GPIO_Init->Speed << (position * 2U));
 80096fa:	f8d9 500c 	ldr.w	r5, [r9, #12]
        temp = GPIOx->OSPEEDR; 
 80096fe:	f8d0 e008 	ldr.w	lr, [r0, #8]
        temp |= (GPIO_Init->Speed << (position * 2U));
 8009702:	fa05 f702 	lsl.w	r7, r5, r2
        temp &= ~(GPIO_OSPEEDER_OSPEEDR0 << (position * 2U));
 8009706:	2503      	movs	r5, #3
 8009708:	fa05 f802 	lsl.w	r8, r5, r2
 800970c:	ea2e 0e08 	bic.w	lr, lr, r8
        temp |= (GPIO_Init->Speed << (position * 2U));
 8009710:	ea47 070e 	orr.w	r7, r7, lr
        GPIOx->OSPEEDR = temp;
 8009714:	6087      	str	r7, [r0, #8]
        temp = GPIOx->OTYPER;
 8009716:	6847      	ldr	r7, [r0, #4]
        temp &= ~(GPIO_OTYPER_OT_0 << position) ;
 8009718:	ea27 0e0b 	bic.w	lr, r7, fp
        temp |= (((GPIO_Init->Mode & OUTPUT_TYPE) >> OUTPUT_TYPE_Pos) << position);
 800971c:	f3cc 1700 	ubfx	r7, ip, #4, #1
 8009720:	409f      	lsls	r7, r3
 8009722:	ea47 070e 	orr.w	r7, r7, lr
        temp &= ~(GPIO_OSPEEDER_OSPEEDR0 << (position * 2U));
 8009726:	ea6f 0508 	mvn.w	r5, r8
        GPIOx->OTYPER = temp;
 800972a:	6047      	str	r7, [r0, #4]
        temp = GPIOx->PUPDR;
 800972c:	68c7      	ldr	r7, [r0, #12]
        temp &= ~(GPIO_PUPDR_PUPDR0 << (position * 2U));
 800972e:	ea07 0e05 	and.w	lr, r7, r5
        temp |= ((GPIO_Init->Pull) << (position * 2U));
 8009732:	f8d9 7008 	ldr.w	r7, [r9, #8]
 8009736:	4097      	lsls	r7, r2
 8009738:	ea47 070e 	orr.w	r7, r7, lr
      if((GPIO_Init->Mode & GPIO_MODE) == MODE_AF)
 800973c:	2902      	cmp	r1, #2
        GPIOx->PUPDR = temp;
 800973e:	60c7      	str	r7, [r0, #12]
      if((GPIO_Init->Mode & GPIO_MODE) == MODE_AF)
 8009740:	fa01 f102 	lsl.w	r1, r1, r2
 8009744:	f47f af54 	bne.w	80095f0 <HAL_GPIO_Init+0x48>
        temp = GPIOx->AFR[position >> 3U];
 8009748:	ea4f 0ed3 	mov.w	lr, r3, lsr #3
 800974c:	eb00 0e8e 	add.w	lr, r0, lr, lsl #2
        temp &= ~(0xFU << ((uint32_t)(position & 0x07U) * 4U)) ;
 8009750:	f003 0807 	and.w	r8, r3, #7
        temp = GPIOx->AFR[position >> 3U];
 8009754:	f8de 7020 	ldr.w	r7, [lr, #32]
 8009758:	9700      	str	r7, [sp, #0]
        temp |= ((uint32_t)(GPIO_Init->Alternate) << (((uint32_t)position & 0x07U) * 4U));
 800975a:	f8d9 7010 	ldr.w	r7, [r9, #16]
        temp &= ~(0xFU << ((uint32_t)(position & 0x07U) * 4U)) ;
 800975e:	ea4f 0888 	mov.w	r8, r8, lsl #2
        temp |= ((uint32_t)(GPIO_Init->Alternate) << (((uint32_t)position & 0x07U) * 4U));
 8009762:	fa07 f708 	lsl.w	r7, r7, r8
 8009766:	9701      	str	r7, [sp, #4]
        temp &= ~(0xFU << ((uint32_t)(position & 0x07U) * 4U)) ;
 8009768:	270f      	movs	r7, #15
 800976a:	fa07 f808 	lsl.w	r8, r7, r8
 800976e:	9f00      	ldr	r7, [sp, #0]
 8009770:	ea27 0808 	bic.w	r8, r7, r8
        temp |= ((uint32_t)(GPIO_Init->Alternate) << (((uint32_t)position & 0x07U) * 4U));
 8009774:	9f01      	ldr	r7, [sp, #4]
 8009776:	ea47 0708 	orr.w	r7, r7, r8
        GPIOx->AFR[position >> 3U] = temp;
 800977a:	f8ce 7020 	str.w	r7, [lr, #32]
 800977e:	e737      	b.n	80095f0 <HAL_GPIO_Init+0x48>
        temp &= ~(GPIO_OSPEEDER_OSPEEDR0 << (position * 2U));
 8009780:	2503      	movs	r5, #3
 8009782:	4095      	lsls	r5, r2
 8009784:	43ed      	mvns	r5, r5
 8009786:	e7d1      	b.n	800972c <HAL_GPIO_Init+0x184>
        temp |= ((uint32_t)(GPIO_GET_INDEX(GPIOx)) << (4U * (position & 0x03U)));
 8009788:	f04f 0e01 	mov.w	lr, #1
 800978c:	fa0e f707 	lsl.w	r7, lr, r7
 8009790:	ea48 0807 	orr.w	r8, r8, r7
 8009794:	e783      	b.n	800969e <HAL_GPIO_Init+0xf6>
 8009796:	f04f 0e02 	mov.w	lr, #2
 800979a:	fa0e f707 	lsl.w	r7, lr, r7
 800979e:	ea48 0807 	orr.w	r8, r8, r7
 80097a2:	e77c      	b.n	800969e <HAL_GPIO_Init+0xf6>
 80097a4:	f04f 0e03 	mov.w	lr, #3
 80097a8:	fa0e f707 	lsl.w	r7, lr, r7
 80097ac:	ea48 0807 	orr.w	r8, r8, r7
 80097b0:	e775      	b.n	800969e <HAL_GPIO_Init+0xf6>
 80097b2:	f04f 0e04 	mov.w	lr, #4
 80097b6:	fa0e f707 	lsl.w	r7, lr, r7
 80097ba:	ea48 0807 	orr.w	r8, r8, r7
 80097be:	e76e      	b.n	800969e <HAL_GPIO_Init+0xf6>
 80097c0:	f04f 0e07 	mov.w	lr, #7
 80097c4:	fa0e f707 	lsl.w	r7, lr, r7
 80097c8:	ea48 0807 	orr.w	r8, r8, r7
 80097cc:	e767      	b.n	800969e <HAL_GPIO_Init+0xf6>
 80097ce:	f04f 0e05 	mov.w	lr, #5
 80097d2:	fa0e f707 	lsl.w	r7, lr, r7
 80097d6:	ea48 0807 	orr.w	r8, r8, r7
 80097da:	e760      	b.n	800969e <HAL_GPIO_Init+0xf6>
 80097dc:	f04f 0e06 	mov.w	lr, #6
 80097e0:	fa0e f707 	lsl.w	r7, lr, r7
 80097e4:	ea48 0807 	orr.w	r8, r8, r7
 80097e8:	e759      	b.n	800969e <HAL_GPIO_Init+0xf6>
 80097ea:	f04f 0e08 	mov.w	lr, #8
 80097ee:	fa0e f707 	lsl.w	r7, lr, r7
 80097f2:	ea48 0807 	orr.w	r8, r8, r7
 80097f6:	e752      	b.n	800969e <HAL_GPIO_Init+0xf6>
 80097f8:	40013c00 	.word	0x40013c00
 80097fc:	40020000 	.word	0x40020000
 8009800:	40020800 	.word	0x40020800
 8009804:	40020c00 	.word	0x40020c00
 8009808:	40021000 	.word	0x40021000
 800980c:	40021400 	.word	0x40021400
 8009810:	40021800 	.word	0x40021800
 8009814:	40023800 	.word	0x40023800
 8009818:	40021c00 	.word	0x40021c00
 800981c:	40022000 	.word	0x40022000
 8009820:	40022400 	.word	0x40022400

08009824 <HAL_GPIO_ReadPin>:
  GPIO_PinState bitstatus;

  /* Check the parameters */
  assert_param(IS_GPIO_PIN(GPIO_Pin));

  if((GPIOx->IDR & GPIO_Pin) != (uint32_t)GPIO_PIN_RESET)
 8009824:	6903      	ldr	r3, [r0, #16]
 8009826:	4219      	tst	r1, r3
  else
  {
    bitstatus = GPIO_PIN_RESET;
  }
  return bitstatus;
}
 8009828:	bf14      	ite	ne
 800982a:	2001      	movne	r0, #1
 800982c:	2000      	moveq	r0, #0
 800982e:	4770      	bx	lr

08009830 <HAL_GPIO_WritePin>:
{
  /* Check the parameters */
  assert_param(IS_GPIO_PIN(GPIO_Pin));
  assert_param(IS_GPIO_PIN_ACTION(PinState));

  if(PinState != GPIO_PIN_RESET)
 8009830:	b902      	cbnz	r2, 8009834 <HAL_GPIO_WritePin+0x4>
  {
    GPIOx->BSRR = GPIO_Pin;
  }
  else
  {
    GPIOx->BSRR = (uint32_t)GPIO_Pin << 16U;
 8009832:	0409      	lsls	r1, r1, #16
 8009834:	6181      	str	r1, [r0, #24]
  }
}
 8009836:	4770      	bx	lr

08009838 <HAL_GPIO_TogglePin>:

  /* Check the parameters */
  assert_param(IS_GPIO_PIN(GPIO_Pin));

  /* get current Output Data Register value */
  odr = GPIOx->ODR;
 8009838:	6943      	ldr	r3, [r0, #20]

  /* Set selected pins that were at low level, and reset ones that were high */
  GPIOx->BSRR = ((odr & GPIO_Pin) << GPIO_NUMBER) | (~odr & GPIO_Pin);
 800983a:	ea01 0203 	and.w	r2, r1, r3
 800983e:	ea21 0103 	bic.w	r1, r1, r3
 8009842:	ea41 4102 	orr.w	r1, r1, r2, lsl #16
 8009846:	6181      	str	r1, [r0, #24]
}
 8009848:	4770      	bx	lr
 800984a:	bf00      	nop

0800984c <HAL_GPIO_EXTI_Callback>:
  /* Prevent unused argument(s) compilation warning */
  UNUSED(GPIO_Pin);
  /* NOTE: This function Should not be modified, when the callback is needed,
           the HAL_GPIO_EXTI_Callback could be implemented in the user file
   */
}
 800984c:	4770      	bx	lr
 800984e:	bf00      	nop

08009850 <HAL_GPIO_EXTI_IRQHandler>:
  if(__HAL_GPIO_EXTI_GET_IT(GPIO_Pin) != RESET)
 8009850:	4a04      	ldr	r2, [pc, #16]	; (8009864 <HAL_GPIO_EXTI_IRQHandler+0x14>)
 8009852:	6951      	ldr	r1, [r2, #20]
 8009854:	4201      	tst	r1, r0
 8009856:	d100      	bne.n	800985a <HAL_GPIO_EXTI_IRQHandler+0xa>
 8009858:	4770      	bx	lr
{
 800985a:	b508      	push	{r3, lr}
    __HAL_GPIO_EXTI_CLEAR_IT(GPIO_Pin);
 800985c:	6150      	str	r0, [r2, #20]
    HAL_GPIO_EXTI_Callback(GPIO_Pin);
 800985e:	f7ff fff5 	bl	800984c <HAL_GPIO_EXTI_Callback>
}
 8009862:	bd08      	pop	{r3, pc}
 8009864:	40013c00 	.word	0x40013c00

08009868 <I2C_RequestMemoryWrite>:
  * @param  Timeout Timeout duration
  * @param  Tickstart Tick start value
  * @retval HAL status
  */
static HAL_StatusTypeDef I2C_RequestMemoryWrite(I2C_HandleTypeDef *hi2c, uint16_t DevAddress, uint16_t MemAddress, uint16_t MemAddSize, uint32_t Timeout, uint32_t Tickstart)
{
 8009868:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
  /* Generate Start */
  SET_BIT(hi2c->Instance->CR1, I2C_CR1_START);
 800986c:	6804      	ldr	r4, [r0, #0]
{
 800986e:	b083      	sub	sp, #12
 8009870:	4698      	mov	r8, r3
  SET_BIT(hi2c->Instance->CR1, I2C_CR1_START);
 8009872:	6823      	ldr	r3, [r4, #0]
{
 8009874:	f8dd 9030 	ldr.w	r9, [sp, #48]	; 0x30
 8009878:	f8dd b034 	ldr.w	fp, [sp, #52]	; 0x34
  SET_BIT(hi2c->Instance->CR1, I2C_CR1_START);
 800987c:	f443 7380 	orr.w	r3, r3, #256	; 0x100
{
 8009880:	4606      	mov	r6, r0
 8009882:	468a      	mov	sl, r1
 8009884:	4617      	mov	r7, r2
  SET_BIT(hi2c->Instance->CR1, I2C_CR1_START);
 8009886:	6023      	str	r3, [r4, #0]
  * @param  Status The new Flag status (SET or RESET).
  * @param  Timeout Timeout duration
  * @param  Tickstart Tick start value
  * @retval HAL status
  */
static HAL_StatusTypeDef I2C_WaitOnFlagUntilTimeout(I2C_HandleTypeDef *hi2c, uint32_t Flag, FlagStatus Status, uint32_t Timeout, uint32_t Tickstart)
 8009888:	f1b9 3fff 	cmp.w	r9, #4294967295
 800988c:	d136      	bne.n	80098fc <I2C_RequestMemoryWrite+0x94>
{
  /* Wait until flag is set */
  while (__HAL_I2C_GET_FLAG(hi2c, Flag) == Status)
 800988e:	6965      	ldr	r5, [r4, #20]
 8009890:	07e8      	lsls	r0, r5, #31
 8009892:	d5fc      	bpl.n	800988e <I2C_RequestMemoryWrite+0x26>
  hi2c->Instance->DR = I2C_7BIT_ADD_WRITE(DevAddress);
 8009894:	f00a 03fe 	and.w	r3, sl, #254	; 0xfe
 8009898:	6123      	str	r3, [r4, #16]
  * @param  Flag specifies the I2C flag to check.
  * @param  Timeout Timeout duration
  * @param  Tickstart Tick start value
  * @retval HAL status
  */
static HAL_StatusTypeDef I2C_WaitOnMasterAddressFlagUntilTimeout(I2C_HandleTypeDef *hi2c, uint32_t Flag, uint32_t Timeout, uint32_t Tickstart)
 800989a:	f1b9 3fff 	cmp.w	r9, #4294967295
 800989e:	d003      	beq.n	80098a8 <I2C_RequestMemoryWrite+0x40>
 80098a0:	e04f      	b.n	8009942 <I2C_RequestMemoryWrite+0xda>
{
  while (__HAL_I2C_GET_FLAG(hi2c, Flag) == RESET)
  {
    if (__HAL_I2C_GET_FLAG(hi2c, I2C_FLAG_AF) == SET)
 80098a2:	6961      	ldr	r1, [r4, #20]
 80098a4:	054d      	lsls	r5, r1, #21
 80098a6:	d45d      	bmi.n	8009964 <I2C_RequestMemoryWrite+0xfc>
  while (__HAL_I2C_GET_FLAG(hi2c, Flag) == RESET)
 80098a8:	6961      	ldr	r1, [r4, #20]
 80098aa:	078b      	lsls	r3, r1, #30
 80098ac:	d5f9      	bpl.n	80098a2 <I2C_RequestMemoryWrite+0x3a>
  __HAL_I2C_CLEAR_ADDRFLAG(hi2c);
 80098ae:	2300      	movs	r3, #0
 80098b0:	9301      	str	r3, [sp, #4]
 80098b2:	6963      	ldr	r3, [r4, #20]
 80098b4:	9301      	str	r3, [sp, #4]
 80098b6:	69a3      	ldr	r3, [r4, #24]
 80098b8:	9301      	str	r3, [sp, #4]
 80098ba:	9b01      	ldr	r3, [sp, #4]
  * @param  Tickstart Tick start value
  * @retval HAL status
  */
static HAL_StatusTypeDef I2C_WaitOnTXEFlagUntilTimeout(I2C_HandleTypeDef *hi2c, uint32_t Timeout, uint32_t Tickstart)
{
  while (__HAL_I2C_GET_FLAG(hi2c, I2C_FLAG_TXE) == RESET)
 80098bc:	f1b9 3fff 	cmp.w	r9, #4294967295
 80098c0:	f040 8088 	bne.w	80099d4 <I2C_RequestMemoryWrite+0x16c>
 80098c4:	6963      	ldr	r3, [r4, #20]
 80098c6:	061a      	lsls	r2, r3, #24
 80098c8:	d464      	bmi.n	8009994 <I2C_RequestMemoryWrite+0x12c>
  *                the configuration information for the specified I2C.
  * @retval HAL status
  */
static HAL_StatusTypeDef I2C_IsAcknowledgeFailed(I2C_HandleTypeDef *hi2c)
{
  if (__HAL_I2C_GET_FLAG(hi2c, I2C_FLAG_AF) == SET)
 80098ca:	6963      	ldr	r3, [r4, #20]
 80098cc:	055b      	lsls	r3, r3, #21
 80098ce:	d5f9      	bpl.n	80098c4 <I2C_RequestMemoryWrite+0x5c>
  {
    /* Clear NACKF Flag */
    __HAL_I2C_CLEAR_FLAG(hi2c, I2C_FLAG_AF);

    hi2c->PreviousState       = I2C_STATE_NONE;
 80098d0:	2300      	movs	r3, #0
    __HAL_I2C_CLEAR_FLAG(hi2c, I2C_FLAG_AF);
 80098d2:	f46f 6180 	mvn.w	r1, #1024	; 0x400
    hi2c->State               = HAL_I2C_STATE_READY;
 80098d6:	2220      	movs	r2, #32
    __HAL_I2C_CLEAR_FLAG(hi2c, I2C_FLAG_AF);
 80098d8:	6161      	str	r1, [r4, #20]
    hi2c->PreviousState       = I2C_STATE_NONE;
 80098da:	6333      	str	r3, [r6, #48]	; 0x30
    hi2c->State               = HAL_I2C_STATE_READY;
 80098dc:	f886 203d 	strb.w	r2, [r6, #61]	; 0x3d
    hi2c->Mode                = HAL_I2C_MODE_NONE;
 80098e0:	f886 303e 	strb.w	r3, [r6, #62]	; 0x3e
    hi2c->ErrorCode           |= HAL_I2C_ERROR_AF;
 80098e4:	6c33      	ldr	r3, [r6, #64]	; 0x40
 80098e6:	f043 0304 	orr.w	r3, r3, #4
 80098ea:	6433      	str	r3, [r6, #64]	; 0x40
    if (hi2c->ErrorCode == HAL_I2C_ERROR_AF)
 80098ec:	6c33      	ldr	r3, [r6, #64]	; 0x40

    /* Process Unlocked */
    __HAL_UNLOCK(hi2c);
 80098ee:	2200      	movs	r2, #0
    if (hi2c->ErrorCode == HAL_I2C_ERROR_AF)
 80098f0:	2b04      	cmp	r3, #4
    __HAL_UNLOCK(hi2c);
 80098f2:	f886 203c 	strb.w	r2, [r6, #60]	; 0x3c
    if (hi2c->ErrorCode == HAL_I2C_ERROR_AF)
 80098f6:	d066      	beq.n	80099c6 <I2C_RequestMemoryWrite+0x15e>
    return HAL_ERROR;
 80098f8:	2001      	movs	r0, #1
 80098fa:	e01f      	b.n	800993c <I2C_RequestMemoryWrite+0xd4>
  while (__HAL_I2C_GET_FLAG(hi2c, Flag) == Status)
 80098fc:	6963      	ldr	r3, [r4, #20]
 80098fe:	07d9      	lsls	r1, r3, #31
 8009900:	d4c8      	bmi.n	8009894 <I2C_RequestMemoryWrite+0x2c>
      if (((HAL_GetTick() - Tickstart) > Timeout) || (Timeout == 0U))
 8009902:	f7ff fbbf 	bl	8009084 <HAL_GetTick>
 8009906:	eba0 000b 	sub.w	r0, r0, fp
 800990a:	4581      	cmp	r9, r0
 800990c:	d304      	bcc.n	8009918 <I2C_RequestMemoryWrite+0xb0>
 800990e:	f1b9 0f00 	cmp.w	r9, #0
 8009912:	d001      	beq.n	8009918 <I2C_RequestMemoryWrite+0xb0>
    if (READ_BIT(hi2c->Instance->CR1, I2C_CR1_START) == I2C_CR1_START)
 8009914:	6834      	ldr	r4, [r6, #0]
 8009916:	e7b7      	b.n	8009888 <I2C_RequestMemoryWrite+0x20>
        hi2c->PreviousState     = I2C_STATE_NONE;
 8009918:	2300      	movs	r3, #0
        hi2c->State             = HAL_I2C_STATE_READY;
 800991a:	2220      	movs	r2, #32
        hi2c->PreviousState     = I2C_STATE_NONE;
 800991c:	6333      	str	r3, [r6, #48]	; 0x30
        hi2c->State             = HAL_I2C_STATE_READY;
 800991e:	f886 203d 	strb.w	r2, [r6, #61]	; 0x3d
        hi2c->Mode              = HAL_I2C_MODE_NONE;
 8009922:	f886 303e 	strb.w	r3, [r6, #62]	; 0x3e
        hi2c->ErrorCode         |= HAL_I2C_ERROR_TIMEOUT;
 8009926:	6c32      	ldr	r2, [r6, #64]	; 0x40
    if (READ_BIT(hi2c->Instance->CR1, I2C_CR1_START) == I2C_CR1_START)
 8009928:	6831      	ldr	r1, [r6, #0]
        __HAL_UNLOCK(hi2c);
 800992a:	f886 303c 	strb.w	r3, [r6, #60]	; 0x3c
        hi2c->ErrorCode         |= HAL_I2C_ERROR_TIMEOUT;
 800992e:	f042 0220 	orr.w	r2, r2, #32
 8009932:	6432      	str	r2, [r6, #64]	; 0x40
    if (READ_BIT(hi2c->Instance->CR1, I2C_CR1_START) == I2C_CR1_START)
 8009934:	680b      	ldr	r3, [r1, #0]
 8009936:	05dc      	lsls	r4, r3, #23
 8009938:	d435      	bmi.n	80099a6 <I2C_RequestMemoryWrite+0x13e>
    return HAL_TIMEOUT;
 800993a:	2003      	movs	r0, #3
}
 800993c:	b003      	add	sp, #12
 800993e:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
  while (__HAL_I2C_GET_FLAG(hi2c, Flag) == RESET)
 8009942:	6963      	ldr	r3, [r4, #20]
 8009944:	0798      	lsls	r0, r3, #30
 8009946:	d4b2      	bmi.n	80098ae <I2C_RequestMemoryWrite+0x46>
    if (__HAL_I2C_GET_FLAG(hi2c, I2C_FLAG_AF) == SET)
 8009948:	6963      	ldr	r3, [r4, #20]
 800994a:	055a      	lsls	r2, r3, #21
 800994c:	d40a      	bmi.n	8009964 <I2C_RequestMemoryWrite+0xfc>
      if (((HAL_GetTick() - Tickstart) > Timeout) || (Timeout == 0U))
 800994e:	f7ff fb99 	bl	8009084 <HAL_GetTick>
 8009952:	eba0 000b 	sub.w	r0, r0, fp
 8009956:	4581      	cmp	r9, r0
 8009958:	d34e      	bcc.n	80099f8 <I2C_RequestMemoryWrite+0x190>
 800995a:	f1b9 0f00 	cmp.w	r9, #0
 800995e:	d04b      	beq.n	80099f8 <I2C_RequestMemoryWrite+0x190>
  while (__HAL_I2C_GET_FLAG(hi2c, Flag) == RESET)
 8009960:	6834      	ldr	r4, [r6, #0]
 8009962:	e79a      	b.n	800989a <I2C_RequestMemoryWrite+0x32>
      SET_BIT(hi2c->Instance->CR1, I2C_CR1_STOP);
 8009964:	6823      	ldr	r3, [r4, #0]
 8009966:	f443 7300 	orr.w	r3, r3, #512	; 0x200
 800996a:	6023      	str	r3, [r4, #0]
      hi2c->PreviousState       = I2C_STATE_NONE;
 800996c:	2200      	movs	r2, #0
      __HAL_I2C_CLEAR_FLAG(hi2c, I2C_FLAG_AF);
 800996e:	f46f 6180 	mvn.w	r1, #1024	; 0x400
      hi2c->State               = HAL_I2C_STATE_READY;
 8009972:	2320      	movs	r3, #32
      __HAL_I2C_CLEAR_FLAG(hi2c, I2C_FLAG_AF);
 8009974:	6161      	str	r1, [r4, #20]
      hi2c->PreviousState       = I2C_STATE_NONE;
 8009976:	6332      	str	r2, [r6, #48]	; 0x30
      hi2c->State               = HAL_I2C_STATE_READY;
 8009978:	f886 303d 	strb.w	r3, [r6, #61]	; 0x3d
      hi2c->Mode                = HAL_I2C_MODE_NONE;
 800997c:	f886 203e 	strb.w	r2, [r6, #62]	; 0x3e
      hi2c->ErrorCode           |= HAL_I2C_ERROR_AF;
 8009980:	6c33      	ldr	r3, [r6, #64]	; 0x40
      __HAL_UNLOCK(hi2c);
 8009982:	f886 203c 	strb.w	r2, [r6, #60]	; 0x3c
      hi2c->ErrorCode           |= HAL_I2C_ERROR_AF;
 8009986:	f043 0304 	orr.w	r3, r3, #4
    return HAL_ERROR;
 800998a:	2001      	movs	r0, #1
      hi2c->ErrorCode           |= HAL_I2C_ERROR_AF;
 800998c:	6433      	str	r3, [r6, #64]	; 0x40
}
 800998e:	b003      	add	sp, #12
 8009990:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
  if (MemAddSize == I2C_MEMADD_SIZE_8BIT)
 8009994:	f1b8 0f01 	cmp.w	r8, #1
 8009998:	d109      	bne.n	80099ae <I2C_RequestMemoryWrite+0x146>
    hi2c->Instance->DR = I2C_MEM_ADD_LSB(MemAddress);
 800999a:	b2ff      	uxtb	r7, r7
  return HAL_OK;
 800999c:	2000      	movs	r0, #0
    hi2c->Instance->DR = I2C_MEM_ADD_LSB(MemAddress);
 800999e:	6127      	str	r7, [r4, #16]
}
 80099a0:	b003      	add	sp, #12
 80099a2:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
      hi2c->ErrorCode = HAL_I2C_WRONG_START;
 80099a6:	f44f 7300 	mov.w	r3, #512	; 0x200
 80099aa:	6433      	str	r3, [r6, #64]	; 0x40
 80099ac:	e7c5      	b.n	800993a <I2C_RequestMemoryWrite+0xd2>
    hi2c->Instance->DR = I2C_MEM_ADD_MSB(MemAddress);
 80099ae:	0a3b      	lsrs	r3, r7, #8
 80099b0:	6123      	str	r3, [r4, #16]
  while (__HAL_I2C_GET_FLAG(hi2c, I2C_FLAG_TXE) == RESET)
 80099b2:	f1b9 3fff 	cmp.w	r9, #4294967295
 80099b6:	d12e      	bne.n	8009a16 <I2C_RequestMemoryWrite+0x1ae>
 80099b8:	6963      	ldr	r3, [r4, #20]
 80099ba:	0619      	lsls	r1, r3, #24
 80099bc:	d4ed      	bmi.n	800999a <I2C_RequestMemoryWrite+0x132>
  if (__HAL_I2C_GET_FLAG(hi2c, I2C_FLAG_AF) == SET)
 80099be:	6963      	ldr	r3, [r4, #20]
 80099c0:	055a      	lsls	r2, r3, #21
 80099c2:	d5f9      	bpl.n	80099b8 <I2C_RequestMemoryWrite+0x150>
 80099c4:	e784      	b.n	80098d0 <I2C_RequestMemoryWrite+0x68>
        SET_BIT(hi2c->Instance->CR1, I2C_CR1_STOP);
 80099c6:	6832      	ldr	r2, [r6, #0]
 80099c8:	6813      	ldr	r3, [r2, #0]
 80099ca:	f443 7300 	orr.w	r3, r3, #512	; 0x200
      return HAL_ERROR;
 80099ce:	2001      	movs	r0, #1
        SET_BIT(hi2c->Instance->CR1, I2C_CR1_STOP);
 80099d0:	6013      	str	r3, [r2, #0]
 80099d2:	e7b3      	b.n	800993c <I2C_RequestMemoryWrite+0xd4>
  while (__HAL_I2C_GET_FLAG(hi2c, I2C_FLAG_TXE) == RESET)
 80099d4:	6963      	ldr	r3, [r4, #20]
 80099d6:	061d      	lsls	r5, r3, #24
 80099d8:	d4dc      	bmi.n	8009994 <I2C_RequestMemoryWrite+0x12c>
  if (__HAL_I2C_GET_FLAG(hi2c, I2C_FLAG_AF) == SET)
 80099da:	6963      	ldr	r3, [r4, #20]
 80099dc:	0559      	lsls	r1, r3, #21
 80099de:	f53f af77 	bmi.w	80098d0 <I2C_RequestMemoryWrite+0x68>
      if (((HAL_GetTick() - Tickstart) > Timeout) || (Timeout == 0U))
 80099e2:	f7ff fb4f 	bl	8009084 <HAL_GetTick>
 80099e6:	eba0 000b 	sub.w	r0, r0, fp
 80099ea:	4581      	cmp	r9, r0
 80099ec:	d325      	bcc.n	8009a3a <I2C_RequestMemoryWrite+0x1d2>
 80099ee:	f1b9 0f00 	cmp.w	r9, #0
 80099f2:	d022      	beq.n	8009a3a <I2C_RequestMemoryWrite+0x1d2>
  while (__HAL_I2C_GET_FLAG(hi2c, I2C_FLAG_TXE) == RESET)
 80099f4:	6834      	ldr	r4, [r6, #0]
 80099f6:	e761      	b.n	80098bc <I2C_RequestMemoryWrite+0x54>
        hi2c->PreviousState       = I2C_STATE_NONE;
 80099f8:	2200      	movs	r2, #0
        hi2c->State               = HAL_I2C_STATE_READY;
 80099fa:	2320      	movs	r3, #32
        hi2c->PreviousState       = I2C_STATE_NONE;
 80099fc:	6332      	str	r2, [r6, #48]	; 0x30
        hi2c->State               = HAL_I2C_STATE_READY;
 80099fe:	f886 303d 	strb.w	r3, [r6, #61]	; 0x3d
        hi2c->Mode                = HAL_I2C_MODE_NONE;
 8009a02:	f886 203e 	strb.w	r2, [r6, #62]	; 0x3e
        hi2c->ErrorCode           |= HAL_I2C_ERROR_TIMEOUT;
 8009a06:	6c33      	ldr	r3, [r6, #64]	; 0x40
        __HAL_UNLOCK(hi2c);
 8009a08:	f886 203c 	strb.w	r2, [r6, #60]	; 0x3c
        hi2c->ErrorCode           |= HAL_I2C_ERROR_TIMEOUT;
 8009a0c:	f043 0320 	orr.w	r3, r3, #32
 8009a10:	6433      	str	r3, [r6, #64]	; 0x40
    return HAL_ERROR;
 8009a12:	2001      	movs	r0, #1
 8009a14:	e792      	b.n	800993c <I2C_RequestMemoryWrite+0xd4>
  while (__HAL_I2C_GET_FLAG(hi2c, I2C_FLAG_TXE) == RESET)
 8009a16:	6963      	ldr	r3, [r4, #20]
 8009a18:	061b      	lsls	r3, r3, #24
 8009a1a:	d4be      	bmi.n	800999a <I2C_RequestMemoryWrite+0x132>
  if (__HAL_I2C_GET_FLAG(hi2c, I2C_FLAG_AF) == SET)
 8009a1c:	6963      	ldr	r3, [r4, #20]
 8009a1e:	0558      	lsls	r0, r3, #21
 8009a20:	f53f af56 	bmi.w	80098d0 <I2C_RequestMemoryWrite+0x68>
      if (((HAL_GetTick() - Tickstart) > Timeout) || (Timeout == 0U))
 8009a24:	f7ff fb2e 	bl	8009084 <HAL_GetTick>
 8009a28:	eba0 000b 	sub.w	r0, r0, fp
 8009a2c:	4581      	cmp	r9, r0
 8009a2e:	d304      	bcc.n	8009a3a <I2C_RequestMemoryWrite+0x1d2>
 8009a30:	f1b9 0f00 	cmp.w	r9, #0
 8009a34:	d001      	beq.n	8009a3a <I2C_RequestMemoryWrite+0x1d2>
  while (__HAL_I2C_GET_FLAG(hi2c, I2C_FLAG_TXE) == RESET)
 8009a36:	6834      	ldr	r4, [r6, #0]
 8009a38:	e7bb      	b.n	80099b2 <I2C_RequestMemoryWrite+0x14a>
        hi2c->PreviousState     = I2C_STATE_NONE;
 8009a3a:	2300      	movs	r3, #0
        hi2c->State             = HAL_I2C_STATE_READY;
 8009a3c:	2220      	movs	r2, #32
        hi2c->PreviousState     = I2C_STATE_NONE;
 8009a3e:	6333      	str	r3, [r6, #48]	; 0x30
        hi2c->State             = HAL_I2C_STATE_READY;
 8009a40:	f886 203d 	strb.w	r2, [r6, #61]	; 0x3d
        hi2c->Mode              = HAL_I2C_MODE_NONE;
 8009a44:	f886 303e 	strb.w	r3, [r6, #62]	; 0x3e
        hi2c->ErrorCode         |= HAL_I2C_ERROR_TIMEOUT;
 8009a48:	6c33      	ldr	r3, [r6, #64]	; 0x40
 8009a4a:	4313      	orrs	r3, r2
 8009a4c:	6433      	str	r3, [r6, #64]	; 0x40
        return HAL_ERROR;
 8009a4e:	e74d      	b.n	80098ec <I2C_RequestMemoryWrite+0x84>

08009a50 <I2C_RequestMemoryRead>:
{
 8009a50:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
  SET_BIT(hi2c->Instance->CR1, I2C_CR1_ACK);
 8009a54:	6804      	ldr	r4, [r0, #0]
{
 8009a56:	4698      	mov	r8, r3
  SET_BIT(hi2c->Instance->CR1, I2C_CR1_ACK);
 8009a58:	6823      	ldr	r3, [r4, #0]
 8009a5a:	f443 6380 	orr.w	r3, r3, #1024	; 0x400
 8009a5e:	6023      	str	r3, [r4, #0]
  SET_BIT(hi2c->Instance->CR1, I2C_CR1_START);
 8009a60:	6823      	ldr	r3, [r4, #0]
{
 8009a62:	b083      	sub	sp, #12
  SET_BIT(hi2c->Instance->CR1, I2C_CR1_START);
 8009a64:	f443 7380 	orr.w	r3, r3, #256	; 0x100
{
 8009a68:	f8dd a030 	ldr.w	sl, [sp, #48]	; 0x30
 8009a6c:	f8dd 9034 	ldr.w	r9, [sp, #52]	; 0x34
  SET_BIT(hi2c->Instance->CR1, I2C_CR1_START);
 8009a70:	6023      	str	r3, [r4, #0]
{
 8009a72:	4606      	mov	r6, r0
 8009a74:	468b      	mov	fp, r1
 8009a76:	4617      	mov	r7, r2
 8009a78:	f1ba 3fff 	cmp.w	sl, #4294967295
 8009a7c:	d13a      	bne.n	8009af4 <I2C_RequestMemoryRead+0xa4>
  while (__HAL_I2C_GET_FLAG(hi2c, Flag) == Status)
 8009a7e:	6965      	ldr	r5, [r4, #20]
 8009a80:	07eb      	lsls	r3, r5, #31
 8009a82:	d5fc      	bpl.n	8009a7e <I2C_RequestMemoryRead+0x2e>
  hi2c->Instance->DR = I2C_7BIT_ADD_WRITE(DevAddress);
 8009a84:	f00b 03fe 	and.w	r3, fp, #254	; 0xfe
 8009a88:	6123      	str	r3, [r4, #16]
 8009a8a:	fa5f fb8b 	uxtb.w	fp, fp
 8009a8e:	f1ba 3fff 	cmp.w	sl, #4294967295
 8009a92:	d003      	beq.n	8009a9c <I2C_RequestMemoryRead+0x4c>
 8009a94:	e069      	b.n	8009b6a <I2C_RequestMemoryRead+0x11a>
    if (__HAL_I2C_GET_FLAG(hi2c, I2C_FLAG_AF) == SET)
 8009a96:	6965      	ldr	r5, [r4, #20]
 8009a98:	056a      	lsls	r2, r5, #21
 8009a9a:	d44e      	bmi.n	8009b3a <I2C_RequestMemoryRead+0xea>
  while (__HAL_I2C_GET_FLAG(hi2c, Flag) == RESET)
 8009a9c:	6965      	ldr	r5, [r4, #20]
 8009a9e:	07a9      	lsls	r1, r5, #30
 8009aa0:	d5f9      	bpl.n	8009a96 <I2C_RequestMemoryRead+0x46>
  __HAL_I2C_CLEAR_ADDRFLAG(hi2c);
 8009aa2:	2300      	movs	r3, #0
 8009aa4:	9301      	str	r3, [sp, #4]
 8009aa6:	6963      	ldr	r3, [r4, #20]
 8009aa8:	9301      	str	r3, [sp, #4]
 8009aaa:	69a3      	ldr	r3, [r4, #24]
 8009aac:	9301      	str	r3, [sp, #4]
 8009aae:	9b01      	ldr	r3, [sp, #4]
  while (__HAL_I2C_GET_FLAG(hi2c, I2C_FLAG_TXE) == RESET)
 8009ab0:	f1ba 3fff 	cmp.w	sl, #4294967295
 8009ab4:	f040 80bd 	bne.w	8009c32 <I2C_RequestMemoryRead+0x1e2>
 8009ab8:	6963      	ldr	r3, [r4, #20]
 8009aba:	0618      	lsls	r0, r3, #24
 8009abc:	d468      	bmi.n	8009b90 <I2C_RequestMemoryRead+0x140>
  if (__HAL_I2C_GET_FLAG(hi2c, I2C_FLAG_AF) == SET)
 8009abe:	6963      	ldr	r3, [r4, #20]
 8009ac0:	0559      	lsls	r1, r3, #21
 8009ac2:	d5f9      	bpl.n	8009ab8 <I2C_RequestMemoryRead+0x68>
    hi2c->PreviousState       = I2C_STATE_NONE;
 8009ac4:	2300      	movs	r3, #0
    __HAL_I2C_CLEAR_FLAG(hi2c, I2C_FLAG_AF);
 8009ac6:	f46f 6180 	mvn.w	r1, #1024	; 0x400
    hi2c->State               = HAL_I2C_STATE_READY;
 8009aca:	2220      	movs	r2, #32
    __HAL_I2C_CLEAR_FLAG(hi2c, I2C_FLAG_AF);
 8009acc:	6161      	str	r1, [r4, #20]
    hi2c->PreviousState       = I2C_STATE_NONE;
 8009ace:	6333      	str	r3, [r6, #48]	; 0x30
    hi2c->State               = HAL_I2C_STATE_READY;
 8009ad0:	f886 203d 	strb.w	r2, [r6, #61]	; 0x3d
    hi2c->Mode                = HAL_I2C_MODE_NONE;
 8009ad4:	f886 303e 	strb.w	r3, [r6, #62]	; 0x3e
    hi2c->ErrorCode           |= HAL_I2C_ERROR_AF;
 8009ad8:	6c33      	ldr	r3, [r6, #64]	; 0x40
 8009ada:	f043 0304 	orr.w	r3, r3, #4
 8009ade:	6433      	str	r3, [r6, #64]	; 0x40
    if (hi2c->ErrorCode == HAL_I2C_ERROR_AF)
 8009ae0:	6c33      	ldr	r3, [r6, #64]	; 0x40
    __HAL_UNLOCK(hi2c);
 8009ae2:	2200      	movs	r2, #0
    if (hi2c->ErrorCode == HAL_I2C_ERROR_AF)
 8009ae4:	2b04      	cmp	r3, #4
    __HAL_UNLOCK(hi2c);
 8009ae6:	f886 203c 	strb.w	r2, [r6, #60]	; 0x3c
    if (hi2c->ErrorCode == HAL_I2C_ERROR_AF)
 8009aea:	d070      	beq.n	8009bce <I2C_RequestMemoryRead+0x17e>
    return HAL_ERROR;
 8009aec:	2001      	movs	r0, #1
}
 8009aee:	b003      	add	sp, #12
 8009af0:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
  while (__HAL_I2C_GET_FLAG(hi2c, Flag) == Status)
 8009af4:	6963      	ldr	r3, [r4, #20]
 8009af6:	07dd      	lsls	r5, r3, #31
 8009af8:	d4c4      	bmi.n	8009a84 <I2C_RequestMemoryRead+0x34>
      if (((HAL_GetTick() - Tickstart) > Timeout) || (Timeout == 0U))
 8009afa:	f7ff fac3 	bl	8009084 <HAL_GetTick>
 8009afe:	eba0 0009 	sub.w	r0, r0, r9
 8009b02:	4582      	cmp	sl, r0
 8009b04:	d304      	bcc.n	8009b10 <I2C_RequestMemoryRead+0xc0>
 8009b06:	f1ba 0f00 	cmp.w	sl, #0
 8009b0a:	d001      	beq.n	8009b10 <I2C_RequestMemoryRead+0xc0>
    if (READ_BIT(hi2c->Instance->CR1, I2C_CR1_START) == I2C_CR1_START)
 8009b0c:	6834      	ldr	r4, [r6, #0]
 8009b0e:	e7b3      	b.n	8009a78 <I2C_RequestMemoryRead+0x28>
        hi2c->PreviousState     = I2C_STATE_NONE;
 8009b10:	2300      	movs	r3, #0
        hi2c->State             = HAL_I2C_STATE_READY;
 8009b12:	2220      	movs	r2, #32
        hi2c->PreviousState     = I2C_STATE_NONE;
 8009b14:	6333      	str	r3, [r6, #48]	; 0x30
        hi2c->State             = HAL_I2C_STATE_READY;
 8009b16:	f886 203d 	strb.w	r2, [r6, #61]	; 0x3d
        hi2c->Mode              = HAL_I2C_MODE_NONE;
 8009b1a:	f886 303e 	strb.w	r3, [r6, #62]	; 0x3e
        hi2c->ErrorCode         |= HAL_I2C_ERROR_TIMEOUT;
 8009b1e:	6c32      	ldr	r2, [r6, #64]	; 0x40
    if (READ_BIT(hi2c->Instance->CR1, I2C_CR1_START) == I2C_CR1_START)
 8009b20:	6831      	ldr	r1, [r6, #0]
        __HAL_UNLOCK(hi2c);
 8009b22:	f886 303c 	strb.w	r3, [r6, #60]	; 0x3c
        hi2c->ErrorCode         |= HAL_I2C_ERROR_TIMEOUT;
 8009b26:	f042 0220 	orr.w	r2, r2, #32
 8009b2a:	6432      	str	r2, [r6, #64]	; 0x40
    if (READ_BIT(hi2c->Instance->CR1, I2C_CR1_START) == I2C_CR1_START)
 8009b2c:	680b      	ldr	r3, [r1, #0]
 8009b2e:	05dc      	lsls	r4, r3, #23
 8009b30:	d43d      	bmi.n	8009bae <I2C_RequestMemoryRead+0x15e>
    return HAL_TIMEOUT;
 8009b32:	2003      	movs	r0, #3
}
 8009b34:	b003      	add	sp, #12
 8009b36:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
      SET_BIT(hi2c->Instance->CR1, I2C_CR1_STOP);
 8009b3a:	6823      	ldr	r3, [r4, #0]
 8009b3c:	f443 7300 	orr.w	r3, r3, #512	; 0x200
 8009b40:	6023      	str	r3, [r4, #0]
      hi2c->PreviousState       = I2C_STATE_NONE;
 8009b42:	2200      	movs	r2, #0
      __HAL_I2C_CLEAR_FLAG(hi2c, I2C_FLAG_AF);
 8009b44:	f46f 6180 	mvn.w	r1, #1024	; 0x400
      hi2c->State               = HAL_I2C_STATE_READY;
 8009b48:	2320      	movs	r3, #32
      __HAL_I2C_CLEAR_FLAG(hi2c, I2C_FLAG_AF);
 8009b4a:	6161      	str	r1, [r4, #20]
      hi2c->PreviousState       = I2C_STATE_NONE;
 8009b4c:	6332      	str	r2, [r6, #48]	; 0x30
      hi2c->State               = HAL_I2C_STATE_READY;
 8009b4e:	f886 303d 	strb.w	r3, [r6, #61]	; 0x3d
      hi2c->Mode                = HAL_I2C_MODE_NONE;
 8009b52:	f886 203e 	strb.w	r2, [r6, #62]	; 0x3e
      hi2c->ErrorCode           |= HAL_I2C_ERROR_AF;
 8009b56:	6c33      	ldr	r3, [r6, #64]	; 0x40
      __HAL_UNLOCK(hi2c);
 8009b58:	f886 203c 	strb.w	r2, [r6, #60]	; 0x3c
      hi2c->ErrorCode           |= HAL_I2C_ERROR_AF;
 8009b5c:	f043 0304 	orr.w	r3, r3, #4
    return HAL_ERROR;
 8009b60:	2001      	movs	r0, #1
      hi2c->ErrorCode           |= HAL_I2C_ERROR_AF;
 8009b62:	6433      	str	r3, [r6, #64]	; 0x40
}
 8009b64:	b003      	add	sp, #12
 8009b66:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
  while (__HAL_I2C_GET_FLAG(hi2c, Flag) == RESET)
 8009b6a:	6963      	ldr	r3, [r4, #20]
 8009b6c:	079b      	lsls	r3, r3, #30
 8009b6e:	d498      	bmi.n	8009aa2 <I2C_RequestMemoryRead+0x52>
    if (__HAL_I2C_GET_FLAG(hi2c, I2C_FLAG_AF) == SET)
 8009b70:	6963      	ldr	r3, [r4, #20]
 8009b72:	0558      	lsls	r0, r3, #21
 8009b74:	d4e1      	bmi.n	8009b3a <I2C_RequestMemoryRead+0xea>
      if (((HAL_GetTick() - Tickstart) > Timeout) || (Timeout == 0U))
 8009b76:	f7ff fa85 	bl	8009084 <HAL_GetTick>
 8009b7a:	eba0 0009 	sub.w	r0, r0, r9
 8009b7e:	4582      	cmp	sl, r0
 8009b80:	f0c0 808f 	bcc.w	8009ca2 <I2C_RequestMemoryRead+0x252>
 8009b84:	f1ba 0f00 	cmp.w	sl, #0
 8009b88:	f000 808b 	beq.w	8009ca2 <I2C_RequestMemoryRead+0x252>
  while (__HAL_I2C_GET_FLAG(hi2c, Flag) == RESET)
 8009b8c:	6834      	ldr	r4, [r6, #0]
 8009b8e:	e77e      	b.n	8009a8e <I2C_RequestMemoryRead+0x3e>
  if (MemAddSize == I2C_MEMADD_SIZE_8BIT)
 8009b90:	f1b8 0f01 	cmp.w	r8, #1
 8009b94:	d10f      	bne.n	8009bb6 <I2C_RequestMemoryRead+0x166>
    hi2c->Instance->DR = I2C_MEM_ADD_LSB(MemAddress);
 8009b96:	b2ff      	uxtb	r7, r7
 8009b98:	6127      	str	r7, [r4, #16]
 8009b9a:	f1ba 3fff 	cmp.w	sl, #4294967295
 8009b9e:	d16e      	bne.n	8009c7e <I2C_RequestMemoryRead+0x22e>
  while (__HAL_I2C_GET_FLAG(hi2c, I2C_FLAG_TXE) == RESET)
 8009ba0:	6963      	ldr	r3, [r4, #20]
 8009ba2:	061b      	lsls	r3, r3, #24
 8009ba4:	d41a      	bmi.n	8009bdc <I2C_RequestMemoryRead+0x18c>
  if (__HAL_I2C_GET_FLAG(hi2c, I2C_FLAG_AF) == SET)
 8009ba6:	6963      	ldr	r3, [r4, #20]
 8009ba8:	055f      	lsls	r7, r3, #21
 8009baa:	d5f9      	bpl.n	8009ba0 <I2C_RequestMemoryRead+0x150>
 8009bac:	e78a      	b.n	8009ac4 <I2C_RequestMemoryRead+0x74>
      hi2c->ErrorCode = HAL_I2C_WRONG_START;
 8009bae:	f44f 7300 	mov.w	r3, #512	; 0x200
 8009bb2:	6433      	str	r3, [r6, #64]	; 0x40
 8009bb4:	e7bd      	b.n	8009b32 <I2C_RequestMemoryRead+0xe2>
    hi2c->Instance->DR = I2C_MEM_ADD_MSB(MemAddress);
 8009bb6:	0a3b      	lsrs	r3, r7, #8
 8009bb8:	6123      	str	r3, [r4, #16]
  while (__HAL_I2C_GET_FLAG(hi2c, I2C_FLAG_TXE) == RESET)
 8009bba:	f1ba 3fff 	cmp.w	sl, #4294967295
 8009bbe:	d17e      	bne.n	8009cbe <I2C_RequestMemoryRead+0x26e>
 8009bc0:	6963      	ldr	r3, [r4, #20]
 8009bc2:	061d      	lsls	r5, r3, #24
 8009bc4:	d4e7      	bmi.n	8009b96 <I2C_RequestMemoryRead+0x146>
  if (__HAL_I2C_GET_FLAG(hi2c, I2C_FLAG_AF) == SET)
 8009bc6:	6963      	ldr	r3, [r4, #20]
 8009bc8:	0558      	lsls	r0, r3, #21
 8009bca:	d5f9      	bpl.n	8009bc0 <I2C_RequestMemoryRead+0x170>
 8009bcc:	e77a      	b.n	8009ac4 <I2C_RequestMemoryRead+0x74>
      SET_BIT(hi2c->Instance->CR1, I2C_CR1_STOP);
 8009bce:	6832      	ldr	r2, [r6, #0]
 8009bd0:	6813      	ldr	r3, [r2, #0]
 8009bd2:	f443 7300 	orr.w	r3, r3, #512	; 0x200
    return HAL_ERROR;
 8009bd6:	2001      	movs	r0, #1
      SET_BIT(hi2c->Instance->CR1, I2C_CR1_STOP);
 8009bd8:	6013      	str	r3, [r2, #0]
 8009bda:	e7ab      	b.n	8009b34 <I2C_RequestMemoryRead+0xe4>
  SET_BIT(hi2c->Instance->CR1, I2C_CR1_START);
 8009bdc:	6823      	ldr	r3, [r4, #0]
 8009bde:	f443 7380 	orr.w	r3, r3, #256	; 0x100
 8009be2:	6023      	str	r3, [r4, #0]
static HAL_StatusTypeDef I2C_WaitOnFlagUntilTimeout(I2C_HandleTypeDef *hi2c, uint32_t Flag, FlagStatus Status, uint32_t Timeout, uint32_t Tickstart)
 8009be4:	f1ba 3fff 	cmp.w	sl, #4294967295
 8009be8:	d113      	bne.n	8009c12 <I2C_RequestMemoryRead+0x1c2>
  while (__HAL_I2C_GET_FLAG(hi2c, Flag) == Status)
 8009bea:	6963      	ldr	r3, [r4, #20]
 8009bec:	07d8      	lsls	r0, r3, #31
 8009bee:	d5fc      	bpl.n	8009bea <I2C_RequestMemoryRead+0x19a>
  hi2c->Instance->DR = I2C_7BIT_ADD_READ(DevAddress);
 8009bf0:	f04b 0301 	orr.w	r3, fp, #1
 8009bf4:	6123      	str	r3, [r4, #16]
static HAL_StatusTypeDef I2C_WaitOnMasterAddressFlagUntilTimeout(I2C_HandleTypeDef *hi2c, uint32_t Flag, uint32_t Timeout, uint32_t Tickstart)
 8009bf6:	f1ba 3fff 	cmp.w	sl, #4294967295
 8009bfa:	d003      	beq.n	8009c04 <I2C_RequestMemoryRead+0x1b4>
 8009bfc:	e02b      	b.n	8009c56 <I2C_RequestMemoryRead+0x206>
    if (__HAL_I2C_GET_FLAG(hi2c, I2C_FLAG_AF) == SET)
 8009bfe:	6963      	ldr	r3, [r4, #20]
 8009c00:	055b      	lsls	r3, r3, #21
 8009c02:	d49a      	bmi.n	8009b3a <I2C_RequestMemoryRead+0xea>
  while (__HAL_I2C_GET_FLAG(hi2c, Flag) == RESET)
 8009c04:	6963      	ldr	r3, [r4, #20]
 8009c06:	43db      	mvns	r3, r3
 8009c08:	f013 0302 	ands.w	r3, r3, #2
 8009c0c:	d1f7      	bne.n	8009bfe <I2C_RequestMemoryRead+0x1ae>
  return HAL_OK;
 8009c0e:	4618      	mov	r0, r3
 8009c10:	e790      	b.n	8009b34 <I2C_RequestMemoryRead+0xe4>
  while (__HAL_I2C_GET_FLAG(hi2c, Flag) == Status)
 8009c12:	6963      	ldr	r3, [r4, #20]
 8009c14:	07d9      	lsls	r1, r3, #31
 8009c16:	d4eb      	bmi.n	8009bf0 <I2C_RequestMemoryRead+0x1a0>
      if (((HAL_GetTick() - Tickstart) > Timeout) || (Timeout == 0U))
 8009c18:	f7ff fa34 	bl	8009084 <HAL_GetTick>
 8009c1c:	eba0 0009 	sub.w	r0, r0, r9
 8009c20:	4582      	cmp	sl, r0
 8009c22:	f4ff af75 	bcc.w	8009b10 <I2C_RequestMemoryRead+0xc0>
 8009c26:	f1ba 0f00 	cmp.w	sl, #0
 8009c2a:	f43f af71 	beq.w	8009b10 <I2C_RequestMemoryRead+0xc0>
    if (READ_BIT(hi2c->Instance->CR1, I2C_CR1_START) == I2C_CR1_START)
 8009c2e:	6834      	ldr	r4, [r6, #0]
 8009c30:	e7d8      	b.n	8009be4 <I2C_RequestMemoryRead+0x194>
  while (__HAL_I2C_GET_FLAG(hi2c, I2C_FLAG_TXE) == RESET)
 8009c32:	6963      	ldr	r3, [r4, #20]
 8009c34:	061a      	lsls	r2, r3, #24
 8009c36:	d4ab      	bmi.n	8009b90 <I2C_RequestMemoryRead+0x140>
  if (__HAL_I2C_GET_FLAG(hi2c, I2C_FLAG_AF) == SET)
 8009c38:	6963      	ldr	r3, [r4, #20]
 8009c3a:	055d      	lsls	r5, r3, #21
 8009c3c:	f53f af42 	bmi.w	8009ac4 <I2C_RequestMemoryRead+0x74>
      if (((HAL_GetTick() - Tickstart) > Timeout) || (Timeout == 0U))
 8009c40:	f7ff fa20 	bl	8009084 <HAL_GetTick>
 8009c44:	eba0 0009 	sub.w	r0, r0, r9
 8009c48:	4582      	cmp	sl, r0
 8009c4a:	d34b      	bcc.n	8009ce4 <I2C_RequestMemoryRead+0x294>
 8009c4c:	f1ba 0f00 	cmp.w	sl, #0
 8009c50:	d048      	beq.n	8009ce4 <I2C_RequestMemoryRead+0x294>
  while (__HAL_I2C_GET_FLAG(hi2c, I2C_FLAG_TXE) == RESET)
 8009c52:	6834      	ldr	r4, [r6, #0]
 8009c54:	e72c      	b.n	8009ab0 <I2C_RequestMemoryRead+0x60>
  while (__HAL_I2C_GET_FLAG(hi2c, Flag) == RESET)
 8009c56:	6963      	ldr	r3, [r4, #20]
 8009c58:	43db      	mvns	r3, r3
 8009c5a:	f013 0302 	ands.w	r3, r3, #2
 8009c5e:	d0d6      	beq.n	8009c0e <I2C_RequestMemoryRead+0x1be>
    if (__HAL_I2C_GET_FLAG(hi2c, I2C_FLAG_AF) == SET)
 8009c60:	6963      	ldr	r3, [r4, #20]
 8009c62:	055a      	lsls	r2, r3, #21
 8009c64:	f53f af69 	bmi.w	8009b3a <I2C_RequestMemoryRead+0xea>
      if (((HAL_GetTick() - Tickstart) > Timeout) || (Timeout == 0U))
 8009c68:	f7ff fa0c 	bl	8009084 <HAL_GetTick>
 8009c6c:	eba0 0009 	sub.w	r0, r0, r9
 8009c70:	4582      	cmp	sl, r0
 8009c72:	d316      	bcc.n	8009ca2 <I2C_RequestMemoryRead+0x252>
 8009c74:	f1ba 0f00 	cmp.w	sl, #0
 8009c78:	d013      	beq.n	8009ca2 <I2C_RequestMemoryRead+0x252>
  while (__HAL_I2C_GET_FLAG(hi2c, Flag) == RESET)
 8009c7a:	6834      	ldr	r4, [r6, #0]
 8009c7c:	e7bb      	b.n	8009bf6 <I2C_RequestMemoryRead+0x1a6>
  while (__HAL_I2C_GET_FLAG(hi2c, I2C_FLAG_TXE) == RESET)
 8009c7e:	6963      	ldr	r3, [r4, #20]
 8009c80:	061d      	lsls	r5, r3, #24
 8009c82:	d4ab      	bmi.n	8009bdc <I2C_RequestMemoryRead+0x18c>
  if (__HAL_I2C_GET_FLAG(hi2c, I2C_FLAG_AF) == SET)
 8009c84:	6963      	ldr	r3, [r4, #20]
 8009c86:	055a      	lsls	r2, r3, #21
 8009c88:	f53f af1c 	bmi.w	8009ac4 <I2C_RequestMemoryRead+0x74>
      if (((HAL_GetTick() - Tickstart) > Timeout) || (Timeout == 0U))
 8009c8c:	f7ff f9fa 	bl	8009084 <HAL_GetTick>
 8009c90:	eba0 0009 	sub.w	r0, r0, r9
 8009c94:	4582      	cmp	sl, r0
 8009c96:	d325      	bcc.n	8009ce4 <I2C_RequestMemoryRead+0x294>
 8009c98:	f1ba 0f00 	cmp.w	sl, #0
 8009c9c:	d022      	beq.n	8009ce4 <I2C_RequestMemoryRead+0x294>
  while (__HAL_I2C_GET_FLAG(hi2c, I2C_FLAG_TXE) == RESET)
 8009c9e:	6834      	ldr	r4, [r6, #0]
 8009ca0:	e77b      	b.n	8009b9a <I2C_RequestMemoryRead+0x14a>
        hi2c->PreviousState       = I2C_STATE_NONE;
 8009ca2:	2200      	movs	r2, #0
        hi2c->State               = HAL_I2C_STATE_READY;
 8009ca4:	2320      	movs	r3, #32
        hi2c->PreviousState       = I2C_STATE_NONE;
 8009ca6:	6332      	str	r2, [r6, #48]	; 0x30
        hi2c->State               = HAL_I2C_STATE_READY;
 8009ca8:	f886 303d 	strb.w	r3, [r6, #61]	; 0x3d
        hi2c->Mode                = HAL_I2C_MODE_NONE;
 8009cac:	f886 203e 	strb.w	r2, [r6, #62]	; 0x3e
        hi2c->ErrorCode           |= HAL_I2C_ERROR_TIMEOUT;
 8009cb0:	6c33      	ldr	r3, [r6, #64]	; 0x40
        __HAL_UNLOCK(hi2c);
 8009cb2:	f886 203c 	strb.w	r2, [r6, #60]	; 0x3c
        hi2c->ErrorCode           |= HAL_I2C_ERROR_TIMEOUT;
 8009cb6:	f043 0320 	orr.w	r3, r3, #32
 8009cba:	6433      	str	r3, [r6, #64]	; 0x40
 8009cbc:	e716      	b.n	8009aec <I2C_RequestMemoryRead+0x9c>
  while (__HAL_I2C_GET_FLAG(hi2c, I2C_FLAG_TXE) == RESET)
 8009cbe:	6963      	ldr	r3, [r4, #20]
 8009cc0:	0619      	lsls	r1, r3, #24
 8009cc2:	f53f af68 	bmi.w	8009b96 <I2C_RequestMemoryRead+0x146>
  if (__HAL_I2C_GET_FLAG(hi2c, I2C_FLAG_AF) == SET)
 8009cc6:	6963      	ldr	r3, [r4, #20]
 8009cc8:	055b      	lsls	r3, r3, #21
 8009cca:	f53f aefb 	bmi.w	8009ac4 <I2C_RequestMemoryRead+0x74>
      if (((HAL_GetTick() - Tickstart) > Timeout) || (Timeout == 0U))
 8009cce:	f7ff f9d9 	bl	8009084 <HAL_GetTick>
 8009cd2:	eba0 0009 	sub.w	r0, r0, r9
 8009cd6:	4582      	cmp	sl, r0
 8009cd8:	d304      	bcc.n	8009ce4 <I2C_RequestMemoryRead+0x294>
 8009cda:	f1ba 0f00 	cmp.w	sl, #0
 8009cde:	d001      	beq.n	8009ce4 <I2C_RequestMemoryRead+0x294>
  while (__HAL_I2C_GET_FLAG(hi2c, I2C_FLAG_TXE) == RESET)
 8009ce0:	6834      	ldr	r4, [r6, #0]
 8009ce2:	e76a      	b.n	8009bba <I2C_RequestMemoryRead+0x16a>
        hi2c->PreviousState     = I2C_STATE_NONE;
 8009ce4:	2300      	movs	r3, #0
        hi2c->State             = HAL_I2C_STATE_READY;
 8009ce6:	2220      	movs	r2, #32
        hi2c->PreviousState     = I2C_STATE_NONE;
 8009ce8:	6333      	str	r3, [r6, #48]	; 0x30
        hi2c->State             = HAL_I2C_STATE_READY;
 8009cea:	f886 203d 	strb.w	r2, [r6, #61]	; 0x3d
        hi2c->Mode              = HAL_I2C_MODE_NONE;
 8009cee:	f886 303e 	strb.w	r3, [r6, #62]	; 0x3e
        hi2c->ErrorCode         |= HAL_I2C_ERROR_TIMEOUT;
 8009cf2:	6c33      	ldr	r3, [r6, #64]	; 0x40
 8009cf4:	4313      	orrs	r3, r2
 8009cf6:	6433      	str	r3, [r6, #64]	; 0x40
        return HAL_ERROR;
 8009cf8:	e6f2      	b.n	8009ae0 <I2C_RequestMemoryRead+0x90>
 8009cfa:	bf00      	nop

08009cfc <HAL_I2C_Init>:
  if (hi2c == NULL)
 8009cfc:	2800      	cmp	r0, #0
 8009cfe:	f000 80b9 	beq.w	8009e74 <HAL_I2C_Init+0x178>
{
 8009d02:	b570      	push	{r4, r5, r6, lr}
  if (hi2c->State == HAL_I2C_STATE_RESET)
 8009d04:	f890 303d 	ldrb.w	r3, [r0, #61]	; 0x3d
 8009d08:	4604      	mov	r4, r0
 8009d0a:	f003 02ff 	and.w	r2, r3, #255	; 0xff
 8009d0e:	2b00      	cmp	r3, #0
 8009d10:	f000 8098 	beq.w	8009e44 <HAL_I2C_Init+0x148>
  __HAL_I2C_DISABLE(hi2c);
 8009d14:	6823      	ldr	r3, [r4, #0]
  hi2c->State = HAL_I2C_STATE_BUSY;
 8009d16:	2224      	movs	r2, #36	; 0x24
 8009d18:	f884 203d 	strb.w	r2, [r4, #61]	; 0x3d
  __HAL_I2C_DISABLE(hi2c);
 8009d1c:	681a      	ldr	r2, [r3, #0]
 8009d1e:	f022 0201 	bic.w	r2, r2, #1
 8009d22:	601a      	str	r2, [r3, #0]
  hi2c->Instance->CR1 |= I2C_CR1_SWRST;
 8009d24:	681a      	ldr	r2, [r3, #0]
 8009d26:	f442 4200 	orr.w	r2, r2, #32768	; 0x8000
 8009d2a:	601a      	str	r2, [r3, #0]
  hi2c->Instance->CR1 &= ~I2C_CR1_SWRST;
 8009d2c:	681a      	ldr	r2, [r3, #0]
 8009d2e:	f422 4200 	bic.w	r2, r2, #32768	; 0x8000
 8009d32:	601a      	str	r2, [r3, #0]
  pclk1 = HAL_RCC_GetPCLK1Freq();
 8009d34:	f001 fe70 	bl	800ba18 <HAL_RCC_GetPCLK1Freq>
  if (I2C_MIN_PCLK_FREQ(pclk1, hi2c->Init.ClockSpeed) == 1U)
 8009d38:	6865      	ldr	r5, [r4, #4]
 8009d3a:	4b4f      	ldr	r3, [pc, #316]	; (8009e78 <HAL_I2C_Init+0x17c>)
 8009d3c:	429d      	cmp	r5, r3
 8009d3e:	d84f      	bhi.n	8009de0 <HAL_I2C_Init+0xe4>
 8009d40:	4b4e      	ldr	r3, [pc, #312]	; (8009e7c <HAL_I2C_Init+0x180>)
 8009d42:	4298      	cmp	r0, r3
 8009d44:	d97c      	bls.n	8009e40 <HAL_I2C_Init+0x144>
  freqrange = I2C_FREQRANGE(pclk1);
 8009d46:	4b4e      	ldr	r3, [pc, #312]	; (8009e80 <HAL_I2C_Init+0x184>)
  MODIFY_REG(hi2c->Instance->CCR, (I2C_CCR_FS | I2C_CCR_DUTY | I2C_CCR_CCR), I2C_SPEED(pclk1, hi2c->Init.ClockSpeed, hi2c->Init.DutyCycle));
 8009d48:	006a      	lsls	r2, r5, #1
  freqrange = I2C_FREQRANGE(pclk1);
 8009d4a:	fba3 3500 	umull	r3, r5, r3, r0
  MODIFY_REG(hi2c->Instance->CCR, (I2C_CCR_FS | I2C_CCR_DUTY | I2C_CCR_CCR), I2C_SPEED(pclk1, hi2c->Init.ClockSpeed, hi2c->Init.DutyCycle));
 8009d4e:	1e43      	subs	r3, r0, #1
 8009d50:	fbb3 f3f2 	udiv	r3, r3, r2
  MODIFY_REG(hi2c->Instance->CR2, I2C_CR2_FREQ, freqrange);
 8009d54:	6822      	ldr	r2, [r4, #0]
 8009d56:	6851      	ldr	r1, [r2, #4]
 8009d58:	f021 013f 	bic.w	r1, r1, #63	; 0x3f
 8009d5c:	ea41 4195 	orr.w	r1, r1, r5, lsr #18
 8009d60:	6051      	str	r1, [r2, #4]
  MODIFY_REG(hi2c->Instance->TRISE, I2C_TRISE_TRISE, I2C_RISE_TIME(freqrange, hi2c->Init.ClockSpeed));
 8009d62:	6a11      	ldr	r1, [r2, #32]
  freqrange = I2C_FREQRANGE(pclk1);
 8009d64:	ea4f 4c95 	mov.w	ip, r5, lsr #18
  MODIFY_REG(hi2c->Instance->TRISE, I2C_TRISE_TRISE, I2C_RISE_TIME(freqrange, hi2c->Init.ClockSpeed));
 8009d68:	f10c 0c01 	add.w	ip, ip, #1
 8009d6c:	f021 013f 	bic.w	r1, r1, #63	; 0x3f
 8009d70:	ea41 010c 	orr.w	r1, r1, ip
 8009d74:	6211      	str	r1, [r2, #32]
  MODIFY_REG(hi2c->Instance->CCR, (I2C_CCR_FS | I2C_CCR_DUTY | I2C_CCR_CCR), I2C_SPEED(pclk1, hi2c->Init.ClockSpeed, hi2c->Init.DutyCycle));
 8009d76:	69d1      	ldr	r1, [r2, #28]
 8009d78:	f640 70fc 	movw	r0, #4092	; 0xffc
 8009d7c:	3301      	adds	r3, #1
 8009d7e:	f421 414f 	bic.w	r1, r1, #52992	; 0xcf00
 8009d82:	4203      	tst	r3, r0
 8009d84:	f021 01ff 	bic.w	r1, r1, #255	; 0xff
 8009d88:	d161      	bne.n	8009e4e <HAL_I2C_Init+0x152>
 8009d8a:	2304      	movs	r3, #4
 8009d8c:	430b      	orrs	r3, r1
 8009d8e:	61d3      	str	r3, [r2, #28]
  MODIFY_REG(hi2c->Instance->CR1, (I2C_CR1_ENGC | I2C_CR1_NOSTRETCH), (hi2c->Init.GeneralCallMode | hi2c->Init.NoStretchMode));
 8009d90:	e9d4 3007 	ldrd	r3, r0, [r4, #28]
 8009d94:	6811      	ldr	r1, [r2, #0]
 8009d96:	4303      	orrs	r3, r0
 8009d98:	f021 01c0 	bic.w	r1, r1, #192	; 0xc0
 8009d9c:	430b      	orrs	r3, r1
 8009d9e:	6013      	str	r3, [r2, #0]
  MODIFY_REG(hi2c->Instance->OAR1, (I2C_OAR1_ADDMODE | I2C_OAR1_ADD8_9 | I2C_OAR1_ADD1_7 | I2C_OAR1_ADD0), (hi2c->Init.AddressingMode | hi2c->Init.OwnAddress1));
 8009da0:	6891      	ldr	r1, [r2, #8]
 8009da2:	e9d4 0303 	ldrd	r0, r3, [r4, #12]
 8009da6:	f421 4103 	bic.w	r1, r1, #33536	; 0x8300
 8009daa:	4303      	orrs	r3, r0
 8009dac:	f021 01ff 	bic.w	r1, r1, #255	; 0xff
 8009db0:	430b      	orrs	r3, r1
 8009db2:	6093      	str	r3, [r2, #8]
  MODIFY_REG(hi2c->Instance->OAR2, (I2C_OAR2_ENDUAL | I2C_OAR2_ADD2), (hi2c->Init.DualAddressMode | hi2c->Init.OwnAddress2));
 8009db4:	e9d4 3005 	ldrd	r3, r0, [r4, #20]
 8009db8:	68d1      	ldr	r1, [r2, #12]
 8009dba:	4303      	orrs	r3, r0
 8009dbc:	f021 01ff 	bic.w	r1, r1, #255	; 0xff
 8009dc0:	430b      	orrs	r3, r1
 8009dc2:	60d3      	str	r3, [r2, #12]
  __HAL_I2C_ENABLE(hi2c);
 8009dc4:	6811      	ldr	r1, [r2, #0]
  hi2c->ErrorCode = HAL_I2C_ERROR_NONE;
 8009dc6:	2300      	movs	r3, #0
  __HAL_I2C_ENABLE(hi2c);
 8009dc8:	f041 0101 	orr.w	r1, r1, #1
  hi2c->State = HAL_I2C_STATE_READY;
 8009dcc:	2020      	movs	r0, #32
  __HAL_I2C_ENABLE(hi2c);
 8009dce:	6011      	str	r1, [r2, #0]
  hi2c->ErrorCode = HAL_I2C_ERROR_NONE;
 8009dd0:	6423      	str	r3, [r4, #64]	; 0x40
  hi2c->State = HAL_I2C_STATE_READY;
 8009dd2:	f884 003d 	strb.w	r0, [r4, #61]	; 0x3d
  hi2c->PreviousState = I2C_STATE_NONE;
 8009dd6:	6323      	str	r3, [r4, #48]	; 0x30
  hi2c->Mode = HAL_I2C_MODE_NONE;
 8009dd8:	f884 303e 	strb.w	r3, [r4, #62]	; 0x3e
  return HAL_OK;
 8009ddc:	4618      	mov	r0, r3
}
 8009dde:	bd70      	pop	{r4, r5, r6, pc}
  if (I2C_MIN_PCLK_FREQ(pclk1, hi2c->Init.ClockSpeed) == 1U)
 8009de0:	4b28      	ldr	r3, [pc, #160]	; (8009e84 <HAL_I2C_Init+0x188>)
 8009de2:	4298      	cmp	r0, r3
 8009de4:	d92c      	bls.n	8009e40 <HAL_I2C_Init+0x144>
  MODIFY_REG(hi2c->Instance->CR2, I2C_CR2_FREQ, freqrange);
 8009de6:	6822      	ldr	r2, [r4, #0]
  freqrange = I2C_FREQRANGE(pclk1);
 8009de8:	4b25      	ldr	r3, [pc, #148]	; (8009e80 <HAL_I2C_Init+0x184>)
  MODIFY_REG(hi2c->Instance->CR2, I2C_CR2_FREQ, freqrange);
 8009dea:	6851      	ldr	r1, [r2, #4]
  MODIFY_REG(hi2c->Instance->TRISE, I2C_TRISE_TRISE, I2C_RISE_TIME(freqrange, hi2c->Init.ClockSpeed));
 8009dec:	4e26      	ldr	r6, [pc, #152]	; (8009e88 <HAL_I2C_Init+0x18c>)
  freqrange = I2C_FREQRANGE(pclk1);
 8009dee:	fba3 3c00 	umull	r3, ip, r3, r0
  MODIFY_REG(hi2c->Instance->CR2, I2C_CR2_FREQ, freqrange);
 8009df2:	f021 013f 	bic.w	r1, r1, #63	; 0x3f
 8009df6:	ea41 419c 	orr.w	r1, r1, ip, lsr #18
 8009dfa:	6051      	str	r1, [r2, #4]
  freqrange = I2C_FREQRANGE(pclk1);
 8009dfc:	ea4f 439c 	mov.w	r3, ip, lsr #18
  MODIFY_REG(hi2c->Instance->TRISE, I2C_TRISE_TRISE, I2C_RISE_TIME(freqrange, hi2c->Init.ClockSpeed));
 8009e00:	f44f 7196 	mov.w	r1, #300	; 0x12c
 8009e04:	fb01 f303 	mul.w	r3, r1, r3
 8009e08:	fba6 6303 	umull	r6, r3, r6, r3
 8009e0c:	6a11      	ldr	r1, [r2, #32]
 8009e0e:	099b      	lsrs	r3, r3, #6
 8009e10:	f021 013f 	bic.w	r1, r1, #63	; 0x3f
 8009e14:	3301      	adds	r3, #1
 8009e16:	430b      	orrs	r3, r1
 8009e18:	6213      	str	r3, [r2, #32]
  MODIFY_REG(hi2c->Instance->CCR, (I2C_CCR_FS | I2C_CCR_DUTY | I2C_CCR_CCR), I2C_SPEED(pclk1, hi2c->Init.ClockSpeed, hi2c->Init.DutyCycle));
 8009e1a:	69d1      	ldr	r1, [r2, #28]
 8009e1c:	68a3      	ldr	r3, [r4, #8]
 8009e1e:	f421 414f 	bic.w	r1, r1, #52992	; 0xcf00
 8009e22:	f021 01ff 	bic.w	r1, r1, #255	; 0xff
 8009e26:	b9ab      	cbnz	r3, 8009e54 <HAL_I2C_Init+0x158>
 8009e28:	1e43      	subs	r3, r0, #1
 8009e2a:	eb05 0545 	add.w	r5, r5, r5, lsl #1
 8009e2e:	fbb3 f3f5 	udiv	r3, r3, r5
 8009e32:	3301      	adds	r3, #1
 8009e34:	f3c3 030b 	ubfx	r3, r3, #0, #12
 8009e38:	b1d3      	cbz	r3, 8009e70 <HAL_I2C_Init+0x174>
 8009e3a:	f443 4300 	orr.w	r3, r3, #32768	; 0x8000
 8009e3e:	e7a5      	b.n	8009d8c <HAL_I2C_Init+0x90>
    return HAL_ERROR;
 8009e40:	2001      	movs	r0, #1
}
 8009e42:	bd70      	pop	{r4, r5, r6, pc}
    hi2c->Lock = HAL_UNLOCKED;
 8009e44:	f880 203c 	strb.w	r2, [r0, #60]	; 0x3c
    HAL_I2C_MspInit(hi2c);
 8009e48:	f7f8 f808 	bl	8001e5c <HAL_I2C_MspInit>
 8009e4c:	e762      	b.n	8009d14 <HAL_I2C_Init+0x18>
  MODIFY_REG(hi2c->Instance->CCR, (I2C_CCR_FS | I2C_CCR_DUTY | I2C_CCR_CCR), I2C_SPEED(pclk1, hi2c->Init.ClockSpeed, hi2c->Init.DutyCycle));
 8009e4e:	f3c3 030b 	ubfx	r3, r3, #0, #12
 8009e52:	e79b      	b.n	8009d8c <HAL_I2C_Init+0x90>
 8009e54:	eb05 0585 	add.w	r5, r5, r5, lsl #2
 8009e58:	1e43      	subs	r3, r0, #1
 8009e5a:	eb05 0585 	add.w	r5, r5, r5, lsl #2
 8009e5e:	fbb3 f3f5 	udiv	r3, r3, r5
 8009e62:	3301      	adds	r3, #1
 8009e64:	f3c3 030b 	ubfx	r3, r3, #0, #12
 8009e68:	b113      	cbz	r3, 8009e70 <HAL_I2C_Init+0x174>
 8009e6a:	f443 4340 	orr.w	r3, r3, #49152	; 0xc000
 8009e6e:	e78d      	b.n	8009d8c <HAL_I2C_Init+0x90>
 8009e70:	2301      	movs	r3, #1
 8009e72:	e78b      	b.n	8009d8c <HAL_I2C_Init+0x90>
    return HAL_ERROR;
 8009e74:	2001      	movs	r0, #1
}
 8009e76:	4770      	bx	lr
 8009e78:	000186a0 	.word	0x000186a0
 8009e7c:	001e847f 	.word	0x001e847f
 8009e80:	431bde83 	.word	0x431bde83
 8009e84:	003d08ff 	.word	0x003d08ff
 8009e88:	10624dd3 	.word	0x10624dd3

08009e8c <HAL_I2C_Mem_Write>:
{
 8009e8c:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 8009e90:	4604      	mov	r4, r0
 8009e92:	b083      	sub	sp, #12
 8009e94:	4699      	mov	r9, r3
 8009e96:	f8bd a034 	ldrh.w	sl, [sp, #52]	; 0x34
 8009e9a:	9e0e      	ldr	r6, [sp, #56]	; 0x38
 8009e9c:	460f      	mov	r7, r1
 8009e9e:	4690      	mov	r8, r2
  uint32_t tickstart = HAL_GetTick();
 8009ea0:	f7ff f8f0 	bl	8009084 <HAL_GetTick>
  if (hi2c->State == HAL_I2C_STATE_READY)
 8009ea4:	f894 303d 	ldrb.w	r3, [r4, #61]	; 0x3d
 8009ea8:	2b20      	cmp	r3, #32
 8009eaa:	d004      	beq.n	8009eb6 <HAL_I2C_Mem_Write+0x2a>
      return HAL_BUSY;
 8009eac:	2702      	movs	r7, #2
}
 8009eae:	4638      	mov	r0, r7
 8009eb0:	b003      	add	sp, #12
 8009eb2:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
 8009eb6:	4605      	mov	r5, r0
 8009eb8:	e005      	b.n	8009ec6 <HAL_I2C_Mem_Write+0x3a>
      if (((HAL_GetTick() - Tickstart) > Timeout) || (Timeout == 0U))
 8009eba:	f7ff f8e3 	bl	8009084 <HAL_GetTick>
 8009ebe:	1b40      	subs	r0, r0, r5
 8009ec0:	2819      	cmp	r0, #25
 8009ec2:	f200 80a8 	bhi.w	800a016 <HAL_I2C_Mem_Write+0x18a>
  while (__HAL_I2C_GET_FLAG(hi2c, Flag) == Status)
 8009ec6:	6820      	ldr	r0, [r4, #0]
 8009ec8:	6983      	ldr	r3, [r0, #24]
 8009eca:	ea6f 0c03 	mvn.w	ip, r3
 8009ece:	f01c 0b02 	ands.w	fp, ip, #2
 8009ed2:	d0f2      	beq.n	8009eba <HAL_I2C_Mem_Write+0x2e>
    __HAL_LOCK(hi2c);
 8009ed4:	f894 303c 	ldrb.w	r3, [r4, #60]	; 0x3c
 8009ed8:	2b01      	cmp	r3, #1
 8009eda:	d0e7      	beq.n	8009eac <HAL_I2C_Mem_Write+0x20>
 8009edc:	2301      	movs	r3, #1
 8009ede:	f884 303c 	strb.w	r3, [r4, #60]	; 0x3c
    if ((hi2c->Instance->CR1 & I2C_CR1_PE) != I2C_CR1_PE)
 8009ee2:	6803      	ldr	r3, [r0, #0]
 8009ee4:	07db      	lsls	r3, r3, #31
 8009ee6:	d572      	bpl.n	8009fce <HAL_I2C_Mem_Write+0x142>
    if (I2C_RequestMemoryWrite(hi2c, DevAddress, MemAddress, MemAddSize, Timeout, tickstart) != HAL_OK)
 8009ee8:	4639      	mov	r1, r7
    CLEAR_BIT(hi2c->Instance->CR1, I2C_CR1_POS);
 8009eea:	6807      	ldr	r7, [r0, #0]
 8009eec:	f427 6700 	bic.w	r7, r7, #2048	; 0x800
 8009ef0:	6007      	str	r7, [r0, #0]
    hi2c->pBuffPtr    = pData;
 8009ef2:	980c      	ldr	r0, [sp, #48]	; 0x30
 8009ef4:	6260      	str	r0, [r4, #36]	; 0x24
    hi2c->State     = HAL_I2C_STATE_BUSY_TX;
 8009ef6:	2021      	movs	r0, #33	; 0x21
    if (I2C_RequestMemoryWrite(hi2c, DevAddress, MemAddress, MemAddSize, Timeout, tickstart) != HAL_OK)
 8009ef8:	e9cd 6500 	strd	r6, r5, [sp]
    hi2c->State     = HAL_I2C_STATE_BUSY_TX;
 8009efc:	f884 003d 	strb.w	r0, [r4, #61]	; 0x3d
    hi2c->Mode      = HAL_I2C_MODE_MEM;
 8009f00:	2040      	movs	r0, #64	; 0x40
 8009f02:	f884 003e 	strb.w	r0, [r4, #62]	; 0x3e
    hi2c->ErrorCode = HAL_I2C_ERROR_NONE;
 8009f06:	2000      	movs	r0, #0
 8009f08:	6420      	str	r0, [r4, #64]	; 0x40
    hi2c->XferCount   = Size;
 8009f0a:	f8a4 a02a 	strh.w	sl, [r4, #42]	; 0x2a
    hi2c->XferSize    = hi2c->XferCount;
 8009f0e:	8d60      	ldrh	r0, [r4, #42]	; 0x2a
 8009f10:	8520      	strh	r0, [r4, #40]	; 0x28
    hi2c->XferOptions = I2C_NO_OPTION_FRAME;
 8009f12:	4856      	ldr	r0, [pc, #344]	; (800a06c <HAL_I2C_Mem_Write+0x1e0>)
 8009f14:	62e0      	str	r0, [r4, #44]	; 0x2c
    if (I2C_RequestMemoryWrite(hi2c, DevAddress, MemAddress, MemAddSize, Timeout, tickstart) != HAL_OK)
 8009f16:	464b      	mov	r3, r9
 8009f18:	4642      	mov	r2, r8
 8009f1a:	4620      	mov	r0, r4
 8009f1c:	f7ff fca4 	bl	8009868 <I2C_RequestMemoryWrite>
 8009f20:	4607      	mov	r7, r0
 8009f22:	bb00      	cbnz	r0, 8009f66 <HAL_I2C_Mem_Write+0xda>
    while (hi2c->XferSize > 0U)
 8009f24:	8d23      	ldrh	r3, [r4, #40]	; 0x28
 8009f26:	2b00      	cmp	r3, #0
 8009f28:	f000 809e 	beq.w	800a068 <HAL_I2C_Mem_Write+0x1dc>
  while (__HAL_I2C_GET_FLAG(hi2c, I2C_FLAG_BTF) == RESET)
 8009f2c:	6823      	ldr	r3, [r4, #0]
 8009f2e:	1c72      	adds	r2, r6, #1
 8009f30:	d159      	bne.n	8009fe6 <HAL_I2C_Mem_Write+0x15a>
  while (__HAL_I2C_GET_FLAG(hi2c, I2C_FLAG_TXE) == RESET)
 8009f32:	695a      	ldr	r2, [r3, #20]
 8009f34:	0610      	lsls	r0, r2, #24
 8009f36:	d41b      	bmi.n	8009f70 <HAL_I2C_Mem_Write+0xe4>
  if (__HAL_I2C_GET_FLAG(hi2c, I2C_FLAG_AF) == SET)
 8009f38:	695a      	ldr	r2, [r3, #20]
 8009f3a:	0551      	lsls	r1, r2, #21
 8009f3c:	d5f9      	bpl.n	8009f32 <HAL_I2C_Mem_Write+0xa6>
    hi2c->PreviousState       = I2C_STATE_NONE;
 8009f3e:	2200      	movs	r2, #0
    __HAL_I2C_CLEAR_FLAG(hi2c, I2C_FLAG_AF);
 8009f40:	f46f 6080 	mvn.w	r0, #1024	; 0x400
    hi2c->State               = HAL_I2C_STATE_READY;
 8009f44:	2120      	movs	r1, #32
    __HAL_I2C_CLEAR_FLAG(hi2c, I2C_FLAG_AF);
 8009f46:	6158      	str	r0, [r3, #20]
    hi2c->PreviousState       = I2C_STATE_NONE;
 8009f48:	6322      	str	r2, [r4, #48]	; 0x30
    hi2c->State               = HAL_I2C_STATE_READY;
 8009f4a:	f884 103d 	strb.w	r1, [r4, #61]	; 0x3d
    hi2c->Mode                = HAL_I2C_MODE_NONE;
 8009f4e:	f884 203e 	strb.w	r2, [r4, #62]	; 0x3e
    hi2c->ErrorCode           |= HAL_I2C_ERROR_AF;
 8009f52:	6c23      	ldr	r3, [r4, #64]	; 0x40
 8009f54:	f043 0304 	orr.w	r3, r3, #4
 8009f58:	6423      	str	r3, [r4, #64]	; 0x40
      if (hi2c->ErrorCode == HAL_I2C_ERROR_AF)
 8009f5a:	6c23      	ldr	r3, [r4, #64]	; 0x40
    __HAL_UNLOCK(hi2c);
 8009f5c:	2200      	movs	r2, #0
      if (hi2c->ErrorCode == HAL_I2C_ERROR_AF)
 8009f5e:	2b04      	cmp	r3, #4
    __HAL_UNLOCK(hi2c);
 8009f60:	f884 203c 	strb.w	r2, [r4, #60]	; 0x3c
      if (hi2c->ErrorCode == HAL_I2C_ERROR_AF)
 8009f64:	d038      	beq.n	8009fd8 <HAL_I2C_Mem_Write+0x14c>
      return HAL_ERROR;
 8009f66:	2701      	movs	r7, #1
}
 8009f68:	4638      	mov	r0, r7
 8009f6a:	b003      	add	sp, #12
 8009f6c:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
      hi2c->Instance->DR = *hi2c->pBuffPtr;
 8009f70:	f8d4 c024 	ldr.w	ip, [r4, #36]	; 0x24
      hi2c->XferSize--;
 8009f74:	f8b4 e028 	ldrh.w	lr, [r4, #40]	; 0x28
      hi2c->Instance->DR = *hi2c->pBuffPtr;
 8009f78:	4661      	mov	r1, ip
      hi2c->XferSize--;
 8009f7a:	f10e 30ff 	add.w	r0, lr, #4294967295
      hi2c->Instance->DR = *hi2c->pBuffPtr;
 8009f7e:	f811 2b01 	ldrb.w	r2, [r1], #1
 8009f82:	611a      	str	r2, [r3, #16]
      hi2c->XferCount--;
 8009f84:	8d62      	ldrh	r2, [r4, #42]	; 0x2a
      hi2c->pBuffPtr++;
 8009f86:	6261      	str	r1, [r4, #36]	; 0x24
      hi2c->XferCount--;
 8009f88:	3a01      	subs	r2, #1
 8009f8a:	b292      	uxth	r2, r2
 8009f8c:	8562      	strh	r2, [r4, #42]	; 0x2a
      hi2c->XferSize--;
 8009f8e:	b282      	uxth	r2, r0
      if ((__HAL_I2C_GET_FLAG(hi2c, I2C_FLAG_BTF) == SET) && (hi2c->XferSize != 0U))
 8009f90:	6958      	ldr	r0, [r3, #20]
      hi2c->XferSize--;
 8009f92:	8522      	strh	r2, [r4, #40]	; 0x28
      if ((__HAL_I2C_GET_FLAG(hi2c, I2C_FLAG_BTF) == SET) && (hi2c->XferSize != 0U))
 8009f94:	0740      	lsls	r0, r0, #29
 8009f96:	d517      	bpl.n	8009fc8 <HAL_I2C_Mem_Write+0x13c>
 8009f98:	b942      	cbnz	r2, 8009fac <HAL_I2C_Mem_Write+0x120>
 8009f9a:	1c72      	adds	r2, r6, #1
 8009f9c:	d156      	bne.n	800a04c <HAL_I2C_Mem_Write+0x1c0>
  while (__HAL_I2C_GET_FLAG(hi2c, I2C_FLAG_BTF) == RESET)
 8009f9e:	695a      	ldr	r2, [r3, #20]
 8009fa0:	0750      	lsls	r0, r2, #29
 8009fa2:	d446      	bmi.n	800a032 <HAL_I2C_Mem_Write+0x1a6>
  if (__HAL_I2C_GET_FLAG(hi2c, I2C_FLAG_AF) == SET)
 8009fa4:	695a      	ldr	r2, [r3, #20]
 8009fa6:	0551      	lsls	r1, r2, #21
 8009fa8:	d5f9      	bpl.n	8009f9e <HAL_I2C_Mem_Write+0x112>
 8009faa:	e7c8      	b.n	8009f3e <HAL_I2C_Mem_Write+0xb2>
        hi2c->Instance->DR = *hi2c->pBuffPtr;
 8009fac:	f89c 1001 	ldrb.w	r1, [ip, #1]
 8009fb0:	6119      	str	r1, [r3, #16]
        hi2c->pBuffPtr++;
 8009fb2:	f10c 0102 	add.w	r1, ip, #2
 8009fb6:	6261      	str	r1, [r4, #36]	; 0x24
        hi2c->XferCount--;
 8009fb8:	8d61      	ldrh	r1, [r4, #42]	; 0x2a
        hi2c->XferSize--;
 8009fba:	f1ae 0202 	sub.w	r2, lr, #2
        hi2c->XferCount--;
 8009fbe:	3901      	subs	r1, #1
        hi2c->XferSize--;
 8009fc0:	b292      	uxth	r2, r2
        hi2c->XferCount--;
 8009fc2:	b289      	uxth	r1, r1
        hi2c->XferSize--;
 8009fc4:	8522      	strh	r2, [r4, #40]	; 0x28
        hi2c->XferCount--;
 8009fc6:	8561      	strh	r1, [r4, #42]	; 0x2a
    while (hi2c->XferSize > 0U)
 8009fc8:	2a00      	cmp	r2, #0
 8009fca:	d1b0      	bne.n	8009f2e <HAL_I2C_Mem_Write+0xa2>
 8009fcc:	e7e5      	b.n	8009f9a <HAL_I2C_Mem_Write+0x10e>
      __HAL_I2C_ENABLE(hi2c);
 8009fce:	6803      	ldr	r3, [r0, #0]
 8009fd0:	f043 0301 	orr.w	r3, r3, #1
 8009fd4:	6003      	str	r3, [r0, #0]
 8009fd6:	e787      	b.n	8009ee8 <HAL_I2C_Mem_Write+0x5c>
        SET_BIT(hi2c->Instance->CR1, I2C_CR1_STOP);
 8009fd8:	6822      	ldr	r2, [r4, #0]
 8009fda:	6813      	ldr	r3, [r2, #0]
 8009fdc:	f443 7300 	orr.w	r3, r3, #512	; 0x200
      return HAL_ERROR;
 8009fe0:	2701      	movs	r7, #1
        SET_BIT(hi2c->Instance->CR1, I2C_CR1_STOP);
 8009fe2:	6013      	str	r3, [r2, #0]
 8009fe4:	e763      	b.n	8009eae <HAL_I2C_Mem_Write+0x22>
  while (__HAL_I2C_GET_FLAG(hi2c, I2C_FLAG_TXE) == RESET)
 8009fe6:	695a      	ldr	r2, [r3, #20]
 8009fe8:	0612      	lsls	r2, r2, #24
 8009fea:	d4c1      	bmi.n	8009f70 <HAL_I2C_Mem_Write+0xe4>
  if (__HAL_I2C_GET_FLAG(hi2c, I2C_FLAG_AF) == SET)
 8009fec:	695a      	ldr	r2, [r3, #20]
 8009fee:	0551      	lsls	r1, r2, #21
 8009ff0:	d4a5      	bmi.n	8009f3e <HAL_I2C_Mem_Write+0xb2>
      if (((HAL_GetTick() - Tickstart) > Timeout) || (Timeout == 0U))
 8009ff2:	f7ff f847 	bl	8009084 <HAL_GetTick>
 8009ff6:	1b40      	subs	r0, r0, r5
 8009ff8:	4286      	cmp	r6, r0
 8009ffa:	d301      	bcc.n	800a000 <HAL_I2C_Mem_Write+0x174>
 8009ffc:	2e00      	cmp	r6, #0
 8009ffe:	d195      	bne.n	8009f2c <HAL_I2C_Mem_Write+0xa0>
        hi2c->PreviousState     = I2C_STATE_NONE;
 800a000:	2300      	movs	r3, #0
        hi2c->State             = HAL_I2C_STATE_READY;
 800a002:	2220      	movs	r2, #32
        hi2c->PreviousState     = I2C_STATE_NONE;
 800a004:	6323      	str	r3, [r4, #48]	; 0x30
        hi2c->State             = HAL_I2C_STATE_READY;
 800a006:	f884 203d 	strb.w	r2, [r4, #61]	; 0x3d
        hi2c->Mode              = HAL_I2C_MODE_NONE;
 800a00a:	f884 303e 	strb.w	r3, [r4, #62]	; 0x3e
        hi2c->ErrorCode         |= HAL_I2C_ERROR_TIMEOUT;
 800a00e:	6c23      	ldr	r3, [r4, #64]	; 0x40
 800a010:	4313      	orrs	r3, r2
 800a012:	6423      	str	r3, [r4, #64]	; 0x40
        return HAL_ERROR;
 800a014:	e7a1      	b.n	8009f5a <HAL_I2C_Mem_Write+0xce>
        hi2c->State             = HAL_I2C_STATE_READY;
 800a016:	2320      	movs	r3, #32
        hi2c->PreviousState     = I2C_STATE_NONE;
 800a018:	f8c4 b030 	str.w	fp, [r4, #48]	; 0x30
        hi2c->State             = HAL_I2C_STATE_READY;
 800a01c:	f884 303d 	strb.w	r3, [r4, #61]	; 0x3d
        hi2c->Mode              = HAL_I2C_MODE_NONE;
 800a020:	f884 b03e 	strb.w	fp, [r4, #62]	; 0x3e
        hi2c->ErrorCode         |= HAL_I2C_ERROR_TIMEOUT;
 800a024:	6c23      	ldr	r3, [r4, #64]	; 0x40
        __HAL_UNLOCK(hi2c);
 800a026:	f884 b03c 	strb.w	fp, [r4, #60]	; 0x3c
        hi2c->ErrorCode         |= HAL_I2C_ERROR_TIMEOUT;
 800a02a:	f043 0320 	orr.w	r3, r3, #32
 800a02e:	6423      	str	r3, [r4, #64]	; 0x40
 800a030:	e73c      	b.n	8009eac <HAL_I2C_Mem_Write+0x20>
    SET_BIT(hi2c->Instance->CR1, I2C_CR1_STOP);
 800a032:	681a      	ldr	r2, [r3, #0]
    hi2c->Mode = HAL_I2C_MODE_NONE;
 800a034:	2100      	movs	r1, #0
    SET_BIT(hi2c->Instance->CR1, I2C_CR1_STOP);
 800a036:	f442 7200 	orr.w	r2, r2, #512	; 0x200
    hi2c->State = HAL_I2C_STATE_READY;
 800a03a:	2020      	movs	r0, #32
    SET_BIT(hi2c->Instance->CR1, I2C_CR1_STOP);
 800a03c:	601a      	str	r2, [r3, #0]
    hi2c->State = HAL_I2C_STATE_READY;
 800a03e:	f884 003d 	strb.w	r0, [r4, #61]	; 0x3d
    __HAL_UNLOCK(hi2c);
 800a042:	f884 103c 	strb.w	r1, [r4, #60]	; 0x3c
    hi2c->Mode = HAL_I2C_MODE_NONE;
 800a046:	f884 103e 	strb.w	r1, [r4, #62]	; 0x3e
    return HAL_OK;
 800a04a:	e730      	b.n	8009eae <HAL_I2C_Mem_Write+0x22>
  while (__HAL_I2C_GET_FLAG(hi2c, I2C_FLAG_BTF) == RESET)
 800a04c:	695a      	ldr	r2, [r3, #20]
 800a04e:	0752      	lsls	r2, r2, #29
 800a050:	d4ef      	bmi.n	800a032 <HAL_I2C_Mem_Write+0x1a6>
  if (__HAL_I2C_GET_FLAG(hi2c, I2C_FLAG_AF) == SET)
 800a052:	695a      	ldr	r2, [r3, #20]
 800a054:	0551      	lsls	r1, r2, #21
 800a056:	f53f af72 	bmi.w	8009f3e <HAL_I2C_Mem_Write+0xb2>
      if (((HAL_GetTick() - Tickstart) > Timeout) || (Timeout == 0U))
 800a05a:	f7ff f813 	bl	8009084 <HAL_GetTick>
 800a05e:	1b40      	subs	r0, r0, r5
 800a060:	4286      	cmp	r6, r0
 800a062:	d3cd      	bcc.n	800a000 <HAL_I2C_Mem_Write+0x174>
 800a064:	2e00      	cmp	r6, #0
 800a066:	d0cb      	beq.n	800a000 <HAL_I2C_Mem_Write+0x174>
  while (__HAL_I2C_GET_FLAG(hi2c, I2C_FLAG_BTF) == RESET)
 800a068:	6823      	ldr	r3, [r4, #0]
 800a06a:	e796      	b.n	8009f9a <HAL_I2C_Mem_Write+0x10e>
 800a06c:	ffff0000 	.word	0xffff0000

0800a070 <HAL_I2C_Mem_Read>:
{
 800a070:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 800a074:	4604      	mov	r4, r0
 800a076:	b087      	sub	sp, #28
 800a078:	4699      	mov	r9, r3
 800a07a:	f8bd a044 	ldrh.w	sl, [sp, #68]	; 0x44
 800a07e:	9d12      	ldr	r5, [sp, #72]	; 0x48
 800a080:	460f      	mov	r7, r1
 800a082:	4690      	mov	r8, r2
  uint32_t tickstart = HAL_GetTick();
 800a084:	f7fe fffe 	bl	8009084 <HAL_GetTick>
  if (hi2c->State == HAL_I2C_STATE_READY)
 800a088:	f894 303d 	ldrb.w	r3, [r4, #61]	; 0x3d
 800a08c:	2b20      	cmp	r3, #32
 800a08e:	d004      	beq.n	800a09a <HAL_I2C_Mem_Read+0x2a>
      return HAL_BUSY;
 800a090:	2702      	movs	r7, #2
}
 800a092:	4638      	mov	r0, r7
 800a094:	b007      	add	sp, #28
 800a096:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
 800a09a:	4606      	mov	r6, r0
 800a09c:	e005      	b.n	800a0aa <HAL_I2C_Mem_Read+0x3a>
      if (((HAL_GetTick() - Tickstart) > Timeout) || (Timeout == 0U))
 800a09e:	f7fe fff1 	bl	8009084 <HAL_GetTick>
 800a0a2:	1b80      	subs	r0, r0, r6
 800a0a4:	2819      	cmp	r0, #25
 800a0a6:	f200 80d2 	bhi.w	800a24e <HAL_I2C_Mem_Read+0x1de>
  while (__HAL_I2C_GET_FLAG(hi2c, Flag) == Status)
 800a0aa:	f8d4 c000 	ldr.w	ip, [r4]
 800a0ae:	f8dc 0018 	ldr.w	r0, [ip, #24]
 800a0b2:	43c0      	mvns	r0, r0
 800a0b4:	f010 0b02 	ands.w	fp, r0, #2
 800a0b8:	d0f1      	beq.n	800a09e <HAL_I2C_Mem_Read+0x2e>
    __HAL_LOCK(hi2c);
 800a0ba:	f894 303c 	ldrb.w	r3, [r4, #60]	; 0x3c
 800a0be:	2b01      	cmp	r3, #1
 800a0c0:	d0e6      	beq.n	800a090 <HAL_I2C_Mem_Read+0x20>
 800a0c2:	2301      	movs	r3, #1
 800a0c4:	f884 303c 	strb.w	r3, [r4, #60]	; 0x3c
    if ((hi2c->Instance->CR1 & I2C_CR1_PE) != I2C_CR1_PE)
 800a0c8:	f8dc 3000 	ldr.w	r3, [ip]
 800a0cc:	07d9      	lsls	r1, r3, #31
 800a0ce:	d537      	bpl.n	800a140 <HAL_I2C_Mem_Read+0xd0>
    CLEAR_BIT(hi2c->Instance->CR1, I2C_CR1_POS);
 800a0d0:	f8dc 0000 	ldr.w	r0, [ip]
 800a0d4:	f420 6000 	bic.w	r0, r0, #2048	; 0x800
 800a0d8:	f8cc 0000 	str.w	r0, [ip]
    hi2c->pBuffPtr    = pData;
 800a0dc:	9810      	ldr	r0, [sp, #64]	; 0x40
 800a0de:	6260      	str	r0, [r4, #36]	; 0x24
    hi2c->State     = HAL_I2C_STATE_BUSY_RX;
 800a0e0:	2022      	movs	r0, #34	; 0x22
    if (I2C_RequestMemoryRead(hi2c, DevAddress, MemAddress, MemAddSize, Timeout, tickstart) != HAL_OK)
 800a0e2:	e9cd 5600 	strd	r5, r6, [sp]
    hi2c->State     = HAL_I2C_STATE_BUSY_RX;
 800a0e6:	f884 003d 	strb.w	r0, [r4, #61]	; 0x3d
    hi2c->Mode      = HAL_I2C_MODE_MEM;
 800a0ea:	2040      	movs	r0, #64	; 0x40
 800a0ec:	f884 003e 	strb.w	r0, [r4, #62]	; 0x3e
    hi2c->ErrorCode = HAL_I2C_ERROR_NONE;
 800a0f0:	2000      	movs	r0, #0
 800a0f2:	6420      	str	r0, [r4, #64]	; 0x40
    hi2c->XferCount   = Size;
 800a0f4:	f8a4 a02a 	strh.w	sl, [r4, #42]	; 0x2a
    hi2c->XferSize    = hi2c->XferCount;
 800a0f8:	8d60      	ldrh	r0, [r4, #42]	; 0x2a
 800a0fa:	8520      	strh	r0, [r4, #40]	; 0x28
    hi2c->XferOptions = I2C_NO_OPTION_FRAME;
 800a0fc:	4893      	ldr	r0, [pc, #588]	; (800a34c <HAL_I2C_Mem_Read+0x2dc>)
 800a0fe:	62e0      	str	r0, [r4, #44]	; 0x2c
    if (I2C_RequestMemoryRead(hi2c, DevAddress, MemAddress, MemAddSize, Timeout, tickstart) != HAL_OK)
 800a100:	4639      	mov	r1, r7
 800a102:	464b      	mov	r3, r9
 800a104:	4642      	mov	r2, r8
 800a106:	4620      	mov	r0, r4
 800a108:	f7ff fca2 	bl	8009a50 <I2C_RequestMemoryRead>
 800a10c:	4607      	mov	r7, r0
 800a10e:	2800      	cmp	r0, #0
 800a110:	f040 80ab 	bne.w	800a26a <HAL_I2C_Mem_Read+0x1fa>
    if (hi2c->XferSize == 0U)
 800a114:	8d22      	ldrh	r2, [r4, #40]	; 0x28
 800a116:	b9d2      	cbnz	r2, 800a14e <HAL_I2C_Mem_Read+0xde>
      __HAL_I2C_CLEAR_ADDRFLAG(hi2c);
 800a118:	6823      	ldr	r3, [r4, #0]
 800a11a:	9002      	str	r0, [sp, #8]
 800a11c:	695a      	ldr	r2, [r3, #20]
 800a11e:	9202      	str	r2, [sp, #8]
 800a120:	699a      	ldr	r2, [r3, #24]
 800a122:	9202      	str	r2, [sp, #8]
 800a124:	9a02      	ldr	r2, [sp, #8]
      SET_BIT(hi2c->Instance->CR1, I2C_CR1_STOP);
 800a126:	681a      	ldr	r2, [r3, #0]
 800a128:	f442 7200 	orr.w	r2, r2, #512	; 0x200
 800a12c:	601a      	str	r2, [r3, #0]
    hi2c->Mode = HAL_I2C_MODE_NONE;
 800a12e:	2300      	movs	r3, #0
    hi2c->State = HAL_I2C_STATE_READY;
 800a130:	2220      	movs	r2, #32
 800a132:	f884 203d 	strb.w	r2, [r4, #61]	; 0x3d
    __HAL_UNLOCK(hi2c);
 800a136:	f884 303c 	strb.w	r3, [r4, #60]	; 0x3c
    hi2c->Mode = HAL_I2C_MODE_NONE;
 800a13a:	f884 303e 	strb.w	r3, [r4, #62]	; 0x3e
    return HAL_OK;
 800a13e:	e7a8      	b.n	800a092 <HAL_I2C_Mem_Read+0x22>
      __HAL_I2C_ENABLE(hi2c);
 800a140:	f8dc 3000 	ldr.w	r3, [ip]
 800a144:	f043 0301 	orr.w	r3, r3, #1
 800a148:	f8cc 3000 	str.w	r3, [ip]
 800a14c:	e7c0      	b.n	800a0d0 <HAL_I2C_Mem_Read+0x60>
    else if (hi2c->XferSize == 1U)
 800a14e:	2a01      	cmp	r2, #1
 800a150:	f000 812c 	beq.w	800a3ac <HAL_I2C_Mem_Read+0x33c>
    else if (hi2c->XferSize == 2U)
 800a154:	2a02      	cmp	r2, #2
 800a156:	f000 80bd 	beq.w	800a2d4 <HAL_I2C_Mem_Read+0x264>
      __HAL_I2C_CLEAR_ADDRFLAG(hi2c);
 800a15a:	6823      	ldr	r3, [r4, #0]
 800a15c:	9005      	str	r0, [sp, #20]
 800a15e:	6959      	ldr	r1, [r3, #20]
 800a160:	9105      	str	r1, [sp, #20]
 800a162:	6999      	ldr	r1, [r3, #24]
 800a164:	9105      	str	r1, [sp, #20]
 800a166:	9905      	ldr	r1, [sp, #20]
      if (hi2c->XferSize <= 3U)
 800a168:	2a03      	cmp	r2, #3
 800a16a:	d849      	bhi.n	800a200 <HAL_I2C_Mem_Read+0x190>
        if (hi2c->XferSize == 1U)
 800a16c:	2a01      	cmp	r2, #1
 800a16e:	f000 80eb 	beq.w	800a348 <HAL_I2C_Mem_Read+0x2d8>
        else if (hi2c->XferSize == 2U)
 800a172:	2a02      	cmp	r2, #2
 800a174:	f000 8089 	beq.w	800a28a <HAL_I2C_Mem_Read+0x21a>
 800a178:	1c69      	adds	r1, r5, #1
 800a17a:	f040 80bb 	bne.w	800a2f4 <HAL_I2C_Mem_Read+0x284>
  while (__HAL_I2C_GET_FLAG(hi2c, Flag) == Status)
 800a17e:	695a      	ldr	r2, [r3, #20]
 800a180:	0752      	lsls	r2, r2, #29
 800a182:	d5fc      	bpl.n	800a17e <HAL_I2C_Mem_Read+0x10e>
          CLEAR_BIT(hi2c->Instance->CR1, I2C_CR1_ACK);
 800a184:	681a      	ldr	r2, [r3, #0]
          *hi2c->pBuffPtr = (uint8_t)hi2c->Instance->DR;
 800a186:	6a61      	ldr	r1, [r4, #36]	; 0x24
          CLEAR_BIT(hi2c->Instance->CR1, I2C_CR1_ACK);
 800a188:	f422 6280 	bic.w	r2, r2, #1024	; 0x400
 800a18c:	601a      	str	r2, [r3, #0]
          *hi2c->pBuffPtr = (uint8_t)hi2c->Instance->DR;
 800a18e:	691b      	ldr	r3, [r3, #16]
 800a190:	700b      	strb	r3, [r1, #0]
          hi2c->XferCount--;
 800a192:	8d63      	ldrh	r3, [r4, #42]	; 0x2a
          hi2c->pBuffPtr++;
 800a194:	6a61      	ldr	r1, [r4, #36]	; 0x24
          hi2c->XferSize--;
 800a196:	8d22      	ldrh	r2, [r4, #40]	; 0x28
          hi2c->XferCount--;
 800a198:	3b01      	subs	r3, #1
          hi2c->pBuffPtr++;
 800a19a:	3101      	adds	r1, #1
          hi2c->XferSize--;
 800a19c:	3a01      	subs	r2, #1
          hi2c->XferCount--;
 800a19e:	b29b      	uxth	r3, r3
          hi2c->pBuffPtr++;
 800a1a0:	6261      	str	r1, [r4, #36]	; 0x24
          hi2c->XferSize--;
 800a1a2:	8522      	strh	r2, [r4, #40]	; 0x28
          hi2c->XferCount--;
 800a1a4:	8563      	strh	r3, [r4, #42]	; 0x2a
static HAL_StatusTypeDef I2C_WaitOnFlagUntilTimeout(I2C_HandleTypeDef *hi2c, uint32_t Flag, FlagStatus Status, uint32_t Timeout, uint32_t Tickstart)
 800a1a6:	1c69      	adds	r1, r5, #1
  while (__HAL_I2C_GET_FLAG(hi2c, Flag) == Status)
 800a1a8:	6822      	ldr	r2, [r4, #0]
 800a1aa:	f040 80af 	bne.w	800a30c <HAL_I2C_Mem_Read+0x29c>
 800a1ae:	6953      	ldr	r3, [r2, #20]
 800a1b0:	075b      	lsls	r3, r3, #29
 800a1b2:	d5fc      	bpl.n	800a1ae <HAL_I2C_Mem_Read+0x13e>
          SET_BIT(hi2c->Instance->CR1, I2C_CR1_STOP);
 800a1b4:	6813      	ldr	r3, [r2, #0]
          *hi2c->pBuffPtr = (uint8_t)hi2c->Instance->DR;
 800a1b6:	6a61      	ldr	r1, [r4, #36]	; 0x24
          SET_BIT(hi2c->Instance->CR1, I2C_CR1_STOP);
 800a1b8:	f443 7300 	orr.w	r3, r3, #512	; 0x200
 800a1bc:	6013      	str	r3, [r2, #0]
          *hi2c->pBuffPtr = (uint8_t)hi2c->Instance->DR;
 800a1be:	6913      	ldr	r3, [r2, #16]
 800a1c0:	700b      	strb	r3, [r1, #0]
          hi2c->XferCount--;
 800a1c2:	8d63      	ldrh	r3, [r4, #42]	; 0x2a
          hi2c->XferSize--;
 800a1c4:	8d22      	ldrh	r2, [r4, #40]	; 0x28
          hi2c->pBuffPtr++;
 800a1c6:	6a60      	ldr	r0, [r4, #36]	; 0x24
          *hi2c->pBuffPtr = (uint8_t)hi2c->Instance->DR;
 800a1c8:	6821      	ldr	r1, [r4, #0]
          hi2c->XferCount--;
 800a1ca:	3b01      	subs	r3, #1
 800a1cc:	b29b      	uxth	r3, r3
 800a1ce:	8563      	strh	r3, [r4, #42]	; 0x2a
          *hi2c->pBuffPtr = (uint8_t)hi2c->Instance->DR;
 800a1d0:	6909      	ldr	r1, [r1, #16]
          hi2c->XferSize--;
 800a1d2:	1e53      	subs	r3, r2, #1
          hi2c->pBuffPtr++;
 800a1d4:	f100 0c01 	add.w	ip, r0, #1
          hi2c->XferSize--;
 800a1d8:	8523      	strh	r3, [r4, #40]	; 0x28
          hi2c->pBuffPtr++;
 800a1da:	f8c4 c024 	str.w	ip, [r4, #36]	; 0x24
          *hi2c->pBuffPtr = (uint8_t)hi2c->Instance->DR;
 800a1de:	7041      	strb	r1, [r0, #1]
          hi2c->XferSize--;
 800a1e0:	8d22      	ldrh	r2, [r4, #40]	; 0x28
          hi2c->XferCount--;
 800a1e2:	8d63      	ldrh	r3, [r4, #42]	; 0x2a
          hi2c->pBuffPtr++;
 800a1e4:	6a61      	ldr	r1, [r4, #36]	; 0x24
          hi2c->XferSize--;
 800a1e6:	3a01      	subs	r2, #1
          hi2c->XferCount--;
 800a1e8:	3b01      	subs	r3, #1
          hi2c->pBuffPtr++;
 800a1ea:	3101      	adds	r1, #1
          hi2c->XferSize--;
 800a1ec:	b292      	uxth	r2, r2
          hi2c->XferCount--;
 800a1ee:	b29b      	uxth	r3, r3
          hi2c->pBuffPtr++;
 800a1f0:	6261      	str	r1, [r4, #36]	; 0x24
          hi2c->XferSize--;
 800a1f2:	8522      	strh	r2, [r4, #40]	; 0x28
          hi2c->XferCount--;
 800a1f4:	8563      	strh	r3, [r4, #42]	; 0x2a
    while (hi2c->XferSize > 0U)
 800a1f6:	2a00      	cmp	r2, #0
 800a1f8:	d099      	beq.n	800a12e <HAL_I2C_Mem_Read+0xbe>
      if (hi2c->XferSize <= 3U)
 800a1fa:	2a03      	cmp	r2, #3
  while (__HAL_I2C_GET_FLAG(hi2c, I2C_FLAG_RXNE) == RESET)
 800a1fc:	6823      	ldr	r3, [r4, #0]
      if (hi2c->XferSize <= 3U)
 800a1fe:	d9b5      	bls.n	800a16c <HAL_I2C_Mem_Read+0xfc>
 800a200:	b95d      	cbnz	r5, 800a21a <HAL_I2C_Mem_Read+0x1aa>
 800a202:	e0c5      	b.n	800a390 <HAL_I2C_Mem_Read+0x320>
    if (__HAL_I2C_GET_FLAG(hi2c, I2C_FLAG_STOPF) == SET)
 800a204:	695a      	ldr	r2, [r3, #20]
 800a206:	06d0      	lsls	r0, r2, #27
 800a208:	f100 80b2 	bmi.w	800a370 <HAL_I2C_Mem_Read+0x300>
    if (((HAL_GetTick() - Tickstart) > Timeout) || (Timeout == 0U))
 800a20c:	f7fe ff3a 	bl	8009084 <HAL_GetTick>
 800a210:	1b80      	subs	r0, r0, r6
 800a212:	4285      	cmp	r5, r0
 800a214:	f0c0 8086 	bcc.w	800a324 <HAL_I2C_Mem_Read+0x2b4>
  while (__HAL_I2C_GET_FLAG(hi2c, I2C_FLAG_RXNE) == RESET)
 800a218:	6823      	ldr	r3, [r4, #0]
 800a21a:	695a      	ldr	r2, [r3, #20]
 800a21c:	0652      	lsls	r2, r2, #25
 800a21e:	d5f1      	bpl.n	800a204 <HAL_I2C_Mem_Read+0x194>
        *hi2c->pBuffPtr = (uint8_t)hi2c->Instance->DR;
 800a220:	6a62      	ldr	r2, [r4, #36]	; 0x24
 800a222:	691b      	ldr	r3, [r3, #16]
 800a224:	7013      	strb	r3, [r2, #0]
        hi2c->XferCount--;
 800a226:	8d63      	ldrh	r3, [r4, #42]	; 0x2a
        if (__HAL_I2C_GET_FLAG(hi2c, I2C_FLAG_BTF) == SET)
 800a228:	6820      	ldr	r0, [r4, #0]
        hi2c->XferSize--;
 800a22a:	8d22      	ldrh	r2, [r4, #40]	; 0x28
        hi2c->pBuffPtr++;
 800a22c:	6a61      	ldr	r1, [r4, #36]	; 0x24
        hi2c->XferCount--;
 800a22e:	3b01      	subs	r3, #1
 800a230:	b29b      	uxth	r3, r3
 800a232:	8563      	strh	r3, [r4, #42]	; 0x2a
        if (__HAL_I2C_GET_FLAG(hi2c, I2C_FLAG_BTF) == SET)
 800a234:	6943      	ldr	r3, [r0, #20]
        hi2c->XferSize--;
 800a236:	3a01      	subs	r2, #1
 800a238:	b292      	uxth	r2, r2
        hi2c->pBuffPtr++;
 800a23a:	f101 0c01 	add.w	ip, r1, #1
        if (__HAL_I2C_GET_FLAG(hi2c, I2C_FLAG_BTF) == SET)
 800a23e:	075b      	lsls	r3, r3, #29
        hi2c->XferSize--;
 800a240:	8522      	strh	r2, [r4, #40]	; 0x28
        hi2c->pBuffPtr++;
 800a242:	f8c4 c024 	str.w	ip, [r4, #36]	; 0x24
        if (__HAL_I2C_GET_FLAG(hi2c, I2C_FLAG_BTF) == SET)
 800a246:	d5d6      	bpl.n	800a1f6 <HAL_I2C_Mem_Read+0x186>
          *hi2c->pBuffPtr = (uint8_t)hi2c->Instance->DR;
 800a248:	6903      	ldr	r3, [r0, #16]
 800a24a:	704b      	strb	r3, [r1, #1]
 800a24c:	e036      	b.n	800a2bc <HAL_I2C_Mem_Read+0x24c>
        hi2c->State             = HAL_I2C_STATE_READY;
 800a24e:	2320      	movs	r3, #32
        hi2c->PreviousState     = I2C_STATE_NONE;
 800a250:	f8c4 b030 	str.w	fp, [r4, #48]	; 0x30
        hi2c->State             = HAL_I2C_STATE_READY;
 800a254:	f884 303d 	strb.w	r3, [r4, #61]	; 0x3d
        hi2c->Mode              = HAL_I2C_MODE_NONE;
 800a258:	f884 b03e 	strb.w	fp, [r4, #62]	; 0x3e
        hi2c->ErrorCode         |= HAL_I2C_ERROR_TIMEOUT;
 800a25c:	6c23      	ldr	r3, [r4, #64]	; 0x40
        __HAL_UNLOCK(hi2c);
 800a25e:	f884 b03c 	strb.w	fp, [r4, #60]	; 0x3c
        hi2c->ErrorCode         |= HAL_I2C_ERROR_TIMEOUT;
 800a262:	f043 0320 	orr.w	r3, r3, #32
 800a266:	6423      	str	r3, [r4, #64]	; 0x40
 800a268:	e712      	b.n	800a090 <HAL_I2C_Mem_Read+0x20>
      return HAL_ERROR;
 800a26a:	2701      	movs	r7, #1
}
 800a26c:	4638      	mov	r0, r7
 800a26e:	b007      	add	sp, #28
 800a270:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
  while (__HAL_I2C_GET_FLAG(hi2c, Flag) == Status)
 800a274:	695a      	ldr	r2, [r3, #20]
 800a276:	0750      	lsls	r0, r2, #29
 800a278:	d40c      	bmi.n	800a294 <HAL_I2C_Mem_Read+0x224>
      if (((HAL_GetTick() - Tickstart) > Timeout) || (Timeout == 0U))
 800a27a:	f7fe ff03 	bl	8009084 <HAL_GetTick>
 800a27e:	1b80      	subs	r0, r0, r6
 800a280:	4285      	cmp	r5, r0
 800a282:	d34f      	bcc.n	800a324 <HAL_I2C_Mem_Read+0x2b4>
 800a284:	2d00      	cmp	r5, #0
 800a286:	d04d      	beq.n	800a324 <HAL_I2C_Mem_Read+0x2b4>
  while (__HAL_I2C_GET_FLAG(hi2c, Flag) == Status)
 800a288:	6823      	ldr	r3, [r4, #0]
 800a28a:	1c69      	adds	r1, r5, #1
 800a28c:	d1f2      	bne.n	800a274 <HAL_I2C_Mem_Read+0x204>
 800a28e:	695a      	ldr	r2, [r3, #20]
 800a290:	0752      	lsls	r2, r2, #29
 800a292:	d5fc      	bpl.n	800a28e <HAL_I2C_Mem_Read+0x21e>
          SET_BIT(hi2c->Instance->CR1, I2C_CR1_STOP);
 800a294:	681a      	ldr	r2, [r3, #0]
 800a296:	f442 7200 	orr.w	r2, r2, #512	; 0x200
 800a29a:	601a      	str	r2, [r3, #0]
          *hi2c->pBuffPtr = (uint8_t)hi2c->Instance->DR;
 800a29c:	691a      	ldr	r2, [r3, #16]
 800a29e:	6a63      	ldr	r3, [r4, #36]	; 0x24
 800a2a0:	701a      	strb	r2, [r3, #0]
          hi2c->XferCount--;
 800a2a2:	8d63      	ldrh	r3, [r4, #42]	; 0x2a
          hi2c->pBuffPtr++;
 800a2a4:	6a62      	ldr	r2, [r4, #36]	; 0x24
          hi2c->XferCount--;
 800a2a6:	3b01      	subs	r3, #1
 800a2a8:	b29b      	uxth	r3, r3
 800a2aa:	8563      	strh	r3, [r4, #42]	; 0x2a
          hi2c->XferSize--;
 800a2ac:	8d23      	ldrh	r3, [r4, #40]	; 0x28
 800a2ae:	3b01      	subs	r3, #1
 800a2b0:	8523      	strh	r3, [r4, #40]	; 0x28
          *hi2c->pBuffPtr = (uint8_t)hi2c->Instance->DR;
 800a2b2:	6823      	ldr	r3, [r4, #0]
          hi2c->pBuffPtr++;
 800a2b4:	1c51      	adds	r1, r2, #1
          *hi2c->pBuffPtr = (uint8_t)hi2c->Instance->DR;
 800a2b6:	691b      	ldr	r3, [r3, #16]
          hi2c->pBuffPtr++;
 800a2b8:	6261      	str	r1, [r4, #36]	; 0x24
          *hi2c->pBuffPtr = (uint8_t)hi2c->Instance->DR;
 800a2ba:	7053      	strb	r3, [r2, #1]
          hi2c->pBuffPtr++;
 800a2bc:	6a63      	ldr	r3, [r4, #36]	; 0x24
          hi2c->XferSize--;
 800a2be:	8d22      	ldrh	r2, [r4, #40]	; 0x28
          hi2c->pBuffPtr++;
 800a2c0:	3301      	adds	r3, #1
 800a2c2:	6263      	str	r3, [r4, #36]	; 0x24
          hi2c->XferCount--;
 800a2c4:	8d63      	ldrh	r3, [r4, #42]	; 0x2a
          hi2c->XferSize--;
 800a2c6:	3a01      	subs	r2, #1
          hi2c->XferCount--;
 800a2c8:	3b01      	subs	r3, #1
          hi2c->XferSize--;
 800a2ca:	b292      	uxth	r2, r2
          hi2c->XferCount--;
 800a2cc:	b29b      	uxth	r3, r3
          hi2c->XferSize--;
 800a2ce:	8522      	strh	r2, [r4, #40]	; 0x28
          hi2c->XferCount--;
 800a2d0:	8563      	strh	r3, [r4, #42]	; 0x2a
 800a2d2:	e790      	b.n	800a1f6 <HAL_I2C_Mem_Read+0x186>
      CLEAR_BIT(hi2c->Instance->CR1, I2C_CR1_ACK);
 800a2d4:	6823      	ldr	r3, [r4, #0]
 800a2d6:	6819      	ldr	r1, [r3, #0]
 800a2d8:	f421 6180 	bic.w	r1, r1, #1024	; 0x400
 800a2dc:	6019      	str	r1, [r3, #0]
      SET_BIT(hi2c->Instance->CR1, I2C_CR1_POS);
 800a2de:	6819      	ldr	r1, [r3, #0]
 800a2e0:	f441 6100 	orr.w	r1, r1, #2048	; 0x800
 800a2e4:	6019      	str	r1, [r3, #0]
      __HAL_I2C_CLEAR_ADDRFLAG(hi2c);
 800a2e6:	9004      	str	r0, [sp, #16]
 800a2e8:	6959      	ldr	r1, [r3, #20]
 800a2ea:	9104      	str	r1, [sp, #16]
 800a2ec:	6999      	ldr	r1, [r3, #24]
 800a2ee:	9104      	str	r1, [sp, #16]
 800a2f0:	9904      	ldr	r1, [sp, #16]
 800a2f2:	e739      	b.n	800a168 <HAL_I2C_Mem_Read+0xf8>
  while (__HAL_I2C_GET_FLAG(hi2c, Flag) == Status)
 800a2f4:	695a      	ldr	r2, [r3, #20]
 800a2f6:	0750      	lsls	r0, r2, #29
 800a2f8:	f53f af44 	bmi.w	800a184 <HAL_I2C_Mem_Read+0x114>
      if (((HAL_GetTick() - Tickstart) > Timeout) || (Timeout == 0U))
 800a2fc:	f7fe fec2 	bl	8009084 <HAL_GetTick>
 800a300:	1b80      	subs	r0, r0, r6
 800a302:	4285      	cmp	r5, r0
 800a304:	d30e      	bcc.n	800a324 <HAL_I2C_Mem_Read+0x2b4>
 800a306:	b16d      	cbz	r5, 800a324 <HAL_I2C_Mem_Read+0x2b4>
  while (__HAL_I2C_GET_FLAG(hi2c, Flag) == Status)
 800a308:	6823      	ldr	r3, [r4, #0]
 800a30a:	e735      	b.n	800a178 <HAL_I2C_Mem_Read+0x108>
 800a30c:	6953      	ldr	r3, [r2, #20]
 800a30e:	0758      	lsls	r0, r3, #29
 800a310:	f53f af50 	bmi.w	800a1b4 <HAL_I2C_Mem_Read+0x144>
      if (((HAL_GetTick() - Tickstart) > Timeout) || (Timeout == 0U))
 800a314:	f7fe feb6 	bl	8009084 <HAL_GetTick>
 800a318:	1b80      	subs	r0, r0, r6
 800a31a:	4285      	cmp	r5, r0
 800a31c:	d302      	bcc.n	800a324 <HAL_I2C_Mem_Read+0x2b4>
 800a31e:	2d00      	cmp	r5, #0
 800a320:	f47f af41 	bne.w	800a1a6 <HAL_I2C_Mem_Read+0x136>
        hi2c->PreviousState     = I2C_STATE_NONE;
 800a324:	2200      	movs	r2, #0
        hi2c->State             = HAL_I2C_STATE_READY;
 800a326:	2320      	movs	r3, #32
        hi2c->PreviousState     = I2C_STATE_NONE;
 800a328:	6322      	str	r2, [r4, #48]	; 0x30
        hi2c->State             = HAL_I2C_STATE_READY;
 800a32a:	f884 303d 	strb.w	r3, [r4, #61]	; 0x3d
        hi2c->Mode              = HAL_I2C_MODE_NONE;
 800a32e:	f884 203e 	strb.w	r2, [r4, #62]	; 0x3e
        hi2c->ErrorCode         |= HAL_I2C_ERROR_TIMEOUT;
 800a332:	6c23      	ldr	r3, [r4, #64]	; 0x40
        __HAL_UNLOCK(hi2c);
 800a334:	f884 203c 	strb.w	r2, [r4, #60]	; 0x3c
          return HAL_ERROR;
 800a338:	2701      	movs	r7, #1
        hi2c->ErrorCode         |= HAL_I2C_ERROR_TIMEOUT;
 800a33a:	f043 0320 	orr.w	r3, r3, #32
}
 800a33e:	4638      	mov	r0, r7
        hi2c->ErrorCode         |= HAL_I2C_ERROR_TIMEOUT;
 800a340:	6423      	str	r3, [r4, #64]	; 0x40
}
 800a342:	b007      	add	sp, #28
 800a344:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
 800a348:	b95d      	cbnz	r5, 800a362 <HAL_I2C_Mem_Read+0x2f2>
 800a34a:	e02b      	b.n	800a3a4 <HAL_I2C_Mem_Read+0x334>
 800a34c:	ffff0000 	.word	0xffff0000
    if (__HAL_I2C_GET_FLAG(hi2c, I2C_FLAG_STOPF) == SET)
 800a350:	695a      	ldr	r2, [r3, #20]
 800a352:	06d2      	lsls	r2, r2, #27
 800a354:	d40c      	bmi.n	800a370 <HAL_I2C_Mem_Read+0x300>
    if (((HAL_GetTick() - Tickstart) > Timeout) || (Timeout == 0U))
 800a356:	f7fe fe95 	bl	8009084 <HAL_GetTick>
 800a35a:	1b80      	subs	r0, r0, r6
 800a35c:	4285      	cmp	r5, r0
 800a35e:	d3e1      	bcc.n	800a324 <HAL_I2C_Mem_Read+0x2b4>
  while (__HAL_I2C_GET_FLAG(hi2c, I2C_FLAG_RXNE) == RESET)
 800a360:	6823      	ldr	r3, [r4, #0]
 800a362:	695a      	ldr	r2, [r3, #20]
 800a364:	0651      	lsls	r1, r2, #25
 800a366:	d5f3      	bpl.n	800a350 <HAL_I2C_Mem_Read+0x2e0>
          *hi2c->pBuffPtr = (uint8_t)hi2c->Instance->DR;
 800a368:	691a      	ldr	r2, [r3, #16]
 800a36a:	6a63      	ldr	r3, [r4, #36]	; 0x24
 800a36c:	701a      	strb	r2, [r3, #0]
          hi2c->pBuffPtr++;
 800a36e:	e7a5      	b.n	800a2bc <HAL_I2C_Mem_Read+0x24c>
      hi2c->PreviousState       = I2C_STATE_NONE;
 800a370:	2200      	movs	r2, #0
      __HAL_I2C_CLEAR_FLAG(hi2c, I2C_FLAG_STOPF);
 800a372:	f06f 0010 	mvn.w	r0, #16
      hi2c->State               = HAL_I2C_STATE_READY;
 800a376:	2120      	movs	r1, #32
      __HAL_I2C_CLEAR_FLAG(hi2c, I2C_FLAG_STOPF);
 800a378:	6158      	str	r0, [r3, #20]
      hi2c->PreviousState       = I2C_STATE_NONE;
 800a37a:	6322      	str	r2, [r4, #48]	; 0x30
      hi2c->State               = HAL_I2C_STATE_READY;
 800a37c:	f884 103d 	strb.w	r1, [r4, #61]	; 0x3d
      hi2c->Mode                = HAL_I2C_MODE_NONE;
 800a380:	f884 203e 	strb.w	r2, [r4, #62]	; 0x3e
      hi2c->ErrorCode           |= HAL_I2C_ERROR_NONE;
 800a384:	6c23      	ldr	r3, [r4, #64]	; 0x40
 800a386:	6423      	str	r3, [r4, #64]	; 0x40
      __HAL_UNLOCK(hi2c);
 800a388:	f884 203c 	strb.w	r2, [r4, #60]	; 0x3c
          return HAL_ERROR;
 800a38c:	2701      	movs	r7, #1
 800a38e:	e680      	b.n	800a092 <HAL_I2C_Mem_Read+0x22>
  while (__HAL_I2C_GET_FLAG(hi2c, I2C_FLAG_RXNE) == RESET)
 800a390:	695a      	ldr	r2, [r3, #20]
 800a392:	0652      	lsls	r2, r2, #25
 800a394:	f53f af44 	bmi.w	800a220 <HAL_I2C_Mem_Read+0x1b0>
    if (__HAL_I2C_GET_FLAG(hi2c, I2C_FLAG_STOPF) == SET)
 800a398:	695a      	ldr	r2, [r3, #20]
 800a39a:	06d1      	lsls	r1, r2, #27
 800a39c:	d4e8      	bmi.n	800a370 <HAL_I2C_Mem_Read+0x300>
    if (((HAL_GetTick() - Tickstart) > Timeout) || (Timeout == 0U))
 800a39e:	f7fe fe71 	bl	8009084 <HAL_GetTick>
 800a3a2:	e7bf      	b.n	800a324 <HAL_I2C_Mem_Read+0x2b4>
  while (__HAL_I2C_GET_FLAG(hi2c, I2C_FLAG_RXNE) == RESET)
 800a3a4:	695a      	ldr	r2, [r3, #20]
 800a3a6:	0650      	lsls	r0, r2, #25
 800a3a8:	d5f6      	bpl.n	800a398 <HAL_I2C_Mem_Read+0x328>
 800a3aa:	e7dd      	b.n	800a368 <HAL_I2C_Mem_Read+0x2f8>
      CLEAR_BIT(hi2c->Instance->CR1, I2C_CR1_ACK);
 800a3ac:	6823      	ldr	r3, [r4, #0]
 800a3ae:	6819      	ldr	r1, [r3, #0]
 800a3b0:	f421 6180 	bic.w	r1, r1, #1024	; 0x400
 800a3b4:	6019      	str	r1, [r3, #0]
      __HAL_I2C_CLEAR_ADDRFLAG(hi2c);
 800a3b6:	9003      	str	r0, [sp, #12]
 800a3b8:	6959      	ldr	r1, [r3, #20]
 800a3ba:	9103      	str	r1, [sp, #12]
 800a3bc:	6999      	ldr	r1, [r3, #24]
 800a3be:	9103      	str	r1, [sp, #12]
 800a3c0:	9903      	ldr	r1, [sp, #12]
      SET_BIT(hi2c->Instance->CR1, I2C_CR1_STOP);
 800a3c2:	6819      	ldr	r1, [r3, #0]
 800a3c4:	f441 7100 	orr.w	r1, r1, #512	; 0x200
 800a3c8:	6019      	str	r1, [r3, #0]
 800a3ca:	e6cd      	b.n	800a168 <HAL_I2C_Mem_Read+0xf8>

0800a3cc <HAL_I2C_MasterTxCpltCallback>:
 800a3cc:	4770      	bx	lr
 800a3ce:	bf00      	nop

0800a3d0 <HAL_I2C_MasterRxCpltCallback>:
 800a3d0:	4770      	bx	lr
 800a3d2:	bf00      	nop

0800a3d4 <HAL_I2C_SlaveTxCpltCallback>:
 800a3d4:	4770      	bx	lr
 800a3d6:	bf00      	nop

0800a3d8 <HAL_I2C_SlaveRxCpltCallback>:
 800a3d8:	4770      	bx	lr
 800a3da:	bf00      	nop

0800a3dc <HAL_I2C_AddrCallback>:
}
 800a3dc:	4770      	bx	lr
 800a3de:	bf00      	nop

0800a3e0 <HAL_I2C_ListenCpltCallback>:
 800a3e0:	4770      	bx	lr
 800a3e2:	bf00      	nop

0800a3e4 <HAL_I2C_MemTxCpltCallback>:
 800a3e4:	4770      	bx	lr
 800a3e6:	bf00      	nop

0800a3e8 <I2C_MemoryTransmit_TXE_BTF>:
  HAL_I2C_StateTypeDef CurrentState = hi2c->State;
 800a3e8:	f890 203d 	ldrb.w	r2, [r0, #61]	; 0x3d
  if (hi2c->EventCount == 0U)
 800a3ec:	6d01      	ldr	r1, [r0, #80]	; 0x50
{
 800a3ee:	4603      	mov	r3, r0
  if (hi2c->EventCount == 0U)
 800a3f0:	b959      	cbnz	r1, 800a40a <I2C_MemoryTransmit_TXE_BTF+0x22>
    if (hi2c->MemaddSize == I2C_MEMADD_SIZE_8BIT)
 800a3f2:	6cc2      	ldr	r2, [r0, #76]	; 0x4c
      hi2c->Instance->DR = I2C_MEM_ADD_LSB(hi2c->Memaddress);
 800a3f4:	6801      	ldr	r1, [r0, #0]
    if (hi2c->MemaddSize == I2C_MEMADD_SIZE_8BIT)
 800a3f6:	2a01      	cmp	r2, #1
      hi2c->Instance->DR = I2C_MEM_ADD_LSB(hi2c->Memaddress);
 800a3f8:	6c82      	ldr	r2, [r0, #72]	; 0x48
    if (hi2c->MemaddSize == I2C_MEMADD_SIZE_8BIT)
 800a3fa:	d00d      	beq.n	800a418 <I2C_MemoryTransmit_TXE_BTF+0x30>
      hi2c->Instance->DR = I2C_MEM_ADD_MSB(hi2c->Memaddress);
 800a3fc:	f3c2 2207 	ubfx	r2, r2, #8, #8
 800a400:	610a      	str	r2, [r1, #16]
      hi2c->EventCount++;
 800a402:	6d02      	ldr	r2, [r0, #80]	; 0x50
 800a404:	3201      	adds	r2, #1
 800a406:	6502      	str	r2, [r0, #80]	; 0x50
 800a408:	4770      	bx	lr
  else if (hi2c->EventCount == 1U)
 800a40a:	6d01      	ldr	r1, [r0, #80]	; 0x50
 800a40c:	2901      	cmp	r1, #1
 800a40e:	d009      	beq.n	800a424 <I2C_MemoryTransmit_TXE_BTF+0x3c>
  else if (hi2c->EventCount == 2U)
 800a410:	6d01      	ldr	r1, [r0, #80]	; 0x50
 800a412:	2902      	cmp	r1, #2
 800a414:	d00e      	beq.n	800a434 <I2C_MemoryTransmit_TXE_BTF+0x4c>
 800a416:	4770      	bx	lr
      hi2c->Instance->DR = I2C_MEM_ADD_LSB(hi2c->Memaddress);
 800a418:	b2d2      	uxtb	r2, r2
 800a41a:	610a      	str	r2, [r1, #16]
      hi2c->EventCount += 2U;
 800a41c:	6d02      	ldr	r2, [r0, #80]	; 0x50
 800a41e:	3202      	adds	r2, #2
 800a420:	6502      	str	r2, [r0, #80]	; 0x50
 800a422:	4770      	bx	lr
    hi2c->Instance->DR = I2C_MEM_ADD_LSB(hi2c->Memaddress);
 800a424:	6c82      	ldr	r2, [r0, #72]	; 0x48
 800a426:	6801      	ldr	r1, [r0, #0]
 800a428:	b2d2      	uxtb	r2, r2
 800a42a:	610a      	str	r2, [r1, #16]
    hi2c->EventCount++;
 800a42c:	6d02      	ldr	r2, [r0, #80]	; 0x50
 800a42e:	3201      	adds	r2, #1
 800a430:	6502      	str	r2, [r0, #80]	; 0x50
 800a432:	4770      	bx	lr
 800a434:	b2d2      	uxtb	r2, r2
    if (CurrentState == HAL_I2C_STATE_BUSY_RX)
 800a436:	2a22      	cmp	r2, #34	; 0x22
 800a438:	d01f      	beq.n	800a47a <I2C_MemoryTransmit_TXE_BTF+0x92>
    else if ((hi2c->XferCount > 0U) && (CurrentState == HAL_I2C_STATE_BUSY_TX))
 800a43a:	8d41      	ldrh	r1, [r0, #42]	; 0x2a
 800a43c:	b289      	uxth	r1, r1
 800a43e:	b9c1      	cbnz	r1, 800a472 <I2C_MemoryTransmit_TXE_BTF+0x8a>
    else if ((hi2c->XferCount == 0U) && (CurrentState == HAL_I2C_STATE_BUSY_TX))
 800a440:	8d41      	ldrh	r1, [r0, #42]	; 0x2a
 800a442:	b289      	uxth	r1, r1
 800a444:	2900      	cmp	r1, #0
 800a446:	d1e6      	bne.n	800a416 <I2C_MemoryTransmit_TXE_BTF+0x2e>
 800a448:	2a21      	cmp	r2, #33	; 0x21
 800a44a:	d1e4      	bne.n	800a416 <I2C_MemoryTransmit_TXE_BTF+0x2e>
      __HAL_I2C_DISABLE_IT(hi2c, I2C_IT_EVT | I2C_IT_BUF | I2C_IT_ERR);
 800a44c:	6802      	ldr	r2, [r0, #0]
{
 800a44e:	b510      	push	{r4, lr}
      __HAL_I2C_DISABLE_IT(hi2c, I2C_IT_EVT | I2C_IT_BUF | I2C_IT_ERR);
 800a450:	6854      	ldr	r4, [r2, #4]
 800a452:	f424 64e0 	bic.w	r4, r4, #1792	; 0x700
 800a456:	6054      	str	r4, [r2, #4]
      SET_BIT(hi2c->Instance->CR1, I2C_CR1_STOP);
 800a458:	6814      	ldr	r4, [r2, #0]
 800a45a:	f444 7400 	orr.w	r4, r4, #512	; 0x200
 800a45e:	6014      	str	r4, [r2, #0]
      hi2c->State = HAL_I2C_STATE_READY;
 800a460:	2220      	movs	r2, #32
      hi2c->PreviousState = I2C_STATE_NONE;
 800a462:	6301      	str	r1, [r0, #48]	; 0x30
      hi2c->State = HAL_I2C_STATE_READY;
 800a464:	f880 203d 	strb.w	r2, [r0, #61]	; 0x3d
      hi2c->Mode = HAL_I2C_MODE_NONE;
 800a468:	f880 103e 	strb.w	r1, [r0, #62]	; 0x3e
      HAL_I2C_MemTxCpltCallback(hi2c);
 800a46c:	f7ff ffba 	bl	800a3e4 <HAL_I2C_MemTxCpltCallback>
}
 800a470:	bd10      	pop	{r4, pc}
    else if ((hi2c->XferCount > 0U) && (CurrentState == HAL_I2C_STATE_BUSY_TX))
 800a472:	2a21      	cmp	r2, #33	; 0x21
 800a474:	d00a      	beq.n	800a48c <I2C_MemoryTransmit_TXE_BTF+0xa4>
    else if ((hi2c->XferCount == 0U) && (CurrentState == HAL_I2C_STATE_BUSY_TX))
 800a476:	8d5b      	ldrh	r3, [r3, #42]	; 0x2a
 800a478:	4770      	bx	lr
      hi2c->Instance->CR1 |= I2C_CR1_START;
 800a47a:	6801      	ldr	r1, [r0, #0]
 800a47c:	680a      	ldr	r2, [r1, #0]
 800a47e:	f442 7280 	orr.w	r2, r2, #256	; 0x100
 800a482:	600a      	str	r2, [r1, #0]
      hi2c->EventCount++;
 800a484:	6d02      	ldr	r2, [r0, #80]	; 0x50
 800a486:	3201      	adds	r2, #1
 800a488:	6502      	str	r2, [r0, #80]	; 0x50
 800a48a:	4770      	bx	lr
      hi2c->Instance->DR = *hi2c->pBuffPtr;
 800a48c:	6a41      	ldr	r1, [r0, #36]	; 0x24
 800a48e:	6802      	ldr	r2, [r0, #0]
 800a490:	f811 0b01 	ldrb.w	r0, [r1], #1
 800a494:	6110      	str	r0, [r2, #16]
      hi2c->XferCount--;
 800a496:	8d5a      	ldrh	r2, [r3, #42]	; 0x2a
      hi2c->pBuffPtr++;
 800a498:	6259      	str	r1, [r3, #36]	; 0x24
      hi2c->XferCount--;
 800a49a:	3a01      	subs	r2, #1
 800a49c:	b292      	uxth	r2, r2
 800a49e:	855a      	strh	r2, [r3, #42]	; 0x2a
 800a4a0:	4770      	bx	lr
 800a4a2:	bf00      	nop

0800a4a4 <HAL_I2C_MemRxCpltCallback>:
 800a4a4:	4770      	bx	lr
 800a4a6:	bf00      	nop

0800a4a8 <HAL_I2C_ErrorCallback>:
 800a4a8:	4770      	bx	lr
 800a4aa:	bf00      	nop

0800a4ac <HAL_I2C_AbortCpltCallback>:
 800a4ac:	4770      	bx	lr
 800a4ae:	bf00      	nop

0800a4b0 <I2C_DMAAbort>:
{
 800a4b0:	b570      	push	{r4, r5, r6, lr}
  count = I2C_TIMEOUT_FLAG * (SystemCoreClock / 25U / 1000U);
 800a4b2:	4b3a      	ldr	r3, [pc, #232]	; (800a59c <I2C_DMAAbort+0xec>)
 800a4b4:	4a3a      	ldr	r2, [pc, #232]	; (800a5a0 <I2C_DMAAbort+0xf0>)
 800a4b6:	681b      	ldr	r3, [r3, #0]
  I2C_HandleTypeDef *hi2c = (I2C_HandleTypeDef *)((DMA_HandleTypeDef *)hdma)->Parent; /* Derogation MISRAC2012-Rule-11.5 */
 800a4b8:	6b80      	ldr	r0, [r0, #56]	; 0x38
{
 800a4ba:	b082      	sub	sp, #8
  count = I2C_TIMEOUT_FLAG * (SystemCoreClock / 25U / 1000U);
 800a4bc:	08db      	lsrs	r3, r3, #3
  __IO uint32_t count = 0U;
 800a4be:	2100      	movs	r1, #0
  count = I2C_TIMEOUT_FLAG * (SystemCoreClock / 25U / 1000U);
 800a4c0:	fba2 2303 	umull	r2, r3, r2, r3
  __IO uint32_t count = 0U;
 800a4c4:	9101      	str	r1, [sp, #4]
  count = I2C_TIMEOUT_FLAG * (SystemCoreClock / 25U / 1000U);
 800a4c6:	0a1b      	lsrs	r3, r3, #8
  HAL_I2C_StateTypeDef CurrentState = hi2c->State;
 800a4c8:	f890 103d 	ldrb.w	r1, [r0, #61]	; 0x3d
  while (READ_BIT(hi2c->Instance->CR1, I2C_CR1_STOP) == I2C_CR1_STOP);
 800a4cc:	6802      	ldr	r2, [r0, #0]
  count = I2C_TIMEOUT_FLAG * (SystemCoreClock / 25U / 1000U);
 800a4ce:	eb03 0383 	add.w	r3, r3, r3, lsl #2
 800a4d2:	ebc3 03c3 	rsb	r3, r3, r3, lsl #3
  HAL_I2C_StateTypeDef CurrentState = hi2c->State;
 800a4d6:	b2c9      	uxtb	r1, r1
  count = I2C_TIMEOUT_FLAG * (SystemCoreClock / 25U / 1000U);
 800a4d8:	9301      	str	r3, [sp, #4]
 800a4da:	e005      	b.n	800a4e8 <I2C_DMAAbort+0x38>
    count--;
 800a4dc:	9b01      	ldr	r3, [sp, #4]
 800a4de:	3b01      	subs	r3, #1
 800a4e0:	9301      	str	r3, [sp, #4]
  while (READ_BIT(hi2c->Instance->CR1, I2C_CR1_STOP) == I2C_CR1_STOP);
 800a4e2:	6813      	ldr	r3, [r2, #0]
 800a4e4:	059b      	lsls	r3, r3, #22
 800a4e6:	d506      	bpl.n	800a4f6 <I2C_DMAAbort+0x46>
    if (count == 0U)
 800a4e8:	9b01      	ldr	r3, [sp, #4]
 800a4ea:	2b00      	cmp	r3, #0
 800a4ec:	d1f6      	bne.n	800a4dc <I2C_DMAAbort+0x2c>
      hi2c->ErrorCode |= HAL_I2C_ERROR_TIMEOUT;
 800a4ee:	6c03      	ldr	r3, [r0, #64]	; 0x40
 800a4f0:	f043 0320 	orr.w	r3, r3, #32
 800a4f4:	6403      	str	r3, [r0, #64]	; 0x40
  if (hi2c->hdmatx != NULL)
 800a4f6:	6b44      	ldr	r4, [r0, #52]	; 0x34
 800a4f8:	b34c      	cbz	r4, 800a54e <I2C_DMAAbort+0x9e>
  if (hi2c->hdmarx != NULL)
 800a4fa:	6b83      	ldr	r3, [r0, #56]	; 0x38
    hi2c->hdmatx->XferCpltCallback = NULL;
 800a4fc:	2500      	movs	r5, #0
 800a4fe:	63e5      	str	r5, [r4, #60]	; 0x3c
  if (hi2c->hdmarx != NULL)
 800a500:	b1f3      	cbz	r3, 800a540 <I2C_DMAAbort+0x90>
  CLEAR_BIT(hi2c->Instance->CR1, I2C_CR1_ACK);
 800a502:	6816      	ldr	r6, [r2, #0]
    hi2c->hdmarx->XferCpltCallback = NULL;
 800a504:	63dd      	str	r5, [r3, #60]	; 0x3c
  CLEAR_BIT(hi2c->Instance->CR1, I2C_CR1_ACK);
 800a506:	f426 6680 	bic.w	r6, r6, #1024	; 0x400
 800a50a:	6016      	str	r6, [r2, #0]
  hi2c->XferCount = 0U;
 800a50c:	8545      	strh	r5, [r0, #42]	; 0x2a
    hi2c->hdmatx->XferAbortCallback = NULL;
 800a50e:	6525      	str	r5, [r4, #80]	; 0x50
    hi2c->hdmarx->XferAbortCallback = NULL;
 800a510:	2400      	movs	r4, #0
 800a512:	651c      	str	r4, [r3, #80]	; 0x50
  __HAL_I2C_DISABLE(hi2c);
 800a514:	6813      	ldr	r3, [r2, #0]
 800a516:	f023 0301 	bic.w	r3, r3, #1
 800a51a:	6013      	str	r3, [r2, #0]
  if (hi2c->State == HAL_I2C_STATE_ABORT)
 800a51c:	f890 303d 	ldrb.w	r3, [r0, #61]	; 0x3d
 800a520:	2b60      	cmp	r3, #96	; 0x60
 800a522:	d02a      	beq.n	800a57a <I2C_DMAAbort+0xca>
    if (((uint32_t)CurrentState & (uint32_t)HAL_I2C_STATE_LISTEN) == (uint32_t)HAL_I2C_STATE_LISTEN)
 800a524:	f001 0128 	and.w	r1, r1, #40	; 0x28
 800a528:	2928      	cmp	r1, #40	; 0x28
 800a52a:	d019      	beq.n	800a560 <I2C_DMAAbort+0xb0>
      hi2c->State = HAL_I2C_STATE_READY;
 800a52c:	2220      	movs	r2, #32
      hi2c->Mode = HAL_I2C_MODE_NONE;
 800a52e:	2300      	movs	r3, #0
      hi2c->State = HAL_I2C_STATE_READY;
 800a530:	f880 203d 	strb.w	r2, [r0, #61]	; 0x3d
      hi2c->Mode = HAL_I2C_MODE_NONE;
 800a534:	f880 303e 	strb.w	r3, [r0, #62]	; 0x3e
    HAL_I2C_ErrorCallback(hi2c);
 800a538:	f7ff ffb6 	bl	800a4a8 <HAL_I2C_ErrorCallback>
}
 800a53c:	b002      	add	sp, #8
 800a53e:	bd70      	pop	{r4, r5, r6, pc}
  CLEAR_BIT(hi2c->Instance->CR1, I2C_CR1_ACK);
 800a540:	6815      	ldr	r5, [r2, #0]
 800a542:	f425 6580 	bic.w	r5, r5, #1024	; 0x400
 800a546:	6015      	str	r5, [r2, #0]
  hi2c->XferCount = 0U;
 800a548:	8543      	strh	r3, [r0, #42]	; 0x2a
    hi2c->hdmatx->XferAbortCallback = NULL;
 800a54a:	6523      	str	r3, [r4, #80]	; 0x50
  if (hi2c->hdmarx != NULL)
 800a54c:	e7e2      	b.n	800a514 <I2C_DMAAbort+0x64>
  if (hi2c->hdmarx != NULL)
 800a54e:	6b83      	ldr	r3, [r0, #56]	; 0x38
 800a550:	b1f3      	cbz	r3, 800a590 <I2C_DMAAbort+0xe0>
  CLEAR_BIT(hi2c->Instance->CR1, I2C_CR1_ACK);
 800a552:	6815      	ldr	r5, [r2, #0]
    hi2c->hdmarx->XferCpltCallback = NULL;
 800a554:	63dc      	str	r4, [r3, #60]	; 0x3c
  CLEAR_BIT(hi2c->Instance->CR1, I2C_CR1_ACK);
 800a556:	f425 6580 	bic.w	r5, r5, #1024	; 0x400
 800a55a:	6015      	str	r5, [r2, #0]
  hi2c->XferCount = 0U;
 800a55c:	8544      	strh	r4, [r0, #42]	; 0x2a
  if (hi2c->hdmatx != NULL)
 800a55e:	e7d7      	b.n	800a510 <I2C_DMAAbort+0x60>
      __HAL_I2C_ENABLE(hi2c);
 800a560:	6813      	ldr	r3, [r2, #0]
 800a562:	f043 0301 	orr.w	r3, r3, #1
 800a566:	6013      	str	r3, [r2, #0]
      SET_BIT(hi2c->Instance->CR1, I2C_CR1_ACK);
 800a568:	6813      	ldr	r3, [r2, #0]
      hi2c->PreviousState = I2C_STATE_NONE;
 800a56a:	2400      	movs	r4, #0
      SET_BIT(hi2c->Instance->CR1, I2C_CR1_ACK);
 800a56c:	f443 6380 	orr.w	r3, r3, #1024	; 0x400
 800a570:	6013      	str	r3, [r2, #0]
      hi2c->PreviousState = I2C_STATE_NONE;
 800a572:	6304      	str	r4, [r0, #48]	; 0x30
      hi2c->State = HAL_I2C_STATE_LISTEN;
 800a574:	f880 103d 	strb.w	r1, [r0, #61]	; 0x3d
 800a578:	e7de      	b.n	800a538 <I2C_DMAAbort+0x88>
    hi2c->Mode          = HAL_I2C_MODE_NONE;
 800a57a:	2300      	movs	r3, #0
    hi2c->State         = HAL_I2C_STATE_READY;
 800a57c:	2220      	movs	r2, #32
 800a57e:	f880 203d 	strb.w	r2, [r0, #61]	; 0x3d
    hi2c->Mode          = HAL_I2C_MODE_NONE;
 800a582:	f880 303e 	strb.w	r3, [r0, #62]	; 0x3e
    hi2c->ErrorCode     = HAL_I2C_ERROR_NONE;
 800a586:	6403      	str	r3, [r0, #64]	; 0x40
    HAL_I2C_AbortCpltCallback(hi2c);
 800a588:	f7ff ff90 	bl	800a4ac <HAL_I2C_AbortCpltCallback>
}
 800a58c:	b002      	add	sp, #8
 800a58e:	bd70      	pop	{r4, r5, r6, pc}
  CLEAR_BIT(hi2c->Instance->CR1, I2C_CR1_ACK);
 800a590:	6814      	ldr	r4, [r2, #0]
 800a592:	f424 6480 	bic.w	r4, r4, #1024	; 0x400
 800a596:	6014      	str	r4, [r2, #0]
  hi2c->XferCount = 0U;
 800a598:	8543      	strh	r3, [r0, #42]	; 0x2a
  if (hi2c->hdmatx != NULL)
 800a59a:	e7bb      	b.n	800a514 <I2C_DMAAbort+0x64>
 800a59c:	20000078 	.word	0x20000078
 800a5a0:	14f8b589 	.word	0x14f8b589

0800a5a4 <I2C_ITError>:
{
 800a5a4:	b510      	push	{r4, lr}
  HAL_I2C_StateTypeDef CurrentState = hi2c->State;
 800a5a6:	f890 203d 	ldrb.w	r2, [r0, #61]	; 0x3d
  HAL_I2C_ModeTypeDef CurrentMode = hi2c->Mode;
 800a5aa:	f890 303e 	ldrb.w	r3, [r0, #62]	; 0x3e
  if (((CurrentMode == HAL_I2C_MODE_MASTER) || (CurrentMode == HAL_I2C_MODE_MEM)) && (CurrentState == HAL_I2C_STATE_BUSY_RX))
 800a5ae:	2b10      	cmp	r3, #16
{
 800a5b0:	4604      	mov	r4, r0
  HAL_I2C_StateTypeDef CurrentState = hi2c->State;
 800a5b2:	b2d2      	uxtb	r2, r2
  if (((CurrentMode == HAL_I2C_MODE_MASTER) || (CurrentMode == HAL_I2C_MODE_MEM)) && (CurrentState == HAL_I2C_STATE_BUSY_RX))
 800a5b4:	d039      	beq.n	800a62a <I2C_ITError+0x86>
 800a5b6:	b2d9      	uxtb	r1, r3
 800a5b8:	2940      	cmp	r1, #64	; 0x40
 800a5ba:	d036      	beq.n	800a62a <I2C_ITError+0x86>
  if (((uint32_t)CurrentState & (uint32_t)HAL_I2C_STATE_LISTEN) == (uint32_t)HAL_I2C_STATE_LISTEN)
 800a5bc:	f002 0128 	and.w	r1, r2, #40	; 0x28
 800a5c0:	2928      	cmp	r1, #40	; 0x28
 800a5c2:	d03d      	beq.n	800a640 <I2C_ITError+0x9c>
    hi2c->Instance->CR1 &= ~I2C_CR1_POS;
 800a5c4:	6823      	ldr	r3, [r4, #0]
    if ((READ_BIT(hi2c->Instance->CR2, I2C_CR2_DMAEN) != I2C_CR2_DMAEN) && (CurrentState != HAL_I2C_STATE_ABORT))
 800a5c6:	6859      	ldr	r1, [r3, #4]
 800a5c8:	0508      	lsls	r0, r1, #20
 800a5ca:	d407      	bmi.n	800a5dc <I2C_ITError+0x38>
 800a5cc:	2a60      	cmp	r2, #96	; 0x60
 800a5ce:	d005      	beq.n	800a5dc <I2C_ITError+0x38>
      hi2c->State = HAL_I2C_STATE_READY;
 800a5d0:	2120      	movs	r1, #32
      hi2c->Mode = HAL_I2C_MODE_NONE;
 800a5d2:	2200      	movs	r2, #0
      hi2c->State = HAL_I2C_STATE_READY;
 800a5d4:	f884 103d 	strb.w	r1, [r4, #61]	; 0x3d
      hi2c->Mode = HAL_I2C_MODE_NONE;
 800a5d8:	f884 203e 	strb.w	r2, [r4, #62]	; 0x3e
    hi2c->PreviousState = I2C_STATE_NONE;
 800a5dc:	2200      	movs	r2, #0
 800a5de:	6322      	str	r2, [r4, #48]	; 0x30
  if (READ_BIT(hi2c->Instance->CR2, I2C_CR2_DMAEN) == I2C_CR2_DMAEN)
 800a5e0:	685a      	ldr	r2, [r3, #4]
 800a5e2:	f412 6200 	ands.w	r2, r2, #2048	; 0x800
 800a5e6:	d134      	bne.n	800a652 <I2C_ITError+0xae>
  else if (hi2c->State == HAL_I2C_STATE_ABORT)
 800a5e8:	f894 103d 	ldrb.w	r1, [r4, #61]	; 0x3d
 800a5ec:	2960      	cmp	r1, #96	; 0x60
 800a5ee:	d075      	beq.n	800a6dc <I2C_ITError+0x138>
    if (__HAL_I2C_GET_FLAG(hi2c, I2C_FLAG_RXNE) == SET)
 800a5f0:	695a      	ldr	r2, [r3, #20]
 800a5f2:	0650      	lsls	r0, r2, #25
 800a5f4:	d505      	bpl.n	800a602 <I2C_ITError+0x5e>
      *hi2c->pBuffPtr = (uint8_t)hi2c->Instance->DR;
 800a5f6:	6a62      	ldr	r2, [r4, #36]	; 0x24
 800a5f8:	691b      	ldr	r3, [r3, #16]
 800a5fa:	7013      	strb	r3, [r2, #0]
      hi2c->pBuffPtr++;
 800a5fc:	6a63      	ldr	r3, [r4, #36]	; 0x24
 800a5fe:	3301      	adds	r3, #1
 800a600:	6263      	str	r3, [r4, #36]	; 0x24
    HAL_I2C_ErrorCallback(hi2c);
 800a602:	4620      	mov	r0, r4
 800a604:	f7ff ff50 	bl	800a4a8 <HAL_I2C_ErrorCallback>
  CurrentError = hi2c->ErrorCode;
 800a608:	6c23      	ldr	r3, [r4, #64]	; 0x40
  if (((CurrentError & HAL_I2C_ERROR_BERR) == HAL_I2C_ERROR_BERR) || \
 800a60a:	0719      	lsls	r1, r3, #28
 800a60c:	d004      	beq.n	800a618 <I2C_ITError+0x74>
    __HAL_I2C_DISABLE_IT(hi2c, I2C_IT_EVT | I2C_IT_BUF | I2C_IT_ERR);
 800a60e:	6822      	ldr	r2, [r4, #0]
 800a610:	6853      	ldr	r3, [r2, #4]
 800a612:	f423 63e0 	bic.w	r3, r3, #1792	; 0x700
 800a616:	6053      	str	r3, [r2, #4]
  CurrentState = hi2c->State;
 800a618:	f894 303d 	ldrb.w	r3, [r4, #61]	; 0x3d
  if (((hi2c->ErrorCode & HAL_I2C_ERROR_AF) == HAL_I2C_ERROR_AF) && (CurrentState == HAL_I2C_STATE_LISTEN))
 800a61c:	6c22      	ldr	r2, [r4, #64]	; 0x40
 800a61e:	0752      	lsls	r2, r2, #29
  CurrentState = hi2c->State;
 800a620:	b2db      	uxtb	r3, r3
  if (((hi2c->ErrorCode & HAL_I2C_ERROR_AF) == HAL_I2C_ERROR_AF) && (CurrentState == HAL_I2C_STATE_LISTEN))
 800a622:	d501      	bpl.n	800a628 <I2C_ITError+0x84>
 800a624:	2b28      	cmp	r3, #40	; 0x28
 800a626:	d02f      	beq.n	800a688 <I2C_ITError+0xe4>
}
 800a628:	bd10      	pop	{r4, pc}
  if (((CurrentMode == HAL_I2C_MODE_MASTER) || (CurrentMode == HAL_I2C_MODE_MEM)) && (CurrentState == HAL_I2C_STATE_BUSY_RX))
 800a62a:	2a22      	cmp	r2, #34	; 0x22
 800a62c:	d1c6      	bne.n	800a5bc <I2C_ITError+0x18>
    hi2c->Instance->CR1 &= ~I2C_CR1_POS;
 800a62e:	6823      	ldr	r3, [r4, #0]
 800a630:	681a      	ldr	r2, [r3, #0]
 800a632:	f422 6200 	bic.w	r2, r2, #2048	; 0x800
 800a636:	601a      	str	r2, [r3, #0]
    if ((READ_BIT(hi2c->Instance->CR2, I2C_CR2_DMAEN) != I2C_CR2_DMAEN) && (CurrentState != HAL_I2C_STATE_ABORT))
 800a638:	685a      	ldr	r2, [r3, #4]
 800a63a:	0512      	lsls	r2, r2, #20
 800a63c:	d5c8      	bpl.n	800a5d0 <I2C_ITError+0x2c>
 800a63e:	e7cd      	b.n	800a5dc <I2C_ITError+0x38>
    hi2c->PreviousState = I2C_STATE_NONE;
 800a640:	2300      	movs	r3, #0
 800a642:	6323      	str	r3, [r4, #48]	; 0x30
    hi2c->Instance->CR1 &= ~I2C_CR1_POS;
 800a644:	6823      	ldr	r3, [r4, #0]
    hi2c->State = HAL_I2C_STATE_LISTEN;
 800a646:	f884 103d 	strb.w	r1, [r4, #61]	; 0x3d
  if (READ_BIT(hi2c->Instance->CR2, I2C_CR2_DMAEN) == I2C_CR2_DMAEN)
 800a64a:	685a      	ldr	r2, [r3, #4]
 800a64c:	f412 6200 	ands.w	r2, r2, #2048	; 0x800
 800a650:	d0ca      	beq.n	800a5e8 <I2C_ITError+0x44>
    hi2c->Instance->CR2 &= ~I2C_CR2_DMAEN;
 800a652:	685a      	ldr	r2, [r3, #4]
    if (hi2c->hdmatx->State != HAL_DMA_STATE_READY)
 800a654:	6b60      	ldr	r0, [r4, #52]	; 0x34
    hi2c->Instance->CR2 &= ~I2C_CR2_DMAEN;
 800a656:	f422 6200 	bic.w	r2, r2, #2048	; 0x800
 800a65a:	605a      	str	r2, [r3, #4]
    if (hi2c->hdmatx->State != HAL_DMA_STATE_READY)
 800a65c:	f890 3035 	ldrb.w	r3, [r0, #53]	; 0x35
 800a660:	2b01      	cmp	r3, #1
 800a662:	d01e      	beq.n	800a6a2 <I2C_ITError+0xfe>
      hi2c->hdmatx->XferAbortCallback = I2C_DMAAbort;
 800a664:	4b28      	ldr	r3, [pc, #160]	; (800a708 <I2C_ITError+0x164>)
 800a666:	6503      	str	r3, [r0, #80]	; 0x50
      if (HAL_DMA_Abort_IT(hi2c->hdmatx) != HAL_OK)
 800a668:	f7fe fe2e 	bl	80092c8 <HAL_DMA_Abort_IT>
 800a66c:	2800      	cmp	r0, #0
 800a66e:	d0cb      	beq.n	800a608 <I2C_ITError+0x64>
        __HAL_I2C_DISABLE(hi2c);
 800a670:	6822      	ldr	r2, [r4, #0]
        hi2c->hdmatx->XferAbortCallback(hi2c->hdmatx);
 800a672:	6b60      	ldr	r0, [r4, #52]	; 0x34
        __HAL_I2C_DISABLE(hi2c);
 800a674:	6813      	ldr	r3, [r2, #0]
        hi2c->State = HAL_I2C_STATE_READY;
 800a676:	2120      	movs	r1, #32
        __HAL_I2C_DISABLE(hi2c);
 800a678:	f023 0301 	bic.w	r3, r3, #1
 800a67c:	6013      	str	r3, [r2, #0]
        hi2c->State = HAL_I2C_STATE_READY;
 800a67e:	f884 103d 	strb.w	r1, [r4, #61]	; 0x3d
        hi2c->hdmatx->XferAbortCallback(hi2c->hdmatx);
 800a682:	6d03      	ldr	r3, [r0, #80]	; 0x50
 800a684:	4798      	blx	r3
 800a686:	e7bf      	b.n	800a608 <I2C_ITError+0x64>
    hi2c->PreviousState = I2C_STATE_NONE;
 800a688:	2300      	movs	r3, #0
    hi2c->XferOptions   = I2C_NO_OPTION_FRAME;
 800a68a:	4920      	ldr	r1, [pc, #128]	; (800a70c <I2C_ITError+0x168>)
 800a68c:	62e1      	str	r1, [r4, #44]	; 0x2c
    hi2c->State         = HAL_I2C_STATE_READY;
 800a68e:	2220      	movs	r2, #32
    hi2c->PreviousState = I2C_STATE_NONE;
 800a690:	6323      	str	r3, [r4, #48]	; 0x30
    HAL_I2C_ListenCpltCallback(hi2c);
 800a692:	4620      	mov	r0, r4
    hi2c->State         = HAL_I2C_STATE_READY;
 800a694:	f884 203d 	strb.w	r2, [r4, #61]	; 0x3d
    hi2c->Mode          = HAL_I2C_MODE_NONE;
 800a698:	f884 303e 	strb.w	r3, [r4, #62]	; 0x3e
    HAL_I2C_ListenCpltCallback(hi2c);
 800a69c:	f7ff fea0 	bl	800a3e0 <HAL_I2C_ListenCpltCallback>
}
 800a6a0:	bd10      	pop	{r4, pc}
      hi2c->hdmarx->XferAbortCallback = I2C_DMAAbort;
 800a6a2:	6ba0      	ldr	r0, [r4, #56]	; 0x38
 800a6a4:	4b18      	ldr	r3, [pc, #96]	; (800a708 <I2C_ITError+0x164>)
 800a6a6:	6503      	str	r3, [r0, #80]	; 0x50
      if (HAL_DMA_Abort_IT(hi2c->hdmarx) != HAL_OK)
 800a6a8:	f7fe fe0e 	bl	80092c8 <HAL_DMA_Abort_IT>
 800a6ac:	2800      	cmp	r0, #0
 800a6ae:	d0ab      	beq.n	800a608 <I2C_ITError+0x64>
        if (__HAL_I2C_GET_FLAG(hi2c, I2C_FLAG_RXNE) == SET)
 800a6b0:	6823      	ldr	r3, [r4, #0]
 800a6b2:	695a      	ldr	r2, [r3, #20]
 800a6b4:	0651      	lsls	r1, r2, #25
 800a6b6:	d506      	bpl.n	800a6c6 <I2C_ITError+0x122>
          *hi2c->pBuffPtr = (uint8_t)hi2c->Instance->DR;
 800a6b8:	6a62      	ldr	r2, [r4, #36]	; 0x24
 800a6ba:	691b      	ldr	r3, [r3, #16]
 800a6bc:	7013      	strb	r3, [r2, #0]
          hi2c->pBuffPtr++;
 800a6be:	6a62      	ldr	r2, [r4, #36]	; 0x24
        __HAL_I2C_DISABLE(hi2c);
 800a6c0:	6823      	ldr	r3, [r4, #0]
          hi2c->pBuffPtr++;
 800a6c2:	3201      	adds	r2, #1
 800a6c4:	6262      	str	r2, [r4, #36]	; 0x24
        __HAL_I2C_DISABLE(hi2c);
 800a6c6:	681a      	ldr	r2, [r3, #0]
        hi2c->hdmarx->XferAbortCallback(hi2c->hdmarx);
 800a6c8:	6ba0      	ldr	r0, [r4, #56]	; 0x38
        __HAL_I2C_DISABLE(hi2c);
 800a6ca:	f022 0201 	bic.w	r2, r2, #1
        hi2c->State = HAL_I2C_STATE_READY;
 800a6ce:	2120      	movs	r1, #32
        __HAL_I2C_DISABLE(hi2c);
 800a6d0:	601a      	str	r2, [r3, #0]
        hi2c->State = HAL_I2C_STATE_READY;
 800a6d2:	f884 103d 	strb.w	r1, [r4, #61]	; 0x3d
        hi2c->hdmarx->XferAbortCallback(hi2c->hdmarx);
 800a6d6:	6d03      	ldr	r3, [r0, #80]	; 0x50
 800a6d8:	4798      	blx	r3
 800a6da:	e795      	b.n	800a608 <I2C_ITError+0x64>
    hi2c->State = HAL_I2C_STATE_READY;
 800a6dc:	2120      	movs	r1, #32
 800a6de:	f884 103d 	strb.w	r1, [r4, #61]	; 0x3d
    hi2c->ErrorCode = HAL_I2C_ERROR_NONE;
 800a6e2:	6422      	str	r2, [r4, #64]	; 0x40
    if (__HAL_I2C_GET_FLAG(hi2c, I2C_FLAG_RXNE) == SET)
 800a6e4:	695a      	ldr	r2, [r3, #20]
 800a6e6:	0652      	lsls	r2, r2, #25
 800a6e8:	d506      	bpl.n	800a6f8 <I2C_ITError+0x154>
      *hi2c->pBuffPtr = (uint8_t)hi2c->Instance->DR;
 800a6ea:	6a62      	ldr	r2, [r4, #36]	; 0x24
 800a6ec:	691b      	ldr	r3, [r3, #16]
 800a6ee:	7013      	strb	r3, [r2, #0]
      hi2c->pBuffPtr++;
 800a6f0:	6a62      	ldr	r2, [r4, #36]	; 0x24
    __HAL_I2C_DISABLE(hi2c);
 800a6f2:	6823      	ldr	r3, [r4, #0]
      hi2c->pBuffPtr++;
 800a6f4:	3201      	adds	r2, #1
 800a6f6:	6262      	str	r2, [r4, #36]	; 0x24
    __HAL_I2C_DISABLE(hi2c);
 800a6f8:	681a      	ldr	r2, [r3, #0]
 800a6fa:	f022 0201 	bic.w	r2, r2, #1
    HAL_I2C_AbortCpltCallback(hi2c);
 800a6fe:	4620      	mov	r0, r4
    __HAL_I2C_DISABLE(hi2c);
 800a700:	601a      	str	r2, [r3, #0]
    HAL_I2C_AbortCpltCallback(hi2c);
 800a702:	f7ff fed3 	bl	800a4ac <HAL_I2C_AbortCpltCallback>
 800a706:	e77f      	b.n	800a608 <I2C_ITError+0x64>
 800a708:	0800a4b1 	.word	0x0800a4b1
 800a70c:	ffff0000 	.word	0xffff0000

0800a710 <HAL_I2C_EV_IRQHandler>:
{
 800a710:	b570      	push	{r4, r5, r6, lr}
  uint32_t itsources                = READ_REG(hi2c->Instance->CR2);
 800a712:	6803      	ldr	r3, [r0, #0]
{
 800a714:	4604      	mov	r4, r0
  uint32_t itsources                = READ_REG(hi2c->Instance->CR2);
 800a716:	6858      	ldr	r0, [r3, #4]
  uint32_t CurrentXferOptions       = hi2c->XferOptions;
 800a718:	6ae5      	ldr	r5, [r4, #44]	; 0x2c
  HAL_I2C_ModeTypeDef CurrentMode   = hi2c->Mode;
 800a71a:	f894 103e 	ldrb.w	r1, [r4, #62]	; 0x3e
  HAL_I2C_StateTypeDef CurrentState = hi2c->State;
 800a71e:	f894 203d 	ldrb.w	r2, [r4, #61]	; 0x3d
  if ((CurrentMode == HAL_I2C_MODE_MASTER) || (CurrentMode == HAL_I2C_MODE_MEM))
 800a722:	2910      	cmp	r1, #16
{
 800a724:	b08e      	sub	sp, #56	; 0x38
  HAL_I2C_StateTypeDef CurrentState = hi2c->State;
 800a726:	b2d2      	uxtb	r2, r2
  HAL_I2C_ModeTypeDef CurrentMode   = hi2c->Mode;
 800a728:	fa5f fc81 	uxtb.w	ip, r1
  if ((CurrentMode == HAL_I2C_MODE_MASTER) || (CurrentMode == HAL_I2C_MODE_MEM))
 800a72c:	d022      	beq.n	800a774 <HAL_I2C_EV_IRQHandler+0x64>
 800a72e:	f1bc 0f40 	cmp.w	ip, #64	; 0x40
 800a732:	d01f      	beq.n	800a774 <HAL_I2C_EV_IRQHandler+0x64>
    if (hi2c->ErrorCode != HAL_I2C_ERROR_NONE)
 800a734:	6c21      	ldr	r1, [r4, #64]	; 0x40
 800a736:	2900      	cmp	r1, #0
 800a738:	f000 8094 	beq.w	800a864 <HAL_I2C_EV_IRQHandler+0x154>
      sr1itflags   = READ_REG(hi2c->Instance->SR1);
 800a73c:	6959      	ldr	r1, [r3, #20]
  uint32_t sr2itflags               = 0U;
 800a73e:	2500      	movs	r5, #0
    if ((I2C_CHECK_FLAG(sr1itflags, I2C_FLAG_ADDR) != RESET) && (I2C_CHECK_IT_SOURCE(itsources, I2C_IT_EVT) != RESET))
 800a740:	f011 0602 	ands.w	r6, r1, #2
 800a744:	d059      	beq.n	800a7fa <HAL_I2C_EV_IRQHandler+0xea>
 800a746:	0586      	lsls	r6, r0, #22
 800a748:	d559      	bpl.n	800a7fe <HAL_I2C_EV_IRQHandler+0xee>
      if (hi2c->ErrorCode != HAL_I2C_ERROR_NONE)
 800a74a:	6c22      	ldr	r2, [r4, #64]	; 0x40
 800a74c:	b102      	cbz	r2, 800a750 <HAL_I2C_EV_IRQHandler+0x40>
        sr2itflags   = READ_REG(hi2c->Instance->SR2);
 800a74e:	699d      	ldr	r5, [r3, #24]
  if (((uint32_t)hi2c->State & (uint32_t)HAL_I2C_STATE_LISTEN) == (uint32_t)HAL_I2C_STATE_LISTEN)
 800a750:	f894 203d 	ldrb.w	r2, [r4, #61]	; 0x3d
 800a754:	f002 0228 	and.w	r2, r2, #40	; 0x28
 800a758:	2a28      	cmp	r2, #40	; 0x28
 800a75a:	f000 821e 	beq.w	800ab9a <HAL_I2C_EV_IRQHandler+0x48a>
    __HAL_I2C_CLEAR_ADDRFLAG(hi2c);
 800a75e:	2200      	movs	r2, #0
 800a760:	920c      	str	r2, [sp, #48]	; 0x30
 800a762:	6959      	ldr	r1, [r3, #20]
 800a764:	910c      	str	r1, [sp, #48]	; 0x30
 800a766:	699b      	ldr	r3, [r3, #24]
 800a768:	930c      	str	r3, [sp, #48]	; 0x30
 800a76a:	9b0c      	ldr	r3, [sp, #48]	; 0x30
    __HAL_UNLOCK(hi2c);
 800a76c:	f884 203c 	strb.w	r2, [r4, #60]	; 0x3c
}
 800a770:	b00e      	add	sp, #56	; 0x38
 800a772:	bd70      	pop	{r4, r5, r6, pc}
    sr2itflags   = READ_REG(hi2c->Instance->SR2);
 800a774:	699e      	ldr	r6, [r3, #24]
    sr1itflags   = READ_REG(hi2c->Instance->SR1);
 800a776:	6959      	ldr	r1, [r3, #20]
    if ((I2C_CHECK_FLAG(sr1itflags, I2C_FLAG_SB) == RESET) && (IS_I2C_TRANSFER_OTHER_OPTIONS_REQUEST(CurrentXferOptions) == 1U))
 800a778:	f011 0f01 	tst.w	r1, #1
 800a77c:	d11a      	bne.n	800a7b4 <HAL_I2C_EV_IRQHandler+0xa4>
 800a77e:	f5b5 0f2a 	cmp.w	r5, #11141120	; 0xaa0000
 800a782:	d0f5      	beq.n	800a770 <HAL_I2C_EV_IRQHandler+0x60>
 800a784:	f1b5 4f2a 	cmp.w	r5, #2852126720	; 0xaa000000
 800a788:	d0f2      	beq.n	800a770 <HAL_I2C_EV_IRQHandler+0x60>
    else if ((I2C_CHECK_FLAG(sr1itflags, I2C_FLAG_ADD10) != RESET) && (I2C_CHECK_IT_SOURCE(itsources, I2C_IT_EVT) != RESET))
 800a78a:	070d      	lsls	r5, r1, #28
 800a78c:	d56d      	bpl.n	800a86a <HAL_I2C_EV_IRQHandler+0x15a>
 800a78e:	0585      	lsls	r5, r0, #22
 800a790:	f140 8083 	bpl.w	800a89a <HAL_I2C_EV_IRQHandler+0x18a>
  hi2c->Instance->DR = I2C_10BIT_ADDRESS(hi2c->Devaddress);
 800a794:	6c62      	ldr	r2, [r4, #68]	; 0x44
  if (((hi2c->hdmatx != NULL) && (hi2c->hdmatx->XferCpltCallback != NULL))
 800a796:	6b61      	ldr	r1, [r4, #52]	; 0x34
 800a798:	b2d2      	uxtb	r2, r2
  hi2c->Instance->DR = I2C_10BIT_ADDRESS(hi2c->Devaddress);
 800a79a:	611a      	str	r2, [r3, #16]
  if (((hi2c->hdmatx != NULL) && (hi2c->hdmatx->XferCpltCallback != NULL))
 800a79c:	2900      	cmp	r1, #0
 800a79e:	f000 81e3 	beq.w	800ab68 <HAL_I2C_EV_IRQHandler+0x458>
 800a7a2:	6bca      	ldr	r2, [r1, #60]	; 0x3c
 800a7a4:	2a00      	cmp	r2, #0
 800a7a6:	f000 81df 	beq.w	800ab68 <HAL_I2C_EV_IRQHandler+0x458>
    SET_BIT(hi2c->Instance->CR2, I2C_CR2_DMAEN);
 800a7aa:	685a      	ldr	r2, [r3, #4]
 800a7ac:	f442 6200 	orr.w	r2, r2, #2048	; 0x800
 800a7b0:	605a      	str	r2, [r3, #4]
 800a7b2:	e7dd      	b.n	800a770 <HAL_I2C_EV_IRQHandler+0x60>
    if ((I2C_CHECK_FLAG(sr1itflags, I2C_FLAG_SB) != RESET) && (I2C_CHECK_IT_SOURCE(itsources, I2C_IT_EVT) != RESET))
 800a7b4:	0585      	lsls	r5, r0, #22
 800a7b6:	d56e      	bpl.n	800a896 <HAL_I2C_EV_IRQHandler+0x186>
static void I2C_ConvertOtherXferOptions(I2C_HandleTypeDef *hi2c)
{
  /* if user set XferOptions to I2C_OTHER_FRAME            */
  /* it request implicitly to generate a restart condition */
  /* set XferOptions to I2C_FIRST_FRAME                    */
  if (hi2c->XferOptions == I2C_OTHER_FRAME)
 800a7b8:	6ae2      	ldr	r2, [r4, #44]	; 0x2c
 800a7ba:	f5b2 0f2a 	cmp.w	r2, #11141120	; 0xaa0000
 800a7be:	f000 81e9 	beq.w	800ab94 <HAL_I2C_EV_IRQHandler+0x484>
  }
  /* else if user set XferOptions to I2C_OTHER_AND_LAST_FRAME */
  /* it request implicitly to generate a restart condition    */
  /* then generate a stop condition at the end of transfer    */
  /* set XferOptions to I2C_FIRST_AND_LAST_FRAME              */
  else if (hi2c->XferOptions == I2C_OTHER_AND_LAST_FRAME)
 800a7c2:	6ae2      	ldr	r2, [r4, #44]	; 0x2c
 800a7c4:	f1b2 4f2a 	cmp.w	r2, #2852126720	; 0xaa000000
  {
    hi2c->XferOptions = I2C_FIRST_AND_LAST_FRAME;
 800a7c8:	bf04      	itt	eq
 800a7ca:	2208      	moveq	r2, #8
 800a7cc:	62e2      	streq	r2, [r4, #44]	; 0x2c
  if (hi2c->Mode == HAL_I2C_MODE_MEM)
 800a7ce:	f894 203e 	ldrb.w	r2, [r4, #62]	; 0x3e
 800a7d2:	2a40      	cmp	r2, #64	; 0x40
 800a7d4:	f000 81d7 	beq.w	800ab86 <HAL_I2C_EV_IRQHandler+0x476>
    if (hi2c->Init.AddressingMode == I2C_ADDRESSINGMODE_7BIT)
 800a7d8:	6922      	ldr	r2, [r4, #16]
 800a7da:	f5b2 4f80 	cmp.w	r2, #16384	; 0x4000
 800a7de:	f000 81b2 	beq.w	800ab46 <HAL_I2C_EV_IRQHandler+0x436>
      if (hi2c->EventCount == 0U)
 800a7e2:	6d22      	ldr	r2, [r4, #80]	; 0x50
 800a7e4:	2a00      	cmp	r2, #0
 800a7e6:	f040 81ef 	bne.w	800abc8 <HAL_I2C_EV_IRQHandler+0x4b8>
        hi2c->Instance->DR = I2C_10BIT_HEADER_WRITE(hi2c->Devaddress);
 800a7ea:	6c62      	ldr	r2, [r4, #68]	; 0x44
 800a7ec:	11d2      	asrs	r2, r2, #7
 800a7ee:	f002 0206 	and.w	r2, r2, #6
 800a7f2:	f042 02f0 	orr.w	r2, r2, #240	; 0xf0
 800a7f6:	611a      	str	r2, [r3, #16]
 800a7f8:	e7ba      	b.n	800a770 <HAL_I2C_EV_IRQHandler+0x60>
    else if ((I2C_CHECK_FLAG(sr1itflags, I2C_FLAG_STOPF) != RESET) && (I2C_CHECK_IT_SOURCE(itsources, I2C_IT_EVT) != RESET))
 800a7fa:	06cd      	lsls	r5, r1, #27
 800a7fc:	d47c      	bmi.n	800a8f8 <HAL_I2C_EV_IRQHandler+0x1e8>
    else if ((CurrentState == HAL_I2C_STATE_BUSY_TX) || (CurrentState == HAL_I2C_STATE_BUSY_TX_LISTEN))
 800a7fe:	f002 02f7 	and.w	r2, r2, #247	; 0xf7
 800a802:	2a21      	cmp	r2, #33	; 0x21
 800a804:	f000 80f5 	beq.w	800a9f2 <HAL_I2C_EV_IRQHandler+0x2e2>
      if ((I2C_CHECK_FLAG(sr1itflags, I2C_FLAG_RXNE) != RESET) && (I2C_CHECK_IT_SOURCE(itsources, I2C_IT_BUF) != RESET) && (I2C_CHECK_FLAG(sr1itflags, I2C_FLAG_BTF) == RESET))
 800a808:	064e      	lsls	r6, r1, #25
 800a80a:	f140 8132 	bpl.w	800aa72 <HAL_I2C_EV_IRQHandler+0x362>
 800a80e:	0545      	lsls	r5, r0, #21
 800a810:	f140 812f 	bpl.w	800aa72 <HAL_I2C_EV_IRQHandler+0x362>
 800a814:	0749      	lsls	r1, r1, #29
 800a816:	f100 812f 	bmi.w	800aa78 <HAL_I2C_EV_IRQHandler+0x368>
  HAL_I2C_StateTypeDef CurrentState = hi2c->State;
 800a81a:	f894 103d 	ldrb.w	r1, [r4, #61]	; 0x3d
  if (hi2c->XferCount != 0U)
 800a81e:	8d62      	ldrh	r2, [r4, #42]	; 0x2a
 800a820:	b292      	uxth	r2, r2
  HAL_I2C_StateTypeDef CurrentState = hi2c->State;
 800a822:	b2c9      	uxtb	r1, r1
  if (hi2c->XferCount != 0U)
 800a824:	2a00      	cmp	r2, #0
 800a826:	d0a3      	beq.n	800a770 <HAL_I2C_EV_IRQHandler+0x60>
    *hi2c->pBuffPtr = (uint8_t)hi2c->Instance->DR;
 800a828:	6a62      	ldr	r2, [r4, #36]	; 0x24
 800a82a:	691b      	ldr	r3, [r3, #16]
 800a82c:	7013      	strb	r3, [r2, #0]
    hi2c->XferCount--;
 800a82e:	8d63      	ldrh	r3, [r4, #42]	; 0x2a
    hi2c->pBuffPtr++;
 800a830:	6a62      	ldr	r2, [r4, #36]	; 0x24
    hi2c->XferCount--;
 800a832:	3b01      	subs	r3, #1
 800a834:	b29b      	uxth	r3, r3
 800a836:	8563      	strh	r3, [r4, #42]	; 0x2a
    if ((hi2c->XferCount == 0U) && (CurrentState == HAL_I2C_STATE_BUSY_RX_LISTEN))
 800a838:	8d63      	ldrh	r3, [r4, #42]	; 0x2a
    hi2c->pBuffPtr++;
 800a83a:	3201      	adds	r2, #1
    if ((hi2c->XferCount == 0U) && (CurrentState == HAL_I2C_STATE_BUSY_RX_LISTEN))
 800a83c:	b29b      	uxth	r3, r3
    hi2c->pBuffPtr++;
 800a83e:	6262      	str	r2, [r4, #36]	; 0x24
    if ((hi2c->XferCount == 0U) && (CurrentState == HAL_I2C_STATE_BUSY_RX_LISTEN))
 800a840:	2b00      	cmp	r3, #0
 800a842:	d195      	bne.n	800a770 <HAL_I2C_EV_IRQHandler+0x60>
 800a844:	292a      	cmp	r1, #42	; 0x2a
 800a846:	d193      	bne.n	800a770 <HAL_I2C_EV_IRQHandler+0x60>
      __HAL_I2C_DISABLE_IT(hi2c, I2C_IT_BUF);
 800a848:	6822      	ldr	r2, [r4, #0]
 800a84a:	6853      	ldr	r3, [r2, #4]
      hi2c->PreviousState = I2C_STATE_SLAVE_BUSY_RX;
 800a84c:	2522      	movs	r5, #34	; 0x22
      hi2c->State = HAL_I2C_STATE_LISTEN;
 800a84e:	2128      	movs	r1, #40	; 0x28
      __HAL_I2C_DISABLE_IT(hi2c, I2C_IT_BUF);
 800a850:	f423 6380 	bic.w	r3, r3, #1024	; 0x400
 800a854:	6053      	str	r3, [r2, #4]
      HAL_I2C_SlaveRxCpltCallback(hi2c);
 800a856:	4620      	mov	r0, r4
      hi2c->PreviousState = I2C_STATE_SLAVE_BUSY_RX;
 800a858:	6325      	str	r5, [r4, #48]	; 0x30
      hi2c->State = HAL_I2C_STATE_LISTEN;
 800a85a:	f884 103d 	strb.w	r1, [r4, #61]	; 0x3d
      HAL_I2C_SlaveRxCpltCallback(hi2c);
 800a85e:	f7ff fdbb 	bl	800a3d8 <HAL_I2C_SlaveRxCpltCallback>
 800a862:	e785      	b.n	800a770 <HAL_I2C_EV_IRQHandler+0x60>
      sr2itflags   = READ_REG(hi2c->Instance->SR2);
 800a864:	699d      	ldr	r5, [r3, #24]
      sr1itflags   = READ_REG(hi2c->Instance->SR1);
 800a866:	6959      	ldr	r1, [r3, #20]
 800a868:	e76a      	b.n	800a740 <HAL_I2C_EV_IRQHandler+0x30>
    else if ((I2C_CHECK_FLAG(sr1itflags, I2C_FLAG_ADDR) != RESET) && (I2C_CHECK_IT_SOURCE(itsources, I2C_IT_EVT) != RESET))
 800a86a:	078d      	lsls	r5, r1, #30
 800a86c:	d515      	bpl.n	800a89a <HAL_I2C_EV_IRQHandler+0x18a>
 800a86e:	0585      	lsls	r5, r0, #22
 800a870:	d513      	bpl.n	800a89a <HAL_I2C_EV_IRQHandler+0x18a>
  HAL_I2C_ModeTypeDef CurrentMode       = hi2c->Mode;
 800a872:	f894 203e 	ldrb.w	r2, [r4, #62]	; 0x3e
  uint32_t CurrentXferOptions           = hi2c->XferOptions;
 800a876:	6ae0      	ldr	r0, [r4, #44]	; 0x2c
  uint32_t Prev_State                   = hi2c->PreviousState;
 800a878:	6b25      	ldr	r5, [r4, #48]	; 0x30
  if (hi2c->State == HAL_I2C_STATE_BUSY_RX)
 800a87a:	f894 103d 	ldrb.w	r1, [r4, #61]	; 0x3d
 800a87e:	2922      	cmp	r1, #34	; 0x22
  HAL_I2C_ModeTypeDef CurrentMode       = hi2c->Mode;
 800a880:	b2d2      	uxtb	r2, r2
  if (hi2c->State == HAL_I2C_STATE_BUSY_RX)
 800a882:	f000 81b3 	beq.w	800abec <HAL_I2C_EV_IRQHandler+0x4dc>
    __HAL_I2C_CLEAR_ADDRFLAG(hi2c);
 800a886:	2200      	movs	r2, #0
 800a888:	920a      	str	r2, [sp, #40]	; 0x28
 800a88a:	695a      	ldr	r2, [r3, #20]
 800a88c:	920a      	str	r2, [sp, #40]	; 0x28
 800a88e:	699b      	ldr	r3, [r3, #24]
 800a890:	930a      	str	r3, [sp, #40]	; 0x28
 800a892:	9b0a      	ldr	r3, [sp, #40]	; 0x28
 800a894:	e76c      	b.n	800a770 <HAL_I2C_EV_IRQHandler+0x60>
    else if ((I2C_CHECK_FLAG(sr1itflags, I2C_FLAG_ADD10) != RESET) && (I2C_CHECK_IT_SOURCE(itsources, I2C_IT_EVT) != RESET))
 800a896:	070d      	lsls	r5, r1, #28
 800a898:	d5e7      	bpl.n	800a86a <HAL_I2C_EV_IRQHandler+0x15a>
    else if (I2C_CHECK_FLAG(sr2itflags, I2C_FLAG_TRA) != RESET)
 800a89a:	0776      	lsls	r6, r6, #29
 800a89c:	f140 80f5 	bpl.w	800aa8a <HAL_I2C_EV_IRQHandler+0x37a>
      if (READ_BIT(hi2c->Instance->CR2, I2C_CR2_DMAEN) != I2C_CR2_DMAEN)
 800a8a0:	685d      	ldr	r5, [r3, #4]
 800a8a2:	052d      	lsls	r5, r5, #20
 800a8a4:	f53f af64 	bmi.w	800a770 <HAL_I2C_EV_IRQHandler+0x60>
        if ((I2C_CHECK_FLAG(sr1itflags, I2C_FLAG_TXE) != RESET) && (I2C_CHECK_IT_SOURCE(itsources, I2C_IT_BUF) != RESET) && (I2C_CHECK_FLAG(sr1itflags, I2C_FLAG_BTF) == RESET))
 800a8a8:	060e      	lsls	r6, r1, #24
 800a8aa:	f140 8115 	bpl.w	800aad8 <HAL_I2C_EV_IRQHandler+0x3c8>
 800a8ae:	0545      	lsls	r5, r0, #21
 800a8b0:	f140 8112 	bpl.w	800aad8 <HAL_I2C_EV_IRQHandler+0x3c8>
 800a8b4:	074e      	lsls	r6, r1, #29
 800a8b6:	f100 8112 	bmi.w	800aade <HAL_I2C_EV_IRQHandler+0x3ce>
  HAL_I2C_StateTypeDef CurrentState = hi2c->State;
 800a8ba:	f894 203d 	ldrb.w	r2, [r4, #61]	; 0x3d
  if ((hi2c->XferSize == 0U) && (CurrentState == HAL_I2C_STATE_BUSY_TX))
 800a8be:	8d20      	ldrh	r0, [r4, #40]	; 0x28
  HAL_I2C_ModeTypeDef CurrentMode   = hi2c->Mode;
 800a8c0:	f894 103e 	ldrb.w	r1, [r4, #62]	; 0x3e
  uint32_t CurrentXferOptions       = hi2c->XferOptions;
 800a8c4:	6ae5      	ldr	r5, [r4, #44]	; 0x2c
  HAL_I2C_StateTypeDef CurrentState = hi2c->State;
 800a8c6:	b2d2      	uxtb	r2, r2
  HAL_I2C_ModeTypeDef CurrentMode   = hi2c->Mode;
 800a8c8:	b2c9      	uxtb	r1, r1
  if ((hi2c->XferSize == 0U) && (CurrentState == HAL_I2C_STATE_BUSY_TX))
 800a8ca:	2800      	cmp	r0, #0
 800a8cc:	f040 8235 	bne.w	800ad3a <HAL_I2C_EV_IRQHandler+0x62a>
 800a8d0:	2a21      	cmp	r2, #33	; 0x21
 800a8d2:	f000 8347 	beq.w	800af64 <HAL_I2C_EV_IRQHandler+0x854>
  else if ((CurrentState == HAL_I2C_STATE_BUSY_TX) || \
 800a8d6:	2940      	cmp	r1, #64	; 0x40
 800a8d8:	f47f af4a 	bne.w	800a770 <HAL_I2C_EV_IRQHandler+0x60>
           ((CurrentMode == HAL_I2C_MODE_MEM) && (CurrentState == HAL_I2C_STATE_BUSY_RX)))
 800a8dc:	2a22      	cmp	r2, #34	; 0x22
 800a8de:	f47f af47 	bne.w	800a770 <HAL_I2C_EV_IRQHandler+0x60>
    if (hi2c->XferCount == 0U)
 800a8e2:	8d62      	ldrh	r2, [r4, #42]	; 0x2a
 800a8e4:	b292      	uxth	r2, r2
 800a8e6:	2a00      	cmp	r2, #0
 800a8e8:	f000 8268 	beq.w	800adbc <HAL_I2C_EV_IRQHandler+0x6ac>
      if (hi2c->Mode == HAL_I2C_MODE_MEM)
 800a8ec:	f894 203e 	ldrb.w	r2, [r4, #62]	; 0x3e
 800a8f0:	2a40      	cmp	r2, #64	; 0x40
 800a8f2:	f040 80b4 	bne.w	800aa5e <HAL_I2C_EV_IRQHandler+0x34e>
 800a8f6:	e0fc      	b.n	800aaf2 <HAL_I2C_EV_IRQHandler+0x3e2>
    else if ((I2C_CHECK_FLAG(sr1itflags, I2C_FLAG_STOPF) != RESET) && (I2C_CHECK_IT_SOURCE(itsources, I2C_IT_EVT) != RESET))
 800a8f8:	0585      	lsls	r5, r0, #22
 800a8fa:	d580      	bpl.n	800a7fe <HAL_I2C_EV_IRQHandler+0xee>
  HAL_I2C_StateTypeDef CurrentState = hi2c->State;
 800a8fc:	f894 503d 	ldrb.w	r5, [r4, #61]	; 0x3d
  __HAL_I2C_DISABLE_IT(hi2c, I2C_IT_EVT | I2C_IT_BUF | I2C_IT_ERR);
 800a900:	685a      	ldr	r2, [r3, #4]
 800a902:	f422 62e0 	bic.w	r2, r2, #1792	; 0x700
 800a906:	605a      	str	r2, [r3, #4]
  __HAL_I2C_CLEAR_STOPFLAG(hi2c);
 800a908:	960d      	str	r6, [sp, #52]	; 0x34
 800a90a:	695a      	ldr	r2, [r3, #20]
 800a90c:	920d      	str	r2, [sp, #52]	; 0x34
 800a90e:	681a      	ldr	r2, [r3, #0]
 800a910:	f042 0201 	orr.w	r2, r2, #1
 800a914:	601a      	str	r2, [r3, #0]
 800a916:	9a0d      	ldr	r2, [sp, #52]	; 0x34
  CLEAR_BIT(hi2c->Instance->CR1, I2C_CR1_ACK);
 800a918:	681a      	ldr	r2, [r3, #0]
 800a91a:	f422 6280 	bic.w	r2, r2, #1024	; 0x400
 800a91e:	601a      	str	r2, [r3, #0]
  if ((hi2c->Instance->CR2 & I2C_CR2_DMAEN) == I2C_CR2_DMAEN)
 800a920:	685a      	ldr	r2, [r3, #4]
 800a922:	0511      	lsls	r1, r2, #20
  HAL_I2C_StateTypeDef CurrentState = hi2c->State;
 800a924:	b2ed      	uxtb	r5, r5
  if ((hi2c->Instance->CR2 & I2C_CR2_DMAEN) == I2C_CR2_DMAEN)
 800a926:	d521      	bpl.n	800a96c <HAL_I2C_EV_IRQHandler+0x25c>
    if ((CurrentState == HAL_I2C_STATE_BUSY_RX) || (CurrentState == HAL_I2C_STATE_BUSY_RX_LISTEN))
 800a928:	f005 02f7 	and.w	r2, r5, #247	; 0xf7
 800a92c:	2a22      	cmp	r2, #34	; 0x22
 800a92e:	f000 817a 	beq.w	800ac26 <HAL_I2C_EV_IRQHandler+0x516>
      hi2c->XferCount = (uint16_t)(__HAL_DMA_GET_COUNTER(hi2c->hdmatx));
 800a932:	6b60      	ldr	r0, [r4, #52]	; 0x34
 800a934:	6802      	ldr	r2, [r0, #0]
 800a936:	6852      	ldr	r2, [r2, #4]
 800a938:	b292      	uxth	r2, r2
 800a93a:	8562      	strh	r2, [r4, #42]	; 0x2a
      if (hi2c->XferCount != 0U)
 800a93c:	8d62      	ldrh	r2, [r4, #42]	; 0x2a
 800a93e:	b292      	uxth	r2, r2
 800a940:	b11a      	cbz	r2, 800a94a <HAL_I2C_EV_IRQHandler+0x23a>
        hi2c->ErrorCode |= HAL_I2C_ERROR_AF;
 800a942:	6c22      	ldr	r2, [r4, #64]	; 0x40
 800a944:	f042 0204 	orr.w	r2, r2, #4
 800a948:	6422      	str	r2, [r4, #64]	; 0x40
      CLEAR_BIT(hi2c->Instance->CR2, I2C_CR2_DMAEN);
 800a94a:	685a      	ldr	r2, [r3, #4]
 800a94c:	f422 6200 	bic.w	r2, r2, #2048	; 0x800
 800a950:	605a      	str	r2, [r3, #4]
      if (HAL_DMA_GetState(hi2c->hdmatx) != HAL_DMA_STATE_READY)
 800a952:	f7fe fda1 	bl	8009498 <HAL_DMA_GetState>
 800a956:	2801      	cmp	r0, #1
 800a958:	d008      	beq.n	800a96c <HAL_I2C_EV_IRQHandler+0x25c>
        hi2c->hdmatx->XferAbortCallback = I2C_DMAAbort;
 800a95a:	6b60      	ldr	r0, [r4, #52]	; 0x34
 800a95c:	4b99      	ldr	r3, [pc, #612]	; (800abc4 <HAL_I2C_EV_IRQHandler+0x4b4>)
 800a95e:	6503      	str	r3, [r0, #80]	; 0x50
        if (HAL_DMA_Abort_IT(hi2c->hdmatx) != HAL_OK)
 800a960:	f7fe fcb2 	bl	80092c8 <HAL_DMA_Abort_IT>
 800a964:	b110      	cbz	r0, 800a96c <HAL_I2C_EV_IRQHandler+0x25c>
          hi2c->hdmatx->XferAbortCallback(hi2c->hdmatx);
 800a966:	6b60      	ldr	r0, [r4, #52]	; 0x34
 800a968:	6d03      	ldr	r3, [r0, #80]	; 0x50
 800a96a:	4798      	blx	r3
  if (hi2c->XferCount != 0U)
 800a96c:	8d63      	ldrh	r3, [r4, #42]	; 0x2a
 800a96e:	b29b      	uxth	r3, r3
 800a970:	b313      	cbz	r3, 800a9b8 <HAL_I2C_EV_IRQHandler+0x2a8>
    if (__HAL_I2C_GET_FLAG(hi2c, I2C_FLAG_BTF) == SET)
 800a972:	6823      	ldr	r3, [r4, #0]
 800a974:	695a      	ldr	r2, [r3, #20]
 800a976:	0752      	lsls	r2, r2, #29
 800a978:	d50a      	bpl.n	800a990 <HAL_I2C_EV_IRQHandler+0x280>
      *hi2c->pBuffPtr = (uint8_t)hi2c->Instance->DR;
 800a97a:	6a62      	ldr	r2, [r4, #36]	; 0x24
 800a97c:	691b      	ldr	r3, [r3, #16]
 800a97e:	7013      	strb	r3, [r2, #0]
      hi2c->XferCount--;
 800a980:	8d62      	ldrh	r2, [r4, #42]	; 0x2a
      hi2c->pBuffPtr++;
 800a982:	6a63      	ldr	r3, [r4, #36]	; 0x24
      hi2c->XferCount--;
 800a984:	3a01      	subs	r2, #1
      hi2c->pBuffPtr++;
 800a986:	1c59      	adds	r1, r3, #1
      hi2c->XferCount--;
 800a988:	b292      	uxth	r2, r2
    if (__HAL_I2C_GET_FLAG(hi2c, I2C_FLAG_RXNE) == SET)
 800a98a:	6823      	ldr	r3, [r4, #0]
      hi2c->pBuffPtr++;
 800a98c:	6261      	str	r1, [r4, #36]	; 0x24
      hi2c->XferCount--;
 800a98e:	8562      	strh	r2, [r4, #42]	; 0x2a
    if (__HAL_I2C_GET_FLAG(hi2c, I2C_FLAG_RXNE) == SET)
 800a990:	695a      	ldr	r2, [r3, #20]
 800a992:	0656      	lsls	r6, r2, #25
 800a994:	d509      	bpl.n	800a9aa <HAL_I2C_EV_IRQHandler+0x29a>
      *hi2c->pBuffPtr = (uint8_t)hi2c->Instance->DR;
 800a996:	6a62      	ldr	r2, [r4, #36]	; 0x24
 800a998:	691b      	ldr	r3, [r3, #16]
 800a99a:	7013      	strb	r3, [r2, #0]
      hi2c->XferCount--;
 800a99c:	8d63      	ldrh	r3, [r4, #42]	; 0x2a
      hi2c->pBuffPtr++;
 800a99e:	6a62      	ldr	r2, [r4, #36]	; 0x24
      hi2c->XferCount--;
 800a9a0:	3b01      	subs	r3, #1
      hi2c->pBuffPtr++;
 800a9a2:	3201      	adds	r2, #1
      hi2c->XferCount--;
 800a9a4:	b29b      	uxth	r3, r3
      hi2c->pBuffPtr++;
 800a9a6:	6262      	str	r2, [r4, #36]	; 0x24
      hi2c->XferCount--;
 800a9a8:	8563      	strh	r3, [r4, #42]	; 0x2a
    if (hi2c->XferCount != 0U)
 800a9aa:	8d63      	ldrh	r3, [r4, #42]	; 0x2a
 800a9ac:	b29b      	uxth	r3, r3
 800a9ae:	b11b      	cbz	r3, 800a9b8 <HAL_I2C_EV_IRQHandler+0x2a8>
      hi2c->ErrorCode |= HAL_I2C_ERROR_AF;
 800a9b0:	6c23      	ldr	r3, [r4, #64]	; 0x40
 800a9b2:	f043 0304 	orr.w	r3, r3, #4
 800a9b6:	6423      	str	r3, [r4, #64]	; 0x40
  if (hi2c->ErrorCode != HAL_I2C_ERROR_NONE)
 800a9b8:	6c23      	ldr	r3, [r4, #64]	; 0x40
 800a9ba:	2b00      	cmp	r3, #0
 800a9bc:	f040 80dd 	bne.w	800ab7a <HAL_I2C_EV_IRQHandler+0x46a>
    if (CurrentState == HAL_I2C_STATE_BUSY_RX_LISTEN)
 800a9c0:	2d2a      	cmp	r5, #42	; 0x2a
 800a9c2:	f000 8151 	beq.w	800ac68 <HAL_I2C_EV_IRQHandler+0x558>
    if (hi2c->State == HAL_I2C_STATE_LISTEN)
 800a9c6:	f894 303d 	ldrb.w	r3, [r4, #61]	; 0x3d
 800a9ca:	2b28      	cmp	r3, #40	; 0x28
 800a9cc:	f000 8154 	beq.w	800ac78 <HAL_I2C_EV_IRQHandler+0x568>
      if ((hi2c->PreviousState  == I2C_STATE_SLAVE_BUSY_RX) || (CurrentState == HAL_I2C_STATE_BUSY_RX))
 800a9d0:	6b23      	ldr	r3, [r4, #48]	; 0x30
 800a9d2:	2b22      	cmp	r3, #34	; 0x22
 800a9d4:	d002      	beq.n	800a9dc <HAL_I2C_EV_IRQHandler+0x2cc>
 800a9d6:	2d22      	cmp	r5, #34	; 0x22
 800a9d8:	f47f aeca 	bne.w	800a770 <HAL_I2C_EV_IRQHandler+0x60>
        hi2c->PreviousState = I2C_STATE_NONE;
 800a9dc:	2300      	movs	r3, #0
        hi2c->State = HAL_I2C_STATE_READY;
 800a9de:	2220      	movs	r2, #32
        hi2c->PreviousState = I2C_STATE_NONE;
 800a9e0:	6323      	str	r3, [r4, #48]	; 0x30
        HAL_I2C_SlaveRxCpltCallback(hi2c);
 800a9e2:	4620      	mov	r0, r4
        hi2c->State = HAL_I2C_STATE_READY;
 800a9e4:	f884 203d 	strb.w	r2, [r4, #61]	; 0x3d
        hi2c->Mode = HAL_I2C_MODE_NONE;
 800a9e8:	f884 303e 	strb.w	r3, [r4, #62]	; 0x3e
        HAL_I2C_SlaveRxCpltCallback(hi2c);
 800a9ec:	f7ff fcf4 	bl	800a3d8 <HAL_I2C_SlaveRxCpltCallback>
 800a9f0:	e6be      	b.n	800a770 <HAL_I2C_EV_IRQHandler+0x60>
      if ((I2C_CHECK_FLAG(sr1itflags, I2C_FLAG_TXE) != RESET) && (I2C_CHECK_IT_SOURCE(itsources, I2C_IT_BUF) != RESET) && (I2C_CHECK_FLAG(sr1itflags, I2C_FLAG_BTF) == RESET))
 800a9f2:	060d      	lsls	r5, r1, #24
 800a9f4:	d528      	bpl.n	800aa48 <HAL_I2C_EV_IRQHandler+0x338>
 800a9f6:	0546      	lsls	r6, r0, #21
 800a9f8:	d526      	bpl.n	800aa48 <HAL_I2C_EV_IRQHandler+0x338>
 800a9fa:	074d      	lsls	r5, r1, #29
 800a9fc:	d427      	bmi.n	800aa4e <HAL_I2C_EV_IRQHandler+0x33e>
  HAL_I2C_StateTypeDef CurrentState = hi2c->State;
 800a9fe:	f894 003d 	ldrb.w	r0, [r4, #61]	; 0x3d
  if (hi2c->XferCount != 0U)
 800aa02:	8d61      	ldrh	r1, [r4, #42]	; 0x2a
 800aa04:	b289      	uxth	r1, r1
  HAL_I2C_StateTypeDef CurrentState = hi2c->State;
 800aa06:	b2c0      	uxtb	r0, r0
  if (hi2c->XferCount != 0U)
 800aa08:	2900      	cmp	r1, #0
 800aa0a:	f43f aeb1 	beq.w	800a770 <HAL_I2C_EV_IRQHandler+0x60>
    hi2c->Instance->DR = *hi2c->pBuffPtr;
 800aa0e:	6a61      	ldr	r1, [r4, #36]	; 0x24
 800aa10:	f811 5b01 	ldrb.w	r5, [r1], #1
 800aa14:	611d      	str	r5, [r3, #16]
    hi2c->pBuffPtr++;
 800aa16:	6261      	str	r1, [r4, #36]	; 0x24
    hi2c->XferCount--;
 800aa18:	8d61      	ldrh	r1, [r4, #42]	; 0x2a
 800aa1a:	3901      	subs	r1, #1
 800aa1c:	b289      	uxth	r1, r1
 800aa1e:	8561      	strh	r1, [r4, #42]	; 0x2a
    if ((hi2c->XferCount == 0U) && (CurrentState == HAL_I2C_STATE_BUSY_TX_LISTEN))
 800aa20:	8d61      	ldrh	r1, [r4, #42]	; 0x2a
 800aa22:	b289      	uxth	r1, r1
 800aa24:	2900      	cmp	r1, #0
 800aa26:	f47f aea3 	bne.w	800a770 <HAL_I2C_EV_IRQHandler+0x60>
 800aa2a:	2829      	cmp	r0, #41	; 0x29
 800aa2c:	f47f aea0 	bne.w	800a770 <HAL_I2C_EV_IRQHandler+0x60>
      __HAL_I2C_DISABLE_IT(hi2c, I2C_IT_BUF);
 800aa30:	6859      	ldr	r1, [r3, #4]
      hi2c->State = HAL_I2C_STATE_LISTEN;
 800aa32:	2528      	movs	r5, #40	; 0x28
      __HAL_I2C_DISABLE_IT(hi2c, I2C_IT_BUF);
 800aa34:	f421 6180 	bic.w	r1, r1, #1024	; 0x400
 800aa38:	6059      	str	r1, [r3, #4]
      HAL_I2C_SlaveTxCpltCallback(hi2c);
 800aa3a:	4620      	mov	r0, r4
      hi2c->PreviousState = I2C_STATE_SLAVE_BUSY_TX;
 800aa3c:	6322      	str	r2, [r4, #48]	; 0x30
      hi2c->State = HAL_I2C_STATE_LISTEN;
 800aa3e:	f884 503d 	strb.w	r5, [r4, #61]	; 0x3d
      HAL_I2C_SlaveTxCpltCallback(hi2c);
 800aa42:	f7ff fcc7 	bl	800a3d4 <HAL_I2C_SlaveTxCpltCallback>
 800aa46:	e693      	b.n	800a770 <HAL_I2C_EV_IRQHandler+0x60>
      else if ((I2C_CHECK_FLAG(sr1itflags, I2C_FLAG_BTF) != RESET) && (I2C_CHECK_IT_SOURCE(itsources, I2C_IT_EVT) != RESET))
 800aa48:	0749      	lsls	r1, r1, #29
 800aa4a:	f57f ae91 	bpl.w	800a770 <HAL_I2C_EV_IRQHandler+0x60>
 800aa4e:	0582      	lsls	r2, r0, #22
 800aa50:	f57f ae8e 	bpl.w	800a770 <HAL_I2C_EV_IRQHandler+0x60>
  if (hi2c->XferCount != 0U)
 800aa54:	8d62      	ldrh	r2, [r4, #42]	; 0x2a
 800aa56:	b292      	uxth	r2, r2
 800aa58:	2a00      	cmp	r2, #0
 800aa5a:	f43f ae89 	beq.w	800a770 <HAL_I2C_EV_IRQHandler+0x60>
    hi2c->Instance->DR = *hi2c->pBuffPtr;
 800aa5e:	6a62      	ldr	r2, [r4, #36]	; 0x24
 800aa60:	f812 1b01 	ldrb.w	r1, [r2], #1
 800aa64:	6119      	str	r1, [r3, #16]
    hi2c->XferCount--;
 800aa66:	8d63      	ldrh	r3, [r4, #42]	; 0x2a
    hi2c->pBuffPtr++;
 800aa68:	6262      	str	r2, [r4, #36]	; 0x24
    hi2c->XferCount--;
 800aa6a:	3b01      	subs	r3, #1
 800aa6c:	b29b      	uxth	r3, r3
 800aa6e:	8563      	strh	r3, [r4, #42]	; 0x2a
 800aa70:	e67e      	b.n	800a770 <HAL_I2C_EV_IRQHandler+0x60>
      else if ((I2C_CHECK_FLAG(sr1itflags, I2C_FLAG_BTF) != RESET) && (I2C_CHECK_IT_SOURCE(itsources, I2C_IT_EVT) != RESET))
 800aa72:	074a      	lsls	r2, r1, #29
 800aa74:	f57f ae7c 	bpl.w	800a770 <HAL_I2C_EV_IRQHandler+0x60>
 800aa78:	0586      	lsls	r6, r0, #22
 800aa7a:	f57f ae79 	bpl.w	800a770 <HAL_I2C_EV_IRQHandler+0x60>
  if (hi2c->XferCount != 0U)
 800aa7e:	8d62      	ldrh	r2, [r4, #42]	; 0x2a
 800aa80:	b292      	uxth	r2, r2
 800aa82:	2a00      	cmp	r2, #0
 800aa84:	f43f ae74 	beq.w	800a770 <HAL_I2C_EV_IRQHandler+0x60>
 800aa88:	e01b      	b.n	800aac2 <HAL_I2C_EV_IRQHandler+0x3b2>
      if (READ_BIT(hi2c->Instance->CR2, I2C_CR2_DMAEN) != I2C_CR2_DMAEN)
 800aa8a:	685a      	ldr	r2, [r3, #4]
 800aa8c:	0512      	lsls	r2, r2, #20
 800aa8e:	f53f ae6f 	bmi.w	800a770 <HAL_I2C_EV_IRQHandler+0x60>
        if ((I2C_CHECK_FLAG(sr1itflags, I2C_FLAG_RXNE) != RESET) && (I2C_CHECK_IT_SOURCE(itsources, I2C_IT_BUF) != RESET) && (I2C_CHECK_FLAG(sr1itflags, I2C_FLAG_BTF) == RESET))
 800aa92:	064e      	lsls	r6, r1, #25
 800aa94:	d433      	bmi.n	800aafe <HAL_I2C_EV_IRQHandler+0x3ee>
        else if ((I2C_CHECK_FLAG(sr1itflags, I2C_FLAG_BTF) != RESET) && (I2C_CHECK_IT_SOURCE(itsources, I2C_IT_EVT) != RESET))
 800aa96:	0749      	lsls	r1, r1, #29
 800aa98:	f57f ae6a 	bpl.w	800a770 <HAL_I2C_EV_IRQHandler+0x60>
 800aa9c:	0582      	lsls	r2, r0, #22
 800aa9e:	f57f ae67 	bpl.w	800a770 <HAL_I2C_EV_IRQHandler+0x60>
  uint32_t CurrentXferOptions = hi2c->XferOptions;
 800aaa2:	6ae1      	ldr	r1, [r4, #44]	; 0x2c
  if (hi2c->XferCount == 4U)
 800aaa4:	8d62      	ldrh	r2, [r4, #42]	; 0x2a
 800aaa6:	b292      	uxth	r2, r2
 800aaa8:	2a04      	cmp	r2, #4
 800aaaa:	f000 8113 	beq.w	800acd4 <HAL_I2C_EV_IRQHandler+0x5c4>
  else if (hi2c->XferCount == 3U)
 800aaae:	8d62      	ldrh	r2, [r4, #42]	; 0x2a
 800aab0:	b292      	uxth	r2, r2
 800aab2:	2a03      	cmp	r2, #3
 800aab4:	f000 8153 	beq.w	800ad5e <HAL_I2C_EV_IRQHandler+0x64e>
  else if (hi2c->XferCount == 2U)
 800aab8:	8d62      	ldrh	r2, [r4, #42]	; 0x2a
 800aaba:	b292      	uxth	r2, r2
 800aabc:	2a02      	cmp	r2, #2
 800aabe:	f000 8182 	beq.w	800adc6 <HAL_I2C_EV_IRQHandler+0x6b6>
    *hi2c->pBuffPtr = (uint8_t)hi2c->Instance->DR;
 800aac2:	6a62      	ldr	r2, [r4, #36]	; 0x24
 800aac4:	691b      	ldr	r3, [r3, #16]
 800aac6:	7013      	strb	r3, [r2, #0]
    hi2c->XferCount--;
 800aac8:	8d63      	ldrh	r3, [r4, #42]	; 0x2a
    hi2c->pBuffPtr++;
 800aaca:	6a62      	ldr	r2, [r4, #36]	; 0x24
    hi2c->XferCount--;
 800aacc:	3b01      	subs	r3, #1
    hi2c->pBuffPtr++;
 800aace:	3201      	adds	r2, #1
    hi2c->XferCount--;
 800aad0:	b29b      	uxth	r3, r3
    hi2c->pBuffPtr++;
 800aad2:	6262      	str	r2, [r4, #36]	; 0x24
    hi2c->XferCount--;
 800aad4:	8563      	strh	r3, [r4, #42]	; 0x2a
      }
 800aad6:	e64b      	b.n	800a770 <HAL_I2C_EV_IRQHandler+0x60>
        else if ((I2C_CHECK_FLAG(sr1itflags, I2C_FLAG_BTF) != RESET) && (I2C_CHECK_IT_SOURCE(itsources, I2C_IT_EVT) != RESET))
 800aad8:	074d      	lsls	r5, r1, #29
 800aada:	f57f ae49 	bpl.w	800a770 <HAL_I2C_EV_IRQHandler+0x60>
 800aade:	0581      	lsls	r1, r0, #22
 800aae0:	f57f ae46 	bpl.w	800a770 <HAL_I2C_EV_IRQHandler+0x60>
          if (CurrentState == HAL_I2C_STATE_BUSY_TX)
 800aae4:	2a21      	cmp	r2, #33	; 0x21
 800aae6:	f000 80fd 	beq.w	800ace4 <HAL_I2C_EV_IRQHandler+0x5d4>
            if (CurrentMode == HAL_I2C_MODE_MEM)
 800aaea:	f1bc 0f40 	cmp.w	ip, #64	; 0x40
 800aaee:	f47f ae3f 	bne.w	800a770 <HAL_I2C_EV_IRQHandler+0x60>
        I2C_MemoryTransmit_TXE_BTF(hi2c);
 800aaf2:	4620      	mov	r0, r4
}
 800aaf4:	b00e      	add	sp, #56	; 0x38
 800aaf6:	e8bd 4070 	ldmia.w	sp!, {r4, r5, r6, lr}
        I2C_MemoryTransmit_TXE_BTF(hi2c);
 800aafa:	f7ff bc75 	b.w	800a3e8 <I2C_MemoryTransmit_TXE_BTF>
        if ((I2C_CHECK_FLAG(sr1itflags, I2C_FLAG_RXNE) != RESET) && (I2C_CHECK_IT_SOURCE(itsources, I2C_IT_BUF) != RESET) && (I2C_CHECK_FLAG(sr1itflags, I2C_FLAG_BTF) == RESET))
 800aafe:	0545      	lsls	r5, r0, #21
 800ab00:	d5c9      	bpl.n	800aa96 <HAL_I2C_EV_IRQHandler+0x386>
 800ab02:	f011 0104 	ands.w	r1, r1, #4
 800ab06:	d1c9      	bne.n	800aa9c <HAL_I2C_EV_IRQHandler+0x38c>
  if (hi2c->State == HAL_I2C_STATE_BUSY_RX)
 800ab08:	f894 203d 	ldrb.w	r2, [r4, #61]	; 0x3d
 800ab0c:	2a22      	cmp	r2, #34	; 0x22
 800ab0e:	f47f ae2f 	bne.w	800a770 <HAL_I2C_EV_IRQHandler+0x60>
    tmp = hi2c->XferCount;
 800ab12:	8d62      	ldrh	r2, [r4, #42]	; 0x2a
 800ab14:	b292      	uxth	r2, r2
    if (tmp > 3U)
 800ab16:	2a03      	cmp	r2, #3
 800ab18:	f240 81ec 	bls.w	800aef4 <HAL_I2C_EV_IRQHandler+0x7e4>
      *hi2c->pBuffPtr = (uint8_t)hi2c->Instance->DR;
 800ab1c:	6a62      	ldr	r2, [r4, #36]	; 0x24
 800ab1e:	691b      	ldr	r3, [r3, #16]
 800ab20:	7013      	strb	r3, [r2, #0]
      hi2c->XferCount--;
 800ab22:	8d63      	ldrh	r3, [r4, #42]	; 0x2a
      hi2c->pBuffPtr++;
 800ab24:	6a62      	ldr	r2, [r4, #36]	; 0x24
      hi2c->XferCount--;
 800ab26:	3b01      	subs	r3, #1
 800ab28:	b29b      	uxth	r3, r3
 800ab2a:	8563      	strh	r3, [r4, #42]	; 0x2a
      if (hi2c->XferCount == (uint16_t)3)
 800ab2c:	8d63      	ldrh	r3, [r4, #42]	; 0x2a
 800ab2e:	b29b      	uxth	r3, r3
      hi2c->pBuffPtr++;
 800ab30:	3201      	adds	r2, #1
      if (hi2c->XferCount == (uint16_t)3)
 800ab32:	2b03      	cmp	r3, #3
      hi2c->pBuffPtr++;
 800ab34:	6262      	str	r2, [r4, #36]	; 0x24
      if (hi2c->XferCount == (uint16_t)3)
 800ab36:	f47f ae1b 	bne.w	800a770 <HAL_I2C_EV_IRQHandler+0x60>
        __HAL_I2C_DISABLE_IT(hi2c, I2C_IT_BUF);
 800ab3a:	6822      	ldr	r2, [r4, #0]
 800ab3c:	6853      	ldr	r3, [r2, #4]
 800ab3e:	f423 6380 	bic.w	r3, r3, #1024	; 0x400
 800ab42:	6053      	str	r3, [r2, #4]
 800ab44:	e614      	b.n	800a770 <HAL_I2C_EV_IRQHandler+0x60>
      if (hi2c->State == HAL_I2C_STATE_BUSY_TX)
 800ab46:	f894 203d 	ldrb.w	r2, [r4, #61]	; 0x3d
 800ab4a:	2a21      	cmp	r2, #33	; 0x21
        hi2c->Instance->DR = I2C_7BIT_ADD_WRITE(hi2c->Devaddress);
 800ab4c:	6c62      	ldr	r2, [r4, #68]	; 0x44
        hi2c->Instance->DR = I2C_7BIT_ADD_READ(hi2c->Devaddress);
 800ab4e:	bf16      	itet	ne
 800ab50:	f042 0201 	orrne.w	r2, r2, #1
        hi2c->Instance->DR = I2C_7BIT_ADD_WRITE(hi2c->Devaddress);
 800ab54:	f002 02fe 	andeq.w	r2, r2, #254	; 0xfe
        hi2c->Instance->DR = I2C_7BIT_ADD_READ(hi2c->Devaddress);
 800ab58:	b2d2      	uxtbne	r2, r2
 800ab5a:	611a      	str	r2, [r3, #16]
      if (((hi2c->hdmatx != NULL) && (hi2c->hdmatx->XferCpltCallback != NULL))
 800ab5c:	6b62      	ldr	r2, [r4, #52]	; 0x34
 800ab5e:	b11a      	cbz	r2, 800ab68 <HAL_I2C_EV_IRQHandler+0x458>
 800ab60:	6bd2      	ldr	r2, [r2, #60]	; 0x3c
 800ab62:	2a00      	cmp	r2, #0
 800ab64:	f47f ae21 	bne.w	800a7aa <HAL_I2C_EV_IRQHandler+0x9a>
      || ((hi2c->hdmarx != NULL) && (hi2c->hdmarx->XferCpltCallback != NULL)))
 800ab68:	6ba2      	ldr	r2, [r4, #56]	; 0x38
 800ab6a:	2a00      	cmp	r2, #0
 800ab6c:	f43f ae00 	beq.w	800a770 <HAL_I2C_EV_IRQHandler+0x60>
 800ab70:	6bd2      	ldr	r2, [r2, #60]	; 0x3c
 800ab72:	2a00      	cmp	r2, #0
 800ab74:	f47f ae19 	bne.w	800a7aa <HAL_I2C_EV_IRQHandler+0x9a>
 800ab78:	e5fa      	b.n	800a770 <HAL_I2C_EV_IRQHandler+0x60>
    I2C_ITError(hi2c);
 800ab7a:	4620      	mov	r0, r4
}
 800ab7c:	b00e      	add	sp, #56	; 0x38
 800ab7e:	e8bd 4070 	ldmia.w	sp!, {r4, r5, r6, lr}
    I2C_ITError(hi2c);
 800ab82:	f7ff bd0f 	b.w	800a5a4 <I2C_ITError>
    if (hi2c->EventCount == 0U)
 800ab86:	6d22      	ldr	r2, [r4, #80]	; 0x50
 800ab88:	bb52      	cbnz	r2, 800abe0 <HAL_I2C_EV_IRQHandler+0x4d0>
      hi2c->Instance->DR = I2C_7BIT_ADD_WRITE(hi2c->Devaddress);
 800ab8a:	6c62      	ldr	r2, [r4, #68]	; 0x44
 800ab8c:	f002 02fe 	and.w	r2, r2, #254	; 0xfe
 800ab90:	611a      	str	r2, [r3, #16]
 800ab92:	e5ed      	b.n	800a770 <HAL_I2C_EV_IRQHandler+0x60>
    hi2c->XferOptions = I2C_FIRST_FRAME;
 800ab94:	2201      	movs	r2, #1
 800ab96:	62e2      	str	r2, [r4, #44]	; 0x2c
 800ab98:	e619      	b.n	800a7ce <HAL_I2C_EV_IRQHandler+0xbe>
    __HAL_I2C_DISABLE_IT(hi2c, (I2C_IT_BUF));
 800ab9a:	685a      	ldr	r2, [r3, #4]
 800ab9c:	f422 6280 	bic.w	r2, r2, #1024	; 0x400
 800aba0:	605a      	str	r2, [r3, #4]
    if (I2C_CHECK_FLAG(IT2Flags, I2C_FLAG_DUALF) == RESET)
 800aba2:	062e      	lsls	r6, r5, #24
    if (I2C_CHECK_FLAG(IT2Flags, I2C_FLAG_TRA) == RESET)
 800aba4:	f085 0104 	eor.w	r1, r5, #4
    __HAL_UNLOCK(hi2c);
 800aba8:	f04f 0300 	mov.w	r3, #0
      SlaveAddrCode = (uint16_t)hi2c->Init.OwnAddress1;
 800abac:	bf54      	ite	pl
 800abae:	89a2      	ldrhpl	r2, [r4, #12]
      SlaveAddrCode = (uint16_t)hi2c->Init.OwnAddress2;
 800abb0:	8b22      	ldrhmi	r2, [r4, #24]
    __HAL_UNLOCK(hi2c);
 800abb2:	f884 303c 	strb.w	r3, [r4, #60]	; 0x3c
  uint8_t TransferDirection = I2C_DIRECTION_RECEIVE;
 800abb6:	f3c1 0180 	ubfx	r1, r1, #2, #1
    HAL_I2C_AddrCallback(hi2c, TransferDirection, SlaveAddrCode);
 800abba:	4620      	mov	r0, r4
 800abbc:	f7ff fc0e 	bl	800a3dc <HAL_I2C_AddrCallback>
 800abc0:	e5d6      	b.n	800a770 <HAL_I2C_EV_IRQHandler+0x60>
 800abc2:	bf00      	nop
 800abc4:	0800a4b1 	.word	0x0800a4b1
      else if (hi2c->EventCount == 1U)
 800abc8:	6d22      	ldr	r2, [r4, #80]	; 0x50
 800abca:	2a01      	cmp	r2, #1
 800abcc:	f47f add0 	bne.w	800a770 <HAL_I2C_EV_IRQHandler+0x60>
        hi2c->Instance->DR = I2C_10BIT_HEADER_READ(hi2c->Devaddress);
 800abd0:	6c62      	ldr	r2, [r4, #68]	; 0x44
 800abd2:	11d2      	asrs	r2, r2, #7
 800abd4:	f002 0206 	and.w	r2, r2, #6
 800abd8:	f042 02f1 	orr.w	r2, r2, #241	; 0xf1
 800abdc:	611a      	str	r2, [r3, #16]
 800abde:	e5c7      	b.n	800a770 <HAL_I2C_EV_IRQHandler+0x60>
      hi2c->Instance->DR = I2C_7BIT_ADD_READ(hi2c->Devaddress);
 800abe0:	6c62      	ldr	r2, [r4, #68]	; 0x44
 800abe2:	f042 0201 	orr.w	r2, r2, #1
 800abe6:	b2d2      	uxtb	r2, r2
 800abe8:	611a      	str	r2, [r3, #16]
 800abea:	e5c1      	b.n	800a770 <HAL_I2C_EV_IRQHandler+0x60>
    if ((hi2c->EventCount == 0U) && (CurrentMode == HAL_I2C_MODE_MEM))
 800abec:	6d21      	ldr	r1, [r4, #80]	; 0x50
 800abee:	b911      	cbnz	r1, 800abf6 <HAL_I2C_EV_IRQHandler+0x4e6>
 800abf0:	2a40      	cmp	r2, #64	; 0x40
 800abf2:	f000 809b 	beq.w	800ad2c <HAL_I2C_EV_IRQHandler+0x61c>
    else if ((hi2c->EventCount == 0U) && (hi2c->Init.AddressingMode == I2C_ADDRESSINGMODE_10BIT))
 800abf6:	6d22      	ldr	r2, [r4, #80]	; 0x50
 800abf8:	b922      	cbnz	r2, 800ac04 <HAL_I2C_EV_IRQHandler+0x4f4>
 800abfa:	6921      	ldr	r1, [r4, #16]
 800abfc:	f5b1 4f40 	cmp.w	r1, #49152	; 0xc000
 800ac00:	f000 809f 	beq.w	800ad42 <HAL_I2C_EV_IRQHandler+0x632>
      if (hi2c->XferCount == 0U)
 800ac04:	8d62      	ldrh	r2, [r4, #42]	; 0x2a
 800ac06:	b292      	uxth	r2, r2
 800ac08:	2a00      	cmp	r2, #0
 800ac0a:	d142      	bne.n	800ac92 <HAL_I2C_EV_IRQHandler+0x582>
        __HAL_I2C_CLEAR_ADDRFLAG(hi2c);
 800ac0c:	9203      	str	r2, [sp, #12]
 800ac0e:	695a      	ldr	r2, [r3, #20]
 800ac10:	9203      	str	r2, [sp, #12]
 800ac12:	699a      	ldr	r2, [r3, #24]
 800ac14:	9203      	str	r2, [sp, #12]
 800ac16:	9a03      	ldr	r2, [sp, #12]
        SET_BIT(hi2c->Instance->CR1, I2C_CR1_STOP);
 800ac18:	681a      	ldr	r2, [r3, #0]
 800ac1a:	f442 7200 	orr.w	r2, r2, #512	; 0x200
 800ac1e:	601a      	str	r2, [r3, #0]
      hi2c->EventCount = 0U;
 800ac20:	2300      	movs	r3, #0
 800ac22:	6523      	str	r3, [r4, #80]	; 0x50
 800ac24:	e5a4      	b.n	800a770 <HAL_I2C_EV_IRQHandler+0x60>
      hi2c->XferCount = (uint16_t)(__HAL_DMA_GET_COUNTER(hi2c->hdmarx));
 800ac26:	6ba0      	ldr	r0, [r4, #56]	; 0x38
 800ac28:	6802      	ldr	r2, [r0, #0]
 800ac2a:	6852      	ldr	r2, [r2, #4]
 800ac2c:	b292      	uxth	r2, r2
 800ac2e:	8562      	strh	r2, [r4, #42]	; 0x2a
      if (hi2c->XferCount != 0U)
 800ac30:	8d62      	ldrh	r2, [r4, #42]	; 0x2a
 800ac32:	b292      	uxth	r2, r2
 800ac34:	b11a      	cbz	r2, 800ac3e <HAL_I2C_EV_IRQHandler+0x52e>
        hi2c->ErrorCode |= HAL_I2C_ERROR_AF;
 800ac36:	6c22      	ldr	r2, [r4, #64]	; 0x40
 800ac38:	f042 0204 	orr.w	r2, r2, #4
 800ac3c:	6422      	str	r2, [r4, #64]	; 0x40
      CLEAR_BIT(hi2c->Instance->CR2, I2C_CR2_DMAEN);
 800ac3e:	685a      	ldr	r2, [r3, #4]
 800ac40:	f422 6200 	bic.w	r2, r2, #2048	; 0x800
 800ac44:	605a      	str	r2, [r3, #4]
      if (HAL_DMA_GetState(hi2c->hdmarx) != HAL_DMA_STATE_READY)
 800ac46:	f7fe fc27 	bl	8009498 <HAL_DMA_GetState>
 800ac4a:	2801      	cmp	r0, #1
 800ac4c:	f43f ae8e 	beq.w	800a96c <HAL_I2C_EV_IRQHandler+0x25c>
        hi2c->hdmarx->XferAbortCallback = I2C_DMAAbort;
 800ac50:	6ba0      	ldr	r0, [r4, #56]	; 0x38
 800ac52:	4b98      	ldr	r3, [pc, #608]	; (800aeb4 <HAL_I2C_EV_IRQHandler+0x7a4>)
 800ac54:	6503      	str	r3, [r0, #80]	; 0x50
        if (HAL_DMA_Abort_IT(hi2c->hdmarx) != HAL_OK)
 800ac56:	f7fe fb37 	bl	80092c8 <HAL_DMA_Abort_IT>
 800ac5a:	2800      	cmp	r0, #0
 800ac5c:	f43f ae86 	beq.w	800a96c <HAL_I2C_EV_IRQHandler+0x25c>
          hi2c->hdmarx->XferAbortCallback(hi2c->hdmarx);
 800ac60:	6ba0      	ldr	r0, [r4, #56]	; 0x38
 800ac62:	6d03      	ldr	r3, [r0, #80]	; 0x50
 800ac64:	4798      	blx	r3
 800ac66:	e681      	b.n	800a96c <HAL_I2C_EV_IRQHandler+0x25c>
      hi2c->State = HAL_I2C_STATE_LISTEN;
 800ac68:	2228      	movs	r2, #40	; 0x28
      hi2c->PreviousState = I2C_STATE_NONE;
 800ac6a:	6323      	str	r3, [r4, #48]	; 0x30
      HAL_I2C_SlaveRxCpltCallback(hi2c);
 800ac6c:	4620      	mov	r0, r4
      hi2c->State = HAL_I2C_STATE_LISTEN;
 800ac6e:	f884 203d 	strb.w	r2, [r4, #61]	; 0x3d
      HAL_I2C_SlaveRxCpltCallback(hi2c);
 800ac72:	f7ff fbb1 	bl	800a3d8 <HAL_I2C_SlaveRxCpltCallback>
 800ac76:	e6a6      	b.n	800a9c6 <HAL_I2C_EV_IRQHandler+0x2b6>
      hi2c->PreviousState = I2C_STATE_NONE;
 800ac78:	2300      	movs	r3, #0
      hi2c->XferOptions = I2C_NO_OPTION_FRAME;
 800ac7a:	498f      	ldr	r1, [pc, #572]	; (800aeb8 <HAL_I2C_EV_IRQHandler+0x7a8>)
 800ac7c:	62e1      	str	r1, [r4, #44]	; 0x2c
      hi2c->State = HAL_I2C_STATE_READY;
 800ac7e:	2220      	movs	r2, #32
      hi2c->PreviousState = I2C_STATE_NONE;
 800ac80:	6323      	str	r3, [r4, #48]	; 0x30
      HAL_I2C_ListenCpltCallback(hi2c);
 800ac82:	4620      	mov	r0, r4
      hi2c->State = HAL_I2C_STATE_READY;
 800ac84:	f884 203d 	strb.w	r2, [r4, #61]	; 0x3d
      hi2c->Mode = HAL_I2C_MODE_NONE;
 800ac88:	f884 303e 	strb.w	r3, [r4, #62]	; 0x3e
      HAL_I2C_ListenCpltCallback(hi2c);
 800ac8c:	f7ff fba8 	bl	800a3e0 <HAL_I2C_ListenCpltCallback>
 800ac90:	e56e      	b.n	800a770 <HAL_I2C_EV_IRQHandler+0x60>
      else if (hi2c->XferCount == 1U)
 800ac92:	8d62      	ldrh	r2, [r4, #42]	; 0x2a
 800ac94:	b292      	uxth	r2, r2
 800ac96:	2a01      	cmp	r2, #1
 800ac98:	d070      	beq.n	800ad7c <HAL_I2C_EV_IRQHandler+0x66c>
      else if (hi2c->XferCount == 2U)
 800ac9a:	8d62      	ldrh	r2, [r4, #42]	; 0x2a
 800ac9c:	b292      	uxth	r2, r2
 800ac9e:	2a02      	cmp	r2, #2
 800aca0:	f000 80d6 	beq.w	800ae50 <HAL_I2C_EV_IRQHandler+0x740>
        SET_BIT(hi2c->Instance->CR1, I2C_CR1_ACK);
 800aca4:	681a      	ldr	r2, [r3, #0]
 800aca6:	f442 6280 	orr.w	r2, r2, #1024	; 0x400
 800acaa:	601a      	str	r2, [r3, #0]
        if (((hi2c->Instance->CR2 & I2C_CR2_DMAEN) == I2C_CR2_DMAEN) && ((CurrentXferOptions == I2C_NO_OPTION_FRAME) || (CurrentXferOptions == I2C_FIRST_FRAME) || (CurrentXferOptions == I2C_FIRST_AND_LAST_FRAME) || (CurrentXferOptions == I2C_LAST_FRAME_NO_STOP) || (CurrentXferOptions == I2C_LAST_FRAME)))
 800acac:	685a      	ldr	r2, [r3, #4]
 800acae:	0511      	lsls	r1, r2, #20
 800acb0:	d508      	bpl.n	800acc4 <HAL_I2C_EV_IRQHandler+0x5b4>
 800acb2:	2820      	cmp	r0, #32
 800acb4:	f200 80f8 	bhi.w	800aea8 <HAL_I2C_EV_IRQHandler+0x798>
 800acb8:	2807      	cmp	r0, #7
 800acba:	f200 80ea 	bhi.w	800ae92 <HAL_I2C_EV_IRQHandler+0x782>
 800acbe:	2801      	cmp	r0, #1
 800acc0:	f000 80ed 	beq.w	800ae9e <HAL_I2C_EV_IRQHandler+0x78e>
        __HAL_I2C_CLEAR_ADDRFLAG(hi2c);
 800acc4:	2200      	movs	r2, #0
 800acc6:	9209      	str	r2, [sp, #36]	; 0x24
 800acc8:	695a      	ldr	r2, [r3, #20]
 800acca:	9209      	str	r2, [sp, #36]	; 0x24
 800accc:	699b      	ldr	r3, [r3, #24]
 800acce:	9309      	str	r3, [sp, #36]	; 0x24
 800acd0:	9b09      	ldr	r3, [sp, #36]	; 0x24
 800acd2:	e7a5      	b.n	800ac20 <HAL_I2C_EV_IRQHandler+0x510>
    __HAL_I2C_DISABLE_IT(hi2c, I2C_IT_BUF);
 800acd4:	685a      	ldr	r2, [r3, #4]
    *hi2c->pBuffPtr = (uint8_t)hi2c->Instance->DR;
 800acd6:	6a61      	ldr	r1, [r4, #36]	; 0x24
    __HAL_I2C_DISABLE_IT(hi2c, I2C_IT_BUF);
 800acd8:	f422 6280 	bic.w	r2, r2, #1024	; 0x400
 800acdc:	605a      	str	r2, [r3, #4]
    *hi2c->pBuffPtr = (uint8_t)hi2c->Instance->DR;
 800acde:	691b      	ldr	r3, [r3, #16]
 800ace0:	700b      	strb	r3, [r1, #0]
    hi2c->pBuffPtr++;
 800ace2:	e6f1      	b.n	800aac8 <HAL_I2C_EV_IRQHandler+0x3b8>
  uint32_t CurrentXferOptions = hi2c->XferOptions;
 800ace4:	6ae1      	ldr	r1, [r4, #44]	; 0x2c
  if (hi2c->State == HAL_I2C_STATE_BUSY_TX)
 800ace6:	f894 203d 	ldrb.w	r2, [r4, #61]	; 0x3d
 800acea:	2a21      	cmp	r2, #33	; 0x21
 800acec:	f47f ad40 	bne.w	800a770 <HAL_I2C_EV_IRQHandler+0x60>
    if (hi2c->XferCount != 0U)
 800acf0:	8d62      	ldrh	r2, [r4, #42]	; 0x2a
 800acf2:	b292      	uxth	r2, r2
 800acf4:	2a00      	cmp	r2, #0
 800acf6:	f47f aeb2 	bne.w	800aa5e <HAL_I2C_EV_IRQHandler+0x34e>
      if ((CurrentXferOptions != I2C_FIRST_AND_LAST_FRAME) && (CurrentXferOptions != I2C_LAST_FRAME) && (CurrentXferOptions != I2C_NO_OPTION_FRAME))
 800acfa:	2908      	cmp	r1, #8
 800acfc:	f000 80e2 	beq.w	800aec4 <HAL_I2C_EV_IRQHandler+0x7b4>
 800ad00:	2920      	cmp	r1, #32
 800ad02:	f000 80df 	beq.w	800aec4 <HAL_I2C_EV_IRQHandler+0x7b4>
 800ad06:	f511 3f80 	cmn.w	r1, #65536	; 0x10000
 800ad0a:	f000 80db 	beq.w	800aec4 <HAL_I2C_EV_IRQHandler+0x7b4>
        __HAL_I2C_DISABLE_IT(hi2c, I2C_IT_EVT | I2C_IT_BUF | I2C_IT_ERR);
 800ad0e:	6859      	ldr	r1, [r3, #4]
 800ad10:	f421 61e0 	bic.w	r1, r1, #1792	; 0x700
 800ad14:	6059      	str	r1, [r3, #4]
        hi2c->PreviousState = I2C_STATE_MASTER_BUSY_TX;
 800ad16:	2011      	movs	r0, #17
        hi2c->State = HAL_I2C_STATE_READY;
 800ad18:	2320      	movs	r3, #32
        hi2c->PreviousState = I2C_STATE_MASTER_BUSY_TX;
 800ad1a:	6320      	str	r0, [r4, #48]	; 0x30
        hi2c->Mode = HAL_I2C_MODE_NONE;
 800ad1c:	f884 203e 	strb.w	r2, [r4, #62]	; 0x3e
        HAL_I2C_MasterTxCpltCallback(hi2c);
 800ad20:	4620      	mov	r0, r4
        hi2c->State = HAL_I2C_STATE_READY;
 800ad22:	f884 303d 	strb.w	r3, [r4, #61]	; 0x3d
        HAL_I2C_MasterTxCpltCallback(hi2c);
 800ad26:	f7ff fb51 	bl	800a3cc <HAL_I2C_MasterTxCpltCallback>
 800ad2a:	e521      	b.n	800a770 <HAL_I2C_EV_IRQHandler+0x60>
      __HAL_I2C_CLEAR_ADDRFLAG(hi2c);
 800ad2c:	9101      	str	r1, [sp, #4]
 800ad2e:	695a      	ldr	r2, [r3, #20]
 800ad30:	9201      	str	r2, [sp, #4]
 800ad32:	699b      	ldr	r3, [r3, #24]
 800ad34:	9301      	str	r3, [sp, #4]
 800ad36:	9b01      	ldr	r3, [sp, #4]
 800ad38:	e51a      	b.n	800a770 <HAL_I2C_EV_IRQHandler+0x60>
  else if ((CurrentState == HAL_I2C_STATE_BUSY_TX) || \
 800ad3a:	2a21      	cmp	r2, #33	; 0x21
 800ad3c:	f43f add1 	beq.w	800a8e2 <HAL_I2C_EV_IRQHandler+0x1d2>
 800ad40:	e5c9      	b.n	800a8d6 <HAL_I2C_EV_IRQHandler+0x1c6>
      __HAL_I2C_CLEAR_ADDRFLAG(hi2c);
 800ad42:	9202      	str	r2, [sp, #8]
 800ad44:	695a      	ldr	r2, [r3, #20]
 800ad46:	9202      	str	r2, [sp, #8]
 800ad48:	699a      	ldr	r2, [r3, #24]
 800ad4a:	9202      	str	r2, [sp, #8]
 800ad4c:	9a02      	ldr	r2, [sp, #8]
      SET_BIT(hi2c->Instance->CR1, I2C_CR1_START);
 800ad4e:	681a      	ldr	r2, [r3, #0]
 800ad50:	f442 7280 	orr.w	r2, r2, #256	; 0x100
 800ad54:	601a      	str	r2, [r3, #0]
      hi2c->EventCount++;
 800ad56:	6d23      	ldr	r3, [r4, #80]	; 0x50
 800ad58:	3301      	adds	r3, #1
 800ad5a:	6523      	str	r3, [r4, #80]	; 0x50
 800ad5c:	e508      	b.n	800a770 <HAL_I2C_EV_IRQHandler+0x60>
    __HAL_I2C_DISABLE_IT(hi2c, I2C_IT_BUF);
 800ad5e:	685a      	ldr	r2, [r3, #4]
    if ((CurrentXferOptions != I2C_NEXT_FRAME) && (CurrentXferOptions != I2C_FIRST_AND_NEXT_FRAME))
 800ad60:	2904      	cmp	r1, #4
    __HAL_I2C_DISABLE_IT(hi2c, I2C_IT_BUF);
 800ad62:	f422 6280 	bic.w	r2, r2, #1024	; 0x400
 800ad66:	605a      	str	r2, [r3, #4]
    if ((CurrentXferOptions != I2C_NEXT_FRAME) && (CurrentXferOptions != I2C_FIRST_AND_NEXT_FRAME))
 800ad68:	f43f aeab 	beq.w	800aac2 <HAL_I2C_EV_IRQHandler+0x3b2>
 800ad6c:	2902      	cmp	r1, #2
 800ad6e:	f43f aea8 	beq.w	800aac2 <HAL_I2C_EV_IRQHandler+0x3b2>
      CLEAR_BIT(hi2c->Instance->CR1, I2C_CR1_ACK);
 800ad72:	681a      	ldr	r2, [r3, #0]
 800ad74:	f422 6280 	bic.w	r2, r2, #1024	; 0x400
 800ad78:	601a      	str	r2, [r3, #0]
 800ad7a:	e6a2      	b.n	800aac2 <HAL_I2C_EV_IRQHandler+0x3b2>
        if (CurrentXferOptions == I2C_NO_OPTION_FRAME)
 800ad7c:	f510 3f80 	cmn.w	r0, #65536	; 0x10000
 800ad80:	f000 811b 	beq.w	800afba <HAL_I2C_EV_IRQHandler+0x8aa>
        else if ((CurrentXferOptions != I2C_FIRST_AND_LAST_FRAME) && (CurrentXferOptions != I2C_LAST_FRAME) \
 800ad84:	2808      	cmp	r0, #8
 800ad86:	f000 8108 	beq.w	800af9a <HAL_I2C_EV_IRQHandler+0x88a>
 800ad8a:	2820      	cmp	r0, #32
 800ad8c:	f000 8105 	beq.w	800af9a <HAL_I2C_EV_IRQHandler+0x88a>
                 && ((Prev_State != I2C_STATE_MASTER_BUSY_RX) || (CurrentXferOptions == I2C_FIRST_FRAME)))
 800ad90:	2d12      	cmp	r5, #18
 800ad92:	f000 80ff 	beq.w	800af94 <HAL_I2C_EV_IRQHandler+0x884>
          if ((CurrentXferOptions != I2C_NEXT_FRAME) && (CurrentXferOptions != I2C_FIRST_AND_NEXT_FRAME) && (CurrentXferOptions != I2C_LAST_FRAME_NO_STOP))
 800ad96:	2810      	cmp	r0, #16
 800ad98:	d804      	bhi.n	800ada4 <HAL_I2C_EV_IRQHandler+0x694>
 800ad9a:	4a48      	ldr	r2, [pc, #288]	; (800aebc <HAL_I2C_EV_IRQHandler+0x7ac>)
 800ad9c:	40c2      	lsrs	r2, r0
 800ad9e:	07d1      	lsls	r1, r2, #31
 800ada0:	f100 814c 	bmi.w	800b03c <HAL_I2C_EV_IRQHandler+0x92c>
            CLEAR_BIT(hi2c->Instance->CR1, I2C_CR1_ACK);
 800ada4:	681a      	ldr	r2, [r3, #0]
 800ada6:	f422 6280 	bic.w	r2, r2, #1024	; 0x400
 800adaa:	601a      	str	r2, [r3, #0]
          __HAL_I2C_CLEAR_ADDRFLAG(hi2c);
 800adac:	2200      	movs	r2, #0
 800adae:	9206      	str	r2, [sp, #24]
 800adb0:	695a      	ldr	r2, [r3, #20]
 800adb2:	9206      	str	r2, [sp, #24]
 800adb4:	699b      	ldr	r3, [r3, #24]
 800adb6:	9306      	str	r3, [sp, #24]
 800adb8:	9b06      	ldr	r3, [sp, #24]
 800adba:	e731      	b.n	800ac20 <HAL_I2C_EV_IRQHandler+0x510>
      __HAL_I2C_DISABLE_IT(hi2c, I2C_IT_BUF);
 800adbc:	685a      	ldr	r2, [r3, #4]
 800adbe:	f422 6280 	bic.w	r2, r2, #1024	; 0x400
 800adc2:	605a      	str	r2, [r3, #4]
 800adc4:	e4d4      	b.n	800a770 <HAL_I2C_EV_IRQHandler+0x60>
    if ((CurrentXferOptions == I2C_FIRST_FRAME) || (CurrentXferOptions == I2C_LAST_FRAME_NO_STOP))
 800adc6:	3901      	subs	r1, #1
 800adc8:	290f      	cmp	r1, #15
 800adca:	d809      	bhi.n	800ade0 <HAL_I2C_EV_IRQHandler+0x6d0>
 800adcc:	e8df f001 	tbb	[pc, r1]
 800add0:	3608363b 	.word	0x3608363b
 800add4:	08080808 	.word	0x08080808
 800add8:	08080808 	.word	0x08080808
 800addc:	3b080808 	.word	0x3b080808
      SET_BIT(hi2c->Instance->CR1, I2C_CR1_STOP);
 800ade0:	681a      	ldr	r2, [r3, #0]
 800ade2:	f442 7200 	orr.w	r2, r2, #512	; 0x200
 800ade6:	601a      	str	r2, [r3, #0]
    *hi2c->pBuffPtr = (uint8_t)hi2c->Instance->DR;
 800ade8:	6a62      	ldr	r2, [r4, #36]	; 0x24
 800adea:	691b      	ldr	r3, [r3, #16]
 800adec:	7013      	strb	r3, [r2, #0]
    hi2c->XferCount--;
 800adee:	8d63      	ldrh	r3, [r4, #42]	; 0x2a
    hi2c->pBuffPtr++;
 800adf0:	6a62      	ldr	r2, [r4, #36]	; 0x24
    *hi2c->pBuffPtr = (uint8_t)hi2c->Instance->DR;
 800adf2:	6821      	ldr	r1, [r4, #0]
    hi2c->XferCount--;
 800adf4:	3b01      	subs	r3, #1
 800adf6:	b29b      	uxth	r3, r3
 800adf8:	8563      	strh	r3, [r4, #42]	; 0x2a
    *hi2c->pBuffPtr = (uint8_t)hi2c->Instance->DR;
 800adfa:	690b      	ldr	r3, [r1, #16]
    hi2c->pBuffPtr++;
 800adfc:	1c51      	adds	r1, r2, #1
 800adfe:	6261      	str	r1, [r4, #36]	; 0x24
    *hi2c->pBuffPtr = (uint8_t)hi2c->Instance->DR;
 800ae00:	7053      	strb	r3, [r2, #1]
    hi2c->XferCount--;
 800ae02:	8d63      	ldrh	r3, [r4, #42]	; 0x2a
    __HAL_I2C_DISABLE_IT(hi2c, I2C_IT_EVT | I2C_IT_ERR);
 800ae04:	6821      	ldr	r1, [r4, #0]
    hi2c->pBuffPtr++;
 800ae06:	6a62      	ldr	r2, [r4, #36]	; 0x24
    hi2c->XferCount--;
 800ae08:	3b01      	subs	r3, #1
 800ae0a:	b29b      	uxth	r3, r3
 800ae0c:	8563      	strh	r3, [r4, #42]	; 0x2a
    __HAL_I2C_DISABLE_IT(hi2c, I2C_IT_EVT | I2C_IT_ERR);
 800ae0e:	684b      	ldr	r3, [r1, #4]
    hi2c->pBuffPtr++;
 800ae10:	3201      	adds	r2, #1
    __HAL_I2C_DISABLE_IT(hi2c, I2C_IT_EVT | I2C_IT_ERR);
 800ae12:	f423 7340 	bic.w	r3, r3, #768	; 0x300
    hi2c->State = HAL_I2C_STATE_READY;
 800ae16:	2020      	movs	r0, #32
    hi2c->pBuffPtr++;
 800ae18:	6262      	str	r2, [r4, #36]	; 0x24
    __HAL_I2C_DISABLE_IT(hi2c, I2C_IT_EVT | I2C_IT_ERR);
 800ae1a:	604b      	str	r3, [r1, #4]
    hi2c->State = HAL_I2C_STATE_READY;
 800ae1c:	f884 003d 	strb.w	r0, [r4, #61]	; 0x3d
    if (hi2c->Mode == HAL_I2C_MODE_MEM)
 800ae20:	f894 303e 	ldrb.w	r3, [r4, #62]	; 0x3e
 800ae24:	2b40      	cmp	r3, #64	; 0x40
 800ae26:	f000 80f5 	beq.w	800b014 <HAL_I2C_EV_IRQHandler+0x904>
      hi2c->Mode = HAL_I2C_MODE_NONE;
 800ae2a:	2200      	movs	r2, #0
      hi2c->PreviousState = I2C_STATE_MASTER_BUSY_RX;
 800ae2c:	2312      	movs	r3, #18
      hi2c->Mode = HAL_I2C_MODE_NONE;
 800ae2e:	f884 203e 	strb.w	r2, [r4, #62]	; 0x3e
      HAL_I2C_MasterRxCpltCallback(hi2c);
 800ae32:	4620      	mov	r0, r4
      hi2c->PreviousState = I2C_STATE_MASTER_BUSY_RX;
 800ae34:	6323      	str	r3, [r4, #48]	; 0x30
      HAL_I2C_MasterRxCpltCallback(hi2c);
 800ae36:	f7ff facb 	bl	800a3d0 <HAL_I2C_MasterRxCpltCallback>
 800ae3a:	e499      	b.n	800a770 <HAL_I2C_EV_IRQHandler+0x60>
      SET_BIT(hi2c->Instance->CR1, I2C_CR1_ACK);
 800ae3c:	681a      	ldr	r2, [r3, #0]
 800ae3e:	f442 6280 	orr.w	r2, r2, #1024	; 0x400
 800ae42:	601a      	str	r2, [r3, #0]
 800ae44:	e7d0      	b.n	800ade8 <HAL_I2C_EV_IRQHandler+0x6d8>
      CLEAR_BIT(hi2c->Instance->CR1, I2C_CR1_ACK);
 800ae46:	681a      	ldr	r2, [r3, #0]
 800ae48:	f422 6280 	bic.w	r2, r2, #1024	; 0x400
 800ae4c:	601a      	str	r2, [r3, #0]
 800ae4e:	e7cb      	b.n	800ade8 <HAL_I2C_EV_IRQHandler+0x6d8>
        if ((CurrentXferOptions != I2C_NEXT_FRAME) && (CurrentXferOptions != I2C_FIRST_AND_NEXT_FRAME) && (CurrentXferOptions != I2C_LAST_FRAME_NO_STOP))
 800ae50:	2810      	cmp	r0, #16
 800ae52:	d804      	bhi.n	800ae5e <HAL_I2C_EV_IRQHandler+0x74e>
 800ae54:	4a19      	ldr	r2, [pc, #100]	; (800aebc <HAL_I2C_EV_IRQHandler+0x7ac>)
 800ae56:	40c2      	lsrs	r2, r0
 800ae58:	07d2      	lsls	r2, r2, #31
 800ae5a:	f100 80c2 	bmi.w	800afe2 <HAL_I2C_EV_IRQHandler+0x8d2>
          CLEAR_BIT(hi2c->Instance->CR1, I2C_CR1_ACK);
 800ae5e:	681a      	ldr	r2, [r3, #0]
 800ae60:	f422 6280 	bic.w	r2, r2, #1024	; 0x400
 800ae64:	601a      	str	r2, [r3, #0]
          SET_BIT(hi2c->Instance->CR1, I2C_CR1_POS);
 800ae66:	681a      	ldr	r2, [r3, #0]
 800ae68:	f442 6200 	orr.w	r2, r2, #2048	; 0x800
 800ae6c:	601a      	str	r2, [r3, #0]
        if (((hi2c->Instance->CR2 & I2C_CR2_DMAEN) == I2C_CR2_DMAEN) && ((CurrentXferOptions == I2C_NO_OPTION_FRAME) || (CurrentXferOptions == I2C_FIRST_FRAME) || (CurrentXferOptions == I2C_FIRST_AND_LAST_FRAME) || (CurrentXferOptions == I2C_LAST_FRAME_NO_STOP) || (CurrentXferOptions == I2C_LAST_FRAME)))
 800ae6e:	685a      	ldr	r2, [r3, #4]
 800ae70:	0516      	lsls	r6, r2, #20
 800ae72:	d506      	bpl.n	800ae82 <HAL_I2C_EV_IRQHandler+0x772>
 800ae74:	2820      	cmp	r0, #32
 800ae76:	f240 80bc 	bls.w	800aff2 <HAL_I2C_EV_IRQHandler+0x8e2>
 800ae7a:	f510 3f80 	cmn.w	r0, #65536	; 0x10000
 800ae7e:	f000 80bd 	beq.w	800affc <HAL_I2C_EV_IRQHandler+0x8ec>
        __HAL_I2C_CLEAR_ADDRFLAG(hi2c);
 800ae82:	2200      	movs	r2, #0
 800ae84:	9208      	str	r2, [sp, #32]
 800ae86:	695a      	ldr	r2, [r3, #20]
 800ae88:	9208      	str	r2, [sp, #32]
 800ae8a:	699b      	ldr	r3, [r3, #24]
 800ae8c:	9308      	str	r3, [sp, #32]
 800ae8e:	9b08      	ldr	r3, [sp, #32]
 800ae90:	e6c6      	b.n	800ac20 <HAL_I2C_EV_IRQHandler+0x510>
 800ae92:	4a0b      	ldr	r2, [pc, #44]	; (800aec0 <HAL_I2C_EV_IRQHandler+0x7b0>)
 800ae94:	3808      	subs	r0, #8
 800ae96:	40c2      	lsrs	r2, r0
 800ae98:	07d2      	lsls	r2, r2, #31
 800ae9a:	f57f af13 	bpl.w	800acc4 <HAL_I2C_EV_IRQHandler+0x5b4>
          SET_BIT(hi2c->Instance->CR2, I2C_CR2_LAST);
 800ae9e:	685a      	ldr	r2, [r3, #4]
 800aea0:	f442 5280 	orr.w	r2, r2, #4096	; 0x1000
 800aea4:	605a      	str	r2, [r3, #4]
 800aea6:	e70d      	b.n	800acc4 <HAL_I2C_EV_IRQHandler+0x5b4>
 800aea8:	f510 3f80 	cmn.w	r0, #65536	; 0x10000
 800aeac:	f47f af0a 	bne.w	800acc4 <HAL_I2C_EV_IRQHandler+0x5b4>
 800aeb0:	e7f5      	b.n	800ae9e <HAL_I2C_EV_IRQHandler+0x78e>
 800aeb2:	bf00      	nop
 800aeb4:	0800a4b1 	.word	0x0800a4b1
 800aeb8:	ffff0000 	.word	0xffff0000
 800aebc:	00010014 	.word	0x00010014
 800aec0:	01000101 	.word	0x01000101
        __HAL_I2C_DISABLE_IT(hi2c, I2C_IT_EVT | I2C_IT_BUF | I2C_IT_ERR);
 800aec4:	6859      	ldr	r1, [r3, #4]
 800aec6:	f421 61e0 	bic.w	r1, r1, #1792	; 0x700
 800aeca:	6059      	str	r1, [r3, #4]
        SET_BIT(hi2c->Instance->CR1, I2C_CR1_STOP);
 800aecc:	6819      	ldr	r1, [r3, #0]
        hi2c->PreviousState = I2C_STATE_NONE;
 800aece:	2200      	movs	r2, #0
        hi2c->State = HAL_I2C_STATE_READY;
 800aed0:	2020      	movs	r0, #32
        SET_BIT(hi2c->Instance->CR1, I2C_CR1_STOP);
 800aed2:	f441 7100 	orr.w	r1, r1, #512	; 0x200
 800aed6:	6019      	str	r1, [r3, #0]
        hi2c->PreviousState = I2C_STATE_NONE;
 800aed8:	6322      	str	r2, [r4, #48]	; 0x30
        hi2c->State = HAL_I2C_STATE_READY;
 800aeda:	f884 003d 	strb.w	r0, [r4, #61]	; 0x3d
        if (hi2c->Mode == HAL_I2C_MODE_MEM)
 800aede:	f894 303e 	ldrb.w	r3, [r4, #62]	; 0x3e
          hi2c->Mode = HAL_I2C_MODE_NONE;
 800aee2:	f884 203e 	strb.w	r2, [r4, #62]	; 0x3e
        if (hi2c->Mode == HAL_I2C_MODE_MEM)
 800aee6:	2b40      	cmp	r3, #64	; 0x40
          HAL_I2C_MemTxCpltCallback(hi2c);
 800aee8:	4620      	mov	r0, r4
        if (hi2c->Mode == HAL_I2C_MODE_MEM)
 800aeea:	f47f af1c 	bne.w	800ad26 <HAL_I2C_EV_IRQHandler+0x616>
          HAL_I2C_MemTxCpltCallback(hi2c);
 800aeee:	f7ff fa79 	bl	800a3e4 <HAL_I2C_MemTxCpltCallback>
 800aef2:	e43d      	b.n	800a770 <HAL_I2C_EV_IRQHandler+0x60>
    else if ((hi2c->XferOptions != I2C_FIRST_AND_NEXT_FRAME) && ((tmp == 1U) || (tmp == 0U)))
 800aef4:	6ae0      	ldr	r0, [r4, #44]	; 0x2c
 800aef6:	2802      	cmp	r0, #2
 800aef8:	f43f af60 	beq.w	800adbc <HAL_I2C_EV_IRQHandler+0x6ac>
 800aefc:	2a01      	cmp	r2, #1
 800aefe:	f63f af5d 	bhi.w	800adbc <HAL_I2C_EV_IRQHandler+0x6ac>
  count = I2C_TIMEOUT_STOP_FLAG * (SystemCoreClock / 25U / 1000U);
 800af02:	4a62      	ldr	r2, [pc, #392]	; (800b08c <HAL_I2C_EV_IRQHandler+0x97c>)
  __IO uint32_t count = 0U;
 800af04:	910b      	str	r1, [sp, #44]	; 0x2c
  count = I2C_TIMEOUT_STOP_FLAG * (SystemCoreClock / 25U / 1000U);
 800af06:	6812      	ldr	r2, [r2, #0]
 800af08:	f246 10a8 	movw	r0, #25000	; 0x61a8
 800af0c:	fbb2 f2f0 	udiv	r2, r2, r0
 800af10:	eb02 0282 	add.w	r2, r2, r2, lsl #2
 800af14:	920b      	str	r2, [sp, #44]	; 0x2c
 800af16:	e004      	b.n	800af22 <HAL_I2C_EV_IRQHandler+0x812>
  while (READ_BIT(hi2c->Instance->CR1, I2C_CR1_STOP) == I2C_CR1_STOP);
 800af18:	681a      	ldr	r2, [r3, #0]
 800af1a:	f412 7200 	ands.w	r2, r2, #512	; 0x200
 800af1e:	f000 8092 	beq.w	800b046 <HAL_I2C_EV_IRQHandler+0x936>
    count--;
 800af22:	9a0b      	ldr	r2, [sp, #44]	; 0x2c
 800af24:	3a01      	subs	r2, #1
 800af26:	920b      	str	r2, [sp, #44]	; 0x2c
    if (count == 0U)
 800af28:	990b      	ldr	r1, [sp, #44]	; 0x2c
 800af2a:	2900      	cmp	r1, #0
 800af2c:	d1f4      	bne.n	800af18 <HAL_I2C_EV_IRQHandler+0x808>
      hi2c->ErrorCode           |= HAL_I2C_ERROR_TIMEOUT;
 800af2e:	6c22      	ldr	r2, [r4, #64]	; 0x40
        *hi2c->pBuffPtr = (uint8_t)hi2c->Instance->DR;
 800af30:	6a60      	ldr	r0, [r4, #36]	; 0x24
      hi2c->ErrorCode           |= HAL_I2C_ERROR_TIMEOUT;
 800af32:	f042 0220 	orr.w	r2, r2, #32
 800af36:	6422      	str	r2, [r4, #64]	; 0x40
        __HAL_I2C_DISABLE_IT(hi2c, I2C_IT_EVT | I2C_IT_BUF | I2C_IT_ERR);
 800af38:	685a      	ldr	r2, [r3, #4]
 800af3a:	f422 62e0 	bic.w	r2, r2, #1792	; 0x700
 800af3e:	605a      	str	r2, [r3, #4]
        *hi2c->pBuffPtr = (uint8_t)hi2c->Instance->DR;
 800af40:	691b      	ldr	r3, [r3, #16]
 800af42:	7003      	strb	r3, [r0, #0]
        hi2c->XferCount--;
 800af44:	8d63      	ldrh	r3, [r4, #42]	; 0x2a
        hi2c->pBuffPtr++;
 800af46:	6a62      	ldr	r2, [r4, #36]	; 0x24
        hi2c->XferCount--;
 800af48:	3b01      	subs	r3, #1
        hi2c->pBuffPtr++;
 800af4a:	3201      	adds	r2, #1
        hi2c->XferCount--;
 800af4c:	b29b      	uxth	r3, r3
        hi2c->State = HAL_I2C_STATE_READY;
 800af4e:	2020      	movs	r0, #32
        hi2c->XferCount--;
 800af50:	8563      	strh	r3, [r4, #42]	; 0x2a
        hi2c->pBuffPtr++;
 800af52:	6262      	str	r2, [r4, #36]	; 0x24
        hi2c->State = HAL_I2C_STATE_READY;
 800af54:	f884 003d 	strb.w	r0, [r4, #61]	; 0x3d
        HAL_I2C_ErrorCallback(hi2c);
 800af58:	4620      	mov	r0, r4
        hi2c->Mode = HAL_I2C_MODE_NONE;
 800af5a:	f884 103e 	strb.w	r1, [r4, #62]	; 0x3e
        HAL_I2C_ErrorCallback(hi2c);
 800af5e:	f7ff faa3 	bl	800a4a8 <HAL_I2C_ErrorCallback>
 800af62:	e405      	b.n	800a770 <HAL_I2C_EV_IRQHandler+0x60>
    if ((CurrentXferOptions != I2C_FIRST_AND_LAST_FRAME) && (CurrentXferOptions != I2C_LAST_FRAME) && (CurrentXferOptions != I2C_NO_OPTION_FRAME))
 800af64:	2d08      	cmp	r5, #8
 800af66:	d0ad      	beq.n	800aec4 <HAL_I2C_EV_IRQHandler+0x7b4>
 800af68:	2d20      	cmp	r5, #32
 800af6a:	d0ab      	beq.n	800aec4 <HAL_I2C_EV_IRQHandler+0x7b4>
 800af6c:	f515 3f80 	cmn.w	r5, #65536	; 0x10000
 800af70:	d0a8      	beq.n	800aec4 <HAL_I2C_EV_IRQHandler+0x7b4>
      __HAL_I2C_DISABLE_IT(hi2c, I2C_IT_EVT | I2C_IT_BUF | I2C_IT_ERR);
 800af72:	685a      	ldr	r2, [r3, #4]
 800af74:	f422 62e0 	bic.w	r2, r2, #1792	; 0x700
 800af78:	605a      	str	r2, [r3, #4]
      hi2c->PreviousState = I2C_STATE_MASTER_BUSY_TX;
 800af7a:	2011      	movs	r0, #17
      hi2c->Mode = HAL_I2C_MODE_NONE;
 800af7c:	2100      	movs	r1, #0
      hi2c->State = HAL_I2C_STATE_READY;
 800af7e:	2320      	movs	r3, #32
      hi2c->PreviousState = I2C_STATE_MASTER_BUSY_TX;
 800af80:	6320      	str	r0, [r4, #48]	; 0x30
      hi2c->Mode = HAL_I2C_MODE_NONE;
 800af82:	f884 103e 	strb.w	r1, [r4, #62]	; 0x3e
      HAL_I2C_MasterTxCpltCallback(hi2c);
 800af86:	4620      	mov	r0, r4
      hi2c->State = HAL_I2C_STATE_READY;
 800af88:	f884 303d 	strb.w	r3, [r4, #61]	; 0x3d
      HAL_I2C_MasterTxCpltCallback(hi2c);
 800af8c:	f7ff fa1e 	bl	800a3cc <HAL_I2C_MasterTxCpltCallback>
 800af90:	f7ff bbee 	b.w	800a770 <HAL_I2C_EV_IRQHandler+0x60>
                 && ((Prev_State != I2C_STATE_MASTER_BUSY_RX) || (CurrentXferOptions == I2C_FIRST_FRAME)))
 800af94:	2801      	cmp	r0, #1
 800af96:	f43f af05 	beq.w	800ada4 <HAL_I2C_EV_IRQHandler+0x694>
          CLEAR_BIT(hi2c->Instance->CR1, I2C_CR1_ACK);
 800af9a:	681a      	ldr	r2, [r3, #0]
          __HAL_I2C_CLEAR_ADDRFLAG(hi2c);
 800af9c:	2100      	movs	r1, #0
          CLEAR_BIT(hi2c->Instance->CR1, I2C_CR1_ACK);
 800af9e:	f422 6280 	bic.w	r2, r2, #1024	; 0x400
 800afa2:	601a      	str	r2, [r3, #0]
          __HAL_I2C_CLEAR_ADDRFLAG(hi2c);
 800afa4:	9107      	str	r1, [sp, #28]
 800afa6:	695a      	ldr	r2, [r3, #20]
 800afa8:	9207      	str	r2, [sp, #28]
 800afaa:	699a      	ldr	r2, [r3, #24]
 800afac:	9207      	str	r2, [sp, #28]
 800afae:	9a07      	ldr	r2, [sp, #28]
          SET_BIT(hi2c->Instance->CR1, I2C_CR1_STOP);
 800afb0:	681a      	ldr	r2, [r3, #0]
 800afb2:	f442 7200 	orr.w	r2, r2, #512	; 0x200
 800afb6:	601a      	str	r2, [r3, #0]
 800afb8:	e632      	b.n	800ac20 <HAL_I2C_EV_IRQHandler+0x510>
          CLEAR_BIT(hi2c->Instance->CR1, I2C_CR1_ACK);
 800afba:	681a      	ldr	r2, [r3, #0]
 800afbc:	f422 6280 	bic.w	r2, r2, #1024	; 0x400
 800afc0:	601a      	str	r2, [r3, #0]
          if ((hi2c->Instance->CR2 & I2C_CR2_DMAEN) == I2C_CR2_DMAEN)
 800afc2:	685a      	ldr	r2, [r3, #4]
 800afc4:	f412 6200 	ands.w	r2, r2, #2048	; 0x800
 800afc8:	d02d      	beq.n	800b026 <HAL_I2C_EV_IRQHandler+0x916>
            CLEAR_BIT(hi2c->Instance->CR1, I2C_CR1_ACK);
 800afca:	681a      	ldr	r2, [r3, #0]
            __HAL_I2C_CLEAR_ADDRFLAG(hi2c);
 800afcc:	2100      	movs	r1, #0
            CLEAR_BIT(hi2c->Instance->CR1, I2C_CR1_ACK);
 800afce:	f422 6280 	bic.w	r2, r2, #1024	; 0x400
 800afd2:	601a      	str	r2, [r3, #0]
            __HAL_I2C_CLEAR_ADDRFLAG(hi2c);
 800afd4:	9104      	str	r1, [sp, #16]
 800afd6:	695a      	ldr	r2, [r3, #20]
 800afd8:	9204      	str	r2, [sp, #16]
 800afda:	699b      	ldr	r3, [r3, #24]
 800afdc:	9304      	str	r3, [sp, #16]
 800afde:	9b04      	ldr	r3, [sp, #16]
 800afe0:	e61e      	b.n	800ac20 <HAL_I2C_EV_IRQHandler+0x510>
          SET_BIT(hi2c->Instance->CR1, I2C_CR1_ACK);
 800afe2:	681a      	ldr	r2, [r3, #0]
 800afe4:	f442 6280 	orr.w	r2, r2, #1024	; 0x400
 800afe8:	601a      	str	r2, [r3, #0]
        if (((hi2c->Instance->CR2 & I2C_CR2_DMAEN) == I2C_CR2_DMAEN) && ((CurrentXferOptions == I2C_NO_OPTION_FRAME) || (CurrentXferOptions == I2C_FIRST_FRAME) || (CurrentXferOptions == I2C_FIRST_AND_LAST_FRAME) || (CurrentXferOptions == I2C_LAST_FRAME_NO_STOP) || (CurrentXferOptions == I2C_LAST_FRAME)))
 800afea:	685a      	ldr	r2, [r3, #4]
 800afec:	0515      	lsls	r5, r2, #20
 800afee:	f57f af48 	bpl.w	800ae82 <HAL_I2C_EV_IRQHandler+0x772>
 800aff2:	2807      	cmp	r0, #7
 800aff4:	d807      	bhi.n	800b006 <HAL_I2C_EV_IRQHandler+0x8f6>
 800aff6:	2801      	cmp	r0, #1
 800aff8:	f47f af43 	bne.w	800ae82 <HAL_I2C_EV_IRQHandler+0x772>
          SET_BIT(hi2c->Instance->CR2, I2C_CR2_LAST);
 800affc:	685a      	ldr	r2, [r3, #4]
 800affe:	f442 5280 	orr.w	r2, r2, #4096	; 0x1000
 800b002:	605a      	str	r2, [r3, #4]
 800b004:	e73d      	b.n	800ae82 <HAL_I2C_EV_IRQHandler+0x772>
 800b006:	4a22      	ldr	r2, [pc, #136]	; (800b090 <HAL_I2C_EV_IRQHandler+0x980>)
 800b008:	3808      	subs	r0, #8
 800b00a:	40c2      	lsrs	r2, r0
 800b00c:	07d0      	lsls	r0, r2, #31
 800b00e:	f57f af38 	bpl.w	800ae82 <HAL_I2C_EV_IRQHandler+0x772>
 800b012:	e7f3      	b.n	800affc <HAL_I2C_EV_IRQHandler+0x8ec>
      hi2c->Mode = HAL_I2C_MODE_NONE;
 800b014:	2300      	movs	r3, #0
 800b016:	f884 303e 	strb.w	r3, [r4, #62]	; 0x3e
      HAL_I2C_MemRxCpltCallback(hi2c);
 800b01a:	4620      	mov	r0, r4
      hi2c->PreviousState = I2C_STATE_NONE;
 800b01c:	6323      	str	r3, [r4, #48]	; 0x30
      HAL_I2C_MemRxCpltCallback(hi2c);
 800b01e:	f7ff fa41 	bl	800a4a4 <HAL_I2C_MemRxCpltCallback>
 800b022:	f7ff bba5 	b.w	800a770 <HAL_I2C_EV_IRQHandler+0x60>
            __HAL_I2C_CLEAR_ADDRFLAG(hi2c);
 800b026:	9205      	str	r2, [sp, #20]
 800b028:	695a      	ldr	r2, [r3, #20]
 800b02a:	9205      	str	r2, [sp, #20]
 800b02c:	699a      	ldr	r2, [r3, #24]
 800b02e:	9205      	str	r2, [sp, #20]
 800b030:	9a05      	ldr	r2, [sp, #20]
            SET_BIT(hi2c->Instance->CR1, I2C_CR1_STOP);
 800b032:	681a      	ldr	r2, [r3, #0]
 800b034:	f442 7200 	orr.w	r2, r2, #512	; 0x200
 800b038:	601a      	str	r2, [r3, #0]
 800b03a:	e5f1      	b.n	800ac20 <HAL_I2C_EV_IRQHandler+0x510>
            SET_BIT(hi2c->Instance->CR1, I2C_CR1_ACK);
 800b03c:	681a      	ldr	r2, [r3, #0]
 800b03e:	f442 6280 	orr.w	r2, r2, #1024	; 0x400
 800b042:	601a      	str	r2, [r3, #0]
 800b044:	e6b2      	b.n	800adac <HAL_I2C_EV_IRQHandler+0x69c>
        CLEAR_BIT(hi2c->Instance->CR1, I2C_CR1_ACK);
 800b046:	6819      	ldr	r1, [r3, #0]
        *hi2c->pBuffPtr = (uint8_t)hi2c->Instance->DR;
 800b048:	6a60      	ldr	r0, [r4, #36]	; 0x24
        CLEAR_BIT(hi2c->Instance->CR1, I2C_CR1_ACK);
 800b04a:	f421 6180 	bic.w	r1, r1, #1024	; 0x400
 800b04e:	6019      	str	r1, [r3, #0]
        __HAL_I2C_DISABLE_IT(hi2c, I2C_IT_EVT | I2C_IT_BUF | I2C_IT_ERR);
 800b050:	6859      	ldr	r1, [r3, #4]
 800b052:	f421 61e0 	bic.w	r1, r1, #1792	; 0x700
 800b056:	6059      	str	r1, [r3, #4]
        *hi2c->pBuffPtr = (uint8_t)hi2c->Instance->DR;
 800b058:	691b      	ldr	r3, [r3, #16]
 800b05a:	7003      	strb	r3, [r0, #0]
        hi2c->XferCount--;
 800b05c:	8d63      	ldrh	r3, [r4, #42]	; 0x2a
 800b05e:	3b01      	subs	r3, #1
        hi2c->State = HAL_I2C_STATE_READY;
 800b060:	2120      	movs	r1, #32
        hi2c->XferCount--;
 800b062:	b29b      	uxth	r3, r3
 800b064:	8563      	strh	r3, [r4, #42]	; 0x2a
        hi2c->State = HAL_I2C_STATE_READY;
 800b066:	f884 103d 	strb.w	r1, [r4, #61]	; 0x3d
        hi2c->pBuffPtr++;
 800b06a:	6a63      	ldr	r3, [r4, #36]	; 0x24
        if (hi2c->Mode == HAL_I2C_MODE_MEM)
 800b06c:	f894 103e 	ldrb.w	r1, [r4, #62]	; 0x3e
        hi2c->pBuffPtr++;
 800b070:	3301      	adds	r3, #1
        if (hi2c->Mode == HAL_I2C_MODE_MEM)
 800b072:	2940      	cmp	r1, #64	; 0x40
        hi2c->pBuffPtr++;
 800b074:	6263      	str	r3, [r4, #36]	; 0x24
        if (hi2c->Mode == HAL_I2C_MODE_MEM)
 800b076:	f47f aed9 	bne.w	800ae2c <HAL_I2C_EV_IRQHandler+0x71c>
          hi2c->Mode = HAL_I2C_MODE_NONE;
 800b07a:	f884 203e 	strb.w	r2, [r4, #62]	; 0x3e
          HAL_I2C_MemRxCpltCallback(hi2c);
 800b07e:	4620      	mov	r0, r4
          hi2c->PreviousState = I2C_STATE_NONE;
 800b080:	6322      	str	r2, [r4, #48]	; 0x30
          HAL_I2C_MemRxCpltCallback(hi2c);
 800b082:	f7ff fa0f 	bl	800a4a4 <HAL_I2C_MemRxCpltCallback>
 800b086:	f7ff bb73 	b.w	800a770 <HAL_I2C_EV_IRQHandler+0x60>
 800b08a:	bf00      	nop
 800b08c:	20000078 	.word	0x20000078
 800b090:	01000101 	.word	0x01000101

0800b094 <HAL_I2CEx_ConfigAnalogFilter>:
{
  /* Check the parameters */
  assert_param(IS_I2C_ALL_INSTANCE(hi2c->Instance));
  assert_param(IS_I2C_ANALOG_FILTER(AnalogFilter));

  if (hi2c->State == HAL_I2C_STATE_READY)
 800b094:	f890 203d 	ldrb.w	r2, [r0, #61]	; 0x3d
 800b098:	2a20      	cmp	r2, #32
{
 800b09a:	4603      	mov	r3, r0
  if (hi2c->State == HAL_I2C_STATE_READY)
 800b09c:	fa5f fc82 	uxtb.w	ip, r2
 800b0a0:	d001      	beq.n	800b0a6 <HAL_I2CEx_ConfigAnalogFilter+0x12>

    return HAL_OK;
  }
  else
  {
    return HAL_BUSY;
 800b0a2:	2002      	movs	r0, #2
  }
}
 800b0a4:	4770      	bx	lr
    __HAL_I2C_DISABLE(hi2c);
 800b0a6:	6802      	ldr	r2, [r0, #0]
    hi2c->State = HAL_I2C_STATE_BUSY;
 800b0a8:	2024      	movs	r0, #36	; 0x24
 800b0aa:	f883 003d 	strb.w	r0, [r3, #61]	; 0x3d
    __HAL_I2C_DISABLE(hi2c);
 800b0ae:	6810      	ldr	r0, [r2, #0]
 800b0b0:	f020 0001 	bic.w	r0, r0, #1
 800b0b4:	6010      	str	r0, [r2, #0]
    hi2c->Instance->FLTR &= ~(I2C_FLTR_ANOFF);
 800b0b6:	6a50      	ldr	r0, [r2, #36]	; 0x24
 800b0b8:	f020 0010 	bic.w	r0, r0, #16
 800b0bc:	6250      	str	r0, [r2, #36]	; 0x24
    hi2c->Instance->FLTR |= AnalogFilter;
 800b0be:	6a50      	ldr	r0, [r2, #36]	; 0x24
 800b0c0:	4301      	orrs	r1, r0
 800b0c2:	6251      	str	r1, [r2, #36]	; 0x24
    __HAL_I2C_ENABLE(hi2c);
 800b0c4:	6811      	ldr	r1, [r2, #0]
 800b0c6:	f041 0101 	orr.w	r1, r1, #1
 800b0ca:	6011      	str	r1, [r2, #0]
    return HAL_OK;
 800b0cc:	2000      	movs	r0, #0
    hi2c->State = HAL_I2C_STATE_READY;
 800b0ce:	f883 c03d 	strb.w	ip, [r3, #61]	; 0x3d
    return HAL_OK;
 800b0d2:	4770      	bx	lr

0800b0d4 <HAL_I2CEx_ConfigDigitalFilter>:

  /* Check the parameters */
  assert_param(IS_I2C_ALL_INSTANCE(hi2c->Instance));
  assert_param(IS_I2C_DIGITAL_FILTER(DigitalFilter));

  if (hi2c->State == HAL_I2C_STATE_READY)
 800b0d4:	f890 203d 	ldrb.w	r2, [r0, #61]	; 0x3d
 800b0d8:	2a20      	cmp	r2, #32
 800b0da:	d001      	beq.n	800b0e0 <HAL_I2CEx_ConfigDigitalFilter+0xc>

    return HAL_OK;
  }
  else
  {
    return HAL_BUSY;
 800b0dc:	2002      	movs	r0, #2
  }
}
 800b0de:	4770      	bx	lr
{
 800b0e0:	b410      	push	{r4}
 800b0e2:	fa5f fc82 	uxtb.w	ip, r2
    __HAL_I2C_DISABLE(hi2c);
 800b0e6:	6804      	ldr	r4, [r0, #0]
    hi2c->State = HAL_I2C_STATE_BUSY;
 800b0e8:	2224      	movs	r2, #36	; 0x24
 800b0ea:	f880 203d 	strb.w	r2, [r0, #61]	; 0x3d
    __HAL_I2C_DISABLE(hi2c);
 800b0ee:	6822      	ldr	r2, [r4, #0]
 800b0f0:	f022 0201 	bic.w	r2, r2, #1
 800b0f4:	6022      	str	r2, [r4, #0]
    tmpreg = hi2c->Instance->FLTR;
 800b0f6:	4603      	mov	r3, r0
 800b0f8:	6a60      	ldr	r0, [r4, #36]	; 0x24
    tmpreg &= ~(I2C_FLTR_DNF);
 800b0fa:	f64f 72f0 	movw	r2, #65520	; 0xfff0
 800b0fe:	4002      	ands	r2, r0
    tmpreg |= DigitalFilter;
 800b100:	4311      	orrs	r1, r2
    hi2c->Instance->FLTR = tmpreg;
 800b102:	b289      	uxth	r1, r1
 800b104:	6261      	str	r1, [r4, #36]	; 0x24
    __HAL_I2C_ENABLE(hi2c);
 800b106:	6822      	ldr	r2, [r4, #0]
 800b108:	f042 0201 	orr.w	r2, r2, #1
 800b10c:	6022      	str	r2, [r4, #0]
    hi2c->State = HAL_I2C_STATE_READY;
 800b10e:	f883 c03d 	strb.w	ip, [r3, #61]	; 0x3d
    return HAL_OK;
 800b112:	2000      	movs	r0, #0
}
 800b114:	f85d 4b04 	ldr.w	r4, [sp], #4
 800b118:	4770      	bx	lr
 800b11a:	bf00      	nop

0800b11c <HAL_LTDC_Init>:
{
  uint32_t tmp;
  uint32_t tmp1;

  /* Check the LTDC peripheral state */
  if (hltdc == NULL)
 800b11c:	2800      	cmp	r0, #0
 800b11e:	d069      	beq.n	800b1f4 <HAL_LTDC_Init+0xd8>
{
 800b120:	b538      	push	{r3, r4, r5, lr}
    }
    /* Init the low level hardware */
    hltdc->MspInitCallback(hltdc);
  }
#else
  if (hltdc->State == HAL_LTDC_STATE_RESET)
 800b122:	f890 30a1 	ldrb.w	r3, [r0, #161]	; 0xa1
 800b126:	4604      	mov	r4, r0
 800b128:	f003 02ff 	and.w	r2, r3, #255	; 0xff
 800b12c:	2b00      	cmp	r3, #0
 800b12e:	d05c      	beq.n	800b1ea <HAL_LTDC_Init+0xce>
    HAL_LTDC_MspInit(hltdc);
  }
#endif /* USE_HAL_LTDC_REGISTER_CALLBACKS */

  /* Change LTDC peripheral state */
  hltdc->State = HAL_LTDC_STATE_BUSY;
 800b130:	2202      	movs	r2, #2

  /* Configure the HS, VS, DE and PC polarity */
  hltdc->Instance->GCR &= ~(LTDC_GCR_HSPOL | LTDC_GCR_VSPOL | LTDC_GCR_DEPOL | LTDC_GCR_PCPOL);
 800b132:	6823      	ldr	r3, [r4, #0]
  hltdc->State = HAL_LTDC_STATE_BUSY;
 800b134:	f884 20a1 	strb.w	r2, [r4, #161]	; 0xa1
  hltdc->Instance->GCR |= (uint32_t)(hltdc->Init.HSPolarity | hltdc->Init.VSPolarity | \
 800b138:	e9d4 2001 	ldrd	r2, r0, [r4, #4]
  hltdc->Instance->GCR &= ~(LTDC_GCR_HSPOL | LTDC_GCR_VSPOL | LTDC_GCR_DEPOL | LTDC_GCR_PCPOL);
 800b13c:	6999      	ldr	r1, [r3, #24]
  hltdc->Instance->GCR |= (uint32_t)(hltdc->Init.HSPolarity | hltdc->Init.VSPolarity | \
 800b13e:	4302      	orrs	r2, r0
                                     hltdc->Init.DEPolarity | hltdc->Init.PCPolarity);
 800b140:	e9d4 5003 	ldrd	r5, r0, [r4, #12]
  hltdc->Instance->GCR &= ~(LTDC_GCR_HSPOL | LTDC_GCR_VSPOL | LTDC_GCR_DEPOL | LTDC_GCR_PCPOL);
 800b144:	f021 4170 	bic.w	r1, r1, #4026531840	; 0xf0000000
 800b148:	6199      	str	r1, [r3, #24]
  hltdc->Instance->GCR |= (uint32_t)(hltdc->Init.HSPolarity | hltdc->Init.VSPolarity | \
 800b14a:	6999      	ldr	r1, [r3, #24]
 800b14c:	432a      	orrs	r2, r5
                                     hltdc->Init.DEPolarity | hltdc->Init.PCPolarity);
 800b14e:	4302      	orrs	r2, r0
  hltdc->Instance->GCR |= (uint32_t)(hltdc->Init.HSPolarity | hltdc->Init.VSPolarity | \
 800b150:	430a      	orrs	r2, r1
 800b152:	619a      	str	r2, [r3, #24]

  /* Set Synchronization size */
  hltdc->Instance->SSCR &= ~(LTDC_SSCR_VSH | LTDC_SSCR_HSW);
 800b154:	689a      	ldr	r2, [r3, #8]
 800b156:	4928      	ldr	r1, [pc, #160]	; (800b1f8 <HAL_LTDC_Init+0xdc>)
  tmp = (hltdc->Init.HorizontalSync << 16U);
 800b158:	6960      	ldr	r0, [r4, #20]
  hltdc->Instance->SSCR &= ~(LTDC_SSCR_VSH | LTDC_SSCR_HSW);
 800b15a:	400a      	ands	r2, r1
 800b15c:	609a      	str	r2, [r3, #8]
  hltdc->Instance->SSCR |= (tmp | hltdc->Init.VerticalSync);
 800b15e:	689a      	ldr	r2, [r3, #8]
 800b160:	ea42 4200 	orr.w	r2, r2, r0, lsl #16
 800b164:	69a0      	ldr	r0, [r4, #24]
 800b166:	4302      	orrs	r2, r0
 800b168:	609a      	str	r2, [r3, #8]

  /* Set Accumulated Back porch */
  hltdc->Instance->BPCR &= ~(LTDC_BPCR_AVBP | LTDC_BPCR_AHBP);
 800b16a:	68da      	ldr	r2, [r3, #12]
  tmp = (hltdc->Init.AccumulatedHBP << 16U);
 800b16c:	69e0      	ldr	r0, [r4, #28]
  hltdc->Instance->BPCR &= ~(LTDC_BPCR_AVBP | LTDC_BPCR_AHBP);
 800b16e:	400a      	ands	r2, r1
 800b170:	60da      	str	r2, [r3, #12]
  hltdc->Instance->BPCR |= (tmp | hltdc->Init.AccumulatedVBP);
 800b172:	68da      	ldr	r2, [r3, #12]
 800b174:	ea42 4200 	orr.w	r2, r2, r0, lsl #16
 800b178:	6a20      	ldr	r0, [r4, #32]
 800b17a:	4302      	orrs	r2, r0
 800b17c:	60da      	str	r2, [r3, #12]

  /* Set Accumulated Active Width */
  hltdc->Instance->AWCR &= ~(LTDC_AWCR_AAH | LTDC_AWCR_AAW);
 800b17e:	691a      	ldr	r2, [r3, #16]
  tmp = (hltdc->Init.AccumulatedActiveW << 16U);
 800b180:	6a60      	ldr	r0, [r4, #36]	; 0x24
  hltdc->Instance->AWCR &= ~(LTDC_AWCR_AAH | LTDC_AWCR_AAW);
 800b182:	400a      	ands	r2, r1
 800b184:	611a      	str	r2, [r3, #16]
  hltdc->Instance->AWCR |= (tmp | hltdc->Init.AccumulatedActiveH);
 800b186:	691a      	ldr	r2, [r3, #16]
 800b188:	ea42 4200 	orr.w	r2, r2, r0, lsl #16
 800b18c:	6aa0      	ldr	r0, [r4, #40]	; 0x28
 800b18e:	4302      	orrs	r2, r0
 800b190:	611a      	str	r2, [r3, #16]

  /* Set Total Width */
  hltdc->Instance->TWCR &= ~(LTDC_TWCR_TOTALH | LTDC_TWCR_TOTALW);
 800b192:	695a      	ldr	r2, [r3, #20]
  tmp = (hltdc->Init.TotalWidth << 16U);
 800b194:	6ae0      	ldr	r0, [r4, #44]	; 0x2c
  hltdc->Instance->TWCR &= ~(LTDC_TWCR_TOTALH | LTDC_TWCR_TOTALW);
 800b196:	400a      	ands	r2, r1
 800b198:	615a      	str	r2, [r3, #20]
  hltdc->Instance->TWCR |= (tmp | hltdc->Init.TotalHeigh);
 800b19a:	695a      	ldr	r2, [r3, #20]
 800b19c:	6b21      	ldr	r1, [r4, #48]	; 0x30
 800b19e:	ea42 4200 	orr.w	r2, r2, r0, lsl #16
 800b1a2:	430a      	orrs	r2, r1
 800b1a4:	615a      	str	r2, [r3, #20]

  /* Set the background color value */
  tmp = ((uint32_t)(hltdc->Init.Backcolor.Green) << 8U);
  tmp1 = ((uint32_t)(hltdc->Init.Backcolor.Red) << 16U);
  hltdc->Instance->BCCR &= ~(LTDC_BCCR_BCBLUE | LTDC_BCCR_BCGREEN | LTDC_BCCR_BCRED);
 800b1a6:	6ada      	ldr	r2, [r3, #44]	; 0x2c
  tmp = ((uint32_t)(hltdc->Init.Backcolor.Green) << 8U);
 800b1a8:	f894 0035 	ldrb.w	r0, [r4, #53]	; 0x35
  tmp1 = ((uint32_t)(hltdc->Init.Backcolor.Red) << 16U);
 800b1ac:	f894 1036 	ldrb.w	r1, [r4, #54]	; 0x36
  hltdc->Instance->BCCR &= ~(LTDC_BCCR_BCBLUE | LTDC_BCCR_BCGREEN | LTDC_BCCR_BCRED);
 800b1b0:	f002 427f 	and.w	r2, r2, #4278190080	; 0xff000000
 800b1b4:	62da      	str	r2, [r3, #44]	; 0x2c
  hltdc->Instance->BCCR |= (tmp1 | tmp | hltdc->Init.Backcolor.Blue);
 800b1b6:	6add      	ldr	r5, [r3, #44]	; 0x2c
 800b1b8:	f894 2034 	ldrb.w	r2, [r4, #52]	; 0x34
 800b1bc:	432a      	orrs	r2, r5
 800b1be:	ea42 2200 	orr.w	r2, r2, r0, lsl #8
 800b1c2:	ea42 4201 	orr.w	r2, r2, r1, lsl #16
 800b1c6:	62da      	str	r2, [r3, #44]	; 0x2c

  /* Enable the Transfer Error and FIFO underrun interrupts */
  __HAL_LTDC_ENABLE_IT(hltdc, LTDC_IT_TE | LTDC_IT_FU);
 800b1c8:	6b5a      	ldr	r2, [r3, #52]	; 0x34
 800b1ca:	f042 0206 	orr.w	r2, r2, #6
 800b1ce:	635a      	str	r2, [r3, #52]	; 0x34

  /* Enable LTDC by setting LTDCEN bit */
  __HAL_LTDC_ENABLE(hltdc);
 800b1d0:	699a      	ldr	r2, [r3, #24]

  /* Initialize the error code */
  hltdc->ErrorCode = HAL_LTDC_ERROR_NONE;

  /* Initialize the LTDC state*/
  hltdc->State = HAL_LTDC_STATE_READY;
 800b1d2:	f04f 0c01 	mov.w	ip, #1
  hltdc->ErrorCode = HAL_LTDC_ERROR_NONE;
 800b1d6:	2100      	movs	r1, #0
  __HAL_LTDC_ENABLE(hltdc);
 800b1d8:	ea42 020c 	orr.w	r2, r2, ip
 800b1dc:	619a      	str	r2, [r3, #24]
  hltdc->ErrorCode = HAL_LTDC_ERROR_NONE;
 800b1de:	f8c4 10a4 	str.w	r1, [r4, #164]	; 0xa4
  hltdc->State = HAL_LTDC_STATE_READY;
 800b1e2:	f884 c0a1 	strb.w	ip, [r4, #161]	; 0xa1

  return HAL_OK;
 800b1e6:	4608      	mov	r0, r1
}
 800b1e8:	bd38      	pop	{r3, r4, r5, pc}
    hltdc->Lock = HAL_UNLOCKED;
 800b1ea:	f880 20a0 	strb.w	r2, [r0, #160]	; 0xa0
    HAL_LTDC_MspInit(hltdc);
 800b1ee:	f7f6 fe9d 	bl	8001f2c <HAL_LTDC_MspInit>
 800b1f2:	e79d      	b.n	800b130 <HAL_LTDC_Init+0x14>
    return HAL_ERROR;
 800b1f4:	2001      	movs	r0, #1
}
 800b1f6:	4770      	bx	lr
 800b1f8:	f000f800 	.word	0xf000f800

0800b1fc <HAL_LTDC_ErrorCallback>:
 800b1fc:	4770      	bx	lr
 800b1fe:	bf00      	nop

0800b200 <HAL_LTDC_ReloadEventCallback>:
 800b200:	4770      	bx	lr
 800b202:	bf00      	nop

0800b204 <HAL_LTDC_IRQHandler>:
  *                the configuration information for the LTDC.
  * @retval HAL status
  */
void HAL_LTDC_IRQHandler(LTDC_HandleTypeDef *hltdc)
{
  uint32_t isrflags  = READ_REG(hltdc->Instance->ISR);
 800b204:	6803      	ldr	r3, [r0, #0]
{
 800b206:	b570      	push	{r4, r5, r6, lr}
  uint32_t isrflags  = READ_REG(hltdc->Instance->ISR);
 800b208:	6b9d      	ldr	r5, [r3, #56]	; 0x38
  uint32_t itsources = READ_REG(hltdc->Instance->IER);
 800b20a:	6b5e      	ldr	r6, [r3, #52]	; 0x34

  /* Transfer Error Interrupt management ***************************************/
  if (((isrflags & LTDC_ISR_TERRIF) != 0U) && ((itsources & LTDC_IER_TERRIE) != 0U))
 800b20c:	076a      	lsls	r2, r5, #29
{
 800b20e:	4604      	mov	r4, r0
  if (((isrflags & LTDC_ISR_TERRIF) != 0U) && ((itsources & LTDC_IER_TERRIE) != 0U))
 800b210:	d501      	bpl.n	800b216 <HAL_LTDC_IRQHandler+0x12>
 800b212:	0771      	lsls	r1, r6, #29
 800b214:	d41d      	bmi.n	800b252 <HAL_LTDC_IRQHandler+0x4e>
    HAL_LTDC_ErrorCallback(hltdc);
#endif /* USE_HAL_LTDC_REGISTER_CALLBACKS */
  }

  /* FIFO underrun Interrupt management ***************************************/
  if (((isrflags & LTDC_ISR_FUIF) != 0U) && ((itsources & LTDC_IER_FUIE) != 0U))
 800b216:	07aa      	lsls	r2, r5, #30
 800b218:	d501      	bpl.n	800b21e <HAL_LTDC_IRQHandler+0x1a>
 800b21a:	07b3      	lsls	r3, r6, #30
 800b21c:	d42d      	bmi.n	800b27a <HAL_LTDC_IRQHandler+0x76>
    HAL_LTDC_ErrorCallback(hltdc);
#endif /* USE_HAL_LTDC_REGISTER_CALLBACKS */
  }

  /* Line Interrupt management ************************************************/
  if (((isrflags & LTDC_ISR_LIF) != 0U) && ((itsources & LTDC_IER_LIE) != 0U))
 800b21e:	07e8      	lsls	r0, r5, #31
 800b220:	d501      	bpl.n	800b226 <HAL_LTDC_IRQHandler+0x22>
 800b222:	07f1      	lsls	r1, r6, #31
 800b224:	d440      	bmi.n	800b2a8 <HAL_LTDC_IRQHandler+0xa4>
    HAL_LTDC_LineEventCallback(hltdc);
#endif /* USE_HAL_LTDC_REGISTER_CALLBACKS */
  }

  /* Register reload Interrupt management ***************************************/
  if (((isrflags & LTDC_ISR_RRIF) != 0U) && ((itsources & LTDC_IER_RRIE) != 0U))
 800b226:	072a      	lsls	r2, r5, #28
 800b228:	d501      	bpl.n	800b22e <HAL_LTDC_IRQHandler+0x2a>
 800b22a:	0733      	lsls	r3, r6, #28
 800b22c:	d400      	bmi.n	800b230 <HAL_LTDC_IRQHandler+0x2c>
#else
    /*Call Legacy Reload Event callback */
    HAL_LTDC_ReloadEventCallback(hltdc);
#endif /* USE_HAL_LTDC_REGISTER_CALLBACKS */
  }
}
 800b22e:	bd70      	pop	{r4, r5, r6, pc}
    __HAL_LTDC_DISABLE_IT(hltdc, LTDC_IT_RR);
 800b230:	6823      	ldr	r3, [r4, #0]
 800b232:	6b5a      	ldr	r2, [r3, #52]	; 0x34
    __HAL_LTDC_CLEAR_FLAG(hltdc, LTDC_FLAG_RR);
 800b234:	2008      	movs	r0, #8
    __HAL_LTDC_DISABLE_IT(hltdc, LTDC_IT_RR);
 800b236:	f022 0208 	bic.w	r2, r2, #8
 800b23a:	635a      	str	r2, [r3, #52]	; 0x34
    hltdc->State = HAL_LTDC_STATE_READY;
 800b23c:	2101      	movs	r1, #1
    __HAL_LTDC_CLEAR_FLAG(hltdc, LTDC_FLAG_RR);
 800b23e:	63d8      	str	r0, [r3, #60]	; 0x3c
    __HAL_UNLOCK(hltdc);
 800b240:	2300      	movs	r3, #0
    hltdc->State = HAL_LTDC_STATE_READY;
 800b242:	f884 10a1 	strb.w	r1, [r4, #161]	; 0xa1
    __HAL_UNLOCK(hltdc);
 800b246:	f884 30a0 	strb.w	r3, [r4, #160]	; 0xa0
    HAL_LTDC_ReloadEventCallback(hltdc);
 800b24a:	4620      	mov	r0, r4
 800b24c:	f7ff ffd8 	bl	800b200 <HAL_LTDC_ReloadEventCallback>
}
 800b250:	bd70      	pop	{r4, r5, r6, pc}
    __HAL_LTDC_DISABLE_IT(hltdc, LTDC_IT_TE);
 800b252:	6b5a      	ldr	r2, [r3, #52]	; 0x34
 800b254:	f022 0204 	bic.w	r2, r2, #4
 800b258:	635a      	str	r2, [r3, #52]	; 0x34
    __HAL_LTDC_CLEAR_FLAG(hltdc, LTDC_FLAG_TE);
 800b25a:	2204      	movs	r2, #4
 800b25c:	63da      	str	r2, [r3, #60]	; 0x3c
    hltdc->ErrorCode |= HAL_LTDC_ERROR_TE;
 800b25e:	f8d0 30a4 	ldr.w	r3, [r0, #164]	; 0xa4
 800b262:	f043 0301 	orr.w	r3, r3, #1
 800b266:	f8c0 30a4 	str.w	r3, [r0, #164]	; 0xa4
    __HAL_UNLOCK(hltdc);
 800b26a:	2300      	movs	r3, #0
    hltdc->State = HAL_LTDC_STATE_ERROR;
 800b26c:	f880 20a1 	strb.w	r2, [r0, #161]	; 0xa1
    __HAL_UNLOCK(hltdc);
 800b270:	f880 30a0 	strb.w	r3, [r0, #160]	; 0xa0
    HAL_LTDC_ErrorCallback(hltdc);
 800b274:	f7ff ffc2 	bl	800b1fc <HAL_LTDC_ErrorCallback>
 800b278:	e7cd      	b.n	800b216 <HAL_LTDC_IRQHandler+0x12>
    __HAL_LTDC_DISABLE_IT(hltdc, LTDC_IT_FU);
 800b27a:	6823      	ldr	r3, [r4, #0]
 800b27c:	6b5a      	ldr	r2, [r3, #52]	; 0x34
 800b27e:	f022 0202 	bic.w	r2, r2, #2
 800b282:	635a      	str	r2, [r3, #52]	; 0x34
    __HAL_LTDC_CLEAR_FLAG(hltdc, LTDC_FLAG_FU);
 800b284:	2202      	movs	r2, #2
 800b286:	63da      	str	r2, [r3, #60]	; 0x3c
    hltdc->ErrorCode |= HAL_LTDC_ERROR_FU;
 800b288:	f8d4 30a4 	ldr.w	r3, [r4, #164]	; 0xa4
 800b28c:	f043 0302 	orr.w	r3, r3, #2
 800b290:	f8c4 30a4 	str.w	r3, [r4, #164]	; 0xa4
    hltdc->State = HAL_LTDC_STATE_ERROR;
 800b294:	2204      	movs	r2, #4
    __HAL_UNLOCK(hltdc);
 800b296:	2300      	movs	r3, #0
    hltdc->State = HAL_LTDC_STATE_ERROR;
 800b298:	f884 20a1 	strb.w	r2, [r4, #161]	; 0xa1
    __HAL_UNLOCK(hltdc);
 800b29c:	f884 30a0 	strb.w	r3, [r4, #160]	; 0xa0
    HAL_LTDC_ErrorCallback(hltdc);
 800b2a0:	4620      	mov	r0, r4
 800b2a2:	f7ff ffab 	bl	800b1fc <HAL_LTDC_ErrorCallback>
 800b2a6:	e7ba      	b.n	800b21e <HAL_LTDC_IRQHandler+0x1a>
    __HAL_LTDC_DISABLE_IT(hltdc, LTDC_IT_LI);
 800b2a8:	6823      	ldr	r3, [r4, #0]
 800b2aa:	6b5a      	ldr	r2, [r3, #52]	; 0x34
 800b2ac:	f022 0201 	bic.w	r2, r2, #1
 800b2b0:	635a      	str	r2, [r3, #52]	; 0x34
    __HAL_LTDC_CLEAR_FLAG(hltdc, LTDC_FLAG_LI);
 800b2b2:	2201      	movs	r2, #1
 800b2b4:	63da      	str	r2, [r3, #60]	; 0x3c
    __HAL_UNLOCK(hltdc);
 800b2b6:	2300      	movs	r3, #0
    hltdc->State = HAL_LTDC_STATE_READY;
 800b2b8:	f884 20a1 	strb.w	r2, [r4, #161]	; 0xa1
    __HAL_UNLOCK(hltdc);
 800b2bc:	f884 30a0 	strb.w	r3, [r4, #160]	; 0xa0
    HAL_LTDC_LineEventCallback(hltdc);
 800b2c0:	4620      	mov	r0, r4
 800b2c2:	f7f5 ff35 	bl	8001130 <HAL_LTDC_LineEventCallback>
 800b2c6:	e7ae      	b.n	800b226 <HAL_LTDC_IRQHandler+0x22>

0800b2c8 <HAL_LTDC_ConfigLayer>:
  assert_param(IS_LTDC_BLENDING_FACTOR2(pLayerCfg->BlendingFactor2));
  assert_param(IS_LTDC_CFBLL(pLayerCfg->ImageWidth));
  assert_param(IS_LTDC_CFBLNBR(pLayerCfg->ImageHeight));

  /* Process locked */
  __HAL_LOCK(hltdc);
 800b2c8:	f890 30a0 	ldrb.w	r3, [r0, #160]	; 0xa0
 800b2cc:	2b01      	cmp	r3, #1
 800b2ce:	f000 80c2 	beq.w	800b456 <HAL_LTDC_ConfigLayer+0x18e>
{
 800b2d2:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}

  /* Change LTDC peripheral state */
  hltdc->State = HAL_LTDC_STATE_BUSY;

  /* Copy new layer configuration into handle structure */
  hltdc->LayerCfg[LayerIdx] = *pLayerCfg;
 800b2d6:	f04f 0e34 	mov.w	lr, #52	; 0x34
  uint32_t tmp;
  uint32_t tmp1;
  uint32_t tmp2;

  /* Configure the horizontal start and stop position */
  tmp = ((pLayerCfg->WindowX1 + ((hltdc->Instance->BPCR & LTDC_BPCR_AHBP) >> 16U)) << 16U);
 800b2da:	f8d0 9000 	ldr.w	r9, [r0]
  hltdc->LayerCfg[LayerIdx] = *pLayerCfg;
 800b2de:	fb0e 0e02 	mla	lr, lr, r2, r0
  hltdc->State = HAL_LTDC_STATE_BUSY;
 800b2e2:	2302      	movs	r3, #2
  LTDC_LAYER(hltdc, LayerIdx)->WHPCR &= ~(LTDC_LxWHPCR_WHSTPOS | LTDC_LxWHPCR_WHSPPOS);
 800b2e4:	01d2      	lsls	r2, r2, #7
  hltdc->State = HAL_LTDC_STATE_BUSY;
 800b2e6:	f880 30a1 	strb.w	r3, [r0, #161]	; 0xa1
  LTDC_LAYER(hltdc, LayerIdx)->WHPCR &= ~(LTDC_LxWHPCR_WHSTPOS | LTDC_LxWHPCR_WHSPPOS);
 800b2ea:	f102 0684 	add.w	r6, r2, #132	; 0x84
 800b2ee:	eb09 0c06 	add.w	ip, r9, r6
  tmp = ((pLayerCfg->WindowX1 + ((hltdc->Instance->BPCR & LTDC_BPCR_AHBP) >> 16U)) << 16U);
 800b2f2:	f8d9 300c 	ldr.w	r3, [r9, #12]
 800b2f6:	f3c3 4a0b 	ubfx	sl, r3, #16, #12
  LTDC_LAYER(hltdc, LayerIdx)->WHPCR &= ~(LTDC_LxWHPCR_WHSTPOS | LTDC_LxWHPCR_WHSPPOS);
 800b2fa:	f8dc 3004 	ldr.w	r3, [ip, #4]
{
 800b2fe:	b083      	sub	sp, #12
  LTDC_LAYER(hltdc, LayerIdx)->WHPCR &= ~(LTDC_LxWHPCR_WHSTPOS | LTDC_LxWHPCR_WHSPPOS);
 800b300:	f403 4370 	and.w	r3, r3, #61440	; 0xf000
  hltdc->LayerCfg[LayerIdx] = *pLayerCfg;
 800b304:	460c      	mov	r4, r1
 800b306:	460d      	mov	r5, r1
  LTDC_LAYER(hltdc, LayerIdx)->WHPCR &= ~(LTDC_LxWHPCR_WHSTPOS | LTDC_LxWHPCR_WHSPPOS);
 800b308:	9301      	str	r3, [sp, #4]
 800b30a:	4680      	mov	r8, r0
  hltdc->LayerCfg[LayerIdx] = *pLayerCfg;
 800b30c:	cc0f      	ldmia	r4!, {r0, r1, r2, r3}
 800b30e:	f10e 0e38 	add.w	lr, lr, #56	; 0x38
 800b312:	e8ae 000f 	stmia.w	lr!, {r0, r1, r2, r3}
 800b316:	cc0f      	ldmia	r4!, {r0, r1, r2, r3}
  tmp = ((pLayerCfg->WindowX1 + ((hltdc->Instance->BPCR & LTDC_BPCR_AHBP) >> 16U)) << 16U);
 800b318:	686f      	ldr	r7, [r5, #4]
  hltdc->LayerCfg[LayerIdx] = *pLayerCfg;
 800b31a:	e8ae 000f 	stmia.w	lr!, {r0, r1, r2, r3}
 800b31e:	cc0f      	ldmia	r4!, {r0, r1, r2, r3}
 800b320:	e8ae 000f 	stmia.w	lr!, {r0, r1, r2, r3}
 800b324:	6823      	ldr	r3, [r4, #0]
 800b326:	f8ce 3000 	str.w	r3, [lr]
  LTDC_LAYER(hltdc, LayerIdx)->WHPCR &= ~(LTDC_LxWHPCR_WHSTPOS | LTDC_LxWHPCR_WHSPPOS);
 800b32a:	9b01      	ldr	r3, [sp, #4]
 800b32c:	f8cc 3004 	str.w	r3, [ip, #4]
  LTDC_LAYER(hltdc, LayerIdx)->WHPCR = ((pLayerCfg->WindowX0 + \
                                         ((hltdc->Instance->BPCR & LTDC_BPCR_AHBP) >> 16U) + 1U) | tmp);
 800b330:	f8d9 300c 	ldr.w	r3, [r9, #12]
  LTDC_LAYER(hltdc, LayerIdx)->WHPCR = ((pLayerCfg->WindowX0 + \
 800b334:	682a      	ldr	r2, [r5, #0]

  /* Configure the vertical start and stop position */
  tmp = ((pLayerCfg->WindowY1 + (hltdc->Instance->BPCR & LTDC_BPCR_AVBP)) << 16U);
 800b336:	68e8      	ldr	r0, [r5, #12]
  LTDC_LAYER(hltdc, LayerIdx)->PFCR = (pLayerCfg->PixelFormat);

  /* Configure the default color values */
  tmp = ((uint32_t)(pLayerCfg->Backcolor.Green) << 8U);
  tmp1 = ((uint32_t)(pLayerCfg->Backcolor.Red) << 16U);
  tmp2 = (pLayerCfg->Alpha0 << 24U);
 800b338:	f8d5 e018 	ldr.w	lr, [r5, #24]
                                         ((hltdc->Instance->BPCR & LTDC_BPCR_AHBP) >> 16U) + 1U) | tmp);
 800b33c:	1c51      	adds	r1, r2, #1
 800b33e:	f3c3 430b 	ubfx	r3, r3, #16, #12
 800b342:	440b      	add	r3, r1
  tmp = ((pLayerCfg->WindowX1 + ((hltdc->Instance->BPCR & LTDC_BPCR_AHBP) >> 16U)) << 16U);
 800b344:	44ba      	add	sl, r7
                                         ((hltdc->Instance->BPCR & LTDC_BPCR_AHBP) >> 16U) + 1U) | tmp);
 800b346:	ea43 430a 	orr.w	r3, r3, sl, lsl #16
  LTDC_LAYER(hltdc, LayerIdx)->WHPCR = ((pLayerCfg->WindowX0 + \
 800b34a:	f8cc 3004 	str.w	r3, [ip, #4]
  tmp = ((pLayerCfg->WindowY1 + (hltdc->Instance->BPCR & LTDC_BPCR_AVBP)) << 16U);
 800b34e:	f8d9 100c 	ldr.w	r1, [r9, #12]
  LTDC_LAYER(hltdc, LayerIdx)->WVPCR &= ~(LTDC_LxWVPCR_WVSTPOS | LTDC_LxWVPCR_WVSPPOS);
 800b352:	f8dc 3008 	ldr.w	r3, [ip, #8]
 800b356:	f403 4370 	and.w	r3, r3, #61440	; 0xf000
 800b35a:	f8cc 3008 	str.w	r3, [ip, #8]
  tmp = ((pLayerCfg->WindowY1 + (hltdc->Instance->BPCR & LTDC_BPCR_AVBP)) << 16U);
 800b35e:	f3c1 010a 	ubfx	r1, r1, #0, #11
  LTDC_LAYER(hltdc, LayerIdx)->WVPCR  = ((pLayerCfg->WindowY0 + (hltdc->Instance->BPCR & LTDC_BPCR_AVBP) + 1U) | tmp);
 800b362:	68ab      	ldr	r3, [r5, #8]
  tmp = ((pLayerCfg->WindowY1 + (hltdc->Instance->BPCR & LTDC_BPCR_AVBP)) << 16U);
 800b364:	4401      	add	r1, r0
  LTDC_LAYER(hltdc, LayerIdx)->WVPCR  = ((pLayerCfg->WindowY0 + (hltdc->Instance->BPCR & LTDC_BPCR_AVBP) + 1U) | tmp);
 800b366:	f8d9 000c 	ldr.w	r0, [r9, #12]
 800b36a:	3301      	adds	r3, #1
 800b36c:	f3c0 000a 	ubfx	r0, r0, #0, #11
 800b370:	4403      	add	r3, r0
 800b372:	ea43 4301 	orr.w	r3, r3, r1, lsl #16
 800b376:	f8cc 3008 	str.w	r3, [ip, #8]
  LTDC_LAYER(hltdc, LayerIdx)->PFCR &= ~(LTDC_LxPFCR_PF);
 800b37a:	f8dc 3010 	ldr.w	r3, [ip, #16]
  LTDC_LAYER(hltdc, LayerIdx)->PFCR = (pLayerCfg->PixelFormat);
 800b37e:	6929      	ldr	r1, [r5, #16]
  LTDC_LAYER(hltdc, LayerIdx)->PFCR &= ~(LTDC_LxPFCR_PF);
 800b380:	f023 0307 	bic.w	r3, r3, #7
 800b384:	f8cc 3010 	str.w	r3, [ip, #16]
  LTDC_LAYER(hltdc, LayerIdx)->DCCR &= ~(LTDC_LxDCCR_DCBLUE | LTDC_LxDCCR_DCGREEN | LTDC_LxDCCR_DCRED |
 800b388:	f04f 0b00 	mov.w	fp, #0
  LTDC_LAYER(hltdc, LayerIdx)->PFCR = (pLayerCfg->PixelFormat);
 800b38c:	f8cc 1010 	str.w	r1, [ip, #16]
  LTDC_LAYER(hltdc, LayerIdx)->DCCR &= ~(LTDC_LxDCCR_DCBLUE | LTDC_LxDCCR_DCGREEN | LTDC_LxDCCR_DCRED |
 800b390:	f8dc 3018 	ldr.w	r3, [ip, #24]
  tmp1 = ((uint32_t)(pLayerCfg->Backcolor.Red) << 16U);
 800b394:	f895 0032 	ldrb.w	r0, [r5, #50]	; 0x32
  tmp = ((uint32_t)(pLayerCfg->Backcolor.Green) << 8U);
 800b398:	f895 4031 	ldrb.w	r4, [r5, #49]	; 0x31
  LTDC_LAYER(hltdc, LayerIdx)->DCCR &= ~(LTDC_LxDCCR_DCBLUE | LTDC_LxDCCR_DCGREEN | LTDC_LxDCCR_DCRED |
 800b39c:	f8cc b018 	str.w	fp, [ip, #24]
                                         LTDC_LxDCCR_DCALPHA);
  LTDC_LAYER(hltdc, LayerIdx)->DCCR = (pLayerCfg->Backcolor.Blue | tmp | tmp1 | tmp2);
 800b3a0:	f895 3030 	ldrb.w	r3, [r5, #48]	; 0x30
 800b3a4:	ea43 630e 	orr.w	r3, r3, lr, lsl #24
 800b3a8:	ea43 2304 	orr.w	r3, r3, r4, lsl #8
 800b3ac:	ea43 4300 	orr.w	r3, r3, r0, lsl #16
 800b3b0:	f8cc 3018 	str.w	r3, [ip, #24]

  /* Specifies the constant alpha value */
  LTDC_LAYER(hltdc, LayerIdx)->CACR &= ~(LTDC_LxCACR_CONSTA);
 800b3b4:	f8dc 3014 	ldr.w	r3, [ip, #20]
 800b3b8:	f023 03ff 	bic.w	r3, r3, #255	; 0xff
 800b3bc:	f8cc 3014 	str.w	r3, [ip, #20]
  LTDC_LAYER(hltdc, LayerIdx)->CACR = (pLayerCfg->Alpha);
 800b3c0:	696b      	ldr	r3, [r5, #20]
 800b3c2:	f8cc 3014 	str.w	r3, [ip, #20]

  /* Specifies the blending factors */
  LTDC_LAYER(hltdc, LayerIdx)->BFCR &= ~(LTDC_LxBFCR_BF2 | LTDC_LxBFCR_BF1);
 800b3c6:	f8dc 301c 	ldr.w	r3, [ip, #28]
 800b3ca:	f423 63e0 	bic.w	r3, r3, #1792	; 0x700
 800b3ce:	f023 0307 	bic.w	r3, r3, #7
 800b3d2:	f8cc 301c 	str.w	r3, [ip, #28]
  LTDC_LAYER(hltdc, LayerIdx)->BFCR = (pLayerCfg->BlendingFactor1 | pLayerCfg->BlendingFactor2);
 800b3d6:	e9d5 3007 	ldrd	r3, r0, [r5, #28]
 800b3da:	4303      	orrs	r3, r0
 800b3dc:	f8cc 301c 	str.w	r3, [ip, #28]

  /* Configure the color frame buffer start address */
  LTDC_LAYER(hltdc, LayerIdx)->CFBAR &= ~(LTDC_LxCFBAR_CFBADD);
 800b3e0:	f8dc 3028 	ldr.w	r3, [ip, #40]	; 0x28
  LTDC_LAYER(hltdc, LayerIdx)->CFBAR = (pLayerCfg->FBStartAdress);
 800b3e4:	6a6b      	ldr	r3, [r5, #36]	; 0x24
  LTDC_LAYER(hltdc, LayerIdx)->CFBAR &= ~(LTDC_LxCFBAR_CFBADD);
 800b3e6:	f8cc b028 	str.w	fp, [ip, #40]	; 0x28
  LTDC_LAYER(hltdc, LayerIdx)->CFBAR = (pLayerCfg->FBStartAdress);
 800b3ea:	f8cc 3028 	str.w	r3, [ip, #40]	; 0x28

  if (pLayerCfg->PixelFormat == LTDC_PIXEL_FORMAT_ARGB8888)
 800b3ee:	bb69      	cbnz	r1, 800b44c <HAL_LTDC_ConfigLayer+0x184>
  {
    tmp = 4U;
 800b3f0:	2304      	movs	r3, #4
  }

  /* Configure the color frame buffer pitch in byte */
  LTDC_LAYER(hltdc, LayerIdx)->CFBLR  &= ~(LTDC_LxCFBLR_CFBLL | LTDC_LxCFBLR_CFBP);
  LTDC_LAYER(hltdc, LayerIdx)->CFBLR  = (((pLayerCfg->ImageWidth * tmp) << 16U) | \
                                         (((pLayerCfg->WindowX1 - pLayerCfg->WindowX0) * tmp)  + 3U));
 800b3f2:	1abf      	subs	r7, r7, r2
  LTDC_LAYER(hltdc, LayerIdx)->CFBLR  = (((pLayerCfg->ImageWidth * tmp) << 16U) | \
 800b3f4:	6aaa      	ldr	r2, [r5, #40]	; 0x28
                                         (((pLayerCfg->WindowX1 - pLayerCfg->WindowX0) * tmp)  + 3U));
 800b3f6:	fb03 f707 	mul.w	r7, r3, r7
 800b3fa:	3703      	adds	r7, #3
  LTDC_LAYER(hltdc, LayerIdx)->CFBLR  = (((pLayerCfg->ImageWidth * tmp) << 16U) | \
 800b3fc:	fb02 f303 	mul.w	r3, r2, r3
 800b400:	ea47 4703 	orr.w	r7, r7, r3, lsl #16
  LTDC_LAYER(hltdc, LayerIdx)->CFBLR  &= ~(LTDC_LxCFBLR_CFBLL | LTDC_LxCFBLR_CFBP);
 800b404:	f8dc 302c 	ldr.w	r3, [ip, #44]	; 0x2c
  /* Configure the frame buffer line number */
  LTDC_LAYER(hltdc, LayerIdx)->CFBLNR  &= ~(LTDC_LxCFBLNR_CFBLNBR);
  LTDC_LAYER(hltdc, LayerIdx)->CFBLNR  = (pLayerCfg->ImageHeight);
 800b408:	6aea      	ldr	r2, [r5, #44]	; 0x2c
  LTDC_LAYER(hltdc, LayerIdx)->CFBLR  &= ~(LTDC_LxCFBLR_CFBLL | LTDC_LxCFBLR_CFBP);
 800b40a:	f003 23e0 	and.w	r3, r3, #3758153728	; 0xe000e000
 800b40e:	f8cc 302c 	str.w	r3, [ip, #44]	; 0x2c
  LTDC_LAYER(hltdc, LayerIdx)->CFBLR  = (((pLayerCfg->ImageWidth * tmp) << 16U) | \
 800b412:	f8cc 702c 	str.w	r7, [ip, #44]	; 0x2c
  LTDC_LAYER(hltdc, LayerIdx)->CFBLNR  &= ~(LTDC_LxCFBLNR_CFBLNBR);
 800b416:	f8dc 3030 	ldr.w	r3, [ip, #48]	; 0x30
 800b41a:	f423 63ff 	bic.w	r3, r3, #2040	; 0x7f8
 800b41e:	f023 0307 	bic.w	r3, r3, #7
 800b422:	f8cc 3030 	str.w	r3, [ip, #48]	; 0x30
  LTDC_LAYER(hltdc, LayerIdx)->CFBLNR  = (pLayerCfg->ImageHeight);
 800b426:	f8cc 2030 	str.w	r2, [ip, #48]	; 0x30

  /* Enable LTDC_Layer by setting LEN bit */
  LTDC_LAYER(hltdc, LayerIdx)->CR |= (uint32_t)LTDC_LxCR_LEN;
 800b42a:	f859 3006 	ldr.w	r3, [r9, r6]
  hltdc->Instance->SRCR = LTDC_SRCR_IMR;
 800b42e:	2201      	movs	r2, #1
  LTDC_LAYER(hltdc, LayerIdx)->CR |= (uint32_t)LTDC_LxCR_LEN;
 800b430:	4313      	orrs	r3, r2
 800b432:	f849 3006 	str.w	r3, [r9, r6]
  __HAL_UNLOCK(hltdc);
 800b436:	2300      	movs	r3, #0
  return HAL_OK;
 800b438:	4618      	mov	r0, r3
  hltdc->Instance->SRCR = LTDC_SRCR_IMR;
 800b43a:	f8c9 2024 	str.w	r2, [r9, #36]	; 0x24
  hltdc->State  = HAL_LTDC_STATE_READY;
 800b43e:	f888 20a1 	strb.w	r2, [r8, #161]	; 0xa1
  __HAL_UNLOCK(hltdc);
 800b442:	f888 30a0 	strb.w	r3, [r8, #160]	; 0xa0
}
 800b446:	b003      	add	sp, #12
 800b448:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
  else if (pLayerCfg->PixelFormat == LTDC_PIXEL_FORMAT_RGB888)
 800b44c:	3901      	subs	r1, #1
 800b44e:	2906      	cmp	r1, #6
 800b450:	d903      	bls.n	800b45a <HAL_LTDC_ConfigLayer+0x192>
  if (pLayerCfg->PixelFormat == LTDC_PIXEL_FORMAT_ARGB8888)
 800b452:	2301      	movs	r3, #1
 800b454:	e7cd      	b.n	800b3f2 <HAL_LTDC_ConfigLayer+0x12a>
  __HAL_LOCK(hltdc);
 800b456:	2002      	movs	r0, #2
}
 800b458:	4770      	bx	lr
 800b45a:	4b02      	ldr	r3, [pc, #8]	; (800b464 <HAL_LTDC_ConfigLayer+0x19c>)
 800b45c:	f853 3021 	ldr.w	r3, [r3, r1, lsl #2]
 800b460:	e7c7      	b.n	800b3f2 <HAL_LTDC_ConfigLayer+0x12a>
 800b462:	bf00      	nop
 800b464:	0802e070 	.word	0x0802e070

0800b468 <HAL_LTDC_ProgramLineEvent>:
  __HAL_LOCK(hltdc);
 800b468:	f890 30a0 	ldrb.w	r3, [r0, #160]	; 0xa0
 800b46c:	2b01      	cmp	r3, #1
 800b46e:	d019      	beq.n	800b4a4 <HAL_LTDC_ProgramLineEvent+0x3c>
  __HAL_LTDC_DISABLE_IT(hltdc, LTDC_IT_LI);
 800b470:	6802      	ldr	r2, [r0, #0]
  hltdc->State = HAL_LTDC_STATE_BUSY;
 800b472:	2302      	movs	r3, #2
{
 800b474:	b410      	push	{r4}
  hltdc->State = HAL_LTDC_STATE_BUSY;
 800b476:	f880 30a1 	strb.w	r3, [r0, #161]	; 0xa1
  __HAL_LTDC_DISABLE_IT(hltdc, LTDC_IT_LI);
 800b47a:	6b53      	ldr	r3, [r2, #52]	; 0x34
  LTDC->LIPCR = (uint32_t)Line;
 800b47c:	4c0a      	ldr	r4, [pc, #40]	; (800b4a8 <HAL_LTDC_ProgramLineEvent+0x40>)
  __HAL_LTDC_DISABLE_IT(hltdc, LTDC_IT_LI);
 800b47e:	f023 0301 	bic.w	r3, r3, #1
 800b482:	6353      	str	r3, [r2, #52]	; 0x34
  LTDC->LIPCR = (uint32_t)Line;
 800b484:	6421      	str	r1, [r4, #64]	; 0x40
  __HAL_LTDC_ENABLE_IT(hltdc, LTDC_IT_LI);
 800b486:	6b51      	ldr	r1, [r2, #52]	; 0x34
  __HAL_UNLOCK(hltdc);
 800b488:	2300      	movs	r3, #0
  __HAL_LTDC_ENABLE_IT(hltdc, LTDC_IT_LI);
 800b48a:	f041 0101 	orr.w	r1, r1, #1
  hltdc->State = HAL_LTDC_STATE_READY;
 800b48e:	f04f 0c01 	mov.w	ip, #1
  __HAL_LTDC_ENABLE_IT(hltdc, LTDC_IT_LI);
 800b492:	6351      	str	r1, [r2, #52]	; 0x34
  hltdc->State = HAL_LTDC_STATE_READY;
 800b494:	f880 c0a1 	strb.w	ip, [r0, #161]	; 0xa1
  __HAL_UNLOCK(hltdc);
 800b498:	f880 30a0 	strb.w	r3, [r0, #160]	; 0xa0
}
 800b49c:	f85d 4b04 	ldr.w	r4, [sp], #4
  return HAL_OK;
 800b4a0:	4618      	mov	r0, r3
}
 800b4a2:	4770      	bx	lr
  __HAL_LOCK(hltdc);
 800b4a4:	2002      	movs	r0, #2
}
 800b4a6:	4770      	bx	lr
 800b4a8:	40016800 	.word	0x40016800

0800b4ac <HAL_RCC_OscConfig>:
__weak HAL_StatusTypeDef HAL_RCC_OscConfig(RCC_OscInitTypeDef  *RCC_OscInitStruct)
{
  uint32_t tickstart, pll_config;

  /* Check Null pointer */
  if(RCC_OscInitStruct == NULL)
 800b4ac:	2800      	cmp	r0, #0
 800b4ae:	f000 81a2 	beq.w	800b7f6 <HAL_RCC_OscConfig+0x34a>
{
 800b4b2:	e92d 41f0 	stmdb	sp!, {r4, r5, r6, r7, r8, lr}
  }

  /* Check the parameters */
  assert_param(IS_RCC_OSCILLATORTYPE(RCC_OscInitStruct->OscillatorType));
  /*------------------------------- HSE Configuration ------------------------*/
  if(((RCC_OscInitStruct->OscillatorType) & RCC_OSCILLATORTYPE_HSE) == RCC_OSCILLATORTYPE_HSE)
 800b4b6:	6803      	ldr	r3, [r0, #0]
 800b4b8:	07dd      	lsls	r5, r3, #31
{
 800b4ba:	b082      	sub	sp, #8
 800b4bc:	4604      	mov	r4, r0
  if(((RCC_OscInitStruct->OscillatorType) & RCC_OSCILLATORTYPE_HSE) == RCC_OSCILLATORTYPE_HSE)
 800b4be:	d52f      	bpl.n	800b520 <HAL_RCC_OscConfig+0x74>
  {
    /* Check the parameters */
    assert_param(IS_RCC_HSE(RCC_OscInitStruct->HSEState));
    /* When the HSE is used as system clock or clock source for PLL in these cases HSE will not disabled */
    if((__HAL_RCC_GET_SYSCLK_SOURCE() == RCC_CFGR_SWS_HSE) ||\
 800b4c0:	499e      	ldr	r1, [pc, #632]	; (800b73c <HAL_RCC_OscConfig+0x290>)
 800b4c2:	688a      	ldr	r2, [r1, #8]
 800b4c4:	f002 020c 	and.w	r2, r2, #12
 800b4c8:	2a04      	cmp	r2, #4
 800b4ca:	f000 80ed 	beq.w	800b6a8 <HAL_RCC_OscConfig+0x1fc>
      ((__HAL_RCC_GET_SYSCLK_SOURCE() == RCC_CFGR_SWS_PLL) && ((RCC->PLLCFGR & RCC_PLLCFGR_PLLSRC) == RCC_PLLCFGR_PLLSRC_HSE)))
 800b4ce:	688a      	ldr	r2, [r1, #8]
 800b4d0:	f002 020c 	and.w	r2, r2, #12
    if((__HAL_RCC_GET_SYSCLK_SOURCE() == RCC_CFGR_SWS_HSE) ||\
 800b4d4:	2a08      	cmp	r2, #8
 800b4d6:	f000 80e3 	beq.w	800b6a0 <HAL_RCC_OscConfig+0x1f4>
      }
    }
    else
    {
      /* Set the new HSE configuration ---------------------------------------*/
      __HAL_RCC_HSE_CONFIG(RCC_OscInitStruct->HSEState);
 800b4da:	6863      	ldr	r3, [r4, #4]
 800b4dc:	f5b3 3f80 	cmp.w	r3, #65536	; 0x10000
 800b4e0:	f000 80ec 	beq.w	800b6bc <HAL_RCC_OscConfig+0x210>
 800b4e4:	f5b3 2fa0 	cmp.w	r3, #327680	; 0x50000
 800b4e8:	f000 8175 	beq.w	800b7d6 <HAL_RCC_OscConfig+0x32a>
 800b4ec:	4d93      	ldr	r5, [pc, #588]	; (800b73c <HAL_RCC_OscConfig+0x290>)
 800b4ee:	682a      	ldr	r2, [r5, #0]
 800b4f0:	f422 3280 	bic.w	r2, r2, #65536	; 0x10000
 800b4f4:	602a      	str	r2, [r5, #0]
 800b4f6:	682a      	ldr	r2, [r5, #0]
 800b4f8:	f422 2280 	bic.w	r2, r2, #262144	; 0x40000
 800b4fc:	602a      	str	r2, [r5, #0]

      /* Check the HSE State */
      if((RCC_OscInitStruct->HSEState) != RCC_HSE_OFF)
 800b4fe:	2b00      	cmp	r3, #0
 800b500:	f040 80e1 	bne.w	800b6c6 <HAL_RCC_OscConfig+0x21a>
        }
      }
      else
      {
        /* Get Start Tick */
        tickstart = HAL_GetTick();
 800b504:	f7fd fdbe 	bl	8009084 <HAL_GetTick>
 800b508:	4606      	mov	r6, r0

        /* Wait till HSE is bypassed or disabled */
        while(__HAL_RCC_GET_FLAG(RCC_FLAG_HSERDY) != RESET)
 800b50a:	e005      	b.n	800b518 <HAL_RCC_OscConfig+0x6c>
        {
          if((HAL_GetTick() - tickstart ) > HSE_TIMEOUT_VALUE)
 800b50c:	f7fd fdba 	bl	8009084 <HAL_GetTick>
 800b510:	1b80      	subs	r0, r0, r6
 800b512:	2864      	cmp	r0, #100	; 0x64
 800b514:	f200 8101 	bhi.w	800b71a <HAL_RCC_OscConfig+0x26e>
        while(__HAL_RCC_GET_FLAG(RCC_FLAG_HSERDY) != RESET)
 800b518:	682b      	ldr	r3, [r5, #0]
 800b51a:	039b      	lsls	r3, r3, #14
 800b51c:	d4f6      	bmi.n	800b50c <HAL_RCC_OscConfig+0x60>
        }
      }
    }
  }
  /*----------------------------- HSI Configuration --------------------------*/
  if(((RCC_OscInitStruct->OscillatorType) & RCC_OSCILLATORTYPE_HSI) == RCC_OSCILLATORTYPE_HSI)
 800b51e:	6823      	ldr	r3, [r4, #0]
 800b520:	079f      	lsls	r7, r3, #30
 800b522:	d528      	bpl.n	800b576 <HAL_RCC_OscConfig+0xca>
    /* Check the parameters */
    assert_param(IS_RCC_HSI(RCC_OscInitStruct->HSIState));
    assert_param(IS_RCC_CALIBRATION_VALUE(RCC_OscInitStruct->HSICalibrationValue));

    /* Check if HSI is used as system clock or as PLL source when PLL is selected as system clock */
    if((__HAL_RCC_GET_SYSCLK_SOURCE() == RCC_CFGR_SWS_HSI) ||\
 800b524:	4a85      	ldr	r2, [pc, #532]	; (800b73c <HAL_RCC_OscConfig+0x290>)
 800b526:	6891      	ldr	r1, [r2, #8]
 800b528:	f011 0f0c 	tst.w	r1, #12
 800b52c:	f000 8090 	beq.w	800b650 <HAL_RCC_OscConfig+0x1a4>
      ((__HAL_RCC_GET_SYSCLK_SOURCE() == RCC_CFGR_SWS_PLL) && ((RCC->PLLCFGR & RCC_PLLCFGR_PLLSRC) == RCC_PLLCFGR_PLLSRC_HSI)))
 800b530:	6891      	ldr	r1, [r2, #8]
 800b532:	f001 010c 	and.w	r1, r1, #12
    if((__HAL_RCC_GET_SYSCLK_SOURCE() == RCC_CFGR_SWS_HSI) ||\
 800b536:	2908      	cmp	r1, #8
 800b538:	f000 8086 	beq.w	800b648 <HAL_RCC_OscConfig+0x19c>
      }
    }
    else
    {
      /* Check the HSI State */
      if((RCC_OscInitStruct->HSIState)!= RCC_HSI_OFF)
 800b53c:	68e3      	ldr	r3, [r4, #12]
 800b53e:	2b00      	cmp	r3, #0
 800b540:	f000 810e 	beq.w	800b760 <HAL_RCC_OscConfig+0x2b4>
      {
        /* Enable the Internal High Speed oscillator (HSI). */
        __HAL_RCC_HSI_ENABLE();
 800b544:	4b7e      	ldr	r3, [pc, #504]	; (800b740 <HAL_RCC_OscConfig+0x294>)

        /* Get Start Tick*/
        tickstart = HAL_GetTick();

        /* Wait till HSI is ready */
        while(__HAL_RCC_GET_FLAG(RCC_FLAG_HSIRDY) == RESET)
 800b546:	4e7d      	ldr	r6, [pc, #500]	; (800b73c <HAL_RCC_OscConfig+0x290>)
        __HAL_RCC_HSI_ENABLE();
 800b548:	2201      	movs	r2, #1
 800b54a:	601a      	str	r2, [r3, #0]
        tickstart = HAL_GetTick();
 800b54c:	f7fd fd9a 	bl	8009084 <HAL_GetTick>
 800b550:	4605      	mov	r5, r0
        while(__HAL_RCC_GET_FLAG(RCC_FLAG_HSIRDY) == RESET)
 800b552:	e005      	b.n	800b560 <HAL_RCC_OscConfig+0xb4>
        {
          if((HAL_GetTick() - tickstart ) > HSI_TIMEOUT_VALUE)
 800b554:	f7fd fd96 	bl	8009084 <HAL_GetTick>
 800b558:	1b40      	subs	r0, r0, r5
 800b55a:	2802      	cmp	r0, #2
 800b55c:	f200 80dd 	bhi.w	800b71a <HAL_RCC_OscConfig+0x26e>
        while(__HAL_RCC_GET_FLAG(RCC_FLAG_HSIRDY) == RESET)
 800b560:	6833      	ldr	r3, [r6, #0]
 800b562:	0798      	lsls	r0, r3, #30
 800b564:	d5f6      	bpl.n	800b554 <HAL_RCC_OscConfig+0xa8>
            return HAL_TIMEOUT;
          }
        }

        /* Adjusts the Internal High Speed oscillator (HSI) calibration value. */
        __HAL_RCC_HSI_CALIBRATIONVALUE_ADJUST(RCC_OscInitStruct->HSICalibrationValue);
 800b566:	6833      	ldr	r3, [r6, #0]
 800b568:	6922      	ldr	r2, [r4, #16]
 800b56a:	f023 03f8 	bic.w	r3, r3, #248	; 0xf8
 800b56e:	ea43 03c2 	orr.w	r3, r3, r2, lsl #3
 800b572:	6033      	str	r3, [r6, #0]
        }
      }
    }
  }
  /*------------------------------ LSI Configuration -------------------------*/
  if(((RCC_OscInitStruct->OscillatorType) & RCC_OSCILLATORTYPE_LSI) == RCC_OSCILLATORTYPE_LSI)
 800b574:	6823      	ldr	r3, [r4, #0]
 800b576:	071a      	lsls	r2, r3, #28
 800b578:	d451      	bmi.n	800b61e <HAL_RCC_OscConfig+0x172>
        }
      }
    }
  }
  /*------------------------------ LSE Configuration -------------------------*/
  if(((RCC_OscInitStruct->OscillatorType) & RCC_OSCILLATORTYPE_LSE) == RCC_OSCILLATORTYPE_LSE)
 800b57a:	0758      	lsls	r0, r3, #29
 800b57c:	d52f      	bpl.n	800b5de <HAL_RCC_OscConfig+0x132>
    /* Check the parameters */
    assert_param(IS_RCC_LSE(RCC_OscInitStruct->LSEState));

    /* Update LSE configuration in Backup Domain control register    */
    /* Requires to enable write access to Backup Domain of necessary */
    if(__HAL_RCC_PWR_IS_CLK_DISABLED())
 800b57e:	4a6f      	ldr	r2, [pc, #444]	; (800b73c <HAL_RCC_OscConfig+0x290>)
 800b580:	6c13      	ldr	r3, [r2, #64]	; 0x40
 800b582:	f013 5380 	ands.w	r3, r3, #268435456	; 0x10000000
 800b586:	d07f      	beq.n	800b688 <HAL_RCC_OscConfig+0x1dc>
    FlagStatus       pwrclkchanged = RESET;
 800b588:	2500      	movs	r5, #0
    {
      __HAL_RCC_PWR_CLK_ENABLE();
      pwrclkchanged = SET;
    }

    if(HAL_IS_BIT_CLR(PWR->CR, PWR_CR_DBP))
 800b58a:	4e6e      	ldr	r6, [pc, #440]	; (800b744 <HAL_RCC_OscConfig+0x298>)
 800b58c:	6833      	ldr	r3, [r6, #0]
 800b58e:	05d9      	lsls	r1, r3, #23
 800b590:	f140 80b3 	bpl.w	800b6fa <HAL_RCC_OscConfig+0x24e>
        }
      }
    }

    /* Set the new LSE configuration -----------------------------------------*/
    __HAL_RCC_LSE_CONFIG(RCC_OscInitStruct->LSEState);
 800b594:	68a3      	ldr	r3, [r4, #8]
 800b596:	2b01      	cmp	r3, #1
 800b598:	f000 80c3 	beq.w	800b722 <HAL_RCC_OscConfig+0x276>
 800b59c:	2b05      	cmp	r3, #5
 800b59e:	f000 812c 	beq.w	800b7fa <HAL_RCC_OscConfig+0x34e>
 800b5a2:	4e66      	ldr	r6, [pc, #408]	; (800b73c <HAL_RCC_OscConfig+0x290>)
 800b5a4:	6f32      	ldr	r2, [r6, #112]	; 0x70
 800b5a6:	f022 0201 	bic.w	r2, r2, #1
 800b5aa:	6732      	str	r2, [r6, #112]	; 0x70
 800b5ac:	6f32      	ldr	r2, [r6, #112]	; 0x70
 800b5ae:	f022 0204 	bic.w	r2, r2, #4
 800b5b2:	6732      	str	r2, [r6, #112]	; 0x70
    /* Check the LSE State */
    if((RCC_OscInitStruct->LSEState) != RCC_LSE_OFF)
 800b5b4:	2b00      	cmp	r3, #0
 800b5b6:	f040 80b9 	bne.w	800b72c <HAL_RCC_OscConfig+0x280>
      }
    }
    else
    {
      /* Get Start Tick */
      tickstart = HAL_GetTick();
 800b5ba:	f7fd fd63 	bl	8009084 <HAL_GetTick>

      /* Wait till LSE is ready */
      while(__HAL_RCC_GET_FLAG(RCC_FLAG_LSERDY) != RESET)
      {
        if((HAL_GetTick() - tickstart ) > RCC_LSE_TIMEOUT_VALUE)
 800b5be:	f241 3888 	movw	r8, #5000	; 0x1388
      tickstart = HAL_GetTick();
 800b5c2:	4607      	mov	r7, r0
      while(__HAL_RCC_GET_FLAG(RCC_FLAG_LSERDY) != RESET)
 800b5c4:	e005      	b.n	800b5d2 <HAL_RCC_OscConfig+0x126>
        if((HAL_GetTick() - tickstart ) > RCC_LSE_TIMEOUT_VALUE)
 800b5c6:	f7fd fd5d 	bl	8009084 <HAL_GetTick>
 800b5ca:	1bc0      	subs	r0, r0, r7
 800b5cc:	4540      	cmp	r0, r8
 800b5ce:	f200 80a4 	bhi.w	800b71a <HAL_RCC_OscConfig+0x26e>
      while(__HAL_RCC_GET_FLAG(RCC_FLAG_LSERDY) != RESET)
 800b5d2:	6f33      	ldr	r3, [r6, #112]	; 0x70
 800b5d4:	0798      	lsls	r0, r3, #30
 800b5d6:	d4f6      	bmi.n	800b5c6 <HAL_RCC_OscConfig+0x11a>
        }
      }
    }

    /* Restore clock configuration if changed */
    if(pwrclkchanged == SET)
 800b5d8:	2d00      	cmp	r5, #0
 800b5da:	f040 8106 	bne.w	800b7ea <HAL_RCC_OscConfig+0x33e>
    }
  }
  /*-------------------------------- PLL Configuration -----------------------*/
  /* Check the parameters */
  assert_param(IS_RCC_PLL(RCC_OscInitStruct->PLL.PLLState));
  if ((RCC_OscInitStruct->PLL.PLLState) != RCC_PLL_NONE)
 800b5de:	69a0      	ldr	r0, [r4, #24]
 800b5e0:	b1c8      	cbz	r0, 800b616 <HAL_RCC_OscConfig+0x16a>
  {
    /* Check if the PLL is used as system clock or not */
    if(__HAL_RCC_GET_SYSCLK_SOURCE() != RCC_CFGR_SWS_PLL)
 800b5e2:	4d56      	ldr	r5, [pc, #344]	; (800b73c <HAL_RCC_OscConfig+0x290>)
 800b5e4:	68ab      	ldr	r3, [r5, #8]
 800b5e6:	f003 030c 	and.w	r3, r3, #12
 800b5ea:	2b08      	cmp	r3, #8
 800b5ec:	f000 80c9 	beq.w	800b782 <HAL_RCC_OscConfig+0x2d6>
        assert_param(IS_RCC_PLLN_VALUE(RCC_OscInitStruct->PLL.PLLN));
        assert_param(IS_RCC_PLLP_VALUE(RCC_OscInitStruct->PLL.PLLP));
        assert_param(IS_RCC_PLLQ_VALUE(RCC_OscInitStruct->PLL.PLLQ));

        /* Disable the main PLL. */
        __HAL_RCC_PLL_DISABLE();
 800b5f0:	4b53      	ldr	r3, [pc, #332]	; (800b740 <HAL_RCC_OscConfig+0x294>)
 800b5f2:	2200      	movs	r2, #0
      if((RCC_OscInitStruct->PLL.PLLState) == RCC_PLL_ON)
 800b5f4:	2802      	cmp	r0, #2
        __HAL_RCC_PLL_DISABLE();
 800b5f6:	661a      	str	r2, [r3, #96]	; 0x60
      if((RCC_OscInitStruct->PLL.PLLState) == RCC_PLL_ON)
 800b5f8:	f000 8109 	beq.w	800b80e <HAL_RCC_OscConfig+0x362>
      {
        /* Disable the main PLL. */
        __HAL_RCC_PLL_DISABLE();

        /* Get Start Tick */
        tickstart = HAL_GetTick();
 800b5fc:	f7fd fd42 	bl	8009084 <HAL_GetTick>
 800b600:	4604      	mov	r4, r0

        /* Wait till PLL is ready */
        while(__HAL_RCC_GET_FLAG(RCC_FLAG_PLLRDY) != RESET)
 800b602:	e005      	b.n	800b610 <HAL_RCC_OscConfig+0x164>
        {
          if((HAL_GetTick() - tickstart ) > PLL_TIMEOUT_VALUE)
 800b604:	f7fd fd3e 	bl	8009084 <HAL_GetTick>
 800b608:	1b00      	subs	r0, r0, r4
 800b60a:	2802      	cmp	r0, #2
 800b60c:	f200 8085 	bhi.w	800b71a <HAL_RCC_OscConfig+0x26e>
        while(__HAL_RCC_GET_FLAG(RCC_FLAG_PLLRDY) != RESET)
 800b610:	682b      	ldr	r3, [r5, #0]
 800b612:	019b      	lsls	r3, r3, #6
 800b614:	d4f6      	bmi.n	800b604 <HAL_RCC_OscConfig+0x158>
          return HAL_ERROR;
        }
      }
    }
  }
  return HAL_OK;
 800b616:	2000      	movs	r0, #0
}
 800b618:	b002      	add	sp, #8
 800b61a:	e8bd 81f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, pc}
    if((RCC_OscInitStruct->LSIState)!= RCC_LSI_OFF)
 800b61e:	6963      	ldr	r3, [r4, #20]
 800b620:	b30b      	cbz	r3, 800b666 <HAL_RCC_OscConfig+0x1ba>
      __HAL_RCC_LSI_ENABLE();
 800b622:	4b47      	ldr	r3, [pc, #284]	; (800b740 <HAL_RCC_OscConfig+0x294>)
      while(__HAL_RCC_GET_FLAG(RCC_FLAG_LSIRDY) == RESET)
 800b624:	4e45      	ldr	r6, [pc, #276]	; (800b73c <HAL_RCC_OscConfig+0x290>)
      __HAL_RCC_LSI_ENABLE();
 800b626:	2201      	movs	r2, #1
 800b628:	f8c3 2e80 	str.w	r2, [r3, #3712]	; 0xe80
      tickstart = HAL_GetTick();
 800b62c:	f7fd fd2a 	bl	8009084 <HAL_GetTick>
 800b630:	4605      	mov	r5, r0
      while(__HAL_RCC_GET_FLAG(RCC_FLAG_LSIRDY) == RESET)
 800b632:	e004      	b.n	800b63e <HAL_RCC_OscConfig+0x192>
        if((HAL_GetTick() - tickstart ) > LSI_TIMEOUT_VALUE)
 800b634:	f7fd fd26 	bl	8009084 <HAL_GetTick>
 800b638:	1b40      	subs	r0, r0, r5
 800b63a:	2802      	cmp	r0, #2
 800b63c:	d86d      	bhi.n	800b71a <HAL_RCC_OscConfig+0x26e>
      while(__HAL_RCC_GET_FLAG(RCC_FLAG_LSIRDY) == RESET)
 800b63e:	6f73      	ldr	r3, [r6, #116]	; 0x74
 800b640:	079b      	lsls	r3, r3, #30
 800b642:	d5f7      	bpl.n	800b634 <HAL_RCC_OscConfig+0x188>
  if(((RCC_OscInitStruct->OscillatorType) & RCC_OSCILLATORTYPE_LSE) == RCC_OSCILLATORTYPE_LSE)
 800b644:	6823      	ldr	r3, [r4, #0]
 800b646:	e798      	b.n	800b57a <HAL_RCC_OscConfig+0xce>
      ((__HAL_RCC_GET_SYSCLK_SOURCE() == RCC_CFGR_SWS_PLL) && ((RCC->PLLCFGR & RCC_PLLCFGR_PLLSRC) == RCC_PLLCFGR_PLLSRC_HSI)))
 800b648:	6852      	ldr	r2, [r2, #4]
 800b64a:	0256      	lsls	r6, r2, #9
 800b64c:	f53f af76 	bmi.w	800b53c <HAL_RCC_OscConfig+0x90>
      if((__HAL_RCC_GET_FLAG(RCC_FLAG_HSIRDY) != RESET) && (RCC_OscInitStruct->HSIState != RCC_HSI_ON))
 800b650:	4a3a      	ldr	r2, [pc, #232]	; (800b73c <HAL_RCC_OscConfig+0x290>)
 800b652:	6812      	ldr	r2, [r2, #0]
 800b654:	0795      	lsls	r5, r2, #30
 800b656:	d544      	bpl.n	800b6e2 <HAL_RCC_OscConfig+0x236>
 800b658:	68e2      	ldr	r2, [r4, #12]
 800b65a:	2a01      	cmp	r2, #1
 800b65c:	d041      	beq.n	800b6e2 <HAL_RCC_OscConfig+0x236>
        return HAL_ERROR;
 800b65e:	2001      	movs	r0, #1
}
 800b660:	b002      	add	sp, #8
 800b662:	e8bd 81f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, pc}
      __HAL_RCC_LSI_DISABLE();
 800b666:	4a36      	ldr	r2, [pc, #216]	; (800b740 <HAL_RCC_OscConfig+0x294>)
      while(__HAL_RCC_GET_FLAG(RCC_FLAG_LSIRDY) != RESET)
 800b668:	4e34      	ldr	r6, [pc, #208]	; (800b73c <HAL_RCC_OscConfig+0x290>)
      __HAL_RCC_LSI_DISABLE();
 800b66a:	f8c2 3e80 	str.w	r3, [r2, #3712]	; 0xe80
      tickstart = HAL_GetTick();
 800b66e:	f7fd fd09 	bl	8009084 <HAL_GetTick>
 800b672:	4605      	mov	r5, r0
      while(__HAL_RCC_GET_FLAG(RCC_FLAG_LSIRDY) != RESET)
 800b674:	e004      	b.n	800b680 <HAL_RCC_OscConfig+0x1d4>
        if((HAL_GetTick() - tickstart ) > LSI_TIMEOUT_VALUE)
 800b676:	f7fd fd05 	bl	8009084 <HAL_GetTick>
 800b67a:	1b40      	subs	r0, r0, r5
 800b67c:	2802      	cmp	r0, #2
 800b67e:	d84c      	bhi.n	800b71a <HAL_RCC_OscConfig+0x26e>
      while(__HAL_RCC_GET_FLAG(RCC_FLAG_LSIRDY) != RESET)
 800b680:	6f73      	ldr	r3, [r6, #116]	; 0x74
 800b682:	079f      	lsls	r7, r3, #30
 800b684:	d4f7      	bmi.n	800b676 <HAL_RCC_OscConfig+0x1ca>
 800b686:	e7dd      	b.n	800b644 <HAL_RCC_OscConfig+0x198>
      __HAL_RCC_PWR_CLK_ENABLE();
 800b688:	9301      	str	r3, [sp, #4]
 800b68a:	6c13      	ldr	r3, [r2, #64]	; 0x40
 800b68c:	f043 5380 	orr.w	r3, r3, #268435456	; 0x10000000
 800b690:	6413      	str	r3, [r2, #64]	; 0x40
 800b692:	6c13      	ldr	r3, [r2, #64]	; 0x40
 800b694:	f003 5380 	and.w	r3, r3, #268435456	; 0x10000000
 800b698:	9301      	str	r3, [sp, #4]
 800b69a:	9b01      	ldr	r3, [sp, #4]
      pwrclkchanged = SET;
 800b69c:	2501      	movs	r5, #1
 800b69e:	e774      	b.n	800b58a <HAL_RCC_OscConfig+0xde>
      ((__HAL_RCC_GET_SYSCLK_SOURCE() == RCC_CFGR_SWS_PLL) && ((RCC->PLLCFGR & RCC_PLLCFGR_PLLSRC) == RCC_PLLCFGR_PLLSRC_HSE)))
 800b6a0:	684a      	ldr	r2, [r1, #4]
 800b6a2:	0250      	lsls	r0, r2, #9
 800b6a4:	f57f af19 	bpl.w	800b4da <HAL_RCC_OscConfig+0x2e>
      if((__HAL_RCC_GET_FLAG(RCC_FLAG_HSERDY) != RESET) && (RCC_OscInitStruct->HSEState == RCC_HSE_OFF))
 800b6a8:	4a24      	ldr	r2, [pc, #144]	; (800b73c <HAL_RCC_OscConfig+0x290>)
 800b6aa:	6812      	ldr	r2, [r2, #0]
 800b6ac:	0391      	lsls	r1, r2, #14
 800b6ae:	f57f af37 	bpl.w	800b520 <HAL_RCC_OscConfig+0x74>
 800b6b2:	6862      	ldr	r2, [r4, #4]
 800b6b4:	2a00      	cmp	r2, #0
 800b6b6:	f47f af33 	bne.w	800b520 <HAL_RCC_OscConfig+0x74>
 800b6ba:	e7d0      	b.n	800b65e <HAL_RCC_OscConfig+0x1b2>
      __HAL_RCC_HSE_CONFIG(RCC_OscInitStruct->HSEState);
 800b6bc:	4a1f      	ldr	r2, [pc, #124]	; (800b73c <HAL_RCC_OscConfig+0x290>)
 800b6be:	6813      	ldr	r3, [r2, #0]
 800b6c0:	f443 3380 	orr.w	r3, r3, #65536	; 0x10000
 800b6c4:	6013      	str	r3, [r2, #0]
        tickstart = HAL_GetTick();
 800b6c6:	f7fd fcdd 	bl	8009084 <HAL_GetTick>
        while(__HAL_RCC_GET_FLAG(RCC_FLAG_HSERDY) == RESET)
 800b6ca:	4e1c      	ldr	r6, [pc, #112]	; (800b73c <HAL_RCC_OscConfig+0x290>)
        tickstart = HAL_GetTick();
 800b6cc:	4605      	mov	r5, r0
        while(__HAL_RCC_GET_FLAG(RCC_FLAG_HSERDY) == RESET)
 800b6ce:	e004      	b.n	800b6da <HAL_RCC_OscConfig+0x22e>
          if((HAL_GetTick() - tickstart ) > HSE_TIMEOUT_VALUE)
 800b6d0:	f7fd fcd8 	bl	8009084 <HAL_GetTick>
 800b6d4:	1b40      	subs	r0, r0, r5
 800b6d6:	2864      	cmp	r0, #100	; 0x64
 800b6d8:	d81f      	bhi.n	800b71a <HAL_RCC_OscConfig+0x26e>
        while(__HAL_RCC_GET_FLAG(RCC_FLAG_HSERDY) == RESET)
 800b6da:	6833      	ldr	r3, [r6, #0]
 800b6dc:	039a      	lsls	r2, r3, #14
 800b6de:	d5f7      	bpl.n	800b6d0 <HAL_RCC_OscConfig+0x224>
 800b6e0:	e71d      	b.n	800b51e <HAL_RCC_OscConfig+0x72>
        __HAL_RCC_HSI_CALIBRATIONVALUE_ADJUST(RCC_OscInitStruct->HSICalibrationValue);
 800b6e2:	4916      	ldr	r1, [pc, #88]	; (800b73c <HAL_RCC_OscConfig+0x290>)
 800b6e4:	6920      	ldr	r0, [r4, #16]
 800b6e6:	680a      	ldr	r2, [r1, #0]
 800b6e8:	f022 02f8 	bic.w	r2, r2, #248	; 0xf8
 800b6ec:	ea42 02c0 	orr.w	r2, r2, r0, lsl #3
 800b6f0:	600a      	str	r2, [r1, #0]
  if(((RCC_OscInitStruct->OscillatorType) & RCC_OSCILLATORTYPE_LSI) == RCC_OSCILLATORTYPE_LSI)
 800b6f2:	071a      	lsls	r2, r3, #28
 800b6f4:	f57f af41 	bpl.w	800b57a <HAL_RCC_OscConfig+0xce>
 800b6f8:	e791      	b.n	800b61e <HAL_RCC_OscConfig+0x172>
      SET_BIT(PWR->CR, PWR_CR_DBP);
 800b6fa:	6833      	ldr	r3, [r6, #0]
 800b6fc:	f443 7380 	orr.w	r3, r3, #256	; 0x100
 800b700:	6033      	str	r3, [r6, #0]
      tickstart = HAL_GetTick();
 800b702:	f7fd fcbf 	bl	8009084 <HAL_GetTick>
 800b706:	4607      	mov	r7, r0
      while(HAL_IS_BIT_CLR(PWR->CR, PWR_CR_DBP))
 800b708:	6833      	ldr	r3, [r6, #0]
 800b70a:	05da      	lsls	r2, r3, #23
 800b70c:	f53f af42 	bmi.w	800b594 <HAL_RCC_OscConfig+0xe8>
        if((HAL_GetTick() - tickstart) > RCC_DBP_TIMEOUT_VALUE)
 800b710:	f7fd fcb8 	bl	8009084 <HAL_GetTick>
 800b714:	1bc0      	subs	r0, r0, r7
 800b716:	2802      	cmp	r0, #2
 800b718:	d9f6      	bls.n	800b708 <HAL_RCC_OscConfig+0x25c>
            return HAL_TIMEOUT;
 800b71a:	2003      	movs	r0, #3
}
 800b71c:	b002      	add	sp, #8
 800b71e:	e8bd 81f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, pc}
    __HAL_RCC_LSE_CONFIG(RCC_OscInitStruct->LSEState);
 800b722:	4a06      	ldr	r2, [pc, #24]	; (800b73c <HAL_RCC_OscConfig+0x290>)
 800b724:	6f13      	ldr	r3, [r2, #112]	; 0x70
 800b726:	f043 0301 	orr.w	r3, r3, #1
 800b72a:	6713      	str	r3, [r2, #112]	; 0x70
      tickstart = HAL_GetTick();
 800b72c:	f7fd fcaa 	bl	8009084 <HAL_GetTick>
      while(__HAL_RCC_GET_FLAG(RCC_FLAG_LSERDY) == RESET)
 800b730:	4f02      	ldr	r7, [pc, #8]	; (800b73c <HAL_RCC_OscConfig+0x290>)
      tickstart = HAL_GetTick();
 800b732:	4606      	mov	r6, r0
        if((HAL_GetTick() - tickstart ) > RCC_LSE_TIMEOUT_VALUE)
 800b734:	f241 3888 	movw	r8, #5000	; 0x1388
      while(__HAL_RCC_GET_FLAG(RCC_FLAG_LSERDY) == RESET)
 800b738:	e00b      	b.n	800b752 <HAL_RCC_OscConfig+0x2a6>
 800b73a:	bf00      	nop
 800b73c:	40023800 	.word	0x40023800
 800b740:	42470000 	.word	0x42470000
 800b744:	40007000 	.word	0x40007000
        if((HAL_GetTick() - tickstart ) > RCC_LSE_TIMEOUT_VALUE)
 800b748:	f7fd fc9c 	bl	8009084 <HAL_GetTick>
 800b74c:	1b80      	subs	r0, r0, r6
 800b74e:	4540      	cmp	r0, r8
 800b750:	d8e3      	bhi.n	800b71a <HAL_RCC_OscConfig+0x26e>
      while(__HAL_RCC_GET_FLAG(RCC_FLAG_LSERDY) == RESET)
 800b752:	6f3b      	ldr	r3, [r7, #112]	; 0x70
 800b754:	079b      	lsls	r3, r3, #30
 800b756:	d5f7      	bpl.n	800b748 <HAL_RCC_OscConfig+0x29c>
    if(pwrclkchanged == SET)
 800b758:	2d00      	cmp	r5, #0
 800b75a:	f43f af40 	beq.w	800b5de <HAL_RCC_OscConfig+0x132>
 800b75e:	e044      	b.n	800b7ea <HAL_RCC_OscConfig+0x33e>
        __HAL_RCC_HSI_DISABLE();
 800b760:	4a42      	ldr	r2, [pc, #264]	; (800b86c <HAL_RCC_OscConfig+0x3c0>)
        while(__HAL_RCC_GET_FLAG(RCC_FLAG_HSIRDY) != RESET)
 800b762:	4e43      	ldr	r6, [pc, #268]	; (800b870 <HAL_RCC_OscConfig+0x3c4>)
        __HAL_RCC_HSI_DISABLE();
 800b764:	6013      	str	r3, [r2, #0]
        tickstart = HAL_GetTick();
 800b766:	f7fd fc8d 	bl	8009084 <HAL_GetTick>
 800b76a:	4605      	mov	r5, r0
        while(__HAL_RCC_GET_FLAG(RCC_FLAG_HSIRDY) != RESET)
 800b76c:	e004      	b.n	800b778 <HAL_RCC_OscConfig+0x2cc>
          if((HAL_GetTick() - tickstart ) > HSI_TIMEOUT_VALUE)
 800b76e:	f7fd fc89 	bl	8009084 <HAL_GetTick>
 800b772:	1b40      	subs	r0, r0, r5
 800b774:	2802      	cmp	r0, #2
 800b776:	d8d0      	bhi.n	800b71a <HAL_RCC_OscConfig+0x26e>
        while(__HAL_RCC_GET_FLAG(RCC_FLAG_HSIRDY) != RESET)
 800b778:	6833      	ldr	r3, [r6, #0]
 800b77a:	0799      	lsls	r1, r3, #30
 800b77c:	d4f7      	bmi.n	800b76e <HAL_RCC_OscConfig+0x2c2>
  if(((RCC_OscInitStruct->OscillatorType) & RCC_OSCILLATORTYPE_LSI) == RCC_OSCILLATORTYPE_LSI)
 800b77e:	6823      	ldr	r3, [r4, #0]
 800b780:	e6f9      	b.n	800b576 <HAL_RCC_OscConfig+0xca>
      if((RCC_OscInitStruct->PLL.PLLState) == RCC_PLL_OFF)
 800b782:	2801      	cmp	r0, #1
 800b784:	f43f af48 	beq.w	800b618 <HAL_RCC_OscConfig+0x16c>
        pll_config = RCC->PLLCFGR;
 800b788:	686b      	ldr	r3, [r5, #4]
        if (((RCC_OscInitStruct->PLL.PLLState) == RCC_PLL_OFF) ||
 800b78a:	69e2      	ldr	r2, [r4, #28]
            (READ_BIT(pll_config, RCC_PLLCFGR_PLLSRC) != RCC_OscInitStruct->PLL.PLLSource) ||
 800b78c:	f403 0180 	and.w	r1, r3, #4194304	; 0x400000
        if (((RCC_OscInitStruct->PLL.PLLState) == RCC_PLL_OFF) ||
 800b790:	4291      	cmp	r1, r2
 800b792:	f47f af64 	bne.w	800b65e <HAL_RCC_OscConfig+0x1b2>
            (READ_BIT(pll_config, RCC_PLLCFGR_PLLSRC) != RCC_OscInitStruct->PLL.PLLSource) ||
 800b796:	6a22      	ldr	r2, [r4, #32]
            (READ_BIT(pll_config, RCC_PLLCFGR_PLLM) != (RCC_OscInitStruct->PLL.PLLM) << RCC_PLLCFGR_PLLM_Pos) ||
 800b798:	f003 013f 	and.w	r1, r3, #63	; 0x3f
            (READ_BIT(pll_config, RCC_PLLCFGR_PLLSRC) != RCC_OscInitStruct->PLL.PLLSource) ||
 800b79c:	4291      	cmp	r1, r2
 800b79e:	f47f af5e 	bne.w	800b65e <HAL_RCC_OscConfig+0x1b2>
            (READ_BIT(pll_config, RCC_PLLCFGR_PLLN) != (RCC_OscInitStruct->PLL.PLLN) << RCC_PLLCFGR_PLLN_Pos) ||
 800b7a2:	6a61      	ldr	r1, [r4, #36]	; 0x24
 800b7a4:	f647 72c0 	movw	r2, #32704	; 0x7fc0
 800b7a8:	401a      	ands	r2, r3
            (READ_BIT(pll_config, RCC_PLLCFGR_PLLM) != (RCC_OscInitStruct->PLL.PLLM) << RCC_PLLCFGR_PLLM_Pos) ||
 800b7aa:	ebb2 1f81 	cmp.w	r2, r1, lsl #6
 800b7ae:	f47f af56 	bne.w	800b65e <HAL_RCC_OscConfig+0x1b2>
            (READ_BIT(pll_config, RCC_PLLCFGR_PLLP) != (((RCC_OscInitStruct->PLL.PLLP >> 1U) - 1U)) << RCC_PLLCFGR_PLLP_Pos) ||
 800b7b2:	6aa2      	ldr	r2, [r4, #40]	; 0x28
 800b7b4:	0852      	lsrs	r2, r2, #1
 800b7b6:	f403 3140 	and.w	r1, r3, #196608	; 0x30000
 800b7ba:	3a01      	subs	r2, #1
            (READ_BIT(pll_config, RCC_PLLCFGR_PLLN) != (RCC_OscInitStruct->PLL.PLLN) << RCC_PLLCFGR_PLLN_Pos) ||
 800b7bc:	ebb1 4f02 	cmp.w	r1, r2, lsl #16
 800b7c0:	f47f af4d 	bne.w	800b65e <HAL_RCC_OscConfig+0x1b2>
            (READ_BIT(pll_config, RCC_PLLCFGR_PLLQ) != (RCC_OscInitStruct->PLL.PLLQ << RCC_PLLCFGR_PLLQ_Pos)))
 800b7c4:	6ae2      	ldr	r2, [r4, #44]	; 0x2c
 800b7c6:	f003 6370 	and.w	r3, r3, #251658240	; 0xf000000
            (READ_BIT(pll_config, RCC_PLLCFGR_PLLP) != (((RCC_OscInitStruct->PLL.PLLP >> 1U) - 1U)) << RCC_PLLCFGR_PLLP_Pos) ||
 800b7ca:	ebb3 6f02 	cmp.w	r3, r2, lsl #24
    return HAL_ERROR;
 800b7ce:	bf14      	ite	ne
 800b7d0:	2001      	movne	r0, #1
 800b7d2:	2000      	moveq	r0, #0
 800b7d4:	e720      	b.n	800b618 <HAL_RCC_OscConfig+0x16c>
      __HAL_RCC_HSE_CONFIG(RCC_OscInitStruct->HSEState);
 800b7d6:	4b26      	ldr	r3, [pc, #152]	; (800b870 <HAL_RCC_OscConfig+0x3c4>)
 800b7d8:	681a      	ldr	r2, [r3, #0]
 800b7da:	f442 2280 	orr.w	r2, r2, #262144	; 0x40000
 800b7de:	601a      	str	r2, [r3, #0]
 800b7e0:	681a      	ldr	r2, [r3, #0]
 800b7e2:	f442 3280 	orr.w	r2, r2, #65536	; 0x10000
 800b7e6:	601a      	str	r2, [r3, #0]
      if((RCC_OscInitStruct->HSEState) != RCC_HSE_OFF)
 800b7e8:	e76d      	b.n	800b6c6 <HAL_RCC_OscConfig+0x21a>
      __HAL_RCC_PWR_CLK_DISABLE();
 800b7ea:	4a21      	ldr	r2, [pc, #132]	; (800b870 <HAL_RCC_OscConfig+0x3c4>)
 800b7ec:	6c13      	ldr	r3, [r2, #64]	; 0x40
 800b7ee:	f023 5380 	bic.w	r3, r3, #268435456	; 0x10000000
 800b7f2:	6413      	str	r3, [r2, #64]	; 0x40
 800b7f4:	e6f3      	b.n	800b5de <HAL_RCC_OscConfig+0x132>
    return HAL_ERROR;
 800b7f6:	2001      	movs	r0, #1
}
 800b7f8:	4770      	bx	lr
    __HAL_RCC_LSE_CONFIG(RCC_OscInitStruct->LSEState);
 800b7fa:	4b1d      	ldr	r3, [pc, #116]	; (800b870 <HAL_RCC_OscConfig+0x3c4>)
 800b7fc:	6f1a      	ldr	r2, [r3, #112]	; 0x70
 800b7fe:	f042 0204 	orr.w	r2, r2, #4
 800b802:	671a      	str	r2, [r3, #112]	; 0x70
 800b804:	6f1a      	ldr	r2, [r3, #112]	; 0x70
 800b806:	f042 0201 	orr.w	r2, r2, #1
 800b80a:	671a      	str	r2, [r3, #112]	; 0x70
    if((RCC_OscInitStruct->LSEState) != RCC_LSE_OFF)
 800b80c:	e78e      	b.n	800b72c <HAL_RCC_OscConfig+0x280>
        tickstart = HAL_GetTick();
 800b80e:	f7fd fc39 	bl	8009084 <HAL_GetTick>
 800b812:	4606      	mov	r6, r0
        while(__HAL_RCC_GET_FLAG(RCC_FLAG_PLLRDY) != RESET)
 800b814:	e005      	b.n	800b822 <HAL_RCC_OscConfig+0x376>
          if((HAL_GetTick() - tickstart ) > PLL_TIMEOUT_VALUE)
 800b816:	f7fd fc35 	bl	8009084 <HAL_GetTick>
 800b81a:	1b80      	subs	r0, r0, r6
 800b81c:	2802      	cmp	r0, #2
 800b81e:	f63f af7c 	bhi.w	800b71a <HAL_RCC_OscConfig+0x26e>
        while(__HAL_RCC_GET_FLAG(RCC_FLAG_PLLRDY) != RESET)
 800b822:	682b      	ldr	r3, [r5, #0]
 800b824:	0199      	lsls	r1, r3, #6
 800b826:	d4f6      	bmi.n	800b816 <HAL_RCC_OscConfig+0x36a>
        WRITE_REG(RCC->PLLCFGR, (RCC_OscInitStruct->PLL.PLLSource                                            | \
 800b828:	e9d4 3107 	ldrd	r3, r1, [r4, #28]
 800b82c:	6a62      	ldr	r2, [r4, #36]	; 0x24
 800b82e:	430b      	orrs	r3, r1
 800b830:	ea43 1382 	orr.w	r3, r3, r2, lsl #6
 800b834:	e9d4 210a 	ldrd	r2, r1, [r4, #40]	; 0x28
 800b838:	0852      	lsrs	r2, r2, #1
 800b83a:	ea43 6301 	orr.w	r3, r3, r1, lsl #24
 800b83e:	3a01      	subs	r2, #1
        __HAL_RCC_PLL_ENABLE();
 800b840:	490a      	ldr	r1, [pc, #40]	; (800b86c <HAL_RCC_OscConfig+0x3c0>)
        WRITE_REG(RCC->PLLCFGR, (RCC_OscInitStruct->PLL.PLLSource                                            | \
 800b842:	ea43 4302 	orr.w	r3, r3, r2, lsl #16
        __HAL_RCC_PLL_ENABLE();
 800b846:	2201      	movs	r2, #1
        WRITE_REG(RCC->PLLCFGR, (RCC_OscInitStruct->PLL.PLLSource                                            | \
 800b848:	606b      	str	r3, [r5, #4]
        __HAL_RCC_PLL_ENABLE();
 800b84a:	660a      	str	r2, [r1, #96]	; 0x60
        tickstart = HAL_GetTick();
 800b84c:	f7fd fc1a 	bl	8009084 <HAL_GetTick>
        while(__HAL_RCC_GET_FLAG(RCC_FLAG_PLLRDY) == RESET)
 800b850:	4d07      	ldr	r5, [pc, #28]	; (800b870 <HAL_RCC_OscConfig+0x3c4>)
        tickstart = HAL_GetTick();
 800b852:	4604      	mov	r4, r0
        while(__HAL_RCC_GET_FLAG(RCC_FLAG_PLLRDY) == RESET)
 800b854:	e005      	b.n	800b862 <HAL_RCC_OscConfig+0x3b6>
          if((HAL_GetTick() - tickstart ) > PLL_TIMEOUT_VALUE)
 800b856:	f7fd fc15 	bl	8009084 <HAL_GetTick>
 800b85a:	1b00      	subs	r0, r0, r4
 800b85c:	2802      	cmp	r0, #2
 800b85e:	f63f af5c 	bhi.w	800b71a <HAL_RCC_OscConfig+0x26e>
        while(__HAL_RCC_GET_FLAG(RCC_FLAG_PLLRDY) == RESET)
 800b862:	682b      	ldr	r3, [r5, #0]
 800b864:	019a      	lsls	r2, r3, #6
 800b866:	d5f6      	bpl.n	800b856 <HAL_RCC_OscConfig+0x3aa>
 800b868:	e6d5      	b.n	800b616 <HAL_RCC_OscConfig+0x16a>
 800b86a:	bf00      	nop
 800b86c:	42470000 	.word	0x42470000
 800b870:	40023800 	.word	0x40023800

0800b874 <HAL_RCC_GetSysClockFreq>:
{
  uint32_t pllm = 0U, pllvco = 0U, pllp = 0U;
  uint32_t sysclockfreq = 0U;

  /* Get SYSCLK source -------------------------------------------------------*/
  switch (RCC->CFGR & RCC_CFGR_SWS)
 800b874:	4916      	ldr	r1, [pc, #88]	; (800b8d0 <HAL_RCC_GetSysClockFreq+0x5c>)
{
 800b876:	b508      	push	{r3, lr}
  switch (RCC->CFGR & RCC_CFGR_SWS)
 800b878:	688b      	ldr	r3, [r1, #8]
 800b87a:	f003 030c 	and.w	r3, r3, #12
 800b87e:	2b04      	cmp	r3, #4
 800b880:	d01b      	beq.n	800b8ba <HAL_RCC_GetSysClockFreq+0x46>
 800b882:	2b08      	cmp	r3, #8
 800b884:	d117      	bne.n	800b8b6 <HAL_RCC_GetSysClockFreq+0x42>
    }
    case RCC_CFGR_SWS_PLL:  /* PLL used as system clock  source */
    {
      /* PLL_VCO = (HSE_VALUE or HSI_VALUE / PLLM) * PLLN
      SYSCLK = PLL_VCO / PLLP */
      pllm = RCC->PLLCFGR & RCC_PLLCFGR_PLLM;
 800b886:	684a      	ldr	r2, [r1, #4]
      if(__HAL_RCC_GET_PLL_OSCSOURCE() != RCC_PLLSOURCE_HSI)
 800b888:	684b      	ldr	r3, [r1, #4]
      {
        /* HSE used as PLL clock source */
        pllvco = (uint32_t) ((((uint64_t) HSE_VALUE * ((uint64_t) ((RCC->PLLCFGR & RCC_PLLCFGR_PLLN) >> RCC_PLLCFGR_PLLN_Pos)))) / (uint64_t)pllm);
 800b88a:	6849      	ldr	r1, [r1, #4]
      if(__HAL_RCC_GET_PLL_OSCSOURCE() != RCC_PLLSOURCE_HSI)
 800b88c:	f413 0380 	ands.w	r3, r3, #4194304	; 0x400000
      pllm = RCC->PLLCFGR & RCC_PLLCFGR_PLLM;
 800b890:	f002 023f 	and.w	r2, r2, #63	; 0x3f
      if(__HAL_RCC_GET_PLL_OSCSOURCE() != RCC_PLLSOURCE_HSI)
 800b894:	d113      	bne.n	800b8be <HAL_RCC_GetSysClockFreq+0x4a>
      }
      else
      {
        /* HSI used as PLL clock source */
        pllvco = (uint32_t) ((((uint64_t) HSI_VALUE * ((uint64_t) ((RCC->PLLCFGR & RCC_PLLCFGR_PLLN) >> RCC_PLLCFGR_PLLN_Pos)))) / (uint64_t)pllm);
 800b896:	480f      	ldr	r0, [pc, #60]	; (800b8d4 <HAL_RCC_GetSysClockFreq+0x60>)
 800b898:	f3c1 1188 	ubfx	r1, r1, #6, #9
 800b89c:	fba1 0100 	umull	r0, r1, r1, r0
 800b8a0:	f7f4 fd56 	bl	8000350 <__aeabi_uldivmod>
      }
      pllp = ((((RCC->PLLCFGR & RCC_PLLCFGR_PLLP) >> RCC_PLLCFGR_PLLP_Pos) + 1U) *2U);
 800b8a4:	4b0a      	ldr	r3, [pc, #40]	; (800b8d0 <HAL_RCC_GetSysClockFreq+0x5c>)
 800b8a6:	685b      	ldr	r3, [r3, #4]
 800b8a8:	f3c3 4301 	ubfx	r3, r3, #16, #2
 800b8ac:	3301      	adds	r3, #1
 800b8ae:	005b      	lsls	r3, r3, #1

      sysclockfreq = pllvco/pllp;
 800b8b0:	fbb0 f0f3 	udiv	r0, r0, r3
      sysclockfreq = HSI_VALUE;
      break;
    }
  }
  return sysclockfreq;
}
 800b8b4:	bd08      	pop	{r3, pc}
      sysclockfreq = HSI_VALUE;
 800b8b6:	4807      	ldr	r0, [pc, #28]	; (800b8d4 <HAL_RCC_GetSysClockFreq+0x60>)
}
 800b8b8:	bd08      	pop	{r3, pc}
  switch (RCC->CFGR & RCC_CFGR_SWS)
 800b8ba:	4807      	ldr	r0, [pc, #28]	; (800b8d8 <HAL_RCC_GetSysClockFreq+0x64>)
}
 800b8bc:	bd08      	pop	{r3, pc}
        pllvco = (uint32_t) ((((uint64_t) HSE_VALUE * ((uint64_t) ((RCC->PLLCFGR & RCC_PLLCFGR_PLLN) >> RCC_PLLCFGR_PLLN_Pos)))) / (uint64_t)pllm);
 800b8be:	4806      	ldr	r0, [pc, #24]	; (800b8d8 <HAL_RCC_GetSysClockFreq+0x64>)
 800b8c0:	f3c1 1188 	ubfx	r1, r1, #6, #9
 800b8c4:	2300      	movs	r3, #0
 800b8c6:	fba1 0100 	umull	r0, r1, r1, r0
 800b8ca:	f7f4 fd41 	bl	8000350 <__aeabi_uldivmod>
 800b8ce:	e7e9      	b.n	800b8a4 <HAL_RCC_GetSysClockFreq+0x30>
 800b8d0:	40023800 	.word	0x40023800
 800b8d4:	00f42400 	.word	0x00f42400
 800b8d8:	007a1200 	.word	0x007a1200

0800b8dc <HAL_RCC_ClockConfig>:
  if(RCC_ClkInitStruct == NULL)
 800b8dc:	2800      	cmp	r0, #0
 800b8de:	f000 8087 	beq.w	800b9f0 <HAL_RCC_ClockConfig+0x114>
  if(FLatency > __HAL_FLASH_GET_LATENCY())
 800b8e2:	4a48      	ldr	r2, [pc, #288]	; (800ba04 <HAL_RCC_ClockConfig+0x128>)
 800b8e4:	6813      	ldr	r3, [r2, #0]
 800b8e6:	f003 030f 	and.w	r3, r3, #15
 800b8ea:	428b      	cmp	r3, r1
{
 800b8ec:	e92d 41f0 	stmdb	sp!, {r4, r5, r6, r7, r8, lr}
 800b8f0:	460d      	mov	r5, r1
 800b8f2:	4604      	mov	r4, r0
  if(FLatency > __HAL_FLASH_GET_LATENCY())
 800b8f4:	d209      	bcs.n	800b90a <HAL_RCC_ClockConfig+0x2e>
    __HAL_FLASH_SET_LATENCY(FLatency);
 800b8f6:	b2cb      	uxtb	r3, r1
 800b8f8:	7013      	strb	r3, [r2, #0]
    if(__HAL_FLASH_GET_LATENCY() != FLatency)
 800b8fa:	6813      	ldr	r3, [r2, #0]
 800b8fc:	f003 030f 	and.w	r3, r3, #15
 800b900:	428b      	cmp	r3, r1
 800b902:	d002      	beq.n	800b90a <HAL_RCC_ClockConfig+0x2e>
    return HAL_ERROR;
 800b904:	2001      	movs	r0, #1
}
 800b906:	e8bd 81f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, pc}
  if(((RCC_ClkInitStruct->ClockType) & RCC_CLOCKTYPE_HCLK) == RCC_CLOCKTYPE_HCLK)
 800b90a:	6823      	ldr	r3, [r4, #0]
 800b90c:	0798      	lsls	r0, r3, #30
 800b90e:	d514      	bpl.n	800b93a <HAL_RCC_ClockConfig+0x5e>
    if(((RCC_ClkInitStruct->ClockType) & RCC_CLOCKTYPE_PCLK1) == RCC_CLOCKTYPE_PCLK1)
 800b910:	0759      	lsls	r1, r3, #29
 800b912:	d504      	bpl.n	800b91e <HAL_RCC_ClockConfig+0x42>
      MODIFY_REG(RCC->CFGR, RCC_CFGR_PPRE1, RCC_HCLK_DIV16);
 800b914:	493c      	ldr	r1, [pc, #240]	; (800ba08 <HAL_RCC_ClockConfig+0x12c>)
 800b916:	688a      	ldr	r2, [r1, #8]
 800b918:	f442 52e0 	orr.w	r2, r2, #7168	; 0x1c00
 800b91c:	608a      	str	r2, [r1, #8]
    if(((RCC_ClkInitStruct->ClockType) & RCC_CLOCKTYPE_PCLK2) == RCC_CLOCKTYPE_PCLK2)
 800b91e:	071a      	lsls	r2, r3, #28
 800b920:	d504      	bpl.n	800b92c <HAL_RCC_ClockConfig+0x50>
      MODIFY_REG(RCC->CFGR, RCC_CFGR_PPRE2, (RCC_HCLK_DIV16 << 3));
 800b922:	4939      	ldr	r1, [pc, #228]	; (800ba08 <HAL_RCC_ClockConfig+0x12c>)
 800b924:	688a      	ldr	r2, [r1, #8]
 800b926:	f442 4260 	orr.w	r2, r2, #57344	; 0xe000
 800b92a:	608a      	str	r2, [r1, #8]
    MODIFY_REG(RCC->CFGR, RCC_CFGR_HPRE, RCC_ClkInitStruct->AHBCLKDivider);
 800b92c:	4936      	ldr	r1, [pc, #216]	; (800ba08 <HAL_RCC_ClockConfig+0x12c>)
 800b92e:	68a0      	ldr	r0, [r4, #8]
 800b930:	688a      	ldr	r2, [r1, #8]
 800b932:	f022 02f0 	bic.w	r2, r2, #240	; 0xf0
 800b936:	4302      	orrs	r2, r0
 800b938:	608a      	str	r2, [r1, #8]
  if(((RCC_ClkInitStruct->ClockType) & RCC_CLOCKTYPE_SYSCLK) == RCC_CLOCKTYPE_SYSCLK)
 800b93a:	07df      	lsls	r7, r3, #31
 800b93c:	d521      	bpl.n	800b982 <HAL_RCC_ClockConfig+0xa6>
    if(RCC_ClkInitStruct->SYSCLKSource == RCC_SYSCLKSOURCE_HSE)
 800b93e:	6862      	ldr	r2, [r4, #4]
 800b940:	2a01      	cmp	r2, #1
 800b942:	d057      	beq.n	800b9f4 <HAL_RCC_ClockConfig+0x118>
    else if((RCC_ClkInitStruct->SYSCLKSource == RCC_SYSCLKSOURCE_PLLCLK)   ||
 800b944:	1e93      	subs	r3, r2, #2
 800b946:	2b01      	cmp	r3, #1
      if(__HAL_RCC_GET_FLAG(RCC_FLAG_PLLRDY) == RESET)
 800b948:	4b2f      	ldr	r3, [pc, #188]	; (800ba08 <HAL_RCC_ClockConfig+0x12c>)
 800b94a:	681b      	ldr	r3, [r3, #0]
    else if((RCC_ClkInitStruct->SYSCLKSource == RCC_SYSCLKSOURCE_PLLCLK)   ||
 800b94c:	d94d      	bls.n	800b9ea <HAL_RCC_ClockConfig+0x10e>
      if(__HAL_RCC_GET_FLAG(RCC_FLAG_HSIRDY) == RESET)
 800b94e:	0799      	lsls	r1, r3, #30
 800b950:	d5d8      	bpl.n	800b904 <HAL_RCC_ClockConfig+0x28>
    __HAL_RCC_SYSCLK_CONFIG(RCC_ClkInitStruct->SYSCLKSource);
 800b952:	4e2d      	ldr	r6, [pc, #180]	; (800ba08 <HAL_RCC_ClockConfig+0x12c>)
 800b954:	68b3      	ldr	r3, [r6, #8]
 800b956:	f023 0303 	bic.w	r3, r3, #3
 800b95a:	4313      	orrs	r3, r2
 800b95c:	60b3      	str	r3, [r6, #8]
    tickstart = HAL_GetTick();
 800b95e:	f7fd fb91 	bl	8009084 <HAL_GetTick>
      if ((HAL_GetTick() - tickstart) > CLOCKSWITCH_TIMEOUT_VALUE)
 800b962:	f241 3888 	movw	r8, #5000	; 0x1388
    tickstart = HAL_GetTick();
 800b966:	4607      	mov	r7, r0
    while (__HAL_RCC_GET_SYSCLK_SOURCE() != (RCC_ClkInitStruct->SYSCLKSource << RCC_CFGR_SWS_Pos))
 800b968:	e004      	b.n	800b974 <HAL_RCC_ClockConfig+0x98>
      if ((HAL_GetTick() - tickstart) > CLOCKSWITCH_TIMEOUT_VALUE)
 800b96a:	f7fd fb8b 	bl	8009084 <HAL_GetTick>
 800b96e:	1bc0      	subs	r0, r0, r7
 800b970:	4540      	cmp	r0, r8
 800b972:	d844      	bhi.n	800b9fe <HAL_RCC_ClockConfig+0x122>
    while (__HAL_RCC_GET_SYSCLK_SOURCE() != (RCC_ClkInitStruct->SYSCLKSource << RCC_CFGR_SWS_Pos))
 800b974:	68b3      	ldr	r3, [r6, #8]
 800b976:	6862      	ldr	r2, [r4, #4]
 800b978:	f003 030c 	and.w	r3, r3, #12
 800b97c:	ebb3 0f82 	cmp.w	r3, r2, lsl #2
 800b980:	d1f3      	bne.n	800b96a <HAL_RCC_ClockConfig+0x8e>
  if(FLatency < __HAL_FLASH_GET_LATENCY())
 800b982:	4a20      	ldr	r2, [pc, #128]	; (800ba04 <HAL_RCC_ClockConfig+0x128>)
 800b984:	6813      	ldr	r3, [r2, #0]
 800b986:	f003 030f 	and.w	r3, r3, #15
 800b98a:	42ab      	cmp	r3, r5
 800b98c:	d906      	bls.n	800b99c <HAL_RCC_ClockConfig+0xc0>
    __HAL_FLASH_SET_LATENCY(FLatency);
 800b98e:	b2eb      	uxtb	r3, r5
 800b990:	7013      	strb	r3, [r2, #0]
    if(__HAL_FLASH_GET_LATENCY() != FLatency)
 800b992:	6813      	ldr	r3, [r2, #0]
 800b994:	f003 030f 	and.w	r3, r3, #15
 800b998:	42ab      	cmp	r3, r5
 800b99a:	d1b3      	bne.n	800b904 <HAL_RCC_ClockConfig+0x28>
  if(((RCC_ClkInitStruct->ClockType) & RCC_CLOCKTYPE_PCLK1) == RCC_CLOCKTYPE_PCLK1)
 800b99c:	6823      	ldr	r3, [r4, #0]
 800b99e:	075a      	lsls	r2, r3, #29
 800b9a0:	d506      	bpl.n	800b9b0 <HAL_RCC_ClockConfig+0xd4>
    MODIFY_REG(RCC->CFGR, RCC_CFGR_PPRE1, RCC_ClkInitStruct->APB1CLKDivider);
 800b9a2:	4919      	ldr	r1, [pc, #100]	; (800ba08 <HAL_RCC_ClockConfig+0x12c>)
 800b9a4:	68e0      	ldr	r0, [r4, #12]
 800b9a6:	688a      	ldr	r2, [r1, #8]
 800b9a8:	f422 52e0 	bic.w	r2, r2, #7168	; 0x1c00
 800b9ac:	4302      	orrs	r2, r0
 800b9ae:	608a      	str	r2, [r1, #8]
  if(((RCC_ClkInitStruct->ClockType) & RCC_CLOCKTYPE_PCLK2) == RCC_CLOCKTYPE_PCLK2)
 800b9b0:	071b      	lsls	r3, r3, #28
 800b9b2:	d507      	bpl.n	800b9c4 <HAL_RCC_ClockConfig+0xe8>
    MODIFY_REG(RCC->CFGR, RCC_CFGR_PPRE2, ((RCC_ClkInitStruct->APB2CLKDivider) << 3U));
 800b9b4:	4a14      	ldr	r2, [pc, #80]	; (800ba08 <HAL_RCC_ClockConfig+0x12c>)
 800b9b6:	6921      	ldr	r1, [r4, #16]
 800b9b8:	6893      	ldr	r3, [r2, #8]
 800b9ba:	f423 4360 	bic.w	r3, r3, #57344	; 0xe000
 800b9be:	ea43 03c1 	orr.w	r3, r3, r1, lsl #3
 800b9c2:	6093      	str	r3, [r2, #8]
  SystemCoreClock = HAL_RCC_GetSysClockFreq() >> AHBPrescTable[(RCC->CFGR & RCC_CFGR_HPRE)>> RCC_CFGR_HPRE_Pos];
 800b9c4:	f7ff ff56 	bl	800b874 <HAL_RCC_GetSysClockFreq>
 800b9c8:	4a0f      	ldr	r2, [pc, #60]	; (800ba08 <HAL_RCC_ClockConfig+0x12c>)
 800b9ca:	4c10      	ldr	r4, [pc, #64]	; (800ba0c <HAL_RCC_ClockConfig+0x130>)
 800b9cc:	6892      	ldr	r2, [r2, #8]
 800b9ce:	4910      	ldr	r1, [pc, #64]	; (800ba10 <HAL_RCC_ClockConfig+0x134>)
 800b9d0:	f3c2 1203 	ubfx	r2, r2, #4, #4
 800b9d4:	4603      	mov	r3, r0
 800b9d6:	5ca2      	ldrb	r2, [r4, r2]
  HAL_InitTick (uwTickPrio);
 800b9d8:	480e      	ldr	r0, [pc, #56]	; (800ba14 <HAL_RCC_ClockConfig+0x138>)
  SystemCoreClock = HAL_RCC_GetSysClockFreq() >> AHBPrescTable[(RCC->CFGR & RCC_CFGR_HPRE)>> RCC_CFGR_HPRE_Pos];
 800b9da:	40d3      	lsrs	r3, r2
  HAL_InitTick (uwTickPrio);
 800b9dc:	6800      	ldr	r0, [r0, #0]
  SystemCoreClock = HAL_RCC_GetSysClockFreq() >> AHBPrescTable[(RCC->CFGR & RCC_CFGR_HPRE)>> RCC_CFGR_HPRE_Pos];
 800b9de:	600b      	str	r3, [r1, #0]
  HAL_InitTick (uwTickPrio);
 800b9e0:	f7f6 fca4 	bl	800232c <HAL_InitTick>
  return HAL_OK;
 800b9e4:	2000      	movs	r0, #0
}
 800b9e6:	e8bd 81f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, pc}
      if(__HAL_RCC_GET_FLAG(RCC_FLAG_PLLRDY) == RESET)
 800b9ea:	0198      	lsls	r0, r3, #6
 800b9ec:	d4b1      	bmi.n	800b952 <HAL_RCC_ClockConfig+0x76>
 800b9ee:	e789      	b.n	800b904 <HAL_RCC_ClockConfig+0x28>
    return HAL_ERROR;
 800b9f0:	2001      	movs	r0, #1
}
 800b9f2:	4770      	bx	lr
      if(__HAL_RCC_GET_FLAG(RCC_FLAG_HSERDY) == RESET)
 800b9f4:	4b04      	ldr	r3, [pc, #16]	; (800ba08 <HAL_RCC_ClockConfig+0x12c>)
 800b9f6:	681b      	ldr	r3, [r3, #0]
 800b9f8:	039e      	lsls	r6, r3, #14
 800b9fa:	d4aa      	bmi.n	800b952 <HAL_RCC_ClockConfig+0x76>
 800b9fc:	e782      	b.n	800b904 <HAL_RCC_ClockConfig+0x28>
        return HAL_TIMEOUT;
 800b9fe:	2003      	movs	r0, #3
 800ba00:	e781      	b.n	800b906 <HAL_RCC_ClockConfig+0x2a>
 800ba02:	bf00      	nop
 800ba04:	40023c00 	.word	0x40023c00
 800ba08:	40023800 	.word	0x40023800
 800ba0c:	0802e050 	.word	0x0802e050
 800ba10:	20000078 	.word	0x20000078
 800ba14:	20000080 	.word	0x20000080

0800ba18 <HAL_RCC_GetPCLK1Freq>:
  * @retval PCLK1 frequency
  */
uint32_t HAL_RCC_GetPCLK1Freq(void)
{
  /* Get HCLK source and Compute PCLK1 frequency ---------------------------*/
  return (HAL_RCC_GetHCLKFreq() >> APBPrescTable[(RCC->CFGR & RCC_CFGR_PPRE1)>> RCC_CFGR_PPRE1_Pos]);
 800ba18:	4b04      	ldr	r3, [pc, #16]	; (800ba2c <HAL_RCC_GetPCLK1Freq+0x14>)
  return SystemCoreClock;
 800ba1a:	4905      	ldr	r1, [pc, #20]	; (800ba30 <HAL_RCC_GetPCLK1Freq+0x18>)
  return (HAL_RCC_GetHCLKFreq() >> APBPrescTable[(RCC->CFGR & RCC_CFGR_PPRE1)>> RCC_CFGR_PPRE1_Pos]);
 800ba1c:	689b      	ldr	r3, [r3, #8]
 800ba1e:	4a05      	ldr	r2, [pc, #20]	; (800ba34 <HAL_RCC_GetPCLK1Freq+0x1c>)
 800ba20:	6808      	ldr	r0, [r1, #0]
 800ba22:	f3c3 2382 	ubfx	r3, r3, #10, #3
 800ba26:	5cd3      	ldrb	r3, [r2, r3]
}
 800ba28:	40d8      	lsrs	r0, r3
 800ba2a:	4770      	bx	lr
 800ba2c:	40023800 	.word	0x40023800
 800ba30:	20000078 	.word	0x20000078
 800ba34:	0802e060 	.word	0x0802e060

0800ba38 <HAL_RCC_GetClockConfig>:
{
  /* Set all possible values for the Clock type parameter --------------------*/
  RCC_ClkInitStruct->ClockType = RCC_CLOCKTYPE_SYSCLK | RCC_CLOCKTYPE_HCLK | RCC_CLOCKTYPE_PCLK1 | RCC_CLOCKTYPE_PCLK2;

  /* Get the SYSCLK configuration --------------------------------------------*/
  RCC_ClkInitStruct->SYSCLKSource = (uint32_t)(RCC->CFGR & RCC_CFGR_SW);
 800ba38:	4b0e      	ldr	r3, [pc, #56]	; (800ba74 <HAL_RCC_GetClockConfig+0x3c>)
  RCC_ClkInitStruct->ClockType = RCC_CLOCKTYPE_SYSCLK | RCC_CLOCKTYPE_HCLK | RCC_CLOCKTYPE_PCLK1 | RCC_CLOCKTYPE_PCLK2;
 800ba3a:	220f      	movs	r2, #15
 800ba3c:	6002      	str	r2, [r0, #0]
  RCC_ClkInitStruct->SYSCLKSource = (uint32_t)(RCC->CFGR & RCC_CFGR_SW);
 800ba3e:	689a      	ldr	r2, [r3, #8]
 800ba40:	f002 0203 	and.w	r2, r2, #3
 800ba44:	6042      	str	r2, [r0, #4]

  /* Get the HCLK configuration ----------------------------------------------*/
  RCC_ClkInitStruct->AHBCLKDivider = (uint32_t)(RCC->CFGR & RCC_CFGR_HPRE);
 800ba46:	689a      	ldr	r2, [r3, #8]
 800ba48:	f002 02f0 	and.w	r2, r2, #240	; 0xf0
 800ba4c:	6082      	str	r2, [r0, #8]

  /* Get the APB1 configuration ----------------------------------------------*/
  RCC_ClkInitStruct->APB1CLKDivider = (uint32_t)(RCC->CFGR & RCC_CFGR_PPRE1);
 800ba4e:	689a      	ldr	r2, [r3, #8]
 800ba50:	f402 52e0 	and.w	r2, r2, #7168	; 0x1c00
 800ba54:	60c2      	str	r2, [r0, #12]

  /* Get the APB2 configuration ----------------------------------------------*/
  RCC_ClkInitStruct->APB2CLKDivider = (uint32_t)((RCC->CFGR & RCC_CFGR_PPRE2) >> 3U);
 800ba56:	689b      	ldr	r3, [r3, #8]
 800ba58:	08db      	lsrs	r3, r3, #3
{
 800ba5a:	b410      	push	{r4}
  RCC_ClkInitStruct->APB2CLKDivider = (uint32_t)((RCC->CFGR & RCC_CFGR_PPRE2) >> 3U);
 800ba5c:	f403 53e0 	and.w	r3, r3, #7168	; 0x1c00

  /* Get the Flash Wait State (Latency) configuration ------------------------*/
  *pFLatency = (uint32_t)(FLASH->ACR & FLASH_ACR_LATENCY);
 800ba60:	4c05      	ldr	r4, [pc, #20]	; (800ba78 <HAL_RCC_GetClockConfig+0x40>)
  RCC_ClkInitStruct->APB2CLKDivider = (uint32_t)((RCC->CFGR & RCC_CFGR_PPRE2) >> 3U);
 800ba62:	6103      	str	r3, [r0, #16]
  *pFLatency = (uint32_t)(FLASH->ACR & FLASH_ACR_LATENCY);
 800ba64:	6823      	ldr	r3, [r4, #0]
}
 800ba66:	f85d 4b04 	ldr.w	r4, [sp], #4
  *pFLatency = (uint32_t)(FLASH->ACR & FLASH_ACR_LATENCY);
 800ba6a:	f003 030f 	and.w	r3, r3, #15
 800ba6e:	600b      	str	r3, [r1, #0]
}
 800ba70:	4770      	bx	lr
 800ba72:	bf00      	nop
 800ba74:	40023800 	.word	0x40023800
 800ba78:	40023c00 	.word	0x40023c00

0800ba7c <HAL_RCCEx_PeriphCLKConfig>:
  *         the backup registers) and RCC_BDCR register are set to their reset values.
  *
  * @retval HAL status
  */
HAL_StatusTypeDef HAL_RCCEx_PeriphCLKConfig(RCC_PeriphCLKInitTypeDef  *PeriphClkInit)
{
 800ba7c:	b5f0      	push	{r4, r5, r6, r7, lr}
  /*----------------------- SAI/I2S Configuration (PLLI2S) -------------------*/
  /*----------------------- Common configuration SAI/I2S ---------------------*/
  /* In Case of SAI or I2S Clock Configuration through PLLI2S, PLLI2SN division
     factor is common parameters for both peripherals */
  if((((PeriphClkInit->PeriphClockSelection) & RCC_PERIPHCLK_I2S) == RCC_PERIPHCLK_I2S) ||
     (((PeriphClkInit->PeriphClockSelection) & RCC_PERIPHCLK_SAI_PLLI2S) == RCC_PERIPHCLK_SAI_PLLI2S) ||
 800ba7e:	6803      	ldr	r3, [r0, #0]
  if((((PeriphClkInit->PeriphClockSelection) & RCC_PERIPHCLK_I2S) == RCC_PERIPHCLK_I2S) ||
 800ba80:	f013 0f43 	tst.w	r3, #67	; 0x43
{
 800ba84:	b083      	sub	sp, #12
 800ba86:	4604      	mov	r4, r0
  if((((PeriphClkInit->PeriphClockSelection) & RCC_PERIPHCLK_I2S) == RCC_PERIPHCLK_I2S) ||
 800ba88:	d111      	bne.n	800baae <HAL_RCCEx_PeriphCLKConfig+0x32>

  /*----------------------- SAI/LTDC Configuration (PLLSAI) ------------------*/
  /*----------------------- Common configuration SAI/LTDC --------------------*/
  /* In Case of SAI or LTDC Clock Configuration through PLLSAI, PLLSAIN division
     factor is common parameters for both peripherals */
  if((((PeriphClkInit->PeriphClockSelection) & RCC_PERIPHCLK_SAI_PLLSAI) == RCC_PERIPHCLK_SAI_PLLSAI) ||
 800ba8a:	f013 0f0c 	tst.w	r3, #12
 800ba8e:	d16f      	bne.n	800bb70 <HAL_RCCEx_PeriphCLKConfig+0xf4>
    }
  }
  /*--------------------------------------------------------------------------*/

  /*---------------------------- RTC configuration ---------------------------*/
  if(((PeriphClkInit->PeriphClockSelection) & RCC_PERIPHCLK_RTC) == (RCC_PERIPHCLK_RTC))
 800ba90:	0698      	lsls	r0, r3, #26
 800ba92:	f100 80c2 	bmi.w	800bc1a <HAL_RCCEx_PeriphCLKConfig+0x19e>
    __HAL_RCC_RTC_CONFIG(PeriphClkInit->RTCClockSelection);
  }
  /*--------------------------------------------------------------------------*/

  /*---------------------------- TIM configuration ---------------------------*/
  if(((PeriphClkInit->PeriphClockSelection) & RCC_PERIPHCLK_TIM) == (RCC_PERIPHCLK_TIM))
 800ba96:	f013 0310 	ands.w	r3, r3, #16
 800ba9a:	f000 80bb 	beq.w	800bc14 <HAL_RCCEx_PeriphCLKConfig+0x198>
  {
    __HAL_RCC_TIMCLKPRESCALER(PeriphClkInit->TIMPresSelection);
 800ba9e:	4b89      	ldr	r3, [pc, #548]	; (800bcc4 <HAL_RCCEx_PeriphCLKConfig+0x248>)
 800baa0:	f894 202c 	ldrb.w	r2, [r4, #44]	; 0x2c
 800baa4:	f8c3 21e0 	str.w	r2, [r3, #480]	; 0x1e0
  }
  return HAL_OK;
 800baa8:	2000      	movs	r0, #0
}
 800baaa:	b003      	add	sp, #12
 800baac:	bdf0      	pop	{r4, r5, r6, r7, pc}
    __HAL_RCC_PLLI2S_DISABLE();
 800baae:	4b86      	ldr	r3, [pc, #536]	; (800bcc8 <HAL_RCCEx_PeriphCLKConfig+0x24c>)
    while(__HAL_RCC_GET_FLAG(RCC_FLAG_PLLI2SRDY)  != RESET)
 800bab0:	4e86      	ldr	r6, [pc, #536]	; (800bccc <HAL_RCCEx_PeriphCLKConfig+0x250>)
    __HAL_RCC_PLLI2S_DISABLE();
 800bab2:	2200      	movs	r2, #0
 800bab4:	669a      	str	r2, [r3, #104]	; 0x68
    tickstart = HAL_GetTick();
 800bab6:	f7fd fae5 	bl	8009084 <HAL_GetTick>
 800baba:	4605      	mov	r5, r0
    while(__HAL_RCC_GET_FLAG(RCC_FLAG_PLLI2SRDY)  != RESET)
 800babc:	e004      	b.n	800bac8 <HAL_RCCEx_PeriphCLKConfig+0x4c>
      if((HAL_GetTick() - tickstart ) > PLLI2S_TIMEOUT_VALUE)
 800babe:	f7fd fae1 	bl	8009084 <HAL_GetTick>
 800bac2:	1b43      	subs	r3, r0, r5
 800bac4:	2b02      	cmp	r3, #2
 800bac6:	d850      	bhi.n	800bb6a <HAL_RCCEx_PeriphCLKConfig+0xee>
    while(__HAL_RCC_GET_FLAG(RCC_FLAG_PLLI2SRDY)  != RESET)
 800bac8:	6833      	ldr	r3, [r6, #0]
 800baca:	0118      	lsls	r0, r3, #4
 800bacc:	d4f7      	bmi.n	800babe <HAL_RCCEx_PeriphCLKConfig+0x42>
    if(((PeriphClkInit->PeriphClockSelection) & RCC_PERIPHCLK_I2S) == (RCC_PERIPHCLK_I2S))
 800bace:	6823      	ldr	r3, [r4, #0]
 800bad0:	07d9      	lsls	r1, r3, #31
 800bad2:	d506      	bpl.n	800bae2 <HAL_RCCEx_PeriphCLKConfig+0x66>
      __HAL_RCC_PLLI2S_CONFIG(PeriphClkInit->PLLI2S.PLLI2SN , PeriphClkInit->PLLI2S.PLLI2SR);
 800bad4:	e9d4 1201 	ldrd	r1, r2, [r4, #4]
 800bad8:	0712      	lsls	r2, r2, #28
 800bada:	ea42 1281 	orr.w	r2, r2, r1, lsl #6
 800bade:	f8c6 2084 	str.w	r2, [r6, #132]	; 0x84
    if(((PeriphClkInit->PeriphClockSelection) & RCC_PERIPHCLK_SAI_PLLI2S) == (RCC_PERIPHCLK_SAI_PLLI2S))
 800bae2:	079a      	lsls	r2, r3, #30
 800bae4:	d515      	bpl.n	800bb12 <HAL_RCCEx_PeriphCLKConfig+0x96>
      tmpreg1 = ((RCC->PLLI2SCFGR & RCC_PLLI2SCFGR_PLLI2SR) >> RCC_PLLI2SCFGR_PLLI2SR_Pos);
 800bae6:	4979      	ldr	r1, [pc, #484]	; (800bccc <HAL_RCCEx_PeriphCLKConfig+0x250>)
      __HAL_RCC_PLLI2S_SAICLK_CONFIG(PeriphClkInit->PLLI2S.PLLI2SN , PeriphClkInit->PLLI2S.PLLI2SQ , tmpreg1);
 800bae8:	68e2      	ldr	r2, [r4, #12]
      tmpreg1 = ((RCC->PLLI2SCFGR & RCC_PLLI2SCFGR_PLLI2SR) >> RCC_PLLI2SCFGR_PLLI2SR_Pos);
 800baea:	f8d1 0084 	ldr.w	r0, [r1, #132]	; 0x84
      __HAL_RCC_PLLI2S_SAICLK_CONFIG(PeriphClkInit->PLLI2S.PLLI2SN , PeriphClkInit->PLLI2S.PLLI2SQ , tmpreg1);
 800baee:	6865      	ldr	r5, [r4, #4]
 800baf0:	0612      	lsls	r2, r2, #24
 800baf2:	f000 40e0 	and.w	r0, r0, #1879048192	; 0x70000000
 800baf6:	ea42 1285 	orr.w	r2, r2, r5, lsl #6
 800bafa:	4302      	orrs	r2, r0
 800bafc:	f8c1 2084 	str.w	r2, [r1, #132]	; 0x84
      __HAL_RCC_PLLI2S_PLLSAICLKDIVQ_CONFIG(PeriphClkInit->PLLI2SDivQ);
 800bb00:	f8d1 008c 	ldr.w	r0, [r1, #140]	; 0x8c
 800bb04:	69e2      	ldr	r2, [r4, #28]
 800bb06:	f020 001f 	bic.w	r0, r0, #31
 800bb0a:	3a01      	subs	r2, #1
 800bb0c:	4302      	orrs	r2, r0
 800bb0e:	f8c1 208c 	str.w	r2, [r1, #140]	; 0x8c
    if((PeriphClkInit->PeriphClockSelection & RCC_PERIPHCLK_PLLI2S) == RCC_PERIPHCLK_PLLI2S)
 800bb12:	065b      	lsls	r3, r3, #25
 800bb14:	d509      	bpl.n	800bb2a <HAL_RCCEx_PeriphCLKConfig+0xae>
      __HAL_RCC_PLLI2S_SAICLK_CONFIG(PeriphClkInit->PLLI2S.PLLI2SN, PeriphClkInit->PLLI2S.PLLI2SQ, PeriphClkInit->PLLI2S.PLLI2SR);
 800bb16:	1d20      	adds	r0, r4, #4
 800bb18:	c80b      	ldmia	r0, {r0, r1, r3}
 800bb1a:	061b      	lsls	r3, r3, #24
 800bb1c:	4a6b      	ldr	r2, [pc, #428]	; (800bccc <HAL_RCCEx_PeriphCLKConfig+0x250>)
 800bb1e:	ea43 1380 	orr.w	r3, r3, r0, lsl #6
 800bb22:	ea43 7301 	orr.w	r3, r3, r1, lsl #28
 800bb26:	f8c2 3084 	str.w	r3, [r2, #132]	; 0x84
    __HAL_RCC_PLLI2S_ENABLE();
 800bb2a:	4b67      	ldr	r3, [pc, #412]	; (800bcc8 <HAL_RCCEx_PeriphCLKConfig+0x24c>)
    while(__HAL_RCC_GET_FLAG(RCC_FLAG_PLLI2SRDY)  == RESET)
 800bb2c:	4e67      	ldr	r6, [pc, #412]	; (800bccc <HAL_RCCEx_PeriphCLKConfig+0x250>)
    __HAL_RCC_PLLI2S_ENABLE();
 800bb2e:	2201      	movs	r2, #1
 800bb30:	669a      	str	r2, [r3, #104]	; 0x68
    tickstart = HAL_GetTick();
 800bb32:	f7fd faa7 	bl	8009084 <HAL_GetTick>
 800bb36:	4605      	mov	r5, r0
    while(__HAL_RCC_GET_FLAG(RCC_FLAG_PLLI2SRDY)  == RESET)
 800bb38:	e004      	b.n	800bb44 <HAL_RCCEx_PeriphCLKConfig+0xc8>
      if((HAL_GetTick() - tickstart ) > PLLI2S_TIMEOUT_VALUE)
 800bb3a:	f7fd faa3 	bl	8009084 <HAL_GetTick>
 800bb3e:	1b40      	subs	r0, r0, r5
 800bb40:	2802      	cmp	r0, #2
 800bb42:	d812      	bhi.n	800bb6a <HAL_RCCEx_PeriphCLKConfig+0xee>
    while(__HAL_RCC_GET_FLAG(RCC_FLAG_PLLI2SRDY)  == RESET)
 800bb44:	6833      	ldr	r3, [r6, #0]
 800bb46:	011f      	lsls	r7, r3, #4
 800bb48:	d5f7      	bpl.n	800bb3a <HAL_RCCEx_PeriphCLKConfig+0xbe>
  if((((PeriphClkInit->PeriphClockSelection) & RCC_PERIPHCLK_SAI_PLLSAI) == RCC_PERIPHCLK_SAI_PLLSAI) ||
 800bb4a:	6823      	ldr	r3, [r4, #0]
 800bb4c:	e79d      	b.n	800ba8a <HAL_RCCEx_PeriphCLKConfig+0xe>
        tickstart = HAL_GetTick();
 800bb4e:	f7fd fa99 	bl	8009084 <HAL_GetTick>
          if((HAL_GetTick() - tickstart ) > RCC_LSE_TIMEOUT_VALUE)
 800bb52:	f241 3788 	movw	r7, #5000	; 0x1388
        tickstart = HAL_GetTick();
 800bb56:	4606      	mov	r6, r0
        while(__HAL_RCC_GET_FLAG(RCC_FLAG_LSERDY) == RESET)
 800bb58:	6f2b      	ldr	r3, [r5, #112]	; 0x70
 800bb5a:	079b      	lsls	r3, r3, #30
 800bb5c:	f100 80a5 	bmi.w	800bcaa <HAL_RCCEx_PeriphCLKConfig+0x22e>
          if((HAL_GetTick() - tickstart ) > RCC_LSE_TIMEOUT_VALUE)
 800bb60:	f7fd fa90 	bl	8009084 <HAL_GetTick>
 800bb64:	1b80      	subs	r0, r0, r6
 800bb66:	42b8      	cmp	r0, r7
 800bb68:	d9f6      	bls.n	800bb58 <HAL_RCCEx_PeriphCLKConfig+0xdc>
        return HAL_TIMEOUT;
 800bb6a:	2003      	movs	r0, #3
}
 800bb6c:	b003      	add	sp, #12
 800bb6e:	bdf0      	pop	{r4, r5, r6, r7, pc}
    __HAL_RCC_PLLSAI_DISABLE();
 800bb70:	4b55      	ldr	r3, [pc, #340]	; (800bcc8 <HAL_RCCEx_PeriphCLKConfig+0x24c>)
    while(__HAL_RCC_PLLSAI_GET_FLAG() != RESET)
 800bb72:	4e56      	ldr	r6, [pc, #344]	; (800bccc <HAL_RCCEx_PeriphCLKConfig+0x250>)
    __HAL_RCC_PLLSAI_DISABLE();
 800bb74:	2200      	movs	r2, #0
 800bb76:	671a      	str	r2, [r3, #112]	; 0x70
    tickstart = HAL_GetTick();
 800bb78:	f7fd fa84 	bl	8009084 <HAL_GetTick>
 800bb7c:	4605      	mov	r5, r0
    while(__HAL_RCC_PLLSAI_GET_FLAG() != RESET)
 800bb7e:	e004      	b.n	800bb8a <HAL_RCCEx_PeriphCLKConfig+0x10e>
      if((HAL_GetTick() - tickstart ) > PLLSAI_TIMEOUT_VALUE)
 800bb80:	f7fd fa80 	bl	8009084 <HAL_GetTick>
 800bb84:	1b43      	subs	r3, r0, r5
 800bb86:	2b02      	cmp	r3, #2
 800bb88:	d8ef      	bhi.n	800bb6a <HAL_RCCEx_PeriphCLKConfig+0xee>
    while(__HAL_RCC_PLLSAI_GET_FLAG() != RESET)
 800bb8a:	6833      	ldr	r3, [r6, #0]
 800bb8c:	0098      	lsls	r0, r3, #2
 800bb8e:	d4f7      	bmi.n	800bb80 <HAL_RCCEx_PeriphCLKConfig+0x104>
    if(((PeriphClkInit->PeriphClockSelection) & RCC_PERIPHCLK_SAI_PLLSAI) == (RCC_PERIPHCLK_SAI_PLLSAI))
 800bb90:	6822      	ldr	r2, [r4, #0]
 800bb92:	0751      	lsls	r1, r2, #29
 800bb94:	d515      	bpl.n	800bbc2 <HAL_RCCEx_PeriphCLKConfig+0x146>
      __HAL_RCC_PLLSAI_CONFIG(PeriphClkInit->PLLSAI.PLLSAIN , PeriphClkInit->PLLSAI.PLLSAIQ, tmpreg1);
 800bb96:	6963      	ldr	r3, [r4, #20]
      tmpreg1 = ((RCC->PLLSAICFGR & RCC_PLLSAICFGR_PLLSAIR) >> RCC_PLLSAICFGR_PLLSAIR_Pos);
 800bb98:	f8d6 1088 	ldr.w	r1, [r6, #136]	; 0x88
      __HAL_RCC_PLLSAI_CONFIG(PeriphClkInit->PLLSAI.PLLSAIN , PeriphClkInit->PLLSAI.PLLSAIQ, tmpreg1);
 800bb9c:	6920      	ldr	r0, [r4, #16]
 800bb9e:	061b      	lsls	r3, r3, #24
 800bba0:	f001 41e0 	and.w	r1, r1, #1879048192	; 0x70000000
 800bba4:	ea43 1380 	orr.w	r3, r3, r0, lsl #6
 800bba8:	430b      	orrs	r3, r1
 800bbaa:	f8c6 3088 	str.w	r3, [r6, #136]	; 0x88
      __HAL_RCC_PLLSAI_PLLSAICLKDIVQ_CONFIG(PeriphClkInit->PLLSAIDivQ);
 800bbae:	f8d6 308c 	ldr.w	r3, [r6, #140]	; 0x8c
 800bbb2:	6a21      	ldr	r1, [r4, #32]
 800bbb4:	f423 53f8 	bic.w	r3, r3, #7936	; 0x1f00
 800bbb8:	3901      	subs	r1, #1
 800bbba:	ea43 2301 	orr.w	r3, r3, r1, lsl #8
 800bbbe:	f8c6 308c 	str.w	r3, [r6, #140]	; 0x8c
    if(((PeriphClkInit->PeriphClockSelection) & RCC_PERIPHCLK_LTDC) == (RCC_PERIPHCLK_LTDC))
 800bbc2:	0713      	lsls	r3, r2, #28
 800bbc4:	d514      	bpl.n	800bbf0 <HAL_RCCEx_PeriphCLKConfig+0x174>
      tmpreg1 = ((RCC->PLLSAICFGR & RCC_PLLSAICFGR_PLLSAIQ) >> RCC_PLLSAICFGR_PLLSAIQ_Pos);
 800bbc6:	4a41      	ldr	r2, [pc, #260]	; (800bccc <HAL_RCCEx_PeriphCLKConfig+0x250>)
      __HAL_RCC_PLLSAI_CONFIG(PeriphClkInit->PLLSAI.PLLSAIN , tmpreg1, PeriphClkInit->PLLSAI.PLLSAIR);
 800bbc8:	69a3      	ldr	r3, [r4, #24]
      tmpreg1 = ((RCC->PLLSAICFGR & RCC_PLLSAICFGR_PLLSAIQ) >> RCC_PLLSAICFGR_PLLSAIQ_Pos);
 800bbca:	f8d2 1088 	ldr.w	r1, [r2, #136]	; 0x88
      __HAL_RCC_PLLSAI_CONFIG(PeriphClkInit->PLLSAI.PLLSAIN , tmpreg1, PeriphClkInit->PLLSAI.PLLSAIR);
 800bbce:	6920      	ldr	r0, [r4, #16]
 800bbd0:	071b      	lsls	r3, r3, #28
 800bbd2:	f001 6170 	and.w	r1, r1, #251658240	; 0xf000000
 800bbd6:	ea43 1380 	orr.w	r3, r3, r0, lsl #6
 800bbda:	430b      	orrs	r3, r1
 800bbdc:	f8c2 3088 	str.w	r3, [r2, #136]	; 0x88
      __HAL_RCC_PLLSAI_PLLSAICLKDIVR_CONFIG(PeriphClkInit->PLLSAIDivR);
 800bbe0:	f8d2 308c 	ldr.w	r3, [r2, #140]	; 0x8c
 800bbe4:	6a61      	ldr	r1, [r4, #36]	; 0x24
 800bbe6:	f423 3340 	bic.w	r3, r3, #196608	; 0x30000
 800bbea:	430b      	orrs	r3, r1
 800bbec:	f8c2 308c 	str.w	r3, [r2, #140]	; 0x8c
    __HAL_RCC_PLLSAI_ENABLE();
 800bbf0:	4b35      	ldr	r3, [pc, #212]	; (800bcc8 <HAL_RCCEx_PeriphCLKConfig+0x24c>)
    while(__HAL_RCC_PLLSAI_GET_FLAG() == RESET)
 800bbf2:	4e36      	ldr	r6, [pc, #216]	; (800bccc <HAL_RCCEx_PeriphCLKConfig+0x250>)
    __HAL_RCC_PLLSAI_ENABLE();
 800bbf4:	2201      	movs	r2, #1
 800bbf6:	671a      	str	r2, [r3, #112]	; 0x70
    tickstart = HAL_GetTick();
 800bbf8:	f7fd fa44 	bl	8009084 <HAL_GetTick>
 800bbfc:	4605      	mov	r5, r0
    while(__HAL_RCC_PLLSAI_GET_FLAG() == RESET)
 800bbfe:	e004      	b.n	800bc0a <HAL_RCCEx_PeriphCLKConfig+0x18e>
      if((HAL_GetTick() - tickstart ) > PLLSAI_TIMEOUT_VALUE)
 800bc00:	f7fd fa40 	bl	8009084 <HAL_GetTick>
 800bc04:	1b40      	subs	r0, r0, r5
 800bc06:	2802      	cmp	r0, #2
 800bc08:	d8af      	bhi.n	800bb6a <HAL_RCCEx_PeriphCLKConfig+0xee>
    while(__HAL_RCC_PLLSAI_GET_FLAG() == RESET)
 800bc0a:	6833      	ldr	r3, [r6, #0]
 800bc0c:	009f      	lsls	r7, r3, #2
 800bc0e:	d5f7      	bpl.n	800bc00 <HAL_RCCEx_PeriphCLKConfig+0x184>
  if(((PeriphClkInit->PeriphClockSelection) & RCC_PERIPHCLK_RTC) == (RCC_PERIPHCLK_RTC))
 800bc10:	6823      	ldr	r3, [r4, #0]
 800bc12:	e73d      	b.n	800ba90 <HAL_RCCEx_PeriphCLKConfig+0x14>
  return HAL_OK;
 800bc14:	4618      	mov	r0, r3
}
 800bc16:	b003      	add	sp, #12
 800bc18:	bdf0      	pop	{r4, r5, r6, r7, pc}
    __HAL_RCC_PWR_CLK_ENABLE();
 800bc1a:	4b2c      	ldr	r3, [pc, #176]	; (800bccc <HAL_RCCEx_PeriphCLKConfig+0x250>)
    PWR->CR |= PWR_CR_DBP;
 800bc1c:	4d2c      	ldr	r5, [pc, #176]	; (800bcd0 <HAL_RCCEx_PeriphCLKConfig+0x254>)
    __HAL_RCC_PWR_CLK_ENABLE();
 800bc1e:	2200      	movs	r2, #0
 800bc20:	9201      	str	r2, [sp, #4]
 800bc22:	6c1a      	ldr	r2, [r3, #64]	; 0x40
 800bc24:	f042 5280 	orr.w	r2, r2, #268435456	; 0x10000000
 800bc28:	641a      	str	r2, [r3, #64]	; 0x40
 800bc2a:	6c1b      	ldr	r3, [r3, #64]	; 0x40
 800bc2c:	f003 5380 	and.w	r3, r3, #268435456	; 0x10000000
 800bc30:	9301      	str	r3, [sp, #4]
 800bc32:	9b01      	ldr	r3, [sp, #4]
    PWR->CR |= PWR_CR_DBP;
 800bc34:	682b      	ldr	r3, [r5, #0]
 800bc36:	f443 7380 	orr.w	r3, r3, #256	; 0x100
 800bc3a:	602b      	str	r3, [r5, #0]
    tickstart = HAL_GetTick();
 800bc3c:	f7fd fa22 	bl	8009084 <HAL_GetTick>
 800bc40:	4606      	mov	r6, r0
    while((PWR->CR & PWR_CR_DBP) == RESET)
 800bc42:	e004      	b.n	800bc4e <HAL_RCCEx_PeriphCLKConfig+0x1d2>
      if((HAL_GetTick() - tickstart ) > RCC_DBP_TIMEOUT_VALUE)
 800bc44:	f7fd fa1e 	bl	8009084 <HAL_GetTick>
 800bc48:	1b83      	subs	r3, r0, r6
 800bc4a:	2b02      	cmp	r3, #2
 800bc4c:	d88d      	bhi.n	800bb6a <HAL_RCCEx_PeriphCLKConfig+0xee>
    while((PWR->CR & PWR_CR_DBP) == RESET)
 800bc4e:	682b      	ldr	r3, [r5, #0]
 800bc50:	05d9      	lsls	r1, r3, #23
 800bc52:	d5f7      	bpl.n	800bc44 <HAL_RCCEx_PeriphCLKConfig+0x1c8>
    tmpreg1 = (RCC->BDCR & RCC_BDCR_RTCSEL);
 800bc54:	4d1d      	ldr	r5, [pc, #116]	; (800bccc <HAL_RCCEx_PeriphCLKConfig+0x250>)
    if((tmpreg1 != 0x00000000U) && ((tmpreg1) != (PeriphClkInit->RTCClockSelection & RCC_BDCR_RTCSEL)))
 800bc56:	6aa3      	ldr	r3, [r4, #40]	; 0x28
    tmpreg1 = (RCC->BDCR & RCC_BDCR_RTCSEL);
 800bc58:	6f2a      	ldr	r2, [r5, #112]	; 0x70
    if((tmpreg1 != 0x00000000U) && ((tmpreg1) != (PeriphClkInit->RTCClockSelection & RCC_BDCR_RTCSEL)))
 800bc5a:	f412 7240 	ands.w	r2, r2, #768	; 0x300
 800bc5e:	d111      	bne.n	800bc84 <HAL_RCCEx_PeriphCLKConfig+0x208>
    __HAL_RCC_RTC_CONFIG(PeriphClkInit->RTCClockSelection);
 800bc60:	f403 7240 	and.w	r2, r3, #768	; 0x300
 800bc64:	f5b2 7f40 	cmp.w	r2, #768	; 0x300
 800bc68:	d021      	beq.n	800bcae <HAL_RCCEx_PeriphCLKConfig+0x232>
 800bc6a:	4918      	ldr	r1, [pc, #96]	; (800bccc <HAL_RCCEx_PeriphCLKConfig+0x250>)
 800bc6c:	688a      	ldr	r2, [r1, #8]
 800bc6e:	f422 12f8 	bic.w	r2, r2, #2031616	; 0x1f0000
 800bc72:	608a      	str	r2, [r1, #8]
 800bc74:	4a15      	ldr	r2, [pc, #84]	; (800bccc <HAL_RCCEx_PeriphCLKConfig+0x250>)
 800bc76:	6f11      	ldr	r1, [r2, #112]	; 0x70
 800bc78:	f3c3 030b 	ubfx	r3, r3, #0, #12
 800bc7c:	430b      	orrs	r3, r1
 800bc7e:	6713      	str	r3, [r2, #112]	; 0x70
  if(((PeriphClkInit->PeriphClockSelection) & RCC_PERIPHCLK_TIM) == (RCC_PERIPHCLK_TIM))
 800bc80:	6823      	ldr	r3, [r4, #0]
 800bc82:	e708      	b.n	800ba96 <HAL_RCCEx_PeriphCLKConfig+0x1a>
    if((tmpreg1 != 0x00000000U) && ((tmpreg1) != (PeriphClkInit->RTCClockSelection & RCC_BDCR_RTCSEL)))
 800bc84:	f403 7140 	and.w	r1, r3, #768	; 0x300
 800bc88:	4291      	cmp	r1, r2
 800bc8a:	d0eb      	beq.n	800bc64 <HAL_RCCEx_PeriphCLKConfig+0x1e8>
      tmpreg1 = (RCC->BDCR & ~(RCC_BDCR_RTCSEL));
 800bc8c:	6f2b      	ldr	r3, [r5, #112]	; 0x70
      __HAL_RCC_BACKUPRESET_FORCE();
 800bc8e:	4a0e      	ldr	r2, [pc, #56]	; (800bcc8 <HAL_RCCEx_PeriphCLKConfig+0x24c>)
 800bc90:	2101      	movs	r1, #1
 800bc92:	f8c2 1e40 	str.w	r1, [r2, #3648]	; 0xe40
      tmpreg1 = (RCC->BDCR & ~(RCC_BDCR_RTCSEL));
 800bc96:	f423 7340 	bic.w	r3, r3, #768	; 0x300
      __HAL_RCC_BACKUPRESET_RELEASE();
 800bc9a:	2100      	movs	r1, #0
 800bc9c:	f8c2 1e40 	str.w	r1, [r2, #3648]	; 0xe40
      RCC->BDCR = tmpreg1;
 800bca0:	672b      	str	r3, [r5, #112]	; 0x70
      if(HAL_IS_BIT_SET(RCC->BDCR, RCC_BDCR_LSEON))
 800bca2:	6f2b      	ldr	r3, [r5, #112]	; 0x70
 800bca4:	07da      	lsls	r2, r3, #31
 800bca6:	f53f af52 	bmi.w	800bb4e <HAL_RCCEx_PeriphCLKConfig+0xd2>
    __HAL_RCC_RTC_CONFIG(PeriphClkInit->RTCClockSelection);
 800bcaa:	6aa3      	ldr	r3, [r4, #40]	; 0x28
 800bcac:	e7d8      	b.n	800bc60 <HAL_RCCEx_PeriphCLKConfig+0x1e4>
 800bcae:	4807      	ldr	r0, [pc, #28]	; (800bccc <HAL_RCCEx_PeriphCLKConfig+0x250>)
 800bcb0:	6882      	ldr	r2, [r0, #8]
 800bcb2:	f023 4170 	bic.w	r1, r3, #4026531840	; 0xf0000000
 800bcb6:	f421 7140 	bic.w	r1, r1, #768	; 0x300
 800bcba:	f422 12f8 	bic.w	r2, r2, #2031616	; 0x1f0000
 800bcbe:	430a      	orrs	r2, r1
 800bcc0:	6082      	str	r2, [r0, #8]
 800bcc2:	e7d7      	b.n	800bc74 <HAL_RCCEx_PeriphCLKConfig+0x1f8>
 800bcc4:	42471000 	.word	0x42471000
 800bcc8:	42470000 	.word	0x42470000
 800bccc:	40023800 	.word	0x40023800
 800bcd0:	40007000 	.word	0x40007000

0800bcd4 <HAL_SDRAM_Init>:
  * @retval HAL status
  */
HAL_StatusTypeDef HAL_SDRAM_Init(SDRAM_HandleTypeDef *hsdram, FMC_SDRAM_TimingTypeDef *Timing)
{
  /* Check the SDRAM handle parameter */
  if (hsdram == NULL)
 800bcd4:	b1f0      	cbz	r0, 800bd14 <HAL_SDRAM_Init+0x40>
{
 800bcd6:	b538      	push	{r3, r4, r5, lr}
  {
    return HAL_ERROR;
  }

  if (hsdram->State == HAL_SDRAM_STATE_RESET)
 800bcd8:	f890 302c 	ldrb.w	r3, [r0, #44]	; 0x2c
 800bcdc:	460d      	mov	r5, r1
 800bcde:	4604      	mov	r4, r0
 800bce0:	f003 02ff 	and.w	r2, r3, #255	; 0xff
 800bce4:	b18b      	cbz	r3, 800bd0a <HAL_SDRAM_Init+0x36>

  /* Initialize the SDRAM controller state */
  hsdram->State = HAL_SDRAM_STATE_BUSY;

  /* Initialize SDRAM control Interface */
  (void)FMC_SDRAM_Init(hsdram->Instance, &(hsdram->Init));
 800bce6:	4621      	mov	r1, r4
  hsdram->State = HAL_SDRAM_STATE_BUSY;
 800bce8:	2302      	movs	r3, #2
 800bcea:	f884 302c 	strb.w	r3, [r4, #44]	; 0x2c
  (void)FMC_SDRAM_Init(hsdram->Instance, &(hsdram->Init));
 800bcee:	f851 0b04 	ldr.w	r0, [r1], #4
 800bcf2:	f000 ffcd 	bl	800cc90 <FMC_SDRAM_Init>

  /* Initialize SDRAM timing Interface */
  (void)FMC_SDRAM_Timing_Init(hsdram->Instance, Timing, hsdram->Init.SDBank);
 800bcf6:	e9d4 0200 	ldrd	r0, r2, [r4]
 800bcfa:	4629      	mov	r1, r5
 800bcfc:	f001 f806 	bl	800cd0c <FMC_SDRAM_Timing_Init>
  /* Update the SDRAM controller state */
  hsdram->State = HAL_SDRAM_STATE_READY;
 800bd00:	2301      	movs	r3, #1
 800bd02:	f884 302c 	strb.w	r3, [r4, #44]	; 0x2c

  return HAL_OK;
 800bd06:	2000      	movs	r0, #0
}
 800bd08:	bd38      	pop	{r3, r4, r5, pc}
    hsdram->Lock = HAL_UNLOCKED;
 800bd0a:	f880 202d 	strb.w	r2, [r0, #45]	; 0x2d
    HAL_SDRAM_MspInit(hsdram);
 800bd0e:	f7f6 faa5 	bl	800225c <HAL_SDRAM_MspInit>
 800bd12:	e7e8      	b.n	800bce6 <HAL_SDRAM_Init+0x12>
    return HAL_ERROR;
 800bd14:	2001      	movs	r0, #1
}
 800bd16:	4770      	bx	lr

0800bd18 <HAL_SDRAM_SendCommand>:
  * @param  Timeout Timeout duration
  * @retval HAL status
  */
HAL_StatusTypeDef HAL_SDRAM_SendCommand(SDRAM_HandleTypeDef *hsdram, FMC_SDRAM_CommandTypeDef *Command,
                                        uint32_t Timeout)
{
 800bd18:	b570      	push	{r4, r5, r6, lr}
  HAL_SDRAM_StateTypeDef state = hsdram->State;
 800bd1a:	f890 302c 	ldrb.w	r3, [r0, #44]	; 0x2c

  /* Check the SDRAM controller state */
  if (state == HAL_SDRAM_STATE_BUSY)
 800bd1e:	2b02      	cmp	r3, #2
{
 800bd20:	4605      	mov	r5, r0
  HAL_SDRAM_StateTypeDef state = hsdram->State;
 800bd22:	b2d8      	uxtb	r0, r3
  if (state == HAL_SDRAM_STATE_BUSY)
 800bd24:	d004      	beq.n	800bd30 <HAL_SDRAM_SendCommand+0x18>
  {
    return HAL_BUSY;
  }
  else if ((state == HAL_SDRAM_STATE_READY) || (state == HAL_SDRAM_STATE_PRECHARGED))
 800bd26:	f000 04fb 	and.w	r4, r0, #251	; 0xfb
 800bd2a:	2c01      	cmp	r4, #1
 800bd2c:	d001      	beq.n	800bd32 <HAL_SDRAM_SendCommand+0x1a>
      hsdram->State = HAL_SDRAM_STATE_READY;
    }
  }
  else
  {
    return HAL_ERROR;
 800bd2e:	2001      	movs	r0, #1
  }

  return HAL_OK;
}
 800bd30:	bd70      	pop	{r4, r5, r6, pc}
    hsdram->State = HAL_SDRAM_STATE_BUSY;
 800bd32:	460e      	mov	r6, r1
 800bd34:	2302      	movs	r3, #2
 800bd36:	f885 302c 	strb.w	r3, [r5, #44]	; 0x2c
    (void)FMC_SDRAM_SendCommand(hsdram->Instance, Command, Timeout);
 800bd3a:	6828      	ldr	r0, [r5, #0]
 800bd3c:	f001 f832 	bl	800cda4 <FMC_SDRAM_SendCommand>
    if (Command->CommandMode == FMC_SDRAM_CMD_PALL)
 800bd40:	6833      	ldr	r3, [r6, #0]
 800bd42:	2b02      	cmp	r3, #2
      hsdram->State = HAL_SDRAM_STATE_PRECHARGED;
 800bd44:	bf06      	itte	eq
 800bd46:	2305      	moveq	r3, #5
 800bd48:	f885 302c 	strbeq.w	r3, [r5, #44]	; 0x2c
      hsdram->State = HAL_SDRAM_STATE_READY;
 800bd4c:	f885 402c 	strbne.w	r4, [r5, #44]	; 0x2c
  return HAL_OK;
 800bd50:	2000      	movs	r0, #0
}
 800bd52:	bd70      	pop	{r4, r5, r6, pc}

0800bd54 <HAL_SDRAM_ProgramRefreshRate>:
  *                the configuration information for SDRAM module.
  * @param  RefreshRate The SDRAM refresh rate value
  * @retval HAL status
  */
HAL_StatusTypeDef HAL_SDRAM_ProgramRefreshRate(SDRAM_HandleTypeDef *hsdram, uint32_t RefreshRate)
{
 800bd54:	b538      	push	{r3, r4, r5, lr}
  /* Check the SDRAM controller state */
  if (hsdram->State == HAL_SDRAM_STATE_BUSY)
 800bd56:	f890 302c 	ldrb.w	r3, [r0, #44]	; 0x2c
 800bd5a:	2b02      	cmp	r3, #2
{
 800bd5c:	4604      	mov	r4, r0
  if (hsdram->State == HAL_SDRAM_STATE_BUSY)
 800bd5e:	b2d8      	uxtb	r0, r3
 800bd60:	d005      	beq.n	800bd6e <HAL_SDRAM_ProgramRefreshRate+0x1a>
  {
    return HAL_BUSY;
  }
  else if (hsdram->State == HAL_SDRAM_STATE_READY)
 800bd62:	f894 302c 	ldrb.w	r3, [r4, #44]	; 0x2c
 800bd66:	2b01      	cmp	r3, #1
 800bd68:	b2dd      	uxtb	r5, r3
 800bd6a:	d001      	beq.n	800bd70 <HAL_SDRAM_ProgramRefreshRate+0x1c>
    /* Update the SDRAM state */
    hsdram->State = HAL_SDRAM_STATE_READY;
  }
  else
  {
    return HAL_ERROR;
 800bd6c:	2001      	movs	r0, #1
  }

  return HAL_OK;
}
 800bd6e:	bd38      	pop	{r3, r4, r5, pc}
    hsdram->State = HAL_SDRAM_STATE_BUSY;
 800bd70:	2302      	movs	r3, #2
    (void)FMC_SDRAM_ProgramRefreshRate(hsdram->Instance, RefreshRate);
 800bd72:	6820      	ldr	r0, [r4, #0]
    hsdram->State = HAL_SDRAM_STATE_BUSY;
 800bd74:	f884 302c 	strb.w	r3, [r4, #44]	; 0x2c
    (void)FMC_SDRAM_ProgramRefreshRate(hsdram->Instance, RefreshRate);
 800bd78:	f001 f83e 	bl	800cdf8 <FMC_SDRAM_ProgramRefreshRate>
    hsdram->State = HAL_SDRAM_STATE_READY;
 800bd7c:	f884 502c 	strb.w	r5, [r4, #44]	; 0x2c
  return HAL_OK;
 800bd80:	2000      	movs	r0, #0
}
 800bd82:	bd38      	pop	{r3, r4, r5, pc}

0800bd84 <SPI_WaitFlagStateUntilTimeout.constprop.0>:
  * @param  State flag state to check
  * @param  Timeout Timeout duration
  * @param  Tickstart tick start value
  * @retval HAL status
  */
static HAL_StatusTypeDef SPI_WaitFlagStateUntilTimeout(SPI_HandleTypeDef *hspi, uint32_t Flag, FlagStatus State,
 800bd84:	e92d 41f0 	stmdb	sp!, {r4, r5, r6, r7, r8, lr}
 800bd88:	b082      	sub	sp, #8
 800bd8a:	461d      	mov	r5, r3
 800bd8c:	4616      	mov	r6, r2
 800bd8e:	460c      	mov	r4, r1
 800bd90:	4607      	mov	r7, r0
  __IO uint32_t count;
  uint32_t tmp_timeout;
  uint32_t tmp_tickstart;

  /* Adjust Timeout value  in case of end of transfer */
  tmp_timeout   = Timeout - (HAL_GetTick() - Tickstart);
 800bd92:	f7fd f977 	bl	8009084 <HAL_GetTick>
 800bd96:	4435      	add	r5, r6
 800bd98:	1a2d      	subs	r5, r5, r0
  tmp_tickstart = HAL_GetTick();
 800bd9a:	f7fd f973 	bl	8009084 <HAL_GetTick>

  /* Calculate Timeout based on a software loop to avoid blocking issue if Systick is disabled */
  count = tmp_timeout * ((SystemCoreClock * 32U) >> 20U);
 800bd9e:	4b27      	ldr	r3, [pc, #156]	; (800be3c <SPI_WaitFlagStateUntilTimeout.constprop.0+0xb8>)
 800bda0:	681b      	ldr	r3, [r3, #0]
 800bda2:	f3c3 33cb 	ubfx	r3, r3, #15, #12
 800bda6:	fb05 f303 	mul.w	r3, r5, r3
  tmp_tickstart = HAL_GetTick();
 800bdaa:	4680      	mov	r8, r0
  count = tmp_timeout * ((SystemCoreClock * 32U) >> 20U);
 800bdac:	9301      	str	r3, [sp, #4]

  while ((__HAL_SPI_GET_FLAG(hspi, Flag) ? SET : RESET) != State)
 800bdae:	1c73      	adds	r3, r6, #1
 800bdb0:	6839      	ldr	r1, [r7, #0]
 800bdb2:	d107      	bne.n	800bdc4 <SPI_WaitFlagStateUntilTimeout.constprop.0+0x40>
 800bdb4:	688b      	ldr	r3, [r1, #8]
 800bdb6:	ea34 0303 	bics.w	r3, r4, r3
 800bdba:	d0fb      	beq.n	800bdb4 <SPI_WaitFlagStateUntilTimeout.constprop.0+0x30>
      }
      count--;
    }
  }

  return HAL_OK;
 800bdbc:	2000      	movs	r0, #0
}
 800bdbe:	b002      	add	sp, #8
 800bdc0:	e8bd 81f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, pc}
  while ((__HAL_SPI_GET_FLAG(hspi, Flag) ? SET : RESET) != State)
 800bdc4:	688b      	ldr	r3, [r1, #8]
 800bdc6:	ea34 0303 	bics.w	r3, r4, r3
 800bdca:	d1f7      	bne.n	800bdbc <SPI_WaitFlagStateUntilTimeout.constprop.0+0x38>
      if (((HAL_GetTick() - tmp_tickstart) >= tmp_timeout) || (tmp_timeout == 0U))
 800bdcc:	f7fd f95a 	bl	8009084 <HAL_GetTick>
 800bdd0:	eba0 0008 	sub.w	r0, r0, r8
 800bdd4:	42a8      	cmp	r0, r5
 800bdd6:	d208      	bcs.n	800bdea <SPI_WaitFlagStateUntilTimeout.constprop.0+0x66>
      if (count == 0U)
 800bdd8:	9b01      	ldr	r3, [sp, #4]
        tmp_timeout = 0U;
 800bdda:	2b00      	cmp	r3, #0
      count--;
 800bddc:	9b01      	ldr	r3, [sp, #4]
 800bdde:	f103 33ff 	add.w	r3, r3, #4294967295
        tmp_timeout = 0U;
 800bde2:	bf08      	it	eq
 800bde4:	2500      	moveq	r5, #0
      count--;
 800bde6:	9301      	str	r3, [sp, #4]
 800bde8:	e7e1      	b.n	800bdae <SPI_WaitFlagStateUntilTimeout.constprop.0+0x2a>
        if ((hspi->Init.Mode == SPI_MODE_MASTER) && ((hspi->Init.Direction == SPI_DIRECTION_1LINE)
 800bdea:	e9d7 3100 	ldrd	r3, r1, [r7]
        __HAL_SPI_DISABLE_IT(hspi, (SPI_IT_TXE | SPI_IT_RXNE | SPI_IT_ERR));
 800bdee:	685a      	ldr	r2, [r3, #4]
        if ((hspi->Init.Mode == SPI_MODE_MASTER) && ((hspi->Init.Direction == SPI_DIRECTION_1LINE)
 800bdf0:	f5b1 7f82 	cmp.w	r1, #260	; 0x104
        __HAL_SPI_DISABLE_IT(hspi, (SPI_IT_TXE | SPI_IT_RXNE | SPI_IT_ERR));
 800bdf4:	f022 02e0 	bic.w	r2, r2, #224	; 0xe0
 800bdf8:	605a      	str	r2, [r3, #4]
        if ((hspi->Init.Mode == SPI_MODE_MASTER) && ((hspi->Init.Direction == SPI_DIRECTION_1LINE)
 800bdfa:	d013      	beq.n	800be24 <SPI_WaitFlagStateUntilTimeout.constprop.0+0xa0>
        if (hspi->Init.CRCCalculation == SPI_CRCCALCULATION_ENABLE)
 800bdfc:	6aba      	ldr	r2, [r7, #40]	; 0x28
 800bdfe:	f5b2 5f00 	cmp.w	r2, #8192	; 0x2000
 800be02:	d107      	bne.n	800be14 <SPI_WaitFlagStateUntilTimeout.constprop.0+0x90>
          SPI_RESET_CRC(hspi);
 800be04:	681a      	ldr	r2, [r3, #0]
 800be06:	f422 5200 	bic.w	r2, r2, #8192	; 0x2000
 800be0a:	601a      	str	r2, [r3, #0]
 800be0c:	681a      	ldr	r2, [r3, #0]
 800be0e:	f442 5200 	orr.w	r2, r2, #8192	; 0x2000
 800be12:	601a      	str	r2, [r3, #0]
        hspi->State = HAL_SPI_STATE_READY;
 800be14:	2201      	movs	r2, #1
        __HAL_UNLOCK(hspi);
 800be16:	2300      	movs	r3, #0
        hspi->State = HAL_SPI_STATE_READY;
 800be18:	f887 2051 	strb.w	r2, [r7, #81]	; 0x51
        __HAL_UNLOCK(hspi);
 800be1c:	f887 3050 	strb.w	r3, [r7, #80]	; 0x50
 800be20:	2003      	movs	r0, #3
 800be22:	e7cc      	b.n	800bdbe <SPI_WaitFlagStateUntilTimeout.constprop.0+0x3a>
        if ((hspi->Init.Mode == SPI_MODE_MASTER) && ((hspi->Init.Direction == SPI_DIRECTION_1LINE)
 800be24:	68ba      	ldr	r2, [r7, #8]
 800be26:	f5b2 4f00 	cmp.w	r2, #32768	; 0x8000
 800be2a:	d002      	beq.n	800be32 <SPI_WaitFlagStateUntilTimeout.constprop.0+0xae>
                                                     || (hspi->Init.Direction == SPI_DIRECTION_2LINES_RXONLY)))
 800be2c:	f5b2 6f80 	cmp.w	r2, #1024	; 0x400
 800be30:	d1e4      	bne.n	800bdfc <SPI_WaitFlagStateUntilTimeout.constprop.0+0x78>
          __HAL_SPI_DISABLE(hspi);
 800be32:	681a      	ldr	r2, [r3, #0]
 800be34:	f022 0240 	bic.w	r2, r2, #64	; 0x40
 800be38:	601a      	str	r2, [r3, #0]
 800be3a:	e7df      	b.n	800bdfc <SPI_WaitFlagStateUntilTimeout.constprop.0+0x78>
 800be3c:	20000078 	.word	0x20000078

0800be40 <SPI_EndRxTransaction>:
  * @param  Timeout Timeout duration
  * @param  Tickstart tick start value
  * @retval HAL status
  */
static HAL_StatusTypeDef SPI_EndRxTransaction(SPI_HandleTypeDef *hspi,  uint32_t Timeout, uint32_t Tickstart)
{
 800be40:	b538      	push	{r3, r4, r5, lr}
 800be42:	4613      	mov	r3, r2
  if ((hspi->Init.Mode == SPI_MODE_MASTER) && ((hspi->Init.Direction == SPI_DIRECTION_1LINE)
 800be44:	6842      	ldr	r2, [r0, #4]
 800be46:	f5b2 7f82 	cmp.w	r2, #260	; 0x104
{
 800be4a:	4604      	mov	r4, r0
  if ((hspi->Init.Mode == SPI_MODE_MASTER) && ((hspi->Init.Direction == SPI_DIRECTION_1LINE)
 800be4c:	d006      	beq.n	800be5c <SPI_EndRxTransaction+0x1c>
    }
  }
  else
  {
    /* Wait the RXNE reset */
    if (SPI_WaitFlagStateUntilTimeout(hspi, SPI_FLAG_RXNE, RESET, Timeout, Tickstart) != HAL_OK)
 800be4e:	460a      	mov	r2, r1
 800be50:	2101      	movs	r1, #1
 800be52:	f7ff ff97 	bl	800bd84 <SPI_WaitFlagStateUntilTimeout.constprop.0>
 800be56:	b978      	cbnz	r0, 800be78 <SPI_EndRxTransaction+0x38>
    {
      SET_BIT(hspi->ErrorCode, HAL_SPI_ERROR_FLAG);
      return HAL_TIMEOUT;
    }
  }
  return HAL_OK;
 800be58:	2000      	movs	r0, #0
}
 800be5a:	bd38      	pop	{r3, r4, r5, pc}
  if ((hspi->Init.Mode == SPI_MODE_MASTER) && ((hspi->Init.Direction == SPI_DIRECTION_1LINE)
 800be5c:	6882      	ldr	r2, [r0, #8]
 800be5e:	f5b2 4f00 	cmp.w	r2, #32768	; 0x8000
 800be62:	d01c      	beq.n	800be9e <SPI_EndRxTransaction+0x5e>
                                               || (hspi->Init.Direction == SPI_DIRECTION_2LINES_RXONLY)))
 800be64:	f5b2 6f80 	cmp.w	r2, #1024	; 0x400
 800be68:	d00c      	beq.n	800be84 <SPI_EndRxTransaction+0x44>
      if (SPI_WaitFlagStateUntilTimeout(hspi, SPI_FLAG_BSY, RESET, Timeout, Tickstart) != HAL_OK)
 800be6a:	460a      	mov	r2, r1
 800be6c:	4620      	mov	r0, r4
 800be6e:	2180      	movs	r1, #128	; 0x80
 800be70:	f7ff ff88 	bl	800bd84 <SPI_WaitFlagStateUntilTimeout.constprop.0>
 800be74:	2800      	cmp	r0, #0
 800be76:	d0ef      	beq.n	800be58 <SPI_EndRxTransaction+0x18>
      SET_BIT(hspi->ErrorCode, HAL_SPI_ERROR_FLAG);
 800be78:	6d63      	ldr	r3, [r4, #84]	; 0x54
 800be7a:	f043 0320 	orr.w	r3, r3, #32
      return HAL_TIMEOUT;
 800be7e:	2003      	movs	r0, #3
      SET_BIT(hspi->ErrorCode, HAL_SPI_ERROR_FLAG);
 800be80:	6563      	str	r3, [r4, #84]	; 0x54
}
 800be82:	bd38      	pop	{r3, r4, r5, pc}
    __HAL_SPI_DISABLE(hspi);
 800be84:	6805      	ldr	r5, [r0, #0]
      if (SPI_WaitFlagStateUntilTimeout(hspi, SPI_FLAG_RXNE, RESET, Timeout, Tickstart) != HAL_OK)
 800be86:	460a      	mov	r2, r1
    __HAL_SPI_DISABLE(hspi);
 800be88:	6829      	ldr	r1, [r5, #0]
 800be8a:	f021 0140 	bic.w	r1, r1, #64	; 0x40
 800be8e:	6029      	str	r1, [r5, #0]
      if (SPI_WaitFlagStateUntilTimeout(hspi, SPI_FLAG_RXNE, RESET, Timeout, Tickstart) != HAL_OK)
 800be90:	2101      	movs	r1, #1
 800be92:	f7ff ff77 	bl	800bd84 <SPI_WaitFlagStateUntilTimeout.constprop.0>
 800be96:	2800      	cmp	r0, #0
 800be98:	d1ee      	bne.n	800be78 <SPI_EndRxTransaction+0x38>
  return HAL_OK;
 800be9a:	2000      	movs	r0, #0
 800be9c:	e7dd      	b.n	800be5a <SPI_EndRxTransaction+0x1a>
    __HAL_SPI_DISABLE(hspi);
 800be9e:	6800      	ldr	r0, [r0, #0]
 800bea0:	6802      	ldr	r2, [r0, #0]
 800bea2:	f022 0240 	bic.w	r2, r2, #64	; 0x40
 800bea6:	6002      	str	r2, [r0, #0]
      if (SPI_WaitFlagStateUntilTimeout(hspi, SPI_FLAG_BSY, RESET, Timeout, Tickstart) != HAL_OK)
 800bea8:	460a      	mov	r2, r1
 800beaa:	4620      	mov	r0, r4
 800beac:	2180      	movs	r1, #128	; 0x80
 800beae:	f7ff ff69 	bl	800bd84 <SPI_WaitFlagStateUntilTimeout.constprop.0>
 800beb2:	2800      	cmp	r0, #0
 800beb4:	d0d0      	beq.n	800be58 <SPI_EndRxTransaction+0x18>
 800beb6:	e7df      	b.n	800be78 <SPI_EndRxTransaction+0x38>

0800beb8 <HAL_SPI_Init>:
  if (hspi == NULL)
 800beb8:	2800      	cmp	r0, #0
 800beba:	d05c      	beq.n	800bf76 <HAL_SPI_Init+0xbe>
{
 800bebc:	b570      	push	{r4, r5, r6, lr}
 800bebe:	4604      	mov	r4, r0
  if (hspi->Init.TIMode == SPI_TIMODE_DISABLE)
 800bec0:	6a40      	ldr	r0, [r0, #36]	; 0x24
 800bec2:	2800      	cmp	r0, #0
 800bec4:	d047      	beq.n	800bf56 <HAL_SPI_Init+0x9e>
    hspi->Init.CLKPolarity = SPI_POLARITY_LOW;
 800bec6:	2300      	movs	r3, #0
    hspi->Init.CLKPhase    = SPI_PHASE_1EDGE;
 800bec8:	e9c4 3304 	strd	r3, r3, [r4, #16]
  if (hspi->State == HAL_SPI_STATE_RESET)
 800becc:	f894 3051 	ldrb.w	r3, [r4, #81]	; 0x51
  hspi->Init.CRCCalculation = SPI_CRCCALCULATION_DISABLE;
 800bed0:	2200      	movs	r2, #0
 800bed2:	62a2      	str	r2, [r4, #40]	; 0x28
  if (hspi->State == HAL_SPI_STATE_RESET)
 800bed4:	f003 01ff 	and.w	r1, r3, #255	; 0xff
 800bed8:	2b00      	cmp	r3, #0
 800beda:	d042      	beq.n	800bf62 <HAL_SPI_Init+0xaa>
 800bedc:	4694      	mov	ip, r2
  __HAL_SPI_DISABLE(hspi);
 800bede:	6821      	ldr	r1, [r4, #0]
  WRITE_REG(hspi->Instance->CR1, ((hspi->Init.Mode & (SPI_CR1_MSTR | SPI_CR1_SSI)) |
 800bee0:	68a5      	ldr	r5, [r4, #8]
 800bee2:	69a2      	ldr	r2, [r4, #24]
 800bee4:	6a26      	ldr	r6, [r4, #32]
  hspi->State = HAL_SPI_STATE_BUSY;
 800bee6:	2302      	movs	r3, #2
 800bee8:	f884 3051 	strb.w	r3, [r4, #81]	; 0x51
  __HAL_SPI_DISABLE(hspi);
 800beec:	680b      	ldr	r3, [r1, #0]
 800beee:	f023 0340 	bic.w	r3, r3, #64	; 0x40
 800bef2:	600b      	str	r3, [r1, #0]
  WRITE_REG(hspi->Instance->CR1, ((hspi->Init.Mode & (SPI_CR1_MSTR | SPI_CR1_SSI)) |
 800bef4:	6863      	ldr	r3, [r4, #4]
 800bef6:	f405 4504 	and.w	r5, r5, #33792	; 0x8400
 800befa:	f403 7382 	and.w	r3, r3, #260	; 0x104
 800befe:	432b      	orrs	r3, r5
 800bf00:	68e5      	ldr	r5, [r4, #12]
 800bf02:	f405 6500 	and.w	r5, r5, #2048	; 0x800
 800bf06:	432b      	orrs	r3, r5
 800bf08:	6925      	ldr	r5, [r4, #16]
 800bf0a:	f005 0502 	and.w	r5, r5, #2
 800bf0e:	432b      	orrs	r3, r5
 800bf10:	6965      	ldr	r5, [r4, #20]
 800bf12:	f005 0501 	and.w	r5, r5, #1
 800bf16:	432b      	orrs	r3, r5
 800bf18:	69e5      	ldr	r5, [r4, #28]
 800bf1a:	f006 0e80 	and.w	lr, r6, #128	; 0x80
 800bf1e:	f402 7600 	and.w	r6, r2, #512	; 0x200
 800bf22:	f005 0538 	and.w	r5, r5, #56	; 0x38
 800bf26:	4333      	orrs	r3, r6
 800bf28:	432b      	orrs	r3, r5
  WRITE_REG(hspi->Instance->CR2, (((hspi->Init.NSS >> 16U) & SPI_CR2_SSOE) | (hspi->Init.TIMode & SPI_CR2_FRF)));
 800bf2a:	0c12      	lsrs	r2, r2, #16
 800bf2c:	f000 0010 	and.w	r0, r0, #16
  WRITE_REG(hspi->Instance->CR1, ((hspi->Init.Mode & (SPI_CR1_MSTR | SPI_CR1_SSI)) |
 800bf30:	ea43 030e 	orr.w	r3, r3, lr
  WRITE_REG(hspi->Instance->CR2, (((hspi->Init.NSS >> 16U) & SPI_CR2_SSOE) | (hspi->Init.TIMode & SPI_CR2_FRF)));
 800bf34:	f002 0204 	and.w	r2, r2, #4
  WRITE_REG(hspi->Instance->CR1, ((hspi->Init.Mode & (SPI_CR1_MSTR | SPI_CR1_SSI)) |
 800bf38:	ea43 030c 	orr.w	r3, r3, ip
  WRITE_REG(hspi->Instance->CR2, (((hspi->Init.NSS >> 16U) & SPI_CR2_SSOE) | (hspi->Init.TIMode & SPI_CR2_FRF)));
 800bf3c:	4302      	orrs	r2, r0
  WRITE_REG(hspi->Instance->CR1, ((hspi->Init.Mode & (SPI_CR1_MSTR | SPI_CR1_SSI)) |
 800bf3e:	600b      	str	r3, [r1, #0]
  WRITE_REG(hspi->Instance->CR2, (((hspi->Init.NSS >> 16U) & SPI_CR2_SSOE) | (hspi->Init.TIMode & SPI_CR2_FRF)));
 800bf40:	604a      	str	r2, [r1, #4]
  CLEAR_BIT(hspi->Instance->I2SCFGR, SPI_I2SCFGR_I2SMOD);
 800bf42:	69cb      	ldr	r3, [r1, #28]
  hspi->ErrorCode = HAL_SPI_ERROR_NONE;
 800bf44:	2000      	movs	r0, #0
  CLEAR_BIT(hspi->Instance->I2SCFGR, SPI_I2SCFGR_I2SMOD);
 800bf46:	f423 6300 	bic.w	r3, r3, #2048	; 0x800
  hspi->State     = HAL_SPI_STATE_READY;
 800bf4a:	2201      	movs	r2, #1
  CLEAR_BIT(hspi->Instance->I2SCFGR, SPI_I2SCFGR_I2SMOD);
 800bf4c:	61cb      	str	r3, [r1, #28]
  hspi->ErrorCode = HAL_SPI_ERROR_NONE;
 800bf4e:	6560      	str	r0, [r4, #84]	; 0x54
  hspi->State     = HAL_SPI_STATE_READY;
 800bf50:	f884 2051 	strb.w	r2, [r4, #81]	; 0x51
}
 800bf54:	bd70      	pop	{r4, r5, r6, pc}
    if (hspi->Init.Mode == SPI_MODE_MASTER)
 800bf56:	6863      	ldr	r3, [r4, #4]
 800bf58:	f5b3 7f82 	cmp.w	r3, #260	; 0x104
 800bf5c:	d0b6      	beq.n	800becc <HAL_SPI_Init+0x14>
      hspi->Init.BaudRatePrescaler = SPI_BAUDRATEPRESCALER_2;
 800bf5e:	61e0      	str	r0, [r4, #28]
 800bf60:	e7b4      	b.n	800becc <HAL_SPI_Init+0x14>
    HAL_SPI_MspInit(hspi);
 800bf62:	4620      	mov	r0, r4
    hspi->Lock = HAL_UNLOCKED;
 800bf64:	f884 1050 	strb.w	r1, [r4, #80]	; 0x50
    HAL_SPI_MspInit(hspi);
 800bf68:	f7f6 f8ce 	bl	8002108 <HAL_SPI_MspInit>
  WRITE_REG(hspi->Instance->CR2, (((hspi->Init.NSS >> 16U) & SPI_CR2_SSOE) | (hspi->Init.TIMode & SPI_CR2_FRF)));
 800bf6c:	e9d4 0309 	ldrd	r0, r3, [r4, #36]	; 0x24
  WRITE_REG(hspi->Instance->CR1, ((hspi->Init.Mode & (SPI_CR1_MSTR | SPI_CR1_SSI)) |
 800bf70:	f403 5c00 	and.w	ip, r3, #8192	; 0x2000
 800bf74:	e7b3      	b.n	800bede <HAL_SPI_Init+0x26>
    return HAL_ERROR;
 800bf76:	2001      	movs	r0, #1
}
 800bf78:	4770      	bx	lr
 800bf7a:	bf00      	nop

0800bf7c <HAL_SPI_Transmit>:
{
 800bf7c:	e92d 41f0 	stmdb	sp!, {r4, r5, r6, r7, r8, lr}
 800bf80:	4604      	mov	r4, r0
  __HAL_LOCK(hspi);
 800bf82:	f890 0050 	ldrb.w	r0, [r0, #80]	; 0x50
 800bf86:	2801      	cmp	r0, #1
{
 800bf88:	b082      	sub	sp, #8
  __HAL_LOCK(hspi);
 800bf8a:	f000 8085 	beq.w	800c098 <HAL_SPI_Transmit+0x11c>
 800bf8e:	461d      	mov	r5, r3
 800bf90:	2301      	movs	r3, #1
 800bf92:	f884 3050 	strb.w	r3, [r4, #80]	; 0x50
  tickstart = HAL_GetTick();
 800bf96:	4688      	mov	r8, r1
 800bf98:	4617      	mov	r7, r2
 800bf9a:	f7fd f873 	bl	8009084 <HAL_GetTick>
  if (hspi->State != HAL_SPI_STATE_READY)
 800bf9e:	f894 3051 	ldrb.w	r3, [r4, #81]	; 0x51
 800bfa2:	2b01      	cmp	r3, #1
  tickstart = HAL_GetTick();
 800bfa4:	4606      	mov	r6, r0
  if (hspi->State != HAL_SPI_STATE_READY)
 800bfa6:	b2d8      	uxtb	r0, r3
 800bfa8:	d009      	beq.n	800bfbe <HAL_SPI_Transmit+0x42>
    errorcode = HAL_BUSY;
 800bfaa:	2002      	movs	r0, #2
  hspi->State = HAL_SPI_STATE_READY;
 800bfac:	2201      	movs	r2, #1
  __HAL_UNLOCK(hspi);
 800bfae:	2300      	movs	r3, #0
  hspi->State = HAL_SPI_STATE_READY;
 800bfb0:	f884 2051 	strb.w	r2, [r4, #81]	; 0x51
  __HAL_UNLOCK(hspi);
 800bfb4:	f884 3050 	strb.w	r3, [r4, #80]	; 0x50
}
 800bfb8:	b002      	add	sp, #8
 800bfba:	e8bd 81f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, pc}
  if ((pData == NULL) || (Size == 0U))
 800bfbe:	f1b8 0f00 	cmp.w	r8, #0
 800bfc2:	d0f3      	beq.n	800bfac <HAL_SPI_Transmit+0x30>
 800bfc4:	2f00      	cmp	r7, #0
 800bfc6:	d0f1      	beq.n	800bfac <HAL_SPI_Transmit+0x30>
  if (hspi->Init.Direction == SPI_DIRECTION_1LINE)
 800bfc8:	68a2      	ldr	r2, [r4, #8]
    __HAL_SPI_DISABLE(hspi);
 800bfca:	6820      	ldr	r0, [r4, #0]
  hspi->pTxBuffPtr  = (uint8_t *)pData;
 800bfcc:	f8c4 8030 	str.w	r8, [r4, #48]	; 0x30
  hspi->ErrorCode   = HAL_SPI_ERROR_NONE;
 800bfd0:	2300      	movs	r3, #0
  hspi->State       = HAL_SPI_STATE_BUSY_TX;
 800bfd2:	2103      	movs	r1, #3
  if (hspi->Init.Direction == SPI_DIRECTION_1LINE)
 800bfd4:	f5b2 4f00 	cmp.w	r2, #32768	; 0x8000
  hspi->State       = HAL_SPI_STATE_BUSY_TX;
 800bfd8:	f884 1051 	strb.w	r1, [r4, #81]	; 0x51
  hspi->RxISR       = NULL;
 800bfdc:	e9c4 3310 	strd	r3, r3, [r4, #64]	; 0x40
  hspi->ErrorCode   = HAL_SPI_ERROR_NONE;
 800bfe0:	6563      	str	r3, [r4, #84]	; 0x54
  hspi->TxXferSize  = Size;
 800bfe2:	86a7      	strh	r7, [r4, #52]	; 0x34
  hspi->TxXferCount = Size;
 800bfe4:	86e7      	strh	r7, [r4, #54]	; 0x36
  hspi->pRxBuffPtr  = (uint8_t *)NULL;
 800bfe6:	63a3      	str	r3, [r4, #56]	; 0x38
  hspi->RxXferSize  = 0U;
 800bfe8:	87a3      	strh	r3, [r4, #60]	; 0x3c
  hspi->RxXferCount = 0U;
 800bfea:	87e3      	strh	r3, [r4, #62]	; 0x3e
  if (hspi->Init.Direction == SPI_DIRECTION_1LINE)
 800bfec:	f000 8085 	beq.w	800c0fa <HAL_SPI_Transmit+0x17e>
  if ((hspi->Instance->CR1 & SPI_CR1_SPE) != SPI_CR1_SPE)
 800bff0:	6803      	ldr	r3, [r0, #0]
 800bff2:	065b      	lsls	r3, r3, #25
    __HAL_SPI_DISABLE(hspi);
 800bff4:	4602      	mov	r2, r0
  if ((hspi->Instance->CR1 & SPI_CR1_SPE) != SPI_CR1_SPE)
 800bff6:	d403      	bmi.n	800c000 <HAL_SPI_Transmit+0x84>
    __HAL_SPI_ENABLE(hspi);
 800bff8:	6803      	ldr	r3, [r0, #0]
 800bffa:	f043 0340 	orr.w	r3, r3, #64	; 0x40
 800bffe:	6003      	str	r3, [r0, #0]
  if (hspi->Init.DataSize == SPI_DATASIZE_16BIT)
 800c000:	68e3      	ldr	r3, [r4, #12]
 800c002:	f5b3 6f00 	cmp.w	r3, #2048	; 0x800
 800c006:	d04b      	beq.n	800c0a0 <HAL_SPI_Transmit+0x124>
    if ((hspi->Init.Mode == SPI_MODE_SLAVE) || (initial_TxXferCount == 0x01U))
 800c008:	6863      	ldr	r3, [r4, #4]
 800c00a:	2b00      	cmp	r3, #0
 800c00c:	f000 8097 	beq.w	800c13e <HAL_SPI_Transmit+0x1c2>
 800c010:	2f01      	cmp	r7, #1
 800c012:	f000 8094 	beq.w	800c13e <HAL_SPI_Transmit+0x1c2>
    while (hspi->TxXferCount > 0U)
 800c016:	8ee3      	ldrh	r3, [r4, #54]	; 0x36
 800c018:	b29b      	uxth	r3, r3
 800c01a:	b1ab      	cbz	r3, 800c048 <HAL_SPI_Transmit+0xcc>
 800c01c:	1c68      	adds	r0, r5, #1
 800c01e:	f040 8083 	bne.w	800c128 <HAL_SPI_Transmit+0x1ac>
      if (__HAL_SPI_GET_FLAG(hspi, SPI_FLAG_TXE))
 800c022:	6823      	ldr	r3, [r4, #0]
 800c024:	689a      	ldr	r2, [r3, #8]
 800c026:	0791      	lsls	r1, r2, #30
 800c028:	f140 8094 	bpl.w	800c154 <HAL_SPI_Transmit+0x1d8>
        *((__IO uint8_t *)&hspi->Instance->DR) = (*hspi->pTxBuffPtr);
 800c02c:	6b22      	ldr	r2, [r4, #48]	; 0x30
 800c02e:	7812      	ldrb	r2, [r2, #0]
 800c030:	731a      	strb	r2, [r3, #12]
        hspi->TxXferCount--;
 800c032:	8ee1      	ldrh	r1, [r4, #54]	; 0x36
        hspi->pTxBuffPtr += sizeof(uint8_t);
 800c034:	6b23      	ldr	r3, [r4, #48]	; 0x30
        hspi->TxXferCount--;
 800c036:	3901      	subs	r1, #1
 800c038:	b289      	uxth	r1, r1
 800c03a:	86e1      	strh	r1, [r4, #54]	; 0x36
    while (hspi->TxXferCount > 0U)
 800c03c:	8ee1      	ldrh	r1, [r4, #54]	; 0x36
        hspi->pTxBuffPtr += sizeof(uint8_t);
 800c03e:	3301      	adds	r3, #1
    while (hspi->TxXferCount > 0U)
 800c040:	b289      	uxth	r1, r1
        hspi->pTxBuffPtr += sizeof(uint8_t);
 800c042:	6323      	str	r3, [r4, #48]	; 0x30
    while (hspi->TxXferCount > 0U)
 800c044:	2900      	cmp	r1, #0
 800c046:	d1ec      	bne.n	800c022 <HAL_SPI_Transmit+0xa6>
static HAL_StatusTypeDef SPI_EndRxTxTransaction(SPI_HandleTypeDef *hspi, uint32_t Timeout, uint32_t Tickstart)
{
  /* Timeout in µs */
  __IO uint32_t count = SPI_BSY_FLAG_WORKAROUND_TIMEOUT * (SystemCoreClock / 24U / 1000000U);
  /* Erratasheet: BSY bit may stay high at the end of a data transfer in Slave mode */
  if (hspi->Init.Mode == SPI_MODE_MASTER)
 800c048:	6861      	ldr	r1, [r4, #4]
  __IO uint32_t count = SPI_BSY_FLAG_WORKAROUND_TIMEOUT * (SystemCoreClock / 24U / 1000000U);
 800c04a:	4b5b      	ldr	r3, [pc, #364]	; (800c1b8 <HAL_SPI_Transmit+0x23c>)
 800c04c:	4a5b      	ldr	r2, [pc, #364]	; (800c1bc <HAL_SPI_Transmit+0x240>)
 800c04e:	681b      	ldr	r3, [r3, #0]
 800c050:	fba2 2303 	umull	r2, r3, r2, r3
 800c054:	0d5b      	lsrs	r3, r3, #21
 800c056:	f44f 727a 	mov.w	r2, #1000	; 0x3e8
 800c05a:	fb02 f303 	mul.w	r3, r2, r3
  if (hspi->Init.Mode == SPI_MODE_MASTER)
 800c05e:	f5b1 7f82 	cmp.w	r1, #260	; 0x104
  __IO uint32_t count = SPI_BSY_FLAG_WORKAROUND_TIMEOUT * (SystemCoreClock / 24U / 1000000U);
 800c062:	9301      	str	r3, [sp, #4]
  if (hspi->Init.Mode == SPI_MODE_MASTER)
 800c064:	d107      	bne.n	800c076 <HAL_SPI_Transmit+0xfa>
 800c066:	e098      	b.n	800c19a <HAL_SPI_Transmit+0x21e>
    {
      if (count == 0U)
      {
        break;
      }
      count--;
 800c068:	9b01      	ldr	r3, [sp, #4]
    } while (__HAL_SPI_GET_FLAG(hspi, SPI_FLAG_BSY) != RESET);
 800c06a:	6822      	ldr	r2, [r4, #0]
      count--;
 800c06c:	3b01      	subs	r3, #1
 800c06e:	9301      	str	r3, [sp, #4]
    } while (__HAL_SPI_GET_FLAG(hspi, SPI_FLAG_BSY) != RESET);
 800c070:	6893      	ldr	r3, [r2, #8]
 800c072:	061b      	lsls	r3, r3, #24
 800c074:	d502      	bpl.n	800c07c <HAL_SPI_Transmit+0x100>
      if (count == 0U)
 800c076:	9b01      	ldr	r3, [sp, #4]
 800c078:	2b00      	cmp	r3, #0
 800c07a:	d1f5      	bne.n	800c068 <HAL_SPI_Transmit+0xec>
  if (hspi->Init.Direction == SPI_DIRECTION_2LINES)
 800c07c:	68a3      	ldr	r3, [r4, #8]
 800c07e:	b933      	cbnz	r3, 800c08e <HAL_SPI_Transmit+0x112>
    __HAL_SPI_CLEAR_OVRFLAG(hspi);
 800c080:	6822      	ldr	r2, [r4, #0]
 800c082:	9300      	str	r3, [sp, #0]
 800c084:	68d3      	ldr	r3, [r2, #12]
 800c086:	9300      	str	r3, [sp, #0]
 800c088:	6893      	ldr	r3, [r2, #8]
 800c08a:	9300      	str	r3, [sp, #0]
 800c08c:	9b00      	ldr	r3, [sp, #0]
  if (hspi->ErrorCode != HAL_SPI_ERROR_NONE)
 800c08e:	6d60      	ldr	r0, [r4, #84]	; 0x54
    errorcode = HAL_BUSY;
 800c090:	3800      	subs	r0, #0
 800c092:	bf18      	it	ne
 800c094:	2001      	movne	r0, #1
error:
 800c096:	e789      	b.n	800bfac <HAL_SPI_Transmit+0x30>
  __HAL_LOCK(hspi);
 800c098:	2002      	movs	r0, #2
}
 800c09a:	b002      	add	sp, #8
 800c09c:	e8bd 81f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, pc}
    if ((hspi->Init.Mode == SPI_MODE_SLAVE) || (initial_TxXferCount == 0x01U))
 800c0a0:	6861      	ldr	r1, [r4, #4]
 800c0a2:	2900      	cmp	r1, #0
 800c0a4:	d176      	bne.n	800c194 <HAL_SPI_Transmit+0x218>
      hspi->Instance->DR = *((uint16_t *)hspi->pTxBuffPtr);
 800c0a6:	4643      	mov	r3, r8
 800c0a8:	f833 7b02 	ldrh.w	r7, [r3], #2
 800c0ac:	60c7      	str	r7, [r0, #12]
      hspi->pTxBuffPtr += sizeof(uint16_t);
 800c0ae:	6323      	str	r3, [r4, #48]	; 0x30
      hspi->TxXferCount--;
 800c0b0:	8ee3      	ldrh	r3, [r4, #54]	; 0x36
 800c0b2:	3b01      	subs	r3, #1
 800c0b4:	b29b      	uxth	r3, r3
 800c0b6:	86e3      	strh	r3, [r4, #54]	; 0x36
    while (hspi->TxXferCount > 0U)
 800c0b8:	8ee3      	ldrh	r3, [r4, #54]	; 0x36
 800c0ba:	b29b      	uxth	r3, r3
 800c0bc:	2b00      	cmp	r3, #0
 800c0be:	d0c4      	beq.n	800c04a <HAL_SPI_Transmit+0xce>
 800c0c0:	1c6b      	adds	r3, r5, #1
 800c0c2:	d15e      	bne.n	800c182 <HAL_SPI_Transmit+0x206>
      if (__HAL_SPI_GET_FLAG(hspi, SPI_FLAG_TXE))
 800c0c4:	6883      	ldr	r3, [r0, #8]
 800c0c6:	079f      	lsls	r7, r3, #30
 800c0c8:	d50f      	bpl.n	800c0ea <HAL_SPI_Transmit+0x16e>
        hspi->Instance->DR = *((uint16_t *)hspi->pTxBuffPtr);
 800c0ca:	6b22      	ldr	r2, [r4, #48]	; 0x30
 800c0cc:	f832 3b02 	ldrh.w	r3, [r2], #2
 800c0d0:	60c3      	str	r3, [r0, #12]
        hspi->TxXferCount--;
 800c0d2:	8ee3      	ldrh	r3, [r4, #54]	; 0x36
        hspi->pTxBuffPtr += sizeof(uint16_t);
 800c0d4:	6322      	str	r2, [r4, #48]	; 0x30
        hspi->TxXferCount--;
 800c0d6:	3b01      	subs	r3, #1
 800c0d8:	b29b      	uxth	r3, r3
 800c0da:	86e3      	strh	r3, [r4, #54]	; 0x36
    while (hspi->TxXferCount > 0U)
 800c0dc:	8ee3      	ldrh	r3, [r4, #54]	; 0x36
 800c0de:	b29b      	uxth	r3, r3
 800c0e0:	2b00      	cmp	r3, #0
 800c0e2:	d0b1      	beq.n	800c048 <HAL_SPI_Transmit+0xcc>
      if (__HAL_SPI_GET_FLAG(hspi, SPI_FLAG_TXE))
 800c0e4:	6883      	ldr	r3, [r0, #8]
 800c0e6:	079f      	lsls	r7, r3, #30
 800c0e8:	d4ef      	bmi.n	800c0ca <HAL_SPI_Transmit+0x14e>
        if ((((HAL_GetTick() - tickstart) >=  Timeout) && (Timeout != HAL_MAX_DELAY)) || (Timeout == 0U))
 800c0ea:	f7fc ffcb 	bl	8009084 <HAL_GetTick>
    while (hspi->TxXferCount > 0U)
 800c0ee:	8ee3      	ldrh	r3, [r4, #54]	; 0x36
 800c0f0:	b29b      	uxth	r3, r3
 800c0f2:	2b00      	cmp	r3, #0
 800c0f4:	d0a8      	beq.n	800c048 <HAL_SPI_Transmit+0xcc>
 800c0f6:	6820      	ldr	r0, [r4, #0]
 800c0f8:	e7e4      	b.n	800c0c4 <HAL_SPI_Transmit+0x148>
    __HAL_SPI_DISABLE(hspi);
 800c0fa:	6803      	ldr	r3, [r0, #0]
 800c0fc:	f023 0340 	bic.w	r3, r3, #64	; 0x40
 800c100:	6003      	str	r3, [r0, #0]
    SPI_1LINE_TX(hspi);
 800c102:	6803      	ldr	r3, [r0, #0]
 800c104:	f443 4380 	orr.w	r3, r3, #16384	; 0x4000
 800c108:	6003      	str	r3, [r0, #0]
 800c10a:	e771      	b.n	800bff0 <HAL_SPI_Transmit+0x74>
        *((__IO uint8_t *)&hspi->Instance->DR) = (*hspi->pTxBuffPtr);
 800c10c:	6b22      	ldr	r2, [r4, #48]	; 0x30
 800c10e:	7812      	ldrb	r2, [r2, #0]
 800c110:	731a      	strb	r2, [r3, #12]
        hspi->TxXferCount--;
 800c112:	8ee3      	ldrh	r3, [r4, #54]	; 0x36
        hspi->pTxBuffPtr += sizeof(uint8_t);
 800c114:	6b22      	ldr	r2, [r4, #48]	; 0x30
        hspi->TxXferCount--;
 800c116:	3b01      	subs	r3, #1
        hspi->pTxBuffPtr += sizeof(uint8_t);
 800c118:	3201      	adds	r2, #1
        hspi->TxXferCount--;
 800c11a:	b29b      	uxth	r3, r3
        hspi->pTxBuffPtr += sizeof(uint8_t);
 800c11c:	6322      	str	r2, [r4, #48]	; 0x30
        hspi->TxXferCount--;
 800c11e:	86e3      	strh	r3, [r4, #54]	; 0x36
    while (hspi->TxXferCount > 0U)
 800c120:	8ee3      	ldrh	r3, [r4, #54]	; 0x36
 800c122:	b29b      	uxth	r3, r3
 800c124:	2b00      	cmp	r3, #0
 800c126:	d08f      	beq.n	800c048 <HAL_SPI_Transmit+0xcc>
      if (__HAL_SPI_GET_FLAG(hspi, SPI_FLAG_TXE))
 800c128:	6823      	ldr	r3, [r4, #0]
 800c12a:	689a      	ldr	r2, [r3, #8]
 800c12c:	0792      	lsls	r2, r2, #30
 800c12e:	d4ed      	bmi.n	800c10c <HAL_SPI_Transmit+0x190>
        if ((((HAL_GetTick() - tickstart) >=  Timeout) && (Timeout != HAL_MAX_DELAY)) || (Timeout == 0U))
 800c130:	f7fc ffa8 	bl	8009084 <HAL_GetTick>
 800c134:	1b80      	subs	r0, r0, r6
 800c136:	42a8      	cmp	r0, r5
 800c138:	d3f2      	bcc.n	800c120 <HAL_SPI_Transmit+0x1a4>
          errorcode = HAL_TIMEOUT;
 800c13a:	2003      	movs	r0, #3
 800c13c:	e736      	b.n	800bfac <HAL_SPI_Transmit+0x30>
      *((__IO uint8_t *)&hspi->Instance->DR) = (*hspi->pTxBuffPtr);
 800c13e:	f898 3000 	ldrb.w	r3, [r8]
 800c142:	7303      	strb	r3, [r0, #12]
      hspi->TxXferCount--;
 800c144:	8ee3      	ldrh	r3, [r4, #54]	; 0x36
      hspi->pTxBuffPtr += sizeof(uint8_t);
 800c146:	6b22      	ldr	r2, [r4, #48]	; 0x30
      hspi->TxXferCount--;
 800c148:	3b01      	subs	r3, #1
      hspi->pTxBuffPtr += sizeof(uint8_t);
 800c14a:	3201      	adds	r2, #1
      hspi->TxXferCount--;
 800c14c:	b29b      	uxth	r3, r3
      hspi->pTxBuffPtr += sizeof(uint8_t);
 800c14e:	6322      	str	r2, [r4, #48]	; 0x30
      hspi->TxXferCount--;
 800c150:	86e3      	strh	r3, [r4, #54]	; 0x36
 800c152:	e760      	b.n	800c016 <HAL_SPI_Transmit+0x9a>
        if ((((HAL_GetTick() - tickstart) >=  Timeout) && (Timeout != HAL_MAX_DELAY)) || (Timeout == 0U))
 800c154:	f7fc ff96 	bl	8009084 <HAL_GetTick>
    while (hspi->TxXferCount > 0U)
 800c158:	8ee3      	ldrh	r3, [r4, #54]	; 0x36
 800c15a:	b29b      	uxth	r3, r3
 800c15c:	2b00      	cmp	r3, #0
 800c15e:	f47f af60 	bne.w	800c022 <HAL_SPI_Transmit+0xa6>
 800c162:	e771      	b.n	800c048 <HAL_SPI_Transmit+0xcc>
        hspi->Instance->DR = *((uint16_t *)hspi->pTxBuffPtr);
 800c164:	6b21      	ldr	r1, [r4, #48]	; 0x30
 800c166:	f831 3b02 	ldrh.w	r3, [r1], #2
 800c16a:	60d3      	str	r3, [r2, #12]
        hspi->TxXferCount--;
 800c16c:	8ee3      	ldrh	r3, [r4, #54]	; 0x36
        hspi->pTxBuffPtr += sizeof(uint16_t);
 800c16e:	6321      	str	r1, [r4, #48]	; 0x30
        hspi->TxXferCount--;
 800c170:	3b01      	subs	r3, #1
 800c172:	b29b      	uxth	r3, r3
 800c174:	86e3      	strh	r3, [r4, #54]	; 0x36
    while (hspi->TxXferCount > 0U)
 800c176:	8ee3      	ldrh	r3, [r4, #54]	; 0x36
 800c178:	b29b      	uxth	r3, r3
 800c17a:	2b00      	cmp	r3, #0
 800c17c:	f43f af64 	beq.w	800c048 <HAL_SPI_Transmit+0xcc>
      if (__HAL_SPI_GET_FLAG(hspi, SPI_FLAG_TXE))
 800c180:	6822      	ldr	r2, [r4, #0]
 800c182:	6893      	ldr	r3, [r2, #8]
 800c184:	0799      	lsls	r1, r3, #30
 800c186:	d4ed      	bmi.n	800c164 <HAL_SPI_Transmit+0x1e8>
        if ((((HAL_GetTick() - tickstart) >=  Timeout) && (Timeout != HAL_MAX_DELAY)) || (Timeout == 0U))
 800c188:	f7fc ff7c 	bl	8009084 <HAL_GetTick>
 800c18c:	1b80      	subs	r0, r0, r6
 800c18e:	42a8      	cmp	r0, r5
 800c190:	d3f1      	bcc.n	800c176 <HAL_SPI_Transmit+0x1fa>
 800c192:	e7d2      	b.n	800c13a <HAL_SPI_Transmit+0x1be>
    if ((hspi->Init.Mode == SPI_MODE_SLAVE) || (initial_TxXferCount == 0x01U))
 800c194:	2f01      	cmp	r7, #1
 800c196:	d18f      	bne.n	800c0b8 <HAL_SPI_Transmit+0x13c>
 800c198:	e785      	b.n	800c0a6 <HAL_SPI_Transmit+0x12a>
    if (SPI_WaitFlagStateUntilTimeout(hspi, SPI_FLAG_BSY, RESET, Timeout, Tickstart) != HAL_OK)
 800c19a:	4633      	mov	r3, r6
 800c19c:	462a      	mov	r2, r5
 800c19e:	2180      	movs	r1, #128	; 0x80
 800c1a0:	4620      	mov	r0, r4
 800c1a2:	f7ff fdef 	bl	800bd84 <SPI_WaitFlagStateUntilTimeout.constprop.0>
 800c1a6:	2800      	cmp	r0, #0
 800c1a8:	f43f af68 	beq.w	800c07c <HAL_SPI_Transmit+0x100>
      SET_BIT(hspi->ErrorCode, HAL_SPI_ERROR_FLAG);
 800c1ac:	6d63      	ldr	r3, [r4, #84]	; 0x54
    hspi->ErrorCode = HAL_SPI_ERROR_FLAG;
 800c1ae:	2220      	movs	r2, #32
      SET_BIT(hspi->ErrorCode, HAL_SPI_ERROR_FLAG);
 800c1b0:	4313      	orrs	r3, r2
 800c1b2:	6563      	str	r3, [r4, #84]	; 0x54
    hspi->ErrorCode = HAL_SPI_ERROR_FLAG;
 800c1b4:	6562      	str	r2, [r4, #84]	; 0x54
 800c1b6:	e761      	b.n	800c07c <HAL_SPI_Transmit+0x100>
 800c1b8:	20000078 	.word	0x20000078
 800c1bc:	165e9f81 	.word	0x165e9f81

0800c1c0 <HAL_SPI_TransmitReceive>:
{
 800c1c0:	e92d 41f0 	stmdb	sp!, {r4, r5, r6, r7, r8, lr}
 800c1c4:	4604      	mov	r4, r0
  __HAL_LOCK(hspi);
 800c1c6:	f890 0050 	ldrb.w	r0, [r0, #80]	; 0x50
 800c1ca:	2801      	cmp	r0, #1
{
 800c1cc:	b082      	sub	sp, #8
  __HAL_LOCK(hspi);
 800c1ce:	f000 80ac 	beq.w	800c32a <HAL_SPI_TransmitReceive+0x16a>
 800c1d2:	461e      	mov	r6, r3
 800c1d4:	2301      	movs	r3, #1
 800c1d6:	f884 3050 	strb.w	r3, [r4, #80]	; 0x50
  tickstart = HAL_GetTick();
 800c1da:	4690      	mov	r8, r2
 800c1dc:	460f      	mov	r7, r1
 800c1de:	f7fc ff51 	bl	8009084 <HAL_GetTick>
 800c1e2:	4605      	mov	r5, r0
  tmp_state           = hspi->State;
 800c1e4:	f894 0051 	ldrb.w	r0, [r4, #81]	; 0x51
  tmp_mode            = hspi->Init.Mode;
 800c1e8:	6863      	ldr	r3, [r4, #4]
  if (!((tmp_state == HAL_SPI_STATE_READY) || \
 800c1ea:	2801      	cmp	r0, #1
  tmp_state           = hspi->State;
 800c1ec:	b2c2      	uxtb	r2, r0
  if (!((tmp_state == HAL_SPI_STATE_READY) || \
 800c1ee:	d011      	beq.n	800c214 <HAL_SPI_TransmitReceive+0x54>
 800c1f0:	f5b3 7f82 	cmp.w	r3, #260	; 0x104
 800c1f4:	d009      	beq.n	800c20a <HAL_SPI_TransmitReceive+0x4a>
    errorcode = HAL_BUSY;
 800c1f6:	2002      	movs	r0, #2
  hspi->State = HAL_SPI_STATE_READY;
 800c1f8:	2201      	movs	r2, #1
  __HAL_UNLOCK(hspi);
 800c1fa:	2300      	movs	r3, #0
  hspi->State = HAL_SPI_STATE_READY;
 800c1fc:	f884 2051 	strb.w	r2, [r4, #81]	; 0x51
  __HAL_UNLOCK(hspi);
 800c200:	f884 3050 	strb.w	r3, [r4, #80]	; 0x50
}
 800c204:	b002      	add	sp, #8
 800c206:	e8bd 81f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, pc}
        ((tmp_mode == SPI_MODE_MASTER) && (hspi->Init.Direction == SPI_DIRECTION_2LINES) && (tmp_state == HAL_SPI_STATE_BUSY_RX))))
 800c20a:	68a1      	ldr	r1, [r4, #8]
 800c20c:	2900      	cmp	r1, #0
 800c20e:	d1f2      	bne.n	800c1f6 <HAL_SPI_TransmitReceive+0x36>
 800c210:	2a04      	cmp	r2, #4
 800c212:	d1f0      	bne.n	800c1f6 <HAL_SPI_TransmitReceive+0x36>
  if ((pTxData == NULL) || (pRxData == NULL) || (Size == 0U))
 800c214:	2f00      	cmp	r7, #0
 800c216:	f000 808c 	beq.w	800c332 <HAL_SPI_TransmitReceive+0x172>
 800c21a:	f1b8 0f00 	cmp.w	r8, #0
 800c21e:	f000 8088 	beq.w	800c332 <HAL_SPI_TransmitReceive+0x172>
 800c222:	2e00      	cmp	r6, #0
 800c224:	f000 8085 	beq.w	800c332 <HAL_SPI_TransmitReceive+0x172>
  if (hspi->State != HAL_SPI_STATE_BUSY_RX)
 800c228:	f894 2051 	ldrb.w	r2, [r4, #81]	; 0x51
  hspi->pRxBuffPtr  = (uint8_t *)pRxData;
 800c22c:	f8c4 8038 	str.w	r8, [r4, #56]	; 0x38
  if (hspi->State != HAL_SPI_STATE_BUSY_RX)
 800c230:	2a04      	cmp	r2, #4
    hspi->State = HAL_SPI_STATE_BUSY_TX_RX;
 800c232:	bf1c      	itt	ne
 800c234:	2205      	movne	r2, #5
 800c236:	f884 2051 	strbne.w	r2, [r4, #81]	; 0x51
  hspi->ErrorCode   = HAL_SPI_ERROR_NONE;
 800c23a:	2200      	movs	r2, #0
 800c23c:	6562      	str	r2, [r4, #84]	; 0x54
  hspi->TxISR       = NULL;
 800c23e:	e9c4 2210 	strd	r2, r2, [r4, #64]	; 0x40
  if ((hspi->Instance->CR1 & SPI_CR1_SPE) != SPI_CR1_SPE)
 800c242:	6822      	ldr	r2, [r4, #0]
  hspi->RxXferCount = Size;
 800c244:	87e6      	strh	r6, [r4, #62]	; 0x3e
  hspi->TxXferCount = Size;
 800c246:	86e6      	strh	r6, [r4, #54]	; 0x36
  if ((hspi->Instance->CR1 & SPI_CR1_SPE) != SPI_CR1_SPE)
 800c248:	6811      	ldr	r1, [r2, #0]
  hspi->RxXferSize  = Size;
 800c24a:	87a6      	strh	r6, [r4, #60]	; 0x3c
  if ((hspi->Instance->CR1 & SPI_CR1_SPE) != SPI_CR1_SPE)
 800c24c:	0649      	lsls	r1, r1, #25
  hspi->pTxBuffPtr  = (uint8_t *)pTxData;
 800c24e:	6327      	str	r7, [r4, #48]	; 0x30
  hspi->TxXferSize  = Size;
 800c250:	86a6      	strh	r6, [r4, #52]	; 0x34
  if ((hspi->Instance->CR1 & SPI_CR1_SPE) != SPI_CR1_SPE)
 800c252:	d403      	bmi.n	800c25c <HAL_SPI_TransmitReceive+0x9c>
    __HAL_SPI_ENABLE(hspi);
 800c254:	6811      	ldr	r1, [r2, #0]
 800c256:	f041 0140 	orr.w	r1, r1, #64	; 0x40
 800c25a:	6011      	str	r1, [r2, #0]
  if (hspi->Init.DataSize == SPI_DATASIZE_16BIT)
 800c25c:	68e1      	ldr	r1, [r4, #12]
 800c25e:	f5b1 6f00 	cmp.w	r1, #2048	; 0x800
 800c262:	f000 809e 	beq.w	800c3a2 <HAL_SPI_TransmitReceive+0x1e2>
    if ((hspi->Init.Mode == SPI_MODE_SLAVE) || (initial_TxXferCount == 0x01U))
 800c266:	2b00      	cmp	r3, #0
 800c268:	f000 8091 	beq.w	800c38e <HAL_SPI_TransmitReceive+0x1ce>
 800c26c:	2e01      	cmp	r6, #1
 800c26e:	f000 808e 	beq.w	800c38e <HAL_SPI_TransmitReceive+0x1ce>
 800c272:	9b08      	ldr	r3, [sp, #32]
 800c274:	3301      	adds	r3, #1
        txallowed = 1U;
 800c276:	f04f 0601 	mov.w	r6, #1
 800c27a:	d028      	beq.n	800c2ce <HAL_SPI_TransmitReceive+0x10e>
 800c27c:	e05b      	b.n	800c336 <HAL_SPI_TransmitReceive+0x176>
      if ((__HAL_SPI_GET_FLAG(hspi, SPI_FLAG_TXE)) && (hspi->TxXferCount > 0U) && (txallowed == 1U))
 800c27e:	6821      	ldr	r1, [r4, #0]
 800c280:	688b      	ldr	r3, [r1, #8]
 800c282:	0798      	lsls	r0, r3, #30
 800c284:	d50f      	bpl.n	800c2a6 <HAL_SPI_TransmitReceive+0xe6>
 800c286:	8ee3      	ldrh	r3, [r4, #54]	; 0x36
 800c288:	b29b      	uxth	r3, r3
 800c28a:	b163      	cbz	r3, 800c2a6 <HAL_SPI_TransmitReceive+0xe6>
 800c28c:	b15e      	cbz	r6, 800c2a6 <HAL_SPI_TransmitReceive+0xe6>
        *(__IO uint8_t *)&hspi->Instance->DR = (*hspi->pTxBuffPtr);
 800c28e:	6b23      	ldr	r3, [r4, #48]	; 0x30
 800c290:	781b      	ldrb	r3, [r3, #0]
 800c292:	730b      	strb	r3, [r1, #12]
        hspi->TxXferCount--;
 800c294:	8ee3      	ldrh	r3, [r4, #54]	; 0x36
        hspi->pTxBuffPtr++;
 800c296:	6b22      	ldr	r2, [r4, #48]	; 0x30
      if ((__HAL_SPI_GET_FLAG(hspi, SPI_FLAG_RXNE)) && (hspi->RxXferCount > 0U))
 800c298:	6821      	ldr	r1, [r4, #0]
        hspi->TxXferCount--;
 800c29a:	3b01      	subs	r3, #1
        hspi->pTxBuffPtr++;
 800c29c:	3201      	adds	r2, #1
        hspi->TxXferCount--;
 800c29e:	b29b      	uxth	r3, r3
        txallowed = 0U;
 800c2a0:	2600      	movs	r6, #0
        hspi->TxXferCount--;
 800c2a2:	86e3      	strh	r3, [r4, #54]	; 0x36
        hspi->pTxBuffPtr++;
 800c2a4:	6322      	str	r2, [r4, #48]	; 0x30
      if ((__HAL_SPI_GET_FLAG(hspi, SPI_FLAG_RXNE)) && (hspi->RxXferCount > 0U))
 800c2a6:	688a      	ldr	r2, [r1, #8]
 800c2a8:	f012 0201 	ands.w	r2, r2, #1
 800c2ac:	d00d      	beq.n	800c2ca <HAL_SPI_TransmitReceive+0x10a>
 800c2ae:	8fe3      	ldrh	r3, [r4, #62]	; 0x3e
 800c2b0:	b29b      	uxth	r3, r3
 800c2b2:	b153      	cbz	r3, 800c2ca <HAL_SPI_TransmitReceive+0x10a>
        (*(uint8_t *)hspi->pRxBuffPtr) = hspi->Instance->DR;
 800c2b4:	6ba3      	ldr	r3, [r4, #56]	; 0x38
 800c2b6:	68c9      	ldr	r1, [r1, #12]
 800c2b8:	7019      	strb	r1, [r3, #0]
        hspi->RxXferCount--;
 800c2ba:	8fe3      	ldrh	r3, [r4, #62]	; 0x3e
        hspi->pRxBuffPtr++;
 800c2bc:	6ba1      	ldr	r1, [r4, #56]	; 0x38
        hspi->RxXferCount--;
 800c2be:	3b01      	subs	r3, #1
        hspi->pRxBuffPtr++;
 800c2c0:	3101      	adds	r1, #1
        hspi->RxXferCount--;
 800c2c2:	b29b      	uxth	r3, r3
        hspi->pRxBuffPtr++;
 800c2c4:	63a1      	str	r1, [r4, #56]	; 0x38
        hspi->RxXferCount--;
 800c2c6:	87e3      	strh	r3, [r4, #62]	; 0x3e
        txallowed = 1U;
 800c2c8:	4616      	mov	r6, r2
      if ((((HAL_GetTick() - tickstart) >=  Timeout) && ((Timeout != HAL_MAX_DELAY))) || (Timeout == 0U))
 800c2ca:	f7fc fedb 	bl	8009084 <HAL_GetTick>
    while ((hspi->TxXferCount > 0U) || (hspi->RxXferCount > 0U))
 800c2ce:	8ee2      	ldrh	r2, [r4, #54]	; 0x36
 800c2d0:	b292      	uxth	r2, r2
 800c2d2:	2a00      	cmp	r2, #0
 800c2d4:	d1d3      	bne.n	800c27e <HAL_SPI_TransmitReceive+0xbe>
 800c2d6:	8fe3      	ldrh	r3, [r4, #62]	; 0x3e
 800c2d8:	b29b      	uxth	r3, r3
 800c2da:	2b00      	cmp	r3, #0
 800c2dc:	d1cf      	bne.n	800c27e <HAL_SPI_TransmitReceive+0xbe>
  __IO uint32_t count = SPI_BSY_FLAG_WORKAROUND_TIMEOUT * (SystemCoreClock / 24U / 1000000U);
 800c2de:	4b79      	ldr	r3, [pc, #484]	; (800c4c4 <HAL_SPI_TransmitReceive+0x304>)
 800c2e0:	4a79      	ldr	r2, [pc, #484]	; (800c4c8 <HAL_SPI_TransmitReceive+0x308>)
 800c2e2:	681b      	ldr	r3, [r3, #0]
 800c2e4:	fba2 2303 	umull	r2, r3, r2, r3
  if (hspi->Init.Mode == SPI_MODE_MASTER)
 800c2e8:	6862      	ldr	r2, [r4, #4]
  __IO uint32_t count = SPI_BSY_FLAG_WORKAROUND_TIMEOUT * (SystemCoreClock / 24U / 1000000U);
 800c2ea:	f44f 717a 	mov.w	r1, #1000	; 0x3e8
 800c2ee:	0d5b      	lsrs	r3, r3, #21
 800c2f0:	fb01 f303 	mul.w	r3, r1, r3
  if (hspi->Init.Mode == SPI_MODE_MASTER)
 800c2f4:	f5b2 7f82 	cmp.w	r2, #260	; 0x104
  __IO uint32_t count = SPI_BSY_FLAG_WORKAROUND_TIMEOUT * (SystemCoreClock / 24U / 1000000U);
 800c2f8:	9301      	str	r3, [sp, #4]
  if (hspi->Init.Mode == SPI_MODE_MASTER)
 800c2fa:	d107      	bne.n	800c30c <HAL_SPI_TransmitReceive+0x14c>
 800c2fc:	e0d2      	b.n	800c4a4 <HAL_SPI_TransmitReceive+0x2e4>
      count--;
 800c2fe:	9b01      	ldr	r3, [sp, #4]
    } while (__HAL_SPI_GET_FLAG(hspi, SPI_FLAG_BSY) != RESET);
 800c300:	6822      	ldr	r2, [r4, #0]
      count--;
 800c302:	3b01      	subs	r3, #1
 800c304:	9301      	str	r3, [sp, #4]
    } while (__HAL_SPI_GET_FLAG(hspi, SPI_FLAG_BSY) != RESET);
 800c306:	6893      	ldr	r3, [r2, #8]
 800c308:	061b      	lsls	r3, r3, #24
 800c30a:	d502      	bpl.n	800c312 <HAL_SPI_TransmitReceive+0x152>
      if (count == 0U)
 800c30c:	9b01      	ldr	r3, [sp, #4]
 800c30e:	2b00      	cmp	r3, #0
 800c310:	d1f5      	bne.n	800c2fe <HAL_SPI_TransmitReceive+0x13e>
  if (hspi->Init.Direction == SPI_DIRECTION_2LINES)
 800c312:	68a0      	ldr	r0, [r4, #8]
 800c314:	2800      	cmp	r0, #0
 800c316:	f040 8082 	bne.w	800c41e <HAL_SPI_TransmitReceive+0x25e>
    __HAL_SPI_CLEAR_OVRFLAG(hspi);
 800c31a:	6823      	ldr	r3, [r4, #0]
 800c31c:	9000      	str	r0, [sp, #0]
 800c31e:	68da      	ldr	r2, [r3, #12]
 800c320:	9200      	str	r2, [sp, #0]
 800c322:	689b      	ldr	r3, [r3, #8]
 800c324:	9300      	str	r3, [sp, #0]
 800c326:	9b00      	ldr	r3, [sp, #0]
 800c328:	e766      	b.n	800c1f8 <HAL_SPI_TransmitReceive+0x38>
  __HAL_LOCK(hspi);
 800c32a:	2002      	movs	r0, #2
}
 800c32c:	b002      	add	sp, #8
 800c32e:	e8bd 81f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, pc}
    errorcode = HAL_ERROR;
 800c332:	2001      	movs	r0, #1
 800c334:	e760      	b.n	800c1f8 <HAL_SPI_TransmitReceive+0x38>
    while ((hspi->TxXferCount > 0U) || (hspi->RxXferCount > 0U))
 800c336:	8ee3      	ldrh	r3, [r4, #54]	; 0x36
 800c338:	b29b      	uxth	r3, r3
 800c33a:	b91b      	cbnz	r3, 800c344 <HAL_SPI_TransmitReceive+0x184>
 800c33c:	8fe3      	ldrh	r3, [r4, #62]	; 0x3e
 800c33e:	b29b      	uxth	r3, r3
 800c340:	2b00      	cmp	r3, #0
 800c342:	d0cc      	beq.n	800c2de <HAL_SPI_TransmitReceive+0x11e>
      if ((__HAL_SPI_GET_FLAG(hspi, SPI_FLAG_TXE)) && (hspi->TxXferCount > 0U) && (txallowed == 1U))
 800c344:	6822      	ldr	r2, [r4, #0]
 800c346:	6893      	ldr	r3, [r2, #8]
 800c348:	0799      	lsls	r1, r3, #30
 800c34a:	d50f      	bpl.n	800c36c <HAL_SPI_TransmitReceive+0x1ac>
 800c34c:	8ee3      	ldrh	r3, [r4, #54]	; 0x36
 800c34e:	b29b      	uxth	r3, r3
 800c350:	b163      	cbz	r3, 800c36c <HAL_SPI_TransmitReceive+0x1ac>
 800c352:	b15e      	cbz	r6, 800c36c <HAL_SPI_TransmitReceive+0x1ac>
        *(__IO uint8_t *)&hspi->Instance->DR = (*hspi->pTxBuffPtr);
 800c354:	6b23      	ldr	r3, [r4, #48]	; 0x30
 800c356:	781b      	ldrb	r3, [r3, #0]
 800c358:	7313      	strb	r3, [r2, #12]
        hspi->TxXferCount--;
 800c35a:	8ee3      	ldrh	r3, [r4, #54]	; 0x36
        hspi->pTxBuffPtr++;
 800c35c:	6b22      	ldr	r2, [r4, #48]	; 0x30
        hspi->TxXferCount--;
 800c35e:	3b01      	subs	r3, #1
        hspi->pTxBuffPtr++;
 800c360:	3201      	adds	r2, #1
        hspi->TxXferCount--;
 800c362:	b29b      	uxth	r3, r3
        hspi->pTxBuffPtr++;
 800c364:	6322      	str	r2, [r4, #48]	; 0x30
      if ((__HAL_SPI_GET_FLAG(hspi, SPI_FLAG_RXNE)) && (hspi->RxXferCount > 0U))
 800c366:	6822      	ldr	r2, [r4, #0]
        hspi->TxXferCount--;
 800c368:	86e3      	strh	r3, [r4, #54]	; 0x36
        txallowed = 0U;
 800c36a:	2600      	movs	r6, #0
      if ((__HAL_SPI_GET_FLAG(hspi, SPI_FLAG_RXNE)) && (hspi->RxXferCount > 0U))
 800c36c:	6893      	ldr	r3, [r2, #8]
 800c36e:	f013 0301 	ands.w	r3, r3, #1
 800c372:	d004      	beq.n	800c37e <HAL_SPI_TransmitReceive+0x1be>
 800c374:	8fe1      	ldrh	r1, [r4, #62]	; 0x3e
 800c376:	b289      	uxth	r1, r1
 800c378:	2900      	cmp	r1, #0
 800c37a:	f040 8087 	bne.w	800c48c <HAL_SPI_TransmitReceive+0x2cc>
      if ((((HAL_GetTick() - tickstart) >=  Timeout) && ((Timeout != HAL_MAX_DELAY))) || (Timeout == 0U))
 800c37e:	f7fc fe81 	bl	8009084 <HAL_GetTick>
 800c382:	9b08      	ldr	r3, [sp, #32]
 800c384:	1b40      	subs	r0, r0, r5
 800c386:	4298      	cmp	r0, r3
 800c388:	d3d5      	bcc.n	800c336 <HAL_SPI_TransmitReceive+0x176>
        errorcode = HAL_TIMEOUT;
 800c38a:	2003      	movs	r0, #3
 800c38c:	e734      	b.n	800c1f8 <HAL_SPI_TransmitReceive+0x38>
      *((__IO uint8_t *)&hspi->Instance->DR) = (*hspi->pTxBuffPtr);
 800c38e:	783b      	ldrb	r3, [r7, #0]
 800c390:	7313      	strb	r3, [r2, #12]
      hspi->TxXferCount--;
 800c392:	8ee3      	ldrh	r3, [r4, #54]	; 0x36
      hspi->pTxBuffPtr += sizeof(uint8_t);
 800c394:	6b22      	ldr	r2, [r4, #48]	; 0x30
      hspi->TxXferCount--;
 800c396:	3b01      	subs	r3, #1
      hspi->pTxBuffPtr += sizeof(uint8_t);
 800c398:	3201      	adds	r2, #1
      hspi->TxXferCount--;
 800c39a:	b29b      	uxth	r3, r3
      hspi->pTxBuffPtr += sizeof(uint8_t);
 800c39c:	6322      	str	r2, [r4, #48]	; 0x30
      hspi->TxXferCount--;
 800c39e:	86e3      	strh	r3, [r4, #54]	; 0x36
 800c3a0:	e767      	b.n	800c272 <HAL_SPI_TransmitReceive+0xb2>
    if ((hspi->Init.Mode == SPI_MODE_SLAVE) || (initial_TxXferCount == 0x01U))
 800c3a2:	2b00      	cmp	r3, #0
 800c3a4:	d13d      	bne.n	800c422 <HAL_SPI_TransmitReceive+0x262>
      hspi->Instance->DR = *((uint16_t *)hspi->pTxBuffPtr);
 800c3a6:	f837 3b02 	ldrh.w	r3, [r7], #2
 800c3aa:	60d3      	str	r3, [r2, #12]
      hspi->TxXferCount--;
 800c3ac:	8ee3      	ldrh	r3, [r4, #54]	; 0x36
      hspi->pTxBuffPtr += sizeof(uint16_t);
 800c3ae:	6327      	str	r7, [r4, #48]	; 0x30
      hspi->TxXferCount--;
 800c3b0:	3b01      	subs	r3, #1
 800c3b2:	b29b      	uxth	r3, r3
 800c3b4:	86e3      	strh	r3, [r4, #54]	; 0x36
 800c3b6:	9b08      	ldr	r3, [sp, #32]
 800c3b8:	3301      	adds	r3, #1
{
 800c3ba:	f04f 0601 	mov.w	r6, #1
 800c3be:	d025      	beq.n	800c40c <HAL_SPI_TransmitReceive+0x24c>
 800c3c0:	e032      	b.n	800c428 <HAL_SPI_TransmitReceive+0x268>
      if ((__HAL_SPI_GET_FLAG(hspi, SPI_FLAG_TXE)) && (hspi->TxXferCount > 0U) && (txallowed == 1U))
 800c3c2:	6823      	ldr	r3, [r4, #0]
 800c3c4:	689a      	ldr	r2, [r3, #8]
 800c3c6:	0792      	lsls	r2, r2, #30
 800c3c8:	d50d      	bpl.n	800c3e6 <HAL_SPI_TransmitReceive+0x226>
 800c3ca:	8ee2      	ldrh	r2, [r4, #54]	; 0x36
 800c3cc:	b292      	uxth	r2, r2
 800c3ce:	b152      	cbz	r2, 800c3e6 <HAL_SPI_TransmitReceive+0x226>
 800c3d0:	b14e      	cbz	r6, 800c3e6 <HAL_SPI_TransmitReceive+0x226>
        hspi->Instance->DR = *((uint16_t *)hspi->pTxBuffPtr);
 800c3d2:	6b21      	ldr	r1, [r4, #48]	; 0x30
 800c3d4:	f831 2b02 	ldrh.w	r2, [r1], #2
 800c3d8:	60da      	str	r2, [r3, #12]
        hspi->TxXferCount--;
 800c3da:	8ee2      	ldrh	r2, [r4, #54]	; 0x36
        hspi->pTxBuffPtr += sizeof(uint16_t);
 800c3dc:	6321      	str	r1, [r4, #48]	; 0x30
        hspi->TxXferCount--;
 800c3de:	3a01      	subs	r2, #1
 800c3e0:	b292      	uxth	r2, r2
        txallowed = 0U;
 800c3e2:	2600      	movs	r6, #0
        hspi->TxXferCount--;
 800c3e4:	86e2      	strh	r2, [r4, #54]	; 0x36
      if ((__HAL_SPI_GET_FLAG(hspi, SPI_FLAG_RXNE)) && (hspi->RxXferCount > 0U))
 800c3e6:	689a      	ldr	r2, [r3, #8]
 800c3e8:	f012 0201 	ands.w	r2, r2, #1
 800c3ec:	d00c      	beq.n	800c408 <HAL_SPI_TransmitReceive+0x248>
 800c3ee:	8fe1      	ldrh	r1, [r4, #62]	; 0x3e
 800c3f0:	b289      	uxth	r1, r1
 800c3f2:	b149      	cbz	r1, 800c408 <HAL_SPI_TransmitReceive+0x248>
        *((uint16_t *)hspi->pRxBuffPtr) = (uint16_t)hspi->Instance->DR;
 800c3f4:	6ba1      	ldr	r1, [r4, #56]	; 0x38
 800c3f6:	68db      	ldr	r3, [r3, #12]
 800c3f8:	f821 3b02 	strh.w	r3, [r1], #2
        hspi->RxXferCount--;
 800c3fc:	8fe3      	ldrh	r3, [r4, #62]	; 0x3e
        hspi->pRxBuffPtr += sizeof(uint16_t);
 800c3fe:	63a1      	str	r1, [r4, #56]	; 0x38
        hspi->RxXferCount--;
 800c400:	3b01      	subs	r3, #1
 800c402:	b29b      	uxth	r3, r3
        txallowed = 1U;
 800c404:	4616      	mov	r6, r2
        hspi->RxXferCount--;
 800c406:	87e3      	strh	r3, [r4, #62]	; 0x3e
      if (((HAL_GetTick() - tickstart) >=  Timeout) && (Timeout != HAL_MAX_DELAY))
 800c408:	f7fc fe3c 	bl	8009084 <HAL_GetTick>
    while ((hspi->TxXferCount > 0U) || (hspi->RxXferCount > 0U))
 800c40c:	8ee3      	ldrh	r3, [r4, #54]	; 0x36
 800c40e:	b29b      	uxth	r3, r3
 800c410:	2b00      	cmp	r3, #0
 800c412:	d1d6      	bne.n	800c3c2 <HAL_SPI_TransmitReceive+0x202>
 800c414:	8fe3      	ldrh	r3, [r4, #62]	; 0x3e
 800c416:	b29b      	uxth	r3, r3
 800c418:	2b00      	cmp	r3, #0
 800c41a:	d1d2      	bne.n	800c3c2 <HAL_SPI_TransmitReceive+0x202>
 800c41c:	e75f      	b.n	800c2de <HAL_SPI_TransmitReceive+0x11e>
  HAL_StatusTypeDef    errorcode = HAL_OK;
 800c41e:	2000      	movs	r0, #0
 800c420:	e6ea      	b.n	800c1f8 <HAL_SPI_TransmitReceive+0x38>
    if ((hspi->Init.Mode == SPI_MODE_SLAVE) || (initial_TxXferCount == 0x01U))
 800c422:	2e01      	cmp	r6, #1
 800c424:	d1c7      	bne.n	800c3b6 <HAL_SPI_TransmitReceive+0x1f6>
 800c426:	e7be      	b.n	800c3a6 <HAL_SPI_TransmitReceive+0x1e6>
    while ((hspi->TxXferCount > 0U) || (hspi->RxXferCount > 0U))
 800c428:	8ee3      	ldrh	r3, [r4, #54]	; 0x36
 800c42a:	b29b      	uxth	r3, r3
 800c42c:	b923      	cbnz	r3, 800c438 <HAL_SPI_TransmitReceive+0x278>
 800c42e:	8fe3      	ldrh	r3, [r4, #62]	; 0x3e
 800c430:	b29b      	uxth	r3, r3
 800c432:	2b00      	cmp	r3, #0
 800c434:	f43f af53 	beq.w	800c2de <HAL_SPI_TransmitReceive+0x11e>
      if ((__HAL_SPI_GET_FLAG(hspi, SPI_FLAG_TXE)) && (hspi->TxXferCount > 0U) && (txallowed == 1U))
 800c438:	6822      	ldr	r2, [r4, #0]
 800c43a:	6893      	ldr	r3, [r2, #8]
 800c43c:	079f      	lsls	r7, r3, #30
 800c43e:	d50d      	bpl.n	800c45c <HAL_SPI_TransmitReceive+0x29c>
 800c440:	8ee3      	ldrh	r3, [r4, #54]	; 0x36
 800c442:	b29b      	uxth	r3, r3
 800c444:	b153      	cbz	r3, 800c45c <HAL_SPI_TransmitReceive+0x29c>
 800c446:	b14e      	cbz	r6, 800c45c <HAL_SPI_TransmitReceive+0x29c>
        hspi->Instance->DR = *((uint16_t *)hspi->pTxBuffPtr);
 800c448:	6b21      	ldr	r1, [r4, #48]	; 0x30
 800c44a:	f831 3b02 	ldrh.w	r3, [r1], #2
 800c44e:	60d3      	str	r3, [r2, #12]
        hspi->TxXferCount--;
 800c450:	8ee3      	ldrh	r3, [r4, #54]	; 0x36
        hspi->pTxBuffPtr += sizeof(uint16_t);
 800c452:	6321      	str	r1, [r4, #48]	; 0x30
        hspi->TxXferCount--;
 800c454:	3b01      	subs	r3, #1
 800c456:	b29b      	uxth	r3, r3
 800c458:	86e3      	strh	r3, [r4, #54]	; 0x36
        txallowed = 0U;
 800c45a:	2600      	movs	r6, #0
      if ((__HAL_SPI_GET_FLAG(hspi, SPI_FLAG_RXNE)) && (hspi->RxXferCount > 0U))
 800c45c:	6893      	ldr	r3, [r2, #8]
 800c45e:	f013 0301 	ands.w	r3, r3, #1
 800c462:	d00c      	beq.n	800c47e <HAL_SPI_TransmitReceive+0x2be>
 800c464:	8fe1      	ldrh	r1, [r4, #62]	; 0x3e
 800c466:	b289      	uxth	r1, r1
 800c468:	b149      	cbz	r1, 800c47e <HAL_SPI_TransmitReceive+0x2be>
        *((uint16_t *)hspi->pRxBuffPtr) = (uint16_t)hspi->Instance->DR;
 800c46a:	68d1      	ldr	r1, [r2, #12]
 800c46c:	6ba2      	ldr	r2, [r4, #56]	; 0x38
 800c46e:	f822 1b02 	strh.w	r1, [r2], #2
        txallowed = 1U;
 800c472:	461e      	mov	r6, r3
        hspi->RxXferCount--;
 800c474:	8fe3      	ldrh	r3, [r4, #62]	; 0x3e
        hspi->pRxBuffPtr += sizeof(uint16_t);
 800c476:	63a2      	str	r2, [r4, #56]	; 0x38
        hspi->RxXferCount--;
 800c478:	3b01      	subs	r3, #1
 800c47a:	b29b      	uxth	r3, r3
 800c47c:	87e3      	strh	r3, [r4, #62]	; 0x3e
      if (((HAL_GetTick() - tickstart) >=  Timeout) && (Timeout != HAL_MAX_DELAY))
 800c47e:	f7fc fe01 	bl	8009084 <HAL_GetTick>
 800c482:	9b08      	ldr	r3, [sp, #32]
 800c484:	1b40      	subs	r0, r0, r5
 800c486:	4298      	cmp	r0, r3
 800c488:	d3ce      	bcc.n	800c428 <HAL_SPI_TransmitReceive+0x268>
 800c48a:	e77e      	b.n	800c38a <HAL_SPI_TransmitReceive+0x1ca>
        (*(uint8_t *)hspi->pRxBuffPtr) = hspi->Instance->DR;
 800c48c:	6ba1      	ldr	r1, [r4, #56]	; 0x38
 800c48e:	68d2      	ldr	r2, [r2, #12]
 800c490:	700a      	strb	r2, [r1, #0]
        hspi->RxXferCount--;
 800c492:	8fe2      	ldrh	r2, [r4, #62]	; 0x3e
        hspi->pRxBuffPtr++;
 800c494:	6ba1      	ldr	r1, [r4, #56]	; 0x38
        hspi->RxXferCount--;
 800c496:	3a01      	subs	r2, #1
        hspi->pRxBuffPtr++;
 800c498:	3101      	adds	r1, #1
        hspi->RxXferCount--;
 800c49a:	b292      	uxth	r2, r2
        hspi->pRxBuffPtr++;
 800c49c:	63a1      	str	r1, [r4, #56]	; 0x38
        hspi->RxXferCount--;
 800c49e:	87e2      	strh	r2, [r4, #62]	; 0x3e
        txallowed = 1U;
 800c4a0:	461e      	mov	r6, r3
 800c4a2:	e76c      	b.n	800c37e <HAL_SPI_TransmitReceive+0x1be>
    if (SPI_WaitFlagStateUntilTimeout(hspi, SPI_FLAG_BSY, RESET, Timeout, Tickstart) != HAL_OK)
 800c4a4:	9a08      	ldr	r2, [sp, #32]
 800c4a6:	462b      	mov	r3, r5
 800c4a8:	2180      	movs	r1, #128	; 0x80
 800c4aa:	4620      	mov	r0, r4
 800c4ac:	f7ff fc6a 	bl	800bd84 <SPI_WaitFlagStateUntilTimeout.constprop.0>
 800c4b0:	2800      	cmp	r0, #0
 800c4b2:	f43f af2e 	beq.w	800c312 <HAL_SPI_TransmitReceive+0x152>
      SET_BIT(hspi->ErrorCode, HAL_SPI_ERROR_FLAG);
 800c4b6:	6d63      	ldr	r3, [r4, #84]	; 0x54
    hspi->ErrorCode = HAL_SPI_ERROR_FLAG;
 800c4b8:	2220      	movs	r2, #32
      SET_BIT(hspi->ErrorCode, HAL_SPI_ERROR_FLAG);
 800c4ba:	4313      	orrs	r3, r2
 800c4bc:	6563      	str	r3, [r4, #84]	; 0x54
    errorcode = HAL_ERROR;
 800c4be:	2001      	movs	r0, #1
    hspi->ErrorCode = HAL_SPI_ERROR_FLAG;
 800c4c0:	6562      	str	r2, [r4, #84]	; 0x54
    goto error;
 800c4c2:	e699      	b.n	800c1f8 <HAL_SPI_TransmitReceive+0x38>
 800c4c4:	20000078 	.word	0x20000078
 800c4c8:	165e9f81 	.word	0x165e9f81

0800c4cc <HAL_SPI_Receive>:
{
 800c4cc:	e92d 41f0 	stmdb	sp!, {r4, r5, r6, r7, r8, lr}
  if ((hspi->Init.Mode == SPI_MODE_MASTER) && (hspi->Init.Direction == SPI_DIRECTION_2LINES))
 800c4d0:	6846      	ldr	r6, [r0, #4]
 800c4d2:	f5b6 7f82 	cmp.w	r6, #260	; 0x104
{
 800c4d6:	b082      	sub	sp, #8
 800c4d8:	4604      	mov	r4, r0
 800c4da:	4690      	mov	r8, r2
 800c4dc:	461d      	mov	r5, r3
 800c4de:	460f      	mov	r7, r1
  if ((hspi->Init.Mode == SPI_MODE_MASTER) && (hspi->Init.Direction == SPI_DIRECTION_2LINES))
 800c4e0:	d06e      	beq.n	800c5c0 <HAL_SPI_Receive+0xf4>
  __HAL_LOCK(hspi);
 800c4e2:	f894 3050 	ldrb.w	r3, [r4, #80]	; 0x50
 800c4e6:	2b01      	cmp	r3, #1
 800c4e8:	d076      	beq.n	800c5d8 <HAL_SPI_Receive+0x10c>
 800c4ea:	2301      	movs	r3, #1
 800c4ec:	f884 3050 	strb.w	r3, [r4, #80]	; 0x50
  tickstart = HAL_GetTick();
 800c4f0:	f7fc fdc8 	bl	8009084 <HAL_GetTick>
  if (hspi->State != HAL_SPI_STATE_READY)
 800c4f4:	f894 c051 	ldrb.w	ip, [r4, #81]	; 0x51
 800c4f8:	f1bc 0f01 	cmp.w	ip, #1
  tickstart = HAL_GetTick();
 800c4fc:	4606      	mov	r6, r0
  if (hspi->State != HAL_SPI_STATE_READY)
 800c4fe:	fa5f f08c 	uxtb.w	r0, ip
 800c502:	d009      	beq.n	800c518 <HAL_SPI_Receive+0x4c>
    errorcode = HAL_BUSY;
 800c504:	2002      	movs	r0, #2
  hspi->State = HAL_SPI_STATE_READY;
 800c506:	2201      	movs	r2, #1
  __HAL_UNLOCK(hspi);
 800c508:	2300      	movs	r3, #0
  hspi->State = HAL_SPI_STATE_READY;
 800c50a:	f884 2051 	strb.w	r2, [r4, #81]	; 0x51
  __HAL_UNLOCK(hspi);
 800c50e:	f884 3050 	strb.w	r3, [r4, #80]	; 0x50
}
 800c512:	b002      	add	sp, #8
 800c514:	e8bd 81f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, pc}
  if ((pData == NULL) || (Size == 0U))
 800c518:	2f00      	cmp	r7, #0
 800c51a:	d0f4      	beq.n	800c506 <HAL_SPI_Receive+0x3a>
 800c51c:	f1b8 0f00 	cmp.w	r8, #0
 800c520:	d0f1      	beq.n	800c506 <HAL_SPI_Receive+0x3a>
  if (hspi->Init.Direction == SPI_DIRECTION_1LINE)
 800c522:	68a2      	ldr	r2, [r4, #8]
  hspi->pRxBuffPtr  = (uint8_t *)pData;
 800c524:	63a7      	str	r7, [r4, #56]	; 0x38
  if (hspi->Init.Direction == SPI_DIRECTION_1LINE)
 800c526:	f5b2 4f00 	cmp.w	r2, #32768	; 0x8000
    __HAL_SPI_DISABLE(hspi);
 800c52a:	6822      	ldr	r2, [r4, #0]
  hspi->RxXferSize  = Size;
 800c52c:	f8a4 803c 	strh.w	r8, [r4, #60]	; 0x3c
  hspi->ErrorCode   = HAL_SPI_ERROR_NONE;
 800c530:	f04f 0300 	mov.w	r3, #0
  hspi->State       = HAL_SPI_STATE_BUSY_RX;
 800c534:	f04f 0104 	mov.w	r1, #4
 800c538:	f884 1051 	strb.w	r1, [r4, #81]	; 0x51
  hspi->TxISR       = NULL;
 800c53c:	e9c4 3310 	strd	r3, r3, [r4, #64]	; 0x40
  hspi->ErrorCode   = HAL_SPI_ERROR_NONE;
 800c540:	6563      	str	r3, [r4, #84]	; 0x54
  hspi->pTxBuffPtr  = (uint8_t *)NULL;
 800c542:	6323      	str	r3, [r4, #48]	; 0x30
  hspi->TxXferSize  = 0U;
 800c544:	86a3      	strh	r3, [r4, #52]	; 0x34
  hspi->RxXferCount = Size;
 800c546:	f8a4 803e 	strh.w	r8, [r4, #62]	; 0x3e
  hspi->TxXferCount = 0U;
 800c54a:	86e3      	strh	r3, [r4, #54]	; 0x36
    __HAL_SPI_DISABLE(hspi);
 800c54c:	4613      	mov	r3, r2
  if (hspi->Init.Direction == SPI_DIRECTION_1LINE)
 800c54e:	d107      	bne.n	800c560 <HAL_SPI_Receive+0x94>
    __HAL_SPI_DISABLE(hspi);
 800c550:	6811      	ldr	r1, [r2, #0]
 800c552:	f021 0140 	bic.w	r1, r1, #64	; 0x40
 800c556:	6011      	str	r1, [r2, #0]
    SPI_1LINE_RX(hspi);
 800c558:	6811      	ldr	r1, [r2, #0]
 800c55a:	f421 4180 	bic.w	r1, r1, #16384	; 0x4000
 800c55e:	6011      	str	r1, [r2, #0]
  if ((hspi->Instance->CR1 & SPI_CR1_SPE) != SPI_CR1_SPE)
 800c560:	6811      	ldr	r1, [r2, #0]
 800c562:	0648      	lsls	r0, r1, #25
 800c564:	d403      	bmi.n	800c56e <HAL_SPI_Receive+0xa2>
    __HAL_SPI_ENABLE(hspi);
 800c566:	6811      	ldr	r1, [r2, #0]
 800c568:	f041 0140 	orr.w	r1, r1, #64	; 0x40
 800c56c:	6011      	str	r1, [r2, #0]
  if (hspi->Init.DataSize == SPI_DATASIZE_8BIT)
 800c56e:	68e1      	ldr	r1, [r4, #12]
 800c570:	2900      	cmp	r1, #0
 800c572:	d054      	beq.n	800c61e <HAL_SPI_Receive+0x152>
    while (hspi->RxXferCount > 0U)
 800c574:	8fe1      	ldrh	r1, [r4, #62]	; 0x3e
 800c576:	b289      	uxth	r1, r1
 800c578:	b1a9      	cbz	r1, 800c5a6 <HAL_SPI_Receive+0xda>
 800c57a:	1c69      	adds	r1, r5, #1
 800c57c:	d13e      	bne.n	800c5fc <HAL_SPI_Receive+0x130>
      if (__HAL_SPI_GET_FLAG(hspi, SPI_FLAG_RXNE))
 800c57e:	6893      	ldr	r3, [r2, #8]
 800c580:	07db      	lsls	r3, r3, #31
 800c582:	d544      	bpl.n	800c60e <HAL_SPI_Receive+0x142>
        *((uint16_t *)hspi->pRxBuffPtr) = (uint16_t)hspi->Instance->DR;
 800c584:	6ba3      	ldr	r3, [r4, #56]	; 0x38
 800c586:	68d1      	ldr	r1, [r2, #12]
 800c588:	f823 1b02 	strh.w	r1, [r3], #2
        hspi->RxXferCount--;
 800c58c:	f8b4 c03e 	ldrh.w	ip, [r4, #62]	; 0x3e
        hspi->pRxBuffPtr += sizeof(uint16_t);
 800c590:	63a3      	str	r3, [r4, #56]	; 0x38
        hspi->RxXferCount--;
 800c592:	f10c 3cff 	add.w	ip, ip, #4294967295
 800c596:	fa1f fc8c 	uxth.w	ip, ip
 800c59a:	f8a4 c03e 	strh.w	ip, [r4, #62]	; 0x3e
    while (hspi->RxXferCount > 0U)
 800c59e:	8fe3      	ldrh	r3, [r4, #62]	; 0x3e
 800c5a0:	b29b      	uxth	r3, r3
 800c5a2:	2b00      	cmp	r3, #0
 800c5a4:	d1eb      	bne.n	800c57e <HAL_SPI_Receive+0xb2>
  if (SPI_EndRxTransaction(hspi, Timeout, tickstart) != HAL_OK)
 800c5a6:	4632      	mov	r2, r6
 800c5a8:	4629      	mov	r1, r5
 800c5aa:	4620      	mov	r0, r4
 800c5ac:	f7ff fc48 	bl	800be40 <SPI_EndRxTransaction>
 800c5b0:	b108      	cbz	r0, 800c5b6 <HAL_SPI_Receive+0xea>
    hspi->ErrorCode = HAL_SPI_ERROR_FLAG;
 800c5b2:	2320      	movs	r3, #32
 800c5b4:	6563      	str	r3, [r4, #84]	; 0x54
  if (hspi->ErrorCode != HAL_SPI_ERROR_NONE)
 800c5b6:	6d60      	ldr	r0, [r4, #84]	; 0x54
    errorcode = HAL_BUSY;
 800c5b8:	3800      	subs	r0, #0
 800c5ba:	bf18      	it	ne
 800c5bc:	2001      	movne	r0, #1
error :
 800c5be:	e7a2      	b.n	800c506 <HAL_SPI_Receive+0x3a>
  if ((hspi->Init.Mode == SPI_MODE_MASTER) && (hspi->Init.Direction == SPI_DIRECTION_2LINES))
 800c5c0:	6883      	ldr	r3, [r0, #8]
 800c5c2:	2b00      	cmp	r3, #0
 800c5c4:	d18d      	bne.n	800c4e2 <HAL_SPI_Receive+0x16>
    return HAL_SPI_TransmitReceive(hspi, pData, pData, Size, Timeout);
 800c5c6:	9500      	str	r5, [sp, #0]
    hspi->State = HAL_SPI_STATE_BUSY_RX;
 800c5c8:	2504      	movs	r5, #4
    return HAL_SPI_TransmitReceive(hspi, pData, pData, Size, Timeout);
 800c5ca:	4613      	mov	r3, r2
    hspi->State = HAL_SPI_STATE_BUSY_RX;
 800c5cc:	f880 5051 	strb.w	r5, [r0, #81]	; 0x51
    return HAL_SPI_TransmitReceive(hspi, pData, pData, Size, Timeout);
 800c5d0:	460a      	mov	r2, r1
 800c5d2:	f7ff fdf5 	bl	800c1c0 <HAL_SPI_TransmitReceive>
 800c5d6:	e79c      	b.n	800c512 <HAL_SPI_Receive+0x46>
  __HAL_LOCK(hspi);
 800c5d8:	2002      	movs	r0, #2
}
 800c5da:	b002      	add	sp, #8
 800c5dc:	e8bd 81f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, pc}
        *((uint16_t *)hspi->pRxBuffPtr) = (uint16_t)hspi->Instance->DR;
 800c5e0:	6ba2      	ldr	r2, [r4, #56]	; 0x38
 800c5e2:	68db      	ldr	r3, [r3, #12]
 800c5e4:	f822 3b02 	strh.w	r3, [r2], #2
        hspi->RxXferCount--;
 800c5e8:	8fe3      	ldrh	r3, [r4, #62]	; 0x3e
        hspi->pRxBuffPtr += sizeof(uint16_t);
 800c5ea:	63a2      	str	r2, [r4, #56]	; 0x38
        hspi->RxXferCount--;
 800c5ec:	3b01      	subs	r3, #1
 800c5ee:	b29b      	uxth	r3, r3
 800c5f0:	87e3      	strh	r3, [r4, #62]	; 0x3e
    while (hspi->RxXferCount > 0U)
 800c5f2:	8fe3      	ldrh	r3, [r4, #62]	; 0x3e
 800c5f4:	b29b      	uxth	r3, r3
 800c5f6:	2b00      	cmp	r3, #0
 800c5f8:	d0d5      	beq.n	800c5a6 <HAL_SPI_Receive+0xda>
      if (__HAL_SPI_GET_FLAG(hspi, SPI_FLAG_RXNE))
 800c5fa:	6823      	ldr	r3, [r4, #0]
 800c5fc:	689a      	ldr	r2, [r3, #8]
 800c5fe:	07d2      	lsls	r2, r2, #31
 800c600:	d4ee      	bmi.n	800c5e0 <HAL_SPI_Receive+0x114>
        if ((((HAL_GetTick() - tickstart) >=  Timeout) && (Timeout != HAL_MAX_DELAY)) || (Timeout == 0U))
 800c602:	f7fc fd3f 	bl	8009084 <HAL_GetTick>
 800c606:	1b80      	subs	r0, r0, r6
 800c608:	42a8      	cmp	r0, r5
 800c60a:	d243      	bcs.n	800c694 <HAL_SPI_Receive+0x1c8>
 800c60c:	e7f1      	b.n	800c5f2 <HAL_SPI_Receive+0x126>
 800c60e:	f7fc fd39 	bl	8009084 <HAL_GetTick>
    while (hspi->RxXferCount > 0U)
 800c612:	8fe3      	ldrh	r3, [r4, #62]	; 0x3e
 800c614:	b29b      	uxth	r3, r3
 800c616:	2b00      	cmp	r3, #0
 800c618:	d0c5      	beq.n	800c5a6 <HAL_SPI_Receive+0xda>
 800c61a:	6822      	ldr	r2, [r4, #0]
 800c61c:	e7af      	b.n	800c57e <HAL_SPI_Receive+0xb2>
    while (hspi->RxXferCount > 0U)
 800c61e:	8fe2      	ldrh	r2, [r4, #62]	; 0x3e
 800c620:	b292      	uxth	r2, r2
 800c622:	2a00      	cmp	r2, #0
 800c624:	d0bf      	beq.n	800c5a6 <HAL_SPI_Receive+0xda>
 800c626:	1c6f      	adds	r7, r5, #1
 800c628:	d013      	beq.n	800c652 <HAL_SPI_Receive+0x186>
 800c62a:	e02b      	b.n	800c684 <HAL_SPI_Receive+0x1b8>
        (* (uint8_t *)hspi->pRxBuffPtr) = *(__IO uint8_t *)&hspi->Instance->DR;
 800c62c:	6ba2      	ldr	r2, [r4, #56]	; 0x38
 800c62e:	7b1b      	ldrb	r3, [r3, #12]
 800c630:	7013      	strb	r3, [r2, #0]
        hspi->RxXferCount--;
 800c632:	f8b4 c03e 	ldrh.w	ip, [r4, #62]	; 0x3e
        hspi->pRxBuffPtr += sizeof(uint8_t);
 800c636:	6ba2      	ldr	r2, [r4, #56]	; 0x38
        hspi->RxXferCount--;
 800c638:	f10c 3cff 	add.w	ip, ip, #4294967295
 800c63c:	fa1f fc8c 	uxth.w	ip, ip
 800c640:	f8a4 c03e 	strh.w	ip, [r4, #62]	; 0x3e
    while (hspi->RxXferCount > 0U)
 800c644:	8fe3      	ldrh	r3, [r4, #62]	; 0x3e
        hspi->pRxBuffPtr += sizeof(uint8_t);
 800c646:	3201      	adds	r2, #1
    while (hspi->RxXferCount > 0U)
 800c648:	b29b      	uxth	r3, r3
        hspi->pRxBuffPtr += sizeof(uint8_t);
 800c64a:	63a2      	str	r2, [r4, #56]	; 0x38
    while (hspi->RxXferCount > 0U)
 800c64c:	2b00      	cmp	r3, #0
 800c64e:	d0aa      	beq.n	800c5a6 <HAL_SPI_Receive+0xda>
      if (__HAL_SPI_GET_FLAG(hspi, SPI_FLAG_RXNE))
 800c650:	6823      	ldr	r3, [r4, #0]
 800c652:	689a      	ldr	r2, [r3, #8]
 800c654:	07d0      	lsls	r0, r2, #31
 800c656:	d4e9      	bmi.n	800c62c <HAL_SPI_Receive+0x160>
        if ((((HAL_GetTick() - tickstart) >=  Timeout) && (Timeout != HAL_MAX_DELAY)) || (Timeout == 0U))
 800c658:	f7fc fd14 	bl	8009084 <HAL_GetTick>
    while (hspi->RxXferCount > 0U)
 800c65c:	8fe3      	ldrh	r3, [r4, #62]	; 0x3e
 800c65e:	b29b      	uxth	r3, r3
 800c660:	2b00      	cmp	r3, #0
 800c662:	d1f5      	bne.n	800c650 <HAL_SPI_Receive+0x184>
 800c664:	e79f      	b.n	800c5a6 <HAL_SPI_Receive+0xda>
        (* (uint8_t *)hspi->pRxBuffPtr) = *(__IO uint8_t *)&hspi->Instance->DR;
 800c666:	6ba2      	ldr	r2, [r4, #56]	; 0x38
 800c668:	7b1b      	ldrb	r3, [r3, #12]
 800c66a:	7013      	strb	r3, [r2, #0]
        hspi->RxXferCount--;
 800c66c:	8fe3      	ldrh	r3, [r4, #62]	; 0x3e
        hspi->pRxBuffPtr += sizeof(uint8_t);
 800c66e:	6ba2      	ldr	r2, [r4, #56]	; 0x38
        hspi->RxXferCount--;
 800c670:	3b01      	subs	r3, #1
        hspi->pRxBuffPtr += sizeof(uint8_t);
 800c672:	3201      	adds	r2, #1
        hspi->RxXferCount--;
 800c674:	b29b      	uxth	r3, r3
        hspi->pRxBuffPtr += sizeof(uint8_t);
 800c676:	63a2      	str	r2, [r4, #56]	; 0x38
        hspi->RxXferCount--;
 800c678:	87e3      	strh	r3, [r4, #62]	; 0x3e
    while (hspi->RxXferCount > 0U)
 800c67a:	8fe3      	ldrh	r3, [r4, #62]	; 0x3e
 800c67c:	b29b      	uxth	r3, r3
 800c67e:	2b00      	cmp	r3, #0
 800c680:	d091      	beq.n	800c5a6 <HAL_SPI_Receive+0xda>
      if (__HAL_SPI_GET_FLAG(hspi, SPI_FLAG_RXNE))
 800c682:	6823      	ldr	r3, [r4, #0]
 800c684:	689a      	ldr	r2, [r3, #8]
 800c686:	07d1      	lsls	r1, r2, #31
 800c688:	d4ed      	bmi.n	800c666 <HAL_SPI_Receive+0x19a>
        if ((((HAL_GetTick() - tickstart) >=  Timeout) && (Timeout != HAL_MAX_DELAY)) || (Timeout == 0U))
 800c68a:	f7fc fcfb 	bl	8009084 <HAL_GetTick>
 800c68e:	1b80      	subs	r0, r0, r6
 800c690:	42a8      	cmp	r0, r5
 800c692:	d3f2      	bcc.n	800c67a <HAL_SPI_Receive+0x1ae>
          errorcode = HAL_TIMEOUT;
 800c694:	2003      	movs	r0, #3
 800c696:	e736      	b.n	800c506 <HAL_SPI_Receive+0x3a>

0800c698 <HAL_TIM_Base_Init>:
  * @retval HAL status
  */
HAL_StatusTypeDef HAL_TIM_Base_Init(TIM_HandleTypeDef *htim)
{
  /* Check the TIM handle allocation */
  if (htim == NULL)
 800c698:	2800      	cmp	r0, #0
 800c69a:	f000 8087 	beq.w	800c7ac <HAL_TIM_Base_Init+0x114>
{
 800c69e:	b510      	push	{r4, lr}
  assert_param(IS_TIM_INSTANCE(htim->Instance));
  assert_param(IS_TIM_COUNTER_MODE(htim->Init.CounterMode));
  assert_param(IS_TIM_CLOCKDIVISION_DIV(htim->Init.ClockDivision));
  assert_param(IS_TIM_AUTORELOAD_PRELOAD(htim->Init.AutoReloadPreload));

  if (htim->State == HAL_TIM_STATE_RESET)
 800c6a0:	f890 303d 	ldrb.w	r3, [r0, #61]	; 0x3d
 800c6a4:	4604      	mov	r4, r0
 800c6a6:	f003 02ff 	and.w	r2, r3, #255	; 0xff
 800c6aa:	2b00      	cmp	r3, #0
 800c6ac:	d079      	beq.n	800c7a2 <HAL_TIM_Base_Init+0x10a>

  /* Set the TIM state */
  htim->State = HAL_TIM_STATE_BUSY;

  /* Set the Time Base configuration */
  TIM_Base_SetConfig(htim->Instance, &htim->Init);
 800c6ae:	6822      	ldr	r2, [r4, #0]
{
  uint32_t tmpcr1;
  tmpcr1 = TIMx->CR1;

  /* Set TIM Time Base Unit parameters ---------------------------------------*/
  if (IS_TIM_COUNTER_MODE_SELECT_INSTANCE(TIMx))
 800c6b0:	493f      	ldr	r1, [pc, #252]	; (800c7b0 <HAL_TIM_Base_Init+0x118>)
  htim->State = HAL_TIM_STATE_BUSY;
 800c6b2:	2302      	movs	r3, #2
 800c6b4:	f884 303d 	strb.w	r3, [r4, #61]	; 0x3d
  if (IS_TIM_COUNTER_MODE_SELECT_INSTANCE(TIMx))
 800c6b8:	428a      	cmp	r2, r1
  tmpcr1 = TIMx->CR1;
 800c6ba:	6813      	ldr	r3, [r2, #0]
  if (IS_TIM_COUNTER_MODE_SELECT_INSTANCE(TIMx))
 800c6bc:	d05d      	beq.n	800c77a <HAL_TIM_Base_Init+0xe2>
 800c6be:	f1b2 4f80 	cmp.w	r2, #1073741824	; 0x40000000
 800c6c2:	d031      	beq.n	800c728 <HAL_TIM_Base_Init+0x90>
 800c6c4:	f5a1 417c 	sub.w	r1, r1, #64512	; 0xfc00
 800c6c8:	428a      	cmp	r2, r1
 800c6ca:	d02d      	beq.n	800c728 <HAL_TIM_Base_Init+0x90>
 800c6cc:	f501 6180 	add.w	r1, r1, #1024	; 0x400
 800c6d0:	428a      	cmp	r2, r1
 800c6d2:	d029      	beq.n	800c728 <HAL_TIM_Base_Init+0x90>
 800c6d4:	f501 6180 	add.w	r1, r1, #1024	; 0x400
 800c6d8:	428a      	cmp	r2, r1
 800c6da:	d025      	beq.n	800c728 <HAL_TIM_Base_Init+0x90>
 800c6dc:	f501 4178 	add.w	r1, r1, #63488	; 0xf800
 800c6e0:	428a      	cmp	r2, r1
 800c6e2:	d04a      	beq.n	800c77a <HAL_TIM_Base_Init+0xe2>
    /* Select the Counter Mode */
    tmpcr1 &= ~(TIM_CR1_DIR | TIM_CR1_CMS);
    tmpcr1 |= Structure->CounterMode;
  }

  if (IS_TIM_CLOCK_DIVISION_INSTANCE(TIMx))
 800c6e4:	f501 5170 	add.w	r1, r1, #15360	; 0x3c00
 800c6e8:	428a      	cmp	r2, r1
 800c6ea:	d021      	beq.n	800c730 <HAL_TIM_Base_Init+0x98>
 800c6ec:	f501 6180 	add.w	r1, r1, #1024	; 0x400
 800c6f0:	428a      	cmp	r2, r1
 800c6f2:	d01d      	beq.n	800c730 <HAL_TIM_Base_Init+0x98>
 800c6f4:	f501 6180 	add.w	r1, r1, #1024	; 0x400
 800c6f8:	428a      	cmp	r2, r1
 800c6fa:	d019      	beq.n	800c730 <HAL_TIM_Base_Init+0x98>
 800c6fc:	f5a1 3198 	sub.w	r1, r1, #77824	; 0x13000
 800c700:	428a      	cmp	r2, r1
 800c702:	d015      	beq.n	800c730 <HAL_TIM_Base_Init+0x98>
 800c704:	f501 6180 	add.w	r1, r1, #1024	; 0x400
 800c708:	428a      	cmp	r2, r1
 800c70a:	d011      	beq.n	800c730 <HAL_TIM_Base_Init+0x98>
 800c70c:	f501 6180 	add.w	r1, r1, #1024	; 0x400
 800c710:	428a      	cmp	r2, r1
 800c712:	d00d      	beq.n	800c730 <HAL_TIM_Base_Init+0x98>
    tmpcr1 &= ~TIM_CR1_CKD;
    tmpcr1 |= (uint32_t)Structure->ClockDivision;
  }

  /* Set the auto-reload preload */
  MODIFY_REG(tmpcr1, TIM_CR1_ARPE, Structure->AutoReloadPreload);
 800c714:	69a0      	ldr	r0, [r4, #24]

  TIMx->CR1 = tmpcr1;

  /* Set the Autoreload value */
  TIMx->ARR = (uint32_t)Structure->Period ;
 800c716:	68e1      	ldr	r1, [r4, #12]
  MODIFY_REG(tmpcr1, TIM_CR1_ARPE, Structure->AutoReloadPreload);
 800c718:	f023 0380 	bic.w	r3, r3, #128	; 0x80
 800c71c:	4303      	orrs	r3, r0
  TIMx->CR1 = tmpcr1;
 800c71e:	6013      	str	r3, [r2, #0]

  /* Set the Prescaler value */
  TIMx->PSC = Structure->Prescaler;
 800c720:	6863      	ldr	r3, [r4, #4]
  TIMx->ARR = (uint32_t)Structure->Period ;
 800c722:	62d1      	str	r1, [r2, #44]	; 0x2c
  TIMx->PSC = Structure->Prescaler;
 800c724:	6293      	str	r3, [r2, #40]	; 0x28

  if (IS_TIM_REPETITION_COUNTER_INSTANCE(TIMx))
 800c726:	e010      	b.n	800c74a <HAL_TIM_Base_Init+0xb2>
    tmpcr1 |= Structure->CounterMode;
 800c728:	68a1      	ldr	r1, [r4, #8]
    tmpcr1 &= ~(TIM_CR1_DIR | TIM_CR1_CMS);
 800c72a:	f023 0370 	bic.w	r3, r3, #112	; 0x70
    tmpcr1 |= Structure->CounterMode;
 800c72e:	430b      	orrs	r3, r1
    tmpcr1 |= (uint32_t)Structure->ClockDivision;
 800c730:	6920      	ldr	r0, [r4, #16]
  MODIFY_REG(tmpcr1, TIM_CR1_ARPE, Structure->AutoReloadPreload);
 800c732:	69a1      	ldr	r1, [r4, #24]
    tmpcr1 &= ~TIM_CR1_CKD;
 800c734:	f423 7340 	bic.w	r3, r3, #768	; 0x300
    tmpcr1 |= (uint32_t)Structure->ClockDivision;
 800c738:	4303      	orrs	r3, r0
  MODIFY_REG(tmpcr1, TIM_CR1_ARPE, Structure->AutoReloadPreload);
 800c73a:	f023 0380 	bic.w	r3, r3, #128	; 0x80
  TIMx->ARR = (uint32_t)Structure->Period ;
 800c73e:	68e0      	ldr	r0, [r4, #12]
  MODIFY_REG(tmpcr1, TIM_CR1_ARPE, Structure->AutoReloadPreload);
 800c740:	430b      	orrs	r3, r1
  TIMx->PSC = Structure->Prescaler;
 800c742:	6861      	ldr	r1, [r4, #4]
  TIMx->CR1 = tmpcr1;
 800c744:	6013      	str	r3, [r2, #0]
  TIMx->ARR = (uint32_t)Structure->Period ;
 800c746:	62d0      	str	r0, [r2, #44]	; 0x2c
  TIMx->PSC = Structure->Prescaler;
 800c748:	6291      	str	r1, [r2, #40]	; 0x28
    TIMx->RCR = Structure->RepetitionCounter;
  }

  /* Generate an update event to reload the Prescaler
     and the repetition counter (only for advanced timer) value immediately */
  TIMx->EGR = TIM_EGR_UG;
 800c74a:	2301      	movs	r3, #1
 800c74c:	6153      	str	r3, [r2, #20]
  htim->DMABurstState = HAL_DMA_BURST_STATE_READY;
 800c74e:	f884 3046 	strb.w	r3, [r4, #70]	; 0x46
  TIM_CHANNEL_STATE_SET_ALL(htim, HAL_TIM_CHANNEL_STATE_READY);
 800c752:	f884 303e 	strb.w	r3, [r4, #62]	; 0x3e
 800c756:	f884 303f 	strb.w	r3, [r4, #63]	; 0x3f
 800c75a:	f884 3040 	strb.w	r3, [r4, #64]	; 0x40
 800c75e:	f884 3041 	strb.w	r3, [r4, #65]	; 0x41
  TIM_CHANNEL_N_STATE_SET_ALL(htim, HAL_TIM_CHANNEL_STATE_READY);
 800c762:	f884 3042 	strb.w	r3, [r4, #66]	; 0x42
 800c766:	f884 3043 	strb.w	r3, [r4, #67]	; 0x43
 800c76a:	f884 3044 	strb.w	r3, [r4, #68]	; 0x44
 800c76e:	f884 3045 	strb.w	r3, [r4, #69]	; 0x45
  htim->State = HAL_TIM_STATE_READY;
 800c772:	f884 303d 	strb.w	r3, [r4, #61]	; 0x3d
  return HAL_OK;
 800c776:	2000      	movs	r0, #0
}
 800c778:	bd10      	pop	{r4, pc}
    tmpcr1 |= Structure->CounterMode;
 800c77a:	68a0      	ldr	r0, [r4, #8]
    tmpcr1 |= (uint32_t)Structure->ClockDivision;
 800c77c:	6921      	ldr	r1, [r4, #16]
    tmpcr1 &= ~(TIM_CR1_DIR | TIM_CR1_CMS);
 800c77e:	f023 0370 	bic.w	r3, r3, #112	; 0x70
    tmpcr1 |= Structure->CounterMode;
 800c782:	4303      	orrs	r3, r0
    tmpcr1 &= ~TIM_CR1_CKD;
 800c784:	f423 7340 	bic.w	r3, r3, #768	; 0x300
    tmpcr1 |= (uint32_t)Structure->ClockDivision;
 800c788:	430b      	orrs	r3, r1
  MODIFY_REG(tmpcr1, TIM_CR1_ARPE, Structure->AutoReloadPreload);
 800c78a:	69a1      	ldr	r1, [r4, #24]
 800c78c:	f023 0380 	bic.w	r3, r3, #128	; 0x80
 800c790:	430b      	orrs	r3, r1
  TIMx->CR1 = tmpcr1;
 800c792:	6013      	str	r3, [r2, #0]
  TIMx->ARR = (uint32_t)Structure->Period ;
 800c794:	68e3      	ldr	r3, [r4, #12]
 800c796:	62d3      	str	r3, [r2, #44]	; 0x2c
  TIMx->PSC = Structure->Prescaler;
 800c798:	6863      	ldr	r3, [r4, #4]
 800c79a:	6293      	str	r3, [r2, #40]	; 0x28
    TIMx->RCR = Structure->RepetitionCounter;
 800c79c:	6963      	ldr	r3, [r4, #20]
 800c79e:	6313      	str	r3, [r2, #48]	; 0x30
 800c7a0:	e7d3      	b.n	800c74a <HAL_TIM_Base_Init+0xb2>
    htim->Lock = HAL_UNLOCKED;
 800c7a2:	f880 203c 	strb.w	r2, [r0, #60]	; 0x3c
    HAL_TIM_Base_MspInit(htim);
 800c7a6:	f7f5 fceb 	bl	8002180 <HAL_TIM_Base_MspInit>
 800c7aa:	e780      	b.n	800c6ae <HAL_TIM_Base_Init+0x16>
    return HAL_ERROR;
 800c7ac:	2001      	movs	r0, #1
}
 800c7ae:	4770      	bx	lr
 800c7b0:	40010000 	.word	0x40010000

0800c7b4 <HAL_TIM_Base_Start_IT>:
  if (htim->State != HAL_TIM_STATE_READY)
 800c7b4:	f890 303d 	ldrb.w	r3, [r0, #61]	; 0x3d
 800c7b8:	2b01      	cmp	r3, #1
 800c7ba:	d12f      	bne.n	800c81c <HAL_TIM_Base_Start_IT+0x68>
  __HAL_TIM_ENABLE_IT(htim, TIM_IT_UPDATE);
 800c7bc:	6803      	ldr	r3, [r0, #0]
  if (IS_TIM_SLAVE_INSTANCE(htim->Instance))
 800c7be:	4919      	ldr	r1, [pc, #100]	; (800c824 <HAL_TIM_Base_Start_IT+0x70>)
  htim->State = HAL_TIM_STATE_BUSY;
 800c7c0:	2202      	movs	r2, #2
 800c7c2:	f880 203d 	strb.w	r2, [r0, #61]	; 0x3d
  __HAL_TIM_ENABLE_IT(htim, TIM_IT_UPDATE);
 800c7c6:	68da      	ldr	r2, [r3, #12]
  if (IS_TIM_SLAVE_INSTANCE(htim->Instance))
 800c7c8:	428b      	cmp	r3, r1
  __HAL_TIM_ENABLE_IT(htim, TIM_IT_UPDATE);
 800c7ca:	f042 0201 	orr.w	r2, r2, #1
 800c7ce:	60da      	str	r2, [r3, #12]
  if (IS_TIM_SLAVE_INSTANCE(htim->Instance))
 800c7d0:	d019      	beq.n	800c806 <HAL_TIM_Base_Start_IT+0x52>
 800c7d2:	f1b3 4f80 	cmp.w	r3, #1073741824	; 0x40000000
 800c7d6:	d016      	beq.n	800c806 <HAL_TIM_Base_Start_IT+0x52>
 800c7d8:	4a13      	ldr	r2, [pc, #76]	; (800c828 <HAL_TIM_Base_Start_IT+0x74>)
 800c7da:	4293      	cmp	r3, r2
 800c7dc:	d013      	beq.n	800c806 <HAL_TIM_Base_Start_IT+0x52>
 800c7de:	f502 6280 	add.w	r2, r2, #1024	; 0x400
 800c7e2:	4293      	cmp	r3, r2
 800c7e4:	d00f      	beq.n	800c806 <HAL_TIM_Base_Start_IT+0x52>
 800c7e6:	f502 6280 	add.w	r2, r2, #1024	; 0x400
 800c7ea:	4293      	cmp	r3, r2
 800c7ec:	d00b      	beq.n	800c806 <HAL_TIM_Base_Start_IT+0x52>
 800c7ee:	f502 4278 	add.w	r2, r2, #63488	; 0xf800
 800c7f2:	4293      	cmp	r3, r2
 800c7f4:	d007      	beq.n	800c806 <HAL_TIM_Base_Start_IT+0x52>
 800c7f6:	f502 5270 	add.w	r2, r2, #15360	; 0x3c00
 800c7fa:	4293      	cmp	r3, r2
 800c7fc:	d003      	beq.n	800c806 <HAL_TIM_Base_Start_IT+0x52>
 800c7fe:	f5a2 3294 	sub.w	r2, r2, #75776	; 0x12800
 800c802:	4293      	cmp	r3, r2
 800c804:	d104      	bne.n	800c810 <HAL_TIM_Base_Start_IT+0x5c>
    tmpsmcr = htim->Instance->SMCR & TIM_SMCR_SMS;
 800c806:	689a      	ldr	r2, [r3, #8]
 800c808:	f002 0207 	and.w	r2, r2, #7
    if (!IS_TIM_SLAVEMODE_TRIGGER_ENABLED(tmpsmcr))
 800c80c:	2a06      	cmp	r2, #6
 800c80e:	d007      	beq.n	800c820 <HAL_TIM_Base_Start_IT+0x6c>
    __HAL_TIM_ENABLE(htim);
 800c810:	681a      	ldr	r2, [r3, #0]
 800c812:	f042 0201 	orr.w	r2, r2, #1
  return HAL_OK;
 800c816:	2000      	movs	r0, #0
    __HAL_TIM_ENABLE(htim);
 800c818:	601a      	str	r2, [r3, #0]
 800c81a:	4770      	bx	lr
    return HAL_ERROR;
 800c81c:	2001      	movs	r0, #1
 800c81e:	4770      	bx	lr
  return HAL_OK;
 800c820:	2000      	movs	r0, #0
}
 800c822:	4770      	bx	lr
 800c824:	40010000 	.word	0x40010000
 800c828:	40000400 	.word	0x40000400

0800c82c <HAL_TIM_ConfigClockSource>:
  __HAL_LOCK(htim);
 800c82c:	f890 303c 	ldrb.w	r3, [r0, #60]	; 0x3c
 800c830:	2b01      	cmp	r3, #1
 800c832:	d075      	beq.n	800c920 <HAL_TIM_ConfigClockSource+0xf4>
 800c834:	4602      	mov	r2, r0
{
 800c836:	b430      	push	{r4, r5}
  htim->State = HAL_TIM_STATE_BUSY;
 800c838:	2302      	movs	r3, #2
  tmpsmcr = htim->Instance->SMCR;
 800c83a:	6804      	ldr	r4, [r0, #0]
  htim->State = HAL_TIM_STATE_BUSY;
 800c83c:	f882 303d 	strb.w	r3, [r2, #61]	; 0x3d
  __HAL_LOCK(htim);
 800c840:	2001      	movs	r0, #1
 800c842:	f882 003c 	strb.w	r0, [r2, #60]	; 0x3c
  tmpsmcr = htim->Instance->SMCR;
 800c846:	68a3      	ldr	r3, [r4, #8]
  tmpsmcr &= ~(TIM_SMCR_ETF | TIM_SMCR_ETPS | TIM_SMCR_ECE | TIM_SMCR_ETP);
 800c848:	f423 437f 	bic.w	r3, r3, #65280	; 0xff00
 800c84c:	f023 0377 	bic.w	r3, r3, #119	; 0x77
  htim->Instance->SMCR = tmpsmcr;
 800c850:	60a3      	str	r3, [r4, #8]
  switch (sClockSourceConfig->ClockSource)
 800c852:	680b      	ldr	r3, [r1, #0]
 800c854:	2b60      	cmp	r3, #96	; 0x60
 800c856:	d065      	beq.n	800c924 <HAL_TIM_ConfigClockSource+0xf8>
 800c858:	d824      	bhi.n	800c8a4 <HAL_TIM_ConfigClockSource+0x78>
 800c85a:	2b40      	cmp	r3, #64	; 0x40
 800c85c:	d07c      	beq.n	800c958 <HAL_TIM_ConfigClockSource+0x12c>
 800c85e:	d94b      	bls.n	800c8f8 <HAL_TIM_ConfigClockSource+0xcc>
 800c860:	2b50      	cmp	r3, #80	; 0x50
 800c862:	d117      	bne.n	800c894 <HAL_TIM_ConfigClockSource+0x68>
      TIM_TI1_ConfigInputStage(htim->Instance,
 800c864:	684b      	ldr	r3, [r1, #4]
 800c866:	68cd      	ldr	r5, [r1, #12]
{
  uint32_t tmpccmr1;
  uint32_t tmpccer;

  /* Disable the Channel 1: Reset the CC1E Bit */
  tmpccer = TIMx->CCER;
 800c868:	6a21      	ldr	r1, [r4, #32]
  /* Set the filter */
  tmpccmr1 &= ~TIM_CCMR1_IC1F;
  tmpccmr1 |= (TIM_ICFilter << 4U);

  /* Select the Polarity and set the CC1E Bit */
  tmpccer &= ~(TIM_CCER_CC1P | TIM_CCER_CC1NP);
 800c86a:	f021 010a 	bic.w	r1, r1, #10
  tmpccer |= TIM_ICPolarity;
 800c86e:	4319      	orrs	r1, r3
  TIMx->CCER &= ~TIM_CCER_CC1E;
 800c870:	6a23      	ldr	r3, [r4, #32]
 800c872:	f023 0301 	bic.w	r3, r3, #1
 800c876:	6223      	str	r3, [r4, #32]
  tmpccmr1 = TIMx->CCMR1;
 800c878:	69a3      	ldr	r3, [r4, #24]
  tmpccmr1 &= ~TIM_CCMR1_IC1F;
 800c87a:	f023 03f0 	bic.w	r3, r3, #240	; 0xf0
  tmpccmr1 |= (TIM_ICFilter << 4U);
 800c87e:	ea43 1305 	orr.w	r3, r3, r5, lsl #4

  /* Write to TIMx CCMR1 and CCER registers */
  TIMx->CCMR1 = tmpccmr1;
 800c882:	61a3      	str	r3, [r4, #24]
  TIMx->CCER = tmpccer;
 800c884:	6221      	str	r1, [r4, #32]
static void TIM_ITRx_SetConfig(TIM_TypeDef *TIMx, uint32_t InputTriggerSource)
{
  uint32_t tmpsmcr;

  /* Get the TIMx SMCR register value */
  tmpsmcr = TIMx->SMCR;
 800c886:	68a3      	ldr	r3, [r4, #8]
  /* Reset the TS Bits */
  tmpsmcr &= ~TIM_SMCR_TS;
 800c888:	f023 0370 	bic.w	r3, r3, #112	; 0x70
  /* Set the Input Trigger source and the slave mode*/
  tmpsmcr |= (InputTriggerSource | TIM_SLAVEMODE_EXTERNAL1);
 800c88c:	f043 0357 	orr.w	r3, r3, #87	; 0x57
  HAL_StatusTypeDef status = HAL_OK;
 800c890:	2000      	movs	r0, #0
  /* Write to TIMx SMCR */
  TIMx->SMCR = tmpsmcr;
 800c892:	60a3      	str	r3, [r4, #8]
  htim->State = HAL_TIM_STATE_READY;
 800c894:	2101      	movs	r1, #1
  __HAL_UNLOCK(htim);
 800c896:	2300      	movs	r3, #0
  htim->State = HAL_TIM_STATE_READY;
 800c898:	f882 103d 	strb.w	r1, [r2, #61]	; 0x3d
  __HAL_UNLOCK(htim);
 800c89c:	f882 303c 	strb.w	r3, [r2, #60]	; 0x3c
}
 800c8a0:	bc30      	pop	{r4, r5}
 800c8a2:	4770      	bx	lr
  switch (sClockSourceConfig->ClockSource)
 800c8a4:	f5b3 5f80 	cmp.w	r3, #4096	; 0x1000
 800c8a8:	d038      	beq.n	800c91c <HAL_TIM_ConfigClockSource+0xf0>
 800c8aa:	f5b3 5f00 	cmp.w	r3, #8192	; 0x2000
 800c8ae:	d110      	bne.n	800c8d2 <HAL_TIM_ConfigClockSource+0xa6>

  /* Reset the ETR Bits */
  tmpsmcr &= ~(TIM_SMCR_ETF | TIM_SMCR_ETPS | TIM_SMCR_ECE | TIM_SMCR_ETP);

  /* Set the Prescaler, the Filter value and the Polarity */
  tmpsmcr |= (uint32_t)(TIM_ExtTRGPrescaler | (TIM_ExtTRGPolarity | (ExtTRGFilter << 8U)));
 800c8b0:	e9d1 5301 	ldrd	r5, r3, [r1, #4]
  tmpsmcr = TIMx->SMCR;
 800c8b4:	68a0      	ldr	r0, [r4, #8]
  tmpsmcr |= (uint32_t)(TIM_ExtTRGPrescaler | (TIM_ExtTRGPolarity | (ExtTRGFilter << 8U)));
 800c8b6:	432b      	orrs	r3, r5
 800c8b8:	68cd      	ldr	r5, [r1, #12]
  tmpsmcr &= ~(TIM_SMCR_ETF | TIM_SMCR_ETPS | TIM_SMCR_ECE | TIM_SMCR_ETP);
 800c8ba:	f420 417f 	bic.w	r1, r0, #65280	; 0xff00
  tmpsmcr |= (uint32_t)(TIM_ExtTRGPrescaler | (TIM_ExtTRGPolarity | (ExtTRGFilter << 8U)));
 800c8be:	ea43 2305 	orr.w	r3, r3, r5, lsl #8
 800c8c2:	430b      	orrs	r3, r1

  /* Write to TIMx SMCR */
  TIMx->SMCR = tmpsmcr;
 800c8c4:	60a3      	str	r3, [r4, #8]
      htim->Instance->SMCR |= TIM_SMCR_ECE;
 800c8c6:	68a3      	ldr	r3, [r4, #8]
 800c8c8:	f443 4380 	orr.w	r3, r3, #16384	; 0x4000
  HAL_StatusTypeDef status = HAL_OK;
 800c8cc:	2000      	movs	r0, #0
      htim->Instance->SMCR |= TIM_SMCR_ECE;
 800c8ce:	60a3      	str	r3, [r4, #8]
      break;
 800c8d0:	e7e0      	b.n	800c894 <HAL_TIM_ConfigClockSource+0x68>
  switch (sClockSourceConfig->ClockSource)
 800c8d2:	2b70      	cmp	r3, #112	; 0x70
 800c8d4:	d1de      	bne.n	800c894 <HAL_TIM_ConfigClockSource+0x68>
  tmpsmcr |= (uint32_t)(TIM_ExtTRGPrescaler | (TIM_ExtTRGPolarity | (ExtTRGFilter << 8U)));
 800c8d6:	e9d1 5301 	ldrd	r5, r3, [r1, #4]
  tmpsmcr = TIMx->SMCR;
 800c8da:	68a0      	ldr	r0, [r4, #8]
  tmpsmcr |= (uint32_t)(TIM_ExtTRGPrescaler | (TIM_ExtTRGPolarity | (ExtTRGFilter << 8U)));
 800c8dc:	432b      	orrs	r3, r5
 800c8de:	68cd      	ldr	r5, [r1, #12]
  tmpsmcr &= ~(TIM_SMCR_ETF | TIM_SMCR_ETPS | TIM_SMCR_ECE | TIM_SMCR_ETP);
 800c8e0:	f420 417f 	bic.w	r1, r0, #65280	; 0xff00
  tmpsmcr |= (uint32_t)(TIM_ExtTRGPrescaler | (TIM_ExtTRGPolarity | (ExtTRGFilter << 8U)));
 800c8e4:	ea43 2305 	orr.w	r3, r3, r5, lsl #8
 800c8e8:	430b      	orrs	r3, r1
  TIMx->SMCR = tmpsmcr;
 800c8ea:	60a3      	str	r3, [r4, #8]
      tmpsmcr = htim->Instance->SMCR;
 800c8ec:	68a3      	ldr	r3, [r4, #8]
      tmpsmcr |= (TIM_SLAVEMODE_EXTERNAL1 | TIM_CLOCKSOURCE_ETRMODE1);
 800c8ee:	f043 0377 	orr.w	r3, r3, #119	; 0x77
  HAL_StatusTypeDef status = HAL_OK;
 800c8f2:	2000      	movs	r0, #0
      htim->Instance->SMCR = tmpsmcr;
 800c8f4:	60a3      	str	r3, [r4, #8]
      break;
 800c8f6:	e7cd      	b.n	800c894 <HAL_TIM_ConfigClockSource+0x68>
  switch (sClockSourceConfig->ClockSource)
 800c8f8:	2b20      	cmp	r3, #32
 800c8fa:	d002      	beq.n	800c902 <HAL_TIM_ConfigClockSource+0xd6>
 800c8fc:	d90a      	bls.n	800c914 <HAL_TIM_ConfigClockSource+0xe8>
 800c8fe:	2b30      	cmp	r3, #48	; 0x30
 800c900:	d1c8      	bne.n	800c894 <HAL_TIM_ConfigClockSource+0x68>
  tmpsmcr = TIMx->SMCR;
 800c902:	68a1      	ldr	r1, [r4, #8]
  tmpsmcr &= ~TIM_SMCR_TS;
 800c904:	f021 0170 	bic.w	r1, r1, #112	; 0x70
  tmpsmcr |= (InputTriggerSource | TIM_SLAVEMODE_EXTERNAL1);
 800c908:	430b      	orrs	r3, r1
 800c90a:	f043 0307 	orr.w	r3, r3, #7
  HAL_StatusTypeDef status = HAL_OK;
 800c90e:	2000      	movs	r0, #0
  TIMx->SMCR = tmpsmcr;
 800c910:	60a3      	str	r3, [r4, #8]
}
 800c912:	e7bf      	b.n	800c894 <HAL_TIM_ConfigClockSource+0x68>
  switch (sClockSourceConfig->ClockSource)
 800c914:	f033 0110 	bics.w	r1, r3, #16
 800c918:	d1bc      	bne.n	800c894 <HAL_TIM_ConfigClockSource+0x68>
 800c91a:	e7f2      	b.n	800c902 <HAL_TIM_ConfigClockSource+0xd6>
  HAL_StatusTypeDef status = HAL_OK;
 800c91c:	2000      	movs	r0, #0
 800c91e:	e7b9      	b.n	800c894 <HAL_TIM_ConfigClockSource+0x68>
  __HAL_LOCK(htim);
 800c920:	2002      	movs	r0, #2
}
 800c922:	4770      	bx	lr
  TIMx->CCER &= ~TIM_CCER_CC2E;
 800c924:	6a23      	ldr	r3, [r4, #32]
      TIM_TI2_ConfigInputStage(htim->Instance,
 800c926:	6848      	ldr	r0, [r1, #4]
 800c928:	68cd      	ldr	r5, [r1, #12]
  TIMx->CCER &= ~TIM_CCER_CC2E;
 800c92a:	f023 0310 	bic.w	r3, r3, #16
 800c92e:	6223      	str	r3, [r4, #32]
  tmpccmr1 = TIMx->CCMR1;
 800c930:	69a1      	ldr	r1, [r4, #24]
  tmpccer = TIMx->CCER;
 800c932:	6a23      	ldr	r3, [r4, #32]
  tmpccmr1 &= ~TIM_CCMR1_IC2F;
 800c934:	f421 4170 	bic.w	r1, r1, #61440	; 0xf000
  tmpccer &= ~(TIM_CCER_CC2P | TIM_CCER_CC2NP);
 800c938:	f023 03a0 	bic.w	r3, r3, #160	; 0xa0
  tmpccer |= (TIM_ICPolarity << 4U);
 800c93c:	ea43 1300 	orr.w	r3, r3, r0, lsl #4
  tmpccmr1 |= (TIM_ICFilter << 12U);
 800c940:	ea41 3105 	orr.w	r1, r1, r5, lsl #12
  TIMx->CCMR1 = tmpccmr1 ;
 800c944:	61a1      	str	r1, [r4, #24]
  TIMx->CCER = tmpccer;
 800c946:	6223      	str	r3, [r4, #32]
  tmpsmcr = TIMx->SMCR;
 800c948:	68a3      	ldr	r3, [r4, #8]
  tmpsmcr &= ~TIM_SMCR_TS;
 800c94a:	f023 0370 	bic.w	r3, r3, #112	; 0x70
  tmpsmcr |= (InputTriggerSource | TIM_SLAVEMODE_EXTERNAL1);
 800c94e:	f043 0367 	orr.w	r3, r3, #103	; 0x67
  HAL_StatusTypeDef status = HAL_OK;
 800c952:	2000      	movs	r0, #0
  TIMx->SMCR = tmpsmcr;
 800c954:	60a3      	str	r3, [r4, #8]
}
 800c956:	e79d      	b.n	800c894 <HAL_TIM_ConfigClockSource+0x68>
      TIM_TI1_ConfigInputStage(htim->Instance,
 800c958:	684b      	ldr	r3, [r1, #4]
 800c95a:	68cd      	ldr	r5, [r1, #12]
  tmpccer = TIMx->CCER;
 800c95c:	6a21      	ldr	r1, [r4, #32]
  tmpccer &= ~(TIM_CCER_CC1P | TIM_CCER_CC1NP);
 800c95e:	f021 010a 	bic.w	r1, r1, #10
  tmpccer |= TIM_ICPolarity;
 800c962:	4319      	orrs	r1, r3
  TIMx->CCER &= ~TIM_CCER_CC1E;
 800c964:	6a23      	ldr	r3, [r4, #32]
 800c966:	f023 0301 	bic.w	r3, r3, #1
 800c96a:	6223      	str	r3, [r4, #32]
  tmpccmr1 = TIMx->CCMR1;
 800c96c:	69a3      	ldr	r3, [r4, #24]
  tmpccmr1 &= ~TIM_CCMR1_IC1F;
 800c96e:	f023 03f0 	bic.w	r3, r3, #240	; 0xf0
  tmpccmr1 |= (TIM_ICFilter << 4U);
 800c972:	ea43 1305 	orr.w	r3, r3, r5, lsl #4
  TIMx->CCMR1 = tmpccmr1;
 800c976:	61a3      	str	r3, [r4, #24]
  TIMx->CCER = tmpccer;
 800c978:	6221      	str	r1, [r4, #32]
  tmpsmcr = TIMx->SMCR;
 800c97a:	68a3      	ldr	r3, [r4, #8]
  tmpsmcr &= ~TIM_SMCR_TS;
 800c97c:	f023 0370 	bic.w	r3, r3, #112	; 0x70
  tmpsmcr |= (InputTriggerSource | TIM_SLAVEMODE_EXTERNAL1);
 800c980:	f043 0347 	orr.w	r3, r3, #71	; 0x47
  HAL_StatusTypeDef status = HAL_OK;
 800c984:	2000      	movs	r0, #0
  TIMx->SMCR = tmpsmcr;
 800c986:	60a3      	str	r3, [r4, #8]
}
 800c988:	e784      	b.n	800c894 <HAL_TIM_ConfigClockSource+0x68>
 800c98a:	bf00      	nop

0800c98c <HAL_TIM_SlaveConfigSynchro>:
  __HAL_LOCK(htim);
 800c98c:	f890 203c 	ldrb.w	r2, [r0, #60]	; 0x3c
 800c990:	2a01      	cmp	r2, #1
 800c992:	d050      	beq.n	800ca36 <HAL_TIM_SlaveConfigSynchro+0xaa>
 800c994:	4603      	mov	r3, r0
{
 800c996:	b430      	push	{r4, r5}
  htim->State = HAL_TIM_STATE_BUSY;
 800c998:	2202      	movs	r2, #2
  tmpsmcr = htim->Instance->SMCR;
 800c99a:	6804      	ldr	r4, [r0, #0]
  htim->State = HAL_TIM_STATE_BUSY;
 800c99c:	f883 203d 	strb.w	r2, [r3, #61]	; 0x3d
  __HAL_LOCK(htim);
 800c9a0:	2001      	movs	r0, #1
 800c9a2:	f883 003c 	strb.w	r0, [r3, #60]	; 0x3c
  tmpsmcr = htim->Instance->SMCR;
 800c9a6:	68a2      	ldr	r2, [r4, #8]
  tmpsmcr |= sSlaveConfig->InputTrigger;
 800c9a8:	6848      	ldr	r0, [r1, #4]
  tmpsmcr |= sSlaveConfig->SlaveMode;
 800c9aa:	680d      	ldr	r5, [r1, #0]
  tmpsmcr &= ~TIM_SMCR_TS;
 800c9ac:	f022 0270 	bic.w	r2, r2, #112	; 0x70
  tmpsmcr |= sSlaveConfig->InputTrigger;
 800c9b0:	4302      	orrs	r2, r0
  tmpsmcr &= ~TIM_SMCR_SMS;
 800c9b2:	f022 0207 	bic.w	r2, r2, #7
  tmpsmcr |= sSlaveConfig->SlaveMode;
 800c9b6:	432a      	orrs	r2, r5
  switch (sSlaveConfig->InputTrigger)
 800c9b8:	2850      	cmp	r0, #80	; 0x50
  htim->Instance->SMCR = tmpsmcr;
 800c9ba:	60a2      	str	r2, [r4, #8]
  switch (sSlaveConfig->InputTrigger)
 800c9bc:	d060      	beq.n	800ca80 <HAL_TIM_SlaveConfigSynchro+0xf4>
 800c9be:	d90f      	bls.n	800c9e0 <HAL_TIM_SlaveConfigSynchro+0x54>
 800c9c0:	2860      	cmp	r0, #96	; 0x60
 800c9c2:	d03a      	beq.n	800ca3a <HAL_TIM_SlaveConfigSynchro+0xae>
 800c9c4:	2870      	cmp	r0, #112	; 0x70
 800c9c6:	d10e      	bne.n	800c9e6 <HAL_TIM_SlaveConfigSynchro+0x5a>
  tmpsmcr |= (uint32_t)(TIM_ExtTRGPrescaler | (TIM_ExtTRGPolarity | (ExtTRGFilter << 8U)));
 800c9c8:	e9d1 5202 	ldrd	r5, r2, [r1, #8]
  tmpsmcr = TIMx->SMCR;
 800c9cc:	68a0      	ldr	r0, [r4, #8]
  tmpsmcr |= (uint32_t)(TIM_ExtTRGPrescaler | (TIM_ExtTRGPolarity | (ExtTRGFilter << 8U)));
 800c9ce:	432a      	orrs	r2, r5
 800c9d0:	690d      	ldr	r5, [r1, #16]
  tmpsmcr &= ~(TIM_SMCR_ETF | TIM_SMCR_ETPS | TIM_SMCR_ECE | TIM_SMCR_ETP);
 800c9d2:	f420 417f 	bic.w	r1, r0, #65280	; 0xff00
  tmpsmcr |= (uint32_t)(TIM_ExtTRGPrescaler | (TIM_ExtTRGPolarity | (ExtTRGFilter << 8U)));
 800c9d6:	ea42 2205 	orr.w	r2, r2, r5, lsl #8
 800c9da:	430a      	orrs	r2, r1
  TIMx->SMCR = tmpsmcr;
 800c9dc:	60a2      	str	r2, [r4, #8]
 800c9de:	e00f      	b.n	800ca00 <HAL_TIM_SlaveConfigSynchro+0x74>
  switch (sSlaveConfig->InputTrigger)
 800c9e0:	2840      	cmp	r0, #64	; 0x40
 800c9e2:	d03d      	beq.n	800ca60 <HAL_TIM_SlaveConfigSynchro+0xd4>
 800c9e4:	d907      	bls.n	800c9f6 <HAL_TIM_SlaveConfigSynchro+0x6a>
    htim->State = HAL_TIM_STATE_READY;
 800c9e6:	2001      	movs	r0, #1
    __HAL_UNLOCK(htim);
 800c9e8:	2200      	movs	r2, #0
    htim->State = HAL_TIM_STATE_READY;
 800c9ea:	f883 003d 	strb.w	r0, [r3, #61]	; 0x3d
    __HAL_UNLOCK(htim);
 800c9ee:	f883 203c 	strb.w	r2, [r3, #60]	; 0x3c
}
 800c9f2:	bc30      	pop	{r4, r5}
 800c9f4:	4770      	bx	lr
  switch (sSlaveConfig->InputTrigger)
 800c9f6:	2820      	cmp	r0, #32
 800c9f8:	d002      	beq.n	800ca00 <HAL_TIM_SlaveConfigSynchro+0x74>
 800c9fa:	d912      	bls.n	800ca22 <HAL_TIM_SlaveConfigSynchro+0x96>
 800c9fc:	2830      	cmp	r0, #48	; 0x30
 800c9fe:	d1f2      	bne.n	800c9e6 <HAL_TIM_SlaveConfigSynchro+0x5a>
  __HAL_TIM_DISABLE_IT(htim, TIM_IT_TRIGGER);
 800ca00:	68e2      	ldr	r2, [r4, #12]
 800ca02:	f022 0240 	bic.w	r2, r2, #64	; 0x40
 800ca06:	60e2      	str	r2, [r4, #12]
  __HAL_TIM_DISABLE_DMA(htim, TIM_DMA_TRIGGER);
 800ca08:	68e2      	ldr	r2, [r4, #12]
  __HAL_UNLOCK(htim);
 800ca0a:	2100      	movs	r1, #0
  htim->State = HAL_TIM_STATE_READY;
 800ca0c:	2501      	movs	r5, #1
  __HAL_TIM_DISABLE_DMA(htim, TIM_DMA_TRIGGER);
 800ca0e:	f422 4280 	bic.w	r2, r2, #16384	; 0x4000
 800ca12:	60e2      	str	r2, [r4, #12]
  htim->State = HAL_TIM_STATE_READY;
 800ca14:	f883 503d 	strb.w	r5, [r3, #61]	; 0x3d
  __HAL_UNLOCK(htim);
 800ca18:	f883 103c 	strb.w	r1, [r3, #60]	; 0x3c
  return HAL_OK;
 800ca1c:	4608      	mov	r0, r1
}
 800ca1e:	bc30      	pop	{r4, r5}
 800ca20:	4770      	bx	lr
  switch (sSlaveConfig->InputTrigger)
 800ca22:	f030 0210 	bics.w	r2, r0, #16
 800ca26:	d0eb      	beq.n	800ca00 <HAL_TIM_SlaveConfigSynchro+0x74>
    htim->State = HAL_TIM_STATE_READY;
 800ca28:	2001      	movs	r0, #1
    __HAL_UNLOCK(htim);
 800ca2a:	2200      	movs	r2, #0
    htim->State = HAL_TIM_STATE_READY;
 800ca2c:	f883 003d 	strb.w	r0, [r3, #61]	; 0x3d
    __HAL_UNLOCK(htim);
 800ca30:	f883 203c 	strb.w	r2, [r3, #60]	; 0x3c
    return HAL_ERROR;
 800ca34:	e7dd      	b.n	800c9f2 <HAL_TIM_SlaveConfigSynchro+0x66>
  __HAL_LOCK(htim);
 800ca36:	2002      	movs	r0, #2
}
 800ca38:	4770      	bx	lr
  TIMx->CCER &= ~TIM_CCER_CC2E;
 800ca3a:	6a22      	ldr	r2, [r4, #32]
      TIM_TI2_ConfigInputStage(htim->Instance,
 800ca3c:	6888      	ldr	r0, [r1, #8]
 800ca3e:	690d      	ldr	r5, [r1, #16]
  TIMx->CCER &= ~TIM_CCER_CC2E;
 800ca40:	f022 0210 	bic.w	r2, r2, #16
 800ca44:	6222      	str	r2, [r4, #32]
  tmpccmr1 = TIMx->CCMR1;
 800ca46:	69a1      	ldr	r1, [r4, #24]
  tmpccer = TIMx->CCER;
 800ca48:	6a22      	ldr	r2, [r4, #32]
  tmpccmr1 &= ~TIM_CCMR1_IC2F;
 800ca4a:	f421 4170 	bic.w	r1, r1, #61440	; 0xf000
  tmpccer &= ~(TIM_CCER_CC2P | TIM_CCER_CC2NP);
 800ca4e:	f022 02a0 	bic.w	r2, r2, #160	; 0xa0
  tmpccmr1 |= (TIM_ICFilter << 12U);
 800ca52:	ea41 3105 	orr.w	r1, r1, r5, lsl #12
  tmpccer |= (TIM_ICPolarity << 4U);
 800ca56:	ea42 1200 	orr.w	r2, r2, r0, lsl #4
  TIMx->CCMR1 = tmpccmr1 ;
 800ca5a:	61a1      	str	r1, [r4, #24]
  TIMx->CCER = tmpccer;
 800ca5c:	6222      	str	r2, [r4, #32]
 800ca5e:	e7cf      	b.n	800ca00 <HAL_TIM_SlaveConfigSynchro+0x74>
      if (sSlaveConfig->SlaveMode == TIM_SLAVEMODE_GATED)
 800ca60:	2d05      	cmp	r5, #5
 800ca62:	d0c0      	beq.n	800c9e6 <HAL_TIM_SlaveConfigSynchro+0x5a>
      tmpccer = htim->Instance->CCER;
 800ca64:	6a20      	ldr	r0, [r4, #32]
      htim->Instance->CCER &= ~TIM_CCER_CC1E;
 800ca66:	6a22      	ldr	r2, [r4, #32]
      tmpccmr1 |= ((sSlaveConfig->TriggerFilter) << 4U);
 800ca68:	6909      	ldr	r1, [r1, #16]
      htim->Instance->CCER &= ~TIM_CCER_CC1E;
 800ca6a:	f022 0201 	bic.w	r2, r2, #1
 800ca6e:	6222      	str	r2, [r4, #32]
      tmpccmr1 = htim->Instance->CCMR1;
 800ca70:	69a2      	ldr	r2, [r4, #24]
      tmpccmr1 &= ~TIM_CCMR1_IC1F;
 800ca72:	f022 02f0 	bic.w	r2, r2, #240	; 0xf0
      tmpccmr1 |= ((sSlaveConfig->TriggerFilter) << 4U);
 800ca76:	ea42 1201 	orr.w	r2, r2, r1, lsl #4
      htim->Instance->CCMR1 = tmpccmr1;
 800ca7a:	61a2      	str	r2, [r4, #24]
      htim->Instance->CCER = tmpccer;
 800ca7c:	6220      	str	r0, [r4, #32]
      break;
 800ca7e:	e7bf      	b.n	800ca00 <HAL_TIM_SlaveConfigSynchro+0x74>
      TIM_TI1_ConfigInputStage(htim->Instance,
 800ca80:	688a      	ldr	r2, [r1, #8]
 800ca82:	6908      	ldr	r0, [r1, #16]
  tmpccer = TIMx->CCER;
 800ca84:	6a21      	ldr	r1, [r4, #32]
  tmpccer &= ~(TIM_CCER_CC1P | TIM_CCER_CC1NP);
 800ca86:	f021 010a 	bic.w	r1, r1, #10
  tmpccer |= TIM_ICPolarity;
 800ca8a:	4311      	orrs	r1, r2
  TIMx->CCER &= ~TIM_CCER_CC1E;
 800ca8c:	6a22      	ldr	r2, [r4, #32]
 800ca8e:	f022 0201 	bic.w	r2, r2, #1
 800ca92:	6222      	str	r2, [r4, #32]
  tmpccmr1 = TIMx->CCMR1;
 800ca94:	69a2      	ldr	r2, [r4, #24]
  tmpccmr1 &= ~TIM_CCMR1_IC1F;
 800ca96:	f022 02f0 	bic.w	r2, r2, #240	; 0xf0
  tmpccmr1 |= (TIM_ICFilter << 4U);
 800ca9a:	ea42 1200 	orr.w	r2, r2, r0, lsl #4
  TIMx->CCMR1 = tmpccmr1;
 800ca9e:	61a2      	str	r2, [r4, #24]
  TIMx->CCER = tmpccer;
 800caa0:	6221      	str	r1, [r4, #32]
 800caa2:	e7ad      	b.n	800ca00 <HAL_TIM_SlaveConfigSynchro+0x74>

0800caa4 <HAL_TIM_OC_DelayElapsedCallback>:
 800caa4:	4770      	bx	lr
 800caa6:	bf00      	nop

0800caa8 <HAL_TIM_IC_CaptureCallback>:
 800caa8:	4770      	bx	lr
 800caaa:	bf00      	nop

0800caac <HAL_TIM_PWM_PulseFinishedCallback>:
 800caac:	4770      	bx	lr
 800caae:	bf00      	nop

0800cab0 <HAL_TIM_TriggerCallback>:
 800cab0:	4770      	bx	lr
 800cab2:	bf00      	nop

0800cab4 <HAL_TIM_IRQHandler>:
  if (__HAL_TIM_GET_FLAG(htim, TIM_FLAG_CC1) != RESET)
 800cab4:	6803      	ldr	r3, [r0, #0]
 800cab6:	691a      	ldr	r2, [r3, #16]
 800cab8:	0791      	lsls	r1, r2, #30
{
 800caba:	b510      	push	{r4, lr}
 800cabc:	4604      	mov	r4, r0
  if (__HAL_TIM_GET_FLAG(htim, TIM_FLAG_CC1) != RESET)
 800cabe:	d502      	bpl.n	800cac6 <HAL_TIM_IRQHandler+0x12>
    if (__HAL_TIM_GET_IT_SOURCE(htim, TIM_IT_CC1) != RESET)
 800cac0:	68da      	ldr	r2, [r3, #12]
 800cac2:	0792      	lsls	r2, r2, #30
 800cac4:	d45f      	bmi.n	800cb86 <HAL_TIM_IRQHandler+0xd2>
  if (__HAL_TIM_GET_FLAG(htim, TIM_FLAG_CC2) != RESET)
 800cac6:	691a      	ldr	r2, [r3, #16]
 800cac8:	0750      	lsls	r0, r2, #29
 800caca:	d502      	bpl.n	800cad2 <HAL_TIM_IRQHandler+0x1e>
    if (__HAL_TIM_GET_IT_SOURCE(htim, TIM_IT_CC2) != RESET)
 800cacc:	68da      	ldr	r2, [r3, #12]
 800cace:	0751      	lsls	r1, r2, #29
 800cad0:	d446      	bmi.n	800cb60 <HAL_TIM_IRQHandler+0xac>
  if (__HAL_TIM_GET_FLAG(htim, TIM_FLAG_CC3) != RESET)
 800cad2:	691a      	ldr	r2, [r3, #16]
 800cad4:	0712      	lsls	r2, r2, #28
 800cad6:	d502      	bpl.n	800cade <HAL_TIM_IRQHandler+0x2a>
    if (__HAL_TIM_GET_IT_SOURCE(htim, TIM_IT_CC3) != RESET)
 800cad8:	68da      	ldr	r2, [r3, #12]
 800cada:	0710      	lsls	r0, r2, #28
 800cadc:	d42e      	bmi.n	800cb3c <HAL_TIM_IRQHandler+0x88>
  if (__HAL_TIM_GET_FLAG(htim, TIM_FLAG_CC4) != RESET)
 800cade:	691a      	ldr	r2, [r3, #16]
 800cae0:	06d2      	lsls	r2, r2, #27
 800cae2:	d502      	bpl.n	800caea <HAL_TIM_IRQHandler+0x36>
    if (__HAL_TIM_GET_IT_SOURCE(htim, TIM_IT_CC4) != RESET)
 800cae4:	68da      	ldr	r2, [r3, #12]
 800cae6:	06d0      	lsls	r0, r2, #27
 800cae8:	d418      	bmi.n	800cb1c <HAL_TIM_IRQHandler+0x68>
  if (__HAL_TIM_GET_FLAG(htim, TIM_FLAG_UPDATE) != RESET)
 800caea:	691a      	ldr	r2, [r3, #16]
 800caec:	07d1      	lsls	r1, r2, #31
 800caee:	d502      	bpl.n	800caf6 <HAL_TIM_IRQHandler+0x42>
    if (__HAL_TIM_GET_IT_SOURCE(htim, TIM_IT_UPDATE) != RESET)
 800caf0:	68da      	ldr	r2, [r3, #12]
 800caf2:	07d2      	lsls	r2, r2, #31
 800caf4:	d45d      	bmi.n	800cbb2 <HAL_TIM_IRQHandler+0xfe>
  if (__HAL_TIM_GET_FLAG(htim, TIM_FLAG_BREAK) != RESET)
 800caf6:	691a      	ldr	r2, [r3, #16]
 800caf8:	0610      	lsls	r0, r2, #24
 800cafa:	d502      	bpl.n	800cb02 <HAL_TIM_IRQHandler+0x4e>
    if (__HAL_TIM_GET_IT_SOURCE(htim, TIM_IT_BREAK) != RESET)
 800cafc:	68da      	ldr	r2, [r3, #12]
 800cafe:	0611      	lsls	r1, r2, #24
 800cb00:	d45f      	bmi.n	800cbc2 <HAL_TIM_IRQHandler+0x10e>
  if (__HAL_TIM_GET_FLAG(htim, TIM_FLAG_TRIGGER) != RESET)
 800cb02:	691a      	ldr	r2, [r3, #16]
 800cb04:	0652      	lsls	r2, r2, #25
 800cb06:	d502      	bpl.n	800cb0e <HAL_TIM_IRQHandler+0x5a>
    if (__HAL_TIM_GET_IT_SOURCE(htim, TIM_IT_TRIGGER) != RESET)
 800cb08:	68da      	ldr	r2, [r3, #12]
 800cb0a:	0650      	lsls	r0, r2, #25
 800cb0c:	d461      	bmi.n	800cbd2 <HAL_TIM_IRQHandler+0x11e>
  if (__HAL_TIM_GET_FLAG(htim, TIM_FLAG_COM) != RESET)
 800cb0e:	691a      	ldr	r2, [r3, #16]
 800cb10:	0691      	lsls	r1, r2, #26
 800cb12:	d502      	bpl.n	800cb1a <HAL_TIM_IRQHandler+0x66>
    if (__HAL_TIM_GET_IT_SOURCE(htim, TIM_IT_COM) != RESET)
 800cb14:	68da      	ldr	r2, [r3, #12]
 800cb16:	0692      	lsls	r2, r2, #26
 800cb18:	d443      	bmi.n	800cba2 <HAL_TIM_IRQHandler+0xee>
}
 800cb1a:	bd10      	pop	{r4, pc}
      __HAL_TIM_CLEAR_IT(htim, TIM_IT_CC4);
 800cb1c:	f06f 0110 	mvn.w	r1, #16
      htim->Channel = HAL_TIM_ACTIVE_CHANNEL_4;
 800cb20:	2208      	movs	r2, #8
      __HAL_TIM_CLEAR_IT(htim, TIM_IT_CC4);
 800cb22:	6119      	str	r1, [r3, #16]
      htim->Channel = HAL_TIM_ACTIVE_CHANNEL_4;
 800cb24:	7722      	strb	r2, [r4, #28]
      if ((htim->Instance->CCMR2 & TIM_CCMR2_CC4S) != 0x00U)
 800cb26:	69db      	ldr	r3, [r3, #28]
 800cb28:	f413 7f40 	tst.w	r3, #768	; 0x300
        HAL_TIM_IC_CaptureCallback(htim);
 800cb2c:	4620      	mov	r0, r4
      if ((htim->Instance->CCMR2 & TIM_CCMR2_CC4S) != 0x00U)
 800cb2e:	d064      	beq.n	800cbfa <HAL_TIM_IRQHandler+0x146>
        HAL_TIM_IC_CaptureCallback(htim);
 800cb30:	f7ff ffba 	bl	800caa8 <HAL_TIM_IC_CaptureCallback>
      htim->Channel = HAL_TIM_ACTIVE_CHANNEL_CLEARED;
 800cb34:	2200      	movs	r2, #0
  if (__HAL_TIM_GET_FLAG(htim, TIM_FLAG_UPDATE) != RESET)
 800cb36:	6823      	ldr	r3, [r4, #0]
      htim->Channel = HAL_TIM_ACTIVE_CHANNEL_CLEARED;
 800cb38:	7722      	strb	r2, [r4, #28]
 800cb3a:	e7d6      	b.n	800caea <HAL_TIM_IRQHandler+0x36>
      __HAL_TIM_CLEAR_IT(htim, TIM_IT_CC3);
 800cb3c:	f06f 0108 	mvn.w	r1, #8
      htim->Channel = HAL_TIM_ACTIVE_CHANNEL_3;
 800cb40:	2204      	movs	r2, #4
      __HAL_TIM_CLEAR_IT(htim, TIM_IT_CC3);
 800cb42:	6119      	str	r1, [r3, #16]
      htim->Channel = HAL_TIM_ACTIVE_CHANNEL_3;
 800cb44:	7722      	strb	r2, [r4, #28]
      if ((htim->Instance->CCMR2 & TIM_CCMR2_CC3S) != 0x00U)
 800cb46:	69db      	ldr	r3, [r3, #28]
 800cb48:	0799      	lsls	r1, r3, #30
        HAL_TIM_IC_CaptureCallback(htim);
 800cb4a:	4620      	mov	r0, r4
      if ((htim->Instance->CCMR2 & TIM_CCMR2_CC3S) != 0x00U)
 800cb4c:	d152      	bne.n	800cbf4 <HAL_TIM_IRQHandler+0x140>
        HAL_TIM_OC_DelayElapsedCallback(htim);
 800cb4e:	f7ff ffa9 	bl	800caa4 <HAL_TIM_OC_DelayElapsedCallback>
        HAL_TIM_PWM_PulseFinishedCallback(htim);
 800cb52:	4620      	mov	r0, r4
 800cb54:	f7ff ffaa 	bl	800caac <HAL_TIM_PWM_PulseFinishedCallback>
      htim->Channel = HAL_TIM_ACTIVE_CHANNEL_CLEARED;
 800cb58:	2200      	movs	r2, #0
  if (__HAL_TIM_GET_FLAG(htim, TIM_FLAG_CC4) != RESET)
 800cb5a:	6823      	ldr	r3, [r4, #0]
      htim->Channel = HAL_TIM_ACTIVE_CHANNEL_CLEARED;
 800cb5c:	7722      	strb	r2, [r4, #28]
 800cb5e:	e7be      	b.n	800cade <HAL_TIM_IRQHandler+0x2a>
      __HAL_TIM_CLEAR_IT(htim, TIM_IT_CC2);
 800cb60:	f06f 0104 	mvn.w	r1, #4
      htim->Channel = HAL_TIM_ACTIVE_CHANNEL_2;
 800cb64:	2202      	movs	r2, #2
      __HAL_TIM_CLEAR_IT(htim, TIM_IT_CC2);
 800cb66:	6119      	str	r1, [r3, #16]
      htim->Channel = HAL_TIM_ACTIVE_CHANNEL_2;
 800cb68:	7722      	strb	r2, [r4, #28]
      if ((htim->Instance->CCMR1 & TIM_CCMR1_CC2S) != 0x00U)
 800cb6a:	699b      	ldr	r3, [r3, #24]
 800cb6c:	f413 7f40 	tst.w	r3, #768	; 0x300
        HAL_TIM_IC_CaptureCallback(htim);
 800cb70:	4620      	mov	r0, r4
      if ((htim->Instance->CCMR1 & TIM_CCMR1_CC2S) != 0x00U)
 800cb72:	d13c      	bne.n	800cbee <HAL_TIM_IRQHandler+0x13a>
        HAL_TIM_OC_DelayElapsedCallback(htim);
 800cb74:	f7ff ff96 	bl	800caa4 <HAL_TIM_OC_DelayElapsedCallback>
        HAL_TIM_PWM_PulseFinishedCallback(htim);
 800cb78:	4620      	mov	r0, r4
 800cb7a:	f7ff ff97 	bl	800caac <HAL_TIM_PWM_PulseFinishedCallback>
      htim->Channel = HAL_TIM_ACTIVE_CHANNEL_CLEARED;
 800cb7e:	2200      	movs	r2, #0
  if (__HAL_TIM_GET_FLAG(htim, TIM_FLAG_CC3) != RESET)
 800cb80:	6823      	ldr	r3, [r4, #0]
      htim->Channel = HAL_TIM_ACTIVE_CHANNEL_CLEARED;
 800cb82:	7722      	strb	r2, [r4, #28]
 800cb84:	e7a5      	b.n	800cad2 <HAL_TIM_IRQHandler+0x1e>
        __HAL_TIM_CLEAR_IT(htim, TIM_IT_CC1);
 800cb86:	f06f 0102 	mvn.w	r1, #2
        htim->Channel = HAL_TIM_ACTIVE_CHANNEL_1;
 800cb8a:	2201      	movs	r2, #1
        __HAL_TIM_CLEAR_IT(htim, TIM_IT_CC1);
 800cb8c:	6119      	str	r1, [r3, #16]
        htim->Channel = HAL_TIM_ACTIVE_CHANNEL_1;
 800cb8e:	7702      	strb	r2, [r0, #28]
        if ((htim->Instance->CCMR1 & TIM_CCMR1_CC1S) != 0x00U)
 800cb90:	699b      	ldr	r3, [r3, #24]
 800cb92:	079b      	lsls	r3, r3, #30
 800cb94:	d025      	beq.n	800cbe2 <HAL_TIM_IRQHandler+0x12e>
          HAL_TIM_IC_CaptureCallback(htim);
 800cb96:	f7ff ff87 	bl	800caa8 <HAL_TIM_IC_CaptureCallback>
        htim->Channel = HAL_TIM_ACTIVE_CHANNEL_CLEARED;
 800cb9a:	2200      	movs	r2, #0
  if (__HAL_TIM_GET_FLAG(htim, TIM_FLAG_CC2) != RESET)
 800cb9c:	6823      	ldr	r3, [r4, #0]
        htim->Channel = HAL_TIM_ACTIVE_CHANNEL_CLEARED;
 800cb9e:	7722      	strb	r2, [r4, #28]
 800cba0:	e791      	b.n	800cac6 <HAL_TIM_IRQHandler+0x12>
      __HAL_TIM_CLEAR_IT(htim, TIM_FLAG_COM);
 800cba2:	f06f 0220 	mvn.w	r2, #32
      HAL_TIMEx_CommutCallback(htim);
 800cba6:	4620      	mov	r0, r4
      __HAL_TIM_CLEAR_IT(htim, TIM_FLAG_COM);
 800cba8:	611a      	str	r2, [r3, #16]
}
 800cbaa:	e8bd 4010 	ldmia.w	sp!, {r4, lr}
      HAL_TIMEx_CommutCallback(htim);
 800cbae:	f000 b86b 	b.w	800cc88 <HAL_TIMEx_CommutCallback>
      __HAL_TIM_CLEAR_IT(htim, TIM_IT_UPDATE);
 800cbb2:	f06f 0201 	mvn.w	r2, #1
 800cbb6:	611a      	str	r2, [r3, #16]
      HAL_TIM_PeriodElapsedCallback(htim);
 800cbb8:	4620      	mov	r0, r4
 800cbba:	f7f4 ff95 	bl	8001ae8 <HAL_TIM_PeriodElapsedCallback>
  if (__HAL_TIM_GET_FLAG(htim, TIM_FLAG_BREAK) != RESET)
 800cbbe:	6823      	ldr	r3, [r4, #0]
 800cbc0:	e799      	b.n	800caf6 <HAL_TIM_IRQHandler+0x42>
      __HAL_TIM_CLEAR_IT(htim, TIM_IT_BREAK);
 800cbc2:	f06f 0280 	mvn.w	r2, #128	; 0x80
 800cbc6:	611a      	str	r2, [r3, #16]
      HAL_TIMEx_BreakCallback(htim);
 800cbc8:	4620      	mov	r0, r4
 800cbca:	f000 f85f 	bl	800cc8c <HAL_TIMEx_BreakCallback>
  if (__HAL_TIM_GET_FLAG(htim, TIM_FLAG_TRIGGER) != RESET)
 800cbce:	6823      	ldr	r3, [r4, #0]
 800cbd0:	e797      	b.n	800cb02 <HAL_TIM_IRQHandler+0x4e>
      __HAL_TIM_CLEAR_IT(htim, TIM_IT_TRIGGER);
 800cbd2:	f06f 0240 	mvn.w	r2, #64	; 0x40
 800cbd6:	611a      	str	r2, [r3, #16]
      HAL_TIM_TriggerCallback(htim);
 800cbd8:	4620      	mov	r0, r4
 800cbda:	f7ff ff69 	bl	800cab0 <HAL_TIM_TriggerCallback>
  if (__HAL_TIM_GET_FLAG(htim, TIM_FLAG_COM) != RESET)
 800cbde:	6823      	ldr	r3, [r4, #0]
 800cbe0:	e795      	b.n	800cb0e <HAL_TIM_IRQHandler+0x5a>
          HAL_TIM_OC_DelayElapsedCallback(htim);
 800cbe2:	f7ff ff5f 	bl	800caa4 <HAL_TIM_OC_DelayElapsedCallback>
          HAL_TIM_PWM_PulseFinishedCallback(htim);
 800cbe6:	4620      	mov	r0, r4
 800cbe8:	f7ff ff60 	bl	800caac <HAL_TIM_PWM_PulseFinishedCallback>
 800cbec:	e7d5      	b.n	800cb9a <HAL_TIM_IRQHandler+0xe6>
        HAL_TIM_IC_CaptureCallback(htim);
 800cbee:	f7ff ff5b 	bl	800caa8 <HAL_TIM_IC_CaptureCallback>
 800cbf2:	e7c4      	b.n	800cb7e <HAL_TIM_IRQHandler+0xca>
        HAL_TIM_IC_CaptureCallback(htim);
 800cbf4:	f7ff ff58 	bl	800caa8 <HAL_TIM_IC_CaptureCallback>
 800cbf8:	e7ae      	b.n	800cb58 <HAL_TIM_IRQHandler+0xa4>
        HAL_TIM_OC_DelayElapsedCallback(htim);
 800cbfa:	f7ff ff53 	bl	800caa4 <HAL_TIM_OC_DelayElapsedCallback>
        HAL_TIM_PWM_PulseFinishedCallback(htim);
 800cbfe:	4620      	mov	r0, r4
 800cc00:	f7ff ff54 	bl	800caac <HAL_TIM_PWM_PulseFinishedCallback>
 800cc04:	e796      	b.n	800cb34 <HAL_TIM_IRQHandler+0x80>
 800cc06:	bf00      	nop

0800cc08 <HAL_TIMEx_MasterConfigSynchronization>:
  assert_param(IS_TIM_MASTER_INSTANCE(htim->Instance));
  assert_param(IS_TIM_TRGO_SOURCE(sMasterConfig->MasterOutputTrigger));
  assert_param(IS_TIM_MSM_STATE(sMasterConfig->MasterSlaveMode));

  /* Check input state */
  __HAL_LOCK(htim);
 800cc08:	f890 303c 	ldrb.w	r3, [r0, #60]	; 0x3c
 800cc0c:	2b01      	cmp	r3, #1
 800cc0e:	d037      	beq.n	800cc80 <HAL_TIMEx_MasterConfigSynchronization+0x78>

  /* Change the handler state */
  htim->State = HAL_TIM_STATE_BUSY;

  /* Get the TIMx CR2 register value */
  tmpcr2 = htim->Instance->CR2;
 800cc10:	6803      	ldr	r3, [r0, #0]
  htim->State = HAL_TIM_STATE_BUSY;
 800cc12:	2202      	movs	r2, #2
{
 800cc14:	b430      	push	{r4, r5}
  htim->State = HAL_TIM_STATE_BUSY;
 800cc16:	f880 203d 	strb.w	r2, [r0, #61]	; 0x3d
  tmpcr2 = htim->Instance->CR2;
 800cc1a:	685a      	ldr	r2, [r3, #4]
  tmpsmcr = htim->Instance->SMCR;

  /* Reset the MMS Bits */
  tmpcr2 &= ~TIM_CR2_MMS;
  /* Select the TRGO source */
  tmpcr2 |=  sMasterConfig->MasterOutputTrigger;
 800cc1c:	680d      	ldr	r5, [r1, #0]
  tmpsmcr = htim->Instance->SMCR;
 800cc1e:	689c      	ldr	r4, [r3, #8]
  tmpcr2 &= ~TIM_CR2_MMS;
 800cc20:	f022 0270 	bic.w	r2, r2, #112	; 0x70
  tmpcr2 |=  sMasterConfig->MasterOutputTrigger;
 800cc24:	432a      	orrs	r2, r5

  /* Update TIMx CR2 */
  htim->Instance->CR2 = tmpcr2;
 800cc26:	605a      	str	r2, [r3, #4]

  if (IS_TIM_SLAVE_INSTANCE(htim->Instance))
 800cc28:	4a16      	ldr	r2, [pc, #88]	; (800cc84 <HAL_TIMEx_MasterConfigSynchronization+0x7c>)
 800cc2a:	4293      	cmp	r3, r2
 800cc2c:	d01a      	beq.n	800cc64 <HAL_TIMEx_MasterConfigSynchronization+0x5c>
 800cc2e:	f1b3 4f80 	cmp.w	r3, #1073741824	; 0x40000000
 800cc32:	d017      	beq.n	800cc64 <HAL_TIMEx_MasterConfigSynchronization+0x5c>
 800cc34:	f5a2 427c 	sub.w	r2, r2, #64512	; 0xfc00
 800cc38:	4293      	cmp	r3, r2
 800cc3a:	d013      	beq.n	800cc64 <HAL_TIMEx_MasterConfigSynchronization+0x5c>
 800cc3c:	f502 6280 	add.w	r2, r2, #1024	; 0x400
 800cc40:	4293      	cmp	r3, r2
 800cc42:	d00f      	beq.n	800cc64 <HAL_TIMEx_MasterConfigSynchronization+0x5c>
 800cc44:	f502 6280 	add.w	r2, r2, #1024	; 0x400
 800cc48:	4293      	cmp	r3, r2
 800cc4a:	d00b      	beq.n	800cc64 <HAL_TIMEx_MasterConfigSynchronization+0x5c>
 800cc4c:	f502 4278 	add.w	r2, r2, #63488	; 0xf800
 800cc50:	4293      	cmp	r3, r2
 800cc52:	d007      	beq.n	800cc64 <HAL_TIMEx_MasterConfigSynchronization+0x5c>
 800cc54:	f502 5270 	add.w	r2, r2, #15360	; 0x3c00
 800cc58:	4293      	cmp	r3, r2
 800cc5a:	d003      	beq.n	800cc64 <HAL_TIMEx_MasterConfigSynchronization+0x5c>
 800cc5c:	f5a2 3294 	sub.w	r2, r2, #75776	; 0x12800
 800cc60:	4293      	cmp	r3, r2
 800cc62:	d104      	bne.n	800cc6e <HAL_TIMEx_MasterConfigSynchronization+0x66>
  {
    /* Reset the MSM Bit */
    tmpsmcr &= ~TIM_SMCR_MSM;
    /* Set master mode */
    tmpsmcr |= sMasterConfig->MasterSlaveMode;
 800cc64:	684a      	ldr	r2, [r1, #4]
    tmpsmcr &= ~TIM_SMCR_MSM;
 800cc66:	f024 0480 	bic.w	r4, r4, #128	; 0x80
    tmpsmcr |= sMasterConfig->MasterSlaveMode;
 800cc6a:	4314      	orrs	r4, r2

    /* Update TIMx SMCR */
    htim->Instance->SMCR = tmpsmcr;
 800cc6c:	609c      	str	r4, [r3, #8]
  }

  /* Change the htim state */
  htim->State = HAL_TIM_STATE_READY;

  __HAL_UNLOCK(htim);
 800cc6e:	2300      	movs	r3, #0
  htim->State = HAL_TIM_STATE_READY;
 800cc70:	2201      	movs	r2, #1
 800cc72:	f880 203d 	strb.w	r2, [r0, #61]	; 0x3d
  __HAL_UNLOCK(htim);
 800cc76:	f880 303c 	strb.w	r3, [r0, #60]	; 0x3c

  return HAL_OK;
}
 800cc7a:	bc30      	pop	{r4, r5}
  return HAL_OK;
 800cc7c:	4618      	mov	r0, r3
}
 800cc7e:	4770      	bx	lr
  __HAL_LOCK(htim);
 800cc80:	2002      	movs	r0, #2
}
 800cc82:	4770      	bx	lr
 800cc84:	40010000 	.word	0x40010000

0800cc88 <HAL_TIMEx_CommutCallback>:
 800cc88:	4770      	bx	lr
 800cc8a:	bf00      	nop

0800cc8c <HAL_TIMEx_BreakCallback>:
 800cc8c:	4770      	bx	lr
 800cc8e:	bf00      	nop

0800cc90 <FMC_SDRAM_Init>:
  assert_param(IS_FMC_SDCLOCK_PERIOD(Init->SDClockPeriod));
  assert_param(IS_FMC_READ_BURST(Init->ReadBurst));
  assert_param(IS_FMC_READPIPE_DELAY(Init->ReadPipeDelay));

  /* Set SDRAM bank configuration parameters */
  if (Init->SDBank == FMC_SDRAM_BANK1)
 800cc90:	680b      	ldr	r3, [r1, #0]
{
 800cc92:	b430      	push	{r4, r5}
  if (Init->SDBank == FMC_SDRAM_BANK1)
 800cc94:	b9d3      	cbnz	r3, 800cccc <FMC_SDRAM_Init+0x3c>
  {
    MODIFY_REG(Device->SDCR[FMC_SDRAM_BANK1],
 800cc96:	6803      	ldr	r3, [r0, #0]
 800cc98:	684c      	ldr	r4, [r1, #4]
 800cc9a:	688a      	ldr	r2, [r1, #8]
 800cc9c:	f423 43ff 	bic.w	r3, r3, #32640	; 0x7f80
 800cca0:	f023 037f 	bic.w	r3, r3, #127	; 0x7f
 800cca4:	4323      	orrs	r3, r4
 800cca6:	4313      	orrs	r3, r2
 800cca8:	e9d1 4203 	ldrd	r4, r2, [r1, #12]
 800ccac:	4323      	orrs	r3, r4
 800ccae:	4313      	orrs	r3, r2
 800ccb0:	e9d1 4205 	ldrd	r4, r2, [r1, #20]
 800ccb4:	4323      	orrs	r3, r4
 800ccb6:	e9d1 5407 	ldrd	r5, r4, [r1, #28]
 800ccba:	4313      	orrs	r3, r2
 800ccbc:	432b      	orrs	r3, r5
 800ccbe:	6a4a      	ldr	r2, [r1, #36]	; 0x24
 800ccc0:	4323      	orrs	r3, r4
 800ccc2:	4313      	orrs	r3, r2
 800ccc4:	6003      	str	r3, [r0, #0]
                Init->CASLatency         |
                Init->WriteProtection));
  }

  return HAL_OK;
}
 800ccc6:	bc30      	pop	{r4, r5}
 800ccc8:	2000      	movs	r0, #0
 800ccca:	4770      	bx	lr
    MODIFY_REG(Device->SDCR[FMC_SDRAM_BANK1],
 800cccc:	e9d1 4207 	ldrd	r4, r2, [r1, #28]
 800ccd0:	6803      	ldr	r3, [r0, #0]
 800ccd2:	f423 43f8 	bic.w	r3, r3, #31744	; 0x7c00
 800ccd6:	4323      	orrs	r3, r4
 800ccd8:	6a4c      	ldr	r4, [r1, #36]	; 0x24
 800ccda:	4313      	orrs	r3, r2
 800ccdc:	4323      	orrs	r3, r4
    MODIFY_REG(Device->SDCR[FMC_SDRAM_BANK2],
 800ccde:	684a      	ldr	r2, [r1, #4]
    MODIFY_REG(Device->SDCR[FMC_SDRAM_BANK1],
 800cce0:	6003      	str	r3, [r0, #0]
    MODIFY_REG(Device->SDCR[FMC_SDRAM_BANK2],
 800cce2:	6843      	ldr	r3, [r0, #4]
 800cce4:	f423 43ff 	bic.w	r3, r3, #32640	; 0x7f80
 800cce8:	f023 037f 	bic.w	r3, r3, #127	; 0x7f
 800ccec:	4313      	orrs	r3, r2
 800ccee:	e9d1 4202 	ldrd	r4, r2, [r1, #8]
 800ccf2:	4323      	orrs	r3, r4
 800ccf4:	e9d1 5404 	ldrd	r5, r4, [r1, #16]
 800ccf8:	4313      	orrs	r3, r2
 800ccfa:	432b      	orrs	r3, r5
 800ccfc:	698a      	ldr	r2, [r1, #24]
 800ccfe:	4323      	orrs	r3, r4
 800cd00:	4313      	orrs	r3, r2
 800cd02:	6043      	str	r3, [r0, #4]
}
 800cd04:	bc30      	pop	{r4, r5}
 800cd06:	2000      	movs	r0, #0
 800cd08:	4770      	bx	lr
 800cd0a:	bf00      	nop

0800cd0c <FMC_SDRAM_Timing_Init>:
  * @param  Bank SDRAM bank number
  * @retval HAL status
  */
HAL_StatusTypeDef FMC_SDRAM_Timing_Init(FMC_SDRAM_TypeDef *Device,
                                        FMC_SDRAM_TimingTypeDef *Timing, uint32_t Bank)
{
 800cd0c:	b430      	push	{r4, r5}
  assert_param(IS_FMC_SDRAM_BANK(Bank));

  /* Set SDRAM device timing parameters */
  if (Bank == FMC_SDRAM_BANK1)
  {
    MODIFY_REG(Device->SDTR[FMC_SDRAM_BANK1],
 800cd0e:	6883      	ldr	r3, [r0, #8]
  if (Bank == FMC_SDRAM_BANK1)
 800cd10:	bb02      	cbnz	r2, 800cd54 <FMC_SDRAM_Timing_Init+0x48>
    MODIFY_REG(Device->SDTR[FMC_SDRAM_BANK1],
 800cd12:	e9d1 2400 	ldrd	r2, r4, [r1]
 800cd16:	f003 4370 	and.w	r3, r3, #4026531840	; 0xf0000000
 800cd1a:	3c01      	subs	r4, #1
 800cd1c:	ea43 1304 	orr.w	r3, r3, r4, lsl #4
 800cd20:	3a01      	subs	r2, #1
 800cd22:	4313      	orrs	r3, r2
 800cd24:	e9d1 4202 	ldrd	r4, r2, [r1, #8]
 800cd28:	3c01      	subs	r4, #1
 800cd2a:	ea43 2304 	orr.w	r3, r3, r4, lsl #8
 800cd2e:	e9d1 5404 	ldrd	r5, r4, [r1, #16]
 800cd32:	3a01      	subs	r2, #1
 800cd34:	ea43 3302 	orr.w	r3, r3, r2, lsl #12
 800cd38:	698a      	ldr	r2, [r1, #24]
 800cd3a:	1e69      	subs	r1, r5, #1
 800cd3c:	ea43 4301 	orr.w	r3, r3, r1, lsl #16
 800cd40:	1e61      	subs	r1, r4, #1
 800cd42:	ea43 5301 	orr.w	r3, r3, r1, lsl #20
 800cd46:	3a01      	subs	r2, #1
 800cd48:	ea43 6302 	orr.w	r3, r3, r2, lsl #24
 800cd4c:	6083      	str	r3, [r0, #8]
                (((Timing->WriteRecoveryTime) - 1U)    << FMC_SDTR1_TWR_Pos)  |
                (((Timing->RCDDelay) - 1U)             << FMC_SDTR1_TRCD_Pos)));
  }

  return HAL_OK;
}
 800cd4e:	bc30      	pop	{r4, r5}
 800cd50:	2000      	movs	r0, #0
 800cd52:	4770      	bx	lr
    MODIFY_REG(Device->SDTR[FMC_SDRAM_BANK1],
 800cd54:	68cc      	ldr	r4, [r1, #12]
 800cd56:	694a      	ldr	r2, [r1, #20]
    MODIFY_REG(Device->SDTR[FMC_SDRAM_BANK2],
 800cd58:	688d      	ldr	r5, [r1, #8]
    MODIFY_REG(Device->SDTR[FMC_SDRAM_BANK1],
 800cd5a:	f423 0370 	bic.w	r3, r3, #15728640	; 0xf00000
 800cd5e:	3c01      	subs	r4, #1
 800cd60:	f423 4370 	bic.w	r3, r3, #61440	; 0xf000
 800cd64:	ea43 3304 	orr.w	r3, r3, r4, lsl #12
 800cd68:	3a01      	subs	r2, #1
 800cd6a:	ea43 5302 	orr.w	r3, r3, r2, lsl #20
 800cd6e:	6083      	str	r3, [r0, #8]
    MODIFY_REG(Device->SDTR[FMC_SDRAM_BANK2],
 800cd70:	e9d1 2400 	ldrd	r2, r4, [r1]
 800cd74:	68c3      	ldr	r3, [r0, #12]
 800cd76:	3c01      	subs	r4, #1
 800cd78:	f003 4370 	and.w	r3, r3, #4026531840	; 0xf0000000
 800cd7c:	ea43 1304 	orr.w	r3, r3, r4, lsl #4
 800cd80:	3a01      	subs	r2, #1
 800cd82:	690c      	ldr	r4, [r1, #16]
 800cd84:	4313      	orrs	r3, r2
 800cd86:	698a      	ldr	r2, [r1, #24]
 800cd88:	1e69      	subs	r1, r5, #1
 800cd8a:	ea43 2301 	orr.w	r3, r3, r1, lsl #8
 800cd8e:	1e61      	subs	r1, r4, #1
 800cd90:	ea43 4301 	orr.w	r3, r3, r1, lsl #16
 800cd94:	3a01      	subs	r2, #1
 800cd96:	ea43 6302 	orr.w	r3, r3, r2, lsl #24
 800cd9a:	60c3      	str	r3, [r0, #12]
}
 800cd9c:	bc30      	pop	{r4, r5}
 800cd9e:	2000      	movs	r0, #0
 800cda0:	4770      	bx	lr
 800cda2:	bf00      	nop

0800cda4 <FMC_SDRAM_SendCommand>:
  * @param  Timeout Timeout wait value
  * @retval HAL state
  */
HAL_StatusTypeDef FMC_SDRAM_SendCommand(FMC_SDRAM_TypeDef *Device,
                                        FMC_SDRAM_CommandTypeDef *Command, uint32_t Timeout)
{
 800cda4:	b570      	push	{r4, r5, r6, lr}
  assert_param(IS_FMC_COMMAND_TARGET(Command->CommandTarget));
  assert_param(IS_FMC_AUTOREFRESH_NUMBER(Command->AutoRefreshNumber));
  assert_param(IS_FMC_MODE_REGISTER(Command->ModeRegisterDefinition));

  /* Set command register */
  MODIFY_REG(Device->SDCMR, (FMC_SDCMR_MODE | FMC_SDCMR_CTB2 | FMC_SDCMR_CTB1 | FMC_SDCMR_NRFS | FMC_SDCMR_MRD),
 800cda6:	680b      	ldr	r3, [r1, #0]
{
 800cda8:	4615      	mov	r5, r2
  MODIFY_REG(Device->SDCMR, (FMC_SDCMR_MODE | FMC_SDCMR_CTB2 | FMC_SDCMR_CTB1 | FMC_SDCMR_NRFS | FMC_SDCMR_MRD),
 800cdaa:	684a      	ldr	r2, [r1, #4]
{
 800cdac:	4604      	mov	r4, r0
  MODIFY_REG(Device->SDCMR, (FMC_SDCMR_MODE | FMC_SDCMR_CTB2 | FMC_SDCMR_CTB1 | FMC_SDCMR_NRFS | FMC_SDCMR_MRD),
 800cdae:	4313      	orrs	r3, r2
 800cdb0:	6900      	ldr	r0, [r0, #16]
 800cdb2:	68ca      	ldr	r2, [r1, #12]
 800cdb4:	0d80      	lsrs	r0, r0, #22
 800cdb6:	ea43 2342 	orr.w	r3, r3, r2, lsl #9
 800cdba:	688a      	ldr	r2, [r1, #8]
 800cdbc:	0580      	lsls	r0, r0, #22
 800cdbe:	4303      	orrs	r3, r0
 800cdc0:	3a01      	subs	r2, #1
 800cdc2:	ea43 1342 	orr.w	r3, r3, r2, lsl #5
 800cdc6:	6123      	str	r3, [r4, #16]
             ((Command->CommandMode) | (Command->CommandTarget) |
              (((Command->AutoRefreshNumber) - 1U) << FMC_SDCMR_NRFS_Pos) |
              ((Command->ModeRegisterDefinition) << FMC_SDCMR_MRD_Pos)));
  /* Get tick */
  tickstart = HAL_GetTick();
 800cdc8:	f7fc f95c 	bl	8009084 <HAL_GetTick>
 800cdcc:	4606      	mov	r6, r0

  /* wait until command is send */
  while (HAL_IS_BIT_SET(Device->SDSR, FMC_SDSR_BUSY))
 800cdce:	1c6b      	adds	r3, r5, #1
 800cdd0:	d105      	bne.n	800cdde <FMC_SDRAM_SendCommand+0x3a>
 800cdd2:	69a3      	ldr	r3, [r4, #24]
 800cdd4:	f013 0320 	ands.w	r3, r3, #32
 800cdd8:	d1fb      	bne.n	800cdd2 <FMC_SDRAM_SendCommand+0x2e>
      {
        return HAL_TIMEOUT;
      }
    }
  }
  return HAL_OK;
 800cdda:	4618      	mov	r0, r3
}
 800cddc:	bd70      	pop	{r4, r5, r6, pc}
  while (HAL_IS_BIT_SET(Device->SDSR, FMC_SDSR_BUSY))
 800cdde:	69a3      	ldr	r3, [r4, #24]
 800cde0:	f013 0320 	ands.w	r3, r3, #32
 800cde4:	d0f9      	beq.n	800cdda <FMC_SDRAM_SendCommand+0x36>
      if ((Timeout == 0U) || ((HAL_GetTick() - tickstart) > Timeout))
 800cde6:	b125      	cbz	r5, 800cdf2 <FMC_SDRAM_SendCommand+0x4e>
 800cde8:	f7fc f94c 	bl	8009084 <HAL_GetTick>
 800cdec:	1b80      	subs	r0, r0, r6
 800cdee:	42a8      	cmp	r0, r5
 800cdf0:	d9ed      	bls.n	800cdce <FMC_SDRAM_SendCommand+0x2a>
        return HAL_TIMEOUT;
 800cdf2:	2003      	movs	r0, #3
}
 800cdf4:	bd70      	pop	{r4, r5, r6, pc}
 800cdf6:	bf00      	nop

0800cdf8 <FMC_SDRAM_ProgramRefreshRate>:
  /* Check the parameters */
  assert_param(IS_FMC_SDRAM_DEVICE(Device));
  assert_param(IS_FMC_REFRESH_RATE(RefreshRate));

  /* Set the refresh rate in command register */
  MODIFY_REG(Device->SDRTR, FMC_SDRTR_COUNT, (RefreshRate << FMC_SDRTR_COUNT_Pos));
 800cdf8:	6943      	ldr	r3, [r0, #20]
 800cdfa:	f423 537f 	bic.w	r3, r3, #16320	; 0x3fc0
{
 800cdfe:	4602      	mov	r2, r0
  MODIFY_REG(Device->SDRTR, FMC_SDRTR_COUNT, (RefreshRate << FMC_SDRTR_COUNT_Pos));
 800ce00:	f023 033e 	bic.w	r3, r3, #62	; 0x3e
 800ce04:	ea43 0141 	orr.w	r1, r3, r1, lsl #1

  return HAL_OK;
}
 800ce08:	2000      	movs	r0, #0
  MODIFY_REG(Device->SDRTR, FMC_SDRTR_COUNT, (RefreshRate << FMC_SDRTR_COUNT_Pos));
 800ce0a:	6151      	str	r1, [r2, #20]
}
 800ce0c:	4770      	bx	lr
 800ce0e:	bf00      	nop

0800ce10 <SysTick_Handler>:

/*
  SysTick handler implementation that also clears overflow flag.
*/
#if (USE_CUSTOM_SYSTICK_HANDLER_IMPLEMENTATION == 0)
void SysTick_Handler (void) {
 800ce10:	b508      	push	{r3, lr}
  /* Clear overflow flag */
  SysTick->CTRL;
 800ce12:	f04f 23e0 	mov.w	r3, #3758153728	; 0xe000e000
 800ce16:	691b      	ldr	r3, [r3, #16]

  if (xTaskGetSchedulerState() != taskSCHEDULER_NOT_STARTED) {
 800ce18:	f002 fb04 	bl	800f424 <xTaskGetSchedulerState>
 800ce1c:	2801      	cmp	r0, #1
 800ce1e:	d100      	bne.n	800ce22 <SysTick_Handler+0x12>
    /* Call tick handler */
    xPortSysTickHandler();
  }
}
 800ce20:	bd08      	pop	{r3, pc}
 800ce22:	e8bd 4008 	ldmia.w	sp!, {r3, lr}
    xPortSysTickHandler();
 800ce26:	f000 bc45 	b.w	800d6b4 <xPortSysTickHandler>
 800ce2a:	bf00      	nop

0800ce2c <osKernelInitialize>:
  __ASM volatile ("MRS %0, ipsr" : "=r" (result) );
 800ce2c:	f3ef 8305 	mrs	r3, IPSR
/*---------------------------------------------------------------------------*/

osStatus_t osKernelInitialize (void) {
  osStatus_t stat;

  if (IS_IRQ()) {
 800ce30:	b92b      	cbnz	r3, 800ce3e <osKernelInitialize+0x12>
    stat = osErrorISR;
  }
  else {
    if (KernelState == osKernelInactive) {
 800ce32:	4b06      	ldr	r3, [pc, #24]	; (800ce4c <osKernelInitialize+0x20>)
 800ce34:	6818      	ldr	r0, [r3, #0]
 800ce36:	b928      	cbnz	r0, 800ce44 <osKernelInitialize+0x18>
        EvrFreeRTOSSetup(0U);
      #endif
      #if defined(USE_FreeRTOS_HEAP_5) && (HEAP_5_REGION_SETUP == 1)
        vPortDefineHeapRegions (configHEAP_5_REGIONS);
      #endif
      KernelState = osKernelReady;
 800ce38:	2201      	movs	r2, #1
 800ce3a:	601a      	str	r2, [r3, #0]
      stat = osOK;
 800ce3c:	4770      	bx	lr
    stat = osErrorISR;
 800ce3e:	f06f 0005 	mvn.w	r0, #5
 800ce42:	4770      	bx	lr
    } else {
      stat = osError;
 800ce44:	f04f 30ff 	mov.w	r0, #4294967295
    }
  }

  return (stat);
}
 800ce48:	4770      	bx	lr
 800ce4a:	bf00      	nop
 800ce4c:	200023d8 	.word	0x200023d8

0800ce50 <osKernelStart>:
  }

  return (state);
}

osStatus_t osKernelStart (void) {
 800ce50:	b510      	push	{r4, lr}
 800ce52:	f3ef 8405 	mrs	r4, IPSR
  osStatus_t stat;

  if (IS_IRQ()) {
 800ce56:	b974      	cbnz	r4, 800ce76 <osKernelStart+0x26>
    stat = osErrorISR;
  }
  else {
    if (KernelState == osKernelReady) {
 800ce58:	4b08      	ldr	r3, [pc, #32]	; (800ce7c <osKernelStart+0x2c>)
 800ce5a:	681a      	ldr	r2, [r3, #0]
 800ce5c:	2a01      	cmp	r2, #1
 800ce5e:	d107      	bne.n	800ce70 <osKernelStart+0x20>
    SCB->SHP[(((uint32_t)IRQn) & 0xFUL)-4UL] = (uint8_t)((priority << (8U - __NVIC_PRIO_BITS)) & (uint32_t)0xFFUL);
 800ce60:	4907      	ldr	r1, [pc, #28]	; (800ce80 <osKernelStart+0x30>)
      /* Ensure SVC priority is at the reset value */
      SVC_Setup();
      /* Change state to enable IRQ masking check */
      KernelState = osKernelRunning;
 800ce62:	2202      	movs	r2, #2
 800ce64:	77cc      	strb	r4, [r1, #31]
 800ce66:	601a      	str	r2, [r3, #0]
      /* Start the kernel scheduler */
      vTaskStartScheduler();
 800ce68:	f002 f8b6 	bl	800efd8 <vTaskStartScheduler>
      stat = osOK;
 800ce6c:	4620      	mov	r0, r4
      stat = osError;
    }
  }

  return (stat);
}
 800ce6e:	bd10      	pop	{r4, pc}
      stat = osError;
 800ce70:	f04f 30ff 	mov.w	r0, #4294967295
}
 800ce74:	bd10      	pop	{r4, pc}
    stat = osErrorISR;
 800ce76:	f06f 0005 	mvn.w	r0, #5
}
 800ce7a:	bd10      	pop	{r4, pc}
 800ce7c:	200023d8 	.word	0x200023d8
 800ce80:	e000ed00 	.word	0xe000ed00

0800ce84 <osThreadNew>:
  return (configCPU_CLOCK_HZ);
}

/*---------------------------------------------------------------------------*/

osThreadId_t osThreadNew (osThreadFunc_t func, void *argument, const osThreadAttr_t *attr) {
 800ce84:	b5f0      	push	{r4, r5, r6, r7, lr}
 800ce86:	b087      	sub	sp, #28
  uint32_t stack;
  TaskHandle_t hTask;
  UBaseType_t prio;
  int32_t mem;

  hTask = NULL;
 800ce88:	2400      	movs	r4, #0
osThreadId_t osThreadNew (osThreadFunc_t func, void *argument, const osThreadAttr_t *attr) {
 800ce8a:	4615      	mov	r5, r2
  hTask = NULL;
 800ce8c:	9405      	str	r4, [sp, #20]
 800ce8e:	f3ef 8205 	mrs	r2, IPSR

  if (!IS_IRQ() && (func != NULL)) {
 800ce92:	b9ea      	cbnz	r2, 800ced0 <osThreadNew+0x4c>
 800ce94:	b350      	cbz	r0, 800ceec <osThreadNew+0x68>
    prio  = (UBaseType_t)osPriorityNormal;

    name = NULL;
    mem  = -1;

    if (attr != NULL) {
 800ce96:	b1f5      	cbz	r5, 800ced6 <osThreadNew+0x52>
      if (attr->name != NULL) {
        name = attr->name;
      }
      if (attr->priority != osPriorityNone) {
 800ce98:	69ab      	ldr	r3, [r5, #24]
 800ce9a:	bb5b      	cbnz	r3, 800cef4 <osThreadNew+0x70>
 800ce9c:	2318      	movs	r3, #24
        prio = (UBaseType_t)attr->priority;
      }

      if ((prio < osPriorityIdle) || (prio > osPriorityISR) || ((attr->attr_bits & osThreadJoinable) == osThreadJoinable)) {
 800ce9e:	686a      	ldr	r2, [r5, #4]
 800cea0:	07d2      	lsls	r2, r2, #31
 800cea2:	d423      	bmi.n	800ceec <osThreadNew+0x68>
        return (NULL);
      }

      if (attr->stack_size > 0U) {
 800cea4:	696e      	ldr	r6, [r5, #20]
 800cea6:	b34e      	cbz	r6, 800cefc <osThreadNew+0x78>
        /* In FreeRTOS stack is not in bytes, but in sizeof(StackType_t) which is 4 on ARM ports.       */
        /* Stack size should be therefore 4 byte aligned in order to avoid division caused side effects */
        stack = attr->stack_size / sizeof(StackType_t);
 800cea8:	ea4f 0c96 	mov.w	ip, r6, lsr #2
      }

      if ((attr->cb_mem    != NULL) && (attr->cb_size    >= sizeof(StaticTask_t)) &&
 800ceac:	68ac      	ldr	r4, [r5, #8]
      if (attr->name != NULL) {
 800ceae:	682f      	ldr	r7, [r5, #0]
      if ((attr->cb_mem    != NULL) && (attr->cb_size    >= sizeof(StaticTask_t)) &&
 800ceb0:	b34c      	cbz	r4, 800cf06 <osThreadNew+0x82>
 800ceb2:	68ea      	ldr	r2, [r5, #12]
 800ceb4:	2aab      	cmp	r2, #171	; 0xab
 800ceb6:	d919      	bls.n	800ceec <osThreadNew+0x68>
          (attr->stack_mem != NULL) && (attr->stack_size >  0U)) {
 800ceb8:	692d      	ldr	r5, [r5, #16]
      if ((attr->cb_mem    != NULL) && (attr->cb_size    >= sizeof(StaticTask_t)) &&
 800ceba:	b1bd      	cbz	r5, 800ceec <osThreadNew+0x68>
          (attr->stack_mem != NULL) && (attr->stack_size >  0U)) {
 800cebc:	b1b6      	cbz	r6, 800ceec <osThreadNew+0x68>
      mem = 0;
    }

    if (mem == 1) {
      #if (configSUPPORT_STATIC_ALLOCATION == 1)
        hTask = xTaskCreateStatic ((TaskFunction_t)func, name, stack, argument, prio, (StackType_t  *)attr->stack_mem,
 800cebe:	e9cd 5401 	strd	r5, r4, [sp, #4]
 800cec2:	9300      	str	r3, [sp, #0]
 800cec4:	4662      	mov	r2, ip
 800cec6:	460b      	mov	r3, r1
 800cec8:	4639      	mov	r1, r7
 800ceca:	f001 ffc3 	bl	800ee54 <xTaskCreateStatic>
 800cece:	4604      	mov	r4, r0
      }
    }
  }

  return ((osThreadId_t)hTask);
}
 800ced0:	4620      	mov	r0, r4
 800ced2:	b007      	add	sp, #28
 800ced4:	bdf0      	pop	{r4, r5, r6, r7, pc}
 800ced6:	2280      	movs	r2, #128	; 0x80
    prio  = (UBaseType_t)osPriorityNormal;
 800ced8:	2318      	movs	r3, #24
          if (xTaskCreate ((TaskFunction_t)func, name, (uint16_t)stack, argument, prio, &hTask) != pdPASS) {
 800ceda:	ac05      	add	r4, sp, #20
 800cedc:	9300      	str	r3, [sp, #0]
 800cede:	9401      	str	r4, [sp, #4]
 800cee0:	460b      	mov	r3, r1
 800cee2:	4629      	mov	r1, r5
 800cee4:	f001 fff0 	bl	800eec8 <xTaskCreate>
 800cee8:	2801      	cmp	r0, #1
 800ceea:	d00a      	beq.n	800cf02 <osThreadNew+0x7e>
        return (NULL);
 800ceec:	2400      	movs	r4, #0
}
 800ceee:	4620      	mov	r0, r4
 800cef0:	b007      	add	sp, #28
 800cef2:	bdf0      	pop	{r4, r5, r6, r7, pc}
      if ((prio < osPriorityIdle) || (prio > osPriorityISR) || ((attr->attr_bits & osThreadJoinable) == osThreadJoinable)) {
 800cef4:	1e5c      	subs	r4, r3, #1
 800cef6:	2c37      	cmp	r4, #55	; 0x37
 800cef8:	d9d1      	bls.n	800ce9e <osThreadNew+0x1a>
 800cefa:	e7f7      	b.n	800ceec <osThreadNew+0x68>
    stack = configMINIMAL_STACK_SIZE;
 800cefc:	f04f 0c80 	mov.w	ip, #128	; 0x80
 800cf00:	e7d4      	b.n	800ceac <osThreadNew+0x28>
  return ((osThreadId_t)hTask);
 800cf02:	9c05      	ldr	r4, [sp, #20]
 800cf04:	e7e4      	b.n	800ced0 <osThreadNew+0x4c>
        if ((attr->cb_mem == NULL) && (attr->cb_size == 0U) && (attr->stack_mem == NULL)) {
 800cf06:	68ee      	ldr	r6, [r5, #12]
 800cf08:	2e00      	cmp	r6, #0
 800cf0a:	d1e1      	bne.n	800ced0 <osThreadNew+0x4c>
 800cf0c:	692d      	ldr	r5, [r5, #16]
 800cf0e:	2d00      	cmp	r5, #0
 800cf10:	d1de      	bne.n	800ced0 <osThreadNew+0x4c>
          if (xTaskCreate ((TaskFunction_t)func, name, (uint16_t)stack, argument, prio, &hTask) != pdPASS) {
 800cf12:	fa1f f28c 	uxth.w	r2, ip
 800cf16:	463d      	mov	r5, r7
 800cf18:	e7df      	b.n	800ceda <osThreadNew+0x56>
 800cf1a:	bf00      	nop

0800cf1c <osDelay>:
  /* Return flags before clearing */
  return (rflags);
}
#endif /* (configUSE_OS2_THREAD_FLAGS == 1) */

osStatus_t osDelay (uint32_t ticks) {
 800cf1c:	b510      	push	{r4, lr}
 800cf1e:	f3ef 8405 	mrs	r4, IPSR
  osStatus_t stat;

  if (IS_IRQ()) {
 800cf22:	b92c      	cbnz	r4, 800cf30 <osDelay+0x14>
    stat = osErrorISR;
  }
  else {
    stat = osOK;

    if (ticks != 0U) {
 800cf24:	b900      	cbnz	r0, 800cf28 <osDelay+0xc>
      vTaskDelay(ticks);
    }
  }

  return (stat);
}
 800cf26:	bd10      	pop	{r4, pc}
      vTaskDelay(ticks);
 800cf28:	f002 f800 	bl	800ef2c <vTaskDelay>
    stat = osOK;
 800cf2c:	4620      	mov	r0, r4
}
 800cf2e:	bd10      	pop	{r4, pc}
    stat = osErrorISR;
 800cf30:	f06f 0005 	mvn.w	r0, #5
}
 800cf34:	bd10      	pop	{r4, pc}
 800cf36:	bf00      	nop

0800cf38 <osSemaphoreNew>:
}
#endif /* (configUSE_OS2_MUTEX == 1) */

/*---------------------------------------------------------------------------*/

osSemaphoreId_t osSemaphoreNew (uint32_t max_count, uint32_t initial_count, const osSemaphoreAttr_t *attr) {
 800cf38:	b5f0      	push	{r4, r5, r6, r7, lr}
 800cf3a:	b083      	sub	sp, #12
 800cf3c:	f3ef 8605 	mrs	r6, IPSR
  const char *name;
  #endif

  hSemaphore = NULL;

  if (!IS_IRQ() && (max_count > 0U) && (initial_count <= max_count)) {
 800cf40:	b9fe      	cbnz	r6, 800cf82 <osSemaphoreNew+0x4a>
 800cf42:	b1f0      	cbz	r0, 800cf82 <osSemaphoreNew+0x4a>
 800cf44:	4288      	cmp	r0, r1
 800cf46:	460f      	mov	r7, r1
 800cf48:	d31b      	bcc.n	800cf82 <osSemaphoreNew+0x4a>
    mem = -1;

    if (attr != NULL) {
 800cf4a:	4615      	mov	r5, r2
 800cf4c:	b192      	cbz	r2, 800cf74 <osSemaphoreNew+0x3c>
      if ((attr->cb_mem != NULL) && (attr->cb_size >= sizeof(StaticSemaphore_t))) {
 800cf4e:	e9d2 2302 	ldrd	r2, r3, [r2, #8]
 800cf52:	b1d2      	cbz	r2, 800cf8a <osSemaphoreNew+0x52>
 800cf54:	2b4f      	cmp	r3, #79	; 0x4f
 800cf56:	d914      	bls.n	800cf82 <osSemaphoreNew+0x4a>
    else {
      mem = 0;
    }

    if (mem != -1) {
      if (max_count == 1U) {
 800cf58:	2801      	cmp	r0, #1
 800cf5a:	d038      	beq.n	800cfce <osSemaphoreNew+0x96>
        }
      }
      else {
        if (mem == 1) {
          #if (configSUPPORT_STATIC_ALLOCATION == 1)
            hSemaphore = xSemaphoreCreateCountingStatic (max_count, initial_count, (StaticSemaphore_t *)attr->cb_mem);
 800cf5c:	f000 fd90 	bl	800da80 <xQueueCreateCountingSemaphoreStatic>
          #endif
        }
      }
      
      #if (configQUEUE_REGISTRY_SIZE > 0)
      if (hSemaphore != NULL) {
 800cf60:	4604      	mov	r4, r0
 800cf62:	b170      	cbz	r0, 800cf82 <osSemaphoreNew+0x4a>
        if (attr != NULL) {
          name = attr->name;
 800cf64:	682d      	ldr	r5, [r5, #0]
        } else {
          name = NULL;
        }
        vQueueAddToRegistry (hSemaphore, name);
 800cf66:	4620      	mov	r0, r4
 800cf68:	4629      	mov	r1, r5
 800cf6a:	f001 fc3b 	bl	800e7e4 <vQueueAddToRegistry>
      #endif
    }
  }

  return ((osSemaphoreId_t)hSemaphore);
}
 800cf6e:	4620      	mov	r0, r4
 800cf70:	b003      	add	sp, #12
 800cf72:	bdf0      	pop	{r4, r5, r6, r7, pc}
      if (max_count == 1U) {
 800cf74:	2801      	cmp	r0, #1
 800cf76:	d012      	beq.n	800cf9e <osSemaphoreNew+0x66>
            hSemaphore = xSemaphoreCreateCounting (max_count, initial_count);
 800cf78:	f000 fde2 	bl	800db40 <xQueueCreateCountingSemaphore>
      if (hSemaphore != NULL) {
 800cf7c:	4604      	mov	r4, r0
 800cf7e:	2800      	cmp	r0, #0
 800cf80:	d1f1      	bne.n	800cf66 <osSemaphoreNew+0x2e>
            hSemaphore = NULL;
 800cf82:	2400      	movs	r4, #0
}
 800cf84:	4620      	mov	r0, r4
 800cf86:	b003      	add	sp, #12
 800cf88:	bdf0      	pop	{r4, r5, r6, r7, pc}
        if ((attr->cb_mem == NULL) && (attr->cb_size == 0U)) {
 800cf8a:	2b00      	cmp	r3, #0
 800cf8c:	d1f9      	bne.n	800cf82 <osSemaphoreNew+0x4a>
      if (max_count == 1U) {
 800cf8e:	2801      	cmp	r0, #1
 800cf90:	d005      	beq.n	800cf9e <osSemaphoreNew+0x66>
            hSemaphore = xSemaphoreCreateCounting (max_count, initial_count);
 800cf92:	f000 fdd5 	bl	800db40 <xQueueCreateCountingSemaphore>
      if (hSemaphore != NULL) {
 800cf96:	4604      	mov	r4, r0
 800cf98:	2800      	cmp	r0, #0
 800cf9a:	d1e3      	bne.n	800cf64 <osSemaphoreNew+0x2c>
 800cf9c:	e7f1      	b.n	800cf82 <osSemaphoreNew+0x4a>
            hSemaphore = xSemaphoreCreateBinary();
 800cf9e:	2203      	movs	r2, #3
 800cfa0:	2100      	movs	r1, #0
 800cfa2:	2001      	movs	r0, #1
 800cfa4:	f000 fd2a 	bl	800d9fc <xQueueGenericCreate>
 800cfa8:	4604      	mov	r4, r0
        if ((hSemaphore != NULL) && (initial_count != 0U)) {
 800cfaa:	2c00      	cmp	r4, #0
 800cfac:	d0e9      	beq.n	800cf82 <osSemaphoreNew+0x4a>
 800cfae:	b917      	cbnz	r7, 800cfb6 <osSemaphoreNew+0x7e>
        if (attr != NULL) {
 800cfb0:	2d00      	cmp	r5, #0
 800cfb2:	d1d7      	bne.n	800cf64 <osSemaphoreNew+0x2c>
 800cfb4:	e7d7      	b.n	800cf66 <osSemaphoreNew+0x2e>
          if (xSemaphoreGive (hSemaphore) != pdPASS) {
 800cfb6:	2300      	movs	r3, #0
 800cfb8:	461a      	mov	r2, r3
 800cfba:	4619      	mov	r1, r3
 800cfbc:	4620      	mov	r0, r4
 800cfbe:	f000 fe05 	bl	800dbcc <xQueueGenericSend>
 800cfc2:	2801      	cmp	r0, #1
 800cfc4:	d0f4      	beq.n	800cfb0 <osSemaphoreNew+0x78>
            vSemaphoreDelete (hSemaphore);
 800cfc6:	4620      	mov	r0, r4
 800cfc8:	f001 fbc6 	bl	800e758 <vQueueDelete>
 800cfcc:	e7d9      	b.n	800cf82 <osSemaphoreNew+0x4a>
            hSemaphore = xSemaphoreCreateBinaryStatic ((StaticSemaphore_t *)attr->cb_mem);
 800cfce:	4613      	mov	r3, r2
 800cfd0:	2203      	movs	r2, #3
 800cfd2:	9200      	str	r2, [sp, #0]
 800cfd4:	4631      	mov	r1, r6
 800cfd6:	4632      	mov	r2, r6
 800cfd8:	f000 fca2 	bl	800d920 <xQueueGenericCreateStatic>
 800cfdc:	4604      	mov	r4, r0
 800cfde:	e7e4      	b.n	800cfaa <osSemaphoreNew+0x72>

0800cfe0 <osSemaphoreAcquire>:
  osStatus_t stat;
  BaseType_t yield;

  stat = osOK;

  if (hSemaphore == NULL) {
 800cfe0:	b370      	cbz	r0, 800d040 <osSemaphoreAcquire+0x60>
osStatus_t osSemaphoreAcquire (osSemaphoreId_t semaphore_id, uint32_t timeout) {
 800cfe2:	b510      	push	{r4, lr}
 800cfe4:	460c      	mov	r4, r1
 800cfe6:	b082      	sub	sp, #8
 800cfe8:	f3ef 8305 	mrs	r3, IPSR
    stat = osErrorParameter;
  }
  else if (IS_IRQ()) {
 800cfec:	b1c3      	cbz	r3, 800d020 <osSemaphoreAcquire+0x40>
    if (timeout != 0U) {
 800cfee:	bb21      	cbnz	r1, 800d03a <osSemaphoreAcquire+0x5a>
      stat = osErrorParameter;
    }
    else {
      yield = pdFALSE;

      if (xSemaphoreTakeFromISR (hSemaphore, &yield) != pdPASS) {
 800cff0:	aa01      	add	r2, sp, #4
      yield = pdFALSE;
 800cff2:	9101      	str	r1, [sp, #4]
      if (xSemaphoreTakeFromISR (hSemaphore, &yield) != pdPASS) {
 800cff4:	f001 fb2e 	bl	800e654 <xQueueReceiveFromISR>
 800cff8:	2801      	cmp	r0, #1
 800cffa:	d11a      	bne.n	800d032 <osSemaphoreAcquire+0x52>
        stat = osErrorResource;
      } else {
        portYIELD_FROM_ISR (yield);
 800cffc:	9b01      	ldr	r3, [sp, #4]
 800cffe:	b913      	cbnz	r3, 800d006 <osSemaphoreAcquire+0x26>
  stat = osOK;
 800d000:	2000      	movs	r0, #0
      }
    }
  }

  return (stat);
}
 800d002:	b002      	add	sp, #8
 800d004:	bd10      	pop	{r4, pc}
        portYIELD_FROM_ISR (yield);
 800d006:	f04f 23e0 	mov.w	r3, #3758153728	; 0xe000e000
 800d00a:	f04f 5280 	mov.w	r2, #268435456	; 0x10000000
 800d00e:	f8c3 2d04 	str.w	r2, [r3, #3332]	; 0xd04
 800d012:	f3bf 8f4f 	dsb	sy
 800d016:	f3bf 8f6f 	isb	sy
  stat = osOK;
 800d01a:	4620      	mov	r0, r4
}
 800d01c:	b002      	add	sp, #8
 800d01e:	bd10      	pop	{r4, pc}
    if (xSemaphoreTake (hSemaphore, (TickType_t)timeout) != pdPASS) {
 800d020:	f001 f98e 	bl	800e340 <xQueueSemaphoreTake>
 800d024:	2801      	cmp	r0, #1
 800d026:	d0eb      	beq.n	800d000 <osSemaphoreAcquire+0x20>
      if (timeout != 0U) {
 800d028:	b11c      	cbz	r4, 800d032 <osSemaphoreAcquire+0x52>
        stat = osErrorTimeout;
 800d02a:	f06f 0001 	mvn.w	r0, #1
}
 800d02e:	b002      	add	sp, #8
 800d030:	bd10      	pop	{r4, pc}
        stat = osErrorResource;
 800d032:	f06f 0002 	mvn.w	r0, #2
}
 800d036:	b002      	add	sp, #8
 800d038:	bd10      	pop	{r4, pc}
    stat = osErrorParameter;
 800d03a:	f06f 0003 	mvn.w	r0, #3
 800d03e:	e7e0      	b.n	800d002 <osSemaphoreAcquire+0x22>
 800d040:	f06f 0003 	mvn.w	r0, #3
}
 800d044:	4770      	bx	lr
 800d046:	bf00      	nop

0800d048 <osSemaphoreRelease>:
  osStatus_t stat;
  BaseType_t yield;

  stat = osOK;

  if (hSemaphore == NULL) {
 800d048:	b330      	cbz	r0, 800d098 <osSemaphoreRelease+0x50>
osStatus_t osSemaphoreRelease (osSemaphoreId_t semaphore_id) {
 800d04a:	b510      	push	{r4, lr}
 800d04c:	b082      	sub	sp, #8
 800d04e:	f3ef 8305 	mrs	r3, IPSR
    stat = osErrorParameter;
  }
  else if (IS_IRQ()) {
 800d052:	b1ab      	cbz	r3, 800d080 <osSemaphoreRelease+0x38>
    yield = pdFALSE;
 800d054:	2400      	movs	r4, #0

    if (xSemaphoreGiveFromISR (hSemaphore, &yield) != pdTRUE) {
 800d056:	a901      	add	r1, sp, #4
    yield = pdFALSE;
 800d058:	9401      	str	r4, [sp, #4]
    if (xSemaphoreGiveFromISR (hSemaphore, &yield) != pdTRUE) {
 800d05a:	f000 ff9b 	bl	800df94 <xQueueGiveFromISR>
 800d05e:	2801      	cmp	r0, #1
 800d060:	d117      	bne.n	800d092 <osSemaphoreRelease+0x4a>
      stat = osErrorResource;
    } else {
      portYIELD_FROM_ISR (yield);
 800d062:	9b01      	ldr	r3, [sp, #4]
 800d064:	b193      	cbz	r3, 800d08c <osSemaphoreRelease+0x44>
 800d066:	f04f 23e0 	mov.w	r3, #3758153728	; 0xe000e000
 800d06a:	f04f 5280 	mov.w	r2, #268435456	; 0x10000000
 800d06e:	f8c3 2d04 	str.w	r2, [r3, #3332]	; 0xd04
 800d072:	f3bf 8f4f 	dsb	sy
 800d076:	f3bf 8f6f 	isb	sy
  stat = osOK;
 800d07a:	4620      	mov	r0, r4
      stat = osErrorResource;
    }
  }

  return (stat);
}
 800d07c:	b002      	add	sp, #8
 800d07e:	bd10      	pop	{r4, pc}
    if (xSemaphoreGive (hSemaphore) != pdPASS) {
 800d080:	461a      	mov	r2, r3
 800d082:	4619      	mov	r1, r3
 800d084:	f000 fda2 	bl	800dbcc <xQueueGenericSend>
 800d088:	2801      	cmp	r0, #1
 800d08a:	d102      	bne.n	800d092 <osSemaphoreRelease+0x4a>
  stat = osOK;
 800d08c:	2000      	movs	r0, #0
}
 800d08e:	b002      	add	sp, #8
 800d090:	bd10      	pop	{r4, pc}
      stat = osErrorResource;
 800d092:	f06f 0002 	mvn.w	r0, #2
 800d096:	e7fa      	b.n	800d08e <osSemaphoreRelease+0x46>
    stat = osErrorParameter;
 800d098:	f06f 0003 	mvn.w	r0, #3
}
 800d09c:	4770      	bx	lr
 800d09e:	bf00      	nop

0800d0a0 <osMessageQueueNew>:
  return (stat);
}

/*---------------------------------------------------------------------------*/

osMessageQueueId_t osMessageQueueNew (uint32_t msg_count, uint32_t msg_size, const osMessageQueueAttr_t *attr) {
 800d0a0:	b5f0      	push	{r4, r5, r6, r7, lr}
 800d0a2:	b085      	sub	sp, #20
 800d0a4:	f3ef 8705 	mrs	r7, IPSR
  const char *name;
  #endif

  hQueue = NULL;

  if (!IS_IRQ() && (msg_count > 0U) && (msg_size > 0U)) {
 800d0a8:	b987      	cbnz	r7, 800d0cc <osMessageQueueNew+0x2c>
 800d0aa:	4605      	mov	r5, r0
 800d0ac:	b170      	cbz	r0, 800d0cc <osMessageQueueNew+0x2c>
 800d0ae:	b169      	cbz	r1, 800d0cc <osMessageQueueNew+0x2c>
    mem = -1;

    if (attr != NULL) {
 800d0b0:	4614      	mov	r4, r2
 800d0b2:	b1ea      	cbz	r2, 800d0f0 <osMessageQueueNew+0x50>
      if ((attr->cb_mem != NULL) && (attr->cb_size >= sizeof(StaticQueue_t)) &&
 800d0b4:	6893      	ldr	r3, [r2, #8]
 800d0b6:	b163      	cbz	r3, 800d0d2 <osMessageQueueNew+0x32>
 800d0b8:	68d2      	ldr	r2, [r2, #12]
 800d0ba:	2a4f      	cmp	r2, #79	; 0x4f
 800d0bc:	d906      	bls.n	800d0cc <osMessageQueueNew+0x2c>
          (attr->mq_mem != NULL) && (attr->mq_size >= (msg_count * msg_size))) {
 800d0be:	6922      	ldr	r2, [r4, #16]
      if ((attr->cb_mem != NULL) && (attr->cb_size >= sizeof(StaticQueue_t)) &&
 800d0c0:	b122      	cbz	r2, 800d0cc <osMessageQueueNew+0x2c>
          (attr->mq_mem != NULL) && (attr->mq_size >= (msg_count * msg_size))) {
 800d0c2:	6966      	ldr	r6, [r4, #20]
 800d0c4:	fb01 f505 	mul.w	r5, r1, r5
 800d0c8:	42ae      	cmp	r6, r5
 800d0ca:	d21c      	bcs.n	800d106 <osMessageQueueNew+0x66>
  hQueue = NULL;
 800d0cc:	2000      	movs	r0, #0
    #endif

  }

  return ((osMessageQueueId_t)hQueue);
}
 800d0ce:	b005      	add	sp, #20
 800d0d0:	bdf0      	pop	{r4, r5, r6, r7, pc}
        if ((attr->cb_mem == NULL) && (attr->cb_size == 0U) &&
 800d0d2:	68d3      	ldr	r3, [r2, #12]
 800d0d4:	2b00      	cmp	r3, #0
 800d0d6:	d1f9      	bne.n	800d0cc <osMessageQueueNew+0x2c>
 800d0d8:	6913      	ldr	r3, [r2, #16]
 800d0da:	2b00      	cmp	r3, #0
 800d0dc:	d1f6      	bne.n	800d0cc <osMessageQueueNew+0x2c>
            (attr->mq_mem == NULL) && (attr->mq_size == 0U)) {
 800d0de:	6952      	ldr	r2, [r2, #20]
 800d0e0:	2a00      	cmp	r2, #0
 800d0e2:	d1f3      	bne.n	800d0cc <osMessageQueueNew+0x2c>
          hQueue = xQueueCreate (msg_count, msg_size);
 800d0e4:	f000 fc8a 	bl	800d9fc <xQueueGenericCreate>
    if (hQueue != NULL) {
 800d0e8:	2800      	cmp	r0, #0
 800d0ea:	d0ef      	beq.n	800d0cc <osMessageQueueNew+0x2c>
        name = attr->name;
 800d0ec:	6824      	ldr	r4, [r4, #0]
 800d0ee:	e003      	b.n	800d0f8 <osMessageQueueNew+0x58>
          hQueue = xQueueCreate (msg_count, msg_size);
 800d0f0:	f000 fc84 	bl	800d9fc <xQueueGenericCreate>
    if (hQueue != NULL) {
 800d0f4:	2800      	cmp	r0, #0
 800d0f6:	d0e9      	beq.n	800d0cc <osMessageQueueNew+0x2c>
      vQueueAddToRegistry (hQueue, name);
 800d0f8:	4621      	mov	r1, r4
 800d0fa:	9003      	str	r0, [sp, #12]
 800d0fc:	f001 fb72 	bl	800e7e4 <vQueueAddToRegistry>
  return ((osMessageQueueId_t)hQueue);
 800d100:	9803      	ldr	r0, [sp, #12]
}
 800d102:	b005      	add	sp, #20
 800d104:	bdf0      	pop	{r4, r5, r6, r7, pc}
        hQueue = xQueueCreateStatic (msg_count, msg_size, attr->mq_mem, attr->cb_mem);
 800d106:	9700      	str	r7, [sp, #0]
 800d108:	f000 fc0a 	bl	800d920 <xQueueGenericCreateStatic>
    if (hQueue != NULL) {
 800d10c:	2800      	cmp	r0, #0
 800d10e:	d1ed      	bne.n	800d0ec <osMessageQueueNew+0x4c>
 800d110:	e7dc      	b.n	800d0cc <osMessageQueueNew+0x2c>
 800d112:	bf00      	nop

0800d114 <osMessageQueuePut>:

osStatus_t osMessageQueuePut (osMessageQueueId_t mq_id, const void *msg_ptr, uint8_t msg_prio, uint32_t timeout) {
 800d114:	b570      	push	{r4, r5, r6, lr}
 800d116:	461c      	mov	r4, r3
 800d118:	b082      	sub	sp, #8
 800d11a:	f3ef 8605 	mrs	r6, IPSR

  (void)msg_prio; /* Message priority is ignored */

  stat = osOK;

  if (IS_IRQ()) {
 800d11e:	b1be      	cbz	r6, 800d150 <osMessageQueuePut+0x3c>
    if ((hQueue == NULL) || (msg_ptr == NULL) || (timeout != 0U)) {
 800d120:	b350      	cbz	r0, 800d178 <osMessageQueuePut+0x64>
 800d122:	b349      	cbz	r1, 800d178 <osMessageQueuePut+0x64>
 800d124:	bb43      	cbnz	r3, 800d178 <osMessageQueuePut+0x64>
      stat = osErrorParameter;
    }
    else {
      yield = pdFALSE;

      if (xQueueSendToBackFromISR (hQueue, msg_ptr, &yield) != pdTRUE) {
 800d126:	aa01      	add	r2, sp, #4
      yield = pdFALSE;
 800d128:	9301      	str	r3, [sp, #4]
      if (xQueueSendToBackFromISR (hQueue, msg_ptr, &yield) != pdTRUE) {
 800d12a:	f000 fecd 	bl	800dec8 <xQueueGenericSendFromISR>
 800d12e:	2801      	cmp	r0, #1
 800d130:	d11e      	bne.n	800d170 <osMessageQueuePut+0x5c>
        stat = osErrorResource;
      } else {
        portYIELD_FROM_ISR (yield);
 800d132:	9b01      	ldr	r3, [sp, #4]
 800d134:	b1cb      	cbz	r3, 800d16a <osMessageQueuePut+0x56>
 800d136:	f04f 23e0 	mov.w	r3, #3758153728	; 0xe000e000
 800d13a:	f04f 5280 	mov.w	r2, #268435456	; 0x10000000
 800d13e:	f8c3 2d04 	str.w	r2, [r3, #3332]	; 0xd04
 800d142:	f3bf 8f4f 	dsb	sy
 800d146:	f3bf 8f6f 	isb	sy
  stat = osOK;
 800d14a:	4620      	mov	r0, r4
      }
    }
  }

  return (stat);
}
 800d14c:	b002      	add	sp, #8
 800d14e:	bd70      	pop	{r4, r5, r6, pc}
    if ((hQueue == NULL) || (msg_ptr == NULL)) {
 800d150:	b190      	cbz	r0, 800d178 <osMessageQueuePut+0x64>
 800d152:	b189      	cbz	r1, 800d178 <osMessageQueuePut+0x64>
      if (xQueueSendToBack (hQueue, msg_ptr, (TickType_t)timeout) != pdPASS) {
 800d154:	4633      	mov	r3, r6
 800d156:	4622      	mov	r2, r4
 800d158:	f000 fd38 	bl	800dbcc <xQueueGenericSend>
 800d15c:	2801      	cmp	r0, #1
 800d15e:	d004      	beq.n	800d16a <osMessageQueuePut+0x56>
        if (timeout != 0U) {
 800d160:	b134      	cbz	r4, 800d170 <osMessageQueuePut+0x5c>
          stat = osErrorTimeout;
 800d162:	f06f 0001 	mvn.w	r0, #1
}
 800d166:	b002      	add	sp, #8
 800d168:	bd70      	pop	{r4, r5, r6, pc}
  stat = osOK;
 800d16a:	2000      	movs	r0, #0
}
 800d16c:	b002      	add	sp, #8
 800d16e:	bd70      	pop	{r4, r5, r6, pc}
          stat = osErrorResource;
 800d170:	f06f 0002 	mvn.w	r0, #2
}
 800d174:	b002      	add	sp, #8
 800d176:	bd70      	pop	{r4, r5, r6, pc}
      stat = osErrorParameter;
 800d178:	f06f 0003 	mvn.w	r0, #3
 800d17c:	e7e6      	b.n	800d14c <osMessageQueuePut+0x38>
 800d17e:	bf00      	nop

0800d180 <osMessageQueueGet>:

osStatus_t osMessageQueueGet (osMessageQueueId_t mq_id, void *msg_ptr, uint8_t *msg_prio, uint32_t timeout) {
 800d180:	b530      	push	{r4, r5, lr}
 800d182:	461c      	mov	r4, r3
 800d184:	b083      	sub	sp, #12
 800d186:	f3ef 8305 	mrs	r3, IPSR

  (void)msg_prio; /* Message priority is ignored */

  stat = osOK;

  if (IS_IRQ()) {
 800d18a:	b1bb      	cbz	r3, 800d1bc <osMessageQueueGet+0x3c>
    if ((hQueue == NULL) || (msg_ptr == NULL) || (timeout != 0U)) {
 800d18c:	b348      	cbz	r0, 800d1e2 <osMessageQueueGet+0x62>
 800d18e:	b341      	cbz	r1, 800d1e2 <osMessageQueueGet+0x62>
 800d190:	bb3c      	cbnz	r4, 800d1e2 <osMessageQueueGet+0x62>
      stat = osErrorParameter;
    }
    else {
      yield = pdFALSE;

      if (xQueueReceiveFromISR (hQueue, msg_ptr, &yield) != pdPASS) {
 800d192:	aa01      	add	r2, sp, #4
      yield = pdFALSE;
 800d194:	9401      	str	r4, [sp, #4]
      if (xQueueReceiveFromISR (hQueue, msg_ptr, &yield) != pdPASS) {
 800d196:	f001 fa5d 	bl	800e654 <xQueueReceiveFromISR>
 800d19a:	2801      	cmp	r0, #1
 800d19c:	d11d      	bne.n	800d1da <osMessageQueueGet+0x5a>
        stat = osErrorResource;
      } else {
        portYIELD_FROM_ISR (yield);
 800d19e:	9b01      	ldr	r3, [sp, #4]
 800d1a0:	b1c3      	cbz	r3, 800d1d4 <osMessageQueueGet+0x54>
 800d1a2:	f04f 23e0 	mov.w	r3, #3758153728	; 0xe000e000
 800d1a6:	f04f 5280 	mov.w	r2, #268435456	; 0x10000000
 800d1aa:	f8c3 2d04 	str.w	r2, [r3, #3332]	; 0xd04
 800d1ae:	f3bf 8f4f 	dsb	sy
 800d1b2:	f3bf 8f6f 	isb	sy
  stat = osOK;
 800d1b6:	4620      	mov	r0, r4
      }
    }
  }

  return (stat);
}
 800d1b8:	b003      	add	sp, #12
 800d1ba:	bd30      	pop	{r4, r5, pc}
    if ((hQueue == NULL) || (msg_ptr == NULL)) {
 800d1bc:	b188      	cbz	r0, 800d1e2 <osMessageQueueGet+0x62>
 800d1be:	b181      	cbz	r1, 800d1e2 <osMessageQueueGet+0x62>
      if (xQueueReceive (hQueue, msg_ptr, (TickType_t)timeout) != pdPASS) {
 800d1c0:	4622      	mov	r2, r4
 800d1c2:	f000 ff3f 	bl	800e044 <xQueueReceive>
 800d1c6:	2801      	cmp	r0, #1
 800d1c8:	d004      	beq.n	800d1d4 <osMessageQueueGet+0x54>
        if (timeout != 0U) {
 800d1ca:	b134      	cbz	r4, 800d1da <osMessageQueueGet+0x5a>
          stat = osErrorTimeout;
 800d1cc:	f06f 0001 	mvn.w	r0, #1
}
 800d1d0:	b003      	add	sp, #12
 800d1d2:	bd30      	pop	{r4, r5, pc}
  stat = osOK;
 800d1d4:	2000      	movs	r0, #0
}
 800d1d6:	b003      	add	sp, #12
 800d1d8:	bd30      	pop	{r4, r5, pc}
          stat = osErrorResource;
 800d1da:	f06f 0002 	mvn.w	r0, #2
}
 800d1de:	b003      	add	sp, #12
 800d1e0:	bd30      	pop	{r4, r5, pc}
      stat = osErrorParameter;
 800d1e2:	f06f 0003 	mvn.w	r0, #3
 800d1e6:	e7e7      	b.n	800d1b8 <osMessageQueueGet+0x38>

0800d1e8 <osMessageQueueGetCount>:
 800d1e8:	b130      	cbz	r0, 800d1f8 <osMessageQueueGetCount+0x10>
 800d1ea:	f3ef 8305 	mrs	r3, IPSR
 800d1ee:	b10b      	cbz	r3, 800d1f4 <osMessageQueueGetCount+0xc>
 800d1f0:	f001 baa4 	b.w	800e73c <uxQueueMessagesWaitingFromISR>
 800d1f4:	f001 ba8c 	b.w	800e710 <uxQueueMessagesWaiting>
 800d1f8:	4770      	bx	lr
 800d1fa:	bf00      	nop

0800d1fc <vApplicationGetIdleTaskMemory>:
__WEAK void vApplicationGetIdleTaskMemory (StaticTask_t **ppxIdleTaskTCBBuffer, StackType_t **ppxIdleTaskStackBuffer, uint32_t *pulIdleTaskStackSize) {
  /* Idle task control block and stack */
  static StaticTask_t Idle_TCB;
  static StackType_t  Idle_Stack[configMINIMAL_STACK_SIZE];

  *ppxIdleTaskTCBBuffer   = &Idle_TCB;
 800d1fc:	4b04      	ldr	r3, [pc, #16]	; (800d210 <vApplicationGetIdleTaskMemory+0x14>)
 800d1fe:	6003      	str	r3, [r0, #0]
__WEAK void vApplicationGetIdleTaskMemory (StaticTask_t **ppxIdleTaskTCBBuffer, StackType_t **ppxIdleTaskStackBuffer, uint32_t *pulIdleTaskStackSize) {
 800d200:	b410      	push	{r4}
  *ppxIdleTaskStackBuffer = &Idle_Stack[0];
  *pulIdleTaskStackSize   = (uint32_t)configMINIMAL_STACK_SIZE;
 800d202:	2380      	movs	r3, #128	; 0x80
  *ppxIdleTaskStackBuffer = &Idle_Stack[0];
 800d204:	4c03      	ldr	r4, [pc, #12]	; (800d214 <vApplicationGetIdleTaskMemory+0x18>)
 800d206:	600c      	str	r4, [r1, #0]
}
 800d208:	f85d 4b04 	ldr.w	r4, [sp], #4
  *pulIdleTaskStackSize   = (uint32_t)configMINIMAL_STACK_SIZE;
 800d20c:	6013      	str	r3, [r2, #0]
}
 800d20e:	4770      	bx	lr
 800d210:	2000232c 	.word	0x2000232c
 800d214:	2000212c 	.word	0x2000212c

0800d218 <vApplicationGetTimerTaskMemory>:
__WEAK void vApplicationGetTimerTaskMemory (StaticTask_t **ppxTimerTaskTCBBuffer, StackType_t **ppxTimerTaskStackBuffer, uint32_t *pulTimerTaskStackSize) {
  /* Timer task control block and stack */
  static StaticTask_t Timer_TCB;
  static StackType_t  Timer_Stack[configTIMER_TASK_STACK_DEPTH];

  *ppxTimerTaskTCBBuffer   = &Timer_TCB;
 800d218:	4b05      	ldr	r3, [pc, #20]	; (800d230 <vApplicationGetTimerTaskMemory+0x18>)
 800d21a:	6003      	str	r3, [r0, #0]
__WEAK void vApplicationGetTimerTaskMemory (StaticTask_t **ppxTimerTaskTCBBuffer, StackType_t **ppxTimerTaskStackBuffer, uint32_t *pulTimerTaskStackSize) {
 800d21c:	b410      	push	{r4}
  *ppxTimerTaskStackBuffer = &Timer_Stack[0];
  *pulTimerTaskStackSize   = (uint32_t)configTIMER_TASK_STACK_DEPTH;
 800d21e:	f44f 7380 	mov.w	r3, #256	; 0x100
  *ppxTimerTaskStackBuffer = &Timer_Stack[0];
 800d222:	4c04      	ldr	r4, [pc, #16]	; (800d234 <vApplicationGetTimerTaskMemory+0x1c>)
 800d224:	600c      	str	r4, [r1, #0]
}
 800d226:	f85d 4b04 	ldr.w	r4, [sp], #4
  *pulTimerTaskStackSize   = (uint32_t)configTIMER_TASK_STACK_DEPTH;
 800d22a:	6013      	str	r3, [r2, #0]
}
 800d22c:	4770      	bx	lr
 800d22e:	bf00      	nop
 800d230:	200027dc 	.word	0x200027dc
 800d234:	200023dc 	.word	0x200023dc

0800d238 <pvPortMalloc>:
static size_t xBlockAllocatedBit = 0;

/*-----------------------------------------------------------*/

void *pvPortMalloc( size_t xWantedSize )
{
 800d238:	e92d 41f0 	stmdb	sp!, {r4, r5, r6, r7, r8, lr}
 800d23c:	4605      	mov	r5, r0
BlockLink_t *pxBlock, *pxPreviousBlock, *pxNewBlockLink;
void *pvReturn = NULL;

	vTaskSuspendAll();
 800d23e:	f001 ff47 	bl	800f0d0 <vTaskSuspendAll>
	{
		/* If this is the first call to malloc then the heap will require
		initialisation to setup the list of free blocks. */
		if( pxEnd == NULL )
 800d242:	4a54      	ldr	r2, [pc, #336]	; (800d394 <pvPortMalloc+0x15c>)
 800d244:	6816      	ldr	r6, [r2, #0]
 800d246:	2e00      	cmp	r6, #0
 800d248:	d06e      	beq.n	800d328 <pvPortMalloc+0xf0>

		/* Check the requested block size is not so large that the top bit is
		set.  The top bit of the block size member of the BlockLink_t structure
		is used to determine who owns the block - the application or the
		kernel, so it must be free. */
		if( ( xWantedSize & xBlockAllocatedBit ) == 0 )
 800d24a:	4b53      	ldr	r3, [pc, #332]	; (800d398 <pvPortMalloc+0x160>)
 800d24c:	681f      	ldr	r7, [r3, #0]
 800d24e:	423d      	tst	r5, r7
 800d250:	d12e      	bne.n	800d2b0 <pvPortMalloc+0x78>
		{
			/* The wanted size is increased so it can contain a BlockLink_t
			structure in addition to the requested amount of bytes. */
			if( xWantedSize > 0 )
 800d252:	b36d      	cbz	r5, 800d2b0 <pvPortMalloc+0x78>
			{
				xWantedSize += xHeapStructSize;
 800d254:	f105 0408 	add.w	r4, r5, #8

				/* Ensure that blocks are always aligned to the required number
				of bytes. */
				if( ( xWantedSize & portBYTE_ALIGNMENT_MASK ) != 0x00 )
 800d258:	076d      	lsls	r5, r5, #29
				{
					/* Byte alignment required. */
					xWantedSize += ( portBYTE_ALIGNMENT - ( xWantedSize & portBYTE_ALIGNMENT_MASK ) );
 800d25a:	bf1c      	itt	ne
 800d25c:	f024 0407 	bicne.w	r4, r4, #7
 800d260:	3408      	addne	r4, #8
			else
			{
				mtCOVERAGE_TEST_MARKER();
			}

			if( ( xWantedSize > 0 ) && ( xWantedSize <= xFreeBytesRemaining ) )
 800d262:	b32c      	cbz	r4, 800d2b0 <pvPortMalloc+0x78>
 800d264:	f8df c144 	ldr.w	ip, [pc, #324]	; 800d3ac <pvPortMalloc+0x174>
 800d268:	f8dc 5000 	ldr.w	r5, [ip]
 800d26c:	42a5      	cmp	r5, r4
 800d26e:	d31f      	bcc.n	800d2b0 <pvPortMalloc+0x78>
			{
				/* Traverse the list from the start	(lowest address) block until
				one	of adequate size is found. */
				pxPreviousBlock = &xStart;
				pxBlock = xStart.pxNextFreeBlock;
 800d270:	484a      	ldr	r0, [pc, #296]	; (800d39c <pvPortMalloc+0x164>)
 800d272:	6803      	ldr	r3, [r0, #0]
				while( ( pxBlock->xBlockSize < xWantedSize ) && ( pxBlock->pxNextFreeBlock != NULL ) )
 800d274:	e003      	b.n	800d27e <pvPortMalloc+0x46>
 800d276:	681a      	ldr	r2, [r3, #0]
 800d278:	b122      	cbz	r2, 800d284 <pvPortMalloc+0x4c>
 800d27a:	4618      	mov	r0, r3
 800d27c:	4613      	mov	r3, r2
 800d27e:	6859      	ldr	r1, [r3, #4]
 800d280:	42a1      	cmp	r1, r4
 800d282:	d3f8      	bcc.n	800d276 <pvPortMalloc+0x3e>
					pxBlock = pxBlock->pxNextFreeBlock;
				}

				/* If the end marker was reached then a block of adequate size
				was	not found. */
				if( pxBlock != pxEnd )
 800d284:	42b3      	cmp	r3, r6
 800d286:	d013      	beq.n	800d2b0 <pvPortMalloc+0x78>
				{
					/* Return the memory space pointed to - jumping over the
					BlockLink_t structure at its start. */
					pvReturn = ( void * ) ( ( ( uint8_t * ) pxPreviousBlock->pxNextFreeBlock ) + xHeapStructSize );
 800d288:	4698      	mov	r8, r3
					of the list of free blocks. */
					pxPreviousBlock->pxNextFreeBlock = pxBlock->pxNextFreeBlock;

					/* If the block is larger than required it can be split into
					two. */
					if( ( pxBlock->xBlockSize - xWantedSize ) > heapMINIMUM_BLOCK_SIZE )
 800d28a:	1b0a      	subs	r2, r1, r4
					pxPreviousBlock->pxNextFreeBlock = pxBlock->pxNextFreeBlock;
 800d28c:	f858 eb08 	ldr.w	lr, [r8], #8
 800d290:	f8c0 e000 	str.w	lr, [r0]
					if( ( pxBlock->xBlockSize - xWantedSize ) > heapMINIMUM_BLOCK_SIZE )
 800d294:	2a10      	cmp	r2, #16
 800d296:	d929      	bls.n	800d2ec <pvPortMalloc+0xb4>
					{
						/* This block is to be split into two.  Create a new
						block following the number of bytes requested. The void
						cast is used to prevent byte alignment warnings from the
						compiler. */
						pxNewBlockLink = ( void * ) ( ( ( uint8_t * ) pxBlock ) + xWantedSize );
 800d298:	1919      	adds	r1, r3, r4
						configASSERT( ( ( ( size_t ) pxNewBlockLink ) & portBYTE_ALIGNMENT_MASK ) == 0 );
 800d29a:	0748      	lsls	r0, r1, #29
 800d29c:	d00f      	beq.n	800d2be <pvPortMalloc+0x86>

portFORCE_INLINE static void vPortRaiseBASEPRI( void )
{
uint32_t ulNewBASEPRI;

	__asm volatile
 800d29e:	f04f 0350 	mov.w	r3, #80	; 0x50
 800d2a2:	f383 8811 	msr	BASEPRI, r3
 800d2a6:	f3bf 8f6f 	isb	sy
 800d2aa:	f3bf 8f4f 	dsb	sy
 800d2ae:	e7fe      	b.n	800d2ae <pvPortMalloc+0x76>
			mtCOVERAGE_TEST_MARKER();
		}

		traceMALLOC( pvReturn, xWantedSize );
	}
	( void ) xTaskResumeAll();
 800d2b0:	f001 ff16 	bl	800f0e0 <xTaskResumeAll>
 800d2b4:	f04f 0800 	mov.w	r8, #0
	}
	#endif

	configASSERT( ( ( ( size_t ) pvReturn ) & ( size_t ) portBYTE_ALIGNMENT_MASK ) == 0 );
	return pvReturn;
}
 800d2b8:	4640      	mov	r0, r8
 800d2ba:	e8bd 81f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, pc}
						pxNewBlockLink->xBlockSize = pxBlock->xBlockSize - xWantedSize;
 800d2be:	604a      	str	r2, [r1, #4]
BlockLink_t *pxIterator;
uint8_t *puc;

	/* Iterate through the list until a block is found that has a higher address
	than the block being inserted. */
	for( pxIterator = &xStart; pxIterator->pxNextFreeBlock < pxBlockToInsert; pxIterator = pxIterator->pxNextFreeBlock )
 800d2c0:	4a36      	ldr	r2, [pc, #216]	; (800d39c <pvPortMalloc+0x164>)
						pxBlock->xBlockSize = xWantedSize;
 800d2c2:	605c      	str	r4, [r3, #4]
	for( pxIterator = &xStart; pxIterator->pxNextFreeBlock < pxBlockToInsert; pxIterator = pxIterator->pxNextFreeBlock )
 800d2c4:	4614      	mov	r4, r2
 800d2c6:	6812      	ldr	r2, [r2, #0]
 800d2c8:	4291      	cmp	r1, r2
 800d2ca:	d8fb      	bhi.n	800d2c4 <pvPortMalloc+0x8c>
	}

	/* Do the block being inserted, and the block it is being inserted after
	make a contiguous block of memory? */
	puc = ( uint8_t * ) pxIterator;
	if( ( puc + pxIterator->xBlockSize ) == ( uint8_t * ) pxBlockToInsert )
 800d2cc:	6860      	ldr	r0, [r4, #4]
 800d2ce:	eb04 0e00 	add.w	lr, r4, r0
 800d2d2:	4571      	cmp	r1, lr
 800d2d4:	d04b      	beq.n	800d36e <pvPortMalloc+0x136>
	{
		pxIterator->xBlockSize += pxBlockToInsert->xBlockSize;
 800d2d6:	f8d1 e004 	ldr.w	lr, [r1, #4]
	}

	/* Do the block being inserted, and the block it is being inserted before
	make a contiguous block of memory? */
	puc = ( uint8_t * ) pxBlockToInsert;
	if( ( puc + pxBlockToInsert->xBlockSize ) == ( uint8_t * ) pxIterator->pxNextFreeBlock )
 800d2da:	eb01 000e 	add.w	r0, r1, lr
 800d2de:	4282      	cmp	r2, r0
 800d2e0:	d051      	beq.n	800d386 <pvPortMalloc+0x14e>

	/* If the block being inserted plugged a gab, so was merged with the block
	before and the block after, then it's pxNextFreeBlock pointer will have
	already been set, and should not be set here as that would make it point
	to itself. */
	if( pxIterator != pxBlockToInsert )
 800d2e2:	428c      	cmp	r4, r1
			pxBlockToInsert->pxNextFreeBlock = pxIterator->pxNextFreeBlock->pxNextFreeBlock;
 800d2e4:	600a      	str	r2, [r1, #0]
	{
		pxIterator->pxNextFreeBlock = pxBlockToInsert;
 800d2e6:	bf18      	it	ne
 800d2e8:	6021      	strne	r1, [r4, #0]
					xFreeBytesRemaining -= pxBlock->xBlockSize;
 800d2ea:	6859      	ldr	r1, [r3, #4]
					if( xFreeBytesRemaining < xMinimumEverFreeBytesRemaining )
 800d2ec:	4a2c      	ldr	r2, [pc, #176]	; (800d3a0 <pvPortMalloc+0x168>)
 800d2ee:	6810      	ldr	r0, [r2, #0]
					xFreeBytesRemaining -= pxBlock->xBlockSize;
 800d2f0:	1a6d      	subs	r5, r5, r1
					if( xFreeBytesRemaining < xMinimumEverFreeBytesRemaining )
 800d2f2:	4285      	cmp	r5, r0
						xMinimumEverFreeBytesRemaining = xFreeBytesRemaining;
 800d2f4:	bf38      	it	cc
 800d2f6:	6015      	strcc	r5, [r2, #0]
					xNumberOfSuccessfulAllocations++;
 800d2f8:	4a2a      	ldr	r2, [pc, #168]	; (800d3a4 <pvPortMalloc+0x16c>)
					xFreeBytesRemaining -= pxBlock->xBlockSize;
 800d2fa:	f8cc 5000 	str.w	r5, [ip]
					pxBlock->xBlockSize |= xBlockAllocatedBit;
 800d2fe:	4339      	orrs	r1, r7
					pxBlock->pxNextFreeBlock = NULL;
 800d300:	2000      	movs	r0, #0
 800d302:	e9c3 0100 	strd	r0, r1, [r3]
					xNumberOfSuccessfulAllocations++;
 800d306:	6813      	ldr	r3, [r2, #0]
 800d308:	3301      	adds	r3, #1
 800d30a:	6013      	str	r3, [r2, #0]
	( void ) xTaskResumeAll();
 800d30c:	f001 fee8 	bl	800f0e0 <xTaskResumeAll>
	configASSERT( ( ( ( size_t ) pvReturn ) & ( size_t ) portBYTE_ALIGNMENT_MASK ) == 0 );
 800d310:	f018 0f07 	tst.w	r8, #7
 800d314:	d0d0      	beq.n	800d2b8 <pvPortMalloc+0x80>
 800d316:	f04f 0350 	mov.w	r3, #80	; 0x50
 800d31a:	f383 8811 	msr	BASEPRI, r3
 800d31e:	f3bf 8f6f 	isb	sy
 800d322:	f3bf 8f4f 	dsb	sy
 800d326:	e7fe      	b.n	800d326 <pvPortMalloc+0xee>
	uxAddress = ( size_t ) ucHeap;
 800d328:	4b1f      	ldr	r3, [pc, #124]	; (800d3a8 <pvPortMalloc+0x170>)
	if( ( uxAddress & portBYTE_ALIGNMENT_MASK ) != 0 )
 800d32a:	075e      	lsls	r6, r3, #29
 800d32c:	d118      	bne.n	800d360 <pvPortMalloc+0x128>
 800d32e:	f503 3680 	add.w	r6, r3, #65536	; 0x10000
 800d332:	4619      	mov	r1, r3
	uxAddress -= xHeapStructSize;
 800d334:	3e08      	subs	r6, #8
	uxAddress &= ~( ( size_t ) portBYTE_ALIGNMENT_MASK );
 800d336:	f026 0607 	bic.w	r6, r6, #7
	pxEnd = ( void * ) uxAddress;
 800d33a:	6016      	str	r6, [r2, #0]
	xMinimumEverFreeBytesRemaining = pxFirstFreeBlock->xBlockSize;
 800d33c:	4a18      	ldr	r2, [pc, #96]	; (800d3a0 <pvPortMalloc+0x168>)
	xStart.pxNextFreeBlock = ( void * ) pucAlignedHeap;
 800d33e:	4817      	ldr	r0, [pc, #92]	; (800d39c <pvPortMalloc+0x164>)
	xBlockAllocatedBit = ( ( size_t ) 1 ) << ( ( sizeof( size_t ) * heapBITS_PER_BYTE ) - 1 );
 800d340:	4c15      	ldr	r4, [pc, #84]	; (800d398 <pvPortMalloc+0x160>)
	xStart.pxNextFreeBlock = ( void * ) pucAlignedHeap;
 800d342:	6001      	str	r1, [r0, #0]
	pxFirstFreeBlock->xBlockSize = uxAddress - ( size_t ) pxFirstFreeBlock;
 800d344:	1af3      	subs	r3, r6, r3
	xMinimumEverFreeBytesRemaining = pxFirstFreeBlock->xBlockSize;
 800d346:	6013      	str	r3, [r2, #0]
	xFreeBytesRemaining = pxFirstFreeBlock->xBlockSize;
 800d348:	4a18      	ldr	r2, [pc, #96]	; (800d3ac <pvPortMalloc+0x174>)
	xBlockAllocatedBit = ( ( size_t ) 1 ) << ( ( sizeof( size_t ) * heapBITS_PER_BYTE ) - 1 );
 800d34a:	f04f 4700 	mov.w	r7, #2147483648	; 0x80000000
	xFreeBytesRemaining = pxFirstFreeBlock->xBlockSize;
 800d34e:	6013      	str	r3, [r2, #0]
	xStart.xBlockSize = ( size_t ) 0;
 800d350:	2200      	movs	r2, #0
 800d352:	6042      	str	r2, [r0, #4]
	xBlockAllocatedBit = ( ( size_t ) 1 ) << ( ( sizeof( size_t ) * heapBITS_PER_BYTE ) - 1 );
 800d354:	6027      	str	r7, [r4, #0]
	pxEnd->pxNextFreeBlock = NULL;
 800d356:	e9c6 2200 	strd	r2, r2, [r6]
	pxFirstFreeBlock->pxNextFreeBlock = pxEnd;
 800d35a:	e9c1 6300 	strd	r6, r3, [r1]
}
 800d35e:	e776      	b.n	800d24e <pvPortMalloc+0x16>
		uxAddress += ( portBYTE_ALIGNMENT - 1 );
 800d360:	1dd9      	adds	r1, r3, #7
	pucAlignedHeap = ( uint8_t * ) uxAddress;
 800d362:	f021 0107 	bic.w	r1, r1, #7
 800d366:	f503 3680 	add.w	r6, r3, #65536	; 0x10000
		uxAddress &= ~( ( size_t ) portBYTE_ALIGNMENT_MASK );
 800d36a:	460b      	mov	r3, r1
 800d36c:	e7e2      	b.n	800d334 <pvPortMalloc+0xfc>
		pxIterator->xBlockSize += pxBlockToInsert->xBlockSize;
 800d36e:	6849      	ldr	r1, [r1, #4]
 800d370:	eb00 0e01 	add.w	lr, r0, r1
	if( ( puc + pxBlockToInsert->xBlockSize ) == ( uint8_t * ) pxIterator->pxNextFreeBlock )
 800d374:	eb04 010e 	add.w	r1, r4, lr
 800d378:	428a      	cmp	r2, r1
		pxIterator->xBlockSize += pxBlockToInsert->xBlockSize;
 800d37a:	f8c4 e004 	str.w	lr, [r4, #4]
	if( ( puc + pxBlockToInsert->xBlockSize ) == ( uint8_t * ) pxIterator->pxNextFreeBlock )
 800d37e:	d001      	beq.n	800d384 <pvPortMalloc+0x14c>
			pxBlockToInsert->pxNextFreeBlock = pxIterator->pxNextFreeBlock->pxNextFreeBlock;
 800d380:	6022      	str	r2, [r4, #0]
	if( pxIterator != pxBlockToInsert )
 800d382:	e7b2      	b.n	800d2ea <pvPortMalloc+0xb2>
	if( ( puc + pxBlockToInsert->xBlockSize ) == ( uint8_t * ) pxIterator->pxNextFreeBlock )
 800d384:	4621      	mov	r1, r4
		if( pxIterator->pxNextFreeBlock != pxEnd )
 800d386:	42b2      	cmp	r2, r6
 800d388:	d0ab      	beq.n	800d2e2 <pvPortMalloc+0xaa>
			pxBlockToInsert->xBlockSize += pxIterator->pxNextFreeBlock->xBlockSize;
 800d38a:	6850      	ldr	r0, [r2, #4]
			pxBlockToInsert->pxNextFreeBlock = pxIterator->pxNextFreeBlock->pxNextFreeBlock;
 800d38c:	6812      	ldr	r2, [r2, #0]
			pxBlockToInsert->xBlockSize += pxIterator->pxNextFreeBlock->xBlockSize;
 800d38e:	4470      	add	r0, lr
 800d390:	6048      	str	r0, [r1, #4]
			pxBlockToInsert->pxNextFreeBlock = pxIterator->pxNextFreeBlock->pxNextFreeBlock;
 800d392:	e7a6      	b.n	800d2e2 <pvPortMalloc+0xaa>
 800d394:	20002888 	.word	0x20002888
 800d398:	2001288c 	.word	0x2001288c
 800d39c:	200128a0 	.word	0x200128a0
 800d3a0:	20012894 	.word	0x20012894
 800d3a4:	20012898 	.word	0x20012898
 800d3a8:	2000288c 	.word	0x2000288c
 800d3ac:	20012890 	.word	0x20012890

0800d3b0 <vPortFree>:
	if( pv != NULL )
 800d3b0:	b1d0      	cbz	r0, 800d3e8 <vPortFree+0x38>
		configASSERT( ( pxLink->xBlockSize & xBlockAllocatedBit ) != 0 );
 800d3b2:	4a2c      	ldr	r2, [pc, #176]	; (800d464 <vPortFree+0xb4>)
 800d3b4:	f850 3c04 	ldr.w	r3, [r0, #-4]
 800d3b8:	6812      	ldr	r2, [r2, #0]
 800d3ba:	4213      	tst	r3, r2
 800d3bc:	d00b      	beq.n	800d3d6 <vPortFree+0x26>
		configASSERT( pxLink->pxNextFreeBlock == NULL );
 800d3be:	f850 1c08 	ldr.w	r1, [r0, #-8]
 800d3c2:	b191      	cbz	r1, 800d3ea <vPortFree+0x3a>
 800d3c4:	f04f 0350 	mov.w	r3, #80	; 0x50
 800d3c8:	f383 8811 	msr	BASEPRI, r3
 800d3cc:	f3bf 8f6f 	isb	sy
 800d3d0:	f3bf 8f4f 	dsb	sy
 800d3d4:	e7fe      	b.n	800d3d4 <vPortFree+0x24>
 800d3d6:	f04f 0350 	mov.w	r3, #80	; 0x50
 800d3da:	f383 8811 	msr	BASEPRI, r3
 800d3de:	f3bf 8f6f 	isb	sy
 800d3e2:	f3bf 8f4f 	dsb	sy
		configASSERT( ( pxLink->xBlockSize & xBlockAllocatedBit ) != 0 );
 800d3e6:	e7fe      	b.n	800d3e6 <vPortFree+0x36>
 800d3e8:	4770      	bx	lr
{
 800d3ea:	b510      	push	{r4, lr}
				pxLink->xBlockSize &= ~xBlockAllocatedBit;
 800d3ec:	ea23 0302 	bic.w	r3, r3, r2
{
 800d3f0:	b082      	sub	sp, #8
				pxLink->xBlockSize &= ~xBlockAllocatedBit;
 800d3f2:	f840 3c04 	str.w	r3, [r0, #-4]
					xFreeBytesRemaining += pxLink->xBlockSize;
 800d3f6:	4c1c      	ldr	r4, [pc, #112]	; (800d468 <vPortFree+0xb8>)
				pxLink->xBlockSize &= ~xBlockAllocatedBit;
 800d3f8:	9001      	str	r0, [sp, #4]
				vTaskSuspendAll();
 800d3fa:	f001 fe69 	bl	800f0d0 <vTaskSuspendAll>
					xFreeBytesRemaining += pxLink->xBlockSize;
 800d3fe:	9801      	ldr	r0, [sp, #4]
 800d400:	6822      	ldr	r2, [r4, #0]
 800d402:	f850 1c04 	ldr.w	r1, [r0, #-4]
	for( pxIterator = &xStart; pxIterator->pxNextFreeBlock < pxBlockToInsert; pxIterator = pxIterator->pxNextFreeBlock )
 800d406:	4b19      	ldr	r3, [pc, #100]	; (800d46c <vPortFree+0xbc>)
					xFreeBytesRemaining += pxLink->xBlockSize;
 800d408:	440a      	add	r2, r1
		puc -= xHeapStructSize;
 800d40a:	3808      	subs	r0, #8
					xFreeBytesRemaining += pxLink->xBlockSize;
 800d40c:	6022      	str	r2, [r4, #0]
	for( pxIterator = &xStart; pxIterator->pxNextFreeBlock < pxBlockToInsert; pxIterator = pxIterator->pxNextFreeBlock )
 800d40e:	461a      	mov	r2, r3
 800d410:	681b      	ldr	r3, [r3, #0]
 800d412:	4298      	cmp	r0, r3
 800d414:	d8fb      	bhi.n	800d40e <vPortFree+0x5e>
	if( ( puc + pxIterator->xBlockSize ) == ( uint8_t * ) pxBlockToInsert )
 800d416:	6854      	ldr	r4, [r2, #4]
 800d418:	eb02 0e04 	add.w	lr, r2, r4
 800d41c:	4570      	cmp	r0, lr
 800d41e:	d010      	beq.n	800d442 <vPortFree+0x92>
	if( ( puc + pxBlockToInsert->xBlockSize ) == ( uint8_t * ) pxIterator->pxNextFreeBlock )
 800d420:	eb00 0c01 	add.w	ip, r0, r1
 800d424:	4563      	cmp	r3, ip
 800d426:	d014      	beq.n	800d452 <vPortFree+0xa2>
	if( pxIterator != pxBlockToInsert )
 800d428:	4282      	cmp	r2, r0
			pxBlockToInsert->pxNextFreeBlock = pxIterator->pxNextFreeBlock->pxNextFreeBlock;
 800d42a:	6003      	str	r3, [r0, #0]
		pxIterator->pxNextFreeBlock = pxBlockToInsert;
 800d42c:	bf18      	it	ne
 800d42e:	6010      	strne	r0, [r2, #0]
					xNumberOfSuccessfulFrees++;
 800d430:	4a0f      	ldr	r2, [pc, #60]	; (800d470 <vPortFree+0xc0>)
 800d432:	6813      	ldr	r3, [r2, #0]
 800d434:	3301      	adds	r3, #1
 800d436:	6013      	str	r3, [r2, #0]
}
 800d438:	b002      	add	sp, #8
 800d43a:	e8bd 4010 	ldmia.w	sp!, {r4, lr}
				( void ) xTaskResumeAll();
 800d43e:	f001 be4f 	b.w	800f0e0 <xTaskResumeAll>
		pxIterator->xBlockSize += pxBlockToInsert->xBlockSize;
 800d442:	4421      	add	r1, r4
	if( ( puc + pxBlockToInsert->xBlockSize ) == ( uint8_t * ) pxIterator->pxNextFreeBlock )
 800d444:	1850      	adds	r0, r2, r1
 800d446:	4283      	cmp	r3, r0
		pxIterator->xBlockSize += pxBlockToInsert->xBlockSize;
 800d448:	6051      	str	r1, [r2, #4]
	if( ( puc + pxBlockToInsert->xBlockSize ) == ( uint8_t * ) pxIterator->pxNextFreeBlock )
 800d44a:	d001      	beq.n	800d450 <vPortFree+0xa0>
			pxBlockToInsert->pxNextFreeBlock = pxIterator->pxNextFreeBlock->pxNextFreeBlock;
 800d44c:	6013      	str	r3, [r2, #0]
	if( pxIterator != pxBlockToInsert )
 800d44e:	e7ef      	b.n	800d430 <vPortFree+0x80>
	if( ( puc + pxBlockToInsert->xBlockSize ) == ( uint8_t * ) pxIterator->pxNextFreeBlock )
 800d450:	4610      	mov	r0, r2
		if( pxIterator->pxNextFreeBlock != pxEnd )
 800d452:	4c08      	ldr	r4, [pc, #32]	; (800d474 <vPortFree+0xc4>)
 800d454:	6824      	ldr	r4, [r4, #0]
 800d456:	42a3      	cmp	r3, r4
 800d458:	d0e6      	beq.n	800d428 <vPortFree+0x78>
			pxBlockToInsert->pxNextFreeBlock = pxIterator->pxNextFreeBlock->pxNextFreeBlock;
 800d45a:	e9d3 3400 	ldrd	r3, r4, [r3]
			pxBlockToInsert->xBlockSize += pxIterator->pxNextFreeBlock->xBlockSize;
 800d45e:	4421      	add	r1, r4
 800d460:	6041      	str	r1, [r0, #4]
			pxBlockToInsert->pxNextFreeBlock = pxIterator->pxNextFreeBlock->pxNextFreeBlock;
 800d462:	e7e1      	b.n	800d428 <vPortFree+0x78>
 800d464:	2001288c 	.word	0x2001288c
 800d468:	20012890 	.word	0x20012890
 800d46c:	200128a0 	.word	0x200128a0
 800d470:	2001289c 	.word	0x2001289c
 800d474:	20002888 	.word	0x20002888

0800d478 <vListInitialise>:
void vListInitialise( List_t * const pxList )
{
	/* The list structure contains a list item which is used to mark the
	end of the list.  To initialise the list the list end is inserted
	as the only list entry. */
	pxList->pxIndex = ( ListItem_t * ) &( pxList->xListEnd );			/*lint !e826 !e740 !e9087 The mini list structure is used as the list end to save RAM.  This is checked and valid. */
 800d478:	f100 0308 	add.w	r3, r0, #8

	/* The list end value is the highest possible value in the list to
	ensure it remains at the end of the list. */
	pxList->xListEnd.xItemValue = portMAX_DELAY;
 800d47c:	f04f 31ff 	mov.w	r1, #4294967295
	/* The list end next and previous pointers point to itself so we know
	when the list is empty. */
	pxList->xListEnd.pxNext = ( ListItem_t * ) &( pxList->xListEnd );	/*lint !e826 !e740 !e9087 The mini list structure is used as the list end to save RAM.  This is checked and valid. */
	pxList->xListEnd.pxPrevious = ( ListItem_t * ) &( pxList->xListEnd );/*lint !e826 !e740 !e9087 The mini list structure is used as the list end to save RAM.  This is checked and valid. */

	pxList->uxNumberOfItems = ( UBaseType_t ) 0U;
 800d480:	2200      	movs	r2, #0
	pxList->xListEnd.xItemValue = portMAX_DELAY;
 800d482:	e9c0 3101 	strd	r3, r1, [r0, #4]
	pxList->xListEnd.pxPrevious = ( ListItem_t * ) &( pxList->xListEnd );/*lint !e826 !e740 !e9087 The mini list structure is used as the list end to save RAM.  This is checked and valid. */
 800d486:	e9c0 3303 	strd	r3, r3, [r0, #12]
	pxList->uxNumberOfItems = ( UBaseType_t ) 0U;
 800d48a:	6002      	str	r2, [r0, #0]

	/* Write known values into the list if
	configUSE_LIST_DATA_INTEGRITY_CHECK_BYTES is set to 1. */
	listSET_LIST_INTEGRITY_CHECK_1_VALUE( pxList );
	listSET_LIST_INTEGRITY_CHECK_2_VALUE( pxList );
}
 800d48c:	4770      	bx	lr
 800d48e:	bf00      	nop

0800d490 <vListInitialiseItem>:
/*-----------------------------------------------------------*/

void vListInitialiseItem( ListItem_t * const pxItem )
{
	/* Make sure the list item is not recorded as being on a list. */
	pxItem->pxContainer = NULL;
 800d490:	2300      	movs	r3, #0
 800d492:	6103      	str	r3, [r0, #16]

	/* Write known values into the list item if
	configUSE_LIST_DATA_INTEGRITY_CHECK_BYTES is set to 1. */
	listSET_FIRST_LIST_ITEM_INTEGRITY_CHECK_VALUE( pxItem );
	listSET_SECOND_LIST_ITEM_INTEGRITY_CHECK_VALUE( pxItem );
}
 800d494:	4770      	bx	lr
 800d496:	bf00      	nop

0800d498 <vListInsertEnd>:
/*-----------------------------------------------------------*/

void vListInsertEnd( List_t * const pxList, ListItem_t * const pxNewListItem )
{
ListItem_t * const pxIndex = pxList->pxIndex;
 800d498:	6843      	ldr	r3, [r0, #4]

	/* Insert a new list item into pxList, but rather than sort the list,
	makes the new list item the last item to be removed by a call to
	listGET_OWNER_OF_NEXT_ENTRY(). */
	pxNewListItem->pxNext = pxIndex;
	pxNewListItem->pxPrevious = pxIndex->pxPrevious;
 800d49a:	689a      	ldr	r2, [r3, #8]
 800d49c:	608a      	str	r2, [r1, #8]
	pxIndex->pxPrevious = pxNewListItem;

	/* Remember which list the item is in. */
	pxNewListItem->pxContainer = pxList;

	( pxList->uxNumberOfItems )++;
 800d49e:	6802      	ldr	r2, [r0, #0]
{
 800d4a0:	b410      	push	{r4}
	pxIndex->pxPrevious->pxNext = pxNewListItem;
 800d4a2:	689c      	ldr	r4, [r3, #8]
	pxNewListItem->pxNext = pxIndex;
 800d4a4:	604b      	str	r3, [r1, #4]
	( pxList->uxNumberOfItems )++;
 800d4a6:	3201      	adds	r2, #1
	pxIndex->pxPrevious->pxNext = pxNewListItem;
 800d4a8:	6061      	str	r1, [r4, #4]
	pxIndex->pxPrevious = pxNewListItem;
 800d4aa:	6099      	str	r1, [r3, #8]
}
 800d4ac:	f85d 4b04 	ldr.w	r4, [sp], #4
	pxNewListItem->pxContainer = pxList;
 800d4b0:	6108      	str	r0, [r1, #16]
	( pxList->uxNumberOfItems )++;
 800d4b2:	6002      	str	r2, [r0, #0]
}
 800d4b4:	4770      	bx	lr
 800d4b6:	bf00      	nop

0800d4b8 <vListInsert>:
/*-----------------------------------------------------------*/

void vListInsert( List_t * const pxList, ListItem_t * const pxNewListItem )
{
 800d4b8:	b430      	push	{r4, r5}
ListItem_t *pxIterator;
const TickType_t xValueOfInsertion = pxNewListItem->xItemValue;
 800d4ba:	680d      	ldr	r5, [r1, #0]
	new list item should be placed after it.  This ensures that TCBs which are
	stored in ready lists (all of which have the same xItemValue value) get a
	share of the CPU.  However, if the xItemValue is the same as the back marker
	the iteration loop below will not end.  Therefore the value is checked
	first, and the algorithm slightly modified if necessary. */
	if( xValueOfInsertion == portMAX_DELAY )
 800d4bc:	1c6b      	adds	r3, r5, #1
 800d4be:	d010      	beq.n	800d4e2 <vListInsert+0x2a>
			4) Using a queue or semaphore before it has been initialised or
			   before the scheduler has been started (are interrupts firing
			   before vTaskStartScheduler() has been called?).
		**********************************************************************/

		for( pxIterator = ( ListItem_t * ) &( pxList->xListEnd ); pxIterator->pxNext->xItemValue <= xValueOfInsertion; pxIterator = pxIterator->pxNext ) /*lint !e826 !e740 !e9087 The mini list structure is used as the list end to save RAM.  This is checked and valid. *//*lint !e440 The iterator moves to a different value, not xValueOfInsertion. */
 800d4c0:	f100 0308 	add.w	r3, r0, #8
 800d4c4:	461c      	mov	r4, r3
 800d4c6:	685b      	ldr	r3, [r3, #4]
 800d4c8:	681a      	ldr	r2, [r3, #0]
 800d4ca:	42aa      	cmp	r2, r5
 800d4cc:	d9fa      	bls.n	800d4c4 <vListInsert+0xc>

	/* Remember which list the item is in.  This allows fast removal of the
	item later. */
	pxNewListItem->pxContainer = pxList;

	( pxList->uxNumberOfItems )++;
 800d4ce:	6802      	ldr	r2, [r0, #0]
	pxNewListItem->pxNext = pxIterator->pxNext;
 800d4d0:	604b      	str	r3, [r1, #4]
	( pxList->uxNumberOfItems )++;
 800d4d2:	3201      	adds	r2, #1
	pxNewListItem->pxNext->pxPrevious = pxNewListItem;
 800d4d4:	6099      	str	r1, [r3, #8]
	pxNewListItem->pxPrevious = pxIterator;
 800d4d6:	608c      	str	r4, [r1, #8]
	pxIterator->pxNext = pxNewListItem;
 800d4d8:	6061      	str	r1, [r4, #4]
	pxNewListItem->pxContainer = pxList;
 800d4da:	6108      	str	r0, [r1, #16]
}
 800d4dc:	bc30      	pop	{r4, r5}
	( pxList->uxNumberOfItems )++;
 800d4de:	6002      	str	r2, [r0, #0]
}
 800d4e0:	4770      	bx	lr
		pxIterator = pxList->xListEnd.pxPrevious;
 800d4e2:	6904      	ldr	r4, [r0, #16]
	pxNewListItem->pxNext = pxIterator->pxNext;
 800d4e4:	6863      	ldr	r3, [r4, #4]
 800d4e6:	e7f2      	b.n	800d4ce <vListInsert+0x16>

0800d4e8 <uxListRemove>:

UBaseType_t uxListRemove( ListItem_t * const pxItemToRemove )
{
/* The list item knows which list it is in.  Obtain the list from the list
item. */
List_t * const pxList = pxItemToRemove->pxContainer;
 800d4e8:	6903      	ldr	r3, [r0, #16]
{
 800d4ea:	b410      	push	{r4}

	pxItemToRemove->pxNext->pxPrevious = pxItemToRemove->pxPrevious;
 800d4ec:	e9d0 1201 	ldrd	r1, r2, [r0, #4]

	/* Only used during decision coverage testing. */
	mtCOVERAGE_TEST_DELAY();

	/* Make sure the index is left pointing to a valid item. */
	if( pxList->pxIndex == pxItemToRemove )
 800d4f0:	685c      	ldr	r4, [r3, #4]
	pxItemToRemove->pxNext->pxPrevious = pxItemToRemove->pxPrevious;
 800d4f2:	608a      	str	r2, [r1, #8]
	if( pxList->pxIndex == pxItemToRemove )
 800d4f4:	4284      	cmp	r4, r0
	pxItemToRemove->pxPrevious->pxNext = pxItemToRemove->pxNext;
 800d4f6:	6051      	str	r1, [r2, #4]
	{
		pxList->pxIndex = pxItemToRemove->pxPrevious;
 800d4f8:	bf08      	it	eq
 800d4fa:	605a      	streq	r2, [r3, #4]
	{
		mtCOVERAGE_TEST_MARKER();
	}

	pxItemToRemove->pxContainer = NULL;
	( pxList->uxNumberOfItems )--;
 800d4fc:	681a      	ldr	r2, [r3, #0]

	return pxList->uxNumberOfItems;
}
 800d4fe:	f85d 4b04 	ldr.w	r4, [sp], #4
	pxItemToRemove->pxContainer = NULL;
 800d502:	2100      	movs	r1, #0
	( pxList->uxNumberOfItems )--;
 800d504:	3a01      	subs	r2, #1
	pxItemToRemove->pxContainer = NULL;
 800d506:	6101      	str	r1, [r0, #16]
	( pxList->uxNumberOfItems )--;
 800d508:	601a      	str	r2, [r3, #0]
	return pxList->uxNumberOfItems;
 800d50a:	6818      	ldr	r0, [r3, #0]
}
 800d50c:	4770      	bx	lr
 800d50e:	bf00      	nop

0800d510 <prvPortStartFirstTask>:
{
	/* Start the first task.  This also clears the bit that indicates the FPU is
	in use in case the FPU was used before the scheduler was started - which
	would otherwise result in the unnecessary leaving of space in the SVC stack
	for lazy saving of FPU registers. */
	__asm volatile(
 800d510:	4808      	ldr	r0, [pc, #32]	; (800d534 <prvPortStartFirstTask+0x24>)
 800d512:	6800      	ldr	r0, [r0, #0]
 800d514:	6800      	ldr	r0, [r0, #0]
 800d516:	f380 8808 	msr	MSP, r0
 800d51a:	f04f 0000 	mov.w	r0, #0
 800d51e:	f380 8814 	msr	CONTROL, r0
 800d522:	b662      	cpsie	i
 800d524:	b661      	cpsie	f
 800d526:	f3bf 8f4f 	dsb	sy
 800d52a:	f3bf 8f6f 	isb	sy
 800d52e:	df00      	svc	0
 800d530:	bf00      	nop
					" dsb					\n"
					" isb					\n"
					" svc 0					\n" /* System call to start first task. */
					" nop					\n"
				);
}
 800d532:	0000      	.short	0x0000
 800d534:	e000ed08 	.word	0xe000ed08

0800d538 <vPortEnableVFP>:
/*-----------------------------------------------------------*/

/* This is a naked function. */
static void vPortEnableVFP( void )
{
	__asm volatile
 800d538:	f8df 000c 	ldr.w	r0, [pc, #12]	; 800d548 <vPortEnableVFP+0x10>
 800d53c:	6801      	ldr	r1, [r0, #0]
 800d53e:	f441 0170 	orr.w	r1, r1, #15728640	; 0xf00000
 800d542:	6001      	str	r1, [r0, #0]
 800d544:	4770      	bx	lr
		"								\n"
		"	orr r1, r1, #( 0xf << 20 )	\n" /* Enable CP10 and CP11 coprocessors, then save back. */
		"	str r1, [r0]				\n"
		"	bx r14						"
	);
}
 800d546:	0000      	.short	0x0000
 800d548:	e000ed88 	.word	0xe000ed88

0800d54c <prvTaskExitError>:
	configASSERT( uxCriticalNesting == ~0UL );
 800d54c:	4b0e      	ldr	r3, [pc, #56]	; (800d588 <prvTaskExitError+0x3c>)
 800d54e:	681b      	ldr	r3, [r3, #0]
{
 800d550:	b082      	sub	sp, #8
volatile uint32_t ulDummy = 0;
 800d552:	2200      	movs	r2, #0
	configASSERT( uxCriticalNesting == ~0UL );
 800d554:	3301      	adds	r3, #1
volatile uint32_t ulDummy = 0;
 800d556:	9201      	str	r2, [sp, #4]
	configASSERT( uxCriticalNesting == ~0UL );
 800d558:	d008      	beq.n	800d56c <prvTaskExitError+0x20>
 800d55a:	f04f 0350 	mov.w	r3, #80	; 0x50
 800d55e:	f383 8811 	msr	BASEPRI, r3
 800d562:	f3bf 8f6f 	isb	sy
 800d566:	f3bf 8f4f 	dsb	sy
 800d56a:	e7fe      	b.n	800d56a <prvTaskExitError+0x1e>
 800d56c:	f04f 0350 	mov.w	r3, #80	; 0x50
 800d570:	f383 8811 	msr	BASEPRI, r3
 800d574:	f3bf 8f6f 	isb	sy
 800d578:	f3bf 8f4f 	dsb	sy
	while( ulDummy == 0 )
 800d57c:	9b01      	ldr	r3, [sp, #4]
 800d57e:	2b00      	cmp	r3, #0
 800d580:	d0fc      	beq.n	800d57c <prvTaskExitError+0x30>
}
 800d582:	b002      	add	sp, #8
 800d584:	4770      	bx	lr
 800d586:	bf00      	nop
 800d588:	20000084 	.word	0x20000084

0800d58c <pxPortInitialiseStack>:
{
 800d58c:	b410      	push	{r4}
	*pxTopOfStack = portINITIAL_XPSR;	/* xPSR */
 800d58e:	f04f 7380 	mov.w	r3, #16777216	; 0x1000000
	*pxTopOfStack = ( StackType_t ) portTASK_RETURN_ADDRESS;	/* LR */
 800d592:	4c07      	ldr	r4, [pc, #28]	; (800d5b0 <pxPortInitialiseStack+0x24>)
	*pxTopOfStack = portINITIAL_XPSR;	/* xPSR */
 800d594:	f840 3c04 	str.w	r3, [r0, #-4]
	*pxTopOfStack = ( ( StackType_t ) pxCode ) & portSTART_ADDRESS_MASK;	/* PC */
 800d598:	f021 0101 	bic.w	r1, r1, #1
	*pxTopOfStack = portINITIAL_EXC_RETURN;
 800d59c:	f06f 0302 	mvn.w	r3, #2
	*pxTopOfStack = ( StackType_t ) portTASK_RETURN_ADDRESS;	/* LR */
 800d5a0:	e940 4103 	strd	r4, r1, [r0, #-12]
	*pxTopOfStack = portINITIAL_EXC_RETURN;
 800d5a4:	e940 3209 	strd	r3, r2, [r0, #-36]	; 0x24
}
 800d5a8:	f85d 4b04 	ldr.w	r4, [sp], #4
 800d5ac:	3844      	subs	r0, #68	; 0x44
 800d5ae:	4770      	bx	lr
 800d5b0:	0800d54d 	.word	0x0800d54d
	...

0800d5c0 <SVC_Handler>:
	__asm volatile (
 800d5c0:	4b07      	ldr	r3, [pc, #28]	; (800d5e0 <pxCurrentTCBConst2>)
 800d5c2:	6819      	ldr	r1, [r3, #0]
 800d5c4:	6808      	ldr	r0, [r1, #0]
 800d5c6:	e8b0 4ff0 	ldmia.w	r0!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 800d5ca:	f380 8809 	msr	PSP, r0
 800d5ce:	f3bf 8f6f 	isb	sy
 800d5d2:	f04f 0000 	mov.w	r0, #0
 800d5d6:	f380 8811 	msr	BASEPRI, r0
 800d5da:	4770      	bx	lr
 800d5dc:	f3af 8000 	nop.w

0800d5e0 <pxCurrentTCBConst2>:
 800d5e0:	200128f0 	.word	0x200128f0

0800d5e4 <vPortEnterCritical>:
 800d5e4:	f04f 0350 	mov.w	r3, #80	; 0x50
 800d5e8:	f383 8811 	msr	BASEPRI, r3
 800d5ec:	f3bf 8f6f 	isb	sy
 800d5f0:	f3bf 8f4f 	dsb	sy
	uxCriticalNesting++;
 800d5f4:	4a0b      	ldr	r2, [pc, #44]	; (800d624 <vPortEnterCritical+0x40>)
 800d5f6:	6813      	ldr	r3, [r2, #0]
 800d5f8:	3301      	adds	r3, #1
	if( uxCriticalNesting == 1 )
 800d5fa:	2b01      	cmp	r3, #1
	uxCriticalNesting++;
 800d5fc:	6013      	str	r3, [r2, #0]
	if( uxCriticalNesting == 1 )
 800d5fe:	d000      	beq.n	800d602 <vPortEnterCritical+0x1e>
}
 800d600:	4770      	bx	lr
		configASSERT( ( portNVIC_INT_CTRL_REG & portVECTACTIVE_MASK ) == 0 );
 800d602:	f04f 23e0 	mov.w	r3, #3758153728	; 0xe000e000
 800d606:	f8d3 3d04 	ldr.w	r3, [r3, #3332]	; 0xd04
 800d60a:	b2db      	uxtb	r3, r3
 800d60c:	2b00      	cmp	r3, #0
 800d60e:	d0f7      	beq.n	800d600 <vPortEnterCritical+0x1c>
 800d610:	f04f 0350 	mov.w	r3, #80	; 0x50
 800d614:	f383 8811 	msr	BASEPRI, r3
 800d618:	f3bf 8f6f 	isb	sy
 800d61c:	f3bf 8f4f 	dsb	sy
 800d620:	e7fe      	b.n	800d620 <vPortEnterCritical+0x3c>
 800d622:	bf00      	nop
 800d624:	20000084 	.word	0x20000084

0800d628 <vPortExitCritical>:
	configASSERT( uxCriticalNesting );
 800d628:	4a08      	ldr	r2, [pc, #32]	; (800d64c <vPortExitCritical+0x24>)
 800d62a:	6813      	ldr	r3, [r2, #0]
 800d62c:	b943      	cbnz	r3, 800d640 <vPortExitCritical+0x18>
 800d62e:	f04f 0350 	mov.w	r3, #80	; 0x50
 800d632:	f383 8811 	msr	BASEPRI, r3
 800d636:	f3bf 8f6f 	isb	sy
 800d63a:	f3bf 8f4f 	dsb	sy
 800d63e:	e7fe      	b.n	800d63e <vPortExitCritical+0x16>
	uxCriticalNesting--;
 800d640:	3b01      	subs	r3, #1
 800d642:	6013      	str	r3, [r2, #0]
	if( uxCriticalNesting == 0 )
 800d644:	b90b      	cbnz	r3, 800d64a <vPortExitCritical+0x22>
}
/*-----------------------------------------------------------*/

portFORCE_INLINE static void vPortSetBASEPRI( uint32_t ulNewMaskValue )
{
	__asm volatile
 800d646:	f383 8811 	msr	BASEPRI, r3
}
 800d64a:	4770      	bx	lr
 800d64c:	20000084 	.word	0x20000084

0800d650 <PendSV_Handler>:
	__asm volatile
 800d650:	f3ef 8009 	mrs	r0, PSP
 800d654:	f3bf 8f6f 	isb	sy
 800d658:	4b15      	ldr	r3, [pc, #84]	; (800d6b0 <pxCurrentTCBConst>)
 800d65a:	681a      	ldr	r2, [r3, #0]
 800d65c:	f01e 0f10 	tst.w	lr, #16
 800d660:	bf08      	it	eq
 800d662:	ed20 8a10 	vstmdbeq	r0!, {s16-s31}
 800d666:	e920 4ff0 	stmdb	r0!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 800d66a:	6010      	str	r0, [r2, #0]
 800d66c:	e92d 0009 	stmdb	sp!, {r0, r3}
 800d670:	f04f 0050 	mov.w	r0, #80	; 0x50
 800d674:	f380 8811 	msr	BASEPRI, r0
 800d678:	f3bf 8f4f 	dsb	sy
 800d67c:	f3bf 8f6f 	isb	sy
 800d680:	f001 fd54 	bl	800f12c <vTaskSwitchContext>
 800d684:	f04f 0000 	mov.w	r0, #0
 800d688:	f380 8811 	msr	BASEPRI, r0
 800d68c:	bc09      	pop	{r0, r3}
 800d68e:	6819      	ldr	r1, [r3, #0]
 800d690:	6808      	ldr	r0, [r1, #0]
 800d692:	e8b0 4ff0 	ldmia.w	r0!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 800d696:	f01e 0f10 	tst.w	lr, #16
 800d69a:	bf08      	it	eq
 800d69c:	ecb0 8a10 	vldmiaeq	r0!, {s16-s31}
 800d6a0:	f380 8809 	msr	PSP, r0
 800d6a4:	f3bf 8f6f 	isb	sy
 800d6a8:	4770      	bx	lr
 800d6aa:	bf00      	nop
 800d6ac:	f3af 8000 	nop.w

0800d6b0 <pxCurrentTCBConst>:
 800d6b0:	200128f0 	.word	0x200128f0

0800d6b4 <xPortSysTickHandler>:
{
 800d6b4:	b508      	push	{r3, lr}
	__asm volatile
 800d6b6:	f04f 0350 	mov.w	r3, #80	; 0x50
 800d6ba:	f383 8811 	msr	BASEPRI, r3
 800d6be:	f3bf 8f6f 	isb	sy
 800d6c2:	f3bf 8f4f 	dsb	sy
		if( xTaskIncrementTick() != pdFALSE )
 800d6c6:	f001 fd21 	bl	800f10c <xTaskIncrementTick>
 800d6ca:	b128      	cbz	r0, 800d6d8 <xPortSysTickHandler+0x24>
			portNVIC_INT_CTRL_REG = portNVIC_PENDSVSET_BIT;
 800d6cc:	f04f 23e0 	mov.w	r3, #3758153728	; 0xe000e000
 800d6d0:	f04f 5280 	mov.w	r2, #268435456	; 0x10000000
 800d6d4:	f8c3 2d04 	str.w	r2, [r3, #3332]	; 0xd04
	__asm volatile
 800d6d8:	2300      	movs	r3, #0
 800d6da:	f383 8811 	msr	BASEPRI, r3
}
 800d6de:	bd08      	pop	{r3, pc}

0800d6e0 <vPortSetupTimerInterrupt>:
	portNVIC_SYSTICK_CTRL_REG = 0UL;
 800d6e0:	f04f 22e0 	mov.w	r2, #3758153728	; 0xe000e000
 800d6e4:	2300      	movs	r3, #0
	portNVIC_SYSTICK_LOAD_REG = ( configSYSTICK_CLOCK_HZ / configTICK_RATE_HZ ) - 1UL;
 800d6e6:	4906      	ldr	r1, [pc, #24]	; (800d700 <vPortSetupTimerInterrupt+0x20>)
	portNVIC_SYSTICK_CTRL_REG = 0UL;
 800d6e8:	6113      	str	r3, [r2, #16]
	portNVIC_SYSTICK_CURRENT_VALUE_REG = 0UL;
 800d6ea:	6193      	str	r3, [r2, #24]
	portNVIC_SYSTICK_LOAD_REG = ( configSYSTICK_CLOCK_HZ / configTICK_RATE_HZ ) - 1UL;
 800d6ec:	680b      	ldr	r3, [r1, #0]
 800d6ee:	4905      	ldr	r1, [pc, #20]	; (800d704 <vPortSetupTimerInterrupt+0x24>)
 800d6f0:	fba1 1303 	umull	r1, r3, r1, r3
 800d6f4:	099b      	lsrs	r3, r3, #6
	portNVIC_SYSTICK_CTRL_REG = ( portNVIC_SYSTICK_CLK_BIT | portNVIC_SYSTICK_INT_BIT | portNVIC_SYSTICK_ENABLE_BIT );
 800d6f6:	2007      	movs	r0, #7
	portNVIC_SYSTICK_LOAD_REG = ( configSYSTICK_CLOCK_HZ / configTICK_RATE_HZ ) - 1UL;
 800d6f8:	3b01      	subs	r3, #1
 800d6fa:	6153      	str	r3, [r2, #20]
	portNVIC_SYSTICK_CTRL_REG = ( portNVIC_SYSTICK_CLK_BIT | portNVIC_SYSTICK_INT_BIT | portNVIC_SYSTICK_ENABLE_BIT );
 800d6fc:	6110      	str	r0, [r2, #16]
}
 800d6fe:	4770      	bx	lr
 800d700:	20000078 	.word	0x20000078
 800d704:	10624dd3 	.word	0x10624dd3

0800d708 <xPortStartScheduler>:
	configASSERT( portCPUID != portCORTEX_M7_r0p1_ID );
 800d708:	f04f 23e0 	mov.w	r3, #3758153728	; 0xe000e000
 800d70c:	4a49      	ldr	r2, [pc, #292]	; (800d834 <xPortStartScheduler+0x12c>)
 800d70e:	f8d3 1d00 	ldr.w	r1, [r3, #3328]	; 0xd00
 800d712:	4291      	cmp	r1, r2
 800d714:	d043      	beq.n	800d79e <xPortStartScheduler+0x96>
	configASSERT( portCPUID != portCORTEX_M7_r0p0_ID );
 800d716:	f8d3 2d00 	ldr.w	r2, [r3, #3328]	; 0xd00
 800d71a:	4b47      	ldr	r3, [pc, #284]	; (800d838 <xPortStartScheduler+0x130>)
 800d71c:	429a      	cmp	r2, r3
 800d71e:	d035      	beq.n	800d78c <xPortStartScheduler+0x84>
{
 800d720:	b570      	push	{r4, r5, r6, lr}
		ulOriginalPriority = *pucFirstUserPriorityRegister;
 800d722:	4b46      	ldr	r3, [pc, #280]	; (800d83c <xPortStartScheduler+0x134>)
		ucMaxSysCallPriority = configMAX_SYSCALL_INTERRUPT_PRIORITY & ucMaxPriorityValue;
 800d724:	4846      	ldr	r0, [pc, #280]	; (800d840 <xPortStartScheduler+0x138>)
		ulOriginalPriority = *pucFirstUserPriorityRegister;
 800d726:	781a      	ldrb	r2, [r3, #0]
		ulMaxPRIGROUPValue = portMAX_PRIGROUP_BITS;
 800d728:	4c46      	ldr	r4, [pc, #280]	; (800d844 <xPortStartScheduler+0x13c>)
{
 800d72a:	b084      	sub	sp, #16
		*pucFirstUserPriorityRegister = portMAX_8_BIT_VALUE;
 800d72c:	21ff      	movs	r1, #255	; 0xff
		ulOriginalPriority = *pucFirstUserPriorityRegister;
 800d72e:	b2d2      	uxtb	r2, r2
 800d730:	9202      	str	r2, [sp, #8]
		*pucFirstUserPriorityRegister = portMAX_8_BIT_VALUE;
 800d732:	7019      	strb	r1, [r3, #0]
		ucMaxPriorityValue = *pucFirstUserPriorityRegister;
 800d734:	781b      	ldrb	r3, [r3, #0]
 800d736:	b2db      	uxtb	r3, r3
 800d738:	f88d 3007 	strb.w	r3, [sp, #7]
		ucMaxSysCallPriority = configMAX_SYSCALL_INTERRUPT_PRIORITY & ucMaxPriorityValue;
 800d73c:	f89d 3007 	ldrb.w	r3, [sp, #7]
		while( ( ucMaxPriorityValue & portTOP_BIT_OF_BYTE ) == portTOP_BIT_OF_BYTE )
 800d740:	f89d 2007 	ldrb.w	r2, [sp, #7]
		ucMaxSysCallPriority = configMAX_SYSCALL_INTERRUPT_PRIORITY & ucMaxPriorityValue;
 800d744:	f003 0350 	and.w	r3, r3, #80	; 0x50
		ulMaxPRIGROUPValue = portMAX_PRIGROUP_BITS;
 800d748:	2107      	movs	r1, #7
		ucMaxSysCallPriority = configMAX_SYSCALL_INTERRUPT_PRIORITY & ucMaxPriorityValue;
 800d74a:	7003      	strb	r3, [r0, #0]
		while( ( ucMaxPriorityValue & portTOP_BIT_OF_BYTE ) == portTOP_BIT_OF_BYTE )
 800d74c:	0610      	lsls	r0, r2, #24
		ulMaxPRIGROUPValue = portMAX_PRIGROUP_BITS;
 800d74e:	6021      	str	r1, [r4, #0]
		while( ( ucMaxPriorityValue & portTOP_BIT_OF_BYTE ) == portTOP_BIT_OF_BYTE )
 800d750:	bf48      	it	mi
 800d752:	2206      	movmi	r2, #6
 800d754:	d511      	bpl.n	800d77a <xPortStartScheduler+0x72>
			ucMaxPriorityValue <<= ( uint8_t ) 0x01;
 800d756:	f89d 3007 	ldrb.w	r3, [sp, #7]
 800d75a:	005b      	lsls	r3, r3, #1
 800d75c:	b2db      	uxtb	r3, r3
 800d75e:	f88d 3007 	strb.w	r3, [sp, #7]
		while( ( ucMaxPriorityValue & portTOP_BIT_OF_BYTE ) == portTOP_BIT_OF_BYTE )
 800d762:	f89d 1007 	ldrb.w	r1, [sp, #7]
 800d766:	0609      	lsls	r1, r1, #24
 800d768:	4610      	mov	r0, r2
 800d76a:	f102 32ff 	add.w	r2, r2, #4294967295
 800d76e:	d4f2      	bmi.n	800d756 <xPortStartScheduler+0x4e>
			configASSERT( ( portMAX_PRIGROUP_BITS - ulMaxPRIGROUPValue ) == configPRIO_BITS );
 800d770:	2803      	cmp	r0, #3
 800d772:	6020      	str	r0, [r4, #0]
 800d774:	f88d 3007 	strb.w	r3, [sp, #7]
 800d778:	d01a      	beq.n	800d7b0 <xPortStartScheduler+0xa8>
	__asm volatile
 800d77a:	f04f 0350 	mov.w	r3, #80	; 0x50
 800d77e:	f383 8811 	msr	BASEPRI, r3
 800d782:	f3bf 8f6f 	isb	sy
 800d786:	f3bf 8f4f 	dsb	sy
 800d78a:	e7fe      	b.n	800d78a <xPortStartScheduler+0x82>
 800d78c:	f04f 0350 	mov.w	r3, #80	; 0x50
 800d790:	f383 8811 	msr	BASEPRI, r3
 800d794:	f3bf 8f6f 	isb	sy
 800d798:	f3bf 8f4f 	dsb	sy
	configASSERT( portCPUID != portCORTEX_M7_r0p0_ID );
 800d79c:	e7fe      	b.n	800d79c <xPortStartScheduler+0x94>
 800d79e:	f04f 0350 	mov.w	r3, #80	; 0x50
 800d7a2:	f383 8811 	msr	BASEPRI, r3
 800d7a6:	f3bf 8f6f 	isb	sy
 800d7aa:	f3bf 8f4f 	dsb	sy
	configASSERT( portCPUID != portCORTEX_M7_r0p1_ID );
 800d7ae:	e7fe      	b.n	800d7ae <xPortStartScheduler+0xa6>
		*pucFirstUserPriorityRegister = ulOriginalPriority;
 800d7b0:	9b02      	ldr	r3, [sp, #8]
 800d7b2:	4a22      	ldr	r2, [pc, #136]	; (800d83c <xPortStartScheduler+0x134>)
	portNVIC_SYSPRI2_REG |= portNVIC_PENDSV_PRI;
 800d7b4:	f04f 25e0 	mov.w	r5, #3758153728	; 0xe000e000
		ulMaxPRIGROUPValue &= portPRIORITY_GROUP_MASK;
 800d7b8:	f44f 7140 	mov.w	r1, #768	; 0x300
		*pucFirstUserPriorityRegister = ulOriginalPriority;
 800d7bc:	b2db      	uxtb	r3, r3
		ulMaxPRIGROUPValue &= portPRIORITY_GROUP_MASK;
 800d7be:	6021      	str	r1, [r4, #0]
		*pucFirstUserPriorityRegister = ulOriginalPriority;
 800d7c0:	7013      	strb	r3, [r2, #0]
	portNVIC_SYSPRI2_REG |= portNVIC_PENDSV_PRI;
 800d7c2:	f8d5 3d20 	ldr.w	r3, [r5, #3360]	; 0xd20
	uxCriticalNesting = 0;
 800d7c6:	4c20      	ldr	r4, [pc, #128]	; (800d848 <xPortStartScheduler+0x140>)
	portNVIC_SYSPRI2_REG |= portNVIC_PENDSV_PRI;
 800d7c8:	f443 0370 	orr.w	r3, r3, #15728640	; 0xf00000
 800d7cc:	f8c5 3d20 	str.w	r3, [r5, #3360]	; 0xd20
	portNVIC_SYSPRI2_REG |= portNVIC_SYSTICK_PRI;
 800d7d0:	f8d5 3d20 	ldr.w	r3, [r5, #3360]	; 0xd20
 800d7d4:	f043 4370 	orr.w	r3, r3, #4026531840	; 0xf0000000
 800d7d8:	f8c5 3d20 	str.w	r3, [r5, #3360]	; 0xd20
	uxCriticalNesting = 0;
 800d7dc:	2600      	movs	r6, #0
	vPortSetupTimerInterrupt();
 800d7de:	f7ff ff7f 	bl	800d6e0 <vPortSetupTimerInterrupt>
	uxCriticalNesting = 0;
 800d7e2:	6026      	str	r6, [r4, #0]
	vPortEnableVFP();
 800d7e4:	f7ff fea8 	bl	800d538 <vPortEnableVFP>
	*( portFPCCR ) |= portASPEN_AND_LSPEN_BITS;
 800d7e8:	f8d5 3f34 	ldr.w	r3, [r5, #3892]	; 0xf34
 800d7ec:	f043 4340 	orr.w	r3, r3, #3221225472	; 0xc0000000
 800d7f0:	f8c5 3f34 	str.w	r3, [r5, #3892]	; 0xf34
	prvPortStartFirstTask();
 800d7f4:	f7ff fe8c 	bl	800d510 <prvPortStartFirstTask>
	vTaskSwitchContext();
 800d7f8:	f001 fc98 	bl	800f12c <vTaskSwitchContext>
	configASSERT( uxCriticalNesting == ~0UL );
 800d7fc:	6823      	ldr	r3, [r4, #0]
volatile uint32_t ulDummy = 0;
 800d7fe:	9603      	str	r6, [sp, #12]
	configASSERT( uxCriticalNesting == ~0UL );
 800d800:	3301      	adds	r3, #1
 800d802:	d008      	beq.n	800d816 <xPortStartScheduler+0x10e>
 800d804:	f04f 0350 	mov.w	r3, #80	; 0x50
 800d808:	f383 8811 	msr	BASEPRI, r3
 800d80c:	f3bf 8f6f 	isb	sy
 800d810:	f3bf 8f4f 	dsb	sy
 800d814:	e7fe      	b.n	800d814 <xPortStartScheduler+0x10c>
 800d816:	f04f 0350 	mov.w	r3, #80	; 0x50
 800d81a:	f383 8811 	msr	BASEPRI, r3
 800d81e:	f3bf 8f6f 	isb	sy
 800d822:	f3bf 8f4f 	dsb	sy
	while( ulDummy == 0 )
 800d826:	9b03      	ldr	r3, [sp, #12]
 800d828:	2b00      	cmp	r3, #0
 800d82a:	d0fc      	beq.n	800d826 <xPortStartScheduler+0x11e>
}
 800d82c:	2000      	movs	r0, #0
 800d82e:	b004      	add	sp, #16
 800d830:	bd70      	pop	{r4, r5, r6, pc}
 800d832:	bf00      	nop
 800d834:	410fc271 	.word	0x410fc271
 800d838:	410fc270 	.word	0x410fc270
 800d83c:	e000e400 	.word	0xe000e400
 800d840:	200128a8 	.word	0x200128a8
 800d844:	200128ac 	.word	0x200128ac
 800d848:	20000084 	.word	0x20000084

0800d84c <vPortValidateInterruptPriority>:
	{
	uint32_t ulCurrentInterrupt;
	uint8_t ucCurrentPriority;

		/* Obtain the number of the currently executing interrupt. */
		__asm volatile( "mrs %0, ipsr" : "=r"( ulCurrentInterrupt ) :: "memory" );
 800d84c:	f3ef 8305 	mrs	r3, IPSR

		/* Is the interrupt number a user defined interrupt? */
		if( ulCurrentInterrupt >= portFIRST_USER_INTERRUPT_NUMBER )
 800d850:	2b0f      	cmp	r3, #15
 800d852:	d90e      	bls.n	800d872 <vPortValidateInterruptPriority+0x26>
		{
			/* Look up the interrupt's priority. */
			ucCurrentPriority = pcInterruptPriorityRegisters[ ulCurrentInterrupt ];
 800d854:	4911      	ldr	r1, [pc, #68]	; (800d89c <vPortValidateInterruptPriority+0x50>)
			interrupt entry is as fast and simple as possible.

			The following links provide detailed information:
			http://www.freertos.org/RTOS-Cortex-M3-M4.html
			http://www.freertos.org/FAQHelp.html */
			configASSERT( ucCurrentPriority >= ucMaxSysCallPriority );
 800d856:	4a12      	ldr	r2, [pc, #72]	; (800d8a0 <vPortValidateInterruptPriority+0x54>)
			ucCurrentPriority = pcInterruptPriorityRegisters[ ulCurrentInterrupt ];
 800d858:	5c5b      	ldrb	r3, [r3, r1]
			configASSERT( ucCurrentPriority >= ucMaxSysCallPriority );
 800d85a:	7812      	ldrb	r2, [r2, #0]
 800d85c:	429a      	cmp	r2, r3
 800d85e:	d908      	bls.n	800d872 <vPortValidateInterruptPriority+0x26>
 800d860:	f04f 0350 	mov.w	r3, #80	; 0x50
 800d864:	f383 8811 	msr	BASEPRI, r3
 800d868:	f3bf 8f6f 	isb	sy
 800d86c:	f3bf 8f4f 	dsb	sy
 800d870:	e7fe      	b.n	800d870 <vPortValidateInterruptPriority+0x24>
		configuration then the correct setting can be achieved on all Cortex-M
		devices by calling NVIC_SetPriorityGrouping( 0 ); before starting the
		scheduler.  Note however that some vendor specific peripheral libraries
		assume a non-zero priority group setting, in which cases using a value
		of zero will result in unpredictable behaviour. */
		configASSERT( ( portAIRCR_REG & portPRIORITY_GROUP_MASK ) <= ulMaxPRIGROUPValue );
 800d872:	f04f 23e0 	mov.w	r3, #3758153728	; 0xe000e000
 800d876:	4a0b      	ldr	r2, [pc, #44]	; (800d8a4 <vPortValidateInterruptPriority+0x58>)
 800d878:	f8d3 3d0c 	ldr.w	r3, [r3, #3340]	; 0xd0c
 800d87c:	6812      	ldr	r2, [r2, #0]
 800d87e:	f403 63e0 	and.w	r3, r3, #1792	; 0x700
 800d882:	4293      	cmp	r3, r2
 800d884:	d908      	bls.n	800d898 <vPortValidateInterruptPriority+0x4c>
 800d886:	f04f 0350 	mov.w	r3, #80	; 0x50
 800d88a:	f383 8811 	msr	BASEPRI, r3
 800d88e:	f3bf 8f6f 	isb	sy
 800d892:	f3bf 8f4f 	dsb	sy
 800d896:	e7fe      	b.n	800d896 <vPortValidateInterruptPriority+0x4a>
	}
 800d898:	4770      	bx	lr
 800d89a:	bf00      	nop
 800d89c:	e000e3f0 	.word	0xe000e3f0
 800d8a0:	200128a8 	.word	0x200128a8
 800d8a4:	200128ac 	.word	0x200128ac

0800d8a8 <prvCopyDataToQueue>:

#endif /* configUSE_MUTEXES */
/*-----------------------------------------------------------*/

static BaseType_t prvCopyDataToQueue( Queue_t * const pxQueue, const void *pvItemToQueue, const BaseType_t xPosition )
{
 800d8a8:	b570      	push	{r4, r5, r6, lr}
 800d8aa:	4604      	mov	r4, r0

	/* This function is called from a critical section. */

	uxMessagesWaiting = pxQueue->uxMessagesWaiting;

	if( pxQueue->uxItemSize == ( UBaseType_t ) 0 )
 800d8ac:	6c00      	ldr	r0, [r0, #64]	; 0x40
	uxMessagesWaiting = pxQueue->uxMessagesWaiting;
 800d8ae:	6ba6      	ldr	r6, [r4, #56]	; 0x38
	if( pxQueue->uxItemSize == ( UBaseType_t ) 0 )
 800d8b0:	b920      	cbnz	r0, 800d8bc <prvCopyDataToQueue+0x14>
	{
		#if ( configUSE_MUTEXES == 1 )
		{
			if( pxQueue->uxQueueType == queueQUEUE_IS_MUTEX )
 800d8b2:	6825      	ldr	r5, [r4, #0]
 800d8b4:	b34d      	cbz	r5, 800d90a <prvCopyDataToQueue+0x62>
		{
			mtCOVERAGE_TEST_MARKER();
		}
	}

	pxQueue->uxMessagesWaiting = uxMessagesWaiting + ( UBaseType_t ) 1;
 800d8b6:	3601      	adds	r6, #1
 800d8b8:	63a6      	str	r6, [r4, #56]	; 0x38

	return xReturn;
}
 800d8ba:	bd70      	pop	{r4, r5, r6, pc}
	else if( xPosition == queueSEND_TO_BACK )
 800d8bc:	4615      	mov	r5, r2
		( void ) memcpy( ( void * ) pxQueue->pcWriteTo, pvItemToQueue, ( size_t ) pxQueue->uxItemSize ); /*lint !e961 !e418 !e9087 MISRA exception as the casts are only redundant for some ports, plus previous logic ensures a null pointer can only be passed to memcpy() if the copy size is 0.  Cast to void required by function signature and safe as no alignment requirement and copy length specified in bytes. */
 800d8be:	4602      	mov	r2, r0
	else if( xPosition == queueSEND_TO_BACK )
 800d8c0:	b97d      	cbnz	r5, 800d8e2 <prvCopyDataToQueue+0x3a>
		( void ) memcpy( ( void * ) pxQueue->pcWriteTo, pvItemToQueue, ( size_t ) pxQueue->uxItemSize ); /*lint !e961 !e418 !e9087 MISRA exception as the casts are only redundant for some ports, plus previous logic ensures a null pointer can only be passed to memcpy() if the copy size is 0.  Cast to void required by function signature and safe as no alignment requirement and copy length specified in bytes. */
 800d8c2:	6860      	ldr	r0, [r4, #4]
 800d8c4:	f01c fee9 	bl	802a69a <memcpy>
		pxQueue->pcWriteTo += pxQueue->uxItemSize; /*lint !e9016 Pointer arithmetic on char types ok, especially in this use case where it is the clearest way of conveying intent. */
 800d8c8:	6863      	ldr	r3, [r4, #4]
 800d8ca:	6c22      	ldr	r2, [r4, #64]	; 0x40
 800d8cc:	4413      	add	r3, r2
		if( pxQueue->pcWriteTo >= pxQueue->u.xQueue.pcTail ) /*lint !e946 MISRA exception justified as comparison of pointers is the cleanest solution. */
 800d8ce:	68a2      	ldr	r2, [r4, #8]
		pxQueue->pcWriteTo += pxQueue->uxItemSize; /*lint !e9016 Pointer arithmetic on char types ok, especially in this use case where it is the clearest way of conveying intent. */
 800d8d0:	6063      	str	r3, [r4, #4]
		if( pxQueue->pcWriteTo >= pxQueue->u.xQueue.pcTail ) /*lint !e946 MISRA exception justified as comparison of pointers is the cleanest solution. */
 800d8d2:	4293      	cmp	r3, r2
			pxQueue->pcWriteTo = pxQueue->pcHead;
 800d8d4:	bf24      	itt	cs
 800d8d6:	6823      	ldrcs	r3, [r4, #0]
 800d8d8:	6063      	strcs	r3, [r4, #4]
	pxQueue->uxMessagesWaiting = uxMessagesWaiting + ( UBaseType_t ) 1;
 800d8da:	3601      	adds	r6, #1
BaseType_t xReturn = pdFALSE;
 800d8dc:	4628      	mov	r0, r5
	pxQueue->uxMessagesWaiting = uxMessagesWaiting + ( UBaseType_t ) 1;
 800d8de:	63a6      	str	r6, [r4, #56]	; 0x38
}
 800d8e0:	bd70      	pop	{r4, r5, r6, pc}
		( void ) memcpy( ( void * ) pxQueue->u.xQueue.pcReadFrom, pvItemToQueue, ( size_t ) pxQueue->uxItemSize ); /*lint !e961 !e9087 !e418 MISRA exception as the casts are only redundant for some ports.  Cast to void required by function signature and safe as no alignment requirement and copy length specified in bytes.  Assert checks null pointer only used when length is 0. */
 800d8e2:	68e0      	ldr	r0, [r4, #12]
 800d8e4:	f01c fed9 	bl	802a69a <memcpy>
		pxQueue->u.xQueue.pcReadFrom -= pxQueue->uxItemSize;
 800d8e8:	6c22      	ldr	r2, [r4, #64]	; 0x40
 800d8ea:	68e3      	ldr	r3, [r4, #12]
 800d8ec:	4251      	negs	r1, r2
 800d8ee:	1a9b      	subs	r3, r3, r2
		if( pxQueue->u.xQueue.pcReadFrom < pxQueue->pcHead ) /*lint !e946 MISRA exception justified as comparison of pointers is the cleanest solution. */
 800d8f0:	6822      	ldr	r2, [r4, #0]
		pxQueue->u.xQueue.pcReadFrom -= pxQueue->uxItemSize;
 800d8f2:	60e3      	str	r3, [r4, #12]
		if( pxQueue->u.xQueue.pcReadFrom < pxQueue->pcHead ) /*lint !e946 MISRA exception justified as comparison of pointers is the cleanest solution. */
 800d8f4:	4293      	cmp	r3, r2
 800d8f6:	d202      	bcs.n	800d8fe <prvCopyDataToQueue+0x56>
			pxQueue->u.xQueue.pcReadFrom = ( pxQueue->u.xQueue.pcTail - pxQueue->uxItemSize );
 800d8f8:	68a3      	ldr	r3, [r4, #8]
 800d8fa:	440b      	add	r3, r1
 800d8fc:	60e3      	str	r3, [r4, #12]
		if( xPosition == queueOVERWRITE )
 800d8fe:	2d02      	cmp	r5, #2
 800d900:	d008      	beq.n	800d914 <prvCopyDataToQueue+0x6c>
	pxQueue->uxMessagesWaiting = uxMessagesWaiting + ( UBaseType_t ) 1;
 800d902:	3601      	adds	r6, #1
BaseType_t xReturn = pdFALSE;
 800d904:	2000      	movs	r0, #0
	pxQueue->uxMessagesWaiting = uxMessagesWaiting + ( UBaseType_t ) 1;
 800d906:	63a6      	str	r6, [r4, #56]	; 0x38
}
 800d908:	bd70      	pop	{r4, r5, r6, pc}
				xReturn = xTaskPriorityDisinherit( pxQueue->u.xSemaphore.xMutexHolder );
 800d90a:	68a0      	ldr	r0, [r4, #8]
 800d90c:	f001 fde0 	bl	800f4d0 <xTaskPriorityDisinherit>
				pxQueue->u.xSemaphore.xMutexHolder = NULL;
 800d910:	60a5      	str	r5, [r4, #8]
 800d912:	e7d0      	b.n	800d8b6 <prvCopyDataToQueue+0xe>
			if( uxMessagesWaiting > ( UBaseType_t ) 0 )
 800d914:	2e01      	cmp	r6, #1
 800d916:	bf38      	it	cc
 800d918:	2601      	movcc	r6, #1
BaseType_t xReturn = pdFALSE;
 800d91a:	2000      	movs	r0, #0
 800d91c:	e7cc      	b.n	800d8b8 <prvCopyDataToQueue+0x10>
 800d91e:	bf00      	nop

0800d920 <xQueueGenericCreateStatic>:
	{
 800d920:	b530      	push	{r4, r5, lr}
 800d922:	b083      	sub	sp, #12
 800d924:	f89d 4018 	ldrb.w	r4, [sp, #24]
		configASSERT( uxQueueLength > ( UBaseType_t ) 0 );
 800d928:	b940      	cbnz	r0, 800d93c <xQueueGenericCreateStatic+0x1c>
 800d92a:	f04f 0350 	mov.w	r3, #80	; 0x50
 800d92e:	f383 8811 	msr	BASEPRI, r3
 800d932:	f3bf 8f6f 	isb	sy
 800d936:	f3bf 8f4f 	dsb	sy
 800d93a:	e7fe      	b.n	800d93a <xQueueGenericCreateStatic+0x1a>
		configASSERT( pxStaticQueue != NULL );
 800d93c:	461d      	mov	r5, r3
 800d93e:	b17b      	cbz	r3, 800d960 <xQueueGenericCreateStatic+0x40>
		configASSERT( !( ( pucQueueStorage != NULL ) && ( uxItemSize == 0 ) ) );
 800d940:	b302      	cbz	r2, 800d984 <xQueueGenericCreateStatic+0x64>
 800d942:	b1b1      	cbz	r1, 800d972 <xQueueGenericCreateStatic+0x52>
			volatile size_t xSize = sizeof( StaticQueue_t );
 800d944:	2350      	movs	r3, #80	; 0x50
 800d946:	9301      	str	r3, [sp, #4]
			configASSERT( xSize == sizeof( Queue_t ) );
 800d948:	9b01      	ldr	r3, [sp, #4]
 800d94a:	2b50      	cmp	r3, #80	; 0x50
 800d94c:	d023      	beq.n	800d996 <xQueueGenericCreateStatic+0x76>
 800d94e:	f04f 0350 	mov.w	r3, #80	; 0x50
 800d952:	f383 8811 	msr	BASEPRI, r3
 800d956:	f3bf 8f6f 	isb	sy
 800d95a:	f3bf 8f4f 	dsb	sy
 800d95e:	e7fe      	b.n	800d95e <xQueueGenericCreateStatic+0x3e>
 800d960:	f04f 0350 	mov.w	r3, #80	; 0x50
 800d964:	f383 8811 	msr	BASEPRI, r3
 800d968:	f3bf 8f6f 	isb	sy
 800d96c:	f3bf 8f4f 	dsb	sy
		configASSERT( pxStaticQueue != NULL );
 800d970:	e7fe      	b.n	800d970 <xQueueGenericCreateStatic+0x50>
 800d972:	f04f 0350 	mov.w	r3, #80	; 0x50
 800d976:	f383 8811 	msr	BASEPRI, r3
 800d97a:	f3bf 8f6f 	isb	sy
 800d97e:	f3bf 8f4f 	dsb	sy
		configASSERT( !( ( pucQueueStorage != NULL ) && ( uxItemSize == 0 ) ) );
 800d982:	e7fe      	b.n	800d982 <xQueueGenericCreateStatic+0x62>
		configASSERT( !( ( pucQueueStorage == NULL ) && ( uxItemSize != 0 ) ) );
 800d984:	bb89      	cbnz	r1, 800d9ea <xQueueGenericCreateStatic+0xca>
			volatile size_t xSize = sizeof( StaticQueue_t );
 800d986:	2250      	movs	r2, #80	; 0x50
 800d988:	9201      	str	r2, [sp, #4]
			configASSERT( xSize == sizeof( Queue_t ) );
 800d98a:	9a01      	ldr	r2, [sp, #4]
 800d98c:	2a50      	cmp	r2, #80	; 0x50
 800d98e:	d1de      	bne.n	800d94e <xQueueGenericCreateStatic+0x2e>
			( void ) xSize; /* Keeps lint quiet when configASSERT() is not defined. */
 800d990:	9a01      	ldr	r2, [sp, #4]
 800d992:	462a      	mov	r2, r5
 800d994:	e000      	b.n	800d998 <xQueueGenericCreateStatic+0x78>
 800d996:	9b01      	ldr	r3, [sp, #4]
	if( uxItemSize == ( UBaseType_t ) 0 )
 800d998:	602a      	str	r2, [r5, #0]
				pxNewQueue->ucStaticallyAllocated = pdTRUE;
 800d99a:	2201      	movs	r2, #1
	pxNewQueue->uxItemSize = uxItemSize;
 800d99c:	e9c5 010f 	strd	r0, r1, [r5, #60]	; 0x3c
				pxNewQueue->ucStaticallyAllocated = pdTRUE;
 800d9a0:	f885 2046 	strb.w	r2, [r5, #70]	; 0x46
	taskENTER_CRITICAL();
 800d9a4:	f7ff fe1e 	bl	800d5e4 <vPortEnterCritical>
		pxQueue->u.xQueue.pcTail = pxQueue->pcHead + ( pxQueue->uxLength * pxQueue->uxItemSize ); /*lint !e9016 Pointer arithmetic allowed on char types, especially when it assists conveying intent. */
 800d9a8:	e9d5 120f 	ldrd	r1, r2, [r5, #60]	; 0x3c
 800d9ac:	6828      	ldr	r0, [r5, #0]
		pxQueue->pcWriteTo = pxQueue->pcHead;
 800d9ae:	6068      	str	r0, [r5, #4]
		pxQueue->u.xQueue.pcTail = pxQueue->pcHead + ( pxQueue->uxLength * pxQueue->uxItemSize ); /*lint !e9016 Pointer arithmetic allowed on char types, especially when it assists conveying intent. */
 800d9b0:	fb02 f101 	mul.w	r1, r2, r1
		pxQueue->u.xQueue.pcReadFrom = pxQueue->pcHead + ( ( pxQueue->uxLength - 1U ) * pxQueue->uxItemSize ); /*lint !e9016 Pointer arithmetic allowed on char types, especially when it assists conveying intent. */
 800d9b4:	1a8a      	subs	r2, r1, r2
		pxQueue->u.xQueue.pcTail = pxQueue->pcHead + ( pxQueue->uxLength * pxQueue->uxItemSize ); /*lint !e9016 Pointer arithmetic allowed on char types, especially when it assists conveying intent. */
 800d9b6:	4401      	add	r1, r0
 800d9b8:	60a9      	str	r1, [r5, #8]
		pxQueue->uxMessagesWaiting = ( UBaseType_t ) 0U;
 800d9ba:	2100      	movs	r1, #0
		pxQueue->u.xQueue.pcReadFrom = pxQueue->pcHead + ( ( pxQueue->uxLength - 1U ) * pxQueue->uxItemSize ); /*lint !e9016 Pointer arithmetic allowed on char types, especially when it assists conveying intent. */
 800d9bc:	4402      	add	r2, r0
		pxQueue->uxMessagesWaiting = ( UBaseType_t ) 0U;
 800d9be:	63a9      	str	r1, [r5, #56]	; 0x38
		pxQueue->cRxLock = queueUNLOCKED;
 800d9c0:	21ff      	movs	r1, #255	; 0xff
 800d9c2:	f885 1044 	strb.w	r1, [r5, #68]	; 0x44
		pxQueue->u.xQueue.pcReadFrom = pxQueue->pcHead + ( ( pxQueue->uxLength - 1U ) * pxQueue->uxItemSize ); /*lint !e9016 Pointer arithmetic allowed on char types, especially when it assists conveying intent. */
 800d9c6:	60ea      	str	r2, [r5, #12]
		pxQueue->cTxLock = queueUNLOCKED;
 800d9c8:	f885 1045 	strb.w	r1, [r5, #69]	; 0x45
			vListInitialise( &( pxQueue->xTasksWaitingToSend ) );
 800d9cc:	f105 0010 	add.w	r0, r5, #16
 800d9d0:	f7ff fd52 	bl	800d478 <vListInitialise>
			vListInitialise( &( pxQueue->xTasksWaitingToReceive ) );
 800d9d4:	f105 0024 	add.w	r0, r5, #36	; 0x24
 800d9d8:	f7ff fd4e 	bl	800d478 <vListInitialise>
	taskEXIT_CRITICAL();
 800d9dc:	f7ff fe24 	bl	800d628 <vPortExitCritical>
	}
 800d9e0:	4628      	mov	r0, r5
		pxNewQueue->ucQueueType = ucQueueType;
 800d9e2:	f885 404c 	strb.w	r4, [r5, #76]	; 0x4c
	}
 800d9e6:	b003      	add	sp, #12
 800d9e8:	bd30      	pop	{r4, r5, pc}
 800d9ea:	f04f 0350 	mov.w	r3, #80	; 0x50
 800d9ee:	f383 8811 	msr	BASEPRI, r3
 800d9f2:	f3bf 8f6f 	isb	sy
 800d9f6:	f3bf 8f4f 	dsb	sy
		configASSERT( !( ( pucQueueStorage == NULL ) && ( uxItemSize != 0 ) ) );
 800d9fa:	e7fe      	b.n	800d9fa <xQueueGenericCreateStatic+0xda>

0800d9fc <xQueueGenericCreate>:
	{
 800d9fc:	b5f8      	push	{r3, r4, r5, r6, r7, lr}
		configASSERT( uxQueueLength > ( UBaseType_t ) 0 );
 800d9fe:	b940      	cbnz	r0, 800da12 <xQueueGenericCreate+0x16>
 800da00:	f04f 0350 	mov.w	r3, #80	; 0x50
 800da04:	f383 8811 	msr	BASEPRI, r3
 800da08:	f3bf 8f6f 	isb	sy
 800da0c:	f3bf 8f4f 	dsb	sy
 800da10:	e7fe      	b.n	800da10 <xQueueGenericCreate+0x14>
 800da12:	4605      	mov	r5, r0
		xQueueSizeInBytes = ( size_t ) ( uxQueueLength * uxItemSize ); /*lint !e961 MISRA exception as the casts are only redundant for some ports. */
 800da14:	fb01 f000 	mul.w	r0, r1, r0
		pxNewQueue = ( Queue_t * ) pvPortMalloc( sizeof( Queue_t ) + xQueueSizeInBytes ); /*lint !e9087 !e9079 see comment above. */
 800da18:	3050      	adds	r0, #80	; 0x50
 800da1a:	460e      	mov	r6, r1
 800da1c:	4617      	mov	r7, r2
 800da1e:	f7ff fc0b 	bl	800d238 <pvPortMalloc>
		if( pxNewQueue != NULL )
 800da22:	4604      	mov	r4, r0
 800da24:	b340      	cbz	r0, 800da78 <xQueueGenericCreate+0x7c>
				pxNewQueue->ucStaticallyAllocated = pdFALSE;
 800da26:	2300      	movs	r3, #0
 800da28:	f880 3046 	strb.w	r3, [r0, #70]	; 0x46
	if( uxItemSize == ( UBaseType_t ) 0 )
 800da2c:	b336      	cbz	r6, 800da7c <xQueueGenericCreate+0x80>
			pucQueueStorage += sizeof( Queue_t ); /*lint !e9016 Pointer arithmetic allowed on char types, especially when it assists conveying intent. */
 800da2e:	f100 0350 	add.w	r3, r0, #80	; 0x50
		pxNewQueue->pcHead = ( int8_t * ) pucQueueStorage;
 800da32:	6023      	str	r3, [r4, #0]
	pxNewQueue->uxItemSize = uxItemSize;
 800da34:	e9c4 560f 	strd	r5, r6, [r4, #60]	; 0x3c
	taskENTER_CRITICAL();
 800da38:	f7ff fdd4 	bl	800d5e4 <vPortEnterCritical>
		pxQueue->u.xQueue.pcTail = pxQueue->pcHead + ( pxQueue->uxLength * pxQueue->uxItemSize ); /*lint !e9016 Pointer arithmetic allowed on char types, especially when it assists conveying intent. */
 800da3c:	e9d4 230f 	ldrd	r2, r3, [r4, #60]	; 0x3c
 800da40:	6821      	ldr	r1, [r4, #0]
		pxQueue->pcWriteTo = pxQueue->pcHead;
 800da42:	6061      	str	r1, [r4, #4]
		pxQueue->u.xQueue.pcTail = pxQueue->pcHead + ( pxQueue->uxLength * pxQueue->uxItemSize ); /*lint !e9016 Pointer arithmetic allowed on char types, especially when it assists conveying intent. */
 800da44:	fb03 f202 	mul.w	r2, r3, r2
		pxQueue->u.xQueue.pcReadFrom = pxQueue->pcHead + ( ( pxQueue->uxLength - 1U ) * pxQueue->uxItemSize ); /*lint !e9016 Pointer arithmetic allowed on char types, especially when it assists conveying intent. */
 800da48:	1ad3      	subs	r3, r2, r3
		pxQueue->u.xQueue.pcTail = pxQueue->pcHead + ( pxQueue->uxLength * pxQueue->uxItemSize ); /*lint !e9016 Pointer arithmetic allowed on char types, especially when it assists conveying intent. */
 800da4a:	440a      	add	r2, r1
 800da4c:	60a2      	str	r2, [r4, #8]
		pxQueue->uxMessagesWaiting = ( UBaseType_t ) 0U;
 800da4e:	2200      	movs	r2, #0
		pxQueue->u.xQueue.pcReadFrom = pxQueue->pcHead + ( ( pxQueue->uxLength - 1U ) * pxQueue->uxItemSize ); /*lint !e9016 Pointer arithmetic allowed on char types, especially when it assists conveying intent. */
 800da50:	440b      	add	r3, r1
		pxQueue->uxMessagesWaiting = ( UBaseType_t ) 0U;
 800da52:	63a2      	str	r2, [r4, #56]	; 0x38
		pxQueue->cRxLock = queueUNLOCKED;
 800da54:	22ff      	movs	r2, #255	; 0xff
 800da56:	f884 2044 	strb.w	r2, [r4, #68]	; 0x44
		pxQueue->u.xQueue.pcReadFrom = pxQueue->pcHead + ( ( pxQueue->uxLength - 1U ) * pxQueue->uxItemSize ); /*lint !e9016 Pointer arithmetic allowed on char types, especially when it assists conveying intent. */
 800da5a:	60e3      	str	r3, [r4, #12]
		pxQueue->cTxLock = queueUNLOCKED;
 800da5c:	f884 2045 	strb.w	r2, [r4, #69]	; 0x45
			vListInitialise( &( pxQueue->xTasksWaitingToSend ) );
 800da60:	f104 0010 	add.w	r0, r4, #16
 800da64:	f7ff fd08 	bl	800d478 <vListInitialise>
			vListInitialise( &( pxQueue->xTasksWaitingToReceive ) );
 800da68:	f104 0024 	add.w	r0, r4, #36	; 0x24
 800da6c:	f7ff fd04 	bl	800d478 <vListInitialise>
	taskEXIT_CRITICAL();
 800da70:	f7ff fdda 	bl	800d628 <vPortExitCritical>
		pxNewQueue->ucQueueType = ucQueueType;
 800da74:	f884 704c 	strb.w	r7, [r4, #76]	; 0x4c
	}
 800da78:	4620      	mov	r0, r4
 800da7a:	bdf8      	pop	{r3, r4, r5, r6, r7, pc}
 800da7c:	4603      	mov	r3, r0
 800da7e:	e7d8      	b.n	800da32 <xQueueGenericCreate+0x36>

0800da80 <xQueueCreateCountingSemaphoreStatic>:
		configASSERT( uxMaxCount != 0 );
 800da80:	b940      	cbnz	r0, 800da94 <xQueueCreateCountingSemaphoreStatic+0x14>
 800da82:	f04f 0350 	mov.w	r3, #80	; 0x50
 800da86:	f383 8811 	msr	BASEPRI, r3
 800da8a:	f3bf 8f6f 	isb	sy
 800da8e:	f3bf 8f4f 	dsb	sy
 800da92:	e7fe      	b.n	800da92 <xQueueCreateCountingSemaphoreStatic+0x12>
		configASSERT( uxInitialCount <= uxMaxCount );
 800da94:	4288      	cmp	r0, r1
 800da96:	d208      	bcs.n	800daaa <xQueueCreateCountingSemaphoreStatic+0x2a>
 800da98:	f04f 0350 	mov.w	r3, #80	; 0x50
 800da9c:	f383 8811 	msr	BASEPRI, r3
 800daa0:	f3bf 8f6f 	isb	sy
 800daa4:	f3bf 8f4f 	dsb	sy
 800daa8:	e7fe      	b.n	800daa8 <xQueueCreateCountingSemaphoreStatic+0x28>
	{
 800daaa:	b530      	push	{r4, r5, lr}
 800daac:	4615      	mov	r5, r2
 800daae:	b085      	sub	sp, #20
		configASSERT( pxStaticQueue != NULL );
 800dab0:	2a00      	cmp	r2, #0
 800dab2:	d03c      	beq.n	800db2e <xQueueCreateCountingSemaphoreStatic+0xae>
			volatile size_t xSize = sizeof( StaticQueue_t );
 800dab4:	2350      	movs	r3, #80	; 0x50
 800dab6:	9303      	str	r3, [sp, #12]
			configASSERT( xSize == sizeof( Queue_t ) );
 800dab8:	9b03      	ldr	r3, [sp, #12]
 800daba:	2b50      	cmp	r3, #80	; 0x50
 800dabc:	d008      	beq.n	800dad0 <xQueueCreateCountingSemaphoreStatic+0x50>
 800dabe:	f04f 0350 	mov.w	r3, #80	; 0x50
 800dac2:	f383 8811 	msr	BASEPRI, r3
 800dac6:	f3bf 8f6f 	isb	sy
 800daca:	f3bf 8f4f 	dsb	sy
 800dace:	e7fe      	b.n	800dace <xQueueCreateCountingSemaphoreStatic+0x4e>
	pxNewQueue->uxItemSize = uxItemSize;
 800dad0:	2400      	movs	r4, #0
				pxNewQueue->ucStaticallyAllocated = pdTRUE;
 800dad2:	2301      	movs	r3, #1
 800dad4:	f882 3046 	strb.w	r3, [r2, #70]	; 0x46
		pxNewQueue->pcHead = ( int8_t * ) pxNewQueue;
 800dad8:	602a      	str	r2, [r5, #0]
	pxNewQueue->uxItemSize = uxItemSize;
 800dada:	e9c2 040f 	strd	r0, r4, [r2, #60]	; 0x3c
 800dade:	9101      	str	r1, [sp, #4]
			( void ) xSize; /* Keeps lint quiet when configASSERT() is not defined. */
 800dae0:	9b03      	ldr	r3, [sp, #12]
	taskENTER_CRITICAL();
 800dae2:	f7ff fd7f 	bl	800d5e4 <vPortEnterCritical>
		pxQueue->u.xQueue.pcTail = pxQueue->pcHead + ( pxQueue->uxLength * pxQueue->uxItemSize ); /*lint !e9016 Pointer arithmetic allowed on char types, especially when it assists conveying intent. */
 800dae6:	e9d5 030f 	ldrd	r0, r3, [r5, #60]	; 0x3c
 800daea:	682a      	ldr	r2, [r5, #0]
		pxQueue->uxMessagesWaiting = ( UBaseType_t ) 0U;
 800daec:	63ac      	str	r4, [r5, #56]	; 0x38
		pxQueue->u.xQueue.pcTail = pxQueue->pcHead + ( pxQueue->uxLength * pxQueue->uxItemSize ); /*lint !e9016 Pointer arithmetic allowed on char types, especially when it assists conveying intent. */
 800daee:	fb03 f000 	mul.w	r0, r3, r0
		pxQueue->u.xQueue.pcReadFrom = pxQueue->pcHead + ( ( pxQueue->uxLength - 1U ) * pxQueue->uxItemSize ); /*lint !e9016 Pointer arithmetic allowed on char types, especially when it assists conveying intent. */
 800daf2:	1ac3      	subs	r3, r0, r3
 800daf4:	4413      	add	r3, r2
		pxQueue->u.xQueue.pcTail = pxQueue->pcHead + ( pxQueue->uxLength * pxQueue->uxItemSize ); /*lint !e9016 Pointer arithmetic allowed on char types, especially when it assists conveying intent. */
 800daf6:	4410      	add	r0, r2
		pxQueue->cRxLock = queueUNLOCKED;
 800daf8:	f04f 0eff 	mov.w	lr, #255	; 0xff
 800dafc:	f885 e044 	strb.w	lr, [r5, #68]	; 0x44
		pxQueue->u.xQueue.pcReadFrom = pxQueue->pcHead + ( ( pxQueue->uxLength - 1U ) * pxQueue->uxItemSize ); /*lint !e9016 Pointer arithmetic allowed on char types, especially when it assists conveying intent. */
 800db00:	60eb      	str	r3, [r5, #12]
		pxQueue->pcWriteTo = pxQueue->pcHead;
 800db02:	606a      	str	r2, [r5, #4]
		pxQueue->cTxLock = queueUNLOCKED;
 800db04:	f885 e045 	strb.w	lr, [r5, #69]	; 0x45
		pxQueue->u.xQueue.pcTail = pxQueue->pcHead + ( pxQueue->uxLength * pxQueue->uxItemSize ); /*lint !e9016 Pointer arithmetic allowed on char types, especially when it assists conveying intent. */
 800db08:	60a8      	str	r0, [r5, #8]
			vListInitialise( &( pxQueue->xTasksWaitingToSend ) );
 800db0a:	f105 0010 	add.w	r0, r5, #16
 800db0e:	f7ff fcb3 	bl	800d478 <vListInitialise>
			vListInitialise( &( pxQueue->xTasksWaitingToReceive ) );
 800db12:	f105 0024 	add.w	r0, r5, #36	; 0x24
 800db16:	f7ff fcaf 	bl	800d478 <vListInitialise>
	taskEXIT_CRITICAL();
 800db1a:	f7ff fd85 	bl	800d628 <vPortExitCritical>
			( ( Queue_t * ) xHandle )->uxMessagesWaiting = uxInitialCount;
 800db1e:	9901      	ldr	r1, [sp, #4]
 800db20:	63a9      	str	r1, [r5, #56]	; 0x38
		pxNewQueue->ucQueueType = ucQueueType;
 800db22:	2302      	movs	r3, #2
	}
 800db24:	4628      	mov	r0, r5
		pxNewQueue->ucQueueType = ucQueueType;
 800db26:	f885 304c 	strb.w	r3, [r5, #76]	; 0x4c
	}
 800db2a:	b005      	add	sp, #20
 800db2c:	bd30      	pop	{r4, r5, pc}
 800db2e:	f04f 0350 	mov.w	r3, #80	; 0x50
 800db32:	f383 8811 	msr	BASEPRI, r3
 800db36:	f3bf 8f6f 	isb	sy
 800db3a:	f3bf 8f4f 	dsb	sy
		configASSERT( pxStaticQueue != NULL );
 800db3e:	e7fe      	b.n	800db3e <xQueueCreateCountingSemaphoreStatic+0xbe>

0800db40 <xQueueCreateCountingSemaphore>:
	{
 800db40:	b5f8      	push	{r3, r4, r5, r6, r7, lr}
		configASSERT( uxMaxCount != 0 );
 800db42:	b940      	cbnz	r0, 800db56 <xQueueCreateCountingSemaphore+0x16>
 800db44:	f04f 0350 	mov.w	r3, #80	; 0x50
 800db48:	f383 8811 	msr	BASEPRI, r3
 800db4c:	f3bf 8f6f 	isb	sy
 800db50:	f3bf 8f4f 	dsb	sy
 800db54:	e7fe      	b.n	800db54 <xQueueCreateCountingSemaphore+0x14>
		configASSERT( uxInitialCount <= uxMaxCount );
 800db56:	4288      	cmp	r0, r1
 800db58:	460e      	mov	r6, r1
 800db5a:	4604      	mov	r4, r0
 800db5c:	d208      	bcs.n	800db70 <xQueueCreateCountingSemaphore+0x30>
 800db5e:	f04f 0350 	mov.w	r3, #80	; 0x50
 800db62:	f383 8811 	msr	BASEPRI, r3
 800db66:	f3bf 8f6f 	isb	sy
 800db6a:	f3bf 8f4f 	dsb	sy
 800db6e:	e7fe      	b.n	800db6e <xQueueCreateCountingSemaphore+0x2e>
		pxNewQueue = ( Queue_t * ) pvPortMalloc( sizeof( Queue_t ) + xQueueSizeInBytes ); /*lint !e9087 !e9079 see comment above. */
 800db70:	2050      	movs	r0, #80	; 0x50
 800db72:	f7ff fb61 	bl	800d238 <pvPortMalloc>
		if( pxNewQueue != NULL )
 800db76:	4605      	mov	r5, r0
 800db78:	b330      	cbz	r0, 800dbc8 <xQueueCreateCountingSemaphore+0x88>
				pxNewQueue->ucStaticallyAllocated = pdFALSE;
 800db7a:	2700      	movs	r7, #0
	pxNewQueue->uxItemSize = uxItemSize;
 800db7c:	e9c0 470f 	strd	r4, r7, [r0, #60]	; 0x3c
				pxNewQueue->ucStaticallyAllocated = pdFALSE;
 800db80:	f880 7046 	strb.w	r7, [r0, #70]	; 0x46
		pxNewQueue->pcHead = ( int8_t * ) pxNewQueue;
 800db84:	6000      	str	r0, [r0, #0]
	taskENTER_CRITICAL();
 800db86:	f7ff fd2d 	bl	800d5e4 <vPortEnterCritical>
		pxQueue->u.xQueue.pcTail = pxQueue->pcHead + ( pxQueue->uxLength * pxQueue->uxItemSize ); /*lint !e9016 Pointer arithmetic allowed on char types, especially when it assists conveying intent. */
 800db8a:	e9d5 230f 	ldrd	r2, r3, [r5, #60]	; 0x3c
 800db8e:	6829      	ldr	r1, [r5, #0]
		pxQueue->uxMessagesWaiting = ( UBaseType_t ) 0U;
 800db90:	63af      	str	r7, [r5, #56]	; 0x38
		pxQueue->u.xQueue.pcTail = pxQueue->pcHead + ( pxQueue->uxLength * pxQueue->uxItemSize ); /*lint !e9016 Pointer arithmetic allowed on char types, especially when it assists conveying intent. */
 800db92:	fb03 f202 	mul.w	r2, r3, r2
		pxQueue->u.xQueue.pcReadFrom = pxQueue->pcHead + ( ( pxQueue->uxLength - 1U ) * pxQueue->uxItemSize ); /*lint !e9016 Pointer arithmetic allowed on char types, especially when it assists conveying intent. */
 800db96:	1ad3      	subs	r3, r2, r3
		pxQueue->u.xQueue.pcTail = pxQueue->pcHead + ( pxQueue->uxLength * pxQueue->uxItemSize ); /*lint !e9016 Pointer arithmetic allowed on char types, especially when it assists conveying intent. */
 800db98:	440a      	add	r2, r1
		pxQueue->u.xQueue.pcReadFrom = pxQueue->pcHead + ( ( pxQueue->uxLength - 1U ) * pxQueue->uxItemSize ); /*lint !e9016 Pointer arithmetic allowed on char types, especially when it assists conveying intent. */
 800db9a:	440b      	add	r3, r1
		pxQueue->u.xQueue.pcTail = pxQueue->pcHead + ( pxQueue->uxLength * pxQueue->uxItemSize ); /*lint !e9016 Pointer arithmetic allowed on char types, especially when it assists conveying intent. */
 800db9c:	60aa      	str	r2, [r5, #8]
		pxQueue->cRxLock = queueUNLOCKED;
 800db9e:	22ff      	movs	r2, #255	; 0xff
 800dba0:	f885 2044 	strb.w	r2, [r5, #68]	; 0x44
		pxQueue->u.xQueue.pcReadFrom = pxQueue->pcHead + ( ( pxQueue->uxLength - 1U ) * pxQueue->uxItemSize ); /*lint !e9016 Pointer arithmetic allowed on char types, especially when it assists conveying intent. */
 800dba4:	60eb      	str	r3, [r5, #12]
		pxQueue->pcWriteTo = pxQueue->pcHead;
 800dba6:	6069      	str	r1, [r5, #4]
		pxQueue->cTxLock = queueUNLOCKED;
 800dba8:	f885 2045 	strb.w	r2, [r5, #69]	; 0x45
			vListInitialise( &( pxQueue->xTasksWaitingToSend ) );
 800dbac:	f105 0010 	add.w	r0, r5, #16
 800dbb0:	f7ff fc62 	bl	800d478 <vListInitialise>
			vListInitialise( &( pxQueue->xTasksWaitingToReceive ) );
 800dbb4:	f105 0024 	add.w	r0, r5, #36	; 0x24
 800dbb8:	f7ff fc5e 	bl	800d478 <vListInitialise>
	taskEXIT_CRITICAL();
 800dbbc:	f7ff fd34 	bl	800d628 <vPortExitCritical>
		pxNewQueue->ucQueueType = ucQueueType;
 800dbc0:	2302      	movs	r3, #2
 800dbc2:	f885 304c 	strb.w	r3, [r5, #76]	; 0x4c
			( ( Queue_t * ) xHandle )->uxMessagesWaiting = uxInitialCount;
 800dbc6:	63ae      	str	r6, [r5, #56]	; 0x38
	}
 800dbc8:	4628      	mov	r0, r5
 800dbca:	bdf8      	pop	{r3, r4, r5, r6, r7, pc}

0800dbcc <xQueueGenericSend>:
{
 800dbcc:	e92d 43f0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, lr}
 800dbd0:	b085      	sub	sp, #20
 800dbd2:	9201      	str	r2, [sp, #4]
	configASSERT( pxQueue );
 800dbd4:	2800      	cmp	r0, #0
 800dbd6:	f000 80a4 	beq.w	800dd22 <xQueueGenericSend+0x156>
	configASSERT( !( ( pvItemToQueue == NULL ) && ( pxQueue->uxItemSize != ( UBaseType_t ) 0U ) ) );
 800dbda:	4688      	mov	r8, r1
 800dbdc:	461f      	mov	r7, r3
 800dbde:	4604      	mov	r4, r0
 800dbe0:	2900      	cmp	r1, #0
 800dbe2:	f000 8091 	beq.w	800dd08 <xQueueGenericSend+0x13c>
	configASSERT( !( ( xCopyPosition == queueOVERWRITE ) && ( pxQueue->uxLength != 1 ) ) );
 800dbe6:	2f02      	cmp	r7, #2
 800dbe8:	d10b      	bne.n	800dc02 <xQueueGenericSend+0x36>
 800dbea:	6be3      	ldr	r3, [r4, #60]	; 0x3c
 800dbec:	2b01      	cmp	r3, #1
 800dbee:	d008      	beq.n	800dc02 <xQueueGenericSend+0x36>
 800dbf0:	f04f 0350 	mov.w	r3, #80	; 0x50
 800dbf4:	f383 8811 	msr	BASEPRI, r3
 800dbf8:	f3bf 8f6f 	isb	sy
 800dbfc:	f3bf 8f4f 	dsb	sy
 800dc00:	e7fe      	b.n	800dc00 <xQueueGenericSend+0x34>
		configASSERT( !( ( xTaskGetSchedulerState() == taskSCHEDULER_SUSPENDED ) && ( xTicksToWait != 0 ) ) );
 800dc02:	f001 fc0f 	bl	800f424 <xTaskGetSchedulerState>
 800dc06:	4605      	mov	r5, r0
 800dc08:	2800      	cmp	r0, #0
 800dc0a:	f000 8093 	beq.w	800dd34 <xQueueGenericSend+0x168>
 800dc0e:	2500      	movs	r5, #0
			{
				/* Tasks that are removed from the event list will get added to
				the pending ready list as the scheduler is still suspended. */
				if( listLIST_IS_EMPTY( &( pxQueue->xTasksWaitingToReceive ) ) == pdFALSE )
				{
					if( xTaskRemoveFromEventList( &( pxQueue->xTasksWaitingToReceive ) ) != pdFALSE )
 800dc10:	f104 0624 	add.w	r6, r4, #36	; 0x24
		taskENTER_CRITICAL();
 800dc14:	f7ff fce6 	bl	800d5e4 <vPortEnterCritical>
			if( ( pxQueue->uxMessagesWaiting < pxQueue->uxLength ) || ( xCopyPosition == queueOVERWRITE ) )
 800dc18:	6ba2      	ldr	r2, [r4, #56]	; 0x38
 800dc1a:	6be3      	ldr	r3, [r4, #60]	; 0x3c
 800dc1c:	429a      	cmp	r2, r3
 800dc1e:	f0c0 80ef 	bcc.w	800de00 <xQueueGenericSend+0x234>
 800dc22:	2f02      	cmp	r7, #2
 800dc24:	f000 80ec 	beq.w	800de00 <xQueueGenericSend+0x234>
				if( xTicksToWait == ( TickType_t ) 0 )
 800dc28:	9801      	ldr	r0, [sp, #4]
 800dc2a:	2800      	cmp	r0, #0
 800dc2c:	f000 8101 	beq.w	800de32 <xQueueGenericSend+0x266>
				else if( xEntryTimeSet == pdFALSE )
 800dc30:	2d00      	cmp	r5, #0
 800dc32:	f000 80e1 	beq.w	800ddf8 <xQueueGenericSend+0x22c>
		taskEXIT_CRITICAL();
 800dc36:	f7ff fcf7 	bl	800d628 <vPortExitCritical>
		vTaskSuspendAll();
 800dc3a:	f001 fa49 	bl	800f0d0 <vTaskSuspendAll>
		prvLockQueue( pxQueue );
 800dc3e:	f7ff fcd1 	bl	800d5e4 <vPortEnterCritical>
 800dc42:	f894 3044 	ldrb.w	r3, [r4, #68]	; 0x44
 800dc46:	2bff      	cmp	r3, #255	; 0xff
 800dc48:	bf04      	itt	eq
 800dc4a:	2300      	moveq	r3, #0
 800dc4c:	f884 3044 	strbeq.w	r3, [r4, #68]	; 0x44
 800dc50:	f894 3045 	ldrb.w	r3, [r4, #69]	; 0x45
 800dc54:	2bff      	cmp	r3, #255	; 0xff
 800dc56:	bf04      	itt	eq
 800dc58:	2300      	moveq	r3, #0
 800dc5a:	f884 3045 	strbeq.w	r3, [r4, #69]	; 0x45
 800dc5e:	f7ff fce3 	bl	800d628 <vPortExitCritical>
		if( xTaskCheckForTimeOut( &xTimeOut, &xTicksToWait ) == pdFALSE )
 800dc62:	a901      	add	r1, sp, #4
 800dc64:	a802      	add	r0, sp, #8
 800dc66:	f001 fb8f 	bl	800f388 <xTaskCheckForTimeOut>
 800dc6a:	2800      	cmp	r0, #0
 800dc6c:	f040 80e6 	bne.w	800de3c <xQueueGenericSend+0x270>

static BaseType_t prvIsQueueFull( const Queue_t *pxQueue )
{
BaseType_t xReturn;

	taskENTER_CRITICAL();
 800dc70:	f7ff fcb8 	bl	800d5e4 <vPortEnterCritical>
	{
		if( pxQueue->uxMessagesWaiting == pxQueue->uxLength )
 800dc74:	6ba2      	ldr	r2, [r4, #56]	; 0x38
 800dc76:	6be3      	ldr	r3, [r4, #60]	; 0x3c
 800dc78:	429a      	cmp	r2, r3
 800dc7a:	d068      	beq.n	800dd4e <xQueueGenericSend+0x182>
		else
		{
			xReturn = pdFALSE;
		}
	}
	taskEXIT_CRITICAL();
 800dc7c:	f7ff fcd4 	bl	800d628 <vPortExitCritical>
	taskENTER_CRITICAL();
 800dc80:	f7ff fcb0 	bl	800d5e4 <vPortEnterCritical>
		int8_t cTxLock = pxQueue->cTxLock;
 800dc84:	f894 2045 	ldrb.w	r2, [r4, #69]	; 0x45
 800dc88:	b255      	sxtb	r5, r2
		while( cTxLock > queueLOCKED_UNMODIFIED )
 800dc8a:	2d00      	cmp	r5, #0
 800dc8c:	dc04      	bgt.n	800dc98 <xQueueGenericSend+0xcc>
 800dc8e:	e011      	b.n	800dcb4 <xQueueGenericSend+0xe8>
			--cTxLock;
 800dc90:	1e6a      	subs	r2, r5, #1
 800dc92:	b2d3      	uxtb	r3, r2
 800dc94:	b255      	sxtb	r5, r2
		while( cTxLock > queueLOCKED_UNMODIFIED )
 800dc96:	b16b      	cbz	r3, 800dcb4 <xQueueGenericSend+0xe8>
				if( listLIST_IS_EMPTY( &( pxQueue->xTasksWaitingToReceive ) ) == pdFALSE )
 800dc98:	6a63      	ldr	r3, [r4, #36]	; 0x24
					if( xTaskRemoveFromEventList( &( pxQueue->xTasksWaitingToReceive ) ) != pdFALSE )
 800dc9a:	4630      	mov	r0, r6
				if( listLIST_IS_EMPTY( &( pxQueue->xTasksWaitingToReceive ) ) == pdFALSE )
 800dc9c:	b153      	cbz	r3, 800dcb4 <xQueueGenericSend+0xe8>
					if( xTaskRemoveFromEventList( &( pxQueue->xTasksWaitingToReceive ) ) != pdFALSE )
 800dc9e:	f001 fb1f 	bl	800f2e0 <xTaskRemoveFromEventList>
 800dca2:	2800      	cmp	r0, #0
 800dca4:	d0f4      	beq.n	800dc90 <xQueueGenericSend+0xc4>
						vTaskMissedYield();
 800dca6:	f001 fbb7 	bl	800f418 <vTaskMissedYield>
			--cTxLock;
 800dcaa:	1e6a      	subs	r2, r5, #1
 800dcac:	b2d3      	uxtb	r3, r2
 800dcae:	b255      	sxtb	r5, r2
		while( cTxLock > queueLOCKED_UNMODIFIED )
 800dcb0:	2b00      	cmp	r3, #0
 800dcb2:	d1f1      	bne.n	800dc98 <xQueueGenericSend+0xcc>
		pxQueue->cTxLock = queueUNLOCKED;
 800dcb4:	23ff      	movs	r3, #255	; 0xff
 800dcb6:	f884 3045 	strb.w	r3, [r4, #69]	; 0x45
	taskEXIT_CRITICAL();
 800dcba:	f7ff fcb5 	bl	800d628 <vPortExitCritical>
	taskENTER_CRITICAL();
 800dcbe:	f7ff fc91 	bl	800d5e4 <vPortEnterCritical>
		int8_t cRxLock = pxQueue->cRxLock;
 800dcc2:	f894 2044 	ldrb.w	r2, [r4, #68]	; 0x44
 800dcc6:	b255      	sxtb	r5, r2
		while( cRxLock > queueLOCKED_UNMODIFIED )
 800dcc8:	2d00      	cmp	r5, #0
 800dcca:	dd14      	ble.n	800dcf6 <xQueueGenericSend+0x12a>
				if( xTaskRemoveFromEventList( &( pxQueue->xTasksWaitingToSend ) ) != pdFALSE )
 800dccc:	f104 0910 	add.w	r9, r4, #16
 800dcd0:	e003      	b.n	800dcda <xQueueGenericSend+0x10e>
				--cRxLock;
 800dcd2:	1e6a      	subs	r2, r5, #1
 800dcd4:	b2d3      	uxtb	r3, r2
 800dcd6:	b255      	sxtb	r5, r2
		while( cRxLock > queueLOCKED_UNMODIFIED )
 800dcd8:	b16b      	cbz	r3, 800dcf6 <xQueueGenericSend+0x12a>
			if( listLIST_IS_EMPTY( &( pxQueue->xTasksWaitingToSend ) ) == pdFALSE )
 800dcda:	6923      	ldr	r3, [r4, #16]
				if( xTaskRemoveFromEventList( &( pxQueue->xTasksWaitingToSend ) ) != pdFALSE )
 800dcdc:	4648      	mov	r0, r9
			if( listLIST_IS_EMPTY( &( pxQueue->xTasksWaitingToSend ) ) == pdFALSE )
 800dcde:	b153      	cbz	r3, 800dcf6 <xQueueGenericSend+0x12a>
				if( xTaskRemoveFromEventList( &( pxQueue->xTasksWaitingToSend ) ) != pdFALSE )
 800dce0:	f001 fafe 	bl	800f2e0 <xTaskRemoveFromEventList>
 800dce4:	2800      	cmp	r0, #0
 800dce6:	d0f4      	beq.n	800dcd2 <xQueueGenericSend+0x106>
					vTaskMissedYield();
 800dce8:	f001 fb96 	bl	800f418 <vTaskMissedYield>
				--cRxLock;
 800dcec:	1e6a      	subs	r2, r5, #1
 800dcee:	b2d3      	uxtb	r3, r2
 800dcf0:	b255      	sxtb	r5, r2
		while( cRxLock > queueLOCKED_UNMODIFIED )
 800dcf2:	2b00      	cmp	r3, #0
 800dcf4:	d1f1      	bne.n	800dcda <xQueueGenericSend+0x10e>
		pxQueue->cRxLock = queueUNLOCKED;
 800dcf6:	23ff      	movs	r3, #255	; 0xff
 800dcf8:	f884 3044 	strb.w	r3, [r4, #68]	; 0x44
	taskEXIT_CRITICAL();
 800dcfc:	f7ff fc94 	bl	800d628 <vPortExitCritical>
				( void ) xTaskResumeAll();
 800dd00:	f001 f9ee 	bl	800f0e0 <xTaskResumeAll>
 800dd04:	2501      	movs	r5, #1
 800dd06:	e785      	b.n	800dc14 <xQueueGenericSend+0x48>
	configASSERT( !( ( pvItemToQueue == NULL ) && ( pxQueue->uxItemSize != ( UBaseType_t ) 0U ) ) );
 800dd08:	6c03      	ldr	r3, [r0, #64]	; 0x40
 800dd0a:	2b00      	cmp	r3, #0
 800dd0c:	f43f af6b 	beq.w	800dbe6 <xQueueGenericSend+0x1a>
 800dd10:	f04f 0350 	mov.w	r3, #80	; 0x50
 800dd14:	f383 8811 	msr	BASEPRI, r3
 800dd18:	f3bf 8f6f 	isb	sy
 800dd1c:	f3bf 8f4f 	dsb	sy
 800dd20:	e7fe      	b.n	800dd20 <xQueueGenericSend+0x154>
 800dd22:	f04f 0350 	mov.w	r3, #80	; 0x50
 800dd26:	f383 8811 	msr	BASEPRI, r3
 800dd2a:	f3bf 8f6f 	isb	sy
 800dd2e:	f3bf 8f4f 	dsb	sy
	configASSERT( pxQueue );
 800dd32:	e7fe      	b.n	800dd32 <xQueueGenericSend+0x166>
		configASSERT( !( ( xTaskGetSchedulerState() == taskSCHEDULER_SUSPENDED ) && ( xTicksToWait != 0 ) ) );
 800dd34:	9b01      	ldr	r3, [sp, #4]
 800dd36:	2b00      	cmp	r3, #0
 800dd38:	f43f af6a 	beq.w	800dc10 <xQueueGenericSend+0x44>
 800dd3c:	f04f 0350 	mov.w	r3, #80	; 0x50
 800dd40:	f383 8811 	msr	BASEPRI, r3
 800dd44:	f3bf 8f6f 	isb	sy
 800dd48:	f3bf 8f4f 	dsb	sy
 800dd4c:	e7fe      	b.n	800dd4c <xQueueGenericSend+0x180>
				vTaskPlaceOnEventList( &( pxQueue->xTasksWaitingToSend ), xTicksToWait );
 800dd4e:	f104 0910 	add.w	r9, r4, #16
	taskEXIT_CRITICAL();
 800dd52:	f7ff fc69 	bl	800d628 <vPortExitCritical>
				vTaskPlaceOnEventList( &( pxQueue->xTasksWaitingToSend ), xTicksToWait );
 800dd56:	9901      	ldr	r1, [sp, #4]
 800dd58:	4648      	mov	r0, r9
 800dd5a:	f001 fa33 	bl	800f1c4 <vTaskPlaceOnEventList>
	taskENTER_CRITICAL();
 800dd5e:	f7ff fc41 	bl	800d5e4 <vPortEnterCritical>
		int8_t cTxLock = pxQueue->cTxLock;
 800dd62:	f894 3045 	ldrb.w	r3, [r4, #69]	; 0x45
 800dd66:	b25d      	sxtb	r5, r3
		while( cTxLock > queueLOCKED_UNMODIFIED )
 800dd68:	2d00      	cmp	r5, #0
 800dd6a:	dc04      	bgt.n	800dd76 <xQueueGenericSend+0x1aa>
 800dd6c:	e011      	b.n	800dd92 <xQueueGenericSend+0x1c6>
			--cTxLock;
 800dd6e:	1e6b      	subs	r3, r5, #1
 800dd70:	b2da      	uxtb	r2, r3
 800dd72:	b25d      	sxtb	r5, r3
		while( cTxLock > queueLOCKED_UNMODIFIED )
 800dd74:	b16a      	cbz	r2, 800dd92 <xQueueGenericSend+0x1c6>
				if( listLIST_IS_EMPTY( &( pxQueue->xTasksWaitingToReceive ) ) == pdFALSE )
 800dd76:	6a63      	ldr	r3, [r4, #36]	; 0x24
					if( xTaskRemoveFromEventList( &( pxQueue->xTasksWaitingToReceive ) ) != pdFALSE )
 800dd78:	4630      	mov	r0, r6
				if( listLIST_IS_EMPTY( &( pxQueue->xTasksWaitingToReceive ) ) == pdFALSE )
 800dd7a:	b153      	cbz	r3, 800dd92 <xQueueGenericSend+0x1c6>
					if( xTaskRemoveFromEventList( &( pxQueue->xTasksWaitingToReceive ) ) != pdFALSE )
 800dd7c:	f001 fab0 	bl	800f2e0 <xTaskRemoveFromEventList>
 800dd80:	2800      	cmp	r0, #0
 800dd82:	d0f4      	beq.n	800dd6e <xQueueGenericSend+0x1a2>
						vTaskMissedYield();
 800dd84:	f001 fb48 	bl	800f418 <vTaskMissedYield>
			--cTxLock;
 800dd88:	1e6b      	subs	r3, r5, #1
 800dd8a:	b2da      	uxtb	r2, r3
 800dd8c:	b25d      	sxtb	r5, r3
		while( cTxLock > queueLOCKED_UNMODIFIED )
 800dd8e:	2a00      	cmp	r2, #0
 800dd90:	d1f1      	bne.n	800dd76 <xQueueGenericSend+0x1aa>
		pxQueue->cTxLock = queueUNLOCKED;
 800dd92:	23ff      	movs	r3, #255	; 0xff
 800dd94:	f884 3045 	strb.w	r3, [r4, #69]	; 0x45
	taskEXIT_CRITICAL();
 800dd98:	f7ff fc46 	bl	800d628 <vPortExitCritical>
	taskENTER_CRITICAL();
 800dd9c:	f7ff fc22 	bl	800d5e4 <vPortEnterCritical>
		int8_t cRxLock = pxQueue->cRxLock;
 800dda0:	f894 3044 	ldrb.w	r3, [r4, #68]	; 0x44
 800dda4:	b25d      	sxtb	r5, r3
		while( cRxLock > queueLOCKED_UNMODIFIED )
 800dda6:	2d00      	cmp	r5, #0
 800dda8:	dc04      	bgt.n	800ddb4 <xQueueGenericSend+0x1e8>
 800ddaa:	e011      	b.n	800ddd0 <xQueueGenericSend+0x204>
				--cRxLock;
 800ddac:	1e6b      	subs	r3, r5, #1
 800ddae:	b2da      	uxtb	r2, r3
 800ddb0:	b25d      	sxtb	r5, r3
		while( cRxLock > queueLOCKED_UNMODIFIED )
 800ddb2:	b16a      	cbz	r2, 800ddd0 <xQueueGenericSend+0x204>
			if( listLIST_IS_EMPTY( &( pxQueue->xTasksWaitingToSend ) ) == pdFALSE )
 800ddb4:	6923      	ldr	r3, [r4, #16]
				if( xTaskRemoveFromEventList( &( pxQueue->xTasksWaitingToSend ) ) != pdFALSE )
 800ddb6:	4648      	mov	r0, r9
			if( listLIST_IS_EMPTY( &( pxQueue->xTasksWaitingToSend ) ) == pdFALSE )
 800ddb8:	b153      	cbz	r3, 800ddd0 <xQueueGenericSend+0x204>
				if( xTaskRemoveFromEventList( &( pxQueue->xTasksWaitingToSend ) ) != pdFALSE )
 800ddba:	f001 fa91 	bl	800f2e0 <xTaskRemoveFromEventList>
 800ddbe:	2800      	cmp	r0, #0
 800ddc0:	d0f4      	beq.n	800ddac <xQueueGenericSend+0x1e0>
					vTaskMissedYield();
 800ddc2:	f001 fb29 	bl	800f418 <vTaskMissedYield>
				--cRxLock;
 800ddc6:	1e6b      	subs	r3, r5, #1
 800ddc8:	b2da      	uxtb	r2, r3
 800ddca:	b25d      	sxtb	r5, r3
		while( cRxLock > queueLOCKED_UNMODIFIED )
 800ddcc:	2a00      	cmp	r2, #0
 800ddce:	d1f1      	bne.n	800ddb4 <xQueueGenericSend+0x1e8>
		pxQueue->cRxLock = queueUNLOCKED;
 800ddd0:	23ff      	movs	r3, #255	; 0xff
 800ddd2:	f884 3044 	strb.w	r3, [r4, #68]	; 0x44
	taskEXIT_CRITICAL();
 800ddd6:	f7ff fc27 	bl	800d628 <vPortExitCritical>
				if( xTaskResumeAll() == pdFALSE )
 800ddda:	f001 f981 	bl	800f0e0 <xTaskResumeAll>
 800ddde:	2800      	cmp	r0, #0
 800dde0:	d190      	bne.n	800dd04 <xQueueGenericSend+0x138>
					portYIELD_WITHIN_API();
 800dde2:	f04f 23e0 	mov.w	r3, #3758153728	; 0xe000e000
 800dde6:	f04f 5280 	mov.w	r2, #268435456	; 0x10000000
 800ddea:	f8c3 2d04 	str.w	r2, [r3, #3332]	; 0xd04
 800ddee:	f3bf 8f4f 	dsb	sy
 800ddf2:	f3bf 8f6f 	isb	sy
 800ddf6:	e785      	b.n	800dd04 <xQueueGenericSend+0x138>
					vTaskInternalSetTimeOutState( &xTimeOut );
 800ddf8:	a802      	add	r0, sp, #8
 800ddfa:	f001 fab9 	bl	800f370 <vTaskInternalSetTimeOutState>
					xEntryTimeSet = pdTRUE;
 800ddfe:	e71a      	b.n	800dc36 <xQueueGenericSend+0x6a>
					xYieldRequired = prvCopyDataToQueue( pxQueue, pvItemToQueue, xCopyPosition );
 800de00:	463a      	mov	r2, r7
 800de02:	4641      	mov	r1, r8
 800de04:	4620      	mov	r0, r4
 800de06:	f7ff fd4f 	bl	800d8a8 <prvCopyDataToQueue>
					if( listLIST_IS_EMPTY( &( pxQueue->xTasksWaitingToReceive ) ) == pdFALSE )
 800de0a:	6a63      	ldr	r3, [r4, #36]	; 0x24
 800de0c:	2b00      	cmp	r3, #0
 800de0e:	d153      	bne.n	800deb8 <xQueueGenericSend+0x2ec>
					else if( xYieldRequired != pdFALSE )
 800de10:	b148      	cbz	r0, 800de26 <xQueueGenericSend+0x25a>
						queueYIELD_IF_USING_PREEMPTION();
 800de12:	f04f 23e0 	mov.w	r3, #3758153728	; 0xe000e000
 800de16:	f04f 5280 	mov.w	r2, #268435456	; 0x10000000
 800de1a:	f8c3 2d04 	str.w	r2, [r3, #3332]	; 0xd04
 800de1e:	f3bf 8f4f 	dsb	sy
 800de22:	f3bf 8f6f 	isb	sy
				taskEXIT_CRITICAL();
 800de26:	f7ff fbff 	bl	800d628 <vPortExitCritical>
				return pdPASS;
 800de2a:	2001      	movs	r0, #1
}
 800de2c:	b005      	add	sp, #20
 800de2e:	e8bd 83f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, pc}
 800de32:	9000      	str	r0, [sp, #0]
					taskEXIT_CRITICAL();
 800de34:	f7ff fbf8 	bl	800d628 <vPortExitCritical>
					return errQUEUE_FULL;
 800de38:	9800      	ldr	r0, [sp, #0]
 800de3a:	e7f7      	b.n	800de2c <xQueueGenericSend+0x260>
	taskENTER_CRITICAL();
 800de3c:	f7ff fbd2 	bl	800d5e4 <vPortEnterCritical>
		int8_t cTxLock = pxQueue->cTxLock;
 800de40:	f894 3045 	ldrb.w	r3, [r4, #69]	; 0x45
 800de44:	b25d      	sxtb	r5, r3
		while( cTxLock > queueLOCKED_UNMODIFIED )
 800de46:	2d00      	cmp	r5, #0
 800de48:	dd10      	ble.n	800de6c <xQueueGenericSend+0x2a0>
					if( xTaskRemoveFromEventList( &( pxQueue->xTasksWaitingToReceive ) ) != pdFALSE )
 800de4a:	f104 0624 	add.w	r6, r4, #36	; 0x24
 800de4e:	e003      	b.n	800de58 <xQueueGenericSend+0x28c>
			--cTxLock;
 800de50:	1e6b      	subs	r3, r5, #1
 800de52:	b2da      	uxtb	r2, r3
 800de54:	b25d      	sxtb	r5, r3
		while( cTxLock > queueLOCKED_UNMODIFIED )
 800de56:	b14a      	cbz	r2, 800de6c <xQueueGenericSend+0x2a0>
				if( listLIST_IS_EMPTY( &( pxQueue->xTasksWaitingToReceive ) ) == pdFALSE )
 800de58:	6a63      	ldr	r3, [r4, #36]	; 0x24
					if( xTaskRemoveFromEventList( &( pxQueue->xTasksWaitingToReceive ) ) != pdFALSE )
 800de5a:	4630      	mov	r0, r6
				if( listLIST_IS_EMPTY( &( pxQueue->xTasksWaitingToReceive ) ) == pdFALSE )
 800de5c:	b133      	cbz	r3, 800de6c <xQueueGenericSend+0x2a0>
					if( xTaskRemoveFromEventList( &( pxQueue->xTasksWaitingToReceive ) ) != pdFALSE )
 800de5e:	f001 fa3f 	bl	800f2e0 <xTaskRemoveFromEventList>
 800de62:	2800      	cmp	r0, #0
 800de64:	d0f4      	beq.n	800de50 <xQueueGenericSend+0x284>
						vTaskMissedYield();
 800de66:	f001 fad7 	bl	800f418 <vTaskMissedYield>
 800de6a:	e7f1      	b.n	800de50 <xQueueGenericSend+0x284>
		pxQueue->cTxLock = queueUNLOCKED;
 800de6c:	23ff      	movs	r3, #255	; 0xff
 800de6e:	f884 3045 	strb.w	r3, [r4, #69]	; 0x45
	taskEXIT_CRITICAL();
 800de72:	f7ff fbd9 	bl	800d628 <vPortExitCritical>
	taskENTER_CRITICAL();
 800de76:	f7ff fbb5 	bl	800d5e4 <vPortEnterCritical>
		int8_t cRxLock = pxQueue->cRxLock;
 800de7a:	f894 3044 	ldrb.w	r3, [r4, #68]	; 0x44
 800de7e:	b25d      	sxtb	r5, r3
		while( cRxLock > queueLOCKED_UNMODIFIED )
 800de80:	2d00      	cmp	r5, #0
 800de82:	dd10      	ble.n	800dea6 <xQueueGenericSend+0x2da>
				if( xTaskRemoveFromEventList( &( pxQueue->xTasksWaitingToSend ) ) != pdFALSE )
 800de84:	f104 0610 	add.w	r6, r4, #16
 800de88:	e003      	b.n	800de92 <xQueueGenericSend+0x2c6>
				--cRxLock;
 800de8a:	1e6b      	subs	r3, r5, #1
 800de8c:	b2da      	uxtb	r2, r3
 800de8e:	b25d      	sxtb	r5, r3
		while( cRxLock > queueLOCKED_UNMODIFIED )
 800de90:	b14a      	cbz	r2, 800dea6 <xQueueGenericSend+0x2da>
			if( listLIST_IS_EMPTY( &( pxQueue->xTasksWaitingToSend ) ) == pdFALSE )
 800de92:	6923      	ldr	r3, [r4, #16]
				if( xTaskRemoveFromEventList( &( pxQueue->xTasksWaitingToSend ) ) != pdFALSE )
 800de94:	4630      	mov	r0, r6
			if( listLIST_IS_EMPTY( &( pxQueue->xTasksWaitingToSend ) ) == pdFALSE )
 800de96:	b133      	cbz	r3, 800dea6 <xQueueGenericSend+0x2da>
				if( xTaskRemoveFromEventList( &( pxQueue->xTasksWaitingToSend ) ) != pdFALSE )
 800de98:	f001 fa22 	bl	800f2e0 <xTaskRemoveFromEventList>
 800de9c:	2800      	cmp	r0, #0
 800de9e:	d0f4      	beq.n	800de8a <xQueueGenericSend+0x2be>
					vTaskMissedYield();
 800dea0:	f001 faba 	bl	800f418 <vTaskMissedYield>
 800dea4:	e7f1      	b.n	800de8a <xQueueGenericSend+0x2be>
		pxQueue->cRxLock = queueUNLOCKED;
 800dea6:	23ff      	movs	r3, #255	; 0xff
 800dea8:	f884 3044 	strb.w	r3, [r4, #68]	; 0x44
	taskEXIT_CRITICAL();
 800deac:	f7ff fbbc 	bl	800d628 <vPortExitCritical>
			( void ) xTaskResumeAll();
 800deb0:	f001 f916 	bl	800f0e0 <xTaskResumeAll>
			return errQUEUE_FULL;
 800deb4:	2000      	movs	r0, #0
 800deb6:	e7b9      	b.n	800de2c <xQueueGenericSend+0x260>
						if( xTaskRemoveFromEventList( &( pxQueue->xTasksWaitingToReceive ) ) != pdFALSE )
 800deb8:	f104 0024 	add.w	r0, r4, #36	; 0x24
 800debc:	f001 fa10 	bl	800f2e0 <xTaskRemoveFromEventList>
 800dec0:	2800      	cmp	r0, #0
 800dec2:	d0b0      	beq.n	800de26 <xQueueGenericSend+0x25a>
 800dec4:	e7a5      	b.n	800de12 <xQueueGenericSend+0x246>
 800dec6:	bf00      	nop

0800dec8 <xQueueGenericSendFromISR>:
	configASSERT( pxQueue );
 800dec8:	2800      	cmp	r0, #0
 800deca:	d04b      	beq.n	800df64 <xQueueGenericSendFromISR+0x9c>
{
 800decc:	e92d 41f0 	stmdb	sp!, {r4, r5, r6, r7, r8, lr}
 800ded0:	460e      	mov	r6, r1
 800ded2:	4617      	mov	r7, r2
 800ded4:	461d      	mov	r5, r3
 800ded6:	4604      	mov	r4, r0
	configASSERT( !( ( pvItemToQueue == NULL ) && ( pxQueue->uxItemSize != ( UBaseType_t ) 0U ) ) );
 800ded8:	b321      	cbz	r1, 800df24 <xQueueGenericSendFromISR+0x5c>
	configASSERT( !( ( xCopyPosition == queueOVERWRITE ) && ( pxQueue->uxLength != 1 ) ) );
 800deda:	2d02      	cmp	r5, #2
 800dedc:	d10b      	bne.n	800def6 <xQueueGenericSendFromISR+0x2e>
 800dede:	6be3      	ldr	r3, [r4, #60]	; 0x3c
 800dee0:	2b01      	cmp	r3, #1
 800dee2:	d008      	beq.n	800def6 <xQueueGenericSendFromISR+0x2e>
 800dee4:	f04f 0350 	mov.w	r3, #80	; 0x50
 800dee8:	f383 8811 	msr	BASEPRI, r3
 800deec:	f3bf 8f6f 	isb	sy
 800def0:	f3bf 8f4f 	dsb	sy
 800def4:	e7fe      	b.n	800def4 <xQueueGenericSendFromISR+0x2c>
	portASSERT_IF_INTERRUPT_PRIORITY_INVALID();
 800def6:	f7ff fca9 	bl	800d84c <vPortValidateInterruptPriority>
	__asm volatile
 800defa:	f3ef 8811 	mrs	r8, BASEPRI
 800defe:	f04f 0350 	mov.w	r3, #80	; 0x50
 800df02:	f383 8811 	msr	BASEPRI, r3
 800df06:	f3bf 8f6f 	isb	sy
 800df0a:	f3bf 8f4f 	dsb	sy
		if( ( pxQueue->uxMessagesWaiting < pxQueue->uxLength ) || ( xCopyPosition == queueOVERWRITE ) )
 800df0e:	6ba2      	ldr	r2, [r4, #56]	; 0x38
 800df10:	6be3      	ldr	r3, [r4, #60]	; 0x3c
 800df12:	429a      	cmp	r2, r3
 800df14:	d312      	bcc.n	800df3c <xQueueGenericSendFromISR+0x74>
 800df16:	2d02      	cmp	r5, #2
 800df18:	d010      	beq.n	800df3c <xQueueGenericSendFromISR+0x74>
			xReturn = errQUEUE_FULL;
 800df1a:	2000      	movs	r0, #0
	__asm volatile
 800df1c:	f388 8811 	msr	BASEPRI, r8
}
 800df20:	e8bd 81f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, pc}
	configASSERT( !( ( pvItemToQueue == NULL ) && ( pxQueue->uxItemSize != ( UBaseType_t ) 0U ) ) );
 800df24:	6c03      	ldr	r3, [r0, #64]	; 0x40
 800df26:	2b00      	cmp	r3, #0
 800df28:	d0d7      	beq.n	800deda <xQueueGenericSendFromISR+0x12>
	__asm volatile
 800df2a:	f04f 0350 	mov.w	r3, #80	; 0x50
 800df2e:	f383 8811 	msr	BASEPRI, r3
 800df32:	f3bf 8f6f 	isb	sy
 800df36:	f3bf 8f4f 	dsb	sy
 800df3a:	e7fe      	b.n	800df3a <xQueueGenericSendFromISR+0x72>
			( void ) prvCopyDataToQueue( pxQueue, pvItemToQueue, xCopyPosition );
 800df3c:	462a      	mov	r2, r5
			const int8_t cTxLock = pxQueue->cTxLock;
 800df3e:	f894 5045 	ldrb.w	r5, [r4, #69]	; 0x45
			const UBaseType_t uxPreviousMessagesWaiting = pxQueue->uxMessagesWaiting;
 800df42:	6ba3      	ldr	r3, [r4, #56]	; 0x38
			( void ) prvCopyDataToQueue( pxQueue, pvItemToQueue, xCopyPosition );
 800df44:	4631      	mov	r1, r6
			const int8_t cTxLock = pxQueue->cTxLock;
 800df46:	b26d      	sxtb	r5, r5
			( void ) prvCopyDataToQueue( pxQueue, pvItemToQueue, xCopyPosition );
 800df48:	4620      	mov	r0, r4
 800df4a:	f7ff fcad 	bl	800d8a8 <prvCopyDataToQueue>
			if( cTxLock == queueUNLOCKED )
 800df4e:	1c6b      	adds	r3, r5, #1
 800df50:	d011      	beq.n	800df76 <xQueueGenericSendFromISR+0xae>
				pxQueue->cTxLock = ( int8_t ) ( cTxLock + 1 );
 800df52:	1c6b      	adds	r3, r5, #1
 800df54:	b25b      	sxtb	r3, r3
 800df56:	f884 3045 	strb.w	r3, [r4, #69]	; 0x45
			xReturn = pdPASS;
 800df5a:	2001      	movs	r0, #1
	__asm volatile
 800df5c:	f388 8811 	msr	BASEPRI, r8
}
 800df60:	e8bd 81f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, pc}
	__asm volatile
 800df64:	f04f 0350 	mov.w	r3, #80	; 0x50
 800df68:	f383 8811 	msr	BASEPRI, r3
 800df6c:	f3bf 8f6f 	isb	sy
 800df70:	f3bf 8f4f 	dsb	sy
	configASSERT( pxQueue );
 800df74:	e7fe      	b.n	800df74 <xQueueGenericSendFromISR+0xac>
					if( listLIST_IS_EMPTY( &( pxQueue->xTasksWaitingToReceive ) ) == pdFALSE )
 800df76:	6a63      	ldr	r3, [r4, #36]	; 0x24
 800df78:	2b00      	cmp	r3, #0
 800df7a:	d0ee      	beq.n	800df5a <xQueueGenericSendFromISR+0x92>
						if( xTaskRemoveFromEventList( &( pxQueue->xTasksWaitingToReceive ) ) != pdFALSE )
 800df7c:	f104 0024 	add.w	r0, r4, #36	; 0x24
 800df80:	f001 f9ae 	bl	800f2e0 <xTaskRemoveFromEventList>
 800df84:	2800      	cmp	r0, #0
 800df86:	d0e8      	beq.n	800df5a <xQueueGenericSendFromISR+0x92>
							if( pxHigherPriorityTaskWoken != NULL )
 800df88:	2f00      	cmp	r7, #0
 800df8a:	d0e6      	beq.n	800df5a <xQueueGenericSendFromISR+0x92>
								*pxHigherPriorityTaskWoken = pdTRUE;
 800df8c:	2001      	movs	r0, #1
 800df8e:	6038      	str	r0, [r7, #0]
 800df90:	e7c4      	b.n	800df1c <xQueueGenericSendFromISR+0x54>
 800df92:	bf00      	nop

0800df94 <xQueueGiveFromISR>:
	configASSERT( pxQueue );
 800df94:	b370      	cbz	r0, 800dff4 <xQueueGiveFromISR+0x60>
	configASSERT( pxQueue->uxItemSize == 0 );
 800df96:	6c03      	ldr	r3, [r0, #64]	; 0x40
{
 800df98:	b570      	push	{r4, r5, r6, lr}
 800df9a:	4606      	mov	r6, r0
	configASSERT( pxQueue->uxItemSize == 0 );
 800df9c:	b143      	cbz	r3, 800dfb0 <xQueueGiveFromISR+0x1c>
 800df9e:	f04f 0350 	mov.w	r3, #80	; 0x50
 800dfa2:	f383 8811 	msr	BASEPRI, r3
 800dfa6:	f3bf 8f6f 	isb	sy
 800dfaa:	f3bf 8f4f 	dsb	sy
 800dfae:	e7fe      	b.n	800dfae <xQueueGiveFromISR+0x1a>
	configASSERT( !( ( pxQueue->uxQueueType == queueQUEUE_IS_MUTEX ) && ( pxQueue->u.xSemaphore.xMutexHolder != NULL ) ) );
 800dfb0:	6803      	ldr	r3, [r0, #0]
 800dfb2:	460c      	mov	r4, r1
 800dfb4:	b33b      	cbz	r3, 800e006 <xQueueGiveFromISR+0x72>
	portASSERT_IF_INTERRUPT_PRIORITY_INVALID();
 800dfb6:	f7ff fc49 	bl	800d84c <vPortValidateInterruptPriority>
	__asm volatile
 800dfba:	f3ef 8511 	mrs	r5, BASEPRI
 800dfbe:	f04f 0350 	mov.w	r3, #80	; 0x50
 800dfc2:	f383 8811 	msr	BASEPRI, r3
 800dfc6:	f3bf 8f6f 	isb	sy
 800dfca:	f3bf 8f4f 	dsb	sy
		const UBaseType_t uxMessagesWaiting = pxQueue->uxMessagesWaiting;
 800dfce:	6bb3      	ldr	r3, [r6, #56]	; 0x38
		if( uxMessagesWaiting < pxQueue->uxLength )
 800dfd0:	6bf2      	ldr	r2, [r6, #60]	; 0x3c
 800dfd2:	429a      	cmp	r2, r3
 800dfd4:	d923      	bls.n	800e01e <xQueueGiveFromISR+0x8a>
			const int8_t cTxLock = pxQueue->cTxLock;
 800dfd6:	f896 2045 	ldrb.w	r2, [r6, #69]	; 0x45
			pxQueue->uxMessagesWaiting = uxMessagesWaiting + ( UBaseType_t ) 1;
 800dfda:	3301      	adds	r3, #1
			if( cTxLock == queueUNLOCKED )
 800dfdc:	2aff      	cmp	r2, #255	; 0xff
			pxQueue->uxMessagesWaiting = uxMessagesWaiting + ( UBaseType_t ) 1;
 800dfde:	63b3      	str	r3, [r6, #56]	; 0x38
			const int8_t cTxLock = pxQueue->cTxLock;
 800dfe0:	b253      	sxtb	r3, r2
			if( cTxLock == queueUNLOCKED )
 800dfe2:	d020      	beq.n	800e026 <xQueueGiveFromISR+0x92>
				pxQueue->cTxLock = ( int8_t ) ( cTxLock + 1 );
 800dfe4:	3301      	adds	r3, #1
 800dfe6:	b25b      	sxtb	r3, r3
 800dfe8:	f886 3045 	strb.w	r3, [r6, #69]	; 0x45
			xReturn = pdPASS;
 800dfec:	2001      	movs	r0, #1
	__asm volatile
 800dfee:	f385 8811 	msr	BASEPRI, r5
}
 800dff2:	bd70      	pop	{r4, r5, r6, pc}
	__asm volatile
 800dff4:	f04f 0350 	mov.w	r3, #80	; 0x50
 800dff8:	f383 8811 	msr	BASEPRI, r3
 800dffc:	f3bf 8f6f 	isb	sy
 800e000:	f3bf 8f4f 	dsb	sy
	configASSERT( pxQueue );
 800e004:	e7fe      	b.n	800e004 <xQueueGiveFromISR+0x70>
	configASSERT( !( ( pxQueue->uxQueueType == queueQUEUE_IS_MUTEX ) && ( pxQueue->u.xSemaphore.xMutexHolder != NULL ) ) );
 800e006:	6883      	ldr	r3, [r0, #8]
 800e008:	2b00      	cmp	r3, #0
 800e00a:	d0d4      	beq.n	800dfb6 <xQueueGiveFromISR+0x22>
 800e00c:	f04f 0350 	mov.w	r3, #80	; 0x50
 800e010:	f383 8811 	msr	BASEPRI, r3
 800e014:	f3bf 8f6f 	isb	sy
 800e018:	f3bf 8f4f 	dsb	sy
 800e01c:	e7fe      	b.n	800e01c <xQueueGiveFromISR+0x88>
			xReturn = errQUEUE_FULL;
 800e01e:	2000      	movs	r0, #0
	__asm volatile
 800e020:	f385 8811 	msr	BASEPRI, r5
}
 800e024:	bd70      	pop	{r4, r5, r6, pc}
					if( listLIST_IS_EMPTY( &( pxQueue->xTasksWaitingToReceive ) ) == pdFALSE )
 800e026:	6a73      	ldr	r3, [r6, #36]	; 0x24
 800e028:	2b00      	cmp	r3, #0
 800e02a:	d0df      	beq.n	800dfec <xQueueGiveFromISR+0x58>
						if( xTaskRemoveFromEventList( &( pxQueue->xTasksWaitingToReceive ) ) != pdFALSE )
 800e02c:	f106 0024 	add.w	r0, r6, #36	; 0x24
 800e030:	f001 f956 	bl	800f2e0 <xTaskRemoveFromEventList>
 800e034:	2800      	cmp	r0, #0
 800e036:	d0d9      	beq.n	800dfec <xQueueGiveFromISR+0x58>
							if( pxHigherPriorityTaskWoken != NULL )
 800e038:	2c00      	cmp	r4, #0
 800e03a:	d0d7      	beq.n	800dfec <xQueueGiveFromISR+0x58>
								*pxHigherPriorityTaskWoken = pdTRUE;
 800e03c:	2001      	movs	r0, #1
 800e03e:	6020      	str	r0, [r4, #0]
 800e040:	e7ee      	b.n	800e020 <xQueueGiveFromISR+0x8c>
 800e042:	bf00      	nop

0800e044 <xQueueReceive>:
{
 800e044:	e92d 43f0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, lr}
 800e048:	b085      	sub	sp, #20
 800e04a:	9201      	str	r2, [sp, #4]
	configASSERT( ( pxQueue ) );
 800e04c:	2800      	cmp	r0, #0
 800e04e:	f000 815c 	beq.w	800e30a <xQueueReceive+0x2c6>
	configASSERT( !( ( ( pvBuffer ) == NULL ) && ( ( pxQueue )->uxItemSize != ( UBaseType_t ) 0U ) ) );
 800e052:	460f      	mov	r7, r1
 800e054:	4604      	mov	r4, r0
 800e056:	2900      	cmp	r1, #0
 800e058:	d079      	beq.n	800e14e <xQueueReceive+0x10a>
		configASSERT( !( ( xTaskGetSchedulerState() == taskSCHEDULER_SUSPENDED ) && ( xTicksToWait != 0 ) ) );
 800e05a:	f001 f9e3 	bl	800f424 <xTaskGetSchedulerState>
 800e05e:	2800      	cmp	r0, #0
 800e060:	f000 8081 	beq.w	800e166 <xQueueReceive+0x122>
		taskENTER_CRITICAL();
 800e064:	f7ff fabe 	bl	800d5e4 <vPortEnterCritical>
			const UBaseType_t uxMessagesWaiting = pxQueue->uxMessagesWaiting;
 800e068:	6ba5      	ldr	r5, [r4, #56]	; 0x38
			if( uxMessagesWaiting > ( UBaseType_t ) 0 )
 800e06a:	2d00      	cmp	r5, #0
 800e06c:	f040 8138 	bne.w	800e2e0 <xQueueReceive+0x29c>
				if( xTicksToWait == ( TickType_t ) 0 )
 800e070:	9b01      	ldr	r3, [sp, #4]
 800e072:	2b00      	cmp	r3, #0
 800e074:	f000 80d5 	beq.w	800e222 <xQueueReceive+0x1de>
					vTaskInternalSetTimeOutState( &xTimeOut );
 800e078:	a802      	add	r0, sp, #8
 800e07a:	f001 f979 	bl	800f370 <vTaskInternalSetTimeOutState>
		prvLockQueue( pxQueue );
 800e07e:	46a8      	mov	r8, r5
					if( xTaskRemoveFromEventList( &( pxQueue->xTasksWaitingToReceive ) ) != pdFALSE )
 800e080:	f104 0624 	add.w	r6, r4, #36	; 0x24
		taskEXIT_CRITICAL();
 800e084:	f7ff fad0 	bl	800d628 <vPortExitCritical>
		vTaskSuspendAll();
 800e088:	f001 f822 	bl	800f0d0 <vTaskSuspendAll>
		prvLockQueue( pxQueue );
 800e08c:	f7ff faaa 	bl	800d5e4 <vPortEnterCritical>
 800e090:	f894 3044 	ldrb.w	r3, [r4, #68]	; 0x44
 800e094:	2bff      	cmp	r3, #255	; 0xff
 800e096:	bf08      	it	eq
 800e098:	f884 8044 	strbeq.w	r8, [r4, #68]	; 0x44
 800e09c:	f894 3045 	ldrb.w	r3, [r4, #69]	; 0x45
 800e0a0:	2bff      	cmp	r3, #255	; 0xff
 800e0a2:	bf08      	it	eq
 800e0a4:	f884 8045 	strbeq.w	r8, [r4, #69]	; 0x45
 800e0a8:	f7ff fabe 	bl	800d628 <vPortExitCritical>
		if( xTaskCheckForTimeOut( &xTimeOut, &xTicksToWait ) == pdFALSE )
 800e0ac:	a901      	add	r1, sp, #4
 800e0ae:	a802      	add	r0, sp, #8
 800e0b0:	f001 f96a 	bl	800f388 <xTaskCheckForTimeOut>
 800e0b4:	2800      	cmp	r0, #0
 800e0b6:	d163      	bne.n	800e180 <xQueueReceive+0x13c>
	taskENTER_CRITICAL();
 800e0b8:	f7ff fa94 	bl	800d5e4 <vPortEnterCritical>
		if( pxQueue->uxMessagesWaiting == ( UBaseType_t )  0 )
 800e0bc:	6ba3      	ldr	r3, [r4, #56]	; 0x38
 800e0be:	2b00      	cmp	r3, #0
 800e0c0:	f000 80b5 	beq.w	800e22e <xQueueReceive+0x1ea>
	taskEXIT_CRITICAL();
 800e0c4:	f7ff fab0 	bl	800d628 <vPortExitCritical>
	taskENTER_CRITICAL();
 800e0c8:	f7ff fa8c 	bl	800d5e4 <vPortEnterCritical>
		int8_t cTxLock = pxQueue->cTxLock;
 800e0cc:	f894 3045 	ldrb.w	r3, [r4, #69]	; 0x45
 800e0d0:	b25d      	sxtb	r5, r3
		while( cTxLock > queueLOCKED_UNMODIFIED )
 800e0d2:	2d00      	cmp	r5, #0
 800e0d4:	dc04      	bgt.n	800e0e0 <xQueueReceive+0x9c>
 800e0d6:	e011      	b.n	800e0fc <xQueueReceive+0xb8>
			--cTxLock;
 800e0d8:	1e6b      	subs	r3, r5, #1
 800e0da:	b2da      	uxtb	r2, r3
 800e0dc:	b25d      	sxtb	r5, r3
		while( cTxLock > queueLOCKED_UNMODIFIED )
 800e0de:	b16a      	cbz	r2, 800e0fc <xQueueReceive+0xb8>
				if( listLIST_IS_EMPTY( &( pxQueue->xTasksWaitingToReceive ) ) == pdFALSE )
 800e0e0:	6a63      	ldr	r3, [r4, #36]	; 0x24
					if( xTaskRemoveFromEventList( &( pxQueue->xTasksWaitingToReceive ) ) != pdFALSE )
 800e0e2:	4630      	mov	r0, r6
				if( listLIST_IS_EMPTY( &( pxQueue->xTasksWaitingToReceive ) ) == pdFALSE )
 800e0e4:	b153      	cbz	r3, 800e0fc <xQueueReceive+0xb8>
					if( xTaskRemoveFromEventList( &( pxQueue->xTasksWaitingToReceive ) ) != pdFALSE )
 800e0e6:	f001 f8fb 	bl	800f2e0 <xTaskRemoveFromEventList>
 800e0ea:	2800      	cmp	r0, #0
 800e0ec:	d0f4      	beq.n	800e0d8 <xQueueReceive+0x94>
						vTaskMissedYield();
 800e0ee:	f001 f993 	bl	800f418 <vTaskMissedYield>
			--cTxLock;
 800e0f2:	1e6b      	subs	r3, r5, #1
 800e0f4:	b2da      	uxtb	r2, r3
 800e0f6:	b25d      	sxtb	r5, r3
		while( cTxLock > queueLOCKED_UNMODIFIED )
 800e0f8:	2a00      	cmp	r2, #0
 800e0fa:	d1f1      	bne.n	800e0e0 <xQueueReceive+0x9c>
		pxQueue->cTxLock = queueUNLOCKED;
 800e0fc:	23ff      	movs	r3, #255	; 0xff
 800e0fe:	f884 3045 	strb.w	r3, [r4, #69]	; 0x45
	taskEXIT_CRITICAL();
 800e102:	f7ff fa91 	bl	800d628 <vPortExitCritical>
	taskENTER_CRITICAL();
 800e106:	f7ff fa6d 	bl	800d5e4 <vPortEnterCritical>
		int8_t cRxLock = pxQueue->cRxLock;
 800e10a:	f894 3044 	ldrb.w	r3, [r4, #68]	; 0x44
 800e10e:	b25d      	sxtb	r5, r3
		while( cRxLock > queueLOCKED_UNMODIFIED )
 800e110:	2d00      	cmp	r5, #0
 800e112:	dd14      	ble.n	800e13e <xQueueReceive+0xfa>
				if( xTaskRemoveFromEventList( &( pxQueue->xTasksWaitingToSend ) ) != pdFALSE )
 800e114:	f104 0910 	add.w	r9, r4, #16
 800e118:	e003      	b.n	800e122 <xQueueReceive+0xde>
				--cRxLock;
 800e11a:	1e6b      	subs	r3, r5, #1
 800e11c:	b2da      	uxtb	r2, r3
 800e11e:	b25d      	sxtb	r5, r3
		while( cRxLock > queueLOCKED_UNMODIFIED )
 800e120:	b16a      	cbz	r2, 800e13e <xQueueReceive+0xfa>
			if( listLIST_IS_EMPTY( &( pxQueue->xTasksWaitingToSend ) ) == pdFALSE )
 800e122:	6923      	ldr	r3, [r4, #16]
				if( xTaskRemoveFromEventList( &( pxQueue->xTasksWaitingToSend ) ) != pdFALSE )
 800e124:	4648      	mov	r0, r9
			if( listLIST_IS_EMPTY( &( pxQueue->xTasksWaitingToSend ) ) == pdFALSE )
 800e126:	b153      	cbz	r3, 800e13e <xQueueReceive+0xfa>
				if( xTaskRemoveFromEventList( &( pxQueue->xTasksWaitingToSend ) ) != pdFALSE )
 800e128:	f001 f8da 	bl	800f2e0 <xTaskRemoveFromEventList>
 800e12c:	2800      	cmp	r0, #0
 800e12e:	d0f4      	beq.n	800e11a <xQueueReceive+0xd6>
					vTaskMissedYield();
 800e130:	f001 f972 	bl	800f418 <vTaskMissedYield>
				--cRxLock;
 800e134:	1e6b      	subs	r3, r5, #1
 800e136:	b2da      	uxtb	r2, r3
 800e138:	b25d      	sxtb	r5, r3
		while( cRxLock > queueLOCKED_UNMODIFIED )
 800e13a:	2a00      	cmp	r2, #0
 800e13c:	d1f1      	bne.n	800e122 <xQueueReceive+0xde>
		pxQueue->cRxLock = queueUNLOCKED;
 800e13e:	23ff      	movs	r3, #255	; 0xff
 800e140:	f884 3044 	strb.w	r3, [r4, #68]	; 0x44
	taskEXIT_CRITICAL();
 800e144:	f7ff fa70 	bl	800d628 <vPortExitCritical>
				( void ) xTaskResumeAll();
 800e148:	f000 ffca 	bl	800f0e0 <xTaskResumeAll>
		taskENTER_CRITICAL();
 800e14c:	e060      	b.n	800e210 <xQueueReceive+0x1cc>
	configASSERT( !( ( ( pvBuffer ) == NULL ) && ( ( pxQueue )->uxItemSize != ( UBaseType_t ) 0U ) ) );
 800e14e:	6c03      	ldr	r3, [r0, #64]	; 0x40
 800e150:	2b00      	cmp	r3, #0
 800e152:	d082      	beq.n	800e05a <xQueueReceive+0x16>
	__asm volatile
 800e154:	f04f 0350 	mov.w	r3, #80	; 0x50
 800e158:	f383 8811 	msr	BASEPRI, r3
 800e15c:	f3bf 8f6f 	isb	sy
 800e160:	f3bf 8f4f 	dsb	sy
 800e164:	e7fe      	b.n	800e164 <xQueueReceive+0x120>
		configASSERT( !( ( xTaskGetSchedulerState() == taskSCHEDULER_SUSPENDED ) && ( xTicksToWait != 0 ) ) );
 800e166:	9b01      	ldr	r3, [sp, #4]
 800e168:	2b00      	cmp	r3, #0
 800e16a:	f43f af7b 	beq.w	800e064 <xQueueReceive+0x20>
 800e16e:	f04f 0350 	mov.w	r3, #80	; 0x50
 800e172:	f383 8811 	msr	BASEPRI, r3
 800e176:	f3bf 8f6f 	isb	sy
 800e17a:	f3bf 8f4f 	dsb	sy
 800e17e:	e7fe      	b.n	800e17e <xQueueReceive+0x13a>
	taskENTER_CRITICAL();
 800e180:	f7ff fa30 	bl	800d5e4 <vPortEnterCritical>
		int8_t cTxLock = pxQueue->cTxLock;
 800e184:	f894 3045 	ldrb.w	r3, [r4, #69]	; 0x45
 800e188:	b25d      	sxtb	r5, r3
		while( cTxLock > queueLOCKED_UNMODIFIED )
 800e18a:	2d00      	cmp	r5, #0
 800e18c:	dc04      	bgt.n	800e198 <xQueueReceive+0x154>
 800e18e:	e011      	b.n	800e1b4 <xQueueReceive+0x170>
			--cTxLock;
 800e190:	1e6b      	subs	r3, r5, #1
 800e192:	b2da      	uxtb	r2, r3
 800e194:	b25d      	sxtb	r5, r3
		while( cTxLock > queueLOCKED_UNMODIFIED )
 800e196:	b16a      	cbz	r2, 800e1b4 <xQueueReceive+0x170>
				if( listLIST_IS_EMPTY( &( pxQueue->xTasksWaitingToReceive ) ) == pdFALSE )
 800e198:	6a63      	ldr	r3, [r4, #36]	; 0x24
					if( xTaskRemoveFromEventList( &( pxQueue->xTasksWaitingToReceive ) ) != pdFALSE )
 800e19a:	4630      	mov	r0, r6
				if( listLIST_IS_EMPTY( &( pxQueue->xTasksWaitingToReceive ) ) == pdFALSE )
 800e19c:	b153      	cbz	r3, 800e1b4 <xQueueReceive+0x170>
					if( xTaskRemoveFromEventList( &( pxQueue->xTasksWaitingToReceive ) ) != pdFALSE )
 800e19e:	f001 f89f 	bl	800f2e0 <xTaskRemoveFromEventList>
 800e1a2:	2800      	cmp	r0, #0
 800e1a4:	d0f4      	beq.n	800e190 <xQueueReceive+0x14c>
						vTaskMissedYield();
 800e1a6:	f001 f937 	bl	800f418 <vTaskMissedYield>
			--cTxLock;
 800e1aa:	1e6b      	subs	r3, r5, #1
 800e1ac:	b2da      	uxtb	r2, r3
 800e1ae:	b25d      	sxtb	r5, r3
		while( cTxLock > queueLOCKED_UNMODIFIED )
 800e1b0:	2a00      	cmp	r2, #0
 800e1b2:	d1f1      	bne.n	800e198 <xQueueReceive+0x154>
		pxQueue->cTxLock = queueUNLOCKED;
 800e1b4:	23ff      	movs	r3, #255	; 0xff
 800e1b6:	f884 3045 	strb.w	r3, [r4, #69]	; 0x45
	taskEXIT_CRITICAL();
 800e1ba:	f7ff fa35 	bl	800d628 <vPortExitCritical>
	taskENTER_CRITICAL();
 800e1be:	f7ff fa11 	bl	800d5e4 <vPortEnterCritical>
		int8_t cRxLock = pxQueue->cRxLock;
 800e1c2:	f894 3044 	ldrb.w	r3, [r4, #68]	; 0x44
 800e1c6:	b25d      	sxtb	r5, r3
		while( cRxLock > queueLOCKED_UNMODIFIED )
 800e1c8:	2d00      	cmp	r5, #0
 800e1ca:	dd14      	ble.n	800e1f6 <xQueueReceive+0x1b2>
				if( xTaskRemoveFromEventList( &( pxQueue->xTasksWaitingToSend ) ) != pdFALSE )
 800e1cc:	f104 0910 	add.w	r9, r4, #16
 800e1d0:	e003      	b.n	800e1da <xQueueReceive+0x196>
				--cRxLock;
 800e1d2:	1e6b      	subs	r3, r5, #1
 800e1d4:	b2da      	uxtb	r2, r3
 800e1d6:	b25d      	sxtb	r5, r3
		while( cRxLock > queueLOCKED_UNMODIFIED )
 800e1d8:	b16a      	cbz	r2, 800e1f6 <xQueueReceive+0x1b2>
			if( listLIST_IS_EMPTY( &( pxQueue->xTasksWaitingToSend ) ) == pdFALSE )
 800e1da:	6923      	ldr	r3, [r4, #16]
				if( xTaskRemoveFromEventList( &( pxQueue->xTasksWaitingToSend ) ) != pdFALSE )
 800e1dc:	4648      	mov	r0, r9
			if( listLIST_IS_EMPTY( &( pxQueue->xTasksWaitingToSend ) ) == pdFALSE )
 800e1de:	b153      	cbz	r3, 800e1f6 <xQueueReceive+0x1b2>
				if( xTaskRemoveFromEventList( &( pxQueue->xTasksWaitingToSend ) ) != pdFALSE )
 800e1e0:	f001 f87e 	bl	800f2e0 <xTaskRemoveFromEventList>
 800e1e4:	2800      	cmp	r0, #0
 800e1e6:	d0f4      	beq.n	800e1d2 <xQueueReceive+0x18e>
					vTaskMissedYield();
 800e1e8:	f001 f916 	bl	800f418 <vTaskMissedYield>
				--cRxLock;
 800e1ec:	1e6b      	subs	r3, r5, #1
 800e1ee:	b2da      	uxtb	r2, r3
 800e1f0:	b25d      	sxtb	r5, r3
		while( cRxLock > queueLOCKED_UNMODIFIED )
 800e1f2:	2a00      	cmp	r2, #0
 800e1f4:	d1f1      	bne.n	800e1da <xQueueReceive+0x196>
		pxQueue->cRxLock = queueUNLOCKED;
 800e1f6:	23ff      	movs	r3, #255	; 0xff
 800e1f8:	f884 3044 	strb.w	r3, [r4, #68]	; 0x44
	taskEXIT_CRITICAL();
 800e1fc:	f7ff fa14 	bl	800d628 <vPortExitCritical>
			( void ) xTaskResumeAll();
 800e200:	f000 ff6e 	bl	800f0e0 <xTaskResumeAll>
	taskENTER_CRITICAL();
 800e204:	f7ff f9ee 	bl	800d5e4 <vPortEnterCritical>
		if( pxQueue->uxMessagesWaiting == ( UBaseType_t )  0 )
 800e208:	6ba3      	ldr	r3, [r4, #56]	; 0x38
 800e20a:	b153      	cbz	r3, 800e222 <xQueueReceive+0x1de>
	taskEXIT_CRITICAL();
 800e20c:	f7ff fa0c 	bl	800d628 <vPortExitCritical>
		taskENTER_CRITICAL();
 800e210:	f7ff f9e8 	bl	800d5e4 <vPortEnterCritical>
			const UBaseType_t uxMessagesWaiting = pxQueue->uxMessagesWaiting;
 800e214:	6ba5      	ldr	r5, [r4, #56]	; 0x38
			if( uxMessagesWaiting > ( UBaseType_t ) 0 )
 800e216:	2d00      	cmp	r5, #0
 800e218:	d162      	bne.n	800e2e0 <xQueueReceive+0x29c>
				if( xTicksToWait == ( TickType_t ) 0 )
 800e21a:	9b01      	ldr	r3, [sp, #4]
 800e21c:	2b00      	cmp	r3, #0
 800e21e:	f47f af31 	bne.w	800e084 <xQueueReceive+0x40>
					taskEXIT_CRITICAL();
 800e222:	f7ff fa01 	bl	800d628 <vPortExitCritical>
					return errQUEUE_EMPTY;
 800e226:	2000      	movs	r0, #0
}
 800e228:	b005      	add	sp, #20
 800e22a:	e8bd 83f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, pc}
	taskEXIT_CRITICAL();
 800e22e:	f7ff f9fb 	bl	800d628 <vPortExitCritical>
				vTaskPlaceOnEventList( &( pxQueue->xTasksWaitingToReceive ), xTicksToWait );
 800e232:	9901      	ldr	r1, [sp, #4]
 800e234:	4630      	mov	r0, r6
 800e236:	f000 ffc5 	bl	800f1c4 <vTaskPlaceOnEventList>
	taskENTER_CRITICAL();
 800e23a:	f7ff f9d3 	bl	800d5e4 <vPortEnterCritical>
		int8_t cTxLock = pxQueue->cTxLock;
 800e23e:	f894 3045 	ldrb.w	r3, [r4, #69]	; 0x45
 800e242:	b25d      	sxtb	r5, r3
		while( cTxLock > queueLOCKED_UNMODIFIED )
 800e244:	2d00      	cmp	r5, #0
 800e246:	dc04      	bgt.n	800e252 <xQueueReceive+0x20e>
 800e248:	e011      	b.n	800e26e <xQueueReceive+0x22a>
			--cTxLock;
 800e24a:	1e6b      	subs	r3, r5, #1
 800e24c:	b2da      	uxtb	r2, r3
 800e24e:	b25d      	sxtb	r5, r3
		while( cTxLock > queueLOCKED_UNMODIFIED )
 800e250:	b16a      	cbz	r2, 800e26e <xQueueReceive+0x22a>
				if( listLIST_IS_EMPTY( &( pxQueue->xTasksWaitingToReceive ) ) == pdFALSE )
 800e252:	6a63      	ldr	r3, [r4, #36]	; 0x24
					if( xTaskRemoveFromEventList( &( pxQueue->xTasksWaitingToReceive ) ) != pdFALSE )
 800e254:	4630      	mov	r0, r6
				if( listLIST_IS_EMPTY( &( pxQueue->xTasksWaitingToReceive ) ) == pdFALSE )
 800e256:	b153      	cbz	r3, 800e26e <xQueueReceive+0x22a>
					if( xTaskRemoveFromEventList( &( pxQueue->xTasksWaitingToReceive ) ) != pdFALSE )
 800e258:	f001 f842 	bl	800f2e0 <xTaskRemoveFromEventList>
 800e25c:	2800      	cmp	r0, #0
 800e25e:	d0f4      	beq.n	800e24a <xQueueReceive+0x206>
						vTaskMissedYield();
 800e260:	f001 f8da 	bl	800f418 <vTaskMissedYield>
			--cTxLock;
 800e264:	1e6b      	subs	r3, r5, #1
 800e266:	b2da      	uxtb	r2, r3
 800e268:	b25d      	sxtb	r5, r3
		while( cTxLock > queueLOCKED_UNMODIFIED )
 800e26a:	2a00      	cmp	r2, #0
 800e26c:	d1f1      	bne.n	800e252 <xQueueReceive+0x20e>
		pxQueue->cTxLock = queueUNLOCKED;
 800e26e:	23ff      	movs	r3, #255	; 0xff
 800e270:	f884 3045 	strb.w	r3, [r4, #69]	; 0x45
	taskEXIT_CRITICAL();
 800e274:	f7ff f9d8 	bl	800d628 <vPortExitCritical>
	taskENTER_CRITICAL();
 800e278:	f7ff f9b4 	bl	800d5e4 <vPortEnterCritical>
		int8_t cRxLock = pxQueue->cRxLock;
 800e27c:	f894 3044 	ldrb.w	r3, [r4, #68]	; 0x44
 800e280:	b25d      	sxtb	r5, r3
		while( cRxLock > queueLOCKED_UNMODIFIED )
 800e282:	2d00      	cmp	r5, #0
 800e284:	dd14      	ble.n	800e2b0 <xQueueReceive+0x26c>
				if( xTaskRemoveFromEventList( &( pxQueue->xTasksWaitingToSend ) ) != pdFALSE )
 800e286:	f104 0910 	add.w	r9, r4, #16
 800e28a:	e003      	b.n	800e294 <xQueueReceive+0x250>
				--cRxLock;
 800e28c:	1e6b      	subs	r3, r5, #1
 800e28e:	b2da      	uxtb	r2, r3
 800e290:	b25d      	sxtb	r5, r3
		while( cRxLock > queueLOCKED_UNMODIFIED )
 800e292:	b16a      	cbz	r2, 800e2b0 <xQueueReceive+0x26c>
			if( listLIST_IS_EMPTY( &( pxQueue->xTasksWaitingToSend ) ) == pdFALSE )
 800e294:	6923      	ldr	r3, [r4, #16]
				if( xTaskRemoveFromEventList( &( pxQueue->xTasksWaitingToSend ) ) != pdFALSE )
 800e296:	4648      	mov	r0, r9
			if( listLIST_IS_EMPTY( &( pxQueue->xTasksWaitingToSend ) ) == pdFALSE )
 800e298:	b153      	cbz	r3, 800e2b0 <xQueueReceive+0x26c>
				if( xTaskRemoveFromEventList( &( pxQueue->xTasksWaitingToSend ) ) != pdFALSE )
 800e29a:	f001 f821 	bl	800f2e0 <xTaskRemoveFromEventList>
 800e29e:	2800      	cmp	r0, #0
 800e2a0:	d0f4      	beq.n	800e28c <xQueueReceive+0x248>
					vTaskMissedYield();
 800e2a2:	f001 f8b9 	bl	800f418 <vTaskMissedYield>
				--cRxLock;
 800e2a6:	1e6b      	subs	r3, r5, #1
 800e2a8:	b2da      	uxtb	r2, r3
 800e2aa:	b25d      	sxtb	r5, r3
		while( cRxLock > queueLOCKED_UNMODIFIED )
 800e2ac:	2a00      	cmp	r2, #0
 800e2ae:	d1f1      	bne.n	800e294 <xQueueReceive+0x250>
		pxQueue->cRxLock = queueUNLOCKED;
 800e2b0:	23ff      	movs	r3, #255	; 0xff
 800e2b2:	f884 3044 	strb.w	r3, [r4, #68]	; 0x44
	taskEXIT_CRITICAL();
 800e2b6:	f7ff f9b7 	bl	800d628 <vPortExitCritical>
				if( xTaskResumeAll() == pdFALSE )
 800e2ba:	f000 ff11 	bl	800f0e0 <xTaskResumeAll>
 800e2be:	2800      	cmp	r0, #0
 800e2c0:	d1a6      	bne.n	800e210 <xQueueReceive+0x1cc>
					portYIELD_WITHIN_API();
 800e2c2:	f04f 23e0 	mov.w	r3, #3758153728	; 0xe000e000
 800e2c6:	f04f 5280 	mov.w	r2, #268435456	; 0x10000000
 800e2ca:	f8c3 2d04 	str.w	r2, [r3, #3332]	; 0xd04
 800e2ce:	f3bf 8f4f 	dsb	sy
 800e2d2:	f3bf 8f6f 	isb	sy
		taskENTER_CRITICAL();
 800e2d6:	f7ff f985 	bl	800d5e4 <vPortEnterCritical>
			const UBaseType_t uxMessagesWaiting = pxQueue->uxMessagesWaiting;
 800e2da:	6ba5      	ldr	r5, [r4, #56]	; 0x38
			if( uxMessagesWaiting > ( UBaseType_t ) 0 )
 800e2dc:	2d00      	cmp	r5, #0
 800e2de:	d09c      	beq.n	800e21a <xQueueReceive+0x1d6>
	if( pxQueue->uxItemSize != ( UBaseType_t ) 0 )
 800e2e0:	6c22      	ldr	r2, [r4, #64]	; 0x40
 800e2e2:	b152      	cbz	r2, 800e2fa <xQueueReceive+0x2b6>
		pxQueue->u.xQueue.pcReadFrom += pxQueue->uxItemSize; /*lint !e9016 Pointer arithmetic on char types ok, especially in this use case where it is the clearest way of conveying intent. */
 800e2e4:	68e1      	ldr	r1, [r4, #12]
		if( pxQueue->u.xQueue.pcReadFrom >= pxQueue->u.xQueue.pcTail ) /*lint !e946 MISRA exception justified as use of the relational operator is the cleanest solutions. */
 800e2e6:	68a3      	ldr	r3, [r4, #8]
		pxQueue->u.xQueue.pcReadFrom += pxQueue->uxItemSize; /*lint !e9016 Pointer arithmetic on char types ok, especially in this use case where it is the clearest way of conveying intent. */
 800e2e8:	4411      	add	r1, r2
		if( pxQueue->u.xQueue.pcReadFrom >= pxQueue->u.xQueue.pcTail ) /*lint !e946 MISRA exception justified as use of the relational operator is the cleanest solutions. */
 800e2ea:	4299      	cmp	r1, r3
		pxQueue->u.xQueue.pcReadFrom += pxQueue->uxItemSize; /*lint !e9016 Pointer arithmetic on char types ok, especially in this use case where it is the clearest way of conveying intent. */
 800e2ec:	60e1      	str	r1, [r4, #12]
			pxQueue->u.xQueue.pcReadFrom = pxQueue->pcHead;
 800e2ee:	bf24      	itt	cs
 800e2f0:	6821      	ldrcs	r1, [r4, #0]
 800e2f2:	60e1      	strcs	r1, [r4, #12]
		( void ) memcpy( ( void * ) pvBuffer, ( void * ) pxQueue->u.xQueue.pcReadFrom, ( size_t ) pxQueue->uxItemSize ); /*lint !e961 !e418 !e9087 MISRA exception as the casts are only redundant for some ports.  Also previous logic ensures a null pointer can only be passed to memcpy() when the count is 0.  Cast to void required by function signature and safe as no alignment requirement and copy length specified in bytes. */
 800e2f4:	4638      	mov	r0, r7
 800e2f6:	f01c f9d0 	bl	802a69a <memcpy>
				pxQueue->uxMessagesWaiting = uxMessagesWaiting - ( UBaseType_t ) 1;
 800e2fa:	3d01      	subs	r5, #1
 800e2fc:	63a5      	str	r5, [r4, #56]	; 0x38
				if( listLIST_IS_EMPTY( &( pxQueue->xTasksWaitingToSend ) ) == pdFALSE )
 800e2fe:	6923      	ldr	r3, [r4, #16]
 800e300:	b963      	cbnz	r3, 800e31c <xQueueReceive+0x2d8>
				taskEXIT_CRITICAL();
 800e302:	f7ff f991 	bl	800d628 <vPortExitCritical>
				return pdPASS;
 800e306:	2001      	movs	r0, #1
 800e308:	e78e      	b.n	800e228 <xQueueReceive+0x1e4>
 800e30a:	f04f 0350 	mov.w	r3, #80	; 0x50
 800e30e:	f383 8811 	msr	BASEPRI, r3
 800e312:	f3bf 8f6f 	isb	sy
 800e316:	f3bf 8f4f 	dsb	sy
	configASSERT( ( pxQueue ) );
 800e31a:	e7fe      	b.n	800e31a <xQueueReceive+0x2d6>
					if( xTaskRemoveFromEventList( &( pxQueue->xTasksWaitingToSend ) ) != pdFALSE )
 800e31c:	f104 0010 	add.w	r0, r4, #16
 800e320:	f000 ffde 	bl	800f2e0 <xTaskRemoveFromEventList>
 800e324:	2800      	cmp	r0, #0
 800e326:	d0ec      	beq.n	800e302 <xQueueReceive+0x2be>
						queueYIELD_IF_USING_PREEMPTION();
 800e328:	f04f 23e0 	mov.w	r3, #3758153728	; 0xe000e000
 800e32c:	f04f 5280 	mov.w	r2, #268435456	; 0x10000000
 800e330:	f8c3 2d04 	str.w	r2, [r3, #3332]	; 0xd04
 800e334:	f3bf 8f4f 	dsb	sy
 800e338:	f3bf 8f6f 	isb	sy
 800e33c:	e7e1      	b.n	800e302 <xQueueReceive+0x2be>
 800e33e:	bf00      	nop

0800e340 <xQueueSemaphoreTake>:
{
 800e340:	e92d 41f0 	stmdb	sp!, {r4, r5, r6, r7, r8, lr}
 800e344:	b084      	sub	sp, #16
 800e346:	9101      	str	r1, [sp, #4]
	configASSERT( ( pxQueue ) );
 800e348:	2800      	cmp	r0, #0
 800e34a:	d05c      	beq.n	800e406 <xQueueSemaphoreTake+0xc6>
	configASSERT( pxQueue->uxItemSize == 0 );
 800e34c:	6c07      	ldr	r7, [r0, #64]	; 0x40
 800e34e:	4604      	mov	r4, r0
 800e350:	b147      	cbz	r7, 800e364 <xQueueSemaphoreTake+0x24>
 800e352:	f04f 0350 	mov.w	r3, #80	; 0x50
 800e356:	f383 8811 	msr	BASEPRI, r3
 800e35a:	f3bf 8f6f 	isb	sy
 800e35e:	f3bf 8f4f 	dsb	sy
 800e362:	e7fe      	b.n	800e362 <xQueueSemaphoreTake+0x22>
		configASSERT( !( ( xTaskGetSchedulerState() == taskSCHEDULER_SUSPENDED ) && ( xTicksToWait != 0 ) ) );
 800e364:	f001 f85e 	bl	800f424 <xTaskGetSchedulerState>
 800e368:	4605      	mov	r5, r0
 800e36a:	2800      	cmp	r0, #0
 800e36c:	d054      	beq.n	800e418 <xQueueSemaphoreTake+0xd8>
 800e36e:	463d      	mov	r5, r7
					if( xTaskRemoveFromEventList( &( pxQueue->xTasksWaitingToReceive ) ) != pdFALSE )
 800e370:	f104 0624 	add.w	r6, r4, #36	; 0x24
		taskENTER_CRITICAL();
 800e374:	f7ff f936 	bl	800d5e4 <vPortEnterCritical>
			const UBaseType_t uxSemaphoreCount = pxQueue->uxMessagesWaiting;
 800e378:	6ba3      	ldr	r3, [r4, #56]	; 0x38
			if( uxSemaphoreCount > ( UBaseType_t ) 0 )
 800e37a:	2b00      	cmp	r3, #0
 800e37c:	f040 8148 	bne.w	800e610 <xQueueSemaphoreTake+0x2d0>
				if( xTicksToWait == ( TickType_t ) 0 )
 800e380:	9b01      	ldr	r3, [sp, #4]
 800e382:	2b00      	cmp	r3, #0
 800e384:	f000 813a 	beq.w	800e5fc <xQueueSemaphoreTake+0x2bc>
				else if( xEntryTimeSet == pdFALSE )
 800e388:	2d00      	cmp	r5, #0
 800e38a:	f000 809d 	beq.w	800e4c8 <xQueueSemaphoreTake+0x188>
		taskEXIT_CRITICAL();
 800e38e:	f7ff f94b 	bl	800d628 <vPortExitCritical>
		vTaskSuspendAll();
 800e392:	f000 fe9d 	bl	800f0d0 <vTaskSuspendAll>
		prvLockQueue( pxQueue );
 800e396:	f7ff f925 	bl	800d5e4 <vPortEnterCritical>
 800e39a:	f894 3044 	ldrb.w	r3, [r4, #68]	; 0x44
 800e39e:	2bff      	cmp	r3, #255	; 0xff
 800e3a0:	bf04      	itt	eq
 800e3a2:	2300      	moveq	r3, #0
 800e3a4:	f884 3044 	strbeq.w	r3, [r4, #68]	; 0x44
 800e3a8:	f894 3045 	ldrb.w	r3, [r4, #69]	; 0x45
 800e3ac:	2bff      	cmp	r3, #255	; 0xff
 800e3ae:	bf04      	itt	eq
 800e3b0:	2300      	moveq	r3, #0
 800e3b2:	f884 3045 	strbeq.w	r3, [r4, #69]	; 0x45
 800e3b6:	f7ff f937 	bl	800d628 <vPortExitCritical>
		if( xTaskCheckForTimeOut( &xTimeOut, &xTicksToWait ) == pdFALSE )
 800e3ba:	a901      	add	r1, sp, #4
 800e3bc:	a802      	add	r0, sp, #8
 800e3be:	f000 ffe3 	bl	800f388 <xTaskCheckForTimeOut>
 800e3c2:	2800      	cmp	r0, #0
 800e3c4:	d135      	bne.n	800e432 <xQueueSemaphoreTake+0xf2>
	taskENTER_CRITICAL();
 800e3c6:	f7ff f90d 	bl	800d5e4 <vPortEnterCritical>
		if( pxQueue->uxMessagesWaiting == ( UBaseType_t )  0 )
 800e3ca:	6ba3      	ldr	r3, [r4, #56]	; 0x38
 800e3cc:	2b00      	cmp	r3, #0
 800e3ce:	f000 80a4 	beq.w	800e51a <xQueueSemaphoreTake+0x1da>
	taskEXIT_CRITICAL();
 800e3d2:	f7ff f929 	bl	800d628 <vPortExitCritical>
	taskENTER_CRITICAL();
 800e3d6:	f7ff f905 	bl	800d5e4 <vPortEnterCritical>
		int8_t cTxLock = pxQueue->cTxLock;
 800e3da:	f894 3045 	ldrb.w	r3, [r4, #69]	; 0x45
 800e3de:	b25d      	sxtb	r5, r3
		while( cTxLock > queueLOCKED_UNMODIFIED )
 800e3e0:	2d00      	cmp	r5, #0
 800e3e2:	dc05      	bgt.n	800e3f0 <xQueueSemaphoreTake+0xb0>
 800e3e4:	e074      	b.n	800e4d0 <xQueueSemaphoreTake+0x190>
			--cTxLock;
 800e3e6:	1e6b      	subs	r3, r5, #1
 800e3e8:	b2da      	uxtb	r2, r3
 800e3ea:	b25d      	sxtb	r5, r3
		while( cTxLock > queueLOCKED_UNMODIFIED )
 800e3ec:	2a00      	cmp	r2, #0
 800e3ee:	d06f      	beq.n	800e4d0 <xQueueSemaphoreTake+0x190>
				if( listLIST_IS_EMPTY( &( pxQueue->xTasksWaitingToReceive ) ) == pdFALSE )
 800e3f0:	6a63      	ldr	r3, [r4, #36]	; 0x24
					if( xTaskRemoveFromEventList( &( pxQueue->xTasksWaitingToReceive ) ) != pdFALSE )
 800e3f2:	4630      	mov	r0, r6
				if( listLIST_IS_EMPTY( &( pxQueue->xTasksWaitingToReceive ) ) == pdFALSE )
 800e3f4:	2b00      	cmp	r3, #0
 800e3f6:	d06b      	beq.n	800e4d0 <xQueueSemaphoreTake+0x190>
					if( xTaskRemoveFromEventList( &( pxQueue->xTasksWaitingToReceive ) ) != pdFALSE )
 800e3f8:	f000 ff72 	bl	800f2e0 <xTaskRemoveFromEventList>
 800e3fc:	2800      	cmp	r0, #0
 800e3fe:	d0f2      	beq.n	800e3e6 <xQueueSemaphoreTake+0xa6>
						vTaskMissedYield();
 800e400:	f001 f80a 	bl	800f418 <vTaskMissedYield>
 800e404:	e7ef      	b.n	800e3e6 <xQueueSemaphoreTake+0xa6>
 800e406:	f04f 0350 	mov.w	r3, #80	; 0x50
 800e40a:	f383 8811 	msr	BASEPRI, r3
 800e40e:	f3bf 8f6f 	isb	sy
 800e412:	f3bf 8f4f 	dsb	sy
	configASSERT( ( pxQueue ) );
 800e416:	e7fe      	b.n	800e416 <xQueueSemaphoreTake+0xd6>
		configASSERT( !( ( xTaskGetSchedulerState() == taskSCHEDULER_SUSPENDED ) && ( xTicksToWait != 0 ) ) );
 800e418:	9b01      	ldr	r3, [sp, #4]
 800e41a:	2b00      	cmp	r3, #0
 800e41c:	f000 80d4 	beq.w	800e5c8 <xQueueSemaphoreTake+0x288>
 800e420:	f04f 0350 	mov.w	r3, #80	; 0x50
 800e424:	f383 8811 	msr	BASEPRI, r3
 800e428:	f3bf 8f6f 	isb	sy
 800e42c:	f3bf 8f4f 	dsb	sy
 800e430:	e7fe      	b.n	800e430 <xQueueSemaphoreTake+0xf0>
	taskENTER_CRITICAL();
 800e432:	f7ff f8d7 	bl	800d5e4 <vPortEnterCritical>
		int8_t cTxLock = pxQueue->cTxLock;
 800e436:	f894 3045 	ldrb.w	r3, [r4, #69]	; 0x45
 800e43a:	b25d      	sxtb	r5, r3
		while( cTxLock > queueLOCKED_UNMODIFIED )
 800e43c:	2d00      	cmp	r5, #0
 800e43e:	dc04      	bgt.n	800e44a <xQueueSemaphoreTake+0x10a>
 800e440:	e011      	b.n	800e466 <xQueueSemaphoreTake+0x126>
			--cTxLock;
 800e442:	1e6b      	subs	r3, r5, #1
 800e444:	b2da      	uxtb	r2, r3
 800e446:	b25d      	sxtb	r5, r3
		while( cTxLock > queueLOCKED_UNMODIFIED )
 800e448:	b16a      	cbz	r2, 800e466 <xQueueSemaphoreTake+0x126>
				if( listLIST_IS_EMPTY( &( pxQueue->xTasksWaitingToReceive ) ) == pdFALSE )
 800e44a:	6a63      	ldr	r3, [r4, #36]	; 0x24
					if( xTaskRemoveFromEventList( &( pxQueue->xTasksWaitingToReceive ) ) != pdFALSE )
 800e44c:	4630      	mov	r0, r6
				if( listLIST_IS_EMPTY( &( pxQueue->xTasksWaitingToReceive ) ) == pdFALSE )
 800e44e:	b153      	cbz	r3, 800e466 <xQueueSemaphoreTake+0x126>
					if( xTaskRemoveFromEventList( &( pxQueue->xTasksWaitingToReceive ) ) != pdFALSE )
 800e450:	f000 ff46 	bl	800f2e0 <xTaskRemoveFromEventList>
 800e454:	2800      	cmp	r0, #0
 800e456:	d0f4      	beq.n	800e442 <xQueueSemaphoreTake+0x102>
						vTaskMissedYield();
 800e458:	f000 ffde 	bl	800f418 <vTaskMissedYield>
			--cTxLock;
 800e45c:	1e6b      	subs	r3, r5, #1
 800e45e:	b2da      	uxtb	r2, r3
 800e460:	b25d      	sxtb	r5, r3
		while( cTxLock > queueLOCKED_UNMODIFIED )
 800e462:	2a00      	cmp	r2, #0
 800e464:	d1f1      	bne.n	800e44a <xQueueSemaphoreTake+0x10a>
		pxQueue->cTxLock = queueUNLOCKED;
 800e466:	23ff      	movs	r3, #255	; 0xff
 800e468:	f884 3045 	strb.w	r3, [r4, #69]	; 0x45
	taskEXIT_CRITICAL();
 800e46c:	f7ff f8dc 	bl	800d628 <vPortExitCritical>
	taskENTER_CRITICAL();
 800e470:	f7ff f8b8 	bl	800d5e4 <vPortEnterCritical>
		int8_t cRxLock = pxQueue->cRxLock;
 800e474:	f894 3044 	ldrb.w	r3, [r4, #68]	; 0x44
 800e478:	b25d      	sxtb	r5, r3
		while( cRxLock > queueLOCKED_UNMODIFIED )
 800e47a:	2d00      	cmp	r5, #0
 800e47c:	dd14      	ble.n	800e4a8 <xQueueSemaphoreTake+0x168>
				if( xTaskRemoveFromEventList( &( pxQueue->xTasksWaitingToSend ) ) != pdFALSE )
 800e47e:	f104 0810 	add.w	r8, r4, #16
 800e482:	e003      	b.n	800e48c <xQueueSemaphoreTake+0x14c>
				--cRxLock;
 800e484:	1e6b      	subs	r3, r5, #1
 800e486:	b2da      	uxtb	r2, r3
 800e488:	b25d      	sxtb	r5, r3
		while( cRxLock > queueLOCKED_UNMODIFIED )
 800e48a:	b16a      	cbz	r2, 800e4a8 <xQueueSemaphoreTake+0x168>
			if( listLIST_IS_EMPTY( &( pxQueue->xTasksWaitingToSend ) ) == pdFALSE )
 800e48c:	6923      	ldr	r3, [r4, #16]
				if( xTaskRemoveFromEventList( &( pxQueue->xTasksWaitingToSend ) ) != pdFALSE )
 800e48e:	4640      	mov	r0, r8
			if( listLIST_IS_EMPTY( &( pxQueue->xTasksWaitingToSend ) ) == pdFALSE )
 800e490:	b153      	cbz	r3, 800e4a8 <xQueueSemaphoreTake+0x168>
				if( xTaskRemoveFromEventList( &( pxQueue->xTasksWaitingToSend ) ) != pdFALSE )
 800e492:	f000 ff25 	bl	800f2e0 <xTaskRemoveFromEventList>
 800e496:	2800      	cmp	r0, #0
 800e498:	d0f4      	beq.n	800e484 <xQueueSemaphoreTake+0x144>
					vTaskMissedYield();
 800e49a:	f000 ffbd 	bl	800f418 <vTaskMissedYield>
				--cRxLock;
 800e49e:	1e6b      	subs	r3, r5, #1
 800e4a0:	b2da      	uxtb	r2, r3
 800e4a2:	b25d      	sxtb	r5, r3
		while( cRxLock > queueLOCKED_UNMODIFIED )
 800e4a4:	2a00      	cmp	r2, #0
 800e4a6:	d1f1      	bne.n	800e48c <xQueueSemaphoreTake+0x14c>
		pxQueue->cRxLock = queueUNLOCKED;
 800e4a8:	23ff      	movs	r3, #255	; 0xff
 800e4aa:	f884 3044 	strb.w	r3, [r4, #68]	; 0x44
	taskEXIT_CRITICAL();
 800e4ae:	f7ff f8bb 	bl	800d628 <vPortExitCritical>
			( void ) xTaskResumeAll();
 800e4b2:	f000 fe15 	bl	800f0e0 <xTaskResumeAll>
	taskENTER_CRITICAL();
 800e4b6:	f7ff f895 	bl	800d5e4 <vPortEnterCritical>
		if( pxQueue->uxMessagesWaiting == ( UBaseType_t )  0 )
 800e4ba:	6ba3      	ldr	r3, [r4, #56]	; 0x38
 800e4bc:	2b00      	cmp	r3, #0
 800e4be:	d07c      	beq.n	800e5ba <xQueueSemaphoreTake+0x27a>
	taskEXIT_CRITICAL();
 800e4c0:	f7ff f8b2 	bl	800d628 <vPortExitCritical>
	return xReturn;
 800e4c4:	2501      	movs	r5, #1
 800e4c6:	e755      	b.n	800e374 <xQueueSemaphoreTake+0x34>
					vTaskInternalSetTimeOutState( &xTimeOut );
 800e4c8:	a802      	add	r0, sp, #8
 800e4ca:	f000 ff51 	bl	800f370 <vTaskInternalSetTimeOutState>
					xEntryTimeSet = pdTRUE;
 800e4ce:	e75e      	b.n	800e38e <xQueueSemaphoreTake+0x4e>
		pxQueue->cTxLock = queueUNLOCKED;
 800e4d0:	23ff      	movs	r3, #255	; 0xff
 800e4d2:	f884 3045 	strb.w	r3, [r4, #69]	; 0x45
	taskEXIT_CRITICAL();
 800e4d6:	f7ff f8a7 	bl	800d628 <vPortExitCritical>
	taskENTER_CRITICAL();
 800e4da:	f7ff f883 	bl	800d5e4 <vPortEnterCritical>
		int8_t cRxLock = pxQueue->cRxLock;
 800e4de:	f894 3044 	ldrb.w	r3, [r4, #68]	; 0x44
 800e4e2:	b25d      	sxtb	r5, r3
		while( cRxLock > queueLOCKED_UNMODIFIED )
 800e4e4:	2d00      	cmp	r5, #0
 800e4e6:	dd10      	ble.n	800e50a <xQueueSemaphoreTake+0x1ca>
				if( xTaskRemoveFromEventList( &( pxQueue->xTasksWaitingToSend ) ) != pdFALSE )
 800e4e8:	f104 0810 	add.w	r8, r4, #16
 800e4ec:	e003      	b.n	800e4f6 <xQueueSemaphoreTake+0x1b6>
				--cRxLock;
 800e4ee:	1e6b      	subs	r3, r5, #1
 800e4f0:	b2da      	uxtb	r2, r3
 800e4f2:	b25d      	sxtb	r5, r3
		while( cRxLock > queueLOCKED_UNMODIFIED )
 800e4f4:	b14a      	cbz	r2, 800e50a <xQueueSemaphoreTake+0x1ca>
			if( listLIST_IS_EMPTY( &( pxQueue->xTasksWaitingToSend ) ) == pdFALSE )
 800e4f6:	6923      	ldr	r3, [r4, #16]
				if( xTaskRemoveFromEventList( &( pxQueue->xTasksWaitingToSend ) ) != pdFALSE )
 800e4f8:	4640      	mov	r0, r8
			if( listLIST_IS_EMPTY( &( pxQueue->xTasksWaitingToSend ) ) == pdFALSE )
 800e4fa:	b133      	cbz	r3, 800e50a <xQueueSemaphoreTake+0x1ca>
				if( xTaskRemoveFromEventList( &( pxQueue->xTasksWaitingToSend ) ) != pdFALSE )
 800e4fc:	f000 fef0 	bl	800f2e0 <xTaskRemoveFromEventList>
 800e500:	2800      	cmp	r0, #0
 800e502:	d0f4      	beq.n	800e4ee <xQueueSemaphoreTake+0x1ae>
					vTaskMissedYield();
 800e504:	f000 ff88 	bl	800f418 <vTaskMissedYield>
 800e508:	e7f1      	b.n	800e4ee <xQueueSemaphoreTake+0x1ae>
		pxQueue->cRxLock = queueUNLOCKED;
 800e50a:	23ff      	movs	r3, #255	; 0xff
 800e50c:	f884 3044 	strb.w	r3, [r4, #68]	; 0x44
	taskEXIT_CRITICAL();
 800e510:	f7ff f88a 	bl	800d628 <vPortExitCritical>
				( void ) xTaskResumeAll();
 800e514:	f000 fde4 	bl	800f0e0 <xTaskResumeAll>
 800e518:	e7d4      	b.n	800e4c4 <xQueueSemaphoreTake+0x184>
	taskEXIT_CRITICAL();
 800e51a:	f7ff f885 	bl	800d628 <vPortExitCritical>
					if( pxQueue->uxQueueType == queueQUEUE_IS_MUTEX )
 800e51e:	6823      	ldr	r3, [r4, #0]
 800e520:	2b00      	cmp	r3, #0
 800e522:	d062      	beq.n	800e5ea <xQueueSemaphoreTake+0x2aa>
				vTaskPlaceOnEventList( &( pxQueue->xTasksWaitingToReceive ), xTicksToWait );
 800e524:	9901      	ldr	r1, [sp, #4]
 800e526:	4630      	mov	r0, r6
 800e528:	f000 fe4c 	bl	800f1c4 <vTaskPlaceOnEventList>
	taskENTER_CRITICAL();
 800e52c:	f7ff f85a 	bl	800d5e4 <vPortEnterCritical>
		int8_t cTxLock = pxQueue->cTxLock;
 800e530:	f894 3045 	ldrb.w	r3, [r4, #69]	; 0x45
 800e534:	b25d      	sxtb	r5, r3
		while( cTxLock > queueLOCKED_UNMODIFIED )
 800e536:	2d00      	cmp	r5, #0
 800e538:	dc04      	bgt.n	800e544 <xQueueSemaphoreTake+0x204>
 800e53a:	e00d      	b.n	800e558 <xQueueSemaphoreTake+0x218>
			--cTxLock;
 800e53c:	1e6b      	subs	r3, r5, #1
 800e53e:	b2da      	uxtb	r2, r3
 800e540:	b25d      	sxtb	r5, r3
		while( cTxLock > queueLOCKED_UNMODIFIED )
 800e542:	b14a      	cbz	r2, 800e558 <xQueueSemaphoreTake+0x218>
				if( listLIST_IS_EMPTY( &( pxQueue->xTasksWaitingToReceive ) ) == pdFALSE )
 800e544:	6a63      	ldr	r3, [r4, #36]	; 0x24
					if( xTaskRemoveFromEventList( &( pxQueue->xTasksWaitingToReceive ) ) != pdFALSE )
 800e546:	4630      	mov	r0, r6
				if( listLIST_IS_EMPTY( &( pxQueue->xTasksWaitingToReceive ) ) == pdFALSE )
 800e548:	b133      	cbz	r3, 800e558 <xQueueSemaphoreTake+0x218>
					if( xTaskRemoveFromEventList( &( pxQueue->xTasksWaitingToReceive ) ) != pdFALSE )
 800e54a:	f000 fec9 	bl	800f2e0 <xTaskRemoveFromEventList>
 800e54e:	2800      	cmp	r0, #0
 800e550:	d0f4      	beq.n	800e53c <xQueueSemaphoreTake+0x1fc>
						vTaskMissedYield();
 800e552:	f000 ff61 	bl	800f418 <vTaskMissedYield>
 800e556:	e7f1      	b.n	800e53c <xQueueSemaphoreTake+0x1fc>
		pxQueue->cTxLock = queueUNLOCKED;
 800e558:	23ff      	movs	r3, #255	; 0xff
 800e55a:	f884 3045 	strb.w	r3, [r4, #69]	; 0x45
	taskEXIT_CRITICAL();
 800e55e:	f7ff f863 	bl	800d628 <vPortExitCritical>
	taskENTER_CRITICAL();
 800e562:	f7ff f83f 	bl	800d5e4 <vPortEnterCritical>
		int8_t cRxLock = pxQueue->cRxLock;
 800e566:	f894 3044 	ldrb.w	r3, [r4, #68]	; 0x44
 800e56a:	b25d      	sxtb	r5, r3
		while( cRxLock > queueLOCKED_UNMODIFIED )
 800e56c:	2d00      	cmp	r5, #0
 800e56e:	dd10      	ble.n	800e592 <xQueueSemaphoreTake+0x252>
				if( xTaskRemoveFromEventList( &( pxQueue->xTasksWaitingToSend ) ) != pdFALSE )
 800e570:	f104 0810 	add.w	r8, r4, #16
 800e574:	e003      	b.n	800e57e <xQueueSemaphoreTake+0x23e>
				--cRxLock;
 800e576:	1e6b      	subs	r3, r5, #1
 800e578:	b2da      	uxtb	r2, r3
 800e57a:	b25d      	sxtb	r5, r3
		while( cRxLock > queueLOCKED_UNMODIFIED )
 800e57c:	b14a      	cbz	r2, 800e592 <xQueueSemaphoreTake+0x252>
			if( listLIST_IS_EMPTY( &( pxQueue->xTasksWaitingToSend ) ) == pdFALSE )
 800e57e:	6923      	ldr	r3, [r4, #16]
				if( xTaskRemoveFromEventList( &( pxQueue->xTasksWaitingToSend ) ) != pdFALSE )
 800e580:	4640      	mov	r0, r8
			if( listLIST_IS_EMPTY( &( pxQueue->xTasksWaitingToSend ) ) == pdFALSE )
 800e582:	b133      	cbz	r3, 800e592 <xQueueSemaphoreTake+0x252>
				if( xTaskRemoveFromEventList( &( pxQueue->xTasksWaitingToSend ) ) != pdFALSE )
 800e584:	f000 feac 	bl	800f2e0 <xTaskRemoveFromEventList>
 800e588:	2800      	cmp	r0, #0
 800e58a:	d0f4      	beq.n	800e576 <xQueueSemaphoreTake+0x236>
					vTaskMissedYield();
 800e58c:	f000 ff44 	bl	800f418 <vTaskMissedYield>
 800e590:	e7f1      	b.n	800e576 <xQueueSemaphoreTake+0x236>
		pxQueue->cRxLock = queueUNLOCKED;
 800e592:	23ff      	movs	r3, #255	; 0xff
 800e594:	f884 3044 	strb.w	r3, [r4, #68]	; 0x44
	taskEXIT_CRITICAL();
 800e598:	f7ff f846 	bl	800d628 <vPortExitCritical>
				if( xTaskResumeAll() == pdFALSE )
 800e59c:	f000 fda0 	bl	800f0e0 <xTaskResumeAll>
 800e5a0:	2800      	cmp	r0, #0
 800e5a2:	d18f      	bne.n	800e4c4 <xQueueSemaphoreTake+0x184>
					portYIELD_WITHIN_API();
 800e5a4:	f04f 23e0 	mov.w	r3, #3758153728	; 0xe000e000
 800e5a8:	f04f 5280 	mov.w	r2, #268435456	; 0x10000000
 800e5ac:	f8c3 2d04 	str.w	r2, [r3, #3332]	; 0xd04
 800e5b0:	f3bf 8f4f 	dsb	sy
 800e5b4:	f3bf 8f6f 	isb	sy
 800e5b8:	e784      	b.n	800e4c4 <xQueueSemaphoreTake+0x184>
	taskEXIT_CRITICAL();
 800e5ba:	f7ff f835 	bl	800d628 <vPortExitCritical>
					if( xInheritanceOccurred != pdFALSE )
 800e5be:	b92f      	cbnz	r7, 800e5cc <xQueueSemaphoreTake+0x28c>
}
 800e5c0:	4638      	mov	r0, r7
 800e5c2:	b004      	add	sp, #16
 800e5c4:	e8bd 81f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, pc}
 800e5c8:	4607      	mov	r7, r0
 800e5ca:	e6d1      	b.n	800e370 <xQueueSemaphoreTake+0x30>
						taskENTER_CRITICAL();
 800e5cc:	f7ff f80a 	bl	800d5e4 <vPortEnterCritical>
		if( listCURRENT_LIST_LENGTH( &( pxQueue->xTasksWaitingToReceive ) ) > 0U )
 800e5d0:	6a61      	ldr	r1, [r4, #36]	; 0x24
 800e5d2:	b119      	cbz	r1, 800e5dc <xQueueSemaphoreTake+0x29c>
			uxHighestPriorityOfWaitingTasks = ( UBaseType_t ) configMAX_PRIORITIES - ( UBaseType_t ) listGET_ITEM_VALUE_OF_HEAD_ENTRY( &( pxQueue->xTasksWaitingToReceive ) );
 800e5d4:	6b23      	ldr	r3, [r4, #48]	; 0x30
 800e5d6:	6819      	ldr	r1, [r3, #0]
 800e5d8:	f1c1 0138 	rsb	r1, r1, #56	; 0x38
							vTaskPriorityDisinheritAfterTimeout( pxQueue->u.xSemaphore.xMutexHolder, uxHighestWaitingPriority );
 800e5dc:	68a0      	ldr	r0, [r4, #8]
 800e5de:	f000 ffbd 	bl	800f55c <vTaskPriorityDisinheritAfterTimeout>
				return errQUEUE_EMPTY;
 800e5e2:	2700      	movs	r7, #0
						taskEXIT_CRITICAL();
 800e5e4:	f7ff f820 	bl	800d628 <vPortExitCritical>
 800e5e8:	e7ea      	b.n	800e5c0 <xQueueSemaphoreTake+0x280>
						taskENTER_CRITICAL();
 800e5ea:	f7fe fffb 	bl	800d5e4 <vPortEnterCritical>
							xInheritanceOccurred = xTaskPriorityInherit( pxQueue->u.xSemaphore.xMutexHolder );
 800e5ee:	68a0      	ldr	r0, [r4, #8]
 800e5f0:	f000 ff28 	bl	800f444 <xTaskPriorityInherit>
 800e5f4:	4607      	mov	r7, r0
						taskEXIT_CRITICAL();
 800e5f6:	f7ff f817 	bl	800d628 <vPortExitCritical>
 800e5fa:	e793      	b.n	800e524 <xQueueSemaphoreTake+0x1e4>
						configASSERT( xInheritanceOccurred == pdFALSE );
 800e5fc:	b197      	cbz	r7, 800e624 <xQueueSemaphoreTake+0x2e4>
 800e5fe:	f04f 0350 	mov.w	r3, #80	; 0x50
 800e602:	f383 8811 	msr	BASEPRI, r3
 800e606:	f3bf 8f6f 	isb	sy
 800e60a:	f3bf 8f4f 	dsb	sy
 800e60e:	e7fe      	b.n	800e60e <xQueueSemaphoreTake+0x2ce>
					if( pxQueue->uxQueueType == queueQUEUE_IS_MUTEX )
 800e610:	6822      	ldr	r2, [r4, #0]
				pxQueue->uxMessagesWaiting = uxSemaphoreCount - ( UBaseType_t ) 1;
 800e612:	3b01      	subs	r3, #1
 800e614:	63a3      	str	r3, [r4, #56]	; 0x38
					if( pxQueue->uxQueueType == queueQUEUE_IS_MUTEX )
 800e616:	b1ca      	cbz	r2, 800e64c <xQueueSemaphoreTake+0x30c>
				if( listLIST_IS_EMPTY( &( pxQueue->xTasksWaitingToSend ) ) == pdFALSE )
 800e618:	6923      	ldr	r3, [r4, #16]
 800e61a:	b933      	cbnz	r3, 800e62a <xQueueSemaphoreTake+0x2ea>
				taskEXIT_CRITICAL();
 800e61c:	f7ff f804 	bl	800d628 <vPortExitCritical>
				return pdPASS;
 800e620:	2701      	movs	r7, #1
 800e622:	e7cd      	b.n	800e5c0 <xQueueSemaphoreTake+0x280>
					taskEXIT_CRITICAL();
 800e624:	f7ff f800 	bl	800d628 <vPortExitCritical>
					return errQUEUE_EMPTY;
 800e628:	e7ca      	b.n	800e5c0 <xQueueSemaphoreTake+0x280>
					if( xTaskRemoveFromEventList( &( pxQueue->xTasksWaitingToSend ) ) != pdFALSE )
 800e62a:	f104 0010 	add.w	r0, r4, #16
 800e62e:	f000 fe57 	bl	800f2e0 <xTaskRemoveFromEventList>
 800e632:	2800      	cmp	r0, #0
 800e634:	d0f2      	beq.n	800e61c <xQueueSemaphoreTake+0x2dc>
						queueYIELD_IF_USING_PREEMPTION();
 800e636:	f04f 23e0 	mov.w	r3, #3758153728	; 0xe000e000
 800e63a:	f04f 5280 	mov.w	r2, #268435456	; 0x10000000
 800e63e:	f8c3 2d04 	str.w	r2, [r3, #3332]	; 0xd04
 800e642:	f3bf 8f4f 	dsb	sy
 800e646:	f3bf 8f6f 	isb	sy
 800e64a:	e7e7      	b.n	800e61c <xQueueSemaphoreTake+0x2dc>
						pxQueue->u.xSemaphore.xMutexHolder = pvTaskIncrementMutexHeldCount();
 800e64c:	f000 ffda 	bl	800f604 <pvTaskIncrementMutexHeldCount>
 800e650:	60a0      	str	r0, [r4, #8]
 800e652:	e7e1      	b.n	800e618 <xQueueSemaphoreTake+0x2d8>

0800e654 <xQueueReceiveFromISR>:
{
 800e654:	e92d 43f8 	stmdb	sp!, {r3, r4, r5, r6, r7, r8, r9, lr}
	configASSERT( pxQueue );
 800e658:	b310      	cbz	r0, 800e6a0 <xQueueReceiveFromISR+0x4c>
	configASSERT( !( ( pvBuffer == NULL ) && ( pxQueue->uxItemSize != ( UBaseType_t ) 0U ) ) );
 800e65a:	460e      	mov	r6, r1
 800e65c:	4617      	mov	r7, r2
 800e65e:	4604      	mov	r4, r0
 800e660:	b191      	cbz	r1, 800e688 <xQueueReceiveFromISR+0x34>
	portASSERT_IF_INTERRUPT_PRIORITY_INVALID();
 800e662:	f7ff f8f3 	bl	800d84c <vPortValidateInterruptPriority>
	__asm volatile
 800e666:	f3ef 8911 	mrs	r9, BASEPRI
 800e66a:	f04f 0350 	mov.w	r3, #80	; 0x50
 800e66e:	f383 8811 	msr	BASEPRI, r3
 800e672:	f3bf 8f6f 	isb	sy
 800e676:	f3bf 8f4f 	dsb	sy
		const UBaseType_t uxMessagesWaiting = pxQueue->uxMessagesWaiting;
 800e67a:	6ba5      	ldr	r5, [r4, #56]	; 0x38
		if( uxMessagesWaiting > ( UBaseType_t ) 0 )
 800e67c:	b9cd      	cbnz	r5, 800e6b2 <xQueueReceiveFromISR+0x5e>
			xReturn = pdFAIL;
 800e67e:	4628      	mov	r0, r5
	__asm volatile
 800e680:	f389 8811 	msr	BASEPRI, r9
}
 800e684:	e8bd 83f8 	ldmia.w	sp!, {r3, r4, r5, r6, r7, r8, r9, pc}
	configASSERT( !( ( pvBuffer == NULL ) && ( pxQueue->uxItemSize != ( UBaseType_t ) 0U ) ) );
 800e688:	6c03      	ldr	r3, [r0, #64]	; 0x40
 800e68a:	2b00      	cmp	r3, #0
 800e68c:	d0e9      	beq.n	800e662 <xQueueReceiveFromISR+0xe>
	__asm volatile
 800e68e:	f04f 0350 	mov.w	r3, #80	; 0x50
 800e692:	f383 8811 	msr	BASEPRI, r3
 800e696:	f3bf 8f6f 	isb	sy
 800e69a:	f3bf 8f4f 	dsb	sy
 800e69e:	e7fe      	b.n	800e69e <xQueueReceiveFromISR+0x4a>
 800e6a0:	f04f 0350 	mov.w	r3, #80	; 0x50
 800e6a4:	f383 8811 	msr	BASEPRI, r3
 800e6a8:	f3bf 8f6f 	isb	sy
 800e6ac:	f3bf 8f4f 	dsb	sy
	configASSERT( pxQueue );
 800e6b0:	e7fe      	b.n	800e6b0 <xQueueReceiveFromISR+0x5c>
			const int8_t cRxLock = pxQueue->cRxLock;
 800e6b2:	f894 8044 	ldrb.w	r8, [r4, #68]	; 0x44
	if( pxQueue->uxItemSize != ( UBaseType_t ) 0 )
 800e6b6:	6c22      	ldr	r2, [r4, #64]	; 0x40
			const int8_t cRxLock = pxQueue->cRxLock;
 800e6b8:	fa4f f888 	sxtb.w	r8, r8
	if( pxQueue->uxItemSize != ( UBaseType_t ) 0 )
 800e6bc:	b152      	cbz	r2, 800e6d4 <xQueueReceiveFromISR+0x80>
		pxQueue->u.xQueue.pcReadFrom += pxQueue->uxItemSize; /*lint !e9016 Pointer arithmetic on char types ok, especially in this use case where it is the clearest way of conveying intent. */
 800e6be:	68e1      	ldr	r1, [r4, #12]
		if( pxQueue->u.xQueue.pcReadFrom >= pxQueue->u.xQueue.pcTail ) /*lint !e946 MISRA exception justified as use of the relational operator is the cleanest solutions. */
 800e6c0:	68a3      	ldr	r3, [r4, #8]
		pxQueue->u.xQueue.pcReadFrom += pxQueue->uxItemSize; /*lint !e9016 Pointer arithmetic on char types ok, especially in this use case where it is the clearest way of conveying intent. */
 800e6c2:	4411      	add	r1, r2
		if( pxQueue->u.xQueue.pcReadFrom >= pxQueue->u.xQueue.pcTail ) /*lint !e946 MISRA exception justified as use of the relational operator is the cleanest solutions. */
 800e6c4:	4299      	cmp	r1, r3
		pxQueue->u.xQueue.pcReadFrom += pxQueue->uxItemSize; /*lint !e9016 Pointer arithmetic on char types ok, especially in this use case where it is the clearest way of conveying intent. */
 800e6c6:	60e1      	str	r1, [r4, #12]
			pxQueue->u.xQueue.pcReadFrom = pxQueue->pcHead;
 800e6c8:	bf24      	itt	cs
 800e6ca:	6821      	ldrcs	r1, [r4, #0]
 800e6cc:	60e1      	strcs	r1, [r4, #12]
		( void ) memcpy( ( void * ) pvBuffer, ( void * ) pxQueue->u.xQueue.pcReadFrom, ( size_t ) pxQueue->uxItemSize ); /*lint !e961 !e418 !e9087 MISRA exception as the casts are only redundant for some ports.  Also previous logic ensures a null pointer can only be passed to memcpy() when the count is 0.  Cast to void required by function signature and safe as no alignment requirement and copy length specified in bytes. */
 800e6ce:	4630      	mov	r0, r6
 800e6d0:	f01b ffe3 	bl	802a69a <memcpy>
			pxQueue->uxMessagesWaiting = uxMessagesWaiting - ( UBaseType_t ) 1;
 800e6d4:	3d01      	subs	r5, #1
			if( cRxLock == queueUNLOCKED )
 800e6d6:	f1b8 3fff 	cmp.w	r8, #4294967295
			pxQueue->uxMessagesWaiting = uxMessagesWaiting - ( UBaseType_t ) 1;
 800e6da:	63a5      	str	r5, [r4, #56]	; 0x38
			if( cRxLock == queueUNLOCKED )
 800e6dc:	d009      	beq.n	800e6f2 <xQueueReceiveFromISR+0x9e>
				pxQueue->cRxLock = ( int8_t ) ( cRxLock + 1 );
 800e6de:	f108 0301 	add.w	r3, r8, #1
 800e6e2:	b25b      	sxtb	r3, r3
 800e6e4:	f884 3044 	strb.w	r3, [r4, #68]	; 0x44
			xReturn = pdPASS;
 800e6e8:	2001      	movs	r0, #1
	__asm volatile
 800e6ea:	f389 8811 	msr	BASEPRI, r9
}
 800e6ee:	e8bd 83f8 	ldmia.w	sp!, {r3, r4, r5, r6, r7, r8, r9, pc}
				if( listLIST_IS_EMPTY( &( pxQueue->xTasksWaitingToSend ) ) == pdFALSE )
 800e6f2:	6923      	ldr	r3, [r4, #16]
 800e6f4:	2b00      	cmp	r3, #0
 800e6f6:	d0f7      	beq.n	800e6e8 <xQueueReceiveFromISR+0x94>
					if( xTaskRemoveFromEventList( &( pxQueue->xTasksWaitingToSend ) ) != pdFALSE )
 800e6f8:	f104 0010 	add.w	r0, r4, #16
 800e6fc:	f000 fdf0 	bl	800f2e0 <xTaskRemoveFromEventList>
 800e700:	2800      	cmp	r0, #0
 800e702:	d0f1      	beq.n	800e6e8 <xQueueReceiveFromISR+0x94>
						if( pxHigherPriorityTaskWoken != NULL )
 800e704:	2f00      	cmp	r7, #0
 800e706:	d0ef      	beq.n	800e6e8 <xQueueReceiveFromISR+0x94>
							*pxHigherPriorityTaskWoken = pdTRUE;
 800e708:	2001      	movs	r0, #1
 800e70a:	6038      	str	r0, [r7, #0]
 800e70c:	e7b8      	b.n	800e680 <xQueueReceiveFromISR+0x2c>
 800e70e:	bf00      	nop

0800e710 <uxQueueMessagesWaiting>:
	configASSERT( xQueue );
 800e710:	b158      	cbz	r0, 800e72a <uxQueueMessagesWaiting+0x1a>
{
 800e712:	b510      	push	{r4, lr}
 800e714:	4604      	mov	r4, r0
 800e716:	b082      	sub	sp, #8
	taskENTER_CRITICAL();
 800e718:	f7fe ff64 	bl	800d5e4 <vPortEnterCritical>
		uxReturn = ( ( Queue_t * ) xQueue )->uxMessagesWaiting;
 800e71c:	6ba0      	ldr	r0, [r4, #56]	; 0x38
 800e71e:	9001      	str	r0, [sp, #4]
	taskEXIT_CRITICAL();
 800e720:	f7fe ff82 	bl	800d628 <vPortExitCritical>
} /*lint !e818 Pointer cannot be declared const as xQueue is a typedef not pointer. */
 800e724:	9801      	ldr	r0, [sp, #4]
 800e726:	b002      	add	sp, #8
 800e728:	bd10      	pop	{r4, pc}
	__asm volatile
 800e72a:	f04f 0350 	mov.w	r3, #80	; 0x50
 800e72e:	f383 8811 	msr	BASEPRI, r3
 800e732:	f3bf 8f6f 	isb	sy
 800e736:	f3bf 8f4f 	dsb	sy
	configASSERT( xQueue );
 800e73a:	e7fe      	b.n	800e73a <uxQueueMessagesWaiting+0x2a>

0800e73c <uxQueueMessagesWaitingFromISR>:
	configASSERT( pxQueue );
 800e73c:	b108      	cbz	r0, 800e742 <uxQueueMessagesWaitingFromISR+0x6>
	uxReturn = pxQueue->uxMessagesWaiting;
 800e73e:	6b80      	ldr	r0, [r0, #56]	; 0x38
} /*lint !e818 Pointer cannot be declared const as xQueue is a typedef not pointer. */
 800e740:	4770      	bx	lr
 800e742:	f04f 0350 	mov.w	r3, #80	; 0x50
 800e746:	f383 8811 	msr	BASEPRI, r3
 800e74a:	f3bf 8f6f 	isb	sy
 800e74e:	f3bf 8f4f 	dsb	sy
	configASSERT( pxQueue );
 800e752:	e7fe      	b.n	800e752 <uxQueueMessagesWaitingFromISR+0x16>
 800e754:	0000      	movs	r0, r0
	...

0800e758 <vQueueDelete>:
	configASSERT( pxQueue );
 800e758:	b1f0      	cbz	r0, 800e798 <vQueueDelete+0x40>

		/* See if the handle of the queue being unregistered in actually in the
		registry. */
		for( ux = ( UBaseType_t ) 0U; ux < ( UBaseType_t ) configQUEUE_REGISTRY_SIZE; ux++ )
		{
			if( xQueueRegistry[ ux ].xHandle == xQueue )
 800e75a:	4b21      	ldr	r3, [pc, #132]	; (800e7e0 <vQueueDelete+0x88>)
 800e75c:	685a      	ldr	r2, [r3, #4]
 800e75e:	4290      	cmp	r0, r2
 800e760:	d025      	beq.n	800e7ae <vQueueDelete+0x56>
 800e762:	68da      	ldr	r2, [r3, #12]
 800e764:	4290      	cmp	r0, r2
 800e766:	d02c      	beq.n	800e7c2 <vQueueDelete+0x6a>
 800e768:	695a      	ldr	r2, [r3, #20]
 800e76a:	4290      	cmp	r0, r2
 800e76c:	d02b      	beq.n	800e7c6 <vQueueDelete+0x6e>
 800e76e:	69da      	ldr	r2, [r3, #28]
 800e770:	4290      	cmp	r0, r2
 800e772:	d02a      	beq.n	800e7ca <vQueueDelete+0x72>
 800e774:	6a5a      	ldr	r2, [r3, #36]	; 0x24
 800e776:	4290      	cmp	r0, r2
 800e778:	d029      	beq.n	800e7ce <vQueueDelete+0x76>
 800e77a:	6ada      	ldr	r2, [r3, #44]	; 0x2c
 800e77c:	4290      	cmp	r0, r2
 800e77e:	d01e      	beq.n	800e7be <vQueueDelete+0x66>
 800e780:	6b5a      	ldr	r2, [r3, #52]	; 0x34
 800e782:	4290      	cmp	r0, r2
 800e784:	d025      	beq.n	800e7d2 <vQueueDelete+0x7a>
 800e786:	6bda      	ldr	r2, [r3, #60]	; 0x3c
 800e788:	4290      	cmp	r0, r2
		for( ux = ( UBaseType_t ) 0U; ux < ( UBaseType_t ) configQUEUE_REGISTRY_SIZE; ux++ )
 800e78a:	bf08      	it	eq
 800e78c:	2207      	moveq	r2, #7
			if( xQueueRegistry[ ux ].xHandle == xQueue )
 800e78e:	d00f      	beq.n	800e7b0 <vQueueDelete+0x58>
		if( pxQueue->ucStaticallyAllocated == ( uint8_t ) pdFALSE )
 800e790:	f890 3046 	ldrb.w	r3, [r0, #70]	; 0x46
 800e794:	b14b      	cbz	r3, 800e7aa <vQueueDelete+0x52>
}
 800e796:	4770      	bx	lr
 800e798:	f04f 0350 	mov.w	r3, #80	; 0x50
 800e79c:	f383 8811 	msr	BASEPRI, r3
 800e7a0:	f3bf 8f6f 	isb	sy
 800e7a4:	f3bf 8f4f 	dsb	sy
	configASSERT( pxQueue );
 800e7a8:	e7fe      	b.n	800e7a8 <vQueueDelete+0x50>
			vPortFree( pxQueue );
 800e7aa:	f7fe be01 	b.w	800d3b0 <vPortFree>
		for( ux = ( UBaseType_t ) 0U; ux < ( UBaseType_t ) configQUEUE_REGISTRY_SIZE; ux++ )
 800e7ae:	2200      	movs	r2, #0
			{
				/* Set the name to NULL to show that this slot if free again. */
				xQueueRegistry[ ux ].pcQueueName = NULL;
 800e7b0:	ed9f 7b09 	vldr	d7, [pc, #36]	; 800e7d8 <vQueueDelete+0x80>
 800e7b4:	eb03 03c2 	add.w	r3, r3, r2, lsl #3
 800e7b8:	ed83 7b00 	vstr	d7, [r3]

				/* Set the handle to NULL to ensure the same queue handle cannot
				appear in the registry twice if it is added, removed, then
				added again. */
				xQueueRegistry[ ux ].xHandle = ( QueueHandle_t ) 0;
				break;
 800e7bc:	e7e8      	b.n	800e790 <vQueueDelete+0x38>
		for( ux = ( UBaseType_t ) 0U; ux < ( UBaseType_t ) configQUEUE_REGISTRY_SIZE; ux++ )
 800e7be:	2205      	movs	r2, #5
 800e7c0:	e7f6      	b.n	800e7b0 <vQueueDelete+0x58>
 800e7c2:	2201      	movs	r2, #1
 800e7c4:	e7f4      	b.n	800e7b0 <vQueueDelete+0x58>
 800e7c6:	2202      	movs	r2, #2
 800e7c8:	e7f2      	b.n	800e7b0 <vQueueDelete+0x58>
 800e7ca:	2203      	movs	r2, #3
 800e7cc:	e7f0      	b.n	800e7b0 <vQueueDelete+0x58>
 800e7ce:	2204      	movs	r2, #4
 800e7d0:	e7ee      	b.n	800e7b0 <vQueueDelete+0x58>
 800e7d2:	2206      	movs	r2, #6
 800e7d4:	e7ec      	b.n	800e7b0 <vQueueDelete+0x58>
 800e7d6:	bf00      	nop
	...
 800e7e0:	200128b0 	.word	0x200128b0

0800e7e4 <vQueueAddToRegistry>:
			if( xQueueRegistry[ ux ].pcQueueName == NULL )
 800e7e4:	4b12      	ldr	r3, [pc, #72]	; (800e830 <vQueueAddToRegistry+0x4c>)
 800e7e6:	681a      	ldr	r2, [r3, #0]
 800e7e8:	b17a      	cbz	r2, 800e80a <vQueueAddToRegistry+0x26>
 800e7ea:	689a      	ldr	r2, [r3, #8]
 800e7ec:	b162      	cbz	r2, 800e808 <vQueueAddToRegistry+0x24>
 800e7ee:	691a      	ldr	r2, [r3, #16]
 800e7f0:	b192      	cbz	r2, 800e818 <vQueueAddToRegistry+0x34>
 800e7f2:	699a      	ldr	r2, [r3, #24]
 800e7f4:	b192      	cbz	r2, 800e81c <vQueueAddToRegistry+0x38>
 800e7f6:	6a1a      	ldr	r2, [r3, #32]
 800e7f8:	b192      	cbz	r2, 800e820 <vQueueAddToRegistry+0x3c>
 800e7fa:	6a9a      	ldr	r2, [r3, #40]	; 0x28
 800e7fc:	b192      	cbz	r2, 800e824 <vQueueAddToRegistry+0x40>
 800e7fe:	6b1a      	ldr	r2, [r3, #48]	; 0x30
 800e800:	b192      	cbz	r2, 800e828 <vQueueAddToRegistry+0x44>
 800e802:	6b9a      	ldr	r2, [r3, #56]	; 0x38
 800e804:	b192      	cbz	r2, 800e82c <vQueueAddToRegistry+0x48>
	}
 800e806:	4770      	bx	lr
		for( ux = ( UBaseType_t ) 0U; ux < ( UBaseType_t ) configQUEUE_REGISTRY_SIZE; ux++ )
 800e808:	2201      	movs	r2, #1
				xQueueRegistry[ ux ].xHandle = xQueue;
 800e80a:	eb03 0cc2 	add.w	ip, r3, r2, lsl #3
				xQueueRegistry[ ux ].pcQueueName = pcQueueName;
 800e80e:	f843 1032 	str.w	r1, [r3, r2, lsl #3]
				xQueueRegistry[ ux ].xHandle = xQueue;
 800e812:	f8cc 0004 	str.w	r0, [ip, #4]
	}
 800e816:	4770      	bx	lr
		for( ux = ( UBaseType_t ) 0U; ux < ( UBaseType_t ) configQUEUE_REGISTRY_SIZE; ux++ )
 800e818:	2202      	movs	r2, #2
 800e81a:	e7f6      	b.n	800e80a <vQueueAddToRegistry+0x26>
 800e81c:	2203      	movs	r2, #3
 800e81e:	e7f4      	b.n	800e80a <vQueueAddToRegistry+0x26>
 800e820:	2204      	movs	r2, #4
 800e822:	e7f2      	b.n	800e80a <vQueueAddToRegistry+0x26>
 800e824:	2205      	movs	r2, #5
 800e826:	e7f0      	b.n	800e80a <vQueueAddToRegistry+0x26>
 800e828:	2206      	movs	r2, #6
 800e82a:	e7ee      	b.n	800e80a <vQueueAddToRegistry+0x26>
 800e82c:	2207      	movs	r2, #7
 800e82e:	e7ec      	b.n	800e80a <vQueueAddToRegistry+0x26>
 800e830:	200128b0 	.word	0x200128b0

0800e834 <vQueueWaitForMessageRestricted>:
/*-----------------------------------------------------------*/

#if ( configUSE_TIMERS == 1 )

	void vQueueWaitForMessageRestricted( QueueHandle_t xQueue, TickType_t xTicksToWait, const BaseType_t xWaitIndefinitely )
	{
 800e834:	b570      	push	{r4, r5, r6, lr}
 800e836:	4605      	mov	r5, r0
 800e838:	460e      	mov	r6, r1
 800e83a:	4614      	mov	r4, r2
		will not actually cause the task to block, just place it on a blocked
		list.  It will not block until the scheduler is unlocked - at which
		time a yield will be performed.  If an item is added to the queue while
		the queue is locked, and the calling task blocks on the queue, then the
		calling task will be immediately unblocked when the queue is unlocked. */
		prvLockQueue( pxQueue );
 800e83c:	f7fe fed2 	bl	800d5e4 <vPortEnterCritical>
 800e840:	f895 3044 	ldrb.w	r3, [r5, #68]	; 0x44
 800e844:	2bff      	cmp	r3, #255	; 0xff
 800e846:	bf04      	itt	eq
 800e848:	2300      	moveq	r3, #0
 800e84a:	f885 3044 	strbeq.w	r3, [r5, #68]	; 0x44
 800e84e:	f895 3045 	ldrb.w	r3, [r5, #69]	; 0x45
 800e852:	2bff      	cmp	r3, #255	; 0xff
 800e854:	bf04      	itt	eq
 800e856:	2300      	moveq	r3, #0
 800e858:	f885 3045 	strbeq.w	r3, [r5, #69]	; 0x45
 800e85c:	f7fe fee4 	bl	800d628 <vPortExitCritical>
		if( pxQueue->uxMessagesWaiting == ( UBaseType_t ) 0U )
 800e860:	6bab      	ldr	r3, [r5, #56]	; 0x38
 800e862:	2b00      	cmp	r3, #0
 800e864:	d043      	beq.n	800e8ee <vQueueWaitForMessageRestricted+0xba>
	taskENTER_CRITICAL();
 800e866:	f7fe febd 	bl	800d5e4 <vPortEnterCritical>
		int8_t cTxLock = pxQueue->cTxLock;
 800e86a:	f895 3045 	ldrb.w	r3, [r5, #69]	; 0x45
 800e86e:	b25c      	sxtb	r4, r3
		while( cTxLock > queueLOCKED_UNMODIFIED )
 800e870:	2c00      	cmp	r4, #0
 800e872:	dd14      	ble.n	800e89e <vQueueWaitForMessageRestricted+0x6a>
					if( xTaskRemoveFromEventList( &( pxQueue->xTasksWaitingToReceive ) ) != pdFALSE )
 800e874:	f105 0624 	add.w	r6, r5, #36	; 0x24
 800e878:	e003      	b.n	800e882 <vQueueWaitForMessageRestricted+0x4e>
			--cTxLock;
 800e87a:	1e63      	subs	r3, r4, #1
 800e87c:	b2da      	uxtb	r2, r3
 800e87e:	b25c      	sxtb	r4, r3
		while( cTxLock > queueLOCKED_UNMODIFIED )
 800e880:	b16a      	cbz	r2, 800e89e <vQueueWaitForMessageRestricted+0x6a>
				if( listLIST_IS_EMPTY( &( pxQueue->xTasksWaitingToReceive ) ) == pdFALSE )
 800e882:	6a6b      	ldr	r3, [r5, #36]	; 0x24
					if( xTaskRemoveFromEventList( &( pxQueue->xTasksWaitingToReceive ) ) != pdFALSE )
 800e884:	4630      	mov	r0, r6
				if( listLIST_IS_EMPTY( &( pxQueue->xTasksWaitingToReceive ) ) == pdFALSE )
 800e886:	b153      	cbz	r3, 800e89e <vQueueWaitForMessageRestricted+0x6a>
					if( xTaskRemoveFromEventList( &( pxQueue->xTasksWaitingToReceive ) ) != pdFALSE )
 800e888:	f000 fd2a 	bl	800f2e0 <xTaskRemoveFromEventList>
 800e88c:	2800      	cmp	r0, #0
 800e88e:	d0f4      	beq.n	800e87a <vQueueWaitForMessageRestricted+0x46>
						vTaskMissedYield();
 800e890:	f000 fdc2 	bl	800f418 <vTaskMissedYield>
			--cTxLock;
 800e894:	1e63      	subs	r3, r4, #1
 800e896:	b2da      	uxtb	r2, r3
 800e898:	b25c      	sxtb	r4, r3
		while( cTxLock > queueLOCKED_UNMODIFIED )
 800e89a:	2a00      	cmp	r2, #0
 800e89c:	d1f1      	bne.n	800e882 <vQueueWaitForMessageRestricted+0x4e>
		pxQueue->cTxLock = queueUNLOCKED;
 800e89e:	23ff      	movs	r3, #255	; 0xff
 800e8a0:	f885 3045 	strb.w	r3, [r5, #69]	; 0x45
	taskEXIT_CRITICAL();
 800e8a4:	f7fe fec0 	bl	800d628 <vPortExitCritical>
	taskENTER_CRITICAL();
 800e8a8:	f7fe fe9c 	bl	800d5e4 <vPortEnterCritical>
		int8_t cRxLock = pxQueue->cRxLock;
 800e8ac:	f895 3044 	ldrb.w	r3, [r5, #68]	; 0x44
 800e8b0:	b25c      	sxtb	r4, r3
		while( cRxLock > queueLOCKED_UNMODIFIED )
 800e8b2:	2c00      	cmp	r4, #0
 800e8b4:	dd14      	ble.n	800e8e0 <vQueueWaitForMessageRestricted+0xac>
				if( xTaskRemoveFromEventList( &( pxQueue->xTasksWaitingToSend ) ) != pdFALSE )
 800e8b6:	f105 0610 	add.w	r6, r5, #16
 800e8ba:	e003      	b.n	800e8c4 <vQueueWaitForMessageRestricted+0x90>
				--cRxLock;
 800e8bc:	1e63      	subs	r3, r4, #1
 800e8be:	b2da      	uxtb	r2, r3
 800e8c0:	b25c      	sxtb	r4, r3
		while( cRxLock > queueLOCKED_UNMODIFIED )
 800e8c2:	b16a      	cbz	r2, 800e8e0 <vQueueWaitForMessageRestricted+0xac>
			if( listLIST_IS_EMPTY( &( pxQueue->xTasksWaitingToSend ) ) == pdFALSE )
 800e8c4:	692b      	ldr	r3, [r5, #16]
				if( xTaskRemoveFromEventList( &( pxQueue->xTasksWaitingToSend ) ) != pdFALSE )
 800e8c6:	4630      	mov	r0, r6
			if( listLIST_IS_EMPTY( &( pxQueue->xTasksWaitingToSend ) ) == pdFALSE )
 800e8c8:	b153      	cbz	r3, 800e8e0 <vQueueWaitForMessageRestricted+0xac>
				if( xTaskRemoveFromEventList( &( pxQueue->xTasksWaitingToSend ) ) != pdFALSE )
 800e8ca:	f000 fd09 	bl	800f2e0 <xTaskRemoveFromEventList>
 800e8ce:	2800      	cmp	r0, #0
 800e8d0:	d0f4      	beq.n	800e8bc <vQueueWaitForMessageRestricted+0x88>
					vTaskMissedYield();
 800e8d2:	f000 fda1 	bl	800f418 <vTaskMissedYield>
				--cRxLock;
 800e8d6:	1e63      	subs	r3, r4, #1
 800e8d8:	b2da      	uxtb	r2, r3
 800e8da:	b25c      	sxtb	r4, r3
		while( cRxLock > queueLOCKED_UNMODIFIED )
 800e8dc:	2a00      	cmp	r2, #0
 800e8de:	d1f1      	bne.n	800e8c4 <vQueueWaitForMessageRestricted+0x90>
		pxQueue->cRxLock = queueUNLOCKED;
 800e8e0:	23ff      	movs	r3, #255	; 0xff
 800e8e2:	f885 3044 	strb.w	r3, [r5, #68]	; 0x44
		else
		{
			mtCOVERAGE_TEST_MARKER();
		}
		prvUnlockQueue( pxQueue );
	}
 800e8e6:	e8bd 4070 	ldmia.w	sp!, {r4, r5, r6, lr}
	taskEXIT_CRITICAL();
 800e8ea:	f7fe be9d 	b.w	800d628 <vPortExitCritical>
			vTaskPlaceOnEventListRestricted( &( pxQueue->xTasksWaitingToReceive ), xTicksToWait, xWaitIndefinitely );
 800e8ee:	4622      	mov	r2, r4
 800e8f0:	4631      	mov	r1, r6
 800e8f2:	f105 0024 	add.w	r0, r5, #36	; 0x24
 800e8f6:	f000 fca9 	bl	800f24c <vTaskPlaceOnEventListRestricted>
 800e8fa:	e7b4      	b.n	800e866 <vQueueWaitForMessageRestricted+0x32>

0800e8fc <prvAddNewTaskToReadyList>:
	}
}
/*-----------------------------------------------------------*/

static void prvAddNewTaskToReadyList( TCB_t *pxNewTCB )
{
 800e8fc:	e92d 43f8 	stmdb	sp!, {r3, r4, r5, r6, r7, r8, r9, lr}
 800e900:	4605      	mov	r5, r0
	/* Ensure interrupts don't access the task lists while the lists are being
	updated. */
	taskENTER_CRITICAL();
 800e902:	f7fe fe6f 	bl	800d5e4 <vPortEnterCritical>
	{
		uxCurrentNumberOfTasks++;
 800e906:	4a34      	ldr	r2, [pc, #208]	; (800e9d8 <prvAddNewTaskToReadyList+0xdc>)
		if( pxCurrentTCB == NULL )
 800e908:	4e34      	ldr	r6, [pc, #208]	; (800e9dc <prvAddNewTaskToReadyList+0xe0>)
		uxCurrentNumberOfTasks++;
 800e90a:	6813      	ldr	r3, [r2, #0]
 800e90c:	3301      	adds	r3, #1
 800e90e:	6013      	str	r3, [r2, #0]
		if( pxCurrentTCB == NULL )
 800e910:	6833      	ldr	r3, [r6, #0]
 800e912:	2b00      	cmp	r3, #0
 800e914:	d032      	beq.n	800e97c <prvAddNewTaskToReadyList+0x80>
		else
		{
			/* If the scheduler is not already running, make this task the
			current task if it is the highest priority task to be created
			so far. */
			if( xSchedulerRunning == pdFALSE )
 800e916:	4c32      	ldr	r4, [pc, #200]	; (800e9e0 <prvAddNewTaskToReadyList+0xe4>)
 800e918:	6823      	ldr	r3, [r4, #0]
 800e91a:	b33b      	cbz	r3, 800e96c <prvAddNewTaskToReadyList+0x70>
			{
				if( pxCurrentTCB->uxPriority <= pxNewTCB->uxPriority )
 800e91c:	6ae8      	ldr	r0, [r5, #44]	; 0x2c
 800e91e:	4f31      	ldr	r7, [pc, #196]	; (800e9e4 <prvAddNewTaskToReadyList+0xe8>)
			{
				mtCOVERAGE_TEST_MARKER();
			}
		}

		uxTaskNumber++;
 800e920:	4a31      	ldr	r2, [pc, #196]	; (800e9e8 <prvAddNewTaskToReadyList+0xec>)
			pxNewTCB->uxTCBNumber = uxTaskNumber;
		}
		#endif /* configUSE_TRACE_FACILITY */
		traceTASK_CREATE( pxNewTCB );

		prvAddTaskToReadyList( pxNewTCB );
 800e922:	4932      	ldr	r1, [pc, #200]	; (800e9ec <prvAddNewTaskToReadyList+0xf0>)
		uxTaskNumber++;
 800e924:	6813      	ldr	r3, [r2, #0]
 800e926:	3301      	adds	r3, #1
 800e928:	6013      	str	r3, [r2, #0]
			pxNewTCB->uxTCBNumber = uxTaskNumber;
 800e92a:	646b      	str	r3, [r5, #68]	; 0x44
		prvAddTaskToReadyList( pxNewTCB );
 800e92c:	680b      	ldr	r3, [r1, #0]
 800e92e:	4283      	cmp	r3, r0
 800e930:	bf38      	it	cc
 800e932:	6008      	strcc	r0, [r1, #0]
 800e934:	eb00 0080 	add.w	r0, r0, r0, lsl #2
 800e938:	eb07 0080 	add.w	r0, r7, r0, lsl #2
 800e93c:	1d29      	adds	r1, r5, #4
 800e93e:	f7fe fdab 	bl	800d498 <vListInsertEnd>

		portSETUP_TCB( pxNewTCB );
	}
	taskEXIT_CRITICAL();
 800e942:	f7fe fe71 	bl	800d628 <vPortExitCritical>

	if( xSchedulerRunning != pdFALSE )
 800e946:	6823      	ldr	r3, [r4, #0]
 800e948:	b173      	cbz	r3, 800e968 <prvAddNewTaskToReadyList+0x6c>
	{
		/* If the created task is of a higher priority than the current task
		then it should run now. */
		if( pxCurrentTCB->uxPriority < pxNewTCB->uxPriority )
 800e94a:	6832      	ldr	r2, [r6, #0]
 800e94c:	6aeb      	ldr	r3, [r5, #44]	; 0x2c
 800e94e:	6ad2      	ldr	r2, [r2, #44]	; 0x2c
 800e950:	429a      	cmp	r2, r3
 800e952:	d209      	bcs.n	800e968 <prvAddNewTaskToReadyList+0x6c>
		{
			taskYIELD_IF_USING_PREEMPTION();
 800e954:	f04f 23e0 	mov.w	r3, #3758153728	; 0xe000e000
 800e958:	f04f 5280 	mov.w	r2, #268435456	; 0x10000000
 800e95c:	f8c3 2d04 	str.w	r2, [r3, #3332]	; 0xd04
 800e960:	f3bf 8f4f 	dsb	sy
 800e964:	f3bf 8f6f 	isb	sy
	}
	else
	{
		mtCOVERAGE_TEST_MARKER();
	}
}
 800e968:	e8bd 83f8 	ldmia.w	sp!, {r3, r4, r5, r6, r7, r8, r9, pc}
				if( pxCurrentTCB->uxPriority <= pxNewTCB->uxPriority )
 800e96c:	6833      	ldr	r3, [r6, #0]
 800e96e:	6ae8      	ldr	r0, [r5, #44]	; 0x2c
 800e970:	6adb      	ldr	r3, [r3, #44]	; 0x2c
 800e972:	4f1c      	ldr	r7, [pc, #112]	; (800e9e4 <prvAddNewTaskToReadyList+0xe8>)
 800e974:	4283      	cmp	r3, r0
					pxCurrentTCB = pxNewTCB;
 800e976:	bf98      	it	ls
 800e978:	6035      	strls	r5, [r6, #0]
 800e97a:	e7d1      	b.n	800e920 <prvAddNewTaskToReadyList+0x24>
			pxCurrentTCB = pxNewTCB;
 800e97c:	6035      	str	r5, [r6, #0]
			if( uxCurrentNumberOfTasks == ( UBaseType_t ) 1 )
 800e97e:	6813      	ldr	r3, [r2, #0]
 800e980:	2b01      	cmp	r3, #1
 800e982:	d003      	beq.n	800e98c <prvAddNewTaskToReadyList+0x90>
				if( pxCurrentTCB->uxPriority <= pxNewTCB->uxPriority )
 800e984:	6ae8      	ldr	r0, [r5, #44]	; 0x2c
 800e986:	4f17      	ldr	r7, [pc, #92]	; (800e9e4 <prvAddNewTaskToReadyList+0xe8>)
 800e988:	4c15      	ldr	r4, [pc, #84]	; (800e9e0 <prvAddNewTaskToReadyList+0xe4>)
 800e98a:	e7c9      	b.n	800e920 <prvAddNewTaskToReadyList+0x24>
 800e98c:	4f15      	ldr	r7, [pc, #84]	; (800e9e4 <prvAddNewTaskToReadyList+0xe8>)
 800e98e:	463c      	mov	r4, r7
 800e990:	f507 688c 	add.w	r8, r7, #1120	; 0x460
{
UBaseType_t uxPriority;

	for( uxPriority = ( UBaseType_t ) 0U; uxPriority < ( UBaseType_t ) configMAX_PRIORITIES; uxPriority++ )
	{
		vListInitialise( &( pxReadyTasksLists[ uxPriority ] ) );
 800e994:	4620      	mov	r0, r4
	for( uxPriority = ( UBaseType_t ) 0U; uxPriority < ( UBaseType_t ) configMAX_PRIORITIES; uxPriority++ )
 800e996:	3414      	adds	r4, #20
		vListInitialise( &( pxReadyTasksLists[ uxPriority ] ) );
 800e998:	f7fe fd6e 	bl	800d478 <vListInitialise>
	for( uxPriority = ( UBaseType_t ) 0U; uxPriority < ( UBaseType_t ) configMAX_PRIORITIES; uxPriority++ )
 800e99c:	45a0      	cmp	r8, r4
 800e99e:	d1f9      	bne.n	800e994 <prvAddNewTaskToReadyList+0x98>
	}

	vListInitialise( &xDelayedTaskList1 );
 800e9a0:	f8df 9060 	ldr.w	r9, [pc, #96]	; 800ea04 <prvAddNewTaskToReadyList+0x108>
	vListInitialise( &xDelayedTaskList2 );
 800e9a4:	f8df 8060 	ldr.w	r8, [pc, #96]	; 800ea08 <prvAddNewTaskToReadyList+0x10c>
 800e9a8:	4c0d      	ldr	r4, [pc, #52]	; (800e9e0 <prvAddNewTaskToReadyList+0xe4>)
	vListInitialise( &xDelayedTaskList1 );
 800e9aa:	4648      	mov	r0, r9
 800e9ac:	f7fe fd64 	bl	800d478 <vListInitialise>
	vListInitialise( &xDelayedTaskList2 );
 800e9b0:	4640      	mov	r0, r8
 800e9b2:	f7fe fd61 	bl	800d478 <vListInitialise>
	vListInitialise( &xPendingReadyList );
 800e9b6:	480e      	ldr	r0, [pc, #56]	; (800e9f0 <prvAddNewTaskToReadyList+0xf4>)
 800e9b8:	f7fe fd5e 	bl	800d478 <vListInitialise>

	#if ( INCLUDE_vTaskDelete == 1 )
	{
		vListInitialise( &xTasksWaitingTermination );
 800e9bc:	480d      	ldr	r0, [pc, #52]	; (800e9f4 <prvAddNewTaskToReadyList+0xf8>)
 800e9be:	f7fe fd5b 	bl	800d478 <vListInitialise>
	}
	#endif /* INCLUDE_vTaskDelete */

	#if ( INCLUDE_vTaskSuspend == 1 )
	{
		vListInitialise( &xSuspendedTaskList );
 800e9c2:	480d      	ldr	r0, [pc, #52]	; (800e9f8 <prvAddNewTaskToReadyList+0xfc>)
 800e9c4:	f7fe fd58 	bl	800d478 <vListInitialise>
	}
	#endif /* INCLUDE_vTaskSuspend */

	/* Start with pxDelayedTaskList using list1 and the pxOverflowDelayedTaskList
	using list2. */
	pxDelayedTaskList = &xDelayedTaskList1;
 800e9c8:	4b0c      	ldr	r3, [pc, #48]	; (800e9fc <prvAddNewTaskToReadyList+0x100>)
		prvAddTaskToReadyList( pxNewTCB );
 800e9ca:	6ae8      	ldr	r0, [r5, #44]	; 0x2c
	pxDelayedTaskList = &xDelayedTaskList1;
 800e9cc:	f8c3 9000 	str.w	r9, [r3]
	pxOverflowDelayedTaskList = &xDelayedTaskList2;
 800e9d0:	4b0b      	ldr	r3, [pc, #44]	; (800ea00 <prvAddNewTaskToReadyList+0x104>)
 800e9d2:	f8c3 8000 	str.w	r8, [r3]
}
 800e9d6:	e7a3      	b.n	800e920 <prvAddNewTaskToReadyList+0x24>
 800e9d8:	20012d5c 	.word	0x20012d5c
 800e9dc:	200128f0 	.word	0x200128f0
 800e9e0:	20012db8 	.word	0x20012db8
 800e9e4:	200128fc 	.word	0x200128fc
 800e9e8:	20012d68 	.word	0x20012d68
 800e9ec:	20012d6c 	.word	0x20012d6c
 800e9f0:	20012da4 	.word	0x20012da4
 800e9f4:	20012dd0 	.word	0x20012dd0
 800e9f8:	20012dbc 	.word	0x20012dbc
 800e9fc:	200128f4 	.word	0x200128f4
 800ea00:	200128f8 	.word	0x200128f8
 800ea04:	20012d70 	.word	0x20012d70
 800ea08:	20012d84 	.word	0x20012d84

0800ea0c <prvInitialiseNewTask.constprop.0>:
static void prvInitialiseNewTask( 	TaskFunction_t pxTaskCode,
 800ea0c:	e92d 47f0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, lr}
 800ea10:	9c0a      	ldr	r4, [sp, #40]	; 0x28
 800ea12:	f8dd 8024 	ldr.w	r8, [sp, #36]	; 0x24
		( void ) memset( pxNewTCB->pxStack, ( int ) tskSTACK_FILL_BYTE, ( size_t ) ulStackDepth * sizeof( StackType_t ) );
 800ea16:	ea4f 0982 	mov.w	r9, r2, lsl #2
 800ea1a:	464a      	mov	r2, r9
static void prvInitialiseNewTask( 	TaskFunction_t pxTaskCode,
 800ea1c:	4606      	mov	r6, r0
 800ea1e:	460d      	mov	r5, r1
		( void ) memset( pxNewTCB->pxStack, ( int ) tskSTACK_FILL_BYTE, ( size_t ) ulStackDepth * sizeof( StackType_t ) );
 800ea20:	6b20      	ldr	r0, [r4, #48]	; 0x30
 800ea22:	21a5      	movs	r1, #165	; 0xa5
static void prvInitialiseNewTask( 	TaskFunction_t pxTaskCode,
 800ea24:	461f      	mov	r7, r3
		( void ) memset( pxNewTCB->pxStack, ( int ) tskSTACK_FILL_BYTE, ( size_t ) ulStackDepth * sizeof( StackType_t ) );
 800ea26:	f01b fd12 	bl	802a44e <memset>
		pxTopOfStack = &( pxNewTCB->pxStack[ ulStackDepth - ( uint32_t ) 1 ] );
 800ea2a:	6b23      	ldr	r3, [r4, #48]	; 0x30
 800ea2c:	f1a9 0904 	sub.w	r9, r9, #4
 800ea30:	444b      	add	r3, r9
		pxTopOfStack = ( StackType_t * ) ( ( ( portPOINTER_SIZE_TYPE ) pxTopOfStack ) & ( ~( ( portPOINTER_SIZE_TYPE ) portBYTE_ALIGNMENT_MASK ) ) ); /*lint !e923 !e9033 !e9078 MISRA exception.  Avoiding casts between pointers and integers is not practical.  Size differences accounted for using portPOINTER_SIZE_TYPE type.  Checked by assert(). */
 800ea32:	f023 0907 	bic.w	r9, r3, #7
	if( pcName != NULL )
 800ea36:	2d00      	cmp	r5, #0
 800ea38:	d079      	beq.n	800eb2e <prvInitialiseNewTask.constprop.0+0x122>
			pxNewTCB->pcTaskName[ x ] = pcName[ x ];
 800ea3a:	782b      	ldrb	r3, [r5, #0]
 800ea3c:	f884 3034 	strb.w	r3, [r4, #52]	; 0x34
			if( pcName[ x ] == ( char ) 0x00 )
 800ea40:	2b00      	cmp	r3, #0
 800ea42:	d03b      	beq.n	800eabc <prvInitialiseNewTask.constprop.0+0xb0>
			pxNewTCB->pcTaskName[ x ] = pcName[ x ];
 800ea44:	786b      	ldrb	r3, [r5, #1]
 800ea46:	f884 3035 	strb.w	r3, [r4, #53]	; 0x35
			if( pcName[ x ] == ( char ) 0x00 )
 800ea4a:	2b00      	cmp	r3, #0
 800ea4c:	d036      	beq.n	800eabc <prvInitialiseNewTask.constprop.0+0xb0>
			pxNewTCB->pcTaskName[ x ] = pcName[ x ];
 800ea4e:	78ab      	ldrb	r3, [r5, #2]
 800ea50:	f884 3036 	strb.w	r3, [r4, #54]	; 0x36
			if( pcName[ x ] == ( char ) 0x00 )
 800ea54:	b393      	cbz	r3, 800eabc <prvInitialiseNewTask.constprop.0+0xb0>
			pxNewTCB->pcTaskName[ x ] = pcName[ x ];
 800ea56:	78eb      	ldrb	r3, [r5, #3]
 800ea58:	f884 3037 	strb.w	r3, [r4, #55]	; 0x37
			if( pcName[ x ] == ( char ) 0x00 )
 800ea5c:	b373      	cbz	r3, 800eabc <prvInitialiseNewTask.constprop.0+0xb0>
			pxNewTCB->pcTaskName[ x ] = pcName[ x ];
 800ea5e:	792b      	ldrb	r3, [r5, #4]
 800ea60:	f884 3038 	strb.w	r3, [r4, #56]	; 0x38
			if( pcName[ x ] == ( char ) 0x00 )
 800ea64:	b353      	cbz	r3, 800eabc <prvInitialiseNewTask.constprop.0+0xb0>
			pxNewTCB->pcTaskName[ x ] = pcName[ x ];
 800ea66:	796b      	ldrb	r3, [r5, #5]
 800ea68:	f884 3039 	strb.w	r3, [r4, #57]	; 0x39
			if( pcName[ x ] == ( char ) 0x00 )
 800ea6c:	b333      	cbz	r3, 800eabc <prvInitialiseNewTask.constprop.0+0xb0>
			pxNewTCB->pcTaskName[ x ] = pcName[ x ];
 800ea6e:	79ab      	ldrb	r3, [r5, #6]
 800ea70:	f884 303a 	strb.w	r3, [r4, #58]	; 0x3a
			if( pcName[ x ] == ( char ) 0x00 )
 800ea74:	b313      	cbz	r3, 800eabc <prvInitialiseNewTask.constprop.0+0xb0>
			pxNewTCB->pcTaskName[ x ] = pcName[ x ];
 800ea76:	79eb      	ldrb	r3, [r5, #7]
 800ea78:	f884 303b 	strb.w	r3, [r4, #59]	; 0x3b
			if( pcName[ x ] == ( char ) 0x00 )
 800ea7c:	b1f3      	cbz	r3, 800eabc <prvInitialiseNewTask.constprop.0+0xb0>
			pxNewTCB->pcTaskName[ x ] = pcName[ x ];
 800ea7e:	7a2b      	ldrb	r3, [r5, #8]
 800ea80:	f884 303c 	strb.w	r3, [r4, #60]	; 0x3c
			if( pcName[ x ] == ( char ) 0x00 )
 800ea84:	b1d3      	cbz	r3, 800eabc <prvInitialiseNewTask.constprop.0+0xb0>
			pxNewTCB->pcTaskName[ x ] = pcName[ x ];
 800ea86:	7a6b      	ldrb	r3, [r5, #9]
 800ea88:	f884 303d 	strb.w	r3, [r4, #61]	; 0x3d
			if( pcName[ x ] == ( char ) 0x00 )
 800ea8c:	b1b3      	cbz	r3, 800eabc <prvInitialiseNewTask.constprop.0+0xb0>
			pxNewTCB->pcTaskName[ x ] = pcName[ x ];
 800ea8e:	7aab      	ldrb	r3, [r5, #10]
 800ea90:	f884 303e 	strb.w	r3, [r4, #62]	; 0x3e
			if( pcName[ x ] == ( char ) 0x00 )
 800ea94:	b193      	cbz	r3, 800eabc <prvInitialiseNewTask.constprop.0+0xb0>
			pxNewTCB->pcTaskName[ x ] = pcName[ x ];
 800ea96:	7aeb      	ldrb	r3, [r5, #11]
 800ea98:	f884 303f 	strb.w	r3, [r4, #63]	; 0x3f
			if( pcName[ x ] == ( char ) 0x00 )
 800ea9c:	b173      	cbz	r3, 800eabc <prvInitialiseNewTask.constprop.0+0xb0>
			pxNewTCB->pcTaskName[ x ] = pcName[ x ];
 800ea9e:	7b2b      	ldrb	r3, [r5, #12]
 800eaa0:	f884 3040 	strb.w	r3, [r4, #64]	; 0x40
			if( pcName[ x ] == ( char ) 0x00 )
 800eaa4:	b153      	cbz	r3, 800eabc <prvInitialiseNewTask.constprop.0+0xb0>
			pxNewTCB->pcTaskName[ x ] = pcName[ x ];
 800eaa6:	7b6b      	ldrb	r3, [r5, #13]
 800eaa8:	f884 3041 	strb.w	r3, [r4, #65]	; 0x41
			if( pcName[ x ] == ( char ) 0x00 )
 800eaac:	b133      	cbz	r3, 800eabc <prvInitialiseNewTask.constprop.0+0xb0>
			pxNewTCB->pcTaskName[ x ] = pcName[ x ];
 800eaae:	7bab      	ldrb	r3, [r5, #14]
 800eab0:	f884 3042 	strb.w	r3, [r4, #66]	; 0x42
			if( pcName[ x ] == ( char ) 0x00 )
 800eab4:	b113      	cbz	r3, 800eabc <prvInitialiseNewTask.constprop.0+0xb0>
			pxNewTCB->pcTaskName[ x ] = pcName[ x ];
 800eab6:	7beb      	ldrb	r3, [r5, #15]
 800eab8:	f884 3043 	strb.w	r3, [r4, #67]	; 0x43
		pxNewTCB->pcTaskName[ configMAX_TASK_NAME_LEN - 1 ] = '\0';
 800eabc:	2300      	movs	r3, #0
 800eabe:	f884 3043 	strb.w	r3, [r4, #67]	; 0x43
	if( uxPriority >= ( UBaseType_t ) configMAX_PRIORITIES )
 800eac2:	9d08      	ldr	r5, [sp, #32]
 800eac4:	2d37      	cmp	r5, #55	; 0x37
 800eac6:	bf28      	it	cs
 800eac8:	2537      	movcs	r5, #55	; 0x37
		pxNewTCB->uxMutexesHeld = 0;
 800eaca:	f04f 0a00 	mov.w	sl, #0
	pxNewTCB->uxPriority = uxPriority;
 800eace:	62e5      	str	r5, [r4, #44]	; 0x2c
		pxNewTCB->uxBasePriority = uxPriority;
 800ead0:	64e5      	str	r5, [r4, #76]	; 0x4c
	vListInitialiseItem( &( pxNewTCB->xStateListItem ) );
 800ead2:	1d20      	adds	r0, r4, #4
		pxNewTCB->uxMutexesHeld = 0;
 800ead4:	f8c4 a050 	str.w	sl, [r4, #80]	; 0x50
	vListInitialiseItem( &( pxNewTCB->xStateListItem ) );
 800ead8:	f7fe fcda 	bl	800d490 <vListInitialiseItem>
	listSET_LIST_ITEM_VALUE( &( pxNewTCB->xEventListItem ), ( TickType_t ) configMAX_PRIORITIES - ( TickType_t ) uxPriority ); /*lint !e961 MISRA exception as the casts are only redundant for some ports. */
 800eadc:	f1c5 0538 	rsb	r5, r5, #56	; 0x38
	vListInitialiseItem( &( pxNewTCB->xEventListItem ) );
 800eae0:	f104 0018 	add.w	r0, r4, #24
 800eae4:	f7fe fcd4 	bl	800d490 <vListInitialiseItem>
	listSET_LIST_ITEM_VALUE( &( pxNewTCB->xEventListItem ), ( TickType_t ) configMAX_PRIORITIES - ( TickType_t ) uxPriority ); /*lint !e961 MISRA exception as the casts are only redundant for some ports. */
 800eae8:	61a5      	str	r5, [r4, #24]
		pxNewTCB->ulNotifiedValue = 0;
 800eaea:	f8c4 a0a4 	str.w	sl, [r4, #164]	; 0xa4
		_REENT_INIT_PTR( ( &( pxNewTCB->xNewLib_reent ) ) );
 800eaee:	4651      	mov	r1, sl
 800eaf0:	224c      	movs	r2, #76	; 0x4c
	listSET_LIST_ITEM_OWNER( &( pxNewTCB->xStateListItem ), pxNewTCB );
 800eaf2:	6124      	str	r4, [r4, #16]
	listSET_LIST_ITEM_OWNER( &( pxNewTCB->xEventListItem ), pxNewTCB );
 800eaf4:	6264      	str	r4, [r4, #36]	; 0x24
		pxNewTCB->pxTaskTag = NULL;
 800eaf6:	f8c4 a054 	str.w	sl, [r4, #84]	; 0x54
		pxNewTCB->ucNotifyState = taskNOT_WAITING_NOTIFICATION;
 800eafa:	f884 a0a8 	strb.w	sl, [r4, #168]	; 0xa8
		_REENT_INIT_PTR( ( &( pxNewTCB->xNewLib_reent ) ) );
 800eafe:	f104 0058 	add.w	r0, r4, #88	; 0x58
 800eb02:	f01b fca4 	bl	802a44e <memset>
 800eb06:	4b0b      	ldr	r3, [pc, #44]	; (800eb34 <prvInitialiseNewTask.constprop.0+0x128>)
 800eb08:	65e3      	str	r3, [r4, #92]	; 0x5c
 800eb0a:	f103 0568 	add.w	r5, r3, #104	; 0x68
 800eb0e:	33d0      	adds	r3, #208	; 0xd0
			pxNewTCB->pxTopOfStack = pxPortInitialiseStack( pxTopOfStack, pxTaskCode, pvParameters );
 800eb10:	463a      	mov	r2, r7
 800eb12:	4631      	mov	r1, r6
 800eb14:	4648      	mov	r0, r9
		_REENT_INIT_PTR( ( &( pxNewTCB->xNewLib_reent ) ) );
 800eb16:	6625      	str	r5, [r4, #96]	; 0x60
 800eb18:	6663      	str	r3, [r4, #100]	; 0x64
			pxNewTCB->pxTopOfStack = pxPortInitialiseStack( pxTopOfStack, pxTaskCode, pvParameters );
 800eb1a:	f7fe fd37 	bl	800d58c <pxPortInitialiseStack>
 800eb1e:	6020      	str	r0, [r4, #0]
	if( pxCreatedTask != NULL )
 800eb20:	f1b8 0f00 	cmp.w	r8, #0
 800eb24:	d001      	beq.n	800eb2a <prvInitialiseNewTask.constprop.0+0x11e>
		*pxCreatedTask = ( TaskHandle_t ) pxNewTCB;
 800eb26:	f8c8 4000 	str.w	r4, [r8]
}
 800eb2a:	e8bd 87f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, pc}
		pxNewTCB->pcTaskName[ 0 ] = 0x00;
 800eb2e:	f884 5034 	strb.w	r5, [r4, #52]	; 0x34
 800eb32:	e7c6      	b.n	800eac2 <prvInitialiseNewTask.constprop.0+0xb6>
 800eb34:	20013880 	.word	0x20013880

0800eb38 <prvIdleTask>:
{
 800eb38:	b580      	push	{r7, lr}
 800eb3a:	4d23      	ldr	r5, [pc, #140]	; (800ebc8 <prvIdleTask+0x90>)
 800eb3c:	4f23      	ldr	r7, [pc, #140]	; (800ebcc <prvIdleTask+0x94>)
 800eb3e:	4e24      	ldr	r6, [pc, #144]	; (800ebd0 <prvIdleTask+0x98>)
 800eb40:	f8df 8090 	ldr.w	r8, [pc, #144]	; 800ebd4 <prvIdleTask+0x9c>
				taskYIELD();
 800eb44:	f04f 2ae0 	mov.w	sl, #3758153728	; 0xe000e000
 800eb48:	f04f 5980 	mov.w	r9, #268435456	; 0x10000000
	{
		TCB_t *pxTCB;

		/* uxDeletedTasksWaitingCleanUp is used to prevent taskENTER_CRITICAL()
		being called too often in the idle task. */
		while( uxDeletedTasksWaitingCleanUp > ( UBaseType_t ) 0U )
 800eb4c:	682b      	ldr	r3, [r5, #0]
 800eb4e:	b35b      	cbz	r3, 800eba8 <prvIdleTask+0x70>
		{
			taskENTER_CRITICAL();
 800eb50:	f7fe fd48 	bl	800d5e4 <vPortEnterCritical>
			{
				pxTCB = listGET_OWNER_OF_HEAD_ENTRY( ( &xTasksWaitingTermination ) ); /*lint !e9079 void * is used as this macro is used with timers and co-routines too.  Alignment is known to be fine as the type of the pointer stored and retrieved is the same. */
 800eb54:	68fb      	ldr	r3, [r7, #12]
 800eb56:	68dc      	ldr	r4, [r3, #12]
				( void ) uxListRemove( &( pxTCB->xStateListItem ) );
 800eb58:	1d20      	adds	r0, r4, #4
 800eb5a:	f7fe fcc5 	bl	800d4e8 <uxListRemove>
				--uxCurrentNumberOfTasks;
 800eb5e:	6833      	ldr	r3, [r6, #0]
 800eb60:	3b01      	subs	r3, #1
 800eb62:	6033      	str	r3, [r6, #0]
				--uxDeletedTasksWaitingCleanUp;
 800eb64:	682b      	ldr	r3, [r5, #0]
 800eb66:	3b01      	subs	r3, #1
 800eb68:	602b      	str	r3, [r5, #0]
			}
			taskEXIT_CRITICAL();
 800eb6a:	f7fe fd5d 	bl	800d628 <vPortExitCritical>
		to the task to free any memory allocated at the application level.
		See the third party link http://www.nadler.com/embedded/newlibAndFreeRTOS.html
		for additional information. */
		#if ( configUSE_NEWLIB_REENTRANT == 1 )
		{
			_reclaim_reent( &( pxTCB->xNewLib_reent ) );
 800eb6e:	f104 0058 	add.w	r0, r4, #88	; 0x58
 800eb72:	f01b fcb5 	bl	802a4e0 <_reclaim_reent>
		#elif( tskSTATIC_AND_DYNAMIC_ALLOCATION_POSSIBLE != 0 ) /*lint !e731 !e9029 Macro has been consolidated for readability reasons. */
		{
			/* The task could have been allocated statically or dynamically, so
			check what was statically allocated before trying to free the
			memory. */
			if( pxTCB->ucStaticallyAllocated == tskDYNAMICALLY_ALLOCATED_STACK_AND_TCB )
 800eb76:	f894 30a9 	ldrb.w	r3, [r4, #169]	; 0xa9
 800eb7a:	b163      	cbz	r3, 800eb96 <prvIdleTask+0x5e>
				/* Both the stack and TCB were allocated dynamically, so both
				must be freed. */
				vPortFree( pxTCB->pxStack );
				vPortFree( pxTCB );
			}
			else if( pxTCB->ucStaticallyAllocated == tskSTATICALLY_ALLOCATED_STACK_ONLY )
 800eb7c:	2b01      	cmp	r3, #1
 800eb7e:	d01e      	beq.n	800ebbe <prvIdleTask+0x86>
			}
			else
			{
				/* Neither the stack nor the TCB were allocated dynamically, so
				nothing needs to be freed. */
				configASSERT( pxTCB->ucStaticallyAllocated == tskSTATICALLY_ALLOCATED_STACK_AND_TCB	);
 800eb80:	2b02      	cmp	r3, #2
 800eb82:	d0e3      	beq.n	800eb4c <prvIdleTask+0x14>
 800eb84:	f04f 0350 	mov.w	r3, #80	; 0x50
 800eb88:	f383 8811 	msr	BASEPRI, r3
 800eb8c:	f3bf 8f6f 	isb	sy
 800eb90:	f3bf 8f4f 	dsb	sy
 800eb94:	e7fe      	b.n	800eb94 <prvIdleTask+0x5c>
				vPortFree( pxTCB->pxStack );
 800eb96:	6b20      	ldr	r0, [r4, #48]	; 0x30
 800eb98:	f7fe fc0a 	bl	800d3b0 <vPortFree>
				vPortFree( pxTCB );
 800eb9c:	4620      	mov	r0, r4
 800eb9e:	f7fe fc07 	bl	800d3b0 <vPortFree>
		while( uxDeletedTasksWaitingCleanUp > ( UBaseType_t ) 0U )
 800eba2:	682b      	ldr	r3, [r5, #0]
 800eba4:	2b00      	cmp	r3, #0
 800eba6:	d1d3      	bne.n	800eb50 <prvIdleTask+0x18>
			if( listCURRENT_LIST_LENGTH( &( pxReadyTasksLists[ tskIDLE_PRIORITY ] ) ) > ( UBaseType_t ) 1 )
 800eba8:	f8d8 3000 	ldr.w	r3, [r8]
 800ebac:	2b01      	cmp	r3, #1
 800ebae:	d9cd      	bls.n	800eb4c <prvIdleTask+0x14>
				taskYIELD();
 800ebb0:	f8ca 9d04 	str.w	r9, [sl, #3332]	; 0xd04
 800ebb4:	f3bf 8f4f 	dsb	sy
 800ebb8:	f3bf 8f6f 	isb	sy
 800ebbc:	e7c6      	b.n	800eb4c <prvIdleTask+0x14>
				vPortFree( pxTCB );
 800ebbe:	4620      	mov	r0, r4
 800ebc0:	f7fe fbf6 	bl	800d3b0 <vPortFree>
 800ebc4:	e7c2      	b.n	800eb4c <prvIdleTask+0x14>
 800ebc6:	bf00      	nop
 800ebc8:	20012d60 	.word	0x20012d60
 800ebcc:	20012dd0 	.word	0x20012dd0
 800ebd0:	20012d5c 	.word	0x20012d5c
 800ebd4:	200128fc 	.word	0x200128fc

0800ebd8 <xTaskIncrementTick.part.0>:
BaseType_t xTaskIncrementTick( void )
 800ebd8:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
		const TickType_t xConstTickCount = xTickCount + ( TickType_t ) 1;
 800ebdc:	4b47      	ldr	r3, [pc, #284]	; (800ecfc <xTaskIncrementTick.part.0+0x124>)
 800ebde:	681e      	ldr	r6, [r3, #0]
 800ebe0:	3601      	adds	r6, #1
BaseType_t xTaskIncrementTick( void )
 800ebe2:	b083      	sub	sp, #12
		xTickCount = xConstTickCount;
 800ebe4:	601e      	str	r6, [r3, #0]
		if( xConstTickCount == ( TickType_t ) 0U ) /*lint !e774 'if' does not always evaluate to false as it is looking for an overflow. */
 800ebe6:	2e00      	cmp	r6, #0
 800ebe8:	d040      	beq.n	800ec6c <xTaskIncrementTick.part.0+0x94>
 800ebea:	f8df b124 	ldr.w	fp, [pc, #292]	; 800ed10 <xTaskIncrementTick.part.0+0x138>
		if( xConstTickCount >= xNextTaskUnblockTime )
 800ebee:	f8db 3000 	ldr.w	r3, [fp]
 800ebf2:	429e      	cmp	r6, r3
 800ebf4:	d347      	bcc.n	800ec86 <xTaskIncrementTick.part.0+0xae>
				if( listLIST_IS_EMPTY( pxDelayedTaskList ) != pdFALSE )
 800ebf6:	4f42      	ldr	r7, [pc, #264]	; (800ed00 <xTaskIncrementTick.part.0+0x128>)
 800ebf8:	f8df 9118 	ldr.w	r9, [pc, #280]	; 800ed14 <xTaskIncrementTick.part.0+0x13c>
 800ebfc:	683b      	ldr	r3, [r7, #0]
 800ebfe:	f8df a118 	ldr.w	sl, [pc, #280]	; 800ed18 <xTaskIncrementTick.part.0+0x140>
 800ec02:	681d      	ldr	r5, [r3, #0]
 800ec04:	2d00      	cmp	r5, #0
 800ec06:	d073      	beq.n	800ecf0 <xTaskIncrementTick.part.0+0x118>
					prvAddTaskToReadyList( pxTCB );
 800ec08:	f8df 8110 	ldr.w	r8, [pc, #272]	; 800ed1c <xTaskIncrementTick.part.0+0x144>
BaseType_t xSwitchRequired = pdFALSE;
 800ec0c:	2500      	movs	r5, #0
 800ec0e:	e022      	b.n	800ec56 <xTaskIncrementTick.part.0+0x7e>
 800ec10:	9101      	str	r1, [sp, #4]
					( void ) uxListRemove( &( pxTCB->xStateListItem ) );
 800ec12:	f7fe fc69 	bl	800d4e8 <uxListRemove>
					if( listLIST_ITEM_CONTAINER( &( pxTCB->xEventListItem ) ) != NULL )
 800ec16:	6aa3      	ldr	r3, [r4, #40]	; 0x28
 800ec18:	9901      	ldr	r1, [sp, #4]
						( void ) uxListRemove( &( pxTCB->xEventListItem ) );
 800ec1a:	f104 0018 	add.w	r0, r4, #24
					if( listLIST_ITEM_CONTAINER( &( pxTCB->xEventListItem ) ) != NULL )
 800ec1e:	b113      	cbz	r3, 800ec26 <xTaskIncrementTick.part.0+0x4e>
						( void ) uxListRemove( &( pxTCB->xEventListItem ) );
 800ec20:	f7fe fc62 	bl	800d4e8 <uxListRemove>
 800ec24:	9901      	ldr	r1, [sp, #4]
					prvAddTaskToReadyList( pxTCB );
 800ec26:	6ae3      	ldr	r3, [r4, #44]	; 0x2c
 800ec28:	f8d8 2000 	ldr.w	r2, [r8]
 800ec2c:	eb03 0083 	add.w	r0, r3, r3, lsl #2
 800ec30:	4293      	cmp	r3, r2
 800ec32:	eb09 0080 	add.w	r0, r9, r0, lsl #2
 800ec36:	bf88      	it	hi
 800ec38:	f8c8 3000 	strhi.w	r3, [r8]
 800ec3c:	f7fe fc2c 	bl	800d498 <vListInsertEnd>
						if( pxTCB->uxPriority >= pxCurrentTCB->uxPriority )
 800ec40:	f8da 2000 	ldr.w	r2, [sl]
				if( listLIST_IS_EMPTY( pxDelayedTaskList ) != pdFALSE )
 800ec44:	683b      	ldr	r3, [r7, #0]
						if( pxTCB->uxPriority >= pxCurrentTCB->uxPriority )
 800ec46:	6ae1      	ldr	r1, [r4, #44]	; 0x2c
 800ec48:	6ad2      	ldr	r2, [r2, #44]	; 0x2c
				if( listLIST_IS_EMPTY( pxDelayedTaskList ) != pdFALSE )
 800ec4a:	681b      	ldr	r3, [r3, #0]
							xSwitchRequired = pdTRUE;
 800ec4c:	4291      	cmp	r1, r2
 800ec4e:	bf28      	it	cs
 800ec50:	2501      	movcs	r5, #1
				if( listLIST_IS_EMPTY( pxDelayedTaskList ) != pdFALSE )
 800ec52:	2b00      	cmp	r3, #0
 800ec54:	d04c      	beq.n	800ecf0 <xTaskIncrementTick.part.0+0x118>
					pxTCB = listGET_OWNER_OF_HEAD_ENTRY( pxDelayedTaskList ); /*lint !e9079 void * is used as this macro is used with timers and co-routines too.  Alignment is known to be fine as the type of the pointer stored and retrieved is the same. */
 800ec56:	683b      	ldr	r3, [r7, #0]
 800ec58:	68db      	ldr	r3, [r3, #12]
 800ec5a:	68dc      	ldr	r4, [r3, #12]
					xItemValue = listGET_LIST_ITEM_VALUE( &( pxTCB->xStateListItem ) );
 800ec5c:	6863      	ldr	r3, [r4, #4]
					( void ) uxListRemove( &( pxTCB->xStateListItem ) );
 800ec5e:	1d21      	adds	r1, r4, #4
					if( xConstTickCount < xItemValue )
 800ec60:	429e      	cmp	r6, r3
					( void ) uxListRemove( &( pxTCB->xStateListItem ) );
 800ec62:	4608      	mov	r0, r1
					if( xConstTickCount < xItemValue )
 800ec64:	d2d4      	bcs.n	800ec10 <xTaskIncrementTick.part.0+0x38>
						xNextTaskUnblockTime = xItemValue;
 800ec66:	f8cb 3000 	str.w	r3, [fp]
						break; /*lint !e9011 Code structure here is deedmed easier to understand with multiple breaks. */
 800ec6a:	e011      	b.n	800ec90 <xTaskIncrementTick.part.0+0xb8>
			taskSWITCH_DELAYED_LISTS();
 800ec6c:	4b24      	ldr	r3, [pc, #144]	; (800ed00 <xTaskIncrementTick.part.0+0x128>)
 800ec6e:	681a      	ldr	r2, [r3, #0]
 800ec70:	6812      	ldr	r2, [r2, #0]
 800ec72:	b30a      	cbz	r2, 800ecb8 <xTaskIncrementTick.part.0+0xe0>
 800ec74:	f04f 0350 	mov.w	r3, #80	; 0x50
 800ec78:	f383 8811 	msr	BASEPRI, r3
 800ec7c:	f3bf 8f6f 	isb	sy
 800ec80:	f3bf 8f4f 	dsb	sy
 800ec84:	e7fe      	b.n	800ec84 <xTaskIncrementTick.part.0+0xac>
 800ec86:	f8df 908c 	ldr.w	r9, [pc, #140]	; 800ed14 <xTaskIncrementTick.part.0+0x13c>
 800ec8a:	f8df a08c 	ldr.w	sl, [pc, #140]	; 800ed18 <xTaskIncrementTick.part.0+0x140>
BaseType_t xSwitchRequired = pdFALSE;
 800ec8e:	2500      	movs	r5, #0
			if( listCURRENT_LIST_LENGTH( &( pxReadyTasksLists[ pxCurrentTCB->uxPriority ] ) ) > ( UBaseType_t ) 1 )
 800ec90:	f8da 3000 	ldr.w	r3, [sl]
			if( xYieldPending != pdFALSE )
 800ec94:	491b      	ldr	r1, [pc, #108]	; (800ed04 <xTaskIncrementTick.part.0+0x12c>)
			if( listCURRENT_LIST_LENGTH( &( pxReadyTasksLists[ pxCurrentTCB->uxPriority ] ) ) > ( UBaseType_t ) 1 )
 800ec96:	6adb      	ldr	r3, [r3, #44]	; 0x2c
 800ec98:	eb03 0383 	add.w	r3, r3, r3, lsl #2
 800ec9c:	009b      	lsls	r3, r3, #2
 800ec9e:	f859 2003 	ldr.w	r2, [r9, r3]
			if( xYieldPending != pdFALSE )
 800eca2:	680b      	ldr	r3, [r1, #0]
				xSwitchRequired = pdTRUE;
 800eca4:	2a02      	cmp	r2, #2
 800eca6:	bf28      	it	cs
 800eca8:	2501      	movcs	r5, #1
				xSwitchRequired = pdTRUE;
 800ecaa:	2b00      	cmp	r3, #0
}
 800ecac:	bf0c      	ite	eq
 800ecae:	4628      	moveq	r0, r5
 800ecb0:	2001      	movne	r0, #1
 800ecb2:	b003      	add	sp, #12
 800ecb4:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
			taskSWITCH_DELAYED_LISTS();
 800ecb8:	4a13      	ldr	r2, [pc, #76]	; (800ed08 <xTaskIncrementTick.part.0+0x130>)
 800ecba:	6818      	ldr	r0, [r3, #0]
 800ecbc:	6811      	ldr	r1, [r2, #0]
 800ecbe:	6019      	str	r1, [r3, #0]
 800ecc0:	4912      	ldr	r1, [pc, #72]	; (800ed0c <xTaskIncrementTick.part.0+0x134>)
 800ecc2:	6010      	str	r0, [r2, #0]
 800ecc4:	680a      	ldr	r2, [r1, #0]
 800ecc6:	3201      	adds	r2, #1
 800ecc8:	600a      	str	r2, [r1, #0]

static void prvResetNextTaskUnblockTime( void )
{
TCB_t *pxTCB;

	if( listLIST_IS_EMPTY( pxDelayedTaskList ) != pdFALSE )
 800ecca:	681a      	ldr	r2, [r3, #0]
 800eccc:	6812      	ldr	r2, [r2, #0]
 800ecce:	b932      	cbnz	r2, 800ecde <xTaskIncrementTick.part.0+0x106>
	{
		/* The new current delayed list is empty.  Set xNextTaskUnblockTime to
		the maximum possible value so it is	extremely unlikely that the
		if( xTickCount >= xNextTaskUnblockTime ) test will pass until
		there is an item in the delayed list. */
		xNextTaskUnblockTime = portMAX_DELAY;
 800ecd0:	f8df b03c 	ldr.w	fp, [pc, #60]	; 800ed10 <xTaskIncrementTick.part.0+0x138>
 800ecd4:	f04f 33ff 	mov.w	r3, #4294967295
 800ecd8:	f8cb 3000 	str.w	r3, [fp]
 800ecdc:	e787      	b.n	800ebee <xTaskIncrementTick.part.0+0x16>
	{
		/* The new current delayed list is not empty, get the value of
		the item at the head of the delayed list.  This is the time at
		which the task at the head of the delayed list should be removed
		from the Blocked state. */
		( pxTCB ) = listGET_OWNER_OF_HEAD_ENTRY( pxDelayedTaskList ); /*lint !e9079 void * is used as this macro is used with timers and co-routines too.  Alignment is known to be fine as the type of the pointer stored and retrieved is the same. */
 800ecde:	681b      	ldr	r3, [r3, #0]
		xNextTaskUnblockTime = listGET_LIST_ITEM_VALUE( &( ( pxTCB )->xStateListItem ) );
 800ece0:	f8df b02c 	ldr.w	fp, [pc, #44]	; 800ed10 <xTaskIncrementTick.part.0+0x138>
		( pxTCB ) = listGET_OWNER_OF_HEAD_ENTRY( pxDelayedTaskList ); /*lint !e9079 void * is used as this macro is used with timers and co-routines too.  Alignment is known to be fine as the type of the pointer stored and retrieved is the same. */
 800ece4:	68db      	ldr	r3, [r3, #12]
		xNextTaskUnblockTime = listGET_LIST_ITEM_VALUE( &( ( pxTCB )->xStateListItem ) );
 800ece6:	68db      	ldr	r3, [r3, #12]
 800ece8:	685b      	ldr	r3, [r3, #4]
 800ecea:	f8cb 3000 	str.w	r3, [fp]
	}
}
 800ecee:	e77e      	b.n	800ebee <xTaskIncrementTick.part.0+0x16>
					xNextTaskUnblockTime = portMAX_DELAY; /*lint !e961 MISRA exception as the casts are only redundant for some ports. */
 800ecf0:	f04f 33ff 	mov.w	r3, #4294967295
 800ecf4:	f8cb 3000 	str.w	r3, [fp]
					break;
 800ecf8:	e7ca      	b.n	800ec90 <xTaskIncrementTick.part.0+0xb8>
 800ecfa:	bf00      	nop
 800ecfc:	20012de4 	.word	0x20012de4
 800ed00:	200128f4 	.word	0x200128f4
 800ed04:	20012de8 	.word	0x20012de8
 800ed08:	200128f8 	.word	0x200128f8
 800ed0c:	20012d9c 	.word	0x20012d9c
 800ed10:	20012d98 	.word	0x20012d98
 800ed14:	200128fc 	.word	0x200128fc
 800ed18:	200128f0 	.word	0x200128f0
 800ed1c:	20012d6c 	.word	0x20012d6c

0800ed20 <xTaskResumeAll.part.0>:
BaseType_t xTaskResumeAll( void )
 800ed20:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
		--uxSchedulerSuspended;
 800ed24:	4d41      	ldr	r5, [pc, #260]	; (800ee2c <xTaskResumeAll.part.0+0x10c>)
BaseType_t xTaskResumeAll( void )
 800ed26:	b083      	sub	sp, #12
	taskENTER_CRITICAL();
 800ed28:	f7fe fc5c 	bl	800d5e4 <vPortEnterCritical>
		--uxSchedulerSuspended;
 800ed2c:	682b      	ldr	r3, [r5, #0]
 800ed2e:	3b01      	subs	r3, #1
 800ed30:	602b      	str	r3, [r5, #0]
		if( uxSchedulerSuspended == ( UBaseType_t ) pdFALSE )
 800ed32:	682b      	ldr	r3, [r5, #0]
 800ed34:	2b00      	cmp	r3, #0
 800ed36:	d161      	bne.n	800edfc <xTaskResumeAll.part.0+0xdc>
			if( uxCurrentNumberOfTasks > ( UBaseType_t ) 0U )
 800ed38:	4b3d      	ldr	r3, [pc, #244]	; (800ee30 <xTaskResumeAll.part.0+0x110>)
 800ed3a:	681b      	ldr	r3, [r3, #0]
 800ed3c:	2b00      	cmp	r3, #0
 800ed3e:	d05d      	beq.n	800edfc <xTaskResumeAll.part.0+0xdc>
				while( listLIST_IS_EMPTY( &xPendingReadyList ) == pdFALSE )
 800ed40:	4e3c      	ldr	r6, [pc, #240]	; (800ee34 <xTaskResumeAll.part.0+0x114>)
 800ed42:	6833      	ldr	r3, [r6, #0]
 800ed44:	2b00      	cmp	r3, #0
 800ed46:	d06e      	beq.n	800ee26 <xTaskResumeAll.part.0+0x106>
 800ed48:	4f3b      	ldr	r7, [pc, #236]	; (800ee38 <xTaskResumeAll.part.0+0x118>)
 800ed4a:	f8df 90fc 	ldr.w	r9, [pc, #252]	; 800ee48 <xTaskResumeAll.part.0+0x128>
 800ed4e:	f8df 80fc 	ldr.w	r8, [pc, #252]	; 800ee4c <xTaskResumeAll.part.0+0x12c>
 800ed52:	f8df a0fc 	ldr.w	sl, [pc, #252]	; 800ee50 <xTaskResumeAll.part.0+0x130>
					pxTCB = listGET_OWNER_OF_HEAD_ENTRY( ( &xPendingReadyList ) ); /*lint !e9079 void * is used as this macro is used with timers and co-routines too.  Alignment is known to be fine as the type of the pointer stored and retrieved is the same. */
 800ed56:	68f3      	ldr	r3, [r6, #12]
 800ed58:	68dc      	ldr	r4, [r3, #12]
					( void ) uxListRemove( &( pxTCB->xStateListItem ) );
 800ed5a:	f104 0b04 	add.w	fp, r4, #4
					( void ) uxListRemove( &( pxTCB->xEventListItem ) );
 800ed5e:	f104 0018 	add.w	r0, r4, #24
 800ed62:	f7fe fbc1 	bl	800d4e8 <uxListRemove>
					( void ) uxListRemove( &( pxTCB->xStateListItem ) );
 800ed66:	4658      	mov	r0, fp
 800ed68:	f7fe fbbe 	bl	800d4e8 <uxListRemove>
					prvAddTaskToReadyList( pxTCB );
 800ed6c:	6ae3      	ldr	r3, [r4, #44]	; 0x2c
 800ed6e:	683a      	ldr	r2, [r7, #0]
 800ed70:	eb03 0083 	add.w	r0, r3, r3, lsl #2
 800ed74:	4293      	cmp	r3, r2
 800ed76:	4659      	mov	r1, fp
 800ed78:	eb09 0080 	add.w	r0, r9, r0, lsl #2
 800ed7c:	bf88      	it	hi
 800ed7e:	603b      	strhi	r3, [r7, #0]
 800ed80:	f7fe fb8a 	bl	800d498 <vListInsertEnd>
					if( pxTCB->uxPriority >= pxCurrentTCB->uxPriority )
 800ed84:	f8d8 3000 	ldr.w	r3, [r8]
 800ed88:	6ae2      	ldr	r2, [r4, #44]	; 0x2c
 800ed8a:	6adb      	ldr	r3, [r3, #44]	; 0x2c
 800ed8c:	429a      	cmp	r2, r3
 800ed8e:	d33d      	bcc.n	800ee0c <xTaskResumeAll.part.0+0xec>
						xYieldPending = pdTRUE;
 800ed90:	2301      	movs	r3, #1
 800ed92:	f8ca 3000 	str.w	r3, [sl]
				while( listLIST_IS_EMPTY( &xPendingReadyList ) == pdFALSE )
 800ed96:	6833      	ldr	r3, [r6, #0]
 800ed98:	2b00      	cmp	r3, #0
 800ed9a:	d1dc      	bne.n	800ed56 <xTaskResumeAll.part.0+0x36>
	if( listLIST_IS_EMPTY( pxDelayedTaskList ) != pdFALSE )
 800ed9c:	4b27      	ldr	r3, [pc, #156]	; (800ee3c <xTaskResumeAll.part.0+0x11c>)
 800ed9e:	681a      	ldr	r2, [r3, #0]
 800eda0:	6812      	ldr	r2, [r2, #0]
 800eda2:	2a00      	cmp	r2, #0
 800eda4:	d03a      	beq.n	800ee1c <xTaskResumeAll.part.0+0xfc>
		( pxTCB ) = listGET_OWNER_OF_HEAD_ENTRY( pxDelayedTaskList ); /*lint !e9079 void * is used as this macro is used with timers and co-routines too.  Alignment is known to be fine as the type of the pointer stored and retrieved is the same. */
 800eda6:	681a      	ldr	r2, [r3, #0]
		xNextTaskUnblockTime = listGET_LIST_ITEM_VALUE( &( ( pxTCB )->xStateListItem ) );
 800eda8:	4b25      	ldr	r3, [pc, #148]	; (800ee40 <xTaskResumeAll.part.0+0x120>)
		( pxTCB ) = listGET_OWNER_OF_HEAD_ENTRY( pxDelayedTaskList ); /*lint !e9079 void * is used as this macro is used with timers and co-routines too.  Alignment is known to be fine as the type of the pointer stored and retrieved is the same. */
 800edaa:	68d2      	ldr	r2, [r2, #12]
		xNextTaskUnblockTime = listGET_LIST_ITEM_VALUE( &( ( pxTCB )->xStateListItem ) );
 800edac:	68d2      	ldr	r2, [r2, #12]
 800edae:	6852      	ldr	r2, [r2, #4]
 800edb0:	601a      	str	r2, [r3, #0]
					TickType_t xPendedCounts = xPendedTicks; /* Non-volatile copy. */
 800edb2:	4e24      	ldr	r6, [pc, #144]	; (800ee44 <xTaskResumeAll.part.0+0x124>)
 800edb4:	6834      	ldr	r4, [r6, #0]
					if( xPendedCounts > ( TickType_t ) 0U )
 800edb6:	b194      	cbz	r4, 800edde <xTaskResumeAll.part.0+0xbe>
								xYieldPending = pdTRUE;
 800edb8:	2701      	movs	r7, #1
 800edba:	e006      	b.n	800edca <xTaskResumeAll.part.0+0xaa>
 800edbc:	f7ff ff0c 	bl	800ebd8 <xTaskIncrementTick.part.0>
							if( xTaskIncrementTick() != pdFALSE )
 800edc0:	b108      	cbz	r0, 800edc6 <xTaskResumeAll.part.0+0xa6>
								xYieldPending = pdTRUE;
 800edc2:	f8ca 7000 	str.w	r7, [sl]
						} while( xPendedCounts > ( TickType_t ) 0U );
 800edc6:	3c01      	subs	r4, #1
 800edc8:	d008      	beq.n	800eddc <xTaskResumeAll.part.0+0xbc>
	if( uxSchedulerSuspended == ( UBaseType_t ) pdFALSE )
 800edca:	682b      	ldr	r3, [r5, #0]
 800edcc:	2b00      	cmp	r3, #0
 800edce:	d0f5      	beq.n	800edbc <xTaskResumeAll.part.0+0x9c>
		++xPendedTicks;
 800edd0:	6833      	ldr	r3, [r6, #0]
						} while( xPendedCounts > ( TickType_t ) 0U );
 800edd2:	3c01      	subs	r4, #1
		++xPendedTicks;
 800edd4:	f103 0301 	add.w	r3, r3, #1
 800edd8:	6033      	str	r3, [r6, #0]
						} while( xPendedCounts > ( TickType_t ) 0U );
 800edda:	d1f6      	bne.n	800edca <xTaskResumeAll.part.0+0xaa>
						xPendedTicks = 0;
 800eddc:	6034      	str	r4, [r6, #0]
				if( xYieldPending != pdFALSE )
 800edde:	f8da 3000 	ldr.w	r3, [sl]
 800ede2:	b15b      	cbz	r3, 800edfc <xTaskResumeAll.part.0+0xdc>
					taskYIELD_IF_USING_PREEMPTION();
 800ede4:	f04f 23e0 	mov.w	r3, #3758153728	; 0xe000e000
 800ede8:	f04f 5280 	mov.w	r2, #268435456	; 0x10000000
 800edec:	f8c3 2d04 	str.w	r2, [r3, #3332]	; 0xd04
 800edf0:	f3bf 8f4f 	dsb	sy
 800edf4:	f3bf 8f6f 	isb	sy
						xAlreadyYielded = pdTRUE;
 800edf8:	2001      	movs	r0, #1
 800edfa:	e000      	b.n	800edfe <xTaskResumeAll.part.0+0xde>
BaseType_t xAlreadyYielded = pdFALSE;
 800edfc:	2000      	movs	r0, #0
 800edfe:	9001      	str	r0, [sp, #4]
	taskEXIT_CRITICAL();
 800ee00:	f7fe fc12 	bl	800d628 <vPortExitCritical>
}
 800ee04:	9801      	ldr	r0, [sp, #4]
 800ee06:	b003      	add	sp, #12
 800ee08:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
				while( listLIST_IS_EMPTY( &xPendingReadyList ) == pdFALSE )
 800ee0c:	6833      	ldr	r3, [r6, #0]
 800ee0e:	2b00      	cmp	r3, #0
 800ee10:	d1a1      	bne.n	800ed56 <xTaskResumeAll.part.0+0x36>
	if( listLIST_IS_EMPTY( pxDelayedTaskList ) != pdFALSE )
 800ee12:	4b0a      	ldr	r3, [pc, #40]	; (800ee3c <xTaskResumeAll.part.0+0x11c>)
 800ee14:	681a      	ldr	r2, [r3, #0]
 800ee16:	6812      	ldr	r2, [r2, #0]
 800ee18:	2a00      	cmp	r2, #0
 800ee1a:	d1c4      	bne.n	800eda6 <xTaskResumeAll.part.0+0x86>
		xNextTaskUnblockTime = portMAX_DELAY;
 800ee1c:	4b08      	ldr	r3, [pc, #32]	; (800ee40 <xTaskResumeAll.part.0+0x120>)
 800ee1e:	f04f 32ff 	mov.w	r2, #4294967295
 800ee22:	601a      	str	r2, [r3, #0]
 800ee24:	e7c5      	b.n	800edb2 <xTaskResumeAll.part.0+0x92>
 800ee26:	f8df a028 	ldr.w	sl, [pc, #40]	; 800ee50 <xTaskResumeAll.part.0+0x130>
 800ee2a:	e7c2      	b.n	800edb2 <xTaskResumeAll.part.0+0x92>
 800ee2c:	20012d64 	.word	0x20012d64
 800ee30:	20012d5c 	.word	0x20012d5c
 800ee34:	20012da4 	.word	0x20012da4
 800ee38:	20012d6c 	.word	0x20012d6c
 800ee3c:	200128f4 	.word	0x200128f4
 800ee40:	20012d98 	.word	0x20012d98
 800ee44:	20012da0 	.word	0x20012da0
 800ee48:	200128fc 	.word	0x200128fc
 800ee4c:	200128f0 	.word	0x200128f0
 800ee50:	20012de8 	.word	0x20012de8

0800ee54 <xTaskCreateStatic>:
	{
 800ee54:	b530      	push	{r4, r5, lr}
 800ee56:	b087      	sub	sp, #28
 800ee58:	9c0b      	ldr	r4, [sp, #44]	; 0x2c
		configASSERT( puxStackBuffer != NULL );
 800ee5a:	b1c4      	cbz	r4, 800ee8e <xTaskCreateStatic+0x3a>
		configASSERT( pxTaskBuffer != NULL );
 800ee5c:	9d0c      	ldr	r5, [sp, #48]	; 0x30
 800ee5e:	b16d      	cbz	r5, 800ee7c <xTaskCreateStatic+0x28>
			volatile size_t xSize = sizeof( StaticTask_t );
 800ee60:	25ac      	movs	r5, #172	; 0xac
 800ee62:	9505      	str	r5, [sp, #20]
			configASSERT( xSize == sizeof( TCB_t ) );
 800ee64:	9d05      	ldr	r5, [sp, #20]
 800ee66:	2dac      	cmp	r5, #172	; 0xac
 800ee68:	d01a      	beq.n	800eea0 <xTaskCreateStatic+0x4c>
 800ee6a:	f04f 0350 	mov.w	r3, #80	; 0x50
 800ee6e:	f383 8811 	msr	BASEPRI, r3
 800ee72:	f3bf 8f6f 	isb	sy
 800ee76:	f3bf 8f4f 	dsb	sy
 800ee7a:	e7fe      	b.n	800ee7a <xTaskCreateStatic+0x26>
 800ee7c:	f04f 0350 	mov.w	r3, #80	; 0x50
 800ee80:	f383 8811 	msr	BASEPRI, r3
 800ee84:	f3bf 8f6f 	isb	sy
 800ee88:	f3bf 8f4f 	dsb	sy
		configASSERT( pxTaskBuffer != NULL );
 800ee8c:	e7fe      	b.n	800ee8c <xTaskCreateStatic+0x38>
 800ee8e:	f04f 0350 	mov.w	r3, #80	; 0x50
 800ee92:	f383 8811 	msr	BASEPRI, r3
 800ee96:	f3bf 8f6f 	isb	sy
 800ee9a:	f3bf 8f4f 	dsb	sy
		configASSERT( puxStackBuffer != NULL );
 800ee9e:	e7fe      	b.n	800ee9e <xTaskCreateStatic+0x4a>
			pxNewTCB->pxStack = ( StackType_t * ) puxStackBuffer;
 800eea0:	9d0c      	ldr	r5, [sp, #48]	; 0x30
 800eea2:	632c      	str	r4, [r5, #48]	; 0x30
				pxNewTCB->ucStaticallyAllocated = tskSTATICALLY_ALLOCATED_STACK_AND_TCB;
 800eea4:	2402      	movs	r4, #2
 800eea6:	f885 40a9 	strb.w	r4, [r5, #169]	; 0xa9
			prvInitialiseNewTask( pxTaskCode, pcName, ulStackDepth, pvParameters, uxPriority, &xReturn, pxNewTCB, NULL );
 800eeaa:	ac04      	add	r4, sp, #16
 800eeac:	e9cd 4501 	strd	r4, r5, [sp, #4]
 800eeb0:	9c0a      	ldr	r4, [sp, #40]	; 0x28
 800eeb2:	9400      	str	r4, [sp, #0]
			( void ) xSize; /* Prevent lint warning when configASSERT() is not used. */
 800eeb4:	9c05      	ldr	r4, [sp, #20]
			prvInitialiseNewTask( pxTaskCode, pcName, ulStackDepth, pvParameters, uxPriority, &xReturn, pxNewTCB, NULL );
 800eeb6:	f7ff fda9 	bl	800ea0c <prvInitialiseNewTask.constprop.0>
			prvAddNewTaskToReadyList( pxNewTCB );
 800eeba:	980c      	ldr	r0, [sp, #48]	; 0x30
 800eebc:	f7ff fd1e 	bl	800e8fc <prvAddNewTaskToReadyList>
	}
 800eec0:	9804      	ldr	r0, [sp, #16]
 800eec2:	b007      	add	sp, #28
 800eec4:	bd30      	pop	{r4, r5, pc}
 800eec6:	bf00      	nop

0800eec8 <xTaskCreate>:
	{
 800eec8:	e92d 43f0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, lr}
 800eecc:	4607      	mov	r7, r0
 800eece:	b085      	sub	sp, #20
			pxStack = pvPortMalloc( ( ( ( size_t ) usStackDepth ) * sizeof( StackType_t ) ) ); /*lint !e9079 All values returned by pvPortMalloc() have at least the alignment required by the MCU's stack and this allocation is the stack. */
 800eed0:	0090      	lsls	r0, r2, #2
	{
 800eed2:	4615      	mov	r5, r2
 800eed4:	4688      	mov	r8, r1
 800eed6:	4699      	mov	r9, r3
			pxStack = pvPortMalloc( ( ( ( size_t ) usStackDepth ) * sizeof( StackType_t ) ) ); /*lint !e9079 All values returned by pvPortMalloc() have at least the alignment required by the MCU's stack and this allocation is the stack. */
 800eed8:	f7fe f9ae 	bl	800d238 <pvPortMalloc>
			if( pxStack != NULL )
 800eedc:	b1d8      	cbz	r0, 800ef16 <xTaskCreate+0x4e>
				pxNewTCB = ( TCB_t * ) pvPortMalloc( sizeof( TCB_t ) ); /*lint !e9087 !e9079 All values returned by pvPortMalloc() have at least the alignment required by the MCU's stack, and the first member of TCB_t is always a pointer to the task's stack. */
 800eede:	4604      	mov	r4, r0
 800eee0:	20ac      	movs	r0, #172	; 0xac
 800eee2:	f7fe f9a9 	bl	800d238 <pvPortMalloc>
				if( pxNewTCB != NULL )
 800eee6:	4606      	mov	r6, r0
 800eee8:	b1d0      	cbz	r0, 800ef20 <xTaskCreate+0x58>
					pxNewTCB->pxStack = pxStack;
 800eeea:	6304      	str	r4, [r0, #48]	; 0x30
				pxNewTCB->ucStaticallyAllocated = tskDYNAMICALLY_ALLOCATED_STACK_AND_TCB;
 800eeec:	2400      	movs	r4, #0
 800eeee:	f886 40a9 	strb.w	r4, [r6, #169]	; 0xa9
			prvInitialiseNewTask( pxTaskCode, pcName, ( uint32_t ) usStackDepth, pvParameters, uxPriority, pxCreatedTask, pxNewTCB, NULL );
 800eef2:	9c0d      	ldr	r4, [sp, #52]	; 0x34
 800eef4:	9401      	str	r4, [sp, #4]
 800eef6:	9c0c      	ldr	r4, [sp, #48]	; 0x30
 800eef8:	9602      	str	r6, [sp, #8]
 800eefa:	464b      	mov	r3, r9
 800eefc:	462a      	mov	r2, r5
 800eefe:	4641      	mov	r1, r8
 800ef00:	4638      	mov	r0, r7
 800ef02:	9400      	str	r4, [sp, #0]
 800ef04:	f7ff fd82 	bl	800ea0c <prvInitialiseNewTask.constprop.0>
			prvAddNewTaskToReadyList( pxNewTCB );
 800ef08:	4630      	mov	r0, r6
 800ef0a:	f7ff fcf7 	bl	800e8fc <prvAddNewTaskToReadyList>
			xReturn = pdPASS;
 800ef0e:	2001      	movs	r0, #1
	}
 800ef10:	b005      	add	sp, #20
 800ef12:	e8bd 83f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, pc}
			xReturn = errCOULD_NOT_ALLOCATE_REQUIRED_MEMORY;
 800ef16:	f04f 30ff 	mov.w	r0, #4294967295
	}
 800ef1a:	b005      	add	sp, #20
 800ef1c:	e8bd 83f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, pc}
					vPortFree( pxStack );
 800ef20:	4620      	mov	r0, r4
 800ef22:	f7fe fa45 	bl	800d3b0 <vPortFree>
			xReturn = errCOULD_NOT_ALLOCATE_REQUIRED_MEMORY;
 800ef26:	f04f 30ff 	mov.w	r0, #4294967295
 800ef2a:	e7f1      	b.n	800ef10 <xTaskCreate+0x48>

0800ef2c <vTaskDelay>:
	{
 800ef2c:	b5f8      	push	{r3, r4, r5, r6, r7, lr}
		if( xTicksToDelay > ( TickType_t ) 0U )
 800ef2e:	b950      	cbnz	r0, 800ef46 <vTaskDelay+0x1a>
			portYIELD_WITHIN_API();
 800ef30:	f04f 23e0 	mov.w	r3, #3758153728	; 0xe000e000
 800ef34:	f04f 5280 	mov.w	r2, #268435456	; 0x10000000
 800ef38:	f8c3 2d04 	str.w	r2, [r3, #3332]	; 0xd04
 800ef3c:	f3bf 8f4f 	dsb	sy
 800ef40:	f3bf 8f6f 	isb	sy
	}
 800ef44:	bdf8      	pop	{r3, r4, r5, r6, r7, pc}
			configASSERT( uxSchedulerSuspended == 0 );
 800ef46:	4d1e      	ldr	r5, [pc, #120]	; (800efc0 <vTaskDelay+0x94>)
 800ef48:	682b      	ldr	r3, [r5, #0]
 800ef4a:	b143      	cbz	r3, 800ef5e <vTaskDelay+0x32>
 800ef4c:	f04f 0350 	mov.w	r3, #80	; 0x50
 800ef50:	f383 8811 	msr	BASEPRI, r3
 800ef54:	f3bf 8f6f 	isb	sy
 800ef58:	f3bf 8f4f 	dsb	sy
 800ef5c:	e7fe      	b.n	800ef5c <vTaskDelay+0x30>
	++uxSchedulerSuspended;
 800ef5e:	682b      	ldr	r3, [r5, #0]
 800ef60:	3301      	adds	r3, #1
 800ef62:	4604      	mov	r4, r0
 800ef64:	602b      	str	r3, [r5, #0]
/*-----------------------------------------------------------*/

static void prvAddCurrentTaskToDelayedList( TickType_t xTicksToWait, const BaseType_t xCanBlockIndefinitely )
{
TickType_t xTimeToWake;
const TickType_t xConstTickCount = xTickCount;
 800ef66:	4b17      	ldr	r3, [pc, #92]	; (800efc4 <vTaskDelay+0x98>)
	}
	#endif

	/* Remove the task from the ready list before adding it to the blocked list
	as the same list item is used for both lists. */
	if( uxListRemove( &( pxCurrentTCB->xStateListItem ) ) == ( UBaseType_t ) 0 )
 800ef68:	4e17      	ldr	r6, [pc, #92]	; (800efc8 <vTaskDelay+0x9c>)
const TickType_t xConstTickCount = xTickCount;
 800ef6a:	681f      	ldr	r7, [r3, #0]
	if( uxListRemove( &( pxCurrentTCB->xStateListItem ) ) == ( UBaseType_t ) 0 )
 800ef6c:	6830      	ldr	r0, [r6, #0]
 800ef6e:	3004      	adds	r0, #4
 800ef70:	f7fe faba 	bl	800d4e8 <uxListRemove>
			does not occur.  This may overflow but this doesn't matter, the
			kernel will manage it correctly. */
			xTimeToWake = xConstTickCount + xTicksToWait;

			/* The list item will be inserted in wake time order. */
			listSET_LIST_ITEM_VALUE( &( pxCurrentTCB->xStateListItem ), xTimeToWake );
 800ef74:	6833      	ldr	r3, [r6, #0]
 800ef76:	19e4      	adds	r4, r4, r7
 800ef78:	605c      	str	r4, [r3, #4]

			if( xTimeToWake < xConstTickCount )
 800ef7a:	d310      	bcc.n	800ef9e <vTaskDelay+0x72>
			{
				/* Wake time has overflowed.  Place this item in the overflow
				list. */
				vListInsert( pxOverflowDelayedTaskList, &( pxCurrentTCB->xStateListItem ) );
 800ef7c:	4b13      	ldr	r3, [pc, #76]	; (800efcc <vTaskDelay+0xa0>)
 800ef7e:	6818      	ldr	r0, [r3, #0]
 800ef80:	6831      	ldr	r1, [r6, #0]
 800ef82:	3104      	adds	r1, #4
 800ef84:	f7fe fa98 	bl	800d4b8 <vListInsert>
	configASSERT( uxSchedulerSuspended );
 800ef88:	682b      	ldr	r3, [r5, #0]
 800ef8a:	b9a3      	cbnz	r3, 800efb6 <vTaskDelay+0x8a>
 800ef8c:	f04f 0350 	mov.w	r3, #80	; 0x50
 800ef90:	f383 8811 	msr	BASEPRI, r3
 800ef94:	f3bf 8f6f 	isb	sy
 800ef98:	f3bf 8f4f 	dsb	sy
 800ef9c:	e7fe      	b.n	800ef9c <vTaskDelay+0x70>
			}
			else
			{
				/* The wake time has not overflowed, so the current block list
				is used. */
				vListInsert( pxDelayedTaskList, &( pxCurrentTCB->xStateListItem ) );
 800ef9e:	4b0c      	ldr	r3, [pc, #48]	; (800efd0 <vTaskDelay+0xa4>)
 800efa0:	6818      	ldr	r0, [r3, #0]
 800efa2:	6831      	ldr	r1, [r6, #0]
 800efa4:	3104      	adds	r1, #4
 800efa6:	f7fe fa87 	bl	800d4b8 <vListInsert>

				/* If the task entering the blocked state was placed at the
				head of the list of blocked tasks then xNextTaskUnblockTime
				needs to be updated too. */
				if( xTimeToWake < xNextTaskUnblockTime )
 800efaa:	4b0a      	ldr	r3, [pc, #40]	; (800efd4 <vTaskDelay+0xa8>)
 800efac:	681a      	ldr	r2, [r3, #0]
 800efae:	4294      	cmp	r4, r2
				{
					xNextTaskUnblockTime = xTimeToWake;
 800efb0:	bf38      	it	cc
 800efb2:	601c      	strcc	r4, [r3, #0]
 800efb4:	e7e8      	b.n	800ef88 <vTaskDelay+0x5c>
 800efb6:	f7ff feb3 	bl	800ed20 <xTaskResumeAll.part.0>
		if( xAlreadyYielded == pdFALSE )
 800efba:	2800      	cmp	r0, #0
 800efbc:	d0b8      	beq.n	800ef30 <vTaskDelay+0x4>
	}
 800efbe:	bdf8      	pop	{r3, r4, r5, r6, r7, pc}
 800efc0:	20012d64 	.word	0x20012d64
 800efc4:	20012de4 	.word	0x20012de4
 800efc8:	200128f0 	.word	0x200128f0
 800efcc:	200128f8 	.word	0x200128f8
 800efd0:	200128f4 	.word	0x200128f4
 800efd4:	20012d98 	.word	0x20012d98

0800efd8 <vTaskStartScheduler>:
{
 800efd8:	b530      	push	{r4, r5, lr}
 800efda:	b08b      	sub	sp, #44	; 0x2c
		vApplicationGetIdleTaskMemory( &pxIdleTaskTCBBuffer, &pxIdleTaskStackBuffer, &ulIdleTaskStackSize );
 800efdc:	aa07      	add	r2, sp, #28
		StaticTask_t *pxIdleTaskTCBBuffer = NULL;
 800efde:	2400      	movs	r4, #0
		vApplicationGetIdleTaskMemory( &pxIdleTaskTCBBuffer, &pxIdleTaskStackBuffer, &ulIdleTaskStackSize );
 800efe0:	a906      	add	r1, sp, #24
 800efe2:	a805      	add	r0, sp, #20
		StackType_t *pxIdleTaskStackBuffer = NULL;
 800efe4:	e9cd 4405 	strd	r4, r4, [sp, #20]
		vApplicationGetIdleTaskMemory( &pxIdleTaskTCBBuffer, &pxIdleTaskStackBuffer, &ulIdleTaskStackSize );
 800efe8:	f7fe f908 	bl	800d1fc <vApplicationGetIdleTaskMemory>
		xIdleTaskHandle = xTaskCreateStatic(	prvIdleTask,
 800efec:	e9dd 3206 	ldrd	r3, r2, [sp, #24]
 800eff0:	9d05      	ldr	r5, [sp, #20]
		configASSERT( puxStackBuffer != NULL );
 800eff2:	b1bb      	cbz	r3, 800f024 <vTaskStartScheduler+0x4c>
		configASSERT( pxTaskBuffer != NULL );
 800eff4:	b16d      	cbz	r5, 800f012 <vTaskStartScheduler+0x3a>
			volatile size_t xSize = sizeof( StaticTask_t );
 800eff6:	21ac      	movs	r1, #172	; 0xac
 800eff8:	9109      	str	r1, [sp, #36]	; 0x24
			configASSERT( xSize == sizeof( TCB_t ) );
 800effa:	9909      	ldr	r1, [sp, #36]	; 0x24
 800effc:	29ac      	cmp	r1, #172	; 0xac
 800effe:	d01a      	beq.n	800f036 <vTaskStartScheduler+0x5e>
 800f000:	f04f 0350 	mov.w	r3, #80	; 0x50
 800f004:	f383 8811 	msr	BASEPRI, r3
 800f008:	f3bf 8f6f 	isb	sy
 800f00c:	f3bf 8f4f 	dsb	sy
 800f010:	e7fe      	b.n	800f010 <vTaskStartScheduler+0x38>
 800f012:	f04f 0350 	mov.w	r3, #80	; 0x50
 800f016:	f383 8811 	msr	BASEPRI, r3
 800f01a:	f3bf 8f6f 	isb	sy
 800f01e:	f3bf 8f4f 	dsb	sy
		configASSERT( pxTaskBuffer != NULL );
 800f022:	e7fe      	b.n	800f022 <vTaskStartScheduler+0x4a>
 800f024:	f04f 0350 	mov.w	r3, #80	; 0x50
 800f028:	f383 8811 	msr	BASEPRI, r3
 800f02c:	f3bf 8f6f 	isb	sy
 800f030:	f3bf 8f4f 	dsb	sy
		configASSERT( puxStackBuffer != NULL );
 800f034:	e7fe      	b.n	800f034 <vTaskStartScheduler+0x5c>
				pxNewTCB->ucStaticallyAllocated = tskSTATICALLY_ALLOCATED_STACK_AND_TCB;
 800f036:	2102      	movs	r1, #2
			prvInitialiseNewTask( pxTaskCode, pcName, ulStackDepth, pvParameters, uxPriority, &xReturn, pxNewTCB, NULL );
 800f038:	a808      	add	r0, sp, #32
			pxNewTCB->pxStack = ( StackType_t * ) puxStackBuffer;
 800f03a:	632b      	str	r3, [r5, #48]	; 0x30
				pxNewTCB->ucStaticallyAllocated = tskSTATICALLY_ALLOCATED_STACK_AND_TCB;
 800f03c:	f885 10a9 	strb.w	r1, [r5, #169]	; 0xa9
			prvInitialiseNewTask( pxTaskCode, pcName, ulStackDepth, pvParameters, uxPriority, &xReturn, pxNewTCB, NULL );
 800f040:	4623      	mov	r3, r4
 800f042:	e9cd 0501 	strd	r0, r5, [sp, #4]
 800f046:	491b      	ldr	r1, [pc, #108]	; (800f0b4 <vTaskStartScheduler+0xdc>)
			( void ) xSize; /* Prevent lint warning when configASSERT() is not used. */
 800f048:	9809      	ldr	r0, [sp, #36]	; 0x24
			prvInitialiseNewTask( pxTaskCode, pcName, ulStackDepth, pvParameters, uxPriority, &xReturn, pxNewTCB, NULL );
 800f04a:	9400      	str	r4, [sp, #0]
 800f04c:	481a      	ldr	r0, [pc, #104]	; (800f0b8 <vTaskStartScheduler+0xe0>)
 800f04e:	f7ff fcdd 	bl	800ea0c <prvInitialiseNewTask.constprop.0>
			prvAddNewTaskToReadyList( pxNewTCB );
 800f052:	4628      	mov	r0, r5
 800f054:	f7ff fc52 	bl	800e8fc <prvAddNewTaskToReadyList>
		return xReturn;
 800f058:	9b08      	ldr	r3, [sp, #32]
		if( xIdleTaskHandle != NULL )
 800f05a:	b1eb      	cbz	r3, 800f098 <vTaskStartScheduler+0xc0>
			xReturn = xTimerCreateTimerTask();
 800f05c:	f000 fc6e 	bl	800f93c <xTimerCreateTimerTask>
	if( xReturn == pdPASS )
 800f060:	2801      	cmp	r0, #1
 800f062:	d11b      	bne.n	800f09c <vTaskStartScheduler+0xc4>
 800f064:	f04f 0350 	mov.w	r3, #80	; 0x50
 800f068:	f383 8811 	msr	BASEPRI, r3
 800f06c:	f3bf 8f6f 	isb	sy
 800f070:	f3bf 8f4f 	dsb	sy
			_impure_ptr = &( pxCurrentTCB->xNewLib_reent );
 800f074:	4b11      	ldr	r3, [pc, #68]	; (800f0bc <vTaskStartScheduler+0xe4>)
 800f076:	4a12      	ldr	r2, [pc, #72]	; (800f0c0 <vTaskStartScheduler+0xe8>)
 800f078:	681b      	ldr	r3, [r3, #0]
		xNextTaskUnblockTime = portMAX_DELAY;
 800f07a:	4912      	ldr	r1, [pc, #72]	; (800f0c4 <vTaskStartScheduler+0xec>)
			_impure_ptr = &( pxCurrentTCB->xNewLib_reent );
 800f07c:	3358      	adds	r3, #88	; 0x58
 800f07e:	6013      	str	r3, [r2, #0]
		xSchedulerRunning = pdTRUE;
 800f080:	4a11      	ldr	r2, [pc, #68]	; (800f0c8 <vTaskStartScheduler+0xf0>)
		xTickCount = ( TickType_t ) configINITIAL_TICK_COUNT;
 800f082:	4b12      	ldr	r3, [pc, #72]	; (800f0cc <vTaskStartScheduler+0xf4>)
		xNextTaskUnblockTime = portMAX_DELAY;
 800f084:	f04f 35ff 	mov.w	r5, #4294967295
 800f088:	600d      	str	r5, [r1, #0]
		xSchedulerRunning = pdTRUE;
 800f08a:	6010      	str	r0, [r2, #0]
		xTickCount = ( TickType_t ) configINITIAL_TICK_COUNT;
 800f08c:	601c      	str	r4, [r3, #0]
}
 800f08e:	b00b      	add	sp, #44	; 0x2c
 800f090:	e8bd 4030 	ldmia.w	sp!, {r4, r5, lr}
		if( xPortStartScheduler() != pdFALSE )
 800f094:	f7fe bb38 	b.w	800d708 <xPortStartScheduler>
}
 800f098:	b00b      	add	sp, #44	; 0x2c
 800f09a:	bd30      	pop	{r4, r5, pc}
		configASSERT( xReturn != errCOULD_NOT_ALLOCATE_REQUIRED_MEMORY );
 800f09c:	3001      	adds	r0, #1
 800f09e:	d1fb      	bne.n	800f098 <vTaskStartScheduler+0xc0>
 800f0a0:	f04f 0350 	mov.w	r3, #80	; 0x50
 800f0a4:	f383 8811 	msr	BASEPRI, r3
 800f0a8:	f3bf 8f6f 	isb	sy
 800f0ac:	f3bf 8f4f 	dsb	sy
 800f0b0:	e7fe      	b.n	800f0b0 <vTaskStartScheduler+0xd8>
 800f0b2:	bf00      	nop
 800f0b4:	0802e08c 	.word	0x0802e08c
 800f0b8:	0800eb39 	.word	0x0800eb39
 800f0bc:	200128f0 	.word	0x200128f0
 800f0c0:	20000160 	.word	0x20000160
 800f0c4:	20012d98 	.word	0x20012d98
 800f0c8:	20012db8 	.word	0x20012db8
 800f0cc:	20012de4 	.word	0x20012de4

0800f0d0 <vTaskSuspendAll>:
	++uxSchedulerSuspended;
 800f0d0:	4a02      	ldr	r2, [pc, #8]	; (800f0dc <vTaskSuspendAll+0xc>)
 800f0d2:	6813      	ldr	r3, [r2, #0]
 800f0d4:	3301      	adds	r3, #1
 800f0d6:	6013      	str	r3, [r2, #0]
}
 800f0d8:	4770      	bx	lr
 800f0da:	bf00      	nop
 800f0dc:	20012d64 	.word	0x20012d64

0800f0e0 <xTaskResumeAll>:
	configASSERT( uxSchedulerSuspended );
 800f0e0:	4b06      	ldr	r3, [pc, #24]	; (800f0fc <xTaskResumeAll+0x1c>)
 800f0e2:	681b      	ldr	r3, [r3, #0]
 800f0e4:	b943      	cbnz	r3, 800f0f8 <xTaskResumeAll+0x18>
 800f0e6:	f04f 0350 	mov.w	r3, #80	; 0x50
 800f0ea:	f383 8811 	msr	BASEPRI, r3
 800f0ee:	f3bf 8f6f 	isb	sy
 800f0f2:	f3bf 8f4f 	dsb	sy
 800f0f6:	e7fe      	b.n	800f0f6 <xTaskResumeAll+0x16>
 800f0f8:	f7ff be12 	b.w	800ed20 <xTaskResumeAll.part.0>
 800f0fc:	20012d64 	.word	0x20012d64

0800f100 <xTaskGetTickCount>:
		xTicks = xTickCount;
 800f100:	4b01      	ldr	r3, [pc, #4]	; (800f108 <xTaskGetTickCount+0x8>)
 800f102:	6818      	ldr	r0, [r3, #0]
}
 800f104:	4770      	bx	lr
 800f106:	bf00      	nop
 800f108:	20012de4 	.word	0x20012de4

0800f10c <xTaskIncrementTick>:
	if( uxSchedulerSuspended == ( UBaseType_t ) pdFALSE )
 800f10c:	4b05      	ldr	r3, [pc, #20]	; (800f124 <xTaskIncrementTick+0x18>)
 800f10e:	681b      	ldr	r3, [r3, #0]
 800f110:	b90b      	cbnz	r3, 800f116 <xTaskIncrementTick+0xa>
 800f112:	f7ff bd61 	b.w	800ebd8 <xTaskIncrementTick.part.0>
		++xPendedTicks;
 800f116:	4a04      	ldr	r2, [pc, #16]	; (800f128 <xTaskIncrementTick+0x1c>)
 800f118:	6813      	ldr	r3, [r2, #0]
 800f11a:	3301      	adds	r3, #1
}
 800f11c:	2000      	movs	r0, #0
		++xPendedTicks;
 800f11e:	6013      	str	r3, [r2, #0]
}
 800f120:	4770      	bx	lr
 800f122:	bf00      	nop
 800f124:	20012d64 	.word	0x20012d64
 800f128:	20012da0 	.word	0x20012da0

0800f12c <vTaskSwitchContext>:
	if( uxSchedulerSuspended != ( UBaseType_t ) pdFALSE )
 800f12c:	4b1f      	ldr	r3, [pc, #124]	; (800f1ac <vTaskSwitchContext+0x80>)
 800f12e:	681b      	ldr	r3, [r3, #0]
 800f130:	b11b      	cbz	r3, 800f13a <vTaskSwitchContext+0xe>
		xYieldPending = pdTRUE;
 800f132:	4b1f      	ldr	r3, [pc, #124]	; (800f1b0 <vTaskSwitchContext+0x84>)
 800f134:	2201      	movs	r2, #1
 800f136:	601a      	str	r2, [r3, #0]
 800f138:	4770      	bx	lr
		xYieldPending = pdFALSE;
 800f13a:	4a1d      	ldr	r2, [pc, #116]	; (800f1b0 <vTaskSwitchContext+0x84>)
		taskSELECT_HIGHEST_PRIORITY_TASK(); /*lint !e9079 void * is used as this macro is used with timers and co-routines too.  Alignment is known to be fine as the type of the pointer stored and retrieved is the same. */
 800f13c:	491d      	ldr	r1, [pc, #116]	; (800f1b4 <vTaskSwitchContext+0x88>)
{
 800f13e:	b410      	push	{r4}
		taskSELECT_HIGHEST_PRIORITY_TASK(); /*lint !e9079 void * is used as this macro is used with timers and co-routines too.  Alignment is known to be fine as the type of the pointer stored and retrieved is the same. */
 800f140:	4c1d      	ldr	r4, [pc, #116]	; (800f1b8 <vTaskSwitchContext+0x8c>)
		xYieldPending = pdFALSE;
 800f142:	6013      	str	r3, [r2, #0]
		taskSELECT_HIGHEST_PRIORITY_TASK(); /*lint !e9079 void * is used as this macro is used with timers and co-routines too.  Alignment is known to be fine as the type of the pointer stored and retrieved is the same. */
 800f144:	6823      	ldr	r3, [r4, #0]
 800f146:	eb03 0283 	add.w	r2, r3, r3, lsl #2
 800f14a:	0092      	lsls	r2, r2, #2
 800f14c:	0098      	lsls	r0, r3, #2
 800f14e:	588a      	ldr	r2, [r1, r2]
 800f150:	b942      	cbnz	r2, 800f164 <vTaskSwitchContext+0x38>
 800f152:	b313      	cbz	r3, 800f19a <vTaskSwitchContext+0x6e>
 800f154:	3b01      	subs	r3, #1
 800f156:	eb03 0283 	add.w	r2, r3, r3, lsl #2
 800f15a:	0098      	lsls	r0, r3, #2
 800f15c:	f851 2022 	ldr.w	r2, [r1, r2, lsl #2]
 800f160:	2a00      	cmp	r2, #0
 800f162:	d0f6      	beq.n	800f152 <vTaskSwitchContext+0x26>
 800f164:	4418      	add	r0, r3
 800f166:	eb01 0c80 	add.w	ip, r1, r0, lsl #2
 800f16a:	4662      	mov	r2, ip
 800f16c:	f8dc 1004 	ldr.w	r1, [ip, #4]
 800f170:	6849      	ldr	r1, [r1, #4]
 800f172:	f8cc 1004 	str.w	r1, [ip, #4]
 800f176:	3208      	adds	r2, #8
 800f178:	4291      	cmp	r1, r2
 800f17a:	bf08      	it	eq
 800f17c:	6849      	ldreq	r1, [r1, #4]
 800f17e:	4a0f      	ldr	r2, [pc, #60]	; (800f1bc <vTaskSwitchContext+0x90>)
 800f180:	bf08      	it	eq
 800f182:	f8cc 1004 	streq.w	r1, [ip, #4]
 800f186:	68c9      	ldr	r1, [r1, #12]
 800f188:	6011      	str	r1, [r2, #0]
 800f18a:	6023      	str	r3, [r4, #0]
			_impure_ptr = &( pxCurrentTCB->xNewLib_reent );
 800f18c:	6813      	ldr	r3, [r2, #0]
 800f18e:	4a0c      	ldr	r2, [pc, #48]	; (800f1c0 <vTaskSwitchContext+0x94>)
}
 800f190:	f85d 4b04 	ldr.w	r4, [sp], #4
			_impure_ptr = &( pxCurrentTCB->xNewLib_reent );
 800f194:	3358      	adds	r3, #88	; 0x58
 800f196:	6013      	str	r3, [r2, #0]
}
 800f198:	4770      	bx	lr
 800f19a:	f04f 0350 	mov.w	r3, #80	; 0x50
 800f19e:	f383 8811 	msr	BASEPRI, r3
 800f1a2:	f3bf 8f6f 	isb	sy
 800f1a6:	f3bf 8f4f 	dsb	sy
		taskSELECT_HIGHEST_PRIORITY_TASK(); /*lint !e9079 void * is used as this macro is used with timers and co-routines too.  Alignment is known to be fine as the type of the pointer stored and retrieved is the same. */
 800f1aa:	e7fe      	b.n	800f1aa <vTaskSwitchContext+0x7e>
 800f1ac:	20012d64 	.word	0x20012d64
 800f1b0:	20012de8 	.word	0x20012de8
 800f1b4:	200128fc 	.word	0x200128fc
 800f1b8:	20012d6c 	.word	0x20012d6c
 800f1bc:	200128f0 	.word	0x200128f0
 800f1c0:	20000160 	.word	0x20000160

0800f1c4 <vTaskPlaceOnEventList>:
	configASSERT( pxEventList );
 800f1c4:	b1d0      	cbz	r0, 800f1fc <vTaskPlaceOnEventList+0x38>
{
 800f1c6:	b570      	push	{r4, r5, r6, lr}
	vListInsert( pxEventList, &( pxCurrentTCB->xEventListItem ) );
 800f1c8:	4d1a      	ldr	r5, [pc, #104]	; (800f234 <vTaskPlaceOnEventList+0x70>)
 800f1ca:	460c      	mov	r4, r1
 800f1cc:	6829      	ldr	r1, [r5, #0]
 800f1ce:	3118      	adds	r1, #24
 800f1d0:	f7fe f972 	bl	800d4b8 <vListInsert>
const TickType_t xConstTickCount = xTickCount;
 800f1d4:	4b18      	ldr	r3, [pc, #96]	; (800f238 <vTaskPlaceOnEventList+0x74>)
 800f1d6:	681e      	ldr	r6, [r3, #0]
	if( uxListRemove( &( pxCurrentTCB->xStateListItem ) ) == ( UBaseType_t ) 0 )
 800f1d8:	6828      	ldr	r0, [r5, #0]
 800f1da:	3004      	adds	r0, #4
 800f1dc:	f7fe f984 	bl	800d4e8 <uxListRemove>
		if( ( xTicksToWait == portMAX_DELAY ) && ( xCanBlockIndefinitely != pdFALSE ) )
 800f1e0:	1c63      	adds	r3, r4, #1
 800f1e2:	d014      	beq.n	800f20e <vTaskPlaceOnEventList+0x4a>
			listSET_LIST_ITEM_VALUE( &( pxCurrentTCB->xStateListItem ), xTimeToWake );
 800f1e4:	682b      	ldr	r3, [r5, #0]
 800f1e6:	19a4      	adds	r4, r4, r6
 800f1e8:	605c      	str	r4, [r3, #4]
			if( xTimeToWake < xConstTickCount )
 800f1ea:	d317      	bcc.n	800f21c <vTaskPlaceOnEventList+0x58>
				vListInsert( pxOverflowDelayedTaskList, &( pxCurrentTCB->xStateListItem ) );
 800f1ec:	4b13      	ldr	r3, [pc, #76]	; (800f23c <vTaskPlaceOnEventList+0x78>)
 800f1ee:	6818      	ldr	r0, [r3, #0]
 800f1f0:	6829      	ldr	r1, [r5, #0]
}
 800f1f2:	e8bd 4070 	ldmia.w	sp!, {r4, r5, r6, lr}
				vListInsert( pxOverflowDelayedTaskList, &( pxCurrentTCB->xStateListItem ) );
 800f1f6:	3104      	adds	r1, #4
 800f1f8:	f7fe b95e 	b.w	800d4b8 <vListInsert>
 800f1fc:	f04f 0350 	mov.w	r3, #80	; 0x50
 800f200:	f383 8811 	msr	BASEPRI, r3
 800f204:	f3bf 8f6f 	isb	sy
 800f208:	f3bf 8f4f 	dsb	sy
	configASSERT( pxEventList );
 800f20c:	e7fe      	b.n	800f20c <vTaskPlaceOnEventList+0x48>
			vListInsertEnd( &xSuspendedTaskList, &( pxCurrentTCB->xStateListItem ) );
 800f20e:	6829      	ldr	r1, [r5, #0]
 800f210:	480b      	ldr	r0, [pc, #44]	; (800f240 <vTaskPlaceOnEventList+0x7c>)
}
 800f212:	e8bd 4070 	ldmia.w	sp!, {r4, r5, r6, lr}
			vListInsertEnd( &xSuspendedTaskList, &( pxCurrentTCB->xStateListItem ) );
 800f216:	3104      	adds	r1, #4
 800f218:	f7fe b93e 	b.w	800d498 <vListInsertEnd>
				vListInsert( pxDelayedTaskList, &( pxCurrentTCB->xStateListItem ) );
 800f21c:	4b09      	ldr	r3, [pc, #36]	; (800f244 <vTaskPlaceOnEventList+0x80>)
 800f21e:	6818      	ldr	r0, [r3, #0]
 800f220:	6829      	ldr	r1, [r5, #0]
 800f222:	3104      	adds	r1, #4
 800f224:	f7fe f948 	bl	800d4b8 <vListInsert>
				if( xTimeToWake < xNextTaskUnblockTime )
 800f228:	4b07      	ldr	r3, [pc, #28]	; (800f248 <vTaskPlaceOnEventList+0x84>)
 800f22a:	681a      	ldr	r2, [r3, #0]
 800f22c:	4294      	cmp	r4, r2
					xNextTaskUnblockTime = xTimeToWake;
 800f22e:	bf38      	it	cc
 800f230:	601c      	strcc	r4, [r3, #0]
}
 800f232:	bd70      	pop	{r4, r5, r6, pc}
 800f234:	200128f0 	.word	0x200128f0
 800f238:	20012de4 	.word	0x20012de4
 800f23c:	200128f8 	.word	0x200128f8
 800f240:	20012dbc 	.word	0x20012dbc
 800f244:	200128f4 	.word	0x200128f4
 800f248:	20012d98 	.word	0x20012d98

0800f24c <vTaskPlaceOnEventListRestricted>:
		configASSERT( pxEventList );
 800f24c:	b330      	cbz	r0, 800f29c <vTaskPlaceOnEventListRestricted+0x50>
	{
 800f24e:	b570      	push	{r4, r5, r6, lr}
		vListInsertEnd( pxEventList, &( pxCurrentTCB->xEventListItem ) );
 800f250:	4e1d      	ldr	r6, [pc, #116]	; (800f2c8 <vTaskPlaceOnEventListRestricted+0x7c>)
 800f252:	460c      	mov	r4, r1
 800f254:	6831      	ldr	r1, [r6, #0]
 800f256:	4615      	mov	r5, r2
 800f258:	3118      	adds	r1, #24
 800f25a:	f7fe f91d 	bl	800d498 <vListInsertEnd>
const TickType_t xConstTickCount = xTickCount;
 800f25e:	4b1b      	ldr	r3, [pc, #108]	; (800f2cc <vTaskPlaceOnEventListRestricted+0x80>)
		if( xWaitIndefinitely != pdFALSE )
 800f260:	b985      	cbnz	r5, 800f284 <vTaskPlaceOnEventListRestricted+0x38>
const TickType_t xConstTickCount = xTickCount;
 800f262:	681d      	ldr	r5, [r3, #0]
	if( uxListRemove( &( pxCurrentTCB->xStateListItem ) ) == ( UBaseType_t ) 0 )
 800f264:	6830      	ldr	r0, [r6, #0]
 800f266:	3004      	adds	r0, #4
 800f268:	f7fe f93e 	bl	800d4e8 <uxListRemove>
			listSET_LIST_ITEM_VALUE( &( pxCurrentTCB->xStateListItem ), xTimeToWake );
 800f26c:	6833      	ldr	r3, [r6, #0]
 800f26e:	1964      	adds	r4, r4, r5
 800f270:	605c      	str	r4, [r3, #4]
			if( xTimeToWake < xConstTickCount )
 800f272:	d31c      	bcc.n	800f2ae <vTaskPlaceOnEventListRestricted+0x62>
				vListInsert( pxOverflowDelayedTaskList, &( pxCurrentTCB->xStateListItem ) );
 800f274:	4b16      	ldr	r3, [pc, #88]	; (800f2d0 <vTaskPlaceOnEventListRestricted+0x84>)
 800f276:	6818      	ldr	r0, [r3, #0]
 800f278:	6831      	ldr	r1, [r6, #0]
	}
 800f27a:	e8bd 4070 	ldmia.w	sp!, {r4, r5, r6, lr}
				vListInsert( pxOverflowDelayedTaskList, &( pxCurrentTCB->xStateListItem ) );
 800f27e:	3104      	adds	r1, #4
 800f280:	f7fe b91a 	b.w	800d4b8 <vListInsert>
const TickType_t xConstTickCount = xTickCount;
 800f284:	681b      	ldr	r3, [r3, #0]
	if( uxListRemove( &( pxCurrentTCB->xStateListItem ) ) == ( UBaseType_t ) 0 )
 800f286:	6830      	ldr	r0, [r6, #0]
 800f288:	3004      	adds	r0, #4
 800f28a:	f7fe f92d 	bl	800d4e8 <uxListRemove>
			vListInsertEnd( &xSuspendedTaskList, &( pxCurrentTCB->xStateListItem ) );
 800f28e:	6831      	ldr	r1, [r6, #0]
 800f290:	4810      	ldr	r0, [pc, #64]	; (800f2d4 <vTaskPlaceOnEventListRestricted+0x88>)
	}
 800f292:	e8bd 4070 	ldmia.w	sp!, {r4, r5, r6, lr}
			vListInsertEnd( &xSuspendedTaskList, &( pxCurrentTCB->xStateListItem ) );
 800f296:	3104      	adds	r1, #4
 800f298:	f7fe b8fe 	b.w	800d498 <vListInsertEnd>
 800f29c:	f04f 0350 	mov.w	r3, #80	; 0x50
 800f2a0:	f383 8811 	msr	BASEPRI, r3
 800f2a4:	f3bf 8f6f 	isb	sy
 800f2a8:	f3bf 8f4f 	dsb	sy
		configASSERT( pxEventList );
 800f2ac:	e7fe      	b.n	800f2ac <vTaskPlaceOnEventListRestricted+0x60>
				vListInsert( pxDelayedTaskList, &( pxCurrentTCB->xStateListItem ) );
 800f2ae:	4b0a      	ldr	r3, [pc, #40]	; (800f2d8 <vTaskPlaceOnEventListRestricted+0x8c>)
 800f2b0:	6818      	ldr	r0, [r3, #0]
 800f2b2:	6831      	ldr	r1, [r6, #0]
 800f2b4:	3104      	adds	r1, #4
 800f2b6:	f7fe f8ff 	bl	800d4b8 <vListInsert>
				if( xTimeToWake < xNextTaskUnblockTime )
 800f2ba:	4b08      	ldr	r3, [pc, #32]	; (800f2dc <vTaskPlaceOnEventListRestricted+0x90>)
 800f2bc:	681a      	ldr	r2, [r3, #0]
 800f2be:	4294      	cmp	r4, r2
					xNextTaskUnblockTime = xTimeToWake;
 800f2c0:	bf38      	it	cc
 800f2c2:	601c      	strcc	r4, [r3, #0]
	}
 800f2c4:	bd70      	pop	{r4, r5, r6, pc}
 800f2c6:	bf00      	nop
 800f2c8:	200128f0 	.word	0x200128f0
 800f2cc:	20012de4 	.word	0x20012de4
 800f2d0:	200128f8 	.word	0x200128f8
 800f2d4:	20012dbc 	.word	0x20012dbc
 800f2d8:	200128f4 	.word	0x200128f4
 800f2dc:	20012d98 	.word	0x20012d98

0800f2e0 <xTaskRemoveFromEventList>:
{
 800f2e0:	b530      	push	{r4, r5, lr}
	pxUnblockedTCB = listGET_OWNER_OF_HEAD_ENTRY( pxEventList ); /*lint !e9079 void * is used as this macro is used with timers and co-routines too.  Alignment is known to be fine as the type of the pointer stored and retrieved is the same. */
 800f2e2:	68c3      	ldr	r3, [r0, #12]
 800f2e4:	68dc      	ldr	r4, [r3, #12]
{
 800f2e6:	b083      	sub	sp, #12
	configASSERT( pxUnblockedTCB );
 800f2e8:	2c00      	cmp	r4, #0
 800f2ea:	d02b      	beq.n	800f344 <xTaskRemoveFromEventList+0x64>
	( void ) uxListRemove( &( pxUnblockedTCB->xEventListItem ) );
 800f2ec:	f104 0518 	add.w	r5, r4, #24
 800f2f0:	4628      	mov	r0, r5
 800f2f2:	f7fe f8f9 	bl	800d4e8 <uxListRemove>
	if( uxSchedulerSuspended == ( UBaseType_t ) pdFALSE )
 800f2f6:	4b18      	ldr	r3, [pc, #96]	; (800f358 <xTaskRemoveFromEventList+0x78>)
 800f2f8:	681b      	ldr	r3, [r3, #0]
 800f2fa:	b17b      	cbz	r3, 800f31c <xTaskRemoveFromEventList+0x3c>
		vListInsertEnd( &( xPendingReadyList ), &( pxUnblockedTCB->xEventListItem ) );
 800f2fc:	4817      	ldr	r0, [pc, #92]	; (800f35c <xTaskRemoveFromEventList+0x7c>)
 800f2fe:	4629      	mov	r1, r5
 800f300:	f7fe f8ca 	bl	800d498 <vListInsertEnd>
	if( pxUnblockedTCB->uxPriority > pxCurrentTCB->uxPriority )
 800f304:	4b16      	ldr	r3, [pc, #88]	; (800f360 <xTaskRemoveFromEventList+0x80>)
 800f306:	6ae2      	ldr	r2, [r4, #44]	; 0x2c
 800f308:	681b      	ldr	r3, [r3, #0]
 800f30a:	6adb      	ldr	r3, [r3, #44]	; 0x2c
 800f30c:	429a      	cmp	r2, r3
		xYieldPending = pdTRUE;
 800f30e:	bf85      	ittet	hi
 800f310:	4b14      	ldrhi	r3, [pc, #80]	; (800f364 <xTaskRemoveFromEventList+0x84>)
 800f312:	2001      	movhi	r0, #1
		xReturn = pdFALSE;
 800f314:	2000      	movls	r0, #0
		xYieldPending = pdTRUE;
 800f316:	6018      	strhi	r0, [r3, #0]
}
 800f318:	b003      	add	sp, #12
 800f31a:	bd30      	pop	{r4, r5, pc}
		( void ) uxListRemove( &( pxUnblockedTCB->xStateListItem ) );
 800f31c:	1d21      	adds	r1, r4, #4
 800f31e:	4608      	mov	r0, r1
 800f320:	9101      	str	r1, [sp, #4]
 800f322:	f7fe f8e1 	bl	800d4e8 <uxListRemove>
		prvAddTaskToReadyList( pxUnblockedTCB );
 800f326:	4a10      	ldr	r2, [pc, #64]	; (800f368 <xTaskRemoveFromEventList+0x88>)
 800f328:	6ae3      	ldr	r3, [r4, #44]	; 0x2c
 800f32a:	6810      	ldr	r0, [r2, #0]
 800f32c:	9901      	ldr	r1, [sp, #4]
 800f32e:	4283      	cmp	r3, r0
 800f330:	480e      	ldr	r0, [pc, #56]	; (800f36c <xTaskRemoveFromEventList+0x8c>)
 800f332:	bf88      	it	hi
 800f334:	6013      	strhi	r3, [r2, #0]
 800f336:	eb03 0383 	add.w	r3, r3, r3, lsl #2
 800f33a:	eb00 0083 	add.w	r0, r0, r3, lsl #2
 800f33e:	f7fe f8ab 	bl	800d498 <vListInsertEnd>
 800f342:	e7df      	b.n	800f304 <xTaskRemoveFromEventList+0x24>
 800f344:	f04f 0350 	mov.w	r3, #80	; 0x50
 800f348:	f383 8811 	msr	BASEPRI, r3
 800f34c:	f3bf 8f6f 	isb	sy
 800f350:	f3bf 8f4f 	dsb	sy
	configASSERT( pxUnblockedTCB );
 800f354:	e7fe      	b.n	800f354 <xTaskRemoveFromEventList+0x74>
 800f356:	bf00      	nop
 800f358:	20012d64 	.word	0x20012d64
 800f35c:	20012da4 	.word	0x20012da4
 800f360:	200128f0 	.word	0x200128f0
 800f364:	20012de8 	.word	0x20012de8
 800f368:	20012d6c 	.word	0x20012d6c
 800f36c:	200128fc 	.word	0x200128fc

0800f370 <vTaskInternalSetTimeOutState>:
	pxTimeOut->xOverflowCount = xNumOfOverflows;
 800f370:	4a03      	ldr	r2, [pc, #12]	; (800f380 <vTaskInternalSetTimeOutState+0x10>)
	pxTimeOut->xTimeOnEntering = xTickCount;
 800f372:	4b04      	ldr	r3, [pc, #16]	; (800f384 <vTaskInternalSetTimeOutState+0x14>)
	pxTimeOut->xOverflowCount = xNumOfOverflows;
 800f374:	6812      	ldr	r2, [r2, #0]
	pxTimeOut->xTimeOnEntering = xTickCount;
 800f376:	681b      	ldr	r3, [r3, #0]
 800f378:	e9c0 2300 	strd	r2, r3, [r0]
}
 800f37c:	4770      	bx	lr
 800f37e:	bf00      	nop
 800f380:	20012d9c 	.word	0x20012d9c
 800f384:	20012de4 	.word	0x20012de4

0800f388 <xTaskCheckForTimeOut>:
	configASSERT( pxTimeOut );
 800f388:	b328      	cbz	r0, 800f3d6 <xTaskCheckForTimeOut+0x4e>
{
 800f38a:	b5f0      	push	{r4, r5, r6, r7, lr}
 800f38c:	460d      	mov	r5, r1
 800f38e:	b083      	sub	sp, #12
	configASSERT( pxTicksToWait );
 800f390:	b1c1      	cbz	r1, 800f3c4 <xTaskCheckForTimeOut+0x3c>
 800f392:	4604      	mov	r4, r0
	taskENTER_CRITICAL();
 800f394:	f7fe f926 	bl	800d5e4 <vPortEnterCritical>
			if( *pxTicksToWait == portMAX_DELAY )
 800f398:	682b      	ldr	r3, [r5, #0]
		const TickType_t xConstTickCount = xTickCount;
 800f39a:	4a1d      	ldr	r2, [pc, #116]	; (800f410 <xTaskCheckForTimeOut+0x88>)
			if( *pxTicksToWait == portMAX_DELAY )
 800f39c:	1c58      	adds	r0, r3, #1
		const TickType_t xConstTickCount = xTickCount;
 800f39e:	6811      	ldr	r1, [r2, #0]
			if( *pxTicksToWait == portMAX_DELAY )
 800f3a0:	d030      	beq.n	800f404 <xTaskCheckForTimeOut+0x7c>
		if( ( xNumOfOverflows != pxTimeOut->xOverflowCount ) && ( xConstTickCount >= pxTimeOut->xTimeOnEntering ) ) /*lint !e525 Indentation preferred as is to make code within pre-processor directives clearer. */
 800f3a2:	f8df c070 	ldr.w	ip, [pc, #112]	; 800f414 <xTaskCheckForTimeOut+0x8c>
 800f3a6:	e9d4 6000 	ldrd	r6, r0, [r4]
 800f3aa:	f8dc 7000 	ldr.w	r7, [ip]
 800f3ae:	42be      	cmp	r6, r7
 800f3b0:	d01a      	beq.n	800f3e8 <xTaskCheckForTimeOut+0x60>
 800f3b2:	4288      	cmp	r0, r1
 800f3b4:	d818      	bhi.n	800f3e8 <xTaskCheckForTimeOut+0x60>
			xReturn = pdTRUE;
 800f3b6:	2001      	movs	r0, #1
 800f3b8:	9001      	str	r0, [sp, #4]
	taskEXIT_CRITICAL();
 800f3ba:	f7fe f935 	bl	800d628 <vPortExitCritical>
}
 800f3be:	9801      	ldr	r0, [sp, #4]
 800f3c0:	b003      	add	sp, #12
 800f3c2:	bdf0      	pop	{r4, r5, r6, r7, pc}
 800f3c4:	f04f 0350 	mov.w	r3, #80	; 0x50
 800f3c8:	f383 8811 	msr	BASEPRI, r3
 800f3cc:	f3bf 8f6f 	isb	sy
 800f3d0:	f3bf 8f4f 	dsb	sy
	configASSERT( pxTicksToWait );
 800f3d4:	e7fe      	b.n	800f3d4 <xTaskCheckForTimeOut+0x4c>
 800f3d6:	f04f 0350 	mov.w	r3, #80	; 0x50
 800f3da:	f383 8811 	msr	BASEPRI, r3
 800f3de:	f3bf 8f6f 	isb	sy
 800f3e2:	f3bf 8f4f 	dsb	sy
	configASSERT( pxTimeOut );
 800f3e6:	e7fe      	b.n	800f3e6 <xTaskCheckForTimeOut+0x5e>
		const TickType_t xElapsedTime = xConstTickCount - pxTimeOut->xTimeOnEntering;
 800f3e8:	eba1 0e00 	sub.w	lr, r1, r0
		else if( xElapsedTime < *pxTicksToWait ) /*lint !e961 Explicit casting is only redundant with some compilers, whereas others require it to prevent integer conversion errors. */
 800f3ec:	4573      	cmp	r3, lr
 800f3ee:	d90b      	bls.n	800f408 <xTaskCheckForTimeOut+0x80>
			*pxTicksToWait -= xElapsedTime;
 800f3f0:	1a5b      	subs	r3, r3, r1
	pxTimeOut->xOverflowCount = xNumOfOverflows;
 800f3f2:	f8dc 1000 	ldr.w	r1, [ip]
	pxTimeOut->xTimeOnEntering = xTickCount;
 800f3f6:	6812      	ldr	r2, [r2, #0]
			*pxTicksToWait -= xElapsedTime;
 800f3f8:	4403      	add	r3, r0
 800f3fa:	602b      	str	r3, [r5, #0]
			xReturn = pdFALSE;
 800f3fc:	2000      	movs	r0, #0
	pxTimeOut->xTimeOnEntering = xTickCount;
 800f3fe:	e9c4 1200 	strd	r1, r2, [r4]
			xReturn = pdFALSE;
 800f402:	e7d9      	b.n	800f3b8 <xTaskCheckForTimeOut+0x30>
				xReturn = pdFALSE;
 800f404:	2000      	movs	r0, #0
 800f406:	e7d7      	b.n	800f3b8 <xTaskCheckForTimeOut+0x30>
			*pxTicksToWait = 0;
 800f408:	2300      	movs	r3, #0
 800f40a:	602b      	str	r3, [r5, #0]
			xReturn = pdTRUE;
 800f40c:	2001      	movs	r0, #1
 800f40e:	e7d3      	b.n	800f3b8 <xTaskCheckForTimeOut+0x30>
 800f410:	20012de4 	.word	0x20012de4
 800f414:	20012d9c 	.word	0x20012d9c

0800f418 <vTaskMissedYield>:
	xYieldPending = pdTRUE;
 800f418:	4b01      	ldr	r3, [pc, #4]	; (800f420 <vTaskMissedYield+0x8>)
 800f41a:	2201      	movs	r2, #1
 800f41c:	601a      	str	r2, [r3, #0]
}
 800f41e:	4770      	bx	lr
 800f420:	20012de8 	.word	0x20012de8

0800f424 <xTaskGetSchedulerState>:
		if( xSchedulerRunning == pdFALSE )
 800f424:	4b05      	ldr	r3, [pc, #20]	; (800f43c <xTaskGetSchedulerState+0x18>)
 800f426:	681b      	ldr	r3, [r3, #0]
 800f428:	b133      	cbz	r3, 800f438 <xTaskGetSchedulerState+0x14>
			if( uxSchedulerSuspended == ( UBaseType_t ) pdFALSE )
 800f42a:	4b05      	ldr	r3, [pc, #20]	; (800f440 <xTaskGetSchedulerState+0x1c>)
 800f42c:	6818      	ldr	r0, [r3, #0]
 800f42e:	fab0 f080 	clz	r0, r0
 800f432:	0940      	lsrs	r0, r0, #5
 800f434:	0040      	lsls	r0, r0, #1
 800f436:	4770      	bx	lr
			xReturn = taskSCHEDULER_NOT_STARTED;
 800f438:	2001      	movs	r0, #1
	}
 800f43a:	4770      	bx	lr
 800f43c:	20012db8 	.word	0x20012db8
 800f440:	20012d64 	.word	0x20012d64

0800f444 <xTaskPriorityInherit>:
	{
 800f444:	b570      	push	{r4, r5, r6, lr}
		if( pxMutexHolder != NULL )
 800f446:	4604      	mov	r4, r0
	{
 800f448:	b082      	sub	sp, #8
		if( pxMutexHolder != NULL )
 800f44a:	b1c8      	cbz	r0, 800f480 <xTaskPriorityInherit+0x3c>
			if( pxMutexHolderTCB->uxPriority < pxCurrentTCB->uxPriority )
 800f44c:	4d1d      	ldr	r5, [pc, #116]	; (800f4c4 <xTaskPriorityInherit+0x80>)
 800f44e:	6ac3      	ldr	r3, [r0, #44]	; 0x2c
 800f450:	682a      	ldr	r2, [r5, #0]
 800f452:	6ad2      	ldr	r2, [r2, #44]	; 0x2c
 800f454:	4293      	cmp	r3, r2
 800f456:	d215      	bcs.n	800f484 <xTaskPriorityInherit+0x40>
				if( ( listGET_LIST_ITEM_VALUE( &( pxMutexHolderTCB->xEventListItem ) ) & taskEVENT_LIST_ITEM_VALUE_IN_USE ) == 0UL )
 800f458:	6982      	ldr	r2, [r0, #24]
 800f45a:	2a00      	cmp	r2, #0
 800f45c:	db04      	blt.n	800f468 <xTaskPriorityInherit+0x24>
					listSET_LIST_ITEM_VALUE( &( pxMutexHolderTCB->xEventListItem ), ( TickType_t ) configMAX_PRIORITIES - ( TickType_t ) pxCurrentTCB->uxPriority ); /*lint !e961 MISRA exception as the casts are only redundant for some ports. */
 800f45e:	682a      	ldr	r2, [r5, #0]
 800f460:	6ad2      	ldr	r2, [r2, #44]	; 0x2c
 800f462:	f1c2 0238 	rsb	r2, r2, #56	; 0x38
 800f466:	6182      	str	r2, [r0, #24]
				if( listIS_CONTAINED_WITHIN( &( pxReadyTasksLists[ pxMutexHolderTCB->uxPriority ] ), &( pxMutexHolderTCB->xStateListItem ) ) != pdFALSE )
 800f468:	4e17      	ldr	r6, [pc, #92]	; (800f4c8 <xTaskPriorityInherit+0x84>)
 800f46a:	6962      	ldr	r2, [r4, #20]
 800f46c:	eb03 0383 	add.w	r3, r3, r3, lsl #2
 800f470:	eb06 0383 	add.w	r3, r6, r3, lsl #2
 800f474:	429a      	cmp	r2, r3
 800f476:	d00e      	beq.n	800f496 <xTaskPriorityInherit+0x52>
					pxMutexHolderTCB->uxPriority = pxCurrentTCB->uxPriority;
 800f478:	682b      	ldr	r3, [r5, #0]
 800f47a:	6adb      	ldr	r3, [r3, #44]	; 0x2c
 800f47c:	62e3      	str	r3, [r4, #44]	; 0x2c
				xReturn = pdTRUE;
 800f47e:	2001      	movs	r0, #1
	}
 800f480:	b002      	add	sp, #8
 800f482:	bd70      	pop	{r4, r5, r6, pc}
				if( pxMutexHolderTCB->uxBasePriority < pxCurrentTCB->uxPriority )
 800f484:	682b      	ldr	r3, [r5, #0]
 800f486:	6cc0      	ldr	r0, [r0, #76]	; 0x4c
 800f488:	6adb      	ldr	r3, [r3, #44]	; 0x2c
 800f48a:	4298      	cmp	r0, r3
 800f48c:	bf2c      	ite	cs
 800f48e:	2000      	movcs	r0, #0
 800f490:	2001      	movcc	r0, #1
	}
 800f492:	b002      	add	sp, #8
 800f494:	bd70      	pop	{r4, r5, r6, pc}
					if( uxListRemove( &( pxMutexHolderTCB->xStateListItem ) ) == ( UBaseType_t ) 0 )
 800f496:	1d21      	adds	r1, r4, #4
 800f498:	4608      	mov	r0, r1
 800f49a:	9101      	str	r1, [sp, #4]
 800f49c:	f7fe f824 	bl	800d4e8 <uxListRemove>
					pxMutexHolderTCB->uxPriority = pxCurrentTCB->uxPriority;
 800f4a0:	682a      	ldr	r2, [r5, #0]
					prvAddTaskToReadyList( pxMutexHolderTCB );
 800f4a2:	4b0a      	ldr	r3, [pc, #40]	; (800f4cc <xTaskPriorityInherit+0x88>)
					pxMutexHolderTCB->uxPriority = pxCurrentTCB->uxPriority;
 800f4a4:	6ad0      	ldr	r0, [r2, #44]	; 0x2c
					prvAddTaskToReadyList( pxMutexHolderTCB );
 800f4a6:	681a      	ldr	r2, [r3, #0]
					pxMutexHolderTCB->uxPriority = pxCurrentTCB->uxPriority;
 800f4a8:	62e0      	str	r0, [r4, #44]	; 0x2c
					prvAddTaskToReadyList( pxMutexHolderTCB );
 800f4aa:	4290      	cmp	r0, r2
 800f4ac:	bf88      	it	hi
 800f4ae:	6018      	strhi	r0, [r3, #0]
 800f4b0:	eb00 0080 	add.w	r0, r0, r0, lsl #2
 800f4b4:	eb06 0080 	add.w	r0, r6, r0, lsl #2
 800f4b8:	9901      	ldr	r1, [sp, #4]
 800f4ba:	f7fd ffed 	bl	800d498 <vListInsertEnd>
				xReturn = pdTRUE;
 800f4be:	2001      	movs	r0, #1
 800f4c0:	e7de      	b.n	800f480 <xTaskPriorityInherit+0x3c>
 800f4c2:	bf00      	nop
 800f4c4:	200128f0 	.word	0x200128f0
 800f4c8:	200128fc 	.word	0x200128fc
 800f4cc:	20012d6c 	.word	0x20012d6c

0800f4d0 <xTaskPriorityDisinherit>:
		if( pxMutexHolder != NULL )
 800f4d0:	b318      	cbz	r0, 800f51a <xTaskPriorityDisinherit+0x4a>
	{
 800f4d2:	b510      	push	{r4, lr}
			configASSERT( pxTCB == pxCurrentTCB );
 800f4d4:	4b1e      	ldr	r3, [pc, #120]	; (800f550 <xTaskPriorityDisinherit+0x80>)
 800f4d6:	681c      	ldr	r4, [r3, #0]
 800f4d8:	4284      	cmp	r4, r0
	{
 800f4da:	b082      	sub	sp, #8
			configASSERT( pxTCB == pxCurrentTCB );
 800f4dc:	d008      	beq.n	800f4f0 <xTaskPriorityDisinherit+0x20>
 800f4de:	f04f 0350 	mov.w	r3, #80	; 0x50
 800f4e2:	f383 8811 	msr	BASEPRI, r3
 800f4e6:	f3bf 8f6f 	isb	sy
 800f4ea:	f3bf 8f4f 	dsb	sy
 800f4ee:	e7fe      	b.n	800f4ee <xTaskPriorityDisinherit+0x1e>
			configASSERT( pxTCB->uxMutexesHeld );
 800f4f0:	6d23      	ldr	r3, [r4, #80]	; 0x50
 800f4f2:	b14b      	cbz	r3, 800f508 <xTaskPriorityDisinherit+0x38>
			if( pxTCB->uxPriority != pxTCB->uxBasePriority )
 800f4f4:	6ae1      	ldr	r1, [r4, #44]	; 0x2c
 800f4f6:	6ce2      	ldr	r2, [r4, #76]	; 0x4c
			( pxTCB->uxMutexesHeld )--;
 800f4f8:	3b01      	subs	r3, #1
			if( pxTCB->uxPriority != pxTCB->uxBasePriority )
 800f4fa:	4291      	cmp	r1, r2
			( pxTCB->uxMutexesHeld )--;
 800f4fc:	6523      	str	r3, [r4, #80]	; 0x50
			if( pxTCB->uxPriority != pxTCB->uxBasePriority )
 800f4fe:	d000      	beq.n	800f502 <xTaskPriorityDisinherit+0x32>
				if( pxTCB->uxMutexesHeld == ( UBaseType_t ) 0 )
 800f500:	b16b      	cbz	r3, 800f51e <xTaskPriorityDisinherit+0x4e>
	BaseType_t xReturn = pdFALSE;
 800f502:	2000      	movs	r0, #0
	}
 800f504:	b002      	add	sp, #8
 800f506:	bd10      	pop	{r4, pc}
 800f508:	f04f 0350 	mov.w	r3, #80	; 0x50
 800f50c:	f383 8811 	msr	BASEPRI, r3
 800f510:	f3bf 8f6f 	isb	sy
 800f514:	f3bf 8f4f 	dsb	sy
			configASSERT( pxTCB->uxMutexesHeld );
 800f518:	e7fe      	b.n	800f518 <xTaskPriorityDisinherit+0x48>
	BaseType_t xReturn = pdFALSE;
 800f51a:	2000      	movs	r0, #0
	}
 800f51c:	4770      	bx	lr
					if( uxListRemove( &( pxTCB->xStateListItem ) ) == ( UBaseType_t ) 0 )
 800f51e:	1d21      	adds	r1, r4, #4
 800f520:	4608      	mov	r0, r1
 800f522:	9101      	str	r1, [sp, #4]
 800f524:	f7fd ffe0 	bl	800d4e8 <uxListRemove>
					pxTCB->uxPriority = pxTCB->uxBasePriority;
 800f528:	6ce3      	ldr	r3, [r4, #76]	; 0x4c
					prvAddTaskToReadyList( pxTCB );
 800f52a:	4a0a      	ldr	r2, [pc, #40]	; (800f554 <xTaskPriorityDisinherit+0x84>)
					pxTCB->uxPriority = pxTCB->uxBasePriority;
 800f52c:	62e3      	str	r3, [r4, #44]	; 0x2c
					listSET_LIST_ITEM_VALUE( &( pxTCB->xEventListItem ), ( TickType_t ) configMAX_PRIORITIES - ( TickType_t ) pxTCB->uxPriority ); /*lint !e961 MISRA exception as the casts are only redundant for some ports. */
 800f52e:	f1c3 0038 	rsb	r0, r3, #56	; 0x38
 800f532:	61a0      	str	r0, [r4, #24]
					prvAddTaskToReadyList( pxTCB );
 800f534:	6810      	ldr	r0, [r2, #0]
 800f536:	9901      	ldr	r1, [sp, #4]
 800f538:	4283      	cmp	r3, r0
 800f53a:	4807      	ldr	r0, [pc, #28]	; (800f558 <xTaskPriorityDisinherit+0x88>)
 800f53c:	bf88      	it	hi
 800f53e:	6013      	strhi	r3, [r2, #0]
 800f540:	eb03 0383 	add.w	r3, r3, r3, lsl #2
 800f544:	eb00 0083 	add.w	r0, r0, r3, lsl #2
 800f548:	f7fd ffa6 	bl	800d498 <vListInsertEnd>
					xReturn = pdTRUE;
 800f54c:	2001      	movs	r0, #1
		return xReturn;
 800f54e:	e7d9      	b.n	800f504 <xTaskPriorityDisinherit+0x34>
 800f550:	200128f0 	.word	0x200128f0
 800f554:	20012d6c 	.word	0x20012d6c
 800f558:	200128fc 	.word	0x200128fc

0800f55c <vTaskPriorityDisinheritAfterTimeout>:
		if( pxMutexHolder != NULL )
 800f55c:	2800      	cmp	r0, #0
 800f55e:	d041      	beq.n	800f5e4 <vTaskPriorityDisinheritAfterTimeout+0x88>
	{
 800f560:	b530      	push	{r4, r5, lr}
			configASSERT( pxTCB->uxMutexesHeld );
 800f562:	6d03      	ldr	r3, [r0, #80]	; 0x50
	{
 800f564:	b083      	sub	sp, #12
 800f566:	4604      	mov	r4, r0
			configASSERT( pxTCB->uxMutexesHeld );
 800f568:	b153      	cbz	r3, 800f580 <vTaskPriorityDisinheritAfterTimeout+0x24>
			if( pxTCB->uxBasePriority < uxHighestPriorityWaitingTask )
 800f56a:	6cc0      	ldr	r0, [r0, #76]	; 0x4c
			if( pxTCB->uxPriority != uxPriorityToUse )
 800f56c:	6ae2      	ldr	r2, [r4, #44]	; 0x2c
 800f56e:	4281      	cmp	r1, r0
 800f570:	bf38      	it	cc
 800f572:	4601      	movcc	r1, r0
 800f574:	428a      	cmp	r2, r1
 800f576:	d001      	beq.n	800f57c <vTaskPriorityDisinheritAfterTimeout+0x20>
				if( pxTCB->uxMutexesHeld == uxOnlyOneMutexHeld )
 800f578:	2b01      	cmp	r3, #1
 800f57a:	d00a      	beq.n	800f592 <vTaskPriorityDisinheritAfterTimeout+0x36>
	}
 800f57c:	b003      	add	sp, #12
 800f57e:	bd30      	pop	{r4, r5, pc}
 800f580:	f04f 0350 	mov.w	r3, #80	; 0x50
 800f584:	f383 8811 	msr	BASEPRI, r3
 800f588:	f3bf 8f6f 	isb	sy
 800f58c:	f3bf 8f4f 	dsb	sy
			configASSERT( pxTCB->uxMutexesHeld );
 800f590:	e7fe      	b.n	800f590 <vTaskPriorityDisinheritAfterTimeout+0x34>
					configASSERT( pxTCB != pxCurrentTCB );
 800f592:	4b19      	ldr	r3, [pc, #100]	; (800f5f8 <vTaskPriorityDisinheritAfterTimeout+0x9c>)
 800f594:	681b      	ldr	r3, [r3, #0]
 800f596:	42a3      	cmp	r3, r4
 800f598:	d025      	beq.n	800f5e6 <vTaskPriorityDisinheritAfterTimeout+0x8a>
					if( ( listGET_LIST_ITEM_VALUE( &( pxTCB->xEventListItem ) ) & taskEVENT_LIST_ITEM_VALUE_IN_USE ) == 0UL )
 800f59a:	69a3      	ldr	r3, [r4, #24]
					pxTCB->uxPriority = uxPriorityToUse;
 800f59c:	62e1      	str	r1, [r4, #44]	; 0x2c
					if( ( listGET_LIST_ITEM_VALUE( &( pxTCB->xEventListItem ) ) & taskEVENT_LIST_ITEM_VALUE_IN_USE ) == 0UL )
 800f59e:	2b00      	cmp	r3, #0
						listSET_LIST_ITEM_VALUE( &( pxTCB->xEventListItem ), ( TickType_t ) configMAX_PRIORITIES - ( TickType_t ) uxPriorityToUse ); /*lint !e961 MISRA exception as the casts are only redundant for some ports. */
 800f5a0:	bfa8      	it	ge
 800f5a2:	f1c1 0138 	rsbge	r1, r1, #56	; 0x38
					if( listIS_CONTAINED_WITHIN( &( pxReadyTasksLists[ uxPriorityUsedOnEntry ] ), &( pxTCB->xStateListItem ) ) != pdFALSE )
 800f5a6:	4d15      	ldr	r5, [pc, #84]	; (800f5fc <vTaskPriorityDisinheritAfterTimeout+0xa0>)
						listSET_LIST_ITEM_VALUE( &( pxTCB->xEventListItem ), ( TickType_t ) configMAX_PRIORITIES - ( TickType_t ) uxPriorityToUse ); /*lint !e961 MISRA exception as the casts are only redundant for some ports. */
 800f5a8:	bfa8      	it	ge
 800f5aa:	61a1      	strge	r1, [r4, #24]
					if( listIS_CONTAINED_WITHIN( &( pxReadyTasksLists[ uxPriorityUsedOnEntry ] ), &( pxTCB->xStateListItem ) ) != pdFALSE )
 800f5ac:	eb02 0282 	add.w	r2, r2, r2, lsl #2
 800f5b0:	6961      	ldr	r1, [r4, #20]
 800f5b2:	eb05 0382 	add.w	r3, r5, r2, lsl #2
 800f5b6:	4299      	cmp	r1, r3
 800f5b8:	d1e0      	bne.n	800f57c <vTaskPriorityDisinheritAfterTimeout+0x20>
						if( uxListRemove( &( pxTCB->xStateListItem ) ) == ( UBaseType_t ) 0 )
 800f5ba:	1d21      	adds	r1, r4, #4
 800f5bc:	4608      	mov	r0, r1
 800f5be:	9101      	str	r1, [sp, #4]
 800f5c0:	f7fd ff92 	bl	800d4e8 <uxListRemove>
						prvAddTaskToReadyList( pxTCB );
 800f5c4:	4b0e      	ldr	r3, [pc, #56]	; (800f600 <vTaskPriorityDisinheritAfterTimeout+0xa4>)
 800f5c6:	6ae0      	ldr	r0, [r4, #44]	; 0x2c
 800f5c8:	681a      	ldr	r2, [r3, #0]
 800f5ca:	9901      	ldr	r1, [sp, #4]
 800f5cc:	4290      	cmp	r0, r2
 800f5ce:	bf88      	it	hi
 800f5d0:	6018      	strhi	r0, [r3, #0]
 800f5d2:	eb00 0080 	add.w	r0, r0, r0, lsl #2
 800f5d6:	eb05 0080 	add.w	r0, r5, r0, lsl #2
	}
 800f5da:	b003      	add	sp, #12
 800f5dc:	e8bd 4030 	ldmia.w	sp!, {r4, r5, lr}
						prvAddTaskToReadyList( pxTCB );
 800f5e0:	f7fd bf5a 	b.w	800d498 <vListInsertEnd>
 800f5e4:	4770      	bx	lr
 800f5e6:	f04f 0350 	mov.w	r3, #80	; 0x50
 800f5ea:	f383 8811 	msr	BASEPRI, r3
 800f5ee:	f3bf 8f6f 	isb	sy
 800f5f2:	f3bf 8f4f 	dsb	sy
					configASSERT( pxTCB != pxCurrentTCB );
 800f5f6:	e7fe      	b.n	800f5f6 <vTaskPriorityDisinheritAfterTimeout+0x9a>
 800f5f8:	200128f0 	.word	0x200128f0
 800f5fc:	200128fc 	.word	0x200128fc
 800f600:	20012d6c 	.word	0x20012d6c

0800f604 <pvTaskIncrementMutexHeldCount>:
		if( pxCurrentTCB != NULL )
 800f604:	4b04      	ldr	r3, [pc, #16]	; (800f618 <pvTaskIncrementMutexHeldCount+0x14>)
 800f606:	681a      	ldr	r2, [r3, #0]
 800f608:	b11a      	cbz	r2, 800f612 <pvTaskIncrementMutexHeldCount+0xe>
			( pxCurrentTCB->uxMutexesHeld )++;
 800f60a:	6819      	ldr	r1, [r3, #0]
 800f60c:	6d0a      	ldr	r2, [r1, #80]	; 0x50
 800f60e:	3201      	adds	r2, #1
 800f610:	650a      	str	r2, [r1, #80]	; 0x50
		return pxCurrentTCB;
 800f612:	6818      	ldr	r0, [r3, #0]
	}
 800f614:	4770      	bx	lr
 800f616:	bf00      	nop
 800f618:	200128f0 	.word	0x200128f0

0800f61c <prvSwitchTimerLists>:
	}
}
/*-----------------------------------------------------------*/

static void prvSwitchTimerLists( void )
{
 800f61c:	e92d 43f0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, lr}
 800f620:	4e22      	ldr	r6, [pc, #136]	; (800f6ac <prvSwitchTimerLists+0x90>)
	if( xTimerQueue != NULL )
 800f622:	f8df 9090 	ldr.w	r9, [pc, #144]	; 800f6b4 <prvSwitchTimerLists+0x98>
{
 800f626:	b085      	sub	sp, #20
		xMessage.xMessageID = xCommandID;
 800f628:	f04f 0800 	mov.w	r8, #0

	/* The tick count has overflowed.  The timer lists must be switched.
	If there are any timers still referenced from the current timer list
	then they must have expired and should be processed before the lists
	are switched. */
	while( listLIST_IS_EMPTY( pxCurrentTimerList ) == pdFALSE )
 800f62c:	e00d      	b.n	800f64a <prvSwitchTimerLists+0x2e>
	{
		xNextExpireTime = listGET_ITEM_VALUE_OF_HEAD_ENTRY( pxCurrentTimerList );
 800f62e:	68db      	ldr	r3, [r3, #12]

		/* Remove the timer from the list. */
		pxTimer = ( Timer_t * ) listGET_OWNER_OF_HEAD_ENTRY( pxCurrentTimerList ); /*lint !e9087 !e9079 void * is used as this macro is used with tasks and co-routines too.  Alignment is known to be fine as the type of the pointer stored and retrieved is the same. */
 800f630:	68dc      	ldr	r4, [r3, #12]
		xNextExpireTime = listGET_ITEM_VALUE_OF_HEAD_ENTRY( pxCurrentTimerList );
 800f632:	681f      	ldr	r7, [r3, #0]
		( void ) uxListRemove( &( pxTimer->xTimerListItem ) );
 800f634:	1d25      	adds	r5, r4, #4
 800f636:	4628      	mov	r0, r5
 800f638:	f7fd ff56 	bl	800d4e8 <uxListRemove>
		traceTIMER_EXPIRED( pxTimer );

		/* Execute its callback, then send a command to restart the timer if
		it is an auto-reload timer.  It cannot be restarted here as the lists
		have not yet been switched. */
		pxTimer->pxCallbackFunction( ( TimerHandle_t ) pxTimer );
 800f63c:	6a23      	ldr	r3, [r4, #32]
 800f63e:	4620      	mov	r0, r4
 800f640:	4798      	blx	r3

		if( ( pxTimer->ucStatus & tmrSTATUS_IS_AUTORELOAD ) != 0 )
 800f642:	f894 3028 	ldrb.w	r3, [r4, #40]	; 0x28
 800f646:	075b      	lsls	r3, r3, #29
 800f648:	d40a      	bmi.n	800f660 <prvSwitchTimerLists+0x44>
	while( listLIST_IS_EMPTY( pxCurrentTimerList ) == pdFALSE )
 800f64a:	6833      	ldr	r3, [r6, #0]
 800f64c:	681a      	ldr	r2, [r3, #0]
 800f64e:	2a00      	cmp	r2, #0
 800f650:	d1ed      	bne.n	800f62e <prvSwitchTimerLists+0x12>
			mtCOVERAGE_TEST_MARKER();
		}
	}

	pxTemp = pxCurrentTimerList;
	pxCurrentTimerList = pxOverflowTimerList;
 800f652:	4a17      	ldr	r2, [pc, #92]	; (800f6b0 <prvSwitchTimerLists+0x94>)
 800f654:	6811      	ldr	r1, [r2, #0]
 800f656:	6031      	str	r1, [r6, #0]
	pxOverflowTimerList = pxTemp;
 800f658:	6013      	str	r3, [r2, #0]
}
 800f65a:	b005      	add	sp, #20
 800f65c:	e8bd 83f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, pc}
			xReloadTime = ( xNextExpireTime + pxTimer->xTimerPeriodInTicks );
 800f660:	69a3      	ldr	r3, [r4, #24]
 800f662:	443b      	add	r3, r7
			if( xReloadTime > xNextExpireTime )
 800f664:	429f      	cmp	r7, r3
				vListInsert( pxCurrentTimerList, &( pxTimer->xTimerListItem ) );
 800f666:	4629      	mov	r1, r5
			if( xReloadTime > xNextExpireTime )
 800f668:	d205      	bcs.n	800f676 <prvSwitchTimerLists+0x5a>
				vListInsert( pxCurrentTimerList, &( pxTimer->xTimerListItem ) );
 800f66a:	6830      	ldr	r0, [r6, #0]
				listSET_LIST_ITEM_VALUE( &( pxTimer->xTimerListItem ), xReloadTime );
 800f66c:	6063      	str	r3, [r4, #4]
				listSET_LIST_ITEM_OWNER( &( pxTimer->xTimerListItem ), pxTimer );
 800f66e:	6124      	str	r4, [r4, #16]
				vListInsert( pxCurrentTimerList, &( pxTimer->xTimerListItem ) );
 800f670:	f7fd ff22 	bl	800d4b8 <vListInsert>
 800f674:	e7e9      	b.n	800f64a <prvSwitchTimerLists+0x2e>
	if( xTimerQueue != NULL )
 800f676:	f8d9 3000 	ldr.w	r3, [r9]
 800f67a:	b16b      	cbz	r3, 800f698 <prvSwitchTimerLists+0x7c>
		xMessage.u.xTimerParameters.xMessageValue = xOptionalValue;
 800f67c:	e9cd 8700 	strd	r8, r7, [sp]
		xMessage.u.xTimerParameters.pxTimer = xTimer;
 800f680:	9402      	str	r4, [sp, #8]
			if( xTaskGetSchedulerState() == taskSCHEDULER_RUNNING )
 800f682:	f7ff fecf 	bl	800f424 <xTaskGetSchedulerState>
				xReturn = xQueueSendToBack( xTimerQueue, &xMessage, xTicksToWait );
 800f686:	2300      	movs	r3, #0
 800f688:	f8d9 0000 	ldr.w	r0, [r9]
 800f68c:	461a      	mov	r2, r3
 800f68e:	4669      	mov	r1, sp
 800f690:	f7fe fa9c 	bl	800dbcc <xQueueGenericSend>
				configASSERT( xResult );
 800f694:	2800      	cmp	r0, #0
 800f696:	d1d8      	bne.n	800f64a <prvSwitchTimerLists+0x2e>
 800f698:	f04f 0350 	mov.w	r3, #80	; 0x50
 800f69c:	f383 8811 	msr	BASEPRI, r3
 800f6a0:	f3bf 8f6f 	isb	sy
 800f6a4:	f3bf 8f4f 	dsb	sy
 800f6a8:	e7fe      	b.n	800f6a8 <prvSwitchTimerLists+0x8c>
 800f6aa:	bf00      	nop
 800f6ac:	20012dec 	.word	0x20012dec
 800f6b0:	20012df0 	.word	0x20012df0
 800f6b4:	20012f10 	.word	0x20012f10

0800f6b8 <prvTimerTask>:
{
 800f6b8:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 800f6bc:	4e9b      	ldr	r6, [pc, #620]	; (800f92c <prvTimerTask+0x274>)
 800f6be:	4d9c      	ldr	r5, [pc, #624]	; (800f930 <prvTimerTask+0x278>)
 800f6c0:	4c9c      	ldr	r4, [pc, #624]	; (800f934 <prvTimerTask+0x27c>)
 800f6c2:	b08b      	sub	sp, #44	; 0x2c
					portYIELD_WITHIN_API();
 800f6c4:	f04f 29e0 	mov.w	r9, #3758153728	; 0xe000e000
 800f6c8:	f04f 5880 	mov.w	r8, #268435456	; 0x10000000
	*pxListWasEmpty = listLIST_IS_EMPTY( pxCurrentTimerList );
 800f6cc:	6833      	ldr	r3, [r6, #0]
 800f6ce:	681f      	ldr	r7, [r3, #0]
 800f6d0:	2f00      	cmp	r7, #0
 800f6d2:	f000 80a8 	beq.w	800f826 <prvTimerTask+0x16e>
		xNextExpireTime = listGET_ITEM_VALUE_OF_HEAD_ENTRY( pxCurrentTimerList );
 800f6d6:	68db      	ldr	r3, [r3, #12]
 800f6d8:	681f      	ldr	r7, [r3, #0]
	vTaskSuspendAll();
 800f6da:	f7ff fcf9 	bl	800f0d0 <vTaskSuspendAll>
	xTimeNow = xTaskGetTickCount();
 800f6de:	f7ff fd0f 	bl	800f100 <xTaskGetTickCount>
	if( xTimeNow < xLastTime )
 800f6e2:	682a      	ldr	r2, [r5, #0]
 800f6e4:	4290      	cmp	r0, r2
	xTimeNow = xTaskGetTickCount();
 800f6e6:	4682      	mov	sl, r0
	if( xTimeNow < xLastTime )
 800f6e8:	f0c0 80ae 	bcc.w	800f848 <prvTimerTask+0x190>
			if( ( xListWasEmpty == pdFALSE ) && ( xNextExpireTime <= xTimeNow ) )
 800f6ec:	4287      	cmp	r7, r0
	xLastTime = xTimeNow;
 800f6ee:	6028      	str	r0, [r5, #0]
			if( ( xListWasEmpty == pdFALSE ) && ( xNextExpireTime <= xTimeNow ) )
 800f6f0:	f240 80b4 	bls.w	800f85c <prvTimerTask+0x1a4>
 800f6f4:	2200      	movs	r2, #0
				vQueueWaitForMessageRestricted( xTimerQueue, ( xNextExpireTime - xTimeNow ), xListWasEmpty );
 800f6f6:	6820      	ldr	r0, [r4, #0]
 800f6f8:	eba7 010a 	sub.w	r1, r7, sl
 800f6fc:	f7ff f89a 	bl	800e834 <vQueueWaitForMessageRestricted>
				if( xTaskResumeAll() == pdFALSE )
 800f700:	f7ff fcee 	bl	800f0e0 <xTaskResumeAll>
 800f704:	b928      	cbnz	r0, 800f712 <prvTimerTask+0x5a>
					portYIELD_WITHIN_API();
 800f706:	f8c9 8d04 	str.w	r8, [r9, #3332]	; 0xd04
 800f70a:	f3bf 8f4f 	dsb	sy
 800f70e:	f3bf 8f6f 	isb	sy
	while( xQueueReceive( xTimerQueue, &xMessage, tmrNO_DELAY ) != pdFAIL ) /*lint !e603 xMessage does not have to be initialised as it is passed out, not in, and it is not used unless xQueueReceive() returns pdTRUE. */
 800f712:	6820      	ldr	r0, [r4, #0]
 800f714:	2200      	movs	r2, #0
 800f716:	a902      	add	r1, sp, #8
 800f718:	f7fe fc94 	bl	800e044 <xQueueReceive>
 800f71c:	2800      	cmp	r0, #0
 800f71e:	d0d5      	beq.n	800f6cc <prvTimerTask+0x14>
			if( xMessage.xMessageID < ( BaseType_t ) 0 )
 800f720:	9b02      	ldr	r3, [sp, #8]
 800f722:	2b00      	cmp	r3, #0
 800f724:	db76      	blt.n	800f814 <prvTimerTask+0x15c>
			pxTimer = xMessage.u.xTimerParameters.pxTimer;
 800f726:	9f04      	ldr	r7, [sp, #16]
			if( listIS_CONTAINED_WITHIN( NULL, &( pxTimer->xTimerListItem ) ) == pdFALSE ) /*lint !e961. The cast is only redundant when NULL is passed into the macro. */
 800f728:	697b      	ldr	r3, [r7, #20]
 800f72a:	b113      	cbz	r3, 800f732 <prvTimerTask+0x7a>
				( void ) uxListRemove( &( pxTimer->xTimerListItem ) );
 800f72c:	1d38      	adds	r0, r7, #4
 800f72e:	f7fd fedb 	bl	800d4e8 <uxListRemove>
	xTimeNow = xTaskGetTickCount();
 800f732:	f7ff fce5 	bl	800f100 <xTaskGetTickCount>
	if( xTimeNow < xLastTime )
 800f736:	682b      	ldr	r3, [r5, #0]
 800f738:	4298      	cmp	r0, r3
	xTimeNow = xTaskGetTickCount();
 800f73a:	4682      	mov	sl, r0
	if( xTimeNow < xLastTime )
 800f73c:	f0c0 808b 	bcc.w	800f856 <prvTimerTask+0x19e>
			switch( xMessage.xMessageID )
 800f740:	9b02      	ldr	r3, [sp, #8]
	xLastTime = xTimeNow;
 800f742:	f8c5 a000 	str.w	sl, [r5]
			switch( xMessage.xMessageID )
 800f746:	2b09      	cmp	r3, #9
 800f748:	d8e3      	bhi.n	800f712 <prvTimerTask+0x5a>
 800f74a:	e8df f003 	tbb	[pc, r3]
 800f74e:	0505      	.short	0x0505
 800f750:	5a3d5305 	.word	0x5a3d5305
 800f754:	3d530505 	.word	0x3d530505
					pxTimer->ucStatus |= tmrSTATUS_IS_ACTIVE;
 800f758:	f897 3028 	ldrb.w	r3, [r7, #40]	; 0x28
					if( prvInsertTimerInActiveList( pxTimer,  xMessage.u.xTimerParameters.xMessageValue + pxTimer->xTimerPeriodInTicks, xTimeNow, xMessage.u.xTimerParameters.xMessageValue ) != pdFALSE )
 800f75c:	69ba      	ldr	r2, [r7, #24]
	listSET_LIST_ITEM_OWNER( &( pxTimer->xTimerListItem ), pxTimer );
 800f75e:	613f      	str	r7, [r7, #16]
					pxTimer->ucStatus |= tmrSTATUS_IS_ACTIVE;
 800f760:	f043 0301 	orr.w	r3, r3, #1
 800f764:	f887 3028 	strb.w	r3, [r7, #40]	; 0x28
					if( prvInsertTimerInActiveList( pxTimer,  xMessage.u.xTimerParameters.xMessageValue + pxTimer->xTimerPeriodInTicks, xTimeNow, xMessage.u.xTimerParameters.xMessageValue ) != pdFALSE )
 800f768:	9b03      	ldr	r3, [sp, #12]
 800f76a:	1899      	adds	r1, r3, r2
 800f76c:	bf2c      	ite	cs
 800f76e:	2001      	movcs	r0, #1
 800f770:	2000      	movcc	r0, #0
	if( xNextExpiryTime <= xTimeNow )
 800f772:	4551      	cmp	r1, sl
	listSET_LIST_ITEM_VALUE( &( pxTimer->xTimerListItem ), xNextExpiryTime );
 800f774:	6079      	str	r1, [r7, #4]
	if( xNextExpiryTime <= xTimeNow )
 800f776:	f200 808c 	bhi.w	800f892 <prvTimerTask+0x1da>
		if( ( ( TickType_t ) ( xTimeNow - xCommandTime ) ) >= pxTimer->xTimerPeriodInTicks ) /*lint !e961 MISRA exception as the casts are only redundant for some ports. */
 800f77a:	ebaa 0303 	sub.w	r3, sl, r3
 800f77e:	429a      	cmp	r2, r3
 800f780:	d832      	bhi.n	800f7e8 <prvTimerTask+0x130>
						pxTimer->pxCallbackFunction( ( TimerHandle_t ) pxTimer );
 800f782:	6a3b      	ldr	r3, [r7, #32]
 800f784:	4638      	mov	r0, r7
 800f786:	4798      	blx	r3
						if( ( pxTimer->ucStatus & tmrSTATUS_IS_AUTORELOAD ) != 0 )
 800f788:	f897 3028 	ldrb.w	r3, [r7, #40]	; 0x28
 800f78c:	075b      	lsls	r3, r3, #29
 800f78e:	d5c0      	bpl.n	800f712 <prvTimerTask+0x5a>
	if( xTimerQueue != NULL )
 800f790:	6822      	ldr	r2, [r4, #0]
							xResult = xTimerGenericCommand( pxTimer, tmrCOMMAND_START_DONT_TRACE, xMessage.u.xTimerParameters.xMessageValue + pxTimer->xTimerPeriodInTicks, NULL, tmrNO_DELAY );
 800f792:	9903      	ldr	r1, [sp, #12]
 800f794:	69bb      	ldr	r3, [r7, #24]
	if( xTimerQueue != NULL )
 800f796:	b172      	cbz	r2, 800f7b6 <prvTimerTask+0xfe>
							xResult = xTimerGenericCommand( pxTimer, tmrCOMMAND_START_DONT_TRACE, xMessage.u.xTimerParameters.xMessageValue + pxTimer->xTimerPeriodInTicks, NULL, tmrNO_DELAY );
 800f798:	440b      	add	r3, r1
		xMessage.u.xTimerParameters.pxTimer = xTimer;
 800f79a:	e9cd 3707 	strd	r3, r7, [sp, #28]
		xMessage.xMessageID = xCommandID;
 800f79e:	2300      	movs	r3, #0
 800f7a0:	9306      	str	r3, [sp, #24]
			if( xTaskGetSchedulerState() == taskSCHEDULER_RUNNING )
 800f7a2:	f7ff fe3f 	bl	800f424 <xTaskGetSchedulerState>
				xReturn = xQueueSendToBack( xTimerQueue, &xMessage, xTicksToWait );
 800f7a6:	2300      	movs	r3, #0
 800f7a8:	6820      	ldr	r0, [r4, #0]
 800f7aa:	461a      	mov	r2, r3
 800f7ac:	a906      	add	r1, sp, #24
 800f7ae:	f7fe fa0d 	bl	800dbcc <xQueueGenericSend>
							configASSERT( xResult );
 800f7b2:	2800      	cmp	r0, #0
 800f7b4:	d1ad      	bne.n	800f712 <prvTimerTask+0x5a>
 800f7b6:	f04f 0350 	mov.w	r3, #80	; 0x50
 800f7ba:	f383 8811 	msr	BASEPRI, r3
 800f7be:	f3bf 8f6f 	isb	sy
 800f7c2:	f3bf 8f4f 	dsb	sy
 800f7c6:	e7fe      	b.n	800f7c6 <prvTimerTask+0x10e>
					pxTimer->ucStatus |= tmrSTATUS_IS_ACTIVE;
 800f7c8:	f897 3028 	ldrb.w	r3, [r7, #40]	; 0x28
 800f7cc:	f043 0301 	orr.w	r3, r3, #1
 800f7d0:	f887 3028 	strb.w	r3, [r7, #40]	; 0x28
					pxTimer->xTimerPeriodInTicks = xMessage.u.xTimerParameters.xMessageValue;
 800f7d4:	9b03      	ldr	r3, [sp, #12]
 800f7d6:	61bb      	str	r3, [r7, #24]
					configASSERT( ( pxTimer->xTimerPeriodInTicks > 0 ) );
 800f7d8:	2b00      	cmp	r3, #0
 800f7da:	f000 809d 	beq.w	800f918 <prvTimerTask+0x260>
					( void ) prvInsertTimerInActiveList( pxTimer, ( xTimeNow + pxTimer->xTimerPeriodInTicks ), xTimeNow, xTimeNow );
 800f7de:	4453      	add	r3, sl
	if( xNextExpiryTime <= xTimeNow )
 800f7e0:	4553      	cmp	r3, sl
	listSET_LIST_ITEM_VALUE( &( pxTimer->xTimerListItem ), xNextExpiryTime );
 800f7e2:	607b      	str	r3, [r7, #4]
	listSET_LIST_ITEM_OWNER( &( pxTimer->xTimerListItem ), pxTimer );
 800f7e4:	613f      	str	r7, [r7, #16]
	if( xNextExpiryTime <= xTimeNow )
 800f7e6:	d85e      	bhi.n	800f8a6 <prvTimerTask+0x1ee>
			vListInsert( pxOverflowTimerList, &( pxTimer->xTimerListItem ) );
 800f7e8:	4b53      	ldr	r3, [pc, #332]	; (800f938 <prvTimerTask+0x280>)
 800f7ea:	1d39      	adds	r1, r7, #4
 800f7ec:	6818      	ldr	r0, [r3, #0]
 800f7ee:	f7fd fe63 	bl	800d4b8 <vListInsert>
	return xProcessTimerNow;
 800f7f2:	e78e      	b.n	800f712 <prvTimerTask+0x5a>
					pxTimer->ucStatus &= ~tmrSTATUS_IS_ACTIVE;
 800f7f4:	f897 3028 	ldrb.w	r3, [r7, #40]	; 0x28
 800f7f8:	f023 0301 	bic.w	r3, r3, #1
 800f7fc:	f887 3028 	strb.w	r3, [r7, #40]	; 0x28
					break;
 800f800:	e787      	b.n	800f712 <prvTimerTask+0x5a>
						if( ( pxTimer->ucStatus & tmrSTATUS_IS_STATICALLY_ALLOCATED ) == ( uint8_t ) 0 )
 800f802:	f897 3028 	ldrb.w	r3, [r7, #40]	; 0x28
 800f806:	079a      	lsls	r2, r3, #30
 800f808:	d552      	bpl.n	800f8b0 <prvTimerTask+0x1f8>
							pxTimer->ucStatus &= ~tmrSTATUS_IS_ACTIVE;
 800f80a:	f023 0301 	bic.w	r3, r3, #1
 800f80e:	f887 3028 	strb.w	r3, [r7, #40]	; 0x28
 800f812:	e77e      	b.n	800f712 <prvTimerTask+0x5a>
				pxCallback->pxCallbackFunction( pxCallback->pvParameter1, pxCallback->ulParameter2 );
 800f814:	9b03      	ldr	r3, [sp, #12]
 800f816:	e9dd 0104 	ldrd	r0, r1, [sp, #16]
 800f81a:	4798      	blx	r3
		if( xMessage.xMessageID >= ( BaseType_t ) 0 )
 800f81c:	9b02      	ldr	r3, [sp, #8]
 800f81e:	2b00      	cmp	r3, #0
 800f820:	f6ff af77 	blt.w	800f712 <prvTimerTask+0x5a>
 800f824:	e77f      	b.n	800f726 <prvTimerTask+0x6e>
	vTaskSuspendAll();
 800f826:	f7ff fc53 	bl	800f0d0 <vTaskSuspendAll>
	xTimeNow = xTaskGetTickCount();
 800f82a:	f7ff fc69 	bl	800f100 <xTaskGetTickCount>
	if( xTimeNow < xLastTime )
 800f82e:	682a      	ldr	r2, [r5, #0]
 800f830:	4282      	cmp	r2, r0
	xTimeNow = xTaskGetTickCount();
 800f832:	4682      	mov	sl, r0
	if( xTimeNow < xLastTime )
 800f834:	d808      	bhi.n	800f848 <prvTimerTask+0x190>
					xListWasEmpty = listLIST_IS_EMPTY( pxOverflowTimerList );
 800f836:	4b40      	ldr	r3, [pc, #256]	; (800f938 <prvTimerTask+0x280>)
	xLastTime = xTimeNow;
 800f838:	f8c5 a000 	str.w	sl, [r5]
					xListWasEmpty = listLIST_IS_EMPTY( pxOverflowTimerList );
 800f83c:	681a      	ldr	r2, [r3, #0]
 800f83e:	6812      	ldr	r2, [r2, #0]
 800f840:	fab2 f282 	clz	r2, r2
 800f844:	0952      	lsrs	r2, r2, #5
 800f846:	e756      	b.n	800f6f6 <prvTimerTask+0x3e>
		prvSwitchTimerLists();
 800f848:	f7ff fee8 	bl	800f61c <prvSwitchTimerLists>
	xLastTime = xTimeNow;
 800f84c:	f8c5 a000 	str.w	sl, [r5]
			( void ) xTaskResumeAll();
 800f850:	f7ff fc46 	bl	800f0e0 <xTaskResumeAll>
 800f854:	e75d      	b.n	800f712 <prvTimerTask+0x5a>
		prvSwitchTimerLists();
 800f856:	f7ff fee1 	bl	800f61c <prvSwitchTimerLists>
		*pxTimerListsWereSwitched = pdTRUE;
 800f85a:	e771      	b.n	800f740 <prvTimerTask+0x88>
				( void ) xTaskResumeAll();
 800f85c:	f7ff fc40 	bl	800f0e0 <xTaskResumeAll>
Timer_t * const pxTimer = ( Timer_t * ) listGET_OWNER_OF_HEAD_ENTRY( pxCurrentTimerList ); /*lint !e9087 !e9079 void * is used as this macro is used with tasks and co-routines too.  Alignment is known to be fine as the type of the pointer stored and retrieved is the same. */
 800f860:	6832      	ldr	r2, [r6, #0]
 800f862:	68d2      	ldr	r2, [r2, #12]
 800f864:	f8d2 b00c 	ldr.w	fp, [r2, #12]
	( void ) uxListRemove( &( pxTimer->xTimerListItem ) );
 800f868:	f10b 0104 	add.w	r1, fp, #4
 800f86c:	4608      	mov	r0, r1
 800f86e:	9101      	str	r1, [sp, #4]
 800f870:	f7fd fe3a 	bl	800d4e8 <uxListRemove>
	if( ( pxTimer->ucStatus & tmrSTATUS_IS_AUTORELOAD ) != 0 )
 800f874:	f89b 0028 	ldrb.w	r0, [fp, #40]	; 0x28
 800f878:	9901      	ldr	r1, [sp, #4]
 800f87a:	f010 0f04 	tst.w	r0, #4
 800f87e:	d11b      	bne.n	800f8b8 <prvTimerTask+0x200>
		pxTimer->ucStatus &= ~tmrSTATUS_IS_ACTIVE;
 800f880:	f020 0001 	bic.w	r0, r0, #1
 800f884:	f88b 0028 	strb.w	r0, [fp, #40]	; 0x28
	pxTimer->pxCallbackFunction( ( TimerHandle_t ) pxTimer );
 800f888:	f8db 3020 	ldr.w	r3, [fp, #32]
 800f88c:	4658      	mov	r0, fp
 800f88e:	4798      	blx	r3
}
 800f890:	e73f      	b.n	800f712 <prvTimerTask+0x5a>
		if( ( xTimeNow < xCommandTime ) && ( xNextExpiryTime >= xCommandTime ) )
 800f892:	4553      	cmp	r3, sl
 800f894:	d902      	bls.n	800f89c <prvTimerTask+0x1e4>
 800f896:	2800      	cmp	r0, #0
 800f898:	f43f af73 	beq.w	800f782 <prvTimerTask+0xca>
			vListInsert( pxCurrentTimerList, &( pxTimer->xTimerListItem ) );
 800f89c:	6830      	ldr	r0, [r6, #0]
 800f89e:	1d39      	adds	r1, r7, #4
 800f8a0:	f7fd fe0a 	bl	800d4b8 <vListInsert>
	return xProcessTimerNow;
 800f8a4:	e735      	b.n	800f712 <prvTimerTask+0x5a>
			vListInsert( pxCurrentTimerList, &( pxTimer->xTimerListItem ) );
 800f8a6:	6830      	ldr	r0, [r6, #0]
 800f8a8:	1d39      	adds	r1, r7, #4
 800f8aa:	f7fd fe05 	bl	800d4b8 <vListInsert>
 800f8ae:	e730      	b.n	800f712 <prvTimerTask+0x5a>
							vPortFree( pxTimer );
 800f8b0:	4638      	mov	r0, r7
 800f8b2:	f7fd fd7d 	bl	800d3b0 <vPortFree>
 800f8b6:	e72c      	b.n	800f712 <prvTimerTask+0x5a>
		if( prvInsertTimerInActiveList( pxTimer, ( xNextExpireTime + pxTimer->xTimerPeriodInTicks ), xTimeNow, xNextExpireTime ) != pdFALSE )
 800f8b8:	f8db 2018 	ldr.w	r2, [fp, #24]
	listSET_LIST_ITEM_OWNER( &( pxTimer->xTimerListItem ), pxTimer );
 800f8bc:	f8cb b010 	str.w	fp, [fp, #16]
		if( prvInsertTimerInActiveList( pxTimer, ( xNextExpireTime + pxTimer->xTimerPeriodInTicks ), xTimeNow, xNextExpireTime ) != pdFALSE )
 800f8c0:	18b8      	adds	r0, r7, r2
	if( xNextExpiryTime <= xTimeNow )
 800f8c2:	4550      	cmp	r0, sl
	listSET_LIST_ITEM_VALUE( &( pxTimer->xTimerListItem ), xNextExpiryTime );
 800f8c4:	f8cb 0004 	str.w	r0, [fp, #4]
	if( xNextExpiryTime <= xTimeNow )
 800f8c8:	d903      	bls.n	800f8d2 <prvTimerTask+0x21a>
			vListInsert( pxCurrentTimerList, &( pxTimer->xTimerListItem ) );
 800f8ca:	6830      	ldr	r0, [r6, #0]
 800f8cc:	f7fd fdf4 	bl	800d4b8 <vListInsert>
	return xProcessTimerNow;
 800f8d0:	e7da      	b.n	800f888 <prvTimerTask+0x1d0>
		if( ( ( TickType_t ) ( xTimeNow - xCommandTime ) ) >= pxTimer->xTimerPeriodInTicks ) /*lint !e961 MISRA exception as the casts are only redundant for some ports. */
 800f8d2:	ebaa 0307 	sub.w	r3, sl, r7
 800f8d6:	429a      	cmp	r2, r3
 800f8d8:	d819      	bhi.n	800f90e <prvTimerTask+0x256>
	if( xTimerQueue != NULL )
 800f8da:	6823      	ldr	r3, [r4, #0]
 800f8dc:	b173      	cbz	r3, 800f8fc <prvTimerTask+0x244>
		xMessage.xMessageID = xCommandID;
 800f8de:	2300      	movs	r3, #0
 800f8e0:	9306      	str	r3, [sp, #24]
		xMessage.u.xTimerParameters.xMessageValue = xOptionalValue;
 800f8e2:	9707      	str	r7, [sp, #28]
		xMessage.u.xTimerParameters.pxTimer = xTimer;
 800f8e4:	f8cd b020 	str.w	fp, [sp, #32]
			if( xTaskGetSchedulerState() == taskSCHEDULER_RUNNING )
 800f8e8:	f7ff fd9c 	bl	800f424 <xTaskGetSchedulerState>
				xReturn = xQueueSendToBack( xTimerQueue, &xMessage, xTicksToWait );
 800f8ec:	2300      	movs	r3, #0
 800f8ee:	6820      	ldr	r0, [r4, #0]
 800f8f0:	461a      	mov	r2, r3
 800f8f2:	a906      	add	r1, sp, #24
 800f8f4:	f7fe f96a 	bl	800dbcc <xQueueGenericSend>
			configASSERT( xResult );
 800f8f8:	2800      	cmp	r0, #0
 800f8fa:	d1c5      	bne.n	800f888 <prvTimerTask+0x1d0>
 800f8fc:	f04f 0350 	mov.w	r3, #80	; 0x50
 800f900:	f383 8811 	msr	BASEPRI, r3
 800f904:	f3bf 8f6f 	isb	sy
 800f908:	f3bf 8f4f 	dsb	sy
 800f90c:	e7fe      	b.n	800f90c <prvTimerTask+0x254>
			vListInsert( pxOverflowTimerList, &( pxTimer->xTimerListItem ) );
 800f90e:	4b0a      	ldr	r3, [pc, #40]	; (800f938 <prvTimerTask+0x280>)
 800f910:	6818      	ldr	r0, [r3, #0]
 800f912:	f7fd fdd1 	bl	800d4b8 <vListInsert>
	return xProcessTimerNow;
 800f916:	e7b7      	b.n	800f888 <prvTimerTask+0x1d0>
 800f918:	f04f 0350 	mov.w	r3, #80	; 0x50
 800f91c:	f383 8811 	msr	BASEPRI, r3
 800f920:	f3bf 8f6f 	isb	sy
 800f924:	f3bf 8f4f 	dsb	sy
					configASSERT( ( pxTimer->xTimerPeriodInTicks > 0 ) );
 800f928:	e7fe      	b.n	800f928 <prvTimerTask+0x270>
 800f92a:	bf00      	nop
 800f92c:	20012dec 	.word	0x20012dec
 800f930:	20012ebc 	.word	0x20012ebc
 800f934:	20012f10 	.word	0x20012f10
 800f938:	20012df0 	.word	0x20012df0

0800f93c <xTimerCreateTimerTask>:
{
 800f93c:	b5f0      	push	{r4, r5, r6, r7, lr}
	/* Check that the list from which active timers are referenced, and the
	queue used to communicate with the timer service, have been
	initialised. */
	taskENTER_CRITICAL();
	{
		if( xTimerQueue == NULL )
 800f93e:	4c23      	ldr	r4, [pc, #140]	; (800f9cc <xTimerCreateTimerTask+0x90>)
{
 800f940:	b089      	sub	sp, #36	; 0x24
	taskENTER_CRITICAL();
 800f942:	f7fd fe4f 	bl	800d5e4 <vPortEnterCritical>
		if( xTimerQueue == NULL )
 800f946:	6825      	ldr	r5, [r4, #0]
 800f948:	b335      	cbz	r5, 800f998 <xTimerCreateTimerTask+0x5c>
		else
		{
			mtCOVERAGE_TEST_MARKER();
		}
	}
	taskEXIT_CRITICAL();
 800f94a:	f7fd fe6d 	bl	800d628 <vPortExitCritical>
	if( xTimerQueue != NULL )
 800f94e:	6823      	ldr	r3, [r4, #0]
 800f950:	b1cb      	cbz	r3, 800f986 <xTimerCreateTimerTask+0x4a>
			StaticTask_t *pxTimerTaskTCBBuffer = NULL;
 800f952:	2400      	movs	r4, #0
			vApplicationGetTimerTaskMemory( &pxTimerTaskTCBBuffer, &pxTimerTaskStackBuffer, &ulTimerTaskStackSize );
 800f954:	aa07      	add	r2, sp, #28
 800f956:	a906      	add	r1, sp, #24
 800f958:	a805      	add	r0, sp, #20
			StackType_t *pxTimerTaskStackBuffer = NULL;
 800f95a:	e9cd 4405 	strd	r4, r4, [sp, #20]
			vApplicationGetTimerTaskMemory( &pxTimerTaskTCBBuffer, &pxTimerTaskStackBuffer, &ulTimerTaskStackSize );
 800f95e:	f7fd fc5b 	bl	800d218 <vApplicationGetTimerTaskMemory>
			xTimerTaskHandle = xTaskCreateStatic(	prvTimerTask,
 800f962:	e9dd 0105 	ldrd	r0, r1, [sp, #20]
 800f966:	2302      	movs	r3, #2
 800f968:	e9cd 1001 	strd	r1, r0, [sp, #4]
 800f96c:	9300      	str	r3, [sp, #0]
 800f96e:	9a07      	ldr	r2, [sp, #28]
 800f970:	4917      	ldr	r1, [pc, #92]	; (800f9d0 <xTimerCreateTimerTask+0x94>)
 800f972:	4818      	ldr	r0, [pc, #96]	; (800f9d4 <xTimerCreateTimerTask+0x98>)
 800f974:	4623      	mov	r3, r4
 800f976:	f7ff fa6d 	bl	800ee54 <xTaskCreateStatic>
 800f97a:	4b17      	ldr	r3, [pc, #92]	; (800f9d8 <xTimerCreateTimerTask+0x9c>)
 800f97c:	6018      	str	r0, [r3, #0]
			if( xTimerTaskHandle != NULL )
 800f97e:	b110      	cbz	r0, 800f986 <xTimerCreateTimerTask+0x4a>
}
 800f980:	2001      	movs	r0, #1
 800f982:	b009      	add	sp, #36	; 0x24
 800f984:	bdf0      	pop	{r4, r5, r6, r7, pc}
 800f986:	f04f 0350 	mov.w	r3, #80	; 0x50
 800f98a:	f383 8811 	msr	BASEPRI, r3
 800f98e:	f3bf 8f6f 	isb	sy
 800f992:	f3bf 8f4f 	dsb	sy
	configASSERT( xReturn );
 800f996:	e7fe      	b.n	800f996 <xTimerCreateTimerTask+0x5a>
			vListInitialise( &xActiveTimerList1 );
 800f998:	4f10      	ldr	r7, [pc, #64]	; (800f9dc <xTimerCreateTimerTask+0xa0>)
			vListInitialise( &xActiveTimerList2 );
 800f99a:	4e11      	ldr	r6, [pc, #68]	; (800f9e0 <xTimerCreateTimerTask+0xa4>)
			vListInitialise( &xActiveTimerList1 );
 800f99c:	4638      	mov	r0, r7
 800f99e:	f7fd fd6b 	bl	800d478 <vListInitialise>
			vListInitialise( &xActiveTimerList2 );
 800f9a2:	4630      	mov	r0, r6
 800f9a4:	f7fd fd68 	bl	800d478 <vListInitialise>
			pxCurrentTimerList = &xActiveTimerList1;
 800f9a8:	4a0e      	ldr	r2, [pc, #56]	; (800f9e4 <xTimerCreateTimerTask+0xa8>)
				xTimerQueue = xQueueCreateStatic( ( UBaseType_t ) configTIMER_QUEUE_LENGTH, ( UBaseType_t ) sizeof( DaemonTaskMessage_t ), &( ucStaticTimerQueueStorage[ 0 ] ), &xStaticTimerQueue );
 800f9aa:	9500      	str	r5, [sp, #0]
			pxCurrentTimerList = &xActiveTimerList1;
 800f9ac:	6017      	str	r7, [r2, #0]
			pxOverflowTimerList = &xActiveTimerList2;
 800f9ae:	4a0e      	ldr	r2, [pc, #56]	; (800f9e8 <xTimerCreateTimerTask+0xac>)
				xTimerQueue = xQueueCreateStatic( ( UBaseType_t ) configTIMER_QUEUE_LENGTH, ( UBaseType_t ) sizeof( DaemonTaskMessage_t ), &( ucStaticTimerQueueStorage[ 0 ] ), &xStaticTimerQueue );
 800f9b0:	4b0e      	ldr	r3, [pc, #56]	; (800f9ec <xTimerCreateTimerTask+0xb0>)
			pxOverflowTimerList = &xActiveTimerList2;
 800f9b2:	6016      	str	r6, [r2, #0]
				xTimerQueue = xQueueCreateStatic( ( UBaseType_t ) configTIMER_QUEUE_LENGTH, ( UBaseType_t ) sizeof( DaemonTaskMessage_t ), &( ucStaticTimerQueueStorage[ 0 ] ), &xStaticTimerQueue );
 800f9b4:	2110      	movs	r1, #16
 800f9b6:	4a0e      	ldr	r2, [pc, #56]	; (800f9f0 <xTimerCreateTimerTask+0xb4>)
 800f9b8:	200a      	movs	r0, #10
 800f9ba:	f7fd ffb1 	bl	800d920 <xQueueGenericCreateStatic>
 800f9be:	6020      	str	r0, [r4, #0]
				if( xTimerQueue != NULL )
 800f9c0:	2800      	cmp	r0, #0
 800f9c2:	d0c2      	beq.n	800f94a <xTimerCreateTimerTask+0xe>
					vQueueAddToRegistry( xTimerQueue, "TmrQ" );
 800f9c4:	490b      	ldr	r1, [pc, #44]	; (800f9f4 <xTimerCreateTimerTask+0xb8>)
 800f9c6:	f7fe ff0d 	bl	800e7e4 <vQueueAddToRegistry>
 800f9ca:	e7be      	b.n	800f94a <xTimerCreateTimerTask+0xe>
 800f9cc:	20012f10 	.word	0x20012f10
 800f9d0:	0802e09c 	.word	0x0802e09c
 800f9d4:	0800f6b9 	.word	0x0800f6b9
 800f9d8:	20012f14 	.word	0x20012f14
 800f9dc:	20012e94 	.word	0x20012e94
 800f9e0:	20012ea8 	.word	0x20012ea8
 800f9e4:	20012dec 	.word	0x20012dec
 800f9e8:	20012df0 	.word	0x20012df0
 800f9ec:	20012ec0 	.word	0x20012ec0
 800f9f0:	20012df4 	.word	0x20012df4
 800f9f4:	0802e094 	.word	0x0802e094

0800f9f8 <_ZNK8touchgfx17AbstractPartition18getAllocationCountEv>:
 800f9f8:	8880      	ldrh	r0, [r0, #4]
 800f9fa:	4770      	bx	lr

0800f9fc <_ZN8touchgfx17AbstractPartition7indexOfEPKv>:
 800f9fc:	b570      	push	{r4, r5, r6, lr}
 800f9fe:	6803      	ldr	r3, [r0, #0]
 800fa00:	4605      	mov	r5, r0
 800fa02:	460c      	mov	r4, r1
 800fa04:	6a5b      	ldr	r3, [r3, #36]	; 0x24
 800fa06:	2100      	movs	r1, #0
 800fa08:	4798      	blx	r3
 800fa0a:	682b      	ldr	r3, [r5, #0]
 800fa0c:	4606      	mov	r6, r0
 800fa0e:	6a1b      	ldr	r3, [r3, #32]
 800fa10:	4628      	mov	r0, r5
 800fa12:	4798      	blx	r3
 800fa14:	1ba4      	subs	r4, r4, r6
 800fa16:	b2a4      	uxth	r4, r4
 800fa18:	fbb4 f0f0 	udiv	r0, r4, r0
 800fa1c:	bd70      	pop	{r4, r5, r6, pc}

0800fa1e <_ZN8touchgfx17AbstractPartition5clearEv>:
 800fa1e:	2300      	movs	r3, #0
 800fa20:	8083      	strh	r3, [r0, #4]
 800fa22:	4770      	bx	lr

0800fa24 <_ZN8touchgfx17AbstractPartition8allocateEt>:
 800fa24:	b510      	push	{r4, lr}
 800fa26:	6803      	ldr	r3, [r0, #0]
 800fa28:	8881      	ldrh	r1, [r0, #4]
 800fa2a:	6a5b      	ldr	r3, [r3, #36]	; 0x24
 800fa2c:	4604      	mov	r4, r0
 800fa2e:	4798      	blx	r3
 800fa30:	88a3      	ldrh	r3, [r4, #4]
 800fa32:	3301      	adds	r3, #1
 800fa34:	80a3      	strh	r3, [r4, #4]
 800fa36:	bd10      	pop	{r4, pc}

0800fa38 <_ZN8touchgfx17AbstractPartition10allocateAtEtt>:
 800fa38:	6803      	ldr	r3, [r0, #0]
 800fa3a:	6a5b      	ldr	r3, [r3, #36]	; 0x24
 800fa3c:	4718      	bx	r3

0800fa3e <_ZN8touchgfx17AbstractPartitionD1Ev>:
 800fa3e:	4770      	bx	lr

0800fa40 <_ZN8touchgfx17AbstractPartitionC1Ev>:
 800fa40:	4a02      	ldr	r2, [pc, #8]	; (800fa4c <_ZN8touchgfx17AbstractPartitionC1Ev+0xc>)
 800fa42:	6002      	str	r2, [r0, #0]
 800fa44:	2200      	movs	r2, #0
 800fa46:	8082      	strh	r2, [r0, #4]
 800fa48:	4770      	bx	lr
 800fa4a:	bf00      	nop
 800fa4c:	0802e0ac 	.word	0x0802e0ac

0800fa50 <_ZNK8touchgfx25AbstractProgressIndicator17invalidateContentEv>:
 800fa50:	b510      	push	{r4, lr}
 800fa52:	6803      	ldr	r3, [r0, #0]
 800fa54:	f8d3 30c8 	ldr.w	r3, [r3, #200]	; 0xc8
 800fa58:	4604      	mov	r4, r0
 800fa5a:	4798      	blx	r3
 800fa5c:	b110      	cbz	r0, 800fa64 <_ZNK8touchgfx25AbstractProgressIndicator17invalidateContentEv+0x14>
 800fa5e:	4620      	mov	r0, r4
 800fa60:	f7f1 fade 	bl	8001020 <_ZNK8touchgfx8Drawable17invalidateContentEv>
 800fa64:	bd10      	pop	{r4, pc}

0800fa66 <_ZNK8touchgfx25AbstractProgressIndicator21getProgressIndicatorXEv>:
 800fa66:	f9b0 005c 	ldrsh.w	r0, [r0, #92]	; 0x5c
 800fa6a:	4770      	bx	lr

0800fa6c <_ZNK8touchgfx25AbstractProgressIndicator21getProgressIndicatorYEv>:
 800fa6c:	f9b0 005e 	ldrsh.w	r0, [r0, #94]	; 0x5e
 800fa70:	4770      	bx	lr

0800fa72 <_ZNK8touchgfx25AbstractProgressIndicator25getProgressIndicatorWidthEv>:
 800fa72:	f9b0 0060 	ldrsh.w	r0, [r0, #96]	; 0x60
 800fa76:	4770      	bx	lr

0800fa78 <_ZNK8touchgfx25AbstractProgressIndicator26getProgressIndicatorHeightEv>:
 800fa78:	f9b0 0062 	ldrsh.w	r0, [r0, #98]	; 0x62
 800fa7c:	4770      	bx	lr

0800fa7e <_ZN8touchgfx25AbstractProgressIndicator8setRangeEiitt>:
 800fa7e:	b5f8      	push	{r3, r4, r5, r6, r7, lr}
 800fa80:	e9c0 1221 	strd	r1, r2, [r0, #132]	; 0x84
 800fa84:	461e      	mov	r6, r3
 800fa86:	6803      	ldr	r3, [r0, #0]
 800fa88:	460f      	mov	r7, r1
 800fa8a:	f8d3 30b0 	ldr.w	r3, [r3, #176]	; 0xb0
 800fa8e:	f8d0 108c 	ldr.w	r1, [r0, #140]	; 0x8c
 800fa92:	4604      	mov	r4, r0
 800fa94:	4615      	mov	r5, r2
 800fa96:	4798      	blx	r3
 800fa98:	b93e      	cbnz	r6, 800faaa <_ZN8touchgfx25AbstractProgressIndicator8setRangeEiitt+0x2c>
 800fa9a:	1bed      	subs	r5, r5, r7
 800fa9c:	f8a4 5090 	strh.w	r5, [r4, #144]	; 0x90
 800faa0:	f8bd 3018 	ldrh.w	r3, [sp, #24]
 800faa4:	f8a4 3092 	strh.w	r3, [r4, #146]	; 0x92
 800faa8:	bdf8      	pop	{r3, r4, r5, r6, r7, pc}
 800faaa:	f8a4 6090 	strh.w	r6, [r4, #144]	; 0x90
 800faae:	e7f7      	b.n	800faa0 <_ZN8touchgfx25AbstractProgressIndicator8setRangeEiitt+0x22>

0800fab0 <_ZNK8touchgfx25AbstractProgressIndicator8getRangeERiS1_RtS2_>:
 800fab0:	b510      	push	{r4, lr}
 800fab2:	f8d0 4084 	ldr.w	r4, [r0, #132]	; 0x84
 800fab6:	600c      	str	r4, [r1, #0]
 800fab8:	f8d0 1088 	ldr.w	r1, [r0, #136]	; 0x88
 800fabc:	6011      	str	r1, [r2, #0]
 800fabe:	f8b0 2090 	ldrh.w	r2, [r0, #144]	; 0x90
 800fac2:	801a      	strh	r2, [r3, #0]
 800fac4:	9b02      	ldr	r3, [sp, #8]
 800fac6:	f8b0 2092 	ldrh.w	r2, [r0, #146]	; 0x92
 800faca:	801a      	strh	r2, [r3, #0]
 800facc:	bd10      	pop	{r4, pc}

0800face <_ZNK8touchgfx25AbstractProgressIndicator8getRangeERiS1_Rt>:
 800face:	b510      	push	{r4, lr}
 800fad0:	f8d0 4084 	ldr.w	r4, [r0, #132]	; 0x84
 800fad4:	600c      	str	r4, [r1, #0]
 800fad6:	f8d0 1088 	ldr.w	r1, [r0, #136]	; 0x88
 800fada:	6011      	str	r1, [r2, #0]
 800fadc:	f8b0 2090 	ldrh.w	r2, [r0, #144]	; 0x90
 800fae0:	801a      	strh	r2, [r3, #0]
 800fae2:	bd10      	pop	{r4, pc}

0800fae4 <_ZNK8touchgfx25AbstractProgressIndicator8getRangeERiS1_>:
 800fae4:	f8d0 3084 	ldr.w	r3, [r0, #132]	; 0x84
 800fae8:	600b      	str	r3, [r1, #0]
 800faea:	f8d0 3088 	ldr.w	r3, [r0, #136]	; 0x88
 800faee:	6013      	str	r3, [r2, #0]
 800faf0:	4770      	bx	lr

0800faf2 <_ZN8touchgfx25AbstractProgressIndicator17setEasingEquationEPFstsstE>:
 800faf2:	f8c0 1094 	str.w	r1, [r0, #148]	; 0x94
 800faf6:	4770      	bx	lr

0800faf8 <_ZNK8touchgfx25AbstractProgressIndicator8getValueEv>:
 800faf8:	f8d0 008c 	ldr.w	r0, [r0, #140]	; 0x8c
 800fafc:	4770      	bx	lr

0800fafe <_ZN8touchgfx25AbstractProgressIndicator8setAlphaEh>:
 800fafe:	f880 1054 	strb.w	r1, [r0, #84]	; 0x54
 800fb02:	4770      	bx	lr

0800fb04 <_ZNK8touchgfx25AbstractProgressIndicator8getAlphaEv>:
 800fb04:	f890 0054 	ldrb.w	r0, [r0, #84]	; 0x54
 800fb08:	4770      	bx	lr

0800fb0a <_ZN8touchgfx25AbstractProgressIndicatorD1Ev>:
 800fb0a:	4770      	bx	lr

0800fb0c <_ZN8touchgfx25AbstractProgressIndicatorD0Ev>:
 800fb0c:	b510      	push	{r4, lr}
 800fb0e:	21b4      	movs	r1, #180	; 0xb4
 800fb10:	4604      	mov	r4, r0
 800fb12:	f019 fc84 	bl	802941e <_ZdlPvj>
 800fb16:	4620      	mov	r0, r4
 800fb18:	bd10      	pop	{r4, pc}

0800fb1a <_ZN8touchgfx25AbstractProgressIndicator11updateValueEit>:
 800fb1a:	b570      	push	{r4, r5, r6, lr}
 800fb1c:	f8d0 5084 	ldr.w	r5, [r0, #132]	; 0x84
 800fb20:	428d      	cmp	r5, r1
 800fb22:	bfb8      	it	lt
 800fb24:	460d      	movlt	r5, r1
 800fb26:	f8d0 1088 	ldr.w	r1, [r0, #136]	; 0x88
 800fb2a:	428d      	cmp	r5, r1
 800fb2c:	4604      	mov	r4, r0
 800fb2e:	bfa8      	it	ge
 800fb30:	460d      	movge	r5, r1
 800fb32:	4616      	mov	r6, r2
 800fb34:	b99a      	cbnz	r2, 800fb5e <_ZN8touchgfx25AbstractProgressIndicator11updateValueEit+0x44>
 800fb36:	6803      	ldr	r3, [r0, #0]
 800fb38:	4629      	mov	r1, r5
 800fb3a:	f8d3 30b0 	ldr.w	r3, [r3, #176]	; 0xb0
 800fb3e:	4798      	blx	r3
 800fb40:	f8d4 00b0 	ldr.w	r0, [r4, #176]	; 0xb0
 800fb44:	b368      	cbz	r0, 800fba2 <_ZN8touchgfx25AbstractProgressIndicator11updateValueEit+0x88>
 800fb46:	6803      	ldr	r3, [r0, #0]
 800fb48:	68db      	ldr	r3, [r3, #12]
 800fb4a:	4798      	blx	r3
 800fb4c:	b348      	cbz	r0, 800fba2 <_ZN8touchgfx25AbstractProgressIndicator11updateValueEit+0x88>
 800fb4e:	f8d4 00b0 	ldr.w	r0, [r4, #176]	; 0xb0
 800fb52:	6803      	ldr	r3, [r0, #0]
 800fb54:	4621      	mov	r1, r4
 800fb56:	689b      	ldr	r3, [r3, #8]
 800fb58:	e8bd 4070 	ldmia.w	sp!, {r4, r5, r6, lr}
 800fb5c:	4718      	bx	r3
 800fb5e:	f8d0 30a4 	ldr.w	r3, [r0, #164]	; 0xa4
 800fb62:	2b00      	cmp	r3, #0
 800fb64:	dd08      	ble.n	800fb78 <_ZN8touchgfx25AbstractProgressIndicator11updateValueEit+0x5e>
 800fb66:	f005 fbe3 	bl	8015330 <_ZN8touchgfx11Application11getInstanceEv>
 800fb6a:	4621      	mov	r1, r4
 800fb6c:	3004      	adds	r0, #4
 800fb6e:	f005 fc2c 	bl	80153ca <_ZN8touchgfx11Application12TimerWidgets6removeEPKNS_8DrawableE>
 800fb72:	2300      	movs	r3, #0
 800fb74:	f884 3098 	strb.w	r3, [r4, #152]	; 0x98
 800fb78:	6823      	ldr	r3, [r4, #0]
 800fb7a:	4620      	mov	r0, r4
 800fb7c:	f8d3 30bc 	ldr.w	r3, [r3, #188]	; 0xbc
 800fb80:	4798      	blx	r3
 800fb82:	2300      	movs	r3, #0
 800fb84:	f8c4 30a8 	str.w	r3, [r4, #168]	; 0xa8
 800fb88:	e9c4 0527 	strd	r0, r5, [r4, #156]	; 0x9c
 800fb8c:	f8c4 60a4 	str.w	r6, [r4, #164]	; 0xa4
 800fb90:	f005 fbce 	bl	8015330 <_ZN8touchgfx11Application11getInstanceEv>
 800fb94:	4621      	mov	r1, r4
 800fb96:	3004      	adds	r0, #4
 800fb98:	f005 fcc0 	bl	801551c <_ZN8touchgfx11Application12TimerWidgets3addEPNS_8DrawableE>
 800fb9c:	2301      	movs	r3, #1
 800fb9e:	f884 3098 	strb.w	r3, [r4, #152]	; 0x98
 800fba2:	bd70      	pop	{r4, r5, r6, pc}

0800fba4 <_ZN8touchgfx25AbstractProgressIndicator8setValueEi>:
 800fba4:	b510      	push	{r4, lr}
 800fba6:	f8d0 3084 	ldr.w	r3, [r0, #132]	; 0x84
 800fbaa:	4299      	cmp	r1, r3
 800fbac:	bfb8      	it	lt
 800fbae:	4619      	movlt	r1, r3
 800fbb0:	f8d0 3088 	ldr.w	r3, [r0, #136]	; 0x88
 800fbb4:	4299      	cmp	r1, r3
 800fbb6:	bfa8      	it	ge
 800fbb8:	4619      	movge	r1, r3
 800fbba:	f8d0 308c 	ldr.w	r3, [r0, #140]	; 0x8c
 800fbbe:	428b      	cmp	r3, r1
 800fbc0:	4604      	mov	r4, r0
 800fbc2:	d010      	beq.n	800fbe6 <_ZN8touchgfx25AbstractProgressIndicator8setValueEi+0x42>
 800fbc4:	f8c0 108c 	str.w	r1, [r0, #140]	; 0x8c
 800fbc8:	f8d0 00ac 	ldr.w	r0, [r0, #172]	; 0xac
 800fbcc:	b158      	cbz	r0, 800fbe6 <_ZN8touchgfx25AbstractProgressIndicator8setValueEi+0x42>
 800fbce:	6803      	ldr	r3, [r0, #0]
 800fbd0:	68db      	ldr	r3, [r3, #12]
 800fbd2:	4798      	blx	r3
 800fbd4:	b138      	cbz	r0, 800fbe6 <_ZN8touchgfx25AbstractProgressIndicator8setValueEi+0x42>
 800fbd6:	f8d4 00ac 	ldr.w	r0, [r4, #172]	; 0xac
 800fbda:	6803      	ldr	r3, [r0, #0]
 800fbdc:	4621      	mov	r1, r4
 800fbde:	689b      	ldr	r3, [r3, #8]
 800fbe0:	e8bd 4010 	ldmia.w	sp!, {r4, lr}
 800fbe4:	4718      	bx	r3
 800fbe6:	bd10      	pop	{r4, pc}

0800fbe8 <_ZNK8touchgfx25AbstractProgressIndicator11getProgressEt>:
 800fbe8:	b5f7      	push	{r0, r1, r2, r4, r5, r6, r7, lr}
 800fbea:	4604      	mov	r4, r0
 800fbec:	460d      	mov	r5, r1
 800fbee:	b1a9      	cbz	r1, 800fc1c <_ZNK8touchgfx25AbstractProgressIndicator11getProgressEt+0x34>
 800fbf0:	f8b0 6092 	ldrh.w	r6, [r0, #146]	; 0x92
 800fbf4:	f8b4 1090 	ldrh.w	r1, [r4, #144]	; 0x90
 800fbf8:	f8d4 708c 	ldr.w	r7, [r4, #140]	; 0x8c
 800fbfc:	e9d0 0221 	ldrd	r0, r2, [r0, #132]	; 0x84
 800fc00:	ab01      	add	r3, sp, #4
 800fc02:	1a12      	subs	r2, r2, r0
 800fc04:	1b89      	subs	r1, r1, r6
 800fc06:	1a38      	subs	r0, r7, r0
 800fc08:	f006 fe48 	bl	801689c <_ZN8touchgfx6muldivElllRl>
 800fc0c:	4629      	mov	r1, r5
 800fc0e:	ab01      	add	r3, sp, #4
 800fc10:	f8b4 2090 	ldrh.w	r2, [r4, #144]	; 0x90
 800fc14:	4430      	add	r0, r6
 800fc16:	f006 fe41 	bl	801689c <_ZN8touchgfx6muldivElllRl>
 800fc1a:	b285      	uxth	r5, r0
 800fc1c:	4628      	mov	r0, r5
 800fc1e:	b003      	add	sp, #12
 800fc20:	bdf0      	pop	{r4, r5, r6, r7, pc}

0800fc22 <_ZN8touchgfx25AbstractProgressIndicator15handleTickEventEv>:
 800fc22:	b570      	push	{r4, r5, r6, lr}
 800fc24:	f890 3098 	ldrb.w	r3, [r0, #152]	; 0x98
 800fc28:	4604      	mov	r4, r0
 800fc2a:	2b00      	cmp	r3, #0
 800fc2c:	d035      	beq.n	800fc9a <_ZN8touchgfx25AbstractProgressIndicator15handleTickEventEv+0x78>
 800fc2e:	e9d4 3227 	ldrd	r3, r2, [r4, #156]	; 0x9c
 800fc32:	f8d0 00a8 	ldr.w	r0, [r0, #168]	; 0xa8
 800fc36:	f8d4 5094 	ldr.w	r5, [r4, #148]	; 0x94
 800fc3a:	3001      	adds	r0, #1
 800fc3c:	1ad2      	subs	r2, r2, r3
 800fc3e:	b212      	sxth	r2, r2
 800fc40:	f8c4 00a8 	str.w	r0, [r4, #168]	; 0xa8
 800fc44:	f8b4 30a4 	ldrh.w	r3, [r4, #164]	; 0xa4
 800fc48:	2100      	movs	r1, #0
 800fc4a:	b280      	uxth	r0, r0
 800fc4c:	47a8      	blx	r5
 800fc4e:	f8d4 109c 	ldr.w	r1, [r4, #156]	; 0x9c
 800fc52:	6823      	ldr	r3, [r4, #0]
 800fc54:	4401      	add	r1, r0
 800fc56:	f8d3 30b0 	ldr.w	r3, [r3, #176]	; 0xb0
 800fc5a:	4620      	mov	r0, r4
 800fc5c:	4798      	blx	r3
 800fc5e:	e9d4 3229 	ldrd	r3, r2, [r4, #164]	; 0xa4
 800fc62:	429a      	cmp	r2, r3
 800fc64:	db19      	blt.n	800fc9a <_ZN8touchgfx25AbstractProgressIndicator15handleTickEventEv+0x78>
 800fc66:	2500      	movs	r5, #0
 800fc68:	e9c4 5529 	strd	r5, r5, [r4, #164]	; 0xa4
 800fc6c:	f005 fb60 	bl	8015330 <_ZN8touchgfx11Application11getInstanceEv>
 800fc70:	4621      	mov	r1, r4
 800fc72:	3004      	adds	r0, #4
 800fc74:	f005 fba9 	bl	80153ca <_ZN8touchgfx11Application12TimerWidgets6removeEPKNS_8DrawableE>
 800fc78:	f8d4 00b0 	ldr.w	r0, [r4, #176]	; 0xb0
 800fc7c:	f884 5098 	strb.w	r5, [r4, #152]	; 0x98
 800fc80:	b158      	cbz	r0, 800fc9a <_ZN8touchgfx25AbstractProgressIndicator15handleTickEventEv+0x78>
 800fc82:	6803      	ldr	r3, [r0, #0]
 800fc84:	68db      	ldr	r3, [r3, #12]
 800fc86:	4798      	blx	r3
 800fc88:	b138      	cbz	r0, 800fc9a <_ZN8touchgfx25AbstractProgressIndicator15handleTickEventEv+0x78>
 800fc8a:	f8d4 00b0 	ldr.w	r0, [r4, #176]	; 0xb0
 800fc8e:	6803      	ldr	r3, [r0, #0]
 800fc90:	4621      	mov	r1, r4
 800fc92:	689b      	ldr	r3, [r3, #8]
 800fc94:	e8bd 4070 	ldmia.w	sp!, {r4, r5, r6, lr}
 800fc98:	4718      	bx	r3
 800fc9a:	bd70      	pop	{r4, r5, r6, pc}

0800fc9c <_ZN8touchgfx8DrawableC1Ev>:
 800fc9c:	4a0a      	ldr	r2, [pc, #40]	; (800fcc8 <_ZN8touchgfx8DrawableC1Ev+0x2c>)
 800fc9e:	6002      	str	r2, [r0, #0]
 800fca0:	2200      	movs	r2, #0
 800fca2:	8082      	strh	r2, [r0, #4]
 800fca4:	80c2      	strh	r2, [r0, #6]
 800fca6:	8102      	strh	r2, [r0, #8]
 800fca8:	8142      	strh	r2, [r0, #10]
 800fcaa:	8182      	strh	r2, [r0, #12]
 800fcac:	81c2      	strh	r2, [r0, #14]
 800fcae:	8202      	strh	r2, [r0, #16]
 800fcb0:	8242      	strh	r2, [r0, #18]
 800fcb2:	e9c0 2205 	strd	r2, r2, [r0, #20]
 800fcb6:	61c2      	str	r2, [r0, #28]
 800fcb8:	8402      	strh	r2, [r0, #32]
 800fcba:	8442      	strh	r2, [r0, #34]	; 0x22
 800fcbc:	f880 2024 	strb.w	r2, [r0, #36]	; 0x24
 800fcc0:	2201      	movs	r2, #1
 800fcc2:	f880 2025 	strb.w	r2, [r0, #37]	; 0x25
 800fcc6:	4770      	bx	lr
 800fcc8:	0802e84c 	.word	0x0802e84c

0800fccc <_ZN8touchgfx8Drawable14setWidthHeightEss>:
 800fccc:	b570      	push	{r4, r5, r6, lr}
 800fcce:	6803      	ldr	r3, [r0, #0]
 800fcd0:	4604      	mov	r4, r0
 800fcd2:	6b9b      	ldr	r3, [r3, #56]	; 0x38
 800fcd4:	4615      	mov	r5, r2
 800fcd6:	4798      	blx	r3
 800fcd8:	6823      	ldr	r3, [r4, #0]
 800fcda:	4629      	mov	r1, r5
 800fcdc:	4620      	mov	r0, r4
 800fcde:	6bdb      	ldr	r3, [r3, #60]	; 0x3c
 800fce0:	e8bd 4070 	ldmia.w	sp!, {r4, r5, r6, lr}
 800fce4:	4718      	bx	r3

0800fce6 <_ZN8touchgfx25AbstractProgressIndicator28setProgressIndicatorPositionEssss>:
 800fce6:	e92d 41f0 	stmdb	sp!, {r4, r5, r6, r7, r8, lr}
 800fcea:	4604      	mov	r4, r0
 800fcec:	f9bd 7018 	ldrsh.w	r7, [sp, #24]
 800fcf0:	f8a4 105c 	strh.w	r1, [r4, #92]	; 0x5c
 800fcf4:	460e      	mov	r6, r1
 800fcf6:	4615      	mov	r5, r2
 800fcf8:	f8a4 205e 	strh.w	r2, [r4, #94]	; 0x5e
 800fcfc:	4619      	mov	r1, r3
 800fcfe:	463a      	mov	r2, r7
 800fd00:	3058      	adds	r0, #88	; 0x58
 800fd02:	4698      	mov	r8, r3
 800fd04:	f7ff ffe2 	bl	800fccc <_ZN8touchgfx8Drawable14setWidthHeightEss>
 800fd08:	f9b4 3008 	ldrsh.w	r3, [r4, #8]
 800fd0c:	4446      	add	r6, r8
 800fd0e:	42b3      	cmp	r3, r6
 800fd10:	f9b4 300a 	ldrsh.w	r3, [r4, #10]
 800fd14:	bfb8      	it	lt
 800fd16:	8126      	strhlt	r6, [r4, #8]
 800fd18:	443d      	add	r5, r7
 800fd1a:	42ab      	cmp	r3, r5
 800fd1c:	bfb8      	it	lt
 800fd1e:	8165      	strhlt	r5, [r4, #10]
 800fd20:	e8bd 81f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, pc}

0800fd24 <_ZN8touchgfx25AbstractProgressIndicator13setBackgroundERKNS_6BitmapE>:
 800fd24:	b510      	push	{r4, lr}
 800fd26:	4604      	mov	r4, r0
 800fd28:	302c      	adds	r0, #44	; 0x2c
 800fd2a:	f002 fdf8 	bl	801291e <_ZN8touchgfx5Image9setBitmapERKNS_6BitmapE>
 800fd2e:	f9b4 2036 	ldrsh.w	r2, [r4, #54]	; 0x36
 800fd32:	f9b4 1034 	ldrsh.w	r1, [r4, #52]	; 0x34
 800fd36:	4620      	mov	r0, r4
 800fd38:	f7ff ffc8 	bl	800fccc <_ZN8touchgfx8Drawable14setWidthHeightEss>
 800fd3c:	bd10      	pop	{r4, pc}
	...

0800fd40 <_ZN8touchgfx25AbstractProgressIndicatorC1Ev>:
 800fd40:	b5f7      	push	{r0, r1, r2, r4, r5, r6, r7, lr}
 800fd42:	4604      	mov	r4, r0
 800fd44:	4626      	mov	r6, r4
 800fd46:	2500      	movs	r5, #0
 800fd48:	f7ff ffa8 	bl	800fc9c <_ZN8touchgfx8DrawableC1Ev>
 800fd4c:	4b23      	ldr	r3, [pc, #140]	; (800fddc <_ZN8touchgfx25AbstractProgressIndicatorC1Ev+0x9c>)
 800fd4e:	62a5      	str	r5, [r4, #40]	; 0x28
 800fd50:	f846 3b2c 	str.w	r3, [r6], #44
 800fd54:	2226      	movs	r2, #38	; 0x26
 800fd56:	4629      	mov	r1, r5
 800fd58:	f64f 77ff 	movw	r7, #65535	; 0xffff
 800fd5c:	4630      	mov	r0, r6
 800fd5e:	f8ad 7004 	strh.w	r7, [sp, #4]
 800fd62:	f01a fb74 	bl	802a44e <memset>
 800fd66:	4630      	mov	r0, r6
 800fd68:	f7ff ff98 	bl	800fc9c <_ZN8touchgfx8DrawableC1Ev>
 800fd6c:	a902      	add	r1, sp, #8
 800fd6e:	4b1c      	ldr	r3, [pc, #112]	; (800fde0 <_ZN8touchgfx25AbstractProgressIndicatorC1Ev+0xa0>)
 800fd70:	62e3      	str	r3, [r4, #44]	; 0x2c
 800fd72:	f831 3d04 	ldrh.w	r3, [r1, #-4]!
 800fd76:	f8a4 3052 	strh.w	r3, [r4, #82]	; 0x52
 800fd7a:	f884 7054 	strb.w	r7, [r4, #84]	; 0x54
 800fd7e:	4630      	mov	r0, r6
 800fd80:	f104 0758 	add.w	r7, r4, #88	; 0x58
 800fd84:	f002 fdcb 	bl	801291e <_ZN8touchgfx5Image9setBitmapERKNS_6BitmapE>
 800fd88:	4638      	mov	r0, r7
 800fd8a:	f7ff ff87 	bl	800fc9c <_ZN8touchgfx8DrawableC1Ev>
 800fd8e:	4b15      	ldr	r3, [pc, #84]	; (800fde4 <_ZN8touchgfx25AbstractProgressIndicatorC1Ev+0xa4>)
 800fd90:	65a3      	str	r3, [r4, #88]	; 0x58
 800fd92:	2364      	movs	r3, #100	; 0x64
 800fd94:	e9c4 3522 	strd	r3, r5, [r4, #136]	; 0x88
 800fd98:	f8c4 3090 	str.w	r3, [r4, #144]	; 0x90
 800fd9c:	4b12      	ldr	r3, [pc, #72]	; (800fde8 <_ZN8touchgfx25AbstractProgressIndicatorC1Ev+0xa8>)
 800fd9e:	f8c4 3094 	str.w	r3, [r4, #148]	; 0x94
 800fda2:	4629      	mov	r1, r5
 800fda4:	4630      	mov	r0, r6
 800fda6:	e9c4 5520 	strd	r5, r5, [r4, #128]	; 0x80
 800fdaa:	f884 5098 	strb.w	r5, [r4, #152]	; 0x98
 800fdae:	e9c4 5527 	strd	r5, r5, [r4, #156]	; 0x9c
 800fdb2:	e9c4 5529 	strd	r5, r5, [r4, #164]	; 0xa4
 800fdb6:	e9c4 552b 	strd	r5, r5, [r4, #172]	; 0xac
 800fdba:	f7f1 f88d 	bl	8000ed8 <_ZN8touchgfx8Drawable4setXEs>
 800fdbe:	4629      	mov	r1, r5
 800fdc0:	4630      	mov	r0, r6
 800fdc2:	f7f1 f88b 	bl	8000edc <_ZN8touchgfx8Drawable4setYEs>
 800fdc6:	4631      	mov	r1, r6
 800fdc8:	4620      	mov	r0, r4
 800fdca:	f000 f819 	bl	800fe00 <_ZN8touchgfx9Container3addERNS_8DrawableE>
 800fdce:	4620      	mov	r0, r4
 800fdd0:	4639      	mov	r1, r7
 800fdd2:	f000 f815 	bl	800fe00 <_ZN8touchgfx9Container3addERNS_8DrawableE>
 800fdd6:	4620      	mov	r0, r4
 800fdd8:	b003      	add	sp, #12
 800fdda:	bdf0      	pop	{r4, r5, r6, r7, pc}
 800fddc:	0802e0e0 	.word	0x0802e0e0
 800fde0:	0802e708 	.word	0x0802e708
 800fde4:	0802e1b4 	.word	0x0802e1b4
 800fde8:	08016ffb 	.word	0x08016ffb

0800fdec <_ZN8touchgfx9Container8containsERKNS_8DrawableE>:
 800fdec:	6a83      	ldr	r3, [r0, #40]	; 0x28
 800fdee:	2000      	movs	r0, #0
 800fdf0:	b12b      	cbz	r3, 800fdfe <_ZN8touchgfx9Container8containsERKNS_8DrawableE+0x12>
 800fdf2:	b920      	cbnz	r0, 800fdfe <_ZN8touchgfx9Container8containsERKNS_8DrawableE+0x12>
 800fdf4:	1a5a      	subs	r2, r3, r1
 800fdf6:	4250      	negs	r0, r2
 800fdf8:	4150      	adcs	r0, r2
 800fdfa:	699b      	ldr	r3, [r3, #24]
 800fdfc:	e7f8      	b.n	800fdf0 <_ZN8touchgfx9Container8containsERKNS_8DrawableE+0x4>
 800fdfe:	4770      	bx	lr

0800fe00 <_ZN8touchgfx9Container3addERNS_8DrawableE>:
 800fe00:	2300      	movs	r3, #0
 800fe02:	6148      	str	r0, [r1, #20]
 800fe04:	618b      	str	r3, [r1, #24]
 800fe06:	6a83      	ldr	r3, [r0, #40]	; 0x28
 800fe08:	b913      	cbnz	r3, 800fe10 <_ZN8touchgfx9Container3addERNS_8DrawableE+0x10>
 800fe0a:	6281      	str	r1, [r0, #40]	; 0x28
 800fe0c:	4770      	bx	lr
 800fe0e:	4613      	mov	r3, r2
 800fe10:	699a      	ldr	r2, [r3, #24]
 800fe12:	2a00      	cmp	r2, #0
 800fe14:	d1fb      	bne.n	800fe0e <_ZN8touchgfx9Container3addERNS_8DrawableE+0xe>
 800fe16:	6199      	str	r1, [r3, #24]
 800fe18:	4770      	bx	lr

0800fe1a <_ZN8touchgfx9Container9removeAllEv>:
 800fe1a:	2200      	movs	r2, #0
 800fe1c:	6a83      	ldr	r3, [r0, #40]	; 0x28
 800fe1e:	b123      	cbz	r3, 800fe2a <_ZN8touchgfx9Container9removeAllEv+0x10>
 800fe20:	6999      	ldr	r1, [r3, #24]
 800fe22:	6281      	str	r1, [r0, #40]	; 0x28
 800fe24:	e9c3 2205 	strd	r2, r2, [r3, #20]
 800fe28:	e7f8      	b.n	800fe1c <_ZN8touchgfx9Container9removeAllEv+0x2>
 800fe2a:	4770      	bx	lr

0800fe2c <_ZN8touchgfx9Container6unlinkEv>:
 800fe2c:	2300      	movs	r3, #0
 800fe2e:	6283      	str	r3, [r0, #40]	; 0x28
 800fe30:	4770      	bx	lr

0800fe32 <_ZNK8touchgfx9Container12getSolidRectEv>:
 800fe32:	2200      	movs	r2, #0
 800fe34:	8002      	strh	r2, [r0, #0]
 800fe36:	8042      	strh	r2, [r0, #2]
 800fe38:	8082      	strh	r2, [r0, #4]
 800fe3a:	80c2      	strh	r2, [r0, #6]
 800fe3c:	4770      	bx	lr

0800fe3e <_ZN8touchgfx9Container20moveChildrenRelativeEss>:
 800fe3e:	b570      	push	{r4, r5, r6, lr}
 800fe40:	6a84      	ldr	r4, [r0, #40]	; 0x28
 800fe42:	460d      	mov	r5, r1
 800fe44:	4616      	mov	r6, r2
 800fe46:	b13c      	cbz	r4, 800fe58 <_ZN8touchgfx9Container20moveChildrenRelativeEss+0x1a>
 800fe48:	6823      	ldr	r3, [r4, #0]
 800fe4a:	4620      	mov	r0, r4
 800fe4c:	6d5b      	ldr	r3, [r3, #84]	; 0x54
 800fe4e:	4632      	mov	r2, r6
 800fe50:	4629      	mov	r1, r5
 800fe52:	4798      	blx	r3
 800fe54:	69a4      	ldr	r4, [r4, #24]
 800fe56:	e7f6      	b.n	800fe46 <_ZN8touchgfx9Container20moveChildrenRelativeEss+0x8>
 800fe58:	bd70      	pop	{r4, r5, r6, pc}

0800fe5a <_ZN8touchgfx9Container12forEachChildEPNS_15GenericCallbackIRNS_8DrawableEvvEE>:
 800fe5a:	b538      	push	{r3, r4, r5, lr}
 800fe5c:	6a84      	ldr	r4, [r0, #40]	; 0x28
 800fe5e:	460d      	mov	r5, r1
 800fe60:	b134      	cbz	r4, 800fe70 <_ZN8touchgfx9Container12forEachChildEPNS_15GenericCallbackIRNS_8DrawableEvvEE+0x16>
 800fe62:	682b      	ldr	r3, [r5, #0]
 800fe64:	4621      	mov	r1, r4
 800fe66:	689b      	ldr	r3, [r3, #8]
 800fe68:	4628      	mov	r0, r5
 800fe6a:	4798      	blx	r3
 800fe6c:	69a4      	ldr	r4, [r4, #24]
 800fe6e:	e7f7      	b.n	800fe60 <_ZN8touchgfx9Container12forEachChildEPNS_15GenericCallbackIRNS_8DrawableEvvEE+0x6>
 800fe70:	bd38      	pop	{r3, r4, r5, pc}

0800fe72 <_ZN8touchgfx9ContainerD1Ev>:
 800fe72:	4770      	bx	lr

0800fe74 <_ZN8touchgfx9ContainerD0Ev>:
 800fe74:	b510      	push	{r4, lr}
 800fe76:	212c      	movs	r1, #44	; 0x2c
 800fe78:	4604      	mov	r4, r0
 800fe7a:	f019 fad0 	bl	802941e <_ZdlPvj>
 800fe7e:	4620      	mov	r0, r4
 800fe80:	bd10      	pop	{r4, pc}

0800fe82 <_ZN8touchgfx9Container6removeERNS_8DrawableE>:
 800fe82:	6a83      	ldr	r3, [r0, #40]	; 0x28
 800fe84:	b19b      	cbz	r3, 800feae <_ZN8touchgfx9Container6removeERNS_8DrawableE+0x2c>
 800fe86:	428b      	cmp	r3, r1
 800fe88:	d109      	bne.n	800fe9e <_ZN8touchgfx9Container6removeERNS_8DrawableE+0x1c>
 800fe8a:	699a      	ldr	r2, [r3, #24]
 800fe8c:	2100      	movs	r1, #0
 800fe8e:	6159      	str	r1, [r3, #20]
 800fe90:	6282      	str	r2, [r0, #40]	; 0x28
 800fe92:	b902      	cbnz	r2, 800fe96 <_ZN8touchgfx9Container6removeERNS_8DrawableE+0x14>
 800fe94:	4770      	bx	lr
 800fe96:	6199      	str	r1, [r3, #24]
 800fe98:	4770      	bx	lr
 800fe9a:	4613      	mov	r3, r2
 800fe9c:	b13a      	cbz	r2, 800feae <_ZN8touchgfx9Container6removeERNS_8DrawableE+0x2c>
 800fe9e:	699a      	ldr	r2, [r3, #24]
 800fea0:	428a      	cmp	r2, r1
 800fea2:	d1fa      	bne.n	800fe9a <_ZN8touchgfx9Container6removeERNS_8DrawableE+0x18>
 800fea4:	698a      	ldr	r2, [r1, #24]
 800fea6:	619a      	str	r2, [r3, #24]
 800fea8:	2300      	movs	r3, #0
 800feaa:	e9c1 3305 	strd	r3, r3, [r1, #20]
 800feae:	4770      	bx	lr

0800feb0 <_ZN8touchgfx9Container6insertEPNS_8DrawableERS1_>:
 800feb0:	b410      	push	{r4}
 800feb2:	6a83      	ldr	r3, [r0, #40]	; 0x28
 800feb4:	4604      	mov	r4, r0
 800feb6:	b92b      	cbnz	r3, 800fec4 <_ZN8touchgfx9Container6insertEPNS_8DrawableERS1_+0x14>
 800feb8:	6803      	ldr	r3, [r0, #0]
 800feba:	f85d 4b04 	ldr.w	r4, [sp], #4
 800febe:	6e1b      	ldr	r3, [r3, #96]	; 0x60
 800fec0:	4611      	mov	r1, r2
 800fec2:	4718      	bx	r3
 800fec4:	b941      	cbnz	r1, 800fed8 <_ZN8touchgfx9Container6insertEPNS_8DrawableERS1_+0x28>
 800fec6:	6193      	str	r3, [r2, #24]
 800fec8:	6282      	str	r2, [r0, #40]	; 0x28
 800feca:	6154      	str	r4, [r2, #20]
 800fecc:	f85d 4b04 	ldr.w	r4, [sp], #4
 800fed0:	4770      	bx	lr
 800fed2:	4603      	mov	r3, r0
 800fed4:	2800      	cmp	r0, #0
 800fed6:	d0f9      	beq.n	800fecc <_ZN8touchgfx9Container6insertEPNS_8DrawableERS1_+0x1c>
 800fed8:	4299      	cmp	r1, r3
 800feda:	6998      	ldr	r0, [r3, #24]
 800fedc:	d1f9      	bne.n	800fed2 <_ZN8touchgfx9Container6insertEPNS_8DrawableERS1_+0x22>
 800fede:	6190      	str	r0, [r2, #24]
 800fee0:	618a      	str	r2, [r1, #24]
 800fee2:	e7f2      	b.n	800feca <_ZN8touchgfx9Container6insertEPNS_8DrawableERS1_+0x1a>

0800fee4 <_ZN8touchgfx9Container12getLastChildEssPPNS_8DrawableE>:
 800fee4:	e92d 41f0 	stmdb	sp!, {r4, r5, r6, r7, r8, lr}
 800fee8:	461f      	mov	r7, r3
 800feea:	f890 3024 	ldrb.w	r3, [r0, #36]	; 0x24
 800feee:	460d      	mov	r5, r1
 800fef0:	4616      	mov	r6, r2
 800fef2:	b103      	cbz	r3, 800fef6 <_ZN8touchgfx9Container12getLastChildEssPPNS_8DrawableE+0x12>
 800fef4:	6038      	str	r0, [r7, #0]
 800fef6:	6a84      	ldr	r4, [r0, #40]	; 0x28
 800fef8:	b314      	cbz	r4, 800ff40 <_ZN8touchgfx9Container12getLastChildEssPPNS_8DrawableE+0x5c>
 800fefa:	f894 3025 	ldrb.w	r3, [r4, #37]	; 0x25
 800fefe:	b1eb      	cbz	r3, 800ff3c <_ZN8touchgfx9Container12getLastChildEssPPNS_8DrawableE+0x58>
 800ff00:	f9b4 1004 	ldrsh.w	r1, [r4, #4]
 800ff04:	428d      	cmp	r5, r1
 800ff06:	db19      	blt.n	800ff3c <_ZN8touchgfx9Container12getLastChildEssPPNS_8DrawableE+0x58>
 800ff08:	8923      	ldrh	r3, [r4, #8]
 800ff0a:	b289      	uxth	r1, r1
 800ff0c:	440b      	add	r3, r1
 800ff0e:	b21b      	sxth	r3, r3
 800ff10:	429d      	cmp	r5, r3
 800ff12:	da13      	bge.n	800ff3c <_ZN8touchgfx9Container12getLastChildEssPPNS_8DrawableE+0x58>
 800ff14:	f9b4 2006 	ldrsh.w	r2, [r4, #6]
 800ff18:	4296      	cmp	r6, r2
 800ff1a:	db0f      	blt.n	800ff3c <_ZN8touchgfx9Container12getLastChildEssPPNS_8DrawableE+0x58>
 800ff1c:	8963      	ldrh	r3, [r4, #10]
 800ff1e:	b292      	uxth	r2, r2
 800ff20:	4413      	add	r3, r2
 800ff22:	b21b      	sxth	r3, r3
 800ff24:	429e      	cmp	r6, r3
 800ff26:	da09      	bge.n	800ff3c <_ZN8touchgfx9Container12getLastChildEssPPNS_8DrawableE+0x58>
 800ff28:	6823      	ldr	r3, [r4, #0]
 800ff2a:	1ab2      	subs	r2, r6, r2
 800ff2c:	1a69      	subs	r1, r5, r1
 800ff2e:	f8d3 8024 	ldr.w	r8, [r3, #36]	; 0x24
 800ff32:	b212      	sxth	r2, r2
 800ff34:	463b      	mov	r3, r7
 800ff36:	b209      	sxth	r1, r1
 800ff38:	4620      	mov	r0, r4
 800ff3a:	47c0      	blx	r8
 800ff3c:	69a4      	ldr	r4, [r4, #24]
 800ff3e:	e7db      	b.n	800fef8 <_ZN8touchgfx9Container12getLastChildEssPPNS_8DrawableE+0x14>
 800ff40:	e8bd 81f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, pc}

0800ff44 <_ZN8touchgfx9Container16getLastChildNearEssPPNS_8DrawableEPsS4_>:
 800ff44:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 800ff48:	4c6e      	ldr	r4, [pc, #440]	; (8010104 <_ZN8touchgfx9Container16getLastChildNearEssPPNS_8DrawableEPsS4_+0x1c0>)
 800ff4a:	b0a1      	sub	sp, #132	; 0x84
 800ff4c:	6824      	ldr	r4, [r4, #0]
 800ff4e:	9d2a      	ldr	r5, [sp, #168]	; 0xa8
 800ff50:	f894 9049 	ldrb.w	r9, [r4, #73]	; 0x49
 800ff54:	9303      	str	r3, [sp, #12]
 800ff56:	2400      	movs	r4, #0
 800ff58:	802c      	strh	r4, [r5, #0]
 800ff5a:	9d2b      	ldr	r5, [sp, #172]	; 0xac
 800ff5c:	802c      	strh	r4, [r5, #0]
 800ff5e:	601c      	str	r4, [r3, #0]
 800ff60:	4606      	mov	r6, r0
 800ff62:	e9cd 1201 	strd	r1, r2, [sp, #4]
 800ff66:	f7ff ffbd 	bl	800fee4 <_ZN8touchgfx9Container12getLastChildEssPPNS_8DrawableE>
 800ff6a:	f1b9 0f03 	cmp.w	r9, #3
 800ff6e:	f340 80c2 	ble.w	80100f6 <_ZN8touchgfx9Container16getLastChildNearEssPPNS_8DrawableEPsS4_+0x1b2>
 800ff72:	4631      	mov	r1, r6
 800ff74:	a80c      	add	r0, sp, #48	; 0x30
 800ff76:	f006 fb5f 	bl	8016638 <_ZNK8touchgfx8Drawable15getAbsoluteRectEv>
 800ff7a:	f9bd 3030 	ldrsh.w	r3, [sp, #48]	; 0x30
 800ff7e:	9306      	str	r3, [sp, #24]
 800ff80:	f9bd 3032 	ldrsh.w	r3, [sp, #50]	; 0x32
 800ff84:	9307      	str	r3, [sp, #28]
 800ff86:	9b03      	ldr	r3, [sp, #12]
 800ff88:	f8d3 a000 	ldr.w	sl, [r3]
 800ff8c:	f1ba 0f00 	cmp.w	sl, #0
 800ff90:	f000 80b4 	beq.w	80100fc <_ZN8touchgfx9Container16getLastChildNearEssPPNS_8DrawableEPsS4_+0x1b8>
 800ff94:	4651      	mov	r1, sl
 800ff96:	a810      	add	r0, sp, #64	; 0x40
 800ff98:	f006 fb4e 	bl	8016638 <_ZNK8touchgfx8Drawable15getAbsoluteRectEv>
 800ff9c:	9b01      	ldr	r3, [sp, #4]
 800ff9e:	9a06      	ldr	r2, [sp, #24]
 800ffa0:	f9bd 1044 	ldrsh.w	r1, [sp, #68]	; 0x44
 800ffa4:	189d      	adds	r5, r3, r2
 800ffa6:	f9bd 3040 	ldrsh.w	r3, [sp, #64]	; 0x40
 800ffaa:	9a07      	ldr	r2, [sp, #28]
 800ffac:	2002      	movs	r0, #2
 800ffae:	fb91 f1f0 	sdiv	r1, r1, r0
 800ffb2:	4419      	add	r1, r3
 800ffb4:	1a6d      	subs	r5, r5, r1
 800ffb6:	9b02      	ldr	r3, [sp, #8]
 800ffb8:	f9bd 1042 	ldrsh.w	r1, [sp, #66]	; 0x42
 800ffbc:	4413      	add	r3, r2
 800ffbe:	f9bd 2046 	ldrsh.w	r2, [sp, #70]	; 0x46
 800ffc2:	fb92 f2f0 	sdiv	r2, r2, r0
 800ffc6:	440a      	add	r2, r1
 800ffc8:	1a9b      	subs	r3, r3, r2
 800ffca:	435b      	muls	r3, r3
 800ffcc:	fb05 3505 	mla	r5, r5, r5, r3
 800ffd0:	4f4d      	ldr	r7, [pc, #308]	; (8010108 <_ZN8touchgfx9Container16getLastChildNearEssPPNS_8DrawableEPsS4_+0x1c4>)
 800ffd2:	cf0f      	ldmia	r7!, {r0, r1, r2, r3}
 800ffd4:	ac10      	add	r4, sp, #64	; 0x40
 800ffd6:	c40f      	stmia	r4!, {r0, r1, r2, r3}
 800ffd8:	cf0f      	ldmia	r7!, {r0, r1, r2, r3}
 800ffda:	c40f      	stmia	r4!, {r0, r1, r2, r3}
 800ffdc:	cf0f      	ldmia	r7!, {r0, r1, r2, r3}
 800ffde:	c40f      	stmia	r4!, {r0, r1, r2, r3}
 800ffe0:	e897 000f 	ldmia.w	r7, {r0, r1, r2, r3}
 800ffe4:	f1b9 0f0c 	cmp.w	r9, #12
 800ffe8:	e884 000f 	stmia.w	r4, {r0, r1, r2, r3}
 800ffec:	f04f 0303 	mov.w	r3, #3
 800fff0:	bfc8      	it	gt
 800fff2:	4698      	movgt	r8, r3
 800fff4:	f8cd 9000 	str.w	r9, [sp]
 800fff8:	f04f 0400 	mov.w	r4, #0
 800fffc:	bfdc      	itt	le
 800fffe:	f109 32ff 	addle.w	r2, r9, #4294967295
 8010002:	fb92 f8f3 	sdivle	r8, r2, r3
 8010006:	1c63      	adds	r3, r4, #1
 8010008:	aa10      	add	r2, sp, #64	; 0x40
 801000a:	f004 0401 	and.w	r4, r4, #1
 801000e:	9308      	str	r3, [sp, #32]
 8010010:	eb02 1444 	add.w	r4, r2, r4, lsl #5
 8010014:	9b00      	ldr	r3, [sp, #0]
 8010016:	fb93 f3f8 	sdiv	r3, r3, r8
 801001a:	b29b      	uxth	r3, r3
 801001c:	3404      	adds	r4, #4
 801001e:	f04f 0b00 	mov.w	fp, #0
 8010022:	9304      	str	r3, [sp, #16]
 8010024:	9a04      	ldr	r2, [sp, #16]
 8010026:	f854 3c04 	ldr.w	r3, [r4, #-4]
 801002a:	fb13 f302 	smulbb	r3, r3, r2
 801002e:	9a01      	ldr	r2, [sp, #4]
 8010030:	b29b      	uxth	r3, r3
 8010032:	1899      	adds	r1, r3, r2
 8010034:	9305      	str	r3, [sp, #20]
 8010036:	f9b6 3004 	ldrsh.w	r3, [r6, #4]
 801003a:	b209      	sxth	r1, r1
 801003c:	4299      	cmp	r1, r3
 801003e:	db4d      	blt.n	80100dc <_ZN8touchgfx9Container16getLastChildNearEssPPNS_8DrawableEPsS4_+0x198>
 8010040:	8932      	ldrh	r2, [r6, #8]
 8010042:	4413      	add	r3, r2
 8010044:	b21b      	sxth	r3, r3
 8010046:	4299      	cmp	r1, r3
 8010048:	da48      	bge.n	80100dc <_ZN8touchgfx9Container16getLastChildNearEssPPNS_8DrawableEPsS4_+0x198>
 801004a:	9b04      	ldr	r3, [sp, #16]
 801004c:	6827      	ldr	r7, [r4, #0]
 801004e:	fb17 f703 	smulbb	r7, r7, r3
 8010052:	9b02      	ldr	r3, [sp, #8]
 8010054:	b2bf      	uxth	r7, r7
 8010056:	18fa      	adds	r2, r7, r3
 8010058:	f9b6 3006 	ldrsh.w	r3, [r6, #6]
 801005c:	b212      	sxth	r2, r2
 801005e:	429a      	cmp	r2, r3
 8010060:	db3c      	blt.n	80100dc <_ZN8touchgfx9Container16getLastChildNearEssPPNS_8DrawableEPsS4_+0x198>
 8010062:	8970      	ldrh	r0, [r6, #10]
 8010064:	4403      	add	r3, r0
 8010066:	b21b      	sxth	r3, r3
 8010068:	429a      	cmp	r2, r3
 801006a:	da37      	bge.n	80100dc <_ZN8touchgfx9Container16getLastChildNearEssPPNS_8DrawableEPsS4_+0x198>
 801006c:	2300      	movs	r3, #0
 801006e:	930b      	str	r3, [sp, #44]	; 0x2c
 8010070:	4630      	mov	r0, r6
 8010072:	ab0b      	add	r3, sp, #44	; 0x2c
 8010074:	f7ff ff36 	bl	800fee4 <_ZN8touchgfx9Container12getLastChildEssPPNS_8DrawableE>
 8010078:	9a0b      	ldr	r2, [sp, #44]	; 0x2c
 801007a:	b37a      	cbz	r2, 80100dc <_ZN8touchgfx9Container16getLastChildNearEssPPNS_8DrawableEPsS4_+0x198>
 801007c:	4552      	cmp	r2, sl
 801007e:	d02d      	beq.n	80100dc <_ZN8touchgfx9Container16getLastChildNearEssPPNS_8DrawableEPsS4_+0x198>
 8010080:	4611      	mov	r1, r2
 8010082:	a80e      	add	r0, sp, #56	; 0x38
 8010084:	9209      	str	r2, [sp, #36]	; 0x24
 8010086:	f006 fad7 	bl	8016638 <_ZNK8touchgfx8Drawable15getAbsoluteRectEv>
 801008a:	9a06      	ldr	r2, [sp, #24]
 801008c:	f9bd 0038 	ldrsh.w	r0, [sp, #56]	; 0x38
 8010090:	9b01      	ldr	r3, [sp, #4]
 8010092:	f9bd 103c 	ldrsh.w	r1, [sp, #60]	; 0x3c
 8010096:	f9bd c03e 	ldrsh.w	ip, [sp, #62]	; 0x3e
 801009a:	4413      	add	r3, r2
 801009c:	f04f 0e02 	mov.w	lr, #2
 80100a0:	fb91 f1fe 	sdiv	r1, r1, lr
 80100a4:	4401      	add	r1, r0
 80100a6:	1a58      	subs	r0, r3, r1
 80100a8:	9a07      	ldr	r2, [sp, #28]
 80100aa:	9b02      	ldr	r3, [sp, #8]
 80100ac:	f9bd 103a 	ldrsh.w	r1, [sp, #58]	; 0x3a
 80100b0:	fb9c fcfe 	sdiv	ip, ip, lr
 80100b4:	4413      	add	r3, r2
 80100b6:	448c      	add	ip, r1
 80100b8:	eba3 030c 	sub.w	r3, r3, ip
 80100bc:	435b      	muls	r3, r3
 80100be:	fb00 3300 	mla	r3, r0, r0, r3
 80100c2:	42ab      	cmp	r3, r5
 80100c4:	9a09      	ldr	r2, [sp, #36]	; 0x24
 80100c6:	d208      	bcs.n	80100da <_ZN8touchgfx9Container16getLastChildNearEssPPNS_8DrawableEPsS4_+0x196>
 80100c8:	9803      	ldr	r0, [sp, #12]
 80100ca:	990b      	ldr	r1, [sp, #44]	; 0x2c
 80100cc:	6001      	str	r1, [r0, #0]
 80100ce:	992a      	ldr	r1, [sp, #168]	; 0xa8
 80100d0:	9805      	ldr	r0, [sp, #20]
 80100d2:	8008      	strh	r0, [r1, #0]
 80100d4:	992b      	ldr	r1, [sp, #172]	; 0xac
 80100d6:	461d      	mov	r5, r3
 80100d8:	800f      	strh	r7, [r1, #0]
 80100da:	4692      	mov	sl, r2
 80100dc:	f10b 0b01 	add.w	fp, fp, #1
 80100e0:	f1bb 0f04 	cmp.w	fp, #4
 80100e4:	f104 0408 	add.w	r4, r4, #8
 80100e8:	d19c      	bne.n	8010024 <_ZN8touchgfx9Container16getLastChildNearEssPPNS_8DrawableEPsS4_+0xe0>
 80100ea:	9b00      	ldr	r3, [sp, #0]
 80100ec:	9c08      	ldr	r4, [sp, #32]
 80100ee:	444b      	add	r3, r9
 80100f0:	4544      	cmp	r4, r8
 80100f2:	9300      	str	r3, [sp, #0]
 80100f4:	d187      	bne.n	8010006 <_ZN8touchgfx9Container16getLastChildNearEssPPNS_8DrawableEPsS4_+0xc2>
 80100f6:	b021      	add	sp, #132	; 0x84
 80100f8:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
 80100fc:	f04f 35ff 	mov.w	r5, #4294967295
 8010100:	e766      	b.n	800ffd0 <_ZN8touchgfx9Container16getLastChildNearEssPPNS_8DrawableEPsS4_+0x8c>
 8010102:	bf00      	nop
 8010104:	20012f24 	.word	0x20012f24
 8010108:	0802b15c 	.word	0x0802b15c

0801010c <_ZN8touchgfx4RectaNERKS0_>:
 801010c:	e92d 43f0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, lr}
 8010110:	f9b1 7000 	ldrsh.w	r7, [r1]
 8010114:	888c      	ldrh	r4, [r1, #4]
 8010116:	f9b0 9000 	ldrsh.w	r9, [r0]
 801011a:	443c      	add	r4, r7
 801011c:	b2a4      	uxth	r4, r4
 801011e:	fa0f f884 	sxth.w	r8, r4
 8010122:	45c1      	cmp	r9, r8
 8010124:	da2f      	bge.n	8010186 <_ZN8touchgfx4RectaNERKS0_+0x7a>
 8010126:	8882      	ldrh	r2, [r0, #4]
 8010128:	444a      	add	r2, r9
 801012a:	b292      	uxth	r2, r2
 801012c:	fa0f fe82 	sxth.w	lr, r2
 8010130:	4577      	cmp	r7, lr
 8010132:	da28      	bge.n	8010186 <_ZN8touchgfx4RectaNERKS0_+0x7a>
 8010134:	f9b1 5002 	ldrsh.w	r5, [r1, #2]
 8010138:	88cb      	ldrh	r3, [r1, #6]
 801013a:	f9b0 6002 	ldrsh.w	r6, [r0, #2]
 801013e:	442b      	add	r3, r5
 8010140:	b21b      	sxth	r3, r3
 8010142:	429e      	cmp	r6, r3
 8010144:	da1f      	bge.n	8010186 <_ZN8touchgfx4RectaNERKS0_+0x7a>
 8010146:	88c3      	ldrh	r3, [r0, #6]
 8010148:	4433      	add	r3, r6
 801014a:	b29b      	uxth	r3, r3
 801014c:	fa0f fc83 	sxth.w	ip, r3
 8010150:	4565      	cmp	r5, ip
 8010152:	da18      	bge.n	8010186 <_ZN8touchgfx4RectaNERKS0_+0x7a>
 8010154:	454f      	cmp	r7, r9
 8010156:	bfb8      	it	lt
 8010158:	464f      	movlt	r7, r9
 801015a:	42b5      	cmp	r5, r6
 801015c:	bfb8      	it	lt
 801015e:	4635      	movlt	r5, r6
 8010160:	45f0      	cmp	r8, lr
 8010162:	bfd8      	it	le
 8010164:	4622      	movle	r2, r4
 8010166:	1bd2      	subs	r2, r2, r7
 8010168:	8082      	strh	r2, [r0, #4]
 801016a:	884a      	ldrh	r2, [r1, #2]
 801016c:	88c9      	ldrh	r1, [r1, #6]
 801016e:	8007      	strh	r7, [r0, #0]
 8010170:	440a      	add	r2, r1
 8010172:	b292      	uxth	r2, r2
 8010174:	b211      	sxth	r1, r2
 8010176:	458c      	cmp	ip, r1
 8010178:	bfa8      	it	ge
 801017a:	4613      	movge	r3, r2
 801017c:	1b5b      	subs	r3, r3, r5
 801017e:	80c3      	strh	r3, [r0, #6]
 8010180:	8045      	strh	r5, [r0, #2]
 8010182:	e8bd 83f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, pc}
 8010186:	2300      	movs	r3, #0
 8010188:	8003      	strh	r3, [r0, #0]
 801018a:	8043      	strh	r3, [r0, #2]
 801018c:	8083      	strh	r3, [r0, #4]
 801018e:	80c3      	strh	r3, [r0, #6]
 8010190:	e7f7      	b.n	8010182 <_ZN8touchgfx4RectaNERKS0_+0x76>

08010192 <_ZNK8touchgfx4Rect7isEmptyEv>:
 8010192:	f9b0 3004 	ldrsh.w	r3, [r0, #4]
 8010196:	2b00      	cmp	r3, #0
 8010198:	dd06      	ble.n	80101a8 <_ZNK8touchgfx4Rect7isEmptyEv+0x16>
 801019a:	f9b0 0006 	ldrsh.w	r0, [r0, #6]
 801019e:	2800      	cmp	r0, #0
 80101a0:	bfcc      	ite	gt
 80101a2:	2000      	movgt	r0, #0
 80101a4:	2001      	movle	r0, #1
 80101a6:	4770      	bx	lr
 80101a8:	2001      	movs	r0, #1
 80101aa:	4770      	bx	lr

080101ac <_ZNK8touchgfx9Container16getContainedAreaEv>:
 80101ac:	e92d 41f0 	stmdb	sp!, {r4, r5, r6, r7, r8, lr}
 80101b0:	2300      	movs	r3, #0
 80101b2:	6a8d      	ldr	r5, [r1, #40]	; 0x28
 80101b4:	8003      	strh	r3, [r0, #0]
 80101b6:	4604      	mov	r4, r0
 80101b8:	8043      	strh	r3, [r0, #2]
 80101ba:	8083      	strh	r3, [r0, #4]
 80101bc:	80c3      	strh	r3, [r0, #6]
 80101be:	2d00      	cmp	r5, #0
 80101c0:	d040      	beq.n	8010244 <_ZNK8touchgfx9Container16getContainedAreaEv+0x98>
 80101c2:	1d28      	adds	r0, r5, #4
 80101c4:	f7ff ffe5 	bl	8010192 <_ZNK8touchgfx4Rect7isEmptyEv>
 80101c8:	b988      	cbnz	r0, 80101ee <_ZNK8touchgfx9Container16getContainedAreaEv+0x42>
 80101ca:	4620      	mov	r0, r4
 80101cc:	f7ff ffe1 	bl	8010192 <_ZNK8touchgfx4Rect7isEmptyEv>
 80101d0:	f9b5 2004 	ldrsh.w	r2, [r5, #4]
 80101d4:	f9b5 3006 	ldrsh.w	r3, [r5, #6]
 80101d8:	f9b5 e008 	ldrsh.w	lr, [r5, #8]
 80101dc:	f9b5 c00a 	ldrsh.w	ip, [r5, #10]
 80101e0:	b138      	cbz	r0, 80101f2 <_ZNK8touchgfx9Container16getContainedAreaEv+0x46>
 80101e2:	8022      	strh	r2, [r4, #0]
 80101e4:	8063      	strh	r3, [r4, #2]
 80101e6:	f8a4 e004 	strh.w	lr, [r4, #4]
 80101ea:	f8a4 c006 	strh.w	ip, [r4, #6]
 80101ee:	69ad      	ldr	r5, [r5, #24]
 80101f0:	e7e5      	b.n	80101be <_ZNK8touchgfx9Container16getContainedAreaEv+0x12>
 80101f2:	f9b4 0000 	ldrsh.w	r0, [r4]
 80101f6:	f9b4 1002 	ldrsh.w	r1, [r4, #2]
 80101fa:	f8b4 8004 	ldrh.w	r8, [r4, #4]
 80101fe:	4290      	cmp	r0, r2
 8010200:	4607      	mov	r7, r0
 8010202:	bfa8      	it	ge
 8010204:	4617      	movge	r7, r2
 8010206:	4472      	add	r2, lr
 8010208:	f8b4 e006 	ldrh.w	lr, [r4, #6]
 801020c:	8027      	strh	r7, [r4, #0]
 801020e:	4299      	cmp	r1, r3
 8010210:	460e      	mov	r6, r1
 8010212:	4440      	add	r0, r8
 8010214:	bfa8      	it	ge
 8010216:	461e      	movge	r6, r3
 8010218:	4471      	add	r1, lr
 801021a:	4463      	add	r3, ip
 801021c:	b200      	sxth	r0, r0
 801021e:	b212      	sxth	r2, r2
 8010220:	b209      	sxth	r1, r1
 8010222:	b21b      	sxth	r3, r3
 8010224:	4290      	cmp	r0, r2
 8010226:	bfac      	ite	ge
 8010228:	ebc7 0200 	rsbge	r2, r7, r0
 801022c:	ebc7 0202 	rsblt	r2, r7, r2
 8010230:	4299      	cmp	r1, r3
 8010232:	bfac      	ite	ge
 8010234:	ebc6 0301 	rsbge	r3, r6, r1
 8010238:	ebc6 0303 	rsblt	r3, r6, r3
 801023c:	8066      	strh	r6, [r4, #2]
 801023e:	80a2      	strh	r2, [r4, #4]
 8010240:	80e3      	strh	r3, [r4, #6]
 8010242:	e7d4      	b.n	80101ee <_ZNK8touchgfx9Container16getContainedAreaEv+0x42>
 8010244:	4620      	mov	r0, r4
 8010246:	e8bd 81f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, pc}

0801024a <_ZNK8touchgfx9Container4drawERKNS_4RectE>:
 801024a:	e92d 41f3 	stmdb	sp!, {r0, r1, r4, r5, r6, r7, r8, lr}
 801024e:	f890 3025 	ldrb.w	r3, [r0, #37]	; 0x25
 8010252:	b383      	cbz	r3, 80102b6 <_ZNK8touchgfx9Container4drawERKNS_4RectE+0x6c>
 8010254:	6a84      	ldr	r4, [r0, #40]	; 0x28
 8010256:	b374      	cbz	r4, 80102b6 <_ZNK8touchgfx9Container4drawERKNS_4RectE+0x6c>
 8010258:	f9b1 5000 	ldrsh.w	r5, [r1]
 801025c:	f9b1 6002 	ldrsh.w	r6, [r1, #2]
 8010260:	f9b1 7004 	ldrsh.w	r7, [r1, #4]
 8010264:	f9b1 8006 	ldrsh.w	r8, [r1, #6]
 8010268:	f894 3025 	ldrb.w	r3, [r4, #37]	; 0x25
 801026c:	b303      	cbz	r3, 80102b0 <_ZNK8touchgfx9Container4drawERKNS_4RectE+0x66>
 801026e:	4668      	mov	r0, sp
 8010270:	1d21      	adds	r1, r4, #4
 8010272:	f8ad 5000 	strh.w	r5, [sp]
 8010276:	f8ad 6002 	strh.w	r6, [sp, #2]
 801027a:	f8ad 7004 	strh.w	r7, [sp, #4]
 801027e:	f8ad 8006 	strh.w	r8, [sp, #6]
 8010282:	f7ff ff43 	bl	801010c <_ZN8touchgfx4RectaNERKS0_>
 8010286:	4668      	mov	r0, sp
 8010288:	f7ff ff83 	bl	8010192 <_ZNK8touchgfx4Rect7isEmptyEv>
 801028c:	b980      	cbnz	r0, 80102b0 <_ZNK8touchgfx9Container4drawERKNS_4RectE+0x66>
 801028e:	f8bd 3000 	ldrh.w	r3, [sp]
 8010292:	88a2      	ldrh	r2, [r4, #4]
 8010294:	1a9b      	subs	r3, r3, r2
 8010296:	f8ad 3000 	strh.w	r3, [sp]
 801029a:	88e2      	ldrh	r2, [r4, #6]
 801029c:	f8bd 3002 	ldrh.w	r3, [sp, #2]
 80102a0:	1a9b      	subs	r3, r3, r2
 80102a2:	f8ad 3002 	strh.w	r3, [sp, #2]
 80102a6:	6823      	ldr	r3, [r4, #0]
 80102a8:	4669      	mov	r1, sp
 80102aa:	689b      	ldr	r3, [r3, #8]
 80102ac:	4620      	mov	r0, r4
 80102ae:	4798      	blx	r3
 80102b0:	69a4      	ldr	r4, [r4, #24]
 80102b2:	2c00      	cmp	r4, #0
 80102b4:	d1d8      	bne.n	8010268 <_ZNK8touchgfx9Container4drawERKNS_4RectE+0x1e>
 80102b6:	b002      	add	sp, #8
 80102b8:	e8bd 81f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, pc}

080102bc <_ZN8touchgfx9Container14setupDrawChainERKNS_4RectEPPNS_8DrawableE>:
 80102bc:	b573      	push	{r0, r1, r4, r5, r6, lr}
 80102be:	f890 3025 	ldrb.w	r3, [r0, #37]	; 0x25
 80102c2:	460d      	mov	r5, r1
 80102c4:	4616      	mov	r6, r2
 80102c6:	b323      	cbz	r3, 8010312 <_ZN8touchgfx9Container14setupDrawChainERKNS_4RectEPPNS_8DrawableE+0x56>
 80102c8:	6a84      	ldr	r4, [r0, #40]	; 0x28
 80102ca:	b314      	cbz	r4, 8010312 <_ZN8touchgfx9Container14setupDrawChainERKNS_4RectEPPNS_8DrawableE+0x56>
 80102cc:	f894 3025 	ldrb.w	r3, [r4, #37]	; 0x25
 80102d0:	b1eb      	cbz	r3, 801030e <_ZN8touchgfx9Container14setupDrawChainERKNS_4RectEPPNS_8DrawableE+0x52>
 80102d2:	6828      	ldr	r0, [r5, #0]
 80102d4:	6869      	ldr	r1, [r5, #4]
 80102d6:	466b      	mov	r3, sp
 80102d8:	c303      	stmia	r3!, {r0, r1}
 80102da:	4668      	mov	r0, sp
 80102dc:	1d21      	adds	r1, r4, #4
 80102de:	f7ff ff15 	bl	801010c <_ZN8touchgfx4RectaNERKS0_>
 80102e2:	4668      	mov	r0, sp
 80102e4:	f7ff ff55 	bl	8010192 <_ZNK8touchgfx4Rect7isEmptyEv>
 80102e8:	b988      	cbnz	r0, 801030e <_ZN8touchgfx9Container14setupDrawChainERKNS_4RectEPPNS_8DrawableE+0x52>
 80102ea:	f8bd 3000 	ldrh.w	r3, [sp]
 80102ee:	88a2      	ldrh	r2, [r4, #4]
 80102f0:	1a9b      	subs	r3, r3, r2
 80102f2:	f8ad 3000 	strh.w	r3, [sp]
 80102f6:	88e2      	ldrh	r2, [r4, #6]
 80102f8:	f8bd 3002 	ldrh.w	r3, [sp, #2]
 80102fc:	1a9b      	subs	r3, r3, r2
 80102fe:	f8ad 3002 	strh.w	r3, [sp, #2]
 8010302:	6823      	ldr	r3, [r4, #0]
 8010304:	4632      	mov	r2, r6
 8010306:	6ddb      	ldr	r3, [r3, #92]	; 0x5c
 8010308:	4669      	mov	r1, sp
 801030a:	4620      	mov	r0, r4
 801030c:	4798      	blx	r3
 801030e:	69a4      	ldr	r4, [r4, #24]
 8010310:	e7db      	b.n	80102ca <_ZN8touchgfx9Container14setupDrawChainERKNS_4RectEPPNS_8DrawableE+0xe>
 8010312:	b002      	add	sp, #8
 8010314:	bd70      	pop	{r4, r5, r6, pc}

08010316 <_ZN8touchgfx3HAL27drawDrawableInDynamicBitmapERNS_8DrawableEt>:
 8010316:	b513      	push	{r0, r1, r4, lr}
 8010318:	6803      	ldr	r3, [r0, #0]
 801031a:	f8d3 40a8 	ldr.w	r4, [r3, #168]	; 0xa8
 801031e:	2300      	movs	r3, #0
 8010320:	e9cd 3300 	strd	r3, r3, [sp]
 8010324:	466b      	mov	r3, sp
 8010326:	47a0      	blx	r4
 8010328:	b002      	add	sp, #8
 801032a:	bd10      	pop	{r4, pc}

0801032c <_ZN8touchgfx3HAL16flushFrameBufferEv>:
 801032c:	2301      	movs	r3, #1
 801032e:	f880 304b 	strb.w	r3, [r0, #75]	; 0x4b
 8010332:	f880 306d 	strb.w	r3, [r0, #109]	; 0x6d
 8010336:	4770      	bx	lr

08010338 <_ZN8touchgfx3HAL16flushFrameBufferERKNS_4RectE>:
 8010338:	2301      	movs	r3, #1
 801033a:	f880 304b 	strb.w	r3, [r0, #75]	; 0x4b
 801033e:	f880 306d 	strb.w	r3, [r0, #109]	; 0x6d
 8010342:	4770      	bx	lr

08010344 <_ZN8touchgfx3HAL17allowDMATransfersEv>:
 8010344:	6843      	ldr	r3, [r0, #4]
 8010346:	2201      	movs	r2, #1
 8010348:	725a      	strb	r2, [r3, #9]
 801034a:	6840      	ldr	r0, [r0, #4]
 801034c:	6803      	ldr	r3, [r0, #0]
 801034e:	691b      	ldr	r3, [r3, #16]
 8010350:	4718      	bx	r3

08010352 <_ZN8touchgfx3HAL8flushDMAEv>:
 8010352:	6840      	ldr	r0, [r0, #4]
 8010354:	6803      	ldr	r3, [r0, #0]
 8010356:	689b      	ldr	r3, [r3, #8]
 8010358:	4718      	bx	r3

0801035a <_ZN8touchgfx3HAL8blitCopyEPKtttttthbtNS_6Bitmap12BitmapFormatES4_b>:
 801035a:	b530      	push	{r4, r5, lr}
 801035c:	b08b      	sub	sp, #44	; 0x2c
 801035e:	6804      	ldr	r4, [r0, #0]
 8010360:	f89d 5058 	ldrb.w	r5, [sp, #88]	; 0x58
 8010364:	9509      	str	r5, [sp, #36]	; 0x24
 8010366:	f89d 5054 	ldrb.w	r5, [sp, #84]	; 0x54
 801036a:	9508      	str	r5, [sp, #32]
 801036c:	f89d 5050 	ldrb.w	r5, [sp, #80]	; 0x50
 8010370:	9507      	str	r5, [sp, #28]
 8010372:	f8bd 504c 	ldrh.w	r5, [sp, #76]	; 0x4c
 8010376:	9506      	str	r5, [sp, #24]
 8010378:	f89d 5048 	ldrb.w	r5, [sp, #72]	; 0x48
 801037c:	9505      	str	r5, [sp, #20]
 801037e:	f89d 5044 	ldrb.w	r5, [sp, #68]	; 0x44
 8010382:	9504      	str	r5, [sp, #16]
 8010384:	f8bd 5040 	ldrh.w	r5, [sp, #64]	; 0x40
 8010388:	9503      	str	r5, [sp, #12]
 801038a:	f8bd 503c 	ldrh.w	r5, [sp, #60]	; 0x3c
 801038e:	9502      	str	r5, [sp, #8]
 8010390:	f8bd 5038 	ldrh.w	r5, [sp, #56]	; 0x38
 8010394:	e9cd 3500 	strd	r3, r5, [sp]
 8010398:	4613      	mov	r3, r2
 801039a:	6be4      	ldr	r4, [r4, #60]	; 0x3c
 801039c:	2200      	movs	r2, #0
 801039e:	47a0      	blx	r4
 80103a0:	b00b      	add	sp, #44	; 0x2c
 80103a2:	bd30      	pop	{r4, r5, pc}

080103a4 <_ZN8touchgfx3HAL10beginFrameEv>:
 80103a4:	4b04      	ldr	r3, [pc, #16]	; (80103b8 <_ZN8touchgfx3HAL10beginFrameEv+0x14>)
 80103a6:	781b      	ldrb	r3, [r3, #0]
 80103a8:	b123      	cbz	r3, 80103b4 <_ZN8touchgfx3HAL10beginFrameEv+0x10>
 80103aa:	f890 006e 	ldrb.w	r0, [r0, #110]	; 0x6e
 80103ae:	f080 0001 	eor.w	r0, r0, #1
 80103b2:	4770      	bx	lr
 80103b4:	2001      	movs	r0, #1
 80103b6:	4770      	bx	lr
 80103b8:	20012f22 	.word	0x20012f22

080103bc <_ZN8touchgfx3HAL8endFrameEv>:
 80103bc:	b510      	push	{r4, lr}
 80103be:	4604      	mov	r4, r0
 80103c0:	6840      	ldr	r0, [r0, #4]
 80103c2:	6803      	ldr	r3, [r0, #0]
 80103c4:	689b      	ldr	r3, [r3, #8]
 80103c6:	4798      	blx	r3
 80103c8:	f894 306d 	ldrb.w	r3, [r4, #109]	; 0x6d
 80103cc:	b113      	cbz	r3, 80103d4 <_ZN8touchgfx3HAL8endFrameEv+0x18>
 80103ce:	2301      	movs	r3, #1
 80103d0:	f884 306e 	strb.w	r3, [r4, #110]	; 0x6e
 80103d4:	bd10      	pop	{r4, pc}

080103d6 <_ZN8touchgfx3HAL10initializeEv>:
 80103d6:	b510      	push	{r4, lr}
 80103d8:	4604      	mov	r4, r0
 80103da:	f7f0 fb67 	bl	8000aac <_ZN8touchgfx10OSWrappers10initializeEv>
 80103de:	f7f0 fa73 	bl	80008c8 <_ZN8touchgfx4GPIO4initEv>
 80103e2:	6860      	ldr	r0, [r4, #4]
 80103e4:	6803      	ldr	r3, [r0, #0]
 80103e6:	68db      	ldr	r3, [r3, #12]
 80103e8:	4798      	blx	r3
 80103ea:	68e0      	ldr	r0, [r4, #12]
 80103ec:	6803      	ldr	r3, [r0, #0]
 80103ee:	689b      	ldr	r3, [r3, #8]
 80103f0:	4798      	blx	r3
 80103f2:	6823      	ldr	r3, [r4, #0]
 80103f4:	4620      	mov	r0, r4
 80103f6:	6f5b      	ldr	r3, [r3, #116]	; 0x74
 80103f8:	e8bd 4010 	ldmia.w	sp!, {r4, lr}
 80103fc:	4718      	bx	r3
	...

08010400 <_ZN8touchgfx3HAL4tickEv>:
 8010400:	b57f      	push	{r0, r1, r2, r3, r4, r5, r6, lr}
 8010402:	6803      	ldr	r3, [r0, #0]
 8010404:	4d5b      	ldr	r5, [pc, #364]	; (8010574 <_ZN8touchgfx3HAL4tickEv+0x174>)
 8010406:	f8d3 30b0 	ldr.w	r3, [r3, #176]	; 0xb0
 801040a:	4604      	mov	r4, r0
 801040c:	4798      	blx	r3
 801040e:	2800      	cmp	r0, #0
 8010410:	f000 8095 	beq.w	801053e <_ZN8touchgfx3HAL4tickEv+0x13e>
 8010414:	2001      	movs	r0, #1
 8010416:	f7f0 fa09 	bl	800082c <_ZN8touchgfx4GPIO3setENS0_7GPIO_IDE>
 801041a:	f894 306a 	ldrb.w	r3, [r4, #106]	; 0x6a
 801041e:	f884 306b 	strb.w	r3, [r4, #107]	; 0x6b
 8010422:	f894 3079 	ldrb.w	r3, [r4, #121]	; 0x79
 8010426:	2600      	movs	r6, #0
 8010428:	f884 606a 	strb.w	r6, [r4, #106]	; 0x6a
 801042c:	f884 604b 	strb.w	r6, [r4, #75]	; 0x4b
 8010430:	b133      	cbz	r3, 8010440 <_ZN8touchgfx3HAL4tickEv+0x40>
 8010432:	6823      	ldr	r3, [r4, #0]
 8010434:	4620      	mov	r0, r4
 8010436:	f8d3 30c4 	ldr.w	r3, [r3, #196]	; 0xc4
 801043a:	4798      	blx	r3
 801043c:	f884 6079 	strb.w	r6, [r4, #121]	; 0x79
 8010440:	f894 304a 	ldrb.w	r3, [r4, #74]	; 0x4a
 8010444:	6862      	ldr	r2, [r4, #4]
 8010446:	f083 0301 	eor.w	r3, r3, #1
 801044a:	7253      	strb	r3, [r2, #9]
 801044c:	2601      	movs	r6, #1
 801044e:	702e      	strb	r6, [r5, #0]
 8010450:	f004 ff6e 	bl	8015330 <_ZN8touchgfx11Application11getInstanceEv>
 8010454:	6803      	ldr	r3, [r0, #0]
 8010456:	6b5b      	ldr	r3, [r3, #52]	; 0x34
 8010458:	4798      	blx	r3
 801045a:	f894 306b 	ldrb.w	r3, [r4, #107]	; 0x6b
 801045e:	b90b      	cbnz	r3, 8010464 <_ZN8touchgfx3HAL4tickEv+0x64>
 8010460:	f884 606b 	strb.w	r6, [r4, #107]	; 0x6b
 8010464:	f004 ff64 	bl	8015330 <_ZN8touchgfx11Application11getInstanceEv>
 8010468:	6803      	ldr	r3, [r0, #0]
 801046a:	695b      	ldr	r3, [r3, #20]
 801046c:	4798      	blx	r3
 801046e:	6de0      	ldr	r0, [r4, #92]	; 0x5c
 8010470:	6803      	ldr	r3, [r0, #0]
 8010472:	691b      	ldr	r3, [r3, #16]
 8010474:	4798      	blx	r3
 8010476:	f894 306b 	ldrb.w	r3, [r4, #107]	; 0x6b
 801047a:	f894 206c 	ldrb.w	r2, [r4, #108]	; 0x6c
 801047e:	3b01      	subs	r3, #1
 8010480:	b2db      	uxtb	r3, r3
 8010482:	f884 306b 	strb.w	r3, [r4, #107]	; 0x6b
 8010486:	b10a      	cbz	r2, 801048c <_ZN8touchgfx3HAL4tickEv+0x8c>
 8010488:	2b00      	cmp	r3, #0
 801048a:	d1eb      	bne.n	8010464 <_ZN8touchgfx3HAL4tickEv+0x64>
 801048c:	4a3a      	ldr	r2, [pc, #232]	; (8010578 <_ZN8touchgfx3HAL4tickEv+0x178>)
 801048e:	f994 1068 	ldrsb.w	r1, [r4, #104]	; 0x68
 8010492:	7813      	ldrb	r3, [r2, #0]
 8010494:	3301      	adds	r3, #1
 8010496:	b25b      	sxtb	r3, r3
 8010498:	4299      	cmp	r1, r3
 801049a:	7013      	strb	r3, [r2, #0]
 801049c:	dc10      	bgt.n	80104c0 <_ZN8touchgfx3HAL4tickEv+0xc0>
 801049e:	68e0      	ldr	r0, [r4, #12]
 80104a0:	2300      	movs	r3, #0
 80104a2:	7013      	strb	r3, [r2, #0]
 80104a4:	6803      	ldr	r3, [r0, #0]
 80104a6:	aa03      	add	r2, sp, #12
 80104a8:	68db      	ldr	r3, [r3, #12]
 80104aa:	a902      	add	r1, sp, #8
 80104ac:	4798      	blx	r3
 80104ae:	6823      	ldr	r3, [r4, #0]
 80104b0:	2800      	cmp	r0, #0
 80104b2:	d050      	beq.n	8010556 <_ZN8touchgfx3HAL4tickEv+0x156>
 80104b4:	f8d3 30bc 	ldr.w	r3, [r3, #188]	; 0xbc
 80104b8:	e9dd 1202 	ldrd	r1, r2, [sp, #8]
 80104bc:	4620      	mov	r0, r4
 80104be:	4798      	blx	r3
 80104c0:	6960      	ldr	r0, [r4, #20]
 80104c2:	2300      	movs	r3, #0
 80104c4:	f88d 3007 	strb.w	r3, [sp, #7]
 80104c8:	b158      	cbz	r0, 80104e2 <_ZN8touchgfx3HAL4tickEv+0xe2>
 80104ca:	6803      	ldr	r3, [r0, #0]
 80104cc:	f10d 0107 	add.w	r1, sp, #7
 80104d0:	68db      	ldr	r3, [r3, #12]
 80104d2:	4798      	blx	r3
 80104d4:	b128      	cbz	r0, 80104e2 <_ZN8touchgfx3HAL4tickEv+0xe2>
 80104d6:	6de0      	ldr	r0, [r4, #92]	; 0x5c
 80104d8:	f89d 1007 	ldrb.w	r1, [sp, #7]
 80104dc:	6803      	ldr	r3, [r0, #0]
 80104de:	68db      	ldr	r3, [r3, #12]
 80104e0:	4798      	blx	r3
 80104e2:	f104 001c 	add.w	r0, r4, #28
 80104e6:	f015 feb9 	bl	802625c <_ZN8touchgfx8Gestures4tickEv>
 80104ea:	f894 3070 	ldrb.w	r3, [r4, #112]	; 0x70
 80104ee:	b30b      	cbz	r3, 8010534 <_ZN8touchgfx3HAL4tickEv+0x134>
 80104f0:	6920      	ldr	r0, [r4, #16]
 80104f2:	6803      	ldr	r3, [r0, #0]
 80104f4:	691b      	ldr	r3, [r3, #16]
 80104f6:	4798      	blx	r3
 80104f8:	6f63      	ldr	r3, [r4, #116]	; 0x74
 80104fa:	4606      	mov	r6, r0
 80104fc:	b903      	cbnz	r3, 8010500 <_ZN8touchgfx3HAL4tickEv+0x100>
 80104fe:	6760      	str	r0, [r4, #116]	; 0x74
 8010500:	6f63      	ldr	r3, [r4, #116]	; 0x74
 8010502:	4a1e      	ldr	r2, [pc, #120]	; (801057c <_ZN8touchgfx3HAL4tickEv+0x17c>)
 8010504:	1af3      	subs	r3, r6, r3
 8010506:	4293      	cmp	r3, r2
 8010508:	d914      	bls.n	8010534 <_ZN8touchgfx3HAL4tickEv+0x134>
 801050a:	6920      	ldr	r0, [r4, #16]
 801050c:	6803      	ldr	r3, [r0, #0]
 801050e:	699b      	ldr	r3, [r3, #24]
 8010510:	4798      	blx	r3
 8010512:	6f63      	ldr	r3, [r4, #116]	; 0x74
 8010514:	2264      	movs	r2, #100	; 0x64
 8010516:	1af3      	subs	r3, r6, r3
 8010518:	fbb3 f3f2 	udiv	r3, r3, r2
 801051c:	fbb0 f0f3 	udiv	r0, r0, r3
 8010520:	2800      	cmp	r0, #0
 8010522:	dc1d      	bgt.n	8010560 <_ZN8touchgfx3HAL4tickEv+0x160>
 8010524:	f884 2069 	strb.w	r2, [r4, #105]	; 0x69
 8010528:	6920      	ldr	r0, [r4, #16]
 801052a:	6803      	ldr	r3, [r0, #0]
 801052c:	2100      	movs	r1, #0
 801052e:	69db      	ldr	r3, [r3, #28]
 8010530:	4798      	blx	r3
 8010532:	6766      	str	r6, [r4, #116]	; 0x74
 8010534:	f004 fefc 	bl	8015330 <_ZN8touchgfx11Application11getInstanceEv>
 8010538:	6803      	ldr	r3, [r0, #0]
 801053a:	6b9b      	ldr	r3, [r3, #56]	; 0x38
 801053c:	4798      	blx	r3
 801053e:	6823      	ldr	r3, [r4, #0]
 8010540:	4620      	mov	r0, r4
 8010542:	f8d3 30b4 	ldr.w	r3, [r3, #180]	; 0xb4
 8010546:	4798      	blx	r3
 8010548:	2001      	movs	r0, #1
 801054a:	f7f0 f987 	bl	800085c <_ZN8touchgfx4GPIO5clearENS0_7GPIO_IDE>
 801054e:	2300      	movs	r3, #0
 8010550:	702b      	strb	r3, [r5, #0]
 8010552:	b004      	add	sp, #16
 8010554:	bd70      	pop	{r4, r5, r6, pc}
 8010556:	f8d3 30c0 	ldr.w	r3, [r3, #192]	; 0xc0
 801055a:	4620      	mov	r0, r4
 801055c:	4798      	blx	r3
 801055e:	e7af      	b.n	80104c0 <_ZN8touchgfx3HAL4tickEv+0xc0>
 8010560:	2863      	cmp	r0, #99	; 0x63
 8010562:	bfcb      	itete	gt
 8010564:	2300      	movgt	r3, #0
 8010566:	f1c0 0064 	rsble	r0, r0, #100	; 0x64
 801056a:	f884 3069 	strbgt.w	r3, [r4, #105]	; 0x69
 801056e:	f884 0069 	strble.w	r0, [r4, #105]	; 0x69
 8010572:	e7d9      	b.n	8010528 <_ZN8touchgfx3HAL4tickEv+0x128>
 8010574:	20012f28 	.word	0x20012f28
 8010578:	20012f29 	.word	0x20012f29
 801057c:	05f5e100 	.word	0x05f5e100

08010580 <_ZN8touchgfx3HAL17unlockFrameBufferEv>:
 8010580:	b510      	push	{r4, lr}
 8010582:	4604      	mov	r4, r0
 8010584:	f7f0 fac2 	bl	8000b0c <_ZN8touchgfx10OSWrappers24giveFrameBufferSemaphoreEv>
 8010588:	6863      	ldr	r3, [r4, #4]
 801058a:	2200      	movs	r2, #0
 801058c:	729a      	strb	r2, [r3, #10]
 801058e:	bd10      	pop	{r4, pc}

08010590 <_ZN8touchgfx3HAL21registerEventListenerERNS_15UIEventListenerE>:
 8010590:	65c1      	str	r1, [r0, #92]	; 0x5c
 8010592:	301c      	adds	r0, #28
 8010594:	f015 be60 	b.w	8026258 <_ZN8touchgfx8Gestures21registerEventListenerERNS_15UIEventListenerE>

08010598 <_ZN8touchgfx3HAL5touchEll>:
 8010598:	b530      	push	{r4, r5, lr}
 801059a:	b087      	sub	sp, #28
 801059c:	4604      	mov	r4, r0
 801059e:	a804      	add	r0, sp, #16
 80105a0:	e9cd 1204 	strd	r1, r2, [sp, #16]
 80105a4:	f004 fc90 	bl	8014ec8 <_ZN8touchgfx16TouchCalibration14translatePointERNS_5PointE>
 80105a8:	9b04      	ldr	r3, [sp, #16]
 80105aa:	f8ad 300c 	strh.w	r3, [sp, #12]
 80105ae:	a906      	add	r1, sp, #24
 80105b0:	9b05      	ldr	r3, [sp, #20]
 80105b2:	f821 3d0a 	strh.w	r3, [r1, #-10]!
 80105b6:	a803      	add	r0, sp, #12
 80105b8:	f004 fcd8 	bl	8014f6c <_ZN8touchgfx21DisplayTransformation29transformFrameBufferToDisplayERsS1_>
 80105bc:	f894 106f 	ldrb.w	r1, [r4, #111]	; 0x6f
 80105c0:	f8bd 200c 	ldrh.w	r2, [sp, #12]
 80105c4:	f8bd 300e 	ldrh.w	r3, [sp, #14]
 80105c8:	f104 001c 	add.w	r0, r4, #28
 80105cc:	b189      	cbz	r1, 80105f2 <_ZN8touchgfx3HAL5touchEll+0x5a>
 80105ce:	f8b4 5064 	ldrh.w	r5, [r4, #100]	; 0x64
 80105d2:	9300      	str	r3, [sp, #0]
 80105d4:	f8b4 1060 	ldrh.w	r1, [r4, #96]	; 0x60
 80105d8:	4613      	mov	r3, r2
 80105da:	462a      	mov	r2, r5
 80105dc:	f015 fe4c 	bl	8026278 <_ZN8touchgfx8Gestures17registerDragEventEtttt>
 80105e0:	b128      	cbz	r0, 80105ee <_ZN8touchgfx3HAL5touchEll+0x56>
 80105e2:	f9bd 300c 	ldrsh.w	r3, [sp, #12]
 80105e6:	6623      	str	r3, [r4, #96]	; 0x60
 80105e8:	f9bd 300e 	ldrsh.w	r3, [sp, #14]
 80105ec:	6663      	str	r3, [r4, #100]	; 0x64
 80105ee:	b007      	add	sp, #28
 80105f0:	bd30      	pop	{r4, r5, pc}
 80105f2:	f015 fe81 	bl	80262f8 <_ZN8touchgfx8Gestures18registerClickEventENS_10ClickEvent14ClickEventTypeEtt>
 80105f6:	2301      	movs	r3, #1
 80105f8:	f884 306f 	strb.w	r3, [r4, #111]	; 0x6f
 80105fc:	e7f1      	b.n	80105e2 <_ZN8touchgfx3HAL5touchEll+0x4a>

080105fe <_ZN8touchgfx3HAL9blockCopyEPvPKvm>:
 80105fe:	b510      	push	{r4, lr}
 8010600:	2b00      	cmp	r3, #0
 8010602:	d046      	beq.n	8010692 <_ZN8touchgfx3HAL9blockCopyEPvPKvm+0x94>
 8010604:	ea81 0002 	eor.w	r0, r1, r2
 8010608:	07c4      	lsls	r4, r0, #31
 801060a:	d508      	bpl.n	801061e <_ZN8touchgfx3HAL9blockCopyEPvPKvm+0x20>
 801060c:	440b      	add	r3, r1
 801060e:	3a01      	subs	r2, #1
 8010610:	428b      	cmp	r3, r1
 8010612:	d93e      	bls.n	8010692 <_ZN8touchgfx3HAL9blockCopyEPvPKvm+0x94>
 8010614:	f812 0f01 	ldrb.w	r0, [r2, #1]!
 8010618:	f801 0b01 	strb.w	r0, [r1], #1
 801061c:	e7f8      	b.n	8010610 <_ZN8touchgfx3HAL9blockCopyEPvPKvm+0x12>
 801061e:	07d0      	lsls	r0, r2, #31
 8010620:	bf42      	ittt	mi
 8010622:	f812 0b01 	ldrbmi.w	r0, [r2], #1
 8010626:	f801 0b01 	strbmi.w	r0, [r1], #1
 801062a:	f103 33ff 	addmi.w	r3, r3, #4294967295
 801062e:	2b01      	cmp	r3, #1
 8010630:	d911      	bls.n	8010656 <_ZN8touchgfx3HAL9blockCopyEPvPKvm+0x58>
 8010632:	ea81 0402 	eor.w	r4, r1, r2
 8010636:	07a4      	lsls	r4, r4, #30
 8010638:	4610      	mov	r0, r2
 801063a:	d022      	beq.n	8010682 <_ZN8touchgfx3HAL9blockCopyEPvPKvm+0x84>
 801063c:	f023 0401 	bic.w	r4, r3, #1
 8010640:	440c      	add	r4, r1
 8010642:	428c      	cmp	r4, r1
 8010644:	4602      	mov	r2, r0
 8010646:	d904      	bls.n	8010652 <_ZN8touchgfx3HAL9blockCopyEPvPKvm+0x54>
 8010648:	8812      	ldrh	r2, [r2, #0]
 801064a:	f821 2b02 	strh.w	r2, [r1], #2
 801064e:	3002      	adds	r0, #2
 8010650:	e7f7      	b.n	8010642 <_ZN8touchgfx3HAL9blockCopyEPvPKvm+0x44>
 8010652:	f003 0301 	and.w	r3, r3, #1
 8010656:	f023 0003 	bic.w	r0, r3, #3
 801065a:	4408      	add	r0, r1
 801065c:	4288      	cmp	r0, r1
 801065e:	4614      	mov	r4, r2
 8010660:	d904      	bls.n	801066c <_ZN8touchgfx3HAL9blockCopyEPvPKvm+0x6e>
 8010662:	6824      	ldr	r4, [r4, #0]
 8010664:	f841 4b04 	str.w	r4, [r1], #4
 8010668:	3204      	adds	r2, #4
 801066a:	e7f7      	b.n	801065c <_ZN8touchgfx3HAL9blockCopyEPvPKvm+0x5e>
 801066c:	f003 0303 	and.w	r3, r3, #3
 8010670:	440b      	add	r3, r1
 8010672:	3a01      	subs	r2, #1
 8010674:	428b      	cmp	r3, r1
 8010676:	d90c      	bls.n	8010692 <_ZN8touchgfx3HAL9blockCopyEPvPKvm+0x94>
 8010678:	f812 0f01 	ldrb.w	r0, [r2, #1]!
 801067c:	f801 0b01 	strb.w	r0, [r1], #1
 8010680:	e7f8      	b.n	8010674 <_ZN8touchgfx3HAL9blockCopyEPvPKvm+0x76>
 8010682:	0790      	lsls	r0, r2, #30
 8010684:	d0e7      	beq.n	8010656 <_ZN8touchgfx3HAL9blockCopyEPvPKvm+0x58>
 8010686:	f832 0b02 	ldrh.w	r0, [r2], #2
 801068a:	f821 0b02 	strh.w	r0, [r1], #2
 801068e:	3b02      	subs	r3, #2
 8010690:	e7e1      	b.n	8010656 <_ZN8touchgfx3HAL9blockCopyEPvPKvm+0x58>
 8010692:	2001      	movs	r0, #1
 8010694:	bd10      	pop	{r4, pc}

08010696 <_ZN8touchgfx3HAL7noTouchEv>:
 8010696:	b510      	push	{r4, lr}
 8010698:	f890 306f 	ldrb.w	r3, [r0, #111]	; 0x6f
 801069c:	4604      	mov	r4, r0
 801069e:	b153      	cbz	r3, 80106b6 <_ZN8touchgfx3HAL7noTouchEv+0x20>
 80106a0:	f8b0 3064 	ldrh.w	r3, [r0, #100]	; 0x64
 80106a4:	f8b0 2060 	ldrh.w	r2, [r0, #96]	; 0x60
 80106a8:	2101      	movs	r1, #1
 80106aa:	301c      	adds	r0, #28
 80106ac:	f015 fe24 	bl	80262f8 <_ZN8touchgfx8Gestures18registerClickEventENS_10ClickEvent14ClickEventTypeEtt>
 80106b0:	2300      	movs	r3, #0
 80106b2:	f884 306f 	strb.w	r3, [r4, #111]	; 0x6f
 80106b6:	bd10      	pop	{r4, pc}

080106b8 <_ZN8touchgfx3HAL27configurePartialFrameBufferEtttt>:
 80106b8:	e92d 43f0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, lr}
 80106bc:	b085      	sub	sp, #20
 80106be:	ad04      	add	r5, sp, #16
 80106c0:	4604      	mov	r4, r0
 80106c2:	2000      	movs	r0, #0
 80106c4:	f845 0d04 	str.w	r0, [r5, #-4]!
 80106c8:	69a0      	ldr	r0, [r4, #24]
 80106ca:	6806      	ldr	r6, [r0, #0]
 80106cc:	9501      	str	r5, [sp, #4]
 80106ce:	f8bd 5030 	ldrh.w	r5, [sp, #48]	; 0x30
 80106d2:	9500      	str	r5, [sp, #0]
 80106d4:	6835      	ldr	r5, [r6, #0]
 80106d6:	4699      	mov	r9, r3
 80106d8:	460f      	mov	r7, r1
 80106da:	4690      	mov	r8, r2
 80106dc:	47a8      	blx	r5
 80106de:	4d10      	ldr	r5, [pc, #64]	; (8010720 <_ZN8touchgfx3HAL27configurePartialFrameBufferEtttt+0x68>)
 80106e0:	4606      	mov	r6, r0
 80106e2:	f8a5 9000 	strh.w	r9, [r5]
 80106e6:	f7f3 f8f9 	bl	80038dc <_ZN8touchgfx3HAL3lcdEv>
 80106ea:	6803      	ldr	r3, [r0, #0]
 80106ec:	6adb      	ldr	r3, [r3, #44]	; 0x2c
 80106ee:	4798      	blx	r3
 80106f0:	b128      	cbz	r0, 80106fe <_ZN8touchgfx3HAL27configurePartialFrameBufferEtttt+0x46>
 80106f2:	2801      	cmp	r0, #1
 80106f4:	d00b      	beq.n	801070e <_ZN8touchgfx3HAL27configurePartialFrameBufferEtttt+0x56>
 80106f6:	4630      	mov	r0, r6
 80106f8:	b005      	add	sp, #20
 80106fa:	e8bd 83f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, pc}
 80106fe:	882b      	ldrh	r3, [r5, #0]
 8010700:	fb08 7203 	mla	r2, r8, r3, r7
 8010704:	9b03      	ldr	r3, [sp, #12]
 8010706:	eba3 0342 	sub.w	r3, r3, r2, lsl #1
 801070a:	63e3      	str	r3, [r4, #60]	; 0x3c
 801070c:	e7f3      	b.n	80106f6 <_ZN8touchgfx3HAL27configurePartialFrameBufferEtttt+0x3e>
 801070e:	882a      	ldrh	r2, [r5, #0]
 8010710:	9b03      	ldr	r3, [sp, #12]
 8010712:	fb08 7202 	mla	r2, r8, r2, r7
 8010716:	eb02 0242 	add.w	r2, r2, r2, lsl #1
 801071a:	1a9a      	subs	r2, r3, r2
 801071c:	63e2      	str	r2, [r4, #60]	; 0x3c
 801071e:	e7ea      	b.n	80106f6 <_ZN8touchgfx3HAL27configurePartialFrameBufferEtttt+0x3e>
 8010720:	20012f1e 	.word	0x20012f1e

08010724 <_ZN8touchgfx3HAL8blitCopyEPKtttttthbb>:
 8010724:	b5f0      	push	{r4, r5, r6, r7, lr}
 8010726:	b08b      	sub	sp, #44	; 0x2c
 8010728:	4617      	mov	r7, r2
 801072a:	4604      	mov	r4, r0
 801072c:	460e      	mov	r6, r1
 801072e:	461d      	mov	r5, r3
 8010730:	f7f3 f8d4 	bl	80038dc <_ZN8touchgfx3HAL3lcdEv>
 8010734:	6803      	ldr	r3, [r0, #0]
 8010736:	6adb      	ldr	r3, [r3, #44]	; 0x2c
 8010738:	4798      	blx	r3
 801073a:	f89d 3054 	ldrb.w	r3, [sp, #84]	; 0x54
 801073e:	9007      	str	r0, [sp, #28]
 8010740:	e9cd 0308 	strd	r0, r3, [sp, #32]
 8010744:	4b0d      	ldr	r3, [pc, #52]	; (801077c <_ZN8touchgfx3HAL8blitCopyEPKtttttthbb+0x58>)
 8010746:	6822      	ldr	r2, [r4, #0]
 8010748:	881b      	ldrh	r3, [r3, #0]
 801074a:	9306      	str	r3, [sp, #24]
 801074c:	f89d 3050 	ldrb.w	r3, [sp, #80]	; 0x50
 8010750:	9305      	str	r3, [sp, #20]
 8010752:	f89d 304c 	ldrb.w	r3, [sp, #76]	; 0x4c
 8010756:	9304      	str	r3, [sp, #16]
 8010758:	f8bd 3048 	ldrh.w	r3, [sp, #72]	; 0x48
 801075c:	9303      	str	r3, [sp, #12]
 801075e:	f8bd 3044 	ldrh.w	r3, [sp, #68]	; 0x44
 8010762:	9302      	str	r3, [sp, #8]
 8010764:	f8bd 3040 	ldrh.w	r3, [sp, #64]	; 0x40
 8010768:	e9cd 5300 	strd	r5, r3, [sp]
 801076c:	4631      	mov	r1, r6
 801076e:	6bd5      	ldr	r5, [r2, #60]	; 0x3c
 8010770:	463b      	mov	r3, r7
 8010772:	2200      	movs	r2, #0
 8010774:	4620      	mov	r0, r4
 8010776:	47a8      	blx	r5
 8010778:	b00b      	add	sp, #44	; 0x2c
 801077a:	bdf0      	pop	{r4, r5, r6, r7, pc}
 801077c:	20012f1e 	.word	0x20012f1e

08010780 <_ZN8touchgfx3HAL16blitCopyARGB8888EPKtttttthb>:
 8010780:	e92d 43f0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, lr}
 8010784:	4698      	mov	r8, r3
 8010786:	6803      	ldr	r3, [r0, #0]
 8010788:	6bdd      	ldr	r5, [r3, #60]	; 0x3c
 801078a:	4b15      	ldr	r3, [pc, #84]	; (80107e0 <_ZN8touchgfx3HAL16blitCopyARGB8888EPKtttttthb+0x60>)
 801078c:	b08b      	sub	sp, #44	; 0x2c
 801078e:	4617      	mov	r7, r2
 8010790:	f8b3 9000 	ldrh.w	r9, [r3]
 8010794:	460e      	mov	r6, r1
 8010796:	4604      	mov	r4, r0
 8010798:	f7f3 f8a0 	bl	80038dc <_ZN8touchgfx3HAL3lcdEv>
 801079c:	6803      	ldr	r3, [r0, #0]
 801079e:	6adb      	ldr	r3, [r3, #44]	; 0x2c
 80107a0:	4798      	blx	r3
 80107a2:	f89d 3058 	ldrb.w	r3, [sp, #88]	; 0x58
 80107a6:	e9cd 0308 	strd	r0, r3, [sp, #32]
 80107aa:	2302      	movs	r3, #2
 80107ac:	e9cd 9306 	strd	r9, r3, [sp, #24]
 80107b0:	2301      	movs	r3, #1
 80107b2:	9305      	str	r3, [sp, #20]
 80107b4:	f89d 3054 	ldrb.w	r3, [sp, #84]	; 0x54
 80107b8:	9304      	str	r3, [sp, #16]
 80107ba:	f8bd 3050 	ldrh.w	r3, [sp, #80]	; 0x50
 80107be:	9303      	str	r3, [sp, #12]
 80107c0:	f8bd 304c 	ldrh.w	r3, [sp, #76]	; 0x4c
 80107c4:	9302      	str	r3, [sp, #8]
 80107c6:	f8bd 3048 	ldrh.w	r3, [sp, #72]	; 0x48
 80107ca:	2200      	movs	r2, #0
 80107cc:	e9cd 8300 	strd	r8, r3, [sp]
 80107d0:	4631      	mov	r1, r6
 80107d2:	463b      	mov	r3, r7
 80107d4:	4620      	mov	r0, r4
 80107d6:	47a8      	blx	r5
 80107d8:	b00b      	add	sp, #44	; 0x2c
 80107da:	e8bd 83f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, pc}
 80107de:	bf00      	nop
 80107e0:	20012f1e 	.word	0x20012f1e

080107e4 <_ZN8touchgfx3HAL8blitFillENS_9colortypeEtttthb>:
 80107e4:	e92d 43f0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, lr}
 80107e8:	4698      	mov	r8, r3
 80107ea:	6803      	ldr	r3, [r0, #0]
 80107ec:	6d9d      	ldr	r5, [r3, #88]	; 0x58
 80107ee:	4b11      	ldr	r3, [pc, #68]	; (8010834 <_ZN8touchgfx3HAL8blitFillENS_9colortypeEtttthb+0x50>)
 80107f0:	b087      	sub	sp, #28
 80107f2:	f8b3 9000 	ldrh.w	r9, [r3]
 80107f6:	460e      	mov	r6, r1
 80107f8:	4617      	mov	r7, r2
 80107fa:	4604      	mov	r4, r0
 80107fc:	f7f3 f86e 	bl	80038dc <_ZN8touchgfx3HAL3lcdEv>
 8010800:	6803      	ldr	r3, [r0, #0]
 8010802:	6adb      	ldr	r3, [r3, #44]	; 0x2c
 8010804:	4798      	blx	r3
 8010806:	f89d 3044 	ldrb.w	r3, [sp, #68]	; 0x44
 801080a:	f8cd 900c 	str.w	r9, [sp, #12]
 801080e:	e9cd 0304 	strd	r0, r3, [sp, #16]
 8010812:	f89d 3040 	ldrb.w	r3, [sp, #64]	; 0x40
 8010816:	9302      	str	r3, [sp, #8]
 8010818:	f8bd 303c 	ldrh.w	r3, [sp, #60]	; 0x3c
 801081c:	9301      	str	r3, [sp, #4]
 801081e:	f8bd 3038 	ldrh.w	r3, [sp, #56]	; 0x38
 8010822:	9300      	str	r3, [sp, #0]
 8010824:	463a      	mov	r2, r7
 8010826:	4643      	mov	r3, r8
 8010828:	4631      	mov	r1, r6
 801082a:	4620      	mov	r0, r4
 801082c:	47a8      	blx	r5
 801082e:	b007      	add	sp, #28
 8010830:	e8bd 83f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, pc}
 8010834:	20012f1e 	.word	0x20012f1e

08010838 <_ZN8touchgfx3HAL27drawDrawableInDynamicBitmapERNS_8DrawableEtRKNS_4RectE>:
 8010838:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 801083c:	4604      	mov	r4, r0
 801083e:	b08f      	sub	sp, #60	; 0x3c
 8010840:	4610      	mov	r0, r2
 8010842:	460d      	mov	r5, r1
 8010844:	4691      	mov	r9, r2
 8010846:	461e      	mov	r6, r3
 8010848:	f008 f8f0 	bl	8018a2c <_ZN8touchgfx6Bitmap23dynamicBitmapGetAddressEt>
 801084c:	2800      	cmp	r0, #0
 801084e:	f000 809d 	beq.w	801098c <_ZN8touchgfx3HAL27drawDrawableInDynamicBitmapERNS_8DrawableEtRKNS_4RectE+0x154>
 8010852:	6823      	ldr	r3, [r4, #0]
 8010854:	f8df b198 	ldr.w	fp, [pc, #408]	; 80109f0 <_ZN8touchgfx3HAL27drawDrawableInDynamicBitmapERNS_8DrawableEtRKNS_4RectE+0x1b8>
 8010858:	6a9b      	ldr	r3, [r3, #40]	; 0x28
 801085a:	f8df a198 	ldr.w	sl, [pc, #408]	; 80109f4 <_ZN8touchgfx3HAL27drawDrawableInDynamicBitmapERNS_8DrawableEtRKNS_4RectE+0x1bc>
 801085e:	4f61      	ldr	r7, [pc, #388]	; (80109e4 <_ZN8touchgfx3HAL27drawDrawableInDynamicBitmapERNS_8DrawableEtRKNS_4RectE+0x1ac>)
 8010860:	4620      	mov	r0, r4
 8010862:	4798      	blx	r3
 8010864:	6823      	ldr	r3, [r4, #0]
 8010866:	4620      	mov	r0, r4
 8010868:	6adb      	ldr	r3, [r3, #44]	; 0x2c
 801086a:	4798      	blx	r3
 801086c:	f8bb 3000 	ldrh.w	r3, [fp]
 8010870:	9301      	str	r3, [sp, #4]
 8010872:	f10d 0838 	add.w	r8, sp, #56	; 0x38
 8010876:	f8ba 3000 	ldrh.w	r3, [sl]
 801087a:	9302      	str	r3, [sp, #8]
 801087c:	883b      	ldrh	r3, [r7, #0]
 801087e:	f828 9d1c 	strh.w	r9, [r8, #-28]!
 8010882:	9303      	str	r3, [sp, #12]
 8010884:	4b58      	ldr	r3, [pc, #352]	; (80109e8 <_ZN8touchgfx3HAL27drawDrawableInDynamicBitmapERNS_8DrawableEtRKNS_4RectE+0x1b0>)
 8010886:	9305      	str	r3, [sp, #20]
 8010888:	881a      	ldrh	r2, [r3, #0]
 801088a:	9204      	str	r2, [sp, #16]
 801088c:	4640      	mov	r0, r8
 801088e:	f008 f961 	bl	8018b54 <_ZNK8touchgfx6Bitmap8getWidthEv>
 8010892:	8038      	strh	r0, [r7, #0]
 8010894:	4640      	mov	r0, r8
 8010896:	f008 f991 	bl	8018bbc <_ZNK8touchgfx6Bitmap9getHeightEv>
 801089a:	9b05      	ldr	r3, [sp, #20]
 801089c:	b280      	uxth	r0, r0
 801089e:	8018      	strh	r0, [r3, #0]
 80108a0:	4b52      	ldr	r3, [pc, #328]	; (80109ec <_ZN8touchgfx3HAL27drawDrawableInDynamicBitmapERNS_8DrawableEtRKNS_4RectE+0x1b4>)
 80108a2:	781b      	ldrb	r3, [r3, #0]
 80108a4:	2b00      	cmp	r3, #0
 80108a6:	d174      	bne.n	8010992 <_ZN8touchgfx3HAL27drawDrawableInDynamicBitmapERNS_8DrawableEtRKNS_4RectE+0x15a>
 80108a8:	883b      	ldrh	r3, [r7, #0]
 80108aa:	f8ab 3000 	strh.w	r3, [fp]
 80108ae:	f8aa 0000 	strh.w	r0, [sl]
 80108b2:	4648      	mov	r0, r9
 80108b4:	e9d4 870f 	ldrd	r8, r7, [r4, #60]	; 0x3c
 80108b8:	f008 f8b8 	bl	8018a2c <_ZN8touchgfx6Bitmap23dynamicBitmapGetAddressEt>
 80108bc:	e9c4 000f 	strd	r0, r0, [r4, #60]	; 0x3c
 80108c0:	2200      	movs	r2, #0
 80108c2:	4611      	mov	r1, r2
 80108c4:	4628      	mov	r0, r5
 80108c6:	f9b5 9004 	ldrsh.w	r9, [r5, #4]
 80108ca:	f9b5 a006 	ldrsh.w	sl, [r5, #6]
 80108ce:	f7f1 ff4a 	bl	8002766 <_ZN8touchgfx8Drawable5setXYEss>
 80108d2:	2301      	movs	r3, #1
 80108d4:	f895 b025 	ldrb.w	fp, [r5, #37]	; 0x25
 80108d8:	f885 3025 	strb.w	r3, [r5, #37]	; 0x25
 80108dc:	f9b6 3004 	ldrsh.w	r3, [r6, #4]
 80108e0:	2b00      	cmp	r3, #0
 80108e2:	dd5c      	ble.n	801099e <_ZN8touchgfx3HAL27drawDrawableInDynamicBitmapERNS_8DrawableEtRKNS_4RectE+0x166>
 80108e4:	f9b6 3006 	ldrsh.w	r3, [r6, #6]
 80108e8:	2b00      	cmp	r3, #0
 80108ea:	dd58      	ble.n	801099e <_ZN8touchgfx3HAL27drawDrawableInDynamicBitmapERNS_8DrawableEtRKNS_4RectE+0x166>
 80108ec:	462a      	mov	r2, r5
 80108ee:	ab0a      	add	r3, sp, #40	; 0x28
 80108f0:	f852 0f04 	ldr.w	r0, [r2, #4]!
 80108f4:	6851      	ldr	r1, [r2, #4]
 80108f6:	c303      	stmia	r3!, {r0, r1}
 80108f8:	4631      	mov	r1, r6
 80108fa:	a80a      	add	r0, sp, #40	; 0x28
 80108fc:	f7ff fc06 	bl	801010c <_ZN8touchgfx4RectaNERKS0_>
 8010900:	4b38      	ldr	r3, [pc, #224]	; (80109e4 <_ZN8touchgfx3HAL27drawDrawableInDynamicBitmapERNS_8DrawableEtRKNS_4RectE+0x1ac>)
 8010902:	f9b3 2000 	ldrsh.w	r2, [r3]
 8010906:	f8ad 2034 	strh.w	r2, [sp, #52]	; 0x34
 801090a:	2100      	movs	r1, #0
 801090c:	aa0a      	add	r2, sp, #40	; 0x28
 801090e:	4b36      	ldr	r3, [pc, #216]	; (80109e8 <_ZN8touchgfx3HAL27drawDrawableInDynamicBitmapERNS_8DrawableEtRKNS_4RectE+0x1b0>)
 8010910:	910c      	str	r1, [sp, #48]	; 0x30
 8010912:	e892 0003 	ldmia.w	r2, {r0, r1}
 8010916:	f9b3 3000 	ldrsh.w	r3, [r3]
 801091a:	f8ad 3036 	strh.w	r3, [sp, #54]	; 0x36
 801091e:	ab08      	add	r3, sp, #32
 8010920:	e883 0003 	stmia.w	r3, {r0, r1}
 8010924:	4618      	mov	r0, r3
 8010926:	a90c      	add	r1, sp, #48	; 0x30
 8010928:	f7ff fbf0 	bl	801010c <_ZN8touchgfx4RectaNERKS0_>
 801092c:	6ce3      	ldr	r3, [r4, #76]	; 0x4c
 801092e:	2b00      	cmp	r3, #0
 8010930:	d13c      	bne.n	80109ac <_ZN8touchgfx3HAL27drawDrawableInDynamicBitmapERNS_8DrawableEtRKNS_4RectE+0x174>
 8010932:	2000      	movs	r0, #0
 8010934:	f884 0058 	strb.w	r0, [r4, #88]	; 0x58
 8010938:	2600      	movs	r6, #0
 801093a:	682a      	ldr	r2, [r5, #0]
 801093c:	696b      	ldr	r3, [r5, #20]
 801093e:	616e      	str	r6, [r5, #20]
 8010940:	9305      	str	r3, [sp, #20]
 8010942:	6892      	ldr	r2, [r2, #8]
 8010944:	a908      	add	r1, sp, #32
 8010946:	4628      	mov	r0, r5
 8010948:	4790      	blx	r2
 801094a:	9b05      	ldr	r3, [sp, #20]
 801094c:	616b      	str	r3, [r5, #20]
 801094e:	4652      	mov	r2, sl
 8010950:	f884 6058 	strb.w	r6, [r4, #88]	; 0x58
 8010954:	4649      	mov	r1, r9
 8010956:	4628      	mov	r0, r5
 8010958:	f885 b025 	strb.w	fp, [r5, #37]	; 0x25
 801095c:	f7f1 ff03 	bl	8002766 <_ZN8touchgfx8Drawable5setXYEss>
 8010960:	4b23      	ldr	r3, [pc, #140]	; (80109f0 <_ZN8touchgfx3HAL27drawDrawableInDynamicBitmapERNS_8DrawableEtRKNS_4RectE+0x1b8>)
 8010962:	9a01      	ldr	r2, [sp, #4]
 8010964:	801a      	strh	r2, [r3, #0]
 8010966:	4b23      	ldr	r3, [pc, #140]	; (80109f4 <_ZN8touchgfx3HAL27drawDrawableInDynamicBitmapERNS_8DrawableEtRKNS_4RectE+0x1bc>)
 8010968:	9a02      	ldr	r2, [sp, #8]
 801096a:	801a      	strh	r2, [r3, #0]
 801096c:	4b1d      	ldr	r3, [pc, #116]	; (80109e4 <_ZN8touchgfx3HAL27drawDrawableInDynamicBitmapERNS_8DrawableEtRKNS_4RectE+0x1ac>)
 801096e:	9a03      	ldr	r2, [sp, #12]
 8010970:	801a      	strh	r2, [r3, #0]
 8010972:	4b1d      	ldr	r3, [pc, #116]	; (80109e8 <_ZN8touchgfx3HAL27drawDrawableInDynamicBitmapERNS_8DrawableEtRKNS_4RectE+0x1b0>)
 8010974:	9a04      	ldr	r2, [sp, #16]
 8010976:	801a      	strh	r2, [r3, #0]
 8010978:	e9c4 870f 	strd	r8, r7, [r4, #60]	; 0x3c
 801097c:	6823      	ldr	r3, [r4, #0]
 801097e:	4620      	mov	r0, r4
 8010980:	6a9b      	ldr	r3, [r3, #40]	; 0x28
 8010982:	4798      	blx	r3
 8010984:	6823      	ldr	r3, [r4, #0]
 8010986:	4620      	mov	r0, r4
 8010988:	6adb      	ldr	r3, [r3, #44]	; 0x2c
 801098a:	4798      	blx	r3
 801098c:	b00f      	add	sp, #60	; 0x3c
 801098e:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
 8010992:	883b      	ldrh	r3, [r7, #0]
 8010994:	f8ab 0000 	strh.w	r0, [fp]
 8010998:	f8aa 3000 	strh.w	r3, [sl]
 801099c:	e789      	b.n	80108b2 <_ZN8touchgfx3HAL27drawDrawableInDynamicBitmapERNS_8DrawableEtRKNS_4RectE+0x7a>
 801099e:	462a      	mov	r2, r5
 80109a0:	ab0a      	add	r3, sp, #40	; 0x28
 80109a2:	f852 0f04 	ldr.w	r0, [r2, #4]!
 80109a6:	6851      	ldr	r1, [r2, #4]
 80109a8:	c303      	stmia	r3!, {r0, r1}
 80109aa:	e7a9      	b.n	8010900 <_ZN8touchgfx3HAL27drawDrawableInDynamicBitmapERNS_8DrawableEtRKNS_4RectE+0xc8>
 80109ac:	a807      	add	r0, sp, #28
 80109ae:	f008 fa41 	bl	8018e34 <_ZNK8touchgfx6Bitmap9getFormatEv>
 80109b2:	4606      	mov	r6, r0
 80109b4:	6ce0      	ldr	r0, [r4, #76]	; 0x4c
 80109b6:	6803      	ldr	r3, [r0, #0]
 80109b8:	6adb      	ldr	r3, [r3, #44]	; 0x2c
 80109ba:	4798      	blx	r3
 80109bc:	4286      	cmp	r6, r0
 80109be:	d1b8      	bne.n	8010932 <_ZN8touchgfx3HAL27drawDrawableInDynamicBitmapERNS_8DrawableEtRKNS_4RectE+0xfa>
 80109c0:	f7f2 ff8c 	bl	80038dc <_ZN8touchgfx3HAL3lcdEv>
 80109c4:	6803      	ldr	r3, [r0, #0]
 80109c6:	4606      	mov	r6, r0
 80109c8:	6b5b      	ldr	r3, [r3, #52]	; 0x34
 80109ca:	9305      	str	r3, [sp, #20]
 80109cc:	a807      	add	r0, sp, #28
 80109ce:	f008 fa31 	bl	8018e34 <_ZNK8touchgfx6Bitmap9getFormatEv>
 80109d2:	9b05      	ldr	r3, [sp, #20]
 80109d4:	4601      	mov	r1, r0
 80109d6:	4630      	mov	r0, r6
 80109d8:	4798      	blx	r3
 80109da:	f080 0001 	eor.w	r0, r0, #1
 80109de:	b2c0      	uxtb	r0, r0
 80109e0:	e7a8      	b.n	8010934 <_ZN8touchgfx3HAL27drawDrawableInDynamicBitmapERNS_8DrawableEtRKNS_4RectE+0xfc>
 80109e2:	bf00      	nop
 80109e4:	20012f18 	.word	0x20012f18
 80109e8:	20012f1a 	.word	0x20012f1a
 80109ec:	20012f1c 	.word	0x20012f1c
 80109f0:	20012f1e 	.word	0x20012f1e
 80109f4:	20012f20 	.word	0x20012f20

080109f8 <_ZN8touchgfx3HAL20getClientFrameBufferEv>:
 80109f8:	b510      	push	{r4, lr}
 80109fa:	4b07      	ldr	r3, [pc, #28]	; (8010a18 <_ZN8touchgfx3HAL20getClientFrameBufferEv+0x20>)
 80109fc:	781b      	ldrb	r3, [r3, #0]
 80109fe:	4604      	mov	r4, r0
 8010a00:	b13b      	cbz	r3, 8010a12 <_ZN8touchgfx3HAL20getClientFrameBufferEv+0x1a>
 8010a02:	6803      	ldr	r3, [r0, #0]
 8010a04:	6b1b      	ldr	r3, [r3, #48]	; 0x30
 8010a06:	4798      	blx	r3
 8010a08:	6be3      	ldr	r3, [r4, #60]	; 0x3c
 8010a0a:	4283      	cmp	r3, r0
 8010a0c:	d101      	bne.n	8010a12 <_ZN8touchgfx3HAL20getClientFrameBufferEv+0x1a>
 8010a0e:	6c20      	ldr	r0, [r4, #64]	; 0x40
 8010a10:	bd10      	pop	{r4, pc}
 8010a12:	6be0      	ldr	r0, [r4, #60]	; 0x3c
 8010a14:	e7fc      	b.n	8010a10 <_ZN8touchgfx3HAL20getClientFrameBufferEv+0x18>
 8010a16:	bf00      	nop
 8010a18:	20012f22 	.word	0x20012f22

08010a1c <_ZN8touchgfx3HAL12blitCopyWordEPKttttttt>:
 8010a1c:	e92d 41f0 	stmdb	sp!, {r4, r5, r6, r7, r8, lr}
 8010a20:	b08a      	sub	sp, #40	; 0x28
 8010a22:	461d      	mov	r5, r3
 8010a24:	f44f 6380 	mov.w	r3, #1024	; 0x400
 8010a28:	e9cd 3101 	strd	r3, r1, [sp, #4]
 8010a2c:	f8bd 3040 	ldrh.w	r3, [sp, #64]	; 0x40
 8010a30:	f8ad 3018 	strh.w	r3, [sp, #24]
 8010a34:	f8bd 3044 	ldrh.w	r3, [sp, #68]	; 0x44
 8010a38:	f8ad 301a 	strh.w	r3, [sp, #26]
 8010a3c:	2400      	movs	r4, #0
 8010a3e:	f8bd 3048 	ldrh.w	r3, [sp, #72]	; 0x48
 8010a42:	f8bd 604c 	ldrh.w	r6, [sp, #76]	; 0x4c
 8010a46:	f8ad 301c 	strh.w	r3, [sp, #28]
 8010a4a:	4690      	mov	r8, r2
 8010a4c:	4607      	mov	r7, r0
 8010a4e:	9404      	str	r4, [sp, #16]
 8010a50:	f88d 4020 	strb.w	r4, [sp, #32]
 8010a54:	f7ff ffd0 	bl	80109f8 <_ZN8touchgfx3HAL20getClientFrameBufferEv>
 8010a58:	fb06 8505 	mla	r5, r6, r5, r8
 8010a5c:	eb00 0545 	add.w	r5, r0, r5, lsl #1
 8010a60:	6878      	ldr	r0, [r7, #4]
 8010a62:	9505      	str	r5, [sp, #20]
 8010a64:	f8ad 601e 	strh.w	r6, [sp, #30]
 8010a68:	f88d 4022 	strb.w	r4, [sp, #34]	; 0x22
 8010a6c:	f88d 4021 	strb.w	r4, [sp, #33]	; 0x21
 8010a70:	f88d 4023 	strb.w	r4, [sp, #35]	; 0x23
 8010a74:	f88d 4024 	strb.w	r4, [sp, #36]	; 0x24
 8010a78:	6803      	ldr	r3, [r0, #0]
 8010a7a:	a901      	add	r1, sp, #4
 8010a7c:	685b      	ldr	r3, [r3, #4]
 8010a7e:	4798      	blx	r3
 8010a80:	b00a      	add	sp, #40	; 0x28
 8010a82:	e8bd 81f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, pc}

08010a86 <_ZN8touchgfx3HAL12blitFillWordEtttttt>:
 8010a86:	e92d 43f0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, lr}
 8010a8a:	b08b      	sub	sp, #44	; 0x2c
 8010a8c:	2400      	movs	r4, #0
 8010a8e:	461d      	mov	r5, r3
 8010a90:	f44f 6300 	mov.w	r3, #2048	; 0x800
 8010a94:	4688      	mov	r8, r1
 8010a96:	4691      	mov	r9, r2
 8010a98:	f8bd 6050 	ldrh.w	r6, [sp, #80]	; 0x50
 8010a9c:	9404      	str	r4, [sp, #16]
 8010a9e:	4607      	mov	r7, r0
 8010aa0:	e9cd 3401 	strd	r3, r4, [sp, #4]
 8010aa4:	f7ff ffa8 	bl	80109f8 <_ZN8touchgfx3HAL20getClientFrameBufferEv>
 8010aa8:	fb06 9505 	mla	r5, r6, r5, r9
 8010aac:	f8bd 3048 	ldrh.w	r3, [sp, #72]	; 0x48
 8010ab0:	f8ad 3018 	strh.w	r3, [sp, #24]
 8010ab4:	eb00 0545 	add.w	r5, r0, r5, lsl #1
 8010ab8:	f8bd 304c 	ldrh.w	r3, [sp, #76]	; 0x4c
 8010abc:	6878      	ldr	r0, [r7, #4]
 8010abe:	9505      	str	r5, [sp, #20]
 8010ac0:	f8ad 301a 	strh.w	r3, [sp, #26]
 8010ac4:	f8ad 401c 	strh.w	r4, [sp, #28]
 8010ac8:	f8ad 601e 	strh.w	r6, [sp, #30]
 8010acc:	f8cd 8010 	str.w	r8, [sp, #16]
 8010ad0:	f8ad 4020 	strh.w	r4, [sp, #32]
 8010ad4:	f88d 4022 	strb.w	r4, [sp, #34]	; 0x22
 8010ad8:	f88d 4023 	strb.w	r4, [sp, #35]	; 0x23
 8010adc:	f88d 4024 	strb.w	r4, [sp, #36]	; 0x24
 8010ae0:	6803      	ldr	r3, [r0, #0]
 8010ae2:	a901      	add	r1, sp, #4
 8010ae4:	685b      	ldr	r3, [r3, #4]
 8010ae6:	4798      	blx	r3
 8010ae8:	b00b      	add	sp, #44	; 0x2c
 8010aea:	e8bd 83f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, pc}
	...

08010af0 <_ZN8touchgfx3HAL8blitCopyEPKtPKhttttthbtNS_6Bitmap12BitmapFormatES6_b>:
 8010af0:	e92d 41f0 	stmdb	sp!, {r4, r5, r6, r7, r8, lr}
 8010af4:	b08a      	sub	sp, #40	; 0x28
 8010af6:	4698      	mov	r8, r3
 8010af8:	f89d 505c 	ldrb.w	r5, [sp, #92]	; 0x5c
 8010afc:	f89d c054 	ldrb.w	ip, [sp, #84]	; 0x54
 8010b00:	f8bd 7058 	ldrh.w	r7, [sp, #88]	; 0x58
 8010b04:	f89d 4060 	ldrb.w	r4, [sp, #96]	; 0x60
 8010b08:	2300      	movs	r3, #0
 8010b0a:	2d0b      	cmp	r5, #11
 8010b0c:	4606      	mov	r6, r0
 8010b0e:	9304      	str	r3, [sp, #16]
 8010b10:	f89d 0050 	ldrb.w	r0, [sp, #80]	; 0x50
 8010b14:	d138      	bne.n	8010b88 <_ZN8touchgfx3HAL8blitCopyEPKtPKhttttthbtNS_6Bitmap12BitmapFormatES6_b+0x98>
 8010b16:	2380      	movs	r3, #128	; 0x80
 8010b18:	e9cd 3101 	strd	r3, r1, [sp, #4]
 8010b1c:	f8bd 3044 	ldrh.w	r3, [sp, #68]	; 0x44
 8010b20:	f8ad 3018 	strh.w	r3, [sp, #24]
 8010b24:	f8bd 3048 	ldrh.w	r3, [sp, #72]	; 0x48
 8010b28:	f8ad 301a 	strh.w	r3, [sp, #26]
 8010b2c:	f88d 0020 	strb.w	r0, [sp, #32]
 8010b30:	f8bd 304c 	ldrh.w	r3, [sp, #76]	; 0x4c
 8010b34:	f8ad 301c 	strh.w	r3, [sp, #28]
 8010b38:	4630      	mov	r0, r6
 8010b3a:	9203      	str	r2, [sp, #12]
 8010b3c:	f7ff ff5c 	bl	80109f8 <_ZN8touchgfx3HAL20getClientFrameBufferEv>
 8010b40:	2c0b      	cmp	r4, #11
 8010b42:	bf98      	it	ls
 8010b44:	4b1b      	ldrls	r3, [pc, #108]	; (8010bb4 <_ZN8touchgfx3HAL8blitCopyEPKtPKhttttthbtNS_6Bitmap12BitmapFormatES6_b+0xc4>)
 8010b46:	f8bd 2040 	ldrh.w	r2, [sp, #64]	; 0x40
 8010b4a:	bf98      	it	ls
 8010b4c:	5d19      	ldrbls	r1, [r3, r4]
 8010b4e:	f8ad 701e 	strh.w	r7, [sp, #30]
 8010b52:	bf88      	it	hi
 8010b54:	2100      	movhi	r1, #0
 8010b56:	fb02 8307 	mla	r3, r2, r7, r8
 8010b5a:	10c9      	asrs	r1, r1, #3
 8010b5c:	fb01 0003 	mla	r0, r1, r3, r0
 8010b60:	f89d 3064 	ldrb.w	r3, [sp, #100]	; 0x64
 8010b64:	9005      	str	r0, [sp, #20]
 8010b66:	f88d 3023 	strb.w	r3, [sp, #35]	; 0x23
 8010b6a:	6870      	ldr	r0, [r6, #4]
 8010b6c:	f88d 5021 	strb.w	r5, [sp, #33]	; 0x21
 8010b70:	2300      	movs	r3, #0
 8010b72:	f88d 4022 	strb.w	r4, [sp, #34]	; 0x22
 8010b76:	f88d 3024 	strb.w	r3, [sp, #36]	; 0x24
 8010b7a:	6803      	ldr	r3, [r0, #0]
 8010b7c:	a901      	add	r1, sp, #4
 8010b7e:	685b      	ldr	r3, [r3, #4]
 8010b80:	4798      	blx	r3
 8010b82:	b00a      	add	sp, #40	; 0x28
 8010b84:	e8bd 81f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, pc}
 8010b88:	2d02      	cmp	r5, #2
 8010b8a:	d109      	bne.n	8010ba0 <_ZN8touchgfx3HAL8blitCopyEPKtPKhttttthbtNS_6Bitmap12BitmapFormatES6_b+0xb0>
 8010b8c:	28ff      	cmp	r0, #255	; 0xff
 8010b8e:	d105      	bne.n	8010b9c <_ZN8touchgfx3HAL8blitCopyEPKtPKhttttthbtNS_6Bitmap12BitmapFormatES6_b+0xac>
 8010b90:	f1bc 0f00 	cmp.w	ip, #0
 8010b94:	bf14      	ite	ne
 8010b96:	2340      	movne	r3, #64	; 0x40
 8010b98:	2320      	moveq	r3, #32
 8010b9a:	e7bd      	b.n	8010b18 <_ZN8touchgfx3HAL8blitCopyEPKtPKhttttthbtNS_6Bitmap12BitmapFormatES6_b+0x28>
 8010b9c:	2340      	movs	r3, #64	; 0x40
 8010b9e:	e7bb      	b.n	8010b18 <_ZN8touchgfx3HAL8blitCopyEPKtPKhttttthbtNS_6Bitmap12BitmapFormatES6_b+0x28>
 8010ba0:	28ff      	cmp	r0, #255	; 0xff
 8010ba2:	d105      	bne.n	8010bb0 <_ZN8touchgfx3HAL8blitCopyEPKtPKhttttthbtNS_6Bitmap12BitmapFormatES6_b+0xc0>
 8010ba4:	f1bc 0f00 	cmp.w	ip, #0
 8010ba8:	bf14      	ite	ne
 8010baa:	2304      	movne	r3, #4
 8010bac:	2301      	moveq	r3, #1
 8010bae:	e7b3      	b.n	8010b18 <_ZN8touchgfx3HAL8blitCopyEPKtPKhttttthbtNS_6Bitmap12BitmapFormatES6_b+0x28>
 8010bb0:	2304      	movs	r3, #4
 8010bb2:	e7b1      	b.n	8010b18 <_ZN8touchgfx3HAL8blitCopyEPKtPKhttttthbtNS_6Bitmap12BitmapFormatES6_b+0x28>
 8010bb4:	0802e23c 	.word	0x0802e23c

08010bb8 <_ZN8touchgfx3HAL8blitFillENS_9colortypeEtttthtNS_6Bitmap12BitmapFormatEb>:
 8010bb8:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 8010bbc:	b08b      	sub	sp, #44	; 0x2c
 8010bbe:	461d      	mov	r5, r3
 8010bc0:	f89d 9058 	ldrb.w	r9, [sp, #88]	; 0x58
 8010bc4:	f89d 6060 	ldrb.w	r6, [sp, #96]	; 0x60
 8010bc8:	f8bd a05c 	ldrh.w	sl, [sp, #92]	; 0x5c
 8010bcc:	f1b9 0fff 	cmp.w	r9, #255	; 0xff
 8010bd0:	bf14      	ite	ne
 8010bd2:	2308      	movne	r3, #8
 8010bd4:	2302      	moveq	r3, #2
 8010bd6:	2400      	movs	r4, #0
 8010bd8:	e9cd 3401 	strd	r3, r4, [sp, #4]
 8010bdc:	4688      	mov	r8, r1
 8010bde:	4693      	mov	fp, r2
 8010be0:	9404      	str	r4, [sp, #16]
 8010be2:	4607      	mov	r7, r0
 8010be4:	f7ff ff08 	bl	80109f8 <_ZN8touchgfx3HAL20getClientFrameBufferEv>
 8010be8:	2e0b      	cmp	r6, #11
 8010bea:	bf98      	it	ls
 8010bec:	4b15      	ldrls	r3, [pc, #84]	; (8010c44 <_ZN8touchgfx3HAL8blitFillENS_9colortypeEtttthtNS_6Bitmap12BitmapFormatEb+0x8c>)
 8010bee:	f89d 2064 	ldrb.w	r2, [sp, #100]	; 0x64
 8010bf2:	bf98      	it	ls
 8010bf4:	5d9c      	ldrbls	r4, [r3, r6]
 8010bf6:	f8bd 3050 	ldrh.w	r3, [sp, #80]	; 0x50
 8010bfa:	f8ad 3018 	strh.w	r3, [sp, #24]
 8010bfe:	fb05 b50a 	mla	r5, r5, sl, fp
 8010c02:	f8bd 3054 	ldrh.w	r3, [sp, #84]	; 0x54
 8010c06:	f8ad 301a 	strh.w	r3, [sp, #26]
 8010c0a:	10e4      	asrs	r4, r4, #3
 8010c0c:	fb04 0405 	mla	r4, r4, r5, r0
 8010c10:	2300      	movs	r3, #0
 8010c12:	6878      	ldr	r0, [r7, #4]
 8010c14:	9405      	str	r4, [sp, #20]
 8010c16:	f8ad 301c 	strh.w	r3, [sp, #28]
 8010c1a:	f8ad a01e 	strh.w	sl, [sp, #30]
 8010c1e:	f8cd 8010 	str.w	r8, [sp, #16]
 8010c22:	f88d 9020 	strb.w	r9, [sp, #32]
 8010c26:	f88d 2023 	strb.w	r2, [sp, #35]	; 0x23
 8010c2a:	f88d 3024 	strb.w	r3, [sp, #36]	; 0x24
 8010c2e:	f88d 6021 	strb.w	r6, [sp, #33]	; 0x21
 8010c32:	f88d 6022 	strb.w	r6, [sp, #34]	; 0x22
 8010c36:	6803      	ldr	r3, [r0, #0]
 8010c38:	a901      	add	r1, sp, #4
 8010c3a:	685b      	ldr	r3, [r3, #4]
 8010c3c:	4798      	blx	r3
 8010c3e:	b00b      	add	sp, #44	; 0x2c
 8010c40:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
 8010c44:	0802e23c 	.word	0x0802e23c

08010c48 <_ZNK8touchgfx3HAL13getDstAddressEttPt>:
 8010c48:	e92d 41f0 	stmdb	sp!, {r4, r5, r6, r7, r8, lr}
 8010c4c:	461e      	mov	r6, r3
 8010c4e:	4b0a      	ldr	r3, [pc, #40]	; (8010c78 <_ZNK8touchgfx3HAL13getDstAddressEttPt+0x30>)
 8010c50:	460f      	mov	r7, r1
 8010c52:	881d      	ldrh	r5, [r3, #0]
 8010c54:	4690      	mov	r8, r2
 8010c56:	f7f2 fe41 	bl	80038dc <_ZN8touchgfx3HAL3lcdEv>
 8010c5a:	6803      	ldr	r3, [r0, #0]
 8010c5c:	6adb      	ldr	r3, [r3, #44]	; 0x2c
 8010c5e:	4798      	blx	r3
 8010c60:	280b      	cmp	r0, #11
 8010c62:	bf9a      	itte	ls
 8010c64:	4b05      	ldrls	r3, [pc, #20]	; (8010c7c <_ZNK8touchgfx3HAL13getDstAddressEttPt+0x34>)
 8010c66:	5c1c      	ldrbls	r4, [r3, r0]
 8010c68:	2400      	movhi	r4, #0
 8010c6a:	fb08 7005 	mla	r0, r8, r5, r7
 8010c6e:	10e4      	asrs	r4, r4, #3
 8010c70:	fb04 6000 	mla	r0, r4, r0, r6
 8010c74:	e8bd 81f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, pc}
 8010c78:	20012f1e 	.word	0x20012f1e
 8010c7c:	0802e23c 	.word	0x0802e23c

08010c80 <_ZN8touchgfx3HAL13blitCopyGlyphEPKhtttttNS_9colortypeEhNS_14BlitOperationsEb>:
 8010c80:	b5f0      	push	{r4, r5, r6, r7, lr}
 8010c82:	b08b      	sub	sp, #44	; 0x2c
 8010c84:	461f      	mov	r7, r3
 8010c86:	f8bd 3054 	ldrh.w	r3, [sp, #84]	; 0x54
 8010c8a:	e9cd 3101 	strd	r3, r1, [sp, #4]
 8010c8e:	f8bd 3040 	ldrh.w	r3, [sp, #64]	; 0x40
 8010c92:	f8ad 3018 	strh.w	r3, [sp, #24]
 8010c96:	f8bd 3044 	ldrh.w	r3, [sp, #68]	; 0x44
 8010c9a:	f8ad 301a 	strh.w	r3, [sp, #26]
 8010c9e:	f8bd 3048 	ldrh.w	r3, [sp, #72]	; 0x48
 8010ca2:	f8ad 301c 	strh.w	r3, [sp, #28]
 8010ca6:	2500      	movs	r5, #0
 8010ca8:	f89d 3050 	ldrb.w	r3, [sp, #80]	; 0x50
 8010cac:	f88d 3020 	strb.w	r3, [sp, #32]
 8010cb0:	4604      	mov	r4, r0
 8010cb2:	4616      	mov	r6, r2
 8010cb4:	9504      	str	r5, [sp, #16]
 8010cb6:	f7ff fe9f 	bl	80109f8 <_ZN8touchgfx3HAL20getClientFrameBufferEv>
 8010cba:	463a      	mov	r2, r7
 8010cbc:	4631      	mov	r1, r6
 8010cbe:	4603      	mov	r3, r0
 8010cc0:	4620      	mov	r0, r4
 8010cc2:	f7ff ffc1 	bl	8010c48 <_ZNK8touchgfx3HAL13getDstAddressEttPt>
 8010cc6:	4b0e      	ldr	r3, [pc, #56]	; (8010d00 <_ZN8touchgfx3HAL13blitCopyGlyphEPKhtttttNS_9colortypeEhNS_14BlitOperationsEb+0x80>)
 8010cc8:	9005      	str	r0, [sp, #20]
 8010cca:	881b      	ldrh	r3, [r3, #0]
 8010ccc:	f8ad 301e 	strh.w	r3, [sp, #30]
 8010cd0:	f7f2 fe04 	bl	80038dc <_ZN8touchgfx3HAL3lcdEv>
 8010cd4:	6803      	ldr	r3, [r0, #0]
 8010cd6:	6adb      	ldr	r3, [r3, #44]	; 0x2c
 8010cd8:	4798      	blx	r3
 8010cda:	9b13      	ldr	r3, [sp, #76]	; 0x4c
 8010cdc:	f88d 0022 	strb.w	r0, [sp, #34]	; 0x22
 8010ce0:	f88d 0021 	strb.w	r0, [sp, #33]	; 0x21
 8010ce4:	9304      	str	r3, [sp, #16]
 8010ce6:	6860      	ldr	r0, [r4, #4]
 8010ce8:	f89d 3058 	ldrb.w	r3, [sp, #88]	; 0x58
 8010cec:	f88d 3023 	strb.w	r3, [sp, #35]	; 0x23
 8010cf0:	f88d 5024 	strb.w	r5, [sp, #36]	; 0x24
 8010cf4:	6803      	ldr	r3, [r0, #0]
 8010cf6:	a901      	add	r1, sp, #4
 8010cf8:	685b      	ldr	r3, [r3, #4]
 8010cfa:	4798      	blx	r3
 8010cfc:	b00b      	add	sp, #44	; 0x2c
 8010cfe:	bdf0      	pop	{r4, r5, r6, r7, pc}
 8010d00:	20012f1e 	.word	0x20012f1e

08010d04 <_ZN8touchgfx3HAL20copyFBRegionToMemoryENS_4RectE>:
 8010d04:	b5f0      	push	{r4, r5, r6, r7, lr}
 8010d06:	b08d      	sub	sp, #52	; 0x34
 8010d08:	466b      	mov	r3, sp
 8010d0a:	e883 0006 	stmia.w	r3, {r1, r2}
 8010d0e:	2300      	movs	r3, #0
 8010d10:	9306      	str	r3, [sp, #24]
 8010d12:	6803      	ldr	r3, [r0, #0]
 8010d14:	f8bd 6000 	ldrh.w	r6, [sp]
 8010d18:	6b1b      	ldr	r3, [r3, #48]	; 0x30
 8010d1a:	f8bd 7002 	ldrh.w	r7, [sp, #2]
 8010d1e:	2501      	movs	r5, #1
 8010d20:	9503      	str	r5, [sp, #12]
 8010d22:	4604      	mov	r4, r0
 8010d24:	4798      	blx	r3
 8010d26:	463a      	mov	r2, r7
 8010d28:	4631      	mov	r1, r6
 8010d2a:	4603      	mov	r3, r0
 8010d2c:	4620      	mov	r0, r4
 8010d2e:	f7ff ff8b 	bl	8010c48 <_ZNK8touchgfx3HAL13getDstAddressEttPt>
 8010d32:	6c63      	ldr	r3, [r4, #68]	; 0x44
 8010d34:	9307      	str	r3, [sp, #28]
 8010d36:	f8bd 3004 	ldrh.w	r3, [sp, #4]
 8010d3a:	f8ad 3020 	strh.w	r3, [sp, #32]
 8010d3e:	f8bd 3006 	ldrh.w	r3, [sp, #6]
 8010d42:	f8ad 3022 	strh.w	r3, [sp, #34]	; 0x22
 8010d46:	4b0f      	ldr	r3, [pc, #60]	; (8010d84 <_ZN8touchgfx3HAL20copyFBRegionToMemoryENS_4RectE+0x80>)
 8010d48:	9004      	str	r0, [sp, #16]
 8010d4a:	881b      	ldrh	r3, [r3, #0]
 8010d4c:	f8ad 3024 	strh.w	r3, [sp, #36]	; 0x24
 8010d50:	f8ad 3026 	strh.w	r3, [sp, #38]	; 0x26
 8010d54:	f7f2 fdc2 	bl	80038dc <_ZN8touchgfx3HAL3lcdEv>
 8010d58:	6803      	ldr	r3, [r0, #0]
 8010d5a:	6adb      	ldr	r3, [r3, #44]	; 0x2c
 8010d5c:	4798      	blx	r3
 8010d5e:	23ff      	movs	r3, #255	; 0xff
 8010d60:	f88d 0029 	strb.w	r0, [sp, #41]	; 0x29
 8010d64:	f88d 002a 	strb.w	r0, [sp, #42]	; 0x2a
 8010d68:	6860      	ldr	r0, [r4, #4]
 8010d6a:	f88d 3028 	strb.w	r3, [sp, #40]	; 0x28
 8010d6e:	f88d 502b 	strb.w	r5, [sp, #43]	; 0x2b
 8010d72:	f88d 502c 	strb.w	r5, [sp, #44]	; 0x2c
 8010d76:	6803      	ldr	r3, [r0, #0]
 8010d78:	a903      	add	r1, sp, #12
 8010d7a:	685b      	ldr	r3, [r3, #4]
 8010d7c:	4798      	blx	r3
 8010d7e:	6c60      	ldr	r0, [r4, #68]	; 0x44
 8010d80:	b00d      	add	sp, #52	; 0x34
 8010d82:	bdf0      	pop	{r4, r5, r6, r7, pc}
 8010d84:	20012f1e 	.word	0x20012f1e

08010d88 <_ZN8touchgfx3HAL20copyFBRegionToMemoryENS_4RectEPtm>:
 8010d88:	e92d 41f0 	stmdb	sp!, {r4, r5, r6, r7, r8, lr}
 8010d8c:	b08c      	sub	sp, #48	; 0x30
 8010d8e:	461e      	mov	r6, r3
 8010d90:	466d      	mov	r5, sp
 8010d92:	2300      	movs	r3, #0
 8010d94:	e885 0006 	stmia.w	r5, {r1, r2}
 8010d98:	9306      	str	r3, [sp, #24]
 8010d9a:	6803      	ldr	r3, [r0, #0]
 8010d9c:	f8bd 7000 	ldrh.w	r7, [sp]
 8010da0:	6b1b      	ldr	r3, [r3, #48]	; 0x30
 8010da2:	f8bd 8002 	ldrh.w	r8, [sp, #2]
 8010da6:	2501      	movs	r5, #1
 8010da8:	9503      	str	r5, [sp, #12]
 8010daa:	4604      	mov	r4, r0
 8010dac:	4798      	blx	r3
 8010dae:	4642      	mov	r2, r8
 8010db0:	4639      	mov	r1, r7
 8010db2:	4603      	mov	r3, r0
 8010db4:	4620      	mov	r0, r4
 8010db6:	f7ff ff47 	bl	8010c48 <_ZNK8touchgfx3HAL13getDstAddressEttPt>
 8010dba:	f8bd 3004 	ldrh.w	r3, [sp, #4]
 8010dbe:	f8ad 3020 	strh.w	r3, [sp, #32]
 8010dc2:	f8bd 3006 	ldrh.w	r3, [sp, #6]
 8010dc6:	f8ad 3022 	strh.w	r3, [sp, #34]	; 0x22
 8010dca:	4b11      	ldr	r3, [pc, #68]	; (8010e10 <_ZN8touchgfx3HAL20copyFBRegionToMemoryENS_4RectEPtm+0x88>)
 8010dcc:	9004      	str	r0, [sp, #16]
 8010dce:	881b      	ldrh	r3, [r3, #0]
 8010dd0:	f8ad 3024 	strh.w	r3, [sp, #36]	; 0x24
 8010dd4:	9b12      	ldr	r3, [sp, #72]	; 0x48
 8010dd6:	f8ad 3026 	strh.w	r3, [sp, #38]	; 0x26
 8010dda:	9607      	str	r6, [sp, #28]
 8010ddc:	f7f2 fd7e 	bl	80038dc <_ZN8touchgfx3HAL3lcdEv>
 8010de0:	6803      	ldr	r3, [r0, #0]
 8010de2:	6adb      	ldr	r3, [r3, #44]	; 0x2c
 8010de4:	4798      	blx	r3
 8010de6:	23ff      	movs	r3, #255	; 0xff
 8010de8:	f88d 0029 	strb.w	r0, [sp, #41]	; 0x29
 8010dec:	f88d 002a 	strb.w	r0, [sp, #42]	; 0x2a
 8010df0:	6860      	ldr	r0, [r4, #4]
 8010df2:	f88d 3028 	strb.w	r3, [sp, #40]	; 0x28
 8010df6:	f88d 502b 	strb.w	r5, [sp, #43]	; 0x2b
 8010dfa:	f88d 502c 	strb.w	r5, [sp, #44]	; 0x2c
 8010dfe:	6803      	ldr	r3, [r0, #0]
 8010e00:	a903      	add	r1, sp, #12
 8010e02:	685b      	ldr	r3, [r3, #4]
 8010e04:	4798      	blx	r3
 8010e06:	4630      	mov	r0, r6
 8010e08:	b00c      	add	sp, #48	; 0x30
 8010e0a:	e8bd 81f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, pc}
 8010e0e:	bf00      	nop
 8010e10:	20012f1e 	.word	0x20012f1e

08010e14 <_ZN8touchgfx3HAL25copyFromTFTToClientBufferENS_4RectE>:
 8010e14:	b5f0      	push	{r4, r5, r6, r7, lr}
 8010e16:	b085      	sub	sp, #20
 8010e18:	ac02      	add	r4, sp, #8
 8010e1a:	e884 0006 	stmia.w	r4, {r1, r2}
 8010e1e:	4605      	mov	r5, r0
 8010e20:	f8bd 6008 	ldrh.w	r6, [sp, #8]
 8010e24:	f8bd 700a 	ldrh.w	r7, [sp, #10]
 8010e28:	f7ff fde6 	bl	80109f8 <_ZN8touchgfx3HAL20getClientFrameBufferEv>
 8010e2c:	463a      	mov	r2, r7
 8010e2e:	4603      	mov	r3, r0
 8010e30:	4631      	mov	r1, r6
 8010e32:	4628      	mov	r0, r5
 8010e34:	f7ff ff08 	bl	8010c48 <_ZNK8touchgfx3HAL13getDstAddressEttPt>
 8010e38:	4a05      	ldr	r2, [pc, #20]	; (8010e50 <_ZN8touchgfx3HAL25copyFromTFTToClientBufferENS_4RectE+0x3c>)
 8010e3a:	682b      	ldr	r3, [r5, #0]
 8010e3c:	8812      	ldrh	r2, [r2, #0]
 8010e3e:	9200      	str	r2, [sp, #0]
 8010e40:	6ede      	ldr	r6, [r3, #108]	; 0x6c
 8010e42:	e894 0006 	ldmia.w	r4, {r1, r2}
 8010e46:	4603      	mov	r3, r0
 8010e48:	4628      	mov	r0, r5
 8010e4a:	47b0      	blx	r6
 8010e4c:	b005      	add	sp, #20
 8010e4e:	bdf0      	pop	{r4, r5, r6, r7, pc}
 8010e50:	20012f1e 	.word	0x20012f1e

08010e54 <_ZN8touchgfx3HAL16swapFrameBuffersEv>:
 8010e54:	b570      	push	{r4, r5, r6, lr}
 8010e56:	f890 306e 	ldrb.w	r3, [r0, #110]	; 0x6e
 8010e5a:	4604      	mov	r4, r0
 8010e5c:	b19b      	cbz	r3, 8010e86 <_ZN8touchgfx3HAL16swapFrameBuffersEv+0x32>
 8010e5e:	2002      	movs	r0, #2
 8010e60:	f7ef fd14 	bl	800088c <_ZN8touchgfx4GPIO6toggleENS0_7GPIO_IDE>
 8010e64:	2300      	movs	r3, #0
 8010e66:	f884 306e 	strb.w	r3, [r4, #110]	; 0x6e
 8010e6a:	f884 306d 	strb.w	r3, [r4, #109]	; 0x6d
 8010e6e:	6823      	ldr	r3, [r4, #0]
 8010e70:	4620      	mov	r0, r4
 8010e72:	f8d3 50b8 	ldr.w	r5, [r3, #184]	; 0xb8
 8010e76:	f7ff fdbf 	bl	80109f8 <_ZN8touchgfx3HAL20getClientFrameBufferEv>
 8010e7a:	462b      	mov	r3, r5
 8010e7c:	4601      	mov	r1, r0
 8010e7e:	4620      	mov	r0, r4
 8010e80:	e8bd 4070 	ldmia.w	sp!, {r4, r5, r6, lr}
 8010e84:	4718      	bx	r3
 8010e86:	bd70      	pop	{r4, r5, r6, pc}

08010e88 <_ZN8touchgfx3HAL18setRenderingMethodENS0_15RenderingMethodE>:
 8010e88:	b538      	push	{r3, r4, r5, lr}
 8010e8a:	f890 307b 	ldrb.w	r3, [r0, #123]	; 0x7b
 8010e8e:	428b      	cmp	r3, r1
 8010e90:	4604      	mov	r4, r0
 8010e92:	460d      	mov	r5, r1
 8010e94:	d006      	beq.n	8010ea4 <_ZN8touchgfx3HAL18setRenderingMethodENS0_15RenderingMethodE+0x1c>
 8010e96:	6803      	ldr	r3, [r0, #0]
 8010e98:	b929      	cbnz	r1, 8010ea6 <_ZN8touchgfx3HAL18setRenderingMethodENS0_15RenderingMethodE+0x1e>
 8010e9a:	f8d3 30c8 	ldr.w	r3, [r3, #200]	; 0xc8
 8010e9e:	4798      	blx	r3
 8010ea0:	f884 507b 	strb.w	r5, [r4, #123]	; 0x7b
 8010ea4:	bd38      	pop	{r3, r4, r5, pc}
 8010ea6:	f8d3 30cc 	ldr.w	r3, [r3, #204]	; 0xcc
 8010eaa:	e7f8      	b.n	8010e9e <_ZN8touchgfx3HAL18setRenderingMethodENS0_15RenderingMethodE+0x16>

08010eac <_ZN8touchgfx3HAL15lockFrameBufferEv>:
 8010eac:	b510      	push	{r4, lr}
 8010eae:	4b0d      	ldr	r3, [pc, #52]	; (8010ee4 <_ZN8touchgfx3HAL15lockFrameBufferEv+0x38>)
 8010eb0:	781b      	ldrb	r3, [r3, #0]
 8010eb2:	4604      	mov	r4, r0
 8010eb4:	b95b      	cbnz	r3, 8010ece <_ZN8touchgfx3HAL15lockFrameBufferEv+0x22>
 8010eb6:	f890 3048 	ldrb.w	r3, [r0, #72]	; 0x48
 8010eba:	2b02      	cmp	r3, #2
 8010ebc:	d007      	beq.n	8010ece <_ZN8touchgfx3HAL15lockFrameBufferEv+0x22>
 8010ebe:	6840      	ldr	r0, [r0, #4]
 8010ec0:	f000 f92c 	bl	801111c <_ZN8touchgfx13DMA_Interface15isDmaQueueEmptyEv>
 8010ec4:	b118      	cbz	r0, 8010ece <_ZN8touchgfx3HAL15lockFrameBufferEv+0x22>
 8010ec6:	6862      	ldr	r2, [r4, #4]
 8010ec8:	7a53      	ldrb	r3, [r2, #9]
 8010eca:	2b00      	cmp	r3, #0
 8010ecc:	d0fc      	beq.n	8010ec8 <_ZN8touchgfx3HAL15lockFrameBufferEv+0x1c>
 8010ece:	f7ef fe15 	bl	8000afc <_ZN8touchgfx10OSWrappers24takeFrameBufferSemaphoreEv>
 8010ed2:	4620      	mov	r0, r4
 8010ed4:	2100      	movs	r1, #0
 8010ed6:	f7ff ffd7 	bl	8010e88 <_ZN8touchgfx3HAL18setRenderingMethodENS0_15RenderingMethodE>
 8010eda:	4620      	mov	r0, r4
 8010edc:	f7ff fd8c 	bl	80109f8 <_ZN8touchgfx3HAL20getClientFrameBufferEv>
 8010ee0:	bd10      	pop	{r4, pc}
 8010ee2:	bf00      	nop
 8010ee4:	20012f22 	.word	0x20012f22

08010ee8 <_ZN8touchgfx3HAL33lockFrameBufferForRenderingMethodENS0_15RenderingMethodE>:
 8010ee8:	b570      	push	{r4, r5, r6, lr}
 8010eea:	4604      	mov	r4, r0
 8010eec:	6803      	ldr	r3, [r0, #0]
 8010eee:	b919      	cbnz	r1, 8010ef8 <_ZN8touchgfx3HAL33lockFrameBufferForRenderingMethodENS0_15RenderingMethodE+0x10>
 8010ef0:	6a9b      	ldr	r3, [r3, #40]	; 0x28
 8010ef2:	e8bd 4070 	ldmia.w	sp!, {r4, r5, r6, lr}
 8010ef6:	4718      	bx	r3
 8010ef8:	2200      	movs	r2, #0
 8010efa:	f890 607b 	ldrb.w	r6, [r0, #123]	; 0x7b
 8010efe:	f880 207b 	strb.w	r2, [r0, #123]	; 0x7b
 8010f02:	6a9b      	ldr	r3, [r3, #40]	; 0x28
 8010f04:	4798      	blx	r3
 8010f06:	6863      	ldr	r3, [r4, #4]
 8010f08:	2101      	movs	r1, #1
 8010f0a:	4605      	mov	r5, r0
 8010f0c:	7299      	strb	r1, [r3, #10]
 8010f0e:	4620      	mov	r0, r4
 8010f10:	f884 607b 	strb.w	r6, [r4, #123]	; 0x7b
 8010f14:	f7ff ffb8 	bl	8010e88 <_ZN8touchgfx3HAL18setRenderingMethodENS0_15RenderingMethodE>
 8010f18:	4628      	mov	r0, r5
 8010f1a:	bd70      	pop	{r4, r5, r6, pc}

08010f1c <_ZN8touchgfx17LockFreeDMA_Queue7isEmptyEv>:
 8010f1c:	e9d0 2003 	ldrd	r2, r0, [r0, #12]
 8010f20:	1a13      	subs	r3, r2, r0
 8010f22:	4258      	negs	r0, r3
 8010f24:	4158      	adcs	r0, r3
 8010f26:	4770      	bx	lr

08010f28 <_ZN8touchgfx17LockFreeDMA_Queue6isFullEv>:
 8010f28:	e9d0 2303 	ldrd	r2, r3, [r0, #12]
 8010f2c:	1a9b      	subs	r3, r3, r2
 8010f2e:	2b00      	cmp	r3, #0
 8010f30:	bfdc      	itt	le
 8010f32:	6882      	ldrle	r2, [r0, #8]
 8010f34:	189b      	addle	r3, r3, r2
 8010f36:	2b01      	cmp	r3, #1
 8010f38:	bfcc      	ite	gt
 8010f3a:	2000      	movgt	r0, #0
 8010f3c:	2001      	movle	r0, #1
 8010f3e:	4770      	bx	lr

08010f40 <_ZN8touchgfx17LockFreeDMA_Queue5firstEv>:
 8010f40:	6902      	ldr	r2, [r0, #16]
 8010f42:	6843      	ldr	r3, [r0, #4]
 8010f44:	2024      	movs	r0, #36	; 0x24
 8010f46:	fb00 3002 	mla	r0, r0, r2, r3
 8010f4a:	4770      	bx	lr

08010f4c <_ZN8touchgfx13DMA_Interface13seedExecutionEv>:
 8010f4c:	6803      	ldr	r3, [r0, #0]
 8010f4e:	691b      	ldr	r3, [r3, #16]
 8010f50:	4718      	bx	r3

08010f52 <_ZN8touchgfx13DMA_Interface7executeEv>:
 8010f52:	b570      	push	{r4, r5, r6, lr}
 8010f54:	2301      	movs	r3, #1
 8010f56:	7203      	strb	r3, [r0, #8]
 8010f58:	4604      	mov	r4, r0
 8010f5a:	6840      	ldr	r0, [r0, #4]
 8010f5c:	6803      	ldr	r3, [r0, #0]
 8010f5e:	699b      	ldr	r3, [r3, #24]
 8010f60:	4798      	blx	r3
 8010f62:	6803      	ldr	r3, [r0, #0]
 8010f64:	2b40      	cmp	r3, #64	; 0x40
 8010f66:	4605      	mov	r5, r0
 8010f68:	d00c      	beq.n	8010f84 <_ZN8touchgfx13DMA_Interface7executeEv+0x32>
 8010f6a:	d810      	bhi.n	8010f8e <_ZN8touchgfx13DMA_Interface7executeEv+0x3c>
 8010f6c:	2b04      	cmp	r3, #4
 8010f6e:	d01d      	beq.n	8010fac <_ZN8touchgfx13DMA_Interface7executeEv+0x5a>
 8010f70:	d804      	bhi.n	8010f7c <_ZN8touchgfx13DMA_Interface7executeEv+0x2a>
 8010f72:	2b01      	cmp	r3, #1
 8010f74:	d006      	beq.n	8010f84 <_ZN8touchgfx13DMA_Interface7executeEv+0x32>
 8010f76:	2b02      	cmp	r3, #2
 8010f78:	d02c      	beq.n	8010fd4 <_ZN8touchgfx13DMA_Interface7executeEv+0x82>
 8010f7a:	bd70      	pop	{r4, r5, r6, pc}
 8010f7c:	2b08      	cmp	r3, #8
 8010f7e:	d01d      	beq.n	8010fbc <_ZN8touchgfx13DMA_Interface7executeEv+0x6a>
 8010f80:	2b20      	cmp	r3, #32
 8010f82:	d1fa      	bne.n	8010f7a <_ZN8touchgfx13DMA_Interface7executeEv+0x28>
 8010f84:	6823      	ldr	r3, [r4, #0]
 8010f86:	4620      	mov	r0, r4
 8010f88:	6bdb      	ldr	r3, [r3, #60]	; 0x3c
 8010f8a:	4798      	blx	r3
 8010f8c:	e013      	b.n	8010fb6 <_ZN8touchgfx13DMA_Interface7executeEv+0x64>
 8010f8e:	f5b3 7f00 	cmp.w	r3, #512	; 0x200
 8010f92:	d0f7      	beq.n	8010f84 <_ZN8touchgfx13DMA_Interface7executeEv+0x32>
 8010f94:	d804      	bhi.n	8010fa0 <_ZN8touchgfx13DMA_Interface7executeEv+0x4e>
 8010f96:	2b80      	cmp	r3, #128	; 0x80
 8010f98:	d0f4      	beq.n	8010f84 <_ZN8touchgfx13DMA_Interface7executeEv+0x32>
 8010f9a:	f5b3 7f80 	cmp.w	r3, #256	; 0x100
 8010f9e:	e7f0      	b.n	8010f82 <_ZN8touchgfx13DMA_Interface7executeEv+0x30>
 8010fa0:	f5b3 6f80 	cmp.w	r3, #1024	; 0x400
 8010fa4:	d0ee      	beq.n	8010f84 <_ZN8touchgfx13DMA_Interface7executeEv+0x32>
 8010fa6:	f5b3 6f00 	cmp.w	r3, #2048	; 0x800
 8010faa:	e7e5      	b.n	8010f78 <_ZN8touchgfx13DMA_Interface7executeEv+0x26>
 8010fac:	6823      	ldr	r3, [r4, #0]
 8010fae:	7f01      	ldrb	r1, [r0, #28]
 8010fb0:	6b9b      	ldr	r3, [r3, #56]	; 0x38
 8010fb2:	4620      	mov	r0, r4
 8010fb4:	4798      	blx	r3
 8010fb6:	6823      	ldr	r3, [r4, #0]
 8010fb8:	6b1b      	ldr	r3, [r3, #48]	; 0x30
 8010fba:	e006      	b.n	8010fca <_ZN8touchgfx13DMA_Interface7executeEv+0x78>
 8010fbc:	6823      	ldr	r3, [r4, #0]
 8010fbe:	7f01      	ldrb	r1, [r0, #28]
 8010fc0:	6b9b      	ldr	r3, [r3, #56]	; 0x38
 8010fc2:	4620      	mov	r0, r4
 8010fc4:	4798      	blx	r3
 8010fc6:	6823      	ldr	r3, [r4, #0]
 8010fc8:	6b5b      	ldr	r3, [r3, #52]	; 0x34
 8010fca:	4629      	mov	r1, r5
 8010fcc:	4620      	mov	r0, r4
 8010fce:	e8bd 4070 	ldmia.w	sp!, {r4, r5, r6, lr}
 8010fd2:	4718      	bx	r3
 8010fd4:	6823      	ldr	r3, [r4, #0]
 8010fd6:	4620      	mov	r0, r4
 8010fd8:	6bdb      	ldr	r3, [r3, #60]	; 0x3c
 8010fda:	4798      	blx	r3
 8010fdc:	e7f3      	b.n	8010fc6 <_ZN8touchgfx13DMA_Interface7executeEv+0x74>

08010fde <_ZN8touchgfx13DMA_Interface11enableAlphaEh>:
 8010fde:	4770      	bx	lr

08010fe0 <_ZN8touchgfx13DMA_Interface12disableAlphaEv>:
 8010fe0:	4770      	bx	lr

08010fe2 <_ZN8touchgfx17LockFreeDMA_QueueD1Ev>:
 8010fe2:	4770      	bx	lr

08010fe4 <_ZN8touchgfx17LockFreeDMA_Queue10pushCopyOfERKNS_6BlitOpE>:
 8010fe4:	e9d0 3203 	ldrd	r3, r2, [r0, #12]
 8010fe8:	1ad2      	subs	r2, r2, r3
 8010fea:	2a00      	cmp	r2, #0
 8010fec:	b510      	push	{r4, lr}
 8010fee:	bfdc      	itt	le
 8010ff0:	6884      	ldrle	r4, [r0, #8]
 8010ff2:	1912      	addle	r2, r2, r4
 8010ff4:	2a01      	cmp	r2, #1
 8010ff6:	dd16      	ble.n	8011026 <_ZN8touchgfx17LockFreeDMA_Queue10pushCopyOfERKNS_6BlitOpE+0x42>
 8010ff8:	6842      	ldr	r2, [r0, #4]
 8010ffa:	2424      	movs	r4, #36	; 0x24
 8010ffc:	fb04 2303 	mla	r3, r4, r3, r2
 8011000:	f101 0220 	add.w	r2, r1, #32
 8011004:	f851 4b04 	ldr.w	r4, [r1], #4
 8011008:	f843 4b04 	str.w	r4, [r3], #4
 801100c:	4291      	cmp	r1, r2
 801100e:	d1f9      	bne.n	8011004 <_ZN8touchgfx17LockFreeDMA_Queue10pushCopyOfERKNS_6BlitOpE+0x20>
 8011010:	780a      	ldrb	r2, [r1, #0]
 8011012:	701a      	strb	r2, [r3, #0]
 8011014:	68c3      	ldr	r3, [r0, #12]
 8011016:	6882      	ldr	r2, [r0, #8]
 8011018:	f3bf 8f5b 	dmb	ish
 801101c:	3301      	adds	r3, #1
 801101e:	429a      	cmp	r2, r3
 8011020:	bfd8      	it	le
 8011022:	1a9b      	suble	r3, r3, r2
 8011024:	60c3      	str	r3, [r0, #12]
 8011026:	bd10      	pop	{r4, pc}

08011028 <_ZN8touchgfx17LockFreeDMA_Queue3popEv>:
 8011028:	6903      	ldr	r3, [r0, #16]
 801102a:	6882      	ldr	r2, [r0, #8]
 801102c:	f3bf 8f5b 	dmb	ish
 8011030:	3301      	adds	r3, #1
 8011032:	429a      	cmp	r2, r3
 8011034:	bfd8      	it	le
 8011036:	1a9b      	suble	r3, r3, r2
 8011038:	6103      	str	r3, [r0, #16]
 801103a:	4770      	bx	lr

0801103c <_ZN8touchgfx13DMA_Interface10addToQueueERKNS_6BlitOpE>:
 801103c:	b570      	push	{r4, r5, r6, lr}
 801103e:	4604      	mov	r4, r0
 8011040:	460e      	mov	r6, r1
 8011042:	6860      	ldr	r0, [r4, #4]
 8011044:	6803      	ldr	r3, [r0, #0]
 8011046:	685b      	ldr	r3, [r3, #4]
 8011048:	4798      	blx	r3
 801104a:	2800      	cmp	r0, #0
 801104c:	d1f9      	bne.n	8011042 <_ZN8touchgfx13DMA_Interface10addToQueueERKNS_6BlitOpE+0x6>
 801104e:	4d0d      	ldr	r5, [pc, #52]	; (8011084 <_ZN8touchgfx13DMA_Interface10addToQueueERKNS_6BlitOpE+0x48>)
 8011050:	6828      	ldr	r0, [r5, #0]
 8011052:	6803      	ldr	r3, [r0, #0]
 8011054:	6fdb      	ldr	r3, [r3, #124]	; 0x7c
 8011056:	4798      	blx	r3
 8011058:	f7ef fd5e 	bl	8000b18 <_ZN8touchgfx10OSWrappers27tryTakeFrameBufferSemaphoreEv>
 801105c:	6828      	ldr	r0, [r5, #0]
 801105e:	2101      	movs	r1, #1
 8011060:	f7ff ff12 	bl	8010e88 <_ZN8touchgfx3HAL18setRenderingMethodENS0_15RenderingMethodE>
 8011064:	6860      	ldr	r0, [r4, #4]
 8011066:	6803      	ldr	r3, [r0, #0]
 8011068:	4631      	mov	r1, r6
 801106a:	689b      	ldr	r3, [r3, #8]
 801106c:	4798      	blx	r3
 801106e:	6823      	ldr	r3, [r4, #0]
 8011070:	4620      	mov	r0, r4
 8011072:	6adb      	ldr	r3, [r3, #44]	; 0x2c
 8011074:	4798      	blx	r3
 8011076:	6828      	ldr	r0, [r5, #0]
 8011078:	6803      	ldr	r3, [r0, #0]
 801107a:	e8bd 4070 	ldmia.w	sp!, {r4, r5, r6, lr}
 801107e:	6f9b      	ldr	r3, [r3, #120]	; 0x78
 8011080:	4718      	bx	r3
 8011082:	bf00      	nop
 8011084:	20012f24 	.word	0x20012f24

08011088 <_ZN8touchgfx13DMA_Interface27waitForFrameBufferSemaphoreEv>:
 8011088:	b508      	push	{r3, lr}
 801108a:	f7ef fd37 	bl	8000afc <_ZN8touchgfx10OSWrappers24takeFrameBufferSemaphoreEv>
 801108e:	e8bd 4008 	ldmia.w	sp!, {r3, lr}
 8011092:	f7ef bd3b 	b.w	8000b0c <_ZN8touchgfx10OSWrappers24giveFrameBufferSemaphoreEv>

08011096 <_ZN8touchgfx17LockFreeDMA_QueueD0Ev>:
 8011096:	b510      	push	{r4, lr}
 8011098:	2114      	movs	r1, #20
 801109a:	4604      	mov	r4, r0
 801109c:	f018 f9bf 	bl	802941e <_ZdlPvj>
 80110a0:	4620      	mov	r0, r4
 80110a2:	bd10      	pop	{r4, pc}

080110a4 <_ZN8touchgfx13DMA_Interface5startEv>:
 80110a4:	b510      	push	{r4, lr}
 80110a6:	4604      	mov	r4, r0
 80110a8:	6840      	ldr	r0, [r0, #4]
 80110aa:	6803      	ldr	r3, [r0, #0]
 80110ac:	681b      	ldr	r3, [r3, #0]
 80110ae:	4798      	blx	r3
 80110b0:	b948      	cbnz	r0, 80110c6 <_ZN8touchgfx13DMA_Interface5startEv+0x22>
 80110b2:	7a63      	ldrb	r3, [r4, #9]
 80110b4:	b13b      	cbz	r3, 80110c6 <_ZN8touchgfx13DMA_Interface5startEv+0x22>
 80110b6:	7a23      	ldrb	r3, [r4, #8]
 80110b8:	b92b      	cbnz	r3, 80110c6 <_ZN8touchgfx13DMA_Interface5startEv+0x22>
 80110ba:	6823      	ldr	r3, [r4, #0]
 80110bc:	4620      	mov	r0, r4
 80110be:	6a5b      	ldr	r3, [r3, #36]	; 0x24
 80110c0:	e8bd 4010 	ldmia.w	sp!, {r4, lr}
 80110c4:	4718      	bx	r3
 80110c6:	bd10      	pop	{r4, pc}

080110c8 <_ZN8touchgfx13DMA_Interface16executeCompletedEv>:
 80110c8:	b570      	push	{r4, r5, r6, lr}
 80110ca:	4604      	mov	r4, r0
 80110cc:	6840      	ldr	r0, [r0, #4]
 80110ce:	6803      	ldr	r3, [r0, #0]
 80110d0:	681b      	ldr	r3, [r3, #0]
 80110d2:	4798      	blx	r3
 80110d4:	4605      	mov	r5, r0
 80110d6:	b930      	cbnz	r0, 80110e6 <_ZN8touchgfx13DMA_Interface16executeCompletedEv+0x1e>
 80110d8:	7a23      	ldrb	r3, [r4, #8]
 80110da:	b123      	cbz	r3, 80110e6 <_ZN8touchgfx13DMA_Interface16executeCompletedEv+0x1e>
 80110dc:	6860      	ldr	r0, [r4, #4]
 80110de:	6803      	ldr	r3, [r0, #0]
 80110e0:	695b      	ldr	r3, [r3, #20]
 80110e2:	4798      	blx	r3
 80110e4:	7225      	strb	r5, [r4, #8]
 80110e6:	6860      	ldr	r0, [r4, #4]
 80110e8:	6803      	ldr	r3, [r0, #0]
 80110ea:	681b      	ldr	r3, [r3, #0]
 80110ec:	4798      	blx	r3
 80110ee:	b928      	cbnz	r0, 80110fc <_ZN8touchgfx13DMA_Interface16executeCompletedEv+0x34>
 80110f0:	6823      	ldr	r3, [r4, #0]
 80110f2:	4620      	mov	r0, r4
 80110f4:	6a5b      	ldr	r3, [r3, #36]	; 0x24
 80110f6:	e8bd 4070 	ldmia.w	sp!, {r4, r5, r6, lr}
 80110fa:	4718      	bx	r3
 80110fc:	e8bd 4070 	ldmia.w	sp!, {r4, r5, r6, lr}
 8011100:	f7ef bd12 	b.w	8000b28 <_ZN8touchgfx10OSWrappers31giveFrameBufferSemaphoreFromISREv>

08011104 <_ZN8touchgfx17LockFreeDMA_QueueC1EPNS_6BlitOpEi>:
 8011104:	b510      	push	{r4, lr}
 8011106:	4c04      	ldr	r4, [pc, #16]	; (8011118 <_ZN8touchgfx17LockFreeDMA_QueueC1EPNS_6BlitOpEi+0x14>)
 8011108:	6082      	str	r2, [r0, #8]
 801110a:	2200      	movs	r2, #0
 801110c:	e9c0 4100 	strd	r4, r1, [r0]
 8011110:	e9c0 2203 	strd	r2, r2, [r0, #12]
 8011114:	bd10      	pop	{r4, pc}
 8011116:	bf00      	nop
 8011118:	0802e250 	.word	0x0802e250

0801111c <_ZN8touchgfx13DMA_Interface15isDmaQueueEmptyEv>:
 801111c:	6840      	ldr	r0, [r0, #4]
 801111e:	6803      	ldr	r3, [r0, #0]
 8011120:	681b      	ldr	r3, [r3, #0]
 8011122:	4718      	bx	r3

08011124 <_ZN8touchgfx13PainterRGB5658setColorENS_9colortypeE>:
 8011124:	4b06      	ldr	r3, [pc, #24]	; (8011140 <_ZN8touchgfx13PainterRGB5658setColorENS_9colortypeE+0x1c>)
 8011126:	60c1      	str	r1, [r0, #12]
 8011128:	094a      	lsrs	r2, r1, #5
 801112a:	ea03 2311 	and.w	r3, r3, r1, lsr #8
 801112e:	f402 62fc 	and.w	r2, r2, #2016	; 0x7e0
 8011132:	4313      	orrs	r3, r2
 8011134:	f3c1 01c4 	ubfx	r1, r1, #3, #5
 8011138:	4319      	orrs	r1, r3
 801113a:	8201      	strh	r1, [r0, #16]
 801113c:	4770      	bx	lr
 801113e:	bf00      	nop
 8011140:	fffff800 	.word	0xfffff800

08011144 <_ZThn8_N8touchgfx13PainterRGB5658setColorENS_9colortypeE>:
 8011144:	f1a0 0008 	sub.w	r0, r0, #8
 8011148:	e7ec      	b.n	8011124 <_ZN8touchgfx13PainterRGB5658setColorENS_9colortypeE>
 801114a:	bf00      	nop

0801114c <_ZNK8touchgfx13PainterRGB56518getRenderingMethodEv>:
 801114c:	b508      	push	{r3, lr}
 801114e:	4b05      	ldr	r3, [pc, #20]	; (8011164 <_ZNK8touchgfx13PainterRGB56518getRenderingMethodEv+0x18>)
 8011150:	6818      	ldr	r0, [r3, #0]
 8011152:	6803      	ldr	r3, [r0, #0]
 8011154:	f8d3 30a0 	ldr.w	r3, [r3, #160]	; 0xa0
 8011158:	4798      	blx	r3
 801115a:	1e43      	subs	r3, r0, #1
 801115c:	4258      	negs	r0, r3
 801115e:	4158      	adcs	r0, r3
 8011160:	bd08      	pop	{r3, pc}
 8011162:	bf00      	nop
 8011164:	20012f24 	.word	0x20012f24

08011168 <_ZN8touchgfx13PainterRGB565D1Ev>:
 8011168:	4770      	bx	lr

0801116a <_ZThn8_N8touchgfx13PainterRGB565D1Ev>:
 801116a:	3808      	subs	r0, #8
 801116c:	4770      	bx	lr

0801116e <_ZNK8touchgfx13PainterRGB5655paintEPhssssh>:
 801116e:	b430      	push	{r4, r5}
 8011170:	eb01 0442 	add.w	r4, r1, r2, lsl #1
 8011174:	f9bd 500c 	ldrsh.w	r5, [sp, #12]
 8011178:	8a02      	ldrh	r2, [r0, #16]
 801117a:	9202      	str	r2, [sp, #8]
 801117c:	f89d 3010 	ldrb.w	r3, [sp, #16]
 8011180:	68c2      	ldr	r2, [r0, #12]
 8011182:	4629      	mov	r1, r5
 8011184:	4620      	mov	r0, r4
 8011186:	bc30      	pop	{r4, r5}
 8011188:	f7ef bf92 	b.w	80010b0 <_ZN8touchgfx5paint6rgb56513lineFromColorEPtjmhm>

0801118c <_ZNK8touchgfx13PainterRGB5658tearDownEv>:
 801118c:	f7ef bf8e 	b.w	80010ac <_ZN8touchgfx5paint8tearDownEv>

08011190 <_ZN8touchgfx13PainterRGB565D0Ev>:
 8011190:	b510      	push	{r4, lr}
 8011192:	2114      	movs	r1, #20
 8011194:	4604      	mov	r4, r0
 8011196:	f018 f942 	bl	802941e <_ZdlPvj>
 801119a:	4620      	mov	r0, r4
 801119c:	bd10      	pop	{r4, pc}

0801119e <_ZThn8_N8touchgfx13PainterRGB565D0Ev>:
 801119e:	f1a0 0008 	sub.w	r0, r0, #8
 80111a2:	e7f5      	b.n	8011190 <_ZN8touchgfx13PainterRGB565D0Ev>

080111a4 <_ZNK8touchgfx12CanvasWidget4drawERKNS_4RectE>:
 80111a4:	b57f      	push	{r0, r1, r2, r3, r4, r5, r6, lr}
 80111a6:	6803      	ldr	r3, [r0, #0]
 80111a8:	460d      	mov	r5, r1
 80111aa:	4604      	mov	r4, r0
 80111ac:	4601      	mov	r1, r0
 80111ae:	6e9b      	ldr	r3, [r3, #104]	; 0x68
 80111b0:	a802      	add	r0, sp, #8
 80111b2:	4798      	blx	r3
 80111b4:	6828      	ldr	r0, [r5, #0]
 80111b6:	6869      	ldr	r1, [r5, #4]
 80111b8:	466b      	mov	r3, sp
 80111ba:	c303      	stmia	r3!, {r0, r1}
 80111bc:	4668      	mov	r0, sp
 80111be:	4619      	mov	r1, r3
 80111c0:	f7fe ffa4 	bl	801010c <_ZN8touchgfx4RectaNERKS0_>
 80111c4:	6aa0      	ldr	r0, [r4, #40]	; 0x28
 80111c6:	b188      	cbz	r0, 80111ec <_ZNK8touchgfx12CanvasWidget4drawERKNS_4RectE+0x48>
 80111c8:	6803      	ldr	r3, [r0, #0]
 80111ca:	1d21      	adds	r1, r4, #4
 80111cc:	68db      	ldr	r3, [r3, #12]
 80111ce:	4798      	blx	r3
 80111d0:	b160      	cbz	r0, 80111ec <_ZNK8touchgfx12CanvasWidget4drawERKNS_4RectE+0x48>
 80111d2:	f9bd 3004 	ldrsh.w	r3, [sp, #4]
 80111d6:	2b00      	cmp	r3, #0
 80111d8:	dd08      	ble.n	80111ec <_ZNK8touchgfx12CanvasWidget4drawERKNS_4RectE+0x48>
 80111da:	f9bd 5006 	ldrsh.w	r5, [sp, #6]
 80111de:	2d00      	cmp	r5, #0
 80111e0:	dd04      	ble.n	80111ec <_ZNK8touchgfx12CanvasWidget4drawERKNS_4RectE+0x48>
 80111e2:	4a2b      	ldr	r2, [pc, #172]	; (8011290 <_ZNK8touchgfx12CanvasWidget4drawERKNS_4RectE+0xec>)
 80111e4:	7812      	ldrb	r2, [r2, #0]
 80111e6:	b11a      	cbz	r2, 80111f0 <_ZNK8touchgfx12CanvasWidget4drawERKNS_4RectE+0x4c>
 80111e8:	2a01      	cmp	r2, #1
 80111ea:	d029      	beq.n	8011240 <_ZNK8touchgfx12CanvasWidget4drawERKNS_4RectE+0x9c>
 80111ec:	b004      	add	sp, #16
 80111ee:	bd70      	pop	{r4, r5, r6, pc}
 80111f0:	f8bd 3002 	ldrh.w	r3, [sp, #2]
 80111f4:	441d      	add	r5, r3
 80111f6:	b2ad      	uxth	r5, r5
 80111f8:	b22e      	sxth	r6, r5
 80111fa:	f9bd 3002 	ldrsh.w	r3, [sp, #2]
 80111fe:	42b3      	cmp	r3, r6
 8011200:	daf4      	bge.n	80111ec <_ZNK8touchgfx12CanvasWidget4drawERKNS_4RectE+0x48>
 8011202:	6823      	ldr	r3, [r4, #0]
 8011204:	4669      	mov	r1, sp
 8011206:	6edb      	ldr	r3, [r3, #108]	; 0x6c
 8011208:	4620      	mov	r0, r4
 801120a:	4798      	blx	r3
 801120c:	b940      	cbnz	r0, 8011220 <_ZNK8touchgfx12CanvasWidget4drawERKNS_4RectE+0x7c>
 801120e:	f9bd 3006 	ldrsh.w	r3, [sp, #6]
 8011212:	2b01      	cmp	r3, #1
 8011214:	d004      	beq.n	8011220 <_ZNK8touchgfx12CanvasWidget4drawERKNS_4RectE+0x7c>
 8011216:	3301      	adds	r3, #1
 8011218:	105b      	asrs	r3, r3, #1
 801121a:	f8ad 3006 	strh.w	r3, [sp, #6]
 801121e:	e7f0      	b.n	8011202 <_ZNK8touchgfx12CanvasWidget4drawERKNS_4RectE+0x5e>
 8011220:	f8bd 2006 	ldrh.w	r2, [sp, #6]
 8011224:	f8bd 3002 	ldrh.w	r3, [sp, #2]
 8011228:	4413      	add	r3, r2
 801122a:	b29b      	uxth	r3, r3
 801122c:	441a      	add	r2, r3
 801122e:	b212      	sxth	r2, r2
 8011230:	4296      	cmp	r6, r2
 8011232:	f8ad 3002 	strh.w	r3, [sp, #2]
 8011236:	dae0      	bge.n	80111fa <_ZNK8touchgfx12CanvasWidget4drawERKNS_4RectE+0x56>
 8011238:	1aeb      	subs	r3, r5, r3
 801123a:	f8ad 3006 	strh.w	r3, [sp, #6]
 801123e:	e7dc      	b.n	80111fa <_ZNK8touchgfx12CanvasWidget4drawERKNS_4RectE+0x56>
 8011240:	f8bd 5000 	ldrh.w	r5, [sp]
 8011244:	441d      	add	r5, r3
 8011246:	b2ad      	uxth	r5, r5
 8011248:	b22e      	sxth	r6, r5
 801124a:	f9bd 3000 	ldrsh.w	r3, [sp]
 801124e:	42b3      	cmp	r3, r6
 8011250:	dacc      	bge.n	80111ec <_ZNK8touchgfx12CanvasWidget4drawERKNS_4RectE+0x48>
 8011252:	6823      	ldr	r3, [r4, #0]
 8011254:	4669      	mov	r1, sp
 8011256:	6edb      	ldr	r3, [r3, #108]	; 0x6c
 8011258:	4620      	mov	r0, r4
 801125a:	4798      	blx	r3
 801125c:	b940      	cbnz	r0, 8011270 <_ZNK8touchgfx12CanvasWidget4drawERKNS_4RectE+0xcc>
 801125e:	f9bd 3004 	ldrsh.w	r3, [sp, #4]
 8011262:	2b01      	cmp	r3, #1
 8011264:	d004      	beq.n	8011270 <_ZNK8touchgfx12CanvasWidget4drawERKNS_4RectE+0xcc>
 8011266:	3301      	adds	r3, #1
 8011268:	105b      	asrs	r3, r3, #1
 801126a:	f8ad 3004 	strh.w	r3, [sp, #4]
 801126e:	e7f0      	b.n	8011252 <_ZNK8touchgfx12CanvasWidget4drawERKNS_4RectE+0xae>
 8011270:	f8bd 2004 	ldrh.w	r2, [sp, #4]
 8011274:	f8bd 3000 	ldrh.w	r3, [sp]
 8011278:	4413      	add	r3, r2
 801127a:	b29b      	uxth	r3, r3
 801127c:	441a      	add	r2, r3
 801127e:	b212      	sxth	r2, r2
 8011280:	4296      	cmp	r6, r2
 8011282:	f8ad 3000 	strh.w	r3, [sp]
 8011286:	dae0      	bge.n	801124a <_ZNK8touchgfx12CanvasWidget4drawERKNS_4RectE+0xa6>
 8011288:	1aeb      	subs	r3, r5, r3
 801128a:	f8ad 3004 	strh.w	r3, [sp, #4]
 801128e:	e7dc      	b.n	801124a <_ZNK8touchgfx12CanvasWidget4drawERKNS_4RectE+0xa6>
 8011290:	20012f1c 	.word	0x20012f1c

08011294 <_ZNK8touchgfx12CanvasWidget10invalidateEv>:
 8011294:	b51f      	push	{r0, r1, r2, r3, r4, lr}
 8011296:	6803      	ldr	r3, [r0, #0]
 8011298:	4604      	mov	r4, r0
 801129a:	4601      	mov	r1, r0
 801129c:	6e9b      	ldr	r3, [r3, #104]	; 0x68
 801129e:	4668      	mov	r0, sp
 80112a0:	4798      	blx	r3
 80112a2:	2100      	movs	r1, #0
 80112a4:	f9b4 2008 	ldrsh.w	r2, [r4, #8]
 80112a8:	f9b4 300a 	ldrsh.w	r3, [r4, #10]
 80112ac:	9102      	str	r1, [sp, #8]
 80112ae:	4668      	mov	r0, sp
 80112b0:	a902      	add	r1, sp, #8
 80112b2:	f8ad 200c 	strh.w	r2, [sp, #12]
 80112b6:	f8ad 300e 	strh.w	r3, [sp, #14]
 80112ba:	f7fe ff27 	bl	801010c <_ZN8touchgfx4RectaNERKS0_>
 80112be:	6823      	ldr	r3, [r4, #0]
 80112c0:	4669      	mov	r1, sp
 80112c2:	691b      	ldr	r3, [r3, #16]
 80112c4:	4620      	mov	r0, r4
 80112c6:	4798      	blx	r3
 80112c8:	b004      	add	sp, #16
 80112ca:	bd10      	pop	{r4, pc}

080112cc <_ZN8touchgfx12CanvasWidgetC1Ev>:
 80112cc:	2101      	movs	r1, #1
 80112ce:	f880 1025 	strb.w	r1, [r0, #37]	; 0x25
 80112d2:	490b      	ldr	r1, [pc, #44]	; (8011300 <_ZN8touchgfx12CanvasWidgetC1Ev+0x34>)
 80112d4:	6001      	str	r1, [r0, #0]
 80112d6:	2200      	movs	r2, #0
 80112d8:	21ff      	movs	r1, #255	; 0xff
 80112da:	8082      	strh	r2, [r0, #4]
 80112dc:	80c2      	strh	r2, [r0, #6]
 80112de:	8102      	strh	r2, [r0, #8]
 80112e0:	8142      	strh	r2, [r0, #10]
 80112e2:	8182      	strh	r2, [r0, #12]
 80112e4:	81c2      	strh	r2, [r0, #14]
 80112e6:	8202      	strh	r2, [r0, #16]
 80112e8:	8242      	strh	r2, [r0, #18]
 80112ea:	e9c0 2205 	strd	r2, r2, [r0, #20]
 80112ee:	61c2      	str	r2, [r0, #28]
 80112f0:	8402      	strh	r2, [r0, #32]
 80112f2:	8442      	strh	r2, [r0, #34]	; 0x22
 80112f4:	f880 2024 	strb.w	r2, [r0, #36]	; 0x24
 80112f8:	f880 1026 	strb.w	r1, [r0, #38]	; 0x26
 80112fc:	6282      	str	r2, [r0, #40]	; 0x28
 80112fe:	4770      	bx	lr
 8011300:	0802e2ac 	.word	0x0802e2ac

08011304 <_ZNK8touchgfx4Line14getMinimalRectEv>:
 8011304:	f101 0364 	add.w	r3, r1, #100	; 0x64
 8011308:	4602      	mov	r2, r0
 801130a:	cb03      	ldmia	r3!, {r0, r1}
 801130c:	6010      	str	r0, [r2, #0]
 801130e:	6051      	str	r1, [r2, #4]
 8011310:	4610      	mov	r0, r2
 8011312:	4770      	bx	lr

08011314 <_ZN8touchgfx4LineD1Ev>:
 8011314:	4770      	bx	lr

08011316 <_ZN8touchgfx4LineD0Ev>:
 8011316:	b510      	push	{r4, lr}
 8011318:	2170      	movs	r1, #112	; 0x70
 801131a:	4604      	mov	r4, r0
 801131c:	f018 f87f 	bl	802941e <_ZdlPvj>
 8011320:	4620      	mov	r0, r4
 8011322:	bd10      	pop	{r4, pc}

08011324 <_ZNK8touchgfx7CWRUtil2Q5mlERKNS0_3Q15E>:
 8011324:	b507      	push	{r0, r1, r2, lr}
 8011326:	f44f 4200 	mov.w	r2, #32768	; 0x8000
 801132a:	ab01      	add	r3, sp, #4
 801132c:	6809      	ldr	r1, [r1, #0]
 801132e:	6800      	ldr	r0, [r0, #0]
 8011330:	f005 fab4 	bl	801689c <_ZN8touchgfx6muldivElllRl>
 8011334:	b003      	add	sp, #12
 8011336:	f85d fb04 	ldr.w	pc, [sp], #4

0801133a <_ZNK8touchgfx7CWRUtil2Q54ceilEv>:
 801133a:	6800      	ldr	r0, [r0, #0]
 801133c:	2800      	cmp	r0, #0
 801133e:	bfb9      	ittee	lt
 8011340:	2320      	movlt	r3, #32
 8011342:	fb90 f0f3 	sdivlt	r0, r0, r3
 8011346:	301f      	addge	r0, #31
 8011348:	1140      	asrge	r0, r0, #5
 801134a:	4770      	bx	lr

0801134c <_ZNK8touchgfx4Line17invalidateContentEv>:
 801134c:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 8011350:	f890 3026 	ldrb.w	r3, [r0, #38]	; 0x26
 8011354:	b089      	sub	sp, #36	; 0x24
 8011356:	4604      	mov	r4, r0
 8011358:	b353      	cbz	r3, 80113b0 <_ZNK8touchgfx4Line17invalidateContentEv+0x64>
 801135a:	6803      	ldr	r3, [r0, #0]
 801135c:	4601      	mov	r1, r0
 801135e:	6e9b      	ldr	r3, [r3, #104]	; 0x68
 8011360:	a802      	add	r0, sp, #8
 8011362:	4798      	blx	r3
 8011364:	2220      	movs	r2, #32
 8011366:	f8d4 a02c 	ldr.w	sl, [r4, #44]	; 0x2c
 801136a:	6b61      	ldr	r1, [r4, #52]	; 0x34
 801136c:	fb9a f0f2 	sdiv	r0, sl, r2
 8011370:	fb91 f5f2 	sdiv	r5, r1, r2
 8011374:	1b40      	subs	r0, r0, r5
 8011376:	2800      	cmp	r0, #0
 8011378:	6be3      	ldr	r3, [r4, #60]	; 0x3c
 801137a:	fb93 f6f2 	sdiv	r6, r3, r2
 801137e:	bfb8      	it	lt
 8011380:	4240      	neglt	r0, r0
 8011382:	0076      	lsls	r6, r6, #1
 8011384:	4286      	cmp	r6, r0
 8011386:	f8d4 b000 	ldr.w	fp, [r4]
 801138a:	dc0c      	bgt.n	80113a6 <_ZNK8touchgfx4Line17invalidateContentEv+0x5a>
 801138c:	6b25      	ldr	r5, [r4, #48]	; 0x30
 801138e:	f8d4 8038 	ldr.w	r8, [r4, #56]	; 0x38
 8011392:	fb95 f0f2 	sdiv	r0, r5, r2
 8011396:	fb98 f7f2 	sdiv	r7, r8, r2
 801139a:	1bc0      	subs	r0, r0, r7
 801139c:	2800      	cmp	r0, #0
 801139e:	bfb8      	it	lt
 80113a0:	4240      	neglt	r0, r0
 80113a2:	4286      	cmp	r6, r0
 80113a4:	dd07      	ble.n	80113b6 <_ZNK8touchgfx4Line17invalidateContentEv+0x6a>
 80113a6:	f8db 3010 	ldr.w	r3, [fp, #16]
 80113aa:	a902      	add	r1, sp, #8
 80113ac:	4620      	mov	r0, r4
 80113ae:	4798      	blx	r3
 80113b0:	b009      	add	sp, #36	; 0x24
 80113b2:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
 80113b6:	3301      	adds	r3, #1
 80113b8:	2002      	movs	r0, #2
 80113ba:	f10d 0920 	add.w	r9, sp, #32
 80113be:	eb03 0343 	add.w	r3, r3, r3, lsl #1
 80113c2:	4103      	asrs	r3, r0
 80113c4:	f849 3d08 	str.w	r3, [r9, #-8]!
 80113c8:	eb01 060a 	add.w	r6, r1, sl
 80113cc:	eb08 0705 	add.w	r7, r8, r5
 80113d0:	fb96 f6f0 	sdiv	r6, r6, r0
 80113d4:	fb97 f7f0 	sdiv	r7, r7, r0
 80113d8:	4648      	mov	r0, r9
 80113da:	9101      	str	r1, [sp, #4]
 80113dc:	b236      	sxth	r6, r6
 80113de:	b23f      	sxth	r7, r7
 80113e0:	fb96 f6f2 	sdiv	r6, r6, r2
 80113e4:	fb97 f7f2 	sdiv	r7, r7, r2
 80113e8:	f7ff ffa7 	bl	801133a <_ZNK8touchgfx7CWRUtil2Q54ceilEv>
 80113ec:	f9bd 300c 	ldrsh.w	r3, [sp, #12]
 80113f0:	f9bd 200e 	ldrsh.w	r2, [sp, #14]
 80113f4:	9901      	ldr	r1, [sp, #4]
 80113f6:	4293      	cmp	r3, r2
 80113f8:	fa1f fe87 	uxth.w	lr, r7
 80113fc:	fa1f fc86 	uxth.w	ip, r6
 8011400:	eba1 0a0a 	sub.w	sl, r1, sl
 8011404:	b280      	uxth	r0, r0
 8011406:	da54      	bge.n	80114b2 <_ZNK8touchgfx4Line17invalidateContentEv+0x166>
 8011408:	ebac 0100 	sub.w	r1, ip, r0
 801140c:	b289      	uxth	r1, r1
 801140e:	4460      	add	r0, ip
 8011410:	f1ba 0f00 	cmp.w	sl, #0
 8011414:	b20e      	sxth	r6, r1
 8011416:	b280      	uxth	r0, r0
 8011418:	f9bd a008 	ldrsh.w	sl, [sp, #8]
 801141c:	f9bd c00a 	ldrsh.w	ip, [sp, #10]
 8011420:	da29      	bge.n	8011476 <_ZNK8touchgfx4Line17invalidateContentEv+0x12a>
 8011422:	eba8 0505 	sub.w	r5, r8, r5
 8011426:	2d00      	cmp	r5, #0
 8011428:	da2a      	bge.n	8011480 <_ZNK8touchgfx4Line17invalidateContentEv+0x134>
 801142a:	fa1f f88a 	uxth.w	r8, sl
 801142e:	eba0 0008 	sub.w	r0, r0, r8
 8011432:	fa1f f58c 	uxth.w	r5, ip
 8011436:	4443      	add	r3, r8
 8011438:	f8ad 0014 	strh.w	r0, [sp, #20]
 801143c:	1a59      	subs	r1, r3, r1
 801143e:	ebae 0005 	sub.w	r0, lr, r5
 8011442:	f8ad a010 	strh.w	sl, [sp, #16]
 8011446:	f8ad c012 	strh.w	ip, [sp, #18]
 801144a:	f8ad 0016 	strh.w	r0, [sp, #22]
 801144e:	f8ad 6018 	strh.w	r6, [sp, #24]
 8011452:	f8ad 701a 	strh.w	r7, [sp, #26]
 8011456:	f8ad 101c 	strh.w	r1, [sp, #28]
 801145a:	442a      	add	r2, r5
 801145c:	eba2 0e0e 	sub.w	lr, r2, lr
 8011460:	f8ad e01e 	strh.w	lr, [sp, #30]
 8011464:	f8db 3010 	ldr.w	r3, [fp, #16]
 8011468:	a904      	add	r1, sp, #16
 801146a:	4620      	mov	r0, r4
 801146c:	4798      	blx	r3
 801146e:	6823      	ldr	r3, [r4, #0]
 8011470:	4649      	mov	r1, r9
 8011472:	691b      	ldr	r3, [r3, #16]
 8011474:	e79a      	b.n	80113ac <_ZNK8touchgfx4Line17invalidateContentEv+0x60>
 8011476:	d003      	beq.n	8011480 <_ZNK8touchgfx4Line17invalidateContentEv+0x134>
 8011478:	eba8 0505 	sub.w	r5, r8, r5
 801147c:	2d00      	cmp	r5, #0
 801147e:	dcd4      	bgt.n	801142a <_ZNK8touchgfx4Line17invalidateContentEv+0xde>
 8011480:	fa1f f88a 	uxth.w	r8, sl
 8011484:	4443      	add	r3, r8
 8011486:	fa1f f58c 	uxth.w	r5, ip
 801148a:	1a59      	subs	r1, r3, r1
 801148c:	eba0 0008 	sub.w	r0, r0, r8
 8011490:	ebae 0305 	sub.w	r3, lr, r5
 8011494:	f8ad 6010 	strh.w	r6, [sp, #16]
 8011498:	f8ad c012 	strh.w	ip, [sp, #18]
 801149c:	f8ad 1014 	strh.w	r1, [sp, #20]
 80114a0:	f8ad 3016 	strh.w	r3, [sp, #22]
 80114a4:	f8ad a018 	strh.w	sl, [sp, #24]
 80114a8:	f8ad 701a 	strh.w	r7, [sp, #26]
 80114ac:	f8ad 001c 	strh.w	r0, [sp, #28]
 80114b0:	e7d3      	b.n	801145a <_ZNK8touchgfx4Line17invalidateContentEv+0x10e>
 80114b2:	ebae 0100 	sub.w	r1, lr, r0
 80114b6:	b289      	uxth	r1, r1
 80114b8:	4470      	add	r0, lr
 80114ba:	f1ba 0f00 	cmp.w	sl, #0
 80114be:	b20f      	sxth	r7, r1
 80114c0:	b280      	uxth	r0, r0
 80114c2:	f9bd e008 	ldrsh.w	lr, [sp, #8]
 80114c6:	f9bd a00a 	ldrsh.w	sl, [sp, #10]
 80114ca:	da20      	bge.n	801150e <_ZNK8touchgfx4Line17invalidateContentEv+0x1c2>
 80114cc:	eba8 0505 	sub.w	r5, r8, r5
 80114d0:	2d00      	cmp	r5, #0
 80114d2:	da21      	bge.n	8011518 <_ZNK8touchgfx4Line17invalidateContentEv+0x1cc>
 80114d4:	fa1f f88e 	uxth.w	r8, lr
 80114d8:	fa1f f58a 	uxth.w	r5, sl
 80114dc:	4443      	add	r3, r8
 80114de:	442a      	add	r2, r5
 80114e0:	f8ad e010 	strh.w	lr, [sp, #16]
 80114e4:	1b40      	subs	r0, r0, r5
 80114e6:	ebac 0e08 	sub.w	lr, ip, r8
 80114ea:	1a51      	subs	r1, r2, r1
 80114ec:	eba3 0c0c 	sub.w	ip, r3, ip
 80114f0:	f8ad a012 	strh.w	sl, [sp, #18]
 80114f4:	f8ad e014 	strh.w	lr, [sp, #20]
 80114f8:	f8ad 0016 	strh.w	r0, [sp, #22]
 80114fc:	f8ad 6018 	strh.w	r6, [sp, #24]
 8011500:	f8ad 701a 	strh.w	r7, [sp, #26]
 8011504:	f8ad c01c 	strh.w	ip, [sp, #28]
 8011508:	f8ad 101e 	strh.w	r1, [sp, #30]
 801150c:	e7aa      	b.n	8011464 <_ZNK8touchgfx4Line17invalidateContentEv+0x118>
 801150e:	d003      	beq.n	8011518 <_ZNK8touchgfx4Line17invalidateContentEv+0x1cc>
 8011510:	eba8 0505 	sub.w	r5, r8, r5
 8011514:	2d00      	cmp	r5, #0
 8011516:	dcdd      	bgt.n	80114d4 <_ZNK8touchgfx4Line17invalidateContentEv+0x188>
 8011518:	fa1f f58e 	uxth.w	r5, lr
 801151c:	fa1f f88a 	uxth.w	r8, sl
 8011520:	4442      	add	r2, r8
 8011522:	442b      	add	r3, r5
 8011524:	f8ad 7012 	strh.w	r7, [sp, #18]
 8011528:	1a51      	subs	r1, r2, r1
 801152a:	ebac 0705 	sub.w	r7, ip, r5
 801152e:	eba0 0008 	sub.w	r0, r0, r8
 8011532:	eba3 0c0c 	sub.w	ip, r3, ip
 8011536:	f8ad e010 	strh.w	lr, [sp, #16]
 801153a:	f8ad 7014 	strh.w	r7, [sp, #20]
 801153e:	f8ad 1016 	strh.w	r1, [sp, #22]
 8011542:	f8ad 6018 	strh.w	r6, [sp, #24]
 8011546:	f8ad a01a 	strh.w	sl, [sp, #26]
 801154a:	f8ad c01c 	strh.w	ip, [sp, #28]
 801154e:	f8ad 001e 	strh.w	r0, [sp, #30]
 8011552:	e787      	b.n	8011464 <_ZNK8touchgfx4Line17invalidateContentEv+0x118>

08011554 <_ZN8touchgfx7CWRUtil4sineEi>:
 8011554:	f44f 73b4 	mov.w	r3, #360	; 0x168
 8011558:	fb90 f2f3 	sdiv	r2, r0, r3
 801155c:	fb02 0013 	mls	r0, r2, r3, r0
 8011560:	2800      	cmp	r0, #0
 8011562:	bfb8      	it	lt
 8011564:	18c0      	addlt	r0, r0, r3
 8011566:	285a      	cmp	r0, #90	; 0x5a
 8011568:	4b09      	ldr	r3, [pc, #36]	; (8011590 <_ZN8touchgfx7CWRUtil4sineEi+0x3c>)
 801156a:	dc02      	bgt.n	8011572 <_ZN8touchgfx7CWRUtil4sineEi+0x1e>
 801156c:	f833 0010 	ldrh.w	r0, [r3, r0, lsl #1]
 8011570:	4770      	bx	lr
 8011572:	28b4      	cmp	r0, #180	; 0xb4
 8011574:	dc02      	bgt.n	801157c <_ZN8touchgfx7CWRUtil4sineEi+0x28>
 8011576:	f1c0 00b4 	rsb	r0, r0, #180	; 0xb4
 801157a:	e7f7      	b.n	801156c <_ZN8touchgfx7CWRUtil4sineEi+0x18>
 801157c:	f5b0 7f87 	cmp.w	r0, #270	; 0x10e
 8011580:	bfd4      	ite	le
 8011582:	38b4      	suble	r0, #180	; 0xb4
 8011584:	f5c0 70b4 	rsbgt	r0, r0, #360	; 0x168
 8011588:	f833 0010 	ldrh.w	r0, [r3, r0, lsl #1]
 801158c:	4240      	negs	r0, r0
 801158e:	4770      	bx	lr
 8011590:	0802e378 	.word	0x0802e378

08011594 <_ZN8touchgfx7CWRUtil4sineENS0_2Q5E>:
 8011594:	f44f 5334 	mov.w	r3, #11520	; 0x2d00
 8011598:	b573      	push	{r0, r1, r4, r5, r6, lr}
 801159a:	fb90 f2f3 	sdiv	r2, r0, r3
 801159e:	fb02 0013 	mls	r0, r2, r3, r0
 80115a2:	2800      	cmp	r0, #0
 80115a4:	bfb8      	it	lt
 80115a6:	18c0      	addlt	r0, r0, r3
 80115a8:	1144      	asrs	r4, r0, #5
 80115aa:	f000 061f 	and.w	r6, r0, #31
 80115ae:	4620      	mov	r0, r4
 80115b0:	f7ff ffd0 	bl	8011554 <_ZN8touchgfx7CWRUtil4sineEi>
 80115b4:	4605      	mov	r5, r0
 80115b6:	b90e      	cbnz	r6, 80115bc <_ZN8touchgfx7CWRUtil4sineENS0_2Q5E+0x28>
 80115b8:	b002      	add	sp, #8
 80115ba:	bd70      	pop	{r4, r5, r6, pc}
 80115bc:	1c60      	adds	r0, r4, #1
 80115be:	f7ff ffc9 	bl	8011554 <_ZN8touchgfx7CWRUtil4sineEi>
 80115c2:	ab01      	add	r3, sp, #4
 80115c4:	2220      	movs	r2, #32
 80115c6:	4631      	mov	r1, r6
 80115c8:	1b40      	subs	r0, r0, r5
 80115ca:	f005 f967 	bl	801689c <_ZN8touchgfx6muldivElllRl>
 80115ce:	4428      	add	r0, r5
 80115d0:	e7f2      	b.n	80115b8 <_ZN8touchgfx7CWRUtil4sineENS0_2Q5E+0x24>

080115d2 <_ZN8touchgfx7CWRUtil5isqrtEm>:
 80115d2:	f5b0 3f80 	cmp.w	r0, #65536	; 0x10000
 80115d6:	bf2c      	ite	cs
 80115d8:	f04f 4280 	movcs.w	r2, #1073741824	; 0x40000000
 80115dc:	f44f 4280 	movcc.w	r2, #16384	; 0x4000
 80115e0:	2300      	movs	r3, #0
 80115e2:	1899      	adds	r1, r3, r2
 80115e4:	4288      	cmp	r0, r1
 80115e6:	bf24      	itt	cs
 80115e8:	1853      	addcs	r3, r2, r1
 80115ea:	1a40      	subcs	r0, r0, r1
 80115ec:	0892      	lsrs	r2, r2, #2
 80115ee:	ea4f 0353 	mov.w	r3, r3, lsr #1
 80115f2:	d1f6      	bne.n	80115e2 <_ZN8touchgfx7CWRUtil5isqrtEm+0x10>
 80115f4:	4618      	mov	r0, r3
 80115f6:	4770      	bx	lr

080115f8 <_ZN8touchgfx7CWRUtil6lengthENS0_2Q5ES1_>:
 80115f8:	b510      	push	{r4, lr}
 80115fa:	ea80 73e0 	eor.w	r3, r0, r0, asr #31
 80115fe:	ea81 74e1 	eor.w	r4, r1, r1, asr #31
 8011602:	eba4 74e1 	sub.w	r4, r4, r1, asr #31
 8011606:	eba3 73e0 	sub.w	r3, r3, r0, asr #31
 801160a:	13a4      	asrs	r4, r4, #14
 801160c:	139b      	asrs	r3, r3, #14
 801160e:	429c      	cmp	r4, r3
 8011610:	bfb8      	it	lt
 8011612:	461c      	movlt	r4, r3
 8011614:	2c01      	cmp	r4, #1
 8011616:	dd07      	ble.n	8011628 <_ZN8touchgfx7CWRUtil6lengthENS0_2Q5ES1_+0x30>
 8011618:	fb91 f1f4 	sdiv	r1, r1, r4
 801161c:	fb90 f0f4 	sdiv	r0, r0, r4
 8011620:	f7ff ffea 	bl	80115f8 <_ZN8touchgfx7CWRUtil6lengthENS0_2Q5ES1_>
 8011624:	4360      	muls	r0, r4
 8011626:	bd10      	pop	{r4, pc}
 8011628:	4340      	muls	r0, r0
 801162a:	fb01 0001 	mla	r0, r1, r1, r0
 801162e:	f7ff ffd0 	bl	80115d2 <_ZN8touchgfx7CWRUtil5isqrtEm>
 8011632:	e7f8      	b.n	8011626 <_ZN8touchgfx7CWRUtil6lengthENS0_2Q5ES1_+0x2e>

08011634 <_ZN8touchgfx7CWRUtil7arcsineENS0_3Q10E>:
 8011634:	2800      	cmp	r0, #0
 8011636:	b508      	push	{r3, lr}
 8011638:	da05      	bge.n	8011646 <_ZN8touchgfx7CWRUtil7arcsineENS0_3Q10E+0x12>
 801163a:	4240      	negs	r0, r0
 801163c:	f7ff fffa 	bl	8011634 <_ZN8touchgfx7CWRUtil7arcsineENS0_3Q10E>
 8011640:	4240      	negs	r0, r0
 8011642:	b240      	sxtb	r0, r0
 8011644:	bd08      	pop	{r3, pc}
 8011646:	f5b0 6f80 	cmp.w	r0, #1024	; 0x400
 801164a:	dc11      	bgt.n	8011670 <_ZN8touchgfx7CWRUtil7arcsineENS0_3Q10E+0x3c>
 801164c:	f5b0 7f35 	cmp.w	r0, #724	; 0x2d4
 8011650:	dd09      	ble.n	8011666 <_ZN8touchgfx7CWRUtil7arcsineENS0_3Q10E+0x32>
 8011652:	4340      	muls	r0, r0
 8011654:	f5c0 1080 	rsb	r0, r0, #1048576	; 0x100000
 8011658:	f7ff ffbb 	bl	80115d2 <_ZN8touchgfx7CWRUtil5isqrtEm>
 801165c:	f7ff ffea 	bl	8011634 <_ZN8touchgfx7CWRUtil7arcsineENS0_3Q10E>
 8011660:	f1c0 005a 	rsb	r0, r0, #90	; 0x5a
 8011664:	e7ed      	b.n	8011642 <_ZN8touchgfx7CWRUtil7arcsineENS0_3Q10E+0xe>
 8011666:	3003      	adds	r0, #3
 8011668:	10c0      	asrs	r0, r0, #3
 801166a:	4b02      	ldr	r3, [pc, #8]	; (8011674 <_ZN8touchgfx7CWRUtil7arcsineENS0_3Q10E+0x40>)
 801166c:	5618      	ldrsb	r0, [r3, r0]
 801166e:	e7e9      	b.n	8011644 <_ZN8touchgfx7CWRUtil7arcsineENS0_3Q10E+0x10>
 8011670:	2000      	movs	r0, #0
 8011672:	e7e7      	b.n	8011644 <_ZN8touchgfx7CWRUtil7arcsineENS0_3Q10E+0x10>
 8011674:	0802e31c 	.word	0x0802e31c

08011678 <_ZN8touchgfx7CWRUtil6_angleENS0_2Q5ES1_RS1_>:
 8011678:	4281      	cmp	r1, r0
 801167a:	b537      	push	{r0, r1, r2, r4, r5, lr}
 801167c:	460c      	mov	r4, r1
 801167e:	4615      	mov	r5, r2
 8011680:	dd07      	ble.n	8011692 <_ZN8touchgfx7CWRUtil6_angleENS0_2Q5ES1_RS1_+0x1a>
 8011682:	4601      	mov	r1, r0
 8011684:	4620      	mov	r0, r4
 8011686:	f7ff fff7 	bl	8011678 <_ZN8touchgfx7CWRUtil6_angleENS0_2Q5ES1_RS1_>
 801168a:	f1c0 005a 	rsb	r0, r0, #90	; 0x5a
 801168e:	b003      	add	sp, #12
 8011690:	bd30      	pop	{r4, r5, pc}
 8011692:	f7ff ffb1 	bl	80115f8 <_ZN8touchgfx7CWRUtil6lengthENS0_2Q5ES1_>
 8011696:	6028      	str	r0, [r5, #0]
 8011698:	2800      	cmp	r0, #0
 801169a:	d0f8      	beq.n	801168e <_ZN8touchgfx7CWRUtil6_angleENS0_2Q5ES1_RS1_+0x16>
 801169c:	4602      	mov	r2, r0
 801169e:	ab01      	add	r3, sp, #4
 80116a0:	f44f 6180 	mov.w	r1, #1024	; 0x400
 80116a4:	4620      	mov	r0, r4
 80116a6:	f005 f8f9 	bl	801689c <_ZN8touchgfx6muldivElllRl>
 80116aa:	f7ff ffc3 	bl	8011634 <_ZN8touchgfx7CWRUtil7arcsineENS0_3Q10E>
 80116ae:	e7ee      	b.n	801168e <_ZN8touchgfx7CWRUtil6_angleENS0_2Q5ES1_RS1_+0x16>

080116b0 <_ZN8touchgfx4LineC1Ev>:
 80116b0:	b510      	push	{r4, lr}
 80116b2:	4604      	mov	r4, r0
 80116b4:	f7ff fe0a 	bl	80112cc <_ZN8touchgfx12CanvasWidgetC1Ev>
 80116b8:	4b0c      	ldr	r3, [pc, #48]	; (80116ec <_ZN8touchgfx4LineC1Ev+0x3c>)
 80116ba:	6023      	str	r3, [r4, #0]
 80116bc:	2220      	movs	r2, #32
 80116be:	2300      	movs	r3, #0
 80116c0:	63e2      	str	r2, [r4, #60]	; 0x3c
 80116c2:	2212      	movs	r2, #18
 80116c4:	e9c4 330b 	strd	r3, r3, [r4, #44]	; 0x2c
 80116c8:	e9c4 330d 	strd	r3, r3, [r4, #52]	; 0x34
 80116cc:	f884 3040 	strb.w	r3, [r4, #64]	; 0x40
 80116d0:	e9c4 3311 	strd	r3, r3, [r4, #68]	; 0x44
 80116d4:	e9c4 3313 	strd	r3, r3, [r4, #76]	; 0x4c
 80116d8:	e9c4 3315 	strd	r3, r3, [r4, #84]	; 0x54
 80116dc:	e9c4 3317 	strd	r3, r3, [r4, #92]	; 0x5c
 80116e0:	e9c4 3319 	strd	r3, r3, [r4, #100]	; 0x64
 80116e4:	66e2      	str	r2, [r4, #108]	; 0x6c
 80116e6:	60a3      	str	r3, [r4, #8]
 80116e8:	4620      	mov	r0, r4
 80116ea:	bd10      	pop	{r4, pc}
 80116ec:	0802e438 	.word	0x0802e438

080116f0 <_ZN8touchgfx4Line17updateCachedShapeEv>:
 80116f0:	e92d 47f3 	stmdb	sp!, {r0, r1, r4, r5, r6, r7, r8, r9, sl, lr}
 80116f4:	6b47      	ldr	r7, [r0, #52]	; 0x34
 80116f6:	6ac3      	ldr	r3, [r0, #44]	; 0x2c
 80116f8:	6b85      	ldr	r5, [r0, #56]	; 0x38
 80116fa:	6b02      	ldr	r2, [r0, #48]	; 0x30
 80116fc:	1aff      	subs	r7, r7, r3
 80116fe:	4604      	mov	r4, r0
 8011700:	eba5 0502 	sub.w	r5, r5, r2
 8011704:	d142      	bne.n	801178c <_ZN8touchgfx4Line17updateCachedShapeEv+0x9c>
 8011706:	b955      	cbnz	r5, 801171e <_ZN8touchgfx4Line17updateCachedShapeEv+0x2e>
 8011708:	e9c0 3313 	strd	r3, r3, [r0, #76]	; 0x4c
 801170c:	e9c0 3311 	strd	r3, r3, [r0, #68]	; 0x44
 8011710:	e9c0 2217 	strd	r2, r2, [r0, #92]	; 0x5c
 8011714:	e9c0 2215 	strd	r2, r2, [r0, #84]	; 0x54
 8011718:	b002      	add	sp, #8
 801171a:	e8bd 87f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, pc}
 801171e:	ea85 78e5 	eor.w	r8, r5, r5, asr #31
 8011722:	eba8 78e5 	sub.w	r8, r8, r5, asr #31
 8011726:	4629      	mov	r1, r5
 8011728:	4642      	mov	r2, r8
 801172a:	6be0      	ldr	r0, [r4, #60]	; 0x3c
 801172c:	f005 f8d5 	bl	80168da <_ZN8touchgfx6muldivElll>
 8011730:	2502      	movs	r5, #2
 8011732:	4642      	mov	r2, r8
 8011734:	fb90 f6f5 	sdiv	r6, r0, r5
 8011738:	4639      	mov	r1, r7
 801173a:	6be0      	ldr	r0, [r4, #60]	; 0x3c
 801173c:	f005 f8cd 	bl	80168da <_ZN8touchgfx6muldivElll>
 8011740:	f894 9040 	ldrb.w	r9, [r4, #64]	; 0x40
 8011744:	fb90 f5f5 	sdiv	r5, r0, r5
 8011748:	f1b9 0f00 	cmp.w	r9, #0
 801174c:	d067      	beq.n	801181e <_ZN8touchgfx4Line17updateCachedShapeEv+0x12e>
 801174e:	f1b9 0f02 	cmp.w	r9, #2
 8011752:	d878      	bhi.n	8011846 <_ZN8touchgfx4Line17updateCachedShapeEv+0x156>
 8011754:	6ae2      	ldr	r2, [r4, #44]	; 0x2c
 8011756:	6b60      	ldr	r0, [r4, #52]	; 0x34
 8011758:	1b93      	subs	r3, r2, r6
 801175a:	1b5b      	subs	r3, r3, r5
 801175c:	6463      	str	r3, [r4, #68]	; 0x44
 801175e:	6b23      	ldr	r3, [r4, #48]	; 0x30
 8011760:	18e9      	adds	r1, r5, r3
 8011762:	1b89      	subs	r1, r1, r6
 8011764:	6561      	str	r1, [r4, #84]	; 0x54
 8011766:	1b81      	subs	r1, r0, r6
 8011768:	4429      	add	r1, r5
 801176a:	64a1      	str	r1, [r4, #72]	; 0x48
 801176c:	6ba1      	ldr	r1, [r4, #56]	; 0x38
 801176e:	4430      	add	r0, r6
 8011770:	186f      	adds	r7, r5, r1
 8011772:	4432      	add	r2, r6
 8011774:	1b49      	subs	r1, r1, r5
 8011776:	4437      	add	r7, r6
 8011778:	4428      	add	r0, r5
 801177a:	4431      	add	r1, r6
 801177c:	1b52      	subs	r2, r2, r5
 801177e:	1b5b      	subs	r3, r3, r5
 8011780:	65a7      	str	r7, [r4, #88]	; 0x58
 8011782:	64e0      	str	r0, [r4, #76]	; 0x4c
 8011784:	65e1      	str	r1, [r4, #92]	; 0x5c
 8011786:	6522      	str	r2, [r4, #80]	; 0x50
 8011788:	1b9b      	subs	r3, r3, r6
 801178a:	e05b      	b.n	8011844 <_ZN8touchgfx4Line17updateCachedShapeEv+0x154>
 801178c:	ea87 78e7 	eor.w	r8, r7, r7, asr #31
 8011790:	eba8 78e7 	sub.w	r8, r8, r7, asr #31
 8011794:	2d00      	cmp	r5, #0
 8011796:	d0c6      	beq.n	8011726 <_ZN8touchgfx4Line17updateCachedShapeEv+0x36>
 8011798:	ea85 73e5 	eor.w	r3, r5, r5, asr #31
 801179c:	eba3 73e5 	sub.w	r3, r3, r5, asr #31
 80117a0:	fb93 f2f8 	sdiv	r2, r3, r8
 80117a4:	fb08 3312 	mls	r3, r8, r2, r3
 80117a8:	b353      	cbz	r3, 8011800 <_ZN8touchgfx4Line17updateCachedShapeEv+0x110>
 80117aa:	fb98 f2f3 	sdiv	r2, r8, r3
 80117ae:	fb03 8812 	mls	r8, r3, r2, r8
 80117b2:	f1b8 0f00 	cmp.w	r8, #0
 80117b6:	d1f3      	bne.n	80117a0 <_ZN8touchgfx4Line17updateCachedShapeEv+0xb0>
 80117b8:	2b01      	cmp	r3, #1
 80117ba:	bf1c      	itt	ne
 80117bc:	fb95 f5f3 	sdivne	r5, r5, r3
 80117c0:	fb97 f7f3 	sdivne	r7, r7, r3
 80117c4:	ea87 73e7 	eor.w	r3, r7, r7, asr #31
 80117c8:	f24b 5104 	movw	r1, #46340	; 0xb504
 80117cc:	eba3 73e7 	sub.w	r3, r3, r7, asr #31
 80117d0:	ea85 72e5 	eor.w	r2, r5, r5, asr #31
 80117d4:	428b      	cmp	r3, r1
 80117d6:	eba2 72e5 	sub.w	r2, r2, r5, asr #31
 80117da:	4608      	mov	r0, r1
 80117dc:	dd01      	ble.n	80117e2 <_ZN8touchgfx4Line17updateCachedShapeEv+0xf2>
 80117de:	428a      	cmp	r2, r1
 80117e0:	dc10      	bgt.n	8011804 <_ZN8touchgfx4Line17updateCachedShapeEv+0x114>
 80117e2:	fb90 f3f3 	sdiv	r3, r0, r3
 80117e6:	fb90 f2f2 	sdiv	r2, r0, r2
 80117ea:	4293      	cmp	r3, r2
 80117ec:	bfa8      	it	ge
 80117ee:	4613      	movge	r3, r2
 80117f0:	435f      	muls	r7, r3
 80117f2:	435d      	muls	r5, r3
 80117f4:	4629      	mov	r1, r5
 80117f6:	4638      	mov	r0, r7
 80117f8:	f7ff fefe 	bl	80115f8 <_ZN8touchgfx7CWRUtil6lengthENS0_2Q5ES1_>
 80117fc:	4680      	mov	r8, r0
 80117fe:	e792      	b.n	8011726 <_ZN8touchgfx4Line17updateCachedShapeEv+0x36>
 8011800:	4643      	mov	r3, r8
 8011802:	e7d9      	b.n	80117b8 <_ZN8touchgfx4Line17updateCachedShapeEv+0xc8>
 8011804:	fb93 f3f1 	sdiv	r3, r3, r1
 8011808:	fb92 f2f1 	sdiv	r2, r2, r1
 801180c:	4293      	cmp	r3, r2
 801180e:	bfcc      	ite	gt
 8011810:	3301      	addgt	r3, #1
 8011812:	1c53      	addle	r3, r2, #1
 8011814:	fb97 f7f3 	sdiv	r7, r7, r3
 8011818:	fb95 f5f3 	sdiv	r5, r5, r3
 801181c:	e7ea      	b.n	80117f4 <_ZN8touchgfx4Line17updateCachedShapeEv+0x104>
 801181e:	6ae2      	ldr	r2, [r4, #44]	; 0x2c
 8011820:	6b60      	ldr	r0, [r4, #52]	; 0x34
 8011822:	1b93      	subs	r3, r2, r6
 8011824:	6463      	str	r3, [r4, #68]	; 0x44
 8011826:	6b23      	ldr	r3, [r4, #48]	; 0x30
 8011828:	18e9      	adds	r1, r5, r3
 801182a:	6561      	str	r1, [r4, #84]	; 0x54
 801182c:	1b81      	subs	r1, r0, r6
 801182e:	64a1      	str	r1, [r4, #72]	; 0x48
 8011830:	6ba1      	ldr	r1, [r4, #56]	; 0x38
 8011832:	4430      	add	r0, r6
 8011834:	186f      	adds	r7, r5, r1
 8011836:	4432      	add	r2, r6
 8011838:	1b49      	subs	r1, r1, r5
 801183a:	65a7      	str	r7, [r4, #88]	; 0x58
 801183c:	64e0      	str	r0, [r4, #76]	; 0x4c
 801183e:	65e1      	str	r1, [r4, #92]	; 0x5c
 8011840:	6522      	str	r2, [r4, #80]	; 0x50
 8011842:	1b5b      	subs	r3, r3, r5
 8011844:	6623      	str	r3, [r4, #96]	; 0x60
 8011846:	6c62      	ldr	r2, [r4, #68]	; 0x44
 8011848:	6d63      	ldr	r3, [r4, #84]	; 0x54
 801184a:	9200      	str	r2, [sp, #0]
 801184c:	9301      	str	r3, [sp, #4]
 801184e:	f104 0148 	add.w	r1, r4, #72	; 0x48
 8011852:	f104 0c54 	add.w	ip, r4, #84	; 0x54
 8011856:	680f      	ldr	r7, [r1, #0]
 8011858:	9800      	ldr	r0, [sp, #0]
 801185a:	42ba      	cmp	r2, r7
 801185c:	bfa8      	it	ge
 801185e:	463a      	movge	r2, r7
 8011860:	4287      	cmp	r7, r0
 8011862:	bfc8      	it	gt
 8011864:	9700      	strgt	r7, [sp, #0]
 8011866:	690f      	ldr	r7, [r1, #16]
 8011868:	9801      	ldr	r0, [sp, #4]
 801186a:	42bb      	cmp	r3, r7
 801186c:	bfa8      	it	ge
 801186e:	463b      	movge	r3, r7
 8011870:	3104      	adds	r1, #4
 8011872:	4287      	cmp	r7, r0
 8011874:	bfc8      	it	gt
 8011876:	9701      	strgt	r7, [sp, #4]
 8011878:	458c      	cmp	ip, r1
 801187a:	d1ec      	bne.n	8011856 <_ZN8touchgfx4Line17updateCachedShapeEv+0x166>
 801187c:	4668      	mov	r0, sp
 801187e:	2720      	movs	r7, #32
 8011880:	fb92 f8f7 	sdiv	r8, r2, r7
 8011884:	fb93 f7f7 	sdiv	r7, r3, r7
 8011888:	f7ff fd57 	bl	801133a <_ZNK8touchgfx7CWRUtil2Q54ceilEv>
 801188c:	4682      	mov	sl, r0
 801188e:	a801      	add	r0, sp, #4
 8011890:	f7ff fd53 	bl	801133a <_ZNK8touchgfx7CWRUtil2Q54ceilEv>
 8011894:	ebaa 0208 	sub.w	r2, sl, r8
 8011898:	1bc0      	subs	r0, r0, r7
 801189a:	f1b9 0f01 	cmp.w	r9, #1
 801189e:	f8a4 8064 	strh.w	r8, [r4, #100]	; 0x64
 80118a2:	f8a4 7066 	strh.w	r7, [r4, #102]	; 0x66
 80118a6:	f8a4 2068 	strh.w	r2, [r4, #104]	; 0x68
 80118aa:	f8a4 006a 	strh.w	r0, [r4, #106]	; 0x6a
 80118ae:	f47f af33 	bne.w	8011718 <_ZN8touchgfx4Line17updateCachedShapeEv+0x28>
 80118b2:	6ae0      	ldr	r0, [r4, #44]	; 0x2c
 80118b4:	6b61      	ldr	r1, [r4, #52]	; 0x34
 80118b6:	1b83      	subs	r3, r0, r6
 80118b8:	6463      	str	r3, [r4, #68]	; 0x44
 80118ba:	6b23      	ldr	r3, [r4, #48]	; 0x30
 80118bc:	18ea      	adds	r2, r5, r3
 80118be:	6562      	str	r2, [r4, #84]	; 0x54
 80118c0:	1b8a      	subs	r2, r1, r6
 80118c2:	64a2      	str	r2, [r4, #72]	; 0x48
 80118c4:	6ba2      	ldr	r2, [r4, #56]	; 0x38
 80118c6:	4431      	add	r1, r6
 80118c8:	18af      	adds	r7, r5, r2
 80118ca:	4406      	add	r6, r0
 80118cc:	1b52      	subs	r2, r2, r5
 80118ce:	1b5d      	subs	r5, r3, r5
 80118d0:	65a7      	str	r7, [r4, #88]	; 0x58
 80118d2:	64e1      	str	r1, [r4, #76]	; 0x4c
 80118d4:	65e2      	str	r2, [r4, #92]	; 0x5c
 80118d6:	6526      	str	r6, [r4, #80]	; 0x50
 80118d8:	6625      	str	r5, [r4, #96]	; 0x60
 80118da:	e71d      	b.n	8011718 <_ZN8touchgfx4Line17updateCachedShapeEv+0x28>

080118dc <_ZN8touchgfx4Line8setStartENS_7CWRUtil2Q5ES2_>:
 80118dc:	6ac3      	ldr	r3, [r0, #44]	; 0x2c
 80118de:	428b      	cmp	r3, r1
 80118e0:	d102      	bne.n	80118e8 <_ZN8touchgfx4Line8setStartENS_7CWRUtil2Q5ES2_+0xc>
 80118e2:	6b03      	ldr	r3, [r0, #48]	; 0x30
 80118e4:	4293      	cmp	r3, r2
 80118e6:	d003      	beq.n	80118f0 <_ZN8touchgfx4Line8setStartENS_7CWRUtil2Q5ES2_+0x14>
 80118e8:	e9c0 120b 	strd	r1, r2, [r0, #44]	; 0x2c
 80118ec:	f7ff bf00 	b.w	80116f0 <_ZN8touchgfx4Line17updateCachedShapeEv>
 80118f0:	4770      	bx	lr

080118f2 <_ZN8touchgfx4Line6setEndENS_7CWRUtil2Q5ES2_>:
 80118f2:	6b43      	ldr	r3, [r0, #52]	; 0x34
 80118f4:	428b      	cmp	r3, r1
 80118f6:	d102      	bne.n	80118fe <_ZN8touchgfx4Line6setEndENS_7CWRUtil2Q5ES2_+0xc>
 80118f8:	6b83      	ldr	r3, [r0, #56]	; 0x38
 80118fa:	4293      	cmp	r3, r2
 80118fc:	d003      	beq.n	8011906 <_ZN8touchgfx4Line6setEndENS_7CWRUtil2Q5ES2_+0x14>
 80118fe:	e9c0 120d 	strd	r1, r2, [r0, #52]	; 0x34
 8011902:	f7ff bef5 	b.w	80116f0 <_ZN8touchgfx4Line17updateCachedShapeEv>
 8011906:	4770      	bx	lr

08011908 <_ZN8touchgfx4Line18setLineEndingStyleENS0_17LINE_ENDING_STYLEE>:
 8011908:	f880 1040 	strb.w	r1, [r0, #64]	; 0x40
 801190c:	f7ff bef0 	b.w	80116f0 <_ZN8touchgfx4Line17updateCachedShapeEv>

08011910 <_ZNK8touchgfx4Line16drawCanvasWidgetERKNS_4RectE>:
 8011910:	e92d 41f0 	stmdb	sp!, {r4, r5, r6, r7, r8, lr}
 8011914:	b0a0      	sub	sp, #128	; 0x80
 8011916:	4604      	mov	r4, r0
 8011918:	460a      	mov	r2, r1
 801191a:	4601      	mov	r1, r0
 801191c:	a804      	add	r0, sp, #16
 801191e:	f014 fe3b 	bl	8026598 <_ZN8touchgfx6CanvasC1EPKNS_12CanvasWidgetERKNS_4RectE>
 8011922:	2300      	movs	r3, #0
 8011924:	9301      	str	r3, [sp, #4]
 8011926:	f894 3040 	ldrb.w	r3, [r4, #64]	; 0x40
 801192a:	2b01      	cmp	r3, #1
 801192c:	d17c      	bne.n	8011a28 <_ZNK8touchgfx4Line16drawCanvasWidgetERKNS_4RectE+0x118>
 801192e:	6c60      	ldr	r0, [r4, #68]	; 0x44
 8011930:	6ae3      	ldr	r3, [r4, #44]	; 0x2c
 8011932:	6d61      	ldr	r1, [r4, #84]	; 0x54
 8011934:	6b22      	ldr	r2, [r4, #48]	; 0x30
 8011936:	1ac0      	subs	r0, r0, r3
 8011938:	eba1 0102 	sub.w	r1, r1, r2
 801193c:	d437      	bmi.n	80119ae <_ZNK8touchgfx4Line16drawCanvasWidgetERKNS_4RectE+0x9e>
 801193e:	2900      	cmp	r1, #0
 8011940:	aa01      	add	r2, sp, #4
 8011942:	db2e      	blt.n	80119a2 <_ZNK8touchgfx4Line16drawCanvasWidgetERKNS_4RectE+0x92>
 8011944:	f7ff fe98 	bl	8011678 <_ZN8touchgfx7CWRUtil6_angleENS0_2Q5ES1_RS1_>
 8011948:	f100 065a 	add.w	r6, r0, #90	; 0x5a
 801194c:	6d62      	ldr	r2, [r4, #84]	; 0x54
 801194e:	6c61      	ldr	r1, [r4, #68]	; 0x44
 8011950:	a804      	add	r0, sp, #16
 8011952:	f014 ffa1 	bl	8026898 <_ZN8touchgfx6Canvas6moveToENS_7CWRUtil2Q5ES2_>
 8011956:	6da2      	ldr	r2, [r4, #88]	; 0x58
 8011958:	6ca1      	ldr	r1, [r4, #72]	; 0x48
 801195a:	a804      	add	r0, sp, #16
 801195c:	f014 ffe9 	bl	8026932 <_ZN8touchgfx6Canvas6lineToENS_7CWRUtil2Q5ES2_>
 8011960:	6ee5      	ldr	r5, [r4, #108]	; 0x6c
 8011962:	2db3      	cmp	r5, #179	; 0xb3
 8011964:	dc33      	bgt.n	80119ce <_ZNK8touchgfx4Line16drawCanvasWidgetERKNS_4RectE+0xbe>
 8011966:	eba6 0805 	sub.w	r8, r6, r5
 801196a:	4640      	mov	r0, r8
 801196c:	f7ff fdf2 	bl	8011554 <_ZN8touchgfx7CWRUtil4sineEi>
 8011970:	a902      	add	r1, sp, #8
 8011972:	9002      	str	r0, [sp, #8]
 8011974:	a801      	add	r0, sp, #4
 8011976:	f7ff fcd5 	bl	8011324 <_ZNK8touchgfx7CWRUtil2Q5mlERKNS0_3Q15E>
 801197a:	6b61      	ldr	r1, [r4, #52]	; 0x34
 801197c:	1847      	adds	r7, r0, r1
 801197e:	f1c8 005a 	rsb	r0, r8, #90	; 0x5a
 8011982:	f7ff fde7 	bl	8011554 <_ZN8touchgfx7CWRUtil4sineEi>
 8011986:	a903      	add	r1, sp, #12
 8011988:	9003      	str	r0, [sp, #12]
 801198a:	a801      	add	r0, sp, #4
 801198c:	f7ff fcca 	bl	8011324 <_ZNK8touchgfx7CWRUtil2Q5mlERKNS0_3Q15E>
 8011990:	6ba2      	ldr	r2, [r4, #56]	; 0x38
 8011992:	4639      	mov	r1, r7
 8011994:	1a12      	subs	r2, r2, r0
 8011996:	a804      	add	r0, sp, #16
 8011998:	f014 ffcb 	bl	8026932 <_ZN8touchgfx6Canvas6lineToENS_7CWRUtil2Q5ES2_>
 801199c:	6ee3      	ldr	r3, [r4, #108]	; 0x6c
 801199e:	441d      	add	r5, r3
 80119a0:	e7df      	b.n	8011962 <_ZNK8touchgfx4Line16drawCanvasWidgetERKNS_4RectE+0x52>
 80119a2:	4249      	negs	r1, r1
 80119a4:	f7ff fe68 	bl	8011678 <_ZN8touchgfx7CWRUtil6_angleENS0_2Q5ES1_RS1_>
 80119a8:	f1c0 065a 	rsb	r6, r0, #90	; 0x5a
 80119ac:	e7ce      	b.n	801194c <_ZNK8touchgfx4Line16drawCanvasWidgetERKNS_4RectE+0x3c>
 80119ae:	2900      	cmp	r1, #0
 80119b0:	f1c0 0000 	rsb	r0, r0, #0
 80119b4:	aa01      	add	r2, sp, #4
 80119b6:	db04      	blt.n	80119c2 <_ZNK8touchgfx4Line16drawCanvasWidgetERKNS_4RectE+0xb2>
 80119b8:	f7ff fe5e 	bl	8011678 <_ZN8touchgfx7CWRUtil6_angleENS0_2Q5ES1_RS1_>
 80119bc:	f5c0 7687 	rsb	r6, r0, #270	; 0x10e
 80119c0:	e7c4      	b.n	801194c <_ZNK8touchgfx4Line16drawCanvasWidgetERKNS_4RectE+0x3c>
 80119c2:	4249      	negs	r1, r1
 80119c4:	f7ff fe58 	bl	8011678 <_ZN8touchgfx7CWRUtil6_angleENS0_2Q5ES1_RS1_>
 80119c8:	f500 7687 	add.w	r6, r0, #270	; 0x10e
 80119cc:	e7be      	b.n	801194c <_ZNK8touchgfx4Line16drawCanvasWidgetERKNS_4RectE+0x3c>
 80119ce:	6de2      	ldr	r2, [r4, #92]	; 0x5c
 80119d0:	6ce1      	ldr	r1, [r4, #76]	; 0x4c
 80119d2:	a804      	add	r0, sp, #16
 80119d4:	f014 ffad 	bl	8026932 <_ZN8touchgfx6Canvas6lineToENS_7CWRUtil2Q5ES2_>
 80119d8:	6e22      	ldr	r2, [r4, #96]	; 0x60
 80119da:	6d21      	ldr	r1, [r4, #80]	; 0x50
 80119dc:	a804      	add	r0, sp, #16
 80119de:	f014 ffa8 	bl	8026932 <_ZN8touchgfx6Canvas6lineToENS_7CWRUtil2Q5ES2_>
 80119e2:	6ee5      	ldr	r5, [r4, #108]	; 0x6c
 80119e4:	f1c5 05b4 	rsb	r5, r5, #180	; 0xb4
 80119e8:	2d00      	cmp	r5, #0
 80119ea:	dd31      	ble.n	8011a50 <_ZNK8touchgfx4Line16drawCanvasWidgetERKNS_4RectE+0x140>
 80119ec:	eb05 0806 	add.w	r8, r5, r6
 80119f0:	4640      	mov	r0, r8
 80119f2:	f7ff fdaf 	bl	8011554 <_ZN8touchgfx7CWRUtil4sineEi>
 80119f6:	a902      	add	r1, sp, #8
 80119f8:	9002      	str	r0, [sp, #8]
 80119fa:	a801      	add	r0, sp, #4
 80119fc:	f7ff fc92 	bl	8011324 <_ZNK8touchgfx7CWRUtil2Q5mlERKNS0_3Q15E>
 8011a00:	6ae1      	ldr	r1, [r4, #44]	; 0x2c
 8011a02:	1847      	adds	r7, r0, r1
 8011a04:	f1c8 005a 	rsb	r0, r8, #90	; 0x5a
 8011a08:	f7ff fda4 	bl	8011554 <_ZN8touchgfx7CWRUtil4sineEi>
 8011a0c:	a903      	add	r1, sp, #12
 8011a0e:	9003      	str	r0, [sp, #12]
 8011a10:	a801      	add	r0, sp, #4
 8011a12:	f7ff fc87 	bl	8011324 <_ZNK8touchgfx7CWRUtil2Q5mlERKNS0_3Q15E>
 8011a16:	6b22      	ldr	r2, [r4, #48]	; 0x30
 8011a18:	4639      	mov	r1, r7
 8011a1a:	1a12      	subs	r2, r2, r0
 8011a1c:	a804      	add	r0, sp, #16
 8011a1e:	f014 ff88 	bl	8026932 <_ZN8touchgfx6Canvas6lineToENS_7CWRUtil2Q5ES2_>
 8011a22:	6ee3      	ldr	r3, [r4, #108]	; 0x6c
 8011a24:	1aed      	subs	r5, r5, r3
 8011a26:	e7df      	b.n	80119e8 <_ZNK8touchgfx4Line16drawCanvasWidgetERKNS_4RectE+0xd8>
 8011a28:	6d62      	ldr	r2, [r4, #84]	; 0x54
 8011a2a:	6c61      	ldr	r1, [r4, #68]	; 0x44
 8011a2c:	a804      	add	r0, sp, #16
 8011a2e:	f014 ff33 	bl	8026898 <_ZN8touchgfx6Canvas6moveToENS_7CWRUtil2Q5ES2_>
 8011a32:	6da2      	ldr	r2, [r4, #88]	; 0x58
 8011a34:	6ca1      	ldr	r1, [r4, #72]	; 0x48
 8011a36:	a804      	add	r0, sp, #16
 8011a38:	f014 ff7b 	bl	8026932 <_ZN8touchgfx6Canvas6lineToENS_7CWRUtil2Q5ES2_>
 8011a3c:	6de2      	ldr	r2, [r4, #92]	; 0x5c
 8011a3e:	6ce1      	ldr	r1, [r4, #76]	; 0x4c
 8011a40:	a804      	add	r0, sp, #16
 8011a42:	f014 ff76 	bl	8026932 <_ZN8touchgfx6Canvas6lineToENS_7CWRUtil2Q5ES2_>
 8011a46:	6e22      	ldr	r2, [r4, #96]	; 0x60
 8011a48:	6d21      	ldr	r1, [r4, #80]	; 0x50
 8011a4a:	a804      	add	r0, sp, #16
 8011a4c:	f014 ff71 	bl	8026932 <_ZN8touchgfx6Canvas6lineToENS_7CWRUtil2Q5ES2_>
 8011a50:	21ff      	movs	r1, #255	; 0xff
 8011a52:	a804      	add	r0, sp, #16
 8011a54:	f014 fe5c 	bl	8026710 <_ZN8touchgfx6Canvas6renderEh>
 8011a58:	4b04      	ldr	r3, [pc, #16]	; (8011a6c <_ZNK8touchgfx4Line16drawCanvasWidgetERKNS_4RectE+0x15c>)
 8011a5a:	9304      	str	r3, [sp, #16]
 8011a5c:	4604      	mov	r4, r0
 8011a5e:	a80c      	add	r0, sp, #48	; 0x30
 8011a60:	f001 f8cc 	bl	8012bfc <_ZN8touchgfx7OutlineD1Ev>
 8011a64:	4620      	mov	r0, r4
 8011a66:	b020      	add	sp, #128	; 0x80
 8011a68:	e8bd 81f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, pc}
 8011a6c:	0802ec60 	.word	0x0802ec60

08011a70 <_ZNK8touchgfx8TextArea12getWildcard1Ev>:
 8011a70:	2000      	movs	r0, #0
 8011a72:	4770      	bx	lr

08011a74 <_ZNK8touchgfx8TextArea12getAlignmentEv>:
 8011a74:	4b07      	ldr	r3, [pc, #28]	; (8011a94 <_ZNK8touchgfx8TextArea12getAlignmentEv+0x20>)
 8011a76:	8d82      	ldrh	r2, [r0, #44]	; 0x2c
 8011a78:	881b      	ldrh	r3, [r3, #0]
 8011a7a:	4293      	cmp	r3, r2
 8011a7c:	bf81      	itttt	hi
 8011a7e:	4b06      	ldrhi	r3, [pc, #24]	; (8011a98 <_ZNK8touchgfx8TextArea12getAlignmentEv+0x24>)
 8011a80:	681b      	ldrhi	r3, [r3, #0]
 8011a82:	eb03 0342 	addhi.w	r3, r3, r2, lsl #1
 8011a86:	7858      	ldrbhi	r0, [r3, #1]
 8011a88:	bf8c      	ite	hi
 8011a8a:	f000 0003 	andhi.w	r0, r0, #3
 8011a8e:	2000      	movls	r0, #0
 8011a90:	4770      	bx	lr
 8011a92:	bf00      	nop
 8011a94:	20012f80 	.word	0x20012f80
 8011a98:	20012f7c 	.word	0x20012f7c

08011a9c <_ZN8touchgfx8TextAreaD1Ev>:
 8011a9c:	4770      	bx	lr
	...

08011aa0 <_ZNK8touchgfx8TextArea13getTextHeightEv>:
 8011aa0:	e92d 41f0 	stmdb	sp!, {r4, r5, r6, r7, r8, lr}
 8011aa4:	4b10      	ldr	r3, [pc, #64]	; (8011ae8 <_ZNK8touchgfx8TextArea13getTextHeightEv+0x48>)
 8011aa6:	8d81      	ldrh	r1, [r0, #44]	; 0x2c
 8011aa8:	881b      	ldrh	r3, [r3, #0]
 8011aaa:	428b      	cmp	r3, r1
 8011aac:	4604      	mov	r4, r0
 8011aae:	d918      	bls.n	8011ae2 <_ZNK8touchgfx8TextArea13getTextHeightEv+0x42>
 8011ab0:	6803      	ldr	r3, [r0, #0]
 8011ab2:	6f9d      	ldr	r5, [r3, #120]	; 0x78
 8011ab4:	4b0d      	ldr	r3, [pc, #52]	; (8011aec <_ZNK8touchgfx8TextArea13getTextHeightEv+0x4c>)
 8011ab6:	6818      	ldr	r0, [r3, #0]
 8011ab8:	f7f6 fb58 	bl	800816c <_ZNK8touchgfx5Texts7getTextEt>
 8011abc:	6823      	ldr	r3, [r4, #0]
 8011abe:	4606      	mov	r6, r0
 8011ac0:	6fdb      	ldr	r3, [r3, #124]	; 0x7c
 8011ac2:	4620      	mov	r0, r4
 8011ac4:	4798      	blx	r3
 8011ac6:	6823      	ldr	r3, [r4, #0]
 8011ac8:	4607      	mov	r7, r0
 8011aca:	f8d3 3080 	ldr.w	r3, [r3, #128]	; 0x80
 8011ace:	4620      	mov	r0, r4
 8011ad0:	4798      	blx	r3
 8011ad2:	463a      	mov	r2, r7
 8011ad4:	4603      	mov	r3, r0
 8011ad6:	4631      	mov	r1, r6
 8011ad8:	4620      	mov	r0, r4
 8011ada:	46ac      	mov	ip, r5
 8011adc:	e8bd 41f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, lr}
 8011ae0:	4760      	bx	ip
 8011ae2:	2000      	movs	r0, #0
 8011ae4:	e8bd 81f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, pc}
 8011ae8:	20012f80 	.word	0x20012f80
 8011aec:	20012f88 	.word	0x20012f88

08011af0 <_ZNK8touchgfx8TextArea12getTextWidthEv>:
 8011af0:	e92d 43f7 	stmdb	sp!, {r0, r1, r2, r4, r5, r6, r7, r8, r9, lr}
 8011af4:	4b17      	ldr	r3, [pc, #92]	; (8011b54 <_ZNK8touchgfx8TextArea12getTextWidthEv+0x64>)
 8011af6:	8d81      	ldrh	r1, [r0, #44]	; 0x2c
 8011af8:	881b      	ldrh	r3, [r3, #0]
 8011afa:	428b      	cmp	r3, r1
 8011afc:	4604      	mov	r4, r0
 8011afe:	d926      	bls.n	8011b4e <_ZNK8touchgfx8TextArea12getTextWidthEv+0x5e>
 8011b00:	4b15      	ldr	r3, [pc, #84]	; (8011b58 <_ZNK8touchgfx8TextArea12getTextWidthEv+0x68>)
 8011b02:	681b      	ldr	r3, [r3, #0]
 8011b04:	eb03 0241 	add.w	r2, r3, r1, lsl #1
 8011b08:	f813 0011 	ldrb.w	r0, [r3, r1, lsl #1]
 8011b0c:	4b13      	ldr	r3, [pc, #76]	; (8011b5c <_ZNK8touchgfx8TextArea12getTextWidthEv+0x6c>)
 8011b0e:	7855      	ldrb	r5, [r2, #1]
 8011b10:	681b      	ldr	r3, [r3, #0]
 8011b12:	f853 6020 	ldr.w	r6, [r3, r0, lsl #2]
 8011b16:	6833      	ldr	r3, [r6, #0]
 8011b18:	69df      	ldr	r7, [r3, #28]
 8011b1a:	4b11      	ldr	r3, [pc, #68]	; (8011b60 <_ZNK8touchgfx8TextArea12getTextWidthEv+0x70>)
 8011b1c:	6818      	ldr	r0, [r3, #0]
 8011b1e:	f7f6 fb25 	bl	800816c <_ZNK8touchgfx5Texts7getTextEt>
 8011b22:	6823      	ldr	r3, [r4, #0]
 8011b24:	4680      	mov	r8, r0
 8011b26:	6fdb      	ldr	r3, [r3, #124]	; 0x7c
 8011b28:	4620      	mov	r0, r4
 8011b2a:	4798      	blx	r3
 8011b2c:	6823      	ldr	r3, [r4, #0]
 8011b2e:	4681      	mov	r9, r0
 8011b30:	f8d3 3080 	ldr.w	r3, [r3, #128]	; 0x80
 8011b34:	4620      	mov	r0, r4
 8011b36:	4798      	blx	r3
 8011b38:	f3c5 0581 	ubfx	r5, r5, #2, #2
 8011b3c:	9000      	str	r0, [sp, #0]
 8011b3e:	464b      	mov	r3, r9
 8011b40:	4642      	mov	r2, r8
 8011b42:	4629      	mov	r1, r5
 8011b44:	4630      	mov	r0, r6
 8011b46:	47b8      	blx	r7
 8011b48:	b003      	add	sp, #12
 8011b4a:	e8bd 83f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, pc}
 8011b4e:	2000      	movs	r0, #0
 8011b50:	e7fa      	b.n	8011b48 <_ZNK8touchgfx8TextArea12getTextWidthEv+0x58>
 8011b52:	bf00      	nop
 8011b54:	20012f80 	.word	0x20012f80
 8011b58:	20012f7c 	.word	0x20012f7c
 8011b5c:	20012f84 	.word	0x20012f84
 8011b60:	20012f88 	.word	0x20012f88

08011b64 <_ZNK8touchgfx8TextArea19calculateTextHeightEPKtz>:
 8011b64:	b40e      	push	{r1, r2, r3}
 8011b66:	e92d 47f0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, lr}
 8011b6a:	4b2f      	ldr	r3, [pc, #188]	; (8011c28 <_ZNK8touchgfx8TextArea19calculateTextHeightEPKtz+0xc4>)
 8011b6c:	881a      	ldrh	r2, [r3, #0]
 8011b6e:	8d83      	ldrh	r3, [r0, #44]	; 0x2c
 8011b70:	429a      	cmp	r2, r3
 8011b72:	b09d      	sub	sp, #116	; 0x74
 8011b74:	4604      	mov	r4, r0
 8011b76:	d954      	bls.n	8011c22 <_ZNK8touchgfx8TextArea19calculateTextHeightEPKtz+0xbe>
 8011b78:	f8df 90b0 	ldr.w	r9, [pc, #176]	; 8011c2c <_ZNK8touchgfx8TextArea19calculateTextHeightEPKtz+0xc8>
 8011b7c:	f8df 80b0 	ldr.w	r8, [pc, #176]	; 8011c30 <_ZNK8touchgfx8TextArea19calculateTextHeightEPKtz+0xcc>
 8011b80:	aa26      	add	r2, sp, #152	; 0x98
 8011b82:	9202      	str	r2, [sp, #8]
 8011b84:	f8d9 2000 	ldr.w	r2, [r9]
 8011b88:	f812 2013 	ldrb.w	r2, [r2, r3, lsl #1]
 8011b8c:	f8d8 3000 	ldr.w	r3, [r8]
 8011b90:	f853 5022 	ldr.w	r5, [r3, r2, lsl #2]
 8011b94:	682b      	ldr	r3, [r5, #0]
 8011b96:	4628      	mov	r0, r5
 8011b98:	6b9b      	ldr	r3, [r3, #56]	; 0x38
 8011b9a:	4798      	blx	r3
 8011b9c:	b207      	sxth	r7, r0
 8011b9e:	4606      	mov	r6, r0
 8011ba0:	a803      	add	r0, sp, #12
 8011ba2:	f005 fa57 	bl	8017054 <_ZN8touchgfx12TextProviderC1Ev>
 8011ba6:	682b      	ldr	r3, [r5, #0]
 8011ba8:	4628      	mov	r0, r5
 8011baa:	6cdb      	ldr	r3, [r3, #76]	; 0x4c
 8011bac:	4798      	blx	r3
 8011bae:	682b      	ldr	r3, [r5, #0]
 8011bb0:	4682      	mov	sl, r0
 8011bb2:	6d1b      	ldr	r3, [r3, #80]	; 0x50
 8011bb4:	4628      	mov	r0, r5
 8011bb6:	4798      	blx	r3
 8011bb8:	4653      	mov	r3, sl
 8011bba:	9000      	str	r0, [sp, #0]
 8011bbc:	9a02      	ldr	r2, [sp, #8]
 8011bbe:	9925      	ldr	r1, [sp, #148]	; 0x94
 8011bc0:	a803      	add	r0, sp, #12
 8011bc2:	f005 faa2 	bl	801710a <_ZN8touchgfx12TextProvider10initializeEPKtSt9__va_listS2_PKNS_24FontContextualFormsTableE>
 8011bc6:	8da2      	ldrh	r2, [r4, #44]	; 0x2c
 8011bc8:	f8d9 3000 	ldr.w	r3, [r9]
 8011bcc:	f894 c037 	ldrb.w	ip, [r4, #55]	; 0x37
 8011bd0:	8925      	ldrh	r5, [r4, #8]
 8011bd2:	f813 0012 	ldrb.w	r0, [r3, r2, lsl #1]
 8011bd6:	eb03 0142 	add.w	r1, r3, r2, lsl #1
 8011bda:	eba5 050c 	sub.w	r5, r5, ip
 8011bde:	784a      	ldrb	r2, [r1, #1]
 8011be0:	f8d8 3000 	ldr.w	r3, [r8]
 8011be4:	f894 1039 	ldrb.w	r1, [r4, #57]	; 0x39
 8011be8:	b22d      	sxth	r5, r5
 8011bea:	9500      	str	r5, [sp, #0]
 8011bec:	f853 3020 	ldr.w	r3, [r3, r0, lsl #2]
 8011bf0:	f3c2 0281 	ubfx	r2, r2, #2, #2
 8011bf4:	a803      	add	r0, sp, #12
 8011bf6:	f002 feed 	bl	80149d4 <_ZN8touchgfx3LCD11getNumLinesERNS_12TextProviderENS_14WideTextActionEhPKNS_4FontEs>
 8011bfa:	f9b4 2034 	ldrsh.w	r2, [r4, #52]	; 0x34
 8011bfe:	18b9      	adds	r1, r7, r2
 8011c00:	2900      	cmp	r1, #0
 8011c02:	b203      	sxth	r3, r0
 8011c04:	dd0b      	ble.n	8011c1e <_ZNK8touchgfx8TextArea19calculateTextHeightEPKtz+0xba>
 8011c06:	3b01      	subs	r3, #1
 8011c08:	fb13 f302 	smulbb	r3, r3, r2
 8011c0c:	fb16 3300 	smlabb	r3, r6, r0, r3
 8011c10:	b21f      	sxth	r7, r3
 8011c12:	4638      	mov	r0, r7
 8011c14:	b01d      	add	sp, #116	; 0x74
 8011c16:	e8bd 47f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, lr}
 8011c1a:	b003      	add	sp, #12
 8011c1c:	4770      	bx	lr
 8011c1e:	2b00      	cmp	r3, #0
 8011c20:	dcf7      	bgt.n	8011c12 <_ZNK8touchgfx8TextArea19calculateTextHeightEPKtz+0xae>
 8011c22:	2700      	movs	r7, #0
 8011c24:	e7f5      	b.n	8011c12 <_ZNK8touchgfx8TextArea19calculateTextHeightEPKtz+0xae>
 8011c26:	bf00      	nop
 8011c28:	20012f80 	.word	0x20012f80
 8011c2c:	20012f7c 	.word	0x20012f7c
 8011c30:	20012f84 	.word	0x20012f84

08011c34 <_ZNK8touchgfx8TextArea21calculateBoundingAreaEv>:
 8011c34:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 8011c38:	4bbc      	ldr	r3, [pc, #752]	; (8011f2c <_ZNK8touchgfx8TextArea21calculateBoundingAreaEv+0x2f8>)
 8011c3a:	460c      	mov	r4, r1
 8011c3c:	881b      	ldrh	r3, [r3, #0]
 8011c3e:	8d89      	ldrh	r1, [r1, #44]	; 0x2c
 8011c40:	428b      	cmp	r3, r1
 8011c42:	b0a9      	sub	sp, #164	; 0xa4
 8011c44:	4680      	mov	r8, r0
 8011c46:	d809      	bhi.n	8011c5c <_ZNK8touchgfx8TextArea21calculateBoundingAreaEv+0x28>
 8011c48:	2300      	movs	r3, #0
 8011c4a:	f04f 32ff 	mov.w	r2, #4294967295
 8011c4e:	e9c0 3200 	strd	r3, r2, [r0]
 8011c52:	6083      	str	r3, [r0, #8]
 8011c54:	4640      	mov	r0, r8
 8011c56:	b029      	add	sp, #164	; 0xa4
 8011c58:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
 8011c5c:	4eb4      	ldr	r6, [pc, #720]	; (8011f30 <_ZNK8touchgfx8TextArea21calculateBoundingAreaEv+0x2fc>)
 8011c5e:	6833      	ldr	r3, [r6, #0]
 8011c60:	f813 2011 	ldrb.w	r2, [r3, r1, lsl #1]
 8011c64:	4bb3      	ldr	r3, [pc, #716]	; (8011f34 <_ZNK8touchgfx8TextArea21calculateBoundingAreaEv+0x300>)
 8011c66:	681b      	ldr	r3, [r3, #0]
 8011c68:	f853 5022 	ldr.w	r5, [r3, r2, lsl #2]
 8011c6c:	4bb2      	ldr	r3, [pc, #712]	; (8011f38 <_ZNK8touchgfx8TextArea21calculateBoundingAreaEv+0x304>)
 8011c6e:	6818      	ldr	r0, [r3, #0]
 8011c70:	f7f6 fa7c 	bl	800816c <_ZNK8touchgfx5Texts7getTextEt>
 8011c74:	682b      	ldr	r3, [r5, #0]
 8011c76:	4681      	mov	r9, r0
 8011c78:	6b9b      	ldr	r3, [r3, #56]	; 0x38
 8011c7a:	4628      	mov	r0, r5
 8011c7c:	4798      	blx	r3
 8011c7e:	8ea7      	ldrh	r7, [r4, #52]	; 0x34
 8011c80:	b203      	sxth	r3, r0
 8011c82:	4407      	add	r7, r0
 8011c84:	9304      	str	r3, [sp, #16]
 8011c86:	b2bb      	uxth	r3, r7
 8011c88:	9303      	str	r3, [sp, #12]
 8011c8a:	f894 3039 	ldrb.w	r3, [r4, #57]	; 0x39
 8011c8e:	4682      	mov	sl, r0
 8011c90:	a80f      	add	r0, sp, #60	; 0x3c
 8011c92:	2b00      	cmp	r3, #0
 8011c94:	f040 80a6 	bne.w	8011de4 <_ZNK8touchgfx8TextArea21calculateBoundingAreaEv+0x1b0>
 8011c98:	f005 f9dc 	bl	8017054 <_ZN8touchgfx12TextProviderC1Ev>
 8011c9c:	682b      	ldr	r3, [r5, #0]
 8011c9e:	4628      	mov	r0, r5
 8011ca0:	6cdb      	ldr	r3, [r3, #76]	; 0x4c
 8011ca2:	4798      	blx	r3
 8011ca4:	682b      	ldr	r3, [r5, #0]
 8011ca6:	4606      	mov	r6, r0
 8011ca8:	6d1b      	ldr	r3, [r3, #80]	; 0x50
 8011caa:	4628      	mov	r0, r5
 8011cac:	4798      	blx	r3
 8011cae:	6823      	ldr	r3, [r4, #0]
 8011cb0:	4607      	mov	r7, r0
 8011cb2:	6fdb      	ldr	r3, [r3, #124]	; 0x7c
 8011cb4:	4620      	mov	r0, r4
 8011cb6:	4798      	blx	r3
 8011cb8:	6823      	ldr	r3, [r4, #0]
 8011cba:	4683      	mov	fp, r0
 8011cbc:	f8d3 3080 	ldr.w	r3, [r3, #128]	; 0x80
 8011cc0:	4620      	mov	r0, r4
 8011cc2:	4798      	blx	r3
 8011cc4:	463b      	mov	r3, r7
 8011cc6:	e9cd b000 	strd	fp, r0, [sp]
 8011cca:	4649      	mov	r1, r9
 8011ccc:	4632      	mov	r2, r6
 8011cce:	a80f      	add	r0, sp, #60	; 0x3c
 8011cd0:	f005 fa30 	bl	8017134 <_ZN8touchgfx12TextProvider10initializeEPKtS2_PKNS_24FontContextualFormsTableEz>
 8011cd4:	f894 3038 	ldrb.w	r3, [r4, #56]	; 0x38
 8011cd8:	f8df b254 	ldr.w	fp, [pc, #596]	; 8011f30 <_ZNK8touchgfx8TextArea21calculateBoundingAreaEv+0x2fc>
 8011cdc:	f013 0ffd 	tst.w	r3, #253	; 0xfd
 8011ce0:	f04f 0600 	mov.w	r6, #0
 8011ce4:	bf0c      	ite	eq
 8011ce6:	f9b4 900a 	ldrsheq.w	r9, [r4, #10]
 8011cea:	f9b4 9008 	ldrshne.w	r9, [r4, #8]
 8011cee:	4637      	mov	r7, r6
 8011cf0:	8da2      	ldrh	r2, [r4, #44]	; 0x2c
 8011cf2:	f8db 3000 	ldr.w	r3, [fp]
 8011cf6:	eb03 0342 	add.w	r3, r3, r2, lsl #1
 8011cfa:	4629      	mov	r1, r5
 8011cfc:	785b      	ldrb	r3, [r3, #1]
 8011cfe:	f647 72ff 	movw	r2, #32767	; 0x7fff
 8011d02:	f3c3 0381 	ubfx	r3, r3, #2, #2
 8011d06:	a80f      	add	r0, sp, #60	; 0x3c
 8011d08:	f002 fb7f 	bl	801440a <_ZN8touchgfx3LCD11stringWidthERNS_12TextProviderERKNS_4FontEih>
 8011d0c:	9b03      	ldr	r3, [sp, #12]
 8011d0e:	4286      	cmp	r6, r0
 8011d10:	bfb8      	it	lt
 8011d12:	4606      	movlt	r6, r0
 8011d14:	3701      	adds	r7, #1
 8011d16:	eba9 0903 	sub.w	r9, r9, r3
 8011d1a:	a80f      	add	r0, sp, #60	; 0x3c
 8011d1c:	b236      	sxth	r6, r6
 8011d1e:	b2bf      	uxth	r7, r7
 8011d20:	fa0f f989 	sxth.w	r9, r9
 8011d24:	f005 f9bd 	bl	80170a2 <_ZN8touchgfx12TextProvider11endOfStringEv>
 8011d28:	b918      	cbnz	r0, 8011d32 <_ZNK8touchgfx8TextArea21calculateBoundingAreaEv+0xfe>
 8011d2a:	7a2b      	ldrb	r3, [r5, #8]
 8011d2c:	444b      	add	r3, r9
 8011d2e:	2b00      	cmp	r3, #0
 8011d30:	dcde      	bgt.n	8011cf0 <_ZNK8touchgfx8TextArea21calculateBoundingAreaEv+0xbc>
 8011d32:	9b03      	ldr	r3, [sp, #12]
 8011d34:	9a04      	ldr	r2, [sp, #16]
 8011d36:	f895 9009 	ldrb.w	r9, [r5, #9]
 8011d3a:	fb13 f707 	smulbb	r7, r3, r7
 8011d3e:	8ea3      	ldrh	r3, [r4, #52]	; 0x34
 8011d40:	1aff      	subs	r7, r7, r3
 8011d42:	b2bf      	uxth	r7, r7
 8011d44:	b23b      	sxth	r3, r7
 8011d46:	429a      	cmp	r2, r3
 8011d48:	bfa8      	it	ge
 8011d4a:	4657      	movge	r7, sl
 8011d4c:	f894 3038 	ldrb.w	r3, [r4, #56]	; 0x38
 8011d50:	f013 0ffd 	tst.w	r3, #253	; 0xfd
 8011d54:	6823      	ldr	r3, [r4, #0]
 8011d56:	bf08      	it	eq
 8011d58:	f9b4 a008 	ldrsheq.w	sl, [r4, #8]
 8011d5c:	6edb      	ldr	r3, [r3, #108]	; 0x6c
 8011d5e:	bf18      	it	ne
 8011d60:	f9b4 a00a 	ldrshne.w	sl, [r4, #10]
 8011d64:	4620      	mov	r0, r4
 8011d66:	4798      	blx	r3
 8011d68:	444f      	add	r7, r9
 8011d6a:	fa1f f987 	uxth.w	r9, r7
 8011d6e:	2801      	cmp	r0, #1
 8011d70:	fa0f f789 	sxth.w	r7, r9
 8011d74:	b2b3      	uxth	r3, r6
 8011d76:	f000 80e1 	beq.w	8011f3c <_ZNK8touchgfx8TextArea21calculateBoundingAreaEv+0x308>
 8011d7a:	2802      	cmp	r0, #2
 8011d7c:	f894 6037 	ldrb.w	r6, [r4, #55]	; 0x37
 8011d80:	f000 80e2 	beq.w	8011f48 <_ZNK8touchgfx8TextArea21calculateBoundingAreaEv+0x314>
 8011d84:	7aea      	ldrb	r2, [r5, #11]
 8011d86:	7b2d      	ldrb	r5, [r5, #12]
 8011d88:	b236      	sxth	r6, r6
 8011d8a:	1ab6      	subs	r6, r6, r2
 8011d8c:	442a      	add	r2, r5
 8011d8e:	4413      	add	r3, r2
 8011d90:	f894 2038 	ldrb.w	r2, [r4, #56]	; 0x38
 8011d94:	fa1f fa86 	uxth.w	sl, r6
 8011d98:	b29b      	uxth	r3, r3
 8011d9a:	2a02      	cmp	r2, #2
 8011d9c:	fa0f fb8a 	sxth.w	fp, sl
 8011da0:	b21e      	sxth	r6, r3
 8011da2:	f000 80d5 	beq.w	8011f50 <_ZNK8touchgfx8TextArea21calculateBoundingAreaEv+0x31c>
 8011da6:	2a03      	cmp	r2, #3
 8011da8:	f000 80dd 	beq.w	8011f66 <_ZNK8touchgfx8TextArea21calculateBoundingAreaEv+0x332>
 8011dac:	2a01      	cmp	r2, #1
 8011dae:	f040 80e5 	bne.w	8011f7c <_ZNK8touchgfx8TextArea21calculateBoundingAreaEv+0x348>
 8011db2:	8925      	ldrh	r5, [r4, #8]
 8011db4:	4633      	mov	r3, r6
 8011db6:	eba5 0909 	sub.w	r9, r5, r9
 8011dba:	463e      	mov	r6, r7
 8011dbc:	465d      	mov	r5, fp
 8011dbe:	461f      	mov	r7, r3
 8011dc0:	fa0f fb89 	sxth.w	fp, r9
 8011dc4:	4b5c      	ldr	r3, [pc, #368]	; (8011f38 <_ZNK8touchgfx8TextArea21calculateBoundingAreaEv+0x304>)
 8011dc6:	8da1      	ldrh	r1, [r4, #44]	; 0x2c
 8011dc8:	6818      	ldr	r0, [r3, #0]
 8011dca:	f7f6 f9cf 	bl	800816c <_ZNK8touchgfx5Texts7getTextEt>
 8011dce:	f8a8 b000 	strh.w	fp, [r8]
 8011dd2:	f8a8 5002 	strh.w	r5, [r8, #2]
 8011dd6:	f8a8 6004 	strh.w	r6, [r8, #4]
 8011dda:	f8a8 7006 	strh.w	r7, [r8, #6]
 8011dde:	f8c8 0008 	str.w	r0, [r8, #8]
 8011de2:	e737      	b.n	8011c54 <_ZNK8touchgfx8TextArea21calculateBoundingAreaEv+0x20>
 8011de4:	f005 f936 	bl	8017054 <_ZN8touchgfx12TextProviderC1Ev>
 8011de8:	682b      	ldr	r3, [r5, #0]
 8011dea:	4628      	mov	r0, r5
 8011dec:	6cdb      	ldr	r3, [r3, #76]	; 0x4c
 8011dee:	4798      	blx	r3
 8011df0:	682b      	ldr	r3, [r5, #0]
 8011df2:	4607      	mov	r7, r0
 8011df4:	6d1b      	ldr	r3, [r3, #80]	; 0x50
 8011df6:	4628      	mov	r0, r5
 8011df8:	4798      	blx	r3
 8011dfa:	6823      	ldr	r3, [r4, #0]
 8011dfc:	4683      	mov	fp, r0
 8011dfe:	6fdb      	ldr	r3, [r3, #124]	; 0x7c
 8011e00:	4620      	mov	r0, r4
 8011e02:	4798      	blx	r3
 8011e04:	6822      	ldr	r2, [r4, #0]
 8011e06:	9005      	str	r0, [sp, #20]
 8011e08:	f8d2 2080 	ldr.w	r2, [r2, #128]	; 0x80
 8011e0c:	4620      	mov	r0, r4
 8011e0e:	4790      	blx	r2
 8011e10:	9b05      	ldr	r3, [sp, #20]
 8011e12:	9001      	str	r0, [sp, #4]
 8011e14:	463a      	mov	r2, r7
 8011e16:	4649      	mov	r1, r9
 8011e18:	9300      	str	r3, [sp, #0]
 8011e1a:	a80f      	add	r0, sp, #60	; 0x3c
 8011e1c:	465b      	mov	r3, fp
 8011e1e:	f005 f989 	bl	8017134 <_ZN8touchgfx12TextProvider10initializeEPKtS2_PKNS_24FontContextualFormsTableEz>
 8011e22:	f894 3038 	ldrb.w	r3, [r4, #56]	; 0x38
 8011e26:	f9b4 9008 	ldrsh.w	r9, [r4, #8]
 8011e2a:	8da1      	ldrh	r1, [r4, #44]	; 0x2c
 8011e2c:	f894 0039 	ldrb.w	r0, [r4, #57]	; 0x39
 8011e30:	f013 0ffd 	tst.w	r3, #253	; 0xfd
 8011e34:	f9b4 300a 	ldrsh.w	r3, [r4, #10]
 8011e38:	bf0a      	itet	eq
 8011e3a:	464a      	moveq	r2, r9
 8011e3c:	461a      	movne	r2, r3
 8011e3e:	4699      	moveq	r9, r3
 8011e40:	f894 3037 	ldrb.w	r3, [r4, #55]	; 0x37
 8011e44:	1ad2      	subs	r2, r2, r3
 8011e46:	6833      	ldr	r3, [r6, #0]
 8011e48:	f9b4 6034 	ldrsh.w	r6, [r4, #52]	; 0x34
 8011e4c:	eb03 0341 	add.w	r3, r3, r1, lsl #1
 8011e50:	af0f      	add	r7, sp, #60	; 0x3c
 8011e52:	7859      	ldrb	r1, [r3, #1]
 8011e54:	9707      	str	r7, [sp, #28]
 8011e56:	2300      	movs	r3, #0
 8011e58:	f3c1 0181 	ubfx	r1, r1, #2, #2
 8011e5c:	f8ad 3018 	strh.w	r3, [sp, #24]
 8011e60:	f88d 1020 	strb.w	r1, [sp, #32]
 8011e64:	f88d 0021 	strb.w	r0, [sp, #33]	; 0x21
 8011e68:	9509      	str	r5, [sp, #36]	; 0x24
 8011e6a:	f8ad 2028 	strh.w	r2, [sp, #40]	; 0x28
 8011e6e:	f8ad 902a 	strh.w	r9, [sp, #42]	; 0x2a
 8011e72:	f8ad 602c 	strh.w	r6, [sp, #44]	; 0x2c
 8011e76:	f8ad 302e 	strh.w	r3, [sp, #46]	; 0x2e
 8011e7a:	f8ad 3030 	strh.w	r3, [sp, #48]	; 0x30
 8011e7e:	f8ad 3032 	strh.w	r3, [sp, #50]	; 0x32
 8011e82:	f8ad 3034 	strh.w	r3, [sp, #52]	; 0x34
 8011e86:	f8ad 3036 	strh.w	r3, [sp, #54]	; 0x36
 8011e8a:	f8ad 3038 	strh.w	r3, [sp, #56]	; 0x38
 8011e8e:	f88d 303a 	strb.w	r3, [sp, #58]	; 0x3a
 8011e92:	b350      	cbz	r0, 8011eea <_ZNK8touchgfx8TextArea21calculateBoundingAreaEv+0x2b6>
 8011e94:	682b      	ldr	r3, [r5, #0]
 8011e96:	4628      	mov	r0, r5
 8011e98:	695b      	ldr	r3, [r3, #20]
 8011e9a:	4798      	blx	r3
 8011e9c:	4607      	mov	r7, r0
 8011e9e:	b320      	cbz	r0, 8011eea <_ZNK8touchgfx8TextArea21calculateBoundingAreaEv+0x2b6>
 8011ea0:	9809      	ldr	r0, [sp, #36]	; 0x24
 8011ea2:	6803      	ldr	r3, [r0, #0]
 8011ea4:	4639      	mov	r1, r7
 8011ea6:	68db      	ldr	r3, [r3, #12]
 8011ea8:	4798      	blx	r3
 8011eaa:	4606      	mov	r6, r0
 8011eac:	b1e8      	cbz	r0, 8011eea <_ZNK8touchgfx8TextArea21calculateBoundingAreaEv+0x2b6>
 8011eae:	7b43      	ldrb	r3, [r0, #13]
 8011eb0:	7a82      	ldrb	r2, [r0, #10]
 8011eb2:	005b      	lsls	r3, r3, #1
 8011eb4:	f403 7380 	and.w	r3, r3, #256	; 0x100
 8011eb8:	4313      	orrs	r3, r2
 8011eba:	f8ad 3038 	strh.w	r3, [sp, #56]	; 0x38
 8011ebe:	f89d 3021 	ldrb.w	r3, [sp, #33]	; 0x21
 8011ec2:	2b06      	cmp	r3, #6
 8011ec4:	d111      	bne.n	8011eea <_ZNK8touchgfx8TextArea21calculateBoundingAreaEv+0x2b6>
 8011ec6:	9809      	ldr	r0, [sp, #36]	; 0x24
 8011ec8:	6803      	ldr	r3, [r0, #0]
 8011eca:	4632      	mov	r2, r6
 8011ecc:	6c5b      	ldr	r3, [r3, #68]	; 0x44
 8011ece:	4639      	mov	r1, r7
 8011ed0:	4798      	blx	r3
 8011ed2:	7b73      	ldrb	r3, [r6, #13]
 8011ed4:	005b      	lsls	r3, r3, #1
 8011ed6:	f403 7280 	and.w	r2, r3, #256	; 0x100
 8011eda:	7ab3      	ldrb	r3, [r6, #10]
 8011edc:	4313      	orrs	r3, r2
 8011ede:	4418      	add	r0, r3
 8011ee0:	f8bd 3038 	ldrh.w	r3, [sp, #56]	; 0x38
 8011ee4:	4418      	add	r0, r3
 8011ee6:	f8ad 0038 	strh.w	r0, [sp, #56]	; 0x38
 8011eea:	2600      	movs	r6, #0
 8011eec:	4637      	mov	r7, r6
 8011eee:	a806      	add	r0, sp, #24
 8011ef0:	f002 fc6c 	bl	80147cc <_ZN8touchgfx3LCD22WideTextInternalStruct23scanStringLengthForLineEv>
 8011ef4:	f8bd 0036 	ldrh.w	r0, [sp, #54]	; 0x36
 8011ef8:	9b03      	ldr	r3, [sp, #12]
 8011efa:	4286      	cmp	r6, r0
 8011efc:	eba9 0903 	sub.w	r9, r9, r3
 8011f00:	f8bd 3018 	ldrh.w	r3, [sp, #24]
 8011f04:	bfb8      	it	lt
 8011f06:	4606      	movlt	r6, r0
 8011f08:	3701      	adds	r7, #1
 8011f0a:	b236      	sxth	r6, r6
 8011f0c:	b2bf      	uxth	r7, r7
 8011f0e:	fa0f f989 	sxth.w	r9, r9
 8011f12:	2b00      	cmp	r3, #0
 8011f14:	f43f af0d 	beq.w	8011d32 <_ZNK8touchgfx8TextArea21calculateBoundingAreaEv+0xfe>
 8011f18:	f89d 303a 	ldrb.w	r3, [sp, #58]	; 0x3a
 8011f1c:	2b00      	cmp	r3, #0
 8011f1e:	f47f af08 	bne.w	8011d32 <_ZNK8touchgfx8TextArea21calculateBoundingAreaEv+0xfe>
 8011f22:	7a2b      	ldrb	r3, [r5, #8]
 8011f24:	444b      	add	r3, r9
 8011f26:	2b00      	cmp	r3, #0
 8011f28:	dce1      	bgt.n	8011eee <_ZNK8touchgfx8TextArea21calculateBoundingAreaEv+0x2ba>
 8011f2a:	e702      	b.n	8011d32 <_ZNK8touchgfx8TextArea21calculateBoundingAreaEv+0xfe>
 8011f2c:	20012f80 	.word	0x20012f80
 8011f30:	20012f7c 	.word	0x20012f7c
 8011f34:	20012f84 	.word	0x20012f84
 8011f38:	20012f88 	.word	0x20012f88
 8011f3c:	ebaa 0606 	sub.w	r6, sl, r6
 8011f40:	2002      	movs	r0, #2
 8011f42:	fb96 f6f0 	sdiv	r6, r6, r0
 8011f46:	e71d      	b.n	8011d84 <_ZNK8touchgfx8TextArea21calculateBoundingAreaEv+0x150>
 8011f48:	441e      	add	r6, r3
 8011f4a:	ebaa 0606 	sub.w	r6, sl, r6
 8011f4e:	e719      	b.n	8011d84 <_ZNK8touchgfx8TextArea21calculateBoundingAreaEv+0x150>
 8011f50:	8925      	ldrh	r5, [r4, #8]
 8011f52:	1aed      	subs	r5, r5, r3
 8011f54:	eba5 050a 	sub.w	r5, r5, sl
 8011f58:	fa0f fb85 	sxth.w	fp, r5
 8011f5c:	8965      	ldrh	r5, [r4, #10]
 8011f5e:	eba5 0509 	sub.w	r5, r5, r9
 8011f62:	b22d      	sxth	r5, r5
 8011f64:	e72e      	b.n	8011dc4 <_ZNK8touchgfx8TextArea21calculateBoundingAreaEv+0x190>
 8011f66:	8965      	ldrh	r5, [r4, #10]
 8011f68:	1aed      	subs	r5, r5, r3
 8011f6a:	eba5 050a 	sub.w	r5, r5, sl
 8011f6e:	4633      	mov	r3, r6
 8011f70:	b22d      	sxth	r5, r5
 8011f72:	463e      	mov	r6, r7
 8011f74:	f04f 0b00 	mov.w	fp, #0
 8011f78:	461f      	mov	r7, r3
 8011f7a:	e723      	b.n	8011dc4 <_ZNK8touchgfx8TextArea21calculateBoundingAreaEv+0x190>
 8011f7c:	2500      	movs	r5, #0
 8011f7e:	e721      	b.n	8011dc4 <_ZNK8touchgfx8TextArea21calculateBoundingAreaEv+0x190>

08011f80 <_ZN8touchgfx8TextAreaD0Ev>:
 8011f80:	b510      	push	{r4, lr}
 8011f82:	2148      	movs	r1, #72	; 0x48
 8011f84:	4604      	mov	r4, r0
 8011f86:	f017 fa4a 	bl	802941e <_ZdlPvj>
 8011f8a:	4620      	mov	r0, r4
 8011f8c:	bd10      	pop	{r4, pc}
	...

08011f90 <_ZNK8touchgfx8TextArea17invalidateContentEv>:
 8011f90:	b513      	push	{r0, r1, r4, lr}
 8011f92:	f890 3036 	ldrb.w	r3, [r0, #54]	; 0x36
 8011f96:	4604      	mov	r4, r0
 8011f98:	b1fb      	cbz	r3, 8011fda <_ZNK8touchgfx8TextArea17invalidateContentEv+0x4a>
 8011f9a:	4b16      	ldr	r3, [pc, #88]	; (8011ff4 <_ZNK8touchgfx8TextArea17invalidateContentEv+0x64>)
 8011f9c:	8d81      	ldrh	r1, [r0, #44]	; 0x2c
 8011f9e:	881b      	ldrh	r3, [r3, #0]
 8011fa0:	428b      	cmp	r3, r1
 8011fa2:	d91a      	bls.n	8011fda <_ZNK8touchgfx8TextArea17invalidateContentEv+0x4a>
 8011fa4:	f9b0 3008 	ldrsh.w	r3, [r0, #8]
 8011fa8:	2b00      	cmp	r3, #0
 8011faa:	dd16      	ble.n	8011fda <_ZNK8touchgfx8TextArea17invalidateContentEv+0x4a>
 8011fac:	f9b0 300a 	ldrsh.w	r3, [r0, #10]
 8011fb0:	2b00      	cmp	r3, #0
 8011fb2:	dd12      	ble.n	8011fda <_ZNK8touchgfx8TextArea17invalidateContentEv+0x4a>
 8011fb4:	4b10      	ldr	r3, [pc, #64]	; (8011ff8 <_ZNK8touchgfx8TextArea17invalidateContentEv+0x68>)
 8011fb6:	6818      	ldr	r0, [r3, #0]
 8011fb8:	f7f6 f8d8 	bl	800816c <_ZNK8touchgfx5Texts7getTextEt>
 8011fbc:	f9b4 3042 	ldrsh.w	r3, [r4, #66]	; 0x42
 8011fc0:	6822      	ldr	r2, [r4, #0]
 8011fc2:	2b00      	cmp	r3, #0
 8011fc4:	db06      	blt.n	8011fd4 <_ZNK8touchgfx8TextArea17invalidateContentEv+0x44>
 8011fc6:	f9b4 3040 	ldrsh.w	r3, [r4, #64]	; 0x40
 8011fca:	2b00      	cmp	r3, #0
 8011fcc:	db02      	blt.n	8011fd4 <_ZNK8touchgfx8TextArea17invalidateContentEv+0x44>
 8011fce:	6c63      	ldr	r3, [r4, #68]	; 0x44
 8011fd0:	4298      	cmp	r0, r3
 8011fd2:	d004      	beq.n	8011fde <_ZNK8touchgfx8TextArea17invalidateContentEv+0x4e>
 8011fd4:	6953      	ldr	r3, [r2, #20]
 8011fd6:	4620      	mov	r0, r4
 8011fd8:	4798      	blx	r3
 8011fda:	b002      	add	sp, #8
 8011fdc:	bd10      	pop	{r4, pc}
 8011fde:	f104 013c 	add.w	r1, r4, #60	; 0x3c
 8011fe2:	c903      	ldmia	r1, {r0, r1}
 8011fe4:	466b      	mov	r3, sp
 8011fe6:	e883 0003 	stmia.w	r3, {r0, r1}
 8011fea:	6912      	ldr	r2, [r2, #16]
 8011fec:	4619      	mov	r1, r3
 8011fee:	4620      	mov	r0, r4
 8011ff0:	4790      	blx	r2
 8011ff2:	e7f2      	b.n	8011fda <_ZNK8touchgfx8TextArea17invalidateContentEv+0x4a>
 8011ff4:	20012f80 	.word	0x20012f80
 8011ff8:	20012f88 	.word	0x20012f88

08011ffc <_ZNK8touchgfx8TextArea4drawERKNS_4RectE>:
 8011ffc:	e92d 41f0 	stmdb	sp!, {r4, r5, r6, r7, r8, lr}
 8012000:	4b44      	ldr	r3, [pc, #272]	; (8012114 <_ZNK8touchgfx8TextArea4drawERKNS_4RectE+0x118>)
 8012002:	8d82      	ldrh	r2, [r0, #44]	; 0x2c
 8012004:	881b      	ldrh	r3, [r3, #0]
 8012006:	4293      	cmp	r3, r2
 8012008:	b08e      	sub	sp, #56	; 0x38
 801200a:	4604      	mov	r4, r0
 801200c:	d97e      	bls.n	801210c <_ZNK8touchgfx8TextArea4drawERKNS_4RectE+0x110>
 801200e:	6808      	ldr	r0, [r1, #0]
 8012010:	4d41      	ldr	r5, [pc, #260]	; (8012118 <_ZNK8touchgfx8TextArea4drawERKNS_4RectE+0x11c>)
 8012012:	6849      	ldr	r1, [r1, #4]
 8012014:	ab05      	add	r3, sp, #20
 8012016:	c303      	stmia	r3!, {r0, r1}
 8012018:	4611      	mov	r1, r2
 801201a:	6828      	ldr	r0, [r5, #0]
 801201c:	f7f6 f8a6 	bl	800816c <_ZNK8touchgfx5Texts7getTextEt>
 8012020:	f9b4 3042 	ldrsh.w	r3, [r4, #66]	; 0x42
 8012024:	2b00      	cmp	r3, #0
 8012026:	db11      	blt.n	801204c <_ZNK8touchgfx8TextArea4drawERKNS_4RectE+0x50>
 8012028:	f9b4 3040 	ldrsh.w	r3, [r4, #64]	; 0x40
 801202c:	2b00      	cmp	r3, #0
 801202e:	db0d      	blt.n	801204c <_ZNK8touchgfx8TextArea4drawERKNS_4RectE+0x50>
 8012030:	6c63      	ldr	r3, [r4, #68]	; 0x44
 8012032:	4298      	cmp	r0, r3
 8012034:	d10a      	bne.n	801204c <_ZNK8touchgfx8TextArea4drawERKNS_4RectE+0x50>
 8012036:	f104 023c 	add.w	r2, r4, #60	; 0x3c
 801203a:	e892 0003 	ldmia.w	r2, {r0, r1}
 801203e:	ab09      	add	r3, sp, #36	; 0x24
 8012040:	e883 0003 	stmia.w	r3, {r0, r1}
 8012044:	4619      	mov	r1, r3
 8012046:	a805      	add	r0, sp, #20
 8012048:	f7fe f860 	bl	801010c <_ZN8touchgfx4RectaNERKS0_>
 801204c:	f9bd 3018 	ldrsh.w	r3, [sp, #24]
 8012050:	2b00      	cmp	r3, #0
 8012052:	dd5b      	ble.n	801210c <_ZNK8touchgfx8TextArea4drawERKNS_4RectE+0x110>
 8012054:	f9bd 301a 	ldrsh.w	r3, [sp, #26]
 8012058:	2b00      	cmp	r3, #0
 801205a:	dd57      	ble.n	801210c <_ZNK8touchgfx8TextArea4drawERKNS_4RectE+0x110>
 801205c:	4f2f      	ldr	r7, [pc, #188]	; (801211c <_ZNK8touchgfx8TextArea4drawERKNS_4RectE+0x120>)
 801205e:	8da2      	ldrh	r2, [r4, #44]	; 0x2c
 8012060:	683b      	ldr	r3, [r7, #0]
 8012062:	f813 2012 	ldrb.w	r2, [r3, r2, lsl #1]
 8012066:	4b2e      	ldr	r3, [pc, #184]	; (8012120 <_ZNK8touchgfx8TextArea4drawERKNS_4RectE+0x124>)
 8012068:	681b      	ldr	r3, [r3, #0]
 801206a:	f853 6022 	ldr.w	r6, [r3, r2, lsl #2]
 801206e:	2e00      	cmp	r6, #0
 8012070:	d04c      	beq.n	801210c <_ZNK8touchgfx8TextArea4drawERKNS_4RectE+0x110>
 8012072:	6823      	ldr	r3, [r4, #0]
 8012074:	f894 8036 	ldrb.w	r8, [r4, #54]	; 0x36
 8012078:	6edb      	ldr	r3, [r3, #108]	; 0x6c
 801207a:	4620      	mov	r0, r4
 801207c:	4798      	blx	r3
 801207e:	8da2      	ldrh	r2, [r4, #44]	; 0x2c
 8012080:	683b      	ldr	r3, [r7, #0]
 8012082:	f9b4 c034 	ldrsh.w	ip, [r4, #52]	; 0x34
 8012086:	f894 e038 	ldrb.w	lr, [r4, #56]	; 0x38
 801208a:	f894 7037 	ldrb.w	r7, [r4, #55]	; 0x37
 801208e:	6b21      	ldr	r1, [r4, #48]	; 0x30
 8012090:	eb03 0342 	add.w	r3, r3, r2, lsl #1
 8012094:	f894 2039 	ldrb.w	r2, [r4, #57]	; 0x39
 8012098:	785b      	ldrb	r3, [r3, #1]
 801209a:	9609      	str	r6, [sp, #36]	; 0x24
 801209c:	f3c3 0381 	ubfx	r3, r3, #2, #2
 80120a0:	f88d 3029 	strb.w	r3, [sp, #41]	; 0x29
 80120a4:	4b1f      	ldr	r3, [pc, #124]	; (8012124 <_ZNK8touchgfx8TextArea4drawERKNS_4RectE+0x128>)
 80120a6:	f88d 0028 	strb.w	r0, [sp, #40]	; 0x28
 80120aa:	681b      	ldr	r3, [r3, #0]
 80120ac:	f88d e02a 	strb.w	lr, [sp, #42]	; 0x2a
 80120b0:	910b      	str	r1, [sp, #44]	; 0x2c
 80120b2:	f8ad c030 	strh.w	ip, [sp, #48]	; 0x30
 80120b6:	f88d 8032 	strb.w	r8, [sp, #50]	; 0x32
 80120ba:	f88d 7033 	strb.w	r7, [sp, #51]	; 0x33
 80120be:	f88d 2034 	strb.w	r2, [sp, #52]	; 0x34
 80120c2:	f893 2058 	ldrb.w	r2, [r3, #88]	; 0x58
 80120c6:	b10a      	cbz	r2, 80120cc <_ZNK8touchgfx8TextArea4drawERKNS_4RectE+0xd0>
 80120c8:	6cde      	ldr	r6, [r3, #76]	; 0x4c
 80120ca:	b906      	cbnz	r6, 80120ce <_ZNK8touchgfx8TextArea4drawERKNS_4RectE+0xd2>
 80120cc:	689e      	ldr	r6, [r3, #8]
 80120ce:	af07      	add	r7, sp, #28
 80120d0:	4621      	mov	r1, r4
 80120d2:	4638      	mov	r0, r7
 80120d4:	f004 fab0 	bl	8016638 <_ZNK8touchgfx8Drawable15getAbsoluteRectEv>
 80120d8:	8da1      	ldrh	r1, [r4, #44]	; 0x2c
 80120da:	6828      	ldr	r0, [r5, #0]
 80120dc:	f7f6 f846 	bl	800816c <_ZNK8touchgfx5Texts7getTextEt>
 80120e0:	6823      	ldr	r3, [r4, #0]
 80120e2:	4605      	mov	r5, r0
 80120e4:	6fdb      	ldr	r3, [r3, #124]	; 0x7c
 80120e6:	4620      	mov	r0, r4
 80120e8:	4798      	blx	r3
 80120ea:	6823      	ldr	r3, [r4, #0]
 80120ec:	4680      	mov	r8, r0
 80120ee:	f8d3 3080 	ldr.w	r3, [r3, #128]	; 0x80
 80120f2:	4620      	mov	r0, r4
 80120f4:	4798      	blx	r3
 80120f6:	e9cd 8002 	strd	r8, r0, [sp, #8]
 80120fa:	ab09      	add	r3, sp, #36	; 0x24
 80120fc:	9300      	str	r3, [sp, #0]
 80120fe:	9501      	str	r5, [sp, #4]
 8012100:	ab05      	add	r3, sp, #20
 8012102:	e897 0006 	ldmia.w	r7, {r1, r2}
 8012106:	4630      	mov	r0, r6
 8012108:	f7f5 ffe2 	bl	80080d0 <_ZN8touchgfx3LCD10drawStringENS_4RectERKS1_RKNS0_13StringVisualsEPKtz>
 801210c:	b00e      	add	sp, #56	; 0x38
 801210e:	e8bd 81f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, pc}
 8012112:	bf00      	nop
 8012114:	20012f80 	.word	0x20012f80
 8012118:	20012f88 	.word	0x20012f88
 801211c:	20012f7c 	.word	0x20012f7c
 8012120:	20012f84 	.word	0x20012f84
 8012124:	20012f24 	.word	0x20012f24

08012128 <_ZN8touchgfx8TextArea19resizeToCurrentTextEv>:
 8012128:	b538      	push	{r3, r4, r5, lr}
 801212a:	4b0e      	ldr	r3, [pc, #56]	; (8012164 <_ZN8touchgfx8TextArea19resizeToCurrentTextEv+0x3c>)
 801212c:	8d82      	ldrh	r2, [r0, #44]	; 0x2c
 801212e:	881b      	ldrh	r3, [r3, #0]
 8012130:	429a      	cmp	r2, r3
 8012132:	4604      	mov	r4, r0
 8012134:	d214      	bcs.n	8012160 <_ZN8touchgfx8TextArea19resizeToCurrentTextEv+0x38>
 8012136:	6803      	ldr	r3, [r0, #0]
 8012138:	6f5b      	ldr	r3, [r3, #116]	; 0x74
 801213a:	4798      	blx	r3
 801213c:	6823      	ldr	r3, [r4, #0]
 801213e:	4605      	mov	r5, r0
 8012140:	6f1b      	ldr	r3, [r3, #112]	; 0x70
 8012142:	4620      	mov	r0, r4
 8012144:	4798      	blx	r3
 8012146:	f894 3038 	ldrb.w	r3, [r4, #56]	; 0x38
 801214a:	b22d      	sxth	r5, r5
 801214c:	f013 0ffd 	tst.w	r3, #253	; 0xfd
 8012150:	4601      	mov	r1, r0
 8012152:	bf06      	itte	eq
 8012154:	4602      	moveq	r2, r0
 8012156:	4629      	moveq	r1, r5
 8012158:	462a      	movne	r2, r5
 801215a:	4620      	mov	r0, r4
 801215c:	f7fd fdb6 	bl	800fccc <_ZN8touchgfx8Drawable14setWidthHeightEss>
 8012160:	bd38      	pop	{r3, r4, r5, pc}
 8012162:	bf00      	nop
 8012164:	20012f80 	.word	0x20012f80

08012168 <_ZN8touchgfx8TextArea12setTypedTextERKNS_9TypedTextE>:
 8012168:	b530      	push	{r4, r5, lr}
 801216a:	888b      	ldrh	r3, [r1, #4]
 801216c:	8583      	strh	r3, [r0, #44]	; 0x2c
 801216e:	f9b0 3008 	ldrsh.w	r3, [r0, #8]
 8012172:	b085      	sub	sp, #20
 8012174:	4604      	mov	r4, r0
 8012176:	b923      	cbnz	r3, 8012182 <_ZN8touchgfx8TextArea12setTypedTextERKNS_9TypedTextE+0x1a>
 8012178:	f9b0 300a 	ldrsh.w	r3, [r0, #10]
 801217c:	b90b      	cbnz	r3, 8012182 <_ZN8touchgfx8TextArea12setTypedTextERKNS_9TypedTextE+0x1a>
 801217e:	f7ff ffd3 	bl	8012128 <_ZN8touchgfx8TextArea19resizeToCurrentTextEv>
 8012182:	6823      	ldr	r3, [r4, #0]
 8012184:	466d      	mov	r5, sp
 8012186:	4621      	mov	r1, r4
 8012188:	4628      	mov	r0, r5
 801218a:	f8d3 3084 	ldr.w	r3, [r3, #132]	; 0x84
 801218e:	4798      	blx	r3
 8012190:	e895 0007 	ldmia.w	r5, {r0, r1, r2}
 8012194:	343c      	adds	r4, #60	; 0x3c
 8012196:	e884 0007 	stmia.w	r4, {r0, r1, r2}
 801219a:	b005      	add	sp, #20
 801219c:	bd30      	pop	{r4, r5, pc}

0801219e <_ZNK8touchgfx3Box12getSolidRectEv>:
 801219e:	2300      	movs	r3, #0
 80121a0:	8083      	strh	r3, [r0, #4]
 80121a2:	80c3      	strh	r3, [r0, #6]
 80121a4:	8003      	strh	r3, [r0, #0]
 80121a6:	8043      	strh	r3, [r0, #2]
 80121a8:	f891 3026 	ldrb.w	r3, [r1, #38]	; 0x26
 80121ac:	2bff      	cmp	r3, #255	; 0xff
 80121ae:	bf01      	itttt	eq
 80121b0:	890b      	ldrheq	r3, [r1, #8]
 80121b2:	8083      	strheq	r3, [r0, #4]
 80121b4:	894b      	ldrheq	r3, [r1, #10]
 80121b6:	80c3      	strheq	r3, [r0, #6]
 80121b8:	4770      	bx	lr
	...

080121bc <_ZNK8touchgfx3Box4drawERKNS_4RectE>:
 80121bc:	b537      	push	{r0, r1, r2, r4, r5, lr}
 80121be:	4604      	mov	r4, r0
 80121c0:	6808      	ldr	r0, [r1, #0]
 80121c2:	6849      	ldr	r1, [r1, #4]
 80121c4:	466b      	mov	r3, sp
 80121c6:	c303      	stmia	r3!, {r0, r1}
 80121c8:	6823      	ldr	r3, [r4, #0]
 80121ca:	4669      	mov	r1, sp
 80121cc:	6adb      	ldr	r3, [r3, #44]	; 0x2c
 80121ce:	4620      	mov	r0, r4
 80121d0:	4798      	blx	r3
 80121d2:	4b08      	ldr	r3, [pc, #32]	; (80121f4 <_ZNK8touchgfx3Box4drawERKNS_4RectE+0x38>)
 80121d4:	681b      	ldr	r3, [r3, #0]
 80121d6:	f893 2058 	ldrb.w	r2, [r3, #88]	; 0x58
 80121da:	b10a      	cbz	r2, 80121e0 <_ZNK8touchgfx3Box4drawERKNS_4RectE+0x24>
 80121dc:	6cd8      	ldr	r0, [r3, #76]	; 0x4c
 80121de:	b900      	cbnz	r0, 80121e2 <_ZNK8touchgfx3Box4drawERKNS_4RectE+0x26>
 80121e0:	6898      	ldr	r0, [r3, #8]
 80121e2:	6803      	ldr	r3, [r0, #0]
 80121e4:	6aa2      	ldr	r2, [r4, #40]	; 0x28
 80121e6:	6a1d      	ldr	r5, [r3, #32]
 80121e8:	f894 3026 	ldrb.w	r3, [r4, #38]	; 0x26
 80121ec:	4669      	mov	r1, sp
 80121ee:	47a8      	blx	r5
 80121f0:	b003      	add	sp, #12
 80121f2:	bd30      	pop	{r4, r5, pc}
 80121f4:	20012f24 	.word	0x20012f24

080121f8 <_ZN8touchgfx3BoxD1Ev>:
 80121f8:	4770      	bx	lr

080121fa <_ZN8touchgfx3BoxD0Ev>:
 80121fa:	b510      	push	{r4, lr}
 80121fc:	212c      	movs	r1, #44	; 0x2c
 80121fe:	4604      	mov	r4, r0
 8012200:	f017 f90d 	bl	802941e <_ZdlPvj>
 8012204:	4620      	mov	r0, r4
 8012206:	bd10      	pop	{r4, pc}

08012208 <_ZNK8touchgfx3Box17invalidateContentEv>:
 8012208:	f890 2026 	ldrb.w	r2, [r0, #38]	; 0x26
 801220c:	b12a      	cbz	r2, 801221a <_ZNK8touchgfx3Box17invalidateContentEv+0x12>
 801220e:	f890 2025 	ldrb.w	r2, [r0, #37]	; 0x25
 8012212:	b112      	cbz	r2, 801221a <_ZNK8touchgfx3Box17invalidateContentEv+0x12>
 8012214:	6803      	ldr	r3, [r0, #0]
 8012216:	695b      	ldr	r3, [r3, #20]
 8012218:	4718      	bx	r3
 801221a:	4770      	bx	lr

0801221c <_ZNK8touchgfx5Gauge9getCenterERiS1_>:
 801221c:	f9b0 3150 	ldrsh.w	r3, [r0, #336]	; 0x150
 8012220:	600b      	str	r3, [r1, #0]
 8012222:	f9b0 3152 	ldrsh.w	r3, [r0, #338]	; 0x152
 8012226:	6013      	str	r3, [r2, #0]
 8012228:	4770      	bx	lr

0801222a <_ZN8touchgfx5Gauge8setWidthEs>:
 801222a:	8101      	strh	r1, [r0, #8]
 801222c:	f8a0 10bc 	strh.w	r1, [r0, #188]	; 0xbc
 8012230:	f8a0 1160 	strh.w	r1, [r0, #352]	; 0x160
 8012234:	4770      	bx	lr

08012236 <_ZN8touchgfx5Gauge9setHeightEs>:
 8012236:	8141      	strh	r1, [r0, #10]
 8012238:	f8a0 10be 	strh.w	r1, [r0, #190]	; 0xbe
 801223c:	f8a0 1162 	strh.w	r1, [r0, #354]	; 0x162
 8012240:	4770      	bx	lr

08012242 <_ZNK8touchgfx5Gauge13getStartAngleEv>:
 8012242:	f8d0 0148 	ldr.w	r0, [r0, #328]	; 0x148
 8012246:	4770      	bx	lr

08012248 <_ZNK8touchgfx5Gauge11getEndAngleEv>:
 8012248:	f8d0 014c 	ldr.w	r0, [r0, #332]	; 0x14c
 801224c:	4770      	bx	lr

0801224e <_ZN8touchgfx5Gauge28setProgressIndicatorPositionEssss>:
 801224e:	4770      	bx	lr

08012250 <_ZN8touchgfx5GaugeD1Ev>:
 8012250:	4770      	bx	lr

08012252 <_ZN8touchgfx5Gauge8setAlphaEh>:
 8012252:	b538      	push	{r3, r4, r5, lr}
 8012254:	4604      	mov	r4, r0
 8012256:	460d      	mov	r5, r1
 8012258:	f7fd fc51 	bl	800fafe <_ZN8touchgfx25AbstractProgressIndicator8setAlphaEh>
 801225c:	f884 50dc 	strb.w	r5, [r4, #220]	; 0xdc
 8012260:	f884 517e 	strb.w	r5, [r4, #382]	; 0x17e
 8012264:	bd38      	pop	{r3, r4, r5, pc}

08012266 <_ZN8touchgfx5GaugeD0Ev>:
 8012266:	b510      	push	{r4, lr}
 8012268:	f44f 71d0 	mov.w	r1, #416	; 0x1a0
 801226c:	4604      	mov	r4, r0
 801226e:	f017 f8d6 	bl	802941e <_ZdlPvj>
 8012272:	4620      	mov	r0, r4
 8012274:	bd10      	pop	{r4, pc}

08012276 <_ZNK8touchgfx5Gauge17invalidateContentEv>:
 8012276:	b510      	push	{r4, lr}
 8012278:	6803      	ldr	r3, [r0, #0]
 801227a:	f8d3 30c8 	ldr.w	r3, [r3, #200]	; 0xc8
 801227e:	4604      	mov	r4, r0
 8012280:	4798      	blx	r3
 8012282:	b170      	cbz	r0, 80122a2 <_ZNK8touchgfx5Gauge17invalidateContentEv+0x2c>
 8012284:	6823      	ldr	r3, [r4, #0]
 8012286:	4620      	mov	r0, r4
 8012288:	f8d3 30c8 	ldr.w	r3, [r3, #200]	; 0xc8
 801228c:	4798      	blx	r3
 801228e:	b140      	cbz	r0, 80122a2 <_ZNK8touchgfx5Gauge17invalidateContentEv+0x2c>
 8012290:	f894 3025 	ldrb.w	r3, [r4, #37]	; 0x25
 8012294:	b12b      	cbz	r3, 80122a2 <_ZNK8touchgfx5Gauge17invalidateContentEv+0x2c>
 8012296:	6823      	ldr	r3, [r4, #0]
 8012298:	4620      	mov	r0, r4
 801229a:	695b      	ldr	r3, [r3, #20]
 801229c:	e8bd 4010 	ldmia.w	sp!, {r4, lr}
 80122a0:	4718      	bx	r3
 80122a2:	bd10      	pop	{r4, pc}

080122a4 <_ZN8touchgfx5GaugeC1Ev>:
 80122a4:	b5f7      	push	{r0, r1, r2, r4, r5, r6, r7, lr}
 80122a6:	4604      	mov	r4, r0
 80122a8:	4626      	mov	r6, r4
 80122aa:	f7fd fd49 	bl	800fd40 <_ZN8touchgfx25AbstractProgressIndicatorC1Ev>
 80122ae:	4b18      	ldr	r3, [pc, #96]	; (8012310 <_ZN8touchgfx5GaugeC1Ev+0x6c>)
 80122b0:	f846 3bb4 	str.w	r3, [r6], #180
 80122b4:	a902      	add	r1, sp, #8
 80122b6:	f64f 73ff 	movw	r3, #65535	; 0xffff
 80122ba:	f821 3d04 	strh.w	r3, [r1, #-4]!
 80122be:	4630      	mov	r0, r6
 80122c0:	f015 f970 	bl	80275a4 <_ZN8touchgfx13TextureMapperC1ERKNS_6BitmapE>
 80122c4:	2500      	movs	r5, #0
 80122c6:	2301      	movs	r3, #1
 80122c8:	f504 77ac 	add.w	r7, r4, #344	; 0x158
 80122cc:	f884 3144 	strb.w	r3, [r4, #324]	; 0x144
 80122d0:	f884 3145 	strb.w	r3, [r4, #325]	; 0x145
 80122d4:	f8c4 5148 	str.w	r5, [r4, #328]	; 0x148
 80122d8:	f8c4 514c 	str.w	r5, [r4, #332]	; 0x14c
 80122dc:	f8c4 5150 	str.w	r5, [r4, #336]	; 0x150
 80122e0:	f8c4 5154 	str.w	r5, [r4, #340]	; 0x154
 80122e4:	4638      	mov	r0, r7
 80122e6:	f014 fba1 	bl	8026a2c <_ZN8touchgfx6CircleC1Ev>
 80122ea:	f104 0158 	add.w	r1, r4, #88	; 0x58
 80122ee:	4620      	mov	r0, r4
 80122f0:	f7fd fdc7 	bl	800fe82 <_ZN8touchgfx9Container6removeERNS_8DrawableE>
 80122f4:	4639      	mov	r1, r7
 80122f6:	4620      	mov	r0, r4
 80122f8:	f7fd fd82 	bl	800fe00 <_ZN8touchgfx9Container3addERNS_8DrawableE>
 80122fc:	4620      	mov	r0, r4
 80122fe:	4631      	mov	r1, r6
 8012300:	f7fd fd7e 	bl	800fe00 <_ZN8touchgfx9Container3addERNS_8DrawableE>
 8012304:	4620      	mov	r0, r4
 8012306:	f884 517d 	strb.w	r5, [r4, #381]	; 0x17d
 801230a:	b003      	add	sp, #12
 801230c:	bdf0      	pop	{r4, r5, r6, r7, pc}
 801230e:	bf00      	nop
 8012310:	0802e5a8 	.word	0x0802e5a8

08012314 <_ZN8touchgfx5Gauge33setMovingNeedleRenderingAlgorithmENS_13TextureMapper18RenderingAlgorithmE>:
 8012314:	f880 1144 	strb.w	r1, [r0, #324]	; 0x144
 8012318:	4770      	bx	lr

0801231a <_ZN8touchgfx5Gauge33setSteadyNeedleRenderingAlgorithmENS_13TextureMapper18RenderingAlgorithmE>:
 801231a:	f880 1145 	strb.w	r1, [r0, #325]	; 0x145
 801231e:	4770      	bx	lr

08012320 <_ZN8touchgfx5Gauge24setupNeedleTextureMapperEv>:
 8012320:	b538      	push	{r3, r4, r5, lr}
 8012322:	8902      	ldrh	r2, [r0, #8]
 8012324:	f9b0 300a 	ldrsh.w	r3, [r0, #10]
 8012328:	f8a0 20bc 	strh.w	r2, [r0, #188]	; 0xbc
 801232c:	4604      	mov	r4, r0
 801232e:	f100 05b4 	add.w	r5, r0, #180	; 0xb4
 8012332:	2200      	movs	r2, #0
 8012334:	4611      	mov	r1, r2
 8012336:	f8a0 30be 	strh.w	r3, [r0, #190]	; 0xbe
 801233a:	4628      	mov	r0, r5
 801233c:	f7f0 fa13 	bl	8002766 <_ZN8touchgfx8Drawable5setXYEss>
 8012340:	f9b4 2156 	ldrsh.w	r2, [r4, #342]	; 0x156
 8012344:	f9b4 3152 	ldrsh.w	r3, [r4, #338]	; 0x152
 8012348:	1a9b      	subs	r3, r3, r2
 801234a:	ee07 3a90 	vmov	s15, r3
 801234e:	f9b4 2154 	ldrsh.w	r2, [r4, #340]	; 0x154
 8012352:	f9b4 3150 	ldrsh.w	r3, [r4, #336]	; 0x150
 8012356:	1a9b      	subs	r3, r3, r2
 8012358:	ee07 3a10 	vmov	s14, r3
 801235c:	eef8 7ae7 	vcvt.f32.s32	s15, s15
 8012360:	eeb8 7ac7 	vcvt.f32.s32	s14, s14
 8012364:	edc4 7a39 	vstr	s15, [r4, #228]	; 0xe4
 8012368:	ed84 7a38 	vstr	s14, [r4, #224]	; 0xe0
 801236c:	4628      	mov	r0, r5
 801236e:	f015 f965 	bl	802763c <_ZN8touchgfx13TextureMapper19applyTransformationEv>
 8012372:	4b16      	ldr	r3, [pc, #88]	; (80123cc <_ZN8touchgfx5Gauge24setupNeedleTextureMapperEv+0xac>)
 8012374:	f8c4 310c 	str.w	r3, [r4, #268]	; 0x10c
 8012378:	4628      	mov	r0, r5
 801237a:	f015 f95f 	bl	802763c <_ZN8touchgfx13TextureMapper19applyTransformationEv>
 801237e:	f9b4 3152 	ldrsh.w	r3, [r4, #338]	; 0x152
 8012382:	f9b4 2150 	ldrsh.w	r2, [r4, #336]	; 0x150
 8012386:	ee07 3a90 	vmov	s15, r3
 801238a:	ee07 2a10 	vmov	s14, r2
 801238e:	eef8 7ae7 	vcvt.f32.s32	s15, s15
 8012392:	eeb8 7ac7 	vcvt.f32.s32	s14, s14
 8012396:	f8d4 310c 	ldr.w	r3, [r4, #268]	; 0x10c
 801239a:	ed84 7a3e 	vstr	s14, [r4, #248]	; 0xf8
 801239e:	edc4 7a3f 	vstr	s15, [r4, #252]	; 0xfc
 80123a2:	f8c4 3100 	str.w	r3, [r4, #256]	; 0x100
 80123a6:	4628      	mov	r0, r5
 80123a8:	f015 f948 	bl	802763c <_ZN8touchgfx13TextureMapper19applyTransformationEv>
 80123ac:	f8d4 30fc 	ldr.w	r3, [r4, #252]	; 0xfc
 80123b0:	f8d4 20f8 	ldr.w	r2, [r4, #248]	; 0xf8
 80123b4:	f8c4 3108 	str.w	r3, [r4, #264]	; 0x108
 80123b8:	f8c4 2104 	str.w	r2, [r4, #260]	; 0x104
 80123bc:	4628      	mov	r0, r5
 80123be:	f015 f93d 	bl	802763c <_ZN8touchgfx13TextureMapper19applyTransformationEv>
 80123c2:	2301      	movs	r3, #1
 80123c4:	f884 30dd 	strb.w	r3, [r4, #221]	; 0xdd
 80123c8:	bd38      	pop	{r3, r4, r5, pc}
 80123ca:	bf00      	nop
 80123cc:	43960000 	.word	0x43960000

080123d0 <_ZN8touchgfx5Gauge9setNeedleEtss>:
 80123d0:	b573      	push	{r0, r1, r4, r5, r6, lr}
 80123d2:	4604      	mov	r4, r0
 80123d4:	a802      	add	r0, sp, #8
 80123d6:	4616      	mov	r6, r2
 80123d8:	f820 1d04 	strh.w	r1, [r0, #-4]!
 80123dc:	461d      	mov	r5, r3
 80123de:	4601      	mov	r1, r0
 80123e0:	f104 00b4 	add.w	r0, r4, #180	; 0xb4
 80123e4:	f015 fa80 	bl	80278e8 <_ZN8touchgfx13TextureMapper9setBitmapERKNS_6BitmapE>
 80123e8:	f8a4 6154 	strh.w	r6, [r4, #340]	; 0x154
 80123ec:	f8a4 5156 	strh.w	r5, [r4, #342]	; 0x156
 80123f0:	4620      	mov	r0, r4
 80123f2:	f7ff ff95 	bl	8012320 <_ZN8touchgfx5Gauge24setupNeedleTextureMapperEv>
 80123f6:	b002      	add	sp, #8
 80123f8:	bd70      	pop	{r4, r5, r6, pc}

080123fa <_ZN8touchgfx5Gauge9setCenterEii>:
 80123fa:	b570      	push	{r4, r5, r6, lr}
 80123fc:	4606      	mov	r6, r0
 80123fe:	460d      	mov	r5, r1
 8012400:	f8a6 1150 	strh.w	r1, [r6, #336]	; 0x150
 8012404:	f8a6 2152 	strh.w	r2, [r6, #338]	; 0x152
 8012408:	4614      	mov	r4, r2
 801240a:	f7ff ff89 	bl	8012320 <_ZN8touchgfx5Gauge24setupNeedleTextureMapperEv>
 801240e:	f9b6 215e 	ldrsh.w	r2, [r6, #350]	; 0x15e
 8012412:	f9b6 115c 	ldrsh.w	r1, [r6, #348]	; 0x15c
 8012416:	1aa4      	subs	r4, r4, r2
 8012418:	1a6d      	subs	r5, r5, r1
 801241a:	0164      	lsls	r4, r4, #5
 801241c:	016d      	lsls	r5, r5, #5
 801241e:	3410      	adds	r4, #16
 8012420:	3510      	adds	r5, #16
 8012422:	f8c6 5184 	str.w	r5, [r6, #388]	; 0x184
 8012426:	f8c6 4188 	str.w	r4, [r6, #392]	; 0x188
 801242a:	bd70      	pop	{r4, r5, r6, pc}

0801242c <_ZN8touchgfx6Circle12updateArcEndIiEEvT_>:
 801242c:	b51f      	push	{r0, r1, r2, r3, r4, lr}
 801242e:	6bc3      	ldr	r3, [r0, #60]	; 0x3c
 8012430:	0149      	lsls	r1, r1, #5
 8012432:	4299      	cmp	r1, r3
 8012434:	4604      	mov	r4, r0
 8012436:	9101      	str	r1, [sp, #4]
 8012438:	d00b      	beq.n	8012452 <_ZN8touchgfx6Circle12updateArcEndIiEEvT_+0x26>
 801243a:	4601      	mov	r1, r0
 801243c:	aa01      	add	r2, sp, #4
 801243e:	a802      	add	r0, sp, #8
 8012440:	f014 fcf2 	bl	8026e28 <_ZNK8touchgfx6Circle32getMinimalRectForUpdatedEndAngleERKNS_7CWRUtil2Q5E>
 8012444:	9b01      	ldr	r3, [sp, #4]
 8012446:	63e3      	str	r3, [r4, #60]	; 0x3c
 8012448:	6823      	ldr	r3, [r4, #0]
 801244a:	a902      	add	r1, sp, #8
 801244c:	691b      	ldr	r3, [r3, #16]
 801244e:	4620      	mov	r0, r4
 8012450:	4798      	blx	r3
 8012452:	b004      	add	sp, #16
 8012454:	bd10      	pop	{r4, pc}
	...

08012458 <_ZN8touchgfx5Gauge8setValueEi>:
 8012458:	b570      	push	{r4, r5, r6, lr}
 801245a:	4604      	mov	r4, r0
 801245c:	f7fd fba2 	bl	800fba4 <_ZN8touchgfx25AbstractProgressIndicator8setValueEi>
 8012460:	e9d4 3229 	ldrd	r3, r2, [r4, #164]	; 0xa4
 8012464:	429a      	cmp	r2, r3
 8012466:	bfac      	ite	ge
 8012468:	f894 3145 	ldrbge.w	r3, [r4, #325]	; 0x145
 801246c:	f894 3144 	ldrblt.w	r3, [r4, #324]	; 0x144
 8012470:	f884 30dd 	strb.w	r3, [r4, #221]	; 0xdd
 8012474:	f8d4 114c 	ldr.w	r1, [r4, #332]	; 0x14c
 8012478:	f8d4 3148 	ldr.w	r3, [r4, #328]	; 0x148
 801247c:	1ac9      	subs	r1, r1, r3
 801247e:	2900      	cmp	r1, #0
 8012480:	bfb8      	it	lt
 8012482:	4249      	neglt	r1, r1
 8012484:	b289      	uxth	r1, r1
 8012486:	4620      	mov	r0, r4
 8012488:	f7fd fbae 	bl	800fbe8 <_ZNK8touchgfx25AbstractProgressIndicator11getProgressEt>
 801248c:	f8d4 3148 	ldr.w	r3, [r4, #328]	; 0x148
 8012490:	f8d4 214c 	ldr.w	r2, [r4, #332]	; 0x14c
 8012494:	eddf 6a19 	vldr	s13, [pc, #100]	; 80124fc <_ZN8touchgfx5Gauge8setValueEi+0xa4>
 8012498:	ed9f 7a19 	vldr	s14, [pc, #100]	; 8012500 <_ZN8touchgfx5Gauge8setValueEi+0xa8>
 801249c:	429a      	cmp	r2, r3
 801249e:	4605      	mov	r5, r0
 80124a0:	f504 76ac 	add.w	r6, r4, #344	; 0x158
 80124a4:	f104 00b4 	add.w	r0, r4, #180	; 0xb4
 80124a8:	da15      	bge.n	80124d6 <_ZN8touchgfx5Gauge8setValueEi+0x7e>
 80124aa:	1b5b      	subs	r3, r3, r5
 80124ac:	ee07 3a90 	vmov	s15, r3
 80124b0:	eef8 7ae7 	vcvt.f32.s32	s15, s15
 80124b4:	edd4 0a3b 	vldr	s1, [r4, #236]	; 0xec
 80124b8:	ed94 0a3a 	vldr	s0, [r4, #232]	; 0xe8
 80124bc:	ee87 1aa6 	vdiv.f32	s2, s15, s13
 80124c0:	ee21 1a07 	vmul.f32	s2, s2, s14
 80124c4:	f015 f829 	bl	802751a <_ZN8touchgfx13TextureMapper12updateAnglesEfff>
 80124c8:	f8d4 1148 	ldr.w	r1, [r4, #328]	; 0x148
 80124cc:	1b49      	subs	r1, r1, r5
 80124ce:	4630      	mov	r0, r6
 80124d0:	f7ff ffac 	bl	801242c <_ZN8touchgfx6Circle12updateArcEndIiEEvT_>
 80124d4:	bd70      	pop	{r4, r5, r6, pc}
 80124d6:	442b      	add	r3, r5
 80124d8:	ee07 3a90 	vmov	s15, r3
 80124dc:	eef8 7ae7 	vcvt.f32.s32	s15, s15
 80124e0:	edd4 0a3b 	vldr	s1, [r4, #236]	; 0xec
 80124e4:	ed94 0a3a 	vldr	s0, [r4, #232]	; 0xe8
 80124e8:	ee87 1aa6 	vdiv.f32	s2, s15, s13
 80124ec:	ee21 1a07 	vmul.f32	s2, s2, s14
 80124f0:	f015 f813 	bl	802751a <_ZN8touchgfx13TextureMapper12updateAnglesEfff>
 80124f4:	f8d4 1148 	ldr.w	r1, [r4, #328]	; 0x148
 80124f8:	4429      	add	r1, r5
 80124fa:	e7e8      	b.n	80124ce <_ZN8touchgfx5Gauge8setValueEi+0x76>
 80124fc:	43340000 	.word	0x43340000
 8012500:	40490fdb 	.word	0x40490fdb

08012504 <_ZN8touchgfx5Gauge16setStartEndAngleEii>:
 8012504:	b510      	push	{r4, lr}
 8012506:	f8c0 1148 	str.w	r1, [r0, #328]	; 0x148
 801250a:	f8c0 214c 	str.w	r2, [r0, #332]	; 0x14c
 801250e:	0149      	lsls	r1, r1, #5
 8012510:	0152      	lsls	r2, r2, #5
 8012512:	f8c0 1190 	str.w	r1, [r0, #400]	; 0x190
 8012516:	f8c0 2194 	str.w	r2, [r0, #404]	; 0x194
 801251a:	4604      	mov	r4, r0
 801251c:	f7fd faec 	bl	800faf8 <_ZNK8touchgfx25AbstractProgressIndicator8getValueEv>
 8012520:	4601      	mov	r1, r0
 8012522:	4620      	mov	r0, r4
 8012524:	e8bd 4010 	ldmia.w	sp!, {r4, lr}
 8012528:	f7ff bf96 	b.w	8012458 <_ZN8touchgfx5Gauge8setValueEi>

0801252c <_ZNK8touchgfx14AbstractButton15getPressedStateEv>:
 801252c:	f890 002c 	ldrb.w	r0, [r0, #44]	; 0x2c
 8012530:	4770      	bx	lr

08012532 <_ZN8touchgfx6Button10setBitmapsERKNS_6BitmapES3_>:
 8012532:	b570      	push	{r4, r5, r6, lr}
 8012534:	880b      	ldrh	r3, [r1, #0]
 8012536:	85c3      	strh	r3, [r0, #46]	; 0x2e
 8012538:	4605      	mov	r5, r0
 801253a:	8813      	ldrh	r3, [r2, #0]
 801253c:	f825 3f30 	strh.w	r3, [r5, #48]!
 8012540:	4604      	mov	r4, r0
 8012542:	4628      	mov	r0, r5
 8012544:	f006 fb06 	bl	8018b54 <_ZNK8touchgfx6Bitmap8getWidthEv>
 8012548:	4606      	mov	r6, r0
 801254a:	4628      	mov	r0, r5
 801254c:	f006 fb36 	bl	8018bbc <_ZNK8touchgfx6Bitmap9getHeightEv>
 8012550:	6823      	ldr	r3, [r4, #0]
 8012552:	4605      	mov	r5, r0
 8012554:	4631      	mov	r1, r6
 8012556:	4620      	mov	r0, r4
 8012558:	6b9b      	ldr	r3, [r3, #56]	; 0x38
 801255a:	4798      	blx	r3
 801255c:	6823      	ldr	r3, [r4, #0]
 801255e:	4629      	mov	r1, r5
 8012560:	4620      	mov	r0, r4
 8012562:	6bdb      	ldr	r3, [r3, #60]	; 0x3c
 8012564:	e8bd 4070 	ldmia.w	sp!, {r4, r5, r6, lr}
 8012568:	4718      	bx	r3

0801256a <_ZN8touchgfx14AbstractButton13executeActionEv>:
 801256a:	b510      	push	{r4, lr}
 801256c:	4604      	mov	r4, r0
 801256e:	6a80      	ldr	r0, [r0, #40]	; 0x28
 8012570:	b150      	cbz	r0, 8012588 <_ZN8touchgfx14AbstractButton13executeActionEv+0x1e>
 8012572:	6803      	ldr	r3, [r0, #0]
 8012574:	68db      	ldr	r3, [r3, #12]
 8012576:	4798      	blx	r3
 8012578:	b130      	cbz	r0, 8012588 <_ZN8touchgfx14AbstractButton13executeActionEv+0x1e>
 801257a:	6aa0      	ldr	r0, [r4, #40]	; 0x28
 801257c:	6803      	ldr	r3, [r0, #0]
 801257e:	4621      	mov	r1, r4
 8012580:	689b      	ldr	r3, [r3, #8]
 8012582:	e8bd 4010 	ldmia.w	sp!, {r4, lr}
 8012586:	4718      	bx	r3
 8012588:	bd10      	pop	{r4, pc}

0801258a <_ZNK8touchgfx6Button12getSolidRectEv>:
 801258a:	b510      	push	{r4, lr}
 801258c:	f891 3032 	ldrb.w	r3, [r1, #50]	; 0x32
 8012590:	2bff      	cmp	r3, #255	; 0xff
 8012592:	4604      	mov	r4, r0
 8012594:	d006      	beq.n	80125a4 <_ZNK8touchgfx6Button12getSolidRectEv+0x1a>
 8012596:	2300      	movs	r3, #0
 8012598:	8003      	strh	r3, [r0, #0]
 801259a:	8043      	strh	r3, [r0, #2]
 801259c:	8083      	strh	r3, [r0, #4]
 801259e:	80c3      	strh	r3, [r0, #6]
 80125a0:	4620      	mov	r0, r4
 80125a2:	bd10      	pop	{r4, pc}
 80125a4:	f891 302c 	ldrb.w	r3, [r1, #44]	; 0x2c
 80125a8:	b11b      	cbz	r3, 80125b2 <_ZNK8touchgfx6Button12getSolidRectEv+0x28>
 80125aa:	3130      	adds	r1, #48	; 0x30
 80125ac:	f006 fb3a 	bl	8018c24 <_ZNK8touchgfx6Bitmap12getSolidRectEv>
 80125b0:	e7f6      	b.n	80125a0 <_ZNK8touchgfx6Button12getSolidRectEv+0x16>
 80125b2:	312e      	adds	r1, #46	; 0x2e
 80125b4:	e7fa      	b.n	80125ac <_ZNK8touchgfx6Button12getSolidRectEv+0x22>
	...

080125b8 <_ZNK8touchgfx6Button4drawERKNS_4RectE>:
 80125b8:	e92d 41f0 	stmdb	sp!, {r4, r5, r6, r7, r8, lr}
 80125bc:	f890 302c 	ldrb.w	r3, [r0, #44]	; 0x2c
 80125c0:	b08a      	sub	sp, #40	; 0x28
 80125c2:	4604      	mov	r4, r0
 80125c4:	4688      	mov	r8, r1
 80125c6:	2b00      	cmp	r3, #0
 80125c8:	d066      	beq.n	8012698 <_ZNK8touchgfx6Button4drawERKNS_4RectE+0xe0>
 80125ca:	8e03      	ldrh	r3, [r0, #48]	; 0x30
 80125cc:	f8ad 3014 	strh.w	r3, [sp, #20]
 80125d0:	a805      	add	r0, sp, #20
 80125d2:	f006 fabf 	bl	8018b54 <_ZNK8touchgfx6Bitmap8getWidthEv>
 80125d6:	4607      	mov	r7, r0
 80125d8:	a805      	add	r0, sp, #20
 80125da:	f006 faef 	bl	8018bbc <_ZNK8touchgfx6Bitmap9getHeightEv>
 80125de:	f9b8 6000 	ldrsh.w	r6, [r8]
 80125e2:	f8b8 2004 	ldrh.w	r2, [r8, #4]
 80125e6:	4432      	add	r2, r6
 80125e8:	b292      	uxth	r2, r2
 80125ea:	2300      	movs	r3, #0
 80125ec:	fa0f fc82 	sxth.w	ip, r2
 80125f0:	459c      	cmp	ip, r3
 80125f2:	9306      	str	r3, [sp, #24]
 80125f4:	dd52      	ble.n	801269c <_ZNK8touchgfx6Button4drawERKNS_4RectE+0xe4>
 80125f6:	42b7      	cmp	r7, r6
 80125f8:	dd50      	ble.n	801269c <_ZNK8touchgfx6Button4drawERKNS_4RectE+0xe4>
 80125fa:	f9b8 5002 	ldrsh.w	r5, [r8, #2]
 80125fe:	f8b8 3006 	ldrh.w	r3, [r8, #6]
 8012602:	442b      	add	r3, r5
 8012604:	b29b      	uxth	r3, r3
 8012606:	b219      	sxth	r1, r3
 8012608:	2900      	cmp	r1, #0
 801260a:	dd47      	ble.n	801269c <_ZNK8touchgfx6Button4drawERKNS_4RectE+0xe4>
 801260c:	42a8      	cmp	r0, r5
 801260e:	dd45      	ble.n	801269c <_ZNK8touchgfx6Button4drawERKNS_4RectE+0xe4>
 8012610:	4567      	cmp	r7, ip
 8012612:	bfb8      	it	lt
 8012614:	b2ba      	uxthlt	r2, r7
 8012616:	4288      	cmp	r0, r1
 8012618:	ea26 76e6 	bic.w	r6, r6, r6, asr #31
 801261c:	ea25 75e5 	bic.w	r5, r5, r5, asr #31
 8012620:	bfb8      	it	lt
 8012622:	b283      	uxthlt	r3, r0
 8012624:	1b92      	subs	r2, r2, r6
 8012626:	1b5b      	subs	r3, r3, r5
 8012628:	f8ad 201c 	strh.w	r2, [sp, #28]
 801262c:	f8ad 301e 	strh.w	r3, [sp, #30]
 8012630:	f8ad 6018 	strh.w	r6, [sp, #24]
 8012634:	f8ad 501a 	strh.w	r5, [sp, #26]
 8012638:	f8bd 2014 	ldrh.w	r2, [sp, #20]
 801263c:	f64f 73ff 	movw	r3, #65535	; 0xffff
 8012640:	429a      	cmp	r2, r3
 8012642:	d026      	beq.n	8012692 <_ZNK8touchgfx6Button4drawERKNS_4RectE+0xda>
 8012644:	f9bd 301c 	ldrsh.w	r3, [sp, #28]
 8012648:	2b00      	cmp	r3, #0
 801264a:	dd22      	ble.n	8012692 <_ZNK8touchgfx6Button4drawERKNS_4RectE+0xda>
 801264c:	f9bd 301e 	ldrsh.w	r3, [sp, #30]
 8012650:	2b00      	cmp	r3, #0
 8012652:	dd1e      	ble.n	8012692 <_ZNK8touchgfx6Button4drawERKNS_4RectE+0xda>
 8012654:	2300      	movs	r3, #0
 8012656:	e9cd 3308 	strd	r3, r3, [sp, #32]
 801265a:	6823      	ldr	r3, [r4, #0]
 801265c:	a908      	add	r1, sp, #32
 801265e:	6adb      	ldr	r3, [r3, #44]	; 0x2c
 8012660:	4620      	mov	r0, r4
 8012662:	4798      	blx	r3
 8012664:	4b0f      	ldr	r3, [pc, #60]	; (80126a4 <_ZNK8touchgfx6Button4drawERKNS_4RectE+0xec>)
 8012666:	681b      	ldr	r3, [r3, #0]
 8012668:	f893 2058 	ldrb.w	r2, [r3, #88]	; 0x58
 801266c:	b10a      	cbz	r2, 8012672 <_ZNK8touchgfx6Button4drawERKNS_4RectE+0xba>
 801266e:	6cd8      	ldr	r0, [r3, #76]	; 0x4c
 8012670:	b900      	cbnz	r0, 8012674 <_ZNK8touchgfx6Button4drawERKNS_4RectE+0xbc>
 8012672:	6898      	ldr	r0, [r3, #8]
 8012674:	6801      	ldr	r1, [r0, #0]
 8012676:	f9bd 3022 	ldrsh.w	r3, [sp, #34]	; 0x22
 801267a:	f9bd 2020 	ldrsh.w	r2, [sp, #32]
 801267e:	2501      	movs	r5, #1
 8012680:	9502      	str	r5, [sp, #8]
 8012682:	f894 4032 	ldrb.w	r4, [r4, #50]	; 0x32
 8012686:	9401      	str	r4, [sp, #4]
 8012688:	ac06      	add	r4, sp, #24
 801268a:	9400      	str	r4, [sp, #0]
 801268c:	688c      	ldr	r4, [r1, #8]
 801268e:	a905      	add	r1, sp, #20
 8012690:	47a0      	blx	r4
 8012692:	b00a      	add	sp, #40	; 0x28
 8012694:	e8bd 81f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, pc}
 8012698:	8dc3      	ldrh	r3, [r0, #46]	; 0x2e
 801269a:	e797      	b.n	80125cc <_ZNK8touchgfx6Button4drawERKNS_4RectE+0x14>
 801269c:	2300      	movs	r3, #0
 801269e:	9307      	str	r3, [sp, #28]
 80126a0:	e7ca      	b.n	8012638 <_ZNK8touchgfx6Button4drawERKNS_4RectE+0x80>
 80126a2:	bf00      	nop
 80126a4:	20012f24 	.word	0x20012f24

080126a8 <_ZNK8touchgfx6Button17invalidateContentEv>:
 80126a8:	f890 2032 	ldrb.w	r2, [r0, #50]	; 0x32
 80126ac:	b12a      	cbz	r2, 80126ba <_ZNK8touchgfx6Button17invalidateContentEv+0x12>
 80126ae:	f890 2025 	ldrb.w	r2, [r0, #37]	; 0x25
 80126b2:	b112      	cbz	r2, 80126ba <_ZNK8touchgfx6Button17invalidateContentEv+0x12>
 80126b4:	6803      	ldr	r3, [r0, #0]
 80126b6:	695b      	ldr	r3, [r3, #20]
 80126b8:	4718      	bx	r3
 80126ba:	4770      	bx	lr

080126bc <_ZNK8touchgfx24TextAreaWithWildcardBase4drawERKNS_4RectE>:
 80126bc:	e92d 43f0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, lr}
 80126c0:	4b2f      	ldr	r3, [pc, #188]	; (8012780 <_ZNK8touchgfx24TextAreaWithWildcardBase4drawERKNS_4RectE+0xc4>)
 80126c2:	8d82      	ldrh	r2, [r0, #44]	; 0x2c
 80126c4:	881b      	ldrh	r3, [r3, #0]
 80126c6:	4293      	cmp	r3, r2
 80126c8:	b08d      	sub	sp, #52	; 0x34
 80126ca:	4604      	mov	r4, r0
 80126cc:	460f      	mov	r7, r1
 80126ce:	d954      	bls.n	801277a <_ZNK8touchgfx24TextAreaWithWildcardBase4drawERKNS_4RectE+0xbe>
 80126d0:	4b2c      	ldr	r3, [pc, #176]	; (8012784 <_ZNK8touchgfx24TextAreaWithWildcardBase4drawERKNS_4RectE+0xc8>)
 80126d2:	6819      	ldr	r1, [r3, #0]
 80126d4:	eb01 0342 	add.w	r3, r1, r2, lsl #1
 80126d8:	f811 1012 	ldrb.w	r1, [r1, r2, lsl #1]
 80126dc:	4a2a      	ldr	r2, [pc, #168]	; (8012788 <_ZNK8touchgfx24TextAreaWithWildcardBase4drawERKNS_4RectE+0xcc>)
 80126de:	6812      	ldr	r2, [r2, #0]
 80126e0:	f852 1021 	ldr.w	r1, [r2, r1, lsl #2]
 80126e4:	2900      	cmp	r1, #0
 80126e6:	d048      	beq.n	801277a <_ZNK8touchgfx24TextAreaWithWildcardBase4drawERKNS_4RectE+0xbe>
 80126e8:	785a      	ldrb	r2, [r3, #1]
 80126ea:	f894 3039 	ldrb.w	r3, [r4, #57]	; 0x39
 80126ee:	f88d 302c 	strb.w	r3, [sp, #44]	; 0x2c
 80126f2:	4b26      	ldr	r3, [pc, #152]	; (801278c <_ZNK8touchgfx24TextAreaWithWildcardBase4drawERKNS_4RectE+0xd0>)
 80126f4:	f890 5036 	ldrb.w	r5, [r0, #54]	; 0x36
 80126f8:	f9b0 c034 	ldrsh.w	ip, [r0, #52]	; 0x34
 80126fc:	f890 e038 	ldrb.w	lr, [r0, #56]	; 0x38
 8012700:	6b26      	ldr	r6, [r4, #48]	; 0x30
 8012702:	f890 0037 	ldrb.w	r0, [r0, #55]	; 0x37
 8012706:	9107      	str	r1, [sp, #28]
 8012708:	f3c2 0801 	ubfx	r8, r2, #0, #2
 801270c:	f3c2 0281 	ubfx	r2, r2, #2, #2
 8012710:	f88d 2021 	strb.w	r2, [sp, #33]	; 0x21
 8012714:	681a      	ldr	r2, [r3, #0]
 8012716:	f88d 8020 	strb.w	r8, [sp, #32]
 801271a:	f892 3058 	ldrb.w	r3, [r2, #88]	; 0x58
 801271e:	f88d e022 	strb.w	lr, [sp, #34]	; 0x22
 8012722:	9609      	str	r6, [sp, #36]	; 0x24
 8012724:	f8ad c028 	strh.w	ip, [sp, #40]	; 0x28
 8012728:	f88d 502a 	strb.w	r5, [sp, #42]	; 0x2a
 801272c:	f88d 002b 	strb.w	r0, [sp, #43]	; 0x2b
 8012730:	b10b      	cbz	r3, 8012736 <_ZNK8touchgfx24TextAreaWithWildcardBase4drawERKNS_4RectE+0x7a>
 8012732:	6cd5      	ldr	r5, [r2, #76]	; 0x4c
 8012734:	b905      	cbnz	r5, 8012738 <_ZNK8touchgfx24TextAreaWithWildcardBase4drawERKNS_4RectE+0x7c>
 8012736:	6895      	ldr	r5, [r2, #8]
 8012738:	ae05      	add	r6, sp, #20
 801273a:	4621      	mov	r1, r4
 801273c:	4630      	mov	r0, r6
 801273e:	f003 ff7b 	bl	8016638 <_ZNK8touchgfx8Drawable15getAbsoluteRectEv>
 8012742:	4b13      	ldr	r3, [pc, #76]	; (8012790 <_ZNK8touchgfx24TextAreaWithWildcardBase4drawERKNS_4RectE+0xd4>)
 8012744:	8da1      	ldrh	r1, [r4, #44]	; 0x2c
 8012746:	6818      	ldr	r0, [r3, #0]
 8012748:	f7f5 fd10 	bl	800816c <_ZNK8touchgfx5Texts7getTextEt>
 801274c:	6823      	ldr	r3, [r4, #0]
 801274e:	4680      	mov	r8, r0
 8012750:	6fdb      	ldr	r3, [r3, #124]	; 0x7c
 8012752:	4620      	mov	r0, r4
 8012754:	4798      	blx	r3
 8012756:	6823      	ldr	r3, [r4, #0]
 8012758:	4681      	mov	r9, r0
 801275a:	f8d3 3080 	ldr.w	r3, [r3, #128]	; 0x80
 801275e:	4620      	mov	r0, r4
 8012760:	4798      	blx	r3
 8012762:	e9cd 9002 	strd	r9, r0, [sp, #8]
 8012766:	ab07      	add	r3, sp, #28
 8012768:	9300      	str	r3, [sp, #0]
 801276a:	f8cd 8004 	str.w	r8, [sp, #4]
 801276e:	463b      	mov	r3, r7
 8012770:	e896 0006 	ldmia.w	r6, {r1, r2}
 8012774:	4628      	mov	r0, r5
 8012776:	f7f5 fcab 	bl	80080d0 <_ZN8touchgfx3LCD10drawStringENS_4RectERKS1_RKNS0_13StringVisualsEPKtz>
 801277a:	b00d      	add	sp, #52	; 0x34
 801277c:	e8bd 83f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, pc}
 8012780:	20012f80 	.word	0x20012f80
 8012784:	20012f7c 	.word	0x20012f7c
 8012788:	20012f84 	.word	0x20012f84
 801278c:	20012f24 	.word	0x20012f24
 8012790:	20012f88 	.word	0x20012f88

08012794 <_ZN8touchgfx14ButtonWithIcon10setBitmapsERKNS_6BitmapES3_>:
 8012794:	4770      	bx	lr

08012796 <_ZN8touchgfx14ButtonWithIconD1Ev>:
 8012796:	4770      	bx	lr

08012798 <_ZN8touchgfx14ButtonWithIconD0Ev>:
 8012798:	b510      	push	{r4, lr}
 801279a:	213c      	movs	r1, #60	; 0x3c
 801279c:	4604      	mov	r4, r0
 801279e:	f016 fe3e 	bl	802941e <_ZdlPvj>
 80127a2:	4620      	mov	r0, r4
 80127a4:	bd10      	pop	{r4, pc}

080127a6 <_ZN8touchgfx14ButtonWithIcon10setBitmapsERKNS_6BitmapES3_S3_S3_>:
 80127a6:	e92d 41f0 	stmdb	sp!, {r4, r5, r6, r7, r8, lr}
 80127aa:	461c      	mov	r4, r3
 80127ac:	4606      	mov	r6, r0
 80127ae:	9f06      	ldr	r7, [sp, #24]
 80127b0:	f7ff febf 	bl	8012532 <_ZN8touchgfx6Button10setBitmapsERKNS_6BitmapES3_>
 80127b4:	8823      	ldrh	r3, [r4, #0]
 80127b6:	86b3      	strh	r3, [r6, #52]	; 0x34
 80127b8:	883b      	ldrh	r3, [r7, #0]
 80127ba:	86f3      	strh	r3, [r6, #54]	; 0x36
 80127bc:	4638      	mov	r0, r7
 80127be:	f9b6 5008 	ldrsh.w	r5, [r6, #8]
 80127c2:	f006 f9c7 	bl	8018b54 <_ZNK8touchgfx6Bitmap8getWidthEv>
 80127c6:	f04f 0802 	mov.w	r8, #2
 80127ca:	fb95 f5f8 	sdiv	r5, r5, r8
 80127ce:	b2ad      	uxth	r5, r5
 80127d0:	fb90 f0f8 	sdiv	r0, r0, r8
 80127d4:	1a2d      	subs	r5, r5, r0
 80127d6:	8735      	strh	r5, [r6, #56]	; 0x38
 80127d8:	4638      	mov	r0, r7
 80127da:	f9b6 400a 	ldrsh.w	r4, [r6, #10]
 80127de:	fb94 f4f8 	sdiv	r4, r4, r8
 80127e2:	f006 f9eb 	bl	8018bbc <_ZNK8touchgfx6Bitmap9getHeightEv>
 80127e6:	b2a4      	uxth	r4, r4
 80127e8:	fb90 f0f8 	sdiv	r0, r0, r8
 80127ec:	1a24      	subs	r4, r4, r0
 80127ee:	8774      	strh	r4, [r6, #58]	; 0x3a
 80127f0:	e8bd 81f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, pc}

080127f4 <_ZNK8touchgfx14ButtonWithIcon4drawERKNS_4RectE>:
 80127f4:	e92d 41f0 	stmdb	sp!, {r4, r5, r6, r7, r8, lr}
 80127f8:	4604      	mov	r4, r0
 80127fa:	b08c      	sub	sp, #48	; 0x30
 80127fc:	460d      	mov	r5, r1
 80127fe:	f7ff fedb 	bl	80125b8 <_ZNK8touchgfx6Button4drawERKNS_4RectE>
 8012802:	f894 302c 	ldrb.w	r3, [r4, #44]	; 0x2c
 8012806:	2b00      	cmp	r3, #0
 8012808:	d05d      	beq.n	80128c6 <_ZNK8touchgfx14ButtonWithIcon4drawERKNS_4RectE+0xd2>
 801280a:	8ee3      	ldrh	r3, [r4, #54]	; 0x36
 801280c:	f8ad 3014 	strh.w	r3, [sp, #20]
 8012810:	a805      	add	r0, sp, #20
 8012812:	f9b4 8038 	ldrsh.w	r8, [r4, #56]	; 0x38
 8012816:	f9b4 703a 	ldrsh.w	r7, [r4, #58]	; 0x3a
 801281a:	f006 f99b 	bl	8018b54 <_ZNK8touchgfx6Bitmap8getWidthEv>
 801281e:	4606      	mov	r6, r0
 8012820:	a805      	add	r0, sp, #20
 8012822:	f006 f9cb 	bl	8018bbc <_ZNK8touchgfx6Bitmap9getHeightEv>
 8012826:	6869      	ldr	r1, [r5, #4]
 8012828:	f8ad 001e 	strh.w	r0, [sp, #30]
 801282c:	6828      	ldr	r0, [r5, #0]
 801282e:	f8ad 8018 	strh.w	r8, [sp, #24]
 8012832:	ab08      	add	r3, sp, #32
 8012834:	ad08      	add	r5, sp, #32
 8012836:	c303      	stmia	r3!, {r0, r1}
 8012838:	a906      	add	r1, sp, #24
 801283a:	4628      	mov	r0, r5
 801283c:	f8ad 701a 	strh.w	r7, [sp, #26]
 8012840:	f8ad 601c 	strh.w	r6, [sp, #28]
 8012844:	f7fd fc62 	bl	801010c <_ZN8touchgfx4RectaNERKS0_>
 8012848:	f8bd 2014 	ldrh.w	r2, [sp, #20]
 801284c:	f64f 73ff 	movw	r3, #65535	; 0xffff
 8012850:	429a      	cmp	r2, r3
 8012852:	d035      	beq.n	80128c0 <_ZNK8touchgfx14ButtonWithIcon4drawERKNS_4RectE+0xcc>
 8012854:	f9bd 3024 	ldrsh.w	r3, [sp, #36]	; 0x24
 8012858:	2b00      	cmp	r3, #0
 801285a:	dd31      	ble.n	80128c0 <_ZNK8touchgfx14ButtonWithIcon4drawERKNS_4RectE+0xcc>
 801285c:	f9bd 3026 	ldrsh.w	r3, [sp, #38]	; 0x26
 8012860:	2b00      	cmp	r3, #0
 8012862:	dd2d      	ble.n	80128c0 <_ZNK8touchgfx14ButtonWithIcon4drawERKNS_4RectE+0xcc>
 8012864:	2300      	movs	r3, #0
 8012866:	e9cd 330a 	strd	r3, r3, [sp, #40]	; 0x28
 801286a:	6823      	ldr	r3, [r4, #0]
 801286c:	a90a      	add	r1, sp, #40	; 0x28
 801286e:	6adb      	ldr	r3, [r3, #44]	; 0x2c
 8012870:	4620      	mov	r0, r4
 8012872:	4798      	blx	r3
 8012874:	f8bd 3020 	ldrh.w	r3, [sp, #32]
 8012878:	8f22      	ldrh	r2, [r4, #56]	; 0x38
 801287a:	f8bd 1022 	ldrh.w	r1, [sp, #34]	; 0x22
 801287e:	1a9b      	subs	r3, r3, r2
 8012880:	f8ad 3020 	strh.w	r3, [sp, #32]
 8012884:	8f63      	ldrh	r3, [r4, #58]	; 0x3a
 8012886:	1ac9      	subs	r1, r1, r3
 8012888:	f8ad 1022 	strh.w	r1, [sp, #34]	; 0x22
 801288c:	490f      	ldr	r1, [pc, #60]	; (80128cc <_ZNK8touchgfx14ButtonWithIcon4drawERKNS_4RectE+0xd8>)
 801288e:	6809      	ldr	r1, [r1, #0]
 8012890:	f891 0058 	ldrb.w	r0, [r1, #88]	; 0x58
 8012894:	b108      	cbz	r0, 801289a <_ZNK8touchgfx14ButtonWithIcon4drawERKNS_4RectE+0xa6>
 8012896:	6cc8      	ldr	r0, [r1, #76]	; 0x4c
 8012898:	b900      	cbnz	r0, 801289c <_ZNK8touchgfx14ButtonWithIcon4drawERKNS_4RectE+0xa8>
 801289a:	6888      	ldr	r0, [r1, #8]
 801289c:	f8bd 102a 	ldrh.w	r1, [sp, #42]	; 0x2a
 80128a0:	440b      	add	r3, r1
 80128a2:	f8bd 1028 	ldrh.w	r1, [sp, #40]	; 0x28
 80128a6:	2601      	movs	r6, #1
 80128a8:	440a      	add	r2, r1
 80128aa:	6801      	ldr	r1, [r0, #0]
 80128ac:	9602      	str	r6, [sp, #8]
 80128ae:	f894 4032 	ldrb.w	r4, [r4, #50]	; 0x32
 80128b2:	e9cd 5400 	strd	r5, r4, [sp]
 80128b6:	b21b      	sxth	r3, r3
 80128b8:	688c      	ldr	r4, [r1, #8]
 80128ba:	b212      	sxth	r2, r2
 80128bc:	a905      	add	r1, sp, #20
 80128be:	47a0      	blx	r4
 80128c0:	b00c      	add	sp, #48	; 0x30
 80128c2:	e8bd 81f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, pc}
 80128c6:	8ea3      	ldrh	r3, [r4, #52]	; 0x34
 80128c8:	e7a0      	b.n	801280c <_ZNK8touchgfx14ButtonWithIcon4drawERKNS_4RectE+0x18>
 80128ca:	bf00      	nop
 80128cc:	20012f24 	.word	0x20012f24

080128d0 <_ZN8touchgfx14ButtonWithIconC1Ev>:
 80128d0:	b510      	push	{r4, lr}
 80128d2:	2101      	movs	r1, #1
 80128d4:	2200      	movs	r2, #0
 80128d6:	f880 1025 	strb.w	r1, [r0, #37]	; 0x25
 80128da:	f880 1024 	strb.w	r1, [r0, #36]	; 0x24
 80128de:	4c0e      	ldr	r4, [pc, #56]	; (8012918 <_ZN8touchgfx14ButtonWithIconC1Ev+0x48>)
 80128e0:	8082      	strh	r2, [r0, #4]
 80128e2:	f64f 71ff 	movw	r1, #65535	; 0xffff
 80128e6:	80c2      	strh	r2, [r0, #6]
 80128e8:	8102      	strh	r2, [r0, #8]
 80128ea:	8142      	strh	r2, [r0, #10]
 80128ec:	8182      	strh	r2, [r0, #12]
 80128ee:	81c2      	strh	r2, [r0, #14]
 80128f0:	8202      	strh	r2, [r0, #16]
 80128f2:	8242      	strh	r2, [r0, #18]
 80128f4:	e9c0 2205 	strd	r2, r2, [r0, #20]
 80128f8:	61c2      	str	r2, [r0, #28]
 80128fa:	8402      	strh	r2, [r0, #32]
 80128fc:	8442      	strh	r2, [r0, #34]	; 0x22
 80128fe:	6282      	str	r2, [r0, #40]	; 0x28
 8012900:	f880 202c 	strb.w	r2, [r0, #44]	; 0x2c
 8012904:	85c1      	strh	r1, [r0, #46]	; 0x2e
 8012906:	8601      	strh	r1, [r0, #48]	; 0x30
 8012908:	f880 1032 	strb.w	r1, [r0, #50]	; 0x32
 801290c:	6004      	str	r4, [r0, #0]
 801290e:	8681      	strh	r1, [r0, #52]	; 0x34
 8012910:	86c1      	strh	r1, [r0, #54]	; 0x36
 8012912:	8702      	strh	r2, [r0, #56]	; 0x38
 8012914:	8742      	strh	r2, [r0, #58]	; 0x3a
 8012916:	bd10      	pop	{r4, pc}
 8012918:	0802e690 	.word	0x0802e690

0801291c <_ZN8touchgfx5ImageD1Ev>:
 801291c:	4770      	bx	lr

0801291e <_ZN8touchgfx5Image9setBitmapERKNS_6BitmapE>:
 801291e:	b570      	push	{r4, r5, r6, lr}
 8012920:	880b      	ldrh	r3, [r1, #0]
 8012922:	84c3      	strh	r3, [r0, #38]	; 0x26
 8012924:	4604      	mov	r4, r0
 8012926:	4608      	mov	r0, r1
 8012928:	460d      	mov	r5, r1
 801292a:	f006 f913 	bl	8018b54 <_ZNK8touchgfx6Bitmap8getWidthEv>
 801292e:	4606      	mov	r6, r0
 8012930:	4628      	mov	r0, r5
 8012932:	f006 f943 	bl	8018bbc <_ZNK8touchgfx6Bitmap9getHeightEv>
 8012936:	6823      	ldr	r3, [r4, #0]
 8012938:	4605      	mov	r5, r0
 801293a:	4631      	mov	r1, r6
 801293c:	4620      	mov	r0, r4
 801293e:	6b9b      	ldr	r3, [r3, #56]	; 0x38
 8012940:	4798      	blx	r3
 8012942:	6823      	ldr	r3, [r4, #0]
 8012944:	4629      	mov	r1, r5
 8012946:	4620      	mov	r0, r4
 8012948:	6bdb      	ldr	r3, [r3, #60]	; 0x3c
 801294a:	e8bd 4070 	ldmia.w	sp!, {r4, r5, r6, lr}
 801294e:	4718      	bx	r3

08012950 <_ZN8touchgfx5ImageD0Ev>:
 8012950:	b510      	push	{r4, lr}
 8012952:	212c      	movs	r1, #44	; 0x2c
 8012954:	4604      	mov	r4, r0
 8012956:	f016 fd62 	bl	802941e <_ZdlPvj>
 801295a:	4620      	mov	r0, r4
 801295c:	bd10      	pop	{r4, pc}

0801295e <_ZNK8touchgfx5Image12getSolidRectEv>:
 801295e:	b510      	push	{r4, lr}
 8012960:	f891 3028 	ldrb.w	r3, [r1, #40]	; 0x28
 8012964:	2bff      	cmp	r3, #255	; 0xff
 8012966:	4604      	mov	r4, r0
 8012968:	d006      	beq.n	8012978 <_ZNK8touchgfx5Image12getSolidRectEv+0x1a>
 801296a:	2300      	movs	r3, #0
 801296c:	8003      	strh	r3, [r0, #0]
 801296e:	8043      	strh	r3, [r0, #2]
 8012970:	8083      	strh	r3, [r0, #4]
 8012972:	80c3      	strh	r3, [r0, #6]
 8012974:	4620      	mov	r0, r4
 8012976:	bd10      	pop	{r4, pc}
 8012978:	3126      	adds	r1, #38	; 0x26
 801297a:	f006 f953 	bl	8018c24 <_ZNK8touchgfx6Bitmap12getSolidRectEv>
 801297e:	e7f9      	b.n	8012974 <_ZNK8touchgfx5Image12getSolidRectEv+0x16>

08012980 <_ZNK8touchgfx5Image17invalidateContentEv>:
 8012980:	f890 2028 	ldrb.w	r2, [r0, #40]	; 0x28
 8012984:	b12a      	cbz	r2, 8012992 <_ZNK8touchgfx5Image17invalidateContentEv+0x12>
 8012986:	f890 2025 	ldrb.w	r2, [r0, #37]	; 0x25
 801298a:	b112      	cbz	r2, 8012992 <_ZNK8touchgfx5Image17invalidateContentEv+0x12>
 801298c:	6803      	ldr	r3, [r0, #0]
 801298e:	695b      	ldr	r3, [r3, #20]
 8012990:	4718      	bx	r3
 8012992:	4770      	bx	lr

08012994 <_ZNK8touchgfx5Image4drawERKNS_4RectE>:
 8012994:	e92d 41f0 	stmdb	sp!, {r4, r5, r6, r7, r8, lr}
 8012998:	4604      	mov	r4, r0
 801299a:	b088      	sub	sp, #32
 801299c:	f854 3b26 	ldr.w	r3, [r4], #38
 80129a0:	2500      	movs	r5, #0
 80129a2:	6adb      	ldr	r3, [r3, #44]	; 0x2c
 80129a4:	460f      	mov	r7, r1
 80129a6:	e9cd 5504 	strd	r5, r5, [sp, #16]
 80129aa:	a904      	add	r1, sp, #16
 80129ac:	4606      	mov	r6, r0
 80129ae:	4798      	blx	r3
 80129b0:	4620      	mov	r0, r4
 80129b2:	f006 f8cf 	bl	8018b54 <_ZNK8touchgfx6Bitmap8getWidthEv>
 80129b6:	4680      	mov	r8, r0
 80129b8:	4620      	mov	r0, r4
 80129ba:	f006 f8ff 	bl	8018bbc <_ZNK8touchgfx6Bitmap9getHeightEv>
 80129be:	9506      	str	r5, [sp, #24]
 80129c0:	ad06      	add	r5, sp, #24
 80129c2:	f8ad 001e 	strh.w	r0, [sp, #30]
 80129c6:	4639      	mov	r1, r7
 80129c8:	4628      	mov	r0, r5
 80129ca:	f8ad 801c 	strh.w	r8, [sp, #28]
 80129ce:	f7fd fb9d 	bl	801010c <_ZN8touchgfx4RectaNERKS0_>
 80129d2:	f9bd 301c 	ldrsh.w	r3, [sp, #28]
 80129d6:	2b00      	cmp	r3, #0
 80129d8:	dd19      	ble.n	8012a0e <_ZNK8touchgfx5Image4drawERKNS_4RectE+0x7a>
 80129da:	f9bd 301e 	ldrsh.w	r3, [sp, #30]
 80129de:	2b00      	cmp	r3, #0
 80129e0:	dd15      	ble.n	8012a0e <_ZNK8touchgfx5Image4drawERKNS_4RectE+0x7a>
 80129e2:	4b0c      	ldr	r3, [pc, #48]	; (8012a14 <_ZNK8touchgfx5Image4drawERKNS_4RectE+0x80>)
 80129e4:	681b      	ldr	r3, [r3, #0]
 80129e6:	f893 2058 	ldrb.w	r2, [r3, #88]	; 0x58
 80129ea:	b10a      	cbz	r2, 80129f0 <_ZNK8touchgfx5Image4drawERKNS_4RectE+0x5c>
 80129ec:	6cd8      	ldr	r0, [r3, #76]	; 0x4c
 80129ee:	b900      	cbnz	r0, 80129f2 <_ZNK8touchgfx5Image4drawERKNS_4RectE+0x5e>
 80129f0:	6898      	ldr	r0, [r3, #8]
 80129f2:	6801      	ldr	r1, [r0, #0]
 80129f4:	f9bd 3012 	ldrsh.w	r3, [sp, #18]
 80129f8:	f9bd 2010 	ldrsh.w	r2, [sp, #16]
 80129fc:	2701      	movs	r7, #1
 80129fe:	9702      	str	r7, [sp, #8]
 8012a00:	f896 6028 	ldrb.w	r6, [r6, #40]	; 0x28
 8012a04:	e9cd 5600 	strd	r5, r6, [sp]
 8012a08:	688d      	ldr	r5, [r1, #8]
 8012a0a:	4621      	mov	r1, r4
 8012a0c:	47a8      	blx	r5
 8012a0e:	b008      	add	sp, #32
 8012a10:	e8bd 81f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, pc}
 8012a14:	20012f24 	.word	0x20012f24

08012a18 <_ZN8touchgfx15ButtonWithLabelD1Ev>:
 8012a18:	4770      	bx	lr

08012a1a <_ZN8touchgfx15ButtonWithLabelD0Ev>:
 8012a1a:	b510      	push	{r4, lr}
 8012a1c:	2148      	movs	r1, #72	; 0x48
 8012a1e:	4604      	mov	r4, r0
 8012a20:	f016 fcfd 	bl	802941e <_ZdlPvj>
 8012a24:	4620      	mov	r0, r4
 8012a26:	bd10      	pop	{r4, pc}

08012a28 <_ZNK8touchgfx15ButtonWithLabel4drawERKNS_4RectE>:
 8012a28:	e92d 43f0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, lr}
 8012a2c:	b08d      	sub	sp, #52	; 0x34
 8012a2e:	4604      	mov	r4, r0
 8012a30:	460f      	mov	r7, r1
 8012a32:	f7ff fdc1 	bl	80125b8 <_ZNK8touchgfx6Button4drawERKNS_4RectE>
 8012a36:	4a55      	ldr	r2, [pc, #340]	; (8012b8c <_ZNK8touchgfx15ButtonWithLabel4drawERKNS_4RectE+0x164>)
 8012a38:	8f23      	ldrh	r3, [r4, #56]	; 0x38
 8012a3a:	8812      	ldrh	r2, [r2, #0]
 8012a3c:	429a      	cmp	r2, r3
 8012a3e:	f240 8082 	bls.w	8012b46 <_ZNK8touchgfx15ButtonWithLabel4drawERKNS_4RectE+0x11e>
 8012a42:	4d53      	ldr	r5, [pc, #332]	; (8012b90 <_ZNK8touchgfx15ButtonWithLabel4drawERKNS_4RectE+0x168>)
 8012a44:	682a      	ldr	r2, [r5, #0]
 8012a46:	f812 2013 	ldrb.w	r2, [r2, r3, lsl #1]
 8012a4a:	4b52      	ldr	r3, [pc, #328]	; (8012b94 <_ZNK8touchgfx15ButtonWithLabel4drawERKNS_4RectE+0x16c>)
 8012a4c:	681b      	ldr	r3, [r3, #0]
 8012a4e:	f853 6022 	ldr.w	r6, [r3, r2, lsl #2]
 8012a52:	f9b4 3046 	ldrsh.w	r3, [r4, #70]	; 0x46
 8012a56:	2200      	movs	r2, #0
 8012a58:	e9cd 2203 	strd	r2, r2, [sp, #12]
 8012a5c:	f894 2044 	ldrb.w	r2, [r4, #68]	; 0x44
 8012a60:	2a03      	cmp	r2, #3
 8012a62:	d811      	bhi.n	8012a88 <_ZNK8touchgfx15ButtonWithLabel4drawERKNS_4RectE+0x60>
 8012a64:	e8df f002 	tbb	[pc, r2]
 8012a68:	89727902 	.word	0x89727902
 8012a6c:	f9b4 200a 	ldrsh.w	r2, [r4, #10]
 8012a70:	f9b4 1008 	ldrsh.w	r1, [r4, #8]
 8012a74:	1ad2      	subs	r2, r2, r3
 8012a76:	2002      	movs	r0, #2
 8012a78:	f8ad 1010 	strh.w	r1, [sp, #16]
 8012a7c:	fb92 f2f0 	sdiv	r2, r2, r0
 8012a80:	f8ad 3012 	strh.w	r3, [sp, #18]
 8012a84:	f8ad 200e 	strh.w	r2, [sp, #14]
 8012a88:	f10d 080c 	add.w	r8, sp, #12
 8012a8c:	e898 0003 	ldmia.w	r8, {r0, r1}
 8012a90:	f10d 0914 	add.w	r9, sp, #20
 8012a94:	e889 0003 	stmia.w	r9, {r0, r1}
 8012a98:	4639      	mov	r1, r7
 8012a9a:	4648      	mov	r0, r9
 8012a9c:	f7fd fb36 	bl	801010c <_ZN8touchgfx4RectaNERKS0_>
 8012aa0:	f9bd 3018 	ldrsh.w	r3, [sp, #24]
 8012aa4:	2b00      	cmp	r3, #0
 8012aa6:	dd4e      	ble.n	8012b46 <_ZNK8touchgfx15ButtonWithLabel4drawERKNS_4RectE+0x11e>
 8012aa8:	f9bd 301a 	ldrsh.w	r3, [sp, #26]
 8012aac:	2b00      	cmp	r3, #0
 8012aae:	dd4a      	ble.n	8012b46 <_ZNK8touchgfx15ButtonWithLabel4drawERKNS_4RectE+0x11e>
 8012ab0:	f8bd 3014 	ldrh.w	r3, [sp, #20]
 8012ab4:	f8bd 200c 	ldrh.w	r2, [sp, #12]
 8012ab8:	1a9b      	subs	r3, r3, r2
 8012aba:	f8ad 3014 	strh.w	r3, [sp, #20]
 8012abe:	f8bd 200e 	ldrh.w	r2, [sp, #14]
 8012ac2:	f8bd 3016 	ldrh.w	r3, [sp, #22]
 8012ac6:	1a9b      	subs	r3, r3, r2
 8012ac8:	f8ad 3016 	strh.w	r3, [sp, #22]
 8012acc:	6823      	ldr	r3, [r4, #0]
 8012ace:	4641      	mov	r1, r8
 8012ad0:	6adb      	ldr	r3, [r3, #44]	; 0x2c
 8012ad2:	4620      	mov	r0, r4
 8012ad4:	4798      	blx	r3
 8012ad6:	f894 302c 	ldrb.w	r3, [r4, #44]	; 0x2c
 8012ada:	2b00      	cmp	r3, #0
 8012adc:	d053      	beq.n	8012b86 <_ZNK8touchgfx15ButtonWithLabel4drawERKNS_4RectE+0x15e>
 8012ade:	6c22      	ldr	r2, [r4, #64]	; 0x40
 8012ae0:	8f21      	ldrh	r1, [r4, #56]	; 0x38
 8012ae2:	682b      	ldr	r3, [r5, #0]
 8012ae4:	f894 0032 	ldrb.w	r0, [r4, #50]	; 0x32
 8012ae8:	f894 4044 	ldrb.w	r4, [r4, #68]	; 0x44
 8012aec:	eb03 0341 	add.w	r3, r3, r1, lsl #1
 8012af0:	785b      	ldrb	r3, [r3, #1]
 8012af2:	9209      	str	r2, [sp, #36]	; 0x24
 8012af4:	f3c3 0501 	ubfx	r5, r3, #0, #2
 8012af8:	f3c3 0381 	ubfx	r3, r3, #2, #2
 8012afc:	f88d 3021 	strb.w	r3, [sp, #33]	; 0x21
 8012b00:	2300      	movs	r3, #0
 8012b02:	f8ad 3028 	strh.w	r3, [sp, #40]	; 0x28
 8012b06:	f88d 302b 	strb.w	r3, [sp, #43]	; 0x2b
 8012b0a:	f88d 302c 	strb.w	r3, [sp, #44]	; 0x2c
 8012b0e:	4b22      	ldr	r3, [pc, #136]	; (8012b98 <_ZNK8touchgfx15ButtonWithLabel4drawERKNS_4RectE+0x170>)
 8012b10:	9607      	str	r6, [sp, #28]
 8012b12:	681b      	ldr	r3, [r3, #0]
 8012b14:	f88d 5020 	strb.w	r5, [sp, #32]
 8012b18:	f893 2058 	ldrb.w	r2, [r3, #88]	; 0x58
 8012b1c:	f88d 4022 	strb.w	r4, [sp, #34]	; 0x22
 8012b20:	f88d 002a 	strb.w	r0, [sp, #42]	; 0x2a
 8012b24:	b10a      	cbz	r2, 8012b2a <_ZNK8touchgfx15ButtonWithLabel4drawERKNS_4RectE+0x102>
 8012b26:	6cdc      	ldr	r4, [r3, #76]	; 0x4c
 8012b28:	b904      	cbnz	r4, 8012b2c <_ZNK8touchgfx15ButtonWithLabel4drawERKNS_4RectE+0x104>
 8012b2a:	689c      	ldr	r4, [r3, #8]
 8012b2c:	4b1b      	ldr	r3, [pc, #108]	; (8012b9c <_ZNK8touchgfx15ButtonWithLabel4drawERKNS_4RectE+0x174>)
 8012b2e:	6818      	ldr	r0, [r3, #0]
 8012b30:	f7f5 fb1c 	bl	800816c <_ZNK8touchgfx5Texts7getTextEt>
 8012b34:	ab07      	add	r3, sp, #28
 8012b36:	9001      	str	r0, [sp, #4]
 8012b38:	9300      	str	r3, [sp, #0]
 8012b3a:	e898 0006 	ldmia.w	r8, {r1, r2}
 8012b3e:	464b      	mov	r3, r9
 8012b40:	4620      	mov	r0, r4
 8012b42:	f7f5 fac5 	bl	80080d0 <_ZN8touchgfx3LCD10drawStringENS_4RectERKS1_RKNS0_13StringVisualsEPKtz>
 8012b46:	b00d      	add	sp, #52	; 0x34
 8012b48:	e8bd 83f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, pc}
 8012b4c:	f9b4 200a 	ldrsh.w	r2, [r4, #10]
 8012b50:	f9b4 1008 	ldrsh.w	r1, [r4, #8]
 8012b54:	1ad2      	subs	r2, r2, r3
 8012b56:	3201      	adds	r2, #1
 8012b58:	e78d      	b.n	8012a76 <_ZNK8touchgfx15ButtonWithLabel4drawERKNS_4RectE+0x4e>
 8012b5a:	f9b4 2008 	ldrsh.w	r2, [r4, #8]
 8012b5e:	f9b4 100a 	ldrsh.w	r1, [r4, #10]
 8012b62:	1ad2      	subs	r2, r2, r3
 8012b64:	3201      	adds	r2, #1
 8012b66:	2002      	movs	r0, #2
 8012b68:	f8ad 3010 	strh.w	r3, [sp, #16]
 8012b6c:	fb92 f2f0 	sdiv	r2, r2, r0
 8012b70:	f8ad 1012 	strh.w	r1, [sp, #18]
 8012b74:	f8ad 200c 	strh.w	r2, [sp, #12]
 8012b78:	e786      	b.n	8012a88 <_ZNK8touchgfx15ButtonWithLabel4drawERKNS_4RectE+0x60>
 8012b7a:	f9b4 2008 	ldrsh.w	r2, [r4, #8]
 8012b7e:	f9b4 100a 	ldrsh.w	r1, [r4, #10]
 8012b82:	1ad2      	subs	r2, r2, r3
 8012b84:	e7ef      	b.n	8012b66 <_ZNK8touchgfx15ButtonWithLabel4drawERKNS_4RectE+0x13e>
 8012b86:	6be2      	ldr	r2, [r4, #60]	; 0x3c
 8012b88:	e7aa      	b.n	8012ae0 <_ZNK8touchgfx15ButtonWithLabel4drawERKNS_4RectE+0xb8>
 8012b8a:	bf00      	nop
 8012b8c:	20012f80 	.word	0x20012f80
 8012b90:	20012f7c 	.word	0x20012f7c
 8012b94:	20012f84 	.word	0x20012f84
 8012b98:	20012f24 	.word	0x20012f24
 8012b9c:	20012f88 	.word	0x20012f88

08012ba0 <_ZN8touchgfx15ButtonWithLabelC1Ev>:
 8012ba0:	b510      	push	{r4, lr}
 8012ba2:	2101      	movs	r1, #1
 8012ba4:	4c13      	ldr	r4, [pc, #76]	; (8012bf4 <_ZN8touchgfx15ButtonWithLabelC1Ev+0x54>)
 8012ba6:	f880 1025 	strb.w	r1, [r0, #37]	; 0x25
 8012baa:	2200      	movs	r2, #0
 8012bac:	f880 1024 	strb.w	r1, [r0, #36]	; 0x24
 8012bb0:	6004      	str	r4, [r0, #0]
 8012bb2:	f64f 71ff 	movw	r1, #65535	; 0xffff
 8012bb6:	4c10      	ldr	r4, [pc, #64]	; (8012bf8 <_ZN8touchgfx15ButtonWithLabelC1Ev+0x58>)
 8012bb8:	8082      	strh	r2, [r0, #4]
 8012bba:	80c2      	strh	r2, [r0, #6]
 8012bbc:	8102      	strh	r2, [r0, #8]
 8012bbe:	8142      	strh	r2, [r0, #10]
 8012bc0:	8182      	strh	r2, [r0, #12]
 8012bc2:	81c2      	strh	r2, [r0, #14]
 8012bc4:	8202      	strh	r2, [r0, #16]
 8012bc6:	8242      	strh	r2, [r0, #18]
 8012bc8:	e9c0 2205 	strd	r2, r2, [r0, #20]
 8012bcc:	61c2      	str	r2, [r0, #28]
 8012bce:	8402      	strh	r2, [r0, #32]
 8012bd0:	8442      	strh	r2, [r0, #34]	; 0x22
 8012bd2:	6282      	str	r2, [r0, #40]	; 0x28
 8012bd4:	f880 202c 	strb.w	r2, [r0, #44]	; 0x2c
 8012bd8:	85c1      	strh	r1, [r0, #46]	; 0x2e
 8012bda:	8601      	strh	r1, [r0, #48]	; 0x30
 8012bdc:	f880 1032 	strb.w	r1, [r0, #50]	; 0x32
 8012be0:	6344      	str	r4, [r0, #52]	; 0x34
 8012be2:	8701      	strh	r1, [r0, #56]	; 0x38
 8012be4:	e9c0 220f 	strd	r2, r2, [r0, #60]	; 0x3c
 8012be8:	f880 2044 	strb.w	r2, [r0, #68]	; 0x44
 8012bec:	f8a0 2046 	strh.w	r2, [r0, #70]	; 0x46
 8012bf0:	bd10      	pop	{r4, pc}
 8012bf2:	bf00      	nop
 8012bf4:	0802e774 	.word	0x0802e774
 8012bf8:	0802bbe8 	.word	0x0802bbe8

08012bfc <_ZN8touchgfx7OutlineD1Ev>:
 8012bfc:	4770      	bx	lr

08012bfe <_ZN8touchgfx7OutlineD0Ev>:
 8012bfe:	b510      	push	{r4, lr}
 8012c00:	2130      	movs	r1, #48	; 0x30
 8012c02:	4604      	mov	r4, r0
 8012c04:	f016 fc0b 	bl	802941e <_ZdlPvj>
 8012c08:	4620      	mov	r0, r4
 8012c0a:	bd10      	pop	{r4, pc}

08012c0c <_ZN8touchgfx7Outline5resetEv>:
 8012c0c:	b510      	push	{r4, lr}
 8012c0e:	4604      	mov	r4, r0
 8012c10:	f000 fe96 	bl	8013940 <_ZN8touchgfx20CanvasWidgetRenderer16getOutlineBufferEv>
 8012c14:	60e0      	str	r0, [r4, #12]
 8012c16:	f000 fe99 	bl	801394c <_ZN8touchgfx20CanvasWidgetRenderer20getOutlineBufferSizeEv>
 8012c1a:	68e3      	ldr	r3, [r4, #12]
 8012c1c:	6123      	str	r3, [r4, #16]
 8012c1e:	08c0      	lsrs	r0, r0, #3
 8012c20:	2200      	movs	r2, #0
 8012c22:	f647 71ff 	movw	r1, #32767	; 0x7fff
 8012c26:	3801      	subs	r0, #1
 8012c28:	6060      	str	r0, [r4, #4]
 8012c2a:	60a2      	str	r2, [r4, #8]
 8012c2c:	8019      	strh	r1, [r3, #0]
 8012c2e:	8059      	strh	r1, [r3, #2]
 8012c30:	809a      	strh	r2, [r3, #4]
 8012c32:	80da      	strh	r2, [r3, #6]
 8012c34:	6a63      	ldr	r3, [r4, #36]	; 0x24
 8012c36:	f023 0301 	bic.w	r3, r3, #1
 8012c3a:	f043 0302 	orr.w	r3, r3, #2
 8012c3e:	6263      	str	r3, [r4, #36]	; 0x24
 8012c40:	bd10      	pop	{r4, pc}
	...

08012c44 <_ZN8touchgfx7OutlineC1Ev>:
 8012c44:	b510      	push	{r4, lr}
 8012c46:	4b0a      	ldr	r3, [pc, #40]	; (8012c70 <_ZN8touchgfx7OutlineC1Ev+0x2c>)
 8012c48:	6003      	str	r3, [r0, #0]
 8012c4a:	2300      	movs	r3, #0
 8012c4c:	e9c0 3301 	strd	r3, r3, [r0, #4]
 8012c50:	e9c0 3303 	strd	r3, r3, [r0, #12]
 8012c54:	e9c0 3305 	strd	r3, r3, [r0, #20]
 8012c58:	e9c0 3307 	strd	r3, r3, [r0, #28]
 8012c5c:	6243      	str	r3, [r0, #36]	; 0x24
 8012c5e:	f06f 4300 	mvn.w	r3, #2147483648	; 0x80000000
 8012c62:	4604      	mov	r4, r0
 8012c64:	e9c0 330a 	strd	r3, r3, [r0, #40]	; 0x28
 8012c68:	f7ff ffd0 	bl	8012c0c <_ZN8touchgfx7Outline5resetEv>
 8012c6c:	4620      	mov	r0, r4
 8012c6e:	bd10      	pop	{r4, pc}
 8012c70:	0802e7e8 	.word	0x0802e7e8

08012c74 <_ZN8touchgfx7Outline10renderLineEiiii>:
 8012c74:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 8012c78:	b093      	sub	sp, #76	; 0x4c
 8012c7a:	1156      	asrs	r6, r2, #5
 8012c7c:	9c1c      	ldr	r4, [sp, #112]	; 0x70
 8012c7e:	9305      	str	r3, [sp, #20]
 8012c80:	f004 051f 	and.w	r5, r4, #31
 8012c84:	1153      	asrs	r3, r2, #5
 8012c86:	9504      	str	r5, [sp, #16]
 8012c88:	1165      	asrs	r5, r4, #5
 8012c8a:	9303      	str	r3, [sp, #12]
 8012c8c:	42ae      	cmp	r6, r5
 8012c8e:	ea4f 1364 	mov.w	r3, r4, asr #5
 8012c92:	9306      	str	r3, [sp, #24]
 8012c94:	f002 031f 	and.w	r3, r2, #31
 8012c98:	f040 80f8 	bne.w	8012e8c <_ZN8touchgfx7Outline10renderLineEiiii+0x218>
 8012c9c:	9c04      	ldr	r4, [sp, #16]
 8012c9e:	9a05      	ldr	r2, [sp, #20]
 8012ca0:	42a3      	cmp	r3, r4
 8012ca2:	ea4f 1e62 	mov.w	lr, r2, asr #5
 8012ca6:	6902      	ldr	r2, [r0, #16]
 8012ca8:	d125      	bne.n	8012cf6 <_ZN8touchgfx7Outline10renderLineEiiii+0x82>
 8012caa:	f9b2 3000 	ldrsh.w	r3, [r2]
 8012cae:	459e      	cmp	lr, r3
 8012cb0:	d103      	bne.n	8012cba <_ZN8touchgfx7Outline10renderLineEiiii+0x46>
 8012cb2:	f9b2 3002 	ldrsh.w	r3, [r2, #2]
 8012cb6:	429e      	cmp	r6, r3
 8012cb8:	d035      	beq.n	8012d26 <_ZN8touchgfx7Outline10renderLineEiiii+0xb2>
 8012cba:	88d1      	ldrh	r1, [r2, #6]
 8012cbc:	8893      	ldrh	r3, [r2, #4]
 8012cbe:	430b      	orrs	r3, r1
 8012cc0:	d010      	beq.n	8012ce4 <_ZN8touchgfx7Outline10renderLineEiiii+0x70>
 8012cc2:	f9b2 3002 	ldrsh.w	r3, [r2, #2]
 8012cc6:	2b00      	cmp	r3, #0
 8012cc8:	db0c      	blt.n	8012ce4 <_ZN8touchgfx7Outline10renderLineEiiii+0x70>
 8012cca:	6ac1      	ldr	r1, [r0, #44]	; 0x2c
 8012ccc:	428b      	cmp	r3, r1
 8012cce:	da09      	bge.n	8012ce4 <_ZN8touchgfx7Outline10renderLineEiiii+0x70>
 8012cd0:	e9d0 1301 	ldrd	r1, r3, [r0, #4]
 8012cd4:	428b      	cmp	r3, r1
 8012cd6:	bf38      	it	cc
 8012cd8:	3208      	addcc	r2, #8
 8012cda:	f103 0301 	add.w	r3, r3, #1
 8012cde:	bf38      	it	cc
 8012ce0:	6102      	strcc	r2, [r0, #16]
 8012ce2:	6083      	str	r3, [r0, #8]
 8012ce4:	6903      	ldr	r3, [r0, #16]
 8012ce6:	9a03      	ldr	r2, [sp, #12]
 8012ce8:	f8a3 e000 	strh.w	lr, [r3]
 8012cec:	805a      	strh	r2, [r3, #2]
 8012cee:	2200      	movs	r2, #0
 8012cf0:	809a      	strh	r2, [r3, #4]
 8012cf2:	80da      	strh	r2, [r3, #6]
 8012cf4:	e017      	b.n	8012d26 <_ZN8touchgfx7Outline10renderLineEiiii+0xb2>
 8012cf6:	9c05      	ldr	r4, [sp, #20]
 8012cf8:	f8b2 8004 	ldrh.w	r8, [r2, #4]
 8012cfc:	f8b2 a006 	ldrh.w	sl, [r2, #6]
 8012d00:	f004 041f 	and.w	r4, r4, #31
 8012d04:	114e      	asrs	r6, r1, #5
 8012d06:	9402      	str	r4, [sp, #8]
 8012d08:	9c04      	ldr	r4, [sp, #16]
 8012d0a:	4576      	cmp	r6, lr
 8012d0c:	f001 0c1f 	and.w	ip, r1, #31
 8012d10:	eba4 0403 	sub.w	r4, r4, r3
 8012d14:	d10a      	bne.n	8012d2c <_ZN8touchgfx7Outline10renderLineEiiii+0xb8>
 8012d16:	9b02      	ldr	r3, [sp, #8]
 8012d18:	449c      	add	ip, r3
 8012d1a:	44a0      	add	r8, r4
 8012d1c:	fb04 a40c 	mla	r4, r4, ip, sl
 8012d20:	f8a2 8004 	strh.w	r8, [r2, #4]
 8012d24:	80d4      	strh	r4, [r2, #6]
 8012d26:	b013      	add	sp, #76	; 0x4c
 8012d28:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
 8012d2c:	9d05      	ldr	r5, [sp, #20]
 8012d2e:	1a69      	subs	r1, r5, r1
 8012d30:	bf5b      	ittet	pl
 8012d32:	f1cc 0520 	rsbpl	r5, ip, #32
 8012d36:	436c      	mulpl	r4, r5
 8012d38:	2500      	movmi	r5, #0
 8012d3a:	2520      	movpl	r5, #32
 8012d3c:	bf44      	itt	mi
 8012d3e:	fb04 f40c 	mulmi.w	r4, r4, ip
 8012d42:	4249      	negmi	r1, r1
 8012d44:	9501      	str	r5, [sp, #4]
 8012d46:	9f01      	ldr	r7, [sp, #4]
 8012d48:	fb94 f5f1 	sdiv	r5, r4, r1
 8012d4c:	fb01 4415 	mls	r4, r1, r5, r4
 8012d50:	bf54      	ite	pl
 8012d52:	f04f 0901 	movpl.w	r9, #1
 8012d56:	f04f 39ff 	movmi.w	r9, #4294967295
 8012d5a:	2c00      	cmp	r4, #0
 8012d5c:	bfb8      	it	lt
 8012d5e:	f105 35ff 	addlt.w	r5, r5, #4294967295
 8012d62:	44bc      	add	ip, r7
 8012d64:	44a8      	add	r8, r5
 8012d66:	fb05 ac0c 	mla	ip, r5, ip, sl
 8012d6a:	f8a2 8004 	strh.w	r8, [r2, #4]
 8012d6e:	f8a2 c006 	strh.w	ip, [r2, #6]
 8012d72:	f8d0 c010 	ldr.w	ip, [r0, #16]
 8012d76:	f8bc 8006 	ldrh.w	r8, [ip, #6]
 8012d7a:	f8bc 2004 	ldrh.w	r2, [ip, #4]
 8012d7e:	bfb8      	it	lt
 8012d80:	1864      	addlt	r4, r4, r1
 8012d82:	ea58 0202 	orrs.w	r2, r8, r2
 8012d86:	444e      	add	r6, r9
 8012d88:	d011      	beq.n	8012dae <_ZN8touchgfx7Outline10renderLineEiiii+0x13a>
 8012d8a:	f9bc 8002 	ldrsh.w	r8, [ip, #2]
 8012d8e:	f1b8 0f00 	cmp.w	r8, #0
 8012d92:	db0c      	blt.n	8012dae <_ZN8touchgfx7Outline10renderLineEiiii+0x13a>
 8012d94:	6ac2      	ldr	r2, [r0, #44]	; 0x2c
 8012d96:	4590      	cmp	r8, r2
 8012d98:	da09      	bge.n	8012dae <_ZN8touchgfx7Outline10renderLineEiiii+0x13a>
 8012d9a:	e9d0 2801 	ldrd	r2, r8, [r0, #4]
 8012d9e:	4590      	cmp	r8, r2
 8012da0:	bf3c      	itt	cc
 8012da2:	f10c 0208 	addcc.w	r2, ip, #8
 8012da6:	6102      	strcc	r2, [r0, #16]
 8012da8:	f108 0201 	add.w	r2, r8, #1
 8012dac:	6082      	str	r2, [r0, #8]
 8012dae:	f8d0 c010 	ldr.w	ip, [r0, #16]
 8012db2:	f9bd 200c 	ldrsh.w	r2, [sp, #12]
 8012db6:	f8ac 6000 	strh.w	r6, [ip]
 8012dba:	2700      	movs	r7, #0
 8012dbc:	45b6      	cmp	lr, r6
 8012dbe:	f8ac 2002 	strh.w	r2, [ip, #2]
 8012dc2:	f8ac 7004 	strh.w	r7, [ip, #4]
 8012dc6:	f8ac 7006 	strh.w	r7, [ip, #6]
 8012dca:	442b      	add	r3, r5
 8012dcc:	d04d      	beq.n	8012e6a <_ZN8touchgfx7Outline10renderLineEiiii+0x1f6>
 8012dce:	9f04      	ldr	r7, [sp, #16]
 8012dd0:	1aff      	subs	r7, r7, r3
 8012dd2:	443d      	add	r5, r7
 8012dd4:	016d      	lsls	r5, r5, #5
 8012dd6:	fb95 f8f1 	sdiv	r8, r5, r1
 8012dda:	fb01 5518 	mls	r5, r1, r8, r5
 8012dde:	2d00      	cmp	r5, #0
 8012de0:	bfb8      	it	lt
 8012de2:	f108 38ff 	addlt.w	r8, r8, #4294967295
 8012de6:	f108 0701 	add.w	r7, r8, #1
 8012dea:	bfb8      	it	lt
 8012dec:	186d      	addlt	r5, r5, r1
 8012dee:	1a64      	subs	r4, r4, r1
 8012df0:	9703      	str	r7, [sp, #12]
 8012df2:	f04f 0a00 	mov.w	sl, #0
 8012df6:	f8d0 c010 	ldr.w	ip, [r0, #16]
 8012dfa:	1964      	adds	r4, r4, r5
 8012dfc:	bf58      	it	pl
 8012dfe:	9f03      	ldrpl	r7, [sp, #12]
 8012e00:	f8bc b004 	ldrh.w	fp, [ip, #4]
 8012e04:	bf48      	it	mi
 8012e06:	4647      	movmi	r7, r8
 8012e08:	44bb      	add	fp, r7
 8012e0a:	f8ac b004 	strh.w	fp, [ip, #4]
 8012e0e:	f8bc b006 	ldrh.w	fp, [ip, #6]
 8012e12:	eb0b 1b47 	add.w	fp, fp, r7, lsl #5
 8012e16:	f8ac b006 	strh.w	fp, [ip, #6]
 8012e1a:	f8d0 c010 	ldr.w	ip, [r0, #16]
 8012e1e:	443b      	add	r3, r7
 8012e20:	f8bc b006 	ldrh.w	fp, [ip, #6]
 8012e24:	f8bc 7004 	ldrh.w	r7, [ip, #4]
 8012e28:	bf58      	it	pl
 8012e2a:	1a64      	subpl	r4, r4, r1
 8012e2c:	ea5b 0707 	orrs.w	r7, fp, r7
 8012e30:	444e      	add	r6, r9
 8012e32:	d011      	beq.n	8012e58 <_ZN8touchgfx7Outline10renderLineEiiii+0x1e4>
 8012e34:	f9bc b002 	ldrsh.w	fp, [ip, #2]
 8012e38:	f1bb 0f00 	cmp.w	fp, #0
 8012e3c:	db0c      	blt.n	8012e58 <_ZN8touchgfx7Outline10renderLineEiiii+0x1e4>
 8012e3e:	6ac7      	ldr	r7, [r0, #44]	; 0x2c
 8012e40:	45bb      	cmp	fp, r7
 8012e42:	da09      	bge.n	8012e58 <_ZN8touchgfx7Outline10renderLineEiiii+0x1e4>
 8012e44:	e9d0 7b01 	ldrd	r7, fp, [r0, #4]
 8012e48:	45bb      	cmp	fp, r7
 8012e4a:	bf3c      	itt	cc
 8012e4c:	f10c 0708 	addcc.w	r7, ip, #8
 8012e50:	6107      	strcc	r7, [r0, #16]
 8012e52:	f10b 0701 	add.w	r7, fp, #1
 8012e56:	6087      	str	r7, [r0, #8]
 8012e58:	6907      	ldr	r7, [r0, #16]
 8012e5a:	45b6      	cmp	lr, r6
 8012e5c:	803e      	strh	r6, [r7, #0]
 8012e5e:	807a      	strh	r2, [r7, #2]
 8012e60:	f8a7 a004 	strh.w	sl, [r7, #4]
 8012e64:	f8a7 a006 	strh.w	sl, [r7, #6]
 8012e68:	d1c5      	bne.n	8012df6 <_ZN8touchgfx7Outline10renderLineEiiii+0x182>
 8012e6a:	9a04      	ldr	r2, [sp, #16]
 8012e6c:	1ad3      	subs	r3, r2, r3
 8012e6e:	6902      	ldr	r2, [r0, #16]
 8012e70:	8891      	ldrh	r1, [r2, #4]
 8012e72:	88d6      	ldrh	r6, [r2, #6]
 8012e74:	4419      	add	r1, r3
 8012e76:	8091      	strh	r1, [r2, #4]
 8012e78:	9902      	ldr	r1, [sp, #8]
 8012e7a:	f101 0c20 	add.w	ip, r1, #32
 8012e7e:	9901      	ldr	r1, [sp, #4]
 8012e80:	ebac 0c01 	sub.w	ip, ip, r1
 8012e84:	fb03 630c 	mla	r3, r3, ip, r6
 8012e88:	80d3      	strh	r3, [r2, #6]
 8012e8a:	e74c      	b.n	8012d26 <_ZN8touchgfx7Outline10renderLineEiiii+0xb2>
 8012e8c:	9d05      	ldr	r5, [sp, #20]
 8012e8e:	1aa2      	subs	r2, r4, r2
 8012e90:	eba5 0501 	sub.w	r5, r5, r1
 8012e94:	9508      	str	r5, [sp, #32]
 8012e96:	9202      	str	r2, [sp, #8]
 8012e98:	f140 8128 	bpl.w	80130ec <_ZN8touchgfx7Outline10renderLineEiiii+0x478>
 8012e9c:	9a03      	ldr	r2, [sp, #12]
 8012e9e:	2a00      	cmp	r2, #0
 8012ea0:	f6ff af41 	blt.w	8012d26 <_ZN8touchgfx7Outline10renderLineEiiii+0xb2>
 8012ea4:	9a02      	ldr	r2, [sp, #8]
 8012ea6:	4252      	negs	r2, r2
 8012ea8:	9202      	str	r2, [sp, #8]
 8012eaa:	9a06      	ldr	r2, [sp, #24]
 8012eac:	ea42 72e2 	orr.w	r2, r2, r2, asr #31
 8012eb0:	f04f 34ff 	mov.w	r4, #4294967295
 8012eb4:	9206      	str	r2, [sp, #24]
 8012eb6:	462a      	mov	r2, r5
 8012eb8:	940b      	str	r4, [sp, #44]	; 0x2c
 8012eba:	435a      	muls	r2, r3
 8012ebc:	2400      	movs	r4, #0
 8012ebe:	9d02      	ldr	r5, [sp, #8]
 8012ec0:	9401      	str	r4, [sp, #4]
 8012ec2:	9c02      	ldr	r4, [sp, #8]
 8012ec4:	fb92 f4f4 	sdiv	r4, r2, r4
 8012ec8:	fb05 2214 	mls	r2, r5, r4, r2
 8012ecc:	2a00      	cmp	r2, #0
 8012ece:	9207      	str	r2, [sp, #28]
 8012ed0:	bfbc      	itt	lt
 8012ed2:	1952      	addlt	r2, r2, r5
 8012ed4:	9207      	strlt	r2, [sp, #28]
 8012ed6:	9a01      	ldr	r2, [sp, #4]
 8012ed8:	6905      	ldr	r5, [r0, #16]
 8012eda:	bfb8      	it	lt
 8012edc:	f104 34ff 	addlt.w	r4, r4, #4294967295
 8012ee0:	eb04 0901 	add.w	r9, r4, r1
 8012ee4:	429a      	cmp	r2, r3
 8012ee6:	ea4f 1669 	mov.w	r6, r9, asr #5
 8012eea:	f040 8112 	bne.w	8013112 <_ZN8touchgfx7Outline10renderLineEiiii+0x49e>
 8012eee:	f9b5 3000 	ldrsh.w	r3, [r5]
 8012ef2:	429e      	cmp	r6, r3
 8012ef4:	d104      	bne.n	8012f00 <_ZN8touchgfx7Outline10renderLineEiiii+0x28c>
 8012ef6:	f9b5 3002 	ldrsh.w	r3, [r5, #2]
 8012efa:	9a03      	ldr	r2, [sp, #12]
 8012efc:	429a      	cmp	r2, r3
 8012efe:	d01b      	beq.n	8012f38 <_ZN8touchgfx7Outline10renderLineEiiii+0x2c4>
 8012f00:	88ea      	ldrh	r2, [r5, #6]
 8012f02:	88ab      	ldrh	r3, [r5, #4]
 8012f04:	4313      	orrs	r3, r2
 8012f06:	d010      	beq.n	8012f2a <_ZN8touchgfx7Outline10renderLineEiiii+0x2b6>
 8012f08:	f9b5 2002 	ldrsh.w	r2, [r5, #2]
 8012f0c:	2a00      	cmp	r2, #0
 8012f0e:	db0c      	blt.n	8012f2a <_ZN8touchgfx7Outline10renderLineEiiii+0x2b6>
 8012f10:	6ac3      	ldr	r3, [r0, #44]	; 0x2c
 8012f12:	429a      	cmp	r2, r3
 8012f14:	da09      	bge.n	8012f2a <_ZN8touchgfx7Outline10renderLineEiiii+0x2b6>
 8012f16:	e9d0 3201 	ldrd	r3, r2, [r0, #4]
 8012f1a:	429a      	cmp	r2, r3
 8012f1c:	bf38      	it	cc
 8012f1e:	3508      	addcc	r5, #8
 8012f20:	f102 0201 	add.w	r2, r2, #1
 8012f24:	bf38      	it	cc
 8012f26:	6105      	strcc	r5, [r0, #16]
 8012f28:	6082      	str	r2, [r0, #8]
 8012f2a:	6903      	ldr	r3, [r0, #16]
 8012f2c:	9a03      	ldr	r2, [sp, #12]
 8012f2e:	805a      	strh	r2, [r3, #2]
 8012f30:	2200      	movs	r2, #0
 8012f32:	801e      	strh	r6, [r3, #0]
 8012f34:	809a      	strh	r2, [r3, #4]
 8012f36:	80da      	strh	r2, [r3, #6]
 8012f38:	9b0b      	ldr	r3, [sp, #44]	; 0x2c
 8012f3a:	9a03      	ldr	r2, [sp, #12]
 8012f3c:	6901      	ldr	r1, [r0, #16]
 8012f3e:	441a      	add	r2, r3
 8012f40:	f9b1 3000 	ldrsh.w	r3, [r1]
 8012f44:	42b3      	cmp	r3, r6
 8012f46:	d103      	bne.n	8012f50 <_ZN8touchgfx7Outline10renderLineEiiii+0x2dc>
 8012f48:	f9b1 3002 	ldrsh.w	r3, [r1, #2]
 8012f4c:	429a      	cmp	r2, r3
 8012f4e:	d01a      	beq.n	8012f86 <_ZN8touchgfx7Outline10renderLineEiiii+0x312>
 8012f50:	88cc      	ldrh	r4, [r1, #6]
 8012f52:	888b      	ldrh	r3, [r1, #4]
 8012f54:	4323      	orrs	r3, r4
 8012f56:	d010      	beq.n	8012f7a <_ZN8touchgfx7Outline10renderLineEiiii+0x306>
 8012f58:	f9b1 4002 	ldrsh.w	r4, [r1, #2]
 8012f5c:	2c00      	cmp	r4, #0
 8012f5e:	db0c      	blt.n	8012f7a <_ZN8touchgfx7Outline10renderLineEiiii+0x306>
 8012f60:	6ac3      	ldr	r3, [r0, #44]	; 0x2c
 8012f62:	429c      	cmp	r4, r3
 8012f64:	da09      	bge.n	8012f7a <_ZN8touchgfx7Outline10renderLineEiiii+0x306>
 8012f66:	e9d0 3401 	ldrd	r3, r4, [r0, #4]
 8012f6a:	429c      	cmp	r4, r3
 8012f6c:	bf38      	it	cc
 8012f6e:	3108      	addcc	r1, #8
 8012f70:	f104 0401 	add.w	r4, r4, #1
 8012f74:	bf38      	it	cc
 8012f76:	6101      	strcc	r1, [r0, #16]
 8012f78:	6084      	str	r4, [r0, #8]
 8012f7a:	6903      	ldr	r3, [r0, #16]
 8012f7c:	2100      	movs	r1, #0
 8012f7e:	801e      	strh	r6, [r3, #0]
 8012f80:	805a      	strh	r2, [r3, #2]
 8012f82:	8099      	strh	r1, [r3, #4]
 8012f84:	80d9      	strh	r1, [r3, #6]
 8012f86:	9b06      	ldr	r3, [sp, #24]
 8012f88:	4293      	cmp	r3, r2
 8012f8a:	f000 8082 	beq.w	8013092 <_ZN8touchgfx7Outline10renderLineEiiii+0x41e>
 8012f8e:	9b08      	ldr	r3, [sp, #32]
 8012f90:	9c02      	ldr	r4, [sp, #8]
 8012f92:	9902      	ldr	r1, [sp, #8]
 8012f94:	015b      	lsls	r3, r3, #5
 8012f96:	fb93 f1f1 	sdiv	r1, r3, r1
 8012f9a:	fb04 3311 	mls	r3, r4, r1, r3
 8012f9e:	2b00      	cmp	r3, #0
 8012fa0:	9103      	str	r1, [sp, #12]
 8012fa2:	9308      	str	r3, [sp, #32]
 8012fa4:	da04      	bge.n	8012fb0 <_ZN8touchgfx7Outline10renderLineEiiii+0x33c>
 8012fa6:	1e4b      	subs	r3, r1, #1
 8012fa8:	9303      	str	r3, [sp, #12]
 8012faa:	9b08      	ldr	r3, [sp, #32]
 8012fac:	4423      	add	r3, r4
 8012fae:	9308      	str	r3, [sp, #32]
 8012fb0:	9b07      	ldr	r3, [sp, #28]
 8012fb2:	9902      	ldr	r1, [sp, #8]
 8012fb4:	1a5b      	subs	r3, r3, r1
 8012fb6:	9307      	str	r3, [sp, #28]
 8012fb8:	9b01      	ldr	r3, [sp, #4]
 8012fba:	f1c3 0320 	rsb	r3, r3, #32
 8012fbe:	930e      	str	r3, [sp, #56]	; 0x38
 8012fc0:	990e      	ldr	r1, [sp, #56]	; 0x38
 8012fc2:	9b01      	ldr	r3, [sp, #4]
 8012fc4:	1a5b      	subs	r3, r3, r1
 8012fc6:	464f      	mov	r7, r9
 8012fc8:	930a      	str	r3, [sp, #40]	; 0x28
 8012fca:	2600      	movs	r6, #0
 8012fcc:	e9dd 3107 	ldrd	r3, r1, [sp, #28]
 8012fd0:	185b      	adds	r3, r3, r1
 8012fd2:	bf58      	it	pl
 8012fd4:	9902      	ldrpl	r1, [sp, #8]
 8012fd6:	9307      	str	r3, [sp, #28]
 8012fd8:	bf5d      	ittte	pl
 8012fda:	1a5b      	subpl	r3, r3, r1
 8012fdc:	9307      	strpl	r3, [sp, #28]
 8012fde:	9b03      	ldrpl	r3, [sp, #12]
 8012fe0:	9903      	ldrmi	r1, [sp, #12]
 8012fe2:	bf58      	it	pl
 8012fe4:	1c59      	addpl	r1, r3, #1
 8012fe6:	4489      	add	r9, r1
 8012fe8:	2a00      	cmp	r2, #0
 8012fea:	ea4f 1a69 	mov.w	sl, r9, asr #5
 8012fee:	db2e      	blt.n	801304e <_ZN8touchgfx7Outline10renderLineEiiii+0x3da>
 8012ff0:	6ac3      	ldr	r3, [r0, #44]	; 0x2c
 8012ff2:	4293      	cmp	r3, r2
 8012ff4:	dd2b      	ble.n	801304e <_ZN8touchgfx7Outline10renderLineEiiii+0x3da>
 8012ff6:	9c01      	ldr	r4, [sp, #4]
 8012ff8:	6905      	ldr	r5, [r0, #16]
 8012ffa:	46a0      	mov	r8, r4
 8012ffc:	9c0e      	ldr	r4, [sp, #56]	; 0x38
 8012ffe:	f9b5 c004 	ldrsh.w	ip, [r5, #4]
 8013002:	f9b5 e006 	ldrsh.w	lr, [r5, #6]
 8013006:	45a0      	cmp	r8, r4
 8013008:	f040 814f 	bne.w	80132aa <_ZN8touchgfx7Outline10renderLineEiiii+0x636>
 801300c:	f9b5 1000 	ldrsh.w	r1, [r5]
 8013010:	4551      	cmp	r1, sl
 8013012:	d103      	bne.n	801301c <_ZN8touchgfx7Outline10renderLineEiiii+0x3a8>
 8013014:	f9b5 1002 	ldrsh.w	r1, [r5, #2]
 8013018:	4291      	cmp	r1, r2
 801301a:	d018      	beq.n	801304e <_ZN8touchgfx7Outline10renderLineEiiii+0x3da>
 801301c:	ea5c 010e 	orrs.w	r1, ip, lr
 8013020:	d00f      	beq.n	8013042 <_ZN8touchgfx7Outline10renderLineEiiii+0x3ce>
 8013022:	f9b5 1002 	ldrsh.w	r1, [r5, #2]
 8013026:	2900      	cmp	r1, #0
 8013028:	db0b      	blt.n	8013042 <_ZN8touchgfx7Outline10renderLineEiiii+0x3ce>
 801302a:	428b      	cmp	r3, r1
 801302c:	dd09      	ble.n	8013042 <_ZN8touchgfx7Outline10renderLineEiiii+0x3ce>
 801302e:	e9d0 3101 	ldrd	r3, r1, [r0, #4]
 8013032:	4299      	cmp	r1, r3
 8013034:	bf38      	it	cc
 8013036:	3508      	addcc	r5, #8
 8013038:	f101 0101 	add.w	r1, r1, #1
 801303c:	bf38      	it	cc
 801303e:	6105      	strcc	r5, [r0, #16]
 8013040:	6081      	str	r1, [r0, #8]
 8013042:	6903      	ldr	r3, [r0, #16]
 8013044:	f8a3 a000 	strh.w	sl, [r3]
 8013048:	805a      	strh	r2, [r3, #2]
 801304a:	809e      	strh	r6, [r3, #4]
 801304c:	80de      	strh	r6, [r3, #6]
 801304e:	9b0b      	ldr	r3, [sp, #44]	; 0x2c
 8013050:	6901      	ldr	r1, [r0, #16]
 8013052:	441a      	add	r2, r3
 8013054:	88cc      	ldrh	r4, [r1, #6]
 8013056:	888b      	ldrh	r3, [r1, #4]
 8013058:	4323      	orrs	r3, r4
 801305a:	d010      	beq.n	801307e <_ZN8touchgfx7Outline10renderLineEiiii+0x40a>
 801305c:	f9b1 4002 	ldrsh.w	r4, [r1, #2]
 8013060:	2c00      	cmp	r4, #0
 8013062:	db0c      	blt.n	801307e <_ZN8touchgfx7Outline10renderLineEiiii+0x40a>
 8013064:	6ac3      	ldr	r3, [r0, #44]	; 0x2c
 8013066:	429c      	cmp	r4, r3
 8013068:	da09      	bge.n	801307e <_ZN8touchgfx7Outline10renderLineEiiii+0x40a>
 801306a:	e9d0 3401 	ldrd	r3, r4, [r0, #4]
 801306e:	429c      	cmp	r4, r3
 8013070:	bf38      	it	cc
 8013072:	3108      	addcc	r1, #8
 8013074:	f104 0401 	add.w	r4, r4, #1
 8013078:	bf38      	it	cc
 801307a:	6101      	strcc	r1, [r0, #16]
 801307c:	6084      	str	r4, [r0, #8]
 801307e:	6903      	ldr	r3, [r0, #16]
 8013080:	f8a3 a000 	strh.w	sl, [r3]
 8013084:	805a      	strh	r2, [r3, #2]
 8013086:	809e      	strh	r6, [r3, #4]
 8013088:	80de      	strh	r6, [r3, #6]
 801308a:	9b06      	ldr	r3, [sp, #24]
 801308c:	4293      	cmp	r3, r2
 801308e:	464f      	mov	r7, r9
 8013090:	d19c      	bne.n	8012fcc <_ZN8touchgfx7Outline10renderLineEiiii+0x358>
 8013092:	9b01      	ldr	r3, [sp, #4]
 8013094:	6907      	ldr	r7, [r0, #16]
 8013096:	f1c3 0620 	rsb	r6, r3, #32
 801309a:	9b05      	ldr	r3, [sp, #20]
 801309c:	ea4f 1e63 	mov.w	lr, r3, asr #5
 80130a0:	9b04      	ldr	r3, [sp, #16]
 80130a2:	429e      	cmp	r6, r3
 80130a4:	f040 81cc 	bne.w	8013440 <_ZN8touchgfx7Outline10renderLineEiiii+0x7cc>
 80130a8:	f9b7 3000 	ldrsh.w	r3, [r7]
 80130ac:	459e      	cmp	lr, r3
 80130ae:	d104      	bne.n	80130ba <_ZN8touchgfx7Outline10renderLineEiiii+0x446>
 80130b0:	f9b7 3002 	ldrsh.w	r3, [r7, #2]
 80130b4:	429a      	cmp	r2, r3
 80130b6:	f43f ae36 	beq.w	8012d26 <_ZN8touchgfx7Outline10renderLineEiiii+0xb2>
 80130ba:	88f9      	ldrh	r1, [r7, #6]
 80130bc:	88bb      	ldrh	r3, [r7, #4]
 80130be:	430b      	orrs	r3, r1
 80130c0:	d010      	beq.n	80130e4 <_ZN8touchgfx7Outline10renderLineEiiii+0x470>
 80130c2:	f9b7 3002 	ldrsh.w	r3, [r7, #2]
 80130c6:	2b00      	cmp	r3, #0
 80130c8:	db0c      	blt.n	80130e4 <_ZN8touchgfx7Outline10renderLineEiiii+0x470>
 80130ca:	6ac1      	ldr	r1, [r0, #44]	; 0x2c
 80130cc:	428b      	cmp	r3, r1
 80130ce:	da09      	bge.n	80130e4 <_ZN8touchgfx7Outline10renderLineEiiii+0x470>
 80130d0:	e9d0 1301 	ldrd	r1, r3, [r0, #4]
 80130d4:	428b      	cmp	r3, r1
 80130d6:	bf38      	it	cc
 80130d8:	3708      	addcc	r7, #8
 80130da:	f103 0301 	add.w	r3, r3, #1
 80130de:	bf38      	it	cc
 80130e0:	6107      	strcc	r7, [r0, #16]
 80130e2:	6083      	str	r3, [r0, #8]
 80130e4:	6903      	ldr	r3, [r0, #16]
 80130e6:	f8a3 e000 	strh.w	lr, [r3]
 80130ea:	e5ff      	b.n	8012cec <_ZN8touchgfx7Outline10renderLineEiiii+0x78>
 80130ec:	6ac2      	ldr	r2, [r0, #44]	; 0x2c
 80130ee:	9c03      	ldr	r4, [sp, #12]
 80130f0:	42a2      	cmp	r2, r4
 80130f2:	f6ff ae18 	blt.w	8012d26 <_ZN8touchgfx7Outline10renderLineEiiii+0xb2>
 80130f6:	9c06      	ldr	r4, [sp, #24]
 80130f8:	42a2      	cmp	r2, r4
 80130fa:	bfb8      	it	lt
 80130fc:	3201      	addlt	r2, #1
 80130fe:	9c08      	ldr	r4, [sp, #32]
 8013100:	bfb8      	it	lt
 8013102:	9206      	strlt	r2, [sp, #24]
 8013104:	f1c3 0220 	rsb	r2, r3, #32
 8013108:	4362      	muls	r2, r4
 801310a:	2401      	movs	r4, #1
 801310c:	940b      	str	r4, [sp, #44]	; 0x2c
 801310e:	2420      	movs	r4, #32
 8013110:	e6d5      	b.n	8012ebe <_ZN8touchgfx7Outline10renderLineEiiii+0x24a>
 8013112:	f009 021f 	and.w	r2, r9, #31
 8013116:	ea4f 1861 	mov.w	r8, r1, asr #5
 801311a:	920c      	str	r2, [sp, #48]	; 0x30
 801311c:	9a01      	ldr	r2, [sp, #4]
 801311e:	f8b5 e004 	ldrh.w	lr, [r5, #4]
 8013122:	f8b5 a006 	ldrh.w	sl, [r5, #6]
 8013126:	45b0      	cmp	r8, r6
 8013128:	f001 011f 	and.w	r1, r1, #31
 801312c:	eba2 0203 	sub.w	r2, r2, r3
 8013130:	d108      	bne.n	8013144 <_ZN8touchgfx7Outline10renderLineEiiii+0x4d0>
 8013132:	9b0c      	ldr	r3, [sp, #48]	; 0x30
 8013134:	4419      	add	r1, r3
 8013136:	4496      	add	lr, r2
 8013138:	fb02 a101 	mla	r1, r2, r1, sl
 801313c:	f8a5 e004 	strh.w	lr, [r5, #4]
 8013140:	80e9      	strh	r1, [r5, #6]
 8013142:	e6f9      	b.n	8012f38 <_ZN8touchgfx7Outline10renderLineEiiii+0x2c4>
 8013144:	2c00      	cmp	r4, #0
 8013146:	f2c0 80a9 	blt.w	801329c <_ZN8touchgfx7Outline10renderLineEiiii+0x628>
 801314a:	2701      	movs	r7, #1
 801314c:	f1c1 0c20 	rsb	ip, r1, #32
 8013150:	970a      	str	r7, [sp, #40]	; 0x28
 8013152:	fb02 f20c 	mul.w	r2, r2, ip
 8013156:	2720      	movs	r7, #32
 8013158:	9709      	str	r7, [sp, #36]	; 0x24
 801315a:	fb92 fcf4 	sdiv	ip, r2, r4
 801315e:	9f09      	ldr	r7, [sp, #36]	; 0x24
 8013160:	fb04 221c 	mls	r2, r4, ip, r2
 8013164:	2a00      	cmp	r2, #0
 8013166:	bfb8      	it	lt
 8013168:	f10c 3cff 	addlt.w	ip, ip, #4294967295
 801316c:	4439      	add	r1, r7
 801316e:	fb0c a101 	mla	r1, ip, r1, sl
 8013172:	80e9      	strh	r1, [r5, #6]
 8013174:	44e6      	add	lr, ip
 8013176:	990a      	ldr	r1, [sp, #40]	; 0x28
 8013178:	f8a5 e004 	strh.w	lr, [r5, #4]
 801317c:	eb08 0501 	add.w	r5, r8, r1
 8013180:	6901      	ldr	r1, [r0, #16]
 8013182:	f8b1 8006 	ldrh.w	r8, [r1, #6]
 8013186:	f8b1 e004 	ldrh.w	lr, [r1, #4]
 801318a:	bfb8      	it	lt
 801318c:	1912      	addlt	r2, r2, r4
 801318e:	ea58 070e 	orrs.w	r7, r8, lr
 8013192:	d010      	beq.n	80131b6 <_ZN8touchgfx7Outline10renderLineEiiii+0x542>
 8013194:	f9b1 e002 	ldrsh.w	lr, [r1, #2]
 8013198:	f1be 0f00 	cmp.w	lr, #0
 801319c:	db0b      	blt.n	80131b6 <_ZN8touchgfx7Outline10renderLineEiiii+0x542>
 801319e:	6ac7      	ldr	r7, [r0, #44]	; 0x2c
 80131a0:	45be      	cmp	lr, r7
 80131a2:	da08      	bge.n	80131b6 <_ZN8touchgfx7Outline10renderLineEiiii+0x542>
 80131a4:	e9d0 7e01 	ldrd	r7, lr, [r0, #4]
 80131a8:	45be      	cmp	lr, r7
 80131aa:	bf3c      	itt	cc
 80131ac:	3108      	addcc	r1, #8
 80131ae:	6101      	strcc	r1, [r0, #16]
 80131b0:	f10e 0101 	add.w	r1, lr, #1
 80131b4:	6081      	str	r1, [r0, #8]
 80131b6:	6901      	ldr	r1, [r0, #16]
 80131b8:	f9bd 800c 	ldrsh.w	r8, [sp, #12]
 80131bc:	800d      	strh	r5, [r1, #0]
 80131be:	f04f 0e00 	mov.w	lr, #0
 80131c2:	42ae      	cmp	r6, r5
 80131c4:	f8a1 8002 	strh.w	r8, [r1, #2]
 80131c8:	f8a1 e004 	strh.w	lr, [r1, #4]
 80131cc:	f8a1 e006 	strh.w	lr, [r1, #6]
 80131d0:	4463      	add	r3, ip
 80131d2:	d054      	beq.n	801327e <_ZN8touchgfx7Outline10renderLineEiiii+0x60a>
 80131d4:	9901      	ldr	r1, [sp, #4]
 80131d6:	1ac9      	subs	r1, r1, r3
 80131d8:	4461      	add	r1, ip
 80131da:	0149      	lsls	r1, r1, #5
 80131dc:	fb91 fef4 	sdiv	lr, r1, r4
 80131e0:	fb04 111e 	mls	r1, r4, lr, r1
 80131e4:	2900      	cmp	r1, #0
 80131e6:	bfb8      	it	lt
 80131e8:	f10e 3eff 	addlt.w	lr, lr, #4294967295
 80131ec:	f10e 0701 	add.w	r7, lr, #1
 80131f0:	bfb8      	it	lt
 80131f2:	1909      	addlt	r1, r1, r4
 80131f4:	1b12      	subs	r2, r2, r4
 80131f6:	970d      	str	r7, [sp, #52]	; 0x34
 80131f8:	f8d0 a010 	ldr.w	sl, [r0, #16]
 80131fc:	9f0a      	ldr	r7, [sp, #40]	; 0x28
 80131fe:	f8ba b004 	ldrh.w	fp, [sl, #4]
 8013202:	1852      	adds	r2, r2, r1
 8013204:	bf54      	ite	pl
 8013206:	f8dd c034 	ldrpl.w	ip, [sp, #52]	; 0x34
 801320a:	46f4      	movmi	ip, lr
 801320c:	44e3      	add	fp, ip
 801320e:	f8aa b004 	strh.w	fp, [sl, #4]
 8013212:	f8ba b006 	ldrh.w	fp, [sl, #6]
 8013216:	eb0b 1b4c 	add.w	fp, fp, ip, lsl #5
 801321a:	f8aa b006 	strh.w	fp, [sl, #6]
 801321e:	4463      	add	r3, ip
 8013220:	f8d0 c010 	ldr.w	ip, [r0, #16]
 8013224:	f8bc b006 	ldrh.w	fp, [ip, #6]
 8013228:	f8bc a004 	ldrh.w	sl, [ip, #4]
 801322c:	bf58      	it	pl
 801322e:	1b12      	subpl	r2, r2, r4
 8013230:	443d      	add	r5, r7
 8013232:	ea5b 070a 	orrs.w	r7, fp, sl
 8013236:	d014      	beq.n	8013262 <_ZN8touchgfx7Outline10renderLineEiiii+0x5ee>
 8013238:	f9bc a002 	ldrsh.w	sl, [ip, #2]
 801323c:	f1ba 0f00 	cmp.w	sl, #0
 8013240:	db0f      	blt.n	8013262 <_ZN8touchgfx7Outline10renderLineEiiii+0x5ee>
 8013242:	6ac7      	ldr	r7, [r0, #44]	; 0x2c
 8013244:	45ba      	cmp	sl, r7
 8013246:	da0c      	bge.n	8013262 <_ZN8touchgfx7Outline10renderLineEiiii+0x5ee>
 8013248:	e9d0 7a01 	ldrd	r7, sl, [r0, #4]
 801324c:	45ba      	cmp	sl, r7
 801324e:	bf38      	it	cc
 8013250:	f10c 0c08 	addcc.w	ip, ip, #8
 8013254:	f10a 0a01 	add.w	sl, sl, #1
 8013258:	bf38      	it	cc
 801325a:	f8c0 c010 	strcc.w	ip, [r0, #16]
 801325e:	f8c0 a008 	str.w	sl, [r0, #8]
 8013262:	f8d0 c010 	ldr.w	ip, [r0, #16]
 8013266:	f04f 0700 	mov.w	r7, #0
 801326a:	42ae      	cmp	r6, r5
 801326c:	f8ac 5000 	strh.w	r5, [ip]
 8013270:	f8ac 8002 	strh.w	r8, [ip, #2]
 8013274:	f8ac 7004 	strh.w	r7, [ip, #4]
 8013278:	f8ac 7006 	strh.w	r7, [ip, #6]
 801327c:	d1bc      	bne.n	80131f8 <_ZN8touchgfx7Outline10renderLineEiiii+0x584>
 801327e:	6904      	ldr	r4, [r0, #16]
 8013280:	9a01      	ldr	r2, [sp, #4]
 8013282:	990c      	ldr	r1, [sp, #48]	; 0x30
 8013284:	1ad3      	subs	r3, r2, r3
 8013286:	88a2      	ldrh	r2, [r4, #4]
 8013288:	441a      	add	r2, r3
 801328a:	80a2      	strh	r2, [r4, #4]
 801328c:	9a09      	ldr	r2, [sp, #36]	; 0x24
 801328e:	3120      	adds	r1, #32
 8013290:	1a89      	subs	r1, r1, r2
 8013292:	88e2      	ldrh	r2, [r4, #6]
 8013294:	fb03 2301 	mla	r3, r3, r1, r2
 8013298:	80e3      	strh	r3, [r4, #6]
 801329a:	e64d      	b.n	8012f38 <_ZN8touchgfx7Outline10renderLineEiiii+0x2c4>
 801329c:	f04f 37ff 	mov.w	r7, #4294967295
 80132a0:	970a      	str	r7, [sp, #40]	; 0x28
 80132a2:	434a      	muls	r2, r1
 80132a4:	4264      	negs	r4, r4
 80132a6:	2700      	movs	r7, #0
 80132a8:	e756      	b.n	8013158 <_ZN8touchgfx7Outline10renderLineEiiii+0x4e4>
 80132aa:	ea4f 1867 	mov.w	r8, r7, asr #5
 80132ae:	f009 031f 	and.w	r3, r9, #31
 80132b2:	45d0      	cmp	r8, sl
 80132b4:	f007 071f 	and.w	r7, r7, #31
 80132b8:	930f      	str	r3, [sp, #60]	; 0x3c
 80132ba:	fa1f fc8c 	uxth.w	ip, ip
 80132be:	fa1f fe8e 	uxth.w	lr, lr
 80132c2:	d10a      	bne.n	80132da <_ZN8touchgfx7Outline10renderLineEiiii+0x666>
 80132c4:	9b0a      	ldr	r3, [sp, #40]	; 0x28
 80132c6:	449c      	add	ip, r3
 80132c8:	9b0f      	ldr	r3, [sp, #60]	; 0x3c
 80132ca:	f8a5 c004 	strh.w	ip, [r5, #4]
 80132ce:	441f      	add	r7, r3
 80132d0:	9b0a      	ldr	r3, [sp, #40]	; 0x28
 80132d2:	fb03 e707 	mla	r7, r3, r7, lr
 80132d6:	80ef      	strh	r7, [r5, #6]
 80132d8:	e6b9      	b.n	801304e <_ZN8touchgfx7Outline10renderLineEiiii+0x3da>
 80132da:	2900      	cmp	r1, #0
 80132dc:	f2c0 80a8 	blt.w	8013430 <_ZN8touchgfx7Outline10renderLineEiiii+0x7bc>
 80132e0:	9c0a      	ldr	r4, [sp, #40]	; 0x28
 80132e2:	f1c7 0320 	rsb	r3, r7, #32
 80132e6:	4363      	muls	r3, r4
 80132e8:	2401      	movs	r4, #1
 80132ea:	940d      	str	r4, [sp, #52]	; 0x34
 80132ec:	2420      	movs	r4, #32
 80132ee:	940c      	str	r4, [sp, #48]	; 0x30
 80132f0:	fb93 f4f1 	sdiv	r4, r3, r1
 80132f4:	fb01 3b14 	mls	fp, r1, r4, r3
 80132f8:	9b0c      	ldr	r3, [sp, #48]	; 0x30
 80132fa:	f1bb 0f00 	cmp.w	fp, #0
 80132fe:	bfb8      	it	lt
 8013300:	f104 34ff 	addlt.w	r4, r4, #4294967295
 8013304:	441f      	add	r7, r3
 8013306:	fb04 e707 	mla	r7, r4, r7, lr
 801330a:	44a4      	add	ip, r4
 801330c:	f8a5 c004 	strh.w	ip, [r5, #4]
 8013310:	80ef      	strh	r7, [r5, #6]
 8013312:	f8d0 c010 	ldr.w	ip, [r0, #16]
 8013316:	9b0d      	ldr	r3, [sp, #52]	; 0x34
 8013318:	f8bc e006 	ldrh.w	lr, [ip, #6]
 801331c:	f8bc 7004 	ldrh.w	r7, [ip, #4]
 8013320:	bfb8      	it	lt
 8013322:	448b      	addlt	fp, r1
 8013324:	eb08 0503 	add.w	r5, r8, r3
 8013328:	ea5e 0307 	orrs.w	r3, lr, r7
 801332c:	d011      	beq.n	8013352 <_ZN8touchgfx7Outline10renderLineEiiii+0x6de>
 801332e:	f9bc e002 	ldrsh.w	lr, [ip, #2]
 8013332:	f1be 0f00 	cmp.w	lr, #0
 8013336:	db0c      	blt.n	8013352 <_ZN8touchgfx7Outline10renderLineEiiii+0x6de>
 8013338:	6ac7      	ldr	r7, [r0, #44]	; 0x2c
 801333a:	45be      	cmp	lr, r7
 801333c:	da09      	bge.n	8013352 <_ZN8touchgfx7Outline10renderLineEiiii+0x6de>
 801333e:	e9d0 7e01 	ldrd	r7, lr, [r0, #4]
 8013342:	45be      	cmp	lr, r7
 8013344:	bf3c      	itt	cc
 8013346:	f10c 0708 	addcc.w	r7, ip, #8
 801334a:	6107      	strcc	r7, [r0, #16]
 801334c:	f10e 0701 	add.w	r7, lr, #1
 8013350:	6087      	str	r7, [r0, #8]
 8013352:	6907      	ldr	r7, [r0, #16]
 8013354:	b213      	sxth	r3, r2
 8013356:	9310      	str	r3, [sp, #64]	; 0x40
 8013358:	807b      	strh	r3, [r7, #2]
 801335a:	9b0e      	ldr	r3, [sp, #56]	; 0x38
 801335c:	803d      	strh	r5, [r7, #0]
 801335e:	4555      	cmp	r5, sl
 8013360:	80be      	strh	r6, [r7, #4]
 8013362:	80fe      	strh	r6, [r7, #6]
 8013364:	eb04 0c03 	add.w	ip, r4, r3
 8013368:	d051      	beq.n	801340e <_ZN8touchgfx7Outline10renderLineEiiii+0x79a>
 801336a:	9b01      	ldr	r3, [sp, #4]
 801336c:	eba3 070c 	sub.w	r7, r3, ip
 8013370:	443c      	add	r4, r7
 8013372:	0164      	lsls	r4, r4, #5
 8013374:	fb94 f8f1 	sdiv	r8, r4, r1
 8013378:	fb01 4418 	mls	r4, r1, r8, r4
 801337c:	2c00      	cmp	r4, #0
 801337e:	bfb8      	it	lt
 8013380:	f108 38ff 	addlt.w	r8, r8, #4294967295
 8013384:	ebab 0301 	sub.w	r3, fp, r1
 8013388:	f108 0701 	add.w	r7, r8, #1
 801338c:	bfb8      	it	lt
 801338e:	1864      	addlt	r4, r4, r1
 8013390:	9309      	str	r3, [sp, #36]	; 0x24
 8013392:	9711      	str	r7, [sp, #68]	; 0x44
 8013394:	9b09      	ldr	r3, [sp, #36]	; 0x24
 8013396:	f8d0 e010 	ldr.w	lr, [r0, #16]
 801339a:	191b      	adds	r3, r3, r4
 801339c:	bf58      	it	pl
 801339e:	9f11      	ldrpl	r7, [sp, #68]	; 0x44
 80133a0:	f8be b004 	ldrh.w	fp, [lr, #4]
 80133a4:	9309      	str	r3, [sp, #36]	; 0x24
 80133a6:	bf48      	it	mi
 80133a8:	4647      	movmi	r7, r8
 80133aa:	44bb      	add	fp, r7
 80133ac:	f8ae b004 	strh.w	fp, [lr, #4]
 80133b0:	f8be b006 	ldrh.w	fp, [lr, #6]
 80133b4:	eb0b 1b47 	add.w	fp, fp, r7, lsl #5
 80133b8:	f8ae b006 	strh.w	fp, [lr, #6]
 80133bc:	f8d0 e010 	ldr.w	lr, [r0, #16]
 80133c0:	44bc      	add	ip, r7
 80133c2:	9f0d      	ldr	r7, [sp, #52]	; 0x34
 80133c4:	f8be b006 	ldrh.w	fp, [lr, #6]
 80133c8:	443d      	add	r5, r7
 80133ca:	f8be 7004 	ldrh.w	r7, [lr, #4]
 80133ce:	bf5c      	itt	pl
 80133d0:	1a5b      	subpl	r3, r3, r1
 80133d2:	9309      	strpl	r3, [sp, #36]	; 0x24
 80133d4:	ea5b 0307 	orrs.w	r3, fp, r7
 80133d8:	d011      	beq.n	80133fe <_ZN8touchgfx7Outline10renderLineEiiii+0x78a>
 80133da:	f9be b002 	ldrsh.w	fp, [lr, #2]
 80133de:	f1bb 0f00 	cmp.w	fp, #0
 80133e2:	db0c      	blt.n	80133fe <_ZN8touchgfx7Outline10renderLineEiiii+0x78a>
 80133e4:	6ac7      	ldr	r7, [r0, #44]	; 0x2c
 80133e6:	45bb      	cmp	fp, r7
 80133e8:	da09      	bge.n	80133fe <_ZN8touchgfx7Outline10renderLineEiiii+0x78a>
 80133ea:	e9d0 7b01 	ldrd	r7, fp, [r0, #4]
 80133ee:	45bb      	cmp	fp, r7
 80133f0:	bf3c      	itt	cc
 80133f2:	f10e 0708 	addcc.w	r7, lr, #8
 80133f6:	6107      	strcc	r7, [r0, #16]
 80133f8:	f10b 0701 	add.w	r7, fp, #1
 80133fc:	6087      	str	r7, [r0, #8]
 80133fe:	6907      	ldr	r7, [r0, #16]
 8013400:	9b10      	ldr	r3, [sp, #64]	; 0x40
 8013402:	803d      	strh	r5, [r7, #0]
 8013404:	4555      	cmp	r5, sl
 8013406:	807b      	strh	r3, [r7, #2]
 8013408:	80be      	strh	r6, [r7, #4]
 801340a:	80fe      	strh	r6, [r7, #6]
 801340c:	d1c2      	bne.n	8013394 <_ZN8touchgfx7Outline10renderLineEiiii+0x720>
 801340e:	9b01      	ldr	r3, [sp, #4]
 8013410:	9f0f      	ldr	r7, [sp, #60]	; 0x3c
 8013412:	eba3 0c0c 	sub.w	ip, r3, ip
 8013416:	6903      	ldr	r3, [r0, #16]
 8013418:	8899      	ldrh	r1, [r3, #4]
 801341a:	4461      	add	r1, ip
 801341c:	8099      	strh	r1, [r3, #4]
 801341e:	990c      	ldr	r1, [sp, #48]	; 0x30
 8013420:	3720      	adds	r7, #32
 8013422:	1a7f      	subs	r7, r7, r1
 8013424:	88d9      	ldrh	r1, [r3, #6]
 8013426:	fb0c 1c07 	mla	ip, ip, r7, r1
 801342a:	f8a3 c006 	strh.w	ip, [r3, #6]
 801342e:	e60e      	b.n	801304e <_ZN8touchgfx7Outline10renderLineEiiii+0x3da>
 8013430:	9b0a      	ldr	r3, [sp, #40]	; 0x28
 8013432:	f04f 34ff 	mov.w	r4, #4294967295
 8013436:	940d      	str	r4, [sp, #52]	; 0x34
 8013438:	437b      	muls	r3, r7
 801343a:	4249      	negs	r1, r1
 801343c:	2400      	movs	r4, #0
 801343e:	e756      	b.n	80132ee <_ZN8touchgfx7Outline10renderLineEiiii+0x67a>
 8013440:	9905      	ldr	r1, [sp, #20]
 8013442:	f8b7 8004 	ldrh.w	r8, [r7, #4]
 8013446:	f8b7 a006 	ldrh.w	sl, [r7, #6]
 801344a:	f001 011f 	and.w	r1, r1, #31
 801344e:	ea4f 1b69 	mov.w	fp, r9, asr #5
 8013452:	9102      	str	r1, [sp, #8]
 8013454:	9904      	ldr	r1, [sp, #16]
 8013456:	45f3      	cmp	fp, lr
 8013458:	f009 0c1f 	and.w	ip, r9, #31
 801345c:	eba1 0406 	sub.w	r4, r1, r6
 8013460:	d108      	bne.n	8013474 <_ZN8touchgfx7Outline10renderLineEiiii+0x800>
 8013462:	9b02      	ldr	r3, [sp, #8]
 8013464:	449c      	add	ip, r3
 8013466:	44a0      	add	r8, r4
 8013468:	fb04 a40c 	mla	r4, r4, ip, sl
 801346c:	f8a7 8004 	strh.w	r8, [r7, #4]
 8013470:	80fc      	strh	r4, [r7, #6]
 8013472:	e458      	b.n	8012d26 <_ZN8touchgfx7Outline10renderLineEiiii+0xb2>
 8013474:	9905      	ldr	r1, [sp, #20]
 8013476:	ebb1 0109 	subs.w	r1, r1, r9
 801347a:	bf5b      	ittet	pl
 801347c:	f1cc 0520 	rsbpl	r5, ip, #32
 8013480:	436c      	mulpl	r4, r5
 8013482:	2500      	movmi	r5, #0
 8013484:	2520      	movpl	r5, #32
 8013486:	bf44      	itt	mi
 8013488:	fb04 f40c 	mulmi.w	r4, r4, ip
 801348c:	4249      	negmi	r1, r1
 801348e:	9501      	str	r5, [sp, #4]
 8013490:	9b01      	ldr	r3, [sp, #4]
 8013492:	fb94 f5f1 	sdiv	r5, r4, r1
 8013496:	fb01 4415 	mls	r4, r1, r5, r4
 801349a:	bf54      	ite	pl
 801349c:	f04f 0901 	movpl.w	r9, #1
 80134a0:	f04f 39ff 	movmi.w	r9, #4294967295
 80134a4:	2c00      	cmp	r4, #0
 80134a6:	bfb8      	it	lt
 80134a8:	f105 35ff 	addlt.w	r5, r5, #4294967295
 80134ac:	449c      	add	ip, r3
 80134ae:	44a8      	add	r8, r5
 80134b0:	fb05 ac0c 	mla	ip, r5, ip, sl
 80134b4:	f8a7 8004 	strh.w	r8, [r7, #4]
 80134b8:	f8a7 c006 	strh.w	ip, [r7, #6]
 80134bc:	f8d0 c010 	ldr.w	ip, [r0, #16]
 80134c0:	f8bc 8006 	ldrh.w	r8, [ip, #6]
 80134c4:	f8bc 7004 	ldrh.w	r7, [ip, #4]
 80134c8:	bfb8      	it	lt
 80134ca:	1864      	addlt	r4, r4, r1
 80134cc:	ea58 0707 	orrs.w	r7, r8, r7
 80134d0:	eb0b 0309 	add.w	r3, fp, r9
 80134d4:	d011      	beq.n	80134fa <_ZN8touchgfx7Outline10renderLineEiiii+0x886>
 80134d6:	f9bc 8002 	ldrsh.w	r8, [ip, #2]
 80134da:	f1b8 0f00 	cmp.w	r8, #0
 80134de:	db0c      	blt.n	80134fa <_ZN8touchgfx7Outline10renderLineEiiii+0x886>
 80134e0:	6ac7      	ldr	r7, [r0, #44]	; 0x2c
 80134e2:	45b8      	cmp	r8, r7
 80134e4:	da09      	bge.n	80134fa <_ZN8touchgfx7Outline10renderLineEiiii+0x886>
 80134e6:	e9d0 7801 	ldrd	r7, r8, [r0, #4]
 80134ea:	45b8      	cmp	r8, r7
 80134ec:	bf3c      	itt	cc
 80134ee:	f10c 0708 	addcc.w	r7, ip, #8
 80134f2:	6107      	strcc	r7, [r0, #16]
 80134f4:	f108 0701 	add.w	r7, r8, #1
 80134f8:	6087      	str	r7, [r0, #8]
 80134fa:	6907      	ldr	r7, [r0, #16]
 80134fc:	f04f 0c00 	mov.w	ip, #0
 8013500:	b212      	sxth	r2, r2
 8013502:	459e      	cmp	lr, r3
 8013504:	803b      	strh	r3, [r7, #0]
 8013506:	807a      	strh	r2, [r7, #2]
 8013508:	f8a7 c004 	strh.w	ip, [r7, #4]
 801350c:	f8a7 c006 	strh.w	ip, [r7, #6]
 8013510:	442e      	add	r6, r5
 8013512:	d04d      	beq.n	80135b0 <_ZN8touchgfx7Outline10renderLineEiiii+0x93c>
 8013514:	9f04      	ldr	r7, [sp, #16]
 8013516:	1bbf      	subs	r7, r7, r6
 8013518:	443d      	add	r5, r7
 801351a:	016d      	lsls	r5, r5, #5
 801351c:	fb95 f8f1 	sdiv	r8, r5, r1
 8013520:	fb01 5518 	mls	r5, r1, r8, r5
 8013524:	4565      	cmp	r5, ip
 8013526:	bfb8      	it	lt
 8013528:	f108 38ff 	addlt.w	r8, r8, #4294967295
 801352c:	f108 0701 	add.w	r7, r8, #1
 8013530:	bfb8      	it	lt
 8013532:	186d      	addlt	r5, r5, r1
 8013534:	1a64      	subs	r4, r4, r1
 8013536:	9703      	str	r7, [sp, #12]
 8013538:	f04f 0a00 	mov.w	sl, #0
 801353c:	f8d0 c010 	ldr.w	ip, [r0, #16]
 8013540:	1964      	adds	r4, r4, r5
 8013542:	bf58      	it	pl
 8013544:	9f03      	ldrpl	r7, [sp, #12]
 8013546:	f8bc b004 	ldrh.w	fp, [ip, #4]
 801354a:	bf48      	it	mi
 801354c:	4647      	movmi	r7, r8
 801354e:	44bb      	add	fp, r7
 8013550:	f8ac b004 	strh.w	fp, [ip, #4]
 8013554:	f8bc b006 	ldrh.w	fp, [ip, #6]
 8013558:	eb0b 1b47 	add.w	fp, fp, r7, lsl #5
 801355c:	f8ac b006 	strh.w	fp, [ip, #6]
 8013560:	f8d0 c010 	ldr.w	ip, [r0, #16]
 8013564:	443e      	add	r6, r7
 8013566:	f8bc b006 	ldrh.w	fp, [ip, #6]
 801356a:	f8bc 7004 	ldrh.w	r7, [ip, #4]
 801356e:	bf58      	it	pl
 8013570:	1a64      	subpl	r4, r4, r1
 8013572:	ea5b 0707 	orrs.w	r7, fp, r7
 8013576:	444b      	add	r3, r9
 8013578:	d011      	beq.n	801359e <_ZN8touchgfx7Outline10renderLineEiiii+0x92a>
 801357a:	f9bc b002 	ldrsh.w	fp, [ip, #2]
 801357e:	f1bb 0f00 	cmp.w	fp, #0
 8013582:	db0c      	blt.n	801359e <_ZN8touchgfx7Outline10renderLineEiiii+0x92a>
 8013584:	6ac7      	ldr	r7, [r0, #44]	; 0x2c
 8013586:	45bb      	cmp	fp, r7
 8013588:	da09      	bge.n	801359e <_ZN8touchgfx7Outline10renderLineEiiii+0x92a>
 801358a:	e9d0 7b01 	ldrd	r7, fp, [r0, #4]
 801358e:	45bb      	cmp	fp, r7
 8013590:	bf3c      	itt	cc
 8013592:	f10c 0708 	addcc.w	r7, ip, #8
 8013596:	6107      	strcc	r7, [r0, #16]
 8013598:	f10b 0701 	add.w	r7, fp, #1
 801359c:	6087      	str	r7, [r0, #8]
 801359e:	6907      	ldr	r7, [r0, #16]
 80135a0:	459e      	cmp	lr, r3
 80135a2:	803b      	strh	r3, [r7, #0]
 80135a4:	807a      	strh	r2, [r7, #2]
 80135a6:	f8a7 a004 	strh.w	sl, [r7, #4]
 80135aa:	f8a7 a006 	strh.w	sl, [r7, #6]
 80135ae:	d1c5      	bne.n	801353c <_ZN8touchgfx7Outline10renderLineEiiii+0x8c8>
 80135b0:	9b04      	ldr	r3, [sp, #16]
 80135b2:	1b9e      	subs	r6, r3, r6
 80135b4:	6903      	ldr	r3, [r0, #16]
 80135b6:	889a      	ldrh	r2, [r3, #4]
 80135b8:	4432      	add	r2, r6
 80135ba:	809a      	strh	r2, [r3, #4]
 80135bc:	9a02      	ldr	r2, [sp, #8]
 80135be:	f102 0c20 	add.w	ip, r2, #32
 80135c2:	9a01      	ldr	r2, [sp, #4]
 80135c4:	ebac 0c02 	sub.w	ip, ip, r2
 80135c8:	88da      	ldrh	r2, [r3, #6]
 80135ca:	fb06 260c 	mla	r6, r6, ip, r2
 80135ce:	80de      	strh	r6, [r3, #6]
 80135d0:	f7ff bba9 	b.w	8012d26 <_ZN8touchgfx7Outline10renderLineEiiii+0xb2>

080135d4 <_ZN8touchgfx7Outline6lineToEii>:
 80135d4:	6a43      	ldr	r3, [r0, #36]	; 0x24
 80135d6:	079b      	lsls	r3, r3, #30
 80135d8:	b5f7      	push	{r0, r1, r2, r4, r5, r6, r7, lr}
 80135da:	460e      	mov	r6, r1
 80135dc:	4615      	mov	r5, r2
 80135de:	d511      	bpl.n	8013604 <_ZN8touchgfx7Outline6lineToEii+0x30>
 80135e0:	e9d0 1205 	ldrd	r1, r2, [r0, #20]
 80135e4:	ea86 0701 	eor.w	r7, r6, r1
 80135e8:	ea85 0302 	eor.w	r3, r5, r2
 80135ec:	433b      	orrs	r3, r7
 80135ee:	d009      	beq.n	8013604 <_ZN8touchgfx7Outline6lineToEii+0x30>
 80135f0:	4633      	mov	r3, r6
 80135f2:	9500      	str	r5, [sp, #0]
 80135f4:	f7ff fb3e 	bl	8012c74 <_ZN8touchgfx7Outline10renderLineEiiii>
 80135f8:	6a43      	ldr	r3, [r0, #36]	; 0x24
 80135fa:	e9c0 6505 	strd	r6, r5, [r0, #20]
 80135fe:	f043 0301 	orr.w	r3, r3, #1
 8013602:	6243      	str	r3, [r0, #36]	; 0x24
 8013604:	b003      	add	sp, #12
 8013606:	bdf0      	pop	{r4, r5, r6, r7, pc}

08013608 <_ZN8touchgfx7Outline6moveToEii>:
 8013608:	b5f8      	push	{r3, r4, r5, r6, r7, lr}
 801360a:	6a43      	ldr	r3, [r0, #36]	; 0x24
 801360c:	4615      	mov	r5, r2
 801360e:	079a      	lsls	r2, r3, #30
 8013610:	4604      	mov	r4, r0
 8013612:	460e      	mov	r6, r1
 8013614:	d401      	bmi.n	801361a <_ZN8touchgfx7Outline6moveToEii+0x12>
 8013616:	f7ff faf9 	bl	8012c0c <_ZN8touchgfx7Outline5resetEv>
 801361a:	6a63      	ldr	r3, [r4, #36]	; 0x24
 801361c:	07db      	lsls	r3, r3, #31
 801361e:	d504      	bpl.n	801362a <_ZN8touchgfx7Outline6moveToEii+0x22>
 8013620:	e9d4 1207 	ldrd	r1, r2, [r4, #28]
 8013624:	4620      	mov	r0, r4
 8013626:	f7ff ffd5 	bl	80135d4 <_ZN8touchgfx7Outline6lineToEii>
 801362a:	6923      	ldr	r3, [r4, #16]
 801362c:	f9b3 2000 	ldrsh.w	r2, [r3]
 8013630:	1170      	asrs	r0, r6, #5
 8013632:	4290      	cmp	r0, r2
 8013634:	ea4f 1165 	mov.w	r1, r5, asr #5
 8013638:	d103      	bne.n	8013642 <_ZN8touchgfx7Outline6moveToEii+0x3a>
 801363a:	f9b3 2002 	ldrsh.w	r2, [r3, #2]
 801363e:	4291      	cmp	r1, r2
 8013640:	d01a      	beq.n	8013678 <_ZN8touchgfx7Outline6moveToEii+0x70>
 8013642:	88df      	ldrh	r7, [r3, #6]
 8013644:	889a      	ldrh	r2, [r3, #4]
 8013646:	433a      	orrs	r2, r7
 8013648:	d010      	beq.n	801366c <_ZN8touchgfx7Outline6moveToEii+0x64>
 801364a:	f9b3 2002 	ldrsh.w	r2, [r3, #2]
 801364e:	2a00      	cmp	r2, #0
 8013650:	db0c      	blt.n	801366c <_ZN8touchgfx7Outline6moveToEii+0x64>
 8013652:	6ae7      	ldr	r7, [r4, #44]	; 0x2c
 8013654:	42ba      	cmp	r2, r7
 8013656:	da09      	bge.n	801366c <_ZN8touchgfx7Outline6moveToEii+0x64>
 8013658:	e9d4 7201 	ldrd	r7, r2, [r4, #4]
 801365c:	42ba      	cmp	r2, r7
 801365e:	bf38      	it	cc
 8013660:	3308      	addcc	r3, #8
 8013662:	f102 0201 	add.w	r2, r2, #1
 8013666:	bf38      	it	cc
 8013668:	6123      	strcc	r3, [r4, #16]
 801366a:	60a2      	str	r2, [r4, #8]
 801366c:	6923      	ldr	r3, [r4, #16]
 801366e:	2200      	movs	r2, #0
 8013670:	8018      	strh	r0, [r3, #0]
 8013672:	8059      	strh	r1, [r3, #2]
 8013674:	809a      	strh	r2, [r3, #4]
 8013676:	80da      	strh	r2, [r3, #6]
 8013678:	6166      	str	r6, [r4, #20]
 801367a:	e9c4 5606 	strd	r5, r6, [r4, #24]
 801367e:	6225      	str	r5, [r4, #32]
 8013680:	bdf8      	pop	{r3, r4, r5, r6, r7, pc}

08013682 <_ZN8touchgfx7Outline10qsortCellsEPNS_4CellEj>:
 8013682:	e92d 47f0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, lr}
 8013686:	b0d0      	sub	sp, #320	; 0x140
 8013688:	466c      	mov	r4, sp
 801368a:	eb00 01c1 	add.w	r1, r0, r1, lsl #3
 801368e:	4627      	mov	r7, r4
 8013690:	1a0d      	subs	r5, r1, r0
 8013692:	2d48      	cmp	r5, #72	; 0x48
 8013694:	f100 0308 	add.w	r3, r0, #8
 8013698:	f340 80d5 	ble.w	8013846 <_ZN8touchgfx7Outline10qsortCellsEPNS_4CellEj+0x1c4>
 801369c:	112d      	asrs	r5, r5, #4
 801369e:	eb00 02c5 	add.w	r2, r0, r5, lsl #3
 80136a2:	f9b0 9000 	ldrsh.w	r9, [r0]
 80136a6:	6816      	ldr	r6, [r2, #0]
 80136a8:	f9b0 8002 	ldrsh.w	r8, [r0, #2]
 80136ac:	6006      	str	r6, [r0, #0]
 80136ae:	6856      	ldr	r6, [r2, #4]
 80136b0:	f9b0 c006 	ldrsh.w	ip, [r0, #6]
 80136b4:	f9b0 e004 	ldrsh.w	lr, [r0, #4]
 80136b8:	6046      	str	r6, [r0, #4]
 80136ba:	f820 9035 	strh.w	r9, [r0, r5, lsl #3]
 80136be:	f8a2 8002 	strh.w	r8, [r2, #2]
 80136c2:	f8a2 e004 	strh.w	lr, [r2, #4]
 80136c6:	f8a2 c006 	strh.w	ip, [r2, #6]
 80136ca:	f931 5c06 	ldrsh.w	r5, [r1, #-6]
 80136ce:	f9b0 c00a 	ldrsh.w	ip, [r0, #10]
 80136d2:	4565      	cmp	r5, ip
 80136d4:	f1a1 0208 	sub.w	r2, r1, #8
 80136d8:	db06      	blt.n	80136e8 <_ZN8touchgfx7Outline10qsortCellsEPNS_4CellEj+0x66>
 80136da:	d119      	bne.n	8013710 <_ZN8touchgfx7Outline10qsortCellsEPNS_4CellEj+0x8e>
 80136dc:	f9b0 6008 	ldrsh.w	r6, [r0, #8]
 80136e0:	f931 5c08 	ldrsh.w	r5, [r1, #-8]
 80136e4:	42ae      	cmp	r6, r5
 80136e6:	dd13      	ble.n	8013710 <_ZN8touchgfx7Outline10qsortCellsEPNS_4CellEj+0x8e>
 80136e8:	460e      	mov	r6, r1
 80136ea:	f9b0 9008 	ldrsh.w	r9, [r0, #8]
 80136ee:	f856 5d08 	ldr.w	r5, [r6, #-8]!
 80136f2:	f9b0 800c 	ldrsh.w	r8, [r0, #12]
 80136f6:	f9b0 e00e 	ldrsh.w	lr, [r0, #14]
 80136fa:	601d      	str	r5, [r3, #0]
 80136fc:	6875      	ldr	r5, [r6, #4]
 80136fe:	605d      	str	r5, [r3, #4]
 8013700:	f821 9c08 	strh.w	r9, [r1, #-8]
 8013704:	f821 cc06 	strh.w	ip, [r1, #-6]
 8013708:	f821 8c04 	strh.w	r8, [r1, #-4]
 801370c:	f821 ec02 	strh.w	lr, [r1, #-2]
 8013710:	f9b0 6002 	ldrsh.w	r6, [r0, #2]
 8013714:	f9b0 500a 	ldrsh.w	r5, [r0, #10]
 8013718:	42ae      	cmp	r6, r5
 801371a:	db06      	blt.n	801372a <_ZN8touchgfx7Outline10qsortCellsEPNS_4CellEj+0xa8>
 801371c:	d116      	bne.n	801374c <_ZN8touchgfx7Outline10qsortCellsEPNS_4CellEj+0xca>
 801371e:	f9b0 c000 	ldrsh.w	ip, [r0]
 8013722:	f9b0 5008 	ldrsh.w	r5, [r0, #8]
 8013726:	45ac      	cmp	ip, r5
 8013728:	da10      	bge.n	801374c <_ZN8touchgfx7Outline10qsortCellsEPNS_4CellEj+0xca>
 801372a:	681d      	ldr	r5, [r3, #0]
 801372c:	f9b0 8000 	ldrsh.w	r8, [r0]
 8013730:	6005      	str	r5, [r0, #0]
 8013732:	685d      	ldr	r5, [r3, #4]
 8013734:	f9b0 e004 	ldrsh.w	lr, [r0, #4]
 8013738:	f9b0 c006 	ldrsh.w	ip, [r0, #6]
 801373c:	f8a0 8008 	strh.w	r8, [r0, #8]
 8013740:	6045      	str	r5, [r0, #4]
 8013742:	8146      	strh	r6, [r0, #10]
 8013744:	f8a0 e00c 	strh.w	lr, [r0, #12]
 8013748:	f8a0 c00e 	strh.w	ip, [r0, #14]
 801374c:	f931 5c06 	ldrsh.w	r5, [r1, #-6]
 8013750:	f9b0 c002 	ldrsh.w	ip, [r0, #2]
 8013754:	4565      	cmp	r5, ip
 8013756:	db06      	blt.n	8013766 <_ZN8touchgfx7Outline10qsortCellsEPNS_4CellEj+0xe4>
 8013758:	d119      	bne.n	801378e <_ZN8touchgfx7Outline10qsortCellsEPNS_4CellEj+0x10c>
 801375a:	f931 6c08 	ldrsh.w	r6, [r1, #-8]
 801375e:	f9b0 5000 	ldrsh.w	r5, [r0]
 8013762:	42ae      	cmp	r6, r5
 8013764:	da13      	bge.n	801378e <_ZN8touchgfx7Outline10qsortCellsEPNS_4CellEj+0x10c>
 8013766:	460e      	mov	r6, r1
 8013768:	f9b0 9000 	ldrsh.w	r9, [r0]
 801376c:	f856 5d08 	ldr.w	r5, [r6, #-8]!
 8013770:	6005      	str	r5, [r0, #0]
 8013772:	f9b0 8004 	ldrsh.w	r8, [r0, #4]
 8013776:	f9b0 e006 	ldrsh.w	lr, [r0, #6]
 801377a:	6875      	ldr	r5, [r6, #4]
 801377c:	6045      	str	r5, [r0, #4]
 801377e:	f821 9c08 	strh.w	r9, [r1, #-8]
 8013782:	f821 cc06 	strh.w	ip, [r1, #-6]
 8013786:	f821 8c04 	strh.w	r8, [r1, #-4]
 801378a:	f821 ec02 	strh.w	lr, [r1, #-2]
 801378e:	3308      	adds	r3, #8
 8013790:	f9b0 c002 	ldrsh.w	ip, [r0, #2]
 8013794:	f9b3 e002 	ldrsh.w	lr, [r3, #2]
 8013798:	45e6      	cmp	lr, ip
 801379a:	dbf8      	blt.n	801378e <_ZN8touchgfx7Outline10qsortCellsEPNS_4CellEj+0x10c>
 801379c:	d105      	bne.n	80137aa <_ZN8touchgfx7Outline10qsortCellsEPNS_4CellEj+0x128>
 801379e:	f9b3 6000 	ldrsh.w	r6, [r3]
 80137a2:	f9b0 5000 	ldrsh.w	r5, [r0]
 80137a6:	42ae      	cmp	r6, r5
 80137a8:	dbf1      	blt.n	801378e <_ZN8touchgfx7Outline10qsortCellsEPNS_4CellEj+0x10c>
 80137aa:	4615      	mov	r5, r2
 80137ac:	3a08      	subs	r2, #8
 80137ae:	f9b2 6002 	ldrsh.w	r6, [r2, #2]
 80137b2:	45b4      	cmp	ip, r6
 80137b4:	dbf9      	blt.n	80137aa <_ZN8touchgfx7Outline10qsortCellsEPNS_4CellEj+0x128>
 80137b6:	d105      	bne.n	80137c4 <_ZN8touchgfx7Outline10qsortCellsEPNS_4CellEj+0x142>
 80137b8:	f9b0 8000 	ldrsh.w	r8, [r0]
 80137bc:	f9b2 6000 	ldrsh.w	r6, [r2]
 80137c0:	45b0      	cmp	r8, r6
 80137c2:	dbf2      	blt.n	80137aa <_ZN8touchgfx7Outline10qsortCellsEPNS_4CellEj+0x128>
 80137c4:	4293      	cmp	r3, r2
 80137c6:	f1a5 0608 	sub.w	r6, r5, #8
 80137ca:	d816      	bhi.n	80137fa <_ZN8touchgfx7Outline10qsortCellsEPNS_4CellEj+0x178>
 80137cc:	f8d6 c000 	ldr.w	ip, [r6]
 80137d0:	f9b3 a000 	ldrsh.w	sl, [r3]
 80137d4:	f8c3 c000 	str.w	ip, [r3]
 80137d8:	f9b3 9004 	ldrsh.w	r9, [r3, #4]
 80137dc:	f9b3 8006 	ldrsh.w	r8, [r3, #6]
 80137e0:	f8d6 c004 	ldr.w	ip, [r6, #4]
 80137e4:	f8c3 c004 	str.w	ip, [r3, #4]
 80137e8:	f825 ac08 	strh.w	sl, [r5, #-8]
 80137ec:	f825 ec06 	strh.w	lr, [r5, #-6]
 80137f0:	f825 9c04 	strh.w	r9, [r5, #-4]
 80137f4:	f825 8c02 	strh.w	r8, [r5, #-2]
 80137f8:	e7c9      	b.n	801378e <_ZN8touchgfx7Outline10qsortCellsEPNS_4CellEj+0x10c>
 80137fa:	f8d6 e000 	ldr.w	lr, [r6]
 80137fe:	f9b0 a000 	ldrsh.w	sl, [r0]
 8013802:	f8c0 e000 	str.w	lr, [r0]
 8013806:	f9b0 9004 	ldrsh.w	r9, [r0, #4]
 801380a:	f9b0 8006 	ldrsh.w	r8, [r0, #6]
 801380e:	f8d6 e004 	ldr.w	lr, [r6, #4]
 8013812:	f8c0 e004 	str.w	lr, [r0, #4]
 8013816:	f825 ac08 	strh.w	sl, [r5, #-8]
 801381a:	f825 cc06 	strh.w	ip, [r5, #-6]
 801381e:	f825 9c04 	strh.w	r9, [r5, #-4]
 8013822:	f825 8c02 	strh.w	r8, [r5, #-2]
 8013826:	1acd      	subs	r5, r1, r3
 8013828:	1a16      	subs	r6, r2, r0
 801382a:	10ed      	asrs	r5, r5, #3
 801382c:	ebb5 0fe6 	cmp.w	r5, r6, asr #3
 8013830:	bfb5      	itete	lt
 8013832:	e9c4 0200 	strdlt	r0, r2, [r4]
 8013836:	e9c4 3100 	strdge	r3, r1, [r4]
 801383a:	460a      	movlt	r2, r1
 801383c:	4603      	movge	r3, r0
 801383e:	3408      	adds	r4, #8
 8013840:	4618      	mov	r0, r3
 8013842:	4611      	mov	r1, r2
 8013844:	e724      	b.n	8013690 <_ZN8touchgfx7Outline10qsortCellsEPNS_4CellEj+0xe>
 8013846:	4299      	cmp	r1, r3
 8013848:	d928      	bls.n	801389c <_ZN8touchgfx7Outline10qsortCellsEPNS_4CellEj+0x21a>
 801384a:	f1a3 0210 	sub.w	r2, r3, #16
 801384e:	f9b2 c012 	ldrsh.w	ip, [r2, #18]
 8013852:	f9b2 500a 	ldrsh.w	r5, [r2, #10]
 8013856:	45ac      	cmp	ip, r5
 8013858:	db06      	blt.n	8013868 <_ZN8touchgfx7Outline10qsortCellsEPNS_4CellEj+0x1e6>
 801385a:	d11d      	bne.n	8013898 <_ZN8touchgfx7Outline10qsortCellsEPNS_4CellEj+0x216>
 801385c:	f9b2 6010 	ldrsh.w	r6, [r2, #16]
 8013860:	f9b2 5008 	ldrsh.w	r5, [r2, #8]
 8013864:	42ae      	cmp	r6, r5
 8013866:	da17      	bge.n	8013898 <_ZN8touchgfx7Outline10qsortCellsEPNS_4CellEj+0x216>
 8013868:	4615      	mov	r5, r2
 801386a:	f9b2 9010 	ldrsh.w	r9, [r2, #16]
 801386e:	f855 6f08 	ldr.w	r6, [r5, #8]!
 8013872:	6116      	str	r6, [r2, #16]
 8013874:	686e      	ldr	r6, [r5, #4]
 8013876:	f9b2 8014 	ldrsh.w	r8, [r2, #20]
 801387a:	f9b2 e016 	ldrsh.w	lr, [r2, #22]
 801387e:	f8a2 9008 	strh.w	r9, [r2, #8]
 8013882:	42a8      	cmp	r0, r5
 8013884:	6156      	str	r6, [r2, #20]
 8013886:	f8a2 c00a 	strh.w	ip, [r2, #10]
 801388a:	f8a2 800c 	strh.w	r8, [r2, #12]
 801388e:	f8a2 e00e 	strh.w	lr, [r2, #14]
 8013892:	f1a2 0208 	sub.w	r2, r2, #8
 8013896:	d1da      	bne.n	801384e <_ZN8touchgfx7Outline10qsortCellsEPNS_4CellEj+0x1cc>
 8013898:	3308      	adds	r3, #8
 801389a:	e7d4      	b.n	8013846 <_ZN8touchgfx7Outline10qsortCellsEPNS_4CellEj+0x1c4>
 801389c:	42bc      	cmp	r4, r7
 801389e:	d903      	bls.n	80138a8 <_ZN8touchgfx7Outline10qsortCellsEPNS_4CellEj+0x226>
 80138a0:	e954 0102 	ldrd	r0, r1, [r4, #-8]
 80138a4:	3c08      	subs	r4, #8
 80138a6:	e6f3      	b.n	8013690 <_ZN8touchgfx7Outline10qsortCellsEPNS_4CellEj+0xe>
 80138a8:	b050      	add	sp, #320	; 0x140
 80138aa:	e8bd 87f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, pc}

080138ae <_ZN8touchgfx7Outline24closeOutlineAndSortCellsEv>:
 80138ae:	b510      	push	{r4, lr}
 80138b0:	6a43      	ldr	r3, [r0, #36]	; 0x24
 80138b2:	07da      	lsls	r2, r3, #31
 80138b4:	4604      	mov	r4, r0
 80138b6:	d507      	bpl.n	80138c8 <_ZN8touchgfx7Outline24closeOutlineAndSortCellsEv+0x1a>
 80138b8:	e9d0 1207 	ldrd	r1, r2, [r0, #28]
 80138bc:	f7ff fe8a 	bl	80135d4 <_ZN8touchgfx7Outline6lineToEii>
 80138c0:	6a43      	ldr	r3, [r0, #36]	; 0x24
 80138c2:	f023 0301 	bic.w	r3, r3, #1
 80138c6:	6243      	str	r3, [r0, #36]	; 0x24
 80138c8:	6a63      	ldr	r3, [r4, #36]	; 0x24
 80138ca:	079b      	lsls	r3, r3, #30
 80138cc:	d521      	bpl.n	8013912 <_ZN8touchgfx7Outline24closeOutlineAndSortCellsEv+0x64>
 80138ce:	6923      	ldr	r3, [r4, #16]
 80138d0:	88d9      	ldrh	r1, [r3, #6]
 80138d2:	889a      	ldrh	r2, [r3, #4]
 80138d4:	430a      	orrs	r2, r1
 80138d6:	d010      	beq.n	80138fa <_ZN8touchgfx7Outline24closeOutlineAndSortCellsEv+0x4c>
 80138d8:	f9b3 2002 	ldrsh.w	r2, [r3, #2]
 80138dc:	2a00      	cmp	r2, #0
 80138de:	db0c      	blt.n	80138fa <_ZN8touchgfx7Outline24closeOutlineAndSortCellsEv+0x4c>
 80138e0:	6ae1      	ldr	r1, [r4, #44]	; 0x2c
 80138e2:	428a      	cmp	r2, r1
 80138e4:	da09      	bge.n	80138fa <_ZN8touchgfx7Outline24closeOutlineAndSortCellsEv+0x4c>
 80138e6:	e9d4 1201 	ldrd	r1, r2, [r4, #4]
 80138ea:	4291      	cmp	r1, r2
 80138ec:	bf88      	it	hi
 80138ee:	3308      	addhi	r3, #8
 80138f0:	f102 0201 	add.w	r2, r2, #1
 80138f4:	bf88      	it	hi
 80138f6:	6123      	strhi	r3, [r4, #16]
 80138f8:	60a2      	str	r2, [r4, #8]
 80138fa:	68a1      	ldr	r1, [r4, #8]
 80138fc:	b129      	cbz	r1, 801390a <_ZN8touchgfx7Outline24closeOutlineAndSortCellsEv+0x5c>
 80138fe:	6863      	ldr	r3, [r4, #4]
 8013900:	4299      	cmp	r1, r3
 8013902:	d802      	bhi.n	801390a <_ZN8touchgfx7Outline24closeOutlineAndSortCellsEv+0x5c>
 8013904:	68e0      	ldr	r0, [r4, #12]
 8013906:	f7ff febc 	bl	8013682 <_ZN8touchgfx7Outline10qsortCellsEPNS_4CellEj>
 801390a:	6a63      	ldr	r3, [r4, #36]	; 0x24
 801390c:	f023 0302 	bic.w	r3, r3, #2
 8013910:	6263      	str	r3, [r4, #36]	; 0x24
 8013912:	68e0      	ldr	r0, [r4, #12]
 8013914:	bd10      	pop	{r4, pc}
	...

08013918 <_ZN8touchgfx20CanvasWidgetRenderer11setupBufferEPhj>:
 8013918:	4b02      	ldr	r3, [pc, #8]	; (8013924 <_ZN8touchgfx20CanvasWidgetRenderer11setupBufferEPhj+0xc>)
 801391a:	6018      	str	r0, [r3, #0]
 801391c:	4b02      	ldr	r3, [pc, #8]	; (8013928 <_ZN8touchgfx20CanvasWidgetRenderer11setupBufferEPhj+0x10>)
 801391e:	6019      	str	r1, [r3, #0]
 8013920:	4770      	bx	lr
 8013922:	bf00      	nop
 8013924:	20012f2c 	.word	0x20012f2c
 8013928:	20012f30 	.word	0x20012f30

0801392c <_ZN8touchgfx20CanvasWidgetRenderer11resetBufferEv>:
 801392c:	4a02      	ldr	r2, [pc, #8]	; (8013938 <_ZN8touchgfx20CanvasWidgetRenderer11resetBufferEv+0xc>)
 801392e:	2300      	movs	r3, #0
 8013930:	6013      	str	r3, [r2, #0]
 8013932:	4a02      	ldr	r2, [pc, #8]	; (801393c <_ZN8touchgfx20CanvasWidgetRenderer11resetBufferEv+0x10>)
 8013934:	6013      	str	r3, [r2, #0]
 8013936:	4770      	bx	lr
 8013938:	20012f2c 	.word	0x20012f2c
 801393c:	20012f30 	.word	0x20012f30

08013940 <_ZN8touchgfx20CanvasWidgetRenderer16getOutlineBufferEv>:
 8013940:	4b01      	ldr	r3, [pc, #4]	; (8013948 <_ZN8touchgfx20CanvasWidgetRenderer16getOutlineBufferEv+0x8>)
 8013942:	6818      	ldr	r0, [r3, #0]
 8013944:	4770      	bx	lr
 8013946:	bf00      	nop
 8013948:	20012f2c 	.word	0x20012f2c

0801394c <_ZN8touchgfx20CanvasWidgetRenderer20getOutlineBufferSizeEv>:
 801394c:	4b01      	ldr	r3, [pc, #4]	; (8013954 <_ZN8touchgfx20CanvasWidgetRenderer20getOutlineBufferSizeEv+0x8>)
 801394e:	6818      	ldr	r0, [r3, #0]
 8013950:	4770      	bx	lr
 8013952:	bf00      	nop
 8013954:	20012f30 	.word	0x20012f30

08013958 <_ZN8touchgfx3LCD27supportDynamicBitmapDrawingENS_6Bitmap12BitmapFormatE>:
 8013958:	b510      	push	{r4, lr}
 801395a:	6803      	ldr	r3, [r0, #0]
 801395c:	6adb      	ldr	r3, [r3, #44]	; 0x2c
 801395e:	460c      	mov	r4, r1
 8013960:	4798      	blx	r3
 8013962:	1b03      	subs	r3, r0, r4
 8013964:	4258      	negs	r0, r3
 8013966:	4158      	adcs	r0, r3
 8013968:	bd10      	pop	{r4, pc}
	...

0801396c <_ZN8touchgfx3LCD15setDefaultColorENS_9colortypeE>:
 801396c:	4b01      	ldr	r3, [pc, #4]	; (8013974 <_ZN8touchgfx3LCD15setDefaultColorENS_9colortypeE+0x8>)
 801396e:	6019      	str	r1, [r3, #0]
 8013970:	4770      	bx	lr
 8013972:	bf00      	nop
 8013974:	20012f34 	.word	0x20012f34

08013978 <_ZN8touchgfx3LCD18drawTextureMapQuadERKNS_14DrawingSurfaceEPKNS_7Point3DERKNS_14TextureSurfaceERKNS_4RectESC_tht>:
 8013978:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 801397c:	4696      	mov	lr, r2
 801397e:	4605      	mov	r5, r0
 8013980:	4614      	mov	r4, r2
 8013982:	460e      	mov	r6, r1
 8013984:	461f      	mov	r7, r3
 8013986:	e8be 000f 	ldmia.w	lr!, {r0, r1, r2, r3}
 801398a:	b097      	sub	sp, #92	; 0x5c
 801398c:	f10d 0c1c 	add.w	ip, sp, #28
 8013990:	e8ac 000f 	stmia.w	ip!, {r0, r1, r2, r3}
 8013994:	f8de 3000 	ldr.w	r3, [lr]
 8013998:	f8cc 3000 	str.w	r3, [ip]
 801399c:	f104 0e14 	add.w	lr, r4, #20
 80139a0:	e8be 000f 	ldmia.w	lr!, {r0, r1, r2, r3}
 80139a4:	f10d 0c30 	add.w	ip, sp, #48	; 0x30
 80139a8:	e8ac 000f 	stmia.w	ip!, {r0, r1, r2, r3}
 80139ac:	f8de 3000 	ldr.w	r3, [lr]
 80139b0:	f8cc 3000 	str.w	r3, [ip]
 80139b4:	f104 0e28 	add.w	lr, r4, #40	; 0x28
 80139b8:	e8be 000f 	ldmia.w	lr!, {r0, r1, r2, r3}
 80139bc:	f10d 0c44 	add.w	ip, sp, #68	; 0x44
 80139c0:	e8ac 000f 	stmia.w	ip!, {r0, r1, r2, r3}
 80139c4:	f89d 908c 	ldrb.w	r9, [sp, #140]	; 0x8c
 80139c8:	f8bd a090 	ldrh.w	sl, [sp, #144]	; 0x90
 80139cc:	f8bd 8088 	ldrh.w	r8, [sp, #136]	; 0x88
 80139d0:	f8de 3000 	ldr.w	r3, [lr]
 80139d4:	f8cc 3000 	str.w	r3, [ip]
 80139d8:	9a21      	ldr	r2, [sp, #132]	; 0x84
 80139da:	682b      	ldr	r3, [r5, #0]
 80139dc:	9201      	str	r2, [sp, #4]
 80139de:	e9cd 9a03 	strd	r9, sl, [sp, #12]
 80139e2:	9a20      	ldr	r2, [sp, #128]	; 0x80
 80139e4:	9200      	str	r2, [sp, #0]
 80139e6:	f8cd 8008 	str.w	r8, [sp, #8]
 80139ea:	f8d3 b03c 	ldr.w	fp, [r3, #60]	; 0x3c
 80139ee:	aa07      	add	r2, sp, #28
 80139f0:	463b      	mov	r3, r7
 80139f2:	4631      	mov	r1, r6
 80139f4:	4628      	mov	r0, r5
 80139f6:	47d8      	blx	fp
 80139f8:	46a6      	mov	lr, r4
 80139fa:	e8be 000f 	ldmia.w	lr!, {r0, r1, r2, r3}
 80139fe:	f10d 0c1c 	add.w	ip, sp, #28
 8013a02:	e8ac 000f 	stmia.w	ip!, {r0, r1, r2, r3}
 8013a06:	f8de 3000 	ldr.w	r3, [lr]
 8013a0a:	f8cc 3000 	str.w	r3, [ip]
 8013a0e:	f104 0e28 	add.w	lr, r4, #40	; 0x28
 8013a12:	e8be 000f 	ldmia.w	lr!, {r0, r1, r2, r3}
 8013a16:	f10d 0c30 	add.w	ip, sp, #48	; 0x30
 8013a1a:	e8ac 000f 	stmia.w	ip!, {r0, r1, r2, r3}
 8013a1e:	343c      	adds	r4, #60	; 0x3c
 8013a20:	f8de 3000 	ldr.w	r3, [lr]
 8013a24:	f8cc 3000 	str.w	r3, [ip]
 8013a28:	cc0f      	ldmia	r4!, {r0, r1, r2, r3}
 8013a2a:	f10d 0c44 	add.w	ip, sp, #68	; 0x44
 8013a2e:	e8ac 000f 	stmia.w	ip!, {r0, r1, r2, r3}
 8013a32:	6823      	ldr	r3, [r4, #0]
 8013a34:	f8cc 3000 	str.w	r3, [ip]
 8013a38:	682b      	ldr	r3, [r5, #0]
 8013a3a:	e9cd 9a03 	strd	r9, sl, [sp, #12]
 8013a3e:	9a21      	ldr	r2, [sp, #132]	; 0x84
 8013a40:	9201      	str	r2, [sp, #4]
 8013a42:	9a20      	ldr	r2, [sp, #128]	; 0x80
 8013a44:	9200      	str	r2, [sp, #0]
 8013a46:	f8cd 8008 	str.w	r8, [sp, #8]
 8013a4a:	6bdc      	ldr	r4, [r3, #60]	; 0x3c
 8013a4c:	aa07      	add	r2, sp, #28
 8013a4e:	463b      	mov	r3, r7
 8013a50:	4631      	mov	r1, r6
 8013a52:	4628      	mov	r0, r5
 8013a54:	47a0      	blx	r4
 8013a56:	b017      	add	sp, #92	; 0x5c
 8013a58:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}

08013a5c <_ZN8touchgfx3LCD22drawTextureMapScanLineERKNS_14DrawingSurfaceERKNS_9GradientsEPKNS_4EdgeES9_RKNS_14TextureSurfaceERKNS_4RectESF_tht>:
 8013a5c:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 8013a60:	b08d      	sub	sp, #52	; 0x34
 8013a62:	4688      	mov	r8, r1
 8013a64:	9916      	ldr	r1, [sp, #88]	; 0x58
 8013a66:	f8d3 c000 	ldr.w	ip, [r3]
 8013a6a:	680f      	ldr	r7, [r1, #0]
 8013a6c:	f8bd 4070 	ldrh.w	r4, [sp, #112]	; 0x70
 8013a70:	ed92 4a09 	vldr	s8, [r2, #36]	; 0x24
 8013a74:	edd2 4a0b 	vldr	s9, [r2, #44]	; 0x2c
 8013a78:	edd3 6a07 	vldr	s13, [r3, #28]
 8013a7c:	9918      	ldr	r1, [sp, #96]	; 0x60
 8013a7e:	f8dd a064 	ldr.w	sl, [sp, #100]	; 0x64
 8013a82:	f9b1 9000 	ldrsh.w	r9, [r1]
 8013a86:	f9ba 1000 	ldrsh.w	r1, [sl]
 8013a8a:	edd3 1a0a 	vldr	s3, [r3, #40]	; 0x28
 8013a8e:	ed93 2a0d 	vldr	s4, [r3, #52]	; 0x34
 8013a92:	eba7 070c 	sub.w	r7, r7, ip
 8013a96:	42bc      	cmp	r4, r7
 8013a98:	bfa8      	it	ge
 8013a9a:	463c      	movge	r4, r7
 8013a9c:	ee07 4a90 	vmov	s15, r4
 8013aa0:	eeb8 5ae7 	vcvt.f32.s32	s10, s15
 8013aa4:	edd2 7a0d 	vldr	s15, [r2, #52]	; 0x34
 8013aa8:	ee25 4a04 	vmul.f32	s8, s10, s8
 8013aac:	ee65 4a24 	vmul.f32	s9, s10, s9
 8013ab0:	ee25 5a27 	vmul.f32	s10, s10, s15
 8013ab4:	eef7 7a00 	vmov.f32	s15, #112	; 0x3f800000  1.0
 8013ab8:	ee87 7aa6 	vdiv.f32	s14, s15, s13
 8013abc:	eb09 0e0c 	add.w	lr, r9, ip
 8013ac0:	4571      	cmp	r1, lr
 8013ac2:	ee71 0aa4 	vadd.f32	s1, s3, s9
 8013ac6:	ee32 1a05 	vadd.f32	s2, s4, s10
 8013aca:	ee36 0a84 	vadd.f32	s0, s13, s8
 8013ace:	ee61 1a87 	vmul.f32	s3, s3, s14
 8013ad2:	ee22 2a07 	vmul.f32	s4, s4, s14
 8013ad6:	f340 808d 	ble.w	8013bf4 <_ZN8touchgfx3LCD22drawTextureMapScanLineERKNS_14DrawingSurfaceERKNS_9GradientsEPKNS_4EdgeES9_RKNS_14TextureSurfaceERKNS_4RectESF_tht+0x198>
 8013ada:	eba1 060e 	sub.w	r6, r1, lr
 8013ade:	fb96 f5f4 	sdiv	r5, r6, r4
 8013ae2:	ee07 5a10 	vmov	s14, r5
 8013ae6:	eeb8 7ac7 	vcvt.f32.s32	s14, s14
 8013aea:	2d00      	cmp	r5, #0
 8013aec:	fb04 6615 	mls	r6, r4, r5, r6
 8013af0:	eea7 0a04 	vfma.f32	s0, s14, s8
 8013af4:	eee7 0a24 	vfma.f32	s1, s14, s9
 8013af8:	eea7 1a05 	vfma.f32	s2, s14, s10
 8013afc:	dd13      	ble.n	8013b26 <_ZN8touchgfx3LCD22drawTextureMapScanLineERKNS_14DrawingSurfaceERKNS_9GradientsEPKNS_4EdgeES9_RKNS_14TextureSurfaceERKNS_4RectESF_tht+0xca>
 8013afe:	ee70 6a44 	vsub.f32	s13, s0, s8
 8013b02:	ee70 1ae4 	vsub.f32	s3, s1, s9
 8013b06:	eef5 6a40 	vcmp.f32	s13, #0.0
 8013b0a:	eef1 fa10 	vmrs	APSR_nzcv, fpscr
 8013b0e:	bf18      	it	ne
 8013b10:	ee87 7aa6 	vdivne.f32	s14, s15, s13
 8013b14:	ee31 2a45 	vsub.f32	s4, s2, s10
 8013b18:	bf08      	it	eq
 8013b1a:	eeb0 7a67 	vmoveq.f32	s14, s15
 8013b1e:	ee61 1a87 	vmul.f32	s3, s3, s14
 8013b22:	ee22 2a07 	vmul.f32	s4, s4, s14
 8013b26:	fb05 f204 	mul.w	r2, r5, r4
 8013b2a:	1abf      	subs	r7, r7, r2
 8013b2c:	4494      	add	ip, r2
 8013b2e:	f8ba 2004 	ldrh.w	r2, [sl, #4]
 8013b32:	4411      	add	r1, r2
 8013b34:	eb09 020c 	add.w	r2, r9, ip
 8013b38:	443a      	add	r2, r7
 8013b3a:	b209      	sxth	r1, r1
 8013b3c:	428a      	cmp	r2, r1
 8013b3e:	bfc4      	itt	gt
 8013b40:	eba1 0209 	subgt.w	r2, r1, r9
 8013b44:	eba2 070c 	subgt.w	r7, r2, ip
 8013b48:	2f00      	cmp	r7, #0
 8013b4a:	dd50      	ble.n	8013bee <_ZN8touchgfx3LCD22drawTextureMapScanLineERKNS_14DrawingSurfaceERKNS_9GradientsEPKNS_4EdgeES9_RKNS_14TextureSurfaceERKNS_4RectESF_tht+0x192>
 8013b4c:	fb97 f1f4 	sdiv	r1, r7, r4
 8013b50:	fb04 7211 	mls	r2, r4, r1, r7
 8013b54:	b90a      	cbnz	r2, 8013b5a <_ZN8touchgfx3LCD22drawTextureMapScanLineERKNS_14DrawingSurfaceERKNS_9GradientsEPKNS_4EdgeES9_RKNS_14TextureSurfaceERKNS_4RectESF_tht+0xfe>
 8013b56:	3901      	subs	r1, #1
 8013b58:	4622      	mov	r2, r4
 8013b5a:	eec7 3a80 	vdiv.f32	s7, s15, s0
 8013b5e:	6840      	ldr	r0, [r0, #4]
 8013b60:	900b      	str	r0, [sp, #44]	; 0x2c
 8013b62:	f8d0 a000 	ldr.w	sl, [r0]
 8013b66:	9817      	ldr	r0, [sp, #92]	; 0x5c
 8013b68:	9008      	str	r0, [sp, #32]
 8013b6a:	f89d b06c 	ldrb.w	fp, [sp, #108]	; 0x6c
 8013b6e:	9818      	ldr	r0, [sp, #96]	; 0x60
 8013b70:	f8cd b024 	str.w	fp, [sp, #36]	; 0x24
 8013b74:	f9b0 b002 	ldrsh.w	fp, [r0, #2]
 8013b78:	695b      	ldr	r3, [r3, #20]
 8013b7a:	980b      	ldr	r0, [sp, #44]	; 0x2c
 8013b7c:	445b      	add	r3, fp
 8013b7e:	eef0 6a42 	vmov.f32	s13, s4
 8013b82:	ee60 2aa3 	vmul.f32	s5, s1, s7
 8013b86:	ee21 3a23 	vmul.f32	s6, s2, s7
 8013b8a:	ee72 7ae1 	vsub.f32	s15, s5, s3
 8013b8e:	eefe 6ac8 	vcvt.s32.f32	s13, s13, #16
 8013b92:	eefe 7ac8 	vcvt.s32.f32	s15, s15, #16
 8013b96:	9307      	str	r3, [sp, #28]
 8013b98:	ee17 7a90 	vmov	r7, s15
 8013b9c:	ee73 7a42 	vsub.f32	s15, s6, s4
 8013ba0:	eeb0 7a61 	vmov.f32	s14, s3
 8013ba4:	eefe 7ac8 	vcvt.s32.f32	s15, s15, #16
 8013ba8:	ee16 3a90 	vmov	r3, s13
 8013bac:	fb97 f7f4 	sdiv	r7, r7, r4
 8013bb0:	ee17 ca90 	vmov	ip, s15
 8013bb4:	eebe 7ac8 	vcvt.s32.f32	s14, s14, #16
 8013bb8:	fb9c fcf4 	sdiv	ip, ip, r4
 8013bbc:	fb0c 3306 	mla	r3, ip, r6, r3
 8013bc0:	9302      	str	r3, [sp, #8]
 8013bc2:	ee17 3a10 	vmov	r3, s14
 8013bc6:	44b6      	add	lr, r6
 8013bc8:	fb04 e505 	mla	r5, r4, r5, lr
 8013bcc:	e9cd 7c03 	strd	r7, ip, [sp, #12]
 8013bd0:	fb07 3706 	mla	r7, r7, r6, r3
 8013bd4:	e9cd 8505 	strd	r8, r5, [sp, #20]
 8013bd8:	e9cd 4700 	strd	r4, r7, [sp]
 8013bdc:	2900      	cmp	r1, #0
 8013bde:	bfcc      	ite	gt
 8013be0:	46a1      	movgt	r9, r4
 8013be2:	4691      	movle	r9, r2
 8013be4:	eba9 0306 	sub.w	r3, r9, r6
 8013be8:	f8da 4008 	ldr.w	r4, [sl, #8]
 8013bec:	47a0      	blx	r4
 8013bee:	b00d      	add	sp, #52	; 0x34
 8013bf0:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
 8013bf4:	2500      	movs	r5, #0
 8013bf6:	462e      	mov	r6, r5
 8013bf8:	e799      	b.n	8013b2e <_ZN8touchgfx3LCD22drawTextureMapScanLineERKNS_14DrawingSurfaceERKNS_9GradientsEPKNS_4EdgeES9_RKNS_14TextureSurfaceERKNS_4RectESF_tht+0xd2>
	...

08013bfc <_ZN8touchgfx3LCD22drawTextureMapTriangleERKNS_14DrawingSurfaceEPKNS_7Point3DERKNS_14TextureSurfaceERKNS_4RectESC_tht>:
 8013bfc:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 8013c00:	b0db      	sub	sp, #364	; 0x16c
 8013c02:	461d      	mov	r5, r3
 8013c04:	f8bd 3198 	ldrh.w	r3, [sp, #408]	; 0x198
 8013c08:	930a      	str	r3, [sp, #40]	; 0x28
 8013c0a:	f89d 319c 	ldrb.w	r3, [sp, #412]	; 0x19c
 8013c0e:	930b      	str	r3, [sp, #44]	; 0x2c
 8013c10:	f8bd 31a0 	ldrh.w	r3, [sp, #416]	; 0x1a0
 8013c14:	9310      	str	r3, [sp, #64]	; 0x40
 8013c16:	6803      	ldr	r3, [r0, #0]
 8013c18:	910f      	str	r1, [sp, #60]	; 0x3c
 8013c1a:	6c5f      	ldr	r7, [r3, #68]	; 0x44
 8013c1c:	9009      	str	r0, [sp, #36]	; 0x24
 8013c1e:	4614      	mov	r4, r2
 8013c20:	4629      	mov	r1, r5
 8013c22:	e9dd 230a 	ldrd	r2, r3, [sp, #40]	; 0x28
 8013c26:	f8dd b194 	ldr.w	fp, [sp, #404]	; 0x194
 8013c2a:	47b8      	blx	r7
 8013c2c:	9b09      	ldr	r3, [sp, #36]	; 0x24
 8013c2e:	6058      	str	r0, [r3, #4]
 8013c30:	2800      	cmp	r0, #0
 8013c32:	f000 83a1 	beq.w	8014378 <_ZN8touchgfx3LCD22drawTextureMapTriangleERKNS_14DrawingSurfaceEPKNS_7Point3DERKNS_14TextureSurfaceERKNS_4RectESC_tht+0x77c>
 8013c36:	682b      	ldr	r3, [r5, #0]
 8013c38:	9314      	str	r3, [sp, #80]	; 0x50
 8013c3a:	686b      	ldr	r3, [r5, #4]
 8013c3c:	9315      	str	r3, [sp, #84]	; 0x54
 8013c3e:	4bc4      	ldr	r3, [pc, #784]	; (8013f50 <_ZN8touchgfx3LCD22drawTextureMapTriangleERKNS_14DrawingSurfaceEPKNS_7Point3DERKNS_14TextureSurfaceERKNS_4RectESC_tht+0x354>)
 8013c40:	ed94 7a02 	vldr	s14, [r4, #8]
 8013c44:	7819      	ldrb	r1, [r3, #0]
 8013c46:	e9d5 2302 	ldrd	r2, r3, [r5, #8]
 8013c4a:	eef2 7a04 	vmov.f32	s15, #36	; 0x41200000  10.0
 8013c4e:	2900      	cmp	r1, #0
 8013c50:	eeb4 7ae7 	vcmpe.f32	s14, s15
 8013c54:	bf16      	itet	ne
 8013c56:	4619      	movne	r1, r3
 8013c58:	4611      	moveq	r1, r2
 8013c5a:	4613      	movne	r3, r2
 8013c5c:	eef1 fa10 	vmrs	APSR_nzcv, fpscr
 8013c60:	9116      	str	r1, [sp, #88]	; 0x58
 8013c62:	e9cd 3217 	strd	r3, r2, [sp, #92]	; 0x5c
 8013c66:	f240 8387 	bls.w	8014378 <_ZN8touchgfx3LCD22drawTextureMapTriangleERKNS_14DrawingSurfaceEPKNS_7Point3DERKNS_14TextureSurfaceERKNS_4RectESC_tht+0x77c>
 8013c6a:	ed94 7a07 	vldr	s14, [r4, #28]
 8013c6e:	eeb4 7ae7 	vcmpe.f32	s14, s15
 8013c72:	eef1 fa10 	vmrs	APSR_nzcv, fpscr
 8013c76:	f240 837f 	bls.w	8014378 <_ZN8touchgfx3LCD22drawTextureMapTriangleERKNS_14DrawingSurfaceEPKNS_7Point3DERKNS_14TextureSurfaceERKNS_4RectESC_tht+0x77c>
 8013c7a:	ed94 7a0c 	vldr	s14, [r4, #48]	; 0x30
 8013c7e:	eeb4 7ae7 	vcmpe.f32	s14, s15
 8013c82:	eef1 fa10 	vmrs	APSR_nzcv, fpscr
 8013c86:	f240 8377 	bls.w	8014378 <_ZN8touchgfx3LCD22drawTextureMapTriangleERKNS_14DrawingSurfaceEPKNS_7Point3DERKNS_14TextureSurfaceERKNS_4RectESC_tht+0x77c>
 8013c8a:	6822      	ldr	r2, [r4, #0]
 8013c8c:	4bb1      	ldr	r3, [pc, #708]	; (8013f54 <_ZN8touchgfx3LCD22drawTextureMapTriangleERKNS_14DrawingSurfaceEPKNS_7Point3DERKNS_14TextureSurfaceERKNS_4RectESC_tht+0x358>)
 8013c8e:	429a      	cmp	r2, r3
 8013c90:	f2c0 8372 	blt.w	8014378 <_ZN8touchgfx3LCD22drawTextureMapTriangleERKNS_14DrawingSurfaceEPKNS_7Point3DERKNS_14TextureSurfaceERKNS_4RectESC_tht+0x77c>
 8013c94:	49b0      	ldr	r1, [pc, #704]	; (8013f58 <_ZN8touchgfx3LCD22drawTextureMapTriangleERKNS_14DrawingSurfaceEPKNS_7Point3DERKNS_14TextureSurfaceERKNS_4RectESC_tht+0x35c>)
 8013c96:	6963      	ldr	r3, [r4, #20]
 8013c98:	428a      	cmp	r2, r1
 8013c9a:	f300 836d 	bgt.w	8014378 <_ZN8touchgfx3LCD22drawTextureMapTriangleERKNS_14DrawingSurfaceEPKNS_7Point3DERKNS_14TextureSurfaceERKNS_4RectESC_tht+0x77c>
 8013c9e:	f503 331c 	add.w	r3, r3, #159744	; 0x27000
 8013ca2:	48ae      	ldr	r0, [pc, #696]	; (8013f5c <_ZN8touchgfx3LCD22drawTextureMapTriangleERKNS_14DrawingSurfaceEPKNS_7Point3DERKNS_14TextureSurfaceERKNS_4RectESC_tht+0x360>)
 8013ca4:	33ff      	adds	r3, #255	; 0xff
 8013ca6:	4283      	cmp	r3, r0
 8013ca8:	f200 8366 	bhi.w	8014378 <_ZN8touchgfx3LCD22drawTextureMapTriangleERKNS_14DrawingSurfaceEPKNS_7Point3DERKNS_14TextureSurfaceERKNS_4RectESC_tht+0x77c>
 8013cac:	6aa3      	ldr	r3, [r4, #40]	; 0x28
 8013cae:	4dac      	ldr	r5, [pc, #688]	; (8013f60 <_ZN8touchgfx3LCD22drawTextureMapTriangleERKNS_14DrawingSurfaceEPKNS_7Point3DERKNS_14TextureSurfaceERKNS_4RectESC_tht+0x364>)
 8013cb0:	f503 331c 	add.w	r3, r3, #159744	; 0x27000
 8013cb4:	33ff      	adds	r3, #255	; 0xff
 8013cb6:	42ab      	cmp	r3, r5
 8013cb8:	f200 835e 	bhi.w	8014378 <_ZN8touchgfx3LCD22drawTextureMapTriangleERKNS_14DrawingSurfaceEPKNS_7Point3DERKNS_14TextureSurfaceERKNS_4RectESC_tht+0x77c>
 8013cbc:	6862      	ldr	r2, [r4, #4]
 8013cbe:	f502 331c 	add.w	r3, r2, #159744	; 0x27000
 8013cc2:	33ff      	adds	r3, #255	; 0xff
 8013cc4:	4283      	cmp	r3, r0
 8013cc6:	f200 8357 	bhi.w	8014378 <_ZN8touchgfx3LCD22drawTextureMapTriangleERKNS_14DrawingSurfaceEPKNS_7Point3DERKNS_14TextureSurfaceERKNS_4RectESC_tht+0x77c>
 8013cca:	69a1      	ldr	r1, [r4, #24]
 8013ccc:	f501 331c 	add.w	r3, r1, #159744	; 0x27000
 8013cd0:	33ff      	adds	r3, #255	; 0xff
 8013cd2:	4283      	cmp	r3, r0
 8013cd4:	f200 8350 	bhi.w	8014378 <_ZN8touchgfx3LCD22drawTextureMapTriangleERKNS_14DrawingSurfaceEPKNS_7Point3DERKNS_14TextureSurfaceERKNS_4RectESC_tht+0x77c>
 8013cd8:	6ae3      	ldr	r3, [r4, #44]	; 0x2c
 8013cda:	f503 301c 	add.w	r0, r3, #159744	; 0x27000
 8013cde:	30ff      	adds	r0, #255	; 0xff
 8013ce0:	42a8      	cmp	r0, r5
 8013ce2:	f200 8349 	bhi.w	8014378 <_ZN8touchgfx3LCD22drawTextureMapTriangleERKNS_14DrawingSurfaceEPKNS_7Point3DERKNS_14TextureSurfaceERKNS_4RectESC_tht+0x77c>
 8013ce6:	428a      	cmp	r2, r1
 8013ce8:	f280 8110 	bge.w	8013f0c <_ZN8touchgfx3LCD22drawTextureMapTriangleERKNS_14DrawingSurfaceEPKNS_7Point3DERKNS_14TextureSurfaceERKNS_4RectESC_tht+0x310>
 8013cec:	429a      	cmp	r2, r3
 8013cee:	f300 8119 	bgt.w	8013f24 <_ZN8touchgfx3LCD22drawTextureMapTriangleERKNS_14DrawingSurfaceEPKNS_7Point3DERKNS_14TextureSurfaceERKNS_4RectESC_tht+0x328>
 8013cf2:	4299      	cmp	r1, r3
 8013cf4:	f280 811d 	bge.w	8013f32 <_ZN8touchgfx3LCD22drawTextureMapTriangleERKNS_14DrawingSurfaceEPKNS_7Point3DERKNS_14TextureSurfaceERKNS_4RectESC_tht+0x336>
 8013cf8:	2502      	movs	r5, #2
 8013cfa:	2701      	movs	r7, #1
 8013cfc:	46a9      	mov	r9, r5
 8013cfe:	46b8      	mov	r8, r7
 8013d00:	f04f 0a00 	mov.w	sl, #0
 8013d04:	4621      	mov	r1, r4
 8013d06:	a849      	add	r0, sp, #292	; 0x124
 8013d08:	f003 feec 	bl	8017ae4 <_ZN8touchgfx9GradientsC1EPKNS_7Point3DE>
 8013d0c:	4622      	mov	r2, r4
 8013d0e:	4653      	mov	r3, sl
 8013d10:	a949      	add	r1, sp, #292	; 0x124
 8013d12:	f8cd 9000 	str.w	r9, [sp]
 8013d16:	a819      	add	r0, sp, #100	; 0x64
 8013d18:	f004 f814 	bl	8017d44 <_ZN8touchgfx4EdgeC1ERKNS_9GradientsEPKNS_7Point3DEii>
 8013d1c:	4622      	mov	r2, r4
 8013d1e:	4653      	mov	r3, sl
 8013d20:	a949      	add	r1, sp, #292	; 0x124
 8013d22:	f8cd 8000 	str.w	r8, [sp]
 8013d26:	a829      	add	r0, sp, #164	; 0xa4
 8013d28:	f004 f80c 	bl	8017d44 <_ZN8touchgfx4EdgeC1ERKNS_9GradientsEPKNS_7Point3DEii>
 8013d2c:	4643      	mov	r3, r8
 8013d2e:	4622      	mov	r2, r4
 8013d30:	a949      	add	r1, sp, #292	; 0x124
 8013d32:	f8cd 9000 	str.w	r9, [sp]
 8013d36:	a839      	add	r0, sp, #228	; 0xe4
 8013d38:	f004 f804 	bl	8017d44 <_ZN8touchgfx4EdgeC1ERKNS_9GradientsEPKNS_7Point3DEii>
 8013d3c:	42af      	cmp	r7, r5
 8013d3e:	bfb5      	itete	lt
 8013d40:	2300      	movlt	r3, #0
 8013d42:	2301      	movge	r3, #1
 8013d44:	930e      	strlt	r3, [sp, #56]	; 0x38
 8013d46:	930e      	strge	r3, [sp, #56]	; 0x38
 8013d48:	9b0f      	ldr	r3, [sp, #60]	; 0x3c
 8013d4a:	e893 0003 	ldmia.w	r3, {r0, r1}
 8013d4e:	af12      	add	r7, sp, #72	; 0x48
 8013d50:	bfb9      	ittee	lt
 8013d52:	ad29      	addlt	r5, sp, #164	; 0xa4
 8013d54:	ac19      	addlt	r4, sp, #100	; 0x64
 8013d56:	ad19      	addge	r5, sp, #100	; 0x64
 8013d58:	ac29      	addge	r4, sp, #164	; 0xa4
 8013d5a:	e887 0003 	stmia.w	r7, {r0, r1}
 8013d5e:	b928      	cbnz	r0, 8013d6c <_ZN8touchgfx3LCD22drawTextureMapTriangleERKNS_14DrawingSurfaceEPKNS_7Point3DERKNS_14TextureSurfaceERKNS_4RectESC_tht+0x170>
 8013d60:	4b80      	ldr	r3, [pc, #512]	; (8013f64 <_ZN8touchgfx3LCD22drawTextureMapTriangleERKNS_14DrawingSurfaceEPKNS_7Point3DERKNS_14TextureSurfaceERKNS_4RectESC_tht+0x368>)
 8013d62:	6818      	ldr	r0, [r3, #0]
 8013d64:	6803      	ldr	r3, [r0, #0]
 8013d66:	6a9b      	ldr	r3, [r3, #40]	; 0x28
 8013d68:	4798      	blx	r3
 8013d6a:	6038      	str	r0, [r7, #0]
 8013d6c:	9b64      	ldr	r3, [sp, #400]	; 0x190
 8013d6e:	f8bb 0006 	ldrh.w	r0, [fp, #6]
 8013d72:	f9b3 3002 	ldrsh.w	r3, [r3, #2]
 8013d76:	930c      	str	r3, [sp, #48]	; 0x30
 8013d78:	990c      	ldr	r1, [sp, #48]	; 0x30
 8013d7a:	6963      	ldr	r3, [r4, #20]
 8013d7c:	9a2f      	ldr	r2, [sp, #188]	; 0xbc
 8013d7e:	440b      	add	r3, r1
 8013d80:	f9bb 1002 	ldrsh.w	r1, [fp, #2]
 8013d84:	4408      	add	r0, r1
 8013d86:	b200      	sxth	r0, r0
 8013d88:	4283      	cmp	r3, r0
 8013d8a:	900d      	str	r0, [sp, #52]	; 0x34
 8013d8c:	f280 80dd 	bge.w	8013f4a <_ZN8touchgfx3LCD22drawTextureMapTriangleERKNS_14DrawingSurfaceEPKNS_7Point3DERKNS_14TextureSurfaceERKNS_4RectESC_tht+0x34e>
 8013d90:	428b      	cmp	r3, r1
 8013d92:	da08      	bge.n	8013da6 <_ZN8touchgfx3LCD22drawTextureMapTriangleERKNS_14DrawingSurfaceEPKNS_7Point3DERKNS_14TextureSurfaceERKNS_4RectESC_tht+0x1aa>
 8013d94:	2a00      	cmp	r2, #0
 8013d96:	dd06      	ble.n	8013da6 <_ZN8touchgfx3LCD22drawTextureMapTriangleERKNS_14DrawingSurfaceEPKNS_7Point3DERKNS_14TextureSurfaceERKNS_4RectESC_tht+0x1aa>
 8013d98:	1acb      	subs	r3, r1, r3
 8013d9a:	429a      	cmp	r2, r3
 8013d9c:	f2c0 80e4 	blt.w	8013f68 <_ZN8touchgfx3LCD22drawTextureMapTriangleERKNS_14DrawingSurfaceEPKNS_7Point3DERKNS_14TextureSurfaceERKNS_4RectESC_tht+0x36c>
 8013da0:	2b00      	cmp	r3, #0
 8013da2:	f300 80e2 	bgt.w	8013f6a <_ZN8touchgfx3LCD22drawTextureMapTriangleERKNS_14DrawingSurfaceEPKNS_7Point3DERKNS_14TextureSurfaceERKNS_4RectESC_tht+0x36e>
 8013da6:	6967      	ldr	r7, [r4, #20]
 8013da8:	9b0c      	ldr	r3, [sp, #48]	; 0x30
 8013daa:	443b      	add	r3, r7
 8013dac:	461f      	mov	r7, r3
 8013dae:	9b0d      	ldr	r3, [sp, #52]	; 0x34
 8013db0:	1bdf      	subs	r7, r3, r7
 8013db2:	4297      	cmp	r7, r2
 8013db4:	bfa8      	it	ge
 8013db6:	4617      	movge	r7, r2
 8013db8:	f10d 0850 	add.w	r8, sp, #80	; 0x50
 8013dbc:	2f00      	cmp	r7, #0
 8013dbe:	f340 8166 	ble.w	801408e <_ZN8touchgfx3LCD22drawTextureMapTriangleERKNS_14DrawingSurfaceEPKNS_7Point3DERKNS_14TextureSurfaceERKNS_4RectESC_tht+0x492>
 8013dc2:	9b64      	ldr	r3, [sp, #400]	; 0x190
 8013dc4:	6829      	ldr	r1, [r5, #0]
 8013dc6:	f9b3 2000 	ldrsh.w	r2, [r3]
 8013dca:	f9bb 3000 	ldrsh.w	r3, [fp]
 8013dce:	6820      	ldr	r0, [r4, #0]
 8013dd0:	4411      	add	r1, r2
 8013dd2:	4299      	cmp	r1, r3
 8013dd4:	dd1a      	ble.n	8013e0c <_ZN8touchgfx3LCD22drawTextureMapTriangleERKNS_14DrawingSurfaceEPKNS_7Point3DERKNS_14TextureSurfaceERKNS_4RectESC_tht+0x210>
 8013dd6:	f8bb 1004 	ldrh.w	r1, [fp, #4]
 8013dda:	440b      	add	r3, r1
 8013ddc:	4402      	add	r2, r0
 8013dde:	b21b      	sxth	r3, r3
 8013de0:	429a      	cmp	r2, r3
 8013de2:	dc13      	bgt.n	8013e0c <_ZN8touchgfx3LCD22drawTextureMapTriangleERKNS_14DrawingSurfaceEPKNS_7Point3DERKNS_14TextureSurfaceERKNS_4RectESC_tht+0x210>
 8013de4:	9b09      	ldr	r3, [sp, #36]	; 0x24
 8013de6:	9a10      	ldr	r2, [sp, #64]	; 0x40
 8013de8:	681b      	ldr	r3, [r3, #0]
 8013dea:	9206      	str	r2, [sp, #24]
 8013dec:	9a0b      	ldr	r2, [sp, #44]	; 0x2c
 8013dee:	9205      	str	r2, [sp, #20]
 8013df0:	9a0a      	ldr	r2, [sp, #40]	; 0x28
 8013df2:	9500      	str	r5, [sp, #0]
 8013df4:	e9cd b203 	strd	fp, r2, [sp, #12]
 8013df8:	9a64      	ldr	r2, [sp, #400]	; 0x190
 8013dfa:	9809      	ldr	r0, [sp, #36]	; 0x24
 8013dfc:	e9cd 8201 	strd	r8, r2, [sp, #4]
 8013e00:	a912      	add	r1, sp, #72	; 0x48
 8013e02:	f8d3 9048 	ldr.w	r9, [r3, #72]	; 0x48
 8013e06:	aa49      	add	r2, sp, #292	; 0x124
 8013e08:	4623      	mov	r3, r4
 8013e0a:	47c8      	blx	r9
 8013e0c:	e9d4 2300 	ldrd	r2, r3, [r4]
 8013e10:	441a      	add	r2, r3
 8013e12:	6963      	ldr	r3, [r4, #20]
 8013e14:	ed94 7a0a 	vldr	s14, [r4, #40]	; 0x28
 8013e18:	edd4 7a0b 	vldr	s15, [r4, #44]	; 0x2c
 8013e1c:	edd4 6a0e 	vldr	s13, [r4, #56]	; 0x38
 8013e20:	68a1      	ldr	r1, [r4, #8]
 8013e22:	ed94 6a08 	vldr	s12, [r4, #32]
 8013e26:	6022      	str	r2, [r4, #0]
 8013e28:	3301      	adds	r3, #1
 8013e2a:	6163      	str	r3, [r4, #20]
 8013e2c:	69a3      	ldr	r3, [r4, #24]
 8013e2e:	ee37 7a27 	vadd.f32	s14, s14, s15
 8013e32:	3b01      	subs	r3, #1
 8013e34:	edd4 7a0d 	vldr	s15, [r4, #52]	; 0x34
 8013e38:	61a3      	str	r3, [r4, #24]
 8013e3a:	6923      	ldr	r3, [r4, #16]
 8013e3c:	ed84 7a0a 	vstr	s14, [r4, #40]	; 0x28
 8013e40:	ee77 7aa6 	vadd.f32	s15, s15, s13
 8013e44:	edd4 6a07 	vldr	s13, [r4, #28]
 8013e48:	edc4 7a0d 	vstr	s15, [r4, #52]	; 0x34
 8013e4c:	440b      	add	r3, r1
 8013e4e:	68e1      	ldr	r1, [r4, #12]
 8013e50:	6123      	str	r3, [r4, #16]
 8013e52:	ee76 6a86 	vadd.f32	s13, s13, s12
 8013e56:	428b      	cmp	r3, r1
 8013e58:	edc4 6a07 	vstr	s13, [r4, #28]
 8013e5c:	db15      	blt.n	8013e8a <_ZN8touchgfx3LCD22drawTextureMapTriangleERKNS_14DrawingSurfaceEPKNS_7Point3DERKNS_14TextureSurfaceERKNS_4RectESC_tht+0x28e>
 8013e5e:	ed94 6a09 	vldr	s12, [r4, #36]	; 0x24
 8013e62:	ee76 6a26 	vadd.f32	s13, s12, s13
 8013e66:	3201      	adds	r2, #1
 8013e68:	edc4 6a07 	vstr	s13, [r4, #28]
 8013e6c:	edd4 6a0c 	vldr	s13, [r4, #48]	; 0x30
 8013e70:	6022      	str	r2, [r4, #0]
 8013e72:	ee36 7a87 	vadd.f32	s14, s13, s14
 8013e76:	1a5b      	subs	r3, r3, r1
 8013e78:	ed84 7a0a 	vstr	s14, [r4, #40]	; 0x28
 8013e7c:	ed94 7a0f 	vldr	s14, [r4, #60]	; 0x3c
 8013e80:	6123      	str	r3, [r4, #16]
 8013e82:	ee77 7a27 	vadd.f32	s15, s14, s15
 8013e86:	edc4 7a0d 	vstr	s15, [r4, #52]	; 0x34
 8013e8a:	e9d5 2300 	ldrd	r2, r3, [r5]
 8013e8e:	441a      	add	r2, r3
 8013e90:	696b      	ldr	r3, [r5, #20]
 8013e92:	ed95 7a0a 	vldr	s14, [r5, #40]	; 0x28
 8013e96:	edd5 7a0b 	vldr	s15, [r5, #44]	; 0x2c
 8013e9a:	edd5 6a0e 	vldr	s13, [r5, #56]	; 0x38
 8013e9e:	68a9      	ldr	r1, [r5, #8]
 8013ea0:	ed95 6a08 	vldr	s12, [r5, #32]
 8013ea4:	602a      	str	r2, [r5, #0]
 8013ea6:	3301      	adds	r3, #1
 8013ea8:	616b      	str	r3, [r5, #20]
 8013eaa:	69ab      	ldr	r3, [r5, #24]
 8013eac:	ee37 7a27 	vadd.f32	s14, s14, s15
 8013eb0:	3b01      	subs	r3, #1
 8013eb2:	edd5 7a0d 	vldr	s15, [r5, #52]	; 0x34
 8013eb6:	61ab      	str	r3, [r5, #24]
 8013eb8:	692b      	ldr	r3, [r5, #16]
 8013eba:	ed85 7a0a 	vstr	s14, [r5, #40]	; 0x28
 8013ebe:	ee77 7aa6 	vadd.f32	s15, s15, s13
 8013ec2:	edd5 6a07 	vldr	s13, [r5, #28]
 8013ec6:	edc5 7a0d 	vstr	s15, [r5, #52]	; 0x34
 8013eca:	440b      	add	r3, r1
 8013ecc:	68e9      	ldr	r1, [r5, #12]
 8013ece:	612b      	str	r3, [r5, #16]
 8013ed0:	ee76 6a86 	vadd.f32	s13, s13, s12
 8013ed4:	428b      	cmp	r3, r1
 8013ed6:	edc5 6a07 	vstr	s13, [r5, #28]
 8013eda:	db15      	blt.n	8013f08 <_ZN8touchgfx3LCD22drawTextureMapTriangleERKNS_14DrawingSurfaceEPKNS_7Point3DERKNS_14TextureSurfaceERKNS_4RectESC_tht+0x30c>
 8013edc:	ed95 6a09 	vldr	s12, [r5, #36]	; 0x24
 8013ee0:	ee76 6a26 	vadd.f32	s13, s12, s13
 8013ee4:	3201      	adds	r2, #1
 8013ee6:	edc5 6a07 	vstr	s13, [r5, #28]
 8013eea:	edd5 6a0c 	vldr	s13, [r5, #48]	; 0x30
 8013eee:	602a      	str	r2, [r5, #0]
 8013ef0:	ee36 7a87 	vadd.f32	s14, s13, s14
 8013ef4:	1a5b      	subs	r3, r3, r1
 8013ef6:	ed85 7a0a 	vstr	s14, [r5, #40]	; 0x28
 8013efa:	ed95 7a0f 	vldr	s14, [r5, #60]	; 0x3c
 8013efe:	612b      	str	r3, [r5, #16]
 8013f00:	ee77 7a27 	vadd.f32	s15, s14, s15
 8013f04:	edc5 7a0d 	vstr	s15, [r5, #52]	; 0x34
 8013f08:	3f01      	subs	r7, #1
 8013f0a:	e757      	b.n	8013dbc <_ZN8touchgfx3LCD22drawTextureMapTriangleERKNS_14DrawingSurfaceEPKNS_7Point3DERKNS_14TextureSurfaceERKNS_4RectESC_tht+0x1c0>
 8013f0c:	4299      	cmp	r1, r3
 8013f0e:	dc13      	bgt.n	8013f38 <_ZN8touchgfx3LCD22drawTextureMapTriangleERKNS_14DrawingSurfaceEPKNS_7Point3DERKNS_14TextureSurfaceERKNS_4RectESC_tht+0x33c>
 8013f10:	429a      	cmp	r2, r3
 8013f12:	da14      	bge.n	8013f3e <_ZN8touchgfx3LCD22drawTextureMapTriangleERKNS_14DrawingSurfaceEPKNS_7Point3DERKNS_14TextureSurfaceERKNS_4RectESC_tht+0x342>
 8013f14:	2502      	movs	r5, #2
 8013f16:	2703      	movs	r7, #3
 8013f18:	46a9      	mov	r9, r5
 8013f1a:	f04f 0800 	mov.w	r8, #0
 8013f1e:	f04f 0a01 	mov.w	sl, #1
 8013f22:	e6ef      	b.n	8013d04 <_ZN8touchgfx3LCD22drawTextureMapTriangleERKNS_14DrawingSurfaceEPKNS_7Point3DERKNS_14TextureSurfaceERKNS_4RectESC_tht+0x108>
 8013f24:	2501      	movs	r5, #1
 8013f26:	2700      	movs	r7, #0
 8013f28:	46a9      	mov	r9, r5
 8013f2a:	46b8      	mov	r8, r7
 8013f2c:	f04f 0a02 	mov.w	sl, #2
 8013f30:	e6e8      	b.n	8013d04 <_ZN8touchgfx3LCD22drawTextureMapTriangleERKNS_14DrawingSurfaceEPKNS_7Point3DERKNS_14TextureSurfaceERKNS_4RectESC_tht+0x108>
 8013f32:	2501      	movs	r5, #1
 8013f34:	2702      	movs	r7, #2
 8013f36:	e6e1      	b.n	8013cfc <_ZN8touchgfx3LCD22drawTextureMapTriangleERKNS_14DrawingSurfaceEPKNS_7Point3DERKNS_14TextureSurfaceERKNS_4RectESC_tht+0x100>
 8013f38:	2500      	movs	r5, #0
 8013f3a:	2701      	movs	r7, #1
 8013f3c:	e7f4      	b.n	8013f28 <_ZN8touchgfx3LCD22drawTextureMapTriangleERKNS_14DrawingSurfaceEPKNS_7Point3DERKNS_14TextureSurfaceERKNS_4RectESC_tht+0x32c>
 8013f3e:	2702      	movs	r7, #2
 8013f40:	2503      	movs	r5, #3
 8013f42:	f04f 0900 	mov.w	r9, #0
 8013f46:	46b8      	mov	r8, r7
 8013f48:	e7e9      	b.n	8013f1e <_ZN8touchgfx3LCD22drawTextureMapTriangleERKNS_14DrawingSurfaceEPKNS_7Point3DERKNS_14TextureSurfaceERKNS_4RectESC_tht+0x322>
 8013f4a:	4613      	mov	r3, r2
 8013f4c:	e728      	b.n	8013da0 <_ZN8touchgfx3LCD22drawTextureMapTriangleERKNS_14DrawingSurfaceEPKNS_7Point3DERKNS_14TextureSurfaceERKNS_4RectESC_tht+0x1a4>
 8013f4e:	bf00      	nop
 8013f50:	20012f1c 	.word	0x20012f1c
 8013f54:	fffd8f01 	.word	0xfffd8f01
 8013f58:	00027100 	.word	0x00027100
 8013f5c:	0004e1ff 	.word	0x0004e1ff
 8013f60:	0004e1fe 	.word	0x0004e1fe
 8013f64:	20012f24 	.word	0x20012f24
 8013f68:	4613      	mov	r3, r2
 8013f6a:	992b      	ldr	r1, [sp, #172]	; 0xac
 8013f6c:	9111      	str	r1, [sp, #68]	; 0x44
 8013f6e:	e9dd 0a29 	ldrd	r0, sl, [sp, #164]	; 0xa4
 8013f72:	e9dd 812c 	ldrd	r8, r1, [sp, #176]	; 0xb0
 8013f76:	9f2e      	ldr	r7, [sp, #184]	; 0xb8
 8013f78:	eddd 4a34 	vldr	s9, [sp, #208]	; 0xd0
 8013f7c:	ed9d 7a33 	vldr	s14, [sp, #204]	; 0xcc
 8013f80:	ed9d 4a37 	vldr	s8, [sp, #220]	; 0xdc
 8013f84:	eddd 7a36 	vldr	s15, [sp, #216]	; 0xd8
 8013f88:	eddd 3a31 	vldr	s7, [sp, #196]	; 0xc4
 8013f8c:	eddd 6a30 	vldr	s13, [sp, #192]	; 0xc0
 8013f90:	ed9d 5a32 	vldr	s10, [sp, #200]	; 0xc8
 8013f94:	eddd 5a35 	vldr	s11, [sp, #212]	; 0xd4
 8013f98:	ed9d 6a38 	vldr	s12, [sp, #224]	; 0xe0
 8013f9c:	469e      	mov	lr, r3
 8013f9e:	469c      	mov	ip, r3
 8013fa0:	f04f 0900 	mov.w	r9, #0
 8013fa4:	f1bc 0f00 	cmp.w	ip, #0
 8013fa8:	d147      	bne.n	801403a <_ZN8touchgfx3LCD22drawTextureMapTriangleERKNS_14DrawingSurfaceEPKNS_7Point3DERKNS_14TextureSurfaceERKNS_4RectESC_tht+0x43e>
 8013faa:	eb03 0c07 	add.w	ip, r3, r7
 8013fae:	1ad7      	subs	r7, r2, r3
 8013fb0:	f1b9 0f00 	cmp.w	r9, #0
 8013fb4:	d009      	beq.n	8013fca <_ZN8touchgfx3LCD22drawTextureMapTriangleERKNS_14DrawingSurfaceEPKNS_7Point3DERKNS_14TextureSurfaceERKNS_4RectESC_tht+0x3ce>
 8013fb6:	e9cd c72e 	strd	ip, r7, [sp, #184]	; 0xb8
 8013fba:	9029      	str	r0, [sp, #164]	; 0xa4
 8013fbc:	ed8d 7a33 	vstr	s14, [sp, #204]	; 0xcc
 8013fc0:	edcd 7a36 	vstr	s15, [sp, #216]	; 0xd8
 8013fc4:	edcd 6a30 	vstr	s13, [sp, #192]	; 0xc0
 8013fc8:	912d      	str	r1, [sp, #180]	; 0xb4
 8013fca:	991b      	ldr	r1, [sp, #108]	; 0x6c
 8013fcc:	9111      	str	r1, [sp, #68]	; 0x44
 8013fce:	e9dd 0a19 	ldrd	r0, sl, [sp, #100]	; 0x64
 8013fd2:	e9dd c71e 	ldrd	ip, r7, [sp, #120]	; 0x78
 8013fd6:	e9dd 911c 	ldrd	r9, r1, [sp, #112]	; 0x70
 8013fda:	eddd 4a24 	vldr	s9, [sp, #144]	; 0x90
 8013fde:	eddd 6a23 	vldr	s13, [sp, #140]	; 0x8c
 8013fe2:	ed9d 4a27 	vldr	s8, [sp, #156]	; 0x9c
 8013fe6:	ed9d 7a26 	vldr	s14, [sp, #152]	; 0x98
 8013fea:	eddd 3a21 	vldr	s7, [sp, #132]	; 0x84
 8013fee:	eddd 7a20 	vldr	s15, [sp, #128]	; 0x80
 8013ff2:	ed9d 5a22 	vldr	s10, [sp, #136]	; 0x88
 8013ff6:	eddd 5a25 	vldr	s11, [sp, #148]	; 0x94
 8013ffa:	ed9d 6a28 	vldr	s12, [sp, #160]	; 0xa0
 8013ffe:	f04f 0800 	mov.w	r8, #0
 8014002:	f1be 0f00 	cmp.w	lr, #0
 8014006:	d031      	beq.n	801406c <_ZN8touchgfx3LCD22drawTextureMapTriangleERKNS_14DrawingSurfaceEPKNS_7Point3DERKNS_14TextureSurfaceERKNS_4RectESC_tht+0x470>
 8014008:	9e11      	ldr	r6, [sp, #68]	; 0x44
 801400a:	4431      	add	r1, r6
 801400c:	4549      	cmp	r1, r9
 801400e:	4450      	add	r0, sl
 8014010:	ee76 6aa4 	vadd.f32	s13, s13, s9
 8014014:	ee37 7a04 	vadd.f32	s14, s14, s8
 8014018:	ee77 7aa3 	vadd.f32	s15, s15, s7
 801401c:	db08      	blt.n	8014030 <_ZN8touchgfx3LCD22drawTextureMapTriangleERKNS_14DrawingSurfaceEPKNS_7Point3DERKNS_14TextureSurfaceERKNS_4RectESC_tht+0x434>
 801401e:	ee77 7a85 	vadd.f32	s15, s15, s10
 8014022:	ee76 6aa5 	vadd.f32	s13, s13, s11
 8014026:	ee37 7a06 	vadd.f32	s14, s14, s12
 801402a:	3001      	adds	r0, #1
 801402c:	eba1 0109 	sub.w	r1, r1, r9
 8014030:	f10e 3eff 	add.w	lr, lr, #4294967295
 8014034:	f04f 0801 	mov.w	r8, #1
 8014038:	e7e3      	b.n	8014002 <_ZN8touchgfx3LCD22drawTextureMapTriangleERKNS_14DrawingSurfaceEPKNS_7Point3DERKNS_14TextureSurfaceERKNS_4RectESC_tht+0x406>
 801403a:	9e11      	ldr	r6, [sp, #68]	; 0x44
 801403c:	4431      	add	r1, r6
 801403e:	4541      	cmp	r1, r8
 8014040:	4450      	add	r0, sl
 8014042:	ee37 7a24 	vadd.f32	s14, s14, s9
 8014046:	ee77 7a84 	vadd.f32	s15, s15, s8
 801404a:	ee76 6aa3 	vadd.f32	s13, s13, s7
 801404e:	db08      	blt.n	8014062 <_ZN8touchgfx3LCD22drawTextureMapTriangleERKNS_14DrawingSurfaceEPKNS_7Point3DERKNS_14TextureSurfaceERKNS_4RectESC_tht+0x466>
 8014050:	ee76 6a85 	vadd.f32	s13, s13, s10
 8014054:	ee37 7a25 	vadd.f32	s14, s14, s11
 8014058:	ee77 7a86 	vadd.f32	s15, s15, s12
 801405c:	3001      	adds	r0, #1
 801405e:	eba1 0108 	sub.w	r1, r1, r8
 8014062:	f10c 3cff 	add.w	ip, ip, #4294967295
 8014066:	f04f 0901 	mov.w	r9, #1
 801406a:	e79b      	b.n	8013fa4 <_ZN8touchgfx3LCD22drawTextureMapTriangleERKNS_14DrawingSurfaceEPKNS_7Point3DERKNS_14TextureSurfaceERKNS_4RectESC_tht+0x3a8>
 801406c:	449c      	add	ip, r3
 801406e:	1aff      	subs	r7, r7, r3
 8014070:	f1b8 0f00 	cmp.w	r8, #0
 8014074:	d009      	beq.n	801408a <_ZN8touchgfx3LCD22drawTextureMapTriangleERKNS_14DrawingSurfaceEPKNS_7Point3DERKNS_14TextureSurfaceERKNS_4RectESC_tht+0x48e>
 8014076:	e9cd c71e 	strd	ip, r7, [sp, #120]	; 0x78
 801407a:	9019      	str	r0, [sp, #100]	; 0x64
 801407c:	edcd 6a23 	vstr	s13, [sp, #140]	; 0x8c
 8014080:	ed8d 7a26 	vstr	s14, [sp, #152]	; 0x98
 8014084:	edcd 7a20 	vstr	s15, [sp, #128]	; 0x80
 8014088:	911d      	str	r1, [sp, #116]	; 0x74
 801408a:	1ad2      	subs	r2, r2, r3
 801408c:	e68b      	b.n	8013da6 <_ZN8touchgfx3LCD22drawTextureMapTriangleERKNS_14DrawingSurfaceEPKNS_7Point3DERKNS_14TextureSurfaceERKNS_4RectESC_tht+0x1aa>
 801408e:	9b0e      	ldr	r3, [sp, #56]	; 0x38
 8014090:	9a3f      	ldr	r2, [sp, #252]	; 0xfc
 8014092:	2b00      	cmp	r3, #0
 8014094:	f000 80d1 	beq.w	801423a <_ZN8touchgfx3LCD22drawTextureMapTriangleERKNS_14DrawingSurfaceEPKNS_7Point3DERKNS_14TextureSurfaceERKNS_4RectESC_tht+0x63e>
 8014098:	ad19      	add	r5, sp, #100	; 0x64
 801409a:	ac39      	add	r4, sp, #228	; 0xe4
 801409c:	9b64      	ldr	r3, [sp, #400]	; 0x190
 801409e:	f8bb 0006 	ldrh.w	r0, [fp, #6]
 80140a2:	f9b3 3002 	ldrsh.w	r3, [r3, #2]
 80140a6:	930c      	str	r3, [sp, #48]	; 0x30
 80140a8:	990c      	ldr	r1, [sp, #48]	; 0x30
 80140aa:	6963      	ldr	r3, [r4, #20]
 80140ac:	440b      	add	r3, r1
 80140ae:	f9bb 1002 	ldrsh.w	r1, [fp, #2]
 80140b2:	4408      	add	r0, r1
 80140b4:	b200      	sxth	r0, r0
 80140b6:	4283      	cmp	r3, r0
 80140b8:	900d      	str	r0, [sp, #52]	; 0x34
 80140ba:	f280 80c1 	bge.w	8014240 <_ZN8touchgfx3LCD22drawTextureMapTriangleERKNS_14DrawingSurfaceEPKNS_7Point3DERKNS_14TextureSurfaceERKNS_4RectESC_tht+0x644>
 80140be:	428b      	cmp	r3, r1
 80140c0:	da08      	bge.n	80140d4 <_ZN8touchgfx3LCD22drawTextureMapTriangleERKNS_14DrawingSurfaceEPKNS_7Point3DERKNS_14TextureSurfaceERKNS_4RectESC_tht+0x4d8>
 80140c2:	2a00      	cmp	r2, #0
 80140c4:	dd06      	ble.n	80140d4 <_ZN8touchgfx3LCD22drawTextureMapTriangleERKNS_14DrawingSurfaceEPKNS_7Point3DERKNS_14TextureSurfaceERKNS_4RectESC_tht+0x4d8>
 80140c6:	1acb      	subs	r3, r1, r3
 80140c8:	429a      	cmp	r2, r3
 80140ca:	f2c0 80bb 	blt.w	8014244 <_ZN8touchgfx3LCD22drawTextureMapTriangleERKNS_14DrawingSurfaceEPKNS_7Point3DERKNS_14TextureSurfaceERKNS_4RectESC_tht+0x648>
 80140ce:	2b00      	cmp	r3, #0
 80140d0:	f300 80b9 	bgt.w	8014246 <_ZN8touchgfx3LCD22drawTextureMapTriangleERKNS_14DrawingSurfaceEPKNS_7Point3DERKNS_14TextureSurfaceERKNS_4RectESC_tht+0x64a>
 80140d4:	6967      	ldr	r7, [r4, #20]
 80140d6:	9b0c      	ldr	r3, [sp, #48]	; 0x30
 80140d8:	443b      	add	r3, r7
 80140da:	461f      	mov	r7, r3
 80140dc:	9b0d      	ldr	r3, [sp, #52]	; 0x34
 80140de:	1bdf      	subs	r7, r3, r7
 80140e0:	4297      	cmp	r7, r2
 80140e2:	bfa8      	it	ge
 80140e4:	4617      	movge	r7, r2
 80140e6:	f10d 0850 	add.w	r8, sp, #80	; 0x50
 80140ea:	2f00      	cmp	r7, #0
 80140ec:	f340 813c 	ble.w	8014368 <_ZN8touchgfx3LCD22drawTextureMapTriangleERKNS_14DrawingSurfaceEPKNS_7Point3DERKNS_14TextureSurfaceERKNS_4RectESC_tht+0x76c>
 80140f0:	9b64      	ldr	r3, [sp, #400]	; 0x190
 80140f2:	6829      	ldr	r1, [r5, #0]
 80140f4:	f9b3 2000 	ldrsh.w	r2, [r3]
 80140f8:	f9bb 3000 	ldrsh.w	r3, [fp]
 80140fc:	6820      	ldr	r0, [r4, #0]
 80140fe:	4411      	add	r1, r2
 8014100:	4299      	cmp	r1, r3
 8014102:	dd1a      	ble.n	801413a <_ZN8touchgfx3LCD22drawTextureMapTriangleERKNS_14DrawingSurfaceEPKNS_7Point3DERKNS_14TextureSurfaceERKNS_4RectESC_tht+0x53e>
 8014104:	f8bb 1004 	ldrh.w	r1, [fp, #4]
 8014108:	440b      	add	r3, r1
 801410a:	4402      	add	r2, r0
 801410c:	b21b      	sxth	r3, r3
 801410e:	429a      	cmp	r2, r3
 8014110:	dc13      	bgt.n	801413a <_ZN8touchgfx3LCD22drawTextureMapTriangleERKNS_14DrawingSurfaceEPKNS_7Point3DERKNS_14TextureSurfaceERKNS_4RectESC_tht+0x53e>
 8014112:	9b09      	ldr	r3, [sp, #36]	; 0x24
 8014114:	9a10      	ldr	r2, [sp, #64]	; 0x40
 8014116:	681b      	ldr	r3, [r3, #0]
 8014118:	9206      	str	r2, [sp, #24]
 801411a:	9a0b      	ldr	r2, [sp, #44]	; 0x2c
 801411c:	9205      	str	r2, [sp, #20]
 801411e:	9a0a      	ldr	r2, [sp, #40]	; 0x28
 8014120:	9500      	str	r5, [sp, #0]
 8014122:	e9cd b203 	strd	fp, r2, [sp, #12]
 8014126:	9a64      	ldr	r2, [sp, #400]	; 0x190
 8014128:	9809      	ldr	r0, [sp, #36]	; 0x24
 801412a:	e9cd 8201 	strd	r8, r2, [sp, #4]
 801412e:	a912      	add	r1, sp, #72	; 0x48
 8014130:	f8d3 9048 	ldr.w	r9, [r3, #72]	; 0x48
 8014134:	aa49      	add	r2, sp, #292	; 0x124
 8014136:	4623      	mov	r3, r4
 8014138:	47c8      	blx	r9
 801413a:	e9d4 2300 	ldrd	r2, r3, [r4]
 801413e:	441a      	add	r2, r3
 8014140:	6963      	ldr	r3, [r4, #20]
 8014142:	ed94 7a0a 	vldr	s14, [r4, #40]	; 0x28
 8014146:	edd4 7a0b 	vldr	s15, [r4, #44]	; 0x2c
 801414a:	edd4 6a0e 	vldr	s13, [r4, #56]	; 0x38
 801414e:	68a1      	ldr	r1, [r4, #8]
 8014150:	ed94 6a08 	vldr	s12, [r4, #32]
 8014154:	6022      	str	r2, [r4, #0]
 8014156:	3301      	adds	r3, #1
 8014158:	6163      	str	r3, [r4, #20]
 801415a:	69a3      	ldr	r3, [r4, #24]
 801415c:	ee37 7a27 	vadd.f32	s14, s14, s15
 8014160:	3b01      	subs	r3, #1
 8014162:	edd4 7a0d 	vldr	s15, [r4, #52]	; 0x34
 8014166:	61a3      	str	r3, [r4, #24]
 8014168:	6923      	ldr	r3, [r4, #16]
 801416a:	ed84 7a0a 	vstr	s14, [r4, #40]	; 0x28
 801416e:	ee77 7aa6 	vadd.f32	s15, s15, s13
 8014172:	edd4 6a07 	vldr	s13, [r4, #28]
 8014176:	edc4 7a0d 	vstr	s15, [r4, #52]	; 0x34
 801417a:	440b      	add	r3, r1
 801417c:	68e1      	ldr	r1, [r4, #12]
 801417e:	6123      	str	r3, [r4, #16]
 8014180:	ee76 6a86 	vadd.f32	s13, s13, s12
 8014184:	428b      	cmp	r3, r1
 8014186:	edc4 6a07 	vstr	s13, [r4, #28]
 801418a:	db15      	blt.n	80141b8 <_ZN8touchgfx3LCD22drawTextureMapTriangleERKNS_14DrawingSurfaceEPKNS_7Point3DERKNS_14TextureSurfaceERKNS_4RectESC_tht+0x5bc>
 801418c:	ed94 6a09 	vldr	s12, [r4, #36]	; 0x24
 8014190:	ee76 6a26 	vadd.f32	s13, s12, s13
 8014194:	3201      	adds	r2, #1
 8014196:	edc4 6a07 	vstr	s13, [r4, #28]
 801419a:	edd4 6a0c 	vldr	s13, [r4, #48]	; 0x30
 801419e:	6022      	str	r2, [r4, #0]
 80141a0:	ee36 7a87 	vadd.f32	s14, s13, s14
 80141a4:	1a5b      	subs	r3, r3, r1
 80141a6:	ed84 7a0a 	vstr	s14, [r4, #40]	; 0x28
 80141aa:	ed94 7a0f 	vldr	s14, [r4, #60]	; 0x3c
 80141ae:	6123      	str	r3, [r4, #16]
 80141b0:	ee77 7a27 	vadd.f32	s15, s14, s15
 80141b4:	edc4 7a0d 	vstr	s15, [r4, #52]	; 0x34
 80141b8:	e9d5 2300 	ldrd	r2, r3, [r5]
 80141bc:	441a      	add	r2, r3
 80141be:	696b      	ldr	r3, [r5, #20]
 80141c0:	ed95 7a0a 	vldr	s14, [r5, #40]	; 0x28
 80141c4:	edd5 7a0b 	vldr	s15, [r5, #44]	; 0x2c
 80141c8:	edd5 6a0e 	vldr	s13, [r5, #56]	; 0x38
 80141cc:	68a9      	ldr	r1, [r5, #8]
 80141ce:	ed95 6a08 	vldr	s12, [r5, #32]
 80141d2:	602a      	str	r2, [r5, #0]
 80141d4:	3301      	adds	r3, #1
 80141d6:	616b      	str	r3, [r5, #20]
 80141d8:	69ab      	ldr	r3, [r5, #24]
 80141da:	ee37 7a27 	vadd.f32	s14, s14, s15
 80141de:	3b01      	subs	r3, #1
 80141e0:	edd5 7a0d 	vldr	s15, [r5, #52]	; 0x34
 80141e4:	61ab      	str	r3, [r5, #24]
 80141e6:	692b      	ldr	r3, [r5, #16]
 80141e8:	ed85 7a0a 	vstr	s14, [r5, #40]	; 0x28
 80141ec:	ee77 7aa6 	vadd.f32	s15, s15, s13
 80141f0:	edd5 6a07 	vldr	s13, [r5, #28]
 80141f4:	edc5 7a0d 	vstr	s15, [r5, #52]	; 0x34
 80141f8:	440b      	add	r3, r1
 80141fa:	68e9      	ldr	r1, [r5, #12]
 80141fc:	612b      	str	r3, [r5, #16]
 80141fe:	ee76 6a86 	vadd.f32	s13, s13, s12
 8014202:	428b      	cmp	r3, r1
 8014204:	edc5 6a07 	vstr	s13, [r5, #28]
 8014208:	db15      	blt.n	8014236 <_ZN8touchgfx3LCD22drawTextureMapTriangleERKNS_14DrawingSurfaceEPKNS_7Point3DERKNS_14TextureSurfaceERKNS_4RectESC_tht+0x63a>
 801420a:	ed95 6a09 	vldr	s12, [r5, #36]	; 0x24
 801420e:	ee76 6a26 	vadd.f32	s13, s12, s13
 8014212:	3201      	adds	r2, #1
 8014214:	edc5 6a07 	vstr	s13, [r5, #28]
 8014218:	edd5 6a0c 	vldr	s13, [r5, #48]	; 0x30
 801421c:	602a      	str	r2, [r5, #0]
 801421e:	ee36 7a87 	vadd.f32	s14, s13, s14
 8014222:	1a5b      	subs	r3, r3, r1
 8014224:	ed85 7a0a 	vstr	s14, [r5, #40]	; 0x28
 8014228:	ed95 7a0f 	vldr	s14, [r5, #60]	; 0x3c
 801422c:	612b      	str	r3, [r5, #16]
 801422e:	ee77 7a27 	vadd.f32	s15, s14, s15
 8014232:	edc5 7a0d 	vstr	s15, [r5, #52]	; 0x34
 8014236:	3f01      	subs	r7, #1
 8014238:	e757      	b.n	80140ea <_ZN8touchgfx3LCD22drawTextureMapTriangleERKNS_14DrawingSurfaceEPKNS_7Point3DERKNS_14TextureSurfaceERKNS_4RectESC_tht+0x4ee>
 801423a:	ad39      	add	r5, sp, #228	; 0xe4
 801423c:	ac19      	add	r4, sp, #100	; 0x64
 801423e:	e72d      	b.n	801409c <_ZN8touchgfx3LCD22drawTextureMapTriangleERKNS_14DrawingSurfaceEPKNS_7Point3DERKNS_14TextureSurfaceERKNS_4RectESC_tht+0x4a0>
 8014240:	4613      	mov	r3, r2
 8014242:	e744      	b.n	80140ce <_ZN8touchgfx3LCD22drawTextureMapTriangleERKNS_14DrawingSurfaceEPKNS_7Point3DERKNS_14TextureSurfaceERKNS_4RectESC_tht+0x4d2>
 8014244:	4613      	mov	r3, r2
 8014246:	e9dd 0a39 	ldrd	r0, sl, [sp, #228]	; 0xe4
 801424a:	9e3b      	ldr	r6, [sp, #236]	; 0xec
 801424c:	f8dd c0f8 	ldr.w	ip, [sp, #248]	; 0xf8
 8014250:	ed9d 7a43 	vldr	s14, [sp, #268]	; 0x10c
 8014254:	eddd 4a44 	vldr	s9, [sp, #272]	; 0x110
 8014258:	eddd 7a46 	vldr	s15, [sp, #280]	; 0x118
 801425c:	ed9d 4a47 	vldr	s8, [sp, #284]	; 0x11c
 8014260:	eddd 6a40 	vldr	s13, [sp, #256]	; 0x100
 8014264:	eddd 3a41 	vldr	s7, [sp, #260]	; 0x104
 8014268:	993d      	ldr	r1, [sp, #244]	; 0xf4
 801426a:	f8dd 80f0 	ldr.w	r8, [sp, #240]	; 0xf0
 801426e:	ed9d 5a42 	vldr	s10, [sp, #264]	; 0x108
 8014272:	eddd 5a45 	vldr	s11, [sp, #276]	; 0x114
 8014276:	ed9d 6a48 	vldr	s12, [sp, #288]	; 0x120
 801427a:	960e      	str	r6, [sp, #56]	; 0x38
 801427c:	469e      	mov	lr, r3
 801427e:	461f      	mov	r7, r3
 8014280:	f04f 0900 	mov.w	r9, #0
 8014284:	2f00      	cmp	r7, #0
 8014286:	d146      	bne.n	8014316 <_ZN8touchgfx3LCD22drawTextureMapTriangleERKNS_14DrawingSurfaceEPKNS_7Point3DERKNS_14TextureSurfaceERKNS_4RectESC_tht+0x71a>
 8014288:	449c      	add	ip, r3
 801428a:	1ad7      	subs	r7, r2, r3
 801428c:	f1b9 0f00 	cmp.w	r9, #0
 8014290:	d009      	beq.n	80142a6 <_ZN8touchgfx3LCD22drawTextureMapTriangleERKNS_14DrawingSurfaceEPKNS_7Point3DERKNS_14TextureSurfaceERKNS_4RectESC_tht+0x6aa>
 8014292:	e9cd c73e 	strd	ip, r7, [sp, #248]	; 0xf8
 8014296:	9039      	str	r0, [sp, #228]	; 0xe4
 8014298:	913d      	str	r1, [sp, #244]	; 0xf4
 801429a:	edcd 6a40 	vstr	s13, [sp, #256]	; 0x100
 801429e:	ed8d 7a43 	vstr	s14, [sp, #268]	; 0x10c
 80142a2:	edcd 7a46 	vstr	s15, [sp, #280]	; 0x118
 80142a6:	991b      	ldr	r1, [sp, #108]	; 0x6c
 80142a8:	910e      	str	r1, [sp, #56]	; 0x38
 80142aa:	e9dd 0a19 	ldrd	r0, sl, [sp, #100]	; 0x64
 80142ae:	e9dd c71e 	ldrd	ip, r7, [sp, #120]	; 0x78
 80142b2:	e9dd 911c 	ldrd	r9, r1, [sp, #112]	; 0x70
 80142b6:	eddd 4a24 	vldr	s9, [sp, #144]	; 0x90
 80142ba:	eddd 6a23 	vldr	s13, [sp, #140]	; 0x8c
 80142be:	ed9d 4a27 	vldr	s8, [sp, #156]	; 0x9c
 80142c2:	ed9d 7a26 	vldr	s14, [sp, #152]	; 0x98
 80142c6:	eddd 3a21 	vldr	s7, [sp, #132]	; 0x84
 80142ca:	eddd 7a20 	vldr	s15, [sp, #128]	; 0x80
 80142ce:	ed9d 5a22 	vldr	s10, [sp, #136]	; 0x88
 80142d2:	eddd 5a25 	vldr	s11, [sp, #148]	; 0x94
 80142d6:	ed9d 6a28 	vldr	s12, [sp, #160]	; 0xa0
 80142da:	f04f 0800 	mov.w	r8, #0
 80142de:	f1be 0f00 	cmp.w	lr, #0
 80142e2:	d030      	beq.n	8014346 <_ZN8touchgfx3LCD22drawTextureMapTriangleERKNS_14DrawingSurfaceEPKNS_7Point3DERKNS_14TextureSurfaceERKNS_4RectESC_tht+0x74a>
 80142e4:	9e0e      	ldr	r6, [sp, #56]	; 0x38
 80142e6:	4431      	add	r1, r6
 80142e8:	4549      	cmp	r1, r9
 80142ea:	4450      	add	r0, sl
 80142ec:	ee76 6aa4 	vadd.f32	s13, s13, s9
 80142f0:	ee37 7a04 	vadd.f32	s14, s14, s8
 80142f4:	ee77 7aa3 	vadd.f32	s15, s15, s7
 80142f8:	db08      	blt.n	801430c <_ZN8touchgfx3LCD22drawTextureMapTriangleERKNS_14DrawingSurfaceEPKNS_7Point3DERKNS_14TextureSurfaceERKNS_4RectESC_tht+0x710>
 80142fa:	ee77 7a85 	vadd.f32	s15, s15, s10
 80142fe:	ee76 6aa5 	vadd.f32	s13, s13, s11
 8014302:	ee37 7a06 	vadd.f32	s14, s14, s12
 8014306:	3001      	adds	r0, #1
 8014308:	eba1 0109 	sub.w	r1, r1, r9
 801430c:	f10e 3eff 	add.w	lr, lr, #4294967295
 8014310:	f04f 0801 	mov.w	r8, #1
 8014314:	e7e3      	b.n	80142de <_ZN8touchgfx3LCD22drawTextureMapTriangleERKNS_14DrawingSurfaceEPKNS_7Point3DERKNS_14TextureSurfaceERKNS_4RectESC_tht+0x6e2>
 8014316:	9e0e      	ldr	r6, [sp, #56]	; 0x38
 8014318:	4431      	add	r1, r6
 801431a:	4541      	cmp	r1, r8
 801431c:	4450      	add	r0, sl
 801431e:	ee37 7a24 	vadd.f32	s14, s14, s9
 8014322:	ee77 7a84 	vadd.f32	s15, s15, s8
 8014326:	ee76 6aa3 	vadd.f32	s13, s13, s7
 801432a:	db08      	blt.n	801433e <_ZN8touchgfx3LCD22drawTextureMapTriangleERKNS_14DrawingSurfaceEPKNS_7Point3DERKNS_14TextureSurfaceERKNS_4RectESC_tht+0x742>
 801432c:	ee76 6a85 	vadd.f32	s13, s13, s10
 8014330:	ee37 7a25 	vadd.f32	s14, s14, s11
 8014334:	ee77 7a86 	vadd.f32	s15, s15, s12
 8014338:	3001      	adds	r0, #1
 801433a:	eba1 0108 	sub.w	r1, r1, r8
 801433e:	3f01      	subs	r7, #1
 8014340:	f04f 0901 	mov.w	r9, #1
 8014344:	e79e      	b.n	8014284 <_ZN8touchgfx3LCD22drawTextureMapTriangleERKNS_14DrawingSurfaceEPKNS_7Point3DERKNS_14TextureSurfaceERKNS_4RectESC_tht+0x688>
 8014346:	449c      	add	ip, r3
 8014348:	1aff      	subs	r7, r7, r3
 801434a:	f1b8 0f00 	cmp.w	r8, #0
 801434e:	d009      	beq.n	8014364 <_ZN8touchgfx3LCD22drawTextureMapTriangleERKNS_14DrawingSurfaceEPKNS_7Point3DERKNS_14TextureSurfaceERKNS_4RectESC_tht+0x768>
 8014350:	e9cd c71e 	strd	ip, r7, [sp, #120]	; 0x78
 8014354:	9019      	str	r0, [sp, #100]	; 0x64
 8014356:	edcd 6a23 	vstr	s13, [sp, #140]	; 0x8c
 801435a:	ed8d 7a26 	vstr	s14, [sp, #152]	; 0x98
 801435e:	edcd 7a20 	vstr	s15, [sp, #128]	; 0x80
 8014362:	911d      	str	r1, [sp, #116]	; 0x74
 8014364:	1ad2      	subs	r2, r2, r3
 8014366:	e6b5      	b.n	80140d4 <_ZN8touchgfx3LCD22drawTextureMapTriangleERKNS_14DrawingSurfaceEPKNS_7Point3DERKNS_14TextureSurfaceERKNS_4RectESC_tht+0x4d8>
 8014368:	9b0f      	ldr	r3, [sp, #60]	; 0x3c
 801436a:	681b      	ldr	r3, [r3, #0]
 801436c:	b923      	cbnz	r3, 8014378 <_ZN8touchgfx3LCD22drawTextureMapTriangleERKNS_14DrawingSurfaceEPKNS_7Point3DERKNS_14TextureSurfaceERKNS_4RectESC_tht+0x77c>
 801436e:	4b04      	ldr	r3, [pc, #16]	; (8014380 <_ZN8touchgfx3LCD22drawTextureMapTriangleERKNS_14DrawingSurfaceEPKNS_7Point3DERKNS_14TextureSurfaceERKNS_4RectESC_tht+0x784>)
 8014370:	6818      	ldr	r0, [r3, #0]
 8014372:	6803      	ldr	r3, [r0, #0]
 8014374:	6adb      	ldr	r3, [r3, #44]	; 0x2c
 8014376:	4798      	blx	r3
 8014378:	b05b      	add	sp, #364	; 0x16c
 801437a:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
 801437e:	bf00      	nop
 8014380:	20012f24 	.word	0x20012f24

08014384 <_ZN8touchgfx3LCD22WideTextInternalStructC1ERNS_12TextProviderEtthPKNS_4FontEsNS_14WideTextActionE>:
 8014384:	b570      	push	{r4, r5, r6, lr}
 8014386:	4604      	mov	r4, r0
 8014388:	f89d 601c 	ldrb.w	r6, [sp, #28]
 801438c:	9805      	ldr	r0, [sp, #20]
 801438e:	6061      	str	r1, [r4, #4]
 8014390:	2500      	movs	r5, #0
 8014392:	f89d 1010 	ldrb.w	r1, [sp, #16]
 8014396:	8263      	strh	r3, [r4, #18]
 8014398:	f9bd 3018 	ldrsh.w	r3, [sp, #24]
 801439c:	8025      	strh	r5, [r4, #0]
 801439e:	7221      	strb	r1, [r4, #8]
 80143a0:	7266      	strb	r6, [r4, #9]
 80143a2:	60e0      	str	r0, [r4, #12]
 80143a4:	8222      	strh	r2, [r4, #16]
 80143a6:	82a3      	strh	r3, [r4, #20]
 80143a8:	82e5      	strh	r5, [r4, #22]
 80143aa:	8325      	strh	r5, [r4, #24]
 80143ac:	8365      	strh	r5, [r4, #26]
 80143ae:	83a5      	strh	r5, [r4, #28]
 80143b0:	83e5      	strh	r5, [r4, #30]
 80143b2:	8425      	strh	r5, [r4, #32]
 80143b4:	f884 5022 	strb.w	r5, [r4, #34]	; 0x22
 80143b8:	b32e      	cbz	r6, 8014406 <_ZN8touchgfx3LCD22WideTextInternalStructC1ERNS_12TextProviderEtthPKNS_4FontEsNS_14WideTextActionE+0x82>
 80143ba:	6803      	ldr	r3, [r0, #0]
 80143bc:	695b      	ldr	r3, [r3, #20]
 80143be:	4798      	blx	r3
 80143c0:	4606      	mov	r6, r0
 80143c2:	b300      	cbz	r0, 8014406 <_ZN8touchgfx3LCD22WideTextInternalStructC1ERNS_12TextProviderEtthPKNS_4FontEsNS_14WideTextActionE+0x82>
 80143c4:	68e0      	ldr	r0, [r4, #12]
 80143c6:	6803      	ldr	r3, [r0, #0]
 80143c8:	4631      	mov	r1, r6
 80143ca:	68db      	ldr	r3, [r3, #12]
 80143cc:	4798      	blx	r3
 80143ce:	4605      	mov	r5, r0
 80143d0:	b1c8      	cbz	r0, 8014406 <_ZN8touchgfx3LCD22WideTextInternalStructC1ERNS_12TextProviderEtthPKNS_4FontEsNS_14WideTextActionE+0x82>
 80143d2:	7b43      	ldrb	r3, [r0, #13]
 80143d4:	7a82      	ldrb	r2, [r0, #10]
 80143d6:	005b      	lsls	r3, r3, #1
 80143d8:	f403 7380 	and.w	r3, r3, #256	; 0x100
 80143dc:	4313      	orrs	r3, r2
 80143de:	8423      	strh	r3, [r4, #32]
 80143e0:	7a63      	ldrb	r3, [r4, #9]
 80143e2:	2b06      	cmp	r3, #6
 80143e4:	d10f      	bne.n	8014406 <_ZN8touchgfx3LCD22WideTextInternalStructC1ERNS_12TextProviderEtthPKNS_4FontEsNS_14WideTextActionE+0x82>
 80143e6:	68e0      	ldr	r0, [r4, #12]
 80143e8:	6803      	ldr	r3, [r0, #0]
 80143ea:	462a      	mov	r2, r5
 80143ec:	6c5b      	ldr	r3, [r3, #68]	; 0x44
 80143ee:	4631      	mov	r1, r6
 80143f0:	4798      	blx	r3
 80143f2:	7b6b      	ldrb	r3, [r5, #13]
 80143f4:	005b      	lsls	r3, r3, #1
 80143f6:	f403 7280 	and.w	r2, r3, #256	; 0x100
 80143fa:	7aab      	ldrb	r3, [r5, #10]
 80143fc:	4313      	orrs	r3, r2
 80143fe:	4418      	add	r0, r3
 8014400:	8c23      	ldrh	r3, [r4, #32]
 8014402:	4418      	add	r0, r3
 8014404:	8420      	strh	r0, [r4, #32]
 8014406:	4620      	mov	r0, r4
 8014408:	bd70      	pop	{r4, r5, r6, pc}

0801440a <_ZN8touchgfx3LCD11stringWidthERNS_12TextProviderERKNS_4FontEih>:
 801440a:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 801440e:	2400      	movs	r4, #0
 8014410:	b085      	sub	sp, #20
 8014412:	4681      	mov	r9, r0
 8014414:	4688      	mov	r8, r1
 8014416:	4692      	mov	sl, r2
 8014418:	469b      	mov	fp, r3
 801441a:	4627      	mov	r7, r4
 801441c:	4625      	mov	r5, r4
 801441e:	4626      	mov	r6, r4
 8014420:	4554      	cmp	r4, sl
 8014422:	da2a      	bge.n	801447a <_ZN8touchgfx3LCD11stringWidthERNS_12TextProviderERKNS_4FontEih+0x70>
 8014424:	2300      	movs	r3, #0
 8014426:	9303      	str	r3, [sp, #12]
 8014428:	f64f 63ff 	movw	r3, #65279	; 0xfeff
 801442c:	429d      	cmp	r5, r3
 801442e:	d004      	beq.n	801443a <_ZN8touchgfx3LCD11stringWidthERNS_12TextProviderERKNS_4FontEih+0x30>
 8014430:	f242 030b 	movw	r3, #8203	; 0x200b
 8014434:	429d      	cmp	r5, r3
 8014436:	bf18      	it	ne
 8014438:	462f      	movne	r7, r5
 801443a:	ab03      	add	r3, sp, #12
 801443c:	4642      	mov	r2, r8
 801443e:	4659      	mov	r1, fp
 8014440:	4648      	mov	r0, r9
 8014442:	f003 f965 	bl	8017710 <_ZN8touchgfx12TextProvider15getNextLigatureEhPKNS_4FontERPKNS_9GlyphNodeE>
 8014446:	4605      	mov	r5, r0
 8014448:	b1b8      	cbz	r0, 801447a <_ZN8touchgfx3LCD11stringWidthERNS_12TextProviderERKNS_4FontEih+0x70>
 801444a:	280a      	cmp	r0, #10
 801444c:	d015      	beq.n	801447a <_ZN8touchgfx3LCD11stringWidthERNS_12TextProviderERKNS_4FontEih+0x70>
 801444e:	9a03      	ldr	r2, [sp, #12]
 8014450:	b18a      	cbz	r2, 8014476 <_ZN8touchgfx3LCD11stringWidthERNS_12TextProviderERKNS_4FontEih+0x6c>
 8014452:	7b50      	ldrb	r0, [r2, #13]
 8014454:	7a93      	ldrb	r3, [r2, #10]
 8014456:	8895      	ldrh	r5, [r2, #4]
 8014458:	0040      	lsls	r0, r0, #1
 801445a:	f400 7080 	and.w	r0, r0, #256	; 0x100
 801445e:	4303      	orrs	r3, r0
 8014460:	9301      	str	r3, [sp, #4]
 8014462:	f8d8 3000 	ldr.w	r3, [r8]
 8014466:	4639      	mov	r1, r7
 8014468:	6c5b      	ldr	r3, [r3, #68]	; 0x44
 801446a:	4640      	mov	r0, r8
 801446c:	4798      	blx	r3
 801446e:	9b01      	ldr	r3, [sp, #4]
 8014470:	4418      	add	r0, r3
 8014472:	4406      	add	r6, r0
 8014474:	b2b6      	uxth	r6, r6
 8014476:	3401      	adds	r4, #1
 8014478:	e7d2      	b.n	8014420 <_ZN8touchgfx3LCD11stringWidthERNS_12TextProviderERKNS_4FontEih+0x16>
 801447a:	4630      	mov	r0, r6
 801447c:	b005      	add	sp, #20
 801447e:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}

08014482 <_ZN8touchgfx3LCD10rotateRectERNS_4RectERKS1_NS_12TextRotationE>:
 8014482:	2a02      	cmp	r2, #2
 8014484:	b530      	push	{r4, r5, lr}
 8014486:	d011      	beq.n	80144ac <_ZN8touchgfx3LCD10rotateRectERNS_4RectERKS1_NS_12TextRotationE+0x2a>
 8014488:	2a03      	cmp	r2, #3
 801448a:	d01c      	beq.n	80144c6 <_ZN8touchgfx3LCD10rotateRectERNS_4RectERKS1_NS_12TextRotationE+0x44>
 801448c:	2a01      	cmp	r2, #1
 801448e:	d10c      	bne.n	80144aa <_ZN8touchgfx3LCD10rotateRectERNS_4RectERKS1_NS_12TextRotationE+0x28>
 8014490:	888b      	ldrh	r3, [r1, #4]
 8014492:	8801      	ldrh	r1, [r0, #0]
 8014494:	f9b0 2004 	ldrsh.w	r2, [r0, #4]
 8014498:	8844      	ldrh	r4, [r0, #2]
 801449a:	8004      	strh	r4, [r0, #0]
 801449c:	1a5b      	subs	r3, r3, r1
 801449e:	1a9b      	subs	r3, r3, r2
 80144a0:	f9b0 1006 	ldrsh.w	r1, [r0, #6]
 80144a4:	8043      	strh	r3, [r0, #2]
 80144a6:	8081      	strh	r1, [r0, #4]
 80144a8:	80c2      	strh	r2, [r0, #6]
 80144aa:	bd30      	pop	{r4, r5, pc}
 80144ac:	88cb      	ldrh	r3, [r1, #6]
 80144ae:	8842      	ldrh	r2, [r0, #2]
 80144b0:	1a9b      	subs	r3, r3, r2
 80144b2:	88c2      	ldrh	r2, [r0, #6]
 80144b4:	1a9b      	subs	r3, r3, r2
 80144b6:	888a      	ldrh	r2, [r1, #4]
 80144b8:	8801      	ldrh	r1, [r0, #0]
 80144ba:	8043      	strh	r3, [r0, #2]
 80144bc:	1a52      	subs	r2, r2, r1
 80144be:	8881      	ldrh	r1, [r0, #4]
 80144c0:	1a52      	subs	r2, r2, r1
 80144c2:	8002      	strh	r2, [r0, #0]
 80144c4:	e7f1      	b.n	80144aa <_ZN8touchgfx3LCD10rotateRectERNS_4RectERKS1_NS_12TextRotationE+0x28>
 80144c6:	88cb      	ldrh	r3, [r1, #6]
 80144c8:	8841      	ldrh	r1, [r0, #2]
 80144ca:	f9b0 2006 	ldrsh.w	r2, [r0, #6]
 80144ce:	f9b0 5000 	ldrsh.w	r5, [r0]
 80144d2:	f9b0 4004 	ldrsh.w	r4, [r0, #4]
 80144d6:	8045      	strh	r5, [r0, #2]
 80144d8:	1a5b      	subs	r3, r3, r1
 80144da:	1a9b      	subs	r3, r3, r2
 80144dc:	8003      	strh	r3, [r0, #0]
 80144de:	8082      	strh	r2, [r0, #4]
 80144e0:	80c4      	strh	r4, [r0, #6]
 80144e2:	e7e2      	b.n	80144aa <_ZN8touchgfx3LCD10rotateRectERNS_4RectERKS1_NS_12TextRotationE+0x28>

080144e4 <_ZN8touchgfx3LCD18drawStringInternalEPtPKNS_4RectEssRS3_PKNS0_13StringVisualsEhRNS_12TextProviderEib>:
 80144e4:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 80144e8:	b09f      	sub	sp, #124	; 0x7c
 80144ea:	9116      	str	r1, [sp, #88]	; 0x58
 80144ec:	9317      	str	r3, [sp, #92]	; 0x5c
 80144ee:	9929      	ldr	r1, [sp, #164]	; 0xa4
 80144f0:	9b29      	ldr	r3, [sp, #164]	; 0xa4
 80144f2:	8809      	ldrh	r1, [r1, #0]
 80144f4:	889b      	ldrh	r3, [r3, #4]
 80144f6:	f8dd 80a8 	ldr.w	r8, [sp, #168]	; 0xa8
 80144fa:	9212      	str	r2, [sp, #72]	; 0x48
 80144fc:	440b      	add	r3, r1
 80144fe:	b21b      	sxth	r3, r3
 8014500:	9310      	str	r3, [sp, #64]	; 0x40
 8014502:	f8d8 3000 	ldr.w	r3, [r8]
 8014506:	f89d 20b8 	ldrb.w	r2, [sp, #184]	; 0xb8
 801450a:	7b19      	ldrb	r1, [r3, #12]
 801450c:	7adb      	ldrb	r3, [r3, #11]
 801450e:	9011      	str	r0, [sp, #68]	; 0x44
 8014510:	f89d b0ac 	ldrb.w	fp, [sp, #172]	; 0xac
 8014514:	9114      	str	r1, [sp, #80]	; 0x50
 8014516:	9315      	str	r3, [sp, #84]	; 0x54
 8014518:	f9bd 60a0 	ldrsh.w	r6, [sp, #160]	; 0xa0
 801451c:	2a00      	cmp	r2, #0
 801451e:	d06a      	beq.n	80145f6 <_ZN8touchgfx3LCD18drawStringInternalEPtPKNS_4RectEssRS3_PKNS0_13StringVisualsEhRNS_12TextProviderEib+0x112>
 8014520:	f898 3010 	ldrb.w	r3, [r8, #16]
 8014524:	9a2d      	ldr	r2, [sp, #180]	; 0xb4
 8014526:	2b06      	cmp	r3, #6
 8014528:	bf14      	ite	ne
 801452a:	2301      	movne	r3, #1
 801452c:	2302      	moveq	r3, #2
 801452e:	4413      	add	r3, r2
 8014530:	f04f 0900 	mov.w	r9, #0
 8014534:	930f      	str	r3, [sp, #60]	; 0x3c
 8014536:	f8cd 9038 	str.w	r9, [sp, #56]	; 0x38
 801453a:	464c      	mov	r4, r9
 801453c:	f8cd 9034 	str.w	r9, [sp, #52]	; 0x34
 8014540:	e9dd 320e 	ldrd	r3, r2, [sp, #56]	; 0x38
 8014544:	4293      	cmp	r3, r2
 8014546:	f280 808f 	bge.w	8014668 <_ZN8touchgfx3LCD18drawStringInternalEPtPKNS_4RectEssRS3_PKNS0_13StringVisualsEhRNS_12TextProviderEib+0x184>
 801454a:	2300      	movs	r3, #0
 801454c:	e9cd 331c 	strd	r3, r3, [sp, #112]	; 0x70
 8014550:	f88d 306f 	strb.w	r3, [sp, #111]	; 0x6f
 8014554:	f64f 63ff 	movw	r3, #65279	; 0xfeff
 8014558:	429c      	cmp	r4, r3
 801455a:	d006      	beq.n	801456a <_ZN8touchgfx3LCD18drawStringInternalEPtPKNS_4RectEssRS3_PKNS0_13StringVisualsEhRNS_12TextProviderEib+0x86>
 801455c:	9b0d      	ldr	r3, [sp, #52]	; 0x34
 801455e:	f242 020b 	movw	r2, #8203	; 0x200b
 8014562:	4294      	cmp	r4, r2
 8014564:	bf18      	it	ne
 8014566:	4623      	movne	r3, r4
 8014568:	930d      	str	r3, [sp, #52]	; 0x34
 801456a:	9b0e      	ldr	r3, [sp, #56]	; 0x38
 801456c:	992d      	ldr	r1, [sp, #180]	; 0xb4
 801456e:	f8d8 2000 	ldr.w	r2, [r8]
 8014572:	428b      	cmp	r3, r1
 8014574:	db41      	blt.n	80145fa <_ZN8touchgfx3LCD18drawStringInternalEPtPKNS_4RectEssRS3_PKNS0_13StringVisualsEhRNS_12TextProviderEib+0x116>
 8014576:	6813      	ldr	r3, [r2, #0]
 8014578:	4610      	mov	r0, r2
 801457a:	695b      	ldr	r3, [r3, #20]
 801457c:	4798      	blx	r3
 801457e:	4604      	mov	r4, r0
 8014580:	f8d8 0000 	ldr.w	r0, [r8]
 8014584:	6803      	ldr	r3, [r0, #0]
 8014586:	aa1d      	add	r2, sp, #116	; 0x74
 8014588:	689d      	ldr	r5, [r3, #8]
 801458a:	4621      	mov	r1, r4
 801458c:	f10d 036f 	add.w	r3, sp, #111	; 0x6f
 8014590:	47a8      	blx	r5
 8014592:	901c      	str	r0, [sp, #112]	; 0x70
 8014594:	f64f 63ff 	movw	r3, #65279	; 0xfeff
 8014598:	429c      	cmp	r4, r3
 801459a:	f000 80eb 	beq.w	8014774 <_ZN8touchgfx3LCD18drawStringInternalEPtPKNS_4RectEssRS3_PKNS0_13StringVisualsEhRNS_12TextProviderEib+0x290>
 801459e:	f242 030b 	movw	r3, #8203	; 0x200b
 80145a2:	429c      	cmp	r4, r3
 80145a4:	f000 80e6 	beq.w	8014774 <_ZN8touchgfx3LCD18drawStringInternalEPtPKNS_4RectEssRS3_PKNS0_13StringVisualsEhRNS_12TextProviderEib+0x290>
 80145a8:	2c00      	cmp	r4, #0
 80145aa:	f000 80f8 	beq.w	801479e <_ZN8touchgfx3LCD18drawStringInternalEPtPKNS_4RectEssRS3_PKNS0_13StringVisualsEhRNS_12TextProviderEib+0x2ba>
 80145ae:	2c0a      	cmp	r4, #10
 80145b0:	d060      	beq.n	8014674 <_ZN8touchgfx3LCD18drawStringInternalEPtPKNS_4RectEssRS3_PKNS0_13StringVisualsEhRNS_12TextProviderEib+0x190>
 80145b2:	9a1c      	ldr	r2, [sp, #112]	; 0x70
 80145b4:	b36a      	cbz	r2, 8014612 <_ZN8touchgfx3LCD18drawStringInternalEPtPKNS_4RectEssRS3_PKNS0_13StringVisualsEhRNS_12TextProviderEib+0x12e>
 80145b6:	8894      	ldrh	r4, [r2, #4]
 80145b8:	f1bb 0f00 	cmp.w	fp, #0
 80145bc:	d03b      	beq.n	8014636 <_ZN8touchgfx3LCD18drawStringInternalEPtPKNS_4RectEssRS3_PKNS0_13StringVisualsEhRNS_12TextProviderEib+0x152>
 80145be:	f892 900d 	ldrb.w	r9, [r2, #13]
 80145c2:	ea4f 0949 	mov.w	r9, r9, lsl #1
 80145c6:	f409 7380 	and.w	r3, r9, #256	; 0x100
 80145ca:	f892 900a 	ldrb.w	r9, [r2, #10]
 80145ce:	f1bb 0f01 	cmp.w	fp, #1
 80145d2:	ea49 0903 	orr.w	r9, r9, r3
 80145d6:	d134      	bne.n	8014642 <_ZN8touchgfx3LCD18drawStringInternalEPtPKNS_4RectEssRS3_PKNS0_13StringVisualsEhRNS_12TextProviderEib+0x15e>
 80145d8:	9b0d      	ldr	r3, [sp, #52]	; 0x34
 80145da:	eba6 0609 	sub.w	r6, r6, r9
 80145de:	2b00      	cmp	r3, #0
 80145e0:	d14f      	bne.n	8014682 <_ZN8touchgfx3LCD18drawStringInternalEPtPKNS_4RectEssRS3_PKNS0_13StringVisualsEhRNS_12TextProviderEib+0x19e>
 80145e2:	9a14      	ldr	r2, [sp, #80]	; 0x50
 80145e4:	eb09 0306 	add.w	r3, r9, r6
 80145e8:	4413      	add	r3, r2
 80145ea:	9a29      	ldr	r2, [sp, #164]	; 0xa4
 80145ec:	f9b2 2000 	ldrsh.w	r2, [r2]
 80145f0:	4293      	cmp	r3, r2
 80145f2:	da51      	bge.n	8014698 <_ZN8touchgfx3LCD18drawStringInternalEPtPKNS_4RectEssRS3_PKNS0_13StringVisualsEhRNS_12TextProviderEib+0x1b4>
 80145f4:	e038      	b.n	8014668 <_ZN8touchgfx3LCD18drawStringInternalEPtPKNS_4RectEssRS3_PKNS0_13StringVisualsEhRNS_12TextProviderEib+0x184>
 80145f6:	9b2d      	ldr	r3, [sp, #180]	; 0xb4
 80145f8:	e79a      	b.n	8014530 <_ZN8touchgfx3LCD18drawStringInternalEPtPKNS_4RectEssRS3_PKNS0_13StringVisualsEhRNS_12TextProviderEib+0x4c>
 80145fa:	f10d 036f 	add.w	r3, sp, #111	; 0x6f
 80145fe:	9301      	str	r3, [sp, #4]
 8014600:	ab1d      	add	r3, sp, #116	; 0x74
 8014602:	9300      	str	r3, [sp, #0]
 8014604:	4659      	mov	r1, fp
 8014606:	ab1c      	add	r3, sp, #112	; 0x70
 8014608:	982c      	ldr	r0, [sp, #176]	; 0xb0
 801460a:	f003 f8ca 	bl	80177a2 <_ZN8touchgfx12TextProvider15getNextLigatureEhPKNS_4FontERPKNS_9GlyphNodeERPKhRh>
 801460e:	4604      	mov	r4, r0
 8014610:	e7c0      	b.n	8014594 <_ZN8touchgfx3LCD18drawStringInternalEPtPKNS_4RectEssRS3_PKNS0_13StringVisualsEhRNS_12TextProviderEib+0xb0>
 8014612:	f8d8 0000 	ldr.w	r0, [r8]
 8014616:	6803      	ldr	r3, [r0, #0]
 8014618:	691b      	ldr	r3, [r3, #16]
 801461a:	4798      	blx	r3
 801461c:	f64f 63ff 	movw	r3, #65279	; 0xfeff
 8014620:	4298      	cmp	r0, r3
 8014622:	f000 80a7 	beq.w	8014774 <_ZN8touchgfx3LCD18drawStringInternalEPtPKNS_4RectEssRS3_PKNS0_13StringVisualsEhRNS_12TextProviderEib+0x290>
 8014626:	f242 030b 	movw	r3, #8203	; 0x200b
 801462a:	4298      	cmp	r0, r3
 801462c:	f000 80a2 	beq.w	8014774 <_ZN8touchgfx3LCD18drawStringInternalEPtPKNS_4RectEssRS3_PKNS0_13StringVisualsEhRNS_12TextProviderEib+0x290>
 8014630:	f1bb 0f00 	cmp.w	fp, #0
 8014634:	d100      	bne.n	8014638 <_ZN8touchgfx3LCD18drawStringInternalEPtPKNS_4RectEssRS3_PKNS0_13StringVisualsEhRNS_12TextProviderEib+0x154>
 8014636:	444e      	add	r6, r9
 8014638:	9a1c      	ldr	r2, [sp, #112]	; 0x70
 801463a:	2a00      	cmp	r2, #0
 801463c:	d1bf      	bne.n	80145be <_ZN8touchgfx3LCD18drawStringInternalEPtPKNS_4RectEssRS3_PKNS0_13StringVisualsEhRNS_12TextProviderEib+0xda>
 801463e:	4691      	mov	r9, r2
 8014640:	e098      	b.n	8014774 <_ZN8touchgfx3LCD18drawStringInternalEPtPKNS_4RectEssRS3_PKNS0_13StringVisualsEhRNS_12TextProviderEib+0x290>
 8014642:	9b0d      	ldr	r3, [sp, #52]	; 0x34
 8014644:	2b00      	cmp	r3, #0
 8014646:	f000 80ac 	beq.w	80147a2 <_ZN8touchgfx3LCD18drawStringInternalEPtPKNS_4RectEssRS3_PKNS0_13StringVisualsEhRNS_12TextProviderEib+0x2be>
 801464a:	f1bb 0f00 	cmp.w	fp, #0
 801464e:	d118      	bne.n	8014682 <_ZN8touchgfx3LCD18drawStringInternalEPtPKNS_4RectEssRS3_PKNS0_13StringVisualsEhRNS_12TextProviderEib+0x19e>
 8014650:	f8d8 0000 	ldr.w	r0, [r8]
 8014654:	990d      	ldr	r1, [sp, #52]	; 0x34
 8014656:	6803      	ldr	r3, [r0, #0]
 8014658:	6c5b      	ldr	r3, [r3, #68]	; 0x44
 801465a:	4798      	blx	r3
 801465c:	4406      	add	r6, r0
 801465e:	9b15      	ldr	r3, [sp, #84]	; 0x54
 8014660:	9a10      	ldr	r2, [sp, #64]	; 0x40
 8014662:	1af3      	subs	r3, r6, r3
 8014664:	4293      	cmp	r3, r2
 8014666:	dd17      	ble.n	8014698 <_ZN8touchgfx3LCD18drawStringInternalEPtPKNS_4RectEssRS3_PKNS0_13StringVisualsEhRNS_12TextProviderEib+0x1b4>
 8014668:	2c00      	cmp	r4, #0
 801466a:	f000 8098 	beq.w	801479e <_ZN8touchgfx3LCD18drawStringInternalEPtPKNS_4RectEssRS3_PKNS0_13StringVisualsEhRNS_12TextProviderEib+0x2ba>
 801466e:	2c0a      	cmp	r4, #10
 8014670:	f040 8086 	bne.w	8014780 <_ZN8touchgfx3LCD18drawStringInternalEPtPKNS_4RectEssRS3_PKNS0_13StringVisualsEhRNS_12TextProviderEib+0x29c>
 8014674:	240a      	movs	r4, #10
 8014676:	fab4 f084 	clz	r0, r4
 801467a:	0940      	lsrs	r0, r0, #5
 801467c:	b01f      	add	sp, #124	; 0x7c
 801467e:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
 8014682:	f8d8 0000 	ldr.w	r0, [r8]
 8014686:	990d      	ldr	r1, [sp, #52]	; 0x34
 8014688:	6803      	ldr	r3, [r0, #0]
 801468a:	6c5b      	ldr	r3, [r3, #68]	; 0x44
 801468c:	4798      	blx	r3
 801468e:	f1bb 0f01 	cmp.w	fp, #1
 8014692:	eba6 0600 	sub.w	r6, r6, r0
 8014696:	d0a4      	beq.n	80145e2 <_ZN8touchgfx3LCD18drawStringInternalEPtPKNS_4RectEssRS3_PKNS0_13StringVisualsEhRNS_12TextProviderEib+0xfe>
 8014698:	981c      	ldr	r0, [sp, #112]	; 0x70
 801469a:	9b29      	ldr	r3, [sp, #164]	; 0xa4
 801469c:	f990 1009 	ldrsb.w	r1, [r0, #9]
 80146a0:	f9b3 7000 	ldrsh.w	r7, [r3]
 80146a4:	7b43      	ldrb	r3, [r0, #13]
 80146a6:	015b      	lsls	r3, r3, #5
 80146a8:	f403 7280 	and.w	r2, r3, #256	; 0x100
 80146ac:	7983      	ldrb	r3, [r0, #6]
 80146ae:	4431      	add	r1, r6
 80146b0:	4313      	orrs	r3, r2
 80146b2:	440b      	add	r3, r1
 80146b4:	42bb      	cmp	r3, r7
 80146b6:	db5d      	blt.n	8014774 <_ZN8touchgfx3LCD18drawStringInternalEPtPKNS_4RectEssRS3_PKNS0_13StringVisualsEhRNS_12TextProviderEib+0x290>
 80146b8:	9b10      	ldr	r3, [sp, #64]	; 0x40
 80146ba:	4299      	cmp	r1, r3
 80146bc:	da5a      	bge.n	8014774 <_ZN8touchgfx3LCD18drawStringInternalEPtPKNS_4RectEssRS3_PKNS0_13StringVisualsEhRNS_12TextProviderEib+0x290>
 80146be:	f8d8 0000 	ldr.w	r0, [r8]
 80146c2:	6803      	ldr	r3, [r0, #0]
 80146c4:	42b7      	cmp	r7, r6
 80146c6:	bfc8      	it	gt
 80146c8:	1bbf      	subgt	r7, r7, r6
 80146ca:	6b1b      	ldr	r3, [r3, #48]	; 0x30
 80146cc:	bfcc      	ite	gt
 80146ce:	b2bf      	uxthgt	r7, r7
 80146d0:	2700      	movle	r7, #0
 80146d2:	4798      	blx	r3
 80146d4:	9b1c      	ldr	r3, [sp, #112]	; 0x70
 80146d6:	7b5a      	ldrb	r2, [r3, #13]
 80146d8:	00d1      	lsls	r1, r2, #3
 80146da:	f401 7580 	and.w	r5, r1, #256	; 0x100
 80146de:	7a19      	ldrb	r1, [r3, #8]
 80146e0:	4329      	orrs	r1, r5
 80146e2:	0655      	lsls	r5, r2, #25
 80146e4:	9d17      	ldr	r5, [sp, #92]	; 0x5c
 80146e6:	bf44      	itt	mi
 80146e8:	f5a1 7100 	submi.w	r1, r1, #512	; 0x200
 80146ec:	b209      	sxthmi	r1, r1
 80146ee:	1945      	adds	r5, r0, r5
 80146f0:	1a6d      	subs	r5, r5, r1
 80146f2:	9929      	ldr	r1, [sp, #164]	; 0xa4
 80146f4:	b2ad      	uxth	r5, r5
 80146f6:	f9b1 1002 	ldrsh.w	r1, [r1, #2]
 80146fa:	fa0f fa85 	sxth.w	sl, r5
 80146fe:	4551      	cmp	r1, sl
 8014700:	dd3c      	ble.n	801477c <_ZN8touchgfx3LCD18drawStringInternalEPtPKNS_4RectEssRS3_PKNS0_13StringVisualsEhRNS_12TextProviderEib+0x298>
 8014702:	0112      	lsls	r2, r2, #4
 8014704:	79d8      	ldrb	r0, [r3, #7]
 8014706:	f402 7280 	and.w	r2, r2, #256	; 0x100
 801470a:	4302      	orrs	r2, r0
 801470c:	4492      	add	sl, r2
 801470e:	4551      	cmp	r1, sl
 8014710:	dc30      	bgt.n	8014774 <_ZN8touchgfx3LCD18drawStringInternalEPtPKNS_4RectEssRS3_PKNS0_13StringVisualsEhRNS_12TextProviderEib+0x290>
 8014712:	1b4d      	subs	r5, r1, r5
 8014714:	b22d      	sxth	r5, r5
 8014716:	468a      	mov	sl, r1
 8014718:	9319      	str	r3, [sp, #100]	; 0x64
 801471a:	9b11      	ldr	r3, [sp, #68]	; 0x44
 801471c:	f8d8 0000 	ldr.w	r0, [r8]
 8014720:	681a      	ldr	r2, [r3, #0]
 8014722:	6801      	ldr	r1, [r0, #0]
 8014724:	6cd3      	ldr	r3, [r2, #76]	; 0x4c
 8014726:	9a1d      	ldr	r2, [sp, #116]	; 0x74
 8014728:	9313      	str	r3, [sp, #76]	; 0x4c
 801472a:	9218      	str	r2, [sp, #96]	; 0x60
 801472c:	6c09      	ldr	r1, [r1, #64]	; 0x40
 801472e:	4788      	blx	r1
 8014730:	f898 1006 	ldrb.w	r1, [r8, #6]
 8014734:	910b      	str	r1, [sp, #44]	; 0x2c
 8014736:	f898 100e 	ldrb.w	r1, [r8, #14]
 801473a:	910a      	str	r1, [sp, #40]	; 0x28
 801473c:	f89d 106f 	ldrb.w	r1, [sp, #111]	; 0x6f
 8014740:	9109      	str	r1, [sp, #36]	; 0x24
 8014742:	f8d8 1008 	ldr.w	r1, [r8, #8]
 8014746:	9b19      	ldr	r3, [sp, #100]	; 0x64
 8014748:	9305      	str	r3, [sp, #20]
 801474a:	b2ad      	uxth	r5, r5
 801474c:	e9cd 0107 	strd	r0, r1, [sp, #28]
 8014750:	e9cd 7502 	strd	r7, r5, [sp, #8]
 8014754:	9b29      	ldr	r3, [sp, #164]	; 0xa4
 8014756:	9304      	str	r3, [sp, #16]
 8014758:	4437      	add	r7, r6
 801475a:	9a18      	ldr	r2, [sp, #96]	; 0x60
 801475c:	9b12      	ldr	r3, [sp, #72]	; 0x48
 801475e:	9206      	str	r2, [sp, #24]
 8014760:	b23f      	sxth	r7, r7
 8014762:	f8cd a004 	str.w	sl, [sp, #4]
 8014766:	9700      	str	r7, [sp, #0]
 8014768:	681a      	ldr	r2, [r3, #0]
 801476a:	9916      	ldr	r1, [sp, #88]	; 0x58
 801476c:	685b      	ldr	r3, [r3, #4]
 801476e:	9811      	ldr	r0, [sp, #68]	; 0x44
 8014770:	9d13      	ldr	r5, [sp, #76]	; 0x4c
 8014772:	47a8      	blx	r5
 8014774:	9b0e      	ldr	r3, [sp, #56]	; 0x38
 8014776:	3301      	adds	r3, #1
 8014778:	930e      	str	r3, [sp, #56]	; 0x38
 801477a:	e6e1      	b.n	8014540 <_ZN8touchgfx3LCD18drawStringInternalEPtPKNS_4RectEssRS3_PKNS0_13StringVisualsEhRNS_12TextProviderEib+0x5c>
 801477c:	2500      	movs	r5, #0
 801477e:	e7cb      	b.n	8014718 <_ZN8touchgfx3LCD18drawStringInternalEPtPKNS_4RectEssRS3_PKNS0_13StringVisualsEhRNS_12TextProviderEib+0x234>
 8014780:	9d0e      	ldr	r5, [sp, #56]	; 0x38
 8014782:	9b2d      	ldr	r3, [sp, #180]	; 0xb4
 8014784:	3501      	adds	r5, #1
 8014786:	429d      	cmp	r5, r3
 8014788:	f6bf af75 	bge.w	8014676 <_ZN8touchgfx3LCD18drawStringInternalEPtPKNS_4RectEssRS3_PKNS0_13StringVisualsEhRNS_12TextProviderEib+0x192>
 801478c:	4659      	mov	r1, fp
 801478e:	982c      	ldr	r0, [sp, #176]	; 0xb0
 8014790:	f7f3 fc5a 	bl	8008048 <_ZN8touchgfx12TextProvider15getNextLigatureEh>
 8014794:	4604      	mov	r4, r0
 8014796:	b110      	cbz	r0, 801479e <_ZN8touchgfx3LCD18drawStringInternalEPtPKNS_4RectEssRS3_PKNS0_13StringVisualsEhRNS_12TextProviderEib+0x2ba>
 8014798:	280a      	cmp	r0, #10
 801479a:	d1f2      	bne.n	8014782 <_ZN8touchgfx3LCD18drawStringInternalEPtPKNS_4RectEssRS3_PKNS0_13StringVisualsEhRNS_12TextProviderEib+0x29e>
 801479c:	e76a      	b.n	8014674 <_ZN8touchgfx3LCD18drawStringInternalEPtPKNS_4RectEssRS3_PKNS0_13StringVisualsEhRNS_12TextProviderEib+0x190>
 801479e:	2400      	movs	r4, #0
 80147a0:	e769      	b.n	8014676 <_ZN8touchgfx3LCD18drawStringInternalEPtPKNS_4RectEssRS3_PKNS0_13StringVisualsEhRNS_12TextProviderEib+0x192>
 80147a2:	f1bb 0f00 	cmp.w	fp, #0
 80147a6:	f43f af5a 	beq.w	801465e <_ZN8touchgfx3LCD18drawStringInternalEPtPKNS_4RectEssRS3_PKNS0_13StringVisualsEhRNS_12TextProviderEib+0x17a>
 80147aa:	e775      	b.n	8014698 <_ZN8touchgfx3LCD18drawStringInternalEPtPKNS_4RectEssRS3_PKNS0_13StringVisualsEhRNS_12TextProviderEib+0x1b4>

080147ac <_ZN8touchgfx3LCD22WideTextInternalStruct7addWordEttt>:
 80147ac:	b530      	push	{r4, r5, lr}
 80147ae:	8ac4      	ldrh	r4, [r0, #22]
 80147b0:	8b45      	ldrh	r5, [r0, #26]
 80147b2:	8343      	strh	r3, [r0, #26]
 80147b4:	442c      	add	r4, r5
 80147b6:	1ae4      	subs	r4, r4, r3
 80147b8:	82c4      	strh	r4, [r0, #22]
 80147ba:	8b83      	ldrh	r3, [r0, #28]
 80147bc:	8b04      	ldrh	r4, [r0, #24]
 80147be:	4422      	add	r2, r4
 80147c0:	440c      	add	r4, r1
 80147c2:	1a59      	subs	r1, r3, r1
 80147c4:	83c2      	strh	r2, [r0, #30]
 80147c6:	8304      	strh	r4, [r0, #24]
 80147c8:	8381      	strh	r1, [r0, #28]
 80147ca:	bd30      	pop	{r4, r5, pc}

080147cc <_ZN8touchgfx3LCD22WideTextInternalStruct23scanStringLengthForLineEv>:
 80147cc:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 80147d0:	4604      	mov	r4, r0
 80147d2:	8a47      	ldrh	r7, [r0, #18]
 80147d4:	68c0      	ldr	r0, [r0, #12]
 80147d6:	6803      	ldr	r3, [r0, #0]
 80147d8:	b085      	sub	sp, #20
 80147da:	6b9b      	ldr	r3, [r3, #56]	; 0x38
 80147dc:	4798      	blx	r3
 80147de:	f9b4 6014 	ldrsh.w	r6, [r4, #20]
 80147e2:	7a63      	ldrb	r3, [r4, #9]
 80147e4:	eb06 0640 	add.w	r6, r6, r0, lsl #1
 80147e8:	42b7      	cmp	r7, r6
 80147ea:	f103 33ff 	add.w	r3, r3, #4294967295
 80147ee:	bfac      	ite	ge
 80147f0:	f04f 0900 	movge.w	r9, #0
 80147f4:	f04f 0901 	movlt.w	r9, #1
 80147f8:	2b05      	cmp	r3, #5
 80147fa:	d804      	bhi.n	8014806 <_ZN8touchgfx3LCD22WideTextInternalStruct23scanStringLengthForLineEv+0x3a>
 80147fc:	e8df f003 	tbb	[pc, r3]
 8014800:	470e0854 	.word	0x470e0854
 8014804:	4c4c      	.short	0x4c4c
 8014806:	2500      	movs	r5, #0
 8014808:	46a9      	mov	r9, r5
 801480a:	462e      	mov	r6, r5
 801480c:	462f      	mov	r7, r5
 801480e:	e00d      	b.n	801482c <_ZN8touchgfx3LCD22WideTextInternalStruct23scanStringLengthForLineEv+0x60>
 8014810:	42b7      	cmp	r7, r6
 8014812:	bfb4      	ite	lt
 8014814:	2600      	movlt	r6, #0
 8014816:	2601      	movge	r6, #1
 8014818:	2500      	movs	r5, #0
 801481a:	e7f7      	b.n	801480c <_ZN8touchgfx3LCD22WideTextInternalStruct23scanStringLengthForLineEv+0x40>
 801481c:	42b7      	cmp	r7, r6
 801481e:	464d      	mov	r5, r9
 8014820:	f04f 0900 	mov.w	r9, #0
 8014824:	bfb4      	ite	lt
 8014826:	2600      	movlt	r6, #0
 8014828:	2601      	movge	r6, #1
 801482a:	464f      	mov	r7, r9
 801482c:	f04f 0800 	mov.w	r8, #0
 8014830:	f8a4 8016 	strh.w	r8, [r4, #22]
 8014834:	f8a4 8018 	strh.w	r8, [r4, #24]
 8014838:	f8cd 8004 	str.w	r8, [sp, #4]
 801483c:	2300      	movs	r3, #0
 801483e:	9303      	str	r3, [sp, #12]
 8014840:	8823      	ldrh	r3, [r4, #0]
 8014842:	2b20      	cmp	r3, #32
 8014844:	d034      	beq.n	80148b0 <_ZN8touchgfx3LCD22WideTextInternalStruct23scanStringLengthForLineEv+0xe4>
 8014846:	f242 010b 	movw	r1, #8203	; 0x200b
 801484a:	1a5a      	subs	r2, r3, r1
 801484c:	f1d2 0a00 	rsbs	sl, r2, #0
 8014850:	eb4a 0a02 	adc.w	sl, sl, r2
 8014854:	f64f 62ff 	movw	r2, #65279	; 0xfeff
 8014858:	4293      	cmp	r3, r2
 801485a:	d009      	beq.n	8014870 <_ZN8touchgfx3LCD22WideTextInternalStruct23scanStringLengthForLineEv+0xa4>
 801485c:	428b      	cmp	r3, r1
 801485e:	9a01      	ldr	r2, [sp, #4]
 8014860:	bf18      	it	ne
 8014862:	461a      	movne	r2, r3
 8014864:	9201      	str	r2, [sp, #4]
 8014866:	bf0c      	ite	eq
 8014868:	f04f 0a01 	moveq.w	sl, #1
 801486c:	f04f 0a00 	movne.w	sl, #0
 8014870:	ab03      	add	r3, sp, #12
 8014872:	68e2      	ldr	r2, [r4, #12]
 8014874:	7a21      	ldrb	r1, [r4, #8]
 8014876:	6860      	ldr	r0, [r4, #4]
 8014878:	f002 ff4a 	bl	8017710 <_ZN8touchgfx12TextProvider15getNextLigatureEhPKNS_4FontERPKNS_9GlyphNodeE>
 801487c:	8020      	strh	r0, [r4, #0]
 801487e:	b9d8      	cbnz	r0, 80148b8 <_ZN8touchgfx3LCD22WideTextInternalStruct23scanStringLengthForLineEv+0xec>
 8014880:	8ba2      	ldrh	r2, [r4, #28]
 8014882:	2300      	movs	r3, #0
 8014884:	4611      	mov	r1, r2
 8014886:	4620      	mov	r0, r4
 8014888:	f7ff ff90 	bl	80147ac <_ZN8touchgfx3LCD22WideTextInternalStruct7addWordEttt>
 801488c:	e06e      	b.n	801496c <_ZN8touchgfx3LCD22WideTextInternalStruct23scanStringLengthForLineEv+0x1a0>
 801488e:	2500      	movs	r5, #0
 8014890:	46a9      	mov	r9, r5
 8014892:	462e      	mov	r6, r5
 8014894:	2701      	movs	r7, #1
 8014896:	e7c9      	b.n	801482c <_ZN8touchgfx3LCD22WideTextInternalStruct23scanStringLengthForLineEv+0x60>
 8014898:	42b7      	cmp	r7, r6
 801489a:	f04f 0500 	mov.w	r5, #0
 801489e:	bfb4      	ite	lt
 80148a0:	2700      	movlt	r7, #0
 80148a2:	2701      	movge	r7, #1
 80148a4:	462e      	mov	r6, r5
 80148a6:	e7c1      	b.n	801482c <_ZN8touchgfx3LCD22WideTextInternalStruct23scanStringLengthForLineEv+0x60>
 80148a8:	2500      	movs	r5, #0
 80148aa:	46a9      	mov	r9, r5
 80148ac:	2601      	movs	r6, #1
 80148ae:	e7ad      	b.n	801480c <_ZN8touchgfx3LCD22WideTextInternalStruct23scanStringLengthForLineEv+0x40>
 80148b0:	9301      	str	r3, [sp, #4]
 80148b2:	f04f 0a01 	mov.w	sl, #1
 80148b6:	e7db      	b.n	8014870 <_ZN8touchgfx3LCD22WideTextInternalStruct23scanStringLengthForLineEv+0xa4>
 80148b8:	8b63      	ldrh	r3, [r4, #26]
 80148ba:	280a      	cmp	r0, #10
 80148bc:	f103 0301 	add.w	r3, r3, #1
 80148c0:	8363      	strh	r3, [r4, #26]
 80148c2:	d0dd      	beq.n	8014880 <_ZN8touchgfx3LCD22WideTextInternalStruct23scanStringLengthForLineEv+0xb4>
 80148c4:	9a03      	ldr	r2, [sp, #12]
 80148c6:	bb62      	cbnz	r2, 8014922 <_ZN8touchgfx3LCD22WideTextInternalStruct23scanStringLengthForLineEv+0x156>
 80148c8:	f64f 63ff 	movw	r3, #65279	; 0xfeff
 80148cc:	4298      	cmp	r0, r3
 80148ce:	d003      	beq.n	80148d8 <_ZN8touchgfx3LCD22WideTextInternalStruct23scanStringLengthForLineEv+0x10c>
 80148d0:	f242 030b 	movw	r3, #8203	; 0x200b
 80148d4:	4298      	cmp	r0, r3
 80148d6:	d1b1      	bne.n	801483c <_ZN8touchgfx3LCD22WideTextInternalStruct23scanStringLengthForLineEv+0x70>
 80148d8:	8823      	ldrh	r3, [r4, #0]
 80148da:	8ba1      	ldrh	r1, [r4, #28]
 80148dc:	2b20      	cmp	r3, #32
 80148de:	d003      	beq.n	80148e8 <_ZN8touchgfx3LCD22WideTextInternalStruct23scanStringLengthForLineEv+0x11c>
 80148e0:	f242 000b 	movw	r0, #8203	; 0x200b
 80148e4:	4283      	cmp	r3, r0
 80148e6:	d131      	bne.n	801494c <_ZN8touchgfx3LCD22WideTextInternalStruct23scanStringLengthForLineEv+0x180>
 80148e8:	f1ba 0f00 	cmp.w	sl, #0
 80148ec:	bf0a      	itet	eq
 80148ee:	4688      	moveq	r8, r1
 80148f0:	4650      	movne	r0, sl
 80148f2:	2001      	moveq	r0, #1
 80148f4:	440a      	add	r2, r1
 80148f6:	8b23      	ldrh	r3, [r4, #24]
 80148f8:	f8b4 c010 	ldrh.w	ip, [r4, #16]
 80148fc:	b292      	uxth	r2, r2
 80148fe:	83a2      	strh	r2, [r4, #28]
 8014900:	4413      	add	r3, r2
 8014902:	f1b9 0f00 	cmp.w	r9, #0
 8014906:	d102      	bne.n	801490e <_ZN8touchgfx3LCD22WideTextInternalStruct23scanStringLengthForLineEv+0x142>
 8014908:	2d00      	cmp	r5, #0
 801490a:	d042      	beq.n	8014992 <_ZN8touchgfx3LCD22WideTextInternalStruct23scanStringLengthForLineEv+0x1c6>
 801490c:	b300      	cbz	r0, 8014950 <_ZN8touchgfx3LCD22WideTextInternalStruct23scanStringLengthForLineEv+0x184>
 801490e:	8c21      	ldrh	r1, [r4, #32]
 8014910:	4419      	add	r1, r3
 8014912:	458c      	cmp	ip, r1
 8014914:	da37      	bge.n	8014986 <_ZN8touchgfx3LCD22WideTextInternalStruct23scanStringLengthForLineEv+0x1ba>
 8014916:	8ae1      	ldrh	r1, [r4, #22]
 8014918:	2900      	cmp	r1, #0
 801491a:	d034      	beq.n	8014986 <_ZN8touchgfx3LCD22WideTextInternalStruct23scanStringLengthForLineEv+0x1ba>
 801491c:	4563      	cmp	r3, ip
 801491e:	dd8d      	ble.n	801483c <_ZN8touchgfx3LCD22WideTextInternalStruct23scanStringLengthForLineEv+0x70>
 8014920:	e01d      	b.n	801495e <_ZN8touchgfx3LCD22WideTextInternalStruct23scanStringLengthForLineEv+0x192>
 8014922:	8893      	ldrh	r3, [r2, #4]
 8014924:	8023      	strh	r3, [r4, #0]
 8014926:	f892 b00d 	ldrb.w	fp, [r2, #13]
 801492a:	9901      	ldr	r1, [sp, #4]
 801492c:	ea4f 0b4b 	mov.w	fp, fp, lsl #1
 8014930:	f40b 7080 	and.w	r0, fp, #256	; 0x100
 8014934:	f892 b00a 	ldrb.w	fp, [r2, #10]
 8014938:	ea4b 0b00 	orr.w	fp, fp, r0
 801493c:	68e0      	ldr	r0, [r4, #12]
 801493e:	6803      	ldr	r3, [r0, #0]
 8014940:	6c5b      	ldr	r3, [r3, #68]	; 0x44
 8014942:	4798      	blx	r3
 8014944:	eb0b 0200 	add.w	r2, fp, r0
 8014948:	b292      	uxth	r2, r2
 801494a:	e7c5      	b.n	80148d8 <_ZN8touchgfx3LCD22WideTextInternalStruct23scanStringLengthForLineEv+0x10c>
 801494c:	2000      	movs	r0, #0
 801494e:	e7d1      	b.n	80148f4 <_ZN8touchgfx3LCD22WideTextInternalStruct23scanStringLengthForLineEv+0x128>
 8014950:	4563      	cmp	r3, ip
 8014952:	f77f af73 	ble.w	801483c <_ZN8touchgfx3LCD22WideTextInternalStruct23scanStringLengthForLineEv+0x70>
 8014956:	8ae3      	ldrh	r3, [r4, #22]
 8014958:	2b00      	cmp	r3, #0
 801495a:	f43f af6f 	beq.w	801483c <_ZN8touchgfx3LCD22WideTextInternalStruct23scanStringLengthForLineEv+0x70>
 801495e:	2301      	movs	r3, #1
 8014960:	f884 3022 	strb.w	r3, [r4, #34]	; 0x22
 8014964:	8c22      	ldrh	r2, [r4, #32]
 8014966:	8be3      	ldrh	r3, [r4, #30]
 8014968:	4413      	add	r3, r2
 801496a:	83e3      	strh	r3, [r4, #30]
 801496c:	68e0      	ldr	r0, [r4, #12]
 801496e:	6803      	ldr	r3, [r0, #0]
 8014970:	6b9b      	ldr	r3, [r3, #56]	; 0x38
 8014972:	4798      	blx	r3
 8014974:	f9b4 3014 	ldrsh.w	r3, [r4, #20]
 8014978:	4418      	add	r0, r3
 801497a:	8a63      	ldrh	r3, [r4, #18]
 801497c:	1a18      	subs	r0, r3, r0
 801497e:	8260      	strh	r0, [r4, #18]
 8014980:	b005      	add	sp, #20
 8014982:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
 8014986:	2300      	movs	r3, #0
 8014988:	4611      	mov	r1, r2
 801498a:	4620      	mov	r0, r4
 801498c:	f7ff ff0e 	bl	80147ac <_ZN8touchgfx3LCD22WideTextInternalStruct7addWordEttt>
 8014990:	e754      	b.n	801483c <_ZN8touchgfx3LCD22WideTextInternalStruct23scanStringLengthForLineEv+0x70>
 8014992:	4563      	cmp	r3, ip
 8014994:	dd14      	ble.n	80149c0 <_ZN8touchgfx3LCD22WideTextInternalStruct23scanStringLengthForLineEv+0x1f4>
 8014996:	b117      	cbz	r7, 801499e <_ZN8touchgfx3LCD22WideTextInternalStruct23scanStringLengthForLineEv+0x1d2>
 8014998:	2301      	movs	r3, #1
 801499a:	460a      	mov	r2, r1
 801499c:	e772      	b.n	8014884 <_ZN8touchgfx3LCD22WideTextInternalStruct23scanStringLengthForLineEv+0xb8>
 801499e:	2e00      	cmp	r6, #0
 80149a0:	f43f af4c 	beq.w	801483c <_ZN8touchgfx3LCD22WideTextInternalStruct23scanStringLengthForLineEv+0x70>
 80149a4:	2800      	cmp	r0, #0
 80149a6:	f47f af49 	bne.w	801483c <_ZN8touchgfx3LCD22WideTextInternalStruct23scanStringLengthForLineEv+0x70>
 80149aa:	f1ba 0f00 	cmp.w	sl, #0
 80149ae:	d002      	beq.n	80149b6 <_ZN8touchgfx3LCD22WideTextInternalStruct23scanStringLengthForLineEv+0x1ea>
 80149b0:	2301      	movs	r3, #1
 80149b2:	4642      	mov	r2, r8
 80149b4:	e767      	b.n	8014886 <_ZN8touchgfx3LCD22WideTextInternalStruct23scanStringLengthForLineEv+0xba>
 80149b6:	8ae3      	ldrh	r3, [r4, #22]
 80149b8:	2b00      	cmp	r3, #0
 80149ba:	f43f af3f 	beq.w	801483c <_ZN8touchgfx3LCD22WideTextInternalStruct23scanStringLengthForLineEv+0x70>
 80149be:	e7d5      	b.n	801496c <_ZN8touchgfx3LCD22WideTextInternalStruct23scanStringLengthForLineEv+0x1a0>
 80149c0:	2800      	cmp	r0, #0
 80149c2:	f47f af3b 	bne.w	801483c <_ZN8touchgfx3LCD22WideTextInternalStruct23scanStringLengthForLineEv+0x70>
 80149c6:	f1ba 0f00 	cmp.w	sl, #0
 80149ca:	f43f af37 	beq.w	801483c <_ZN8touchgfx3LCD22WideTextInternalStruct23scanStringLengthForLineEv+0x70>
 80149ce:	2301      	movs	r3, #1
 80149d0:	4642      	mov	r2, r8
 80149d2:	e7da      	b.n	801498a <_ZN8touchgfx3LCD22WideTextInternalStruct23scanStringLengthForLineEv+0x1be>

080149d4 <_ZN8touchgfx3LCD11getNumLinesERNS_12TextProviderENS_14WideTextActionEhPKNS_4FontEs>:
 80149d4:	b5f0      	push	{r4, r5, r6, r7, lr}
 80149d6:	4605      	mov	r5, r0
 80149d8:	b08f      	sub	sp, #60	; 0x3c
 80149da:	4617      	mov	r7, r2
 80149dc:	461c      	mov	r4, r3
 80149de:	460e      	mov	r6, r1
 80149e0:	b1d1      	cbz	r1, 8014a18 <_ZN8touchgfx3LCD11getNumLinesERNS_12TextProviderENS_14WideTextActionEhPKNS_4FontEs+0x44>
 80149e2:	681b      	ldr	r3, [r3, #0]
 80149e4:	4620      	mov	r0, r4
 80149e6:	6b9b      	ldr	r3, [r3, #56]	; 0x38
 80149e8:	4798      	blx	r3
 80149ea:	4240      	negs	r0, r0
 80149ec:	b200      	sxth	r0, r0
 80149ee:	e9cd 4001 	strd	r4, r0, [sp, #4]
 80149f2:	9603      	str	r6, [sp, #12]
 80149f4:	9700      	str	r7, [sp, #0]
 80149f6:	f64f 73ff 	movw	r3, #65535	; 0xffff
 80149fa:	f8bd 2050 	ldrh.w	r2, [sp, #80]	; 0x50
 80149fe:	4629      	mov	r1, r5
 8014a00:	a805      	add	r0, sp, #20
 8014a02:	f7ff fcbf 	bl	8014384 <_ZN8touchgfx3LCD22WideTextInternalStructC1ERNS_12TextProviderEtthPKNS_4FontEsNS_14WideTextActionE>
 8014a06:	2401      	movs	r4, #1
 8014a08:	a805      	add	r0, sp, #20
 8014a0a:	f7ff fedf 	bl	80147cc <_ZN8touchgfx3LCD22WideTextInternalStruct23scanStringLengthForLineEv>
 8014a0e:	f8bd 3014 	ldrh.w	r3, [sp, #20]
 8014a12:	b163      	cbz	r3, 8014a2e <_ZN8touchgfx3LCD11getNumLinesERNS_12TextProviderENS_14WideTextActionEhPKNS_4FontEs+0x5a>
 8014a14:	3401      	adds	r4, #1
 8014a16:	e7f7      	b.n	8014a08 <_ZN8touchgfx3LCD11getNumLinesERNS_12TextProviderENS_14WideTextActionEhPKNS_4FontEs+0x34>
 8014a18:	f002 ff48 	bl	80178ac <_ZN8touchgfx12TextProvider11getNextCharEv>
 8014a1c:	2401      	movs	r4, #1
 8014a1e:	280a      	cmp	r0, #10
 8014a20:	4628      	mov	r0, r5
 8014a22:	bf08      	it	eq
 8014a24:	3401      	addeq	r4, #1
 8014a26:	f002 ff41 	bl	80178ac <_ZN8touchgfx12TextProvider11getNextCharEv>
 8014a2a:	2800      	cmp	r0, #0
 8014a2c:	d1f7      	bne.n	8014a1e <_ZN8touchgfx3LCD11getNumLinesERNS_12TextProviderENS_14WideTextActionEhPKNS_4FontEs+0x4a>
 8014a2e:	b2a0      	uxth	r0, r4
 8014a30:	b00f      	add	sp, #60	; 0x3c
 8014a32:	bdf0      	pop	{r4, r5, r6, r7, pc}

08014a34 <_ZN8touchgfx3LCD13drawStringLTRERKNS_4RectES3_RKNS0_13StringVisualsEPKtSt9__va_list>:
 8014a34:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 8014a38:	b0e3      	sub	sp, #396	; 0x18c
 8014a3a:	461c      	mov	r4, r3
 8014a3c:	9b6c      	ldr	r3, [sp, #432]	; 0x1b0
 8014a3e:	4683      	mov	fp, r0
 8014a40:	4688      	mov	r8, r1
 8014a42:	2b00      	cmp	r3, #0
 8014a44:	f000 8112 	beq.w	8014c6c <_ZN8touchgfx3LCD13drawStringLTRERKNS_4RectES3_RKNS0_13StringVisualsEPKtSt9__va_list+0x238>
 8014a48:	6823      	ldr	r3, [r4, #0]
 8014a4a:	2b00      	cmp	r3, #0
 8014a4c:	f000 810e 	beq.w	8014c6c <_ZN8touchgfx3LCD13drawStringLTRERKNS_4RectES3_RKNS0_13StringVisualsEPKtSt9__va_list+0x238>
 8014a50:	7ba3      	ldrb	r3, [r4, #14]
 8014a52:	2b00      	cmp	r3, #0
 8014a54:	f000 810a 	beq.w	8014c6c <_ZN8touchgfx3LCD13drawStringLTRERKNS_4RectES3_RKNS0_13StringVisualsEPKtSt9__va_list+0x238>
 8014a58:	6810      	ldr	r0, [r2, #0]
 8014a5a:	6851      	ldr	r1, [r2, #4]
 8014a5c:	f9b8 2004 	ldrsh.w	r2, [r8, #4]
 8014a60:	f8ad 2034 	strh.w	r2, [sp, #52]	; 0x34
 8014a64:	ad0a      	add	r5, sp, #40	; 0x28
 8014a66:	462b      	mov	r3, r5
 8014a68:	c303      	stmia	r3!, {r0, r1}
 8014a6a:	2100      	movs	r1, #0
 8014a6c:	f9b8 3006 	ldrsh.w	r3, [r8, #6]
 8014a70:	910c      	str	r1, [sp, #48]	; 0x30
 8014a72:	79a2      	ldrb	r2, [r4, #6]
 8014a74:	f8ad 3036 	strh.w	r3, [sp, #54]	; 0x36
 8014a78:	a90c      	add	r1, sp, #48	; 0x30
 8014a7a:	4628      	mov	r0, r5
 8014a7c:	f7ff fd01 	bl	8014482 <_ZN8touchgfx3LCD10rotateRectERNS_4RectERKS1_NS_12TextRotationE>
 8014a80:	a90c      	add	r1, sp, #48	; 0x30
 8014a82:	4608      	mov	r0, r1
 8014a84:	79a2      	ldrb	r2, [r4, #6]
 8014a86:	f7ff fcfc 	bl	8014482 <_ZN8touchgfx3LCD10rotateRectERNS_4RectERKS1_NS_12TextRotationE>
 8014a8a:	a817      	add	r0, sp, #92	; 0x5c
 8014a8c:	f002 fae2 	bl	8017054 <_ZN8touchgfx12TextProviderC1Ev>
 8014a90:	6820      	ldr	r0, [r4, #0]
 8014a92:	6803      	ldr	r3, [r0, #0]
 8014a94:	6cdb      	ldr	r3, [r3, #76]	; 0x4c
 8014a96:	4798      	blx	r3
 8014a98:	4606      	mov	r6, r0
 8014a9a:	6820      	ldr	r0, [r4, #0]
 8014a9c:	6803      	ldr	r3, [r0, #0]
 8014a9e:	6d1b      	ldr	r3, [r3, #80]	; 0x50
 8014aa0:	4798      	blx	r3
 8014aa2:	4633      	mov	r3, r6
 8014aa4:	9a6d      	ldr	r2, [sp, #436]	; 0x1b4
 8014aa6:	996c      	ldr	r1, [sp, #432]	; 0x1b0
 8014aa8:	9000      	str	r0, [sp, #0]
 8014aaa:	a817      	add	r0, sp, #92	; 0x5c
 8014aac:	f002 fb2d 	bl	801710a <_ZN8touchgfx12TextProvider10initializeEPKtSt9__va_listS2_PKNS_24FontContextualFormsTableE>
 8014ab0:	6820      	ldr	r0, [r4, #0]
 8014ab2:	f894 a004 	ldrb.w	sl, [r4, #4]
 8014ab6:	6803      	ldr	r3, [r0, #0]
 8014ab8:	6b9b      	ldr	r3, [r3, #56]	; 0x38
 8014aba:	4798      	blx	r3
 8014abc:	f9b4 600c 	ldrsh.w	r6, [r4, #12]
 8014ac0:	6823      	ldr	r3, [r4, #0]
 8014ac2:	4607      	mov	r7, r0
 8014ac4:	4406      	add	r6, r0
 8014ac6:	a830      	add	r0, sp, #192	; 0xc0
 8014ac8:	f893 9009 	ldrb.w	r9, [r3, #9]
 8014acc:	f002 fac2 	bl	8017054 <_ZN8touchgfx12TextProviderC1Ev>
 8014ad0:	7c23      	ldrb	r3, [r4, #16]
 8014ad2:	b17b      	cbz	r3, 8014af4 <_ZN8touchgfx3LCD13drawStringLTRERKNS_4RectES3_RKNS0_13StringVisualsEPKtSt9__va_list+0xc0>
 8014ad4:	6820      	ldr	r0, [r4, #0]
 8014ad6:	6803      	ldr	r3, [r0, #0]
 8014ad8:	6cdb      	ldr	r3, [r3, #76]	; 0x4c
 8014ada:	4798      	blx	r3
 8014adc:	9009      	str	r0, [sp, #36]	; 0x24
 8014ade:	6820      	ldr	r0, [r4, #0]
 8014ae0:	6802      	ldr	r2, [r0, #0]
 8014ae2:	6d12      	ldr	r2, [r2, #80]	; 0x50
 8014ae4:	4790      	blx	r2
 8014ae6:	9b09      	ldr	r3, [sp, #36]	; 0x24
 8014ae8:	9000      	str	r0, [sp, #0]
 8014aea:	9a6d      	ldr	r2, [sp, #436]	; 0x1b4
 8014aec:	996c      	ldr	r1, [sp, #432]	; 0x1b0
 8014aee:	a830      	add	r0, sp, #192	; 0xc0
 8014af0:	f002 fb0b 	bl	801710a <_ZN8touchgfx12TextProvider10initializeEPKtSt9__va_listS2_PKNS_24FontContextualFormsTableE>
 8014af4:	f8bd 1034 	ldrh.w	r1, [sp, #52]	; 0x34
 8014af8:	7be2      	ldrb	r2, [r4, #15]
 8014afa:	f8bd 3036 	ldrh.w	r3, [sp, #54]	; 0x36
 8014afe:	1a8a      	subs	r2, r1, r2
 8014b00:	7c21      	ldrb	r1, [r4, #16]
 8014b02:	9103      	str	r1, [sp, #12]
 8014b04:	f9b4 100c 	ldrsh.w	r1, [r4, #12]
 8014b08:	9102      	str	r1, [sp, #8]
 8014b0a:	6821      	ldr	r1, [r4, #0]
 8014b0c:	9101      	str	r1, [sp, #4]
 8014b0e:	7961      	ldrb	r1, [r4, #5]
 8014b10:	9100      	str	r1, [sp, #0]
 8014b12:	b292      	uxth	r2, r2
 8014b14:	a930      	add	r1, sp, #192	; 0xc0
 8014b16:	a80e      	add	r0, sp, #56	; 0x38
 8014b18:	f7ff fc34 	bl	8014384 <_ZN8touchgfx3LCD22WideTextInternalStructC1ERNS_12TextProviderEtthPKNS_4FontEsNS_14WideTextActionE>
 8014b1c:	2e00      	cmp	r6, #0
 8014b1e:	dc5b      	bgt.n	8014bd8 <_ZN8touchgfx3LCD13drawStringLTRERKNS_4RectES3_RKNS0_13StringVisualsEPKtSt9__va_list+0x1a4>
 8014b20:	af17      	add	r7, sp, #92	; 0x5c
 8014b22:	f04f 0900 	mov.w	r9, #0
 8014b26:	7c23      	ldrb	r3, [r4, #16]
 8014b28:	2b00      	cmp	r3, #0
 8014b2a:	f000 80b1 	beq.w	8014c90 <_ZN8touchgfx3LCD13drawStringLTRERKNS_4RectES3_RKNS0_13StringVisualsEPKtSt9__va_list+0x25c>
 8014b2e:	a80e      	add	r0, sp, #56	; 0x38
 8014b30:	f7ff fe4c 	bl	80147cc <_ZN8touchgfx3LCD22WideTextInternalStruct23scanStringLengthForLineEv>
 8014b34:	f1ba 0f00 	cmp.w	sl, #0
 8014b38:	f000 80a5 	beq.w	8014c86 <_ZN8touchgfx3LCD13drawStringLTRERKNS_4RectES3_RKNS0_13StringVisualsEPKtSt9__va_list+0x252>
 8014b3c:	7c23      	ldrb	r3, [r4, #16]
 8014b3e:	9309      	str	r3, [sp, #36]	; 0x24
 8014b40:	2264      	movs	r2, #100	; 0x64
 8014b42:	4639      	mov	r1, r7
 8014b44:	a849      	add	r0, sp, #292	; 0x124
 8014b46:	f015 fda8 	bl	802a69a <memcpy>
 8014b4a:	9b09      	ldr	r3, [sp, #36]	; 0x24
 8014b4c:	2b00      	cmp	r3, #0
 8014b4e:	f000 80a7 	beq.w	8014ca0 <_ZN8touchgfx3LCD13drawStringLTRERKNS_4RectES3_RKNS0_13StringVisualsEPKtSt9__va_list+0x26c>
 8014b52:	f9bd 3056 	ldrsh.w	r3, [sp, #86]	; 0x56
 8014b56:	7922      	ldrb	r2, [r4, #4]
 8014b58:	2a01      	cmp	r2, #1
 8014b5a:	f040 808a 	bne.w	8014c72 <_ZN8touchgfx3LCD13drawStringLTRERKNS_4RectES3_RKNS0_13StringVisualsEPKtSt9__va_list+0x23e>
 8014b5e:	f9bd 0034 	ldrsh.w	r0, [sp, #52]	; 0x34
 8014b62:	1ac0      	subs	r0, r0, r3
 8014b64:	2302      	movs	r3, #2
 8014b66:	fb90 f0f3 	sdiv	r0, r0, r3
 8014b6a:	b200      	sxth	r0, r0
 8014b6c:	7c23      	ldrb	r3, [r4, #16]
 8014b6e:	2b00      	cmp	r3, #0
 8014b70:	f000 808b 	beq.w	8014c8a <_ZN8touchgfx3LCD13drawStringLTRERKNS_4RectES3_RKNS0_13StringVisualsEPKtSt9__va_list+0x256>
 8014b74:	f8bd 204e 	ldrh.w	r2, [sp, #78]	; 0x4e
 8014b78:	f89d 105a 	ldrb.w	r1, [sp, #90]	; 0x5a
 8014b7c:	f9bd 3032 	ldrsh.w	r3, [sp, #50]	; 0x32
 8014b80:	e9cd 2105 	strd	r2, r1, [sp, #20]
 8014b84:	f8bd 2030 	ldrh.w	r2, [sp, #48]	; 0x30
 8014b88:	4410      	add	r0, r2
 8014b8a:	b200      	sxth	r0, r0
 8014b8c:	9000      	str	r0, [sp, #0]
 8014b8e:	e9cd 9703 	strd	r9, r7, [sp, #12]
 8014b92:	e9cd 5401 	strd	r5, r4, [sp, #4]
 8014b96:	4642      	mov	r2, r8
 8014b98:	2100      	movs	r1, #0
 8014b9a:	4658      	mov	r0, fp
 8014b9c:	f7ff fca2 	bl	80144e4 <_ZN8touchgfx3LCD18drawStringInternalEPtPKNS_4RectEssRS3_PKNS0_13StringVisualsEhRNS_12TextProviderEib>
 8014ba0:	2800      	cmp	r0, #0
 8014ba2:	d163      	bne.n	8014c6c <_ZN8touchgfx3LCD13drawStringLTRERKNS_4RectES3_RKNS0_13StringVisualsEPKtSt9__va_list+0x238>
 8014ba4:	f8bd 3032 	ldrh.w	r3, [sp, #50]	; 0x32
 8014ba8:	f8bd 1036 	ldrh.w	r1, [sp, #54]	; 0x36
 8014bac:	b2b2      	uxth	r2, r6
 8014bae:	4413      	add	r3, r2
 8014bb0:	1a8a      	subs	r2, r1, r2
 8014bb2:	f8ad 2036 	strh.w	r2, [sp, #54]	; 0x36
 8014bb6:	f89d 205a 	ldrb.w	r2, [sp, #90]	; 0x5a
 8014bba:	b21b      	sxth	r3, r3
 8014bbc:	f8ad 3032 	strh.w	r3, [sp, #50]	; 0x32
 8014bc0:	2a00      	cmp	r2, #0
 8014bc2:	d153      	bne.n	8014c6c <_ZN8touchgfx3LCD13drawStringLTRERKNS_4RectES3_RKNS0_13StringVisualsEPKtSt9__va_list+0x238>
 8014bc4:	6822      	ldr	r2, [r4, #0]
 8014bc6:	8869      	ldrh	r1, [r5, #2]
 8014bc8:	7a12      	ldrb	r2, [r2, #8]
 8014bca:	1a9b      	subs	r3, r3, r2
 8014bcc:	88ea      	ldrh	r2, [r5, #6]
 8014bce:	440a      	add	r2, r1
 8014bd0:	b212      	sxth	r2, r2
 8014bd2:	4293      	cmp	r3, r2
 8014bd4:	dda7      	ble.n	8014b26 <_ZN8touchgfx3LCD13drawStringLTRERKNS_4RectES3_RKNS0_13StringVisualsEPKtSt9__va_list+0xf2>
 8014bd6:	e049      	b.n	8014c6c <_ZN8touchgfx3LCD13drawStringLTRERKNS_4RectES3_RKNS0_13StringVisualsEPKtSt9__va_list+0x238>
 8014bd8:	7c23      	ldrb	r3, [r4, #16]
 8014bda:	444f      	add	r7, r9
 8014bdc:	b1c3      	cbz	r3, 8014c10 <_ZN8touchgfx3LCD13drawStringLTRERKNS_4RectES3_RKNS0_13StringVisualsEPKtSt9__va_list+0x1dc>
 8014bde:	f64f 79ff 	movw	r9, #65535	; 0xffff
 8014be2:	f9bd 3032 	ldrsh.w	r3, [sp, #50]	; 0x32
 8014be6:	f9b5 2002 	ldrsh.w	r2, [r5, #2]
 8014bea:	443b      	add	r3, r7
 8014bec:	4293      	cmp	r3, r2
 8014bee:	da97      	bge.n	8014b20 <_ZN8touchgfx3LCD13drawStringLTRERKNS_4RectES3_RKNS0_13StringVisualsEPKtSt9__va_list+0xec>
 8014bf0:	a80e      	add	r0, sp, #56	; 0x38
 8014bf2:	f7ff fdeb 	bl	80147cc <_ZN8touchgfx3LCD22WideTextInternalStruct23scanStringLengthForLineEv>
 8014bf6:	f8bd 304e 	ldrh.w	r3, [sp, #78]	; 0x4e
 8014bfa:	3b01      	subs	r3, #1
 8014bfc:	b29b      	uxth	r3, r3
 8014bfe:	454b      	cmp	r3, r9
 8014c00:	9309      	str	r3, [sp, #36]	; 0x24
 8014c02:	d021      	beq.n	8014c48 <_ZN8touchgfx3LCD13drawStringLTRERKNS_4RectES3_RKNS0_13StringVisualsEPKtSt9__va_list+0x214>
 8014c04:	7961      	ldrb	r1, [r4, #5]
 8014c06:	a817      	add	r0, sp, #92	; 0x5c
 8014c08:	f7f3 fa1e 	bl	8008048 <_ZN8touchgfx12TextProvider15getNextLigatureEh>
 8014c0c:	9b09      	ldr	r3, [sp, #36]	; 0x24
 8014c0e:	e7f4      	b.n	8014bfa <_ZN8touchgfx3LCD13drawStringLTRERKNS_4RectES3_RKNS0_13StringVisualsEPKtSt9__va_list+0x1c6>
 8014c10:	fa1f f986 	uxth.w	r9, r6
 8014c14:	f9bd 3032 	ldrsh.w	r3, [sp, #50]	; 0x32
 8014c18:	f9b5 2002 	ldrsh.w	r2, [r5, #2]
 8014c1c:	443b      	add	r3, r7
 8014c1e:	4293      	cmp	r3, r2
 8014c20:	f6bf af7e 	bge.w	8014b20 <_ZN8touchgfx3LCD13drawStringLTRERKNS_4RectES3_RKNS0_13StringVisualsEPKtSt9__va_list+0xec>
 8014c24:	a817      	add	r0, sp, #92	; 0x5c
 8014c26:	f002 fe41 	bl	80178ac <_ZN8touchgfx12TextProvider11getNextCharEv>
 8014c2a:	b1f8      	cbz	r0, 8014c6c <_ZN8touchgfx3LCD13drawStringLTRERKNS_4RectES3_RKNS0_13StringVisualsEPKtSt9__va_list+0x238>
 8014c2c:	280a      	cmp	r0, #10
 8014c2e:	d1f1      	bne.n	8014c14 <_ZN8touchgfx3LCD13drawStringLTRERKNS_4RectES3_RKNS0_13StringVisualsEPKtSt9__va_list+0x1e0>
 8014c30:	f8bd 3032 	ldrh.w	r3, [sp, #50]	; 0x32
 8014c34:	444b      	add	r3, r9
 8014c36:	f8ad 3032 	strh.w	r3, [sp, #50]	; 0x32
 8014c3a:	f8bd 3036 	ldrh.w	r3, [sp, #54]	; 0x36
 8014c3e:	eba3 0309 	sub.w	r3, r3, r9
 8014c42:	f8ad 3036 	strh.w	r3, [sp, #54]	; 0x36
 8014c46:	e7e5      	b.n	8014c14 <_ZN8touchgfx3LCD13drawStringLTRERKNS_4RectES3_RKNS0_13StringVisualsEPKtSt9__va_list+0x1e0>
 8014c48:	f8bd 2032 	ldrh.w	r2, [sp, #50]	; 0x32
 8014c4c:	b2b3      	uxth	r3, r6
 8014c4e:	441a      	add	r2, r3
 8014c50:	f8ad 2032 	strh.w	r2, [sp, #50]	; 0x32
 8014c54:	f8bd 2036 	ldrh.w	r2, [sp, #54]	; 0x36
 8014c58:	1ad3      	subs	r3, r2, r3
 8014c5a:	f8ad 3036 	strh.w	r3, [sp, #54]	; 0x36
 8014c5e:	f8bd 3038 	ldrh.w	r3, [sp, #56]	; 0x38
 8014c62:	b11b      	cbz	r3, 8014c6c <_ZN8touchgfx3LCD13drawStringLTRERKNS_4RectES3_RKNS0_13StringVisualsEPKtSt9__va_list+0x238>
 8014c64:	f89d 305a 	ldrb.w	r3, [sp, #90]	; 0x5a
 8014c68:	2b00      	cmp	r3, #0
 8014c6a:	d0ba      	beq.n	8014be2 <_ZN8touchgfx3LCD13drawStringLTRERKNS_4RectES3_RKNS0_13StringVisualsEPKtSt9__va_list+0x1ae>
 8014c6c:	b063      	add	sp, #396	; 0x18c
 8014c6e:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
 8014c72:	2a02      	cmp	r2, #2
 8014c74:	d105      	bne.n	8014c82 <_ZN8touchgfx3LCD13drawStringLTRERKNS_4RectES3_RKNS0_13StringVisualsEPKtSt9__va_list+0x24e>
 8014c76:	7be2      	ldrb	r2, [r4, #15]
 8014c78:	f8bd 0034 	ldrh.w	r0, [sp, #52]	; 0x34
 8014c7c:	1a80      	subs	r0, r0, r2
 8014c7e:	1ac0      	subs	r0, r0, r3
 8014c80:	e773      	b.n	8014b6a <_ZN8touchgfx3LCD13drawStringLTRERKNS_4RectES3_RKNS0_13StringVisualsEPKtSt9__va_list+0x136>
 8014c82:	2000      	movs	r0, #0
 8014c84:	e772      	b.n	8014b6c <_ZN8touchgfx3LCD13drawStringLTRERKNS_4RectES3_RKNS0_13StringVisualsEPKtSt9__va_list+0x138>
 8014c86:	7be0      	ldrb	r0, [r4, #15]
 8014c88:	e770      	b.n	8014b6c <_ZN8touchgfx3LCD13drawStringLTRERKNS_4RectES3_RKNS0_13StringVisualsEPKtSt9__va_list+0x138>
 8014c8a:	f647 72ff 	movw	r2, #32767	; 0x7fff
 8014c8e:	e773      	b.n	8014b78 <_ZN8touchgfx3LCD13drawStringLTRERKNS_4RectES3_RKNS0_13StringVisualsEPKtSt9__va_list+0x144>
 8014c90:	f1ba 0f00 	cmp.w	sl, #0
 8014c94:	d0f7      	beq.n	8014c86 <_ZN8touchgfx3LCD13drawStringLTRERKNS_4RectES3_RKNS0_13StringVisualsEPKtSt9__va_list+0x252>
 8014c96:	2264      	movs	r2, #100	; 0x64
 8014c98:	4639      	mov	r1, r7
 8014c9a:	a849      	add	r0, sp, #292	; 0x124
 8014c9c:	f015 fcfd 	bl	802a69a <memcpy>
 8014ca0:	2300      	movs	r3, #0
 8014ca2:	f647 72ff 	movw	r2, #32767	; 0x7fff
 8014ca6:	6821      	ldr	r1, [r4, #0]
 8014ca8:	a849      	add	r0, sp, #292	; 0x124
 8014caa:	f7ff fbae 	bl	801440a <_ZN8touchgfx3LCD11stringWidthERNS_12TextProviderERKNS_4FontEih>
 8014cae:	b203      	sxth	r3, r0
 8014cb0:	e751      	b.n	8014b56 <_ZN8touchgfx3LCD13drawStringLTRERKNS_4RectES3_RKNS0_13StringVisualsEPKtSt9__va_list+0x122>

08014cb2 <_ZN8touchgfx3LCD5realXERKNS_4RectEssNS_12TextRotationE>:
 8014cb2:	2b03      	cmp	r3, #3
 8014cb4:	d818      	bhi.n	8014ce8 <_ZN8touchgfx3LCD5realXERKNS_4RectEssNS_12TextRotationE+0x36>
 8014cb6:	e8df f003 	tbb	[pc, r3]
 8014cba:	0602      	.short	0x0602
 8014cbc:	130d      	.short	0x130d
 8014cbe:	f9b0 2000 	ldrsh.w	r2, [r0]
 8014cc2:	1850      	adds	r0, r2, r1
 8014cc4:	4770      	bx	lr
 8014cc6:	8803      	ldrh	r3, [r0, #0]
 8014cc8:	8880      	ldrh	r0, [r0, #4]
 8014cca:	4418      	add	r0, r3
 8014ccc:	b200      	sxth	r0, r0
 8014cce:	1a80      	subs	r0, r0, r2
 8014cd0:	3801      	subs	r0, #1
 8014cd2:	4770      	bx	lr
 8014cd4:	8803      	ldrh	r3, [r0, #0]
 8014cd6:	8880      	ldrh	r0, [r0, #4]
 8014cd8:	4418      	add	r0, r3
 8014cda:	b200      	sxth	r0, r0
 8014cdc:	1a40      	subs	r0, r0, r1
 8014cde:	e7f7      	b.n	8014cd0 <_ZN8touchgfx3LCD5realXERKNS_4RectEssNS_12TextRotationE+0x1e>
 8014ce0:	f9b0 0000 	ldrsh.w	r0, [r0]
 8014ce4:	4410      	add	r0, r2
 8014ce6:	4770      	bx	lr
 8014ce8:	2000      	movs	r0, #0
 8014cea:	4770      	bx	lr

08014cec <_ZN8touchgfx3LCD5realYERKNS_4RectEssNS_12TextRotationE>:
 8014cec:	2b03      	cmp	r3, #3
 8014cee:	d817      	bhi.n	8014d20 <_ZN8touchgfx3LCD5realYERKNS_4RectEssNS_12TextRotationE+0x34>
 8014cf0:	e8df f003 	tbb	[pc, r3]
 8014cf4:	10090602 	.word	0x10090602
 8014cf8:	f9b0 1002 	ldrsh.w	r1, [r0, #2]
 8014cfc:	1850      	adds	r0, r2, r1
 8014cfe:	4770      	bx	lr
 8014d00:	f9b0 2002 	ldrsh.w	r2, [r0, #2]
 8014d04:	e7fa      	b.n	8014cfc <_ZN8touchgfx3LCD5realYERKNS_4RectEssNS_12TextRotationE+0x10>
 8014d06:	8843      	ldrh	r3, [r0, #2]
 8014d08:	88c0      	ldrh	r0, [r0, #6]
 8014d0a:	4418      	add	r0, r3
 8014d0c:	b200      	sxth	r0, r0
 8014d0e:	1a80      	subs	r0, r0, r2
 8014d10:	3801      	subs	r0, #1
 8014d12:	4770      	bx	lr
 8014d14:	8843      	ldrh	r3, [r0, #2]
 8014d16:	88c0      	ldrh	r0, [r0, #6]
 8014d18:	4418      	add	r0, r3
 8014d1a:	b200      	sxth	r0, r0
 8014d1c:	1a40      	subs	r0, r0, r1
 8014d1e:	e7f7      	b.n	8014d10 <_ZN8touchgfx3LCD5realYERKNS_4RectEssNS_12TextRotationE+0x24>
 8014d20:	2000      	movs	r0, #0
 8014d22:	4770      	bx	lr

08014d24 <_GLOBAL__sub_I__ZN8touchgfx3LCD12defaultColorE>:
 8014d24:	4b01      	ldr	r3, [pc, #4]	; (8014d2c <_GLOBAL__sub_I__ZN8touchgfx3LCD12defaultColorE+0x8>)
 8014d26:	2200      	movs	r2, #0
 8014d28:	601a      	str	r2, [r3, #0]
 8014d2a:	4770      	bx	lr
 8014d2c:	20012f34 	.word	0x20012f34

08014d30 <_ZN8touchgfx16TouchCalibration4clzuEm>:
 8014d30:	4603      	mov	r3, r0
 8014d32:	b1c8      	cbz	r0, 8014d68 <_ZN8touchgfx16TouchCalibration4clzuEm+0x38>
 8014d34:	0c02      	lsrs	r2, r0, #16
 8014d36:	0412      	lsls	r2, r2, #16
 8014d38:	b9a2      	cbnz	r2, 8014d64 <_ZN8touchgfx16TouchCalibration4clzuEm+0x34>
 8014d3a:	0403      	lsls	r3, r0, #16
 8014d3c:	2010      	movs	r0, #16
 8014d3e:	f013 4f7f 	tst.w	r3, #4278190080	; 0xff000000
 8014d42:	bf04      	itt	eq
 8014d44:	021b      	lsleq	r3, r3, #8
 8014d46:	3008      	addeq	r0, #8
 8014d48:	f013 4f70 	tst.w	r3, #4026531840	; 0xf0000000
 8014d4c:	bf04      	itt	eq
 8014d4e:	011b      	lsleq	r3, r3, #4
 8014d50:	3004      	addeq	r0, #4
 8014d52:	f013 4f40 	tst.w	r3, #3221225472	; 0xc0000000
 8014d56:	bf04      	itt	eq
 8014d58:	009b      	lsleq	r3, r3, #2
 8014d5a:	3002      	addeq	r0, #2
 8014d5c:	2b00      	cmp	r3, #0
 8014d5e:	db04      	blt.n	8014d6a <_ZN8touchgfx16TouchCalibration4clzuEm+0x3a>
 8014d60:	3001      	adds	r0, #1
 8014d62:	4770      	bx	lr
 8014d64:	2000      	movs	r0, #0
 8014d66:	e7ea      	b.n	8014d3e <_ZN8touchgfx16TouchCalibration4clzuEm+0xe>
 8014d68:	2020      	movs	r0, #32
 8014d6a:	4770      	bx	lr

08014d6c <_ZN8touchgfx16TouchCalibration7muldivuEmmmmmRm>:
 8014d6c:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 8014d70:	b087      	sub	sp, #28
 8014d72:	460d      	mov	r5, r1
 8014d74:	4616      	mov	r6, r2
 8014d76:	4698      	mov	r8, r3
 8014d78:	e9dd 4710 	ldrd	r4, r7, [sp, #64]	; 0x40
 8014d7c:	4601      	mov	r1, r0
 8014d7e:	b120      	cbz	r0, 8014d8a <_ZN8touchgfx16TouchCalibration7muldivuEmmmmmRm+0x1e>
 8014d80:	b11a      	cbz	r2, 8014d8a <_ZN8touchgfx16TouchCalibration7muldivuEmmmmmRm+0x1e>
 8014d82:	2d1f      	cmp	r5, #31
 8014d84:	d801      	bhi.n	8014d8a <_ZN8touchgfx16TouchCalibration7muldivuEmmmmmRm+0x1e>
 8014d86:	2b1f      	cmp	r3, #31
 8014d88:	d904      	bls.n	8014d94 <_ZN8touchgfx16TouchCalibration7muldivuEmmmmmRm+0x28>
 8014d8a:	2000      	movs	r0, #0
 8014d8c:	6038      	str	r0, [r7, #0]
 8014d8e:	b007      	add	sp, #28
 8014d90:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
 8014d94:	b97d      	cbnz	r5, 8014db6 <_ZN8touchgfx16TouchCalibration7muldivuEmmmmmRm+0x4a>
 8014d96:	b143      	cbz	r3, 8014daa <_ZN8touchgfx16TouchCalibration7muldivuEmmmmmRm+0x3e>
 8014d98:	4602      	mov	r2, r0
 8014d9a:	e9cd 4700 	strd	r4, r7, [sp]
 8014d9e:	462b      	mov	r3, r5
 8014da0:	4641      	mov	r1, r8
 8014da2:	4630      	mov	r0, r6
 8014da4:	f7ff ffe2 	bl	8014d6c <_ZN8touchgfx16TouchCalibration7muldivuEmmmmmRm>
 8014da8:	e7f1      	b.n	8014d8e <_ZN8touchgfx16TouchCalibration7muldivuEmmmmmRm+0x22>
 8014daa:	f04f 33ff 	mov.w	r3, #4294967295
 8014dae:	603b      	str	r3, [r7, #0]
 8014db0:	f06f 4000 	mvn.w	r0, #2147483648	; 0x80000000
 8014db4:	e7eb      	b.n	8014d8e <_ZN8touchgfx16TouchCalibration7muldivuEmmmmmRm+0x22>
 8014db6:	fa32 fa05 	lsrs.w	sl, r2, r5
 8014dba:	d106      	bne.n	8014dca <_ZN8touchgfx16TouchCalibration7muldivuEmmmmmRm+0x5e>
 8014dbc:	4346      	muls	r6, r0
 8014dbe:	fbb6 f0f4 	udiv	r0, r6, r4
 8014dc2:	fb04 6610 	mls	r6, r4, r0, r6
 8014dc6:	603e      	str	r6, [r7, #0]
 8014dc8:	e7e1      	b.n	8014d8e <_ZN8touchgfx16TouchCalibration7muldivuEmmmmmRm+0x22>
 8014dca:	2201      	movs	r2, #1
 8014dcc:	40aa      	lsls	r2, r5
 8014dce:	3a01      	subs	r2, #1
 8014dd0:	4016      	ands	r6, r2
 8014dd2:	fa00 fb05 	lsl.w	fp, r0, r5
 8014dd6:	4630      	mov	r0, r6
 8014dd8:	fbbb f9f4 	udiv	r9, fp, r4
 8014ddc:	fb0a f309 	mul.w	r3, sl, r9
 8014de0:	9303      	str	r3, [sp, #12]
 8014de2:	f7ff ffa5 	bl	8014d30 <_ZN8touchgfx16TouchCalibration4clzuEm>
 8014de6:	462b      	mov	r3, r5
 8014de8:	460a      	mov	r2, r1
 8014dea:	e9cd 4700 	strd	r4, r7, [sp]
 8014dee:	4601      	mov	r1, r0
 8014df0:	4630      	mov	r0, r6
 8014df2:	f7ff ffbb 	bl	8014d6c <_ZN8touchgfx16TouchCalibration7muldivuEmmmmmRm>
 8014df6:	fb04 b919 	mls	r9, r4, r9, fp
 8014dfa:	4606      	mov	r6, r0
 8014dfc:	4648      	mov	r0, r9
 8014dfe:	eb05 0108 	add.w	r1, r5, r8
 8014e02:	f7ff ff95 	bl	8014d30 <_ZN8touchgfx16TouchCalibration4clzuEm>
 8014e06:	ab05      	add	r3, sp, #20
 8014e08:	e9cd 4300 	strd	r4, r3, [sp]
 8014e0c:	464a      	mov	r2, r9
 8014e0e:	4603      	mov	r3, r0
 8014e10:	4650      	mov	r0, sl
 8014e12:	f7ff ffab 	bl	8014d6c <_ZN8touchgfx16TouchCalibration7muldivuEmmmmmRm>
 8014e16:	6839      	ldr	r1, [r7, #0]
 8014e18:	9a05      	ldr	r2, [sp, #20]
 8014e1a:	9b03      	ldr	r3, [sp, #12]
 8014e1c:	4411      	add	r1, r2
 8014e1e:	fbb1 f2f4 	udiv	r2, r1, r4
 8014e22:	18d3      	adds	r3, r2, r3
 8014e24:	441e      	add	r6, r3
 8014e26:	fb04 1412 	mls	r4, r4, r2, r1
 8014e2a:	4430      	add	r0, r6
 8014e2c:	603c      	str	r4, [r7, #0]
 8014e2e:	e7ae      	b.n	8014d8e <_ZN8touchgfx16TouchCalibration7muldivuEmmmmmRm+0x22>

08014e30 <_ZN8touchgfx16TouchCalibration6muldivEllllRl>:
 8014e30:	e92d 43f0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, lr}
 8014e34:	b085      	sub	sp, #20
 8014e36:	f1b0 0900 	subs.w	r9, r0, #0
 8014e3a:	9c0c      	ldr	r4, [sp, #48]	; 0x30
 8014e3c:	461d      	mov	r5, r3
 8014e3e:	bfbf      	itttt	lt
 8014e40:	6823      	ldrlt	r3, [r4, #0]
 8014e42:	425b      	neglt	r3, r3
 8014e44:	f1c9 0900 	rsblt	r9, r9, #0
 8014e48:	6023      	strlt	r3, [r4, #0]
 8014e4a:	bfb4      	ite	lt
 8014e4c:	f04f 36ff 	movlt.w	r6, #4294967295
 8014e50:	2601      	movge	r6, #1
 8014e52:	2a00      	cmp	r2, #0
 8014e54:	4617      	mov	r7, r2
 8014e56:	da04      	bge.n	8014e62 <_ZN8touchgfx16TouchCalibration6muldivEllllRl+0x32>
 8014e58:	6823      	ldr	r3, [r4, #0]
 8014e5a:	425b      	negs	r3, r3
 8014e5c:	4257      	negs	r7, r2
 8014e5e:	4276      	negs	r6, r6
 8014e60:	6023      	str	r3, [r4, #0]
 8014e62:	2d00      	cmp	r5, #0
 8014e64:	4638      	mov	r0, r7
 8014e66:	bfba      	itte	lt
 8014e68:	426d      	neglt	r5, r5
 8014e6a:	f04f 38ff 	movlt.w	r8, #4294967295
 8014e6e:	f04f 0801 	movge.w	r8, #1
 8014e72:	f7ff ff5d 	bl	8014d30 <_ZN8touchgfx16TouchCalibration4clzuEm>
 8014e76:	ab03      	add	r3, sp, #12
 8014e78:	e9cd 5300 	strd	r5, r3, [sp]
 8014e7c:	463a      	mov	r2, r7
 8014e7e:	4603      	mov	r3, r0
 8014e80:	4648      	mov	r0, r9
 8014e82:	f7ff ff73 	bl	8014d6c <_ZN8touchgfx16TouchCalibration7muldivuEmmmmmRm>
 8014e86:	6823      	ldr	r3, [r4, #0]
 8014e88:	9a03      	ldr	r2, [sp, #12]
 8014e8a:	4546      	cmp	r6, r8
 8014e8c:	441a      	add	r2, r3
 8014e8e:	fb92 f3f5 	sdiv	r3, r2, r5
 8014e92:	4418      	add	r0, r3
 8014e94:	bf18      	it	ne
 8014e96:	4240      	negne	r0, r0
 8014e98:	fb05 2313 	mls	r3, r5, r3, r2
 8014e9c:	1c72      	adds	r2, r6, #1
 8014e9e:	6023      	str	r3, [r4, #0]
 8014ea0:	d105      	bne.n	8014eae <_ZN8touchgfx16TouchCalibration6muldivEllllRl+0x7e>
 8014ea2:	2b00      	cmp	r3, #0
 8014ea4:	f1c3 0200 	rsb	r2, r3, #0
 8014ea8:	db0b      	blt.n	8014ec2 <_ZN8touchgfx16TouchCalibration6muldivEllllRl+0x92>
 8014eaa:	6022      	str	r2, [r4, #0]
 8014eac:	e006      	b.n	8014ebc <_ZN8touchgfx16TouchCalibration6muldivEllllRl+0x8c>
 8014eae:	2e01      	cmp	r6, #1
 8014eb0:	d104      	bne.n	8014ebc <_ZN8touchgfx16TouchCalibration6muldivEllllRl+0x8c>
 8014eb2:	2b00      	cmp	r3, #0
 8014eb4:	da02      	bge.n	8014ebc <_ZN8touchgfx16TouchCalibration6muldivEllllRl+0x8c>
 8014eb6:	442b      	add	r3, r5
 8014eb8:	3801      	subs	r0, #1
 8014eba:	6023      	str	r3, [r4, #0]
 8014ebc:	b005      	add	sp, #20
 8014ebe:	e8bd 83f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, pc}
 8014ec2:	3801      	subs	r0, #1
 8014ec4:	1b52      	subs	r2, r2, r5
 8014ec6:	e7f0      	b.n	8014eaa <_ZN8touchgfx16TouchCalibration6muldivEllllRl+0x7a>

08014ec8 <_ZN8touchgfx16TouchCalibration14translatePointERNS_5PointE>:
 8014ec8:	e92d 41ff 	stmdb	sp!, {r0, r1, r2, r3, r4, r5, r6, r7, r8, lr}
 8014ecc:	4c1c      	ldr	r4, [pc, #112]	; (8014f40 <_ZN8touchgfx16TouchCalibration14translatePointERNS_5PointE+0x78>)
 8014ece:	6807      	ldr	r7, [r0, #0]
 8014ed0:	69a3      	ldr	r3, [r4, #24]
 8014ed2:	4605      	mov	r5, r0
 8014ed4:	b92b      	cbnz	r3, 8014ee2 <_ZN8touchgfx16TouchCalibration14translatePointERNS_5PointE+0x1a>
 8014ed6:	6840      	ldr	r0, [r0, #4]
 8014ed8:	e9c5 7000 	strd	r7, r0, [r5]
 8014edc:	b004      	add	sp, #16
 8014ede:	e8bd 81f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, pc}
 8014ee2:	68a2      	ldr	r2, [r4, #8]
 8014ee4:	6820      	ldr	r0, [r4, #0]
 8014ee6:	ae04      	add	r6, sp, #16
 8014ee8:	f04f 0802 	mov.w	r8, #2
 8014eec:	fb93 f1f8 	sdiv	r1, r3, r8
 8014ef0:	440a      	add	r2, r1
 8014ef2:	f846 2d04 	str.w	r2, [r6, #-4]!
 8014ef6:	69e1      	ldr	r1, [r4, #28]
 8014ef8:	9600      	str	r6, [sp, #0]
 8014efa:	463a      	mov	r2, r7
 8014efc:	f7ff ff98 	bl	8014e30 <_ZN8touchgfx16TouchCalibration6muldivEllllRl>
 8014f00:	69a3      	ldr	r3, [r4, #24]
 8014f02:	686a      	ldr	r2, [r5, #4]
 8014f04:	6a21      	ldr	r1, [r4, #32]
 8014f06:	9600      	str	r6, [sp, #0]
 8014f08:	4607      	mov	r7, r0
 8014f0a:	6860      	ldr	r0, [r4, #4]
 8014f0c:	f7ff ff90 	bl	8014e30 <_ZN8touchgfx16TouchCalibration6muldivEllllRl>
 8014f10:	6962      	ldr	r2, [r4, #20]
 8014f12:	69a3      	ldr	r3, [r4, #24]
 8014f14:	fb93 f8f8 	sdiv	r8, r3, r8
 8014f18:	4442      	add	r2, r8
 8014f1a:	9203      	str	r2, [sp, #12]
 8014f1c:	6a61      	ldr	r1, [r4, #36]	; 0x24
 8014f1e:	682a      	ldr	r2, [r5, #0]
 8014f20:	9600      	str	r6, [sp, #0]
 8014f22:	4407      	add	r7, r0
 8014f24:	68e0      	ldr	r0, [r4, #12]
 8014f26:	f7ff ff83 	bl	8014e30 <_ZN8touchgfx16TouchCalibration6muldivEllllRl>
 8014f2a:	9600      	str	r6, [sp, #0]
 8014f2c:	4680      	mov	r8, r0
 8014f2e:	69a3      	ldr	r3, [r4, #24]
 8014f30:	686a      	ldr	r2, [r5, #4]
 8014f32:	6aa1      	ldr	r1, [r4, #40]	; 0x28
 8014f34:	6920      	ldr	r0, [r4, #16]
 8014f36:	f7ff ff7b 	bl	8014e30 <_ZN8touchgfx16TouchCalibration6muldivEllllRl>
 8014f3a:	4440      	add	r0, r8
 8014f3c:	e7cc      	b.n	8014ed8 <_ZN8touchgfx16TouchCalibration14translatePointERNS_5PointE+0x10>
 8014f3e:	bf00      	nop
 8014f40:	20012f38 	.word	0x20012f38

08014f44 <_ZN8touchgfx21DisplayTransformation29transformDisplayToFrameBufferERsS1_>:
 8014f44:	4b07      	ldr	r3, [pc, #28]	; (8014f64 <_ZN8touchgfx21DisplayTransformation29transformDisplayToFrameBufferERsS1_+0x20>)
 8014f46:	781b      	ldrb	r3, [r3, #0]
 8014f48:	2b01      	cmp	r3, #1
 8014f4a:	d109      	bne.n	8014f60 <_ZN8touchgfx21DisplayTransformation29transformDisplayToFrameBufferERsS1_+0x1c>
 8014f4c:	f9b1 3000 	ldrsh.w	r3, [r1]
 8014f50:	f9b0 2000 	ldrsh.w	r2, [r0]
 8014f54:	8003      	strh	r3, [r0, #0]
 8014f56:	4b04      	ldr	r3, [pc, #16]	; (8014f68 <_ZN8touchgfx21DisplayTransformation29transformDisplayToFrameBufferERsS1_+0x24>)
 8014f58:	881b      	ldrh	r3, [r3, #0]
 8014f5a:	3b01      	subs	r3, #1
 8014f5c:	1a9b      	subs	r3, r3, r2
 8014f5e:	800b      	strh	r3, [r1, #0]
 8014f60:	4770      	bx	lr
 8014f62:	bf00      	nop
 8014f64:	20012f1c 	.word	0x20012f1c
 8014f68:	20012f18 	.word	0x20012f18

08014f6c <_ZN8touchgfx21DisplayTransformation29transformFrameBufferToDisplayERsS1_>:
 8014f6c:	b510      	push	{r4, lr}
 8014f6e:	4b07      	ldr	r3, [pc, #28]	; (8014f8c <_ZN8touchgfx21DisplayTransformation29transformFrameBufferToDisplayERsS1_+0x20>)
 8014f70:	781b      	ldrb	r3, [r3, #0]
 8014f72:	2b01      	cmp	r3, #1
 8014f74:	d108      	bne.n	8014f88 <_ZN8touchgfx21DisplayTransformation29transformFrameBufferToDisplayERsS1_+0x1c>
 8014f76:	4b06      	ldr	r3, [pc, #24]	; (8014f90 <_ZN8touchgfx21DisplayTransformation29transformFrameBufferToDisplayERsS1_+0x24>)
 8014f78:	880c      	ldrh	r4, [r1, #0]
 8014f7a:	881b      	ldrh	r3, [r3, #0]
 8014f7c:	f9b0 2000 	ldrsh.w	r2, [r0]
 8014f80:	3b01      	subs	r3, #1
 8014f82:	1b1b      	subs	r3, r3, r4
 8014f84:	8003      	strh	r3, [r0, #0]
 8014f86:	800a      	strh	r2, [r1, #0]
 8014f88:	bd10      	pop	{r4, pc}
 8014f8a:	bf00      	nop
 8014f8c:	20012f1c 	.word	0x20012f1c
 8014f90:	20012f18 	.word	0x20012f18

08014f94 <_ZN8touchgfx21DisplayTransformation29transformFrameBufferToDisplayERNS_4RectE>:
 8014f94:	b510      	push	{r4, lr}
 8014f96:	4b0a      	ldr	r3, [pc, #40]	; (8014fc0 <_ZN8touchgfx21DisplayTransformation29transformFrameBufferToDisplayERNS_4RectE+0x2c>)
 8014f98:	781b      	ldrb	r3, [r3, #0]
 8014f9a:	2b01      	cmp	r3, #1
 8014f9c:	d10e      	bne.n	8014fbc <_ZN8touchgfx21DisplayTransformation29transformFrameBufferToDisplayERNS_4RectE+0x28>
 8014f9e:	f9b0 1006 	ldrsh.w	r1, [r0, #6]
 8014fa2:	8843      	ldrh	r3, [r0, #2]
 8014fa4:	f9b0 4000 	ldrsh.w	r4, [r0]
 8014fa8:	8044      	strh	r4, [r0, #2]
 8014faa:	18ca      	adds	r2, r1, r3
 8014fac:	4b05      	ldr	r3, [pc, #20]	; (8014fc4 <_ZN8touchgfx21DisplayTransformation29transformFrameBufferToDisplayERNS_4RectE+0x30>)
 8014fae:	881b      	ldrh	r3, [r3, #0]
 8014fb0:	1a9b      	subs	r3, r3, r2
 8014fb2:	8003      	strh	r3, [r0, #0]
 8014fb4:	f9b0 3004 	ldrsh.w	r3, [r0, #4]
 8014fb8:	80c3      	strh	r3, [r0, #6]
 8014fba:	8081      	strh	r1, [r0, #4]
 8014fbc:	bd10      	pop	{r4, pc}
 8014fbe:	bf00      	nop
 8014fc0:	20012f1c 	.word	0x20012f1c
 8014fc4:	20012f18 	.word	0x20012f18

08014fc8 <_ZN8touchgfx21DisplayTransformation29transformDisplayToFrameBufferERNS_4RectE>:
 8014fc8:	4b08      	ldr	r3, [pc, #32]	; (8014fec <_ZN8touchgfx21DisplayTransformation29transformDisplayToFrameBufferERNS_4RectE+0x24>)
 8014fca:	781b      	ldrb	r3, [r3, #0]
 8014fcc:	2b01      	cmp	r3, #1
 8014fce:	d10c      	bne.n	8014fea <_ZN8touchgfx21DisplayTransformation29transformDisplayToFrameBufferERNS_4RectE+0x22>
 8014fd0:	8803      	ldrh	r3, [r0, #0]
 8014fd2:	f9b0 1004 	ldrsh.w	r1, [r0, #4]
 8014fd6:	8842      	ldrh	r2, [r0, #2]
 8014fd8:	8002      	strh	r2, [r0, #0]
 8014fda:	185a      	adds	r2, r3, r1
 8014fdc:	4b04      	ldr	r3, [pc, #16]	; (8014ff0 <_ZN8touchgfx21DisplayTransformation29transformDisplayToFrameBufferERNS_4RectE+0x28>)
 8014fde:	881b      	ldrh	r3, [r3, #0]
 8014fe0:	1a9b      	subs	r3, r3, r2
 8014fe2:	8043      	strh	r3, [r0, #2]
 8014fe4:	88c3      	ldrh	r3, [r0, #6]
 8014fe6:	8083      	strh	r3, [r0, #4]
 8014fe8:	80c1      	strh	r1, [r0, #6]
 8014fea:	4770      	bx	lr
 8014fec:	20012f1c 	.word	0x20012f1c
 8014ff0:	20012f18 	.word	0x20012f18

08014ff4 <_ZN8touchgfx21DisplayTransformation29transformDisplayToFrameBufferERsS1_RKNS_4RectE>:
 8014ff4:	b510      	push	{r4, lr}
 8014ff6:	4b07      	ldr	r3, [pc, #28]	; (8015014 <_ZN8touchgfx21DisplayTransformation29transformDisplayToFrameBufferERsS1_RKNS_4RectE+0x20>)
 8014ff8:	781b      	ldrb	r3, [r3, #0]
 8014ffa:	2b01      	cmp	r3, #1
 8014ffc:	d108      	bne.n	8015010 <_ZN8touchgfx21DisplayTransformation29transformDisplayToFrameBufferERsS1_RKNS_4RectE+0x1c>
 8014ffe:	f9b1 3000 	ldrsh.w	r3, [r1]
 8015002:	f9b0 4000 	ldrsh.w	r4, [r0]
 8015006:	8003      	strh	r3, [r0, #0]
 8015008:	8893      	ldrh	r3, [r2, #4]
 801500a:	3b01      	subs	r3, #1
 801500c:	1b1b      	subs	r3, r3, r4
 801500e:	800b      	strh	r3, [r1, #0]
 8015010:	bd10      	pop	{r4, pc}
 8015012:	bf00      	nop
 8015014:	20012f1c 	.word	0x20012f1c

08015018 <_ZN8touchgfx21DisplayTransformation29transformDisplayToFrameBufferERfS1_RKNS_4RectE>:
 8015018:	4b0b      	ldr	r3, [pc, #44]	; (8015048 <_ZN8touchgfx21DisplayTransformation29transformDisplayToFrameBufferERfS1_RKNS_4RectE+0x30>)
 801501a:	781b      	ldrb	r3, [r3, #0]
 801501c:	2b01      	cmp	r3, #1
 801501e:	d111      	bne.n	8015044 <_ZN8touchgfx21DisplayTransformation29transformDisplayToFrameBufferERfS1_RKNS_4RectE+0x2c>
 8015020:	680b      	ldr	r3, [r1, #0]
 8015022:	ed90 7a00 	vldr	s14, [r0]
 8015026:	6003      	str	r3, [r0, #0]
 8015028:	f9b2 3004 	ldrsh.w	r3, [r2, #4]
 801502c:	eddf 6a07 	vldr	s13, [pc, #28]	; 801504c <_ZN8touchgfx21DisplayTransformation29transformDisplayToFrameBufferERfS1_RKNS_4RectE+0x34>
 8015030:	ee07 3a90 	vmov	s15, r3
 8015034:	eef8 7ae7 	vcvt.f32.s32	s15, s15
 8015038:	ee77 7ae6 	vsub.f32	s15, s15, s13
 801503c:	ee77 7ac7 	vsub.f32	s15, s15, s14
 8015040:	edc1 7a00 	vstr	s15, [r1]
 8015044:	4770      	bx	lr
 8015046:	bf00      	nop
 8015048:	20012f1c 	.word	0x20012f1c
 801504c:	38d1b717 	.word	0x38d1b717

08015050 <_ZN8touchgfx21DisplayTransformation29transformDisplayToFrameBufferERNS_4RectERKS1_>:
 8015050:	b510      	push	{r4, lr}
 8015052:	4b0a      	ldr	r3, [pc, #40]	; (801507c <_ZN8touchgfx21DisplayTransformation29transformDisplayToFrameBufferERNS_4RectERKS1_+0x2c>)
 8015054:	781b      	ldrb	r3, [r3, #0]
 8015056:	2b01      	cmp	r3, #1
 8015058:	460a      	mov	r2, r1
 801505a:	d10d      	bne.n	8015078 <_ZN8touchgfx21DisplayTransformation29transformDisplayToFrameBufferERNS_4RectERKS1_+0x28>
 801505c:	8881      	ldrh	r1, [r0, #4]
 801505e:	8803      	ldrh	r3, [r0, #0]
 8015060:	440b      	add	r3, r1
 8015062:	4601      	mov	r1, r0
 8015064:	3b01      	subs	r3, #1
 8015066:	f821 3b02 	strh.w	r3, [r1], #2
 801506a:	f7ff ffc3 	bl	8014ff4 <_ZN8touchgfx21DisplayTransformation29transformDisplayToFrameBufferERsS1_RKNS_4RectE>
 801506e:	f9b0 3004 	ldrsh.w	r3, [r0, #4]
 8015072:	88c2      	ldrh	r2, [r0, #6]
 8015074:	8082      	strh	r2, [r0, #4]
 8015076:	80c3      	strh	r3, [r0, #6]
 8015078:	bd10      	pop	{r4, pc}
 801507a:	bf00      	nop
 801507c:	20012f1c 	.word	0x20012f1c

08015080 <_ZN8touchgfx11Application13requestRedrawEv>:
 8015080:	4b06      	ldr	r3, [pc, #24]	; (801509c <_ZN8touchgfx11Application13requestRedrawEv+0x1c>)
 8015082:	f9b3 2000 	ldrsh.w	r2, [r3]
 8015086:	4b06      	ldr	r3, [pc, #24]	; (80150a0 <_ZN8touchgfx11Application13requestRedrawEv+0x20>)
 8015088:	f8a0 2134 	strh.w	r2, [r0, #308]	; 0x134
 801508c:	f9b3 3000 	ldrsh.w	r3, [r3]
 8015090:	f8a0 3136 	strh.w	r3, [r0, #310]	; 0x136
 8015094:	2100      	movs	r1, #0
 8015096:	f8c0 1130 	str.w	r1, [r0, #304]	; 0x130
 801509a:	4770      	bx	lr
 801509c:	20012f18 	.word	0x20012f18
 80150a0:	20012f1a 	.word	0x20012f1a

080150a4 <_ZN8touchgfx11Application16handleClickEventERKNS_10ClickEventE>:
 80150a4:	4b03      	ldr	r3, [pc, #12]	; (80150b4 <_ZN8touchgfx11Application16handleClickEventERKNS_10ClickEventE+0x10>)
 80150a6:	6818      	ldr	r0, [r3, #0]
 80150a8:	b110      	cbz	r0, 80150b0 <_ZN8touchgfx11Application16handleClickEventERKNS_10ClickEventE+0xc>
 80150aa:	6803      	ldr	r3, [r0, #0]
 80150ac:	699b      	ldr	r3, [r3, #24]
 80150ae:	4718      	bx	r3
 80150b0:	4770      	bx	lr
 80150b2:	bf00      	nop
 80150b4:	20012f68 	.word	0x20012f68

080150b8 <_ZN8touchgfx11Application29handlePendingScreenTransitionEv>:
 80150b8:	4770      	bx	lr
	...

080150bc <_ZN8touchgfx11Application4drawEv>:
 80150bc:	b507      	push	{r0, r1, r2, lr}
 80150be:	4b09      	ldr	r3, [pc, #36]	; (80150e4 <_ZN8touchgfx11Application4drawEv+0x28>)
 80150c0:	f9b3 2000 	ldrsh.w	r2, [r3]
 80150c4:	4b08      	ldr	r3, [pc, #32]	; (80150e8 <_ZN8touchgfx11Application4drawEv+0x2c>)
 80150c6:	f8ad 2004 	strh.w	r2, [sp, #4]
 80150ca:	f9b3 3000 	ldrsh.w	r3, [r3]
 80150ce:	f8ad 3006 	strh.w	r3, [sp, #6]
 80150d2:	6803      	ldr	r3, [r0, #0]
 80150d4:	2100      	movs	r1, #0
 80150d6:	9100      	str	r1, [sp, #0]
 80150d8:	6c9b      	ldr	r3, [r3, #72]	; 0x48
 80150da:	4669      	mov	r1, sp
 80150dc:	4798      	blx	r3
 80150de:	b003      	add	sp, #12
 80150e0:	f85d fb04 	ldr.w	pc, [sp], #4
 80150e4:	20012f18 	.word	0x20012f18
 80150e8:	20012f1a 	.word	0x20012f1a

080150ec <_ZN8touchgfx11Application10invalidateEv>:
 80150ec:	4b09      	ldr	r3, [pc, #36]	; (8015114 <_ZN8touchgfx11Application10invalidateEv+0x28>)
 80150ee:	f9b3 2000 	ldrsh.w	r2, [r3]
 80150f2:	4b09      	ldr	r3, [pc, #36]	; (8015118 <_ZN8touchgfx11Application10invalidateEv+0x2c>)
 80150f4:	b082      	sub	sp, #8
 80150f6:	f9b3 3000 	ldrsh.w	r3, [r3]
 80150fa:	f8ad 2004 	strh.w	r2, [sp, #4]
 80150fe:	2100      	movs	r1, #0
 8015100:	f8ad 3006 	strh.w	r3, [sp, #6]
 8015104:	9100      	str	r1, [sp, #0]
 8015106:	6803      	ldr	r3, [r0, #0]
 8015108:	aa02      	add	r2, sp, #8
 801510a:	e912 0006 	ldmdb	r2, {r1, r2}
 801510e:	6c1b      	ldr	r3, [r3, #64]	; 0x40
 8015110:	b002      	add	sp, #8
 8015112:	4718      	bx	r3
 8015114:	20012f18 	.word	0x20012f18
 8015118:	20012f1a 	.word	0x20012f1a

0801511c <_ZN8touchgfx11Application15handleDragEventERKNS_9DragEventE>:
 801511c:	4b03      	ldr	r3, [pc, #12]	; (801512c <_ZN8touchgfx11Application15handleDragEventERKNS_9DragEventE+0x10>)
 801511e:	6818      	ldr	r0, [r3, #0]
 8015120:	b110      	cbz	r0, 8015128 <_ZN8touchgfx11Application15handleDragEventERKNS_9DragEventE+0xc>
 8015122:	6803      	ldr	r3, [r0, #0]
 8015124:	69db      	ldr	r3, [r3, #28]
 8015126:	4718      	bx	r3
 8015128:	4770      	bx	lr
 801512a:	bf00      	nop
 801512c:	20012f68 	.word	0x20012f68

08015130 <_ZN8touchgfx11Application18handleGestureEventERKNS_12GestureEventE>:
 8015130:	4b03      	ldr	r3, [pc, #12]	; (8015140 <_ZN8touchgfx11Application18handleGestureEventERKNS_12GestureEventE+0x10>)
 8015132:	6818      	ldr	r0, [r3, #0]
 8015134:	b110      	cbz	r0, 801513c <_ZN8touchgfx11Application18handleGestureEventERKNS_12GestureEventE+0xc>
 8015136:	6803      	ldr	r3, [r0, #0]
 8015138:	6a1b      	ldr	r3, [r3, #32]
 801513a:	4718      	bx	r3
 801513c:	4770      	bx	lr
 801513e:	bf00      	nop
 8015140:	20012f68 	.word	0x20012f68

08015144 <_ZN8touchgfx11Application16clearCachedAreasEv>:
 8015144:	2300      	movs	r3, #0
 8015146:	f8a0 30ec 	strh.w	r3, [r0, #236]	; 0xec
 801514a:	4770      	bx	lr

0801514c <_ZN8touchgfx11Application14handleKeyEventEh>:
 801514c:	4b03      	ldr	r3, [pc, #12]	; (801515c <_ZN8touchgfx11Application14handleKeyEventEh+0x10>)
 801514e:	6818      	ldr	r0, [r3, #0]
 8015150:	b110      	cbz	r0, 8015158 <_ZN8touchgfx11Application14handleKeyEventEh+0xc>
 8015152:	6803      	ldr	r3, [r0, #0]
 8015154:	6a9b      	ldr	r3, [r3, #40]	; 0x28
 8015156:	4718      	bx	r3
 8015158:	4770      	bx	lr
 801515a:	bf00      	nop
 801515c:	20012f68 	.word	0x20012f68

08015160 <_ZN8touchgfx11ApplicationD1Ev>:
 8015160:	4770      	bx	lr

08015162 <_ZN8touchgfx11ApplicationD0Ev>:
 8015162:	b510      	push	{r4, lr}
 8015164:	f44f 719e 	mov.w	r1, #316	; 0x13c
 8015168:	4604      	mov	r4, r0
 801516a:	f014 f958 	bl	802941e <_ZdlPvj>
 801516e:	4620      	mov	r0, r4
 8015170:	bd10      	pop	{r4, pc}

08015172 <_ZNK8touchgfx4Rect9intersectERKS0_>:
 8015172:	b510      	push	{r4, lr}
 8015174:	f9b1 4000 	ldrsh.w	r4, [r1]
 8015178:	888a      	ldrh	r2, [r1, #4]
 801517a:	f9b0 3000 	ldrsh.w	r3, [r0]
 801517e:	4422      	add	r2, r4
 8015180:	b212      	sxth	r2, r2
 8015182:	4293      	cmp	r3, r2
 8015184:	da15      	bge.n	80151b2 <_ZNK8touchgfx4Rect9intersectERKS0_+0x40>
 8015186:	8882      	ldrh	r2, [r0, #4]
 8015188:	4413      	add	r3, r2
 801518a:	b21b      	sxth	r3, r3
 801518c:	429c      	cmp	r4, r3
 801518e:	da10      	bge.n	80151b2 <_ZNK8touchgfx4Rect9intersectERKS0_+0x40>
 8015190:	f9b1 3002 	ldrsh.w	r3, [r1, #2]
 8015194:	88c9      	ldrh	r1, [r1, #6]
 8015196:	f9b0 2002 	ldrsh.w	r2, [r0, #2]
 801519a:	4419      	add	r1, r3
 801519c:	b209      	sxth	r1, r1
 801519e:	428a      	cmp	r2, r1
 80151a0:	da07      	bge.n	80151b2 <_ZNK8touchgfx4Rect9intersectERKS0_+0x40>
 80151a2:	88c0      	ldrh	r0, [r0, #6]
 80151a4:	4410      	add	r0, r2
 80151a6:	b200      	sxth	r0, r0
 80151a8:	4283      	cmp	r3, r0
 80151aa:	bfac      	ite	ge
 80151ac:	2000      	movge	r0, #0
 80151ae:	2001      	movlt	r0, #1
 80151b0:	bd10      	pop	{r4, pc}
 80151b2:	2000      	movs	r0, #0
 80151b4:	e7fc      	b.n	80151b0 <_ZNK8touchgfx4Rect9intersectERKS0_+0x3e>

080151b6 <_ZN8touchgfx4Rect10restrictToEss>:
 80151b6:	f9b0 3000 	ldrsh.w	r3, [r0]
 80151ba:	2b00      	cmp	r3, #0
 80151bc:	b510      	push	{r4, lr}
 80151be:	da04      	bge.n	80151ca <_ZN8touchgfx4Rect10restrictToEss+0x14>
 80151c0:	8884      	ldrh	r4, [r0, #4]
 80151c2:	4423      	add	r3, r4
 80151c4:	8083      	strh	r3, [r0, #4]
 80151c6:	2300      	movs	r3, #0
 80151c8:	8003      	strh	r3, [r0, #0]
 80151ca:	f9b0 4000 	ldrsh.w	r4, [r0]
 80151ce:	f9b0 3004 	ldrsh.w	r3, [r0, #4]
 80151d2:	1b09      	subs	r1, r1, r4
 80151d4:	428b      	cmp	r3, r1
 80151d6:	f9b0 3002 	ldrsh.w	r3, [r0, #2]
 80151da:	bfc8      	it	gt
 80151dc:	8081      	strhgt	r1, [r0, #4]
 80151de:	2b00      	cmp	r3, #0
 80151e0:	da04      	bge.n	80151ec <_ZN8touchgfx4Rect10restrictToEss+0x36>
 80151e2:	88c1      	ldrh	r1, [r0, #6]
 80151e4:	440b      	add	r3, r1
 80151e6:	80c3      	strh	r3, [r0, #6]
 80151e8:	2300      	movs	r3, #0
 80151ea:	8043      	strh	r3, [r0, #2]
 80151ec:	f9b0 1002 	ldrsh.w	r1, [r0, #2]
 80151f0:	f9b0 3006 	ldrsh.w	r3, [r0, #6]
 80151f4:	1a52      	subs	r2, r2, r1
 80151f6:	4293      	cmp	r3, r2
 80151f8:	bfc8      	it	gt
 80151fa:	80c2      	strhgt	r2, [r0, #6]
 80151fc:	bd10      	pop	{r4, pc}
	...

08015200 <_ZN8touchgfx11Application4drawERNS_4RectE>:
 8015200:	b510      	push	{r4, lr}
 8015202:	4b10      	ldr	r3, [pc, #64]	; (8015244 <_ZN8touchgfx11Application4drawERNS_4RectE+0x44>)
 8015204:	f9b3 2000 	ldrsh.w	r2, [r3]
 8015208:	4b0f      	ldr	r3, [pc, #60]	; (8015248 <_ZN8touchgfx11Application4drawERNS_4RectE+0x48>)
 801520a:	460c      	mov	r4, r1
 801520c:	4620      	mov	r0, r4
 801520e:	f9b3 1000 	ldrsh.w	r1, [r3]
 8015212:	f7ff ffd0 	bl	80151b6 <_ZN8touchgfx4Rect10restrictToEss>
 8015216:	4b0d      	ldr	r3, [pc, #52]	; (801524c <_ZN8touchgfx11Application4drawERNS_4RectE+0x4c>)
 8015218:	6818      	ldr	r0, [r3, #0]
 801521a:	b190      	cbz	r0, 8015242 <_ZN8touchgfx11Application4drawERNS_4RectE+0x42>
 801521c:	6803      	ldr	r3, [r0, #0]
 801521e:	4621      	mov	r1, r4
 8015220:	689b      	ldr	r3, [r3, #8]
 8015222:	4798      	blx	r3
 8015224:	4b0a      	ldr	r3, [pc, #40]	; (8015250 <_ZN8touchgfx11Application4drawERNS_4RectE+0x50>)
 8015226:	6818      	ldr	r0, [r3, #0]
 8015228:	b118      	cbz	r0, 8015232 <_ZN8touchgfx11Application4drawERNS_4RectE+0x32>
 801522a:	6803      	ldr	r3, [r0, #0]
 801522c:	4621      	mov	r1, r4
 801522e:	689b      	ldr	r3, [r3, #8]
 8015230:	4798      	blx	r3
 8015232:	4b08      	ldr	r3, [pc, #32]	; (8015254 <_ZN8touchgfx11Application4drawERNS_4RectE+0x54>)
 8015234:	6818      	ldr	r0, [r3, #0]
 8015236:	6803      	ldr	r3, [r0, #0]
 8015238:	4621      	mov	r1, r4
 801523a:	69db      	ldr	r3, [r3, #28]
 801523c:	e8bd 4010 	ldmia.w	sp!, {r4, lr}
 8015240:	4718      	bx	r3
 8015242:	bd10      	pop	{r4, pc}
 8015244:	20012f1a 	.word	0x20012f1a
 8015248:	20012f18 	.word	0x20012f18
 801524c:	20012f68 	.word	0x20012f68
 8015250:	20012f64 	.word	0x20012f64
 8015254:	20012f24 	.word	0x20012f24

08015258 <_ZNK8touchgfx4Rect8includesERKS0_>:
 8015258:	b5f8      	push	{r3, r4, r5, r6, r7, lr}
 801525a:	4606      	mov	r6, r0
 801525c:	4608      	mov	r0, r1
 801525e:	460f      	mov	r7, r1
 8015260:	f7fa ff97 	bl	8010192 <_ZNK8touchgfx4Rect7isEmptyEv>
 8015264:	b9e8      	cbnz	r0, 80152a2 <_ZNK8touchgfx4Rect8includesERKS0_+0x4a>
 8015266:	f9b7 5000 	ldrsh.w	r5, [r7]
 801526a:	f9b6 4000 	ldrsh.w	r4, [r6]
 801526e:	42a5      	cmp	r5, r4
 8015270:	db17      	blt.n	80152a2 <_ZNK8touchgfx4Rect8includesERKS0_+0x4a>
 8015272:	f9b7 2002 	ldrsh.w	r2, [r7, #2]
 8015276:	f9b6 3002 	ldrsh.w	r3, [r6, #2]
 801527a:	429a      	cmp	r2, r3
 801527c:	db11      	blt.n	80152a2 <_ZNK8touchgfx4Rect8includesERKS0_+0x4a>
 801527e:	88b9      	ldrh	r1, [r7, #4]
 8015280:	440d      	add	r5, r1
 8015282:	88b1      	ldrh	r1, [r6, #4]
 8015284:	440c      	add	r4, r1
 8015286:	b22d      	sxth	r5, r5
 8015288:	b224      	sxth	r4, r4
 801528a:	42a5      	cmp	r5, r4
 801528c:	dc09      	bgt.n	80152a2 <_ZNK8touchgfx4Rect8includesERKS0_+0x4a>
 801528e:	88f8      	ldrh	r0, [r7, #6]
 8015290:	4410      	add	r0, r2
 8015292:	88f2      	ldrh	r2, [r6, #6]
 8015294:	4413      	add	r3, r2
 8015296:	b200      	sxth	r0, r0
 8015298:	b21b      	sxth	r3, r3
 801529a:	4298      	cmp	r0, r3
 801529c:	bfcc      	ite	gt
 801529e:	2000      	movgt	r0, #0
 80152a0:	2001      	movle	r0, #1
 80152a2:	bdf8      	pop	{r3, r4, r5, r6, r7, pc}

080152a4 <_ZN8touchgfx4Rect11expandToFitERKS0_>:
 80152a4:	b5f8      	push	{r3, r4, r5, r6, r7, lr}
 80152a6:	4604      	mov	r4, r0
 80152a8:	4608      	mov	r0, r1
 80152aa:	460d      	mov	r5, r1
 80152ac:	f7fa ff71 	bl	8010192 <_ZNK8touchgfx4Rect7isEmptyEv>
 80152b0:	b978      	cbnz	r0, 80152d2 <_ZN8touchgfx4Rect11expandToFitERKS0_+0x2e>
 80152b2:	4620      	mov	r0, r4
 80152b4:	f7fa ff6d 	bl	8010192 <_ZNK8touchgfx4Rect7isEmptyEv>
 80152b8:	f9b5 6000 	ldrsh.w	r6, [r5]
 80152bc:	b150      	cbz	r0, 80152d4 <_ZN8touchgfx4Rect11expandToFitERKS0_+0x30>
 80152be:	8026      	strh	r6, [r4, #0]
 80152c0:	f9b5 3002 	ldrsh.w	r3, [r5, #2]
 80152c4:	8063      	strh	r3, [r4, #2]
 80152c6:	f9b5 3004 	ldrsh.w	r3, [r5, #4]
 80152ca:	80a3      	strh	r3, [r4, #4]
 80152cc:	f9b5 3006 	ldrsh.w	r3, [r5, #6]
 80152d0:	80e3      	strh	r3, [r4, #6]
 80152d2:	bdf8      	pop	{r3, r4, r5, r6, r7, pc}
 80152d4:	f9b4 1000 	ldrsh.w	r1, [r4]
 80152d8:	f9b5 2002 	ldrsh.w	r2, [r5, #2]
 80152dc:	f9b4 3002 	ldrsh.w	r3, [r4, #2]
 80152e0:	f8b5 c004 	ldrh.w	ip, [r5, #4]
 80152e4:	88ed      	ldrh	r5, [r5, #6]
 80152e6:	42b1      	cmp	r1, r6
 80152e8:	460f      	mov	r7, r1
 80152ea:	bfa8      	it	ge
 80152ec:	4637      	movge	r7, r6
 80152ee:	4293      	cmp	r3, r2
 80152f0:	4618      	mov	r0, r3
 80152f2:	4466      	add	r6, ip
 80152f4:	bfa8      	it	ge
 80152f6:	4610      	movge	r0, r2
 80152f8:	f8b4 c004 	ldrh.w	ip, [r4, #4]
 80152fc:	8027      	strh	r7, [r4, #0]
 80152fe:	442a      	add	r2, r5
 8015300:	88e5      	ldrh	r5, [r4, #6]
 8015302:	8060      	strh	r0, [r4, #2]
 8015304:	4461      	add	r1, ip
 8015306:	442b      	add	r3, r5
 8015308:	b236      	sxth	r6, r6
 801530a:	b209      	sxth	r1, r1
 801530c:	b212      	sxth	r2, r2
 801530e:	b21b      	sxth	r3, r3
 8015310:	428e      	cmp	r6, r1
 8015312:	bfac      	ite	ge
 8015314:	ebc7 0106 	rsbge	r1, r7, r6
 8015318:	ebc7 0101 	rsblt	r1, r7, r1
 801531c:	429a      	cmp	r2, r3
 801531e:	bfac      	ite	ge
 8015320:	ebc0 0202 	rsbge	r2, r0, r2
 8015324:	ebc0 0203 	rsblt	r2, r0, r3
 8015328:	80a1      	strh	r1, [r4, #4]
 801532a:	80e2      	strh	r2, [r4, #6]
 801532c:	e7d1      	b.n	80152d2 <_ZN8touchgfx4Rect11expandToFitERKS0_+0x2e>
	...

08015330 <_ZN8touchgfx11Application11getInstanceEv>:
 8015330:	4b01      	ldr	r3, [pc, #4]	; (8015338 <_ZN8touchgfx11Application11getInstanceEv+0x8>)
 8015332:	6818      	ldr	r0, [r3, #0]
 8015334:	4770      	bx	lr
 8015336:	bf00      	nop
 8015338:	20012f78 	.word	0x20012f78

0801533c <_ZN8touchgfx11Application41copyInvalidatedAreasFromTFTToClientBufferEv>:
 801533c:	b5f8      	push	{r3, r4, r5, r6, r7, lr}
 801533e:	4b10      	ldr	r3, [pc, #64]	; (8015380 <_ZN8touchgfx11Application41copyInvalidatedAreasFromTFTToClientBufferEv+0x44>)
 8015340:	781b      	ldrb	r3, [r3, #0]
 8015342:	4605      	mov	r5, r0
 8015344:	b1d3      	cbz	r3, 801537c <_ZN8touchgfx11Application41copyInvalidatedAreasFromTFTToClientBufferEv+0x40>
 8015346:	4b0f      	ldr	r3, [pc, #60]	; (8015384 <_ZN8touchgfx11Application41copyInvalidatedAreasFromTFTToClientBufferEv+0x48>)
 8015348:	4f0f      	ldr	r7, [pc, #60]	; (8015388 <_ZN8touchgfx11Application41copyInvalidatedAreasFromTFTToClientBufferEv+0x4c>)
 801534a:	881c      	ldrh	r4, [r3, #0]
 801534c:	f100 06ee 	add.w	r6, r0, #238	; 0xee
 8015350:	f8b5 312e 	ldrh.w	r3, [r5, #302]	; 0x12e
 8015354:	42a3      	cmp	r3, r4
 8015356:	d90e      	bls.n	8015376 <_ZN8touchgfx11Application41copyInvalidatedAreasFromTFTToClientBufferEv+0x3a>
 8015358:	683b      	ldr	r3, [r7, #0]
 801535a:	f893 2058 	ldrb.w	r2, [r3, #88]	; 0x58
 801535e:	b10a      	cbz	r2, 8015364 <_ZN8touchgfx11Application41copyInvalidatedAreasFromTFTToClientBufferEv+0x28>
 8015360:	6cd8      	ldr	r0, [r3, #76]	; 0x4c
 8015362:	b900      	cbnz	r0, 8015366 <_ZN8touchgfx11Application41copyInvalidatedAreasFromTFTToClientBufferEv+0x2a>
 8015364:	6898      	ldr	r0, [r3, #8]
 8015366:	6803      	ldr	r3, [r0, #0]
 8015368:	eb06 01c4 	add.w	r1, r6, r4, lsl #3
 801536c:	69db      	ldr	r3, [r3, #28]
 801536e:	3401      	adds	r4, #1
 8015370:	4798      	blx	r3
 8015372:	b2a4      	uxth	r4, r4
 8015374:	e7ec      	b.n	8015350 <_ZN8touchgfx11Application41copyInvalidatedAreasFromTFTToClientBufferEv+0x14>
 8015376:	2300      	movs	r3, #0
 8015378:	f8a5 312e 	strh.w	r3, [r5, #302]	; 0x12e
 801537c:	bdf8      	pop	{r3, r4, r5, r6, r7, pc}
 801537e:	bf00      	nop
 8015380:	20012f22 	.word	0x20012f22
 8015384:	20000088 	.word	0x20000088
 8015388:	20012f24 	.word	0x20012f24

0801538c <_ZN8touchgfx11Application12TimerWidgets10tickActiveEv>:
 801538c:	b510      	push	{r4, lr}
 801538e:	2300      	movs	r3, #0
 8015390:	f8a0 30a4 	strh.w	r3, [r0, #164]	; 0xa4
 8015394:	f8b0 3080 	ldrh.w	r3, [r0, #128]	; 0x80
 8015398:	f8a0 30a6 	strh.w	r3, [r0, #166]	; 0xa6
 801539c:	4604      	mov	r4, r0
 801539e:	f8b4 30a4 	ldrh.w	r3, [r4, #164]	; 0xa4
 80153a2:	f8b4 20a6 	ldrh.w	r2, [r4, #166]	; 0xa6
 80153a6:	429a      	cmp	r2, r3
 80153a8:	d90e      	bls.n	80153c8 <_ZN8touchgfx11Application12TimerWidgets10tickActiveEv+0x3c>
 80153aa:	18e2      	adds	r2, r4, r3
 80153ac:	f892 2084 	ldrb.w	r2, [r2, #132]	; 0x84
 80153b0:	b122      	cbz	r2, 80153bc <_ZN8touchgfx11Application12TimerWidgets10tickActiveEv+0x30>
 80153b2:	f854 0023 	ldr.w	r0, [r4, r3, lsl #2]
 80153b6:	6803      	ldr	r3, [r0, #0]
 80153b8:	6d1b      	ldr	r3, [r3, #80]	; 0x50
 80153ba:	4798      	blx	r3
 80153bc:	f8b4 30a4 	ldrh.w	r3, [r4, #164]	; 0xa4
 80153c0:	3301      	adds	r3, #1
 80153c2:	f8a4 30a4 	strh.w	r3, [r4, #164]	; 0xa4
 80153c6:	e7ea      	b.n	801539e <_ZN8touchgfx11Application12TimerWidgets10tickActiveEv+0x12>
 80153c8:	bd10      	pop	{r4, pc}

080153ca <_ZN8touchgfx11Application12TimerWidgets6removeEPKNS_8DrawableE>:
 80153ca:	b530      	push	{r4, r5, lr}
 80153cc:	f8b0 5080 	ldrh.w	r5, [r0, #128]	; 0x80
 80153d0:	2200      	movs	r2, #0
 80153d2:	b293      	uxth	r3, r2
 80153d4:	429d      	cmp	r5, r3
 80153d6:	d90e      	bls.n	80153f6 <_ZN8touchgfx11Application12TimerWidgets6removeEPKNS_8DrawableE+0x2c>
 80153d8:	f850 3022 	ldr.w	r3, [r0, r2, lsl #2]
 80153dc:	428b      	cmp	r3, r1
 80153de:	d10b      	bne.n	80153f8 <_ZN8touchgfx11Application12TimerWidgets6removeEPKNS_8DrawableE+0x2e>
 80153e0:	1884      	adds	r4, r0, r2
 80153e2:	f894 3084 	ldrb.w	r3, [r4, #132]	; 0x84
 80153e6:	b13b      	cbz	r3, 80153f8 <_ZN8touchgfx11Application12TimerWidgets6removeEPKNS_8DrawableE+0x2e>
 80153e8:	3b01      	subs	r3, #1
 80153ea:	b2db      	uxtb	r3, r3
 80153ec:	f884 3084 	strb.w	r3, [r4, #132]	; 0x84
 80153f0:	b90b      	cbnz	r3, 80153f6 <_ZN8touchgfx11Application12TimerWidgets6removeEPKNS_8DrawableE+0x2c>
 80153f2:	f840 3022 	str.w	r3, [r0, r2, lsl #2]
 80153f6:	bd30      	pop	{r4, r5, pc}
 80153f8:	3201      	adds	r2, #1
 80153fa:	e7ea      	b.n	80153d2 <_ZN8touchgfx11Application12TimerWidgets6removeEPKNS_8DrawableE+0x8>

080153fc <_ZN8touchgfx11Application12TimerWidgets5clearEv>:
 80153fc:	2300      	movs	r3, #0
 80153fe:	f8a0 3080 	strh.w	r3, [r0, #128]	; 0x80
 8015402:	f100 0284 	add.w	r2, r0, #132	; 0x84
 8015406:	30a4      	adds	r0, #164	; 0xa4
 8015408:	f802 3b01 	strb.w	r3, [r2], #1
 801540c:	4282      	cmp	r2, r0
 801540e:	d1fb      	bne.n	8015408 <_ZN8touchgfx11Application12TimerWidgets5clearEv+0xc>
 8015410:	4770      	bx	lr
	...

08015414 <_ZN8touchgfx11Application12switchScreenEPNS_6ScreenE>:
 8015414:	b570      	push	{r4, r5, r6, lr}
 8015416:	4c0b      	ldr	r4, [pc, #44]	; (8015444 <_ZN8touchgfx11Application12switchScreenEPNS_6ScreenE+0x30>)
 8015418:	4605      	mov	r5, r0
 801541a:	6820      	ldr	r0, [r4, #0]
 801541c:	460e      	mov	r6, r1
 801541e:	b110      	cbz	r0, 8015426 <_ZN8touchgfx11Application12switchScreenEPNS_6ScreenE+0x12>
 8015420:	6803      	ldr	r3, [r0, #0]
 8015422:	695b      	ldr	r3, [r3, #20]
 8015424:	4798      	blx	r3
 8015426:	1d28      	adds	r0, r5, #4
 8015428:	f7ff ffe8 	bl	80153fc <_ZN8touchgfx11Application12TimerWidgets5clearEv>
 801542c:	6026      	str	r6, [r4, #0]
 801542e:	6833      	ldr	r3, [r6, #0]
 8015430:	4630      	mov	r0, r6
 8015432:	68db      	ldr	r3, [r3, #12]
 8015434:	4798      	blx	r3
 8015436:	682b      	ldr	r3, [r5, #0]
 8015438:	4628      	mov	r0, r5
 801543a:	6c5b      	ldr	r3, [r3, #68]	; 0x44
 801543c:	e8bd 4070 	ldmia.w	sp!, {r4, r5, r6, lr}
 8015440:	4718      	bx	r3
 8015442:	bf00      	nop
 8015444:	20012f68 	.word	0x20012f68

08015448 <_ZN8touchgfx11Application12TimerWidgets7compactEv>:
 8015448:	2300      	movs	r3, #0
 801544a:	f8b0 c080 	ldrh.w	ip, [r0, #128]	; 0x80
 801544e:	f8b0 10a4 	ldrh.w	r1, [r0, #164]	; 0xa4
 8015452:	b5f0      	push	{r4, r5, r6, r7, lr}
 8015454:	461a      	mov	r2, r3
 8015456:	461c      	mov	r4, r3
 8015458:	461d      	mov	r5, r3
 801545a:	459c      	cmp	ip, r3
 801545c:	dd1a      	ble.n	8015494 <_ZN8touchgfx11Application12TimerWidgets7compactEv+0x4c>
 801545e:	18c6      	adds	r6, r0, r3
 8015460:	f896 6084 	ldrb.w	r6, [r6, #132]	; 0x84
 8015464:	b16e      	cbz	r6, 8015482 <_ZN8touchgfx11Application12TimerWidgets7compactEv+0x3a>
 8015466:	429a      	cmp	r2, r3
 8015468:	d008      	beq.n	801547c <_ZN8touchgfx11Application12TimerWidgets7compactEv+0x34>
 801546a:	fa1f fe82 	uxth.w	lr, r2
 801546e:	f850 7023 	ldr.w	r7, [r0, r3, lsl #2]
 8015472:	f840 702e 	str.w	r7, [r0, lr, lsl #2]
 8015476:	1887      	adds	r7, r0, r2
 8015478:	f887 6084 	strb.w	r6, [r7, #132]	; 0x84
 801547c:	3201      	adds	r2, #1
 801547e:	3301      	adds	r3, #1
 8015480:	e7eb      	b.n	801545a <_ZN8touchgfx11Application12TimerWidgets7compactEv+0x12>
 8015482:	f8b0 60a6 	ldrh.w	r6, [r0, #166]	; 0xa6
 8015486:	4299      	cmp	r1, r3
 8015488:	bfa8      	it	ge
 801548a:	3501      	addge	r5, #1
 801548c:	429e      	cmp	r6, r3
 801548e:	bfc8      	it	gt
 8015490:	3401      	addgt	r4, #1
 8015492:	e7f4      	b.n	801547e <_ZN8touchgfx11Application12TimerWidgets7compactEv+0x36>
 8015494:	f8b0 30a6 	ldrh.w	r3, [r0, #166]	; 0xa6
 8015498:	1b49      	subs	r1, r1, r5
 801549a:	1b1b      	subs	r3, r3, r4
 801549c:	f8a0 10a4 	strh.w	r1, [r0, #164]	; 0xa4
 80154a0:	f8a0 30a6 	strh.w	r3, [r0, #166]	; 0xa6
 80154a4:	f8b0 3080 	ldrh.w	r3, [r0, #128]	; 0x80
 80154a8:	4293      	cmp	r3, r2
 80154aa:	dd03      	ble.n	80154b4 <_ZN8touchgfx11Application12TimerWidgets7compactEv+0x6c>
 80154ac:	3b01      	subs	r3, #1
 80154ae:	f8a0 3080 	strh.w	r3, [r0, #128]	; 0x80
 80154b2:	e7f7      	b.n	80154a4 <_ZN8touchgfx11Application12TimerWidgets7compactEv+0x5c>
 80154b4:	bdf0      	pop	{r4, r5, r6, r7, pc}
	...

080154b8 <_ZN8touchgfx11Application15handleTickEventEv>:
 80154b8:	b570      	push	{r4, r5, r6, lr}
 80154ba:	4d16      	ldr	r5, [pc, #88]	; (8015514 <_ZN8touchgfx11Application15handleTickEventEv+0x5c>)
 80154bc:	4604      	mov	r4, r0
 80154be:	6828      	ldr	r0, [r5, #0]
 80154c0:	b140      	cbz	r0, 80154d4 <_ZN8touchgfx11Application15handleTickEventEv+0x1c>
 80154c2:	7a03      	ldrb	r3, [r0, #8]
 80154c4:	b933      	cbnz	r3, 80154d4 <_ZN8touchgfx11Application15handleTickEventEv+0x1c>
 80154c6:	f884 3138 	strb.w	r3, [r4, #312]	; 0x138
 80154ca:	6803      	ldr	r3, [r0, #0]
 80154cc:	689b      	ldr	r3, [r3, #8]
 80154ce:	e8bd 4070 	ldmia.w	sp!, {r4, r5, r6, lr}
 80154d2:	4718      	bx	r3
 80154d4:	f894 3138 	ldrb.w	r3, [r4, #312]	; 0x138
 80154d8:	4e0f      	ldr	r6, [pc, #60]	; (8015518 <_ZN8touchgfx11Application15handleTickEventEv+0x60>)
 80154da:	b973      	cbnz	r3, 80154fa <_ZN8touchgfx11Application15handleTickEventEv+0x42>
 80154dc:	b168      	cbz	r0, 80154fa <_ZN8touchgfx11Application15handleTickEventEv+0x42>
 80154de:	7a03      	ldrb	r3, [r0, #8]
 80154e0:	b15b      	cbz	r3, 80154fa <_ZN8touchgfx11Application15handleTickEventEv+0x42>
 80154e2:	6830      	ldr	r0, [r6, #0]
 80154e4:	b110      	cbz	r0, 80154ec <_ZN8touchgfx11Application15handleTickEventEv+0x34>
 80154e6:	6803      	ldr	r3, [r0, #0]
 80154e8:	691b      	ldr	r3, [r3, #16]
 80154ea:	4798      	blx	r3
 80154ec:	6828      	ldr	r0, [r5, #0]
 80154ee:	6803      	ldr	r3, [r0, #0]
 80154f0:	68db      	ldr	r3, [r3, #12]
 80154f2:	4798      	blx	r3
 80154f4:	2301      	movs	r3, #1
 80154f6:	f884 3138 	strb.w	r3, [r4, #312]	; 0x138
 80154fa:	3404      	adds	r4, #4
 80154fc:	4620      	mov	r0, r4
 80154fe:	f7ff ff45 	bl	801538c <_ZN8touchgfx11Application12TimerWidgets10tickActiveEv>
 8015502:	4620      	mov	r0, r4
 8015504:	f7ff ffa0 	bl	8015448 <_ZN8touchgfx11Application12TimerWidgets7compactEv>
 8015508:	6830      	ldr	r0, [r6, #0]
 801550a:	b110      	cbz	r0, 8015512 <_ZN8touchgfx11Application15handleTickEventEv+0x5a>
 801550c:	6803      	ldr	r3, [r0, #0]
 801550e:	6a5b      	ldr	r3, [r3, #36]	; 0x24
 8015510:	e7dd      	b.n	80154ce <_ZN8touchgfx11Application15handleTickEventEv+0x16>
 8015512:	bd70      	pop	{r4, r5, r6, pc}
 8015514:	20012f6c 	.word	0x20012f6c
 8015518:	20012f68 	.word	0x20012f68

0801551c <_ZN8touchgfx11Application12TimerWidgets3addEPNS_8DrawableE>:
 801551c:	b5f8      	push	{r3, r4, r5, r6, r7, lr}
 801551e:	2300      	movs	r3, #0
 8015520:	4604      	mov	r4, r0
 8015522:	460d      	mov	r5, r1
 8015524:	f8b0 1080 	ldrh.w	r1, [r0, #128]	; 0x80
 8015528:	4618      	mov	r0, r3
 801552a:	b29a      	uxth	r2, r3
 801552c:	4291      	cmp	r1, r2
 801552e:	d911      	bls.n	8015554 <_ZN8touchgfx11Application12TimerWidgets3addEPNS_8DrawableE+0x38>
 8015530:	f854 7023 	ldr.w	r7, [r4, r3, lsl #2]
 8015534:	18e6      	adds	r6, r4, r3
 8015536:	42af      	cmp	r7, r5
 8015538:	f896 2084 	ldrb.w	r2, [r6, #132]	; 0x84
 801553c:	d105      	bne.n	801554a <_ZN8touchgfx11Application12TimerWidgets3addEPNS_8DrawableE+0x2e>
 801553e:	2aff      	cmp	r2, #255	; 0xff
 8015540:	d002      	beq.n	8015548 <_ZN8touchgfx11Application12TimerWidgets3addEPNS_8DrawableE+0x2c>
 8015542:	3201      	adds	r2, #1
 8015544:	f886 2084 	strb.w	r2, [r6, #132]	; 0x84
 8015548:	bdf8      	pop	{r3, r4, r5, r6, r7, pc}
 801554a:	2a00      	cmp	r2, #0
 801554c:	bf08      	it	eq
 801554e:	2001      	moveq	r0, #1
 8015550:	3301      	adds	r3, #1
 8015552:	e7ea      	b.n	801552a <_ZN8touchgfx11Application12TimerWidgets3addEPNS_8DrawableE+0xe>
 8015554:	b120      	cbz	r0, 8015560 <_ZN8touchgfx11Application12TimerWidgets3addEPNS_8DrawableE+0x44>
 8015556:	2920      	cmp	r1, #32
 8015558:	d102      	bne.n	8015560 <_ZN8touchgfx11Application12TimerWidgets3addEPNS_8DrawableE+0x44>
 801555a:	4620      	mov	r0, r4
 801555c:	f7ff ff74 	bl	8015448 <_ZN8touchgfx11Application12TimerWidgets7compactEv>
 8015560:	f8b4 3080 	ldrh.w	r3, [r4, #128]	; 0x80
 8015564:	2b1f      	cmp	r3, #31
 8015566:	d8ef      	bhi.n	8015548 <_ZN8touchgfx11Application12TimerWidgets3addEPNS_8DrawableE+0x2c>
 8015568:	18e2      	adds	r2, r4, r3
 801556a:	2101      	movs	r1, #1
 801556c:	f882 1084 	strb.w	r1, [r2, #132]	; 0x84
 8015570:	185a      	adds	r2, r3, r1
 8015572:	f8a4 2080 	strh.w	r2, [r4, #128]	; 0x80
 8015576:	f844 5023 	str.w	r5, [r4, r3, lsl #2]
 801557a:	e7e5      	b.n	8015548 <_ZN8touchgfx11Application12TimerWidgets3addEPNS_8DrawableE+0x2c>

0801557c <_ZN8touchgfx6VectorINS_4RectELt8EEC1Ev>:
 801557c:	4603      	mov	r3, r0
 801557e:	f100 0140 	add.w	r1, r0, #64	; 0x40
 8015582:	2200      	movs	r2, #0
 8015584:	801a      	strh	r2, [r3, #0]
 8015586:	805a      	strh	r2, [r3, #2]
 8015588:	809a      	strh	r2, [r3, #4]
 801558a:	80da      	strh	r2, [r3, #6]
 801558c:	3308      	adds	r3, #8
 801558e:	428b      	cmp	r3, r1
 8015590:	d1f8      	bne.n	8015584 <_ZN8touchgfx6VectorINS_4RectELt8EEC1Ev+0x8>
 8015592:	f8a0 2040 	strh.w	r2, [r0, #64]	; 0x40
 8015596:	4770      	bx	lr

08015598 <_ZN8touchgfx11ApplicationC1Ev>:
 8015598:	b5f8      	push	{r3, r4, r5, r6, r7, lr}
 801559a:	4606      	mov	r6, r0
 801559c:	4b1c      	ldr	r3, [pc, #112]	; (8015610 <_ZN8touchgfx11ApplicationC1Ev+0x78>)
 801559e:	f846 3b04 	str.w	r3, [r6], #4
 80155a2:	4604      	mov	r4, r0
 80155a4:	2500      	movs	r5, #0
 80155a6:	22a8      	movs	r2, #168	; 0xa8
 80155a8:	2100      	movs	r1, #0
 80155aa:	4630      	mov	r0, r6
 80155ac:	f014 ff4f 	bl	802a44e <memset>
 80155b0:	f8a4 5084 	strh.w	r5, [r4, #132]	; 0x84
 80155b4:	f104 00ac 	add.w	r0, r4, #172	; 0xac
 80155b8:	f7ff ffe0 	bl	801557c <_ZN8touchgfx6VectorINS_4RectELt8EEC1Ev>
 80155bc:	f104 00ee 	add.w	r0, r4, #238	; 0xee
 80155c0:	f7ff ffdc 	bl	801557c <_ZN8touchgfx6VectorINS_4RectELt8EEC1Ev>
 80155c4:	f8a4 5130 	strh.w	r5, [r4, #304]	; 0x130
 80155c8:	f8a4 5132 	strh.w	r5, [r4, #306]	; 0x132
 80155cc:	f8a4 5134 	strh.w	r5, [r4, #308]	; 0x134
 80155d0:	f8a4 5136 	strh.w	r5, [r4, #310]	; 0x136
 80155d4:	f884 5138 	strb.w	r5, [r4, #312]	; 0x138
 80155d8:	490e      	ldr	r1, [pc, #56]	; (8015614 <_ZN8touchgfx11ApplicationC1Ev+0x7c>)
 80155da:	480f      	ldr	r0, [pc, #60]	; (8015618 <_ZN8touchgfx11ApplicationC1Ev+0x80>)
 80155dc:	4f0f      	ldr	r7, [pc, #60]	; (801561c <_ZN8touchgfx11ApplicationC1Ev+0x84>)
 80155de:	f010 fde9 	bl	80261b4 <CRC_Lock>
 80155e2:	4b0f      	ldr	r3, [pc, #60]	; (8015620 <_ZN8touchgfx11ApplicationC1Ev+0x88>)
 80155e4:	b158      	cbz	r0, 80155fe <_ZN8touchgfx11ApplicationC1Ev+0x66>
 80155e6:	801d      	strh	r5, [r3, #0]
 80155e8:	4a0e      	ldr	r2, [pc, #56]	; (8015624 <_ZN8touchgfx11ApplicationC1Ev+0x8c>)
 80155ea:	2300      	movs	r3, #0
 80155ec:	6013      	str	r3, [r2, #0]
 80155ee:	4a0e      	ldr	r2, [pc, #56]	; (8015628 <_ZN8touchgfx11ApplicationC1Ev+0x90>)
 80155f0:	603b      	str	r3, [r7, #0]
 80155f2:	4630      	mov	r0, r6
 80155f4:	6013      	str	r3, [r2, #0]
 80155f6:	f7ff ff01 	bl	80153fc <_ZN8touchgfx11Application12TimerWidgets5clearEv>
 80155fa:	4620      	mov	r0, r4
 80155fc:	bdf8      	pop	{r3, r4, r5, r6, r7, pc}
 80155fe:	f44f 6280 	mov.w	r2, #1024	; 0x400
 8015602:	2002      	movs	r0, #2
 8015604:	801a      	strh	r2, [r3, #0]
 8015606:	6038      	str	r0, [r7, #0]
 8015608:	f001 fb4a 	bl	8016ca0 <_ZN8touchgfx6Screen4drawEv>
 801560c:	e7ec      	b.n	80155e8 <_ZN8touchgfx11ApplicationC1Ev+0x50>
 801560e:	bf00      	nop
 8015610:	0802e7f8 	.word	0x0802e7f8
 8015614:	b5e8b5cd 	.word	0xb5e8b5cd
 8015618:	f407a5c2 	.word	0xf407a5c2
 801561c:	20012f68 	.word	0x20012f68
 8015620:	20000088 	.word	0x20000088
 8015624:	20012f78 	.word	0x20012f78
 8015628:	20012f6c 	.word	0x20012f6c

0801562c <_ZN8touchgfx6VectorINS_4RectELt8EE13quickRemoveAtEt>:
 801562c:	f8b0 3040 	ldrh.w	r3, [r0, #64]	; 0x40
 8015630:	3b01      	subs	r3, #1
 8015632:	b29b      	uxth	r3, r3
 8015634:	428b      	cmp	r3, r1
 8015636:	b510      	push	{r4, lr}
 8015638:	f8a0 3040 	strh.w	r3, [r0, #64]	; 0x40
 801563c:	d908      	bls.n	8015650 <_ZN8touchgfx6VectorINS_4RectELt8EE13quickRemoveAtEt+0x24>
 801563e:	eb00 03c3 	add.w	r3, r0, r3, lsl #3
 8015642:	eb00 04c1 	add.w	r4, r0, r1, lsl #3
 8015646:	681a      	ldr	r2, [r3, #0]
 8015648:	f840 2031 	str.w	r2, [r0, r1, lsl #3]
 801564c:	685a      	ldr	r2, [r3, #4]
 801564e:	6062      	str	r2, [r4, #4]
 8015650:	bd10      	pop	{r4, pc}
	...

08015654 <_ZN8touchgfx11Application14invalidateAreaENS_4RectE>:
 8015654:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 8015658:	4b8f      	ldr	r3, [pc, #572]	; (8015898 <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0x244>)
 801565a:	b08f      	sub	sp, #60	; 0x3c
 801565c:	ac0a      	add	r4, sp, #40	; 0x28
 801565e:	e884 0006 	stmia.w	r4, {r1, r2}
 8015662:	f9b3 2000 	ldrsh.w	r2, [r3]
 8015666:	4b8d      	ldr	r3, [pc, #564]	; (801589c <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0x248>)
 8015668:	4683      	mov	fp, r0
 801566a:	f9b3 1000 	ldrsh.w	r1, [r3]
 801566e:	4620      	mov	r0, r4
 8015670:	f7ff fda1 	bl	80151b6 <_ZN8touchgfx4Rect10restrictToEss>
 8015674:	4620      	mov	r0, r4
 8015676:	f7fa fd8c 	bl	8010192 <_ZNK8touchgfx4Rect7isEmptyEv>
 801567a:	2800      	cmp	r0, #0
 801567c:	d16a      	bne.n	8015754 <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0x100>
 801567e:	9403      	str	r4, [sp, #12]
 8015680:	f8bb 40ec 	ldrh.w	r4, [fp, #236]	; 0xec
 8015684:	f10b 03ac 	add.w	r3, fp, #172	; 0xac
 8015688:	eb0b 05c4 	add.w	r5, fp, r4, lsl #3
 801568c:	35a4      	adds	r5, #164	; 0xa4
 801568e:	9301      	str	r3, [sp, #4]
 8015690:	b15c      	cbz	r4, 80156aa <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0x56>
 8015692:	4629      	mov	r1, r5
 8015694:	9803      	ldr	r0, [sp, #12]
 8015696:	f7ff fddf 	bl	8015258 <_ZNK8touchgfx4Rect8includesERKS0_>
 801569a:	3c01      	subs	r4, #1
 801569c:	b118      	cbz	r0, 80156a6 <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0x52>
 801569e:	b2a1      	uxth	r1, r4
 80156a0:	9801      	ldr	r0, [sp, #4]
 80156a2:	f7ff ffc3 	bl	801562c <_ZN8touchgfx6VectorINS_4RectELt8EE13quickRemoveAtEt>
 80156a6:	3d08      	subs	r5, #8
 80156a8:	e7f2      	b.n	8015690 <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0x3c>
 80156aa:	f8bb a0ec 	ldrh.w	sl, [fp, #236]	; 0xec
 80156ae:	f8cd a010 	str.w	sl, [sp, #16]
 80156b2:	f10a 33ff 	add.w	r3, sl, #4294967295
 80156b6:	9302      	str	r3, [sp, #8]
 80156b8:	ea4f 03ca 	mov.w	r3, sl, lsl #3
 80156bc:	f103 04a4 	add.w	r4, r3, #164	; 0xa4
 80156c0:	9306      	str	r3, [sp, #24]
 80156c2:	445c      	add	r4, fp
 80156c4:	2500      	movs	r5, #0
 80156c6:	4626      	mov	r6, r4
 80156c8:	f8cd a014 	str.w	sl, [sp, #20]
 80156cc:	462f      	mov	r7, r5
 80156ce:	9b05      	ldr	r3, [sp, #20]
 80156d0:	2b00      	cmp	r3, #0
 80156d2:	d073      	beq.n	80157bc <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0x168>
 80156d4:	9903      	ldr	r1, [sp, #12]
 80156d6:	4630      	mov	r0, r6
 80156d8:	f7ff fd4b 	bl	8015172 <_ZNK8touchgfx4Rect9intersectERKS0_>
 80156dc:	b350      	cbz	r0, 8015734 <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0xe0>
 80156de:	f9bd e028 	ldrsh.w	lr, [sp, #40]	; 0x28
 80156e2:	f9b6 c000 	ldrsh.w	ip, [r6]
 80156e6:	f9bd 802a 	ldrsh.w	r8, [sp, #42]	; 0x2a
 80156ea:	f9b6 9002 	ldrsh.w	r9, [r6, #2]
 80156ee:	45e6      	cmp	lr, ip
 80156f0:	db33      	blt.n	801575a <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0x106>
 80156f2:	f8bd 202c 	ldrh.w	r2, [sp, #44]	; 0x2c
 80156f6:	88b3      	ldrh	r3, [r6, #4]
 80156f8:	4472      	add	r2, lr
 80156fa:	4463      	add	r3, ip
 80156fc:	b212      	sxth	r2, r2
 80156fe:	b21b      	sxth	r3, r3
 8015700:	429a      	cmp	r2, r3
 8015702:	dc2a      	bgt.n	801575a <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0x106>
 8015704:	88f3      	ldrh	r3, [r6, #6]
 8015706:	f8bd 102e 	ldrh.w	r1, [sp, #46]	; 0x2e
 801570a:	fa1f f289 	uxth.w	r2, r9
 801570e:	4413      	add	r3, r2
 8015710:	b29b      	uxth	r3, r3
 8015712:	45c8      	cmp	r8, r9
 8015714:	fa1f fc88 	uxth.w	ip, r8
 8015718:	fa0f fe83 	sxth.w	lr, r3
 801571c:	db0f      	blt.n	801573e <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0xea>
 801571e:	eba3 030c 	sub.w	r3, r3, ip
 8015722:	1ac9      	subs	r1, r1, r3
 8015724:	b209      	sxth	r1, r1
 8015726:	2900      	cmp	r1, #0
 8015728:	f8ad 102e 	strh.w	r1, [sp, #46]	; 0x2e
 801572c:	dd12      	ble.n	8015754 <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0x100>
 801572e:	f8ad e02a 	strh.w	lr, [sp, #42]	; 0x2a
 8015732:	4605      	mov	r5, r0
 8015734:	9b05      	ldr	r3, [sp, #20]
 8015736:	3b01      	subs	r3, #1
 8015738:	9305      	str	r3, [sp, #20]
 801573a:	3e08      	subs	r6, #8
 801573c:	e7c7      	b.n	80156ce <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0x7a>
 801573e:	4461      	add	r1, ip
 8015740:	b209      	sxth	r1, r1
 8015742:	4571      	cmp	r1, lr
 8015744:	dc38      	bgt.n	80157b8 <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0x164>
 8015746:	eba2 020c 	sub.w	r2, r2, ip
 801574a:	b212      	sxth	r2, r2
 801574c:	f8ad 202e 	strh.w	r2, [sp, #46]	; 0x2e
 8015750:	2a00      	cmp	r2, #0
 8015752:	dcee      	bgt.n	8015732 <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0xde>
 8015754:	b00f      	add	sp, #60	; 0x3c
 8015756:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
 801575a:	45c8      	cmp	r8, r9
 801575c:	db2c      	blt.n	80157b8 <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0x164>
 801575e:	88f3      	ldrh	r3, [r6, #6]
 8015760:	4499      	add	r9, r3
 8015762:	f8bd 302e 	ldrh.w	r3, [sp, #46]	; 0x2e
 8015766:	4498      	add	r8, r3
 8015768:	fa0f f989 	sxth.w	r9, r9
 801576c:	fa0f f888 	sxth.w	r8, r8
 8015770:	45c1      	cmp	r9, r8
 8015772:	db21      	blt.n	80157b8 <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0x164>
 8015774:	88b3      	ldrh	r3, [r6, #4]
 8015776:	f8bd 102c 	ldrh.w	r1, [sp, #44]	; 0x2c
 801577a:	fa1f f28c 	uxth.w	r2, ip
 801577e:	4413      	add	r3, r2
 8015780:	b29b      	uxth	r3, r3
 8015782:	45e6      	cmp	lr, ip
 8015784:	fa1f f88e 	uxth.w	r8, lr
 8015788:	fa0f f983 	sxth.w	r9, r3
 801578c:	db0a      	blt.n	80157a4 <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0x150>
 801578e:	eba3 0308 	sub.w	r3, r3, r8
 8015792:	1ac9      	subs	r1, r1, r3
 8015794:	b209      	sxth	r1, r1
 8015796:	2900      	cmp	r1, #0
 8015798:	f8ad 102c 	strh.w	r1, [sp, #44]	; 0x2c
 801579c:	ddda      	ble.n	8015754 <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0x100>
 801579e:	f8ad 9028 	strh.w	r9, [sp, #40]	; 0x28
 80157a2:	e7c6      	b.n	8015732 <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0xde>
 80157a4:	4441      	add	r1, r8
 80157a6:	b209      	sxth	r1, r1
 80157a8:	4549      	cmp	r1, r9
 80157aa:	dc05      	bgt.n	80157b8 <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0x164>
 80157ac:	eba2 0208 	sub.w	r2, r2, r8
 80157b0:	b212      	sxth	r2, r2
 80157b2:	f8ad 202c 	strh.w	r2, [sp, #44]	; 0x2c
 80157b6:	e7cb      	b.n	8015750 <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0xfc>
 80157b8:	4607      	mov	r7, r0
 80157ba:	e7bb      	b.n	8015734 <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0xe0>
 80157bc:	2d00      	cmp	r5, #0
 80157be:	d181      	bne.n	80156c4 <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0x70>
 80157c0:	2f00      	cmp	r7, #0
 80157c2:	f000 81dd 	beq.w	8015b80 <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0x52c>
 80157c6:	f9bd 6028 	ldrsh.w	r6, [sp, #40]	; 0x28
 80157ca:	f9bd 702a 	ldrsh.w	r7, [sp, #42]	; 0x2a
 80157ce:	f8bd a02e 	ldrh.w	sl, [sp, #46]	; 0x2e
 80157d2:	b2b3      	uxth	r3, r6
 80157d4:	9305      	str	r3, [sp, #20]
 80157d6:	9a05      	ldr	r2, [sp, #20]
 80157d8:	f8bd 302c 	ldrh.w	r3, [sp, #44]	; 0x2c
 80157dc:	4413      	add	r3, r2
 80157de:	b2ba      	uxth	r2, r7
 80157e0:	4492      	add	sl, r2
 80157e2:	b29b      	uxth	r3, r3
 80157e4:	fa1f fa8a 	uxth.w	sl, sl
 80157e8:	fa0f f883 	sxth.w	r8, r3
 80157ec:	fa0f f98a 	sxth.w	r9, sl
 80157f0:	e9cd 2307 	strd	r2, r3, [sp, #28]
 80157f4:	9b04      	ldr	r3, [sp, #16]
 80157f6:	2b00      	cmp	r3, #0
 80157f8:	d052      	beq.n	80158a0 <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0x24c>
 80157fa:	9903      	ldr	r1, [sp, #12]
 80157fc:	4620      	mov	r0, r4
 80157fe:	f7ff fcb8 	bl	8015172 <_ZNK8touchgfx4Rect9intersectERKS0_>
 8015802:	e9dd 2307 	ldrd	r2, r3, [sp, #28]
 8015806:	b1c0      	cbz	r0, 801583a <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0x1e6>
 8015808:	f9b4 e000 	ldrsh.w	lr, [r4]
 801580c:	f9b4 1002 	ldrsh.w	r1, [r4, #2]
 8015810:	4576      	cmp	r6, lr
 8015812:	dc22      	bgt.n	801585a <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0x206>
 8015814:	f8b4 c004 	ldrh.w	ip, [r4, #4]
 8015818:	44f4      	add	ip, lr
 801581a:	fa0f fc8c 	sxth.w	ip, ip
 801581e:	45e0      	cmp	r8, ip
 8015820:	db1b      	blt.n	801585a <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0x206>
 8015822:	428f      	cmp	r7, r1
 8015824:	fa1f fc81 	uxth.w	ip, r1
 8015828:	88e1      	ldrh	r1, [r4, #6]
 801582a:	dc0d      	bgt.n	8015848 <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0x1f4>
 801582c:	ebaa 0c0c 	sub.w	ip, sl, ip
 8015830:	eba1 010c 	sub.w	r1, r1, ip
 8015834:	f8a4 9002 	strh.w	r9, [r4, #2]
 8015838:	80e1      	strh	r1, [r4, #6]
 801583a:	4628      	mov	r0, r5
 801583c:	9904      	ldr	r1, [sp, #16]
 801583e:	3901      	subs	r1, #1
 8015840:	9104      	str	r1, [sp, #16]
 8015842:	3c08      	subs	r4, #8
 8015844:	4605      	mov	r5, r0
 8015846:	e7d3      	b.n	80157f0 <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0x19c>
 8015848:	4461      	add	r1, ip
 801584a:	b209      	sxth	r1, r1
 801584c:	4549      	cmp	r1, r9
 801584e:	dcf5      	bgt.n	801583c <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0x1e8>
 8015850:	eba2 0c0c 	sub.w	ip, r2, ip
 8015854:	f8a4 c006 	strh.w	ip, [r4, #6]
 8015858:	e7ef      	b.n	801583a <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0x1e6>
 801585a:	428f      	cmp	r7, r1
 801585c:	dcee      	bgt.n	801583c <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0x1e8>
 801585e:	f8b4 c006 	ldrh.w	ip, [r4, #6]
 8015862:	4461      	add	r1, ip
 8015864:	b209      	sxth	r1, r1
 8015866:	4589      	cmp	r9, r1
 8015868:	dbe8      	blt.n	801583c <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0x1e8>
 801586a:	4576      	cmp	r6, lr
 801586c:	fa1f fc8e 	uxth.w	ip, lr
 8015870:	88a1      	ldrh	r1, [r4, #4]
 8015872:	dc07      	bgt.n	8015884 <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0x230>
 8015874:	eba3 0c0c 	sub.w	ip, r3, ip
 8015878:	eba1 010c 	sub.w	r1, r1, ip
 801587c:	f8a4 8000 	strh.w	r8, [r4]
 8015880:	80a1      	strh	r1, [r4, #4]
 8015882:	e7da      	b.n	801583a <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0x1e6>
 8015884:	4461      	add	r1, ip
 8015886:	b209      	sxth	r1, r1
 8015888:	4588      	cmp	r8, r1
 801588a:	dbd7      	blt.n	801583c <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0x1e8>
 801588c:	9905      	ldr	r1, [sp, #20]
 801588e:	eba1 0c0c 	sub.w	ip, r1, ip
 8015892:	f8a4 c004 	strh.w	ip, [r4, #4]
 8015896:	e7d0      	b.n	801583a <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0x1e6>
 8015898:	20012f1a 	.word	0x20012f1a
 801589c:	20012f18 	.word	0x20012f18
 80158a0:	2d00      	cmp	r5, #0
 80158a2:	f000 816d 	beq.w	8015b80 <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0x52c>
 80158a6:	9b06      	ldr	r3, [sp, #24]
 80158a8:	445b      	add	r3, fp
 80158aa:	461c      	mov	r4, r3
 80158ac:	9b02      	ldr	r3, [sp, #8]
 80158ae:	3301      	adds	r3, #1
 80158b0:	f000 8166 	beq.w	8015b80 <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0x52c>
 80158b4:	f104 05a4 	add.w	r5, r4, #164	; 0xa4
 80158b8:	4629      	mov	r1, r5
 80158ba:	9803      	ldr	r0, [sp, #12]
 80158bc:	f7ff fccc 	bl	8015258 <_ZNK8touchgfx4Rect8includesERKS0_>
 80158c0:	b120      	cbz	r0, 80158cc <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0x278>
 80158c2:	f8bd 1008 	ldrh.w	r1, [sp, #8]
 80158c6:	9801      	ldr	r0, [sp, #4]
 80158c8:	f7ff feb0 	bl	801562c <_ZN8touchgfx6VectorINS_4RectELt8EE13quickRemoveAtEt>
 80158cc:	9903      	ldr	r1, [sp, #12]
 80158ce:	4628      	mov	r0, r5
 80158d0:	f7ff fc4f 	bl	8015172 <_ZNK8touchgfx4Rect9intersectERKS0_>
 80158d4:	2800      	cmp	r0, #0
 80158d6:	f000 809c 	beq.w	8015a12 <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0x3be>
 80158da:	f9b4 90a4 	ldrsh.w	r9, [r4, #164]	; 0xa4
 80158de:	f9b4 30a8 	ldrsh.w	r3, [r4, #168]	; 0xa8
 80158e2:	f9bd 0028 	ldrsh.w	r0, [sp, #40]	; 0x28
 80158e6:	9309      	str	r3, [sp, #36]	; 0x24
 80158e8:	fa1f f189 	uxth.w	r1, r9
 80158ec:	eb01 0c03 	add.w	ip, r1, r3
 80158f0:	fa1f fa8c 	uxth.w	sl, ip
 80158f4:	f8bd c02c 	ldrh.w	ip, [sp, #44]	; 0x2c
 80158f8:	f9bd e02a 	ldrsh.w	lr, [sp, #42]	; 0x2a
 80158fc:	f9b4 20a6 	ldrsh.w	r2, [r4, #166]	; 0xa6
 8015900:	b283      	uxth	r3, r0
 8015902:	eb03 050c 	add.w	r5, r3, ip
 8015906:	b2ad      	uxth	r5, r5
 8015908:	9505      	str	r5, [sp, #20]
 801590a:	f9bd 5014 	ldrsh.w	r5, [sp, #20]
 801590e:	9504      	str	r5, [sp, #16]
 8015910:	4548      	cmp	r0, r9
 8015912:	f8bb 50ec 	ldrh.w	r5, [fp, #236]	; 0xec
 8015916:	f340 8099 	ble.w	8015a4c <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0x3f8>
 801591a:	1a5b      	subs	r3, r3, r1
 801591c:	b29b      	uxth	r3, r3
 801591e:	4596      	cmp	lr, r2
 8015920:	fa0f f08a 	sxth.w	r0, sl
 8015924:	b21e      	sxth	r6, r3
 8015926:	dd2e      	ble.n	8015986 <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0x332>
 8015928:	9f02      	ldr	r7, [sp, #8]
 801592a:	f8bd 402e 	ldrh.w	r4, [sp, #46]	; 0x2e
 801592e:	eb0b 08c7 	add.w	r8, fp, r7, lsl #3
 8015932:	9f04      	ldr	r7, [sp, #16]
 8015934:	1a3f      	subs	r7, r7, r0
 8015936:	f8b8 00b2 	ldrh.w	r0, [r8, #178]	; 0xb2
 801593a:	fa1f fe8e 	uxth.w	lr, lr
 801593e:	b292      	uxth	r2, r2
 8015940:	ebae 0102 	sub.w	r1, lr, r2
 8015944:	44a6      	add	lr, r4
 8015946:	4402      	add	r2, r0
 8015948:	b289      	uxth	r1, r1
 801594a:	fa0f fe8e 	sxth.w	lr, lr
 801594e:	b212      	sxth	r2, r2
 8015950:	b20d      	sxth	r5, r1
 8015952:	ebae 0202 	sub.w	r2, lr, r2
 8015956:	436f      	muls	r7, r5
 8015958:	4372      	muls	r2, r6
 801595a:	4297      	cmp	r7, r2
 801595c:	db09      	blt.n	8015972 <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0x31e>
 801595e:	f8b8 20ac 	ldrh.w	r2, [r8, #172]	; 0xac
 8015962:	f8a8 50b2 	strh.w	r5, [r8, #178]	; 0xb2
 8015966:	f8ad 2028 	strh.w	r2, [sp, #40]	; 0x28
 801596a:	449c      	add	ip, r3
 801596c:	f8ad c02c 	strh.w	ip, [sp, #44]	; 0x2c
 8015970:	e686      	b.n	8015680 <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0x2c>
 8015972:	4421      	add	r1, r4
 8015974:	f8b8 30ae 	ldrh.w	r3, [r8, #174]	; 0xae
 8015978:	f8a8 60b0 	strh.w	r6, [r8, #176]	; 0xb0
 801597c:	f8ad 102e 	strh.w	r1, [sp, #46]	; 0x2e
 8015980:	f8ad 302a 	strh.w	r3, [sp, #42]	; 0x2a
 8015984:	e67c      	b.n	8015680 <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0x2c>
 8015986:	9f04      	ldr	r7, [sp, #16]
 8015988:	42b8      	cmp	r0, r7
 801598a:	da27      	bge.n	80159dc <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0x388>
 801598c:	9902      	ldr	r1, [sp, #8]
 801598e:	f8bd 502e 	ldrh.w	r5, [sp, #46]	; 0x2e
 8015992:	eb0b 04c1 	add.w	r4, fp, r1, lsl #3
 8015996:	eb05 010e 	add.w	r1, r5, lr
 801599a:	fa1f f881 	uxth.w	r8, r1
 801599e:	f8b4 10b2 	ldrh.w	r1, [r4, #178]	; 0xb2
 80159a2:	4411      	add	r1, r2
 80159a4:	eba1 0108 	sub.w	r1, r1, r8
 80159a8:	b289      	uxth	r1, r1
 80159aa:	fa0f f988 	sxth.w	r9, r8
 80159ae:	eba2 020e 	sub.w	r2, r2, lr
 80159b2:	fa0f f881 	sxth.w	r8, r1
 80159b6:	1a3f      	subs	r7, r7, r0
 80159b8:	4372      	muls	r2, r6
 80159ba:	fb08 f707 	mul.w	r7, r8, r7
 80159be:	42ba      	cmp	r2, r7
 80159c0:	dc06      	bgt.n	80159d0 <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0x37c>
 80159c2:	f8a4 90ae 	strh.w	r9, [r4, #174]	; 0xae
 80159c6:	f8a4 80b2 	strh.w	r8, [r4, #178]	; 0xb2
 80159ca:	f8b4 20ac 	ldrh.w	r2, [r4, #172]	; 0xac
 80159ce:	e7ca      	b.n	8015966 <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0x312>
 80159d0:	f8a4 60b0 	strh.w	r6, [r4, #176]	; 0xb0
 80159d4:	4429      	add	r1, r5
 80159d6:	f8ad 102e 	strh.w	r1, [sp, #46]	; 0x2e
 80159da:	e651      	b.n	8015680 <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0x2c>
 80159dc:	9805      	ldr	r0, [sp, #20]
 80159de:	ebaa 0000 	sub.w	r0, sl, r0
 80159e2:	b280      	uxth	r0, r0
 80159e4:	2d06      	cmp	r5, #6
 80159e6:	fa0f fe80 	sxth.w	lr, r0
 80159ea:	d817      	bhi.n	8015a1c <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0x3c8>
 80159ec:	9b04      	ldr	r3, [sp, #16]
 80159ee:	f8a4 30a4 	strh.w	r3, [r4, #164]	; 0xa4
 80159f2:	1c6b      	adds	r3, r5, #1
 80159f4:	f9b4 10aa 	ldrsh.w	r1, [r4, #170]	; 0xaa
 80159f8:	f8a4 e0a8 	strh.w	lr, [r4, #168]	; 0xa8
 80159fc:	f8ab 30ec 	strh.w	r3, [fp, #236]	; 0xec
 8015a00:	9b01      	ldr	r3, [sp, #4]
 8015a02:	9801      	ldr	r0, [sp, #4]
 8015a04:	eb03 03c5 	add.w	r3, r3, r5, lsl #3
 8015a08:	f820 9035 	strh.w	r9, [r0, r5, lsl #3]
 8015a0c:	805a      	strh	r2, [r3, #2]
 8015a0e:	809e      	strh	r6, [r3, #4]
 8015a10:	80d9      	strh	r1, [r3, #6]
 8015a12:	9b02      	ldr	r3, [sp, #8]
 8015a14:	3b01      	subs	r3, #1
 8015a16:	9302      	str	r3, [sp, #8]
 8015a18:	3c08      	subs	r4, #8
 8015a1a:	e747      	b.n	80158ac <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0x258>
 8015a1c:	9a02      	ldr	r2, [sp, #8]
 8015a1e:	45b6      	cmp	lr, r6
 8015a20:	ea4f 02c2 	mov.w	r2, r2, lsl #3
 8015a24:	db0d      	blt.n	8015a42 <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0x3ee>
 8015a26:	449c      	add	ip, r3
 8015a28:	fa1f fc8c 	uxth.w	ip, ip
 8015a2c:	445a      	add	r2, fp
 8015a2e:	f8ad c02c 	strh.w	ip, [sp, #44]	; 0x2c
 8015a32:	448c      	add	ip, r1
 8015a34:	f8ad 9028 	strh.w	r9, [sp, #40]	; 0x28
 8015a38:	f8a2 c0ac 	strh.w	ip, [r2, #172]	; 0xac
 8015a3c:	f8a2 e0b0 	strh.w	lr, [r2, #176]	; 0xb0
 8015a40:	e61e      	b.n	8015680 <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0x2c>
 8015a42:	445a      	add	r2, fp
 8015a44:	4484      	add	ip, r0
 8015a46:	f8a2 60b0 	strh.w	r6, [r2, #176]	; 0xb0
 8015a4a:	e78f      	b.n	801596c <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0x318>
 8015a4c:	f8bd 602e 	ldrh.w	r6, [sp, #46]	; 0x2e
 8015a50:	fa1f f18e 	uxth.w	r1, lr
 8015a54:	eb01 0806 	add.w	r8, r1, r6
 8015a58:	b293      	uxth	r3, r2
 8015a5a:	fa1f f888 	uxth.w	r8, r8
 8015a5e:	9306      	str	r3, [sp, #24]
 8015a60:	fa0f f388 	sxth.w	r3, r8
 8015a64:	9307      	str	r3, [sp, #28]
 8015a66:	9f06      	ldr	r7, [sp, #24]
 8015a68:	f8b4 30aa 	ldrh.w	r3, [r4, #170]	; 0xaa
 8015a6c:	443b      	add	r3, r7
 8015a6e:	b29b      	uxth	r3, r3
 8015a70:	4596      	cmp	lr, r2
 8015a72:	9308      	str	r3, [sp, #32]
 8015a74:	da24      	bge.n	8015ac0 <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0x46c>
 8015a76:	9905      	ldr	r1, [sp, #20]
 8015a78:	eba3 0308 	sub.w	r3, r3, r8
 8015a7c:	ebaa 0401 	sub.w	r4, sl, r1
 8015a80:	b2a4      	uxth	r4, r4
 8015a82:	b29b      	uxth	r3, r3
 8015a84:	b225      	sxth	r5, r4
 8015a86:	b219      	sxth	r1, r3
 8015a88:	eba2 020e 	sub.w	r2, r2, lr
 8015a8c:	eba9 0000 	sub.w	r0, r9, r0
 8015a90:	436a      	muls	r2, r5
 8015a92:	4348      	muls	r0, r1
 8015a94:	4282      	cmp	r2, r0
 8015a96:	9a02      	ldr	r2, [sp, #8]
 8015a98:	ea4f 02c2 	mov.w	r2, r2, lsl #3
 8015a9c:	445a      	add	r2, fp
 8015a9e:	dc06      	bgt.n	8015aae <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0x45a>
 8015aa0:	9b07      	ldr	r3, [sp, #28]
 8015aa2:	f8a2 10b2 	strh.w	r1, [r2, #178]	; 0xb2
 8015aa6:	f8a2 30ae 	strh.w	r3, [r2, #174]	; 0xae
 8015aaa:	44a4      	add	ip, r4
 8015aac:	e75e      	b.n	801596c <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0x318>
 8015aae:	9904      	ldr	r1, [sp, #16]
 8015ab0:	f8a2 50b0 	strh.w	r5, [r2, #176]	; 0xb0
 8015ab4:	f8a2 10ac 	strh.w	r1, [r2, #172]	; 0xac
 8015ab8:	4433      	add	r3, r6
 8015aba:	f8ad 302e 	strh.w	r3, [sp, #46]	; 0x2e
 8015abe:	e5df      	b.n	8015680 <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0x2c>
 8015ac0:	9f06      	ldr	r7, [sp, #24]
 8015ac2:	9b04      	ldr	r3, [sp, #16]
 8015ac4:	1bc9      	subs	r1, r1, r7
 8015ac6:	fa0f f78a 	sxth.w	r7, sl
 8015aca:	b289      	uxth	r1, r1
 8015acc:	429f      	cmp	r7, r3
 8015ace:	fa0f fe81 	sxth.w	lr, r1
 8015ad2:	dd23      	ble.n	8015b1c <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0x4c8>
 8015ad4:	9a05      	ldr	r2, [sp, #20]
 8015ad6:	f9bd 3020 	ldrsh.w	r3, [sp, #32]
 8015ada:	9d07      	ldr	r5, [sp, #28]
 8015adc:	ebaa 0202 	sub.w	r2, sl, r2
 8015ae0:	b292      	uxth	r2, r2
 8015ae2:	eba5 0a03 	sub.w	sl, r5, r3
 8015ae6:	b214      	sxth	r4, r2
 8015ae8:	eba9 0000 	sub.w	r0, r9, r0
 8015aec:	9b02      	ldr	r3, [sp, #8]
 8015aee:	fb0e f000 	mul.w	r0, lr, r0
 8015af2:	fb04 fa0a 	mul.w	sl, r4, sl
 8015af6:	00db      	lsls	r3, r3, #3
 8015af8:	4550      	cmp	r0, sl
 8015afa:	445b      	add	r3, fp
 8015afc:	db03      	blt.n	8015b06 <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0x4b2>
 8015afe:	f8a3 e0b2 	strh.w	lr, [r3, #178]	; 0xb2
 8015b02:	4494      	add	ip, r2
 8015b04:	e732      	b.n	801596c <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0x318>
 8015b06:	9a04      	ldr	r2, [sp, #16]
 8015b08:	f8a3 20ac 	strh.w	r2, [r3, #172]	; 0xac
 8015b0c:	f8a3 40b0 	strh.w	r4, [r3, #176]	; 0xb0
 8015b10:	f8b3 30ae 	ldrh.w	r3, [r3, #174]	; 0xae
 8015b14:	f8ad 302a 	strh.w	r3, [sp, #42]	; 0x2a
 8015b18:	4431      	add	r1, r6
 8015b1a:	e75c      	b.n	80159d6 <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0x382>
 8015b1c:	9b08      	ldr	r3, [sp, #32]
 8015b1e:	eba3 0308 	sub.w	r3, r3, r8
 8015b22:	b29b      	uxth	r3, r3
 8015b24:	2d06      	cmp	r5, #6
 8015b26:	b218      	sxth	r0, r3
 8015b28:	d813      	bhi.n	8015b52 <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0x4fe>
 8015b2a:	9b07      	ldr	r3, [sp, #28]
 8015b2c:	f8a4 30a6 	strh.w	r3, [r4, #166]	; 0xa6
 8015b30:	1c6b      	adds	r3, r5, #1
 8015b32:	f8a4 00aa 	strh.w	r0, [r4, #170]	; 0xaa
 8015b36:	f8ab 30ec 	strh.w	r3, [fp, #236]	; 0xec
 8015b3a:	9b01      	ldr	r3, [sp, #4]
 8015b3c:	9901      	ldr	r1, [sp, #4]
 8015b3e:	eb03 03c5 	add.w	r3, r3, r5, lsl #3
 8015b42:	f821 9035 	strh.w	r9, [r1, r5, lsl #3]
 8015b46:	805a      	strh	r2, [r3, #2]
 8015b48:	9a09      	ldr	r2, [sp, #36]	; 0x24
 8015b4a:	809a      	strh	r2, [r3, #4]
 8015b4c:	f8a3 e006 	strh.w	lr, [r3, #6]
 8015b50:	e75f      	b.n	8015a12 <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0x3be>
 8015b52:	9c02      	ldr	r4, [sp, #8]
 8015b54:	4570      	cmp	r0, lr
 8015b56:	ea4f 04c4 	mov.w	r4, r4, lsl #3
 8015b5a:	db0d      	blt.n	8015b78 <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0x524>
 8015b5c:	4431      	add	r1, r6
 8015b5e:	9b06      	ldr	r3, [sp, #24]
 8015b60:	f8ad 202a 	strh.w	r2, [sp, #42]	; 0x2a
 8015b64:	b289      	uxth	r1, r1
 8015b66:	445c      	add	r4, fp
 8015b68:	f8ad 102e 	strh.w	r1, [sp, #46]	; 0x2e
 8015b6c:	4419      	add	r1, r3
 8015b6e:	f8a4 10ae 	strh.w	r1, [r4, #174]	; 0xae
 8015b72:	f8a4 00b2 	strh.w	r0, [r4, #178]	; 0xb2
 8015b76:	e583      	b.n	8015680 <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0x2c>
 8015b78:	445c      	add	r4, fp
 8015b7a:	f8a4 e0b2 	strh.w	lr, [r4, #178]	; 0xb2
 8015b7e:	e79b      	b.n	8015ab8 <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0x464>
 8015b80:	f8bb 40ec 	ldrh.w	r4, [fp, #236]	; 0xec
 8015b84:	1e65      	subs	r5, r4, #1
 8015b86:	b2ad      	uxth	r5, r5
 8015b88:	eb0b 04c4 	add.w	r4, fp, r4, lsl #3
 8015b8c:	f64f 76ff 	movw	r6, #65535	; 0xffff
 8015b90:	42b5      	cmp	r5, r6
 8015b92:	d044      	beq.n	8015c1e <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0x5ca>
 8015b94:	f9bd 202a 	ldrsh.w	r2, [sp, #42]	; 0x2a
 8015b98:	f9b4 00a6 	ldrsh.w	r0, [r4, #166]	; 0xa6
 8015b9c:	f9bd 1028 	ldrsh.w	r1, [sp, #40]	; 0x28
 8015ba0:	f9b4 70a4 	ldrsh.w	r7, [r4, #164]	; 0xa4
 8015ba4:	4282      	cmp	r2, r0
 8015ba6:	d11f      	bne.n	8015be8 <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0x594>
 8015ba8:	f9bd c02e 	ldrsh.w	ip, [sp, #46]	; 0x2e
 8015bac:	f9b4 30aa 	ldrsh.w	r3, [r4, #170]	; 0xaa
 8015bb0:	459c      	cmp	ip, r3
 8015bb2:	d119      	bne.n	8015be8 <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0x594>
 8015bb4:	f8b4 30a8 	ldrh.w	r3, [r4, #168]	; 0xa8
 8015bb8:	f8bd 202c 	ldrh.w	r2, [sp, #44]	; 0x2c
 8015bbc:	19d8      	adds	r0, r3, r7
 8015bbe:	b200      	sxth	r0, r0
 8015bc0:	4288      	cmp	r0, r1
 8015bc2:	d109      	bne.n	8015bd8 <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0x584>
 8015bc4:	f8ad 7028 	strh.w	r7, [sp, #40]	; 0x28
 8015bc8:	4413      	add	r3, r2
 8015bca:	f8ad 302c 	strh.w	r3, [sp, #44]	; 0x2c
 8015bce:	4629      	mov	r1, r5
 8015bd0:	9801      	ldr	r0, [sp, #4]
 8015bd2:	f7ff fd2b 	bl	801562c <_ZN8touchgfx6VectorINS_4RectELt8EE13quickRemoveAtEt>
 8015bd6:	e003      	b.n	8015be0 <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0x58c>
 8015bd8:	4411      	add	r1, r2
 8015bda:	b209      	sxth	r1, r1
 8015bdc:	42b9      	cmp	r1, r7
 8015bde:	d0f3      	beq.n	8015bc8 <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0x574>
 8015be0:	3d01      	subs	r5, #1
 8015be2:	b2ad      	uxth	r5, r5
 8015be4:	3c08      	subs	r4, #8
 8015be6:	e7d3      	b.n	8015b90 <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0x53c>
 8015be8:	42b9      	cmp	r1, r7
 8015bea:	d1f9      	bne.n	8015be0 <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0x58c>
 8015bec:	f9bd 102c 	ldrsh.w	r1, [sp, #44]	; 0x2c
 8015bf0:	f9b4 30a8 	ldrsh.w	r3, [r4, #168]	; 0xa8
 8015bf4:	4299      	cmp	r1, r3
 8015bf6:	d1f3      	bne.n	8015be0 <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0x58c>
 8015bf8:	f8b4 30aa 	ldrh.w	r3, [r4, #170]	; 0xaa
 8015bfc:	f8bd 102e 	ldrh.w	r1, [sp, #46]	; 0x2e
 8015c00:	181f      	adds	r7, r3, r0
 8015c02:	b23f      	sxth	r7, r7
 8015c04:	42ba      	cmp	r2, r7
 8015c06:	d105      	bne.n	8015c14 <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0x5c0>
 8015c08:	f8ad 002a 	strh.w	r0, [sp, #42]	; 0x2a
 8015c0c:	440b      	add	r3, r1
 8015c0e:	f8ad 302e 	strh.w	r3, [sp, #46]	; 0x2e
 8015c12:	e7dc      	b.n	8015bce <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0x57a>
 8015c14:	440a      	add	r2, r1
 8015c16:	b212      	sxth	r2, r2
 8015c18:	4290      	cmp	r0, r2
 8015c1a:	d1e1      	bne.n	8015be0 <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0x58c>
 8015c1c:	e7f6      	b.n	8015c0c <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0x5b8>
 8015c1e:	f8bb 60ec 	ldrh.w	r6, [fp, #236]	; 0xec
 8015c22:	2e07      	cmp	r6, #7
 8015c24:	ea4f 04c6 	mov.w	r4, r6, lsl #3
 8015c28:	d812      	bhi.n	8015c50 <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0x5fc>
 8015c2a:	1c75      	adds	r5, r6, #1
 8015c2c:	f8ab 50ec 	strh.w	r5, [fp, #236]	; 0xec
 8015c30:	9d01      	ldr	r5, [sp, #4]
 8015c32:	f9bd 0028 	ldrsh.w	r0, [sp, #40]	; 0x28
 8015c36:	f9bd 102a 	ldrsh.w	r1, [sp, #42]	; 0x2a
 8015c3a:	f9bd 202c 	ldrsh.w	r2, [sp, #44]	; 0x2c
 8015c3e:	f9bd 302e 	ldrsh.w	r3, [sp, #46]	; 0x2e
 8015c42:	f825 0036 	strh.w	r0, [r5, r6, lsl #3]
 8015c46:	442c      	add	r4, r5
 8015c48:	8061      	strh	r1, [r4, #2]
 8015c4a:	80a2      	strh	r2, [r4, #4]
 8015c4c:	80e3      	strh	r3, [r4, #6]
 8015c4e:	e581      	b.n	8015754 <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0x100>
 8015c50:	f10b 03ac 	add.w	r3, fp, #172	; 0xac
 8015c54:	3e01      	subs	r6, #1
 8015c56:	445c      	add	r4, fp
 8015c58:	f06f 4a00 	mvn.w	sl, #2147483648	; 0x80000000
 8015c5c:	f04f 37ff 	mov.w	r7, #4294967295
 8015c60:	2500      	movs	r5, #0
 8015c62:	9305      	str	r3, [sp, #20]
 8015c64:	f9b4 30a8 	ldrsh.w	r3, [r4, #168]	; 0xa8
 8015c68:	9302      	str	r3, [sp, #8]
 8015c6a:	1e72      	subs	r2, r6, #1
 8015c6c:	f9b4 30aa 	ldrsh.w	r3, [r4, #170]	; 0xaa
 8015c70:	9304      	str	r3, [sp, #16]
 8015c72:	4691      	mov	r9, r2
 8015c74:	f104 03a4 	add.w	r3, r4, #164	; 0xa4
 8015c78:	f1b9 3fff 	cmp.w	r9, #4294967295
 8015c7c:	bf14      	ite	ne
 8015c7e:	9905      	ldrne	r1, [sp, #20]
 8015c80:	f8dd e00c 	ldreq.w	lr, [sp, #12]
 8015c84:	6818      	ldr	r0, [r3, #0]
 8015c86:	9207      	str	r2, [sp, #28]
 8015c88:	bf18      	it	ne
 8015c8a:	eb01 0ec9 	addne.w	lr, r1, r9, lsl #3
 8015c8e:	f10d 0c30 	add.w	ip, sp, #48	; 0x30
 8015c92:	f8be 1006 	ldrh.w	r1, [lr, #6]
 8015c96:	f8be 8004 	ldrh.w	r8, [lr, #4]
 8015c9a:	9306      	str	r3, [sp, #24]
 8015c9c:	fb18 f801 	smulbb	r8, r8, r1
 8015ca0:	6859      	ldr	r1, [r3, #4]
 8015ca2:	e8ac 0003 	stmia.w	ip!, {r0, r1}
 8015ca6:	4671      	mov	r1, lr
 8015ca8:	a80c      	add	r0, sp, #48	; 0x30
 8015caa:	f7ff fafb 	bl	80152a4 <_ZN8touchgfx4Rect11expandToFitERKS0_>
 8015cae:	f8bd 1036 	ldrh.w	r1, [sp, #54]	; 0x36
 8015cb2:	f8bd 0034 	ldrh.w	r0, [sp, #52]	; 0x34
 8015cb6:	9b04      	ldr	r3, [sp, #16]
 8015cb8:	9a02      	ldr	r2, [sp, #8]
 8015cba:	fb10 f001 	smulbb	r0, r0, r1
 8015cbe:	fb02 8803 	mla	r8, r2, r3, r8
 8015cc2:	eba0 0108 	sub.w	r1, r0, r8
 8015cc6:	f04f 0c08 	mov.w	ip, #8
 8015cca:	fb90 f0fc 	sdiv	r0, r0, ip
 8015cce:	4288      	cmp	r0, r1
 8015cd0:	dc20      	bgt.n	8015d14 <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0x6c0>
 8015cd2:	4551      	cmp	r1, sl
 8015cd4:	e9dd 3206 	ldrd	r3, r2, [sp, #24]
 8015cd8:	da03      	bge.n	8015ce2 <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0x68e>
 8015cda:	b1d9      	cbz	r1, 8015d14 <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0x6c0>
 8015cdc:	468a      	mov	sl, r1
 8015cde:	464f      	mov	r7, r9
 8015ce0:	4635      	mov	r5, r6
 8015ce2:	f109 39ff 	add.w	r9, r9, #4294967295
 8015ce6:	f119 0f02 	cmn.w	r9, #2
 8015cea:	d1c5      	bne.n	8015c78 <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0x624>
 8015cec:	4616      	mov	r6, r2
 8015cee:	3201      	adds	r2, #1
 8015cf0:	f1a4 0408 	sub.w	r4, r4, #8
 8015cf4:	d1b6      	bne.n	8015c64 <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0x610>
 8015cf6:	9b01      	ldr	r3, [sp, #4]
 8015cf8:	b2ac      	uxth	r4, r5
 8015cfa:	00ed      	lsls	r5, r5, #3
 8015cfc:	1958      	adds	r0, r3, r5
 8015cfe:	1c7b      	adds	r3, r7, #1
 8015d00:	d10b      	bne.n	8015d1a <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0x6c6>
 8015d02:	4601      	mov	r1, r0
 8015d04:	9803      	ldr	r0, [sp, #12]
 8015d06:	f7ff facd 	bl	80152a4 <_ZN8touchgfx4Rect11expandToFitERKS0_>
 8015d0a:	4621      	mov	r1, r4
 8015d0c:	9801      	ldr	r0, [sp, #4]
 8015d0e:	f7ff fc8d 	bl	801562c <_ZN8touchgfx6VectorINS_4RectELt8EE13quickRemoveAtEt>
 8015d12:	e4b5      	b.n	8015680 <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0x2c>
 8015d14:	464f      	mov	r7, r9
 8015d16:	4635      	mov	r5, r6
 8015d18:	e7ed      	b.n	8015cf6 <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0x6a2>
 8015d1a:	9b01      	ldr	r3, [sp, #4]
 8015d1c:	00ff      	lsls	r7, r7, #3
 8015d1e:	19d9      	adds	r1, r3, r7
 8015d20:	f7ff fac0 	bl	80152a4 <_ZN8touchgfx4Rect11expandToFitERKS0_>
 8015d24:	9b03      	ldr	r3, [sp, #12]
 8015d26:	cb03      	ldmia	r3!, {r0, r1}
 8015d28:	445f      	add	r7, fp
 8015d2a:	445d      	add	r5, fp
 8015d2c:	f8c7 00ac 	str.w	r0, [r7, #172]	; 0xac
 8015d30:	f8c7 10b0 	str.w	r1, [r7, #176]	; 0xb0
 8015d34:	f855 0fac 	ldr.w	r0, [r5, #172]!
 8015d38:	9b03      	ldr	r3, [sp, #12]
 8015d3a:	6869      	ldr	r1, [r5, #4]
 8015d3c:	c303      	stmia	r3!, {r0, r1}
 8015d3e:	e7e4      	b.n	8015d0a <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0x6b6>

08015d40 <_ZN8touchgfx11Application15drawCachedAreasEv>:
 8015d40:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 8015d44:	f500 7698 	add.w	r6, r0, #304	; 0x130
 8015d48:	b09b      	sub	sp, #108	; 0x6c
 8015d4a:	4604      	mov	r4, r0
 8015d4c:	4630      	mov	r0, r6
 8015d4e:	f7fa fa20 	bl	8010192 <_ZNK8touchgfx4Rect7isEmptyEv>
 8015d52:	4605      	mov	r5, r0
 8015d54:	b948      	cbnz	r0, 8015d6a <_ZN8touchgfx11Application15drawCachedAreasEv+0x2a>
 8015d56:	6823      	ldr	r3, [r4, #0]
 8015d58:	e896 0006 	ldmia.w	r6, {r1, r2}
 8015d5c:	6c1b      	ldr	r3, [r3, #64]	; 0x40
 8015d5e:	4620      	mov	r0, r4
 8015d60:	4798      	blx	r3
 8015d62:	f8c4 5130 	str.w	r5, [r4, #304]	; 0x130
 8015d66:	f8c4 5134 	str.w	r5, [r4, #308]	; 0x134
 8015d6a:	4bc6      	ldr	r3, [pc, #792]	; (8016084 <_ZN8touchgfx11Application15drawCachedAreasEv+0x344>)
 8015d6c:	681b      	ldr	r3, [r3, #0]
 8015d6e:	2b00      	cmp	r3, #0
 8015d70:	d03f      	beq.n	8015df2 <_ZN8touchgfx11Application15drawCachedAreasEv+0xb2>
 8015d72:	4dc5      	ldr	r5, [pc, #788]	; (8016088 <_ZN8touchgfx11Application15drawCachedAreasEv+0x348>)
 8015d74:	4628      	mov	r0, r5
 8015d76:	f7fa fa0c 	bl	8010192 <_ZNK8touchgfx4Rect7isEmptyEv>
 8015d7a:	4606      	mov	r6, r0
 8015d7c:	2800      	cmp	r0, #0
 8015d7e:	d138      	bne.n	8015df2 <_ZN8touchgfx11Application15drawCachedAreasEv+0xb2>
 8015d80:	4628      	mov	r0, r5
 8015d82:	f7ff f907 	bl	8014f94 <_ZN8touchgfx21DisplayTransformation29transformFrameBufferToDisplayERNS_4RectE>
 8015d86:	6823      	ldr	r3, [r4, #0]
 8015d88:	6829      	ldr	r1, [r5, #0]
 8015d8a:	6c1b      	ldr	r3, [r3, #64]	; 0x40
 8015d8c:	686a      	ldr	r2, [r5, #4]
 8015d8e:	4620      	mov	r0, r4
 8015d90:	4798      	blx	r3
 8015d92:	802e      	strh	r6, [r5, #0]
 8015d94:	806e      	strh	r6, [r5, #2]
 8015d96:	80ae      	strh	r6, [r5, #4]
 8015d98:	80ee      	strh	r6, [r5, #6]
 8015d9a:	f10d 0824 	add.w	r8, sp, #36	; 0x24
 8015d9e:	4dbb      	ldr	r5, [pc, #748]	; (801608c <_ZN8touchgfx11Application15drawCachedAreasEv+0x34c>)
 8015da0:	4640      	mov	r0, r8
 8015da2:	f7ff fbeb 	bl	801557c <_ZN8touchgfx6VectorINS_4RectELt8EEC1Ev>
 8015da6:	882e      	ldrh	r6, [r5, #0]
 8015da8:	f8b4 70ec 	ldrh.w	r7, [r4, #236]	; 0xec
 8015dac:	4633      	mov	r3, r6
 8015dae:	f104 00ac 	add.w	r0, r4, #172	; 0xac
 8015db2:	42bb      	cmp	r3, r7
 8015db4:	d224      	bcs.n	8015e00 <_ZN8touchgfx11Application15drawCachedAreasEv+0xc0>
 8015db6:	f8bd 1064 	ldrh.w	r1, [sp, #100]	; 0x64
 8015dba:	2907      	cmp	r1, #7
 8015dbc:	d816      	bhi.n	8015dec <_ZN8touchgfx11Application15drawCachedAreasEv+0xac>
 8015dbe:	eb00 02c3 	add.w	r2, r0, r3, lsl #3
 8015dc2:	f930 9033 	ldrsh.w	r9, [r0, r3, lsl #3]
 8015dc6:	f9b2 a002 	ldrsh.w	sl, [r2, #2]
 8015dca:	f9b2 e004 	ldrsh.w	lr, [r2, #4]
 8015dce:	f9b2 c006 	ldrsh.w	ip, [r2, #6]
 8015dd2:	1c4a      	adds	r2, r1, #1
 8015dd4:	f8ad 2064 	strh.w	r2, [sp, #100]	; 0x64
 8015dd8:	eb08 02c1 	add.w	r2, r8, r1, lsl #3
 8015ddc:	f828 9031 	strh.w	r9, [r8, r1, lsl #3]
 8015de0:	f8a2 a002 	strh.w	sl, [r2, #2]
 8015de4:	f8a2 e004 	strh.w	lr, [r2, #4]
 8015de8:	f8a2 c006 	strh.w	ip, [r2, #6]
 8015dec:	3301      	adds	r3, #1
 8015dee:	b29b      	uxth	r3, r3
 8015df0:	e7df      	b.n	8015db2 <_ZN8touchgfx11Application15drawCachedAreasEv+0x72>
 8015df2:	f8b4 30ec 	ldrh.w	r3, [r4, #236]	; 0xec
 8015df6:	2b00      	cmp	r3, #0
 8015df8:	d1cf      	bne.n	8015d9a <_ZN8touchgfx11Application15drawCachedAreasEv+0x5a>
 8015dfa:	b01b      	add	sp, #108	; 0x6c
 8015dfc:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
 8015e00:	f8b4 312e 	ldrh.w	r3, [r4, #302]	; 0x12e
 8015e04:	42b3      	cmp	r3, r6
 8015e06:	d90c      	bls.n	8015e22 <_ZN8touchgfx11Application15drawCachedAreasEv+0xe2>
 8015e08:	eb04 03c6 	add.w	r3, r4, r6, lsl #3
 8015e0c:	6822      	ldr	r2, [r4, #0]
 8015e0e:	f8d3 10ee 	ldr.w	r1, [r3, #238]	; 0xee
 8015e12:	6c17      	ldr	r7, [r2, #64]	; 0x40
 8015e14:	f8d3 20f2 	ldr.w	r2, [r3, #242]	; 0xf2
 8015e18:	4620      	mov	r0, r4
 8015e1a:	3601      	adds	r6, #1
 8015e1c:	47b8      	blx	r7
 8015e1e:	b2b6      	uxth	r6, r6
 8015e20:	e7ee      	b.n	8015e00 <_ZN8touchgfx11Application15drawCachedAreasEv+0xc0>
 8015e22:	4a9b      	ldr	r2, [pc, #620]	; (8016090 <_ZN8touchgfx11Application15drawCachedAreasEv+0x350>)
 8015e24:	6813      	ldr	r3, [r2, #0]
 8015e26:	f893 3048 	ldrb.w	r3, [r3, #72]	; 0x48
 8015e2a:	2b01      	cmp	r3, #1
 8015e2c:	4691      	mov	r9, r2
 8015e2e:	f040 80e2 	bne.w	8015ff6 <_ZN8touchgfx11Application15drawCachedAreasEv+0x2b6>
 8015e32:	8829      	ldrh	r1, [r5, #0]
 8015e34:	f8b4 70ec 	ldrh.w	r7, [r4, #236]	; 0xec
 8015e38:	eb04 03c1 	add.w	r3, r4, r1, lsl #3
 8015e3c:	33ae      	adds	r3, #174	; 0xae
 8015e3e:	2600      	movs	r6, #0
 8015e40:	428f      	cmp	r7, r1
 8015e42:	f103 0308 	add.w	r3, r3, #8
 8015e46:	dd0a      	ble.n	8015e5e <_ZN8touchgfx11Application15drawCachedAreasEv+0x11e>
 8015e48:	f833 2c04 	ldrh.w	r2, [r3, #-4]
 8015e4c:	f833 0c08 	ldrh.w	r0, [r3, #-8]
 8015e50:	4402      	add	r2, r0
 8015e52:	b212      	sxth	r2, r2
 8015e54:	4296      	cmp	r6, r2
 8015e56:	bfb8      	it	lt
 8015e58:	4616      	movlt	r6, r2
 8015e5a:	3101      	adds	r1, #1
 8015e5c:	e7f0      	b.n	8015e40 <_ZN8touchgfx11Application15drawCachedAreasEv+0x100>
 8015e5e:	4b8d      	ldr	r3, [pc, #564]	; (8016094 <_ZN8touchgfx11Application15drawCachedAreasEv+0x354>)
 8015e60:	f8df 922c 	ldr.w	r9, [pc, #556]	; 8016090 <_ZN8touchgfx11Application15drawCachedAreasEv+0x350>
 8015e64:	881b      	ldrh	r3, [r3, #0]
 8015e66:	2b0f      	cmp	r3, #15
 8015e68:	bf88      	it	hi
 8015e6a:	ea4f 0bd3 	movhi.w	fp, r3, lsr #3
 8015e6e:	f04f 0300 	mov.w	r3, #0
 8015e72:	e9cd 3305 	strd	r3, r3, [sp, #20]
 8015e76:	bf98      	it	ls
 8015e78:	f04f 0b01 	movls.w	fp, #1
 8015e7c:	f8bd 7016 	ldrh.w	r7, [sp, #22]
 8015e80:	f8bd 001a 	ldrh.w	r0, [sp, #26]
 8015e84:	4b82      	ldr	r3, [pc, #520]	; (8016090 <_ZN8touchgfx11Application15drawCachedAreasEv+0x350>)
 8015e86:	4438      	add	r0, r7
 8015e88:	b207      	sxth	r7, r0
 8015e8a:	6818      	ldr	r0, [r3, #0]
 8015e8c:	42b7      	cmp	r7, r6
 8015e8e:	6803      	ldr	r3, [r0, #0]
 8015e90:	f280 8083 	bge.w	8015f9a <_ZN8touchgfx11Application15drawCachedAreasEv+0x25a>
 8015e94:	f8d3 309c 	ldr.w	r3, [r3, #156]	; 0x9c
 8015e98:	4798      	blx	r3
 8015e9a:	eb07 030b 	add.w	r3, r7, fp
 8015e9e:	4298      	cmp	r0, r3
 8015ea0:	da07      	bge.n	8015eb2 <_ZN8touchgfx11Application15drawCachedAreasEv+0x172>
 8015ea2:	42b0      	cmp	r0, r6
 8015ea4:	da05      	bge.n	8015eb2 <_ZN8touchgfx11Application15drawCachedAreasEv+0x172>
 8015ea6:	4287      	cmp	r7, r0
 8015ea8:	dd6c      	ble.n	8015f84 <_ZN8touchgfx11Application15drawCachedAreasEv+0x244>
 8015eaa:	2f00      	cmp	r7, #0
 8015eac:	dd6a      	ble.n	8015f84 <_ZN8touchgfx11Application15drawCachedAreasEv+0x244>
 8015eae:	4630      	mov	r0, r6
 8015eb0:	e004      	b.n	8015ebc <_ZN8touchgfx11Application15drawCachedAreasEv+0x17c>
 8015eb2:	4287      	cmp	r7, r0
 8015eb4:	dcfb      	bgt.n	8015eae <_ZN8touchgfx11Application15drawCachedAreasEv+0x16e>
 8015eb6:	42b0      	cmp	r0, r6
 8015eb8:	bfa8      	it	ge
 8015eba:	4630      	movge	r0, r6
 8015ebc:	4b76      	ldr	r3, [pc, #472]	; (8016098 <_ZN8touchgfx11Application15drawCachedAreasEv+0x358>)
 8015ebe:	f8ad 7016 	strh.w	r7, [sp, #22]
 8015ec2:	1bc0      	subs	r0, r0, r7
 8015ec4:	f9b3 3000 	ldrsh.w	r3, [r3]
 8015ec8:	882f      	ldrh	r7, [r5, #0]
 8015eca:	f8ad 3018 	strh.w	r3, [sp, #24]
 8015ece:	2200      	movs	r2, #0
 8015ed0:	f8ad 2014 	strh.w	r2, [sp, #20]
 8015ed4:	f8ad 001a 	strh.w	r0, [sp, #26]
 8015ed8:	f8b4 30ec 	ldrh.w	r3, [r4, #236]	; 0xec
 8015edc:	42bb      	cmp	r3, r7
 8015ede:	d9cd      	bls.n	8015e7c <_ZN8touchgfx11Application15drawCachedAreasEv+0x13c>
 8015ee0:	eb04 02c7 	add.w	r2, r4, r7, lsl #3
 8015ee4:	ab07      	add	r3, sp, #28
 8015ee6:	f852 0fac 	ldr.w	r0, [r2, #172]!
 8015eea:	6851      	ldr	r1, [r2, #4]
 8015eec:	c303      	stmia	r3!, {r0, r1}
 8015eee:	a905      	add	r1, sp, #20
 8015ef0:	a807      	add	r0, sp, #28
 8015ef2:	f7ff f93e 	bl	8015172 <_ZNK8touchgfx4Rect9intersectERKS0_>
 8015ef6:	2800      	cmp	r0, #0
 8015ef8:	d04c      	beq.n	8015f94 <_ZN8touchgfx11Application15drawCachedAreasEv+0x254>
 8015efa:	f9bd 001c 	ldrsh.w	r0, [sp, #28]
 8015efe:	f9bd 2014 	ldrsh.w	r2, [sp, #20]
 8015f02:	f8bd a020 	ldrh.w	sl, [sp, #32]
 8015f06:	f9bd 101e 	ldrsh.w	r1, [sp, #30]
 8015f0a:	f9bd 3016 	ldrsh.w	r3, [sp, #22]
 8015f0e:	9302      	str	r3, [sp, #8]
 8015f10:	4686      	mov	lr, r0
 8015f12:	4290      	cmp	r0, r2
 8015f14:	4450      	add	r0, sl
 8015f16:	f8bd a018 	ldrh.w	sl, [sp, #24]
 8015f1a:	bfb8      	it	lt
 8015f1c:	4696      	movlt	lr, r2
 8015f1e:	4452      	add	r2, sl
 8015f20:	4299      	cmp	r1, r3
 8015f22:	b280      	uxth	r0, r0
 8015f24:	b292      	uxth	r2, r2
 8015f26:	468c      	mov	ip, r1
 8015f28:	fa0f fa82 	sxth.w	sl, r2
 8015f2c:	bfb8      	it	lt
 8015f2e:	469c      	movlt	ip, r3
 8015f30:	b203      	sxth	r3, r0
 8015f32:	4553      	cmp	r3, sl
 8015f34:	bfb8      	it	lt
 8015f36:	4602      	movlt	r2, r0
 8015f38:	eba2 020e 	sub.w	r2, r2, lr
 8015f3c:	f8ad 2020 	strh.w	r2, [sp, #32]
 8015f40:	f8bd 2022 	ldrh.w	r2, [sp, #34]	; 0x22
 8015f44:	9b02      	ldr	r3, [sp, #8]
 8015f46:	f8ad e01c 	strh.w	lr, [sp, #28]
 8015f4a:	4411      	add	r1, r2
 8015f4c:	f8bd 201a 	ldrh.w	r2, [sp, #26]
 8015f50:	f8ad c01e 	strh.w	ip, [sp, #30]
 8015f54:	4413      	add	r3, r2
 8015f56:	b289      	uxth	r1, r1
 8015f58:	b29b      	uxth	r3, r3
 8015f5a:	b208      	sxth	r0, r1
 8015f5c:	b21a      	sxth	r2, r3
 8015f5e:	4290      	cmp	r0, r2
 8015f60:	bfb8      	it	lt
 8015f62:	460b      	movlt	r3, r1
 8015f64:	eba3 030c 	sub.w	r3, r3, ip
 8015f68:	f8ad 3022 	strh.w	r3, [sp, #34]	; 0x22
 8015f6c:	a807      	add	r0, sp, #28
 8015f6e:	f7fa f910 	bl	8010192 <_ZNK8touchgfx4Rect7isEmptyEv>
 8015f72:	b920      	cbnz	r0, 8015f7e <_ZN8touchgfx11Application15drawCachedAreasEv+0x23e>
 8015f74:	6823      	ldr	r3, [r4, #0]
 8015f76:	a907      	add	r1, sp, #28
 8015f78:	6c9b      	ldr	r3, [r3, #72]	; 0x48
 8015f7a:	4620      	mov	r0, r4
 8015f7c:	4798      	blx	r3
 8015f7e:	3701      	adds	r7, #1
 8015f80:	b2bf      	uxth	r7, r7
 8015f82:	e7a9      	b.n	8015ed8 <_ZN8touchgfx11Application15drawCachedAreasEv+0x198>
 8015f84:	f8d9 0000 	ldr.w	r0, [r9]
 8015f88:	6803      	ldr	r3, [r0, #0]
 8015f8a:	2101      	movs	r1, #1
 8015f8c:	f8d3 3098 	ldr.w	r3, [r3, #152]	; 0x98
 8015f90:	4798      	blx	r3
 8015f92:	e773      	b.n	8015e7c <_ZN8touchgfx11Application15drawCachedAreasEv+0x13c>
 8015f94:	e9cd 0007 	strd	r0, r0, [sp, #28]
 8015f98:	e7e8      	b.n	8015f6c <_ZN8touchgfx11Application15drawCachedAreasEv+0x22c>
 8015f9a:	6a5b      	ldr	r3, [r3, #36]	; 0x24
 8015f9c:	4798      	blx	r3
 8015f9e:	4b3f      	ldr	r3, [pc, #252]	; (801609c <_ZN8touchgfx11Application15drawCachedAreasEv+0x35c>)
 8015fa0:	781b      	ldrb	r3, [r3, #0]
 8015fa2:	2b00      	cmp	r3, #0
 8015fa4:	f43f af29 	beq.w	8015dfa <_ZN8touchgfx11Application15drawCachedAreasEv+0xba>
 8015fa8:	2300      	movs	r3, #0
 8015faa:	f8a4 312e 	strh.w	r3, [r4, #302]	; 0x12e
 8015fae:	882b      	ldrh	r3, [r5, #0]
 8015fb0:	f8bd 5064 	ldrh.w	r5, [sp, #100]	; 0x64
 8015fb4:	f104 00ee 	add.w	r0, r4, #238	; 0xee
 8015fb8:	42ab      	cmp	r3, r5
 8015fba:	f4bf af1e 	bcs.w	8015dfa <_ZN8touchgfx11Application15drawCachedAreasEv+0xba>
 8015fbe:	f8b4 112e 	ldrh.w	r1, [r4, #302]	; 0x12e
 8015fc2:	2907      	cmp	r1, #7
 8015fc4:	d814      	bhi.n	8015ff0 <_ZN8touchgfx11Application15drawCachedAreasEv+0x2b0>
 8015fc6:	eb08 02c3 	add.w	r2, r8, r3, lsl #3
 8015fca:	f938 e033 	ldrsh.w	lr, [r8, r3, lsl #3]
 8015fce:	f9b2 c002 	ldrsh.w	ip, [r2, #2]
 8015fd2:	f9b2 7004 	ldrsh.w	r7, [r2, #4]
 8015fd6:	f9b2 6006 	ldrsh.w	r6, [r2, #6]
 8015fda:	1c4a      	adds	r2, r1, #1
 8015fdc:	f8a4 212e 	strh.w	r2, [r4, #302]	; 0x12e
 8015fe0:	eb00 02c1 	add.w	r2, r0, r1, lsl #3
 8015fe4:	f820 e031 	strh.w	lr, [r0, r1, lsl #3]
 8015fe8:	f8a2 c002 	strh.w	ip, [r2, #2]
 8015fec:	8097      	strh	r7, [r2, #4]
 8015fee:	80d6      	strh	r6, [r2, #6]
 8015ff0:	3301      	adds	r3, #1
 8015ff2:	b29b      	uxth	r3, r3
 8015ff4:	e7e0      	b.n	8015fb8 <_ZN8touchgfx11Application15drawCachedAreasEv+0x278>
 8015ff6:	2b02      	cmp	r3, #2
 8015ff8:	f040 8133 	bne.w	8016262 <_ZN8touchgfx11Application15drawCachedAreasEv+0x522>
 8015ffc:	4b28      	ldr	r3, [pc, #160]	; (80160a0 <_ZN8touchgfx11Application15drawCachedAreasEv+0x360>)
 8015ffe:	781b      	ldrb	r3, [r3, #0]
 8016000:	2b01      	cmp	r3, #1
 8016002:	f104 0aac 	add.w	sl, r4, #172	; 0xac
 8016006:	f000 8098 	beq.w	801613a <_ZN8touchgfx11Application15drawCachedAreasEv+0x3fa>
 801600a:	882a      	ldrh	r2, [r5, #0]
 801600c:	f8b4 10ec 	ldrh.w	r1, [r4, #236]	; 0xec
 8016010:	3201      	adds	r2, #1
 8016012:	b292      	uxth	r2, r2
 8016014:	2900      	cmp	r1, #0
 8016016:	d0c2      	beq.n	8015f9e <_ZN8touchgfx11Application15drawCachedAreasEv+0x25e>
 8016018:	f8b4 60ae 	ldrh.w	r6, [r4, #174]	; 0xae
 801601c:	f8b4 30b2 	ldrh.w	r3, [r4, #178]	; 0xb2
 8016020:	441e      	add	r6, r3
 8016022:	b236      	sxth	r6, r6
 8016024:	4694      	mov	ip, r2
 8016026:	f04f 0900 	mov.w	r9, #0
 801602a:	fa1f f38c 	uxth.w	r3, ip
 801602e:	4299      	cmp	r1, r3
 8016030:	ea4f 07c9 	mov.w	r7, r9, lsl #3
 8016034:	f240 80bf 	bls.w	80161b6 <_ZN8touchgfx11Application15drawCachedAreasEv+0x476>
 8016038:	4427      	add	r7, r4
 801603a:	eb04 0ecc 	add.w	lr, r4, ip, lsl #3
 801603e:	f9b7 30ae 	ldrsh.w	r3, [r7, #174]	; 0xae
 8016042:	f9be 00ae 	ldrsh.w	r0, [lr, #174]	; 0xae
 8016046:	4283      	cmp	r3, r0
 8016048:	f340 80a1 	ble.w	801618e <_ZN8touchgfx11Application15drawCachedAreasEv+0x44e>
 801604c:	f8be 60b2 	ldrh.w	r6, [lr, #178]	; 0xb2
 8016050:	4406      	add	r6, r0
 8016052:	b236      	sxth	r6, r6
 8016054:	429e      	cmp	r6, r3
 8016056:	bfa8      	it	ge
 8016058:	461e      	movge	r6, r3
 801605a:	46e1      	mov	r9, ip
 801605c:	f10c 0c01 	add.w	ip, ip, #1
 8016060:	e7e3      	b.n	801602a <_ZN8touchgfx11Application15drawCachedAreasEv+0x2ea>
 8016062:	d10a      	bne.n	801607a <_ZN8touchgfx11Application15drawCachedAreasEv+0x33a>
 8016064:	f9b6 00b2 	ldrsh.w	r0, [r6, #178]	; 0xb2
 8016068:	f9be 10b2 	ldrsh.w	r1, [lr, #178]	; 0xb2
 801606c:	4562      	cmp	r2, ip
 801606e:	bfb8      	it	lt
 8016070:	4662      	movlt	r2, ip
 8016072:	4288      	cmp	r0, r1
 8016074:	bfb8      	it	lt
 8016076:	461f      	movlt	r7, r3
 8016078:	e087      	b.n	801618a <_ZN8touchgfx11Application15drawCachedAreasEv+0x44a>
 801607a:	428a      	cmp	r2, r1
 801607c:	bfb8      	it	lt
 801607e:	460a      	movlt	r2, r1
 8016080:	e083      	b.n	801618a <_ZN8touchgfx11Application15drawCachedAreasEv+0x44a>
 8016082:	bf00      	nop
 8016084:	20012f64 	.word	0x20012f64
 8016088:	20012f70 	.word	0x20012f70
 801608c:	20000088 	.word	0x20000088
 8016090:	20012f24 	.word	0x20012f24
 8016094:	20012f1a 	.word	0x20012f1a
 8016098:	20012f18 	.word	0x20012f18
 801609c:	20012f22 	.word	0x20012f22
 80160a0:	20012f1c 	.word	0x20012f1c
 80160a4:	19a1      	adds	r1, r4, r6
 80160a6:	ab07      	add	r3, sp, #28
 80160a8:	f851 0fac 	ldr.w	r0, [r1, #172]!
 80160ac:	6849      	ldr	r1, [r1, #4]
 80160ae:	c303      	stmia	r3!, {r0, r1}
 80160b0:	f9bd 3020 	ldrsh.w	r3, [sp, #32]
 80160b4:	f8bd 101c 	ldrh.w	r1, [sp, #28]
 80160b8:	2b13      	cmp	r3, #19
 80160ba:	bfd8      	it	le
 80160bc:	f9bd 201c 	ldrshle.w	r2, [sp, #28]
 80160c0:	f8ad 201c 	strh.w	r2, [sp, #28]
 80160c4:	440b      	add	r3, r1
 80160c6:	1a9b      	subs	r3, r3, r2
 80160c8:	a807      	add	r0, sp, #28
 80160ca:	f8ad 3020 	strh.w	r3, [sp, #32]
 80160ce:	f7fe ff7b 	bl	8014fc8 <_ZN8touchgfx21DisplayTransformation29transformDisplayToFrameBufferERNS_4RectE>
 80160d2:	a807      	add	r0, sp, #28
 80160d4:	f7fa f85d 	bl	8010192 <_ZNK8touchgfx4Rect7isEmptyEv>
 80160d8:	bb78      	cbnz	r0, 801613a <_ZN8touchgfx11Application15drawCachedAreasEv+0x3fa>
 80160da:	f9bd c022 	ldrsh.w	ip, [sp, #34]	; 0x22
 80160de:	f8d9 0000 	ldr.w	r0, [r9]
 80160e2:	f8bd 3020 	ldrh.w	r3, [sp, #32]
 80160e6:	f8d0 e000 	ldr.w	lr, [r0]
 80160ea:	f8bd 201e 	ldrh.w	r2, [sp, #30]
 80160ee:	f8bd 101c 	ldrh.w	r1, [sp, #28]
 80160f2:	f1bc 0f14 	cmp.w	ip, #20
 80160f6:	bfa8      	it	ge
 80160f8:	f04f 0c14 	movge.w	ip, #20
 80160fc:	fa1f fc8c 	uxth.w	ip, ip
 8016100:	f8cd c000 	str.w	ip, [sp]
 8016104:	f8de b090 	ldr.w	fp, [lr, #144]	; 0x90
 8016108:	47d8      	blx	fp
 801610a:	4683      	mov	fp, r0
 801610c:	f8ad 0022 	strh.w	r0, [sp, #34]	; 0x22
 8016110:	a807      	add	r0, sp, #28
 8016112:	f7fe ff3f 	bl	8014f94 <_ZN8touchgfx21DisplayTransformation29transformFrameBufferToDisplayERNS_4RectE>
 8016116:	6823      	ldr	r3, [r4, #0]
 8016118:	4426      	add	r6, r4
 801611a:	4620      	mov	r0, r4
 801611c:	6c9b      	ldr	r3, [r3, #72]	; 0x48
 801611e:	a907      	add	r1, sp, #28
 8016120:	4798      	blx	r3
 8016122:	f8b6 00b0 	ldrh.w	r0, [r6, #176]	; 0xb0
 8016126:	eba0 000b 	sub.w	r0, r0, fp
 801612a:	b200      	sxth	r0, r0
 801612c:	f8a6 00b0 	strh.w	r0, [r6, #176]	; 0xb0
 8016130:	b918      	cbnz	r0, 801613a <_ZN8touchgfx11Application15drawCachedAreasEv+0x3fa>
 8016132:	b2b9      	uxth	r1, r7
 8016134:	4650      	mov	r0, sl
 8016136:	f7ff fa79 	bl	801562c <_ZN8touchgfx6VectorINS_4RectELt8EE13quickRemoveAtEt>
 801613a:	f8b4 b0ec 	ldrh.w	fp, [r4, #236]	; 0xec
 801613e:	f1bb 0f00 	cmp.w	fp, #0
 8016142:	f43f af2c 	beq.w	8015f9e <_ZN8touchgfx11Application15drawCachedAreasEv+0x25e>
 8016146:	882b      	ldrh	r3, [r5, #0]
 8016148:	f9b4 20ac 	ldrsh.w	r2, [r4, #172]	; 0xac
 801614c:	3301      	adds	r3, #1
 801614e:	b29b      	uxth	r3, r3
 8016150:	2700      	movs	r7, #0
 8016152:	b299      	uxth	r1, r3
 8016154:	458b      	cmp	fp, r1
 8016156:	ea4f 06c7 	mov.w	r6, r7, lsl #3
 801615a:	d9a3      	bls.n	80160a4 <_ZN8touchgfx11Application15drawCachedAreasEv+0x364>
 801615c:	4426      	add	r6, r4
 801615e:	eb04 0ec3 	add.w	lr, r4, r3, lsl #3
 8016162:	f8b6 10ac 	ldrh.w	r1, [r6, #172]	; 0xac
 8016166:	f8b6 00b0 	ldrh.w	r0, [r6, #176]	; 0xb0
 801616a:	f9be c0ac 	ldrsh.w	ip, [lr, #172]	; 0xac
 801616e:	4408      	add	r0, r1
 8016170:	f8be 10b0 	ldrh.w	r1, [lr, #176]	; 0xb0
 8016174:	4461      	add	r1, ip
 8016176:	b200      	sxth	r0, r0
 8016178:	b209      	sxth	r1, r1
 801617a:	4288      	cmp	r0, r1
 801617c:	f6bf af71 	bge.w	8016062 <_ZN8touchgfx11Application15drawCachedAreasEv+0x322>
 8016180:	4584      	cmp	ip, r0
 8016182:	4662      	mov	r2, ip
 8016184:	461f      	mov	r7, r3
 8016186:	bfb8      	it	lt
 8016188:	4602      	movlt	r2, r0
 801618a:	3301      	adds	r3, #1
 801618c:	e7e1      	b.n	8016152 <_ZN8touchgfx11Application15drawCachedAreasEv+0x412>
 801618e:	d10e      	bne.n	80161ae <_ZN8touchgfx11Application15drawCachedAreasEv+0x46e>
 8016190:	f9be 00b0 	ldrsh.w	r0, [lr, #176]	; 0xb0
 8016194:	f8be e0b2 	ldrh.w	lr, [lr, #178]	; 0xb2
 8016198:	f9b7 70b0 	ldrsh.w	r7, [r7, #176]	; 0xb0
 801619c:	4473      	add	r3, lr
 801619e:	b21b      	sxth	r3, r3
 80161a0:	429e      	cmp	r6, r3
 80161a2:	bfa8      	it	ge
 80161a4:	461e      	movge	r6, r3
 80161a6:	4287      	cmp	r7, r0
 80161a8:	bfb8      	it	lt
 80161aa:	46e1      	movlt	r9, ip
 80161ac:	e756      	b.n	801605c <_ZN8touchgfx11Application15drawCachedAreasEv+0x31c>
 80161ae:	4286      	cmp	r6, r0
 80161b0:	bfa8      	it	ge
 80161b2:	4606      	movge	r6, r0
 80161b4:	e752      	b.n	801605c <_ZN8touchgfx11Application15drawCachedAreasEv+0x31c>
 80161b6:	eb0a 0007 	add.w	r0, sl, r7
 80161ba:	4427      	add	r7, r4
 80161bc:	e9cd 2102 	strd	r2, r1, [sp, #8]
 80161c0:	f9b7 b0b2 	ldrsh.w	fp, [r7, #178]	; 0xb2
 80161c4:	f1bb 0f13 	cmp.w	fp, #19
 80161c8:	bfde      	ittt	le
 80161ca:	f8b7 60ae 	ldrhle.w	r6, [r7, #174]	; 0xae
 80161ce:	445e      	addle	r6, fp
 80161d0:	b236      	sxthle	r6, r6
 80161d2:	f7f9 ffde 	bl	8010192 <_ZNK8touchgfx4Rect7isEmptyEv>
 80161d6:	e9dd 2102 	ldrd	r2, r1, [sp, #8]
 80161da:	2800      	cmp	r0, #0
 80161dc:	f47f af1a 	bne.w	8016014 <_ZN8touchgfx11Application15drawCachedAreasEv+0x2d4>
 80161e0:	f9b7 20ae 	ldrsh.w	r2, [r7, #174]	; 0xae
 80161e4:	f8ad 0022 	strh.w	r0, [sp, #34]	; 0x22
 80161e8:	482a      	ldr	r0, [pc, #168]	; (8016294 <_ZN8touchgfx11Application15drawCachedAreasEv+0x554>)
 80161ea:	f9b7 10ac 	ldrsh.w	r1, [r7, #172]	; 0xac
 80161ee:	f9b7 30b0 	ldrsh.w	r3, [r7, #176]	; 0xb0
 80161f2:	6800      	ldr	r0, [r0, #0]
 80161f4:	f8ad 101c 	strh.w	r1, [sp, #28]
 80161f8:	1ab6      	subs	r6, r6, r2
 80161fa:	2e14      	cmp	r6, #20
 80161fc:	f8ad 201e 	strh.w	r2, [sp, #30]
 8016200:	f8ad 3020 	strh.w	r3, [sp, #32]
 8016204:	bfa8      	it	ge
 8016206:	2614      	movge	r6, #20
 8016208:	f8d0 c000 	ldr.w	ip, [r0]
 801620c:	b2b6      	uxth	r6, r6
 801620e:	fa1f fb8b 	uxth.w	fp, fp
 8016212:	455e      	cmp	r6, fp
 8016214:	bf94      	ite	ls
 8016216:	9600      	strls	r6, [sp, #0]
 8016218:	f8cd b000 	strhi.w	fp, [sp]
 801621c:	b292      	uxth	r2, r2
 801621e:	f8dc 6090 	ldr.w	r6, [ip, #144]	; 0x90
 8016222:	b29b      	uxth	r3, r3
 8016224:	b289      	uxth	r1, r1
 8016226:	47b0      	blx	r6
 8016228:	6823      	ldr	r3, [r4, #0]
 801622a:	f8ad 0022 	strh.w	r0, [sp, #34]	; 0x22
 801622e:	6c9b      	ldr	r3, [r3, #72]	; 0x48
 8016230:	a907      	add	r1, sp, #28
 8016232:	4620      	mov	r0, r4
 8016234:	4798      	blx	r3
 8016236:	f8bd 1022 	ldrh.w	r1, [sp, #34]	; 0x22
 801623a:	f8b7 30b2 	ldrh.w	r3, [r7, #178]	; 0xb2
 801623e:	f8b7 20ae 	ldrh.w	r2, [r7, #174]	; 0xae
 8016242:	1a5b      	subs	r3, r3, r1
 8016244:	440a      	add	r2, r1
 8016246:	b21b      	sxth	r3, r3
 8016248:	f8a7 20ae 	strh.w	r2, [r7, #174]	; 0xae
 801624c:	f8a7 30b2 	strh.w	r3, [r7, #178]	; 0xb2
 8016250:	2b00      	cmp	r3, #0
 8016252:	f47f aeda 	bne.w	801600a <_ZN8touchgfx11Application15drawCachedAreasEv+0x2ca>
 8016256:	fa1f f189 	uxth.w	r1, r9
 801625a:	4650      	mov	r0, sl
 801625c:	f7ff f9e6 	bl	801562c <_ZN8touchgfx6VectorINS_4RectELt8EE13quickRemoveAtEt>
 8016260:	e6d3      	b.n	801600a <_ZN8touchgfx11Application15drawCachedAreasEv+0x2ca>
 8016262:	882e      	ldrh	r6, [r5, #0]
 8016264:	f8b4 30ec 	ldrh.w	r3, [r4, #236]	; 0xec
 8016268:	42b3      	cmp	r3, r6
 801626a:	f67f ae98 	bls.w	8015f9e <_ZN8touchgfx11Application15drawCachedAreasEv+0x25e>
 801626e:	eb04 02c6 	add.w	r2, r4, r6, lsl #3
 8016272:	ab07      	add	r3, sp, #28
 8016274:	f852 0fac 	ldr.w	r0, [r2, #172]!
 8016278:	6851      	ldr	r1, [r2, #4]
 801627a:	c303      	stmia	r3!, {r0, r1}
 801627c:	a807      	add	r0, sp, #28
 801627e:	f7f9 ff88 	bl	8010192 <_ZNK8touchgfx4Rect7isEmptyEv>
 8016282:	b920      	cbnz	r0, 801628e <_ZN8touchgfx11Application15drawCachedAreasEv+0x54e>
 8016284:	6823      	ldr	r3, [r4, #0]
 8016286:	a907      	add	r1, sp, #28
 8016288:	6c9b      	ldr	r3, [r3, #72]	; 0x48
 801628a:	4620      	mov	r0, r4
 801628c:	4798      	blx	r3
 801628e:	3601      	adds	r6, #1
 8016290:	b2b6      	uxth	r6, r6
 8016292:	e7e7      	b.n	8016264 <_ZN8touchgfx11Application15drawCachedAreasEv+0x524>
 8016294:	20012f24 	.word	0x20012f24

08016298 <_GLOBAL__sub_I__ZN8touchgfx11Application8instanceE>:
 8016298:	4b03      	ldr	r3, [pc, #12]	; (80162a8 <_GLOBAL__sub_I__ZN8touchgfx11Application8instanceE+0x10>)
 801629a:	2200      	movs	r2, #0
 801629c:	801a      	strh	r2, [r3, #0]
 801629e:	805a      	strh	r2, [r3, #2]
 80162a0:	809a      	strh	r2, [r3, #4]
 80162a2:	80da      	strh	r2, [r3, #6]
 80162a4:	4770      	bx	lr
 80162a6:	bf00      	nop
 80162a8:	20012f70 	.word	0x20012f70

080162ac <_ZNK8touchgfx4Font17getStringWidthLTREhPKtSt9__va_list>:
 80162ac:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 80162b0:	4606      	mov	r6, r0
 80162b2:	b09d      	sub	sp, #116	; 0x74
 80162b4:	a803      	add	r0, sp, #12
 80162b6:	4614      	mov	r4, r2
 80162b8:	468a      	mov	sl, r1
 80162ba:	461d      	mov	r5, r3
 80162bc:	f000 feca 	bl	8017054 <_ZN8touchgfx12TextProviderC1Ev>
 80162c0:	6833      	ldr	r3, [r6, #0]
 80162c2:	4630      	mov	r0, r6
 80162c4:	6cdb      	ldr	r3, [r3, #76]	; 0x4c
 80162c6:	4798      	blx	r3
 80162c8:	6833      	ldr	r3, [r6, #0]
 80162ca:	4607      	mov	r7, r0
 80162cc:	6d1b      	ldr	r3, [r3, #80]	; 0x50
 80162ce:	4630      	mov	r0, r6
 80162d0:	4798      	blx	r3
 80162d2:	462a      	mov	r2, r5
 80162d4:	9000      	str	r0, [sp, #0]
 80162d6:	4621      	mov	r1, r4
 80162d8:	463b      	mov	r3, r7
 80162da:	a803      	add	r0, sp, #12
 80162dc:	f000 ff15 	bl	801710a <_ZN8touchgfx12TextProvider10initializeEPKtSt9__va_listS2_PKNS_24FontContextualFormsTableE>
 80162e0:	2500      	movs	r5, #0
 80162e2:	462c      	mov	r4, r5
 80162e4:	46a9      	mov	r9, r5
 80162e6:	46a8      	mov	r8, r5
 80162e8:	f242 0b0b 	movw	fp, #8203	; 0x200b
 80162ec:	2300      	movs	r3, #0
 80162ee:	9302      	str	r3, [sp, #8]
 80162f0:	f64f 63ff 	movw	r3, #65279	; 0xfeff
 80162f4:	429c      	cmp	r4, r3
 80162f6:	d002      	beq.n	80162fe <_ZNK8touchgfx4Font17getStringWidthLTREhPKtSt9__va_list+0x52>
 80162f8:	455c      	cmp	r4, fp
 80162fa:	bf18      	it	ne
 80162fc:	4625      	movne	r5, r4
 80162fe:	ab02      	add	r3, sp, #8
 8016300:	4632      	mov	r2, r6
 8016302:	4651      	mov	r1, sl
 8016304:	a803      	add	r0, sp, #12
 8016306:	f001 fa03 	bl	8017710 <_ZN8touchgfx12TextProvider15getNextLigatureEhPKNS_4FontERPKNS_9GlyphNodeE>
 801630a:	4604      	mov	r4, r0
 801630c:	b108      	cbz	r0, 8016312 <_ZNK8touchgfx4Font17getStringWidthLTREhPKtSt9__va_list+0x66>
 801630e:	280a      	cmp	r0, #10
 8016310:	d10a      	bne.n	8016328 <_ZNK8touchgfx4Font17getStringWidthLTREhPKtSt9__va_list+0x7c>
 8016312:	45c1      	cmp	r9, r8
 8016314:	bf38      	it	cc
 8016316:	46c1      	movcc	r9, r8
 8016318:	f04f 0800 	mov.w	r8, #0
 801631c:	2c00      	cmp	r4, #0
 801631e:	d1e5      	bne.n	80162ec <_ZNK8touchgfx4Font17getStringWidthLTREhPKtSt9__va_list+0x40>
 8016320:	4648      	mov	r0, r9
 8016322:	b01d      	add	sp, #116	; 0x74
 8016324:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
 8016328:	9a02      	ldr	r2, [sp, #8]
 801632a:	2a00      	cmp	r2, #0
 801632c:	d0de      	beq.n	80162ec <_ZNK8touchgfx4Font17getStringWidthLTREhPKtSt9__va_list+0x40>
 801632e:	7b57      	ldrb	r7, [r2, #13]
 8016330:	6833      	ldr	r3, [r6, #0]
 8016332:	8894      	ldrh	r4, [r2, #4]
 8016334:	6c5b      	ldr	r3, [r3, #68]	; 0x44
 8016336:	007f      	lsls	r7, r7, #1
 8016338:	f407 7080 	and.w	r0, r7, #256	; 0x100
 801633c:	7a97      	ldrb	r7, [r2, #10]
 801633e:	4629      	mov	r1, r5
 8016340:	4307      	orrs	r7, r0
 8016342:	4630      	mov	r0, r6
 8016344:	4798      	blx	r3
 8016346:	4438      	add	r0, r7
 8016348:	4480      	add	r8, r0
 801634a:	fa1f f888 	uxth.w	r8, r8
 801634e:	e7e5      	b.n	801631c <_ZNK8touchgfx4Font17getStringWidthLTREhPKtSt9__va_list+0x70>

08016350 <_ZNK8touchgfx4Font12getCharWidthEt>:
 8016350:	b508      	push	{r3, lr}
 8016352:	6803      	ldr	r3, [r0, #0]
 8016354:	68db      	ldr	r3, [r3, #12]
 8016356:	4798      	blx	r3
 8016358:	b128      	cbz	r0, 8016366 <_ZNK8touchgfx4Font12getCharWidthEt+0x16>
 801635a:	7b43      	ldrb	r3, [r0, #13]
 801635c:	7a80      	ldrb	r0, [r0, #10]
 801635e:	005b      	lsls	r3, r3, #1
 8016360:	f403 7380 	and.w	r3, r3, #256	; 0x100
 8016364:	4318      	orrs	r0, r3
 8016366:	bd08      	pop	{r3, pc}

08016368 <_ZNK8touchgfx4Font16getMaxTextHeightEPKtz>:
 8016368:	b40e      	push	{r1, r2, r3}
 801636a:	b5f0      	push	{r4, r5, r6, r7, lr}
 801636c:	b09e      	sub	sp, #120	; 0x78
 801636e:	ab23      	add	r3, sp, #140	; 0x8c
 8016370:	4605      	mov	r5, r0
 8016372:	f853 4b04 	ldr.w	r4, [r3], #4
 8016376:	9303      	str	r3, [sp, #12]
 8016378:	a805      	add	r0, sp, #20
 801637a:	f000 fe6b 	bl	8017054 <_ZN8touchgfx12TextProviderC1Ev>
 801637e:	682b      	ldr	r3, [r5, #0]
 8016380:	4628      	mov	r0, r5
 8016382:	6cdb      	ldr	r3, [r3, #76]	; 0x4c
 8016384:	4798      	blx	r3
 8016386:	682b      	ldr	r3, [r5, #0]
 8016388:	4606      	mov	r6, r0
 801638a:	6d1b      	ldr	r3, [r3, #80]	; 0x50
 801638c:	4628      	mov	r0, r5
 801638e:	4798      	blx	r3
 8016390:	4633      	mov	r3, r6
 8016392:	ae1e      	add	r6, sp, #120	; 0x78
 8016394:	4621      	mov	r1, r4
 8016396:	9000      	str	r0, [sp, #0]
 8016398:	9a03      	ldr	r2, [sp, #12]
 801639a:	2400      	movs	r4, #0
 801639c:	a805      	add	r0, sp, #20
 801639e:	f000 feb4 	bl	801710a <_ZN8touchgfx12TextProvider10initializeEPKtSt9__va_listS2_PKNS_24FontContextualFormsTableE>
 80163a2:	f846 4d68 	str.w	r4, [r6, #-104]!
 80163a6:	462a      	mov	r2, r5
 80163a8:	4633      	mov	r3, r6
 80163aa:	4621      	mov	r1, r4
 80163ac:	a805      	add	r0, sp, #20
 80163ae:	f001 f9af 	bl	8017710 <_ZN8touchgfx12TextProvider15getNextLigatureEhPKNS_4FontERPKNS_9GlyphNodeE>
 80163b2:	b1f0      	cbz	r0, 80163f2 <_ZNK8touchgfx4Font16getMaxTextHeightEPKtz+0x8a>
 80163b4:	280a      	cmp	r0, #10
 80163b6:	d018      	beq.n	80163ea <_ZNK8touchgfx4Font16getMaxTextHeightEPKtz+0x82>
 80163b8:	9f04      	ldr	r7, [sp, #16]
 80163ba:	b1b7      	cbz	r7, 80163ea <_ZNK8touchgfx4Font16getMaxTextHeightEPKtz+0x82>
 80163bc:	7b78      	ldrb	r0, [r7, #13]
 80163be:	7a3b      	ldrb	r3, [r7, #8]
 80163c0:	88ea      	ldrh	r2, [r5, #6]
 80163c2:	00c1      	lsls	r1, r0, #3
 80163c4:	f401 7180 	and.w	r1, r1, #256	; 0x100
 80163c8:	4319      	orrs	r1, r3
 80163ca:	0643      	lsls	r3, r0, #25
 80163cc:	bf44      	itt	mi
 80163ce:	f5a1 7300 	submi.w	r3, r1, #512	; 0x200
 80163d2:	b219      	sxthmi	r1, r3
 80163d4:	0100      	lsls	r0, r0, #4
 80163d6:	79fb      	ldrb	r3, [r7, #7]
 80163d8:	f400 7080 	and.w	r0, r0, #256	; 0x100
 80163dc:	4303      	orrs	r3, r0
 80163de:	4413      	add	r3, r2
 80163e0:	1a5b      	subs	r3, r3, r1
 80163e2:	b21b      	sxth	r3, r3
 80163e4:	429c      	cmp	r4, r3
 80163e6:	bfb8      	it	lt
 80163e8:	461c      	movlt	r4, r3
 80163ea:	4633      	mov	r3, r6
 80163ec:	462a      	mov	r2, r5
 80163ee:	2100      	movs	r1, #0
 80163f0:	e7dc      	b.n	80163ac <_ZNK8touchgfx4Font16getMaxTextHeightEPKtz+0x44>
 80163f2:	b2a0      	uxth	r0, r4
 80163f4:	b01e      	add	sp, #120	; 0x78
 80163f6:	e8bd 40f0 	ldmia.w	sp!, {r4, r5, r6, r7, lr}
 80163fa:	b003      	add	sp, #12
 80163fc:	4770      	bx	lr

080163fe <_ZNK8touchgfx4Font20getMinimumTextHeightEv>:
 80163fe:	7a43      	ldrb	r3, [r0, #9]
 8016400:	8880      	ldrh	r0, [r0, #4]
 8016402:	4418      	add	r0, r3
 8016404:	b280      	uxth	r0, r0
 8016406:	4770      	bx	lr

08016408 <_ZNK8touchgfx4Font13getFontHeightEv>:
 8016408:	6803      	ldr	r3, [r0, #0]
 801640a:	6b1b      	ldr	r3, [r3, #48]	; 0x30
 801640c:	4718      	bx	r3

0801640e <_ZNK8touchgfx4Font16getNumberOfLinesEPKtz>:
 801640e:	b40e      	push	{r1, r2, r3}
 8016410:	b570      	push	{r4, r5, r6, lr}
 8016412:	b09d      	sub	sp, #116	; 0x74
 8016414:	ab21      	add	r3, sp, #132	; 0x84
 8016416:	4604      	mov	r4, r0
 8016418:	f853 5b04 	ldr.w	r5, [r3], #4
 801641c:	9302      	str	r3, [sp, #8]
 801641e:	a803      	add	r0, sp, #12
 8016420:	f000 fe18 	bl	8017054 <_ZN8touchgfx12TextProviderC1Ev>
 8016424:	6823      	ldr	r3, [r4, #0]
 8016426:	4620      	mov	r0, r4
 8016428:	6cdb      	ldr	r3, [r3, #76]	; 0x4c
 801642a:	4798      	blx	r3
 801642c:	6823      	ldr	r3, [r4, #0]
 801642e:	4606      	mov	r6, r0
 8016430:	6d1b      	ldr	r3, [r3, #80]	; 0x50
 8016432:	4620      	mov	r0, r4
 8016434:	4798      	blx	r3
 8016436:	4633      	mov	r3, r6
 8016438:	9000      	str	r0, [sp, #0]
 801643a:	9a02      	ldr	r2, [sp, #8]
 801643c:	4629      	mov	r1, r5
 801643e:	a803      	add	r0, sp, #12
 8016440:	f000 fe63 	bl	801710a <_ZN8touchgfx12TextProvider10initializeEPKtSt9__va_listS2_PKNS_24FontContextualFormsTableE>
 8016444:	a803      	add	r0, sp, #12
 8016446:	f001 fa31 	bl	80178ac <_ZN8touchgfx12TextProvider11getNextCharEv>
 801644a:	2401      	movs	r4, #1
 801644c:	b2a3      	uxth	r3, r4
 801644e:	b140      	cbz	r0, 8016462 <_ZNK8touchgfx4Font16getNumberOfLinesEPKtz+0x54>
 8016450:	280a      	cmp	r0, #10
 8016452:	bf08      	it	eq
 8016454:	3301      	addeq	r3, #1
 8016456:	a803      	add	r0, sp, #12
 8016458:	bf08      	it	eq
 801645a:	b21c      	sxtheq	r4, r3
 801645c:	f001 fa26 	bl	80178ac <_ZN8touchgfx12TextProvider11getNextCharEv>
 8016460:	e7f4      	b.n	801644c <_ZNK8touchgfx4Font16getNumberOfLinesEPKtz+0x3e>
 8016462:	4618      	mov	r0, r3
 8016464:	b01d      	add	sp, #116	; 0x74
 8016466:	e8bd 4070 	ldmia.w	sp!, {r4, r5, r6, lr}
 801646a:	b003      	add	sp, #12
 801646c:	4770      	bx	lr

0801646e <_ZNK8touchgfx4Font15getSpacingAboveEPKtz>:
 801646e:	b40e      	push	{r1, r2, r3}
 8016470:	b5f0      	push	{r4, r5, r6, r7, lr}
 8016472:	b09e      	sub	sp, #120	; 0x78
 8016474:	ab23      	add	r3, sp, #140	; 0x8c
 8016476:	4604      	mov	r4, r0
 8016478:	f853 5b04 	ldr.w	r5, [r3], #4
 801647c:	9303      	str	r3, [sp, #12]
 801647e:	a805      	add	r0, sp, #20
 8016480:	f000 fde8 	bl	8017054 <_ZN8touchgfx12TextProviderC1Ev>
 8016484:	6823      	ldr	r3, [r4, #0]
 8016486:	4620      	mov	r0, r4
 8016488:	6cdb      	ldr	r3, [r3, #76]	; 0x4c
 801648a:	4798      	blx	r3
 801648c:	6823      	ldr	r3, [r4, #0]
 801648e:	4606      	mov	r6, r0
 8016490:	6d1b      	ldr	r3, [r3, #80]	; 0x50
 8016492:	4620      	mov	r0, r4
 8016494:	4798      	blx	r3
 8016496:	4633      	mov	r3, r6
 8016498:	4629      	mov	r1, r5
 801649a:	9000      	str	r0, [sp, #0]
 801649c:	9a03      	ldr	r2, [sp, #12]
 801649e:	a805      	add	r0, sp, #20
 80164a0:	ad1e      	add	r5, sp, #120	; 0x78
 80164a2:	f000 fe32 	bl	801710a <_ZN8touchgfx12TextProvider10initializeEPKtSt9__va_listS2_PKNS_24FontContextualFormsTableE>
 80164a6:	2100      	movs	r1, #0
 80164a8:	f845 1d68 	str.w	r1, [r5, #-104]!
 80164ac:	4622      	mov	r2, r4
 80164ae:	462b      	mov	r3, r5
 80164b0:	a805      	add	r0, sp, #20
 80164b2:	f001 f92d 	bl	8017710 <_ZN8touchgfx12TextProvider15getNextLigatureEhPKNS_4FontERPKNS_9GlyphNodeE>
 80164b6:	f647 76ff 	movw	r6, #32767	; 0x7fff
 80164ba:	b1d8      	cbz	r0, 80164f4 <_ZNK8touchgfx4Font15getSpacingAboveEPKtz+0x86>
 80164bc:	280a      	cmp	r0, #10
 80164be:	d012      	beq.n	80164e6 <_ZNK8touchgfx4Font15getSpacingAboveEPKtz+0x78>
 80164c0:	9804      	ldr	r0, [sp, #16]
 80164c2:	b180      	cbz	r0, 80164e6 <_ZNK8touchgfx4Font15getSpacingAboveEPKtz+0x78>
 80164c4:	7b47      	ldrb	r7, [r0, #13]
 80164c6:	88e2      	ldrh	r2, [r4, #6]
 80164c8:	00fb      	lsls	r3, r7, #3
 80164ca:	f403 7180 	and.w	r1, r3, #256	; 0x100
 80164ce:	7a03      	ldrb	r3, [r0, #8]
 80164d0:	430b      	orrs	r3, r1
 80164d2:	0679      	lsls	r1, r7, #25
 80164d4:	bf44      	itt	mi
 80164d6:	f5a3 7300 	submi.w	r3, r3, #512	; 0x200
 80164da:	b21b      	sxthmi	r3, r3
 80164dc:	1ad3      	subs	r3, r2, r3
 80164de:	b21b      	sxth	r3, r3
 80164e0:	429e      	cmp	r6, r3
 80164e2:	bfa8      	it	ge
 80164e4:	461e      	movge	r6, r3
 80164e6:	462b      	mov	r3, r5
 80164e8:	4622      	mov	r2, r4
 80164ea:	2100      	movs	r1, #0
 80164ec:	a805      	add	r0, sp, #20
 80164ee:	f001 f90f 	bl	8017710 <_ZN8touchgfx12TextProvider15getNextLigatureEhPKNS_4FontERPKNS_9GlyphNodeE>
 80164f2:	e7e2      	b.n	80164ba <_ZNK8touchgfx4Font15getSpacingAboveEPKtz+0x4c>
 80164f4:	4630      	mov	r0, r6
 80164f6:	b01e      	add	sp, #120	; 0x78
 80164f8:	e8bd 40f0 	ldmia.w	sp!, {r4, r5, r6, r7, lr}
 80164fc:	b003      	add	sp, #12
 80164fe:	4770      	bx	lr

08016500 <_ZNK8touchgfx8Drawable10invalidateEv>:
 8016500:	b513      	push	{r0, r1, r4, lr}
 8016502:	6803      	ldr	r3, [r0, #0]
 8016504:	f9b0 1008 	ldrsh.w	r1, [r0, #8]
 8016508:	f9b0 200a 	ldrsh.w	r2, [r0, #10]
 801650c:	f8ad 1004 	strh.w	r1, [sp, #4]
 8016510:	2400      	movs	r4, #0
 8016512:	9400      	str	r4, [sp, #0]
 8016514:	f8ad 2006 	strh.w	r2, [sp, #6]
 8016518:	691b      	ldr	r3, [r3, #16]
 801651a:	4669      	mov	r1, sp
 801651c:	4798      	blx	r3
 801651e:	b002      	add	sp, #8
 8016520:	bd10      	pop	{r4, pc}

08016522 <_ZN8touchgfx8Drawable20getSolidRectAbsoluteEv>:
 8016522:	b538      	push	{r3, r4, r5, lr}
 8016524:	680b      	ldr	r3, [r1, #0]
 8016526:	460c      	mov	r4, r1
 8016528:	68db      	ldr	r3, [r3, #12]
 801652a:	4605      	mov	r5, r0
 801652c:	4798      	blx	r3
 801652e:	6823      	ldr	r3, [r4, #0]
 8016530:	4620      	mov	r0, r4
 8016532:	6adb      	ldr	r3, [r3, #44]	; 0x2c
 8016534:	4629      	mov	r1, r5
 8016536:	4798      	blx	r3
 8016538:	4628      	mov	r0, r5
 801653a:	bd38      	pop	{r3, r4, r5, pc}

0801653c <_ZNK8touchgfx8Drawable23translateRectToAbsoluteERNS_4RectE>:
 801653c:	b410      	push	{r4}
 801653e:	880a      	ldrh	r2, [r1, #0]
 8016540:	8884      	ldrh	r4, [r0, #4]
 8016542:	4422      	add	r2, r4
 8016544:	800a      	strh	r2, [r1, #0]
 8016546:	88c4      	ldrh	r4, [r0, #6]
 8016548:	884a      	ldrh	r2, [r1, #2]
 801654a:	4422      	add	r2, r4
 801654c:	804a      	strh	r2, [r1, #2]
 801654e:	6940      	ldr	r0, [r0, #20]
 8016550:	b120      	cbz	r0, 801655c <_ZNK8touchgfx8Drawable23translateRectToAbsoluteERNS_4RectE+0x20>
 8016552:	6803      	ldr	r3, [r0, #0]
 8016554:	f85d 4b04 	ldr.w	r4, [sp], #4
 8016558:	6adb      	ldr	r3, [r3, #44]	; 0x2c
 801655a:	4718      	bx	r3
 801655c:	f85d 4b04 	ldr.w	r4, [sp], #4
 8016560:	4770      	bx	lr

08016562 <_ZNK8touchgfx8Drawable14getVisibleRectERNS_4RectE>:
 8016562:	b570      	push	{r4, r5, r6, lr}
 8016564:	8882      	ldrh	r2, [r0, #4]
 8016566:	880b      	ldrh	r3, [r1, #0]
 8016568:	4413      	add	r3, r2
 801656a:	800b      	strh	r3, [r1, #0]
 801656c:	88c2      	ldrh	r2, [r0, #6]
 801656e:	884b      	ldrh	r3, [r1, #2]
 8016570:	460c      	mov	r4, r1
 8016572:	4413      	add	r3, r2
 8016574:	804b      	strh	r3, [r1, #2]
 8016576:	4605      	mov	r5, r0
 8016578:	1d01      	adds	r1, r0, #4
 801657a:	4620      	mov	r0, r4
 801657c:	f7f9 fdc6 	bl	801010c <_ZN8touchgfx4RectaNERKS0_>
 8016580:	f9b4 3004 	ldrsh.w	r3, [r4, #4]
 8016584:	2b00      	cmp	r3, #0
 8016586:	dd0b      	ble.n	80165a0 <_ZNK8touchgfx8Drawable14getVisibleRectERNS_4RectE+0x3e>
 8016588:	f9b4 3006 	ldrsh.w	r3, [r4, #6]
 801658c:	2b00      	cmp	r3, #0
 801658e:	dd07      	ble.n	80165a0 <_ZNK8touchgfx8Drawable14getVisibleRectERNS_4RectE+0x3e>
 8016590:	6968      	ldr	r0, [r5, #20]
 8016592:	b128      	cbz	r0, 80165a0 <_ZNK8touchgfx8Drawable14getVisibleRectERNS_4RectE+0x3e>
 8016594:	6803      	ldr	r3, [r0, #0]
 8016596:	4621      	mov	r1, r4
 8016598:	6a9b      	ldr	r3, [r3, #40]	; 0x28
 801659a:	e8bd 4070 	ldmia.w	sp!, {r4, r5, r6, lr}
 801659e:	4718      	bx	r3
 80165a0:	bd70      	pop	{r4, r5, r6, pc}
	...

080165a4 <_ZNK8touchgfx8Drawable14invalidateRectERNS_4RectE>:
 80165a4:	b570      	push	{r4, r5, r6, lr}
 80165a6:	8882      	ldrh	r2, [r0, #4]
 80165a8:	880b      	ldrh	r3, [r1, #0]
 80165aa:	4413      	add	r3, r2
 80165ac:	800b      	strh	r3, [r1, #0]
 80165ae:	88c2      	ldrh	r2, [r0, #6]
 80165b0:	884b      	ldrh	r3, [r1, #2]
 80165b2:	460c      	mov	r4, r1
 80165b4:	4413      	add	r3, r2
 80165b6:	804b      	strh	r3, [r1, #2]
 80165b8:	4605      	mov	r5, r0
 80165ba:	1d01      	adds	r1, r0, #4
 80165bc:	4620      	mov	r0, r4
 80165be:	f7f9 fda5 	bl	801010c <_ZN8touchgfx4RectaNERKS0_>
 80165c2:	f9b4 3004 	ldrsh.w	r3, [r4, #4]
 80165c6:	2b00      	cmp	r3, #0
 80165c8:	dd19      	ble.n	80165fe <_ZNK8touchgfx8Drawable14invalidateRectERNS_4RectE+0x5a>
 80165ca:	f9b4 3006 	ldrsh.w	r3, [r4, #6]
 80165ce:	2b00      	cmp	r3, #0
 80165d0:	dd15      	ble.n	80165fe <_ZNK8touchgfx8Drawable14invalidateRectERNS_4RectE+0x5a>
 80165d2:	6968      	ldr	r0, [r5, #20]
 80165d4:	b128      	cbz	r0, 80165e2 <_ZNK8touchgfx8Drawable14invalidateRectERNS_4RectE+0x3e>
 80165d6:	6803      	ldr	r3, [r0, #0]
 80165d8:	4621      	mov	r1, r4
 80165da:	691b      	ldr	r3, [r3, #16]
 80165dc:	e8bd 4070 	ldmia.w	sp!, {r4, r5, r6, lr}
 80165e0:	4718      	bx	r3
 80165e2:	4b07      	ldr	r3, [pc, #28]	; (8016600 <_ZNK8touchgfx8Drawable14invalidateRectERNS_4RectE+0x5c>)
 80165e4:	681b      	ldr	r3, [r3, #0]
 80165e6:	3304      	adds	r3, #4
 80165e8:	429d      	cmp	r5, r3
 80165ea:	d108      	bne.n	80165fe <_ZNK8touchgfx8Drawable14invalidateRectERNS_4RectE+0x5a>
 80165ec:	f7fe fea0 	bl	8015330 <_ZN8touchgfx11Application11getInstanceEv>
 80165f0:	6803      	ldr	r3, [r0, #0]
 80165f2:	6821      	ldr	r1, [r4, #0]
 80165f4:	6862      	ldr	r2, [r4, #4]
 80165f6:	6c1b      	ldr	r3, [r3, #64]	; 0x40
 80165f8:	e8bd 4070 	ldmia.w	sp!, {r4, r5, r6, lr}
 80165fc:	4718      	bx	r3
 80165fe:	bd70      	pop	{r4, r5, r6, pc}
 8016600:	20012f68 	.word	0x20012f68

08016604 <_ZN8touchgfx8Drawable12moveRelativeEss>:
 8016604:	b570      	push	{r4, r5, r6, lr}
 8016606:	4604      	mov	r4, r0
 8016608:	4616      	mov	r6, r2
 801660a:	460d      	mov	r5, r1
 801660c:	b901      	cbnz	r1, 8016610 <_ZN8touchgfx8Drawable12moveRelativeEss+0xc>
 801660e:	b192      	cbz	r2, 8016636 <_ZN8touchgfx8Drawable12moveRelativeEss+0x32>
 8016610:	6823      	ldr	r3, [r4, #0]
 8016612:	4620      	mov	r0, r4
 8016614:	699b      	ldr	r3, [r3, #24]
 8016616:	4798      	blx	r3
 8016618:	88e2      	ldrh	r2, [r4, #6]
 801661a:	88a1      	ldrh	r1, [r4, #4]
 801661c:	4432      	add	r2, r6
 801661e:	4429      	add	r1, r5
 8016620:	4620      	mov	r0, r4
 8016622:	b212      	sxth	r2, r2
 8016624:	b209      	sxth	r1, r1
 8016626:	f7ec f89e 	bl	8002766 <_ZN8touchgfx8Drawable5setXYEss>
 801662a:	6823      	ldr	r3, [r4, #0]
 801662c:	4620      	mov	r0, r4
 801662e:	699b      	ldr	r3, [r3, #24]
 8016630:	e8bd 4070 	ldmia.w	sp!, {r4, r5, r6, lr}
 8016634:	4718      	bx	r3
 8016636:	bd70      	pop	{r4, r5, r6, pc}

08016638 <_ZNK8touchgfx8Drawable15getAbsoluteRectEv>:
 8016638:	b510      	push	{r4, lr}
 801663a:	4604      	mov	r4, r0
 801663c:	4608      	mov	r0, r1
 801663e:	2300      	movs	r3, #0
 8016640:	8023      	strh	r3, [r4, #0]
 8016642:	8063      	strh	r3, [r4, #2]
 8016644:	6803      	ldr	r3, [r0, #0]
 8016646:	f9b0 200a 	ldrsh.w	r2, [r0, #10]
 801664a:	f9b1 1008 	ldrsh.w	r1, [r1, #8]
 801664e:	80a1      	strh	r1, [r4, #4]
 8016650:	80e2      	strh	r2, [r4, #6]
 8016652:	6adb      	ldr	r3, [r3, #44]	; 0x2c
 8016654:	4621      	mov	r1, r4
 8016656:	4798      	blx	r3
 8016658:	4620      	mov	r0, r4
 801665a:	bd10      	pop	{r4, pc}

0801665c <_ZN8touchgfx9ConstFontC1EPKNS_9GlyphNodeEttthhhhhhtt>:
 801665c:	b530      	push	{r4, r5, lr}
 801665e:	8083      	strh	r3, [r0, #4]
 8016660:	f8bd 300c 	ldrh.w	r3, [sp, #12]
 8016664:	80c3      	strh	r3, [r0, #6]
 8016666:	f89d 3010 	ldrb.w	r3, [sp, #16]
 801666a:	7203      	strb	r3, [r0, #8]
 801666c:	f89d 3014 	ldrb.w	r3, [sp, #20]
 8016670:	f89d 5018 	ldrb.w	r5, [sp, #24]
 8016674:	7243      	strb	r3, [r0, #9]
 8016676:	7a83      	ldrb	r3, [r0, #10]
 8016678:	6141      	str	r1, [r0, #20]
 801667a:	f365 0306 	bfi	r3, r5, #0, #7
 801667e:	f89d 501c 	ldrb.w	r5, [sp, #28]
 8016682:	8302      	strh	r2, [r0, #24]
 8016684:	f365 13c7 	bfi	r3, r5, #7, #1
 8016688:	7283      	strb	r3, [r0, #10]
 801668a:	f89d 3020 	ldrb.w	r3, [sp, #32]
 801668e:	72c3      	strb	r3, [r0, #11]
 8016690:	f89d 3024 	ldrb.w	r3, [sp, #36]	; 0x24
 8016694:	7303      	strb	r3, [r0, #12]
 8016696:	f8bd 3028 	ldrh.w	r3, [sp, #40]	; 0x28
 801669a:	81c3      	strh	r3, [r0, #14]
 801669c:	f8bd 302c 	ldrh.w	r3, [sp, #44]	; 0x2c
 80166a0:	8203      	strh	r3, [r0, #16]
 80166a2:	4b01      	ldr	r3, [pc, #4]	; (80166a8 <_ZN8touchgfx9ConstFontC1EPKNS_9GlyphNodeEttthhhhhhtt+0x4c>)
 80166a4:	6003      	str	r3, [r0, #0]
 80166a6:	bd30      	pop	{r4, r5, pc}
 80166a8:	0802e8b4 	.word	0x0802e8b4

080166ac <_ZNK8touchgfx9ConstFont4findEt>:
 80166ac:	b5f0      	push	{r4, r5, r6, r7, lr}
 80166ae:	6944      	ldr	r4, [r0, #20]
 80166b0:	b3bc      	cbz	r4, 8016722 <_ZNK8touchgfx9ConstFont4findEt+0x76>
 80166b2:	88a3      	ldrh	r3, [r4, #4]
 80166b4:	8b02      	ldrh	r2, [r0, #24]
 80166b6:	1acb      	subs	r3, r1, r3
 80166b8:	f102 32ff 	add.w	r2, r2, #4294967295
 80166bc:	d431      	bmi.n	8016722 <_ZNK8touchgfx9ConstFont4findEt+0x76>
 80166be:	4293      	cmp	r3, r2
 80166c0:	dd0c      	ble.n	80166dc <_ZNK8touchgfx9ConstFont4findEt+0x30>
 80166c2:	230e      	movs	r3, #14
 80166c4:	fb03 4302 	mla	r3, r3, r2, r4
 80166c8:	889b      	ldrh	r3, [r3, #4]
 80166ca:	1a5b      	subs	r3, r3, r1
 80166cc:	1ad3      	subs	r3, r2, r3
 80166ce:	429a      	cmp	r2, r3
 80166d0:	db27      	blt.n	8016722 <_ZNK8touchgfx9ConstFont4findEt+0x76>
 80166d2:	2b00      	cmp	r3, #0
 80166d4:	bfbc      	itt	lt
 80166d6:	2302      	movlt	r3, #2
 80166d8:	fb92 f3f3 	sdivlt	r3, r2, r3
 80166dc:	2500      	movs	r5, #0
 80166de:	260e      	movs	r6, #14
 80166e0:	4295      	cmp	r5, r2
 80166e2:	dc1e      	bgt.n	8016722 <_ZNK8touchgfx9ConstFont4findEt+0x76>
 80166e4:	fb06 4003 	mla	r0, r6, r3, r4
 80166e8:	8887      	ldrh	r7, [r0, #4]
 80166ea:	42b9      	cmp	r1, r7
 80166ec:	d01a      	beq.n	8016724 <_ZNK8touchgfx9ConstFont4findEt+0x78>
 80166ee:	d20d      	bcs.n	801670c <_ZNK8touchgfx9ConstFont4findEt+0x60>
 80166f0:	1e5a      	subs	r2, r3, #1
 80166f2:	4295      	cmp	r5, r2
 80166f4:	dc15      	bgt.n	8016722 <_ZNK8touchgfx9ConstFont4findEt+0x76>
 80166f6:	f830 3c0a 	ldrh.w	r3, [r0, #-10]
 80166fa:	1a5b      	subs	r3, r3, r1
 80166fc:	1ad3      	subs	r3, r2, r3
 80166fe:	429a      	cmp	r2, r3
 8016700:	db0f      	blt.n	8016722 <_ZNK8touchgfx9ConstFont4findEt+0x76>
 8016702:	429d      	cmp	r5, r3
 8016704:	ddec      	ble.n	80166e0 <_ZNK8touchgfx9ConstFont4findEt+0x34>
 8016706:	1953      	adds	r3, r2, r5
 8016708:	105b      	asrs	r3, r3, #1
 801670a:	e7e9      	b.n	80166e0 <_ZNK8touchgfx9ConstFont4findEt+0x34>
 801670c:	1c5d      	adds	r5, r3, #1
 801670e:	42aa      	cmp	r2, r5
 8016710:	db07      	blt.n	8016722 <_ZNK8touchgfx9ConstFont4findEt+0x76>
 8016712:	8a43      	ldrh	r3, [r0, #18]
 8016714:	1acb      	subs	r3, r1, r3
 8016716:	442b      	add	r3, r5
 8016718:	429d      	cmp	r5, r3
 801671a:	dc02      	bgt.n	8016722 <_ZNK8touchgfx9ConstFont4findEt+0x76>
 801671c:	429a      	cmp	r2, r3
 801671e:	dadf      	bge.n	80166e0 <_ZNK8touchgfx9ConstFont4findEt+0x34>
 8016720:	e7f1      	b.n	8016706 <_ZNK8touchgfx9ConstFont4findEt+0x5a>
 8016722:	2000      	movs	r0, #0
 8016724:	bdf0      	pop	{r4, r5, r6, r7, pc}

08016726 <_ZNK8touchgfx9ConstFont8getGlyphEtRPKhRh>:
 8016726:	b5f8      	push	{r3, r4, r5, r6, r7, lr}
 8016728:	4604      	mov	r4, r0
 801672a:	4617      	mov	r7, r2
 801672c:	461e      	mov	r6, r3
 801672e:	b911      	cbnz	r1, 8016736 <_ZNK8touchgfx9ConstFont8getGlyphEtRPKhRh+0x10>
 8016730:	2500      	movs	r5, #0
 8016732:	4628      	mov	r0, r5
 8016734:	bdf8      	pop	{r3, r4, r5, r6, r7, pc}
 8016736:	290a      	cmp	r1, #10
 8016738:	d0fa      	beq.n	8016730 <_ZNK8touchgfx9ConstFont8getGlyphEtRPKhRh+0xa>
 801673a:	f64f 62ff 	movw	r2, #65279	; 0xfeff
 801673e:	4291      	cmp	r1, r2
 8016740:	d0f6      	beq.n	8016730 <_ZNK8touchgfx9ConstFont8getGlyphEtRPKhRh+0xa>
 8016742:	f242 020b 	movw	r2, #8203	; 0x200b
 8016746:	4291      	cmp	r1, r2
 8016748:	d0f2      	beq.n	8016730 <_ZNK8touchgfx9ConstFont8getGlyphEtRPKhRh+0xa>
 801674a:	f7ff ffaf 	bl	80166ac <_ZNK8touchgfx9ConstFont4findEt>
 801674e:	4605      	mov	r5, r0
 8016750:	b950      	cbnz	r0, 8016768 <_ZNK8touchgfx9ConstFont8getGlyphEtRPKhRh+0x42>
 8016752:	6823      	ldr	r3, [r4, #0]
 8016754:	4620      	mov	r0, r4
 8016756:	691b      	ldr	r3, [r3, #16]
 8016758:	4798      	blx	r3
 801675a:	4601      	mov	r1, r0
 801675c:	4620      	mov	r0, r4
 801675e:	f7ff ffa5 	bl	80166ac <_ZNK8touchgfx9ConstFont4findEt>
 8016762:	4605      	mov	r5, r0
 8016764:	2800      	cmp	r0, #0
 8016766:	d0e3      	beq.n	8016730 <_ZNK8touchgfx9ConstFont8getGlyphEtRPKhRh+0xa>
 8016768:	6823      	ldr	r3, [r4, #0]
 801676a:	4629      	mov	r1, r5
 801676c:	6d5b      	ldr	r3, [r3, #84]	; 0x54
 801676e:	4620      	mov	r0, r4
 8016770:	4798      	blx	r3
 8016772:	6038      	str	r0, [r7, #0]
 8016774:	6823      	ldr	r3, [r4, #0]
 8016776:	4620      	mov	r0, r4
 8016778:	6bdb      	ldr	r3, [r3, #60]	; 0x3c
 801677a:	4798      	blx	r3
 801677c:	7030      	strb	r0, [r6, #0]
 801677e:	e7d8      	b.n	8016732 <_ZNK8touchgfx9ConstFont8getGlyphEtRPKhRh+0xc>

08016780 <_ZN8touchgfx34lookupNearestNeighborRenderVariantERKNS_6BitmapE>:
 8016780:	b538      	push	{r3, r4, r5, lr}
 8016782:	4605      	mov	r5, r0
 8016784:	f002 fb56 	bl	8018e34 <_ZNK8touchgfx6Bitmap9getFormatEv>
 8016788:	4604      	mov	r4, r0
 801678a:	4628      	mov	r0, r5
 801678c:	f002 fa96 	bl	8018cbc <_ZNK8touchgfx6Bitmap20hasTransparentPixelsEv>
 8016790:	2800      	cmp	r0, #0
 8016792:	bf14      	ite	ne
 8016794:	2002      	movne	r0, #2
 8016796:	2000      	moveq	r0, #0
 8016798:	ea40 0084 	orr.w	r0, r0, r4, lsl #2
 801679c:	b280      	uxth	r0, r0
 801679e:	bd38      	pop	{r3, r4, r5, pc}

080167a0 <_ZN8touchgfx27lookupBilinearRenderVariantERKNS_6BitmapE>:
 80167a0:	b538      	push	{r3, r4, r5, lr}
 80167a2:	4605      	mov	r5, r0
 80167a4:	f002 fb46 	bl	8018e34 <_ZNK8touchgfx6Bitmap9getFormatEv>
 80167a8:	4604      	mov	r4, r0
 80167aa:	4628      	mov	r0, r5
 80167ac:	f002 fa86 	bl	8018cbc <_ZNK8touchgfx6Bitmap20hasTransparentPixelsEv>
 80167b0:	2800      	cmp	r0, #0
 80167b2:	bf14      	ite	ne
 80167b4:	2002      	movne	r0, #2
 80167b6:	2000      	moveq	r0, #0
 80167b8:	ea40 0084 	orr.w	r0, r0, r4, lsl #2
 80167bc:	f040 0001 	orr.w	r0, r0, #1
 80167c0:	b280      	uxth	r0, r0
 80167c2:	bd38      	pop	{r3, r4, r5, pc}

080167c4 <_ZN8touchgfx4clzuEm>:
 80167c4:	4603      	mov	r3, r0
 80167c6:	b1c8      	cbz	r0, 80167fc <_ZN8touchgfx4clzuEm+0x38>
 80167c8:	0c02      	lsrs	r2, r0, #16
 80167ca:	0412      	lsls	r2, r2, #16
 80167cc:	b9a2      	cbnz	r2, 80167f8 <_ZN8touchgfx4clzuEm+0x34>
 80167ce:	0403      	lsls	r3, r0, #16
 80167d0:	2010      	movs	r0, #16
 80167d2:	f013 4f7f 	tst.w	r3, #4278190080	; 0xff000000
 80167d6:	bf04      	itt	eq
 80167d8:	021b      	lsleq	r3, r3, #8
 80167da:	3008      	addeq	r0, #8
 80167dc:	f013 4f70 	tst.w	r3, #4026531840	; 0xf0000000
 80167e0:	bf04      	itt	eq
 80167e2:	011b      	lsleq	r3, r3, #4
 80167e4:	3004      	addeq	r0, #4
 80167e6:	f013 4f40 	tst.w	r3, #3221225472	; 0xc0000000
 80167ea:	bf04      	itt	eq
 80167ec:	009b      	lsleq	r3, r3, #2
 80167ee:	3002      	addeq	r0, #2
 80167f0:	2b00      	cmp	r3, #0
 80167f2:	db04      	blt.n	80167fe <_ZN8touchgfx4clzuEm+0x3a>
 80167f4:	3001      	adds	r0, #1
 80167f6:	4770      	bx	lr
 80167f8:	2000      	movs	r0, #0
 80167fa:	e7ea      	b.n	80167d2 <_ZN8touchgfx4clzuEm+0xe>
 80167fc:	2020      	movs	r0, #32
 80167fe:	4770      	bx	lr

08016800 <_ZN8touchgfx7muldivuEmmmRm>:
 8016800:	e92d 47f3 	stmdb	sp!, {r0, r1, r4, r5, r6, r7, r8, r9, sl, lr}
 8016804:	460f      	mov	r7, r1
 8016806:	4615      	mov	r5, r2
 8016808:	461e      	mov	r6, r3
 801680a:	4601      	mov	r1, r0
 801680c:	b100      	cbz	r0, 8016810 <_ZN8touchgfx7muldivuEmmmRm+0x10>
 801680e:	b927      	cbnz	r7, 801681a <_ZN8touchgfx7muldivuEmmmRm+0x1a>
 8016810:	2000      	movs	r0, #0
 8016812:	6030      	str	r0, [r6, #0]
 8016814:	b002      	add	sp, #8
 8016816:	e8bd 87f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, pc}
 801681a:	f7ff ffd3 	bl	80167c4 <_ZN8touchgfx4clzuEm>
 801681e:	b980      	cbnz	r0, 8016842 <_ZN8touchgfx7muldivuEmmmRm+0x42>
 8016820:	4638      	mov	r0, r7
 8016822:	f7ff ffcf 	bl	80167c4 <_ZN8touchgfx4clzuEm>
 8016826:	2800      	cmp	r0, #0
 8016828:	dd05      	ble.n	8016836 <_ZN8touchgfx7muldivuEmmmRm+0x36>
 801682a:	4633      	mov	r3, r6
 801682c:	462a      	mov	r2, r5
 801682e:	4638      	mov	r0, r7
 8016830:	f7ff ffe6 	bl	8016800 <_ZN8touchgfx7muldivuEmmmRm>
 8016834:	e7ee      	b.n	8016814 <_ZN8touchgfx7muldivuEmmmRm+0x14>
 8016836:	f04f 33ff 	mov.w	r3, #4294967295
 801683a:	6033      	str	r3, [r6, #0]
 801683c:	f06f 4000 	mvn.w	r0, #2147483648	; 0x80000000
 8016840:	e7e8      	b.n	8016814 <_ZN8touchgfx7muldivuEmmmRm+0x14>
 8016842:	fa37 f800 	lsrs.w	r8, r7, r0
 8016846:	fb07 f301 	mul.w	r3, r7, r1
 801684a:	d105      	bne.n	8016858 <_ZN8touchgfx7muldivuEmmmRm+0x58>
 801684c:	fbb3 f0f5 	udiv	r0, r3, r5
 8016850:	fb05 3510 	mls	r5, r5, r0, r3
 8016854:	6035      	str	r5, [r6, #0]
 8016856:	e7dd      	b.n	8016814 <_ZN8touchgfx7muldivuEmmmRm+0x14>
 8016858:	2301      	movs	r3, #1
 801685a:	fa01 fa00 	lsl.w	sl, r1, r0
 801685e:	fa03 f000 	lsl.w	r0, r3, r0
 8016862:	3801      	subs	r0, #1
 8016864:	462a      	mov	r2, r5
 8016866:	4633      	mov	r3, r6
 8016868:	4038      	ands	r0, r7
 801686a:	f7ff ffc9 	bl	8016800 <_ZN8touchgfx7muldivuEmmmRm>
 801686e:	fbba f9f5 	udiv	r9, sl, r5
 8016872:	462a      	mov	r2, r5
 8016874:	4607      	mov	r7, r0
 8016876:	ab01      	add	r3, sp, #4
 8016878:	fb05 a119 	mls	r1, r5, r9, sl
 801687c:	4640      	mov	r0, r8
 801687e:	f7ff ffbf 	bl	8016800 <_ZN8touchgfx7muldivuEmmmRm>
 8016882:	9b01      	ldr	r3, [sp, #4]
 8016884:	6832      	ldr	r2, [r6, #0]
 8016886:	fb08 f409 	mul.w	r4, r8, r9
 801688a:	441a      	add	r2, r3
 801688c:	fbb2 f3f5 	udiv	r3, r2, r5
 8016890:	441c      	add	r4, r3
 8016892:	443c      	add	r4, r7
 8016894:	4420      	add	r0, r4
 8016896:	fb05 2513 	mls	r5, r5, r3, r2
 801689a:	e7db      	b.n	8016854 <_ZN8touchgfx7muldivuEmmmRm+0x54>

0801689c <_ZN8touchgfx6muldivElllRl>:
 801689c:	b573      	push	{r0, r1, r4, r5, r6, lr}
 801689e:	2800      	cmp	r0, #0
 80168a0:	bfba      	itte	lt
 80168a2:	4240      	neglt	r0, r0
 80168a4:	f04f 34ff 	movlt.w	r4, #4294967295
 80168a8:	2401      	movge	r4, #1
 80168aa:	2900      	cmp	r1, #0
 80168ac:	bfbc      	itt	lt
 80168ae:	4249      	neglt	r1, r1
 80168b0:	4264      	neglt	r4, r4
 80168b2:	2a00      	cmp	r2, #0
 80168b4:	bfb6      	itet	lt
 80168b6:	4265      	neglt	r5, r4
 80168b8:	4625      	movge	r5, r4
 80168ba:	4252      	neglt	r2, r2
 80168bc:	4288      	cmp	r0, r1
 80168be:	461e      	mov	r6, r3
 80168c0:	bfc2      	ittt	gt
 80168c2:	4603      	movgt	r3, r0
 80168c4:	4608      	movgt	r0, r1
 80168c6:	4619      	movgt	r1, r3
 80168c8:	ab01      	add	r3, sp, #4
 80168ca:	f7ff ff99 	bl	8016800 <_ZN8touchgfx7muldivuEmmmRm>
 80168ce:	9b01      	ldr	r3, [sp, #4]
 80168d0:	4368      	muls	r0, r5
 80168d2:	435c      	muls	r4, r3
 80168d4:	6034      	str	r4, [r6, #0]
 80168d6:	b002      	add	sp, #8
 80168d8:	bd70      	pop	{r4, r5, r6, pc}

080168da <_ZN8touchgfx6muldivElll>:
 80168da:	b573      	push	{r0, r1, r4, r5, r6, lr}
 80168dc:	4606      	mov	r6, r0
 80168de:	ab01      	add	r3, sp, #4
 80168e0:	460d      	mov	r5, r1
 80168e2:	4614      	mov	r4, r2
 80168e4:	f7ff ffda 	bl	801689c <_ZN8touchgfx6muldivElllRl>
 80168e8:	2e00      	cmp	r6, #0
 80168ea:	db20      	blt.n	801692e <_ZN8touchgfx6muldivElll+0x54>
 80168ec:	bf14      	ite	ne
 80168ee:	2301      	movne	r3, #1
 80168f0:	2300      	moveq	r3, #0
 80168f2:	2d00      	cmp	r5, #0
 80168f4:	db1e      	blt.n	8016934 <_ZN8touchgfx6muldivElll+0x5a>
 80168f6:	bf14      	ite	ne
 80168f8:	2201      	movne	r2, #1
 80168fa:	2200      	moveq	r2, #0
 80168fc:	2c00      	cmp	r4, #0
 80168fe:	fb03 f202 	mul.w	r2, r3, r2
 8016902:	db1a      	blt.n	801693a <_ZN8touchgfx6muldivElll+0x60>
 8016904:	bf14      	ite	ne
 8016906:	2301      	movne	r3, #1
 8016908:	2300      	moveq	r3, #0
 801690a:	4353      	muls	r3, r2
 801690c:	2b01      	cmp	r3, #1
 801690e:	d117      	bne.n	8016940 <_ZN8touchgfx6muldivElll+0x66>
 8016910:	9b01      	ldr	r3, [sp, #4]
 8016912:	2c00      	cmp	r4, #0
 8016914:	bfb8      	it	lt
 8016916:	4264      	neglt	r4, r4
 8016918:	2b00      	cmp	r3, #0
 801691a:	f104 0401 	add.w	r4, r4, #1
 801691e:	bfb8      	it	lt
 8016920:	425b      	neglt	r3, r3
 8016922:	ebb3 0f64 	cmp.w	r3, r4, asr #1
 8016926:	db00      	blt.n	801692a <_ZN8touchgfx6muldivElll+0x50>
 8016928:	3001      	adds	r0, #1
 801692a:	b002      	add	sp, #8
 801692c:	bd70      	pop	{r4, r5, r6, pc}
 801692e:	f04f 33ff 	mov.w	r3, #4294967295
 8016932:	e7de      	b.n	80168f2 <_ZN8touchgfx6muldivElll+0x18>
 8016934:	f04f 32ff 	mov.w	r2, #4294967295
 8016938:	e7e0      	b.n	80168fc <_ZN8touchgfx6muldivElll+0x22>
 801693a:	f04f 33ff 	mov.w	r3, #4294967295
 801693e:	e7e4      	b.n	801690a <_ZN8touchgfx6muldivElll+0x30>
 8016940:	3301      	adds	r3, #1
 8016942:	d1f2      	bne.n	801692a <_ZN8touchgfx6muldivElll+0x50>
 8016944:	9b01      	ldr	r3, [sp, #4]
 8016946:	2c00      	cmp	r4, #0
 8016948:	bfb8      	it	lt
 801694a:	4264      	neglt	r4, r4
 801694c:	2b00      	cmp	r3, #0
 801694e:	bfb8      	it	lt
 8016950:	425b      	neglt	r3, r3
 8016952:	ebb3 0f64 	cmp.w	r3, r4, asr #1
 8016956:	bfc8      	it	gt
 8016958:	f100 30ff 	addgt.w	r0, r0, #4294967295
 801695c:	e7e5      	b.n	801692a <_ZN8touchgfx6muldivElll+0x50>

0801695e <_ZNK8touchgfx10ClickEvent12getEventTypeEv>:
 801695e:	2000      	movs	r0, #0
 8016960:	4770      	bx	lr

08016962 <_ZNK8touchgfx9DragEvent12getEventTypeEv>:
 8016962:	2001      	movs	r0, #1
 8016964:	4770      	bx	lr

08016966 <_ZNK8touchgfx12GestureEvent12getEventTypeEv>:
 8016966:	2002      	movs	r0, #2
 8016968:	4770      	bx	lr

0801696a <_ZN8touchgfx6ScreenD1Ev>:
 801696a:	4770      	bx	lr

0801696c <_ZN8touchgfx12GestureEventD1Ev>:
 801696c:	4770      	bx	lr

0801696e <_ZN8touchgfx9DragEventD1Ev>:
 801696e:	4770      	bx	lr

08016970 <_ZN8touchgfx10ClickEventD1Ev>:
 8016970:	4770      	bx	lr

08016972 <_ZN8touchgfx10ClickEventD0Ev>:
 8016972:	b510      	push	{r4, lr}
 8016974:	210c      	movs	r1, #12
 8016976:	4604      	mov	r4, r0
 8016978:	f012 fd51 	bl	802941e <_ZdlPvj>
 801697c:	4620      	mov	r0, r4
 801697e:	bd10      	pop	{r4, pc}

08016980 <_ZN8touchgfx9DragEventD0Ev>:
 8016980:	b510      	push	{r4, lr}
 8016982:	2110      	movs	r1, #16
 8016984:	4604      	mov	r4, r0
 8016986:	f012 fd4a 	bl	802941e <_ZdlPvj>
 801698a:	4620      	mov	r0, r4
 801698c:	bd10      	pop	{r4, pc}

0801698e <_ZN8touchgfx12GestureEventD0Ev>:
 801698e:	b510      	push	{r4, lr}
 8016990:	210c      	movs	r1, #12
 8016992:	4604      	mov	r4, r0
 8016994:	f012 fd43 	bl	802941e <_ZdlPvj>
 8016998:	4620      	mov	r0, r4
 801699a:	bd10      	pop	{r4, pc}

0801699c <_ZN8touchgfx6ScreenD0Ev>:
 801699c:	b510      	push	{r4, lr}
 801699e:	213c      	movs	r1, #60	; 0x3c
 80169a0:	4604      	mov	r4, r0
 80169a2:	f012 fd3c 	bl	802941e <_ZdlPvj>
 80169a6:	4620      	mov	r0, r4
 80169a8:	bd10      	pop	{r4, pc}
	...

080169ac <_ZN8touchgfx6Screen18handleGestureEventERKNS_12GestureEventE>:
 80169ac:	b530      	push	{r4, r5, lr}
 80169ae:	460d      	mov	r5, r1
 80169b0:	6b01      	ldr	r1, [r0, #48]	; 0x30
 80169b2:	b087      	sub	sp, #28
 80169b4:	4604      	mov	r4, r0
 80169b6:	b301      	cbz	r1, 80169fa <_ZN8touchgfx6Screen18handleGestureEventERKNS_12GestureEventE+0x4e>
 80169b8:	a801      	add	r0, sp, #4
 80169ba:	f7ff fe3d 	bl	8016638 <_ZNK8touchgfx8Drawable15getAbsoluteRectEv>
 80169be:	892a      	ldrh	r2, [r5, #8]
 80169c0:	f8bd 3004 	ldrh.w	r3, [sp, #4]
 80169c4:	7928      	ldrb	r0, [r5, #4]
 80169c6:	f9b5 1006 	ldrsh.w	r1, [r5, #6]
 80169ca:	f88d 0010 	strb.w	r0, [sp, #16]
 80169ce:	1ad2      	subs	r2, r2, r3
 80169d0:	8ea3      	ldrh	r3, [r4, #52]	; 0x34
 80169d2:	6b20      	ldr	r0, [r4, #48]	; 0x30
 80169d4:	f8ad 1012 	strh.w	r1, [sp, #18]
 80169d8:	441a      	add	r2, r3
 80169da:	896b      	ldrh	r3, [r5, #10]
 80169dc:	f8bd 5006 	ldrh.w	r5, [sp, #6]
 80169e0:	f8ad 2014 	strh.w	r2, [sp, #20]
 80169e4:	1b5b      	subs	r3, r3, r5
 80169e6:	8ee5      	ldrh	r5, [r4, #54]	; 0x36
 80169e8:	442b      	add	r3, r5
 80169ea:	4d05      	ldr	r5, [pc, #20]	; (8016a00 <_ZN8touchgfx6Screen18handleGestureEventERKNS_12GestureEventE+0x54>)
 80169ec:	9503      	str	r5, [sp, #12]
 80169ee:	f8ad 3016 	strh.w	r3, [sp, #22]
 80169f2:	6803      	ldr	r3, [r0, #0]
 80169f4:	a903      	add	r1, sp, #12
 80169f6:	6c9b      	ldr	r3, [r3, #72]	; 0x48
 80169f8:	4798      	blx	r3
 80169fa:	b007      	add	sp, #28
 80169fc:	bd30      	pop	{r4, r5, pc}
 80169fe:	bf00      	nop
 8016a00:	0802e93c 	.word	0x0802e93c

08016a04 <_ZN8touchgfx6Screen16handleClickEventERKNS_10ClickEventE>:
 8016a04:	e92d 41f0 	stmdb	sp!, {r4, r5, r6, r7, r8, lr}
 8016a08:	6b03      	ldr	r3, [r0, #48]	; 0x30
 8016a0a:	b08a      	sub	sp, #40	; 0x28
 8016a0c:	4604      	mov	r4, r0
 8016a0e:	460d      	mov	r5, r1
 8016a10:	b113      	cbz	r3, 8016a18 <_ZN8touchgfx6Screen16handleClickEventERKNS_10ClickEventE+0x14>
 8016a12:	790b      	ldrb	r3, [r1, #4]
 8016a14:	2b00      	cmp	r3, #0
 8016a16:	d044      	beq.n	8016aa2 <_ZN8touchgfx6Screen16handleClickEventERKNS_10ClickEventE+0x9e>
 8016a18:	f104 0804 	add.w	r8, r4, #4
 8016a1c:	4641      	mov	r1, r8
 8016a1e:	a803      	add	r0, sp, #12
 8016a20:	f7ff fe0a 	bl	8016638 <_ZNK8touchgfx8Drawable15getAbsoluteRectEv>
 8016a24:	792b      	ldrb	r3, [r5, #4]
 8016a26:	f9bd 700c 	ldrsh.w	r7, [sp, #12]
 8016a2a:	f9bd 600e 	ldrsh.w	r6, [sp, #14]
 8016a2e:	b983      	cbnz	r3, 8016a52 <_ZN8touchgfx6Screen16handleClickEventERKNS_10ClickEventE+0x4e>
 8016a30:	892a      	ldrh	r2, [r5, #8]
 8016a32:	88e9      	ldrh	r1, [r5, #6]
 8016a34:	f104 0336 	add.w	r3, r4, #54	; 0x36
 8016a38:	1b92      	subs	r2, r2, r6
 8016a3a:	1bc9      	subs	r1, r1, r7
 8016a3c:	9301      	str	r3, [sp, #4]
 8016a3e:	f104 0334 	add.w	r3, r4, #52	; 0x34
 8016a42:	9300      	str	r3, [sp, #0]
 8016a44:	b212      	sxth	r2, r2
 8016a46:	f104 0330 	add.w	r3, r4, #48	; 0x30
 8016a4a:	b209      	sxth	r1, r1
 8016a4c:	4640      	mov	r0, r8
 8016a4e:	f7f9 fa79 	bl	800ff44 <_ZN8touchgfx9Container16getLastChildNearEssPPNS_8DrawableEPsS4_>
 8016a52:	6b21      	ldr	r1, [r4, #48]	; 0x30
 8016a54:	b329      	cbz	r1, 8016aa2 <_ZN8touchgfx6Screen16handleClickEventERKNS_10ClickEventE+0x9e>
 8016a56:	a805      	add	r0, sp, #20
 8016a58:	f7ff fdee 	bl	8016638 <_ZNK8touchgfx8Drawable15getAbsoluteRectEv>
 8016a5c:	f8bd 2014 	ldrh.w	r2, [sp, #20]
 8016a60:	792b      	ldrb	r3, [r5, #4]
 8016a62:	6b20      	ldr	r0, [r4, #48]	; 0x30
 8016a64:	f88d 3020 	strb.w	r3, [sp, #32]
 8016a68:	1abf      	subs	r7, r7, r2
 8016a6a:	88ea      	ldrh	r2, [r5, #6]
 8016a6c:	4417      	add	r7, r2
 8016a6e:	8ea2      	ldrh	r2, [r4, #52]	; 0x34
 8016a70:	4417      	add	r7, r2
 8016a72:	f8bd 2016 	ldrh.w	r2, [sp, #22]
 8016a76:	f8ad 7022 	strh.w	r7, [sp, #34]	; 0x22
 8016a7a:	1ab6      	subs	r6, r6, r2
 8016a7c:	892a      	ldrh	r2, [r5, #8]
 8016a7e:	4416      	add	r6, r2
 8016a80:	8ee2      	ldrh	r2, [r4, #54]	; 0x36
 8016a82:	4416      	add	r6, r2
 8016a84:	f8ad 6024 	strh.w	r6, [sp, #36]	; 0x24
 8016a88:	4a07      	ldr	r2, [pc, #28]	; (8016aa8 <_ZN8touchgfx6Screen16handleClickEventERKNS_10ClickEventE+0xa4>)
 8016a8a:	9207      	str	r2, [sp, #28]
 8016a8c:	2600      	movs	r6, #0
 8016a8e:	f8ad 6026 	strh.w	r6, [sp, #38]	; 0x26
 8016a92:	6803      	ldr	r3, [r0, #0]
 8016a94:	a907      	add	r1, sp, #28
 8016a96:	6c5b      	ldr	r3, [r3, #68]	; 0x44
 8016a98:	4798      	blx	r3
 8016a9a:	792b      	ldrb	r3, [r5, #4]
 8016a9c:	b10b      	cbz	r3, 8016aa2 <_ZN8touchgfx6Screen16handleClickEventERKNS_10ClickEventE+0x9e>
 8016a9e:	e9c4 660c 	strd	r6, r6, [r4, #48]	; 0x30
 8016aa2:	b00a      	add	sp, #40	; 0x28
 8016aa4:	e8bd 81f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, pc}
 8016aa8:	0802e914 	.word	0x0802e914

08016aac <_ZN8touchgfx6Screen15handleDragEventERKNS_9DragEventE>:
 8016aac:	e92d 41f0 	stmdb	sp!, {r4, r5, r6, r7, r8, lr}
 8016ab0:	460c      	mov	r4, r1
 8016ab2:	6b01      	ldr	r1, [r0, #48]	; 0x30
 8016ab4:	b088      	sub	sp, #32
 8016ab6:	4605      	mov	r5, r0
 8016ab8:	2900      	cmp	r1, #0
 8016aba:	d06d      	beq.n	8016b98 <_ZN8touchgfx6Screen15handleDragEventERKNS_9DragEventE+0xec>
 8016abc:	4668      	mov	r0, sp
 8016abe:	f7ff fdbb 	bl	8016638 <_ZNK8touchgfx8Drawable15getAbsoluteRectEv>
 8016ac2:	8ea9      	ldrh	r1, [r5, #52]	; 0x34
 8016ac4:	88e3      	ldrh	r3, [r4, #6]
 8016ac6:	f9bd 8000 	ldrsh.w	r8, [sp]
 8016aca:	f9bd 7002 	ldrsh.w	r7, [sp, #2]
 8016ace:	440b      	add	r3, r1
 8016ad0:	b21b      	sxth	r3, r3
 8016ad2:	4543      	cmp	r3, r8
 8016ad4:	db31      	blt.n	8016b3a <_ZN8touchgfx6Screen15handleDragEventERKNS_9DragEventE+0x8e>
 8016ad6:	f8bd c004 	ldrh.w	ip, [sp, #4]
 8016ada:	44c4      	add	ip, r8
 8016adc:	fa0f fc8c 	sxth.w	ip, ip
 8016ae0:	4563      	cmp	r3, ip
 8016ae2:	da2a      	bge.n	8016b3a <_ZN8touchgfx6Screen15handleDragEventERKNS_9DragEventE+0x8e>
 8016ae4:	8eea      	ldrh	r2, [r5, #54]	; 0x36
 8016ae6:	8926      	ldrh	r6, [r4, #8]
 8016ae8:	4416      	add	r6, r2
 8016aea:	b236      	sxth	r6, r6
 8016aec:	42be      	cmp	r6, r7
 8016aee:	db24      	blt.n	8016b3a <_ZN8touchgfx6Screen15handleDragEventERKNS_9DragEventE+0x8e>
 8016af0:	f8bd 0006 	ldrh.w	r0, [sp, #6]
 8016af4:	4438      	add	r0, r7
 8016af6:	b200      	sxth	r0, r0
 8016af8:	4286      	cmp	r6, r0
 8016afa:	da1e      	bge.n	8016b3a <_ZN8touchgfx6Screen15handleDragEventERKNS_9DragEventE+0x8e>
 8016afc:	8963      	ldrh	r3, [r4, #10]
 8016afe:	4419      	add	r1, r3
 8016b00:	b209      	sxth	r1, r1
 8016b02:	4541      	cmp	r1, r8
 8016b04:	db08      	blt.n	8016b18 <_ZN8touchgfx6Screen15handleDragEventERKNS_9DragEventE+0x6c>
 8016b06:	4561      	cmp	r1, ip
 8016b08:	da06      	bge.n	8016b18 <_ZN8touchgfx6Screen15handleDragEventERKNS_9DragEventE+0x6c>
 8016b0a:	89a3      	ldrh	r3, [r4, #12]
 8016b0c:	441a      	add	r2, r3
 8016b0e:	b212      	sxth	r2, r2
 8016b10:	42ba      	cmp	r2, r7
 8016b12:	db01      	blt.n	8016b18 <_ZN8touchgfx6Screen15handleDragEventERKNS_9DragEventE+0x6c>
 8016b14:	4282      	cmp	r2, r0
 8016b16:	db10      	blt.n	8016b3a <_ZN8touchgfx6Screen15handleDragEventERKNS_9DragEventE+0x8e>
 8016b18:	4b21      	ldr	r3, [pc, #132]	; (8016ba0 <_ZN8touchgfx6Screen15handleDragEventERKNS_9DragEventE+0xf4>)
 8016b1a:	9304      	str	r3, [sp, #16]
 8016b1c:	2302      	movs	r3, #2
 8016b1e:	f88d 3014 	strb.w	r3, [sp, #20]
 8016b22:	6b28      	ldr	r0, [r5, #48]	; 0x30
 8016b24:	2300      	movs	r3, #0
 8016b26:	f8ad 3016 	strh.w	r3, [sp, #22]
 8016b2a:	f8ad 3018 	strh.w	r3, [sp, #24]
 8016b2e:	f8ad 301a 	strh.w	r3, [sp, #26]
 8016b32:	6803      	ldr	r3, [r0, #0]
 8016b34:	a904      	add	r1, sp, #16
 8016b36:	6c5b      	ldr	r3, [r3, #68]	; 0x44
 8016b38:	4798      	blx	r3
 8016b3a:	1d29      	adds	r1, r5, #4
 8016b3c:	a802      	add	r0, sp, #8
 8016b3e:	f7ff fd7b 	bl	8016638 <_ZNK8touchgfx8Drawable15getAbsoluteRectEv>
 8016b42:	f8bd 3008 	ldrh.w	r3, [sp, #8]
 8016b46:	88e0      	ldrh	r0, [r4, #6]
 8016b48:	7921      	ldrb	r1, [r4, #4]
 8016b4a:	f8b5 c034 	ldrh.w	ip, [r5, #52]	; 0x34
 8016b4e:	8922      	ldrh	r2, [r4, #8]
 8016b50:	8eee      	ldrh	r6, [r5, #54]	; 0x36
 8016b52:	f88d 1014 	strb.w	r1, [sp, #20]
 8016b56:	eba3 0808 	sub.w	r8, r3, r8
 8016b5a:	f8bd 300a 	ldrh.w	r3, [sp, #10]
 8016b5e:	1bdf      	subs	r7, r3, r7
 8016b60:	b2bb      	uxth	r3, r7
 8016b62:	fa1f f888 	uxth.w	r8, r8
 8016b66:	8967      	ldrh	r7, [r4, #10]
 8016b68:	89a4      	ldrh	r4, [r4, #12]
 8016b6a:	4440      	add	r0, r8
 8016b6c:	4460      	add	r0, ip
 8016b6e:	441a      	add	r2, r3
 8016b70:	44b8      	add	r8, r7
 8016b72:	4423      	add	r3, r4
 8016b74:	f8ad 0016 	strh.w	r0, [sp, #22]
 8016b78:	4433      	add	r3, r6
 8016b7a:	4432      	add	r2, r6
 8016b7c:	44e0      	add	r8, ip
 8016b7e:	4c09      	ldr	r4, [pc, #36]	; (8016ba4 <_ZN8touchgfx6Screen15handleDragEventERKNS_9DragEventE+0xf8>)
 8016b80:	6b28      	ldr	r0, [r5, #48]	; 0x30
 8016b82:	9404      	str	r4, [sp, #16]
 8016b84:	f8ad 2018 	strh.w	r2, [sp, #24]
 8016b88:	f8ad 801a 	strh.w	r8, [sp, #26]
 8016b8c:	f8ad 301c 	strh.w	r3, [sp, #28]
 8016b90:	6803      	ldr	r3, [r0, #0]
 8016b92:	a904      	add	r1, sp, #16
 8016b94:	6cdb      	ldr	r3, [r3, #76]	; 0x4c
 8016b96:	4798      	blx	r3
 8016b98:	b008      	add	sp, #32
 8016b9a:	e8bd 81f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, pc}
 8016b9e:	bf00      	nop
 8016ba0:	0802e914 	.word	0x0802e914
 8016ba4:	0802e928 	.word	0x0802e928

08016ba8 <_ZN8touchgfx8Drawable20getCachedVisibleRectEv>:
 8016ba8:	b537      	push	{r0, r1, r2, r4, r5, lr}
 8016baa:	4604      	mov	r4, r0
 8016bac:	f934 2f0c 	ldrsh.w	r2, [r4, #12]!
 8016bb0:	3201      	adds	r2, #1
 8016bb2:	d112      	bne.n	8016bda <_ZN8touchgfx8Drawable20getCachedVisibleRectEv+0x32>
 8016bb4:	6803      	ldr	r3, [r0, #0]
 8016bb6:	f9b0 1008 	ldrsh.w	r1, [r0, #8]
 8016bba:	f9b0 200a 	ldrsh.w	r2, [r0, #10]
 8016bbe:	f8ad 1004 	strh.w	r1, [sp, #4]
 8016bc2:	2500      	movs	r5, #0
 8016bc4:	9500      	str	r5, [sp, #0]
 8016bc6:	466d      	mov	r5, sp
 8016bc8:	4629      	mov	r1, r5
 8016bca:	f8ad 2006 	strh.w	r2, [sp, #6]
 8016bce:	6a9b      	ldr	r3, [r3, #40]	; 0x28
 8016bd0:	4798      	blx	r3
 8016bd2:	e895 0003 	ldmia.w	r5, {r0, r1}
 8016bd6:	e884 0003 	stmia.w	r4, {r0, r1}
 8016bda:	4620      	mov	r0, r4
 8016bdc:	b003      	add	sp, #12
 8016bde:	bd30      	pop	{r4, r5, pc}

08016be0 <_ZN8touchgfx8Drawable13getCachedAbsXEv>:
 8016be0:	b513      	push	{r0, r1, r4, lr}
 8016be2:	f9b0 3020 	ldrsh.w	r3, [r0, #32]
 8016be6:	3301      	adds	r3, #1
 8016be8:	4604      	mov	r4, r0
 8016bea:	d109      	bne.n	8016c00 <_ZN8touchgfx8Drawable13getCachedAbsXEv+0x20>
 8016bec:	4601      	mov	r1, r0
 8016bee:	4668      	mov	r0, sp
 8016bf0:	f7ff fd22 	bl	8016638 <_ZNK8touchgfx8Drawable15getAbsoluteRectEv>
 8016bf4:	f8bd 3000 	ldrh.w	r3, [sp]
 8016bf8:	8423      	strh	r3, [r4, #32]
 8016bfa:	f8bd 3002 	ldrh.w	r3, [sp, #2]
 8016bfe:	8463      	strh	r3, [r4, #34]	; 0x22
 8016c00:	f9b4 0020 	ldrsh.w	r0, [r4, #32]
 8016c04:	b002      	add	sp, #8
 8016c06:	bd10      	pop	{r4, pc}

08016c08 <_ZN8touchgfx8Drawable13getCachedAbsYEv>:
 8016c08:	b513      	push	{r0, r1, r4, lr}
 8016c0a:	f9b0 3022 	ldrsh.w	r3, [r0, #34]	; 0x22
 8016c0e:	3301      	adds	r3, #1
 8016c10:	4604      	mov	r4, r0
 8016c12:	d109      	bne.n	8016c28 <_ZN8touchgfx8Drawable13getCachedAbsYEv+0x20>
 8016c14:	4601      	mov	r1, r0
 8016c16:	4668      	mov	r0, sp
 8016c18:	f7ff fd0e 	bl	8016638 <_ZNK8touchgfx8Drawable15getAbsoluteRectEv>
 8016c1c:	f8bd 3000 	ldrh.w	r3, [sp]
 8016c20:	8423      	strh	r3, [r4, #32]
 8016c22:	f8bd 3002 	ldrh.w	r3, [sp, #2]
 8016c26:	8463      	strh	r3, [r4, #34]	; 0x22
 8016c28:	f9b4 0022 	ldrsh.w	r0, [r4, #34]	; 0x22
 8016c2c:	b002      	add	sp, #8
 8016c2e:	bd10      	pop	{r4, pc}

08016c30 <_ZN8touchgfx6ScreenC1Ev>:
 8016c30:	b570      	push	{r4, r5, r6, lr}
 8016c32:	4605      	mov	r5, r0
 8016c34:	4b16      	ldr	r3, [pc, #88]	; (8016c90 <_ZN8touchgfx6ScreenC1Ev+0x60>)
 8016c36:	f845 3b04 	str.w	r3, [r5], #4
 8016c3a:	2300      	movs	r3, #0
 8016c3c:	8103      	strh	r3, [r0, #8]
 8016c3e:	8143      	strh	r3, [r0, #10]
 8016c40:	8183      	strh	r3, [r0, #12]
 8016c42:	81c3      	strh	r3, [r0, #14]
 8016c44:	8203      	strh	r3, [r0, #16]
 8016c46:	8243      	strh	r3, [r0, #18]
 8016c48:	8283      	strh	r3, [r0, #20]
 8016c4a:	82c3      	strh	r3, [r0, #22]
 8016c4c:	e9c0 3306 	strd	r3, r3, [r0, #24]
 8016c50:	6203      	str	r3, [r0, #32]
 8016c52:	8483      	strh	r3, [r0, #36]	; 0x24
 8016c54:	84c3      	strh	r3, [r0, #38]	; 0x26
 8016c56:	f880 3028 	strb.w	r3, [r0, #40]	; 0x28
 8016c5a:	4a0e      	ldr	r2, [pc, #56]	; (8016c94 <_ZN8touchgfx6ScreenC1Ev+0x64>)
 8016c5c:	6343      	str	r3, [r0, #52]	; 0x34
 8016c5e:	e9c0 330b 	strd	r3, r3, [r0, #44]	; 0x2c
 8016c62:	4b0d      	ldr	r3, [pc, #52]	; (8016c98 <_ZN8touchgfx6ScreenC1Ev+0x68>)
 8016c64:	6042      	str	r2, [r0, #4]
 8016c66:	f9b3 6000 	ldrsh.w	r6, [r3]
 8016c6a:	6b93      	ldr	r3, [r2, #56]	; 0x38
 8016c6c:	4a0b      	ldr	r2, [pc, #44]	; (8016c9c <_ZN8touchgfx6ScreenC1Ev+0x6c>)
 8016c6e:	4604      	mov	r4, r0
 8016c70:	2101      	movs	r1, #1
 8016c72:	f880 1029 	strb.w	r1, [r0, #41]	; 0x29
 8016c76:	f880 1038 	strb.w	r1, [r0, #56]	; 0x38
 8016c7a:	f9b2 1000 	ldrsh.w	r1, [r2]
 8016c7e:	4628      	mov	r0, r5
 8016c80:	4798      	blx	r3
 8016c82:	6863      	ldr	r3, [r4, #4]
 8016c84:	4628      	mov	r0, r5
 8016c86:	6bdb      	ldr	r3, [r3, #60]	; 0x3c
 8016c88:	4631      	mov	r1, r6
 8016c8a:	4798      	blx	r3
 8016c8c:	4620      	mov	r0, r4
 8016c8e:	bd70      	pop	{r4, r5, r6, pc}
 8016c90:	0802e950 	.word	0x0802e950
 8016c94:	0802e1b4 	.word	0x0802e1b4
 8016c98:	20012f1a 	.word	0x20012f1a
 8016c9c:	20012f18 	.word	0x20012f18

08016ca0 <_ZN8touchgfx6Screen4drawEv>:
 8016ca0:	b507      	push	{r0, r1, r2, lr}
 8016ca2:	4b09      	ldr	r3, [pc, #36]	; (8016cc8 <_ZN8touchgfx6Screen4drawEv+0x28>)
 8016ca4:	f9b3 2000 	ldrsh.w	r2, [r3]
 8016ca8:	4b08      	ldr	r3, [pc, #32]	; (8016ccc <_ZN8touchgfx6Screen4drawEv+0x2c>)
 8016caa:	f8ad 2004 	strh.w	r2, [sp, #4]
 8016cae:	f9b3 3000 	ldrsh.w	r3, [r3]
 8016cb2:	f8ad 3006 	strh.w	r3, [sp, #6]
 8016cb6:	6803      	ldr	r3, [r0, #0]
 8016cb8:	2100      	movs	r1, #0
 8016cba:	9100      	str	r1, [sp, #0]
 8016cbc:	689b      	ldr	r3, [r3, #8]
 8016cbe:	4669      	mov	r1, sp
 8016cc0:	4798      	blx	r3
 8016cc2:	b003      	add	sp, #12
 8016cc4:	f85d fb04 	ldr.w	pc, [sp], #4
 8016cc8:	20012f18 	.word	0x20012f18
 8016ccc:	20012f1a 	.word	0x20012f1a

08016cd0 <_ZN8touchgfx6Screen5JSMOCERKNS_4RectEPNS_8DrawableE>:
 8016cd0:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 8016cd4:	f9b1 3004 	ldrsh.w	r3, [r1, #4]
 8016cd8:	2b00      	cmp	r3, #0
 8016cda:	b089      	sub	sp, #36	; 0x24
 8016cdc:	4680      	mov	r8, r0
 8016cde:	460c      	mov	r4, r1
 8016ce0:	4615      	mov	r5, r2
 8016ce2:	dd0e      	ble.n	8016d02 <_ZN8touchgfx6Screen5JSMOCERKNS_4RectEPNS_8DrawableE+0x32>
 8016ce4:	f9b1 3006 	ldrsh.w	r3, [r1, #6]
 8016ce8:	2b00      	cmp	r3, #0
 8016cea:	dd0a      	ble.n	8016d02 <_ZN8touchgfx6Screen5JSMOCERKNS_4RectEPNS_8DrawableE+0x32>
 8016cec:	4628      	mov	r0, r5
 8016cee:	f7ff ff5b 	bl	8016ba8 <_ZN8touchgfx8Drawable20getCachedVisibleRectEv>
 8016cf2:	4621      	mov	r1, r4
 8016cf4:	f7fe fa3d 	bl	8015172 <_ZNK8touchgfx4Rect9intersectERKS0_>
 8016cf8:	69eb      	ldr	r3, [r5, #28]
 8016cfa:	b928      	cbnz	r0, 8016d08 <_ZN8touchgfx6Screen5JSMOCERKNS_4RectEPNS_8DrawableE+0x38>
 8016cfc:	461d      	mov	r5, r3
 8016cfe:	2b00      	cmp	r3, #0
 8016d00:	d1f4      	bne.n	8016cec <_ZN8touchgfx6Screen5JSMOCERKNS_4RectEPNS_8DrawableE+0x1c>
 8016d02:	b009      	add	sp, #36	; 0x24
 8016d04:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
 8016d08:	ae04      	add	r6, sp, #16
 8016d0a:	2b00      	cmp	r3, #0
 8016d0c:	f000 80b5 	beq.w	8016e7a <_ZN8touchgfx6Screen5JSMOCERKNS_4RectEPNS_8DrawableE+0x1aa>
 8016d10:	682b      	ldr	r3, [r5, #0]
 8016d12:	4629      	mov	r1, r5
 8016d14:	68db      	ldr	r3, [r3, #12]
 8016d16:	a802      	add	r0, sp, #8
 8016d18:	4798      	blx	r3
 8016d1a:	4628      	mov	r0, r5
 8016d1c:	f7ff ff60 	bl	8016be0 <_ZN8touchgfx8Drawable13getCachedAbsXEv>
 8016d20:	f8bd 7008 	ldrh.w	r7, [sp, #8]
 8016d24:	4407      	add	r7, r0
 8016d26:	4628      	mov	r0, r5
 8016d28:	f7ff ff6e 	bl	8016c08 <_ZN8touchgfx8Drawable13getCachedAbsYEv>
 8016d2c:	f8bd 300a 	ldrh.w	r3, [sp, #10]
 8016d30:	f9bd 200c 	ldrsh.w	r2, [sp, #12]
 8016d34:	f8ad 2014 	strh.w	r2, [sp, #20]
 8016d38:	4418      	add	r0, r3
 8016d3a:	4621      	mov	r1, r4
 8016d3c:	f9bd 300e 	ldrsh.w	r3, [sp, #14]
 8016d40:	f8ad 0012 	strh.w	r0, [sp, #18]
 8016d44:	b23f      	sxth	r7, r7
 8016d46:	4630      	mov	r0, r6
 8016d48:	f8ad 3016 	strh.w	r3, [sp, #22]
 8016d4c:	f8ad 7010 	strh.w	r7, [sp, #16]
 8016d50:	f7f9 f9dc 	bl	801010c <_ZN8touchgfx4RectaNERKS0_>
 8016d54:	4628      	mov	r0, r5
 8016d56:	f7ff ff27 	bl	8016ba8 <_ZN8touchgfx8Drawable20getCachedVisibleRectEv>
 8016d5a:	4602      	mov	r2, r0
 8016d5c:	e896 0003 	ldmia.w	r6, {r0, r1}
 8016d60:	ab06      	add	r3, sp, #24
 8016d62:	e883 0003 	stmia.w	r3, {r0, r1}
 8016d66:	4611      	mov	r1, r2
 8016d68:	4618      	mov	r0, r3
 8016d6a:	f7f9 f9cf 	bl	801010c <_ZN8touchgfx4RectaNERKS0_>
 8016d6e:	f9bd 3018 	ldrsh.w	r3, [sp, #24]
 8016d72:	f9b4 1000 	ldrsh.w	r1, [r4]
 8016d76:	f9bd a01a 	ldrsh.w	sl, [sp, #26]
 8016d7a:	f9bd b01c 	ldrsh.w	fp, [sp, #28]
 8016d7e:	f9bd 901e 	ldrsh.w	r9, [sp, #30]
 8016d82:	4299      	cmp	r1, r3
 8016d84:	d10b      	bne.n	8016d9e <_ZN8touchgfx6Screen5JSMOCERKNS_4RectEPNS_8DrawableE+0xce>
 8016d86:	f9b4 2002 	ldrsh.w	r2, [r4, #2]
 8016d8a:	4552      	cmp	r2, sl
 8016d8c:	d107      	bne.n	8016d9e <_ZN8touchgfx6Screen5JSMOCERKNS_4RectEPNS_8DrawableE+0xce>
 8016d8e:	f9b4 2004 	ldrsh.w	r2, [r4, #4]
 8016d92:	455a      	cmp	r2, fp
 8016d94:	d103      	bne.n	8016d9e <_ZN8touchgfx6Screen5JSMOCERKNS_4RectEPNS_8DrawableE+0xce>
 8016d96:	f9b4 2006 	ldrsh.w	r2, [r4, #6]
 8016d9a:	454a      	cmp	r2, r9
 8016d9c:	d06d      	beq.n	8016e7a <_ZN8touchgfx6Screen5JSMOCERKNS_4RectEPNS_8DrawableE+0x1aa>
 8016d9e:	f1bb 0f00 	cmp.w	fp, #0
 8016da2:	dd65      	ble.n	8016e70 <_ZN8touchgfx6Screen5JSMOCERKNS_4RectEPNS_8DrawableE+0x1a0>
 8016da4:	f1b9 0f00 	cmp.w	r9, #0
 8016da8:	dd62      	ble.n	8016e70 <_ZN8touchgfx6Screen5JSMOCERKNS_4RectEPNS_8DrawableE+0x1a0>
 8016daa:	f9b4 2002 	ldrsh.w	r2, [r4, #2]
 8016dae:	fa1f f08a 	uxth.w	r0, sl
 8016db2:	4552      	cmp	r2, sl
 8016db4:	9000      	str	r0, [sp, #0]
 8016db6:	da12      	bge.n	8016dde <_ZN8touchgfx6Screen5JSMOCERKNS_4RectEPNS_8DrawableE+0x10e>
 8016db8:	9301      	str	r3, [sp, #4]
 8016dba:	9b00      	ldr	r3, [sp, #0]
 8016dbc:	f9b4 0004 	ldrsh.w	r0, [r4, #4]
 8016dc0:	f8ad 2012 	strh.w	r2, [sp, #18]
 8016dc4:	1a9a      	subs	r2, r3, r2
 8016dc6:	f8ad 1010 	strh.w	r1, [sp, #16]
 8016dca:	f8ad 0014 	strh.w	r0, [sp, #20]
 8016dce:	f8ad 2016 	strh.w	r2, [sp, #22]
 8016dd2:	69ea      	ldr	r2, [r5, #28]
 8016dd4:	4631      	mov	r1, r6
 8016dd6:	4640      	mov	r0, r8
 8016dd8:	f7ff ff7a 	bl	8016cd0 <_ZN8touchgfx6Screen5JSMOCERKNS_4RectEPNS_8DrawableE>
 8016ddc:	9b01      	ldr	r3, [sp, #4]
 8016dde:	f9b4 2000 	ldrsh.w	r2, [r4]
 8016de2:	429a      	cmp	r2, r3
 8016de4:	b29f      	uxth	r7, r3
 8016de6:	da0d      	bge.n	8016e04 <_ZN8touchgfx6Screen5JSMOCERKNS_4RectEPNS_8DrawableE+0x134>
 8016de8:	f8ad 2010 	strh.w	r2, [sp, #16]
 8016dec:	1aba      	subs	r2, r7, r2
 8016dee:	f8ad a012 	strh.w	sl, [sp, #18]
 8016df2:	f8ad 2014 	strh.w	r2, [sp, #20]
 8016df6:	f8ad 9016 	strh.w	r9, [sp, #22]
 8016dfa:	69ea      	ldr	r2, [r5, #28]
 8016dfc:	4631      	mov	r1, r6
 8016dfe:	4640      	mov	r0, r8
 8016e00:	f7ff ff66 	bl	8016cd0 <_ZN8touchgfx6Screen5JSMOCERKNS_4RectEPNS_8DrawableE>
 8016e04:	8822      	ldrh	r2, [r4, #0]
 8016e06:	88a3      	ldrh	r3, [r4, #4]
 8016e08:	445f      	add	r7, fp
 8016e0a:	4413      	add	r3, r2
 8016e0c:	b29b      	uxth	r3, r3
 8016e0e:	b2bf      	uxth	r7, r7
 8016e10:	b23a      	sxth	r2, r7
 8016e12:	b219      	sxth	r1, r3
 8016e14:	4291      	cmp	r1, r2
 8016e16:	dd0d      	ble.n	8016e34 <_ZN8touchgfx6Screen5JSMOCERKNS_4RectEPNS_8DrawableE+0x164>
 8016e18:	1bdb      	subs	r3, r3, r7
 8016e1a:	f8ad 2010 	strh.w	r2, [sp, #16]
 8016e1e:	f8ad a012 	strh.w	sl, [sp, #18]
 8016e22:	f8ad 3014 	strh.w	r3, [sp, #20]
 8016e26:	f8ad 9016 	strh.w	r9, [sp, #22]
 8016e2a:	69ea      	ldr	r2, [r5, #28]
 8016e2c:	4631      	mov	r1, r6
 8016e2e:	4640      	mov	r0, r8
 8016e30:	f7ff ff4e 	bl	8016cd0 <_ZN8touchgfx6Screen5JSMOCERKNS_4RectEPNS_8DrawableE>
 8016e34:	88e2      	ldrh	r2, [r4, #6]
 8016e36:	8863      	ldrh	r3, [r4, #2]
 8016e38:	4413      	add	r3, r2
 8016e3a:	9a00      	ldr	r2, [sp, #0]
 8016e3c:	444a      	add	r2, r9
 8016e3e:	b29b      	uxth	r3, r3
 8016e40:	fa1f f982 	uxth.w	r9, r2
 8016e44:	fa0f f289 	sxth.w	r2, r9
 8016e48:	b219      	sxth	r1, r3
 8016e4a:	428a      	cmp	r2, r1
 8016e4c:	da15      	bge.n	8016e7a <_ZN8touchgfx6Screen5JSMOCERKNS_4RectEPNS_8DrawableE+0x1aa>
 8016e4e:	f9b4 1004 	ldrsh.w	r1, [r4, #4]
 8016e52:	f9b4 0000 	ldrsh.w	r0, [r4]
 8016e56:	f8ad 1014 	strh.w	r1, [sp, #20]
 8016e5a:	eba3 0309 	sub.w	r3, r3, r9
 8016e5e:	f8ad 0010 	strh.w	r0, [sp, #16]
 8016e62:	f8ad 2012 	strh.w	r2, [sp, #18]
 8016e66:	f8ad 3016 	strh.w	r3, [sp, #22]
 8016e6a:	69ea      	ldr	r2, [r5, #28]
 8016e6c:	4631      	mov	r1, r6
 8016e6e:	e001      	b.n	8016e74 <_ZN8touchgfx6Screen5JSMOCERKNS_4RectEPNS_8DrawableE+0x1a4>
 8016e70:	69ea      	ldr	r2, [r5, #28]
 8016e72:	4621      	mov	r1, r4
 8016e74:	4640      	mov	r0, r8
 8016e76:	f7ff ff2b 	bl	8016cd0 <_ZN8touchgfx6Screen5JSMOCERKNS_4RectEPNS_8DrawableE>
 8016e7a:	4628      	mov	r0, r5
 8016e7c:	f7ff fe94 	bl	8016ba8 <_ZN8touchgfx8Drawable20getCachedVisibleRectEv>
 8016e80:	6861      	ldr	r1, [r4, #4]
 8016e82:	4602      	mov	r2, r0
 8016e84:	6820      	ldr	r0, [r4, #0]
 8016e86:	4633      	mov	r3, r6
 8016e88:	c303      	stmia	r3!, {r0, r1}
 8016e8a:	4611      	mov	r1, r2
 8016e8c:	4630      	mov	r0, r6
 8016e8e:	f7f9 f93d 	bl	801010c <_ZN8touchgfx4RectaNERKS0_>
 8016e92:	f9bd 3014 	ldrsh.w	r3, [sp, #20]
 8016e96:	2b00      	cmp	r3, #0
 8016e98:	f77f af33 	ble.w	8016d02 <_ZN8touchgfx6Screen5JSMOCERKNS_4RectEPNS_8DrawableE+0x32>
 8016e9c:	f9bd 3016 	ldrsh.w	r3, [sp, #22]
 8016ea0:	2b00      	cmp	r3, #0
 8016ea2:	f77f af2e 	ble.w	8016d02 <_ZN8touchgfx6Screen5JSMOCERKNS_4RectEPNS_8DrawableE+0x32>
 8016ea6:	4628      	mov	r0, r5
 8016ea8:	f7ff fe9a 	bl	8016be0 <_ZN8touchgfx8Drawable13getCachedAbsXEv>
 8016eac:	f8bd 3010 	ldrh.w	r3, [sp, #16]
 8016eb0:	1a18      	subs	r0, r3, r0
 8016eb2:	f8ad 0010 	strh.w	r0, [sp, #16]
 8016eb6:	4628      	mov	r0, r5
 8016eb8:	f7ff fea6 	bl	8016c08 <_ZN8touchgfx8Drawable13getCachedAbsYEv>
 8016ebc:	f8bd 3012 	ldrh.w	r3, [sp, #18]
 8016ec0:	1a18      	subs	r0, r3, r0
 8016ec2:	f8ad 0012 	strh.w	r0, [sp, #18]
 8016ec6:	682b      	ldr	r3, [r5, #0]
 8016ec8:	4631      	mov	r1, r6
 8016eca:	689b      	ldr	r3, [r3, #8]
 8016ecc:	4628      	mov	r0, r5
 8016ece:	4798      	blx	r3
 8016ed0:	e717      	b.n	8016d02 <_ZN8touchgfx6Screen5JSMOCERKNS_4RectEPNS_8DrawableE+0x32>

08016ed2 <_ZN8touchgfx6Screen9startSMOCERKNS_4RectE>:
 8016ed2:	b570      	push	{r4, r5, r6, lr}
 8016ed4:	460c      	mov	r4, r1
 8016ed6:	b086      	sub	sp, #24
 8016ed8:	1d06      	adds	r6, r0, #4
 8016eda:	2300      	movs	r3, #0
 8016edc:	4631      	mov	r1, r6
 8016ede:	4605      	mov	r5, r0
 8016ee0:	a802      	add	r0, sp, #8
 8016ee2:	9301      	str	r3, [sp, #4]
 8016ee4:	f7ff fba8 	bl	8016638 <_ZNK8touchgfx8Drawable15getAbsoluteRectEv>
 8016ee8:	f8bd 3008 	ldrh.w	r3, [sp, #8]
 8016eec:	8822      	ldrh	r2, [r4, #0]
 8016eee:	f8bd 100a 	ldrh.w	r1, [sp, #10]
 8016ef2:	f9b4 0004 	ldrsh.w	r0, [r4, #4]
 8016ef6:	f8ad 0014 	strh.w	r0, [sp, #20]
 8016efa:	1ad2      	subs	r2, r2, r3
 8016efc:	8863      	ldrh	r3, [r4, #2]
 8016efe:	f8ad 2010 	strh.w	r2, [sp, #16]
 8016f02:	1a5b      	subs	r3, r3, r1
 8016f04:	f9b4 1006 	ldrsh.w	r1, [r4, #6]
 8016f08:	f8ad 1016 	strh.w	r1, [sp, #22]
 8016f0c:	aa01      	add	r2, sp, #4
 8016f0e:	a904      	add	r1, sp, #16
 8016f10:	4630      	mov	r0, r6
 8016f12:	f8ad 3012 	strh.w	r3, [sp, #18]
 8016f16:	f7f9 f9d1 	bl	80102bc <_ZN8touchgfx9Container14setupDrawChainERKNS_4RectEPPNS_8DrawableE>
 8016f1a:	9a01      	ldr	r2, [sp, #4]
 8016f1c:	b11a      	cbz	r2, 8016f26 <_ZN8touchgfx6Screen9startSMOCERKNS_4RectE+0x54>
 8016f1e:	4621      	mov	r1, r4
 8016f20:	4628      	mov	r0, r5
 8016f22:	f7ff fed5 	bl	8016cd0 <_ZN8touchgfx6Screen5JSMOCERKNS_4RectEPNS_8DrawableE>
 8016f26:	b006      	add	sp, #24
 8016f28:	bd70      	pop	{r4, r5, r6, pc}

08016f2a <_ZN8touchgfx6Screen4drawERNS_4RectE>:
 8016f2a:	b530      	push	{r4, r5, lr}
 8016f2c:	4602      	mov	r2, r0
 8016f2e:	4604      	mov	r4, r0
 8016f30:	f852 0f08 	ldr.w	r0, [r2, #8]!
 8016f34:	b085      	sub	sp, #20
 8016f36:	460d      	mov	r5, r1
 8016f38:	6851      	ldr	r1, [r2, #4]
 8016f3a:	466b      	mov	r3, sp
 8016f3c:	c303      	stmia	r3!, {r0, r1}
 8016f3e:	4629      	mov	r1, r5
 8016f40:	4668      	mov	r0, sp
 8016f42:	f7f9 f8e3 	bl	801010c <_ZN8touchgfx4RectaNERKS0_>
 8016f46:	f894 3038 	ldrb.w	r3, [r4, #56]	; 0x38
 8016f4a:	b12b      	cbz	r3, 8016f58 <_ZN8touchgfx6Screen4drawERNS_4RectE+0x2e>
 8016f4c:	4669      	mov	r1, sp
 8016f4e:	4620      	mov	r0, r4
 8016f50:	f7ff ffbf 	bl	8016ed2 <_ZN8touchgfx6Screen9startSMOCERKNS_4RectE>
 8016f54:	b005      	add	sp, #20
 8016f56:	bd30      	pop	{r4, r5, pc}
 8016f58:	3404      	adds	r4, #4
 8016f5a:	4621      	mov	r1, r4
 8016f5c:	a802      	add	r0, sp, #8
 8016f5e:	f7ff fb6b 	bl	8016638 <_ZNK8touchgfx8Drawable15getAbsoluteRectEv>
 8016f62:	f8bd 3000 	ldrh.w	r3, [sp]
 8016f66:	f8bd 2008 	ldrh.w	r2, [sp, #8]
 8016f6a:	1a9b      	subs	r3, r3, r2
 8016f6c:	f8ad 3000 	strh.w	r3, [sp]
 8016f70:	f8bd 200a 	ldrh.w	r2, [sp, #10]
 8016f74:	f8bd 3002 	ldrh.w	r3, [sp, #2]
 8016f78:	4669      	mov	r1, sp
 8016f7a:	1a9b      	subs	r3, r3, r2
 8016f7c:	4620      	mov	r0, r4
 8016f7e:	f8ad 3002 	strh.w	r3, [sp, #2]
 8016f82:	f7f9 f962 	bl	801024a <_ZNK8touchgfx9Container4drawERKNS_4RectE>
 8016f86:	e7e5      	b.n	8016f54 <_ZN8touchgfx6Screen4drawERNS_4RectE+0x2a>

08016f88 <_ZN8touchgfx6Screen14bindTransitionERNS_10TransitionE>:
 8016f88:	680a      	ldr	r2, [r1, #0]
 8016f8a:	460b      	mov	r3, r1
 8016f8c:	6992      	ldr	r2, [r2, #24]
 8016f8e:	1d01      	adds	r1, r0, #4
 8016f90:	4618      	mov	r0, r3
 8016f92:	4710      	bx	r2

08016f94 <_ZN8touchgfx15EasingEquations12cubicEaseOutEtsst>:
 8016f94:	4298      	cmp	r0, r3
 8016f96:	d200      	bcs.n	8016f9a <_ZN8touchgfx15EasingEquations12cubicEaseOutEtsst+0x6>
 8016f98:	b913      	cbnz	r3, 8016fa0 <_ZN8touchgfx15EasingEquations12cubicEaseOutEtsst+0xc>
 8016f9a:	440a      	add	r2, r1
 8016f9c:	b210      	sxth	r0, r2
 8016f9e:	4770      	bx	lr
 8016fa0:	ee07 0a90 	vmov	s15, r0
 8016fa4:	eef8 6a67 	vcvt.f32.u32	s13, s15
 8016fa8:	ee07 3a90 	vmov	s15, r3
 8016fac:	eef8 7ae7 	vcvt.f32.s32	s15, s15
 8016fb0:	ee86 7aa7 	vdiv.f32	s14, s13, s15
 8016fb4:	eef7 6a00 	vmov.f32	s13, #112	; 0x3f800000  1.0
 8016fb8:	ee37 7a66 	vsub.f32	s14, s14, s13
 8016fbc:	ee07 2a90 	vmov	s15, r2
 8016fc0:	ee67 5a07 	vmul.f32	s11, s14, s14
 8016fc4:	eeb8 6ae7 	vcvt.f32.s32	s12, s15
 8016fc8:	eee5 6a87 	vfma.f32	s13, s11, s14
 8016fcc:	ee07 1a90 	vmov	s15, r1
 8016fd0:	eef8 7ae7 	vcvt.f32.s32	s15, s15
 8016fd4:	eeb6 7a00 	vmov.f32	s14, #96	; 0x3f000000  0.5
 8016fd8:	eee6 7a26 	vfma.f32	s15, s12, s13
 8016fdc:	eef5 7ac0 	vcmpe.f32	s15, #0.0
 8016fe0:	eef1 fa10 	vmrs	APSR_nzcv, fpscr
 8016fe4:	bfcc      	ite	gt
 8016fe6:	ee77 7a87 	vaddgt.f32	s15, s15, s14
 8016fea:	ee77 7ac7 	vsuble.f32	s15, s15, s14
 8016fee:	eefd 7ae7 	vcvt.s32.f32	s15, s15
 8016ff2:	ee17 3a90 	vmov	r3, s15
 8016ff6:	b218      	sxth	r0, r3
 8016ff8:	4770      	bx	lr

08016ffa <_ZN8touchgfx15EasingEquations14linearEaseNoneEtsst>:
 8016ffa:	4298      	cmp	r0, r3
 8016ffc:	d200      	bcs.n	8017000 <_ZN8touchgfx15EasingEquations14linearEaseNoneEtsst+0x6>
 8016ffe:	b913      	cbnz	r3, 8017006 <_ZN8touchgfx15EasingEquations14linearEaseNoneEtsst+0xc>
 8017000:	440a      	add	r2, r1
 8017002:	b210      	sxth	r0, r2
 8017004:	4770      	bx	lr
 8017006:	ee07 2a90 	vmov	s15, r2
 801700a:	eeb8 7ae7 	vcvt.f32.s32	s14, s15
 801700e:	ee07 0a90 	vmov	s15, r0
 8017012:	eef8 7a67 	vcvt.f32.u32	s15, s15
 8017016:	ee67 7a27 	vmul.f32	s15, s14, s15
 801701a:	ee07 3a10 	vmov	s14, r3
 801701e:	eef8 6ac7 	vcvt.f32.s32	s13, s14
 8017022:	ee87 7aa6 	vdiv.f32	s14, s15, s13
 8017026:	ee07 1a90 	vmov	s15, r1
 801702a:	eef8 7ae7 	vcvt.f32.s32	s15, s15
 801702e:	ee77 7a27 	vadd.f32	s15, s14, s15
 8017032:	eeb6 7a00 	vmov.f32	s14, #96	; 0x3f000000  0.5
 8017036:	eef5 7ac0 	vcmpe.f32	s15, #0.0
 801703a:	eef1 fa10 	vmrs	APSR_nzcv, fpscr
 801703e:	bfcc      	ite	gt
 8017040:	ee77 7a87 	vaddgt.f32	s15, s15, s14
 8017044:	ee77 7ac7 	vsuble.f32	s15, s15, s14
 8017048:	eefd 7ae7 	vcvt.s32.f32	s15, s15
 801704c:	ee17 3a90 	vmov	r3, s15
 8017050:	b218      	sxth	r0, r3
 8017052:	4770      	bx	lr

08017054 <_ZN8touchgfx12TextProviderC1Ev>:
 8017054:	b538      	push	{r3, r4, r5, lr}
 8017056:	2500      	movs	r5, #0
 8017058:	2302      	movs	r3, #2
 801705a:	4604      	mov	r4, r0
 801705c:	e9c0 5500 	strd	r5, r5, [r0]
 8017060:	7403      	strb	r3, [r0, #16]
 8017062:	6145      	str	r5, [r0, #20]
 8017064:	7605      	strb	r5, [r0, #24]
 8017066:	83c5      	strh	r5, [r0, #30]
 8017068:	8405      	strh	r5, [r0, #32]
 801706a:	86c5      	strh	r5, [r0, #54]	; 0x36
 801706c:	8705      	strh	r5, [r0, #56]	; 0x38
 801706e:	87c5      	strh	r5, [r0, #62]	; 0x3e
 8017070:	f8a0 5040 	strh.w	r5, [r0, #64]	; 0x40
 8017074:	e9c0 5511 	strd	r5, r5, [r0, #68]	; 0x44
 8017078:	220e      	movs	r2, #14
 801707a:	4629      	mov	r1, r5
 801707c:	304c      	adds	r0, #76	; 0x4c
 801707e:	f013 f9e6 	bl	802a44e <memset>
 8017082:	2301      	movs	r3, #1
 8017084:	4620      	mov	r0, r4
 8017086:	f8a4 505a 	strh.w	r5, [r4, #90]	; 0x5a
 801708a:	f8a4 505c 	strh.w	r5, [r4, #92]	; 0x5c
 801708e:	f8a4 505e 	strh.w	r5, [r4, #94]	; 0x5e
 8017092:	f884 3060 	strb.w	r3, [r4, #96]	; 0x60
 8017096:	f884 5061 	strb.w	r5, [r4, #97]	; 0x61
 801709a:	f7f1 f817 	bl	80080cc <_ZN8touchgfx12TextProvider18initializeInternalEv>
 801709e:	4620      	mov	r0, r4
 80170a0:	bd38      	pop	{r3, r4, r5, pc}

080170a2 <_ZN8touchgfx12TextProvider11endOfStringEv>:
 80170a2:	8ec3      	ldrh	r3, [r0, #54]	; 0x36
 80170a4:	eb00 0043 	add.w	r0, r0, r3, lsl #1
 80170a8:	8c40      	ldrh	r0, [r0, #34]	; 0x22
 80170aa:	fab0 f080 	clz	r0, r0
 80170ae:	0940      	lsrs	r0, r0, #5
 80170b0:	4770      	bx	lr

080170b2 <_ZN8touchgfx12TextProvider19getNextCharInternalEv>:
 80170b2:	b530      	push	{r4, r5, lr}
 80170b4:	2500      	movs	r5, #0
 80170b6:	2401      	movs	r4, #1
 80170b8:	6843      	ldr	r3, [r0, #4]
 80170ba:	b913      	cbnz	r3, 80170c2 <_ZN8touchgfx12TextProvider19getNextCharInternalEv+0x10>
 80170bc:	6803      	ldr	r3, [r0, #0]
 80170be:	b313      	cbz	r3, 8017106 <_ZN8touchgfx12TextProvider19getNextCharInternalEv+0x54>
 80170c0:	6043      	str	r3, [r0, #4]
 80170c2:	7e03      	ldrb	r3, [r0, #24]
 80170c4:	b143      	cbz	r3, 80170d8 <_ZN8touchgfx12TextProvider19getNextCharInternalEv+0x26>
 80170c6:	6943      	ldr	r3, [r0, #20]
 80170c8:	b12b      	cbz	r3, 80170d6 <_ZN8touchgfx12TextProvider19getNextCharInternalEv+0x24>
 80170ca:	881a      	ldrh	r2, [r3, #0]
 80170cc:	b11a      	cbz	r2, 80170d6 <_ZN8touchgfx12TextProvider19getNextCharInternalEv+0x24>
 80170ce:	1c9a      	adds	r2, r3, #2
 80170d0:	6142      	str	r2, [r0, #20]
 80170d2:	8818      	ldrh	r0, [r3, #0]
 80170d4:	bd30      	pop	{r4, r5, pc}
 80170d6:	7605      	strb	r5, [r0, #24]
 80170d8:	6843      	ldr	r3, [r0, #4]
 80170da:	8819      	ldrh	r1, [r3, #0]
 80170dc:	b199      	cbz	r1, 8017106 <_ZN8touchgfx12TextProvider19getNextCharInternalEv+0x54>
 80170de:	1c9a      	adds	r2, r3, #2
 80170e0:	2902      	cmp	r1, #2
 80170e2:	6042      	str	r2, [r0, #4]
 80170e4:	d1f5      	bne.n	80170d2 <_ZN8touchgfx12TextProvider19getNextCharInternalEv+0x20>
 80170e6:	7c03      	ldrb	r3, [r0, #16]
 80170e8:	2b01      	cmp	r3, #1
 80170ea:	d8e5      	bhi.n	80170b8 <_ZN8touchgfx12TextProvider19getNextCharInternalEv+0x6>
 80170ec:	1c5a      	adds	r2, r3, #1
 80170ee:	3302      	adds	r3, #2
 80170f0:	7402      	strb	r2, [r0, #16]
 80170f2:	f850 3023 	ldr.w	r3, [r0, r3, lsl #2]
 80170f6:	6143      	str	r3, [r0, #20]
 80170f8:	2b00      	cmp	r3, #0
 80170fa:	d0dd      	beq.n	80170b8 <_ZN8touchgfx12TextProvider19getNextCharInternalEv+0x6>
 80170fc:	881b      	ldrh	r3, [r3, #0]
 80170fe:	2b00      	cmp	r3, #0
 8017100:	d0da      	beq.n	80170b8 <_ZN8touchgfx12TextProvider19getNextCharInternalEv+0x6>
 8017102:	7604      	strb	r4, [r0, #24]
 8017104:	e7d8      	b.n	80170b8 <_ZN8touchgfx12TextProvider19getNextCharInternalEv+0x6>
 8017106:	2000      	movs	r0, #0
 8017108:	e7e4      	b.n	80170d4 <_ZN8touchgfx12TextProvider19getNextCharInternalEv+0x22>

0801710a <_ZN8touchgfx12TextProvider10initializeEPKtSt9__va_listS2_PKNS_24FontContextualFormsTableE>:
 801710a:	b430      	push	{r4, r5}
 801710c:	6001      	str	r1, [r0, #0]
 801710e:	2100      	movs	r1, #0
 8017110:	6041      	str	r1, [r0, #4]
 8017112:	6815      	ldr	r5, [r2, #0]
 8017114:	6085      	str	r5, [r0, #8]
 8017116:	6852      	ldr	r2, [r2, #4]
 8017118:	6443      	str	r3, [r0, #68]	; 0x44
 801711a:	9b02      	ldr	r3, [sp, #8]
 801711c:	60c2      	str	r2, [r0, #12]
 801711e:	7401      	strb	r1, [r0, #16]
 8017120:	6141      	str	r1, [r0, #20]
 8017122:	7601      	strb	r1, [r0, #24]
 8017124:	8701      	strh	r1, [r0, #56]	; 0x38
 8017126:	8401      	strh	r1, [r0, #32]
 8017128:	f8a0 1040 	strh.w	r1, [r0, #64]	; 0x40
 801712c:	6483      	str	r3, [r0, #72]	; 0x48
 801712e:	bc30      	pop	{r4, r5}
 8017130:	f7f0 bfcc 	b.w	80080cc <_ZN8touchgfx12TextProvider18initializeInternalEv>

08017134 <_ZN8touchgfx12TextProvider10initializeEPKtS2_PKNS_24FontContextualFormsTableEz>:
 8017134:	b408      	push	{r3}
 8017136:	b510      	push	{r4, lr}
 8017138:	b085      	sub	sp, #20
 801713a:	ac07      	add	r4, sp, #28
 801713c:	f854 3b04 	ldr.w	r3, [r4], #4
 8017140:	9300      	str	r3, [sp, #0]
 8017142:	4613      	mov	r3, r2
 8017144:	4622      	mov	r2, r4
 8017146:	9403      	str	r4, [sp, #12]
 8017148:	f7ff ffdf 	bl	801710a <_ZN8touchgfx12TextProvider10initializeEPKtSt9__va_listS2_PKNS_24FontContextualFormsTableE>
 801714c:	b005      	add	sp, #20
 801714e:	e8bd 4010 	ldmia.w	sp!, {r4, lr}
 8017152:	b001      	add	sp, #4
 8017154:	4770      	bx	lr

08017156 <_ZN8touchgfx12TextProvider16adjustHindiGlyphEPKNS_9GlyphNodeE>:
 8017156:	b5f0      	push	{r4, r5, r6, r7, lr}
 8017158:	4605      	mov	r5, r0
 801715a:	4608      	mov	r0, r1
 801715c:	b1e9      	cbz	r1, 801719a <_ZN8touchgfx12TextProvider16adjustHindiGlyphEPKNS_9GlyphNodeE+0x44>
 801715e:	f105 044c 	add.w	r4, r5, #76	; 0x4c
 8017162:	460b      	mov	r3, r1
 8017164:	f101 0708 	add.w	r7, r1, #8
 8017168:	4622      	mov	r2, r4
 801716a:	6818      	ldr	r0, [r3, #0]
 801716c:	6859      	ldr	r1, [r3, #4]
 801716e:	4626      	mov	r6, r4
 8017170:	c603      	stmia	r6!, {r0, r1}
 8017172:	3308      	adds	r3, #8
 8017174:	42bb      	cmp	r3, r7
 8017176:	4634      	mov	r4, r6
 8017178:	d1f7      	bne.n	801716a <_ZN8touchgfx12TextProvider16adjustHindiGlyphEPKNS_9GlyphNodeE+0x14>
 801717a:	6818      	ldr	r0, [r3, #0]
 801717c:	6030      	str	r0, [r6, #0]
 801717e:	889b      	ldrh	r3, [r3, #4]
 8017180:	80b3      	strh	r3, [r6, #4]
 8017182:	f895 3059 	ldrb.w	r3, [r5, #89]	; 0x59
 8017186:	015b      	lsls	r3, r3, #5
 8017188:	f403 7180 	and.w	r1, r3, #256	; 0x100
 801718c:	f895 3052 	ldrb.w	r3, [r5, #82]	; 0x52
 8017190:	430b      	orrs	r3, r1
 8017192:	425b      	negs	r3, r3
 8017194:	f885 3055 	strb.w	r3, [r5, #85]	; 0x55
 8017198:	4610      	mov	r0, r2
 801719a:	bdf0      	pop	{r4, r5, r6, r7, pc}

0801719c <_ZNK8touchgfx12TextProvider15thaiLookupGlyphEPKNS_9GlyphNodeEPKNS_4FontEt>:
 801719c:	b538      	push	{r3, r4, r5, lr}
 801719e:	460c      	mov	r4, r1
 80171a0:	6811      	ldr	r1, [r2, #0]
 80171a2:	4610      	mov	r0, r2
 80171a4:	68cd      	ldr	r5, [r1, #12]
 80171a6:	4619      	mov	r1, r3
 80171a8:	47a8      	blx	r5
 80171aa:	2800      	cmp	r0, #0
 80171ac:	bf08      	it	eq
 80171ae:	4620      	moveq	r0, r4
 80171b0:	bd38      	pop	{r3, r4, r5, pc}
	...

080171b4 <_ZN8touchgfx12TextProvider15adjustThaiGlyphEPKNS_4FontEPKNS_9GlyphNodeE>:
 80171b4:	b5f8      	push	{r3, r4, r5, r6, r7, lr}
 80171b6:	4604      	mov	r4, r0
 80171b8:	4615      	mov	r5, r2
 80171ba:	4608      	mov	r0, r1
 80171bc:	b93a      	cbnz	r2, 80171ce <_ZN8touchgfx12TextProvider15adjustThaiGlyphEPKNS_4FontEPKNS_9GlyphNodeE+0x1a>
 80171be:	f8a4 205a 	strh.w	r2, [r4, #90]	; 0x5a
 80171c2:	f8a4 205c 	strh.w	r2, [r4, #92]	; 0x5c
 80171c6:	f8a4 205e 	strh.w	r2, [r4, #94]	; 0x5e
 80171ca:	4628      	mov	r0, r5
 80171cc:	bdf8      	pop	{r3, r4, r5, r6, r7, pc}
 80171ce:	f892 c00d 	ldrb.w	ip, [r2, #13]
 80171d2:	8893      	ldrh	r3, [r2, #4]
 80171d4:	ea4f 160c 	mov.w	r6, ip, lsl #4
 80171d8:	f406 7280 	and.w	r2, r6, #256	; 0x100
 80171dc:	79ee      	ldrb	r6, [r5, #7]
 80171de:	f46f 6763 	mvn.w	r7, #3632	; 0xe30
 80171e2:	4316      	orrs	r6, r2
 80171e4:	19da      	adds	r2, r3, r7
 80171e6:	b291      	uxth	r1, r2
 80171e8:	291d      	cmp	r1, #29
 80171ea:	b2b7      	uxth	r7, r6
 80171ec:	d87a      	bhi.n	80172e4 <_ZN8touchgfx12TextProvider15adjustThaiGlyphEPKNS_4FontEPKNS_9GlyphNodeE+0x130>
 80171ee:	2201      	movs	r2, #1
 80171f0:	408a      	lsls	r2, r1
 80171f2:	4975      	ldr	r1, [pc, #468]	; (80173c8 <_ZN8touchgfx12TextProvider15adjustThaiGlyphEPKNS_4FontEPKNS_9GlyphNodeE+0x214>)
 80171f4:	420a      	tst	r2, r1
 80171f6:	ea4f 06e6 	mov.w	r6, r6, asr #3
 80171fa:	d12d      	bne.n	8017258 <_ZN8touchgfx12TextProvider15adjustThaiGlyphEPKNS_4FontEPKNS_9GlyphNodeE+0xa4>
 80171fc:	f412 7f60 	tst.w	r2, #896	; 0x380
 8017200:	d070      	beq.n	80172e4 <_ZN8touchgfx12TextProvider15adjustThaiGlyphEPKNS_4FontEPKNS_9GlyphNodeE+0x130>
 8017202:	f104 024c 	add.w	r2, r4, #76	; 0x4c
 8017206:	462b      	mov	r3, r5
 8017208:	f105 0e08 	add.w	lr, r5, #8
 801720c:	4615      	mov	r5, r2
 801720e:	6818      	ldr	r0, [r3, #0]
 8017210:	6859      	ldr	r1, [r3, #4]
 8017212:	4694      	mov	ip, r2
 8017214:	e8ac 0003 	stmia.w	ip!, {r0, r1}
 8017218:	3308      	adds	r3, #8
 801721a:	4573      	cmp	r3, lr
 801721c:	4662      	mov	r2, ip
 801721e:	d1f6      	bne.n	801720e <_ZN8touchgfx12TextProvider15adjustThaiGlyphEPKNS_4FontEPKNS_9GlyphNodeE+0x5a>
 8017220:	6818      	ldr	r0, [r3, #0]
 8017222:	f8cc 0000 	str.w	r0, [ip]
 8017226:	889b      	ldrh	r3, [r3, #4]
 8017228:	f8ac 3004 	strh.w	r3, [ip, #4]
 801722c:	f8b4 105c 	ldrh.w	r1, [r4, #92]	; 0x5c
 8017230:	f894 0059 	ldrb.w	r0, [r4, #89]	; 0x59
 8017234:	b2b3      	uxth	r3, r6
 8017236:	1aca      	subs	r2, r1, r3
 8017238:	b292      	uxth	r2, r2
 801723a:	f884 2054 	strb.w	r2, [r4, #84]	; 0x54
 801723e:	10d2      	asrs	r2, r2, #3
 8017240:	f020 0060 	bic.w	r0, r0, #96	; 0x60
 8017244:	f002 0260 	and.w	r2, r2, #96	; 0x60
 8017248:	4302      	orrs	r2, r0
 801724a:	1bcf      	subs	r7, r1, r7
 801724c:	f884 2059 	strb.w	r2, [r4, #89]	; 0x59
 8017250:	1afb      	subs	r3, r7, r3
 8017252:	f8a4 305c 	strh.w	r3, [r4, #92]	; 0x5c
 8017256:	e7b8      	b.n	80171ca <_ZN8touchgfx12TextProvider15adjustThaiGlyphEPKNS_4FontEPKNS_9GlyphNodeE+0x16>
 8017258:	8ee3      	ldrh	r3, [r4, #54]	; 0x36
 801725a:	eb04 0343 	add.w	r3, r4, r3, lsl #1
 801725e:	8c59      	ldrh	r1, [r3, #34]	; 0x22
 8017260:	f640 6333 	movw	r3, #3635	; 0xe33
 8017264:	4299      	cmp	r1, r3
 8017266:	d110      	bne.n	801728a <_ZN8touchgfx12TextProvider15adjustThaiGlyphEPKNS_4FontEPKNS_9GlyphNodeE+0xd6>
 8017268:	6803      	ldr	r3, [r0, #0]
 801726a:	68db      	ldr	r3, [r3, #12]
 801726c:	4798      	blx	r3
 801726e:	7b41      	ldrb	r1, [r0, #13]
 8017270:	00cb      	lsls	r3, r1, #3
 8017272:	f403 7280 	and.w	r2, r3, #256	; 0x100
 8017276:	7a03      	ldrb	r3, [r0, #8]
 8017278:	0648      	lsls	r0, r1, #25
 801727a:	ea43 0302 	orr.w	r3, r3, r2
 801727e:	bf44      	itt	mi
 8017280:	f5a3 7300 	submi.w	r3, r3, #512	; 0x200
 8017284:	b21b      	sxthmi	r3, r3
 8017286:	f8a4 305a 	strh.w	r3, [r4, #90]	; 0x5a
 801728a:	f8b4 305a 	ldrh.w	r3, [r4, #90]	; 0x5a
 801728e:	443b      	add	r3, r7
 8017290:	4433      	add	r3, r6
 8017292:	b29b      	uxth	r3, r3
 8017294:	f104 064c 	add.w	r6, r4, #76	; 0x4c
 8017298:	462a      	mov	r2, r5
 801729a:	f105 0c08 	add.w	ip, r5, #8
 801729e:	f8a4 305a 	strh.w	r3, [r4, #90]	; 0x5a
 80172a2:	4635      	mov	r5, r6
 80172a4:	6810      	ldr	r0, [r2, #0]
 80172a6:	6851      	ldr	r1, [r2, #4]
 80172a8:	4637      	mov	r7, r6
 80172aa:	c703      	stmia	r7!, {r0, r1}
 80172ac:	3208      	adds	r2, #8
 80172ae:	4562      	cmp	r2, ip
 80172b0:	463e      	mov	r6, r7
 80172b2:	d1f7      	bne.n	80172a4 <_ZN8touchgfx12TextProvider15adjustThaiGlyphEPKNS_4FontEPKNS_9GlyphNodeE+0xf0>
 80172b4:	6810      	ldr	r0, [r2, #0]
 80172b6:	6038      	str	r0, [r7, #0]
 80172b8:	8892      	ldrh	r2, [r2, #4]
 80172ba:	80ba      	strh	r2, [r7, #4]
 80172bc:	f894 2059 	ldrb.w	r2, [r4, #89]	; 0x59
 80172c0:	f884 3054 	strb.w	r3, [r4, #84]	; 0x54
 80172c4:	10db      	asrs	r3, r3, #3
 80172c6:	f022 0260 	bic.w	r2, r2, #96	; 0x60
 80172ca:	f003 0360 	and.w	r3, r3, #96	; 0x60
 80172ce:	4313      	orrs	r3, r2
 80172d0:	f884 3059 	strb.w	r3, [r4, #89]	; 0x59
 80172d4:	f894 205e 	ldrb.w	r2, [r4, #94]	; 0x5e
 80172d8:	f894 3055 	ldrb.w	r3, [r4, #85]	; 0x55
 80172dc:	1a9b      	subs	r3, r3, r2
 80172de:	f884 3055 	strb.w	r3, [r4, #85]	; 0x55
 80172e2:	e772      	b.n	80171ca <_ZN8touchgfx12TextProvider15adjustThaiGlyphEPKNS_4FontEPKNS_9GlyphNodeE+0x16>
 80172e4:	f023 0204 	bic.w	r2, r3, #4
 80172e8:	f640 611b 	movw	r1, #3611	; 0xe1b
 80172ec:	428a      	cmp	r2, r1
 80172ee:	d003      	beq.n	80172f8 <_ZN8touchgfx12TextProvider15adjustThaiGlyphEPKNS_4FontEPKNS_9GlyphNodeE+0x144>
 80172f0:	f640 621d 	movw	r2, #3613	; 0xe1d
 80172f4:	4293      	cmp	r3, r2
 80172f6:	d120      	bne.n	801733a <_ZN8touchgfx12TextProvider15adjustThaiGlyphEPKNS_4FontEPKNS_9GlyphNodeE+0x186>
 80172f8:	3b01      	subs	r3, #1
 80172fa:	4602      	mov	r2, r0
 80172fc:	b29b      	uxth	r3, r3
 80172fe:	4629      	mov	r1, r5
 8017300:	4620      	mov	r0, r4
 8017302:	f7ff ff4b 	bl	801719c <_ZNK8touchgfx12TextProvider15thaiLookupGlyphEPKNS_9GlyphNodeEPKNS_4FontEt>
 8017306:	7b41      	ldrb	r1, [r0, #13]
 8017308:	00cb      	lsls	r3, r1, #3
 801730a:	f403 7280 	and.w	r2, r3, #256	; 0x100
 801730e:	7a03      	ldrb	r3, [r0, #8]
 8017310:	0649      	lsls	r1, r1, #25
 8017312:	ea43 0302 	orr.w	r3, r3, r2
 8017316:	bf44      	itt	mi
 8017318:	f5a3 7300 	submi.w	r3, r3, #512	; 0x200
 801731c:	b21b      	sxthmi	r3, r3
 801731e:	f8a4 305a 	strh.w	r3, [r4, #90]	; 0x5a
 8017322:	7b6b      	ldrb	r3, [r5, #13]
 8017324:	7aaa      	ldrb	r2, [r5, #10]
 8017326:	005b      	lsls	r3, r3, #1
 8017328:	f403 7380 	and.w	r3, r3, #256	; 0x100
 801732c:	4313      	orrs	r3, r2
 801732e:	115a      	asrs	r2, r3, #5
 8017330:	eb02 0393 	add.w	r3, r2, r3, lsr #2
 8017334:	f8a4 305e 	strh.w	r3, [r4, #94]	; 0x5e
 8017338:	e036      	b.n	80173a8 <_ZN8touchgfx12TextProvider15adjustThaiGlyphEPKNS_4FontEPKNS_9GlyphNodeE+0x1f4>
 801733a:	ea4f 02cc 	mov.w	r2, ip, lsl #3
 801733e:	f402 7180 	and.w	r1, r2, #256	; 0x100
 8017342:	7a2a      	ldrb	r2, [r5, #8]
 8017344:	f01c 0f40 	tst.w	ip, #64	; 0x40
 8017348:	ea42 0201 	orr.w	r2, r2, r1
 801734c:	bf1c      	itt	ne
 801734e:	f5a2 7200 	subne.w	r2, r2, #512	; 0x200
 8017352:	b212      	sxthne	r2, r2
 8017354:	f8a4 205a 	strh.w	r2, [r4, #90]	; 0x5a
 8017358:	f640 6109 	movw	r1, #3593	; 0xe09
 801735c:	f023 0210 	bic.w	r2, r3, #16
 8017360:	428a      	cmp	r2, r1
 8017362:	d003      	beq.n	801736c <_ZN8touchgfx12TextProvider15adjustThaiGlyphEPKNS_4FontEPKNS_9GlyphNodeE+0x1b8>
 8017364:	f640 6213 	movw	r2, #3603	; 0xe13
 8017368:	4293      	cmp	r3, r2
 801736a:	d12a      	bne.n	80173c2 <_ZN8touchgfx12TextProvider15adjustThaiGlyphEPKNS_4FontEPKNS_9GlyphNodeE+0x20e>
 801736c:	7b6e      	ldrb	r6, [r5, #13]
 801736e:	0076      	lsls	r6, r6, #1
 8017370:	f406 7280 	and.w	r2, r6, #256	; 0x100
 8017374:	7aae      	ldrb	r6, [r5, #10]
 8017376:	4316      	orrs	r6, r2
 8017378:	f640 6213 	movw	r2, #3603	; 0xe13
 801737c:	4293      	cmp	r3, r2
 801737e:	bf18      	it	ne
 8017380:	f103 33ff 	addne.w	r3, r3, #4294967295
 8017384:	4602      	mov	r2, r0
 8017386:	bf14      	ite	ne
 8017388:	b29b      	uxthne	r3, r3
 801738a:	f640 630c 	movweq	r3, #3596	; 0xe0c
 801738e:	4629      	mov	r1, r5
 8017390:	4620      	mov	r0, r4
 8017392:	f7ff ff03 	bl	801719c <_ZNK8touchgfx12TextProvider15thaiLookupGlyphEPKNS_9GlyphNodeEPKNS_4FontEt>
 8017396:	7b43      	ldrb	r3, [r0, #13]
 8017398:	7a82      	ldrb	r2, [r0, #10]
 801739a:	005b      	lsls	r3, r3, #1
 801739c:	f403 7380 	and.w	r3, r3, #256	; 0x100
 80173a0:	4313      	orrs	r3, r2
 80173a2:	1af6      	subs	r6, r6, r3
 80173a4:	f8a4 605e 	strh.w	r6, [r4, #94]	; 0x5e
 80173a8:	7b69      	ldrb	r1, [r5, #13]
 80173aa:	00cb      	lsls	r3, r1, #3
 80173ac:	f403 7280 	and.w	r2, r3, #256	; 0x100
 80173b0:	7a2b      	ldrb	r3, [r5, #8]
 80173b2:	4313      	orrs	r3, r2
 80173b4:	064a      	lsls	r2, r1, #25
 80173b6:	bf44      	itt	mi
 80173b8:	f5a3 7300 	submi.w	r3, r3, #512	; 0x200
 80173bc:	b21b      	sxthmi	r3, r3
 80173be:	1bdb      	subs	r3, r3, r7
 80173c0:	e747      	b.n	8017252 <_ZN8touchgfx12TextProvider15adjustThaiGlyphEPKNS_4FontEPKNS_9GlyphNodeE+0x9e>
 80173c2:	2300      	movs	r3, #0
 80173c4:	e7b6      	b.n	8017334 <_ZN8touchgfx12TextProvider15adjustThaiGlyphEPKNS_4FontEPKNS_9GlyphNodeE+0x180>
 80173c6:	bf00      	nop
 80173c8:	3fc00079 	.word	0x3fc00079

080173cc <_ZN8touchgfx12TextProvider17adjustArabicGlyphEPKNS_4FontEPKNS_9GlyphNodeEt>:
 80173cc:	e92d 43f0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, lr}
 80173d0:	4604      	mov	r4, r0
 80173d2:	b942      	cbnz	r2, 80173e6 <_ZN8touchgfx12TextProvider17adjustArabicGlyphEPKNS_4FontEPKNS_9GlyphNodeEt+0x1a>
 80173d4:	f44f 4300 	mov.w	r3, #32768	; 0x8000
 80173d8:	f8a0 305a 	strh.w	r3, [r0, #90]	; 0x5a
 80173dc:	f8a0 305c 	strh.w	r3, [r0, #92]	; 0x5c
 80173e0:	f8a4 305e 	strh.w	r3, [r4, #94]	; 0x5e
 80173e4:	e047      	b.n	8017476 <_ZN8touchgfx12TextProvider17adjustArabicGlyphEPKNS_4FontEPKNS_9GlyphNodeEt+0xaa>
 80173e6:	7b51      	ldrb	r1, [r2, #13]
 80173e8:	8893      	ldrh	r3, [r2, #4]
 80173ea:	010d      	lsls	r5, r1, #4
 80173ec:	f405 7080 	and.w	r0, r5, #256	; 0x100
 80173f0:	79d5      	ldrb	r5, [r2, #7]
 80173f2:	4305      	orrs	r5, r0
 80173f4:	2d04      	cmp	r5, #4
 80173f6:	bfcc      	ite	gt
 80173f8:	ea4f 0e95 	movgt.w	lr, r5, lsr #2
 80173fc:	f04f 0e01 	movle.w	lr, #1
 8017400:	f5b3 6fdd 	cmp.w	r3, #1768	; 0x6e8
 8017404:	f200 80ab 	bhi.w	801755e <_ZN8touchgfx12TextProvider17adjustArabicGlyphEPKNS_4FontEPKNS_9GlyphNodeEt+0x192>
 8017408:	f240 60e7 	movw	r0, #1767	; 0x6e7
 801740c:	4283      	cmp	r3, r0
 801740e:	d216      	bcs.n	801743e <_ZN8touchgfx12TextProvider17adjustArabicGlyphEPKNS_4FontEPKNS_9GlyphNodeEt+0x72>
 8017410:	f240 605b 	movw	r0, #1627	; 0x65b
 8017414:	4283      	cmp	r3, r0
 8017416:	d859      	bhi.n	80174cc <_ZN8touchgfx12TextProvider17adjustArabicGlyphEPKNS_4FontEPKNS_9GlyphNodeEt+0x100>
 8017418:	f240 6057 	movw	r0, #1623	; 0x657
 801741c:	4283      	cmp	r3, r0
 801741e:	d20e      	bcs.n	801743e <_ZN8touchgfx12TextProvider17adjustArabicGlyphEPKNS_4FontEPKNS_9GlyphNodeEt+0x72>
 8017420:	f5b3 6fca 	cmp.w	r3, #1616	; 0x650
 8017424:	d24a      	bcs.n	80174bc <_ZN8touchgfx12TextProvider17adjustArabicGlyphEPKNS_4FontEPKNS_9GlyphNodeEt+0xf0>
 8017426:	f240 604e 	movw	r0, #1614	; 0x64e
 801742a:	4283      	cmp	r3, r0
 801742c:	d207      	bcs.n	801743e <_ZN8touchgfx12TextProvider17adjustArabicGlyphEPKNS_4FontEPKNS_9GlyphNodeEt+0x72>
 801742e:	f240 601a 	movw	r0, #1562	; 0x61a
 8017432:	4283      	cmp	r3, r0
 8017434:	d02a      	beq.n	801748c <_ZN8touchgfx12TextProvider17adjustArabicGlyphEPKNS_4FontEPKNS_9GlyphNodeEt+0xc0>
 8017436:	d821      	bhi.n	801747c <_ZN8touchgfx12TextProvider17adjustArabicGlyphEPKNS_4FontEPKNS_9GlyphNodeEt+0xb0>
 8017438:	f5b3 6fc2 	cmp.w	r3, #1552	; 0x610
 801743c:	d35b      	bcc.n	80174f6 <_ZN8touchgfx12TextProvider17adjustArabicGlyphEPKNS_4FontEPKNS_9GlyphNodeEt+0x12a>
 801743e:	f9b4 305a 	ldrsh.w	r3, [r4, #90]	; 0x5a
 8017442:	f513 4f00 	cmn.w	r3, #32768	; 0x8000
 8017446:	f040 80d0 	bne.w	80175ea <_ZN8touchgfx12TextProvider17adjustArabicGlyphEPKNS_4FontEPKNS_9GlyphNodeEt+0x21e>
 801744a:	f9b4 005c 	ldrsh.w	r0, [r4, #92]	; 0x5c
 801744e:	f510 4f00 	cmn.w	r0, #32768	; 0x8000
 8017452:	f040 80ca 	bne.w	80175ea <_ZN8touchgfx12TextProvider17adjustArabicGlyphEPKNS_4FontEPKNS_9GlyphNodeEt+0x21e>
 8017456:	00cb      	lsls	r3, r1, #3
 8017458:	f403 7080 	and.w	r0, r3, #256	; 0x100
 801745c:	7a13      	ldrb	r3, [r2, #8]
 801745e:	0649      	lsls	r1, r1, #25
 8017460:	ea43 0300 	orr.w	r3, r3, r0
 8017464:	bf44      	itt	mi
 8017466:	f5a3 7300 	submi.w	r3, r3, #512	; 0x200
 801746a:	b21b      	sxthmi	r3, r3
 801746c:	f8a4 305a 	strh.w	r3, [r4, #90]	; 0x5a
 8017470:	1b5d      	subs	r5, r3, r5
 8017472:	f8a4 505c 	strh.w	r5, [r4, #92]	; 0x5c
 8017476:	4610      	mov	r0, r2
 8017478:	e8bd 83f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, pc}
 801747c:	f240 604b 	movw	r0, #1611	; 0x64b
 8017480:	4283      	cmp	r3, r0
 8017482:	d338      	bcc.n	80174f6 <_ZN8touchgfx12TextProvider17adjustArabicGlyphEPKNS_4FontEPKNS_9GlyphNodeEt+0x12a>
 8017484:	f240 604c 	movw	r0, #1612	; 0x64c
 8017488:	4283      	cmp	r3, r0
 801748a:	d9d8      	bls.n	801743e <_ZN8touchgfx12TextProvider17adjustArabicGlyphEPKNS_4FontEPKNS_9GlyphNodeEt+0x72>
 801748c:	f9b4 005a 	ldrsh.w	r0, [r4, #90]	; 0x5a
 8017490:	f9b4 305c 	ldrsh.w	r3, [r4, #92]	; 0x5c
 8017494:	f510 4f00 	cmn.w	r0, #32768	; 0x8000
 8017498:	f040 80f2 	bne.w	8017680 <_ZN8touchgfx12TextProvider17adjustArabicGlyphEPKNS_4FontEPKNS_9GlyphNodeEt+0x2b4>
 801749c:	f513 4f00 	cmn.w	r3, #32768	; 0x8000
 80174a0:	f040 80ee 	bne.w	8017680 <_ZN8touchgfx12TextProvider17adjustArabicGlyphEPKNS_4FontEPKNS_9GlyphNodeEt+0x2b4>
 80174a4:	00cb      	lsls	r3, r1, #3
 80174a6:	f403 7080 	and.w	r0, r3, #256	; 0x100
 80174aa:	7a13      	ldrb	r3, [r2, #8]
 80174ac:	064e      	lsls	r6, r1, #25
 80174ae:	ea43 0300 	orr.w	r3, r3, r0
 80174b2:	bf44      	itt	mi
 80174b4:	f5a3 7300 	submi.w	r3, r3, #512	; 0x200
 80174b8:	b21b      	sxthmi	r3, r3
 80174ba:	e7d9      	b.n	8017470 <_ZN8touchgfx12TextProvider17adjustArabicGlyphEPKNS_4FontEPKNS_9GlyphNodeEt+0xa4>
 80174bc:	f240 6054 	movw	r0, #1620	; 0x654
 80174c0:	4283      	cmp	r3, r0
 80174c2:	d8e3      	bhi.n	801748c <_ZN8touchgfx12TextProvider17adjustArabicGlyphEPKNS_4FontEPKNS_9GlyphNodeEt+0xc0>
 80174c4:	f5b3 6fca 	cmp.w	r3, #1616	; 0x650
 80174c8:	d9e0      	bls.n	801748c <_ZN8touchgfx12TextProvider17adjustArabicGlyphEPKNS_4FontEPKNS_9GlyphNodeEt+0xc0>
 80174ca:	e7b8      	b.n	801743e <_ZN8touchgfx12TextProvider17adjustArabicGlyphEPKNS_4FontEPKNS_9GlyphNodeEt+0x72>
 80174cc:	f240 6074 	movw	r0, #1652	; 0x674
 80174d0:	4283      	cmp	r3, r0
 80174d2:	d0b4      	beq.n	801743e <_ZN8touchgfx12TextProvider17adjustArabicGlyphEPKNS_4FontEPKNS_9GlyphNodeEt+0x72>
 80174d4:	d82d      	bhi.n	8017532 <_ZN8touchgfx12TextProvider17adjustArabicGlyphEPKNS_4FontEPKNS_9GlyphNodeEt+0x166>
 80174d6:	f240 605e 	movw	r0, #1630	; 0x65e
 80174da:	4283      	cmp	r3, r0
 80174dc:	d804      	bhi.n	80174e8 <_ZN8touchgfx12TextProvider17adjustArabicGlyphEPKNS_4FontEPKNS_9GlyphNodeEt+0x11c>
 80174de:	f240 605d 	movw	r0, #1629	; 0x65d
 80174e2:	4283      	cmp	r3, r0
 80174e4:	d3d2      	bcc.n	801748c <_ZN8touchgfx12TextProvider17adjustArabicGlyphEPKNS_4FontEPKNS_9GlyphNodeEt+0xc0>
 80174e6:	e7aa      	b.n	801743e <_ZN8touchgfx12TextProvider17adjustArabicGlyphEPKNS_4FontEPKNS_9GlyphNodeEt+0x72>
 80174e8:	f240 605f 	movw	r0, #1631	; 0x65f
 80174ec:	4283      	cmp	r3, r0
 80174ee:	d0cd      	beq.n	801748c <_ZN8touchgfx12TextProvider17adjustArabicGlyphEPKNS_4FontEPKNS_9GlyphNodeEt+0xc0>
 80174f0:	f5b3 6fce 	cmp.w	r3, #1648	; 0x670
 80174f4:	d0a3      	beq.n	801743e <_ZN8touchgfx12TextProvider17adjustArabicGlyphEPKNS_4FontEPKNS_9GlyphNodeEt+0x72>
 80174f6:	00cb      	lsls	r3, r1, #3
 80174f8:	f403 7080 	and.w	r0, r3, #256	; 0x100
 80174fc:	7a13      	ldrb	r3, [r2, #8]
 80174fe:	0649      	lsls	r1, r1, #25
 8017500:	ea43 0300 	orr.w	r3, r3, r0
 8017504:	bf44      	itt	mi
 8017506:	f5a3 7300 	submi.w	r3, r3, #512	; 0x200
 801750a:	b21b      	sxthmi	r3, r3
 801750c:	1b5d      	subs	r5, r3, r5
 801750e:	f8a4 305a 	strh.w	r3, [r4, #90]	; 0x5a
 8017512:	f8a4 505c 	strh.w	r5, [r4, #92]	; 0x5c
 8017516:	7b53      	ldrb	r3, [r2, #13]
 8017518:	015b      	lsls	r3, r3, #5
 801751a:	f403 7180 	and.w	r1, r3, #256	; 0x100
 801751e:	7993      	ldrb	r3, [r2, #6]
 8017520:	430b      	orrs	r3, r1
 8017522:	005b      	lsls	r3, r3, #1
 8017524:	2105      	movs	r1, #5
 8017526:	fb93 f3f1 	sdiv	r3, r3, r1
 801752a:	f992 1009 	ldrsb.w	r1, [r2, #9]
 801752e:	440b      	add	r3, r1
 8017530:	e756      	b.n	80173e0 <_ZN8touchgfx12TextProvider17adjustArabicGlyphEPKNS_4FontEPKNS_9GlyphNodeEt+0x14>
 8017532:	f240 60e2 	movw	r0, #1762	; 0x6e2
 8017536:	4283      	cmp	r3, r0
 8017538:	d809      	bhi.n	801754e <_ZN8touchgfx12TextProvider17adjustArabicGlyphEPKNS_4FontEPKNS_9GlyphNodeEt+0x182>
 801753a:	f240 60df 	movw	r0, #1759	; 0x6df
 801753e:	4283      	cmp	r3, r0
 8017540:	f4bf af7d 	bcs.w	801743e <_ZN8touchgfx12TextProvider17adjustArabicGlyphEPKNS_4FontEPKNS_9GlyphNodeEt+0x72>
 8017544:	f2a3 63d6 	subw	r3, r3, #1750	; 0x6d6
 8017548:	2b05      	cmp	r3, #5
 801754a:	d8d4      	bhi.n	80174f6 <_ZN8touchgfx12TextProvider17adjustArabicGlyphEPKNS_4FontEPKNS_9GlyphNodeEt+0x12a>
 801754c:	e777      	b.n	801743e <_ZN8touchgfx12TextProvider17adjustArabicGlyphEPKNS_4FontEPKNS_9GlyphNodeEt+0x72>
 801754e:	f240 60e3 	movw	r0, #1763	; 0x6e3
 8017552:	4283      	cmp	r3, r0
 8017554:	d09a      	beq.n	801748c <_ZN8touchgfx12TextProvider17adjustArabicGlyphEPKNS_4FontEPKNS_9GlyphNodeEt+0xc0>
 8017556:	f240 60e4 	movw	r0, #1764	; 0x6e4
 801755a:	4283      	cmp	r3, r0
 801755c:	e7ca      	b.n	80174f4 <_ZN8touchgfx12TextProvider17adjustArabicGlyphEPKNS_4FontEPKNS_9GlyphNodeEt+0x128>
 801755e:	f5b3 6f0f 	cmp.w	r3, #2288	; 0x8f0
 8017562:	d22b      	bcs.n	80175bc <_ZN8touchgfx12TextProvider17adjustArabicGlyphEPKNS_4FontEPKNS_9GlyphNodeEt+0x1f0>
 8017564:	f640 00ed 	movw	r0, #2285	; 0x8ed
 8017568:	4283      	cmp	r3, r0
 801756a:	d28f      	bcs.n	801748c <_ZN8touchgfx12TextProvider17adjustArabicGlyphEPKNS_4FontEPKNS_9GlyphNodeEt+0xc0>
 801756c:	f640 00e5 	movw	r0, #2277	; 0x8e5
 8017570:	4283      	cmp	r3, r0
 8017572:	d816      	bhi.n	80175a2 <_ZN8touchgfx12TextProvider17adjustArabicGlyphEPKNS_4FontEPKNS_9GlyphNodeEt+0x1d6>
 8017574:	f640 00e4 	movw	r0, #2276	; 0x8e4
 8017578:	4283      	cmp	r3, r0
 801757a:	f4bf af60 	bcs.w	801743e <_ZN8touchgfx12TextProvider17adjustArabicGlyphEPKNS_4FontEPKNS_9GlyphNodeEt+0x72>
 801757e:	f240 60ec 	movw	r0, #1772	; 0x6ec
 8017582:	4283      	cmp	r3, r0
 8017584:	d80a      	bhi.n	801759c <_ZN8touchgfx12TextProvider17adjustArabicGlyphEPKNS_4FontEPKNS_9GlyphNodeEt+0x1d0>
 8017586:	f240 60eb 	movw	r0, #1771	; 0x6eb
 801758a:	4283      	cmp	r3, r0
 801758c:	f4bf af57 	bcs.w	801743e <_ZN8touchgfx12TextProvider17adjustArabicGlyphEPKNS_4FontEPKNS_9GlyphNodeEt+0x72>
 8017590:	f240 60ea 	movw	r0, #1770	; 0x6ea
 8017594:	4283      	cmp	r3, r0
 8017596:	f43f af79 	beq.w	801748c <_ZN8touchgfx12TextProvider17adjustArabicGlyphEPKNS_4FontEPKNS_9GlyphNodeEt+0xc0>
 801759a:	e7ac      	b.n	80174f6 <_ZN8touchgfx12TextProvider17adjustArabicGlyphEPKNS_4FontEPKNS_9GlyphNodeEt+0x12a>
 801759c:	f240 60ed 	movw	r0, #1773	; 0x6ed
 80175a0:	e7f8      	b.n	8017594 <_ZN8touchgfx12TextProvider17adjustArabicGlyphEPKNS_4FontEPKNS_9GlyphNodeEt+0x1c8>
 80175a2:	f640 00e8 	movw	r0, #2280	; 0x8e8
 80175a6:	4283      	cmp	r3, r0
 80175a8:	d802      	bhi.n	80175b0 <_ZN8touchgfx12TextProvider17adjustArabicGlyphEPKNS_4FontEPKNS_9GlyphNodeEt+0x1e4>
 80175aa:	f640 00e7 	movw	r0, #2279	; 0x8e7
 80175ae:	e798      	b.n	80174e2 <_ZN8touchgfx12TextProvider17adjustArabicGlyphEPKNS_4FontEPKNS_9GlyphNodeEt+0x116>
 80175b0:	f640 00e9 	movw	r0, #2281	; 0x8e9
 80175b4:	4283      	cmp	r3, r0
 80175b6:	f47f af42 	bne.w	801743e <_ZN8touchgfx12TextProvider17adjustArabicGlyphEPKNS_4FontEPKNS_9GlyphNodeEt+0x72>
 80175ba:	e767      	b.n	801748c <_ZN8touchgfx12TextProvider17adjustArabicGlyphEPKNS_4FontEPKNS_9GlyphNodeEt+0xc0>
 80175bc:	f640 00f6 	movw	r0, #2294	; 0x8f6
 80175c0:	4283      	cmp	r3, r0
 80175c2:	f43f af63 	beq.w	801748c <_ZN8touchgfx12TextProvider17adjustArabicGlyphEPKNS_4FontEPKNS_9GlyphNodeEt+0xc0>
 80175c6:	d802      	bhi.n	80175ce <_ZN8touchgfx12TextProvider17adjustArabicGlyphEPKNS_4FontEPKNS_9GlyphNodeEt+0x202>
 80175c8:	f640 00f2 	movw	r0, #2290	; 0x8f2
 80175cc:	e7f2      	b.n	80175b4 <_ZN8touchgfx12TextProvider17adjustArabicGlyphEPKNS_4FontEPKNS_9GlyphNodeEt+0x1e8>
 80175ce:	f640 00fa 	movw	r0, #2298	; 0x8fa
 80175d2:	4283      	cmp	r3, r0
 80175d4:	d805      	bhi.n	80175e2 <_ZN8touchgfx12TextProvider17adjustArabicGlyphEPKNS_4FontEPKNS_9GlyphNodeEt+0x216>
 80175d6:	f640 00f9 	movw	r0, #2297	; 0x8f9
 80175da:	4283      	cmp	r3, r0
 80175dc:	f4ff af2f 	bcc.w	801743e <_ZN8touchgfx12TextProvider17adjustArabicGlyphEPKNS_4FontEPKNS_9GlyphNodeEt+0x72>
 80175e0:	e754      	b.n	801748c <_ZN8touchgfx12TextProvider17adjustArabicGlyphEPKNS_4FontEPKNS_9GlyphNodeEt+0xc0>
 80175e2:	f640 00fe 	movw	r0, #2302	; 0x8fe
 80175e6:	4283      	cmp	r3, r0
 80175e8:	e7af      	b.n	801754a <_ZN8touchgfx12TextProvider17adjustArabicGlyphEPKNS_4FontEPKNS_9GlyphNodeEt+0x17e>
 80175ea:	f104 0c4c 	add.w	ip, r4, #76	; 0x4c
 80175ee:	4617      	mov	r7, r2
 80175f0:	f102 0808 	add.w	r8, r2, #8
 80175f4:	4666      	mov	r6, ip
 80175f6:	6838      	ldr	r0, [r7, #0]
 80175f8:	6879      	ldr	r1, [r7, #4]
 80175fa:	46e6      	mov	lr, ip
 80175fc:	e8ae 0003 	stmia.w	lr!, {r0, r1}
 8017600:	3708      	adds	r7, #8
 8017602:	4547      	cmp	r7, r8
 8017604:	46f4      	mov	ip, lr
 8017606:	d1f6      	bne.n	80175f6 <_ZN8touchgfx12TextProvider17adjustArabicGlyphEPKNS_4FontEPKNS_9GlyphNodeEt+0x22a>
 8017608:	6838      	ldr	r0, [r7, #0]
 801760a:	f8ce 0000 	str.w	r0, [lr]
 801760e:	88b9      	ldrh	r1, [r7, #4]
 8017610:	f8ae 1004 	strh.w	r1, [lr, #4]
 8017614:	f9b4 005e 	ldrsh.w	r0, [r4, #94]	; 0x5e
 8017618:	f510 4f00 	cmn.w	r0, #32768	; 0x8000
 801761c:	d009      	beq.n	8017632 <_ZN8touchgfx12TextProvider17adjustArabicGlyphEPKNS_4FontEPKNS_9GlyphNodeEt+0x266>
 801761e:	7b51      	ldrb	r1, [r2, #13]
 8017620:	7992      	ldrb	r2, [r2, #6]
 8017622:	0149      	lsls	r1, r1, #5
 8017624:	f401 7180 	and.w	r1, r1, #256	; 0x100
 8017628:	4311      	orrs	r1, r2
 801762a:	eba0 0051 	sub.w	r0, r0, r1, lsr #1
 801762e:	f884 0055 	strb.w	r0, [r4, #85]	; 0x55
 8017632:	f513 4f00 	cmn.w	r3, #32768	; 0x8000
 8017636:	b2ad      	uxth	r5, r5
 8017638:	d00d      	beq.n	8017656 <_ZN8touchgfx12TextProvider17adjustArabicGlyphEPKNS_4FontEPKNS_9GlyphNodeEt+0x28a>
 801763a:	442b      	add	r3, r5
 801763c:	b29b      	uxth	r3, r3
 801763e:	f894 2059 	ldrb.w	r2, [r4, #89]	; 0x59
 8017642:	f884 3054 	strb.w	r3, [r4, #84]	; 0x54
 8017646:	10db      	asrs	r3, r3, #3
 8017648:	f022 0260 	bic.w	r2, r2, #96	; 0x60
 801764c:	f003 0360 	and.w	r3, r3, #96	; 0x60
 8017650:	4313      	orrs	r3, r2
 8017652:	f884 3059 	strb.w	r3, [r4, #89]	; 0x59
 8017656:	f894 1059 	ldrb.w	r1, [r4, #89]	; 0x59
 801765a:	00cb      	lsls	r3, r1, #3
 801765c:	f403 7280 	and.w	r2, r3, #256	; 0x100
 8017660:	f894 3054 	ldrb.w	r3, [r4, #84]	; 0x54
 8017664:	064f      	lsls	r7, r1, #25
 8017666:	ea43 0302 	orr.w	r3, r3, r2
 801766a:	bf44      	itt	mi
 801766c:	f5a3 7300 	submi.w	r3, r3, #512	; 0x200
 8017670:	b21b      	sxthmi	r3, r3
 8017672:	f8a4 305a 	strh.w	r3, [r4, #90]	; 0x5a
 8017676:	1b5b      	subs	r3, r3, r5
 8017678:	f8a4 305c 	strh.w	r3, [r4, #92]	; 0x5c
 801767c:	4632      	mov	r2, r6
 801767e:	e6fa      	b.n	8017476 <_ZN8touchgfx12TextProvider17adjustArabicGlyphEPKNS_4FontEPKNS_9GlyphNodeEt+0xaa>
 8017680:	f104 0c4c 	add.w	ip, r4, #76	; 0x4c
 8017684:	4617      	mov	r7, r2
 8017686:	f102 0908 	add.w	r9, r2, #8
 801768a:	4666      	mov	r6, ip
 801768c:	6838      	ldr	r0, [r7, #0]
 801768e:	6879      	ldr	r1, [r7, #4]
 8017690:	46e0      	mov	r8, ip
 8017692:	e8a8 0003 	stmia.w	r8!, {r0, r1}
 8017696:	3708      	adds	r7, #8
 8017698:	454f      	cmp	r7, r9
 801769a:	46c4      	mov	ip, r8
 801769c:	d1f6      	bne.n	801768c <_ZN8touchgfx12TextProvider17adjustArabicGlyphEPKNS_4FontEPKNS_9GlyphNodeEt+0x2c0>
 801769e:	6838      	ldr	r0, [r7, #0]
 80176a0:	f8c8 0000 	str.w	r0, [r8]
 80176a4:	88b9      	ldrh	r1, [r7, #4]
 80176a6:	f8a8 1004 	strh.w	r1, [r8, #4]
 80176aa:	f9b4 005e 	ldrsh.w	r0, [r4, #94]	; 0x5e
 80176ae:	f510 4f00 	cmn.w	r0, #32768	; 0x8000
 80176b2:	d009      	beq.n	80176c8 <_ZN8touchgfx12TextProvider17adjustArabicGlyphEPKNS_4FontEPKNS_9GlyphNodeEt+0x2fc>
 80176b4:	7b51      	ldrb	r1, [r2, #13]
 80176b6:	7992      	ldrb	r2, [r2, #6]
 80176b8:	0149      	lsls	r1, r1, #5
 80176ba:	f401 7180 	and.w	r1, r1, #256	; 0x100
 80176be:	4311      	orrs	r1, r2
 80176c0:	eba0 0051 	sub.w	r0, r0, r1, lsr #1
 80176c4:	f884 0055 	strb.w	r0, [r4, #85]	; 0x55
 80176c8:	f513 4f00 	cmn.w	r3, #32768	; 0x8000
 80176cc:	d00e      	beq.n	80176ec <_ZN8touchgfx12TextProvider17adjustArabicGlyphEPKNS_4FontEPKNS_9GlyphNodeEt+0x320>
 80176ce:	eba3 030e 	sub.w	r3, r3, lr
 80176d2:	f894 2059 	ldrb.w	r2, [r4, #89]	; 0x59
 80176d6:	b29b      	uxth	r3, r3
 80176d8:	f884 3054 	strb.w	r3, [r4, #84]	; 0x54
 80176dc:	10db      	asrs	r3, r3, #3
 80176de:	f003 0360 	and.w	r3, r3, #96	; 0x60
 80176e2:	f022 0260 	bic.w	r2, r2, #96	; 0x60
 80176e6:	4313      	orrs	r3, r2
 80176e8:	f884 3059 	strb.w	r3, [r4, #89]	; 0x59
 80176ec:	f894 1059 	ldrb.w	r1, [r4, #89]	; 0x59
 80176f0:	00cb      	lsls	r3, r1, #3
 80176f2:	f403 7280 	and.w	r2, r3, #256	; 0x100
 80176f6:	f894 3054 	ldrb.w	r3, [r4, #84]	; 0x54
 80176fa:	0648      	lsls	r0, r1, #25
 80176fc:	ea43 0302 	orr.w	r3, r3, r2
 8017700:	bf44      	itt	mi
 8017702:	f5a3 7300 	submi.w	r3, r3, #512	; 0x200
 8017706:	b21b      	sxthmi	r3, r3
 8017708:	1b5d      	subs	r5, r3, r5
 801770a:	f8a4 505c 	strh.w	r5, [r4, #92]	; 0x5c
 801770e:	e7b5      	b.n	801767c <_ZN8touchgfx12TextProvider17adjustArabicGlyphEPKNS_4FontEPKNS_9GlyphNodeEt+0x2b0>

08017710 <_ZN8touchgfx12TextProvider15getNextLigatureEhPKNS_4FontERPKNS_9GlyphNodeE>:
 8017710:	e92d 41f0 	stmdb	sp!, {r4, r5, r6, r7, r8, lr}
 8017714:	461e      	mov	r6, r3
 8017716:	8ec3      	ldrh	r3, [r0, #54]	; 0x36
 8017718:	eb00 0343 	add.w	r3, r0, r3, lsl #1
 801771c:	4604      	mov	r4, r0
 801771e:	4617      	mov	r7, r2
 8017720:	f8b3 8022 	ldrh.w	r8, [r3, #34]	; 0x22
 8017724:	f7f0 fc90 	bl	8008048 <_ZN8touchgfx12TextProvider15getNextLigatureEh>
 8017728:	4605      	mov	r5, r0
 801772a:	b918      	cbnz	r0, 8017734 <_ZN8touchgfx12TextProvider15getNextLigatureEhPKNS_4FontERPKNS_9GlyphNodeE+0x24>
 801772c:	6030      	str	r0, [r6, #0]
 801772e:	4628      	mov	r0, r5
 8017730:	e8bd 81f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, pc}
 8017734:	683b      	ldr	r3, [r7, #0]
 8017736:	4601      	mov	r1, r0
 8017738:	68db      	ldr	r3, [r3, #12]
 801773a:	4638      	mov	r0, r7
 801773c:	4798      	blx	r3
 801773e:	f5a8 63c0 	sub.w	r3, r8, #1536	; 0x600
 8017742:	f5b3 7f40 	cmp.w	r3, #768	; 0x300
 8017746:	4602      	mov	r2, r0
 8017748:	6030      	str	r0, [r6, #0]
 801774a:	d213      	bcs.n	8017774 <_ZN8touchgfx12TextProvider15getNextLigatureEhPKNS_4FontERPKNS_9GlyphNodeE+0x64>
 801774c:	4643      	mov	r3, r8
 801774e:	4639      	mov	r1, r7
 8017750:	4620      	mov	r0, r4
 8017752:	f7ff fe3b 	bl	80173cc <_ZN8touchgfx12TextProvider17adjustArabicGlyphEPKNS_4FontEPKNS_9GlyphNodeEt>
 8017756:	6030      	str	r0, [r6, #0]
 8017758:	6833      	ldr	r3, [r6, #0]
 801775a:	b143      	cbz	r3, 801776e <_ZN8touchgfx12TextProvider15getNextLigatureEhPKNS_4FontERPKNS_9GlyphNodeE+0x5e>
 801775c:	7b5a      	ldrb	r2, [r3, #13]
 801775e:	7a9b      	ldrb	r3, [r3, #10]
 8017760:	0052      	lsls	r2, r2, #1
 8017762:	f402 7280 	and.w	r2, r2, #256	; 0x100
 8017766:	4313      	orrs	r3, r2
 8017768:	bf0c      	ite	eq
 801776a:	2301      	moveq	r3, #1
 801776c:	2300      	movne	r3, #0
 801776e:	f884 3061 	strb.w	r3, [r4, #97]	; 0x61
 8017772:	e7dc      	b.n	801772e <_ZN8touchgfx12TextProvider15getNextLigatureEhPKNS_4FontERPKNS_9GlyphNodeE+0x1e>
 8017774:	f5a5 6360 	sub.w	r3, r5, #3584	; 0xe00
 8017778:	b29b      	uxth	r3, r3
 801777a:	2b7f      	cmp	r3, #127	; 0x7f
 801777c:	d804      	bhi.n	8017788 <_ZN8touchgfx12TextProvider15getNextLigatureEhPKNS_4FontERPKNS_9GlyphNodeE+0x78>
 801777e:	4639      	mov	r1, r7
 8017780:	4620      	mov	r0, r4
 8017782:	f7ff fd17 	bl	80171b4 <_ZN8touchgfx12TextProvider15adjustThaiGlyphEPKNS_4FontEPKNS_9GlyphNodeE>
 8017786:	e7e6      	b.n	8017756 <_ZN8touchgfx12TextProvider15getNextLigatureEhPKNS_4FontERPKNS_9GlyphNodeE+0x46>
 8017788:	f894 3061 	ldrb.w	r3, [r4, #97]	; 0x61
 801778c:	2b00      	cmp	r3, #0
 801778e:	d0e3      	beq.n	8017758 <_ZN8touchgfx12TextProvider15getNextLigatureEhPKNS_4FontERPKNS_9GlyphNodeE+0x48>
 8017790:	f640 1302 	movw	r3, #2306	; 0x902
 8017794:	429d      	cmp	r5, r3
 8017796:	d1df      	bne.n	8017758 <_ZN8touchgfx12TextProvider15getNextLigatureEhPKNS_4FontERPKNS_9GlyphNodeE+0x48>
 8017798:	4601      	mov	r1, r0
 801779a:	4620      	mov	r0, r4
 801779c:	f7ff fcdb 	bl	8017156 <_ZN8touchgfx12TextProvider16adjustHindiGlyphEPKNS_9GlyphNodeE>
 80177a0:	e7d9      	b.n	8017756 <_ZN8touchgfx12TextProvider15getNextLigatureEhPKNS_4FontERPKNS_9GlyphNodeE+0x46>

080177a2 <_ZN8touchgfx12TextProvider15getNextLigatureEhPKNS_4FontERPKNS_9GlyphNodeERPKhRh>:
 80177a2:	e92d 43f8 	stmdb	sp!, {r3, r4, r5, r6, r7, r8, r9, lr}
 80177a6:	461e      	mov	r6, r3
 80177a8:	8ec3      	ldrh	r3, [r0, #54]	; 0x36
 80177aa:	eb00 0343 	add.w	r3, r0, r3, lsl #1
 80177ae:	4604      	mov	r4, r0
 80177b0:	4617      	mov	r7, r2
 80177b2:	f8b3 8022 	ldrh.w	r8, [r3, #34]	; 0x22
 80177b6:	f7f0 fc47 	bl	8008048 <_ZN8touchgfx12TextProvider15getNextLigatureEh>
 80177ba:	4605      	mov	r5, r0
 80177bc:	b918      	cbnz	r0, 80177c6 <_ZN8touchgfx12TextProvider15getNextLigatureEhPKNS_4FontERPKNS_9GlyphNodeERPKhRh+0x24>
 80177be:	6030      	str	r0, [r6, #0]
 80177c0:	4628      	mov	r0, r5
 80177c2:	e8bd 83f8 	ldmia.w	sp!, {r3, r4, r5, r6, r7, r8, r9, pc}
 80177c6:	683b      	ldr	r3, [r7, #0]
 80177c8:	4601      	mov	r1, r0
 80177ca:	f8d3 9008 	ldr.w	r9, [r3, #8]
 80177ce:	4638      	mov	r0, r7
 80177d0:	e9dd 2308 	ldrd	r2, r3, [sp, #32]
 80177d4:	47c8      	blx	r9
 80177d6:	f5a8 63c0 	sub.w	r3, r8, #1536	; 0x600
 80177da:	f5b3 7f40 	cmp.w	r3, #768	; 0x300
 80177de:	4602      	mov	r2, r0
 80177e0:	6030      	str	r0, [r6, #0]
 80177e2:	d213      	bcs.n	801780c <_ZN8touchgfx12TextProvider15getNextLigatureEhPKNS_4FontERPKNS_9GlyphNodeERPKhRh+0x6a>
 80177e4:	4643      	mov	r3, r8
 80177e6:	4639      	mov	r1, r7
 80177e8:	4620      	mov	r0, r4
 80177ea:	f7ff fdef 	bl	80173cc <_ZN8touchgfx12TextProvider17adjustArabicGlyphEPKNS_4FontEPKNS_9GlyphNodeEt>
 80177ee:	6030      	str	r0, [r6, #0]
 80177f0:	6833      	ldr	r3, [r6, #0]
 80177f2:	b143      	cbz	r3, 8017806 <_ZN8touchgfx12TextProvider15getNextLigatureEhPKNS_4FontERPKNS_9GlyphNodeERPKhRh+0x64>
 80177f4:	7b5a      	ldrb	r2, [r3, #13]
 80177f6:	7a9b      	ldrb	r3, [r3, #10]
 80177f8:	0052      	lsls	r2, r2, #1
 80177fa:	f402 7280 	and.w	r2, r2, #256	; 0x100
 80177fe:	4313      	orrs	r3, r2
 8017800:	bf0c      	ite	eq
 8017802:	2301      	moveq	r3, #1
 8017804:	2300      	movne	r3, #0
 8017806:	f884 3061 	strb.w	r3, [r4, #97]	; 0x61
 801780a:	e7d9      	b.n	80177c0 <_ZN8touchgfx12TextProvider15getNextLigatureEhPKNS_4FontERPKNS_9GlyphNodeERPKhRh+0x1e>
 801780c:	f5a5 6360 	sub.w	r3, r5, #3584	; 0xe00
 8017810:	b29b      	uxth	r3, r3
 8017812:	2b7f      	cmp	r3, #127	; 0x7f
 8017814:	d804      	bhi.n	8017820 <_ZN8touchgfx12TextProvider15getNextLigatureEhPKNS_4FontERPKNS_9GlyphNodeERPKhRh+0x7e>
 8017816:	4639      	mov	r1, r7
 8017818:	4620      	mov	r0, r4
 801781a:	f7ff fccb 	bl	80171b4 <_ZN8touchgfx12TextProvider15adjustThaiGlyphEPKNS_4FontEPKNS_9GlyphNodeE>
 801781e:	e7e6      	b.n	80177ee <_ZN8touchgfx12TextProvider15getNextLigatureEhPKNS_4FontERPKNS_9GlyphNodeERPKhRh+0x4c>
 8017820:	f894 3061 	ldrb.w	r3, [r4, #97]	; 0x61
 8017824:	2b00      	cmp	r3, #0
 8017826:	d0e3      	beq.n	80177f0 <_ZN8touchgfx12TextProvider15getNextLigatureEhPKNS_4FontERPKNS_9GlyphNodeERPKhRh+0x4e>
 8017828:	f640 1302 	movw	r3, #2306	; 0x902
 801782c:	429d      	cmp	r5, r3
 801782e:	d1df      	bne.n	80177f0 <_ZN8touchgfx12TextProvider15getNextLigatureEhPKNS_4FontERPKNS_9GlyphNodeERPKhRh+0x4e>
 8017830:	4601      	mov	r1, r0
 8017832:	4620      	mov	r0, r4
 8017834:	f7ff fc8f 	bl	8017156 <_ZN8touchgfx12TextProvider16adjustHindiGlyphEPKNS_9GlyphNodeE>
 8017838:	e7d9      	b.n	80177ee <_ZN8touchgfx12TextProvider15getNextLigatureEhPKNS_4FontERPKNS_9GlyphNodeERPKhRh+0x4c>

0801783a <_ZN8touchgfx12TextProvider15fillInputBufferEv>:
 801783a:	b510      	push	{r4, lr}
 801783c:	4604      	mov	r4, r0
 801783e:	f8b4 1040 	ldrh.w	r1, [r4, #64]	; 0x40
 8017842:	8f23      	ldrh	r3, [r4, #56]	; 0x38
 8017844:	b1f1      	cbz	r1, 8017884 <_ZN8touchgfx12TextProvider15fillInputBufferEv+0x4a>
 8017846:	2b0a      	cmp	r3, #10
 8017848:	d02f      	beq.n	80178aa <_ZN8touchgfx12TextProvider15fillInputBufferEv+0x70>
 801784a:	8fe2      	ldrh	r2, [r4, #62]	; 0x3e
 801784c:	eb04 0042 	add.w	r0, r4, r2, lsl #1
 8017850:	3901      	subs	r1, #1
 8017852:	8f40      	ldrh	r0, [r0, #58]	; 0x3a
 8017854:	f8a4 1040 	strh.w	r1, [r4, #64]	; 0x40
 8017858:	1c51      	adds	r1, r2, #1
 801785a:	b289      	uxth	r1, r1
 801785c:	2901      	cmp	r1, #1
 801785e:	bf84      	itt	hi
 8017860:	f102 32ff 	addhi.w	r2, r2, #4294967295
 8017864:	87e2      	strhhi	r2, [r4, #62]	; 0x3e
 8017866:	f103 0201 	add.w	r2, r3, #1
 801786a:	8722      	strh	r2, [r4, #56]	; 0x38
 801786c:	8ee2      	ldrh	r2, [r4, #54]	; 0x36
 801786e:	bf98      	it	ls
 8017870:	87e1      	strhls	r1, [r4, #62]	; 0x3e
 8017872:	4413      	add	r3, r2
 8017874:	b29b      	uxth	r3, r3
 8017876:	2b09      	cmp	r3, #9
 8017878:	bf88      	it	hi
 801787a:	3b0a      	subhi	r3, #10
 801787c:	eb04 0343 	add.w	r3, r4, r3, lsl #1
 8017880:	8458      	strh	r0, [r3, #34]	; 0x22
 8017882:	e7dc      	b.n	801783e <_ZN8touchgfx12TextProvider15fillInputBufferEv+0x4>
 8017884:	8f23      	ldrh	r3, [r4, #56]	; 0x38
 8017886:	2b0a      	cmp	r3, #10
 8017888:	d00f      	beq.n	80178aa <_ZN8touchgfx12TextProvider15fillInputBufferEv+0x70>
 801788a:	4620      	mov	r0, r4
 801788c:	f7ff fc11 	bl	80170b2 <_ZN8touchgfx12TextProvider19getNextCharInternalEv>
 8017890:	8f23      	ldrh	r3, [r4, #56]	; 0x38
 8017892:	1c5a      	adds	r2, r3, #1
 8017894:	8722      	strh	r2, [r4, #56]	; 0x38
 8017896:	8ee2      	ldrh	r2, [r4, #54]	; 0x36
 8017898:	4413      	add	r3, r2
 801789a:	b29b      	uxth	r3, r3
 801789c:	2b09      	cmp	r3, #9
 801789e:	bf88      	it	hi
 80178a0:	3b0a      	subhi	r3, #10
 80178a2:	eb04 0343 	add.w	r3, r4, r3, lsl #1
 80178a6:	8458      	strh	r0, [r3, #34]	; 0x22
 80178a8:	e7ec      	b.n	8017884 <_ZN8touchgfx12TextProvider15fillInputBufferEv+0x4a>
 80178aa:	bd10      	pop	{r4, pc}

080178ac <_ZN8touchgfx12TextProvider11getNextCharEv>:
 80178ac:	b538      	push	{r3, r4, r5, lr}
 80178ae:	8ec3      	ldrh	r3, [r0, #54]	; 0x36
 80178b0:	eb00 0243 	add.w	r2, r0, r3, lsl #1
 80178b4:	4604      	mov	r4, r0
 80178b6:	8c55      	ldrh	r5, [r2, #34]	; 0x22
 80178b8:	8f02      	ldrh	r2, [r0, #56]	; 0x38
 80178ba:	3a01      	subs	r2, #1
 80178bc:	8702      	strh	r2, [r0, #56]	; 0x38
 80178be:	1c5a      	adds	r2, r3, #1
 80178c0:	b292      	uxth	r2, r2
 80178c2:	2a09      	cmp	r2, #9
 80178c4:	bf86      	itte	hi
 80178c6:	3b09      	subhi	r3, #9
 80178c8:	86c3      	strhhi	r3, [r0, #54]	; 0x36
 80178ca:	86c2      	strhls	r2, [r0, #54]	; 0x36
 80178cc:	f7ff ffb5 	bl	801783a <_ZN8touchgfx12TextProvider15fillInputBufferEv>
 80178d0:	8c23      	ldrh	r3, [r4, #32]
 80178d2:	2b01      	cmp	r3, #1
 80178d4:	bf9c      	itt	ls
 80178d6:	3301      	addls	r3, #1
 80178d8:	8423      	strhls	r3, [r4, #32]
 80178da:	8be3      	ldrh	r3, [r4, #30]
 80178dc:	b90b      	cbnz	r3, 80178e2 <_ZN8touchgfx12TextProvider11getNextCharEv+0x36>
 80178de:	2302      	movs	r3, #2
 80178e0:	83e3      	strh	r3, [r4, #30]
 80178e2:	8be3      	ldrh	r3, [r4, #30]
 80178e4:	3b01      	subs	r3, #1
 80178e6:	b29b      	uxth	r3, r3
 80178e8:	83e3      	strh	r3, [r4, #30]
 80178ea:	eb04 0443 	add.w	r4, r4, r3, lsl #1
 80178ee:	4628      	mov	r0, r5
 80178f0:	8365      	strh	r5, [r4, #26]
 80178f2:	bd38      	pop	{r3, r4, r5, pc}

080178f4 <_ZN8touchgfx12TextProvider22replaceInputCharactersEttPKt>:
 80178f4:	428a      	cmp	r2, r1
 80178f6:	e92d 47f0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, lr}
 80178fa:	8ec7      	ldrh	r7, [r0, #54]	; 0x36
 80178fc:	d931      	bls.n	8017962 <_ZN8touchgfx12TextProvider22replaceInputCharactersEttPKt+0x6e>
 80178fe:	8f05      	ldrh	r5, [r0, #56]	; 0x38
 8017900:	f8b0 8040 	ldrh.w	r8, [r0, #64]	; 0x40
 8017904:	f8b0 c03e 	ldrh.w	ip, [r0, #62]	; 0x3e
 8017908:	19ee      	adds	r6, r5, r7
 801790a:	1a54      	subs	r4, r2, r1
 801790c:	3e01      	subs	r6, #1
 801790e:	fa1f fe84 	uxth.w	lr, r4
 8017912:	b2b4      	uxth	r4, r6
 8017914:	eba4 090e 	sub.w	r9, r4, lr
 8017918:	fa1f f989 	uxth.w	r9, r9
 801791c:	2c09      	cmp	r4, #9
 801791e:	4626      	mov	r6, r4
 8017920:	bf88      	it	hi
 8017922:	f1a4 060a 	subhi.w	r6, r4, #10
 8017926:	f1bc 0f00 	cmp.w	ip, #0
 801792a:	bf08      	it	eq
 801792c:	f04f 0c02 	moveq.w	ip, #2
 8017930:	eb00 0646 	add.w	r6, r0, r6, lsl #1
 8017934:	f10c 3cff 	add.w	ip, ip, #4294967295
 8017938:	fa1f fc8c 	uxth.w	ip, ip
 801793c:	3c01      	subs	r4, #1
 801793e:	f8b6 a022 	ldrh.w	sl, [r6, #34]	; 0x22
 8017942:	b2a4      	uxth	r4, r4
 8017944:	eb00 064c 	add.w	r6, r0, ip, lsl #1
 8017948:	454c      	cmp	r4, r9
 801794a:	f8a6 a03a 	strh.w	sl, [r6, #58]	; 0x3a
 801794e:	d1e5      	bne.n	801791c <_ZN8touchgfx12TextProvider22replaceInputCharactersEttPKt+0x28>
 8017950:	eba5 050e 	sub.w	r5, r5, lr
 8017954:	eb0e 0408 	add.w	r4, lr, r8
 8017958:	8705      	strh	r5, [r0, #56]	; 0x38
 801795a:	f8a0 4040 	strh.w	r4, [r0, #64]	; 0x40
 801795e:	f8a0 c03e 	strh.w	ip, [r0, #62]	; 0x3e
 8017962:	8f04      	ldrh	r4, [r0, #56]	; 0x38
 8017964:	1a64      	subs	r4, r4, r1
 8017966:	4439      	add	r1, r7
 8017968:	b289      	uxth	r1, r1
 801796a:	2909      	cmp	r1, #9
 801796c:	bf88      	it	hi
 801796e:	390a      	subhi	r1, #10
 8017970:	8704      	strh	r4, [r0, #56]	; 0x38
 8017972:	86c1      	strh	r1, [r0, #54]	; 0x36
 8017974:	250a      	movs	r5, #10
 8017976:	b18a      	cbz	r2, 801799c <_ZN8touchgfx12TextProvider22replaceInputCharactersEttPKt+0xa8>
 8017978:	8f01      	ldrh	r1, [r0, #56]	; 0x38
 801797a:	3a01      	subs	r2, #1
 801797c:	b292      	uxth	r2, r2
 801797e:	3101      	adds	r1, #1
 8017980:	f833 4012 	ldrh.w	r4, [r3, r2, lsl #1]
 8017984:	8701      	strh	r1, [r0, #56]	; 0x38
 8017986:	8ec1      	ldrh	r1, [r0, #54]	; 0x36
 8017988:	b901      	cbnz	r1, 801798c <_ZN8touchgfx12TextProvider22replaceInputCharactersEttPKt+0x98>
 801798a:	86c5      	strh	r5, [r0, #54]	; 0x36
 801798c:	8ec1      	ldrh	r1, [r0, #54]	; 0x36
 801798e:	3901      	subs	r1, #1
 8017990:	b289      	uxth	r1, r1
 8017992:	86c1      	strh	r1, [r0, #54]	; 0x36
 8017994:	eb00 0141 	add.w	r1, r0, r1, lsl #1
 8017998:	844c      	strh	r4, [r1, #34]	; 0x22
 801799a:	e7ec      	b.n	8017976 <_ZN8touchgfx12TextProvider22replaceInputCharactersEttPKt+0x82>
 801799c:	e8bd 47f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, lr}
 80179a0:	f7ff bf4b 	b.w	801783a <_ZN8touchgfx12TextProvider15fillInputBufferEv>

080179a4 <_ZN8touchgfx12TextProvider13gsubRuleMatchEPKtttt>:
 80179a4:	b570      	push	{r4, r5, r6, lr}
 80179a6:	2500      	movs	r5, #0
 80179a8:	4295      	cmp	r5, r2
 80179aa:	d011      	beq.n	80179d0 <_ZN8touchgfx12TextProvider13gsubRuleMatchEPKtttt+0x2c>
 80179ac:	8bc4      	ldrh	r4, [r0, #30]
 80179ae:	f831 6b02 	ldrh.w	r6, [r1], #2
 80179b2:	4414      	add	r4, r2
 80179b4:	3c01      	subs	r4, #1
 80179b6:	1b64      	subs	r4, r4, r5
 80179b8:	b2a4      	uxth	r4, r4
 80179ba:	2c01      	cmp	r4, #1
 80179bc:	bf88      	it	hi
 80179be:	3c02      	subhi	r4, #2
 80179c0:	eb00 0444 	add.w	r4, r0, r4, lsl #1
 80179c4:	8b64      	ldrh	r4, [r4, #26]
 80179c6:	42b4      	cmp	r4, r6
 80179c8:	d117      	bne.n	80179fa <_ZN8touchgfx12TextProvider13gsubRuleMatchEPKtttt+0x56>
 80179ca:	3501      	adds	r5, #1
 80179cc:	b2ad      	uxth	r5, r5
 80179ce:	e7eb      	b.n	80179a8 <_ZN8touchgfx12TextProvider13gsubRuleMatchEPKtttt+0x4>
 80179d0:	f8bd 2010 	ldrh.w	r2, [sp, #16]
 80179d4:	2400      	movs	r4, #0
 80179d6:	4413      	add	r3, r2
 80179d8:	b2a2      	uxth	r2, r4
 80179da:	429a      	cmp	r2, r3
 80179dc:	da0f      	bge.n	80179fe <_ZN8touchgfx12TextProvider13gsubRuleMatchEPKtttt+0x5a>
 80179de:	8ec6      	ldrh	r6, [r0, #54]	; 0x36
 80179e0:	f831 5014 	ldrh.w	r5, [r1, r4, lsl #1]
 80179e4:	4432      	add	r2, r6
 80179e6:	b292      	uxth	r2, r2
 80179e8:	2a09      	cmp	r2, #9
 80179ea:	bf88      	it	hi
 80179ec:	3a0a      	subhi	r2, #10
 80179ee:	eb00 0242 	add.w	r2, r0, r2, lsl #1
 80179f2:	3401      	adds	r4, #1
 80179f4:	8c52      	ldrh	r2, [r2, #34]	; 0x22
 80179f6:	42aa      	cmp	r2, r5
 80179f8:	d0ee      	beq.n	80179d8 <_ZN8touchgfx12TextProvider13gsubRuleMatchEPKtttt+0x34>
 80179fa:	2000      	movs	r0, #0
 80179fc:	bd70      	pop	{r4, r5, r6, pc}
 80179fe:	2001      	movs	r0, #1
 8017a00:	e7fc      	b.n	80179fc <_ZN8touchgfx12TextProvider13gsubRuleMatchEPKtttt+0x58>

08017a02 <_ZN8touchgfx12TextProvider14applyGsubRulesEPKtt>:
 8017a02:	e92d 4ff7 	stmdb	sp!, {r0, r1, r2, r4, r5, r6, r7, r8, r9, sl, fp, lr}
 8017a06:	4605      	mov	r5, r0
 8017a08:	4616      	mov	r6, r2
 8017a0a:	1c8c      	adds	r4, r1, #2
 8017a0c:	8809      	ldrh	r1, [r1, #0]
 8017a0e:	ea4f 3a11 	mov.w	sl, r1, lsr #12
 8017a12:	f834 301a 	ldrh.w	r3, [r4, sl, lsl #1]
 8017a16:	42b3      	cmp	r3, r6
 8017a18:	d124      	bne.n	8017a64 <_ZN8touchgfx12TextProvider14applyGsubRulesEPKtt+0x62>
 8017a1a:	f3c1 2903 	ubfx	r9, r1, #8, #4
 8017a1e:	f3c1 1803 	ubfx	r8, r1, #4, #4
 8017a22:	f001 070f 	and.w	r7, r1, #15
 8017a26:	f8cd 8000 	str.w	r8, [sp]
 8017a2a:	464b      	mov	r3, r9
 8017a2c:	4652      	mov	r2, sl
 8017a2e:	4621      	mov	r1, r4
 8017a30:	4628      	mov	r0, r5
 8017a32:	f7ff ffb7 	bl	80179a4 <_ZN8touchgfx12TextProvider13gsubRuleMatchEPKtttt>
 8017a36:	4683      	mov	fp, r0
 8017a38:	b168      	cbz	r0, 8017a56 <_ZN8touchgfx12TextProvider14applyGsubRulesEPKtt+0x54>
 8017a3a:	eb0a 0109 	add.w	r1, sl, r9
 8017a3e:	4441      	add	r1, r8
 8017a40:	eb04 0341 	add.w	r3, r4, r1, lsl #1
 8017a44:	463a      	mov	r2, r7
 8017a46:	4649      	mov	r1, r9
 8017a48:	4628      	mov	r0, r5
 8017a4a:	f7ff ff53 	bl	80178f4 <_ZN8touchgfx12TextProvider22replaceInputCharactersEttPKt>
 8017a4e:	4658      	mov	r0, fp
 8017a50:	b003      	add	sp, #12
 8017a52:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
 8017a56:	eb07 010a 	add.w	r1, r7, sl
 8017a5a:	4449      	add	r1, r9
 8017a5c:	4441      	add	r1, r8
 8017a5e:	eb04 0141 	add.w	r1, r4, r1, lsl #1
 8017a62:	e7d2      	b.n	8017a0a <_ZN8touchgfx12TextProvider14applyGsubRulesEPKtt+0x8>
 8017a64:	f04f 0b00 	mov.w	fp, #0
 8017a68:	e7f1      	b.n	8017a4e <_ZN8touchgfx12TextProvider14applyGsubRulesEPKtt+0x4c>

08017a6a <_ZNK8touchgfx12TextProvider21gsubTableBinarySearchEtPKtt>:
 8017a6a:	b570      	push	{r4, r5, r6, lr}
 8017a6c:	8810      	ldrh	r0, [r2, #0]
 8017a6e:	4298      	cmp	r0, r3
 8017a70:	d817      	bhi.n	8017aa2 <_ZNK8touchgfx12TextProvider21gsubTableBinarySearchEtPKtt+0x38>
 8017a72:	1e48      	subs	r0, r1, #1
 8017a74:	f832 0020 	ldrh.w	r0, [r2, r0, lsl #2]
 8017a78:	4298      	cmp	r0, r3
 8017a7a:	d312      	bcc.n	8017aa2 <_ZNK8touchgfx12TextProvider21gsubTableBinarySearchEtPKtt+0x38>
 8017a7c:	2400      	movs	r4, #0
 8017a7e:	428c      	cmp	r4, r1
 8017a80:	d20f      	bcs.n	8017aa2 <_ZNK8touchgfx12TextProvider21gsubTableBinarySearchEtPKtt+0x38>
 8017a82:	1860      	adds	r0, r4, r1
 8017a84:	1040      	asrs	r0, r0, #1
 8017a86:	0085      	lsls	r5, r0, #2
 8017a88:	f832 6020 	ldrh.w	r6, [r2, r0, lsl #2]
 8017a8c:	42b3      	cmp	r3, r6
 8017a8e:	d902      	bls.n	8017a96 <_ZNK8touchgfx12TextProvider21gsubTableBinarySearchEtPKtt+0x2c>
 8017a90:	3001      	adds	r0, #1
 8017a92:	b284      	uxth	r4, r0
 8017a94:	e7f3      	b.n	8017a7e <_ZNK8touchgfx12TextProvider21gsubTableBinarySearchEtPKtt+0x14>
 8017a96:	d201      	bcs.n	8017a9c <_ZNK8touchgfx12TextProvider21gsubTableBinarySearchEtPKtt+0x32>
 8017a98:	b281      	uxth	r1, r0
 8017a9a:	e7f0      	b.n	8017a7e <_ZNK8touchgfx12TextProvider21gsubTableBinarySearchEtPKtt+0x14>
 8017a9c:	442a      	add	r2, r5
 8017a9e:	8850      	ldrh	r0, [r2, #2]
 8017aa0:	bd70      	pop	{r4, r5, r6, pc}
 8017aa2:	2000      	movs	r0, #0
 8017aa4:	e7fc      	b.n	8017aa0 <_ZNK8touchgfx12TextProvider21gsubTableBinarySearchEtPKtt+0x36>

08017aa6 <_ZN8touchgfx12TextProvider16substituteGlyphsEv>:
 8017aa6:	e92d 41f0 	stmdb	sp!, {r4, r5, r6, r7, r8, lr}
 8017aaa:	6c45      	ldr	r5, [r0, #68]	; 0x44
 8017aac:	886f      	ldrh	r7, [r5, #2]
 8017aae:	4604      	mov	r4, r0
 8017ab0:	087f      	lsrs	r7, r7, #1
 8017ab2:	260b      	movs	r6, #11
 8017ab4:	3e01      	subs	r6, #1
 8017ab6:	d013      	beq.n	8017ae0 <_ZN8touchgfx12TextProvider16substituteGlyphsEv+0x3a>
 8017ab8:	8ee3      	ldrh	r3, [r4, #54]	; 0x36
 8017aba:	eb04 0343 	add.w	r3, r4, r3, lsl #1
 8017abe:	462a      	mov	r2, r5
 8017ac0:	f8b3 8022 	ldrh.w	r8, [r3, #34]	; 0x22
 8017ac4:	4639      	mov	r1, r7
 8017ac6:	4643      	mov	r3, r8
 8017ac8:	4620      	mov	r0, r4
 8017aca:	f7ff ffce 	bl	8017a6a <_ZNK8touchgfx12TextProvider21gsubTableBinarySearchEtPKtt>
 8017ace:	b138      	cbz	r0, 8017ae0 <_ZN8touchgfx12TextProvider16substituteGlyphsEv+0x3a>
 8017ad0:	eb05 0140 	add.w	r1, r5, r0, lsl #1
 8017ad4:	4642      	mov	r2, r8
 8017ad6:	4620      	mov	r0, r4
 8017ad8:	f7ff ff93 	bl	8017a02 <_ZN8touchgfx12TextProvider14applyGsubRulesEPKtt>
 8017adc:	2800      	cmp	r0, #0
 8017ade:	d1e9      	bne.n	8017ab4 <_ZN8touchgfx12TextProvider16substituteGlyphsEv+0xe>
 8017ae0:	e8bd 81f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, pc}

08017ae4 <_ZN8touchgfx9GradientsC1EPKNS_7Point3DE>:
 8017ae4:	b570      	push	{r4, r5, r6, lr}
 8017ae6:	694a      	ldr	r2, [r1, #20]
 8017ae8:	6a8d      	ldr	r5, [r1, #40]	; 0x28
 8017aea:	684b      	ldr	r3, [r1, #4]
 8017aec:	6ace      	ldr	r6, [r1, #44]	; 0x2c
 8017aee:	1b54      	subs	r4, r2, r5
 8017af0:	f000 8106 	beq.w	8017d00 <_ZN8touchgfx9GradientsC1EPKNS_7Point3DE+0x21c>
 8017af4:	1b9b      	subs	r3, r3, r6
 8017af6:	d003      	beq.n	8017b00 <_ZN8touchgfx9GradientsC1EPKNS_7Point3DE+0x1c>
 8017af8:	4363      	muls	r3, r4
 8017afa:	2210      	movs	r2, #16
 8017afc:	fb93 f3f2 	sdiv	r3, r3, r2
 8017b00:	680c      	ldr	r4, [r1, #0]
 8017b02:	698a      	ldr	r2, [r1, #24]
 8017b04:	1b65      	subs	r5, r4, r5
 8017b06:	f000 80fd 	beq.w	8017d04 <_ZN8touchgfx9GradientsC1EPKNS_7Point3DE+0x220>
 8017b0a:	1b92      	subs	r2, r2, r6
 8017b0c:	d003      	beq.n	8017b16 <_ZN8touchgfx9GradientsC1EPKNS_7Point3DE+0x32>
 8017b0e:	436a      	muls	r2, r5
 8017b10:	2410      	movs	r4, #16
 8017b12:	fb92 f2f4 	sdiv	r2, r2, r4
 8017b16:	1a9b      	subs	r3, r3, r2
 8017b18:	ee07 3a90 	vmov	s15, r3
 8017b1c:	ed9f 4a88 	vldr	s8, [pc, #544]	; 8017d40 <_ZN8touchgfx9GradientsC1EPKNS_7Point3DE+0x25c>
 8017b20:	eef8 7ae7 	vcvt.f32.s32	s15, s15
 8017b24:	eeb7 7a00 	vmov.f32	s14, #112	; 0x3f800000  1.0
 8017b28:	ee67 7a84 	vmul.f32	s15, s15, s8
 8017b2c:	460a      	mov	r2, r1
 8017b2e:	ee87 3a27 	vdiv.f32	s6, s14, s15
 8017b32:	4603      	mov	r3, r0
 8017b34:	f100 040c 	add.w	r4, r0, #12
 8017b38:	eeb1 6a43 	vneg.f32	s12, s6
 8017b3c:	edd2 7a02 	vldr	s15, [r2, #8]
 8017b40:	eec7 6a27 	vdiv.f32	s13, s14, s15
 8017b44:	3214      	adds	r2, #20
 8017b46:	ece3 6a01 	vstmia	r3!, {s13}
 8017b4a:	ed52 7a02 	vldr	s15, [r2, #-8]
 8017b4e:	ee67 7aa6 	vmul.f32	s15, s15, s13
 8017b52:	429c      	cmp	r4, r3
 8017b54:	edc3 7a02 	vstr	s15, [r3, #8]
 8017b58:	ed52 7a01 	vldr	s15, [r2, #-4]
 8017b5c:	ee67 7aa6 	vmul.f32	s15, s15, s13
 8017b60:	edc3 7a05 	vstr	s15, [r3, #20]
 8017b64:	d1ea      	bne.n	8017b3c <_ZN8touchgfx9GradientsC1EPKNS_7Point3DE+0x58>
 8017b66:	6aca      	ldr	r2, [r1, #44]	; 0x2c
 8017b68:	698b      	ldr	r3, [r1, #24]
 8017b6a:	edd0 4a02 	vldr	s9, [r0, #8]
 8017b6e:	edd0 3a00 	vldr	s7, [r0]
 8017b72:	edd0 6a01 	vldr	s13, [r0, #4]
 8017b76:	ed90 5a05 	vldr	s10, [r0, #20]
 8017b7a:	ed90 2a03 	vldr	s4, [r0, #12]
 8017b7e:	edd0 5a04 	vldr	s11, [r0, #16]
 8017b82:	ed90 1a07 	vldr	s2, [r0, #28]
 8017b86:	edd0 2a06 	vldr	s5, [r0, #24]
 8017b8a:	1a9b      	subs	r3, r3, r2
 8017b8c:	ee07 3a90 	vmov	s15, r3
 8017b90:	684b      	ldr	r3, [r1, #4]
 8017b92:	1a9b      	subs	r3, r3, r2
 8017b94:	ee07 3a10 	vmov	s14, r3
 8017b98:	eef8 7ae7 	vcvt.f32.s32	s15, s15
 8017b9c:	ee76 6ae4 	vsub.f32	s13, s13, s9
 8017ba0:	ee67 7a84 	vmul.f32	s15, s15, s8
 8017ba4:	ee73 4ae4 	vsub.f32	s9, s7, s9
 8017ba8:	eeb8 7ac7 	vcvt.f32.s32	s14, s14
 8017bac:	ee64 7ae7 	vnmul.f32	s15, s9, s15
 8017bb0:	ee27 7a04 	vmul.f32	s14, s14, s8
 8017bb4:	ee75 5ac5 	vsub.f32	s11, s11, s10
 8017bb8:	eee6 7a87 	vfma.f32	s15, s13, s14
 8017bbc:	ee32 5a45 	vsub.f32	s10, s4, s10
 8017bc0:	ee67 7a83 	vmul.f32	s15, s15, s6
 8017bc4:	edc0 7a09 	vstr	s15, [r0, #36]	; 0x24
 8017bc8:	6a8c      	ldr	r4, [r1, #40]	; 0x28
 8017bca:	694a      	ldr	r2, [r1, #20]
 8017bcc:	1b13      	subs	r3, r2, r4
 8017bce:	ee07 3a10 	vmov	s14, r3
 8017bd2:	eeb8 7ac7 	vcvt.f32.s32	s14, s14
 8017bd6:	680b      	ldr	r3, [r1, #0]
 8017bd8:	ee27 7a04 	vmul.f32	s14, s14, s8
 8017bdc:	1b1b      	subs	r3, r3, r4
 8017bde:	ee64 4ac7 	vnmul.f32	s9, s9, s14
 8017be2:	ee07 3a10 	vmov	s14, r3
 8017be6:	eeb8 7ac7 	vcvt.f32.s32	s14, s14
 8017bea:	ee27 7a04 	vmul.f32	s14, s14, s8
 8017bee:	eee6 4a87 	vfma.f32	s9, s13, s14
 8017bf2:	ee64 4a86 	vmul.f32	s9, s9, s12
 8017bf6:	edc0 4a0a 	vstr	s9, [r0, #40]	; 0x28
 8017bfa:	6aca      	ldr	r2, [r1, #44]	; 0x2c
 8017bfc:	698b      	ldr	r3, [r1, #24]
 8017bfe:	1a9b      	subs	r3, r3, r2
 8017c00:	ee06 3a90 	vmov	s13, r3
 8017c04:	684b      	ldr	r3, [r1, #4]
 8017c06:	1a9b      	subs	r3, r3, r2
 8017c08:	ee07 3a10 	vmov	s14, r3
 8017c0c:	eef8 6ae6 	vcvt.f32.s32	s13, s13
 8017c10:	eeb8 7ac7 	vcvt.f32.s32	s14, s14
 8017c14:	ee66 6a84 	vmul.f32	s13, s13, s8
 8017c18:	ee27 7a04 	vmul.f32	s14, s14, s8
 8017c1c:	ee65 6a66 	vnmul.f32	s13, s10, s13
 8017c20:	eee5 6a87 	vfma.f32	s13, s11, s14
 8017c24:	ee66 6a83 	vmul.f32	s13, s13, s6
 8017c28:	edc0 6a0b 	vstr	s13, [r0, #44]	; 0x2c
 8017c2c:	6a8c      	ldr	r4, [r1, #40]	; 0x28
 8017c2e:	694a      	ldr	r2, [r1, #20]
 8017c30:	1b13      	subs	r3, r2, r4
 8017c32:	ee07 3a10 	vmov	s14, r3
 8017c36:	eeb8 7ac7 	vcvt.f32.s32	s14, s14
 8017c3a:	680b      	ldr	r3, [r1, #0]
 8017c3c:	ee27 7a04 	vmul.f32	s14, s14, s8
 8017c40:	1b1b      	subs	r3, r3, r4
 8017c42:	ee25 5a47 	vnmul.f32	s10, s10, s14
 8017c46:	ee07 3a10 	vmov	s14, r3
 8017c4a:	eeb8 7ac7 	vcvt.f32.s32	s14, s14
 8017c4e:	ee27 7a04 	vmul.f32	s14, s14, s8
 8017c52:	eea5 5a87 	vfma.f32	s10, s11, s14
 8017c56:	edd0 5a08 	vldr	s11, [r0, #32]
 8017c5a:	ee25 5a06 	vmul.f32	s10, s10, s12
 8017c5e:	ee31 1a65 	vsub.f32	s2, s2, s11
 8017c62:	ed80 5a0c 	vstr	s10, [r0, #48]	; 0x30
 8017c66:	6aca      	ldr	r2, [r1, #44]	; 0x2c
 8017c68:	698b      	ldr	r3, [r1, #24]
 8017c6a:	1a9b      	subs	r3, r3, r2
 8017c6c:	ee07 3a10 	vmov	s14, r3
 8017c70:	684b      	ldr	r3, [r1, #4]
 8017c72:	1a9b      	subs	r3, r3, r2
 8017c74:	ee01 3a90 	vmov	s3, r3
 8017c78:	eeb8 7ac7 	vcvt.f32.s32	s14, s14
 8017c7c:	ee72 5ae5 	vsub.f32	s11, s5, s11
 8017c80:	ee27 7a04 	vmul.f32	s14, s14, s8
 8017c84:	eef8 1ae1 	vcvt.f32.s32	s3, s3
 8017c88:	ee25 7ac7 	vnmul.f32	s14, s11, s14
 8017c8c:	ee61 1a84 	vmul.f32	s3, s3, s8
 8017c90:	eea1 7a21 	vfma.f32	s14, s2, s3
 8017c94:	ee27 7a03 	vmul.f32	s14, s14, s6
 8017c98:	ed80 7a0d 	vstr	s14, [r0, #52]	; 0x34
 8017c9c:	6a8c      	ldr	r4, [r1, #40]	; 0x28
 8017c9e:	694a      	ldr	r2, [r1, #20]
 8017ca0:	1b13      	subs	r3, r2, r4
 8017ca2:	ee03 3a10 	vmov	s6, r3
 8017ca6:	eeb8 3ac3 	vcvt.f32.s32	s6, s6
 8017caa:	680b      	ldr	r3, [r1, #0]
 8017cac:	ee23 3a04 	vmul.f32	s6, s6, s8
 8017cb0:	1b1b      	subs	r3, r3, r4
 8017cb2:	ee65 5ac3 	vnmul.f32	s11, s11, s6
 8017cb6:	ee03 3a10 	vmov	s6, r3
 8017cba:	eeb8 3ac3 	vcvt.f32.s32	s6, s6
 8017cbe:	ee23 4a04 	vmul.f32	s8, s6, s8
 8017cc2:	eee1 5a04 	vfma.f32	s11, s2, s8
 8017cc6:	ee25 6a86 	vmul.f32	s12, s11, s12
 8017cca:	ee62 5a67 	vnmul.f32	s11, s4, s15
 8017cce:	ed80 6a0e 	vstr	s12, [r0, #56]	; 0x38
 8017cd2:	eee3 5aa6 	vfma.f32	s11, s7, s13
 8017cd6:	eef5 5ac0 	vcmpe.f32	s11, #0.0
 8017cda:	eef1 fa10 	vmrs	APSR_nzcv, fpscr
 8017cde:	dd13      	ble.n	8017d08 <_ZN8touchgfx9GradientsC1EPKNS_7Point3DE+0x224>
 8017ce0:	f44f 4300 	mov.w	r3, #32768	; 0x8000
 8017ce4:	ee62 7ae7 	vnmul.f32	s15, s5, s15
 8017ce8:	63c3      	str	r3, [r0, #60]	; 0x3c
 8017cea:	eee3 7a87 	vfma.f32	s15, s7, s14
 8017cee:	eef5 7ac0 	vcmpe.f32	s15, #0.0
 8017cf2:	eef1 fa10 	vmrs	APSR_nzcv, fpscr
 8017cf6:	dd15      	ble.n	8017d24 <_ZN8touchgfx9GradientsC1EPKNS_7Point3DE+0x240>
 8017cf8:	f44f 4300 	mov.w	r3, #32768	; 0x8000
 8017cfc:	6403      	str	r3, [r0, #64]	; 0x40
 8017cfe:	bd70      	pop	{r4, r5, r6, pc}
 8017d00:	4623      	mov	r3, r4
 8017d02:	e6fd      	b.n	8017b00 <_ZN8touchgfx9GradientsC1EPKNS_7Point3DE+0x1c>
 8017d04:	462a      	mov	r2, r5
 8017d06:	e706      	b.n	8017b16 <_ZN8touchgfx9GradientsC1EPKNS_7Point3DE+0x32>
 8017d08:	d502      	bpl.n	8017d10 <_ZN8touchgfx9GradientsC1EPKNS_7Point3DE+0x22c>
 8017d0a:	f647 73ff 	movw	r3, #32767	; 0x7fff
 8017d0e:	e7e9      	b.n	8017ce4 <_ZN8touchgfx9GradientsC1EPKNS_7Point3DE+0x200>
 8017d10:	ee22 2a64 	vnmul.f32	s4, s4, s9
 8017d14:	eea3 2a85 	vfma.f32	s4, s7, s10
 8017d18:	eeb5 2ac0 	vcmpe.f32	s4, #0.0
 8017d1c:	eef1 fa10 	vmrs	APSR_nzcv, fpscr
 8017d20:	dade      	bge.n	8017ce0 <_ZN8touchgfx9GradientsC1EPKNS_7Point3DE+0x1fc>
 8017d22:	e7f2      	b.n	8017d0a <_ZN8touchgfx9GradientsC1EPKNS_7Point3DE+0x226>
 8017d24:	d502      	bpl.n	8017d2c <_ZN8touchgfx9GradientsC1EPKNS_7Point3DE+0x248>
 8017d26:	f647 73ff 	movw	r3, #32767	; 0x7fff
 8017d2a:	e7e7      	b.n	8017cfc <_ZN8touchgfx9GradientsC1EPKNS_7Point3DE+0x218>
 8017d2c:	ee62 4ae4 	vnmul.f32	s9, s5, s9
 8017d30:	eee3 4a86 	vfma.f32	s9, s7, s12
 8017d34:	eef5 4ac0 	vcmpe.f32	s9, #0.0
 8017d38:	eef1 fa10 	vmrs	APSR_nzcv, fpscr
 8017d3c:	dadc      	bge.n	8017cf8 <_ZN8touchgfx9GradientsC1EPKNS_7Point3DE+0x214>
 8017d3e:	e7f2      	b.n	8017d26 <_ZN8touchgfx9GradientsC1EPKNS_7Point3DE+0x242>
 8017d40:	3d800000 	.word	0x3d800000

08017d44 <_ZN8touchgfx4EdgeC1ERKNS_9GradientsEPKNS_7Point3DEii>:
 8017d44:	e92d 47f0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, lr}
 8017d48:	2714      	movs	r7, #20
 8017d4a:	435f      	muls	r7, r3
 8017d4c:	eb02 0c07 	add.w	ip, r2, r7
 8017d50:	f8dc 5004 	ldr.w	r5, [ip, #4]
 8017d54:	f115 0e0f 	adds.w	lr, r5, #15
 8017d58:	f100 80a2 	bmi.w	8017ea0 <_ZN8touchgfx4EdgeC1ERKNS_9GradientsEPKNS_7Point3DEii+0x15c>
 8017d5c:	ea4f 1e2e 	mov.w	lr, lr, asr #4
 8017d60:	9c08      	ldr	r4, [sp, #32]
 8017d62:	f8c0 e014 	str.w	lr, [r0, #20]
 8017d66:	2614      	movs	r6, #20
 8017d68:	4366      	muls	r6, r4
 8017d6a:	eb02 0806 	add.w	r8, r2, r6
 8017d6e:	f8d8 5004 	ldr.w	r5, [r8, #4]
 8017d72:	f115 040f 	adds.w	r4, r5, #15
 8017d76:	f100 809f 	bmi.w	8017eb8 <_ZN8touchgfx4EdgeC1ERKNS_9GradientsEPKNS_7Point3DEii+0x174>
 8017d7a:	1124      	asrs	r4, r4, #4
 8017d7c:	eba4 040e 	sub.w	r4, r4, lr
 8017d80:	6184      	str	r4, [r0, #24]
 8017d82:	2c00      	cmp	r4, #0
 8017d84:	f000 808a 	beq.w	8017e9c <_ZN8touchgfx4EdgeC1ERKNS_9GradientsEPKNS_7Point3DEii+0x158>
 8017d88:	f8dc 9004 	ldr.w	r9, [ip, #4]
 8017d8c:	f8d8 4004 	ldr.w	r4, [r8, #4]
 8017d90:	5995      	ldr	r5, [r2, r6]
 8017d92:	eba4 0809 	sub.w	r8, r4, r9
 8017d96:	59d4      	ldr	r4, [r2, r7]
 8017d98:	eba5 0a04 	sub.w	sl, r5, r4
 8017d9c:	ea4f 150a 	mov.w	r5, sl, lsl #4
 8017da0:	fb0e fe05 	mul.w	lr, lr, r5
 8017da4:	fb0a ee19 	mls	lr, sl, r9, lr
 8017da8:	fb08 e404 	mla	r4, r8, r4, lr
 8017dac:	ea4f 1608 	mov.w	r6, r8, lsl #4
 8017db0:	3c01      	subs	r4, #1
 8017db2:	19a4      	adds	r4, r4, r6
 8017db4:	f100 808c 	bmi.w	8017ed0 <_ZN8touchgfx4EdgeC1ERKNS_9GradientsEPKNS_7Point3DEii+0x18c>
 8017db8:	fb94 fef6 	sdiv	lr, r4, r6
 8017dbc:	f8c0 e000 	str.w	lr, [r0]
 8017dc0:	fb06 441e 	mls	r4, r6, lr, r4
 8017dc4:	6104      	str	r4, [r0, #16]
 8017dc6:	2d00      	cmp	r5, #0
 8017dc8:	f2c0 8095 	blt.w	8017ef6 <_ZN8touchgfx4EdgeC1ERKNS_9GradientsEPKNS_7Point3DEii+0x1b2>
 8017dcc:	fb95 f4f6 	sdiv	r4, r5, r6
 8017dd0:	6044      	str	r4, [r0, #4]
 8017dd2:	fb06 5514 	mls	r5, r6, r4, r5
 8017dd6:	6085      	str	r5, [r0, #8]
 8017dd8:	60c6      	str	r6, [r0, #12]
 8017dda:	f8dc 4004 	ldr.w	r4, [ip, #4]
 8017dde:	6945      	ldr	r5, [r0, #20]
 8017de0:	59d2      	ldr	r2, [r2, r7]
 8017de2:	eddf 6a4d 	vldr	s13, [pc, #308]	; 8017f18 <_ZN8touchgfx4EdgeC1ERKNS_9GradientsEPKNS_7Point3DEii+0x1d4>
 8017de6:	ed91 6a0a 	vldr	s12, [r1, #40]	; 0x28
 8017dea:	ebc4 1405 	rsb	r4, r4, r5, lsl #4
 8017dee:	ee07 4a10 	vmov	s14, r4
 8017df2:	6804      	ldr	r4, [r0, #0]
 8017df4:	ebc2 1204 	rsb	r2, r2, r4, lsl #4
 8017df8:	ee07 2a90 	vmov	s15, r2
 8017dfc:	eeb8 7ac7 	vcvt.f32.s32	s14, s14
 8017e00:	eef8 7ae7 	vcvt.f32.s32	s15, s15
 8017e04:	eb01 0383 	add.w	r3, r1, r3, lsl #2
 8017e08:	ee27 7a26 	vmul.f32	s14, s14, s13
 8017e0c:	ee67 7aa6 	vmul.f32	s15, s15, s13
 8017e10:	edd3 6a00 	vldr	s13, [r3]
 8017e14:	eee6 6a07 	vfma.f32	s13, s12, s14
 8017e18:	ed91 6a09 	vldr	s12, [r1, #36]	; 0x24
 8017e1c:	eee6 6a27 	vfma.f32	s13, s12, s15
 8017e20:	edc0 6a07 	vstr	s13, [r0, #28]
 8017e24:	edd0 6a01 	vldr	s13, [r0, #4]
 8017e28:	edd1 5a09 	vldr	s11, [r1, #36]	; 0x24
 8017e2c:	ed91 6a0a 	vldr	s12, [r1, #40]	; 0x28
 8017e30:	eef8 6ae6 	vcvt.f32.s32	s13, s13
 8017e34:	eea6 6aa5 	vfma.f32	s12, s13, s11
 8017e38:	ed80 6a08 	vstr	s12, [r0, #32]
 8017e3c:	6a4a      	ldr	r2, [r1, #36]	; 0x24
 8017e3e:	6242      	str	r2, [r0, #36]	; 0x24
 8017e40:	edd1 5a0c 	vldr	s11, [r1, #48]	; 0x30
 8017e44:	ed93 6a03 	vldr	s12, [r3, #12]
 8017e48:	eea5 6a87 	vfma.f32	s12, s11, s14
 8017e4c:	edd1 5a0b 	vldr	s11, [r1, #44]	; 0x2c
 8017e50:	eea5 6aa7 	vfma.f32	s12, s11, s15
 8017e54:	ed80 6a0a 	vstr	s12, [r0, #40]	; 0x28
 8017e58:	edd1 5a0b 	vldr	s11, [r1, #44]	; 0x2c
 8017e5c:	ed91 6a0c 	vldr	s12, [r1, #48]	; 0x30
 8017e60:	eea6 6aa5 	vfma.f32	s12, s13, s11
 8017e64:	ed80 6a0b 	vstr	s12, [r0, #44]	; 0x2c
 8017e68:	6aca      	ldr	r2, [r1, #44]	; 0x2c
 8017e6a:	6302      	str	r2, [r0, #48]	; 0x30
 8017e6c:	ed93 6a06 	vldr	s12, [r3, #24]
 8017e70:	edd1 5a0e 	vldr	s11, [r1, #56]	; 0x38
 8017e74:	eea5 6a87 	vfma.f32	s12, s11, s14
 8017e78:	eeb0 7a46 	vmov.f32	s14, s12
 8017e7c:	ed91 6a0d 	vldr	s12, [r1, #52]	; 0x34
 8017e80:	eea6 7a27 	vfma.f32	s14, s12, s15
 8017e84:	ed80 7a0d 	vstr	s14, [r0, #52]	; 0x34
 8017e88:	ed91 7a0d 	vldr	s14, [r1, #52]	; 0x34
 8017e8c:	edd1 7a0e 	vldr	s15, [r1, #56]	; 0x38
 8017e90:	eee6 7a87 	vfma.f32	s15, s13, s14
 8017e94:	edc0 7a0e 	vstr	s15, [r0, #56]	; 0x38
 8017e98:	6b4b      	ldr	r3, [r1, #52]	; 0x34
 8017e9a:	63c3      	str	r3, [r0, #60]	; 0x3c
 8017e9c:	e8bd 87f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, pc}
 8017ea0:	f1c5 0501 	rsb	r5, r5, #1
 8017ea4:	f015 050f 	ands.w	r5, r5, #15
 8017ea8:	bf18      	it	ne
 8017eaa:	2501      	movne	r5, #1
 8017eac:	2410      	movs	r4, #16
 8017eae:	fb9e fef4 	sdiv	lr, lr, r4
 8017eb2:	ebae 0e05 	sub.w	lr, lr, r5
 8017eb6:	e753      	b.n	8017d60 <_ZN8touchgfx4EdgeC1ERKNS_9GradientsEPKNS_7Point3DEii+0x1c>
 8017eb8:	f1c5 0501 	rsb	r5, r5, #1
 8017ebc:	f015 050f 	ands.w	r5, r5, #15
 8017ec0:	bf18      	it	ne
 8017ec2:	2501      	movne	r5, #1
 8017ec4:	f04f 0910 	mov.w	r9, #16
 8017ec8:	fb94 f4f9 	sdiv	r4, r4, r9
 8017ecc:	1b64      	subs	r4, r4, r5
 8017ece:	e755      	b.n	8017d7c <_ZN8touchgfx4EdgeC1ERKNS_9GradientsEPKNS_7Point3DEii+0x38>
 8017ed0:	4264      	negs	r4, r4
 8017ed2:	fb94 fef6 	sdiv	lr, r4, r6
 8017ed6:	f1ce 0800 	rsb	r8, lr, #0
 8017eda:	fb06 441e 	mls	r4, r6, lr, r4
 8017ede:	f8c0 8000 	str.w	r8, [r0]
 8017ee2:	6104      	str	r4, [r0, #16]
 8017ee4:	2c00      	cmp	r4, #0
 8017ee6:	f43f af6e 	beq.w	8017dc6 <_ZN8touchgfx4EdgeC1ERKNS_9GradientsEPKNS_7Point3DEii+0x82>
 8017eea:	ea6f 0e0e 	mvn.w	lr, lr
 8017eee:	f8c0 e000 	str.w	lr, [r0]
 8017ef2:	1b34      	subs	r4, r6, r4
 8017ef4:	e766      	b.n	8017dc4 <_ZN8touchgfx4EdgeC1ERKNS_9GradientsEPKNS_7Point3DEii+0x80>
 8017ef6:	426d      	negs	r5, r5
 8017ef8:	fb95 f4f6 	sdiv	r4, r5, r6
 8017efc:	f1c4 0e00 	rsb	lr, r4, #0
 8017f00:	fb06 5514 	mls	r5, r6, r4, r5
 8017f04:	f8c0 e004 	str.w	lr, [r0, #4]
 8017f08:	6085      	str	r5, [r0, #8]
 8017f0a:	2d00      	cmp	r5, #0
 8017f0c:	f43f af64 	beq.w	8017dd8 <_ZN8touchgfx4EdgeC1ERKNS_9GradientsEPKNS_7Point3DEii+0x94>
 8017f10:	43e4      	mvns	r4, r4
 8017f12:	6044      	str	r4, [r0, #4]
 8017f14:	1b75      	subs	r5, r6, r5
 8017f16:	e75e      	b.n	8017dd6 <_ZN8touchgfx4EdgeC1ERKNS_9GradientsEPKNS_7Point3DEii+0x92>
 8017f18:	3d800000 	.word	0x3d800000

08017f1c <_ZN8touchgfx7Unicode6strlenEPKt>:
 8017f1c:	4602      	mov	r2, r0
 8017f1e:	b148      	cbz	r0, 8017f34 <_ZN8touchgfx7Unicode6strlenEPKt+0x18>
 8017f20:	2300      	movs	r3, #0
 8017f22:	b298      	uxth	r0, r3
 8017f24:	3301      	adds	r3, #1
 8017f26:	eb02 0143 	add.w	r1, r2, r3, lsl #1
 8017f2a:	f831 1c02 	ldrh.w	r1, [r1, #-2]
 8017f2e:	2900      	cmp	r1, #0
 8017f30:	d1f7      	bne.n	8017f22 <_ZN8touchgfx7Unicode6strlenEPKt+0x6>
 8017f32:	4770      	bx	lr
 8017f34:	4770      	bx	lr

08017f36 <_ZN8touchgfx7Unicode7strncpyEPtPKct>:
 8017f36:	b530      	push	{r4, r5, lr}
 8017f38:	4604      	mov	r4, r0
 8017f3a:	b159      	cbz	r1, 8017f54 <_ZN8touchgfx7Unicode7strncpyEPtPKct+0x1e>
 8017f3c:	b148      	cbz	r0, 8017f52 <_ZN8touchgfx7Unicode7strncpyEPtPKct+0x1c>
 8017f3e:	2300      	movs	r3, #0
 8017f40:	b298      	uxth	r0, r3
 8017f42:	4282      	cmp	r2, r0
 8017f44:	d905      	bls.n	8017f52 <_ZN8touchgfx7Unicode7strncpyEPtPKct+0x1c>
 8017f46:	5ccd      	ldrb	r5, [r1, r3]
 8017f48:	f824 5013 	strh.w	r5, [r4, r3, lsl #1]
 8017f4c:	3301      	adds	r3, #1
 8017f4e:	2d00      	cmp	r5, #0
 8017f50:	d1f6      	bne.n	8017f40 <_ZN8touchgfx7Unicode7strncpyEPtPKct+0xa>
 8017f52:	bd30      	pop	{r4, r5, pc}
 8017f54:	4608      	mov	r0, r1
 8017f56:	e7fc      	b.n	8017f52 <_ZN8touchgfx7Unicode7strncpyEPtPKct+0x1c>

08017f58 <_ZN8touchgfx7Unicode4itoaElPtti.part.2>:
 8017f58:	b5f0      	push	{r4, r5, r6, r7, lr}
 8017f5a:	b08b      	sub	sp, #44	; 0x2c
 8017f5c:	468c      	mov	ip, r1
 8017f5e:	2100      	movs	r1, #0
 8017f60:	f88d 1024 	strb.w	r1, [sp, #36]	; 0x24
 8017f64:	4604      	mov	r4, r0
 8017f66:	261f      	movs	r6, #31
 8017f68:	af01      	add	r7, sp, #4
 8017f6a:	fb94 fef3 	sdiv	lr, r4, r3
 8017f6e:	fb03 441e 	mls	r4, r3, lr, r4
 8017f72:	ea84 75e4 	eor.w	r5, r4, r4, asr #31
 8017f76:	eba5 75e4 	sub.w	r5, r5, r4, asr #31
 8017f7a:	b2ec      	uxtb	r4, r5
 8017f7c:	2d09      	cmp	r5, #9
 8017f7e:	bfd4      	ite	le
 8017f80:	3430      	addle	r4, #48	; 0x30
 8017f82:	3457      	addgt	r4, #87	; 0x57
 8017f84:	b2e4      	uxtb	r4, r4
 8017f86:	55bc      	strb	r4, [r7, r6]
 8017f88:	4674      	mov	r4, lr
 8017f8a:	1e71      	subs	r1, r6, #1
 8017f8c:	b974      	cbnz	r4, 8017fac <_ZN8touchgfx7Unicode4itoaElPtti.part.2+0x54>
 8017f8e:	2800      	cmp	r0, #0
 8017f90:	da05      	bge.n	8017f9e <_ZN8touchgfx7Unicode4itoaElPtti.part.2+0x46>
 8017f92:	ab0a      	add	r3, sp, #40	; 0x28
 8017f94:	4419      	add	r1, r3
 8017f96:	232d      	movs	r3, #45	; 0x2d
 8017f98:	f801 3c24 	strb.w	r3, [r1, #-36]
 8017f9c:	1eb1      	subs	r1, r6, #2
 8017f9e:	3101      	adds	r1, #1
 8017fa0:	4439      	add	r1, r7
 8017fa2:	4660      	mov	r0, ip
 8017fa4:	f7ff ffc7 	bl	8017f36 <_ZN8touchgfx7Unicode7strncpyEPtPKct>
 8017fa8:	b00b      	add	sp, #44	; 0x2c
 8017faa:	bdf0      	pop	{r4, r5, r6, r7, pc}
 8017fac:	460e      	mov	r6, r1
 8017fae:	e7dc      	b.n	8017f6a <_ZN8touchgfx7Unicode4itoaElPtti.part.2+0x12>

08017fb0 <_ZN8touchgfx7Unicode4utoaEmPtti.part.3>:
 8017fb0:	b5f0      	push	{r4, r5, r6, r7, lr}
 8017fb2:	b08b      	sub	sp, #44	; 0x2c
 8017fb4:	468c      	mov	ip, r1
 8017fb6:	2100      	movs	r1, #0
 8017fb8:	f88d 1024 	strb.w	r1, [sp, #36]	; 0x24
 8017fbc:	ae01      	add	r6, sp, #4
 8017fbe:	211f      	movs	r1, #31
 8017fc0:	fbb0 f7f3 	udiv	r7, r0, r3
 8017fc4:	fb03 0517 	mls	r5, r3, r7, r0
 8017fc8:	b2ec      	uxtb	r4, r5
 8017fca:	2d09      	cmp	r5, #9
 8017fcc:	bfd4      	ite	le
 8017fce:	3430      	addle	r4, #48	; 0x30
 8017fd0:	3457      	addgt	r4, #87	; 0x57
 8017fd2:	b2e4      	uxtb	r4, r4
 8017fd4:	558c      	strb	r4, [r1, r6]
 8017fd6:	4638      	mov	r0, r7
 8017fd8:	1e4c      	subs	r4, r1, #1
 8017fda:	b92f      	cbnz	r7, 8017fe8 <_ZN8touchgfx7Unicode4utoaEmPtti.part.3+0x38>
 8017fdc:	4431      	add	r1, r6
 8017fde:	4660      	mov	r0, ip
 8017fe0:	f7ff ffa9 	bl	8017f36 <_ZN8touchgfx7Unicode7strncpyEPtPKct>
 8017fe4:	b00b      	add	sp, #44	; 0x2c
 8017fe6:	bdf0      	pop	{r4, r5, r6, r7, pc}
 8017fe8:	4621      	mov	r1, r4
 8017fea:	e7e9      	b.n	8017fc0 <_ZN8touchgfx7Unicode4utoaEmPtti.part.3+0x10>

08017fec <_ZN8touchgfx7Unicode4itoaElPtti>:
 8017fec:	b410      	push	{r4}
 8017fee:	b131      	cbz	r1, 8017ffe <_ZN8touchgfx7Unicode4itoaElPtti+0x12>
 8017ff0:	1e9c      	subs	r4, r3, #2
 8017ff2:	2c22      	cmp	r4, #34	; 0x22
 8017ff4:	d803      	bhi.n	8017ffe <_ZN8touchgfx7Unicode4itoaElPtti+0x12>
 8017ff6:	f85d 4b04 	ldr.w	r4, [sp], #4
 8017ffa:	f7ff bfad 	b.w	8017f58 <_ZN8touchgfx7Unicode4itoaElPtti.part.2>
 8017ffe:	f85d 4b04 	ldr.w	r4, [sp], #4
 8018002:	4770      	bx	lr

08018004 <_ZN8touchgfx7Unicode13composeStringERPKtttbbibibRitPt>:
 8018004:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 8018008:	4691      	mov	r9, r2
 801800a:	b085      	sub	sp, #20
 801800c:	6802      	ldr	r2, [r0, #0]
 801800e:	9201      	str	r2, [sp, #4]
 8018010:	4688      	mov	r8, r1
 8018012:	4683      	mov	fp, r0
 8018014:	f89d 1040 	ldrb.w	r1, [sp, #64]	; 0x40
 8018018:	9103      	str	r1, [sp, #12]
 801801a:	4610      	mov	r0, r2
 801801c:	461c      	mov	r4, r3
 801801e:	f89d 3048 	ldrb.w	r3, [sp, #72]	; 0x48
 8018022:	9302      	str	r3, [sp, #8]
 8018024:	f7ff ff7a 	bl	8017f1c <_ZN8touchgfx7Unicode6strlenEPKt>
 8018028:	f1b8 0f00 	cmp.w	r8, #0
 801802c:	bf0c      	ite	eq
 801802e:	4684      	moveq	ip, r0
 8018030:	f100 0c01 	addne.w	ip, r0, #1
 8018034:	f1b9 0f69 	cmp.w	r9, #105	; 0x69
 8018038:	f89d 6038 	ldrb.w	r6, [sp, #56]	; 0x38
 801803c:	9f0f      	ldr	r7, [sp, #60]	; 0x3c
 801803e:	9d13      	ldr	r5, [sp, #76]	; 0x4c
 8018040:	f8dd a054 	ldr.w	sl, [sp, #84]	; 0x54
 8018044:	9903      	ldr	r1, [sp, #12]
 8018046:	fa1f fc8c 	uxth.w	ip, ip
 801804a:	e9dd 2301 	ldrd	r2, r3, [sp, #4]
 801804e:	d041      	beq.n	80180d4 <_ZN8touchgfx7Unicode13composeStringERPKtttbbibibRitPt+0xd0>
 8018050:	d834      	bhi.n	80180bc <_ZN8touchgfx7Unicode13composeStringERPKtttbbibibRitPt+0xb8>
 8018052:	f1b9 0f63 	cmp.w	r9, #99	; 0x63
 8018056:	d059      	beq.n	801810c <_ZN8touchgfx7Unicode13composeStringERPKtttbbibibRitPt+0x108>
 8018058:	f1b9 0f64 	cmp.w	r9, #100	; 0x64
 801805c:	d03a      	beq.n	80180d4 <_ZN8touchgfx7Unicode13composeStringERPKtttbbibibRitPt+0xd0>
 801805e:	f1b9 0f58 	cmp.w	r9, #88	; 0x58
 8018062:	d034      	beq.n	80180ce <_ZN8touchgfx7Unicode13composeStringERPKtttbbibibRitPt+0xca>
 8018064:	2400      	movs	r4, #0
 8018066:	f8bd 2050 	ldrh.w	r2, [sp, #80]	; 0x50
 801806a:	3a01      	subs	r2, #1
 801806c:	b169      	cbz	r1, 801808a <_ZN8touchgfx7Unicode13composeStringERPKtttbbibibRitPt+0x86>
 801806e:	9911      	ldr	r1, [sp, #68]	; 0x44
 8018070:	458c      	cmp	ip, r1
 8018072:	da09      	bge.n	8018088 <_ZN8touchgfx7Unicode13composeStringERPKtttbbibibRitPt+0x84>
 8018074:	eba1 010c 	sub.w	r1, r1, ip
 8018078:	b289      	uxth	r1, r1
 801807a:	b933      	cbnz	r3, 801808a <_ZN8touchgfx7Unicode13composeStringERPKtttbbibibRitPt+0x86>
 801807c:	2e00      	cmp	r6, #0
 801807e:	d051      	beq.n	8018124 <_ZN8touchgfx7Unicode13composeStringERPKtttbbibibRitPt+0x120>
 8018080:	2800      	cmp	r0, #0
 8018082:	d04f      	beq.n	8018124 <_ZN8touchgfx7Unicode13composeStringERPKtttbbibibRitPt+0x120>
 8018084:	440c      	add	r4, r1
 8018086:	b2a4      	uxth	r4, r4
 8018088:	2100      	movs	r1, #0
 801808a:	682b      	ldr	r3, [r5, #0]
 801808c:	4293      	cmp	r3, r2
 801808e:	da07      	bge.n	80180a0 <_ZN8touchgfx7Unicode13composeStringERPKtttbbibibRitPt+0x9c>
 8018090:	f1b8 0f00 	cmp.w	r8, #0
 8018094:	d004      	beq.n	80180a0 <_ZN8touchgfx7Unicode13composeStringERPKtttbbibibRitPt+0x9c>
 8018096:	f82a 8013 	strh.w	r8, [sl, r3, lsl #1]
 801809a:	682b      	ldr	r3, [r5, #0]
 801809c:	3301      	adds	r3, #1
 801809e:	602b      	str	r3, [r5, #0]
 80180a0:	2730      	movs	r7, #48	; 0x30
 80180a2:	2c00      	cmp	r4, #0
 80180a4:	d04e      	beq.n	8018144 <_ZN8touchgfx7Unicode13composeStringERPKtttbbibibRitPt+0x140>
 80180a6:	682e      	ldr	r6, [r5, #0]
 80180a8:	3c01      	subs	r4, #1
 80180aa:	42b2      	cmp	r2, r6
 80180ac:	b2a4      	uxth	r4, r4
 80180ae:	dd49      	ble.n	8018144 <_ZN8touchgfx7Unicode13composeStringERPKtttbbibibRitPt+0x140>
 80180b0:	f82a 7016 	strh.w	r7, [sl, r6, lsl #1]
 80180b4:	682b      	ldr	r3, [r5, #0]
 80180b6:	3301      	adds	r3, #1
 80180b8:	602b      	str	r3, [r5, #0]
 80180ba:	e7f2      	b.n	80180a2 <_ZN8touchgfx7Unicode13composeStringERPKtttbbibibRitPt+0x9e>
 80180bc:	f1b9 0f73 	cmp.w	r9, #115	; 0x73
 80180c0:	d01d      	beq.n	80180fe <_ZN8touchgfx7Unicode13composeStringERPKtttbbibibRitPt+0xfa>
 80180c2:	f1b9 0f78 	cmp.w	r9, #120	; 0x78
 80180c6:	d002      	beq.n	80180ce <_ZN8touchgfx7Unicode13composeStringERPKtttbbibibRitPt+0xca>
 80180c8:	f1b9 0f6f 	cmp.w	r9, #111	; 0x6f
 80180cc:	e7c9      	b.n	8018062 <_ZN8touchgfx7Unicode13composeStringERPKtttbbibibRitPt+0x5e>
 80180ce:	4684      	mov	ip, r0
 80180d0:	f04f 0800 	mov.w	r8, #0
 80180d4:	2c00      	cmp	r4, #0
 80180d6:	d0c6      	beq.n	8018066 <_ZN8touchgfx7Unicode13composeStringERPKtttbbibibRitPt+0x62>
 80180d8:	b947      	cbnz	r7, 80180ec <_ZN8touchgfx7Unicode13composeStringERPKtttbbibibRitPt+0xe8>
 80180da:	2801      	cmp	r0, #1
 80180dc:	d106      	bne.n	80180ec <_ZN8touchgfx7Unicode13composeStringERPKtttbbibibRitPt+0xe8>
 80180de:	8814      	ldrh	r4, [r2, #0]
 80180e0:	2c30      	cmp	r4, #48	; 0x30
 80180e2:	bf02      	ittt	eq
 80180e4:	3202      	addeq	r2, #2
 80180e6:	f8cb 2000 	streq.w	r2, [fp]
 80180ea:	4638      	moveq	r0, r7
 80180ec:	45bc      	cmp	ip, r7
 80180ee:	da14      	bge.n	801811a <_ZN8touchgfx7Unicode13composeStringERPKtttbbibibRitPt+0x116>
 80180f0:	b2bf      	uxth	r7, r7
 80180f2:	eba7 040c 	sub.w	r4, r7, ip
 80180f6:	b2a4      	uxth	r4, r4
 80180f8:	46bc      	mov	ip, r7
 80180fa:	2600      	movs	r6, #0
 80180fc:	e7b3      	b.n	8018066 <_ZN8touchgfx7Unicode13composeStringERPKtttbbibibRitPt+0x62>
 80180fe:	4684      	mov	ip, r0
 8018100:	b16c      	cbz	r4, 801811e <_ZN8touchgfx7Unicode13composeStringERPKtttbbibibRitPt+0x11a>
 8018102:	42b8      	cmp	r0, r7
 8018104:	dd00      	ble.n	8018108 <_ZN8touchgfx7Unicode13composeStringERPKtttbbibibRitPt+0x104>
 8018106:	b2b8      	uxth	r0, r7
 8018108:	2400      	movs	r4, #0
 801810a:	e003      	b.n	8018114 <_ZN8touchgfx7Unicode13composeStringERPKtttbbibibRitPt+0x110>
 801810c:	f04f 0c01 	mov.w	ip, #1
 8018110:	2400      	movs	r4, #0
 8018112:	4660      	mov	r0, ip
 8018114:	4626      	mov	r6, r4
 8018116:	46a0      	mov	r8, r4
 8018118:	e7a5      	b.n	8018066 <_ZN8touchgfx7Unicode13composeStringERPKtttbbibibRitPt+0x62>
 801811a:	2400      	movs	r4, #0
 801811c:	e7ed      	b.n	80180fa <_ZN8touchgfx7Unicode13composeStringERPKtttbbibibRitPt+0xf6>
 801811e:	4626      	mov	r6, r4
 8018120:	46a0      	mov	r8, r4
 8018122:	e7a0      	b.n	8018066 <_ZN8touchgfx7Unicode13composeStringERPKtttbbibibRitPt+0x62>
 8018124:	2900      	cmp	r1, #0
 8018126:	d0b0      	beq.n	801808a <_ZN8touchgfx7Unicode13composeStringERPKtttbbibibRitPt+0x86>
 8018128:	2720      	movs	r7, #32
 801812a:	682e      	ldr	r6, [r5, #0]
 801812c:	2900      	cmp	r1, #0
 801812e:	d0ac      	beq.n	801808a <_ZN8touchgfx7Unicode13composeStringERPKtttbbibibRitPt+0x86>
 8018130:	3901      	subs	r1, #1
 8018132:	4296      	cmp	r6, r2
 8018134:	b289      	uxth	r1, r1
 8018136:	daa7      	bge.n	8018088 <_ZN8touchgfx7Unicode13composeStringERPKtttbbibibRitPt+0x84>
 8018138:	f82a 7016 	strh.w	r7, [sl, r6, lsl #1]
 801813c:	682b      	ldr	r3, [r5, #0]
 801813e:	3301      	adds	r3, #1
 8018140:	602b      	str	r3, [r5, #0]
 8018142:	e7f2      	b.n	801812a <_ZN8touchgfx7Unicode13composeStringERPKtttbbibibRitPt+0x126>
 8018144:	b188      	cbz	r0, 801816a <_ZN8touchgfx7Unicode13composeStringERPKtttbbibibRitPt+0x166>
 8018146:	682b      	ldr	r3, [r5, #0]
 8018148:	3801      	subs	r0, #1
 801814a:	429a      	cmp	r2, r3
 801814c:	b280      	uxth	r0, r0
 801814e:	dd0c      	ble.n	801816a <_ZN8touchgfx7Unicode13composeStringERPKtttbbibibRitPt+0x166>
 8018150:	f8db 3000 	ldr.w	r3, [fp]
 8018154:	1c9c      	adds	r4, r3, #2
 8018156:	f8cb 4000 	str.w	r4, [fp]
 801815a:	881c      	ldrh	r4, [r3, #0]
 801815c:	682b      	ldr	r3, [r5, #0]
 801815e:	f82a 4013 	strh.w	r4, [sl, r3, lsl #1]
 8018162:	682b      	ldr	r3, [r5, #0]
 8018164:	3301      	adds	r3, #1
 8018166:	602b      	str	r3, [r5, #0]
 8018168:	e7ec      	b.n	8018144 <_ZN8touchgfx7Unicode13composeStringERPKtttbbibibRitPt+0x140>
 801816a:	2620      	movs	r6, #32
 801816c:	b151      	cbz	r1, 8018184 <_ZN8touchgfx7Unicode13composeStringERPKtttbbibibRitPt+0x180>
 801816e:	6828      	ldr	r0, [r5, #0]
 8018170:	3901      	subs	r1, #1
 8018172:	4282      	cmp	r2, r0
 8018174:	b289      	uxth	r1, r1
 8018176:	dd05      	ble.n	8018184 <_ZN8touchgfx7Unicode13composeStringERPKtttbbibibRitPt+0x180>
 8018178:	f82a 6010 	strh.w	r6, [sl, r0, lsl #1]
 801817c:	682b      	ldr	r3, [r5, #0]
 801817e:	3301      	adds	r3, #1
 8018180:	602b      	str	r3, [r5, #0]
 8018182:	e7f3      	b.n	801816c <_ZN8touchgfx7Unicode13composeStringERPKtttbbibibRitPt+0x168>
 8018184:	b005      	add	sp, #20
 8018186:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}

0801818a <_ZN8touchgfx7Unicode22parseFlagsAndPrecisionERPKtRPKcRtRbS8_S8_S8_RiS8_S9_>:
 801818a:	e92d 43f0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, lr}
 801818e:	e9dd 8c07 	ldrd	r8, ip, [sp, #28]
 8018192:	e9dd e609 	ldrd	lr, r6, [sp, #36]	; 0x24
 8018196:	e9dd 750b 	ldrd	r7, r5, [sp, #44]	; 0x2c
 801819a:	2400      	movs	r4, #0
 801819c:	8014      	strh	r4, [r2, #0]
 801819e:	701c      	strb	r4, [r3, #0]
 80181a0:	f888 4000 	strb.w	r4, [r8]
 80181a4:	f88c 4000 	strb.w	r4, [ip]
 80181a8:	f88e 4000 	strb.w	r4, [lr]
 80181ac:	703c      	strb	r4, [r7, #0]
 80181ae:	6804      	ldr	r4, [r0, #0]
 80181b0:	b1a4      	cbz	r4, 80181dc <_ZN8touchgfx7Unicode22parseFlagsAndPrecisionERPKtRPKcRtRbS8_S8_S8_RiS8_S9_+0x52>
 80181b2:	8824      	ldrh	r4, [r4, #0]
 80181b4:	f04f 0901 	mov.w	r9, #1
 80181b8:	b314      	cbz	r4, 8018200 <_ZN8touchgfx7Unicode22parseFlagsAndPrecisionERPKtRPKcRtRbS8_S8_S8_RiS8_S9_+0x76>
 80181ba:	2c2b      	cmp	r4, #43	; 0x2b
 80181bc:	d001      	beq.n	80181c2 <_ZN8touchgfx7Unicode22parseFlagsAndPrecisionERPKtRPKcRtRbS8_S8_S8_RiS8_S9_+0x38>
 80181be:	2c20      	cmp	r4, #32
 80181c0:	d110      	bne.n	80181e4 <_ZN8touchgfx7Unicode22parseFlagsAndPrecisionERPKtRPKcRtRbS8_S8_S8_RiS8_S9_+0x5a>
 80181c2:	8014      	strh	r4, [r2, #0]
 80181c4:	6804      	ldr	r4, [r0, #0]
 80181c6:	b10c      	cbz	r4, 80181cc <_ZN8touchgfx7Unicode22parseFlagsAndPrecisionERPKtRPKcRtRbS8_S8_S8_RiS8_S9_+0x42>
 80181c8:	3402      	adds	r4, #2
 80181ca:	6004      	str	r4, [r0, #0]
 80181cc:	680c      	ldr	r4, [r1, #0]
 80181ce:	b10c      	cbz	r4, 80181d4 <_ZN8touchgfx7Unicode22parseFlagsAndPrecisionERPKtRPKcRtRbS8_S8_S8_RiS8_S9_+0x4a>
 80181d0:	3401      	adds	r4, #1
 80181d2:	600c      	str	r4, [r1, #0]
 80181d4:	6804      	ldr	r4, [r0, #0]
 80181d6:	b17c      	cbz	r4, 80181f8 <_ZN8touchgfx7Unicode22parseFlagsAndPrecisionERPKtRPKcRtRbS8_S8_S8_RiS8_S9_+0x6e>
 80181d8:	8824      	ldrh	r4, [r4, #0]
 80181da:	e7ed      	b.n	80181b8 <_ZN8touchgfx7Unicode22parseFlagsAndPrecisionERPKtRPKcRtRbS8_S8_S8_RiS8_S9_+0x2e>
 80181dc:	680c      	ldr	r4, [r1, #0]
 80181de:	b17c      	cbz	r4, 8018200 <_ZN8touchgfx7Unicode22parseFlagsAndPrecisionERPKtRPKcRtRbS8_S8_S8_RiS8_S9_+0x76>
 80181e0:	7824      	ldrb	r4, [r4, #0]
 80181e2:	e7e7      	b.n	80181b4 <_ZN8touchgfx7Unicode22parseFlagsAndPrecisionERPKtRPKcRtRbS8_S8_S8_RiS8_S9_+0x2a>
 80181e4:	2c2d      	cmp	r4, #45	; 0x2d
 80181e6:	d102      	bne.n	80181ee <_ZN8touchgfx7Unicode22parseFlagsAndPrecisionERPKtRPKcRtRbS8_S8_S8_RiS8_S9_+0x64>
 80181e8:	f883 9000 	strb.w	r9, [r3]
 80181ec:	e7ea      	b.n	80181c4 <_ZN8touchgfx7Unicode22parseFlagsAndPrecisionERPKtRPKcRtRbS8_S8_S8_RiS8_S9_+0x3a>
 80181ee:	2c23      	cmp	r4, #35	; 0x23
 80181f0:	d107      	bne.n	8018202 <_ZN8touchgfx7Unicode22parseFlagsAndPrecisionERPKtRPKcRtRbS8_S8_S8_RiS8_S9_+0x78>
 80181f2:	f888 9000 	strb.w	r9, [r8]
 80181f6:	e7e5      	b.n	80181c4 <_ZN8touchgfx7Unicode22parseFlagsAndPrecisionERPKtRPKcRtRbS8_S8_S8_RiS8_S9_+0x3a>
 80181f8:	680c      	ldr	r4, [r1, #0]
 80181fa:	b10c      	cbz	r4, 8018200 <_ZN8touchgfx7Unicode22parseFlagsAndPrecisionERPKtRPKcRtRbS8_S8_S8_RiS8_S9_+0x76>
 80181fc:	7824      	ldrb	r4, [r4, #0]
 80181fe:	e7db      	b.n	80181b8 <_ZN8touchgfx7Unicode22parseFlagsAndPrecisionERPKtRPKcRtRbS8_S8_S8_RiS8_S9_+0x2e>
 8018200:	2400      	movs	r4, #0
 8018202:	f1a4 0330 	sub.w	r3, r4, #48	; 0x30
 8018206:	2b09      	cmp	r3, #9
 8018208:	d901      	bls.n	801820e <_ZN8touchgfx7Unicode22parseFlagsAndPrecisionERPKtRPKcRtRbS8_S8_S8_RiS8_S9_+0x84>
 801820a:	2c2a      	cmp	r4, #42	; 0x2a
 801820c:	d122      	bne.n	8018254 <_ZN8touchgfx7Unicode22parseFlagsAndPrecisionERPKtRPKcRtRbS8_S8_S8_RiS8_S9_+0xca>
 801820e:	2301      	movs	r3, #1
 8018210:	2c30      	cmp	r4, #48	; 0x30
 8018212:	f88e 3000 	strb.w	r3, [lr]
 8018216:	d10d      	bne.n	8018234 <_ZN8touchgfx7Unicode22parseFlagsAndPrecisionERPKtRPKcRtRbS8_S8_S8_RiS8_S9_+0xaa>
 8018218:	f88c 3000 	strb.w	r3, [ip]
 801821c:	6803      	ldr	r3, [r0, #0]
 801821e:	b10b      	cbz	r3, 8018224 <_ZN8touchgfx7Unicode22parseFlagsAndPrecisionERPKtRPKcRtRbS8_S8_S8_RiS8_S9_+0x9a>
 8018220:	3302      	adds	r3, #2
 8018222:	6003      	str	r3, [r0, #0]
 8018224:	680b      	ldr	r3, [r1, #0]
 8018226:	b10b      	cbz	r3, 801822c <_ZN8touchgfx7Unicode22parseFlagsAndPrecisionERPKtRPKcRtRbS8_S8_S8_RiS8_S9_+0xa2>
 8018228:	3301      	adds	r3, #1
 801822a:	600b      	str	r3, [r1, #0]
 801822c:	6803      	ldr	r3, [r0, #0]
 801822e:	2b00      	cmp	r3, #0
 8018230:	d02f      	beq.n	8018292 <_ZN8touchgfx7Unicode22parseFlagsAndPrecisionERPKtRPKcRtRbS8_S8_S8_RiS8_S9_+0x108>
 8018232:	881c      	ldrh	r4, [r3, #0]
 8018234:	2c2a      	cmp	r4, #42	; 0x2a
 8018236:	d135      	bne.n	80182a4 <_ZN8touchgfx7Unicode22parseFlagsAndPrecisionERPKtRPKcRtRbS8_S8_S8_RiS8_S9_+0x11a>
 8018238:	f04f 33ff 	mov.w	r3, #4294967295
 801823c:	6033      	str	r3, [r6, #0]
 801823e:	6803      	ldr	r3, [r0, #0]
 8018240:	b10b      	cbz	r3, 8018246 <_ZN8touchgfx7Unicode22parseFlagsAndPrecisionERPKtRPKcRtRbS8_S8_S8_RiS8_S9_+0xbc>
 8018242:	3302      	adds	r3, #2
 8018244:	6003      	str	r3, [r0, #0]
 8018246:	680b      	ldr	r3, [r1, #0]
 8018248:	b10b      	cbz	r3, 801824e <_ZN8touchgfx7Unicode22parseFlagsAndPrecisionERPKtRPKcRtRbS8_S8_S8_RiS8_S9_+0xc4>
 801824a:	3301      	adds	r3, #1
 801824c:	600b      	str	r3, [r1, #0]
 801824e:	6803      	ldr	r3, [r0, #0]
 8018250:	b31b      	cbz	r3, 801829a <_ZN8touchgfx7Unicode22parseFlagsAndPrecisionERPKtRPKcRtRbS8_S8_S8_RiS8_S9_+0x110>
 8018252:	881c      	ldrh	r4, [r3, #0]
 8018254:	2c2e      	cmp	r4, #46	; 0x2e
 8018256:	d11a      	bne.n	801828e <_ZN8touchgfx7Unicode22parseFlagsAndPrecisionERPKtRPKcRtRbS8_S8_S8_RiS8_S9_+0x104>
 8018258:	2301      	movs	r3, #1
 801825a:	703b      	strb	r3, [r7, #0]
 801825c:	6803      	ldr	r3, [r0, #0]
 801825e:	b10b      	cbz	r3, 8018264 <_ZN8touchgfx7Unicode22parseFlagsAndPrecisionERPKtRPKcRtRbS8_S8_S8_RiS8_S9_+0xda>
 8018260:	3302      	adds	r3, #2
 8018262:	6003      	str	r3, [r0, #0]
 8018264:	680b      	ldr	r3, [r1, #0]
 8018266:	b10b      	cbz	r3, 801826c <_ZN8touchgfx7Unicode22parseFlagsAndPrecisionERPKtRPKcRtRbS8_S8_S8_RiS8_S9_+0xe2>
 8018268:	3301      	adds	r3, #1
 801826a:	600b      	str	r3, [r1, #0]
 801826c:	6803      	ldr	r3, [r0, #0]
 801826e:	2b00      	cmp	r3, #0
 8018270:	d036      	beq.n	80182e0 <_ZN8touchgfx7Unicode22parseFlagsAndPrecisionERPKtRPKcRtRbS8_S8_S8_RiS8_S9_+0x156>
 8018272:	881b      	ldrh	r3, [r3, #0]
 8018274:	2b2a      	cmp	r3, #42	; 0x2a
 8018276:	d137      	bne.n	80182e8 <_ZN8touchgfx7Unicode22parseFlagsAndPrecisionERPKtRPKcRtRbS8_S8_S8_RiS8_S9_+0x15e>
 8018278:	f04f 33ff 	mov.w	r3, #4294967295
 801827c:	602b      	str	r3, [r5, #0]
 801827e:	6803      	ldr	r3, [r0, #0]
 8018280:	b10b      	cbz	r3, 8018286 <_ZN8touchgfx7Unicode22parseFlagsAndPrecisionERPKtRPKcRtRbS8_S8_S8_RiS8_S9_+0xfc>
 8018282:	3302      	adds	r3, #2
 8018284:	6003      	str	r3, [r0, #0]
 8018286:	680b      	ldr	r3, [r1, #0]
 8018288:	b10b      	cbz	r3, 801828e <_ZN8touchgfx7Unicode22parseFlagsAndPrecisionERPKtRPKcRtRbS8_S8_S8_RiS8_S9_+0x104>
 801828a:	3301      	adds	r3, #1
 801828c:	600b      	str	r3, [r1, #0]
 801828e:	e8bd 83f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, pc}
 8018292:	680c      	ldr	r4, [r1, #0]
 8018294:	b134      	cbz	r4, 80182a4 <_ZN8touchgfx7Unicode22parseFlagsAndPrecisionERPKtRPKcRtRbS8_S8_S8_RiS8_S9_+0x11a>
 8018296:	7824      	ldrb	r4, [r4, #0]
 8018298:	e7cc      	b.n	8018234 <_ZN8touchgfx7Unicode22parseFlagsAndPrecisionERPKtRPKcRtRbS8_S8_S8_RiS8_S9_+0xaa>
 801829a:	680b      	ldr	r3, [r1, #0]
 801829c:	2b00      	cmp	r3, #0
 801829e:	d0f6      	beq.n	801828e <_ZN8touchgfx7Unicode22parseFlagsAndPrecisionERPKtRPKcRtRbS8_S8_S8_RiS8_S9_+0x104>
 80182a0:	781c      	ldrb	r4, [r3, #0]
 80182a2:	e7d7      	b.n	8018254 <_ZN8touchgfx7Unicode22parseFlagsAndPrecisionERPKtRPKcRtRbS8_S8_S8_RiS8_S9_+0xca>
 80182a4:	2300      	movs	r3, #0
 80182a6:	6033      	str	r3, [r6, #0]
 80182a8:	220a      	movs	r2, #10
 80182aa:	f1a4 0c30 	sub.w	ip, r4, #48	; 0x30
 80182ae:	fa1f f38c 	uxth.w	r3, ip
 80182b2:	2b09      	cmp	r3, #9
 80182b4:	d8ce      	bhi.n	8018254 <_ZN8touchgfx7Unicode22parseFlagsAndPrecisionERPKtRPKcRtRbS8_S8_S8_RiS8_S9_+0xca>
 80182b6:	6833      	ldr	r3, [r6, #0]
 80182b8:	fb02 c303 	mla	r3, r2, r3, ip
 80182bc:	6033      	str	r3, [r6, #0]
 80182be:	6803      	ldr	r3, [r0, #0]
 80182c0:	b10b      	cbz	r3, 80182c6 <_ZN8touchgfx7Unicode22parseFlagsAndPrecisionERPKtRPKcRtRbS8_S8_S8_RiS8_S9_+0x13c>
 80182c2:	3302      	adds	r3, #2
 80182c4:	6003      	str	r3, [r0, #0]
 80182c6:	680b      	ldr	r3, [r1, #0]
 80182c8:	b10b      	cbz	r3, 80182ce <_ZN8touchgfx7Unicode22parseFlagsAndPrecisionERPKtRPKcRtRbS8_S8_S8_RiS8_S9_+0x144>
 80182ca:	3301      	adds	r3, #1
 80182cc:	600b      	str	r3, [r1, #0]
 80182ce:	6803      	ldr	r3, [r0, #0]
 80182d0:	b10b      	cbz	r3, 80182d6 <_ZN8touchgfx7Unicode22parseFlagsAndPrecisionERPKtRPKcRtRbS8_S8_S8_RiS8_S9_+0x14c>
 80182d2:	881c      	ldrh	r4, [r3, #0]
 80182d4:	e7e9      	b.n	80182aa <_ZN8touchgfx7Unicode22parseFlagsAndPrecisionERPKtRPKcRtRbS8_S8_S8_RiS8_S9_+0x120>
 80182d6:	680c      	ldr	r4, [r1, #0]
 80182d8:	2c00      	cmp	r4, #0
 80182da:	d0e6      	beq.n	80182aa <_ZN8touchgfx7Unicode22parseFlagsAndPrecisionERPKtRPKcRtRbS8_S8_S8_RiS8_S9_+0x120>
 80182dc:	7824      	ldrb	r4, [r4, #0]
 80182de:	e7e4      	b.n	80182aa <_ZN8touchgfx7Unicode22parseFlagsAndPrecisionERPKtRPKcRtRbS8_S8_S8_RiS8_S9_+0x120>
 80182e0:	680b      	ldr	r3, [r1, #0]
 80182e2:	b10b      	cbz	r3, 80182e8 <_ZN8touchgfx7Unicode22parseFlagsAndPrecisionERPKtRPKcRtRbS8_S8_S8_RiS8_S9_+0x15e>
 80182e4:	781b      	ldrb	r3, [r3, #0]
 80182e6:	e7c5      	b.n	8018274 <_ZN8touchgfx7Unicode22parseFlagsAndPrecisionERPKtRPKcRtRbS8_S8_S8_RiS8_S9_+0xea>
 80182e8:	2200      	movs	r2, #0
 80182ea:	602a      	str	r2, [r5, #0]
 80182ec:	240a      	movs	r4, #10
 80182ee:	3b30      	subs	r3, #48	; 0x30
 80182f0:	b29e      	uxth	r6, r3
 80182f2:	2e09      	cmp	r6, #9
 80182f4:	682a      	ldr	r2, [r5, #0]
 80182f6:	d813      	bhi.n	8018320 <_ZN8touchgfx7Unicode22parseFlagsAndPrecisionERPKtRPKcRtRbS8_S8_S8_RiS8_S9_+0x196>
 80182f8:	fb04 3302 	mla	r3, r4, r2, r3
 80182fc:	602b      	str	r3, [r5, #0]
 80182fe:	6803      	ldr	r3, [r0, #0]
 8018300:	b10b      	cbz	r3, 8018306 <_ZN8touchgfx7Unicode22parseFlagsAndPrecisionERPKtRPKcRtRbS8_S8_S8_RiS8_S9_+0x17c>
 8018302:	3302      	adds	r3, #2
 8018304:	6003      	str	r3, [r0, #0]
 8018306:	680b      	ldr	r3, [r1, #0]
 8018308:	b10b      	cbz	r3, 801830e <_ZN8touchgfx7Unicode22parseFlagsAndPrecisionERPKtRPKcRtRbS8_S8_S8_RiS8_S9_+0x184>
 801830a:	3301      	adds	r3, #1
 801830c:	600b      	str	r3, [r1, #0]
 801830e:	6803      	ldr	r3, [r0, #0]
 8018310:	b10b      	cbz	r3, 8018316 <_ZN8touchgfx7Unicode22parseFlagsAndPrecisionERPKtRPKcRtRbS8_S8_S8_RiS8_S9_+0x18c>
 8018312:	881b      	ldrh	r3, [r3, #0]
 8018314:	e7eb      	b.n	80182ee <_ZN8touchgfx7Unicode22parseFlagsAndPrecisionERPKtRPKcRtRbS8_S8_S8_RiS8_S9_+0x164>
 8018316:	680b      	ldr	r3, [r1, #0]
 8018318:	2b00      	cmp	r3, #0
 801831a:	d0e8      	beq.n	80182ee <_ZN8touchgfx7Unicode22parseFlagsAndPrecisionERPKtRPKcRtRbS8_S8_S8_RiS8_S9_+0x164>
 801831c:	781b      	ldrb	r3, [r3, #0]
 801831e:	e7e6      	b.n	80182ee <_ZN8touchgfx7Unicode22parseFlagsAndPrecisionERPKtRPKcRtRbS8_S8_S8_RiS8_S9_+0x164>
 8018320:	2a06      	cmp	r2, #6
 8018322:	bfa8      	it	ge
 8018324:	2206      	movge	r2, #6
 8018326:	602a      	str	r2, [r5, #0]
 8018328:	e7b1      	b.n	801828e <_ZN8touchgfx7Unicode22parseFlagsAndPrecisionERPKtRPKcRtRbS8_S8_S8_RiS8_S9_+0x104>

0801832a <_ZN8touchgfx7Unicode9vsnprintfEPttPKtPKcSt9__va_list>:
 801832a:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 801832e:	b0a3      	sub	sp, #140	; 0x8c
 8018330:	2600      	movs	r6, #0
 8018332:	f10d 0944 	add.w	r9, sp, #68	; 0x44
 8018336:	4607      	mov	r7, r0
 8018338:	4688      	mov	r8, r1
 801833a:	e9cd 3208 	strd	r3, r2, [sp, #32]
 801833e:	4631      	mov	r1, r6
 8018340:	2242      	movs	r2, #66	; 0x42
 8018342:	4648      	mov	r0, r9
 8018344:	9c2c      	ldr	r4, [sp, #176]	; 0xb0
 8018346:	960d      	str	r6, [sp, #52]	; 0x34
 8018348:	f012 f881 	bl	802a44e <memset>
 801834c:	b15f      	cbz	r7, 8018366 <_ZN8touchgfx7Unicode9vsnprintfEPttPKtPKcSt9__va_list+0x3c>
 801834e:	f108 3aff 	add.w	sl, r8, #4294967295
 8018352:	9a09      	ldr	r2, [sp, #36]	; 0x24
 8018354:	9b0d      	ldr	r3, [sp, #52]	; 0x34
 8018356:	b152      	cbz	r2, 801836e <_ZN8touchgfx7Unicode9vsnprintfEPttPKtPKcSt9__va_list+0x44>
 8018358:	8812      	ldrh	r2, [r2, #0]
 801835a:	b10a      	cbz	r2, 8018360 <_ZN8touchgfx7Unicode9vsnprintfEPttPKtPKcSt9__va_list+0x36>
 801835c:	459a      	cmp	sl, r3
 801835e:	dc2e      	bgt.n	80183be <_ZN8touchgfx7Unicode9vsnprintfEPttPKtPKcSt9__va_list+0x94>
 8018360:	2200      	movs	r2, #0
 8018362:	f827 2013 	strh.w	r2, [r7, r3, lsl #1]
 8018366:	4638      	mov	r0, r7
 8018368:	b023      	add	sp, #140	; 0x8c
 801836a:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
 801836e:	9a08      	ldr	r2, [sp, #32]
 8018370:	2a00      	cmp	r2, #0
 8018372:	d0f5      	beq.n	8018360 <_ZN8touchgfx7Unicode9vsnprintfEPttPKtPKcSt9__va_list+0x36>
 8018374:	7812      	ldrb	r2, [r2, #0]
 8018376:	e7f0      	b.n	801835a <_ZN8touchgfx7Unicode9vsnprintfEPttPKtPKcSt9__va_list+0x30>
 8018378:	2d00      	cmp	r5, #0
 801837a:	d0ea      	beq.n	8018352 <_ZN8touchgfx7Unicode9vsnprintfEPttPKtPKcSt9__va_list+0x28>
 801837c:	782a      	ldrb	r2, [r5, #0]
 801837e:	b142      	cbz	r2, 8018392 <_ZN8touchgfx7Unicode9vsnprintfEPttPKtPKcSt9__va_list+0x68>
 8018380:	2a25      	cmp	r2, #37	; 0x25
 8018382:	d001      	beq.n	8018388 <_ZN8touchgfx7Unicode9vsnprintfEPttPKtPKcSt9__va_list+0x5e>
 8018384:	459a      	cmp	sl, r3
 8018386:	dc08      	bgt.n	801839a <_ZN8touchgfx7Unicode9vsnprintfEPttPKtPKcSt9__va_list+0x70>
 8018388:	f1bb 0f00 	cmp.w	fp, #0
 801838c:	d121      	bne.n	80183d2 <_ZN8touchgfx7Unicode9vsnprintfEPttPKtPKcSt9__va_list+0xa8>
 801838e:	2d00      	cmp	r5, #0
 8018390:	d0df      	beq.n	8018352 <_ZN8touchgfx7Unicode9vsnprintfEPttPKtPKcSt9__va_list+0x28>
 8018392:	782a      	ldrb	r2, [r5, #0]
 8018394:	f04f 0b00 	mov.w	fp, #0
 8018398:	e01d      	b.n	80183d6 <_ZN8touchgfx7Unicode9vsnprintfEPttPKtPKcSt9__va_list+0xac>
 801839a:	f1bb 0f00 	cmp.w	fp, #0
 801839e:	d078      	beq.n	8018492 <_ZN8touchgfx7Unicode9vsnprintfEPttPKtPKcSt9__va_list+0x168>
 80183a0:	f8bb 2000 	ldrh.w	r2, [fp]
 80183a4:	f827 2013 	strh.w	r2, [r7, r3, lsl #1]
 80183a8:	f1bb 0f00 	cmp.w	fp, #0
 80183ac:	d002      	beq.n	80183b4 <_ZN8touchgfx7Unicode9vsnprintfEPttPKtPKcSt9__va_list+0x8a>
 80183ae:	f10b 0202 	add.w	r2, fp, #2
 80183b2:	9209      	str	r2, [sp, #36]	; 0x24
 80183b4:	b10d      	cbz	r5, 80183ba <_ZN8touchgfx7Unicode9vsnprintfEPttPKtPKcSt9__va_list+0x90>
 80183b6:	3501      	adds	r5, #1
 80183b8:	9508      	str	r5, [sp, #32]
 80183ba:	3301      	adds	r3, #1
 80183bc:	930d      	str	r3, [sp, #52]	; 0x34
 80183be:	e9dd 5b08 	ldrd	r5, fp, [sp, #32]
 80183c2:	9b0d      	ldr	r3, [sp, #52]	; 0x34
 80183c4:	f1bb 0f00 	cmp.w	fp, #0
 80183c8:	d0d6      	beq.n	8018378 <_ZN8touchgfx7Unicode9vsnprintfEPttPKtPKcSt9__va_list+0x4e>
 80183ca:	f8bb 2000 	ldrh.w	r2, [fp]
 80183ce:	2a00      	cmp	r2, #0
 80183d0:	d1d6      	bne.n	8018380 <_ZN8touchgfx7Unicode9vsnprintfEPttPKtPKcSt9__va_list+0x56>
 80183d2:	f8bb 2000 	ldrh.w	r2, [fp]
 80183d6:	2a00      	cmp	r2, #0
 80183d8:	d0bb      	beq.n	8018352 <_ZN8touchgfx7Unicode9vsnprintfEPttPKtPKcSt9__va_list+0x28>
 80183da:	459a      	cmp	sl, r3
 80183dc:	ddb9      	ble.n	8018352 <_ZN8touchgfx7Unicode9vsnprintfEPttPKtPKcSt9__va_list+0x28>
 80183de:	f8ad 6032 	strh.w	r6, [sp, #50]	; 0x32
 80183e2:	f88d 602d 	strb.w	r6, [sp, #45]	; 0x2d
 80183e6:	f88d 602e 	strb.w	r6, [sp, #46]	; 0x2e
 80183ea:	f88d 602f 	strb.w	r6, [sp, #47]	; 0x2f
 80183ee:	f88d 6030 	strb.w	r6, [sp, #48]	; 0x30
 80183f2:	960e      	str	r6, [sp, #56]	; 0x38
 80183f4:	f88d 6031 	strb.w	r6, [sp, #49]	; 0x31
 80183f8:	960f      	str	r6, [sp, #60]	; 0x3c
 80183fa:	f1bb 0f00 	cmp.w	fp, #0
 80183fe:	d002      	beq.n	8018406 <_ZN8touchgfx7Unicode9vsnprintfEPttPKtPKcSt9__va_list+0xdc>
 8018400:	f10b 0302 	add.w	r3, fp, #2
 8018404:	9309      	str	r3, [sp, #36]	; 0x24
 8018406:	b10d      	cbz	r5, 801840c <_ZN8touchgfx7Unicode9vsnprintfEPttPKtPKcSt9__va_list+0xe2>
 8018408:	1c6b      	adds	r3, r5, #1
 801840a:	9308      	str	r3, [sp, #32]
 801840c:	ab0f      	add	r3, sp, #60	; 0x3c
 801840e:	9305      	str	r3, [sp, #20]
 8018410:	f10d 0331 	add.w	r3, sp, #49	; 0x31
 8018414:	9304      	str	r3, [sp, #16]
 8018416:	ab0e      	add	r3, sp, #56	; 0x38
 8018418:	9303      	str	r3, [sp, #12]
 801841a:	ab0c      	add	r3, sp, #48	; 0x30
 801841c:	9302      	str	r3, [sp, #8]
 801841e:	f10d 032f 	add.w	r3, sp, #47	; 0x2f
 8018422:	9301      	str	r3, [sp, #4]
 8018424:	f10d 032e 	add.w	r3, sp, #46	; 0x2e
 8018428:	9300      	str	r3, [sp, #0]
 801842a:	f10d 0232 	add.w	r2, sp, #50	; 0x32
 801842e:	f10d 032d 	add.w	r3, sp, #45	; 0x2d
 8018432:	a908      	add	r1, sp, #32
 8018434:	a809      	add	r0, sp, #36	; 0x24
 8018436:	f7ff fea8 	bl	801818a <_ZN8touchgfx7Unicode22parseFlagsAndPrecisionERPKtRPKcRtRbS8_S8_S8_RiS8_S9_>
 801843a:	9b0e      	ldr	r3, [sp, #56]	; 0x38
 801843c:	2b00      	cmp	r3, #0
 801843e:	bfbe      	ittt	lt
 8018440:	6823      	ldrlt	r3, [r4, #0]
 8018442:	ea23 73e3 	biclt.w	r3, r3, r3, asr #31
 8018446:	930e      	strlt	r3, [sp, #56]	; 0x38
 8018448:	9b0f      	ldr	r3, [sp, #60]	; 0x3c
 801844a:	bfb8      	it	lt
 801844c:	3404      	addlt	r4, #4
 801844e:	2b00      	cmp	r3, #0
 8018450:	bfb8      	it	lt
 8018452:	6823      	ldrlt	r3, [r4, #0]
 8018454:	e9dd 2108 	ldrd	r2, r1, [sp, #32]
 8018458:	bfbe      	ittt	lt
 801845a:	ea23 73e3 	biclt.w	r3, r3, r3, asr #31
 801845e:	930f      	strlt	r3, [sp, #60]	; 0x3c
 8018460:	3404      	addlt	r4, #4
 8018462:	b1d9      	cbz	r1, 801849c <_ZN8touchgfx7Unicode9vsnprintfEPttPKtPKcSt9__va_list+0x172>
 8018464:	880b      	ldrh	r3, [r1, #0]
 8018466:	2b69      	cmp	r3, #105	; 0x69
 8018468:	d01f      	beq.n	80184aa <_ZN8touchgfx7Unicode9vsnprintfEPttPKtPKcSt9__va_list+0x180>
 801846a:	d82f      	bhi.n	80184cc <_ZN8touchgfx7Unicode9vsnprintfEPttPKtPKcSt9__va_list+0x1a2>
 801846c:	2b58      	cmp	r3, #88	; 0x58
 801846e:	d01c      	beq.n	80184aa <_ZN8touchgfx7Unicode9vsnprintfEPttPKtPKcSt9__va_list+0x180>
 8018470:	d818      	bhi.n	80184a4 <_ZN8touchgfx7Unicode9vsnprintfEPttPKtPKcSt9__va_list+0x17a>
 8018472:	2b25      	cmp	r3, #37	; 0x25
 8018474:	d034      	beq.n	80184e0 <_ZN8touchgfx7Unicode9vsnprintfEPttPKtPKcSt9__va_list+0x1b6>
 8018476:	e9cd 5b08 	strd	r5, fp, [sp, #32]
 801847a:	9b0d      	ldr	r3, [sp, #52]	; 0x34
 801847c:	f1bb 0f00 	cmp.w	fp, #0
 8018480:	f000 80b8 	beq.w	80185f4 <_ZN8touchgfx7Unicode9vsnprintfEPttPKtPKcSt9__va_list+0x2ca>
 8018484:	f8bb 5000 	ldrh.w	r5, [fp]
 8018488:	f827 5013 	strh.w	r5, [r7, r3, lsl #1]
 801848c:	3301      	adds	r3, #1
 801848e:	930d      	str	r3, [sp, #52]	; 0x34
 8018490:	e029      	b.n	80184e6 <_ZN8touchgfx7Unicode9vsnprintfEPttPKtPKcSt9__va_list+0x1bc>
 8018492:	b10d      	cbz	r5, 8018498 <_ZN8touchgfx7Unicode9vsnprintfEPttPKtPKcSt9__va_list+0x16e>
 8018494:	782a      	ldrb	r2, [r5, #0]
 8018496:	e785      	b.n	80183a4 <_ZN8touchgfx7Unicode9vsnprintfEPttPKtPKcSt9__va_list+0x7a>
 8018498:	462a      	mov	r2, r5
 801849a:	e783      	b.n	80183a4 <_ZN8touchgfx7Unicode9vsnprintfEPttPKtPKcSt9__va_list+0x7a>
 801849c:	2a00      	cmp	r2, #0
 801849e:	d0ea      	beq.n	8018476 <_ZN8touchgfx7Unicode9vsnprintfEPttPKtPKcSt9__va_list+0x14c>
 80184a0:	7813      	ldrb	r3, [r2, #0]
 80184a2:	e7e0      	b.n	8018466 <_ZN8touchgfx7Unicode9vsnprintfEPttPKtPKcSt9__va_list+0x13c>
 80184a4:	3b63      	subs	r3, #99	; 0x63
 80184a6:	2b01      	cmp	r3, #1
 80184a8:	d8e5      	bhi.n	8018476 <_ZN8touchgfx7Unicode9vsnprintfEPttPKtPKcSt9__va_list+0x14c>
 80184aa:	f8cd 9040 	str.w	r9, [sp, #64]	; 0x40
 80184ae:	b329      	cbz	r1, 80184fc <_ZN8touchgfx7Unicode9vsnprintfEPttPKtPKcSt9__va_list+0x1d2>
 80184b0:	880b      	ldrh	r3, [r1, #0]
 80184b2:	2b69      	cmp	r3, #105	; 0x69
 80184b4:	d063      	beq.n	801857e <_ZN8touchgfx7Unicode9vsnprintfEPttPKtPKcSt9__va_list+0x254>
 80184b6:	d825      	bhi.n	8018504 <_ZN8touchgfx7Unicode9vsnprintfEPttPKtPKcSt9__va_list+0x1da>
 80184b8:	2b63      	cmp	r3, #99	; 0x63
 80184ba:	d038      	beq.n	801852e <_ZN8touchgfx7Unicode9vsnprintfEPttPKtPKcSt9__va_list+0x204>
 80184bc:	2b64      	cmp	r3, #100	; 0x64
 80184be:	d05e      	beq.n	801857e <_ZN8touchgfx7Unicode9vsnprintfEPttPKtPKcSt9__va_list+0x254>
 80184c0:	2b58      	cmp	r3, #88	; 0x58
 80184c2:	d07b      	beq.n	80185bc <_ZN8touchgfx7Unicode9vsnprintfEPttPKtPKcSt9__va_list+0x292>
 80184c4:	f8ad 6044 	strh.w	r6, [sp, #68]	; 0x44
 80184c8:	4625      	mov	r5, r4
 80184ca:	e036      	b.n	801853a <_ZN8touchgfx7Unicode9vsnprintfEPttPKtPKcSt9__va_list+0x210>
 80184cc:	2b73      	cmp	r3, #115	; 0x73
 80184ce:	d0ec      	beq.n	80184aa <_ZN8touchgfx7Unicode9vsnprintfEPttPKtPKcSt9__va_list+0x180>
 80184d0:	d802      	bhi.n	80184d8 <_ZN8touchgfx7Unicode9vsnprintfEPttPKtPKcSt9__va_list+0x1ae>
 80184d2:	2b6f      	cmp	r3, #111	; 0x6f
 80184d4:	d1cf      	bne.n	8018476 <_ZN8touchgfx7Unicode9vsnprintfEPttPKtPKcSt9__va_list+0x14c>
 80184d6:	e7e8      	b.n	80184aa <_ZN8touchgfx7Unicode9vsnprintfEPttPKtPKcSt9__va_list+0x180>
 80184d8:	2b75      	cmp	r3, #117	; 0x75
 80184da:	d0e6      	beq.n	80184aa <_ZN8touchgfx7Unicode9vsnprintfEPttPKtPKcSt9__va_list+0x180>
 80184dc:	2b78      	cmp	r3, #120	; 0x78
 80184de:	e7f9      	b.n	80184d4 <_ZN8touchgfx7Unicode9vsnprintfEPttPKtPKcSt9__va_list+0x1aa>
 80184e0:	9a0d      	ldr	r2, [sp, #52]	; 0x34
 80184e2:	f827 3012 	strh.w	r3, [r7, r2, lsl #1]
 80184e6:	9b09      	ldr	r3, [sp, #36]	; 0x24
 80184e8:	b10b      	cbz	r3, 80184ee <_ZN8touchgfx7Unicode9vsnprintfEPttPKtPKcSt9__va_list+0x1c4>
 80184ea:	3302      	adds	r3, #2
 80184ec:	9309      	str	r3, [sp, #36]	; 0x24
 80184ee:	9b08      	ldr	r3, [sp, #32]
 80184f0:	2b00      	cmp	r3, #0
 80184f2:	f43f af2e 	beq.w	8018352 <_ZN8touchgfx7Unicode9vsnprintfEPttPKtPKcSt9__va_list+0x28>
 80184f6:	3301      	adds	r3, #1
 80184f8:	9308      	str	r3, [sp, #32]
 80184fa:	e72a      	b.n	8018352 <_ZN8touchgfx7Unicode9vsnprintfEPttPKtPKcSt9__va_list+0x28>
 80184fc:	2a00      	cmp	r2, #0
 80184fe:	d0e1      	beq.n	80184c4 <_ZN8touchgfx7Unicode9vsnprintfEPttPKtPKcSt9__va_list+0x19a>
 8018500:	7813      	ldrb	r3, [r2, #0]
 8018502:	e7d6      	b.n	80184b2 <_ZN8touchgfx7Unicode9vsnprintfEPttPKtPKcSt9__va_list+0x188>
 8018504:	2b73      	cmp	r3, #115	; 0x73
 8018506:	d036      	beq.n	8018576 <_ZN8touchgfx7Unicode9vsnprintfEPttPKtPKcSt9__va_list+0x24c>
 8018508:	d807      	bhi.n	801851a <_ZN8touchgfx7Unicode9vsnprintfEPttPKtPKcSt9__va_list+0x1f0>
 801850a:	2b6f      	cmp	r3, #111	; 0x6f
 801850c:	d1da      	bne.n	80184c4 <_ZN8touchgfx7Unicode9vsnprintfEPttPKtPKcSt9__va_list+0x19a>
 801850e:	9a0d      	ldr	r2, [sp, #52]	; 0x34
 8018510:	1d25      	adds	r5, r4, #4
 8018512:	eba8 0202 	sub.w	r2, r8, r2
 8018516:	2308      	movs	r3, #8
 8018518:	e04a      	b.n	80185b0 <_ZN8touchgfx7Unicode9vsnprintfEPttPKtPKcSt9__va_list+0x286>
 801851a:	2b75      	cmp	r3, #117	; 0x75
 801851c:	d043      	beq.n	80185a6 <_ZN8touchgfx7Unicode9vsnprintfEPttPKtPKcSt9__va_list+0x27c>
 801851e:	2b78      	cmp	r3, #120	; 0x78
 8018520:	d1d0      	bne.n	80184c4 <_ZN8touchgfx7Unicode9vsnprintfEPttPKtPKcSt9__va_list+0x19a>
 8018522:	9a0d      	ldr	r2, [sp, #52]	; 0x34
 8018524:	1d25      	adds	r5, r4, #4
 8018526:	eba8 0202 	sub.w	r2, r8, r2
 801852a:	2310      	movs	r3, #16
 801852c:	e040      	b.n	80185b0 <_ZN8touchgfx7Unicode9vsnprintfEPttPKtPKcSt9__va_list+0x286>
 801852e:	6823      	ldr	r3, [r4, #0]
 8018530:	f8ad 3044 	strh.w	r3, [sp, #68]	; 0x44
 8018534:	1d25      	adds	r5, r4, #4
 8018536:	f8ad 6046 	strh.w	r6, [sp, #70]	; 0x46
 801853a:	9b09      	ldr	r3, [sp, #36]	; 0x24
 801853c:	f8bd 1032 	ldrh.w	r1, [sp, #50]	; 0x32
 8018540:	2b00      	cmp	r3, #0
 8018542:	d052      	beq.n	80185ea <_ZN8touchgfx7Unicode9vsnprintfEPttPKtPKcSt9__va_list+0x2c0>
 8018544:	881a      	ldrh	r2, [r3, #0]
 8018546:	f89d 3031 	ldrb.w	r3, [sp, #49]	; 0x31
 801854a:	a80d      	add	r0, sp, #52	; 0x34
 801854c:	9005      	str	r0, [sp, #20]
 801854e:	f89d 002d 	ldrb.w	r0, [sp, #45]	; 0x2d
 8018552:	9004      	str	r0, [sp, #16]
 8018554:	980e      	ldr	r0, [sp, #56]	; 0x38
 8018556:	9003      	str	r0, [sp, #12]
 8018558:	f89d 0030 	ldrb.w	r0, [sp, #48]	; 0x30
 801855c:	9002      	str	r0, [sp, #8]
 801855e:	980f      	ldr	r0, [sp, #60]	; 0x3c
 8018560:	9001      	str	r0, [sp, #4]
 8018562:	f89d 002f 	ldrb.w	r0, [sp, #47]	; 0x2f
 8018566:	9000      	str	r0, [sp, #0]
 8018568:	e9cd 8706 	strd	r8, r7, [sp, #24]
 801856c:	a810      	add	r0, sp, #64	; 0x40
 801856e:	f7ff fd49 	bl	8018004 <_ZN8touchgfx7Unicode13composeStringERPKtttbbibibRitPt>
 8018572:	462c      	mov	r4, r5
 8018574:	e7b7      	b.n	80184e6 <_ZN8touchgfx7Unicode9vsnprintfEPttPKtPKcSt9__va_list+0x1bc>
 8018576:	6823      	ldr	r3, [r4, #0]
 8018578:	1d25      	adds	r5, r4, #4
 801857a:	9310      	str	r3, [sp, #64]	; 0x40
 801857c:	e7dd      	b.n	801853a <_ZN8touchgfx7Unicode9vsnprintfEPttPKtPKcSt9__va_list+0x210>
 801857e:	9a0d      	ldr	r2, [sp, #52]	; 0x34
 8018580:	6820      	ldr	r0, [r4, #0]
 8018582:	eba8 0202 	sub.w	r2, r8, r2
 8018586:	230a      	movs	r3, #10
 8018588:	b292      	uxth	r2, r2
 801858a:	4649      	mov	r1, r9
 801858c:	f7ff fce4 	bl	8017f58 <_ZN8touchgfx7Unicode4itoaElPtti.part.2>
 8018590:	f8bd 3044 	ldrh.w	r3, [sp, #68]	; 0x44
 8018594:	2b2d      	cmp	r3, #45	; 0x2d
 8018596:	f104 0504 	add.w	r5, r4, #4
 801859a:	d1ce      	bne.n	801853a <_ZN8touchgfx7Unicode9vsnprintfEPttPKtPKcSt9__va_list+0x210>
 801859c:	f8ad 3032 	strh.w	r3, [sp, #50]	; 0x32
 80185a0:	9b10      	ldr	r3, [sp, #64]	; 0x40
 80185a2:	3302      	adds	r3, #2
 80185a4:	e7e9      	b.n	801857a <_ZN8touchgfx7Unicode9vsnprintfEPttPKtPKcSt9__va_list+0x250>
 80185a6:	9a0d      	ldr	r2, [sp, #52]	; 0x34
 80185a8:	1d25      	adds	r5, r4, #4
 80185aa:	eba8 0202 	sub.w	r2, r8, r2
 80185ae:	230a      	movs	r3, #10
 80185b0:	b292      	uxth	r2, r2
 80185b2:	4649      	mov	r1, r9
 80185b4:	6820      	ldr	r0, [r4, #0]
 80185b6:	f7ff fcfb 	bl	8017fb0 <_ZN8touchgfx7Unicode4utoaEmPtti.part.3>
 80185ba:	e7be      	b.n	801853a <_ZN8touchgfx7Unicode9vsnprintfEPttPKtPKcSt9__va_list+0x210>
 80185bc:	9a0d      	ldr	r2, [sp, #52]	; 0x34
 80185be:	6820      	ldr	r0, [r4, #0]
 80185c0:	eba8 0202 	sub.w	r2, r8, r2
 80185c4:	b292      	uxth	r2, r2
 80185c6:	2310      	movs	r3, #16
 80185c8:	4649      	mov	r1, r9
 80185ca:	f7ff fcf1 	bl	8017fb0 <_ZN8touchgfx7Unicode4utoaEmPtti.part.3>
 80185ce:	1d25      	adds	r5, r4, #4
 80185d0:	f10d 0242 	add.w	r2, sp, #66	; 0x42
 80185d4:	f832 3f02 	ldrh.w	r3, [r2, #2]!
 80185d8:	2b00      	cmp	r3, #0
 80185da:	d0ae      	beq.n	801853a <_ZN8touchgfx7Unicode9vsnprintfEPttPKtPKcSt9__va_list+0x210>
 80185dc:	f1a3 0161 	sub.w	r1, r3, #97	; 0x61
 80185e0:	2919      	cmp	r1, #25
 80185e2:	d8f7      	bhi.n	80185d4 <_ZN8touchgfx7Unicode9vsnprintfEPttPKtPKcSt9__va_list+0x2aa>
 80185e4:	3b20      	subs	r3, #32
 80185e6:	8013      	strh	r3, [r2, #0]
 80185e8:	e7f4      	b.n	80185d4 <_ZN8touchgfx7Unicode9vsnprintfEPttPKtPKcSt9__va_list+0x2aa>
 80185ea:	9a08      	ldr	r2, [sp, #32]
 80185ec:	2a00      	cmp	r2, #0
 80185ee:	d0aa      	beq.n	8018546 <_ZN8touchgfx7Unicode9vsnprintfEPttPKtPKcSt9__va_list+0x21c>
 80185f0:	7812      	ldrb	r2, [r2, #0]
 80185f2:	e7a8      	b.n	8018546 <_ZN8touchgfx7Unicode9vsnprintfEPttPKtPKcSt9__va_list+0x21c>
 80185f4:	2d00      	cmp	r5, #0
 80185f6:	f43f af47 	beq.w	8018488 <_ZN8touchgfx7Unicode9vsnprintfEPttPKtPKcSt9__va_list+0x15e>
 80185fa:	782d      	ldrb	r5, [r5, #0]
 80185fc:	e744      	b.n	8018488 <_ZN8touchgfx7Unicode9vsnprintfEPttPKtPKcSt9__va_list+0x15e>

080185fe <_ZN8touchgfx7Unicode9vsnprintfEPttPKcSt9__va_list>:
 80185fe:	b507      	push	{r0, r1, r2, lr}
 8018600:	9300      	str	r3, [sp, #0]
 8018602:	4613      	mov	r3, r2
 8018604:	2200      	movs	r2, #0
 8018606:	f7ff fe90 	bl	801832a <_ZN8touchgfx7Unicode9vsnprintfEPttPKtPKcSt9__va_list>
 801860a:	b003      	add	sp, #12
 801860c:	f85d fb04 	ldr.w	pc, [sp], #4

08018610 <_ZN8touchgfx7Unicode8snprintfEPttPKcz>:
 8018610:	b40c      	push	{r2, r3}
 8018612:	b507      	push	{r0, r1, r2, lr}
 8018614:	ab04      	add	r3, sp, #16
 8018616:	f853 2b04 	ldr.w	r2, [r3], #4
 801861a:	9301      	str	r3, [sp, #4]
 801861c:	f7ff ffef 	bl	80185fe <_ZN8touchgfx7Unicode9vsnprintfEPttPKcSt9__va_list>
 8018620:	b003      	add	sp, #12
 8018622:	f85d eb04 	ldr.w	lr, [sp], #4
 8018626:	b002      	add	sp, #8
 8018628:	4770      	bx	lr
	...

0801862c <_ZN8touchgfx7Unicode14snprintfFloatsEPttPKtPKcPKf>:
 801862c:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 8018630:	b0c5      	sub	sp, #276	; 0x114
 8018632:	2400      	movs	r4, #0
 8018634:	af11      	add	r7, sp, #68	; 0x44
 8018636:	4606      	mov	r6, r0
 8018638:	468a      	mov	sl, r1
 801863a:	e9cd 3208 	strd	r3, r2, [sp, #32]
 801863e:	4621      	mov	r1, r4
 8018640:	22c8      	movs	r2, #200	; 0xc8
 8018642:	4638      	mov	r0, r7
 8018644:	f8dd b138 	ldr.w	fp, [sp, #312]	; 0x138
 8018648:	940d      	str	r4, [sp, #52]	; 0x34
 801864a:	f011 ff00 	bl	802a44e <memset>
 801864e:	b16e      	cbz	r6, 801866c <_ZN8touchgfx7Unicode14snprintfFloatsEPttPKtPKcPKf+0x40>
 8018650:	ed9f 5aa8 	vldr	s10, [pc, #672]	; 80188f4 <_ZN8touchgfx7Unicode14snprintfFloatsEPttPKtPKcPKf+0x2c8>
 8018654:	9a09      	ldr	r2, [sp, #36]	; 0x24
 8018656:	9b0d      	ldr	r3, [sp, #52]	; 0x34
 8018658:	b162      	cbz	r2, 8018674 <_ZN8touchgfx7Unicode14snprintfFloatsEPttPKtPKcPKf+0x48>
 801865a:	8812      	ldrh	r2, [r2, #0]
 801865c:	b11a      	cbz	r2, 8018666 <_ZN8touchgfx7Unicode14snprintfFloatsEPttPKtPKcPKf+0x3a>
 801865e:	f10a 31ff 	add.w	r1, sl, #4294967295
 8018662:	4299      	cmp	r1, r3
 8018664:	dc2e      	bgt.n	80186c4 <_ZN8touchgfx7Unicode14snprintfFloatsEPttPKtPKcPKf+0x98>
 8018666:	2200      	movs	r2, #0
 8018668:	f826 2013 	strh.w	r2, [r6, r3, lsl #1]
 801866c:	4630      	mov	r0, r6
 801866e:	b045      	add	sp, #276	; 0x114
 8018670:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
 8018674:	9a08      	ldr	r2, [sp, #32]
 8018676:	2a00      	cmp	r2, #0
 8018678:	d0f5      	beq.n	8018666 <_ZN8touchgfx7Unicode14snprintfFloatsEPttPKtPKcPKf+0x3a>
 801867a:	7812      	ldrb	r2, [r2, #0]
 801867c:	e7ee      	b.n	801865c <_ZN8touchgfx7Unicode14snprintfFloatsEPttPKtPKcPKf+0x30>
 801867e:	2d00      	cmp	r5, #0
 8018680:	d0e8      	beq.n	8018654 <_ZN8touchgfx7Unicode14snprintfFloatsEPttPKtPKcPKf+0x28>
 8018682:	782a      	ldrb	r2, [r5, #0]
 8018684:	b142      	cbz	r2, 8018698 <_ZN8touchgfx7Unicode14snprintfFloatsEPttPKtPKcPKf+0x6c>
 8018686:	2a25      	cmp	r2, #37	; 0x25
 8018688:	d001      	beq.n	801868e <_ZN8touchgfx7Unicode14snprintfFloatsEPttPKtPKcPKf+0x62>
 801868a:	4299      	cmp	r1, r3
 801868c:	dc08      	bgt.n	80186a0 <_ZN8touchgfx7Unicode14snprintfFloatsEPttPKtPKcPKf+0x74>
 801868e:	f1b8 0f00 	cmp.w	r8, #0
 8018692:	d121      	bne.n	80186d8 <_ZN8touchgfx7Unicode14snprintfFloatsEPttPKtPKcPKf+0xac>
 8018694:	2d00      	cmp	r5, #0
 8018696:	d0dd      	beq.n	8018654 <_ZN8touchgfx7Unicode14snprintfFloatsEPttPKtPKcPKf+0x28>
 8018698:	782a      	ldrb	r2, [r5, #0]
 801869a:	f04f 0800 	mov.w	r8, #0
 801869e:	e01d      	b.n	80186dc <_ZN8touchgfx7Unicode14snprintfFloatsEPttPKtPKcPKf+0xb0>
 80186a0:	f1b8 0f00 	cmp.w	r8, #0
 80186a4:	d07f      	beq.n	80187a6 <_ZN8touchgfx7Unicode14snprintfFloatsEPttPKtPKcPKf+0x17a>
 80186a6:	f8b8 2000 	ldrh.w	r2, [r8]
 80186aa:	f826 2013 	strh.w	r2, [r6, r3, lsl #1]
 80186ae:	f1b8 0f00 	cmp.w	r8, #0
 80186b2:	d002      	beq.n	80186ba <_ZN8touchgfx7Unicode14snprintfFloatsEPttPKtPKcPKf+0x8e>
 80186b4:	f108 0202 	add.w	r2, r8, #2
 80186b8:	9209      	str	r2, [sp, #36]	; 0x24
 80186ba:	b10d      	cbz	r5, 80186c0 <_ZN8touchgfx7Unicode14snprintfFloatsEPttPKtPKcPKf+0x94>
 80186bc:	3501      	adds	r5, #1
 80186be:	9508      	str	r5, [sp, #32]
 80186c0:	3301      	adds	r3, #1
 80186c2:	930d      	str	r3, [sp, #52]	; 0x34
 80186c4:	e9dd 5808 	ldrd	r5, r8, [sp, #32]
 80186c8:	9b0d      	ldr	r3, [sp, #52]	; 0x34
 80186ca:	f1b8 0f00 	cmp.w	r8, #0
 80186ce:	d0d6      	beq.n	801867e <_ZN8touchgfx7Unicode14snprintfFloatsEPttPKtPKcPKf+0x52>
 80186d0:	f8b8 2000 	ldrh.w	r2, [r8]
 80186d4:	2a00      	cmp	r2, #0
 80186d6:	d1d6      	bne.n	8018686 <_ZN8touchgfx7Unicode14snprintfFloatsEPttPKtPKcPKf+0x5a>
 80186d8:	f8b8 2000 	ldrh.w	r2, [r8]
 80186dc:	2a00      	cmp	r2, #0
 80186de:	d0b9      	beq.n	8018654 <_ZN8touchgfx7Unicode14snprintfFloatsEPttPKtPKcPKf+0x28>
 80186e0:	4299      	cmp	r1, r3
 80186e2:	ddb7      	ble.n	8018654 <_ZN8touchgfx7Unicode14snprintfFloatsEPttPKtPKcPKf+0x28>
 80186e4:	2300      	movs	r3, #0
 80186e6:	f8ad 3032 	strh.w	r3, [sp, #50]	; 0x32
 80186ea:	f88d 302d 	strb.w	r3, [sp, #45]	; 0x2d
 80186ee:	f88d 302e 	strb.w	r3, [sp, #46]	; 0x2e
 80186f2:	f88d 302f 	strb.w	r3, [sp, #47]	; 0x2f
 80186f6:	f88d 3030 	strb.w	r3, [sp, #48]	; 0x30
 80186fa:	930e      	str	r3, [sp, #56]	; 0x38
 80186fc:	f88d 3031 	strb.w	r3, [sp, #49]	; 0x31
 8018700:	930f      	str	r3, [sp, #60]	; 0x3c
 8018702:	f1b8 0f00 	cmp.w	r8, #0
 8018706:	d002      	beq.n	801870e <_ZN8touchgfx7Unicode14snprintfFloatsEPttPKtPKcPKf+0xe2>
 8018708:	f108 0302 	add.w	r3, r8, #2
 801870c:	9309      	str	r3, [sp, #36]	; 0x24
 801870e:	b10d      	cbz	r5, 8018714 <_ZN8touchgfx7Unicode14snprintfFloatsEPttPKtPKcPKf+0xe8>
 8018710:	1c6b      	adds	r3, r5, #1
 8018712:	9308      	str	r3, [sp, #32]
 8018714:	ab0f      	add	r3, sp, #60	; 0x3c
 8018716:	9305      	str	r3, [sp, #20]
 8018718:	f10d 0331 	add.w	r3, sp, #49	; 0x31
 801871c:	9304      	str	r3, [sp, #16]
 801871e:	ab0e      	add	r3, sp, #56	; 0x38
 8018720:	9303      	str	r3, [sp, #12]
 8018722:	ab0c      	add	r3, sp, #48	; 0x30
 8018724:	9302      	str	r3, [sp, #8]
 8018726:	f10d 032f 	add.w	r3, sp, #47	; 0x2f
 801872a:	9301      	str	r3, [sp, #4]
 801872c:	f10d 032e 	add.w	r3, sp, #46	; 0x2e
 8018730:	9300      	str	r3, [sp, #0]
 8018732:	f10d 0232 	add.w	r2, sp, #50	; 0x32
 8018736:	f10d 032d 	add.w	r3, sp, #45	; 0x2d
 801873a:	a908      	add	r1, sp, #32
 801873c:	a809      	add	r0, sp, #36	; 0x24
 801873e:	f7ff fd24 	bl	801818a <_ZN8touchgfx7Unicode22parseFlagsAndPrecisionERPKtRPKcRtRbS8_S8_S8_RiS8_S9_>
 8018742:	9b0e      	ldr	r3, [sp, #56]	; 0x38
 8018744:	2b00      	cmp	r3, #0
 8018746:	da0b      	bge.n	8018760 <_ZN8touchgfx7Unicode14snprintfFloatsEPttPKtPKcPKf+0x134>
 8018748:	eb0b 0384 	add.w	r3, fp, r4, lsl #2
 801874c:	edd3 7a00 	vldr	s15, [r3]
 8018750:	eefd 7ae7 	vcvt.s32.f32	s15, s15
 8018754:	3401      	adds	r4, #1
 8018756:	ee17 3a90 	vmov	r3, s15
 801875a:	ea23 73e3 	bic.w	r3, r3, r3, asr #31
 801875e:	930e      	str	r3, [sp, #56]	; 0x38
 8018760:	9b0f      	ldr	r3, [sp, #60]	; 0x3c
 8018762:	2b00      	cmp	r3, #0
 8018764:	da0b      	bge.n	801877e <_ZN8touchgfx7Unicode14snprintfFloatsEPttPKtPKcPKf+0x152>
 8018766:	eb0b 0384 	add.w	r3, fp, r4, lsl #2
 801876a:	edd3 7a00 	vldr	s15, [r3]
 801876e:	eefd 7ae7 	vcvt.s32.f32	s15, s15
 8018772:	3401      	adds	r4, #1
 8018774:	ee17 3a90 	vmov	r3, s15
 8018778:	ea23 73e3 	bic.w	r3, r3, r3, asr #31
 801877c:	930f      	str	r3, [sp, #60]	; 0x3c
 801877e:	9b09      	ldr	r3, [sp, #36]	; 0x24
 8018780:	b1b3      	cbz	r3, 80187b0 <_ZN8touchgfx7Unicode14snprintfFloatsEPttPKtPKcPKf+0x184>
 8018782:	881a      	ldrh	r2, [r3, #0]
 8018784:	2a25      	cmp	r2, #37	; 0x25
 8018786:	d018      	beq.n	80187ba <_ZN8touchgfx7Unicode14snprintfFloatsEPttPKtPKcPKf+0x18e>
 8018788:	2a66      	cmp	r2, #102	; 0x66
 801878a:	d01c      	beq.n	80187c6 <_ZN8touchgfx7Unicode14snprintfFloatsEPttPKtPKcPKf+0x19a>
 801878c:	e9cd 5808 	strd	r5, r8, [sp, #32]
 8018790:	9b0d      	ldr	r3, [sp, #52]	; 0x34
 8018792:	f1b8 0f00 	cmp.w	r8, #0
 8018796:	f000 8121 	beq.w	80189dc <_ZN8touchgfx7Unicode14snprintfFloatsEPttPKtPKcPKf+0x3b0>
 801879a:	f8b8 5000 	ldrh.w	r5, [r8]
 801879e:	f826 5013 	strh.w	r5, [r6, r3, lsl #1]
 80187a2:	3301      	adds	r3, #1
 80187a4:	e00d      	b.n	80187c2 <_ZN8touchgfx7Unicode14snprintfFloatsEPttPKtPKcPKf+0x196>
 80187a6:	b10d      	cbz	r5, 80187ac <_ZN8touchgfx7Unicode14snprintfFloatsEPttPKtPKcPKf+0x180>
 80187a8:	782a      	ldrb	r2, [r5, #0]
 80187aa:	e77e      	b.n	80186aa <_ZN8touchgfx7Unicode14snprintfFloatsEPttPKtPKcPKf+0x7e>
 80187ac:	462a      	mov	r2, r5
 80187ae:	e77c      	b.n	80186aa <_ZN8touchgfx7Unicode14snprintfFloatsEPttPKtPKcPKf+0x7e>
 80187b0:	9b08      	ldr	r3, [sp, #32]
 80187b2:	2b00      	cmp	r3, #0
 80187b4:	d0ea      	beq.n	801878c <_ZN8touchgfx7Unicode14snprintfFloatsEPttPKtPKcPKf+0x160>
 80187b6:	781a      	ldrb	r2, [r3, #0]
 80187b8:	e7e4      	b.n	8018784 <_ZN8touchgfx7Unicode14snprintfFloatsEPttPKtPKcPKf+0x158>
 80187ba:	9b0d      	ldr	r3, [sp, #52]	; 0x34
 80187bc:	f826 2013 	strh.w	r2, [r6, r3, lsl #1]
 80187c0:	3302      	adds	r3, #2
 80187c2:	930d      	str	r3, [sp, #52]	; 0x34
 80187c4:	e041      	b.n	801884a <_ZN8touchgfx7Unicode14snprintfFloatsEPttPKtPKcPKf+0x21e>
 80187c6:	eb0b 0384 	add.w	r3, fp, r4, lsl #2
 80187ca:	edd3 7a00 	vldr	s15, [r3]
 80187ce:	f89d 3031 	ldrb.w	r3, [sp, #49]	; 0x31
 80187d2:	9710      	str	r7, [sp, #64]	; 0x40
 80187d4:	3401      	adds	r4, #1
 80187d6:	b923      	cbnz	r3, 80187e2 <_ZN8touchgfx7Unicode14snprintfFloatsEPttPKtPKcPKf+0x1b6>
 80187d8:	2301      	movs	r3, #1
 80187da:	f88d 3031 	strb.w	r3, [sp, #49]	; 0x31
 80187de:	2306      	movs	r3, #6
 80187e0:	930f      	str	r3, [sp, #60]	; 0x3c
 80187e2:	eef5 7ac0 	vcmpe.f32	s15, #0.0
 80187e6:	eef1 fa10 	vmrs	APSR_nzcv, fpscr
 80187ea:	bf48      	it	mi
 80187ec:	eef1 7a67 	vnegmi.f32	s15, s15
 80187f0:	eeb0 7ae7 	vabs.f32	s14, s15
 80187f4:	bf48      	it	mi
 80187f6:	232d      	movmi	r3, #45	; 0x2d
 80187f8:	eeb4 7a45 	vcmp.f32	s14, s10
 80187fc:	bf48      	it	mi
 80187fe:	f8ad 3032 	strhmi.w	r3, [sp, #50]	; 0x32
 8018802:	eef1 fa10 	vmrs	APSR_nzcv, fpscr
 8018806:	dd2b      	ble.n	8018860 <_ZN8touchgfx7Unicode14snprintfFloatsEPttPKtPKcPKf+0x234>
 8018808:	4b3b      	ldr	r3, [pc, #236]	; (80188f8 <_ZN8touchgfx7Unicode14snprintfFloatsEPttPKtPKcPKf+0x2cc>)
 801880a:	9311      	str	r3, [sp, #68]	; 0x44
 801880c:	2366      	movs	r3, #102	; 0x66
 801880e:	9312      	str	r3, [sp, #72]	; 0x48
 8018810:	9b09      	ldr	r3, [sp, #36]	; 0x24
 8018812:	f8bd 1032 	ldrh.w	r1, [sp, #50]	; 0x32
 8018816:	2b00      	cmp	r3, #0
 8018818:	f000 80da 	beq.w	80189d0 <_ZN8touchgfx7Unicode14snprintfFloatsEPttPKtPKcPKf+0x3a4>
 801881c:	881a      	ldrh	r2, [r3, #0]
 801881e:	f89d 3031 	ldrb.w	r3, [sp, #49]	; 0x31
 8018822:	a80d      	add	r0, sp, #52	; 0x34
 8018824:	9005      	str	r0, [sp, #20]
 8018826:	f89d 002d 	ldrb.w	r0, [sp, #45]	; 0x2d
 801882a:	9004      	str	r0, [sp, #16]
 801882c:	980e      	ldr	r0, [sp, #56]	; 0x38
 801882e:	9003      	str	r0, [sp, #12]
 8018830:	f89d 0030 	ldrb.w	r0, [sp, #48]	; 0x30
 8018834:	9002      	str	r0, [sp, #8]
 8018836:	980f      	ldr	r0, [sp, #60]	; 0x3c
 8018838:	9001      	str	r0, [sp, #4]
 801883a:	f89d 002f 	ldrb.w	r0, [sp, #47]	; 0x2f
 801883e:	9000      	str	r0, [sp, #0]
 8018840:	e9cd a606 	strd	sl, r6, [sp, #24]
 8018844:	a810      	add	r0, sp, #64	; 0x40
 8018846:	f7ff fbdd 	bl	8018004 <_ZN8touchgfx7Unicode13composeStringERPKtttbbibibRitPt>
 801884a:	9b09      	ldr	r3, [sp, #36]	; 0x24
 801884c:	b10b      	cbz	r3, 8018852 <_ZN8touchgfx7Unicode14snprintfFloatsEPttPKtPKcPKf+0x226>
 801884e:	3302      	adds	r3, #2
 8018850:	9309      	str	r3, [sp, #36]	; 0x24
 8018852:	9b08      	ldr	r3, [sp, #32]
 8018854:	2b00      	cmp	r3, #0
 8018856:	f43f aefd 	beq.w	8018654 <_ZN8touchgfx7Unicode14snprintfFloatsEPttPKtPKcPKf+0x28>
 801885a:	3301      	adds	r3, #1
 801885c:	9308      	str	r3, [sp, #32]
 801885e:	e6f9      	b.n	8018654 <_ZN8touchgfx7Unicode14snprintfFloatsEPttPKtPKcPKf+0x28>
 8018860:	eef4 7a67 	vcmp.f32	s15, s15
 8018864:	eef1 fa10 	vmrs	APSR_nzcv, fpscr
 8018868:	d63a      	bvs.n	80188e0 <_ZN8touchgfx7Unicode14snprintfFloatsEPttPKtPKcPKf+0x2b4>
 801886a:	f10d 0846 	add.w	r8, sp, #70	; 0x46
 801886e:	eeb2 7a04 	vmov.f32	s14, #36	; 0x41200000  10.0
 8018872:	f8cd 8040 	str.w	r8, [sp, #64]	; 0x40
 8018876:	eeb0 6a67 	vmov.f32	s12, s15
 801887a:	eef7 6a00 	vmov.f32	s13, #112	; 0x3f800000  1.0
 801887e:	eef0 5a47 	vmov.f32	s11, s14
 8018882:	eeb4 6ac7 	vcmpe.f32	s12, s14
 8018886:	eef1 fa10 	vmrs	APSR_nzcv, fpscr
 801888a:	da2d      	bge.n	80188e8 <_ZN8touchgfx7Unicode14snprintfFloatsEPttPKtPKcPKf+0x2bc>
 801888c:	9a0d      	ldr	r2, [sp, #52]	; 0x34
 801888e:	eeb6 6a00 	vmov.f32	s12, #96	; 0x3f000000  0.5
 8018892:	2100      	movs	r1, #0
 8018894:	eef0 4a46 	vmov.f32	s9, s12
 8018898:	ebaa 0202 	sub.w	r2, sl, r2
 801889c:	eef4 6ac6 	vcmpe.f32	s13, s12
 80188a0:	eef1 fa10 	vmrs	APSR_nzcv, fpscr
 80188a4:	b28d      	uxth	r5, r1
 80188a6:	db2c      	blt.n	8018902 <_ZN8touchgfx7Unicode14snprintfFloatsEPttPKtPKcPKf+0x2d6>
 80188a8:	1a53      	subs	r3, r2, r1
 80188aa:	2b00      	cmp	r3, #0
 80188ac:	dd29      	ble.n	8018902 <_ZN8touchgfx7Unicode14snprintfFloatsEPttPKtPKcPKf+0x2d6>
 80188ae:	3101      	adds	r1, #1
 80188b0:	2964      	cmp	r1, #100	; 0x64
 80188b2:	d025      	beq.n	8018900 <_ZN8touchgfx7Unicode14snprintfFloatsEPttPKtPKcPKf+0x2d4>
 80188b4:	ee87 7aa6 	vdiv.f32	s14, s15, s13
 80188b8:	eebd 7ac7 	vcvt.s32.f32	s14, s14
 80188bc:	ee17 3a10 	vmov	r3, s14
 80188c0:	2b09      	cmp	r3, #9
 80188c2:	bfa8      	it	ge
 80188c4:	2309      	movge	r3, #9
 80188c6:	ee07 3a10 	vmov	s14, r3
 80188ca:	eeb8 7ac7 	vcvt.f32.s32	s14, s14
 80188ce:	f103 0030 	add.w	r0, r3, #48	; 0x30
 80188d2:	eee7 7a66 	vfms.f32	s15, s14, s13
 80188d6:	f827 0011 	strh.w	r0, [r7, r1, lsl #1]
 80188da:	eec6 6aa5 	vdiv.f32	s13, s13, s11
 80188de:	e7dd      	b.n	801889c <_ZN8touchgfx7Unicode14snprintfFloatsEPttPKtPKcPKf+0x270>
 80188e0:	4b06      	ldr	r3, [pc, #24]	; (80188fc <_ZN8touchgfx7Unicode14snprintfFloatsEPttPKtPKcPKf+0x2d0>)
 80188e2:	9311      	str	r3, [sp, #68]	; 0x44
 80188e4:	236e      	movs	r3, #110	; 0x6e
 80188e6:	e792      	b.n	801880e <_ZN8touchgfx7Unicode14snprintfFloatsEPttPKtPKcPKf+0x1e2>
 80188e8:	ee66 6a87 	vmul.f32	s13, s13, s14
 80188ec:	ee86 6a07 	vdiv.f32	s12, s12, s14
 80188f0:	e7c7      	b.n	8018882 <_ZN8touchgfx7Unicode14snprintfFloatsEPttPKtPKcPKf+0x256>
 80188f2:	bf00      	nop
 80188f4:	7f7fffff 	.word	0x7f7fffff
 80188f8:	006e0069 	.word	0x006e0069
 80188fc:	0061006e 	.word	0x0061006e
 8018900:	2563      	movs	r5, #99	; 0x63
 8018902:	2a63      	cmp	r2, #99	; 0x63
 8018904:	bfd4      	ite	le
 8018906:	ebc5 0202 	rsble	r2, r5, r2
 801890a:	f1c5 0263 	rsbgt	r2, r5, #99	; 0x63
 801890e:	2a00      	cmp	r2, #0
 8018910:	dd43      	ble.n	801899a <_ZN8touchgfx7Unicode14snprintfFloatsEPttPKtPKcPKf+0x36e>
 8018912:	9b0f      	ldr	r3, [sp, #60]	; 0x3c
 8018914:	2b00      	cmp	r3, #0
 8018916:	dd40      	ble.n	801899a <_ZN8touchgfx7Unicode14snprintfFloatsEPttPKtPKcPKf+0x36e>
 8018918:	f04f 0901 	mov.w	r9, #1
 801891c:	210a      	movs	r1, #10
 801891e:	f113 33ff 	adds.w	r3, r3, #4294967295
 8018922:	d30c      	bcc.n	801893e <_ZN8touchgfx7Unicode14snprintfFloatsEPttPKtPKcPKf+0x312>
 8018924:	ee67 7aa5 	vmul.f32	s15, s15, s11
 8018928:	eebd 7ae7 	vcvt.s32.f32	s14, s15
 801892c:	ee17 0a10 	vmov	r0, s14
 8018930:	eeb8 7ac7 	vcvt.f32.s32	s14, s14
 8018934:	fb01 0909 	mla	r9, r1, r9, r0
 8018938:	ee77 7ac7 	vsub.f32	s15, s15, s14
 801893c:	e7ef      	b.n	801891e <_ZN8touchgfx7Unicode14snprintfFloatsEPttPKtPKcPKf+0x2f2>
 801893e:	3501      	adds	r5, #1
 8018940:	930f      	str	r3, [sp, #60]	; 0x3c
 8018942:	b292      	uxth	r2, r2
 8018944:	230a      	movs	r3, #10
 8018946:	eb07 0145 	add.w	r1, r7, r5, lsl #1
 801894a:	4648      	mov	r0, r9
 801894c:	f7ff fb4e 	bl	8017fec <_ZN8touchgfx7Unicode4itoaElPtti>
 8018950:	f1b9 0f01 	cmp.w	r9, #1
 8018954:	dc1f      	bgt.n	8018996 <_ZN8touchgfx7Unicode14snprintfFloatsEPttPKtPKcPKf+0x36a>
 8018956:	f89d 302e 	ldrb.w	r3, [sp, #46]	; 0x2e
 801895a:	2b00      	cmp	r3, #0
 801895c:	bf0c      	ite	eq
 801895e:	2300      	moveq	r3, #0
 8018960:	232e      	movne	r3, #46	; 0x2e
 8018962:	aa44      	add	r2, sp, #272	; 0x110
 8018964:	eb02 0545 	add.w	r5, r2, r5, lsl #1
 8018968:	eef4 7ae4 	vcmpe.f32	s15, s9
 801896c:	eef1 fa10 	vmrs	APSR_nzcv, fpscr
 8018970:	f825 3ccc 	strh.w	r3, [r5, #-204]
 8018974:	f6ff af4c 	blt.w	8018810 <_ZN8touchgfx7Unicode14snprintfFloatsEPttPKtPKcPKf+0x1e4>
 8018978:	2300      	movs	r3, #0
 801897a:	f838 2b02 	ldrh.w	r2, [r8], #2
 801897e:	1c59      	adds	r1, r3, #1
 8018980:	b98a      	cbnz	r2, 80189a6 <_ZN8touchgfx7Unicode14snprintfFloatsEPttPKtPKcPKf+0x37a>
 8018982:	b29b      	uxth	r3, r3
 8018984:	2130      	movs	r1, #48	; 0x30
 8018986:	b983      	cbnz	r3, 80189aa <_ZN8touchgfx7Unicode14snprintfFloatsEPttPKtPKcPKf+0x37e>
 8018988:	2331      	movs	r3, #49	; 0x31
 801898a:	f8ad 3044 	strh.w	r3, [sp, #68]	; 0x44
 801898e:	9b10      	ldr	r3, [sp, #64]	; 0x40
 8018990:	3b02      	subs	r3, #2
 8018992:	9310      	str	r3, [sp, #64]	; 0x40
 8018994:	e73c      	b.n	8018810 <_ZN8touchgfx7Unicode14snprintfFloatsEPttPKtPKcPKf+0x1e4>
 8018996:	232e      	movs	r3, #46	; 0x2e
 8018998:	e7e3      	b.n	8018962 <_ZN8touchgfx7Unicode14snprintfFloatsEPttPKtPKcPKf+0x336>
 801899a:	ab44      	add	r3, sp, #272	; 0x110
 801899c:	3501      	adds	r5, #1
 801899e:	eb03 0545 	add.w	r5, r3, r5, lsl #1
 80189a2:	2300      	movs	r3, #0
 80189a4:	e7e0      	b.n	8018968 <_ZN8touchgfx7Unicode14snprintfFloatsEPttPKtPKcPKf+0x33c>
 80189a6:	460b      	mov	r3, r1
 80189a8:	e7e7      	b.n	801897a <_ZN8touchgfx7Unicode14snprintfFloatsEPttPKtPKcPKf+0x34e>
 80189aa:	f837 2013 	ldrh.w	r2, [r7, r3, lsl #1]
 80189ae:	f1a2 0030 	sub.w	r0, r2, #48	; 0x30
 80189b2:	2808      	cmp	r0, #8
 80189b4:	d806      	bhi.n	80189c4 <_ZN8touchgfx7Unicode14snprintfFloatsEPttPKtPKcPKf+0x398>
 80189b6:	a944      	add	r1, sp, #272	; 0x110
 80189b8:	eb01 0343 	add.w	r3, r1, r3, lsl #1
 80189bc:	3201      	adds	r2, #1
 80189be:	f823 2ccc 	strh.w	r2, [r3, #-204]
 80189c2:	e725      	b.n	8018810 <_ZN8touchgfx7Unicode14snprintfFloatsEPttPKtPKcPKf+0x1e4>
 80189c4:	2a39      	cmp	r2, #57	; 0x39
 80189c6:	bf08      	it	eq
 80189c8:	f827 1013 	strheq.w	r1, [r7, r3, lsl #1]
 80189cc:	3b01      	subs	r3, #1
 80189ce:	e7da      	b.n	8018986 <_ZN8touchgfx7Unicode14snprintfFloatsEPttPKtPKcPKf+0x35a>
 80189d0:	9a08      	ldr	r2, [sp, #32]
 80189d2:	2a00      	cmp	r2, #0
 80189d4:	f43f af23 	beq.w	801881e <_ZN8touchgfx7Unicode14snprintfFloatsEPttPKtPKcPKf+0x1f2>
 80189d8:	7812      	ldrb	r2, [r2, #0]
 80189da:	e720      	b.n	801881e <_ZN8touchgfx7Unicode14snprintfFloatsEPttPKtPKcPKf+0x1f2>
 80189dc:	2d00      	cmp	r5, #0
 80189de:	f43f aede 	beq.w	801879e <_ZN8touchgfx7Unicode14snprintfFloatsEPttPKtPKcPKf+0x172>
 80189e2:	782d      	ldrb	r5, [r5, #0]
 80189e4:	e6db      	b.n	801879e <_ZN8touchgfx7Unicode14snprintfFloatsEPttPKtPKcPKf+0x172>
 80189e6:	bf00      	nop

080189e8 <_ZN8touchgfx7Unicode14snprintfFloatsEPttPKcPKf>:
 80189e8:	b507      	push	{r0, r1, r2, lr}
 80189ea:	9300      	str	r3, [sp, #0]
 80189ec:	4613      	mov	r3, r2
 80189ee:	2200      	movs	r2, #0
 80189f0:	f7ff fe1c 	bl	801862c <_ZN8touchgfx7Unicode14snprintfFloatsEPttPKtPKcPKf>
 80189f4:	b003      	add	sp, #12
 80189f6:	f85d fb04 	ldr.w	pc, [sp], #4
	...

080189fc <_ZN8touchgfx11FontManager15setFontProviderEPNS_12FontProviderE>:
 80189fc:	4b01      	ldr	r3, [pc, #4]	; (8018a04 <_ZN8touchgfx11FontManager15setFontProviderEPNS_12FontProviderE+0x8>)
 80189fe:	6018      	str	r0, [r3, #0]
 8018a00:	4770      	bx	lr
 8018a02:	bf00      	nop
 8018a04:	20012f8c 	.word	0x20012f8c

08018a08 <_ZN8touchgfx6Bitmap15isDynamicBitmapEt>:
 8018a08:	4b06      	ldr	r3, [pc, #24]	; (8018a24 <_ZN8touchgfx6Bitmap15isDynamicBitmapEt+0x1c>)
 8018a0a:	881a      	ldrh	r2, [r3, #0]
 8018a0c:	4282      	cmp	r2, r0
 8018a0e:	d807      	bhi.n	8018a20 <_ZN8touchgfx6Bitmap15isDynamicBitmapEt+0x18>
 8018a10:	4b05      	ldr	r3, [pc, #20]	; (8018a28 <_ZN8touchgfx6Bitmap15isDynamicBitmapEt+0x20>)
 8018a12:	881b      	ldrh	r3, [r3, #0]
 8018a14:	4413      	add	r3, r2
 8018a16:	4298      	cmp	r0, r3
 8018a18:	bfac      	ite	ge
 8018a1a:	2000      	movge	r0, #0
 8018a1c:	2001      	movlt	r0, #1
 8018a1e:	4770      	bx	lr
 8018a20:	2000      	movs	r0, #0
 8018a22:	4770      	bx	lr
 8018a24:	20012fac 	.word	0x20012fac
 8018a28:	20012fb0 	.word	0x20012fb0

08018a2c <_ZN8touchgfx6Bitmap23dynamicBitmapGetAddressEt>:
 8018a2c:	b508      	push	{r3, lr}
 8018a2e:	4601      	mov	r1, r0
 8018a30:	f7ff ffea 	bl	8018a08 <_ZN8touchgfx6Bitmap15isDynamicBitmapEt>
 8018a34:	b118      	cbz	r0, 8018a3e <_ZN8touchgfx6Bitmap23dynamicBitmapGetAddressEt+0x12>
 8018a36:	4b02      	ldr	r3, [pc, #8]	; (8018a40 <_ZN8touchgfx6Bitmap23dynamicBitmapGetAddressEt+0x14>)
 8018a38:	681b      	ldr	r3, [r3, #0]
 8018a3a:	f853 0021 	ldr.w	r0, [r3, r1, lsl #2]
 8018a3e:	bd08      	pop	{r3, pc}
 8018a40:	20012f90 	.word	0x20012f90

08018a44 <_ZN8touchgfx6Bitmap10clearCacheEv>:
 8018a44:	b5f0      	push	{r4, r5, r6, r7, lr}
 8018a46:	4c24      	ldr	r4, [pc, #144]	; (8018ad8 <_ZN8touchgfx6Bitmap10clearCacheEv+0x94>)
 8018a48:	6823      	ldr	r3, [r4, #0]
 8018a4a:	2b00      	cmp	r3, #0
 8018a4c:	d042      	beq.n	8018ad4 <_ZN8touchgfx6Bitmap10clearCacheEv+0x90>
 8018a4e:	4a23      	ldr	r2, [pc, #140]	; (8018adc <_ZN8touchgfx6Bitmap10clearCacheEv+0x98>)
 8018a50:	4d23      	ldr	r5, [pc, #140]	; (8018ae0 <_ZN8touchgfx6Bitmap10clearCacheEv+0x9c>)
 8018a52:	8811      	ldrh	r1, [r2, #0]
 8018a54:	f8b5 c000 	ldrh.w	ip, [r5]
 8018a58:	4822      	ldr	r0, [pc, #136]	; (8018ae4 <_ZN8touchgfx6Bitmap10clearCacheEv+0xa0>)
 8018a5a:	4461      	add	r1, ip
 8018a5c:	1c4a      	adds	r2, r1, #1
 8018a5e:	f022 0201 	bic.w	r2, r2, #1
 8018a62:	008f      	lsls	r7, r1, #2
 8018a64:	0412      	lsls	r2, r2, #16
 8018a66:	19de      	adds	r6, r3, r7
 8018a68:	0c12      	lsrs	r2, r2, #16
 8018a6a:	eb07 0742 	add.w	r7, r7, r2, lsl #1
 8018a6e:	6006      	str	r6, [r0, #0]
 8018a70:	4e1d      	ldr	r6, [pc, #116]	; (8018ae8 <_ZN8touchgfx6Bitmap10clearCacheEv+0xa4>)
 8018a72:	19da      	adds	r2, r3, r7
 8018a74:	6032      	str	r2, [r6, #0]
 8018a76:	220e      	movs	r2, #14
 8018a78:	fb02 f20c 	mul.w	r2, r2, ip
 8018a7c:	3203      	adds	r2, #3
 8018a7e:	f022 0203 	bic.w	r2, r2, #3
 8018a82:	443a      	add	r2, r7
 8018a84:	4f19      	ldr	r7, [pc, #100]	; (8018aec <_ZN8touchgfx6Bitmap10clearCacheEv+0xa8>)
 8018a86:	4413      	add	r3, r2
 8018a88:	603b      	str	r3, [r7, #0]
 8018a8a:	4f19      	ldr	r7, [pc, #100]	; (8018af0 <_ZN8touchgfx6Bitmap10clearCacheEv+0xac>)
 8018a8c:	2300      	movs	r3, #0
 8018a8e:	803b      	strh	r3, [r7, #0]
 8018a90:	4f18      	ldr	r7, [pc, #96]	; (8018af4 <_ZN8touchgfx6Bitmap10clearCacheEv+0xb0>)
 8018a92:	683f      	ldr	r7, [r7, #0]
 8018a94:	1aba      	subs	r2, r7, r2
 8018a96:	4f18      	ldr	r7, [pc, #96]	; (8018af8 <_ZN8touchgfx6Bitmap10clearCacheEv+0xb4>)
 8018a98:	603a      	str	r2, [r7, #0]
 8018a9a:	4a18      	ldr	r2, [pc, #96]	; (8018afc <_ZN8touchgfx6Bitmap10clearCacheEv+0xb8>)
 8018a9c:	469c      	mov	ip, r3
 8018a9e:	8013      	strh	r3, [r2, #0]
 8018aa0:	f64f 77ff 	movw	r7, #65535	; 0xffff
 8018aa4:	428b      	cmp	r3, r1
 8018aa6:	d10d      	bne.n	8018ac4 <_ZN8touchgfx6Bitmap10clearCacheEv+0x80>
 8018aa8:	882d      	ldrh	r5, [r5, #0]
 8018aaa:	6830      	ldr	r0, [r6, #0]
 8018aac:	2300      	movs	r3, #0
 8018aae:	240e      	movs	r4, #14
 8018ab0:	429d      	cmp	r5, r3
 8018ab2:	d90f      	bls.n	8018ad4 <_ZN8touchgfx6Bitmap10clearCacheEv+0x90>
 8018ab4:	fb04 0203 	mla	r2, r4, r3, r0
 8018ab8:	3301      	adds	r3, #1
 8018aba:	7b11      	ldrb	r1, [r2, #12]
 8018abc:	f36f 1145 	bfc	r1, #5, #1
 8018ac0:	7311      	strb	r1, [r2, #12]
 8018ac2:	e7f5      	b.n	8018ab0 <_ZN8touchgfx6Bitmap10clearCacheEv+0x6c>
 8018ac4:	6822      	ldr	r2, [r4, #0]
 8018ac6:	f842 c023 	str.w	ip, [r2, r3, lsl #2]
 8018aca:	6802      	ldr	r2, [r0, #0]
 8018acc:	f822 7013 	strh.w	r7, [r2, r3, lsl #1]
 8018ad0:	3301      	adds	r3, #1
 8018ad2:	e7e7      	b.n	8018aa4 <_ZN8touchgfx6Bitmap10clearCacheEv+0x60>
 8018ad4:	bdf0      	pop	{r4, r5, r6, r7, pc}
 8018ad6:	bf00      	nop
 8018ad8:	20012f90 	.word	0x20012f90
 8018adc:	20012fac 	.word	0x20012fac
 8018ae0:	20012fb0 	.word	0x20012fb0
 8018ae4:	20012fa4 	.word	0x20012fa4
 8018ae8:	20012f94 	.word	0x20012f94
 8018aec:	20012f9c 	.word	0x20012f9c
 8018af0:	20012fae 	.word	0x20012fae
 8018af4:	20012f98 	.word	0x20012f98
 8018af8:	20012fa8 	.word	0x20012fa8
 8018afc:	20012fa0 	.word	0x20012fa0

08018b00 <_ZN8touchgfx6Bitmap8setCacheEPtmm>:
 8018b00:	4b06      	ldr	r3, [pc, #24]	; (8018b1c <_ZN8touchgfx6Bitmap8setCacheEPtmm+0x1c>)
 8018b02:	681b      	ldr	r3, [r3, #0]
 8018b04:	b943      	cbnz	r3, 8018b18 <_ZN8touchgfx6Bitmap8setCacheEPtmm+0x18>
 8018b06:	b139      	cbz	r1, 8018b18 <_ZN8touchgfx6Bitmap8setCacheEPtmm+0x18>
 8018b08:	4b05      	ldr	r3, [pc, #20]	; (8018b20 <_ZN8touchgfx6Bitmap8setCacheEPtmm+0x20>)
 8018b0a:	801a      	strh	r2, [r3, #0]
 8018b0c:	4b05      	ldr	r3, [pc, #20]	; (8018b24 <_ZN8touchgfx6Bitmap8setCacheEPtmm+0x24>)
 8018b0e:	6019      	str	r1, [r3, #0]
 8018b10:	4b05      	ldr	r3, [pc, #20]	; (8018b28 <_ZN8touchgfx6Bitmap8setCacheEPtmm+0x28>)
 8018b12:	6018      	str	r0, [r3, #0]
 8018b14:	f7ff bf96 	b.w	8018a44 <_ZN8touchgfx6Bitmap10clearCacheEv>
 8018b18:	4770      	bx	lr
 8018b1a:	bf00      	nop
 8018b1c:	20012f9c 	.word	0x20012f9c
 8018b20:	20012fb0 	.word	0x20012fb0
 8018b24:	20012f98 	.word	0x20012f98
 8018b28:	20012f90 	.word	0x20012f90

08018b2c <_ZN8touchgfx6Bitmap22registerBitmapDatabaseEPKNS0_10BitmapDataEtPtmm>:
 8018b2c:	b470      	push	{r4, r5, r6}
 8018b2e:	4c07      	ldr	r4, [pc, #28]	; (8018b4c <_ZN8touchgfx6Bitmap22registerBitmapDatabaseEPKNS0_10BitmapDataEtPtmm+0x20>)
 8018b30:	6826      	ldr	r6, [r4, #0]
 8018b32:	4605      	mov	r5, r0
 8018b34:	4610      	mov	r0, r2
 8018b36:	9a03      	ldr	r2, [sp, #12]
 8018b38:	b936      	cbnz	r6, 8018b48 <_ZN8touchgfx6Bitmap22registerBitmapDatabaseEPKNS0_10BitmapDataEtPtmm+0x1c>
 8018b3a:	6025      	str	r5, [r4, #0]
 8018b3c:	4c04      	ldr	r4, [pc, #16]	; (8018b50 <_ZN8touchgfx6Bitmap22registerBitmapDatabaseEPKNS0_10BitmapDataEtPtmm+0x24>)
 8018b3e:	8021      	strh	r1, [r4, #0]
 8018b40:	bc70      	pop	{r4, r5, r6}
 8018b42:	4619      	mov	r1, r3
 8018b44:	f7ff bfdc 	b.w	8018b00 <_ZN8touchgfx6Bitmap8setCacheEPtmm>
 8018b48:	bc70      	pop	{r4, r5, r6}
 8018b4a:	4770      	bx	lr
 8018b4c:	20012fb4 	.word	0x20012fb4
 8018b50:	20012fac 	.word	0x20012fac

08018b54 <_ZNK8touchgfx6Bitmap8getWidthEv>:
 8018b54:	4a12      	ldr	r2, [pc, #72]	; (8018ba0 <_ZNK8touchgfx6Bitmap8getWidthEv+0x4c>)
 8018b56:	8803      	ldrh	r3, [r0, #0]
 8018b58:	8812      	ldrh	r2, [r2, #0]
 8018b5a:	4293      	cmp	r3, r2
 8018b5c:	d207      	bcs.n	8018b6e <_ZNK8touchgfx6Bitmap8getWidthEv+0x1a>
 8018b5e:	4a11      	ldr	r2, [pc, #68]	; (8018ba4 <_ZNK8touchgfx6Bitmap8getWidthEv+0x50>)
 8018b60:	6812      	ldr	r2, [r2, #0]
 8018b62:	2114      	movs	r1, #20
 8018b64:	fb01 2303 	mla	r3, r1, r3, r2
 8018b68:	f9b3 0008 	ldrsh.w	r0, [r3, #8]
 8018b6c:	4770      	bx	lr
 8018b6e:	490e      	ldr	r1, [pc, #56]	; (8018ba8 <_ZNK8touchgfx6Bitmap8getWidthEv+0x54>)
 8018b70:	8809      	ldrh	r1, [r1, #0]
 8018b72:	4411      	add	r1, r2
 8018b74:	428b      	cmp	r3, r1
 8018b76:	da04      	bge.n	8018b82 <_ZNK8touchgfx6Bitmap8getWidthEv+0x2e>
 8018b78:	1a9b      	subs	r3, r3, r2
 8018b7a:	4a0c      	ldr	r2, [pc, #48]	; (8018bac <_ZNK8touchgfx6Bitmap8getWidthEv+0x58>)
 8018b7c:	210e      	movs	r1, #14
 8018b7e:	6812      	ldr	r2, [r2, #0]
 8018b80:	e7f0      	b.n	8018b64 <_ZNK8touchgfx6Bitmap8getWidthEv+0x10>
 8018b82:	f64f 72fe 	movw	r2, #65534	; 0xfffe
 8018b86:	4293      	cmp	r3, r2
 8018b88:	d108      	bne.n	8018b9c <_ZNK8touchgfx6Bitmap8getWidthEv+0x48>
 8018b8a:	4b09      	ldr	r3, [pc, #36]	; (8018bb0 <_ZNK8touchgfx6Bitmap8getWidthEv+0x5c>)
 8018b8c:	781b      	ldrb	r3, [r3, #0]
 8018b8e:	b91b      	cbnz	r3, 8018b98 <_ZNK8touchgfx6Bitmap8getWidthEv+0x44>
 8018b90:	4b08      	ldr	r3, [pc, #32]	; (8018bb4 <_ZNK8touchgfx6Bitmap8getWidthEv+0x60>)
 8018b92:	f9b3 0000 	ldrsh.w	r0, [r3]
 8018b96:	4770      	bx	lr
 8018b98:	4b07      	ldr	r3, [pc, #28]	; (8018bb8 <_ZNK8touchgfx6Bitmap8getWidthEv+0x64>)
 8018b9a:	e7fa      	b.n	8018b92 <_ZNK8touchgfx6Bitmap8getWidthEv+0x3e>
 8018b9c:	2000      	movs	r0, #0
 8018b9e:	4770      	bx	lr
 8018ba0:	20012fac 	.word	0x20012fac
 8018ba4:	20012fb4 	.word	0x20012fb4
 8018ba8:	20012fb0 	.word	0x20012fb0
 8018bac:	20012f94 	.word	0x20012f94
 8018bb0:	20012f1c 	.word	0x20012f1c
 8018bb4:	20012f1e 	.word	0x20012f1e
 8018bb8:	20012f20 	.word	0x20012f20

08018bbc <_ZNK8touchgfx6Bitmap9getHeightEv>:
 8018bbc:	4a12      	ldr	r2, [pc, #72]	; (8018c08 <_ZNK8touchgfx6Bitmap9getHeightEv+0x4c>)
 8018bbe:	8803      	ldrh	r3, [r0, #0]
 8018bc0:	8812      	ldrh	r2, [r2, #0]
 8018bc2:	4293      	cmp	r3, r2
 8018bc4:	d207      	bcs.n	8018bd6 <_ZNK8touchgfx6Bitmap9getHeightEv+0x1a>
 8018bc6:	4a11      	ldr	r2, [pc, #68]	; (8018c0c <_ZNK8touchgfx6Bitmap9getHeightEv+0x50>)
 8018bc8:	6812      	ldr	r2, [r2, #0]
 8018bca:	2114      	movs	r1, #20
 8018bcc:	fb01 2303 	mla	r3, r1, r3, r2
 8018bd0:	f9b3 000a 	ldrsh.w	r0, [r3, #10]
 8018bd4:	4770      	bx	lr
 8018bd6:	490e      	ldr	r1, [pc, #56]	; (8018c10 <_ZNK8touchgfx6Bitmap9getHeightEv+0x54>)
 8018bd8:	8809      	ldrh	r1, [r1, #0]
 8018bda:	4411      	add	r1, r2
 8018bdc:	428b      	cmp	r3, r1
 8018bde:	da04      	bge.n	8018bea <_ZNK8touchgfx6Bitmap9getHeightEv+0x2e>
 8018be0:	1a9b      	subs	r3, r3, r2
 8018be2:	4a0c      	ldr	r2, [pc, #48]	; (8018c14 <_ZNK8touchgfx6Bitmap9getHeightEv+0x58>)
 8018be4:	210e      	movs	r1, #14
 8018be6:	6812      	ldr	r2, [r2, #0]
 8018be8:	e7f0      	b.n	8018bcc <_ZNK8touchgfx6Bitmap9getHeightEv+0x10>
 8018bea:	f64f 72fe 	movw	r2, #65534	; 0xfffe
 8018bee:	4293      	cmp	r3, r2
 8018bf0:	d108      	bne.n	8018c04 <_ZNK8touchgfx6Bitmap9getHeightEv+0x48>
 8018bf2:	4b09      	ldr	r3, [pc, #36]	; (8018c18 <_ZNK8touchgfx6Bitmap9getHeightEv+0x5c>)
 8018bf4:	781b      	ldrb	r3, [r3, #0]
 8018bf6:	b91b      	cbnz	r3, 8018c00 <_ZNK8touchgfx6Bitmap9getHeightEv+0x44>
 8018bf8:	4b08      	ldr	r3, [pc, #32]	; (8018c1c <_ZNK8touchgfx6Bitmap9getHeightEv+0x60>)
 8018bfa:	f9b3 0000 	ldrsh.w	r0, [r3]
 8018bfe:	4770      	bx	lr
 8018c00:	4b07      	ldr	r3, [pc, #28]	; (8018c20 <_ZNK8touchgfx6Bitmap9getHeightEv+0x64>)
 8018c02:	e7fa      	b.n	8018bfa <_ZNK8touchgfx6Bitmap9getHeightEv+0x3e>
 8018c04:	2000      	movs	r0, #0
 8018c06:	4770      	bx	lr
 8018c08:	20012fac 	.word	0x20012fac
 8018c0c:	20012fb4 	.word	0x20012fb4
 8018c10:	20012fb0 	.word	0x20012fb0
 8018c14:	20012f94 	.word	0x20012f94
 8018c18:	20012f1c 	.word	0x20012f1c
 8018c1c:	20012f20 	.word	0x20012f20
 8018c20:	20012f1e 	.word	0x20012f1e

08018c24 <_ZNK8touchgfx6Bitmap12getSolidRectEv>:
 8018c24:	b510      	push	{r4, lr}
 8018c26:	4a1f      	ldr	r2, [pc, #124]	; (8018ca4 <_ZNK8touchgfx6Bitmap12getSolidRectEv+0x80>)
 8018c28:	880b      	ldrh	r3, [r1, #0]
 8018c2a:	8812      	ldrh	r2, [r2, #0]
 8018c2c:	4293      	cmp	r3, r2
 8018c2e:	d213      	bcs.n	8018c58 <_ZNK8touchgfx6Bitmap12getSolidRectEv+0x34>
 8018c30:	4a1d      	ldr	r2, [pc, #116]	; (8018ca8 <_ZNK8touchgfx6Bitmap12getSolidRectEv+0x84>)
 8018c32:	6812      	ldr	r2, [r2, #0]
 8018c34:	2114      	movs	r1, #20
 8018c36:	fb01 2303 	mla	r3, r1, r3, r2
 8018c3a:	8a1a      	ldrh	r2, [r3, #16]
 8018c3c:	f9b3 400c 	ldrsh.w	r4, [r3, #12]
 8018c40:	f9b3 100e 	ldrsh.w	r1, [r3, #14]
 8018c44:	8a5b      	ldrh	r3, [r3, #18]
 8018c46:	8004      	strh	r4, [r0, #0]
 8018c48:	f3c2 020c 	ubfx	r2, r2, #0, #13
 8018c4c:	f3c3 030c 	ubfx	r3, r3, #0, #13
 8018c50:	8041      	strh	r1, [r0, #2]
 8018c52:	8082      	strh	r2, [r0, #4]
 8018c54:	80c3      	strh	r3, [r0, #6]
 8018c56:	e00e      	b.n	8018c76 <_ZNK8touchgfx6Bitmap12getSolidRectEv+0x52>
 8018c58:	4914      	ldr	r1, [pc, #80]	; (8018cac <_ZNK8touchgfx6Bitmap12getSolidRectEv+0x88>)
 8018c5a:	8809      	ldrh	r1, [r1, #0]
 8018c5c:	4411      	add	r1, r2
 8018c5e:	428b      	cmp	r3, r1
 8018c60:	da0a      	bge.n	8018c78 <_ZNK8touchgfx6Bitmap12getSolidRectEv+0x54>
 8018c62:	1a9b      	subs	r3, r3, r2
 8018c64:	4a12      	ldr	r2, [pc, #72]	; (8018cb0 <_ZNK8touchgfx6Bitmap12getSolidRectEv+0x8c>)
 8018c66:	6812      	ldr	r2, [r2, #0]
 8018c68:	210e      	movs	r1, #14
 8018c6a:	fb01 2303 	mla	r3, r1, r3, r2
 8018c6e:	681a      	ldr	r2, [r3, #0]
 8018c70:	6002      	str	r2, [r0, #0]
 8018c72:	685a      	ldr	r2, [r3, #4]
 8018c74:	6042      	str	r2, [r0, #4]
 8018c76:	bd10      	pop	{r4, pc}
 8018c78:	f64f 72fe 	movw	r2, #65534	; 0xfffe
 8018c7c:	4293      	cmp	r3, r2
 8018c7e:	d10b      	bne.n	8018c98 <_ZNK8touchgfx6Bitmap12getSolidRectEv+0x74>
 8018c80:	4b0c      	ldr	r3, [pc, #48]	; (8018cb4 <_ZNK8touchgfx6Bitmap12getSolidRectEv+0x90>)
 8018c82:	f9b3 1000 	ldrsh.w	r1, [r3]
 8018c86:	4b0c      	ldr	r3, [pc, #48]	; (8018cb8 <_ZNK8touchgfx6Bitmap12getSolidRectEv+0x94>)
 8018c88:	8081      	strh	r1, [r0, #4]
 8018c8a:	f9b3 2000 	ldrsh.w	r2, [r3]
 8018c8e:	80c2      	strh	r2, [r0, #6]
 8018c90:	2300      	movs	r3, #0
 8018c92:	8003      	strh	r3, [r0, #0]
 8018c94:	8043      	strh	r3, [r0, #2]
 8018c96:	e7ee      	b.n	8018c76 <_ZNK8touchgfx6Bitmap12getSolidRectEv+0x52>
 8018c98:	2300      	movs	r3, #0
 8018c9a:	8003      	strh	r3, [r0, #0]
 8018c9c:	8043      	strh	r3, [r0, #2]
 8018c9e:	8083      	strh	r3, [r0, #4]
 8018ca0:	e7d8      	b.n	8018c54 <_ZNK8touchgfx6Bitmap12getSolidRectEv+0x30>
 8018ca2:	bf00      	nop
 8018ca4:	20012fac 	.word	0x20012fac
 8018ca8:	20012fb4 	.word	0x20012fb4
 8018cac:	20012fb0 	.word	0x20012fb0
 8018cb0:	20012f94 	.word	0x20012f94
 8018cb4:	20012f18 	.word	0x20012f18
 8018cb8:	20012f1a 	.word	0x20012f1a

08018cbc <_ZNK8touchgfx6Bitmap20hasTransparentPixelsEv>:
 8018cbc:	4a17      	ldr	r2, [pc, #92]	; (8018d1c <_ZNK8touchgfx6Bitmap20hasTransparentPixelsEv+0x60>)
 8018cbe:	8803      	ldrh	r3, [r0, #0]
 8018cc0:	8812      	ldrh	r2, [r2, #0]
 8018cc2:	4293      	cmp	r3, r2
 8018cc4:	d213      	bcs.n	8018cee <_ZNK8touchgfx6Bitmap20hasTransparentPixelsEv+0x32>
 8018cc6:	4a16      	ldr	r2, [pc, #88]	; (8018d20 <_ZNK8touchgfx6Bitmap20hasTransparentPixelsEv+0x64>)
 8018cc8:	6812      	ldr	r2, [r2, #0]
 8018cca:	2114      	movs	r1, #20
 8018ccc:	fb01 2303 	mla	r3, r1, r3, r2
 8018cd0:	8a1a      	ldrh	r2, [r3, #16]
 8018cd2:	8919      	ldrh	r1, [r3, #8]
 8018cd4:	f3c2 020c 	ubfx	r2, r2, #0, #13
 8018cd8:	428a      	cmp	r2, r1
 8018cda:	db1d      	blt.n	8018d18 <_ZNK8touchgfx6Bitmap20hasTransparentPixelsEv+0x5c>
 8018cdc:	8a58      	ldrh	r0, [r3, #18]
 8018cde:	f3c0 000c 	ubfx	r0, r0, #0, #13
 8018ce2:	895b      	ldrh	r3, [r3, #10]
 8018ce4:	4298      	cmp	r0, r3
 8018ce6:	bfac      	ite	ge
 8018ce8:	2000      	movge	r0, #0
 8018cea:	2001      	movlt	r0, #1
 8018cec:	4770      	bx	lr
 8018cee:	490d      	ldr	r1, [pc, #52]	; (8018d24 <_ZNK8touchgfx6Bitmap20hasTransparentPixelsEv+0x68>)
 8018cf0:	8809      	ldrh	r1, [r1, #0]
 8018cf2:	4411      	add	r1, r2
 8018cf4:	428b      	cmp	r3, r1
 8018cf6:	da0d      	bge.n	8018d14 <_ZNK8touchgfx6Bitmap20hasTransparentPixelsEv+0x58>
 8018cf8:	1a9b      	subs	r3, r3, r2
 8018cfa:	4a0b      	ldr	r2, [pc, #44]	; (8018d28 <_ZNK8touchgfx6Bitmap20hasTransparentPixelsEv+0x6c>)
 8018cfc:	6812      	ldr	r2, [r2, #0]
 8018cfe:	210e      	movs	r1, #14
 8018d00:	fb01 2303 	mla	r3, r1, r3, r2
 8018d04:	f9b3 1004 	ldrsh.w	r1, [r3, #4]
 8018d08:	891a      	ldrh	r2, [r3, #8]
 8018d0a:	4291      	cmp	r1, r2
 8018d0c:	db04      	blt.n	8018d18 <_ZNK8touchgfx6Bitmap20hasTransparentPixelsEv+0x5c>
 8018d0e:	f9b3 0006 	ldrsh.w	r0, [r3, #6]
 8018d12:	e7e6      	b.n	8018ce2 <_ZNK8touchgfx6Bitmap20hasTransparentPixelsEv+0x26>
 8018d14:	2000      	movs	r0, #0
 8018d16:	4770      	bx	lr
 8018d18:	2001      	movs	r0, #1
 8018d1a:	4770      	bx	lr
 8018d1c:	20012fac 	.word	0x20012fac
 8018d20:	20012fb4 	.word	0x20012fb4
 8018d24:	20012fb0 	.word	0x20012fb0
 8018d28:	20012f94 	.word	0x20012f94

08018d2c <_ZNK8touchgfx6Bitmap7getDataEv>:
 8018d2c:	4a12      	ldr	r2, [pc, #72]	; (8018d78 <_ZNK8touchgfx6Bitmap7getDataEv+0x4c>)
 8018d2e:	8803      	ldrh	r3, [r0, #0]
 8018d30:	8811      	ldrh	r1, [r2, #0]
 8018d32:	428b      	cmp	r3, r1
 8018d34:	d20b      	bcs.n	8018d4e <_ZNK8touchgfx6Bitmap7getDataEv+0x22>
 8018d36:	4a11      	ldr	r2, [pc, #68]	; (8018d7c <_ZNK8touchgfx6Bitmap7getDataEv+0x50>)
 8018d38:	6812      	ldr	r2, [r2, #0]
 8018d3a:	b112      	cbz	r2, 8018d42 <_ZNK8touchgfx6Bitmap7getDataEv+0x16>
 8018d3c:	f852 0023 	ldr.w	r0, [r2, r3, lsl #2]
 8018d40:	b9c0      	cbnz	r0, 8018d74 <_ZNK8touchgfx6Bitmap7getDataEv+0x48>
 8018d42:	4a0f      	ldr	r2, [pc, #60]	; (8018d80 <_ZNK8touchgfx6Bitmap7getDataEv+0x54>)
 8018d44:	6811      	ldr	r1, [r2, #0]
 8018d46:	2214      	movs	r2, #20
 8018d48:	4353      	muls	r3, r2
 8018d4a:	58c8      	ldr	r0, [r1, r3]
 8018d4c:	4770      	bx	lr
 8018d4e:	4a0d      	ldr	r2, [pc, #52]	; (8018d84 <_ZNK8touchgfx6Bitmap7getDataEv+0x58>)
 8018d50:	8812      	ldrh	r2, [r2, #0]
 8018d52:	440a      	add	r2, r1
 8018d54:	4293      	cmp	r3, r2
 8018d56:	da04      	bge.n	8018d62 <_ZNK8touchgfx6Bitmap7getDataEv+0x36>
 8018d58:	4a08      	ldr	r2, [pc, #32]	; (8018d7c <_ZNK8touchgfx6Bitmap7getDataEv+0x50>)
 8018d5a:	6812      	ldr	r2, [r2, #0]
 8018d5c:	f852 0023 	ldr.w	r0, [r2, r3, lsl #2]
 8018d60:	4770      	bx	lr
 8018d62:	f64f 72fe 	movw	r2, #65534	; 0xfffe
 8018d66:	4293      	cmp	r3, r2
 8018d68:	d103      	bne.n	8018d72 <_ZNK8touchgfx6Bitmap7getDataEv+0x46>
 8018d6a:	4b07      	ldr	r3, [pc, #28]	; (8018d88 <_ZNK8touchgfx6Bitmap7getDataEv+0x5c>)
 8018d6c:	681b      	ldr	r3, [r3, #0]
 8018d6e:	6c58      	ldr	r0, [r3, #68]	; 0x44
 8018d70:	4770      	bx	lr
 8018d72:	2000      	movs	r0, #0
 8018d74:	4770      	bx	lr
 8018d76:	bf00      	nop
 8018d78:	20012fac 	.word	0x20012fac
 8018d7c:	20012f90 	.word	0x20012f90
 8018d80:	20012fb4 	.word	0x20012fb4
 8018d84:	20012fb0 	.word	0x20012fb0
 8018d88:	20012f24 	.word	0x20012f24

08018d8c <_ZNK8touchgfx6Bitmap12getExtraDataEv>:
 8018d8c:	4b24      	ldr	r3, [pc, #144]	; (8018e20 <_ZNK8touchgfx6Bitmap12getExtraDataEv+0x94>)
 8018d8e:	8802      	ldrh	r2, [r0, #0]
 8018d90:	8818      	ldrh	r0, [r3, #0]
 8018d92:	4282      	cmp	r2, r0
 8018d94:	d221      	bcs.n	8018dda <_ZNK8touchgfx6Bitmap12getExtraDataEv+0x4e>
 8018d96:	4b23      	ldr	r3, [pc, #140]	; (8018e24 <_ZNK8touchgfx6Bitmap12getExtraDataEv+0x98>)
 8018d98:	6819      	ldr	r1, [r3, #0]
 8018d9a:	2314      	movs	r3, #20
 8018d9c:	fb03 1302 	mla	r3, r3, r2, r1
 8018da0:	6858      	ldr	r0, [r3, #4]
 8018da2:	2800      	cmp	r0, #0
 8018da4:	d03a      	beq.n	8018e1c <_ZNK8touchgfx6Bitmap12getExtraDataEv+0x90>
 8018da6:	4920      	ldr	r1, [pc, #128]	; (8018e28 <_ZNK8touchgfx6Bitmap12getExtraDataEv+0x9c>)
 8018da8:	6809      	ldr	r1, [r1, #0]
 8018daa:	2900      	cmp	r1, #0
 8018dac:	d036      	beq.n	8018e1c <_ZNK8touchgfx6Bitmap12getExtraDataEv+0x90>
 8018dae:	f851 1022 	ldr.w	r1, [r1, r2, lsl #2]
 8018db2:	2900      	cmp	r1, #0
 8018db4:	d032      	beq.n	8018e1c <_ZNK8touchgfx6Bitmap12getExtraDataEv+0x90>
 8018db6:	891a      	ldrh	r2, [r3, #8]
 8018db8:	8958      	ldrh	r0, [r3, #10]
 8018dba:	4350      	muls	r0, r2
 8018dbc:	7c5a      	ldrb	r2, [r3, #17]
 8018dbe:	7cdb      	ldrb	r3, [r3, #19]
 8018dc0:	0952      	lsrs	r2, r2, #5
 8018dc2:	f3c3 1342 	ubfx	r3, r3, #5, #3
 8018dc6:	ea43 03c2 	orr.w	r3, r3, r2, lsl #3
 8018dca:	2b0b      	cmp	r3, #11
 8018dcc:	bf18      	it	ne
 8018dce:	0040      	lslne	r0, r0, #1
 8018dd0:	3003      	adds	r0, #3
 8018dd2:	f020 0003 	bic.w	r0, r0, #3
 8018dd6:	4408      	add	r0, r1
 8018dd8:	4770      	bx	lr
 8018dda:	4b14      	ldr	r3, [pc, #80]	; (8018e2c <_ZNK8touchgfx6Bitmap12getExtraDataEv+0xa0>)
 8018ddc:	881b      	ldrh	r3, [r3, #0]
 8018dde:	4403      	add	r3, r0
 8018de0:	429a      	cmp	r2, r3
 8018de2:	da1a      	bge.n	8018e1a <_ZNK8touchgfx6Bitmap12getExtraDataEv+0x8e>
 8018de4:	4b12      	ldr	r3, [pc, #72]	; (8018e30 <_ZNK8touchgfx6Bitmap12getExtraDataEv+0xa4>)
 8018de6:	681b      	ldr	r3, [r3, #0]
 8018de8:	1a10      	subs	r0, r2, r0
 8018dea:	210e      	movs	r1, #14
 8018dec:	fb01 3000 	mla	r0, r1, r0, r3
 8018df0:	7b03      	ldrb	r3, [r0, #12]
 8018df2:	f003 031f 	and.w	r3, r3, #31
 8018df6:	2b0b      	cmp	r3, #11
 8018df8:	d10b      	bne.n	8018e12 <_ZNK8touchgfx6Bitmap12getExtraDataEv+0x86>
 8018dfa:	8903      	ldrh	r3, [r0, #8]
 8018dfc:	8940      	ldrh	r0, [r0, #10]
 8018dfe:	4358      	muls	r0, r3
 8018e00:	4b09      	ldr	r3, [pc, #36]	; (8018e28 <_ZNK8touchgfx6Bitmap12getExtraDataEv+0x9c>)
 8018e02:	6819      	ldr	r1, [r3, #0]
 8018e04:	3003      	adds	r0, #3
 8018e06:	f020 0303 	bic.w	r3, r0, #3
 8018e0a:	f851 0022 	ldr.w	r0, [r1, r2, lsl #2]
 8018e0e:	4418      	add	r0, r3
 8018e10:	4770      	bx	lr
 8018e12:	2b0d      	cmp	r3, #13
 8018e14:	d101      	bne.n	8018e1a <_ZNK8touchgfx6Bitmap12getExtraDataEv+0x8e>
 8018e16:	300d      	adds	r0, #13
 8018e18:	4770      	bx	lr
 8018e1a:	2000      	movs	r0, #0
 8018e1c:	4770      	bx	lr
 8018e1e:	bf00      	nop
 8018e20:	20012fac 	.word	0x20012fac
 8018e24:	20012fb4 	.word	0x20012fb4
 8018e28:	20012f90 	.word	0x20012f90
 8018e2c:	20012fb0 	.word	0x20012fb0
 8018e30:	20012f94 	.word	0x20012f94

08018e34 <_ZNK8touchgfx6Bitmap9getFormatEv>:
 8018e34:	b510      	push	{r4, lr}
 8018e36:	4a17      	ldr	r2, [pc, #92]	; (8018e94 <_ZNK8touchgfx6Bitmap9getFormatEv+0x60>)
 8018e38:	8803      	ldrh	r3, [r0, #0]
 8018e3a:	8812      	ldrh	r2, [r2, #0]
 8018e3c:	4293      	cmp	r3, r2
 8018e3e:	d20c      	bcs.n	8018e5a <_ZNK8touchgfx6Bitmap9getFormatEv+0x26>
 8018e40:	4a15      	ldr	r2, [pc, #84]	; (8018e98 <_ZNK8touchgfx6Bitmap9getFormatEv+0x64>)
 8018e42:	6812      	ldr	r2, [r2, #0]
 8018e44:	2114      	movs	r1, #20
 8018e46:	fb01 2303 	mla	r3, r1, r3, r2
 8018e4a:	7c58      	ldrb	r0, [r3, #17]
 8018e4c:	0942      	lsrs	r2, r0, #5
 8018e4e:	7cd8      	ldrb	r0, [r3, #19]
 8018e50:	f3c0 1042 	ubfx	r0, r0, #5, #3
 8018e54:	ea40 00c2 	orr.w	r0, r0, r2, lsl #3
 8018e58:	bd10      	pop	{r4, pc}
 8018e5a:	4910      	ldr	r1, [pc, #64]	; (8018e9c <_ZNK8touchgfx6Bitmap9getFormatEv+0x68>)
 8018e5c:	8809      	ldrh	r1, [r1, #0]
 8018e5e:	4411      	add	r1, r2
 8018e60:	428b      	cmp	r3, r1
 8018e62:	da09      	bge.n	8018e78 <_ZNK8touchgfx6Bitmap9getFormatEv+0x44>
 8018e64:	1a9b      	subs	r3, r3, r2
 8018e66:	4a0e      	ldr	r2, [pc, #56]	; (8018ea0 <_ZNK8touchgfx6Bitmap9getFormatEv+0x6c>)
 8018e68:	6812      	ldr	r2, [r2, #0]
 8018e6a:	210e      	movs	r1, #14
 8018e6c:	fb01 2303 	mla	r3, r1, r3, r2
 8018e70:	7b18      	ldrb	r0, [r3, #12]
 8018e72:	f000 001f 	and.w	r0, r0, #31
 8018e76:	e7ef      	b.n	8018e58 <_ZNK8touchgfx6Bitmap9getFormatEv+0x24>
 8018e78:	f64f 72fe 	movw	r2, #65534	; 0xfffe
 8018e7c:	4293      	cmp	r3, r2
 8018e7e:	d106      	bne.n	8018e8e <_ZNK8touchgfx6Bitmap9getFormatEv+0x5a>
 8018e80:	f7ea fd2c 	bl	80038dc <_ZN8touchgfx3HAL3lcdEv>
 8018e84:	6803      	ldr	r3, [r0, #0]
 8018e86:	e8bd 4010 	ldmia.w	sp!, {r4, lr}
 8018e8a:	6adb      	ldr	r3, [r3, #44]	; 0x2c
 8018e8c:	4718      	bx	r3
 8018e8e:	2000      	movs	r0, #0
 8018e90:	e7e2      	b.n	8018e58 <_ZNK8touchgfx6Bitmap9getFormatEv+0x24>
 8018e92:	bf00      	nop
 8018e94:	20012fac 	.word	0x20012fac
 8018e98:	20012fb4 	.word	0x20012fb4
 8018e9c:	20012fb0 	.word	0x20012fb0
 8018ea0:	20012f94 	.word	0x20012f94

08018ea4 <_ZNK8touchgfx8LCD16bpp8bitDepthEv>:
 8018ea4:	2010      	movs	r0, #16
 8018ea6:	4770      	bx	lr

08018ea8 <_ZNK8touchgfx8LCD16bpp17framebufferFormatEv>:
 8018ea8:	2000      	movs	r0, #0
 8018eaa:	4770      	bx	lr

08018eac <_ZNK8touchgfx8LCD16bpp17framebufferStrideEv>:
 8018eac:	4b02      	ldr	r3, [pc, #8]	; (8018eb8 <_ZNK8touchgfx8LCD16bpp17framebufferStrideEv+0xc>)
 8018eae:	8818      	ldrh	r0, [r3, #0]
 8018eb0:	0040      	lsls	r0, r0, #1
 8018eb2:	b280      	uxth	r0, r0
 8018eb4:	4770      	bx	lr
 8018eb6:	bf00      	nop
 8018eb8:	20012f1e 	.word	0x20012f1e

08018ebc <_ZN8touchgfx8LCD16bpp28getTextureMapperDrawScanLineERKNS_14TextureSurfaceEth>:
 8018ebc:	2bff      	cmp	r3, #255	; 0xff
 8018ebe:	d050      	beq.n	8018f62 <_ZN8touchgfx8LCD16bpp28getTextureMapperDrawScanLineERKNS_14TextureSurfaceEth+0xa6>
 8018ec0:	2a0b      	cmp	r2, #11
 8018ec2:	d04a      	beq.n	8018f5a <_ZN8touchgfx8LCD16bpp28getTextureMapperDrawScanLineERKNS_14TextureSurfaceEth+0x9e>
 8018ec4:	d80e      	bhi.n	8018ee4 <_ZN8touchgfx8LCD16bpp28getTextureMapperDrawScanLineERKNS_14TextureSurfaceEth+0x28>
 8018ec6:	2a03      	cmp	r2, #3
 8018ec8:	d03f      	beq.n	8018f4a <_ZN8touchgfx8LCD16bpp28getTextureMapperDrawScanLineERKNS_14TextureSurfaceEth+0x8e>
 8018eca:	d804      	bhi.n	8018ed6 <_ZN8touchgfx8LCD16bpp28getTextureMapperDrawScanLineERKNS_14TextureSurfaceEth+0x1a>
 8018ecc:	2a01      	cmp	r2, #1
 8018ece:	d03e      	beq.n	8018f4e <_ZN8touchgfx8LCD16bpp28getTextureMapperDrawScanLineERKNS_14TextureSurfaceEth+0x92>
 8018ed0:	d93f      	bls.n	8018f52 <_ZN8touchgfx8LCD16bpp28getTextureMapperDrawScanLineERKNS_14TextureSurfaceEth+0x96>
 8018ed2:	6b80      	ldr	r0, [r0, #56]	; 0x38
 8018ed4:	4770      	bx	lr
 8018ed6:	2a09      	cmp	r2, #9
 8018ed8:	d03f      	beq.n	8018f5a <_ZN8touchgfx8LCD16bpp28getTextureMapperDrawScanLineERKNS_14TextureSurfaceEth+0x9e>
 8018eda:	d83c      	bhi.n	8018f56 <_ZN8touchgfx8LCD16bpp28getTextureMapperDrawScanLineERKNS_14TextureSurfaceEth+0x9a>
 8018edc:	2a08      	cmp	r2, #8
 8018ede:	d03a      	beq.n	8018f56 <_ZN8touchgfx8LCD16bpp28getTextureMapperDrawScanLineERKNS_14TextureSurfaceEth+0x9a>
 8018ee0:	2000      	movs	r0, #0
 8018ee2:	4770      	bx	lr
 8018ee4:	2a2f      	cmp	r2, #47	; 0x2f
 8018ee6:	d024      	beq.n	8018f32 <_ZN8touchgfx8LCD16bpp28getTextureMapperDrawScanLineERKNS_14TextureSurfaceEth+0x76>
 8018ee8:	d80d      	bhi.n	8018f06 <_ZN8touchgfx8LCD16bpp28getTextureMapperDrawScanLineERKNS_14TextureSurfaceEth+0x4a>
 8018eea:	2a2d      	cmp	r2, #45	; 0x2d
 8018eec:	d014      	beq.n	8018f18 <_ZN8touchgfx8LCD16bpp28getTextureMapperDrawScanLineERKNS_14TextureSurfaceEth+0x5c>
 8018eee:	d826      	bhi.n	8018f3e <_ZN8touchgfx8LCD16bpp28getTextureMapperDrawScanLineERKNS_14TextureSurfaceEth+0x82>
 8018ef0:	2a2c      	cmp	r2, #44	; 0x2c
 8018ef2:	d1f5      	bne.n	8018ee0 <_ZN8touchgfx8LCD16bpp28getTextureMapperDrawScanLineERKNS_14TextureSurfaceEth+0x24>
 8018ef4:	684b      	ldr	r3, [r1, #4]
 8018ef6:	781b      	ldrb	r3, [r3, #0]
 8018ef8:	2b01      	cmp	r3, #1
 8018efa:	d018      	beq.n	8018f2e <_ZN8touchgfx8LCD16bpp28getTextureMapperDrawScanLineERKNS_14TextureSurfaceEth+0x72>
 8018efc:	d323      	bcc.n	8018f46 <_ZN8touchgfx8LCD16bpp28getTextureMapperDrawScanLineERKNS_14TextureSurfaceEth+0x8a>
 8018efe:	2b02      	cmp	r3, #2
 8018f00:	d1ee      	bne.n	8018ee0 <_ZN8touchgfx8LCD16bpp28getTextureMapperDrawScanLineERKNS_14TextureSurfaceEth+0x24>
 8018f02:	6880      	ldr	r0, [r0, #8]
 8018f04:	4770      	bx	lr
 8018f06:	2a31      	cmp	r2, #49	; 0x31
 8018f08:	d004      	beq.n	8018f14 <_ZN8touchgfx8LCD16bpp28getTextureMapperDrawScanLineERKNS_14TextureSurfaceEth+0x58>
 8018f0a:	d328      	bcc.n	8018f5e <_ZN8touchgfx8LCD16bpp28getTextureMapperDrawScanLineERKNS_14TextureSurfaceEth+0xa2>
 8018f0c:	2a32      	cmp	r2, #50	; 0x32
 8018f0e:	d026      	beq.n	8018f5e <_ZN8touchgfx8LCD16bpp28getTextureMapperDrawScanLineERKNS_14TextureSurfaceEth+0xa2>
 8018f10:	2a33      	cmp	r2, #51	; 0x33
 8018f12:	d1e5      	bne.n	8018ee0 <_ZN8touchgfx8LCD16bpp28getTextureMapperDrawScanLineERKNS_14TextureSurfaceEth+0x24>
 8018f14:	6f00      	ldr	r0, [r0, #112]	; 0x70
 8018f16:	4770      	bx	lr
 8018f18:	684b      	ldr	r3, [r1, #4]
 8018f1a:	781b      	ldrb	r3, [r3, #0]
 8018f1c:	2b01      	cmp	r3, #1
 8018f1e:	d004      	beq.n	8018f2a <_ZN8touchgfx8LCD16bpp28getTextureMapperDrawScanLineERKNS_14TextureSurfaceEth+0x6e>
 8018f20:	d30b      	bcc.n	8018f3a <_ZN8touchgfx8LCD16bpp28getTextureMapperDrawScanLineERKNS_14TextureSurfaceEth+0x7e>
 8018f22:	2b02      	cmp	r3, #2
 8018f24:	d1dc      	bne.n	8018ee0 <_ZN8touchgfx8LCD16bpp28getTextureMapperDrawScanLineERKNS_14TextureSurfaceEth+0x24>
 8018f26:	6900      	ldr	r0, [r0, #16]
 8018f28:	4770      	bx	lr
 8018f2a:	6a00      	ldr	r0, [r0, #32]
 8018f2c:	4770      	bx	lr
 8018f2e:	6980      	ldr	r0, [r0, #24]
 8018f30:	4770      	bx	lr
 8018f32:	684b      	ldr	r3, [r1, #4]
 8018f34:	781b      	ldrb	r3, [r3, #0]
 8018f36:	2b00      	cmp	r3, #0
 8018f38:	d1d2      	bne.n	8018ee0 <_ZN8touchgfx8LCD16bpp28getTextureMapperDrawScanLineERKNS_14TextureSurfaceEth+0x24>
 8018f3a:	6b00      	ldr	r0, [r0, #48]	; 0x30
 8018f3c:	4770      	bx	lr
 8018f3e:	684b      	ldr	r3, [r1, #4]
 8018f40:	781b      	ldrb	r3, [r3, #0]
 8018f42:	2b00      	cmp	r3, #0
 8018f44:	d1cc      	bne.n	8018ee0 <_ZN8touchgfx8LCD16bpp28getTextureMapperDrawScanLineERKNS_14TextureSurfaceEth+0x24>
 8018f46:	6a80      	ldr	r0, [r0, #40]	; 0x28
 8018f48:	4770      	bx	lr
 8018f4a:	6c80      	ldr	r0, [r0, #72]	; 0x48
 8018f4c:	4770      	bx	lr
 8018f4e:	6d00      	ldr	r0, [r0, #80]	; 0x50
 8018f50:	4770      	bx	lr
 8018f52:	6c00      	ldr	r0, [r0, #64]	; 0x40
 8018f54:	4770      	bx	lr
 8018f56:	6d80      	ldr	r0, [r0, #88]	; 0x58
 8018f58:	4770      	bx	lr
 8018f5a:	6e00      	ldr	r0, [r0, #96]	; 0x60
 8018f5c:	4770      	bx	lr
 8018f5e:	6e80      	ldr	r0, [r0, #104]	; 0x68
 8018f60:	4770      	bx	lr
 8018f62:	2a0b      	cmp	r2, #11
 8018f64:	d049      	beq.n	8018ffa <_ZN8touchgfx8LCD16bpp28getTextureMapperDrawScanLineERKNS_14TextureSurfaceEth+0x13e>
 8018f66:	d80e      	bhi.n	8018f86 <_ZN8touchgfx8LCD16bpp28getTextureMapperDrawScanLineERKNS_14TextureSurfaceEth+0xca>
 8018f68:	2a03      	cmp	r2, #3
 8018f6a:	d040      	beq.n	8018fee <_ZN8touchgfx8LCD16bpp28getTextureMapperDrawScanLineERKNS_14TextureSurfaceEth+0x132>
 8018f6c:	d804      	bhi.n	8018f78 <_ZN8touchgfx8LCD16bpp28getTextureMapperDrawScanLineERKNS_14TextureSurfaceEth+0xbc>
 8018f6e:	2a01      	cmp	r2, #1
 8018f70:	d03f      	beq.n	8018ff2 <_ZN8touchgfx8LCD16bpp28getTextureMapperDrawScanLineERKNS_14TextureSurfaceEth+0x136>
 8018f72:	d940      	bls.n	8018ff6 <_ZN8touchgfx8LCD16bpp28getTextureMapperDrawScanLineERKNS_14TextureSurfaceEth+0x13a>
 8018f74:	6bc0      	ldr	r0, [r0, #60]	; 0x3c
 8018f76:	4770      	bx	lr
 8018f78:	2a09      	cmp	r2, #9
 8018f7a:	d03e      	beq.n	8018ffa <_ZN8touchgfx8LCD16bpp28getTextureMapperDrawScanLineERKNS_14TextureSurfaceEth+0x13e>
 8018f7c:	d801      	bhi.n	8018f82 <_ZN8touchgfx8LCD16bpp28getTextureMapperDrawScanLineERKNS_14TextureSurfaceEth+0xc6>
 8018f7e:	2a08      	cmp	r2, #8
 8018f80:	d1ae      	bne.n	8018ee0 <_ZN8touchgfx8LCD16bpp28getTextureMapperDrawScanLineERKNS_14TextureSurfaceEth+0x24>
 8018f82:	6dc0      	ldr	r0, [r0, #92]	; 0x5c
 8018f84:	4770      	bx	lr
 8018f86:	2a2f      	cmp	r2, #47	; 0x2f
 8018f88:	d024      	beq.n	8018fd4 <_ZN8touchgfx8LCD16bpp28getTextureMapperDrawScanLineERKNS_14TextureSurfaceEth+0x118>
 8018f8a:	d80d      	bhi.n	8018fa8 <_ZN8touchgfx8LCD16bpp28getTextureMapperDrawScanLineERKNS_14TextureSurfaceEth+0xec>
 8018f8c:	2a2d      	cmp	r2, #45	; 0x2d
 8018f8e:	d014      	beq.n	8018fba <_ZN8touchgfx8LCD16bpp28getTextureMapperDrawScanLineERKNS_14TextureSurfaceEth+0xfe>
 8018f90:	d826      	bhi.n	8018fe0 <_ZN8touchgfx8LCD16bpp28getTextureMapperDrawScanLineERKNS_14TextureSurfaceEth+0x124>
 8018f92:	2a2c      	cmp	r2, #44	; 0x2c
 8018f94:	d1a4      	bne.n	8018ee0 <_ZN8touchgfx8LCD16bpp28getTextureMapperDrawScanLineERKNS_14TextureSurfaceEth+0x24>
 8018f96:	684b      	ldr	r3, [r1, #4]
 8018f98:	781b      	ldrb	r3, [r3, #0]
 8018f9a:	2b01      	cmp	r3, #1
 8018f9c:	d018      	beq.n	8018fd0 <_ZN8touchgfx8LCD16bpp28getTextureMapperDrawScanLineERKNS_14TextureSurfaceEth+0x114>
 8018f9e:	d324      	bcc.n	8018fea <_ZN8touchgfx8LCD16bpp28getTextureMapperDrawScanLineERKNS_14TextureSurfaceEth+0x12e>
 8018fa0:	2b02      	cmp	r3, #2
 8018fa2:	d19d      	bne.n	8018ee0 <_ZN8touchgfx8LCD16bpp28getTextureMapperDrawScanLineERKNS_14TextureSurfaceEth+0x24>
 8018fa4:	68c0      	ldr	r0, [r0, #12]
 8018fa6:	4770      	bx	lr
 8018fa8:	2a31      	cmp	r2, #49	; 0x31
 8018faa:	d004      	beq.n	8018fb6 <_ZN8touchgfx8LCD16bpp28getTextureMapperDrawScanLineERKNS_14TextureSurfaceEth+0xfa>
 8018fac:	d327      	bcc.n	8018ffe <_ZN8touchgfx8LCD16bpp28getTextureMapperDrawScanLineERKNS_14TextureSurfaceEth+0x142>
 8018fae:	2a32      	cmp	r2, #50	; 0x32
 8018fb0:	d025      	beq.n	8018ffe <_ZN8touchgfx8LCD16bpp28getTextureMapperDrawScanLineERKNS_14TextureSurfaceEth+0x142>
 8018fb2:	2a33      	cmp	r2, #51	; 0x33
 8018fb4:	d194      	bne.n	8018ee0 <_ZN8touchgfx8LCD16bpp28getTextureMapperDrawScanLineERKNS_14TextureSurfaceEth+0x24>
 8018fb6:	6f40      	ldr	r0, [r0, #116]	; 0x74
 8018fb8:	4770      	bx	lr
 8018fba:	684b      	ldr	r3, [r1, #4]
 8018fbc:	781b      	ldrb	r3, [r3, #0]
 8018fbe:	2b01      	cmp	r3, #1
 8018fc0:	d004      	beq.n	8018fcc <_ZN8touchgfx8LCD16bpp28getTextureMapperDrawScanLineERKNS_14TextureSurfaceEth+0x110>
 8018fc2:	d30b      	bcc.n	8018fdc <_ZN8touchgfx8LCD16bpp28getTextureMapperDrawScanLineERKNS_14TextureSurfaceEth+0x120>
 8018fc4:	2b02      	cmp	r3, #2
 8018fc6:	d18b      	bne.n	8018ee0 <_ZN8touchgfx8LCD16bpp28getTextureMapperDrawScanLineERKNS_14TextureSurfaceEth+0x24>
 8018fc8:	6940      	ldr	r0, [r0, #20]
 8018fca:	4770      	bx	lr
 8018fcc:	6a40      	ldr	r0, [r0, #36]	; 0x24
 8018fce:	4770      	bx	lr
 8018fd0:	69c0      	ldr	r0, [r0, #28]
 8018fd2:	4770      	bx	lr
 8018fd4:	684b      	ldr	r3, [r1, #4]
 8018fd6:	781b      	ldrb	r3, [r3, #0]
 8018fd8:	2b00      	cmp	r3, #0
 8018fda:	d181      	bne.n	8018ee0 <_ZN8touchgfx8LCD16bpp28getTextureMapperDrawScanLineERKNS_14TextureSurfaceEth+0x24>
 8018fdc:	6b40      	ldr	r0, [r0, #52]	; 0x34
 8018fde:	4770      	bx	lr
 8018fe0:	684b      	ldr	r3, [r1, #4]
 8018fe2:	781b      	ldrb	r3, [r3, #0]
 8018fe4:	2b00      	cmp	r3, #0
 8018fe6:	f47f af7b 	bne.w	8018ee0 <_ZN8touchgfx8LCD16bpp28getTextureMapperDrawScanLineERKNS_14TextureSurfaceEth+0x24>
 8018fea:	6ac0      	ldr	r0, [r0, #44]	; 0x2c
 8018fec:	4770      	bx	lr
 8018fee:	6cc0      	ldr	r0, [r0, #76]	; 0x4c
 8018ff0:	4770      	bx	lr
 8018ff2:	6d40      	ldr	r0, [r0, #84]	; 0x54
 8018ff4:	4770      	bx	lr
 8018ff6:	6c40      	ldr	r0, [r0, #68]	; 0x44
 8018ff8:	4770      	bx	lr
 8018ffa:	6e40      	ldr	r0, [r0, #100]	; 0x64
 8018ffc:	4770      	bx	lr
 8018ffe:	6ec0      	ldr	r0, [r0, #108]	; 0x6c
 8019000:	4770      	bx	lr

08019002 <_ZN8touchgfx8LCD16bpp49TextureMapper_L8_RGB565_Opaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff>:
 8019002:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 8019006:	b087      	sub	sp, #28
 8019008:	9815      	ldr	r0, [sp, #84]	; 0x54
 801900a:	9205      	str	r2, [sp, #20]
 801900c:	f89d 2064 	ldrb.w	r2, [sp, #100]	; 0x64
 8019010:	9202      	str	r2, [sp, #8]
 8019012:	e9dd 2416 	ldrd	r2, r4, [sp, #88]	; 0x58
 8019016:	9101      	str	r1, [sp, #4]
 8019018:	6841      	ldr	r1, [r0, #4]
 801901a:	f8dd e060 	ldr.w	lr, [sp, #96]	; 0x60
 801901e:	fb01 2404 	mla	r4, r1, r4, r2
 8019022:	6802      	ldr	r2, [r0, #0]
 8019024:	eb02 0444 	add.w	r4, r2, r4, lsl #1
 8019028:	f8de 2000 	ldr.w	r2, [lr]
 801902c:	9203      	str	r2, [sp, #12]
 801902e:	f8de 2004 	ldr.w	r2, [lr, #4]
 8019032:	3204      	adds	r2, #4
 8019034:	9204      	str	r2, [sp, #16]
 8019036:	9a02      	ldr	r2, [sp, #8]
 8019038:	43d6      	mvns	r6, r2
 801903a:	b2f6      	uxtb	r6, r6
 801903c:	9a01      	ldr	r2, [sp, #4]
 801903e:	2a00      	cmp	r2, #0
 8019040:	dc03      	bgt.n	801904a <_ZN8touchgfx8LCD16bpp49TextureMapper_L8_RGB565_Opaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x48>
 8019042:	9a05      	ldr	r2, [sp, #20]
 8019044:	2a00      	cmp	r2, #0
 8019046:	f340 8129 	ble.w	801929c <_ZN8touchgfx8LCD16bpp49TextureMapper_L8_RGB565_Opaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x29a>
 801904a:	9a11      	ldr	r2, [sp, #68]	; 0x44
 801904c:	f9be c008 	ldrsh.w	ip, [lr, #8]
 8019050:	f9be 700c 	ldrsh.w	r7, [lr, #12]
 8019054:	f502 4100 	add.w	r1, r2, #32768	; 0x8000
 8019058:	9a12      	ldr	r2, [sp, #72]	; 0x48
 801905a:	f502 4200 	add.w	r2, r2, #32768	; 0x8000
 801905e:	2b00      	cmp	r3, #0
 8019060:	dd0e      	ble.n	8019080 <_ZN8touchgfx8LCD16bpp49TextureMapper_L8_RGB565_Opaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x7e>
 8019062:	1408      	asrs	r0, r1, #16
 8019064:	d405      	bmi.n	8019072 <_ZN8touchgfx8LCD16bpp49TextureMapper_L8_RGB565_Opaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x70>
 8019066:	4560      	cmp	r0, ip
 8019068:	da03      	bge.n	8019072 <_ZN8touchgfx8LCD16bpp49TextureMapper_L8_RGB565_Opaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x70>
 801906a:	1410      	asrs	r0, r2, #16
 801906c:	d401      	bmi.n	8019072 <_ZN8touchgfx8LCD16bpp49TextureMapper_L8_RGB565_Opaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x70>
 801906e:	42b8      	cmp	r0, r7
 8019070:	db07      	blt.n	8019082 <_ZN8touchgfx8LCD16bpp49TextureMapper_L8_RGB565_Opaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x80>
 8019072:	9813      	ldr	r0, [sp, #76]	; 0x4c
 8019074:	4401      	add	r1, r0
 8019076:	9814      	ldr	r0, [sp, #80]	; 0x50
 8019078:	3b01      	subs	r3, #1
 801907a:	4402      	add	r2, r0
 801907c:	3402      	adds	r4, #2
 801907e:	e7ee      	b.n	801905e <_ZN8touchgfx8LCD16bpp49TextureMapper_L8_RGB565_Opaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x5c>
 8019080:	d071      	beq.n	8019166 <_ZN8touchgfx8LCD16bpp49TextureMapper_L8_RGB565_Opaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x164>
 8019082:	9d13      	ldr	r5, [sp, #76]	; 0x4c
 8019084:	1e58      	subs	r0, r3, #1
 8019086:	fb05 1500 	mla	r5, r5, r0, r1
 801908a:	142d      	asrs	r5, r5, #16
 801908c:	d45f      	bmi.n	801914e <_ZN8touchgfx8LCD16bpp49TextureMapper_L8_RGB565_Opaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x14c>
 801908e:	4565      	cmp	r5, ip
 8019090:	da5d      	bge.n	801914e <_ZN8touchgfx8LCD16bpp49TextureMapper_L8_RGB565_Opaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x14c>
 8019092:	9d14      	ldr	r5, [sp, #80]	; 0x50
 8019094:	fb05 2000 	mla	r0, r5, r0, r2
 8019098:	1400      	asrs	r0, r0, #16
 801909a:	d458      	bmi.n	801914e <_ZN8touchgfx8LCD16bpp49TextureMapper_L8_RGB565_Opaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x14c>
 801909c:	42b8      	cmp	r0, r7
 801909e:	da56      	bge.n	801914e <_ZN8touchgfx8LCD16bpp49TextureMapper_L8_RGB565_Opaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x14c>
 80190a0:	f8bd b008 	ldrh.w	fp, [sp, #8]
 80190a4:	4699      	mov	r9, r3
 80190a6:	46a2      	mov	sl, r4
 80190a8:	f1b9 0f00 	cmp.w	r9, #0
 80190ac:	dd57      	ble.n	801915e <_ZN8touchgfx8LCD16bpp49TextureMapper_L8_RGB565_Opaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x15c>
 80190ae:	f9be 7008 	ldrsh.w	r7, [lr, #8]
 80190b2:	9803      	ldr	r0, [sp, #12]
 80190b4:	ea4f 4c22 	mov.w	ip, r2, asr #16
 80190b8:	140d      	asrs	r5, r1, #16
 80190ba:	fb07 000c 	mla	r0, r7, ip, r0
 80190be:	f109 39ff 	add.w	r9, r9, #4294967295
 80190c2:	5d40      	ldrb	r0, [r0, r5]
 80190c4:	9d04      	ldr	r5, [sp, #16]
 80190c6:	f835 0010 	ldrh.w	r0, [r5, r0, lsl #1]
 80190ca:	f8ba 5000 	ldrh.w	r5, [sl]
 80190ce:	122f      	asrs	r7, r5, #8
 80190d0:	ea4f 2c20 	mov.w	ip, r0, asr #8
 80190d4:	f007 07f8 	and.w	r7, r7, #248	; 0xf8
 80190d8:	fb17 f706 	smulbb	r7, r7, r6
 80190dc:	ea4f 08e5 	mov.w	r8, r5, asr #3
 80190e0:	f00c 0cf8 	and.w	ip, ip, #248	; 0xf8
 80190e4:	00ed      	lsls	r5, r5, #3
 80190e6:	fb0c 7c0b 	mla	ip, ip, fp, r7
 80190ea:	f008 08fc 	and.w	r8, r8, #252	; 0xfc
 80190ee:	10c7      	asrs	r7, r0, #3
 80190f0:	b2ed      	uxtb	r5, r5
 80190f2:	00c0      	lsls	r0, r0, #3
 80190f4:	fb18 f806 	smulbb	r8, r8, r6
 80190f8:	fb15 f506 	smulbb	r5, r5, r6
 80190fc:	f007 07fc 	and.w	r7, r7, #252	; 0xfc
 8019100:	b2c0      	uxtb	r0, r0
 8019102:	fa1f fc8c 	uxth.w	ip, ip
 8019106:	fb07 870b 	mla	r7, r7, fp, r8
 801910a:	fb00 500b 	mla	r0, r0, fp, r5
 801910e:	b280      	uxth	r0, r0
 8019110:	b2bf      	uxth	r7, r7
 8019112:	f10c 0501 	add.w	r5, ip, #1
 8019116:	eb05 2c1c 	add.w	ip, r5, ip, lsr #8
 801911a:	f107 0801 	add.w	r8, r7, #1
 801911e:	1c45      	adds	r5, r0, #1
 8019120:	eb05 2510 	add.w	r5, r5, r0, lsr #8
 8019124:	eb08 2817 	add.w	r8, r8, r7, lsr #8
 8019128:	9813      	ldr	r0, [sp, #76]	; 0x4c
 801912a:	f40c 4c78 	and.w	ip, ip, #63488	; 0xf800
 801912e:	f3c5 25c4 	ubfx	r5, r5, #11, #5
 8019132:	ea4f 1858 	mov.w	r8, r8, lsr #5
 8019136:	ea45 0c0c 	orr.w	ip, r5, ip
 801913a:	f408 68fc 	and.w	r8, r8, #2016	; 0x7e0
 801913e:	4401      	add	r1, r0
 8019140:	9814      	ldr	r0, [sp, #80]	; 0x50
 8019142:	ea4c 0c08 	orr.w	ip, ip, r8
 8019146:	f82a cb02 	strh.w	ip, [sl], #2
 801914a:	4402      	add	r2, r0
 801914c:	e7ac      	b.n	80190a8 <_ZN8touchgfx8LCD16bpp49TextureMapper_L8_RGB565_Opaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0xa6>
 801914e:	f8bd a008 	ldrh.w	sl, [sp, #8]
 8019152:	f04f 0800 	mov.w	r8, #0
 8019156:	eb03 0008 	add.w	r0, r3, r8
 801915a:	2800      	cmp	r0, #0
 801915c:	dc41      	bgt.n	80191e2 <_ZN8touchgfx8LCD16bpp49TextureMapper_L8_RGB565_Opaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x1e0>
 801915e:	ea23 73e3 	bic.w	r3, r3, r3, asr #31
 8019162:	eb04 0443 	add.w	r4, r4, r3, lsl #1
 8019166:	9b01      	ldr	r3, [sp, #4]
 8019168:	2b00      	cmp	r3, #0
 801916a:	f340 8097 	ble.w	801929c <_ZN8touchgfx8LCD16bpp49TextureMapper_L8_RGB565_Opaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x29a>
 801916e:	ee30 0a04 	vadd.f32	s0, s0, s8
 8019172:	eeb7 7a00 	vmov.f32	s14, #112	; 0x3f800000  1.0
 8019176:	eec7 7a00 	vdiv.f32	s15, s14, s0
 801917a:	9b10      	ldr	r3, [sp, #64]	; 0x40
 801917c:	ee70 0aa4 	vadd.f32	s1, s1, s9
 8019180:	ee31 1a05 	vadd.f32	s2, s2, s10
 8019184:	ee20 7aa7 	vmul.f32	s14, s1, s15
 8019188:	eef0 6a62 	vmov.f32	s13, s5
 801918c:	ee61 7a27 	vmul.f32	s15, s2, s15
 8019190:	eefe 6ac8 	vcvt.s32.f32	s13, s13, #16
 8019194:	ee77 2a62 	vsub.f32	s5, s14, s5
 8019198:	edcd 6a11 	vstr	s13, [sp, #68]	; 0x44
 801919c:	eefe 2ac8 	vcvt.s32.f32	s5, s5, #16
 80191a0:	eef0 6a43 	vmov.f32	s13, s6
 80191a4:	ee37 3ac3 	vsub.f32	s6, s15, s6
 80191a8:	ee12 2a90 	vmov	r2, s5
 80191ac:	eebe 3ac8 	vcvt.s32.f32	s6, s6, #16
 80191b0:	fb92 f3f3 	sdiv	r3, r2, r3
 80191b4:	ee13 2a10 	vmov	r2, s6
 80191b8:	9313      	str	r3, [sp, #76]	; 0x4c
 80191ba:	9b10      	ldr	r3, [sp, #64]	; 0x40
 80191bc:	fb92 f3f3 	sdiv	r3, r2, r3
 80191c0:	9314      	str	r3, [sp, #80]	; 0x50
 80191c2:	9b01      	ldr	r3, [sp, #4]
 80191c4:	9a05      	ldr	r2, [sp, #20]
 80191c6:	eefe 6ac8 	vcvt.s32.f32	s13, s13, #16
 80191ca:	3b01      	subs	r3, #1
 80191cc:	9301      	str	r3, [sp, #4]
 80191ce:	edcd 6a12 	vstr	s13, [sp, #72]	; 0x48
 80191d2:	9b10      	ldr	r3, [sp, #64]	; 0x40
 80191d4:	eeb0 3a67 	vmov.f32	s6, s15
 80191d8:	bf08      	it	eq
 80191da:	4613      	moveq	r3, r2
 80191dc:	eef0 2a47 	vmov.f32	s5, s14
 80191e0:	e72c      	b.n	801903c <_ZN8touchgfx8LCD16bpp49TextureMapper_L8_RGB565_Opaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x3a>
 80191e2:	140f      	asrs	r7, r1, #16
 80191e4:	d453      	bmi.n	801928e <_ZN8touchgfx8LCD16bpp49TextureMapper_L8_RGB565_Opaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x28c>
 80191e6:	f8de 5008 	ldr.w	r5, [lr, #8]
 80191ea:	42bd      	cmp	r5, r7
 80191ec:	dd4f      	ble.n	801928e <_ZN8touchgfx8LCD16bpp49TextureMapper_L8_RGB565_Opaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x28c>
 80191ee:	ea5f 4c22 	movs.w	ip, r2, asr #16
 80191f2:	d44c      	bmi.n	801928e <_ZN8touchgfx8LCD16bpp49TextureMapper_L8_RGB565_Opaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x28c>
 80191f4:	f8de 000c 	ldr.w	r0, [lr, #12]
 80191f8:	4560      	cmp	r0, ip
 80191fa:	dd48      	ble.n	801928e <_ZN8touchgfx8LCD16bpp49TextureMapper_L8_RGB565_Opaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x28c>
 80191fc:	9803      	ldr	r0, [sp, #12]
 80191fe:	b22d      	sxth	r5, r5
 8019200:	fb0c 0505 	mla	r5, ip, r5, r0
 8019204:	5de8      	ldrb	r0, [r5, r7]
 8019206:	9d04      	ldr	r5, [sp, #16]
 8019208:	f835 0010 	ldrh.w	r0, [r5, r0, lsl #1]
 801920c:	f06f 0501 	mvn.w	r5, #1
 8019210:	fb05 fb08 	mul.w	fp, r5, r8
 8019214:	ea4f 2c20 	mov.w	ip, r0, asr #8
 8019218:	f834 500b 	ldrh.w	r5, [r4, fp]
 801921c:	122f      	asrs	r7, r5, #8
 801921e:	f007 07f8 	and.w	r7, r7, #248	; 0xf8
 8019222:	fb17 f706 	smulbb	r7, r7, r6
 8019226:	ea4f 09e5 	mov.w	r9, r5, asr #3
 801922a:	f00c 0cf8 	and.w	ip, ip, #248	; 0xf8
 801922e:	00ed      	lsls	r5, r5, #3
 8019230:	fb0c 7c0a 	mla	ip, ip, sl, r7
 8019234:	f009 09fc 	and.w	r9, r9, #252	; 0xfc
 8019238:	10c7      	asrs	r7, r0, #3
 801923a:	b2ed      	uxtb	r5, r5
 801923c:	00c0      	lsls	r0, r0, #3
 801923e:	fb19 f906 	smulbb	r9, r9, r6
 8019242:	fb15 f506 	smulbb	r5, r5, r6
 8019246:	f007 07fc 	and.w	r7, r7, #252	; 0xfc
 801924a:	b2c0      	uxtb	r0, r0
 801924c:	fa1f fc8c 	uxth.w	ip, ip
 8019250:	fb07 970a 	mla	r7, r7, sl, r9
 8019254:	fb00 500a 	mla	r0, r0, sl, r5
 8019258:	b2bf      	uxth	r7, r7
 801925a:	b280      	uxth	r0, r0
 801925c:	f10c 0501 	add.w	r5, ip, #1
 8019260:	eb05 2c1c 	add.w	ip, r5, ip, lsr #8
 8019264:	f107 0901 	add.w	r9, r7, #1
 8019268:	1c45      	adds	r5, r0, #1
 801926a:	eb05 2510 	add.w	r5, r5, r0, lsr #8
 801926e:	eb09 2917 	add.w	r9, r9, r7, lsr #8
 8019272:	f40c 4c78 	and.w	ip, ip, #63488	; 0xf800
 8019276:	f3c5 25c4 	ubfx	r5, r5, #11, #5
 801927a:	ea4f 1959 	mov.w	r9, r9, lsr #5
 801927e:	ea45 0c0c 	orr.w	ip, r5, ip
 8019282:	f409 69fc 	and.w	r9, r9, #2016	; 0x7e0
 8019286:	ea4c 0c09 	orr.w	ip, ip, r9
 801928a:	f824 c00b 	strh.w	ip, [r4, fp]
 801928e:	9813      	ldr	r0, [sp, #76]	; 0x4c
 8019290:	4401      	add	r1, r0
 8019292:	9814      	ldr	r0, [sp, #80]	; 0x50
 8019294:	f108 38ff 	add.w	r8, r8, #4294967295
 8019298:	4402      	add	r2, r0
 801929a:	e75c      	b.n	8019156 <_ZN8touchgfx8LCD16bpp49TextureMapper_L8_RGB565_Opaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x154>
 801929c:	b007      	add	sp, #28
 801929e:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}

080192a2 <_ZN8touchgfx8LCD16bpp51TextureMapper_L8_RGB565_Opaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff>:
 80192a2:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 80192a6:	b085      	sub	sp, #20
 80192a8:	4693      	mov	fp, r2
 80192aa:	9e13      	ldr	r6, [sp, #76]	; 0x4c
 80192ac:	9d16      	ldr	r5, [sp, #88]	; 0x58
 80192ae:	6870      	ldr	r0, [r6, #4]
 80192b0:	9100      	str	r1, [sp, #0]
 80192b2:	e9dd 2414 	ldrd	r2, r4, [sp, #80]	; 0x50
 80192b6:	fb00 2404 	mla	r4, r0, r4, r2
 80192ba:	6832      	ldr	r2, [r6, #0]
 80192bc:	eb02 0444 	add.w	r4, r2, r4, lsl #1
 80192c0:	682a      	ldr	r2, [r5, #0]
 80192c2:	9201      	str	r2, [sp, #4]
 80192c4:	686a      	ldr	r2, [r5, #4]
 80192c6:	e9dd ec11 	ldrd	lr, ip, [sp, #68]	; 0x44
 80192ca:	3204      	adds	r2, #4
 80192cc:	9202      	str	r2, [sp, #8]
 80192ce:	eef7 6a00 	vmov.f32	s13, #112	; 0x3f800000  1.0
 80192d2:	9a00      	ldr	r2, [sp, #0]
 80192d4:	2a00      	cmp	r2, #0
 80192d6:	dc03      	bgt.n	80192e0 <_ZN8touchgfx8LCD16bpp51TextureMapper_L8_RGB565_Opaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x3e>
 80192d8:	f1bb 0f00 	cmp.w	fp, #0
 80192dc:	f340 80a0 	ble.w	8019420 <_ZN8touchgfx8LCD16bpp51TextureMapper_L8_RGB565_Opaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x17e>
 80192e0:	9a0f      	ldr	r2, [sp, #60]	; 0x3c
 80192e2:	f9b5 9008 	ldrsh.w	r9, [r5, #8]
 80192e6:	f9b5 800c 	ldrsh.w	r8, [r5, #12]
 80192ea:	f502 4000 	add.w	r0, r2, #32768	; 0x8000
 80192ee:	9a10      	ldr	r2, [sp, #64]	; 0x40
 80192f0:	f502 4200 	add.w	r2, r2, #32768	; 0x8000
 80192f4:	2b00      	cmp	r3, #0
 80192f6:	dd0c      	ble.n	8019312 <_ZN8touchgfx8LCD16bpp51TextureMapper_L8_RGB565_Opaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x70>
 80192f8:	1406      	asrs	r6, r0, #16
 80192fa:	d405      	bmi.n	8019308 <_ZN8touchgfx8LCD16bpp51TextureMapper_L8_RGB565_Opaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x66>
 80192fc:	454e      	cmp	r6, r9
 80192fe:	da03      	bge.n	8019308 <_ZN8touchgfx8LCD16bpp51TextureMapper_L8_RGB565_Opaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x66>
 8019300:	1416      	asrs	r6, r2, #16
 8019302:	d401      	bmi.n	8019308 <_ZN8touchgfx8LCD16bpp51TextureMapper_L8_RGB565_Opaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x66>
 8019304:	4546      	cmp	r6, r8
 8019306:	db05      	blt.n	8019314 <_ZN8touchgfx8LCD16bpp51TextureMapper_L8_RGB565_Opaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x72>
 8019308:	4470      	add	r0, lr
 801930a:	4462      	add	r2, ip
 801930c:	3b01      	subs	r3, #1
 801930e:	3402      	adds	r4, #2
 8019310:	e7f0      	b.n	80192f4 <_ZN8touchgfx8LCD16bpp51TextureMapper_L8_RGB565_Opaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x52>
 8019312:	d00f      	beq.n	8019334 <_ZN8touchgfx8LCD16bpp51TextureMapper_L8_RGB565_Opaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x92>
 8019314:	1e5e      	subs	r6, r3, #1
 8019316:	fb0e 0706 	mla	r7, lr, r6, r0
 801931a:	143f      	asrs	r7, r7, #16
 801931c:	d541      	bpl.n	80193a2 <_ZN8touchgfx8LCD16bpp51TextureMapper_L8_RGB565_Opaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x100>
 801931e:	eb04 0643 	add.w	r6, r4, r3, lsl #1
 8019322:	4698      	mov	r8, r3
 8019324:	9603      	str	r6, [sp, #12]
 8019326:	f1b8 0f00 	cmp.w	r8, #0
 801932a:	dc59      	bgt.n	80193e0 <_ZN8touchgfx8LCD16bpp51TextureMapper_L8_RGB565_Opaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x13e>
 801932c:	ea23 73e3 	bic.w	r3, r3, r3, asr #31
 8019330:	eb04 0443 	add.w	r4, r4, r3, lsl #1
 8019334:	9b00      	ldr	r3, [sp, #0]
 8019336:	2b00      	cmp	r3, #0
 8019338:	dd72      	ble.n	8019420 <_ZN8touchgfx8LCD16bpp51TextureMapper_L8_RGB565_Opaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x17e>
 801933a:	ee30 0a04 	vadd.f32	s0, s0, s8
 801933e:	ee70 0aa4 	vadd.f32	s1, s1, s9
 8019342:	eec6 7a80 	vdiv.f32	s15, s13, s0
 8019346:	9b0e      	ldr	r3, [sp, #56]	; 0x38
 8019348:	ee31 1a05 	vadd.f32	s2, s2, s10
 801934c:	ee20 7aa7 	vmul.f32	s14, s1, s15
 8019350:	eeb0 6a62 	vmov.f32	s12, s5
 8019354:	ee61 7a27 	vmul.f32	s15, s2, s15
 8019358:	eebe 6ac8 	vcvt.s32.f32	s12, s12, #16
 801935c:	ee77 2a62 	vsub.f32	s5, s14, s5
 8019360:	ed8d 6a0f 	vstr	s12, [sp, #60]	; 0x3c
 8019364:	eefe 2ac8 	vcvt.s32.f32	s5, s5, #16
 8019368:	eeb0 6a43 	vmov.f32	s12, s6
 801936c:	ee37 3ac3 	vsub.f32	s6, s15, s6
 8019370:	ee12 2a90 	vmov	r2, s5
 8019374:	eebe 3ac8 	vcvt.s32.f32	s6, s6, #16
 8019378:	fb92 fef3 	sdiv	lr, r2, r3
 801937c:	ee13 2a10 	vmov	r2, s6
 8019380:	fb92 fcf3 	sdiv	ip, r2, r3
 8019384:	9b00      	ldr	r3, [sp, #0]
 8019386:	eebe 6ac8 	vcvt.s32.f32	s12, s12, #16
 801938a:	3b01      	subs	r3, #1
 801938c:	9300      	str	r3, [sp, #0]
 801938e:	ed8d 6a10 	vstr	s12, [sp, #64]	; 0x40
 8019392:	9b0e      	ldr	r3, [sp, #56]	; 0x38
 8019394:	eeb0 3a67 	vmov.f32	s6, s15
 8019398:	bf08      	it	eq
 801939a:	465b      	moveq	r3, fp
 801939c:	eef0 2a47 	vmov.f32	s5, s14
 80193a0:	e797      	b.n	80192d2 <_ZN8touchgfx8LCD16bpp51TextureMapper_L8_RGB565_Opaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x30>
 80193a2:	454f      	cmp	r7, r9
 80193a4:	dabb      	bge.n	801931e <_ZN8touchgfx8LCD16bpp51TextureMapper_L8_RGB565_Opaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x7c>
 80193a6:	fb0c 2606 	mla	r6, ip, r6, r2
 80193aa:	1436      	asrs	r6, r6, #16
 80193ac:	d4b7      	bmi.n	801931e <_ZN8touchgfx8LCD16bpp51TextureMapper_L8_RGB565_Opaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x7c>
 80193ae:	4546      	cmp	r6, r8
 80193b0:	dab5      	bge.n	801931e <_ZN8touchgfx8LCD16bpp51TextureMapper_L8_RGB565_Opaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x7c>
 80193b2:	461e      	mov	r6, r3
 80193b4:	46a0      	mov	r8, r4
 80193b6:	2e00      	cmp	r6, #0
 80193b8:	ddb8      	ble.n	801932c <_ZN8touchgfx8LCD16bpp51TextureMapper_L8_RGB565_Opaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x8a>
 80193ba:	f9b5 a008 	ldrsh.w	sl, [r5, #8]
 80193be:	9901      	ldr	r1, [sp, #4]
 80193c0:	1417      	asrs	r7, r2, #16
 80193c2:	ea4f 4920 	mov.w	r9, r0, asr #16
 80193c6:	fb0a 1707 	mla	r7, sl, r7, r1
 80193ca:	9902      	ldr	r1, [sp, #8]
 80193cc:	f817 7009 	ldrb.w	r7, [r7, r9]
 80193d0:	f831 7017 	ldrh.w	r7, [r1, r7, lsl #1]
 80193d4:	f828 7b02 	strh.w	r7, [r8], #2
 80193d8:	4470      	add	r0, lr
 80193da:	4462      	add	r2, ip
 80193dc:	3e01      	subs	r6, #1
 80193de:	e7ea      	b.n	80193b6 <_ZN8touchgfx8LCD16bpp51TextureMapper_L8_RGB565_Opaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x114>
 80193e0:	ea5f 4920 	movs.w	r9, r0, asr #16
 80193e4:	d417      	bmi.n	8019416 <_ZN8touchgfx8LCD16bpp51TextureMapper_L8_RGB565_Opaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x174>
 80193e6:	68ae      	ldr	r6, [r5, #8]
 80193e8:	454e      	cmp	r6, r9
 80193ea:	dd14      	ble.n	8019416 <_ZN8touchgfx8LCD16bpp51TextureMapper_L8_RGB565_Opaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x174>
 80193ec:	ea5f 4a22 	movs.w	sl, r2, asr #16
 80193f0:	d411      	bmi.n	8019416 <_ZN8touchgfx8LCD16bpp51TextureMapper_L8_RGB565_Opaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x174>
 80193f2:	68ef      	ldr	r7, [r5, #12]
 80193f4:	4557      	cmp	r7, sl
 80193f6:	dd0e      	ble.n	8019416 <_ZN8touchgfx8LCD16bpp51TextureMapper_L8_RGB565_Opaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x174>
 80193f8:	9f01      	ldr	r7, [sp, #4]
 80193fa:	b236      	sxth	r6, r6
 80193fc:	fb0a 7606 	mla	r6, sl, r6, r7
 8019400:	9f02      	ldr	r7, [sp, #8]
 8019402:	f816 6009 	ldrb.w	r6, [r6, r9]
 8019406:	f06f 0101 	mvn.w	r1, #1
 801940a:	f837 7016 	ldrh.w	r7, [r7, r6, lsl #1]
 801940e:	fb01 f608 	mul.w	r6, r1, r8
 8019412:	9903      	ldr	r1, [sp, #12]
 8019414:	538f      	strh	r7, [r1, r6]
 8019416:	4470      	add	r0, lr
 8019418:	4462      	add	r2, ip
 801941a:	f108 38ff 	add.w	r8, r8, #4294967295
 801941e:	e782      	b.n	8019326 <_ZN8touchgfx8LCD16bpp51TextureMapper_L8_RGB565_Opaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x84>
 8019420:	b005      	add	sp, #20
 8019422:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}

08019426 <_ZN8touchgfx8LCD16bpp49TextureMapper_L8_RGB888_Opaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff>:
 8019426:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 801942a:	b087      	sub	sp, #28
 801942c:	9c15      	ldr	r4, [sp, #84]	; 0x54
 801942e:	9205      	str	r2, [sp, #20]
 8019430:	f89d 2064 	ldrb.w	r2, [sp, #100]	; 0x64
 8019434:	9203      	str	r2, [sp, #12]
 8019436:	e9dd 2016 	ldrd	r2, r0, [sp, #88]	; 0x58
 801943a:	9102      	str	r1, [sp, #8]
 801943c:	6861      	ldr	r1, [r4, #4]
 801943e:	f8dd c060 	ldr.w	ip, [sp, #96]	; 0x60
 8019442:	fb01 2000 	mla	r0, r1, r0, r2
 8019446:	6822      	ldr	r2, [r4, #0]
 8019448:	eb02 0240 	add.w	r2, r2, r0, lsl #1
 801944c:	9200      	str	r2, [sp, #0]
 801944e:	f8dc 2000 	ldr.w	r2, [ip]
 8019452:	9204      	str	r2, [sp, #16]
 8019454:	f8dc 2004 	ldr.w	r2, [ip, #4]
 8019458:	3204      	adds	r2, #4
 801945a:	9201      	str	r2, [sp, #4]
 801945c:	9a03      	ldr	r2, [sp, #12]
 801945e:	43d5      	mvns	r5, r2
 8019460:	b2ed      	uxtb	r5, r5
 8019462:	9a02      	ldr	r2, [sp, #8]
 8019464:	2a00      	cmp	r2, #0
 8019466:	dc03      	bgt.n	8019470 <_ZN8touchgfx8LCD16bpp49TextureMapper_L8_RGB888_Opaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x4a>
 8019468:	9a05      	ldr	r2, [sp, #20]
 801946a:	2a00      	cmp	r2, #0
 801946c:	f340 812c 	ble.w	80196c8 <_ZN8touchgfx8LCD16bpp49TextureMapper_L8_RGB888_Opaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x2a2>
 8019470:	9a11      	ldr	r2, [sp, #68]	; 0x44
 8019472:	f9bc e008 	ldrsh.w	lr, [ip, #8]
 8019476:	f9bc 700c 	ldrsh.w	r7, [ip, #12]
 801947a:	f502 4100 	add.w	r1, r2, #32768	; 0x8000
 801947e:	9a12      	ldr	r2, [sp, #72]	; 0x48
 8019480:	f502 4200 	add.w	r2, r2, #32768	; 0x8000
 8019484:	2b00      	cmp	r3, #0
 8019486:	dd10      	ble.n	80194aa <_ZN8touchgfx8LCD16bpp49TextureMapper_L8_RGB888_Opaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x84>
 8019488:	140c      	asrs	r4, r1, #16
 801948a:	d405      	bmi.n	8019498 <_ZN8touchgfx8LCD16bpp49TextureMapper_L8_RGB888_Opaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x72>
 801948c:	4574      	cmp	r4, lr
 801948e:	da03      	bge.n	8019498 <_ZN8touchgfx8LCD16bpp49TextureMapper_L8_RGB888_Opaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x72>
 8019490:	1414      	asrs	r4, r2, #16
 8019492:	d401      	bmi.n	8019498 <_ZN8touchgfx8LCD16bpp49TextureMapper_L8_RGB888_Opaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x72>
 8019494:	42bc      	cmp	r4, r7
 8019496:	db09      	blt.n	80194ac <_ZN8touchgfx8LCD16bpp49TextureMapper_L8_RGB888_Opaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x86>
 8019498:	9c13      	ldr	r4, [sp, #76]	; 0x4c
 801949a:	9800      	ldr	r0, [sp, #0]
 801949c:	4421      	add	r1, r4
 801949e:	9c14      	ldr	r4, [sp, #80]	; 0x50
 80194a0:	3002      	adds	r0, #2
 80194a2:	4422      	add	r2, r4
 80194a4:	3b01      	subs	r3, #1
 80194a6:	9000      	str	r0, [sp, #0]
 80194a8:	e7ec      	b.n	8019484 <_ZN8touchgfx8LCD16bpp49TextureMapper_L8_RGB888_Opaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x5e>
 80194aa:	d071      	beq.n	8019590 <_ZN8touchgfx8LCD16bpp49TextureMapper_L8_RGB888_Opaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x16a>
 80194ac:	9e13      	ldr	r6, [sp, #76]	; 0x4c
 80194ae:	1e5c      	subs	r4, r3, #1
 80194b0:	fb06 1604 	mla	r6, r6, r4, r1
 80194b4:	1436      	asrs	r6, r6, #16
 80194b6:	d45d      	bmi.n	8019574 <_ZN8touchgfx8LCD16bpp49TextureMapper_L8_RGB888_Opaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x14e>
 80194b8:	4576      	cmp	r6, lr
 80194ba:	da5b      	bge.n	8019574 <_ZN8touchgfx8LCD16bpp49TextureMapper_L8_RGB888_Opaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x14e>
 80194bc:	9e14      	ldr	r6, [sp, #80]	; 0x50
 80194be:	fb06 2404 	mla	r4, r6, r4, r2
 80194c2:	1424      	asrs	r4, r4, #16
 80194c4:	d456      	bmi.n	8019574 <_ZN8touchgfx8LCD16bpp49TextureMapper_L8_RGB888_Opaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x14e>
 80194c6:	42bc      	cmp	r4, r7
 80194c8:	da54      	bge.n	8019574 <_ZN8touchgfx8LCD16bpp49TextureMapper_L8_RGB888_Opaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x14e>
 80194ca:	f8dd 9000 	ldr.w	r9, [sp]
 80194ce:	f8bd a00c 	ldrh.w	sl, [sp, #12]
 80194d2:	4698      	mov	r8, r3
 80194d4:	f1b8 0f00 	cmp.w	r8, #0
 80194d8:	dd54      	ble.n	8019584 <_ZN8touchgfx8LCD16bpp49TextureMapper_L8_RGB888_Opaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x15e>
 80194da:	f9bc 7008 	ldrsh.w	r7, [ip, #8]
 80194de:	9804      	ldr	r0, [sp, #16]
 80194e0:	1414      	asrs	r4, r2, #16
 80194e2:	fb07 0404 	mla	r4, r7, r4, r0
 80194e6:	140e      	asrs	r6, r1, #16
 80194e8:	9801      	ldr	r0, [sp, #4]
 80194ea:	f814 e006 	ldrb.w	lr, [r4, r6]
 80194ee:	f8b9 4000 	ldrh.w	r4, [r9]
 80194f2:	eb0e 0e4e 	add.w	lr, lr, lr, lsl #1
 80194f6:	eb00 0b0e 	add.w	fp, r0, lr
 80194fa:	1227      	asrs	r7, r4, #8
 80194fc:	f89b 6002 	ldrb.w	r6, [fp, #2]
 8019500:	f89b b001 	ldrb.w	fp, [fp, #1]
 8019504:	f810 e00e 	ldrb.w	lr, [r0, lr]
 8019508:	9813      	ldr	r0, [sp, #76]	; 0x4c
 801950a:	fb16 f60a 	smulbb	r6, r6, sl
 801950e:	f007 07f8 	and.w	r7, r7, #248	; 0xf8
 8019512:	fb07 6705 	mla	r7, r7, r5, r6
 8019516:	10e6      	asrs	r6, r4, #3
 8019518:	00e4      	lsls	r4, r4, #3
 801951a:	b2e4      	uxtb	r4, r4
 801951c:	fb1b fb0a 	smulbb	fp, fp, sl
 8019520:	fb14 f405 	smulbb	r4, r4, r5
 8019524:	f006 06fc 	and.w	r6, r6, #252	; 0xfc
 8019528:	b2bf      	uxth	r7, r7
 801952a:	fb06 b605 	mla	r6, r6, r5, fp
 801952e:	fb0e 4e0a 	mla	lr, lr, sl, r4
 8019532:	b2b6      	uxth	r6, r6
 8019534:	fa1f fe8e 	uxth.w	lr, lr
 8019538:	1c7c      	adds	r4, r7, #1
 801953a:	eb04 2717 	add.w	r7, r4, r7, lsr #8
 801953e:	f106 0b01 	add.w	fp, r6, #1
 8019542:	f10e 0401 	add.w	r4, lr, #1
 8019546:	eb04 241e 	add.w	r4, r4, lr, lsr #8
 801954a:	eb0b 2b16 	add.w	fp, fp, r6, lsr #8
 801954e:	f407 4778 	and.w	r7, r7, #63488	; 0xf800
 8019552:	f3c4 24c4 	ubfx	r4, r4, #11, #5
 8019556:	ea4f 1b5b 	mov.w	fp, fp, lsr #5
 801955a:	4327      	orrs	r7, r4
 801955c:	f40b 6bfc 	and.w	fp, fp, #2016	; 0x7e0
 8019560:	4401      	add	r1, r0
 8019562:	9814      	ldr	r0, [sp, #80]	; 0x50
 8019564:	ea47 070b 	orr.w	r7, r7, fp
 8019568:	f829 7b02 	strh.w	r7, [r9], #2
 801956c:	4402      	add	r2, r0
 801956e:	f108 38ff 	add.w	r8, r8, #4294967295
 8019572:	e7af      	b.n	80194d4 <_ZN8touchgfx8LCD16bpp49TextureMapper_L8_RGB888_Opaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0xae>
 8019574:	f8bd 900c 	ldrh.w	r9, [sp, #12]
 8019578:	f04f 0e00 	mov.w	lr, #0
 801957c:	eb03 040e 	add.w	r4, r3, lr
 8019580:	2c00      	cmp	r4, #0
 8019582:	dc43      	bgt.n	801960c <_ZN8touchgfx8LCD16bpp49TextureMapper_L8_RGB888_Opaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x1e6>
 8019584:	9a00      	ldr	r2, [sp, #0]
 8019586:	ea23 73e3 	bic.w	r3, r3, r3, asr #31
 801958a:	eb02 0343 	add.w	r3, r2, r3, lsl #1
 801958e:	9300      	str	r3, [sp, #0]
 8019590:	9b02      	ldr	r3, [sp, #8]
 8019592:	2b00      	cmp	r3, #0
 8019594:	f340 8098 	ble.w	80196c8 <_ZN8touchgfx8LCD16bpp49TextureMapper_L8_RGB888_Opaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x2a2>
 8019598:	ee30 0a04 	vadd.f32	s0, s0, s8
 801959c:	eeb7 7a00 	vmov.f32	s14, #112	; 0x3f800000  1.0
 80195a0:	eec7 7a00 	vdiv.f32	s15, s14, s0
 80195a4:	9b10      	ldr	r3, [sp, #64]	; 0x40
 80195a6:	ee70 0aa4 	vadd.f32	s1, s1, s9
 80195aa:	ee31 1a05 	vadd.f32	s2, s2, s10
 80195ae:	ee20 7aa7 	vmul.f32	s14, s1, s15
 80195b2:	eef0 6a62 	vmov.f32	s13, s5
 80195b6:	ee61 7a27 	vmul.f32	s15, s2, s15
 80195ba:	eefe 6ac8 	vcvt.s32.f32	s13, s13, #16
 80195be:	ee77 2a62 	vsub.f32	s5, s14, s5
 80195c2:	edcd 6a11 	vstr	s13, [sp, #68]	; 0x44
 80195c6:	eefe 2ac8 	vcvt.s32.f32	s5, s5, #16
 80195ca:	eef0 6a43 	vmov.f32	s13, s6
 80195ce:	ee37 3ac3 	vsub.f32	s6, s15, s6
 80195d2:	ee12 2a90 	vmov	r2, s5
 80195d6:	eebe 3ac8 	vcvt.s32.f32	s6, s6, #16
 80195da:	fb92 f3f3 	sdiv	r3, r2, r3
 80195de:	ee13 2a10 	vmov	r2, s6
 80195e2:	9313      	str	r3, [sp, #76]	; 0x4c
 80195e4:	9b10      	ldr	r3, [sp, #64]	; 0x40
 80195e6:	fb92 f3f3 	sdiv	r3, r2, r3
 80195ea:	9314      	str	r3, [sp, #80]	; 0x50
 80195ec:	9b02      	ldr	r3, [sp, #8]
 80195ee:	9a05      	ldr	r2, [sp, #20]
 80195f0:	eefe 6ac8 	vcvt.s32.f32	s13, s13, #16
 80195f4:	3b01      	subs	r3, #1
 80195f6:	9302      	str	r3, [sp, #8]
 80195f8:	edcd 6a12 	vstr	s13, [sp, #72]	; 0x48
 80195fc:	9b10      	ldr	r3, [sp, #64]	; 0x40
 80195fe:	eeb0 3a67 	vmov.f32	s6, s15
 8019602:	bf08      	it	eq
 8019604:	4613      	moveq	r3, r2
 8019606:	eef0 2a47 	vmov.f32	s5, s14
 801960a:	e72a      	b.n	8019462 <_ZN8touchgfx8LCD16bpp49TextureMapper_L8_RGB888_Opaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x3c>
 801960c:	140f      	asrs	r7, r1, #16
 801960e:	d454      	bmi.n	80196ba <_ZN8touchgfx8LCD16bpp49TextureMapper_L8_RGB888_Opaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x294>
 8019610:	f8dc 6008 	ldr.w	r6, [ip, #8]
 8019614:	42be      	cmp	r6, r7
 8019616:	dd50      	ble.n	80196ba <_ZN8touchgfx8LCD16bpp49TextureMapper_L8_RGB888_Opaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x294>
 8019618:	ea5f 4822 	movs.w	r8, r2, asr #16
 801961c:	d44d      	bmi.n	80196ba <_ZN8touchgfx8LCD16bpp49TextureMapper_L8_RGB888_Opaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x294>
 801961e:	f8dc 400c 	ldr.w	r4, [ip, #12]
 8019622:	4544      	cmp	r4, r8
 8019624:	dd49      	ble.n	80196ba <_ZN8touchgfx8LCD16bpp49TextureMapper_L8_RGB888_Opaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x294>
 8019626:	9c04      	ldr	r4, [sp, #16]
 8019628:	b236      	sxth	r6, r6
 801962a:	fb08 4606 	mla	r6, r8, r6, r4
 801962e:	f06f 0001 	mvn.w	r0, #1
 8019632:	f816 8007 	ldrb.w	r8, [r6, r7]
 8019636:	9c01      	ldr	r4, [sp, #4]
 8019638:	fb00 fa0e 	mul.w	sl, r0, lr
 801963c:	eb08 0848 	add.w	r8, r8, r8, lsl #1
 8019640:	9800      	ldr	r0, [sp, #0]
 8019642:	eb04 0b08 	add.w	fp, r4, r8
 8019646:	f830 400a 	ldrh.w	r4, [r0, sl]
 801964a:	f89b 6002 	ldrb.w	r6, [fp, #2]
 801964e:	9801      	ldr	r0, [sp, #4]
 8019650:	f89b b001 	ldrb.w	fp, [fp, #1]
 8019654:	f810 8008 	ldrb.w	r8, [r0, r8]
 8019658:	9800      	ldr	r0, [sp, #0]
 801965a:	1227      	asrs	r7, r4, #8
 801965c:	fb16 f609 	smulbb	r6, r6, r9
 8019660:	f007 07f8 	and.w	r7, r7, #248	; 0xf8
 8019664:	fb07 6705 	mla	r7, r7, r5, r6
 8019668:	10e6      	asrs	r6, r4, #3
 801966a:	00e4      	lsls	r4, r4, #3
 801966c:	b2e4      	uxtb	r4, r4
 801966e:	fb1b fb09 	smulbb	fp, fp, r9
 8019672:	fb14 f405 	smulbb	r4, r4, r5
 8019676:	f006 06fc 	and.w	r6, r6, #252	; 0xfc
 801967a:	b2bf      	uxth	r7, r7
 801967c:	fb06 b605 	mla	r6, r6, r5, fp
 8019680:	fb08 4809 	mla	r8, r8, r9, r4
 8019684:	b2b6      	uxth	r6, r6
 8019686:	fa1f f888 	uxth.w	r8, r8
 801968a:	1c7c      	adds	r4, r7, #1
 801968c:	eb04 2717 	add.w	r7, r4, r7, lsr #8
 8019690:	f106 0b01 	add.w	fp, r6, #1
 8019694:	f108 0401 	add.w	r4, r8, #1
 8019698:	eb04 2418 	add.w	r4, r4, r8, lsr #8
 801969c:	eb0b 2b16 	add.w	fp, fp, r6, lsr #8
 80196a0:	f407 4778 	and.w	r7, r7, #63488	; 0xf800
 80196a4:	f3c4 24c4 	ubfx	r4, r4, #11, #5
 80196a8:	ea4f 1b5b 	mov.w	fp, fp, lsr #5
 80196ac:	4327      	orrs	r7, r4
 80196ae:	f40b 6bfc 	and.w	fp, fp, #2016	; 0x7e0
 80196b2:	ea47 070b 	orr.w	r7, r7, fp
 80196b6:	f820 700a 	strh.w	r7, [r0, sl]
 80196ba:	9813      	ldr	r0, [sp, #76]	; 0x4c
 80196bc:	4401      	add	r1, r0
 80196be:	9814      	ldr	r0, [sp, #80]	; 0x50
 80196c0:	f10e 3eff 	add.w	lr, lr, #4294967295
 80196c4:	4402      	add	r2, r0
 80196c6:	e759      	b.n	801957c <_ZN8touchgfx8LCD16bpp49TextureMapper_L8_RGB888_Opaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x156>
 80196c8:	b007      	add	sp, #28
 80196ca:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
	...

080196d0 <_ZN8touchgfx8LCD16bpp51TextureMapper_L8_RGB888_Opaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff>:
 80196d0:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 80196d4:	b085      	sub	sp, #20
 80196d6:	eef7 6a00 	vmov.f32	s13, #112	; 0x3f800000  1.0
 80196da:	9e13      	ldr	r6, [sp, #76]	; 0x4c
 80196dc:	9203      	str	r2, [sp, #12]
 80196de:	e9dd 2414 	ldrd	r2, r4, [sp, #80]	; 0x50
 80196e2:	6870      	ldr	r0, [r6, #4]
 80196e4:	9d16      	ldr	r5, [sp, #88]	; 0x58
 80196e6:	f8dd c044 	ldr.w	ip, [sp, #68]	; 0x44
 80196ea:	686f      	ldr	r7, [r5, #4]
 80196ec:	9101      	str	r1, [sp, #4]
 80196ee:	fb00 2404 	mla	r4, r0, r4, r2
 80196f2:	6832      	ldr	r2, [r6, #0]
 80196f4:	eb02 0444 	add.w	r4, r2, r4, lsl #1
 80196f8:	682a      	ldr	r2, [r5, #0]
 80196fa:	9202      	str	r2, [sp, #8]
 80196fc:	3704      	adds	r7, #4
 80196fe:	9a01      	ldr	r2, [sp, #4]
 8019700:	2a00      	cmp	r2, #0
 8019702:	dc03      	bgt.n	801970c <_ZN8touchgfx8LCD16bpp51TextureMapper_L8_RGB888_Opaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x3c>
 8019704:	9a03      	ldr	r2, [sp, #12]
 8019706:	2a00      	cmp	r2, #0
 8019708:	f340 80cc 	ble.w	80198a4 <_ZN8touchgfx8LCD16bpp51TextureMapper_L8_RGB888_Opaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x1d4>
 801970c:	9a0f      	ldr	r2, [sp, #60]	; 0x3c
 801970e:	f9b5 9008 	ldrsh.w	r9, [r5, #8]
 8019712:	f9b5 800c 	ldrsh.w	r8, [r5, #12]
 8019716:	f502 4000 	add.w	r0, r2, #32768	; 0x8000
 801971a:	9a10      	ldr	r2, [sp, #64]	; 0x40
 801971c:	f502 4200 	add.w	r2, r2, #32768	; 0x8000
 8019720:	2b00      	cmp	r3, #0
 8019722:	dd0d      	ble.n	8019740 <_ZN8touchgfx8LCD16bpp51TextureMapper_L8_RGB888_Opaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x70>
 8019724:	1406      	asrs	r6, r0, #16
 8019726:	d405      	bmi.n	8019734 <_ZN8touchgfx8LCD16bpp51TextureMapper_L8_RGB888_Opaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x64>
 8019728:	454e      	cmp	r6, r9
 801972a:	da03      	bge.n	8019734 <_ZN8touchgfx8LCD16bpp51TextureMapper_L8_RGB888_Opaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x64>
 801972c:	1416      	asrs	r6, r2, #16
 801972e:	d401      	bmi.n	8019734 <_ZN8touchgfx8LCD16bpp51TextureMapper_L8_RGB888_Opaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x64>
 8019730:	4546      	cmp	r6, r8
 8019732:	db06      	blt.n	8019742 <_ZN8touchgfx8LCD16bpp51TextureMapper_L8_RGB888_Opaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x72>
 8019734:	9e12      	ldr	r6, [sp, #72]	; 0x48
 8019736:	4460      	add	r0, ip
 8019738:	4432      	add	r2, r6
 801973a:	3b01      	subs	r3, #1
 801973c:	3402      	adds	r4, #2
 801973e:	e7ef      	b.n	8019720 <_ZN8touchgfx8LCD16bpp51TextureMapper_L8_RGB888_Opaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x50>
 8019740:	d00f      	beq.n	8019762 <_ZN8touchgfx8LCD16bpp51TextureMapper_L8_RGB888_Opaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x92>
 8019742:	1e5e      	subs	r6, r3, #1
 8019744:	fb0c 0e06 	mla	lr, ip, r6, r0
 8019748:	ea5f 4e2e 	movs.w	lr, lr, asr #16
 801974c:	d543      	bpl.n	80197d6 <_ZN8touchgfx8LCD16bpp51TextureMapper_L8_RGB888_Opaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x106>
 801974e:	4698      	mov	r8, r3
 8019750:	eb04 0a43 	add.w	sl, r4, r3, lsl #1
 8019754:	f1b8 0f00 	cmp.w	r8, #0
 8019758:	dc71      	bgt.n	801983e <_ZN8touchgfx8LCD16bpp51TextureMapper_L8_RGB888_Opaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x16e>
 801975a:	ea23 73e3 	bic.w	r3, r3, r3, asr #31
 801975e:	eb04 0443 	add.w	r4, r4, r3, lsl #1
 8019762:	9b01      	ldr	r3, [sp, #4]
 8019764:	2b00      	cmp	r3, #0
 8019766:	f340 809d 	ble.w	80198a4 <_ZN8touchgfx8LCD16bpp51TextureMapper_L8_RGB888_Opaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x1d4>
 801976a:	ee30 0a04 	vadd.f32	s0, s0, s8
 801976e:	ee70 0aa4 	vadd.f32	s1, s1, s9
 8019772:	eec6 7a80 	vdiv.f32	s15, s13, s0
 8019776:	9b0e      	ldr	r3, [sp, #56]	; 0x38
 8019778:	ee31 1a05 	vadd.f32	s2, s2, s10
 801977c:	ee20 7aa7 	vmul.f32	s14, s1, s15
 8019780:	eeb0 6a62 	vmov.f32	s12, s5
 8019784:	ee61 7a27 	vmul.f32	s15, s2, s15
 8019788:	eebe 6ac8 	vcvt.s32.f32	s12, s12, #16
 801978c:	ee77 2a62 	vsub.f32	s5, s14, s5
 8019790:	ed8d 6a0f 	vstr	s12, [sp, #60]	; 0x3c
 8019794:	eefe 2ac8 	vcvt.s32.f32	s5, s5, #16
 8019798:	eeb0 6a43 	vmov.f32	s12, s6
 801979c:	ee37 3ac3 	vsub.f32	s6, s15, s6
 80197a0:	ee12 2a90 	vmov	r2, s5
 80197a4:	eebe 3ac8 	vcvt.s32.f32	s6, s6, #16
 80197a8:	fb92 fcf3 	sdiv	ip, r2, r3
 80197ac:	ee13 2a10 	vmov	r2, s6
 80197b0:	fb92 f3f3 	sdiv	r3, r2, r3
 80197b4:	9312      	str	r3, [sp, #72]	; 0x48
 80197b6:	9b01      	ldr	r3, [sp, #4]
 80197b8:	9a03      	ldr	r2, [sp, #12]
 80197ba:	eebe 6ac8 	vcvt.s32.f32	s12, s12, #16
 80197be:	3b01      	subs	r3, #1
 80197c0:	9301      	str	r3, [sp, #4]
 80197c2:	ed8d 6a10 	vstr	s12, [sp, #64]	; 0x40
 80197c6:	9b0e      	ldr	r3, [sp, #56]	; 0x38
 80197c8:	eeb0 3a67 	vmov.f32	s6, s15
 80197cc:	bf08      	it	eq
 80197ce:	4613      	moveq	r3, r2
 80197d0:	eef0 2a47 	vmov.f32	s5, s14
 80197d4:	e793      	b.n	80196fe <_ZN8touchgfx8LCD16bpp51TextureMapper_L8_RGB888_Opaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x2e>
 80197d6:	45ce      	cmp	lr, r9
 80197d8:	dab9      	bge.n	801974e <_ZN8touchgfx8LCD16bpp51TextureMapper_L8_RGB888_Opaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x7e>
 80197da:	9912      	ldr	r1, [sp, #72]	; 0x48
 80197dc:	fb01 2606 	mla	r6, r1, r6, r2
 80197e0:	1436      	asrs	r6, r6, #16
 80197e2:	d4b4      	bmi.n	801974e <_ZN8touchgfx8LCD16bpp51TextureMapper_L8_RGB888_Opaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x7e>
 80197e4:	4546      	cmp	r6, r8
 80197e6:	dab2      	bge.n	801974e <_ZN8touchgfx8LCD16bpp51TextureMapper_L8_RGB888_Opaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x7e>
 80197e8:	4698      	mov	r8, r3
 80197ea:	46a2      	mov	sl, r4
 80197ec:	f1b8 0f00 	cmp.w	r8, #0
 80197f0:	ddb3      	ble.n	801975a <_ZN8touchgfx8LCD16bpp51TextureMapper_L8_RGB888_Opaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x8a>
 80197f2:	f9b5 9008 	ldrsh.w	r9, [r5, #8]
 80197f6:	9902      	ldr	r1, [sp, #8]
 80197f8:	1416      	asrs	r6, r2, #16
 80197fa:	fb09 1606 	mla	r6, r9, r6, r1
 80197fe:	ea4f 4e20 	mov.w	lr, r0, asr #16
 8019802:	492a      	ldr	r1, [pc, #168]	; (80198ac <_ZN8touchgfx8LCD16bpp51TextureMapper_L8_RGB888_Opaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x1dc>)
 8019804:	f816 e00e 	ldrb.w	lr, [r6, lr]
 8019808:	eb0e 0e4e 	add.w	lr, lr, lr, lsl #1
 801980c:	eb07 0b0e 	add.w	fp, r7, lr
 8019810:	4460      	add	r0, ip
 8019812:	f89b 6001 	ldrb.w	r6, [fp, #1]
 8019816:	f89b 9002 	ldrb.w	r9, [fp, #2]
 801981a:	00f6      	lsls	r6, r6, #3
 801981c:	ea01 2909 	and.w	r9, r1, r9, lsl #8
 8019820:	f406 66fc 	and.w	r6, r6, #2016	; 0x7e0
 8019824:	ea49 0606 	orr.w	r6, r9, r6
 8019828:	f817 900e 	ldrb.w	r9, [r7, lr]
 801982c:	9912      	ldr	r1, [sp, #72]	; 0x48
 801982e:	ea46 06d9 	orr.w	r6, r6, r9, lsr #3
 8019832:	f82a 6b02 	strh.w	r6, [sl], #2
 8019836:	440a      	add	r2, r1
 8019838:	f108 38ff 	add.w	r8, r8, #4294967295
 801983c:	e7d6      	b.n	80197ec <_ZN8touchgfx8LCD16bpp51TextureMapper_L8_RGB888_Opaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x11c>
 801983e:	ea5f 4920 	movs.w	r9, r0, asr #16
 8019842:	d429      	bmi.n	8019898 <_ZN8touchgfx8LCD16bpp51TextureMapper_L8_RGB888_Opaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x1c8>
 8019844:	68ae      	ldr	r6, [r5, #8]
 8019846:	454e      	cmp	r6, r9
 8019848:	dd26      	ble.n	8019898 <_ZN8touchgfx8LCD16bpp51TextureMapper_L8_RGB888_Opaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x1c8>
 801984a:	ea5f 4b22 	movs.w	fp, r2, asr #16
 801984e:	d423      	bmi.n	8019898 <_ZN8touchgfx8LCD16bpp51TextureMapper_L8_RGB888_Opaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x1c8>
 8019850:	68e9      	ldr	r1, [r5, #12]
 8019852:	4559      	cmp	r1, fp
 8019854:	dd20      	ble.n	8019898 <_ZN8touchgfx8LCD16bpp51TextureMapper_L8_RGB888_Opaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x1c8>
 8019856:	9902      	ldr	r1, [sp, #8]
 8019858:	fa0f fe86 	sxth.w	lr, r6
 801985c:	fb0b 1e0e 	mla	lr, fp, lr, r1
 8019860:	f06f 0101 	mvn.w	r1, #1
 8019864:	f81e e009 	ldrb.w	lr, [lr, r9]
 8019868:	eb0e 0e4e 	add.w	lr, lr, lr, lsl #1
 801986c:	eb07 060e 	add.w	r6, r7, lr
 8019870:	fb01 f908 	mul.w	r9, r1, r8
 8019874:	f896 b002 	ldrb.w	fp, [r6, #2]
 8019878:	7876      	ldrb	r6, [r6, #1]
 801987a:	f2a1 71fe 	subw	r1, r1, #2046	; 0x7fe
 801987e:	00f6      	lsls	r6, r6, #3
 8019880:	ea01 2b0b 	and.w	fp, r1, fp, lsl #8
 8019884:	f406 66fc 	and.w	r6, r6, #2016	; 0x7e0
 8019888:	ea4b 0606 	orr.w	r6, fp, r6
 801988c:	f817 b00e 	ldrb.w	fp, [r7, lr]
 8019890:	ea46 06db 	orr.w	r6, r6, fp, lsr #3
 8019894:	f82a 6009 	strh.w	r6, [sl, r9]
 8019898:	9912      	ldr	r1, [sp, #72]	; 0x48
 801989a:	4460      	add	r0, ip
 801989c:	440a      	add	r2, r1
 801989e:	f108 38ff 	add.w	r8, r8, #4294967295
 80198a2:	e757      	b.n	8019754 <_ZN8touchgfx8LCD16bpp51TextureMapper_L8_RGB888_Opaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x84>
 80198a4:	b005      	add	sp, #20
 80198a6:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
 80198aa:	bf00      	nop
 80198ac:	fffff800 	.word	0xfffff800

080198b0 <_ZN8touchgfx8LCD16bpp54TextureMapper_L8_ARGB8888_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff>:
 80198b0:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 80198b4:	b087      	sub	sp, #28
 80198b6:	468b      	mov	fp, r1
 80198b8:	9815      	ldr	r0, [sp, #84]	; 0x54
 80198ba:	9204      	str	r2, [sp, #16]
 80198bc:	f89d 2064 	ldrb.w	r2, [sp, #100]	; 0x64
 80198c0:	9205      	str	r2, [sp, #20]
 80198c2:	e9dd 2416 	ldrd	r2, r4, [sp, #88]	; 0x58
 80198c6:	6841      	ldr	r1, [r0, #4]
 80198c8:	f8dd c060 	ldr.w	ip, [sp, #96]	; 0x60
 80198cc:	fb01 2404 	mla	r4, r1, r4, r2
 80198d0:	6802      	ldr	r2, [r0, #0]
 80198d2:	eb02 0444 	add.w	r4, r2, r4, lsl #1
 80198d6:	f8dc 2000 	ldr.w	r2, [ip]
 80198da:	9201      	str	r2, [sp, #4]
 80198dc:	f8dc 2004 	ldr.w	r2, [ip, #4]
 80198e0:	3204      	adds	r2, #4
 80198e2:	9202      	str	r2, [sp, #8]
 80198e4:	eef7 6a00 	vmov.f32	s13, #112	; 0x3f800000  1.0
 80198e8:	f1bb 0f00 	cmp.w	fp, #0
 80198ec:	dc03      	bgt.n	80198f6 <_ZN8touchgfx8LCD16bpp54TextureMapper_L8_ARGB8888_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x46>
 80198ee:	9a04      	ldr	r2, [sp, #16]
 80198f0:	2a00      	cmp	r2, #0
 80198f2:	f340 8138 	ble.w	8019b66 <_ZN8touchgfx8LCD16bpp54TextureMapper_L8_ARGB8888_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x2b6>
 80198f6:	9a11      	ldr	r2, [sp, #68]	; 0x44
 80198f8:	f9bc 7008 	ldrsh.w	r7, [ip, #8]
 80198fc:	f9bc 600c 	ldrsh.w	r6, [ip, #12]
 8019900:	f502 4000 	add.w	r0, r2, #32768	; 0x8000
 8019904:	9a12      	ldr	r2, [sp, #72]	; 0x48
 8019906:	f502 4100 	add.w	r1, r2, #32768	; 0x8000
 801990a:	2b00      	cmp	r3, #0
 801990c:	dd0e      	ble.n	801992c <_ZN8touchgfx8LCD16bpp54TextureMapper_L8_ARGB8888_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x7c>
 801990e:	1402      	asrs	r2, r0, #16
 8019910:	d405      	bmi.n	801991e <_ZN8touchgfx8LCD16bpp54TextureMapper_L8_ARGB8888_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x6e>
 8019912:	42ba      	cmp	r2, r7
 8019914:	da03      	bge.n	801991e <_ZN8touchgfx8LCD16bpp54TextureMapper_L8_ARGB8888_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x6e>
 8019916:	140a      	asrs	r2, r1, #16
 8019918:	d401      	bmi.n	801991e <_ZN8touchgfx8LCD16bpp54TextureMapper_L8_ARGB8888_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x6e>
 801991a:	42b2      	cmp	r2, r6
 801991c:	db07      	blt.n	801992e <_ZN8touchgfx8LCD16bpp54TextureMapper_L8_ARGB8888_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x7e>
 801991e:	9a13      	ldr	r2, [sp, #76]	; 0x4c
 8019920:	4410      	add	r0, r2
 8019922:	9a14      	ldr	r2, [sp, #80]	; 0x50
 8019924:	3b01      	subs	r3, #1
 8019926:	4411      	add	r1, r2
 8019928:	3402      	adds	r4, #2
 801992a:	e7ee      	b.n	801990a <_ZN8touchgfx8LCD16bpp54TextureMapper_L8_ARGB8888_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x5a>
 801992c:	d019      	beq.n	8019962 <_ZN8touchgfx8LCD16bpp54TextureMapper_L8_ARGB8888_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0xb2>
 801992e:	9d13      	ldr	r5, [sp, #76]	; 0x4c
 8019930:	1e5a      	subs	r2, r3, #1
 8019932:	fb05 0502 	mla	r5, r5, r2, r0
 8019936:	142d      	asrs	r5, r5, #16
 8019938:	d409      	bmi.n	801994e <_ZN8touchgfx8LCD16bpp54TextureMapper_L8_ARGB8888_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x9e>
 801993a:	42bd      	cmp	r5, r7
 801993c:	da07      	bge.n	801994e <_ZN8touchgfx8LCD16bpp54TextureMapper_L8_ARGB8888_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x9e>
 801993e:	9d14      	ldr	r5, [sp, #80]	; 0x50
 8019940:	fb05 1202 	mla	r2, r5, r2, r1
 8019944:	1412      	asrs	r2, r2, #16
 8019946:	d402      	bmi.n	801994e <_ZN8touchgfx8LCD16bpp54TextureMapper_L8_ARGB8888_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x9e>
 8019948:	42b2      	cmp	r2, r6
 801994a:	f2c0 80ac 	blt.w	8019aa6 <_ZN8touchgfx8LCD16bpp54TextureMapper_L8_ARGB8888_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x1f6>
 801994e:	f04f 0e00 	mov.w	lr, #0
 8019952:	eb03 020e 	add.w	r2, r3, lr
 8019956:	2a00      	cmp	r2, #0
 8019958:	dc3e      	bgt.n	80199d8 <_ZN8touchgfx8LCD16bpp54TextureMapper_L8_ARGB8888_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x128>
 801995a:	ea23 73e3 	bic.w	r3, r3, r3, asr #31
 801995e:	eb04 0443 	add.w	r4, r4, r3, lsl #1
 8019962:	f1bb 0f00 	cmp.w	fp, #0
 8019966:	f340 80fe 	ble.w	8019b66 <_ZN8touchgfx8LCD16bpp54TextureMapper_L8_ARGB8888_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x2b6>
 801996a:	ee30 0a04 	vadd.f32	s0, s0, s8
 801996e:	ee70 0aa4 	vadd.f32	s1, s1, s9
 8019972:	eec6 7a80 	vdiv.f32	s15, s13, s0
 8019976:	9b10      	ldr	r3, [sp, #64]	; 0x40
 8019978:	f1bb 0b01 	subs.w	fp, fp, #1
 801997c:	ee31 1a05 	vadd.f32	s2, s2, s10
 8019980:	ee20 7aa7 	vmul.f32	s14, s1, s15
 8019984:	eeb0 6a62 	vmov.f32	s12, s5
 8019988:	ee61 7a27 	vmul.f32	s15, s2, s15
 801998c:	eebe 6ac8 	vcvt.s32.f32	s12, s12, #16
 8019990:	ee77 2a62 	vsub.f32	s5, s14, s5
 8019994:	ed8d 6a11 	vstr	s12, [sp, #68]	; 0x44
 8019998:	eefe 2ac8 	vcvt.s32.f32	s5, s5, #16
 801999c:	eeb0 6a43 	vmov.f32	s12, s6
 80199a0:	ee37 3ac3 	vsub.f32	s6, s15, s6
 80199a4:	ee12 2a90 	vmov	r2, s5
 80199a8:	eebe 3ac8 	vcvt.s32.f32	s6, s6, #16
 80199ac:	fb92 f3f3 	sdiv	r3, r2, r3
 80199b0:	ee13 2a10 	vmov	r2, s6
 80199b4:	eebe 6ac8 	vcvt.s32.f32	s12, s12, #16
 80199b8:	9313      	str	r3, [sp, #76]	; 0x4c
 80199ba:	9b10      	ldr	r3, [sp, #64]	; 0x40
 80199bc:	fb92 f3f3 	sdiv	r3, r2, r3
 80199c0:	9a04      	ldr	r2, [sp, #16]
 80199c2:	9314      	str	r3, [sp, #80]	; 0x50
 80199c4:	ed8d 6a12 	vstr	s12, [sp, #72]	; 0x48
 80199c8:	9b10      	ldr	r3, [sp, #64]	; 0x40
 80199ca:	eeb0 3a67 	vmov.f32	s6, s15
 80199ce:	bf08      	it	eq
 80199d0:	4613      	moveq	r3, r2
 80199d2:	eef0 2a47 	vmov.f32	s5, s14
 80199d6:	e787      	b.n	80198e8 <_ZN8touchgfx8LCD16bpp54TextureMapper_L8_ARGB8888_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x38>
 80199d8:	1406      	asrs	r6, r0, #16
 80199da:	d45d      	bmi.n	8019a98 <_ZN8touchgfx8LCD16bpp54TextureMapper_L8_ARGB8888_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x1e8>
 80199dc:	f8dc 5008 	ldr.w	r5, [ip, #8]
 80199e0:	42b5      	cmp	r5, r6
 80199e2:	dd59      	ble.n	8019a98 <_ZN8touchgfx8LCD16bpp54TextureMapper_L8_ARGB8888_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x1e8>
 80199e4:	140f      	asrs	r7, r1, #16
 80199e6:	d457      	bmi.n	8019a98 <_ZN8touchgfx8LCD16bpp54TextureMapper_L8_ARGB8888_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x1e8>
 80199e8:	f8dc 200c 	ldr.w	r2, [ip, #12]
 80199ec:	42ba      	cmp	r2, r7
 80199ee:	dd53      	ble.n	8019a98 <_ZN8touchgfx8LCD16bpp54TextureMapper_L8_ARGB8888_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x1e8>
 80199f0:	9a01      	ldr	r2, [sp, #4]
 80199f2:	b22d      	sxth	r5, r5
 80199f4:	fb07 2505 	mla	r5, r7, r5, r2
 80199f8:	5daa      	ldrb	r2, [r5, r6]
 80199fa:	9d02      	ldr	r5, [sp, #8]
 80199fc:	f855 5022 	ldr.w	r5, [r5, r2, lsl #2]
 8019a00:	0e2e      	lsrs	r6, r5, #24
 8019a02:	d049      	beq.n	8019a98 <_ZN8touchgfx8LCD16bpp54TextureMapper_L8_ARGB8888_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x1e8>
 8019a04:	f06f 0201 	mvn.w	r2, #1
 8019a08:	fb02 f20e 	mul.w	r2, r2, lr
 8019a0c:	9203      	str	r2, [sp, #12]
 8019a0e:	f834 8002 	ldrh.w	r8, [r4, r2]
 8019a12:	9a05      	ldr	r2, [sp, #20]
 8019a14:	4356      	muls	r6, r2
 8019a16:	1c72      	adds	r2, r6, #1
 8019a18:	eb02 2226 	add.w	r2, r2, r6, asr #8
 8019a1c:	1212      	asrs	r2, r2, #8
 8019a1e:	fa1f f982 	uxth.w	r9, r2
 8019a22:	ea4f 2728 	mov.w	r7, r8, asr #8
 8019a26:	f3c5 4607 	ubfx	r6, r5, #16, #8
 8019a2a:	43d2      	mvns	r2, r2
 8019a2c:	b2d2      	uxtb	r2, r2
 8019a2e:	fb16 f609 	smulbb	r6, r6, r9
 8019a32:	f007 07f8 	and.w	r7, r7, #248	; 0xf8
 8019a36:	fb07 6702 	mla	r7, r7, r2, r6
 8019a3a:	f3c5 2a07 	ubfx	sl, r5, #8, #8
 8019a3e:	ea4f 06e8 	mov.w	r6, r8, asr #3
 8019a42:	b2ed      	uxtb	r5, r5
 8019a44:	ea4f 08c8 	mov.w	r8, r8, lsl #3
 8019a48:	fa5f f888 	uxtb.w	r8, r8
 8019a4c:	fb15 f509 	smulbb	r5, r5, r9
 8019a50:	fb08 5502 	mla	r5, r8, r2, r5
 8019a54:	b2bf      	uxth	r7, r7
 8019a56:	fb1a fa09 	smulbb	sl, sl, r9
 8019a5a:	b2ad      	uxth	r5, r5
 8019a5c:	f006 06fc 	and.w	r6, r6, #252	; 0xfc
 8019a60:	fb06 a602 	mla	r6, r6, r2, sl
 8019a64:	1c7a      	adds	r2, r7, #1
 8019a66:	f105 0a01 	add.w	sl, r5, #1
 8019a6a:	eb02 2717 	add.w	r7, r2, r7, lsr #8
 8019a6e:	eb0a 2a15 	add.w	sl, sl, r5, lsr #8
 8019a72:	b2b6      	uxth	r6, r6
 8019a74:	f3ca 2ac4 	ubfx	sl, sl, #11, #5
 8019a78:	f407 4778 	and.w	r7, r7, #63488	; 0xf800
 8019a7c:	ea4a 0707 	orr.w	r7, sl, r7
 8019a80:	f106 0a01 	add.w	sl, r6, #1
 8019a84:	eb0a 2a16 	add.w	sl, sl, r6, lsr #8
 8019a88:	ea4f 1a5a 	mov.w	sl, sl, lsr #5
 8019a8c:	f40a 6afc 	and.w	sl, sl, #2016	; 0x7e0
 8019a90:	9a03      	ldr	r2, [sp, #12]
 8019a92:	ea47 070a 	orr.w	r7, r7, sl
 8019a96:	52a7      	strh	r7, [r4, r2]
 8019a98:	9a13      	ldr	r2, [sp, #76]	; 0x4c
 8019a9a:	4410      	add	r0, r2
 8019a9c:	9a14      	ldr	r2, [sp, #80]	; 0x50
 8019a9e:	f10e 3eff 	add.w	lr, lr, #4294967295
 8019aa2:	4411      	add	r1, r2
 8019aa4:	e755      	b.n	8019952 <_ZN8touchgfx8LCD16bpp54TextureMapper_L8_ARGB8888_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0xa2>
 8019aa6:	f04f 0800 	mov.w	r8, #0
 8019aaa:	eba3 0208 	sub.w	r2, r3, r8
 8019aae:	2a00      	cmp	r2, #0
 8019ab0:	f77f af53 	ble.w	801995a <_ZN8touchgfx8LCD16bpp54TextureMapper_L8_ARGB8888_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0xaa>
 8019ab4:	f9bc 6008 	ldrsh.w	r6, [ip, #8]
 8019ab8:	9f01      	ldr	r7, [sp, #4]
 8019aba:	140a      	asrs	r2, r1, #16
 8019abc:	1405      	asrs	r5, r0, #16
 8019abe:	fb06 7202 	mla	r2, r6, r2, r7
 8019ac2:	5d52      	ldrb	r2, [r2, r5]
 8019ac4:	9d02      	ldr	r5, [sp, #8]
 8019ac6:	f855 5022 	ldr.w	r5, [r5, r2, lsl #2]
 8019aca:	0e2e      	lsrs	r6, r5, #24
 8019acc:	d044      	beq.n	8019b58 <_ZN8touchgfx8LCD16bpp54TextureMapper_L8_ARGB8888_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x2a8>
 8019ace:	9a05      	ldr	r2, [sp, #20]
 8019ad0:	f834 e018 	ldrh.w	lr, [r4, r8, lsl #1]
 8019ad4:	4356      	muls	r6, r2
 8019ad6:	1c72      	adds	r2, r6, #1
 8019ad8:	eb02 2226 	add.w	r2, r2, r6, asr #8
 8019adc:	1212      	asrs	r2, r2, #8
 8019ade:	fa1f f982 	uxth.w	r9, r2
 8019ae2:	ea4f 272e 	mov.w	r7, lr, asr #8
 8019ae6:	f3c5 4607 	ubfx	r6, r5, #16, #8
 8019aea:	43d2      	mvns	r2, r2
 8019aec:	b2d2      	uxtb	r2, r2
 8019aee:	fb16 f609 	smulbb	r6, r6, r9
 8019af2:	f007 07f8 	and.w	r7, r7, #248	; 0xf8
 8019af6:	fb07 6702 	mla	r7, r7, r2, r6
 8019afa:	f3c5 2a07 	ubfx	sl, r5, #8, #8
 8019afe:	ea4f 06ee 	mov.w	r6, lr, asr #3
 8019b02:	b2ed      	uxtb	r5, r5
 8019b04:	ea4f 0ece 	mov.w	lr, lr, lsl #3
 8019b08:	fa5f fe8e 	uxtb.w	lr, lr
 8019b0c:	fb15 f509 	smulbb	r5, r5, r9
 8019b10:	fb0e 5502 	mla	r5, lr, r2, r5
 8019b14:	b2bf      	uxth	r7, r7
 8019b16:	fb1a fa09 	smulbb	sl, sl, r9
 8019b1a:	b2ad      	uxth	r5, r5
 8019b1c:	f006 06fc 	and.w	r6, r6, #252	; 0xfc
 8019b20:	fb06 a602 	mla	r6, r6, r2, sl
 8019b24:	1c7a      	adds	r2, r7, #1
 8019b26:	f105 0a01 	add.w	sl, r5, #1
 8019b2a:	eb02 2717 	add.w	r7, r2, r7, lsr #8
 8019b2e:	eb0a 2a15 	add.w	sl, sl, r5, lsr #8
 8019b32:	b2b6      	uxth	r6, r6
 8019b34:	f3ca 2ac4 	ubfx	sl, sl, #11, #5
 8019b38:	f407 4778 	and.w	r7, r7, #63488	; 0xf800
 8019b3c:	ea4a 0707 	orr.w	r7, sl, r7
 8019b40:	f106 0a01 	add.w	sl, r6, #1
 8019b44:	eb0a 2a16 	add.w	sl, sl, r6, lsr #8
 8019b48:	ea4f 1a5a 	mov.w	sl, sl, lsr #5
 8019b4c:	f40a 6afc 	and.w	sl, sl, #2016	; 0x7e0
 8019b50:	ea47 070a 	orr.w	r7, r7, sl
 8019b54:	f824 7018 	strh.w	r7, [r4, r8, lsl #1]
 8019b58:	9a13      	ldr	r2, [sp, #76]	; 0x4c
 8019b5a:	4410      	add	r0, r2
 8019b5c:	9a14      	ldr	r2, [sp, #80]	; 0x50
 8019b5e:	f108 0801 	add.w	r8, r8, #1
 8019b62:	4411      	add	r1, r2
 8019b64:	e7a1      	b.n	8019aaa <_ZN8touchgfx8LCD16bpp54TextureMapper_L8_ARGB8888_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x1fa>
 8019b66:	b007      	add	sp, #28
 8019b68:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}

08019b6c <_ZN8touchgfx8LCD16bpp56TextureMapper_L8_ARGB8888_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff>:
 8019b6c:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 8019b70:	b085      	sub	sp, #20
 8019b72:	468b      	mov	fp, r1
 8019b74:	9813      	ldr	r0, [sp, #76]	; 0x4c
 8019b76:	9203      	str	r2, [sp, #12]
 8019b78:	e9dd 2414 	ldrd	r2, r4, [sp, #80]	; 0x50
 8019b7c:	6841      	ldr	r1, [r0, #4]
 8019b7e:	f8dd e058 	ldr.w	lr, [sp, #88]	; 0x58
 8019b82:	fb01 2404 	mla	r4, r1, r4, r2
 8019b86:	6802      	ldr	r2, [r0, #0]
 8019b88:	eb02 0444 	add.w	r4, r2, r4, lsl #1
 8019b8c:	f8de 2000 	ldr.w	r2, [lr]
 8019b90:	9200      	str	r2, [sp, #0]
 8019b92:	f8de 2004 	ldr.w	r2, [lr, #4]
 8019b96:	3204      	adds	r2, #4
 8019b98:	9201      	str	r2, [sp, #4]
 8019b9a:	eef7 6a00 	vmov.f32	s13, #112	; 0x3f800000  1.0
 8019b9e:	f1bb 0f00 	cmp.w	fp, #0
 8019ba2:	dc03      	bgt.n	8019bac <_ZN8touchgfx8LCD16bpp56TextureMapper_L8_ARGB8888_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x40>
 8019ba4:	9a03      	ldr	r2, [sp, #12]
 8019ba6:	2a00      	cmp	r2, #0
 8019ba8:	f340 8153 	ble.w	8019e52 <_ZN8touchgfx8LCD16bpp56TextureMapper_L8_ARGB8888_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x2e6>
 8019bac:	9a0f      	ldr	r2, [sp, #60]	; 0x3c
 8019bae:	f9be 7008 	ldrsh.w	r7, [lr, #8]
 8019bb2:	f9be 600c 	ldrsh.w	r6, [lr, #12]
 8019bb6:	f502 4100 	add.w	r1, r2, #32768	; 0x8000
 8019bba:	9a10      	ldr	r2, [sp, #64]	; 0x40
 8019bbc:	f502 4200 	add.w	r2, r2, #32768	; 0x8000
 8019bc0:	2b00      	cmp	r3, #0
 8019bc2:	dd0e      	ble.n	8019be2 <_ZN8touchgfx8LCD16bpp56TextureMapper_L8_ARGB8888_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x76>
 8019bc4:	1408      	asrs	r0, r1, #16
 8019bc6:	d405      	bmi.n	8019bd4 <_ZN8touchgfx8LCD16bpp56TextureMapper_L8_ARGB8888_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x68>
 8019bc8:	42b8      	cmp	r0, r7
 8019bca:	da03      	bge.n	8019bd4 <_ZN8touchgfx8LCD16bpp56TextureMapper_L8_ARGB8888_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x68>
 8019bcc:	1410      	asrs	r0, r2, #16
 8019bce:	d401      	bmi.n	8019bd4 <_ZN8touchgfx8LCD16bpp56TextureMapper_L8_ARGB8888_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x68>
 8019bd0:	42b0      	cmp	r0, r6
 8019bd2:	db07      	blt.n	8019be4 <_ZN8touchgfx8LCD16bpp56TextureMapper_L8_ARGB8888_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x78>
 8019bd4:	9811      	ldr	r0, [sp, #68]	; 0x44
 8019bd6:	4401      	add	r1, r0
 8019bd8:	9812      	ldr	r0, [sp, #72]	; 0x48
 8019bda:	3b01      	subs	r3, #1
 8019bdc:	4402      	add	r2, r0
 8019bde:	3402      	adds	r4, #2
 8019be0:	e7ee      	b.n	8019bc0 <_ZN8touchgfx8LCD16bpp56TextureMapper_L8_ARGB8888_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x54>
 8019be2:	d017      	beq.n	8019c14 <_ZN8touchgfx8LCD16bpp56TextureMapper_L8_ARGB8888_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0xa8>
 8019be4:	9d11      	ldr	r5, [sp, #68]	; 0x44
 8019be6:	1e58      	subs	r0, r3, #1
 8019be8:	fb05 1500 	mla	r5, r5, r0, r1
 8019bec:	142d      	asrs	r5, r5, #16
 8019bee:	d409      	bmi.n	8019c04 <_ZN8touchgfx8LCD16bpp56TextureMapper_L8_ARGB8888_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x98>
 8019bf0:	42bd      	cmp	r5, r7
 8019bf2:	da07      	bge.n	8019c04 <_ZN8touchgfx8LCD16bpp56TextureMapper_L8_ARGB8888_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x98>
 8019bf4:	9d12      	ldr	r5, [sp, #72]	; 0x48
 8019bf6:	fb05 2000 	mla	r0, r5, r0, r2
 8019bfa:	1400      	asrs	r0, r0, #16
 8019bfc:	d402      	bmi.n	8019c04 <_ZN8touchgfx8LCD16bpp56TextureMapper_L8_ARGB8888_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x98>
 8019bfe:	42b0      	cmp	r0, r6
 8019c00:	f2c0 80bc 	blt.w	8019d7c <_ZN8touchgfx8LCD16bpp56TextureMapper_L8_ARGB8888_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x210>
 8019c04:	2600      	movs	r6, #0
 8019c06:	1998      	adds	r0, r3, r6
 8019c08:	2800      	cmp	r0, #0
 8019c0a:	dc3e      	bgt.n	8019c8a <_ZN8touchgfx8LCD16bpp56TextureMapper_L8_ARGB8888_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x11e>
 8019c0c:	ea23 73e3 	bic.w	r3, r3, r3, asr #31
 8019c10:	eb04 0443 	add.w	r4, r4, r3, lsl #1
 8019c14:	f1bb 0f00 	cmp.w	fp, #0
 8019c18:	f340 811b 	ble.w	8019e52 <_ZN8touchgfx8LCD16bpp56TextureMapper_L8_ARGB8888_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x2e6>
 8019c1c:	ee30 0a04 	vadd.f32	s0, s0, s8
 8019c20:	ee70 0aa4 	vadd.f32	s1, s1, s9
 8019c24:	eec6 7a80 	vdiv.f32	s15, s13, s0
 8019c28:	9b0e      	ldr	r3, [sp, #56]	; 0x38
 8019c2a:	f1bb 0b01 	subs.w	fp, fp, #1
 8019c2e:	ee31 1a05 	vadd.f32	s2, s2, s10
 8019c32:	ee20 7aa7 	vmul.f32	s14, s1, s15
 8019c36:	eeb0 6a62 	vmov.f32	s12, s5
 8019c3a:	ee61 7a27 	vmul.f32	s15, s2, s15
 8019c3e:	eebe 6ac8 	vcvt.s32.f32	s12, s12, #16
 8019c42:	ee77 2a62 	vsub.f32	s5, s14, s5
 8019c46:	ed8d 6a0f 	vstr	s12, [sp, #60]	; 0x3c
 8019c4a:	eefe 2ac8 	vcvt.s32.f32	s5, s5, #16
 8019c4e:	eeb0 6a43 	vmov.f32	s12, s6
 8019c52:	ee37 3ac3 	vsub.f32	s6, s15, s6
 8019c56:	ee12 2a90 	vmov	r2, s5
 8019c5a:	eebe 3ac8 	vcvt.s32.f32	s6, s6, #16
 8019c5e:	fb92 f3f3 	sdiv	r3, r2, r3
 8019c62:	ee13 2a10 	vmov	r2, s6
 8019c66:	eebe 6ac8 	vcvt.s32.f32	s12, s12, #16
 8019c6a:	9311      	str	r3, [sp, #68]	; 0x44
 8019c6c:	9b0e      	ldr	r3, [sp, #56]	; 0x38
 8019c6e:	fb92 f3f3 	sdiv	r3, r2, r3
 8019c72:	9a03      	ldr	r2, [sp, #12]
 8019c74:	9312      	str	r3, [sp, #72]	; 0x48
 8019c76:	ed8d 6a10 	vstr	s12, [sp, #64]	; 0x40
 8019c7a:	9b0e      	ldr	r3, [sp, #56]	; 0x38
 8019c7c:	eeb0 3a67 	vmov.f32	s6, s15
 8019c80:	bf08      	it	eq
 8019c82:	4613      	moveq	r3, r2
 8019c84:	eef0 2a47 	vmov.f32	s5, s14
 8019c88:	e789      	b.n	8019b9e <_ZN8touchgfx8LCD16bpp56TextureMapper_L8_ARGB8888_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x32>
 8019c8a:	140f      	asrs	r7, r1, #16
 8019c8c:	d426      	bmi.n	8019cdc <_ZN8touchgfx8LCD16bpp56TextureMapper_L8_ARGB8888_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x170>
 8019c8e:	f8de 5008 	ldr.w	r5, [lr, #8]
 8019c92:	42bd      	cmp	r5, r7
 8019c94:	dd22      	ble.n	8019cdc <_ZN8touchgfx8LCD16bpp56TextureMapper_L8_ARGB8888_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x170>
 8019c96:	ea5f 4c22 	movs.w	ip, r2, asr #16
 8019c9a:	d41f      	bmi.n	8019cdc <_ZN8touchgfx8LCD16bpp56TextureMapper_L8_ARGB8888_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x170>
 8019c9c:	f8de 000c 	ldr.w	r0, [lr, #12]
 8019ca0:	4560      	cmp	r0, ip
 8019ca2:	dd1b      	ble.n	8019cdc <_ZN8touchgfx8LCD16bpp56TextureMapper_L8_ARGB8888_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x170>
 8019ca4:	9800      	ldr	r0, [sp, #0]
 8019ca6:	b22d      	sxth	r5, r5
 8019ca8:	fb0c 0505 	mla	r5, ip, r5, r0
 8019cac:	5de8      	ldrb	r0, [r5, r7]
 8019cae:	9d01      	ldr	r5, [sp, #4]
 8019cb0:	f855 0020 	ldr.w	r0, [r5, r0, lsl #2]
 8019cb4:	0e07      	lsrs	r7, r0, #24
 8019cb6:	2fff      	cmp	r7, #255	; 0xff
 8019cb8:	d116      	bne.n	8019ce8 <_ZN8touchgfx8LCD16bpp56TextureMapper_L8_ARGB8888_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x17c>
 8019cba:	f06f 0501 	mvn.w	r5, #1
 8019cbe:	fb05 f706 	mul.w	r7, r5, r6
 8019cc2:	f2a5 75fe 	subw	r5, r5, #2046	; 0x7fe
 8019cc6:	ea05 2c10 	and.w	ip, r5, r0, lsr #8
 8019cca:	0945      	lsrs	r5, r0, #5
 8019ccc:	f405 65fc 	and.w	r5, r5, #2016	; 0x7e0
 8019cd0:	ea4c 0505 	orr.w	r5, ip, r5
 8019cd4:	f3c0 00c4 	ubfx	r0, r0, #3, #5
 8019cd8:	4305      	orrs	r5, r0
 8019cda:	53e5      	strh	r5, [r4, r7]
 8019cdc:	9811      	ldr	r0, [sp, #68]	; 0x44
 8019cde:	4401      	add	r1, r0
 8019ce0:	9812      	ldr	r0, [sp, #72]	; 0x48
 8019ce2:	3e01      	subs	r6, #1
 8019ce4:	4402      	add	r2, r0
 8019ce6:	e78e      	b.n	8019c06 <_ZN8touchgfx8LCD16bpp56TextureMapper_L8_ARGB8888_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x9a>
 8019ce8:	b2fd      	uxtb	r5, r7
 8019cea:	2f00      	cmp	r7, #0
 8019cec:	d0f6      	beq.n	8019cdc <_ZN8touchgfx8LCD16bpp56TextureMapper_L8_ARGB8888_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x170>
 8019cee:	f06f 0701 	mvn.w	r7, #1
 8019cf2:	4377      	muls	r7, r6
 8019cf4:	fa1f f985 	uxth.w	r9, r5
 8019cf8:	f834 8007 	ldrh.w	r8, [r4, r7]
 8019cfc:	9702      	str	r7, [sp, #8]
 8019cfe:	ea4f 2c28 	mov.w	ip, r8, asr #8
 8019d02:	f3c0 4707 	ubfx	r7, r0, #16, #8
 8019d06:	43ed      	mvns	r5, r5
 8019d08:	b2ed      	uxtb	r5, r5
 8019d0a:	fb17 f709 	smulbb	r7, r7, r9
 8019d0e:	f00c 0cf8 	and.w	ip, ip, #248	; 0xf8
 8019d12:	fb0c 7c05 	mla	ip, ip, r5, r7
 8019d16:	f3c0 2a07 	ubfx	sl, r0, #8, #8
 8019d1a:	ea4f 07e8 	mov.w	r7, r8, asr #3
 8019d1e:	b2c0      	uxtb	r0, r0
 8019d20:	ea4f 08c8 	mov.w	r8, r8, lsl #3
 8019d24:	fa5f f888 	uxtb.w	r8, r8
 8019d28:	fb10 f009 	smulbb	r0, r0, r9
 8019d2c:	fb08 0005 	mla	r0, r8, r5, r0
 8019d30:	b280      	uxth	r0, r0
 8019d32:	fa1f fc8c 	uxth.w	ip, ip
 8019d36:	fb1a fa09 	smulbb	sl, sl, r9
 8019d3a:	f007 07fc 	and.w	r7, r7, #252	; 0xfc
 8019d3e:	fb07 a705 	mla	r7, r7, r5, sl
 8019d42:	f100 0a01 	add.w	sl, r0, #1
 8019d46:	f10c 0501 	add.w	r5, ip, #1
 8019d4a:	eb0a 2a10 	add.w	sl, sl, r0, lsr #8
 8019d4e:	eb05 2c1c 	add.w	ip, r5, ip, lsr #8
 8019d52:	b2bf      	uxth	r7, r7
 8019d54:	f3ca 2ac4 	ubfx	sl, sl, #11, #5
 8019d58:	f40c 4c78 	and.w	ip, ip, #63488	; 0xf800
 8019d5c:	ea4a 0c0c 	orr.w	ip, sl, ip
 8019d60:	f107 0a01 	add.w	sl, r7, #1
 8019d64:	eb0a 2a17 	add.w	sl, sl, r7, lsr #8
 8019d68:	ea4f 1a5a 	mov.w	sl, sl, lsr #5
 8019d6c:	f40a 6afc 	and.w	sl, sl, #2016	; 0x7e0
 8019d70:	9802      	ldr	r0, [sp, #8]
 8019d72:	ea4c 0c0a 	orr.w	ip, ip, sl
 8019d76:	f824 c000 	strh.w	ip, [r4, r0]
 8019d7a:	e7af      	b.n	8019cdc <_ZN8touchgfx8LCD16bpp56TextureMapper_L8_ARGB8888_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x170>
 8019d7c:	f04f 0800 	mov.w	r8, #0
 8019d80:	eba3 0008 	sub.w	r0, r3, r8
 8019d84:	2800      	cmp	r0, #0
 8019d86:	f77f af41 	ble.w	8019c0c <_ZN8touchgfx8LCD16bpp56TextureMapper_L8_ARGB8888_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0xa0>
 8019d8a:	f9be 6008 	ldrsh.w	r6, [lr, #8]
 8019d8e:	9f00      	ldr	r7, [sp, #0]
 8019d90:	1410      	asrs	r0, r2, #16
 8019d92:	140d      	asrs	r5, r1, #16
 8019d94:	fb06 7000 	mla	r0, r6, r0, r7
 8019d98:	5d40      	ldrb	r0, [r0, r5]
 8019d9a:	9d01      	ldr	r5, [sp, #4]
 8019d9c:	f855 5020 	ldr.w	r5, [r5, r0, lsl #2]
 8019da0:	0e2e      	lsrs	r6, r5, #24
 8019da2:	2eff      	cmp	r6, #255	; 0xff
 8019da4:	d112      	bne.n	8019dcc <_ZN8touchgfx8LCD16bpp56TextureMapper_L8_ARGB8888_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x260>
 8019da6:	482c      	ldr	r0, [pc, #176]	; (8019e58 <_ZN8touchgfx8LCD16bpp56TextureMapper_L8_ARGB8888_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x2ec>)
 8019da8:	ea00 2615 	and.w	r6, r0, r5, lsr #8
 8019dac:	0968      	lsrs	r0, r5, #5
 8019dae:	f400 60fc 	and.w	r0, r0, #2016	; 0x7e0
 8019db2:	4330      	orrs	r0, r6
 8019db4:	f3c5 05c4 	ubfx	r5, r5, #3, #5
 8019db8:	4328      	orrs	r0, r5
 8019dba:	f824 0018 	strh.w	r0, [r4, r8, lsl #1]
 8019dbe:	9811      	ldr	r0, [sp, #68]	; 0x44
 8019dc0:	4401      	add	r1, r0
 8019dc2:	9812      	ldr	r0, [sp, #72]	; 0x48
 8019dc4:	f108 0801 	add.w	r8, r8, #1
 8019dc8:	4402      	add	r2, r0
 8019dca:	e7d9      	b.n	8019d80 <_ZN8touchgfx8LCD16bpp56TextureMapper_L8_ARGB8888_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x214>
 8019dcc:	b2f0      	uxtb	r0, r6
 8019dce:	2e00      	cmp	r6, #0
 8019dd0:	d0f5      	beq.n	8019dbe <_ZN8touchgfx8LCD16bpp56TextureMapper_L8_ARGB8888_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x252>
 8019dd2:	f834 c018 	ldrh.w	ip, [r4, r8, lsl #1]
 8019dd6:	fa1f f980 	uxth.w	r9, r0
 8019dda:	ea4f 272c 	mov.w	r7, ip, asr #8
 8019dde:	f3c5 4607 	ubfx	r6, r5, #16, #8
 8019de2:	43c0      	mvns	r0, r0
 8019de4:	b2c0      	uxtb	r0, r0
 8019de6:	fb16 f609 	smulbb	r6, r6, r9
 8019dea:	f007 07f8 	and.w	r7, r7, #248	; 0xf8
 8019dee:	fb07 6700 	mla	r7, r7, r0, r6
 8019df2:	f3c5 2a07 	ubfx	sl, r5, #8, #8
 8019df6:	ea4f 06ec 	mov.w	r6, ip, asr #3
 8019dfa:	b2ed      	uxtb	r5, r5
 8019dfc:	ea4f 0ccc 	mov.w	ip, ip, lsl #3
 8019e00:	fa5f fc8c 	uxtb.w	ip, ip
 8019e04:	fb15 f509 	smulbb	r5, r5, r9
 8019e08:	fb0c 5500 	mla	r5, ip, r0, r5
 8019e0c:	b2bf      	uxth	r7, r7
 8019e0e:	fb1a fa09 	smulbb	sl, sl, r9
 8019e12:	b2ad      	uxth	r5, r5
 8019e14:	f006 06fc 	and.w	r6, r6, #252	; 0xfc
 8019e18:	fb06 a600 	mla	r6, r6, r0, sl
 8019e1c:	1c78      	adds	r0, r7, #1
 8019e1e:	f105 0a01 	add.w	sl, r5, #1
 8019e22:	eb00 2717 	add.w	r7, r0, r7, lsr #8
 8019e26:	eb0a 2a15 	add.w	sl, sl, r5, lsr #8
 8019e2a:	b2b6      	uxth	r6, r6
 8019e2c:	f3ca 2ac4 	ubfx	sl, sl, #11, #5
 8019e30:	f407 4778 	and.w	r7, r7, #63488	; 0xf800
 8019e34:	ea4a 0707 	orr.w	r7, sl, r7
 8019e38:	f106 0a01 	add.w	sl, r6, #1
 8019e3c:	eb0a 2a16 	add.w	sl, sl, r6, lsr #8
 8019e40:	ea4f 1a5a 	mov.w	sl, sl, lsr #5
 8019e44:	f40a 6afc 	and.w	sl, sl, #2016	; 0x7e0
 8019e48:	ea47 070a 	orr.w	r7, r7, sl
 8019e4c:	f824 7018 	strh.w	r7, [r4, r8, lsl #1]
 8019e50:	e7b5      	b.n	8019dbe <_ZN8touchgfx8LCD16bpp56TextureMapper_L8_ARGB8888_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x252>
 8019e52:	b005      	add	sp, #20
 8019e54:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
 8019e58:	fffff800 	.word	0xfffff800

08019e5c <_ZN8touchgfx8LCD16bpp49TextureMapper_RGB565_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff>:
 8019e5c:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 8019e60:	b087      	sub	sp, #28
 8019e62:	468b      	mov	fp, r1
 8019e64:	9c15      	ldr	r4, [sp, #84]	; 0x54
 8019e66:	9204      	str	r2, [sp, #16]
 8019e68:	f89d 2064 	ldrb.w	r2, [sp, #100]	; 0x64
 8019e6c:	9205      	str	r2, [sp, #20]
 8019e6e:	e9dd 2016 	ldrd	r2, r0, [sp, #88]	; 0x58
 8019e72:	6861      	ldr	r1, [r4, #4]
 8019e74:	f8dd e060 	ldr.w	lr, [sp, #96]	; 0x60
 8019e78:	fb01 2000 	mla	r0, r1, r0, r2
 8019e7c:	6822      	ldr	r2, [r4, #0]
 8019e7e:	eb02 0040 	add.w	r0, r2, r0, lsl #1
 8019e82:	f8de 2000 	ldr.w	r2, [lr]
 8019e86:	9201      	str	r2, [sp, #4]
 8019e88:	f8de 2004 	ldr.w	r2, [lr, #4]
 8019e8c:	9202      	str	r2, [sp, #8]
 8019e8e:	eef7 6a00 	vmov.f32	s13, #112	; 0x3f800000  1.0
 8019e92:	f1bb 0f00 	cmp.w	fp, #0
 8019e96:	dc03      	bgt.n	8019ea0 <_ZN8touchgfx8LCD16bpp49TextureMapper_RGB565_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x44>
 8019e98:	9a04      	ldr	r2, [sp, #16]
 8019e9a:	2a00      	cmp	r2, #0
 8019e9c:	f340 8142 	ble.w	801a124 <_ZN8touchgfx8LCD16bpp49TextureMapper_RGB565_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x2c8>
 8019ea0:	9a11      	ldr	r2, [sp, #68]	; 0x44
 8019ea2:	f9be 7008 	ldrsh.w	r7, [lr, #8]
 8019ea6:	f9be 600c 	ldrsh.w	r6, [lr, #12]
 8019eaa:	f502 4100 	add.w	r1, r2, #32768	; 0x8000
 8019eae:	9a12      	ldr	r2, [sp, #72]	; 0x48
 8019eb0:	f502 4200 	add.w	r2, r2, #32768	; 0x8000
 8019eb4:	2b00      	cmp	r3, #0
 8019eb6:	dd0e      	ble.n	8019ed6 <_ZN8touchgfx8LCD16bpp49TextureMapper_RGB565_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x7a>
 8019eb8:	140c      	asrs	r4, r1, #16
 8019eba:	d405      	bmi.n	8019ec8 <_ZN8touchgfx8LCD16bpp49TextureMapper_RGB565_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x6c>
 8019ebc:	42bc      	cmp	r4, r7
 8019ebe:	da03      	bge.n	8019ec8 <_ZN8touchgfx8LCD16bpp49TextureMapper_RGB565_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x6c>
 8019ec0:	1414      	asrs	r4, r2, #16
 8019ec2:	d401      	bmi.n	8019ec8 <_ZN8touchgfx8LCD16bpp49TextureMapper_RGB565_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x6c>
 8019ec4:	42b4      	cmp	r4, r6
 8019ec6:	db07      	blt.n	8019ed8 <_ZN8touchgfx8LCD16bpp49TextureMapper_RGB565_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x7c>
 8019ec8:	9c13      	ldr	r4, [sp, #76]	; 0x4c
 8019eca:	4421      	add	r1, r4
 8019ecc:	9c14      	ldr	r4, [sp, #80]	; 0x50
 8019ece:	3b01      	subs	r3, #1
 8019ed0:	4422      	add	r2, r4
 8019ed2:	3002      	adds	r0, #2
 8019ed4:	e7ee      	b.n	8019eb4 <_ZN8touchgfx8LCD16bpp49TextureMapper_RGB565_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x58>
 8019ed6:	d019      	beq.n	8019f0c <_ZN8touchgfx8LCD16bpp49TextureMapper_RGB565_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0xb0>
 8019ed8:	9d13      	ldr	r5, [sp, #76]	; 0x4c
 8019eda:	1e5c      	subs	r4, r3, #1
 8019edc:	fb05 1504 	mla	r5, r5, r4, r1
 8019ee0:	142d      	asrs	r5, r5, #16
 8019ee2:	d409      	bmi.n	8019ef8 <_ZN8touchgfx8LCD16bpp49TextureMapper_RGB565_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x9c>
 8019ee4:	42bd      	cmp	r5, r7
 8019ee6:	da07      	bge.n	8019ef8 <_ZN8touchgfx8LCD16bpp49TextureMapper_RGB565_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x9c>
 8019ee8:	9d14      	ldr	r5, [sp, #80]	; 0x50
 8019eea:	fb05 2404 	mla	r4, r5, r4, r2
 8019eee:	1424      	asrs	r4, r4, #16
 8019ef0:	d402      	bmi.n	8019ef8 <_ZN8touchgfx8LCD16bpp49TextureMapper_RGB565_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x9c>
 8019ef2:	42b4      	cmp	r4, r6
 8019ef4:	f2c0 80b1 	blt.w	801a05a <_ZN8touchgfx8LCD16bpp49TextureMapper_RGB565_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x1fe>
 8019ef8:	f04f 0800 	mov.w	r8, #0
 8019efc:	eb03 0408 	add.w	r4, r3, r8
 8019f00:	2c00      	cmp	r4, #0
 8019f02:	dc3e      	bgt.n	8019f82 <_ZN8touchgfx8LCD16bpp49TextureMapper_RGB565_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x126>
 8019f04:	ea23 73e3 	bic.w	r3, r3, r3, asr #31
 8019f08:	eb00 0043 	add.w	r0, r0, r3, lsl #1
 8019f0c:	f1bb 0f00 	cmp.w	fp, #0
 8019f10:	f340 8108 	ble.w	801a124 <_ZN8touchgfx8LCD16bpp49TextureMapper_RGB565_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x2c8>
 8019f14:	ee30 0a04 	vadd.f32	s0, s0, s8
 8019f18:	ee70 0aa4 	vadd.f32	s1, s1, s9
 8019f1c:	eec6 7a80 	vdiv.f32	s15, s13, s0
 8019f20:	9b10      	ldr	r3, [sp, #64]	; 0x40
 8019f22:	f1bb 0b01 	subs.w	fp, fp, #1
 8019f26:	ee31 1a05 	vadd.f32	s2, s2, s10
 8019f2a:	ee20 7aa7 	vmul.f32	s14, s1, s15
 8019f2e:	eeb0 6a62 	vmov.f32	s12, s5
 8019f32:	ee61 7a27 	vmul.f32	s15, s2, s15
 8019f36:	eebe 6ac8 	vcvt.s32.f32	s12, s12, #16
 8019f3a:	ee77 2a62 	vsub.f32	s5, s14, s5
 8019f3e:	ed8d 6a11 	vstr	s12, [sp, #68]	; 0x44
 8019f42:	eefe 2ac8 	vcvt.s32.f32	s5, s5, #16
 8019f46:	eeb0 6a43 	vmov.f32	s12, s6
 8019f4a:	ee37 3ac3 	vsub.f32	s6, s15, s6
 8019f4e:	ee12 2a90 	vmov	r2, s5
 8019f52:	eebe 3ac8 	vcvt.s32.f32	s6, s6, #16
 8019f56:	fb92 f3f3 	sdiv	r3, r2, r3
 8019f5a:	ee13 2a10 	vmov	r2, s6
 8019f5e:	eebe 6ac8 	vcvt.s32.f32	s12, s12, #16
 8019f62:	9313      	str	r3, [sp, #76]	; 0x4c
 8019f64:	9b10      	ldr	r3, [sp, #64]	; 0x40
 8019f66:	fb92 f3f3 	sdiv	r3, r2, r3
 8019f6a:	9a04      	ldr	r2, [sp, #16]
 8019f6c:	9314      	str	r3, [sp, #80]	; 0x50
 8019f6e:	ed8d 6a12 	vstr	s12, [sp, #72]	; 0x48
 8019f72:	9b10      	ldr	r3, [sp, #64]	; 0x40
 8019f74:	eeb0 3a67 	vmov.f32	s6, s15
 8019f78:	bf08      	it	eq
 8019f7a:	4613      	moveq	r3, r2
 8019f7c:	eef0 2a47 	vmov.f32	s5, s14
 8019f80:	e787      	b.n	8019e92 <_ZN8touchgfx8LCD16bpp49TextureMapper_RGB565_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x36>
 8019f82:	140e      	asrs	r6, r1, #16
 8019f84:	d462      	bmi.n	801a04c <_ZN8touchgfx8LCD16bpp49TextureMapper_RGB565_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x1f0>
 8019f86:	f8de 5008 	ldr.w	r5, [lr, #8]
 8019f8a:	42b5      	cmp	r5, r6
 8019f8c:	dd5e      	ble.n	801a04c <_ZN8touchgfx8LCD16bpp49TextureMapper_RGB565_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x1f0>
 8019f8e:	1417      	asrs	r7, r2, #16
 8019f90:	d45c      	bmi.n	801a04c <_ZN8touchgfx8LCD16bpp49TextureMapper_RGB565_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x1f0>
 8019f92:	f8de 400c 	ldr.w	r4, [lr, #12]
 8019f96:	42bc      	cmp	r4, r7
 8019f98:	dd58      	ble.n	801a04c <_ZN8touchgfx8LCD16bpp49TextureMapper_RGB565_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x1f0>
 8019f9a:	b22d      	sxth	r5, r5
 8019f9c:	fb07 6505 	mla	r5, r7, r5, r6
 8019fa0:	9c02      	ldr	r4, [sp, #8]
 8019fa2:	5d66      	ldrb	r6, [r4, r5]
 8019fa4:	2e00      	cmp	r6, #0
 8019fa6:	d051      	beq.n	801a04c <_ZN8touchgfx8LCD16bpp49TextureMapper_RGB565_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x1f0>
 8019fa8:	9c01      	ldr	r4, [sp, #4]
 8019faa:	f834 9015 	ldrh.w	r9, [r4, r5, lsl #1]
 8019fae:	f06f 0401 	mvn.w	r4, #1
 8019fb2:	fb04 f408 	mul.w	r4, r4, r8
 8019fb6:	9403      	str	r4, [sp, #12]
 8019fb8:	5b05      	ldrh	r5, [r0, r4]
 8019fba:	9c05      	ldr	r4, [sp, #20]
 8019fbc:	4366      	muls	r6, r4
 8019fbe:	1c74      	adds	r4, r6, #1
 8019fc0:	eb04 2416 	add.w	r4, r4, r6, lsr #8
 8019fc4:	1224      	asrs	r4, r4, #8
 8019fc6:	b2a7      	uxth	r7, r4
 8019fc8:	122e      	asrs	r6, r5, #8
 8019fca:	43e4      	mvns	r4, r4
 8019fcc:	b2e4      	uxtb	r4, r4
 8019fce:	ea4f 2c29 	mov.w	ip, r9, asr #8
 8019fd2:	f006 06f8 	and.w	r6, r6, #248	; 0xf8
 8019fd6:	fb16 f604 	smulbb	r6, r6, r4
 8019fda:	ea4f 0ae5 	mov.w	sl, r5, asr #3
 8019fde:	f00c 0cf8 	and.w	ip, ip, #248	; 0xf8
 8019fe2:	00ed      	lsls	r5, r5, #3
 8019fe4:	fb0c 6c07 	mla	ip, ip, r7, r6
 8019fe8:	b2ed      	uxtb	r5, r5
 8019fea:	ea4f 06e9 	mov.w	r6, r9, asr #3
 8019fee:	ea4f 09c9 	mov.w	r9, r9, lsl #3
 8019ff2:	fb15 f504 	smulbb	r5, r5, r4
 8019ff6:	fa5f f989 	uxtb.w	r9, r9
 8019ffa:	f00a 0afc 	and.w	sl, sl, #252	; 0xfc
 8019ffe:	fb09 5507 	mla	r5, r9, r7, r5
 801a002:	fb1a fa04 	smulbb	sl, sl, r4
 801a006:	fa1f fc8c 	uxth.w	ip, ip
 801a00a:	b2ad      	uxth	r5, r5
 801a00c:	f006 06fc 	and.w	r6, r6, #252	; 0xfc
 801a010:	fb06 a607 	mla	r6, r6, r7, sl
 801a014:	f10c 0401 	add.w	r4, ip, #1
 801a018:	f105 0a01 	add.w	sl, r5, #1
 801a01c:	eb04 2c1c 	add.w	ip, r4, ip, lsr #8
 801a020:	eb0a 2a15 	add.w	sl, sl, r5, lsr #8
 801a024:	b2b6      	uxth	r6, r6
 801a026:	f3ca 2ac4 	ubfx	sl, sl, #11, #5
 801a02a:	f40c 4c78 	and.w	ip, ip, #63488	; 0xf800
 801a02e:	ea4a 0c0c 	orr.w	ip, sl, ip
 801a032:	f106 0a01 	add.w	sl, r6, #1
 801a036:	eb0a 2a16 	add.w	sl, sl, r6, lsr #8
 801a03a:	ea4f 1a5a 	mov.w	sl, sl, lsr #5
 801a03e:	f40a 6afc 	and.w	sl, sl, #2016	; 0x7e0
 801a042:	9c03      	ldr	r4, [sp, #12]
 801a044:	ea4c 0c0a 	orr.w	ip, ip, sl
 801a048:	f820 c004 	strh.w	ip, [r0, r4]
 801a04c:	9c13      	ldr	r4, [sp, #76]	; 0x4c
 801a04e:	4421      	add	r1, r4
 801a050:	9c14      	ldr	r4, [sp, #80]	; 0x50
 801a052:	f108 38ff 	add.w	r8, r8, #4294967295
 801a056:	4422      	add	r2, r4
 801a058:	e750      	b.n	8019efc <_ZN8touchgfx8LCD16bpp49TextureMapper_RGB565_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0xa0>
 801a05a:	f04f 0900 	mov.w	r9, #0
 801a05e:	eba3 0409 	sub.w	r4, r3, r9
 801a062:	2c00      	cmp	r4, #0
 801a064:	f77f af4e 	ble.w	8019f04 <_ZN8touchgfx8LCD16bpp49TextureMapper_RGB565_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0xa8>
 801a068:	f9be 6008 	ldrsh.w	r6, [lr, #8]
 801a06c:	140d      	asrs	r5, r1, #16
 801a06e:	1414      	asrs	r4, r2, #16
 801a070:	fb06 5404 	mla	r4, r6, r4, r5
 801a074:	9d02      	ldr	r5, [sp, #8]
 801a076:	5d2e      	ldrb	r6, [r5, r4]
 801a078:	2e00      	cmp	r6, #0
 801a07a:	d04c      	beq.n	801a116 <_ZN8touchgfx8LCD16bpp49TextureMapper_RGB565_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x2ba>
 801a07c:	9d01      	ldr	r5, [sp, #4]
 801a07e:	f835 8014 	ldrh.w	r8, [r5, r4, lsl #1]
 801a082:	9c05      	ldr	r4, [sp, #20]
 801a084:	f830 5019 	ldrh.w	r5, [r0, r9, lsl #1]
 801a088:	4366      	muls	r6, r4
 801a08a:	1c74      	adds	r4, r6, #1
 801a08c:	eb04 2416 	add.w	r4, r4, r6, lsr #8
 801a090:	1224      	asrs	r4, r4, #8
 801a092:	b2a7      	uxth	r7, r4
 801a094:	122e      	asrs	r6, r5, #8
 801a096:	43e4      	mvns	r4, r4
 801a098:	b2e4      	uxtb	r4, r4
 801a09a:	ea4f 2c28 	mov.w	ip, r8, asr #8
 801a09e:	f006 06f8 	and.w	r6, r6, #248	; 0xf8
 801a0a2:	fb16 f604 	smulbb	r6, r6, r4
 801a0a6:	ea4f 0ae5 	mov.w	sl, r5, asr #3
 801a0aa:	f00c 0cf8 	and.w	ip, ip, #248	; 0xf8
 801a0ae:	00ed      	lsls	r5, r5, #3
 801a0b0:	fb0c 6c07 	mla	ip, ip, r7, r6
 801a0b4:	b2ed      	uxtb	r5, r5
 801a0b6:	ea4f 06e8 	mov.w	r6, r8, asr #3
 801a0ba:	ea4f 08c8 	mov.w	r8, r8, lsl #3
 801a0be:	fb15 f504 	smulbb	r5, r5, r4
 801a0c2:	fa5f f888 	uxtb.w	r8, r8
 801a0c6:	f00a 0afc 	and.w	sl, sl, #252	; 0xfc
 801a0ca:	fb08 5507 	mla	r5, r8, r7, r5
 801a0ce:	fb1a fa04 	smulbb	sl, sl, r4
 801a0d2:	fa1f fc8c 	uxth.w	ip, ip
 801a0d6:	b2ad      	uxth	r5, r5
 801a0d8:	f006 06fc 	and.w	r6, r6, #252	; 0xfc
 801a0dc:	fb06 a607 	mla	r6, r6, r7, sl
 801a0e0:	f10c 0401 	add.w	r4, ip, #1
 801a0e4:	f105 0a01 	add.w	sl, r5, #1
 801a0e8:	eb04 2c1c 	add.w	ip, r4, ip, lsr #8
 801a0ec:	eb0a 2a15 	add.w	sl, sl, r5, lsr #8
 801a0f0:	b2b6      	uxth	r6, r6
 801a0f2:	f3ca 2ac4 	ubfx	sl, sl, #11, #5
 801a0f6:	f40c 4c78 	and.w	ip, ip, #63488	; 0xf800
 801a0fa:	ea4a 0c0c 	orr.w	ip, sl, ip
 801a0fe:	f106 0a01 	add.w	sl, r6, #1
 801a102:	eb0a 2a16 	add.w	sl, sl, r6, lsr #8
 801a106:	ea4f 1a5a 	mov.w	sl, sl, lsr #5
 801a10a:	f40a 6afc 	and.w	sl, sl, #2016	; 0x7e0
 801a10e:	ea4c 0c0a 	orr.w	ip, ip, sl
 801a112:	f820 c019 	strh.w	ip, [r0, r9, lsl #1]
 801a116:	9c13      	ldr	r4, [sp, #76]	; 0x4c
 801a118:	4421      	add	r1, r4
 801a11a:	9c14      	ldr	r4, [sp, #80]	; 0x50
 801a11c:	f109 0901 	add.w	r9, r9, #1
 801a120:	4422      	add	r2, r4
 801a122:	e79c      	b.n	801a05e <_ZN8touchgfx8LCD16bpp49TextureMapper_RGB565_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x202>
 801a124:	b007      	add	sp, #28
 801a126:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}

0801a12a <_ZN8touchgfx8LCD16bpp51TextureMapper_RGB565_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff>:
 801a12a:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 801a12e:	b085      	sub	sp, #20
 801a130:	468b      	mov	fp, r1
 801a132:	9c13      	ldr	r4, [sp, #76]	; 0x4c
 801a134:	9203      	str	r2, [sp, #12]
 801a136:	e9dd 2014 	ldrd	r2, r0, [sp, #80]	; 0x50
 801a13a:	6861      	ldr	r1, [r4, #4]
 801a13c:	f8dd 8058 	ldr.w	r8, [sp, #88]	; 0x58
 801a140:	fb01 2000 	mla	r0, r1, r0, r2
 801a144:	6822      	ldr	r2, [r4, #0]
 801a146:	eb02 0040 	add.w	r0, r2, r0, lsl #1
 801a14a:	f8d8 2000 	ldr.w	r2, [r8]
 801a14e:	9200      	str	r2, [sp, #0]
 801a150:	f8d8 2004 	ldr.w	r2, [r8, #4]
 801a154:	9201      	str	r2, [sp, #4]
 801a156:	eef7 6a00 	vmov.f32	s13, #112	; 0x3f800000  1.0
 801a15a:	f1bb 0f00 	cmp.w	fp, #0
 801a15e:	dc03      	bgt.n	801a168 <_ZN8touchgfx8LCD16bpp51TextureMapper_RGB565_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x3e>
 801a160:	9a03      	ldr	r2, [sp, #12]
 801a162:	2a00      	cmp	r2, #0
 801a164:	f340 8146 	ble.w	801a3f4 <_ZN8touchgfx8LCD16bpp51TextureMapper_RGB565_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x2ca>
 801a168:	9a0f      	ldr	r2, [sp, #60]	; 0x3c
 801a16a:	f9b8 7008 	ldrsh.w	r7, [r8, #8]
 801a16e:	f9b8 600c 	ldrsh.w	r6, [r8, #12]
 801a172:	f502 4100 	add.w	r1, r2, #32768	; 0x8000
 801a176:	9a10      	ldr	r2, [sp, #64]	; 0x40
 801a178:	f502 4200 	add.w	r2, r2, #32768	; 0x8000
 801a17c:	2b00      	cmp	r3, #0
 801a17e:	dd0e      	ble.n	801a19e <_ZN8touchgfx8LCD16bpp51TextureMapper_RGB565_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x74>
 801a180:	140c      	asrs	r4, r1, #16
 801a182:	d405      	bmi.n	801a190 <_ZN8touchgfx8LCD16bpp51TextureMapper_RGB565_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x66>
 801a184:	42bc      	cmp	r4, r7
 801a186:	da03      	bge.n	801a190 <_ZN8touchgfx8LCD16bpp51TextureMapper_RGB565_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x66>
 801a188:	1414      	asrs	r4, r2, #16
 801a18a:	d401      	bmi.n	801a190 <_ZN8touchgfx8LCD16bpp51TextureMapper_RGB565_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x66>
 801a18c:	42b4      	cmp	r4, r6
 801a18e:	db07      	blt.n	801a1a0 <_ZN8touchgfx8LCD16bpp51TextureMapper_RGB565_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x76>
 801a190:	9c11      	ldr	r4, [sp, #68]	; 0x44
 801a192:	4421      	add	r1, r4
 801a194:	9c12      	ldr	r4, [sp, #72]	; 0x48
 801a196:	3b01      	subs	r3, #1
 801a198:	4422      	add	r2, r4
 801a19a:	3002      	adds	r0, #2
 801a19c:	e7ee      	b.n	801a17c <_ZN8touchgfx8LCD16bpp51TextureMapper_RGB565_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x52>
 801a19e:	d017      	beq.n	801a1d0 <_ZN8touchgfx8LCD16bpp51TextureMapper_RGB565_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0xa6>
 801a1a0:	9d11      	ldr	r5, [sp, #68]	; 0x44
 801a1a2:	1e5c      	subs	r4, r3, #1
 801a1a4:	fb05 1504 	mla	r5, r5, r4, r1
 801a1a8:	142d      	asrs	r5, r5, #16
 801a1aa:	d409      	bmi.n	801a1c0 <_ZN8touchgfx8LCD16bpp51TextureMapper_RGB565_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x96>
 801a1ac:	42bd      	cmp	r5, r7
 801a1ae:	da07      	bge.n	801a1c0 <_ZN8touchgfx8LCD16bpp51TextureMapper_RGB565_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x96>
 801a1b0:	9d12      	ldr	r5, [sp, #72]	; 0x48
 801a1b2:	fb05 2404 	mla	r4, r5, r4, r2
 801a1b6:	1424      	asrs	r4, r4, #16
 801a1b8:	d402      	bmi.n	801a1c0 <_ZN8touchgfx8LCD16bpp51TextureMapper_RGB565_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x96>
 801a1ba:	42b4      	cmp	r4, r6
 801a1bc:	f2c0 80b3 	blt.w	801a326 <_ZN8touchgfx8LCD16bpp51TextureMapper_RGB565_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x1fc>
 801a1c0:	2600      	movs	r6, #0
 801a1c2:	199c      	adds	r4, r3, r6
 801a1c4:	2c00      	cmp	r4, #0
 801a1c6:	dc3e      	bgt.n	801a246 <_ZN8touchgfx8LCD16bpp51TextureMapper_RGB565_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x11c>
 801a1c8:	ea23 73e3 	bic.w	r3, r3, r3, asr #31
 801a1cc:	eb00 0043 	add.w	r0, r0, r3, lsl #1
 801a1d0:	f1bb 0f00 	cmp.w	fp, #0
 801a1d4:	f340 810e 	ble.w	801a3f4 <_ZN8touchgfx8LCD16bpp51TextureMapper_RGB565_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x2ca>
 801a1d8:	ee30 0a04 	vadd.f32	s0, s0, s8
 801a1dc:	ee70 0aa4 	vadd.f32	s1, s1, s9
 801a1e0:	eec6 7a80 	vdiv.f32	s15, s13, s0
 801a1e4:	9b0e      	ldr	r3, [sp, #56]	; 0x38
 801a1e6:	f1bb 0b01 	subs.w	fp, fp, #1
 801a1ea:	ee31 1a05 	vadd.f32	s2, s2, s10
 801a1ee:	ee20 7aa7 	vmul.f32	s14, s1, s15
 801a1f2:	eeb0 6a62 	vmov.f32	s12, s5
 801a1f6:	ee61 7a27 	vmul.f32	s15, s2, s15
 801a1fa:	eebe 6ac8 	vcvt.s32.f32	s12, s12, #16
 801a1fe:	ee77 2a62 	vsub.f32	s5, s14, s5
 801a202:	ed8d 6a0f 	vstr	s12, [sp, #60]	; 0x3c
 801a206:	eefe 2ac8 	vcvt.s32.f32	s5, s5, #16
 801a20a:	eeb0 6a43 	vmov.f32	s12, s6
 801a20e:	ee37 3ac3 	vsub.f32	s6, s15, s6
 801a212:	ee12 2a90 	vmov	r2, s5
 801a216:	eebe 3ac8 	vcvt.s32.f32	s6, s6, #16
 801a21a:	fb92 f3f3 	sdiv	r3, r2, r3
 801a21e:	ee13 2a10 	vmov	r2, s6
 801a222:	eebe 6ac8 	vcvt.s32.f32	s12, s12, #16
 801a226:	9311      	str	r3, [sp, #68]	; 0x44
 801a228:	9b0e      	ldr	r3, [sp, #56]	; 0x38
 801a22a:	fb92 f3f3 	sdiv	r3, r2, r3
 801a22e:	9a03      	ldr	r2, [sp, #12]
 801a230:	9312      	str	r3, [sp, #72]	; 0x48
 801a232:	ed8d 6a10 	vstr	s12, [sp, #64]	; 0x40
 801a236:	9b0e      	ldr	r3, [sp, #56]	; 0x38
 801a238:	eeb0 3a67 	vmov.f32	s6, s15
 801a23c:	bf08      	it	eq
 801a23e:	4613      	moveq	r3, r2
 801a240:	eef0 2a47 	vmov.f32	s5, s14
 801a244:	e789      	b.n	801a15a <_ZN8touchgfx8LCD16bpp51TextureMapper_RGB565_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x30>
 801a246:	140f      	asrs	r7, r1, #16
 801a248:	d418      	bmi.n	801a27c <_ZN8touchgfx8LCD16bpp51TextureMapper_RGB565_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x152>
 801a24a:	f8d8 5008 	ldr.w	r5, [r8, #8]
 801a24e:	42bd      	cmp	r5, r7
 801a250:	dd14      	ble.n	801a27c <_ZN8touchgfx8LCD16bpp51TextureMapper_RGB565_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x152>
 801a252:	ea5f 4c22 	movs.w	ip, r2, asr #16
 801a256:	d411      	bmi.n	801a27c <_ZN8touchgfx8LCD16bpp51TextureMapper_RGB565_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x152>
 801a258:	f8d8 400c 	ldr.w	r4, [r8, #12]
 801a25c:	4564      	cmp	r4, ip
 801a25e:	dd0d      	ble.n	801a27c <_ZN8touchgfx8LCD16bpp51TextureMapper_RGB565_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x152>
 801a260:	b22d      	sxth	r5, r5
 801a262:	fb0c 7505 	mla	r5, ip, r5, r7
 801a266:	9c01      	ldr	r4, [sp, #4]
 801a268:	5d64      	ldrb	r4, [r4, r5]
 801a26a:	2cff      	cmp	r4, #255	; 0xff
 801a26c:	d10c      	bne.n	801a288 <_ZN8touchgfx8LCD16bpp51TextureMapper_RGB565_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x15e>
 801a26e:	9c00      	ldr	r4, [sp, #0]
 801a270:	f834 5015 	ldrh.w	r5, [r4, r5, lsl #1]
 801a274:	f06f 0401 	mvn.w	r4, #1
 801a278:	4374      	muls	r4, r6
 801a27a:	5305      	strh	r5, [r0, r4]
 801a27c:	9c11      	ldr	r4, [sp, #68]	; 0x44
 801a27e:	4421      	add	r1, r4
 801a280:	9c12      	ldr	r4, [sp, #72]	; 0x48
 801a282:	3e01      	subs	r6, #1
 801a284:	4422      	add	r2, r4
 801a286:	e79c      	b.n	801a1c2 <_ZN8touchgfx8LCD16bpp51TextureMapper_RGB565_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x98>
 801a288:	2c00      	cmp	r4, #0
 801a28a:	d0f7      	beq.n	801a27c <_ZN8touchgfx8LCD16bpp51TextureMapper_RGB565_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x152>
 801a28c:	9f00      	ldr	r7, [sp, #0]
 801a28e:	f837 9015 	ldrh.w	r9, [r7, r5, lsl #1]
 801a292:	f06f 0501 	mvn.w	r5, #1
 801a296:	4375      	muls	r5, r6
 801a298:	9502      	str	r5, [sp, #8]
 801a29a:	5b45      	ldrh	r5, [r0, r5]
 801a29c:	fa1f fc84 	uxth.w	ip, r4
 801a2a0:	122f      	asrs	r7, r5, #8
 801a2a2:	43e4      	mvns	r4, r4
 801a2a4:	b2e4      	uxtb	r4, r4
 801a2a6:	ea4f 2e29 	mov.w	lr, r9, asr #8
 801a2aa:	f007 07f8 	and.w	r7, r7, #248	; 0xf8
 801a2ae:	fb17 f704 	smulbb	r7, r7, r4
 801a2b2:	ea4f 0ae5 	mov.w	sl, r5, asr #3
 801a2b6:	f00e 0ef8 	and.w	lr, lr, #248	; 0xf8
 801a2ba:	00ed      	lsls	r5, r5, #3
 801a2bc:	fb0e 7e0c 	mla	lr, lr, ip, r7
 801a2c0:	b2ed      	uxtb	r5, r5
 801a2c2:	ea4f 07e9 	mov.w	r7, r9, asr #3
 801a2c6:	ea4f 09c9 	mov.w	r9, r9, lsl #3
 801a2ca:	fb15 f504 	smulbb	r5, r5, r4
 801a2ce:	fa5f f989 	uxtb.w	r9, r9
 801a2d2:	f00a 0afc 	and.w	sl, sl, #252	; 0xfc
 801a2d6:	fb09 550c 	mla	r5, r9, ip, r5
 801a2da:	fb1a fa04 	smulbb	sl, sl, r4
 801a2de:	fa1f fe8e 	uxth.w	lr, lr
 801a2e2:	b2ad      	uxth	r5, r5
 801a2e4:	f007 07fc 	and.w	r7, r7, #252	; 0xfc
 801a2e8:	fb07 a70c 	mla	r7, r7, ip, sl
 801a2ec:	f10e 0401 	add.w	r4, lr, #1
 801a2f0:	f105 0a01 	add.w	sl, r5, #1
 801a2f4:	eb04 2e1e 	add.w	lr, r4, lr, lsr #8
 801a2f8:	eb0a 2a15 	add.w	sl, sl, r5, lsr #8
 801a2fc:	b2bf      	uxth	r7, r7
 801a2fe:	f3ca 2ac4 	ubfx	sl, sl, #11, #5
 801a302:	f40e 4e78 	and.w	lr, lr, #63488	; 0xf800
 801a306:	ea4a 0e0e 	orr.w	lr, sl, lr
 801a30a:	f107 0a01 	add.w	sl, r7, #1
 801a30e:	eb0a 2a17 	add.w	sl, sl, r7, lsr #8
 801a312:	ea4f 1a5a 	mov.w	sl, sl, lsr #5
 801a316:	f40a 6afc 	and.w	sl, sl, #2016	; 0x7e0
 801a31a:	9c02      	ldr	r4, [sp, #8]
 801a31c:	ea4e 0e0a 	orr.w	lr, lr, sl
 801a320:	f820 e004 	strh.w	lr, [r0, r4]
 801a324:	e7aa      	b.n	801a27c <_ZN8touchgfx8LCD16bpp51TextureMapper_RGB565_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x152>
 801a326:	f04f 0900 	mov.w	r9, #0
 801a32a:	eba3 0409 	sub.w	r4, r3, r9
 801a32e:	2c00      	cmp	r4, #0
 801a330:	f77f af4a 	ble.w	801a1c8 <_ZN8touchgfx8LCD16bpp51TextureMapper_RGB565_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x9e>
 801a334:	f9b8 6008 	ldrsh.w	r6, [r8, #8]
 801a338:	1414      	asrs	r4, r2, #16
 801a33a:	140d      	asrs	r5, r1, #16
 801a33c:	fb06 5504 	mla	r5, r6, r4, r5
 801a340:	9c01      	ldr	r4, [sp, #4]
 801a342:	5d64      	ldrb	r4, [r4, r5]
 801a344:	2cff      	cmp	r4, #255	; 0xff
 801a346:	d10b      	bne.n	801a360 <_ZN8touchgfx8LCD16bpp51TextureMapper_RGB565_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x236>
 801a348:	9c00      	ldr	r4, [sp, #0]
 801a34a:	f834 4015 	ldrh.w	r4, [r4, r5, lsl #1]
 801a34e:	f820 4019 	strh.w	r4, [r0, r9, lsl #1]
 801a352:	9c11      	ldr	r4, [sp, #68]	; 0x44
 801a354:	4421      	add	r1, r4
 801a356:	9c12      	ldr	r4, [sp, #72]	; 0x48
 801a358:	f109 0901 	add.w	r9, r9, #1
 801a35c:	4422      	add	r2, r4
 801a35e:	e7e4      	b.n	801a32a <_ZN8touchgfx8LCD16bpp51TextureMapper_RGB565_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x200>
 801a360:	2c00      	cmp	r4, #0
 801a362:	d0f6      	beq.n	801a352 <_ZN8touchgfx8LCD16bpp51TextureMapper_RGB565_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x228>
 801a364:	9e00      	ldr	r6, [sp, #0]
 801a366:	f836 e015 	ldrh.w	lr, [r6, r5, lsl #1]
 801a36a:	f830 5019 	ldrh.w	r5, [r0, r9, lsl #1]
 801a36e:	b2a7      	uxth	r7, r4
 801a370:	122e      	asrs	r6, r5, #8
 801a372:	43e4      	mvns	r4, r4
 801a374:	b2e4      	uxtb	r4, r4
 801a376:	ea4f 2c2e 	mov.w	ip, lr, asr #8
 801a37a:	f006 06f8 	and.w	r6, r6, #248	; 0xf8
 801a37e:	fb16 f604 	smulbb	r6, r6, r4
 801a382:	ea4f 0ae5 	mov.w	sl, r5, asr #3
 801a386:	f00c 0cf8 	and.w	ip, ip, #248	; 0xf8
 801a38a:	00ed      	lsls	r5, r5, #3
 801a38c:	fb0c 6c07 	mla	ip, ip, r7, r6
 801a390:	b2ed      	uxtb	r5, r5
 801a392:	ea4f 06ee 	mov.w	r6, lr, asr #3
 801a396:	ea4f 0ece 	mov.w	lr, lr, lsl #3
 801a39a:	fb15 f504 	smulbb	r5, r5, r4
 801a39e:	fa5f fe8e 	uxtb.w	lr, lr
 801a3a2:	f00a 0afc 	and.w	sl, sl, #252	; 0xfc
 801a3a6:	fb0e 5507 	mla	r5, lr, r7, r5
 801a3aa:	fb1a fa04 	smulbb	sl, sl, r4
 801a3ae:	fa1f fc8c 	uxth.w	ip, ip
 801a3b2:	b2ad      	uxth	r5, r5
 801a3b4:	f006 06fc 	and.w	r6, r6, #252	; 0xfc
 801a3b8:	fb06 a607 	mla	r6, r6, r7, sl
 801a3bc:	f10c 0401 	add.w	r4, ip, #1
 801a3c0:	f105 0a01 	add.w	sl, r5, #1
 801a3c4:	eb04 2c1c 	add.w	ip, r4, ip, lsr #8
 801a3c8:	eb0a 2a15 	add.w	sl, sl, r5, lsr #8
 801a3cc:	b2b6      	uxth	r6, r6
 801a3ce:	f3ca 2ac4 	ubfx	sl, sl, #11, #5
 801a3d2:	f40c 4c78 	and.w	ip, ip, #63488	; 0xf800
 801a3d6:	ea4a 0c0c 	orr.w	ip, sl, ip
 801a3da:	f106 0a01 	add.w	sl, r6, #1
 801a3de:	eb0a 2a16 	add.w	sl, sl, r6, lsr #8
 801a3e2:	ea4f 1a5a 	mov.w	sl, sl, lsr #5
 801a3e6:	f40a 6afc 	and.w	sl, sl, #2016	; 0x7e0
 801a3ea:	ea4c 0c0a 	orr.w	ip, ip, sl
 801a3ee:	f820 c019 	strh.w	ip, [r0, r9, lsl #1]
 801a3f2:	e7ae      	b.n	801a352 <_ZN8touchgfx8LCD16bpp51TextureMapper_RGB565_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x228>
 801a3f4:	b005      	add	sp, #20
 801a3f6:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}

0801a3fa <_ZN8touchgfx8LCD16bpp46TextureMapper_RGB565_Opaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff>:
 801a3fa:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 801a3fe:	b085      	sub	sp, #20
 801a400:	9813      	ldr	r0, [sp, #76]	; 0x4c
 801a402:	9203      	str	r2, [sp, #12]
 801a404:	f89d 205c 	ldrb.w	r2, [sp, #92]	; 0x5c
 801a408:	9201      	str	r2, [sp, #4]
 801a40a:	e9dd 2414 	ldrd	r2, r4, [sp, #80]	; 0x50
 801a40e:	9100      	str	r1, [sp, #0]
 801a410:	6841      	ldr	r1, [r0, #4]
 801a412:	f8dd e058 	ldr.w	lr, [sp, #88]	; 0x58
 801a416:	fb01 2404 	mla	r4, r1, r4, r2
 801a41a:	6802      	ldr	r2, [r0, #0]
 801a41c:	eb02 0444 	add.w	r4, r2, r4, lsl #1
 801a420:	f8de 2000 	ldr.w	r2, [lr]
 801a424:	9202      	str	r2, [sp, #8]
 801a426:	9a01      	ldr	r2, [sp, #4]
 801a428:	43d6      	mvns	r6, r2
 801a42a:	b2f6      	uxtb	r6, r6
 801a42c:	9a00      	ldr	r2, [sp, #0]
 801a42e:	2a00      	cmp	r2, #0
 801a430:	dc03      	bgt.n	801a43a <_ZN8touchgfx8LCD16bpp46TextureMapper_RGB565_Opaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x40>
 801a432:	9a03      	ldr	r2, [sp, #12]
 801a434:	2a00      	cmp	r2, #0
 801a436:	f340 8124 	ble.w	801a682 <_ZN8touchgfx8LCD16bpp46TextureMapper_RGB565_Opaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x288>
 801a43a:	9a0f      	ldr	r2, [sp, #60]	; 0x3c
 801a43c:	f9be c008 	ldrsh.w	ip, [lr, #8]
 801a440:	f9be 700c 	ldrsh.w	r7, [lr, #12]
 801a444:	f502 4100 	add.w	r1, r2, #32768	; 0x8000
 801a448:	9a10      	ldr	r2, [sp, #64]	; 0x40
 801a44a:	f502 4200 	add.w	r2, r2, #32768	; 0x8000
 801a44e:	2b00      	cmp	r3, #0
 801a450:	dd0e      	ble.n	801a470 <_ZN8touchgfx8LCD16bpp46TextureMapper_RGB565_Opaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x76>
 801a452:	1408      	asrs	r0, r1, #16
 801a454:	d405      	bmi.n	801a462 <_ZN8touchgfx8LCD16bpp46TextureMapper_RGB565_Opaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x68>
 801a456:	4560      	cmp	r0, ip
 801a458:	da03      	bge.n	801a462 <_ZN8touchgfx8LCD16bpp46TextureMapper_RGB565_Opaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x68>
 801a45a:	1410      	asrs	r0, r2, #16
 801a45c:	d401      	bmi.n	801a462 <_ZN8touchgfx8LCD16bpp46TextureMapper_RGB565_Opaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x68>
 801a45e:	42b8      	cmp	r0, r7
 801a460:	db07      	blt.n	801a472 <_ZN8touchgfx8LCD16bpp46TextureMapper_RGB565_Opaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x78>
 801a462:	9811      	ldr	r0, [sp, #68]	; 0x44
 801a464:	4401      	add	r1, r0
 801a466:	9812      	ldr	r0, [sp, #72]	; 0x48
 801a468:	3b01      	subs	r3, #1
 801a46a:	4402      	add	r2, r0
 801a46c:	3402      	adds	r4, #2
 801a46e:	e7ee      	b.n	801a44e <_ZN8touchgfx8LCD16bpp46TextureMapper_RGB565_Opaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x54>
 801a470:	d06e      	beq.n	801a550 <_ZN8touchgfx8LCD16bpp46TextureMapper_RGB565_Opaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x156>
 801a472:	9d11      	ldr	r5, [sp, #68]	; 0x44
 801a474:	1e58      	subs	r0, r3, #1
 801a476:	fb05 1500 	mla	r5, r5, r0, r1
 801a47a:	142d      	asrs	r5, r5, #16
 801a47c:	d45c      	bmi.n	801a538 <_ZN8touchgfx8LCD16bpp46TextureMapper_RGB565_Opaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x13e>
 801a47e:	4565      	cmp	r5, ip
 801a480:	da5a      	bge.n	801a538 <_ZN8touchgfx8LCD16bpp46TextureMapper_RGB565_Opaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x13e>
 801a482:	9d12      	ldr	r5, [sp, #72]	; 0x48
 801a484:	fb05 2000 	mla	r0, r5, r0, r2
 801a488:	1400      	asrs	r0, r0, #16
 801a48a:	d455      	bmi.n	801a538 <_ZN8touchgfx8LCD16bpp46TextureMapper_RGB565_Opaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x13e>
 801a48c:	42b8      	cmp	r0, r7
 801a48e:	da53      	bge.n	801a538 <_ZN8touchgfx8LCD16bpp46TextureMapper_RGB565_Opaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x13e>
 801a490:	f8bd b004 	ldrh.w	fp, [sp, #4]
 801a494:	4699      	mov	r9, r3
 801a496:	46a2      	mov	sl, r4
 801a498:	f1b9 0f00 	cmp.w	r9, #0
 801a49c:	dd54      	ble.n	801a548 <_ZN8touchgfx8LCD16bpp46TextureMapper_RGB565_Opaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x14e>
 801a49e:	f9be 7008 	ldrsh.w	r7, [lr, #8]
 801a4a2:	140d      	asrs	r5, r1, #16
 801a4a4:	1410      	asrs	r0, r2, #16
 801a4a6:	fb07 5000 	mla	r0, r7, r0, r5
 801a4aa:	9d02      	ldr	r5, [sp, #8]
 801a4ac:	f835 0010 	ldrh.w	r0, [r5, r0, lsl #1]
 801a4b0:	f8ba 5000 	ldrh.w	r5, [sl]
 801a4b4:	122f      	asrs	r7, r5, #8
 801a4b6:	ea4f 2c20 	mov.w	ip, r0, asr #8
 801a4ba:	f007 07f8 	and.w	r7, r7, #248	; 0xf8
 801a4be:	fb17 f706 	smulbb	r7, r7, r6
 801a4c2:	ea4f 08e5 	mov.w	r8, r5, asr #3
 801a4c6:	f00c 0cf8 	and.w	ip, ip, #248	; 0xf8
 801a4ca:	00ed      	lsls	r5, r5, #3
 801a4cc:	fb0c 7c0b 	mla	ip, ip, fp, r7
 801a4d0:	f008 08fc 	and.w	r8, r8, #252	; 0xfc
 801a4d4:	10c7      	asrs	r7, r0, #3
 801a4d6:	b2ed      	uxtb	r5, r5
 801a4d8:	00c0      	lsls	r0, r0, #3
 801a4da:	fb18 f806 	smulbb	r8, r8, r6
 801a4de:	fb15 f506 	smulbb	r5, r5, r6
 801a4e2:	f007 07fc 	and.w	r7, r7, #252	; 0xfc
 801a4e6:	b2c0      	uxtb	r0, r0
 801a4e8:	fa1f fc8c 	uxth.w	ip, ip
 801a4ec:	fb07 870b 	mla	r7, r7, fp, r8
 801a4f0:	fb00 500b 	mla	r0, r0, fp, r5
 801a4f4:	b280      	uxth	r0, r0
 801a4f6:	b2bf      	uxth	r7, r7
 801a4f8:	f10c 0501 	add.w	r5, ip, #1
 801a4fc:	eb05 2c1c 	add.w	ip, r5, ip, lsr #8
 801a500:	f107 0801 	add.w	r8, r7, #1
 801a504:	1c45      	adds	r5, r0, #1
 801a506:	eb05 2510 	add.w	r5, r5, r0, lsr #8
 801a50a:	eb08 2817 	add.w	r8, r8, r7, lsr #8
 801a50e:	9811      	ldr	r0, [sp, #68]	; 0x44
 801a510:	f40c 4c78 	and.w	ip, ip, #63488	; 0xf800
 801a514:	f3c5 25c4 	ubfx	r5, r5, #11, #5
 801a518:	ea4f 1858 	mov.w	r8, r8, lsr #5
 801a51c:	ea45 0c0c 	orr.w	ip, r5, ip
 801a520:	f408 68fc 	and.w	r8, r8, #2016	; 0x7e0
 801a524:	4401      	add	r1, r0
 801a526:	9812      	ldr	r0, [sp, #72]	; 0x48
 801a528:	ea4c 0c08 	orr.w	ip, ip, r8
 801a52c:	f82a cb02 	strh.w	ip, [sl], #2
 801a530:	4402      	add	r2, r0
 801a532:	f109 39ff 	add.w	r9, r9, #4294967295
 801a536:	e7af      	b.n	801a498 <_ZN8touchgfx8LCD16bpp46TextureMapper_RGB565_Opaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x9e>
 801a538:	f8bd a004 	ldrh.w	sl, [sp, #4]
 801a53c:	f04f 0800 	mov.w	r8, #0
 801a540:	eb03 0008 	add.w	r0, r3, r8
 801a544:	2800      	cmp	r0, #0
 801a546:	dc41      	bgt.n	801a5cc <_ZN8touchgfx8LCD16bpp46TextureMapper_RGB565_Opaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x1d2>
 801a548:	ea23 73e3 	bic.w	r3, r3, r3, asr #31
 801a54c:	eb04 0443 	add.w	r4, r4, r3, lsl #1
 801a550:	9b00      	ldr	r3, [sp, #0]
 801a552:	2b00      	cmp	r3, #0
 801a554:	f340 8095 	ble.w	801a682 <_ZN8touchgfx8LCD16bpp46TextureMapper_RGB565_Opaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x288>
 801a558:	ee30 0a04 	vadd.f32	s0, s0, s8
 801a55c:	eeb7 7a00 	vmov.f32	s14, #112	; 0x3f800000  1.0
 801a560:	eec7 7a00 	vdiv.f32	s15, s14, s0
 801a564:	9b0e      	ldr	r3, [sp, #56]	; 0x38
 801a566:	ee70 0aa4 	vadd.f32	s1, s1, s9
 801a56a:	ee31 1a05 	vadd.f32	s2, s2, s10
 801a56e:	ee20 7aa7 	vmul.f32	s14, s1, s15
 801a572:	eef0 6a62 	vmov.f32	s13, s5
 801a576:	ee61 7a27 	vmul.f32	s15, s2, s15
 801a57a:	eefe 6ac8 	vcvt.s32.f32	s13, s13, #16
 801a57e:	ee77 2a62 	vsub.f32	s5, s14, s5
 801a582:	edcd 6a0f 	vstr	s13, [sp, #60]	; 0x3c
 801a586:	eefe 2ac8 	vcvt.s32.f32	s5, s5, #16
 801a58a:	eef0 6a43 	vmov.f32	s13, s6
 801a58e:	ee37 3ac3 	vsub.f32	s6, s15, s6
 801a592:	ee12 2a90 	vmov	r2, s5
 801a596:	eebe 3ac8 	vcvt.s32.f32	s6, s6, #16
 801a59a:	fb92 f3f3 	sdiv	r3, r2, r3
 801a59e:	ee13 2a10 	vmov	r2, s6
 801a5a2:	9311      	str	r3, [sp, #68]	; 0x44
 801a5a4:	9b0e      	ldr	r3, [sp, #56]	; 0x38
 801a5a6:	fb92 f3f3 	sdiv	r3, r2, r3
 801a5aa:	9312      	str	r3, [sp, #72]	; 0x48
 801a5ac:	9b00      	ldr	r3, [sp, #0]
 801a5ae:	9a03      	ldr	r2, [sp, #12]
 801a5b0:	eefe 6ac8 	vcvt.s32.f32	s13, s13, #16
 801a5b4:	3b01      	subs	r3, #1
 801a5b6:	9300      	str	r3, [sp, #0]
 801a5b8:	edcd 6a10 	vstr	s13, [sp, #64]	; 0x40
 801a5bc:	9b0e      	ldr	r3, [sp, #56]	; 0x38
 801a5be:	eeb0 3a67 	vmov.f32	s6, s15
 801a5c2:	bf08      	it	eq
 801a5c4:	4613      	moveq	r3, r2
 801a5c6:	eef0 2a47 	vmov.f32	s5, s14
 801a5ca:	e72f      	b.n	801a42c <_ZN8touchgfx8LCD16bpp46TextureMapper_RGB565_Opaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x32>
 801a5cc:	140f      	asrs	r7, r1, #16
 801a5ce:	d451      	bmi.n	801a674 <_ZN8touchgfx8LCD16bpp46TextureMapper_RGB565_Opaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x27a>
 801a5d0:	f8de 5008 	ldr.w	r5, [lr, #8]
 801a5d4:	42bd      	cmp	r5, r7
 801a5d6:	dd4d      	ble.n	801a674 <_ZN8touchgfx8LCD16bpp46TextureMapper_RGB565_Opaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x27a>
 801a5d8:	ea5f 4c22 	movs.w	ip, r2, asr #16
 801a5dc:	d44a      	bmi.n	801a674 <_ZN8touchgfx8LCD16bpp46TextureMapper_RGB565_Opaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x27a>
 801a5de:	f8de 000c 	ldr.w	r0, [lr, #12]
 801a5e2:	4560      	cmp	r0, ip
 801a5e4:	dd46      	ble.n	801a674 <_ZN8touchgfx8LCD16bpp46TextureMapper_RGB565_Opaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x27a>
 801a5e6:	b22d      	sxth	r5, r5
 801a5e8:	fb0c 7505 	mla	r5, ip, r5, r7
 801a5ec:	9802      	ldr	r0, [sp, #8]
 801a5ee:	f830 0015 	ldrh.w	r0, [r0, r5, lsl #1]
 801a5f2:	f06f 0501 	mvn.w	r5, #1
 801a5f6:	fb05 fb08 	mul.w	fp, r5, r8
 801a5fa:	ea4f 2c20 	mov.w	ip, r0, asr #8
 801a5fe:	f834 500b 	ldrh.w	r5, [r4, fp]
 801a602:	122f      	asrs	r7, r5, #8
 801a604:	f007 07f8 	and.w	r7, r7, #248	; 0xf8
 801a608:	fb17 f706 	smulbb	r7, r7, r6
 801a60c:	ea4f 09e5 	mov.w	r9, r5, asr #3
 801a610:	f00c 0cf8 	and.w	ip, ip, #248	; 0xf8
 801a614:	00ed      	lsls	r5, r5, #3
 801a616:	fb0c 7c0a 	mla	ip, ip, sl, r7
 801a61a:	f009 09fc 	and.w	r9, r9, #252	; 0xfc
 801a61e:	10c7      	asrs	r7, r0, #3
 801a620:	b2ed      	uxtb	r5, r5
 801a622:	00c0      	lsls	r0, r0, #3
 801a624:	fb19 f906 	smulbb	r9, r9, r6
 801a628:	fb15 f506 	smulbb	r5, r5, r6
 801a62c:	f007 07fc 	and.w	r7, r7, #252	; 0xfc
 801a630:	b2c0      	uxtb	r0, r0
 801a632:	fa1f fc8c 	uxth.w	ip, ip
 801a636:	fb07 970a 	mla	r7, r7, sl, r9
 801a63a:	fb00 500a 	mla	r0, r0, sl, r5
 801a63e:	b2bf      	uxth	r7, r7
 801a640:	b280      	uxth	r0, r0
 801a642:	f10c 0501 	add.w	r5, ip, #1
 801a646:	eb05 2c1c 	add.w	ip, r5, ip, lsr #8
 801a64a:	f107 0901 	add.w	r9, r7, #1
 801a64e:	1c45      	adds	r5, r0, #1
 801a650:	eb05 2510 	add.w	r5, r5, r0, lsr #8
 801a654:	eb09 2917 	add.w	r9, r9, r7, lsr #8
 801a658:	f40c 4c78 	and.w	ip, ip, #63488	; 0xf800
 801a65c:	f3c5 25c4 	ubfx	r5, r5, #11, #5
 801a660:	ea4f 1959 	mov.w	r9, r9, lsr #5
 801a664:	ea45 0c0c 	orr.w	ip, r5, ip
 801a668:	f409 69fc 	and.w	r9, r9, #2016	; 0x7e0
 801a66c:	ea4c 0c09 	orr.w	ip, ip, r9
 801a670:	f824 c00b 	strh.w	ip, [r4, fp]
 801a674:	9811      	ldr	r0, [sp, #68]	; 0x44
 801a676:	4401      	add	r1, r0
 801a678:	9812      	ldr	r0, [sp, #72]	; 0x48
 801a67a:	f108 38ff 	add.w	r8, r8, #4294967295
 801a67e:	4402      	add	r2, r0
 801a680:	e75e      	b.n	801a540 <_ZN8touchgfx8LCD16bpp46TextureMapper_RGB565_Opaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x146>
 801a682:	b005      	add	sp, #20
 801a684:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}

0801a688 <_ZN8touchgfx8LCD16bpp48TextureMapper_RGB565_Opaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff>:
 801a688:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 801a68c:	b085      	sub	sp, #20
 801a68e:	4693      	mov	fp, r2
 801a690:	9e13      	ldr	r6, [sp, #76]	; 0x4c
 801a692:	9d16      	ldr	r5, [sp, #88]	; 0x58
 801a694:	6870      	ldr	r0, [r6, #4]
 801a696:	9101      	str	r1, [sp, #4]
 801a698:	e9dd 2414 	ldrd	r2, r4, [sp, #80]	; 0x50
 801a69c:	fb00 2404 	mla	r4, r0, r4, r2
 801a6a0:	6832      	ldr	r2, [r6, #0]
 801a6a2:	e9dd ec11 	ldrd	lr, ip, [sp, #68]	; 0x44
 801a6a6:	eb02 0444 	add.w	r4, r2, r4, lsl #1
 801a6aa:	682a      	ldr	r2, [r5, #0]
 801a6ac:	9202      	str	r2, [sp, #8]
 801a6ae:	eef7 6a00 	vmov.f32	s13, #112	; 0x3f800000  1.0
 801a6b2:	9a01      	ldr	r2, [sp, #4]
 801a6b4:	2a00      	cmp	r2, #0
 801a6b6:	dc03      	bgt.n	801a6c0 <_ZN8touchgfx8LCD16bpp48TextureMapper_RGB565_Opaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x38>
 801a6b8:	f1bb 0f00 	cmp.w	fp, #0
 801a6bc:	f340 809a 	ble.w	801a7f4 <_ZN8touchgfx8LCD16bpp48TextureMapper_RGB565_Opaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x16c>
 801a6c0:	9a0f      	ldr	r2, [sp, #60]	; 0x3c
 801a6c2:	f9b5 9008 	ldrsh.w	r9, [r5, #8]
 801a6c6:	f9b5 800c 	ldrsh.w	r8, [r5, #12]
 801a6ca:	f502 4000 	add.w	r0, r2, #32768	; 0x8000
 801a6ce:	9a10      	ldr	r2, [sp, #64]	; 0x40
 801a6d0:	f502 4200 	add.w	r2, r2, #32768	; 0x8000
 801a6d4:	2b00      	cmp	r3, #0
 801a6d6:	dd0c      	ble.n	801a6f2 <_ZN8touchgfx8LCD16bpp48TextureMapper_RGB565_Opaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x6a>
 801a6d8:	1406      	asrs	r6, r0, #16
 801a6da:	d405      	bmi.n	801a6e8 <_ZN8touchgfx8LCD16bpp48TextureMapper_RGB565_Opaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x60>
 801a6dc:	454e      	cmp	r6, r9
 801a6de:	da03      	bge.n	801a6e8 <_ZN8touchgfx8LCD16bpp48TextureMapper_RGB565_Opaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x60>
 801a6e0:	1416      	asrs	r6, r2, #16
 801a6e2:	d401      	bmi.n	801a6e8 <_ZN8touchgfx8LCD16bpp48TextureMapper_RGB565_Opaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x60>
 801a6e4:	4546      	cmp	r6, r8
 801a6e6:	db05      	blt.n	801a6f4 <_ZN8touchgfx8LCD16bpp48TextureMapper_RGB565_Opaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x6c>
 801a6e8:	4470      	add	r0, lr
 801a6ea:	4462      	add	r2, ip
 801a6ec:	3b01      	subs	r3, #1
 801a6ee:	3402      	adds	r4, #2
 801a6f0:	e7f0      	b.n	801a6d4 <_ZN8touchgfx8LCD16bpp48TextureMapper_RGB565_Opaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x4c>
 801a6f2:	d00f      	beq.n	801a714 <_ZN8touchgfx8LCD16bpp48TextureMapper_RGB565_Opaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x8c>
 801a6f4:	1e5e      	subs	r6, r3, #1
 801a6f6:	fb0e 0706 	mla	r7, lr, r6, r0
 801a6fa:	143f      	asrs	r7, r7, #16
 801a6fc:	d541      	bpl.n	801a782 <_ZN8touchgfx8LCD16bpp48TextureMapper_RGB565_Opaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0xfa>
 801a6fe:	eb04 0643 	add.w	r6, r4, r3, lsl #1
 801a702:	4698      	mov	r8, r3
 801a704:	9603      	str	r6, [sp, #12]
 801a706:	f1b8 0f00 	cmp.w	r8, #0
 801a70a:	dc56      	bgt.n	801a7ba <_ZN8touchgfx8LCD16bpp48TextureMapper_RGB565_Opaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x132>
 801a70c:	ea23 73e3 	bic.w	r3, r3, r3, asr #31
 801a710:	eb04 0443 	add.w	r4, r4, r3, lsl #1
 801a714:	9b01      	ldr	r3, [sp, #4]
 801a716:	2b00      	cmp	r3, #0
 801a718:	dd6c      	ble.n	801a7f4 <_ZN8touchgfx8LCD16bpp48TextureMapper_RGB565_Opaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x16c>
 801a71a:	ee30 0a04 	vadd.f32	s0, s0, s8
 801a71e:	ee70 0aa4 	vadd.f32	s1, s1, s9
 801a722:	eec6 7a80 	vdiv.f32	s15, s13, s0
 801a726:	9b0e      	ldr	r3, [sp, #56]	; 0x38
 801a728:	ee31 1a05 	vadd.f32	s2, s2, s10
 801a72c:	ee20 7aa7 	vmul.f32	s14, s1, s15
 801a730:	eeb0 6a62 	vmov.f32	s12, s5
 801a734:	ee61 7a27 	vmul.f32	s15, s2, s15
 801a738:	eebe 6ac8 	vcvt.s32.f32	s12, s12, #16
 801a73c:	ee77 2a62 	vsub.f32	s5, s14, s5
 801a740:	ed8d 6a0f 	vstr	s12, [sp, #60]	; 0x3c
 801a744:	eefe 2ac8 	vcvt.s32.f32	s5, s5, #16
 801a748:	eeb0 6a43 	vmov.f32	s12, s6
 801a74c:	ee37 3ac3 	vsub.f32	s6, s15, s6
 801a750:	ee12 2a90 	vmov	r2, s5
 801a754:	eebe 3ac8 	vcvt.s32.f32	s6, s6, #16
 801a758:	fb92 fef3 	sdiv	lr, r2, r3
 801a75c:	ee13 2a10 	vmov	r2, s6
 801a760:	fb92 fcf3 	sdiv	ip, r2, r3
 801a764:	9b01      	ldr	r3, [sp, #4]
 801a766:	eebe 6ac8 	vcvt.s32.f32	s12, s12, #16
 801a76a:	3b01      	subs	r3, #1
 801a76c:	9301      	str	r3, [sp, #4]
 801a76e:	ed8d 6a10 	vstr	s12, [sp, #64]	; 0x40
 801a772:	9b0e      	ldr	r3, [sp, #56]	; 0x38
 801a774:	eeb0 3a67 	vmov.f32	s6, s15
 801a778:	bf08      	it	eq
 801a77a:	465b      	moveq	r3, fp
 801a77c:	eef0 2a47 	vmov.f32	s5, s14
 801a780:	e797      	b.n	801a6b2 <_ZN8touchgfx8LCD16bpp48TextureMapper_RGB565_Opaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x2a>
 801a782:	454f      	cmp	r7, r9
 801a784:	dabb      	bge.n	801a6fe <_ZN8touchgfx8LCD16bpp48TextureMapper_RGB565_Opaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x76>
 801a786:	fb0c 2606 	mla	r6, ip, r6, r2
 801a78a:	1436      	asrs	r6, r6, #16
 801a78c:	d4b7      	bmi.n	801a6fe <_ZN8touchgfx8LCD16bpp48TextureMapper_RGB565_Opaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x76>
 801a78e:	4546      	cmp	r6, r8
 801a790:	dab5      	bge.n	801a6fe <_ZN8touchgfx8LCD16bpp48TextureMapper_RGB565_Opaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x76>
 801a792:	461e      	mov	r6, r3
 801a794:	46a0      	mov	r8, r4
 801a796:	2e00      	cmp	r6, #0
 801a798:	ddb8      	ble.n	801a70c <_ZN8touchgfx8LCD16bpp48TextureMapper_RGB565_Opaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x84>
 801a79a:	f9b5 a008 	ldrsh.w	sl, [r5, #8]
 801a79e:	9902      	ldr	r1, [sp, #8]
 801a7a0:	1417      	asrs	r7, r2, #16
 801a7a2:	ea4f 4920 	mov.w	r9, r0, asr #16
 801a7a6:	fb0a 9707 	mla	r7, sl, r7, r9
 801a7aa:	4470      	add	r0, lr
 801a7ac:	f831 7017 	ldrh.w	r7, [r1, r7, lsl #1]
 801a7b0:	f828 7b02 	strh.w	r7, [r8], #2
 801a7b4:	4462      	add	r2, ip
 801a7b6:	3e01      	subs	r6, #1
 801a7b8:	e7ed      	b.n	801a796 <_ZN8touchgfx8LCD16bpp48TextureMapper_RGB565_Opaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x10e>
 801a7ba:	ea5f 4920 	movs.w	r9, r0, asr #16
 801a7be:	d414      	bmi.n	801a7ea <_ZN8touchgfx8LCD16bpp48TextureMapper_RGB565_Opaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x162>
 801a7c0:	68ae      	ldr	r6, [r5, #8]
 801a7c2:	454e      	cmp	r6, r9
 801a7c4:	dd11      	ble.n	801a7ea <_ZN8touchgfx8LCD16bpp48TextureMapper_RGB565_Opaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x162>
 801a7c6:	ea5f 4a22 	movs.w	sl, r2, asr #16
 801a7ca:	d40e      	bmi.n	801a7ea <_ZN8touchgfx8LCD16bpp48TextureMapper_RGB565_Opaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x162>
 801a7cc:	68ef      	ldr	r7, [r5, #12]
 801a7ce:	4557      	cmp	r7, sl
 801a7d0:	dd0b      	ble.n	801a7ea <_ZN8touchgfx8LCD16bpp48TextureMapper_RGB565_Opaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x162>
 801a7d2:	b236      	sxth	r6, r6
 801a7d4:	fb0a 9606 	mla	r6, sl, r6, r9
 801a7d8:	9f02      	ldr	r7, [sp, #8]
 801a7da:	f06f 0101 	mvn.w	r1, #1
 801a7de:	f837 7016 	ldrh.w	r7, [r7, r6, lsl #1]
 801a7e2:	fb01 f608 	mul.w	r6, r1, r8
 801a7e6:	9903      	ldr	r1, [sp, #12]
 801a7e8:	538f      	strh	r7, [r1, r6]
 801a7ea:	4470      	add	r0, lr
 801a7ec:	4462      	add	r2, ip
 801a7ee:	f108 38ff 	add.w	r8, r8, #4294967295
 801a7f2:	e788      	b.n	801a706 <_ZN8touchgfx8LCD16bpp48TextureMapper_RGB565_Opaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x7e>
 801a7f4:	b005      	add	sp, #20
 801a7f6:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}

0801a7fa <_ZN8touchgfx8LCD16bpp51TextureMapper_ARGB8888_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff>:
 801a7fa:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 801a7fe:	b087      	sub	sp, #28
 801a800:	468b      	mov	fp, r1
 801a802:	9815      	ldr	r0, [sp, #84]	; 0x54
 801a804:	9203      	str	r2, [sp, #12]
 801a806:	f89d 2064 	ldrb.w	r2, [sp, #100]	; 0x64
 801a80a:	9204      	str	r2, [sp, #16]
 801a80c:	e9dd 2516 	ldrd	r2, r5, [sp, #88]	; 0x58
 801a810:	6841      	ldr	r1, [r0, #4]
 801a812:	f8dd 9060 	ldr.w	r9, [sp, #96]	; 0x60
 801a816:	fb01 2505 	mla	r5, r1, r5, r2
 801a81a:	6802      	ldr	r2, [r0, #0]
 801a81c:	eb02 0545 	add.w	r5, r2, r5, lsl #1
 801a820:	f8d9 2000 	ldr.w	r2, [r9]
 801a824:	9201      	str	r2, [sp, #4]
 801a826:	eef7 6a00 	vmov.f32	s13, #112	; 0x3f800000  1.0
 801a82a:	f1bb 0f00 	cmp.w	fp, #0
 801a82e:	dc03      	bgt.n	801a838 <_ZN8touchgfx8LCD16bpp51TextureMapper_ARGB8888_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x3e>
 801a830:	9a03      	ldr	r2, [sp, #12]
 801a832:	2a00      	cmp	r2, #0
 801a834:	f340 8159 	ble.w	801aaea <_ZN8touchgfx8LCD16bpp51TextureMapper_ARGB8888_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x2f0>
 801a838:	9a11      	ldr	r2, [sp, #68]	; 0x44
 801a83a:	f9b9 7008 	ldrsh.w	r7, [r9, #8]
 801a83e:	f9b9 600c 	ldrsh.w	r6, [r9, #12]
 801a842:	f502 4000 	add.w	r0, r2, #32768	; 0x8000
 801a846:	9a12      	ldr	r2, [sp, #72]	; 0x48
 801a848:	f502 4100 	add.w	r1, r2, #32768	; 0x8000
 801a84c:	2b00      	cmp	r3, #0
 801a84e:	dd0e      	ble.n	801a86e <_ZN8touchgfx8LCD16bpp51TextureMapper_ARGB8888_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x74>
 801a850:	1402      	asrs	r2, r0, #16
 801a852:	d405      	bmi.n	801a860 <_ZN8touchgfx8LCD16bpp51TextureMapper_ARGB8888_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x66>
 801a854:	42ba      	cmp	r2, r7
 801a856:	da03      	bge.n	801a860 <_ZN8touchgfx8LCD16bpp51TextureMapper_ARGB8888_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x66>
 801a858:	140a      	asrs	r2, r1, #16
 801a85a:	d401      	bmi.n	801a860 <_ZN8touchgfx8LCD16bpp51TextureMapper_ARGB8888_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x66>
 801a85c:	42b2      	cmp	r2, r6
 801a85e:	db07      	blt.n	801a870 <_ZN8touchgfx8LCD16bpp51TextureMapper_ARGB8888_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x76>
 801a860:	9a13      	ldr	r2, [sp, #76]	; 0x4c
 801a862:	4410      	add	r0, r2
 801a864:	9a14      	ldr	r2, [sp, #80]	; 0x50
 801a866:	3b01      	subs	r3, #1
 801a868:	4411      	add	r1, r2
 801a86a:	3502      	adds	r5, #2
 801a86c:	e7ee      	b.n	801a84c <_ZN8touchgfx8LCD16bpp51TextureMapper_ARGB8888_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x52>
 801a86e:	d017      	beq.n	801a8a0 <_ZN8touchgfx8LCD16bpp51TextureMapper_ARGB8888_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0xa6>
 801a870:	9c13      	ldr	r4, [sp, #76]	; 0x4c
 801a872:	1e5a      	subs	r2, r3, #1
 801a874:	fb04 0402 	mla	r4, r4, r2, r0
 801a878:	1424      	asrs	r4, r4, #16
 801a87a:	d409      	bmi.n	801a890 <_ZN8touchgfx8LCD16bpp51TextureMapper_ARGB8888_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x96>
 801a87c:	42bc      	cmp	r4, r7
 801a87e:	da07      	bge.n	801a890 <_ZN8touchgfx8LCD16bpp51TextureMapper_ARGB8888_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x96>
 801a880:	9c14      	ldr	r4, [sp, #80]	; 0x50
 801a882:	fb04 1202 	mla	r2, r4, r2, r1
 801a886:	1412      	asrs	r2, r2, #16
 801a888:	d402      	bmi.n	801a890 <_ZN8touchgfx8LCD16bpp51TextureMapper_ARGB8888_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x96>
 801a88a:	42b2      	cmp	r2, r6
 801a88c:	f2c0 80bf 	blt.w	801aa0e <_ZN8touchgfx8LCD16bpp51TextureMapper_ARGB8888_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x214>
 801a890:	2700      	movs	r7, #0
 801a892:	19da      	adds	r2, r3, r7
 801a894:	2a00      	cmp	r2, #0
 801a896:	dc3e      	bgt.n	801a916 <_ZN8touchgfx8LCD16bpp51TextureMapper_ARGB8888_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x11c>
 801a898:	ea23 73e3 	bic.w	r3, r3, r3, asr #31
 801a89c:	eb05 0543 	add.w	r5, r5, r3, lsl #1
 801a8a0:	f1bb 0f00 	cmp.w	fp, #0
 801a8a4:	f340 8121 	ble.w	801aaea <_ZN8touchgfx8LCD16bpp51TextureMapper_ARGB8888_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x2f0>
 801a8a8:	ee30 0a04 	vadd.f32	s0, s0, s8
 801a8ac:	ee70 0aa4 	vadd.f32	s1, s1, s9
 801a8b0:	eec6 7a80 	vdiv.f32	s15, s13, s0
 801a8b4:	9b10      	ldr	r3, [sp, #64]	; 0x40
 801a8b6:	f1bb 0b01 	subs.w	fp, fp, #1
 801a8ba:	ee31 1a05 	vadd.f32	s2, s2, s10
 801a8be:	ee20 7aa7 	vmul.f32	s14, s1, s15
 801a8c2:	eeb0 6a62 	vmov.f32	s12, s5
 801a8c6:	ee61 7a27 	vmul.f32	s15, s2, s15
 801a8ca:	eebe 6ac8 	vcvt.s32.f32	s12, s12, #16
 801a8ce:	ee77 2a62 	vsub.f32	s5, s14, s5
 801a8d2:	ed8d 6a11 	vstr	s12, [sp, #68]	; 0x44
 801a8d6:	eefe 2ac8 	vcvt.s32.f32	s5, s5, #16
 801a8da:	eeb0 6a43 	vmov.f32	s12, s6
 801a8de:	ee37 3ac3 	vsub.f32	s6, s15, s6
 801a8e2:	ee12 2a90 	vmov	r2, s5
 801a8e6:	eebe 3ac8 	vcvt.s32.f32	s6, s6, #16
 801a8ea:	fb92 f3f3 	sdiv	r3, r2, r3
 801a8ee:	ee13 2a10 	vmov	r2, s6
 801a8f2:	eebe 6ac8 	vcvt.s32.f32	s12, s12, #16
 801a8f6:	9313      	str	r3, [sp, #76]	; 0x4c
 801a8f8:	9b10      	ldr	r3, [sp, #64]	; 0x40
 801a8fa:	fb92 f3f3 	sdiv	r3, r2, r3
 801a8fe:	9a03      	ldr	r2, [sp, #12]
 801a900:	9314      	str	r3, [sp, #80]	; 0x50
 801a902:	ed8d 6a12 	vstr	s12, [sp, #72]	; 0x48
 801a906:	9b10      	ldr	r3, [sp, #64]	; 0x40
 801a908:	eeb0 3a67 	vmov.f32	s6, s15
 801a90c:	bf08      	it	eq
 801a90e:	4613      	moveq	r3, r2
 801a910:	eef0 2a47 	vmov.f32	s5, s14
 801a914:	e789      	b.n	801a82a <_ZN8touchgfx8LCD16bpp51TextureMapper_ARGB8888_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x30>
 801a916:	1406      	asrs	r6, r0, #16
 801a918:	d42d      	bmi.n	801a976 <_ZN8touchgfx8LCD16bpp51TextureMapper_ARGB8888_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x17c>
 801a91a:	f8d9 4008 	ldr.w	r4, [r9, #8]
 801a91e:	42b4      	cmp	r4, r6
 801a920:	dd29      	ble.n	801a976 <_ZN8touchgfx8LCD16bpp51TextureMapper_ARGB8888_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x17c>
 801a922:	ea5f 4c21 	movs.w	ip, r1, asr #16
 801a926:	d426      	bmi.n	801a976 <_ZN8touchgfx8LCD16bpp51TextureMapper_ARGB8888_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x17c>
 801a928:	f8d9 200c 	ldr.w	r2, [r9, #12]
 801a92c:	4562      	cmp	r2, ip
 801a92e:	dd22      	ble.n	801a976 <_ZN8touchgfx8LCD16bpp51TextureMapper_ARGB8888_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x17c>
 801a930:	b224      	sxth	r4, r4
 801a932:	9a01      	ldr	r2, [sp, #4]
 801a934:	fb0c 6404 	mla	r4, ip, r4, r6
 801a938:	f852 4024 	ldr.w	r4, [r2, r4, lsl #2]
 801a93c:	0e22      	lsrs	r2, r4, #24
 801a93e:	d01a      	beq.n	801a976 <_ZN8touchgfx8LCD16bpp51TextureMapper_ARGB8888_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x17c>
 801a940:	9e04      	ldr	r6, [sp, #16]
 801a942:	4372      	muls	r2, r6
 801a944:	1c56      	adds	r6, r2, #1
 801a946:	eb06 2222 	add.w	r2, r6, r2, asr #8
 801a94a:	1212      	asrs	r2, r2, #8
 801a94c:	0a26      	lsrs	r6, r4, #8
 801a94e:	2aff      	cmp	r2, #255	; 0xff
 801a950:	9605      	str	r6, [sp, #20]
 801a952:	d116      	bne.n	801a982 <_ZN8touchgfx8LCD16bpp51TextureMapper_ARGB8888_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x188>
 801a954:	f06f 0201 	mvn.w	r2, #1
 801a958:	fb02 fc07 	mul.w	ip, r2, r7
 801a95c:	f426 66ff 	bic.w	r6, r6, #2040	; 0x7f8
 801a960:	0962      	lsrs	r2, r4, #5
 801a962:	f402 62fc 	and.w	r2, r2, #2016	; 0x7e0
 801a966:	f026 0607 	bic.w	r6, r6, #7
 801a96a:	4316      	orrs	r6, r2
 801a96c:	f3c4 04c4 	ubfx	r4, r4, #3, #5
 801a970:	4326      	orrs	r6, r4
 801a972:	f825 600c 	strh.w	r6, [r5, ip]
 801a976:	9a13      	ldr	r2, [sp, #76]	; 0x4c
 801a978:	4410      	add	r0, r2
 801a97a:	9a14      	ldr	r2, [sp, #80]	; 0x50
 801a97c:	3f01      	subs	r7, #1
 801a97e:	4411      	add	r1, r2
 801a980:	e787      	b.n	801a892 <_ZN8touchgfx8LCD16bpp51TextureMapper_ARGB8888_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x98>
 801a982:	f06f 0601 	mvn.w	r6, #1
 801a986:	437e      	muls	r6, r7
 801a988:	fa1f fa82 	uxth.w	sl, r2
 801a98c:	f835 8006 	ldrh.w	r8, [r5, r6]
 801a990:	9602      	str	r6, [sp, #8]
 801a992:	ea4f 2e28 	mov.w	lr, r8, asr #8
 801a996:	f3c4 4c07 	ubfx	ip, r4, #16, #8
 801a99a:	43d2      	mvns	r2, r2
 801a99c:	b2d2      	uxtb	r2, r2
 801a99e:	fb1c fc0a 	smulbb	ip, ip, sl
 801a9a2:	f00e 0ef8 	and.w	lr, lr, #248	; 0xf8
 801a9a6:	fb0e ce02 	mla	lr, lr, r2, ip
 801a9aa:	b2e4      	uxtb	r4, r4
 801a9ac:	ea4f 0ce8 	mov.w	ip, r8, asr #3
 801a9b0:	ea4f 08c8 	mov.w	r8, r8, lsl #3
 801a9b4:	f89d 6014 	ldrb.w	r6, [sp, #20]
 801a9b8:	fa5f f888 	uxtb.w	r8, r8
 801a9bc:	fb14 f40a 	smulbb	r4, r4, sl
 801a9c0:	fb08 4402 	mla	r4, r8, r2, r4
 801a9c4:	fa1f fe8e 	uxth.w	lr, lr
 801a9c8:	fb16 f60a 	smulbb	r6, r6, sl
 801a9cc:	b2a4      	uxth	r4, r4
 801a9ce:	f00c 0cfc 	and.w	ip, ip, #252	; 0xfc
 801a9d2:	fb0c 6c02 	mla	ip, ip, r2, r6
 801a9d6:	f10e 0201 	add.w	r2, lr, #1
 801a9da:	1c66      	adds	r6, r4, #1
 801a9dc:	eb02 2e1e 	add.w	lr, r2, lr, lsr #8
 801a9e0:	eb06 2614 	add.w	r6, r6, r4, lsr #8
 801a9e4:	fa1f fc8c 	uxth.w	ip, ip
 801a9e8:	f3c6 26c4 	ubfx	r6, r6, #11, #5
 801a9ec:	f40e 4e78 	and.w	lr, lr, #63488	; 0xf800
 801a9f0:	ea46 0e0e 	orr.w	lr, r6, lr
 801a9f4:	f10c 0601 	add.w	r6, ip, #1
 801a9f8:	eb06 261c 	add.w	r6, r6, ip, lsr #8
 801a9fc:	0976      	lsrs	r6, r6, #5
 801a9fe:	f406 66fc 	and.w	r6, r6, #2016	; 0x7e0
 801aa02:	9a02      	ldr	r2, [sp, #8]
 801aa04:	ea4e 0e06 	orr.w	lr, lr, r6
 801aa08:	f825 e002 	strh.w	lr, [r5, r2]
 801aa0c:	e7b3      	b.n	801a976 <_ZN8touchgfx8LCD16bpp51TextureMapper_ARGB8888_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x17c>
 801aa0e:	f04f 0800 	mov.w	r8, #0
 801aa12:	eba3 0208 	sub.w	r2, r3, r8
 801aa16:	2a00      	cmp	r2, #0
 801aa18:	f77f af3e 	ble.w	801a898 <_ZN8touchgfx8LCD16bpp51TextureMapper_ARGB8888_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x9e>
 801aa1c:	f9b9 6008 	ldrsh.w	r6, [r9, #8]
 801aa20:	1404      	asrs	r4, r0, #16
 801aa22:	140a      	asrs	r2, r1, #16
 801aa24:	fb06 4202 	mla	r2, r6, r2, r4
 801aa28:	9c01      	ldr	r4, [sp, #4]
 801aa2a:	f854 4022 	ldr.w	r4, [r4, r2, lsl #2]
 801aa2e:	0e22      	lsrs	r2, r4, #24
 801aa30:	d016      	beq.n	801aa60 <_ZN8touchgfx8LCD16bpp51TextureMapper_ARGB8888_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x266>
 801aa32:	9e04      	ldr	r6, [sp, #16]
 801aa34:	4372      	muls	r2, r6
 801aa36:	1c56      	adds	r6, r2, #1
 801aa38:	eb06 2222 	add.w	r2, r6, r2, asr #8
 801aa3c:	1212      	asrs	r2, r2, #8
 801aa3e:	2aff      	cmp	r2, #255	; 0xff
 801aa40:	ea4f 2614 	mov.w	r6, r4, lsr #8
 801aa44:	d113      	bne.n	801aa6e <_ZN8touchgfx8LCD16bpp51TextureMapper_ARGB8888_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x274>
 801aa46:	0962      	lsrs	r2, r4, #5
 801aa48:	f426 66ff 	bic.w	r6, r6, #2040	; 0x7f8
 801aa4c:	f402 62fc 	and.w	r2, r2, #2016	; 0x7e0
 801aa50:	f026 0607 	bic.w	r6, r6, #7
 801aa54:	4316      	orrs	r6, r2
 801aa56:	f3c4 04c4 	ubfx	r4, r4, #3, #5
 801aa5a:	4326      	orrs	r6, r4
 801aa5c:	f825 6018 	strh.w	r6, [r5, r8, lsl #1]
 801aa60:	9a13      	ldr	r2, [sp, #76]	; 0x4c
 801aa62:	4410      	add	r0, r2
 801aa64:	9a14      	ldr	r2, [sp, #80]	; 0x50
 801aa66:	f108 0801 	add.w	r8, r8, #1
 801aa6a:	4411      	add	r1, r2
 801aa6c:	e7d1      	b.n	801aa12 <_ZN8touchgfx8LCD16bpp51TextureMapper_ARGB8888_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x218>
 801aa6e:	f835 e018 	ldrh.w	lr, [r5, r8, lsl #1]
 801aa72:	fa1f fa82 	uxth.w	sl, r2
 801aa76:	ea4f 2c2e 	mov.w	ip, lr, asr #8
 801aa7a:	f3c4 4707 	ubfx	r7, r4, #16, #8
 801aa7e:	43d2      	mvns	r2, r2
 801aa80:	b2d2      	uxtb	r2, r2
 801aa82:	fb17 f70a 	smulbb	r7, r7, sl
 801aa86:	f00c 0cf8 	and.w	ip, ip, #248	; 0xf8
 801aa8a:	fb0c 7c02 	mla	ip, ip, r2, r7
 801aa8e:	b2e4      	uxtb	r4, r4
 801aa90:	ea4f 07ee 	mov.w	r7, lr, asr #3
 801aa94:	ea4f 0ece 	mov.w	lr, lr, lsl #3
 801aa98:	fa5f fe8e 	uxtb.w	lr, lr
 801aa9c:	fb14 f40a 	smulbb	r4, r4, sl
 801aaa0:	fb0e 4402 	mla	r4, lr, r2, r4
 801aaa4:	b2f6      	uxtb	r6, r6
 801aaa6:	fa1f fc8c 	uxth.w	ip, ip
 801aaaa:	fb16 f60a 	smulbb	r6, r6, sl
 801aaae:	b2a4      	uxth	r4, r4
 801aab0:	f007 07fc 	and.w	r7, r7, #252	; 0xfc
 801aab4:	fb07 6702 	mla	r7, r7, r2, r6
 801aab8:	f10c 0201 	add.w	r2, ip, #1
 801aabc:	1c66      	adds	r6, r4, #1
 801aabe:	eb02 2c1c 	add.w	ip, r2, ip, lsr #8
 801aac2:	eb06 2614 	add.w	r6, r6, r4, lsr #8
 801aac6:	b2bf      	uxth	r7, r7
 801aac8:	f3c6 26c4 	ubfx	r6, r6, #11, #5
 801aacc:	f40c 4c78 	and.w	ip, ip, #63488	; 0xf800
 801aad0:	ea46 0c0c 	orr.w	ip, r6, ip
 801aad4:	1c7e      	adds	r6, r7, #1
 801aad6:	eb06 2617 	add.w	r6, r6, r7, lsr #8
 801aada:	0976      	lsrs	r6, r6, #5
 801aadc:	f406 66fc 	and.w	r6, r6, #2016	; 0x7e0
 801aae0:	ea4c 0c06 	orr.w	ip, ip, r6
 801aae4:	f825 c018 	strh.w	ip, [r5, r8, lsl #1]
 801aae8:	e7ba      	b.n	801aa60 <_ZN8touchgfx8LCD16bpp51TextureMapper_ARGB8888_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x266>
 801aaea:	b007      	add	sp, #28
 801aaec:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}

0801aaf0 <_ZN8touchgfx8LCD16bpp53TextureMapper_ARGB8888_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff>:
 801aaf0:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 801aaf4:	b085      	sub	sp, #20
 801aaf6:	468b      	mov	fp, r1
 801aaf8:	9813      	ldr	r0, [sp, #76]	; 0x4c
 801aafa:	9203      	str	r2, [sp, #12]
 801aafc:	e9dd 2414 	ldrd	r2, r4, [sp, #80]	; 0x50
 801ab00:	6841      	ldr	r1, [r0, #4]
 801ab02:	f8dd 8058 	ldr.w	r8, [sp, #88]	; 0x58
 801ab06:	fb01 2404 	mla	r4, r1, r4, r2
 801ab0a:	6802      	ldr	r2, [r0, #0]
 801ab0c:	eb02 0444 	add.w	r4, r2, r4, lsl #1
 801ab10:	f8d8 2000 	ldr.w	r2, [r8]
 801ab14:	9201      	str	r2, [sp, #4]
 801ab16:	eef7 6a00 	vmov.f32	s13, #112	; 0x3f800000  1.0
 801ab1a:	f1bb 0f00 	cmp.w	fp, #0
 801ab1e:	dc03      	bgt.n	801ab28 <_ZN8touchgfx8LCD16bpp53TextureMapper_ARGB8888_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x38>
 801ab20:	9a03      	ldr	r2, [sp, #12]
 801ab22:	2a00      	cmp	r2, #0
 801ab24:	f340 814f 	ble.w	801adc6 <_ZN8touchgfx8LCD16bpp53TextureMapper_ARGB8888_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x2d6>
 801ab28:	9a0f      	ldr	r2, [sp, #60]	; 0x3c
 801ab2a:	f9b8 7008 	ldrsh.w	r7, [r8, #8]
 801ab2e:	f9b8 600c 	ldrsh.w	r6, [r8, #12]
 801ab32:	f502 4100 	add.w	r1, r2, #32768	; 0x8000
 801ab36:	9a10      	ldr	r2, [sp, #64]	; 0x40
 801ab38:	f502 4200 	add.w	r2, r2, #32768	; 0x8000
 801ab3c:	2b00      	cmp	r3, #0
 801ab3e:	dd0e      	ble.n	801ab5e <_ZN8touchgfx8LCD16bpp53TextureMapper_ARGB8888_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x6e>
 801ab40:	1408      	asrs	r0, r1, #16
 801ab42:	d405      	bmi.n	801ab50 <_ZN8touchgfx8LCD16bpp53TextureMapper_ARGB8888_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x60>
 801ab44:	42b8      	cmp	r0, r7
 801ab46:	da03      	bge.n	801ab50 <_ZN8touchgfx8LCD16bpp53TextureMapper_ARGB8888_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x60>
 801ab48:	1410      	asrs	r0, r2, #16
 801ab4a:	d401      	bmi.n	801ab50 <_ZN8touchgfx8LCD16bpp53TextureMapper_ARGB8888_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x60>
 801ab4c:	42b0      	cmp	r0, r6
 801ab4e:	db07      	blt.n	801ab60 <_ZN8touchgfx8LCD16bpp53TextureMapper_ARGB8888_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x70>
 801ab50:	9811      	ldr	r0, [sp, #68]	; 0x44
 801ab52:	4401      	add	r1, r0
 801ab54:	9812      	ldr	r0, [sp, #72]	; 0x48
 801ab56:	3b01      	subs	r3, #1
 801ab58:	4402      	add	r2, r0
 801ab5a:	3402      	adds	r4, #2
 801ab5c:	e7ee      	b.n	801ab3c <_ZN8touchgfx8LCD16bpp53TextureMapper_ARGB8888_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x4c>
 801ab5e:	d017      	beq.n	801ab90 <_ZN8touchgfx8LCD16bpp53TextureMapper_ARGB8888_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0xa0>
 801ab60:	9d11      	ldr	r5, [sp, #68]	; 0x44
 801ab62:	1e58      	subs	r0, r3, #1
 801ab64:	fb05 1500 	mla	r5, r5, r0, r1
 801ab68:	142d      	asrs	r5, r5, #16
 801ab6a:	d409      	bmi.n	801ab80 <_ZN8touchgfx8LCD16bpp53TextureMapper_ARGB8888_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x90>
 801ab6c:	42bd      	cmp	r5, r7
 801ab6e:	da07      	bge.n	801ab80 <_ZN8touchgfx8LCD16bpp53TextureMapper_ARGB8888_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x90>
 801ab70:	9d12      	ldr	r5, [sp, #72]	; 0x48
 801ab72:	fb05 2000 	mla	r0, r5, r0, r2
 801ab76:	1400      	asrs	r0, r0, #16
 801ab78:	d402      	bmi.n	801ab80 <_ZN8touchgfx8LCD16bpp53TextureMapper_ARGB8888_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x90>
 801ab7a:	42b0      	cmp	r0, r6
 801ab7c:	f2c0 80ba 	blt.w	801acf4 <_ZN8touchgfx8LCD16bpp53TextureMapper_ARGB8888_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x204>
 801ab80:	2600      	movs	r6, #0
 801ab82:	1998      	adds	r0, r3, r6
 801ab84:	2800      	cmp	r0, #0
 801ab86:	dc3e      	bgt.n	801ac06 <_ZN8touchgfx8LCD16bpp53TextureMapper_ARGB8888_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x116>
 801ab88:	ea23 73e3 	bic.w	r3, r3, r3, asr #31
 801ab8c:	eb04 0443 	add.w	r4, r4, r3, lsl #1
 801ab90:	f1bb 0f00 	cmp.w	fp, #0
 801ab94:	f340 8117 	ble.w	801adc6 <_ZN8touchgfx8LCD16bpp53TextureMapper_ARGB8888_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x2d6>
 801ab98:	ee30 0a04 	vadd.f32	s0, s0, s8
 801ab9c:	ee70 0aa4 	vadd.f32	s1, s1, s9
 801aba0:	eec6 7a80 	vdiv.f32	s15, s13, s0
 801aba4:	9b0e      	ldr	r3, [sp, #56]	; 0x38
 801aba6:	f1bb 0b01 	subs.w	fp, fp, #1
 801abaa:	ee31 1a05 	vadd.f32	s2, s2, s10
 801abae:	ee20 7aa7 	vmul.f32	s14, s1, s15
 801abb2:	eeb0 6a62 	vmov.f32	s12, s5
 801abb6:	ee61 7a27 	vmul.f32	s15, s2, s15
 801abba:	eebe 6ac8 	vcvt.s32.f32	s12, s12, #16
 801abbe:	ee77 2a62 	vsub.f32	s5, s14, s5
 801abc2:	ed8d 6a0f 	vstr	s12, [sp, #60]	; 0x3c
 801abc6:	eefe 2ac8 	vcvt.s32.f32	s5, s5, #16
 801abca:	eeb0 6a43 	vmov.f32	s12, s6
 801abce:	ee37 3ac3 	vsub.f32	s6, s15, s6
 801abd2:	ee12 2a90 	vmov	r2, s5
 801abd6:	eebe 3ac8 	vcvt.s32.f32	s6, s6, #16
 801abda:	fb92 f3f3 	sdiv	r3, r2, r3
 801abde:	ee13 2a10 	vmov	r2, s6
 801abe2:	eebe 6ac8 	vcvt.s32.f32	s12, s12, #16
 801abe6:	9311      	str	r3, [sp, #68]	; 0x44
 801abe8:	9b0e      	ldr	r3, [sp, #56]	; 0x38
 801abea:	fb92 f3f3 	sdiv	r3, r2, r3
 801abee:	9a03      	ldr	r2, [sp, #12]
 801abf0:	9312      	str	r3, [sp, #72]	; 0x48
 801abf2:	ed8d 6a10 	vstr	s12, [sp, #64]	; 0x40
 801abf6:	9b0e      	ldr	r3, [sp, #56]	; 0x38
 801abf8:	eeb0 3a67 	vmov.f32	s6, s15
 801abfc:	bf08      	it	eq
 801abfe:	4613      	moveq	r3, r2
 801ac00:	eef0 2a47 	vmov.f32	s5, s14
 801ac04:	e789      	b.n	801ab1a <_ZN8touchgfx8LCD16bpp53TextureMapper_ARGB8888_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x2a>
 801ac06:	140f      	asrs	r7, r1, #16
 801ac08:	d424      	bmi.n	801ac54 <_ZN8touchgfx8LCD16bpp53TextureMapper_ARGB8888_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x164>
 801ac0a:	f8d8 5008 	ldr.w	r5, [r8, #8]
 801ac0e:	42bd      	cmp	r5, r7
 801ac10:	dd20      	ble.n	801ac54 <_ZN8touchgfx8LCD16bpp53TextureMapper_ARGB8888_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x164>
 801ac12:	ea5f 4c22 	movs.w	ip, r2, asr #16
 801ac16:	d41d      	bmi.n	801ac54 <_ZN8touchgfx8LCD16bpp53TextureMapper_ARGB8888_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x164>
 801ac18:	f8d8 000c 	ldr.w	r0, [r8, #12]
 801ac1c:	4560      	cmp	r0, ip
 801ac1e:	dd19      	ble.n	801ac54 <_ZN8touchgfx8LCD16bpp53TextureMapper_ARGB8888_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x164>
 801ac20:	b22d      	sxth	r5, r5
 801ac22:	fb0c 7505 	mla	r5, ip, r5, r7
 801ac26:	9801      	ldr	r0, [sp, #4]
 801ac28:	f850 0025 	ldr.w	r0, [r0, r5, lsl #2]
 801ac2c:	0e07      	lsrs	r7, r0, #24
 801ac2e:	2fff      	cmp	r7, #255	; 0xff
 801ac30:	d116      	bne.n	801ac60 <_ZN8touchgfx8LCD16bpp53TextureMapper_ARGB8888_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x170>
 801ac32:	f06f 0501 	mvn.w	r5, #1
 801ac36:	fb05 f706 	mul.w	r7, r5, r6
 801ac3a:	f2a5 75fe 	subw	r5, r5, #2046	; 0x7fe
 801ac3e:	ea05 2c10 	and.w	ip, r5, r0, lsr #8
 801ac42:	0945      	lsrs	r5, r0, #5
 801ac44:	f405 65fc 	and.w	r5, r5, #2016	; 0x7e0
 801ac48:	ea4c 0505 	orr.w	r5, ip, r5
 801ac4c:	f3c0 00c4 	ubfx	r0, r0, #3, #5
 801ac50:	4305      	orrs	r5, r0
 801ac52:	53e5      	strh	r5, [r4, r7]
 801ac54:	9811      	ldr	r0, [sp, #68]	; 0x44
 801ac56:	4401      	add	r1, r0
 801ac58:	9812      	ldr	r0, [sp, #72]	; 0x48
 801ac5a:	3e01      	subs	r6, #1
 801ac5c:	4402      	add	r2, r0
 801ac5e:	e790      	b.n	801ab82 <_ZN8touchgfx8LCD16bpp53TextureMapper_ARGB8888_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x92>
 801ac60:	b2fd      	uxtb	r5, r7
 801ac62:	2f00      	cmp	r7, #0
 801ac64:	d0f6      	beq.n	801ac54 <_ZN8touchgfx8LCD16bpp53TextureMapper_ARGB8888_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x164>
 801ac66:	f06f 0701 	mvn.w	r7, #1
 801ac6a:	4377      	muls	r7, r6
 801ac6c:	fa1f f985 	uxth.w	r9, r5
 801ac70:	f834 e007 	ldrh.w	lr, [r4, r7]
 801ac74:	9702      	str	r7, [sp, #8]
 801ac76:	ea4f 2c2e 	mov.w	ip, lr, asr #8
 801ac7a:	f3c0 4707 	ubfx	r7, r0, #16, #8
 801ac7e:	43ed      	mvns	r5, r5
 801ac80:	b2ed      	uxtb	r5, r5
 801ac82:	fb17 f709 	smulbb	r7, r7, r9
 801ac86:	f00c 0cf8 	and.w	ip, ip, #248	; 0xf8
 801ac8a:	fb0c 7c05 	mla	ip, ip, r5, r7
 801ac8e:	f3c0 2a07 	ubfx	sl, r0, #8, #8
 801ac92:	ea4f 07ee 	mov.w	r7, lr, asr #3
 801ac96:	b2c0      	uxtb	r0, r0
 801ac98:	ea4f 0ece 	mov.w	lr, lr, lsl #3
 801ac9c:	fa5f fe8e 	uxtb.w	lr, lr
 801aca0:	fb10 f009 	smulbb	r0, r0, r9
 801aca4:	fb0e 0005 	mla	r0, lr, r5, r0
 801aca8:	b280      	uxth	r0, r0
 801acaa:	fa1f fc8c 	uxth.w	ip, ip
 801acae:	fb1a fa09 	smulbb	sl, sl, r9
 801acb2:	f007 07fc 	and.w	r7, r7, #252	; 0xfc
 801acb6:	fb07 a705 	mla	r7, r7, r5, sl
 801acba:	f100 0a01 	add.w	sl, r0, #1
 801acbe:	f10c 0501 	add.w	r5, ip, #1
 801acc2:	eb0a 2a10 	add.w	sl, sl, r0, lsr #8
 801acc6:	eb05 2c1c 	add.w	ip, r5, ip, lsr #8
 801acca:	b2bf      	uxth	r7, r7
 801accc:	f3ca 2ac4 	ubfx	sl, sl, #11, #5
 801acd0:	f40c 4c78 	and.w	ip, ip, #63488	; 0xf800
 801acd4:	ea4a 0c0c 	orr.w	ip, sl, ip
 801acd8:	f107 0a01 	add.w	sl, r7, #1
 801acdc:	eb0a 2a17 	add.w	sl, sl, r7, lsr #8
 801ace0:	ea4f 1a5a 	mov.w	sl, sl, lsr #5
 801ace4:	f40a 6afc 	and.w	sl, sl, #2016	; 0x7e0
 801ace8:	9802      	ldr	r0, [sp, #8]
 801acea:	ea4c 0c0a 	orr.w	ip, ip, sl
 801acee:	f824 c000 	strh.w	ip, [r4, r0]
 801acf2:	e7af      	b.n	801ac54 <_ZN8touchgfx8LCD16bpp53TextureMapper_ARGB8888_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x164>
 801acf4:	f04f 0e00 	mov.w	lr, #0
 801acf8:	eba3 000e 	sub.w	r0, r3, lr
 801acfc:	2800      	cmp	r0, #0
 801acfe:	f77f af43 	ble.w	801ab88 <_ZN8touchgfx8LCD16bpp53TextureMapper_ARGB8888_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x98>
 801ad02:	f9b8 6008 	ldrsh.w	r6, [r8, #8]
 801ad06:	140d      	asrs	r5, r1, #16
 801ad08:	1410      	asrs	r0, r2, #16
 801ad0a:	fb06 5000 	mla	r0, r6, r0, r5
 801ad0e:	9d01      	ldr	r5, [sp, #4]
 801ad10:	f855 5020 	ldr.w	r5, [r5, r0, lsl #2]
 801ad14:	0e2e      	lsrs	r6, r5, #24
 801ad16:	2eff      	cmp	r6, #255	; 0xff
 801ad18:	d112      	bne.n	801ad40 <_ZN8touchgfx8LCD16bpp53TextureMapper_ARGB8888_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x250>
 801ad1a:	482c      	ldr	r0, [pc, #176]	; (801adcc <_ZN8touchgfx8LCD16bpp53TextureMapper_ARGB8888_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x2dc>)
 801ad1c:	ea00 2615 	and.w	r6, r0, r5, lsr #8
 801ad20:	0968      	lsrs	r0, r5, #5
 801ad22:	f400 60fc 	and.w	r0, r0, #2016	; 0x7e0
 801ad26:	4330      	orrs	r0, r6
 801ad28:	f3c5 05c4 	ubfx	r5, r5, #3, #5
 801ad2c:	4328      	orrs	r0, r5
 801ad2e:	f824 001e 	strh.w	r0, [r4, lr, lsl #1]
 801ad32:	9811      	ldr	r0, [sp, #68]	; 0x44
 801ad34:	4401      	add	r1, r0
 801ad36:	9812      	ldr	r0, [sp, #72]	; 0x48
 801ad38:	f10e 0e01 	add.w	lr, lr, #1
 801ad3c:	4402      	add	r2, r0
 801ad3e:	e7db      	b.n	801acf8 <_ZN8touchgfx8LCD16bpp53TextureMapper_ARGB8888_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x208>
 801ad40:	b2f0      	uxtb	r0, r6
 801ad42:	2e00      	cmp	r6, #0
 801ad44:	d0f5      	beq.n	801ad32 <_ZN8touchgfx8LCD16bpp53TextureMapper_ARGB8888_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x242>
 801ad46:	f834 c01e 	ldrh.w	ip, [r4, lr, lsl #1]
 801ad4a:	fa1f f980 	uxth.w	r9, r0
 801ad4e:	ea4f 272c 	mov.w	r7, ip, asr #8
 801ad52:	f3c5 4607 	ubfx	r6, r5, #16, #8
 801ad56:	43c0      	mvns	r0, r0
 801ad58:	b2c0      	uxtb	r0, r0
 801ad5a:	fb16 f609 	smulbb	r6, r6, r9
 801ad5e:	f007 07f8 	and.w	r7, r7, #248	; 0xf8
 801ad62:	fb07 6700 	mla	r7, r7, r0, r6
 801ad66:	f3c5 2a07 	ubfx	sl, r5, #8, #8
 801ad6a:	ea4f 06ec 	mov.w	r6, ip, asr #3
 801ad6e:	b2ed      	uxtb	r5, r5
 801ad70:	ea4f 0ccc 	mov.w	ip, ip, lsl #3
 801ad74:	fa5f fc8c 	uxtb.w	ip, ip
 801ad78:	fb15 f509 	smulbb	r5, r5, r9
 801ad7c:	fb0c 5500 	mla	r5, ip, r0, r5
 801ad80:	b2bf      	uxth	r7, r7
 801ad82:	fb1a fa09 	smulbb	sl, sl, r9
 801ad86:	b2ad      	uxth	r5, r5
 801ad88:	f006 06fc 	and.w	r6, r6, #252	; 0xfc
 801ad8c:	fb06 a600 	mla	r6, r6, r0, sl
 801ad90:	1c78      	adds	r0, r7, #1
 801ad92:	f105 0a01 	add.w	sl, r5, #1
 801ad96:	eb00 2717 	add.w	r7, r0, r7, lsr #8
 801ad9a:	eb0a 2a15 	add.w	sl, sl, r5, lsr #8
 801ad9e:	b2b6      	uxth	r6, r6
 801ada0:	f3ca 2ac4 	ubfx	sl, sl, #11, #5
 801ada4:	f407 4778 	and.w	r7, r7, #63488	; 0xf800
 801ada8:	ea4a 0707 	orr.w	r7, sl, r7
 801adac:	f106 0a01 	add.w	sl, r6, #1
 801adb0:	eb0a 2a16 	add.w	sl, sl, r6, lsr #8
 801adb4:	ea4f 1a5a 	mov.w	sl, sl, lsr #5
 801adb8:	f40a 6afc 	and.w	sl, sl, #2016	; 0x7e0
 801adbc:	ea47 070a 	orr.w	r7, r7, sl
 801adc0:	f824 701e 	strh.w	r7, [r4, lr, lsl #1]
 801adc4:	e7b5      	b.n	801ad32 <_ZN8touchgfx8LCD16bpp53TextureMapper_ARGB8888_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x242>
 801adc6:	b005      	add	sp, #20
 801adc8:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
 801adcc:	fffff800 	.word	0xfffff800

0801add0 <_ZN8touchgfx8LCD16bpp35TextureMapper_A4_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff>:
 801add0:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 801add4:	b087      	sub	sp, #28
 801add6:	468b      	mov	fp, r1
 801add8:	9815      	ldr	r0, [sp, #84]	; 0x54
 801adda:	9203      	str	r2, [sp, #12]
 801addc:	f89d 2064 	ldrb.w	r2, [sp, #100]	; 0x64
 801ade0:	9204      	str	r2, [sp, #16]
 801ade2:	e9dd 2416 	ldrd	r2, r4, [sp, #88]	; 0x58
 801ade6:	6841      	ldr	r1, [r0, #4]
 801ade8:	f8dd 9060 	ldr.w	r9, [sp, #96]	; 0x60
 801adec:	fb01 2404 	mla	r4, r1, r4, r2
 801adf0:	6802      	ldr	r2, [r0, #0]
 801adf2:	eb02 0444 	add.w	r4, r2, r4, lsl #1
 801adf6:	f8d9 2008 	ldr.w	r2, [r9, #8]
 801adfa:	3201      	adds	r2, #1
 801adfc:	f022 0201 	bic.w	r2, r2, #1
 801ae00:	9200      	str	r2, [sp, #0]
 801ae02:	f8d9 2000 	ldr.w	r2, [r9]
 801ae06:	9201      	str	r2, [sp, #4]
 801ae08:	eef7 6a00 	vmov.f32	s13, #112	; 0x3f800000  1.0
 801ae0c:	f1bb 0f00 	cmp.w	fp, #0
 801ae10:	dc03      	bgt.n	801ae1a <_ZN8touchgfx8LCD16bpp35TextureMapper_A4_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x4a>
 801ae12:	9a03      	ldr	r2, [sp, #12]
 801ae14:	2a00      	cmp	r2, #0
 801ae16:	f340 8169 	ble.w	801b0ec <_ZN8touchgfx8LCD16bpp35TextureMapper_A4_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x31c>
 801ae1a:	9a11      	ldr	r2, [sp, #68]	; 0x44
 801ae1c:	f9b9 7008 	ldrsh.w	r7, [r9, #8]
 801ae20:	f9b9 600c 	ldrsh.w	r6, [r9, #12]
 801ae24:	f502 4000 	add.w	r0, r2, #32768	; 0x8000
 801ae28:	9a12      	ldr	r2, [sp, #72]	; 0x48
 801ae2a:	f502 4100 	add.w	r1, r2, #32768	; 0x8000
 801ae2e:	2b00      	cmp	r3, #0
 801ae30:	dd0e      	ble.n	801ae50 <_ZN8touchgfx8LCD16bpp35TextureMapper_A4_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x80>
 801ae32:	1402      	asrs	r2, r0, #16
 801ae34:	d405      	bmi.n	801ae42 <_ZN8touchgfx8LCD16bpp35TextureMapper_A4_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x72>
 801ae36:	42ba      	cmp	r2, r7
 801ae38:	da03      	bge.n	801ae42 <_ZN8touchgfx8LCD16bpp35TextureMapper_A4_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x72>
 801ae3a:	140a      	asrs	r2, r1, #16
 801ae3c:	d401      	bmi.n	801ae42 <_ZN8touchgfx8LCD16bpp35TextureMapper_A4_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x72>
 801ae3e:	42b2      	cmp	r2, r6
 801ae40:	db07      	blt.n	801ae52 <_ZN8touchgfx8LCD16bpp35TextureMapper_A4_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x82>
 801ae42:	9a13      	ldr	r2, [sp, #76]	; 0x4c
 801ae44:	4410      	add	r0, r2
 801ae46:	9a14      	ldr	r2, [sp, #80]	; 0x50
 801ae48:	3b01      	subs	r3, #1
 801ae4a:	4411      	add	r1, r2
 801ae4c:	3402      	adds	r4, #2
 801ae4e:	e7ee      	b.n	801ae2e <_ZN8touchgfx8LCD16bpp35TextureMapper_A4_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x5e>
 801ae50:	d017      	beq.n	801ae82 <_ZN8touchgfx8LCD16bpp35TextureMapper_A4_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0xb2>
 801ae52:	9d13      	ldr	r5, [sp, #76]	; 0x4c
 801ae54:	1e5a      	subs	r2, r3, #1
 801ae56:	fb05 0502 	mla	r5, r5, r2, r0
 801ae5a:	142d      	asrs	r5, r5, #16
 801ae5c:	d409      	bmi.n	801ae72 <_ZN8touchgfx8LCD16bpp35TextureMapper_A4_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0xa2>
 801ae5e:	42bd      	cmp	r5, r7
 801ae60:	da07      	bge.n	801ae72 <_ZN8touchgfx8LCD16bpp35TextureMapper_A4_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0xa2>
 801ae62:	9d14      	ldr	r5, [sp, #80]	; 0x50
 801ae64:	fb05 1202 	mla	r2, r5, r2, r1
 801ae68:	1412      	asrs	r2, r2, #16
 801ae6a:	d402      	bmi.n	801ae72 <_ZN8touchgfx8LCD16bpp35TextureMapper_A4_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0xa2>
 801ae6c:	42b2      	cmp	r2, r6
 801ae6e:	f2c0 80c7 	blt.w	801b000 <_ZN8touchgfx8LCD16bpp35TextureMapper_A4_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x230>
 801ae72:	2700      	movs	r7, #0
 801ae74:	19da      	adds	r2, r3, r7
 801ae76:	2a00      	cmp	r2, #0
 801ae78:	dc3e      	bgt.n	801aef8 <_ZN8touchgfx8LCD16bpp35TextureMapper_A4_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x128>
 801ae7a:	ea23 73e3 	bic.w	r3, r3, r3, asr #31
 801ae7e:	eb04 0443 	add.w	r4, r4, r3, lsl #1
 801ae82:	f1bb 0f00 	cmp.w	fp, #0
 801ae86:	f340 8131 	ble.w	801b0ec <_ZN8touchgfx8LCD16bpp35TextureMapper_A4_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x31c>
 801ae8a:	ee30 0a04 	vadd.f32	s0, s0, s8
 801ae8e:	ee70 0aa4 	vadd.f32	s1, s1, s9
 801ae92:	eec6 7a80 	vdiv.f32	s15, s13, s0
 801ae96:	9b10      	ldr	r3, [sp, #64]	; 0x40
 801ae98:	f1bb 0b01 	subs.w	fp, fp, #1
 801ae9c:	ee31 1a05 	vadd.f32	s2, s2, s10
 801aea0:	ee20 7aa7 	vmul.f32	s14, s1, s15
 801aea4:	eeb0 6a62 	vmov.f32	s12, s5
 801aea8:	ee61 7a27 	vmul.f32	s15, s2, s15
 801aeac:	eebe 6ac8 	vcvt.s32.f32	s12, s12, #16
 801aeb0:	ee77 2a62 	vsub.f32	s5, s14, s5
 801aeb4:	ed8d 6a11 	vstr	s12, [sp, #68]	; 0x44
 801aeb8:	eefe 2ac8 	vcvt.s32.f32	s5, s5, #16
 801aebc:	eeb0 6a43 	vmov.f32	s12, s6
 801aec0:	ee37 3ac3 	vsub.f32	s6, s15, s6
 801aec4:	ee12 2a90 	vmov	r2, s5
 801aec8:	eebe 3ac8 	vcvt.s32.f32	s6, s6, #16
 801aecc:	fb92 f3f3 	sdiv	r3, r2, r3
 801aed0:	ee13 2a10 	vmov	r2, s6
 801aed4:	eebe 6ac8 	vcvt.s32.f32	s12, s12, #16
 801aed8:	9313      	str	r3, [sp, #76]	; 0x4c
 801aeda:	9b10      	ldr	r3, [sp, #64]	; 0x40
 801aedc:	fb92 f3f3 	sdiv	r3, r2, r3
 801aee0:	9a03      	ldr	r2, [sp, #12]
 801aee2:	9314      	str	r3, [sp, #80]	; 0x50
 801aee4:	ed8d 6a12 	vstr	s12, [sp, #72]	; 0x48
 801aee8:	9b10      	ldr	r3, [sp, #64]	; 0x40
 801aeea:	eeb0 3a67 	vmov.f32	s6, s15
 801aeee:	bf08      	it	eq
 801aef0:	4613      	moveq	r3, r2
 801aef2:	eef0 2a47 	vmov.f32	s5, s14
 801aef6:	e789      	b.n	801ae0c <_ZN8touchgfx8LCD16bpp35TextureMapper_A4_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x3c>
 801aef8:	1405      	asrs	r5, r0, #16
 801aefa:	d435      	bmi.n	801af68 <_ZN8touchgfx8LCD16bpp35TextureMapper_A4_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x198>
 801aefc:	f8d9 2008 	ldr.w	r2, [r9, #8]
 801af00:	42aa      	cmp	r2, r5
 801af02:	dd31      	ble.n	801af68 <_ZN8touchgfx8LCD16bpp35TextureMapper_A4_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x198>
 801af04:	140e      	asrs	r6, r1, #16
 801af06:	d42f      	bmi.n	801af68 <_ZN8touchgfx8LCD16bpp35TextureMapper_A4_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x198>
 801af08:	f8d9 200c 	ldr.w	r2, [r9, #12]
 801af0c:	42b2      	cmp	r2, r6
 801af0e:	dd2b      	ble.n	801af68 <_ZN8touchgfx8LCD16bpp35TextureMapper_A4_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x198>
 801af10:	9a00      	ldr	r2, [sp, #0]
 801af12:	fb06 5502 	mla	r5, r6, r2, r5
 801af16:	086a      	lsrs	r2, r5, #1
 801af18:	9e01      	ldr	r6, [sp, #4]
 801af1a:	5cb2      	ldrb	r2, [r6, r2]
 801af1c:	07ee      	lsls	r6, r5, #31
 801af1e:	bf54      	ite	pl
 801af20:	f002 020f 	andpl.w	r2, r2, #15
 801af24:	1112      	asrmi	r2, r2, #4
 801af26:	eb02 1202 	add.w	r2, r2, r2, lsl #4
 801af2a:	b2d2      	uxtb	r2, r2
 801af2c:	b1e2      	cbz	r2, 801af68 <_ZN8touchgfx8LCD16bpp35TextureMapper_A4_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x198>
 801af2e:	9d04      	ldr	r5, [sp, #16]
 801af30:	436a      	muls	r2, r5
 801af32:	1c55      	adds	r5, r2, #1
 801af34:	eb05 2222 	add.w	r2, r5, r2, asr #8
 801af38:	4d6e      	ldr	r5, [pc, #440]	; (801b0f4 <_ZN8touchgfx8LCD16bpp35TextureMapper_A4_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x324>)
 801af3a:	682d      	ldr	r5, [r5, #0]
 801af3c:	1212      	asrs	r2, r2, #8
 801af3e:	0a2e      	lsrs	r6, r5, #8
 801af40:	2aff      	cmp	r2, #255	; 0xff
 801af42:	9605      	str	r6, [sp, #20]
 801af44:	d116      	bne.n	801af74 <_ZN8touchgfx8LCD16bpp35TextureMapper_A4_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x1a4>
 801af46:	f06f 0201 	mvn.w	r2, #1
 801af4a:	fb02 fc07 	mul.w	ip, r2, r7
 801af4e:	f426 66ff 	bic.w	r6, r6, #2040	; 0x7f8
 801af52:	096a      	lsrs	r2, r5, #5
 801af54:	f402 62fc 	and.w	r2, r2, #2016	; 0x7e0
 801af58:	f026 0607 	bic.w	r6, r6, #7
 801af5c:	4316      	orrs	r6, r2
 801af5e:	f3c5 05c4 	ubfx	r5, r5, #3, #5
 801af62:	432e      	orrs	r6, r5
 801af64:	f824 600c 	strh.w	r6, [r4, ip]
 801af68:	9a13      	ldr	r2, [sp, #76]	; 0x4c
 801af6a:	4410      	add	r0, r2
 801af6c:	9a14      	ldr	r2, [sp, #80]	; 0x50
 801af6e:	3f01      	subs	r7, #1
 801af70:	4411      	add	r1, r2
 801af72:	e77f      	b.n	801ae74 <_ZN8touchgfx8LCD16bpp35TextureMapper_A4_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0xa4>
 801af74:	f06f 0601 	mvn.w	r6, #1
 801af78:	437e      	muls	r6, r7
 801af7a:	fa1f fa82 	uxth.w	sl, r2
 801af7e:	f834 8006 	ldrh.w	r8, [r4, r6]
 801af82:	9602      	str	r6, [sp, #8]
 801af84:	ea4f 2e28 	mov.w	lr, r8, asr #8
 801af88:	f3c5 4c07 	ubfx	ip, r5, #16, #8
 801af8c:	43d2      	mvns	r2, r2
 801af8e:	b2d2      	uxtb	r2, r2
 801af90:	fb1c fc0a 	smulbb	ip, ip, sl
 801af94:	f00e 0ef8 	and.w	lr, lr, #248	; 0xf8
 801af98:	fb0e ce02 	mla	lr, lr, r2, ip
 801af9c:	b2ed      	uxtb	r5, r5
 801af9e:	ea4f 0ce8 	mov.w	ip, r8, asr #3
 801afa2:	ea4f 08c8 	mov.w	r8, r8, lsl #3
 801afa6:	f89d 6014 	ldrb.w	r6, [sp, #20]
 801afaa:	fa5f f888 	uxtb.w	r8, r8
 801afae:	fb15 f50a 	smulbb	r5, r5, sl
 801afb2:	fb08 5502 	mla	r5, r8, r2, r5
 801afb6:	fa1f fe8e 	uxth.w	lr, lr
 801afba:	fb16 f60a 	smulbb	r6, r6, sl
 801afbe:	b2ad      	uxth	r5, r5
 801afc0:	f00c 0cfc 	and.w	ip, ip, #252	; 0xfc
 801afc4:	fb0c 6c02 	mla	ip, ip, r2, r6
 801afc8:	f10e 0201 	add.w	r2, lr, #1
 801afcc:	1c6e      	adds	r6, r5, #1
 801afce:	eb02 2e1e 	add.w	lr, r2, lr, lsr #8
 801afd2:	eb06 2615 	add.w	r6, r6, r5, lsr #8
 801afd6:	fa1f fc8c 	uxth.w	ip, ip
 801afda:	f3c6 26c4 	ubfx	r6, r6, #11, #5
 801afde:	f40e 4e78 	and.w	lr, lr, #63488	; 0xf800
 801afe2:	ea46 0e0e 	orr.w	lr, r6, lr
 801afe6:	f10c 0601 	add.w	r6, ip, #1
 801afea:	eb06 261c 	add.w	r6, r6, ip, lsr #8
 801afee:	0976      	lsrs	r6, r6, #5
 801aff0:	f406 66fc 	and.w	r6, r6, #2016	; 0x7e0
 801aff4:	9a02      	ldr	r2, [sp, #8]
 801aff6:	ea4e 0e06 	orr.w	lr, lr, r6
 801affa:	f824 e002 	strh.w	lr, [r4, r2]
 801affe:	e7b3      	b.n	801af68 <_ZN8touchgfx8LCD16bpp35TextureMapper_A4_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x198>
 801b000:	f04f 0800 	mov.w	r8, #0
 801b004:	eba3 0208 	sub.w	r2, r3, r8
 801b008:	2a00      	cmp	r2, #0
 801b00a:	f77f af36 	ble.w	801ae7a <_ZN8touchgfx8LCD16bpp35TextureMapper_A4_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0xaa>
 801b00e:	9e00      	ldr	r6, [sp, #0]
 801b010:	1402      	asrs	r2, r0, #16
 801b012:	140d      	asrs	r5, r1, #16
 801b014:	fb06 2505 	mla	r5, r6, r5, r2
 801b018:	086a      	lsrs	r2, r5, #1
 801b01a:	9e01      	ldr	r6, [sp, #4]
 801b01c:	5cb2      	ldrb	r2, [r6, r2]
 801b01e:	07ed      	lsls	r5, r5, #31
 801b020:	bf54      	ite	pl
 801b022:	f002 020f 	andpl.w	r2, r2, #15
 801b026:	1112      	asrmi	r2, r2, #4
 801b028:	eb02 1202 	add.w	r2, r2, r2, lsl #4
 801b02c:	b2d2      	uxtb	r2, r2
 801b02e:	b1c2      	cbz	r2, 801b062 <_ZN8touchgfx8LCD16bpp35TextureMapper_A4_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x292>
 801b030:	9d04      	ldr	r5, [sp, #16]
 801b032:	436a      	muls	r2, r5
 801b034:	1c55      	adds	r5, r2, #1
 801b036:	eb05 2222 	add.w	r2, r5, r2, asr #8
 801b03a:	4d2e      	ldr	r5, [pc, #184]	; (801b0f4 <_ZN8touchgfx8LCD16bpp35TextureMapper_A4_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x324>)
 801b03c:	1212      	asrs	r2, r2, #8
 801b03e:	682e      	ldr	r6, [r5, #0]
 801b040:	2aff      	cmp	r2, #255	; 0xff
 801b042:	ea4f 2516 	mov.w	r5, r6, lsr #8
 801b046:	d113      	bne.n	801b070 <_ZN8touchgfx8LCD16bpp35TextureMapper_A4_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x2a0>
 801b048:	0972      	lsrs	r2, r6, #5
 801b04a:	f425 65ff 	bic.w	r5, r5, #2040	; 0x7f8
 801b04e:	f402 62fc 	and.w	r2, r2, #2016	; 0x7e0
 801b052:	f025 0507 	bic.w	r5, r5, #7
 801b056:	4315      	orrs	r5, r2
 801b058:	f3c6 06c4 	ubfx	r6, r6, #3, #5
 801b05c:	4335      	orrs	r5, r6
 801b05e:	f824 5018 	strh.w	r5, [r4, r8, lsl #1]
 801b062:	9a13      	ldr	r2, [sp, #76]	; 0x4c
 801b064:	4410      	add	r0, r2
 801b066:	9a14      	ldr	r2, [sp, #80]	; 0x50
 801b068:	f108 0801 	add.w	r8, r8, #1
 801b06c:	4411      	add	r1, r2
 801b06e:	e7c9      	b.n	801b004 <_ZN8touchgfx8LCD16bpp35TextureMapper_A4_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x234>
 801b070:	f834 e018 	ldrh.w	lr, [r4, r8, lsl #1]
 801b074:	fa1f fa82 	uxth.w	sl, r2
 801b078:	ea4f 2c2e 	mov.w	ip, lr, asr #8
 801b07c:	f3c6 4707 	ubfx	r7, r6, #16, #8
 801b080:	43d2      	mvns	r2, r2
 801b082:	b2d2      	uxtb	r2, r2
 801b084:	fb17 f70a 	smulbb	r7, r7, sl
 801b088:	f00c 0cf8 	and.w	ip, ip, #248	; 0xf8
 801b08c:	fb0c 7c02 	mla	ip, ip, r2, r7
 801b090:	b2f6      	uxtb	r6, r6
 801b092:	ea4f 07ee 	mov.w	r7, lr, asr #3
 801b096:	ea4f 0ece 	mov.w	lr, lr, lsl #3
 801b09a:	fa5f fe8e 	uxtb.w	lr, lr
 801b09e:	fb16 f60a 	smulbb	r6, r6, sl
 801b0a2:	fb0e 6602 	mla	r6, lr, r2, r6
 801b0a6:	b2ed      	uxtb	r5, r5
 801b0a8:	fa1f fc8c 	uxth.w	ip, ip
 801b0ac:	fb15 f50a 	smulbb	r5, r5, sl
 801b0b0:	b2b6      	uxth	r6, r6
 801b0b2:	f007 07fc 	and.w	r7, r7, #252	; 0xfc
 801b0b6:	fb07 5702 	mla	r7, r7, r2, r5
 801b0ba:	f10c 0201 	add.w	r2, ip, #1
 801b0be:	1c75      	adds	r5, r6, #1
 801b0c0:	eb02 2c1c 	add.w	ip, r2, ip, lsr #8
 801b0c4:	eb05 2516 	add.w	r5, r5, r6, lsr #8
 801b0c8:	b2bf      	uxth	r7, r7
 801b0ca:	f3c5 25c4 	ubfx	r5, r5, #11, #5
 801b0ce:	f40c 4c78 	and.w	ip, ip, #63488	; 0xf800
 801b0d2:	ea45 0c0c 	orr.w	ip, r5, ip
 801b0d6:	1c7d      	adds	r5, r7, #1
 801b0d8:	eb05 2517 	add.w	r5, r5, r7, lsr #8
 801b0dc:	096d      	lsrs	r5, r5, #5
 801b0de:	f405 65fc 	and.w	r5, r5, #2016	; 0x7e0
 801b0e2:	ea4c 0c05 	orr.w	ip, ip, r5
 801b0e6:	f824 c018 	strh.w	ip, [r4, r8, lsl #1]
 801b0ea:	e7ba      	b.n	801b062 <_ZN8touchgfx8LCD16bpp35TextureMapper_A4_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x292>
 801b0ec:	b007      	add	sp, #28
 801b0ee:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
 801b0f2:	bf00      	nop
 801b0f4:	20012f34 	.word	0x20012f34

0801b0f8 <_ZN8touchgfx8LCD16bpp37TextureMapper_A4_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff>:
 801b0f8:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 801b0fc:	b087      	sub	sp, #28
 801b0fe:	f8df 830c 	ldr.w	r8, [pc, #780]	; 801b40c <_ZN8touchgfx8LCD16bpp37TextureMapper_A4_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x314>
 801b102:	9815      	ldr	r0, [sp, #84]	; 0x54
 801b104:	9205      	str	r2, [sp, #20]
 801b106:	e9dd 2416 	ldrd	r2, r4, [sp, #88]	; 0x58
 801b10a:	9101      	str	r1, [sp, #4]
 801b10c:	6841      	ldr	r1, [r0, #4]
 801b10e:	f8dd b060 	ldr.w	fp, [sp, #96]	; 0x60
 801b112:	fb01 2404 	mla	r4, r1, r4, r2
 801b116:	6802      	ldr	r2, [r0, #0]
 801b118:	eb02 0444 	add.w	r4, r2, r4, lsl #1
 801b11c:	f8db 2008 	ldr.w	r2, [fp, #8]
 801b120:	3201      	adds	r2, #1
 801b122:	f022 0201 	bic.w	r2, r2, #1
 801b126:	9202      	str	r2, [sp, #8]
 801b128:	f8db 2000 	ldr.w	r2, [fp]
 801b12c:	9203      	str	r2, [sp, #12]
 801b12e:	eef7 6a00 	vmov.f32	s13, #112	; 0x3f800000  1.0
 801b132:	9a01      	ldr	r2, [sp, #4]
 801b134:	2a00      	cmp	r2, #0
 801b136:	dc03      	bgt.n	801b140 <_ZN8touchgfx8LCD16bpp37TextureMapper_A4_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x48>
 801b138:	9a05      	ldr	r2, [sp, #20]
 801b13a:	2a00      	cmp	r2, #0
 801b13c:	f340 8162 	ble.w	801b404 <_ZN8touchgfx8LCD16bpp37TextureMapper_A4_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x30c>
 801b140:	9a11      	ldr	r2, [sp, #68]	; 0x44
 801b142:	f9bb 7008 	ldrsh.w	r7, [fp, #8]
 801b146:	f9bb 600c 	ldrsh.w	r6, [fp, #12]
 801b14a:	f502 4000 	add.w	r0, r2, #32768	; 0x8000
 801b14e:	9a12      	ldr	r2, [sp, #72]	; 0x48
 801b150:	f502 4100 	add.w	r1, r2, #32768	; 0x8000
 801b154:	2b00      	cmp	r3, #0
 801b156:	dd0e      	ble.n	801b176 <_ZN8touchgfx8LCD16bpp37TextureMapper_A4_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x7e>
 801b158:	1402      	asrs	r2, r0, #16
 801b15a:	d405      	bmi.n	801b168 <_ZN8touchgfx8LCD16bpp37TextureMapper_A4_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x70>
 801b15c:	42ba      	cmp	r2, r7
 801b15e:	da03      	bge.n	801b168 <_ZN8touchgfx8LCD16bpp37TextureMapper_A4_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x70>
 801b160:	140a      	asrs	r2, r1, #16
 801b162:	d401      	bmi.n	801b168 <_ZN8touchgfx8LCD16bpp37TextureMapper_A4_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x70>
 801b164:	42b2      	cmp	r2, r6
 801b166:	db07      	blt.n	801b178 <_ZN8touchgfx8LCD16bpp37TextureMapper_A4_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x80>
 801b168:	9a13      	ldr	r2, [sp, #76]	; 0x4c
 801b16a:	4410      	add	r0, r2
 801b16c:	9a14      	ldr	r2, [sp, #80]	; 0x50
 801b16e:	3b01      	subs	r3, #1
 801b170:	4411      	add	r1, r2
 801b172:	3402      	adds	r4, #2
 801b174:	e7ee      	b.n	801b154 <_ZN8touchgfx8LCD16bpp37TextureMapper_A4_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x5c>
 801b176:	d017      	beq.n	801b1a8 <_ZN8touchgfx8LCD16bpp37TextureMapper_A4_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0xb0>
 801b178:	9d13      	ldr	r5, [sp, #76]	; 0x4c
 801b17a:	1e5a      	subs	r2, r3, #1
 801b17c:	fb05 0502 	mla	r5, r5, r2, r0
 801b180:	142d      	asrs	r5, r5, #16
 801b182:	d409      	bmi.n	801b198 <_ZN8touchgfx8LCD16bpp37TextureMapper_A4_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0xa0>
 801b184:	42bd      	cmp	r5, r7
 801b186:	da07      	bge.n	801b198 <_ZN8touchgfx8LCD16bpp37TextureMapper_A4_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0xa0>
 801b188:	9d14      	ldr	r5, [sp, #80]	; 0x50
 801b18a:	fb05 1202 	mla	r2, r5, r2, r1
 801b18e:	1412      	asrs	r2, r2, #16
 801b190:	d402      	bmi.n	801b198 <_ZN8touchgfx8LCD16bpp37TextureMapper_A4_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0xa0>
 801b192:	42b2      	cmp	r2, r6
 801b194:	f2c0 80c3 	blt.w	801b31e <_ZN8touchgfx8LCD16bpp37TextureMapper_A4_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x226>
 801b198:	2500      	movs	r5, #0
 801b19a:	195a      	adds	r2, r3, r5
 801b19c:	2a00      	cmp	r2, #0
 801b19e:	dc3f      	bgt.n	801b220 <_ZN8touchgfx8LCD16bpp37TextureMapper_A4_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x128>
 801b1a0:	ea23 73e3 	bic.w	r3, r3, r3, asr #31
 801b1a4:	eb04 0443 	add.w	r4, r4, r3, lsl #1
 801b1a8:	9b01      	ldr	r3, [sp, #4]
 801b1aa:	2b00      	cmp	r3, #0
 801b1ac:	f340 812a 	ble.w	801b404 <_ZN8touchgfx8LCD16bpp37TextureMapper_A4_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x30c>
 801b1b0:	ee30 0a04 	vadd.f32	s0, s0, s8
 801b1b4:	ee70 0aa4 	vadd.f32	s1, s1, s9
 801b1b8:	eec6 7a80 	vdiv.f32	s15, s13, s0
 801b1bc:	9b10      	ldr	r3, [sp, #64]	; 0x40
 801b1be:	ee31 1a05 	vadd.f32	s2, s2, s10
 801b1c2:	ee20 7aa7 	vmul.f32	s14, s1, s15
 801b1c6:	eeb0 6a62 	vmov.f32	s12, s5
 801b1ca:	ee61 7a27 	vmul.f32	s15, s2, s15
 801b1ce:	eebe 6ac8 	vcvt.s32.f32	s12, s12, #16
 801b1d2:	ee77 2a62 	vsub.f32	s5, s14, s5
 801b1d6:	ed8d 6a11 	vstr	s12, [sp, #68]	; 0x44
 801b1da:	eefe 2ac8 	vcvt.s32.f32	s5, s5, #16
 801b1de:	eeb0 6a43 	vmov.f32	s12, s6
 801b1e2:	ee37 3ac3 	vsub.f32	s6, s15, s6
 801b1e6:	ee12 2a90 	vmov	r2, s5
 801b1ea:	eebe 3ac8 	vcvt.s32.f32	s6, s6, #16
 801b1ee:	fb92 f3f3 	sdiv	r3, r2, r3
 801b1f2:	ee13 2a10 	vmov	r2, s6
 801b1f6:	9313      	str	r3, [sp, #76]	; 0x4c
 801b1f8:	9b10      	ldr	r3, [sp, #64]	; 0x40
 801b1fa:	fb92 f3f3 	sdiv	r3, r2, r3
 801b1fe:	9314      	str	r3, [sp, #80]	; 0x50
 801b200:	9b01      	ldr	r3, [sp, #4]
 801b202:	9a05      	ldr	r2, [sp, #20]
 801b204:	eebe 6ac8 	vcvt.s32.f32	s12, s12, #16
 801b208:	3b01      	subs	r3, #1
 801b20a:	9301      	str	r3, [sp, #4]
 801b20c:	ed8d 6a12 	vstr	s12, [sp, #72]	; 0x48
 801b210:	9b10      	ldr	r3, [sp, #64]	; 0x40
 801b212:	eeb0 3a67 	vmov.f32	s6, s15
 801b216:	bf08      	it	eq
 801b218:	4613      	moveq	r3, r2
 801b21a:	eef0 2a47 	vmov.f32	s5, s14
 801b21e:	e788      	b.n	801b132 <_ZN8touchgfx8LCD16bpp37TextureMapper_A4_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x3a>
 801b220:	1406      	asrs	r6, r0, #16
 801b222:	d42c      	bmi.n	801b27e <_ZN8touchgfx8LCD16bpp37TextureMapper_A4_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x186>
 801b224:	f8db 2008 	ldr.w	r2, [fp, #8]
 801b228:	42b2      	cmp	r2, r6
 801b22a:	dd28      	ble.n	801b27e <_ZN8touchgfx8LCD16bpp37TextureMapper_A4_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x186>
 801b22c:	140f      	asrs	r7, r1, #16
 801b22e:	d426      	bmi.n	801b27e <_ZN8touchgfx8LCD16bpp37TextureMapper_A4_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x186>
 801b230:	f8db 200c 	ldr.w	r2, [fp, #12]
 801b234:	42ba      	cmp	r2, r7
 801b236:	dd22      	ble.n	801b27e <_ZN8touchgfx8LCD16bpp37TextureMapper_A4_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x186>
 801b238:	9a02      	ldr	r2, [sp, #8]
 801b23a:	fb07 6602 	mla	r6, r7, r2, r6
 801b23e:	0872      	lsrs	r2, r6, #1
 801b240:	9f03      	ldr	r7, [sp, #12]
 801b242:	5cba      	ldrb	r2, [r7, r2]
 801b244:	07f6      	lsls	r6, r6, #31
 801b246:	bf54      	ite	pl
 801b248:	f002 020f 	andpl.w	r2, r2, #15
 801b24c:	1112      	asrmi	r2, r2, #4
 801b24e:	eb02 1202 	add.w	r2, r2, r2, lsl #4
 801b252:	b2d2      	uxtb	r2, r2
 801b254:	2aff      	cmp	r2, #255	; 0xff
 801b256:	d118      	bne.n	801b28a <_ZN8touchgfx8LCD16bpp37TextureMapper_A4_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x192>
 801b258:	f8d8 2000 	ldr.w	r2, [r8]
 801b25c:	f06f 0601 	mvn.w	r6, #1
 801b260:	fb06 f705 	mul.w	r7, r6, r5
 801b264:	f2a6 76fe 	subw	r6, r6, #2046	; 0x7fe
 801b268:	ea06 2c12 	and.w	ip, r6, r2, lsr #8
 801b26c:	0956      	lsrs	r6, r2, #5
 801b26e:	f406 66fc 	and.w	r6, r6, #2016	; 0x7e0
 801b272:	ea4c 0606 	orr.w	r6, ip, r6
 801b276:	f3c2 02c4 	ubfx	r2, r2, #3, #5
 801b27a:	4316      	orrs	r6, r2
 801b27c:	53e6      	strh	r6, [r4, r7]
 801b27e:	9a13      	ldr	r2, [sp, #76]	; 0x4c
 801b280:	4410      	add	r0, r2
 801b282:	9a14      	ldr	r2, [sp, #80]	; 0x50
 801b284:	3d01      	subs	r5, #1
 801b286:	4411      	add	r1, r2
 801b288:	e787      	b.n	801b19a <_ZN8touchgfx8LCD16bpp37TextureMapper_A4_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0xa2>
 801b28a:	2a00      	cmp	r2, #0
 801b28c:	d0f7      	beq.n	801b27e <_ZN8touchgfx8LCD16bpp37TextureMapper_A4_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x186>
 801b28e:	f06f 0601 	mvn.w	r6, #1
 801b292:	436e      	muls	r6, r5
 801b294:	f8d8 c000 	ldr.w	ip, [r8]
 801b298:	f834 e006 	ldrh.w	lr, [r4, r6]
 801b29c:	9604      	str	r6, [sp, #16]
 801b29e:	fa1f f982 	uxth.w	r9, r2
 801b2a2:	ea4f 272e 	mov.w	r7, lr, asr #8
 801b2a6:	f3cc 4607 	ubfx	r6, ip, #16, #8
 801b2aa:	43d2      	mvns	r2, r2
 801b2ac:	b2d2      	uxtb	r2, r2
 801b2ae:	fb16 f609 	smulbb	r6, r6, r9
 801b2b2:	f007 07f8 	and.w	r7, r7, #248	; 0xf8
 801b2b6:	fb07 6702 	mla	r7, r7, r2, r6
 801b2ba:	f3cc 2a07 	ubfx	sl, ip, #8, #8
 801b2be:	ea4f 06ee 	mov.w	r6, lr, asr #3
 801b2c2:	fa5f fc8c 	uxtb.w	ip, ip
 801b2c6:	ea4f 0ece 	mov.w	lr, lr, lsl #3
 801b2ca:	fa5f fe8e 	uxtb.w	lr, lr
 801b2ce:	fb1c fc09 	smulbb	ip, ip, r9
 801b2d2:	fb0e cc02 	mla	ip, lr, r2, ip
 801b2d6:	b2bf      	uxth	r7, r7
 801b2d8:	fb1a fa09 	smulbb	sl, sl, r9
 801b2dc:	fa1f fc8c 	uxth.w	ip, ip
 801b2e0:	f006 06fc 	and.w	r6, r6, #252	; 0xfc
 801b2e4:	fb06 a602 	mla	r6, r6, r2, sl
 801b2e8:	1c7a      	adds	r2, r7, #1
 801b2ea:	f10c 0a01 	add.w	sl, ip, #1
 801b2ee:	eb02 2717 	add.w	r7, r2, r7, lsr #8
 801b2f2:	eb0a 2a1c 	add.w	sl, sl, ip, lsr #8
 801b2f6:	b2b6      	uxth	r6, r6
 801b2f8:	f3ca 2ac4 	ubfx	sl, sl, #11, #5
 801b2fc:	f407 4778 	and.w	r7, r7, #63488	; 0xf800
 801b300:	ea4a 0707 	orr.w	r7, sl, r7
 801b304:	f106 0a01 	add.w	sl, r6, #1
 801b308:	eb0a 2a16 	add.w	sl, sl, r6, lsr #8
 801b30c:	ea4f 1a5a 	mov.w	sl, sl, lsr #5
 801b310:	f40a 6afc 	and.w	sl, sl, #2016	; 0x7e0
 801b314:	9a04      	ldr	r2, [sp, #16]
 801b316:	ea47 070a 	orr.w	r7, r7, sl
 801b31a:	52a7      	strh	r7, [r4, r2]
 801b31c:	e7af      	b.n	801b27e <_ZN8touchgfx8LCD16bpp37TextureMapper_A4_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x186>
 801b31e:	f04f 0e00 	mov.w	lr, #0
 801b322:	eba3 020e 	sub.w	r2, r3, lr
 801b326:	2a00      	cmp	r2, #0
 801b328:	f77f af3a 	ble.w	801b1a0 <_ZN8touchgfx8LCD16bpp37TextureMapper_A4_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0xa8>
 801b32c:	9e02      	ldr	r6, [sp, #8]
 801b32e:	1402      	asrs	r2, r0, #16
 801b330:	140d      	asrs	r5, r1, #16
 801b332:	fb06 2505 	mla	r5, r6, r5, r2
 801b336:	086a      	lsrs	r2, r5, #1
 801b338:	9e03      	ldr	r6, [sp, #12]
 801b33a:	5cb2      	ldrb	r2, [r6, r2]
 801b33c:	07ed      	lsls	r5, r5, #31
 801b33e:	bf54      	ite	pl
 801b340:	f002 020f 	andpl.w	r2, r2, #15
 801b344:	1112      	asrmi	r2, r2, #4
 801b346:	eb02 1202 	add.w	r2, r2, r2, lsl #4
 801b34a:	b2d2      	uxtb	r2, r2
 801b34c:	2aff      	cmp	r2, #255	; 0xff
 801b34e:	d115      	bne.n	801b37c <_ZN8touchgfx8LCD16bpp37TextureMapper_A4_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x284>
 801b350:	f8d8 5000 	ldr.w	r5, [r8]
 801b354:	f6a2 02ff 	subw	r2, r2, #2303	; 0x8ff
 801b358:	ea02 2615 	and.w	r6, r2, r5, lsr #8
 801b35c:	096a      	lsrs	r2, r5, #5
 801b35e:	f402 62fc 	and.w	r2, r2, #2016	; 0x7e0
 801b362:	4332      	orrs	r2, r6
 801b364:	f3c5 05c4 	ubfx	r5, r5, #3, #5
 801b368:	432a      	orrs	r2, r5
 801b36a:	f824 201e 	strh.w	r2, [r4, lr, lsl #1]
 801b36e:	9a13      	ldr	r2, [sp, #76]	; 0x4c
 801b370:	4410      	add	r0, r2
 801b372:	9a14      	ldr	r2, [sp, #80]	; 0x50
 801b374:	f10e 0e01 	add.w	lr, lr, #1
 801b378:	4411      	add	r1, r2
 801b37a:	e7d2      	b.n	801b322 <_ZN8touchgfx8LCD16bpp37TextureMapper_A4_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x22a>
 801b37c:	2a00      	cmp	r2, #0
 801b37e:	d0f6      	beq.n	801b36e <_ZN8touchgfx8LCD16bpp37TextureMapper_A4_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x276>
 801b380:	f8d8 7000 	ldr.w	r7, [r8]
 801b384:	f834 c01e 	ldrh.w	ip, [r4, lr, lsl #1]
 801b388:	fa1f f982 	uxth.w	r9, r2
 801b38c:	ea4f 262c 	mov.w	r6, ip, asr #8
 801b390:	f3c7 4507 	ubfx	r5, r7, #16, #8
 801b394:	43d2      	mvns	r2, r2
 801b396:	b2d2      	uxtb	r2, r2
 801b398:	fb15 f509 	smulbb	r5, r5, r9
 801b39c:	f006 06f8 	and.w	r6, r6, #248	; 0xf8
 801b3a0:	fb06 5602 	mla	r6, r6, r2, r5
 801b3a4:	f3c7 2a07 	ubfx	sl, r7, #8, #8
 801b3a8:	ea4f 05ec 	mov.w	r5, ip, asr #3
 801b3ac:	b2ff      	uxtb	r7, r7
 801b3ae:	ea4f 0ccc 	mov.w	ip, ip, lsl #3
 801b3b2:	fa5f fc8c 	uxtb.w	ip, ip
 801b3b6:	fb17 f709 	smulbb	r7, r7, r9
 801b3ba:	fb0c 7702 	mla	r7, ip, r2, r7
 801b3be:	b2b6      	uxth	r6, r6
 801b3c0:	fb1a fa09 	smulbb	sl, sl, r9
 801b3c4:	b2bf      	uxth	r7, r7
 801b3c6:	f005 05fc 	and.w	r5, r5, #252	; 0xfc
 801b3ca:	fb05 a502 	mla	r5, r5, r2, sl
 801b3ce:	1c72      	adds	r2, r6, #1
 801b3d0:	f107 0a01 	add.w	sl, r7, #1
 801b3d4:	eb02 2616 	add.w	r6, r2, r6, lsr #8
 801b3d8:	eb0a 2a17 	add.w	sl, sl, r7, lsr #8
 801b3dc:	b2ad      	uxth	r5, r5
 801b3de:	f3ca 2ac4 	ubfx	sl, sl, #11, #5
 801b3e2:	f406 4678 	and.w	r6, r6, #63488	; 0xf800
 801b3e6:	ea4a 0606 	orr.w	r6, sl, r6
 801b3ea:	f105 0a01 	add.w	sl, r5, #1
 801b3ee:	eb0a 2a15 	add.w	sl, sl, r5, lsr #8
 801b3f2:	ea4f 1a5a 	mov.w	sl, sl, lsr #5
 801b3f6:	f40a 6afc 	and.w	sl, sl, #2016	; 0x7e0
 801b3fa:	ea46 060a 	orr.w	r6, r6, sl
 801b3fe:	f824 601e 	strh.w	r6, [r4, lr, lsl #1]
 801b402:	e7b4      	b.n	801b36e <_ZN8touchgfx8LCD16bpp37TextureMapper_A4_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x276>
 801b404:	b007      	add	sp, #28
 801b406:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
 801b40a:	bf00      	nop
 801b40c:	20012f34 	.word	0x20012f34

0801b410 <_ZN8touchgfx8LCD16bppD1Ev>:
 801b410:	4770      	bx	lr

0801b412 <_ZN8touchgfx8LCD16bpp19DecompressorL8_LZW9D1Ev>:
 801b412:	4770      	bx	lr

0801b414 <_ZN8touchgfx8LCD16bpp18DecompressorL8_RLED1Ev>:
 801b414:	4770      	bx	lr

0801b416 <_ZN8touchgfx8LCD16bpp17DecompressorL8_L4D1Ev>:
 801b416:	4770      	bx	lr

0801b418 <_ZN8touchgfx8LCD16bpp43TextureMapper_A4_BilinearInterpolation_NoGAD1Ev>:
 801b418:	4770      	bx	lr

0801b41a <_ZN8touchgfx8LCD16bpp41TextureMapper_A4_BilinearInterpolation_GAD1Ev>:
 801b41a:	4770      	bx	lr

0801b41c <_ZN8touchgfx8LCD16bpp37TextureMapper_A4_NearestNeighbor_NoGAD1Ev>:
 801b41c:	4770      	bx	lr

0801b41e <_ZN8touchgfx8LCD16bpp35TextureMapper_A4_NearestNeighbor_GAD1Ev>:
 801b41e:	4770      	bx	lr

0801b420 <_ZN8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGAD1Ev>:
 801b420:	4770      	bx	lr

0801b422 <_ZN8touchgfx8LCD16bpp57TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_GAD1Ev>:
 801b422:	4770      	bx	lr

0801b424 <_ZN8touchgfx8LCD16bpp53TextureMapper_ARGB8888_NonOpaque_NearestNeighbor_NoGAD1Ev>:
 801b424:	4770      	bx	lr

0801b426 <_ZN8touchgfx8LCD16bpp51TextureMapper_ARGB8888_NonOpaque_NearestNeighbor_GAD1Ev>:
 801b426:	4770      	bx	lr

0801b428 <_ZN8touchgfx8LCD16bpp54TextureMapper_RGB565_Opaque_BilinearInterpolation_NoGAD1Ev>:
 801b428:	4770      	bx	lr

0801b42a <_ZN8touchgfx8LCD16bpp52TextureMapper_RGB565_Opaque_BilinearInterpolation_GAD1Ev>:
 801b42a:	4770      	bx	lr

0801b42c <_ZN8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGAD1Ev>:
 801b42c:	4770      	bx	lr

0801b42e <_ZN8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GAD1Ev>:
 801b42e:	4770      	bx	lr

0801b430 <_ZN8touchgfx8LCD16bpp48TextureMapper_RGB565_Opaque_NearestNeighbor_NoGAD1Ev>:
 801b430:	4770      	bx	lr

0801b432 <_ZN8touchgfx8LCD16bpp46TextureMapper_RGB565_Opaque_NearestNeighbor_GAD1Ev>:
 801b432:	4770      	bx	lr

0801b434 <_ZN8touchgfx8LCD16bpp51TextureMapper_RGB565_NonOpaque_NearestNeighbor_NoGAD1Ev>:
 801b434:	4770      	bx	lr

0801b436 <_ZN8touchgfx8LCD16bpp49TextureMapper_RGB565_NonOpaque_NearestNeighbor_GAD1Ev>:
 801b436:	4770      	bx	lr

0801b438 <_ZN8touchgfx8LCD16bpp62TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGAD1Ev>:
 801b438:	4770      	bx	lr

0801b43a <_ZN8touchgfx8LCD16bpp60TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_GAD1Ev>:
 801b43a:	4770      	bx	lr

0801b43c <_ZN8touchgfx8LCD16bpp56TextureMapper_L8_ARGB8888_NonOpaque_NearestNeighbor_NoGAD1Ev>:
 801b43c:	4770      	bx	lr

0801b43e <_ZN8touchgfx8LCD16bpp54TextureMapper_L8_ARGB8888_NonOpaque_NearestNeighbor_GAD1Ev>:
 801b43e:	4770      	bx	lr

0801b440 <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_NoGAD1Ev>:
 801b440:	4770      	bx	lr

0801b442 <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_GAD1Ev>:
 801b442:	4770      	bx	lr

0801b444 <_ZN8touchgfx8LCD16bpp51TextureMapper_L8_RGB888_Opaque_NearestNeighbor_NoGAD1Ev>:
 801b444:	4770      	bx	lr

0801b446 <_ZN8touchgfx8LCD16bpp49TextureMapper_L8_RGB888_Opaque_NearestNeighbor_GAD1Ev>:
 801b446:	4770      	bx	lr

0801b448 <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_NoGAD1Ev>:
 801b448:	4770      	bx	lr

0801b44a <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_GAD1Ev>:
 801b44a:	4770      	bx	lr

0801b44c <_ZN8touchgfx8LCD16bpp51TextureMapper_L8_RGB565_Opaque_NearestNeighbor_NoGAD1Ev>:
 801b44c:	4770      	bx	lr

0801b44e <_ZN8touchgfx8LCD16bpp49TextureMapper_L8_RGB565_Opaque_NearestNeighbor_GAD1Ev>:
 801b44e:	4770      	bx	lr

0801b450 <_ZN8touchgfx8LCD16bpp29copyFrameBufferRegionToMemoryERKNS_4RectES3_t>:
 801b450:	e92d 47f0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, lr}
 801b454:	b088      	sub	sp, #32
 801b456:	ac08      	add	r4, sp, #32
 801b458:	4606      	mov	r6, r0
 801b45a:	f824 3d0c 	strh.w	r3, [r4, #-12]!
 801b45e:	4620      	mov	r0, r4
 801b460:	4688      	mov	r8, r1
 801b462:	4691      	mov	r9, r2
 801b464:	f7fd fc62 	bl	8018d2c <_ZNK8touchgfx6Bitmap7getDataEv>
 801b468:	6833      	ldr	r3, [r6, #0]
 801b46a:	4605      	mov	r5, r0
 801b46c:	4620      	mov	r0, r4
 801b46e:	699f      	ldr	r7, [r3, #24]
 801b470:	f7fd fb70 	bl	8018b54 <_ZNK8touchgfx6Bitmap8getWidthEv>
 801b474:	4682      	mov	sl, r0
 801b476:	4620      	mov	r0, r4
 801b478:	f7fd fba0 	bl	8018bbc <_ZNK8touchgfx6Bitmap9getHeightEv>
 801b47c:	9500      	str	r5, [sp, #0]
 801b47e:	e9cd a001 	strd	sl, r0, [sp, #4]
 801b482:	464b      	mov	r3, r9
 801b484:	a806      	add	r0, sp, #24
 801b486:	4642      	mov	r2, r8
 801b488:	4631      	mov	r1, r6
 801b48a:	47b8      	blx	r7
 801b48c:	4628      	mov	r0, r5
 801b48e:	b008      	add	sp, #32
 801b490:	e8bd 87f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, pc}

0801b494 <_ZN8touchgfx8LCD16bpp29copyAreaFromTFTToClientBufferERKNS_4RectE>:
 801b494:	e92d 47ff 	stmdb	sp!, {r0, r1, r2, r3, r4, r5, r6, r7, r8, r9, sl, lr}
 801b498:	2300      	movs	r3, #0
 801b49a:	9300      	str	r3, [sp, #0]
 801b49c:	4b3d      	ldr	r3, [pc, #244]	; (801b594 <_ZN8touchgfx8LCD16bpp29copyAreaFromTFTToClientBufferERKNS_4RectE+0x100>)
 801b49e:	781b      	ldrb	r3, [r3, #0]
 801b4a0:	2b00      	cmp	r3, #0
 801b4a2:	d137      	bne.n	801b514 <_ZN8touchgfx8LCD16bpp29copyAreaFromTFTToClientBufferERKNS_4RectE+0x80>
 801b4a4:	4a3c      	ldr	r2, [pc, #240]	; (801b598 <_ZN8touchgfx8LCD16bpp29copyAreaFromTFTToClientBufferERKNS_4RectE+0x104>)
 801b4a6:	f9b2 2000 	ldrsh.w	r2, [r2]
 801b4aa:	f8ad 2004 	strh.w	r2, [sp, #4]
 801b4ae:	2b00      	cmp	r3, #0
 801b4b0:	d132      	bne.n	801b518 <_ZN8touchgfx8LCD16bpp29copyAreaFromTFTToClientBufferERKNS_4RectE+0x84>
 801b4b2:	4b3a      	ldr	r3, [pc, #232]	; (801b59c <_ZN8touchgfx8LCD16bpp29copyAreaFromTFTToClientBufferERKNS_4RectE+0x108>)
 801b4b4:	f9b3 3000 	ldrsh.w	r3, [r3]
 801b4b8:	6808      	ldr	r0, [r1, #0]
 801b4ba:	6849      	ldr	r1, [r1, #4]
 801b4bc:	f8ad 3006 	strh.w	r3, [sp, #6]
 801b4c0:	ac02      	add	r4, sp, #8
 801b4c2:	ab02      	add	r3, sp, #8
 801b4c4:	c303      	stmia	r3!, {r0, r1}
 801b4c6:	4669      	mov	r1, sp
 801b4c8:	4620      	mov	r0, r4
 801b4ca:	f7f9 fdc1 	bl	8015050 <_ZN8touchgfx21DisplayTransformation29transformDisplayToFrameBufferERNS_4RectERKS1_>
 801b4ce:	4668      	mov	r0, sp
 801b4d0:	f7f9 fd7a 	bl	8014fc8 <_ZN8touchgfx21DisplayTransformation29transformDisplayToFrameBufferERNS_4RectE>
 801b4d4:	f8bd 3008 	ldrh.w	r3, [sp, #8]
 801b4d8:	f8bd 2000 	ldrh.w	r2, [sp]
 801b4dc:	4d30      	ldr	r5, [pc, #192]	; (801b5a0 <_ZN8touchgfx8LCD16bpp29copyAreaFromTFTToClientBufferERKNS_4RectE+0x10c>)
 801b4de:	4413      	add	r3, r2
 801b4e0:	f8ad 3008 	strh.w	r3, [sp, #8]
 801b4e4:	f8bd 2002 	ldrh.w	r2, [sp, #2]
 801b4e8:	f8bd 300a 	ldrh.w	r3, [sp, #10]
 801b4ec:	6828      	ldr	r0, [r5, #0]
 801b4ee:	4413      	add	r3, r2
 801b4f0:	f8ad 300a 	strh.w	r3, [sp, #10]
 801b4f4:	6803      	ldr	r3, [r0, #0]
 801b4f6:	6b9b      	ldr	r3, [r3, #56]	; 0x38
 801b4f8:	4798      	blx	r3
 801b4fa:	f010 0f01 	tst.w	r0, #1
 801b4fe:	462f      	mov	r7, r5
 801b500:	d00c      	beq.n	801b51c <_ZN8touchgfx8LCD16bpp29copyAreaFromTFTToClientBufferERKNS_4RectE+0x88>
 801b502:	6828      	ldr	r0, [r5, #0]
 801b504:	6803      	ldr	r3, [r0, #0]
 801b506:	e894 0006 	ldmia.w	r4, {r1, r2}
 801b50a:	6ddb      	ldr	r3, [r3, #92]	; 0x5c
 801b50c:	4798      	blx	r3
 801b50e:	b004      	add	sp, #16
 801b510:	e8bd 87f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, pc}
 801b514:	4a21      	ldr	r2, [pc, #132]	; (801b59c <_ZN8touchgfx8LCD16bpp29copyAreaFromTFTToClientBufferERKNS_4RectE+0x108>)
 801b516:	e7c6      	b.n	801b4a6 <_ZN8touchgfx8LCD16bpp29copyAreaFromTFTToClientBufferERKNS_4RectE+0x12>
 801b518:	4b1f      	ldr	r3, [pc, #124]	; (801b598 <_ZN8touchgfx8LCD16bpp29copyAreaFromTFTToClientBufferERKNS_4RectE+0x104>)
 801b51a:	e7cb      	b.n	801b4b4 <_ZN8touchgfx8LCD16bpp29copyAreaFromTFTToClientBufferERKNS_4RectE+0x20>
 801b51c:	6838      	ldr	r0, [r7, #0]
 801b51e:	f9bd 800c 	ldrsh.w	r8, [sp, #12]
 801b522:	6803      	ldr	r3, [r0, #0]
 801b524:	f9bd 500e 	ldrsh.w	r5, [sp, #14]
 801b528:	6b1b      	ldr	r3, [r3, #48]	; 0x30
 801b52a:	4798      	blx	r3
 801b52c:	f9bd 3008 	ldrsh.w	r3, [sp, #8]
 801b530:	f8bd 200a 	ldrh.w	r2, [sp, #10]
 801b534:	f8bd 6004 	ldrh.w	r6, [sp, #4]
 801b538:	fb16 3602 	smlabb	r6, r6, r2, r3
 801b53c:	eb00 0646 	add.w	r6, r0, r6, lsl #1
 801b540:	6838      	ldr	r0, [r7, #0]
 801b542:	6803      	ldr	r3, [r0, #0]
 801b544:	6a9b      	ldr	r3, [r3, #40]	; 0x28
 801b546:	4798      	blx	r3
 801b548:	4a13      	ldr	r2, [pc, #76]	; (801b598 <_ZN8touchgfx8LCD16bpp29copyAreaFromTFTToClientBufferERKNS_4RectE+0x104>)
 801b54a:	f9bd 400a 	ldrsh.w	r4, [sp, #10]
 801b54e:	8813      	ldrh	r3, [r2, #0]
 801b550:	f9bd 1008 	ldrsh.w	r1, [sp, #8]
 801b554:	fb03 1404 	mla	r4, r3, r4, r1
 801b558:	eb00 0444 	add.w	r4, r0, r4, lsl #1
 801b55c:	435d      	muls	r5, r3
 801b55e:	eb04 0545 	add.w	r5, r4, r5, lsl #1
 801b562:	ea4f 0848 	mov.w	r8, r8, lsl #1
 801b566:	4691      	mov	r9, r2
 801b568:	6838      	ldr	r0, [r7, #0]
 801b56a:	42ac      	cmp	r4, r5
 801b56c:	6803      	ldr	r3, [r0, #0]
 801b56e:	d20e      	bcs.n	801b58e <_ZN8touchgfx8LCD16bpp29copyAreaFromTFTToClientBufferERKNS_4RectE+0xfa>
 801b570:	f8d3 a034 	ldr.w	sl, [r3, #52]	; 0x34
 801b574:	4632      	mov	r2, r6
 801b576:	4643      	mov	r3, r8
 801b578:	4621      	mov	r1, r4
 801b57a:	47d0      	blx	sl
 801b57c:	f8b9 3000 	ldrh.w	r3, [r9]
 801b580:	eb04 0443 	add.w	r4, r4, r3, lsl #1
 801b584:	f9bd 3004 	ldrsh.w	r3, [sp, #4]
 801b588:	eb06 0643 	add.w	r6, r6, r3, lsl #1
 801b58c:	e7ec      	b.n	801b568 <_ZN8touchgfx8LCD16bpp29copyAreaFromTFTToClientBufferERKNS_4RectE+0xd4>
 801b58e:	6adb      	ldr	r3, [r3, #44]	; 0x2c
 801b590:	4798      	blx	r3
 801b592:	e7bc      	b.n	801b50e <_ZN8touchgfx8LCD16bpp29copyAreaFromTFTToClientBufferERKNS_4RectE+0x7a>
 801b594:	20012f1c 	.word	0x20012f1c
 801b598:	20012f1e 	.word	0x20012f1e
 801b59c:	20012f20 	.word	0x20012f20
 801b5a0:	20012f24 	.word	0x20012f24

0801b5a4 <_ZN8touchgfx8LCD16bpp8blitCopyEPKtRKNS_4RectES5_hb>:
 801b5a4:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 801b5a8:	b08b      	sub	sp, #44	; 0x2c
 801b5aa:	460f      	mov	r7, r1
 801b5ac:	f89d b050 	ldrb.w	fp, [sp, #80]	; 0x50
 801b5b0:	f89d 4054 	ldrb.w	r4, [sp, #84]	; 0x54
 801b5b4:	4616      	mov	r6, r2
 801b5b6:	f1bb 0f00 	cmp.w	fp, #0
 801b5ba:	d04a      	beq.n	801b652 <_ZN8touchgfx8LCD16bpp8blitCopyEPKtRKNS_4RectES5_hb+0xae>
 801b5bc:	6810      	ldr	r0, [r2, #0]
 801b5be:	6851      	ldr	r1, [r2, #4]
 801b5c0:	ad06      	add	r5, sp, #24
 801b5c2:	c503      	stmia	r5!, {r0, r1}
 801b5c4:	6818      	ldr	r0, [r3, #0]
 801b5c6:	6859      	ldr	r1, [r3, #4]
 801b5c8:	ad08      	add	r5, sp, #32
 801b5ca:	c503      	stmia	r5!, {r0, r1}
 801b5cc:	a806      	add	r0, sp, #24
 801b5ce:	f7f9 fcfb 	bl	8014fc8 <_ZN8touchgfx21DisplayTransformation29transformDisplayToFrameBufferERNS_4RectE>
 801b5d2:	4631      	mov	r1, r6
 801b5d4:	a808      	add	r0, sp, #32
 801b5d6:	f7f9 fd3b 	bl	8015050 <_ZN8touchgfx21DisplayTransformation29transformDisplayToFrameBufferERNS_4RectERKS1_>
 801b5da:	f9bd 2020 	ldrsh.w	r2, [sp, #32]
 801b5de:	f9bd 3022 	ldrsh.w	r3, [sp, #34]	; 0x22
 801b5e2:	f8bd 601c 	ldrh.w	r6, [sp, #28]
 801b5e6:	f9bd 8024 	ldrsh.w	r8, [sp, #36]	; 0x24
 801b5ea:	f9bd 5026 	ldrsh.w	r5, [sp, #38]	; 0x26
 801b5ee:	fb16 2103 	smlabb	r1, r6, r3, r2
 801b5f2:	eb07 0641 	add.w	r6, r7, r1, lsl #1
 801b5f6:	f8bd 1018 	ldrh.w	r1, [sp, #24]
 801b5fa:	4f5f      	ldr	r7, [pc, #380]	; (801b778 <_ZN8touchgfx8LCD16bpp8blitCopyEPKtRKNS_4RectES5_hb+0x1d4>)
 801b5fc:	440a      	add	r2, r1
 801b5fe:	f8ad 2020 	strh.w	r2, [sp, #32]
 801b602:	f8bd 201a 	ldrh.w	r2, [sp, #26]
 801b606:	6838      	ldr	r0, [r7, #0]
 801b608:	4413      	add	r3, r2
 801b60a:	f8ad 3022 	strh.w	r3, [sp, #34]	; 0x22
 801b60e:	6803      	ldr	r3, [r0, #0]
 801b610:	6b9b      	ldr	r3, [r3, #56]	; 0x38
 801b612:	4798      	blx	r3
 801b614:	f1bb 0fff 	cmp.w	fp, #255	; 0xff
 801b618:	46b9      	mov	r9, r7
 801b61a:	d11d      	bne.n	801b658 <_ZN8touchgfx8LCD16bpp8blitCopyEPKtRKNS_4RectES5_hb+0xb4>
 801b61c:	b9fc      	cbnz	r4, 801b65e <_ZN8touchgfx8LCD16bpp8blitCopyEPKtRKNS_4RectES5_hb+0xba>
 801b61e:	f010 0f01 	tst.w	r0, #1
 801b622:	d01c      	beq.n	801b65e <_ZN8touchgfx8LCD16bpp8blitCopyEPKtRKNS_4RectES5_hb+0xba>
 801b624:	f8d9 0000 	ldr.w	r0, [r9]
 801b628:	f8bd 3022 	ldrh.w	r3, [sp, #34]	; 0x22
 801b62c:	6801      	ldr	r1, [r0, #0]
 801b62e:	f8cd b00c 	str.w	fp, [sp, #12]
 801b632:	2700      	movs	r7, #0
 801b634:	e9cd 4704 	strd	r4, r7, [sp, #16]
 801b638:	f8bd 401c 	ldrh.w	r4, [sp, #28]
 801b63c:	9402      	str	r4, [sp, #8]
 801b63e:	b2ad      	uxth	r5, r5
 801b640:	fa1f f488 	uxth.w	r4, r8
 801b644:	9501      	str	r5, [sp, #4]
 801b646:	9400      	str	r4, [sp, #0]
 801b648:	6c4c      	ldr	r4, [r1, #68]	; 0x44
 801b64a:	f8bd 2020 	ldrh.w	r2, [sp, #32]
 801b64e:	4631      	mov	r1, r6
 801b650:	47a0      	blx	r4
 801b652:	b00b      	add	sp, #44	; 0x2c
 801b654:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
 801b658:	f010 0f04 	tst.w	r0, #4
 801b65c:	e7e1      	b.n	801b622 <_ZN8touchgfx8LCD16bpp8blitCopyEPKtRKNS_4RectES5_hb+0x7e>
 801b65e:	f8d9 0000 	ldr.w	r0, [r9]
 801b662:	6803      	ldr	r3, [r0, #0]
 801b664:	6a9b      	ldr	r3, [r3, #40]	; 0x28
 801b666:	4798      	blx	r3
 801b668:	4b44      	ldr	r3, [pc, #272]	; (801b77c <_ZN8touchgfx8LCD16bpp8blitCopyEPKtRKNS_4RectES5_hb+0x1d8>)
 801b66a:	f9bd 4022 	ldrsh.w	r4, [sp, #34]	; 0x22
 801b66e:	881a      	ldrh	r2, [r3, #0]
 801b670:	f9bd 1020 	ldrsh.w	r1, [sp, #32]
 801b674:	f1bb 0fff 	cmp.w	fp, #255	; 0xff
 801b678:	fb02 1404 	mla	r4, r2, r4, r1
 801b67c:	eb00 0444 	add.w	r4, r0, r4, lsl #1
 801b680:	469a      	mov	sl, r3
 801b682:	fb05 f502 	mul.w	r5, r5, r2
 801b686:	ea4f 0748 	mov.w	r7, r8, lsl #1
 801b68a:	d059      	beq.n	801b740 <_ZN8touchgfx8LCD16bpp8blitCopyEPKtRKNS_4RectES5_hb+0x19c>
 801b68c:	f1cb 09ff 	rsb	r9, fp, #255	; 0xff
 801b690:	eb04 0545 	add.w	r5, r4, r5, lsl #1
 801b694:	fa1f f28b 	uxth.w	r2, fp
 801b698:	fa1f f989 	uxth.w	r9, r9
 801b69c:	469e      	mov	lr, r3
 801b69e:	42ac      	cmp	r4, r5
 801b6a0:	d264      	bcs.n	801b76c <_ZN8touchgfx8LCD16bpp8blitCopyEPKtRKNS_4RectES5_hb+0x1c8>
 801b6a2:	eb04 0a07 	add.w	sl, r4, r7
 801b6a6:	4554      	cmp	r4, sl
 801b6a8:	d23d      	bcs.n	801b726 <_ZN8touchgfx8LCD16bpp8blitCopyEPKtRKNS_4RectES5_hb+0x182>
 801b6aa:	8821      	ldrh	r1, [r4, #0]
 801b6ac:	f836 3b02 	ldrh.w	r3, [r6], #2
 801b6b0:	1208      	asrs	r0, r1, #8
 801b6b2:	ea4f 2c23 	mov.w	ip, r3, asr #8
 801b6b6:	f000 00f8 	and.w	r0, r0, #248	; 0xf8
 801b6ba:	fb10 f009 	smulbb	r0, r0, r9
 801b6be:	ea4f 0be1 	mov.w	fp, r1, asr #3
 801b6c2:	f00c 0cf8 	and.w	ip, ip, #248	; 0xf8
 801b6c6:	00c9      	lsls	r1, r1, #3
 801b6c8:	fb0c 0c02 	mla	ip, ip, r2, r0
 801b6cc:	f00b 0bfc 	and.w	fp, fp, #252	; 0xfc
 801b6d0:	10d8      	asrs	r0, r3, #3
 801b6d2:	b2c9      	uxtb	r1, r1
 801b6d4:	00db      	lsls	r3, r3, #3
 801b6d6:	fa1f fc8c 	uxth.w	ip, ip
 801b6da:	fb1b fb09 	smulbb	fp, fp, r9
 801b6de:	f000 00fc 	and.w	r0, r0, #252	; 0xfc
 801b6e2:	b2db      	uxtb	r3, r3
 801b6e4:	fb11 f109 	smulbb	r1, r1, r9
 801b6e8:	fb00 b002 	mla	r0, r0, r2, fp
 801b6ec:	fb03 1302 	mla	r3, r3, r2, r1
 801b6f0:	f10c 0b01 	add.w	fp, ip, #1
 801b6f4:	b29b      	uxth	r3, r3
 801b6f6:	eb0b 2c1c 	add.w	ip, fp, ip, lsr #8
 801b6fa:	b280      	uxth	r0, r0
 801b6fc:	f40c 4b78 	and.w	fp, ip, #63488	; 0xf800
 801b700:	f103 0c01 	add.w	ip, r3, #1
 801b704:	eb0c 2c13 	add.w	ip, ip, r3, lsr #8
 801b708:	1c43      	adds	r3, r0, #1
 801b70a:	eb03 2010 	add.w	r0, r3, r0, lsr #8
 801b70e:	f3cc 2cc4 	ubfx	ip, ip, #11, #5
 801b712:	0940      	lsrs	r0, r0, #5
 801b714:	ea4c 0c0b 	orr.w	ip, ip, fp
 801b718:	f400 60fc 	and.w	r0, r0, #2016	; 0x7e0
 801b71c:	ea4c 0c00 	orr.w	ip, ip, r0
 801b720:	f824 cb02 	strh.w	ip, [r4], #2
 801b724:	e7bf      	b.n	801b6a6 <_ZN8touchgfx8LCD16bpp8blitCopyEPKtRKNS_4RectES5_hb+0x102>
 801b726:	f8be 3000 	ldrh.w	r3, [lr]
 801b72a:	eba3 0308 	sub.w	r3, r3, r8
 801b72e:	eb04 0443 	add.w	r4, r4, r3, lsl #1
 801b732:	f9bd 301c 	ldrsh.w	r3, [sp, #28]
 801b736:	eba3 0308 	sub.w	r3, r3, r8
 801b73a:	eb06 0643 	add.w	r6, r6, r3, lsl #1
 801b73e:	e7ae      	b.n	801b69e <_ZN8touchgfx8LCD16bpp8blitCopyEPKtRKNS_4RectES5_hb+0xfa>
 801b740:	eb04 0545 	add.w	r5, r4, r5, lsl #1
 801b744:	f8d9 0000 	ldr.w	r0, [r9]
 801b748:	42ac      	cmp	r4, r5
 801b74a:	6803      	ldr	r3, [r0, #0]
 801b74c:	d20e      	bcs.n	801b76c <_ZN8touchgfx8LCD16bpp8blitCopyEPKtRKNS_4RectES5_hb+0x1c8>
 801b74e:	f8d3 8034 	ldr.w	r8, [r3, #52]	; 0x34
 801b752:	4632      	mov	r2, r6
 801b754:	463b      	mov	r3, r7
 801b756:	4621      	mov	r1, r4
 801b758:	47c0      	blx	r8
 801b75a:	f8ba 3000 	ldrh.w	r3, [sl]
 801b75e:	eb04 0443 	add.w	r4, r4, r3, lsl #1
 801b762:	f9bd 301c 	ldrsh.w	r3, [sp, #28]
 801b766:	eb06 0643 	add.w	r6, r6, r3, lsl #1
 801b76a:	e7eb      	b.n	801b744 <_ZN8touchgfx8LCD16bpp8blitCopyEPKtRKNS_4RectES5_hb+0x1a0>
 801b76c:	4b02      	ldr	r3, [pc, #8]	; (801b778 <_ZN8touchgfx8LCD16bpp8blitCopyEPKtRKNS_4RectES5_hb+0x1d4>)
 801b76e:	6818      	ldr	r0, [r3, #0]
 801b770:	6803      	ldr	r3, [r0, #0]
 801b772:	6adb      	ldr	r3, [r3, #44]	; 0x2c
 801b774:	4798      	blx	r3
 801b776:	e76c      	b.n	801b652 <_ZN8touchgfx8LCD16bpp8blitCopyEPKtRKNS_4RectES5_hb+0xae>
 801b778:	20012f24 	.word	0x20012f24
 801b77c:	20012f1e 	.word	0x20012f1e

0801b780 <_ZN8touchgfx8LCD16bppD0Ev>:
 801b780:	b510      	push	{r4, lr}
 801b782:	2184      	movs	r1, #132	; 0x84
 801b784:	4604      	mov	r4, r0
 801b786:	f00d fe4a 	bl	802941e <_ZdlPvj>
 801b78a:	4620      	mov	r0, r4
 801b78c:	bd10      	pop	{r4, pc}

0801b78e <_ZN8touchgfx8LCD16bpp17DecompressorL8_L4D0Ev>:
 801b78e:	b510      	push	{r4, lr}
 801b790:	2104      	movs	r1, #4
 801b792:	4604      	mov	r4, r0
 801b794:	f00d fe43 	bl	802941e <_ZdlPvj>
 801b798:	4620      	mov	r0, r4
 801b79a:	bd10      	pop	{r4, pc}

0801b79c <_ZN8touchgfx8LCD16bpp18DecompressorL8_RLED0Ev>:
 801b79c:	b510      	push	{r4, lr}
 801b79e:	2104      	movs	r1, #4
 801b7a0:	4604      	mov	r4, r0
 801b7a2:	f00d fe3c 	bl	802941e <_ZdlPvj>
 801b7a6:	4620      	mov	r0, r4
 801b7a8:	bd10      	pop	{r4, pc}

0801b7aa <_ZN8touchgfx8LCD16bpp19DecompressorL8_LZW9D0Ev>:
 801b7aa:	b510      	push	{r4, lr}
 801b7ac:	f640 0144 	movw	r1, #2116	; 0x844
 801b7b0:	4604      	mov	r4, r0
 801b7b2:	f00d fe34 	bl	802941e <_ZdlPvj>
 801b7b6:	4620      	mov	r0, r4
 801b7b8:	bd10      	pop	{r4, pc}

0801b7ba <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_NoGAD0Ev>:
 801b7ba:	b510      	push	{r4, lr}
 801b7bc:	2104      	movs	r1, #4
 801b7be:	4604      	mov	r4, r0
 801b7c0:	f00d fe2d 	bl	802941e <_ZdlPvj>
 801b7c4:	4620      	mov	r0, r4
 801b7c6:	bd10      	pop	{r4, pc}

0801b7c8 <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_GAD0Ev>:
 801b7c8:	b510      	push	{r4, lr}
 801b7ca:	2104      	movs	r1, #4
 801b7cc:	4604      	mov	r4, r0
 801b7ce:	f00d fe26 	bl	802941e <_ZdlPvj>
 801b7d2:	4620      	mov	r0, r4
 801b7d4:	bd10      	pop	{r4, pc}

0801b7d6 <_ZN8touchgfx8LCD16bpp51TextureMapper_L8_RGB565_Opaque_NearestNeighbor_NoGAD0Ev>:
 801b7d6:	b510      	push	{r4, lr}
 801b7d8:	2104      	movs	r1, #4
 801b7da:	4604      	mov	r4, r0
 801b7dc:	f00d fe1f 	bl	802941e <_ZdlPvj>
 801b7e0:	4620      	mov	r0, r4
 801b7e2:	bd10      	pop	{r4, pc}

0801b7e4 <_ZN8touchgfx8LCD16bpp49TextureMapper_L8_RGB565_Opaque_NearestNeighbor_GAD0Ev>:
 801b7e4:	b510      	push	{r4, lr}
 801b7e6:	2104      	movs	r1, #4
 801b7e8:	4604      	mov	r4, r0
 801b7ea:	f00d fe18 	bl	802941e <_ZdlPvj>
 801b7ee:	4620      	mov	r0, r4
 801b7f0:	bd10      	pop	{r4, pc}

0801b7f2 <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_NoGAD0Ev>:
 801b7f2:	b510      	push	{r4, lr}
 801b7f4:	2104      	movs	r1, #4
 801b7f6:	4604      	mov	r4, r0
 801b7f8:	f00d fe11 	bl	802941e <_ZdlPvj>
 801b7fc:	4620      	mov	r0, r4
 801b7fe:	bd10      	pop	{r4, pc}

0801b800 <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_GAD0Ev>:
 801b800:	b510      	push	{r4, lr}
 801b802:	2104      	movs	r1, #4
 801b804:	4604      	mov	r4, r0
 801b806:	f00d fe0a 	bl	802941e <_ZdlPvj>
 801b80a:	4620      	mov	r0, r4
 801b80c:	bd10      	pop	{r4, pc}

0801b80e <_ZN8touchgfx8LCD16bpp51TextureMapper_L8_RGB888_Opaque_NearestNeighbor_NoGAD0Ev>:
 801b80e:	b510      	push	{r4, lr}
 801b810:	2104      	movs	r1, #4
 801b812:	4604      	mov	r4, r0
 801b814:	f00d fe03 	bl	802941e <_ZdlPvj>
 801b818:	4620      	mov	r0, r4
 801b81a:	bd10      	pop	{r4, pc}

0801b81c <_ZN8touchgfx8LCD16bpp49TextureMapper_L8_RGB888_Opaque_NearestNeighbor_GAD0Ev>:
 801b81c:	b510      	push	{r4, lr}
 801b81e:	2104      	movs	r1, #4
 801b820:	4604      	mov	r4, r0
 801b822:	f00d fdfc 	bl	802941e <_ZdlPvj>
 801b826:	4620      	mov	r0, r4
 801b828:	bd10      	pop	{r4, pc}

0801b82a <_ZN8touchgfx8LCD16bpp62TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGAD0Ev>:
 801b82a:	b510      	push	{r4, lr}
 801b82c:	2104      	movs	r1, #4
 801b82e:	4604      	mov	r4, r0
 801b830:	f00d fdf5 	bl	802941e <_ZdlPvj>
 801b834:	4620      	mov	r0, r4
 801b836:	bd10      	pop	{r4, pc}

0801b838 <_ZN8touchgfx8LCD16bpp60TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_GAD0Ev>:
 801b838:	b510      	push	{r4, lr}
 801b83a:	2104      	movs	r1, #4
 801b83c:	4604      	mov	r4, r0
 801b83e:	f00d fdee 	bl	802941e <_ZdlPvj>
 801b842:	4620      	mov	r0, r4
 801b844:	bd10      	pop	{r4, pc}

0801b846 <_ZN8touchgfx8LCD16bpp56TextureMapper_L8_ARGB8888_NonOpaque_NearestNeighbor_NoGAD0Ev>:
 801b846:	b510      	push	{r4, lr}
 801b848:	2104      	movs	r1, #4
 801b84a:	4604      	mov	r4, r0
 801b84c:	f00d fde7 	bl	802941e <_ZdlPvj>
 801b850:	4620      	mov	r0, r4
 801b852:	bd10      	pop	{r4, pc}

0801b854 <_ZN8touchgfx8LCD16bpp54TextureMapper_L8_ARGB8888_NonOpaque_NearestNeighbor_GAD0Ev>:
 801b854:	b510      	push	{r4, lr}
 801b856:	2104      	movs	r1, #4
 801b858:	4604      	mov	r4, r0
 801b85a:	f00d fde0 	bl	802941e <_ZdlPvj>
 801b85e:	4620      	mov	r0, r4
 801b860:	bd10      	pop	{r4, pc}

0801b862 <_ZN8touchgfx8LCD16bpp54TextureMapper_RGB565_Opaque_BilinearInterpolation_NoGAD0Ev>:
 801b862:	b510      	push	{r4, lr}
 801b864:	2104      	movs	r1, #4
 801b866:	4604      	mov	r4, r0
 801b868:	f00d fdd9 	bl	802941e <_ZdlPvj>
 801b86c:	4620      	mov	r0, r4
 801b86e:	bd10      	pop	{r4, pc}

0801b870 <_ZN8touchgfx8LCD16bpp52TextureMapper_RGB565_Opaque_BilinearInterpolation_GAD0Ev>:
 801b870:	b510      	push	{r4, lr}
 801b872:	2104      	movs	r1, #4
 801b874:	4604      	mov	r4, r0
 801b876:	f00d fdd2 	bl	802941e <_ZdlPvj>
 801b87a:	4620      	mov	r0, r4
 801b87c:	bd10      	pop	{r4, pc}

0801b87e <_ZN8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGAD0Ev>:
 801b87e:	b510      	push	{r4, lr}
 801b880:	2104      	movs	r1, #4
 801b882:	4604      	mov	r4, r0
 801b884:	f00d fdcb 	bl	802941e <_ZdlPvj>
 801b888:	4620      	mov	r0, r4
 801b88a:	bd10      	pop	{r4, pc}

0801b88c <_ZN8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GAD0Ev>:
 801b88c:	b510      	push	{r4, lr}
 801b88e:	2104      	movs	r1, #4
 801b890:	4604      	mov	r4, r0
 801b892:	f00d fdc4 	bl	802941e <_ZdlPvj>
 801b896:	4620      	mov	r0, r4
 801b898:	bd10      	pop	{r4, pc}

0801b89a <_ZN8touchgfx8LCD16bpp48TextureMapper_RGB565_Opaque_NearestNeighbor_NoGAD0Ev>:
 801b89a:	b510      	push	{r4, lr}
 801b89c:	2104      	movs	r1, #4
 801b89e:	4604      	mov	r4, r0
 801b8a0:	f00d fdbd 	bl	802941e <_ZdlPvj>
 801b8a4:	4620      	mov	r0, r4
 801b8a6:	bd10      	pop	{r4, pc}

0801b8a8 <_ZN8touchgfx8LCD16bpp46TextureMapper_RGB565_Opaque_NearestNeighbor_GAD0Ev>:
 801b8a8:	b510      	push	{r4, lr}
 801b8aa:	2104      	movs	r1, #4
 801b8ac:	4604      	mov	r4, r0
 801b8ae:	f00d fdb6 	bl	802941e <_ZdlPvj>
 801b8b2:	4620      	mov	r0, r4
 801b8b4:	bd10      	pop	{r4, pc}

0801b8b6 <_ZN8touchgfx8LCD16bpp51TextureMapper_RGB565_NonOpaque_NearestNeighbor_NoGAD0Ev>:
 801b8b6:	b510      	push	{r4, lr}
 801b8b8:	2104      	movs	r1, #4
 801b8ba:	4604      	mov	r4, r0
 801b8bc:	f00d fdaf 	bl	802941e <_ZdlPvj>
 801b8c0:	4620      	mov	r0, r4
 801b8c2:	bd10      	pop	{r4, pc}

0801b8c4 <_ZN8touchgfx8LCD16bpp49TextureMapper_RGB565_NonOpaque_NearestNeighbor_GAD0Ev>:
 801b8c4:	b510      	push	{r4, lr}
 801b8c6:	2104      	movs	r1, #4
 801b8c8:	4604      	mov	r4, r0
 801b8ca:	f00d fda8 	bl	802941e <_ZdlPvj>
 801b8ce:	4620      	mov	r0, r4
 801b8d0:	bd10      	pop	{r4, pc}

0801b8d2 <_ZN8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGAD0Ev>:
 801b8d2:	b510      	push	{r4, lr}
 801b8d4:	2104      	movs	r1, #4
 801b8d6:	4604      	mov	r4, r0
 801b8d8:	f00d fda1 	bl	802941e <_ZdlPvj>
 801b8dc:	4620      	mov	r0, r4
 801b8de:	bd10      	pop	{r4, pc}

0801b8e0 <_ZN8touchgfx8LCD16bpp57TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_GAD0Ev>:
 801b8e0:	b510      	push	{r4, lr}
 801b8e2:	2104      	movs	r1, #4
 801b8e4:	4604      	mov	r4, r0
 801b8e6:	f00d fd9a 	bl	802941e <_ZdlPvj>
 801b8ea:	4620      	mov	r0, r4
 801b8ec:	bd10      	pop	{r4, pc}

0801b8ee <_ZN8touchgfx8LCD16bpp53TextureMapper_ARGB8888_NonOpaque_NearestNeighbor_NoGAD0Ev>:
 801b8ee:	b510      	push	{r4, lr}
 801b8f0:	2104      	movs	r1, #4
 801b8f2:	4604      	mov	r4, r0
 801b8f4:	f00d fd93 	bl	802941e <_ZdlPvj>
 801b8f8:	4620      	mov	r0, r4
 801b8fa:	bd10      	pop	{r4, pc}

0801b8fc <_ZN8touchgfx8LCD16bpp51TextureMapper_ARGB8888_NonOpaque_NearestNeighbor_GAD0Ev>:
 801b8fc:	b510      	push	{r4, lr}
 801b8fe:	2104      	movs	r1, #4
 801b900:	4604      	mov	r4, r0
 801b902:	f00d fd8c 	bl	802941e <_ZdlPvj>
 801b906:	4620      	mov	r0, r4
 801b908:	bd10      	pop	{r4, pc}

0801b90a <_ZN8touchgfx8LCD16bpp43TextureMapper_A4_BilinearInterpolation_NoGAD0Ev>:
 801b90a:	b510      	push	{r4, lr}
 801b90c:	2104      	movs	r1, #4
 801b90e:	4604      	mov	r4, r0
 801b910:	f00d fd85 	bl	802941e <_ZdlPvj>
 801b914:	4620      	mov	r0, r4
 801b916:	bd10      	pop	{r4, pc}

0801b918 <_ZN8touchgfx8LCD16bpp41TextureMapper_A4_BilinearInterpolation_GAD0Ev>:
 801b918:	b510      	push	{r4, lr}
 801b91a:	2104      	movs	r1, #4
 801b91c:	4604      	mov	r4, r0
 801b91e:	f00d fd7e 	bl	802941e <_ZdlPvj>
 801b922:	4620      	mov	r0, r4
 801b924:	bd10      	pop	{r4, pc}

0801b926 <_ZN8touchgfx8LCD16bpp37TextureMapper_A4_NearestNeighbor_NoGAD0Ev>:
 801b926:	b510      	push	{r4, lr}
 801b928:	2104      	movs	r1, #4
 801b92a:	4604      	mov	r4, r0
 801b92c:	f00d fd77 	bl	802941e <_ZdlPvj>
 801b930:	4620      	mov	r0, r4
 801b932:	bd10      	pop	{r4, pc}

0801b934 <_ZN8touchgfx8LCD16bpp35TextureMapper_A4_NearestNeighbor_GAD0Ev>:
 801b934:	b510      	push	{r4, lr}
 801b936:	2104      	movs	r1, #4
 801b938:	4604      	mov	r4, r0
 801b93a:	f00d fd70 	bl	802941e <_ZdlPvj>
 801b93e:	4620      	mov	r0, r4
 801b940:	bd10      	pop	{r4, pc}
	...

0801b944 <_ZN8touchgfx8LCD16bpp18DecompressorL8_RLE14blitCopyRGB565EPKhS3_RKNS_4RectES6_h>:
 801b944:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 801b948:	b08f      	sub	sp, #60	; 0x3c
 801b94a:	461c      	mov	r4, r3
 801b94c:	9205      	str	r2, [sp, #20]
 801b94e:	f89d 2064 	ldrb.w	r2, [sp, #100]	; 0x64
 801b952:	9100      	str	r1, [sp, #0]
 801b954:	9b18      	ldr	r3, [sp, #96]	; 0x60
 801b956:	9201      	str	r2, [sp, #4]
 801b958:	2a00      	cmp	r2, #0
 801b95a:	f000 8115 	beq.w	801bb88 <_ZN8touchgfx8LCD16bpp18DecompressorL8_RLE14blitCopyRGB565EPKhS3_RKNS_4RectES6_h+0x244>
 801b95e:	6820      	ldr	r0, [r4, #0]
 801b960:	6861      	ldr	r1, [r4, #4]
 801b962:	aa0a      	add	r2, sp, #40	; 0x28
 801b964:	c203      	stmia	r2!, {r0, r1}
 801b966:	6818      	ldr	r0, [r3, #0]
 801b968:	6859      	ldr	r1, [r3, #4]
 801b96a:	aa0c      	add	r2, sp, #48	; 0x30
 801b96c:	c203      	stmia	r2!, {r0, r1}
 801b96e:	a80a      	add	r0, sp, #40	; 0x28
 801b970:	f7f9 fb2a 	bl	8014fc8 <_ZN8touchgfx21DisplayTransformation29transformDisplayToFrameBufferERNS_4RectE>
 801b974:	4621      	mov	r1, r4
 801b976:	a80c      	add	r0, sp, #48	; 0x30
 801b978:	f7f9 fb6a 	bl	8015050 <_ZN8touchgfx21DisplayTransformation29transformDisplayToFrameBufferERNS_4RectERKS1_>
 801b97c:	f9bd 602c 	ldrsh.w	r6, [sp, #44]	; 0x2c
 801b980:	f9bd 502e 	ldrsh.w	r5, [sp, #46]	; 0x2e
 801b984:	f8bd 0030 	ldrh.w	r0, [sp, #48]	; 0x30
 801b988:	f5b6 6f80 	cmp.w	r6, #1024	; 0x400
 801b98c:	bfde      	ittt	le
 801b98e:	b2b3      	uxthle	r3, r6
 801b990:	f44f 6280 	movle.w	r2, #1024	; 0x400
 801b994:	fb92 f3f3 	sdivle	r3, r2, r3
 801b998:	f9bd 2032 	ldrsh.w	r2, [sp, #50]	; 0x32
 801b99c:	bfc8      	it	gt
 801b99e:	2301      	movgt	r3, #1
 801b9a0:	fb92 f1f3 	sdiv	r1, r2, r3
 801b9a4:	fa1f fc81 	uxth.w	ip, r1
 801b9a8:	fb0c 2413 	mls	r4, ip, r3, r2
 801b9ac:	fb14 f406 	smulbb	r4, r4, r6
 801b9b0:	441d      	add	r5, r3
 801b9b2:	4404      	add	r4, r0
 801b9b4:	4661      	mov	r1, ip
 801b9b6:	3d01      	subs	r5, #1
 801b9b8:	b2a4      	uxth	r4, r4
 801b9ba:	fb95 f5f3 	sdiv	r5, r5, r3
 801b9be:	b131      	cbz	r1, 801b9ce <_ZN8touchgfx8LCD16bpp18DecompressorL8_RLE14blitCopyRGB565EPKhS3_RKNS_4RectES6_h+0x8a>
 801b9c0:	9b05      	ldr	r3, [sp, #20]
 801b9c2:	9900      	ldr	r1, [sp, #0]
 801b9c4:	f853 302c 	ldr.w	r3, [r3, ip, lsl #2]
 801b9c8:	ba1b      	rev	r3, r3
 801b9ca:	4419      	add	r1, r3
 801b9cc:	9100      	str	r1, [sp, #0]
 801b9ce:	f8bd 3028 	ldrh.w	r3, [sp, #40]	; 0x28
 801b9d2:	f9bd 8034 	ldrsh.w	r8, [sp, #52]	; 0x34
 801b9d6:	f9bd 6036 	ldrsh.w	r6, [sp, #54]	; 0x36
 801b9da:	4418      	add	r0, r3
 801b9dc:	f8bd 302a 	ldrh.w	r3, [sp, #42]	; 0x2a
 801b9e0:	f8ad 0030 	strh.w	r0, [sp, #48]	; 0x30
 801b9e4:	441a      	add	r2, r3
 801b9e6:	4b6a      	ldr	r3, [pc, #424]	; (801bb90 <_ZN8touchgfx8LCD16bpp18DecompressorL8_RLE14blitCopyRGB565EPKhS3_RKNS_4RectES6_h+0x24c>)
 801b9e8:	f8ad 2032 	strh.w	r2, [sp, #50]	; 0x32
 801b9ec:	6818      	ldr	r0, [r3, #0]
 801b9ee:	6803      	ldr	r3, [r0, #0]
 801b9f0:	6a9b      	ldr	r3, [r3, #40]	; 0x28
 801b9f2:	4798      	blx	r3
 801b9f4:	4967      	ldr	r1, [pc, #412]	; (801bb94 <_ZN8touchgfx8LCD16bpp18DecompressorL8_RLE14blitCopyRGB565EPKhS3_RKNS_4RectES6_h+0x250>)
 801b9f6:	f9bd 2032 	ldrsh.w	r2, [sp, #50]	; 0x32
 801b9fa:	880b      	ldrh	r3, [r1, #0]
 801b9fc:	f9bd c030 	ldrsh.w	ip, [sp, #48]	; 0x30
 801ba00:	9109      	str	r1, [sp, #36]	; 0x24
 801ba02:	fb03 c202 	mla	r2, r3, r2, ip
 801ba06:	eb00 0042 	add.w	r0, r0, r2, lsl #1
 801ba0a:	4373      	muls	r3, r6
 801ba0c:	b2ad      	uxth	r5, r5
 801ba0e:	eb00 0343 	add.w	r3, r0, r3, lsl #1
 801ba12:	00ad      	lsls	r5, r5, #2
 801ba14:	9306      	str	r3, [sp, #24]
 801ba16:	1d2b      	adds	r3, r5, #4
 801ba18:	9307      	str	r3, [sp, #28]
 801ba1a:	9b01      	ldr	r3, [sp, #4]
 801ba1c:	f8bd 1004 	ldrh.w	r1, [sp, #4]
 801ba20:	9103      	str	r1, [sp, #12]
 801ba22:	f1c3 02ff 	rsb	r2, r3, #255	; 0xff
 801ba26:	2c00      	cmp	r4, #0
 801ba28:	bf0c      	ite	eq
 801ba2a:	46c6      	moveq	lr, r8
 801ba2c:	f04f 0e00 	movne.w	lr, #0
 801ba30:	2300      	movs	r3, #0
 801ba32:	b292      	uxth	r2, r2
 801ba34:	fa1f fe8e 	uxth.w	lr, lr
 801ba38:	9302      	str	r3, [sp, #8]
 801ba3a:	9204      	str	r2, [sp, #16]
 801ba3c:	9a06      	ldr	r2, [sp, #24]
 801ba3e:	4282      	cmp	r2, r0
 801ba40:	f240 809d 	bls.w	801bb7e <_ZN8touchgfx8LCD16bpp18DecompressorL8_RLE14blitCopyRGB565EPKhS3_RKNS_4RectES6_h+0x23a>
 801ba44:	b963      	cbnz	r3, 801ba60 <_ZN8touchgfx8LCD16bpp18DecompressorL8_RLE14blitCopyRGB565EPKhS3_RKNS_4RectES6_h+0x11c>
 801ba46:	9b00      	ldr	r3, [sp, #0]
 801ba48:	781a      	ldrb	r2, [r3, #0]
 801ba4a:	0993      	lsrs	r3, r2, #6
 801ba4c:	f002 023f 	and.w	r2, r2, #63	; 0x3f
 801ba50:	9202      	str	r2, [sp, #8]
 801ba52:	1e5a      	subs	r2, r3, #1
 801ba54:	2a02      	cmp	r2, #2
 801ba56:	d815      	bhi.n	801ba84 <_ZN8touchgfx8LCD16bpp18DecompressorL8_RLE14blitCopyRGB565EPKhS3_RKNS_4RectES6_h+0x140>
 801ba58:	9a00      	ldr	r2, [sp, #0]
 801ba5a:	3201      	adds	r2, #1
 801ba5c:	9200      	str	r2, [sp, #0]
 801ba5e:	b29b      	uxth	r3, r3
 801ba60:	b1b4      	cbz	r4, 801ba90 <_ZN8touchgfx8LCD16bpp18DecompressorL8_RLE14blitCopyRGB565EPKhS3_RKNS_4RectES6_h+0x14c>
 801ba62:	429c      	cmp	r4, r3
 801ba64:	bf95      	itete	ls
 801ba66:	1b1c      	subls	r4, r3, r4
 801ba68:	1ae4      	subhi	r4, r4, r3
 801ba6a:	fa1f fa84 	uxthls.w	sl, r4
 801ba6e:	b2a4      	uxthhi	r4, r4
 801ba70:	bf87      	ittee	hi
 801ba72:	4671      	movhi	r1, lr
 801ba74:	f04f 0a00 	movhi.w	sl, #0
 801ba78:	fa1f f188 	uxthls.w	r1, r8
 801ba7c:	2400      	movls	r4, #0
 801ba7e:	4653      	mov	r3, sl
 801ba80:	468e      	mov	lr, r1
 801ba82:	e7db      	b.n	801ba3c <_ZN8touchgfx8LCD16bpp18DecompressorL8_RLE14blitCopyRGB565EPKhS3_RKNS_4RectES6_h+0xf8>
 801ba84:	9a00      	ldr	r2, [sp, #0]
 801ba86:	9b00      	ldr	r3, [sp, #0]
 801ba88:	3202      	adds	r2, #2
 801ba8a:	785b      	ldrb	r3, [r3, #1]
 801ba8c:	9200      	str	r2, [sp, #0]
 801ba8e:	e7e7      	b.n	801ba60 <_ZN8touchgfx8LCD16bpp18DecompressorL8_RLE14blitCopyRGB565EPKhS3_RKNS_4RectES6_h+0x11c>
 801ba90:	2202      	movs	r2, #2
 801ba92:	4615      	mov	r5, r2
 801ba94:	9907      	ldr	r1, [sp, #28]
 801ba96:	9a02      	ldr	r2, [sp, #8]
 801ba98:	fb15 1202 	smlabb	r2, r5, r2, r1
 801ba9c:	9905      	ldr	r1, [sp, #20]
 801ba9e:	4573      	cmp	r3, lr
 801baa0:	f831 c002 	ldrh.w	ip, [r1, r2]
 801baa4:	9a01      	ldr	r2, [sp, #4]
 801baa6:	bf2b      	itete	cs
 801baa8:	eba3 0a0e 	subcs.w	sl, r3, lr
 801baac:	ebae 0103 	subcc.w	r1, lr, r3
 801bab0:	46f1      	movcs	r9, lr
 801bab2:	4699      	movcc	r9, r3
 801bab4:	bf27      	ittee	cs
 801bab6:	fa1f fa8a 	uxthcs.w	sl, sl
 801baba:	4621      	movcs	r1, r4
 801babc:	b289      	uxthcc	r1, r1
 801babe:	46a2      	movcc	sl, r4
 801bac0:	2aff      	cmp	r2, #255	; 0xff
 801bac2:	ea4f 0949 	mov.w	r9, r9, lsl #1
 801bac6:	d105      	bne.n	801bad4 <_ZN8touchgfx8LCD16bpp18DecompressorL8_RLE14blitCopyRGB565EPKhS3_RKNS_4RectES6_h+0x190>
 801bac8:	4481      	add	r9, r0
 801baca:	4581      	cmp	r9, r0
 801bacc:	d045      	beq.n	801bb5a <_ZN8touchgfx8LCD16bpp18DecompressorL8_RLE14blitCopyRGB565EPKhS3_RKNS_4RectES6_h+0x216>
 801bace:	f820 cb02 	strh.w	ip, [r0], #2
 801bad2:	e7fa      	b.n	801baca <_ZN8touchgfx8LCD16bpp18DecompressorL8_RLE14blitCopyRGB565EPKhS3_RKNS_4RectES6_h+0x186>
 801bad4:	9d03      	ldr	r5, [sp, #12]
 801bad6:	ea4f 222c 	mov.w	r2, ip, asr #8
 801bada:	ea4f 0bec 	mov.w	fp, ip, asr #3
 801bade:	f002 02f8 	and.w	r2, r2, #248	; 0xf8
 801bae2:	ea4f 0ccc 	mov.w	ip, ip, lsl #3
 801bae6:	436a      	muls	r2, r5
 801bae8:	f00b 0bfc 	and.w	fp, fp, #252	; 0xfc
 801baec:	fa5f fc8c 	uxtb.w	ip, ip
 801baf0:	9208      	str	r2, [sp, #32]
 801baf2:	fb0b fb05 	mul.w	fp, fp, r5
 801baf6:	fb0c fc05 	mul.w	ip, ip, r5
 801bafa:	4481      	add	r9, r0
 801bafc:	4581      	cmp	r9, r0
 801bafe:	d02c      	beq.n	801bb5a <_ZN8touchgfx8LCD16bpp18DecompressorL8_RLE14blitCopyRGB565EPKhS3_RKNS_4RectES6_h+0x216>
 801bb00:	8802      	ldrh	r2, [r0, #0]
 801bb02:	9d04      	ldr	r5, [sp, #16]
 801bb04:	9f04      	ldr	r7, [sp, #16]
 801bb06:	1216      	asrs	r6, r2, #8
 801bb08:	f006 06f8 	and.w	r6, r6, #248	; 0xf8
 801bb0c:	fb16 f605 	smulbb	r6, r6, r5
 801bb10:	9d08      	ldr	r5, [sp, #32]
 801bb12:	442e      	add	r6, r5
 801bb14:	10d5      	asrs	r5, r2, #3
 801bb16:	00d2      	lsls	r2, r2, #3
 801bb18:	b2d2      	uxtb	r2, r2
 801bb1a:	fb12 f207 	smulbb	r2, r2, r7
 801bb1e:	b2b6      	uxth	r6, r6
 801bb20:	f005 05fc 	and.w	r5, r5, #252	; 0xfc
 801bb24:	4462      	add	r2, ip
 801bb26:	fb15 f507 	smulbb	r5, r5, r7
 801bb2a:	b292      	uxth	r2, r2
 801bb2c:	1c77      	adds	r7, r6, #1
 801bb2e:	eb07 2616 	add.w	r6, r7, r6, lsr #8
 801bb32:	1c57      	adds	r7, r2, #1
 801bb34:	445d      	add	r5, fp
 801bb36:	eb07 2212 	add.w	r2, r7, r2, lsr #8
 801bb3a:	b2ad      	uxth	r5, r5
 801bb3c:	f3c2 22c4 	ubfx	r2, r2, #11, #5
 801bb40:	f406 4678 	and.w	r6, r6, #63488	; 0xf800
 801bb44:	4316      	orrs	r6, r2
 801bb46:	1c6a      	adds	r2, r5, #1
 801bb48:	eb02 2515 	add.w	r5, r2, r5, lsr #8
 801bb4c:	096d      	lsrs	r5, r5, #5
 801bb4e:	f405 65fc 	and.w	r5, r5, #2016	; 0x7e0
 801bb52:	432e      	orrs	r6, r5
 801bb54:	f820 6b02 	strh.w	r6, [r0], #2
 801bb58:	e7d0      	b.n	801bafc <_ZN8touchgfx8LCD16bpp18DecompressorL8_RLE14blitCopyRGB565EPKhS3_RKNS_4RectES6_h+0x1b8>
 801bb5a:	4573      	cmp	r3, lr
 801bb5c:	d38f      	bcc.n	801ba7e <_ZN8touchgfx8LCD16bpp18DecompressorL8_RLE14blitCopyRGB565EPKhS3_RKNS_4RectES6_h+0x13a>
 801bb5e:	f8bd 402c 	ldrh.w	r4, [sp, #44]	; 0x2c
 801bb62:	9b09      	ldr	r3, [sp, #36]	; 0x24
 801bb64:	fa1f f188 	uxth.w	r1, r8
 801bb68:	1a64      	subs	r4, r4, r1
 801bb6a:	881b      	ldrh	r3, [r3, #0]
 801bb6c:	b2a4      	uxth	r4, r4
 801bb6e:	2c00      	cmp	r4, #0
 801bb70:	eba3 0308 	sub.w	r3, r3, r8
 801bb74:	bf18      	it	ne
 801bb76:	2100      	movne	r1, #0
 801bb78:	eb00 0043 	add.w	r0, r0, r3, lsl #1
 801bb7c:	e77f      	b.n	801ba7e <_ZN8touchgfx8LCD16bpp18DecompressorL8_RLE14blitCopyRGB565EPKhS3_RKNS_4RectES6_h+0x13a>
 801bb7e:	4b04      	ldr	r3, [pc, #16]	; (801bb90 <_ZN8touchgfx8LCD16bpp18DecompressorL8_RLE14blitCopyRGB565EPKhS3_RKNS_4RectES6_h+0x24c>)
 801bb80:	6818      	ldr	r0, [r3, #0]
 801bb82:	6803      	ldr	r3, [r0, #0]
 801bb84:	6adb      	ldr	r3, [r3, #44]	; 0x2c
 801bb86:	4798      	blx	r3
 801bb88:	b00f      	add	sp, #60	; 0x3c
 801bb8a:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
 801bb8e:	bf00      	nop
 801bb90:	20012f24 	.word	0x20012f24
 801bb94:	20012f1e 	.word	0x20012f1e

0801bb98 <_ZN8touchgfx8LCD16bpp19DecompressorL8_LZW914blitCopyRGB565EPKhS3_RKNS_4RectES6_h>:
 801bb98:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 801bb9c:	b09f      	sub	sp, #124	; 0x7c
 801bb9e:	e9cd 1213 	strd	r1, r2, [sp, #76]	; 0x4c
 801bba2:	f89d 20a4 	ldrb.w	r2, [sp, #164]	; 0xa4
 801bba6:	9209      	str	r2, [sp, #36]	; 0x24
 801bba8:	461d      	mov	r5, r3
 801bbaa:	4604      	mov	r4, r0
 801bbac:	9b28      	ldr	r3, [sp, #160]	; 0xa0
 801bbae:	2a00      	cmp	r2, #0
 801bbb0:	f000 81eb 	beq.w	801bf8a <_ZN8touchgfx8LCD16bpp19DecompressorL8_LZW914blitCopyRGB565EPKhS3_RKNS_4RectES6_h+0x3f2>
 801bbb4:	6828      	ldr	r0, [r5, #0]
 801bbb6:	6869      	ldr	r1, [r5, #4]
 801bbb8:	aa1a      	add	r2, sp, #104	; 0x68
 801bbba:	c203      	stmia	r2!, {r0, r1}
 801bbbc:	6818      	ldr	r0, [r3, #0]
 801bbbe:	6859      	ldr	r1, [r3, #4]
 801bbc0:	aa1c      	add	r2, sp, #112	; 0x70
 801bbc2:	c203      	stmia	r2!, {r0, r1}
 801bbc4:	a81a      	add	r0, sp, #104	; 0x68
 801bbc6:	f7f9 f9ff 	bl	8014fc8 <_ZN8touchgfx21DisplayTransformation29transformDisplayToFrameBufferERNS_4RectE>
 801bbca:	4629      	mov	r1, r5
 801bbcc:	a81c      	add	r0, sp, #112	; 0x70
 801bbce:	f7f9 fa3f 	bl	8015050 <_ZN8touchgfx21DisplayTransformation29transformDisplayToFrameBufferERNS_4RectERKS1_>
 801bbd2:	f9bd 306c 	ldrsh.w	r3, [sp, #108]	; 0x6c
 801bbd6:	f9bd 806e 	ldrsh.w	r8, [sp, #110]	; 0x6e
 801bbda:	f9bd 6076 	ldrsh.w	r6, [sp, #118]	; 0x76
 801bbde:	f5b3 6f80 	cmp.w	r3, #1024	; 0x400
 801bbe2:	bfd7      	itett	le
 801bbe4:	b29a      	uxthle	r2, r3
 801bbe6:	2201      	movgt	r2, #1
 801bbe8:	f44f 6180 	movle.w	r1, #1024	; 0x400
 801bbec:	fb91 f2f2 	sdivle	r2, r1, r2
 801bbf0:	9202      	str	r2, [sp, #8]
 801bbf2:	9802      	ldr	r0, [sp, #8]
 801bbf4:	f9bd 2072 	ldrsh.w	r2, [sp, #114]	; 0x72
 801bbf8:	fb92 f0f0 	sdiv	r0, r2, r0
 801bbfc:	b280      	uxth	r0, r0
 801bbfe:	9010      	str	r0, [sp, #64]	; 0x40
 801bc00:	9902      	ldr	r1, [sp, #8]
 801bc02:	9802      	ldr	r0, [sp, #8]
 801bc04:	9d10      	ldr	r5, [sp, #64]	; 0x40
 801bc06:	4488      	add	r8, r1
 801bc08:	fb05 2510 	mls	r5, r5, r0, r2
 801bc0c:	fb15 f503 	smulbb	r5, r5, r3
 801bc10:	f108 38ff 	add.w	r8, r8, #4294967295
 801bc14:	f8bd 3068 	ldrh.w	r3, [sp, #104]	; 0x68
 801bc18:	fb98 f8f1 	sdiv	r8, r8, r1
 801bc1c:	f8bd 1070 	ldrh.w	r1, [sp, #112]	; 0x70
 801bc20:	440d      	add	r5, r1
 801bc22:	4419      	add	r1, r3
 801bc24:	f8bd 306a 	ldrh.w	r3, [sp, #106]	; 0x6a
 801bc28:	f8ad 1070 	strh.w	r1, [sp, #112]	; 0x70
 801bc2c:	441a      	add	r2, r3
 801bc2e:	f9bd 3074 	ldrsh.w	r3, [sp, #116]	; 0x74
 801bc32:	9304      	str	r3, [sp, #16]
 801bc34:	4b95      	ldr	r3, [pc, #596]	; (801be8c <_ZN8touchgfx8LCD16bpp19DecompressorL8_LZW914blitCopyRGB565EPKhS3_RKNS_4RectES6_h+0x2f4>)
 801bc36:	f8ad 2072 	strh.w	r2, [sp, #114]	; 0x72
 801bc3a:	6818      	ldr	r0, [r3, #0]
 801bc3c:	6803      	ldr	r3, [r0, #0]
 801bc3e:	6a9b      	ldr	r3, [r3, #40]	; 0x28
 801bc40:	4798      	blx	r3
 801bc42:	4b93      	ldr	r3, [pc, #588]	; (801be90 <_ZN8touchgfx8LCD16bpp19DecompressorL8_LZW914blitCopyRGB565EPKhS3_RKNS_4RectES6_h+0x2f8>)
 801bc44:	f9bd 1072 	ldrsh.w	r1, [sp, #114]	; 0x72
 801bc48:	881a      	ldrh	r2, [r3, #0]
 801bc4a:	f9bd 7070 	ldrsh.w	r7, [sp, #112]	; 0x70
 801bc4e:	9318      	str	r3, [sp, #96]	; 0x60
 801bc50:	fb02 7101 	mla	r1, r2, r1, r7
 801bc54:	eb00 0041 	add.w	r0, r0, r1, lsl #1
 801bc58:	4356      	muls	r6, r2
 801bc5a:	eb00 0246 	add.w	r2, r0, r6, lsl #1
 801bc5e:	f108 0801 	add.w	r8, r8, #1
 801bc62:	920a      	str	r2, [sp, #40]	; 0x28
 801bc64:	9a14      	ldr	r2, [sp, #80]	; 0x50
 801bc66:	f8bd 3024 	ldrh.w	r3, [sp, #36]	; 0x24
 801bc6a:	930f      	str	r3, [sp, #60]	; 0x3c
 801bc6c:	fa1f f888 	uxth.w	r8, r8
 801bc70:	eb02 0888 	add.w	r8, r2, r8, lsl #2
 801bc74:	f108 0204 	add.w	r2, r8, #4
 801bc78:	9211      	str	r2, [sp, #68]	; 0x44
 801bc7a:	9a09      	ldr	r2, [sp, #36]	; 0x24
 801bc7c:	4b85      	ldr	r3, [pc, #532]	; (801be94 <_ZN8touchgfx8LCD16bpp19DecompressorL8_LZW914blitCopyRGB565EPKhS3_RKNS_4RectES6_h+0x2fc>)
 801bc7e:	f1c2 02ff 	rsb	r2, r2, #255	; 0xff
 801bc82:	b2ad      	uxth	r5, r5
 801bc84:	9215      	str	r2, [sp, #84]	; 0x54
 801bc86:	2d00      	cmp	r5, #0
 801bc88:	9a04      	ldr	r2, [sp, #16]
 801bc8a:	f04f 0100 	mov.w	r1, #0
 801bc8e:	bf18      	it	ne
 801bc90:	2200      	movne	r2, #0
 801bc92:	1b1b      	subs	r3, r3, r4
 801bc94:	b292      	uxth	r2, r2
 801bc96:	910d      	str	r1, [sp, #52]	; 0x34
 801bc98:	9319      	str	r3, [sp, #100]	; 0x64
 801bc9a:	9910      	ldr	r1, [sp, #64]	; 0x40
 801bc9c:	9b0d      	ldr	r3, [sp, #52]	; 0x34
 801bc9e:	fa11 f383 	uxtah	r3, r1, r3
 801bca2:	9914      	ldr	r1, [sp, #80]	; 0x50
 801bca4:	eb01 0383 	add.w	r3, r1, r3, lsl #2
 801bca8:	3304      	adds	r3, #4
 801bcaa:	9306      	str	r3, [sp, #24]
 801bcac:	9b0a      	ldr	r3, [sp, #40]	; 0x28
 801bcae:	4283      	cmp	r3, r0
 801bcb0:	f240 8166 	bls.w	801bf80 <_ZN8touchgfx8LCD16bpp19DecompressorL8_LZW914blitCopyRGB565EPKhS3_RKNS_4RectES6_h+0x3e8>
 801bcb4:	9902      	ldr	r1, [sp, #8]
 801bcb6:	f8bd 306c 	ldrh.w	r3, [sp, #108]	; 0x6c
 801bcba:	fbb5 f3f3 	udiv	r3, r5, r3
 801bcbe:	1acb      	subs	r3, r1, r3
 801bcc0:	b29b      	uxth	r3, r3
 801bcc2:	9316      	str	r3, [sp, #88]	; 0x58
 801bcc4:	9b06      	ldr	r3, [sp, #24]
 801bcc6:	9e06      	ldr	r6, [sp, #24]
 801bcc8:	7859      	ldrb	r1, [r3, #1]
 801bcca:	789b      	ldrb	r3, [r3, #2]
 801bccc:	7836      	ldrb	r6, [r6, #0]
 801bcce:	9612      	str	r6, [sp, #72]	; 0x48
 801bcd0:	021b      	lsls	r3, r3, #8
 801bcd2:	ea43 4301 	orr.w	r3, r3, r1, lsl #16
 801bcd6:	9906      	ldr	r1, [sp, #24]
 801bcd8:	78c9      	ldrb	r1, [r1, #3]
 801bcda:	430b      	orrs	r3, r1
 801bcdc:	9913      	ldr	r1, [sp, #76]	; 0x4c
 801bcde:	3601      	adds	r6, #1
 801bce0:	4419      	add	r1, r3
 801bce2:	9605      	str	r6, [sp, #20]
 801bce4:	1c4e      	adds	r6, r1, #1
 801bce6:	9603      	str	r6, [sp, #12]
 801bce8:	7849      	ldrb	r1, [r1, #1]
 801bcea:	9e13      	ldr	r6, [sp, #76]	; 0x4c
 801bcec:	0209      	lsls	r1, r1, #8
 801bcee:	5cf3      	ldrb	r3, [r6, r3]
 801bcf0:	f401 71ff 	and.w	r1, r1, #510	; 0x1fe
 801bcf4:	4319      	orrs	r1, r3
 801bcf6:	b28b      	uxth	r3, r1
 801bcf8:	930c      	str	r3, [sp, #48]	; 0x30
 801bcfa:	2300      	movs	r3, #0
 801bcfc:	f04f 0a01 	mov.w	sl, #1
 801bd00:	9307      	str	r3, [sp, #28]
 801bd02:	469c      	mov	ip, r3
 801bd04:	f8bd 3054 	ldrh.w	r3, [sp, #84]	; 0x54
 801bd08:	f884 1804 	strb.w	r1, [r4, #2052]	; 0x804
 801bd0c:	46d3      	mov	fp, sl
 801bd0e:	4657      	mov	r7, sl
 801bd10:	930e      	str	r3, [sp, #56]	; 0x38
 801bd12:	2d00      	cmp	r5, #0
 801bd14:	d07e      	beq.n	801be14 <_ZN8touchgfx8LCD16bpp19DecompressorL8_LZW914blitCopyRGB565EPKhS3_RKNS_4RectES6_h+0x27c>
 801bd16:	42af      	cmp	r7, r5
 801bd18:	d26e      	bcs.n	801bdf8 <_ZN8touchgfx8LCD16bpp19DecompressorL8_LZW914blitCopyRGB565EPKhS3_RKNS_4RectES6_h+0x260>
 801bd1a:	9b0a      	ldr	r3, [sp, #40]	; 0x28
 801bd1c:	9201      	str	r2, [sp, #4]
 801bd1e:	1bed      	subs	r5, r5, r7
 801bd20:	4283      	cmp	r3, r0
 801bd22:	b2ad      	uxth	r5, r5
 801bd24:	d802      	bhi.n	801bd2c <_ZN8touchgfx8LCD16bpp19DecompressorL8_LZW914blitCopyRGB565EPKhS3_RKNS_4RectES6_h+0x194>
 801bd26:	e073      	b.n	801be10 <_ZN8touchgfx8LCD16bpp19DecompressorL8_LZW914blitCopyRGB565EPKhS3_RKNS_4RectES6_h+0x278>
 801bd28:	2b00      	cmp	r3, #0
 801bd2a:	d15f      	bne.n	801bdec <_ZN8touchgfx8LCD16bpp19DecompressorL8_LZW914blitCopyRGB565EPKhS3_RKNS_4RectES6_h+0x254>
 801bd2c:	9b03      	ldr	r3, [sp, #12]
 801bd2e:	785b      	ldrb	r3, [r3, #1]
 801bd30:	f1cb 0207 	rsb	r2, fp, #7
 801bd34:	4093      	lsls	r3, r2
 801bd36:	005b      	lsls	r3, r3, #1
 801bd38:	f403 72ff 	and.w	r2, r3, #510	; 0x1fe
 801bd3c:	9b03      	ldr	r3, [sp, #12]
 801bd3e:	781b      	ldrb	r3, [r3, #0]
 801bd40:	fa43 f30b 	asr.w	r3, r3, fp
 801bd44:	b2db      	uxtb	r3, r3
 801bd46:	4313      	orrs	r3, r2
 801bd48:	f10b 0201 	add.w	r2, fp, #1
 801bd4c:	fa5f fb82 	uxtb.w	fp, r2
 801bd50:	9a03      	ldr	r2, [sp, #12]
 801bd52:	f1bb 0f08 	cmp.w	fp, #8
 801bd56:	bf15      	itete	ne
 801bd58:	3201      	addne	r2, #1
 801bd5a:	3202      	addeq	r2, #2
 801bd5c:	9203      	strne	r2, [sp, #12]
 801bd5e:	9203      	streq	r2, [sp, #12]
 801bd60:	9a12      	ldr	r2, [sp, #72]	; 0x48
 801bd62:	b29f      	uxth	r7, r3
 801bd64:	bf08      	it	eq
 801bd66:	f04f 0b00 	moveq.w	fp, #0
 801bd6a:	42ba      	cmp	r2, r7
 801bd6c:	d309      	bcc.n	801bd82 <_ZN8touchgfx8LCD16bpp19DecompressorL8_LZW914blitCopyRGB565EPKhS3_RKNS_4RectES6_h+0x1ea>
 801bd6e:	f884 3804 	strb.w	r3, [r4, #2052]	; 0x804
 801bd72:	2301      	movs	r3, #1
 801bd74:	9a05      	ldr	r2, [sp, #20]
 801bd76:	f5b2 7f00 	cmp.w	r2, #512	; 0x200
 801bd7a:	d30e      	bcc.n	801bd9a <_ZN8touchgfx8LCD16bpp19DecompressorL8_LZW914blitCopyRGB565EPKhS3_RKNS_4RectES6_h+0x202>
 801bd7c:	469a      	mov	sl, r3
 801bd7e:	2600      	movs	r6, #0
 801bd80:	e035      	b.n	801bdee <_ZN8touchgfx8LCD16bpp19DecompressorL8_LZW914blitCopyRGB565EPKhS3_RKNS_4RectES6_h+0x256>
 801bd82:	9b05      	ldr	r3, [sp, #20]
 801bd84:	429f      	cmp	r7, r3
 801bd86:	d318      	bcc.n	801bdba <_ZN8touchgfx8LCD16bpp19DecompressorL8_LZW914blitCopyRGB565EPKhS3_RKNS_4RectES6_h+0x222>
 801bd88:	eb04 030a 	add.w	r3, r4, sl
 801bd8c:	f894 2804 	ldrb.w	r2, [r4, #2052]	; 0x804
 801bd90:	f883 2804 	strb.w	r2, [r3, #2052]	; 0x804
 801bd94:	f10a 0301 	add.w	r3, sl, #1
 801bd98:	b29b      	uxth	r3, r3
 801bd9a:	9a05      	ldr	r2, [sp, #20]
 801bd9c:	f894 6804 	ldrb.w	r6, [r4, #2052]	; 0x804
 801bda0:	990c      	ldr	r1, [sp, #48]	; 0x30
 801bda2:	eb04 0282 	add.w	r2, r4, r2, lsl #2
 801bda6:	7116      	strb	r6, [r2, #4]
 801bda8:	f10a 0601 	add.w	r6, sl, #1
 801bdac:	80d1      	strh	r1, [r2, #6]
 801bdae:	7156      	strb	r6, [r2, #5]
 801bdb0:	9a05      	ldr	r2, [sp, #20]
 801bdb2:	3201      	adds	r2, #1
 801bdb4:	b292      	uxth	r2, r2
 801bdb6:	9205      	str	r2, [sp, #20]
 801bdb8:	e7e0      	b.n	801bd7c <_ZN8touchgfx8LCD16bpp19DecompressorL8_LZW914blitCopyRGB565EPKhS3_RKNS_4RectES6_h+0x1e4>
 801bdba:	eb04 0387 	add.w	r3, r4, r7, lsl #2
 801bdbe:	463a      	mov	r2, r7
 801bdc0:	795b      	ldrb	r3, [r3, #5]
 801bdc2:	f603 0604 	addw	r6, r3, #2052	; 0x804
 801bdc6:	4426      	add	r6, r4
 801bdc8:	9919      	ldr	r1, [sp, #100]	; 0x64
 801bdca:	eb01 0c06 	add.w	ip, r1, r6
 801bdce:	f1bc 0f00 	cmp.w	ip, #0
 801bdd2:	dd07      	ble.n	801bde4 <_ZN8touchgfx8LCD16bpp19DecompressorL8_LZW914blitCopyRGB565EPKhS3_RKNS_4RectES6_h+0x24c>
 801bdd4:	eb04 0282 	add.w	r2, r4, r2, lsl #2
 801bdd8:	f892 c004 	ldrb.w	ip, [r2, #4]
 801bddc:	f806 cd01 	strb.w	ip, [r6, #-1]!
 801bde0:	88d2      	ldrh	r2, [r2, #6]
 801bde2:	e7f1      	b.n	801bdc8 <_ZN8touchgfx8LCD16bpp19DecompressorL8_LZW914blitCopyRGB565EPKhS3_RKNS_4RectES6_h+0x230>
 801bde4:	f884 2804 	strb.w	r2, [r4, #2052]	; 0x804
 801bde8:	b29b      	uxth	r3, r3
 801bdea:	e7c3      	b.n	801bd74 <_ZN8touchgfx8LCD16bpp19DecompressorL8_LZW914blitCopyRGB565EPKhS3_RKNS_4RectES6_h+0x1dc>
 801bdec:	9f0c      	ldr	r7, [sp, #48]	; 0x30
 801bdee:	970c      	str	r7, [sp, #48]	; 0x30
 801bdf0:	9a01      	ldr	r2, [sp, #4]
 801bdf2:	46b4      	mov	ip, r6
 801bdf4:	461f      	mov	r7, r3
 801bdf6:	e78c      	b.n	801bd12 <_ZN8touchgfx8LCD16bpp19DecompressorL8_LZW914blitCopyRGB565EPKhS3_RKNS_4RectES6_h+0x17a>
 801bdf8:	1b7b      	subs	r3, r7, r5
 801bdfa:	f8bd 2010 	ldrh.w	r2, [sp, #16]
 801bdfe:	9201      	str	r2, [sp, #4]
 801be00:	eb0c 0605 	add.w	r6, ip, r5
 801be04:	b29b      	uxth	r3, r3
 801be06:	b2b6      	uxth	r6, r6
 801be08:	2500      	movs	r5, #0
 801be0a:	9a0a      	ldr	r2, [sp, #40]	; 0x28
 801be0c:	4282      	cmp	r2, r0
 801be0e:	d88b      	bhi.n	801bd28 <_ZN8touchgfx8LCD16bpp19DecompressorL8_LZW914blitCopyRGB565EPKhS3_RKNS_4RectES6_h+0x190>
 801be10:	9a01      	ldr	r2, [sp, #4]
 801be12:	e74b      	b.n	801bcac <_ZN8touchgfx8LCD16bpp19DecompressorL8_LZW914blitCopyRGB565EPKhS3_RKNS_4RectES6_h+0x114>
 801be14:	4297      	cmp	r7, r2
 801be16:	d332      	bcc.n	801be7e <_ZN8touchgfx8LCD16bpp19DecompressorL8_LZW914blitCopyRGB565EPKhS3_RKNS_4RectES6_h+0x2e6>
 801be18:	1abb      	subs	r3, r7, r2
 801be1a:	b29b      	uxth	r3, r3
 801be1c:	9208      	str	r2, [sp, #32]
 801be1e:	9501      	str	r5, [sp, #4]
 801be20:	9909      	ldr	r1, [sp, #36]	; 0x24
 801be22:	29ff      	cmp	r1, #255	; 0xff
 801be24:	9908      	ldr	r1, [sp, #32]
 801be26:	eb0c 0601 	add.w	r6, ip, r1
 801be2a:	d135      	bne.n	801be98 <_ZN8touchgfx8LCD16bpp19DecompressorL8_LZW914blitCopyRGB565EPKhS3_RKNS_4RectES6_h+0x300>
 801be2c:	f1a0 0e02 	sub.w	lr, r0, #2
 801be30:	b2b6      	uxth	r6, r6
 801be32:	45b4      	cmp	ip, r6
 801be34:	f040 808c 	bne.w	801bf50 <_ZN8touchgfx8LCD16bpp19DecompressorL8_LZW914blitCopyRGB565EPKhS3_RKNS_4RectES6_h+0x3b8>
 801be38:	9908      	ldr	r1, [sp, #32]
 801be3a:	4297      	cmp	r7, r2
 801be3c:	eb00 0041 	add.w	r0, r0, r1, lsl #1
 801be40:	d3e2      	bcc.n	801be08 <_ZN8touchgfx8LCD16bpp19DecompressorL8_LZW914blitCopyRGB565EPKhS3_RKNS_4RectES6_h+0x270>
 801be42:	9a18      	ldr	r2, [sp, #96]	; 0x60
 801be44:	9904      	ldr	r1, [sp, #16]
 801be46:	8812      	ldrh	r2, [r2, #0]
 801be48:	1a52      	subs	r2, r2, r1
 801be4a:	eb00 0042 	add.w	r0, r0, r2, lsl #1
 801be4e:	9a07      	ldr	r2, [sp, #28]
 801be50:	9916      	ldr	r1, [sp, #88]	; 0x58
 801be52:	3201      	adds	r2, #1
 801be54:	428a      	cmp	r2, r1
 801be56:	9207      	str	r2, [sp, #28]
 801be58:	f040 8087 	bne.w	801bf6a <_ZN8touchgfx8LCD16bpp19DecompressorL8_LZW914blitCopyRGB565EPKhS3_RKNS_4RectES6_h+0x3d2>
 801be5c:	f8bd 5070 	ldrh.w	r5, [sp, #112]	; 0x70
 801be60:	f8bd 7068 	ldrh.w	r7, [sp, #104]	; 0x68
 801be64:	9b04      	ldr	r3, [sp, #16]
 801be66:	1bed      	subs	r5, r5, r7
 801be68:	b2ad      	uxth	r5, r5
 801be6a:	2d00      	cmp	r5, #0
 801be6c:	bf08      	it	eq
 801be6e:	461a      	moveq	r2, r3
 801be70:	9b0d      	ldr	r3, [sp, #52]	; 0x34
 801be72:	bf18      	it	ne
 801be74:	2200      	movne	r2, #0
 801be76:	3301      	adds	r3, #1
 801be78:	930d      	str	r3, [sp, #52]	; 0x34
 801be7a:	b292      	uxth	r2, r2
 801be7c:	e70d      	b.n	801bc9a <_ZN8touchgfx8LCD16bpp19DecompressorL8_LZW914blitCopyRGB565EPKhS3_RKNS_4RectES6_h+0x102>
 801be7e:	1bd1      	subs	r1, r2, r7
 801be80:	b28b      	uxth	r3, r1
 801be82:	9301      	str	r3, [sp, #4]
 801be84:	9708      	str	r7, [sp, #32]
 801be86:	462b      	mov	r3, r5
 801be88:	e7ca      	b.n	801be20 <_ZN8touchgfx8LCD16bpp19DecompressorL8_LZW914blitCopyRGB565EPKhS3_RKNS_4RectES6_h+0x288>
 801be8a:	bf00      	nop
 801be8c:	20012f24 	.word	0x20012f24
 801be90:	20012f1e 	.word	0x20012f1e
 801be94:	fffff7fb 	.word	0xfffff7fb
 801be98:	b2b6      	uxth	r6, r6
 801be9a:	900b      	str	r0, [sp, #44]	; 0x2c
 801be9c:	45b4      	cmp	ip, r6
 801be9e:	d0cb      	beq.n	801be38 <_ZN8touchgfx8LCD16bpp19DecompressorL8_LZW914blitCopyRGB565EPKhS3_RKNS_4RectES6_h+0x2a0>
 801bea0:	f10c 0101 	add.w	r1, ip, #1
 801bea4:	44a4      	add	ip, r4
 801bea6:	9117      	str	r1, [sp, #92]	; 0x5c
 801bea8:	f89c 5804 	ldrb.w	r5, [ip, #2052]	; 0x804
 801beac:	9911      	ldr	r1, [sp, #68]	; 0x44
 801beae:	f831 5015 	ldrh.w	r5, [r1, r5, lsl #1]
 801beb2:	990b      	ldr	r1, [sp, #44]	; 0x2c
 801beb4:	f8b1 c000 	ldrh.w	ip, [r1]
 801beb8:	990e      	ldr	r1, [sp, #56]	; 0x38
 801beba:	ea4f 2e2c 	mov.w	lr, ip, asr #8
 801bebe:	f00e 0ef8 	and.w	lr, lr, #248	; 0xf8
 801bec2:	fb1e fe01 	smulbb	lr, lr, r1
 801bec6:	ea4f 2825 	mov.w	r8, r5, asr #8
 801beca:	990f      	ldr	r1, [sp, #60]	; 0x3c
 801becc:	f008 08f8 	and.w	r8, r8, #248	; 0xf8
 801bed0:	fb08 e801 	mla	r8, r8, r1, lr
 801bed4:	ea4f 09ec 	mov.w	r9, ip, asr #3
 801bed8:	990e      	ldr	r1, [sp, #56]	; 0x38
 801beda:	f009 09fc 	and.w	r9, r9, #252	; 0xfc
 801bede:	fb19 f901 	smulbb	r9, r9, r1
 801bee2:	ea4f 0ee5 	mov.w	lr, r5, asr #3
 801bee6:	990f      	ldr	r1, [sp, #60]	; 0x3c
 801bee8:	f00e 0efc 	and.w	lr, lr, #252	; 0xfc
 801beec:	fb0e 9e01 	mla	lr, lr, r1, r9
 801bef0:	ea4f 0ccc 	mov.w	ip, ip, lsl #3
 801bef4:	990e      	ldr	r1, [sp, #56]	; 0x38
 801bef6:	fa5f fc8c 	uxtb.w	ip, ip
 801befa:	fb1c fc01 	smulbb	ip, ip, r1
 801befe:	00ed      	lsls	r5, r5, #3
 801bf00:	990f      	ldr	r1, [sp, #60]	; 0x3c
 801bf02:	b2ed      	uxtb	r5, r5
 801bf04:	fb05 c501 	mla	r5, r5, r1, ip
 801bf08:	fa1f f888 	uxth.w	r8, r8
 801bf0c:	fa1f fe8e 	uxth.w	lr, lr
 801bf10:	b2ad      	uxth	r5, r5
 801bf12:	f108 0c01 	add.w	ip, r8, #1
 801bf16:	eb0c 2818 	add.w	r8, ip, r8, lsr #8
 801bf1a:	f10e 0901 	add.w	r9, lr, #1
 801bf1e:	f105 0c01 	add.w	ip, r5, #1
 801bf22:	eb0c 2c15 	add.w	ip, ip, r5, lsr #8
 801bf26:	eb09 291e 	add.w	r9, r9, lr, lsr #8
 801bf2a:	f3cc 2cc4 	ubfx	ip, ip, #11, #5
 801bf2e:	f408 4878 	and.w	r8, r8, #63488	; 0xf800
 801bf32:	ea4f 1959 	mov.w	r9, r9, lsr #5
 801bf36:	ea4c 0808 	orr.w	r8, ip, r8
 801bf3a:	990b      	ldr	r1, [sp, #44]	; 0x2c
 801bf3c:	f8bd c05c 	ldrh.w	ip, [sp, #92]	; 0x5c
 801bf40:	f409 69fc 	and.w	r9, r9, #2016	; 0x7e0
 801bf44:	ea48 0809 	orr.w	r8, r8, r9
 801bf48:	f821 8b02 	strh.w	r8, [r1], #2
 801bf4c:	910b      	str	r1, [sp, #44]	; 0x2c
 801bf4e:	e7a5      	b.n	801be9c <_ZN8touchgfx8LCD16bpp19DecompressorL8_LZW914blitCopyRGB565EPKhS3_RKNS_4RectES6_h+0x304>
 801bf50:	f10c 0801 	add.w	r8, ip, #1
 801bf54:	44a4      	add	ip, r4
 801bf56:	9911      	ldr	r1, [sp, #68]	; 0x44
 801bf58:	f89c 5804 	ldrb.w	r5, [ip, #2052]	; 0x804
 801bf5c:	f831 5015 	ldrh.w	r5, [r1, r5, lsl #1]
 801bf60:	f82e 5f02 	strh.w	r5, [lr, #2]!
 801bf64:	fa1f fc88 	uxth.w	ip, r8
 801bf68:	e763      	b.n	801be32 <_ZN8touchgfx8LCD16bpp19DecompressorL8_LZW914blitCopyRGB565EPKhS3_RKNS_4RectES6_h+0x29a>
 801bf6a:	f8bd 2010 	ldrh.w	r2, [sp, #16]
 801bf6e:	f8bd 506c 	ldrh.w	r5, [sp, #108]	; 0x6c
 801bf72:	1aad      	subs	r5, r5, r2
 801bf74:	b2ad      	uxth	r5, r5
 801bf76:	2d00      	cmp	r5, #0
 801bf78:	bf18      	it	ne
 801bf7a:	2200      	movne	r2, #0
 801bf7c:	9201      	str	r2, [sp, #4]
 801bf7e:	e744      	b.n	801be0a <_ZN8touchgfx8LCD16bpp19DecompressorL8_LZW914blitCopyRGB565EPKhS3_RKNS_4RectES6_h+0x272>
 801bf80:	4b03      	ldr	r3, [pc, #12]	; (801bf90 <_ZN8touchgfx8LCD16bpp19DecompressorL8_LZW914blitCopyRGB565EPKhS3_RKNS_4RectES6_h+0x3f8>)
 801bf82:	6818      	ldr	r0, [r3, #0]
 801bf84:	6803      	ldr	r3, [r0, #0]
 801bf86:	6adb      	ldr	r3, [r3, #44]	; 0x2c
 801bf88:	4798      	blx	r3
 801bf8a:	b01f      	add	sp, #124	; 0x7c
 801bf8c:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
 801bf90:	20012f24 	.word	0x20012f24

0801bf94 <_ZN8touchgfx8LCD16bpp18DecompressorL8_RLE16blitCopyARGB8888EPKhS3_RKNS_4RectES6_h>:
 801bf94:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 801bf98:	b08f      	sub	sp, #60	; 0x3c
 801bf9a:	461c      	mov	r4, r3
 801bf9c:	9203      	str	r2, [sp, #12]
 801bf9e:	f89d 2064 	ldrb.w	r2, [sp, #100]	; 0x64
 801bfa2:	9b18      	ldr	r3, [sp, #96]	; 0x60
 801bfa4:	9202      	str	r2, [sp, #8]
 801bfa6:	460f      	mov	r7, r1
 801bfa8:	2a00      	cmp	r2, #0
 801bfaa:	f000 8128 	beq.w	801c1fe <_ZN8touchgfx8LCD16bpp18DecompressorL8_RLE16blitCopyARGB8888EPKhS3_RKNS_4RectES6_h+0x26a>
 801bfae:	6820      	ldr	r0, [r4, #0]
 801bfb0:	6861      	ldr	r1, [r4, #4]
 801bfb2:	aa0a      	add	r2, sp, #40	; 0x28
 801bfb4:	c203      	stmia	r2!, {r0, r1}
 801bfb6:	6818      	ldr	r0, [r3, #0]
 801bfb8:	6859      	ldr	r1, [r3, #4]
 801bfba:	aa0c      	add	r2, sp, #48	; 0x30
 801bfbc:	c203      	stmia	r2!, {r0, r1}
 801bfbe:	a80a      	add	r0, sp, #40	; 0x28
 801bfc0:	f7f9 f802 	bl	8014fc8 <_ZN8touchgfx21DisplayTransformation29transformDisplayToFrameBufferERNS_4RectE>
 801bfc4:	4621      	mov	r1, r4
 801bfc6:	a80c      	add	r0, sp, #48	; 0x30
 801bfc8:	f7f9 f842 	bl	8015050 <_ZN8touchgfx21DisplayTransformation29transformDisplayToFrameBufferERNS_4RectERKS1_>
 801bfcc:	f9bd 602c 	ldrsh.w	r6, [sp, #44]	; 0x2c
 801bfd0:	f9bd 502e 	ldrsh.w	r5, [sp, #46]	; 0x2e
 801bfd4:	f8bd 0030 	ldrh.w	r0, [sp, #48]	; 0x30
 801bfd8:	f5b6 6f80 	cmp.w	r6, #1024	; 0x400
 801bfdc:	bfde      	ittt	le
 801bfde:	b2b3      	uxthle	r3, r6
 801bfe0:	f44f 6280 	movle.w	r2, #1024	; 0x400
 801bfe4:	fb92 f3f3 	sdivle	r3, r2, r3
 801bfe8:	f9bd 2032 	ldrsh.w	r2, [sp, #50]	; 0x32
 801bfec:	bfc8      	it	gt
 801bfee:	2301      	movgt	r3, #1
 801bff0:	fb92 f1f3 	sdiv	r1, r2, r3
 801bff4:	fa1f fc81 	uxth.w	ip, r1
 801bff8:	fb0c 2413 	mls	r4, ip, r3, r2
 801bffc:	fb14 f406 	smulbb	r4, r4, r6
 801c000:	441d      	add	r5, r3
 801c002:	4404      	add	r4, r0
 801c004:	4661      	mov	r1, ip
 801c006:	3d01      	subs	r5, #1
 801c008:	b2a4      	uxth	r4, r4
 801c00a:	fb95 f5f3 	sdiv	r5, r5, r3
 801c00e:	b121      	cbz	r1, 801c01a <_ZN8touchgfx8LCD16bpp18DecompressorL8_RLE16blitCopyARGB8888EPKhS3_RKNS_4RectES6_h+0x86>
 801c010:	9b03      	ldr	r3, [sp, #12]
 801c012:	f853 302c 	ldr.w	r3, [r3, ip, lsl #2]
 801c016:	ba1b      	rev	r3, r3
 801c018:	441f      	add	r7, r3
 801c01a:	f8bd 3028 	ldrh.w	r3, [sp, #40]	; 0x28
 801c01e:	f9bd 9034 	ldrsh.w	r9, [sp, #52]	; 0x34
 801c022:	f9bd 6036 	ldrsh.w	r6, [sp, #54]	; 0x36
 801c026:	4418      	add	r0, r3
 801c028:	f8bd 302a 	ldrh.w	r3, [sp, #42]	; 0x2a
 801c02c:	f8ad 0030 	strh.w	r0, [sp, #48]	; 0x30
 801c030:	441a      	add	r2, r3
 801c032:	4b74      	ldr	r3, [pc, #464]	; (801c204 <_ZN8touchgfx8LCD16bpp18DecompressorL8_RLE16blitCopyARGB8888EPKhS3_RKNS_4RectES6_h+0x270>)
 801c034:	f8ad 2032 	strh.w	r2, [sp, #50]	; 0x32
 801c038:	6818      	ldr	r0, [r3, #0]
 801c03a:	6803      	ldr	r3, [r0, #0]
 801c03c:	6a9b      	ldr	r3, [r3, #40]	; 0x28
 801c03e:	4798      	blx	r3
 801c040:	4a71      	ldr	r2, [pc, #452]	; (801c208 <_ZN8touchgfx8LCD16bpp18DecompressorL8_RLE16blitCopyARGB8888EPKhS3_RKNS_4RectES6_h+0x274>)
 801c042:	f9bd 1032 	ldrsh.w	r1, [sp, #50]	; 0x32
 801c046:	8813      	ldrh	r3, [r2, #0]
 801c048:	f9bd c030 	ldrsh.w	ip, [sp, #48]	; 0x30
 801c04c:	9209      	str	r2, [sp, #36]	; 0x24
 801c04e:	fb03 c101 	mla	r1, r3, r1, ip
 801c052:	eb00 0041 	add.w	r0, r0, r1, lsl #1
 801c056:	4373      	muls	r3, r6
 801c058:	b2ad      	uxth	r5, r5
 801c05a:	eb00 0343 	add.w	r3, r0, r3, lsl #1
 801c05e:	00ad      	lsls	r5, r5, #2
 801c060:	2c00      	cmp	r4, #0
 801c062:	9304      	str	r3, [sp, #16]
 801c064:	f105 0304 	add.w	r3, r5, #4
 801c068:	9305      	str	r3, [sp, #20]
 801c06a:	bf0c      	ite	eq
 801c06c:	46c8      	moveq	r8, r9
 801c06e:	f04f 0800 	movne.w	r8, #0
 801c072:	2300      	movs	r3, #0
 801c074:	fa1f f888 	uxth.w	r8, r8
 801c078:	9301      	str	r3, [sp, #4]
 801c07a:	9a04      	ldr	r2, [sp, #16]
 801c07c:	4282      	cmp	r2, r0
 801c07e:	f240 80b9 	bls.w	801c1f4 <_ZN8touchgfx8LCD16bpp18DecompressorL8_RLE16blitCopyARGB8888EPKhS3_RKNS_4RectES6_h+0x260>
 801c082:	b95b      	cbnz	r3, 801c09c <_ZN8touchgfx8LCD16bpp18DecompressorL8_RLE16blitCopyARGB8888EPKhS3_RKNS_4RectES6_h+0x108>
 801c084:	783a      	ldrb	r2, [r7, #0]
 801c086:	0993      	lsrs	r3, r2, #6
 801c088:	f002 023f 	and.w	r2, r2, #63	; 0x3f
 801c08c:	9201      	str	r2, [sp, #4]
 801c08e:	1e5a      	subs	r2, r3, #1
 801c090:	2a02      	cmp	r2, #2
 801c092:	bf8d      	iteet	hi
 801c094:	787b      	ldrbhi	r3, [r7, #1]
 801c096:	3701      	addls	r7, #1
 801c098:	b29b      	uxthls	r3, r3
 801c09a:	3702      	addhi	r7, #2
 801c09c:	b184      	cbz	r4, 801c0c0 <_ZN8touchgfx8LCD16bpp18DecompressorL8_RLE16blitCopyARGB8888EPKhS3_RKNS_4RectES6_h+0x12c>
 801c09e:	429c      	cmp	r4, r3
 801c0a0:	bf95      	itete	ls
 801c0a2:	1b1c      	subls	r4, r3, r4
 801c0a4:	1ae4      	subhi	r4, r4, r3
 801c0a6:	fa1f fa84 	uxthls.w	sl, r4
 801c0aa:	b2a4      	uxthhi	r4, r4
 801c0ac:	bf87      	ittee	hi
 801c0ae:	46c4      	movhi	ip, r8
 801c0b0:	f04f 0a00 	movhi.w	sl, #0
 801c0b4:	fa1f fc89 	uxthls.w	ip, r9
 801c0b8:	2400      	movls	r4, #0
 801c0ba:	4653      	mov	r3, sl
 801c0bc:	46e0      	mov	r8, ip
 801c0be:	e7dc      	b.n	801c07a <_ZN8touchgfx8LCD16bpp18DecompressorL8_RLE16blitCopyARGB8888EPKhS3_RKNS_4RectES6_h+0xe6>
 801c0c0:	2204      	movs	r2, #4
 801c0c2:	4615      	mov	r5, r2
 801c0c4:	9905      	ldr	r1, [sp, #20]
 801c0c6:	9a01      	ldr	r2, [sp, #4]
 801c0c8:	fb15 1202 	smlabb	r2, r5, r2, r1
 801c0cc:	9903      	ldr	r1, [sp, #12]
 801c0ce:	588a      	ldr	r2, [r1, r2]
 801c0d0:	4543      	cmp	r3, r8
 801c0d2:	bf27      	ittee	cs
 801c0d4:	eba3 0a08 	subcs.w	sl, r3, r8
 801c0d8:	46c6      	movcs	lr, r8
 801c0da:	eba8 0c03 	subcc.w	ip, r8, r3
 801c0de:	469e      	movcc	lr, r3
 801c0e0:	ea4f 6112 	mov.w	r1, r2, lsr #24
 801c0e4:	bf27      	ittee	cs
 801c0e6:	fa1f fa8a 	uxthcs.w	sl, sl
 801c0ea:	46a4      	movcs	ip, r4
 801c0ec:	fa1f fc8c 	uxthcc.w	ip, ip
 801c0f0:	46a2      	movcc	sl, r4
 801c0f2:	ea4f 0e4e 	mov.w	lr, lr, lsl #1
 801c0f6:	2900      	cmp	r1, #0
 801c0f8:	d066      	beq.n	801c1c8 <_ZN8touchgfx8LCD16bpp18DecompressorL8_RLE16blitCopyARGB8888EPKhS3_RKNS_4RectES6_h+0x234>
 801c0fa:	29ff      	cmp	r1, #255	; 0xff
 801c0fc:	ea4f 2612 	mov.w	r6, r2, lsr #8
 801c100:	d114      	bne.n	801c12c <_ZN8touchgfx8LCD16bpp18DecompressorL8_RLE16blitCopyARGB8888EPKhS3_RKNS_4RectES6_h+0x198>
 801c102:	9d02      	ldr	r5, [sp, #8]
 801c104:	2dff      	cmp	r5, #255	; 0xff
 801c106:	d111      	bne.n	801c12c <_ZN8touchgfx8LCD16bpp18DecompressorL8_RLE16blitCopyARGB8888EPKhS3_RKNS_4RectES6_h+0x198>
 801c108:	0951      	lsrs	r1, r2, #5
 801c10a:	f426 66ff 	bic.w	r6, r6, #2040	; 0x7f8
 801c10e:	f401 61fc 	and.w	r1, r1, #2016	; 0x7e0
 801c112:	f026 0607 	bic.w	r6, r6, #7
 801c116:	430e      	orrs	r6, r1
 801c118:	f3c2 02c4 	ubfx	r2, r2, #3, #5
 801c11c:	4316      	orrs	r6, r2
 801c11e:	b2b6      	uxth	r6, r6
 801c120:	4486      	add	lr, r0
 801c122:	4586      	cmp	lr, r0
 801c124:	d051      	beq.n	801c1ca <_ZN8touchgfx8LCD16bpp18DecompressorL8_RLE16blitCopyARGB8888EPKhS3_RKNS_4RectES6_h+0x236>
 801c126:	f820 6b02 	strh.w	r6, [r0], #2
 801c12a:	e7fa      	b.n	801c122 <_ZN8touchgfx8LCD16bpp18DecompressorL8_RLE16blitCopyARGB8888EPKhS3_RKNS_4RectES6_h+0x18e>
 801c12c:	9d02      	ldr	r5, [sp, #8]
 801c12e:	4369      	muls	r1, r5
 801c130:	1c4d      	adds	r5, r1, #1
 801c132:	eb05 2521 	add.w	r5, r5, r1, asr #8
 801c136:	122d      	asrs	r5, r5, #8
 801c138:	ea6f 0b05 	mvn.w	fp, r5
 801c13c:	f3c2 4107 	ubfx	r1, r2, #16, #8
 801c140:	b2ad      	uxth	r5, r5
 801c142:	b2f6      	uxtb	r6, r6
 801c144:	b2d2      	uxtb	r2, r2
 801c146:	fb11 f105 	smulbb	r1, r1, r5
 801c14a:	fb16 f605 	smulbb	r6, r6, r5
 801c14e:	fb12 f205 	smulbb	r2, r2, r5
 801c152:	b289      	uxth	r1, r1
 801c154:	b2b6      	uxth	r6, r6
 801c156:	b292      	uxth	r2, r2
 801c158:	9106      	str	r1, [sp, #24]
 801c15a:	9607      	str	r6, [sp, #28]
 801c15c:	9208      	str	r2, [sp, #32]
 801c15e:	4486      	add	lr, r0
 801c160:	fa5f fb8b 	uxtb.w	fp, fp
 801c164:	4586      	cmp	lr, r0
 801c166:	d030      	beq.n	801c1ca <_ZN8touchgfx8LCD16bpp18DecompressorL8_RLE16blitCopyARGB8888EPKhS3_RKNS_4RectES6_h+0x236>
 801c168:	8802      	ldrh	r2, [r0, #0]
 801c16a:	9906      	ldr	r1, [sp, #24]
 801c16c:	1216      	asrs	r6, r2, #8
 801c16e:	f006 06f8 	and.w	r6, r6, #248	; 0xf8
 801c172:	10d5      	asrs	r5, r2, #3
 801c174:	ea46 1656 	orr.w	r6, r6, r6, lsr #5
 801c178:	fb06 160b 	mla	r6, r6, fp, r1
 801c17c:	f005 05fc 	and.w	r5, r5, #252	; 0xfc
 801c180:	9907      	ldr	r1, [sp, #28]
 801c182:	00d2      	lsls	r2, r2, #3
 801c184:	ea45 1595 	orr.w	r5, r5, r5, lsr #6
 801c188:	fb05 150b 	mla	r5, r5, fp, r1
 801c18c:	b2d2      	uxtb	r2, r2
 801c18e:	9908      	ldr	r1, [sp, #32]
 801c190:	ea42 1252 	orr.w	r2, r2, r2, lsr #5
 801c194:	b2b6      	uxth	r6, r6
 801c196:	fb02 120b 	mla	r2, r2, fp, r1
 801c19a:	b292      	uxth	r2, r2
 801c19c:	1c71      	adds	r1, r6, #1
 801c19e:	eb01 2616 	add.w	r6, r1, r6, lsr #8
 801c1a2:	1c51      	adds	r1, r2, #1
 801c1a4:	eb01 2212 	add.w	r2, r1, r2, lsr #8
 801c1a8:	b2ad      	uxth	r5, r5
 801c1aa:	f3c2 22c4 	ubfx	r2, r2, #11, #5
 801c1ae:	f406 4678 	and.w	r6, r6, #63488	; 0xf800
 801c1b2:	4316      	orrs	r6, r2
 801c1b4:	1c6a      	adds	r2, r5, #1
 801c1b6:	eb02 2515 	add.w	r5, r2, r5, lsr #8
 801c1ba:	096d      	lsrs	r5, r5, #5
 801c1bc:	f405 65fc 	and.w	r5, r5, #2016	; 0x7e0
 801c1c0:	432e      	orrs	r6, r5
 801c1c2:	f820 6b02 	strh.w	r6, [r0], #2
 801c1c6:	e7cd      	b.n	801c164 <_ZN8touchgfx8LCD16bpp18DecompressorL8_RLE16blitCopyARGB8888EPKhS3_RKNS_4RectES6_h+0x1d0>
 801c1c8:	4470      	add	r0, lr
 801c1ca:	4543      	cmp	r3, r8
 801c1cc:	f4ff af75 	bcc.w	801c0ba <_ZN8touchgfx8LCD16bpp18DecompressorL8_RLE16blitCopyARGB8888EPKhS3_RKNS_4RectES6_h+0x126>
 801c1d0:	f8bd 402c 	ldrh.w	r4, [sp, #44]	; 0x2c
 801c1d4:	9b09      	ldr	r3, [sp, #36]	; 0x24
 801c1d6:	fa1f fc89 	uxth.w	ip, r9
 801c1da:	eba4 040c 	sub.w	r4, r4, ip
 801c1de:	881b      	ldrh	r3, [r3, #0]
 801c1e0:	b2a4      	uxth	r4, r4
 801c1e2:	2c00      	cmp	r4, #0
 801c1e4:	eba3 0309 	sub.w	r3, r3, r9
 801c1e8:	bf18      	it	ne
 801c1ea:	f04f 0c00 	movne.w	ip, #0
 801c1ee:	eb00 0043 	add.w	r0, r0, r3, lsl #1
 801c1f2:	e762      	b.n	801c0ba <_ZN8touchgfx8LCD16bpp18DecompressorL8_RLE16blitCopyARGB8888EPKhS3_RKNS_4RectES6_h+0x126>
 801c1f4:	4b03      	ldr	r3, [pc, #12]	; (801c204 <_ZN8touchgfx8LCD16bpp18DecompressorL8_RLE16blitCopyARGB8888EPKhS3_RKNS_4RectES6_h+0x270>)
 801c1f6:	6818      	ldr	r0, [r3, #0]
 801c1f8:	6803      	ldr	r3, [r0, #0]
 801c1fa:	6adb      	ldr	r3, [r3, #44]	; 0x2c
 801c1fc:	4798      	blx	r3
 801c1fe:	b00f      	add	sp, #60	; 0x3c
 801c200:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
 801c204:	20012f24 	.word	0x20012f24
 801c208:	20012f1e 	.word	0x20012f1e

0801c20c <_ZN8touchgfx8LCD16bpp18DecompressorL8_RLE14blitCopyRGB888EPKhS3_RKNS_4RectES6_h>:
 801c20c:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 801c210:	b093      	sub	sp, #76	; 0x4c
 801c212:	461c      	mov	r4, r3
 801c214:	9205      	str	r2, [sp, #20]
 801c216:	f89d 2074 	ldrb.w	r2, [sp, #116]	; 0x74
 801c21a:	9101      	str	r1, [sp, #4]
 801c21c:	9b1c      	ldr	r3, [sp, #112]	; 0x70
 801c21e:	9202      	str	r2, [sp, #8]
 801c220:	2a00      	cmp	r2, #0
 801c222:	f000 812c 	beq.w	801c47e <_ZN8touchgfx8LCD16bpp18DecompressorL8_RLE14blitCopyRGB888EPKhS3_RKNS_4RectES6_h+0x272>
 801c226:	6820      	ldr	r0, [r4, #0]
 801c228:	6861      	ldr	r1, [r4, #4]
 801c22a:	aa0e      	add	r2, sp, #56	; 0x38
 801c22c:	c203      	stmia	r2!, {r0, r1}
 801c22e:	6818      	ldr	r0, [r3, #0]
 801c230:	6859      	ldr	r1, [r3, #4]
 801c232:	aa10      	add	r2, sp, #64	; 0x40
 801c234:	c203      	stmia	r2!, {r0, r1}
 801c236:	a80e      	add	r0, sp, #56	; 0x38
 801c238:	f7f8 fec6 	bl	8014fc8 <_ZN8touchgfx21DisplayTransformation29transformDisplayToFrameBufferERNS_4RectE>
 801c23c:	4621      	mov	r1, r4
 801c23e:	a810      	add	r0, sp, #64	; 0x40
 801c240:	f7f8 ff06 	bl	8015050 <_ZN8touchgfx21DisplayTransformation29transformDisplayToFrameBufferERNS_4RectERKS1_>
 801c244:	f9bd 603c 	ldrsh.w	r6, [sp, #60]	; 0x3c
 801c248:	f9bd 503e 	ldrsh.w	r5, [sp, #62]	; 0x3e
 801c24c:	f8bd 0040 	ldrh.w	r0, [sp, #64]	; 0x40
 801c250:	f5b6 6f80 	cmp.w	r6, #1024	; 0x400
 801c254:	bfde      	ittt	le
 801c256:	b2b3      	uxthle	r3, r6
 801c258:	f44f 6280 	movle.w	r2, #1024	; 0x400
 801c25c:	fb92 f3f3 	sdivle	r3, r2, r3
 801c260:	f9bd 2042 	ldrsh.w	r2, [sp, #66]	; 0x42
 801c264:	bfc8      	it	gt
 801c266:	2301      	movgt	r3, #1
 801c268:	fb92 f1f3 	sdiv	r1, r2, r3
 801c26c:	fa1f fc81 	uxth.w	ip, r1
 801c270:	fb0c 2413 	mls	r4, ip, r3, r2
 801c274:	fb14 f406 	smulbb	r4, r4, r6
 801c278:	441d      	add	r5, r3
 801c27a:	4404      	add	r4, r0
 801c27c:	4661      	mov	r1, ip
 801c27e:	3d01      	subs	r5, #1
 801c280:	b2a4      	uxth	r4, r4
 801c282:	fb95 f5f3 	sdiv	r5, r5, r3
 801c286:	b131      	cbz	r1, 801c296 <_ZN8touchgfx8LCD16bpp18DecompressorL8_RLE14blitCopyRGB888EPKhS3_RKNS_4RectES6_h+0x8a>
 801c288:	9b05      	ldr	r3, [sp, #20]
 801c28a:	9901      	ldr	r1, [sp, #4]
 801c28c:	f853 302c 	ldr.w	r3, [r3, ip, lsl #2]
 801c290:	ba1b      	rev	r3, r3
 801c292:	4419      	add	r1, r3
 801c294:	9101      	str	r1, [sp, #4]
 801c296:	f8bd 3038 	ldrh.w	r3, [sp, #56]	; 0x38
 801c29a:	f9bd b044 	ldrsh.w	fp, [sp, #68]	; 0x44
 801c29e:	f9bd 6046 	ldrsh.w	r6, [sp, #70]	; 0x46
 801c2a2:	4418      	add	r0, r3
 801c2a4:	f8bd 303a 	ldrh.w	r3, [sp, #58]	; 0x3a
 801c2a8:	f8ad 0040 	strh.w	r0, [sp, #64]	; 0x40
 801c2ac:	441a      	add	r2, r3
 801c2ae:	4b75      	ldr	r3, [pc, #468]	; (801c484 <_ZN8touchgfx8LCD16bpp18DecompressorL8_RLE14blitCopyRGB888EPKhS3_RKNS_4RectES6_h+0x278>)
 801c2b0:	f8ad 2042 	strh.w	r2, [sp, #66]	; 0x42
 801c2b4:	6818      	ldr	r0, [r3, #0]
 801c2b6:	6803      	ldr	r3, [r0, #0]
 801c2b8:	6a9b      	ldr	r3, [r3, #40]	; 0x28
 801c2ba:	4798      	blx	r3
 801c2bc:	4972      	ldr	r1, [pc, #456]	; (801c488 <_ZN8touchgfx8LCD16bpp18DecompressorL8_RLE14blitCopyRGB888EPKhS3_RKNS_4RectES6_h+0x27c>)
 801c2be:	f9bd c040 	ldrsh.w	ip, [sp, #64]	; 0x40
 801c2c2:	880b      	ldrh	r3, [r1, #0]
 801c2c4:	f9bd 2042 	ldrsh.w	r2, [sp, #66]	; 0x42
 801c2c8:	910d      	str	r1, [sp, #52]	; 0x34
 801c2ca:	fb03 c202 	mla	r2, r3, r2, ip
 801c2ce:	eb00 0042 	add.w	r0, r0, r2, lsl #1
 801c2d2:	4373      	muls	r3, r6
 801c2d4:	b2ad      	uxth	r5, r5
 801c2d6:	eb00 0343 	add.w	r3, r0, r3, lsl #1
 801c2da:	00ad      	lsls	r5, r5, #2
 801c2dc:	9308      	str	r3, [sp, #32]
 801c2de:	1d2b      	adds	r3, r5, #4
 801c2e0:	9309      	str	r3, [sp, #36]	; 0x24
 801c2e2:	9b02      	ldr	r3, [sp, #8]
 801c2e4:	f8bd 1008 	ldrh.w	r1, [sp, #8]
 801c2e8:	9106      	str	r1, [sp, #24]
 801c2ea:	43da      	mvns	r2, r3
 801c2ec:	2c00      	cmp	r4, #0
 801c2ee:	bf0c      	ite	eq
 801c2f0:	46dc      	moveq	ip, fp
 801c2f2:	f04f 0c00 	movne.w	ip, #0
 801c2f6:	2300      	movs	r3, #0
 801c2f8:	b2d2      	uxtb	r2, r2
 801c2fa:	fa1f fc8c 	uxth.w	ip, ip
 801c2fe:	9303      	str	r3, [sp, #12]
 801c300:	9207      	str	r2, [sp, #28]
 801c302:	9a08      	ldr	r2, [sp, #32]
 801c304:	4282      	cmp	r2, r0
 801c306:	f240 80b5 	bls.w	801c474 <_ZN8touchgfx8LCD16bpp18DecompressorL8_RLE14blitCopyRGB888EPKhS3_RKNS_4RectES6_h+0x268>
 801c30a:	b963      	cbnz	r3, 801c326 <_ZN8touchgfx8LCD16bpp18DecompressorL8_RLE14blitCopyRGB888EPKhS3_RKNS_4RectES6_h+0x11a>
 801c30c:	9b01      	ldr	r3, [sp, #4]
 801c30e:	781a      	ldrb	r2, [r3, #0]
 801c310:	0993      	lsrs	r3, r2, #6
 801c312:	f002 023f 	and.w	r2, r2, #63	; 0x3f
 801c316:	9203      	str	r2, [sp, #12]
 801c318:	1e5a      	subs	r2, r3, #1
 801c31a:	2a02      	cmp	r2, #2
 801c31c:	d815      	bhi.n	801c34a <_ZN8touchgfx8LCD16bpp18DecompressorL8_RLE14blitCopyRGB888EPKhS3_RKNS_4RectES6_h+0x13e>
 801c31e:	9a01      	ldr	r2, [sp, #4]
 801c320:	3201      	adds	r2, #1
 801c322:	9201      	str	r2, [sp, #4]
 801c324:	b29b      	uxth	r3, r3
 801c326:	b1b4      	cbz	r4, 801c356 <_ZN8touchgfx8LCD16bpp18DecompressorL8_RLE14blitCopyRGB888EPKhS3_RKNS_4RectES6_h+0x14a>
 801c328:	429c      	cmp	r4, r3
 801c32a:	bf95      	itete	ls
 801c32c:	1b1c      	subls	r4, r3, r4
 801c32e:	1ae4      	subhi	r4, r4, r3
 801c330:	fa1f f884 	uxthls.w	r8, r4
 801c334:	b2a4      	uxthhi	r4, r4
 801c336:	bf87      	ittee	hi
 801c338:	4666      	movhi	r6, ip
 801c33a:	f04f 0800 	movhi.w	r8, #0
 801c33e:	fa1f f68b 	uxthls.w	r6, fp
 801c342:	2400      	movls	r4, #0
 801c344:	4643      	mov	r3, r8
 801c346:	46b4      	mov	ip, r6
 801c348:	e7db      	b.n	801c302 <_ZN8touchgfx8LCD16bpp18DecompressorL8_RLE14blitCopyRGB888EPKhS3_RKNS_4RectES6_h+0xf6>
 801c34a:	9a01      	ldr	r2, [sp, #4]
 801c34c:	9b01      	ldr	r3, [sp, #4]
 801c34e:	3202      	adds	r2, #2
 801c350:	785b      	ldrb	r3, [r3, #1]
 801c352:	9201      	str	r2, [sp, #4]
 801c354:	e7e7      	b.n	801c326 <_ZN8touchgfx8LCD16bpp18DecompressorL8_RLE14blitCopyRGB888EPKhS3_RKNS_4RectES6_h+0x11a>
 801c356:	2203      	movs	r2, #3
 801c358:	4615      	mov	r5, r2
 801c35a:	9909      	ldr	r1, [sp, #36]	; 0x24
 801c35c:	9a03      	ldr	r2, [sp, #12]
 801c35e:	fb15 1202 	smlabb	r2, r5, r2, r1
 801c362:	9905      	ldr	r1, [sp, #20]
 801c364:	4563      	cmp	r3, ip
 801c366:	eb01 0502 	add.w	r5, r1, r2
 801c36a:	9902      	ldr	r1, [sp, #8]
 801c36c:	bf29      	itett	cs
 801c36e:	eba3 080c 	subcs.w	r8, r3, ip
 801c372:	ebac 0603 	subcc.w	r6, ip, r3
 801c376:	fa1f f888 	uxthcs.w	r8, r8
 801c37a:	46e1      	movcs	r9, ip
 801c37c:	bf2f      	iteee	cs
 801c37e:	4626      	movcs	r6, r4
 801c380:	b2b6      	uxthcc	r6, r6
 801c382:	4699      	movcc	r9, r3
 801c384:	46a0      	movcc	r8, r4
 801c386:	29ff      	cmp	r1, #255	; 0xff
 801c388:	d04a      	beq.n	801c420 <_ZN8touchgfx8LCD16bpp18DecompressorL8_RLE14blitCopyRGB888EPKhS3_RKNS_4RectES6_h+0x214>
 801c38a:	9f06      	ldr	r7, [sp, #24]
 801c38c:	78a9      	ldrb	r1, [r5, #2]
 801c38e:	9004      	str	r0, [sp, #16]
 801c390:	4379      	muls	r1, r7
 801c392:	910a      	str	r1, [sp, #40]	; 0x28
 801c394:	7869      	ldrb	r1, [r5, #1]
 801c396:	4379      	muls	r1, r7
 801c398:	910b      	str	r1, [sp, #44]	; 0x2c
 801c39a:	9905      	ldr	r1, [sp, #20]
 801c39c:	5c8a      	ldrb	r2, [r1, r2]
 801c39e:	437a      	muls	r2, r7
 801c3a0:	920c      	str	r2, [sp, #48]	; 0x30
 801c3a2:	46ca      	mov	sl, r9
 801c3a4:	f1ba 0f00 	cmp.w	sl, #0
 801c3a8:	d03d      	beq.n	801c426 <_ZN8touchgfx8LCD16bpp18DecompressorL8_RLE14blitCopyRGB888EPKhS3_RKNS_4RectES6_h+0x21a>
 801c3aa:	9a04      	ldr	r2, [sp, #16]
 801c3ac:	9f07      	ldr	r7, [sp, #28]
 801c3ae:	8812      	ldrh	r2, [r2, #0]
 801c3b0:	1215      	asrs	r5, r2, #8
 801c3b2:	46be      	mov	lr, r7
 801c3b4:	f005 05f8 	and.w	r5, r5, #248	; 0xf8
 801c3b8:	9f0a      	ldr	r7, [sp, #40]	; 0x28
 801c3ba:	10d1      	asrs	r1, r2, #3
 801c3bc:	ea45 1555 	orr.w	r5, r5, r5, lsr #5
 801c3c0:	fb05 750e 	mla	r5, r5, lr, r7
 801c3c4:	f001 01fc 	and.w	r1, r1, #252	; 0xfc
 801c3c8:	9f0b      	ldr	r7, [sp, #44]	; 0x2c
 801c3ca:	00d2      	lsls	r2, r2, #3
 801c3cc:	ea41 1191 	orr.w	r1, r1, r1, lsr #6
 801c3d0:	fb01 710e 	mla	r1, r1, lr, r7
 801c3d4:	b2d2      	uxtb	r2, r2
 801c3d6:	9f0c      	ldr	r7, [sp, #48]	; 0x30
 801c3d8:	ea42 1252 	orr.w	r2, r2, r2, lsr #5
 801c3dc:	b2ad      	uxth	r5, r5
 801c3de:	fb02 720e 	mla	r2, r2, lr, r7
 801c3e2:	b292      	uxth	r2, r2
 801c3e4:	f105 0e01 	add.w	lr, r5, #1
 801c3e8:	eb0e 2515 	add.w	r5, lr, r5, lsr #8
 801c3ec:	f102 0e01 	add.w	lr, r2, #1
 801c3f0:	eb0e 2212 	add.w	r2, lr, r2, lsr #8
 801c3f4:	b289      	uxth	r1, r1
 801c3f6:	f3c2 22c4 	ubfx	r2, r2, #11, #5
 801c3fa:	f405 4578 	and.w	r5, r5, #63488	; 0xf800
 801c3fe:	4315      	orrs	r5, r2
 801c400:	1c4a      	adds	r2, r1, #1
 801c402:	eb02 2111 	add.w	r1, r2, r1, lsr #8
 801c406:	0949      	lsrs	r1, r1, #5
 801c408:	9a04      	ldr	r2, [sp, #16]
 801c40a:	f401 61fc 	and.w	r1, r1, #2016	; 0x7e0
 801c40e:	430d      	orrs	r5, r1
 801c410:	f822 5b02 	strh.w	r5, [r2], #2
 801c414:	f10a 3aff 	add.w	sl, sl, #4294967295
 801c418:	9204      	str	r2, [sp, #16]
 801c41a:	fa1f fa8a 	uxth.w	sl, sl
 801c41e:	e7c1      	b.n	801c3a4 <_ZN8touchgfx8LCD16bpp18DecompressorL8_RLE14blitCopyRGB888EPKhS3_RKNS_4RectES6_h+0x198>
 801c420:	4649      	mov	r1, r9
 801c422:	4686      	mov	lr, r0
 801c424:	b999      	cbnz	r1, 801c44e <_ZN8touchgfx8LCD16bpp18DecompressorL8_RLE14blitCopyRGB888EPKhS3_RKNS_4RectES6_h+0x242>
 801c426:	4563      	cmp	r3, ip
 801c428:	eb00 0049 	add.w	r0, r0, r9, lsl #1
 801c42c:	d38a      	bcc.n	801c344 <_ZN8touchgfx8LCD16bpp18DecompressorL8_RLE14blitCopyRGB888EPKhS3_RKNS_4RectES6_h+0x138>
 801c42e:	f8bd 403c 	ldrh.w	r4, [sp, #60]	; 0x3c
 801c432:	9b0d      	ldr	r3, [sp, #52]	; 0x34
 801c434:	fa1f f68b 	uxth.w	r6, fp
 801c438:	1ba4      	subs	r4, r4, r6
 801c43a:	881b      	ldrh	r3, [r3, #0]
 801c43c:	b2a4      	uxth	r4, r4
 801c43e:	2c00      	cmp	r4, #0
 801c440:	eba3 030b 	sub.w	r3, r3, fp
 801c444:	bf18      	it	ne
 801c446:	2600      	movne	r6, #0
 801c448:	eb00 0043 	add.w	r0, r0, r3, lsl #1
 801c44c:	e77a      	b.n	801c344 <_ZN8touchgfx8LCD16bpp18DecompressorL8_RLE14blitCopyRGB888EPKhS3_RKNS_4RectES6_h+0x138>
 801c44e:	78aa      	ldrb	r2, [r5, #2]
 801c450:	4f0e      	ldr	r7, [pc, #56]	; (801c48c <_ZN8touchgfx8LCD16bpp18DecompressorL8_RLE14blitCopyRGB888EPKhS3_RKNS_4RectES6_h+0x280>)
 801c452:	ea07 2a02 	and.w	sl, r7, r2, lsl #8
 801c456:	786a      	ldrb	r2, [r5, #1]
 801c458:	00d2      	lsls	r2, r2, #3
 801c45a:	f402 62fc 	and.w	r2, r2, #2016	; 0x7e0
 801c45e:	ea4a 0202 	orr.w	r2, sl, r2
 801c462:	f895 a000 	ldrb.w	sl, [r5]
 801c466:	3901      	subs	r1, #1
 801c468:	ea42 02da 	orr.w	r2, r2, sl, lsr #3
 801c46c:	f82e 2b02 	strh.w	r2, [lr], #2
 801c470:	b289      	uxth	r1, r1
 801c472:	e7d7      	b.n	801c424 <_ZN8touchgfx8LCD16bpp18DecompressorL8_RLE14blitCopyRGB888EPKhS3_RKNS_4RectES6_h+0x218>
 801c474:	4b03      	ldr	r3, [pc, #12]	; (801c484 <_ZN8touchgfx8LCD16bpp18DecompressorL8_RLE14blitCopyRGB888EPKhS3_RKNS_4RectES6_h+0x278>)
 801c476:	6818      	ldr	r0, [r3, #0]
 801c478:	6803      	ldr	r3, [r0, #0]
 801c47a:	6adb      	ldr	r3, [r3, #44]	; 0x2c
 801c47c:	4798      	blx	r3
 801c47e:	b013      	add	sp, #76	; 0x4c
 801c480:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
 801c484:	20012f24 	.word	0x20012f24
 801c488:	20012f1e 	.word	0x20012f1e
 801c48c:	fffff800 	.word	0xfffff800

0801c490 <_ZN8touchgfx8LCD16bpp19DecompressorL8_LZW916blitCopyARGB8888EPKhS3_RKNS_4RectES6_h>:
 801c490:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 801c494:	b09d      	sub	sp, #116	; 0x74
 801c496:	e9cd 1211 	strd	r1, r2, [sp, #68]	; 0x44
 801c49a:	f89d 209c 	ldrb.w	r2, [sp, #156]	; 0x9c
 801c49e:	920e      	str	r2, [sp, #56]	; 0x38
 801c4a0:	461c      	mov	r4, r3
 801c4a2:	4683      	mov	fp, r0
 801c4a4:	9b26      	ldr	r3, [sp, #152]	; 0x98
 801c4a6:	2a00      	cmp	r2, #0
 801c4a8:	f000 81e0 	beq.w	801c86c <_ZN8touchgfx8LCD16bpp19DecompressorL8_LZW916blitCopyARGB8888EPKhS3_RKNS_4RectES6_h+0x3dc>
 801c4ac:	6820      	ldr	r0, [r4, #0]
 801c4ae:	6861      	ldr	r1, [r4, #4]
 801c4b0:	aa18      	add	r2, sp, #96	; 0x60
 801c4b2:	c203      	stmia	r2!, {r0, r1}
 801c4b4:	6818      	ldr	r0, [r3, #0]
 801c4b6:	6859      	ldr	r1, [r3, #4]
 801c4b8:	aa1a      	add	r2, sp, #104	; 0x68
 801c4ba:	c203      	stmia	r2!, {r0, r1}
 801c4bc:	a818      	add	r0, sp, #96	; 0x60
 801c4be:	f7f8 fd83 	bl	8014fc8 <_ZN8touchgfx21DisplayTransformation29transformDisplayToFrameBufferERNS_4RectE>
 801c4c2:	4621      	mov	r1, r4
 801c4c4:	a81a      	add	r0, sp, #104	; 0x68
 801c4c6:	f7f8 fdc3 	bl	8015050 <_ZN8touchgfx21DisplayTransformation29transformDisplayToFrameBufferERNS_4RectERKS1_>
 801c4ca:	f9bd 3064 	ldrsh.w	r3, [sp, #100]	; 0x64
 801c4ce:	f9bd 4066 	ldrsh.w	r4, [sp, #102]	; 0x66
 801c4d2:	f9bd 606e 	ldrsh.w	r6, [sp, #110]	; 0x6e
 801c4d6:	f5b3 6f80 	cmp.w	r3, #1024	; 0x400
 801c4da:	bfd7      	itett	le
 801c4dc:	b29a      	uxthle	r2, r3
 801c4de:	2201      	movgt	r2, #1
 801c4e0:	f44f 6180 	movle.w	r1, #1024	; 0x400
 801c4e4:	fb91 f2f2 	sdivle	r2, r1, r2
 801c4e8:	9202      	str	r2, [sp, #8]
 801c4ea:	9802      	ldr	r0, [sp, #8]
 801c4ec:	f9bd 206a 	ldrsh.w	r2, [sp, #106]	; 0x6a
 801c4f0:	fb92 f0f0 	sdiv	r0, r2, r0
 801c4f4:	b280      	uxth	r0, r0
 801c4f6:	900f      	str	r0, [sp, #60]	; 0x3c
 801c4f8:	9902      	ldr	r1, [sp, #8]
 801c4fa:	9802      	ldr	r0, [sp, #8]
 801c4fc:	9d0f      	ldr	r5, [sp, #60]	; 0x3c
 801c4fe:	440c      	add	r4, r1
 801c500:	fb05 2510 	mls	r5, r5, r0, r2
 801c504:	fb15 f503 	smulbb	r5, r5, r3
 801c508:	3c01      	subs	r4, #1
 801c50a:	f8bd 3060 	ldrh.w	r3, [sp, #96]	; 0x60
 801c50e:	fb94 f4f1 	sdiv	r4, r4, r1
 801c512:	f8bd 1068 	ldrh.w	r1, [sp, #104]	; 0x68
 801c516:	440d      	add	r5, r1
 801c518:	4419      	add	r1, r3
 801c51a:	f8bd 3062 	ldrh.w	r3, [sp, #98]	; 0x62
 801c51e:	f8ad 1068 	strh.w	r1, [sp, #104]	; 0x68
 801c522:	441a      	add	r2, r3
 801c524:	f9bd 306c 	ldrsh.w	r3, [sp, #108]	; 0x6c
 801c528:	9306      	str	r3, [sp, #24]
 801c52a:	4bb3      	ldr	r3, [pc, #716]	; (801c7f8 <_ZN8touchgfx8LCD16bpp19DecompressorL8_LZW916blitCopyARGB8888EPKhS3_RKNS_4RectES6_h+0x368>)
 801c52c:	f8ad 206a 	strh.w	r2, [sp, #106]	; 0x6a
 801c530:	6818      	ldr	r0, [r3, #0]
 801c532:	6803      	ldr	r3, [r0, #0]
 801c534:	6a9b      	ldr	r3, [r3, #40]	; 0x28
 801c536:	4798      	blx	r3
 801c538:	4bb0      	ldr	r3, [pc, #704]	; (801c7fc <_ZN8touchgfx8LCD16bpp19DecompressorL8_LZW916blitCopyARGB8888EPKhS3_RKNS_4RectES6_h+0x36c>)
 801c53a:	f9bd 106a 	ldrsh.w	r1, [sp, #106]	; 0x6a
 801c53e:	881a      	ldrh	r2, [r3, #0]
 801c540:	f9bd 7068 	ldrsh.w	r7, [sp, #104]	; 0x68
 801c544:	9316      	str	r3, [sp, #88]	; 0x58
 801c546:	fb02 7101 	mla	r1, r2, r1, r7
 801c54a:	3401      	adds	r4, #1
 801c54c:	eb00 0841 	add.w	r8, r0, r1, lsl #1
 801c550:	b2a4      	uxth	r4, r4
 801c552:	4356      	muls	r6, r2
 801c554:	eb08 0246 	add.w	r2, r8, r6, lsl #1
 801c558:	00a4      	lsls	r4, r4, #2
 801c55a:	920a      	str	r2, [sp, #40]	; 0x28
 801c55c:	1d22      	adds	r2, r4, #4
 801c55e:	b2ad      	uxth	r5, r5
 801c560:	9213      	str	r2, [sp, #76]	; 0x4c
 801c562:	4ba7      	ldr	r3, [pc, #668]	; (801c800 <_ZN8touchgfx8LCD16bpp19DecompressorL8_LZW916blitCopyARGB8888EPKhS3_RKNS_4RectES6_h+0x370>)
 801c564:	9a06      	ldr	r2, [sp, #24]
 801c566:	2d00      	cmp	r5, #0
 801c568:	bf0c      	ite	eq
 801c56a:	4611      	moveq	r1, r2
 801c56c:	2100      	movne	r1, #0
 801c56e:	2200      	movs	r2, #0
 801c570:	eba3 030b 	sub.w	r3, r3, fp
 801c574:	b289      	uxth	r1, r1
 801c576:	920d      	str	r2, [sp, #52]	; 0x34
 801c578:	9317      	str	r3, [sp, #92]	; 0x5c
 801c57a:	9a0f      	ldr	r2, [sp, #60]	; 0x3c
 801c57c:	9b0d      	ldr	r3, [sp, #52]	; 0x34
 801c57e:	fa12 f383 	uxtah	r3, r2, r3
 801c582:	9a12      	ldr	r2, [sp, #72]	; 0x48
 801c584:	eb02 0383 	add.w	r3, r2, r3, lsl #2
 801c588:	3304      	adds	r3, #4
 801c58a:	9308      	str	r3, [sp, #32]
 801c58c:	9b0a      	ldr	r3, [sp, #40]	; 0x28
 801c58e:	4543      	cmp	r3, r8
 801c590:	f240 8167 	bls.w	801c862 <_ZN8touchgfx8LCD16bpp19DecompressorL8_LZW916blitCopyARGB8888EPKhS3_RKNS_4RectES6_h+0x3d2>
 801c594:	9a02      	ldr	r2, [sp, #8]
 801c596:	f8bd 3064 	ldrh.w	r3, [sp, #100]	; 0x64
 801c59a:	fbb5 f3f3 	udiv	r3, r5, r3
 801c59e:	1ad3      	subs	r3, r2, r3
 801c5a0:	b29b      	uxth	r3, r3
 801c5a2:	9314      	str	r3, [sp, #80]	; 0x50
 801c5a4:	9b08      	ldr	r3, [sp, #32]
 801c5a6:	9808      	ldr	r0, [sp, #32]
 801c5a8:	785a      	ldrb	r2, [r3, #1]
 801c5aa:	789b      	ldrb	r3, [r3, #2]
 801c5ac:	7800      	ldrb	r0, [r0, #0]
 801c5ae:	9010      	str	r0, [sp, #64]	; 0x40
 801c5b0:	021b      	lsls	r3, r3, #8
 801c5b2:	ea43 4302 	orr.w	r3, r3, r2, lsl #16
 801c5b6:	9a08      	ldr	r2, [sp, #32]
 801c5b8:	78d2      	ldrb	r2, [r2, #3]
 801c5ba:	4313      	orrs	r3, r2
 801c5bc:	9a11      	ldr	r2, [sp, #68]	; 0x44
 801c5be:	3001      	adds	r0, #1
 801c5c0:	441a      	add	r2, r3
 801c5c2:	9007      	str	r0, [sp, #28]
 801c5c4:	1c50      	adds	r0, r2, #1
 801c5c6:	9005      	str	r0, [sp, #20]
 801c5c8:	7852      	ldrb	r2, [r2, #1]
 801c5ca:	9811      	ldr	r0, [sp, #68]	; 0x44
 801c5cc:	0212      	lsls	r2, r2, #8
 801c5ce:	5cc3      	ldrb	r3, [r0, r3]
 801c5d0:	f402 72ff 	and.w	r2, r2, #510	; 0x1fe
 801c5d4:	431a      	orrs	r2, r3
 801c5d6:	b293      	uxth	r3, r2
 801c5d8:	930b      	str	r3, [sp, #44]	; 0x2c
 801c5da:	2300      	movs	r3, #0
 801c5dc:	9309      	str	r3, [sp, #36]	; 0x24
 801c5de:	2301      	movs	r3, #1
 801c5e0:	9301      	str	r3, [sp, #4]
 801c5e2:	9304      	str	r3, [sp, #16]
 801c5e4:	2300      	movs	r3, #0
 801c5e6:	f88b 2804 	strb.w	r2, [fp, #2052]	; 0x804
 801c5ea:	9303      	str	r3, [sp, #12]
 801c5ec:	f04f 0e01 	mov.w	lr, #1
 801c5f0:	2d00      	cmp	r5, #0
 801c5f2:	d07c      	beq.n	801c6ee <_ZN8touchgfx8LCD16bpp19DecompressorL8_LZW916blitCopyARGB8888EPKhS3_RKNS_4RectES6_h+0x25e>
 801c5f4:	45ae      	cmp	lr, r5
 801c5f6:	d26b      	bcs.n	801c6d0 <_ZN8touchgfx8LCD16bpp19DecompressorL8_LZW916blitCopyARGB8888EPKhS3_RKNS_4RectES6_h+0x240>
 801c5f8:	9b0a      	ldr	r3, [sp, #40]	; 0x28
 801c5fa:	eba5 050e 	sub.w	r5, r5, lr
 801c5fe:	4543      	cmp	r3, r8
 801c600:	b2ad      	uxth	r5, r5
 801c602:	460c      	mov	r4, r1
 801c604:	d802      	bhi.n	801c60c <_ZN8touchgfx8LCD16bpp19DecompressorL8_LZW916blitCopyARGB8888EPKhS3_RKNS_4RectES6_h+0x17c>
 801c606:	e070      	b.n	801c6ea <_ZN8touchgfx8LCD16bpp19DecompressorL8_LZW916blitCopyARGB8888EPKhS3_RKNS_4RectES6_h+0x25a>
 801c608:	2b00      	cmp	r3, #0
 801c60a:	d15c      	bne.n	801c6c6 <_ZN8touchgfx8LCD16bpp19DecompressorL8_LZW916blitCopyARGB8888EPKhS3_RKNS_4RectES6_h+0x236>
 801c60c:	9b05      	ldr	r3, [sp, #20]
 801c60e:	9a04      	ldr	r2, [sp, #16]
 801c610:	785b      	ldrb	r3, [r3, #1]
 801c612:	9904      	ldr	r1, [sp, #16]
 801c614:	f1c2 0207 	rsb	r2, r2, #7
 801c618:	4093      	lsls	r3, r2
 801c61a:	005b      	lsls	r3, r3, #1
 801c61c:	f403 72ff 	and.w	r2, r3, #510	; 0x1fe
 801c620:	9b05      	ldr	r3, [sp, #20]
 801c622:	781b      	ldrb	r3, [r3, #0]
 801c624:	410b      	asrs	r3, r1
 801c626:	3101      	adds	r1, #1
 801c628:	b2c9      	uxtb	r1, r1
 801c62a:	2908      	cmp	r1, #8
 801c62c:	9104      	str	r1, [sp, #16]
 801c62e:	9905      	ldr	r1, [sp, #20]
 801c630:	bf0a      	itet	eq
 801c632:	3102      	addeq	r1, #2
 801c634:	3101      	addne	r1, #1
 801c636:	9105      	streq	r1, [sp, #20]
 801c638:	b2db      	uxtb	r3, r3
 801c63a:	bf0a      	itet	eq
 801c63c:	2100      	moveq	r1, #0
 801c63e:	9105      	strne	r1, [sp, #20]
 801c640:	9104      	streq	r1, [sp, #16]
 801c642:	4313      	orrs	r3, r2
 801c644:	9910      	ldr	r1, [sp, #64]	; 0x40
 801c646:	b29a      	uxth	r2, r3
 801c648:	4291      	cmp	r1, r2
 801c64a:	d30a      	bcc.n	801c662 <_ZN8touchgfx8LCD16bpp19DecompressorL8_LZW916blitCopyARGB8888EPKhS3_RKNS_4RectES6_h+0x1d2>
 801c64c:	f88b 3804 	strb.w	r3, [fp, #2052]	; 0x804
 801c650:	2301      	movs	r3, #1
 801c652:	9907      	ldr	r1, [sp, #28]
 801c654:	f5b1 7f00 	cmp.w	r1, #512	; 0x200
 801c658:	d30f      	bcc.n	801c67a <_ZN8touchgfx8LCD16bpp19DecompressorL8_LZW916blitCopyARGB8888EPKhS3_RKNS_4RectES6_h+0x1ea>
 801c65a:	2100      	movs	r1, #0
 801c65c:	9301      	str	r3, [sp, #4]
 801c65e:	9103      	str	r1, [sp, #12]
 801c660:	e032      	b.n	801c6c8 <_ZN8touchgfx8LCD16bpp19DecompressorL8_LZW916blitCopyARGB8888EPKhS3_RKNS_4RectES6_h+0x238>
 801c662:	9b07      	ldr	r3, [sp, #28]
 801c664:	429a      	cmp	r2, r3
 801c666:	d318      	bcc.n	801c69a <_ZN8touchgfx8LCD16bpp19DecompressorL8_LZW916blitCopyARGB8888EPKhS3_RKNS_4RectES6_h+0x20a>
 801c668:	9b01      	ldr	r3, [sp, #4]
 801c66a:	f89b 1804 	ldrb.w	r1, [fp, #2052]	; 0x804
 801c66e:	445b      	add	r3, fp
 801c670:	f883 1804 	strb.w	r1, [r3, #2052]	; 0x804
 801c674:	9b01      	ldr	r3, [sp, #4]
 801c676:	3301      	adds	r3, #1
 801c678:	b29b      	uxth	r3, r3
 801c67a:	9907      	ldr	r1, [sp, #28]
 801c67c:	f89b 0804 	ldrb.w	r0, [fp, #2052]	; 0x804
 801c680:	eb0b 0181 	add.w	r1, fp, r1, lsl #2
 801c684:	7108      	strb	r0, [r1, #4]
 801c686:	980b      	ldr	r0, [sp, #44]	; 0x2c
 801c688:	80c8      	strh	r0, [r1, #6]
 801c68a:	9801      	ldr	r0, [sp, #4]
 801c68c:	3001      	adds	r0, #1
 801c68e:	7148      	strb	r0, [r1, #5]
 801c690:	9907      	ldr	r1, [sp, #28]
 801c692:	3101      	adds	r1, #1
 801c694:	b289      	uxth	r1, r1
 801c696:	9107      	str	r1, [sp, #28]
 801c698:	e7df      	b.n	801c65a <_ZN8touchgfx8LCD16bpp19DecompressorL8_LZW916blitCopyARGB8888EPKhS3_RKNS_4RectES6_h+0x1ca>
 801c69a:	eb0b 0382 	add.w	r3, fp, r2, lsl #2
 801c69e:	4611      	mov	r1, r2
 801c6a0:	795b      	ldrb	r3, [r3, #5]
 801c6a2:	f603 0004 	addw	r0, r3, #2052	; 0x804
 801c6a6:	4458      	add	r0, fp
 801c6a8:	9e17      	ldr	r6, [sp, #92]	; 0x5c
 801c6aa:	4406      	add	r6, r0
 801c6ac:	2e00      	cmp	r6, #0
 801c6ae:	dd06      	ble.n	801c6be <_ZN8touchgfx8LCD16bpp19DecompressorL8_LZW916blitCopyARGB8888EPKhS3_RKNS_4RectES6_h+0x22e>
 801c6b0:	eb0b 0181 	add.w	r1, fp, r1, lsl #2
 801c6b4:	790e      	ldrb	r6, [r1, #4]
 801c6b6:	f800 6d01 	strb.w	r6, [r0, #-1]!
 801c6ba:	88c9      	ldrh	r1, [r1, #6]
 801c6bc:	e7f4      	b.n	801c6a8 <_ZN8touchgfx8LCD16bpp19DecompressorL8_LZW916blitCopyARGB8888EPKhS3_RKNS_4RectES6_h+0x218>
 801c6be:	f88b 1804 	strb.w	r1, [fp, #2052]	; 0x804
 801c6c2:	b29b      	uxth	r3, r3
 801c6c4:	e7c5      	b.n	801c652 <_ZN8touchgfx8LCD16bpp19DecompressorL8_LZW916blitCopyARGB8888EPKhS3_RKNS_4RectES6_h+0x1c2>
 801c6c6:	9a0b      	ldr	r2, [sp, #44]	; 0x2c
 801c6c8:	920b      	str	r2, [sp, #44]	; 0x2c
 801c6ca:	4621      	mov	r1, r4
 801c6cc:	469e      	mov	lr, r3
 801c6ce:	e78f      	b.n	801c5f0 <_ZN8touchgfx8LCD16bpp19DecompressorL8_LZW916blitCopyARGB8888EPKhS3_RKNS_4RectES6_h+0x160>
 801c6d0:	9a03      	ldr	r2, [sp, #12]
 801c6d2:	f8bd 4018 	ldrh.w	r4, [sp, #24]
 801c6d6:	442a      	add	r2, r5
 801c6d8:	ebae 0305 	sub.w	r3, lr, r5
 801c6dc:	b292      	uxth	r2, r2
 801c6de:	b29b      	uxth	r3, r3
 801c6e0:	9203      	str	r2, [sp, #12]
 801c6e2:	2500      	movs	r5, #0
 801c6e4:	9a0a      	ldr	r2, [sp, #40]	; 0x28
 801c6e6:	4542      	cmp	r2, r8
 801c6e8:	d88e      	bhi.n	801c608 <_ZN8touchgfx8LCD16bpp19DecompressorL8_LZW916blitCopyARGB8888EPKhS3_RKNS_4RectES6_h+0x178>
 801c6ea:	4621      	mov	r1, r4
 801c6ec:	e74e      	b.n	801c58c <_ZN8touchgfx8LCD16bpp19DecompressorL8_LZW916blitCopyARGB8888EPKhS3_RKNS_4RectES6_h+0xfc>
 801c6ee:	458e      	cmp	lr, r1
 801c6f0:	bf29      	itett	cs
 801c6f2:	ebae 0301 	subcs.w	r3, lr, r1
 801c6f6:	eba1 040e 	subcc.w	r4, r1, lr
 801c6fa:	b29b      	uxthcs	r3, r3
 801c6fc:	910c      	strcs	r1, [sp, #48]	; 0x30
 801c6fe:	bf2f      	iteee	cs
 801c700:	462c      	movcs	r4, r5
 801c702:	b2a4      	uxthcc	r4, r4
 801c704:	f8cd e030 	strcc.w	lr, [sp, #48]	; 0x30
 801c708:	462b      	movcc	r3, r5
 801c70a:	f04f 0900 	mov.w	r9, #0
 801c70e:	9a03      	ldr	r2, [sp, #12]
 801c710:	980c      	ldr	r0, [sp, #48]	; 0x30
 801c712:	444a      	add	r2, r9
 801c714:	4548      	cmp	r0, r9
 801c716:	b292      	uxth	r2, r2
 801c718:	d074      	beq.n	801c804 <_ZN8touchgfx8LCD16bpp19DecompressorL8_LZW916blitCopyARGB8888EPKhS3_RKNS_4RectES6_h+0x374>
 801c71a:	445a      	add	r2, fp
 801c71c:	2004      	movs	r0, #4
 801c71e:	4605      	mov	r5, r0
 801c720:	f892 2804 	ldrb.w	r2, [r2, #2052]	; 0x804
 801c724:	9813      	ldr	r0, [sp, #76]	; 0x4c
 801c726:	fb15 0202 	smlabb	r2, r5, r2, r0
 801c72a:	9812      	ldr	r0, [sp, #72]	; 0x48
 801c72c:	5880      	ldr	r0, [r0, r2]
 801c72e:	ea5f 6a10 	movs.w	sl, r0, lsr #24
 801c732:	d014      	beq.n	801c75e <_ZN8touchgfx8LCD16bpp19DecompressorL8_LZW916blitCopyARGB8888EPKhS3_RKNS_4RectES6_h+0x2ce>
 801c734:	f1ba 0fff 	cmp.w	sl, #255	; 0xff
 801c738:	ea4f 2510 	mov.w	r5, r0, lsr #8
 801c73c:	d112      	bne.n	801c764 <_ZN8touchgfx8LCD16bpp19DecompressorL8_LZW916blitCopyARGB8888EPKhS3_RKNS_4RectES6_h+0x2d4>
 801c73e:	9a0e      	ldr	r2, [sp, #56]	; 0x38
 801c740:	2aff      	cmp	r2, #255	; 0xff
 801c742:	d10f      	bne.n	801c764 <_ZN8touchgfx8LCD16bpp19DecompressorL8_LZW916blitCopyARGB8888EPKhS3_RKNS_4RectES6_h+0x2d4>
 801c744:	0942      	lsrs	r2, r0, #5
 801c746:	f425 65ff 	bic.w	r5, r5, #2040	; 0x7f8
 801c74a:	f402 62fc 	and.w	r2, r2, #2016	; 0x7e0
 801c74e:	f025 0507 	bic.w	r5, r5, #7
 801c752:	4315      	orrs	r5, r2
 801c754:	f3c0 00c4 	ubfx	r0, r0, #3, #5
 801c758:	4305      	orrs	r5, r0
 801c75a:	f828 5019 	strh.w	r5, [r8, r9, lsl #1]
 801c75e:	f109 0901 	add.w	r9, r9, #1
 801c762:	e7d4      	b.n	801c70e <_ZN8touchgfx8LCD16bpp19DecompressorL8_LZW916blitCopyARGB8888EPKhS3_RKNS_4RectES6_h+0x27e>
 801c764:	f838 c019 	ldrh.w	ip, [r8, r9, lsl #1]
 801c768:	ea4f 06ec 	mov.w	r6, ip, asr #3
 801c76c:	f006 02fc 	and.w	r2, r6, #252	; 0xfc
 801c770:	9215      	str	r2, [sp, #84]	; 0x54
 801c772:	9a0e      	ldr	r2, [sp, #56]	; 0x38
 801c774:	fb02 fa0a 	mul.w	sl, r2, sl
 801c778:	f10a 0201 	add.w	r2, sl, #1
 801c77c:	eb02 222a 	add.w	r2, r2, sl, asr #8
 801c780:	ea4f 272c 	mov.w	r7, ip, asr #8
 801c784:	1212      	asrs	r2, r2, #8
 801c786:	fa1f fa82 	uxth.w	sl, r2
 801c78a:	f3c0 4607 	ubfx	r6, r0, #16, #8
 801c78e:	f007 07f8 	and.w	r7, r7, #248	; 0xf8
 801c792:	ea4f 0ccc 	mov.w	ip, ip, lsl #3
 801c796:	43d2      	mvns	r2, r2
 801c798:	b2d2      	uxtb	r2, r2
 801c79a:	fb16 f60a 	smulbb	r6, r6, sl
 801c79e:	fa5f fc8c 	uxtb.w	ip, ip
 801c7a2:	ea47 1757 	orr.w	r7, r7, r7, lsr #5
 801c7a6:	b2c0      	uxtb	r0, r0
 801c7a8:	fb07 6702 	mla	r7, r7, r2, r6
 801c7ac:	ea4c 1c5c 	orr.w	ip, ip, ip, lsr #5
 801c7b0:	9e15      	ldr	r6, [sp, #84]	; 0x54
 801c7b2:	fb10 f00a 	smulbb	r0, r0, sl
 801c7b6:	fb0c 0002 	mla	r0, ip, r2, r0
 801c7ba:	b2ed      	uxtb	r5, r5
 801c7bc:	b2bf      	uxth	r7, r7
 801c7be:	fb15 f50a 	smulbb	r5, r5, sl
 801c7c2:	b280      	uxth	r0, r0
 801c7c4:	ea46 1696 	orr.w	r6, r6, r6, lsr #6
 801c7c8:	fb06 5602 	mla	r6, r6, r2, r5
 801c7cc:	1c7a      	adds	r2, r7, #1
 801c7ce:	1c45      	adds	r5, r0, #1
 801c7d0:	eb02 2717 	add.w	r7, r2, r7, lsr #8
 801c7d4:	eb05 2510 	add.w	r5, r5, r0, lsr #8
 801c7d8:	b2b6      	uxth	r6, r6
 801c7da:	f3c5 25c4 	ubfx	r5, r5, #11, #5
 801c7de:	f407 4778 	and.w	r7, r7, #63488	; 0xf800
 801c7e2:	432f      	orrs	r7, r5
 801c7e4:	1c75      	adds	r5, r6, #1
 801c7e6:	eb05 2516 	add.w	r5, r5, r6, lsr #8
 801c7ea:	096d      	lsrs	r5, r5, #5
 801c7ec:	f405 65fc 	and.w	r5, r5, #2016	; 0x7e0
 801c7f0:	432f      	orrs	r7, r5
 801c7f2:	f828 7019 	strh.w	r7, [r8, r9, lsl #1]
 801c7f6:	e7b2      	b.n	801c75e <_ZN8touchgfx8LCD16bpp19DecompressorL8_LZW916blitCopyARGB8888EPKhS3_RKNS_4RectES6_h+0x2ce>
 801c7f8:	20012f24 	.word	0x20012f24
 801c7fc:	20012f1e 	.word	0x20012f1e
 801c800:	fffff7fb 	.word	0xfffff7fb
 801c804:	9203      	str	r2, [sp, #12]
 801c806:	9a0c      	ldr	r2, [sp, #48]	; 0x30
 801c808:	458e      	cmp	lr, r1
 801c80a:	eb08 0842 	add.w	r8, r8, r2, lsl #1
 801c80e:	f4ff af68 	bcc.w	801c6e2 <_ZN8touchgfx8LCD16bpp19DecompressorL8_LZW916blitCopyARGB8888EPKhS3_RKNS_4RectES6_h+0x252>
 801c812:	9a16      	ldr	r2, [sp, #88]	; 0x58
 801c814:	9906      	ldr	r1, [sp, #24]
 801c816:	8812      	ldrh	r2, [r2, #0]
 801c818:	1a52      	subs	r2, r2, r1
 801c81a:	eb08 0842 	add.w	r8, r8, r2, lsl #1
 801c81e:	9a09      	ldr	r2, [sp, #36]	; 0x24
 801c820:	9914      	ldr	r1, [sp, #80]	; 0x50
 801c822:	3201      	adds	r2, #1
 801c824:	428a      	cmp	r2, r1
 801c826:	9209      	str	r2, [sp, #36]	; 0x24
 801c828:	d111      	bne.n	801c84e <_ZN8touchgfx8LCD16bpp19DecompressorL8_LZW916blitCopyARGB8888EPKhS3_RKNS_4RectES6_h+0x3be>
 801c82a:	f8bd 5068 	ldrh.w	r5, [sp, #104]	; 0x68
 801c82e:	f8bd 9060 	ldrh.w	r9, [sp, #96]	; 0x60
 801c832:	9b06      	ldr	r3, [sp, #24]
 801c834:	eba5 0509 	sub.w	r5, r5, r9
 801c838:	b2ad      	uxth	r5, r5
 801c83a:	2d00      	cmp	r5, #0
 801c83c:	bf08      	it	eq
 801c83e:	4619      	moveq	r1, r3
 801c840:	9b0d      	ldr	r3, [sp, #52]	; 0x34
 801c842:	bf18      	it	ne
 801c844:	2100      	movne	r1, #0
 801c846:	3301      	adds	r3, #1
 801c848:	930d      	str	r3, [sp, #52]	; 0x34
 801c84a:	b289      	uxth	r1, r1
 801c84c:	e695      	b.n	801c57a <_ZN8touchgfx8LCD16bpp19DecompressorL8_LZW916blitCopyARGB8888EPKhS3_RKNS_4RectES6_h+0xea>
 801c84e:	f8bd 4018 	ldrh.w	r4, [sp, #24]
 801c852:	f8bd 5064 	ldrh.w	r5, [sp, #100]	; 0x64
 801c856:	1b2d      	subs	r5, r5, r4
 801c858:	b2ad      	uxth	r5, r5
 801c85a:	2d00      	cmp	r5, #0
 801c85c:	bf18      	it	ne
 801c85e:	2400      	movne	r4, #0
 801c860:	e740      	b.n	801c6e4 <_ZN8touchgfx8LCD16bpp19DecompressorL8_LZW916blitCopyARGB8888EPKhS3_RKNS_4RectES6_h+0x254>
 801c862:	4b04      	ldr	r3, [pc, #16]	; (801c874 <_ZN8touchgfx8LCD16bpp19DecompressorL8_LZW916blitCopyARGB8888EPKhS3_RKNS_4RectES6_h+0x3e4>)
 801c864:	6818      	ldr	r0, [r3, #0]
 801c866:	6803      	ldr	r3, [r0, #0]
 801c868:	6adb      	ldr	r3, [r3, #44]	; 0x2c
 801c86a:	4798      	blx	r3
 801c86c:	b01d      	add	sp, #116	; 0x74
 801c86e:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
 801c872:	bf00      	nop
 801c874:	20012f24 	.word	0x20012f24

0801c878 <_ZN8touchgfx8LCD16bpp19DecompressorL8_LZW914blitCopyRGB888EPKhS3_RKNS_4RectES6_h>:
 801c878:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 801c87c:	b09f      	sub	sp, #124	; 0x7c
 801c87e:	e9cd 1213 	strd	r1, r2, [sp, #76]	; 0x4c
 801c882:	f89d 20a4 	ldrb.w	r2, [sp, #164]	; 0xa4
 801c886:	920a      	str	r2, [sp, #40]	; 0x28
 801c888:	461d      	mov	r5, r3
 801c88a:	4604      	mov	r4, r0
 801c88c:	9b28      	ldr	r3, [sp, #160]	; 0xa0
 801c88e:	2a00      	cmp	r2, #0
 801c890:	f000 81fa 	beq.w	801cc88 <_ZN8touchgfx8LCD16bpp19DecompressorL8_LZW914blitCopyRGB888EPKhS3_RKNS_4RectES6_h+0x410>
 801c894:	6828      	ldr	r0, [r5, #0]
 801c896:	6869      	ldr	r1, [r5, #4]
 801c898:	aa1a      	add	r2, sp, #104	; 0x68
 801c89a:	c203      	stmia	r2!, {r0, r1}
 801c89c:	6818      	ldr	r0, [r3, #0]
 801c89e:	6859      	ldr	r1, [r3, #4]
 801c8a0:	aa1c      	add	r2, sp, #112	; 0x70
 801c8a2:	c203      	stmia	r2!, {r0, r1}
 801c8a4:	a81a      	add	r0, sp, #104	; 0x68
 801c8a6:	f7f8 fb8f 	bl	8014fc8 <_ZN8touchgfx21DisplayTransformation29transformDisplayToFrameBufferERNS_4RectE>
 801c8aa:	4629      	mov	r1, r5
 801c8ac:	a81c      	add	r0, sp, #112	; 0x70
 801c8ae:	f7f8 fbcf 	bl	8015050 <_ZN8touchgfx21DisplayTransformation29transformDisplayToFrameBufferERNS_4RectERKS1_>
 801c8b2:	f9bd 306c 	ldrsh.w	r3, [sp, #108]	; 0x6c
 801c8b6:	f9bd 606e 	ldrsh.w	r6, [sp, #110]	; 0x6e
 801c8ba:	f9bd 7076 	ldrsh.w	r7, [sp, #118]	; 0x76
 801c8be:	f5b3 6f80 	cmp.w	r3, #1024	; 0x400
 801c8c2:	bfd7      	itett	le
 801c8c4:	b29a      	uxthle	r2, r3
 801c8c6:	2201      	movgt	r2, #1
 801c8c8:	f44f 6180 	movle.w	r1, #1024	; 0x400
 801c8cc:	fb91 f2f2 	sdivle	r2, r1, r2
 801c8d0:	9201      	str	r2, [sp, #4]
 801c8d2:	9801      	ldr	r0, [sp, #4]
 801c8d4:	f9bd 2072 	ldrsh.w	r2, [sp, #114]	; 0x72
 801c8d8:	fb92 f0f0 	sdiv	r0, r2, r0
 801c8dc:	b280      	uxth	r0, r0
 801c8de:	9010      	str	r0, [sp, #64]	; 0x40
 801c8e0:	9901      	ldr	r1, [sp, #4]
 801c8e2:	9801      	ldr	r0, [sp, #4]
 801c8e4:	9d10      	ldr	r5, [sp, #64]	; 0x40
 801c8e6:	440e      	add	r6, r1
 801c8e8:	fb05 2510 	mls	r5, r5, r0, r2
 801c8ec:	fb15 f503 	smulbb	r5, r5, r3
 801c8f0:	3e01      	subs	r6, #1
 801c8f2:	f8bd 3068 	ldrh.w	r3, [sp, #104]	; 0x68
 801c8f6:	fb96 f6f1 	sdiv	r6, r6, r1
 801c8fa:	f8bd 1070 	ldrh.w	r1, [sp, #112]	; 0x70
 801c8fe:	440d      	add	r5, r1
 801c900:	4419      	add	r1, r3
 801c902:	f8bd 306a 	ldrh.w	r3, [sp, #106]	; 0x6a
 801c906:	f8ad 1070 	strh.w	r1, [sp, #112]	; 0x70
 801c90a:	441a      	add	r2, r3
 801c90c:	f9bd 3074 	ldrsh.w	r3, [sp, #116]	; 0x74
 801c910:	9304      	str	r3, [sp, #16]
 801c912:	4b96      	ldr	r3, [pc, #600]	; (801cb6c <_ZN8touchgfx8LCD16bpp19DecompressorL8_LZW914blitCopyRGB888EPKhS3_RKNS_4RectES6_h+0x2f4>)
 801c914:	f8ad 2072 	strh.w	r2, [sp, #114]	; 0x72
 801c918:	6818      	ldr	r0, [r3, #0]
 801c91a:	6803      	ldr	r3, [r0, #0]
 801c91c:	6a9b      	ldr	r3, [r3, #40]	; 0x28
 801c91e:	4798      	blx	r3
 801c920:	4b93      	ldr	r3, [pc, #588]	; (801cb70 <_ZN8touchgfx8LCD16bpp19DecompressorL8_LZW914blitCopyRGB888EPKhS3_RKNS_4RectES6_h+0x2f8>)
 801c922:	f9bd 1072 	ldrsh.w	r1, [sp, #114]	; 0x72
 801c926:	881a      	ldrh	r2, [r3, #0]
 801c928:	f9bd c070 	ldrsh.w	ip, [sp, #112]	; 0x70
 801c92c:	9318      	str	r3, [sp, #96]	; 0x60
 801c92e:	fb02 c101 	mla	r1, r2, r1, ip
 801c932:	eb00 0b41 	add.w	fp, r0, r1, lsl #1
 801c936:	4357      	muls	r7, r2
 801c938:	eb0b 0247 	add.w	r2, fp, r7, lsl #1
 801c93c:	3601      	adds	r6, #1
 801c93e:	920b      	str	r2, [sp, #44]	; 0x2c
 801c940:	9a14      	ldr	r2, [sp, #80]	; 0x50
 801c942:	4b8c      	ldr	r3, [pc, #560]	; (801cb74 <_ZN8touchgfx8LCD16bpp19DecompressorL8_LZW914blitCopyRGB888EPKhS3_RKNS_4RectES6_h+0x2fc>)
 801c944:	b2b6      	uxth	r6, r6
 801c946:	eb02 0686 	add.w	r6, r2, r6, lsl #2
 801c94a:	1d32      	adds	r2, r6, #4
 801c94c:	9206      	str	r2, [sp, #24]
 801c94e:	9a0a      	ldr	r2, [sp, #40]	; 0x28
 801c950:	43d2      	mvns	r2, r2
 801c952:	b2d2      	uxtb	r2, r2
 801c954:	b2ad      	uxth	r5, r5
 801c956:	9215      	str	r2, [sp, #84]	; 0x54
 801c958:	9a04      	ldr	r2, [sp, #16]
 801c95a:	2d00      	cmp	r5, #0
 801c95c:	bf0c      	ite	eq
 801c95e:	4611      	moveq	r1, r2
 801c960:	2100      	movne	r1, #0
 801c962:	2200      	movs	r2, #0
 801c964:	1b1b      	subs	r3, r3, r4
 801c966:	b289      	uxth	r1, r1
 801c968:	920d      	str	r2, [sp, #52]	; 0x34
 801c96a:	9319      	str	r3, [sp, #100]	; 0x64
 801c96c:	9a10      	ldr	r2, [sp, #64]	; 0x40
 801c96e:	9b0d      	ldr	r3, [sp, #52]	; 0x34
 801c970:	fa12 f383 	uxtah	r3, r2, r3
 801c974:	9a14      	ldr	r2, [sp, #80]	; 0x50
 801c976:	eb02 0383 	add.w	r3, r2, r3, lsl #2
 801c97a:	3304      	adds	r3, #4
 801c97c:	9307      	str	r3, [sp, #28]
 801c97e:	9b0b      	ldr	r3, [sp, #44]	; 0x2c
 801c980:	455b      	cmp	r3, fp
 801c982:	f240 817c 	bls.w	801cc7e <_ZN8touchgfx8LCD16bpp19DecompressorL8_LZW914blitCopyRGB888EPKhS3_RKNS_4RectES6_h+0x406>
 801c986:	9a01      	ldr	r2, [sp, #4]
 801c988:	f8bd 306c 	ldrh.w	r3, [sp, #108]	; 0x6c
 801c98c:	fbb5 f3f3 	udiv	r3, r5, r3
 801c990:	1ad3      	subs	r3, r2, r3
 801c992:	b29b      	uxth	r3, r3
 801c994:	9316      	str	r3, [sp, #88]	; 0x58
 801c996:	9b07      	ldr	r3, [sp, #28]
 801c998:	9807      	ldr	r0, [sp, #28]
 801c99a:	785a      	ldrb	r2, [r3, #1]
 801c99c:	789b      	ldrb	r3, [r3, #2]
 801c99e:	7800      	ldrb	r0, [r0, #0]
 801c9a0:	9011      	str	r0, [sp, #68]	; 0x44
 801c9a2:	021b      	lsls	r3, r3, #8
 801c9a4:	ea43 4302 	orr.w	r3, r3, r2, lsl #16
 801c9a8:	9a07      	ldr	r2, [sp, #28]
 801c9aa:	78d2      	ldrb	r2, [r2, #3]
 801c9ac:	4313      	orrs	r3, r2
 801c9ae:	9a13      	ldr	r2, [sp, #76]	; 0x4c
 801c9b0:	3001      	adds	r0, #1
 801c9b2:	441a      	add	r2, r3
 801c9b4:	9005      	str	r0, [sp, #20]
 801c9b6:	1c50      	adds	r0, r2, #1
 801c9b8:	9003      	str	r0, [sp, #12]
 801c9ba:	7852      	ldrb	r2, [r2, #1]
 801c9bc:	9813      	ldr	r0, [sp, #76]	; 0x4c
 801c9be:	0212      	lsls	r2, r2, #8
 801c9c0:	5cc3      	ldrb	r3, [r0, r3]
 801c9c2:	f402 72ff 	and.w	r2, r2, #510	; 0x1fe
 801c9c6:	431a      	orrs	r2, r3
 801c9c8:	b293      	uxth	r3, r2
 801c9ca:	930c      	str	r3, [sp, #48]	; 0x30
 801c9cc:	2300      	movs	r3, #0
 801c9ce:	f884 2804 	strb.w	r2, [r4, #2052]	; 0x804
 801c9d2:	9308      	str	r3, [sp, #32]
 801c9d4:	461a      	mov	r2, r3
 801c9d6:	f8bd 3028 	ldrh.w	r3, [sp, #40]	; 0x28
 801c9da:	930e      	str	r3, [sp, #56]	; 0x38
 801c9dc:	f04f 0801 	mov.w	r8, #1
 801c9e0:	f8bd 3054 	ldrh.w	r3, [sp, #84]	; 0x54
 801c9e4:	f8cd 8008 	str.w	r8, [sp, #8]
 801c9e8:	46c4      	mov	ip, r8
 801c9ea:	930f      	str	r3, [sp, #60]	; 0x3c
 801c9ec:	2d00      	cmp	r5, #0
 801c9ee:	d07c      	beq.n	801caea <_ZN8touchgfx8LCD16bpp19DecompressorL8_LZW914blitCopyRGB888EPKhS3_RKNS_4RectES6_h+0x272>
 801c9f0:	45ac      	cmp	ip, r5
 801c9f2:	d26c      	bcs.n	801cace <_ZN8touchgfx8LCD16bpp19DecompressorL8_LZW914blitCopyRGB888EPKhS3_RKNS_4RectES6_h+0x256>
 801c9f4:	9b0b      	ldr	r3, [sp, #44]	; 0x2c
 801c9f6:	eba5 050c 	sub.w	r5, r5, ip
 801c9fa:	455b      	cmp	r3, fp
 801c9fc:	b2ad      	uxth	r5, r5
 801c9fe:	4608      	mov	r0, r1
 801ca00:	d802      	bhi.n	801ca08 <_ZN8touchgfx8LCD16bpp19DecompressorL8_LZW914blitCopyRGB888EPKhS3_RKNS_4RectES6_h+0x190>
 801ca02:	e070      	b.n	801cae6 <_ZN8touchgfx8LCD16bpp19DecompressorL8_LZW914blitCopyRGB888EPKhS3_RKNS_4RectES6_h+0x26e>
 801ca04:	2b00      	cmp	r3, #0
 801ca06:	d15c      	bne.n	801cac2 <_ZN8touchgfx8LCD16bpp19DecompressorL8_LZW914blitCopyRGB888EPKhS3_RKNS_4RectES6_h+0x24a>
 801ca08:	9b03      	ldr	r3, [sp, #12]
 801ca0a:	9a02      	ldr	r2, [sp, #8]
 801ca0c:	785b      	ldrb	r3, [r3, #1]
 801ca0e:	9902      	ldr	r1, [sp, #8]
 801ca10:	f1c2 0207 	rsb	r2, r2, #7
 801ca14:	4093      	lsls	r3, r2
 801ca16:	005b      	lsls	r3, r3, #1
 801ca18:	f403 72ff 	and.w	r2, r3, #510	; 0x1fe
 801ca1c:	9b03      	ldr	r3, [sp, #12]
 801ca1e:	781b      	ldrb	r3, [r3, #0]
 801ca20:	410b      	asrs	r3, r1
 801ca22:	3101      	adds	r1, #1
 801ca24:	b2c9      	uxtb	r1, r1
 801ca26:	2908      	cmp	r1, #8
 801ca28:	9102      	str	r1, [sp, #8]
 801ca2a:	9903      	ldr	r1, [sp, #12]
 801ca2c:	bf0a      	itet	eq
 801ca2e:	3102      	addeq	r1, #2
 801ca30:	3101      	addne	r1, #1
 801ca32:	9103      	streq	r1, [sp, #12]
 801ca34:	b2db      	uxtb	r3, r3
 801ca36:	bf0a      	itet	eq
 801ca38:	2100      	moveq	r1, #0
 801ca3a:	9103      	strne	r1, [sp, #12]
 801ca3c:	9102      	streq	r1, [sp, #8]
 801ca3e:	4313      	orrs	r3, r2
 801ca40:	9911      	ldr	r1, [sp, #68]	; 0x44
 801ca42:	b29a      	uxth	r2, r3
 801ca44:	4291      	cmp	r1, r2
 801ca46:	d30a      	bcc.n	801ca5e <_ZN8touchgfx8LCD16bpp19DecompressorL8_LZW914blitCopyRGB888EPKhS3_RKNS_4RectES6_h+0x1e6>
 801ca48:	f884 3804 	strb.w	r3, [r4, #2052]	; 0x804
 801ca4c:	2301      	movs	r3, #1
 801ca4e:	9905      	ldr	r1, [sp, #20]
 801ca50:	f5b1 7f00 	cmp.w	r1, #512	; 0x200
 801ca54:	d30f      	bcc.n	801ca76 <_ZN8touchgfx8LCD16bpp19DecompressorL8_LZW914blitCopyRGB888EPKhS3_RKNS_4RectES6_h+0x1fe>
 801ca56:	2100      	movs	r1, #0
 801ca58:	4698      	mov	r8, r3
 801ca5a:	9100      	str	r1, [sp, #0]
 801ca5c:	e032      	b.n	801cac4 <_ZN8touchgfx8LCD16bpp19DecompressorL8_LZW914blitCopyRGB888EPKhS3_RKNS_4RectES6_h+0x24c>
 801ca5e:	9b05      	ldr	r3, [sp, #20]
 801ca60:	429a      	cmp	r2, r3
 801ca62:	d318      	bcc.n	801ca96 <_ZN8touchgfx8LCD16bpp19DecompressorL8_LZW914blitCopyRGB888EPKhS3_RKNS_4RectES6_h+0x21e>
 801ca64:	eb04 0308 	add.w	r3, r4, r8
 801ca68:	f894 1804 	ldrb.w	r1, [r4, #2052]	; 0x804
 801ca6c:	f883 1804 	strb.w	r1, [r3, #2052]	; 0x804
 801ca70:	f108 0301 	add.w	r3, r8, #1
 801ca74:	b29b      	uxth	r3, r3
 801ca76:	9905      	ldr	r1, [sp, #20]
 801ca78:	f894 6804 	ldrb.w	r6, [r4, #2052]	; 0x804
 801ca7c:	eb04 0181 	add.w	r1, r4, r1, lsl #2
 801ca80:	710e      	strb	r6, [r1, #4]
 801ca82:	9e0c      	ldr	r6, [sp, #48]	; 0x30
 801ca84:	80ce      	strh	r6, [r1, #6]
 801ca86:	f108 0601 	add.w	r6, r8, #1
 801ca8a:	714e      	strb	r6, [r1, #5]
 801ca8c:	9905      	ldr	r1, [sp, #20]
 801ca8e:	3101      	adds	r1, #1
 801ca90:	b289      	uxth	r1, r1
 801ca92:	9105      	str	r1, [sp, #20]
 801ca94:	e7df      	b.n	801ca56 <_ZN8touchgfx8LCD16bpp19DecompressorL8_LZW914blitCopyRGB888EPKhS3_RKNS_4RectES6_h+0x1de>
 801ca96:	eb04 0382 	add.w	r3, r4, r2, lsl #2
 801ca9a:	4611      	mov	r1, r2
 801ca9c:	795b      	ldrb	r3, [r3, #5]
 801ca9e:	f603 0604 	addw	r6, r3, #2052	; 0x804
 801caa2:	4426      	add	r6, r4
 801caa4:	9f19      	ldr	r7, [sp, #100]	; 0x64
 801caa6:	4437      	add	r7, r6
 801caa8:	2f00      	cmp	r7, #0
 801caaa:	dd06      	ble.n	801caba <_ZN8touchgfx8LCD16bpp19DecompressorL8_LZW914blitCopyRGB888EPKhS3_RKNS_4RectES6_h+0x242>
 801caac:	eb04 0181 	add.w	r1, r4, r1, lsl #2
 801cab0:	790f      	ldrb	r7, [r1, #4]
 801cab2:	f806 7d01 	strb.w	r7, [r6, #-1]!
 801cab6:	88c9      	ldrh	r1, [r1, #6]
 801cab8:	e7f4      	b.n	801caa4 <_ZN8touchgfx8LCD16bpp19DecompressorL8_LZW914blitCopyRGB888EPKhS3_RKNS_4RectES6_h+0x22c>
 801caba:	f884 1804 	strb.w	r1, [r4, #2052]	; 0x804
 801cabe:	b29b      	uxth	r3, r3
 801cac0:	e7c5      	b.n	801ca4e <_ZN8touchgfx8LCD16bpp19DecompressorL8_LZW914blitCopyRGB888EPKhS3_RKNS_4RectES6_h+0x1d6>
 801cac2:	9a0c      	ldr	r2, [sp, #48]	; 0x30
 801cac4:	920c      	str	r2, [sp, #48]	; 0x30
 801cac6:	4601      	mov	r1, r0
 801cac8:	9a00      	ldr	r2, [sp, #0]
 801caca:	469c      	mov	ip, r3
 801cacc:	e78e      	b.n	801c9ec <_ZN8touchgfx8LCD16bpp19DecompressorL8_LZW914blitCopyRGB888EPKhS3_RKNS_4RectES6_h+0x174>
 801cace:	1957      	adds	r7, r2, r5
 801cad0:	ebac 0305 	sub.w	r3, ip, r5
 801cad4:	b2ba      	uxth	r2, r7
 801cad6:	f8bd 0010 	ldrh.w	r0, [sp, #16]
 801cada:	9200      	str	r2, [sp, #0]
 801cadc:	b29b      	uxth	r3, r3
 801cade:	2500      	movs	r5, #0
 801cae0:	9a0b      	ldr	r2, [sp, #44]	; 0x2c
 801cae2:	455a      	cmp	r2, fp
 801cae4:	d88e      	bhi.n	801ca04 <_ZN8touchgfx8LCD16bpp19DecompressorL8_LZW914blitCopyRGB888EPKhS3_RKNS_4RectES6_h+0x18c>
 801cae6:	4601      	mov	r1, r0
 801cae8:	e749      	b.n	801c97e <_ZN8touchgfx8LCD16bpp19DecompressorL8_LZW914blitCopyRGB888EPKhS3_RKNS_4RectES6_h+0x106>
 801caea:	458c      	cmp	ip, r1
 801caec:	bf2c      	ite	cs
 801caee:	4628      	movcs	r0, r5
 801caf0:	462b      	movcc	r3, r5
 801caf2:	9d0a      	ldr	r5, [sp, #40]	; 0x28
 801caf4:	bf27      	ittee	cs
 801caf6:	9109      	strcs	r1, [sp, #36]	; 0x24
 801caf8:	ebac 0301 	subcs.w	r3, ip, r1
 801cafc:	eba1 000c 	subcc.w	r0, r1, ip
 801cb00:	f8cd c024 	strcc.w	ip, [sp, #36]	; 0x24
 801cb04:	bf2c      	ite	cs
 801cb06:	b29b      	uxthcs	r3, r3
 801cb08:	b280      	uxthcc	r0, r0
 801cb0a:	2dff      	cmp	r5, #255	; 0xff
 801cb0c:	9d09      	ldr	r5, [sp, #36]	; 0x24
 801cb0e:	eb02 0705 	add.w	r7, r2, r5
 801cb12:	b2bd      	uxth	r5, r7
 801cb14:	9500      	str	r5, [sp, #0]
 801cb16:	d12f      	bne.n	801cb78 <_ZN8touchgfx8LCD16bpp19DecompressorL8_LZW914blitCopyRGB888EPKhS3_RKNS_4RectES6_h+0x300>
 801cb18:	465e      	mov	r6, fp
 801cb1a:	9d00      	ldr	r5, [sp, #0]
 801cb1c:	42aa      	cmp	r2, r5
 801cb1e:	f040 8084 	bne.w	801cc2a <_ZN8touchgfx8LCD16bpp19DecompressorL8_LZW914blitCopyRGB888EPKhS3_RKNS_4RectES6_h+0x3b2>
 801cb22:	9a09      	ldr	r2, [sp, #36]	; 0x24
 801cb24:	458c      	cmp	ip, r1
 801cb26:	eb0b 0b42 	add.w	fp, fp, r2, lsl #1
 801cb2a:	d3d8      	bcc.n	801cade <_ZN8touchgfx8LCD16bpp19DecompressorL8_LZW914blitCopyRGB888EPKhS3_RKNS_4RectES6_h+0x266>
 801cb2c:	9a18      	ldr	r2, [sp, #96]	; 0x60
 801cb2e:	9904      	ldr	r1, [sp, #16]
 801cb30:	8812      	ldrh	r2, [r2, #0]
 801cb32:	1a52      	subs	r2, r2, r1
 801cb34:	eb0b 0b42 	add.w	fp, fp, r2, lsl #1
 801cb38:	9a08      	ldr	r2, [sp, #32]
 801cb3a:	9916      	ldr	r1, [sp, #88]	; 0x58
 801cb3c:	3201      	adds	r2, #1
 801cb3e:	428a      	cmp	r2, r1
 801cb40:	9208      	str	r2, [sp, #32]
 801cb42:	f040 8092 	bne.w	801cc6a <_ZN8touchgfx8LCD16bpp19DecompressorL8_LZW914blitCopyRGB888EPKhS3_RKNS_4RectES6_h+0x3f2>
 801cb46:	f8bd 5070 	ldrh.w	r5, [sp, #112]	; 0x70
 801cb4a:	f8bd c068 	ldrh.w	ip, [sp, #104]	; 0x68
 801cb4e:	9b04      	ldr	r3, [sp, #16]
 801cb50:	eba5 050c 	sub.w	r5, r5, ip
 801cb54:	b2ad      	uxth	r5, r5
 801cb56:	2d00      	cmp	r5, #0
 801cb58:	bf08      	it	eq
 801cb5a:	4619      	moveq	r1, r3
 801cb5c:	9b0d      	ldr	r3, [sp, #52]	; 0x34
 801cb5e:	bf18      	it	ne
 801cb60:	2100      	movne	r1, #0
 801cb62:	3301      	adds	r3, #1
 801cb64:	930d      	str	r3, [sp, #52]	; 0x34
 801cb66:	b289      	uxth	r1, r1
 801cb68:	e700      	b.n	801c96c <_ZN8touchgfx8LCD16bpp19DecompressorL8_LZW914blitCopyRGB888EPKhS3_RKNS_4RectES6_h+0xf4>
 801cb6a:	bf00      	nop
 801cb6c:	20012f24 	.word	0x20012f24
 801cb70:	20012f1e 	.word	0x20012f1e
 801cb74:	fffff7fb 	.word	0xfffff7fb
 801cb78:	46d9      	mov	r9, fp
 801cb7a:	9d00      	ldr	r5, [sp, #0]
 801cb7c:	42aa      	cmp	r2, r5
 801cb7e:	d0d0      	beq.n	801cb22 <_ZN8touchgfx8LCD16bpp19DecompressorL8_LZW914blitCopyRGB888EPKhS3_RKNS_4RectES6_h+0x2aa>
 801cb80:	1c55      	adds	r5, r2, #1
 801cb82:	4422      	add	r2, r4
 801cb84:	9517      	str	r5, [sp, #92]	; 0x5c
 801cb86:	f892 e804 	ldrb.w	lr, [r2, #2052]	; 0x804
 801cb8a:	9a06      	ldr	r2, [sp, #24]
 801cb8c:	eb0e 0e4e 	add.w	lr, lr, lr, lsl #1
 801cb90:	4472      	add	r2, lr
 801cb92:	9212      	str	r2, [sp, #72]	; 0x48
 801cb94:	9f12      	ldr	r7, [sp, #72]	; 0x48
 801cb96:	f8b9 2000 	ldrh.w	r2, [r9]
 801cb9a:	f897 a002 	ldrb.w	sl, [r7, #2]
 801cb9e:	9f0e      	ldr	r7, [sp, #56]	; 0x38
 801cba0:	1216      	asrs	r6, r2, #8
 801cba2:	fb1a fa07 	smulbb	sl, sl, r7
 801cba6:	f006 06f8 	and.w	r6, r6, #248	; 0xf8
 801cbaa:	9f0f      	ldr	r7, [sp, #60]	; 0x3c
 801cbac:	ea46 1656 	orr.w	r6, r6, r6, lsr #5
 801cbb0:	fb06 a607 	mla	r6, r6, r7, sl
 801cbb4:	9f12      	ldr	r7, [sp, #72]	; 0x48
 801cbb6:	f897 a001 	ldrb.w	sl, [r7, #1]
 801cbba:	9f0e      	ldr	r7, [sp, #56]	; 0x38
 801cbbc:	10d5      	asrs	r5, r2, #3
 801cbbe:	fb1a fa07 	smulbb	sl, sl, r7
 801cbc2:	f005 05fc 	and.w	r5, r5, #252	; 0xfc
 801cbc6:	9f0f      	ldr	r7, [sp, #60]	; 0x3c
 801cbc8:	ea45 1595 	orr.w	r5, r5, r5, lsr #6
 801cbcc:	fb05 a507 	mla	r5, r5, r7, sl
 801cbd0:	9f06      	ldr	r7, [sp, #24]
 801cbd2:	f817 e00e 	ldrb.w	lr, [r7, lr]
 801cbd6:	9f0e      	ldr	r7, [sp, #56]	; 0x38
 801cbd8:	00d2      	lsls	r2, r2, #3
 801cbda:	fb1e fe07 	smulbb	lr, lr, r7
 801cbde:	b2d2      	uxtb	r2, r2
 801cbe0:	9f0f      	ldr	r7, [sp, #60]	; 0x3c
 801cbe2:	ea42 1252 	orr.w	r2, r2, r2, lsr #5
 801cbe6:	b2b6      	uxth	r6, r6
 801cbe8:	fb02 e207 	mla	r2, r2, r7, lr
 801cbec:	b292      	uxth	r2, r2
 801cbee:	b2ad      	uxth	r5, r5
 801cbf0:	f106 0a01 	add.w	sl, r6, #1
 801cbf4:	eb0a 2616 	add.w	r6, sl, r6, lsr #8
 801cbf8:	f102 0e01 	add.w	lr, r2, #1
 801cbfc:	f105 0a01 	add.w	sl, r5, #1
 801cc00:	eb0e 2e12 	add.w	lr, lr, r2, lsr #8
 801cc04:	eb0a 2a15 	add.w	sl, sl, r5, lsr #8
 801cc08:	f406 4678 	and.w	r6, r6, #63488	; 0xf800
 801cc0c:	f3ce 2ec4 	ubfx	lr, lr, #11, #5
 801cc10:	ea4f 1a5a 	mov.w	sl, sl, lsr #5
 801cc14:	ea4e 0606 	orr.w	r6, lr, r6
 801cc18:	f40a 6afc 	and.w	sl, sl, #2016	; 0x7e0
 801cc1c:	ea46 060a 	orr.w	r6, r6, sl
 801cc20:	f829 6b02 	strh.w	r6, [r9], #2
 801cc24:	f8bd 205c 	ldrh.w	r2, [sp, #92]	; 0x5c
 801cc28:	e7a7      	b.n	801cb7a <_ZN8touchgfx8LCD16bpp19DecompressorL8_LZW914blitCopyRGB888EPKhS3_RKNS_4RectES6_h+0x302>
 801cc2a:	f102 0e01 	add.w	lr, r2, #1
 801cc2e:	4422      	add	r2, r4
 801cc30:	9f06      	ldr	r7, [sp, #24]
 801cc32:	f892 5804 	ldrb.w	r5, [r2, #2052]	; 0x804
 801cc36:	9a06      	ldr	r2, [sp, #24]
 801cc38:	eb05 0545 	add.w	r5, r5, r5, lsl #1
 801cc3c:	eb02 0a05 	add.w	sl, r2, r5
 801cc40:	4a13      	ldr	r2, [pc, #76]	; (801cc90 <_ZN8touchgfx8LCD16bpp19DecompressorL8_LZW914blitCopyRGB888EPKhS3_RKNS_4RectES6_h+0x418>)
 801cc42:	f89a 9002 	ldrb.w	r9, [sl, #2]
 801cc46:	ea02 2909 	and.w	r9, r2, r9, lsl #8
 801cc4a:	f89a 2001 	ldrb.w	r2, [sl, #1]
 801cc4e:	00d2      	lsls	r2, r2, #3
 801cc50:	f402 62fc 	and.w	r2, r2, #2016	; 0x7e0
 801cc54:	ea49 0202 	orr.w	r2, r9, r2
 801cc58:	f817 9005 	ldrb.w	r9, [r7, r5]
 801cc5c:	ea42 02d9 	orr.w	r2, r2, r9, lsr #3
 801cc60:	f826 2b02 	strh.w	r2, [r6], #2
 801cc64:	fa1f f28e 	uxth.w	r2, lr
 801cc68:	e757      	b.n	801cb1a <_ZN8touchgfx8LCD16bpp19DecompressorL8_LZW914blitCopyRGB888EPKhS3_RKNS_4RectES6_h+0x2a2>
 801cc6a:	f8bd 0010 	ldrh.w	r0, [sp, #16]
 801cc6e:	f8bd 506c 	ldrh.w	r5, [sp, #108]	; 0x6c
 801cc72:	1a2d      	subs	r5, r5, r0
 801cc74:	b2ad      	uxth	r5, r5
 801cc76:	2d00      	cmp	r5, #0
 801cc78:	bf18      	it	ne
 801cc7a:	2000      	movne	r0, #0
 801cc7c:	e730      	b.n	801cae0 <_ZN8touchgfx8LCD16bpp19DecompressorL8_LZW914blitCopyRGB888EPKhS3_RKNS_4RectES6_h+0x268>
 801cc7e:	4b05      	ldr	r3, [pc, #20]	; (801cc94 <_ZN8touchgfx8LCD16bpp19DecompressorL8_LZW914blitCopyRGB888EPKhS3_RKNS_4RectES6_h+0x41c>)
 801cc80:	6818      	ldr	r0, [r3, #0]
 801cc82:	6803      	ldr	r3, [r0, #0]
 801cc84:	6adb      	ldr	r3, [r3, #44]	; 0x2c
 801cc86:	4798      	blx	r3
 801cc88:	b01f      	add	sp, #124	; 0x7c
 801cc8a:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
 801cc8e:	bf00      	nop
 801cc90:	fffff800 	.word	0xfffff800
 801cc94:	20012f24 	.word	0x20012f24

0801cc98 <_ZN8touchgfx8LCD16bpp29copyFrameBufferRegionToMemoryERKNS_4RectES3_Phss>:
 801cc98:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 801cc9c:	b091      	sub	sp, #68	; 0x44
 801cc9e:	469b      	mov	fp, r3
 801cca0:	f10d 0828 	add.w	r8, sp, #40	; 0x28
 801cca4:	4616      	mov	r6, r2
 801cca6:	f9bd 906c 	ldrsh.w	r9, [sp, #108]	; 0x6c
 801ccaa:	f9b3 2000 	ldrsh.w	r2, [r3]
 801ccae:	f9bd 7070 	ldrsh.w	r7, [sp, #112]	; 0x70
 801ccb2:	f9b3 3002 	ldrsh.w	r3, [r3, #2]
 801ccb6:	f8ad 2028 	strh.w	r2, [sp, #40]	; 0x28
 801ccba:	4604      	mov	r4, r0
 801ccbc:	460d      	mov	r5, r1
 801ccbe:	4640      	mov	r0, r8
 801ccc0:	4659      	mov	r1, fp
 801ccc2:	f8ad 302a 	strh.w	r3, [sp, #42]	; 0x2a
 801ccc6:	f8ad 902c 	strh.w	r9, [sp, #44]	; 0x2c
 801ccca:	f8ad 702e 	strh.w	r7, [sp, #46]	; 0x2e
 801ccce:	f7f3 fa1d 	bl	801010c <_ZN8touchgfx4RectaNERKS0_>
 801ccd2:	4631      	mov	r1, r6
 801ccd4:	4640      	mov	r0, r8
 801ccd6:	f7f3 fa19 	bl	801010c <_ZN8touchgfx4RectaNERKS0_>
 801ccda:	4b74      	ldr	r3, [pc, #464]	; (801ceac <_ZN8touchgfx8LCD16bpp29copyFrameBufferRegionToMemoryERKNS_4RectES3_Phss+0x214>)
 801ccdc:	8818      	ldrh	r0, [r3, #0]
 801ccde:	4b74      	ldr	r3, [pc, #464]	; (801ceb0 <_ZN8touchgfx8LCD16bpp29copyFrameBufferRegionToMemoryERKNS_4RectES3_Phss+0x218>)
 801cce0:	8819      	ldrh	r1, [r3, #0]
 801cce2:	f9bd 3028 	ldrsh.w	r3, [sp, #40]	; 0x28
 801cce6:	2b00      	cmp	r3, #0
 801cce8:	b202      	sxth	r2, r0
 801ccea:	b20e      	sxth	r6, r1
 801ccec:	da07      	bge.n	801ccfe <_ZN8touchgfx8LCD16bpp29copyFrameBufferRegionToMemoryERKNS_4RectES3_Phss+0x66>
 801ccee:	f8bd c02c 	ldrh.w	ip, [sp, #44]	; 0x2c
 801ccf2:	4463      	add	r3, ip
 801ccf4:	f8ad 302c 	strh.w	r3, [sp, #44]	; 0x2c
 801ccf8:	2300      	movs	r3, #0
 801ccfa:	f8ad 3028 	strh.w	r3, [sp, #40]	; 0x28
 801ccfe:	f9bd 3028 	ldrsh.w	r3, [sp, #40]	; 0x28
 801cd02:	f9bd c02c 	ldrsh.w	ip, [sp, #44]	; 0x2c
 801cd06:	1ad2      	subs	r2, r2, r3
 801cd08:	4594      	cmp	ip, r2
 801cd0a:	bfc4      	itt	gt
 801cd0c:	1ac2      	subgt	r2, r0, r3
 801cd0e:	f8ad 202c 	strhgt.w	r2, [sp, #44]	; 0x2c
 801cd12:	f9bd 202a 	ldrsh.w	r2, [sp, #42]	; 0x2a
 801cd16:	2a00      	cmp	r2, #0
 801cd18:	da07      	bge.n	801cd2a <_ZN8touchgfx8LCD16bpp29copyFrameBufferRegionToMemoryERKNS_4RectES3_Phss+0x92>
 801cd1a:	f8bd c02e 	ldrh.w	ip, [sp, #46]	; 0x2e
 801cd1e:	4462      	add	r2, ip
 801cd20:	f8ad 202e 	strh.w	r2, [sp, #46]	; 0x2e
 801cd24:	2200      	movs	r2, #0
 801cd26:	f8ad 202a 	strh.w	r2, [sp, #42]	; 0x2a
 801cd2a:	f9bd a02a 	ldrsh.w	sl, [sp, #42]	; 0x2a
 801cd2e:	f9bd 202e 	ldrsh.w	r2, [sp, #46]	; 0x2e
 801cd32:	eba6 060a 	sub.w	r6, r6, sl
 801cd36:	42b2      	cmp	r2, r6
 801cd38:	bfc4      	itt	gt
 801cd3a:	eba1 020a 	subgt.w	r2, r1, sl
 801cd3e:	f8ad 202e 	strhgt.w	r2, [sp, #46]	; 0x2e
 801cd42:	4a5c      	ldr	r2, [pc, #368]	; (801ceb4 <_ZN8touchgfx8LCD16bpp29copyFrameBufferRegionToMemoryERKNS_4RectES3_Phss+0x21c>)
 801cd44:	7812      	ldrb	r2, [r2, #0]
 801cd46:	b9a2      	cbnz	r2, 801cd72 <_ZN8touchgfx8LCD16bpp29copyFrameBufferRegionToMemoryERKNS_4RectES3_Phss+0xda>
 801cd48:	f9bd 602c 	ldrsh.w	r6, [sp, #44]	; 0x2c
 801cd4c:	4286      	cmp	r6, r0
 801cd4e:	4640      	mov	r0, r8
 801cd50:	9303      	str	r3, [sp, #12]
 801cd52:	bf14      	ite	ne
 801cd54:	2600      	movne	r6, #0
 801cd56:	2601      	moveq	r6, #1
 801cd58:	f7f3 fa1b 	bl	8010192 <_ZNK8touchgfx4Rect7isEmptyEv>
 801cd5c:	9b03      	ldr	r3, [sp, #12]
 801cd5e:	b160      	cbz	r0, 801cd7a <_ZN8touchgfx8LCD16bpp29copyFrameBufferRegionToMemoryERKNS_4RectES3_Phss+0xe2>
 801cd60:	2300      	movs	r3, #0
 801cd62:	8023      	strh	r3, [r4, #0]
 801cd64:	8063      	strh	r3, [r4, #2]
 801cd66:	80a3      	strh	r3, [r4, #4]
 801cd68:	4620      	mov	r0, r4
 801cd6a:	80e3      	strh	r3, [r4, #6]
 801cd6c:	b011      	add	sp, #68	; 0x44
 801cd6e:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
 801cd72:	f9bd 602e 	ldrsh.w	r6, [sp, #46]	; 0x2e
 801cd76:	428e      	cmp	r6, r1
 801cd78:	e7e9      	b.n	801cd4e <_ZN8touchgfx8LCD16bpp29copyFrameBufferRegionToMemoryERKNS_4RectES3_Phss+0xb6>
 801cd7a:	f9bd 202c 	ldrsh.w	r2, [sp, #44]	; 0x2c
 801cd7e:	9205      	str	r2, [sp, #20]
 801cd80:	f9bd 202e 	ldrsh.w	r2, [sp, #46]	; 0x2e
 801cd84:	9206      	str	r2, [sp, #24]
 801cd86:	f8bb 2000 	ldrh.w	r2, [fp]
 801cd8a:	900e      	str	r0, [sp, #56]	; 0x38
 801cd8c:	1a9b      	subs	r3, r3, r2
 801cd8e:	b21b      	sxth	r3, r3
 801cd90:	9303      	str	r3, [sp, #12]
 801cd92:	f8bb 3002 	ldrh.w	r3, [fp, #2]
 801cd96:	f8ad 903c 	strh.w	r9, [sp, #60]	; 0x3c
 801cd9a:	ebaa 0a03 	sub.w	sl, sl, r3
 801cd9e:	fa0f f38a 	sxth.w	r3, sl
 801cda2:	9304      	str	r3, [sp, #16]
 801cda4:	9b03      	ldr	r3, [sp, #12]
 801cda6:	f8ad 3030 	strh.w	r3, [sp, #48]	; 0x30
 801cdaa:	9b04      	ldr	r3, [sp, #16]
 801cdac:	f8ad 3032 	strh.w	r3, [sp, #50]	; 0x32
 801cdb0:	9b05      	ldr	r3, [sp, #20]
 801cdb2:	f8ad 3034 	strh.w	r3, [sp, #52]	; 0x34
 801cdb6:	a90e      	add	r1, sp, #56	; 0x38
 801cdb8:	9b06      	ldr	r3, [sp, #24]
 801cdba:	f8ad 3036 	strh.w	r3, [sp, #54]	; 0x36
 801cdbe:	a80c      	add	r0, sp, #48	; 0x30
 801cdc0:	f8ad 703e 	strh.w	r7, [sp, #62]	; 0x3e
 801cdc4:	f7f8 f944 	bl	8015050 <_ZN8touchgfx21DisplayTransformation29transformDisplayToFrameBufferERNS_4RectERKS1_>
 801cdc8:	4640      	mov	r0, r8
 801cdca:	f7f8 f8fd 	bl	8014fc8 <_ZN8touchgfx21DisplayTransformation29transformDisplayToFrameBufferERNS_4RectE>
 801cdce:	a80e      	add	r0, sp, #56	; 0x38
 801cdd0:	f7f8 f8fa 	bl	8014fc8 <_ZN8touchgfx21DisplayTransformation29transformDisplayToFrameBufferERNS_4RectE>
 801cdd4:	4b38      	ldr	r3, [pc, #224]	; (801ceb8 <_ZN8touchgfx8LCD16bpp29copyFrameBufferRegionToMemoryERKNS_4RectES3_Phss+0x220>)
 801cdd6:	f9bd a03c 	ldrsh.w	sl, [sp, #60]	; 0x3c
 801cdda:	881b      	ldrh	r3, [r3, #0]
 801cddc:	9307      	str	r3, [sp, #28]
 801cdde:	682b      	ldr	r3, [r5, #0]
 801cde0:	f8df b0d8 	ldr.w	fp, [pc, #216]	; 801cebc <_ZN8touchgfx8LCD16bpp29copyFrameBufferRegionToMemoryERKNS_4RectES3_Phss+0x224>
 801cde4:	6b1b      	ldr	r3, [r3, #48]	; 0x30
 801cde6:	4628      	mov	r0, r5
 801cde8:	4798      	blx	r3
 801cdea:	f8bd 5032 	ldrh.w	r5, [sp, #50]	; 0x32
 801cdee:	f9bd 3030 	ldrsh.w	r3, [sp, #48]	; 0x30
 801cdf2:	4681      	mov	r9, r0
 801cdf4:	fb1a 3305 	smlabb	r3, sl, r5, r3
 801cdf8:	f8db 0000 	ldr.w	r0, [fp]
 801cdfc:	9d1a      	ldr	r5, [sp, #104]	; 0x68
 801cdfe:	eb05 0543 	add.w	r5, r5, r3, lsl #1
 801ce02:	6803      	ldr	r3, [r0, #0]
 801ce04:	6b1b      	ldr	r3, [r3, #48]	; 0x30
 801ce06:	4798      	blx	r3
 801ce08:	4607      	mov	r7, r0
 801ce0a:	f8db 0000 	ldr.w	r0, [fp]
 801ce0e:	f9bd 1028 	ldrsh.w	r1, [sp, #40]	; 0x28
 801ce12:	6803      	ldr	r3, [r0, #0]
 801ce14:	f9bd 202a 	ldrsh.w	r2, [sp, #42]	; 0x2a
 801ce18:	9109      	str	r1, [sp, #36]	; 0x24
 801ce1a:	9208      	str	r2, [sp, #32]
 801ce1c:	6b9b      	ldr	r3, [r3, #56]	; 0x38
 801ce1e:	4798      	blx	r3
 801ce20:	f010 0f01 	tst.w	r0, #1
 801ce24:	e9dd 2108 	ldrd	r2, r1, [sp, #32]
 801ce28:	d012      	beq.n	801ce50 <_ZN8touchgfx8LCD16bpp29copyFrameBufferRegionToMemoryERKNS_4RectES3_Phss+0x1b8>
 801ce2a:	f8db 0000 	ldr.w	r0, [fp]
 801ce2e:	f9bd 2034 	ldrsh.w	r2, [sp, #52]	; 0x34
 801ce32:	6803      	ldr	r3, [r0, #0]
 801ce34:	9200      	str	r2, [sp, #0]
 801ce36:	6ede      	ldr	r6, [r3, #108]	; 0x6c
 801ce38:	e898 0006 	ldmia.w	r8, {r1, r2}
 801ce3c:	462b      	mov	r3, r5
 801ce3e:	47b0      	blx	r6
 801ce40:	9b03      	ldr	r3, [sp, #12]
 801ce42:	8023      	strh	r3, [r4, #0]
 801ce44:	9b04      	ldr	r3, [sp, #16]
 801ce46:	8063      	strh	r3, [r4, #2]
 801ce48:	9b05      	ldr	r3, [sp, #20]
 801ce4a:	80a3      	strh	r3, [r4, #4]
 801ce4c:	9b06      	ldr	r3, [sp, #24]
 801ce4e:	e78b      	b.n	801cd68 <_ZN8touchgfx8LCD16bpp29copyFrameBufferRegionToMemoryERKNS_4RectES3_Phss+0xd0>
 801ce50:	fb09 f202 	mul.w	r2, r9, r2
 801ce54:	eb02 0141 	add.w	r1, r2, r1, lsl #1
 801ce58:	440f      	add	r7, r1
 801ce5a:	f9bd 3036 	ldrsh.w	r3, [sp, #54]	; 0x36
 801ce5e:	b166      	cbz	r6, 801ce7a <_ZN8touchgfx8LCD16bpp29copyFrameBufferRegionToMemoryERKNS_4RectES3_Phss+0x1e2>
 801ce60:	9a07      	ldr	r2, [sp, #28]
 801ce62:	4592      	cmp	sl, r2
 801ce64:	d109      	bne.n	801ce7a <_ZN8touchgfx8LCD16bpp29copyFrameBufferRegionToMemoryERKNS_4RectES3_Phss+0x1e2>
 801ce66:	f8db 0000 	ldr.w	r0, [fp]
 801ce6a:	6802      	ldr	r2, [r0, #0]
 801ce6c:	fb09 f303 	mul.w	r3, r9, r3
 801ce70:	6b56      	ldr	r6, [r2, #52]	; 0x34
 801ce72:	4629      	mov	r1, r5
 801ce74:	463a      	mov	r2, r7
 801ce76:	47b0      	blx	r6
 801ce78:	e7e2      	b.n	801ce40 <_ZN8touchgfx8LCD16bpp29copyFrameBufferRegionToMemoryERKNS_4RectES3_Phss+0x1a8>
 801ce7a:	fb0a f303 	mul.w	r3, sl, r3
 801ce7e:	f8df b03c 	ldr.w	fp, [pc, #60]	; 801cebc <_ZN8touchgfx8LCD16bpp29copyFrameBufferRegionToMemoryERKNS_4RectES3_Phss+0x224>
 801ce82:	eb05 0843 	add.w	r8, r5, r3, lsl #1
 801ce86:	ea4f 064a 	mov.w	r6, sl, lsl #1
 801ce8a:	4545      	cmp	r5, r8
 801ce8c:	d2d8      	bcs.n	801ce40 <_ZN8touchgfx8LCD16bpp29copyFrameBufferRegionToMemoryERKNS_4RectES3_Phss+0x1a8>
 801ce8e:	f8db 0000 	ldr.w	r0, [fp]
 801ce92:	f9bd 3034 	ldrsh.w	r3, [sp, #52]	; 0x34
 801ce96:	6802      	ldr	r2, [r0, #0]
 801ce98:	4629      	mov	r1, r5
 801ce9a:	f8d2 a034 	ldr.w	sl, [r2, #52]	; 0x34
 801ce9e:	005b      	lsls	r3, r3, #1
 801cea0:	463a      	mov	r2, r7
 801cea2:	47d0      	blx	sl
 801cea4:	444f      	add	r7, r9
 801cea6:	4435      	add	r5, r6
 801cea8:	e7ef      	b.n	801ce8a <_ZN8touchgfx8LCD16bpp29copyFrameBufferRegionToMemoryERKNS_4RectES3_Phss+0x1f2>
 801ceaa:	bf00      	nop
 801ceac:	20012f18 	.word	0x20012f18
 801ceb0:	20012f1a 	.word	0x20012f1a
 801ceb4:	20012f1c 	.word	0x20012f1c
 801ceb8:	20012f1e 	.word	0x20012f1e
 801cebc:	20012f24 	.word	0x20012f24

0801cec0 <_ZN8touchgfx8LCD16bpp8fillRectERKNS_4RectENS_9colortypeEh>:
 801cec0:	b5f0      	push	{r4, r5, r6, r7, lr}
 801cec2:	4606      	mov	r6, r0
 801cec4:	b087      	sub	sp, #28
 801cec6:	460c      	mov	r4, r1
 801cec8:	4617      	mov	r7, r2
 801ceca:	461d      	mov	r5, r3
 801cecc:	b333      	cbz	r3, 801cf1c <_ZN8touchgfx8LCD16bpp8fillRectERKNS_4RectENS_9colortypeEh+0x5c>
 801cece:	4608      	mov	r0, r1
 801ced0:	f7f3 f95f 	bl	8010192 <_ZNK8touchgfx4Rect7isEmptyEv>
 801ced4:	bb10      	cbnz	r0, 801cf1c <_ZN8touchgfx8LCD16bpp8fillRectERKNS_4RectENS_9colortypeEh+0x5c>
 801ced6:	6820      	ldr	r0, [r4, #0]
 801ced8:	6861      	ldr	r1, [r4, #4]
 801ceda:	4c1c      	ldr	r4, [pc, #112]	; (801cf4c <_ZN8touchgfx8LCD16bpp8fillRectERKNS_4RectENS_9colortypeEh+0x8c>)
 801cedc:	ab04      	add	r3, sp, #16
 801cede:	c303      	stmia	r3!, {r0, r1}
 801cee0:	a804      	add	r0, sp, #16
 801cee2:	f7f8 f871 	bl	8014fc8 <_ZN8touchgfx21DisplayTransformation29transformDisplayToFrameBufferERNS_4RectE>
 801cee6:	6820      	ldr	r0, [r4, #0]
 801cee8:	6803      	ldr	r3, [r0, #0]
 801ceea:	6b9b      	ldr	r3, [r3, #56]	; 0x38
 801ceec:	4798      	blx	r3
 801ceee:	2dff      	cmp	r5, #255	; 0xff
 801cef0:	d016      	beq.n	801cf20 <_ZN8touchgfx8LCD16bpp8fillRectERKNS_4RectENS_9colortypeEh+0x60>
 801cef2:	f010 0f08 	tst.w	r0, #8
 801cef6:	6820      	ldr	r0, [r4, #0]
 801cef8:	d015      	beq.n	801cf26 <_ZN8touchgfx8LCD16bpp8fillRectERKNS_4RectENS_9colortypeEh+0x66>
 801cefa:	2400      	movs	r4, #0
 801cefc:	6801      	ldr	r1, [r0, #0]
 801cefe:	f8bd 3012 	ldrh.w	r3, [sp, #18]
 801cf02:	f8bd 2010 	ldrh.w	r2, [sp, #16]
 801cf06:	e9cd 5402 	strd	r5, r4, [sp, #8]
 801cf0a:	f8bd 4016 	ldrh.w	r4, [sp, #22]
 801cf0e:	9401      	str	r4, [sp, #4]
 801cf10:	f8bd 4014 	ldrh.w	r4, [sp, #20]
 801cf14:	9400      	str	r4, [sp, #0]
 801cf16:	6e0c      	ldr	r4, [r1, #96]	; 0x60
 801cf18:	4639      	mov	r1, r7
 801cf1a:	47a0      	blx	r4
 801cf1c:	b007      	add	sp, #28
 801cf1e:	bdf0      	pop	{r4, r5, r6, r7, pc}
 801cf20:	f010 0f02 	tst.w	r0, #2
 801cf24:	e7e7      	b.n	801cef6 <_ZN8touchgfx8LCD16bpp8fillRectERKNS_4RectENS_9colortypeEh+0x36>
 801cf26:	6803      	ldr	r3, [r0, #0]
 801cf28:	6a9b      	ldr	r3, [r3, #40]	; 0x28
 801cf2a:	4798      	blx	r3
 801cf2c:	4b08      	ldr	r3, [pc, #32]	; (801cf50 <_ZN8touchgfx8LCD16bpp8fillRectERKNS_4RectENS_9colortypeEh+0x90>)
 801cf2e:	881a      	ldrh	r2, [r3, #0]
 801cf30:	6833      	ldr	r3, [r6, #0]
 801cf32:	e9cd 7500 	strd	r7, r5, [sp]
 801cf36:	4601      	mov	r1, r0
 801cf38:	6a5d      	ldr	r5, [r3, #36]	; 0x24
 801cf3a:	4630      	mov	r0, r6
 801cf3c:	ab04      	add	r3, sp, #16
 801cf3e:	47a8      	blx	r5
 801cf40:	6820      	ldr	r0, [r4, #0]
 801cf42:	6803      	ldr	r3, [r0, #0]
 801cf44:	6adb      	ldr	r3, [r3, #44]	; 0x2c
 801cf46:	4798      	blx	r3
 801cf48:	e7e8      	b.n	801cf1c <_ZN8touchgfx8LCD16bpp8fillRectERKNS_4RectENS_9colortypeEh+0x5c>
 801cf4a:	bf00      	nop
 801cf4c:	20012f24 	.word	0x20012f24
 801cf50:	20012f1e 	.word	0x20012f1e

0801cf54 <_ZN8touchgfx8LCD16bpp10fillBufferEPhtRKNS_4RectENS_9colortypeEh>:
 801cf54:	e92d 47f0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, lr}
 801cf58:	f89d 7024 	ldrb.w	r7, [sp, #36]	; 0x24
 801cf5c:	9e08      	ldr	r6, [sp, #32]
 801cf5e:	4688      	mov	r8, r1
 801cf60:	4614      	mov	r4, r2
 801cf62:	461d      	mov	r5, r3
 801cf64:	2f00      	cmp	r7, #0
 801cf66:	f000 80a9 	beq.w	801d0bc <_ZN8touchgfx8LCD16bpp10fillBufferEPhtRKNS_4RectENS_9colortypeEh+0x168>
 801cf6a:	4618      	mov	r0, r3
 801cf6c:	f7f3 f911 	bl	8010192 <_ZNK8touchgfx4Rect7isEmptyEv>
 801cf70:	2800      	cmp	r0, #0
 801cf72:	f040 80a3 	bne.w	801d0bc <_ZN8touchgfx8LCD16bpp10fillBufferEPhtRKNS_4RectENS_9colortypeEh+0x168>
 801cf76:	f9b5 1000 	ldrsh.w	r1, [r5]
 801cf7a:	f9b5 3002 	ldrsh.w	r3, [r5, #2]
 801cf7e:	f9b5 0004 	ldrsh.w	r0, [r5, #4]
 801cf82:	f9b5 5006 	ldrsh.w	r5, [r5, #6]
 801cf86:	fb04 1303 	mla	r3, r4, r3, r1
 801cf8a:	eb08 0143 	add.w	r1, r8, r3, lsl #1
 801cf8e:	4365      	muls	r5, r4
 801cf90:	2fff      	cmp	r7, #255	; 0xff
 801cf92:	eba4 0200 	sub.w	r2, r4, r0
 801cf96:	eb01 0545 	add.w	r5, r1, r5, lsl #1
 801cf9a:	ea4f 2816 	mov.w	r8, r6, lsr #8
 801cf9e:	d04a      	beq.n	801d036 <_ZN8touchgfx8LCD16bpp10fillBufferEPhtRKNS_4RectENS_9colortypeEh+0xe2>
 801cfa0:	b2bc      	uxth	r4, r7
 801cfa2:	f1c7 0cff 	rsb	ip, r7, #255	; 0xff
 801cfa6:	f3c6 4e07 	ubfx	lr, r6, #16, #8
 801cfaa:	fa5f f788 	uxtb.w	r7, r8
 801cfae:	b2f3      	uxtb	r3, r6
 801cfb0:	0040      	lsls	r0, r0, #1
 801cfb2:	fb0e fe04 	mul.w	lr, lr, r4
 801cfb6:	4367      	muls	r7, r4
 801cfb8:	4363      	muls	r3, r4
 801cfba:	ea4f 0842 	mov.w	r8, r2, lsl #1
 801cfbe:	fa1f fc8c 	uxth.w	ip, ip
 801cfc2:	42a9      	cmp	r1, r5
 801cfc4:	d27a      	bcs.n	801d0bc <_ZN8touchgfx8LCD16bpp10fillBufferEPhtRKNS_4RectENS_9colortypeEh+0x168>
 801cfc6:	eb01 0900 	add.w	r9, r1, r0
 801cfca:	4549      	cmp	r1, r9
 801cfcc:	d231      	bcs.n	801d032 <_ZN8touchgfx8LCD16bpp10fillBufferEPhtRKNS_4RectENS_9colortypeEh+0xde>
 801cfce:	880a      	ldrh	r2, [r1, #0]
 801cfd0:	1214      	asrs	r4, r2, #8
 801cfd2:	10d6      	asrs	r6, r2, #3
 801cfd4:	f004 04f8 	and.w	r4, r4, #248	; 0xf8
 801cfd8:	00d2      	lsls	r2, r2, #3
 801cfda:	b2d2      	uxtb	r2, r2
 801cfdc:	ea44 1454 	orr.w	r4, r4, r4, lsr #5
 801cfe0:	fb14 f40c 	smulbb	r4, r4, ip
 801cfe4:	ea42 1252 	orr.w	r2, r2, r2, lsr #5
 801cfe8:	4474      	add	r4, lr
 801cfea:	fb12 f20c 	smulbb	r2, r2, ip
 801cfee:	b2a4      	uxth	r4, r4
 801cff0:	f006 06fc 	and.w	r6, r6, #252	; 0xfc
 801cff4:	441a      	add	r2, r3
 801cff6:	b292      	uxth	r2, r2
 801cff8:	f104 0a01 	add.w	sl, r4, #1
 801cffc:	ea46 1696 	orr.w	r6, r6, r6, lsr #6
 801d000:	eb0a 2414 	add.w	r4, sl, r4, lsr #8
 801d004:	fb16 f60c 	smulbb	r6, r6, ip
 801d008:	f102 0a01 	add.w	sl, r2, #1
 801d00c:	443e      	add	r6, r7
 801d00e:	eb0a 2212 	add.w	r2, sl, r2, lsr #8
 801d012:	b2b6      	uxth	r6, r6
 801d014:	f404 4478 	and.w	r4, r4, #63488	; 0xf800
 801d018:	f3c2 22c4 	ubfx	r2, r2, #11, #5
 801d01c:	4322      	orrs	r2, r4
 801d01e:	1c74      	adds	r4, r6, #1
 801d020:	eb04 2616 	add.w	r6, r4, r6, lsr #8
 801d024:	0976      	lsrs	r6, r6, #5
 801d026:	f406 66fc 	and.w	r6, r6, #2016	; 0x7e0
 801d02a:	4332      	orrs	r2, r6
 801d02c:	f821 2b02 	strh.w	r2, [r1], #2
 801d030:	e7cb      	b.n	801cfca <_ZN8touchgfx8LCD16bpp10fillBufferEPhtRKNS_4RectENS_9colortypeEh+0x76>
 801d032:	4441      	add	r1, r8
 801d034:	e7c5      	b.n	801cfc2 <_ZN8touchgfx8LCD16bpp10fillBufferEPhtRKNS_4RectENS_9colortypeEh+0x6e>
 801d036:	4f22      	ldr	r7, [pc, #136]	; (801d0c0 <_ZN8touchgfx8LCD16bpp10fillBufferEPhtRKNS_4RectENS_9colortypeEh+0x16c>)
 801d038:	0973      	lsrs	r3, r6, #5
 801d03a:	ea08 0707 	and.w	r7, r8, r7
 801d03e:	f403 63fc 	and.w	r3, r3, #2016	; 0x7e0
 801d042:	433b      	orrs	r3, r7
 801d044:	f3c6 06c4 	ubfx	r6, r6, #3, #5
 801d048:	4333      	orrs	r3, r6
 801d04a:	07e7      	lsls	r7, r4, #31
 801d04c:	b29b      	uxth	r3, r3
 801d04e:	d50b      	bpl.n	801d068 <_ZN8touchgfx8LCD16bpp10fillBufferEPhtRKNS_4RectENS_9colortypeEh+0x114>
 801d050:	0040      	lsls	r0, r0, #1
 801d052:	0052      	lsls	r2, r2, #1
 801d054:	42a9      	cmp	r1, r5
 801d056:	d231      	bcs.n	801d0bc <_ZN8touchgfx8LCD16bpp10fillBufferEPhtRKNS_4RectENS_9colortypeEh+0x168>
 801d058:	180c      	adds	r4, r1, r0
 801d05a:	42a1      	cmp	r1, r4
 801d05c:	d202      	bcs.n	801d064 <_ZN8touchgfx8LCD16bpp10fillBufferEPhtRKNS_4RectENS_9colortypeEh+0x110>
 801d05e:	f821 3b02 	strh.w	r3, [r1], #2
 801d062:	e7fa      	b.n	801d05a <_ZN8touchgfx8LCD16bpp10fillBufferEPhtRKNS_4RectENS_9colortypeEh+0x106>
 801d064:	4411      	add	r1, r2
 801d066:	e7f5      	b.n	801d054 <_ZN8touchgfx8LCD16bpp10fillBufferEPhtRKNS_4RectENS_9colortypeEh+0x100>
 801d068:	078e      	lsls	r6, r1, #30
 801d06a:	d008      	beq.n	801d07e <_ZN8touchgfx8LCD16bpp10fillBufferEPhtRKNS_4RectENS_9colortypeEh+0x12a>
 801d06c:	0066      	lsls	r6, r4, #1
 801d06e:	460a      	mov	r2, r1
 801d070:	42aa      	cmp	r2, r5
 801d072:	d202      	bcs.n	801d07a <_ZN8touchgfx8LCD16bpp10fillBufferEPhtRKNS_4RectENS_9colortypeEh+0x126>
 801d074:	8013      	strh	r3, [r2, #0]
 801d076:	4432      	add	r2, r6
 801d078:	e7fa      	b.n	801d070 <_ZN8touchgfx8LCD16bpp10fillBufferEPhtRKNS_4RectENS_9colortypeEh+0x11c>
 801d07a:	3102      	adds	r1, #2
 801d07c:	3801      	subs	r0, #1
 801d07e:	07c2      	lsls	r2, r0, #31
 801d080:	d50b      	bpl.n	801d09a <_ZN8touchgfx8LCD16bpp10fillBufferEPhtRKNS_4RectENS_9colortypeEh+0x146>
 801d082:	f100 4200 	add.w	r2, r0, #2147483648	; 0x80000000
 801d086:	3a01      	subs	r2, #1
 801d088:	eb01 0242 	add.w	r2, r1, r2, lsl #1
 801d08c:	0066      	lsls	r6, r4, #1
 801d08e:	42aa      	cmp	r2, r5
 801d090:	d202      	bcs.n	801d098 <_ZN8touchgfx8LCD16bpp10fillBufferEPhtRKNS_4RectENS_9colortypeEh+0x144>
 801d092:	8013      	strh	r3, [r2, #0]
 801d094:	4432      	add	r2, r6
 801d096:	e7fa      	b.n	801d08e <_ZN8touchgfx8LCD16bpp10fillBufferEPhtRKNS_4RectENS_9colortypeEh+0x13a>
 801d098:	3801      	subs	r0, #1
 801d09a:	b178      	cbz	r0, 801d0bc <_ZN8touchgfx8LCD16bpp10fillBufferEPhtRKNS_4RectENS_9colortypeEh+0x168>
 801d09c:	1040      	asrs	r0, r0, #1
 801d09e:	ea43 4303 	orr.w	r3, r3, r3, lsl #16
 801d0a2:	0080      	lsls	r0, r0, #2
 801d0a4:	0064      	lsls	r4, r4, #1
 801d0a6:	42a9      	cmp	r1, r5
 801d0a8:	d208      	bcs.n	801d0bc <_ZN8touchgfx8LCD16bpp10fillBufferEPhtRKNS_4RectENS_9colortypeEh+0x168>
 801d0aa:	180e      	adds	r6, r1, r0
 801d0ac:	460a      	mov	r2, r1
 801d0ae:	42b2      	cmp	r2, r6
 801d0b0:	d202      	bcs.n	801d0b8 <_ZN8touchgfx8LCD16bpp10fillBufferEPhtRKNS_4RectENS_9colortypeEh+0x164>
 801d0b2:	f842 3b04 	str.w	r3, [r2], #4
 801d0b6:	e7fa      	b.n	801d0ae <_ZN8touchgfx8LCD16bpp10fillBufferEPhtRKNS_4RectENS_9colortypeEh+0x15a>
 801d0b8:	4421      	add	r1, r4
 801d0ba:	e7f4      	b.n	801d0a6 <_ZN8touchgfx8LCD16bpp10fillBufferEPhtRKNS_4RectENS_9colortypeEh+0x152>
 801d0bc:	e8bd 87f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, pc}
 801d0c0:	00fff800 	.word	0x00fff800

0801d0c4 <_ZN8touchgfx8LCD16bppC1Ev>:
 801d0c4:	2200      	movs	r2, #0
 801d0c6:	4912      	ldr	r1, [pc, #72]	; (801d110 <_ZN8touchgfx8LCD16bppC1Ev+0x4c>)
 801d0c8:	6042      	str	r2, [r0, #4]
 801d0ca:	6001      	str	r1, [r0, #0]
 801d0cc:	e9c0 2202 	strd	r2, r2, [r0, #8]
 801d0d0:	e9c0 2204 	strd	r2, r2, [r0, #16]
 801d0d4:	e9c0 2206 	strd	r2, r2, [r0, #24]
 801d0d8:	e9c0 2208 	strd	r2, r2, [r0, #32]
 801d0dc:	e9c0 220a 	strd	r2, r2, [r0, #40]	; 0x28
 801d0e0:	e9c0 220c 	strd	r2, r2, [r0, #48]	; 0x30
 801d0e4:	e9c0 220e 	strd	r2, r2, [r0, #56]	; 0x38
 801d0e8:	e9c0 2210 	strd	r2, r2, [r0, #64]	; 0x40
 801d0ec:	e9c0 2212 	strd	r2, r2, [r0, #72]	; 0x48
 801d0f0:	e9c0 2214 	strd	r2, r2, [r0, #80]	; 0x50
 801d0f4:	e9c0 2216 	strd	r2, r2, [r0, #88]	; 0x58
 801d0f8:	e9c0 2218 	strd	r2, r2, [r0, #96]	; 0x60
 801d0fc:	e9c0 221a 	strd	r2, r2, [r0, #104]	; 0x68
 801d100:	e9c0 221c 	strd	r2, r2, [r0, #112]	; 0x70
 801d104:	e9c0 221e 	strd	r2, r2, [r0, #120]	; 0x78
 801d108:	f8c0 2080 	str.w	r2, [r0, #128]	; 0x80
 801d10c:	4770      	bx	lr
 801d10e:	bf00      	nop
 801d110:	0802ec08 	.word	0x0802ec08

0801d114 <_ZN8touchgfx8LCD16bpp16blitCopyARGB8888EPKmRKNS_4RectES5_h>:
 801d114:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 801d118:	460d      	mov	r5, r1
 801d11a:	b08d      	sub	sp, #52	; 0x34
 801d11c:	4604      	mov	r4, r0
 801d11e:	6808      	ldr	r0, [r1, #0]
 801d120:	6849      	ldr	r1, [r1, #4]
 801d122:	4699      	mov	r9, r3
 801d124:	ab08      	add	r3, sp, #32
 801d126:	c303      	stmia	r3!, {r0, r1}
 801d128:	6810      	ldr	r0, [r2, #0]
 801d12a:	6851      	ldr	r1, [r2, #4]
 801d12c:	ab0a      	add	r3, sp, #40	; 0x28
 801d12e:	c303      	stmia	r3!, {r0, r1}
 801d130:	a808      	add	r0, sp, #32
 801d132:	f7f7 ff49 	bl	8014fc8 <_ZN8touchgfx21DisplayTransformation29transformDisplayToFrameBufferERNS_4RectE>
 801d136:	4629      	mov	r1, r5
 801d138:	a80a      	add	r0, sp, #40	; 0x28
 801d13a:	f7f7 ff89 	bl	8015050 <_ZN8touchgfx21DisplayTransformation29transformDisplayToFrameBufferERNS_4RectERKS1_>
 801d13e:	f9bd 2028 	ldrsh.w	r2, [sp, #40]	; 0x28
 801d142:	f9bd 302a 	ldrsh.w	r3, [sp, #42]	; 0x2a
 801d146:	f8bd 1024 	ldrh.w	r1, [sp, #36]	; 0x24
 801d14a:	4d63      	ldr	r5, [pc, #396]	; (801d2d8 <_ZN8touchgfx8LCD16bpp16blitCopyARGB8888EPKmRKNS_4RectES5_h+0x1c4>)
 801d14c:	f9bd 802c 	ldrsh.w	r8, [sp, #44]	; 0x2c
 801d150:	6828      	ldr	r0, [r5, #0]
 801d152:	f9bd 602e 	ldrsh.w	r6, [sp, #46]	; 0x2e
 801d156:	fb11 2103 	smlabb	r1, r1, r3, r2
 801d15a:	eb04 0481 	add.w	r4, r4, r1, lsl #2
 801d15e:	f8bd 1020 	ldrh.w	r1, [sp, #32]
 801d162:	440a      	add	r2, r1
 801d164:	f8ad 2028 	strh.w	r2, [sp, #40]	; 0x28
 801d168:	f8bd 2022 	ldrh.w	r2, [sp, #34]	; 0x22
 801d16c:	4413      	add	r3, r2
 801d16e:	f8ad 302a 	strh.w	r3, [sp, #42]	; 0x2a
 801d172:	6803      	ldr	r3, [r0, #0]
 801d174:	6b9b      	ldr	r3, [r3, #56]	; 0x38
 801d176:	4798      	blx	r3
 801d178:	f1b9 0fff 	cmp.w	r9, #255	; 0xff
 801d17c:	d119      	bne.n	801d1b2 <_ZN8touchgfx8LCD16bpp16blitCopyARGB8888EPKmRKNS_4RectES5_h+0x9e>
 801d17e:	f010 0f20 	tst.w	r0, #32
 801d182:	6828      	ldr	r0, [r5, #0]
 801d184:	d018      	beq.n	801d1b8 <_ZN8touchgfx8LCD16bpp16blitCopyARGB8888EPKmRKNS_4RectES5_h+0xa4>
 801d186:	2500      	movs	r5, #0
 801d188:	6801      	ldr	r1, [r0, #0]
 801d18a:	f8bd 302a 	ldrh.w	r3, [sp, #42]	; 0x2a
 801d18e:	f8bd 2028 	ldrh.w	r2, [sp, #40]	; 0x28
 801d192:	e9cd 9503 	strd	r9, r5, [sp, #12]
 801d196:	f8bd 5024 	ldrh.w	r5, [sp, #36]	; 0x24
 801d19a:	9502      	str	r5, [sp, #8]
 801d19c:	b2b6      	uxth	r6, r6
 801d19e:	fa1f f588 	uxth.w	r5, r8
 801d1a2:	9601      	str	r6, [sp, #4]
 801d1a4:	9500      	str	r5, [sp, #0]
 801d1a6:	6d0d      	ldr	r5, [r1, #80]	; 0x50
 801d1a8:	4621      	mov	r1, r4
 801d1aa:	47a8      	blx	r5
 801d1ac:	b00d      	add	sp, #52	; 0x34
 801d1ae:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
 801d1b2:	f010 0f40 	tst.w	r0, #64	; 0x40
 801d1b6:	e7e4      	b.n	801d182 <_ZN8touchgfx8LCD16bpp16blitCopyARGB8888EPKmRKNS_4RectES5_h+0x6e>
 801d1b8:	6803      	ldr	r3, [r0, #0]
 801d1ba:	6a9b      	ldr	r3, [r3, #40]	; 0x28
 801d1bc:	4798      	blx	r3
 801d1be:	4947      	ldr	r1, [pc, #284]	; (801d2dc <_ZN8touchgfx8LCD16bpp16blitCopyARGB8888EPKmRKNS_4RectES5_h+0x1c8>)
 801d1c0:	f9bd 202a 	ldrsh.w	r2, [sp, #42]	; 0x2a
 801d1c4:	880b      	ldrh	r3, [r1, #0]
 801d1c6:	f9bd 5028 	ldrsh.w	r5, [sp, #40]	; 0x28
 801d1ca:	fb03 5202 	mla	r2, r3, r2, r5
 801d1ce:	eb00 0042 	add.w	r0, r0, r2, lsl #1
 801d1d2:	4373      	muls	r3, r6
 801d1d4:	eb00 0343 	add.w	r3, r0, r3, lsl #1
 801d1d8:	9307      	str	r3, [sp, #28]
 801d1da:	ea4f 0348 	mov.w	r3, r8, lsl #1
 801d1de:	9306      	str	r3, [sp, #24]
 801d1e0:	468a      	mov	sl, r1
 801d1e2:	9b07      	ldr	r3, [sp, #28]
 801d1e4:	4298      	cmp	r0, r3
 801d1e6:	d270      	bcs.n	801d2ca <_ZN8touchgfx8LCD16bpp16blitCopyARGB8888EPKmRKNS_4RectES5_h+0x1b6>
 801d1e8:	9b06      	ldr	r3, [sp, #24]
 801d1ea:	4621      	mov	r1, r4
 801d1ec:	eb00 0b03 	add.w	fp, r0, r3
 801d1f0:	4558      	cmp	r0, fp
 801d1f2:	d25d      	bcs.n	801d2b0 <_ZN8touchgfx8LCD16bpp16blitCopyARGB8888EPKmRKNS_4RectES5_h+0x19c>
 801d1f4:	f851 4b04 	ldr.w	r4, [r1], #4
 801d1f8:	0e23      	lsrs	r3, r4, #24
 801d1fa:	d014      	beq.n	801d226 <_ZN8touchgfx8LCD16bpp16blitCopyARGB8888EPKmRKNS_4RectES5_h+0x112>
 801d1fc:	2bff      	cmp	r3, #255	; 0xff
 801d1fe:	ea4f 2c14 	mov.w	ip, r4, lsr #8
 801d202:	d112      	bne.n	801d22a <_ZN8touchgfx8LCD16bpp16blitCopyARGB8888EPKmRKNS_4RectES5_h+0x116>
 801d204:	f1b9 0fff 	cmp.w	r9, #255	; 0xff
 801d208:	d10f      	bne.n	801d22a <_ZN8touchgfx8LCD16bpp16blitCopyARGB8888EPKmRKNS_4RectES5_h+0x116>
 801d20a:	0963      	lsrs	r3, r4, #5
 801d20c:	f42c 6cff 	bic.w	ip, ip, #2040	; 0x7f8
 801d210:	f403 63fc 	and.w	r3, r3, #2016	; 0x7e0
 801d214:	f02c 0c07 	bic.w	ip, ip, #7
 801d218:	ea43 0c0c 	orr.w	ip, r3, ip
 801d21c:	f3c4 04c4 	ubfx	r4, r4, #3, #5
 801d220:	ea4c 0404 	orr.w	r4, ip, r4
 801d224:	8004      	strh	r4, [r0, #0]
 801d226:	3002      	adds	r0, #2
 801d228:	e7e2      	b.n	801d1f0 <_ZN8touchgfx8LCD16bpp16blitCopyARGB8888EPKmRKNS_4RectES5_h+0xdc>
 801d22a:	fb09 f303 	mul.w	r3, r9, r3
 801d22e:	8807      	ldrh	r7, [r0, #0]
 801d230:	1c5a      	adds	r2, r3, #1
 801d232:	eb02 2223 	add.w	r2, r2, r3, asr #8
 801d236:	1212      	asrs	r2, r2, #8
 801d238:	123e      	asrs	r6, r7, #8
 801d23a:	b293      	uxth	r3, r2
 801d23c:	f3c4 4e07 	ubfx	lr, r4, #16, #8
 801d240:	f006 06f8 	and.w	r6, r6, #248	; 0xf8
 801d244:	43d2      	mvns	r2, r2
 801d246:	b2d2      	uxtb	r2, r2
 801d248:	10fd      	asrs	r5, r7, #3
 801d24a:	fb1e fe03 	smulbb	lr, lr, r3
 801d24e:	00ff      	lsls	r7, r7, #3
 801d250:	ea46 1656 	orr.w	r6, r6, r6, lsr #5
 801d254:	fb06 e602 	mla	r6, r6, r2, lr
 801d258:	f005 05fc 	and.w	r5, r5, #252	; 0xfc
 801d25c:	b2ff      	uxtb	r7, r7
 801d25e:	fa5f fc8c 	uxtb.w	ip, ip
 801d262:	b2e4      	uxtb	r4, r4
 801d264:	b2b6      	uxth	r6, r6
 801d266:	fb1c fc03 	smulbb	ip, ip, r3
 801d26a:	ea45 1595 	orr.w	r5, r5, r5, lsr #6
 801d26e:	ea47 1757 	orr.w	r7, r7, r7, lsr #5
 801d272:	fb14 f403 	smulbb	r4, r4, r3
 801d276:	fb05 c502 	mla	r5, r5, r2, ip
 801d27a:	f106 0e01 	add.w	lr, r6, #1
 801d27e:	fb07 4702 	mla	r7, r7, r2, r4
 801d282:	b2ad      	uxth	r5, r5
 801d284:	b2bf      	uxth	r7, r7
 801d286:	eb0e 2616 	add.w	r6, lr, r6, lsr #8
 801d28a:	f406 4e78 	and.w	lr, r6, #63488	; 0xf800
 801d28e:	f105 0c01 	add.w	ip, r5, #1
 801d292:	1c7e      	adds	r6, r7, #1
 801d294:	eb06 2617 	add.w	r6, r6, r7, lsr #8
 801d298:	eb0c 2515 	add.w	r5, ip, r5, lsr #8
 801d29c:	f3c6 26c4 	ubfx	r6, r6, #11, #5
 801d2a0:	096d      	lsrs	r5, r5, #5
 801d2a2:	ea46 060e 	orr.w	r6, r6, lr
 801d2a6:	f405 65fc 	and.w	r5, r5, #2016	; 0x7e0
 801d2aa:	432e      	orrs	r6, r5
 801d2ac:	8006      	strh	r6, [r0, #0]
 801d2ae:	e7ba      	b.n	801d226 <_ZN8touchgfx8LCD16bpp16blitCopyARGB8888EPKmRKNS_4RectES5_h+0x112>
 801d2b0:	f8ba 3000 	ldrh.w	r3, [sl]
 801d2b4:	f9bd 4024 	ldrsh.w	r4, [sp, #36]	; 0x24
 801d2b8:	eba3 0308 	sub.w	r3, r3, r8
 801d2bc:	eba4 0408 	sub.w	r4, r4, r8
 801d2c0:	eb00 0043 	add.w	r0, r0, r3, lsl #1
 801d2c4:	eb01 0484 	add.w	r4, r1, r4, lsl #2
 801d2c8:	e78b      	b.n	801d1e2 <_ZN8touchgfx8LCD16bpp16blitCopyARGB8888EPKmRKNS_4RectES5_h+0xce>
 801d2ca:	4b03      	ldr	r3, [pc, #12]	; (801d2d8 <_ZN8touchgfx8LCD16bpp16blitCopyARGB8888EPKmRKNS_4RectES5_h+0x1c4>)
 801d2cc:	6818      	ldr	r0, [r3, #0]
 801d2ce:	6803      	ldr	r3, [r0, #0]
 801d2d0:	6adb      	ldr	r3, [r3, #44]	; 0x2c
 801d2d2:	4798      	blx	r3
 801d2d4:	e76a      	b.n	801d1ac <_ZN8touchgfx8LCD16bpp16blitCopyARGB8888EPKmRKNS_4RectES5_h+0x98>
 801d2d6:	bf00      	nop
 801d2d8:	20012f24 	.word	0x20012f24
 801d2dc:	20012f1e 	.word	0x20012f1e

0801d2e0 <_ZNK8touchgfx8LCD16bpp21blitCopyARGB8888SolidEPKmRKNS_4RectES5_>:
 801d2e0:	e92d 43f0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, lr}
 801d2e4:	460c      	mov	r4, r1
 801d2e6:	b085      	sub	sp, #20
 801d2e8:	6810      	ldr	r0, [r2, #0]
 801d2ea:	6851      	ldr	r1, [r2, #4]
 801d2ec:	466d      	mov	r5, sp
 801d2ee:	c503      	stmia	r5!, {r0, r1}
 801d2f0:	6818      	ldr	r0, [r3, #0]
 801d2f2:	6859      	ldr	r1, [r3, #4]
 801d2f4:	4616      	mov	r6, r2
 801d2f6:	c503      	stmia	r5!, {r0, r1}
 801d2f8:	4668      	mov	r0, sp
 801d2fa:	f7f7 fe65 	bl	8014fc8 <_ZN8touchgfx21DisplayTransformation29transformDisplayToFrameBufferERNS_4RectE>
 801d2fe:	4631      	mov	r1, r6
 801d300:	a802      	add	r0, sp, #8
 801d302:	f7f7 fea5 	bl	8015050 <_ZN8touchgfx21DisplayTransformation29transformDisplayToFrameBufferERNS_4RectERKS1_>
 801d306:	f9bd 2008 	ldrsh.w	r2, [sp, #8]
 801d30a:	f9bd 300a 	ldrsh.w	r3, [sp, #10]
 801d30e:	f8bd 1004 	ldrh.w	r1, [sp, #4]
 801d312:	4d28      	ldr	r5, [pc, #160]	; (801d3b4 <_ZNK8touchgfx8LCD16bpp21blitCopyARGB8888SolidEPKmRKNS_4RectES5_+0xd4>)
 801d314:	4e28      	ldr	r6, [pc, #160]	; (801d3b8 <_ZNK8touchgfx8LCD16bpp21blitCopyARGB8888SolidEPKmRKNS_4RectES5_+0xd8>)
 801d316:	6828      	ldr	r0, [r5, #0]
 801d318:	f9bd 700c 	ldrsh.w	r7, [sp, #12]
 801d31c:	f9bd 800e 	ldrsh.w	r8, [sp, #14]
 801d320:	fb11 2103 	smlabb	r1, r1, r3, r2
 801d324:	eb04 0481 	add.w	r4, r4, r1, lsl #2
 801d328:	f8bd 1000 	ldrh.w	r1, [sp]
 801d32c:	440a      	add	r2, r1
 801d32e:	f8ad 2008 	strh.w	r2, [sp, #8]
 801d332:	f8bd 2002 	ldrh.w	r2, [sp, #2]
 801d336:	4413      	add	r3, r2
 801d338:	f8ad 300a 	strh.w	r3, [sp, #10]
 801d33c:	6803      	ldr	r3, [r0, #0]
 801d33e:	6a9b      	ldr	r3, [r3, #40]	; 0x28
 801d340:	4798      	blx	r3
 801d342:	8833      	ldrh	r3, [r6, #0]
 801d344:	f9bd 200a 	ldrsh.w	r2, [sp, #10]
 801d348:	f9bd 1008 	ldrsh.w	r1, [sp, #8]
 801d34c:	f8df e06c 	ldr.w	lr, [pc, #108]	; 801d3bc <_ZNK8touchgfx8LCD16bpp21blitCopyARGB8888SolidEPKmRKNS_4RectES5_+0xdc>
 801d350:	fb03 1202 	mla	r2, r3, r2, r1
 801d354:	eb00 0042 	add.w	r0, r0, r2, lsl #1
 801d358:	fb08 f303 	mul.w	r3, r8, r3
 801d35c:	eb00 0343 	add.w	r3, r0, r3, lsl #1
 801d360:	ea4f 0c47 	mov.w	ip, r7, lsl #1
 801d364:	4298      	cmp	r0, r3
 801d366:	d21d      	bcs.n	801d3a4 <_ZNK8touchgfx8LCD16bpp21blitCopyARGB8888SolidEPKmRKNS_4RectES5_+0xc4>
 801d368:	eb00 080c 	add.w	r8, r0, ip
 801d36c:	4540      	cmp	r0, r8
 801d36e:	d20f      	bcs.n	801d390 <_ZNK8touchgfx8LCD16bpp21blitCopyARGB8888SolidEPKmRKNS_4RectES5_+0xb0>
 801d370:	f854 1b04 	ldr.w	r1, [r4], #4
 801d374:	ea4f 1951 	mov.w	r9, r1, lsr #5
 801d378:	ea0e 2211 	and.w	r2, lr, r1, lsr #8
 801d37c:	f409 69fc 	and.w	r9, r9, #2016	; 0x7e0
 801d380:	ea42 0209 	orr.w	r2, r2, r9
 801d384:	f3c1 01c4 	ubfx	r1, r1, #3, #5
 801d388:	430a      	orrs	r2, r1
 801d38a:	f820 2b02 	strh.w	r2, [r0], #2
 801d38e:	e7ed      	b.n	801d36c <_ZNK8touchgfx8LCD16bpp21blitCopyARGB8888SolidEPKmRKNS_4RectES5_+0x8c>
 801d390:	8832      	ldrh	r2, [r6, #0]
 801d392:	1bd2      	subs	r2, r2, r7
 801d394:	eb00 0042 	add.w	r0, r0, r2, lsl #1
 801d398:	f9bd 2004 	ldrsh.w	r2, [sp, #4]
 801d39c:	1bd2      	subs	r2, r2, r7
 801d39e:	eb04 0482 	add.w	r4, r4, r2, lsl #2
 801d3a2:	e7df      	b.n	801d364 <_ZNK8touchgfx8LCD16bpp21blitCopyARGB8888SolidEPKmRKNS_4RectES5_+0x84>
 801d3a4:	6828      	ldr	r0, [r5, #0]
 801d3a6:	6803      	ldr	r3, [r0, #0]
 801d3a8:	6adb      	ldr	r3, [r3, #44]	; 0x2c
 801d3aa:	4798      	blx	r3
 801d3ac:	b005      	add	sp, #20
 801d3ae:	e8bd 83f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, pc}
 801d3b2:	bf00      	nop
 801d3b4:	20012f24 	.word	0x20012f24
 801d3b8:	20012f1e 	.word	0x20012f1e
 801d3bc:	fffff800 	.word	0xfffff800

0801d3c0 <_ZN8touchgfx8LCD16bpp14blitCopyRGB888EPKhRKNS_4RectES5_h>:
 801d3c0:	e92d 47f0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, lr}
 801d3c4:	460e      	mov	r6, r1
 801d3c6:	b08e      	sub	sp, #56	; 0x38
 801d3c8:	4604      	mov	r4, r0
 801d3ca:	6808      	ldr	r0, [r1, #0]
 801d3cc:	6849      	ldr	r1, [r1, #4]
 801d3ce:	f8df 81d8 	ldr.w	r8, [pc, #472]	; 801d5a8 <_ZN8touchgfx8LCD16bpp14blitCopyRGB888EPKhRKNS_4RectES5_h+0x1e8>
 801d3d2:	f8df 91d8 	ldr.w	r9, [pc, #472]	; 801d5ac <_ZN8touchgfx8LCD16bpp14blitCopyRGB888EPKhRKNS_4RectES5_h+0x1ec>
 801d3d6:	461d      	mov	r5, r3
 801d3d8:	ab0a      	add	r3, sp, #40	; 0x28
 801d3da:	c303      	stmia	r3!, {r0, r1}
 801d3dc:	6810      	ldr	r0, [r2, #0]
 801d3de:	6851      	ldr	r1, [r2, #4]
 801d3e0:	ab0c      	add	r3, sp, #48	; 0x30
 801d3e2:	c303      	stmia	r3!, {r0, r1}
 801d3e4:	a80a      	add	r0, sp, #40	; 0x28
 801d3e6:	f7f7 fdef 	bl	8014fc8 <_ZN8touchgfx21DisplayTransformation29transformDisplayToFrameBufferERNS_4RectE>
 801d3ea:	4631      	mov	r1, r6
 801d3ec:	a80c      	add	r0, sp, #48	; 0x30
 801d3ee:	f7f7 fe2f 	bl	8015050 <_ZN8touchgfx21DisplayTransformation29transformDisplayToFrameBufferERNS_4RectERKS1_>
 801d3f2:	f9bd 2030 	ldrsh.w	r2, [sp, #48]	; 0x30
 801d3f6:	f9bd 3032 	ldrsh.w	r3, [sp, #50]	; 0x32
 801d3fa:	f8bd 102c 	ldrh.w	r1, [sp, #44]	; 0x2c
 801d3fe:	f8d8 0000 	ldr.w	r0, [r8]
 801d402:	f9bd 7034 	ldrsh.w	r7, [sp, #52]	; 0x34
 801d406:	f9bd 6036 	ldrsh.w	r6, [sp, #54]	; 0x36
 801d40a:	fb11 2103 	smlabb	r1, r1, r3, r2
 801d40e:	eb01 0141 	add.w	r1, r1, r1, lsl #1
 801d412:	440c      	add	r4, r1
 801d414:	f8bd 1028 	ldrh.w	r1, [sp, #40]	; 0x28
 801d418:	440a      	add	r2, r1
 801d41a:	f8ad 2030 	strh.w	r2, [sp, #48]	; 0x30
 801d41e:	f8bd 202a 	ldrh.w	r2, [sp, #42]	; 0x2a
 801d422:	4413      	add	r3, r2
 801d424:	f8ad 3032 	strh.w	r3, [sp, #50]	; 0x32
 801d428:	6803      	ldr	r3, [r0, #0]
 801d42a:	6b9b      	ldr	r3, [r3, #56]	; 0x38
 801d42c:	4798      	blx	r3
 801d42e:	2dff      	cmp	r5, #255	; 0xff
 801d430:	d124      	bne.n	801d47c <_ZN8touchgfx8LCD16bpp14blitCopyRGB888EPKhRKNS_4RectES5_h+0xbc>
 801d432:	f010 0f01 	tst.w	r0, #1
 801d436:	f8d8 0000 	ldr.w	r0, [r8]
 801d43a:	d022      	beq.n	801d482 <_ZN8touchgfx8LCD16bpp14blitCopyRGB888EPKhRKNS_4RectES5_h+0xc2>
 801d43c:	2100      	movs	r1, #0
 801d43e:	f8d0 c000 	ldr.w	ip, [r0]
 801d442:	f8bd 3032 	ldrh.w	r3, [sp, #50]	; 0x32
 801d446:	f8bd 2030 	ldrh.w	r2, [sp, #48]	; 0x30
 801d44a:	e9cd 1107 	strd	r1, r1, [sp, #28]
 801d44e:	f04f 0e01 	mov.w	lr, #1
 801d452:	f8cd e018 	str.w	lr, [sp, #24]
 801d456:	f8b9 e000 	ldrh.w	lr, [r9]
 801d45a:	9503      	str	r5, [sp, #12]
 801d45c:	e9cd 1e04 	strd	r1, lr, [sp, #16]
 801d460:	b2b6      	uxth	r6, r6
 801d462:	f8bd 102c 	ldrh.w	r1, [sp, #44]	; 0x2c
 801d466:	9102      	str	r1, [sp, #8]
 801d468:	b2bf      	uxth	r7, r7
 801d46a:	9601      	str	r6, [sp, #4]
 801d46c:	9700      	str	r7, [sp, #0]
 801d46e:	f8dc 5040 	ldr.w	r5, [ip, #64]	; 0x40
 801d472:	4621      	mov	r1, r4
 801d474:	47a8      	blx	r5
 801d476:	b00e      	add	sp, #56	; 0x38
 801d478:	e8bd 87f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, pc}
 801d47c:	f010 0f04 	tst.w	r0, #4
 801d480:	e7d9      	b.n	801d436 <_ZN8touchgfx8LCD16bpp14blitCopyRGB888EPKhRKNS_4RectES5_h+0x76>
 801d482:	6803      	ldr	r3, [r0, #0]
 801d484:	6a9b      	ldr	r3, [r3, #40]	; 0x28
 801d486:	4798      	blx	r3
 801d488:	f8b9 3000 	ldrh.w	r3, [r9]
 801d48c:	f9bd 2032 	ldrsh.w	r2, [sp, #50]	; 0x32
 801d490:	f9bd 1030 	ldrsh.w	r1, [sp, #48]	; 0x30
 801d494:	f9bd c02c 	ldrsh.w	ip, [sp, #44]	; 0x2c
 801d498:	fb03 1202 	mla	r2, r3, r2, r1
 801d49c:	ebac 0c07 	sub.w	ip, ip, r7
 801d4a0:	eb00 0042 	add.w	r0, r0, r2, lsl #1
 801d4a4:	435e      	muls	r6, r3
 801d4a6:	ea4f 0e47 	mov.w	lr, r7, lsl #1
 801d4aa:	2dff      	cmp	r5, #255	; 0xff
 801d4ac:	eba3 0707 	sub.w	r7, r3, r7
 801d4b0:	eb00 0646 	add.w	r6, r0, r6, lsl #1
 801d4b4:	eb0c 0c4c 	add.w	ip, ip, ip, lsl #1
 801d4b8:	ea4f 0747 	mov.w	r7, r7, lsl #1
 801d4bc:	d049      	beq.n	801d552 <_ZN8touchgfx8LCD16bpp14blitCopyRGB888EPKhRKNS_4RectES5_h+0x192>
 801d4be:	43eb      	mvns	r3, r5
 801d4c0:	fa1f f985 	uxth.w	r9, r5
 801d4c4:	b2db      	uxtb	r3, r3
 801d4c6:	42b0      	cmp	r0, r6
 801d4c8:	d266      	bcs.n	801d598 <_ZN8touchgfx8LCD16bpp14blitCopyRGB888EPKhRKNS_4RectES5_h+0x1d8>
 801d4ca:	eb00 0a0e 	add.w	sl, r0, lr
 801d4ce:	4550      	cmp	r0, sl
 801d4d0:	4621      	mov	r1, r4
 801d4d2:	f104 0403 	add.w	r4, r4, #3
 801d4d6:	d25b      	bcs.n	801d590 <_ZN8touchgfx8LCD16bpp14blitCopyRGB888EPKhRKNS_4RectES5_h+0x1d0>
 801d4d8:	8802      	ldrh	r2, [r0, #0]
 801d4da:	f814 1c01 	ldrb.w	r1, [r4, #-1]
 801d4de:	ea4f 2822 	mov.w	r8, r2, asr #8
 801d4e2:	f008 08f8 	and.w	r8, r8, #248	; 0xf8
 801d4e6:	fb11 f109 	smulbb	r1, r1, r9
 801d4ea:	ea48 1858 	orr.w	r8, r8, r8, lsr #5
 801d4ee:	10d5      	asrs	r5, r2, #3
 801d4f0:	fb08 1803 	mla	r8, r8, r3, r1
 801d4f4:	f814 1c02 	ldrb.w	r1, [r4, #-2]
 801d4f8:	f005 05fc 	and.w	r5, r5, #252	; 0xfc
 801d4fc:	fb11 f109 	smulbb	r1, r1, r9
 801d500:	ea45 1595 	orr.w	r5, r5, r5, lsr #6
 801d504:	fb05 1503 	mla	r5, r5, r3, r1
 801d508:	00d2      	lsls	r2, r2, #3
 801d50a:	f814 1c03 	ldrb.w	r1, [r4, #-3]
 801d50e:	b2d2      	uxtb	r2, r2
 801d510:	fb11 f109 	smulbb	r1, r1, r9
 801d514:	ea42 1252 	orr.w	r2, r2, r2, lsr #5
 801d518:	fa1f f888 	uxth.w	r8, r8
 801d51c:	fb02 1203 	mla	r2, r2, r3, r1
 801d520:	b292      	uxth	r2, r2
 801d522:	f108 0101 	add.w	r1, r8, #1
 801d526:	b2ad      	uxth	r5, r5
 801d528:	eb01 2818 	add.w	r8, r1, r8, lsr #8
 801d52c:	1c51      	adds	r1, r2, #1
 801d52e:	eb01 2212 	add.w	r2, r1, r2, lsr #8
 801d532:	1c69      	adds	r1, r5, #1
 801d534:	eb01 2515 	add.w	r5, r1, r5, lsr #8
 801d538:	f408 4878 	and.w	r8, r8, #63488	; 0xf800
 801d53c:	f3c2 22c4 	ubfx	r2, r2, #11, #5
 801d540:	096d      	lsrs	r5, r5, #5
 801d542:	ea42 0208 	orr.w	r2, r2, r8
 801d546:	f405 65fc 	and.w	r5, r5, #2016	; 0x7e0
 801d54a:	432a      	orrs	r2, r5
 801d54c:	f820 2b02 	strh.w	r2, [r0], #2
 801d550:	e7bd      	b.n	801d4ce <_ZN8touchgfx8LCD16bpp14blitCopyRGB888EPKhRKNS_4RectES5_h+0x10e>
 801d552:	4a14      	ldr	r2, [pc, #80]	; (801d5a4 <_ZN8touchgfx8LCD16bpp14blitCopyRGB888EPKhRKNS_4RectES5_h+0x1e4>)
 801d554:	42b0      	cmp	r0, r6
 801d556:	d21f      	bcs.n	801d598 <_ZN8touchgfx8LCD16bpp14blitCopyRGB888EPKhRKNS_4RectES5_h+0x1d8>
 801d558:	eb00 050e 	add.w	r5, r0, lr
 801d55c:	42a8      	cmp	r0, r5
 801d55e:	4621      	mov	r1, r4
 801d560:	f104 0403 	add.w	r4, r4, #3
 801d564:	d210      	bcs.n	801d588 <_ZN8touchgfx8LCD16bpp14blitCopyRGB888EPKhRKNS_4RectES5_h+0x1c8>
 801d566:	f814 3c02 	ldrb.w	r3, [r4, #-2]
 801d56a:	f814 1c01 	ldrb.w	r1, [r4, #-1]
 801d56e:	00db      	lsls	r3, r3, #3
 801d570:	ea02 2101 	and.w	r1, r2, r1, lsl #8
 801d574:	f403 63fc 	and.w	r3, r3, #2016	; 0x7e0
 801d578:	430b      	orrs	r3, r1
 801d57a:	f814 1c03 	ldrb.w	r1, [r4, #-3]
 801d57e:	ea43 03d1 	orr.w	r3, r3, r1, lsr #3
 801d582:	f820 3b02 	strh.w	r3, [r0], #2
 801d586:	e7e9      	b.n	801d55c <_ZN8touchgfx8LCD16bpp14blitCopyRGB888EPKhRKNS_4RectES5_h+0x19c>
 801d588:	4438      	add	r0, r7
 801d58a:	eb01 040c 	add.w	r4, r1, ip
 801d58e:	e7e1      	b.n	801d554 <_ZN8touchgfx8LCD16bpp14blitCopyRGB888EPKhRKNS_4RectES5_h+0x194>
 801d590:	4438      	add	r0, r7
 801d592:	eb01 040c 	add.w	r4, r1, ip
 801d596:	e796      	b.n	801d4c6 <_ZN8touchgfx8LCD16bpp14blitCopyRGB888EPKhRKNS_4RectES5_h+0x106>
 801d598:	4b03      	ldr	r3, [pc, #12]	; (801d5a8 <_ZN8touchgfx8LCD16bpp14blitCopyRGB888EPKhRKNS_4RectES5_h+0x1e8>)
 801d59a:	6818      	ldr	r0, [r3, #0]
 801d59c:	6803      	ldr	r3, [r0, #0]
 801d59e:	6adb      	ldr	r3, [r3, #44]	; 0x2c
 801d5a0:	4798      	blx	r3
 801d5a2:	e768      	b.n	801d476 <_ZN8touchgfx8LCD16bpp14blitCopyRGB888EPKhRKNS_4RectES5_h+0xb6>
 801d5a4:	fffff800 	.word	0xfffff800
 801d5a8:	20012f24 	.word	0x20012f24
 801d5ac:	20012f1e 	.word	0x20012f1e

0801d5b0 <_ZN8touchgfx8LCD16bpp8blitCopyEPKhNS_6Bitmap12BitmapFormatERKNS_4RectES7_hb>:
 801d5b0:	b4f0      	push	{r4, r5, r6, r7}
 801d5b2:	4616      	mov	r6, r2
 801d5b4:	2e01      	cmp	r6, #1
 801d5b6:	461c      	mov	r4, r3
 801d5b8:	460d      	mov	r5, r1
 801d5ba:	9a04      	ldr	r2, [sp, #16]
 801d5bc:	f89d 3014 	ldrb.w	r3, [sp, #20]
 801d5c0:	f89d 7018 	ldrb.w	r7, [sp, #24]
 801d5c4:	d012      	beq.n	801d5ec <_ZN8touchgfx8LCD16bpp8blitCopyEPKhNS_6Bitmap12BitmapFormatERKNS_4RectES7_hb+0x3c>
 801d5c6:	d303      	bcc.n	801d5d0 <_ZN8touchgfx8LCD16bpp8blitCopyEPKhNS_6Bitmap12BitmapFormatERKNS_4RectES7_hb+0x20>
 801d5c8:	2e02      	cmp	r6, #2
 801d5ca:	d00a      	beq.n	801d5e2 <_ZN8touchgfx8LCD16bpp8blitCopyEPKhNS_6Bitmap12BitmapFormatERKNS_4RectES7_hb+0x32>
 801d5cc:	bcf0      	pop	{r4, r5, r6, r7}
 801d5ce:	4770      	bx	lr
 801d5d0:	6805      	ldr	r5, [r0, #0]
 801d5d2:	e9cd 3704 	strd	r3, r7, [sp, #16]
 801d5d6:	68ed      	ldr	r5, [r5, #12]
 801d5d8:	4613      	mov	r3, r2
 801d5da:	46ac      	mov	ip, r5
 801d5dc:	4622      	mov	r2, r4
 801d5de:	bcf0      	pop	{r4, r5, r6, r7}
 801d5e0:	4760      	bx	ip
 801d5e2:	4621      	mov	r1, r4
 801d5e4:	4628      	mov	r0, r5
 801d5e6:	bcf0      	pop	{r4, r5, r6, r7}
 801d5e8:	f7ff bd94 	b.w	801d114 <_ZN8touchgfx8LCD16bpp16blitCopyARGB8888EPKmRKNS_4RectES5_h>
 801d5ec:	4621      	mov	r1, r4
 801d5ee:	4628      	mov	r0, r5
 801d5f0:	bcf0      	pop	{r4, r5, r6, r7}
 801d5f2:	f7ff bee5 	b.w	801d3c0 <_ZN8touchgfx8LCD16bpp14blitCopyRGB888EPKhRKNS_4RectES5_h>
	...

0801d5f8 <_ZN8touchgfx8LCD16bpp19blitCopyL8_ARGB8888EPKhS2_RKNS_4RectES5_h>:
 801d5f8:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 801d5fc:	4681      	mov	r9, r0
 801d5fe:	b093      	sub	sp, #76	; 0x4c
 801d600:	6810      	ldr	r0, [r2, #0]
 801d602:	f89d a070 	ldrb.w	sl, [sp, #112]	; 0x70
 801d606:	4f6d      	ldr	r7, [pc, #436]	; (801d7bc <_ZN8touchgfx8LCD16bpp19blitCopyL8_ARGB8888EPKhS2_RKNS_4RectES5_h+0x1c4>)
 801d608:	4688      	mov	r8, r1
 801d60a:	6851      	ldr	r1, [r2, #4]
 801d60c:	ac0e      	add	r4, sp, #56	; 0x38
 801d60e:	c403      	stmia	r4!, {r0, r1}
 801d610:	6818      	ldr	r0, [r3, #0]
 801d612:	6859      	ldr	r1, [r3, #4]
 801d614:	ac10      	add	r4, sp, #64	; 0x40
 801d616:	4616      	mov	r6, r2
 801d618:	c403      	stmia	r4!, {r0, r1}
 801d61a:	a80e      	add	r0, sp, #56	; 0x38
 801d61c:	f7f7 fcd4 	bl	8014fc8 <_ZN8touchgfx21DisplayTransformation29transformDisplayToFrameBufferERNS_4RectE>
 801d620:	4631      	mov	r1, r6
 801d622:	a810      	add	r0, sp, #64	; 0x40
 801d624:	f7f7 fd14 	bl	8015050 <_ZN8touchgfx21DisplayTransformation29transformDisplayToFrameBufferERNS_4RectERKS1_>
 801d628:	f9bd 2040 	ldrsh.w	r2, [sp, #64]	; 0x40
 801d62c:	f9bd 3042 	ldrsh.w	r3, [sp, #66]	; 0x42
 801d630:	f8bd 103c 	ldrh.w	r1, [sp, #60]	; 0x3c
 801d634:	4e62      	ldr	r6, [pc, #392]	; (801d7c0 <_ZN8touchgfx8LCD16bpp19blitCopyL8_ARGB8888EPKhS2_RKNS_4RectES5_h+0x1c8>)
 801d636:	f9bd 4044 	ldrsh.w	r4, [sp, #68]	; 0x44
 801d63a:	6830      	ldr	r0, [r6, #0]
 801d63c:	f9bd 5046 	ldrsh.w	r5, [sp, #70]	; 0x46
 801d640:	fb11 2103 	smlabb	r1, r1, r3, r2
 801d644:	4489      	add	r9, r1
 801d646:	f8bd 1038 	ldrh.w	r1, [sp, #56]	; 0x38
 801d64a:	440a      	add	r2, r1
 801d64c:	f8ad 2040 	strh.w	r2, [sp, #64]	; 0x40
 801d650:	f8bd 203a 	ldrh.w	r2, [sp, #58]	; 0x3a
 801d654:	4413      	add	r3, r2
 801d656:	f8ad 3042 	strh.w	r3, [sp, #66]	; 0x42
 801d65a:	6803      	ldr	r3, [r0, #0]
 801d65c:	6b9b      	ldr	r3, [r3, #56]	; 0x38
 801d65e:	4798      	blx	r3
 801d660:	f010 0f80 	tst.w	r0, #128	; 0x80
 801d664:	6830      	ldr	r0, [r6, #0]
 801d666:	d01d      	beq.n	801d6a4 <_ZN8touchgfx8LCD16bpp19blitCopyL8_ARGB8888EPKhS2_RKNS_4RectES5_h+0xac>
 801d668:	2200      	movs	r2, #0
 801d66a:	6801      	ldr	r1, [r0, #0]
 801d66c:	f8bd 3040 	ldrh.w	r3, [sp, #64]	; 0x40
 801d670:	e9cd 2208 	strd	r2, r2, [sp, #32]
 801d674:	220b      	movs	r2, #11
 801d676:	9207      	str	r2, [sp, #28]
 801d678:	883a      	ldrh	r2, [r7, #0]
 801d67a:	9206      	str	r2, [sp, #24]
 801d67c:	2201      	movs	r2, #1
 801d67e:	e9cd a204 	strd	sl, r2, [sp, #16]
 801d682:	f8bd 203c 	ldrh.w	r2, [sp, #60]	; 0x3c
 801d686:	9203      	str	r2, [sp, #12]
 801d688:	b2a4      	uxth	r4, r4
 801d68a:	f8bd 2042 	ldrh.w	r2, [sp, #66]	; 0x42
 801d68e:	9200      	str	r2, [sp, #0]
 801d690:	b2ad      	uxth	r5, r5
 801d692:	9502      	str	r5, [sp, #8]
 801d694:	9401      	str	r4, [sp, #4]
 801d696:	6bcc      	ldr	r4, [r1, #60]	; 0x3c
 801d698:	4642      	mov	r2, r8
 801d69a:	4649      	mov	r1, r9
 801d69c:	47a0      	blx	r4
 801d69e:	b013      	add	sp, #76	; 0x4c
 801d6a0:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
 801d6a4:	6803      	ldr	r3, [r0, #0]
 801d6a6:	6a9b      	ldr	r3, [r3, #40]	; 0x28
 801d6a8:	4798      	blx	r3
 801d6aa:	883b      	ldrh	r3, [r7, #0]
 801d6ac:	f9bd 2042 	ldrsh.w	r2, [sp, #66]	; 0x42
 801d6b0:	f9bd 1040 	ldrsh.w	r1, [sp, #64]	; 0x40
 801d6b4:	fb03 1202 	mla	r2, r3, r2, r1
 801d6b8:	435d      	muls	r5, r3
 801d6ba:	eb00 0042 	add.w	r0, r0, r2, lsl #1
 801d6be:	eb00 0245 	add.w	r2, r0, r5, lsl #1
 801d6c2:	920c      	str	r2, [sp, #48]	; 0x30
 801d6c4:	f9bd 203c 	ldrsh.w	r2, [sp, #60]	; 0x3c
 801d6c8:	1b12      	subs	r2, r2, r4
 801d6ca:	920d      	str	r2, [sp, #52]	; 0x34
 801d6cc:	0062      	lsls	r2, r4, #1
 801d6ce:	1b1c      	subs	r4, r3, r4
 801d6d0:	0063      	lsls	r3, r4, #1
 801d6d2:	920a      	str	r2, [sp, #40]	; 0x28
 801d6d4:	930b      	str	r3, [sp, #44]	; 0x2c
 801d6d6:	f04f 0e04 	mov.w	lr, #4
 801d6da:	9b0c      	ldr	r3, [sp, #48]	; 0x30
 801d6dc:	4298      	cmp	r0, r3
 801d6de:	d266      	bcs.n	801d7ae <_ZN8touchgfx8LCD16bpp19blitCopyL8_ARGB8888EPKhS2_RKNS_4RectES5_h+0x1b6>
 801d6e0:	9b0a      	ldr	r3, [sp, #40]	; 0x28
 801d6e2:	eb00 0b03 	add.w	fp, r0, r3
 801d6e6:	4558      	cmp	r0, fp
 801d6e8:	d25c      	bcs.n	801d7a4 <_ZN8touchgfx8LCD16bpp19blitCopyL8_ARGB8888EPKhS2_RKNS_4RectES5_h+0x1ac>
 801d6ea:	f819 3b01 	ldrb.w	r3, [r9], #1
 801d6ee:	fb1e e303 	smlabb	r3, lr, r3, lr
 801d6f2:	f858 2003 	ldr.w	r2, [r8, r3]
 801d6f6:	0e11      	lsrs	r1, r2, #24
 801d6f8:	d012      	beq.n	801d720 <_ZN8touchgfx8LCD16bpp19blitCopyL8_ARGB8888EPKhS2_RKNS_4RectES5_h+0x128>
 801d6fa:	29ff      	cmp	r1, #255	; 0xff
 801d6fc:	ea4f 2712 	mov.w	r7, r2, lsr #8
 801d700:	d110      	bne.n	801d724 <_ZN8touchgfx8LCD16bpp19blitCopyL8_ARGB8888EPKhS2_RKNS_4RectES5_h+0x12c>
 801d702:	f1ba 0fff 	cmp.w	sl, #255	; 0xff
 801d706:	d10d      	bne.n	801d724 <_ZN8touchgfx8LCD16bpp19blitCopyL8_ARGB8888EPKhS2_RKNS_4RectES5_h+0x12c>
 801d708:	0953      	lsrs	r3, r2, #5
 801d70a:	f427 67ff 	bic.w	r7, r7, #2040	; 0x7f8
 801d70e:	f403 63fc 	and.w	r3, r3, #2016	; 0x7e0
 801d712:	f027 0707 	bic.w	r7, r7, #7
 801d716:	431f      	orrs	r7, r3
 801d718:	f3c2 02c4 	ubfx	r2, r2, #3, #5
 801d71c:	433a      	orrs	r2, r7
 801d71e:	8002      	strh	r2, [r0, #0]
 801d720:	3002      	adds	r0, #2
 801d722:	e7e0      	b.n	801d6e6 <_ZN8touchgfx8LCD16bpp19blitCopyL8_ARGB8888EPKhS2_RKNS_4RectES5_h+0xee>
 801d724:	fb0a f101 	mul.w	r1, sl, r1
 801d728:	8806      	ldrh	r6, [r0, #0]
 801d72a:	1c4b      	adds	r3, r1, #1
 801d72c:	eb03 2321 	add.w	r3, r3, r1, asr #8
 801d730:	1235      	asrs	r5, r6, #8
 801d732:	10f4      	asrs	r4, r6, #3
 801d734:	121b      	asrs	r3, r3, #8
 801d736:	00f6      	lsls	r6, r6, #3
 801d738:	b299      	uxth	r1, r3
 801d73a:	f3c2 4c07 	ubfx	ip, r2, #16, #8
 801d73e:	f005 05f8 	and.w	r5, r5, #248	; 0xf8
 801d742:	b2f6      	uxtb	r6, r6
 801d744:	43db      	mvns	r3, r3
 801d746:	b2d2      	uxtb	r2, r2
 801d748:	b2db      	uxtb	r3, r3
 801d74a:	fb1c fc01 	smulbb	ip, ip, r1
 801d74e:	ea45 1555 	orr.w	r5, r5, r5, lsr #5
 801d752:	ea46 1656 	orr.w	r6, r6, r6, lsr #5
 801d756:	fb12 f201 	smulbb	r2, r2, r1
 801d75a:	fb05 c503 	mla	r5, r5, r3, ip
 801d75e:	f004 04fc 	and.w	r4, r4, #252	; 0xfc
 801d762:	b2ff      	uxtb	r7, r7
 801d764:	fb06 2203 	mla	r2, r6, r3, r2
 801d768:	b2ad      	uxth	r5, r5
 801d76a:	fb17 f701 	smulbb	r7, r7, r1
 801d76e:	b292      	uxth	r2, r2
 801d770:	ea44 1494 	orr.w	r4, r4, r4, lsr #6
 801d774:	fb04 7403 	mla	r4, r4, r3, r7
 801d778:	f105 0c01 	add.w	ip, r5, #1
 801d77c:	1c57      	adds	r7, r2, #1
 801d77e:	eb0c 2515 	add.w	r5, ip, r5, lsr #8
 801d782:	eb07 2712 	add.w	r7, r7, r2, lsr #8
 801d786:	b2a4      	uxth	r4, r4
 801d788:	f3c7 27c4 	ubfx	r7, r7, #11, #5
 801d78c:	f405 4578 	and.w	r5, r5, #63488	; 0xf800
 801d790:	433d      	orrs	r5, r7
 801d792:	1c67      	adds	r7, r4, #1
 801d794:	eb07 2414 	add.w	r4, r7, r4, lsr #8
 801d798:	0964      	lsrs	r4, r4, #5
 801d79a:	f404 64fc 	and.w	r4, r4, #2016	; 0x7e0
 801d79e:	4325      	orrs	r5, r4
 801d7a0:	8005      	strh	r5, [r0, #0]
 801d7a2:	e7bd      	b.n	801d720 <_ZN8touchgfx8LCD16bpp19blitCopyL8_ARGB8888EPKhS2_RKNS_4RectES5_h+0x128>
 801d7a4:	9b0b      	ldr	r3, [sp, #44]	; 0x2c
 801d7a6:	4418      	add	r0, r3
 801d7a8:	9b0d      	ldr	r3, [sp, #52]	; 0x34
 801d7aa:	4499      	add	r9, r3
 801d7ac:	e795      	b.n	801d6da <_ZN8touchgfx8LCD16bpp19blitCopyL8_ARGB8888EPKhS2_RKNS_4RectES5_h+0xe2>
 801d7ae:	4b04      	ldr	r3, [pc, #16]	; (801d7c0 <_ZN8touchgfx8LCD16bpp19blitCopyL8_ARGB8888EPKhS2_RKNS_4RectES5_h+0x1c8>)
 801d7b0:	6818      	ldr	r0, [r3, #0]
 801d7b2:	6803      	ldr	r3, [r0, #0]
 801d7b4:	6adb      	ldr	r3, [r3, #44]	; 0x2c
 801d7b6:	4798      	blx	r3
 801d7b8:	e771      	b.n	801d69e <_ZN8touchgfx8LCD16bpp19blitCopyL8_ARGB8888EPKhS2_RKNS_4RectES5_h+0xa6>
 801d7ba:	bf00      	nop
 801d7bc:	20012f1e 	.word	0x20012f1e
 801d7c0:	20012f24 	.word	0x20012f24

0801d7c4 <_ZN8touchgfx8LCD16bpp17blitCopyL8_RGB565EPKhS2_RKNS_4RectES5_h>:
 801d7c4:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 801d7c8:	b087      	sub	sp, #28
 801d7ca:	4680      	mov	r8, r0
 801d7cc:	f89d 6040 	ldrb.w	r6, [sp, #64]	; 0x40
 801d7d0:	460d      	mov	r5, r1
 801d7d2:	4614      	mov	r4, r2
 801d7d4:	2e00      	cmp	r6, #0
 801d7d6:	f000 80b9 	beq.w	801d94c <_ZN8touchgfx8LCD16bpp17blitCopyL8_RGB565EPKhS2_RKNS_4RectES5_h+0x188>
 801d7da:	6810      	ldr	r0, [r2, #0]
 801d7dc:	6851      	ldr	r1, [r2, #4]
 801d7de:	af02      	add	r7, sp, #8
 801d7e0:	c703      	stmia	r7!, {r0, r1}
 801d7e2:	6818      	ldr	r0, [r3, #0]
 801d7e4:	6859      	ldr	r1, [r3, #4]
 801d7e6:	af04      	add	r7, sp, #16
 801d7e8:	c703      	stmia	r7!, {r0, r1}
 801d7ea:	a802      	add	r0, sp, #8
 801d7ec:	f7f7 fbec 	bl	8014fc8 <_ZN8touchgfx21DisplayTransformation29transformDisplayToFrameBufferERNS_4RectE>
 801d7f0:	4621      	mov	r1, r4
 801d7f2:	a804      	add	r0, sp, #16
 801d7f4:	f7f7 fc2c 	bl	8015050 <_ZN8touchgfx21DisplayTransformation29transformDisplayToFrameBufferERNS_4RectERKS1_>
 801d7f8:	f9bd 2010 	ldrsh.w	r2, [sp, #16]
 801d7fc:	f9bd 3012 	ldrsh.w	r3, [sp, #18]
 801d800:	f8bd 400c 	ldrh.w	r4, [sp, #12]
 801d804:	f9bd 7016 	ldrsh.w	r7, [sp, #22]
 801d808:	fb14 2103 	smlabb	r1, r4, r3, r2
 801d80c:	eb08 0401 	add.w	r4, r8, r1
 801d810:	f8bd 1008 	ldrh.w	r1, [sp, #8]
 801d814:	f9bd 8014 	ldrsh.w	r8, [sp, #20]
 801d818:	440a      	add	r2, r1
 801d81a:	f8ad 2010 	strh.w	r2, [sp, #16]
 801d81e:	f8bd 200a 	ldrh.w	r2, [sp, #10]
 801d822:	4413      	add	r3, r2
 801d824:	f8ad 3012 	strh.w	r3, [sp, #18]
 801d828:	4b4a      	ldr	r3, [pc, #296]	; (801d954 <_ZN8touchgfx8LCD16bpp17blitCopyL8_RGB565EPKhS2_RKNS_4RectES5_h+0x190>)
 801d82a:	6818      	ldr	r0, [r3, #0]
 801d82c:	6803      	ldr	r3, [r0, #0]
 801d82e:	6a9b      	ldr	r3, [r3, #40]	; 0x28
 801d830:	4798      	blx	r3
 801d832:	4b49      	ldr	r3, [pc, #292]	; (801d958 <_ZN8touchgfx8LCD16bpp17blitCopyL8_RGB565EPKhS2_RKNS_4RectES5_h+0x194>)
 801d834:	f9bd 1012 	ldrsh.w	r1, [sp, #18]
 801d838:	881a      	ldrh	r2, [r3, #0]
 801d83a:	f9bd c010 	ldrsh.w	ip, [sp, #16]
 801d83e:	2eff      	cmp	r6, #255	; 0xff
 801d840:	fb02 c101 	mla	r1, r2, r1, ip
 801d844:	eb00 0041 	add.w	r0, r0, r1, lsl #1
 801d848:	fb02 f207 	mul.w	r2, r2, r7
 801d84c:	f105 0104 	add.w	r1, r5, #4
 801d850:	ea4f 0a48 	mov.w	sl, r8, lsl #1
 801d854:	461d      	mov	r5, r3
 801d856:	d05a      	beq.n	801d90e <_ZN8touchgfx8LCD16bpp17blitCopyL8_RGB565EPKhS2_RKNS_4RectES5_h+0x14a>
 801d858:	f1c6 0eff 	rsb	lr, r6, #255	; 0xff
 801d85c:	eb00 0242 	add.w	r2, r0, r2, lsl #1
 801d860:	b2b6      	uxth	r6, r6
 801d862:	fa1f fe8e 	uxth.w	lr, lr
 801d866:	9301      	str	r3, [sp, #4]
 801d868:	4282      	cmp	r2, r0
 801d86a:	d96a      	bls.n	801d942 <_ZN8touchgfx8LCD16bpp17blitCopyL8_RGB565EPKhS2_RKNS_4RectES5_h+0x17e>
 801d86c:	eb00 0b0a 	add.w	fp, r0, sl
 801d870:	4583      	cmp	fp, r0
 801d872:	d940      	bls.n	801d8f6 <_ZN8touchgfx8LCD16bpp17blitCopyL8_RGB565EPKhS2_RKNS_4RectES5_h+0x132>
 801d874:	f814 3b01 	ldrb.w	r3, [r4], #1
 801d878:	8805      	ldrh	r5, [r0, #0]
 801d87a:	f831 3013 	ldrh.w	r3, [r1, r3, lsl #1]
 801d87e:	122f      	asrs	r7, r5, #8
 801d880:	ea4f 2c23 	mov.w	ip, r3, asr #8
 801d884:	f007 07f8 	and.w	r7, r7, #248	; 0xf8
 801d888:	fb17 f70e 	smulbb	r7, r7, lr
 801d88c:	ea4f 09e5 	mov.w	r9, r5, asr #3
 801d890:	f00c 0cf8 	and.w	ip, ip, #248	; 0xf8
 801d894:	00ed      	lsls	r5, r5, #3
 801d896:	fb0c 7c06 	mla	ip, ip, r6, r7
 801d89a:	f009 09fc 	and.w	r9, r9, #252	; 0xfc
 801d89e:	10df      	asrs	r7, r3, #3
 801d8a0:	b2ed      	uxtb	r5, r5
 801d8a2:	00db      	lsls	r3, r3, #3
 801d8a4:	fa1f fc8c 	uxth.w	ip, ip
 801d8a8:	fb19 f90e 	smulbb	r9, r9, lr
 801d8ac:	f007 07fc 	and.w	r7, r7, #252	; 0xfc
 801d8b0:	b2db      	uxtb	r3, r3
 801d8b2:	fb15 f50e 	smulbb	r5, r5, lr
 801d8b6:	fb07 9706 	mla	r7, r7, r6, r9
 801d8ba:	fb03 5306 	mla	r3, r3, r6, r5
 801d8be:	f10c 0901 	add.w	r9, ip, #1
 801d8c2:	b29b      	uxth	r3, r3
 801d8c4:	eb09 2c1c 	add.w	ip, r9, ip, lsr #8
 801d8c8:	f40c 4978 	and.w	r9, ip, #63488	; 0xf800
 801d8cc:	f103 0c01 	add.w	ip, r3, #1
 801d8d0:	eb0c 2c13 	add.w	ip, ip, r3, lsr #8
 801d8d4:	b2bf      	uxth	r7, r7
 801d8d6:	f3cc 2cc4 	ubfx	ip, ip, #11, #5
 801d8da:	ea4c 0c09 	orr.w	ip, ip, r9
 801d8de:	f107 0901 	add.w	r9, r7, #1
 801d8e2:	eb09 2717 	add.w	r7, r9, r7, lsr #8
 801d8e6:	097f      	lsrs	r7, r7, #5
 801d8e8:	f407 67fc 	and.w	r7, r7, #2016	; 0x7e0
 801d8ec:	ea4c 0c07 	orr.w	ip, ip, r7
 801d8f0:	f820 cb02 	strh.w	ip, [r0], #2
 801d8f4:	e7bc      	b.n	801d870 <_ZN8touchgfx8LCD16bpp17blitCopyL8_RGB565EPKhS2_RKNS_4RectES5_h+0xac>
 801d8f6:	9b01      	ldr	r3, [sp, #4]
 801d8f8:	881b      	ldrh	r3, [r3, #0]
 801d8fa:	eba3 0308 	sub.w	r3, r3, r8
 801d8fe:	eb00 0043 	add.w	r0, r0, r3, lsl #1
 801d902:	f9bd 300c 	ldrsh.w	r3, [sp, #12]
 801d906:	eba3 0308 	sub.w	r3, r3, r8
 801d90a:	441c      	add	r4, r3
 801d90c:	e7ac      	b.n	801d868 <_ZN8touchgfx8LCD16bpp17blitCopyL8_RGB565EPKhS2_RKNS_4RectES5_h+0xa4>
 801d90e:	eb00 0242 	add.w	r2, r0, r2, lsl #1
 801d912:	4282      	cmp	r2, r0
 801d914:	d915      	bls.n	801d942 <_ZN8touchgfx8LCD16bpp17blitCopyL8_RGB565EPKhS2_RKNS_4RectES5_h+0x17e>
 801d916:	eb00 060a 	add.w	r6, r0, sl
 801d91a:	4286      	cmp	r6, r0
 801d91c:	d906      	bls.n	801d92c <_ZN8touchgfx8LCD16bpp17blitCopyL8_RGB565EPKhS2_RKNS_4RectES5_h+0x168>
 801d91e:	f814 3b01 	ldrb.w	r3, [r4], #1
 801d922:	f831 3013 	ldrh.w	r3, [r1, r3, lsl #1]
 801d926:	f820 3b02 	strh.w	r3, [r0], #2
 801d92a:	e7f6      	b.n	801d91a <_ZN8touchgfx8LCD16bpp17blitCopyL8_RGB565EPKhS2_RKNS_4RectES5_h+0x156>
 801d92c:	882b      	ldrh	r3, [r5, #0]
 801d92e:	eba3 0308 	sub.w	r3, r3, r8
 801d932:	eb00 0043 	add.w	r0, r0, r3, lsl #1
 801d936:	f9bd 300c 	ldrsh.w	r3, [sp, #12]
 801d93a:	eba3 0308 	sub.w	r3, r3, r8
 801d93e:	441c      	add	r4, r3
 801d940:	e7e7      	b.n	801d912 <_ZN8touchgfx8LCD16bpp17blitCopyL8_RGB565EPKhS2_RKNS_4RectES5_h+0x14e>
 801d942:	4b04      	ldr	r3, [pc, #16]	; (801d954 <_ZN8touchgfx8LCD16bpp17blitCopyL8_RGB565EPKhS2_RKNS_4RectES5_h+0x190>)
 801d944:	6818      	ldr	r0, [r3, #0]
 801d946:	6803      	ldr	r3, [r0, #0]
 801d948:	6adb      	ldr	r3, [r3, #44]	; 0x2c
 801d94a:	4798      	blx	r3
 801d94c:	b007      	add	sp, #28
 801d94e:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
 801d952:	bf00      	nop
 801d954:	20012f24 	.word	0x20012f24
 801d958:	20012f1e 	.word	0x20012f1e

0801d95c <_ZN8touchgfx8LCD16bpp17blitCopyL8_RGB888EPKhS2_RKNS_4RectES5_h>:
 801d95c:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 801d960:	b091      	sub	sp, #68	; 0x44
 801d962:	4680      	mov	r8, r0
 801d964:	f89d 5068 	ldrb.w	r5, [sp, #104]	; 0x68
 801d968:	460f      	mov	r7, r1
 801d96a:	4614      	mov	r4, r2
 801d96c:	2d00      	cmp	r5, #0
 801d96e:	d051      	beq.n	801da14 <_ZN8touchgfx8LCD16bpp17blitCopyL8_RGB888EPKhS2_RKNS_4RectES5_h+0xb8>
 801d970:	6810      	ldr	r0, [r2, #0]
 801d972:	6851      	ldr	r1, [r2, #4]
 801d974:	f8df 9200 	ldr.w	r9, [pc, #512]	; 801db78 <_ZN8touchgfx8LCD16bpp17blitCopyL8_RGB888EPKhS2_RKNS_4RectES5_h+0x21c>
 801d978:	ae0c      	add	r6, sp, #48	; 0x30
 801d97a:	c603      	stmia	r6!, {r0, r1}
 801d97c:	6818      	ldr	r0, [r3, #0]
 801d97e:	6859      	ldr	r1, [r3, #4]
 801d980:	ae0e      	add	r6, sp, #56	; 0x38
 801d982:	c603      	stmia	r6!, {r0, r1}
 801d984:	a80c      	add	r0, sp, #48	; 0x30
 801d986:	f7f7 fb1f 	bl	8014fc8 <_ZN8touchgfx21DisplayTransformation29transformDisplayToFrameBufferERNS_4RectE>
 801d98a:	4621      	mov	r1, r4
 801d98c:	a80e      	add	r0, sp, #56	; 0x38
 801d98e:	f7f7 fb5f 	bl	8015050 <_ZN8touchgfx21DisplayTransformation29transformDisplayToFrameBufferERNS_4RectERKS1_>
 801d992:	f9bd 2038 	ldrsh.w	r2, [sp, #56]	; 0x38
 801d996:	f9bd 303a 	ldrsh.w	r3, [sp, #58]	; 0x3a
 801d99a:	f8bd 1034 	ldrh.w	r1, [sp, #52]	; 0x34
 801d99e:	f8d9 0000 	ldr.w	r0, [r9]
 801d9a2:	f9bd 603c 	ldrsh.w	r6, [sp, #60]	; 0x3c
 801d9a6:	f9bd a03e 	ldrsh.w	sl, [sp, #62]	; 0x3e
 801d9aa:	fb11 2103 	smlabb	r1, r1, r3, r2
 801d9ae:	eb08 0401 	add.w	r4, r8, r1
 801d9b2:	f8bd 1030 	ldrh.w	r1, [sp, #48]	; 0x30
 801d9b6:	f8df 81c4 	ldr.w	r8, [pc, #452]	; 801db7c <_ZN8touchgfx8LCD16bpp17blitCopyL8_RGB888EPKhS2_RKNS_4RectES5_h+0x220>
 801d9ba:	440a      	add	r2, r1
 801d9bc:	f8ad 2038 	strh.w	r2, [sp, #56]	; 0x38
 801d9c0:	f8bd 2032 	ldrh.w	r2, [sp, #50]	; 0x32
 801d9c4:	4413      	add	r3, r2
 801d9c6:	f8ad 303a 	strh.w	r3, [sp, #58]	; 0x3a
 801d9ca:	6803      	ldr	r3, [r0, #0]
 801d9cc:	6b9b      	ldr	r3, [r3, #56]	; 0x38
 801d9ce:	4798      	blx	r3
 801d9d0:	f010 0f80 	tst.w	r0, #128	; 0x80
 801d9d4:	f8d9 0000 	ldr.w	r0, [r9]
 801d9d8:	d01f      	beq.n	801da1a <_ZN8touchgfx8LCD16bpp17blitCopyL8_RGB888EPKhS2_RKNS_4RectES5_h+0xbe>
 801d9da:	2200      	movs	r2, #0
 801d9dc:	6801      	ldr	r1, [r0, #0]
 801d9de:	f8bd 3038 	ldrh.w	r3, [sp, #56]	; 0x38
 801d9e2:	e9cd 2208 	strd	r2, r2, [sp, #32]
 801d9e6:	220b      	movs	r2, #11
 801d9e8:	9207      	str	r2, [sp, #28]
 801d9ea:	f8b8 2000 	ldrh.w	r2, [r8]
 801d9ee:	9206      	str	r2, [sp, #24]
 801d9f0:	2201      	movs	r2, #1
 801d9f2:	e9cd 5204 	strd	r5, r2, [sp, #16]
 801d9f6:	f8bd 2034 	ldrh.w	r2, [sp, #52]	; 0x34
 801d9fa:	9203      	str	r2, [sp, #12]
 801d9fc:	fa1f f28a 	uxth.w	r2, sl
 801da00:	9202      	str	r2, [sp, #8]
 801da02:	b2b6      	uxth	r6, r6
 801da04:	f8bd 203a 	ldrh.w	r2, [sp, #58]	; 0x3a
 801da08:	9200      	str	r2, [sp, #0]
 801da0a:	9601      	str	r6, [sp, #4]
 801da0c:	6bcd      	ldr	r5, [r1, #60]	; 0x3c
 801da0e:	463a      	mov	r2, r7
 801da10:	4621      	mov	r1, r4
 801da12:	47a8      	blx	r5
 801da14:	b011      	add	sp, #68	; 0x44
 801da16:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
 801da1a:	6803      	ldr	r3, [r0, #0]
 801da1c:	6a9b      	ldr	r3, [r3, #40]	; 0x28
 801da1e:	4798      	blx	r3
 801da20:	f8b8 2000 	ldrh.w	r2, [r8]
 801da24:	f9bd 303a 	ldrsh.w	r3, [sp, #58]	; 0x3a
 801da28:	f9bd 1038 	ldrsh.w	r1, [sp, #56]	; 0x38
 801da2c:	2dff      	cmp	r5, #255	; 0xff
 801da2e:	fb02 1303 	mla	r3, r2, r3, r1
 801da32:	eb00 0043 	add.w	r0, r0, r3, lsl #1
 801da36:	ea4f 0946 	mov.w	r9, r6, lsl #1
 801da3a:	fb0a fa02 	mul.w	sl, sl, r2
 801da3e:	d062      	beq.n	801db06 <_ZN8touchgfx8LCD16bpp17blitCopyL8_RGB888EPKhS2_RKNS_4RectES5_h+0x1aa>
 801da40:	ea6f 0c05 	mvn.w	ip, r5
 801da44:	eb00 034a 	add.w	r3, r0, sl, lsl #1
 801da48:	930a      	str	r3, [sp, #40]	; 0x28
 801da4a:	b2ad      	uxth	r5, r5
 801da4c:	fa5f fc8c 	uxtb.w	ip, ip
 801da50:	f8cd 802c 	str.w	r8, [sp, #44]	; 0x2c
 801da54:	9b0a      	ldr	r3, [sp, #40]	; 0x28
 801da56:	4298      	cmp	r0, r3
 801da58:	f080 8085 	bcs.w	801db66 <_ZN8touchgfx8LCD16bpp17blitCopyL8_RGB888EPKhS2_RKNS_4RectES5_h+0x20a>
 801da5c:	eb00 0b09 	add.w	fp, r0, r9
 801da60:	4558      	cmp	r0, fp
 801da62:	d246      	bcs.n	801daf2 <_ZN8touchgfx8LCD16bpp17blitCopyL8_RGB888EPKhS2_RKNS_4RectES5_h+0x196>
 801da64:	f814 eb01 	ldrb.w	lr, [r4], #1
 801da68:	2303      	movs	r3, #3
 801da6a:	2204      	movs	r2, #4
 801da6c:	fb13 2e0e 	smlabb	lr, r3, lr, r2
 801da70:	eb07 0a0e 	add.w	sl, r7, lr
 801da74:	8803      	ldrh	r3, [r0, #0]
 801da76:	f89a 8002 	ldrb.w	r8, [sl, #2]
 801da7a:	f817 e00e 	ldrb.w	lr, [r7, lr]
 801da7e:	1219      	asrs	r1, r3, #8
 801da80:	f001 01f8 	and.w	r1, r1, #248	; 0xf8
 801da84:	fb18 f805 	smulbb	r8, r8, r5
 801da88:	ea41 1151 	orr.w	r1, r1, r1, lsr #5
 801da8c:	10da      	asrs	r2, r3, #3
 801da8e:	fb01 810c 	mla	r1, r1, ip, r8
 801da92:	00db      	lsls	r3, r3, #3
 801da94:	f89a 8001 	ldrb.w	r8, [sl, #1]
 801da98:	f002 02fc 	and.w	r2, r2, #252	; 0xfc
 801da9c:	b2db      	uxtb	r3, r3
 801da9e:	fb18 f805 	smulbb	r8, r8, r5
 801daa2:	fb1e fe05 	smulbb	lr, lr, r5
 801daa6:	ea42 1292 	orr.w	r2, r2, r2, lsr #6
 801daaa:	ea43 1353 	orr.w	r3, r3, r3, lsr #5
 801daae:	b289      	uxth	r1, r1
 801dab0:	fb02 820c 	mla	r2, r2, ip, r8
 801dab4:	fb03 e30c 	mla	r3, r3, ip, lr
 801dab8:	b292      	uxth	r2, r2
 801daba:	b29b      	uxth	r3, r3
 801dabc:	f101 0801 	add.w	r8, r1, #1
 801dac0:	eb08 2111 	add.w	r1, r8, r1, lsr #8
 801dac4:	f103 0e01 	add.w	lr, r3, #1
 801dac8:	f102 0801 	add.w	r8, r2, #1
 801dacc:	eb0e 2e13 	add.w	lr, lr, r3, lsr #8
 801dad0:	eb08 2812 	add.w	r8, r8, r2, lsr #8
 801dad4:	f401 4178 	and.w	r1, r1, #63488	; 0xf800
 801dad8:	f3ce 2ec4 	ubfx	lr, lr, #11, #5
 801dadc:	ea4f 1858 	mov.w	r8, r8, lsr #5
 801dae0:	ea4e 0101 	orr.w	r1, lr, r1
 801dae4:	f408 68fc 	and.w	r8, r8, #2016	; 0x7e0
 801dae8:	ea41 0108 	orr.w	r1, r1, r8
 801daec:	f820 1b02 	strh.w	r1, [r0], #2
 801daf0:	e7b6      	b.n	801da60 <_ZN8touchgfx8LCD16bpp17blitCopyL8_RGB888EPKhS2_RKNS_4RectES5_h+0x104>
 801daf2:	9b0b      	ldr	r3, [sp, #44]	; 0x2c
 801daf4:	881b      	ldrh	r3, [r3, #0]
 801daf6:	1b9b      	subs	r3, r3, r6
 801daf8:	eb00 0043 	add.w	r0, r0, r3, lsl #1
 801dafc:	f9bd 3034 	ldrsh.w	r3, [sp, #52]	; 0x34
 801db00:	1b9b      	subs	r3, r3, r6
 801db02:	441c      	add	r4, r3
 801db04:	e7a6      	b.n	801da54 <_ZN8touchgfx8LCD16bpp17blitCopyL8_RGB888EPKhS2_RKNS_4RectES5_h+0xf8>
 801db06:	491b      	ldr	r1, [pc, #108]	; (801db74 <_ZN8touchgfx8LCD16bpp17blitCopyL8_RGB888EPKhS2_RKNS_4RectES5_h+0x218>)
 801db08:	eb00 0a4a 	add.w	sl, r0, sl, lsl #1
 801db0c:	2203      	movs	r2, #3
 801db0e:	2504      	movs	r5, #4
 801db10:	4550      	cmp	r0, sl
 801db12:	d228      	bcs.n	801db66 <_ZN8touchgfx8LCD16bpp17blitCopyL8_RGB888EPKhS2_RKNS_4RectES5_h+0x20a>
 801db14:	eb00 0c09 	add.w	ip, r0, r9
 801db18:	4560      	cmp	r0, ip
 801db1a:	4623      	mov	r3, r4
 801db1c:	d219      	bcs.n	801db52 <_ZN8touchgfx8LCD16bpp17blitCopyL8_RGB888EPKhS2_RKNS_4RectES5_h+0x1f6>
 801db1e:	f893 e000 	ldrb.w	lr, [r3]
 801db22:	fb12 5e0e 	smlabb	lr, r2, lr, r5
 801db26:	eb07 0b0e 	add.w	fp, r7, lr
 801db2a:	f817 e00e 	ldrb.w	lr, [r7, lr]
 801db2e:	f89b 3002 	ldrb.w	r3, [fp, #2]
 801db32:	f89b b001 	ldrb.w	fp, [fp, #1]
 801db36:	ea4f 0bcb 	mov.w	fp, fp, lsl #3
 801db3a:	ea01 2303 	and.w	r3, r1, r3, lsl #8
 801db3e:	f40b 6bfc 	and.w	fp, fp, #2016	; 0x7e0
 801db42:	ea43 030b 	orr.w	r3, r3, fp
 801db46:	ea43 03de 	orr.w	r3, r3, lr, lsr #3
 801db4a:	3401      	adds	r4, #1
 801db4c:	f820 3b02 	strh.w	r3, [r0], #2
 801db50:	e7e2      	b.n	801db18 <_ZN8touchgfx8LCD16bpp17blitCopyL8_RGB888EPKhS2_RKNS_4RectES5_h+0x1bc>
 801db52:	f8b8 3000 	ldrh.w	r3, [r8]
 801db56:	1b9b      	subs	r3, r3, r6
 801db58:	eb00 0043 	add.w	r0, r0, r3, lsl #1
 801db5c:	f9bd 3034 	ldrsh.w	r3, [sp, #52]	; 0x34
 801db60:	1b9b      	subs	r3, r3, r6
 801db62:	441c      	add	r4, r3
 801db64:	e7d4      	b.n	801db10 <_ZN8touchgfx8LCD16bpp17blitCopyL8_RGB888EPKhS2_RKNS_4RectES5_h+0x1b4>
 801db66:	4b04      	ldr	r3, [pc, #16]	; (801db78 <_ZN8touchgfx8LCD16bpp17blitCopyL8_RGB888EPKhS2_RKNS_4RectES5_h+0x21c>)
 801db68:	6818      	ldr	r0, [r3, #0]
 801db6a:	6803      	ldr	r3, [r0, #0]
 801db6c:	6adb      	ldr	r3, [r3, #44]	; 0x2c
 801db6e:	4798      	blx	r3
 801db70:	e750      	b.n	801da14 <_ZN8touchgfx8LCD16bpp17blitCopyL8_RGB888EPKhS2_RKNS_4RectES5_h+0xb8>
 801db72:	bf00      	nop
 801db74:	fffff800 	.word	0xfffff800
 801db78:	20012f24 	.word	0x20012f24
 801db7c:	20012f1e 	.word	0x20012f1e

0801db80 <_ZN8touchgfx8LCD16bpp10blitCopyL8EPKhS2_RKNS_4RectES5_h>:
 801db80:	b4f0      	push	{r4, r5, r6, r7}
 801db82:	460c      	mov	r4, r1
 801db84:	4611      	mov	r1, r2
 801db86:	f89d 5014 	ldrb.w	r5, [sp, #20]
 801db8a:	780f      	ldrb	r7, [r1, #0]
 801db8c:	784e      	ldrb	r6, [r1, #1]
 801db8e:	2f01      	cmp	r7, #1
 801db90:	461a      	mov	r2, r3
 801db92:	9b04      	ldr	r3, [sp, #16]
 801db94:	d036      	beq.n	801dc04 <_ZN8touchgfx8LCD16bpp10blitCopyL8EPKhS2_RKNS_4RectES5_h+0x84>
 801db96:	d31e      	bcc.n	801dbd6 <_ZN8touchgfx8LCD16bpp10blitCopyL8EPKhS2_RKNS_4RectES5_h+0x56>
 801db98:	2f02      	cmp	r7, #2
 801db9a:	d14a      	bne.n	801dc32 <_ZN8touchgfx8LCD16bpp10blitCopyL8EPKhS2_RKNS_4RectES5_h+0xb2>
 801db9c:	2e03      	cmp	r6, #3
 801db9e:	d848      	bhi.n	801dc32 <_ZN8touchgfx8LCD16bpp10blitCopyL8EPKhS2_RKNS_4RectES5_h+0xb2>
 801dba0:	e8df f006 	tbb	[pc, r6]
 801dba4:	16140702 	.word	0x16140702
 801dba8:	9504      	str	r5, [sp, #16]
 801dbaa:	4620      	mov	r0, r4
 801dbac:	bcf0      	pop	{r4, r5, r6, r7}
 801dbae:	f7ff be09 	b.w	801d7c4 <_ZN8touchgfx8LCD16bpp17blitCopyL8_RGB565EPKhS2_RKNS_4RectES5_h>
 801dbb2:	6f80      	ldr	r0, [r0, #120]	; 0x78
 801dbb4:	2800      	cmp	r0, #0
 801dbb6:	d03c      	beq.n	801dc32 <_ZN8touchgfx8LCD16bpp10blitCopyL8EPKhS2_RKNS_4RectES5_h+0xb2>
 801dbb8:	6806      	ldr	r6, [r0, #0]
 801dbba:	e9cd 3504 	strd	r3, r5, [sp, #16]
 801dbbe:	68b5      	ldr	r5, [r6, #8]
 801dbc0:	4613      	mov	r3, r2
 801dbc2:	46ac      	mov	ip, r5
 801dbc4:	460a      	mov	r2, r1
 801dbc6:	4621      	mov	r1, r4
 801dbc8:	bcf0      	pop	{r4, r5, r6, r7}
 801dbca:	4760      	bx	ip
 801dbcc:	6fc0      	ldr	r0, [r0, #124]	; 0x7c
 801dbce:	e7f1      	b.n	801dbb4 <_ZN8touchgfx8LCD16bpp10blitCopyL8EPKhS2_RKNS_4RectES5_h+0x34>
 801dbd0:	f8d0 0080 	ldr.w	r0, [r0, #128]	; 0x80
 801dbd4:	e7ee      	b.n	801dbb4 <_ZN8touchgfx8LCD16bpp10blitCopyL8EPKhS2_RKNS_4RectES5_h+0x34>
 801dbd6:	2e03      	cmp	r6, #3
 801dbd8:	d82b      	bhi.n	801dc32 <_ZN8touchgfx8LCD16bpp10blitCopyL8EPKhS2_RKNS_4RectES5_h+0xb2>
 801dbda:	e8df f006 	tbb	[pc, r6]
 801dbde:	0702      	.short	0x0702
 801dbe0:	100e      	.short	0x100e
 801dbe2:	9504      	str	r5, [sp, #16]
 801dbe4:	4620      	mov	r0, r4
 801dbe6:	bcf0      	pop	{r4, r5, r6, r7}
 801dbe8:	f7ff bd06 	b.w	801d5f8 <_ZN8touchgfx8LCD16bpp19blitCopyL8_ARGB8888EPKhS2_RKNS_4RectES5_h>
 801dbec:	6f80      	ldr	r0, [r0, #120]	; 0x78
 801dbee:	b300      	cbz	r0, 801dc32 <_ZN8touchgfx8LCD16bpp10blitCopyL8EPKhS2_RKNS_4RectES5_h+0xb2>
 801dbf0:	6806      	ldr	r6, [r0, #0]
 801dbf2:	e9cd 3504 	strd	r3, r5, [sp, #16]
 801dbf6:	68f5      	ldr	r5, [r6, #12]
 801dbf8:	e7e2      	b.n	801dbc0 <_ZN8touchgfx8LCD16bpp10blitCopyL8EPKhS2_RKNS_4RectES5_h+0x40>
 801dbfa:	6fc0      	ldr	r0, [r0, #124]	; 0x7c
 801dbfc:	e7f7      	b.n	801dbee <_ZN8touchgfx8LCD16bpp10blitCopyL8EPKhS2_RKNS_4RectES5_h+0x6e>
 801dbfe:	f8d0 0080 	ldr.w	r0, [r0, #128]	; 0x80
 801dc02:	e7f4      	b.n	801dbee <_ZN8touchgfx8LCD16bpp10blitCopyL8EPKhS2_RKNS_4RectES5_h+0x6e>
 801dc04:	2e03      	cmp	r6, #3
 801dc06:	d814      	bhi.n	801dc32 <_ZN8touchgfx8LCD16bpp10blitCopyL8EPKhS2_RKNS_4RectES5_h+0xb2>
 801dc08:	e8df f006 	tbb	[pc, r6]
 801dc0c:	100e0702 	.word	0x100e0702
 801dc10:	9504      	str	r5, [sp, #16]
 801dc12:	4620      	mov	r0, r4
 801dc14:	bcf0      	pop	{r4, r5, r6, r7}
 801dc16:	f7ff bea1 	b.w	801d95c <_ZN8touchgfx8LCD16bpp17blitCopyL8_RGB888EPKhS2_RKNS_4RectES5_h>
 801dc1a:	6f80      	ldr	r0, [r0, #120]	; 0x78
 801dc1c:	b148      	cbz	r0, 801dc32 <_ZN8touchgfx8LCD16bpp10blitCopyL8EPKhS2_RKNS_4RectES5_h+0xb2>
 801dc1e:	6806      	ldr	r6, [r0, #0]
 801dc20:	e9cd 3504 	strd	r3, r5, [sp, #16]
 801dc24:	6935      	ldr	r5, [r6, #16]
 801dc26:	e7cb      	b.n	801dbc0 <_ZN8touchgfx8LCD16bpp10blitCopyL8EPKhS2_RKNS_4RectES5_h+0x40>
 801dc28:	6fc0      	ldr	r0, [r0, #124]	; 0x7c
 801dc2a:	e7f7      	b.n	801dc1c <_ZN8touchgfx8LCD16bpp10blitCopyL8EPKhS2_RKNS_4RectES5_h+0x9c>
 801dc2c:	f8d0 0080 	ldr.w	r0, [r0, #128]	; 0x80
 801dc30:	e7f4      	b.n	801dc1c <_ZN8touchgfx8LCD16bpp10blitCopyL8EPKhS2_RKNS_4RectES5_h+0x9c>
 801dc32:	bcf0      	pop	{r4, r5, r6, r7}
 801dc34:	4770      	bx	lr
	...

0801dc38 <_ZN8touchgfx8LCD16bpp21blitCopyAlphaPerPixelEPKtPKhRKNS_4RectES7_h>:
 801dc38:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 801dc3c:	4604      	mov	r4, r0
 801dc3e:	b087      	sub	sp, #28
 801dc40:	6810      	ldr	r0, [r2, #0]
 801dc42:	f89d a040 	ldrb.w	sl, [sp, #64]	; 0x40
 801dc46:	f8df 9238 	ldr.w	r9, [pc, #568]	; 801de80 <_ZN8touchgfx8LCD16bpp21blitCopyAlphaPerPixelEPKtPKhRKNS_4RectES7_h+0x248>
 801dc4a:	460e      	mov	r6, r1
 801dc4c:	6851      	ldr	r1, [r2, #4]
 801dc4e:	ad02      	add	r5, sp, #8
 801dc50:	c503      	stmia	r5!, {r0, r1}
 801dc52:	6818      	ldr	r0, [r3, #0]
 801dc54:	6859      	ldr	r1, [r3, #4]
 801dc56:	ad04      	add	r5, sp, #16
 801dc58:	4617      	mov	r7, r2
 801dc5a:	c503      	stmia	r5!, {r0, r1}
 801dc5c:	a802      	add	r0, sp, #8
 801dc5e:	f7f7 f9b3 	bl	8014fc8 <_ZN8touchgfx21DisplayTransformation29transformDisplayToFrameBufferERNS_4RectE>
 801dc62:	4639      	mov	r1, r7
 801dc64:	a804      	add	r0, sp, #16
 801dc66:	f7f7 f9f3 	bl	8015050 <_ZN8touchgfx21DisplayTransformation29transformDisplayToFrameBufferERNS_4RectERKS1_>
 801dc6a:	f9bd 2010 	ldrsh.w	r2, [sp, #16]
 801dc6e:	f9bd 3012 	ldrsh.w	r3, [sp, #18]
 801dc72:	f8bd 100c 	ldrh.w	r1, [sp, #12]
 801dc76:	f9bd 8014 	ldrsh.w	r8, [sp, #20]
 801dc7a:	f9bd 5016 	ldrsh.w	r5, [sp, #22]
 801dc7e:	fb11 2103 	smlabb	r1, r1, r3, r2
 801dc82:	eb04 0441 	add.w	r4, r4, r1, lsl #1
 801dc86:	440e      	add	r6, r1
 801dc88:	f8bd 1008 	ldrh.w	r1, [sp, #8]
 801dc8c:	440a      	add	r2, r1
 801dc8e:	f8ad 2010 	strh.w	r2, [sp, #16]
 801dc92:	f8bd 200a 	ldrh.w	r2, [sp, #10]
 801dc96:	4413      	add	r3, r2
 801dc98:	f8ad 3012 	strh.w	r3, [sp, #18]
 801dc9c:	4b77      	ldr	r3, [pc, #476]	; (801de7c <_ZN8touchgfx8LCD16bpp21blitCopyAlphaPerPixelEPKtPKhRKNS_4RectES7_h+0x244>)
 801dc9e:	6818      	ldr	r0, [r3, #0]
 801dca0:	6803      	ldr	r3, [r0, #0]
 801dca2:	6a9b      	ldr	r3, [r3, #40]	; 0x28
 801dca4:	4798      	blx	r3
 801dca6:	f8b9 b000 	ldrh.w	fp, [r9]
 801dcaa:	f9bd 3012 	ldrsh.w	r3, [sp, #18]
 801dcae:	f9bd 2010 	ldrsh.w	r2, [sp, #16]
 801dcb2:	fb0b 2303 	mla	r3, fp, r3, r2
 801dcb6:	eb00 0043 	add.w	r0, r0, r3, lsl #1
 801dcba:	f1ba 0fff 	cmp.w	sl, #255	; 0xff
 801dcbe:	ea4f 0348 	mov.w	r3, r8, lsl #1
 801dcc2:	fb05 f50b 	mul.w	r5, r5, fp
 801dcc6:	9300      	str	r3, [sp, #0]
 801dcc8:	d069      	beq.n	801dd9e <_ZN8touchgfx8LCD16bpp21blitCopyAlphaPerPixelEPKtPKhRKNS_4RectES7_h+0x166>
 801dcca:	eb00 0b45 	add.w	fp, r0, r5, lsl #1
 801dcce:	4558      	cmp	r0, fp
 801dcd0:	f080 80cc 	bcs.w	801de6c <_ZN8touchgfx8LCD16bpp21blitCopyAlphaPerPixelEPKtPKhRKNS_4RectES7_h+0x234>
 801dcd4:	9b00      	ldr	r3, [sp, #0]
 801dcd6:	18c3      	adds	r3, r0, r3
 801dcd8:	9301      	str	r3, [sp, #4]
 801dcda:	4631      	mov	r1, r6
 801dcdc:	9b01      	ldr	r3, [sp, #4]
 801dcde:	4298      	cmp	r0, r3
 801dce0:	d24f      	bcs.n	801dd82 <_ZN8touchgfx8LCD16bpp21blitCopyAlphaPerPixelEPKtPKhRKNS_4RectES7_h+0x14a>
 801dce2:	f811 2b01 	ldrb.w	r2, [r1], #1
 801dce6:	2a00      	cmp	r2, #0
 801dce8:	d048      	beq.n	801dd7c <_ZN8touchgfx8LCD16bpp21blitCopyAlphaPerPixelEPKtPKhRKNS_4RectES7_h+0x144>
 801dcea:	fb0a f202 	mul.w	r2, sl, r2
 801dcee:	1c53      	adds	r3, r2, #1
 801dcf0:	eb03 2312 	add.w	r3, r3, r2, lsr #8
 801dcf4:	121b      	asrs	r3, r3, #8
 801dcf6:	d041      	beq.n	801dd7c <_ZN8touchgfx8LCD16bpp21blitCopyAlphaPerPixelEPKtPKhRKNS_4RectES7_h+0x144>
 801dcf8:	8802      	ldrh	r2, [r0, #0]
 801dcfa:	f8b4 c000 	ldrh.w	ip, [r4]
 801dcfe:	b29e      	uxth	r6, r3
 801dd00:	1215      	asrs	r5, r2, #8
 801dd02:	43db      	mvns	r3, r3
 801dd04:	b2db      	uxtb	r3, r3
 801dd06:	ea4f 272c 	mov.w	r7, ip, asr #8
 801dd0a:	f005 05f8 	and.w	r5, r5, #248	; 0xf8
 801dd0e:	fb15 f503 	smulbb	r5, r5, r3
 801dd12:	ea4f 0ee2 	mov.w	lr, r2, asr #3
 801dd16:	f007 07f8 	and.w	r7, r7, #248	; 0xf8
 801dd1a:	00d2      	lsls	r2, r2, #3
 801dd1c:	fb07 5706 	mla	r7, r7, r6, r5
 801dd20:	f00e 0efc 	and.w	lr, lr, #252	; 0xfc
 801dd24:	ea4f 05ec 	mov.w	r5, ip, asr #3
 801dd28:	b2d2      	uxtb	r2, r2
 801dd2a:	ea4f 0ccc 	mov.w	ip, ip, lsl #3
 801dd2e:	b2bf      	uxth	r7, r7
 801dd30:	fb1e fe03 	smulbb	lr, lr, r3
 801dd34:	f005 05fc 	and.w	r5, r5, #252	; 0xfc
 801dd38:	fa5f fc8c 	uxtb.w	ip, ip
 801dd3c:	fb12 f203 	smulbb	r2, r2, r3
 801dd40:	fb05 e506 	mla	r5, r5, r6, lr
 801dd44:	fb0c 2c06 	mla	ip, ip, r6, r2
 801dd48:	f107 0e01 	add.w	lr, r7, #1
 801dd4c:	fa1f fc8c 	uxth.w	ip, ip
 801dd50:	eb0e 2717 	add.w	r7, lr, r7, lsr #8
 801dd54:	f407 4e78 	and.w	lr, r7, #63488	; 0xf800
 801dd58:	f10c 0701 	add.w	r7, ip, #1
 801dd5c:	eb07 271c 	add.w	r7, r7, ip, lsr #8
 801dd60:	b2ad      	uxth	r5, r5
 801dd62:	f3c7 27c4 	ubfx	r7, r7, #11, #5
 801dd66:	ea47 070e 	orr.w	r7, r7, lr
 801dd6a:	f105 0e01 	add.w	lr, r5, #1
 801dd6e:	eb0e 2515 	add.w	r5, lr, r5, lsr #8
 801dd72:	096d      	lsrs	r5, r5, #5
 801dd74:	f405 65fc 	and.w	r5, r5, #2016	; 0x7e0
 801dd78:	432f      	orrs	r7, r5
 801dd7a:	8007      	strh	r7, [r0, #0]
 801dd7c:	3002      	adds	r0, #2
 801dd7e:	3402      	adds	r4, #2
 801dd80:	e7ac      	b.n	801dcdc <_ZN8touchgfx8LCD16bpp21blitCopyAlphaPerPixelEPKtPKhRKNS_4RectES7_h+0xa4>
 801dd82:	f8b9 3000 	ldrh.w	r3, [r9]
 801dd86:	f9bd 600c 	ldrsh.w	r6, [sp, #12]
 801dd8a:	eba3 0308 	sub.w	r3, r3, r8
 801dd8e:	eba6 0608 	sub.w	r6, r6, r8
 801dd92:	eb04 0446 	add.w	r4, r4, r6, lsl #1
 801dd96:	eb00 0043 	add.w	r0, r0, r3, lsl #1
 801dd9a:	440e      	add	r6, r1
 801dd9c:	e797      	b.n	801dcce <_ZN8touchgfx8LCD16bpp21blitCopyAlphaPerPixelEPKtPKhRKNS_4RectES7_h+0x96>
 801dd9e:	eb00 0545 	add.w	r5, r0, r5, lsl #1
 801dda2:	42a8      	cmp	r0, r5
 801dda4:	d262      	bcs.n	801de6c <_ZN8touchgfx8LCD16bpp21blitCopyAlphaPerPixelEPKtPKhRKNS_4RectES7_h+0x234>
 801dda6:	9b00      	ldr	r3, [sp, #0]
 801dda8:	4631      	mov	r1, r6
 801ddaa:	eb00 0b03 	add.w	fp, r0, r3
 801ddae:	4558      	cmp	r0, fp
 801ddb0:	d24e      	bcs.n	801de50 <_ZN8touchgfx8LCD16bpp21blitCopyAlphaPerPixelEPKtPKhRKNS_4RectES7_h+0x218>
 801ddb2:	f811 3b01 	ldrb.w	r3, [r1], #1
 801ddb6:	b12b      	cbz	r3, 801ddc4 <_ZN8touchgfx8LCD16bpp21blitCopyAlphaPerPixelEPKtPKhRKNS_4RectES7_h+0x18c>
 801ddb8:	2bff      	cmp	r3, #255	; 0xff
 801ddba:	f8b4 e000 	ldrh.w	lr, [r4]
 801ddbe:	d104      	bne.n	801ddca <_ZN8touchgfx8LCD16bpp21blitCopyAlphaPerPixelEPKtPKhRKNS_4RectES7_h+0x192>
 801ddc0:	f8a0 e000 	strh.w	lr, [r0]
 801ddc4:	3002      	adds	r0, #2
 801ddc6:	3402      	adds	r4, #2
 801ddc8:	e7f1      	b.n	801ddae <_ZN8touchgfx8LCD16bpp21blitCopyAlphaPerPixelEPKtPKhRKNS_4RectES7_h+0x176>
 801ddca:	8802      	ldrh	r2, [r0, #0]
 801ddcc:	b29f      	uxth	r7, r3
 801ddce:	1216      	asrs	r6, r2, #8
 801ddd0:	43db      	mvns	r3, r3
 801ddd2:	b2db      	uxtb	r3, r3
 801ddd4:	ea4f 2c2e 	mov.w	ip, lr, asr #8
 801ddd8:	f006 06f8 	and.w	r6, r6, #248	; 0xf8
 801dddc:	fb16 f603 	smulbb	r6, r6, r3
 801dde0:	ea4f 0ae2 	mov.w	sl, r2, asr #3
 801dde4:	f00c 0cf8 	and.w	ip, ip, #248	; 0xf8
 801dde8:	00d2      	lsls	r2, r2, #3
 801ddea:	fb0c 6c07 	mla	ip, ip, r7, r6
 801ddee:	b2d2      	uxtb	r2, r2
 801ddf0:	ea4f 06ee 	mov.w	r6, lr, asr #3
 801ddf4:	f00a 0afc 	and.w	sl, sl, #252	; 0xfc
 801ddf8:	ea4f 0ece 	mov.w	lr, lr, lsl #3
 801ddfc:	fb1a fa03 	smulbb	sl, sl, r3
 801de00:	fa1f fc8c 	uxth.w	ip, ip
 801de04:	fb12 f303 	smulbb	r3, r2, r3
 801de08:	f006 06fc 	and.w	r6, r6, #252	; 0xfc
 801de0c:	fa5f fe8e 	uxtb.w	lr, lr
 801de10:	fb06 a607 	mla	r6, r6, r7, sl
 801de14:	f10c 0201 	add.w	r2, ip, #1
 801de18:	fb0e 3307 	mla	r3, lr, r7, r3
 801de1c:	b2b6      	uxth	r6, r6
 801de1e:	b29b      	uxth	r3, r3
 801de20:	eb02 2c1c 	add.w	ip, r2, ip, lsr #8
 801de24:	f40c 4278 	and.w	r2, ip, #63488	; 0xf800
 801de28:	f106 0a01 	add.w	sl, r6, #1
 801de2c:	f103 0c01 	add.w	ip, r3, #1
 801de30:	eb0c 2c13 	add.w	ip, ip, r3, lsr #8
 801de34:	eb0a 2616 	add.w	r6, sl, r6, lsr #8
 801de38:	f3cc 2cc4 	ubfx	ip, ip, #11, #5
 801de3c:	0976      	lsrs	r6, r6, #5
 801de3e:	ea4c 0c02 	orr.w	ip, ip, r2
 801de42:	f406 66fc 	and.w	r6, r6, #2016	; 0x7e0
 801de46:	ea4c 0c06 	orr.w	ip, ip, r6
 801de4a:	f8a0 c000 	strh.w	ip, [r0]
 801de4e:	e7b9      	b.n	801ddc4 <_ZN8touchgfx8LCD16bpp21blitCopyAlphaPerPixelEPKtPKhRKNS_4RectES7_h+0x18c>
 801de50:	f8b9 3000 	ldrh.w	r3, [r9]
 801de54:	f9bd 600c 	ldrsh.w	r6, [sp, #12]
 801de58:	eba3 0308 	sub.w	r3, r3, r8
 801de5c:	eba6 0608 	sub.w	r6, r6, r8
 801de60:	eb04 0446 	add.w	r4, r4, r6, lsl #1
 801de64:	eb00 0043 	add.w	r0, r0, r3, lsl #1
 801de68:	440e      	add	r6, r1
 801de6a:	e79a      	b.n	801dda2 <_ZN8touchgfx8LCD16bpp21blitCopyAlphaPerPixelEPKtPKhRKNS_4RectES7_h+0x16a>
 801de6c:	4b03      	ldr	r3, [pc, #12]	; (801de7c <_ZN8touchgfx8LCD16bpp21blitCopyAlphaPerPixelEPKtPKhRKNS_4RectES7_h+0x244>)
 801de6e:	6818      	ldr	r0, [r3, #0]
 801de70:	6803      	ldr	r3, [r0, #0]
 801de72:	6adb      	ldr	r3, [r3, #44]	; 0x2c
 801de74:	4798      	blx	r3
 801de76:	b007      	add	sp, #28
 801de78:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
 801de7c:	20012f24 	.word	0x20012f24
 801de80:	20012f1e 	.word	0x20012f1e

0801de84 <_ZN8touchgfx8LCD16bpp17drawPartialBitmapERKNS_6BitmapEssRKNS_4RectEhb>:
 801de84:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 801de88:	b089      	sub	sp, #36	; 0x24
 801de8a:	4682      	mov	sl, r0
 801de8c:	f89d 604c 	ldrb.w	r6, [sp, #76]	; 0x4c
 801de90:	9c12      	ldr	r4, [sp, #72]	; 0x48
 801de92:	460f      	mov	r7, r1
 801de94:	4691      	mov	r9, r2
 801de96:	4698      	mov	r8, r3
 801de98:	2e00      	cmp	r6, #0
 801de9a:	d03d      	beq.n	801df18 <_ZN8touchgfx8LCD16bpp17drawPartialBitmapERKNS_6BitmapEssRKNS_4RectEhb+0x94>
 801de9c:	4608      	mov	r0, r1
 801de9e:	f7fa fe59 	bl	8018b54 <_ZNK8touchgfx6Bitmap8getWidthEv>
 801dea2:	4605      	mov	r5, r0
 801dea4:	4638      	mov	r0, r7
 801dea6:	f7fa fe89 	bl	8018bbc <_ZNK8touchgfx6Bitmap9getHeightEv>
 801deaa:	f8ad 000e 	strh.w	r0, [sp, #14]
 801deae:	4638      	mov	r0, r7
 801deb0:	f8ad 9008 	strh.w	r9, [sp, #8]
 801deb4:	f8ad 500c 	strh.w	r5, [sp, #12]
 801deb8:	f8ad 800a 	strh.w	r8, [sp, #10]
 801debc:	f7fa ff36 	bl	8018d2c <_ZNK8touchgfx6Bitmap7getDataEv>
 801dec0:	4605      	mov	r5, r0
 801dec2:	4638      	mov	r0, r7
 801dec4:	f7fa ff62 	bl	8018d8c <_ZNK8touchgfx6Bitmap12getExtraDataEv>
 801dec8:	4681      	mov	r9, r0
 801deca:	4638      	mov	r0, r7
 801decc:	f7fa ffb2 	bl	8018e34 <_ZNK8touchgfx6Bitmap9getFormatEv>
 801ded0:	280b      	cmp	r0, #11
 801ded2:	d821      	bhi.n	801df18 <_ZN8touchgfx8LCD16bpp17drawPartialBitmapERKNS_6BitmapEssRKNS_4RectEhb+0x94>
 801ded4:	e8df f000 	tbb	[pc, r0]
 801ded8:	2006aebe 	.word	0x2006aebe
 801dedc:	20202020 	.word	0x20202020
 801dee0:	b5202020 	.word	0xb5202020
 801dee4:	4bb0      	ldr	r3, [pc, #704]	; (801e1a8 <_ZN8touchgfx8LCD16bpp17drawPartialBitmapERKNS_6BitmapEssRKNS_4RectEhb+0x324>)
 801dee6:	6818      	ldr	r0, [r3, #0]
 801dee8:	6803      	ldr	r3, [r0, #0]
 801deea:	6b9b      	ldr	r3, [r3, #56]	; 0x38
 801deec:	4798      	blx	r3
 801deee:	2eff      	cmp	r6, #255	; 0xff
 801def0:	d101      	bne.n	801def6 <_ZN8touchgfx8LCD16bpp17drawPartialBitmapERKNS_6BitmapEssRKNS_4RectEhb+0x72>
 801def2:	0683      	lsls	r3, r0, #26
 801def4:	d506      	bpl.n	801df04 <_ZN8touchgfx8LCD16bpp17drawPartialBitmapERKNS_6BitmapEssRKNS_4RectEhb+0x80>
 801def6:	4633      	mov	r3, r6
 801def8:	4622      	mov	r2, r4
 801defa:	a902      	add	r1, sp, #8
 801defc:	4628      	mov	r0, r5
 801defe:	f7ff f909 	bl	801d114 <_ZN8touchgfx8LCD16bpp16blitCopyARGB8888EPKmRKNS_4RectES5_h>
 801df02:	e009      	b.n	801df18 <_ZN8touchgfx8LCD16bpp17drawPartialBitmapERKNS_6BitmapEssRKNS_4RectEhb+0x94>
 801df04:	4638      	mov	r0, r7
 801df06:	f7fa fed9 	bl	8018cbc <_ZNK8touchgfx6Bitmap20hasTransparentPixelsEv>
 801df0a:	b940      	cbnz	r0, 801df1e <_ZN8touchgfx8LCD16bpp17drawPartialBitmapERKNS_6BitmapEssRKNS_4RectEhb+0x9a>
 801df0c:	4623      	mov	r3, r4
 801df0e:	aa02      	add	r2, sp, #8
 801df10:	4629      	mov	r1, r5
 801df12:	4650      	mov	r0, sl
 801df14:	f7ff f9e4 	bl	801d2e0 <_ZNK8touchgfx8LCD16bpp21blitCopyARGB8888SolidEPKmRKNS_4RectES5_>
 801df18:	b009      	add	sp, #36	; 0x24
 801df1a:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
 801df1e:	f10d 0818 	add.w	r8, sp, #24
 801df22:	4639      	mov	r1, r7
 801df24:	4640      	mov	r0, r8
 801df26:	f7fa fe7d 	bl	8018c24 <_ZNK8touchgfx6Bitmap12getSolidRectEv>
 801df2a:	e898 0003 	ldmia.w	r8, {r0, r1}
 801df2e:	af04      	add	r7, sp, #16
 801df30:	e887 0003 	stmia.w	r7, {r0, r1}
 801df34:	4638      	mov	r0, r7
 801df36:	4621      	mov	r1, r4
 801df38:	f7f2 f8e8 	bl	801010c <_ZN8touchgfx4RectaNERKS0_>
 801df3c:	4638      	mov	r0, r7
 801df3e:	f7f2 f928 	bl	8010192 <_ZNK8touchgfx4Rect7isEmptyEv>
 801df42:	2800      	cmp	r0, #0
 801df44:	d1d7      	bne.n	801def6 <_ZN8touchgfx8LCD16bpp17drawPartialBitmapERKNS_6BitmapEssRKNS_4RectEhb+0x72>
 801df46:	f9bd 3012 	ldrsh.w	r3, [sp, #18]
 801df4a:	f9b4 2002 	ldrsh.w	r2, [r4, #2]
 801df4e:	4293      	cmp	r3, r2
 801df50:	dd12      	ble.n	801df78 <_ZN8touchgfx8LCD16bpp17drawPartialBitmapERKNS_6BitmapEssRKNS_4RectEhb+0xf4>
 801df52:	1a9b      	subs	r3, r3, r2
 801df54:	f9b4 0000 	ldrsh.w	r0, [r4]
 801df58:	f9b4 1004 	ldrsh.w	r1, [r4, #4]
 801df5c:	f8ad 0018 	strh.w	r0, [sp, #24]
 801df60:	f8ad 201a 	strh.w	r2, [sp, #26]
 801df64:	f8ad 101c 	strh.w	r1, [sp, #28]
 801df68:	f8ad 301e 	strh.w	r3, [sp, #30]
 801df6c:	4642      	mov	r2, r8
 801df6e:	4633      	mov	r3, r6
 801df70:	a902      	add	r1, sp, #8
 801df72:	4628      	mov	r0, r5
 801df74:	f7ff f8ce 	bl	801d114 <_ZN8touchgfx8LCD16bpp16blitCopyARGB8888EPKmRKNS_4RectES5_h>
 801df78:	f9bd 3010 	ldrsh.w	r3, [sp, #16]
 801df7c:	f9b4 2000 	ldrsh.w	r2, [r4]
 801df80:	4293      	cmp	r3, r2
 801df82:	dd12      	ble.n	801dfaa <_ZN8touchgfx8LCD16bpp17drawPartialBitmapERKNS_6BitmapEssRKNS_4RectEhb+0x126>
 801df84:	1a9b      	subs	r3, r3, r2
 801df86:	f9bd 0012 	ldrsh.w	r0, [sp, #18]
 801df8a:	f9bd 1016 	ldrsh.w	r1, [sp, #22]
 801df8e:	f8ad 2018 	strh.w	r2, [sp, #24]
 801df92:	f8ad 001a 	strh.w	r0, [sp, #26]
 801df96:	f8ad 301c 	strh.w	r3, [sp, #28]
 801df9a:	f8ad 101e 	strh.w	r1, [sp, #30]
 801df9e:	23ff      	movs	r3, #255	; 0xff
 801dfa0:	4642      	mov	r2, r8
 801dfa2:	a902      	add	r1, sp, #8
 801dfa4:	4628      	mov	r0, r5
 801dfa6:	f7ff f8b5 	bl	801d114 <_ZN8touchgfx8LCD16bpp16blitCopyARGB8888EPKmRKNS_4RectES5_h>
 801dfaa:	463b      	mov	r3, r7
 801dfac:	aa02      	add	r2, sp, #8
 801dfae:	4629      	mov	r1, r5
 801dfb0:	4650      	mov	r0, sl
 801dfb2:	f7ff f995 	bl	801d2e0 <_ZNK8touchgfx8LCD16bpp21blitCopyARGB8888SolidEPKmRKNS_4RectES5_>
 801dfb6:	88a2      	ldrh	r2, [r4, #4]
 801dfb8:	8823      	ldrh	r3, [r4, #0]
 801dfba:	f8bd 1014 	ldrh.w	r1, [sp, #20]
 801dfbe:	4413      	add	r3, r2
 801dfc0:	f8bd 2010 	ldrh.w	r2, [sp, #16]
 801dfc4:	440a      	add	r2, r1
 801dfc6:	b29b      	uxth	r3, r3
 801dfc8:	b292      	uxth	r2, r2
 801dfca:	b211      	sxth	r1, r2
 801dfcc:	b218      	sxth	r0, r3
 801dfce:	4288      	cmp	r0, r1
 801dfd0:	dd12      	ble.n	801dff8 <_ZN8touchgfx8LCD16bpp17drawPartialBitmapERKNS_6BitmapEssRKNS_4RectEhb+0x174>
 801dfd2:	1a9b      	subs	r3, r3, r2
 801dfd4:	f9bd 0016 	ldrsh.w	r0, [sp, #22]
 801dfd8:	f9bd 6012 	ldrsh.w	r6, [sp, #18]
 801dfdc:	f8ad 1018 	strh.w	r1, [sp, #24]
 801dfe0:	f8ad 301c 	strh.w	r3, [sp, #28]
 801dfe4:	f8ad 001e 	strh.w	r0, [sp, #30]
 801dfe8:	23ff      	movs	r3, #255	; 0xff
 801dfea:	4642      	mov	r2, r8
 801dfec:	a902      	add	r1, sp, #8
 801dfee:	4628      	mov	r0, r5
 801dff0:	f8ad 601a 	strh.w	r6, [sp, #26]
 801dff4:	f7ff f88e 	bl	801d114 <_ZN8touchgfx8LCD16bpp16blitCopyARGB8888EPKmRKNS_4RectES5_h>
 801dff8:	88e2      	ldrh	r2, [r4, #6]
 801dffa:	8863      	ldrh	r3, [r4, #2]
 801dffc:	f8bd 1016 	ldrh.w	r1, [sp, #22]
 801e000:	4413      	add	r3, r2
 801e002:	f8bd 2012 	ldrh.w	r2, [sp, #18]
 801e006:	440a      	add	r2, r1
 801e008:	b29b      	uxth	r3, r3
 801e00a:	b292      	uxth	r2, r2
 801e00c:	b211      	sxth	r1, r2
 801e00e:	b218      	sxth	r0, r3
 801e010:	4288      	cmp	r0, r1
 801e012:	dd81      	ble.n	801df18 <_ZN8touchgfx8LCD16bpp17drawPartialBitmapERKNS_6BitmapEssRKNS_4RectEhb+0x94>
 801e014:	1a9b      	subs	r3, r3, r2
 801e016:	f9b4 6000 	ldrsh.w	r6, [r4]
 801e01a:	f9b4 0004 	ldrsh.w	r0, [r4, #4]
 801e01e:	f8ad 301e 	strh.w	r3, [sp, #30]
 801e022:	f8ad 6018 	strh.w	r6, [sp, #24]
 801e026:	f8ad 101a 	strh.w	r1, [sp, #26]
 801e02a:	f8ad 001c 	strh.w	r0, [sp, #28]
 801e02e:	23ff      	movs	r3, #255	; 0xff
 801e030:	4642      	mov	r2, r8
 801e032:	e762      	b.n	801defa <_ZN8touchgfx8LCD16bpp17drawPartialBitmapERKNS_6BitmapEssRKNS_4RectEhb+0x76>
 801e034:	4633      	mov	r3, r6
 801e036:	4622      	mov	r2, r4
 801e038:	a902      	add	r1, sp, #8
 801e03a:	4628      	mov	r0, r5
 801e03c:	f7ff f9c0 	bl	801d3c0 <_ZN8touchgfx8LCD16bpp14blitCopyRGB888EPKhRKNS_4RectES5_h>
 801e040:	e76a      	b.n	801df18 <_ZN8touchgfx8LCD16bpp17drawPartialBitmapERKNS_6BitmapEssRKNS_4RectEhb+0x94>
 801e042:	e9cd 4600 	strd	r4, r6, [sp]
 801e046:	ab02      	add	r3, sp, #8
 801e048:	464a      	mov	r2, r9
 801e04a:	4629      	mov	r1, r5
 801e04c:	4650      	mov	r0, sl
 801e04e:	f7ff fd97 	bl	801db80 <_ZN8touchgfx8LCD16bpp10blitCopyL8EPKhS2_RKNS_4RectES5_h>
 801e052:	e761      	b.n	801df18 <_ZN8touchgfx8LCD16bpp17drawPartialBitmapERKNS_6BitmapEssRKNS_4RectEhb+0x94>
 801e054:	4638      	mov	r0, r7
 801e056:	f7fa fe31 	bl	8018cbc <_ZNK8touchgfx6Bitmap20hasTransparentPixelsEv>
 801e05a:	b950      	cbnz	r0, 801e072 <_ZN8touchgfx8LCD16bpp17drawPartialBitmapERKNS_6BitmapEssRKNS_4RectEhb+0x1ee>
 801e05c:	e9cd 6000 	strd	r6, r0, [sp]
 801e060:	f8da 3000 	ldr.w	r3, [sl]
 801e064:	aa02      	add	r2, sp, #8
 801e066:	68de      	ldr	r6, [r3, #12]
 801e068:	4629      	mov	r1, r5
 801e06a:	4623      	mov	r3, r4
 801e06c:	4650      	mov	r0, sl
 801e06e:	47b0      	blx	r6
 801e070:	e752      	b.n	801df18 <_ZN8touchgfx8LCD16bpp17drawPartialBitmapERKNS_6BitmapEssRKNS_4RectEhb+0x94>
 801e072:	f10d 0818 	add.w	r8, sp, #24
 801e076:	4639      	mov	r1, r7
 801e078:	4640      	mov	r0, r8
 801e07a:	f7fa fdd3 	bl	8018c24 <_ZNK8touchgfx6Bitmap12getSolidRectEv>
 801e07e:	e898 0003 	ldmia.w	r8, {r0, r1}
 801e082:	af04      	add	r7, sp, #16
 801e084:	e887 0003 	stmia.w	r7, {r0, r1}
 801e088:	4638      	mov	r0, r7
 801e08a:	4621      	mov	r1, r4
 801e08c:	f7f2 f83e 	bl	801010c <_ZN8touchgfx4RectaNERKS0_>
 801e090:	4638      	mov	r0, r7
 801e092:	f7f2 f87e 	bl	8010192 <_ZNK8touchgfx4Rect7isEmptyEv>
 801e096:	b138      	cbz	r0, 801e0a8 <_ZN8touchgfx8LCD16bpp17drawPartialBitmapERKNS_6BitmapEssRKNS_4RectEhb+0x224>
 801e098:	9600      	str	r6, [sp, #0]
 801e09a:	4623      	mov	r3, r4
 801e09c:	aa02      	add	r2, sp, #8
 801e09e:	4649      	mov	r1, r9
 801e0a0:	4628      	mov	r0, r5
 801e0a2:	f7ff fdc9 	bl	801dc38 <_ZN8touchgfx8LCD16bpp21blitCopyAlphaPerPixelEPKtPKhRKNS_4RectES7_h>
 801e0a6:	e737      	b.n	801df18 <_ZN8touchgfx8LCD16bpp17drawPartialBitmapERKNS_6BitmapEssRKNS_4RectEhb+0x94>
 801e0a8:	e9cd 6000 	strd	r6, r0, [sp]
 801e0ac:	f8da 3000 	ldr.w	r3, [sl]
 801e0b0:	aa02      	add	r2, sp, #8
 801e0b2:	f8d3 b00c 	ldr.w	fp, [r3, #12]
 801e0b6:	4629      	mov	r1, r5
 801e0b8:	463b      	mov	r3, r7
 801e0ba:	4650      	mov	r0, sl
 801e0bc:	47d8      	blx	fp
 801e0be:	f9bd 3012 	ldrsh.w	r3, [sp, #18]
 801e0c2:	f9b4 2002 	ldrsh.w	r2, [r4, #2]
 801e0c6:	4293      	cmp	r3, r2
 801e0c8:	dd13      	ble.n	801e0f2 <_ZN8touchgfx8LCD16bpp17drawPartialBitmapERKNS_6BitmapEssRKNS_4RectEhb+0x26e>
 801e0ca:	f9b4 0000 	ldrsh.w	r0, [r4]
 801e0ce:	f9b4 1004 	ldrsh.w	r1, [r4, #4]
 801e0d2:	f8ad 0018 	strh.w	r0, [sp, #24]
 801e0d6:	1a9b      	subs	r3, r3, r2
 801e0d8:	f8ad 201a 	strh.w	r2, [sp, #26]
 801e0dc:	f8ad 101c 	strh.w	r1, [sp, #28]
 801e0e0:	f8ad 301e 	strh.w	r3, [sp, #30]
 801e0e4:	9600      	str	r6, [sp, #0]
 801e0e6:	4643      	mov	r3, r8
 801e0e8:	aa02      	add	r2, sp, #8
 801e0ea:	4649      	mov	r1, r9
 801e0ec:	4628      	mov	r0, r5
 801e0ee:	f7ff fda3 	bl	801dc38 <_ZN8touchgfx8LCD16bpp21blitCopyAlphaPerPixelEPKtPKhRKNS_4RectES7_h>
 801e0f2:	f9bd 3010 	ldrsh.w	r3, [sp, #16]
 801e0f6:	f9b4 2000 	ldrsh.w	r2, [r4]
 801e0fa:	4293      	cmp	r3, r2
 801e0fc:	dd13      	ble.n	801e126 <_ZN8touchgfx8LCD16bpp17drawPartialBitmapERKNS_6BitmapEssRKNS_4RectEhb+0x2a2>
 801e0fe:	1a9b      	subs	r3, r3, r2
 801e100:	f9bd 0012 	ldrsh.w	r0, [sp, #18]
 801e104:	f9bd 1016 	ldrsh.w	r1, [sp, #22]
 801e108:	f8ad 2018 	strh.w	r2, [sp, #24]
 801e10c:	f8ad 001a 	strh.w	r0, [sp, #26]
 801e110:	f8ad 301c 	strh.w	r3, [sp, #28]
 801e114:	f8ad 101e 	strh.w	r1, [sp, #30]
 801e118:	9600      	str	r6, [sp, #0]
 801e11a:	4643      	mov	r3, r8
 801e11c:	aa02      	add	r2, sp, #8
 801e11e:	4649      	mov	r1, r9
 801e120:	4628      	mov	r0, r5
 801e122:	f7ff fd89 	bl	801dc38 <_ZN8touchgfx8LCD16bpp21blitCopyAlphaPerPixelEPKtPKhRKNS_4RectES7_h>
 801e126:	88a2      	ldrh	r2, [r4, #4]
 801e128:	8823      	ldrh	r3, [r4, #0]
 801e12a:	f8bd 1014 	ldrh.w	r1, [sp, #20]
 801e12e:	4413      	add	r3, r2
 801e130:	f8bd 2010 	ldrh.w	r2, [sp, #16]
 801e134:	440a      	add	r2, r1
 801e136:	b29b      	uxth	r3, r3
 801e138:	b292      	uxth	r2, r2
 801e13a:	b211      	sxth	r1, r2
 801e13c:	b218      	sxth	r0, r3
 801e13e:	4288      	cmp	r0, r1
 801e140:	dd13      	ble.n	801e16a <_ZN8touchgfx8LCD16bpp17drawPartialBitmapERKNS_6BitmapEssRKNS_4RectEhb+0x2e6>
 801e142:	1a9b      	subs	r3, r3, r2
 801e144:	f9bd 0016 	ldrsh.w	r0, [sp, #22]
 801e148:	f9bd 7012 	ldrsh.w	r7, [sp, #18]
 801e14c:	f8ad 1018 	strh.w	r1, [sp, #24]
 801e150:	f8ad 301c 	strh.w	r3, [sp, #28]
 801e154:	f8ad 001e 	strh.w	r0, [sp, #30]
 801e158:	9600      	str	r6, [sp, #0]
 801e15a:	4643      	mov	r3, r8
 801e15c:	aa02      	add	r2, sp, #8
 801e15e:	4649      	mov	r1, r9
 801e160:	4628      	mov	r0, r5
 801e162:	f8ad 701a 	strh.w	r7, [sp, #26]
 801e166:	f7ff fd67 	bl	801dc38 <_ZN8touchgfx8LCD16bpp21blitCopyAlphaPerPixelEPKtPKhRKNS_4RectES7_h>
 801e16a:	88e2      	ldrh	r2, [r4, #6]
 801e16c:	8863      	ldrh	r3, [r4, #2]
 801e16e:	f8bd 1016 	ldrh.w	r1, [sp, #22]
 801e172:	4413      	add	r3, r2
 801e174:	f8bd 2012 	ldrh.w	r2, [sp, #18]
 801e178:	440a      	add	r2, r1
 801e17a:	b29b      	uxth	r3, r3
 801e17c:	b292      	uxth	r2, r2
 801e17e:	b211      	sxth	r1, r2
 801e180:	b218      	sxth	r0, r3
 801e182:	4288      	cmp	r0, r1
 801e184:	f77f aec8 	ble.w	801df18 <_ZN8touchgfx8LCD16bpp17drawPartialBitmapERKNS_6BitmapEssRKNS_4RectEhb+0x94>
 801e188:	f9b4 7000 	ldrsh.w	r7, [r4]
 801e18c:	f9b4 0004 	ldrsh.w	r0, [r4, #4]
 801e190:	f8ad 7018 	strh.w	r7, [sp, #24]
 801e194:	1a9b      	subs	r3, r3, r2
 801e196:	f8ad 301e 	strh.w	r3, [sp, #30]
 801e19a:	f8ad 101a 	strh.w	r1, [sp, #26]
 801e19e:	f8ad 001c 	strh.w	r0, [sp, #28]
 801e1a2:	9600      	str	r6, [sp, #0]
 801e1a4:	4643      	mov	r3, r8
 801e1a6:	e779      	b.n	801e09c <_ZN8touchgfx8LCD16bpp17drawPartialBitmapERKNS_6BitmapEssRKNS_4RectEhb+0x218>
 801e1a8:	20012f24 	.word	0x20012f24

0801e1ac <_ZN8touchgfx8LCD16bpp9nextPixelEbNS_12TextRotationE>:
 801e1ac:	b180      	cbz	r0, 801e1d0 <_ZN8touchgfx8LCD16bpp9nextPixelEbNS_12TextRotationE+0x24>
 801e1ae:	2903      	cmp	r1, #3
 801e1b0:	d81c      	bhi.n	801e1ec <_ZN8touchgfx8LCD16bpp9nextPixelEbNS_12TextRotationE+0x40>
 801e1b2:	e8df f001 	tbb	[pc, r1]
 801e1b6:	1d02      	.short	0x1d02
 801e1b8:	1f08      	.short	0x1f08
 801e1ba:	4b10      	ldr	r3, [pc, #64]	; (801e1fc <_ZN8touchgfx8LCD16bpp9nextPixelEbNS_12TextRotationE+0x50>)
 801e1bc:	8818      	ldrh	r0, [r3, #0]
 801e1be:	f3c0 000e 	ubfx	r0, r0, #0, #15
 801e1c2:	4240      	negs	r0, r0
 801e1c4:	4770      	bx	lr
 801e1c6:	4b0d      	ldr	r3, [pc, #52]	; (801e1fc <_ZN8touchgfx8LCD16bpp9nextPixelEbNS_12TextRotationE+0x50>)
 801e1c8:	8818      	ldrh	r0, [r3, #0]
 801e1ca:	f3c0 000e 	ubfx	r0, r0, #0, #15
 801e1ce:	4770      	bx	lr
 801e1d0:	2903      	cmp	r1, #3
 801e1d2:	d80b      	bhi.n	801e1ec <_ZN8touchgfx8LCD16bpp9nextPixelEbNS_12TextRotationE+0x40>
 801e1d4:	a301      	add	r3, pc, #4	; (adr r3, 801e1dc <_ZN8touchgfx8LCD16bpp9nextPixelEbNS_12TextRotationE+0x30>)
 801e1d6:	f853 f021 	ldr.w	pc, [r3, r1, lsl #2]
 801e1da:	bf00      	nop
 801e1dc:	0801e1f1 	.word	0x0801e1f1
 801e1e0:	0801e1c7 	.word	0x0801e1c7
 801e1e4:	0801e1f5 	.word	0x0801e1f5
 801e1e8:	0801e1bb 	.word	0x0801e1bb
 801e1ec:	2000      	movs	r0, #0
 801e1ee:	4770      	bx	lr
 801e1f0:	2001      	movs	r0, #1
 801e1f2:	4770      	bx	lr
 801e1f4:	f04f 30ff 	mov.w	r0, #4294967295
 801e1f8:	4770      	bx	lr
 801e1fa:	bf00      	nop
 801e1fc:	20012f1e 	.word	0x20012f1e

0801e200 <_ZN8touchgfx8LCD16bpp8nextLineEbNS_12TextRotationE>:
 801e200:	b180      	cbz	r0, 801e224 <_ZN8touchgfx8LCD16bpp8nextLineEbNS_12TextRotationE+0x24>
 801e202:	2903      	cmp	r1, #3
 801e204:	d81c      	bhi.n	801e240 <_ZN8touchgfx8LCD16bpp8nextLineEbNS_12TextRotationE+0x40>
 801e206:	e8df f001 	tbb	[pc, r1]
 801e20a:	021d      	.short	0x021d
 801e20c:	071f      	.short	0x071f
 801e20e:	4b10      	ldr	r3, [pc, #64]	; (801e250 <_ZN8touchgfx8LCD16bpp8nextLineEbNS_12TextRotationE+0x50>)
 801e210:	8818      	ldrh	r0, [r3, #0]
 801e212:	f3c0 000e 	ubfx	r0, r0, #0, #15
 801e216:	4770      	bx	lr
 801e218:	4b0d      	ldr	r3, [pc, #52]	; (801e250 <_ZN8touchgfx8LCD16bpp8nextLineEbNS_12TextRotationE+0x50>)
 801e21a:	8818      	ldrh	r0, [r3, #0]
 801e21c:	f3c0 000e 	ubfx	r0, r0, #0, #15
 801e220:	4240      	negs	r0, r0
 801e222:	4770      	bx	lr
 801e224:	2903      	cmp	r1, #3
 801e226:	d80b      	bhi.n	801e240 <_ZN8touchgfx8LCD16bpp8nextLineEbNS_12TextRotationE+0x40>
 801e228:	a301      	add	r3, pc, #4	; (adr r3, 801e230 <_ZN8touchgfx8LCD16bpp8nextLineEbNS_12TextRotationE+0x30>)
 801e22a:	f853 f021 	ldr.w	pc, [r3, r1, lsl #2]
 801e22e:	bf00      	nop
 801e230:	0801e20f 	.word	0x0801e20f
 801e234:	0801e249 	.word	0x0801e249
 801e238:	0801e219 	.word	0x0801e219
 801e23c:	0801e245 	.word	0x0801e245
 801e240:	2000      	movs	r0, #0
 801e242:	4770      	bx	lr
 801e244:	2001      	movs	r0, #1
 801e246:	4770      	bx	lr
 801e248:	f04f 30ff 	mov.w	r0, #4294967295
 801e24c:	4770      	bx	lr
 801e24e:	bf00      	nop
 801e250:	20012f1e 	.word	0x20012f1e

0801e254 <_ZN8touchgfx8LCD16bpp9drawGlyphEPtNS_4RectEssttRKS2_PKNS_9GlyphNodeEPKhhNS_9colortypeEhhNS_12TextRotationE>:
 801e254:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 801e258:	b099      	sub	sp, #100	; 0x64
 801e25a:	910b      	str	r1, [sp, #44]	; 0x2c
 801e25c:	a914      	add	r1, sp, #80	; 0x50
 801e25e:	e881 000c 	stmia.w	r1, {r2, r3}
 801e262:	e9dd 2126 	ldrd	r2, r1, [sp, #152]	; 0x98
 801e266:	f9bd 308c 	ldrsh.w	r3, [sp, #140]	; 0x8c
 801e26a:	f891 900d 	ldrb.w	r9, [r1, #13]
 801e26e:	9309      	str	r3, [sp, #36]	; 0x24
 801e270:	f89d 30a4 	ldrb.w	r3, [sp, #164]	; 0xa4
 801e274:	9310      	str	r3, [sp, #64]	; 0x40
 801e276:	ea4f 1749 	mov.w	r7, r9, lsl #5
 801e27a:	f89d 30b0 	ldrb.w	r3, [sp, #176]	; 0xb0
 801e27e:	930c      	str	r3, [sp, #48]	; 0x30
 801e280:	f407 7380 	and.w	r3, r7, #256	; 0x100
 801e284:	798f      	ldrb	r7, [r1, #6]
 801e286:	f9bd 4088 	ldrsh.w	r4, [sp, #136]	; 0x88
 801e28a:	f8bd 5090 	ldrh.w	r5, [sp, #144]	; 0x90
 801e28e:	f8bd 6094 	ldrh.w	r6, [sp, #148]	; 0x94
 801e292:	f89d 80ac 	ldrb.w	r8, [sp, #172]	; 0xac
 801e296:	f89d a0b4 	ldrb.w	sl, [sp, #180]	; 0xb4
 801e29a:	431f      	orrs	r7, r3
 801e29c:	f000 8195 	beq.w	801e5ca <_ZN8touchgfx8LCD16bpp9drawGlyphEPtNS_4RectEssttRKS2_PKNS_9GlyphNodeEPKhhNS_9colortypeEhhNS_12TextRotationE+0x376>
 801e2a0:	ea4f 1909 	mov.w	r9, r9, lsl #4
 801e2a4:	f409 7380 	and.w	r3, r9, #256	; 0x100
 801e2a8:	f891 9007 	ldrb.w	r9, [r1, #7]
 801e2ac:	ea59 0903 	orrs.w	r9, r9, r3
 801e2b0:	f000 818b 	beq.w	801e5ca <_ZN8touchgfx8LCD16bpp9drawGlyphEPtNS_4RectEssttRKS2_PKNS_9GlyphNodeEPKhhNS_9colortypeEhhNS_12TextRotationE+0x376>
 801e2b4:	f991 3009 	ldrsb.w	r3, [r1, #9]
 801e2b8:	b29b      	uxth	r3, r3
 801e2ba:	2d00      	cmp	r5, #0
 801e2bc:	f000 812e 	beq.w	801e51c <_ZN8touchgfx8LCD16bpp9drawGlyphEPtNS_4RectEssttRKS2_PKNS_9GlyphNodeEPKhhNS_9colortypeEhhNS_12TextRotationE+0x2c8>
 801e2c0:	1aed      	subs	r5, r5, r3
 801e2c2:	b2ad      	uxth	r5, r5
 801e2c4:	042b      	lsls	r3, r5, #16
 801e2c6:	d502      	bpl.n	801e2ce <_ZN8touchgfx8LCD16bpp9drawGlyphEPtNS_4RectEssttRKS2_PKNS_9GlyphNodeEPKhhNS_9colortypeEhhNS_12TextRotationE+0x7a>
 801e2c8:	1b64      	subs	r4, r4, r5
 801e2ca:	b224      	sxth	r4, r4
 801e2cc:	2500      	movs	r5, #0
 801e2ce:	f9b2 1000 	ldrsh.w	r1, [r2]
 801e2d2:	f8cd 9028 	str.w	r9, [sp, #40]	; 0x28
 801e2d6:	428c      	cmp	r4, r1
 801e2d8:	b28b      	uxth	r3, r1
 801e2da:	bfbf      	itttt	lt
 801e2dc:	18ed      	addlt	r5, r5, r3
 801e2de:	1b2c      	sublt	r4, r5, r4
 801e2e0:	b2a5      	uxthlt	r5, r4
 801e2e2:	460c      	movlt	r4, r1
 801e2e4:	8891      	ldrh	r1, [r2, #4]
 801e2e6:	440b      	add	r3, r1
 801e2e8:	b21b      	sxth	r3, r3
 801e2ea:	930f      	str	r3, [sp, #60]	; 0x3c
 801e2ec:	88d3      	ldrh	r3, [r2, #6]
 801e2ee:	8852      	ldrh	r2, [r2, #2]
 801e2f0:	4413      	add	r3, r2
 801e2f2:	b21b      	sxth	r3, r3
 801e2f4:	930d      	str	r3, [sp, #52]	; 0x34
 801e2f6:	4bbe      	ldr	r3, [pc, #760]	; (801e5f0 <_ZN8touchgfx8LCD16bpp9drawGlyphEPtNS_4RectEssttRKS2_PKNS_9GlyphNodeEPKhhNS_9colortypeEhhNS_12TextRotationE+0x39c>)
 801e2f8:	9a09      	ldr	r2, [sp, #36]	; 0x24
 801e2fa:	f893 b000 	ldrb.w	fp, [r3]
 801e2fe:	f10b 3cff 	add.w	ip, fp, #4294967295
 801e302:	f1dc 0300 	rsbs	r3, ip, #0
 801e306:	eb43 030c 	adc.w	r3, r3, ip
 801e30a:	930e      	str	r3, [sp, #56]	; 0x38
 801e30c:	4621      	mov	r1, r4
 801e30e:	4653      	mov	r3, sl
 801e310:	a814      	add	r0, sp, #80	; 0x50
 801e312:	f7f6 fcce 	bl	8014cb2 <_ZN8touchgfx3LCD5realXERKNS_4RectEssNS_12TextRotationE>
 801e316:	4621      	mov	r1, r4
 801e318:	f8ad 005c 	strh.w	r0, [sp, #92]	; 0x5c
 801e31c:	4653      	mov	r3, sl
 801e31e:	9a09      	ldr	r2, [sp, #36]	; 0x24
 801e320:	a814      	add	r0, sp, #80	; 0x50
 801e322:	f7f6 fce3 	bl	8014cec <_ZN8touchgfx3LCD5realYERKNS_4RectEssNS_12TextRotationE>
 801e326:	a918      	add	r1, sp, #96	; 0x60
 801e328:	f821 0d02 	strh.w	r0, [r1, #-2]!
 801e32c:	a817      	add	r0, sp, #92	; 0x5c
 801e32e:	f7f6 fe09 	bl	8014f44 <_ZN8touchgfx21DisplayTransformation29transformDisplayToFrameBufferERsS1_>
 801e332:	f1ba 0f00 	cmp.w	sl, #0
 801e336:	f040 80f4 	bne.w	801e522 <_ZN8touchgfx8LCD16bpp9drawGlyphEPtNS_4RectEssttRKS2_PKNS_9GlyphNodeEPKhhNS_9colortypeEhhNS_12TextRotationE+0x2ce>
 801e33a:	f1bb 0f01 	cmp.w	fp, #1
 801e33e:	f040 80f8 	bne.w	801e532 <_ZN8touchgfx8LCD16bpp9drawGlyphEPtNS_4RectEssttRKS2_PKNS_9GlyphNodeEPKhhNS_9colortypeEhhNS_12TextRotationE+0x2de>
 801e342:	9b10      	ldr	r3, [sp, #64]	; 0x40
 801e344:	2b00      	cmp	r3, #0
 801e346:	f040 8145 	bne.w	801e5d4 <_ZN8touchgfx8LCD16bpp9drawGlyphEPtNS_4RectEssttRKS2_PKNS_9GlyphNodeEPKhhNS_9colortypeEhhNS_12TextRotationE+0x380>
 801e34a:	b2ba      	uxth	r2, r7
 801e34c:	b905      	cbnz	r5, 801e350 <_ZN8touchgfx8LCD16bpp9drawGlyphEPtNS_4RectEssttRKS2_PKNS_9GlyphNodeEPKhhNS_9colortypeEhhNS_12TextRotationE+0xfc>
 801e34e:	b16e      	cbz	r6, 801e36c <_ZN8touchgfx8LCD16bpp9drawGlyphEPtNS_4RectEssttRKS2_PKNS_9GlyphNodeEPKhhNS_9colortypeEhhNS_12TextRotationE+0x118>
 801e350:	fb06 5302 	mla	r3, r6, r2, r5
 801e354:	9828      	ldr	r0, [sp, #160]	; 0xa0
 801e356:	fb08 f303 	mul.w	r3, r8, r3
 801e35a:	4631      	mov	r1, r6
 801e35c:	f003 0607 	and.w	r6, r3, #7
 801e360:	eb00 03d3 	add.w	r3, r0, r3, lsr #3
 801e364:	9328      	str	r3, [sp, #160]	; 0xa0
 801e366:	eba9 0301 	sub.w	r3, r9, r1
 801e36a:	930a      	str	r3, [sp, #40]	; 0x28
 801e36c:	4651      	mov	r1, sl
 801e36e:	980e      	ldr	r0, [sp, #56]	; 0x38
 801e370:	f7ff ff1c 	bl	801e1ac <_ZN8touchgfx8LCD16bpp9nextPixelEbNS_12TextRotationE>
 801e374:	4681      	mov	r9, r0
 801e376:	980e      	ldr	r0, [sp, #56]	; 0x38
 801e378:	f7ff ff42 	bl	801e200 <_ZN8touchgfx8LCD16bpp8nextLineEbNS_12TextRotationE>
 801e37c:	9b0d      	ldr	r3, [sp, #52]	; 0x34
 801e37e:	9909      	ldr	r1, [sp, #36]	; 0x24
 801e380:	eba3 0a01 	sub.w	sl, r3, r1
 801e384:	9b0a      	ldr	r3, [sp, #40]	; 0x28
 801e386:	459a      	cmp	sl, r3
 801e388:	bfa8      	it	ge
 801e38a:	469a      	movge	sl, r3
 801e38c:	f1ba 0f00 	cmp.w	sl, #0
 801e390:	4683      	mov	fp, r0
 801e392:	f340 811a 	ble.w	801e5ca <_ZN8touchgfx8LCD16bpp9drawGlyphEPtNS_4RectEssttRKS2_PKNS_9GlyphNodeEPKhhNS_9colortypeEhhNS_12TextRotationE+0x376>
 801e396:	9b0f      	ldr	r3, [sp, #60]	; 0x3c
 801e398:	1b64      	subs	r4, r4, r5
 801e39a:	1b1c      	subs	r4, r3, r4
 801e39c:	42bc      	cmp	r4, r7
 801e39e:	bfd4      	ite	le
 801e3a0:	ebc5 0504 	rsble	r5, r5, r4
 801e3a4:	ebc5 0507 	rsbgt	r5, r5, r7
 801e3a8:	2d00      	cmp	r5, #0
 801e3aa:	f340 810e 	ble.w	801e5ca <_ZN8touchgfx8LCD16bpp9drawGlyphEPtNS_4RectEssttRKS2_PKNS_9GlyphNodeEPKhhNS_9colortypeEhhNS_12TextRotationE+0x376>
 801e3ae:	1b52      	subs	r2, r2, r5
 801e3b0:	fb08 f302 	mul.w	r3, r8, r2
 801e3b4:	930f      	str	r3, [sp, #60]	; 0x3c
 801e3b6:	9b0b      	ldr	r3, [sp, #44]	; 0x2c
 801e3b8:	2b00      	cmp	r3, #0
 801e3ba:	f040 8116 	bne.w	801e5ea <_ZN8touchgfx8LCD16bpp9drawGlyphEPtNS_4RectEssttRKS2_PKNS_9GlyphNodeEPKhhNS_9colortypeEhhNS_12TextRotationE+0x396>
 801e3be:	4b8d      	ldr	r3, [pc, #564]	; (801e5f4 <_ZN8touchgfx8LCD16bpp9drawGlyphEPtNS_4RectEssttRKS2_PKNS_9GlyphNodeEPKhhNS_9colortypeEhhNS_12TextRotationE+0x3a0>)
 801e3c0:	6818      	ldr	r0, [r3, #0]
 801e3c2:	6803      	ldr	r3, [r0, #0]
 801e3c4:	6a9b      	ldr	r3, [r3, #40]	; 0x28
 801e3c6:	4798      	blx	r3
 801e3c8:	2301      	movs	r3, #1
 801e3ca:	fa03 f308 	lsl.w	r3, r3, r8
 801e3ce:	4a8a      	ldr	r2, [pc, #552]	; (801e5f8 <_ZN8touchgfx8LCD16bpp9drawGlyphEPtNS_4RectEssttRKS2_PKNS_9GlyphNodeEPKhhNS_9colortypeEhhNS_12TextRotationE+0x3a4>)
 801e3d0:	3b01      	subs	r3, #1
 801e3d2:	b2db      	uxtb	r3, r3
 801e3d4:	8811      	ldrh	r1, [r2, #0]
 801e3d6:	930e      	str	r3, [sp, #56]	; 0x38
 801e3d8:	f9bd 205c 	ldrsh.w	r2, [sp, #92]	; 0x5c
 801e3dc:	f9bd 305e 	ldrsh.w	r3, [sp, #94]	; 0x5e
 801e3e0:	fb01 2303 	mla	r3, r1, r3, r2
 801e3e4:	eb00 0343 	add.w	r3, r0, r3, lsl #1
 801e3e8:	930a      	str	r3, [sp, #40]	; 0x28
 801e3ea:	9b2a      	ldr	r3, [sp, #168]	; 0xa8
 801e3ec:	f3c3 4307 	ubfx	r3, r3, #16, #8
 801e3f0:	9313      	str	r3, [sp, #76]	; 0x4c
 801e3f2:	9b2a      	ldr	r3, [sp, #168]	; 0xa8
 801e3f4:	0a19      	lsrs	r1, r3, #8
 801e3f6:	b2cb      	uxtb	r3, r1
 801e3f8:	9312      	str	r3, [sp, #72]	; 0x48
 801e3fa:	9b2a      	ldr	r3, [sp, #168]	; 0xa8
 801e3fc:	b2db      	uxtb	r3, r3
 801e3fe:	9311      	str	r3, [sp, #68]	; 0x44
 801e400:	9b2a      	ldr	r3, [sp, #168]	; 0xa8
 801e402:	095a      	lsrs	r2, r3, #5
 801e404:	4b7d      	ldr	r3, [pc, #500]	; (801e5fc <_ZN8touchgfx8LCD16bpp9drawGlyphEPtNS_4RectEssttRKS2_PKNS_9GlyphNodeEPKhhNS_9colortypeEhhNS_12TextRotationE+0x3a8>)
 801e406:	f402 62fc 	and.w	r2, r2, #2016	; 0x7e0
 801e40a:	400b      	ands	r3, r1
 801e40c:	4313      	orrs	r3, r2
 801e40e:	9a2a      	ldr	r2, [sp, #168]	; 0xa8
 801e410:	f3c2 02c4 	ubfx	r2, r2, #3, #5
 801e414:	4313      	orrs	r3, r2
 801e416:	b29b      	uxth	r3, r3
 801e418:	9310      	str	r3, [sp, #64]	; 0x40
 801e41a:	9b28      	ldr	r3, [sp, #160]	; 0xa0
 801e41c:	781a      	ldrb	r2, [r3, #0]
 801e41e:	ea4f 0349 	mov.w	r3, r9, lsl #1
 801e422:	4132      	asrs	r2, r6
 801e424:	fb05 b919 	mls	r9, r5, r9, fp
 801e428:	fb03 fb05 	mul.w	fp, r3, r5
 801e42c:	b2d2      	uxtb	r2, r2
 801e42e:	930d      	str	r3, [sp, #52]	; 0x34
 801e430:	eb0b 0b49 	add.w	fp, fp, r9, lsl #1
 801e434:	f11a 3aff 	adds.w	sl, sl, #4294967295
 801e438:	f0c0 80f5 	bcc.w	801e626 <_ZN8touchgfx8LCD16bpp9drawGlyphEPtNS_4RectEssttRKS2_PKNS_9GlyphNodeEPKhhNS_9colortypeEhhNS_12TextRotationE+0x3d2>
 801e43c:	f8dd c028 	ldr.w	ip, [sp, #40]	; 0x28
 801e440:	46ae      	mov	lr, r5
 801e442:	f11e 3eff 	adds.w	lr, lr, #4294967295
 801e446:	f0c0 80dd 	bcc.w	801e604 <_ZN8touchgfx8LCD16bpp9drawGlyphEPtNS_4RectEssttRKS2_PKNS_9GlyphNodeEPKhhNS_9colortypeEhhNS_12TextRotationE+0x3b0>
 801e44a:	9b0e      	ldr	r3, [sp, #56]	; 0x38
 801e44c:	4013      	ands	r3, r2
 801e44e:	d055      	beq.n	801e4fc <_ZN8touchgfx8LCD16bpp9drawGlyphEPtNS_4RectEssttRKS2_PKNS_9GlyphNodeEPKhhNS_9colortypeEhhNS_12TextRotationE+0x2a8>
 801e450:	20ff      	movs	r0, #255	; 0xff
 801e452:	990e      	ldr	r1, [sp, #56]	; 0x38
 801e454:	fb90 f1f1 	sdiv	r1, r0, r1
 801e458:	434b      	muls	r3, r1
 801e45a:	2bfe      	cmp	r3, #254	; 0xfe
 801e45c:	dd03      	ble.n	801e466 <_ZN8touchgfx8LCD16bpp9drawGlyphEPtNS_4RectEssttRKS2_PKNS_9GlyphNodeEPKhhNS_9colortypeEhhNS_12TextRotationE+0x212>
 801e45e:	990c      	ldr	r1, [sp, #48]	; 0x30
 801e460:	4281      	cmp	r1, r0
 801e462:	f000 80cd 	beq.w	801e600 <_ZN8touchgfx8LCD16bpp9drawGlyphEPtNS_4RectEssttRKS2_PKNS_9GlyphNodeEPKhhNS_9colortypeEhhNS_12TextRotationE+0x3ac>
 801e466:	990c      	ldr	r1, [sp, #48]	; 0x30
 801e468:	f8bc 4000 	ldrh.w	r4, [ip]
 801e46c:	fb11 f303 	smulbb	r3, r1, r3
 801e470:	b29b      	uxth	r3, r3
 801e472:	1c59      	adds	r1, r3, #1
 801e474:	eb01 2313 	add.w	r3, r1, r3, lsr #8
 801e478:	f3c3 2307 	ubfx	r3, r3, #8, #8
 801e47c:	b29f      	uxth	r7, r3
 801e47e:	43db      	mvns	r3, r3
 801e480:	b2db      	uxtb	r3, r3
 801e482:	9309      	str	r3, [sp, #36]	; 0x24
 801e484:	9b13      	ldr	r3, [sp, #76]	; 0x4c
 801e486:	1220      	asrs	r0, r4, #8
 801e488:	fb13 f907 	smulbb	r9, r3, r7
 801e48c:	f000 00f8 	and.w	r0, r0, #248	; 0xf8
 801e490:	9b09      	ldr	r3, [sp, #36]	; 0x24
 801e492:	ea40 1050 	orr.w	r0, r0, r0, lsr #5
 801e496:	fb00 9003 	mla	r0, r0, r3, r9
 801e49a:	9b12      	ldr	r3, [sp, #72]	; 0x48
 801e49c:	10e1      	asrs	r1, r4, #3
 801e49e:	fb13 f907 	smulbb	r9, r3, r7
 801e4a2:	f001 01fc 	and.w	r1, r1, #252	; 0xfc
 801e4a6:	9b09      	ldr	r3, [sp, #36]	; 0x24
 801e4a8:	ea41 1191 	orr.w	r1, r1, r1, lsr #6
 801e4ac:	fb01 9103 	mla	r1, r1, r3, r9
 801e4b0:	9b11      	ldr	r3, [sp, #68]	; 0x44
 801e4b2:	00e4      	lsls	r4, r4, #3
 801e4b4:	fb13 f707 	smulbb	r7, r3, r7
 801e4b8:	b2e4      	uxtb	r4, r4
 801e4ba:	9b09      	ldr	r3, [sp, #36]	; 0x24
 801e4bc:	ea44 1454 	orr.w	r4, r4, r4, lsr #5
 801e4c0:	fb04 7403 	mla	r4, r4, r3, r7
 801e4c4:	b280      	uxth	r0, r0
 801e4c6:	b2a4      	uxth	r4, r4
 801e4c8:	1c43      	adds	r3, r0, #1
 801e4ca:	f104 0901 	add.w	r9, r4, #1
 801e4ce:	eb03 2010 	add.w	r0, r3, r0, lsr #8
 801e4d2:	eb09 2914 	add.w	r9, r9, r4, lsr #8
 801e4d6:	b289      	uxth	r1, r1
 801e4d8:	f3c9 29c4 	ubfx	r9, r9, #11, #5
 801e4dc:	f400 4078 	and.w	r0, r0, #63488	; 0xf800
 801e4e0:	ea49 0000 	orr.w	r0, r9, r0
 801e4e4:	f101 0901 	add.w	r9, r1, #1
 801e4e8:	eb09 2911 	add.w	r9, r9, r1, lsr #8
 801e4ec:	ea4f 1959 	mov.w	r9, r9, lsr #5
 801e4f0:	f409 69fc 	and.w	r9, r9, #2016	; 0x7e0
 801e4f4:	ea40 0009 	orr.w	r0, r0, r9
 801e4f8:	f8ac 0000 	strh.w	r0, [ip]
 801e4fc:	4446      	add	r6, r8
 801e4fe:	b2b6      	uxth	r6, r6
 801e500:	2e07      	cmp	r6, #7
 801e502:	bf81      	itttt	hi
 801e504:	9b28      	ldrhi	r3, [sp, #160]	; 0xa0
 801e506:	785a      	ldrbhi	r2, [r3, #1]
 801e508:	3301      	addhi	r3, #1
 801e50a:	9328      	strhi	r3, [sp, #160]	; 0xa0
 801e50c:	9b0d      	ldr	r3, [sp, #52]	; 0x34
 801e50e:	bf9a      	itte	ls
 801e510:	fa42 f208 	asrls.w	r2, r2, r8
 801e514:	b2d2      	uxtbls	r2, r2
 801e516:	2600      	movhi	r6, #0
 801e518:	449c      	add	ip, r3
 801e51a:	e792      	b.n	801e442 <_ZN8touchgfx8LCD16bpp9drawGlyphEPtNS_4RectEssttRKS2_PKNS_9GlyphNodeEPKhhNS_9colortypeEhhNS_12TextRotationE+0x1ee>
 801e51c:	441c      	add	r4, r3
 801e51e:	b224      	sxth	r4, r4
 801e520:	e6d5      	b.n	801e2ce <_ZN8touchgfx8LCD16bpp9drawGlyphEPtNS_4RectEssttRKS2_PKNS_9GlyphNodeEPKhhNS_9colortypeEhhNS_12TextRotationE+0x7a>
 801e522:	f1ba 0f01 	cmp.w	sl, #1
 801e526:	f47f af0c 	bne.w	801e342 <_ZN8touchgfx8LCD16bpp9drawGlyphEPtNS_4RectEssttRKS2_PKNS_9GlyphNodeEPKhhNS_9colortypeEhhNS_12TextRotationE+0xee>
 801e52a:	f1bb 0f01 	cmp.w	fp, #1
 801e52e:	f47f af08 	bne.w	801e342 <_ZN8touchgfx8LCD16bpp9drawGlyphEPtNS_4RectEssttRKS2_PKNS_9GlyphNodeEPKhhNS_9colortypeEhhNS_12TextRotationE+0xee>
 801e532:	f8df b0c0 	ldr.w	fp, [pc, #192]	; 801e5f4 <_ZN8touchgfx8LCD16bpp9drawGlyphEPtNS_4RectEssttRKS2_PKNS_9GlyphNodeEPKhhNS_9colortypeEhhNS_12TextRotationE+0x3a0>
 801e536:	f8db 0000 	ldr.w	r0, [fp]
 801e53a:	6803      	ldr	r3, [r0, #0]
 801e53c:	6b9b      	ldr	r3, [r3, #56]	; 0x38
 801e53e:	4798      	blx	r3
 801e540:	f410 7380 	ands.w	r3, r0, #256	; 0x100
 801e544:	465a      	mov	r2, fp
 801e546:	d006      	beq.n	801e556 <_ZN8touchgfx8LCD16bpp9drawGlyphEPtNS_4RectEssttRKS2_PKNS_9GlyphNodeEPKhhNS_9colortypeEhhNS_12TextRotationE+0x302>
 801e548:	f1b8 0f04 	cmp.w	r8, #4
 801e54c:	d140      	bne.n	801e5d0 <_ZN8touchgfx8LCD16bpp9drawGlyphEPtNS_4RectEssttRKS2_PKNS_9GlyphNodeEPKhhNS_9colortypeEhhNS_12TextRotationE+0x37c>
 801e54e:	9b10      	ldr	r3, [sp, #64]	; 0x40
 801e550:	3300      	adds	r3, #0
 801e552:	bf18      	it	ne
 801e554:	2301      	movne	r3, #1
 801e556:	0580      	lsls	r0, r0, #22
 801e558:	d56e      	bpl.n	801e638 <_ZN8touchgfx8LCD16bpp9drawGlyphEPtNS_4RectEssttRKS2_PKNS_9GlyphNodeEPKhhNS_9colortypeEhhNS_12TextRotationE+0x3e4>
 801e55a:	f1b8 0f08 	cmp.w	r8, #8
 801e55e:	d16b      	bne.n	801e638 <_ZN8touchgfx8LCD16bpp9drawGlyphEPtNS_4RectEssttRKS2_PKNS_9GlyphNodeEPKhhNS_9colortypeEhhNS_12TextRotationE+0x3e4>
 801e560:	2b00      	cmp	r3, #0
 801e562:	bf0c      	ite	eq
 801e564:	f44f 7100 	moveq.w	r1, #512	; 0x200
 801e568:	f44f 7180 	movne.w	r1, #256	; 0x100
 801e56c:	2d00      	cmp	r5, #0
 801e56e:	f47f aee8 	bne.w	801e342 <_ZN8touchgfx8LCD16bpp9drawGlyphEPtNS_4RectEssttRKS2_PKNS_9GlyphNodeEPKhhNS_9colortypeEhhNS_12TextRotationE+0xee>
 801e572:	2e00      	cmp	r6, #0
 801e574:	f47f aee5 	bne.w	801e342 <_ZN8touchgfx8LCD16bpp9drawGlyphEPtNS_4RectEssttRKS2_PKNS_9GlyphNodeEPKhhNS_9colortypeEhhNS_12TextRotationE+0xee>
 801e578:	980f      	ldr	r0, [sp, #60]	; 0x3c
 801e57a:	19e3      	adds	r3, r4, r7
 801e57c:	4283      	cmp	r3, r0
 801e57e:	f73f aee0 	bgt.w	801e342 <_ZN8touchgfx8LCD16bpp9drawGlyphEPtNS_4RectEssttRKS2_PKNS_9GlyphNodeEPKhhNS_9colortypeEhhNS_12TextRotationE+0xee>
 801e582:	9b09      	ldr	r3, [sp, #36]	; 0x24
 801e584:	980d      	ldr	r0, [sp, #52]	; 0x34
 801e586:	444b      	add	r3, r9
 801e588:	4283      	cmp	r3, r0
 801e58a:	f73f aeda 	bgt.w	801e342 <_ZN8touchgfx8LCD16bpp9drawGlyphEPtNS_4RectEssttRKS2_PKNS_9GlyphNodeEPKhhNS_9colortypeEhhNS_12TextRotationE+0xee>
 801e58e:	6810      	ldr	r0, [r2, #0]
 801e590:	f8bd 305e 	ldrh.w	r3, [sp, #94]	; 0x5e
 801e594:	6804      	ldr	r4, [r0, #0]
 801e596:	f8bd 205c 	ldrh.w	r2, [sp, #92]	; 0x5c
 801e59a:	b2bf      	uxth	r7, r7
 801e59c:	f1b8 0f08 	cmp.w	r8, #8
 801e5a0:	f04f 0500 	mov.w	r5, #0
 801e5a4:	bf18      	it	ne
 801e5a6:	3701      	addne	r7, #1
 801e5a8:	e9cd 1505 	strd	r1, r5, [sp, #20]
 801e5ac:	990c      	ldr	r1, [sp, #48]	; 0x30
 801e5ae:	9104      	str	r1, [sp, #16]
 801e5b0:	bf18      	it	ne
 801e5b2:	f027 0701 	bicne.w	r7, r7, #1
 801e5b6:	992a      	ldr	r1, [sp, #168]	; 0xa8
 801e5b8:	bf18      	it	ne
 801e5ba:	b2bf      	uxthne	r7, r7
 801e5bc:	e9cd 7102 	strd	r7, r1, [sp, #8]
 801e5c0:	e9cd 7900 	strd	r7, r9, [sp]
 801e5c4:	9928      	ldr	r1, [sp, #160]	; 0xa0
 801e5c6:	6d64      	ldr	r4, [r4, #84]	; 0x54
 801e5c8:	47a0      	blx	r4
 801e5ca:	b019      	add	sp, #100	; 0x64
 801e5cc:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
 801e5d0:	2300      	movs	r3, #0
 801e5d2:	e7c0      	b.n	801e556 <_ZN8touchgfx8LCD16bpp9drawGlyphEPtNS_4RectEssttRKS2_PKNS_9GlyphNodeEPKhhNS_9colortypeEhhNS_12TextRotationE+0x302>
 801e5d4:	2208      	movs	r2, #8
 801e5d6:	fb92 f3f8 	sdiv	r3, r2, r8
 801e5da:	1e5a      	subs	r2, r3, #1
 801e5dc:	443a      	add	r2, r7
 801e5de:	fb92 f2f3 	sdiv	r2, r2, r3
 801e5e2:	fb12 f203 	smulbb	r2, r2, r3
 801e5e6:	b292      	uxth	r2, r2
 801e5e8:	e6b0      	b.n	801e34c <_ZN8touchgfx8LCD16bpp9drawGlyphEPtNS_4RectEssttRKS2_PKNS_9GlyphNodeEPKhhNS_9colortypeEhhNS_12TextRotationE+0xf8>
 801e5ea:	980b      	ldr	r0, [sp, #44]	; 0x2c
 801e5ec:	e6ec      	b.n	801e3c8 <_ZN8touchgfx8LCD16bpp9drawGlyphEPtNS_4RectEssttRKS2_PKNS_9GlyphNodeEPKhhNS_9colortypeEhhNS_12TextRotationE+0x174>
 801e5ee:	bf00      	nop
 801e5f0:	20012f1c 	.word	0x20012f1c
 801e5f4:	20012f24 	.word	0x20012f24
 801e5f8:	20012f1e 	.word	0x20012f1e
 801e5fc:	00fff800 	.word	0x00fff800
 801e600:	9810      	ldr	r0, [sp, #64]	; 0x40
 801e602:	e779      	b.n	801e4f8 <_ZN8touchgfx8LCD16bpp9drawGlyphEPtNS_4RectEssttRKS2_PKNS_9GlyphNodeEPKhhNS_9colortypeEhhNS_12TextRotationE+0x2a4>
 801e604:	9b0f      	ldr	r3, [sp, #60]	; 0x3c
 801e606:	b153      	cbz	r3, 801e61e <_ZN8touchgfx8LCD16bpp9drawGlyphEPtNS_4RectEssttRKS2_PKNS_9GlyphNodeEPKhhNS_9colortypeEhhNS_12TextRotationE+0x3ca>
 801e608:	441e      	add	r6, r3
 801e60a:	9b28      	ldr	r3, [sp, #160]	; 0xa0
 801e60c:	b2b6      	uxth	r6, r6
 801e60e:	eb03 03d6 	add.w	r3, r3, r6, lsr #3
 801e612:	f006 0607 	and.w	r6, r6, #7
 801e616:	781a      	ldrb	r2, [r3, #0]
 801e618:	9328      	str	r3, [sp, #160]	; 0xa0
 801e61a:	4132      	asrs	r2, r6
 801e61c:	b2d2      	uxtb	r2, r2
 801e61e:	9b0a      	ldr	r3, [sp, #40]	; 0x28
 801e620:	445b      	add	r3, fp
 801e622:	930a      	str	r3, [sp, #40]	; 0x28
 801e624:	e706      	b.n	801e434 <_ZN8touchgfx8LCD16bpp9drawGlyphEPtNS_4RectEssttRKS2_PKNS_9GlyphNodeEPKhhNS_9colortypeEhhNS_12TextRotationE+0x1e0>
 801e626:	9b0b      	ldr	r3, [sp, #44]	; 0x2c
 801e628:	2b00      	cmp	r3, #0
 801e62a:	d1ce      	bne.n	801e5ca <_ZN8touchgfx8LCD16bpp9drawGlyphEPtNS_4RectEssttRKS2_PKNS_9GlyphNodeEPKhhNS_9colortypeEhhNS_12TextRotationE+0x376>
 801e62c:	4b05      	ldr	r3, [pc, #20]	; (801e644 <_ZN8touchgfx8LCD16bpp9drawGlyphEPtNS_4RectEssttRKS2_PKNS_9GlyphNodeEPKhhNS_9colortypeEhhNS_12TextRotationE+0x3f0>)
 801e62e:	6818      	ldr	r0, [r3, #0]
 801e630:	6803      	ldr	r3, [r0, #0]
 801e632:	6adb      	ldr	r3, [r3, #44]	; 0x2c
 801e634:	4798      	blx	r3
 801e636:	e7c8      	b.n	801e5ca <_ZN8touchgfx8LCD16bpp9drawGlyphEPtNS_4RectEssttRKS2_PKNS_9GlyphNodeEPKhhNS_9colortypeEhhNS_12TextRotationE+0x376>
 801e638:	2b00      	cmp	r3, #0
 801e63a:	f43f ae82 	beq.w	801e342 <_ZN8touchgfx8LCD16bpp9drawGlyphEPtNS_4RectEssttRKS2_PKNS_9GlyphNodeEPKhhNS_9colortypeEhhNS_12TextRotationE+0xee>
 801e63e:	f44f 7180 	mov.w	r1, #256	; 0x100
 801e642:	e793      	b.n	801e56c <_ZN8touchgfx8LCD16bpp9drawGlyphEPtNS_4RectEssttRKS2_PKNS_9GlyphNodeEPKhhNS_9colortypeEhhNS_12TextRotationE+0x318>
 801e644:	20012f24 	.word	0x20012f24

0801e648 <_ZN8touchgfx8LCD16bpp50enableTextureMapperL8_RGB565_BilinearInterpolationEv>:
 801e648:	b538      	push	{r3, r4, r5, lr}
 801e64a:	4c15      	ldr	r4, [pc, #84]	; (801e6a0 <_ZN8touchgfx8LCD16bpp50enableTextureMapperL8_RGB565_BilinearInterpolationEv+0x58>)
 801e64c:	7823      	ldrb	r3, [r4, #0]
 801e64e:	f3bf 8f5b 	dmb	ish
 801e652:	07da      	lsls	r2, r3, #31
 801e654:	4605      	mov	r5, r0
 801e656:	d40b      	bmi.n	801e670 <_ZN8touchgfx8LCD16bpp50enableTextureMapperL8_RGB565_BilinearInterpolationEv+0x28>
 801e658:	4620      	mov	r0, r4
 801e65a:	f00a fee2 	bl	8029422 <__cxa_guard_acquire>
 801e65e:	b138      	cbz	r0, 801e670 <_ZN8touchgfx8LCD16bpp50enableTextureMapperL8_RGB565_BilinearInterpolationEv+0x28>
 801e660:	4620      	mov	r0, r4
 801e662:	f00a feea 	bl	802943a <__cxa_guard_release>
 801e666:	4a0f      	ldr	r2, [pc, #60]	; (801e6a4 <_ZN8touchgfx8LCD16bpp50enableTextureMapperL8_RGB565_BilinearInterpolationEv+0x5c>)
 801e668:	490f      	ldr	r1, [pc, #60]	; (801e6a8 <_ZN8touchgfx8LCD16bpp50enableTextureMapperL8_RGB565_BilinearInterpolationEv+0x60>)
 801e66a:	4810      	ldr	r0, [pc, #64]	; (801e6ac <_ZN8touchgfx8LCD16bpp50enableTextureMapperL8_RGB565_BilinearInterpolationEv+0x64>)
 801e66c:	f00a fed2 	bl	8029414 <__aeabi_atexit>
 801e670:	4c0f      	ldr	r4, [pc, #60]	; (801e6b0 <_ZN8touchgfx8LCD16bpp50enableTextureMapperL8_RGB565_BilinearInterpolationEv+0x68>)
 801e672:	7823      	ldrb	r3, [r4, #0]
 801e674:	f3bf 8f5b 	dmb	ish
 801e678:	07db      	lsls	r3, r3, #31
 801e67a:	d40b      	bmi.n	801e694 <_ZN8touchgfx8LCD16bpp50enableTextureMapperL8_RGB565_BilinearInterpolationEv+0x4c>
 801e67c:	4620      	mov	r0, r4
 801e67e:	f00a fed0 	bl	8029422 <__cxa_guard_acquire>
 801e682:	b138      	cbz	r0, 801e694 <_ZN8touchgfx8LCD16bpp50enableTextureMapperL8_RGB565_BilinearInterpolationEv+0x4c>
 801e684:	4620      	mov	r0, r4
 801e686:	f00a fed8 	bl	802943a <__cxa_guard_release>
 801e68a:	4a06      	ldr	r2, [pc, #24]	; (801e6a4 <_ZN8touchgfx8LCD16bpp50enableTextureMapperL8_RGB565_BilinearInterpolationEv+0x5c>)
 801e68c:	4909      	ldr	r1, [pc, #36]	; (801e6b4 <_ZN8touchgfx8LCD16bpp50enableTextureMapperL8_RGB565_BilinearInterpolationEv+0x6c>)
 801e68e:	480a      	ldr	r0, [pc, #40]	; (801e6b8 <_ZN8touchgfx8LCD16bpp50enableTextureMapperL8_RGB565_BilinearInterpolationEv+0x70>)
 801e690:	f00a fec0 	bl	8029414 <__aeabi_atexit>
 801e694:	4b05      	ldr	r3, [pc, #20]	; (801e6ac <_ZN8touchgfx8LCD16bpp50enableTextureMapperL8_RGB565_BilinearInterpolationEv+0x64>)
 801e696:	612b      	str	r3, [r5, #16]
 801e698:	4b07      	ldr	r3, [pc, #28]	; (801e6b8 <_ZN8touchgfx8LCD16bpp50enableTextureMapperL8_RGB565_BilinearInterpolationEv+0x70>)
 801e69a:	616b      	str	r3, [r5, #20]
 801e69c:	bd38      	pop	{r3, r4, r5, pc}
 801e69e:	bf00      	nop
 801e6a0:	20013004 	.word	0x20013004
 801e6a4:	20000000 	.word	0x20000000
 801e6a8:	0801b44b 	.word	0x0801b44b
 801e6ac:	200000d4 	.word	0x200000d4
 801e6b0:	20013008 	.word	0x20013008
 801e6b4:	0801b449 	.word	0x0801b449
 801e6b8:	200000d8 	.word	0x200000d8

0801e6bc <_ZN8touchgfx8LCD16bpp44enableTextureMapperL8_RGB565_NearestNeighborEv>:
 801e6bc:	b538      	push	{r3, r4, r5, lr}
 801e6be:	4c15      	ldr	r4, [pc, #84]	; (801e714 <_ZN8touchgfx8LCD16bpp44enableTextureMapperL8_RGB565_NearestNeighborEv+0x58>)
 801e6c0:	7823      	ldrb	r3, [r4, #0]
 801e6c2:	f3bf 8f5b 	dmb	ish
 801e6c6:	07da      	lsls	r2, r3, #31
 801e6c8:	4605      	mov	r5, r0
 801e6ca:	d40b      	bmi.n	801e6e4 <_ZN8touchgfx8LCD16bpp44enableTextureMapperL8_RGB565_NearestNeighborEv+0x28>
 801e6cc:	4620      	mov	r0, r4
 801e6ce:	f00a fea8 	bl	8029422 <__cxa_guard_acquire>
 801e6d2:	b138      	cbz	r0, 801e6e4 <_ZN8touchgfx8LCD16bpp44enableTextureMapperL8_RGB565_NearestNeighborEv+0x28>
 801e6d4:	4620      	mov	r0, r4
 801e6d6:	f00a feb0 	bl	802943a <__cxa_guard_release>
 801e6da:	4a0f      	ldr	r2, [pc, #60]	; (801e718 <_ZN8touchgfx8LCD16bpp44enableTextureMapperL8_RGB565_NearestNeighborEv+0x5c>)
 801e6dc:	490f      	ldr	r1, [pc, #60]	; (801e71c <_ZN8touchgfx8LCD16bpp44enableTextureMapperL8_RGB565_NearestNeighborEv+0x60>)
 801e6de:	4810      	ldr	r0, [pc, #64]	; (801e720 <_ZN8touchgfx8LCD16bpp44enableTextureMapperL8_RGB565_NearestNeighborEv+0x64>)
 801e6e0:	f00a fe98 	bl	8029414 <__aeabi_atexit>
 801e6e4:	4c0f      	ldr	r4, [pc, #60]	; (801e724 <_ZN8touchgfx8LCD16bpp44enableTextureMapperL8_RGB565_NearestNeighborEv+0x68>)
 801e6e6:	7823      	ldrb	r3, [r4, #0]
 801e6e8:	f3bf 8f5b 	dmb	ish
 801e6ec:	07db      	lsls	r3, r3, #31
 801e6ee:	d40b      	bmi.n	801e708 <_ZN8touchgfx8LCD16bpp44enableTextureMapperL8_RGB565_NearestNeighborEv+0x4c>
 801e6f0:	4620      	mov	r0, r4
 801e6f2:	f00a fe96 	bl	8029422 <__cxa_guard_acquire>
 801e6f6:	b138      	cbz	r0, 801e708 <_ZN8touchgfx8LCD16bpp44enableTextureMapperL8_RGB565_NearestNeighborEv+0x4c>
 801e6f8:	4620      	mov	r0, r4
 801e6fa:	f00a fe9e 	bl	802943a <__cxa_guard_release>
 801e6fe:	4a06      	ldr	r2, [pc, #24]	; (801e718 <_ZN8touchgfx8LCD16bpp44enableTextureMapperL8_RGB565_NearestNeighborEv+0x5c>)
 801e700:	4909      	ldr	r1, [pc, #36]	; (801e728 <_ZN8touchgfx8LCD16bpp44enableTextureMapperL8_RGB565_NearestNeighborEv+0x6c>)
 801e702:	480a      	ldr	r0, [pc, #40]	; (801e72c <_ZN8touchgfx8LCD16bpp44enableTextureMapperL8_RGB565_NearestNeighborEv+0x70>)
 801e704:	f00a fe86 	bl	8029414 <__aeabi_atexit>
 801e708:	4b05      	ldr	r3, [pc, #20]	; (801e720 <_ZN8touchgfx8LCD16bpp44enableTextureMapperL8_RGB565_NearestNeighborEv+0x64>)
 801e70a:	60ab      	str	r3, [r5, #8]
 801e70c:	4b07      	ldr	r3, [pc, #28]	; (801e72c <_ZN8touchgfx8LCD16bpp44enableTextureMapperL8_RGB565_NearestNeighborEv+0x70>)
 801e70e:	60eb      	str	r3, [r5, #12]
 801e710:	bd38      	pop	{r3, r4, r5, pc}
 801e712:	bf00      	nop
 801e714:	20012fdc 	.word	0x20012fdc
 801e718:	20000000 	.word	0x20000000
 801e71c:	0801b44f 	.word	0x0801b44f
 801e720:	200000ac 	.word	0x200000ac
 801e724:	20012fe0 	.word	0x20012fe0
 801e728:	0801b44d 	.word	0x0801b44d
 801e72c:	200000b0 	.word	0x200000b0

0801e730 <_ZN8touchgfx8LCD16bpp28enableTextureMapperL8_RGB565Ev>:
 801e730:	b510      	push	{r4, lr}
 801e732:	4604      	mov	r4, r0
 801e734:	f7ff ff88 	bl	801e648 <_ZN8touchgfx8LCD16bpp50enableTextureMapperL8_RGB565_BilinearInterpolationEv>
 801e738:	4620      	mov	r0, r4
 801e73a:	e8bd 4010 	ldmia.w	sp!, {r4, lr}
 801e73e:	f7ff bfbd 	b.w	801e6bc <_ZN8touchgfx8LCD16bpp44enableTextureMapperL8_RGB565_NearestNeighborEv>
	...

0801e744 <_ZN8touchgfx8LCD16bpp50enableTextureMapperL8_RGB888_BilinearInterpolationEv>:
 801e744:	b538      	push	{r3, r4, r5, lr}
 801e746:	4c15      	ldr	r4, [pc, #84]	; (801e79c <_ZN8touchgfx8LCD16bpp50enableTextureMapperL8_RGB888_BilinearInterpolationEv+0x58>)
 801e748:	7823      	ldrb	r3, [r4, #0]
 801e74a:	f3bf 8f5b 	dmb	ish
 801e74e:	07da      	lsls	r2, r3, #31
 801e750:	4605      	mov	r5, r0
 801e752:	d40b      	bmi.n	801e76c <_ZN8touchgfx8LCD16bpp50enableTextureMapperL8_RGB888_BilinearInterpolationEv+0x28>
 801e754:	4620      	mov	r0, r4
 801e756:	f00a fe64 	bl	8029422 <__cxa_guard_acquire>
 801e75a:	b138      	cbz	r0, 801e76c <_ZN8touchgfx8LCD16bpp50enableTextureMapperL8_RGB888_BilinearInterpolationEv+0x28>
 801e75c:	4620      	mov	r0, r4
 801e75e:	f00a fe6c 	bl	802943a <__cxa_guard_release>
 801e762:	4a0f      	ldr	r2, [pc, #60]	; (801e7a0 <_ZN8touchgfx8LCD16bpp50enableTextureMapperL8_RGB888_BilinearInterpolationEv+0x5c>)
 801e764:	490f      	ldr	r1, [pc, #60]	; (801e7a4 <_ZN8touchgfx8LCD16bpp50enableTextureMapperL8_RGB888_BilinearInterpolationEv+0x60>)
 801e766:	4810      	ldr	r0, [pc, #64]	; (801e7a8 <_ZN8touchgfx8LCD16bpp50enableTextureMapperL8_RGB888_BilinearInterpolationEv+0x64>)
 801e768:	f00a fe54 	bl	8029414 <__aeabi_atexit>
 801e76c:	4c0f      	ldr	r4, [pc, #60]	; (801e7ac <_ZN8touchgfx8LCD16bpp50enableTextureMapperL8_RGB888_BilinearInterpolationEv+0x68>)
 801e76e:	7823      	ldrb	r3, [r4, #0]
 801e770:	f3bf 8f5b 	dmb	ish
 801e774:	07db      	lsls	r3, r3, #31
 801e776:	d40b      	bmi.n	801e790 <_ZN8touchgfx8LCD16bpp50enableTextureMapperL8_RGB888_BilinearInterpolationEv+0x4c>
 801e778:	4620      	mov	r0, r4
 801e77a:	f00a fe52 	bl	8029422 <__cxa_guard_acquire>
 801e77e:	b138      	cbz	r0, 801e790 <_ZN8touchgfx8LCD16bpp50enableTextureMapperL8_RGB888_BilinearInterpolationEv+0x4c>
 801e780:	4620      	mov	r0, r4
 801e782:	f00a fe5a 	bl	802943a <__cxa_guard_release>
 801e786:	4a06      	ldr	r2, [pc, #24]	; (801e7a0 <_ZN8touchgfx8LCD16bpp50enableTextureMapperL8_RGB888_BilinearInterpolationEv+0x5c>)
 801e788:	4909      	ldr	r1, [pc, #36]	; (801e7b0 <_ZN8touchgfx8LCD16bpp50enableTextureMapperL8_RGB888_BilinearInterpolationEv+0x6c>)
 801e78a:	480a      	ldr	r0, [pc, #40]	; (801e7b4 <_ZN8touchgfx8LCD16bpp50enableTextureMapperL8_RGB888_BilinearInterpolationEv+0x70>)
 801e78c:	f00a fe42 	bl	8029414 <__aeabi_atexit>
 801e790:	4b05      	ldr	r3, [pc, #20]	; (801e7a8 <_ZN8touchgfx8LCD16bpp50enableTextureMapperL8_RGB888_BilinearInterpolationEv+0x64>)
 801e792:	622b      	str	r3, [r5, #32]
 801e794:	4b07      	ldr	r3, [pc, #28]	; (801e7b4 <_ZN8touchgfx8LCD16bpp50enableTextureMapperL8_RGB888_BilinearInterpolationEv+0x70>)
 801e796:	626b      	str	r3, [r5, #36]	; 0x24
 801e798:	bd38      	pop	{r3, r4, r5, pc}
 801e79a:	bf00      	nop
 801e79c:	2001300c 	.word	0x2001300c
 801e7a0:	20000000 	.word	0x20000000
 801e7a4:	0801b443 	.word	0x0801b443
 801e7a8:	200000dc 	.word	0x200000dc
 801e7ac:	20013010 	.word	0x20013010
 801e7b0:	0801b441 	.word	0x0801b441
 801e7b4:	200000e0 	.word	0x200000e0

0801e7b8 <_ZN8touchgfx8LCD16bpp44enableTextureMapperL8_RGB888_NearestNeighborEv>:
 801e7b8:	b538      	push	{r3, r4, r5, lr}
 801e7ba:	4c15      	ldr	r4, [pc, #84]	; (801e810 <_ZN8touchgfx8LCD16bpp44enableTextureMapperL8_RGB888_NearestNeighborEv+0x58>)
 801e7bc:	7823      	ldrb	r3, [r4, #0]
 801e7be:	f3bf 8f5b 	dmb	ish
 801e7c2:	07da      	lsls	r2, r3, #31
 801e7c4:	4605      	mov	r5, r0
 801e7c6:	d40b      	bmi.n	801e7e0 <_ZN8touchgfx8LCD16bpp44enableTextureMapperL8_RGB888_NearestNeighborEv+0x28>
 801e7c8:	4620      	mov	r0, r4
 801e7ca:	f00a fe2a 	bl	8029422 <__cxa_guard_acquire>
 801e7ce:	b138      	cbz	r0, 801e7e0 <_ZN8touchgfx8LCD16bpp44enableTextureMapperL8_RGB888_NearestNeighborEv+0x28>
 801e7d0:	4620      	mov	r0, r4
 801e7d2:	f00a fe32 	bl	802943a <__cxa_guard_release>
 801e7d6:	4a0f      	ldr	r2, [pc, #60]	; (801e814 <_ZN8touchgfx8LCD16bpp44enableTextureMapperL8_RGB888_NearestNeighborEv+0x5c>)
 801e7d8:	490f      	ldr	r1, [pc, #60]	; (801e818 <_ZN8touchgfx8LCD16bpp44enableTextureMapperL8_RGB888_NearestNeighborEv+0x60>)
 801e7da:	4810      	ldr	r0, [pc, #64]	; (801e81c <_ZN8touchgfx8LCD16bpp44enableTextureMapperL8_RGB888_NearestNeighborEv+0x64>)
 801e7dc:	f00a fe1a 	bl	8029414 <__aeabi_atexit>
 801e7e0:	4c0f      	ldr	r4, [pc, #60]	; (801e820 <_ZN8touchgfx8LCD16bpp44enableTextureMapperL8_RGB888_NearestNeighborEv+0x68>)
 801e7e2:	7823      	ldrb	r3, [r4, #0]
 801e7e4:	f3bf 8f5b 	dmb	ish
 801e7e8:	07db      	lsls	r3, r3, #31
 801e7ea:	d40b      	bmi.n	801e804 <_ZN8touchgfx8LCD16bpp44enableTextureMapperL8_RGB888_NearestNeighborEv+0x4c>
 801e7ec:	4620      	mov	r0, r4
 801e7ee:	f00a fe18 	bl	8029422 <__cxa_guard_acquire>
 801e7f2:	b138      	cbz	r0, 801e804 <_ZN8touchgfx8LCD16bpp44enableTextureMapperL8_RGB888_NearestNeighborEv+0x4c>
 801e7f4:	4620      	mov	r0, r4
 801e7f6:	f00a fe20 	bl	802943a <__cxa_guard_release>
 801e7fa:	4a06      	ldr	r2, [pc, #24]	; (801e814 <_ZN8touchgfx8LCD16bpp44enableTextureMapperL8_RGB888_NearestNeighborEv+0x5c>)
 801e7fc:	4909      	ldr	r1, [pc, #36]	; (801e824 <_ZN8touchgfx8LCD16bpp44enableTextureMapperL8_RGB888_NearestNeighborEv+0x6c>)
 801e7fe:	480a      	ldr	r0, [pc, #40]	; (801e828 <_ZN8touchgfx8LCD16bpp44enableTextureMapperL8_RGB888_NearestNeighborEv+0x70>)
 801e800:	f00a fe08 	bl	8029414 <__aeabi_atexit>
 801e804:	4b05      	ldr	r3, [pc, #20]	; (801e81c <_ZN8touchgfx8LCD16bpp44enableTextureMapperL8_RGB888_NearestNeighborEv+0x64>)
 801e806:	61ab      	str	r3, [r5, #24]
 801e808:	4b07      	ldr	r3, [pc, #28]	; (801e828 <_ZN8touchgfx8LCD16bpp44enableTextureMapperL8_RGB888_NearestNeighborEv+0x70>)
 801e80a:	61eb      	str	r3, [r5, #28]
 801e80c:	bd38      	pop	{r3, r4, r5, pc}
 801e80e:	bf00      	nop
 801e810:	20012fe4 	.word	0x20012fe4
 801e814:	20000000 	.word	0x20000000
 801e818:	0801b447 	.word	0x0801b447
 801e81c:	200000b4 	.word	0x200000b4
 801e820:	20012fe8 	.word	0x20012fe8
 801e824:	0801b445 	.word	0x0801b445
 801e828:	200000b8 	.word	0x200000b8

0801e82c <_ZN8touchgfx8LCD16bpp28enableTextureMapperL8_RGB888Ev>:
 801e82c:	b510      	push	{r4, lr}
 801e82e:	4604      	mov	r4, r0
 801e830:	f7ff ff88 	bl	801e744 <_ZN8touchgfx8LCD16bpp50enableTextureMapperL8_RGB888_BilinearInterpolationEv>
 801e834:	4620      	mov	r0, r4
 801e836:	e8bd 4010 	ldmia.w	sp!, {r4, lr}
 801e83a:	f7ff bfbd 	b.w	801e7b8 <_ZN8touchgfx8LCD16bpp44enableTextureMapperL8_RGB888_NearestNeighborEv>
	...

0801e840 <_ZN8touchgfx8LCD16bpp52enableTextureMapperL8_ARGB8888_BilinearInterpolationEv>:
 801e840:	b538      	push	{r3, r4, r5, lr}
 801e842:	4c15      	ldr	r4, [pc, #84]	; (801e898 <_ZN8touchgfx8LCD16bpp52enableTextureMapperL8_ARGB8888_BilinearInterpolationEv+0x58>)
 801e844:	7823      	ldrb	r3, [r4, #0]
 801e846:	f3bf 8f5b 	dmb	ish
 801e84a:	07da      	lsls	r2, r3, #31
 801e84c:	4605      	mov	r5, r0
 801e84e:	d40b      	bmi.n	801e868 <_ZN8touchgfx8LCD16bpp52enableTextureMapperL8_ARGB8888_BilinearInterpolationEv+0x28>
 801e850:	4620      	mov	r0, r4
 801e852:	f00a fde6 	bl	8029422 <__cxa_guard_acquire>
 801e856:	b138      	cbz	r0, 801e868 <_ZN8touchgfx8LCD16bpp52enableTextureMapperL8_ARGB8888_BilinearInterpolationEv+0x28>
 801e858:	4620      	mov	r0, r4
 801e85a:	f00a fdee 	bl	802943a <__cxa_guard_release>
 801e85e:	4a0f      	ldr	r2, [pc, #60]	; (801e89c <_ZN8touchgfx8LCD16bpp52enableTextureMapperL8_ARGB8888_BilinearInterpolationEv+0x5c>)
 801e860:	490f      	ldr	r1, [pc, #60]	; (801e8a0 <_ZN8touchgfx8LCD16bpp52enableTextureMapperL8_ARGB8888_BilinearInterpolationEv+0x60>)
 801e862:	4810      	ldr	r0, [pc, #64]	; (801e8a4 <_ZN8touchgfx8LCD16bpp52enableTextureMapperL8_ARGB8888_BilinearInterpolationEv+0x64>)
 801e864:	f00a fdd6 	bl	8029414 <__aeabi_atexit>
 801e868:	4c0f      	ldr	r4, [pc, #60]	; (801e8a8 <_ZN8touchgfx8LCD16bpp52enableTextureMapperL8_ARGB8888_BilinearInterpolationEv+0x68>)
 801e86a:	7823      	ldrb	r3, [r4, #0]
 801e86c:	f3bf 8f5b 	dmb	ish
 801e870:	07db      	lsls	r3, r3, #31
 801e872:	d40b      	bmi.n	801e88c <_ZN8touchgfx8LCD16bpp52enableTextureMapperL8_ARGB8888_BilinearInterpolationEv+0x4c>
 801e874:	4620      	mov	r0, r4
 801e876:	f00a fdd4 	bl	8029422 <__cxa_guard_acquire>
 801e87a:	b138      	cbz	r0, 801e88c <_ZN8touchgfx8LCD16bpp52enableTextureMapperL8_ARGB8888_BilinearInterpolationEv+0x4c>
 801e87c:	4620      	mov	r0, r4
 801e87e:	f00a fddc 	bl	802943a <__cxa_guard_release>
 801e882:	4a06      	ldr	r2, [pc, #24]	; (801e89c <_ZN8touchgfx8LCD16bpp52enableTextureMapperL8_ARGB8888_BilinearInterpolationEv+0x5c>)
 801e884:	4909      	ldr	r1, [pc, #36]	; (801e8ac <_ZN8touchgfx8LCD16bpp52enableTextureMapperL8_ARGB8888_BilinearInterpolationEv+0x6c>)
 801e886:	480a      	ldr	r0, [pc, #40]	; (801e8b0 <_ZN8touchgfx8LCD16bpp52enableTextureMapperL8_ARGB8888_BilinearInterpolationEv+0x70>)
 801e888:	f00a fdc4 	bl	8029414 <__aeabi_atexit>
 801e88c:	4b05      	ldr	r3, [pc, #20]	; (801e8a4 <_ZN8touchgfx8LCD16bpp52enableTextureMapperL8_ARGB8888_BilinearInterpolationEv+0x64>)
 801e88e:	632b      	str	r3, [r5, #48]	; 0x30
 801e890:	4b07      	ldr	r3, [pc, #28]	; (801e8b0 <_ZN8touchgfx8LCD16bpp52enableTextureMapperL8_ARGB8888_BilinearInterpolationEv+0x70>)
 801e892:	636b      	str	r3, [r5, #52]	; 0x34
 801e894:	bd38      	pop	{r3, r4, r5, pc}
 801e896:	bf00      	nop
 801e898:	2001301c 	.word	0x2001301c
 801e89c:	20000000 	.word	0x20000000
 801e8a0:	0801b43b 	.word	0x0801b43b
 801e8a4:	200000ec 	.word	0x200000ec
 801e8a8:	20013020 	.word	0x20013020
 801e8ac:	0801b439 	.word	0x0801b439
 801e8b0:	200000f0 	.word	0x200000f0

0801e8b4 <_ZN8touchgfx8LCD16bpp46enableTextureMapperL8_ARGB8888_NearestNeighborEv>:
 801e8b4:	b538      	push	{r3, r4, r5, lr}
 801e8b6:	4c15      	ldr	r4, [pc, #84]	; (801e90c <_ZN8touchgfx8LCD16bpp46enableTextureMapperL8_ARGB8888_NearestNeighborEv+0x58>)
 801e8b8:	7823      	ldrb	r3, [r4, #0]
 801e8ba:	f3bf 8f5b 	dmb	ish
 801e8be:	07da      	lsls	r2, r3, #31
 801e8c0:	4605      	mov	r5, r0
 801e8c2:	d40b      	bmi.n	801e8dc <_ZN8touchgfx8LCD16bpp46enableTextureMapperL8_ARGB8888_NearestNeighborEv+0x28>
 801e8c4:	4620      	mov	r0, r4
 801e8c6:	f00a fdac 	bl	8029422 <__cxa_guard_acquire>
 801e8ca:	b138      	cbz	r0, 801e8dc <_ZN8touchgfx8LCD16bpp46enableTextureMapperL8_ARGB8888_NearestNeighborEv+0x28>
 801e8cc:	4620      	mov	r0, r4
 801e8ce:	f00a fdb4 	bl	802943a <__cxa_guard_release>
 801e8d2:	4a0f      	ldr	r2, [pc, #60]	; (801e910 <_ZN8touchgfx8LCD16bpp46enableTextureMapperL8_ARGB8888_NearestNeighborEv+0x5c>)
 801e8d4:	490f      	ldr	r1, [pc, #60]	; (801e914 <_ZN8touchgfx8LCD16bpp46enableTextureMapperL8_ARGB8888_NearestNeighborEv+0x60>)
 801e8d6:	4810      	ldr	r0, [pc, #64]	; (801e918 <_ZN8touchgfx8LCD16bpp46enableTextureMapperL8_ARGB8888_NearestNeighborEv+0x64>)
 801e8d8:	f00a fd9c 	bl	8029414 <__aeabi_atexit>
 801e8dc:	4c0f      	ldr	r4, [pc, #60]	; (801e91c <_ZN8touchgfx8LCD16bpp46enableTextureMapperL8_ARGB8888_NearestNeighborEv+0x68>)
 801e8de:	7823      	ldrb	r3, [r4, #0]
 801e8e0:	f3bf 8f5b 	dmb	ish
 801e8e4:	07db      	lsls	r3, r3, #31
 801e8e6:	d40b      	bmi.n	801e900 <_ZN8touchgfx8LCD16bpp46enableTextureMapperL8_ARGB8888_NearestNeighborEv+0x4c>
 801e8e8:	4620      	mov	r0, r4
 801e8ea:	f00a fd9a 	bl	8029422 <__cxa_guard_acquire>
 801e8ee:	b138      	cbz	r0, 801e900 <_ZN8touchgfx8LCD16bpp46enableTextureMapperL8_ARGB8888_NearestNeighborEv+0x4c>
 801e8f0:	4620      	mov	r0, r4
 801e8f2:	f00a fda2 	bl	802943a <__cxa_guard_release>
 801e8f6:	4a06      	ldr	r2, [pc, #24]	; (801e910 <_ZN8touchgfx8LCD16bpp46enableTextureMapperL8_ARGB8888_NearestNeighborEv+0x5c>)
 801e8f8:	4909      	ldr	r1, [pc, #36]	; (801e920 <_ZN8touchgfx8LCD16bpp46enableTextureMapperL8_ARGB8888_NearestNeighborEv+0x6c>)
 801e8fa:	480a      	ldr	r0, [pc, #40]	; (801e924 <_ZN8touchgfx8LCD16bpp46enableTextureMapperL8_ARGB8888_NearestNeighborEv+0x70>)
 801e8fc:	f00a fd8a 	bl	8029414 <__aeabi_atexit>
 801e900:	4b05      	ldr	r3, [pc, #20]	; (801e918 <_ZN8touchgfx8LCD16bpp46enableTextureMapperL8_ARGB8888_NearestNeighborEv+0x64>)
 801e902:	62ab      	str	r3, [r5, #40]	; 0x28
 801e904:	4b07      	ldr	r3, [pc, #28]	; (801e924 <_ZN8touchgfx8LCD16bpp46enableTextureMapperL8_ARGB8888_NearestNeighborEv+0x70>)
 801e906:	62eb      	str	r3, [r5, #44]	; 0x2c
 801e908:	bd38      	pop	{r3, r4, r5, pc}
 801e90a:	bf00      	nop
 801e90c:	20012fec 	.word	0x20012fec
 801e910:	20000000 	.word	0x20000000
 801e914:	0801b43f 	.word	0x0801b43f
 801e918:	200000bc 	.word	0x200000bc
 801e91c:	20012ff0 	.word	0x20012ff0
 801e920:	0801b43d 	.word	0x0801b43d
 801e924:	200000c0 	.word	0x200000c0

0801e928 <_ZN8touchgfx8LCD16bpp30enableTextureMapperL8_ARGB8888Ev>:
 801e928:	b510      	push	{r4, lr}
 801e92a:	4604      	mov	r4, r0
 801e92c:	f7ff ff88 	bl	801e840 <_ZN8touchgfx8LCD16bpp52enableTextureMapperL8_ARGB8888_BilinearInterpolationEv>
 801e930:	4620      	mov	r0, r4
 801e932:	e8bd 4010 	ldmia.w	sp!, {r4, lr}
 801e936:	f7ff bfbd 	b.w	801e8b4 <_ZN8touchgfx8LCD16bpp46enableTextureMapperL8_ARGB8888_NearestNeighborEv>
	...

0801e93c <_ZN8touchgfx8LCD16bpp54enableTextureMapperRGB565_Opaque_BilinearInterpolationEv>:
 801e93c:	b538      	push	{r3, r4, r5, lr}
 801e93e:	4c15      	ldr	r4, [pc, #84]	; (801e994 <_ZN8touchgfx8LCD16bpp54enableTextureMapperRGB565_Opaque_BilinearInterpolationEv+0x58>)
 801e940:	7823      	ldrb	r3, [r4, #0]
 801e942:	f3bf 8f5b 	dmb	ish
 801e946:	07da      	lsls	r2, r3, #31
 801e948:	4605      	mov	r5, r0
 801e94a:	d40b      	bmi.n	801e964 <_ZN8touchgfx8LCD16bpp54enableTextureMapperRGB565_Opaque_BilinearInterpolationEv+0x28>
 801e94c:	4620      	mov	r0, r4
 801e94e:	f00a fd68 	bl	8029422 <__cxa_guard_acquire>
 801e952:	b138      	cbz	r0, 801e964 <_ZN8touchgfx8LCD16bpp54enableTextureMapperRGB565_Opaque_BilinearInterpolationEv+0x28>
 801e954:	4620      	mov	r0, r4
 801e956:	f00a fd70 	bl	802943a <__cxa_guard_release>
 801e95a:	4a0f      	ldr	r2, [pc, #60]	; (801e998 <_ZN8touchgfx8LCD16bpp54enableTextureMapperRGB565_Opaque_BilinearInterpolationEv+0x5c>)
 801e95c:	490f      	ldr	r1, [pc, #60]	; (801e99c <_ZN8touchgfx8LCD16bpp54enableTextureMapperRGB565_Opaque_BilinearInterpolationEv+0x60>)
 801e95e:	4810      	ldr	r0, [pc, #64]	; (801e9a0 <_ZN8touchgfx8LCD16bpp54enableTextureMapperRGB565_Opaque_BilinearInterpolationEv+0x64>)
 801e960:	f00a fd58 	bl	8029414 <__aeabi_atexit>
 801e964:	4c0f      	ldr	r4, [pc, #60]	; (801e9a4 <_ZN8touchgfx8LCD16bpp54enableTextureMapperRGB565_Opaque_BilinearInterpolationEv+0x68>)
 801e966:	7823      	ldrb	r3, [r4, #0]
 801e968:	f3bf 8f5b 	dmb	ish
 801e96c:	07db      	lsls	r3, r3, #31
 801e96e:	d40b      	bmi.n	801e988 <_ZN8touchgfx8LCD16bpp54enableTextureMapperRGB565_Opaque_BilinearInterpolationEv+0x4c>
 801e970:	4620      	mov	r0, r4
 801e972:	f00a fd56 	bl	8029422 <__cxa_guard_acquire>
 801e976:	b138      	cbz	r0, 801e988 <_ZN8touchgfx8LCD16bpp54enableTextureMapperRGB565_Opaque_BilinearInterpolationEv+0x4c>
 801e978:	4620      	mov	r0, r4
 801e97a:	f00a fd5e 	bl	802943a <__cxa_guard_release>
 801e97e:	4a06      	ldr	r2, [pc, #24]	; (801e998 <_ZN8touchgfx8LCD16bpp54enableTextureMapperRGB565_Opaque_BilinearInterpolationEv+0x5c>)
 801e980:	4909      	ldr	r1, [pc, #36]	; (801e9a8 <_ZN8touchgfx8LCD16bpp54enableTextureMapperRGB565_Opaque_BilinearInterpolationEv+0x6c>)
 801e982:	480a      	ldr	r0, [pc, #40]	; (801e9ac <_ZN8touchgfx8LCD16bpp54enableTextureMapperRGB565_Opaque_BilinearInterpolationEv+0x70>)
 801e984:	f00a fd46 	bl	8029414 <__aeabi_atexit>
 801e988:	4b05      	ldr	r3, [pc, #20]	; (801e9a0 <_ZN8touchgfx8LCD16bpp54enableTextureMapperRGB565_Opaque_BilinearInterpolationEv+0x64>)
 801e98a:	652b      	str	r3, [r5, #80]	; 0x50
 801e98c:	4b07      	ldr	r3, [pc, #28]	; (801e9ac <_ZN8touchgfx8LCD16bpp54enableTextureMapperRGB565_Opaque_BilinearInterpolationEv+0x70>)
 801e98e:	656b      	str	r3, [r5, #84]	; 0x54
 801e990:	bd38      	pop	{r3, r4, r5, pc}
 801e992:	bf00      	nop
 801e994:	20013024 	.word	0x20013024
 801e998:	20000000 	.word	0x20000000
 801e99c:	0801b42b 	.word	0x0801b42b
 801e9a0:	200000f4 	.word	0x200000f4
 801e9a4:	20013028 	.word	0x20013028
 801e9a8:	0801b429 	.word	0x0801b429
 801e9ac:	200000f8 	.word	0x200000f8

0801e9b0 <_ZN8touchgfx8LCD16bpp57enableTextureMapperRGB565_NonOpaque_BilinearInterpolationEv>:
 801e9b0:	b538      	push	{r3, r4, r5, lr}
 801e9b2:	4c15      	ldr	r4, [pc, #84]	; (801ea08 <_ZN8touchgfx8LCD16bpp57enableTextureMapperRGB565_NonOpaque_BilinearInterpolationEv+0x58>)
 801e9b4:	7823      	ldrb	r3, [r4, #0]
 801e9b6:	f3bf 8f5b 	dmb	ish
 801e9ba:	07da      	lsls	r2, r3, #31
 801e9bc:	4605      	mov	r5, r0
 801e9be:	d40b      	bmi.n	801e9d8 <_ZN8touchgfx8LCD16bpp57enableTextureMapperRGB565_NonOpaque_BilinearInterpolationEv+0x28>
 801e9c0:	4620      	mov	r0, r4
 801e9c2:	f00a fd2e 	bl	8029422 <__cxa_guard_acquire>
 801e9c6:	b138      	cbz	r0, 801e9d8 <_ZN8touchgfx8LCD16bpp57enableTextureMapperRGB565_NonOpaque_BilinearInterpolationEv+0x28>
 801e9c8:	4620      	mov	r0, r4
 801e9ca:	f00a fd36 	bl	802943a <__cxa_guard_release>
 801e9ce:	4a0f      	ldr	r2, [pc, #60]	; (801ea0c <_ZN8touchgfx8LCD16bpp57enableTextureMapperRGB565_NonOpaque_BilinearInterpolationEv+0x5c>)
 801e9d0:	490f      	ldr	r1, [pc, #60]	; (801ea10 <_ZN8touchgfx8LCD16bpp57enableTextureMapperRGB565_NonOpaque_BilinearInterpolationEv+0x60>)
 801e9d2:	4810      	ldr	r0, [pc, #64]	; (801ea14 <_ZN8touchgfx8LCD16bpp57enableTextureMapperRGB565_NonOpaque_BilinearInterpolationEv+0x64>)
 801e9d4:	f00a fd1e 	bl	8029414 <__aeabi_atexit>
 801e9d8:	4c0f      	ldr	r4, [pc, #60]	; (801ea18 <_ZN8touchgfx8LCD16bpp57enableTextureMapperRGB565_NonOpaque_BilinearInterpolationEv+0x68>)
 801e9da:	7823      	ldrb	r3, [r4, #0]
 801e9dc:	f3bf 8f5b 	dmb	ish
 801e9e0:	07db      	lsls	r3, r3, #31
 801e9e2:	d40b      	bmi.n	801e9fc <_ZN8touchgfx8LCD16bpp57enableTextureMapperRGB565_NonOpaque_BilinearInterpolationEv+0x4c>
 801e9e4:	4620      	mov	r0, r4
 801e9e6:	f00a fd1c 	bl	8029422 <__cxa_guard_acquire>
 801e9ea:	b138      	cbz	r0, 801e9fc <_ZN8touchgfx8LCD16bpp57enableTextureMapperRGB565_NonOpaque_BilinearInterpolationEv+0x4c>
 801e9ec:	4620      	mov	r0, r4
 801e9ee:	f00a fd24 	bl	802943a <__cxa_guard_release>
 801e9f2:	4a06      	ldr	r2, [pc, #24]	; (801ea0c <_ZN8touchgfx8LCD16bpp57enableTextureMapperRGB565_NonOpaque_BilinearInterpolationEv+0x5c>)
 801e9f4:	4909      	ldr	r1, [pc, #36]	; (801ea1c <_ZN8touchgfx8LCD16bpp57enableTextureMapperRGB565_NonOpaque_BilinearInterpolationEv+0x6c>)
 801e9f6:	480a      	ldr	r0, [pc, #40]	; (801ea20 <_ZN8touchgfx8LCD16bpp57enableTextureMapperRGB565_NonOpaque_BilinearInterpolationEv+0x70>)
 801e9f8:	f00a fd0c 	bl	8029414 <__aeabi_atexit>
 801e9fc:	4b05      	ldr	r3, [pc, #20]	; (801ea14 <_ZN8touchgfx8LCD16bpp57enableTextureMapperRGB565_NonOpaque_BilinearInterpolationEv+0x64>)
 801e9fe:	64ab      	str	r3, [r5, #72]	; 0x48
 801ea00:	4b07      	ldr	r3, [pc, #28]	; (801ea20 <_ZN8touchgfx8LCD16bpp57enableTextureMapperRGB565_NonOpaque_BilinearInterpolationEv+0x70>)
 801ea02:	64eb      	str	r3, [r5, #76]	; 0x4c
 801ea04:	bd38      	pop	{r3, r4, r5, pc}
 801ea06:	bf00      	nop
 801ea08:	2001302c 	.word	0x2001302c
 801ea0c:	20000000 	.word	0x20000000
 801ea10:	0801b42f 	.word	0x0801b42f
 801ea14:	200000fc 	.word	0x200000fc
 801ea18:	20013030 	.word	0x20013030
 801ea1c:	0801b42d 	.word	0x0801b42d
 801ea20:	20000100 	.word	0x20000100

0801ea24 <_ZN8touchgfx8LCD16bpp48enableTextureMapperRGB565_Opaque_NearestNeighborEv>:
 801ea24:	b538      	push	{r3, r4, r5, lr}
 801ea26:	4c15      	ldr	r4, [pc, #84]	; (801ea7c <_ZN8touchgfx8LCD16bpp48enableTextureMapperRGB565_Opaque_NearestNeighborEv+0x58>)
 801ea28:	7823      	ldrb	r3, [r4, #0]
 801ea2a:	f3bf 8f5b 	dmb	ish
 801ea2e:	07da      	lsls	r2, r3, #31
 801ea30:	4605      	mov	r5, r0
 801ea32:	d40b      	bmi.n	801ea4c <_ZN8touchgfx8LCD16bpp48enableTextureMapperRGB565_Opaque_NearestNeighborEv+0x28>
 801ea34:	4620      	mov	r0, r4
 801ea36:	f00a fcf4 	bl	8029422 <__cxa_guard_acquire>
 801ea3a:	b138      	cbz	r0, 801ea4c <_ZN8touchgfx8LCD16bpp48enableTextureMapperRGB565_Opaque_NearestNeighborEv+0x28>
 801ea3c:	4620      	mov	r0, r4
 801ea3e:	f00a fcfc 	bl	802943a <__cxa_guard_release>
 801ea42:	4a0f      	ldr	r2, [pc, #60]	; (801ea80 <_ZN8touchgfx8LCD16bpp48enableTextureMapperRGB565_Opaque_NearestNeighborEv+0x5c>)
 801ea44:	490f      	ldr	r1, [pc, #60]	; (801ea84 <_ZN8touchgfx8LCD16bpp48enableTextureMapperRGB565_Opaque_NearestNeighborEv+0x60>)
 801ea46:	4810      	ldr	r0, [pc, #64]	; (801ea88 <_ZN8touchgfx8LCD16bpp48enableTextureMapperRGB565_Opaque_NearestNeighborEv+0x64>)
 801ea48:	f00a fce4 	bl	8029414 <__aeabi_atexit>
 801ea4c:	4c0f      	ldr	r4, [pc, #60]	; (801ea8c <_ZN8touchgfx8LCD16bpp48enableTextureMapperRGB565_Opaque_NearestNeighborEv+0x68>)
 801ea4e:	7823      	ldrb	r3, [r4, #0]
 801ea50:	f3bf 8f5b 	dmb	ish
 801ea54:	07db      	lsls	r3, r3, #31
 801ea56:	d40b      	bmi.n	801ea70 <_ZN8touchgfx8LCD16bpp48enableTextureMapperRGB565_Opaque_NearestNeighborEv+0x4c>
 801ea58:	4620      	mov	r0, r4
 801ea5a:	f00a fce2 	bl	8029422 <__cxa_guard_acquire>
 801ea5e:	b138      	cbz	r0, 801ea70 <_ZN8touchgfx8LCD16bpp48enableTextureMapperRGB565_Opaque_NearestNeighborEv+0x4c>
 801ea60:	4620      	mov	r0, r4
 801ea62:	f00a fcea 	bl	802943a <__cxa_guard_release>
 801ea66:	4a06      	ldr	r2, [pc, #24]	; (801ea80 <_ZN8touchgfx8LCD16bpp48enableTextureMapperRGB565_Opaque_NearestNeighborEv+0x5c>)
 801ea68:	4909      	ldr	r1, [pc, #36]	; (801ea90 <_ZN8touchgfx8LCD16bpp48enableTextureMapperRGB565_Opaque_NearestNeighborEv+0x6c>)
 801ea6a:	480a      	ldr	r0, [pc, #40]	; (801ea94 <_ZN8touchgfx8LCD16bpp48enableTextureMapperRGB565_Opaque_NearestNeighborEv+0x70>)
 801ea6c:	f00a fcd2 	bl	8029414 <__aeabi_atexit>
 801ea70:	4b05      	ldr	r3, [pc, #20]	; (801ea88 <_ZN8touchgfx8LCD16bpp48enableTextureMapperRGB565_Opaque_NearestNeighborEv+0x64>)
 801ea72:	642b      	str	r3, [r5, #64]	; 0x40
 801ea74:	4b07      	ldr	r3, [pc, #28]	; (801ea94 <_ZN8touchgfx8LCD16bpp48enableTextureMapperRGB565_Opaque_NearestNeighborEv+0x70>)
 801ea76:	646b      	str	r3, [r5, #68]	; 0x44
 801ea78:	bd38      	pop	{r3, r4, r5, pc}
 801ea7a:	bf00      	nop
 801ea7c:	20012ff4 	.word	0x20012ff4
 801ea80:	20000000 	.word	0x20000000
 801ea84:	0801b433 	.word	0x0801b433
 801ea88:	200000c4 	.word	0x200000c4
 801ea8c:	20012ff8 	.word	0x20012ff8
 801ea90:	0801b431 	.word	0x0801b431
 801ea94:	200000c8 	.word	0x200000c8

0801ea98 <_ZN8touchgfx8LCD16bpp51enableTextureMapperRGB565_NonOpaque_NearestNeighborEv>:
 801ea98:	b538      	push	{r3, r4, r5, lr}
 801ea9a:	4c15      	ldr	r4, [pc, #84]	; (801eaf0 <_ZN8touchgfx8LCD16bpp51enableTextureMapperRGB565_NonOpaque_NearestNeighborEv+0x58>)
 801ea9c:	7823      	ldrb	r3, [r4, #0]
 801ea9e:	f3bf 8f5b 	dmb	ish
 801eaa2:	07da      	lsls	r2, r3, #31
 801eaa4:	4605      	mov	r5, r0
 801eaa6:	d40b      	bmi.n	801eac0 <_ZN8touchgfx8LCD16bpp51enableTextureMapperRGB565_NonOpaque_NearestNeighborEv+0x28>
 801eaa8:	4620      	mov	r0, r4
 801eaaa:	f00a fcba 	bl	8029422 <__cxa_guard_acquire>
 801eaae:	b138      	cbz	r0, 801eac0 <_ZN8touchgfx8LCD16bpp51enableTextureMapperRGB565_NonOpaque_NearestNeighborEv+0x28>
 801eab0:	4620      	mov	r0, r4
 801eab2:	f00a fcc2 	bl	802943a <__cxa_guard_release>
 801eab6:	4a0f      	ldr	r2, [pc, #60]	; (801eaf4 <_ZN8touchgfx8LCD16bpp51enableTextureMapperRGB565_NonOpaque_NearestNeighborEv+0x5c>)
 801eab8:	490f      	ldr	r1, [pc, #60]	; (801eaf8 <_ZN8touchgfx8LCD16bpp51enableTextureMapperRGB565_NonOpaque_NearestNeighborEv+0x60>)
 801eaba:	4810      	ldr	r0, [pc, #64]	; (801eafc <_ZN8touchgfx8LCD16bpp51enableTextureMapperRGB565_NonOpaque_NearestNeighborEv+0x64>)
 801eabc:	f00a fcaa 	bl	8029414 <__aeabi_atexit>
 801eac0:	4c0f      	ldr	r4, [pc, #60]	; (801eb00 <_ZN8touchgfx8LCD16bpp51enableTextureMapperRGB565_NonOpaque_NearestNeighborEv+0x68>)
 801eac2:	7823      	ldrb	r3, [r4, #0]
 801eac4:	f3bf 8f5b 	dmb	ish
 801eac8:	07db      	lsls	r3, r3, #31
 801eaca:	d40b      	bmi.n	801eae4 <_ZN8touchgfx8LCD16bpp51enableTextureMapperRGB565_NonOpaque_NearestNeighborEv+0x4c>
 801eacc:	4620      	mov	r0, r4
 801eace:	f00a fca8 	bl	8029422 <__cxa_guard_acquire>
 801ead2:	b138      	cbz	r0, 801eae4 <_ZN8touchgfx8LCD16bpp51enableTextureMapperRGB565_NonOpaque_NearestNeighborEv+0x4c>
 801ead4:	4620      	mov	r0, r4
 801ead6:	f00a fcb0 	bl	802943a <__cxa_guard_release>
 801eada:	4a06      	ldr	r2, [pc, #24]	; (801eaf4 <_ZN8touchgfx8LCD16bpp51enableTextureMapperRGB565_NonOpaque_NearestNeighborEv+0x5c>)
 801eadc:	4909      	ldr	r1, [pc, #36]	; (801eb04 <_ZN8touchgfx8LCD16bpp51enableTextureMapperRGB565_NonOpaque_NearestNeighborEv+0x6c>)
 801eade:	480a      	ldr	r0, [pc, #40]	; (801eb08 <_ZN8touchgfx8LCD16bpp51enableTextureMapperRGB565_NonOpaque_NearestNeighborEv+0x70>)
 801eae0:	f00a fc98 	bl	8029414 <__aeabi_atexit>
 801eae4:	4b05      	ldr	r3, [pc, #20]	; (801eafc <_ZN8touchgfx8LCD16bpp51enableTextureMapperRGB565_NonOpaque_NearestNeighborEv+0x64>)
 801eae6:	63ab      	str	r3, [r5, #56]	; 0x38
 801eae8:	4b07      	ldr	r3, [pc, #28]	; (801eb08 <_ZN8touchgfx8LCD16bpp51enableTextureMapperRGB565_NonOpaque_NearestNeighborEv+0x70>)
 801eaea:	63eb      	str	r3, [r5, #60]	; 0x3c
 801eaec:	bd38      	pop	{r3, r4, r5, pc}
 801eaee:	bf00      	nop
 801eaf0:	20013014 	.word	0x20013014
 801eaf4:	20000000 	.word	0x20000000
 801eaf8:	0801b437 	.word	0x0801b437
 801eafc:	200000e4 	.word	0x200000e4
 801eb00:	20013018 	.word	0x20013018
 801eb04:	0801b435 	.word	0x0801b435
 801eb08:	200000e8 	.word	0x200000e8

0801eb0c <_ZN8touchgfx8LCD16bpp25enableTextureMapperRGB565Ev>:
 801eb0c:	b510      	push	{r4, lr}
 801eb0e:	4604      	mov	r4, r0
 801eb10:	f7ff ff14 	bl	801e93c <_ZN8touchgfx8LCD16bpp54enableTextureMapperRGB565_Opaque_BilinearInterpolationEv>
 801eb14:	4620      	mov	r0, r4
 801eb16:	f7ff ff85 	bl	801ea24 <_ZN8touchgfx8LCD16bpp48enableTextureMapperRGB565_Opaque_NearestNeighborEv>
 801eb1a:	4620      	mov	r0, r4
 801eb1c:	f7ff ff48 	bl	801e9b0 <_ZN8touchgfx8LCD16bpp57enableTextureMapperRGB565_NonOpaque_BilinearInterpolationEv>
 801eb20:	4620      	mov	r0, r4
 801eb22:	e8bd 4010 	ldmia.w	sp!, {r4, lr}
 801eb26:	f7ff bfb7 	b.w	801ea98 <_ZN8touchgfx8LCD16bpp51enableTextureMapperRGB565_NonOpaque_NearestNeighborEv>
	...

0801eb2c <_ZN8touchgfx8LCD16bpp49enableTextureMapperARGB8888_BilinearInterpolationEv>:
 801eb2c:	b538      	push	{r3, r4, r5, lr}
 801eb2e:	4c15      	ldr	r4, [pc, #84]	; (801eb84 <_ZN8touchgfx8LCD16bpp49enableTextureMapperARGB8888_BilinearInterpolationEv+0x58>)
 801eb30:	7823      	ldrb	r3, [r4, #0]
 801eb32:	f3bf 8f5b 	dmb	ish
 801eb36:	07da      	lsls	r2, r3, #31
 801eb38:	4605      	mov	r5, r0
 801eb3a:	d40b      	bmi.n	801eb54 <_ZN8touchgfx8LCD16bpp49enableTextureMapperARGB8888_BilinearInterpolationEv+0x28>
 801eb3c:	4620      	mov	r0, r4
 801eb3e:	f00a fc70 	bl	8029422 <__cxa_guard_acquire>
 801eb42:	b138      	cbz	r0, 801eb54 <_ZN8touchgfx8LCD16bpp49enableTextureMapperARGB8888_BilinearInterpolationEv+0x28>
 801eb44:	4620      	mov	r0, r4
 801eb46:	f00a fc78 	bl	802943a <__cxa_guard_release>
 801eb4a:	4a0f      	ldr	r2, [pc, #60]	; (801eb88 <_ZN8touchgfx8LCD16bpp49enableTextureMapperARGB8888_BilinearInterpolationEv+0x5c>)
 801eb4c:	490f      	ldr	r1, [pc, #60]	; (801eb8c <_ZN8touchgfx8LCD16bpp49enableTextureMapperARGB8888_BilinearInterpolationEv+0x60>)
 801eb4e:	4810      	ldr	r0, [pc, #64]	; (801eb90 <_ZN8touchgfx8LCD16bpp49enableTextureMapperARGB8888_BilinearInterpolationEv+0x64>)
 801eb50:	f00a fc60 	bl	8029414 <__aeabi_atexit>
 801eb54:	4c0f      	ldr	r4, [pc, #60]	; (801eb94 <_ZN8touchgfx8LCD16bpp49enableTextureMapperARGB8888_BilinearInterpolationEv+0x68>)
 801eb56:	7823      	ldrb	r3, [r4, #0]
 801eb58:	f3bf 8f5b 	dmb	ish
 801eb5c:	07db      	lsls	r3, r3, #31
 801eb5e:	d40b      	bmi.n	801eb78 <_ZN8touchgfx8LCD16bpp49enableTextureMapperARGB8888_BilinearInterpolationEv+0x4c>
 801eb60:	4620      	mov	r0, r4
 801eb62:	f00a fc5e 	bl	8029422 <__cxa_guard_acquire>
 801eb66:	b138      	cbz	r0, 801eb78 <_ZN8touchgfx8LCD16bpp49enableTextureMapperARGB8888_BilinearInterpolationEv+0x4c>
 801eb68:	4620      	mov	r0, r4
 801eb6a:	f00a fc66 	bl	802943a <__cxa_guard_release>
 801eb6e:	4a06      	ldr	r2, [pc, #24]	; (801eb88 <_ZN8touchgfx8LCD16bpp49enableTextureMapperARGB8888_BilinearInterpolationEv+0x5c>)
 801eb70:	4909      	ldr	r1, [pc, #36]	; (801eb98 <_ZN8touchgfx8LCD16bpp49enableTextureMapperARGB8888_BilinearInterpolationEv+0x6c>)
 801eb72:	480a      	ldr	r0, [pc, #40]	; (801eb9c <_ZN8touchgfx8LCD16bpp49enableTextureMapperARGB8888_BilinearInterpolationEv+0x70>)
 801eb74:	f00a fc4e 	bl	8029414 <__aeabi_atexit>
 801eb78:	4b05      	ldr	r3, [pc, #20]	; (801eb90 <_ZN8touchgfx8LCD16bpp49enableTextureMapperARGB8888_BilinearInterpolationEv+0x64>)
 801eb7a:	662b      	str	r3, [r5, #96]	; 0x60
 801eb7c:	4b07      	ldr	r3, [pc, #28]	; (801eb9c <_ZN8touchgfx8LCD16bpp49enableTextureMapperARGB8888_BilinearInterpolationEv+0x70>)
 801eb7e:	666b      	str	r3, [r5, #100]	; 0x64
 801eb80:	bd38      	pop	{r3, r4, r5, pc}
 801eb82:	bf00      	nop
 801eb84:	20012ffc 	.word	0x20012ffc
 801eb88:	20000000 	.word	0x20000000
 801eb8c:	0801b423 	.word	0x0801b423
 801eb90:	200000cc 	.word	0x200000cc
 801eb94:	20013000 	.word	0x20013000
 801eb98:	0801b421 	.word	0x0801b421
 801eb9c:	200000d0 	.word	0x200000d0

0801eba0 <_ZN8touchgfx8LCD16bpp43enableTextureMapperARGB8888_NearestNeighborEv>:
 801eba0:	b538      	push	{r3, r4, r5, lr}
 801eba2:	4c15      	ldr	r4, [pc, #84]	; (801ebf8 <_ZN8touchgfx8LCD16bpp43enableTextureMapperARGB8888_NearestNeighborEv+0x58>)
 801eba4:	7823      	ldrb	r3, [r4, #0]
 801eba6:	f3bf 8f5b 	dmb	ish
 801ebaa:	07da      	lsls	r2, r3, #31
 801ebac:	4605      	mov	r5, r0
 801ebae:	d40b      	bmi.n	801ebc8 <_ZN8touchgfx8LCD16bpp43enableTextureMapperARGB8888_NearestNeighborEv+0x28>
 801ebb0:	4620      	mov	r0, r4
 801ebb2:	f00a fc36 	bl	8029422 <__cxa_guard_acquire>
 801ebb6:	b138      	cbz	r0, 801ebc8 <_ZN8touchgfx8LCD16bpp43enableTextureMapperARGB8888_NearestNeighborEv+0x28>
 801ebb8:	4620      	mov	r0, r4
 801ebba:	f00a fc3e 	bl	802943a <__cxa_guard_release>
 801ebbe:	4a0f      	ldr	r2, [pc, #60]	; (801ebfc <_ZN8touchgfx8LCD16bpp43enableTextureMapperARGB8888_NearestNeighborEv+0x5c>)
 801ebc0:	490f      	ldr	r1, [pc, #60]	; (801ec00 <_ZN8touchgfx8LCD16bpp43enableTextureMapperARGB8888_NearestNeighborEv+0x60>)
 801ebc2:	4810      	ldr	r0, [pc, #64]	; (801ec04 <_ZN8touchgfx8LCD16bpp43enableTextureMapperARGB8888_NearestNeighborEv+0x64>)
 801ebc4:	f00a fc26 	bl	8029414 <__aeabi_atexit>
 801ebc8:	4c0f      	ldr	r4, [pc, #60]	; (801ec08 <_ZN8touchgfx8LCD16bpp43enableTextureMapperARGB8888_NearestNeighborEv+0x68>)
 801ebca:	7823      	ldrb	r3, [r4, #0]
 801ebcc:	f3bf 8f5b 	dmb	ish
 801ebd0:	07db      	lsls	r3, r3, #31
 801ebd2:	d40b      	bmi.n	801ebec <_ZN8touchgfx8LCD16bpp43enableTextureMapperARGB8888_NearestNeighborEv+0x4c>
 801ebd4:	4620      	mov	r0, r4
 801ebd6:	f00a fc24 	bl	8029422 <__cxa_guard_acquire>
 801ebda:	b138      	cbz	r0, 801ebec <_ZN8touchgfx8LCD16bpp43enableTextureMapperARGB8888_NearestNeighborEv+0x4c>
 801ebdc:	4620      	mov	r0, r4
 801ebde:	f00a fc2c 	bl	802943a <__cxa_guard_release>
 801ebe2:	4a06      	ldr	r2, [pc, #24]	; (801ebfc <_ZN8touchgfx8LCD16bpp43enableTextureMapperARGB8888_NearestNeighborEv+0x5c>)
 801ebe4:	4909      	ldr	r1, [pc, #36]	; (801ec0c <_ZN8touchgfx8LCD16bpp43enableTextureMapperARGB8888_NearestNeighborEv+0x6c>)
 801ebe6:	480a      	ldr	r0, [pc, #40]	; (801ec10 <_ZN8touchgfx8LCD16bpp43enableTextureMapperARGB8888_NearestNeighborEv+0x70>)
 801ebe8:	f00a fc14 	bl	8029414 <__aeabi_atexit>
 801ebec:	4b05      	ldr	r3, [pc, #20]	; (801ec04 <_ZN8touchgfx8LCD16bpp43enableTextureMapperARGB8888_NearestNeighborEv+0x64>)
 801ebee:	65ab      	str	r3, [r5, #88]	; 0x58
 801ebf0:	4b07      	ldr	r3, [pc, #28]	; (801ec10 <_ZN8touchgfx8LCD16bpp43enableTextureMapperARGB8888_NearestNeighborEv+0x70>)
 801ebf2:	65eb      	str	r3, [r5, #92]	; 0x5c
 801ebf4:	bd38      	pop	{r3, r4, r5, pc}
 801ebf6:	bf00      	nop
 801ebf8:	20012fd4 	.word	0x20012fd4
 801ebfc:	20000000 	.word	0x20000000
 801ec00:	0801b427 	.word	0x0801b427
 801ec04:	200000a4 	.word	0x200000a4
 801ec08:	20012fd8 	.word	0x20012fd8
 801ec0c:	0801b425 	.word	0x0801b425
 801ec10:	200000a8 	.word	0x200000a8

0801ec14 <_ZN8touchgfx8LCD16bpp27enableTextureMapperARGB8888Ev>:
 801ec14:	b510      	push	{r4, lr}
 801ec16:	4604      	mov	r4, r0
 801ec18:	f7ff ff88 	bl	801eb2c <_ZN8touchgfx8LCD16bpp49enableTextureMapperARGB8888_BilinearInterpolationEv>
 801ec1c:	4620      	mov	r0, r4
 801ec1e:	e8bd 4010 	ldmia.w	sp!, {r4, lr}
 801ec22:	f7ff bfbd 	b.w	801eba0 <_ZN8touchgfx8LCD16bpp43enableTextureMapperARGB8888_NearestNeighborEv>
	...

0801ec28 <_ZN8touchgfx8LCD16bpp43enableTextureMapperA4_BilinearInterpolationEv>:
 801ec28:	b538      	push	{r3, r4, r5, lr}
 801ec2a:	4c15      	ldr	r4, [pc, #84]	; (801ec80 <_ZN8touchgfx8LCD16bpp43enableTextureMapperA4_BilinearInterpolationEv+0x58>)
 801ec2c:	7823      	ldrb	r3, [r4, #0]
 801ec2e:	f3bf 8f5b 	dmb	ish
 801ec32:	07da      	lsls	r2, r3, #31
 801ec34:	4605      	mov	r5, r0
 801ec36:	d40b      	bmi.n	801ec50 <_ZN8touchgfx8LCD16bpp43enableTextureMapperA4_BilinearInterpolationEv+0x28>
 801ec38:	4620      	mov	r0, r4
 801ec3a:	f00a fbf2 	bl	8029422 <__cxa_guard_acquire>
 801ec3e:	b138      	cbz	r0, 801ec50 <_ZN8touchgfx8LCD16bpp43enableTextureMapperA4_BilinearInterpolationEv+0x28>
 801ec40:	4620      	mov	r0, r4
 801ec42:	f00a fbfa 	bl	802943a <__cxa_guard_release>
 801ec46:	4a0f      	ldr	r2, [pc, #60]	; (801ec84 <_ZN8touchgfx8LCD16bpp43enableTextureMapperA4_BilinearInterpolationEv+0x5c>)
 801ec48:	490f      	ldr	r1, [pc, #60]	; (801ec88 <_ZN8touchgfx8LCD16bpp43enableTextureMapperA4_BilinearInterpolationEv+0x60>)
 801ec4a:	4810      	ldr	r0, [pc, #64]	; (801ec8c <_ZN8touchgfx8LCD16bpp43enableTextureMapperA4_BilinearInterpolationEv+0x64>)
 801ec4c:	f00a fbe2 	bl	8029414 <__aeabi_atexit>
 801ec50:	4c0f      	ldr	r4, [pc, #60]	; (801ec90 <_ZN8touchgfx8LCD16bpp43enableTextureMapperA4_BilinearInterpolationEv+0x68>)
 801ec52:	7823      	ldrb	r3, [r4, #0]
 801ec54:	f3bf 8f5b 	dmb	ish
 801ec58:	07db      	lsls	r3, r3, #31
 801ec5a:	d40b      	bmi.n	801ec74 <_ZN8touchgfx8LCD16bpp43enableTextureMapperA4_BilinearInterpolationEv+0x4c>
 801ec5c:	4620      	mov	r0, r4
 801ec5e:	f00a fbe0 	bl	8029422 <__cxa_guard_acquire>
 801ec62:	b138      	cbz	r0, 801ec74 <_ZN8touchgfx8LCD16bpp43enableTextureMapperA4_BilinearInterpolationEv+0x4c>
 801ec64:	4620      	mov	r0, r4
 801ec66:	f00a fbe8 	bl	802943a <__cxa_guard_release>
 801ec6a:	4a06      	ldr	r2, [pc, #24]	; (801ec84 <_ZN8touchgfx8LCD16bpp43enableTextureMapperA4_BilinearInterpolationEv+0x5c>)
 801ec6c:	4909      	ldr	r1, [pc, #36]	; (801ec94 <_ZN8touchgfx8LCD16bpp43enableTextureMapperA4_BilinearInterpolationEv+0x6c>)
 801ec6e:	480a      	ldr	r0, [pc, #40]	; (801ec98 <_ZN8touchgfx8LCD16bpp43enableTextureMapperA4_BilinearInterpolationEv+0x70>)
 801ec70:	f00a fbd0 	bl	8029414 <__aeabi_atexit>
 801ec74:	4b05      	ldr	r3, [pc, #20]	; (801ec8c <_ZN8touchgfx8LCD16bpp43enableTextureMapperA4_BilinearInterpolationEv+0x64>)
 801ec76:	672b      	str	r3, [r5, #112]	; 0x70
 801ec78:	4b07      	ldr	r3, [pc, #28]	; (801ec98 <_ZN8touchgfx8LCD16bpp43enableTextureMapperA4_BilinearInterpolationEv+0x70>)
 801ec7a:	676b      	str	r3, [r5, #116]	; 0x74
 801ec7c:	bd38      	pop	{r3, r4, r5, pc}
 801ec7e:	bf00      	nop
 801ec80:	20012fcc 	.word	0x20012fcc
 801ec84:	20000000 	.word	0x20000000
 801ec88:	0801b41b 	.word	0x0801b41b
 801ec8c:	2000009c 	.word	0x2000009c
 801ec90:	20012fd0 	.word	0x20012fd0
 801ec94:	0801b419 	.word	0x0801b419
 801ec98:	200000a0 	.word	0x200000a0

0801ec9c <_ZN8touchgfx8LCD16bpp37enableTextureMapperA4_NearestNeighborEv>:
 801ec9c:	b538      	push	{r3, r4, r5, lr}
 801ec9e:	4c15      	ldr	r4, [pc, #84]	; (801ecf4 <_ZN8touchgfx8LCD16bpp37enableTextureMapperA4_NearestNeighborEv+0x58>)
 801eca0:	7823      	ldrb	r3, [r4, #0]
 801eca2:	f3bf 8f5b 	dmb	ish
 801eca6:	07da      	lsls	r2, r3, #31
 801eca8:	4605      	mov	r5, r0
 801ecaa:	d40b      	bmi.n	801ecc4 <_ZN8touchgfx8LCD16bpp37enableTextureMapperA4_NearestNeighborEv+0x28>
 801ecac:	4620      	mov	r0, r4
 801ecae:	f00a fbb8 	bl	8029422 <__cxa_guard_acquire>
 801ecb2:	b138      	cbz	r0, 801ecc4 <_ZN8touchgfx8LCD16bpp37enableTextureMapperA4_NearestNeighborEv+0x28>
 801ecb4:	4620      	mov	r0, r4
 801ecb6:	f00a fbc0 	bl	802943a <__cxa_guard_release>
 801ecba:	4a0f      	ldr	r2, [pc, #60]	; (801ecf8 <_ZN8touchgfx8LCD16bpp37enableTextureMapperA4_NearestNeighborEv+0x5c>)
 801ecbc:	490f      	ldr	r1, [pc, #60]	; (801ecfc <_ZN8touchgfx8LCD16bpp37enableTextureMapperA4_NearestNeighborEv+0x60>)
 801ecbe:	4810      	ldr	r0, [pc, #64]	; (801ed00 <_ZN8touchgfx8LCD16bpp37enableTextureMapperA4_NearestNeighborEv+0x64>)
 801ecc0:	f00a fba8 	bl	8029414 <__aeabi_atexit>
 801ecc4:	4c0f      	ldr	r4, [pc, #60]	; (801ed04 <_ZN8touchgfx8LCD16bpp37enableTextureMapperA4_NearestNeighborEv+0x68>)
 801ecc6:	7823      	ldrb	r3, [r4, #0]
 801ecc8:	f3bf 8f5b 	dmb	ish
 801eccc:	07db      	lsls	r3, r3, #31
 801ecce:	d40b      	bmi.n	801ece8 <_ZN8touchgfx8LCD16bpp37enableTextureMapperA4_NearestNeighborEv+0x4c>
 801ecd0:	4620      	mov	r0, r4
 801ecd2:	f00a fba6 	bl	8029422 <__cxa_guard_acquire>
 801ecd6:	b138      	cbz	r0, 801ece8 <_ZN8touchgfx8LCD16bpp37enableTextureMapperA4_NearestNeighborEv+0x4c>
 801ecd8:	4620      	mov	r0, r4
 801ecda:	f00a fbae 	bl	802943a <__cxa_guard_release>
 801ecde:	4a06      	ldr	r2, [pc, #24]	; (801ecf8 <_ZN8touchgfx8LCD16bpp37enableTextureMapperA4_NearestNeighborEv+0x5c>)
 801ece0:	4909      	ldr	r1, [pc, #36]	; (801ed08 <_ZN8touchgfx8LCD16bpp37enableTextureMapperA4_NearestNeighborEv+0x6c>)
 801ece2:	480a      	ldr	r0, [pc, #40]	; (801ed0c <_ZN8touchgfx8LCD16bpp37enableTextureMapperA4_NearestNeighborEv+0x70>)
 801ece4:	f00a fb96 	bl	8029414 <__aeabi_atexit>
 801ece8:	4b05      	ldr	r3, [pc, #20]	; (801ed00 <_ZN8touchgfx8LCD16bpp37enableTextureMapperA4_NearestNeighborEv+0x64>)
 801ecea:	66ab      	str	r3, [r5, #104]	; 0x68
 801ecec:	4b07      	ldr	r3, [pc, #28]	; (801ed0c <_ZN8touchgfx8LCD16bpp37enableTextureMapperA4_NearestNeighborEv+0x70>)
 801ecee:	66eb      	str	r3, [r5, #108]	; 0x6c
 801ecf0:	bd38      	pop	{r3, r4, r5, pc}
 801ecf2:	bf00      	nop
 801ecf4:	20012fc4 	.word	0x20012fc4
 801ecf8:	20000000 	.word	0x20000000
 801ecfc:	0801b41f 	.word	0x0801b41f
 801ed00:	20000094 	.word	0x20000094
 801ed04:	20012fc8 	.word	0x20012fc8
 801ed08:	0801b41d 	.word	0x0801b41d
 801ed0c:	20000098 	.word	0x20000098

0801ed10 <_ZN8touchgfx8LCD16bpp21enableTextureMapperA4Ev>:
 801ed10:	b510      	push	{r4, lr}
 801ed12:	4604      	mov	r4, r0
 801ed14:	f7ff ff88 	bl	801ec28 <_ZN8touchgfx8LCD16bpp43enableTextureMapperA4_BilinearInterpolationEv>
 801ed18:	4620      	mov	r0, r4
 801ed1a:	e8bd 4010 	ldmia.w	sp!, {r4, lr}
 801ed1e:	f7ff bfbd 	b.w	801ec9c <_ZN8touchgfx8LCD16bpp37enableTextureMapperA4_NearestNeighborEv>

0801ed22 <_ZN8touchgfx8LCD16bpp22enableTextureMapperAllEv>:
 801ed22:	b510      	push	{r4, lr}
 801ed24:	4604      	mov	r4, r0
 801ed26:	f7ff fff3 	bl	801ed10 <_ZN8touchgfx8LCD16bpp21enableTextureMapperA4Ev>
 801ed2a:	4620      	mov	r0, r4
 801ed2c:	f7ff ff72 	bl	801ec14 <_ZN8touchgfx8LCD16bpp27enableTextureMapperARGB8888Ev>
 801ed30:	4620      	mov	r0, r4
 801ed32:	f7ff fdf9 	bl	801e928 <_ZN8touchgfx8LCD16bpp30enableTextureMapperL8_ARGB8888Ev>
 801ed36:	4620      	mov	r0, r4
 801ed38:	f7ff fcfa 	bl	801e730 <_ZN8touchgfx8LCD16bpp28enableTextureMapperL8_RGB565Ev>
 801ed3c:	4620      	mov	r0, r4
 801ed3e:	f7ff fd75 	bl	801e82c <_ZN8touchgfx8LCD16bpp28enableTextureMapperL8_RGB888Ev>
 801ed42:	4620      	mov	r0, r4
 801ed44:	e8bd 4010 	ldmia.w	sp!, {r4, lr}
 801ed48:	f7ff bee0 	b.w	801eb0c <_ZN8touchgfx8LCD16bpp25enableTextureMapperRGB565Ev>

0801ed4c <_ZN8touchgfx8LCD16bpp23enableDecompressorL8_L4Ev>:
 801ed4c:	b538      	push	{r3, r4, r5, lr}
 801ed4e:	4c0b      	ldr	r4, [pc, #44]	; (801ed7c <_ZN8touchgfx8LCD16bpp23enableDecompressorL8_L4Ev+0x30>)
 801ed50:	7823      	ldrb	r3, [r4, #0]
 801ed52:	f3bf 8f5b 	dmb	ish
 801ed56:	07db      	lsls	r3, r3, #31
 801ed58:	4605      	mov	r5, r0
 801ed5a:	d40b      	bmi.n	801ed74 <_ZN8touchgfx8LCD16bpp23enableDecompressorL8_L4Ev+0x28>
 801ed5c:	4620      	mov	r0, r4
 801ed5e:	f00a fb60 	bl	8029422 <__cxa_guard_acquire>
 801ed62:	b138      	cbz	r0, 801ed74 <_ZN8touchgfx8LCD16bpp23enableDecompressorL8_L4Ev+0x28>
 801ed64:	4620      	mov	r0, r4
 801ed66:	f00a fb68 	bl	802943a <__cxa_guard_release>
 801ed6a:	4a05      	ldr	r2, [pc, #20]	; (801ed80 <_ZN8touchgfx8LCD16bpp23enableDecompressorL8_L4Ev+0x34>)
 801ed6c:	4905      	ldr	r1, [pc, #20]	; (801ed84 <_ZN8touchgfx8LCD16bpp23enableDecompressorL8_L4Ev+0x38>)
 801ed6e:	4806      	ldr	r0, [pc, #24]	; (801ed88 <_ZN8touchgfx8LCD16bpp23enableDecompressorL8_L4Ev+0x3c>)
 801ed70:	f00a fb50 	bl	8029414 <__aeabi_atexit>
 801ed74:	4b04      	ldr	r3, [pc, #16]	; (801ed88 <_ZN8touchgfx8LCD16bpp23enableDecompressorL8_L4Ev+0x3c>)
 801ed76:	67ab      	str	r3, [r5, #120]	; 0x78
 801ed78:	bd38      	pop	{r3, r4, r5, pc}
 801ed7a:	bf00      	nop
 801ed7c:	20012fb8 	.word	0x20012fb8
 801ed80:	20000000 	.word	0x20000000
 801ed84:	0801b417 	.word	0x0801b417
 801ed88:	2000008c 	.word	0x2000008c

0801ed8c <_ZN8touchgfx8LCD16bpp24enableDecompressorL8_RLEEv>:
 801ed8c:	b538      	push	{r3, r4, r5, lr}
 801ed8e:	4c0b      	ldr	r4, [pc, #44]	; (801edbc <_ZN8touchgfx8LCD16bpp24enableDecompressorL8_RLEEv+0x30>)
 801ed90:	7823      	ldrb	r3, [r4, #0]
 801ed92:	f3bf 8f5b 	dmb	ish
 801ed96:	07db      	lsls	r3, r3, #31
 801ed98:	4605      	mov	r5, r0
 801ed9a:	d40b      	bmi.n	801edb4 <_ZN8touchgfx8LCD16bpp24enableDecompressorL8_RLEEv+0x28>
 801ed9c:	4620      	mov	r0, r4
 801ed9e:	f00a fb40 	bl	8029422 <__cxa_guard_acquire>
 801eda2:	b138      	cbz	r0, 801edb4 <_ZN8touchgfx8LCD16bpp24enableDecompressorL8_RLEEv+0x28>
 801eda4:	4620      	mov	r0, r4
 801eda6:	f00a fb48 	bl	802943a <__cxa_guard_release>
 801edaa:	4a05      	ldr	r2, [pc, #20]	; (801edc0 <_ZN8touchgfx8LCD16bpp24enableDecompressorL8_RLEEv+0x34>)
 801edac:	4905      	ldr	r1, [pc, #20]	; (801edc4 <_ZN8touchgfx8LCD16bpp24enableDecompressorL8_RLEEv+0x38>)
 801edae:	4806      	ldr	r0, [pc, #24]	; (801edc8 <_ZN8touchgfx8LCD16bpp24enableDecompressorL8_RLEEv+0x3c>)
 801edb0:	f00a fb30 	bl	8029414 <__aeabi_atexit>
 801edb4:	4b04      	ldr	r3, [pc, #16]	; (801edc8 <_ZN8touchgfx8LCD16bpp24enableDecompressorL8_RLEEv+0x3c>)
 801edb6:	67eb      	str	r3, [r5, #124]	; 0x7c
 801edb8:	bd38      	pop	{r3, r4, r5, pc}
 801edba:	bf00      	nop
 801edbc:	20012fbc 	.word	0x20012fbc
 801edc0:	20000000 	.word	0x20000000
 801edc4:	0801b415 	.word	0x0801b415
 801edc8:	20000090 	.word	0x20000090

0801edcc <_ZN8touchgfx8LCD16bpp25enableDecompressorL8_LZW9Ev>:
 801edcc:	b570      	push	{r4, r5, r6, lr}
 801edce:	4d0d      	ldr	r5, [pc, #52]	; (801ee04 <_ZN8touchgfx8LCD16bpp25enableDecompressorL8_LZW9Ev+0x38>)
 801edd0:	4c0d      	ldr	r4, [pc, #52]	; (801ee08 <_ZN8touchgfx8LCD16bpp25enableDecompressorL8_LZW9Ev+0x3c>)
 801edd2:	782b      	ldrb	r3, [r5, #0]
 801edd4:	f3bf 8f5b 	dmb	ish
 801edd8:	f013 0f01 	tst.w	r3, #1
 801eddc:	4606      	mov	r6, r0
 801edde:	d10d      	bne.n	801edfc <_ZN8touchgfx8LCD16bpp25enableDecompressorL8_LZW9Ev+0x30>
 801ede0:	4628      	mov	r0, r5
 801ede2:	f00a fb1e 	bl	8029422 <__cxa_guard_acquire>
 801ede6:	b148      	cbz	r0, 801edfc <_ZN8touchgfx8LCD16bpp25enableDecompressorL8_LZW9Ev+0x30>
 801ede8:	4b08      	ldr	r3, [pc, #32]	; (801ee0c <_ZN8touchgfx8LCD16bpp25enableDecompressorL8_LZW9Ev+0x40>)
 801edea:	6023      	str	r3, [r4, #0]
 801edec:	4628      	mov	r0, r5
 801edee:	f00a fb24 	bl	802943a <__cxa_guard_release>
 801edf2:	4a07      	ldr	r2, [pc, #28]	; (801ee10 <_ZN8touchgfx8LCD16bpp25enableDecompressorL8_LZW9Ev+0x44>)
 801edf4:	4907      	ldr	r1, [pc, #28]	; (801ee14 <_ZN8touchgfx8LCD16bpp25enableDecompressorL8_LZW9Ev+0x48>)
 801edf6:	4620      	mov	r0, r4
 801edf8:	f00a fb0c 	bl	8029414 <__aeabi_atexit>
 801edfc:	f8c6 4080 	str.w	r4, [r6, #128]	; 0x80
 801ee00:	bd70      	pop	{r4, r5, r6, pc}
 801ee02:	bf00      	nop
 801ee04:	20012fc0 	.word	0x20012fc0
 801ee08:	20013034 	.word	0x20013034
 801ee0c:	0802e9bc 	.word	0x0802e9bc
 801ee10:	20000000 	.word	0x20000000
 801ee14:	0801b413 	.word	0x0801b413

0801ee18 <_ZN8touchgfx8LCD16bpp24enableDecompressorL8_AllEv>:
 801ee18:	b510      	push	{r4, lr}
 801ee1a:	4604      	mov	r4, r0
 801ee1c:	f7ff ff96 	bl	801ed4c <_ZN8touchgfx8LCD16bpp23enableDecompressorL8_L4Ev>
 801ee20:	4620      	mov	r0, r4
 801ee22:	f7ff ffb3 	bl	801ed8c <_ZN8touchgfx8LCD16bpp24enableDecompressorL8_RLEEv>
 801ee26:	4620      	mov	r0, r4
 801ee28:	e8bd 4010 	ldmia.w	sp!, {r4, lr}
 801ee2c:	f7ff bfce 	b.w	801edcc <_ZN8touchgfx8LCD16bpp25enableDecompressorL8_LZW9Ev>

0801ee30 <_ZNK8touchgfx8LCD16bpp55TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKhPKtssiihhh>:
 801ee30:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 801ee34:	e9dd 450b 	ldrd	r4, r5, [sp, #44]	; 0x2c
 801ee38:	f9bd e024 	ldrsh.w	lr, [sp, #36]	; 0x24
 801ee3c:	f9bd b028 	ldrsh.w	fp, [sp, #40]	; 0x28
 801ee40:	f89d 9034 	ldrb.w	r9, [sp, #52]	; 0x34
 801ee44:	f89d 7038 	ldrb.w	r7, [sp, #56]	; 0x38
 801ee48:	f89d 603c 	ldrb.w	r6, [sp, #60]	; 0x3c
 801ee4c:	8808      	ldrh	r0, [r1, #0]
 801ee4e:	fb05 4c0e 	mla	ip, r5, lr, r4
 801ee52:	2d00      	cmp	r5, #0
 801ee54:	eb02 0a0c 	add.w	sl, r2, ip
 801ee58:	f2c0 80b0 	blt.w	801efbc <_ZNK8touchgfx8LCD16bpp55TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKhPKtssiihhh+0x18c>
 801ee5c:	45ab      	cmp	fp, r5
 801ee5e:	f340 80ad 	ble.w	801efbc <_ZNK8touchgfx8LCD16bpp55TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKhPKtssiihhh+0x18c>
 801ee62:	2c00      	cmp	r4, #0
 801ee64:	f2c0 80a8 	blt.w	801efb8 <_ZNK8touchgfx8LCD16bpp55TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKhPKtssiihhh+0x188>
 801ee68:	45a6      	cmp	lr, r4
 801ee6a:	f340 80a5 	ble.w	801efb8 <_ZNK8touchgfx8LCD16bpp55TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKhPKtssiihhh+0x188>
 801ee6e:	f812 200c 	ldrb.w	r2, [r2, ip]
 801ee72:	f833 8012 	ldrh.w	r8, [r3, r2, lsl #1]
 801ee76:	1c62      	adds	r2, r4, #1
 801ee78:	f100 80a3 	bmi.w	801efc2 <_ZNK8touchgfx8LCD16bpp55TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKhPKtssiihhh+0x192>
 801ee7c:	4596      	cmp	lr, r2
 801ee7e:	f340 80a0 	ble.w	801efc2 <_ZNK8touchgfx8LCD16bpp55TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKhPKtssiihhh+0x192>
 801ee82:	f1b9 0f00 	cmp.w	r9, #0
 801ee86:	f000 809c 	beq.w	801efc2 <_ZNK8touchgfx8LCD16bpp55TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKhPKtssiihhh+0x192>
 801ee8a:	f89a 2001 	ldrb.w	r2, [sl, #1]
 801ee8e:	f833 c012 	ldrh.w	ip, [r3, r2, lsl #1]
 801ee92:	3501      	adds	r5, #1
 801ee94:	f100 8099 	bmi.w	801efca <_ZNK8touchgfx8LCD16bpp55TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKhPKtssiihhh+0x19a>
 801ee98:	45ab      	cmp	fp, r5
 801ee9a:	f340 8096 	ble.w	801efca <_ZNK8touchgfx8LCD16bpp55TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKhPKtssiihhh+0x19a>
 801ee9e:	2f00      	cmp	r7, #0
 801eea0:	f000 8093 	beq.w	801efca <_ZNK8touchgfx8LCD16bpp55TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKhPKtssiihhh+0x19a>
 801eea4:	2c00      	cmp	r4, #0
 801eea6:	f2c0 808e 	blt.w	801efc6 <_ZNK8touchgfx8LCD16bpp55TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKhPKtssiihhh+0x196>
 801eeaa:	45a6      	cmp	lr, r4
 801eeac:	f340 808b 	ble.w	801efc6 <_ZNK8touchgfx8LCD16bpp55TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKhPKtssiihhh+0x196>
 801eeb0:	f81a 200e 	ldrb.w	r2, [sl, lr]
 801eeb4:	f833 5012 	ldrh.w	r5, [r3, r2, lsl #1]
 801eeb8:	3401      	adds	r4, #1
 801eeba:	f100 8089 	bmi.w	801efd0 <_ZNK8touchgfx8LCD16bpp55TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKhPKtssiihhh+0x1a0>
 801eebe:	45a6      	cmp	lr, r4
 801eec0:	f340 8086 	ble.w	801efd0 <_ZNK8touchgfx8LCD16bpp55TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKhPKtssiihhh+0x1a0>
 801eec4:	f1b9 0f00 	cmp.w	r9, #0
 801eec8:	f000 8082 	beq.w	801efd0 <_ZNK8touchgfx8LCD16bpp55TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKhPKtssiihhh+0x1a0>
 801eecc:	44d6      	add	lr, sl
 801eece:	f89e 2001 	ldrb.w	r2, [lr, #1]
 801eed2:	f833 3012 	ldrh.w	r3, [r3, r2, lsl #1]
 801eed6:	ea4f 4408 	mov.w	r4, r8, lsl #16
 801eeda:	f004 64fc 	and.w	r4, r4, #132120576	; 0x7e00000
 801eede:	f428 68fc 	bic.w	r8, r8, #2016	; 0x7e0
 801eee2:	fb19 fe07 	smulbb	lr, r9, r7
 801eee6:	ea44 0808 	orr.w	r8, r4, r8
 801eeea:	ea4f 440c 	mov.w	r4, ip, lsl #16
 801eeee:	f3ce 0ec7 	ubfx	lr, lr, #3, #8
 801eef2:	f1c7 0210 	rsb	r2, r7, #16
 801eef6:	f004 64fc 	and.w	r4, r4, #132120576	; 0x7e00000
 801eefa:	f42c 6cfc 	bic.w	ip, ip, #2016	; 0x7e0
 801eefe:	ea44 0c0c 	orr.w	ip, r4, ip
 801ef02:	eba2 0209 	sub.w	r2, r2, r9
 801ef06:	ebce 0449 	rsb	r4, lr, r9, lsl #1
 801ef0a:	eb0e 0242 	add.w	r2, lr, r2, lsl #1
 801ef0e:	fb04 f40c 	mul.w	r4, r4, ip
 801ef12:	fb02 4808 	mla	r8, r2, r8, r4
 801ef16:	041a      	lsls	r2, r3, #16
 801ef18:	f002 62fc 	and.w	r2, r2, #132120576	; 0x7e00000
 801ef1c:	f423 63fc 	bic.w	r3, r3, #2016	; 0x7e0
 801ef20:	4313      	orrs	r3, r2
 801ef22:	042a      	lsls	r2, r5, #16
 801ef24:	f002 62fc 	and.w	r2, r2, #132120576	; 0x7e00000
 801ef28:	f425 65fc 	bic.w	r5, r5, #2016	; 0x7e0
 801ef2c:	fb0e 8303 	mla	r3, lr, r3, r8
 801ef30:	432a      	orrs	r2, r5
 801ef32:	ebce 0747 	rsb	r7, lr, r7, lsl #1
 801ef36:	fb07 3202 	mla	r2, r7, r2, r3
 801ef3a:	0d53      	lsrs	r3, r2, #21
 801ef3c:	0952      	lsrs	r2, r2, #5
 801ef3e:	f403 63fc 	and.w	r3, r3, #2016	; 0x7e0
 801ef42:	f422 62fc 	bic.w	r2, r2, #2016	; 0x7e0
 801ef46:	431a      	orrs	r2, r3
 801ef48:	b293      	uxth	r3, r2
 801ef4a:	b2b4      	uxth	r4, r6
 801ef4c:	1202      	asrs	r2, r0, #8
 801ef4e:	43f6      	mvns	r6, r6
 801ef50:	b2f6      	uxtb	r6, r6
 801ef52:	121d      	asrs	r5, r3, #8
 801ef54:	f002 02f8 	and.w	r2, r2, #248	; 0xf8
 801ef58:	fb12 f206 	smulbb	r2, r2, r6
 801ef5c:	10c7      	asrs	r7, r0, #3
 801ef5e:	f005 05f8 	and.w	r5, r5, #248	; 0xf8
 801ef62:	00c0      	lsls	r0, r0, #3
 801ef64:	fb05 2504 	mla	r5, r5, r4, r2
 801ef68:	b2c0      	uxtb	r0, r0
 801ef6a:	10da      	asrs	r2, r3, #3
 801ef6c:	00db      	lsls	r3, r3, #3
 801ef6e:	b2db      	uxtb	r3, r3
 801ef70:	f007 07fc 	and.w	r7, r7, #252	; 0xfc
 801ef74:	fb10 f006 	smulbb	r0, r0, r6
 801ef78:	b2ad      	uxth	r5, r5
 801ef7a:	fb03 0004 	mla	r0, r3, r4, r0
 801ef7e:	f002 02fc 	and.w	r2, r2, #252	; 0xfc
 801ef82:	fb17 f706 	smulbb	r7, r7, r6
 801ef86:	b280      	uxth	r0, r0
 801ef88:	1c6b      	adds	r3, r5, #1
 801ef8a:	fb02 7204 	mla	r2, r2, r4, r7
 801ef8e:	b292      	uxth	r2, r2
 801ef90:	eb03 2515 	add.w	r5, r3, r5, lsr #8
 801ef94:	1c43      	adds	r3, r0, #1
 801ef96:	eb03 2310 	add.w	r3, r3, r0, lsr #8
 801ef9a:	1c50      	adds	r0, r2, #1
 801ef9c:	eb00 2212 	add.w	r2, r0, r2, lsr #8
 801efa0:	f405 4578 	and.w	r5, r5, #63488	; 0xf800
 801efa4:	f3c3 23c4 	ubfx	r3, r3, #11, #5
 801efa8:	0952      	lsrs	r2, r2, #5
 801efaa:	432b      	orrs	r3, r5
 801efac:	f402 62fc 	and.w	r2, r2, #2016	; 0x7e0
 801efb0:	4313      	orrs	r3, r2
 801efb2:	800b      	strh	r3, [r1, #0]
 801efb4:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
 801efb8:	4680      	mov	r8, r0
 801efba:	e75c      	b.n	801ee76 <_ZNK8touchgfx8LCD16bpp55TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKhPKtssiihhh+0x46>
 801efbc:	4684      	mov	ip, r0
 801efbe:	4680      	mov	r8, r0
 801efc0:	e767      	b.n	801ee92 <_ZNK8touchgfx8LCD16bpp55TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKhPKtssiihhh+0x62>
 801efc2:	4684      	mov	ip, r0
 801efc4:	e765      	b.n	801ee92 <_ZNK8touchgfx8LCD16bpp55TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKhPKtssiihhh+0x62>
 801efc6:	4605      	mov	r5, r0
 801efc8:	e776      	b.n	801eeb8 <_ZNK8touchgfx8LCD16bpp55TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKhPKtssiihhh+0x88>
 801efca:	4603      	mov	r3, r0
 801efcc:	4605      	mov	r5, r0
 801efce:	e782      	b.n	801eed6 <_ZNK8touchgfx8LCD16bpp55TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKhPKtssiihhh+0xa6>
 801efd0:	4603      	mov	r3, r0
 801efd2:	e780      	b.n	801eed6 <_ZNK8touchgfx8LCD16bpp55TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKhPKtssiihhh+0xa6>

0801efd4 <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff>:
 801efd4:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 801efd8:	b099      	sub	sp, #100	; 0x64
 801efda:	e9dd a523 	ldrd	sl, r5, [sp, #140]	; 0x8c
 801efde:	9215      	str	r2, [sp, #84]	; 0x54
 801efe0:	9309      	str	r3, [sp, #36]	; 0x24
 801efe2:	9a27      	ldr	r2, [sp, #156]	; 0x9c
 801efe4:	f89d 30ac 	ldrb.w	r3, [sp, #172]	; 0xac
 801efe8:	930d      	str	r3, [sp, #52]	; 0x34
 801efea:	910c      	str	r1, [sp, #48]	; 0x30
 801efec:	e9dd 1328 	ldrd	r1, r3, [sp, #160]	; 0xa0
 801eff0:	9016      	str	r0, [sp, #88]	; 0x58
 801eff2:	6850      	ldr	r0, [r2, #4]
 801eff4:	6812      	ldr	r2, [r2, #0]
 801eff6:	fb00 1303 	mla	r3, r0, r3, r1
 801effa:	eb02 0843 	add.w	r8, r2, r3, lsl #1
 801effe:	9b2a      	ldr	r3, [sp, #168]	; 0xa8
 801f000:	681b      	ldr	r3, [r3, #0]
 801f002:	930b      	str	r3, [sp, #44]	; 0x2c
 801f004:	9b2a      	ldr	r3, [sp, #168]	; 0xa8
 801f006:	685e      	ldr	r6, [r3, #4]
 801f008:	9b0d      	ldr	r3, [sp, #52]	; 0x34
 801f00a:	43db      	mvns	r3, r3
 801f00c:	b2db      	uxtb	r3, r3
 801f00e:	3604      	adds	r6, #4
 801f010:	930a      	str	r3, [sp, #40]	; 0x28
 801f012:	9b0c      	ldr	r3, [sp, #48]	; 0x30
 801f014:	2b00      	cmp	r3, #0
 801f016:	dc03      	bgt.n	801f020 <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x4c>
 801f018:	9b15      	ldr	r3, [sp, #84]	; 0x54
 801f01a:	2b00      	cmp	r3, #0
 801f01c:	f340 8225 	ble.w	801f46a <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x496>
 801f020:	9b2a      	ldr	r3, [sp, #168]	; 0xa8
 801f022:	f9b3 1008 	ldrsh.w	r1, [r3, #8]
 801f026:	f9b3 200c 	ldrsh.w	r2, [r3, #12]
 801f02a:	1e48      	subs	r0, r1, #1
 801f02c:	1e57      	subs	r7, r2, #1
 801f02e:	9b09      	ldr	r3, [sp, #36]	; 0x24
 801f030:	2b00      	cmp	r3, #0
 801f032:	f340 80e3 	ble.w	801f1fc <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x228>
 801f036:	ea5f 4c2a 	movs.w	ip, sl, asr #16
 801f03a:	ea4f 4325 	mov.w	r3, r5, asr #16
 801f03e:	d406      	bmi.n	801f04e <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x7a>
 801f040:	4584      	cmp	ip, r0
 801f042:	da04      	bge.n	801f04e <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x7a>
 801f044:	2b00      	cmp	r3, #0
 801f046:	db02      	blt.n	801f04e <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x7a>
 801f048:	42bb      	cmp	r3, r7
 801f04a:	f2c0 80d8 	blt.w	801f1fe <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x22a>
 801f04e:	f11c 0c01 	adds.w	ip, ip, #1
 801f052:	f100 80c9 	bmi.w	801f1e8 <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x214>
 801f056:	4561      	cmp	r1, ip
 801f058:	f2c0 80c6 	blt.w	801f1e8 <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x214>
 801f05c:	3301      	adds	r3, #1
 801f05e:	f100 80c3 	bmi.w	801f1e8 <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x214>
 801f062:	429a      	cmp	r2, r3
 801f064:	f2c0 80c0 	blt.w	801f1e8 <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x214>
 801f068:	f8dd b024 	ldr.w	fp, [sp, #36]	; 0x24
 801f06c:	4647      	mov	r7, r8
 801f06e:	f1bb 0f00 	cmp.w	fp, #0
 801f072:	f340 80e3 	ble.w	801f23c <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x268>
 801f076:	9a2a      	ldr	r2, [sp, #168]	; 0xa8
 801f078:	9b2a      	ldr	r3, [sp, #168]	; 0xa8
 801f07a:	f8d2 e00c 	ldr.w	lr, [r2, #12]
 801f07e:	689b      	ldr	r3, [r3, #8]
 801f080:	ea5f 422a 	movs.w	r2, sl, asr #16
 801f084:	ea4f 4c25 	mov.w	ip, r5, asr #16
 801f088:	f3ca 3003 	ubfx	r0, sl, #12, #4
 801f08c:	f3c5 3103 	ubfx	r1, r5, #12, #4
 801f090:	f100 8121 	bmi.w	801f2d6 <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x302>
 801f094:	f103 39ff 	add.w	r9, r3, #4294967295
 801f098:	454a      	cmp	r2, r9
 801f09a:	f280 811c 	bge.w	801f2d6 <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x302>
 801f09e:	f1bc 0f00 	cmp.w	ip, #0
 801f0a2:	f2c0 8118 	blt.w	801f2d6 <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x302>
 801f0a6:	f10e 39ff 	add.w	r9, lr, #4294967295
 801f0aa:	45cc      	cmp	ip, r9
 801f0ac:	f280 8113 	bge.w	801f2d6 <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x302>
 801f0b0:	b21b      	sxth	r3, r3
 801f0b2:	fb0c 2203 	mla	r2, ip, r3, r2
 801f0b6:	9c0b      	ldr	r4, [sp, #44]	; 0x2c
 801f0b8:	eb04 0902 	add.w	r9, r4, r2
 801f0bc:	5ca2      	ldrb	r2, [r4, r2]
 801f0be:	f836 e012 	ldrh.w	lr, [r6, r2, lsl #1]
 801f0c2:	2800      	cmp	r0, #0
 801f0c4:	f000 80fe 	beq.w	801f2c4 <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x2f0>
 801f0c8:	f899 2001 	ldrb.w	r2, [r9, #1]
 801f0cc:	f836 2012 	ldrh.w	r2, [r6, r2, lsl #1]
 801f0d0:	9211      	str	r2, [sp, #68]	; 0x44
 801f0d2:	b151      	cbz	r1, 801f0ea <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x116>
 801f0d4:	eb09 0203 	add.w	r2, r9, r3
 801f0d8:	f819 3003 	ldrb.w	r3, [r9, r3]
 801f0dc:	f836 3013 	ldrh.w	r3, [r6, r3, lsl #1]
 801f0e0:	930f      	str	r3, [sp, #60]	; 0x3c
 801f0e2:	7853      	ldrb	r3, [r2, #1]
 801f0e4:	f836 3013 	ldrh.w	r3, [r6, r3, lsl #1]
 801f0e8:	9312      	str	r3, [sp, #72]	; 0x48
 801f0ea:	9b11      	ldr	r3, [sp, #68]	; 0x44
 801f0ec:	9c12      	ldr	r4, [sp, #72]	; 0x48
 801f0ee:	ea4f 4c03 	mov.w	ip, r3, lsl #16
 801f0f2:	f00c 6cfc 	and.w	ip, ip, #132120576	; 0x7e00000
 801f0f6:	f423 63fc 	bic.w	r3, r3, #2016	; 0x7e0
 801f0fa:	ea4c 0c03 	orr.w	ip, ip, r3
 801f0fe:	9b12      	ldr	r3, [sp, #72]	; 0x48
 801f100:	041b      	lsls	r3, r3, #16
 801f102:	fb10 f201 	smulbb	r2, r0, r1
 801f106:	f424 64fc 	bic.w	r4, r4, #2016	; 0x7e0
 801f10a:	f003 63fc 	and.w	r3, r3, #132120576	; 0x7e00000
 801f10e:	10d2      	asrs	r2, r2, #3
 801f110:	4323      	orrs	r3, r4
 801f112:	ebc2 0940 	rsb	r9, r2, r0, lsl #1
 801f116:	4353      	muls	r3, r2
 801f118:	fb09 330c 	mla	r3, r9, ip, r3
 801f11c:	ea4f 4c0e 	mov.w	ip, lr, lsl #16
 801f120:	f00c 6cfc 	and.w	ip, ip, #132120576	; 0x7e00000
 801f124:	f42e 6efc 	bic.w	lr, lr, #2016	; 0x7e0
 801f128:	ea4c 0e0e 	orr.w	lr, ip, lr
 801f12c:	f1c1 0c10 	rsb	ip, r1, #16
 801f130:	ebac 0c00 	sub.w	ip, ip, r0
 801f134:	eb02 0c4c 	add.w	ip, r2, ip, lsl #1
 801f138:	fb0c 3c0e 	mla	ip, ip, lr, r3
 801f13c:	9b0f      	ldr	r3, [sp, #60]	; 0x3c
 801f13e:	9c0a      	ldr	r4, [sp, #40]	; 0x28
 801f140:	0418      	lsls	r0, r3, #16
 801f142:	f000 60fc 	and.w	r0, r0, #132120576	; 0x7e00000
 801f146:	f423 63fc 	bic.w	r3, r3, #2016	; 0x7e0
 801f14a:	4318      	orrs	r0, r3
 801f14c:	ebc2 0241 	rsb	r2, r2, r1, lsl #1
 801f150:	fb02 c200 	mla	r2, r2, r0, ip
 801f154:	0d53      	lsrs	r3, r2, #21
 801f156:	0952      	lsrs	r2, r2, #5
 801f158:	8838      	ldrh	r0, [r7, #0]
 801f15a:	f403 63fc 	and.w	r3, r3, #2016	; 0x7e0
 801f15e:	f422 62fc 	bic.w	r2, r2, #2016	; 0x7e0
 801f162:	431a      	orrs	r2, r3
 801f164:	b292      	uxth	r2, r2
 801f166:	1201      	asrs	r1, r0, #8
 801f168:	f8bd 3034 	ldrh.w	r3, [sp, #52]	; 0x34
 801f16c:	ea4f 2c22 	mov.w	ip, r2, asr #8
 801f170:	f001 01f8 	and.w	r1, r1, #248	; 0xf8
 801f174:	fb11 f104 	smulbb	r1, r1, r4
 801f178:	ea4f 0ee0 	mov.w	lr, r0, asr #3
 801f17c:	f00c 0cf8 	and.w	ip, ip, #248	; 0xf8
 801f180:	00c0      	lsls	r0, r0, #3
 801f182:	fb0c 1c03 	mla	ip, ip, r3, r1
 801f186:	f00e 0efc 	and.w	lr, lr, #252	; 0xfc
 801f18a:	10d1      	asrs	r1, r2, #3
 801f18c:	b2c0      	uxtb	r0, r0
 801f18e:	00d2      	lsls	r2, r2, #3
 801f190:	b2d2      	uxtb	r2, r2
 801f192:	f001 01fc 	and.w	r1, r1, #252	; 0xfc
 801f196:	fb1e fe04 	smulbb	lr, lr, r4
 801f19a:	fb10 f004 	smulbb	r0, r0, r4
 801f19e:	fa1f fc8c 	uxth.w	ip, ip
 801f1a2:	fb01 e103 	mla	r1, r1, r3, lr
 801f1a6:	fb02 0303 	mla	r3, r2, r3, r0
 801f1aa:	b29a      	uxth	r2, r3
 801f1ac:	f10c 0301 	add.w	r3, ip, #1
 801f1b0:	b289      	uxth	r1, r1
 801f1b2:	eb03 2c1c 	add.w	ip, r3, ip, lsr #8
 801f1b6:	1c53      	adds	r3, r2, #1
 801f1b8:	eb03 2312 	add.w	r3, r3, r2, lsr #8
 801f1bc:	1c4a      	adds	r2, r1, #1
 801f1be:	eb02 2111 	add.w	r1, r2, r1, lsr #8
 801f1c2:	f40c 4c78 	and.w	ip, ip, #63488	; 0xf800
 801f1c6:	f3c3 23c4 	ubfx	r3, r3, #11, #5
 801f1ca:	0949      	lsrs	r1, r1, #5
 801f1cc:	ea43 030c 	orr.w	r3, r3, ip
 801f1d0:	f401 61fc 	and.w	r1, r1, #2016	; 0x7e0
 801f1d4:	430b      	orrs	r3, r1
 801f1d6:	803b      	strh	r3, [r7, #0]
 801f1d8:	9b25      	ldr	r3, [sp, #148]	; 0x94
 801f1da:	449a      	add	sl, r3
 801f1dc:	9b26      	ldr	r3, [sp, #152]	; 0x98
 801f1de:	3702      	adds	r7, #2
 801f1e0:	441d      	add	r5, r3
 801f1e2:	f10b 3bff 	add.w	fp, fp, #4294967295
 801f1e6:	e742      	b.n	801f06e <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x9a>
 801f1e8:	9b25      	ldr	r3, [sp, #148]	; 0x94
 801f1ea:	449a      	add	sl, r3
 801f1ec:	9b26      	ldr	r3, [sp, #152]	; 0x98
 801f1ee:	441d      	add	r5, r3
 801f1f0:	9b09      	ldr	r3, [sp, #36]	; 0x24
 801f1f2:	3b01      	subs	r3, #1
 801f1f4:	9309      	str	r3, [sp, #36]	; 0x24
 801f1f6:	f108 0802 	add.w	r8, r8, #2
 801f1fa:	e718      	b.n	801f02e <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x5a>
 801f1fc:	d023      	beq.n	801f246 <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x272>
 801f1fe:	9b09      	ldr	r3, [sp, #36]	; 0x24
 801f200:	9825      	ldr	r0, [sp, #148]	; 0x94
 801f202:	3b01      	subs	r3, #1
 801f204:	fb00 a003 	mla	r0, r0, r3, sl
 801f208:	1400      	asrs	r0, r0, #16
 801f20a:	f53f af2d 	bmi.w	801f068 <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x94>
 801f20e:	3901      	subs	r1, #1
 801f210:	4288      	cmp	r0, r1
 801f212:	f6bf af29 	bge.w	801f068 <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x94>
 801f216:	9926      	ldr	r1, [sp, #152]	; 0x98
 801f218:	fb01 5303 	mla	r3, r1, r3, r5
 801f21c:	141b      	asrs	r3, r3, #16
 801f21e:	f53f af23 	bmi.w	801f068 <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x94>
 801f222:	3a01      	subs	r2, #1
 801f224:	4293      	cmp	r3, r2
 801f226:	f6bf af1f 	bge.w	801f068 <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x94>
 801f22a:	f8dd e024 	ldr.w	lr, [sp, #36]	; 0x24
 801f22e:	f8bd 9034 	ldrh.w	r9, [sp, #52]	; 0x34
 801f232:	f8cd 8038 	str.w	r8, [sp, #56]	; 0x38
 801f236:	f1be 0f00 	cmp.w	lr, #0
 801f23a:	dc6c      	bgt.n	801f316 <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x342>
 801f23c:	9b09      	ldr	r3, [sp, #36]	; 0x24
 801f23e:	ea23 74e3 	bic.w	r4, r3, r3, asr #31
 801f242:	eb08 0844 	add.w	r8, r8, r4, lsl #1
 801f246:	9b0c      	ldr	r3, [sp, #48]	; 0x30
 801f248:	2b00      	cmp	r3, #0
 801f24a:	f340 810e 	ble.w	801f46a <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x496>
 801f24e:	ee30 0a04 	vadd.f32	s0, s0, s8
 801f252:	eeb7 7a00 	vmov.f32	s14, #112	; 0x3f800000  1.0
 801f256:	eec7 7a00 	vdiv.f32	s15, s14, s0
 801f25a:	9b22      	ldr	r3, [sp, #136]	; 0x88
 801f25c:	ee70 0aa4 	vadd.f32	s1, s1, s9
 801f260:	ee31 1a05 	vadd.f32	s2, s2, s10
 801f264:	ee20 7aa7 	vmul.f32	s14, s1, s15
 801f268:	eef0 6a62 	vmov.f32	s13, s5
 801f26c:	ee61 7a27 	vmul.f32	s15, s2, s15
 801f270:	eefe 6ac8 	vcvt.s32.f32	s13, s13, #16
 801f274:	ee77 2a62 	vsub.f32	s5, s14, s5
 801f278:	ee16 aa90 	vmov	sl, s13
 801f27c:	eefe 2ac8 	vcvt.s32.f32	s5, s5, #16
 801f280:	eef0 6a43 	vmov.f32	s13, s6
 801f284:	ee37 3ac3 	vsub.f32	s6, s15, s6
 801f288:	ee12 2a90 	vmov	r2, s5
 801f28c:	eebe 3ac8 	vcvt.s32.f32	s6, s6, #16
 801f290:	fb92 f3f3 	sdiv	r3, r2, r3
 801f294:	ee13 2a10 	vmov	r2, s6
 801f298:	9325      	str	r3, [sp, #148]	; 0x94
 801f29a:	9b22      	ldr	r3, [sp, #136]	; 0x88
 801f29c:	fb92 f3f3 	sdiv	r3, r2, r3
 801f2a0:	9326      	str	r3, [sp, #152]	; 0x98
 801f2a2:	9b0c      	ldr	r3, [sp, #48]	; 0x30
 801f2a4:	9a15      	ldr	r2, [sp, #84]	; 0x54
 801f2a6:	3b01      	subs	r3, #1
 801f2a8:	eefe 6ac8 	vcvt.s32.f32	s13, s13, #16
 801f2ac:	930c      	str	r3, [sp, #48]	; 0x30
 801f2ae:	9b22      	ldr	r3, [sp, #136]	; 0x88
 801f2b0:	bf08      	it	eq
 801f2b2:	4613      	moveq	r3, r2
 801f2b4:	ee16 5a90 	vmov	r5, s13
 801f2b8:	9309      	str	r3, [sp, #36]	; 0x24
 801f2ba:	eeb0 3a67 	vmov.f32	s6, s15
 801f2be:	eef0 2a47 	vmov.f32	s5, s14
 801f2c2:	e6a6      	b.n	801f012 <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x3e>
 801f2c4:	2900      	cmp	r1, #0
 801f2c6:	f43f af10 	beq.w	801f0ea <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x116>
 801f2ca:	f819 3003 	ldrb.w	r3, [r9, r3]
 801f2ce:	f836 3013 	ldrh.w	r3, [r6, r3, lsl #1]
 801f2d2:	930f      	str	r3, [sp, #60]	; 0x3c
 801f2d4:	e709      	b.n	801f0ea <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x116>
 801f2d6:	f112 0901 	adds.w	r9, r2, #1
 801f2da:	f53f af7d 	bmi.w	801f1d8 <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x204>
 801f2de:	454b      	cmp	r3, r9
 801f2e0:	f6ff af7a 	blt.w	801f1d8 <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x204>
 801f2e4:	f11c 0901 	adds.w	r9, ip, #1
 801f2e8:	f53f af76 	bmi.w	801f1d8 <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x204>
 801f2ec:	45ce      	cmp	lr, r9
 801f2ee:	f6ff af73 	blt.w	801f1d8 <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x204>
 801f2f2:	9c0d      	ldr	r4, [sp, #52]	; 0x34
 801f2f4:	9202      	str	r2, [sp, #8]
 801f2f6:	b21b      	sxth	r3, r3
 801f2f8:	fa0f f28e 	sxth.w	r2, lr
 801f2fc:	e9cd 1405 	strd	r1, r4, [sp, #20]
 801f300:	e9cd c003 	strd	ip, r0, [sp, #12]
 801f304:	9201      	str	r2, [sp, #4]
 801f306:	9300      	str	r3, [sp, #0]
 801f308:	9a0b      	ldr	r2, [sp, #44]	; 0x2c
 801f30a:	9816      	ldr	r0, [sp, #88]	; 0x58
 801f30c:	4633      	mov	r3, r6
 801f30e:	4639      	mov	r1, r7
 801f310:	f7ff fd8e 	bl	801ee30 <_ZNK8touchgfx8LCD16bpp55TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKhPKtssiihhh>
 801f314:	e760      	b.n	801f1d8 <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x204>
 801f316:	9b2a      	ldr	r3, [sp, #168]	; 0xa8
 801f318:	9c0b      	ldr	r4, [sp, #44]	; 0x2c
 801f31a:	f9b3 3008 	ldrsh.w	r3, [r3, #8]
 801f31e:	ea4f 422a 	mov.w	r2, sl, asr #16
 801f322:	1429      	asrs	r1, r5, #16
 801f324:	fb03 2101 	mla	r1, r3, r1, r2
 801f328:	9a0b      	ldr	r2, [sp, #44]	; 0x2c
 801f32a:	440a      	add	r2, r1
 801f32c:	5c61      	ldrb	r1, [r4, r1]
 801f32e:	f3ca 3c03 	ubfx	ip, sl, #12, #4
 801f332:	f3c5 3003 	ubfx	r0, r5, #12, #4
 801f336:	f836 1011 	ldrh.w	r1, [r6, r1, lsl #1]
 801f33a:	f1bc 0f00 	cmp.w	ip, #0
 801f33e:	f000 808c 	beq.w	801f45a <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x486>
 801f342:	7857      	ldrb	r7, [r2, #1]
 801f344:	f836 4017 	ldrh.w	r4, [r6, r7, lsl #1]
 801f348:	9413      	str	r4, [sp, #76]	; 0x4c
 801f34a:	b140      	cbz	r0, 801f35e <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x38a>
 801f34c:	18d7      	adds	r7, r2, r3
 801f34e:	5cd3      	ldrb	r3, [r2, r3]
 801f350:	f836 3013 	ldrh.w	r3, [r6, r3, lsl #1]
 801f354:	9310      	str	r3, [sp, #64]	; 0x40
 801f356:	787b      	ldrb	r3, [r7, #1]
 801f358:	f836 3013 	ldrh.w	r3, [r6, r3, lsl #1]
 801f35c:	9314      	str	r3, [sp, #80]	; 0x50
 801f35e:	9b13      	ldr	r3, [sp, #76]	; 0x4c
 801f360:	9c14      	ldr	r4, [sp, #80]	; 0x50
 801f362:	fb1c f200 	smulbb	r2, ip, r0
 801f366:	041f      	lsls	r7, r3, #16
 801f368:	10d2      	asrs	r2, r2, #3
 801f36a:	f423 63fc 	bic.w	r3, r3, #2016	; 0x7e0
 801f36e:	f007 67fc 	and.w	r7, r7, #132120576	; 0x7e00000
 801f372:	431f      	orrs	r7, r3
 801f374:	ebc2 034c 	rsb	r3, r2, ip, lsl #1
 801f378:	9317      	str	r3, [sp, #92]	; 0x5c
 801f37a:	9b14      	ldr	r3, [sp, #80]	; 0x50
 801f37c:	041b      	lsls	r3, r3, #16
 801f37e:	f424 6bfc 	bic.w	fp, r4, #2016	; 0x7e0
 801f382:	f003 63fc 	and.w	r3, r3, #132120576	; 0x7e00000
 801f386:	ea43 030b 	orr.w	r3, r3, fp
 801f38a:	9c17      	ldr	r4, [sp, #92]	; 0x5c
 801f38c:	4353      	muls	r3, r2
 801f38e:	ea4f 4b01 	mov.w	fp, r1, lsl #16
 801f392:	fb04 3707 	mla	r7, r4, r7, r3
 801f396:	f421 61fc 	bic.w	r1, r1, #2016	; 0x7e0
 801f39a:	f00b 63fc 	and.w	r3, fp, #132120576	; 0x7e00000
 801f39e:	ea43 0b01 	orr.w	fp, r3, r1
 801f3a2:	f1c0 0110 	rsb	r1, r0, #16
 801f3a6:	9b10      	ldr	r3, [sp, #64]	; 0x40
 801f3a8:	9c0a      	ldr	r4, [sp, #40]	; 0x28
 801f3aa:	eba1 0c0c 	sub.w	ip, r1, ip
 801f3ae:	eb02 0c4c 	add.w	ip, r2, ip, lsl #1
 801f3b2:	fb0c 770b 	mla	r7, ip, fp, r7
 801f3b6:	ea4f 4c03 	mov.w	ip, r3, lsl #16
 801f3ba:	f423 6bfc 	bic.w	fp, r3, #2016	; 0x7e0
 801f3be:	f00c 6cfc 	and.w	ip, ip, #132120576	; 0x7e00000
 801f3c2:	ebc2 0240 	rsb	r2, r2, r0, lsl #1
 801f3c6:	ea4c 0c0b 	orr.w	ip, ip, fp
 801f3ca:	fb02 770c 	mla	r7, r2, ip, r7
 801f3ce:	9a0e      	ldr	r2, [sp, #56]	; 0x38
 801f3d0:	0d79      	lsrs	r1, r7, #21
 801f3d2:	097f      	lsrs	r7, r7, #5
 801f3d4:	8812      	ldrh	r2, [r2, #0]
 801f3d6:	f401 61fc 	and.w	r1, r1, #2016	; 0x7e0
 801f3da:	f427 67fc 	bic.w	r7, r7, #2016	; 0x7e0
 801f3de:	430f      	orrs	r7, r1
 801f3e0:	b2bb      	uxth	r3, r7
 801f3e2:	1211      	asrs	r1, r2, #8
 801f3e4:	1218      	asrs	r0, r3, #8
 801f3e6:	f001 01f8 	and.w	r1, r1, #248	; 0xf8
 801f3ea:	fb11 f104 	smulbb	r1, r1, r4
 801f3ee:	10d7      	asrs	r7, r2, #3
 801f3f0:	f000 00f8 	and.w	r0, r0, #248	; 0xf8
 801f3f4:	00d2      	lsls	r2, r2, #3
 801f3f6:	fb00 1009 	mla	r0, r0, r9, r1
 801f3fa:	f007 07fc 	and.w	r7, r7, #252	; 0xfc
 801f3fe:	10d9      	asrs	r1, r3, #3
 801f400:	b2d2      	uxtb	r2, r2
 801f402:	00db      	lsls	r3, r3, #3
 801f404:	fb17 f704 	smulbb	r7, r7, r4
 801f408:	fb12 f204 	smulbb	r2, r2, r4
 801f40c:	f001 01fc 	and.w	r1, r1, #252	; 0xfc
 801f410:	b2db      	uxtb	r3, r3
 801f412:	b280      	uxth	r0, r0
 801f414:	fb01 7109 	mla	r1, r1, r9, r7
 801f418:	fb03 2309 	mla	r3, r3, r9, r2
 801f41c:	b29b      	uxth	r3, r3
 801f41e:	b289      	uxth	r1, r1
 801f420:	1c42      	adds	r2, r0, #1
 801f422:	eb02 2010 	add.w	r0, r2, r0, lsr #8
 801f426:	1c4f      	adds	r7, r1, #1
 801f428:	1c5a      	adds	r2, r3, #1
 801f42a:	eb02 2213 	add.w	r2, r2, r3, lsr #8
 801f42e:	eb07 2111 	add.w	r1, r7, r1, lsr #8
 801f432:	f400 4078 	and.w	r0, r0, #63488	; 0xf800
 801f436:	f3c2 22c4 	ubfx	r2, r2, #11, #5
 801f43a:	0949      	lsrs	r1, r1, #5
 801f43c:	9b0e      	ldr	r3, [sp, #56]	; 0x38
 801f43e:	4310      	orrs	r0, r2
 801f440:	f401 61fc 	and.w	r1, r1, #2016	; 0x7e0
 801f444:	4308      	orrs	r0, r1
 801f446:	f823 0b02 	strh.w	r0, [r3], #2
 801f44a:	930e      	str	r3, [sp, #56]	; 0x38
 801f44c:	9b25      	ldr	r3, [sp, #148]	; 0x94
 801f44e:	449a      	add	sl, r3
 801f450:	9b26      	ldr	r3, [sp, #152]	; 0x98
 801f452:	f10e 3eff 	add.w	lr, lr, #4294967295
 801f456:	441d      	add	r5, r3
 801f458:	e6ed      	b.n	801f236 <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x262>
 801f45a:	2800      	cmp	r0, #0
 801f45c:	f43f af7f 	beq.w	801f35e <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x38a>
 801f460:	5cd3      	ldrb	r3, [r2, r3]
 801f462:	f836 3013 	ldrh.w	r3, [r6, r3, lsl #1]
 801f466:	9310      	str	r3, [sp, #64]	; 0x40
 801f468:	e779      	b.n	801f35e <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x38a>
 801f46a:	b019      	add	sp, #100	; 0x64
 801f46c:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}

0801f470 <_ZNK8touchgfx8LCD16bpp57TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhPKtssiihh>:
 801f470:	e92d 47f0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, lr}
 801f474:	e9dd 480a 	ldrd	r4, r8, [sp, #40]	; 0x28
 801f478:	f9bd e020 	ldrsh.w	lr, [sp, #32]
 801f47c:	f9bd a024 	ldrsh.w	sl, [sp, #36]	; 0x24
 801f480:	f89d 5030 	ldrb.w	r5, [sp, #48]	; 0x30
 801f484:	f89d 6034 	ldrb.w	r6, [sp, #52]	; 0x34
 801f488:	8808      	ldrh	r0, [r1, #0]
 801f48a:	fb08 470e 	mla	r7, r8, lr, r4
 801f48e:	f1b8 0f00 	cmp.w	r8, #0
 801f492:	eb02 0907 	add.w	r9, r2, r7
 801f496:	db67      	blt.n	801f568 <_ZNK8touchgfx8LCD16bpp57TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhPKtssiihh+0xf8>
 801f498:	45c2      	cmp	sl, r8
 801f49a:	dd65      	ble.n	801f568 <_ZNK8touchgfx8LCD16bpp57TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhPKtssiihh+0xf8>
 801f49c:	2c00      	cmp	r4, #0
 801f49e:	db61      	blt.n	801f564 <_ZNK8touchgfx8LCD16bpp57TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhPKtssiihh+0xf4>
 801f4a0:	45a6      	cmp	lr, r4
 801f4a2:	dd5f      	ble.n	801f564 <_ZNK8touchgfx8LCD16bpp57TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhPKtssiihh+0xf4>
 801f4a4:	5dd2      	ldrb	r2, [r2, r7]
 801f4a6:	f833 c012 	ldrh.w	ip, [r3, r2, lsl #1]
 801f4aa:	1c62      	adds	r2, r4, #1
 801f4ac:	d45f      	bmi.n	801f56e <_ZNK8touchgfx8LCD16bpp57TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhPKtssiihh+0xfe>
 801f4ae:	4596      	cmp	lr, r2
 801f4b0:	dd5d      	ble.n	801f56e <_ZNK8touchgfx8LCD16bpp57TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhPKtssiihh+0xfe>
 801f4b2:	2d00      	cmp	r5, #0
 801f4b4:	d05b      	beq.n	801f56e <_ZNK8touchgfx8LCD16bpp57TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhPKtssiihh+0xfe>
 801f4b6:	f899 2001 	ldrb.w	r2, [r9, #1]
 801f4ba:	f833 7012 	ldrh.w	r7, [r3, r2, lsl #1]
 801f4be:	f118 0801 	adds.w	r8, r8, #1
 801f4c2:	d458      	bmi.n	801f576 <_ZNK8touchgfx8LCD16bpp57TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhPKtssiihh+0x106>
 801f4c4:	45c2      	cmp	sl, r8
 801f4c6:	dd56      	ble.n	801f576 <_ZNK8touchgfx8LCD16bpp57TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhPKtssiihh+0x106>
 801f4c8:	2e00      	cmp	r6, #0
 801f4ca:	d054      	beq.n	801f576 <_ZNK8touchgfx8LCD16bpp57TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhPKtssiihh+0x106>
 801f4cc:	2c00      	cmp	r4, #0
 801f4ce:	db50      	blt.n	801f572 <_ZNK8touchgfx8LCD16bpp57TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhPKtssiihh+0x102>
 801f4d0:	45a6      	cmp	lr, r4
 801f4d2:	dd4e      	ble.n	801f572 <_ZNK8touchgfx8LCD16bpp57TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhPKtssiihh+0x102>
 801f4d4:	f819 200e 	ldrb.w	r2, [r9, lr]
 801f4d8:	f833 2012 	ldrh.w	r2, [r3, r2, lsl #1]
 801f4dc:	3401      	adds	r4, #1
 801f4de:	d407      	bmi.n	801f4f0 <_ZNK8touchgfx8LCD16bpp57TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhPKtssiihh+0x80>
 801f4e0:	45a6      	cmp	lr, r4
 801f4e2:	dd05      	ble.n	801f4f0 <_ZNK8touchgfx8LCD16bpp57TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhPKtssiihh+0x80>
 801f4e4:	b125      	cbz	r5, 801f4f0 <_ZNK8touchgfx8LCD16bpp57TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhPKtssiihh+0x80>
 801f4e6:	44ce      	add	lr, r9
 801f4e8:	f89e 0001 	ldrb.w	r0, [lr, #1]
 801f4ec:	f833 0010 	ldrh.w	r0, [r3, r0, lsl #1]
 801f4f0:	ea4f 430c 	mov.w	r3, ip, lsl #16
 801f4f4:	fb15 f406 	smulbb	r4, r5, r6
 801f4f8:	f003 63fc 	and.w	r3, r3, #132120576	; 0x7e00000
 801f4fc:	ea4f 4e07 	mov.w	lr, r7, lsl #16
 801f500:	f42c 6cfc 	bic.w	ip, ip, #2016	; 0x7e0
 801f504:	f3c4 04c7 	ubfx	r4, r4, #3, #8
 801f508:	ea43 0c0c 	orr.w	ip, r3, ip
 801f50c:	f00e 6efc 	and.w	lr, lr, #132120576	; 0x7e00000
 801f510:	f1c6 0310 	rsb	r3, r6, #16
 801f514:	f427 67fc 	bic.w	r7, r7, #2016	; 0x7e0
 801f518:	1b5b      	subs	r3, r3, r5
 801f51a:	ea4e 0707 	orr.w	r7, lr, r7
 801f51e:	ebc4 0545 	rsb	r5, r4, r5, lsl #1
 801f522:	eb04 0343 	add.w	r3, r4, r3, lsl #1
 801f526:	437d      	muls	r5, r7
 801f528:	fb03 5c0c 	mla	ip, r3, ip, r5
 801f52c:	0403      	lsls	r3, r0, #16
 801f52e:	f003 63fc 	and.w	r3, r3, #132120576	; 0x7e00000
 801f532:	f420 60fc 	bic.w	r0, r0, #2016	; 0x7e0
 801f536:	4318      	orrs	r0, r3
 801f538:	0413      	lsls	r3, r2, #16
 801f53a:	f003 63fc 	and.w	r3, r3, #132120576	; 0x7e00000
 801f53e:	f422 62fc 	bic.w	r2, r2, #2016	; 0x7e0
 801f542:	4313      	orrs	r3, r2
 801f544:	fb04 c000 	mla	r0, r4, r0, ip
 801f548:	ebc4 0646 	rsb	r6, r4, r6, lsl #1
 801f54c:	fb06 0003 	mla	r0, r6, r3, r0
 801f550:	0d43      	lsrs	r3, r0, #21
 801f552:	0940      	lsrs	r0, r0, #5
 801f554:	f403 63fc 	and.w	r3, r3, #2016	; 0x7e0
 801f558:	f420 60fc 	bic.w	r0, r0, #2016	; 0x7e0
 801f55c:	4318      	orrs	r0, r3
 801f55e:	8008      	strh	r0, [r1, #0]
 801f560:	e8bd 87f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, pc}
 801f564:	4684      	mov	ip, r0
 801f566:	e7a0      	b.n	801f4aa <_ZNK8touchgfx8LCD16bpp57TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhPKtssiihh+0x3a>
 801f568:	4607      	mov	r7, r0
 801f56a:	4684      	mov	ip, r0
 801f56c:	e7a7      	b.n	801f4be <_ZNK8touchgfx8LCD16bpp57TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhPKtssiihh+0x4e>
 801f56e:	4607      	mov	r7, r0
 801f570:	e7a5      	b.n	801f4be <_ZNK8touchgfx8LCD16bpp57TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhPKtssiihh+0x4e>
 801f572:	4602      	mov	r2, r0
 801f574:	e7b2      	b.n	801f4dc <_ZNK8touchgfx8LCD16bpp57TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhPKtssiihh+0x6c>
 801f576:	4602      	mov	r2, r0
 801f578:	e7ba      	b.n	801f4f0 <_ZNK8touchgfx8LCD16bpp57TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhPKtssiihh+0x80>

0801f57a <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff>:
 801f57a:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 801f57e:	b093      	sub	sp, #76	; 0x4c
 801f580:	e9dd 461d 	ldrd	r4, r6, [sp, #116]	; 0x74
 801f584:	920f      	str	r2, [sp, #60]	; 0x3c
 801f586:	9a21      	ldr	r2, [sp, #132]	; 0x84
 801f588:	9108      	str	r1, [sp, #32]
 801f58a:	9306      	str	r3, [sp, #24]
 801f58c:	e9dd 1322 	ldrd	r1, r3, [sp, #136]	; 0x88
 801f590:	9010      	str	r0, [sp, #64]	; 0x40
 801f592:	6850      	ldr	r0, [r2, #4]
 801f594:	6812      	ldr	r2, [r2, #0]
 801f596:	fb00 1303 	mla	r3, r0, r3, r1
 801f59a:	eb02 0943 	add.w	r9, r2, r3, lsl #1
 801f59e:	9b24      	ldr	r3, [sp, #144]	; 0x90
 801f5a0:	681b      	ldr	r3, [r3, #0]
 801f5a2:	9307      	str	r3, [sp, #28]
 801f5a4:	9b24      	ldr	r3, [sp, #144]	; 0x90
 801f5a6:	685f      	ldr	r7, [r3, #4]
 801f5a8:	eef7 6a00 	vmov.f32	s13, #112	; 0x3f800000  1.0
 801f5ac:	3704      	adds	r7, #4
 801f5ae:	9b08      	ldr	r3, [sp, #32]
 801f5b0:	2b00      	cmp	r3, #0
 801f5b2:	dc03      	bgt.n	801f5bc <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x42>
 801f5b4:	9b0f      	ldr	r3, [sp, #60]	; 0x3c
 801f5b6:	2b00      	cmp	r3, #0
 801f5b8:	f340 81b2 	ble.w	801f920 <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x3a6>
 801f5bc:	9b24      	ldr	r3, [sp, #144]	; 0x90
 801f5be:	f9b3 1008 	ldrsh.w	r1, [r3, #8]
 801f5c2:	f9b3 200c 	ldrsh.w	r2, [r3, #12]
 801f5c6:	1e48      	subs	r0, r1, #1
 801f5c8:	f102 3cff 	add.w	ip, r2, #4294967295
 801f5cc:	9b06      	ldr	r3, [sp, #24]
 801f5ce:	2b00      	cmp	r3, #0
 801f5d0:	f340 80a9 	ble.w	801f726 <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x1ac>
 801f5d4:	ea5f 4e24 	movs.w	lr, r4, asr #16
 801f5d8:	ea4f 4326 	mov.w	r3, r6, asr #16
 801f5dc:	d406      	bmi.n	801f5ec <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x72>
 801f5de:	4586      	cmp	lr, r0
 801f5e0:	da04      	bge.n	801f5ec <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x72>
 801f5e2:	2b00      	cmp	r3, #0
 801f5e4:	db02      	blt.n	801f5ec <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x72>
 801f5e6:	4563      	cmp	r3, ip
 801f5e8:	f2c0 809e 	blt.w	801f728 <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x1ae>
 801f5ec:	f11e 0e01 	adds.w	lr, lr, #1
 801f5f0:	f100 808f 	bmi.w	801f712 <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x198>
 801f5f4:	4571      	cmp	r1, lr
 801f5f6:	f2c0 808c 	blt.w	801f712 <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x198>
 801f5fa:	3301      	adds	r3, #1
 801f5fc:	f100 8089 	bmi.w	801f712 <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x198>
 801f600:	429a      	cmp	r2, r3
 801f602:	f2c0 8086 	blt.w	801f712 <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x198>
 801f606:	f8dd b018 	ldr.w	fp, [sp, #24]
 801f60a:	46c8      	mov	r8, r9
 801f60c:	f1bb 0f00 	cmp.w	fp, #0
 801f610:	f340 80a6 	ble.w	801f760 <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x1e6>
 801f614:	9a24      	ldr	r2, [sp, #144]	; 0x90
 801f616:	9b24      	ldr	r3, [sp, #144]	; 0x90
 801f618:	f8d2 e00c 	ldr.w	lr, [r2, #12]
 801f61c:	689b      	ldr	r3, [r3, #8]
 801f61e:	1422      	asrs	r2, r4, #16
 801f620:	ea4f 4c26 	mov.w	ip, r6, asr #16
 801f624:	f3c4 3003 	ubfx	r0, r4, #12, #4
 801f628:	f3c6 3103 	ubfx	r1, r6, #12, #4
 801f62c:	f100 80e3 	bmi.w	801f7f6 <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x27c>
 801f630:	f103 3aff 	add.w	sl, r3, #4294967295
 801f634:	4552      	cmp	r2, sl
 801f636:	f280 80de 	bge.w	801f7f6 <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x27c>
 801f63a:	f1bc 0f00 	cmp.w	ip, #0
 801f63e:	f2c0 80da 	blt.w	801f7f6 <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x27c>
 801f642:	f10e 3aff 	add.w	sl, lr, #4294967295
 801f646:	45d4      	cmp	ip, sl
 801f648:	f280 80d5 	bge.w	801f7f6 <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x27c>
 801f64c:	b21b      	sxth	r3, r3
 801f64e:	fb0c 2203 	mla	r2, ip, r3, r2
 801f652:	9d07      	ldr	r5, [sp, #28]
 801f654:	eb05 0a02 	add.w	sl, r5, r2
 801f658:	5caa      	ldrb	r2, [r5, r2]
 801f65a:	f837 e012 	ldrh.w	lr, [r7, r2, lsl #1]
 801f65e:	2800      	cmp	r0, #0
 801f660:	f000 80c0 	beq.w	801f7e4 <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x26a>
 801f664:	f89a 2001 	ldrb.w	r2, [sl, #1]
 801f668:	f837 2012 	ldrh.w	r2, [r7, r2, lsl #1]
 801f66c:	920b      	str	r2, [sp, #44]	; 0x2c
 801f66e:	b151      	cbz	r1, 801f686 <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x10c>
 801f670:	eb0a 0203 	add.w	r2, sl, r3
 801f674:	f81a 3003 	ldrb.w	r3, [sl, r3]
 801f678:	f837 3013 	ldrh.w	r3, [r7, r3, lsl #1]
 801f67c:	9309      	str	r3, [sp, #36]	; 0x24
 801f67e:	7853      	ldrb	r3, [r2, #1]
 801f680:	f837 3013 	ldrh.w	r3, [r7, r3, lsl #1]
 801f684:	930c      	str	r3, [sp, #48]	; 0x30
 801f686:	9b0b      	ldr	r3, [sp, #44]	; 0x2c
 801f688:	9d0c      	ldr	r5, [sp, #48]	; 0x30
 801f68a:	ea4f 4c03 	mov.w	ip, r3, lsl #16
 801f68e:	f00c 6cfc 	and.w	ip, ip, #132120576	; 0x7e00000
 801f692:	f423 63fc 	bic.w	r3, r3, #2016	; 0x7e0
 801f696:	ea4c 0c03 	orr.w	ip, ip, r3
 801f69a:	9b0c      	ldr	r3, [sp, #48]	; 0x30
 801f69c:	041b      	lsls	r3, r3, #16
 801f69e:	fb10 f201 	smulbb	r2, r0, r1
 801f6a2:	f003 63fc 	and.w	r3, r3, #132120576	; 0x7e00000
 801f6a6:	f425 65fc 	bic.w	r5, r5, #2016	; 0x7e0
 801f6aa:	10d2      	asrs	r2, r2, #3
 801f6ac:	432b      	orrs	r3, r5
 801f6ae:	ebc2 0a40 	rsb	sl, r2, r0, lsl #1
 801f6b2:	4353      	muls	r3, r2
 801f6b4:	fb0a 330c 	mla	r3, sl, ip, r3
 801f6b8:	ea4f 4c0e 	mov.w	ip, lr, lsl #16
 801f6bc:	f00c 6cfc 	and.w	ip, ip, #132120576	; 0x7e00000
 801f6c0:	f42e 6efc 	bic.w	lr, lr, #2016	; 0x7e0
 801f6c4:	ea4c 0e0e 	orr.w	lr, ip, lr
 801f6c8:	f1c1 0c10 	rsb	ip, r1, #16
 801f6cc:	ebac 0c00 	sub.w	ip, ip, r0
 801f6d0:	eb02 0c4c 	add.w	ip, r2, ip, lsl #1
 801f6d4:	fb0c 3c0e 	mla	ip, ip, lr, r3
 801f6d8:	9b09      	ldr	r3, [sp, #36]	; 0x24
 801f6da:	0418      	lsls	r0, r3, #16
 801f6dc:	f000 60fc 	and.w	r0, r0, #132120576	; 0x7e00000
 801f6e0:	f423 63fc 	bic.w	r3, r3, #2016	; 0x7e0
 801f6e4:	4318      	orrs	r0, r3
 801f6e6:	ebc2 0241 	rsb	r2, r2, r1, lsl #1
 801f6ea:	fb02 c200 	mla	r2, r2, r0, ip
 801f6ee:	0d53      	lsrs	r3, r2, #21
 801f6f0:	0952      	lsrs	r2, r2, #5
 801f6f2:	f403 63fc 	and.w	r3, r3, #2016	; 0x7e0
 801f6f6:	f422 62fc 	bic.w	r2, r2, #2016	; 0x7e0
 801f6fa:	431a      	orrs	r2, r3
 801f6fc:	f8a8 2000 	strh.w	r2, [r8]
 801f700:	9b1f      	ldr	r3, [sp, #124]	; 0x7c
 801f702:	441c      	add	r4, r3
 801f704:	9b20      	ldr	r3, [sp, #128]	; 0x80
 801f706:	f108 0802 	add.w	r8, r8, #2
 801f70a:	441e      	add	r6, r3
 801f70c:	f10b 3bff 	add.w	fp, fp, #4294967295
 801f710:	e77c      	b.n	801f60c <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x92>
 801f712:	9b1f      	ldr	r3, [sp, #124]	; 0x7c
 801f714:	441c      	add	r4, r3
 801f716:	9b20      	ldr	r3, [sp, #128]	; 0x80
 801f718:	441e      	add	r6, r3
 801f71a:	9b06      	ldr	r3, [sp, #24]
 801f71c:	3b01      	subs	r3, #1
 801f71e:	9306      	str	r3, [sp, #24]
 801f720:	f109 0902 	add.w	r9, r9, #2
 801f724:	e752      	b.n	801f5cc <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x52>
 801f726:	d020      	beq.n	801f76a <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x1f0>
 801f728:	9b06      	ldr	r3, [sp, #24]
 801f72a:	981f      	ldr	r0, [sp, #124]	; 0x7c
 801f72c:	3b01      	subs	r3, #1
 801f72e:	fb00 4003 	mla	r0, r0, r3, r4
 801f732:	1400      	asrs	r0, r0, #16
 801f734:	f53f af67 	bmi.w	801f606 <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x8c>
 801f738:	3901      	subs	r1, #1
 801f73a:	4288      	cmp	r0, r1
 801f73c:	f6bf af63 	bge.w	801f606 <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x8c>
 801f740:	9920      	ldr	r1, [sp, #128]	; 0x80
 801f742:	fb01 6303 	mla	r3, r1, r3, r6
 801f746:	141b      	asrs	r3, r3, #16
 801f748:	f53f af5d 	bmi.w	801f606 <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x8c>
 801f74c:	3a01      	subs	r2, #1
 801f74e:	4293      	cmp	r3, r2
 801f750:	f6bf af59 	bge.w	801f606 <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x8c>
 801f754:	f8dd 8018 	ldr.w	r8, [sp, #24]
 801f758:	46ca      	mov	sl, r9
 801f75a:	f1b8 0f00 	cmp.w	r8, #0
 801f75e:	dc67      	bgt.n	801f830 <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x2b6>
 801f760:	9b06      	ldr	r3, [sp, #24]
 801f762:	ea23 75e3 	bic.w	r5, r3, r3, asr #31
 801f766:	eb09 0945 	add.w	r9, r9, r5, lsl #1
 801f76a:	9b08      	ldr	r3, [sp, #32]
 801f76c:	2b00      	cmp	r3, #0
 801f76e:	f340 80d7 	ble.w	801f920 <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x3a6>
 801f772:	ee30 0a04 	vadd.f32	s0, s0, s8
 801f776:	ee70 0aa4 	vadd.f32	s1, s1, s9
 801f77a:	eec6 7a80 	vdiv.f32	s15, s13, s0
 801f77e:	9b1c      	ldr	r3, [sp, #112]	; 0x70
 801f780:	ee31 1a05 	vadd.f32	s2, s2, s10
 801f784:	ee20 7aa7 	vmul.f32	s14, s1, s15
 801f788:	eeb0 6a62 	vmov.f32	s12, s5
 801f78c:	ee61 7a27 	vmul.f32	s15, s2, s15
 801f790:	eebe 6ac8 	vcvt.s32.f32	s12, s12, #16
 801f794:	ee77 2a62 	vsub.f32	s5, s14, s5
 801f798:	ee16 4a10 	vmov	r4, s12
 801f79c:	eefe 2ac8 	vcvt.s32.f32	s5, s5, #16
 801f7a0:	eeb0 6a43 	vmov.f32	s12, s6
 801f7a4:	ee37 3ac3 	vsub.f32	s6, s15, s6
 801f7a8:	ee12 2a90 	vmov	r2, s5
 801f7ac:	eebe 3ac8 	vcvt.s32.f32	s6, s6, #16
 801f7b0:	fb92 f3f3 	sdiv	r3, r2, r3
 801f7b4:	ee13 2a10 	vmov	r2, s6
 801f7b8:	931f      	str	r3, [sp, #124]	; 0x7c
 801f7ba:	9b1c      	ldr	r3, [sp, #112]	; 0x70
 801f7bc:	fb92 f3f3 	sdiv	r3, r2, r3
 801f7c0:	9320      	str	r3, [sp, #128]	; 0x80
 801f7c2:	9b08      	ldr	r3, [sp, #32]
 801f7c4:	9a0f      	ldr	r2, [sp, #60]	; 0x3c
 801f7c6:	3b01      	subs	r3, #1
 801f7c8:	eebe 6ac8 	vcvt.s32.f32	s12, s12, #16
 801f7cc:	9308      	str	r3, [sp, #32]
 801f7ce:	9b1c      	ldr	r3, [sp, #112]	; 0x70
 801f7d0:	bf08      	it	eq
 801f7d2:	4613      	moveq	r3, r2
 801f7d4:	ee16 6a10 	vmov	r6, s12
 801f7d8:	9306      	str	r3, [sp, #24]
 801f7da:	eeb0 3a67 	vmov.f32	s6, s15
 801f7de:	eef0 2a47 	vmov.f32	s5, s14
 801f7e2:	e6e4      	b.n	801f5ae <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x34>
 801f7e4:	2900      	cmp	r1, #0
 801f7e6:	f43f af4e 	beq.w	801f686 <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x10c>
 801f7ea:	f81a 3003 	ldrb.w	r3, [sl, r3]
 801f7ee:	f837 3013 	ldrh.w	r3, [r7, r3, lsl #1]
 801f7f2:	9309      	str	r3, [sp, #36]	; 0x24
 801f7f4:	e747      	b.n	801f686 <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x10c>
 801f7f6:	f112 0a01 	adds.w	sl, r2, #1
 801f7fa:	d481      	bmi.n	801f700 <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x186>
 801f7fc:	4553      	cmp	r3, sl
 801f7fe:	f6ff af7f 	blt.w	801f700 <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x186>
 801f802:	f11c 0a01 	adds.w	sl, ip, #1
 801f806:	f53f af7b 	bmi.w	801f700 <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x186>
 801f80a:	45d6      	cmp	lr, sl
 801f80c:	f6ff af78 	blt.w	801f700 <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x186>
 801f810:	e9cd 2c02 	strd	r2, ip, [sp, #8]
 801f814:	b21b      	sxth	r3, r3
 801f816:	fa0f f28e 	sxth.w	r2, lr
 801f81a:	e9cd 0104 	strd	r0, r1, [sp, #16]
 801f81e:	9201      	str	r2, [sp, #4]
 801f820:	9300      	str	r3, [sp, #0]
 801f822:	9a07      	ldr	r2, [sp, #28]
 801f824:	9810      	ldr	r0, [sp, #64]	; 0x40
 801f826:	463b      	mov	r3, r7
 801f828:	4641      	mov	r1, r8
 801f82a:	f7ff fe21 	bl	801f470 <_ZNK8touchgfx8LCD16bpp57TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhPKtssiihh>
 801f82e:	e767      	b.n	801f700 <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x186>
 801f830:	9b24      	ldr	r3, [sp, #144]	; 0x90
 801f832:	9d07      	ldr	r5, [sp, #28]
 801f834:	f9b3 3008 	ldrsh.w	r3, [r3, #8]
 801f838:	1422      	asrs	r2, r4, #16
 801f83a:	1431      	asrs	r1, r6, #16
 801f83c:	fb03 2101 	mla	r1, r3, r1, r2
 801f840:	9a07      	ldr	r2, [sp, #28]
 801f842:	440a      	add	r2, r1
 801f844:	5c69      	ldrb	r1, [r5, r1]
 801f846:	f3c4 3e03 	ubfx	lr, r4, #12, #4
 801f84a:	f3c6 3003 	ubfx	r0, r6, #12, #4
 801f84e:	f837 1011 	ldrh.w	r1, [r7, r1, lsl #1]
 801f852:	f1be 0f00 	cmp.w	lr, #0
 801f856:	d05c      	beq.n	801f912 <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x398>
 801f858:	f892 c001 	ldrb.w	ip, [r2, #1]
 801f85c:	f837 501c 	ldrh.w	r5, [r7, ip, lsl #1]
 801f860:	950d      	str	r5, [sp, #52]	; 0x34
 801f862:	b150      	cbz	r0, 801f87a <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x300>
 801f864:	eb02 0c03 	add.w	ip, r2, r3
 801f868:	5cd3      	ldrb	r3, [r2, r3]
 801f86a:	f837 3013 	ldrh.w	r3, [r7, r3, lsl #1]
 801f86e:	930a      	str	r3, [sp, #40]	; 0x28
 801f870:	f89c 3001 	ldrb.w	r3, [ip, #1]
 801f874:	f837 3013 	ldrh.w	r3, [r7, r3, lsl #1]
 801f878:	930e      	str	r3, [sp, #56]	; 0x38
 801f87a:	9b0d      	ldr	r3, [sp, #52]	; 0x34
 801f87c:	9d0e      	ldr	r5, [sp, #56]	; 0x38
 801f87e:	fb1e f200 	smulbb	r2, lr, r0
 801f882:	ea4f 4c03 	mov.w	ip, r3, lsl #16
 801f886:	10d2      	asrs	r2, r2, #3
 801f888:	f423 63fc 	bic.w	r3, r3, #2016	; 0x7e0
 801f88c:	f00c 6cfc 	and.w	ip, ip, #132120576	; 0x7e00000
 801f890:	ea4c 0c03 	orr.w	ip, ip, r3
 801f894:	ebc2 034e 	rsb	r3, r2, lr, lsl #1
 801f898:	9311      	str	r3, [sp, #68]	; 0x44
 801f89a:	9b0e      	ldr	r3, [sp, #56]	; 0x38
 801f89c:	041b      	lsls	r3, r3, #16
 801f89e:	f425 6bfc 	bic.w	fp, r5, #2016	; 0x7e0
 801f8a2:	f003 63fc 	and.w	r3, r3, #132120576	; 0x7e00000
 801f8a6:	ea43 030b 	orr.w	r3, r3, fp
 801f8aa:	9d11      	ldr	r5, [sp, #68]	; 0x44
 801f8ac:	4353      	muls	r3, r2
 801f8ae:	ea4f 4b01 	mov.w	fp, r1, lsl #16
 801f8b2:	fb05 3c0c 	mla	ip, r5, ip, r3
 801f8b6:	f421 61fc 	bic.w	r1, r1, #2016	; 0x7e0
 801f8ba:	f00b 63fc 	and.w	r3, fp, #132120576	; 0x7e00000
 801f8be:	ea43 0b01 	orr.w	fp, r3, r1
 801f8c2:	f1c0 0110 	rsb	r1, r0, #16
 801f8c6:	9b0a      	ldr	r3, [sp, #40]	; 0x28
 801f8c8:	eba1 0e0e 	sub.w	lr, r1, lr
 801f8cc:	eb02 0e4e 	add.w	lr, r2, lr, lsl #1
 801f8d0:	fb0e cc0b 	mla	ip, lr, fp, ip
 801f8d4:	ea4f 4b03 	mov.w	fp, r3, lsl #16
 801f8d8:	f423 6efc 	bic.w	lr, r3, #2016	; 0x7e0
 801f8dc:	f00b 6bfc 	and.w	fp, fp, #132120576	; 0x7e00000
 801f8e0:	ea4b 0e0e 	orr.w	lr, fp, lr
 801f8e4:	ebc2 0240 	rsb	r2, r2, r0, lsl #1
 801f8e8:	fb02 cc0e 	mla	ip, r2, lr, ip
 801f8ec:	ea4f 535c 	mov.w	r3, ip, lsr #21
 801f8f0:	ea4f 1c5c 	mov.w	ip, ip, lsr #5
 801f8f4:	f403 63fc 	and.w	r3, r3, #2016	; 0x7e0
 801f8f8:	f42c 6cfc 	bic.w	ip, ip, #2016	; 0x7e0
 801f8fc:	ea43 0c0c 	orr.w	ip, r3, ip
 801f900:	9b1f      	ldr	r3, [sp, #124]	; 0x7c
 801f902:	f82a cb02 	strh.w	ip, [sl], #2
 801f906:	441c      	add	r4, r3
 801f908:	9b20      	ldr	r3, [sp, #128]	; 0x80
 801f90a:	f108 38ff 	add.w	r8, r8, #4294967295
 801f90e:	441e      	add	r6, r3
 801f910:	e723      	b.n	801f75a <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x1e0>
 801f912:	2800      	cmp	r0, #0
 801f914:	d0b1      	beq.n	801f87a <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x300>
 801f916:	5cd3      	ldrb	r3, [r2, r3]
 801f918:	f837 3013 	ldrh.w	r3, [r7, r3, lsl #1]
 801f91c:	930a      	str	r3, [sp, #40]	; 0x28
 801f91e:	e7ac      	b.n	801f87a <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x300>
 801f920:	b013      	add	sp, #76	; 0x4c
 801f922:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}

0801f926 <_ZNK8touchgfx8LCD16bpp55TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKhS4_ssiihhh>:
 801f926:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 801f92a:	880d      	ldrh	r5, [r1, #0]
 801f92c:	b087      	sub	sp, #28
 801f92e:	10ef      	asrs	r7, r5, #3
 801f930:	ea4f 2a25 	mov.w	sl, r5, asr #8
 801f934:	f007 07fc 	and.w	r7, r7, #252	; 0xfc
 801f938:	00ed      	lsls	r5, r5, #3
 801f93a:	9701      	str	r7, [sp, #4]
 801f93c:	b2ed      	uxtb	r5, r5
 801f93e:	9502      	str	r5, [sp, #8]
 801f940:	9d01      	ldr	r5, [sp, #4]
 801f942:	9103      	str	r1, [sp, #12]
 801f944:	e9dd 0612 	ldrd	r0, r6, [sp, #72]	; 0x48
 801f948:	f9bd 9040 	ldrsh.w	r9, [sp, #64]	; 0x40
 801f94c:	9902      	ldr	r1, [sp, #8]
 801f94e:	f9bd b044 	ldrsh.w	fp, [sp, #68]	; 0x44
 801f952:	f89d 4050 	ldrb.w	r4, [sp, #80]	; 0x50
 801f956:	f89d e054 	ldrb.w	lr, [sp, #84]	; 0x54
 801f95a:	f89d 8058 	ldrb.w	r8, [sp, #88]	; 0x58
 801f95e:	f00a 0af8 	and.w	sl, sl, #248	; 0xf8
 801f962:	022d      	lsls	r5, r5, #8
 801f964:	ea45 450a 	orr.w	r5, r5, sl, lsl #16
 801f968:	fb06 0709 	mla	r7, r6, r9, r0
 801f96c:	430d      	orrs	r5, r1
 801f96e:	2e00      	cmp	r6, #0
 801f970:	eb02 0c07 	add.w	ip, r2, r7
 801f974:	9505      	str	r5, [sp, #20]
 801f976:	f2c0 80b6 	blt.w	801fae6 <_ZNK8touchgfx8LCD16bpp55TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKhS4_ssiihhh+0x1c0>
 801f97a:	45b3      	cmp	fp, r6
 801f97c:	f340 80b3 	ble.w	801fae6 <_ZNK8touchgfx8LCD16bpp55TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKhS4_ssiihhh+0x1c0>
 801f980:	2800      	cmp	r0, #0
 801f982:	f2c0 80ae 	blt.w	801fae2 <_ZNK8touchgfx8LCD16bpp55TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKhS4_ssiihhh+0x1bc>
 801f986:	4581      	cmp	r9, r0
 801f988:	f340 80ab 	ble.w	801fae2 <_ZNK8touchgfx8LCD16bpp55TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKhS4_ssiihhh+0x1bc>
 801f98c:	5dd7      	ldrb	r7, [r2, r7]
 801f98e:	eb07 0747 	add.w	r7, r7, r7, lsl #1
 801f992:	441f      	add	r7, r3
 801f994:	1c42      	adds	r2, r0, #1
 801f996:	f100 80a9 	bmi.w	801faec <_ZNK8touchgfx8LCD16bpp55TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKhS4_ssiihhh+0x1c6>
 801f99a:	4591      	cmp	r9, r2
 801f99c:	f340 80a6 	ble.w	801faec <_ZNK8touchgfx8LCD16bpp55TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKhS4_ssiihhh+0x1c6>
 801f9a0:	2c00      	cmp	r4, #0
 801f9a2:	f000 80a3 	beq.w	801faec <_ZNK8touchgfx8LCD16bpp55TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKhS4_ssiihhh+0x1c6>
 801f9a6:	f89c 5001 	ldrb.w	r5, [ip, #1]
 801f9aa:	eb05 0545 	add.w	r5, r5, r5, lsl #1
 801f9ae:	441d      	add	r5, r3
 801f9b0:	3601      	adds	r6, #1
 801f9b2:	f100 809f 	bmi.w	801faf4 <_ZNK8touchgfx8LCD16bpp55TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKhS4_ssiihhh+0x1ce>
 801f9b6:	45b3      	cmp	fp, r6
 801f9b8:	f340 809c 	ble.w	801faf4 <_ZNK8touchgfx8LCD16bpp55TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKhS4_ssiihhh+0x1ce>
 801f9bc:	f1be 0f00 	cmp.w	lr, #0
 801f9c0:	f000 8098 	beq.w	801faf4 <_ZNK8touchgfx8LCD16bpp55TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKhS4_ssiihhh+0x1ce>
 801f9c4:	2800      	cmp	r0, #0
 801f9c6:	f2c0 8093 	blt.w	801faf0 <_ZNK8touchgfx8LCD16bpp55TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKhS4_ssiihhh+0x1ca>
 801f9ca:	4581      	cmp	r9, r0
 801f9cc:	f340 8090 	ble.w	801faf0 <_ZNK8touchgfx8LCD16bpp55TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKhS4_ssiihhh+0x1ca>
 801f9d0:	f81c 6009 	ldrb.w	r6, [ip, r9]
 801f9d4:	eb06 0646 	add.w	r6, r6, r6, lsl #1
 801f9d8:	441e      	add	r6, r3
 801f9da:	3001      	adds	r0, #1
 801f9dc:	f100 808d 	bmi.w	801fafa <_ZNK8touchgfx8LCD16bpp55TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKhS4_ssiihhh+0x1d4>
 801f9e0:	4581      	cmp	r9, r0
 801f9e2:	f340 808a 	ble.w	801fafa <_ZNK8touchgfx8LCD16bpp55TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKhS4_ssiihhh+0x1d4>
 801f9e6:	2c00      	cmp	r4, #0
 801f9e8:	f000 8087 	beq.w	801fafa <_ZNK8touchgfx8LCD16bpp55TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKhS4_ssiihhh+0x1d4>
 801f9ec:	44e1      	add	r9, ip
 801f9ee:	f899 2001 	ldrb.w	r2, [r9, #1]
 801f9f2:	eb02 0242 	add.w	r2, r2, r2, lsl #1
 801f9f6:	4413      	add	r3, r2
 801f9f8:	b2a4      	uxth	r4, r4
 801f9fa:	fa1f fe8e 	uxth.w	lr, lr
 801f9fe:	fb04 fb0e 	mul.w	fp, r4, lr
 801fa02:	0124      	lsls	r4, r4, #4
 801fa04:	ebcb 1e0e 	rsb	lr, fp, lr, lsl #4
 801fa08:	f5c4 7980 	rsb	r9, r4, #256	; 0x100
 801fa0c:	eba4 040b 	sub.w	r4, r4, fp
 801fa10:	fa1f f08e 	uxth.w	r0, lr
 801fa14:	b2a2      	uxth	r2, r4
 801fa16:	78ac      	ldrb	r4, [r5, #2]
 801fa18:	f897 c002 	ldrb.w	ip, [r7, #2]
 801fa1c:	9901      	ldr	r1, [sp, #4]
 801fa1e:	eba9 0900 	sub.w	r9, r9, r0
 801fa22:	fa1f f989 	uxth.w	r9, r9
 801fa26:	4354      	muls	r4, r2
 801fa28:	fb09 440c 	mla	r4, r9, ip, r4
 801fa2c:	f896 c002 	ldrb.w	ip, [r6, #2]
 801fa30:	fb00 440c 	mla	r4, r0, ip, r4
 801fa34:	f893 c002 	ldrb.w	ip, [r3, #2]
 801fa38:	fa1f fe88 	uxth.w	lr, r8
 801fa3c:	ea6f 0808 	mvn.w	r8, r8
 801fa40:	fa5f f888 	uxtb.w	r8, r8
 801fa44:	fb0b 4c0c 	mla	ip, fp, ip, r4
 801fa48:	fb1a fa08 	smulbb	sl, sl, r8
 801fa4c:	f3cc 2c07 	ubfx	ip, ip, #8, #8
 801fa50:	fb0c ac0e 	mla	ip, ip, lr, sl
 801fa54:	f895 a001 	ldrb.w	sl, [r5, #1]
 801fa58:	787c      	ldrb	r4, [r7, #1]
 801fa5a:	782d      	ldrb	r5, [r5, #0]
 801fa5c:	783f      	ldrb	r7, [r7, #0]
 801fa5e:	fb02 fa0a 	mul.w	sl, r2, sl
 801fa62:	fb09 aa04 	mla	sl, r9, r4, sl
 801fa66:	7874      	ldrb	r4, [r6, #1]
 801fa68:	436a      	muls	r2, r5
 801fa6a:	7835      	ldrb	r5, [r6, #0]
 801fa6c:	fb00 aa04 	mla	sl, r0, r4, sl
 801fa70:	fb09 2207 	mla	r2, r9, r7, r2
 801fa74:	785c      	ldrb	r4, [r3, #1]
 801fa76:	781b      	ldrb	r3, [r3, #0]
 801fa78:	fb00 2005 	mla	r0, r0, r5, r2
 801fa7c:	fb0b a404 	mla	r4, fp, r4, sl
 801fa80:	fb0b 0b03 	mla	fp, fp, r3, r0
 801fa84:	9b02      	ldr	r3, [sp, #8]
 801fa86:	fb11 fa08 	smulbb	sl, r1, r8
 801fa8a:	fa1f fc8c 	uxth.w	ip, ip
 801fa8e:	fb13 f808 	smulbb	r8, r3, r8
 801fa92:	f3cb 2b07 	ubfx	fp, fp, #8, #8
 801fa96:	f3c4 2407 	ubfx	r4, r4, #8, #8
 801fa9a:	fb04 a40e 	mla	r4, r4, lr, sl
 801fa9e:	f10c 0301 	add.w	r3, ip, #1
 801faa2:	fb0b 8e0e 	mla	lr, fp, lr, r8
 801faa6:	fa1f fe8e 	uxth.w	lr, lr
 801faaa:	b2a4      	uxth	r4, r4
 801faac:	eb03 2c1c 	add.w	ip, r3, ip, lsr #8
 801fab0:	f40c 4378 	and.w	r3, ip, #63488	; 0xf800
 801fab4:	f104 0a01 	add.w	sl, r4, #1
 801fab8:	f10e 0c01 	add.w	ip, lr, #1
 801fabc:	eb0c 2c1e 	add.w	ip, ip, lr, lsr #8
 801fac0:	eb0a 2414 	add.w	r4, sl, r4, lsr #8
 801fac4:	f3cc 2cc4 	ubfx	ip, ip, #11, #5
 801fac8:	0964      	lsrs	r4, r4, #5
 801faca:	ea4c 0c03 	orr.w	ip, ip, r3
 801face:	f404 64fc 	and.w	r4, r4, #2016	; 0x7e0
 801fad2:	9b03      	ldr	r3, [sp, #12]
 801fad4:	ea4c 0c04 	orr.w	ip, ip, r4
 801fad8:	f8a3 c000 	strh.w	ip, [r3]
 801fadc:	b007      	add	sp, #28
 801fade:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
 801fae2:	af05      	add	r7, sp, #20
 801fae4:	e756      	b.n	801f994 <_ZNK8touchgfx8LCD16bpp55TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKhS4_ssiihhh+0x6e>
 801fae6:	ad05      	add	r5, sp, #20
 801fae8:	462f      	mov	r7, r5
 801faea:	e761      	b.n	801f9b0 <_ZNK8touchgfx8LCD16bpp55TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKhS4_ssiihhh+0x8a>
 801faec:	ad05      	add	r5, sp, #20
 801faee:	e75f      	b.n	801f9b0 <_ZNK8touchgfx8LCD16bpp55TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKhS4_ssiihhh+0x8a>
 801faf0:	ae05      	add	r6, sp, #20
 801faf2:	e772      	b.n	801f9da <_ZNK8touchgfx8LCD16bpp55TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKhS4_ssiihhh+0xb4>
 801faf4:	ab05      	add	r3, sp, #20
 801faf6:	461e      	mov	r6, r3
 801faf8:	e77e      	b.n	801f9f8 <_ZNK8touchgfx8LCD16bpp55TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKhS4_ssiihhh+0xd2>
 801fafa:	ab05      	add	r3, sp, #20
 801fafc:	e77c      	b.n	801f9f8 <_ZNK8touchgfx8LCD16bpp55TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKhS4_ssiihhh+0xd2>

0801fafe <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff>:
 801fafe:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 801fb02:	b095      	sub	sp, #84	; 0x54
 801fb04:	9212      	str	r2, [sp, #72]	; 0x48
 801fb06:	9309      	str	r3, [sp, #36]	; 0x24
 801fb08:	9a23      	ldr	r2, [sp, #140]	; 0x8c
 801fb0a:	f89d 309c 	ldrb.w	r3, [sp, #156]	; 0x9c
 801fb0e:	930f      	str	r3, [sp, #60]	; 0x3c
 801fb10:	910e      	str	r1, [sp, #56]	; 0x38
 801fb12:	e9dd 1324 	ldrd	r1, r3, [sp, #144]	; 0x90
 801fb16:	9013      	str	r0, [sp, #76]	; 0x4c
 801fb18:	6850      	ldr	r0, [r2, #4]
 801fb1a:	6812      	ldr	r2, [r2, #0]
 801fb1c:	fb00 1303 	mla	r3, r0, r3, r1
 801fb20:	eb02 0343 	add.w	r3, r2, r3, lsl #1
 801fb24:	930a      	str	r3, [sp, #40]	; 0x28
 801fb26:	9b26      	ldr	r3, [sp, #152]	; 0x98
 801fb28:	681b      	ldr	r3, [r3, #0]
 801fb2a:	930d      	str	r3, [sp, #52]	; 0x34
 801fb2c:	9b26      	ldr	r3, [sp, #152]	; 0x98
 801fb2e:	685c      	ldr	r4, [r3, #4]
 801fb30:	9b0f      	ldr	r3, [sp, #60]	; 0x3c
 801fb32:	43db      	mvns	r3, r3
 801fb34:	b2db      	uxtb	r3, r3
 801fb36:	3404      	adds	r4, #4
 801fb38:	930b      	str	r3, [sp, #44]	; 0x2c
 801fb3a:	9b0e      	ldr	r3, [sp, #56]	; 0x38
 801fb3c:	2b00      	cmp	r3, #0
 801fb3e:	dc03      	bgt.n	801fb48 <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x4a>
 801fb40:	9b12      	ldr	r3, [sp, #72]	; 0x48
 801fb42:	2b00      	cmp	r3, #0
 801fb44:	f340 8255 	ble.w	801fff2 <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x4f4>
 801fb48:	9b26      	ldr	r3, [sp, #152]	; 0x98
 801fb4a:	f9b3 1008 	ldrsh.w	r1, [r3, #8]
 801fb4e:	f9b3 200c 	ldrsh.w	r2, [r3, #12]
 801fb52:	1e48      	subs	r0, r1, #1
 801fb54:	1e55      	subs	r5, r2, #1
 801fb56:	9b09      	ldr	r3, [sp, #36]	; 0x24
 801fb58:	2b00      	cmp	r3, #0
 801fb5a:	f340 80f9 	ble.w	801fd50 <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x252>
 801fb5e:	9e1f      	ldr	r6, [sp, #124]	; 0x7c
 801fb60:	9b20      	ldr	r3, [sp, #128]	; 0x80
 801fb62:	1436      	asrs	r6, r6, #16
 801fb64:	ea4f 4323 	mov.w	r3, r3, asr #16
 801fb68:	d406      	bmi.n	801fb78 <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x7a>
 801fb6a:	4286      	cmp	r6, r0
 801fb6c:	da04      	bge.n	801fb78 <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x7a>
 801fb6e:	2b00      	cmp	r3, #0
 801fb70:	db02      	blt.n	801fb78 <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x7a>
 801fb72:	42ab      	cmp	r3, r5
 801fb74:	f2c0 80ed 	blt.w	801fd52 <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x254>
 801fb78:	3601      	adds	r6, #1
 801fb7a:	f100 80da 	bmi.w	801fd32 <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x234>
 801fb7e:	42b1      	cmp	r1, r6
 801fb80:	f2c0 80d7 	blt.w	801fd32 <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x234>
 801fb84:	3301      	adds	r3, #1
 801fb86:	f100 80d4 	bmi.w	801fd32 <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x234>
 801fb8a:	429a      	cmp	r2, r3
 801fb8c:	f2c0 80d1 	blt.w	801fd32 <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x234>
 801fb90:	9b09      	ldr	r3, [sp, #36]	; 0x24
 801fb92:	9311      	str	r3, [sp, #68]	; 0x44
 801fb94:	9b0a      	ldr	r3, [sp, #40]	; 0x28
 801fb96:	930c      	str	r3, [sp, #48]	; 0x30
 801fb98:	9b11      	ldr	r3, [sp, #68]	; 0x44
 801fb9a:	2b00      	cmp	r3, #0
 801fb9c:	f340 80fa 	ble.w	801fd94 <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x296>
 801fba0:	9826      	ldr	r0, [sp, #152]	; 0x98
 801fba2:	9b20      	ldr	r3, [sp, #128]	; 0x80
 801fba4:	9a20      	ldr	r2, [sp, #128]	; 0x80
 801fba6:	68c6      	ldr	r6, [r0, #12]
 801fba8:	981f      	ldr	r0, [sp, #124]	; 0x7c
 801fbaa:	141d      	asrs	r5, r3, #16
 801fbac:	f3c2 3103 	ubfx	r1, r2, #12, #4
 801fbb0:	9b1f      	ldr	r3, [sp, #124]	; 0x7c
 801fbb2:	9a26      	ldr	r2, [sp, #152]	; 0x98
 801fbb4:	1400      	asrs	r0, r0, #16
 801fbb6:	f3c3 3303 	ubfx	r3, r3, #12, #4
 801fbba:	6892      	ldr	r2, [r2, #8]
 801fbbc:	f100 813e 	bmi.w	801fe3c <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x33e>
 801fbc0:	1e57      	subs	r7, r2, #1
 801fbc2:	42b8      	cmp	r0, r7
 801fbc4:	f280 813a 	bge.w	801fe3c <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x33e>
 801fbc8:	2d00      	cmp	r5, #0
 801fbca:	f2c0 8137 	blt.w	801fe3c <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x33e>
 801fbce:	1e77      	subs	r7, r6, #1
 801fbd0:	42bd      	cmp	r5, r7
 801fbd2:	f280 8133 	bge.w	801fe3c <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x33e>
 801fbd6:	b212      	sxth	r2, r2
 801fbd8:	fb05 0002 	mla	r0, r5, r2, r0
 801fbdc:	9d0d      	ldr	r5, [sp, #52]	; 0x34
 801fbde:	f815 a000 	ldrb.w	sl, [r5, r0]
 801fbe2:	eb0a 0a4a 	add.w	sl, sl, sl, lsl #1
 801fbe6:	182e      	adds	r6, r5, r0
 801fbe8:	eb04 050a 	add.w	r5, r4, sl
 801fbec:	2b00      	cmp	r3, #0
 801fbee:	f000 8117 	beq.w	801fe20 <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x322>
 801fbf2:	f896 c001 	ldrb.w	ip, [r6, #1]
 801fbf6:	eb0c 0c4c 	add.w	ip, ip, ip, lsl #1
 801fbfa:	44a4      	add	ip, r4
 801fbfc:	2900      	cmp	r1, #0
 801fbfe:	f000 8117 	beq.w	801fe30 <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x332>
 801fc02:	18b0      	adds	r0, r6, r2
 801fc04:	5cb2      	ldrb	r2, [r6, r2]
 801fc06:	7840      	ldrb	r0, [r0, #1]
 801fc08:	eb02 0242 	add.w	r2, r2, r2, lsl #1
 801fc0c:	eb00 0040 	add.w	r0, r0, r0, lsl #1
 801fc10:	4422      	add	r2, r4
 801fc12:	4420      	add	r0, r4
 801fc14:	b29b      	uxth	r3, r3
 801fc16:	b289      	uxth	r1, r1
 801fc18:	fb03 f901 	mul.w	r9, r3, r1
 801fc1c:	ebc9 1101 	rsb	r1, r9, r1, lsl #4
 801fc20:	011b      	lsls	r3, r3, #4
 801fc22:	b289      	uxth	r1, r1
 801fc24:	f89c 7002 	ldrb.w	r7, [ip, #2]
 801fc28:	f895 b002 	ldrb.w	fp, [r5, #2]
 801fc2c:	9e0c      	ldr	r6, [sp, #48]	; 0x30
 801fc2e:	f814 a00a 	ldrb.w	sl, [r4, sl]
 801fc32:	f8b6 e000 	ldrh.w	lr, [r6]
 801fc36:	f8bd 603c 	ldrh.w	r6, [sp, #60]	; 0x3c
 801fc3a:	f5c3 7880 	rsb	r8, r3, #256	; 0x100
 801fc3e:	eba3 0309 	sub.w	r3, r3, r9
 801fc42:	b29b      	uxth	r3, r3
 801fc44:	eba8 0801 	sub.w	r8, r8, r1
 801fc48:	fa1f f888 	uxth.w	r8, r8
 801fc4c:	435f      	muls	r7, r3
 801fc4e:	fb08 770b 	mla	r7, r8, fp, r7
 801fc52:	f892 b002 	ldrb.w	fp, [r2, #2]
 801fc56:	9310      	str	r3, [sp, #64]	; 0x40
 801fc58:	fb01 770b 	mla	r7, r1, fp, r7
 801fc5c:	f890 b002 	ldrb.w	fp, [r0, #2]
 801fc60:	9b0b      	ldr	r3, [sp, #44]	; 0x2c
 801fc62:	fb09 770b 	mla	r7, r9, fp, r7
 801fc66:	ea4f 2b2e 	mov.w	fp, lr, asr #8
 801fc6a:	f00b 0bf8 	and.w	fp, fp, #248	; 0xf8
 801fc6e:	fb1b fb03 	smulbb	fp, fp, r3
 801fc72:	f3c7 2707 	ubfx	r7, r7, #8, #8
 801fc76:	fb07 b706 	mla	r7, r7, r6, fp
 801fc7a:	9b10      	ldr	r3, [sp, #64]	; 0x40
 801fc7c:	f895 b001 	ldrb.w	fp, [r5, #1]
 801fc80:	f89c 5001 	ldrb.w	r5, [ip, #1]
 801fc84:	f89c c000 	ldrb.w	ip, [ip]
 801fc88:	435d      	muls	r5, r3
 801fc8a:	fb08 550b 	mla	r5, r8, fp, r5
 801fc8e:	f892 b001 	ldrb.w	fp, [r2, #1]
 801fc92:	9b0b      	ldr	r3, [sp, #44]	; 0x2c
 801fc94:	fb01 550b 	mla	r5, r1, fp, r5
 801fc98:	f890 b001 	ldrb.w	fp, [r0, #1]
 801fc9c:	fb09 550b 	mla	r5, r9, fp, r5
 801fca0:	ea4f 0bee 	mov.w	fp, lr, asr #3
 801fca4:	f00b 0bfc 	and.w	fp, fp, #252	; 0xfc
 801fca8:	fb1b fb03 	smulbb	fp, fp, r3
 801fcac:	9b10      	ldr	r3, [sp, #64]	; 0x40
 801fcae:	fb03 f30c 	mul.w	r3, r3, ip
 801fcb2:	f892 c000 	ldrb.w	ip, [r2]
 801fcb6:	fb08 330a 	mla	r3, r8, sl, r3
 801fcba:	fb01 330c 	mla	r3, r1, ip, r3
 801fcbe:	f890 c000 	ldrb.w	ip, [r0]
 801fcc2:	ea4f 0ece 	mov.w	lr, lr, lsl #3
 801fcc6:	fb09 3c0c 	mla	ip, r9, ip, r3
 801fcca:	9b0b      	ldr	r3, [sp, #44]	; 0x2c
 801fccc:	fa5f fe8e 	uxtb.w	lr, lr
 801fcd0:	b2bf      	uxth	r7, r7
 801fcd2:	fb1e fe03 	smulbb	lr, lr, r3
 801fcd6:	f3c5 2507 	ubfx	r5, r5, #8, #8
 801fcda:	f3cc 2c07 	ubfx	ip, ip, #8, #8
 801fcde:	fb05 b506 	mla	r5, r5, r6, fp
 801fce2:	1c7b      	adds	r3, r7, #1
 801fce4:	fb0c e606 	mla	r6, ip, r6, lr
 801fce8:	b2ad      	uxth	r5, r5
 801fcea:	b2b6      	uxth	r6, r6
 801fcec:	eb03 2717 	add.w	r7, r3, r7, lsr #8
 801fcf0:	f407 4378 	and.w	r3, r7, #63488	; 0xf800
 801fcf4:	f105 0b01 	add.w	fp, r5, #1
 801fcf8:	1c77      	adds	r7, r6, #1
 801fcfa:	eb07 2716 	add.w	r7, r7, r6, lsr #8
 801fcfe:	eb0b 2515 	add.w	r5, fp, r5, lsr #8
 801fd02:	f3c7 27c4 	ubfx	r7, r7, #11, #5
 801fd06:	096d      	lsrs	r5, r5, #5
 801fd08:	431f      	orrs	r7, r3
 801fd0a:	f405 65fc 	and.w	r5, r5, #2016	; 0x7e0
 801fd0e:	9b0c      	ldr	r3, [sp, #48]	; 0x30
 801fd10:	433d      	orrs	r5, r7
 801fd12:	801d      	strh	r5, [r3, #0]
 801fd14:	9b0c      	ldr	r3, [sp, #48]	; 0x30
 801fd16:	9a21      	ldr	r2, [sp, #132]	; 0x84
 801fd18:	3302      	adds	r3, #2
 801fd1a:	930c      	str	r3, [sp, #48]	; 0x30
 801fd1c:	9b1f      	ldr	r3, [sp, #124]	; 0x7c
 801fd1e:	4413      	add	r3, r2
 801fd20:	931f      	str	r3, [sp, #124]	; 0x7c
 801fd22:	9a22      	ldr	r2, [sp, #136]	; 0x88
 801fd24:	9b20      	ldr	r3, [sp, #128]	; 0x80
 801fd26:	4413      	add	r3, r2
 801fd28:	9320      	str	r3, [sp, #128]	; 0x80
 801fd2a:	9b11      	ldr	r3, [sp, #68]	; 0x44
 801fd2c:	3b01      	subs	r3, #1
 801fd2e:	9311      	str	r3, [sp, #68]	; 0x44
 801fd30:	e732      	b.n	801fb98 <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x9a>
 801fd32:	9b1f      	ldr	r3, [sp, #124]	; 0x7c
 801fd34:	9e21      	ldr	r6, [sp, #132]	; 0x84
 801fd36:	4433      	add	r3, r6
 801fd38:	931f      	str	r3, [sp, #124]	; 0x7c
 801fd3a:	9e22      	ldr	r6, [sp, #136]	; 0x88
 801fd3c:	9b20      	ldr	r3, [sp, #128]	; 0x80
 801fd3e:	4433      	add	r3, r6
 801fd40:	9320      	str	r3, [sp, #128]	; 0x80
 801fd42:	9b09      	ldr	r3, [sp, #36]	; 0x24
 801fd44:	3b01      	subs	r3, #1
 801fd46:	9309      	str	r3, [sp, #36]	; 0x24
 801fd48:	9b0a      	ldr	r3, [sp, #40]	; 0x28
 801fd4a:	3302      	adds	r3, #2
 801fd4c:	930a      	str	r3, [sp, #40]	; 0x28
 801fd4e:	e702      	b.n	801fb56 <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x58>
 801fd50:	d027      	beq.n	801fda2 <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x2a4>
 801fd52:	9b09      	ldr	r3, [sp, #36]	; 0x24
 801fd54:	9821      	ldr	r0, [sp, #132]	; 0x84
 801fd56:	9d1f      	ldr	r5, [sp, #124]	; 0x7c
 801fd58:	3b01      	subs	r3, #1
 801fd5a:	fb00 5003 	mla	r0, r0, r3, r5
 801fd5e:	1400      	asrs	r0, r0, #16
 801fd60:	f53f af16 	bmi.w	801fb90 <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x92>
 801fd64:	3901      	subs	r1, #1
 801fd66:	4288      	cmp	r0, r1
 801fd68:	f6bf af12 	bge.w	801fb90 <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x92>
 801fd6c:	9922      	ldr	r1, [sp, #136]	; 0x88
 801fd6e:	9820      	ldr	r0, [sp, #128]	; 0x80
 801fd70:	fb01 0303 	mla	r3, r1, r3, r0
 801fd74:	141b      	asrs	r3, r3, #16
 801fd76:	f53f af0b 	bmi.w	801fb90 <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x92>
 801fd7a:	3a01      	subs	r2, #1
 801fd7c:	4293      	cmp	r3, r2
 801fd7e:	f6bf af07 	bge.w	801fb90 <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x92>
 801fd82:	9b09      	ldr	r3, [sp, #36]	; 0x24
 801fd84:	9311      	str	r3, [sp, #68]	; 0x44
 801fd86:	f8bd a03c 	ldrh.w	sl, [sp, #60]	; 0x3c
 801fd8a:	9b0a      	ldr	r3, [sp, #40]	; 0x28
 801fd8c:	930c      	str	r3, [sp, #48]	; 0x30
 801fd8e:	9b11      	ldr	r3, [sp, #68]	; 0x44
 801fd90:	2b00      	cmp	r3, #0
 801fd92:	dc70      	bgt.n	801fe76 <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x378>
 801fd94:	9b09      	ldr	r3, [sp, #36]	; 0x24
 801fd96:	9a0a      	ldr	r2, [sp, #40]	; 0x28
 801fd98:	ea23 73e3 	bic.w	r3, r3, r3, asr #31
 801fd9c:	eb02 0343 	add.w	r3, r2, r3, lsl #1
 801fda0:	930a      	str	r3, [sp, #40]	; 0x28
 801fda2:	9b0e      	ldr	r3, [sp, #56]	; 0x38
 801fda4:	2b00      	cmp	r3, #0
 801fda6:	f340 8124 	ble.w	801fff2 <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x4f4>
 801fdaa:	ee30 0a04 	vadd.f32	s0, s0, s8
 801fdae:	eeb7 7a00 	vmov.f32	s14, #112	; 0x3f800000  1.0
 801fdb2:	eec7 7a00 	vdiv.f32	s15, s14, s0
 801fdb6:	9b1e      	ldr	r3, [sp, #120]	; 0x78
 801fdb8:	ee70 0aa4 	vadd.f32	s1, s1, s9
 801fdbc:	ee31 1a05 	vadd.f32	s2, s2, s10
 801fdc0:	ee20 7aa7 	vmul.f32	s14, s1, s15
 801fdc4:	eef0 6a62 	vmov.f32	s13, s5
 801fdc8:	ee61 7a27 	vmul.f32	s15, s2, s15
 801fdcc:	eefe 6ac8 	vcvt.s32.f32	s13, s13, #16
 801fdd0:	ee77 2a62 	vsub.f32	s5, s14, s5
 801fdd4:	edcd 6a1f 	vstr	s13, [sp, #124]	; 0x7c
 801fdd8:	eefe 2ac8 	vcvt.s32.f32	s5, s5, #16
 801fddc:	eef0 6a43 	vmov.f32	s13, s6
 801fde0:	ee37 3ac3 	vsub.f32	s6, s15, s6
 801fde4:	ee12 2a90 	vmov	r2, s5
 801fde8:	eebe 3ac8 	vcvt.s32.f32	s6, s6, #16
 801fdec:	fb92 f3f3 	sdiv	r3, r2, r3
 801fdf0:	ee13 2a10 	vmov	r2, s6
 801fdf4:	9321      	str	r3, [sp, #132]	; 0x84
 801fdf6:	9b1e      	ldr	r3, [sp, #120]	; 0x78
 801fdf8:	fb92 f3f3 	sdiv	r3, r2, r3
 801fdfc:	9322      	str	r3, [sp, #136]	; 0x88
 801fdfe:	9b0e      	ldr	r3, [sp, #56]	; 0x38
 801fe00:	9a12      	ldr	r2, [sp, #72]	; 0x48
 801fe02:	3b01      	subs	r3, #1
 801fe04:	eefe 6ac8 	vcvt.s32.f32	s13, s13, #16
 801fe08:	930e      	str	r3, [sp, #56]	; 0x38
 801fe0a:	9b1e      	ldr	r3, [sp, #120]	; 0x78
 801fe0c:	edcd 6a20 	vstr	s13, [sp, #128]	; 0x80
 801fe10:	bf08      	it	eq
 801fe12:	4613      	moveq	r3, r2
 801fe14:	9309      	str	r3, [sp, #36]	; 0x24
 801fe16:	eeb0 3a67 	vmov.f32	s6, s15
 801fe1a:	eef0 2a47 	vmov.f32	s5, s14
 801fe1e:	e68c      	b.n	801fb3a <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x3c>
 801fe20:	b149      	cbz	r1, 801fe36 <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x338>
 801fe22:	5cb2      	ldrb	r2, [r6, r2]
 801fe24:	eb02 0242 	add.w	r2, r2, r2, lsl #1
 801fe28:	4422      	add	r2, r4
 801fe2a:	4628      	mov	r0, r5
 801fe2c:	46ac      	mov	ip, r5
 801fe2e:	e6f1      	b.n	801fc14 <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x116>
 801fe30:	4628      	mov	r0, r5
 801fe32:	462a      	mov	r2, r5
 801fe34:	e6ee      	b.n	801fc14 <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x116>
 801fe36:	4628      	mov	r0, r5
 801fe38:	462a      	mov	r2, r5
 801fe3a:	e7f7      	b.n	801fe2c <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x32e>
 801fe3c:	1c47      	adds	r7, r0, #1
 801fe3e:	f53f af69 	bmi.w	801fd14 <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x216>
 801fe42:	42ba      	cmp	r2, r7
 801fe44:	f6ff af66 	blt.w	801fd14 <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x216>
 801fe48:	1c6f      	adds	r7, r5, #1
 801fe4a:	f53f af63 	bmi.w	801fd14 <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x216>
 801fe4e:	42be      	cmp	r6, r7
 801fe50:	f6ff af60 	blt.w	801fd14 <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x216>
 801fe54:	9f0f      	ldr	r7, [sp, #60]	; 0x3c
 801fe56:	9002      	str	r0, [sp, #8]
 801fe58:	b236      	sxth	r6, r6
 801fe5a:	b212      	sxth	r2, r2
 801fe5c:	e9cd 1705 	strd	r1, r7, [sp, #20]
 801fe60:	e9cd 5303 	strd	r5, r3, [sp, #12]
 801fe64:	9200      	str	r2, [sp, #0]
 801fe66:	9601      	str	r6, [sp, #4]
 801fe68:	4623      	mov	r3, r4
 801fe6a:	e9dd 120c 	ldrd	r1, r2, [sp, #48]	; 0x30
 801fe6e:	9813      	ldr	r0, [sp, #76]	; 0x4c
 801fe70:	f7ff fd59 	bl	801f926 <_ZNK8touchgfx8LCD16bpp55TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKhS4_ssiihhh>
 801fe74:	e74e      	b.n	801fd14 <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x216>
 801fe76:	9a20      	ldr	r2, [sp, #128]	; 0x80
 801fe78:	9820      	ldr	r0, [sp, #128]	; 0x80
 801fe7a:	9d1f      	ldr	r5, [sp, #124]	; 0x7c
 801fe7c:	9b1f      	ldr	r3, [sp, #124]	; 0x7c
 801fe7e:	f3c2 3103 	ubfx	r1, r2, #12, #4
 801fe82:	9a26      	ldr	r2, [sp, #152]	; 0x98
 801fe84:	f9b2 2008 	ldrsh.w	r2, [r2, #8]
 801fe88:	142d      	asrs	r5, r5, #16
 801fe8a:	1400      	asrs	r0, r0, #16
 801fe8c:	fb02 5000 	mla	r0, r2, r0, r5
 801fe90:	9d0d      	ldr	r5, [sp, #52]	; 0x34
 801fe92:	f815 9000 	ldrb.w	r9, [r5, r0]
 801fe96:	f3c3 3303 	ubfx	r3, r3, #12, #4
 801fe9a:	eb09 0949 	add.w	r9, r9, r9, lsl #1
 801fe9e:	182e      	adds	r6, r5, r0
 801fea0:	eb04 0509 	add.w	r5, r4, r9
 801fea4:	2b00      	cmp	r3, #0
 801fea6:	f000 8096 	beq.w	801ffd6 <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x4d8>
 801feaa:	7877      	ldrb	r7, [r6, #1]
 801feac:	eb07 0747 	add.w	r7, r7, r7, lsl #1
 801feb0:	4427      	add	r7, r4
 801feb2:	2900      	cmp	r1, #0
 801feb4:	f000 8097 	beq.w	801ffe6 <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x4e8>
 801feb8:	18b0      	adds	r0, r6, r2
 801feba:	5cb2      	ldrb	r2, [r6, r2]
 801febc:	7840      	ldrb	r0, [r0, #1]
 801febe:	eb02 0242 	add.w	r2, r2, r2, lsl #1
 801fec2:	eb00 0040 	add.w	r0, r0, r0, lsl #1
 801fec6:	4422      	add	r2, r4
 801fec8:	4420      	add	r0, r4
 801feca:	b29b      	uxth	r3, r3
 801fecc:	b289      	uxth	r1, r1
 801fece:	fb03 f801 	mul.w	r8, r3, r1
 801fed2:	9e0c      	ldr	r6, [sp, #48]	; 0x30
 801fed4:	f895 b002 	ldrb.w	fp, [r5, #2]
 801fed8:	f8b6 c000 	ldrh.w	ip, [r6]
 801fedc:	78be      	ldrb	r6, [r7, #2]
 801fede:	f814 9009 	ldrb.w	r9, [r4, r9]
 801fee2:	011b      	lsls	r3, r3, #4
 801fee4:	ebc8 1101 	rsb	r1, r8, r1, lsl #4
 801fee8:	b289      	uxth	r1, r1
 801feea:	f5c3 7e80 	rsb	lr, r3, #256	; 0x100
 801feee:	eba3 0308 	sub.w	r3, r3, r8
 801fef2:	b29b      	uxth	r3, r3
 801fef4:	ebae 0e01 	sub.w	lr, lr, r1
 801fef8:	fa1f fe8e 	uxth.w	lr, lr
 801fefc:	435e      	muls	r6, r3
 801fefe:	fb0e 660b 	mla	r6, lr, fp, r6
 801ff02:	f892 b002 	ldrb.w	fp, [r2, #2]
 801ff06:	9310      	str	r3, [sp, #64]	; 0x40
 801ff08:	fb01 660b 	mla	r6, r1, fp, r6
 801ff0c:	f890 b002 	ldrb.w	fp, [r0, #2]
 801ff10:	9b0b      	ldr	r3, [sp, #44]	; 0x2c
 801ff12:	fb08 660b 	mla	r6, r8, fp, r6
 801ff16:	ea4f 2b2c 	mov.w	fp, ip, asr #8
 801ff1a:	f00b 0bf8 	and.w	fp, fp, #248	; 0xf8
 801ff1e:	fb1b fb03 	smulbb	fp, fp, r3
 801ff22:	f3c6 2607 	ubfx	r6, r6, #8, #8
 801ff26:	fb06 b60a 	mla	r6, r6, sl, fp
 801ff2a:	9b10      	ldr	r3, [sp, #64]	; 0x40
 801ff2c:	f895 b001 	ldrb.w	fp, [r5, #1]
 801ff30:	787d      	ldrb	r5, [r7, #1]
 801ff32:	783f      	ldrb	r7, [r7, #0]
 801ff34:	435d      	muls	r5, r3
 801ff36:	fb0e 550b 	mla	r5, lr, fp, r5
 801ff3a:	f892 b001 	ldrb.w	fp, [r2, #1]
 801ff3e:	9b0b      	ldr	r3, [sp, #44]	; 0x2c
 801ff40:	fb01 550b 	mla	r5, r1, fp, r5
 801ff44:	f890 b001 	ldrb.w	fp, [r0, #1]
 801ff48:	fb08 550b 	mla	r5, r8, fp, r5
 801ff4c:	ea4f 0bec 	mov.w	fp, ip, asr #3
 801ff50:	f00b 0bfc 	and.w	fp, fp, #252	; 0xfc
 801ff54:	fb1b fb03 	smulbb	fp, fp, r3
 801ff58:	9b10      	ldr	r3, [sp, #64]	; 0x40
 801ff5a:	437b      	muls	r3, r7
 801ff5c:	7817      	ldrb	r7, [r2, #0]
 801ff5e:	fb0e 3309 	mla	r3, lr, r9, r3
 801ff62:	fb01 3307 	mla	r3, r1, r7, r3
 801ff66:	7807      	ldrb	r7, [r0, #0]
 801ff68:	ea4f 0ccc 	mov.w	ip, ip, lsl #3
 801ff6c:	fb08 3707 	mla	r7, r8, r7, r3
 801ff70:	9b0b      	ldr	r3, [sp, #44]	; 0x2c
 801ff72:	fa5f fc8c 	uxtb.w	ip, ip
 801ff76:	fb1c fc03 	smulbb	ip, ip, r3
 801ff7a:	f3c5 2507 	ubfx	r5, r5, #8, #8
 801ff7e:	f3c7 2707 	ubfx	r7, r7, #8, #8
 801ff82:	fb05 b50a 	mla	r5, r5, sl, fp
 801ff86:	fb07 c70a 	mla	r7, r7, sl, ip
 801ff8a:	b2b6      	uxth	r6, r6
 801ff8c:	b2ad      	uxth	r5, r5
 801ff8e:	b2bf      	uxth	r7, r7
 801ff90:	1c73      	adds	r3, r6, #1
 801ff92:	1c7a      	adds	r2, r7, #1
 801ff94:	f105 0b01 	add.w	fp, r5, #1
 801ff98:	eb03 2616 	add.w	r6, r3, r6, lsr #8
 801ff9c:	eb02 2217 	add.w	r2, r2, r7, lsr #8
 801ffa0:	eb0b 2515 	add.w	r5, fp, r5, lsr #8
 801ffa4:	f3c2 22c4 	ubfx	r2, r2, #11, #5
 801ffa8:	f406 4678 	and.w	r6, r6, #63488	; 0xf800
 801ffac:	096d      	lsrs	r5, r5, #5
 801ffae:	9b0c      	ldr	r3, [sp, #48]	; 0x30
 801ffb0:	4316      	orrs	r6, r2
 801ffb2:	f405 65fc 	and.w	r5, r5, #2016	; 0x7e0
 801ffb6:	432e      	orrs	r6, r5
 801ffb8:	f823 6b02 	strh.w	r6, [r3], #2
 801ffbc:	9a21      	ldr	r2, [sp, #132]	; 0x84
 801ffbe:	930c      	str	r3, [sp, #48]	; 0x30
 801ffc0:	9b1f      	ldr	r3, [sp, #124]	; 0x7c
 801ffc2:	4413      	add	r3, r2
 801ffc4:	931f      	str	r3, [sp, #124]	; 0x7c
 801ffc6:	9a22      	ldr	r2, [sp, #136]	; 0x88
 801ffc8:	9b20      	ldr	r3, [sp, #128]	; 0x80
 801ffca:	4413      	add	r3, r2
 801ffcc:	9320      	str	r3, [sp, #128]	; 0x80
 801ffce:	9b11      	ldr	r3, [sp, #68]	; 0x44
 801ffd0:	3b01      	subs	r3, #1
 801ffd2:	9311      	str	r3, [sp, #68]	; 0x44
 801ffd4:	e6db      	b.n	801fd8e <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x290>
 801ffd6:	b149      	cbz	r1, 801ffec <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x4ee>
 801ffd8:	5cb2      	ldrb	r2, [r6, r2]
 801ffda:	eb02 0242 	add.w	r2, r2, r2, lsl #1
 801ffde:	4422      	add	r2, r4
 801ffe0:	4628      	mov	r0, r5
 801ffe2:	462f      	mov	r7, r5
 801ffe4:	e771      	b.n	801feca <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x3cc>
 801ffe6:	4628      	mov	r0, r5
 801ffe8:	462a      	mov	r2, r5
 801ffea:	e76e      	b.n	801feca <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x3cc>
 801ffec:	4628      	mov	r0, r5
 801ffee:	462a      	mov	r2, r5
 801fff0:	e7f7      	b.n	801ffe2 <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x4e4>
 801fff2:	b015      	add	sp, #84	; 0x54
 801fff4:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}

0801fff8 <_ZNK8touchgfx8LCD16bpp57TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhS4_ssiihh>:
 801fff8:	e92d 4ff7 	stmdb	sp!, {r0, r1, r2, r4, r5, r6, r7, r8, r9, sl, fp, lr}
 801fffc:	880f      	ldrh	r7, [r1, #0]
 801fffe:	f9bd e030 	ldrsh.w	lr, [sp, #48]	; 0x30
 8020002:	f9bd 9034 	ldrsh.w	r9, [sp, #52]	; 0x34
 8020006:	f89d 0040 	ldrb.w	r0, [sp, #64]	; 0x40
 802000a:	f89d 6044 	ldrb.w	r6, [sp, #68]	; 0x44
 802000e:	023c      	lsls	r4, r7, #8
 8020010:	e9dd c50e 	ldrd	ip, r5, [sp, #56]	; 0x38
 8020014:	f404 0b78 	and.w	fp, r4, #16252928	; 0xf80000
 8020018:	017c      	lsls	r4, r7, #5
 802001a:	f404 447c 	and.w	r4, r4, #64512	; 0xfc00
 802001e:	00ff      	lsls	r7, r7, #3
 8020020:	ea4b 0404 	orr.w	r4, fp, r4
 8020024:	b2ff      	uxtb	r7, r7
 8020026:	fb05 ca0e 	mla	sl, r5, lr, ip
 802002a:	4327      	orrs	r7, r4
 802002c:	2d00      	cmp	r5, #0
 802002e:	eb02 080a 	add.w	r8, r2, sl
 8020032:	9701      	str	r7, [sp, #4]
 8020034:	db7e      	blt.n	8020134 <_ZNK8touchgfx8LCD16bpp57TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhS4_ssiihh+0x13c>
 8020036:	45a9      	cmp	r9, r5
 8020038:	dd7c      	ble.n	8020134 <_ZNK8touchgfx8LCD16bpp57TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhS4_ssiihh+0x13c>
 802003a:	f1bc 0f00 	cmp.w	ip, #0
 802003e:	db77      	blt.n	8020130 <_ZNK8touchgfx8LCD16bpp57TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhS4_ssiihh+0x138>
 8020040:	45e6      	cmp	lr, ip
 8020042:	dd75      	ble.n	8020130 <_ZNK8touchgfx8LCD16bpp57TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhS4_ssiihh+0x138>
 8020044:	f812 700a 	ldrb.w	r7, [r2, sl]
 8020048:	eb07 0747 	add.w	r7, r7, r7, lsl #1
 802004c:	441f      	add	r7, r3
 802004e:	f11c 0201 	adds.w	r2, ip, #1
 8020052:	d472      	bmi.n	802013a <_ZNK8touchgfx8LCD16bpp57TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhS4_ssiihh+0x142>
 8020054:	4596      	cmp	lr, r2
 8020056:	dd70      	ble.n	802013a <_ZNK8touchgfx8LCD16bpp57TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhS4_ssiihh+0x142>
 8020058:	2800      	cmp	r0, #0
 802005a:	d06e      	beq.n	802013a <_ZNK8touchgfx8LCD16bpp57TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhS4_ssiihh+0x142>
 802005c:	f898 4001 	ldrb.w	r4, [r8, #1]
 8020060:	eb04 0444 	add.w	r4, r4, r4, lsl #1
 8020064:	441c      	add	r4, r3
 8020066:	3501      	adds	r5, #1
 8020068:	d46b      	bmi.n	8020142 <_ZNK8touchgfx8LCD16bpp57TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhS4_ssiihh+0x14a>
 802006a:	45a9      	cmp	r9, r5
 802006c:	dd69      	ble.n	8020142 <_ZNK8touchgfx8LCD16bpp57TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhS4_ssiihh+0x14a>
 802006e:	2e00      	cmp	r6, #0
 8020070:	d067      	beq.n	8020142 <_ZNK8touchgfx8LCD16bpp57TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhS4_ssiihh+0x14a>
 8020072:	f1bc 0f00 	cmp.w	ip, #0
 8020076:	db62      	blt.n	802013e <_ZNK8touchgfx8LCD16bpp57TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhS4_ssiihh+0x146>
 8020078:	45e6      	cmp	lr, ip
 802007a:	dd60      	ble.n	802013e <_ZNK8touchgfx8LCD16bpp57TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhS4_ssiihh+0x146>
 802007c:	f818 500e 	ldrb.w	r5, [r8, lr]
 8020080:	eb05 0545 	add.w	r5, r5, r5, lsl #1
 8020084:	441d      	add	r5, r3
 8020086:	f11c 0201 	adds.w	r2, ip, #1
 802008a:	d45d      	bmi.n	8020148 <_ZNK8touchgfx8LCD16bpp57TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhS4_ssiihh+0x150>
 802008c:	4596      	cmp	lr, r2
 802008e:	dd5b      	ble.n	8020148 <_ZNK8touchgfx8LCD16bpp57TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhS4_ssiihh+0x150>
 8020090:	2800      	cmp	r0, #0
 8020092:	d059      	beq.n	8020148 <_ZNK8touchgfx8LCD16bpp57TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhS4_ssiihh+0x150>
 8020094:	44c6      	add	lr, r8
 8020096:	f89e 2001 	ldrb.w	r2, [lr, #1]
 802009a:	eb02 0242 	add.w	r2, r2, r2, lsl #1
 802009e:	4413      	add	r3, r2
 80200a0:	b280      	uxth	r0, r0
 80200a2:	b2b2      	uxth	r2, r6
 80200a4:	fb00 f602 	mul.w	r6, r0, r2
 80200a8:	0100      	lsls	r0, r0, #4
 80200aa:	ebc6 1202 	rsb	r2, r6, r2, lsl #4
 80200ae:	f5c0 7880 	rsb	r8, r0, #256	; 0x100
 80200b2:	1b80      	subs	r0, r0, r6
 80200b4:	fa1f fc82 	uxth.w	ip, r2
 80200b8:	b282      	uxth	r2, r0
 80200ba:	78a0      	ldrb	r0, [r4, #2]
 80200bc:	f897 e002 	ldrb.w	lr, [r7, #2]
 80200c0:	f897 9000 	ldrb.w	r9, [r7]
 80200c4:	787f      	ldrb	r7, [r7, #1]
 80200c6:	eba8 080c 	sub.w	r8, r8, ip
 80200ca:	fa1f f888 	uxth.w	r8, r8
 80200ce:	4350      	muls	r0, r2
 80200d0:	fb08 0e0e 	mla	lr, r8, lr, r0
 80200d4:	78a8      	ldrb	r0, [r5, #2]
 80200d6:	fb0c e000 	mla	r0, ip, r0, lr
 80200da:	f893 e002 	ldrb.w	lr, [r3, #2]
 80200de:	fb06 0e0e 	mla	lr, r6, lr, r0
 80200e2:	f40e 4078 	and.w	r0, lr, #63488	; 0xf800
 80200e6:	f894 e000 	ldrb.w	lr, [r4]
 80200ea:	fb02 fe0e 	mul.w	lr, r2, lr
 80200ee:	fb08 e909 	mla	r9, r8, r9, lr
 80200f2:	f895 e000 	ldrb.w	lr, [r5]
 80200f6:	fb0c 990e 	mla	r9, ip, lr, r9
 80200fa:	f893 e000 	ldrb.w	lr, [r3]
 80200fe:	785b      	ldrb	r3, [r3, #1]
 8020100:	fb06 9e0e 	mla	lr, r6, lr, r9
 8020104:	f3ce 2ec4 	ubfx	lr, lr, #11, #5
 8020108:	ea4e 0e00 	orr.w	lr, lr, r0
 802010c:	7860      	ldrb	r0, [r4, #1]
 802010e:	4350      	muls	r0, r2
 8020110:	786a      	ldrb	r2, [r5, #1]
 8020112:	fb08 0007 	mla	r0, r8, r7, r0
 8020116:	fb0c 0202 	mla	r2, ip, r2, r0
 802011a:	fb06 2303 	mla	r3, r6, r3, r2
 802011e:	095b      	lsrs	r3, r3, #5
 8020120:	f403 63fc 	and.w	r3, r3, #2016	; 0x7e0
 8020124:	ea4e 0303 	orr.w	r3, lr, r3
 8020128:	800b      	strh	r3, [r1, #0]
 802012a:	b003      	add	sp, #12
 802012c:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
 8020130:	af01      	add	r7, sp, #4
 8020132:	e78c      	b.n	802004e <_ZNK8touchgfx8LCD16bpp57TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhS4_ssiihh+0x56>
 8020134:	ac01      	add	r4, sp, #4
 8020136:	4627      	mov	r7, r4
 8020138:	e795      	b.n	8020066 <_ZNK8touchgfx8LCD16bpp57TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhS4_ssiihh+0x6e>
 802013a:	ac01      	add	r4, sp, #4
 802013c:	e793      	b.n	8020066 <_ZNK8touchgfx8LCD16bpp57TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhS4_ssiihh+0x6e>
 802013e:	ad01      	add	r5, sp, #4
 8020140:	e7a1      	b.n	8020086 <_ZNK8touchgfx8LCD16bpp57TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhS4_ssiihh+0x8e>
 8020142:	ab01      	add	r3, sp, #4
 8020144:	461d      	mov	r5, r3
 8020146:	e7ab      	b.n	80200a0 <_ZNK8touchgfx8LCD16bpp57TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhS4_ssiihh+0xa8>
 8020148:	ab01      	add	r3, sp, #4
 802014a:	e7a9      	b.n	80200a0 <_ZNK8touchgfx8LCD16bpp57TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhS4_ssiihh+0xa8>

0802014c <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff>:
 802014c:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 8020150:	b08f      	sub	sp, #60	; 0x3c
 8020152:	e9dd b519 	ldrd	fp, r5, [sp, #100]	; 0x64
 8020156:	920c      	str	r2, [sp, #48]	; 0x30
 8020158:	9a1d      	ldr	r2, [sp, #116]	; 0x74
 802015a:	910a      	str	r1, [sp, #40]	; 0x28
 802015c:	9306      	str	r3, [sp, #24]
 802015e:	e9dd 131e 	ldrd	r1, r3, [sp, #120]	; 0x78
 8020162:	900d      	str	r0, [sp, #52]	; 0x34
 8020164:	6850      	ldr	r0, [r2, #4]
 8020166:	6812      	ldr	r2, [r2, #0]
 8020168:	fb00 1303 	mla	r3, r0, r3, r1
 802016c:	eb02 0343 	add.w	r3, r2, r3, lsl #1
 8020170:	9307      	str	r3, [sp, #28]
 8020172:	9b20      	ldr	r3, [sp, #128]	; 0x80
 8020174:	681b      	ldr	r3, [r3, #0]
 8020176:	9308      	str	r3, [sp, #32]
 8020178:	9b20      	ldr	r3, [sp, #128]	; 0x80
 802017a:	685c      	ldr	r4, [r3, #4]
 802017c:	3404      	adds	r4, #4
 802017e:	9b0a      	ldr	r3, [sp, #40]	; 0x28
 8020180:	2b00      	cmp	r3, #0
 8020182:	dc03      	bgt.n	802018c <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x40>
 8020184:	9b0c      	ldr	r3, [sp, #48]	; 0x30
 8020186:	2b00      	cmp	r3, #0
 8020188:	f340 81d6 	ble.w	8020538 <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x3ec>
 802018c:	9b20      	ldr	r3, [sp, #128]	; 0x80
 802018e:	f9b3 1008 	ldrsh.w	r1, [r3, #8]
 8020192:	f9b3 200c 	ldrsh.w	r2, [r3, #12]
 8020196:	1e48      	subs	r0, r1, #1
 8020198:	1e56      	subs	r6, r2, #1
 802019a:	9b06      	ldr	r3, [sp, #24]
 802019c:	2b00      	cmp	r3, #0
 802019e:	f340 80b7 	ble.w	8020310 <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x1c4>
 80201a2:	ea5f 472b 	movs.w	r7, fp, asr #16
 80201a6:	ea4f 4325 	mov.w	r3, r5, asr #16
 80201aa:	d406      	bmi.n	80201ba <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x6e>
 80201ac:	4287      	cmp	r7, r0
 80201ae:	da04      	bge.n	80201ba <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x6e>
 80201b0:	2b00      	cmp	r3, #0
 80201b2:	db02      	blt.n	80201ba <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x6e>
 80201b4:	42b3      	cmp	r3, r6
 80201b6:	f2c0 80ac 	blt.w	8020312 <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x1c6>
 80201ba:	3701      	adds	r7, #1
 80201bc:	f100 809d 	bmi.w	80202fa <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x1ae>
 80201c0:	42b9      	cmp	r1, r7
 80201c2:	f2c0 809a 	blt.w	80202fa <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x1ae>
 80201c6:	3301      	adds	r3, #1
 80201c8:	f100 8097 	bmi.w	80202fa <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x1ae>
 80201cc:	429a      	cmp	r2, r3
 80201ce:	f2c0 8094 	blt.w	80202fa <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x1ae>
 80201d2:	9b06      	ldr	r3, [sp, #24]
 80201d4:	930b      	str	r3, [sp, #44]	; 0x2c
 80201d6:	9b07      	ldr	r3, [sp, #28]
 80201d8:	9309      	str	r3, [sp, #36]	; 0x24
 80201da:	9b0b      	ldr	r3, [sp, #44]	; 0x2c
 80201dc:	2b00      	cmp	r3, #0
 80201de:	f340 80b5 	ble.w	802034c <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x200>
 80201e2:	9820      	ldr	r0, [sp, #128]	; 0x80
 80201e4:	9a20      	ldr	r2, [sp, #128]	; 0x80
 80201e6:	68c7      	ldr	r7, [r0, #12]
 80201e8:	6892      	ldr	r2, [r2, #8]
 80201ea:	ea5f 402b 	movs.w	r0, fp, asr #16
 80201ee:	ea4f 4625 	mov.w	r6, r5, asr #16
 80201f2:	f3cb 3303 	ubfx	r3, fp, #12, #4
 80201f6:	f3c5 3103 	ubfx	r1, r5, #12, #4
 80201fa:	f100 80fb 	bmi.w	80203f4 <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x2a8>
 80201fe:	f102 3cff 	add.w	ip, r2, #4294967295
 8020202:	4560      	cmp	r0, ip
 8020204:	f280 80f6 	bge.w	80203f4 <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x2a8>
 8020208:	2e00      	cmp	r6, #0
 802020a:	f2c0 80f3 	blt.w	80203f4 <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x2a8>
 802020e:	f107 3cff 	add.w	ip, r7, #4294967295
 8020212:	4566      	cmp	r6, ip
 8020214:	f280 80ee 	bge.w	80203f4 <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x2a8>
 8020218:	b212      	sxth	r2, r2
 802021a:	fb06 0002 	mla	r0, r6, r2, r0
 802021e:	9e08      	ldr	r6, [sp, #32]
 8020220:	1837      	adds	r7, r6, r0
 8020222:	5c30      	ldrb	r0, [r6, r0]
 8020224:	eb00 0840 	add.w	r8, r0, r0, lsl #1
 8020228:	eb04 0c08 	add.w	ip, r4, r8
 802022c:	2b00      	cmp	r3, #0
 802022e:	f000 80d3 	beq.w	80203d8 <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x28c>
 8020232:	787e      	ldrb	r6, [r7, #1]
 8020234:	eb06 0646 	add.w	r6, r6, r6, lsl #1
 8020238:	4426      	add	r6, r4
 802023a:	2900      	cmp	r1, #0
 802023c:	f000 80d4 	beq.w	80203e8 <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x29c>
 8020240:	18b8      	adds	r0, r7, r2
 8020242:	5cba      	ldrb	r2, [r7, r2]
 8020244:	7840      	ldrb	r0, [r0, #1]
 8020246:	eb02 0242 	add.w	r2, r2, r2, lsl #1
 802024a:	eb00 0040 	add.w	r0, r0, r0, lsl #1
 802024e:	4422      	add	r2, r4
 8020250:	4420      	add	r0, r4
 8020252:	b29b      	uxth	r3, r3
 8020254:	b289      	uxth	r1, r1
 8020256:	fb03 f901 	mul.w	r9, r3, r1
 802025a:	ebc9 1101 	rsb	r1, r9, r1, lsl #4
 802025e:	011b      	lsls	r3, r3, #4
 8020260:	b289      	uxth	r1, r1
 8020262:	78b7      	ldrb	r7, [r6, #2]
 8020264:	f89c a002 	ldrb.w	sl, [ip, #2]
 8020268:	f89c c001 	ldrb.w	ip, [ip, #1]
 802026c:	f5c3 7e80 	rsb	lr, r3, #256	; 0x100
 8020270:	eba3 0309 	sub.w	r3, r3, r9
 8020274:	b29b      	uxth	r3, r3
 8020276:	ebae 0e01 	sub.w	lr, lr, r1
 802027a:	fa1f fe8e 	uxth.w	lr, lr
 802027e:	435f      	muls	r7, r3
 8020280:	fb0e 770a 	mla	r7, lr, sl, r7
 8020284:	f892 a002 	ldrb.w	sl, [r2, #2]
 8020288:	fb01 770a 	mla	r7, r1, sl, r7
 802028c:	f890 a002 	ldrb.w	sl, [r0, #2]
 8020290:	fb09 7a0a 	mla	sl, r9, sl, r7
 8020294:	f814 7008 	ldrb.w	r7, [r4, r8]
 8020298:	f896 8000 	ldrb.w	r8, [r6]
 802029c:	7876      	ldrb	r6, [r6, #1]
 802029e:	fb03 f808 	mul.w	r8, r3, r8
 80202a2:	fb0e 8807 	mla	r8, lr, r7, r8
 80202a6:	7817      	ldrb	r7, [r2, #0]
 80202a8:	fb01 8807 	mla	r8, r1, r7, r8
 80202ac:	7807      	ldrb	r7, [r0, #0]
 80202ae:	fb09 8707 	mla	r7, r9, r7, r8
 80202b2:	f40a 4a78 	and.w	sl, sl, #63488	; 0xf800
 80202b6:	f3c7 27c4 	ubfx	r7, r7, #11, #5
 80202ba:	ea47 070a 	orr.w	r7, r7, sl
 80202be:	4373      	muls	r3, r6
 80202c0:	f892 a001 	ldrb.w	sl, [r2, #1]
 80202c4:	fb0e 330c 	mla	r3, lr, ip, r3
 80202c8:	fb01 310a 	mla	r1, r1, sl, r3
 80202cc:	f890 a001 	ldrb.w	sl, [r0, #1]
 80202d0:	9b09      	ldr	r3, [sp, #36]	; 0x24
 80202d2:	fb09 1a0a 	mla	sl, r9, sl, r1
 80202d6:	ea4f 1a5a 	mov.w	sl, sl, lsr #5
 80202da:	f40a 6afc 	and.w	sl, sl, #2016	; 0x7e0
 80202de:	ea47 070a 	orr.w	r7, r7, sl
 80202e2:	801f      	strh	r7, [r3, #0]
 80202e4:	9b09      	ldr	r3, [sp, #36]	; 0x24
 80202e6:	3302      	adds	r3, #2
 80202e8:	9309      	str	r3, [sp, #36]	; 0x24
 80202ea:	9b1b      	ldr	r3, [sp, #108]	; 0x6c
 80202ec:	449b      	add	fp, r3
 80202ee:	9b1c      	ldr	r3, [sp, #112]	; 0x70
 80202f0:	441d      	add	r5, r3
 80202f2:	9b0b      	ldr	r3, [sp, #44]	; 0x2c
 80202f4:	3b01      	subs	r3, #1
 80202f6:	930b      	str	r3, [sp, #44]	; 0x2c
 80202f8:	e76f      	b.n	80201da <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x8e>
 80202fa:	9b1b      	ldr	r3, [sp, #108]	; 0x6c
 80202fc:	449b      	add	fp, r3
 80202fe:	9b1c      	ldr	r3, [sp, #112]	; 0x70
 8020300:	441d      	add	r5, r3
 8020302:	9b06      	ldr	r3, [sp, #24]
 8020304:	3b01      	subs	r3, #1
 8020306:	9306      	str	r3, [sp, #24]
 8020308:	9b07      	ldr	r3, [sp, #28]
 802030a:	3302      	adds	r3, #2
 802030c:	9307      	str	r3, [sp, #28]
 802030e:	e744      	b.n	802019a <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x4e>
 8020310:	d023      	beq.n	802035a <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x20e>
 8020312:	9b06      	ldr	r3, [sp, #24]
 8020314:	981b      	ldr	r0, [sp, #108]	; 0x6c
 8020316:	3b01      	subs	r3, #1
 8020318:	fb00 b003 	mla	r0, r0, r3, fp
 802031c:	1400      	asrs	r0, r0, #16
 802031e:	f53f af58 	bmi.w	80201d2 <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x86>
 8020322:	3901      	subs	r1, #1
 8020324:	4288      	cmp	r0, r1
 8020326:	f6bf af54 	bge.w	80201d2 <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x86>
 802032a:	991c      	ldr	r1, [sp, #112]	; 0x70
 802032c:	fb01 5303 	mla	r3, r1, r3, r5
 8020330:	141b      	asrs	r3, r3, #16
 8020332:	f53f af4e 	bmi.w	80201d2 <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x86>
 8020336:	3a01      	subs	r2, #1
 8020338:	4293      	cmp	r3, r2
 802033a:	f6bf af4a 	bge.w	80201d2 <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x86>
 802033e:	9b06      	ldr	r3, [sp, #24]
 8020340:	9309      	str	r3, [sp, #36]	; 0x24
 8020342:	9b07      	ldr	r3, [sp, #28]
 8020344:	930b      	str	r3, [sp, #44]	; 0x2c
 8020346:	9b09      	ldr	r3, [sp, #36]	; 0x24
 8020348:	2b00      	cmp	r3, #0
 802034a:	dc70      	bgt.n	802042e <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x2e2>
 802034c:	9b06      	ldr	r3, [sp, #24]
 802034e:	9a07      	ldr	r2, [sp, #28]
 8020350:	ea23 73e3 	bic.w	r3, r3, r3, asr #31
 8020354:	eb02 0343 	add.w	r3, r2, r3, lsl #1
 8020358:	9307      	str	r3, [sp, #28]
 802035a:	9b0a      	ldr	r3, [sp, #40]	; 0x28
 802035c:	2b00      	cmp	r3, #0
 802035e:	f340 80eb 	ble.w	8020538 <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x3ec>
 8020362:	ee30 0a04 	vadd.f32	s0, s0, s8
 8020366:	eeb7 7a00 	vmov.f32	s14, #112	; 0x3f800000  1.0
 802036a:	eec7 7a00 	vdiv.f32	s15, s14, s0
 802036e:	9b18      	ldr	r3, [sp, #96]	; 0x60
 8020370:	ee70 0aa4 	vadd.f32	s1, s1, s9
 8020374:	ee31 1a05 	vadd.f32	s2, s2, s10
 8020378:	ee20 7aa7 	vmul.f32	s14, s1, s15
 802037c:	eef0 6a62 	vmov.f32	s13, s5
 8020380:	ee61 7a27 	vmul.f32	s15, s2, s15
 8020384:	eefe 6ac8 	vcvt.s32.f32	s13, s13, #16
 8020388:	ee77 2a62 	vsub.f32	s5, s14, s5
 802038c:	ee16 ba90 	vmov	fp, s13
 8020390:	eefe 2ac8 	vcvt.s32.f32	s5, s5, #16
 8020394:	eef0 6a43 	vmov.f32	s13, s6
 8020398:	ee37 3ac3 	vsub.f32	s6, s15, s6
 802039c:	ee12 2a90 	vmov	r2, s5
 80203a0:	eebe 3ac8 	vcvt.s32.f32	s6, s6, #16
 80203a4:	fb92 f3f3 	sdiv	r3, r2, r3
 80203a8:	ee13 2a10 	vmov	r2, s6
 80203ac:	931b      	str	r3, [sp, #108]	; 0x6c
 80203ae:	9b18      	ldr	r3, [sp, #96]	; 0x60
 80203b0:	fb92 f3f3 	sdiv	r3, r2, r3
 80203b4:	931c      	str	r3, [sp, #112]	; 0x70
 80203b6:	9b0a      	ldr	r3, [sp, #40]	; 0x28
 80203b8:	9a0c      	ldr	r2, [sp, #48]	; 0x30
 80203ba:	3b01      	subs	r3, #1
 80203bc:	eefe 6ac8 	vcvt.s32.f32	s13, s13, #16
 80203c0:	930a      	str	r3, [sp, #40]	; 0x28
 80203c2:	9b18      	ldr	r3, [sp, #96]	; 0x60
 80203c4:	bf08      	it	eq
 80203c6:	4613      	moveq	r3, r2
 80203c8:	ee16 5a90 	vmov	r5, s13
 80203cc:	9306      	str	r3, [sp, #24]
 80203ce:	eeb0 3a67 	vmov.f32	s6, s15
 80203d2:	eef0 2a47 	vmov.f32	s5, s14
 80203d6:	e6d2      	b.n	802017e <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x32>
 80203d8:	b149      	cbz	r1, 80203ee <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x2a2>
 80203da:	5cba      	ldrb	r2, [r7, r2]
 80203dc:	eb02 0242 	add.w	r2, r2, r2, lsl #1
 80203e0:	4422      	add	r2, r4
 80203e2:	4660      	mov	r0, ip
 80203e4:	4666      	mov	r6, ip
 80203e6:	e734      	b.n	8020252 <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x106>
 80203e8:	4660      	mov	r0, ip
 80203ea:	4662      	mov	r2, ip
 80203ec:	e731      	b.n	8020252 <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x106>
 80203ee:	4660      	mov	r0, ip
 80203f0:	4662      	mov	r2, ip
 80203f2:	e7f7      	b.n	80203e4 <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x298>
 80203f4:	f110 0c01 	adds.w	ip, r0, #1
 80203f8:	f53f af74 	bmi.w	80202e4 <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x198>
 80203fc:	4562      	cmp	r2, ip
 80203fe:	f6ff af71 	blt.w	80202e4 <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x198>
 8020402:	f116 0c01 	adds.w	ip, r6, #1
 8020406:	f53f af6d 	bmi.w	80202e4 <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x198>
 802040a:	4567      	cmp	r7, ip
 802040c:	f6ff af6a 	blt.w	80202e4 <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x198>
 8020410:	b23f      	sxth	r7, r7
 8020412:	b212      	sxth	r2, r2
 8020414:	e9cd 3104 	strd	r3, r1, [sp, #16]
 8020418:	e9cd 0602 	strd	r0, r6, [sp, #8]
 802041c:	9200      	str	r2, [sp, #0]
 802041e:	9701      	str	r7, [sp, #4]
 8020420:	4623      	mov	r3, r4
 8020422:	e9dd 2108 	ldrd	r2, r1, [sp, #32]
 8020426:	980d      	ldr	r0, [sp, #52]	; 0x34
 8020428:	f7ff fde6 	bl	801fff8 <_ZNK8touchgfx8LCD16bpp57TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhS4_ssiihh>
 802042c:	e75a      	b.n	80202e4 <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x198>
 802042e:	9a20      	ldr	r2, [sp, #128]	; 0x80
 8020430:	f9b2 2008 	ldrsh.w	r2, [r2, #8]
 8020434:	ea4f 462b 	mov.w	r6, fp, asr #16
 8020438:	1428      	asrs	r0, r5, #16
 802043a:	fb02 6000 	mla	r0, r2, r0, r6
 802043e:	9e08      	ldr	r6, [sp, #32]
 8020440:	f816 8000 	ldrb.w	r8, [r6, r0]
 8020444:	f3cb 3303 	ubfx	r3, fp, #12, #4
 8020448:	eb08 0848 	add.w	r8, r8, r8, lsl #1
 802044c:	f3c5 3103 	ubfx	r1, r5, #12, #4
 8020450:	1837      	adds	r7, r6, r0
 8020452:	eb04 0c08 	add.w	ip, r4, r8
 8020456:	2b00      	cmp	r3, #0
 8020458:	d060      	beq.n	802051c <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x3d0>
 802045a:	787e      	ldrb	r6, [r7, #1]
 802045c:	eb06 0646 	add.w	r6, r6, r6, lsl #1
 8020460:	4426      	add	r6, r4
 8020462:	2900      	cmp	r1, #0
 8020464:	d062      	beq.n	802052c <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x3e0>
 8020466:	18b8      	adds	r0, r7, r2
 8020468:	5cba      	ldrb	r2, [r7, r2]
 802046a:	7840      	ldrb	r0, [r0, #1]
 802046c:	eb02 0242 	add.w	r2, r2, r2, lsl #1
 8020470:	eb00 0040 	add.w	r0, r0, r0, lsl #1
 8020474:	4422      	add	r2, r4
 8020476:	4420      	add	r0, r4
 8020478:	b29b      	uxth	r3, r3
 802047a:	b289      	uxth	r1, r1
 802047c:	fb03 f901 	mul.w	r9, r3, r1
 8020480:	ebc9 1101 	rsb	r1, r9, r1, lsl #4
 8020484:	011b      	lsls	r3, r3, #4
 8020486:	b289      	uxth	r1, r1
 8020488:	78b7      	ldrb	r7, [r6, #2]
 802048a:	f89c a002 	ldrb.w	sl, [ip, #2]
 802048e:	f89c c001 	ldrb.w	ip, [ip, #1]
 8020492:	f5c3 7e80 	rsb	lr, r3, #256	; 0x100
 8020496:	eba3 0309 	sub.w	r3, r3, r9
 802049a:	b29b      	uxth	r3, r3
 802049c:	ebae 0e01 	sub.w	lr, lr, r1
 80204a0:	fa1f fe8e 	uxth.w	lr, lr
 80204a4:	435f      	muls	r7, r3
 80204a6:	fb0e 770a 	mla	r7, lr, sl, r7
 80204aa:	f892 a002 	ldrb.w	sl, [r2, #2]
 80204ae:	fb01 770a 	mla	r7, r1, sl, r7
 80204b2:	f890 a002 	ldrb.w	sl, [r0, #2]
 80204b6:	fb09 7a0a 	mla	sl, r9, sl, r7
 80204ba:	f814 7008 	ldrb.w	r7, [r4, r8]
 80204be:	f896 8000 	ldrb.w	r8, [r6]
 80204c2:	7876      	ldrb	r6, [r6, #1]
 80204c4:	fb03 f808 	mul.w	r8, r3, r8
 80204c8:	fb0e 8807 	mla	r8, lr, r7, r8
 80204cc:	7817      	ldrb	r7, [r2, #0]
 80204ce:	fb01 8807 	mla	r8, r1, r7, r8
 80204d2:	7807      	ldrb	r7, [r0, #0]
 80204d4:	fb09 8707 	mla	r7, r9, r7, r8
 80204d8:	f40a 4a78 	and.w	sl, sl, #63488	; 0xf800
 80204dc:	4373      	muls	r3, r6
 80204de:	f3c7 27c4 	ubfx	r7, r7, #11, #5
 80204e2:	7856      	ldrb	r6, [r2, #1]
 80204e4:	ea47 070a 	orr.w	r7, r7, sl
 80204e8:	fb0e 330c 	mla	r3, lr, ip, r3
 80204ec:	f890 a001 	ldrb.w	sl, [r0, #1]
 80204f0:	fb01 3306 	mla	r3, r1, r6, r3
 80204f4:	fb09 3a0a 	mla	sl, r9, sl, r3
 80204f8:	ea4f 1a5a 	mov.w	sl, sl, lsr #5
 80204fc:	9b0b      	ldr	r3, [sp, #44]	; 0x2c
 80204fe:	f40a 6afc 	and.w	sl, sl, #2016	; 0x7e0
 8020502:	ea47 070a 	orr.w	r7, r7, sl
 8020506:	f823 7b02 	strh.w	r7, [r3], #2
 802050a:	930b      	str	r3, [sp, #44]	; 0x2c
 802050c:	9b1b      	ldr	r3, [sp, #108]	; 0x6c
 802050e:	449b      	add	fp, r3
 8020510:	9b1c      	ldr	r3, [sp, #112]	; 0x70
 8020512:	441d      	add	r5, r3
 8020514:	9b09      	ldr	r3, [sp, #36]	; 0x24
 8020516:	3b01      	subs	r3, #1
 8020518:	9309      	str	r3, [sp, #36]	; 0x24
 802051a:	e714      	b.n	8020346 <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x1fa>
 802051c:	b149      	cbz	r1, 8020532 <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x3e6>
 802051e:	5cba      	ldrb	r2, [r7, r2]
 8020520:	eb02 0242 	add.w	r2, r2, r2, lsl #1
 8020524:	4422      	add	r2, r4
 8020526:	4660      	mov	r0, ip
 8020528:	4666      	mov	r6, ip
 802052a:	e7a5      	b.n	8020478 <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x32c>
 802052c:	4660      	mov	r0, ip
 802052e:	4662      	mov	r2, ip
 8020530:	e7a2      	b.n	8020478 <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x32c>
 8020532:	4660      	mov	r0, ip
 8020534:	4662      	mov	r2, ip
 8020536:	e7f7      	b.n	8020528 <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x3dc>
 8020538:	b00f      	add	sp, #60	; 0x3c
 802053a:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}

0802053e <_ZNK8touchgfx8LCD16bpp60TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKhPKmssiihhh>:
 802053e:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 8020542:	b085      	sub	sp, #20
 8020544:	e9dd 7410 	ldrd	r7, r4, [sp, #64]	; 0x40
 8020548:	f9bd c038 	ldrsh.w	ip, [sp, #56]	; 0x38
 802054c:	9102      	str	r1, [sp, #8]
 802054e:	2c00      	cmp	r4, #0
 8020550:	fb04 710c 	mla	r1, r4, ip, r7
 8020554:	f9bd 803c 	ldrsh.w	r8, [sp, #60]	; 0x3c
 8020558:	f89d 6048 	ldrb.w	r6, [sp, #72]	; 0x48
 802055c:	f89d 004c 	ldrb.w	r0, [sp, #76]	; 0x4c
 8020560:	eb02 0e01 	add.w	lr, r2, r1
 8020564:	f2c0 8122 	blt.w	80207ac <_ZNK8touchgfx8LCD16bpp60TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKhPKmssiihhh+0x26e>
 8020568:	45a0      	cmp	r8, r4
 802056a:	f340 811f 	ble.w	80207ac <_ZNK8touchgfx8LCD16bpp60TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKhPKmssiihhh+0x26e>
 802056e:	2f00      	cmp	r7, #0
 8020570:	f2c0 811a 	blt.w	80207a8 <_ZNK8touchgfx8LCD16bpp60TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKhPKmssiihhh+0x26a>
 8020574:	45bc      	cmp	ip, r7
 8020576:	f340 8117 	ble.w	80207a8 <_ZNK8touchgfx8LCD16bpp60TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKhPKmssiihhh+0x26a>
 802057a:	5c52      	ldrb	r2, [r2, r1]
 802057c:	f853 5022 	ldr.w	r5, [r3, r2, lsl #2]
 8020580:	1c7a      	adds	r2, r7, #1
 8020582:	f100 8116 	bmi.w	80207b2 <_ZNK8touchgfx8LCD16bpp60TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKhPKmssiihhh+0x274>
 8020586:	4594      	cmp	ip, r2
 8020588:	f340 8113 	ble.w	80207b2 <_ZNK8touchgfx8LCD16bpp60TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKhPKmssiihhh+0x274>
 802058c:	2e00      	cmp	r6, #0
 802058e:	f000 8112 	beq.w	80207b6 <_ZNK8touchgfx8LCD16bpp60TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKhPKmssiihhh+0x278>
 8020592:	f89e 2001 	ldrb.w	r2, [lr, #1]
 8020596:	f853 1022 	ldr.w	r1, [r3, r2, lsl #2]
 802059a:	3401      	adds	r4, #1
 802059c:	f100 810f 	bmi.w	80207be <_ZNK8touchgfx8LCD16bpp60TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKhPKmssiihhh+0x280>
 80205a0:	45a0      	cmp	r8, r4
 80205a2:	f340 810c 	ble.w	80207be <_ZNK8touchgfx8LCD16bpp60TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKhPKmssiihhh+0x280>
 80205a6:	2800      	cmp	r0, #0
 80205a8:	f000 810c 	beq.w	80207c4 <_ZNK8touchgfx8LCD16bpp60TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKhPKmssiihhh+0x286>
 80205ac:	2f00      	cmp	r7, #0
 80205ae:	f2c0 8104 	blt.w	80207ba <_ZNK8touchgfx8LCD16bpp60TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKhPKmssiihhh+0x27c>
 80205b2:	45bc      	cmp	ip, r7
 80205b4:	f340 8101 	ble.w	80207ba <_ZNK8touchgfx8LCD16bpp60TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKhPKmssiihhh+0x27c>
 80205b8:	f81e 200c 	ldrb.w	r2, [lr, ip]
 80205bc:	f853 4022 	ldr.w	r4, [r3, r2, lsl #2]
 80205c0:	3701      	adds	r7, #1
 80205c2:	f100 8102 	bmi.w	80207ca <_ZNK8touchgfx8LCD16bpp60TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKhPKmssiihhh+0x28c>
 80205c6:	45bc      	cmp	ip, r7
 80205c8:	f340 80ff 	ble.w	80207ca <_ZNK8touchgfx8LCD16bpp60TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKhPKmssiihhh+0x28c>
 80205cc:	2e00      	cmp	r6, #0
 80205ce:	f000 80fe 	beq.w	80207ce <_ZNK8touchgfx8LCD16bpp60TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKhPKmssiihhh+0x290>
 80205d2:	44f4      	add	ip, lr
 80205d4:	f89c 2001 	ldrb.w	r2, [ip, #1]
 80205d8:	f853 2022 	ldr.w	r2, [r3, r2, lsl #2]
 80205dc:	b2b6      	uxth	r6, r6
 80205de:	b280      	uxth	r0, r0
 80205e0:	fb00 fe06 	mul.w	lr, r0, r6
 80205e4:	ebce 1000 	rsb	r0, lr, r0, lsl #4
 80205e8:	0136      	lsls	r6, r6, #4
 80205ea:	eba6 070e 	sub.w	r7, r6, lr
 80205ee:	b280      	uxth	r0, r0
 80205f0:	f5c6 7380 	rsb	r3, r6, #256	; 0x100
 80205f4:	ea4f 6a11 	mov.w	sl, r1, lsr #24
 80205f8:	b2bf      	uxth	r7, r7
 80205fa:	1a1b      	subs	r3, r3, r0
 80205fc:	ea4f 6b15 	mov.w	fp, r5, lsr #24
 8020600:	b29b      	uxth	r3, r3
 8020602:	fb0a f607 	mul.w	r6, sl, r7
 8020606:	ea4f 6914 	mov.w	r9, r4, lsr #24
 802060a:	fb0b 6603 	mla	r6, fp, r3, r6
 802060e:	ea4f 6812 	mov.w	r8, r2, lsr #24
 8020612:	fb00 6609 	mla	r6, r0, r9, r6
 8020616:	fb0e 6608 	mla	r6, lr, r8, r6
 802061a:	f3c6 2607 	ubfx	r6, r6, #8, #8
 802061e:	9600      	str	r6, [sp, #0]
 8020620:	2e00      	cmp	r6, #0
 8020622:	f000 80be 	beq.w	80207a2 <_ZNK8touchgfx8LCD16bpp60TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKhPKmssiihhh+0x264>
 8020626:	f005 1cff 	and.w	ip, r5, #16711935	; 0xff00ff
 802062a:	fb0b fc0c 	mul.w	ip, fp, ip
 802062e:	f405 457f 	and.w	r5, r5, #65280	; 0xff00
 8020632:	fb0b f505 	mul.w	r5, fp, r5
 8020636:	ea4f 2b1c 	mov.w	fp, ip, lsr #8
 802063a:	f00b 1bff 	and.w	fp, fp, #16711935	; 0xff00ff
 802063e:	f10c 1c01 	add.w	ip, ip, #65537	; 0x10001
 8020642:	44dc      	add	ip, fp
 8020644:	ea4f 2c1c 	mov.w	ip, ip, lsr #8
 8020648:	9501      	str	r5, [sp, #4]
 802064a:	f00c 15ff 	and.w	r5, ip, #16711935	; 0xff00ff
 802064e:	9503      	str	r5, [sp, #12]
 8020650:	9d01      	ldr	r5, [sp, #4]
 8020652:	9e02      	ldr	r6, [sp, #8]
 8020654:	f505 7c80 	add.w	ip, r5, #256	; 0x100
 8020658:	eb0c 2515 	add.w	r5, ip, r5, lsr #8
 802065c:	f001 1cff 	and.w	ip, r1, #16711935	; 0xff00ff
 8020660:	fb0a fc0c 	mul.w	ip, sl, ip
 8020664:	ea4f 2b15 	mov.w	fp, r5, lsr #8
 8020668:	ea4f 251c 	mov.w	r5, ip, lsr #8
 802066c:	f005 15ff 	and.w	r5, r5, #16711935	; 0xff00ff
 8020670:	f10c 1c01 	add.w	ip, ip, #65537	; 0x10001
 8020674:	4465      	add	r5, ip
 8020676:	f004 1cff 	and.w	ip, r4, #16711935	; 0xff00ff
 802067a:	f404 447f 	and.w	r4, r4, #65280	; 0xff00
 802067e:	fb09 fc0c 	mul.w	ip, r9, ip
 8020682:	fb09 f904 	mul.w	r9, r9, r4
 8020686:	f509 7480 	add.w	r4, r9, #256	; 0x100
 802068a:	eb04 2919 	add.w	r9, r4, r9, lsr #8
 802068e:	f002 14ff 	and.w	r4, r2, #16711935	; 0xff00ff
 8020692:	fb08 f404 	mul.w	r4, r8, r4
 8020696:	f401 417f 	and.w	r1, r1, #65280	; 0xff00
 802069a:	f402 427f 	and.w	r2, r2, #65280	; 0xff00
 802069e:	fb08 f802 	mul.w	r8, r8, r2
 80206a2:	fb0a fa01 	mul.w	sl, sl, r1
 80206a6:	0a22      	lsrs	r2, r4, #8
 80206a8:	f50a 7180 	add.w	r1, sl, #256	; 0x100
 80206ac:	f002 12ff 	and.w	r2, r2, #16711935	; 0xff00ff
 80206b0:	f104 1401 	add.w	r4, r4, #65537	; 0x10001
 80206b4:	eb01 2a1a 	add.w	sl, r1, sl, lsr #8
 80206b8:	4414      	add	r4, r2
 80206ba:	ea4f 211c 	mov.w	r1, ip, lsr #8
 80206be:	f508 7280 	add.w	r2, r8, #256	; 0x100
 80206c2:	0a2d      	lsrs	r5, r5, #8
 80206c4:	eb02 2818 	add.w	r8, r2, r8, lsr #8
 80206c8:	f005 15ff 	and.w	r5, r5, #16711935	; 0xff00ff
 80206cc:	9a03      	ldr	r2, [sp, #12]
 80206ce:	8836      	ldrh	r6, [r6, #0]
 80206d0:	f001 11ff 	and.w	r1, r1, #16711935	; 0xff00ff
 80206d4:	f10c 1c01 	add.w	ip, ip, #65537	; 0x10001
 80206d8:	437d      	muls	r5, r7
 80206da:	4461      	add	r1, ip
 80206dc:	0a24      	lsrs	r4, r4, #8
 80206de:	fb02 5503 	mla	r5, r2, r3, r5
 80206e2:	0a09      	lsrs	r1, r1, #8
 80206e4:	f004 14ff 	and.w	r4, r4, #16711935	; 0xff00ff
 80206e8:	fb04 540e 	mla	r4, r4, lr, r5
 80206ec:	f001 11ff 	and.w	r1, r1, #16711935	; 0xff00ff
 80206f0:	fb01 4100 	mla	r1, r1, r0, r4
 80206f4:	ea4f 2a1a 	mov.w	sl, sl, lsr #8
 80206f8:	0a09      	lsrs	r1, r1, #8
 80206fa:	f40a 4a7f 	and.w	sl, sl, #65280	; 0xff00
 80206fe:	f001 14ff 	and.w	r4, r1, #16711935	; 0xff00ff
 8020702:	fb07 f70a 	mul.w	r7, r7, sl
 8020706:	ea4f 2818 	mov.w	r8, r8, lsr #8
 802070a:	f40b 417f 	and.w	r1, fp, #65280	; 0xff00
 802070e:	fb03 7101 	mla	r1, r3, r1, r7
 8020712:	ea4f 2919 	mov.w	r9, r9, lsr #8
 8020716:	f408 487f 	and.w	r8, r8, #65280	; 0xff00
 802071a:	fb0e 1e08 	mla	lr, lr, r8, r1
 802071e:	f409 417f 	and.w	r1, r9, #65280	; 0xff00
 8020722:	fb00 e101 	mla	r1, r0, r1, lr
 8020726:	f89d 0050 	ldrb.w	r0, [sp, #80]	; 0x50
 802072a:	9a00      	ldr	r2, [sp, #0]
 802072c:	b287      	uxth	r7, r0
 802072e:	437a      	muls	r2, r7
 8020730:	0a09      	lsrs	r1, r1, #8
 8020732:	1c53      	adds	r3, r2, #1
 8020734:	f401 417f 	and.w	r1, r1, #65280	; 0xff00
 8020738:	4321      	orrs	r1, r4
 802073a:	eb03 2312 	add.w	r3, r3, r2, lsr #8
 802073e:	1235      	asrs	r5, r6, #8
 8020740:	0c0a      	lsrs	r2, r1, #16
 8020742:	ea6f 2313 	mvn.w	r3, r3, lsr #8
 8020746:	b2db      	uxtb	r3, r3
 8020748:	fb12 f207 	smulbb	r2, r2, r7
 802074c:	f005 05f8 	and.w	r5, r5, #248	; 0xf8
 8020750:	fb05 2503 	mla	r5, r5, r3, r2
 8020754:	f3c1 2407 	ubfx	r4, r1, #8, #8
 8020758:	10f2      	asrs	r2, r6, #3
 802075a:	b2c8      	uxtb	r0, r1
 802075c:	00f6      	lsls	r6, r6, #3
 802075e:	fb14 f407 	smulbb	r4, r4, r7
 8020762:	f002 02fc 	and.w	r2, r2, #252	; 0xfc
 8020766:	b2f6      	uxtb	r6, r6
 8020768:	fb10 f007 	smulbb	r0, r0, r7
 802076c:	fb02 4203 	mla	r2, r2, r3, r4
 8020770:	b2ad      	uxth	r5, r5
 8020772:	fb06 0303 	mla	r3, r6, r3, r0
 8020776:	b299      	uxth	r1, r3
 8020778:	b294      	uxth	r4, r2
 802077a:	1c6b      	adds	r3, r5, #1
 802077c:	eb03 2515 	add.w	r5, r3, r5, lsr #8
 8020780:	1c62      	adds	r2, r4, #1
 8020782:	1c4b      	adds	r3, r1, #1
 8020784:	eb03 2311 	add.w	r3, r3, r1, lsr #8
 8020788:	eb02 2214 	add.w	r2, r2, r4, lsr #8
 802078c:	f405 4578 	and.w	r5, r5, #63488	; 0xf800
 8020790:	f3c3 23c4 	ubfx	r3, r3, #11, #5
 8020794:	0952      	lsrs	r2, r2, #5
 8020796:	f402 62fc 	and.w	r2, r2, #2016	; 0x7e0
 802079a:	432b      	orrs	r3, r5
 802079c:	4313      	orrs	r3, r2
 802079e:	9a02      	ldr	r2, [sp, #8]
 80207a0:	8013      	strh	r3, [r2, #0]
 80207a2:	b005      	add	sp, #20
 80207a4:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
 80207a8:	2500      	movs	r5, #0
 80207aa:	e6e9      	b.n	8020580 <_ZNK8touchgfx8LCD16bpp60TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKhPKmssiihhh+0x42>
 80207ac:	2100      	movs	r1, #0
 80207ae:	460d      	mov	r5, r1
 80207b0:	e6f3      	b.n	802059a <_ZNK8touchgfx8LCD16bpp60TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKhPKmssiihhh+0x5c>
 80207b2:	2100      	movs	r1, #0
 80207b4:	e6f1      	b.n	802059a <_ZNK8touchgfx8LCD16bpp60TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKhPKmssiihhh+0x5c>
 80207b6:	4631      	mov	r1, r6
 80207b8:	e6ef      	b.n	802059a <_ZNK8touchgfx8LCD16bpp60TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKhPKmssiihhh+0x5c>
 80207ba:	2400      	movs	r4, #0
 80207bc:	e700      	b.n	80205c0 <_ZNK8touchgfx8LCD16bpp60TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKhPKmssiihhh+0x82>
 80207be:	2200      	movs	r2, #0
 80207c0:	4614      	mov	r4, r2
 80207c2:	e70b      	b.n	80205dc <_ZNK8touchgfx8LCD16bpp60TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKhPKmssiihhh+0x9e>
 80207c4:	4602      	mov	r2, r0
 80207c6:	4604      	mov	r4, r0
 80207c8:	e708      	b.n	80205dc <_ZNK8touchgfx8LCD16bpp60TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKhPKmssiihhh+0x9e>
 80207ca:	2200      	movs	r2, #0
 80207cc:	e706      	b.n	80205dc <_ZNK8touchgfx8LCD16bpp60TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKhPKmssiihhh+0x9e>
 80207ce:	4632      	mov	r2, r6
 80207d0:	e704      	b.n	80205dc <_ZNK8touchgfx8LCD16bpp60TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKhPKmssiihhh+0x9e>

080207d2 <_ZN8touchgfx8LCD16bpp60TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff>:
 80207d2:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 80207d6:	b09f      	sub	sp, #124	; 0x7c
 80207d8:	921b      	str	r2, [sp, #108]	; 0x6c
 80207da:	9309      	str	r3, [sp, #36]	; 0x24
 80207dc:	9a2d      	ldr	r2, [sp, #180]	; 0xb4
 80207de:	f89d 30c4 	ldrb.w	r3, [sp, #196]	; 0xc4
 80207e2:	931c      	str	r3, [sp, #112]	; 0x70
 80207e4:	9119      	str	r1, [sp, #100]	; 0x64
 80207e6:	e9dd 132e 	ldrd	r1, r3, [sp, #184]	; 0xb8
 80207ea:	901d      	str	r0, [sp, #116]	; 0x74
 80207ec:	6850      	ldr	r0, [r2, #4]
 80207ee:	6812      	ldr	r2, [r2, #0]
 80207f0:	9d2a      	ldr	r5, [sp, #168]	; 0xa8
 80207f2:	fb00 1303 	mla	r3, r0, r3, r1
 80207f6:	eb02 0343 	add.w	r3, r2, r3, lsl #1
 80207fa:	930c      	str	r3, [sp, #48]	; 0x30
 80207fc:	9b30      	ldr	r3, [sp, #192]	; 0xc0
 80207fe:	681b      	ldr	r3, [r3, #0]
 8020800:	9312      	str	r3, [sp, #72]	; 0x48
 8020802:	9b30      	ldr	r3, [sp, #192]	; 0xc0
 8020804:	685e      	ldr	r6, [r3, #4]
 8020806:	f8bd 3070 	ldrh.w	r3, [sp, #112]	; 0x70
 802080a:	930d      	str	r3, [sp, #52]	; 0x34
 802080c:	3604      	adds	r6, #4
 802080e:	9b19      	ldr	r3, [sp, #100]	; 0x64
 8020810:	2b00      	cmp	r3, #0
 8020812:	dc03      	bgt.n	802081c <_ZN8touchgfx8LCD16bpp60TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x4a>
 8020814:	9b1b      	ldr	r3, [sp, #108]	; 0x6c
 8020816:	2b00      	cmp	r3, #0
 8020818:	f340 8388 	ble.w	8020f2c <_ZN8touchgfx8LCD16bpp60TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x75a>
 802081c:	9b30      	ldr	r3, [sp, #192]	; 0xc0
 802081e:	f9b3 1008 	ldrsh.w	r1, [r3, #8]
 8020822:	f9b3 200c 	ldrsh.w	r2, [r3, #12]
 8020826:	1e48      	subs	r0, r1, #1
 8020828:	1e57      	subs	r7, r2, #1
 802082a:	9b09      	ldr	r3, [sp, #36]	; 0x24
 802082c:	2b00      	cmp	r3, #0
 802082e:	f340 8195 	ble.w	8020b5c <_ZN8touchgfx8LCD16bpp60TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x38a>
 8020832:	9c29      	ldr	r4, [sp, #164]	; 0xa4
 8020834:	ea5f 4c24 	movs.w	ip, r4, asr #16
 8020838:	ea4f 4325 	mov.w	r3, r5, asr #16
 802083c:	d406      	bmi.n	802084c <_ZN8touchgfx8LCD16bpp60TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x7a>
 802083e:	4584      	cmp	ip, r0
 8020840:	da04      	bge.n	802084c <_ZN8touchgfx8LCD16bpp60TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x7a>
 8020842:	2b00      	cmp	r3, #0
 8020844:	db02      	blt.n	802084c <_ZN8touchgfx8LCD16bpp60TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x7a>
 8020846:	42bb      	cmp	r3, r7
 8020848:	f2c0 8189 	blt.w	8020b5e <_ZN8touchgfx8LCD16bpp60TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x38c>
 802084c:	f11c 0c01 	adds.w	ip, ip, #1
 8020850:	f100 8177 	bmi.w	8020b42 <_ZN8touchgfx8LCD16bpp60TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x370>
 8020854:	4561      	cmp	r1, ip
 8020856:	f2c0 8174 	blt.w	8020b42 <_ZN8touchgfx8LCD16bpp60TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x370>
 802085a:	3301      	adds	r3, #1
 802085c:	f100 8171 	bmi.w	8020b42 <_ZN8touchgfx8LCD16bpp60TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x370>
 8020860:	429a      	cmp	r2, r3
 8020862:	f2c0 816e 	blt.w	8020b42 <_ZN8touchgfx8LCD16bpp60TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x370>
 8020866:	9b09      	ldr	r3, [sp, #36]	; 0x24
 8020868:	9f0c      	ldr	r7, [sp, #48]	; 0x30
 802086a:	931a      	str	r3, [sp, #104]	; 0x68
 802086c:	9b1a      	ldr	r3, [sp, #104]	; 0x68
 802086e:	2b00      	cmp	r3, #0
 8020870:	f340 8193 	ble.w	8020b9a <_ZN8touchgfx8LCD16bpp60TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x3c8>
 8020874:	9b29      	ldr	r3, [sp, #164]	; 0xa4
 8020876:	f3c3 3203 	ubfx	r2, r3, #12, #4
 802087a:	9b30      	ldr	r3, [sp, #192]	; 0xc0
 802087c:	e9d3 0e02 	ldrd	r0, lr, [r3, #8]
 8020880:	9b29      	ldr	r3, [sp, #164]	; 0xa4
 8020882:	141b      	asrs	r3, r3, #16
 8020884:	ea4f 4c25 	mov.w	ip, r5, asr #16
 8020888:	f3c5 3103 	ubfx	r1, r5, #12, #4
 802088c:	f100 81d6 	bmi.w	8020c3c <_ZN8touchgfx8LCD16bpp60TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x46a>
 8020890:	f100 38ff 	add.w	r8, r0, #4294967295
 8020894:	4543      	cmp	r3, r8
 8020896:	f280 81d1 	bge.w	8020c3c <_ZN8touchgfx8LCD16bpp60TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x46a>
 802089a:	f1bc 0f00 	cmp.w	ip, #0
 802089e:	f2c0 81cd 	blt.w	8020c3c <_ZN8touchgfx8LCD16bpp60TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x46a>
 80208a2:	f10e 38ff 	add.w	r8, lr, #4294967295
 80208a6:	45c4      	cmp	ip, r8
 80208a8:	f280 81c8 	bge.w	8020c3c <_ZN8touchgfx8LCD16bpp60TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x46a>
 80208ac:	b200      	sxth	r0, r0
 80208ae:	fb0c 3300 	mla	r3, ip, r0, r3
 80208b2:	9c12      	ldr	r4, [sp, #72]	; 0x48
 80208b4:	eb04 0803 	add.w	r8, r4, r3
 80208b8:	5ce3      	ldrb	r3, [r4, r3]
 80208ba:	f856 3023 	ldr.w	r3, [r6, r3, lsl #2]
 80208be:	ea4f 6e13 	mov.w	lr, r3, lsr #24
 80208c2:	2a00      	cmp	r2, #0
 80208c4:	f000 81af 	beq.w	8020c26 <_ZN8touchgfx8LCD16bpp60TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x454>
 80208c8:	f898 c001 	ldrb.w	ip, [r8, #1]
 80208cc:	f856 402c 	ldr.w	r4, [r6, ip, lsl #2]
 80208d0:	940e      	str	r4, [sp, #56]	; 0x38
 80208d2:	0e24      	lsrs	r4, r4, #24
 80208d4:	9415      	str	r4, [sp, #84]	; 0x54
 80208d6:	b179      	cbz	r1, 80208f8 <_ZN8touchgfx8LCD16bpp60TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x126>
 80208d8:	eb08 0c00 	add.w	ip, r8, r0
 80208dc:	f818 0000 	ldrb.w	r0, [r8, r0]
 80208e0:	f856 0020 	ldr.w	r0, [r6, r0, lsl #2]
 80208e4:	900a      	str	r0, [sp, #40]	; 0x28
 80208e6:	0e00      	lsrs	r0, r0, #24
 80208e8:	9013      	str	r0, [sp, #76]	; 0x4c
 80208ea:	f89c 0001 	ldrb.w	r0, [ip, #1]
 80208ee:	f856 0020 	ldr.w	r0, [r6, r0, lsl #2]
 80208f2:	900f      	str	r0, [sp, #60]	; 0x3c
 80208f4:	0e00      	lsrs	r0, r0, #24
 80208f6:	9016      	str	r0, [sp, #88]	; 0x58
 80208f8:	b292      	uxth	r2, r2
 80208fa:	b289      	uxth	r1, r1
 80208fc:	fb02 f901 	mul.w	r9, r2, r1
 8020900:	ebc9 1101 	rsb	r1, r9, r1, lsl #4
 8020904:	0112      	lsls	r2, r2, #4
 8020906:	eba2 0809 	sub.w	r8, r2, r9
 802090a:	b289      	uxth	r1, r1
 802090c:	f5c2 7280 	rsb	r2, r2, #256	; 0x100
 8020910:	9815      	ldr	r0, [sp, #84]	; 0x54
 8020912:	9c13      	ldr	r4, [sp, #76]	; 0x4c
 8020914:	fa1f f888 	uxth.w	r8, r8
 8020918:	1a52      	subs	r2, r2, r1
 802091a:	b292      	uxth	r2, r2
 802091c:	fb08 f000 	mul.w	r0, r8, r0
 8020920:	fb02 000e 	mla	r0, r2, lr, r0
 8020924:	fb01 0004 	mla	r0, r1, r4, r0
 8020928:	9c16      	ldr	r4, [sp, #88]	; 0x58
 802092a:	fb09 0004 	mla	r0, r9, r4, r0
 802092e:	f3c0 2007 	ubfx	r0, r0, #8, #8
 8020932:	2800      	cmp	r0, #0
 8020934:	f000 80fa 	beq.w	8020b2c <_ZN8touchgfx8LCD16bpp60TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x35a>
 8020938:	f1be 0fff 	cmp.w	lr, #255	; 0xff
 802093c:	d01b      	beq.n	8020976 <_ZN8touchgfx8LCD16bpp60TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x1a4>
 802093e:	f003 1aff 	and.w	sl, r3, #16711935	; 0xff00ff
 8020942:	fb0e fa0a 	mul.w	sl, lr, sl
 8020946:	f403 437f 	and.w	r3, r3, #65280	; 0xff00
 802094a:	fb0e fe03 	mul.w	lr, lr, r3
 802094e:	ea4f 231a 	mov.w	r3, sl, lsr #8
 8020952:	f003 13ff 	and.w	r3, r3, #16711935	; 0xff00ff
 8020956:	f10a 1a01 	add.w	sl, sl, #65537	; 0x10001
 802095a:	f50e 7c80 	add.w	ip, lr, #256	; 0x100
 802095e:	4453      	add	r3, sl
 8020960:	eb0c 2c1e 	add.w	ip, ip, lr, lsr #8
 8020964:	0a1b      	lsrs	r3, r3, #8
 8020966:	ea4f 2c1c 	mov.w	ip, ip, lsr #8
 802096a:	f003 13ff 	and.w	r3, r3, #16711935	; 0xff00ff
 802096e:	f40c 4c7f 	and.w	ip, ip, #65280	; 0xff00
 8020972:	ea43 030c 	orr.w	r3, r3, ip
 8020976:	9c15      	ldr	r4, [sp, #84]	; 0x54
 8020978:	2cff      	cmp	r4, #255	; 0xff
 802097a:	d021      	beq.n	80209c0 <_ZN8touchgfx8LCD16bpp60TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x1ee>
 802097c:	9c0e      	ldr	r4, [sp, #56]	; 0x38
 802097e:	f004 1bff 	and.w	fp, r4, #16711935	; 0xff00ff
 8020982:	9c15      	ldr	r4, [sp, #84]	; 0x54
 8020984:	fb04 fb0b 	mul.w	fp, r4, fp
 8020988:	9c0e      	ldr	r4, [sp, #56]	; 0x38
 802098a:	f404 4a7f 	and.w	sl, r4, #65280	; 0xff00
 802098e:	9c15      	ldr	r4, [sp, #84]	; 0x54
 8020990:	ea4f 2e1b 	mov.w	lr, fp, lsr #8
 8020994:	fb04 fa0a 	mul.w	sl, r4, sl
 8020998:	f00e 1eff 	and.w	lr, lr, #16711935	; 0xff00ff
 802099c:	f10b 1b01 	add.w	fp, fp, #65537	; 0x10001
 80209a0:	f50a 7c80 	add.w	ip, sl, #256	; 0x100
 80209a4:	44de      	add	lr, fp
 80209a6:	eb0c 2a1a 	add.w	sl, ip, sl, lsr #8
 80209aa:	ea4f 2e1e 	mov.w	lr, lr, lsr #8
 80209ae:	ea4f 2a1a 	mov.w	sl, sl, lsr #8
 80209b2:	f00e 1eff 	and.w	lr, lr, #16711935	; 0xff00ff
 80209b6:	f40a 4a7f 	and.w	sl, sl, #65280	; 0xff00
 80209ba:	ea4e 040a 	orr.w	r4, lr, sl
 80209be:	940e      	str	r4, [sp, #56]	; 0x38
 80209c0:	9c13      	ldr	r4, [sp, #76]	; 0x4c
 80209c2:	2cff      	cmp	r4, #255	; 0xff
 80209c4:	d021      	beq.n	8020a0a <_ZN8touchgfx8LCD16bpp60TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x238>
 80209c6:	9c0a      	ldr	r4, [sp, #40]	; 0x28
 80209c8:	f004 1bff 	and.w	fp, r4, #16711935	; 0xff00ff
 80209cc:	9c13      	ldr	r4, [sp, #76]	; 0x4c
 80209ce:	fb04 fb0b 	mul.w	fp, r4, fp
 80209d2:	9c0a      	ldr	r4, [sp, #40]	; 0x28
 80209d4:	f404 4a7f 	and.w	sl, r4, #65280	; 0xff00
 80209d8:	9c13      	ldr	r4, [sp, #76]	; 0x4c
 80209da:	ea4f 2e1b 	mov.w	lr, fp, lsr #8
 80209de:	fb04 fa0a 	mul.w	sl, r4, sl
 80209e2:	f00e 1eff 	and.w	lr, lr, #16711935	; 0xff00ff
 80209e6:	f10b 1b01 	add.w	fp, fp, #65537	; 0x10001
 80209ea:	f50a 7c80 	add.w	ip, sl, #256	; 0x100
 80209ee:	44de      	add	lr, fp
 80209f0:	eb0c 2a1a 	add.w	sl, ip, sl, lsr #8
 80209f4:	ea4f 2e1e 	mov.w	lr, lr, lsr #8
 80209f8:	ea4f 2a1a 	mov.w	sl, sl, lsr #8
 80209fc:	f00e 1eff 	and.w	lr, lr, #16711935	; 0xff00ff
 8020a00:	f40a 4a7f 	and.w	sl, sl, #65280	; 0xff00
 8020a04:	ea4e 040a 	orr.w	r4, lr, sl
 8020a08:	940a      	str	r4, [sp, #40]	; 0x28
 8020a0a:	9c16      	ldr	r4, [sp, #88]	; 0x58
 8020a0c:	2cff      	cmp	r4, #255	; 0xff
 8020a0e:	d021      	beq.n	8020a54 <_ZN8touchgfx8LCD16bpp60TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x282>
 8020a10:	9c0f      	ldr	r4, [sp, #60]	; 0x3c
 8020a12:	f004 1bff 	and.w	fp, r4, #16711935	; 0xff00ff
 8020a16:	9c16      	ldr	r4, [sp, #88]	; 0x58
 8020a18:	fb04 fb0b 	mul.w	fp, r4, fp
 8020a1c:	9c0f      	ldr	r4, [sp, #60]	; 0x3c
 8020a1e:	f404 4a7f 	and.w	sl, r4, #65280	; 0xff00
 8020a22:	9c16      	ldr	r4, [sp, #88]	; 0x58
 8020a24:	ea4f 2e1b 	mov.w	lr, fp, lsr #8
 8020a28:	fb04 fa0a 	mul.w	sl, r4, sl
 8020a2c:	f00e 1eff 	and.w	lr, lr, #16711935	; 0xff00ff
 8020a30:	f10b 1b01 	add.w	fp, fp, #65537	; 0x10001
 8020a34:	f50a 7c80 	add.w	ip, sl, #256	; 0x100
 8020a38:	44de      	add	lr, fp
 8020a3a:	eb0c 2a1a 	add.w	sl, ip, sl, lsr #8
 8020a3e:	ea4f 2e1e 	mov.w	lr, lr, lsr #8
 8020a42:	ea4f 2a1a 	mov.w	sl, sl, lsr #8
 8020a46:	f00e 1eff 	and.w	lr, lr, #16711935	; 0xff00ff
 8020a4a:	f40a 4a7f 	and.w	sl, sl, #65280	; 0xff00
 8020a4e:	ea4e 040a 	orr.w	r4, lr, sl
 8020a52:	940f      	str	r4, [sp, #60]	; 0x3c
 8020a54:	9c0e      	ldr	r4, [sp, #56]	; 0x38
 8020a56:	f004 1cff 	and.w	ip, r4, #16711935	; 0xff00ff
 8020a5a:	9c0a      	ldr	r4, [sp, #40]	; 0x28
 8020a5c:	f003 1eff 	and.w	lr, r3, #16711935	; 0xff00ff
 8020a60:	fb08 fc0c 	mul.w	ip, r8, ip
 8020a64:	fb02 cc0e 	mla	ip, r2, lr, ip
 8020a68:	f004 1eff 	and.w	lr, r4, #16711935	; 0xff00ff
 8020a6c:	9c0f      	ldr	r4, [sp, #60]	; 0x3c
 8020a6e:	fb01 cc0e 	mla	ip, r1, lr, ip
 8020a72:	f004 1eff 	and.w	lr, r4, #16711935	; 0xff00ff
 8020a76:	9c0e      	ldr	r4, [sp, #56]	; 0x38
 8020a78:	fb09 cc0e 	mla	ip, r9, lr, ip
 8020a7c:	f404 4e7f 	and.w	lr, r4, #65280	; 0xff00
 8020a80:	fb08 f80e 	mul.w	r8, r8, lr
 8020a84:	f403 437f 	and.w	r3, r3, #65280	; 0xff00
 8020a88:	fb02 8303 	mla	r3, r2, r3, r8
 8020a8c:	9a0a      	ldr	r2, [sp, #40]	; 0x28
 8020a8e:	9c0d      	ldr	r4, [sp, #52]	; 0x34
 8020a90:	f402 4a7f 	and.w	sl, r2, #65280	; 0xff00
 8020a94:	9a0f      	ldr	r2, [sp, #60]	; 0x3c
 8020a96:	fb01 330a 	mla	r3, r1, sl, r3
 8020a9a:	f402 417f 	and.w	r1, r2, #65280	; 0xff00
 8020a9e:	9a0d      	ldr	r2, [sp, #52]	; 0x34
 8020aa0:	fb09 3901 	mla	r9, r9, r1, r3
 8020aa4:	4342      	muls	r2, r0
 8020aa6:	ea4f 2c1c 	mov.w	ip, ip, lsr #8
 8020aaa:	ea4f 2919 	mov.w	r9, r9, lsr #8
 8020aae:	883b      	ldrh	r3, [r7, #0]
 8020ab0:	1c50      	adds	r0, r2, #1
 8020ab2:	f00c 1cff 	and.w	ip, ip, #16711935	; 0xff00ff
 8020ab6:	f409 497f 	and.w	r9, r9, #65280	; 0xff00
 8020aba:	ea4c 0c09 	orr.w	ip, ip, r9
 8020abe:	eb00 2012 	add.w	r0, r0, r2, lsr #8
 8020ac2:	1219      	asrs	r1, r3, #8
 8020ac4:	ea4f 421c 	mov.w	r2, ip, lsr #16
 8020ac8:	ea6f 2010 	mvn.w	r0, r0, lsr #8
 8020acc:	b2c0      	uxtb	r0, r0
 8020ace:	fb12 f204 	smulbb	r2, r2, r4
 8020ad2:	f001 01f8 	and.w	r1, r1, #248	; 0xf8
 8020ad6:	fb01 2100 	mla	r1, r1, r0, r2
 8020ada:	f3cc 2e07 	ubfx	lr, ip, #8, #8
 8020ade:	10da      	asrs	r2, r3, #3
 8020ae0:	fa5f fc8c 	uxtb.w	ip, ip
 8020ae4:	00db      	lsls	r3, r3, #3
 8020ae6:	fb1c fc04 	smulbb	ip, ip, r4
 8020aea:	b2db      	uxtb	r3, r3
 8020aec:	b289      	uxth	r1, r1
 8020aee:	fb03 c300 	mla	r3, r3, r0, ip
 8020af2:	fa1f fc83 	uxth.w	ip, r3
 8020af6:	1c4b      	adds	r3, r1, #1
 8020af8:	eb03 2111 	add.w	r1, r3, r1, lsr #8
 8020afc:	f002 02fc 	and.w	r2, r2, #252	; 0xfc
 8020b00:	fb1e fe04 	smulbb	lr, lr, r4
 8020b04:	f10c 0301 	add.w	r3, ip, #1
 8020b08:	fb02 e200 	mla	r2, r2, r0, lr
 8020b0c:	eb03 231c 	add.w	r3, r3, ip, lsr #8
 8020b10:	b292      	uxth	r2, r2
 8020b12:	f401 4178 	and.w	r1, r1, #63488	; 0xf800
 8020b16:	f3c3 23c4 	ubfx	r3, r3, #11, #5
 8020b1a:	430b      	orrs	r3, r1
 8020b1c:	1c51      	adds	r1, r2, #1
 8020b1e:	eb01 2212 	add.w	r2, r1, r2, lsr #8
 8020b22:	0952      	lsrs	r2, r2, #5
 8020b24:	f402 62fc 	and.w	r2, r2, #2016	; 0x7e0
 8020b28:	4313      	orrs	r3, r2
 8020b2a:	803b      	strh	r3, [r7, #0]
 8020b2c:	9b2b      	ldr	r3, [sp, #172]	; 0xac
 8020b2e:	9a29      	ldr	r2, [sp, #164]	; 0xa4
 8020b30:	441a      	add	r2, r3
 8020b32:	9b2c      	ldr	r3, [sp, #176]	; 0xb0
 8020b34:	9229      	str	r2, [sp, #164]	; 0xa4
 8020b36:	441d      	add	r5, r3
 8020b38:	9b1a      	ldr	r3, [sp, #104]	; 0x68
 8020b3a:	3b01      	subs	r3, #1
 8020b3c:	3702      	adds	r7, #2
 8020b3e:	931a      	str	r3, [sp, #104]	; 0x68
 8020b40:	e694      	b.n	802086c <_ZN8touchgfx8LCD16bpp60TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x9a>
 8020b42:	9b2b      	ldr	r3, [sp, #172]	; 0xac
 8020b44:	9c29      	ldr	r4, [sp, #164]	; 0xa4
 8020b46:	441c      	add	r4, r3
 8020b48:	9b2c      	ldr	r3, [sp, #176]	; 0xb0
 8020b4a:	9429      	str	r4, [sp, #164]	; 0xa4
 8020b4c:	441d      	add	r5, r3
 8020b4e:	9b09      	ldr	r3, [sp, #36]	; 0x24
 8020b50:	3b01      	subs	r3, #1
 8020b52:	9309      	str	r3, [sp, #36]	; 0x24
 8020b54:	9b0c      	ldr	r3, [sp, #48]	; 0x30
 8020b56:	3302      	adds	r3, #2
 8020b58:	930c      	str	r3, [sp, #48]	; 0x30
 8020b5a:	e666      	b.n	802082a <_ZN8touchgfx8LCD16bpp60TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x58>
 8020b5c:	d024      	beq.n	8020ba8 <_ZN8touchgfx8LCD16bpp60TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x3d6>
 8020b5e:	9b09      	ldr	r3, [sp, #36]	; 0x24
 8020b60:	982b      	ldr	r0, [sp, #172]	; 0xac
 8020b62:	9c29      	ldr	r4, [sp, #164]	; 0xa4
 8020b64:	3b01      	subs	r3, #1
 8020b66:	fb00 4003 	mla	r0, r0, r3, r4
 8020b6a:	1400      	asrs	r0, r0, #16
 8020b6c:	f53f ae7b 	bmi.w	8020866 <_ZN8touchgfx8LCD16bpp60TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x94>
 8020b70:	3901      	subs	r1, #1
 8020b72:	4288      	cmp	r0, r1
 8020b74:	f6bf ae77 	bge.w	8020866 <_ZN8touchgfx8LCD16bpp60TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x94>
 8020b78:	992c      	ldr	r1, [sp, #176]	; 0xb0
 8020b7a:	fb01 5303 	mla	r3, r1, r3, r5
 8020b7e:	141b      	asrs	r3, r3, #16
 8020b80:	f53f ae71 	bmi.w	8020866 <_ZN8touchgfx8LCD16bpp60TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x94>
 8020b84:	3a01      	subs	r2, #1
 8020b86:	4293      	cmp	r3, r2
 8020b88:	f6bf ae6d 	bge.w	8020866 <_ZN8touchgfx8LCD16bpp60TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x94>
 8020b8c:	f8dd b024 	ldr.w	fp, [sp, #36]	; 0x24
 8020b90:	f8dd 9030 	ldr.w	r9, [sp, #48]	; 0x30
 8020b94:	f1bb 0f00 	cmp.w	fp, #0
 8020b98:	dc70      	bgt.n	8020c7c <_ZN8touchgfx8LCD16bpp60TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x4aa>
 8020b9a:	9b09      	ldr	r3, [sp, #36]	; 0x24
 8020b9c:	ea23 74e3 	bic.w	r4, r3, r3, asr #31
 8020ba0:	9b0c      	ldr	r3, [sp, #48]	; 0x30
 8020ba2:	eb03 0344 	add.w	r3, r3, r4, lsl #1
 8020ba6:	930c      	str	r3, [sp, #48]	; 0x30
 8020ba8:	9b19      	ldr	r3, [sp, #100]	; 0x64
 8020baa:	2b00      	cmp	r3, #0
 8020bac:	f340 81be 	ble.w	8020f2c <_ZN8touchgfx8LCD16bpp60TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x75a>
 8020bb0:	ee30 0a04 	vadd.f32	s0, s0, s8
 8020bb4:	eeb7 7a00 	vmov.f32	s14, #112	; 0x3f800000  1.0
 8020bb8:	eec7 7a00 	vdiv.f32	s15, s14, s0
 8020bbc:	9b28      	ldr	r3, [sp, #160]	; 0xa0
 8020bbe:	ee70 0aa4 	vadd.f32	s1, s1, s9
 8020bc2:	ee31 1a05 	vadd.f32	s2, s2, s10
 8020bc6:	ee20 7aa7 	vmul.f32	s14, s1, s15
 8020bca:	eef0 6a62 	vmov.f32	s13, s5
 8020bce:	ee61 7a27 	vmul.f32	s15, s2, s15
 8020bd2:	eefe 6ac8 	vcvt.s32.f32	s13, s13, #16
 8020bd6:	ee77 2a62 	vsub.f32	s5, s14, s5
 8020bda:	edcd 6a29 	vstr	s13, [sp, #164]	; 0xa4
 8020bde:	eefe 2ac8 	vcvt.s32.f32	s5, s5, #16
 8020be2:	eef0 6a43 	vmov.f32	s13, s6
 8020be6:	ee37 3ac3 	vsub.f32	s6, s15, s6
 8020bea:	ee12 2a90 	vmov	r2, s5
 8020bee:	eebe 3ac8 	vcvt.s32.f32	s6, s6, #16
 8020bf2:	fb92 f3f3 	sdiv	r3, r2, r3
 8020bf6:	ee13 2a10 	vmov	r2, s6
 8020bfa:	932b      	str	r3, [sp, #172]	; 0xac
 8020bfc:	9b28      	ldr	r3, [sp, #160]	; 0xa0
 8020bfe:	fb92 f3f3 	sdiv	r3, r2, r3
 8020c02:	932c      	str	r3, [sp, #176]	; 0xb0
 8020c04:	9b19      	ldr	r3, [sp, #100]	; 0x64
 8020c06:	9a1b      	ldr	r2, [sp, #108]	; 0x6c
 8020c08:	3b01      	subs	r3, #1
 8020c0a:	eefe 6ac8 	vcvt.s32.f32	s13, s13, #16
 8020c0e:	9319      	str	r3, [sp, #100]	; 0x64
 8020c10:	9b28      	ldr	r3, [sp, #160]	; 0xa0
 8020c12:	bf08      	it	eq
 8020c14:	4613      	moveq	r3, r2
 8020c16:	ee16 5a90 	vmov	r5, s13
 8020c1a:	9309      	str	r3, [sp, #36]	; 0x24
 8020c1c:	eeb0 3a67 	vmov.f32	s6, s15
 8020c20:	eef0 2a47 	vmov.f32	s5, s14
 8020c24:	e5f3      	b.n	802080e <_ZN8touchgfx8LCD16bpp60TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x3c>
 8020c26:	2900      	cmp	r1, #0
 8020c28:	f43f ae66 	beq.w	80208f8 <_ZN8touchgfx8LCD16bpp60TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x126>
 8020c2c:	f818 0000 	ldrb.w	r0, [r8, r0]
 8020c30:	f856 0020 	ldr.w	r0, [r6, r0, lsl #2]
 8020c34:	900a      	str	r0, [sp, #40]	; 0x28
 8020c36:	0e00      	lsrs	r0, r0, #24
 8020c38:	9013      	str	r0, [sp, #76]	; 0x4c
 8020c3a:	e65d      	b.n	80208f8 <_ZN8touchgfx8LCD16bpp60TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x126>
 8020c3c:	f113 0801 	adds.w	r8, r3, #1
 8020c40:	f53f af74 	bmi.w	8020b2c <_ZN8touchgfx8LCD16bpp60TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x35a>
 8020c44:	4540      	cmp	r0, r8
 8020c46:	f6ff af71 	blt.w	8020b2c <_ZN8touchgfx8LCD16bpp60TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x35a>
 8020c4a:	f11c 0801 	adds.w	r8, ip, #1
 8020c4e:	f53f af6d 	bmi.w	8020b2c <_ZN8touchgfx8LCD16bpp60TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x35a>
 8020c52:	45c6      	cmp	lr, r8
 8020c54:	f6ff af6a 	blt.w	8020b2c <_ZN8touchgfx8LCD16bpp60TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x35a>
 8020c58:	9c1c      	ldr	r4, [sp, #112]	; 0x70
 8020c5a:	9302      	str	r3, [sp, #8]
 8020c5c:	b200      	sxth	r0, r0
 8020c5e:	fa0f f38e 	sxth.w	r3, lr
 8020c62:	e9cd 1405 	strd	r1, r4, [sp, #20]
 8020c66:	e9cd c203 	strd	ip, r2, [sp, #12]
 8020c6a:	9301      	str	r3, [sp, #4]
 8020c6c:	9000      	str	r0, [sp, #0]
 8020c6e:	4633      	mov	r3, r6
 8020c70:	9a12      	ldr	r2, [sp, #72]	; 0x48
 8020c72:	981d      	ldr	r0, [sp, #116]	; 0x74
 8020c74:	4639      	mov	r1, r7
 8020c76:	f7ff fc62 	bl	802053e <_ZNK8touchgfx8LCD16bpp60TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKhPKmssiihhh>
 8020c7a:	e757      	b.n	8020b2c <_ZN8touchgfx8LCD16bpp60TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x35a>
 8020c7c:	9b29      	ldr	r3, [sp, #164]	; 0xa4
 8020c7e:	9c29      	ldr	r4, [sp, #164]	; 0xa4
 8020c80:	f3c3 3203 	ubfx	r2, r3, #12, #4
 8020c84:	9b30      	ldr	r3, [sp, #192]	; 0xc0
 8020c86:	f9b3 1008 	ldrsh.w	r1, [r3, #8]
 8020c8a:	1427      	asrs	r7, r4, #16
 8020c8c:	142b      	asrs	r3, r5, #16
 8020c8e:	fb01 7303 	mla	r3, r1, r3, r7
 8020c92:	9c12      	ldr	r4, [sp, #72]	; 0x48
 8020c94:	18e7      	adds	r7, r4, r3
 8020c96:	5ce3      	ldrb	r3, [r4, r3]
 8020c98:	f856 3023 	ldr.w	r3, [r6, r3, lsl #2]
 8020c9c:	f3c5 3003 	ubfx	r0, r5, #12, #4
 8020ca0:	ea4f 6c13 	mov.w	ip, r3, lsr #24
 8020ca4:	2a00      	cmp	r2, #0
 8020ca6:	f000 8137 	beq.w	8020f18 <_ZN8touchgfx8LCD16bpp60TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x746>
 8020caa:	f897 e001 	ldrb.w	lr, [r7, #1]
 8020cae:	f856 402e 	ldr.w	r4, [r6, lr, lsl #2]
 8020cb2:	9410      	str	r4, [sp, #64]	; 0x40
 8020cb4:	0e24      	lsrs	r4, r4, #24
 8020cb6:	9417      	str	r4, [sp, #92]	; 0x5c
 8020cb8:	b170      	cbz	r0, 8020cd8 <_ZN8touchgfx8LCD16bpp60TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x506>
 8020cba:	eb07 0e01 	add.w	lr, r7, r1
 8020cbe:	5c79      	ldrb	r1, [r7, r1]
 8020cc0:	f856 1021 	ldr.w	r1, [r6, r1, lsl #2]
 8020cc4:	910b      	str	r1, [sp, #44]	; 0x2c
 8020cc6:	0e09      	lsrs	r1, r1, #24
 8020cc8:	9114      	str	r1, [sp, #80]	; 0x50
 8020cca:	f89e 1001 	ldrb.w	r1, [lr, #1]
 8020cce:	f856 1021 	ldr.w	r1, [r6, r1, lsl #2]
 8020cd2:	9111      	str	r1, [sp, #68]	; 0x44
 8020cd4:	0e09      	lsrs	r1, r1, #24
 8020cd6:	9118      	str	r1, [sp, #96]	; 0x60
 8020cd8:	b292      	uxth	r2, r2
 8020cda:	b280      	uxth	r0, r0
 8020cdc:	fb02 f800 	mul.w	r8, r2, r0
 8020ce0:	ebc8 1000 	rsb	r0, r8, r0, lsl #4
 8020ce4:	0112      	lsls	r2, r2, #4
 8020ce6:	eba2 0e08 	sub.w	lr, r2, r8
 8020cea:	b280      	uxth	r0, r0
 8020cec:	f5c2 7280 	rsb	r2, r2, #256	; 0x100
 8020cf0:	9917      	ldr	r1, [sp, #92]	; 0x5c
 8020cf2:	9c14      	ldr	r4, [sp, #80]	; 0x50
 8020cf4:	fa1f fe8e 	uxth.w	lr, lr
 8020cf8:	1a12      	subs	r2, r2, r0
 8020cfa:	b292      	uxth	r2, r2
 8020cfc:	fb0e f101 	mul.w	r1, lr, r1
 8020d00:	fb02 110c 	mla	r1, r2, ip, r1
 8020d04:	fb00 1104 	mla	r1, r0, r4, r1
 8020d08:	9c18      	ldr	r4, [sp, #96]	; 0x60
 8020d0a:	fb08 1104 	mla	r1, r8, r4, r1
 8020d0e:	f3c1 2107 	ubfx	r1, r1, #8, #8
 8020d12:	2900      	cmp	r1, #0
 8020d14:	f000 80f5 	beq.w	8020f02 <_ZN8touchgfx8LCD16bpp60TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x730>
 8020d18:	f1bc 0fff 	cmp.w	ip, #255	; 0xff
 8020d1c:	d019      	beq.n	8020d52 <_ZN8touchgfx8LCD16bpp60TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x580>
 8020d1e:	f003 1aff 	and.w	sl, r3, #16711935	; 0xff00ff
 8020d22:	fb0c fa0a 	mul.w	sl, ip, sl
 8020d26:	f403 437f 	and.w	r3, r3, #65280	; 0xff00
 8020d2a:	fb0c fc03 	mul.w	ip, ip, r3
 8020d2e:	ea4f 231a 	mov.w	r3, sl, lsr #8
 8020d32:	f003 13ff 	and.w	r3, r3, #16711935	; 0xff00ff
 8020d36:	f10a 1a01 	add.w	sl, sl, #65537	; 0x10001
 8020d3a:	f50c 7780 	add.w	r7, ip, #256	; 0x100
 8020d3e:	4453      	add	r3, sl
 8020d40:	eb07 271c 	add.w	r7, r7, ip, lsr #8
 8020d44:	0a1b      	lsrs	r3, r3, #8
 8020d46:	0a3f      	lsrs	r7, r7, #8
 8020d48:	f003 13ff 	and.w	r3, r3, #16711935	; 0xff00ff
 8020d4c:	f407 477f 	and.w	r7, r7, #65280	; 0xff00
 8020d50:	433b      	orrs	r3, r7
 8020d52:	9c17      	ldr	r4, [sp, #92]	; 0x5c
 8020d54:	2cff      	cmp	r4, #255	; 0xff
 8020d56:	d020      	beq.n	8020d9a <_ZN8touchgfx8LCD16bpp60TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x5c8>
 8020d58:	9c10      	ldr	r4, [sp, #64]	; 0x40
 8020d5a:	f004 17ff 	and.w	r7, r4, #16711935	; 0xff00ff
 8020d5e:	9c17      	ldr	r4, [sp, #92]	; 0x5c
 8020d60:	4367      	muls	r7, r4
 8020d62:	9c10      	ldr	r4, [sp, #64]	; 0x40
 8020d64:	f404 4a7f 	and.w	sl, r4, #65280	; 0xff00
 8020d68:	9c17      	ldr	r4, [sp, #92]	; 0x5c
 8020d6a:	ea4f 2c17 	mov.w	ip, r7, lsr #8
 8020d6e:	fb04 fa0a 	mul.w	sl, r4, sl
 8020d72:	f107 1701 	add.w	r7, r7, #65537	; 0x10001
 8020d76:	f00c 1cff 	and.w	ip, ip, #16711935	; 0xff00ff
 8020d7a:	44bc      	add	ip, r7
 8020d7c:	f50a 7780 	add.w	r7, sl, #256	; 0x100
 8020d80:	eb07 2a1a 	add.w	sl, r7, sl, lsr #8
 8020d84:	ea4f 2c1c 	mov.w	ip, ip, lsr #8
 8020d88:	ea4f 2a1a 	mov.w	sl, sl, lsr #8
 8020d8c:	f00c 1cff 	and.w	ip, ip, #16711935	; 0xff00ff
 8020d90:	f40a 4a7f 	and.w	sl, sl, #65280	; 0xff00
 8020d94:	ea4c 040a 	orr.w	r4, ip, sl
 8020d98:	9410      	str	r4, [sp, #64]	; 0x40
 8020d9a:	9c14      	ldr	r4, [sp, #80]	; 0x50
 8020d9c:	2cff      	cmp	r4, #255	; 0xff
 8020d9e:	d020      	beq.n	8020de2 <_ZN8touchgfx8LCD16bpp60TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x610>
 8020da0:	9c0b      	ldr	r4, [sp, #44]	; 0x2c
 8020da2:	f004 17ff 	and.w	r7, r4, #16711935	; 0xff00ff
 8020da6:	9c14      	ldr	r4, [sp, #80]	; 0x50
 8020da8:	4367      	muls	r7, r4
 8020daa:	9c0b      	ldr	r4, [sp, #44]	; 0x2c
 8020dac:	f404 4a7f 	and.w	sl, r4, #65280	; 0xff00
 8020db0:	9c14      	ldr	r4, [sp, #80]	; 0x50
 8020db2:	ea4f 2c17 	mov.w	ip, r7, lsr #8
 8020db6:	fb04 fa0a 	mul.w	sl, r4, sl
 8020dba:	f107 1701 	add.w	r7, r7, #65537	; 0x10001
 8020dbe:	f00c 1cff 	and.w	ip, ip, #16711935	; 0xff00ff
 8020dc2:	44bc      	add	ip, r7
 8020dc4:	f50a 7780 	add.w	r7, sl, #256	; 0x100
 8020dc8:	eb07 2a1a 	add.w	sl, r7, sl, lsr #8
 8020dcc:	ea4f 2c1c 	mov.w	ip, ip, lsr #8
 8020dd0:	ea4f 2a1a 	mov.w	sl, sl, lsr #8
 8020dd4:	f00c 1cff 	and.w	ip, ip, #16711935	; 0xff00ff
 8020dd8:	f40a 4a7f 	and.w	sl, sl, #65280	; 0xff00
 8020ddc:	ea4c 040a 	orr.w	r4, ip, sl
 8020de0:	940b      	str	r4, [sp, #44]	; 0x2c
 8020de2:	9c18      	ldr	r4, [sp, #96]	; 0x60
 8020de4:	2cff      	cmp	r4, #255	; 0xff
 8020de6:	d020      	beq.n	8020e2a <_ZN8touchgfx8LCD16bpp60TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x658>
 8020de8:	9c11      	ldr	r4, [sp, #68]	; 0x44
 8020dea:	f004 17ff 	and.w	r7, r4, #16711935	; 0xff00ff
 8020dee:	9c18      	ldr	r4, [sp, #96]	; 0x60
 8020df0:	4367      	muls	r7, r4
 8020df2:	9c11      	ldr	r4, [sp, #68]	; 0x44
 8020df4:	f404 4a7f 	and.w	sl, r4, #65280	; 0xff00
 8020df8:	9c18      	ldr	r4, [sp, #96]	; 0x60
 8020dfa:	ea4f 2c17 	mov.w	ip, r7, lsr #8
 8020dfe:	fb04 fa0a 	mul.w	sl, r4, sl
 8020e02:	f107 1701 	add.w	r7, r7, #65537	; 0x10001
 8020e06:	f00c 1cff 	and.w	ip, ip, #16711935	; 0xff00ff
 8020e0a:	44bc      	add	ip, r7
 8020e0c:	f50a 7780 	add.w	r7, sl, #256	; 0x100
 8020e10:	eb07 2a1a 	add.w	sl, r7, sl, lsr #8
 8020e14:	ea4f 2c1c 	mov.w	ip, ip, lsr #8
 8020e18:	ea4f 2a1a 	mov.w	sl, sl, lsr #8
 8020e1c:	f00c 1cff 	and.w	ip, ip, #16711935	; 0xff00ff
 8020e20:	f40a 4a7f 	and.w	sl, sl, #65280	; 0xff00
 8020e24:	ea4c 040a 	orr.w	r4, ip, sl
 8020e28:	9411      	str	r4, [sp, #68]	; 0x44
 8020e2a:	9c10      	ldr	r4, [sp, #64]	; 0x40
 8020e2c:	f004 17ff 	and.w	r7, r4, #16711935	; 0xff00ff
 8020e30:	9c0b      	ldr	r4, [sp, #44]	; 0x2c
 8020e32:	f003 1cff 	and.w	ip, r3, #16711935	; 0xff00ff
 8020e36:	fb0e f707 	mul.w	r7, lr, r7
 8020e3a:	fb02 770c 	mla	r7, r2, ip, r7
 8020e3e:	f004 1cff 	and.w	ip, r4, #16711935	; 0xff00ff
 8020e42:	9c11      	ldr	r4, [sp, #68]	; 0x44
 8020e44:	fb00 770c 	mla	r7, r0, ip, r7
 8020e48:	f004 1cff 	and.w	ip, r4, #16711935	; 0xff00ff
 8020e4c:	9c10      	ldr	r4, [sp, #64]	; 0x40
 8020e4e:	fb08 770c 	mla	r7, r8, ip, r7
 8020e52:	f404 4c7f 	and.w	ip, r4, #65280	; 0xff00
 8020e56:	fb0e fe0c 	mul.w	lr, lr, ip
 8020e5a:	f403 437f 	and.w	r3, r3, #65280	; 0xff00
 8020e5e:	fb02 e303 	mla	r3, r2, r3, lr
 8020e62:	9a0b      	ldr	r2, [sp, #44]	; 0x2c
 8020e64:	9c0d      	ldr	r4, [sp, #52]	; 0x34
 8020e66:	f402 4a7f 	and.w	sl, r2, #65280	; 0xff00
 8020e6a:	9a11      	ldr	r2, [sp, #68]	; 0x44
 8020e6c:	fb00 330a 	mla	r3, r0, sl, r3
 8020e70:	f402 4c7f 	and.w	ip, r2, #65280	; 0xff00
 8020e74:	fb08 3c0c 	mla	ip, r8, ip, r3
 8020e78:	9b0d      	ldr	r3, [sp, #52]	; 0x34
 8020e7a:	f8b9 0000 	ldrh.w	r0, [r9]
 8020e7e:	434b      	muls	r3, r1
 8020e80:	0a3f      	lsrs	r7, r7, #8
 8020e82:	ea4f 2c1c 	mov.w	ip, ip, lsr #8
 8020e86:	f40c 4c7f 	and.w	ip, ip, #65280	; 0xff00
 8020e8a:	1c59      	adds	r1, r3, #1
 8020e8c:	f007 17ff 	and.w	r7, r7, #16711935	; 0xff00ff
 8020e90:	ea47 070c 	orr.w	r7, r7, ip
 8020e94:	eb01 2113 	add.w	r1, r1, r3, lsr #8
 8020e98:	1202      	asrs	r2, r0, #8
 8020e9a:	0c3b      	lsrs	r3, r7, #16
 8020e9c:	ea6f 2111 	mvn.w	r1, r1, lsr #8
 8020ea0:	b2c9      	uxtb	r1, r1
 8020ea2:	fb13 f304 	smulbb	r3, r3, r4
 8020ea6:	f002 02f8 	and.w	r2, r2, #248	; 0xf8
 8020eaa:	fb02 3201 	mla	r2, r2, r1, r3
 8020eae:	f3c7 2c07 	ubfx	ip, r7, #8, #8
 8020eb2:	10c3      	asrs	r3, r0, #3
 8020eb4:	b2ff      	uxtb	r7, r7
 8020eb6:	00c0      	lsls	r0, r0, #3
 8020eb8:	b292      	uxth	r2, r2
 8020eba:	fb1c fc04 	smulbb	ip, ip, r4
 8020ebe:	f003 03fc 	and.w	r3, r3, #252	; 0xfc
 8020ec2:	b2c0      	uxtb	r0, r0
 8020ec4:	fb17 f704 	smulbb	r7, r7, r4
 8020ec8:	fb03 c301 	mla	r3, r3, r1, ip
 8020ecc:	fb00 7001 	mla	r0, r0, r1, r7
 8020ed0:	f102 0c01 	add.w	ip, r2, #1
 8020ed4:	b280      	uxth	r0, r0
 8020ed6:	eb0c 2212 	add.w	r2, ip, r2, lsr #8
 8020eda:	f402 4c78 	and.w	ip, r2, #63488	; 0xf800
 8020ede:	1c42      	adds	r2, r0, #1
 8020ee0:	eb02 2210 	add.w	r2, r2, r0, lsr #8
 8020ee4:	b29b      	uxth	r3, r3
 8020ee6:	f3c2 22c4 	ubfx	r2, r2, #11, #5
 8020eea:	ea42 020c 	orr.w	r2, r2, ip
 8020eee:	f103 0c01 	add.w	ip, r3, #1
 8020ef2:	eb0c 2313 	add.w	r3, ip, r3, lsr #8
 8020ef6:	095b      	lsrs	r3, r3, #5
 8020ef8:	f403 63fc 	and.w	r3, r3, #2016	; 0x7e0
 8020efc:	431a      	orrs	r2, r3
 8020efe:	f8a9 2000 	strh.w	r2, [r9]
 8020f02:	9b2b      	ldr	r3, [sp, #172]	; 0xac
 8020f04:	9a29      	ldr	r2, [sp, #164]	; 0xa4
 8020f06:	441a      	add	r2, r3
 8020f08:	9b2c      	ldr	r3, [sp, #176]	; 0xb0
 8020f0a:	9229      	str	r2, [sp, #164]	; 0xa4
 8020f0c:	f109 0902 	add.w	r9, r9, #2
 8020f10:	441d      	add	r5, r3
 8020f12:	f10b 3bff 	add.w	fp, fp, #4294967295
 8020f16:	e63d      	b.n	8020b94 <_ZN8touchgfx8LCD16bpp60TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x3c2>
 8020f18:	2800      	cmp	r0, #0
 8020f1a:	f43f aedd 	beq.w	8020cd8 <_ZN8touchgfx8LCD16bpp60TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x506>
 8020f1e:	5c79      	ldrb	r1, [r7, r1]
 8020f20:	f856 1021 	ldr.w	r1, [r6, r1, lsl #2]
 8020f24:	910b      	str	r1, [sp, #44]	; 0x2c
 8020f26:	0e09      	lsrs	r1, r1, #24
 8020f28:	9114      	str	r1, [sp, #80]	; 0x50
 8020f2a:	e6d5      	b.n	8020cd8 <_ZN8touchgfx8LCD16bpp60TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x506>
 8020f2c:	b01f      	add	sp, #124	; 0x7c
 8020f2e:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}

08020f32 <_ZNK8touchgfx8LCD16bpp62TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhPKmssiihh>:
 8020f32:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 8020f36:	b089      	sub	sp, #36	; 0x24
 8020f38:	9101      	str	r1, [sp, #4]
 8020f3a:	9801      	ldr	r0, [sp, #4]
 8020f3c:	f9bd c048 	ldrsh.w	ip, [sp, #72]	; 0x48
 8020f40:	8800      	ldrh	r0, [r0, #0]
 8020f42:	f9bd 804c 	ldrsh.w	r8, [sp, #76]	; 0x4c
 8020f46:	f89d 5058 	ldrb.w	r5, [sp, #88]	; 0x58
 8020f4a:	f89d 405c 	ldrb.w	r4, [sp, #92]	; 0x5c
 8020f4e:	1206      	asrs	r6, r0, #8
 8020f50:	e9dd 1714 	ldrd	r1, r7, [sp, #80]	; 0x50
 8020f54:	f006 06f8 	and.w	r6, r6, #248	; 0xf8
 8020f58:	9602      	str	r6, [sp, #8]
 8020f5a:	10c6      	asrs	r6, r0, #3
 8020f5c:	00c0      	lsls	r0, r0, #3
 8020f5e:	b2c0      	uxtb	r0, r0
 8020f60:	f006 06fc 	and.w	r6, r6, #252	; 0xfc
 8020f64:	9004      	str	r0, [sp, #16]
 8020f66:	2f00      	cmp	r7, #0
 8020f68:	fb07 100c 	mla	r0, r7, ip, r1
 8020f6c:	9603      	str	r6, [sp, #12]
 8020f6e:	eb02 0e00 	add.w	lr, r2, r0
 8020f72:	f2c0 810a 	blt.w	802118a <_ZNK8touchgfx8LCD16bpp62TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhPKmssiihh+0x258>
 8020f76:	45b8      	cmp	r8, r7
 8020f78:	f340 8107 	ble.w	802118a <_ZNK8touchgfx8LCD16bpp62TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhPKmssiihh+0x258>
 8020f7c:	2900      	cmp	r1, #0
 8020f7e:	f2c0 8102 	blt.w	8021186 <_ZNK8touchgfx8LCD16bpp62TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhPKmssiihh+0x254>
 8020f82:	458c      	cmp	ip, r1
 8020f84:	f340 80ff 	ble.w	8021186 <_ZNK8touchgfx8LCD16bpp62TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhPKmssiihh+0x254>
 8020f88:	5c12      	ldrb	r2, [r2, r0]
 8020f8a:	f853 0022 	ldr.w	r0, [r3, r2, lsl #2]
 8020f8e:	1c4a      	adds	r2, r1, #1
 8020f90:	f100 80fe 	bmi.w	8021190 <_ZNK8touchgfx8LCD16bpp62TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhPKmssiihh+0x25e>
 8020f94:	4594      	cmp	ip, r2
 8020f96:	f340 80fb 	ble.w	8021190 <_ZNK8touchgfx8LCD16bpp62TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhPKmssiihh+0x25e>
 8020f9a:	2d00      	cmp	r5, #0
 8020f9c:	f000 80fa 	beq.w	8021194 <_ZNK8touchgfx8LCD16bpp62TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhPKmssiihh+0x262>
 8020fa0:	f89e 2001 	ldrb.w	r2, [lr, #1]
 8020fa4:	f853 6022 	ldr.w	r6, [r3, r2, lsl #2]
 8020fa8:	3701      	adds	r7, #1
 8020faa:	f100 80f7 	bmi.w	802119c <_ZNK8touchgfx8LCD16bpp62TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhPKmssiihh+0x26a>
 8020fae:	45b8      	cmp	r8, r7
 8020fb0:	f340 80f4 	ble.w	802119c <_ZNK8touchgfx8LCD16bpp62TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhPKmssiihh+0x26a>
 8020fb4:	2c00      	cmp	r4, #0
 8020fb6:	f000 80f4 	beq.w	80211a2 <_ZNK8touchgfx8LCD16bpp62TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhPKmssiihh+0x270>
 8020fba:	2900      	cmp	r1, #0
 8020fbc:	eb0e 020c 	add.w	r2, lr, ip
 8020fc0:	f2c0 80ea 	blt.w	8021198 <_ZNK8touchgfx8LCD16bpp62TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhPKmssiihh+0x266>
 8020fc4:	458c      	cmp	ip, r1
 8020fc6:	f340 80e7 	ble.w	8021198 <_ZNK8touchgfx8LCD16bpp62TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhPKmssiihh+0x266>
 8020fca:	f81e 700c 	ldrb.w	r7, [lr, ip]
 8020fce:	f853 7027 	ldr.w	r7, [r3, r7, lsl #2]
 8020fd2:	3101      	adds	r1, #1
 8020fd4:	f100 80e8 	bmi.w	80211a8 <_ZNK8touchgfx8LCD16bpp62TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhPKmssiihh+0x276>
 8020fd8:	458c      	cmp	ip, r1
 8020fda:	f340 80e5 	ble.w	80211a8 <_ZNK8touchgfx8LCD16bpp62TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhPKmssiihh+0x276>
 8020fde:	2d00      	cmp	r5, #0
 8020fe0:	f000 80e4 	beq.w	80211ac <_ZNK8touchgfx8LCD16bpp62TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhPKmssiihh+0x27a>
 8020fe4:	7852      	ldrb	r2, [r2, #1]
 8020fe6:	f853 1022 	ldr.w	r1, [r3, r2, lsl #2]
 8020fea:	0e0b      	lsrs	r3, r1, #24
 8020fec:	ea4f 6a10 	mov.w	sl, r0, lsr #24
 8020ff0:	9300      	str	r3, [sp, #0]
 8020ff2:	b2a4      	uxth	r4, r4
 8020ff4:	b2ab      	uxth	r3, r5
 8020ff6:	f000 15ff 	and.w	r5, r0, #16711935	; 0xff00ff
 8020ffa:	fb03 f904 	mul.w	r9, r3, r4
 8020ffe:	fb0a f505 	mul.w	r5, sl, r5
 8021002:	011b      	lsls	r3, r3, #4
 8021004:	eba3 0e09 	sub.w	lr, r3, r9
 8021008:	f5c3 7280 	rsb	r2, r3, #256	; 0x100
 802100c:	f400 437f 	and.w	r3, r0, #65280	; 0xff00
 8021010:	0a28      	lsrs	r0, r5, #8
 8021012:	f000 10ff 	and.w	r0, r0, #16711935	; 0xff00ff
 8021016:	f105 1501 	add.w	r5, r5, #65537	; 0x10001
 802101a:	4405      	add	r5, r0
 802101c:	0a2d      	lsrs	r5, r5, #8
 802101e:	fb0a f303 	mul.w	r3, sl, r3
 8021022:	f005 10ff 	and.w	r0, r5, #16711935	; 0xff00ff
 8021026:	9005      	str	r0, [sp, #20]
 8021028:	f503 7080 	add.w	r0, r3, #256	; 0x100
 802102c:	eb00 2313 	add.w	r3, r0, r3, lsr #8
 8021030:	0a1b      	lsrs	r3, r3, #8
 8021032:	ea4f 6b16 	mov.w	fp, r6, lsr #24
 8021036:	9306      	str	r3, [sp, #24]
 8021038:	f006 13ff 	and.w	r3, r6, #16711935	; 0xff00ff
 802103c:	fb0b f303 	mul.w	r3, fp, r3
 8021040:	0a1d      	lsrs	r5, r3, #8
 8021042:	f406 467f 	and.w	r6, r6, #65280	; 0xff00
 8021046:	ea4f 6817 	mov.w	r8, r7, lsr #24
 802104a:	fb0b f606 	mul.w	r6, fp, r6
 802104e:	f103 1301 	add.w	r3, r3, #65537	; 0x10001
 8021052:	f007 1cff 	and.w	ip, r7, #16711935	; 0xff00ff
 8021056:	f005 15ff 	and.w	r5, r5, #16711935	; 0xff00ff
 802105a:	f407 477f 	and.w	r7, r7, #65280	; 0xff00
 802105e:	fb08 f707 	mul.w	r7, r8, r7
 8021062:	441d      	add	r5, r3
 8021064:	f506 7380 	add.w	r3, r6, #256	; 0x100
 8021068:	eb03 2616 	add.w	r6, r3, r6, lsr #8
 802106c:	f507 7380 	add.w	r3, r7, #256	; 0x100
 8021070:	eb03 2317 	add.w	r3, r3, r7, lsr #8
 8021074:	fb08 fc0c 	mul.w	ip, r8, ip
 8021078:	0a1b      	lsrs	r3, r3, #8
 802107a:	9307      	str	r3, [sp, #28]
 802107c:	ea4f 201c 	mov.w	r0, ip, lsr #8
 8021080:	0e0b      	lsrs	r3, r1, #24
 8021082:	f001 17ff 	and.w	r7, r1, #16711935	; 0xff00ff
 8021086:	435f      	muls	r7, r3
 8021088:	f10c 1c01 	add.w	ip, ip, #65537	; 0x10001
 802108c:	f000 10ff 	and.w	r0, r0, #16711935	; 0xff00ff
 8021090:	ebc9 1404 	rsb	r4, r9, r4, lsl #4
 8021094:	4460      	add	r0, ip
 8021096:	ea4f 2c17 	mov.w	ip, r7, lsr #8
 802109a:	b2a4      	uxth	r4, r4
 802109c:	f107 1701 	add.w	r7, r7, #65537	; 0x10001
 80210a0:	0a2d      	lsrs	r5, r5, #8
 80210a2:	f401 417f 	and.w	r1, r1, #65280	; 0xff00
 80210a6:	f00c 1cff 	and.w	ip, ip, #16711935	; 0xff00ff
 80210aa:	fa1f fe8e 	uxth.w	lr, lr
 80210ae:	4359      	muls	r1, r3
 80210b0:	1b12      	subs	r2, r2, r4
 80210b2:	9b05      	ldr	r3, [sp, #20]
 80210b4:	44bc      	add	ip, r7
 80210b6:	f005 15ff 	and.w	r5, r5, #16711935	; 0xff00ff
 80210ba:	b292      	uxth	r2, r2
 80210bc:	fb05 f50e 	mul.w	r5, r5, lr
 80210c0:	ea4f 2c1c 	mov.w	ip, ip, lsr #8
 80210c4:	fb03 5502 	mla	r5, r3, r2, r5
 80210c8:	f00c 1cff 	and.w	ip, ip, #16711935	; 0xff00ff
 80210cc:	9b06      	ldr	r3, [sp, #24]
 80210ce:	f501 7780 	add.w	r7, r1, #256	; 0x100
 80210d2:	0a36      	lsrs	r6, r6, #8
 80210d4:	0a00      	lsrs	r0, r0, #8
 80210d6:	fb0c 5509 	mla	r5, ip, r9, r5
 80210da:	f000 10ff 	and.w	r0, r0, #16711935	; 0xff00ff
 80210de:	eb07 2111 	add.w	r1, r7, r1, lsr #8
 80210e2:	f406 467f 	and.w	r6, r6, #65280	; 0xff00
 80210e6:	fb00 5504 	mla	r5, r0, r4, r5
 80210ea:	fb0e f606 	mul.w	r6, lr, r6
 80210ee:	f403 407f 	and.w	r0, r3, #65280	; 0xff00
 80210f2:	0a09      	lsrs	r1, r1, #8
 80210f4:	9b07      	ldr	r3, [sp, #28]
 80210f6:	fb02 6000 	mla	r0, r2, r0, r6
 80210fa:	f401 417f 	and.w	r1, r1, #65280	; 0xff00
 80210fe:	fb09 0001 	mla	r0, r9, r1, r0
 8021102:	f403 437f 	and.w	r3, r3, #65280	; 0xff00
 8021106:	fb0e fe0b 	mul.w	lr, lr, fp
 802110a:	fb04 0003 	mla	r0, r4, r3, r0
 802110e:	fb02 e20a 	mla	r2, r2, sl, lr
 8021112:	9b00      	ldr	r3, [sp, #0]
 8021114:	fb04 2408 	mla	r4, r4, r8, r2
 8021118:	fb09 4903 	mla	r9, r9, r3, r4
 802111c:	ea6f 2929 	mvn.w	r9, r9, asr #8
 8021120:	9b02      	ldr	r3, [sp, #8]
 8021122:	9a04      	ldr	r2, [sp, #16]
 8021124:	fa5f f989 	uxtb.w	r9, r9
 8021128:	fb03 f109 	mul.w	r1, r3, r9
 802112c:	9b03      	ldr	r3, [sp, #12]
 802112e:	0a2d      	lsrs	r5, r5, #8
 8021130:	0a00      	lsrs	r0, r0, #8
 8021132:	fb03 f309 	mul.w	r3, r3, r9
 8021136:	f400 407f 	and.w	r0, r0, #65280	; 0xff00
 802113a:	f005 15ff 	and.w	r5, r5, #16711935	; 0xff00ff
 802113e:	4305      	orrs	r5, r0
 8021140:	fb02 f909 	mul.w	r9, r2, r9
 8021144:	1c58      	adds	r0, r3, #1
 8021146:	1c4a      	adds	r2, r1, #1
 8021148:	eb00 2013 	add.w	r0, r0, r3, lsr #8
 802114c:	eb02 2111 	add.w	r1, r2, r1, lsr #8
 8021150:	0a2b      	lsrs	r3, r5, #8
 8021152:	0c2a      	lsrs	r2, r5, #16
 8021154:	eb03 2310 	add.w	r3, r3, r0, lsr #8
 8021158:	eb02 2211 	add.w	r2, r2, r1, lsr #8
 802115c:	00db      	lsls	r3, r3, #3
 802115e:	0212      	lsls	r2, r2, #8
 8021160:	f402 4278 	and.w	r2, r2, #63488	; 0xf800
 8021164:	f403 63fc 	and.w	r3, r3, #2016	; 0x7e0
 8021168:	4313      	orrs	r3, r2
 802116a:	f109 0201 	add.w	r2, r9, #1
 802116e:	eb02 2919 	add.w	r9, r2, r9, lsr #8
 8021172:	eb05 2519 	add.w	r5, r5, r9, lsr #8
 8021176:	f3c5 05c4 	ubfx	r5, r5, #3, #5
 802117a:	431d      	orrs	r5, r3
 802117c:	9b01      	ldr	r3, [sp, #4]
 802117e:	801d      	strh	r5, [r3, #0]
 8021180:	b009      	add	sp, #36	; 0x24
 8021182:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
 8021186:	2000      	movs	r0, #0
 8021188:	e701      	b.n	8020f8e <_ZNK8touchgfx8LCD16bpp62TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhPKmssiihh+0x5c>
 802118a:	2600      	movs	r6, #0
 802118c:	4630      	mov	r0, r6
 802118e:	e70b      	b.n	8020fa8 <_ZNK8touchgfx8LCD16bpp62TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhPKmssiihh+0x76>
 8021190:	2600      	movs	r6, #0
 8021192:	e709      	b.n	8020fa8 <_ZNK8touchgfx8LCD16bpp62TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhPKmssiihh+0x76>
 8021194:	462e      	mov	r6, r5
 8021196:	e707      	b.n	8020fa8 <_ZNK8touchgfx8LCD16bpp62TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhPKmssiihh+0x76>
 8021198:	2700      	movs	r7, #0
 802119a:	e71a      	b.n	8020fd2 <_ZNK8touchgfx8LCD16bpp62TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhPKmssiihh+0xa0>
 802119c:	2100      	movs	r1, #0
 802119e:	460f      	mov	r7, r1
 80211a0:	e723      	b.n	8020fea <_ZNK8touchgfx8LCD16bpp62TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhPKmssiihh+0xb8>
 80211a2:	4621      	mov	r1, r4
 80211a4:	4627      	mov	r7, r4
 80211a6:	e720      	b.n	8020fea <_ZNK8touchgfx8LCD16bpp62TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhPKmssiihh+0xb8>
 80211a8:	2100      	movs	r1, #0
 80211aa:	e71e      	b.n	8020fea <_ZNK8touchgfx8LCD16bpp62TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhPKmssiihh+0xb8>
 80211ac:	4629      	mov	r1, r5
 80211ae:	e71c      	b.n	8020fea <_ZNK8touchgfx8LCD16bpp62TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhPKmssiihh+0xb8>

080211b0 <_ZN8touchgfx8LCD16bpp62TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff>:
 80211b0:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 80211b4:	b09b      	sub	sp, #108	; 0x6c
 80211b6:	9218      	str	r2, [sp, #96]	; 0x60
 80211b8:	9a29      	ldr	r2, [sp, #164]	; 0xa4
 80211ba:	9116      	str	r1, [sp, #88]	; 0x58
 80211bc:	9307      	str	r3, [sp, #28]
 80211be:	e9dd 132a 	ldrd	r1, r3, [sp, #168]	; 0xa8
 80211c2:	9019      	str	r0, [sp, #100]	; 0x64
 80211c4:	6850      	ldr	r0, [r2, #4]
 80211c6:	6812      	ldr	r2, [r2, #0]
 80211c8:	9d26      	ldr	r5, [sp, #152]	; 0x98
 80211ca:	fb00 1303 	mla	r3, r0, r3, r1
 80211ce:	eb02 0343 	add.w	r3, r2, r3, lsl #1
 80211d2:	930a      	str	r3, [sp, #40]	; 0x28
 80211d4:	9b2c      	ldr	r3, [sp, #176]	; 0xb0
 80211d6:	681b      	ldr	r3, [r3, #0]
 80211d8:	930f      	str	r3, [sp, #60]	; 0x3c
 80211da:	9b2c      	ldr	r3, [sp, #176]	; 0xb0
 80211dc:	685e      	ldr	r6, [r3, #4]
 80211de:	3604      	adds	r6, #4
 80211e0:	9b16      	ldr	r3, [sp, #88]	; 0x58
 80211e2:	2b00      	cmp	r3, #0
 80211e4:	dc03      	bgt.n	80211ee <_ZN8touchgfx8LCD16bpp62TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x3e>
 80211e6:	9b18      	ldr	r3, [sp, #96]	; 0x60
 80211e8:	2b00      	cmp	r3, #0
 80211ea:	f340 8373 	ble.w	80218d4 <_ZN8touchgfx8LCD16bpp62TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x724>
 80211ee:	9b2c      	ldr	r3, [sp, #176]	; 0xb0
 80211f0:	f9b3 1008 	ldrsh.w	r1, [r3, #8]
 80211f4:	f9b3 200c 	ldrsh.w	r2, [r3, #12]
 80211f8:	1e48      	subs	r0, r1, #1
 80211fa:	1e57      	subs	r7, r2, #1
 80211fc:	9b07      	ldr	r3, [sp, #28]
 80211fe:	2b00      	cmp	r3, #0
 8021200:	f340 8190 	ble.w	8021524 <_ZN8touchgfx8LCD16bpp62TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x374>
 8021204:	9c25      	ldr	r4, [sp, #148]	; 0x94
 8021206:	ea5f 4c24 	movs.w	ip, r4, asr #16
 802120a:	ea4f 4325 	mov.w	r3, r5, asr #16
 802120e:	d406      	bmi.n	802121e <_ZN8touchgfx8LCD16bpp62TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x6e>
 8021210:	4584      	cmp	ip, r0
 8021212:	da04      	bge.n	802121e <_ZN8touchgfx8LCD16bpp62TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x6e>
 8021214:	2b00      	cmp	r3, #0
 8021216:	db02      	blt.n	802121e <_ZN8touchgfx8LCD16bpp62TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x6e>
 8021218:	42bb      	cmp	r3, r7
 802121a:	f2c0 8184 	blt.w	8021526 <_ZN8touchgfx8LCD16bpp62TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x376>
 802121e:	f11c 0c01 	adds.w	ip, ip, #1
 8021222:	f100 8172 	bmi.w	802150a <_ZN8touchgfx8LCD16bpp62TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x35a>
 8021226:	4561      	cmp	r1, ip
 8021228:	f2c0 816f 	blt.w	802150a <_ZN8touchgfx8LCD16bpp62TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x35a>
 802122c:	3301      	adds	r3, #1
 802122e:	f100 816c 	bmi.w	802150a <_ZN8touchgfx8LCD16bpp62TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x35a>
 8021232:	429a      	cmp	r2, r3
 8021234:	f2c0 8169 	blt.w	802150a <_ZN8touchgfx8LCD16bpp62TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x35a>
 8021238:	9b07      	ldr	r3, [sp, #28]
 802123a:	9f0a      	ldr	r7, [sp, #40]	; 0x28
 802123c:	9317      	str	r3, [sp, #92]	; 0x5c
 802123e:	9b17      	ldr	r3, [sp, #92]	; 0x5c
 8021240:	2b00      	cmp	r3, #0
 8021242:	f340 818e 	ble.w	8021562 <_ZN8touchgfx8LCD16bpp62TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x3b2>
 8021246:	9b25      	ldr	r3, [sp, #148]	; 0x94
 8021248:	f3c3 3203 	ubfx	r2, r3, #12, #4
 802124c:	9b2c      	ldr	r3, [sp, #176]	; 0xb0
 802124e:	e9d3 1e02 	ldrd	r1, lr, [r3, #8]
 8021252:	9b25      	ldr	r3, [sp, #148]	; 0x94
 8021254:	141b      	asrs	r3, r3, #16
 8021256:	ea4f 4c25 	mov.w	ip, r5, asr #16
 802125a:	f3c5 3003 	ubfx	r0, r5, #12, #4
 802125e:	f100 81d1 	bmi.w	8021604 <_ZN8touchgfx8LCD16bpp62TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x454>
 8021262:	f101 38ff 	add.w	r8, r1, #4294967295
 8021266:	4543      	cmp	r3, r8
 8021268:	f280 81cc 	bge.w	8021604 <_ZN8touchgfx8LCD16bpp62TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x454>
 802126c:	f1bc 0f00 	cmp.w	ip, #0
 8021270:	f2c0 81c8 	blt.w	8021604 <_ZN8touchgfx8LCD16bpp62TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x454>
 8021274:	f10e 38ff 	add.w	r8, lr, #4294967295
 8021278:	45c4      	cmp	ip, r8
 802127a:	f280 81c3 	bge.w	8021604 <_ZN8touchgfx8LCD16bpp62TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x454>
 802127e:	b209      	sxth	r1, r1
 8021280:	fb0c 3301 	mla	r3, ip, r1, r3
 8021284:	9c0f      	ldr	r4, [sp, #60]	; 0x3c
 8021286:	eb04 0803 	add.w	r8, r4, r3
 802128a:	5ce3      	ldrb	r3, [r4, r3]
 802128c:	f856 3023 	ldr.w	r3, [r6, r3, lsl #2]
 8021290:	ea4f 6e13 	mov.w	lr, r3, lsr #24
 8021294:	2a00      	cmp	r2, #0
 8021296:	f000 81aa 	beq.w	80215ee <_ZN8touchgfx8LCD16bpp62TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x43e>
 802129a:	f898 c001 	ldrb.w	ip, [r8, #1]
 802129e:	f856 402c 	ldr.w	r4, [r6, ip, lsl #2]
 80212a2:	940b      	str	r4, [sp, #44]	; 0x2c
 80212a4:	0e24      	lsrs	r4, r4, #24
 80212a6:	9412      	str	r4, [sp, #72]	; 0x48
 80212a8:	b178      	cbz	r0, 80212ca <_ZN8touchgfx8LCD16bpp62TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x11a>
 80212aa:	eb08 0c01 	add.w	ip, r8, r1
 80212ae:	f818 1001 	ldrb.w	r1, [r8, r1]
 80212b2:	f856 1021 	ldr.w	r1, [r6, r1, lsl #2]
 80212b6:	9108      	str	r1, [sp, #32]
 80212b8:	0e09      	lsrs	r1, r1, #24
 80212ba:	9110      	str	r1, [sp, #64]	; 0x40
 80212bc:	f89c 1001 	ldrb.w	r1, [ip, #1]
 80212c0:	f856 1021 	ldr.w	r1, [r6, r1, lsl #2]
 80212c4:	910c      	str	r1, [sp, #48]	; 0x30
 80212c6:	0e09      	lsrs	r1, r1, #24
 80212c8:	9113      	str	r1, [sp, #76]	; 0x4c
 80212ca:	b292      	uxth	r2, r2
 80212cc:	b280      	uxth	r0, r0
 80212ce:	fb02 f900 	mul.w	r9, r2, r0
 80212d2:	ebc9 1000 	rsb	r0, r9, r0, lsl #4
 80212d6:	0112      	lsls	r2, r2, #4
 80212d8:	eba2 0809 	sub.w	r8, r2, r9
 80212dc:	b280      	uxth	r0, r0
 80212de:	f5c2 7280 	rsb	r2, r2, #256	; 0x100
 80212e2:	9912      	ldr	r1, [sp, #72]	; 0x48
 80212e4:	9c10      	ldr	r4, [sp, #64]	; 0x40
 80212e6:	fa1f f888 	uxth.w	r8, r8
 80212ea:	1a12      	subs	r2, r2, r0
 80212ec:	b292      	uxth	r2, r2
 80212ee:	fb08 f101 	mul.w	r1, r8, r1
 80212f2:	fb02 110e 	mla	r1, r2, lr, r1
 80212f6:	fb00 1104 	mla	r1, r0, r4, r1
 80212fa:	9c13      	ldr	r4, [sp, #76]	; 0x4c
 80212fc:	fb09 1104 	mla	r1, r9, r4, r1
 8021300:	f3c1 2107 	ubfx	r1, r1, #8, #8
 8021304:	2900      	cmp	r1, #0
 8021306:	f000 80f5 	beq.w	80214f4 <_ZN8touchgfx8LCD16bpp62TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x344>
 802130a:	f1be 0fff 	cmp.w	lr, #255	; 0xff
 802130e:	d01b      	beq.n	8021348 <_ZN8touchgfx8LCD16bpp62TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x198>
 8021310:	f003 1aff 	and.w	sl, r3, #16711935	; 0xff00ff
 8021314:	fb0e fa0a 	mul.w	sl, lr, sl
 8021318:	f403 437f 	and.w	r3, r3, #65280	; 0xff00
 802131c:	fb0e fe03 	mul.w	lr, lr, r3
 8021320:	ea4f 231a 	mov.w	r3, sl, lsr #8
 8021324:	f003 13ff 	and.w	r3, r3, #16711935	; 0xff00ff
 8021328:	f10a 1a01 	add.w	sl, sl, #65537	; 0x10001
 802132c:	f50e 7c80 	add.w	ip, lr, #256	; 0x100
 8021330:	4453      	add	r3, sl
 8021332:	eb0c 2c1e 	add.w	ip, ip, lr, lsr #8
 8021336:	0a1b      	lsrs	r3, r3, #8
 8021338:	ea4f 2c1c 	mov.w	ip, ip, lsr #8
 802133c:	f003 13ff 	and.w	r3, r3, #16711935	; 0xff00ff
 8021340:	f40c 4c7f 	and.w	ip, ip, #65280	; 0xff00
 8021344:	ea43 030c 	orr.w	r3, r3, ip
 8021348:	9c12      	ldr	r4, [sp, #72]	; 0x48
 802134a:	2cff      	cmp	r4, #255	; 0xff
 802134c:	d021      	beq.n	8021392 <_ZN8touchgfx8LCD16bpp62TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x1e2>
 802134e:	9c0b      	ldr	r4, [sp, #44]	; 0x2c
 8021350:	f004 1bff 	and.w	fp, r4, #16711935	; 0xff00ff
 8021354:	9c12      	ldr	r4, [sp, #72]	; 0x48
 8021356:	fb04 fb0b 	mul.w	fp, r4, fp
 802135a:	9c0b      	ldr	r4, [sp, #44]	; 0x2c
 802135c:	f404 4a7f 	and.w	sl, r4, #65280	; 0xff00
 8021360:	9c12      	ldr	r4, [sp, #72]	; 0x48
 8021362:	ea4f 2e1b 	mov.w	lr, fp, lsr #8
 8021366:	fb04 fa0a 	mul.w	sl, r4, sl
 802136a:	f00e 1eff 	and.w	lr, lr, #16711935	; 0xff00ff
 802136e:	f10b 1b01 	add.w	fp, fp, #65537	; 0x10001
 8021372:	f50a 7c80 	add.w	ip, sl, #256	; 0x100
 8021376:	44de      	add	lr, fp
 8021378:	eb0c 2a1a 	add.w	sl, ip, sl, lsr #8
 802137c:	ea4f 2e1e 	mov.w	lr, lr, lsr #8
 8021380:	ea4f 2a1a 	mov.w	sl, sl, lsr #8
 8021384:	f00e 1eff 	and.w	lr, lr, #16711935	; 0xff00ff
 8021388:	f40a 4a7f 	and.w	sl, sl, #65280	; 0xff00
 802138c:	ea4e 040a 	orr.w	r4, lr, sl
 8021390:	940b      	str	r4, [sp, #44]	; 0x2c
 8021392:	9c10      	ldr	r4, [sp, #64]	; 0x40
 8021394:	2cff      	cmp	r4, #255	; 0xff
 8021396:	d021      	beq.n	80213dc <_ZN8touchgfx8LCD16bpp62TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x22c>
 8021398:	9c08      	ldr	r4, [sp, #32]
 802139a:	f004 1bff 	and.w	fp, r4, #16711935	; 0xff00ff
 802139e:	9c10      	ldr	r4, [sp, #64]	; 0x40
 80213a0:	fb04 fb0b 	mul.w	fp, r4, fp
 80213a4:	9c08      	ldr	r4, [sp, #32]
 80213a6:	f404 4a7f 	and.w	sl, r4, #65280	; 0xff00
 80213aa:	9c10      	ldr	r4, [sp, #64]	; 0x40
 80213ac:	ea4f 2e1b 	mov.w	lr, fp, lsr #8
 80213b0:	fb04 fa0a 	mul.w	sl, r4, sl
 80213b4:	f00e 1eff 	and.w	lr, lr, #16711935	; 0xff00ff
 80213b8:	f10b 1b01 	add.w	fp, fp, #65537	; 0x10001
 80213bc:	f50a 7c80 	add.w	ip, sl, #256	; 0x100
 80213c0:	44de      	add	lr, fp
 80213c2:	eb0c 2a1a 	add.w	sl, ip, sl, lsr #8
 80213c6:	ea4f 2e1e 	mov.w	lr, lr, lsr #8
 80213ca:	ea4f 2a1a 	mov.w	sl, sl, lsr #8
 80213ce:	f00e 1eff 	and.w	lr, lr, #16711935	; 0xff00ff
 80213d2:	f40a 4a7f 	and.w	sl, sl, #65280	; 0xff00
 80213d6:	ea4e 040a 	orr.w	r4, lr, sl
 80213da:	9408      	str	r4, [sp, #32]
 80213dc:	9c13      	ldr	r4, [sp, #76]	; 0x4c
 80213de:	2cff      	cmp	r4, #255	; 0xff
 80213e0:	d021      	beq.n	8021426 <_ZN8touchgfx8LCD16bpp62TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x276>
 80213e2:	9c0c      	ldr	r4, [sp, #48]	; 0x30
 80213e4:	f004 1bff 	and.w	fp, r4, #16711935	; 0xff00ff
 80213e8:	9c13      	ldr	r4, [sp, #76]	; 0x4c
 80213ea:	fb04 fb0b 	mul.w	fp, r4, fp
 80213ee:	9c0c      	ldr	r4, [sp, #48]	; 0x30
 80213f0:	f404 4a7f 	and.w	sl, r4, #65280	; 0xff00
 80213f4:	9c13      	ldr	r4, [sp, #76]	; 0x4c
 80213f6:	ea4f 2e1b 	mov.w	lr, fp, lsr #8
 80213fa:	fb04 fa0a 	mul.w	sl, r4, sl
 80213fe:	f00e 1eff 	and.w	lr, lr, #16711935	; 0xff00ff
 8021402:	f10b 1b01 	add.w	fp, fp, #65537	; 0x10001
 8021406:	f50a 7c80 	add.w	ip, sl, #256	; 0x100
 802140a:	44de      	add	lr, fp
 802140c:	eb0c 2a1a 	add.w	sl, ip, sl, lsr #8
 8021410:	ea4f 2e1e 	mov.w	lr, lr, lsr #8
 8021414:	ea4f 2a1a 	mov.w	sl, sl, lsr #8
 8021418:	f00e 1eff 	and.w	lr, lr, #16711935	; 0xff00ff
 802141c:	f40a 4a7f 	and.w	sl, sl, #65280	; 0xff00
 8021420:	ea4e 040a 	orr.w	r4, lr, sl
 8021424:	940c      	str	r4, [sp, #48]	; 0x30
 8021426:	9c0b      	ldr	r4, [sp, #44]	; 0x2c
 8021428:	f004 1cff 	and.w	ip, r4, #16711935	; 0xff00ff
 802142c:	9c08      	ldr	r4, [sp, #32]
 802142e:	f003 1eff 	and.w	lr, r3, #16711935	; 0xff00ff
 8021432:	fb08 fc0c 	mul.w	ip, r8, ip
 8021436:	fb02 cc0e 	mla	ip, r2, lr, ip
 802143a:	f004 1eff 	and.w	lr, r4, #16711935	; 0xff00ff
 802143e:	9c0c      	ldr	r4, [sp, #48]	; 0x30
 8021440:	fb00 cc0e 	mla	ip, r0, lr, ip
 8021444:	f004 1eff 	and.w	lr, r4, #16711935	; 0xff00ff
 8021448:	9c0b      	ldr	r4, [sp, #44]	; 0x2c
 802144a:	fb09 cc0e 	mla	ip, r9, lr, ip
 802144e:	f404 4e7f 	and.w	lr, r4, #65280	; 0xff00
 8021452:	fb08 f80e 	mul.w	r8, r8, lr
 8021456:	f403 437f 	and.w	r3, r3, #65280	; 0xff00
 802145a:	fb02 8303 	mla	r3, r2, r3, r8
 802145e:	9a08      	ldr	r2, [sp, #32]
 8021460:	f8b7 8000 	ldrh.w	r8, [r7]
 8021464:	f402 4a7f 	and.w	sl, r2, #65280	; 0xff00
 8021468:	9a0c      	ldr	r2, [sp, #48]	; 0x30
 802146a:	fb00 330a 	mla	r3, r0, sl, r3
 802146e:	f402 407f 	and.w	r0, r2, #65280	; 0xff00
 8021472:	fb09 3900 	mla	r9, r9, r0, r3
 8021476:	43c9      	mvns	r1, r1
 8021478:	ea4f 2228 	mov.w	r2, r8, asr #8
 802147c:	fa5f fe81 	uxtb.w	lr, r1
 8021480:	ea4f 2c1c 	mov.w	ip, ip, lsr #8
 8021484:	ea4f 2919 	mov.w	r9, r9, lsr #8
 8021488:	f002 02f8 	and.w	r2, r2, #248	; 0xf8
 802148c:	fb02 f20e 	mul.w	r2, r2, lr
 8021490:	f00c 1cff 	and.w	ip, ip, #16711935	; 0xff00ff
 8021494:	f409 497f 	and.w	r9, r9, #65280	; 0xff00
 8021498:	ea4c 0c09 	orr.w	ip, ip, r9
 802149c:	1c53      	adds	r3, r2, #1
 802149e:	eb03 2212 	add.w	r2, r3, r2, lsr #8
 80214a2:	ea4f 00e8 	mov.w	r0, r8, asr #3
 80214a6:	ea4f 431c 	mov.w	r3, ip, lsr #16
 80214aa:	eb03 2312 	add.w	r3, r3, r2, lsr #8
 80214ae:	f000 00fc 	and.w	r0, r0, #252	; 0xfc
 80214b2:	4a63      	ldr	r2, [pc, #396]	; (8021640 <_ZN8touchgfx8LCD16bpp62TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x490>)
 80214b4:	fb00 f00e 	mul.w	r0, r0, lr
 80214b8:	b2db      	uxtb	r3, r3
 80214ba:	ea02 2203 	and.w	r2, r2, r3, lsl #8
 80214be:	1c43      	adds	r3, r0, #1
 80214c0:	eb03 2010 	add.w	r0, r3, r0, lsr #8
 80214c4:	ea4f 231c 	mov.w	r3, ip, lsr #8
 80214c8:	ea4f 01c8 	mov.w	r1, r8, lsl #3
 80214cc:	eb03 2310 	add.w	r3, r3, r0, lsr #8
 80214d0:	b2c9      	uxtb	r1, r1
 80214d2:	00db      	lsls	r3, r3, #3
 80214d4:	fb01 f10e 	mul.w	r1, r1, lr
 80214d8:	f403 63fc 	and.w	r3, r3, #2016	; 0x7e0
 80214dc:	4313      	orrs	r3, r2
 80214de:	1c4a      	adds	r2, r1, #1
 80214e0:	eb02 2111 	add.w	r1, r2, r1, lsr #8
 80214e4:	eb0c 2c11 	add.w	ip, ip, r1, lsr #8
 80214e8:	f3cc 0cc4 	ubfx	ip, ip, #3, #5
 80214ec:	ea4c 0c03 	orr.w	ip, ip, r3
 80214f0:	f8a7 c000 	strh.w	ip, [r7]
 80214f4:	9b27      	ldr	r3, [sp, #156]	; 0x9c
 80214f6:	9a25      	ldr	r2, [sp, #148]	; 0x94
 80214f8:	441a      	add	r2, r3
 80214fa:	9b28      	ldr	r3, [sp, #160]	; 0xa0
 80214fc:	9225      	str	r2, [sp, #148]	; 0x94
 80214fe:	441d      	add	r5, r3
 8021500:	9b17      	ldr	r3, [sp, #92]	; 0x5c
 8021502:	3b01      	subs	r3, #1
 8021504:	3702      	adds	r7, #2
 8021506:	9317      	str	r3, [sp, #92]	; 0x5c
 8021508:	e699      	b.n	802123e <_ZN8touchgfx8LCD16bpp62TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x8e>
 802150a:	9b27      	ldr	r3, [sp, #156]	; 0x9c
 802150c:	9c25      	ldr	r4, [sp, #148]	; 0x94
 802150e:	441c      	add	r4, r3
 8021510:	9b28      	ldr	r3, [sp, #160]	; 0xa0
 8021512:	9425      	str	r4, [sp, #148]	; 0x94
 8021514:	441d      	add	r5, r3
 8021516:	9b07      	ldr	r3, [sp, #28]
 8021518:	3b01      	subs	r3, #1
 802151a:	9307      	str	r3, [sp, #28]
 802151c:	9b0a      	ldr	r3, [sp, #40]	; 0x28
 802151e:	3302      	adds	r3, #2
 8021520:	930a      	str	r3, [sp, #40]	; 0x28
 8021522:	e66b      	b.n	80211fc <_ZN8touchgfx8LCD16bpp62TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x4c>
 8021524:	d024      	beq.n	8021570 <_ZN8touchgfx8LCD16bpp62TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x3c0>
 8021526:	9b07      	ldr	r3, [sp, #28]
 8021528:	9827      	ldr	r0, [sp, #156]	; 0x9c
 802152a:	9c25      	ldr	r4, [sp, #148]	; 0x94
 802152c:	3b01      	subs	r3, #1
 802152e:	fb00 4003 	mla	r0, r0, r3, r4
 8021532:	1400      	asrs	r0, r0, #16
 8021534:	f53f ae80 	bmi.w	8021238 <_ZN8touchgfx8LCD16bpp62TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x88>
 8021538:	3901      	subs	r1, #1
 802153a:	4288      	cmp	r0, r1
 802153c:	f6bf ae7c 	bge.w	8021238 <_ZN8touchgfx8LCD16bpp62TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x88>
 8021540:	9928      	ldr	r1, [sp, #160]	; 0xa0
 8021542:	fb01 5303 	mla	r3, r1, r3, r5
 8021546:	141b      	asrs	r3, r3, #16
 8021548:	f53f ae76 	bmi.w	8021238 <_ZN8touchgfx8LCD16bpp62TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x88>
 802154c:	3a01      	subs	r2, #1
 802154e:	4293      	cmp	r3, r2
 8021550:	f6bf ae72 	bge.w	8021238 <_ZN8touchgfx8LCD16bpp62TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x88>
 8021554:	f8dd b01c 	ldr.w	fp, [sp, #28]
 8021558:	f8dd 9028 	ldr.w	r9, [sp, #40]	; 0x28
 802155c:	f1bb 0f00 	cmp.w	fp, #0
 8021560:	dc70      	bgt.n	8021644 <_ZN8touchgfx8LCD16bpp62TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x494>
 8021562:	9b07      	ldr	r3, [sp, #28]
 8021564:	ea23 74e3 	bic.w	r4, r3, r3, asr #31
 8021568:	9b0a      	ldr	r3, [sp, #40]	; 0x28
 802156a:	eb03 0344 	add.w	r3, r3, r4, lsl #1
 802156e:	930a      	str	r3, [sp, #40]	; 0x28
 8021570:	9b16      	ldr	r3, [sp, #88]	; 0x58
 8021572:	2b00      	cmp	r3, #0
 8021574:	f340 81ae 	ble.w	80218d4 <_ZN8touchgfx8LCD16bpp62TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x724>
 8021578:	ee30 0a04 	vadd.f32	s0, s0, s8
 802157c:	eeb7 7a00 	vmov.f32	s14, #112	; 0x3f800000  1.0
 8021580:	eec7 7a00 	vdiv.f32	s15, s14, s0
 8021584:	9b24      	ldr	r3, [sp, #144]	; 0x90
 8021586:	ee70 0aa4 	vadd.f32	s1, s1, s9
 802158a:	ee31 1a05 	vadd.f32	s2, s2, s10
 802158e:	ee20 7aa7 	vmul.f32	s14, s1, s15
 8021592:	eef0 6a62 	vmov.f32	s13, s5
 8021596:	ee61 7a27 	vmul.f32	s15, s2, s15
 802159a:	eefe 6ac8 	vcvt.s32.f32	s13, s13, #16
 802159e:	ee77 2a62 	vsub.f32	s5, s14, s5
 80215a2:	edcd 6a25 	vstr	s13, [sp, #148]	; 0x94
 80215a6:	eefe 2ac8 	vcvt.s32.f32	s5, s5, #16
 80215aa:	eef0 6a43 	vmov.f32	s13, s6
 80215ae:	ee37 3ac3 	vsub.f32	s6, s15, s6
 80215b2:	ee12 2a90 	vmov	r2, s5
 80215b6:	eebe 3ac8 	vcvt.s32.f32	s6, s6, #16
 80215ba:	fb92 f3f3 	sdiv	r3, r2, r3
 80215be:	ee13 2a10 	vmov	r2, s6
 80215c2:	9327      	str	r3, [sp, #156]	; 0x9c
 80215c4:	9b24      	ldr	r3, [sp, #144]	; 0x90
 80215c6:	fb92 f3f3 	sdiv	r3, r2, r3
 80215ca:	9328      	str	r3, [sp, #160]	; 0xa0
 80215cc:	9b16      	ldr	r3, [sp, #88]	; 0x58
 80215ce:	9a18      	ldr	r2, [sp, #96]	; 0x60
 80215d0:	3b01      	subs	r3, #1
 80215d2:	eefe 6ac8 	vcvt.s32.f32	s13, s13, #16
 80215d6:	9316      	str	r3, [sp, #88]	; 0x58
 80215d8:	9b24      	ldr	r3, [sp, #144]	; 0x90
 80215da:	bf08      	it	eq
 80215dc:	4613      	moveq	r3, r2
 80215de:	ee16 5a90 	vmov	r5, s13
 80215e2:	9307      	str	r3, [sp, #28]
 80215e4:	eeb0 3a67 	vmov.f32	s6, s15
 80215e8:	eef0 2a47 	vmov.f32	s5, s14
 80215ec:	e5f8      	b.n	80211e0 <_ZN8touchgfx8LCD16bpp62TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x30>
 80215ee:	2800      	cmp	r0, #0
 80215f0:	f43f ae6b 	beq.w	80212ca <_ZN8touchgfx8LCD16bpp62TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x11a>
 80215f4:	f818 1001 	ldrb.w	r1, [r8, r1]
 80215f8:	f856 1021 	ldr.w	r1, [r6, r1, lsl #2]
 80215fc:	9108      	str	r1, [sp, #32]
 80215fe:	0e09      	lsrs	r1, r1, #24
 8021600:	9110      	str	r1, [sp, #64]	; 0x40
 8021602:	e662      	b.n	80212ca <_ZN8touchgfx8LCD16bpp62TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x11a>
 8021604:	f113 0801 	adds.w	r8, r3, #1
 8021608:	f53f af74 	bmi.w	80214f4 <_ZN8touchgfx8LCD16bpp62TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x344>
 802160c:	4541      	cmp	r1, r8
 802160e:	f6ff af71 	blt.w	80214f4 <_ZN8touchgfx8LCD16bpp62TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x344>
 8021612:	f11c 0801 	adds.w	r8, ip, #1
 8021616:	f53f af6d 	bmi.w	80214f4 <_ZN8touchgfx8LCD16bpp62TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x344>
 802161a:	45c6      	cmp	lr, r8
 802161c:	f6ff af6a 	blt.w	80214f4 <_ZN8touchgfx8LCD16bpp62TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x344>
 8021620:	e9cd 3c02 	strd	r3, ip, [sp, #8]
 8021624:	b209      	sxth	r1, r1
 8021626:	fa0f f38e 	sxth.w	r3, lr
 802162a:	e9cd 2004 	strd	r2, r0, [sp, #16]
 802162e:	9301      	str	r3, [sp, #4]
 8021630:	9100      	str	r1, [sp, #0]
 8021632:	4633      	mov	r3, r6
 8021634:	9a0f      	ldr	r2, [sp, #60]	; 0x3c
 8021636:	9819      	ldr	r0, [sp, #100]	; 0x64
 8021638:	4639      	mov	r1, r7
 802163a:	f7ff fc7a 	bl	8020f32 <_ZNK8touchgfx8LCD16bpp62TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhPKmssiihh>
 802163e:	e759      	b.n	80214f4 <_ZN8touchgfx8LCD16bpp62TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x344>
 8021640:	fffff800 	.word	0xfffff800
 8021644:	9b25      	ldr	r3, [sp, #148]	; 0x94
 8021646:	9c25      	ldr	r4, [sp, #148]	; 0x94
 8021648:	f3c3 3203 	ubfx	r2, r3, #12, #4
 802164c:	9b2c      	ldr	r3, [sp, #176]	; 0xb0
 802164e:	f9b3 1008 	ldrsh.w	r1, [r3, #8]
 8021652:	1427      	asrs	r7, r4, #16
 8021654:	142b      	asrs	r3, r5, #16
 8021656:	fb01 7303 	mla	r3, r1, r3, r7
 802165a:	9c0f      	ldr	r4, [sp, #60]	; 0x3c
 802165c:	18e7      	adds	r7, r4, r3
 802165e:	5ce3      	ldrb	r3, [r4, r3]
 8021660:	f856 3023 	ldr.w	r3, [r6, r3, lsl #2]
 8021664:	f3c5 3003 	ubfx	r0, r5, #12, #4
 8021668:	ea4f 6c13 	mov.w	ip, r3, lsr #24
 802166c:	2a00      	cmp	r2, #0
 802166e:	f000 8127 	beq.w	80218c0 <_ZN8touchgfx8LCD16bpp62TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x710>
 8021672:	f897 e001 	ldrb.w	lr, [r7, #1]
 8021676:	f856 402e 	ldr.w	r4, [r6, lr, lsl #2]
 802167a:	940d      	str	r4, [sp, #52]	; 0x34
 802167c:	0e24      	lsrs	r4, r4, #24
 802167e:	9414      	str	r4, [sp, #80]	; 0x50
 8021680:	b170      	cbz	r0, 80216a0 <_ZN8touchgfx8LCD16bpp62TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x4f0>
 8021682:	eb07 0e01 	add.w	lr, r7, r1
 8021686:	5c79      	ldrb	r1, [r7, r1]
 8021688:	f856 1021 	ldr.w	r1, [r6, r1, lsl #2]
 802168c:	9109      	str	r1, [sp, #36]	; 0x24
 802168e:	0e09      	lsrs	r1, r1, #24
 8021690:	9111      	str	r1, [sp, #68]	; 0x44
 8021692:	f89e 1001 	ldrb.w	r1, [lr, #1]
 8021696:	f856 1021 	ldr.w	r1, [r6, r1, lsl #2]
 802169a:	910e      	str	r1, [sp, #56]	; 0x38
 802169c:	0e09      	lsrs	r1, r1, #24
 802169e:	9115      	str	r1, [sp, #84]	; 0x54
 80216a0:	b292      	uxth	r2, r2
 80216a2:	b280      	uxth	r0, r0
 80216a4:	fb02 f800 	mul.w	r8, r2, r0
 80216a8:	ebc8 1000 	rsb	r0, r8, r0, lsl #4
 80216ac:	0112      	lsls	r2, r2, #4
 80216ae:	eba2 0e08 	sub.w	lr, r2, r8
 80216b2:	b280      	uxth	r0, r0
 80216b4:	f5c2 7180 	rsb	r1, r2, #256	; 0x100
 80216b8:	9a14      	ldr	r2, [sp, #80]	; 0x50
 80216ba:	9c11      	ldr	r4, [sp, #68]	; 0x44
 80216bc:	fa1f fe8e 	uxth.w	lr, lr
 80216c0:	1a09      	subs	r1, r1, r0
 80216c2:	b289      	uxth	r1, r1
 80216c4:	fb0e f202 	mul.w	r2, lr, r2
 80216c8:	fb01 220c 	mla	r2, r1, ip, r2
 80216cc:	fb00 2204 	mla	r2, r0, r4, r2
 80216d0:	9c15      	ldr	r4, [sp, #84]	; 0x54
 80216d2:	fb08 2204 	mla	r2, r8, r4, r2
 80216d6:	f3c2 2207 	ubfx	r2, r2, #8, #8
 80216da:	2a00      	cmp	r2, #0
 80216dc:	f000 80e5 	beq.w	80218aa <_ZN8touchgfx8LCD16bpp62TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x6fa>
 80216e0:	f1bc 0fff 	cmp.w	ip, #255	; 0xff
 80216e4:	d019      	beq.n	802171a <_ZN8touchgfx8LCD16bpp62TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x56a>
 80216e6:	f003 1aff 	and.w	sl, r3, #16711935	; 0xff00ff
 80216ea:	fb0c fa0a 	mul.w	sl, ip, sl
 80216ee:	f403 437f 	and.w	r3, r3, #65280	; 0xff00
 80216f2:	fb0c fc03 	mul.w	ip, ip, r3
 80216f6:	ea4f 231a 	mov.w	r3, sl, lsr #8
 80216fa:	f003 13ff 	and.w	r3, r3, #16711935	; 0xff00ff
 80216fe:	f10a 1a01 	add.w	sl, sl, #65537	; 0x10001
 8021702:	f50c 7780 	add.w	r7, ip, #256	; 0x100
 8021706:	4453      	add	r3, sl
 8021708:	eb07 271c 	add.w	r7, r7, ip, lsr #8
 802170c:	0a1b      	lsrs	r3, r3, #8
 802170e:	0a3f      	lsrs	r7, r7, #8
 8021710:	f003 13ff 	and.w	r3, r3, #16711935	; 0xff00ff
 8021714:	f407 477f 	and.w	r7, r7, #65280	; 0xff00
 8021718:	433b      	orrs	r3, r7
 802171a:	9c14      	ldr	r4, [sp, #80]	; 0x50
 802171c:	2cff      	cmp	r4, #255	; 0xff
 802171e:	d020      	beq.n	8021762 <_ZN8touchgfx8LCD16bpp62TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x5b2>
 8021720:	9c0d      	ldr	r4, [sp, #52]	; 0x34
 8021722:	f004 17ff 	and.w	r7, r4, #16711935	; 0xff00ff
 8021726:	9c14      	ldr	r4, [sp, #80]	; 0x50
 8021728:	4367      	muls	r7, r4
 802172a:	9c0d      	ldr	r4, [sp, #52]	; 0x34
 802172c:	f404 4a7f 	and.w	sl, r4, #65280	; 0xff00
 8021730:	9c14      	ldr	r4, [sp, #80]	; 0x50
 8021732:	ea4f 2c17 	mov.w	ip, r7, lsr #8
 8021736:	fb04 fa0a 	mul.w	sl, r4, sl
 802173a:	f107 1701 	add.w	r7, r7, #65537	; 0x10001
 802173e:	f00c 1cff 	and.w	ip, ip, #16711935	; 0xff00ff
 8021742:	44bc      	add	ip, r7
 8021744:	f50a 7780 	add.w	r7, sl, #256	; 0x100
 8021748:	eb07 2a1a 	add.w	sl, r7, sl, lsr #8
 802174c:	ea4f 2c1c 	mov.w	ip, ip, lsr #8
 8021750:	ea4f 2a1a 	mov.w	sl, sl, lsr #8
 8021754:	f00c 1cff 	and.w	ip, ip, #16711935	; 0xff00ff
 8021758:	f40a 4a7f 	and.w	sl, sl, #65280	; 0xff00
 802175c:	ea4c 040a 	orr.w	r4, ip, sl
 8021760:	940d      	str	r4, [sp, #52]	; 0x34
 8021762:	9c11      	ldr	r4, [sp, #68]	; 0x44
 8021764:	2cff      	cmp	r4, #255	; 0xff
 8021766:	d020      	beq.n	80217aa <_ZN8touchgfx8LCD16bpp62TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x5fa>
 8021768:	9c09      	ldr	r4, [sp, #36]	; 0x24
 802176a:	f004 17ff 	and.w	r7, r4, #16711935	; 0xff00ff
 802176e:	9c11      	ldr	r4, [sp, #68]	; 0x44
 8021770:	4367      	muls	r7, r4
 8021772:	9c09      	ldr	r4, [sp, #36]	; 0x24
 8021774:	f404 4a7f 	and.w	sl, r4, #65280	; 0xff00
 8021778:	9c11      	ldr	r4, [sp, #68]	; 0x44
 802177a:	ea4f 2c17 	mov.w	ip, r7, lsr #8
 802177e:	fb04 fa0a 	mul.w	sl, r4, sl
 8021782:	f107 1701 	add.w	r7, r7, #65537	; 0x10001
 8021786:	f00c 1cff 	and.w	ip, ip, #16711935	; 0xff00ff
 802178a:	44bc      	add	ip, r7
 802178c:	f50a 7780 	add.w	r7, sl, #256	; 0x100
 8021790:	eb07 2a1a 	add.w	sl, r7, sl, lsr #8
 8021794:	ea4f 2c1c 	mov.w	ip, ip, lsr #8
 8021798:	ea4f 2a1a 	mov.w	sl, sl, lsr #8
 802179c:	f00c 1cff 	and.w	ip, ip, #16711935	; 0xff00ff
 80217a0:	f40a 4a7f 	and.w	sl, sl, #65280	; 0xff00
 80217a4:	ea4c 040a 	orr.w	r4, ip, sl
 80217a8:	9409      	str	r4, [sp, #36]	; 0x24
 80217aa:	9c15      	ldr	r4, [sp, #84]	; 0x54
 80217ac:	2cff      	cmp	r4, #255	; 0xff
 80217ae:	d020      	beq.n	80217f2 <_ZN8touchgfx8LCD16bpp62TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x642>
 80217b0:	9c0e      	ldr	r4, [sp, #56]	; 0x38
 80217b2:	f004 17ff 	and.w	r7, r4, #16711935	; 0xff00ff
 80217b6:	9c15      	ldr	r4, [sp, #84]	; 0x54
 80217b8:	4367      	muls	r7, r4
 80217ba:	9c0e      	ldr	r4, [sp, #56]	; 0x38
 80217bc:	f404 4a7f 	and.w	sl, r4, #65280	; 0xff00
 80217c0:	9c15      	ldr	r4, [sp, #84]	; 0x54
 80217c2:	ea4f 2c17 	mov.w	ip, r7, lsr #8
 80217c6:	fb04 fa0a 	mul.w	sl, r4, sl
 80217ca:	f107 1701 	add.w	r7, r7, #65537	; 0x10001
 80217ce:	f00c 1cff 	and.w	ip, ip, #16711935	; 0xff00ff
 80217d2:	44bc      	add	ip, r7
 80217d4:	f50a 7780 	add.w	r7, sl, #256	; 0x100
 80217d8:	eb07 2a1a 	add.w	sl, r7, sl, lsr #8
 80217dc:	ea4f 2c1c 	mov.w	ip, ip, lsr #8
 80217e0:	ea4f 2a1a 	mov.w	sl, sl, lsr #8
 80217e4:	f00c 1cff 	and.w	ip, ip, #16711935	; 0xff00ff
 80217e8:	f40a 4a7f 	and.w	sl, sl, #65280	; 0xff00
 80217ec:	ea4c 040a 	orr.w	r4, ip, sl
 80217f0:	940e      	str	r4, [sp, #56]	; 0x38
 80217f2:	9c0d      	ldr	r4, [sp, #52]	; 0x34
 80217f4:	f004 17ff 	and.w	r7, r4, #16711935	; 0xff00ff
 80217f8:	9c09      	ldr	r4, [sp, #36]	; 0x24
 80217fa:	f003 1cff 	and.w	ip, r3, #16711935	; 0xff00ff
 80217fe:	fb0e f707 	mul.w	r7, lr, r7
 8021802:	fb01 770c 	mla	r7, r1, ip, r7
 8021806:	f004 1cff 	and.w	ip, r4, #16711935	; 0xff00ff
 802180a:	9c0e      	ldr	r4, [sp, #56]	; 0x38
 802180c:	fb00 770c 	mla	r7, r0, ip, r7
 8021810:	f004 1cff 	and.w	ip, r4, #16711935	; 0xff00ff
 8021814:	9c0d      	ldr	r4, [sp, #52]	; 0x34
 8021816:	fb08 770c 	mla	r7, r8, ip, r7
 802181a:	f404 4c7f 	and.w	ip, r4, #65280	; 0xff00
 802181e:	fb0e fe0c 	mul.w	lr, lr, ip
 8021822:	f403 437f 	and.w	r3, r3, #65280	; 0xff00
 8021826:	fb01 e303 	mla	r3, r1, r3, lr
 802182a:	9909      	ldr	r1, [sp, #36]	; 0x24
 802182c:	f401 4a7f 	and.w	sl, r1, #65280	; 0xff00
 8021830:	990e      	ldr	r1, [sp, #56]	; 0x38
 8021832:	fb00 330a 	mla	r3, r0, sl, r3
 8021836:	f401 4c7f 	and.w	ip, r1, #65280	; 0xff00
 802183a:	fb08 3c0c 	mla	ip, r8, ip, r3
 802183e:	f8b9 3000 	ldrh.w	r3, [r9]
 8021842:	43d2      	mvns	r2, r2
 8021844:	1218      	asrs	r0, r3, #8
 8021846:	b2d2      	uxtb	r2, r2
 8021848:	10d9      	asrs	r1, r3, #3
 802184a:	0a3f      	lsrs	r7, r7, #8
 802184c:	ea4f 2c1c 	mov.w	ip, ip, lsr #8
 8021850:	f000 00f8 	and.w	r0, r0, #248	; 0xf8
 8021854:	00db      	lsls	r3, r3, #3
 8021856:	4350      	muls	r0, r2
 8021858:	f007 17ff 	and.w	r7, r7, #16711935	; 0xff00ff
 802185c:	f40c 4c7f 	and.w	ip, ip, #65280	; 0xff00
 8021860:	f001 01fc 	and.w	r1, r1, #252	; 0xfc
 8021864:	b2db      	uxtb	r3, r3
 8021866:	ea47 070c 	orr.w	r7, r7, ip
 802186a:	4351      	muls	r1, r2
 802186c:	4353      	muls	r3, r2
 802186e:	1c42      	adds	r2, r0, #1
 8021870:	eb02 2010 	add.w	r0, r2, r0, lsr #8
 8021874:	0c3a      	lsrs	r2, r7, #16
 8021876:	eb02 2010 	add.w	r0, r2, r0, lsr #8
 802187a:	4a18      	ldr	r2, [pc, #96]	; (80218dc <_ZN8touchgfx8LCD16bpp62TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x72c>)
 802187c:	b2c0      	uxtb	r0, r0
 802187e:	ea02 2000 	and.w	r0, r2, r0, lsl #8
 8021882:	1c4a      	adds	r2, r1, #1
 8021884:	eb02 2111 	add.w	r1, r2, r1, lsr #8
 8021888:	0a3a      	lsrs	r2, r7, #8
 802188a:	eb02 2111 	add.w	r1, r2, r1, lsr #8
 802188e:	00c9      	lsls	r1, r1, #3
 8021890:	f401 61fc 	and.w	r1, r1, #2016	; 0x7e0
 8021894:	4301      	orrs	r1, r0
 8021896:	1c58      	adds	r0, r3, #1
 8021898:	eb00 2013 	add.w	r0, r0, r3, lsr #8
 802189c:	eb07 2710 	add.w	r7, r7, r0, lsr #8
 80218a0:	f3c7 00c4 	ubfx	r0, r7, #3, #5
 80218a4:	4308      	orrs	r0, r1
 80218a6:	f8a9 0000 	strh.w	r0, [r9]
 80218aa:	9b27      	ldr	r3, [sp, #156]	; 0x9c
 80218ac:	9a25      	ldr	r2, [sp, #148]	; 0x94
 80218ae:	441a      	add	r2, r3
 80218b0:	9b28      	ldr	r3, [sp, #160]	; 0xa0
 80218b2:	9225      	str	r2, [sp, #148]	; 0x94
 80218b4:	f109 0902 	add.w	r9, r9, #2
 80218b8:	441d      	add	r5, r3
 80218ba:	f10b 3bff 	add.w	fp, fp, #4294967295
 80218be:	e64d      	b.n	802155c <_ZN8touchgfx8LCD16bpp62TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x3ac>
 80218c0:	2800      	cmp	r0, #0
 80218c2:	f43f aeed 	beq.w	80216a0 <_ZN8touchgfx8LCD16bpp62TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x4f0>
 80218c6:	5c79      	ldrb	r1, [r7, r1]
 80218c8:	f856 1021 	ldr.w	r1, [r6, r1, lsl #2]
 80218cc:	9109      	str	r1, [sp, #36]	; 0x24
 80218ce:	0e09      	lsrs	r1, r1, #24
 80218d0:	9111      	str	r1, [sp, #68]	; 0x44
 80218d2:	e6e5      	b.n	80216a0 <_ZN8touchgfx8LCD16bpp62TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x4f0>
 80218d4:	b01b      	add	sp, #108	; 0x6c
 80218d6:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
 80218da:	bf00      	nop
 80218dc:	fffff800 	.word	0xfffff800

080218e0 <_ZNK8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKtPKhssiihhh>:
 80218e0:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 80218e4:	b085      	sub	sp, #20
 80218e6:	e9dd 7010 	ldrd	r7, r0, [sp, #64]	; 0x40
 80218ea:	f9bd 6038 	ldrsh.w	r6, [sp, #56]	; 0x38
 80218ee:	9103      	str	r1, [sp, #12]
 80218f0:	fb00 7406 	mla	r4, r0, r6, r7
 80218f4:	eb02 0544 	add.w	r5, r2, r4, lsl #1
 80218f8:	2800      	cmp	r0, #0
 80218fa:	f9bd b03c 	ldrsh.w	fp, [sp, #60]	; 0x3c
 80218fe:	f89d 1048 	ldrb.w	r1, [sp, #72]	; 0x48
 8021902:	f89d e04c 	ldrb.w	lr, [sp, #76]	; 0x4c
 8021906:	9501      	str	r5, [sp, #4]
 8021908:	eb03 0904 	add.w	r9, r3, r4
 802190c:	f2c0 8150 	blt.w	8021bb0 <_ZNK8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKtPKhssiihhh+0x2d0>
 8021910:	4583      	cmp	fp, r0
 8021912:	f340 814d 	ble.w	8021bb0 <_ZNK8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKtPKhssiihhh+0x2d0>
 8021916:	2f00      	cmp	r7, #0
 8021918:	f2c0 8146 	blt.w	8021ba8 <_ZNK8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKtPKhssiihhh+0x2c8>
 802191c:	42be      	cmp	r6, r7
 802191e:	f340 8143 	ble.w	8021ba8 <_ZNK8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKtPKhssiihhh+0x2c8>
 8021922:	f813 c004 	ldrb.w	ip, [r3, r4]
 8021926:	f832 3014 	ldrh.w	r3, [r2, r4, lsl #1]
 802192a:	ea4f 02ec 	mov.w	r2, ip, asr #3
 802192e:	f423 65fc 	bic.w	r5, r3, #2016	; 0x7e0
 8021932:	4355      	muls	r5, r2
 8021934:	f403 63fc 	and.w	r3, r3, #2016	; 0x7e0
 8021938:	f64f 041f 	movw	r4, #63519	; 0xf81f
 802193c:	fb0c f203 	mul.w	r2, ip, r3
 8021940:	ea04 1355 	and.w	r3, r4, r5, lsr #5
 8021944:	f605 0501 	addw	r5, r5, #2049	; 0x801
 8021948:	441d      	add	r5, r3
 802194a:	f102 0320 	add.w	r3, r2, #32
 802194e:	eb03 2312 	add.w	r3, r3, r2, lsr #8
 8021952:	0a1b      	lsrs	r3, r3, #8
 8021954:	ea04 1455 	and.w	r4, r4, r5, lsr #5
 8021958:	f403 63fc 	and.w	r3, r3, #2016	; 0x7e0
 802195c:	431c      	orrs	r4, r3
 802195e:	1c7b      	adds	r3, r7, #1
 8021960:	f100 812b 	bmi.w	8021bba <_ZNK8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKtPKhssiihhh+0x2da>
 8021964:	429e      	cmp	r6, r3
 8021966:	f340 8128 	ble.w	8021bba <_ZNK8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKtPKhssiihhh+0x2da>
 802196a:	2900      	cmp	r1, #0
 802196c:	f000 8128 	beq.w	8021bc0 <_ZNK8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKtPKhssiihhh+0x2e0>
 8021970:	9a01      	ldr	r2, [sp, #4]
 8021972:	f899 3001 	ldrb.w	r3, [r9, #1]
 8021976:	8855      	ldrh	r5, [r2, #2]
 8021978:	ea4f 08e3 	mov.w	r8, r3, asr #3
 802197c:	f425 62fc 	bic.w	r2, r5, #2016	; 0x7e0
 8021980:	fb08 f802 	mul.w	r8, r8, r2
 8021984:	f405 65fc 	and.w	r5, r5, #2016	; 0x7e0
 8021988:	f64f 021f 	movw	r2, #63519	; 0xf81f
 802198c:	ea02 1a58 	and.w	sl, r2, r8, lsr #5
 8021990:	435d      	muls	r5, r3
 8021992:	f608 0801 	addw	r8, r8, #2049	; 0x801
 8021996:	44d0      	add	r8, sl
 8021998:	f105 0a20 	add.w	sl, r5, #32
 802199c:	eb0a 2515 	add.w	r5, sl, r5, lsr #8
 80219a0:	0a2d      	lsrs	r5, r5, #8
 80219a2:	ea02 1258 	and.w	r2, r2, r8, lsr #5
 80219a6:	f405 65fc 	and.w	r5, r5, #2016	; 0x7e0
 80219aa:	432a      	orrs	r2, r5
 80219ac:	3001      	adds	r0, #1
 80219ae:	f100 810d 	bmi.w	8021bcc <_ZNK8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKtPKhssiihhh+0x2ec>
 80219b2:	4583      	cmp	fp, r0
 80219b4:	f340 810a 	ble.w	8021bcc <_ZNK8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKtPKhssiihhh+0x2ec>
 80219b8:	f1be 0f00 	cmp.w	lr, #0
 80219bc:	f000 810b 	beq.w	8021bd6 <_ZNK8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKtPKhssiihhh+0x2f6>
 80219c0:	2f00      	cmp	r7, #0
 80219c2:	f2c0 8100 	blt.w	8021bc6 <_ZNK8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKtPKhssiihhh+0x2e6>
 80219c6:	42be      	cmp	r6, r7
 80219c8:	f340 80fd 	ble.w	8021bc6 <_ZNK8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKtPKhssiihhh+0x2e6>
 80219cc:	9801      	ldr	r0, [sp, #4]
 80219ce:	f819 5006 	ldrb.w	r5, [r9, r6]
 80219d2:	f830 8016 	ldrh.w	r8, [r0, r6, lsl #1]
 80219d6:	ea4f 0ae5 	mov.w	sl, r5, asr #3
 80219da:	f428 60fc 	bic.w	r0, r8, #2016	; 0x7e0
 80219de:	fb0a fa00 	mul.w	sl, sl, r0
 80219e2:	f64f 0b1f 	movw	fp, #63519	; 0xf81f
 80219e6:	f408 68fc 	and.w	r8, r8, #2016	; 0x7e0
 80219ea:	ea0b 105a 	and.w	r0, fp, sl, lsr #5
 80219ee:	fb05 f808 	mul.w	r8, r5, r8
 80219f2:	f60a 0a01 	addw	sl, sl, #2049	; 0x801
 80219f6:	4482      	add	sl, r0
 80219f8:	f108 0020 	add.w	r0, r8, #32
 80219fc:	eb00 2018 	add.w	r0, r0, r8, lsr #8
 8021a00:	0a00      	lsrs	r0, r0, #8
 8021a02:	ea0b 1b5a 	and.w	fp, fp, sl, lsr #5
 8021a06:	f400 60fc 	and.w	r0, r0, #2016	; 0x7e0
 8021a0a:	ea4b 0b00 	orr.w	fp, fp, r0
 8021a0e:	3701      	adds	r7, #1
 8021a10:	f100 80e6 	bmi.w	8021be0 <_ZNK8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKtPKhssiihhh+0x300>
 8021a14:	42be      	cmp	r6, r7
 8021a16:	f340 80e3 	ble.w	8021be0 <_ZNK8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKtPKhssiihhh+0x300>
 8021a1a:	2900      	cmp	r1, #0
 8021a1c:	f000 80e3 	beq.w	8021be6 <_ZNK8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKtPKhssiihhh+0x306>
 8021a20:	3601      	adds	r6, #1
 8021a22:	9801      	ldr	r0, [sp, #4]
 8021a24:	f819 7006 	ldrb.w	r7, [r9, r6]
 8021a28:	f830 0016 	ldrh.w	r0, [r0, r6, lsl #1]
 8021a2c:	ea4f 09e7 	mov.w	r9, r7, asr #3
 8021a30:	f420 66fc 	bic.w	r6, r0, #2016	; 0x7e0
 8021a34:	f400 60fc 	and.w	r0, r0, #2016	; 0x7e0
 8021a38:	fb09 f906 	mul.w	r9, r9, r6
 8021a3c:	fb07 f800 	mul.w	r8, r7, r0
 8021a40:	f64f 001f 	movw	r0, #63519	; 0xf81f
 8021a44:	ea00 1a59 	and.w	sl, r0, r9, lsr #5
 8021a48:	f609 0901 	addw	r9, r9, #2049	; 0x801
 8021a4c:	44d1      	add	r9, sl
 8021a4e:	ea00 1659 	and.w	r6, r0, r9, lsr #5
 8021a52:	f108 0020 	add.w	r0, r8, #32
 8021a56:	eb00 2018 	add.w	r0, r0, r8, lsr #8
 8021a5a:	0a00      	lsrs	r0, r0, #8
 8021a5c:	f400 60fc 	and.w	r0, r0, #2016	; 0x7e0
 8021a60:	4330      	orrs	r0, r6
 8021a62:	b28e      	uxth	r6, r1
 8021a64:	fa1f f98e 	uxth.w	r9, lr
 8021a68:	fb06 f809 	mul.w	r8, r6, r9
 8021a6c:	ea4f 4a04 	mov.w	sl, r4, lsl #16
 8021a70:	ebc8 1909 	rsb	r9, r8, r9, lsl #4
 8021a74:	0136      	lsls	r6, r6, #4
 8021a76:	f00a 6afc 	and.w	sl, sl, #132120576	; 0x7e00000
 8021a7a:	f424 64fc 	bic.w	r4, r4, #2016	; 0x7e0
 8021a7e:	9601      	str	r6, [sp, #4]
 8021a80:	ea4a 0404 	orr.w	r4, sl, r4
 8021a84:	fa1f f689 	uxth.w	r6, r9
 8021a88:	ea4f 4a02 	mov.w	sl, r2, lsl #16
 8021a8c:	fb11 f90e 	smulbb	r9, r1, lr
 8021a90:	f3c9 09c7 	ubfx	r9, r9, #3, #8
 8021a94:	9602      	str	r6, [sp, #8]
 8021a96:	f00a 6afc 	and.w	sl, sl, #132120576	; 0x7e00000
 8021a9a:	4626      	mov	r6, r4
 8021a9c:	f422 62fc 	bic.w	r2, r2, #2016	; 0x7e0
 8021aa0:	f1ce 0410 	rsb	r4, lr, #16
 8021aa4:	1a64      	subs	r4, r4, r1
 8021aa6:	ea4a 0202 	orr.w	r2, sl, r2
 8021aaa:	ebc9 0141 	rsb	r1, r9, r1, lsl #1
 8021aae:	ea4f 4a00 	mov.w	sl, r0, lsl #16
 8021ab2:	434a      	muls	r2, r1
 8021ab4:	eb09 0444 	add.w	r4, r9, r4, lsl #1
 8021ab8:	f00a 6afc 	and.w	sl, sl, #132120576	; 0x7e00000
 8021abc:	f420 60fc 	bic.w	r0, r0, #2016	; 0x7e0
 8021ac0:	fb04 2406 	mla	r4, r4, r6, r2
 8021ac4:	ea4a 0000 	orr.w	r0, sl, r0
 8021ac8:	fb09 4200 	mla	r2, r9, r0, r4
 8021acc:	ea4f 440b 	mov.w	r4, fp, lsl #16
 8021ad0:	f004 64fc 	and.w	r4, r4, #132120576	; 0x7e00000
 8021ad4:	f42b 6bfc 	bic.w	fp, fp, #2016	; 0x7e0
 8021ad8:	ea44 0b0b 	orr.w	fp, r4, fp
 8021adc:	9c01      	ldr	r4, [sp, #4]
 8021ade:	9e02      	ldr	r6, [sp, #8]
 8021ae0:	9903      	ldr	r1, [sp, #12]
 8021ae2:	f5c4 7480 	rsb	r4, r4, #256	; 0x100
 8021ae6:	1ba4      	subs	r4, r4, r6
 8021ae8:	9e01      	ldr	r6, [sp, #4]
 8021aea:	8808      	ldrh	r0, [r1, #0]
 8021aec:	f89d 1050 	ldrb.w	r1, [sp, #80]	; 0x50
 8021af0:	eba6 0608 	sub.w	r6, r6, r8
 8021af4:	b2b6      	uxth	r6, r6
 8021af6:	b2a4      	uxth	r4, r4
 8021af8:	4373      	muls	r3, r6
 8021afa:	fb0c 3304 	mla	r3, ip, r4, r3
 8021afe:	9c02      	ldr	r4, [sp, #8]
 8021b00:	fb04 3505 	mla	r5, r4, r5, r3
 8021b04:	fb08 5707 	mla	r7, r8, r7, r5
 8021b08:	ebc9 0e4e 	rsb	lr, r9, lr, lsl #1
 8021b0c:	b289      	uxth	r1, r1
 8021b0e:	fb0e 2e0b 	mla	lr, lr, fp, r2
 8021b12:	f3c7 2707 	ubfx	r7, r7, #8, #8
 8021b16:	434f      	muls	r7, r1
 8021b18:	ea4f 525e 	mov.w	r2, lr, lsr #21
 8021b1c:	ea4f 1e5e 	mov.w	lr, lr, lsr #5
 8021b20:	f402 62fc 	and.w	r2, r2, #2016	; 0x7e0
 8021b24:	1c7b      	adds	r3, r7, #1
 8021b26:	f42e 6efc 	bic.w	lr, lr, #2016	; 0x7e0
 8021b2a:	ea42 0e0e 	orr.w	lr, r2, lr
 8021b2e:	eb03 2717 	add.w	r7, r3, r7, lsr #8
 8021b32:	fa1f f28e 	uxth.w	r2, lr
 8021b36:	1203      	asrs	r3, r0, #8
 8021b38:	ea6f 2717 	mvn.w	r7, r7, lsr #8
 8021b3c:	b2ff      	uxtb	r7, r7
 8021b3e:	1215      	asrs	r5, r2, #8
 8021b40:	f003 03f8 	and.w	r3, r3, #248	; 0xf8
 8021b44:	fb13 f307 	smulbb	r3, r3, r7
 8021b48:	f005 05f8 	and.w	r5, r5, #248	; 0xf8
 8021b4c:	fb05 3501 	mla	r5, r5, r1, r3
 8021b50:	10c3      	asrs	r3, r0, #3
 8021b52:	10d4      	asrs	r4, r2, #3
 8021b54:	f003 03fc 	and.w	r3, r3, #252	; 0xfc
 8021b58:	fb13 f307 	smulbb	r3, r3, r7
 8021b5c:	f004 04fc 	and.w	r4, r4, #252	; 0xfc
 8021b60:	fb04 3401 	mla	r4, r4, r1, r3
 8021b64:	00c3      	lsls	r3, r0, #3
 8021b66:	00d2      	lsls	r2, r2, #3
 8021b68:	b2db      	uxtb	r3, r3
 8021b6a:	fb13 f307 	smulbb	r3, r3, r7
 8021b6e:	b2d2      	uxtb	r2, r2
 8021b70:	fb02 3101 	mla	r1, r2, r1, r3
 8021b74:	b2ad      	uxth	r5, r5
 8021b76:	b289      	uxth	r1, r1
 8021b78:	b2a4      	uxth	r4, r4
 8021b7a:	1c6b      	adds	r3, r5, #1
 8021b7c:	eb03 2515 	add.w	r5, r3, r5, lsr #8
 8021b80:	1c62      	adds	r2, r4, #1
 8021b82:	1c4b      	adds	r3, r1, #1
 8021b84:	eb03 2311 	add.w	r3, r3, r1, lsr #8
 8021b88:	eb02 2414 	add.w	r4, r2, r4, lsr #8
 8021b8c:	f405 4578 	and.w	r5, r5, #63488	; 0xf800
 8021b90:	f3c3 23c4 	ubfx	r3, r3, #11, #5
 8021b94:	0964      	lsrs	r4, r4, #5
 8021b96:	432b      	orrs	r3, r5
 8021b98:	f404 64fc 	and.w	r4, r4, #2016	; 0x7e0
 8021b9c:	9a03      	ldr	r2, [sp, #12]
 8021b9e:	4323      	orrs	r3, r4
 8021ba0:	8013      	strh	r3, [r2, #0]
 8021ba2:	b005      	add	sp, #20
 8021ba4:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
 8021ba8:	f04f 0c00 	mov.w	ip, #0
 8021bac:	4664      	mov	r4, ip
 8021bae:	e6d6      	b.n	802195e <_ZNK8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKtPKhssiihhh+0x7e>
 8021bb0:	2300      	movs	r3, #0
 8021bb2:	469c      	mov	ip, r3
 8021bb4:	461a      	mov	r2, r3
 8021bb6:	461c      	mov	r4, r3
 8021bb8:	e6f8      	b.n	80219ac <_ZNK8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKtPKhssiihhh+0xcc>
 8021bba:	2300      	movs	r3, #0
 8021bbc:	461a      	mov	r2, r3
 8021bbe:	e6f5      	b.n	80219ac <_ZNK8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKtPKhssiihhh+0xcc>
 8021bc0:	460b      	mov	r3, r1
 8021bc2:	460a      	mov	r2, r1
 8021bc4:	e6f2      	b.n	80219ac <_ZNK8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKtPKhssiihhh+0xcc>
 8021bc6:	2500      	movs	r5, #0
 8021bc8:	46ab      	mov	fp, r5
 8021bca:	e720      	b.n	8021a0e <_ZNK8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKtPKhssiihhh+0x12e>
 8021bcc:	2700      	movs	r7, #0
 8021bce:	463d      	mov	r5, r7
 8021bd0:	4638      	mov	r0, r7
 8021bd2:	46bb      	mov	fp, r7
 8021bd4:	e745      	b.n	8021a62 <_ZNK8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKtPKhssiihhh+0x182>
 8021bd6:	4677      	mov	r7, lr
 8021bd8:	4675      	mov	r5, lr
 8021bda:	4670      	mov	r0, lr
 8021bdc:	46f3      	mov	fp, lr
 8021bde:	e740      	b.n	8021a62 <_ZNK8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKtPKhssiihhh+0x182>
 8021be0:	2700      	movs	r7, #0
 8021be2:	4638      	mov	r0, r7
 8021be4:	e73d      	b.n	8021a62 <_ZNK8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKtPKhssiihhh+0x182>
 8021be6:	460f      	mov	r7, r1
 8021be8:	4608      	mov	r0, r1
 8021bea:	e73a      	b.n	8021a62 <_ZNK8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKtPKhssiihhh+0x182>

08021bec <_ZN8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff>:
 8021bec:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 8021bf0:	b097      	sub	sp, #92	; 0x5c
 8021bf2:	9214      	str	r2, [sp, #80]	; 0x50
 8021bf4:	9308      	str	r3, [sp, #32]
 8021bf6:	9a25      	ldr	r2, [sp, #148]	; 0x94
 8021bf8:	f89d 30a4 	ldrb.w	r3, [sp, #164]	; 0xa4
 8021bfc:	9312      	str	r3, [sp, #72]	; 0x48
 8021bfe:	9111      	str	r1, [sp, #68]	; 0x44
 8021c00:	e9dd 1326 	ldrd	r1, r3, [sp, #152]	; 0x98
 8021c04:	9015      	str	r0, [sp, #84]	; 0x54
 8021c06:	6850      	ldr	r0, [r2, #4]
 8021c08:	6812      	ldr	r2, [r2, #0]
 8021c0a:	fb00 1303 	mla	r3, r0, r3, r1
 8021c0e:	eb02 0343 	add.w	r3, r2, r3, lsl #1
 8021c12:	9309      	str	r3, [sp, #36]	; 0x24
 8021c14:	9b28      	ldr	r3, [sp, #160]	; 0xa0
 8021c16:	681b      	ldr	r3, [r3, #0]
 8021c18:	930b      	str	r3, [sp, #44]	; 0x2c
 8021c1a:	9b28      	ldr	r3, [sp, #160]	; 0xa0
 8021c1c:	685b      	ldr	r3, [r3, #4]
 8021c1e:	930c      	str	r3, [sp, #48]	; 0x30
 8021c20:	f8bd 3048 	ldrh.w	r3, [sp, #72]	; 0x48
 8021c24:	930a      	str	r3, [sp, #40]	; 0x28
 8021c26:	9b11      	ldr	r3, [sp, #68]	; 0x44
 8021c28:	2b00      	cmp	r3, #0
 8021c2a:	dc03      	bgt.n	8021c34 <_ZN8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x48>
 8021c2c:	9b14      	ldr	r3, [sp, #80]	; 0x50
 8021c2e:	2b00      	cmp	r3, #0
 8021c30:	f340 83cb 	ble.w	80223ca <_ZN8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x7de>
 8021c34:	9b28      	ldr	r3, [sp, #160]	; 0xa0
 8021c36:	f9b3 1008 	ldrsh.w	r1, [r3, #8]
 8021c3a:	f9b3 200c 	ldrsh.w	r2, [r3, #12]
 8021c3e:	1e48      	subs	r0, r1, #1
 8021c40:	1e55      	subs	r5, r2, #1
 8021c42:	9b08      	ldr	r3, [sp, #32]
 8021c44:	2b00      	cmp	r3, #0
 8021c46:	f340 81a3 	ble.w	8021f90 <_ZN8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x3a4>
 8021c4a:	9e21      	ldr	r6, [sp, #132]	; 0x84
 8021c4c:	9b22      	ldr	r3, [sp, #136]	; 0x88
 8021c4e:	1436      	asrs	r6, r6, #16
 8021c50:	ea4f 4323 	mov.w	r3, r3, asr #16
 8021c54:	d406      	bmi.n	8021c64 <_ZN8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x78>
 8021c56:	4286      	cmp	r6, r0
 8021c58:	da04      	bge.n	8021c64 <_ZN8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x78>
 8021c5a:	2b00      	cmp	r3, #0
 8021c5c:	db02      	blt.n	8021c64 <_ZN8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x78>
 8021c5e:	42ab      	cmp	r3, r5
 8021c60:	f2c0 8197 	blt.w	8021f92 <_ZN8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x3a6>
 8021c64:	3601      	adds	r6, #1
 8021c66:	f100 8184 	bmi.w	8021f72 <_ZN8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x386>
 8021c6a:	42b1      	cmp	r1, r6
 8021c6c:	f2c0 8181 	blt.w	8021f72 <_ZN8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x386>
 8021c70:	3301      	adds	r3, #1
 8021c72:	f100 817e 	bmi.w	8021f72 <_ZN8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x386>
 8021c76:	429a      	cmp	r2, r3
 8021c78:	f2c0 817b 	blt.w	8021f72 <_ZN8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x386>
 8021c7c:	9b08      	ldr	r3, [sp, #32]
 8021c7e:	9f09      	ldr	r7, [sp, #36]	; 0x24
 8021c80:	9313      	str	r3, [sp, #76]	; 0x4c
 8021c82:	f64f 061f 	movw	r6, #63519	; 0xf81f
 8021c86:	9b13      	ldr	r3, [sp, #76]	; 0x4c
 8021c88:	2b00      	cmp	r3, #0
 8021c8a:	f340 81a4 	ble.w	8021fd6 <_ZN8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x3ea>
 8021c8e:	9b22      	ldr	r3, [sp, #136]	; 0x88
 8021c90:	9d21      	ldr	r5, [sp, #132]	; 0x84
 8021c92:	1418      	asrs	r0, r3, #16
 8021c94:	9b21      	ldr	r3, [sp, #132]	; 0x84
 8021c96:	f3c3 3103 	ubfx	r1, r3, #12, #4
 8021c9a:	9b22      	ldr	r3, [sp, #136]	; 0x88
 8021c9c:	f3c3 3c03 	ubfx	ip, r3, #12, #4
 8021ca0:	9b28      	ldr	r3, [sp, #160]	; 0xa0
 8021ca2:	142d      	asrs	r5, r5, #16
 8021ca4:	e9d3 2302 	ldrd	r2, r3, [r3, #8]
 8021ca8:	f100 81f8 	bmi.w	802209c <_ZN8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x4b0>
 8021cac:	f102 3eff 	add.w	lr, r2, #4294967295
 8021cb0:	4575      	cmp	r5, lr
 8021cb2:	f280 81f3 	bge.w	802209c <_ZN8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x4b0>
 8021cb6:	2800      	cmp	r0, #0
 8021cb8:	f2c0 81f0 	blt.w	802209c <_ZN8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x4b0>
 8021cbc:	f103 3eff 	add.w	lr, r3, #4294967295
 8021cc0:	4570      	cmp	r0, lr
 8021cc2:	f280 81eb 	bge.w	802209c <_ZN8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x4b0>
 8021cc6:	9b0c      	ldr	r3, [sp, #48]	; 0x30
 8021cc8:	b212      	sxth	r2, r2
 8021cca:	fb00 5002 	mla	r0, r0, r2, r5
 8021cce:	fa1f fe81 	uxth.w	lr, r1
 8021cd2:	eb03 0a00 	add.w	sl, r3, r0
 8021cd6:	ea4f 150e 	mov.w	r5, lr, lsl #4
 8021cda:	f813 9000 	ldrb.w	r9, [r3, r0]
 8021cde:	f89a 8001 	ldrb.w	r8, [sl, #1]
 8021ce2:	f5c5 7380 	rsb	r3, r5, #256	; 0x100
 8021ce6:	b29b      	uxth	r3, r3
 8021ce8:	f1bc 0f00 	cmp.w	ip, #0
 8021cec:	f000 81b9 	beq.w	8022062 <_ZN8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x476>
 8021cf0:	f81a 4002 	ldrb.w	r4, [sl, r2]
 8021cf4:	940d      	str	r4, [sp, #52]	; 0x34
 8021cf6:	eb0a 0b02 	add.w	fp, sl, r2
 8021cfa:	fa1f fa8c 	uxth.w	sl, ip
 8021cfe:	fb0a fe0e 	mul.w	lr, sl, lr
 8021d02:	ebce 1a0a 	rsb	sl, lr, sl, lsl #4
 8021d06:	fa1f fa8a 	uxth.w	sl, sl
 8021d0a:	eba5 050e 	sub.w	r5, r5, lr
 8021d0e:	f89b 4001 	ldrb.w	r4, [fp, #1]
 8021d12:	940e      	str	r4, [sp, #56]	; 0x38
 8021d14:	eba3 030a 	sub.w	r3, r3, sl
 8021d18:	b2ad      	uxth	r5, r5
 8021d1a:	9c0d      	ldr	r4, [sp, #52]	; 0x34
 8021d1c:	b29b      	uxth	r3, r3
 8021d1e:	fb08 f505 	mul.w	r5, r8, r5
 8021d22:	fb09 5303 	mla	r3, r9, r3, r5
 8021d26:	fb0a 3304 	mla	r3, sl, r4, r3
 8021d2a:	9c0e      	ldr	r4, [sp, #56]	; 0x38
 8021d2c:	fb0e 3304 	mla	r3, lr, r4, r3
 8021d30:	f3c3 2307 	ubfx	r3, r3, #8, #8
 8021d34:	2b00      	cmp	r3, #0
 8021d36:	f000 810f 	beq.w	8021f58 <_ZN8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x36c>
 8021d3a:	9c0b      	ldr	r4, [sp, #44]	; 0x2c
 8021d3c:	f1b9 0fff 	cmp.w	r9, #255	; 0xff
 8021d40:	eb04 0540 	add.w	r5, r4, r0, lsl #1
 8021d44:	f834 0010 	ldrh.w	r0, [r4, r0, lsl #1]
 8021d48:	f000 8190 	beq.w	802206c <_ZN8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x480>
 8021d4c:	f420 6efc 	bic.w	lr, r0, #2016	; 0x7e0
 8021d50:	ea4f 0ae9 	mov.w	sl, r9, asr #3
 8021d54:	f400 60fc 	and.w	r0, r0, #2016	; 0x7e0
 8021d58:	fb09 f000 	mul.w	r0, r9, r0
 8021d5c:	fb0a fe0e 	mul.w	lr, sl, lr
 8021d60:	ea06 195e 	and.w	r9, r6, lr, lsr #5
 8021d64:	f100 0b20 	add.w	fp, r0, #32
 8021d68:	f60e 0e01 	addw	lr, lr, #2049	; 0x801
 8021d6c:	44ce      	add	lr, r9
 8021d6e:	eb0b 2910 	add.w	r9, fp, r0, lsr #8
 8021d72:	ea4f 2919 	mov.w	r9, r9, lsr #8
 8021d76:	ea06 1e5e 	and.w	lr, r6, lr, lsr #5
 8021d7a:	f409 69fc 	and.w	r9, r9, #2016	; 0x7e0
 8021d7e:	ea4e 0909 	orr.w	r9, lr, r9
 8021d82:	f1b8 0fff 	cmp.w	r8, #255	; 0xff
 8021d86:	8868      	ldrh	r0, [r5, #2]
 8021d88:	d019      	beq.n	8021dbe <_ZN8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x1d2>
 8021d8a:	f420 6efc 	bic.w	lr, r0, #2016	; 0x7e0
 8021d8e:	ea4f 0ae8 	mov.w	sl, r8, asr #3
 8021d92:	f400 60fc 	and.w	r0, r0, #2016	; 0x7e0
 8021d96:	fb08 f800 	mul.w	r8, r8, r0
 8021d9a:	fb0a fe0e 	mul.w	lr, sl, lr
 8021d9e:	ea06 105e 	and.w	r0, r6, lr, lsr #5
 8021da2:	f108 0b20 	add.w	fp, r8, #32
 8021da6:	f60e 0e01 	addw	lr, lr, #2049	; 0x801
 8021daa:	4486      	add	lr, r0
 8021dac:	eb0b 2018 	add.w	r0, fp, r8, lsr #8
 8021db0:	0a00      	lsrs	r0, r0, #8
 8021db2:	ea06 1e5e 	and.w	lr, r6, lr, lsr #5
 8021db6:	f400 60fc 	and.w	r0, r0, #2016	; 0x7e0
 8021dba:	ea4e 0000 	orr.w	r0, lr, r0
 8021dbe:	ea4f 4e09 	mov.w	lr, r9, lsl #16
 8021dc2:	ea4f 4a00 	mov.w	sl, r0, lsl #16
 8021dc6:	f00e 6efc 	and.w	lr, lr, #132120576	; 0x7e00000
 8021dca:	f429 69fc 	bic.w	r9, r9, #2016	; 0x7e0
 8021dce:	f00a 6afc 	and.w	sl, sl, #132120576	; 0x7e00000
 8021dd2:	f420 60fc 	bic.w	r0, r0, #2016	; 0x7e0
 8021dd6:	ea4e 0909 	orr.w	r9, lr, r9
 8021dda:	ea4a 0000 	orr.w	r0, sl, r0
 8021dde:	f1bc 0f00 	cmp.w	ip, #0
 8021de2:	f000 8145 	beq.w	8022070 <_ZN8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x484>
 8021de6:	f102 4200 	add.w	r2, r2, #2147483648	; 0x80000000
 8021dea:	3a01      	subs	r2, #1
 8021dec:	0052      	lsls	r2, r2, #1
 8021dee:	9c0d      	ldr	r4, [sp, #52]	; 0x34
 8021df0:	3202      	adds	r2, #2
 8021df2:	2cff      	cmp	r4, #255	; 0xff
 8021df4:	eb05 0e02 	add.w	lr, r5, r2
 8021df8:	5aaa      	ldrh	r2, [r5, r2]
 8021dfa:	d018      	beq.n	8021e2e <_ZN8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x242>
 8021dfc:	f422 65fc 	bic.w	r5, r2, #2016	; 0x7e0
 8021e00:	f402 62fc 	and.w	r2, r2, #2016	; 0x7e0
 8021e04:	fb04 fa02 	mul.w	sl, r4, r2
 8021e08:	ea4f 08e4 	mov.w	r8, r4, asr #3
 8021e0c:	fb08 f805 	mul.w	r8, r8, r5
 8021e10:	f10a 0520 	add.w	r5, sl, #32
 8021e14:	ea06 1258 	and.w	r2, r6, r8, lsr #5
 8021e18:	eb05 251a 	add.w	r5, r5, sl, lsr #8
 8021e1c:	f608 0801 	addw	r8, r8, #2049	; 0x801
 8021e20:	4442      	add	r2, r8
 8021e22:	0a2d      	lsrs	r5, r5, #8
 8021e24:	ea06 1252 	and.w	r2, r6, r2, lsr #5
 8021e28:	f405 65fc 	and.w	r5, r5, #2016	; 0x7e0
 8021e2c:	432a      	orrs	r2, r5
 8021e2e:	9c0e      	ldr	r4, [sp, #56]	; 0x38
 8021e30:	f8be 5002 	ldrh.w	r5, [lr, #2]
 8021e34:	2cff      	cmp	r4, #255	; 0xff
 8021e36:	d01a      	beq.n	8021e6e <_ZN8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x282>
 8021e38:	f425 6efc 	bic.w	lr, r5, #2016	; 0x7e0
 8021e3c:	f405 65fc 	and.w	r5, r5, #2016	; 0x7e0
 8021e40:	fb04 fa05 	mul.w	sl, r4, r5
 8021e44:	ea4f 08e4 	mov.w	r8, r4, asr #3
 8021e48:	fb08 f80e 	mul.w	r8, r8, lr
 8021e4c:	f10a 0e20 	add.w	lr, sl, #32
 8021e50:	ea06 1558 	and.w	r5, r6, r8, lsr #5
 8021e54:	eb0e 2e1a 	add.w	lr, lr, sl, lsr #8
 8021e58:	f608 0801 	addw	r8, r8, #2049	; 0x801
 8021e5c:	4445      	add	r5, r8
 8021e5e:	ea4f 2e1e 	mov.w	lr, lr, lsr #8
 8021e62:	ea06 1555 	and.w	r5, r6, r5, lsr #5
 8021e66:	f40e 6efc 	and.w	lr, lr, #2016	; 0x7e0
 8021e6a:	ea45 050e 	orr.w	r5, r5, lr
 8021e6e:	fb1c fe01 	smulbb	lr, ip, r1
 8021e72:	ea4f 0eee 	mov.w	lr, lr, asr #3
 8021e76:	f1cc 0810 	rsb	r8, ip, #16
 8021e7a:	eba8 0801 	sub.w	r8, r8, r1
 8021e7e:	ea4f 4a02 	mov.w	sl, r2, lsl #16
 8021e82:	ebce 0141 	rsb	r1, lr, r1, lsl #1
 8021e86:	eb0e 0848 	add.w	r8, lr, r8, lsl #1
 8021e8a:	ea4f 4b05 	mov.w	fp, r5, lsl #16
 8021e8e:	4341      	muls	r1, r0
 8021e90:	f00a 6afc 	and.w	sl, sl, #132120576	; 0x7e00000
 8021e94:	f422 62fc 	bic.w	r2, r2, #2016	; 0x7e0
 8021e98:	ea4a 0202 	orr.w	r2, sl, r2
 8021e9c:	ebce 0c4c 	rsb	ip, lr, ip, lsl #1
 8021ea0:	fb09 1108 	mla	r1, r9, r8, r1
 8021ea4:	f00b 6bfc 	and.w	fp, fp, #132120576	; 0x7e00000
 8021ea8:	f425 65fc 	bic.w	r5, r5, #2016	; 0x7e0
 8021eac:	fb0c 1102 	mla	r1, ip, r2, r1
 8021eb0:	ea4b 0505 	orr.w	r5, fp, r5
 8021eb4:	fb0e 1e05 	mla	lr, lr, r5, r1
 8021eb8:	ea4f 525e 	mov.w	r2, lr, lsr #21
 8021ebc:	ea4f 1e5e 	mov.w	lr, lr, lsr #5
 8021ec0:	f402 62fc 	and.w	r2, r2, #2016	; 0x7e0
 8021ec4:	f42e 6efc 	bic.w	lr, lr, #2016	; 0x7e0
 8021ec8:	ea42 0e0e 	orr.w	lr, r2, lr
 8021ecc:	fa1f f28e 	uxth.w	r2, lr
 8021ed0:	2bff      	cmp	r3, #255	; 0xff
 8021ed2:	d103      	bne.n	8021edc <_ZN8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x2f0>
 8021ed4:	9912      	ldr	r1, [sp, #72]	; 0x48
 8021ed6:	29ff      	cmp	r1, #255	; 0xff
 8021ed8:	f000 80de 	beq.w	8022098 <_ZN8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x4ac>
 8021edc:	990a      	ldr	r1, [sp, #40]	; 0x28
 8021ede:	8838      	ldrh	r0, [r7, #0]
 8021ee0:	9c0a      	ldr	r4, [sp, #40]	; 0x28
 8021ee2:	434b      	muls	r3, r1
 8021ee4:	f103 0c01 	add.w	ip, r3, #1
 8021ee8:	eb0c 2323 	add.w	r3, ip, r3, asr #8
 8021eec:	ea6f 2323 	mvn.w	r3, r3, asr #8
 8021ef0:	fa5f fc83 	uxtb.w	ip, r3
 8021ef4:	1203      	asrs	r3, r0, #8
 8021ef6:	1215      	asrs	r5, r2, #8
 8021ef8:	f003 03f8 	and.w	r3, r3, #248	; 0xf8
 8021efc:	fb13 f30c 	smulbb	r3, r3, ip
 8021f00:	f005 05f8 	and.w	r5, r5, #248	; 0xf8
 8021f04:	fb05 3501 	mla	r5, r5, r1, r3
 8021f08:	10c3      	asrs	r3, r0, #3
 8021f0a:	10d1      	asrs	r1, r2, #3
 8021f0c:	f003 03fc 	and.w	r3, r3, #252	; 0xfc
 8021f10:	fb13 f30c 	smulbb	r3, r3, ip
 8021f14:	f001 01fc 	and.w	r1, r1, #252	; 0xfc
 8021f18:	fb01 3104 	mla	r1, r1, r4, r3
 8021f1c:	00c3      	lsls	r3, r0, #3
 8021f1e:	00d2      	lsls	r2, r2, #3
 8021f20:	b2db      	uxtb	r3, r3
 8021f22:	b2d2      	uxtb	r2, r2
 8021f24:	fb13 f30c 	smulbb	r3, r3, ip
 8021f28:	b2ad      	uxth	r5, r5
 8021f2a:	fb02 3304 	mla	r3, r2, r4, r3
 8021f2e:	b29a      	uxth	r2, r3
 8021f30:	1c6b      	adds	r3, r5, #1
 8021f32:	b289      	uxth	r1, r1
 8021f34:	eb03 2515 	add.w	r5, r3, r5, lsr #8
 8021f38:	1c53      	adds	r3, r2, #1
 8021f3a:	eb03 2312 	add.w	r3, r3, r2, lsr #8
 8021f3e:	1c4a      	adds	r2, r1, #1
 8021f40:	eb02 2111 	add.w	r1, r2, r1, lsr #8
 8021f44:	f405 4578 	and.w	r5, r5, #63488	; 0xf800
 8021f48:	f3c3 23c4 	ubfx	r3, r3, #11, #5
 8021f4c:	0949      	lsrs	r1, r1, #5
 8021f4e:	432b      	orrs	r3, r5
 8021f50:	f401 61fc 	and.w	r1, r1, #2016	; 0x7e0
 8021f54:	430b      	orrs	r3, r1
 8021f56:	803b      	strh	r3, [r7, #0]
 8021f58:	9b21      	ldr	r3, [sp, #132]	; 0x84
 8021f5a:	9a23      	ldr	r2, [sp, #140]	; 0x8c
 8021f5c:	4413      	add	r3, r2
 8021f5e:	9321      	str	r3, [sp, #132]	; 0x84
 8021f60:	9a22      	ldr	r2, [sp, #136]	; 0x88
 8021f62:	9b24      	ldr	r3, [sp, #144]	; 0x90
 8021f64:	441a      	add	r2, r3
 8021f66:	9b13      	ldr	r3, [sp, #76]	; 0x4c
 8021f68:	9222      	str	r2, [sp, #136]	; 0x88
 8021f6a:	3b01      	subs	r3, #1
 8021f6c:	3702      	adds	r7, #2
 8021f6e:	9313      	str	r3, [sp, #76]	; 0x4c
 8021f70:	e689      	b.n	8021c86 <_ZN8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x9a>
 8021f72:	9b21      	ldr	r3, [sp, #132]	; 0x84
 8021f74:	9e23      	ldr	r6, [sp, #140]	; 0x8c
 8021f76:	9c22      	ldr	r4, [sp, #136]	; 0x88
 8021f78:	4433      	add	r3, r6
 8021f7a:	9321      	str	r3, [sp, #132]	; 0x84
 8021f7c:	9b24      	ldr	r3, [sp, #144]	; 0x90
 8021f7e:	441c      	add	r4, r3
 8021f80:	9b08      	ldr	r3, [sp, #32]
 8021f82:	9422      	str	r4, [sp, #136]	; 0x88
 8021f84:	3b01      	subs	r3, #1
 8021f86:	9308      	str	r3, [sp, #32]
 8021f88:	9b09      	ldr	r3, [sp, #36]	; 0x24
 8021f8a:	3302      	adds	r3, #2
 8021f8c:	9309      	str	r3, [sp, #36]	; 0x24
 8021f8e:	e658      	b.n	8021c42 <_ZN8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x56>
 8021f90:	d028      	beq.n	8021fe4 <_ZN8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x3f8>
 8021f92:	9b08      	ldr	r3, [sp, #32]
 8021f94:	9823      	ldr	r0, [sp, #140]	; 0x8c
 8021f96:	9d21      	ldr	r5, [sp, #132]	; 0x84
 8021f98:	3b01      	subs	r3, #1
 8021f9a:	fb00 5003 	mla	r0, r0, r3, r5
 8021f9e:	1400      	asrs	r0, r0, #16
 8021fa0:	f53f ae6c 	bmi.w	8021c7c <_ZN8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x90>
 8021fa4:	3901      	subs	r1, #1
 8021fa6:	4288      	cmp	r0, r1
 8021fa8:	f6bf ae68 	bge.w	8021c7c <_ZN8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x90>
 8021fac:	9924      	ldr	r1, [sp, #144]	; 0x90
 8021fae:	9822      	ldr	r0, [sp, #136]	; 0x88
 8021fb0:	fb01 0303 	mla	r3, r1, r3, r0
 8021fb4:	141b      	asrs	r3, r3, #16
 8021fb6:	f53f ae61 	bmi.w	8021c7c <_ZN8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x90>
 8021fba:	3a01      	subs	r2, #1
 8021fbc:	4293      	cmp	r3, r2
 8021fbe:	f6bf ae5d 	bge.w	8021c7c <_ZN8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x90>
 8021fc2:	9b08      	ldr	r3, [sp, #32]
 8021fc4:	f8dd e024 	ldr.w	lr, [sp, #36]	; 0x24
 8021fc8:	9313      	str	r3, [sp, #76]	; 0x4c
 8021fca:	f64f 061f 	movw	r6, #63519	; 0xf81f
 8021fce:	9b13      	ldr	r3, [sp, #76]	; 0x4c
 8021fd0:	2b00      	cmp	r3, #0
 8021fd2:	f300 8082 	bgt.w	80220da <_ZN8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x4ee>
 8021fd6:	9b08      	ldr	r3, [sp, #32]
 8021fd8:	ea23 74e3 	bic.w	r4, r3, r3, asr #31
 8021fdc:	9b09      	ldr	r3, [sp, #36]	; 0x24
 8021fde:	eb03 0344 	add.w	r3, r3, r4, lsl #1
 8021fe2:	9309      	str	r3, [sp, #36]	; 0x24
 8021fe4:	9b11      	ldr	r3, [sp, #68]	; 0x44
 8021fe6:	2b00      	cmp	r3, #0
 8021fe8:	f340 81ef 	ble.w	80223ca <_ZN8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x7de>
 8021fec:	ee30 0a04 	vadd.f32	s0, s0, s8
 8021ff0:	eeb7 7a00 	vmov.f32	s14, #112	; 0x3f800000  1.0
 8021ff4:	eec7 7a00 	vdiv.f32	s15, s14, s0
 8021ff8:	9b20      	ldr	r3, [sp, #128]	; 0x80
 8021ffa:	ee70 0aa4 	vadd.f32	s1, s1, s9
 8021ffe:	ee31 1a05 	vadd.f32	s2, s2, s10
 8022002:	ee20 7aa7 	vmul.f32	s14, s1, s15
 8022006:	eef0 6a62 	vmov.f32	s13, s5
 802200a:	ee61 7a27 	vmul.f32	s15, s2, s15
 802200e:	eefe 6ac8 	vcvt.s32.f32	s13, s13, #16
 8022012:	ee77 2a62 	vsub.f32	s5, s14, s5
 8022016:	edcd 6a21 	vstr	s13, [sp, #132]	; 0x84
 802201a:	eefe 2ac8 	vcvt.s32.f32	s5, s5, #16
 802201e:	eef0 6a43 	vmov.f32	s13, s6
 8022022:	ee37 3ac3 	vsub.f32	s6, s15, s6
 8022026:	ee12 2a90 	vmov	r2, s5
 802202a:	eebe 3ac8 	vcvt.s32.f32	s6, s6, #16
 802202e:	fb92 f3f3 	sdiv	r3, r2, r3
 8022032:	ee13 2a10 	vmov	r2, s6
 8022036:	9323      	str	r3, [sp, #140]	; 0x8c
 8022038:	9b20      	ldr	r3, [sp, #128]	; 0x80
 802203a:	fb92 f3f3 	sdiv	r3, r2, r3
 802203e:	9324      	str	r3, [sp, #144]	; 0x90
 8022040:	9b11      	ldr	r3, [sp, #68]	; 0x44
 8022042:	9a14      	ldr	r2, [sp, #80]	; 0x50
 8022044:	3b01      	subs	r3, #1
 8022046:	eefe 6ac8 	vcvt.s32.f32	s13, s13, #16
 802204a:	9311      	str	r3, [sp, #68]	; 0x44
 802204c:	9b20      	ldr	r3, [sp, #128]	; 0x80
 802204e:	edcd 6a22 	vstr	s13, [sp, #136]	; 0x88
 8022052:	bf08      	it	eq
 8022054:	4613      	moveq	r3, r2
 8022056:	9308      	str	r3, [sp, #32]
 8022058:	eeb0 3a67 	vmov.f32	s6, s15
 802205c:	eef0 2a47 	vmov.f32	s5, s14
 8022060:	e5e1      	b.n	8021c26 <_ZN8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x3a>
 8022062:	fb08 f505 	mul.w	r5, r8, r5
 8022066:	fb09 5303 	mla	r3, r9, r3, r5
 802206a:	e661      	b.n	8021d30 <_ZN8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x144>
 802206c:	4681      	mov	r9, r0
 802206e:	e688      	b.n	8021d82 <_ZN8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x196>
 8022070:	f1c1 0210 	rsb	r2, r1, #16
 8022074:	4341      	muls	r1, r0
 8022076:	fb09 1902 	mla	r9, r9, r2, r1
 802207a:	ea4f 0949 	mov.w	r9, r9, lsl #1
 802207e:	ea4f 5259 	mov.w	r2, r9, lsr #21
 8022082:	ea4f 1959 	mov.w	r9, r9, lsr #5
 8022086:	f402 62fc 	and.w	r2, r2, #2016	; 0x7e0
 802208a:	f429 69fc 	bic.w	r9, r9, #2016	; 0x7e0
 802208e:	ea42 0909 	orr.w	r9, r2, r9
 8022092:	fa1f f289 	uxth.w	r2, r9
 8022096:	e71b      	b.n	8021ed0 <_ZN8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x2e4>
 8022098:	803a      	strh	r2, [r7, #0]
 802209a:	e75d      	b.n	8021f58 <_ZN8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x36c>
 802209c:	f115 0e01 	adds.w	lr, r5, #1
 80220a0:	f53f af5a 	bmi.w	8021f58 <_ZN8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x36c>
 80220a4:	4572      	cmp	r2, lr
 80220a6:	f6ff af57 	blt.w	8021f58 <_ZN8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x36c>
 80220aa:	f110 0e01 	adds.w	lr, r0, #1
 80220ae:	f53f af53 	bmi.w	8021f58 <_ZN8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x36c>
 80220b2:	4573      	cmp	r3, lr
 80220b4:	f6ff af50 	blt.w	8021f58 <_ZN8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x36c>
 80220b8:	9c12      	ldr	r4, [sp, #72]	; 0x48
 80220ba:	9502      	str	r5, [sp, #8]
 80220bc:	b21b      	sxth	r3, r3
 80220be:	b212      	sxth	r2, r2
 80220c0:	e9cd 0103 	strd	r0, r1, [sp, #12]
 80220c4:	9301      	str	r3, [sp, #4]
 80220c6:	9200      	str	r2, [sp, #0]
 80220c8:	e9cd c405 	strd	ip, r4, [sp, #20]
 80220cc:	e9dd 230b 	ldrd	r2, r3, [sp, #44]	; 0x2c
 80220d0:	4639      	mov	r1, r7
 80220d2:	9815      	ldr	r0, [sp, #84]	; 0x54
 80220d4:	f7ff fc04 	bl	80218e0 <_ZNK8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKtPKhssiihhh>
 80220d8:	e73e      	b.n	8021f58 <_ZN8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x36c>
 80220da:	9b21      	ldr	r3, [sp, #132]	; 0x84
 80220dc:	f3c3 3203 	ubfx	r2, r3, #12, #4
 80220e0:	9b22      	ldr	r3, [sp, #136]	; 0x88
 80220e2:	f3c3 3503 	ubfx	r5, r3, #12, #4
 80220e6:	9b28      	ldr	r3, [sp, #160]	; 0xa0
 80220e8:	f9b3 1008 	ldrsh.w	r1, [r3, #8]
 80220ec:	9b22      	ldr	r3, [sp, #136]	; 0x88
 80220ee:	141f      	asrs	r7, r3, #16
 80220f0:	9b21      	ldr	r3, [sp, #132]	; 0x84
 80220f2:	141b      	asrs	r3, r3, #16
 80220f4:	fb01 3707 	mla	r7, r1, r7, r3
 80220f8:	9b0c      	ldr	r3, [sp, #48]	; 0x30
 80220fa:	fa1f fc82 	uxth.w	ip, r2
 80220fe:	eb03 0a07 	add.w	sl, r3, r7
 8022102:	ea4f 100c 	mov.w	r0, ip, lsl #4
 8022106:	f813 9007 	ldrb.w	r9, [r3, r7]
 802210a:	f89a 8001 	ldrb.w	r8, [sl, #1]
 802210e:	f5c0 7380 	rsb	r3, r0, #256	; 0x100
 8022112:	b29b      	uxth	r3, r3
 8022114:	2d00      	cmp	r5, #0
 8022116:	f000 813d 	beq.w	8022394 <_ZN8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x7a8>
 802211a:	f81a 4001 	ldrb.w	r4, [sl, r1]
 802211e:	940f      	str	r4, [sp, #60]	; 0x3c
 8022120:	eb0a 0b01 	add.w	fp, sl, r1
 8022124:	fa1f fa85 	uxth.w	sl, r5
 8022128:	fb0a fc0c 	mul.w	ip, sl, ip
 802212c:	ebcc 1a0a 	rsb	sl, ip, sl, lsl #4
 8022130:	fa1f fa8a 	uxth.w	sl, sl
 8022134:	eba0 000c 	sub.w	r0, r0, ip
 8022138:	eba3 030a 	sub.w	r3, r3, sl
 802213c:	b280      	uxth	r0, r0
 802213e:	fb08 f000 	mul.w	r0, r8, r0
 8022142:	b29b      	uxth	r3, r3
 8022144:	fb09 0303 	mla	r3, r9, r3, r0
 8022148:	980f      	ldr	r0, [sp, #60]	; 0x3c
 802214a:	f89b 4001 	ldrb.w	r4, [fp, #1]
 802214e:	9410      	str	r4, [sp, #64]	; 0x40
 8022150:	fb0a 3300 	mla	r3, sl, r0, r3
 8022154:	fb0c 3304 	mla	r3, ip, r4, r3
 8022158:	f3c3 2307 	ubfx	r3, r3, #8, #8
 802215c:	2b00      	cmp	r3, #0
 802215e:	f000 810b 	beq.w	8022378 <_ZN8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x78c>
 8022162:	980b      	ldr	r0, [sp, #44]	; 0x2c
 8022164:	9c0b      	ldr	r4, [sp, #44]	; 0x2c
 8022166:	f1b9 0fff 	cmp.w	r9, #255	; 0xff
 802216a:	eb00 0047 	add.w	r0, r0, r7, lsl #1
 802216e:	f834 7017 	ldrh.w	r7, [r4, r7, lsl #1]
 8022172:	f000 8114 	beq.w	802239e <_ZN8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x7b2>
 8022176:	f427 6cfc 	bic.w	ip, r7, #2016	; 0x7e0
 802217a:	ea4f 0ae9 	mov.w	sl, r9, asr #3
 802217e:	f407 67fc 	and.w	r7, r7, #2016	; 0x7e0
 8022182:	fb09 f707 	mul.w	r7, r9, r7
 8022186:	fb0a fc0c 	mul.w	ip, sl, ip
 802218a:	ea06 195c 	and.w	r9, r6, ip, lsr #5
 802218e:	f107 0b20 	add.w	fp, r7, #32
 8022192:	f60c 0c01 	addw	ip, ip, #2049	; 0x801
 8022196:	44cc      	add	ip, r9
 8022198:	eb0b 2917 	add.w	r9, fp, r7, lsr #8
 802219c:	ea4f 2919 	mov.w	r9, r9, lsr #8
 80221a0:	ea06 1c5c 	and.w	ip, r6, ip, lsr #5
 80221a4:	f409 69fc 	and.w	r9, r9, #2016	; 0x7e0
 80221a8:	ea4c 0909 	orr.w	r9, ip, r9
 80221ac:	f1b8 0fff 	cmp.w	r8, #255	; 0xff
 80221b0:	8847      	ldrh	r7, [r0, #2]
 80221b2:	d019      	beq.n	80221e8 <_ZN8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x5fc>
 80221b4:	f427 6cfc 	bic.w	ip, r7, #2016	; 0x7e0
 80221b8:	ea4f 0ae8 	mov.w	sl, r8, asr #3
 80221bc:	f407 67fc 	and.w	r7, r7, #2016	; 0x7e0
 80221c0:	fb08 f807 	mul.w	r8, r8, r7
 80221c4:	fb0a fc0c 	mul.w	ip, sl, ip
 80221c8:	ea06 175c 	and.w	r7, r6, ip, lsr #5
 80221cc:	f108 0b20 	add.w	fp, r8, #32
 80221d0:	f60c 0c01 	addw	ip, ip, #2049	; 0x801
 80221d4:	44bc      	add	ip, r7
 80221d6:	eb0b 2718 	add.w	r7, fp, r8, lsr #8
 80221da:	0a3f      	lsrs	r7, r7, #8
 80221dc:	ea06 1c5c 	and.w	ip, r6, ip, lsr #5
 80221e0:	f407 67fc 	and.w	r7, r7, #2016	; 0x7e0
 80221e4:	ea4c 0707 	orr.w	r7, ip, r7
 80221e8:	ea4f 4c09 	mov.w	ip, r9, lsl #16
 80221ec:	ea4f 4a07 	mov.w	sl, r7, lsl #16
 80221f0:	f00c 6cfc 	and.w	ip, ip, #132120576	; 0x7e00000
 80221f4:	f429 69fc 	bic.w	r9, r9, #2016	; 0x7e0
 80221f8:	f00a 6afc 	and.w	sl, sl, #132120576	; 0x7e00000
 80221fc:	f427 67fc 	bic.w	r7, r7, #2016	; 0x7e0
 8022200:	ea4c 0909 	orr.w	r9, ip, r9
 8022204:	ea4a 0707 	orr.w	r7, sl, r7
 8022208:	2d00      	cmp	r5, #0
 802220a:	f000 80ca 	beq.w	80223a2 <_ZN8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x7b6>
 802220e:	f101 4100 	add.w	r1, r1, #2147483648	; 0x80000000
 8022212:	3901      	subs	r1, #1
 8022214:	0049      	lsls	r1, r1, #1
 8022216:	3102      	adds	r1, #2
 8022218:	eb00 0c01 	add.w	ip, r0, r1
 802221c:	5a41      	ldrh	r1, [r0, r1]
 802221e:	980f      	ldr	r0, [sp, #60]	; 0x3c
 8022220:	28ff      	cmp	r0, #255	; 0xff
 8022222:	d019      	beq.n	8022258 <_ZN8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x66c>
 8022224:	9c0f      	ldr	r4, [sp, #60]	; 0x3c
 8022226:	f421 60fc 	bic.w	r0, r1, #2016	; 0x7e0
 802222a:	f401 61fc 	and.w	r1, r1, #2016	; 0x7e0
 802222e:	fb04 fa01 	mul.w	sl, r4, r1
 8022232:	ea4f 08e4 	mov.w	r8, r4, asr #3
 8022236:	fb08 f800 	mul.w	r8, r8, r0
 802223a:	f10a 0020 	add.w	r0, sl, #32
 802223e:	ea06 1158 	and.w	r1, r6, r8, lsr #5
 8022242:	eb00 201a 	add.w	r0, r0, sl, lsr #8
 8022246:	f608 0801 	addw	r8, r8, #2049	; 0x801
 802224a:	4441      	add	r1, r8
 802224c:	0a00      	lsrs	r0, r0, #8
 802224e:	ea06 1151 	and.w	r1, r6, r1, lsr #5
 8022252:	f400 60fc 	and.w	r0, r0, #2016	; 0x7e0
 8022256:	4301      	orrs	r1, r0
 8022258:	9c10      	ldr	r4, [sp, #64]	; 0x40
 802225a:	f8bc 0002 	ldrh.w	r0, [ip, #2]
 802225e:	2cff      	cmp	r4, #255	; 0xff
 8022260:	d01a      	beq.n	8022298 <_ZN8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x6ac>
 8022262:	f420 6cfc 	bic.w	ip, r0, #2016	; 0x7e0
 8022266:	f400 60fc 	and.w	r0, r0, #2016	; 0x7e0
 802226a:	fb04 fa00 	mul.w	sl, r4, r0
 802226e:	ea4f 08e4 	mov.w	r8, r4, asr #3
 8022272:	fb08 f80c 	mul.w	r8, r8, ip
 8022276:	f10a 0c20 	add.w	ip, sl, #32
 802227a:	ea06 1058 	and.w	r0, r6, r8, lsr #5
 802227e:	eb0c 2c1a 	add.w	ip, ip, sl, lsr #8
 8022282:	f608 0801 	addw	r8, r8, #2049	; 0x801
 8022286:	4440      	add	r0, r8
 8022288:	ea4f 2c1c 	mov.w	ip, ip, lsr #8
 802228c:	ea06 1050 	and.w	r0, r6, r0, lsr #5
 8022290:	f40c 6cfc 	and.w	ip, ip, #2016	; 0x7e0
 8022294:	ea40 000c 	orr.w	r0, r0, ip
 8022298:	fb15 fc02 	smulbb	ip, r5, r2
 802229c:	ea4f 0cec 	mov.w	ip, ip, asr #3
 80222a0:	f1c5 0810 	rsb	r8, r5, #16
 80222a4:	eba8 0802 	sub.w	r8, r8, r2
 80222a8:	ea4f 4a01 	mov.w	sl, r1, lsl #16
 80222ac:	ebcc 0242 	rsb	r2, ip, r2, lsl #1
 80222b0:	437a      	muls	r2, r7
 80222b2:	ea4f 4b00 	mov.w	fp, r0, lsl #16
 80222b6:	eb0c 0848 	add.w	r8, ip, r8, lsl #1
 80222ba:	f00a 6afc 	and.w	sl, sl, #132120576	; 0x7e00000
 80222be:	f421 61fc 	bic.w	r1, r1, #2016	; 0x7e0
 80222c2:	fb09 2208 	mla	r2, r9, r8, r2
 80222c6:	ea4a 0101 	orr.w	r1, sl, r1
 80222ca:	ebcc 0545 	rsb	r5, ip, r5, lsl #1
 80222ce:	f00b 6bfc 	and.w	fp, fp, #132120576	; 0x7e00000
 80222d2:	f420 60fc 	bic.w	r0, r0, #2016	; 0x7e0
 80222d6:	fb05 2201 	mla	r2, r5, r1, r2
 80222da:	ea4b 0000 	orr.w	r0, fp, r0
 80222de:	fb0c 2200 	mla	r2, ip, r0, r2
 80222e2:	0d57      	lsrs	r7, r2, #21
 80222e4:	0952      	lsrs	r2, r2, #5
 80222e6:	f407 67fc 	and.w	r7, r7, #2016	; 0x7e0
 80222ea:	f422 62fc 	bic.w	r2, r2, #2016	; 0x7e0
 80222ee:	433a      	orrs	r2, r7
 80222f0:	2bff      	cmp	r3, #255	; 0xff
 80222f2:	b292      	uxth	r2, r2
 80222f4:	d102      	bne.n	80222fc <_ZN8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x710>
 80222f6:	9912      	ldr	r1, [sp, #72]	; 0x48
 80222f8:	29ff      	cmp	r1, #255	; 0xff
 80222fa:	d063      	beq.n	80223c4 <_ZN8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x7d8>
 80222fc:	980a      	ldr	r0, [sp, #40]	; 0x28
 80222fe:	f8be 1000 	ldrh.w	r1, [lr]
 8022302:	9c0a      	ldr	r4, [sp, #40]	; 0x28
 8022304:	4343      	muls	r3, r0
 8022306:	1c58      	adds	r0, r3, #1
 8022308:	eb00 2323 	add.w	r3, r0, r3, asr #8
 802230c:	ea6f 2323 	mvn.w	r3, r3, asr #8
 8022310:	1208      	asrs	r0, r1, #8
 8022312:	b2db      	uxtb	r3, r3
 8022314:	1215      	asrs	r5, r2, #8
 8022316:	f000 00f8 	and.w	r0, r0, #248	; 0xf8
 802231a:	fb10 f003 	smulbb	r0, r0, r3
 802231e:	10cf      	asrs	r7, r1, #3
 8022320:	f005 05f8 	and.w	r5, r5, #248	; 0xf8
 8022324:	00c9      	lsls	r1, r1, #3
 8022326:	fb05 0504 	mla	r5, r5, r4, r0
 802232a:	b2c9      	uxtb	r1, r1
 802232c:	10d0      	asrs	r0, r2, #3
 802232e:	00d2      	lsls	r2, r2, #3
 8022330:	fb11 f103 	smulbb	r1, r1, r3
 8022334:	b2d2      	uxtb	r2, r2
 8022336:	f007 07fc 	and.w	r7, r7, #252	; 0xfc
 802233a:	fb02 1204 	mla	r2, r2, r4, r1
 802233e:	fb17 f703 	smulbb	r7, r7, r3
 8022342:	b2ad      	uxth	r5, r5
 8022344:	b292      	uxth	r2, r2
 8022346:	f000 00fc 	and.w	r0, r0, #252	; 0xfc
 802234a:	fb00 7004 	mla	r0, r0, r4, r7
 802234e:	1c6b      	adds	r3, r5, #1
 8022350:	1c57      	adds	r7, r2, #1
 8022352:	eb03 2515 	add.w	r5, r3, r5, lsr #8
 8022356:	eb07 2712 	add.w	r7, r7, r2, lsr #8
 802235a:	b280      	uxth	r0, r0
 802235c:	f3c7 27c4 	ubfx	r7, r7, #11, #5
 8022360:	f405 4578 	and.w	r5, r5, #63488	; 0xf800
 8022364:	433d      	orrs	r5, r7
 8022366:	1c47      	adds	r7, r0, #1
 8022368:	eb07 2710 	add.w	r7, r7, r0, lsr #8
 802236c:	097f      	lsrs	r7, r7, #5
 802236e:	f407 67fc 	and.w	r7, r7, #2016	; 0x7e0
 8022372:	433d      	orrs	r5, r7
 8022374:	f8ae 5000 	strh.w	r5, [lr]
 8022378:	9b21      	ldr	r3, [sp, #132]	; 0x84
 802237a:	9a23      	ldr	r2, [sp, #140]	; 0x8c
 802237c:	4413      	add	r3, r2
 802237e:	9321      	str	r3, [sp, #132]	; 0x84
 8022380:	9a22      	ldr	r2, [sp, #136]	; 0x88
 8022382:	9b24      	ldr	r3, [sp, #144]	; 0x90
 8022384:	441a      	add	r2, r3
 8022386:	9b13      	ldr	r3, [sp, #76]	; 0x4c
 8022388:	9222      	str	r2, [sp, #136]	; 0x88
 802238a:	3b01      	subs	r3, #1
 802238c:	f10e 0e02 	add.w	lr, lr, #2
 8022390:	9313      	str	r3, [sp, #76]	; 0x4c
 8022392:	e61c      	b.n	8021fce <_ZN8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x3e2>
 8022394:	fb08 f000 	mul.w	r0, r8, r0
 8022398:	fb09 0303 	mla	r3, r9, r3, r0
 802239c:	e6dc      	b.n	8022158 <_ZN8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x56c>
 802239e:	46b9      	mov	r9, r7
 80223a0:	e704      	b.n	80221ac <_ZN8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x5c0>
 80223a2:	f1c2 0110 	rsb	r1, r2, #16
 80223a6:	437a      	muls	r2, r7
 80223a8:	fb09 2901 	mla	r9, r9, r1, r2
 80223ac:	ea4f 0949 	mov.w	r9, r9, lsl #1
 80223b0:	ea4f 5059 	mov.w	r0, r9, lsr #21
 80223b4:	ea4f 1259 	mov.w	r2, r9, lsr #5
 80223b8:	f400 60fc 	and.w	r0, r0, #2016	; 0x7e0
 80223bc:	f422 62fc 	bic.w	r2, r2, #2016	; 0x7e0
 80223c0:	4302      	orrs	r2, r0
 80223c2:	e795      	b.n	80222f0 <_ZN8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x704>
 80223c4:	f8ae 2000 	strh.w	r2, [lr]
 80223c8:	e7d6      	b.n	8022378 <_ZN8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x78c>
 80223ca:	b017      	add	sp, #92	; 0x5c
 80223cc:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}

080223d0 <_ZNK8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhPKtssiihh>:
 80223d0:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 80223d4:	b085      	sub	sp, #20
 80223d6:	e9dd 7010 	ldrd	r7, r0, [sp, #64]	; 0x40
 80223da:	f9bd 6038 	ldrsh.w	r6, [sp, #56]	; 0x38
 80223de:	9103      	str	r1, [sp, #12]
 80223e0:	fb00 7406 	mla	r4, r0, r6, r7
 80223e4:	eb03 0544 	add.w	r5, r3, r4, lsl #1
 80223e8:	2800      	cmp	r0, #0
 80223ea:	f9bd b03c 	ldrsh.w	fp, [sp, #60]	; 0x3c
 80223ee:	f89d 1048 	ldrb.w	r1, [sp, #72]	; 0x48
 80223f2:	f89d e04c 	ldrb.w	lr, [sp, #76]	; 0x4c
 80223f6:	9501      	str	r5, [sp, #4]
 80223f8:	eb02 0904 	add.w	r9, r2, r4
 80223fc:	f2c0 8141 	blt.w	8022682 <_ZNK8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhPKtssiihh+0x2b2>
 8022400:	4583      	cmp	fp, r0
 8022402:	f340 813e 	ble.w	8022682 <_ZNK8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhPKtssiihh+0x2b2>
 8022406:	2f00      	cmp	r7, #0
 8022408:	f2c0 8137 	blt.w	802267a <_ZNK8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhPKtssiihh+0x2aa>
 802240c:	42be      	cmp	r6, r7
 802240e:	f340 8134 	ble.w	802267a <_ZNK8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhPKtssiihh+0x2aa>
 8022412:	f812 c004 	ldrb.w	ip, [r2, r4]
 8022416:	f833 3014 	ldrh.w	r3, [r3, r4, lsl #1]
 802241a:	ea4f 02ec 	mov.w	r2, ip, asr #3
 802241e:	f423 65fc 	bic.w	r5, r3, #2016	; 0x7e0
 8022422:	4355      	muls	r5, r2
 8022424:	f403 63fc 	and.w	r3, r3, #2016	; 0x7e0
 8022428:	f64f 041f 	movw	r4, #63519	; 0xf81f
 802242c:	fb0c f203 	mul.w	r2, ip, r3
 8022430:	ea04 1355 	and.w	r3, r4, r5, lsr #5
 8022434:	f605 0501 	addw	r5, r5, #2049	; 0x801
 8022438:	441d      	add	r5, r3
 802243a:	f102 0320 	add.w	r3, r2, #32
 802243e:	eb03 2312 	add.w	r3, r3, r2, lsr #8
 8022442:	0a1b      	lsrs	r3, r3, #8
 8022444:	ea04 1455 	and.w	r4, r4, r5, lsr #5
 8022448:	f403 63fc 	and.w	r3, r3, #2016	; 0x7e0
 802244c:	431c      	orrs	r4, r3
 802244e:	1c7b      	adds	r3, r7, #1
 8022450:	f100 811c 	bmi.w	802268c <_ZNK8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhPKtssiihh+0x2bc>
 8022454:	429e      	cmp	r6, r3
 8022456:	f340 8119 	ble.w	802268c <_ZNK8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhPKtssiihh+0x2bc>
 802245a:	2900      	cmp	r1, #0
 802245c:	f000 8119 	beq.w	8022692 <_ZNK8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhPKtssiihh+0x2c2>
 8022460:	9a01      	ldr	r2, [sp, #4]
 8022462:	f899 3001 	ldrb.w	r3, [r9, #1]
 8022466:	8855      	ldrh	r5, [r2, #2]
 8022468:	ea4f 08e3 	mov.w	r8, r3, asr #3
 802246c:	f425 62fc 	bic.w	r2, r5, #2016	; 0x7e0
 8022470:	fb08 f802 	mul.w	r8, r8, r2
 8022474:	f405 65fc 	and.w	r5, r5, #2016	; 0x7e0
 8022478:	f64f 021f 	movw	r2, #63519	; 0xf81f
 802247c:	ea02 1a58 	and.w	sl, r2, r8, lsr #5
 8022480:	435d      	muls	r5, r3
 8022482:	f608 0801 	addw	r8, r8, #2049	; 0x801
 8022486:	44d0      	add	r8, sl
 8022488:	f105 0a20 	add.w	sl, r5, #32
 802248c:	eb0a 2515 	add.w	r5, sl, r5, lsr #8
 8022490:	0a2d      	lsrs	r5, r5, #8
 8022492:	ea02 1258 	and.w	r2, r2, r8, lsr #5
 8022496:	f405 65fc 	and.w	r5, r5, #2016	; 0x7e0
 802249a:	432a      	orrs	r2, r5
 802249c:	3001      	adds	r0, #1
 802249e:	f100 80fe 	bmi.w	802269e <_ZNK8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhPKtssiihh+0x2ce>
 80224a2:	4583      	cmp	fp, r0
 80224a4:	f340 80fb 	ble.w	802269e <_ZNK8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhPKtssiihh+0x2ce>
 80224a8:	f1be 0f00 	cmp.w	lr, #0
 80224ac:	f000 80fc 	beq.w	80226a8 <_ZNK8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhPKtssiihh+0x2d8>
 80224b0:	2f00      	cmp	r7, #0
 80224b2:	f2c0 80f1 	blt.w	8022698 <_ZNK8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhPKtssiihh+0x2c8>
 80224b6:	42be      	cmp	r6, r7
 80224b8:	f340 80ee 	ble.w	8022698 <_ZNK8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhPKtssiihh+0x2c8>
 80224bc:	9801      	ldr	r0, [sp, #4]
 80224be:	f819 5006 	ldrb.w	r5, [r9, r6]
 80224c2:	f830 8016 	ldrh.w	r8, [r0, r6, lsl #1]
 80224c6:	ea4f 0ae5 	mov.w	sl, r5, asr #3
 80224ca:	f428 60fc 	bic.w	r0, r8, #2016	; 0x7e0
 80224ce:	fb0a fa00 	mul.w	sl, sl, r0
 80224d2:	f64f 0b1f 	movw	fp, #63519	; 0xf81f
 80224d6:	f408 68fc 	and.w	r8, r8, #2016	; 0x7e0
 80224da:	ea0b 105a 	and.w	r0, fp, sl, lsr #5
 80224de:	fb05 f808 	mul.w	r8, r5, r8
 80224e2:	f60a 0a01 	addw	sl, sl, #2049	; 0x801
 80224e6:	4482      	add	sl, r0
 80224e8:	f108 0020 	add.w	r0, r8, #32
 80224ec:	eb00 2018 	add.w	r0, r0, r8, lsr #8
 80224f0:	0a00      	lsrs	r0, r0, #8
 80224f2:	ea0b 1b5a 	and.w	fp, fp, sl, lsr #5
 80224f6:	f400 60fc 	and.w	r0, r0, #2016	; 0x7e0
 80224fa:	ea4b 0b00 	orr.w	fp, fp, r0
 80224fe:	3701      	adds	r7, #1
 8022500:	f100 80d7 	bmi.w	80226b2 <_ZNK8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhPKtssiihh+0x2e2>
 8022504:	42be      	cmp	r6, r7
 8022506:	f340 80d4 	ble.w	80226b2 <_ZNK8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhPKtssiihh+0x2e2>
 802250a:	2900      	cmp	r1, #0
 802250c:	f000 80d4 	beq.w	80226b8 <_ZNK8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhPKtssiihh+0x2e8>
 8022510:	3601      	adds	r6, #1
 8022512:	9801      	ldr	r0, [sp, #4]
 8022514:	f819 7006 	ldrb.w	r7, [r9, r6]
 8022518:	f830 0016 	ldrh.w	r0, [r0, r6, lsl #1]
 802251c:	ea4f 09e7 	mov.w	r9, r7, asr #3
 8022520:	f420 66fc 	bic.w	r6, r0, #2016	; 0x7e0
 8022524:	f400 60fc 	and.w	r0, r0, #2016	; 0x7e0
 8022528:	fb09 f906 	mul.w	r9, r9, r6
 802252c:	fb07 f800 	mul.w	r8, r7, r0
 8022530:	f64f 001f 	movw	r0, #63519	; 0xf81f
 8022534:	ea00 1a59 	and.w	sl, r0, r9, lsr #5
 8022538:	f609 0901 	addw	r9, r9, #2049	; 0x801
 802253c:	44d1      	add	r9, sl
 802253e:	ea00 1659 	and.w	r6, r0, r9, lsr #5
 8022542:	f108 0020 	add.w	r0, r8, #32
 8022546:	eb00 2018 	add.w	r0, r0, r8, lsr #8
 802254a:	0a00      	lsrs	r0, r0, #8
 802254c:	f400 60fc 	and.w	r0, r0, #2016	; 0x7e0
 8022550:	4330      	orrs	r0, r6
 8022552:	b28e      	uxth	r6, r1
 8022554:	fa1f f98e 	uxth.w	r9, lr
 8022558:	fb06 f809 	mul.w	r8, r6, r9
 802255c:	ea4f 4a04 	mov.w	sl, r4, lsl #16
 8022560:	ebc8 1909 	rsb	r9, r8, r9, lsl #4
 8022564:	0136      	lsls	r6, r6, #4
 8022566:	f00a 6afc 	and.w	sl, sl, #132120576	; 0x7e00000
 802256a:	f424 64fc 	bic.w	r4, r4, #2016	; 0x7e0
 802256e:	9601      	str	r6, [sp, #4]
 8022570:	ea4a 0404 	orr.w	r4, sl, r4
 8022574:	fa1f f689 	uxth.w	r6, r9
 8022578:	ea4f 4a02 	mov.w	sl, r2, lsl #16
 802257c:	fb11 f90e 	smulbb	r9, r1, lr
 8022580:	f3c9 09c7 	ubfx	r9, r9, #3, #8
 8022584:	9602      	str	r6, [sp, #8]
 8022586:	f00a 6afc 	and.w	sl, sl, #132120576	; 0x7e00000
 802258a:	4626      	mov	r6, r4
 802258c:	f422 62fc 	bic.w	r2, r2, #2016	; 0x7e0
 8022590:	f1ce 0410 	rsb	r4, lr, #16
 8022594:	1a64      	subs	r4, r4, r1
 8022596:	ea4a 0202 	orr.w	r2, sl, r2
 802259a:	ebc9 0141 	rsb	r1, r9, r1, lsl #1
 802259e:	ea4f 4a00 	mov.w	sl, r0, lsl #16
 80225a2:	434a      	muls	r2, r1
 80225a4:	eb09 0444 	add.w	r4, r9, r4, lsl #1
 80225a8:	f00a 6afc 	and.w	sl, sl, #132120576	; 0x7e00000
 80225ac:	f420 60fc 	bic.w	r0, r0, #2016	; 0x7e0
 80225b0:	fb04 2406 	mla	r4, r4, r6, r2
 80225b4:	ea4a 0000 	orr.w	r0, sl, r0
 80225b8:	fb09 4200 	mla	r2, r9, r0, r4
 80225bc:	ea4f 440b 	mov.w	r4, fp, lsl #16
 80225c0:	f004 64fc 	and.w	r4, r4, #132120576	; 0x7e00000
 80225c4:	9801      	ldr	r0, [sp, #4]
 80225c6:	9903      	ldr	r1, [sp, #12]
 80225c8:	f42b 6bfc 	bic.w	fp, fp, #2016	; 0x7e0
 80225cc:	ea44 0b0b 	orr.w	fp, r4, fp
 80225d0:	9c02      	ldr	r4, [sp, #8]
 80225d2:	8809      	ldrh	r1, [r1, #0]
 80225d4:	f5c0 7080 	rsb	r0, r0, #256	; 0x100
 80225d8:	1b00      	subs	r0, r0, r4
 80225da:	9c01      	ldr	r4, [sp, #4]
 80225dc:	eba4 0608 	sub.w	r6, r4, r8
 80225e0:	b2b6      	uxth	r6, r6
 80225e2:	b280      	uxth	r0, r0
 80225e4:	4373      	muls	r3, r6
 80225e6:	fb0c 3300 	mla	r3, ip, r0, r3
 80225ea:	9802      	ldr	r0, [sp, #8]
 80225ec:	ebc9 0e4e 	rsb	lr, r9, lr, lsl #1
 80225f0:	fb00 3505 	mla	r5, r0, r5, r3
 80225f4:	fb0e 2e0b 	mla	lr, lr, fp, r2
 80225f8:	fb08 5707 	mla	r7, r8, r7, r5
 80225fc:	ea4f 525e 	mov.w	r2, lr, lsr #21
 8022600:	120b      	asrs	r3, r1, #8
 8022602:	ea4f 1e5e 	mov.w	lr, lr, lsr #5
 8022606:	ea6f 2727 	mvn.w	r7, r7, asr #8
 802260a:	b2ff      	uxtb	r7, r7
 802260c:	f402 62fc 	and.w	r2, r2, #2016	; 0x7e0
 8022610:	10c8      	asrs	r0, r1, #3
 8022612:	f42e 6efc 	bic.w	lr, lr, #2016	; 0x7e0
 8022616:	f003 03f8 	and.w	r3, r3, #248	; 0xf8
 802261a:	00c9      	lsls	r1, r1, #3
 802261c:	437b      	muls	r3, r7
 802261e:	ea42 0e0e 	orr.w	lr, r2, lr
 8022622:	b2c9      	uxtb	r1, r1
 8022624:	f000 00fc 	and.w	r0, r0, #252	; 0xfc
 8022628:	fa1f f28e 	uxth.w	r2, lr
 802262c:	4378      	muls	r0, r7
 802262e:	434f      	muls	r7, r1
 8022630:	1c59      	adds	r1, r3, #1
 8022632:	eb01 2113 	add.w	r1, r1, r3, lsr #8
 8022636:	1213      	asrs	r3, r2, #8
 8022638:	f023 0307 	bic.w	r3, r3, #7
 802263c:	eb03 2311 	add.w	r3, r3, r1, lsr #8
 8022640:	1c41      	adds	r1, r0, #1
 8022642:	eb01 2010 	add.w	r0, r1, r0, lsr #8
 8022646:	10d1      	asrs	r1, r2, #3
 8022648:	f021 0103 	bic.w	r1, r1, #3
 802264c:	eb01 2110 	add.w	r1, r1, r0, lsr #8
 8022650:	021b      	lsls	r3, r3, #8
 8022652:	00c9      	lsls	r1, r1, #3
 8022654:	f401 61fc 	and.w	r1, r1, #2016	; 0x7e0
 8022658:	f403 4378 	and.w	r3, r3, #63488	; 0xf800
 802265c:	430b      	orrs	r3, r1
 802265e:	1c79      	adds	r1, r7, #1
 8022660:	eb01 2717 	add.w	r7, r1, r7, lsr #8
 8022664:	00d2      	lsls	r2, r2, #3
 8022666:	eb02 2217 	add.w	r2, r2, r7, lsr #8
 802266a:	f3c2 02c4 	ubfx	r2, r2, #3, #5
 802266e:	431a      	orrs	r2, r3
 8022670:	9b03      	ldr	r3, [sp, #12]
 8022672:	801a      	strh	r2, [r3, #0]
 8022674:	b005      	add	sp, #20
 8022676:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
 802267a:	f04f 0c00 	mov.w	ip, #0
 802267e:	4664      	mov	r4, ip
 8022680:	e6e5      	b.n	802244e <_ZNK8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhPKtssiihh+0x7e>
 8022682:	2300      	movs	r3, #0
 8022684:	469c      	mov	ip, r3
 8022686:	461a      	mov	r2, r3
 8022688:	461c      	mov	r4, r3
 802268a:	e707      	b.n	802249c <_ZNK8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhPKtssiihh+0xcc>
 802268c:	2300      	movs	r3, #0
 802268e:	461a      	mov	r2, r3
 8022690:	e704      	b.n	802249c <_ZNK8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhPKtssiihh+0xcc>
 8022692:	460b      	mov	r3, r1
 8022694:	460a      	mov	r2, r1
 8022696:	e701      	b.n	802249c <_ZNK8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhPKtssiihh+0xcc>
 8022698:	2500      	movs	r5, #0
 802269a:	46ab      	mov	fp, r5
 802269c:	e72f      	b.n	80224fe <_ZNK8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhPKtssiihh+0x12e>
 802269e:	2700      	movs	r7, #0
 80226a0:	463d      	mov	r5, r7
 80226a2:	4638      	mov	r0, r7
 80226a4:	46bb      	mov	fp, r7
 80226a6:	e754      	b.n	8022552 <_ZNK8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhPKtssiihh+0x182>
 80226a8:	4677      	mov	r7, lr
 80226aa:	4675      	mov	r5, lr
 80226ac:	4670      	mov	r0, lr
 80226ae:	46f3      	mov	fp, lr
 80226b0:	e74f      	b.n	8022552 <_ZNK8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhPKtssiihh+0x182>
 80226b2:	2700      	movs	r7, #0
 80226b4:	4638      	mov	r0, r7
 80226b6:	e74c      	b.n	8022552 <_ZNK8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhPKtssiihh+0x182>
 80226b8:	460f      	mov	r7, r1
 80226ba:	4608      	mov	r0, r1
 80226bc:	e749      	b.n	8022552 <_ZNK8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhPKtssiihh+0x182>
	...

080226c0 <_ZN8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff>:
 80226c0:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 80226c4:	b093      	sub	sp, #76	; 0x4c
 80226c6:	9210      	str	r2, [sp, #64]	; 0x40
 80226c8:	9a21      	ldr	r2, [sp, #132]	; 0x84
 80226ca:	910e      	str	r1, [sp, #56]	; 0x38
 80226cc:	9306      	str	r3, [sp, #24]
 80226ce:	e9dd 1322 	ldrd	r1, r3, [sp, #136]	; 0x88
 80226d2:	9011      	str	r0, [sp, #68]	; 0x44
 80226d4:	6850      	ldr	r0, [r2, #4]
 80226d6:	6812      	ldr	r2, [r2, #0]
 80226d8:	fb00 1303 	mla	r3, r0, r3, r1
 80226dc:	eb02 0343 	add.w	r3, r2, r3, lsl #1
 80226e0:	9307      	str	r3, [sp, #28]
 80226e2:	9b24      	ldr	r3, [sp, #144]	; 0x90
 80226e4:	681b      	ldr	r3, [r3, #0]
 80226e6:	9308      	str	r3, [sp, #32]
 80226e8:	9b24      	ldr	r3, [sp, #144]	; 0x90
 80226ea:	685b      	ldr	r3, [r3, #4]
 80226ec:	9309      	str	r3, [sp, #36]	; 0x24
 80226ee:	9b0e      	ldr	r3, [sp, #56]	; 0x38
 80226f0:	2b00      	cmp	r3, #0
 80226f2:	dc03      	bgt.n	80226fc <_ZN8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x3c>
 80226f4:	9b10      	ldr	r3, [sp, #64]	; 0x40
 80226f6:	2b00      	cmp	r3, #0
 80226f8:	f340 83b4 	ble.w	8022e64 <_ZN8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x7a4>
 80226fc:	9b24      	ldr	r3, [sp, #144]	; 0x90
 80226fe:	f9b3 1008 	ldrsh.w	r1, [r3, #8]
 8022702:	f9b3 200c 	ldrsh.w	r2, [r3, #12]
 8022706:	1e48      	subs	r0, r1, #1
 8022708:	1e55      	subs	r5, r2, #1
 802270a:	9b06      	ldr	r3, [sp, #24]
 802270c:	2b00      	cmp	r3, #0
 802270e:	f340 8163 	ble.w	80229d8 <_ZN8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x318>
 8022712:	9e1d      	ldr	r6, [sp, #116]	; 0x74
 8022714:	9b1e      	ldr	r3, [sp, #120]	; 0x78
 8022716:	1436      	asrs	r6, r6, #16
 8022718:	ea4f 4323 	mov.w	r3, r3, asr #16
 802271c:	d406      	bmi.n	802272c <_ZN8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x6c>
 802271e:	4286      	cmp	r6, r0
 8022720:	da04      	bge.n	802272c <_ZN8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x6c>
 8022722:	2b00      	cmp	r3, #0
 8022724:	db02      	blt.n	802272c <_ZN8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x6c>
 8022726:	42ab      	cmp	r3, r5
 8022728:	f2c0 8157 	blt.w	80229da <_ZN8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x31a>
 802272c:	3601      	adds	r6, #1
 802272e:	f100 8144 	bmi.w	80229ba <_ZN8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x2fa>
 8022732:	42b1      	cmp	r1, r6
 8022734:	f2c0 8141 	blt.w	80229ba <_ZN8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x2fa>
 8022738:	3301      	adds	r3, #1
 802273a:	f100 813e 	bmi.w	80229ba <_ZN8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x2fa>
 802273e:	429a      	cmp	r2, r3
 8022740:	f2c0 813b 	blt.w	80229ba <_ZN8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x2fa>
 8022744:	9b06      	ldr	r3, [sp, #24]
 8022746:	9f07      	ldr	r7, [sp, #28]
 8022748:	930f      	str	r3, [sp, #60]	; 0x3c
 802274a:	f64f 061f 	movw	r6, #63519	; 0xf81f
 802274e:	9b0f      	ldr	r3, [sp, #60]	; 0x3c
 8022750:	2b00      	cmp	r3, #0
 8022752:	f340 8164 	ble.w	8022a1e <_ZN8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x35e>
 8022756:	9b1e      	ldr	r3, [sp, #120]	; 0x78
 8022758:	9d1d      	ldr	r5, [sp, #116]	; 0x74
 802275a:	1418      	asrs	r0, r3, #16
 802275c:	9b1d      	ldr	r3, [sp, #116]	; 0x74
 802275e:	f3c3 3103 	ubfx	r1, r3, #12, #4
 8022762:	9b1e      	ldr	r3, [sp, #120]	; 0x78
 8022764:	f3c3 3c03 	ubfx	ip, r3, #12, #4
 8022768:	9b24      	ldr	r3, [sp, #144]	; 0x90
 802276a:	142d      	asrs	r5, r5, #16
 802276c:	e9d3 2302 	ldrd	r2, r3, [r3, #8]
 8022770:	f100 81ee 	bmi.w	8022b50 <_ZN8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x490>
 8022774:	f102 3eff 	add.w	lr, r2, #4294967295
 8022778:	4575      	cmp	r5, lr
 802277a:	f280 81e9 	bge.w	8022b50 <_ZN8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x490>
 802277e:	2800      	cmp	r0, #0
 8022780:	f2c0 81e6 	blt.w	8022b50 <_ZN8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x490>
 8022784:	f103 3eff 	add.w	lr, r3, #4294967295
 8022788:	4570      	cmp	r0, lr
 802278a:	f280 81e1 	bge.w	8022b50 <_ZN8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x490>
 802278e:	9b09      	ldr	r3, [sp, #36]	; 0x24
 8022790:	b212      	sxth	r2, r2
 8022792:	fb00 5002 	mla	r0, r0, r2, r5
 8022796:	fa1f fe81 	uxth.w	lr, r1
 802279a:	eb03 0a00 	add.w	sl, r3, r0
 802279e:	ea4f 150e 	mov.w	r5, lr, lsl #4
 80227a2:	f813 9000 	ldrb.w	r9, [r3, r0]
 80227a6:	f89a 8001 	ldrb.w	r8, [sl, #1]
 80227aa:	f5c5 7380 	rsb	r3, r5, #256	; 0x100
 80227ae:	b29b      	uxth	r3, r3
 80227b0:	f1bc 0f00 	cmp.w	ip, #0
 80227b4:	f000 8179 	beq.w	8022aaa <_ZN8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x3ea>
 80227b8:	f81a 4002 	ldrb.w	r4, [sl, r2]
 80227bc:	940a      	str	r4, [sp, #40]	; 0x28
 80227be:	eb0a 0b02 	add.w	fp, sl, r2
 80227c2:	fa1f fa8c 	uxth.w	sl, ip
 80227c6:	fb0a fe0e 	mul.w	lr, sl, lr
 80227ca:	ebce 1a0a 	rsb	sl, lr, sl, lsl #4
 80227ce:	fa1f fa8a 	uxth.w	sl, sl
 80227d2:	eba5 050e 	sub.w	r5, r5, lr
 80227d6:	f89b 4001 	ldrb.w	r4, [fp, #1]
 80227da:	940b      	str	r4, [sp, #44]	; 0x2c
 80227dc:	eba3 030a 	sub.w	r3, r3, sl
 80227e0:	b2ad      	uxth	r5, r5
 80227e2:	9c0a      	ldr	r4, [sp, #40]	; 0x28
 80227e4:	b29b      	uxth	r3, r3
 80227e6:	fb08 f505 	mul.w	r5, r8, r5
 80227ea:	fb09 5303 	mla	r3, r9, r3, r5
 80227ee:	fb0a 3304 	mla	r3, sl, r4, r3
 80227f2:	9c0b      	ldr	r4, [sp, #44]	; 0x2c
 80227f4:	fb0e 3304 	mla	r3, lr, r4, r3
 80227f8:	f3c3 2307 	ubfx	r3, r3, #8, #8
 80227fc:	2b00      	cmp	r3, #0
 80227fe:	f000 80cf 	beq.w	80229a0 <_ZN8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x2e0>
 8022802:	9c08      	ldr	r4, [sp, #32]
 8022804:	f1b9 0fff 	cmp.w	r9, #255	; 0xff
 8022808:	eb04 0540 	add.w	r5, r4, r0, lsl #1
 802280c:	f834 0010 	ldrh.w	r0, [r4, r0, lsl #1]
 8022810:	f000 8150 	beq.w	8022ab4 <_ZN8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x3f4>
 8022814:	f420 6efc 	bic.w	lr, r0, #2016	; 0x7e0
 8022818:	ea4f 0ae9 	mov.w	sl, r9, asr #3
 802281c:	f400 60fc 	and.w	r0, r0, #2016	; 0x7e0
 8022820:	fb09 f000 	mul.w	r0, r9, r0
 8022824:	fb0a fe0e 	mul.w	lr, sl, lr
 8022828:	ea06 195e 	and.w	r9, r6, lr, lsr #5
 802282c:	f100 0b20 	add.w	fp, r0, #32
 8022830:	f60e 0e01 	addw	lr, lr, #2049	; 0x801
 8022834:	44ce      	add	lr, r9
 8022836:	eb0b 2910 	add.w	r9, fp, r0, lsr #8
 802283a:	ea4f 2919 	mov.w	r9, r9, lsr #8
 802283e:	ea06 1e5e 	and.w	lr, r6, lr, lsr #5
 8022842:	f409 69fc 	and.w	r9, r9, #2016	; 0x7e0
 8022846:	ea4e 0909 	orr.w	r9, lr, r9
 802284a:	f1b8 0fff 	cmp.w	r8, #255	; 0xff
 802284e:	8868      	ldrh	r0, [r5, #2]
 8022850:	d019      	beq.n	8022886 <_ZN8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x1c6>
 8022852:	f420 6efc 	bic.w	lr, r0, #2016	; 0x7e0
 8022856:	ea4f 0ae8 	mov.w	sl, r8, asr #3
 802285a:	f400 60fc 	and.w	r0, r0, #2016	; 0x7e0
 802285e:	fb08 f800 	mul.w	r8, r8, r0
 8022862:	fb0a fe0e 	mul.w	lr, sl, lr
 8022866:	ea06 105e 	and.w	r0, r6, lr, lsr #5
 802286a:	f108 0b20 	add.w	fp, r8, #32
 802286e:	f60e 0e01 	addw	lr, lr, #2049	; 0x801
 8022872:	4486      	add	lr, r0
 8022874:	eb0b 2018 	add.w	r0, fp, r8, lsr #8
 8022878:	0a00      	lsrs	r0, r0, #8
 802287a:	ea06 1e5e 	and.w	lr, r6, lr, lsr #5
 802287e:	f400 60fc 	and.w	r0, r0, #2016	; 0x7e0
 8022882:	ea4e 0000 	orr.w	r0, lr, r0
 8022886:	ea4f 4e09 	mov.w	lr, r9, lsl #16
 802288a:	ea4f 4a00 	mov.w	sl, r0, lsl #16
 802288e:	f00e 6efc 	and.w	lr, lr, #132120576	; 0x7e00000
 8022892:	f429 69fc 	bic.w	r9, r9, #2016	; 0x7e0
 8022896:	f00a 6afc 	and.w	sl, sl, #132120576	; 0x7e00000
 802289a:	f420 60fc 	bic.w	r0, r0, #2016	; 0x7e0
 802289e:	ea4e 0909 	orr.w	r9, lr, r9
 80228a2:	ea4a 0000 	orr.w	r0, sl, r0
 80228a6:	f1bc 0f00 	cmp.w	ip, #0
 80228aa:	f000 8105 	beq.w	8022ab8 <_ZN8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x3f8>
 80228ae:	f102 4200 	add.w	r2, r2, #2147483648	; 0x80000000
 80228b2:	3a01      	subs	r2, #1
 80228b4:	0052      	lsls	r2, r2, #1
 80228b6:	9c0a      	ldr	r4, [sp, #40]	; 0x28
 80228b8:	3202      	adds	r2, #2
 80228ba:	2cff      	cmp	r4, #255	; 0xff
 80228bc:	eb05 0e02 	add.w	lr, r5, r2
 80228c0:	5aaa      	ldrh	r2, [r5, r2]
 80228c2:	d018      	beq.n	80228f6 <_ZN8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x236>
 80228c4:	f422 65fc 	bic.w	r5, r2, #2016	; 0x7e0
 80228c8:	f402 62fc 	and.w	r2, r2, #2016	; 0x7e0
 80228cc:	fb04 fa02 	mul.w	sl, r4, r2
 80228d0:	ea4f 08e4 	mov.w	r8, r4, asr #3
 80228d4:	fb08 f805 	mul.w	r8, r8, r5
 80228d8:	f10a 0520 	add.w	r5, sl, #32
 80228dc:	ea06 1258 	and.w	r2, r6, r8, lsr #5
 80228e0:	eb05 251a 	add.w	r5, r5, sl, lsr #8
 80228e4:	f608 0801 	addw	r8, r8, #2049	; 0x801
 80228e8:	4442      	add	r2, r8
 80228ea:	0a2d      	lsrs	r5, r5, #8
 80228ec:	ea06 1252 	and.w	r2, r6, r2, lsr #5
 80228f0:	f405 65fc 	and.w	r5, r5, #2016	; 0x7e0
 80228f4:	432a      	orrs	r2, r5
 80228f6:	9c0b      	ldr	r4, [sp, #44]	; 0x2c
 80228f8:	f8be 5002 	ldrh.w	r5, [lr, #2]
 80228fc:	2cff      	cmp	r4, #255	; 0xff
 80228fe:	d01a      	beq.n	8022936 <_ZN8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x276>
 8022900:	f425 6efc 	bic.w	lr, r5, #2016	; 0x7e0
 8022904:	f405 65fc 	and.w	r5, r5, #2016	; 0x7e0
 8022908:	fb04 fa05 	mul.w	sl, r4, r5
 802290c:	ea4f 08e4 	mov.w	r8, r4, asr #3
 8022910:	fb08 f80e 	mul.w	r8, r8, lr
 8022914:	f10a 0e20 	add.w	lr, sl, #32
 8022918:	ea06 1558 	and.w	r5, r6, r8, lsr #5
 802291c:	eb0e 2e1a 	add.w	lr, lr, sl, lsr #8
 8022920:	f608 0801 	addw	r8, r8, #2049	; 0x801
 8022924:	4445      	add	r5, r8
 8022926:	ea4f 2e1e 	mov.w	lr, lr, lsr #8
 802292a:	ea06 1555 	and.w	r5, r6, r5, lsr #5
 802292e:	f40e 6efc 	and.w	lr, lr, #2016	; 0x7e0
 8022932:	ea45 050e 	orr.w	r5, r5, lr
 8022936:	fb1c fe01 	smulbb	lr, ip, r1
 802293a:	ea4f 0eee 	mov.w	lr, lr, asr #3
 802293e:	f1cc 0810 	rsb	r8, ip, #16
 8022942:	eba8 0801 	sub.w	r8, r8, r1
 8022946:	ea4f 4a02 	mov.w	sl, r2, lsl #16
 802294a:	ebce 0141 	rsb	r1, lr, r1, lsl #1
 802294e:	eb0e 0848 	add.w	r8, lr, r8, lsl #1
 8022952:	ea4f 4b05 	mov.w	fp, r5, lsl #16
 8022956:	4341      	muls	r1, r0
 8022958:	f00a 6afc 	and.w	sl, sl, #132120576	; 0x7e00000
 802295c:	f422 62fc 	bic.w	r2, r2, #2016	; 0x7e0
 8022960:	ea4a 0202 	orr.w	r2, sl, r2
 8022964:	ebce 0c4c 	rsb	ip, lr, ip, lsl #1
 8022968:	fb09 1108 	mla	r1, r9, r8, r1
 802296c:	f00b 6bfc 	and.w	fp, fp, #132120576	; 0x7e00000
 8022970:	f425 65fc 	bic.w	r5, r5, #2016	; 0x7e0
 8022974:	fb0c 1102 	mla	r1, ip, r2, r1
 8022978:	ea4b 0505 	orr.w	r5, fp, r5
 802297c:	fb0e 1e05 	mla	lr, lr, r5, r1
 8022980:	ea4f 525e 	mov.w	r2, lr, lsr #21
 8022984:	ea4f 1e5e 	mov.w	lr, lr, lsr #5
 8022988:	f402 62fc 	and.w	r2, r2, #2016	; 0x7e0
 802298c:	f42e 6efc 	bic.w	lr, lr, #2016	; 0x7e0
 8022990:	ea42 0e0e 	orr.w	lr, r2, lr
 8022994:	fa1f f28e 	uxth.w	r2, lr
 8022998:	2bff      	cmp	r3, #255	; 0xff
 802299a:	f040 80a1 	bne.w	8022ae0 <_ZN8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x420>
 802299e:	803a      	strh	r2, [r7, #0]
 80229a0:	9b1d      	ldr	r3, [sp, #116]	; 0x74
 80229a2:	9a1f      	ldr	r2, [sp, #124]	; 0x7c
 80229a4:	4413      	add	r3, r2
 80229a6:	931d      	str	r3, [sp, #116]	; 0x74
 80229a8:	9a1e      	ldr	r2, [sp, #120]	; 0x78
 80229aa:	9b20      	ldr	r3, [sp, #128]	; 0x80
 80229ac:	441a      	add	r2, r3
 80229ae:	9b0f      	ldr	r3, [sp, #60]	; 0x3c
 80229b0:	921e      	str	r2, [sp, #120]	; 0x78
 80229b2:	3b01      	subs	r3, #1
 80229b4:	3702      	adds	r7, #2
 80229b6:	930f      	str	r3, [sp, #60]	; 0x3c
 80229b8:	e6c9      	b.n	802274e <_ZN8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x8e>
 80229ba:	9b1d      	ldr	r3, [sp, #116]	; 0x74
 80229bc:	9e1f      	ldr	r6, [sp, #124]	; 0x7c
 80229be:	9c1e      	ldr	r4, [sp, #120]	; 0x78
 80229c0:	4433      	add	r3, r6
 80229c2:	931d      	str	r3, [sp, #116]	; 0x74
 80229c4:	9b20      	ldr	r3, [sp, #128]	; 0x80
 80229c6:	441c      	add	r4, r3
 80229c8:	9b06      	ldr	r3, [sp, #24]
 80229ca:	941e      	str	r4, [sp, #120]	; 0x78
 80229cc:	3b01      	subs	r3, #1
 80229ce:	9306      	str	r3, [sp, #24]
 80229d0:	9b07      	ldr	r3, [sp, #28]
 80229d2:	3302      	adds	r3, #2
 80229d4:	9307      	str	r3, [sp, #28]
 80229d6:	e698      	b.n	802270a <_ZN8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x4a>
 80229d8:	d028      	beq.n	8022a2c <_ZN8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x36c>
 80229da:	9b06      	ldr	r3, [sp, #24]
 80229dc:	981f      	ldr	r0, [sp, #124]	; 0x7c
 80229de:	9d1d      	ldr	r5, [sp, #116]	; 0x74
 80229e0:	3b01      	subs	r3, #1
 80229e2:	fb00 5003 	mla	r0, r0, r3, r5
 80229e6:	1400      	asrs	r0, r0, #16
 80229e8:	f53f aeac 	bmi.w	8022744 <_ZN8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x84>
 80229ec:	3901      	subs	r1, #1
 80229ee:	4288      	cmp	r0, r1
 80229f0:	f6bf aea8 	bge.w	8022744 <_ZN8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x84>
 80229f4:	9920      	ldr	r1, [sp, #128]	; 0x80
 80229f6:	981e      	ldr	r0, [sp, #120]	; 0x78
 80229f8:	fb01 0303 	mla	r3, r1, r3, r0
 80229fc:	141b      	asrs	r3, r3, #16
 80229fe:	f53f aea1 	bmi.w	8022744 <_ZN8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x84>
 8022a02:	3a01      	subs	r2, #1
 8022a04:	4293      	cmp	r3, r2
 8022a06:	f6bf ae9d 	bge.w	8022744 <_ZN8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x84>
 8022a0a:	9b06      	ldr	r3, [sp, #24]
 8022a0c:	f8dd e01c 	ldr.w	lr, [sp, #28]
 8022a10:	930f      	str	r3, [sp, #60]	; 0x3c
 8022a12:	f64f 061f 	movw	r6, #63519	; 0xf81f
 8022a16:	9b0f      	ldr	r3, [sp, #60]	; 0x3c
 8022a18:	2b00      	cmp	r3, #0
 8022a1a:	f300 80b6 	bgt.w	8022b8a <_ZN8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x4ca>
 8022a1e:	9b06      	ldr	r3, [sp, #24]
 8022a20:	ea23 74e3 	bic.w	r4, r3, r3, asr #31
 8022a24:	9b07      	ldr	r3, [sp, #28]
 8022a26:	eb03 0344 	add.w	r3, r3, r4, lsl #1
 8022a2a:	9307      	str	r3, [sp, #28]
 8022a2c:	9b0e      	ldr	r3, [sp, #56]	; 0x38
 8022a2e:	2b00      	cmp	r3, #0
 8022a30:	f340 8218 	ble.w	8022e64 <_ZN8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x7a4>
 8022a34:	ee30 0a04 	vadd.f32	s0, s0, s8
 8022a38:	eeb7 7a00 	vmov.f32	s14, #112	; 0x3f800000  1.0
 8022a3c:	eec7 7a00 	vdiv.f32	s15, s14, s0
 8022a40:	9b1c      	ldr	r3, [sp, #112]	; 0x70
 8022a42:	ee70 0aa4 	vadd.f32	s1, s1, s9
 8022a46:	ee31 1a05 	vadd.f32	s2, s2, s10
 8022a4a:	ee20 7aa7 	vmul.f32	s14, s1, s15
 8022a4e:	eef0 6a62 	vmov.f32	s13, s5
 8022a52:	ee61 7a27 	vmul.f32	s15, s2, s15
 8022a56:	eefe 6ac8 	vcvt.s32.f32	s13, s13, #16
 8022a5a:	ee77 2a62 	vsub.f32	s5, s14, s5
 8022a5e:	edcd 6a1d 	vstr	s13, [sp, #116]	; 0x74
 8022a62:	eefe 2ac8 	vcvt.s32.f32	s5, s5, #16
 8022a66:	eef0 6a43 	vmov.f32	s13, s6
 8022a6a:	ee37 3ac3 	vsub.f32	s6, s15, s6
 8022a6e:	ee12 2a90 	vmov	r2, s5
 8022a72:	eebe 3ac8 	vcvt.s32.f32	s6, s6, #16
 8022a76:	fb92 f3f3 	sdiv	r3, r2, r3
 8022a7a:	ee13 2a10 	vmov	r2, s6
 8022a7e:	931f      	str	r3, [sp, #124]	; 0x7c
 8022a80:	9b1c      	ldr	r3, [sp, #112]	; 0x70
 8022a82:	fb92 f3f3 	sdiv	r3, r2, r3
 8022a86:	9320      	str	r3, [sp, #128]	; 0x80
 8022a88:	9b0e      	ldr	r3, [sp, #56]	; 0x38
 8022a8a:	9a10      	ldr	r2, [sp, #64]	; 0x40
 8022a8c:	3b01      	subs	r3, #1
 8022a8e:	eefe 6ac8 	vcvt.s32.f32	s13, s13, #16
 8022a92:	930e      	str	r3, [sp, #56]	; 0x38
 8022a94:	9b1c      	ldr	r3, [sp, #112]	; 0x70
 8022a96:	edcd 6a1e 	vstr	s13, [sp, #120]	; 0x78
 8022a9a:	bf08      	it	eq
 8022a9c:	4613      	moveq	r3, r2
 8022a9e:	9306      	str	r3, [sp, #24]
 8022aa0:	eeb0 3a67 	vmov.f32	s6, s15
 8022aa4:	eef0 2a47 	vmov.f32	s5, s14
 8022aa8:	e621      	b.n	80226ee <_ZN8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x2e>
 8022aaa:	fb08 f505 	mul.w	r5, r8, r5
 8022aae:	fb09 5303 	mla	r3, r9, r3, r5
 8022ab2:	e6a1      	b.n	80227f8 <_ZN8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x138>
 8022ab4:	4681      	mov	r9, r0
 8022ab6:	e6c8      	b.n	802284a <_ZN8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x18a>
 8022ab8:	f1c1 0210 	rsb	r2, r1, #16
 8022abc:	4341      	muls	r1, r0
 8022abe:	fb09 1902 	mla	r9, r9, r2, r1
 8022ac2:	ea4f 0949 	mov.w	r9, r9, lsl #1
 8022ac6:	ea4f 5259 	mov.w	r2, r9, lsr #21
 8022aca:	ea4f 1959 	mov.w	r9, r9, lsr #5
 8022ace:	f402 62fc 	and.w	r2, r2, #2016	; 0x7e0
 8022ad2:	f429 69fc 	bic.w	r9, r9, #2016	; 0x7e0
 8022ad6:	ea42 0909 	orr.w	r9, r2, r9
 8022ada:	fa1f f289 	uxth.w	r2, r9
 8022ade:	e75b      	b.n	8022998 <_ZN8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x2d8>
 8022ae0:	f8b7 c000 	ldrh.w	ip, [r7]
 8022ae4:	43db      	mvns	r3, r3
 8022ae6:	ea4f 202c 	mov.w	r0, ip, asr #8
 8022aea:	fa5f fe83 	uxtb.w	lr, r3
 8022aee:	f000 00f8 	and.w	r0, r0, #248	; 0xf8
 8022af2:	fb00 f00e 	mul.w	r0, r0, lr
 8022af6:	1c41      	adds	r1, r0, #1
 8022af8:	eb01 2010 	add.w	r0, r1, r0, lsr #8
 8022afc:	1211      	asrs	r1, r2, #8
 8022afe:	ea4f 05ec 	mov.w	r5, ip, asr #3
 8022b02:	f021 0107 	bic.w	r1, r1, #7
 8022b06:	eb01 2110 	add.w	r1, r1, r0, lsr #8
 8022b0a:	f005 05fc 	and.w	r5, r5, #252	; 0xfc
 8022b0e:	48d7      	ldr	r0, [pc, #860]	; (8022e6c <_ZN8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x7ac>)
 8022b10:	fb05 f50e 	mul.w	r5, r5, lr
 8022b14:	b2c9      	uxtb	r1, r1
 8022b16:	ea00 2001 	and.w	r0, r0, r1, lsl #8
 8022b1a:	1c69      	adds	r1, r5, #1
 8022b1c:	eb01 2515 	add.w	r5, r1, r5, lsr #8
 8022b20:	10d1      	asrs	r1, r2, #3
 8022b22:	f021 0103 	bic.w	r1, r1, #3
 8022b26:	ea4f 03cc 	mov.w	r3, ip, lsl #3
 8022b2a:	eb01 2115 	add.w	r1, r1, r5, lsr #8
 8022b2e:	b2db      	uxtb	r3, r3
 8022b30:	00c9      	lsls	r1, r1, #3
 8022b32:	fb03 f30e 	mul.w	r3, r3, lr
 8022b36:	f401 61fc 	and.w	r1, r1, #2016	; 0x7e0
 8022b3a:	4301      	orrs	r1, r0
 8022b3c:	1c58      	adds	r0, r3, #1
 8022b3e:	eb00 2313 	add.w	r3, r0, r3, lsr #8
 8022b42:	00d2      	lsls	r2, r2, #3
 8022b44:	eb02 2213 	add.w	r2, r2, r3, lsr #8
 8022b48:	f3c2 02c4 	ubfx	r2, r2, #3, #5
 8022b4c:	430a      	orrs	r2, r1
 8022b4e:	e726      	b.n	802299e <_ZN8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x2de>
 8022b50:	f115 0e01 	adds.w	lr, r5, #1
 8022b54:	f53f af24 	bmi.w	80229a0 <_ZN8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x2e0>
 8022b58:	4572      	cmp	r2, lr
 8022b5a:	f6ff af21 	blt.w	80229a0 <_ZN8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x2e0>
 8022b5e:	f110 0e01 	adds.w	lr, r0, #1
 8022b62:	f53f af1d 	bmi.w	80229a0 <_ZN8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x2e0>
 8022b66:	4573      	cmp	r3, lr
 8022b68:	f6ff af1a 	blt.w	80229a0 <_ZN8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x2e0>
 8022b6c:	b21b      	sxth	r3, r3
 8022b6e:	b212      	sxth	r2, r2
 8022b70:	e9cd 1c04 	strd	r1, ip, [sp, #16]
 8022b74:	e9cd 5002 	strd	r5, r0, [sp, #8]
 8022b78:	9301      	str	r3, [sp, #4]
 8022b7a:	9200      	str	r2, [sp, #0]
 8022b7c:	4639      	mov	r1, r7
 8022b7e:	e9dd 3208 	ldrd	r3, r2, [sp, #32]
 8022b82:	9811      	ldr	r0, [sp, #68]	; 0x44
 8022b84:	f7ff fc24 	bl	80223d0 <_ZNK8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhPKtssiihh>
 8022b88:	e70a      	b.n	80229a0 <_ZN8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x2e0>
 8022b8a:	9b1d      	ldr	r3, [sp, #116]	; 0x74
 8022b8c:	f3c3 3203 	ubfx	r2, r3, #12, #4
 8022b90:	9b1e      	ldr	r3, [sp, #120]	; 0x78
 8022b92:	f3c3 3503 	ubfx	r5, r3, #12, #4
 8022b96:	9b24      	ldr	r3, [sp, #144]	; 0x90
 8022b98:	f9b3 1008 	ldrsh.w	r1, [r3, #8]
 8022b9c:	9b1e      	ldr	r3, [sp, #120]	; 0x78
 8022b9e:	141f      	asrs	r7, r3, #16
 8022ba0:	9b1d      	ldr	r3, [sp, #116]	; 0x74
 8022ba2:	141b      	asrs	r3, r3, #16
 8022ba4:	fb01 3707 	mla	r7, r1, r7, r3
 8022ba8:	9b09      	ldr	r3, [sp, #36]	; 0x24
 8022baa:	fa1f fc82 	uxth.w	ip, r2
 8022bae:	eb03 0a07 	add.w	sl, r3, r7
 8022bb2:	ea4f 100c 	mov.w	r0, ip, lsl #4
 8022bb6:	f813 9007 	ldrb.w	r9, [r3, r7]
 8022bba:	f89a 8001 	ldrb.w	r8, [sl, #1]
 8022bbe:	f5c0 7380 	rsb	r3, r0, #256	; 0x100
 8022bc2:	b29b      	uxth	r3, r3
 8022bc4:	2d00      	cmp	r5, #0
 8022bc6:	f000 80fe 	beq.w	8022dc6 <_ZN8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x706>
 8022bca:	f81a 4001 	ldrb.w	r4, [sl, r1]
 8022bce:	940c      	str	r4, [sp, #48]	; 0x30
 8022bd0:	eb0a 0b01 	add.w	fp, sl, r1
 8022bd4:	fa1f fa85 	uxth.w	sl, r5
 8022bd8:	fb0a fc0c 	mul.w	ip, sl, ip
 8022bdc:	ebcc 1a0a 	rsb	sl, ip, sl, lsl #4
 8022be0:	fa1f fa8a 	uxth.w	sl, sl
 8022be4:	eba0 000c 	sub.w	r0, r0, ip
 8022be8:	eba3 030a 	sub.w	r3, r3, sl
 8022bec:	b280      	uxth	r0, r0
 8022bee:	fb08 f000 	mul.w	r0, r8, r0
 8022bf2:	b29b      	uxth	r3, r3
 8022bf4:	fb09 0303 	mla	r3, r9, r3, r0
 8022bf8:	980c      	ldr	r0, [sp, #48]	; 0x30
 8022bfa:	f89b 4001 	ldrb.w	r4, [fp, #1]
 8022bfe:	940d      	str	r4, [sp, #52]	; 0x34
 8022c00:	fb0a 3300 	mla	r3, sl, r0, r3
 8022c04:	fb0c 3304 	mla	r3, ip, r4, r3
 8022c08:	f3c3 2307 	ubfx	r3, r3, #8, #8
 8022c0c:	2b00      	cmp	r3, #0
 8022c0e:	f000 80cc 	beq.w	8022daa <_ZN8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x6ea>
 8022c12:	9808      	ldr	r0, [sp, #32]
 8022c14:	9c08      	ldr	r4, [sp, #32]
 8022c16:	f1b9 0fff 	cmp.w	r9, #255	; 0xff
 8022c1a:	eb00 0047 	add.w	r0, r0, r7, lsl #1
 8022c1e:	f834 7017 	ldrh.w	r7, [r4, r7, lsl #1]
 8022c22:	f000 80d5 	beq.w	8022dd0 <_ZN8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x710>
 8022c26:	f427 6cfc 	bic.w	ip, r7, #2016	; 0x7e0
 8022c2a:	ea4f 0ae9 	mov.w	sl, r9, asr #3
 8022c2e:	f407 67fc 	and.w	r7, r7, #2016	; 0x7e0
 8022c32:	fb09 f707 	mul.w	r7, r9, r7
 8022c36:	fb0a fc0c 	mul.w	ip, sl, ip
 8022c3a:	ea06 195c 	and.w	r9, r6, ip, lsr #5
 8022c3e:	f107 0b20 	add.w	fp, r7, #32
 8022c42:	f60c 0c01 	addw	ip, ip, #2049	; 0x801
 8022c46:	44cc      	add	ip, r9
 8022c48:	eb0b 2917 	add.w	r9, fp, r7, lsr #8
 8022c4c:	ea4f 2919 	mov.w	r9, r9, lsr #8
 8022c50:	ea06 1c5c 	and.w	ip, r6, ip, lsr #5
 8022c54:	f409 69fc 	and.w	r9, r9, #2016	; 0x7e0
 8022c58:	ea4c 0909 	orr.w	r9, ip, r9
 8022c5c:	f1b8 0fff 	cmp.w	r8, #255	; 0xff
 8022c60:	8847      	ldrh	r7, [r0, #2]
 8022c62:	d019      	beq.n	8022c98 <_ZN8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x5d8>
 8022c64:	f427 6cfc 	bic.w	ip, r7, #2016	; 0x7e0
 8022c68:	ea4f 0ae8 	mov.w	sl, r8, asr #3
 8022c6c:	f407 67fc 	and.w	r7, r7, #2016	; 0x7e0
 8022c70:	fb08 f807 	mul.w	r8, r8, r7
 8022c74:	fb0a fc0c 	mul.w	ip, sl, ip
 8022c78:	ea06 175c 	and.w	r7, r6, ip, lsr #5
 8022c7c:	f108 0b20 	add.w	fp, r8, #32
 8022c80:	f60c 0c01 	addw	ip, ip, #2049	; 0x801
 8022c84:	44bc      	add	ip, r7
 8022c86:	eb0b 2718 	add.w	r7, fp, r8, lsr #8
 8022c8a:	0a3f      	lsrs	r7, r7, #8
 8022c8c:	ea06 1c5c 	and.w	ip, r6, ip, lsr #5
 8022c90:	f407 67fc 	and.w	r7, r7, #2016	; 0x7e0
 8022c94:	ea4c 0707 	orr.w	r7, ip, r7
 8022c98:	ea4f 4c09 	mov.w	ip, r9, lsl #16
 8022c9c:	ea4f 4a07 	mov.w	sl, r7, lsl #16
 8022ca0:	f00c 6cfc 	and.w	ip, ip, #132120576	; 0x7e00000
 8022ca4:	f429 69fc 	bic.w	r9, r9, #2016	; 0x7e0
 8022ca8:	f00a 6afc 	and.w	sl, sl, #132120576	; 0x7e00000
 8022cac:	f427 67fc 	bic.w	r7, r7, #2016	; 0x7e0
 8022cb0:	ea4c 0909 	orr.w	r9, ip, r9
 8022cb4:	ea4a 0707 	orr.w	r7, sl, r7
 8022cb8:	2d00      	cmp	r5, #0
 8022cba:	f000 808b 	beq.w	8022dd4 <_ZN8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x714>
 8022cbe:	f101 4100 	add.w	r1, r1, #2147483648	; 0x80000000
 8022cc2:	3901      	subs	r1, #1
 8022cc4:	0049      	lsls	r1, r1, #1
 8022cc6:	3102      	adds	r1, #2
 8022cc8:	eb00 0c01 	add.w	ip, r0, r1
 8022ccc:	5a41      	ldrh	r1, [r0, r1]
 8022cce:	980c      	ldr	r0, [sp, #48]	; 0x30
 8022cd0:	28ff      	cmp	r0, #255	; 0xff
 8022cd2:	d019      	beq.n	8022d08 <_ZN8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x648>
 8022cd4:	9c0c      	ldr	r4, [sp, #48]	; 0x30
 8022cd6:	f421 60fc 	bic.w	r0, r1, #2016	; 0x7e0
 8022cda:	f401 61fc 	and.w	r1, r1, #2016	; 0x7e0
 8022cde:	fb04 fa01 	mul.w	sl, r4, r1
 8022ce2:	ea4f 08e4 	mov.w	r8, r4, asr #3
 8022ce6:	fb08 f800 	mul.w	r8, r8, r0
 8022cea:	f10a 0020 	add.w	r0, sl, #32
 8022cee:	ea06 1158 	and.w	r1, r6, r8, lsr #5
 8022cf2:	eb00 201a 	add.w	r0, r0, sl, lsr #8
 8022cf6:	f608 0801 	addw	r8, r8, #2049	; 0x801
 8022cfa:	4441      	add	r1, r8
 8022cfc:	0a00      	lsrs	r0, r0, #8
 8022cfe:	ea06 1151 	and.w	r1, r6, r1, lsr #5
 8022d02:	f400 60fc 	and.w	r0, r0, #2016	; 0x7e0
 8022d06:	4301      	orrs	r1, r0
 8022d08:	9c0d      	ldr	r4, [sp, #52]	; 0x34
 8022d0a:	f8bc 0002 	ldrh.w	r0, [ip, #2]
 8022d0e:	2cff      	cmp	r4, #255	; 0xff
 8022d10:	d01a      	beq.n	8022d48 <_ZN8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x688>
 8022d12:	f420 6cfc 	bic.w	ip, r0, #2016	; 0x7e0
 8022d16:	f400 60fc 	and.w	r0, r0, #2016	; 0x7e0
 8022d1a:	fb04 fa00 	mul.w	sl, r4, r0
 8022d1e:	ea4f 08e4 	mov.w	r8, r4, asr #3
 8022d22:	fb08 f80c 	mul.w	r8, r8, ip
 8022d26:	f10a 0c20 	add.w	ip, sl, #32
 8022d2a:	ea06 1058 	and.w	r0, r6, r8, lsr #5
 8022d2e:	eb0c 2c1a 	add.w	ip, ip, sl, lsr #8
 8022d32:	f608 0801 	addw	r8, r8, #2049	; 0x801
 8022d36:	4440      	add	r0, r8
 8022d38:	ea4f 2c1c 	mov.w	ip, ip, lsr #8
 8022d3c:	ea06 1050 	and.w	r0, r6, r0, lsr #5
 8022d40:	f40c 6cfc 	and.w	ip, ip, #2016	; 0x7e0
 8022d44:	ea40 000c 	orr.w	r0, r0, ip
 8022d48:	fb15 fc02 	smulbb	ip, r5, r2
 8022d4c:	ea4f 0cec 	mov.w	ip, ip, asr #3
 8022d50:	f1c5 0810 	rsb	r8, r5, #16
 8022d54:	eba8 0802 	sub.w	r8, r8, r2
 8022d58:	ea4f 4a01 	mov.w	sl, r1, lsl #16
 8022d5c:	ebcc 0242 	rsb	r2, ip, r2, lsl #1
 8022d60:	437a      	muls	r2, r7
 8022d62:	ea4f 4b00 	mov.w	fp, r0, lsl #16
 8022d66:	eb0c 0848 	add.w	r8, ip, r8, lsl #1
 8022d6a:	f00a 6afc 	and.w	sl, sl, #132120576	; 0x7e00000
 8022d6e:	f421 61fc 	bic.w	r1, r1, #2016	; 0x7e0
 8022d72:	fb09 2208 	mla	r2, r9, r8, r2
 8022d76:	ea4a 0101 	orr.w	r1, sl, r1
 8022d7a:	ebcc 0545 	rsb	r5, ip, r5, lsl #1
 8022d7e:	f00b 6bfc 	and.w	fp, fp, #132120576	; 0x7e00000
 8022d82:	f420 60fc 	bic.w	r0, r0, #2016	; 0x7e0
 8022d86:	fb05 2201 	mla	r2, r5, r1, r2
 8022d8a:	ea4b 0000 	orr.w	r0, fp, r0
 8022d8e:	fb0c 2200 	mla	r2, ip, r0, r2
 8022d92:	0d57      	lsrs	r7, r2, #21
 8022d94:	0952      	lsrs	r2, r2, #5
 8022d96:	f407 67fc 	and.w	r7, r7, #2016	; 0x7e0
 8022d9a:	f422 62fc 	bic.w	r2, r2, #2016	; 0x7e0
 8022d9e:	433a      	orrs	r2, r7
 8022da0:	2bff      	cmp	r3, #255	; 0xff
 8022da2:	b292      	uxth	r2, r2
 8022da4:	d127      	bne.n	8022df6 <_ZN8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x736>
 8022da6:	f8ae 2000 	strh.w	r2, [lr]
 8022daa:	9b1d      	ldr	r3, [sp, #116]	; 0x74
 8022dac:	9a1f      	ldr	r2, [sp, #124]	; 0x7c
 8022dae:	4413      	add	r3, r2
 8022db0:	931d      	str	r3, [sp, #116]	; 0x74
 8022db2:	9a1e      	ldr	r2, [sp, #120]	; 0x78
 8022db4:	9b20      	ldr	r3, [sp, #128]	; 0x80
 8022db6:	441a      	add	r2, r3
 8022db8:	9b0f      	ldr	r3, [sp, #60]	; 0x3c
 8022dba:	921e      	str	r2, [sp, #120]	; 0x78
 8022dbc:	3b01      	subs	r3, #1
 8022dbe:	f10e 0e02 	add.w	lr, lr, #2
 8022dc2:	930f      	str	r3, [sp, #60]	; 0x3c
 8022dc4:	e627      	b.n	8022a16 <_ZN8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x356>
 8022dc6:	fb08 f000 	mul.w	r0, r8, r0
 8022dca:	fb09 0303 	mla	r3, r9, r3, r0
 8022dce:	e71b      	b.n	8022c08 <_ZN8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x548>
 8022dd0:	46b9      	mov	r9, r7
 8022dd2:	e743      	b.n	8022c5c <_ZN8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x59c>
 8022dd4:	f1c2 0110 	rsb	r1, r2, #16
 8022dd8:	437a      	muls	r2, r7
 8022dda:	fb09 2901 	mla	r9, r9, r1, r2
 8022dde:	ea4f 0949 	mov.w	r9, r9, lsl #1
 8022de2:	ea4f 5059 	mov.w	r0, r9, lsr #21
 8022de6:	ea4f 1259 	mov.w	r2, r9, lsr #5
 8022dea:	f400 60fc 	and.w	r0, r0, #2016	; 0x7e0
 8022dee:	f422 62fc 	bic.w	r2, r2, #2016	; 0x7e0
 8022df2:	4302      	orrs	r2, r0
 8022df4:	e7d4      	b.n	8022da0 <_ZN8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x6e0>
 8022df6:	f8be 7000 	ldrh.w	r7, [lr]
 8022dfa:	4c1c      	ldr	r4, [pc, #112]	; (8022e6c <_ZN8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x7ac>)
 8022dfc:	43db      	mvns	r3, r3
 8022dfe:	1238      	asrs	r0, r7, #8
 8022e00:	fa5f fc83 	uxtb.w	ip, r3
 8022e04:	f000 00f8 	and.w	r0, r0, #248	; 0xf8
 8022e08:	10fd      	asrs	r5, r7, #3
 8022e0a:	fb00 f00c 	mul.w	r0, r0, ip
 8022e0e:	f005 05fc 	and.w	r5, r5, #252	; 0xfc
 8022e12:	fb05 f10c 	mul.w	r1, r5, ip
 8022e16:	1c45      	adds	r5, r0, #1
 8022e18:	eb05 2010 	add.w	r0, r5, r0, lsr #8
 8022e1c:	1215      	asrs	r5, r2, #8
 8022e1e:	f025 0507 	bic.w	r5, r5, #7
 8022e22:	eb05 2010 	add.w	r0, r5, r0, lsr #8
 8022e26:	1c4d      	adds	r5, r1, #1
 8022e28:	eb05 2511 	add.w	r5, r5, r1, lsr #8
 8022e2c:	10d1      	asrs	r1, r2, #3
 8022e2e:	f021 0103 	bic.w	r1, r1, #3
 8022e32:	00fb      	lsls	r3, r7, #3
 8022e34:	eb01 2115 	add.w	r1, r1, r5, lsr #8
 8022e38:	b2db      	uxtb	r3, r3
 8022e3a:	b2c0      	uxtb	r0, r0
 8022e3c:	00c9      	lsls	r1, r1, #3
 8022e3e:	fb03 f30c 	mul.w	r3, r3, ip
 8022e42:	f401 61fc 	and.w	r1, r1, #2016	; 0x7e0
 8022e46:	ea04 2000 	and.w	r0, r4, r0, lsl #8
 8022e4a:	4308      	orrs	r0, r1
 8022e4c:	1c59      	adds	r1, r3, #1
 8022e4e:	eb01 2313 	add.w	r3, r1, r3, lsr #8
 8022e52:	00d2      	lsls	r2, r2, #3
 8022e54:	eb02 2313 	add.w	r3, r2, r3, lsr #8
 8022e58:	f3c3 03c4 	ubfx	r3, r3, #3, #5
 8022e5c:	4318      	orrs	r0, r3
 8022e5e:	f8ae 0000 	strh.w	r0, [lr]
 8022e62:	e7a2      	b.n	8022daa <_ZN8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x6ea>
 8022e64:	b013      	add	sp, #76	; 0x4c
 8022e66:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
 8022e6a:	bf00      	nop
 8022e6c:	fffff800 	.word	0xfffff800

08022e70 <_ZNK8touchgfx8LCD16bpp52TextureMapper_RGB565_Opaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKtssiihhh>:
 8022e70:	e92d 47f0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, lr}
 8022e74:	e9dd 4509 	ldrd	r4, r5, [sp, #36]	; 0x24
 8022e78:	fb05 4c03 	mla	ip, r5, r3, r4
 8022e7c:	2d00      	cmp	r5, #0
 8022e7e:	f9bd a020 	ldrsh.w	sl, [sp, #32]
 8022e82:	f89d 902c 	ldrb.w	r9, [sp, #44]	; 0x2c
 8022e86:	f89d 7030 	ldrb.w	r7, [sp, #48]	; 0x30
 8022e8a:	f89d 6034 	ldrb.w	r6, [sp, #52]	; 0x34
 8022e8e:	8808      	ldrh	r0, [r1, #0]
 8022e90:	eb02 0e4c 	add.w	lr, r2, ip, lsl #1
 8022e94:	f2c0 80a7 	blt.w	8022fe6 <_ZNK8touchgfx8LCD16bpp52TextureMapper_RGB565_Opaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKtssiihhh+0x176>
 8022e98:	45aa      	cmp	sl, r5
 8022e9a:	f340 80a4 	ble.w	8022fe6 <_ZNK8touchgfx8LCD16bpp52TextureMapper_RGB565_Opaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKtssiihhh+0x176>
 8022e9e:	2c00      	cmp	r4, #0
 8022ea0:	f2c0 809f 	blt.w	8022fe2 <_ZNK8touchgfx8LCD16bpp52TextureMapper_RGB565_Opaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKtssiihhh+0x172>
 8022ea4:	42a3      	cmp	r3, r4
 8022ea6:	f340 809c 	ble.w	8022fe2 <_ZNK8touchgfx8LCD16bpp52TextureMapper_RGB565_Opaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKtssiihhh+0x172>
 8022eaa:	f832 801c 	ldrh.w	r8, [r2, ip, lsl #1]
 8022eae:	1c62      	adds	r2, r4, #1
 8022eb0:	f100 809c 	bmi.w	8022fec <_ZNK8touchgfx8LCD16bpp52TextureMapper_RGB565_Opaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKtssiihhh+0x17c>
 8022eb4:	4293      	cmp	r3, r2
 8022eb6:	f340 8099 	ble.w	8022fec <_ZNK8touchgfx8LCD16bpp52TextureMapper_RGB565_Opaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKtssiihhh+0x17c>
 8022eba:	f1b9 0f00 	cmp.w	r9, #0
 8022ebe:	f000 8095 	beq.w	8022fec <_ZNK8touchgfx8LCD16bpp52TextureMapper_RGB565_Opaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKtssiihhh+0x17c>
 8022ec2:	f8be c002 	ldrh.w	ip, [lr, #2]
 8022ec6:	3501      	adds	r5, #1
 8022ec8:	f100 8094 	bmi.w	8022ff4 <_ZNK8touchgfx8LCD16bpp52TextureMapper_RGB565_Opaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKtssiihhh+0x184>
 8022ecc:	45aa      	cmp	sl, r5
 8022ece:	f340 8091 	ble.w	8022ff4 <_ZNK8touchgfx8LCD16bpp52TextureMapper_RGB565_Opaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKtssiihhh+0x184>
 8022ed2:	2f00      	cmp	r7, #0
 8022ed4:	f000 808e 	beq.w	8022ff4 <_ZNK8touchgfx8LCD16bpp52TextureMapper_RGB565_Opaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKtssiihhh+0x184>
 8022ed8:	2c00      	cmp	r4, #0
 8022eda:	f2c0 8089 	blt.w	8022ff0 <_ZNK8touchgfx8LCD16bpp52TextureMapper_RGB565_Opaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKtssiihhh+0x180>
 8022ede:	42a3      	cmp	r3, r4
 8022ee0:	f340 8086 	ble.w	8022ff0 <_ZNK8touchgfx8LCD16bpp52TextureMapper_RGB565_Opaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKtssiihhh+0x180>
 8022ee4:	f83e 5013 	ldrh.w	r5, [lr, r3, lsl #1]
 8022ee8:	3401      	adds	r4, #1
 8022eea:	f100 8086 	bmi.w	8022ffa <_ZNK8touchgfx8LCD16bpp52TextureMapper_RGB565_Opaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKtssiihhh+0x18a>
 8022eee:	42a3      	cmp	r3, r4
 8022ef0:	f340 8083 	ble.w	8022ffa <_ZNK8touchgfx8LCD16bpp52TextureMapper_RGB565_Opaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKtssiihhh+0x18a>
 8022ef4:	f1b9 0f00 	cmp.w	r9, #0
 8022ef8:	d07f      	beq.n	8022ffa <_ZNK8touchgfx8LCD16bpp52TextureMapper_RGB565_Opaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKtssiihhh+0x18a>
 8022efa:	3301      	adds	r3, #1
 8022efc:	f83e 3013 	ldrh.w	r3, [lr, r3, lsl #1]
 8022f00:	ea4f 4408 	mov.w	r4, r8, lsl #16
 8022f04:	f004 64fc 	and.w	r4, r4, #132120576	; 0x7e00000
 8022f08:	f428 68fc 	bic.w	r8, r8, #2016	; 0x7e0
 8022f0c:	fb19 fe07 	smulbb	lr, r9, r7
 8022f10:	ea44 0808 	orr.w	r8, r4, r8
 8022f14:	ea4f 440c 	mov.w	r4, ip, lsl #16
 8022f18:	f3ce 0ec7 	ubfx	lr, lr, #3, #8
 8022f1c:	f1c7 0210 	rsb	r2, r7, #16
 8022f20:	f004 64fc 	and.w	r4, r4, #132120576	; 0x7e00000
 8022f24:	f42c 6cfc 	bic.w	ip, ip, #2016	; 0x7e0
 8022f28:	ea44 0c0c 	orr.w	ip, r4, ip
 8022f2c:	eba2 0209 	sub.w	r2, r2, r9
 8022f30:	ebce 0449 	rsb	r4, lr, r9, lsl #1
 8022f34:	eb0e 0242 	add.w	r2, lr, r2, lsl #1
 8022f38:	fb04 f40c 	mul.w	r4, r4, ip
 8022f3c:	fb02 4808 	mla	r8, r2, r8, r4
 8022f40:	041a      	lsls	r2, r3, #16
 8022f42:	f002 62fc 	and.w	r2, r2, #132120576	; 0x7e00000
 8022f46:	f423 63fc 	bic.w	r3, r3, #2016	; 0x7e0
 8022f4a:	4313      	orrs	r3, r2
 8022f4c:	042a      	lsls	r2, r5, #16
 8022f4e:	f002 62fc 	and.w	r2, r2, #132120576	; 0x7e00000
 8022f52:	f425 65fc 	bic.w	r5, r5, #2016	; 0x7e0
 8022f56:	fb0e 8303 	mla	r3, lr, r3, r8
 8022f5a:	432a      	orrs	r2, r5
 8022f5c:	ebce 0747 	rsb	r7, lr, r7, lsl #1
 8022f60:	fb07 3202 	mla	r2, r7, r2, r3
 8022f64:	0d53      	lsrs	r3, r2, #21
 8022f66:	0952      	lsrs	r2, r2, #5
 8022f68:	f403 63fc 	and.w	r3, r3, #2016	; 0x7e0
 8022f6c:	f422 62fc 	bic.w	r2, r2, #2016	; 0x7e0
 8022f70:	431a      	orrs	r2, r3
 8022f72:	b293      	uxth	r3, r2
 8022f74:	b2b4      	uxth	r4, r6
 8022f76:	1202      	asrs	r2, r0, #8
 8022f78:	43f6      	mvns	r6, r6
 8022f7a:	b2f6      	uxtb	r6, r6
 8022f7c:	121d      	asrs	r5, r3, #8
 8022f7e:	f002 02f8 	and.w	r2, r2, #248	; 0xf8
 8022f82:	fb12 f206 	smulbb	r2, r2, r6
 8022f86:	10c7      	asrs	r7, r0, #3
 8022f88:	f005 05f8 	and.w	r5, r5, #248	; 0xf8
 8022f8c:	00c0      	lsls	r0, r0, #3
 8022f8e:	fb05 2504 	mla	r5, r5, r4, r2
 8022f92:	b2c0      	uxtb	r0, r0
 8022f94:	10da      	asrs	r2, r3, #3
 8022f96:	00db      	lsls	r3, r3, #3
 8022f98:	b2db      	uxtb	r3, r3
 8022f9a:	f007 07fc 	and.w	r7, r7, #252	; 0xfc
 8022f9e:	fb10 f006 	smulbb	r0, r0, r6
 8022fa2:	b2ad      	uxth	r5, r5
 8022fa4:	fb03 0004 	mla	r0, r3, r4, r0
 8022fa8:	f002 02fc 	and.w	r2, r2, #252	; 0xfc
 8022fac:	fb17 f706 	smulbb	r7, r7, r6
 8022fb0:	b280      	uxth	r0, r0
 8022fb2:	1c6b      	adds	r3, r5, #1
 8022fb4:	fb02 7204 	mla	r2, r2, r4, r7
 8022fb8:	b292      	uxth	r2, r2
 8022fba:	eb03 2515 	add.w	r5, r3, r5, lsr #8
 8022fbe:	1c43      	adds	r3, r0, #1
 8022fc0:	eb03 2310 	add.w	r3, r3, r0, lsr #8
 8022fc4:	1c50      	adds	r0, r2, #1
 8022fc6:	eb00 2212 	add.w	r2, r0, r2, lsr #8
 8022fca:	f405 4578 	and.w	r5, r5, #63488	; 0xf800
 8022fce:	f3c3 23c4 	ubfx	r3, r3, #11, #5
 8022fd2:	0952      	lsrs	r2, r2, #5
 8022fd4:	432b      	orrs	r3, r5
 8022fd6:	f402 62fc 	and.w	r2, r2, #2016	; 0x7e0
 8022fda:	4313      	orrs	r3, r2
 8022fdc:	800b      	strh	r3, [r1, #0]
 8022fde:	e8bd 87f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, pc}
 8022fe2:	4680      	mov	r8, r0
 8022fe4:	e763      	b.n	8022eae <_ZNK8touchgfx8LCD16bpp52TextureMapper_RGB565_Opaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKtssiihhh+0x3e>
 8022fe6:	4684      	mov	ip, r0
 8022fe8:	4680      	mov	r8, r0
 8022fea:	e76c      	b.n	8022ec6 <_ZNK8touchgfx8LCD16bpp52TextureMapper_RGB565_Opaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKtssiihhh+0x56>
 8022fec:	4684      	mov	ip, r0
 8022fee:	e76a      	b.n	8022ec6 <_ZNK8touchgfx8LCD16bpp52TextureMapper_RGB565_Opaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKtssiihhh+0x56>
 8022ff0:	4605      	mov	r5, r0
 8022ff2:	e779      	b.n	8022ee8 <_ZNK8touchgfx8LCD16bpp52TextureMapper_RGB565_Opaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKtssiihhh+0x78>
 8022ff4:	4603      	mov	r3, r0
 8022ff6:	4605      	mov	r5, r0
 8022ff8:	e782      	b.n	8022f00 <_ZNK8touchgfx8LCD16bpp52TextureMapper_RGB565_Opaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKtssiihhh+0x90>
 8022ffa:	4603      	mov	r3, r0
 8022ffc:	e780      	b.n	8022f00 <_ZNK8touchgfx8LCD16bpp52TextureMapper_RGB565_Opaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKtssiihhh+0x90>

08022ffe <_ZN8touchgfx8LCD16bpp52TextureMapper_RGB565_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff>:
 8022ffe:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 8023002:	b093      	sub	sp, #76	; 0x4c
 8023004:	461d      	mov	r5, r3
 8023006:	9210      	str	r2, [sp, #64]	; 0x40
 8023008:	9b21      	ldr	r3, [sp, #132]	; 0x84
 802300a:	f89d 2094 	ldrb.w	r2, [sp, #148]	; 0x94
 802300e:	920b      	str	r2, [sp, #44]	; 0x2c
 8023010:	e9dd 2722 	ldrd	r2, r7, [sp, #136]	; 0x88
 8023014:	910a      	str	r1, [sp, #40]	; 0x28
 8023016:	6859      	ldr	r1, [r3, #4]
 8023018:	681b      	ldr	r3, [r3, #0]
 802301a:	9011      	str	r0, [sp, #68]	; 0x44
 802301c:	fb01 2707 	mla	r7, r1, r7, r2
 8023020:	eb03 0347 	add.w	r3, r3, r7, lsl #1
 8023024:	9307      	str	r3, [sp, #28]
 8023026:	9b24      	ldr	r3, [sp, #144]	; 0x90
 8023028:	681b      	ldr	r3, [r3, #0]
 802302a:	9309      	str	r3, [sp, #36]	; 0x24
 802302c:	9b0b      	ldr	r3, [sp, #44]	; 0x2c
 802302e:	e9dd 461d 	ldrd	r4, r6, [sp, #116]	; 0x74
 8023032:	43db      	mvns	r3, r3
 8023034:	b2db      	uxtb	r3, r3
 8023036:	9308      	str	r3, [sp, #32]
 8023038:	9b0a      	ldr	r3, [sp, #40]	; 0x28
 802303a:	2b00      	cmp	r3, #0
 802303c:	dc03      	bgt.n	8023046 <_ZN8touchgfx8LCD16bpp52TextureMapper_RGB565_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x48>
 802303e:	9b10      	ldr	r3, [sp, #64]	; 0x40
 8023040:	2b00      	cmp	r3, #0
 8023042:	f340 8203 	ble.w	802344c <_ZN8touchgfx8LCD16bpp52TextureMapper_RGB565_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x44e>
 8023046:	9b24      	ldr	r3, [sp, #144]	; 0x90
 8023048:	f9b3 1008 	ldrsh.w	r1, [r3, #8]
 802304c:	f9b3 200c 	ldrsh.w	r2, [r3, #12]
 8023050:	1e48      	subs	r0, r1, #1
 8023052:	f102 3cff 	add.w	ip, r2, #4294967295
 8023056:	2d00      	cmp	r5, #0
 8023058:	f340 80da 	ble.w	8023210 <_ZN8touchgfx8LCD16bpp52TextureMapper_RGB565_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x212>
 802305c:	ea5f 4e24 	movs.w	lr, r4, asr #16
 8023060:	ea4f 4326 	mov.w	r3, r6, asr #16
 8023064:	d406      	bmi.n	8023074 <_ZN8touchgfx8LCD16bpp52TextureMapper_RGB565_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x76>
 8023066:	4586      	cmp	lr, r0
 8023068:	da04      	bge.n	8023074 <_ZN8touchgfx8LCD16bpp52TextureMapper_RGB565_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x76>
 802306a:	2b00      	cmp	r3, #0
 802306c:	db02      	blt.n	8023074 <_ZN8touchgfx8LCD16bpp52TextureMapper_RGB565_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x76>
 802306e:	4563      	cmp	r3, ip
 8023070:	f2c0 80cf 	blt.w	8023212 <_ZN8touchgfx8LCD16bpp52TextureMapper_RGB565_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x214>
 8023074:	f11e 0e01 	adds.w	lr, lr, #1
 8023078:	f100 80c1 	bmi.w	80231fe <_ZN8touchgfx8LCD16bpp52TextureMapper_RGB565_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x200>
 802307c:	4571      	cmp	r1, lr
 802307e:	f2c0 80be 	blt.w	80231fe <_ZN8touchgfx8LCD16bpp52TextureMapper_RGB565_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x200>
 8023082:	3301      	adds	r3, #1
 8023084:	f100 80bb 	bmi.w	80231fe <_ZN8touchgfx8LCD16bpp52TextureMapper_RGB565_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x200>
 8023088:	429a      	cmp	r2, r3
 802308a:	f2c0 80b8 	blt.w	80231fe <_ZN8touchgfx8LCD16bpp52TextureMapper_RGB565_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x200>
 802308e:	f8dd 801c 	ldr.w	r8, [sp, #28]
 8023092:	46a9      	mov	r9, r5
 8023094:	f1b9 0f00 	cmp.w	r9, #0
 8023098:	f340 80d8 	ble.w	802324c <_ZN8touchgfx8LCD16bpp52TextureMapper_RGB565_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x24e>
 802309c:	9b24      	ldr	r3, [sp, #144]	; 0x90
 802309e:	1421      	asrs	r1, r4, #16
 80230a0:	ea4f 4026 	mov.w	r0, r6, asr #16
 80230a4:	f3c4 3203 	ubfx	r2, r4, #12, #4
 80230a8:	f3c6 3c03 	ubfx	ip, r6, #12, #4
 80230ac:	e9d3 e302 	ldrd	lr, r3, [r3, #8]
 80230b0:	f100 8111 	bmi.w	80232d6 <_ZN8touchgfx8LCD16bpp52TextureMapper_RGB565_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x2d8>
 80230b4:	f10e 3aff 	add.w	sl, lr, #4294967295
 80230b8:	4551      	cmp	r1, sl
 80230ba:	f280 810c 	bge.w	80232d6 <_ZN8touchgfx8LCD16bpp52TextureMapper_RGB565_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x2d8>
 80230be:	2800      	cmp	r0, #0
 80230c0:	f2c0 8109 	blt.w	80232d6 <_ZN8touchgfx8LCD16bpp52TextureMapper_RGB565_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x2d8>
 80230c4:	f103 3aff 	add.w	sl, r3, #4294967295
 80230c8:	4550      	cmp	r0, sl
 80230ca:	f280 8104 	bge.w	80232d6 <_ZN8touchgfx8LCD16bpp52TextureMapper_RGB565_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x2d8>
 80230ce:	fa0f f38e 	sxth.w	r3, lr
 80230d2:	fb00 1103 	mla	r1, r0, r3, r1
 80230d6:	9809      	ldr	r0, [sp, #36]	; 0x24
 80230d8:	eb00 0a41 	add.w	sl, r0, r1, lsl #1
 80230dc:	f830 e011 	ldrh.w	lr, [r0, r1, lsl #1]
 80230e0:	f8ba 1002 	ldrh.w	r1, [sl, #2]
 80230e4:	f1bc 0f00 	cmp.w	ip, #0
 80230e8:	d007      	beq.n	80230fa <_ZN8touchgfx8LCD16bpp52TextureMapper_RGB565_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0xfc>
 80230ea:	005b      	lsls	r3, r3, #1
 80230ec:	eb0a 0003 	add.w	r0, sl, r3
 80230f0:	f83a 3003 	ldrh.w	r3, [sl, r3]
 80230f4:	930c      	str	r3, [sp, #48]	; 0x30
 80230f6:	8843      	ldrh	r3, [r0, #2]
 80230f8:	930d      	str	r3, [sp, #52]	; 0x34
 80230fa:	ea4f 400e 	mov.w	r0, lr, lsl #16
 80230fe:	fb12 f30c 	smulbb	r3, r2, ip
 8023102:	f42e 6efc 	bic.w	lr, lr, #2016	; 0x7e0
 8023106:	ea4f 4a01 	mov.w	sl, r1, lsl #16
 802310a:	f000 60fc 	and.w	r0, r0, #132120576	; 0x7e00000
 802310e:	10db      	asrs	r3, r3, #3
 8023110:	ea40 000e 	orr.w	r0, r0, lr
 8023114:	f00a 6afc 	and.w	sl, sl, #132120576	; 0x7e00000
 8023118:	f1cc 0e10 	rsb	lr, ip, #16
 802311c:	f421 61fc 	bic.w	r1, r1, #2016	; 0x7e0
 8023120:	ebae 0e02 	sub.w	lr, lr, r2
 8023124:	ea4a 0101 	orr.w	r1, sl, r1
 8023128:	ebc3 0242 	rsb	r2, r3, r2, lsl #1
 802312c:	4351      	muls	r1, r2
 802312e:	9a0d      	ldr	r2, [sp, #52]	; 0x34
 8023130:	9f08      	ldr	r7, [sp, #32]
 8023132:	eb03 0e4e 	add.w	lr, r3, lr, lsl #1
 8023136:	fb0e 1e00 	mla	lr, lr, r0, r1
 802313a:	0410      	lsls	r0, r2, #16
 802313c:	f000 60fc 	and.w	r0, r0, #132120576	; 0x7e00000
 8023140:	f422 62fc 	bic.w	r2, r2, #2016	; 0x7e0
 8023144:	4310      	orrs	r0, r2
 8023146:	9a0c      	ldr	r2, [sp, #48]	; 0x30
 8023148:	990c      	ldr	r1, [sp, #48]	; 0x30
 802314a:	0412      	lsls	r2, r2, #16
 802314c:	fb03 e000 	mla	r0, r3, r0, lr
 8023150:	f002 62fc 	and.w	r2, r2, #132120576	; 0x7e00000
 8023154:	f421 6efc 	bic.w	lr, r1, #2016	; 0x7e0
 8023158:	ea42 020e 	orr.w	r2, r2, lr
 802315c:	ebc3 034c 	rsb	r3, r3, ip, lsl #1
 8023160:	fb03 0302 	mla	r3, r3, r2, r0
 8023164:	0d5a      	lsrs	r2, r3, #21
 8023166:	095b      	lsrs	r3, r3, #5
 8023168:	f8b8 0000 	ldrh.w	r0, [r8]
 802316c:	f402 62fc 	and.w	r2, r2, #2016	; 0x7e0
 8023170:	f423 63fc 	bic.w	r3, r3, #2016	; 0x7e0
 8023174:	4313      	orrs	r3, r2
 8023176:	b29b      	uxth	r3, r3
 8023178:	1201      	asrs	r1, r0, #8
 802317a:	f8bd 202c 	ldrh.w	r2, [sp, #44]	; 0x2c
 802317e:	ea4f 2c23 	mov.w	ip, r3, asr #8
 8023182:	f001 01f8 	and.w	r1, r1, #248	; 0xf8
 8023186:	fb11 f107 	smulbb	r1, r1, r7
 802318a:	ea4f 0ee0 	mov.w	lr, r0, asr #3
 802318e:	f00c 0cf8 	and.w	ip, ip, #248	; 0xf8
 8023192:	00c0      	lsls	r0, r0, #3
 8023194:	fb0c 1c02 	mla	ip, ip, r2, r1
 8023198:	b2c0      	uxtb	r0, r0
 802319a:	10d9      	asrs	r1, r3, #3
 802319c:	00db      	lsls	r3, r3, #3
 802319e:	f00e 0efc 	and.w	lr, lr, #252	; 0xfc
 80231a2:	b2db      	uxtb	r3, r3
 80231a4:	fb10 f007 	smulbb	r0, r0, r7
 80231a8:	fa1f fc8c 	uxth.w	ip, ip
 80231ac:	fb03 0302 	mla	r3, r3, r2, r0
 80231b0:	f001 01fc 	and.w	r1, r1, #252	; 0xfc
 80231b4:	fb1e fe07 	smulbb	lr, lr, r7
 80231b8:	fb01 e102 	mla	r1, r1, r2, lr
 80231bc:	b29a      	uxth	r2, r3
 80231be:	f10c 0301 	add.w	r3, ip, #1
 80231c2:	b289      	uxth	r1, r1
 80231c4:	eb03 2c1c 	add.w	ip, r3, ip, lsr #8
 80231c8:	1c53      	adds	r3, r2, #1
 80231ca:	eb03 2312 	add.w	r3, r3, r2, lsr #8
 80231ce:	1c4a      	adds	r2, r1, #1
 80231d0:	eb02 2111 	add.w	r1, r2, r1, lsr #8
 80231d4:	f40c 4c78 	and.w	ip, ip, #63488	; 0xf800
 80231d8:	f3c3 23c4 	ubfx	r3, r3, #11, #5
 80231dc:	0949      	lsrs	r1, r1, #5
 80231de:	ea43 030c 	orr.w	r3, r3, ip
 80231e2:	f401 61fc 	and.w	r1, r1, #2016	; 0x7e0
 80231e6:	430b      	orrs	r3, r1
 80231e8:	f8a8 3000 	strh.w	r3, [r8]
 80231ec:	9b1f      	ldr	r3, [sp, #124]	; 0x7c
 80231ee:	441c      	add	r4, r3
 80231f0:	9b20      	ldr	r3, [sp, #128]	; 0x80
 80231f2:	f108 0802 	add.w	r8, r8, #2
 80231f6:	441e      	add	r6, r3
 80231f8:	f109 39ff 	add.w	r9, r9, #4294967295
 80231fc:	e74a      	b.n	8023094 <_ZN8touchgfx8LCD16bpp52TextureMapper_RGB565_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x96>
 80231fe:	9b1f      	ldr	r3, [sp, #124]	; 0x7c
 8023200:	441c      	add	r4, r3
 8023202:	9b20      	ldr	r3, [sp, #128]	; 0x80
 8023204:	441e      	add	r6, r3
 8023206:	9b07      	ldr	r3, [sp, #28]
 8023208:	3302      	adds	r3, #2
 802320a:	3d01      	subs	r5, #1
 802320c:	9307      	str	r3, [sp, #28]
 802320e:	e722      	b.n	8023056 <_ZN8touchgfx8LCD16bpp52TextureMapper_RGB565_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x58>
 8023210:	d022      	beq.n	8023258 <_ZN8touchgfx8LCD16bpp52TextureMapper_RGB565_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x25a>
 8023212:	981f      	ldr	r0, [sp, #124]	; 0x7c
 8023214:	1e6b      	subs	r3, r5, #1
 8023216:	fb00 4003 	mla	r0, r0, r3, r4
 802321a:	1400      	asrs	r0, r0, #16
 802321c:	f53f af37 	bmi.w	802308e <_ZN8touchgfx8LCD16bpp52TextureMapper_RGB565_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x90>
 8023220:	3901      	subs	r1, #1
 8023222:	4288      	cmp	r0, r1
 8023224:	f6bf af33 	bge.w	802308e <_ZN8touchgfx8LCD16bpp52TextureMapper_RGB565_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x90>
 8023228:	9920      	ldr	r1, [sp, #128]	; 0x80
 802322a:	fb01 6303 	mla	r3, r1, r3, r6
 802322e:	141b      	asrs	r3, r3, #16
 8023230:	f53f af2d 	bmi.w	802308e <_ZN8touchgfx8LCD16bpp52TextureMapper_RGB565_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x90>
 8023234:	3a01      	subs	r2, #1
 8023236:	4293      	cmp	r3, r2
 8023238:	f6bf af29 	bge.w	802308e <_ZN8touchgfx8LCD16bpp52TextureMapper_RGB565_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x90>
 802323c:	f8dd 901c 	ldr.w	r9, [sp, #28]
 8023240:	f8bd a02c 	ldrh.w	sl, [sp, #44]	; 0x2c
 8023244:	46a8      	mov	r8, r5
 8023246:	f1b8 0f00 	cmp.w	r8, #0
 802324a:	dc5e      	bgt.n	802330a <_ZN8touchgfx8LCD16bpp52TextureMapper_RGB565_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x30c>
 802324c:	9b07      	ldr	r3, [sp, #28]
 802324e:	ea25 75e5 	bic.w	r5, r5, r5, asr #31
 8023252:	eb03 0345 	add.w	r3, r3, r5, lsl #1
 8023256:	9307      	str	r3, [sp, #28]
 8023258:	9b0a      	ldr	r3, [sp, #40]	; 0x28
 802325a:	2b00      	cmp	r3, #0
 802325c:	f340 80f6 	ble.w	802344c <_ZN8touchgfx8LCD16bpp52TextureMapper_RGB565_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x44e>
 8023260:	ee30 0a04 	vadd.f32	s0, s0, s8
 8023264:	eeb7 7a00 	vmov.f32	s14, #112	; 0x3f800000  1.0
 8023268:	eec7 7a00 	vdiv.f32	s15, s14, s0
 802326c:	9b1c      	ldr	r3, [sp, #112]	; 0x70
 802326e:	ee70 0aa4 	vadd.f32	s1, s1, s9
 8023272:	ee31 1a05 	vadd.f32	s2, s2, s10
 8023276:	ee20 7aa7 	vmul.f32	s14, s1, s15
 802327a:	eef0 6a62 	vmov.f32	s13, s5
 802327e:	ee61 7a27 	vmul.f32	s15, s2, s15
 8023282:	eefe 6ac8 	vcvt.s32.f32	s13, s13, #16
 8023286:	ee77 2a62 	vsub.f32	s5, s14, s5
 802328a:	ee16 4a90 	vmov	r4, s13
 802328e:	eefe 2ac8 	vcvt.s32.f32	s5, s5, #16
 8023292:	eef0 6a43 	vmov.f32	s13, s6
 8023296:	ee37 3ac3 	vsub.f32	s6, s15, s6
 802329a:	ee12 2a90 	vmov	r2, s5
 802329e:	eebe 3ac8 	vcvt.s32.f32	s6, s6, #16
 80232a2:	fb92 f3f3 	sdiv	r3, r2, r3
 80232a6:	ee13 2a10 	vmov	r2, s6
 80232aa:	931f      	str	r3, [sp, #124]	; 0x7c
 80232ac:	9b1c      	ldr	r3, [sp, #112]	; 0x70
 80232ae:	fb92 f3f3 	sdiv	r3, r2, r3
 80232b2:	9320      	str	r3, [sp, #128]	; 0x80
 80232b4:	9b0a      	ldr	r3, [sp, #40]	; 0x28
 80232b6:	9a10      	ldr	r2, [sp, #64]	; 0x40
 80232b8:	3b01      	subs	r3, #1
 80232ba:	eefe 6ac8 	vcvt.s32.f32	s13, s13, #16
 80232be:	930a      	str	r3, [sp, #40]	; 0x28
 80232c0:	9b1c      	ldr	r3, [sp, #112]	; 0x70
 80232c2:	ee16 6a90 	vmov	r6, s13
 80232c6:	bf14      	ite	ne
 80232c8:	461d      	movne	r5, r3
 80232ca:	4615      	moveq	r5, r2
 80232cc:	eeb0 3a67 	vmov.f32	s6, s15
 80232d0:	eef0 2a47 	vmov.f32	s5, s14
 80232d4:	e6b0      	b.n	8023038 <_ZN8touchgfx8LCD16bpp52TextureMapper_RGB565_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x3a>
 80232d6:	f111 0a01 	adds.w	sl, r1, #1
 80232da:	d487      	bmi.n	80231ec <_ZN8touchgfx8LCD16bpp52TextureMapper_RGB565_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x1ee>
 80232dc:	45d6      	cmp	lr, sl
 80232de:	db85      	blt.n	80231ec <_ZN8touchgfx8LCD16bpp52TextureMapper_RGB565_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x1ee>
 80232e0:	f110 0a01 	adds.w	sl, r0, #1
 80232e4:	d482      	bmi.n	80231ec <_ZN8touchgfx8LCD16bpp52TextureMapper_RGB565_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x1ee>
 80232e6:	4553      	cmp	r3, sl
 80232e8:	db80      	blt.n	80231ec <_ZN8touchgfx8LCD16bpp52TextureMapper_RGB565_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x1ee>
 80232ea:	9f0b      	ldr	r7, [sp, #44]	; 0x2c
 80232ec:	9101      	str	r1, [sp, #4]
 80232ee:	b21b      	sxth	r3, r3
 80232f0:	e9cd 0202 	strd	r0, r2, [sp, #8]
 80232f4:	9300      	str	r3, [sp, #0]
 80232f6:	e9cd c704 	strd	ip, r7, [sp, #16]
 80232fa:	fa0f f38e 	sxth.w	r3, lr
 80232fe:	9a09      	ldr	r2, [sp, #36]	; 0x24
 8023300:	9811      	ldr	r0, [sp, #68]	; 0x44
 8023302:	4641      	mov	r1, r8
 8023304:	f7ff fdb4 	bl	8022e70 <_ZNK8touchgfx8LCD16bpp52TextureMapper_RGB565_Opaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKtssiihhh>
 8023308:	e770      	b.n	80231ec <_ZN8touchgfx8LCD16bpp52TextureMapper_RGB565_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x1ee>
 802330a:	9b24      	ldr	r3, [sp, #144]	; 0x90
 802330c:	9f09      	ldr	r7, [sp, #36]	; 0x24
 802330e:	f9b3 1008 	ldrsh.w	r1, [r3, #8]
 8023312:	1430      	asrs	r0, r6, #16
 8023314:	1423      	asrs	r3, r4, #16
 8023316:	fb01 3000 	mla	r0, r1, r0, r3
 802331a:	9b09      	ldr	r3, [sp, #36]	; 0x24
 802331c:	f837 c010 	ldrh.w	ip, [r7, r0, lsl #1]
 8023320:	eb03 0340 	add.w	r3, r3, r0, lsl #1
 8023324:	f3c6 3e03 	ubfx	lr, r6, #12, #4
 8023328:	f3c4 3203 	ubfx	r2, r4, #12, #4
 802332c:	8858      	ldrh	r0, [r3, #2]
 802332e:	f1be 0f00 	cmp.w	lr, #0
 8023332:	d00b      	beq.n	802334c <_ZN8touchgfx8LCD16bpp52TextureMapper_RGB565_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x34e>
 8023334:	f101 4100 	add.w	r1, r1, #2147483648	; 0x80000000
 8023338:	3901      	subs	r1, #1
 802333a:	0049      	lsls	r1, r1, #1
 802333c:	3102      	adds	r1, #2
 802333e:	eb03 0b01 	add.w	fp, r3, r1
 8023342:	5a5b      	ldrh	r3, [r3, r1]
 8023344:	930e      	str	r3, [sp, #56]	; 0x38
 8023346:	f8bb 3002 	ldrh.w	r3, [fp, #2]
 802334a:	930f      	str	r3, [sp, #60]	; 0x3c
 802334c:	ea4f 410c 	mov.w	r1, ip, lsl #16
 8023350:	fb12 f30e 	smulbb	r3, r2, lr
 8023354:	f42c 6cfc 	bic.w	ip, ip, #2016	; 0x7e0
 8023358:	ea4f 4b00 	mov.w	fp, r0, lsl #16
 802335c:	f001 61fc 	and.w	r1, r1, #132120576	; 0x7e00000
 8023360:	10db      	asrs	r3, r3, #3
 8023362:	ea41 010c 	orr.w	r1, r1, ip
 8023366:	f00b 6bfc 	and.w	fp, fp, #132120576	; 0x7e00000
 802336a:	f1ce 0c10 	rsb	ip, lr, #16
 802336e:	f420 60fc 	bic.w	r0, r0, #2016	; 0x7e0
 8023372:	ebac 0c02 	sub.w	ip, ip, r2
 8023376:	ea4b 0000 	orr.w	r0, fp, r0
 802337a:	ebc3 0242 	rsb	r2, r3, r2, lsl #1
 802337e:	4350      	muls	r0, r2
 8023380:	9a0f      	ldr	r2, [sp, #60]	; 0x3c
 8023382:	9f08      	ldr	r7, [sp, #32]
 8023384:	eb03 0c4c 	add.w	ip, r3, ip, lsl #1
 8023388:	fb0c 0c01 	mla	ip, ip, r1, r0
 802338c:	ea4f 4b02 	mov.w	fp, r2, lsl #16
 8023390:	f422 61fc 	bic.w	r1, r2, #2016	; 0x7e0
 8023394:	9a0e      	ldr	r2, [sp, #56]	; 0x38
 8023396:	980e      	ldr	r0, [sp, #56]	; 0x38
 8023398:	f00b 6bfc 	and.w	fp, fp, #132120576	; 0x7e00000
 802339c:	0412      	lsls	r2, r2, #16
 802339e:	ea4b 0101 	orr.w	r1, fp, r1
 80233a2:	f420 60fc 	bic.w	r0, r0, #2016	; 0x7e0
 80233a6:	f002 62fc 	and.w	r2, r2, #132120576	; 0x7e00000
 80233aa:	fb03 c101 	mla	r1, r3, r1, ip
 80233ae:	4302      	orrs	r2, r0
 80233b0:	ebc3 034e 	rsb	r3, r3, lr, lsl #1
 80233b4:	fb03 1202 	mla	r2, r3, r2, r1
 80233b8:	ea4f 5b52 	mov.w	fp, r2, lsr #21
 80233bc:	0952      	lsrs	r2, r2, #5
 80233be:	f422 63fc 	bic.w	r3, r2, #2016	; 0x7e0
 80233c2:	f40b 6bfc 	and.w	fp, fp, #2016	; 0x7e0
 80233c6:	f8b9 2000 	ldrh.w	r2, [r9]
 80233ca:	ea4b 0303 	orr.w	r3, fp, r3
 80233ce:	b29b      	uxth	r3, r3
 80233d0:	1211      	asrs	r1, r2, #8
 80233d2:	1218      	asrs	r0, r3, #8
 80233d4:	f001 01f8 	and.w	r1, r1, #248	; 0xf8
 80233d8:	fb11 f107 	smulbb	r1, r1, r7
 80233dc:	ea4f 0ce2 	mov.w	ip, r2, asr #3
 80233e0:	f000 00f8 	and.w	r0, r0, #248	; 0xf8
 80233e4:	00d2      	lsls	r2, r2, #3
 80233e6:	fb00 100a 	mla	r0, r0, sl, r1
 80233ea:	f00c 0cfc 	and.w	ip, ip, #252	; 0xfc
 80233ee:	10d9      	asrs	r1, r3, #3
 80233f0:	b2d2      	uxtb	r2, r2
 80233f2:	00db      	lsls	r3, r3, #3
 80233f4:	fb1c fc07 	smulbb	ip, ip, r7
 80233f8:	fb12 f207 	smulbb	r2, r2, r7
 80233fc:	f001 01fc 	and.w	r1, r1, #252	; 0xfc
 8023400:	b2db      	uxtb	r3, r3
 8023402:	b280      	uxth	r0, r0
 8023404:	fb01 c10a 	mla	r1, r1, sl, ip
 8023408:	fb03 230a 	mla	r3, r3, sl, r2
 802340c:	b29b      	uxth	r3, r3
 802340e:	b289      	uxth	r1, r1
 8023410:	1c42      	adds	r2, r0, #1
 8023412:	eb02 2010 	add.w	r0, r2, r0, lsr #8
 8023416:	f101 0c01 	add.w	ip, r1, #1
 802341a:	1c5a      	adds	r2, r3, #1
 802341c:	eb02 2213 	add.w	r2, r2, r3, lsr #8
 8023420:	eb0c 2c11 	add.w	ip, ip, r1, lsr #8
 8023424:	9b1f      	ldr	r3, [sp, #124]	; 0x7c
 8023426:	f400 4078 	and.w	r0, r0, #63488	; 0xf800
 802342a:	f3c2 22c4 	ubfx	r2, r2, #11, #5
 802342e:	ea4f 1c5c 	mov.w	ip, ip, lsr #5
 8023432:	4310      	orrs	r0, r2
 8023434:	f40c 6cfc 	and.w	ip, ip, #2016	; 0x7e0
 8023438:	441c      	add	r4, r3
 802343a:	9b20      	ldr	r3, [sp, #128]	; 0x80
 802343c:	ea40 000c 	orr.w	r0, r0, ip
 8023440:	f829 0b02 	strh.w	r0, [r9], #2
 8023444:	441e      	add	r6, r3
 8023446:	f108 38ff 	add.w	r8, r8, #4294967295
 802344a:	e6fc      	b.n	8023246 <_ZN8touchgfx8LCD16bpp52TextureMapper_RGB565_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x248>
 802344c:	b013      	add	sp, #76	; 0x4c
 802344e:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}

08023452 <_ZNK8touchgfx8LCD16bpp54TextureMapper_RGB565_Opaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKtssiihh>:
 8023452:	e92d 43f0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, lr}
 8023456:	e9dd 4e08 	ldrd	r4, lr, [sp, #32]
 802345a:	fb0e 4703 	mla	r7, lr, r3, r4
 802345e:	f1be 0f00 	cmp.w	lr, #0
 8023462:	f9bd 901c 	ldrsh.w	r9, [sp, #28]
 8023466:	f89d 5028 	ldrb.w	r5, [sp, #40]	; 0x28
 802346a:	f89d 602c 	ldrb.w	r6, [sp, #44]	; 0x2c
 802346e:	8808      	ldrh	r0, [r1, #0]
 8023470:	eb02 0847 	add.w	r8, r2, r7, lsl #1
 8023474:	db60      	blt.n	8023538 <_ZNK8touchgfx8LCD16bpp54TextureMapper_RGB565_Opaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKtssiihh+0xe6>
 8023476:	45f1      	cmp	r9, lr
 8023478:	dd5e      	ble.n	8023538 <_ZNK8touchgfx8LCD16bpp54TextureMapper_RGB565_Opaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKtssiihh+0xe6>
 802347a:	2c00      	cmp	r4, #0
 802347c:	db5a      	blt.n	8023534 <_ZNK8touchgfx8LCD16bpp54TextureMapper_RGB565_Opaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKtssiihh+0xe2>
 802347e:	42a3      	cmp	r3, r4
 8023480:	dd58      	ble.n	8023534 <_ZNK8touchgfx8LCD16bpp54TextureMapper_RGB565_Opaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKtssiihh+0xe2>
 8023482:	f832 c017 	ldrh.w	ip, [r2, r7, lsl #1]
 8023486:	1c62      	adds	r2, r4, #1
 8023488:	d459      	bmi.n	802353e <_ZNK8touchgfx8LCD16bpp54TextureMapper_RGB565_Opaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKtssiihh+0xec>
 802348a:	4293      	cmp	r3, r2
 802348c:	dd57      	ble.n	802353e <_ZNK8touchgfx8LCD16bpp54TextureMapper_RGB565_Opaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKtssiihh+0xec>
 802348e:	2d00      	cmp	r5, #0
 8023490:	d055      	beq.n	802353e <_ZNK8touchgfx8LCD16bpp54TextureMapper_RGB565_Opaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKtssiihh+0xec>
 8023492:	f8b8 7002 	ldrh.w	r7, [r8, #2]
 8023496:	f11e 0e01 	adds.w	lr, lr, #1
 802349a:	d454      	bmi.n	8023546 <_ZNK8touchgfx8LCD16bpp54TextureMapper_RGB565_Opaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKtssiihh+0xf4>
 802349c:	45f1      	cmp	r9, lr
 802349e:	dd52      	ble.n	8023546 <_ZNK8touchgfx8LCD16bpp54TextureMapper_RGB565_Opaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKtssiihh+0xf4>
 80234a0:	2e00      	cmp	r6, #0
 80234a2:	d050      	beq.n	8023546 <_ZNK8touchgfx8LCD16bpp54TextureMapper_RGB565_Opaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKtssiihh+0xf4>
 80234a4:	2c00      	cmp	r4, #0
 80234a6:	db4c      	blt.n	8023542 <_ZNK8touchgfx8LCD16bpp54TextureMapper_RGB565_Opaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKtssiihh+0xf0>
 80234a8:	42a3      	cmp	r3, r4
 80234aa:	dd4a      	ble.n	8023542 <_ZNK8touchgfx8LCD16bpp54TextureMapper_RGB565_Opaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKtssiihh+0xf0>
 80234ac:	f838 2013 	ldrh.w	r2, [r8, r3, lsl #1]
 80234b0:	3401      	adds	r4, #1
 80234b2:	d405      	bmi.n	80234c0 <_ZNK8touchgfx8LCD16bpp54TextureMapper_RGB565_Opaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKtssiihh+0x6e>
 80234b4:	42a3      	cmp	r3, r4
 80234b6:	dd03      	ble.n	80234c0 <_ZNK8touchgfx8LCD16bpp54TextureMapper_RGB565_Opaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKtssiihh+0x6e>
 80234b8:	b115      	cbz	r5, 80234c0 <_ZNK8touchgfx8LCD16bpp54TextureMapper_RGB565_Opaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKtssiihh+0x6e>
 80234ba:	3301      	adds	r3, #1
 80234bc:	f838 0013 	ldrh.w	r0, [r8, r3, lsl #1]
 80234c0:	ea4f 430c 	mov.w	r3, ip, lsl #16
 80234c4:	fb15 f406 	smulbb	r4, r5, r6
 80234c8:	f003 63fc 	and.w	r3, r3, #132120576	; 0x7e00000
 80234cc:	ea4f 4e07 	mov.w	lr, r7, lsl #16
 80234d0:	f42c 6cfc 	bic.w	ip, ip, #2016	; 0x7e0
 80234d4:	f3c4 04c7 	ubfx	r4, r4, #3, #8
 80234d8:	ea43 0c0c 	orr.w	ip, r3, ip
 80234dc:	f00e 6efc 	and.w	lr, lr, #132120576	; 0x7e00000
 80234e0:	f1c6 0310 	rsb	r3, r6, #16
 80234e4:	f427 67fc 	bic.w	r7, r7, #2016	; 0x7e0
 80234e8:	1b5b      	subs	r3, r3, r5
 80234ea:	ea4e 0707 	orr.w	r7, lr, r7
 80234ee:	ebc4 0545 	rsb	r5, r4, r5, lsl #1
 80234f2:	eb04 0343 	add.w	r3, r4, r3, lsl #1
 80234f6:	437d      	muls	r5, r7
 80234f8:	fb03 5c0c 	mla	ip, r3, ip, r5
 80234fc:	0403      	lsls	r3, r0, #16
 80234fe:	f003 63fc 	and.w	r3, r3, #132120576	; 0x7e00000
 8023502:	f420 60fc 	bic.w	r0, r0, #2016	; 0x7e0
 8023506:	4318      	orrs	r0, r3
 8023508:	0413      	lsls	r3, r2, #16
 802350a:	f003 63fc 	and.w	r3, r3, #132120576	; 0x7e00000
 802350e:	f422 62fc 	bic.w	r2, r2, #2016	; 0x7e0
 8023512:	4313      	orrs	r3, r2
 8023514:	fb04 c000 	mla	r0, r4, r0, ip
 8023518:	ebc4 0646 	rsb	r6, r4, r6, lsl #1
 802351c:	fb06 0003 	mla	r0, r6, r3, r0
 8023520:	0d43      	lsrs	r3, r0, #21
 8023522:	0940      	lsrs	r0, r0, #5
 8023524:	f403 63fc 	and.w	r3, r3, #2016	; 0x7e0
 8023528:	f420 60fc 	bic.w	r0, r0, #2016	; 0x7e0
 802352c:	4318      	orrs	r0, r3
 802352e:	8008      	strh	r0, [r1, #0]
 8023530:	e8bd 83f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, pc}
 8023534:	4684      	mov	ip, r0
 8023536:	e7a6      	b.n	8023486 <_ZNK8touchgfx8LCD16bpp54TextureMapper_RGB565_Opaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKtssiihh+0x34>
 8023538:	4607      	mov	r7, r0
 802353a:	4684      	mov	ip, r0
 802353c:	e7ab      	b.n	8023496 <_ZNK8touchgfx8LCD16bpp54TextureMapper_RGB565_Opaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKtssiihh+0x44>
 802353e:	4607      	mov	r7, r0
 8023540:	e7a9      	b.n	8023496 <_ZNK8touchgfx8LCD16bpp54TextureMapper_RGB565_Opaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKtssiihh+0x44>
 8023542:	4602      	mov	r2, r0
 8023544:	e7b4      	b.n	80234b0 <_ZNK8touchgfx8LCD16bpp54TextureMapper_RGB565_Opaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKtssiihh+0x5e>
 8023546:	4602      	mov	r2, r0
 8023548:	e7ba      	b.n	80234c0 <_ZNK8touchgfx8LCD16bpp54TextureMapper_RGB565_Opaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKtssiihh+0x6e>

0802354a <_ZN8touchgfx8LCD16bpp54TextureMapper_RGB565_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff>:
 802354a:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 802354e:	b08f      	sub	sp, #60	; 0x3c
 8023550:	461d      	mov	r5, r3
 8023552:	9b1d      	ldr	r3, [sp, #116]	; 0x74
 8023554:	920c      	str	r2, [sp, #48]	; 0x30
 8023556:	e9dd 271e 	ldrd	r2, r7, [sp, #120]	; 0x78
 802355a:	9107      	str	r1, [sp, #28]
 802355c:	6859      	ldr	r1, [r3, #4]
 802355e:	681b      	ldr	r3, [r3, #0]
 8023560:	900d      	str	r0, [sp, #52]	; 0x34
 8023562:	fb01 2707 	mla	r7, r1, r7, r2
 8023566:	eb03 0747 	add.w	r7, r3, r7, lsl #1
 802356a:	9b20      	ldr	r3, [sp, #128]	; 0x80
 802356c:	e9dd 4619 	ldrd	r4, r6, [sp, #100]	; 0x64
 8023570:	f8d3 8000 	ldr.w	r8, [r3]
 8023574:	9b07      	ldr	r3, [sp, #28]
 8023576:	2b00      	cmp	r3, #0
 8023578:	dc03      	bgt.n	8023582 <_ZN8touchgfx8LCD16bpp54TextureMapper_RGB565_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x38>
 802357a:	9b0c      	ldr	r3, [sp, #48]	; 0x30
 802357c:	2b00      	cmp	r3, #0
 802357e:	f340 8181 	ble.w	8023884 <_ZN8touchgfx8LCD16bpp54TextureMapper_RGB565_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x33a>
 8023582:	9b20      	ldr	r3, [sp, #128]	; 0x80
 8023584:	f9b3 1008 	ldrsh.w	r1, [r3, #8]
 8023588:	f9b3 200c 	ldrsh.w	r2, [r3, #12]
 802358c:	1e48      	subs	r0, r1, #1
 802358e:	f102 3cff 	add.w	ip, r2, #4294967295
 8023592:	2d00      	cmp	r5, #0
 8023594:	f340 809b 	ble.w	80236ce <_ZN8touchgfx8LCD16bpp54TextureMapper_RGB565_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x184>
 8023598:	ea5f 4e24 	movs.w	lr, r4, asr #16
 802359c:	ea4f 4326 	mov.w	r3, r6, asr #16
 80235a0:	d406      	bmi.n	80235b0 <_ZN8touchgfx8LCD16bpp54TextureMapper_RGB565_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x66>
 80235a2:	4586      	cmp	lr, r0
 80235a4:	da04      	bge.n	80235b0 <_ZN8touchgfx8LCD16bpp54TextureMapper_RGB565_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x66>
 80235a6:	2b00      	cmp	r3, #0
 80235a8:	db02      	blt.n	80235b0 <_ZN8touchgfx8LCD16bpp54TextureMapper_RGB565_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x66>
 80235aa:	4563      	cmp	r3, ip
 80235ac:	f2c0 8090 	blt.w	80236d0 <_ZN8touchgfx8LCD16bpp54TextureMapper_RGB565_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x186>
 80235b0:	f11e 0e01 	adds.w	lr, lr, #1
 80235b4:	f100 8084 	bmi.w	80236c0 <_ZN8touchgfx8LCD16bpp54TextureMapper_RGB565_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x176>
 80235b8:	4571      	cmp	r1, lr
 80235ba:	f2c0 8081 	blt.w	80236c0 <_ZN8touchgfx8LCD16bpp54TextureMapper_RGB565_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x176>
 80235be:	3301      	adds	r3, #1
 80235c0:	d47e      	bmi.n	80236c0 <_ZN8touchgfx8LCD16bpp54TextureMapper_RGB565_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x176>
 80235c2:	429a      	cmp	r2, r3
 80235c4:	db7c      	blt.n	80236c0 <_ZN8touchgfx8LCD16bpp54TextureMapper_RGB565_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x176>
 80235c6:	46aa      	mov	sl, r5
 80235c8:	46b9      	mov	r9, r7
 80235ca:	f1ba 0f00 	cmp.w	sl, #0
 80235ce:	f340 8099 	ble.w	8023704 <_ZN8touchgfx8LCD16bpp54TextureMapper_RGB565_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x1ba>
 80235d2:	9b20      	ldr	r3, [sp, #128]	; 0x80
 80235d4:	1421      	asrs	r1, r4, #16
 80235d6:	ea4f 4026 	mov.w	r0, r6, asr #16
 80235da:	f3c4 3203 	ubfx	r2, r4, #12, #4
 80235de:	f3c6 3c03 	ubfx	ip, r6, #12, #4
 80235e2:	e9d3 e302 	ldrd	lr, r3, [r3, #8]
 80235e6:	f100 80d0 	bmi.w	802378a <_ZN8touchgfx8LCD16bpp54TextureMapper_RGB565_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x240>
 80235ea:	f10e 3bff 	add.w	fp, lr, #4294967295
 80235ee:	4559      	cmp	r1, fp
 80235f0:	f280 80cb 	bge.w	802378a <_ZN8touchgfx8LCD16bpp54TextureMapper_RGB565_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x240>
 80235f4:	2800      	cmp	r0, #0
 80235f6:	f2c0 80c8 	blt.w	802378a <_ZN8touchgfx8LCD16bpp54TextureMapper_RGB565_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x240>
 80235fa:	f103 3bff 	add.w	fp, r3, #4294967295
 80235fe:	4558      	cmp	r0, fp
 8023600:	f280 80c3 	bge.w	802378a <_ZN8touchgfx8LCD16bpp54TextureMapper_RGB565_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x240>
 8023604:	fa0f fe8e 	sxth.w	lr, lr
 8023608:	fb00 110e 	mla	r1, r0, lr, r1
 802360c:	eb08 0041 	add.w	r0, r8, r1, lsl #1
 8023610:	f838 b011 	ldrh.w	fp, [r8, r1, lsl #1]
 8023614:	8841      	ldrh	r1, [r0, #2]
 8023616:	f1bc 0f00 	cmp.w	ip, #0
 802361a:	d00b      	beq.n	8023634 <_ZN8touchgfx8LCD16bpp54TextureMapper_RGB565_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0xea>
 802361c:	f10e 4300 	add.w	r3, lr, #2147483648	; 0x80000000
 8023620:	3b01      	subs	r3, #1
 8023622:	005b      	lsls	r3, r3, #1
 8023624:	3302      	adds	r3, #2
 8023626:	eb00 0e03 	add.w	lr, r0, r3
 802362a:	5ac3      	ldrh	r3, [r0, r3]
 802362c:	9308      	str	r3, [sp, #32]
 802362e:	f8be 3002 	ldrh.w	r3, [lr, #2]
 8023632:	9309      	str	r3, [sp, #36]	; 0x24
 8023634:	ea4f 400b 	mov.w	r0, fp, lsl #16
 8023638:	f000 60fc 	and.w	r0, r0, #132120576	; 0x7e00000
 802363c:	f42b 6bfc 	bic.w	fp, fp, #2016	; 0x7e0
 8023640:	ea40 000b 	orr.w	r0, r0, fp
 8023644:	fb12 f30c 	smulbb	r3, r2, ip
 8023648:	ea4f 4b01 	mov.w	fp, r1, lsl #16
 802364c:	10db      	asrs	r3, r3, #3
 802364e:	f1cc 0e10 	rsb	lr, ip, #16
 8023652:	f00b 6bfc 	and.w	fp, fp, #132120576	; 0x7e00000
 8023656:	f421 61fc 	bic.w	r1, r1, #2016	; 0x7e0
 802365a:	ebae 0e02 	sub.w	lr, lr, r2
 802365e:	ea4b 0101 	orr.w	r1, fp, r1
 8023662:	ebc3 0242 	rsb	r2, r3, r2, lsl #1
 8023666:	4351      	muls	r1, r2
 8023668:	9a09      	ldr	r2, [sp, #36]	; 0x24
 802366a:	eb03 0e4e 	add.w	lr, r3, lr, lsl #1
 802366e:	fb0e 1e00 	mla	lr, lr, r0, r1
 8023672:	0410      	lsls	r0, r2, #16
 8023674:	f000 60fc 	and.w	r0, r0, #132120576	; 0x7e00000
 8023678:	f422 62fc 	bic.w	r2, r2, #2016	; 0x7e0
 802367c:	4310      	orrs	r0, r2
 802367e:	9a08      	ldr	r2, [sp, #32]
 8023680:	9908      	ldr	r1, [sp, #32]
 8023682:	0412      	lsls	r2, r2, #16
 8023684:	fb03 e000 	mla	r0, r3, r0, lr
 8023688:	f002 62fc 	and.w	r2, r2, #132120576	; 0x7e00000
 802368c:	f421 6efc 	bic.w	lr, r1, #2016	; 0x7e0
 8023690:	ea42 020e 	orr.w	r2, r2, lr
 8023694:	ebc3 034c 	rsb	r3, r3, ip, lsl #1
 8023698:	fb03 0302 	mla	r3, r3, r2, r0
 802369c:	0d5a      	lsrs	r2, r3, #21
 802369e:	095b      	lsrs	r3, r3, #5
 80236a0:	f402 62fc 	and.w	r2, r2, #2016	; 0x7e0
 80236a4:	f423 63fc 	bic.w	r3, r3, #2016	; 0x7e0
 80236a8:	4313      	orrs	r3, r2
 80236aa:	f8a9 3000 	strh.w	r3, [r9]
 80236ae:	9b1b      	ldr	r3, [sp, #108]	; 0x6c
 80236b0:	441c      	add	r4, r3
 80236b2:	9b1c      	ldr	r3, [sp, #112]	; 0x70
 80236b4:	f109 0902 	add.w	r9, r9, #2
 80236b8:	441e      	add	r6, r3
 80236ba:	f10a 3aff 	add.w	sl, sl, #4294967295
 80236be:	e784      	b.n	80235ca <_ZN8touchgfx8LCD16bpp54TextureMapper_RGB565_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x80>
 80236c0:	9b1b      	ldr	r3, [sp, #108]	; 0x6c
 80236c2:	441c      	add	r4, r3
 80236c4:	9b1c      	ldr	r3, [sp, #112]	; 0x70
 80236c6:	3d01      	subs	r5, #1
 80236c8:	441e      	add	r6, r3
 80236ca:	3702      	adds	r7, #2
 80236cc:	e761      	b.n	8023592 <_ZN8touchgfx8LCD16bpp54TextureMapper_RGB565_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x48>
 80236ce:	d01d      	beq.n	802370c <_ZN8touchgfx8LCD16bpp54TextureMapper_RGB565_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x1c2>
 80236d0:	981b      	ldr	r0, [sp, #108]	; 0x6c
 80236d2:	1e6b      	subs	r3, r5, #1
 80236d4:	fb00 4003 	mla	r0, r0, r3, r4
 80236d8:	1400      	asrs	r0, r0, #16
 80236da:	f53f af74 	bmi.w	80235c6 <_ZN8touchgfx8LCD16bpp54TextureMapper_RGB565_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x7c>
 80236de:	3901      	subs	r1, #1
 80236e0:	4288      	cmp	r0, r1
 80236e2:	f6bf af70 	bge.w	80235c6 <_ZN8touchgfx8LCD16bpp54TextureMapper_RGB565_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x7c>
 80236e6:	991c      	ldr	r1, [sp, #112]	; 0x70
 80236e8:	fb01 6303 	mla	r3, r1, r3, r6
 80236ec:	141b      	asrs	r3, r3, #16
 80236ee:	f53f af6a 	bmi.w	80235c6 <_ZN8touchgfx8LCD16bpp54TextureMapper_RGB565_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x7c>
 80236f2:	3a01      	subs	r2, #1
 80236f4:	4293      	cmp	r3, r2
 80236f6:	f6bf af66 	bge.w	80235c6 <_ZN8touchgfx8LCD16bpp54TextureMapper_RGB565_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x7c>
 80236fa:	46a9      	mov	r9, r5
 80236fc:	46ba      	mov	sl, r7
 80236fe:	f1b9 0f00 	cmp.w	r9, #0
 8023702:	dc5a      	bgt.n	80237ba <_ZN8touchgfx8LCD16bpp54TextureMapper_RGB565_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x270>
 8023704:	ea25 75e5 	bic.w	r5, r5, r5, asr #31
 8023708:	eb07 0745 	add.w	r7, r7, r5, lsl #1
 802370c:	9b07      	ldr	r3, [sp, #28]
 802370e:	2b00      	cmp	r3, #0
 8023710:	f340 80b8 	ble.w	8023884 <_ZN8touchgfx8LCD16bpp54TextureMapper_RGB565_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x33a>
 8023714:	ee30 0a04 	vadd.f32	s0, s0, s8
 8023718:	eeb7 7a00 	vmov.f32	s14, #112	; 0x3f800000  1.0
 802371c:	eec7 7a00 	vdiv.f32	s15, s14, s0
 8023720:	9b18      	ldr	r3, [sp, #96]	; 0x60
 8023722:	ee70 0aa4 	vadd.f32	s1, s1, s9
 8023726:	ee31 1a05 	vadd.f32	s2, s2, s10
 802372a:	ee20 7aa7 	vmul.f32	s14, s1, s15
 802372e:	eef0 6a62 	vmov.f32	s13, s5
 8023732:	ee61 7a27 	vmul.f32	s15, s2, s15
 8023736:	eefe 6ac8 	vcvt.s32.f32	s13, s13, #16
 802373a:	ee77 2a62 	vsub.f32	s5, s14, s5
 802373e:	ee16 4a90 	vmov	r4, s13
 8023742:	eefe 2ac8 	vcvt.s32.f32	s5, s5, #16
 8023746:	eef0 6a43 	vmov.f32	s13, s6
 802374a:	ee37 3ac3 	vsub.f32	s6, s15, s6
 802374e:	ee12 2a90 	vmov	r2, s5
 8023752:	eebe 3ac8 	vcvt.s32.f32	s6, s6, #16
 8023756:	fb92 f3f3 	sdiv	r3, r2, r3
 802375a:	ee13 2a10 	vmov	r2, s6
 802375e:	931b      	str	r3, [sp, #108]	; 0x6c
 8023760:	9b18      	ldr	r3, [sp, #96]	; 0x60
 8023762:	fb92 f3f3 	sdiv	r3, r2, r3
 8023766:	931c      	str	r3, [sp, #112]	; 0x70
 8023768:	9b07      	ldr	r3, [sp, #28]
 802376a:	9a0c      	ldr	r2, [sp, #48]	; 0x30
 802376c:	3b01      	subs	r3, #1
 802376e:	eefe 6ac8 	vcvt.s32.f32	s13, s13, #16
 8023772:	9307      	str	r3, [sp, #28]
 8023774:	9b18      	ldr	r3, [sp, #96]	; 0x60
 8023776:	ee16 6a90 	vmov	r6, s13
 802377a:	bf14      	ite	ne
 802377c:	461d      	movne	r5, r3
 802377e:	4615      	moveq	r5, r2
 8023780:	eeb0 3a67 	vmov.f32	s6, s15
 8023784:	eef0 2a47 	vmov.f32	s5, s14
 8023788:	e6f4      	b.n	8023574 <_ZN8touchgfx8LCD16bpp54TextureMapper_RGB565_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x2a>
 802378a:	f111 0b01 	adds.w	fp, r1, #1
 802378e:	d48e      	bmi.n	80236ae <_ZN8touchgfx8LCD16bpp54TextureMapper_RGB565_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x164>
 8023790:	45de      	cmp	lr, fp
 8023792:	db8c      	blt.n	80236ae <_ZN8touchgfx8LCD16bpp54TextureMapper_RGB565_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x164>
 8023794:	f110 0b01 	adds.w	fp, r0, #1
 8023798:	d489      	bmi.n	80236ae <_ZN8touchgfx8LCD16bpp54TextureMapper_RGB565_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x164>
 802379a:	455b      	cmp	r3, fp
 802379c:	db87      	blt.n	80236ae <_ZN8touchgfx8LCD16bpp54TextureMapper_RGB565_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x164>
 802379e:	b21b      	sxth	r3, r3
 80237a0:	e9cd 1001 	strd	r1, r0, [sp, #4]
 80237a4:	e9cd 2c03 	strd	r2, ip, [sp, #12]
 80237a8:	9300      	str	r3, [sp, #0]
 80237aa:	4642      	mov	r2, r8
 80237ac:	fa0f f38e 	sxth.w	r3, lr
 80237b0:	4649      	mov	r1, r9
 80237b2:	980d      	ldr	r0, [sp, #52]	; 0x34
 80237b4:	f7ff fe4d 	bl	8023452 <_ZNK8touchgfx8LCD16bpp54TextureMapper_RGB565_Opaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKtssiihh>
 80237b8:	e779      	b.n	80236ae <_ZN8touchgfx8LCD16bpp54TextureMapper_RGB565_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x164>
 80237ba:	9b20      	ldr	r3, [sp, #128]	; 0x80
 80237bc:	f9b3 3008 	ldrsh.w	r3, [r3, #8]
 80237c0:	1420      	asrs	r0, r4, #16
 80237c2:	1431      	asrs	r1, r6, #16
 80237c4:	fb03 0101 	mla	r1, r3, r1, r0
 80237c8:	eb08 0041 	add.w	r0, r8, r1, lsl #1
 80237cc:	f3c6 3e03 	ubfx	lr, r6, #12, #4
 80237d0:	f838 c011 	ldrh.w	ip, [r8, r1, lsl #1]
 80237d4:	8841      	ldrh	r1, [r0, #2]
 80237d6:	f3c4 3203 	ubfx	r2, r4, #12, #4
 80237da:	f1be 0f00 	cmp.w	lr, #0
 80237de:	d00b      	beq.n	80237f8 <_ZN8touchgfx8LCD16bpp54TextureMapper_RGB565_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x2ae>
 80237e0:	f103 4300 	add.w	r3, r3, #2147483648	; 0x80000000
 80237e4:	3b01      	subs	r3, #1
 80237e6:	005b      	lsls	r3, r3, #1
 80237e8:	3302      	adds	r3, #2
 80237ea:	eb00 0b03 	add.w	fp, r0, r3
 80237ee:	5ac3      	ldrh	r3, [r0, r3]
 80237f0:	930a      	str	r3, [sp, #40]	; 0x28
 80237f2:	f8bb 3002 	ldrh.w	r3, [fp, #2]
 80237f6:	930b      	str	r3, [sp, #44]	; 0x2c
 80237f8:	ea4f 400c 	mov.w	r0, ip, lsl #16
 80237fc:	fb12 f30e 	smulbb	r3, r2, lr
 8023800:	f42c 6cfc 	bic.w	ip, ip, #2016	; 0x7e0
 8023804:	ea4f 4b01 	mov.w	fp, r1, lsl #16
 8023808:	f000 60fc 	and.w	r0, r0, #132120576	; 0x7e00000
 802380c:	10db      	asrs	r3, r3, #3
 802380e:	ea40 000c 	orr.w	r0, r0, ip
 8023812:	f00b 6bfc 	and.w	fp, fp, #132120576	; 0x7e00000
 8023816:	f1ce 0c10 	rsb	ip, lr, #16
 802381a:	f421 61fc 	bic.w	r1, r1, #2016	; 0x7e0
 802381e:	ebac 0c02 	sub.w	ip, ip, r2
 8023822:	ea4b 0101 	orr.w	r1, fp, r1
 8023826:	ebc3 0242 	rsb	r2, r3, r2, lsl #1
 802382a:	4351      	muls	r1, r2
 802382c:	9a0b      	ldr	r2, [sp, #44]	; 0x2c
 802382e:	eb03 0c4c 	add.w	ip, r3, ip, lsl #1
 8023832:	fb0c 1c00 	mla	ip, ip, r0, r1
 8023836:	ea4f 4b02 	mov.w	fp, r2, lsl #16
 802383a:	f422 60fc 	bic.w	r0, r2, #2016	; 0x7e0
 802383e:	9a0a      	ldr	r2, [sp, #40]	; 0x28
 8023840:	990a      	ldr	r1, [sp, #40]	; 0x28
 8023842:	f00b 6bfc 	and.w	fp, fp, #132120576	; 0x7e00000
 8023846:	0412      	lsls	r2, r2, #16
 8023848:	ea4b 0000 	orr.w	r0, fp, r0
 802384c:	f002 62fc 	and.w	r2, r2, #132120576	; 0x7e00000
 8023850:	f421 6bfc 	bic.w	fp, r1, #2016	; 0x7e0
 8023854:	fb03 c000 	mla	r0, r3, r0, ip
 8023858:	ea42 0b0b 	orr.w	fp, r2, fp
 802385c:	ebc3 034e 	rsb	r3, r3, lr, lsl #1
 8023860:	fb03 000b 	mla	r0, r3, fp, r0
 8023864:	0d43      	lsrs	r3, r0, #21
 8023866:	0940      	lsrs	r0, r0, #5
 8023868:	f403 63fc 	and.w	r3, r3, #2016	; 0x7e0
 802386c:	f420 60fc 	bic.w	r0, r0, #2016	; 0x7e0
 8023870:	4318      	orrs	r0, r3
 8023872:	9b1b      	ldr	r3, [sp, #108]	; 0x6c
 8023874:	f82a 0b02 	strh.w	r0, [sl], #2
 8023878:	441c      	add	r4, r3
 802387a:	9b1c      	ldr	r3, [sp, #112]	; 0x70
 802387c:	f109 39ff 	add.w	r9, r9, #4294967295
 8023880:	441e      	add	r6, r3
 8023882:	e73c      	b.n	80236fe <_ZN8touchgfx8LCD16bpp54TextureMapper_RGB565_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x1b4>
 8023884:	b00f      	add	sp, #60	; 0x3c
 8023886:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}

0802388a <_ZNK8touchgfx8LCD16bpp57TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKmssiihhh>:
 802388a:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 802388e:	b085      	sub	sp, #20
 8023890:	e9dd 740f 	ldrd	r7, r4, [sp, #60]	; 0x3c
 8023894:	9102      	str	r1, [sp, #8]
 8023896:	2c00      	cmp	r4, #0
 8023898:	fb04 7103 	mla	r1, r4, r3, r7
 802389c:	f9bd e038 	ldrsh.w	lr, [sp, #56]	; 0x38
 80238a0:	f89d 6044 	ldrb.w	r6, [sp, #68]	; 0x44
 80238a4:	f89d 0048 	ldrb.w	r0, [sp, #72]	; 0x48
 80238a8:	eb02 0c81 	add.w	ip, r2, r1, lsl #2
 80238ac:	f2c0 811b 	blt.w	8023ae6 <_ZNK8touchgfx8LCD16bpp57TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKmssiihhh+0x25c>
 80238b0:	45a6      	cmp	lr, r4
 80238b2:	f340 8118 	ble.w	8023ae6 <_ZNK8touchgfx8LCD16bpp57TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKmssiihhh+0x25c>
 80238b6:	2f00      	cmp	r7, #0
 80238b8:	f2c0 8113 	blt.w	8023ae2 <_ZNK8touchgfx8LCD16bpp57TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKmssiihhh+0x258>
 80238bc:	42bb      	cmp	r3, r7
 80238be:	f340 8110 	ble.w	8023ae2 <_ZNK8touchgfx8LCD16bpp57TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKmssiihhh+0x258>
 80238c2:	f852 5021 	ldr.w	r5, [r2, r1, lsl #2]
 80238c6:	1c7a      	adds	r2, r7, #1
 80238c8:	f100 8110 	bmi.w	8023aec <_ZNK8touchgfx8LCD16bpp57TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKmssiihhh+0x262>
 80238cc:	4293      	cmp	r3, r2
 80238ce:	f340 810d 	ble.w	8023aec <_ZNK8touchgfx8LCD16bpp57TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKmssiihhh+0x262>
 80238d2:	2e00      	cmp	r6, #0
 80238d4:	f000 810c 	beq.w	8023af0 <_ZNK8touchgfx8LCD16bpp57TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKmssiihhh+0x266>
 80238d8:	f8dc 1004 	ldr.w	r1, [ip, #4]
 80238dc:	3401      	adds	r4, #1
 80238de:	f100 810b 	bmi.w	8023af8 <_ZNK8touchgfx8LCD16bpp57TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKmssiihhh+0x26e>
 80238e2:	45a6      	cmp	lr, r4
 80238e4:	f340 8108 	ble.w	8023af8 <_ZNK8touchgfx8LCD16bpp57TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKmssiihhh+0x26e>
 80238e8:	2800      	cmp	r0, #0
 80238ea:	f000 8108 	beq.w	8023afe <_ZNK8touchgfx8LCD16bpp57TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKmssiihhh+0x274>
 80238ee:	2f00      	cmp	r7, #0
 80238f0:	f2c0 8100 	blt.w	8023af4 <_ZNK8touchgfx8LCD16bpp57TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKmssiihhh+0x26a>
 80238f4:	42bb      	cmp	r3, r7
 80238f6:	f340 80fd 	ble.w	8023af4 <_ZNK8touchgfx8LCD16bpp57TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKmssiihhh+0x26a>
 80238fa:	f85c 4023 	ldr.w	r4, [ip, r3, lsl #2]
 80238fe:	3701      	adds	r7, #1
 8023900:	f100 8100 	bmi.w	8023b04 <_ZNK8touchgfx8LCD16bpp57TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKmssiihhh+0x27a>
 8023904:	42bb      	cmp	r3, r7
 8023906:	f340 80fd 	ble.w	8023b04 <_ZNK8touchgfx8LCD16bpp57TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKmssiihhh+0x27a>
 802390a:	2e00      	cmp	r6, #0
 802390c:	f000 80fc 	beq.w	8023b08 <_ZNK8touchgfx8LCD16bpp57TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKmssiihhh+0x27e>
 8023910:	3301      	adds	r3, #1
 8023912:	f85c 2023 	ldr.w	r2, [ip, r3, lsl #2]
 8023916:	b2b6      	uxth	r6, r6
 8023918:	b280      	uxth	r0, r0
 802391a:	fb00 fe06 	mul.w	lr, r0, r6
 802391e:	ebce 1000 	rsb	r0, lr, r0, lsl #4
 8023922:	0136      	lsls	r6, r6, #4
 8023924:	eba6 070e 	sub.w	r7, r6, lr
 8023928:	b280      	uxth	r0, r0
 802392a:	f5c6 7380 	rsb	r3, r6, #256	; 0x100
 802392e:	ea4f 6a11 	mov.w	sl, r1, lsr #24
 8023932:	b2bf      	uxth	r7, r7
 8023934:	1a1b      	subs	r3, r3, r0
 8023936:	ea4f 6b15 	mov.w	fp, r5, lsr #24
 802393a:	b29b      	uxth	r3, r3
 802393c:	fb0a f607 	mul.w	r6, sl, r7
 8023940:	ea4f 6914 	mov.w	r9, r4, lsr #24
 8023944:	fb0b 6603 	mla	r6, fp, r3, r6
 8023948:	ea4f 6812 	mov.w	r8, r2, lsr #24
 802394c:	fb00 6609 	mla	r6, r0, r9, r6
 8023950:	fb0e 6608 	mla	r6, lr, r8, r6
 8023954:	f3c6 2607 	ubfx	r6, r6, #8, #8
 8023958:	9600      	str	r6, [sp, #0]
 802395a:	2e00      	cmp	r6, #0
 802395c:	f000 80be 	beq.w	8023adc <_ZNK8touchgfx8LCD16bpp57TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKmssiihhh+0x252>
 8023960:	f005 1cff 	and.w	ip, r5, #16711935	; 0xff00ff
 8023964:	fb0b fc0c 	mul.w	ip, fp, ip
 8023968:	f405 457f 	and.w	r5, r5, #65280	; 0xff00
 802396c:	fb0b f505 	mul.w	r5, fp, r5
 8023970:	ea4f 2b1c 	mov.w	fp, ip, lsr #8
 8023974:	f00b 1bff 	and.w	fp, fp, #16711935	; 0xff00ff
 8023978:	f10c 1c01 	add.w	ip, ip, #65537	; 0x10001
 802397c:	44dc      	add	ip, fp
 802397e:	ea4f 2c1c 	mov.w	ip, ip, lsr #8
 8023982:	9501      	str	r5, [sp, #4]
 8023984:	f00c 15ff 	and.w	r5, ip, #16711935	; 0xff00ff
 8023988:	9503      	str	r5, [sp, #12]
 802398a:	9d01      	ldr	r5, [sp, #4]
 802398c:	9e02      	ldr	r6, [sp, #8]
 802398e:	f505 7c80 	add.w	ip, r5, #256	; 0x100
 8023992:	eb0c 2515 	add.w	r5, ip, r5, lsr #8
 8023996:	f001 1cff 	and.w	ip, r1, #16711935	; 0xff00ff
 802399a:	fb0a fc0c 	mul.w	ip, sl, ip
 802399e:	ea4f 2b15 	mov.w	fp, r5, lsr #8
 80239a2:	ea4f 251c 	mov.w	r5, ip, lsr #8
 80239a6:	f005 15ff 	and.w	r5, r5, #16711935	; 0xff00ff
 80239aa:	f10c 1c01 	add.w	ip, ip, #65537	; 0x10001
 80239ae:	4465      	add	r5, ip
 80239b0:	f004 1cff 	and.w	ip, r4, #16711935	; 0xff00ff
 80239b4:	f404 447f 	and.w	r4, r4, #65280	; 0xff00
 80239b8:	fb09 fc0c 	mul.w	ip, r9, ip
 80239bc:	fb09 f904 	mul.w	r9, r9, r4
 80239c0:	f509 7480 	add.w	r4, r9, #256	; 0x100
 80239c4:	eb04 2919 	add.w	r9, r4, r9, lsr #8
 80239c8:	f002 14ff 	and.w	r4, r2, #16711935	; 0xff00ff
 80239cc:	fb08 f404 	mul.w	r4, r8, r4
 80239d0:	f401 417f 	and.w	r1, r1, #65280	; 0xff00
 80239d4:	f402 427f 	and.w	r2, r2, #65280	; 0xff00
 80239d8:	fb08 f802 	mul.w	r8, r8, r2
 80239dc:	fb0a fa01 	mul.w	sl, sl, r1
 80239e0:	0a22      	lsrs	r2, r4, #8
 80239e2:	f50a 7180 	add.w	r1, sl, #256	; 0x100
 80239e6:	f002 12ff 	and.w	r2, r2, #16711935	; 0xff00ff
 80239ea:	f104 1401 	add.w	r4, r4, #65537	; 0x10001
 80239ee:	eb01 2a1a 	add.w	sl, r1, sl, lsr #8
 80239f2:	4414      	add	r4, r2
 80239f4:	ea4f 211c 	mov.w	r1, ip, lsr #8
 80239f8:	f508 7280 	add.w	r2, r8, #256	; 0x100
 80239fc:	0a2d      	lsrs	r5, r5, #8
 80239fe:	eb02 2818 	add.w	r8, r2, r8, lsr #8
 8023a02:	f005 15ff 	and.w	r5, r5, #16711935	; 0xff00ff
 8023a06:	9a03      	ldr	r2, [sp, #12]
 8023a08:	8836      	ldrh	r6, [r6, #0]
 8023a0a:	f001 11ff 	and.w	r1, r1, #16711935	; 0xff00ff
 8023a0e:	f10c 1c01 	add.w	ip, ip, #65537	; 0x10001
 8023a12:	437d      	muls	r5, r7
 8023a14:	4461      	add	r1, ip
 8023a16:	0a24      	lsrs	r4, r4, #8
 8023a18:	fb02 5503 	mla	r5, r2, r3, r5
 8023a1c:	0a09      	lsrs	r1, r1, #8
 8023a1e:	f004 14ff 	and.w	r4, r4, #16711935	; 0xff00ff
 8023a22:	fb04 540e 	mla	r4, r4, lr, r5
 8023a26:	f001 11ff 	and.w	r1, r1, #16711935	; 0xff00ff
 8023a2a:	fb01 4100 	mla	r1, r1, r0, r4
 8023a2e:	ea4f 2a1a 	mov.w	sl, sl, lsr #8
 8023a32:	0a09      	lsrs	r1, r1, #8
 8023a34:	f40a 4a7f 	and.w	sl, sl, #65280	; 0xff00
 8023a38:	f001 14ff 	and.w	r4, r1, #16711935	; 0xff00ff
 8023a3c:	fb07 f70a 	mul.w	r7, r7, sl
 8023a40:	ea4f 2818 	mov.w	r8, r8, lsr #8
 8023a44:	f40b 417f 	and.w	r1, fp, #65280	; 0xff00
 8023a48:	fb03 7101 	mla	r1, r3, r1, r7
 8023a4c:	ea4f 2919 	mov.w	r9, r9, lsr #8
 8023a50:	f408 487f 	and.w	r8, r8, #65280	; 0xff00
 8023a54:	fb0e 1e08 	mla	lr, lr, r8, r1
 8023a58:	f409 417f 	and.w	r1, r9, #65280	; 0xff00
 8023a5c:	fb00 e101 	mla	r1, r0, r1, lr
 8023a60:	f89d 004c 	ldrb.w	r0, [sp, #76]	; 0x4c
 8023a64:	9a00      	ldr	r2, [sp, #0]
 8023a66:	b287      	uxth	r7, r0
 8023a68:	437a      	muls	r2, r7
 8023a6a:	0a09      	lsrs	r1, r1, #8
 8023a6c:	1c53      	adds	r3, r2, #1
 8023a6e:	f401 417f 	and.w	r1, r1, #65280	; 0xff00
 8023a72:	4321      	orrs	r1, r4
 8023a74:	eb03 2312 	add.w	r3, r3, r2, lsr #8
 8023a78:	1235      	asrs	r5, r6, #8
 8023a7a:	0c0a      	lsrs	r2, r1, #16
 8023a7c:	ea6f 2313 	mvn.w	r3, r3, lsr #8
 8023a80:	b2db      	uxtb	r3, r3
 8023a82:	fb12 f207 	smulbb	r2, r2, r7
 8023a86:	f005 05f8 	and.w	r5, r5, #248	; 0xf8
 8023a8a:	fb05 2503 	mla	r5, r5, r3, r2
 8023a8e:	f3c1 2407 	ubfx	r4, r1, #8, #8
 8023a92:	10f2      	asrs	r2, r6, #3
 8023a94:	b2c8      	uxtb	r0, r1
 8023a96:	00f6      	lsls	r6, r6, #3
 8023a98:	fb14 f407 	smulbb	r4, r4, r7
 8023a9c:	f002 02fc 	and.w	r2, r2, #252	; 0xfc
 8023aa0:	b2f6      	uxtb	r6, r6
 8023aa2:	fb10 f007 	smulbb	r0, r0, r7
 8023aa6:	fb02 4203 	mla	r2, r2, r3, r4
 8023aaa:	b2ad      	uxth	r5, r5
 8023aac:	fb06 0303 	mla	r3, r6, r3, r0
 8023ab0:	b299      	uxth	r1, r3
 8023ab2:	b294      	uxth	r4, r2
 8023ab4:	1c6b      	adds	r3, r5, #1
 8023ab6:	eb03 2515 	add.w	r5, r3, r5, lsr #8
 8023aba:	1c62      	adds	r2, r4, #1
 8023abc:	1c4b      	adds	r3, r1, #1
 8023abe:	eb03 2311 	add.w	r3, r3, r1, lsr #8
 8023ac2:	eb02 2214 	add.w	r2, r2, r4, lsr #8
 8023ac6:	f405 4578 	and.w	r5, r5, #63488	; 0xf800
 8023aca:	f3c3 23c4 	ubfx	r3, r3, #11, #5
 8023ace:	0952      	lsrs	r2, r2, #5
 8023ad0:	f402 62fc 	and.w	r2, r2, #2016	; 0x7e0
 8023ad4:	432b      	orrs	r3, r5
 8023ad6:	4313      	orrs	r3, r2
 8023ad8:	9a02      	ldr	r2, [sp, #8]
 8023ada:	8013      	strh	r3, [r2, #0]
 8023adc:	b005      	add	sp, #20
 8023ade:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
 8023ae2:	2500      	movs	r5, #0
 8023ae4:	e6ef      	b.n	80238c6 <_ZNK8touchgfx8LCD16bpp57TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKmssiihhh+0x3c>
 8023ae6:	2100      	movs	r1, #0
 8023ae8:	460d      	mov	r5, r1
 8023aea:	e6f7      	b.n	80238dc <_ZNK8touchgfx8LCD16bpp57TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKmssiihhh+0x52>
 8023aec:	2100      	movs	r1, #0
 8023aee:	e6f5      	b.n	80238dc <_ZNK8touchgfx8LCD16bpp57TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKmssiihhh+0x52>
 8023af0:	4631      	mov	r1, r6
 8023af2:	e6f3      	b.n	80238dc <_ZNK8touchgfx8LCD16bpp57TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKmssiihhh+0x52>
 8023af4:	2400      	movs	r4, #0
 8023af6:	e702      	b.n	80238fe <_ZNK8touchgfx8LCD16bpp57TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKmssiihhh+0x74>
 8023af8:	2200      	movs	r2, #0
 8023afa:	4614      	mov	r4, r2
 8023afc:	e70b      	b.n	8023916 <_ZNK8touchgfx8LCD16bpp57TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKmssiihhh+0x8c>
 8023afe:	4602      	mov	r2, r0
 8023b00:	4604      	mov	r4, r0
 8023b02:	e708      	b.n	8023916 <_ZNK8touchgfx8LCD16bpp57TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKmssiihhh+0x8c>
 8023b04:	2200      	movs	r2, #0
 8023b06:	e706      	b.n	8023916 <_ZNK8touchgfx8LCD16bpp57TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKmssiihhh+0x8c>
 8023b08:	4632      	mov	r2, r6
 8023b0a:	e704      	b.n	8023916 <_ZNK8touchgfx8LCD16bpp57TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKmssiihhh+0x8c>

08023b0c <_ZN8touchgfx8LCD16bpp57TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff>:
 8023b0c:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 8023b10:	b09d      	sub	sp, #116	; 0x74
 8023b12:	e9dd 4627 	ldrd	r4, r6, [sp, #156]	; 0x9c
 8023b16:	9219      	str	r2, [sp, #100]	; 0x64
 8023b18:	9307      	str	r3, [sp, #28]
 8023b1a:	9a2b      	ldr	r2, [sp, #172]	; 0xac
 8023b1c:	f89d 30bc 	ldrb.w	r3, [sp, #188]	; 0xbc
 8023b20:	931a      	str	r3, [sp, #104]	; 0x68
 8023b22:	9117      	str	r1, [sp, #92]	; 0x5c
 8023b24:	e9dd 132c 	ldrd	r1, r3, [sp, #176]	; 0xb0
 8023b28:	901b      	str	r0, [sp, #108]	; 0x6c
 8023b2a:	6850      	ldr	r0, [r2, #4]
 8023b2c:	6812      	ldr	r2, [r2, #0]
 8023b2e:	fb00 1303 	mla	r3, r0, r3, r1
 8023b32:	eb02 0343 	add.w	r3, r2, r3, lsl #1
 8023b36:	930a      	str	r3, [sp, #40]	; 0x28
 8023b38:	9b2e      	ldr	r3, [sp, #184]	; 0xb8
 8023b3a:	681b      	ldr	r3, [r3, #0]
 8023b3c:	9310      	str	r3, [sp, #64]	; 0x40
 8023b3e:	f8bd 3068 	ldrh.w	r3, [sp, #104]	; 0x68
 8023b42:	930b      	str	r3, [sp, #44]	; 0x2c
 8023b44:	9b17      	ldr	r3, [sp, #92]	; 0x5c
 8023b46:	2b00      	cmp	r3, #0
 8023b48:	dc03      	bgt.n	8023b52 <_ZN8touchgfx8LCD16bpp57TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x46>
 8023b4a:	9b19      	ldr	r3, [sp, #100]	; 0x64
 8023b4c:	2b00      	cmp	r3, #0
 8023b4e:	f340 8375 	ble.w	802423c <_ZN8touchgfx8LCD16bpp57TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x730>
 8023b52:	9b2e      	ldr	r3, [sp, #184]	; 0xb8
 8023b54:	f9b3 1008 	ldrsh.w	r1, [r3, #8]
 8023b58:	f9b3 200c 	ldrsh.w	r2, [r3, #12]
 8023b5c:	1e48      	subs	r0, r1, #1
 8023b5e:	1e57      	subs	r7, r2, #1
 8023b60:	9b07      	ldr	r3, [sp, #28]
 8023b62:	2b00      	cmp	r3, #0
 8023b64:	f340 818e 	ble.w	8023e84 <_ZN8touchgfx8LCD16bpp57TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x378>
 8023b68:	ea5f 4c24 	movs.w	ip, r4, asr #16
 8023b6c:	ea4f 4326 	mov.w	r3, r6, asr #16
 8023b70:	d406      	bmi.n	8023b80 <_ZN8touchgfx8LCD16bpp57TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x74>
 8023b72:	4584      	cmp	ip, r0
 8023b74:	da04      	bge.n	8023b80 <_ZN8touchgfx8LCD16bpp57TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x74>
 8023b76:	2b00      	cmp	r3, #0
 8023b78:	db02      	blt.n	8023b80 <_ZN8touchgfx8LCD16bpp57TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x74>
 8023b7a:	42bb      	cmp	r3, r7
 8023b7c:	f2c0 8183 	blt.w	8023e86 <_ZN8touchgfx8LCD16bpp57TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x37a>
 8023b80:	f11c 0c01 	adds.w	ip, ip, #1
 8023b84:	f100 8173 	bmi.w	8023e6e <_ZN8touchgfx8LCD16bpp57TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x362>
 8023b88:	4561      	cmp	r1, ip
 8023b8a:	f2c0 8170 	blt.w	8023e6e <_ZN8touchgfx8LCD16bpp57TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x362>
 8023b8e:	3301      	adds	r3, #1
 8023b90:	f100 816d 	bmi.w	8023e6e <_ZN8touchgfx8LCD16bpp57TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x362>
 8023b94:	429a      	cmp	r2, r3
 8023b96:	f2c0 816a 	blt.w	8023e6e <_ZN8touchgfx8LCD16bpp57TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x362>
 8023b9a:	9b07      	ldr	r3, [sp, #28]
 8023b9c:	9f0a      	ldr	r7, [sp, #40]	; 0x28
 8023b9e:	9318      	str	r3, [sp, #96]	; 0x60
 8023ba0:	9b18      	ldr	r3, [sp, #96]	; 0x60
 8023ba2:	2b00      	cmp	r3, #0
 8023ba4:	f340 818c 	ble.w	8023ec0 <_ZN8touchgfx8LCD16bpp57TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x3b4>
 8023ba8:	9a2e      	ldr	r2, [sp, #184]	; 0xb8
 8023baa:	9b2e      	ldr	r3, [sp, #184]	; 0xb8
 8023bac:	f8d2 e00c 	ldr.w	lr, [r2, #12]
 8023bb0:	689b      	ldr	r3, [r3, #8]
 8023bb2:	1422      	asrs	r2, r4, #16
 8023bb4:	ea4f 4c26 	mov.w	ip, r6, asr #16
 8023bb8:	f3c4 3003 	ubfx	r0, r4, #12, #4
 8023bbc:	f3c6 3103 	ubfx	r1, r6, #12, #4
 8023bc0:	f100 81cd 	bmi.w	8023f5e <_ZN8touchgfx8LCD16bpp57TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x452>
 8023bc4:	f103 38ff 	add.w	r8, r3, #4294967295
 8023bc8:	4542      	cmp	r2, r8
 8023bca:	f280 81c8 	bge.w	8023f5e <_ZN8touchgfx8LCD16bpp57TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x452>
 8023bce:	f1bc 0f00 	cmp.w	ip, #0
 8023bd2:	f2c0 81c4 	blt.w	8023f5e <_ZN8touchgfx8LCD16bpp57TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x452>
 8023bd6:	f10e 38ff 	add.w	r8, lr, #4294967295
 8023bda:	45c4      	cmp	ip, r8
 8023bdc:	f280 81bf 	bge.w	8023f5e <_ZN8touchgfx8LCD16bpp57TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x452>
 8023be0:	b21b      	sxth	r3, r3
 8023be2:	fb0c 2203 	mla	r2, ip, r3, r2
 8023be6:	9d10      	ldr	r5, [sp, #64]	; 0x40
 8023be8:	eb05 0882 	add.w	r8, r5, r2, lsl #2
 8023bec:	f855 2022 	ldr.w	r2, [r5, r2, lsl #2]
 8023bf0:	ea4f 6e12 	mov.w	lr, r2, lsr #24
 8023bf4:	2800      	cmp	r0, #0
 8023bf6:	f000 81a9 	beq.w	8023f4c <_ZN8touchgfx8LCD16bpp57TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x440>
 8023bfa:	f8d8 5004 	ldr.w	r5, [r8, #4]
 8023bfe:	950c      	str	r5, [sp, #48]	; 0x30
 8023c00:	0e2d      	lsrs	r5, r5, #24
 8023c02:	9513      	str	r5, [sp, #76]	; 0x4c
 8023c04:	b181      	cbz	r1, 8023c28 <_ZN8touchgfx8LCD16bpp57TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x11c>
 8023c06:	f103 4380 	add.w	r3, r3, #1073741824	; 0x40000000
 8023c0a:	3b01      	subs	r3, #1
 8023c0c:	009b      	lsls	r3, r3, #2
 8023c0e:	3304      	adds	r3, #4
 8023c10:	eb08 0c03 	add.w	ip, r8, r3
 8023c14:	f858 3003 	ldr.w	r3, [r8, r3]
 8023c18:	9308      	str	r3, [sp, #32]
 8023c1a:	0e1b      	lsrs	r3, r3, #24
 8023c1c:	9311      	str	r3, [sp, #68]	; 0x44
 8023c1e:	f8dc 3004 	ldr.w	r3, [ip, #4]
 8023c22:	930d      	str	r3, [sp, #52]	; 0x34
 8023c24:	0e1b      	lsrs	r3, r3, #24
 8023c26:	9314      	str	r3, [sp, #80]	; 0x50
 8023c28:	b280      	uxth	r0, r0
 8023c2a:	b289      	uxth	r1, r1
 8023c2c:	fb00 f901 	mul.w	r9, r0, r1
 8023c30:	ebc9 1101 	rsb	r1, r9, r1, lsl #4
 8023c34:	0100      	lsls	r0, r0, #4
 8023c36:	eba0 0809 	sub.w	r8, r0, r9
 8023c3a:	b289      	uxth	r1, r1
 8023c3c:	f5c0 7380 	rsb	r3, r0, #256	; 0x100
 8023c40:	9813      	ldr	r0, [sp, #76]	; 0x4c
 8023c42:	9d11      	ldr	r5, [sp, #68]	; 0x44
 8023c44:	fa1f f888 	uxth.w	r8, r8
 8023c48:	1a5b      	subs	r3, r3, r1
 8023c4a:	b29b      	uxth	r3, r3
 8023c4c:	fb08 f000 	mul.w	r0, r8, r0
 8023c50:	fb03 000e 	mla	r0, r3, lr, r0
 8023c54:	fb01 0005 	mla	r0, r1, r5, r0
 8023c58:	9d14      	ldr	r5, [sp, #80]	; 0x50
 8023c5a:	fb09 0005 	mla	r0, r9, r5, r0
 8023c5e:	f3c0 2007 	ubfx	r0, r0, #8, #8
 8023c62:	2800      	cmp	r0, #0
 8023c64:	f000 80fa 	beq.w	8023e5c <_ZN8touchgfx8LCD16bpp57TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x350>
 8023c68:	f1be 0fff 	cmp.w	lr, #255	; 0xff
 8023c6c:	d01b      	beq.n	8023ca6 <_ZN8touchgfx8LCD16bpp57TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x19a>
 8023c6e:	f002 1aff 	and.w	sl, r2, #16711935	; 0xff00ff
 8023c72:	fb0e fa0a 	mul.w	sl, lr, sl
 8023c76:	f402 427f 	and.w	r2, r2, #65280	; 0xff00
 8023c7a:	fb0e fe02 	mul.w	lr, lr, r2
 8023c7e:	ea4f 221a 	mov.w	r2, sl, lsr #8
 8023c82:	f002 12ff 	and.w	r2, r2, #16711935	; 0xff00ff
 8023c86:	f10a 1a01 	add.w	sl, sl, #65537	; 0x10001
 8023c8a:	f50e 7c80 	add.w	ip, lr, #256	; 0x100
 8023c8e:	4452      	add	r2, sl
 8023c90:	eb0c 2c1e 	add.w	ip, ip, lr, lsr #8
 8023c94:	0a12      	lsrs	r2, r2, #8
 8023c96:	ea4f 2c1c 	mov.w	ip, ip, lsr #8
 8023c9a:	f002 12ff 	and.w	r2, r2, #16711935	; 0xff00ff
 8023c9e:	f40c 4c7f 	and.w	ip, ip, #65280	; 0xff00
 8023ca2:	ea42 020c 	orr.w	r2, r2, ip
 8023ca6:	9d13      	ldr	r5, [sp, #76]	; 0x4c
 8023ca8:	2dff      	cmp	r5, #255	; 0xff
 8023caa:	d021      	beq.n	8023cf0 <_ZN8touchgfx8LCD16bpp57TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x1e4>
 8023cac:	9d0c      	ldr	r5, [sp, #48]	; 0x30
 8023cae:	f005 1bff 	and.w	fp, r5, #16711935	; 0xff00ff
 8023cb2:	9d13      	ldr	r5, [sp, #76]	; 0x4c
 8023cb4:	fb05 fb0b 	mul.w	fp, r5, fp
 8023cb8:	9d0c      	ldr	r5, [sp, #48]	; 0x30
 8023cba:	f405 4a7f 	and.w	sl, r5, #65280	; 0xff00
 8023cbe:	9d13      	ldr	r5, [sp, #76]	; 0x4c
 8023cc0:	ea4f 2e1b 	mov.w	lr, fp, lsr #8
 8023cc4:	fb05 fa0a 	mul.w	sl, r5, sl
 8023cc8:	f00e 1eff 	and.w	lr, lr, #16711935	; 0xff00ff
 8023ccc:	f10b 1b01 	add.w	fp, fp, #65537	; 0x10001
 8023cd0:	f50a 7c80 	add.w	ip, sl, #256	; 0x100
 8023cd4:	44de      	add	lr, fp
 8023cd6:	eb0c 2a1a 	add.w	sl, ip, sl, lsr #8
 8023cda:	ea4f 2e1e 	mov.w	lr, lr, lsr #8
 8023cde:	ea4f 2a1a 	mov.w	sl, sl, lsr #8
 8023ce2:	f00e 1eff 	and.w	lr, lr, #16711935	; 0xff00ff
 8023ce6:	f40a 4a7f 	and.w	sl, sl, #65280	; 0xff00
 8023cea:	ea4e 050a 	orr.w	r5, lr, sl
 8023cee:	950c      	str	r5, [sp, #48]	; 0x30
 8023cf0:	9d11      	ldr	r5, [sp, #68]	; 0x44
 8023cf2:	2dff      	cmp	r5, #255	; 0xff
 8023cf4:	d021      	beq.n	8023d3a <_ZN8touchgfx8LCD16bpp57TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x22e>
 8023cf6:	9d08      	ldr	r5, [sp, #32]
 8023cf8:	f005 1bff 	and.w	fp, r5, #16711935	; 0xff00ff
 8023cfc:	9d11      	ldr	r5, [sp, #68]	; 0x44
 8023cfe:	fb05 fb0b 	mul.w	fp, r5, fp
 8023d02:	9d08      	ldr	r5, [sp, #32]
 8023d04:	f405 4a7f 	and.w	sl, r5, #65280	; 0xff00
 8023d08:	9d11      	ldr	r5, [sp, #68]	; 0x44
 8023d0a:	ea4f 2e1b 	mov.w	lr, fp, lsr #8
 8023d0e:	fb05 fa0a 	mul.w	sl, r5, sl
 8023d12:	f00e 1eff 	and.w	lr, lr, #16711935	; 0xff00ff
 8023d16:	f10b 1b01 	add.w	fp, fp, #65537	; 0x10001
 8023d1a:	f50a 7c80 	add.w	ip, sl, #256	; 0x100
 8023d1e:	44de      	add	lr, fp
 8023d20:	eb0c 2a1a 	add.w	sl, ip, sl, lsr #8
 8023d24:	ea4f 2e1e 	mov.w	lr, lr, lsr #8
 8023d28:	ea4f 2a1a 	mov.w	sl, sl, lsr #8
 8023d2c:	f00e 1eff 	and.w	lr, lr, #16711935	; 0xff00ff
 8023d30:	f40a 4a7f 	and.w	sl, sl, #65280	; 0xff00
 8023d34:	ea4e 050a 	orr.w	r5, lr, sl
 8023d38:	9508      	str	r5, [sp, #32]
 8023d3a:	9d14      	ldr	r5, [sp, #80]	; 0x50
 8023d3c:	2dff      	cmp	r5, #255	; 0xff
 8023d3e:	d021      	beq.n	8023d84 <_ZN8touchgfx8LCD16bpp57TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x278>
 8023d40:	9d0d      	ldr	r5, [sp, #52]	; 0x34
 8023d42:	f005 1bff 	and.w	fp, r5, #16711935	; 0xff00ff
 8023d46:	9d14      	ldr	r5, [sp, #80]	; 0x50
 8023d48:	fb05 fb0b 	mul.w	fp, r5, fp
 8023d4c:	9d0d      	ldr	r5, [sp, #52]	; 0x34
 8023d4e:	f405 4a7f 	and.w	sl, r5, #65280	; 0xff00
 8023d52:	9d14      	ldr	r5, [sp, #80]	; 0x50
 8023d54:	ea4f 2e1b 	mov.w	lr, fp, lsr #8
 8023d58:	fb05 fa0a 	mul.w	sl, r5, sl
 8023d5c:	f00e 1eff 	and.w	lr, lr, #16711935	; 0xff00ff
 8023d60:	f10b 1b01 	add.w	fp, fp, #65537	; 0x10001
 8023d64:	f50a 7c80 	add.w	ip, sl, #256	; 0x100
 8023d68:	44de      	add	lr, fp
 8023d6a:	eb0c 2a1a 	add.w	sl, ip, sl, lsr #8
 8023d6e:	ea4f 2e1e 	mov.w	lr, lr, lsr #8
 8023d72:	ea4f 2a1a 	mov.w	sl, sl, lsr #8
 8023d76:	f00e 1eff 	and.w	lr, lr, #16711935	; 0xff00ff
 8023d7a:	f40a 4a7f 	and.w	sl, sl, #65280	; 0xff00
 8023d7e:	ea4e 050a 	orr.w	r5, lr, sl
 8023d82:	950d      	str	r5, [sp, #52]	; 0x34
 8023d84:	9d0c      	ldr	r5, [sp, #48]	; 0x30
 8023d86:	f005 1cff 	and.w	ip, r5, #16711935	; 0xff00ff
 8023d8a:	9d08      	ldr	r5, [sp, #32]
 8023d8c:	f002 1eff 	and.w	lr, r2, #16711935	; 0xff00ff
 8023d90:	fb08 fc0c 	mul.w	ip, r8, ip
 8023d94:	fb03 cc0e 	mla	ip, r3, lr, ip
 8023d98:	f005 1eff 	and.w	lr, r5, #16711935	; 0xff00ff
 8023d9c:	9d0d      	ldr	r5, [sp, #52]	; 0x34
 8023d9e:	fb01 cc0e 	mla	ip, r1, lr, ip
 8023da2:	f005 1eff 	and.w	lr, r5, #16711935	; 0xff00ff
 8023da6:	9d0c      	ldr	r5, [sp, #48]	; 0x30
 8023da8:	fb09 cc0e 	mla	ip, r9, lr, ip
 8023dac:	f405 4e7f 	and.w	lr, r5, #65280	; 0xff00
 8023db0:	fb08 f80e 	mul.w	r8, r8, lr
 8023db4:	f402 427f 	and.w	r2, r2, #65280	; 0xff00
 8023db8:	fb03 8202 	mla	r2, r3, r2, r8
 8023dbc:	9b08      	ldr	r3, [sp, #32]
 8023dbe:	9d0b      	ldr	r5, [sp, #44]	; 0x2c
 8023dc0:	f403 4a7f 	and.w	sl, r3, #65280	; 0xff00
 8023dc4:	9b0d      	ldr	r3, [sp, #52]	; 0x34
 8023dc6:	fb01 220a 	mla	r2, r1, sl, r2
 8023dca:	f403 417f 	and.w	r1, r3, #65280	; 0xff00
 8023dce:	fb09 2901 	mla	r9, r9, r1, r2
 8023dd2:	9a0b      	ldr	r2, [sp, #44]	; 0x2c
 8023dd4:	883b      	ldrh	r3, [r7, #0]
 8023dd6:	4342      	muls	r2, r0
 8023dd8:	ea4f 2c1c 	mov.w	ip, ip, lsr #8
 8023ddc:	ea4f 2919 	mov.w	r9, r9, lsr #8
 8023de0:	1c50      	adds	r0, r2, #1
 8023de2:	f00c 1cff 	and.w	ip, ip, #16711935	; 0xff00ff
 8023de6:	f409 497f 	and.w	r9, r9, #65280	; 0xff00
 8023dea:	ea4c 0c09 	orr.w	ip, ip, r9
 8023dee:	eb00 2012 	add.w	r0, r0, r2, lsr #8
 8023df2:	1219      	asrs	r1, r3, #8
 8023df4:	ea4f 421c 	mov.w	r2, ip, lsr #16
 8023df8:	ea6f 2010 	mvn.w	r0, r0, lsr #8
 8023dfc:	b2c0      	uxtb	r0, r0
 8023dfe:	fb12 f205 	smulbb	r2, r2, r5
 8023e02:	f001 01f8 	and.w	r1, r1, #248	; 0xf8
 8023e06:	fb01 2100 	mla	r1, r1, r0, r2
 8023e0a:	f3cc 2e07 	ubfx	lr, ip, #8, #8
 8023e0e:	10da      	asrs	r2, r3, #3
 8023e10:	fa5f fc8c 	uxtb.w	ip, ip
 8023e14:	00db      	lsls	r3, r3, #3
 8023e16:	fb1c fc05 	smulbb	ip, ip, r5
 8023e1a:	b2db      	uxtb	r3, r3
 8023e1c:	b289      	uxth	r1, r1
 8023e1e:	fb03 c300 	mla	r3, r3, r0, ip
 8023e22:	fa1f fc83 	uxth.w	ip, r3
 8023e26:	1c4b      	adds	r3, r1, #1
 8023e28:	eb03 2111 	add.w	r1, r3, r1, lsr #8
 8023e2c:	f002 02fc 	and.w	r2, r2, #252	; 0xfc
 8023e30:	fb1e fe05 	smulbb	lr, lr, r5
 8023e34:	f10c 0301 	add.w	r3, ip, #1
 8023e38:	fb02 e200 	mla	r2, r2, r0, lr
 8023e3c:	eb03 231c 	add.w	r3, r3, ip, lsr #8
 8023e40:	b292      	uxth	r2, r2
 8023e42:	f401 4178 	and.w	r1, r1, #63488	; 0xf800
 8023e46:	f3c3 23c4 	ubfx	r3, r3, #11, #5
 8023e4a:	430b      	orrs	r3, r1
 8023e4c:	1c51      	adds	r1, r2, #1
 8023e4e:	eb01 2212 	add.w	r2, r1, r2, lsr #8
 8023e52:	0952      	lsrs	r2, r2, #5
 8023e54:	f402 62fc 	and.w	r2, r2, #2016	; 0x7e0
 8023e58:	4313      	orrs	r3, r2
 8023e5a:	803b      	strh	r3, [r7, #0]
 8023e5c:	9b29      	ldr	r3, [sp, #164]	; 0xa4
 8023e5e:	441c      	add	r4, r3
 8023e60:	9b2a      	ldr	r3, [sp, #168]	; 0xa8
 8023e62:	441e      	add	r6, r3
 8023e64:	9b18      	ldr	r3, [sp, #96]	; 0x60
 8023e66:	3b01      	subs	r3, #1
 8023e68:	3702      	adds	r7, #2
 8023e6a:	9318      	str	r3, [sp, #96]	; 0x60
 8023e6c:	e698      	b.n	8023ba0 <_ZN8touchgfx8LCD16bpp57TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x94>
 8023e6e:	9b29      	ldr	r3, [sp, #164]	; 0xa4
 8023e70:	441c      	add	r4, r3
 8023e72:	9b2a      	ldr	r3, [sp, #168]	; 0xa8
 8023e74:	441e      	add	r6, r3
 8023e76:	9b07      	ldr	r3, [sp, #28]
 8023e78:	3b01      	subs	r3, #1
 8023e7a:	9307      	str	r3, [sp, #28]
 8023e7c:	9b0a      	ldr	r3, [sp, #40]	; 0x28
 8023e7e:	3302      	adds	r3, #2
 8023e80:	930a      	str	r3, [sp, #40]	; 0x28
 8023e82:	e66d      	b.n	8023b60 <_ZN8touchgfx8LCD16bpp57TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x54>
 8023e84:	d023      	beq.n	8023ece <_ZN8touchgfx8LCD16bpp57TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x3c2>
 8023e86:	9b07      	ldr	r3, [sp, #28]
 8023e88:	9829      	ldr	r0, [sp, #164]	; 0xa4
 8023e8a:	3b01      	subs	r3, #1
 8023e8c:	fb00 4003 	mla	r0, r0, r3, r4
 8023e90:	1400      	asrs	r0, r0, #16
 8023e92:	f53f ae82 	bmi.w	8023b9a <_ZN8touchgfx8LCD16bpp57TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x8e>
 8023e96:	3901      	subs	r1, #1
 8023e98:	4288      	cmp	r0, r1
 8023e9a:	f6bf ae7e 	bge.w	8023b9a <_ZN8touchgfx8LCD16bpp57TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x8e>
 8023e9e:	992a      	ldr	r1, [sp, #168]	; 0xa8
 8023ea0:	fb01 6303 	mla	r3, r1, r3, r6
 8023ea4:	141b      	asrs	r3, r3, #16
 8023ea6:	f53f ae78 	bmi.w	8023b9a <_ZN8touchgfx8LCD16bpp57TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x8e>
 8023eaa:	3a01      	subs	r2, #1
 8023eac:	4293      	cmp	r3, r2
 8023eae:	f6bf ae74 	bge.w	8023b9a <_ZN8touchgfx8LCD16bpp57TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x8e>
 8023eb2:	f8dd b01c 	ldr.w	fp, [sp, #28]
 8023eb6:	f8dd 9028 	ldr.w	r9, [sp, #40]	; 0x28
 8023eba:	f1bb 0f00 	cmp.w	fp, #0
 8023ebe:	dc6c      	bgt.n	8023f9a <_ZN8touchgfx8LCD16bpp57TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x48e>
 8023ec0:	9b07      	ldr	r3, [sp, #28]
 8023ec2:	ea23 75e3 	bic.w	r5, r3, r3, asr #31
 8023ec6:	9b0a      	ldr	r3, [sp, #40]	; 0x28
 8023ec8:	eb03 0345 	add.w	r3, r3, r5, lsl #1
 8023ecc:	930a      	str	r3, [sp, #40]	; 0x28
 8023ece:	9b17      	ldr	r3, [sp, #92]	; 0x5c
 8023ed0:	2b00      	cmp	r3, #0
 8023ed2:	f340 81b3 	ble.w	802423c <_ZN8touchgfx8LCD16bpp57TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x730>
 8023ed6:	ee30 0a04 	vadd.f32	s0, s0, s8
 8023eda:	eeb7 7a00 	vmov.f32	s14, #112	; 0x3f800000  1.0
 8023ede:	eec7 7a00 	vdiv.f32	s15, s14, s0
 8023ee2:	9b26      	ldr	r3, [sp, #152]	; 0x98
 8023ee4:	ee70 0aa4 	vadd.f32	s1, s1, s9
 8023ee8:	ee31 1a05 	vadd.f32	s2, s2, s10
 8023eec:	ee20 7aa7 	vmul.f32	s14, s1, s15
 8023ef0:	eef0 6a62 	vmov.f32	s13, s5
 8023ef4:	ee61 7a27 	vmul.f32	s15, s2, s15
 8023ef8:	eefe 6ac8 	vcvt.s32.f32	s13, s13, #16
 8023efc:	ee77 2a62 	vsub.f32	s5, s14, s5
 8023f00:	ee16 4a90 	vmov	r4, s13
 8023f04:	eefe 2ac8 	vcvt.s32.f32	s5, s5, #16
 8023f08:	eef0 6a43 	vmov.f32	s13, s6
 8023f0c:	ee37 3ac3 	vsub.f32	s6, s15, s6
 8023f10:	ee12 2a90 	vmov	r2, s5
 8023f14:	eebe 3ac8 	vcvt.s32.f32	s6, s6, #16
 8023f18:	fb92 f3f3 	sdiv	r3, r2, r3
 8023f1c:	ee13 2a10 	vmov	r2, s6
 8023f20:	9329      	str	r3, [sp, #164]	; 0xa4
 8023f22:	9b26      	ldr	r3, [sp, #152]	; 0x98
 8023f24:	fb92 f3f3 	sdiv	r3, r2, r3
 8023f28:	932a      	str	r3, [sp, #168]	; 0xa8
 8023f2a:	9b17      	ldr	r3, [sp, #92]	; 0x5c
 8023f2c:	9a19      	ldr	r2, [sp, #100]	; 0x64
 8023f2e:	3b01      	subs	r3, #1
 8023f30:	eefe 6ac8 	vcvt.s32.f32	s13, s13, #16
 8023f34:	9317      	str	r3, [sp, #92]	; 0x5c
 8023f36:	9b26      	ldr	r3, [sp, #152]	; 0x98
 8023f38:	bf08      	it	eq
 8023f3a:	4613      	moveq	r3, r2
 8023f3c:	ee16 6a90 	vmov	r6, s13
 8023f40:	9307      	str	r3, [sp, #28]
 8023f42:	eeb0 3a67 	vmov.f32	s6, s15
 8023f46:	eef0 2a47 	vmov.f32	s5, s14
 8023f4a:	e5fb      	b.n	8023b44 <_ZN8touchgfx8LCD16bpp57TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x38>
 8023f4c:	2900      	cmp	r1, #0
 8023f4e:	f43f ae6b 	beq.w	8023c28 <_ZN8touchgfx8LCD16bpp57TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x11c>
 8023f52:	f858 3023 	ldr.w	r3, [r8, r3, lsl #2]
 8023f56:	9308      	str	r3, [sp, #32]
 8023f58:	0e1b      	lsrs	r3, r3, #24
 8023f5a:	9311      	str	r3, [sp, #68]	; 0x44
 8023f5c:	e664      	b.n	8023c28 <_ZN8touchgfx8LCD16bpp57TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x11c>
 8023f5e:	f112 0801 	adds.w	r8, r2, #1
 8023f62:	f53f af7b 	bmi.w	8023e5c <_ZN8touchgfx8LCD16bpp57TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x350>
 8023f66:	4543      	cmp	r3, r8
 8023f68:	f6ff af78 	blt.w	8023e5c <_ZN8touchgfx8LCD16bpp57TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x350>
 8023f6c:	f11c 0801 	adds.w	r8, ip, #1
 8023f70:	f53f af74 	bmi.w	8023e5c <_ZN8touchgfx8LCD16bpp57TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x350>
 8023f74:	45c6      	cmp	lr, r8
 8023f76:	f6ff af71 	blt.w	8023e5c <_ZN8touchgfx8LCD16bpp57TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x350>
 8023f7a:	9d1a      	ldr	r5, [sp, #104]	; 0x68
 8023f7c:	9201      	str	r2, [sp, #4]
 8023f7e:	fa0f f28e 	sxth.w	r2, lr
 8023f82:	e9cd 1504 	strd	r1, r5, [sp, #16]
 8023f86:	e9cd c002 	strd	ip, r0, [sp, #8]
 8023f8a:	9200      	str	r2, [sp, #0]
 8023f8c:	b21b      	sxth	r3, r3
 8023f8e:	9a10      	ldr	r2, [sp, #64]	; 0x40
 8023f90:	981b      	ldr	r0, [sp, #108]	; 0x6c
 8023f92:	4639      	mov	r1, r7
 8023f94:	f7ff fc79 	bl	802388a <_ZNK8touchgfx8LCD16bpp57TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKmssiihhh>
 8023f98:	e760      	b.n	8023e5c <_ZN8touchgfx8LCD16bpp57TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x350>
 8023f9a:	9b2e      	ldr	r3, [sp, #184]	; 0xb8
 8023f9c:	9d10      	ldr	r5, [sp, #64]	; 0x40
 8023f9e:	f9b3 1008 	ldrsh.w	r1, [r3, #8]
 8023fa2:	1427      	asrs	r7, r4, #16
 8023fa4:	1433      	asrs	r3, r6, #16
 8023fa6:	fb01 7303 	mla	r3, r1, r3, r7
 8023faa:	eb05 0783 	add.w	r7, r5, r3, lsl #2
 8023fae:	f855 3023 	ldr.w	r3, [r5, r3, lsl #2]
 8023fb2:	f3c4 3203 	ubfx	r2, r4, #12, #4
 8023fb6:	f3c6 3003 	ubfx	r0, r6, #12, #4
 8023fba:	ea4f 6c13 	mov.w	ip, r3, lsr #24
 8023fbe:	2a00      	cmp	r2, #0
 8023fc0:	f000 8133 	beq.w	802422a <_ZN8touchgfx8LCD16bpp57TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x71e>
 8023fc4:	687d      	ldr	r5, [r7, #4]
 8023fc6:	950e      	str	r5, [sp, #56]	; 0x38
 8023fc8:	0e2d      	lsrs	r5, r5, #24
 8023fca:	9515      	str	r5, [sp, #84]	; 0x54
 8023fcc:	b178      	cbz	r0, 8023fee <_ZN8touchgfx8LCD16bpp57TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x4e2>
 8023fce:	f101 4180 	add.w	r1, r1, #1073741824	; 0x40000000
 8023fd2:	3901      	subs	r1, #1
 8023fd4:	0089      	lsls	r1, r1, #2
 8023fd6:	3104      	adds	r1, #4
 8023fd8:	eb07 0e01 	add.w	lr, r7, r1
 8023fdc:	5879      	ldr	r1, [r7, r1]
 8023fde:	9109      	str	r1, [sp, #36]	; 0x24
 8023fe0:	0e09      	lsrs	r1, r1, #24
 8023fe2:	9112      	str	r1, [sp, #72]	; 0x48
 8023fe4:	f8de 1004 	ldr.w	r1, [lr, #4]
 8023fe8:	910f      	str	r1, [sp, #60]	; 0x3c
 8023fea:	0e09      	lsrs	r1, r1, #24
 8023fec:	9116      	str	r1, [sp, #88]	; 0x58
 8023fee:	b292      	uxth	r2, r2
 8023ff0:	b280      	uxth	r0, r0
 8023ff2:	fb02 f800 	mul.w	r8, r2, r0
 8023ff6:	ebc8 1000 	rsb	r0, r8, r0, lsl #4
 8023ffa:	0112      	lsls	r2, r2, #4
 8023ffc:	eba2 0e08 	sub.w	lr, r2, r8
 8024000:	b280      	uxth	r0, r0
 8024002:	f5c2 7280 	rsb	r2, r2, #256	; 0x100
 8024006:	9915      	ldr	r1, [sp, #84]	; 0x54
 8024008:	9d12      	ldr	r5, [sp, #72]	; 0x48
 802400a:	fa1f fe8e 	uxth.w	lr, lr
 802400e:	1a12      	subs	r2, r2, r0
 8024010:	b292      	uxth	r2, r2
 8024012:	fb0e f101 	mul.w	r1, lr, r1
 8024016:	fb02 110c 	mla	r1, r2, ip, r1
 802401a:	fb00 1105 	mla	r1, r0, r5, r1
 802401e:	9d16      	ldr	r5, [sp, #88]	; 0x58
 8024020:	fb08 1105 	mla	r1, r8, r5, r1
 8024024:	f3c1 2107 	ubfx	r1, r1, #8, #8
 8024028:	2900      	cmp	r1, #0
 802402a:	f000 80f5 	beq.w	8024218 <_ZN8touchgfx8LCD16bpp57TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x70c>
 802402e:	f1bc 0fff 	cmp.w	ip, #255	; 0xff
 8024032:	d019      	beq.n	8024068 <_ZN8touchgfx8LCD16bpp57TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x55c>
 8024034:	f003 1aff 	and.w	sl, r3, #16711935	; 0xff00ff
 8024038:	fb0c fa0a 	mul.w	sl, ip, sl
 802403c:	f403 437f 	and.w	r3, r3, #65280	; 0xff00
 8024040:	fb0c fc03 	mul.w	ip, ip, r3
 8024044:	ea4f 231a 	mov.w	r3, sl, lsr #8
 8024048:	f003 13ff 	and.w	r3, r3, #16711935	; 0xff00ff
 802404c:	f10a 1a01 	add.w	sl, sl, #65537	; 0x10001
 8024050:	f50c 7780 	add.w	r7, ip, #256	; 0x100
 8024054:	4453      	add	r3, sl
 8024056:	eb07 271c 	add.w	r7, r7, ip, lsr #8
 802405a:	0a1b      	lsrs	r3, r3, #8
 802405c:	0a3f      	lsrs	r7, r7, #8
 802405e:	f003 13ff 	and.w	r3, r3, #16711935	; 0xff00ff
 8024062:	f407 477f 	and.w	r7, r7, #65280	; 0xff00
 8024066:	433b      	orrs	r3, r7
 8024068:	9d15      	ldr	r5, [sp, #84]	; 0x54
 802406a:	2dff      	cmp	r5, #255	; 0xff
 802406c:	d020      	beq.n	80240b0 <_ZN8touchgfx8LCD16bpp57TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x5a4>
 802406e:	9d0e      	ldr	r5, [sp, #56]	; 0x38
 8024070:	f005 17ff 	and.w	r7, r5, #16711935	; 0xff00ff
 8024074:	9d15      	ldr	r5, [sp, #84]	; 0x54
 8024076:	436f      	muls	r7, r5
 8024078:	9d0e      	ldr	r5, [sp, #56]	; 0x38
 802407a:	f405 4a7f 	and.w	sl, r5, #65280	; 0xff00
 802407e:	9d15      	ldr	r5, [sp, #84]	; 0x54
 8024080:	ea4f 2c17 	mov.w	ip, r7, lsr #8
 8024084:	fb05 fa0a 	mul.w	sl, r5, sl
 8024088:	f107 1701 	add.w	r7, r7, #65537	; 0x10001
 802408c:	f00c 1cff 	and.w	ip, ip, #16711935	; 0xff00ff
 8024090:	44bc      	add	ip, r7
 8024092:	f50a 7780 	add.w	r7, sl, #256	; 0x100
 8024096:	eb07 2a1a 	add.w	sl, r7, sl, lsr #8
 802409a:	ea4f 2c1c 	mov.w	ip, ip, lsr #8
 802409e:	ea4f 2a1a 	mov.w	sl, sl, lsr #8
 80240a2:	f00c 1cff 	and.w	ip, ip, #16711935	; 0xff00ff
 80240a6:	f40a 4a7f 	and.w	sl, sl, #65280	; 0xff00
 80240aa:	ea4c 050a 	orr.w	r5, ip, sl
 80240ae:	950e      	str	r5, [sp, #56]	; 0x38
 80240b0:	9d12      	ldr	r5, [sp, #72]	; 0x48
 80240b2:	2dff      	cmp	r5, #255	; 0xff
 80240b4:	d020      	beq.n	80240f8 <_ZN8touchgfx8LCD16bpp57TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x5ec>
 80240b6:	9d09      	ldr	r5, [sp, #36]	; 0x24
 80240b8:	f005 17ff 	and.w	r7, r5, #16711935	; 0xff00ff
 80240bc:	9d12      	ldr	r5, [sp, #72]	; 0x48
 80240be:	436f      	muls	r7, r5
 80240c0:	9d09      	ldr	r5, [sp, #36]	; 0x24
 80240c2:	f405 4a7f 	and.w	sl, r5, #65280	; 0xff00
 80240c6:	9d12      	ldr	r5, [sp, #72]	; 0x48
 80240c8:	ea4f 2c17 	mov.w	ip, r7, lsr #8
 80240cc:	fb05 fa0a 	mul.w	sl, r5, sl
 80240d0:	f107 1701 	add.w	r7, r7, #65537	; 0x10001
 80240d4:	f00c 1cff 	and.w	ip, ip, #16711935	; 0xff00ff
 80240d8:	44bc      	add	ip, r7
 80240da:	f50a 7780 	add.w	r7, sl, #256	; 0x100
 80240de:	eb07 2a1a 	add.w	sl, r7, sl, lsr #8
 80240e2:	ea4f 2c1c 	mov.w	ip, ip, lsr #8
 80240e6:	ea4f 2a1a 	mov.w	sl, sl, lsr #8
 80240ea:	f00c 1cff 	and.w	ip, ip, #16711935	; 0xff00ff
 80240ee:	f40a 4a7f 	and.w	sl, sl, #65280	; 0xff00
 80240f2:	ea4c 050a 	orr.w	r5, ip, sl
 80240f6:	9509      	str	r5, [sp, #36]	; 0x24
 80240f8:	9d16      	ldr	r5, [sp, #88]	; 0x58
 80240fa:	2dff      	cmp	r5, #255	; 0xff
 80240fc:	d020      	beq.n	8024140 <_ZN8touchgfx8LCD16bpp57TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x634>
 80240fe:	9d0f      	ldr	r5, [sp, #60]	; 0x3c
 8024100:	f005 17ff 	and.w	r7, r5, #16711935	; 0xff00ff
 8024104:	9d16      	ldr	r5, [sp, #88]	; 0x58
 8024106:	436f      	muls	r7, r5
 8024108:	9d0f      	ldr	r5, [sp, #60]	; 0x3c
 802410a:	f405 4a7f 	and.w	sl, r5, #65280	; 0xff00
 802410e:	9d16      	ldr	r5, [sp, #88]	; 0x58
 8024110:	ea4f 2c17 	mov.w	ip, r7, lsr #8
 8024114:	fb05 fa0a 	mul.w	sl, r5, sl
 8024118:	f107 1701 	add.w	r7, r7, #65537	; 0x10001
 802411c:	f00c 1cff 	and.w	ip, ip, #16711935	; 0xff00ff
 8024120:	44bc      	add	ip, r7
 8024122:	f50a 7780 	add.w	r7, sl, #256	; 0x100
 8024126:	eb07 2a1a 	add.w	sl, r7, sl, lsr #8
 802412a:	ea4f 2c1c 	mov.w	ip, ip, lsr #8
 802412e:	ea4f 2a1a 	mov.w	sl, sl, lsr #8
 8024132:	f00c 1cff 	and.w	ip, ip, #16711935	; 0xff00ff
 8024136:	f40a 4a7f 	and.w	sl, sl, #65280	; 0xff00
 802413a:	ea4c 050a 	orr.w	r5, ip, sl
 802413e:	950f      	str	r5, [sp, #60]	; 0x3c
 8024140:	9d0e      	ldr	r5, [sp, #56]	; 0x38
 8024142:	f005 17ff 	and.w	r7, r5, #16711935	; 0xff00ff
 8024146:	9d09      	ldr	r5, [sp, #36]	; 0x24
 8024148:	f003 1cff 	and.w	ip, r3, #16711935	; 0xff00ff
 802414c:	fb0e f707 	mul.w	r7, lr, r7
 8024150:	fb02 770c 	mla	r7, r2, ip, r7
 8024154:	f005 1cff 	and.w	ip, r5, #16711935	; 0xff00ff
 8024158:	9d0f      	ldr	r5, [sp, #60]	; 0x3c
 802415a:	fb00 770c 	mla	r7, r0, ip, r7
 802415e:	f005 1cff 	and.w	ip, r5, #16711935	; 0xff00ff
 8024162:	9d0e      	ldr	r5, [sp, #56]	; 0x38
 8024164:	fb08 770c 	mla	r7, r8, ip, r7
 8024168:	f405 4c7f 	and.w	ip, r5, #65280	; 0xff00
 802416c:	fb0e fe0c 	mul.w	lr, lr, ip
 8024170:	f403 437f 	and.w	r3, r3, #65280	; 0xff00
 8024174:	fb02 e303 	mla	r3, r2, r3, lr
 8024178:	9a09      	ldr	r2, [sp, #36]	; 0x24
 802417a:	9d0b      	ldr	r5, [sp, #44]	; 0x2c
 802417c:	f402 4a7f 	and.w	sl, r2, #65280	; 0xff00
 8024180:	9a0f      	ldr	r2, [sp, #60]	; 0x3c
 8024182:	fb00 330a 	mla	r3, r0, sl, r3
 8024186:	f402 4c7f 	and.w	ip, r2, #65280	; 0xff00
 802418a:	fb08 3c0c 	mla	ip, r8, ip, r3
 802418e:	9b0b      	ldr	r3, [sp, #44]	; 0x2c
 8024190:	f8b9 0000 	ldrh.w	r0, [r9]
 8024194:	4359      	muls	r1, r3
 8024196:	0a3f      	lsrs	r7, r7, #8
 8024198:	ea4f 2c1c 	mov.w	ip, ip, lsr #8
 802419c:	f40c 4c7f 	and.w	ip, ip, #65280	; 0xff00
 80241a0:	1c4b      	adds	r3, r1, #1
 80241a2:	f007 17ff 	and.w	r7, r7, #16711935	; 0xff00ff
 80241a6:	ea47 070c 	orr.w	r7, r7, ip
 80241aa:	eb03 2111 	add.w	r1, r3, r1, lsr #8
 80241ae:	1202      	asrs	r2, r0, #8
 80241b0:	0c3b      	lsrs	r3, r7, #16
 80241b2:	ea6f 2111 	mvn.w	r1, r1, lsr #8
 80241b6:	b2c9      	uxtb	r1, r1
 80241b8:	fb13 f305 	smulbb	r3, r3, r5
 80241bc:	f002 02f8 	and.w	r2, r2, #248	; 0xf8
 80241c0:	fb02 3201 	mla	r2, r2, r1, r3
 80241c4:	f3c7 2c07 	ubfx	ip, r7, #8, #8
 80241c8:	10c3      	asrs	r3, r0, #3
 80241ca:	b2ff      	uxtb	r7, r7
 80241cc:	00c0      	lsls	r0, r0, #3
 80241ce:	b2c0      	uxtb	r0, r0
 80241d0:	fb17 f705 	smulbb	r7, r7, r5
 80241d4:	fb00 7001 	mla	r0, r0, r1, r7
 80241d8:	b292      	uxth	r2, r2
 80241da:	fb1c fc05 	smulbb	ip, ip, r5
 80241de:	b280      	uxth	r0, r0
 80241e0:	f003 03fc 	and.w	r3, r3, #252	; 0xfc
 80241e4:	fb03 c301 	mla	r3, r3, r1, ip
 80241e8:	1c51      	adds	r1, r2, #1
 80241ea:	f100 0c01 	add.w	ip, r0, #1
 80241ee:	eb01 2212 	add.w	r2, r1, r2, lsr #8
 80241f2:	eb0c 2c10 	add.w	ip, ip, r0, lsr #8
 80241f6:	b29b      	uxth	r3, r3
 80241f8:	f3cc 2cc4 	ubfx	ip, ip, #11, #5
 80241fc:	f402 4278 	and.w	r2, r2, #63488	; 0xf800
 8024200:	ea4c 0202 	orr.w	r2, ip, r2
 8024204:	f103 0c01 	add.w	ip, r3, #1
 8024208:	eb0c 2313 	add.w	r3, ip, r3, lsr #8
 802420c:	095b      	lsrs	r3, r3, #5
 802420e:	f403 63fc 	and.w	r3, r3, #2016	; 0x7e0
 8024212:	431a      	orrs	r2, r3
 8024214:	f8a9 2000 	strh.w	r2, [r9]
 8024218:	9b29      	ldr	r3, [sp, #164]	; 0xa4
 802421a:	441c      	add	r4, r3
 802421c:	9b2a      	ldr	r3, [sp, #168]	; 0xa8
 802421e:	f109 0902 	add.w	r9, r9, #2
 8024222:	441e      	add	r6, r3
 8024224:	f10b 3bff 	add.w	fp, fp, #4294967295
 8024228:	e647      	b.n	8023eba <_ZN8touchgfx8LCD16bpp57TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x3ae>
 802422a:	2800      	cmp	r0, #0
 802422c:	f43f aedf 	beq.w	8023fee <_ZN8touchgfx8LCD16bpp57TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x4e2>
 8024230:	f857 1021 	ldr.w	r1, [r7, r1, lsl #2]
 8024234:	9109      	str	r1, [sp, #36]	; 0x24
 8024236:	0e09      	lsrs	r1, r1, #24
 8024238:	9112      	str	r1, [sp, #72]	; 0x48
 802423a:	e6d8      	b.n	8023fee <_ZN8touchgfx8LCD16bpp57TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x4e2>
 802423c:	b01d      	add	sp, #116	; 0x74
 802423e:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}

08024242 <_ZNK8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKmssiihh>:
 8024242:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 8024246:	b085      	sub	sp, #20
 8024248:	e9dd 740f 	ldrd	r7, r4, [sp, #60]	; 0x3c
 802424c:	9102      	str	r1, [sp, #8]
 802424e:	2c00      	cmp	r4, #0
 8024250:	fb04 7103 	mla	r1, r4, r3, r7
 8024254:	f9bd e038 	ldrsh.w	lr, [sp, #56]	; 0x38
 8024258:	f89d 6044 	ldrb.w	r6, [sp, #68]	; 0x44
 802425c:	f89d 0048 	ldrb.w	r0, [sp, #72]	; 0x48
 8024260:	eb02 0c81 	add.w	ip, r2, r1, lsl #2
 8024264:	f2c0 810c 	blt.w	8024480 <_ZNK8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKmssiihh+0x23e>
 8024268:	45a6      	cmp	lr, r4
 802426a:	f340 8109 	ble.w	8024480 <_ZNK8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKmssiihh+0x23e>
 802426e:	2f00      	cmp	r7, #0
 8024270:	f2c0 8104 	blt.w	802447c <_ZNK8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKmssiihh+0x23a>
 8024274:	42bb      	cmp	r3, r7
 8024276:	f340 8101 	ble.w	802447c <_ZNK8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKmssiihh+0x23a>
 802427a:	f852 5021 	ldr.w	r5, [r2, r1, lsl #2]
 802427e:	1c7a      	adds	r2, r7, #1
 8024280:	f100 8101 	bmi.w	8024486 <_ZNK8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKmssiihh+0x244>
 8024284:	4293      	cmp	r3, r2
 8024286:	f340 80fe 	ble.w	8024486 <_ZNK8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKmssiihh+0x244>
 802428a:	2e00      	cmp	r6, #0
 802428c:	f000 80fd 	beq.w	802448a <_ZNK8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKmssiihh+0x248>
 8024290:	f8dc 1004 	ldr.w	r1, [ip, #4]
 8024294:	3401      	adds	r4, #1
 8024296:	f100 80fc 	bmi.w	8024492 <_ZNK8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKmssiihh+0x250>
 802429a:	45a6      	cmp	lr, r4
 802429c:	f340 80f9 	ble.w	8024492 <_ZNK8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKmssiihh+0x250>
 80242a0:	2800      	cmp	r0, #0
 80242a2:	f000 80f9 	beq.w	8024498 <_ZNK8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKmssiihh+0x256>
 80242a6:	2f00      	cmp	r7, #0
 80242a8:	eb0c 0283 	add.w	r2, ip, r3, lsl #2
 80242ac:	f2c0 80ef 	blt.w	802448e <_ZNK8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKmssiihh+0x24c>
 80242b0:	42bb      	cmp	r3, r7
 80242b2:	f340 80ec 	ble.w	802448e <_ZNK8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKmssiihh+0x24c>
 80242b6:	f85c 4023 	ldr.w	r4, [ip, r3, lsl #2]
 80242ba:	3701      	adds	r7, #1
 80242bc:	f100 80ef 	bmi.w	802449e <_ZNK8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKmssiihh+0x25c>
 80242c0:	42bb      	cmp	r3, r7
 80242c2:	f340 80ec 	ble.w	802449e <_ZNK8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKmssiihh+0x25c>
 80242c6:	2e00      	cmp	r6, #0
 80242c8:	f000 80eb 	beq.w	80244a2 <_ZNK8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKmssiihh+0x260>
 80242cc:	6852      	ldr	r2, [r2, #4]
 80242ce:	b2b6      	uxth	r6, r6
 80242d0:	b280      	uxth	r0, r0
 80242d2:	fb00 fe06 	mul.w	lr, r0, r6
 80242d6:	ebce 1000 	rsb	r0, lr, r0, lsl #4
 80242da:	0136      	lsls	r6, r6, #4
 80242dc:	eba6 070e 	sub.w	r7, r6, lr
 80242e0:	b280      	uxth	r0, r0
 80242e2:	f5c6 7380 	rsb	r3, r6, #256	; 0x100
 80242e6:	ea4f 6a11 	mov.w	sl, r1, lsr #24
 80242ea:	b2bf      	uxth	r7, r7
 80242ec:	1a1b      	subs	r3, r3, r0
 80242ee:	ea4f 6b15 	mov.w	fp, r5, lsr #24
 80242f2:	b29b      	uxth	r3, r3
 80242f4:	fb07 f60a 	mul.w	r6, r7, sl
 80242f8:	ea4f 6914 	mov.w	r9, r4, lsr #24
 80242fc:	fb0b 6603 	mla	r6, fp, r3, r6
 8024300:	ea4f 6812 	mov.w	r8, r2, lsr #24
 8024304:	fb00 6609 	mla	r6, r0, r9, r6
 8024308:	fb0e 6608 	mla	r6, lr, r8, r6
 802430c:	f3c6 2607 	ubfx	r6, r6, #8, #8
 8024310:	9600      	str	r6, [sp, #0]
 8024312:	2e00      	cmp	r6, #0
 8024314:	f000 80af 	beq.w	8024476 <_ZNK8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKmssiihh+0x234>
 8024318:	f005 1cff 	and.w	ip, r5, #16711935	; 0xff00ff
 802431c:	fb0b fc0c 	mul.w	ip, fp, ip
 8024320:	f405 457f 	and.w	r5, r5, #65280	; 0xff00
 8024324:	fb0b f505 	mul.w	r5, fp, r5
 8024328:	ea4f 2b1c 	mov.w	fp, ip, lsr #8
 802432c:	f00b 1bff 	and.w	fp, fp, #16711935	; 0xff00ff
 8024330:	f10c 1c01 	add.w	ip, ip, #65537	; 0x10001
 8024334:	44dc      	add	ip, fp
 8024336:	ea4f 2c1c 	mov.w	ip, ip, lsr #8
 802433a:	9501      	str	r5, [sp, #4]
 802433c:	f00c 15ff 	and.w	r5, ip, #16711935	; 0xff00ff
 8024340:	9503      	str	r5, [sp, #12]
 8024342:	9d01      	ldr	r5, [sp, #4]
 8024344:	9e02      	ldr	r6, [sp, #8]
 8024346:	f505 7c80 	add.w	ip, r5, #256	; 0x100
 802434a:	eb0c 2515 	add.w	r5, ip, r5, lsr #8
 802434e:	f001 1cff 	and.w	ip, r1, #16711935	; 0xff00ff
 8024352:	fb0a fc0c 	mul.w	ip, sl, ip
 8024356:	ea4f 2b15 	mov.w	fp, r5, lsr #8
 802435a:	ea4f 251c 	mov.w	r5, ip, lsr #8
 802435e:	f005 15ff 	and.w	r5, r5, #16711935	; 0xff00ff
 8024362:	f10c 1c01 	add.w	ip, ip, #65537	; 0x10001
 8024366:	4465      	add	r5, ip
 8024368:	f004 1cff 	and.w	ip, r4, #16711935	; 0xff00ff
 802436c:	f404 447f 	and.w	r4, r4, #65280	; 0xff00
 8024370:	fb09 fc0c 	mul.w	ip, r9, ip
 8024374:	fb09 f904 	mul.w	r9, r9, r4
 8024378:	f509 7480 	add.w	r4, r9, #256	; 0x100
 802437c:	eb04 2919 	add.w	r9, r4, r9, lsr #8
 8024380:	f002 14ff 	and.w	r4, r2, #16711935	; 0xff00ff
 8024384:	fb08 f404 	mul.w	r4, r8, r4
 8024388:	f401 417f 	and.w	r1, r1, #65280	; 0xff00
 802438c:	f402 427f 	and.w	r2, r2, #65280	; 0xff00
 8024390:	fb08 f802 	mul.w	r8, r8, r2
 8024394:	fb0a fa01 	mul.w	sl, sl, r1
 8024398:	0a22      	lsrs	r2, r4, #8
 802439a:	f50a 7180 	add.w	r1, sl, #256	; 0x100
 802439e:	f002 12ff 	and.w	r2, r2, #16711935	; 0xff00ff
 80243a2:	f104 1401 	add.w	r4, r4, #65537	; 0x10001
 80243a6:	eb01 2a1a 	add.w	sl, r1, sl, lsr #8
 80243aa:	4414      	add	r4, r2
 80243ac:	ea4f 211c 	mov.w	r1, ip, lsr #8
 80243b0:	f508 7280 	add.w	r2, r8, #256	; 0x100
 80243b4:	0a2d      	lsrs	r5, r5, #8
 80243b6:	eb02 2818 	add.w	r8, r2, r8, lsr #8
 80243ba:	f005 15ff 	and.w	r5, r5, #16711935	; 0xff00ff
 80243be:	9a03      	ldr	r2, [sp, #12]
 80243c0:	8836      	ldrh	r6, [r6, #0]
 80243c2:	f001 11ff 	and.w	r1, r1, #16711935	; 0xff00ff
 80243c6:	f10c 1c01 	add.w	ip, ip, #65537	; 0x10001
 80243ca:	437d      	muls	r5, r7
 80243cc:	4461      	add	r1, ip
 80243ce:	0a24      	lsrs	r4, r4, #8
 80243d0:	fb02 5503 	mla	r5, r2, r3, r5
 80243d4:	0a09      	lsrs	r1, r1, #8
 80243d6:	f004 14ff 	and.w	r4, r4, #16711935	; 0xff00ff
 80243da:	fb04 540e 	mla	r4, r4, lr, r5
 80243de:	f001 11ff 	and.w	r1, r1, #16711935	; 0xff00ff
 80243e2:	fb01 4100 	mla	r1, r1, r0, r4
 80243e6:	ea4f 2a1a 	mov.w	sl, sl, lsr #8
 80243ea:	0a09      	lsrs	r1, r1, #8
 80243ec:	f40a 4a7f 	and.w	sl, sl, #65280	; 0xff00
 80243f0:	f001 14ff 	and.w	r4, r1, #16711935	; 0xff00ff
 80243f4:	ea4f 2818 	mov.w	r8, r8, lsr #8
 80243f8:	f40b 417f 	and.w	r1, fp, #65280	; 0xff00
 80243fc:	fb07 f70a 	mul.w	r7, r7, sl
 8024400:	fb03 7101 	mla	r1, r3, r1, r7
 8024404:	ea4f 2919 	mov.w	r9, r9, lsr #8
 8024408:	9b00      	ldr	r3, [sp, #0]
 802440a:	f408 487f 	and.w	r8, r8, #65280	; 0xff00
 802440e:	fb0e 1e08 	mla	lr, lr, r8, r1
 8024412:	f409 417f 	and.w	r1, r9, #65280	; 0xff00
 8024416:	fb00 e101 	mla	r1, r0, r1, lr
 802441a:	43da      	mvns	r2, r3
 802441c:	1233      	asrs	r3, r6, #8
 802441e:	b2d2      	uxtb	r2, r2
 8024420:	10f0      	asrs	r0, r6, #3
 8024422:	0a09      	lsrs	r1, r1, #8
 8024424:	f003 03f8 	and.w	r3, r3, #248	; 0xf8
 8024428:	00f6      	lsls	r6, r6, #3
 802442a:	4353      	muls	r3, r2
 802442c:	f401 417f 	and.w	r1, r1, #65280	; 0xff00
 8024430:	f000 00fc 	and.w	r0, r0, #252	; 0xfc
 8024434:	b2f6      	uxtb	r6, r6
 8024436:	4321      	orrs	r1, r4
 8024438:	4350      	muls	r0, r2
 802443a:	4356      	muls	r6, r2
 802443c:	1c5a      	adds	r2, r3, #1
 802443e:	eb02 2213 	add.w	r2, r2, r3, lsr #8
 8024442:	0c0b      	lsrs	r3, r1, #16
 8024444:	eb03 2312 	add.w	r3, r3, r2, lsr #8
 8024448:	1c42      	adds	r2, r0, #1
 802444a:	eb02 2010 	add.w	r0, r2, r0, lsr #8
 802444e:	0a0a      	lsrs	r2, r1, #8
 8024450:	eb02 2210 	add.w	r2, r2, r0, lsr #8
 8024454:	021b      	lsls	r3, r3, #8
 8024456:	00d2      	lsls	r2, r2, #3
 8024458:	f402 62fc 	and.w	r2, r2, #2016	; 0x7e0
 802445c:	f403 4378 	and.w	r3, r3, #63488	; 0xf800
 8024460:	4313      	orrs	r3, r2
 8024462:	1c72      	adds	r2, r6, #1
 8024464:	eb02 2616 	add.w	r6, r2, r6, lsr #8
 8024468:	eb01 2116 	add.w	r1, r1, r6, lsr #8
 802446c:	f3c1 01c4 	ubfx	r1, r1, #3, #5
 8024470:	4319      	orrs	r1, r3
 8024472:	9b02      	ldr	r3, [sp, #8]
 8024474:	8019      	strh	r1, [r3, #0]
 8024476:	b005      	add	sp, #20
 8024478:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
 802447c:	2500      	movs	r5, #0
 802447e:	e6fe      	b.n	802427e <_ZNK8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKmssiihh+0x3c>
 8024480:	2100      	movs	r1, #0
 8024482:	460d      	mov	r5, r1
 8024484:	e706      	b.n	8024294 <_ZNK8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKmssiihh+0x52>
 8024486:	2100      	movs	r1, #0
 8024488:	e704      	b.n	8024294 <_ZNK8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKmssiihh+0x52>
 802448a:	4631      	mov	r1, r6
 802448c:	e702      	b.n	8024294 <_ZNK8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKmssiihh+0x52>
 802448e:	2400      	movs	r4, #0
 8024490:	e713      	b.n	80242ba <_ZNK8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKmssiihh+0x78>
 8024492:	2200      	movs	r2, #0
 8024494:	4614      	mov	r4, r2
 8024496:	e71a      	b.n	80242ce <_ZNK8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKmssiihh+0x8c>
 8024498:	4602      	mov	r2, r0
 802449a:	4604      	mov	r4, r0
 802449c:	e717      	b.n	80242ce <_ZNK8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKmssiihh+0x8c>
 802449e:	2200      	movs	r2, #0
 80244a0:	e715      	b.n	80242ce <_ZNK8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKmssiihh+0x8c>
 80244a2:	4632      	mov	r2, r6
 80244a4:	e713      	b.n	80242ce <_ZNK8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKmssiihh+0x8c>
	...

080244a8 <_ZN8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff>:
 80244a8:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 80244ac:	b09b      	sub	sp, #108	; 0x6c
 80244ae:	e9dd 4625 	ldrd	r4, r6, [sp, #148]	; 0x94
 80244b2:	9218      	str	r2, [sp, #96]	; 0x60
 80244b4:	9a29      	ldr	r2, [sp, #164]	; 0xa4
 80244b6:	9116      	str	r1, [sp, #88]	; 0x58
 80244b8:	9307      	str	r3, [sp, #28]
 80244ba:	e9dd 132a 	ldrd	r1, r3, [sp, #168]	; 0xa8
 80244be:	9019      	str	r0, [sp, #100]	; 0x64
 80244c0:	6850      	ldr	r0, [r2, #4]
 80244c2:	6812      	ldr	r2, [r2, #0]
 80244c4:	fb00 1303 	mla	r3, r0, r3, r1
 80244c8:	eb02 0343 	add.w	r3, r2, r3, lsl #1
 80244cc:	930a      	str	r3, [sp, #40]	; 0x28
 80244ce:	9b2c      	ldr	r3, [sp, #176]	; 0xb0
 80244d0:	681b      	ldr	r3, [r3, #0]
 80244d2:	930f      	str	r3, [sp, #60]	; 0x3c
 80244d4:	9b16      	ldr	r3, [sp, #88]	; 0x58
 80244d6:	2b00      	cmp	r3, #0
 80244d8:	dc03      	bgt.n	80244e2 <_ZN8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x3a>
 80244da:	9b18      	ldr	r3, [sp, #96]	; 0x60
 80244dc:	2b00      	cmp	r3, #0
 80244de:	f340 8386 	ble.w	8024bee <_ZN8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x746>
 80244e2:	9b2c      	ldr	r3, [sp, #176]	; 0xb0
 80244e4:	f9b3 1008 	ldrsh.w	r1, [r3, #8]
 80244e8:	f9b3 200c 	ldrsh.w	r2, [r3, #12]
 80244ec:	1e48      	subs	r0, r1, #1
 80244ee:	1e57      	subs	r7, r2, #1
 80244f0:	9b07      	ldr	r3, [sp, #28]
 80244f2:	2b00      	cmp	r3, #0
 80244f4:	f340 8166 	ble.w	80247c4 <_ZN8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x31c>
 80244f8:	ea5f 4c24 	movs.w	ip, r4, asr #16
 80244fc:	ea4f 4326 	mov.w	r3, r6, asr #16
 8024500:	d406      	bmi.n	8024510 <_ZN8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x68>
 8024502:	4584      	cmp	ip, r0
 8024504:	da04      	bge.n	8024510 <_ZN8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x68>
 8024506:	2b00      	cmp	r3, #0
 8024508:	db02      	blt.n	8024510 <_ZN8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x68>
 802450a:	42bb      	cmp	r3, r7
 802450c:	f2c0 815b 	blt.w	80247c6 <_ZN8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x31e>
 8024510:	f11c 0c01 	adds.w	ip, ip, #1
 8024514:	f100 814b 	bmi.w	80247ae <_ZN8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x306>
 8024518:	4561      	cmp	r1, ip
 802451a:	f2c0 8148 	blt.w	80247ae <_ZN8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x306>
 802451e:	3301      	adds	r3, #1
 8024520:	f100 8145 	bmi.w	80247ae <_ZN8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x306>
 8024524:	429a      	cmp	r2, r3
 8024526:	f2c0 8142 	blt.w	80247ae <_ZN8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x306>
 802452a:	9b07      	ldr	r3, [sp, #28]
 802452c:	9f0a      	ldr	r7, [sp, #40]	; 0x28
 802452e:	9317      	str	r3, [sp, #92]	; 0x5c
 8024530:	9b17      	ldr	r3, [sp, #92]	; 0x5c
 8024532:	2b00      	cmp	r3, #0
 8024534:	f340 8165 	ble.w	8024802 <_ZN8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x35a>
 8024538:	9a2c      	ldr	r2, [sp, #176]	; 0xb0
 802453a:	9b2c      	ldr	r3, [sp, #176]	; 0xb0
 802453c:	f8d2 e00c 	ldr.w	lr, [r2, #12]
 8024540:	689b      	ldr	r3, [r3, #8]
 8024542:	1422      	asrs	r2, r4, #16
 8024544:	ea4f 4c26 	mov.w	ip, r6, asr #16
 8024548:	f3c4 3103 	ubfx	r1, r4, #12, #4
 802454c:	f3c6 3003 	ubfx	r0, r6, #12, #4
 8024550:	f100 81d5 	bmi.w	80248fe <_ZN8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x456>
 8024554:	f103 38ff 	add.w	r8, r3, #4294967295
 8024558:	4542      	cmp	r2, r8
 802455a:	f280 81d0 	bge.w	80248fe <_ZN8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x456>
 802455e:	f1bc 0f00 	cmp.w	ip, #0
 8024562:	f2c0 81cc 	blt.w	80248fe <_ZN8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x456>
 8024566:	f10e 38ff 	add.w	r8, lr, #4294967295
 802456a:	45c4      	cmp	ip, r8
 802456c:	f280 81c7 	bge.w	80248fe <_ZN8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x456>
 8024570:	b21b      	sxth	r3, r3
 8024572:	fb0c 2203 	mla	r2, ip, r3, r2
 8024576:	9d0f      	ldr	r5, [sp, #60]	; 0x3c
 8024578:	eb05 0882 	add.w	r8, r5, r2, lsl #2
 802457c:	f855 2022 	ldr.w	r2, [r5, r2, lsl #2]
 8024580:	ea4f 6e12 	mov.w	lr, r2, lsr #24
 8024584:	2900      	cmp	r1, #0
 8024586:	f000 8182 	beq.w	802488e <_ZN8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x3e6>
 802458a:	f8d8 5004 	ldr.w	r5, [r8, #4]
 802458e:	950b      	str	r5, [sp, #44]	; 0x2c
 8024590:	0e2d      	lsrs	r5, r5, #24
 8024592:	9512      	str	r5, [sp, #72]	; 0x48
 8024594:	b180      	cbz	r0, 80245b8 <_ZN8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x110>
 8024596:	f103 4380 	add.w	r3, r3, #1073741824	; 0x40000000
 802459a:	3b01      	subs	r3, #1
 802459c:	009b      	lsls	r3, r3, #2
 802459e:	3304      	adds	r3, #4
 80245a0:	eb08 0c03 	add.w	ip, r8, r3
 80245a4:	f858 3003 	ldr.w	r3, [r8, r3]
 80245a8:	9308      	str	r3, [sp, #32]
 80245aa:	0e1b      	lsrs	r3, r3, #24
 80245ac:	9310      	str	r3, [sp, #64]	; 0x40
 80245ae:	f8dc 3004 	ldr.w	r3, [ip, #4]
 80245b2:	930c      	str	r3, [sp, #48]	; 0x30
 80245b4:	0e1b      	lsrs	r3, r3, #24
 80245b6:	9313      	str	r3, [sp, #76]	; 0x4c
 80245b8:	b289      	uxth	r1, r1
 80245ba:	b280      	uxth	r0, r0
 80245bc:	fb01 f900 	mul.w	r9, r1, r0
 80245c0:	ebc9 1000 	rsb	r0, r9, r0, lsl #4
 80245c4:	0109      	lsls	r1, r1, #4
 80245c6:	eba1 0809 	sub.w	r8, r1, r9
 80245ca:	b280      	uxth	r0, r0
 80245cc:	f5c1 7180 	rsb	r1, r1, #256	; 0x100
 80245d0:	9b12      	ldr	r3, [sp, #72]	; 0x48
 80245d2:	9d10      	ldr	r5, [sp, #64]	; 0x40
 80245d4:	fa1f f888 	uxth.w	r8, r8
 80245d8:	1a09      	subs	r1, r1, r0
 80245da:	b289      	uxth	r1, r1
 80245dc:	fb08 f303 	mul.w	r3, r8, r3
 80245e0:	fb01 330e 	mla	r3, r1, lr, r3
 80245e4:	fb00 3305 	mla	r3, r0, r5, r3
 80245e8:	9d13      	ldr	r5, [sp, #76]	; 0x4c
 80245ea:	fb09 3305 	mla	r3, r9, r5, r3
 80245ee:	f3c3 2307 	ubfx	r3, r3, #8, #8
 80245f2:	2b00      	cmp	r3, #0
 80245f4:	f000 80d2 	beq.w	802479c <_ZN8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x2f4>
 80245f8:	f1be 0fff 	cmp.w	lr, #255	; 0xff
 80245fc:	d01b      	beq.n	8024636 <_ZN8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x18e>
 80245fe:	f002 1aff 	and.w	sl, r2, #16711935	; 0xff00ff
 8024602:	fb0e fa0a 	mul.w	sl, lr, sl
 8024606:	f402 427f 	and.w	r2, r2, #65280	; 0xff00
 802460a:	fb0e fe02 	mul.w	lr, lr, r2
 802460e:	ea4f 221a 	mov.w	r2, sl, lsr #8
 8024612:	f002 12ff 	and.w	r2, r2, #16711935	; 0xff00ff
 8024616:	f10a 1a01 	add.w	sl, sl, #65537	; 0x10001
 802461a:	f50e 7c80 	add.w	ip, lr, #256	; 0x100
 802461e:	4452      	add	r2, sl
 8024620:	eb0c 2c1e 	add.w	ip, ip, lr, lsr #8
 8024624:	0a12      	lsrs	r2, r2, #8
 8024626:	ea4f 2c1c 	mov.w	ip, ip, lsr #8
 802462a:	f002 12ff 	and.w	r2, r2, #16711935	; 0xff00ff
 802462e:	f40c 4c7f 	and.w	ip, ip, #65280	; 0xff00
 8024632:	ea42 020c 	orr.w	r2, r2, ip
 8024636:	9d12      	ldr	r5, [sp, #72]	; 0x48
 8024638:	2dff      	cmp	r5, #255	; 0xff
 802463a:	d021      	beq.n	8024680 <_ZN8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x1d8>
 802463c:	9d0b      	ldr	r5, [sp, #44]	; 0x2c
 802463e:	f005 1bff 	and.w	fp, r5, #16711935	; 0xff00ff
 8024642:	9d12      	ldr	r5, [sp, #72]	; 0x48
 8024644:	fb05 fb0b 	mul.w	fp, r5, fp
 8024648:	9d0b      	ldr	r5, [sp, #44]	; 0x2c
 802464a:	f405 4a7f 	and.w	sl, r5, #65280	; 0xff00
 802464e:	9d12      	ldr	r5, [sp, #72]	; 0x48
 8024650:	ea4f 2e1b 	mov.w	lr, fp, lsr #8
 8024654:	fb05 fa0a 	mul.w	sl, r5, sl
 8024658:	f00e 1eff 	and.w	lr, lr, #16711935	; 0xff00ff
 802465c:	f10b 1b01 	add.w	fp, fp, #65537	; 0x10001
 8024660:	f50a 7c80 	add.w	ip, sl, #256	; 0x100
 8024664:	44de      	add	lr, fp
 8024666:	eb0c 2a1a 	add.w	sl, ip, sl, lsr #8
 802466a:	ea4f 2e1e 	mov.w	lr, lr, lsr #8
 802466e:	ea4f 2a1a 	mov.w	sl, sl, lsr #8
 8024672:	f00e 1eff 	and.w	lr, lr, #16711935	; 0xff00ff
 8024676:	f40a 4a7f 	and.w	sl, sl, #65280	; 0xff00
 802467a:	ea4e 050a 	orr.w	r5, lr, sl
 802467e:	950b      	str	r5, [sp, #44]	; 0x2c
 8024680:	9d10      	ldr	r5, [sp, #64]	; 0x40
 8024682:	2dff      	cmp	r5, #255	; 0xff
 8024684:	d021      	beq.n	80246ca <_ZN8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x222>
 8024686:	9d08      	ldr	r5, [sp, #32]
 8024688:	f005 1bff 	and.w	fp, r5, #16711935	; 0xff00ff
 802468c:	9d10      	ldr	r5, [sp, #64]	; 0x40
 802468e:	fb05 fb0b 	mul.w	fp, r5, fp
 8024692:	9d08      	ldr	r5, [sp, #32]
 8024694:	f405 4e7f 	and.w	lr, r5, #65280	; 0xff00
 8024698:	9d10      	ldr	r5, [sp, #64]	; 0x40
 802469a:	fb05 fa0e 	mul.w	sl, r5, lr
 802469e:	ea4f 2e1b 	mov.w	lr, fp, lsr #8
 80246a2:	f00e 1eff 	and.w	lr, lr, #16711935	; 0xff00ff
 80246a6:	f10b 1b01 	add.w	fp, fp, #65537	; 0x10001
 80246aa:	f50a 7c80 	add.w	ip, sl, #256	; 0x100
 80246ae:	44de      	add	lr, fp
 80246b0:	eb0c 2a1a 	add.w	sl, ip, sl, lsr #8
 80246b4:	ea4f 2e1e 	mov.w	lr, lr, lsr #8
 80246b8:	ea4f 2a1a 	mov.w	sl, sl, lsr #8
 80246bc:	f00e 1eff 	and.w	lr, lr, #16711935	; 0xff00ff
 80246c0:	f40a 4a7f 	and.w	sl, sl, #65280	; 0xff00
 80246c4:	ea4e 050a 	orr.w	r5, lr, sl
 80246c8:	9508      	str	r5, [sp, #32]
 80246ca:	9d13      	ldr	r5, [sp, #76]	; 0x4c
 80246cc:	2dff      	cmp	r5, #255	; 0xff
 80246ce:	d021      	beq.n	8024714 <_ZN8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x26c>
 80246d0:	9d0c      	ldr	r5, [sp, #48]	; 0x30
 80246d2:	f005 1bff 	and.w	fp, r5, #16711935	; 0xff00ff
 80246d6:	9d13      	ldr	r5, [sp, #76]	; 0x4c
 80246d8:	fb05 fb0b 	mul.w	fp, r5, fp
 80246dc:	9d0c      	ldr	r5, [sp, #48]	; 0x30
 80246de:	f405 4a7f 	and.w	sl, r5, #65280	; 0xff00
 80246e2:	9d13      	ldr	r5, [sp, #76]	; 0x4c
 80246e4:	ea4f 2e1b 	mov.w	lr, fp, lsr #8
 80246e8:	fb05 fa0a 	mul.w	sl, r5, sl
 80246ec:	f00e 1eff 	and.w	lr, lr, #16711935	; 0xff00ff
 80246f0:	f10b 1b01 	add.w	fp, fp, #65537	; 0x10001
 80246f4:	f50a 7c80 	add.w	ip, sl, #256	; 0x100
 80246f8:	44de      	add	lr, fp
 80246fa:	eb0c 2a1a 	add.w	sl, ip, sl, lsr #8
 80246fe:	ea4f 2e1e 	mov.w	lr, lr, lsr #8
 8024702:	ea4f 2a1a 	mov.w	sl, sl, lsr #8
 8024706:	f00e 1eff 	and.w	lr, lr, #16711935	; 0xff00ff
 802470a:	f40a 4a7f 	and.w	sl, sl, #65280	; 0xff00
 802470e:	ea4e 050a 	orr.w	r5, lr, sl
 8024712:	950c      	str	r5, [sp, #48]	; 0x30
 8024714:	9d0b      	ldr	r5, [sp, #44]	; 0x2c
 8024716:	f005 1cff 	and.w	ip, r5, #16711935	; 0xff00ff
 802471a:	9d08      	ldr	r5, [sp, #32]
 802471c:	f002 1eff 	and.w	lr, r2, #16711935	; 0xff00ff
 8024720:	fb08 fc0c 	mul.w	ip, r8, ip
 8024724:	fb01 cc0e 	mla	ip, r1, lr, ip
 8024728:	f005 1eff 	and.w	lr, r5, #16711935	; 0xff00ff
 802472c:	9d0c      	ldr	r5, [sp, #48]	; 0x30
 802472e:	fb00 cc0e 	mla	ip, r0, lr, ip
 8024732:	f005 1eff 	and.w	lr, r5, #16711935	; 0xff00ff
 8024736:	9d0b      	ldr	r5, [sp, #44]	; 0x2c
 8024738:	fb09 cc0e 	mla	ip, r9, lr, ip
 802473c:	f405 4e7f 	and.w	lr, r5, #65280	; 0xff00
 8024740:	f402 427f 	and.w	r2, r2, #65280	; 0xff00
 8024744:	fb08 f80e 	mul.w	r8, r8, lr
 8024748:	fb01 8202 	mla	r2, r1, r2, r8
 802474c:	9908      	ldr	r1, [sp, #32]
 802474e:	f401 4a7f 	and.w	sl, r1, #65280	; 0xff00
 8024752:	990c      	ldr	r1, [sp, #48]	; 0x30
 8024754:	fb00 220a 	mla	r2, r0, sl, r2
 8024758:	f401 407f 	and.w	r0, r1, #65280	; 0xff00
 802475c:	fb09 2900 	mla	r9, r9, r0, r2
 8024760:	ea4f 2c1c 	mov.w	ip, ip, lsr #8
 8024764:	ea4f 2919 	mov.w	r9, r9, lsr #8
 8024768:	f00c 1cff 	and.w	ip, ip, #16711935	; 0xff00ff
 802476c:	f409 497f 	and.w	r9, r9, #65280	; 0xff00
 8024770:	ea4c 0c09 	orr.w	ip, ip, r9
 8024774:	2bff      	cmp	r3, #255	; 0xff
 8024776:	ea4f 221c 	mov.w	r2, ip, lsr #8
 802477a:	f040 8091 	bne.w	80248a0 <_ZN8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x3f8>
 802477e:	ea4f 135c 	mov.w	r3, ip, lsr #5
 8024782:	f422 62ff 	bic.w	r2, r2, #2040	; 0x7f8
 8024786:	f403 63fc 	and.w	r3, r3, #2016	; 0x7e0
 802478a:	f022 0207 	bic.w	r2, r2, #7
 802478e:	431a      	orrs	r2, r3
 8024790:	f3cc 0cc4 	ubfx	ip, ip, #3, #5
 8024794:	ea4c 0c02 	orr.w	ip, ip, r2
 8024798:	f8a7 c000 	strh.w	ip, [r7]
 802479c:	9b27      	ldr	r3, [sp, #156]	; 0x9c
 802479e:	441c      	add	r4, r3
 80247a0:	9b28      	ldr	r3, [sp, #160]	; 0xa0
 80247a2:	441e      	add	r6, r3
 80247a4:	9b17      	ldr	r3, [sp, #92]	; 0x5c
 80247a6:	3b01      	subs	r3, #1
 80247a8:	3702      	adds	r7, #2
 80247aa:	9317      	str	r3, [sp, #92]	; 0x5c
 80247ac:	e6c0      	b.n	8024530 <_ZN8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x88>
 80247ae:	9b27      	ldr	r3, [sp, #156]	; 0x9c
 80247b0:	441c      	add	r4, r3
 80247b2:	9b28      	ldr	r3, [sp, #160]	; 0xa0
 80247b4:	441e      	add	r6, r3
 80247b6:	9b07      	ldr	r3, [sp, #28]
 80247b8:	3b01      	subs	r3, #1
 80247ba:	9307      	str	r3, [sp, #28]
 80247bc:	9b0a      	ldr	r3, [sp, #40]	; 0x28
 80247be:	3302      	adds	r3, #2
 80247c0:	930a      	str	r3, [sp, #40]	; 0x28
 80247c2:	e695      	b.n	80244f0 <_ZN8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x48>
 80247c4:	d024      	beq.n	8024810 <_ZN8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x368>
 80247c6:	9b07      	ldr	r3, [sp, #28]
 80247c8:	9827      	ldr	r0, [sp, #156]	; 0x9c
 80247ca:	3b01      	subs	r3, #1
 80247cc:	fb00 4003 	mla	r0, r0, r3, r4
 80247d0:	1400      	asrs	r0, r0, #16
 80247d2:	f53f aeaa 	bmi.w	802452a <_ZN8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x82>
 80247d6:	3901      	subs	r1, #1
 80247d8:	4288      	cmp	r0, r1
 80247da:	f6bf aea6 	bge.w	802452a <_ZN8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x82>
 80247de:	9928      	ldr	r1, [sp, #160]	; 0xa0
 80247e0:	fb01 6303 	mla	r3, r1, r3, r6
 80247e4:	141b      	asrs	r3, r3, #16
 80247e6:	f53f aea0 	bmi.w	802452a <_ZN8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x82>
 80247ea:	3a01      	subs	r2, #1
 80247ec:	4293      	cmp	r3, r2
 80247ee:	f6bf ae9c 	bge.w	802452a <_ZN8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x82>
 80247f2:	f8dd b01c 	ldr.w	fp, [sp, #28]
 80247f6:	f8dd 8028 	ldr.w	r8, [sp, #40]	; 0x28
 80247fa:	f1bb 0f00 	cmp.w	fp, #0
 80247fe:	f300 809a 	bgt.w	8024936 <_ZN8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x48e>
 8024802:	9b07      	ldr	r3, [sp, #28]
 8024804:	ea23 75e3 	bic.w	r5, r3, r3, asr #31
 8024808:	9b0a      	ldr	r3, [sp, #40]	; 0x28
 802480a:	eb03 0345 	add.w	r3, r3, r5, lsl #1
 802480e:	930a      	str	r3, [sp, #40]	; 0x28
 8024810:	9b16      	ldr	r3, [sp, #88]	; 0x58
 8024812:	2b00      	cmp	r3, #0
 8024814:	f340 81eb 	ble.w	8024bee <_ZN8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x746>
 8024818:	ee30 0a04 	vadd.f32	s0, s0, s8
 802481c:	eeb7 7a00 	vmov.f32	s14, #112	; 0x3f800000  1.0
 8024820:	eec7 7a00 	vdiv.f32	s15, s14, s0
 8024824:	9b24      	ldr	r3, [sp, #144]	; 0x90
 8024826:	ee70 0aa4 	vadd.f32	s1, s1, s9
 802482a:	ee31 1a05 	vadd.f32	s2, s2, s10
 802482e:	ee20 7aa7 	vmul.f32	s14, s1, s15
 8024832:	eef0 6a62 	vmov.f32	s13, s5
 8024836:	ee61 7a27 	vmul.f32	s15, s2, s15
 802483a:	eefe 6ac8 	vcvt.s32.f32	s13, s13, #16
 802483e:	ee77 2a62 	vsub.f32	s5, s14, s5
 8024842:	ee16 4a90 	vmov	r4, s13
 8024846:	eefe 2ac8 	vcvt.s32.f32	s5, s5, #16
 802484a:	eef0 6a43 	vmov.f32	s13, s6
 802484e:	ee37 3ac3 	vsub.f32	s6, s15, s6
 8024852:	ee12 2a90 	vmov	r2, s5
 8024856:	eebe 3ac8 	vcvt.s32.f32	s6, s6, #16
 802485a:	fb92 f3f3 	sdiv	r3, r2, r3
 802485e:	ee13 2a10 	vmov	r2, s6
 8024862:	9327      	str	r3, [sp, #156]	; 0x9c
 8024864:	9b24      	ldr	r3, [sp, #144]	; 0x90
 8024866:	fb92 f3f3 	sdiv	r3, r2, r3
 802486a:	9328      	str	r3, [sp, #160]	; 0xa0
 802486c:	9b16      	ldr	r3, [sp, #88]	; 0x58
 802486e:	9a18      	ldr	r2, [sp, #96]	; 0x60
 8024870:	3b01      	subs	r3, #1
 8024872:	eefe 6ac8 	vcvt.s32.f32	s13, s13, #16
 8024876:	9316      	str	r3, [sp, #88]	; 0x58
 8024878:	9b24      	ldr	r3, [sp, #144]	; 0x90
 802487a:	bf08      	it	eq
 802487c:	4613      	moveq	r3, r2
 802487e:	ee16 6a90 	vmov	r6, s13
 8024882:	9307      	str	r3, [sp, #28]
 8024884:	eeb0 3a67 	vmov.f32	s6, s15
 8024888:	eef0 2a47 	vmov.f32	s5, s14
 802488c:	e622      	b.n	80244d4 <_ZN8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x2c>
 802488e:	2800      	cmp	r0, #0
 8024890:	f43f ae92 	beq.w	80245b8 <_ZN8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x110>
 8024894:	f858 3023 	ldr.w	r3, [r8, r3, lsl #2]
 8024898:	9308      	str	r3, [sp, #32]
 802489a:	0e1b      	lsrs	r3, r3, #24
 802489c:	9310      	str	r3, [sp, #64]	; 0x40
 802489e:	e68b      	b.n	80245b8 <_ZN8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x110>
 80248a0:	8839      	ldrh	r1, [r7, #0]
 80248a2:	4dd4      	ldr	r5, [pc, #848]	; (8024bf4 <_ZN8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x74c>)
 80248a4:	43db      	mvns	r3, r3
 80248a6:	ea4f 2e21 	mov.w	lr, r1, asr #8
 80248aa:	fa5f f883 	uxtb.w	r8, r3
 80248ae:	f00e 0ef8 	and.w	lr, lr, #248	; 0xf8
 80248b2:	fb0e fe08 	mul.w	lr, lr, r8
 80248b6:	10c8      	asrs	r0, r1, #3
 80248b8:	00cb      	lsls	r3, r1, #3
 80248ba:	f000 00fc 	and.w	r0, r0, #252	; 0xfc
 80248be:	f10e 0101 	add.w	r1, lr, #1
 80248c2:	eb01 2e1e 	add.w	lr, r1, lr, lsr #8
 80248c6:	fb00 f008 	mul.w	r0, r0, r8
 80248ca:	ea4f 411c 	mov.w	r1, ip, lsr #16
 80248ce:	eb01 211e 	add.w	r1, r1, lr, lsr #8
 80248d2:	f100 0e01 	add.w	lr, r0, #1
 80248d6:	eb0e 2010 	add.w	r0, lr, r0, lsr #8
 80248da:	eb02 2210 	add.w	r2, r2, r0, lsr #8
 80248de:	b2db      	uxtb	r3, r3
 80248e0:	b2c9      	uxtb	r1, r1
 80248e2:	00d2      	lsls	r2, r2, #3
 80248e4:	fb03 f308 	mul.w	r3, r3, r8
 80248e8:	ea05 2101 	and.w	r1, r5, r1, lsl #8
 80248ec:	f402 62fc 	and.w	r2, r2, #2016	; 0x7e0
 80248f0:	430a      	orrs	r2, r1
 80248f2:	1c59      	adds	r1, r3, #1
 80248f4:	eb01 2313 	add.w	r3, r1, r3, lsr #8
 80248f8:	eb0c 2c13 	add.w	ip, ip, r3, lsr #8
 80248fc:	e748      	b.n	8024790 <_ZN8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x2e8>
 80248fe:	f112 0801 	adds.w	r8, r2, #1
 8024902:	f53f af4b 	bmi.w	802479c <_ZN8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x2f4>
 8024906:	4543      	cmp	r3, r8
 8024908:	f6ff af48 	blt.w	802479c <_ZN8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x2f4>
 802490c:	f11c 0801 	adds.w	r8, ip, #1
 8024910:	f53f af44 	bmi.w	802479c <_ZN8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x2f4>
 8024914:	45c6      	cmp	lr, r8
 8024916:	f6ff af41 	blt.w	802479c <_ZN8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x2f4>
 802491a:	e9cd 2c01 	strd	r2, ip, [sp, #4]
 802491e:	fa0f f28e 	sxth.w	r2, lr
 8024922:	e9cd 1003 	strd	r1, r0, [sp, #12]
 8024926:	9200      	str	r2, [sp, #0]
 8024928:	b21b      	sxth	r3, r3
 802492a:	9a0f      	ldr	r2, [sp, #60]	; 0x3c
 802492c:	9819      	ldr	r0, [sp, #100]	; 0x64
 802492e:	4639      	mov	r1, r7
 8024930:	f7ff fc87 	bl	8024242 <_ZNK8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKmssiihh>
 8024934:	e732      	b.n	802479c <_ZN8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x2f4>
 8024936:	9b2c      	ldr	r3, [sp, #176]	; 0xb0
 8024938:	9d0f      	ldr	r5, [sp, #60]	; 0x3c
 802493a:	f9b3 7008 	ldrsh.w	r7, [r3, #8]
 802493e:	1421      	asrs	r1, r4, #16
 8024940:	1433      	asrs	r3, r6, #16
 8024942:	fb07 1303 	mla	r3, r7, r3, r1
 8024946:	990f      	ldr	r1, [sp, #60]	; 0x3c
 8024948:	eb01 0183 	add.w	r1, r1, r3, lsl #2
 802494c:	f855 3023 	ldr.w	r3, [r5, r3, lsl #2]
 8024950:	f3c4 3203 	ubfx	r2, r4, #12, #4
 8024954:	f3c6 3003 	ubfx	r0, r6, #12, #4
 8024958:	ea4f 6c13 	mov.w	ip, r3, lsr #24
 802495c:	2a00      	cmp	r2, #0
 802495e:	f000 8107 	beq.w	8024b70 <_ZN8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x6c8>
 8024962:	684d      	ldr	r5, [r1, #4]
 8024964:	950d      	str	r5, [sp, #52]	; 0x34
 8024966:	0e2d      	lsrs	r5, r5, #24
 8024968:	9514      	str	r5, [sp, #80]	; 0x50
 802496a:	b178      	cbz	r0, 802498c <_ZN8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x4e4>
 802496c:	f107 4780 	add.w	r7, r7, #1073741824	; 0x40000000
 8024970:	3f01      	subs	r7, #1
 8024972:	00bf      	lsls	r7, r7, #2
 8024974:	3704      	adds	r7, #4
 8024976:	eb01 0e07 	add.w	lr, r1, r7
 802497a:	59c9      	ldr	r1, [r1, r7]
 802497c:	9109      	str	r1, [sp, #36]	; 0x24
 802497e:	0e09      	lsrs	r1, r1, #24
 8024980:	9111      	str	r1, [sp, #68]	; 0x44
 8024982:	f8de 1004 	ldr.w	r1, [lr, #4]
 8024986:	910e      	str	r1, [sp, #56]	; 0x38
 8024988:	0e09      	lsrs	r1, r1, #24
 802498a:	9115      	str	r1, [sp, #84]	; 0x54
 802498c:	b292      	uxth	r2, r2
 802498e:	b280      	uxth	r0, r0
 8024990:	fb02 f900 	mul.w	r9, r2, r0
 8024994:	ebc9 1000 	rsb	r0, r9, r0, lsl #4
 8024998:	0112      	lsls	r2, r2, #4
 802499a:	eba2 0e09 	sub.w	lr, r2, r9
 802499e:	b280      	uxth	r0, r0
 80249a0:	f5c2 7180 	rsb	r1, r2, #256	; 0x100
 80249a4:	9a14      	ldr	r2, [sp, #80]	; 0x50
 80249a6:	9d11      	ldr	r5, [sp, #68]	; 0x44
 80249a8:	fa1f fe8e 	uxth.w	lr, lr
 80249ac:	1a09      	subs	r1, r1, r0
 80249ae:	b289      	uxth	r1, r1
 80249b0:	fb0e f202 	mul.w	r2, lr, r2
 80249b4:	fb01 220c 	mla	r2, r1, ip, r2
 80249b8:	fb00 2205 	mla	r2, r0, r5, r2
 80249bc:	9d15      	ldr	r5, [sp, #84]	; 0x54
 80249be:	fb09 2205 	mla	r2, r9, r5, r2
 80249c2:	f3c2 2207 	ubfx	r2, r2, #8, #8
 80249c6:	2a00      	cmp	r2, #0
 80249c8:	f000 80c9 	beq.w	8024b5e <_ZN8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x6b6>
 80249cc:	f1bc 0fff 	cmp.w	ip, #255	; 0xff
 80249d0:	d019      	beq.n	8024a06 <_ZN8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x55e>
 80249d2:	f003 1aff 	and.w	sl, r3, #16711935	; 0xff00ff
 80249d6:	fb0c fa0a 	mul.w	sl, ip, sl
 80249da:	f403 437f 	and.w	r3, r3, #65280	; 0xff00
 80249de:	fb0c fc03 	mul.w	ip, ip, r3
 80249e2:	ea4f 231a 	mov.w	r3, sl, lsr #8
 80249e6:	f003 13ff 	and.w	r3, r3, #16711935	; 0xff00ff
 80249ea:	f10a 1a01 	add.w	sl, sl, #65537	; 0x10001
 80249ee:	f50c 7780 	add.w	r7, ip, #256	; 0x100
 80249f2:	4453      	add	r3, sl
 80249f4:	eb07 271c 	add.w	r7, r7, ip, lsr #8
 80249f8:	0a1b      	lsrs	r3, r3, #8
 80249fa:	0a3f      	lsrs	r7, r7, #8
 80249fc:	f003 13ff 	and.w	r3, r3, #16711935	; 0xff00ff
 8024a00:	f407 477f 	and.w	r7, r7, #65280	; 0xff00
 8024a04:	433b      	orrs	r3, r7
 8024a06:	9d14      	ldr	r5, [sp, #80]	; 0x50
 8024a08:	2dff      	cmp	r5, #255	; 0xff
 8024a0a:	d020      	beq.n	8024a4e <_ZN8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x5a6>
 8024a0c:	9d0d      	ldr	r5, [sp, #52]	; 0x34
 8024a0e:	f005 17ff 	and.w	r7, r5, #16711935	; 0xff00ff
 8024a12:	9d14      	ldr	r5, [sp, #80]	; 0x50
 8024a14:	436f      	muls	r7, r5
 8024a16:	9d0d      	ldr	r5, [sp, #52]	; 0x34
 8024a18:	f405 4a7f 	and.w	sl, r5, #65280	; 0xff00
 8024a1c:	9d14      	ldr	r5, [sp, #80]	; 0x50
 8024a1e:	ea4f 2c17 	mov.w	ip, r7, lsr #8
 8024a22:	fb05 fa0a 	mul.w	sl, r5, sl
 8024a26:	f107 1701 	add.w	r7, r7, #65537	; 0x10001
 8024a2a:	f00c 1cff 	and.w	ip, ip, #16711935	; 0xff00ff
 8024a2e:	44bc      	add	ip, r7
 8024a30:	f50a 7780 	add.w	r7, sl, #256	; 0x100
 8024a34:	eb07 2a1a 	add.w	sl, r7, sl, lsr #8
 8024a38:	ea4f 2c1c 	mov.w	ip, ip, lsr #8
 8024a3c:	ea4f 2a1a 	mov.w	sl, sl, lsr #8
 8024a40:	f00c 1cff 	and.w	ip, ip, #16711935	; 0xff00ff
 8024a44:	f40a 4a7f 	and.w	sl, sl, #65280	; 0xff00
 8024a48:	ea4c 050a 	orr.w	r5, ip, sl
 8024a4c:	950d      	str	r5, [sp, #52]	; 0x34
 8024a4e:	9d11      	ldr	r5, [sp, #68]	; 0x44
 8024a50:	2dff      	cmp	r5, #255	; 0xff
 8024a52:	d020      	beq.n	8024a96 <_ZN8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x5ee>
 8024a54:	9d09      	ldr	r5, [sp, #36]	; 0x24
 8024a56:	f005 17ff 	and.w	r7, r5, #16711935	; 0xff00ff
 8024a5a:	9d11      	ldr	r5, [sp, #68]	; 0x44
 8024a5c:	436f      	muls	r7, r5
 8024a5e:	9d09      	ldr	r5, [sp, #36]	; 0x24
 8024a60:	f405 4c7f 	and.w	ip, r5, #65280	; 0xff00
 8024a64:	9d11      	ldr	r5, [sp, #68]	; 0x44
 8024a66:	fb05 fa0c 	mul.w	sl, r5, ip
 8024a6a:	ea4f 2c17 	mov.w	ip, r7, lsr #8
 8024a6e:	f00c 1cff 	and.w	ip, ip, #16711935	; 0xff00ff
 8024a72:	f107 1701 	add.w	r7, r7, #65537	; 0x10001
 8024a76:	44bc      	add	ip, r7
 8024a78:	f50a 7780 	add.w	r7, sl, #256	; 0x100
 8024a7c:	eb07 2a1a 	add.w	sl, r7, sl, lsr #8
 8024a80:	ea4f 2c1c 	mov.w	ip, ip, lsr #8
 8024a84:	ea4f 2a1a 	mov.w	sl, sl, lsr #8
 8024a88:	f00c 1cff 	and.w	ip, ip, #16711935	; 0xff00ff
 8024a8c:	f40a 4a7f 	and.w	sl, sl, #65280	; 0xff00
 8024a90:	ea4c 050a 	orr.w	r5, ip, sl
 8024a94:	9509      	str	r5, [sp, #36]	; 0x24
 8024a96:	9d15      	ldr	r5, [sp, #84]	; 0x54
 8024a98:	2dff      	cmp	r5, #255	; 0xff
 8024a9a:	d020      	beq.n	8024ade <_ZN8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x636>
 8024a9c:	9d0e      	ldr	r5, [sp, #56]	; 0x38
 8024a9e:	f005 17ff 	and.w	r7, r5, #16711935	; 0xff00ff
 8024aa2:	9d15      	ldr	r5, [sp, #84]	; 0x54
 8024aa4:	436f      	muls	r7, r5
 8024aa6:	9d0e      	ldr	r5, [sp, #56]	; 0x38
 8024aa8:	f405 4a7f 	and.w	sl, r5, #65280	; 0xff00
 8024aac:	9d15      	ldr	r5, [sp, #84]	; 0x54
 8024aae:	ea4f 2c17 	mov.w	ip, r7, lsr #8
 8024ab2:	fb05 fa0a 	mul.w	sl, r5, sl
 8024ab6:	f107 1701 	add.w	r7, r7, #65537	; 0x10001
 8024aba:	f00c 1cff 	and.w	ip, ip, #16711935	; 0xff00ff
 8024abe:	44bc      	add	ip, r7
 8024ac0:	f50a 7780 	add.w	r7, sl, #256	; 0x100
 8024ac4:	eb07 2a1a 	add.w	sl, r7, sl, lsr #8
 8024ac8:	ea4f 2c1c 	mov.w	ip, ip, lsr #8
 8024acc:	ea4f 2a1a 	mov.w	sl, sl, lsr #8
 8024ad0:	f00c 1cff 	and.w	ip, ip, #16711935	; 0xff00ff
 8024ad4:	f40a 4a7f 	and.w	sl, sl, #65280	; 0xff00
 8024ad8:	ea4c 050a 	orr.w	r5, ip, sl
 8024adc:	950e      	str	r5, [sp, #56]	; 0x38
 8024ade:	9d0d      	ldr	r5, [sp, #52]	; 0x34
 8024ae0:	f005 17ff 	and.w	r7, r5, #16711935	; 0xff00ff
 8024ae4:	9d09      	ldr	r5, [sp, #36]	; 0x24
 8024ae6:	f003 1cff 	and.w	ip, r3, #16711935	; 0xff00ff
 8024aea:	fb0e f707 	mul.w	r7, lr, r7
 8024aee:	fb01 770c 	mla	r7, r1, ip, r7
 8024af2:	f005 1cff 	and.w	ip, r5, #16711935	; 0xff00ff
 8024af6:	9d0e      	ldr	r5, [sp, #56]	; 0x38
 8024af8:	fb00 770c 	mla	r7, r0, ip, r7
 8024afc:	f005 1cff 	and.w	ip, r5, #16711935	; 0xff00ff
 8024b00:	9d0d      	ldr	r5, [sp, #52]	; 0x34
 8024b02:	fb09 770c 	mla	r7, r9, ip, r7
 8024b06:	f405 4c7f 	and.w	ip, r5, #65280	; 0xff00
 8024b0a:	fb0e fe0c 	mul.w	lr, lr, ip
 8024b0e:	f403 437f 	and.w	r3, r3, #65280	; 0xff00
 8024b12:	fb01 e303 	mla	r3, r1, r3, lr
 8024b16:	9909      	ldr	r1, [sp, #36]	; 0x24
 8024b18:	f401 4a7f 	and.w	sl, r1, #65280	; 0xff00
 8024b1c:	990e      	ldr	r1, [sp, #56]	; 0x38
 8024b1e:	fb00 330a 	mla	r3, r0, sl, r3
 8024b22:	f401 4c7f 	and.w	ip, r1, #65280	; 0xff00
 8024b26:	fb09 3c0c 	mla	ip, r9, ip, r3
 8024b2a:	0a3f      	lsrs	r7, r7, #8
 8024b2c:	ea4f 2c1c 	mov.w	ip, ip, lsr #8
 8024b30:	f007 17ff 	and.w	r7, r7, #16711935	; 0xff00ff
 8024b34:	f40c 4c7f 	and.w	ip, ip, #65280	; 0xff00
 8024b38:	ea47 070c 	orr.w	r7, r7, ip
 8024b3c:	2aff      	cmp	r2, #255	; 0xff
 8024b3e:	ea4f 2317 	mov.w	r3, r7, lsr #8
 8024b42:	d11e      	bne.n	8024b82 <_ZN8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x6da>
 8024b44:	097a      	lsrs	r2, r7, #5
 8024b46:	f423 63ff 	bic.w	r3, r3, #2040	; 0x7f8
 8024b4a:	f402 62fc 	and.w	r2, r2, #2016	; 0x7e0
 8024b4e:	f023 0307 	bic.w	r3, r3, #7
 8024b52:	4313      	orrs	r3, r2
 8024b54:	f3c7 07c4 	ubfx	r7, r7, #3, #5
 8024b58:	431f      	orrs	r7, r3
 8024b5a:	f8a8 7000 	strh.w	r7, [r8]
 8024b5e:	9b27      	ldr	r3, [sp, #156]	; 0x9c
 8024b60:	441c      	add	r4, r3
 8024b62:	9b28      	ldr	r3, [sp, #160]	; 0xa0
 8024b64:	f108 0802 	add.w	r8, r8, #2
 8024b68:	441e      	add	r6, r3
 8024b6a:	f10b 3bff 	add.w	fp, fp, #4294967295
 8024b6e:	e644      	b.n	80247fa <_ZN8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x352>
 8024b70:	2800      	cmp	r0, #0
 8024b72:	f43f af0b 	beq.w	802498c <_ZN8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x4e4>
 8024b76:	f851 1027 	ldr.w	r1, [r1, r7, lsl #2]
 8024b7a:	9109      	str	r1, [sp, #36]	; 0x24
 8024b7c:	0e09      	lsrs	r1, r1, #24
 8024b7e:	9111      	str	r1, [sp, #68]	; 0x44
 8024b80:	e704      	b.n	802498c <_ZN8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x4e4>
 8024b82:	f8b8 1000 	ldrh.w	r1, [r8]
 8024b86:	43d2      	mvns	r2, r2
 8024b88:	ea4f 2c21 	mov.w	ip, r1, asr #8
 8024b8c:	fa5f fe82 	uxtb.w	lr, r2
 8024b90:	f00c 0cf8 	and.w	ip, ip, #248	; 0xf8
 8024b94:	fb0c fc0e 	mul.w	ip, ip, lr
 8024b98:	10c8      	asrs	r0, r1, #3
 8024b9a:	00ca      	lsls	r2, r1, #3
 8024b9c:	f10c 0101 	add.w	r1, ip, #1
 8024ba0:	eb01 2c1c 	add.w	ip, r1, ip, lsr #8
 8024ba4:	0c39      	lsrs	r1, r7, #16
 8024ba6:	eb01 2c1c 	add.w	ip, r1, ip, lsr #8
 8024baa:	f000 00fc 	and.w	r0, r0, #252	; 0xfc
 8024bae:	4911      	ldr	r1, [pc, #68]	; (8024bf4 <_ZN8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x74c>)
 8024bb0:	fb00 f00e 	mul.w	r0, r0, lr
 8024bb4:	fa5f fc8c 	uxtb.w	ip, ip
 8024bb8:	ea01 2c0c 	and.w	ip, r1, ip, lsl #8
 8024bbc:	b2d2      	uxtb	r2, r2
 8024bbe:	1c41      	adds	r1, r0, #1
 8024bc0:	fb02 f20e 	mul.w	r2, r2, lr
 8024bc4:	eb01 2010 	add.w	r0, r1, r0, lsr #8
 8024bc8:	eb03 2010 	add.w	r0, r3, r0, lsr #8
 8024bcc:	1c51      	adds	r1, r2, #1
 8024bce:	00c0      	lsls	r0, r0, #3
 8024bd0:	eb01 2212 	add.w	r2, r1, r2, lsr #8
 8024bd4:	f400 60fc 	and.w	r0, r0, #2016	; 0x7e0
 8024bd8:	eb07 2712 	add.w	r7, r7, r2, lsr #8
 8024bdc:	ea4c 0c00 	orr.w	ip, ip, r0
 8024be0:	f3c7 07c4 	ubfx	r7, r7, #3, #5
 8024be4:	ea47 0c0c 	orr.w	ip, r7, ip
 8024be8:	f8a8 c000 	strh.w	ip, [r8]
 8024bec:	e7b7      	b.n	8024b5e <_ZN8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x6b6>
 8024bee:	b01b      	add	sp, #108	; 0x6c
 8024bf0:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
 8024bf4:	fffff800 	.word	0xfffff800

08024bf8 <_ZNK8touchgfx8LCD16bpp41TextureMapper_A4_BilinearInterpolation_GA16writePixelOnEdgeEPtPKtsssiihhh>:
 8024bf8:	e92d 47f0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, lr}
 8024bfc:	e9dd 050a 	ldrd	r0, r5, [sp, #40]	; 0x28
 8024c00:	2d00      	cmp	r5, #0
 8024c02:	f9bd 8020 	ldrsh.w	r8, [sp, #32]
 8024c06:	f9bd 9024 	ldrsh.w	r9, [sp, #36]	; 0x24
 8024c0a:	f89d 7030 	ldrb.w	r7, [sp, #48]	; 0x30
 8024c0e:	f89d c034 	ldrb.w	ip, [sp, #52]	; 0x34
 8024c12:	fb05 0e03 	mla	lr, r5, r3, r0
 8024c16:	f2c0 808c 	blt.w	8024d32 <_ZNK8touchgfx8LCD16bpp41TextureMapper_A4_BilinearInterpolation_GA16writePixelOnEdgeEPtPKtsssiihhh+0x13a>
 8024c1a:	45a9      	cmp	r9, r5
 8024c1c:	f340 8089 	ble.w	8024d32 <_ZNK8touchgfx8LCD16bpp41TextureMapper_A4_BilinearInterpolation_GA16writePixelOnEdgeEPtPKtsssiihhh+0x13a>
 8024c20:	2800      	cmp	r0, #0
 8024c22:	f2c0 8084 	blt.w	8024d2e <_ZNK8touchgfx8LCD16bpp41TextureMapper_A4_BilinearInterpolation_GA16writePixelOnEdgeEPtPKtsssiihhh+0x136>
 8024c26:	4580      	cmp	r8, r0
 8024c28:	f340 8081 	ble.w	8024d2e <_ZNK8touchgfx8LCD16bpp41TextureMapper_A4_BilinearInterpolation_GA16writePixelOnEdgeEPtPKtsssiihhh+0x136>
 8024c2c:	ea4f 045e 	mov.w	r4, lr, lsr #1
 8024c30:	f01e 0f01 	tst.w	lr, #1
 8024c34:	5d16      	ldrb	r6, [r2, r4]
 8024c36:	bf0c      	ite	eq
 8024c38:	f006 060f 	andeq.w	r6, r6, #15
 8024c3c:	1136      	asrne	r6, r6, #4
 8024c3e:	eb06 1606 	add.w	r6, r6, r6, lsl #4
 8024c42:	b2f6      	uxtb	r6, r6
 8024c44:	1c44      	adds	r4, r0, #1
 8024c46:	d477      	bmi.n	8024d38 <_ZNK8touchgfx8LCD16bpp41TextureMapper_A4_BilinearInterpolation_GA16writePixelOnEdgeEPtPKtsssiihhh+0x140>
 8024c48:	45a0      	cmp	r8, r4
 8024c4a:	dd75      	ble.n	8024d38 <_ZNK8touchgfx8LCD16bpp41TextureMapper_A4_BilinearInterpolation_GA16writePixelOnEdgeEPtPKtsssiihhh+0x140>
 8024c4c:	2f00      	cmp	r7, #0
 8024c4e:	d075      	beq.n	8024d3c <_ZNK8touchgfx8LCD16bpp41TextureMapper_A4_BilinearInterpolation_GA16writePixelOnEdgeEPtPKtsssiihhh+0x144>
 8024c50:	f10e 0a01 	add.w	sl, lr, #1
 8024c54:	ea4f 045a 	mov.w	r4, sl, lsr #1
 8024c58:	f01a 0f01 	tst.w	sl, #1
 8024c5c:	5d14      	ldrb	r4, [r2, r4]
 8024c5e:	bf0c      	ite	eq
 8024c60:	f004 040f 	andeq.w	r4, r4, #15
 8024c64:	1124      	asrne	r4, r4, #4
 8024c66:	eb04 1404 	add.w	r4, r4, r4, lsl #4
 8024c6a:	b2e4      	uxtb	r4, r4
 8024c6c:	3501      	adds	r5, #1
 8024c6e:	d469      	bmi.n	8024d44 <_ZNK8touchgfx8LCD16bpp41TextureMapper_A4_BilinearInterpolation_GA16writePixelOnEdgeEPtPKtsssiihhh+0x14c>
 8024c70:	45a9      	cmp	r9, r5
 8024c72:	dd67      	ble.n	8024d44 <_ZNK8touchgfx8LCD16bpp41TextureMapper_A4_BilinearInterpolation_GA16writePixelOnEdgeEPtPKtsssiihhh+0x14c>
 8024c74:	f1bc 0f00 	cmp.w	ip, #0
 8024c78:	d067      	beq.n	8024d4a <_ZNK8touchgfx8LCD16bpp41TextureMapper_A4_BilinearInterpolation_GA16writePixelOnEdgeEPtPKtsssiihhh+0x152>
 8024c7a:	2800      	cmp	r0, #0
 8024c7c:	db60      	blt.n	8024d40 <_ZNK8touchgfx8LCD16bpp41TextureMapper_A4_BilinearInterpolation_GA16writePixelOnEdgeEPtPKtsssiihhh+0x148>
 8024c7e:	4580      	cmp	r8, r0
 8024c80:	dd5e      	ble.n	8024d40 <_ZNK8touchgfx8LCD16bpp41TextureMapper_A4_BilinearInterpolation_GA16writePixelOnEdgeEPtPKtsssiihhh+0x148>
 8024c82:	eb03 090e 	add.w	r9, r3, lr
 8024c86:	ea4f 0559 	mov.w	r5, r9, lsr #1
 8024c8a:	f019 0f01 	tst.w	r9, #1
 8024c8e:	5d55      	ldrb	r5, [r2, r5]
 8024c90:	bf0c      	ite	eq
 8024c92:	f005 050f 	andeq.w	r5, r5, #15
 8024c96:	112d      	asrne	r5, r5, #4
 8024c98:	eb05 1505 	add.w	r5, r5, r5, lsl #4
 8024c9c:	b2ed      	uxtb	r5, r5
 8024c9e:	3001      	adds	r0, #1
 8024ca0:	d456      	bmi.n	8024d50 <_ZNK8touchgfx8LCD16bpp41TextureMapper_A4_BilinearInterpolation_GA16writePixelOnEdgeEPtPKtsssiihhh+0x158>
 8024ca2:	4580      	cmp	r8, r0
 8024ca4:	dd54      	ble.n	8024d50 <_ZNK8touchgfx8LCD16bpp41TextureMapper_A4_BilinearInterpolation_GA16writePixelOnEdgeEPtPKtsssiihhh+0x158>
 8024ca6:	2f00      	cmp	r7, #0
 8024ca8:	d054      	beq.n	8024d54 <_ZNK8touchgfx8LCD16bpp41TextureMapper_A4_BilinearInterpolation_GA16writePixelOnEdgeEPtPKtsssiihhh+0x15c>
 8024caa:	3301      	adds	r3, #1
 8024cac:	449e      	add	lr, r3
 8024cae:	ea4f 035e 	mov.w	r3, lr, lsr #1
 8024cb2:	f01e 0f01 	tst.w	lr, #1
 8024cb6:	5cd0      	ldrb	r0, [r2, r3]
 8024cb8:	bf0c      	ite	eq
 8024cba:	f000 000f 	andeq.w	r0, r0, #15
 8024cbe:	1100      	asrne	r0, r0, #4
 8024cc0:	eb00 1000 	add.w	r0, r0, r0, lsl #4
 8024cc4:	b2c3      	uxtb	r3, r0
 8024cc6:	b2ba      	uxth	r2, r7
 8024cc8:	fa1f fc8c 	uxth.w	ip, ip
 8024ccc:	fb02 f00c 	mul.w	r0, r2, ip
 8024cd0:	ebc0 1c0c 	rsb	ip, r0, ip, lsl #4
 8024cd4:	0112      	lsls	r2, r2, #4
 8024cd6:	fa1f fc8c 	uxth.w	ip, ip
 8024cda:	f5c2 7780 	rsb	r7, r2, #256	; 0x100
 8024cde:	1a12      	subs	r2, r2, r0
 8024ce0:	eba7 070c 	sub.w	r7, r7, ip
 8024ce4:	b292      	uxth	r2, r2
 8024ce6:	b2bf      	uxth	r7, r7
 8024ce8:	4362      	muls	r2, r4
 8024cea:	fb06 2207 	mla	r2, r6, r7, r2
 8024cee:	fb0c 2505 	mla	r5, ip, r5, r2
 8024cf2:	fb00 5303 	mla	r3, r0, r3, r5
 8024cf6:	f3c3 2307 	ubfx	r3, r3, #8, #8
 8024cfa:	b1b3      	cbz	r3, 8024d2a <_ZNK8touchgfx8LCD16bpp41TextureMapper_A4_BilinearInterpolation_GA16writePixelOnEdgeEPtPKtsssiihhh+0x132>
 8024cfc:	f89d 2038 	ldrb.w	r2, [sp, #56]	; 0x38
 8024d00:	435a      	muls	r2, r3
 8024d02:	1c53      	adds	r3, r2, #1
 8024d04:	eb03 2312 	add.w	r3, r3, r2, lsr #8
 8024d08:	4a2d      	ldr	r2, [pc, #180]	; (8024dc0 <_ZNK8touchgfx8LCD16bpp41TextureMapper_A4_BilinearInterpolation_GA16writePixelOnEdgeEPtPKtsssiihhh+0x1c8>)
 8024d0a:	121b      	asrs	r3, r3, #8
 8024d0c:	6812      	ldr	r2, [r2, #0]
 8024d0e:	2bff      	cmp	r3, #255	; 0xff
 8024d10:	ea4f 2612 	mov.w	r6, r2, lsr #8
 8024d14:	d120      	bne.n	8024d58 <_ZNK8touchgfx8LCD16bpp41TextureMapper_A4_BilinearInterpolation_GA16writePixelOnEdgeEPtPKtsssiihhh+0x160>
 8024d16:	4b2b      	ldr	r3, [pc, #172]	; (8024dc4 <_ZNK8touchgfx8LCD16bpp41TextureMapper_A4_BilinearInterpolation_GA16writePixelOnEdgeEPtPKtsssiihhh+0x1cc>)
 8024d18:	0950      	lsrs	r0, r2, #5
 8024d1a:	f400 60fc 	and.w	r0, r0, #2016	; 0x7e0
 8024d1e:	4033      	ands	r3, r6
 8024d20:	4318      	orrs	r0, r3
 8024d22:	f3c2 02c4 	ubfx	r2, r2, #3, #5
 8024d26:	4302      	orrs	r2, r0
 8024d28:	800a      	strh	r2, [r1, #0]
 8024d2a:	e8bd 87f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, pc}
 8024d2e:	2600      	movs	r6, #0
 8024d30:	e788      	b.n	8024c44 <_ZNK8touchgfx8LCD16bpp41TextureMapper_A4_BilinearInterpolation_GA16writePixelOnEdgeEPtPKtsssiihhh+0x4c>
 8024d32:	2400      	movs	r4, #0
 8024d34:	4626      	mov	r6, r4
 8024d36:	e799      	b.n	8024c6c <_ZNK8touchgfx8LCD16bpp41TextureMapper_A4_BilinearInterpolation_GA16writePixelOnEdgeEPtPKtsssiihhh+0x74>
 8024d38:	2400      	movs	r4, #0
 8024d3a:	e797      	b.n	8024c6c <_ZNK8touchgfx8LCD16bpp41TextureMapper_A4_BilinearInterpolation_GA16writePixelOnEdgeEPtPKtsssiihhh+0x74>
 8024d3c:	463c      	mov	r4, r7
 8024d3e:	e795      	b.n	8024c6c <_ZNK8touchgfx8LCD16bpp41TextureMapper_A4_BilinearInterpolation_GA16writePixelOnEdgeEPtPKtsssiihhh+0x74>
 8024d40:	2500      	movs	r5, #0
 8024d42:	e7ac      	b.n	8024c9e <_ZNK8touchgfx8LCD16bpp41TextureMapper_A4_BilinearInterpolation_GA16writePixelOnEdgeEPtPKtsssiihhh+0xa6>
 8024d44:	2300      	movs	r3, #0
 8024d46:	461d      	mov	r5, r3
 8024d48:	e7bd      	b.n	8024cc6 <_ZNK8touchgfx8LCD16bpp41TextureMapper_A4_BilinearInterpolation_GA16writePixelOnEdgeEPtPKtsssiihhh+0xce>
 8024d4a:	4663      	mov	r3, ip
 8024d4c:	4665      	mov	r5, ip
 8024d4e:	e7ba      	b.n	8024cc6 <_ZNK8touchgfx8LCD16bpp41TextureMapper_A4_BilinearInterpolation_GA16writePixelOnEdgeEPtPKtsssiihhh+0xce>
 8024d50:	2300      	movs	r3, #0
 8024d52:	e7b8      	b.n	8024cc6 <_ZNK8touchgfx8LCD16bpp41TextureMapper_A4_BilinearInterpolation_GA16writePixelOnEdgeEPtPKtsssiihhh+0xce>
 8024d54:	463b      	mov	r3, r7
 8024d56:	e7b6      	b.n	8024cc6 <_ZNK8touchgfx8LCD16bpp41TextureMapper_A4_BilinearInterpolation_GA16writePixelOnEdgeEPtPKtsssiihhh+0xce>
 8024d58:	880d      	ldrh	r5, [r1, #0]
 8024d5a:	b29f      	uxth	r7, r3
 8024d5c:	122c      	asrs	r4, r5, #8
 8024d5e:	f3c2 4007 	ubfx	r0, r2, #16, #8
 8024d62:	43db      	mvns	r3, r3
 8024d64:	b2db      	uxtb	r3, r3
 8024d66:	fb10 f007 	smulbb	r0, r0, r7
 8024d6a:	f004 04f8 	and.w	r4, r4, #248	; 0xf8
 8024d6e:	fb04 0403 	mla	r4, r4, r3, r0
 8024d72:	b2f6      	uxtb	r6, r6
 8024d74:	10e8      	asrs	r0, r5, #3
 8024d76:	b2d2      	uxtb	r2, r2
 8024d78:	00ed      	lsls	r5, r5, #3
 8024d7a:	f000 00fc 	and.w	r0, r0, #252	; 0xfc
 8024d7e:	fb12 f207 	smulbb	r2, r2, r7
 8024d82:	fb16 f607 	smulbb	r6, r6, r7
 8024d86:	b2ed      	uxtb	r5, r5
 8024d88:	b2a4      	uxth	r4, r4
 8024d8a:	fb00 6603 	mla	r6, r0, r3, r6
 8024d8e:	fb05 2303 	mla	r3, r5, r3, r2
 8024d92:	b29a      	uxth	r2, r3
 8024d94:	1c63      	adds	r3, r4, #1
 8024d96:	b2b0      	uxth	r0, r6
 8024d98:	eb03 2414 	add.w	r4, r3, r4, lsr #8
 8024d9c:	1c53      	adds	r3, r2, #1
 8024d9e:	eb03 2312 	add.w	r3, r3, r2, lsr #8
 8024da2:	1c42      	adds	r2, r0, #1
 8024da4:	eb02 2010 	add.w	r0, r2, r0, lsr #8
 8024da8:	f404 4478 	and.w	r4, r4, #63488	; 0xf800
 8024dac:	f3c3 23c4 	ubfx	r3, r3, #11, #5
 8024db0:	0940      	lsrs	r0, r0, #5
 8024db2:	4323      	orrs	r3, r4
 8024db4:	f400 60fc 	and.w	r0, r0, #2016	; 0x7e0
 8024db8:	4303      	orrs	r3, r0
 8024dba:	800b      	strh	r3, [r1, #0]
 8024dbc:	e7b5      	b.n	8024d2a <_ZNK8touchgfx8LCD16bpp41TextureMapper_A4_BilinearInterpolation_GA16writePixelOnEdgeEPtPKtsssiihhh+0x132>
 8024dbe:	bf00      	nop
 8024dc0:	20012f34 	.word	0x20012f34
 8024dc4:	00fff800 	.word	0x00fff800

08024dc8 <_ZN8touchgfx8LCD16bpp41TextureMapper_A4_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff>:
 8024dc8:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 8024dcc:	b097      	sub	sp, #92	; 0x5c
 8024dce:	e9dd 4621 	ldrd	r4, r6, [sp, #132]	; 0x84
 8024dd2:	9214      	str	r2, [sp, #80]	; 0x50
 8024dd4:	9309      	str	r3, [sp, #36]	; 0x24
 8024dd6:	9a25      	ldr	r2, [sp, #148]	; 0x94
 8024dd8:	f89d 30a4 	ldrb.w	r3, [sp, #164]	; 0xa4
 8024ddc:	910d      	str	r1, [sp, #52]	; 0x34
 8024dde:	930f      	str	r3, [sp, #60]	; 0x3c
 8024de0:	e9dd 1326 	ldrd	r1, r3, [sp, #152]	; 0x98
 8024de4:	9015      	str	r0, [sp, #84]	; 0x54
 8024de6:	6850      	ldr	r0, [r2, #4]
 8024de8:	6812      	ldr	r2, [r2, #0]
 8024dea:	fb00 1303 	mla	r3, r0, r3, r1
 8024dee:	eb02 0943 	add.w	r9, r2, r3, lsl #1
 8024df2:	9b28      	ldr	r3, [sp, #160]	; 0xa0
 8024df4:	689b      	ldr	r3, [r3, #8]
 8024df6:	3301      	adds	r3, #1
 8024df8:	f023 0301 	bic.w	r3, r3, #1
 8024dfc:	930a      	str	r3, [sp, #40]	; 0x28
 8024dfe:	9b28      	ldr	r3, [sp, #160]	; 0xa0
 8024e00:	681f      	ldr	r7, [r3, #0]
 8024e02:	9b0d      	ldr	r3, [sp, #52]	; 0x34
 8024e04:	2b00      	cmp	r3, #0
 8024e06:	dc03      	bgt.n	8024e10 <_ZN8touchgfx8LCD16bpp41TextureMapper_A4_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x48>
 8024e08:	9b14      	ldr	r3, [sp, #80]	; 0x50
 8024e0a:	2b00      	cmp	r3, #0
 8024e0c:	f340 8287 	ble.w	802531e <_ZN8touchgfx8LCD16bpp41TextureMapper_A4_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x556>
 8024e10:	9b28      	ldr	r3, [sp, #160]	; 0xa0
 8024e12:	f9b3 1008 	ldrsh.w	r1, [r3, #8]
 8024e16:	f9b3 200c 	ldrsh.w	r2, [r3, #12]
 8024e1a:	1e48      	subs	r0, r1, #1
 8024e1c:	f102 3cff 	add.w	ip, r2, #4294967295
 8024e20:	9b09      	ldr	r3, [sp, #36]	; 0x24
 8024e22:	2b00      	cmp	r3, #0
 8024e24:	f340 80c4 	ble.w	8024fb0 <_ZN8touchgfx8LCD16bpp41TextureMapper_A4_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x1e8>
 8024e28:	ea5f 4e24 	movs.w	lr, r4, asr #16
 8024e2c:	ea4f 4326 	mov.w	r3, r6, asr #16
 8024e30:	d406      	bmi.n	8024e40 <_ZN8touchgfx8LCD16bpp41TextureMapper_A4_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x78>
 8024e32:	4586      	cmp	lr, r0
 8024e34:	da04      	bge.n	8024e40 <_ZN8touchgfx8LCD16bpp41TextureMapper_A4_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x78>
 8024e36:	2b00      	cmp	r3, #0
 8024e38:	db02      	blt.n	8024e40 <_ZN8touchgfx8LCD16bpp41TextureMapper_A4_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x78>
 8024e3a:	4563      	cmp	r3, ip
 8024e3c:	f2c0 80b9 	blt.w	8024fb2 <_ZN8touchgfx8LCD16bpp41TextureMapper_A4_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x1ea>
 8024e40:	f11e 0e01 	adds.w	lr, lr, #1
 8024e44:	f100 80aa 	bmi.w	8024f9c <_ZN8touchgfx8LCD16bpp41TextureMapper_A4_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x1d4>
 8024e48:	4571      	cmp	r1, lr
 8024e4a:	f2c0 80a7 	blt.w	8024f9c <_ZN8touchgfx8LCD16bpp41TextureMapper_A4_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x1d4>
 8024e4e:	3301      	adds	r3, #1
 8024e50:	f100 80a4 	bmi.w	8024f9c <_ZN8touchgfx8LCD16bpp41TextureMapper_A4_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x1d4>
 8024e54:	429a      	cmp	r2, r3
 8024e56:	f2c0 80a1 	blt.w	8024f9c <_ZN8touchgfx8LCD16bpp41TextureMapper_A4_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x1d4>
 8024e5a:	9b09      	ldr	r3, [sp, #36]	; 0x24
 8024e5c:	f9bd a028 	ldrsh.w	sl, [sp, #40]	; 0x28
 8024e60:	930e      	str	r3, [sp, #56]	; 0x38
 8024e62:	46c8      	mov	r8, r9
 8024e64:	9b0e      	ldr	r3, [sp, #56]	; 0x38
 8024e66:	2b00      	cmp	r3, #0
 8024e68:	f340 80c3 	ble.w	8024ff2 <_ZN8touchgfx8LCD16bpp41TextureMapper_A4_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x22a>
 8024e6c:	9b28      	ldr	r3, [sp, #160]	; 0xa0
 8024e6e:	e9d3 ce02 	ldrd	ip, lr, [r3, #8]
 8024e72:	1423      	asrs	r3, r4, #16
 8024e74:	ea4f 4026 	mov.w	r0, r6, asr #16
 8024e78:	f3c4 3203 	ubfx	r2, r4, #12, #4
 8024e7c:	f3c6 3103 	ubfx	r1, r6, #12, #4
 8024e80:	f100 814d 	bmi.w	802511e <_ZN8touchgfx8LCD16bpp41TextureMapper_A4_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x356>
 8024e84:	f10c 3bff 	add.w	fp, ip, #4294967295
 8024e88:	455b      	cmp	r3, fp
 8024e8a:	f280 8148 	bge.w	802511e <_ZN8touchgfx8LCD16bpp41TextureMapper_A4_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x356>
 8024e8e:	2800      	cmp	r0, #0
 8024e90:	f2c0 8145 	blt.w	802511e <_ZN8touchgfx8LCD16bpp41TextureMapper_A4_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x356>
 8024e94:	f10e 3bff 	add.w	fp, lr, #4294967295
 8024e98:	4558      	cmp	r0, fp
 8024e9a:	f280 8140 	bge.w	802511e <_ZN8touchgfx8LCD16bpp41TextureMapper_A4_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x356>
 8024e9e:	9d0a      	ldr	r5, [sp, #40]	; 0x28
 8024ea0:	fb00 3305 	mla	r3, r0, r5, r3
 8024ea4:	0858      	lsrs	r0, r3, #1
 8024ea6:	07dd      	lsls	r5, r3, #31
 8024ea8:	f817 c000 	ldrb.w	ip, [r7, r0]
 8024eac:	bf54      	ite	pl
 8024eae:	f00c 0c0f 	andpl.w	ip, ip, #15
 8024eb2:	ea4f 1c2c 	movmi.w	ip, ip, asr #4
 8024eb6:	eb0c 1c0c 	add.w	ip, ip, ip, lsl #4
 8024eba:	fa5f fc8c 	uxtb.w	ip, ip
 8024ebe:	2a00      	cmp	r2, #0
 8024ec0:	f000 80db 	beq.w	802507a <_ZN8touchgfx8LCD16bpp41TextureMapper_A4_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x2b2>
 8024ec4:	1c58      	adds	r0, r3, #1
 8024ec6:	ea4f 0e50 	mov.w	lr, r0, lsr #1
 8024eca:	07c0      	lsls	r0, r0, #31
 8024ecc:	f817 e00e 	ldrb.w	lr, [r7, lr]
 8024ed0:	bf54      	ite	pl
 8024ed2:	f00e 0e0f 	andpl.w	lr, lr, #15
 8024ed6:	ea4f 1e2e 	movmi.w	lr, lr, asr #4
 8024eda:	eb0e 1e0e 	add.w	lr, lr, lr, lsl #4
 8024ede:	fa5f f08e 	uxtb.w	r0, lr
 8024ee2:	9010      	str	r0, [sp, #64]	; 0x40
 8024ee4:	b1c9      	cbz	r1, 8024f1a <_ZN8touchgfx8LCD16bpp41TextureMapper_A4_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x152>
 8024ee6:	4453      	add	r3, sl
 8024ee8:	0858      	lsrs	r0, r3, #1
 8024eea:	07dd      	lsls	r5, r3, #31
 8024eec:	5c38      	ldrb	r0, [r7, r0]
 8024eee:	bf54      	ite	pl
 8024ef0:	f000 000f 	andpl.w	r0, r0, #15
 8024ef4:	1100      	asrmi	r0, r0, #4
 8024ef6:	eb00 1000 	add.w	r0, r0, r0, lsl #4
 8024efa:	3301      	adds	r3, #1
 8024efc:	b2c0      	uxtb	r0, r0
 8024efe:	900b      	str	r0, [sp, #44]	; 0x2c
 8024f00:	0858      	lsrs	r0, r3, #1
 8024f02:	07dd      	lsls	r5, r3, #31
 8024f04:	f817 e000 	ldrb.w	lr, [r7, r0]
 8024f08:	bf54      	ite	pl
 8024f0a:	f00e 030f 	andpl.w	r3, lr, #15
 8024f0e:	ea4f 132e 	movmi.w	r3, lr, asr #4
 8024f12:	eb03 1303 	add.w	r3, r3, r3, lsl #4
 8024f16:	b2db      	uxtb	r3, r3
 8024f18:	9311      	str	r3, [sp, #68]	; 0x44
 8024f1a:	b292      	uxth	r2, r2
 8024f1c:	b289      	uxth	r1, r1
 8024f1e:	fb02 f301 	mul.w	r3, r2, r1
 8024f22:	ebc3 1101 	rsb	r1, r3, r1, lsl #4
 8024f26:	0112      	lsls	r2, r2, #4
 8024f28:	b289      	uxth	r1, r1
 8024f2a:	f5c2 7080 	rsb	r0, r2, #256	; 0x100
 8024f2e:	9d10      	ldr	r5, [sp, #64]	; 0x40
 8024f30:	1ad2      	subs	r2, r2, r3
 8024f32:	1a40      	subs	r0, r0, r1
 8024f34:	b292      	uxth	r2, r2
 8024f36:	436a      	muls	r2, r5
 8024f38:	b280      	uxth	r0, r0
 8024f3a:	fb0c 2c00 	mla	ip, ip, r0, r2
 8024f3e:	9a0b      	ldr	r2, [sp, #44]	; 0x2c
 8024f40:	fb01 c102 	mla	r1, r1, r2, ip
 8024f44:	9a11      	ldr	r2, [sp, #68]	; 0x44
 8024f46:	fb03 1302 	mla	r3, r3, r2, r1
 8024f4a:	f3c3 2307 	ubfx	r3, r3, #8, #8
 8024f4e:	b1db      	cbz	r3, 8024f88 <_ZN8touchgfx8LCD16bpp41TextureMapper_A4_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x1c0>
 8024f50:	9a0f      	ldr	r2, [sp, #60]	; 0x3c
 8024f52:	4353      	muls	r3, r2
 8024f54:	1c5a      	adds	r2, r3, #1
 8024f56:	eb02 2313 	add.w	r3, r2, r3, lsr #8
 8024f5a:	4ac6      	ldr	r2, [pc, #792]	; (8025274 <_ZN8touchgfx8LCD16bpp41TextureMapper_A4_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x4ac>)
 8024f5c:	121b      	asrs	r3, r3, #8
 8024f5e:	6812      	ldr	r2, [r2, #0]
 8024f60:	2bff      	cmp	r3, #255	; 0xff
 8024f62:	ea4f 2c12 	mov.w	ip, r2, lsr #8
 8024f66:	f040 8099 	bne.w	802509c <_ZN8touchgfx8LCD16bpp41TextureMapper_A4_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x2d4>
 8024f6a:	0953      	lsrs	r3, r2, #5
 8024f6c:	f42c 6cff 	bic.w	ip, ip, #2040	; 0x7f8
 8024f70:	f403 63fc 	and.w	r3, r3, #2016	; 0x7e0
 8024f74:	f02c 0c07 	bic.w	ip, ip, #7
 8024f78:	ea43 0c0c 	orr.w	ip, r3, ip
 8024f7c:	f3c2 02c4 	ubfx	r2, r2, #3, #5
 8024f80:	ea4c 0202 	orr.w	r2, ip, r2
 8024f84:	f8a8 2000 	strh.w	r2, [r8]
 8024f88:	9b23      	ldr	r3, [sp, #140]	; 0x8c
 8024f8a:	441c      	add	r4, r3
 8024f8c:	9b24      	ldr	r3, [sp, #144]	; 0x90
 8024f8e:	441e      	add	r6, r3
 8024f90:	9b0e      	ldr	r3, [sp, #56]	; 0x38
 8024f92:	3b01      	subs	r3, #1
 8024f94:	f108 0802 	add.w	r8, r8, #2
 8024f98:	930e      	str	r3, [sp, #56]	; 0x38
 8024f9a:	e763      	b.n	8024e64 <_ZN8touchgfx8LCD16bpp41TextureMapper_A4_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x9c>
 8024f9c:	9b23      	ldr	r3, [sp, #140]	; 0x8c
 8024f9e:	441c      	add	r4, r3
 8024fa0:	9b24      	ldr	r3, [sp, #144]	; 0x90
 8024fa2:	441e      	add	r6, r3
 8024fa4:	9b09      	ldr	r3, [sp, #36]	; 0x24
 8024fa6:	3b01      	subs	r3, #1
 8024fa8:	9309      	str	r3, [sp, #36]	; 0x24
 8024faa:	f109 0902 	add.w	r9, r9, #2
 8024fae:	e737      	b.n	8024e20 <_ZN8touchgfx8LCD16bpp41TextureMapper_A4_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x58>
 8024fb0:	d024      	beq.n	8024ffc <_ZN8touchgfx8LCD16bpp41TextureMapper_A4_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x234>
 8024fb2:	9b09      	ldr	r3, [sp, #36]	; 0x24
 8024fb4:	9823      	ldr	r0, [sp, #140]	; 0x8c
 8024fb6:	3b01      	subs	r3, #1
 8024fb8:	fb00 4003 	mla	r0, r0, r3, r4
 8024fbc:	1400      	asrs	r0, r0, #16
 8024fbe:	f53f af4c 	bmi.w	8024e5a <_ZN8touchgfx8LCD16bpp41TextureMapper_A4_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x92>
 8024fc2:	3901      	subs	r1, #1
 8024fc4:	4288      	cmp	r0, r1
 8024fc6:	f6bf af48 	bge.w	8024e5a <_ZN8touchgfx8LCD16bpp41TextureMapper_A4_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x92>
 8024fca:	9924      	ldr	r1, [sp, #144]	; 0x90
 8024fcc:	fb01 6303 	mla	r3, r1, r3, r6
 8024fd0:	141b      	asrs	r3, r3, #16
 8024fd2:	f53f af42 	bmi.w	8024e5a <_ZN8touchgfx8LCD16bpp41TextureMapper_A4_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x92>
 8024fd6:	3a01      	subs	r2, #1
 8024fd8:	4293      	cmp	r3, r2
 8024fda:	f6bf af3e 	bge.w	8024e5a <_ZN8touchgfx8LCD16bpp41TextureMapper_A4_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x92>
 8024fde:	f9bd 3028 	ldrsh.w	r3, [sp, #40]	; 0x28
 8024fe2:	f8dd b024 	ldr.w	fp, [sp, #36]	; 0x24
 8024fe6:	930e      	str	r3, [sp, #56]	; 0x38
 8024fe8:	46c8      	mov	r8, r9
 8024fea:	f1bb 0f00 	cmp.w	fp, #0
 8024fee:	f300 80b7 	bgt.w	8025160 <_ZN8touchgfx8LCD16bpp41TextureMapper_A4_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x398>
 8024ff2:	9b09      	ldr	r3, [sp, #36]	; 0x24
 8024ff4:	ea23 75e3 	bic.w	r5, r3, r3, asr #31
 8024ff8:	eb09 0945 	add.w	r9, r9, r5, lsl #1
 8024ffc:	9b0d      	ldr	r3, [sp, #52]	; 0x34
 8024ffe:	2b00      	cmp	r3, #0
 8025000:	f340 818d 	ble.w	802531e <_ZN8touchgfx8LCD16bpp41TextureMapper_A4_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x556>
 8025004:	ee30 0a04 	vadd.f32	s0, s0, s8
 8025008:	eeb7 7a00 	vmov.f32	s14, #112	; 0x3f800000  1.0
 802500c:	eec7 7a00 	vdiv.f32	s15, s14, s0
 8025010:	9b20      	ldr	r3, [sp, #128]	; 0x80
 8025012:	ee70 0aa4 	vadd.f32	s1, s1, s9
 8025016:	ee31 1a05 	vadd.f32	s2, s2, s10
 802501a:	ee20 7aa7 	vmul.f32	s14, s1, s15
 802501e:	eef0 6a62 	vmov.f32	s13, s5
 8025022:	ee61 7a27 	vmul.f32	s15, s2, s15
 8025026:	eefe 6ac8 	vcvt.s32.f32	s13, s13, #16
 802502a:	ee77 2a62 	vsub.f32	s5, s14, s5
 802502e:	ee16 4a90 	vmov	r4, s13
 8025032:	eefe 2ac8 	vcvt.s32.f32	s5, s5, #16
 8025036:	eef0 6a43 	vmov.f32	s13, s6
 802503a:	ee37 3ac3 	vsub.f32	s6, s15, s6
 802503e:	ee12 2a90 	vmov	r2, s5
 8025042:	eebe 3ac8 	vcvt.s32.f32	s6, s6, #16
 8025046:	fb92 f3f3 	sdiv	r3, r2, r3
 802504a:	ee13 2a10 	vmov	r2, s6
 802504e:	9323      	str	r3, [sp, #140]	; 0x8c
 8025050:	9b20      	ldr	r3, [sp, #128]	; 0x80
 8025052:	fb92 f3f3 	sdiv	r3, r2, r3
 8025056:	9324      	str	r3, [sp, #144]	; 0x90
 8025058:	9b0d      	ldr	r3, [sp, #52]	; 0x34
 802505a:	9a14      	ldr	r2, [sp, #80]	; 0x50
 802505c:	3b01      	subs	r3, #1
 802505e:	eefe 6ac8 	vcvt.s32.f32	s13, s13, #16
 8025062:	930d      	str	r3, [sp, #52]	; 0x34
 8025064:	9b20      	ldr	r3, [sp, #128]	; 0x80
 8025066:	bf08      	it	eq
 8025068:	4613      	moveq	r3, r2
 802506a:	ee16 6a90 	vmov	r6, s13
 802506e:	9309      	str	r3, [sp, #36]	; 0x24
 8025070:	eeb0 3a67 	vmov.f32	s6, s15
 8025074:	eef0 2a47 	vmov.f32	s5, s14
 8025078:	e6c3      	b.n	8024e02 <_ZN8touchgfx8LCD16bpp41TextureMapper_A4_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x3a>
 802507a:	2900      	cmp	r1, #0
 802507c:	f43f af4d 	beq.w	8024f1a <_ZN8touchgfx8LCD16bpp41TextureMapper_A4_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x152>
 8025080:	eb0a 0003 	add.w	r0, sl, r3
 8025084:	0843      	lsrs	r3, r0, #1
 8025086:	07c0      	lsls	r0, r0, #31
 8025088:	5cfb      	ldrb	r3, [r7, r3]
 802508a:	bf54      	ite	pl
 802508c:	f003 030f 	andpl.w	r3, r3, #15
 8025090:	111b      	asrmi	r3, r3, #4
 8025092:	eb03 1303 	add.w	r3, r3, r3, lsl #4
 8025096:	b2db      	uxtb	r3, r3
 8025098:	930b      	str	r3, [sp, #44]	; 0x2c
 802509a:	e73e      	b.n	8024f1a <_ZN8touchgfx8LCD16bpp41TextureMapper_A4_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x152>
 802509c:	f8b8 e000 	ldrh.w	lr, [r8]
 80250a0:	fa1f fb83 	uxth.w	fp, r3
 80250a4:	ea4f 202e 	mov.w	r0, lr, asr #8
 80250a8:	f3c2 4107 	ubfx	r1, r2, #16, #8
 80250ac:	43db      	mvns	r3, r3
 80250ae:	b2db      	uxtb	r3, r3
 80250b0:	fb11 f10b 	smulbb	r1, r1, fp
 80250b4:	f000 00f8 	and.w	r0, r0, #248	; 0xf8
 80250b8:	fb00 1003 	mla	r0, r0, r3, r1
 80250bc:	fa5f fc8c 	uxtb.w	ip, ip
 80250c0:	ea4f 01ee 	mov.w	r1, lr, asr #3
 80250c4:	b2d2      	uxtb	r2, r2
 80250c6:	ea4f 0ece 	mov.w	lr, lr, lsl #3
 80250ca:	b280      	uxth	r0, r0
 80250cc:	f001 01fc 	and.w	r1, r1, #252	; 0xfc
 80250d0:	fb1c fc0b 	smulbb	ip, ip, fp
 80250d4:	fa5f fe8e 	uxtb.w	lr, lr
 80250d8:	fb12 fb0b 	smulbb	fp, r2, fp
 80250dc:	fb01 cc03 	mla	ip, r1, r3, ip
 80250e0:	fb0e bb03 	mla	fp, lr, r3, fp
 80250e4:	1c43      	adds	r3, r0, #1
 80250e6:	fa1f fc8c 	uxth.w	ip, ip
 80250ea:	fa1f fb8b 	uxth.w	fp, fp
 80250ee:	eb03 2010 	add.w	r0, r3, r0, lsr #8
 80250f2:	f400 4378 	and.w	r3, r0, #63488	; 0xf800
 80250f6:	f10c 0101 	add.w	r1, ip, #1
 80250fa:	f10b 0001 	add.w	r0, fp, #1
 80250fe:	eb00 201b 	add.w	r0, r0, fp, lsr #8
 8025102:	eb01 2c1c 	add.w	ip, r1, ip, lsr #8
 8025106:	f3c0 20c4 	ubfx	r0, r0, #11, #5
 802510a:	ea4f 1c5c 	mov.w	ip, ip, lsr #5
 802510e:	4318      	orrs	r0, r3
 8025110:	f40c 6cfc 	and.w	ip, ip, #2016	; 0x7e0
 8025114:	ea40 000c 	orr.w	r0, r0, ip
 8025118:	f8a8 0000 	strh.w	r0, [r8]
 802511c:	e734      	b.n	8024f88 <_ZN8touchgfx8LCD16bpp41TextureMapper_A4_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x1c0>
 802511e:	f113 0b01 	adds.w	fp, r3, #1
 8025122:	f53f af31 	bmi.w	8024f88 <_ZN8touchgfx8LCD16bpp41TextureMapper_A4_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x1c0>
 8025126:	45dc      	cmp	ip, fp
 8025128:	f6ff af2e 	blt.w	8024f88 <_ZN8touchgfx8LCD16bpp41TextureMapper_A4_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x1c0>
 802512c:	f110 0b01 	adds.w	fp, r0, #1
 8025130:	f53f af2a 	bmi.w	8024f88 <_ZN8touchgfx8LCD16bpp41TextureMapper_A4_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x1c0>
 8025134:	45de      	cmp	lr, fp
 8025136:	f6ff af27 	blt.w	8024f88 <_ZN8touchgfx8LCD16bpp41TextureMapper_A4_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x1c0>
 802513a:	9d0f      	ldr	r5, [sp, #60]	; 0x3c
 802513c:	9302      	str	r3, [sp, #8]
 802513e:	fa0f f38e 	sxth.w	r3, lr
 8025142:	9301      	str	r3, [sp, #4]
 8025144:	fa0f f38c 	sxth.w	r3, ip
 8025148:	e9cd 0203 	strd	r0, r2, [sp, #12]
 802514c:	e9cd 1505 	strd	r1, r5, [sp, #20]
 8025150:	9300      	str	r3, [sp, #0]
 8025152:	463a      	mov	r2, r7
 8025154:	4653      	mov	r3, sl
 8025156:	4641      	mov	r1, r8
 8025158:	9815      	ldr	r0, [sp, #84]	; 0x54
 802515a:	f7ff fd4d 	bl	8024bf8 <_ZNK8touchgfx8LCD16bpp41TextureMapper_A4_BilinearInterpolation_GA16writePixelOnEdgeEPtPKtsssiihhh>
 802515e:	e713      	b.n	8024f88 <_ZN8touchgfx8LCD16bpp41TextureMapper_A4_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x1c0>
 8025160:	9d0a      	ldr	r5, [sp, #40]	; 0x28
 8025162:	1422      	asrs	r2, r4, #16
 8025164:	1433      	asrs	r3, r6, #16
 8025166:	fb05 2303 	mla	r3, r5, r3, r2
 802516a:	085a      	lsrs	r2, r3, #1
 802516c:	07dd      	lsls	r5, r3, #31
 802516e:	5cba      	ldrb	r2, [r7, r2]
 8025170:	bf54      	ite	pl
 8025172:	f002 020f 	andpl.w	r2, r2, #15
 8025176:	1112      	asrmi	r2, r2, #4
 8025178:	eb02 1202 	add.w	r2, r2, r2, lsl #4
 802517c:	f3c4 3103 	ubfx	r1, r4, #12, #4
 8025180:	f3c6 3003 	ubfx	r0, r6, #12, #4
 8025184:	b2d2      	uxtb	r2, r2
 8025186:	2900      	cmp	r1, #0
 8025188:	d076      	beq.n	8025278 <_ZN8touchgfx8LCD16bpp41TextureMapper_A4_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x4b0>
 802518a:	f103 0e01 	add.w	lr, r3, #1
 802518e:	ea4f 0c5e 	mov.w	ip, lr, lsr #1
 8025192:	f01e 0f01 	tst.w	lr, #1
 8025196:	f817 c00c 	ldrb.w	ip, [r7, ip]
 802519a:	bf0c      	ite	eq
 802519c:	f00c 0c0f 	andeq.w	ip, ip, #15
 80251a0:	ea4f 1c2c 	movne.w	ip, ip, asr #4
 80251a4:	eb0c 1c0c 	add.w	ip, ip, ip, lsl #4
 80251a8:	fa5f f58c 	uxtb.w	r5, ip
 80251ac:	9512      	str	r5, [sp, #72]	; 0x48
 80251ae:	b300      	cbz	r0, 80251f2 <_ZN8touchgfx8LCD16bpp41TextureMapper_A4_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x42a>
 80251b0:	9d0e      	ldr	r5, [sp, #56]	; 0x38
 80251b2:	442b      	add	r3, r5
 80251b4:	ea4f 0c53 	mov.w	ip, r3, lsr #1
 80251b8:	07dd      	lsls	r5, r3, #31
 80251ba:	f817 c00c 	ldrb.w	ip, [r7, ip]
 80251be:	bf54      	ite	pl
 80251c0:	f00c 0c0f 	andpl.w	ip, ip, #15
 80251c4:	ea4f 1c2c 	movmi.w	ip, ip, asr #4
 80251c8:	3301      	adds	r3, #1
 80251ca:	eb0c 1c0c 	add.w	ip, ip, ip, lsl #4
 80251ce:	fa5f f58c 	uxtb.w	r5, ip
 80251d2:	ea4f 0c53 	mov.w	ip, r3, lsr #1
 80251d6:	950c      	str	r5, [sp, #48]	; 0x30
 80251d8:	f817 c00c 	ldrb.w	ip, [r7, ip]
 80251dc:	07dd      	lsls	r5, r3, #31
 80251de:	bf54      	ite	pl
 80251e0:	f00c 0c0f 	andpl.w	ip, ip, #15
 80251e4:	ea4f 1c2c 	movmi.w	ip, ip, asr #4
 80251e8:	eb0c 1c0c 	add.w	ip, ip, ip, lsl #4
 80251ec:	fa5f f38c 	uxtb.w	r3, ip
 80251f0:	9313      	str	r3, [sp, #76]	; 0x4c
 80251f2:	b289      	uxth	r1, r1
 80251f4:	b280      	uxth	r0, r0
 80251f6:	fb01 f300 	mul.w	r3, r1, r0
 80251fa:	ebc3 1000 	rsb	r0, r3, r0, lsl #4
 80251fe:	0109      	lsls	r1, r1, #4
 8025200:	b280      	uxth	r0, r0
 8025202:	f5c1 7c80 	rsb	ip, r1, #256	; 0x100
 8025206:	9d12      	ldr	r5, [sp, #72]	; 0x48
 8025208:	1ac9      	subs	r1, r1, r3
 802520a:	ebac 0c00 	sub.w	ip, ip, r0
 802520e:	b289      	uxth	r1, r1
 8025210:	4369      	muls	r1, r5
 8025212:	fa1f fc8c 	uxth.w	ip, ip
 8025216:	fb02 120c 	mla	r2, r2, ip, r1
 802521a:	990c      	ldr	r1, [sp, #48]	; 0x30
 802521c:	fb00 2001 	mla	r0, r0, r1, r2
 8025220:	9a13      	ldr	r2, [sp, #76]	; 0x4c
 8025222:	fb03 0302 	mla	r3, r3, r2, r0
 8025226:	f3c3 2307 	ubfx	r3, r3, #8, #8
 802522a:	b1d3      	cbz	r3, 8025262 <_ZN8touchgfx8LCD16bpp41TextureMapper_A4_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x49a>
 802522c:	9a0f      	ldr	r2, [sp, #60]	; 0x3c
 802522e:	4353      	muls	r3, r2
 8025230:	1c5a      	adds	r2, r3, #1
 8025232:	eb02 2313 	add.w	r3, r2, r3, lsr #8
 8025236:	4a0f      	ldr	r2, [pc, #60]	; (8025274 <_ZN8touchgfx8LCD16bpp41TextureMapper_A4_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x4ac>)
 8025238:	121b      	asrs	r3, r3, #8
 802523a:	6812      	ldr	r2, [r2, #0]
 802523c:	2bff      	cmp	r3, #255	; 0xff
 802523e:	ea4f 2c12 	mov.w	ip, r2, lsr #8
 8025242:	d12d      	bne.n	80252a0 <_ZN8touchgfx8LCD16bpp41TextureMapper_A4_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x4d8>
 8025244:	0953      	lsrs	r3, r2, #5
 8025246:	f42c 6cff 	bic.w	ip, ip, #2040	; 0x7f8
 802524a:	f403 63fc 	and.w	r3, r3, #2016	; 0x7e0
 802524e:	f02c 0c07 	bic.w	ip, ip, #7
 8025252:	ea43 0c0c 	orr.w	ip, r3, ip
 8025256:	f3c2 02c4 	ubfx	r2, r2, #3, #5
 802525a:	ea4c 0202 	orr.w	r2, ip, r2
 802525e:	f8a8 2000 	strh.w	r2, [r8]
 8025262:	9b23      	ldr	r3, [sp, #140]	; 0x8c
 8025264:	441c      	add	r4, r3
 8025266:	9b24      	ldr	r3, [sp, #144]	; 0x90
 8025268:	f108 0802 	add.w	r8, r8, #2
 802526c:	441e      	add	r6, r3
 802526e:	f10b 3bff 	add.w	fp, fp, #4294967295
 8025272:	e6ba      	b.n	8024fea <_ZN8touchgfx8LCD16bpp41TextureMapper_A4_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x222>
 8025274:	20012f34 	.word	0x20012f34
 8025278:	2800      	cmp	r0, #0
 802527a:	d0ba      	beq.n	80251f2 <_ZN8touchgfx8LCD16bpp41TextureMapper_A4_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x42a>
 802527c:	9d0e      	ldr	r5, [sp, #56]	; 0x38
 802527e:	442b      	add	r3, r5
 8025280:	ea4f 0c53 	mov.w	ip, r3, lsr #1
 8025284:	07db      	lsls	r3, r3, #31
 8025286:	f817 c00c 	ldrb.w	ip, [r7, ip]
 802528a:	bf54      	ite	pl
 802528c:	f00c 0c0f 	andpl.w	ip, ip, #15
 8025290:	ea4f 1c2c 	movmi.w	ip, ip, asr #4
 8025294:	eb0c 1c0c 	add.w	ip, ip, ip, lsl #4
 8025298:	fa5f f38c 	uxtb.w	r3, ip
 802529c:	930c      	str	r3, [sp, #48]	; 0x30
 802529e:	e7a8      	b.n	80251f2 <_ZN8touchgfx8LCD16bpp41TextureMapper_A4_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x42a>
 80252a0:	f8b8 e000 	ldrh.w	lr, [r8]
 80252a4:	fa1f fa83 	uxth.w	sl, r3
 80252a8:	ea4f 202e 	mov.w	r0, lr, asr #8
 80252ac:	f3c2 4107 	ubfx	r1, r2, #16, #8
 80252b0:	43db      	mvns	r3, r3
 80252b2:	b2db      	uxtb	r3, r3
 80252b4:	fb11 f10a 	smulbb	r1, r1, sl
 80252b8:	f000 00f8 	and.w	r0, r0, #248	; 0xf8
 80252bc:	fb00 1003 	mla	r0, r0, r3, r1
 80252c0:	b2d2      	uxtb	r2, r2
 80252c2:	ea4f 01ee 	mov.w	r1, lr, asr #3
 80252c6:	ea4f 0ece 	mov.w	lr, lr, lsl #3
 80252ca:	fa5f fe8e 	uxtb.w	lr, lr
 80252ce:	fb12 f20a 	smulbb	r2, r2, sl
 80252d2:	fb0e 2203 	mla	r2, lr, r3, r2
 80252d6:	fa5f fc8c 	uxtb.w	ip, ip
 80252da:	b280      	uxth	r0, r0
 80252dc:	f001 01fc 	and.w	r1, r1, #252	; 0xfc
 80252e0:	b292      	uxth	r2, r2
 80252e2:	fb1c fc0a 	smulbb	ip, ip, sl
 80252e6:	fb01 cc03 	mla	ip, r1, r3, ip
 80252ea:	1c43      	adds	r3, r0, #1
 80252ec:	1c51      	adds	r1, r2, #1
 80252ee:	eb03 2010 	add.w	r0, r3, r0, lsr #8
 80252f2:	eb01 2112 	add.w	r1, r1, r2, lsr #8
 80252f6:	fa1f fc8c 	uxth.w	ip, ip
 80252fa:	f3c1 21c4 	ubfx	r1, r1, #11, #5
 80252fe:	f400 4078 	and.w	r0, r0, #63488	; 0xf800
 8025302:	4308      	orrs	r0, r1
 8025304:	f10c 0101 	add.w	r1, ip, #1
 8025308:	eb01 2c1c 	add.w	ip, r1, ip, lsr #8
 802530c:	ea4f 1c5c 	mov.w	ip, ip, lsr #5
 8025310:	f40c 6cfc 	and.w	ip, ip, #2016	; 0x7e0
 8025314:	ea40 000c 	orr.w	r0, r0, ip
 8025318:	f8a8 0000 	strh.w	r0, [r8]
 802531c:	e7a1      	b.n	8025262 <_ZN8touchgfx8LCD16bpp41TextureMapper_A4_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x49a>
 802531e:	b017      	add	sp, #92	; 0x5c
 8025320:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}

08025324 <_ZNK8touchgfx8LCD16bpp43TextureMapper_A4_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKtsssiihh>:
 8025324:	e92d 47f0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, lr}
 8025328:	e9dd 050a 	ldrd	r0, r5, [sp, #40]	; 0x28
 802532c:	2d00      	cmp	r5, #0
 802532e:	f9bd 8020 	ldrsh.w	r8, [sp, #32]
 8025332:	f9bd 9024 	ldrsh.w	r9, [sp, #36]	; 0x24
 8025336:	f89d 7030 	ldrb.w	r7, [sp, #48]	; 0x30
 802533a:	f89d c034 	ldrb.w	ip, [sp, #52]	; 0x34
 802533e:	fb05 0e03 	mla	lr, r5, r3, r0
 8025342:	f2c0 80b0 	blt.w	80254a6 <_ZNK8touchgfx8LCD16bpp43TextureMapper_A4_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKtsssiihh+0x182>
 8025346:	45a9      	cmp	r9, r5
 8025348:	f340 80ad 	ble.w	80254a6 <_ZNK8touchgfx8LCD16bpp43TextureMapper_A4_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKtsssiihh+0x182>
 802534c:	2800      	cmp	r0, #0
 802534e:	f2c0 80a8 	blt.w	80254a2 <_ZNK8touchgfx8LCD16bpp43TextureMapper_A4_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKtsssiihh+0x17e>
 8025352:	4580      	cmp	r8, r0
 8025354:	f340 80a5 	ble.w	80254a2 <_ZNK8touchgfx8LCD16bpp43TextureMapper_A4_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKtsssiihh+0x17e>
 8025358:	ea4f 045e 	mov.w	r4, lr, lsr #1
 802535c:	f01e 0f01 	tst.w	lr, #1
 8025360:	5d16      	ldrb	r6, [r2, r4]
 8025362:	bf0c      	ite	eq
 8025364:	f006 060f 	andeq.w	r6, r6, #15
 8025368:	1136      	asrne	r6, r6, #4
 802536a:	eb06 1606 	add.w	r6, r6, r6, lsl #4
 802536e:	b2f6      	uxtb	r6, r6
 8025370:	1c44      	adds	r4, r0, #1
 8025372:	f100 809b 	bmi.w	80254ac <_ZNK8touchgfx8LCD16bpp43TextureMapper_A4_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKtsssiihh+0x188>
 8025376:	45a0      	cmp	r8, r4
 8025378:	f340 8098 	ble.w	80254ac <_ZNK8touchgfx8LCD16bpp43TextureMapper_A4_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKtsssiihh+0x188>
 802537c:	2f00      	cmp	r7, #0
 802537e:	f000 8097 	beq.w	80254b0 <_ZNK8touchgfx8LCD16bpp43TextureMapper_A4_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKtsssiihh+0x18c>
 8025382:	f10e 0a01 	add.w	sl, lr, #1
 8025386:	ea4f 045a 	mov.w	r4, sl, lsr #1
 802538a:	f01a 0f01 	tst.w	sl, #1
 802538e:	5d14      	ldrb	r4, [r2, r4]
 8025390:	bf0c      	ite	eq
 8025392:	f004 040f 	andeq.w	r4, r4, #15
 8025396:	1124      	asrne	r4, r4, #4
 8025398:	eb04 1404 	add.w	r4, r4, r4, lsl #4
 802539c:	b2e4      	uxtb	r4, r4
 802539e:	3501      	adds	r5, #1
 80253a0:	f100 808a 	bmi.w	80254b8 <_ZNK8touchgfx8LCD16bpp43TextureMapper_A4_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKtsssiihh+0x194>
 80253a4:	45a9      	cmp	r9, r5
 80253a6:	f340 8087 	ble.w	80254b8 <_ZNK8touchgfx8LCD16bpp43TextureMapper_A4_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKtsssiihh+0x194>
 80253aa:	f1bc 0f00 	cmp.w	ip, #0
 80253ae:	f000 8086 	beq.w	80254be <_ZNK8touchgfx8LCD16bpp43TextureMapper_A4_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKtsssiihh+0x19a>
 80253b2:	2800      	cmp	r0, #0
 80253b4:	db7e      	blt.n	80254b4 <_ZNK8touchgfx8LCD16bpp43TextureMapper_A4_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKtsssiihh+0x190>
 80253b6:	4580      	cmp	r8, r0
 80253b8:	dd7c      	ble.n	80254b4 <_ZNK8touchgfx8LCD16bpp43TextureMapper_A4_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKtsssiihh+0x190>
 80253ba:	eb03 090e 	add.w	r9, r3, lr
 80253be:	ea4f 0559 	mov.w	r5, r9, lsr #1
 80253c2:	f019 0f01 	tst.w	r9, #1
 80253c6:	5d55      	ldrb	r5, [r2, r5]
 80253c8:	bf0c      	ite	eq
 80253ca:	f005 050f 	andeq.w	r5, r5, #15
 80253ce:	112d      	asrne	r5, r5, #4
 80253d0:	eb05 1505 	add.w	r5, r5, r5, lsl #4
 80253d4:	b2ed      	uxtb	r5, r5
 80253d6:	3001      	adds	r0, #1
 80253d8:	d474      	bmi.n	80254c4 <_ZNK8touchgfx8LCD16bpp43TextureMapper_A4_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKtsssiihh+0x1a0>
 80253da:	4580      	cmp	r8, r0
 80253dc:	dd72      	ble.n	80254c4 <_ZNK8touchgfx8LCD16bpp43TextureMapper_A4_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKtsssiihh+0x1a0>
 80253de:	2f00      	cmp	r7, #0
 80253e0:	d072      	beq.n	80254c8 <_ZNK8touchgfx8LCD16bpp43TextureMapper_A4_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKtsssiihh+0x1a4>
 80253e2:	3301      	adds	r3, #1
 80253e4:	449e      	add	lr, r3
 80253e6:	ea4f 035e 	mov.w	r3, lr, lsr #1
 80253ea:	f01e 0f01 	tst.w	lr, #1
 80253ee:	5cd0      	ldrb	r0, [r2, r3]
 80253f0:	bf0c      	ite	eq
 80253f2:	f000 000f 	andeq.w	r0, r0, #15
 80253f6:	1100      	asrne	r0, r0, #4
 80253f8:	eb00 1000 	add.w	r0, r0, r0, lsl #4
 80253fc:	b2c3      	uxtb	r3, r0
 80253fe:	b2ba      	uxth	r2, r7
 8025400:	fa1f fc8c 	uxth.w	ip, ip
 8025404:	fb02 f00c 	mul.w	r0, r2, ip
 8025408:	ebc0 1c0c 	rsb	ip, r0, ip, lsl #4
 802540c:	0112      	lsls	r2, r2, #4
 802540e:	fa1f fc8c 	uxth.w	ip, ip
 8025412:	f5c2 7780 	rsb	r7, r2, #256	; 0x100
 8025416:	1a12      	subs	r2, r2, r0
 8025418:	eba7 070c 	sub.w	r7, r7, ip
 802541c:	b292      	uxth	r2, r2
 802541e:	b2bf      	uxth	r7, r7
 8025420:	4362      	muls	r2, r4
 8025422:	fb06 2207 	mla	r2, r6, r7, r2
 8025426:	fb0c 2505 	mla	r5, ip, r5, r2
 802542a:	fb00 5303 	mla	r3, r0, r3, r5
 802542e:	f3c3 2307 	ubfx	r3, r3, #8, #8
 8025432:	b3a3      	cbz	r3, 802549e <_ZNK8touchgfx8LCD16bpp43TextureMapper_A4_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKtsssiihh+0x17a>
 8025434:	4a25      	ldr	r2, [pc, #148]	; (80254cc <_ZNK8touchgfx8LCD16bpp43TextureMapper_A4_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKtsssiihh+0x1a8>)
 8025436:	880e      	ldrh	r6, [r1, #0]
 8025438:	6815      	ldr	r5, [r2, #0]
 802543a:	1234      	asrs	r4, r6, #8
 802543c:	b29a      	uxth	r2, r3
 802543e:	f3c5 4007 	ubfx	r0, r5, #16, #8
 8025442:	43db      	mvns	r3, r3
 8025444:	b2db      	uxtb	r3, r3
 8025446:	fb10 f002 	smulbb	r0, r0, r2
 802544a:	f004 04f8 	and.w	r4, r4, #248	; 0xf8
 802544e:	fb04 0403 	mla	r4, r4, r3, r0
 8025452:	f3c5 2707 	ubfx	r7, r5, #8, #8
 8025456:	10f0      	asrs	r0, r6, #3
 8025458:	b2ed      	uxtb	r5, r5
 802545a:	00f6      	lsls	r6, r6, #3
 802545c:	fb17 f702 	smulbb	r7, r7, r2
 8025460:	f000 00fc 	and.w	r0, r0, #252	; 0xfc
 8025464:	fb15 f202 	smulbb	r2, r5, r2
 8025468:	b2f6      	uxtb	r6, r6
 802546a:	b2a4      	uxth	r4, r4
 802546c:	fb00 7003 	mla	r0, r0, r3, r7
 8025470:	fb06 2303 	mla	r3, r6, r3, r2
 8025474:	b29a      	uxth	r2, r3
 8025476:	1c63      	adds	r3, r4, #1
 8025478:	b280      	uxth	r0, r0
 802547a:	eb03 2414 	add.w	r4, r3, r4, lsr #8
 802547e:	1c53      	adds	r3, r2, #1
 8025480:	eb03 2312 	add.w	r3, r3, r2, lsr #8
 8025484:	1c42      	adds	r2, r0, #1
 8025486:	eb02 2010 	add.w	r0, r2, r0, lsr #8
 802548a:	f404 4478 	and.w	r4, r4, #63488	; 0xf800
 802548e:	f3c3 23c4 	ubfx	r3, r3, #11, #5
 8025492:	0940      	lsrs	r0, r0, #5
 8025494:	4323      	orrs	r3, r4
 8025496:	f400 60fc 	and.w	r0, r0, #2016	; 0x7e0
 802549a:	4303      	orrs	r3, r0
 802549c:	800b      	strh	r3, [r1, #0]
 802549e:	e8bd 87f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, pc}
 80254a2:	2600      	movs	r6, #0
 80254a4:	e764      	b.n	8025370 <_ZNK8touchgfx8LCD16bpp43TextureMapper_A4_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKtsssiihh+0x4c>
 80254a6:	2400      	movs	r4, #0
 80254a8:	4626      	mov	r6, r4
 80254aa:	e778      	b.n	802539e <_ZNK8touchgfx8LCD16bpp43TextureMapper_A4_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKtsssiihh+0x7a>
 80254ac:	2400      	movs	r4, #0
 80254ae:	e776      	b.n	802539e <_ZNK8touchgfx8LCD16bpp43TextureMapper_A4_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKtsssiihh+0x7a>
 80254b0:	463c      	mov	r4, r7
 80254b2:	e774      	b.n	802539e <_ZNK8touchgfx8LCD16bpp43TextureMapper_A4_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKtsssiihh+0x7a>
 80254b4:	2500      	movs	r5, #0
 80254b6:	e78e      	b.n	80253d6 <_ZNK8touchgfx8LCD16bpp43TextureMapper_A4_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKtsssiihh+0xb2>
 80254b8:	2300      	movs	r3, #0
 80254ba:	461d      	mov	r5, r3
 80254bc:	e79f      	b.n	80253fe <_ZNK8touchgfx8LCD16bpp43TextureMapper_A4_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKtsssiihh+0xda>
 80254be:	4663      	mov	r3, ip
 80254c0:	4665      	mov	r5, ip
 80254c2:	e79c      	b.n	80253fe <_ZNK8touchgfx8LCD16bpp43TextureMapper_A4_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKtsssiihh+0xda>
 80254c4:	2300      	movs	r3, #0
 80254c6:	e79a      	b.n	80253fe <_ZNK8touchgfx8LCD16bpp43TextureMapper_A4_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKtsssiihh+0xda>
 80254c8:	463b      	mov	r3, r7
 80254ca:	e798      	b.n	80253fe <_ZNK8touchgfx8LCD16bpp43TextureMapper_A4_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKtsssiihh+0xda>
 80254cc:	20012f34 	.word	0x20012f34

080254d0 <_ZN8touchgfx8LCD16bpp43TextureMapper_A4_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff>:
 80254d0:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 80254d4:	b093      	sub	sp, #76	; 0x4c
 80254d6:	461d      	mov	r5, r3
 80254d8:	920c      	str	r2, [sp, #48]	; 0x30
 80254da:	9a21      	ldr	r2, [sp, #132]	; 0x84
 80254dc:	9107      	str	r1, [sp, #28]
 80254de:	e9dd 1322 	ldrd	r1, r3, [sp, #136]	; 0x88
 80254e2:	9011      	str	r0, [sp, #68]	; 0x44
 80254e4:	6850      	ldr	r0, [r2, #4]
 80254e6:	6812      	ldr	r2, [r2, #0]
 80254e8:	fb00 1303 	mla	r3, r0, r3, r1
 80254ec:	eb02 0943 	add.w	r9, r2, r3, lsl #1
 80254f0:	9b24      	ldr	r3, [sp, #144]	; 0x90
 80254f2:	689b      	ldr	r3, [r3, #8]
 80254f4:	3301      	adds	r3, #1
 80254f6:	f023 0301 	bic.w	r3, r3, #1
 80254fa:	9306      	str	r3, [sp, #24]
 80254fc:	9b24      	ldr	r3, [sp, #144]	; 0x90
 80254fe:	e9dd 461d 	ldrd	r4, r6, [sp, #116]	; 0x74
 8025502:	681f      	ldr	r7, [r3, #0]
 8025504:	9b07      	ldr	r3, [sp, #28]
 8025506:	2b00      	cmp	r3, #0
 8025508:	dc03      	bgt.n	8025512 <_ZN8touchgfx8LCD16bpp43TextureMapper_A4_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x42>
 802550a:	9b0c      	ldr	r3, [sp, #48]	; 0x30
 802550c:	2b00      	cmp	r3, #0
 802550e:	f340 8267 	ble.w	80259e0 <_ZN8touchgfx8LCD16bpp43TextureMapper_A4_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x510>
 8025512:	9b24      	ldr	r3, [sp, #144]	; 0x90
 8025514:	f9b3 1008 	ldrsh.w	r1, [r3, #8]
 8025518:	f9b3 200c 	ldrsh.w	r2, [r3, #12]
 802551c:	1e48      	subs	r0, r1, #1
 802551e:	f102 3cff 	add.w	ip, r2, #4294967295
 8025522:	2d00      	cmp	r5, #0
 8025524:	f340 80b8 	ble.w	8025698 <_ZN8touchgfx8LCD16bpp43TextureMapper_A4_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x1c8>
 8025528:	ea5f 4e24 	movs.w	lr, r4, asr #16
 802552c:	ea4f 4326 	mov.w	r3, r6, asr #16
 8025530:	d406      	bmi.n	8025540 <_ZN8touchgfx8LCD16bpp43TextureMapper_A4_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x70>
 8025532:	4586      	cmp	lr, r0
 8025534:	da04      	bge.n	8025540 <_ZN8touchgfx8LCD16bpp43TextureMapper_A4_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x70>
 8025536:	2b00      	cmp	r3, #0
 8025538:	db02      	blt.n	8025540 <_ZN8touchgfx8LCD16bpp43TextureMapper_A4_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x70>
 802553a:	4563      	cmp	r3, ip
 802553c:	f2c0 80ad 	blt.w	802569a <_ZN8touchgfx8LCD16bpp43TextureMapper_A4_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x1ca>
 8025540:	f11e 0e01 	adds.w	lr, lr, #1
 8025544:	f100 80a0 	bmi.w	8025688 <_ZN8touchgfx8LCD16bpp43TextureMapper_A4_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x1b8>
 8025548:	4571      	cmp	r1, lr
 802554a:	f2c0 809d 	blt.w	8025688 <_ZN8touchgfx8LCD16bpp43TextureMapper_A4_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x1b8>
 802554e:	3301      	adds	r3, #1
 8025550:	f100 809a 	bmi.w	8025688 <_ZN8touchgfx8LCD16bpp43TextureMapper_A4_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x1b8>
 8025554:	429a      	cmp	r2, r3
 8025556:	f2c0 8097 	blt.w	8025688 <_ZN8touchgfx8LCD16bpp43TextureMapper_A4_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x1b8>
 802555a:	f9bd a018 	ldrsh.w	sl, [sp, #24]
 802555e:	9509      	str	r5, [sp, #36]	; 0x24
 8025560:	46c8      	mov	r8, r9
 8025562:	9b09      	ldr	r3, [sp, #36]	; 0x24
 8025564:	2b00      	cmp	r3, #0
 8025566:	f340 80b6 	ble.w	80256d6 <_ZN8touchgfx8LCD16bpp43TextureMapper_A4_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x206>
 802556a:	f3c4 3303 	ubfx	r3, r4, #12, #4
 802556e:	9308      	str	r3, [sp, #32]
 8025570:	9b24      	ldr	r3, [sp, #144]	; 0x90
 8025572:	e9d3 ce02 	ldrd	ip, lr, [r3, #8]
 8025576:	1423      	asrs	r3, r4, #16
 8025578:	ea4f 4026 	mov.w	r0, r6, asr #16
 802557c:	f3c6 3103 	ubfx	r1, r6, #12, #4
 8025580:	f100 813e 	bmi.w	8025800 <_ZN8touchgfx8LCD16bpp43TextureMapper_A4_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x330>
 8025584:	f10c 3bff 	add.w	fp, ip, #4294967295
 8025588:	455b      	cmp	r3, fp
 802558a:	f280 8139 	bge.w	8025800 <_ZN8touchgfx8LCD16bpp43TextureMapper_A4_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x330>
 802558e:	2800      	cmp	r0, #0
 8025590:	f2c0 8136 	blt.w	8025800 <_ZN8touchgfx8LCD16bpp43TextureMapper_A4_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x330>
 8025594:	f10e 3bff 	add.w	fp, lr, #4294967295
 8025598:	4558      	cmp	r0, fp
 802559a:	f280 8131 	bge.w	8025800 <_ZN8touchgfx8LCD16bpp43TextureMapper_A4_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x330>
 802559e:	9a06      	ldr	r2, [sp, #24]
 80255a0:	fb00 3302 	mla	r3, r0, r2, r3
 80255a4:	0858      	lsrs	r0, r3, #1
 80255a6:	07da      	lsls	r2, r3, #31
 80255a8:	f817 c000 	ldrb.w	ip, [r7, r0]
 80255ac:	9a08      	ldr	r2, [sp, #32]
 80255ae:	bf54      	ite	pl
 80255b0:	f00c 0c0f 	andpl.w	ip, ip, #15
 80255b4:	ea4f 1c2c 	movmi.w	ip, ip, asr #4
 80255b8:	eb0c 1c0c 	add.w	ip, ip, ip, lsl #4
 80255bc:	fa5f fc8c 	uxtb.w	ip, ip
 80255c0:	2a00      	cmp	r2, #0
 80255c2:	f000 80cb 	beq.w	802575c <_ZN8touchgfx8LCD16bpp43TextureMapper_A4_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x28c>
 80255c6:	1c58      	adds	r0, r3, #1
 80255c8:	ea4f 0e50 	mov.w	lr, r0, lsr #1
 80255cc:	07c0      	lsls	r0, r0, #31
 80255ce:	f817 e00e 	ldrb.w	lr, [r7, lr]
 80255d2:	bf54      	ite	pl
 80255d4:	f00e 0e0f 	andpl.w	lr, lr, #15
 80255d8:	ea4f 1e2e 	movmi.w	lr, lr, asr #4
 80255dc:	eb0e 1e0e 	add.w	lr, lr, lr, lsl #4
 80255e0:	fa5f fe8e 	uxtb.w	lr, lr
 80255e4:	f8cd e034 	str.w	lr, [sp, #52]	; 0x34
 80255e8:	b1b9      	cbz	r1, 802561a <_ZN8touchgfx8LCD16bpp43TextureMapper_A4_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x14a>
 80255ea:	4453      	add	r3, sl
 80255ec:	0858      	lsrs	r0, r3, #1
 80255ee:	07da      	lsls	r2, r3, #31
 80255f0:	5c38      	ldrb	r0, [r7, r0]
 80255f2:	bf54      	ite	pl
 80255f4:	f000 000f 	andpl.w	r0, r0, #15
 80255f8:	1100      	asrmi	r0, r0, #4
 80255fa:	eb00 1000 	add.w	r0, r0, r0, lsl #4
 80255fe:	b2c0      	uxtb	r0, r0
 8025600:	900a      	str	r0, [sp, #40]	; 0x28
 8025602:	1c58      	adds	r0, r3, #1
 8025604:	0843      	lsrs	r3, r0, #1
 8025606:	07c2      	lsls	r2, r0, #31
 8025608:	5cfb      	ldrb	r3, [r7, r3]
 802560a:	bf54      	ite	pl
 802560c:	f003 030f 	andpl.w	r3, r3, #15
 8025610:	111b      	asrmi	r3, r3, #4
 8025612:	eb03 1303 	add.w	r3, r3, r3, lsl #4
 8025616:	b2db      	uxtb	r3, r3
 8025618:	930e      	str	r3, [sp, #56]	; 0x38
 802561a:	f8bd 2020 	ldrh.w	r2, [sp, #32]
 802561e:	b289      	uxth	r1, r1
 8025620:	fb02 f301 	mul.w	r3, r2, r1
 8025624:	ebc3 1101 	rsb	r1, r3, r1, lsl #4
 8025628:	0112      	lsls	r2, r2, #4
 802562a:	b289      	uxth	r1, r1
 802562c:	f5c2 7080 	rsb	r0, r2, #256	; 0x100
 8025630:	1a40      	subs	r0, r0, r1
 8025632:	fa1f fe80 	uxth.w	lr, r0
 8025636:	1ad2      	subs	r2, r2, r3
 8025638:	980d      	ldr	r0, [sp, #52]	; 0x34
 802563a:	b292      	uxth	r2, r2
 802563c:	4342      	muls	r2, r0
 802563e:	fb0c 2c0e 	mla	ip, ip, lr, r2
 8025642:	9a0a      	ldr	r2, [sp, #40]	; 0x28
 8025644:	fb01 c102 	mla	r1, r1, r2, ip
 8025648:	9a0e      	ldr	r2, [sp, #56]	; 0x38
 802564a:	fb03 1302 	mla	r3, r3, r2, r1
 802564e:	f3c3 2307 	ubfx	r3, r3, #8, #8
 8025652:	2bff      	cmp	r3, #255	; 0xff
 8025654:	f040 8093 	bne.w	802577e <_ZN8touchgfx8LCD16bpp43TextureMapper_A4_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x2ae>
 8025658:	4bbe      	ldr	r3, [pc, #760]	; (8025954 <_ZN8touchgfx8LCD16bpp43TextureMapper_A4_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x484>)
 802565a:	681a      	ldr	r2, [r3, #0]
 802565c:	4bbe      	ldr	r3, [pc, #760]	; (8025958 <_ZN8touchgfx8LCD16bpp43TextureMapper_A4_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x488>)
 802565e:	0951      	lsrs	r1, r2, #5
 8025660:	ea03 2312 	and.w	r3, r3, r2, lsr #8
 8025664:	f401 61fc 	and.w	r1, r1, #2016	; 0x7e0
 8025668:	430b      	orrs	r3, r1
 802566a:	f3c2 02c4 	ubfx	r2, r2, #3, #5
 802566e:	4313      	orrs	r3, r2
 8025670:	f8a8 3000 	strh.w	r3, [r8]
 8025674:	9b1f      	ldr	r3, [sp, #124]	; 0x7c
 8025676:	441c      	add	r4, r3
 8025678:	9b20      	ldr	r3, [sp, #128]	; 0x80
 802567a:	441e      	add	r6, r3
 802567c:	9b09      	ldr	r3, [sp, #36]	; 0x24
 802567e:	3b01      	subs	r3, #1
 8025680:	f108 0802 	add.w	r8, r8, #2
 8025684:	9309      	str	r3, [sp, #36]	; 0x24
 8025686:	e76c      	b.n	8025562 <_ZN8touchgfx8LCD16bpp43TextureMapper_A4_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x92>
 8025688:	9b1f      	ldr	r3, [sp, #124]	; 0x7c
 802568a:	441c      	add	r4, r3
 802568c:	9b20      	ldr	r3, [sp, #128]	; 0x80
 802568e:	3d01      	subs	r5, #1
 8025690:	441e      	add	r6, r3
 8025692:	f109 0902 	add.w	r9, r9, #2
 8025696:	e744      	b.n	8025522 <_ZN8touchgfx8LCD16bpp43TextureMapper_A4_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x52>
 8025698:	d021      	beq.n	80256de <_ZN8touchgfx8LCD16bpp43TextureMapper_A4_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x20e>
 802569a:	981f      	ldr	r0, [sp, #124]	; 0x7c
 802569c:	1e6b      	subs	r3, r5, #1
 802569e:	fb00 4003 	mla	r0, r0, r3, r4
 80256a2:	1400      	asrs	r0, r0, #16
 80256a4:	f53f af59 	bmi.w	802555a <_ZN8touchgfx8LCD16bpp43TextureMapper_A4_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x8a>
 80256a8:	3901      	subs	r1, #1
 80256aa:	4288      	cmp	r0, r1
 80256ac:	f6bf af55 	bge.w	802555a <_ZN8touchgfx8LCD16bpp43TextureMapper_A4_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x8a>
 80256b0:	9920      	ldr	r1, [sp, #128]	; 0x80
 80256b2:	fb01 6303 	mla	r3, r1, r3, r6
 80256b6:	141b      	asrs	r3, r3, #16
 80256b8:	f53f af4f 	bmi.w	802555a <_ZN8touchgfx8LCD16bpp43TextureMapper_A4_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x8a>
 80256bc:	3a01      	subs	r2, #1
 80256be:	4293      	cmp	r3, r2
 80256c0:	f6bf af4b 	bge.w	802555a <_ZN8touchgfx8LCD16bpp43TextureMapper_A4_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x8a>
 80256c4:	f9bd 3018 	ldrsh.w	r3, [sp, #24]
 80256c8:	9308      	str	r3, [sp, #32]
 80256ca:	46a8      	mov	r8, r5
 80256cc:	46ce      	mov	lr, r9
 80256ce:	f1b8 0f00 	cmp.w	r8, #0
 80256d2:	f300 80b5 	bgt.w	8025840 <_ZN8touchgfx8LCD16bpp43TextureMapper_A4_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x370>
 80256d6:	ea25 75e5 	bic.w	r5, r5, r5, asr #31
 80256da:	eb09 0945 	add.w	r9, r9, r5, lsl #1
 80256de:	9b07      	ldr	r3, [sp, #28]
 80256e0:	2b00      	cmp	r3, #0
 80256e2:	f340 817d 	ble.w	80259e0 <_ZN8touchgfx8LCD16bpp43TextureMapper_A4_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x510>
 80256e6:	ee30 0a04 	vadd.f32	s0, s0, s8
 80256ea:	eeb7 7a00 	vmov.f32	s14, #112	; 0x3f800000  1.0
 80256ee:	eec7 7a00 	vdiv.f32	s15, s14, s0
 80256f2:	9b1c      	ldr	r3, [sp, #112]	; 0x70
 80256f4:	ee70 0aa4 	vadd.f32	s1, s1, s9
 80256f8:	ee31 1a05 	vadd.f32	s2, s2, s10
 80256fc:	ee20 7aa7 	vmul.f32	s14, s1, s15
 8025700:	eef0 6a62 	vmov.f32	s13, s5
 8025704:	ee61 7a27 	vmul.f32	s15, s2, s15
 8025708:	eefe 6ac8 	vcvt.s32.f32	s13, s13, #16
 802570c:	ee77 2a62 	vsub.f32	s5, s14, s5
 8025710:	ee16 4a90 	vmov	r4, s13
 8025714:	eefe 2ac8 	vcvt.s32.f32	s5, s5, #16
 8025718:	eef0 6a43 	vmov.f32	s13, s6
 802571c:	ee37 3ac3 	vsub.f32	s6, s15, s6
 8025720:	ee12 2a90 	vmov	r2, s5
 8025724:	eebe 3ac8 	vcvt.s32.f32	s6, s6, #16
 8025728:	fb92 f3f3 	sdiv	r3, r2, r3
 802572c:	ee13 2a10 	vmov	r2, s6
 8025730:	931f      	str	r3, [sp, #124]	; 0x7c
 8025732:	9b1c      	ldr	r3, [sp, #112]	; 0x70
 8025734:	fb92 f3f3 	sdiv	r3, r2, r3
 8025738:	9320      	str	r3, [sp, #128]	; 0x80
 802573a:	9b07      	ldr	r3, [sp, #28]
 802573c:	9a0c      	ldr	r2, [sp, #48]	; 0x30
 802573e:	3b01      	subs	r3, #1
 8025740:	eefe 6ac8 	vcvt.s32.f32	s13, s13, #16
 8025744:	9307      	str	r3, [sp, #28]
 8025746:	9b1c      	ldr	r3, [sp, #112]	; 0x70
 8025748:	ee16 6a90 	vmov	r6, s13
 802574c:	bf14      	ite	ne
 802574e:	461d      	movne	r5, r3
 8025750:	4615      	moveq	r5, r2
 8025752:	eeb0 3a67 	vmov.f32	s6, s15
 8025756:	eef0 2a47 	vmov.f32	s5, s14
 802575a:	e6d3      	b.n	8025504 <_ZN8touchgfx8LCD16bpp43TextureMapper_A4_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x34>
 802575c:	2900      	cmp	r1, #0
 802575e:	f43f af5c 	beq.w	802561a <_ZN8touchgfx8LCD16bpp43TextureMapper_A4_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x14a>
 8025762:	eb0a 0003 	add.w	r0, sl, r3
 8025766:	0843      	lsrs	r3, r0, #1
 8025768:	07c0      	lsls	r0, r0, #31
 802576a:	5cfb      	ldrb	r3, [r7, r3]
 802576c:	bf54      	ite	pl
 802576e:	f003 030f 	andpl.w	r3, r3, #15
 8025772:	111b      	asrmi	r3, r3, #4
 8025774:	eb03 1303 	add.w	r3, r3, r3, lsl #4
 8025778:	b2db      	uxtb	r3, r3
 802577a:	930a      	str	r3, [sp, #40]	; 0x28
 802577c:	e74d      	b.n	802561a <_ZN8touchgfx8LCD16bpp43TextureMapper_A4_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x14a>
 802577e:	2b00      	cmp	r3, #0
 8025780:	f43f af78 	beq.w	8025674 <_ZN8touchgfx8LCD16bpp43TextureMapper_A4_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x1a4>
 8025784:	4a73      	ldr	r2, [pc, #460]	; (8025954 <_ZN8touchgfx8LCD16bpp43TextureMapper_A4_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x484>)
 8025786:	f8b8 c000 	ldrh.w	ip, [r8]
 802578a:	6810      	ldr	r0, [r2, #0]
 802578c:	fa1f fe83 	uxth.w	lr, r3
 8025790:	ea4f 212c 	mov.w	r1, ip, asr #8
 8025794:	f3c0 4207 	ubfx	r2, r0, #16, #8
 8025798:	43db      	mvns	r3, r3
 802579a:	b2db      	uxtb	r3, r3
 802579c:	fb12 f20e 	smulbb	r2, r2, lr
 80257a0:	f001 01f8 	and.w	r1, r1, #248	; 0xf8
 80257a4:	fb01 2103 	mla	r1, r1, r3, r2
 80257a8:	f3c0 2b07 	ubfx	fp, r0, #8, #8
 80257ac:	ea4f 02ec 	mov.w	r2, ip, asr #3
 80257b0:	b2c0      	uxtb	r0, r0
 80257b2:	ea4f 0ccc 	mov.w	ip, ip, lsl #3
 80257b6:	fb1b fb0e 	smulbb	fp, fp, lr
 80257ba:	b289      	uxth	r1, r1
 80257bc:	fb10 fe0e 	smulbb	lr, r0, lr
 80257c0:	f002 02fc 	and.w	r2, r2, #252	; 0xfc
 80257c4:	fa5f fc8c 	uxtb.w	ip, ip
 80257c8:	fb02 b203 	mla	r2, r2, r3, fp
 80257cc:	1c48      	adds	r0, r1, #1
 80257ce:	fb0c e303 	mla	r3, ip, r3, lr
 80257d2:	b292      	uxth	r2, r2
 80257d4:	b29b      	uxth	r3, r3
 80257d6:	eb00 2111 	add.w	r1, r0, r1, lsr #8
 80257da:	f401 4078 	and.w	r0, r1, #63488	; 0xf800
 80257de:	f102 0b01 	add.w	fp, r2, #1
 80257e2:	1c59      	adds	r1, r3, #1
 80257e4:	eb01 2113 	add.w	r1, r1, r3, lsr #8
 80257e8:	eb0b 2212 	add.w	r2, fp, r2, lsr #8
 80257ec:	f3c1 21c4 	ubfx	r1, r1, #11, #5
 80257f0:	0952      	lsrs	r2, r2, #5
 80257f2:	4301      	orrs	r1, r0
 80257f4:	f402 62fc 	and.w	r2, r2, #2016	; 0x7e0
 80257f8:	4311      	orrs	r1, r2
 80257fa:	f8a8 1000 	strh.w	r1, [r8]
 80257fe:	e739      	b.n	8025674 <_ZN8touchgfx8LCD16bpp43TextureMapper_A4_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x1a4>
 8025800:	f113 0b01 	adds.w	fp, r3, #1
 8025804:	f53f af36 	bmi.w	8025674 <_ZN8touchgfx8LCD16bpp43TextureMapper_A4_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x1a4>
 8025808:	45dc      	cmp	ip, fp
 802580a:	f6ff af33 	blt.w	8025674 <_ZN8touchgfx8LCD16bpp43TextureMapper_A4_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x1a4>
 802580e:	f110 0b01 	adds.w	fp, r0, #1
 8025812:	f53f af2f 	bmi.w	8025674 <_ZN8touchgfx8LCD16bpp43TextureMapper_A4_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x1a4>
 8025816:	45de      	cmp	lr, fp
 8025818:	f6ff af2c 	blt.w	8025674 <_ZN8touchgfx8LCD16bpp43TextureMapper_A4_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x1a4>
 802581c:	9a08      	ldr	r2, [sp, #32]
 802581e:	9302      	str	r3, [sp, #8]
 8025820:	fa0f f38e 	sxth.w	r3, lr
 8025824:	9301      	str	r3, [sp, #4]
 8025826:	fa0f f38c 	sxth.w	r3, ip
 802582a:	e9cd 0203 	strd	r0, r2, [sp, #12]
 802582e:	9105      	str	r1, [sp, #20]
 8025830:	9300      	str	r3, [sp, #0]
 8025832:	463a      	mov	r2, r7
 8025834:	4653      	mov	r3, sl
 8025836:	4641      	mov	r1, r8
 8025838:	9811      	ldr	r0, [sp, #68]	; 0x44
 802583a:	f7ff fd73 	bl	8025324 <_ZNK8touchgfx8LCD16bpp43TextureMapper_A4_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKtsssiihh>
 802583e:	e719      	b.n	8025674 <_ZN8touchgfx8LCD16bpp43TextureMapper_A4_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x1a4>
 8025840:	9906      	ldr	r1, [sp, #24]
 8025842:	1422      	asrs	r2, r4, #16
 8025844:	1433      	asrs	r3, r6, #16
 8025846:	fb01 2303 	mla	r3, r1, r3, r2
 802584a:	085a      	lsrs	r2, r3, #1
 802584c:	07d9      	lsls	r1, r3, #31
 802584e:	5cba      	ldrb	r2, [r7, r2]
 8025850:	bf54      	ite	pl
 8025852:	f002 020f 	andpl.w	r2, r2, #15
 8025856:	1112      	asrmi	r2, r2, #4
 8025858:	eb02 1202 	add.w	r2, r2, r2, lsl #4
 802585c:	f3c4 3003 	ubfx	r0, r4, #12, #4
 8025860:	f3c6 3c03 	ubfx	ip, r6, #12, #4
 8025864:	b2d2      	uxtb	r2, r2
 8025866:	2800      	cmp	r0, #0
 8025868:	d062      	beq.n	8025930 <_ZN8touchgfx8LCD16bpp43TextureMapper_A4_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x460>
 802586a:	f103 0a01 	add.w	sl, r3, #1
 802586e:	ea4f 015a 	mov.w	r1, sl, lsr #1
 8025872:	f01a 0f01 	tst.w	sl, #1
 8025876:	5c79      	ldrb	r1, [r7, r1]
 8025878:	bf0c      	ite	eq
 802587a:	f001 010f 	andeq.w	r1, r1, #15
 802587e:	1109      	asrne	r1, r1, #4
 8025880:	eb01 1101 	add.w	r1, r1, r1, lsl #4
 8025884:	b2c9      	uxtb	r1, r1
 8025886:	910f      	str	r1, [sp, #60]	; 0x3c
 8025888:	f1bc 0f00 	cmp.w	ip, #0
 802588c:	d019      	beq.n	80258c2 <_ZN8touchgfx8LCD16bpp43TextureMapper_A4_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x3f2>
 802588e:	9908      	ldr	r1, [sp, #32]
 8025890:	440b      	add	r3, r1
 8025892:	0859      	lsrs	r1, r3, #1
 8025894:	f013 0f01 	tst.w	r3, #1
 8025898:	5c79      	ldrb	r1, [r7, r1]
 802589a:	bf0c      	ite	eq
 802589c:	f001 010f 	andeq.w	r1, r1, #15
 80258a0:	1109      	asrne	r1, r1, #4
 80258a2:	eb01 1101 	add.w	r1, r1, r1, lsl #4
 80258a6:	b2c9      	uxtb	r1, r1
 80258a8:	3301      	adds	r3, #1
 80258aa:	910b      	str	r1, [sp, #44]	; 0x2c
 80258ac:	0859      	lsrs	r1, r3, #1
 80258ae:	07db      	lsls	r3, r3, #31
 80258b0:	5c79      	ldrb	r1, [r7, r1]
 80258b2:	bf54      	ite	pl
 80258b4:	f001 010f 	andpl.w	r1, r1, #15
 80258b8:	1109      	asrmi	r1, r1, #4
 80258ba:	eb01 1101 	add.w	r1, r1, r1, lsl #4
 80258be:	b2c9      	uxtb	r1, r1
 80258c0:	9110      	str	r1, [sp, #64]	; 0x40
 80258c2:	b280      	uxth	r0, r0
 80258c4:	fa1f fc8c 	uxth.w	ip, ip
 80258c8:	fb00 f30c 	mul.w	r3, r0, ip
 80258cc:	ebc3 1c0c 	rsb	ip, r3, ip, lsl #4
 80258d0:	0100      	lsls	r0, r0, #4
 80258d2:	fa1f fc8c 	uxth.w	ip, ip
 80258d6:	f5c0 7180 	rsb	r1, r0, #256	; 0x100
 80258da:	eba1 010c 	sub.w	r1, r1, ip
 80258de:	fa1f fa81 	uxth.w	sl, r1
 80258e2:	1ac0      	subs	r0, r0, r3
 80258e4:	990f      	ldr	r1, [sp, #60]	; 0x3c
 80258e6:	b280      	uxth	r0, r0
 80258e8:	4348      	muls	r0, r1
 80258ea:	990b      	ldr	r1, [sp, #44]	; 0x2c
 80258ec:	fb02 020a 	mla	r2, r2, sl, r0
 80258f0:	fb0c 2c01 	mla	ip, ip, r1, r2
 80258f4:	9a10      	ldr	r2, [sp, #64]	; 0x40
 80258f6:	fb03 c302 	mla	r3, r3, r2, ip
 80258fa:	f3c3 2307 	ubfx	r3, r3, #8, #8
 80258fe:	2bff      	cmp	r3, #255	; 0xff
 8025900:	d12c      	bne.n	802595c <_ZN8touchgfx8LCD16bpp43TextureMapper_A4_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x48c>
 8025902:	4b14      	ldr	r3, [pc, #80]	; (8025954 <_ZN8touchgfx8LCD16bpp43TextureMapper_A4_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x484>)
 8025904:	681a      	ldr	r2, [r3, #0]
 8025906:	4b14      	ldr	r3, [pc, #80]	; (8025958 <_ZN8touchgfx8LCD16bpp43TextureMapper_A4_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x488>)
 8025908:	0951      	lsrs	r1, r2, #5
 802590a:	ea03 2312 	and.w	r3, r3, r2, lsr #8
 802590e:	f401 61fc 	and.w	r1, r1, #2016	; 0x7e0
 8025912:	430b      	orrs	r3, r1
 8025914:	f3c2 02c4 	ubfx	r2, r2, #3, #5
 8025918:	4313      	orrs	r3, r2
 802591a:	f8ae 3000 	strh.w	r3, [lr]
 802591e:	9b1f      	ldr	r3, [sp, #124]	; 0x7c
 8025920:	441c      	add	r4, r3
 8025922:	9b20      	ldr	r3, [sp, #128]	; 0x80
 8025924:	f10e 0e02 	add.w	lr, lr, #2
 8025928:	441e      	add	r6, r3
 802592a:	f108 38ff 	add.w	r8, r8, #4294967295
 802592e:	e6ce      	b.n	80256ce <_ZN8touchgfx8LCD16bpp43TextureMapper_A4_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x1fe>
 8025930:	f1bc 0f00 	cmp.w	ip, #0
 8025934:	d0c5      	beq.n	80258c2 <_ZN8touchgfx8LCD16bpp43TextureMapper_A4_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x3f2>
 8025936:	9908      	ldr	r1, [sp, #32]
 8025938:	440b      	add	r3, r1
 802593a:	0859      	lsrs	r1, r3, #1
 802593c:	07db      	lsls	r3, r3, #31
 802593e:	5c79      	ldrb	r1, [r7, r1]
 8025940:	bf54      	ite	pl
 8025942:	f001 010f 	andpl.w	r1, r1, #15
 8025946:	1109      	asrmi	r1, r1, #4
 8025948:	eb01 1101 	add.w	r1, r1, r1, lsl #4
 802594c:	b2c9      	uxtb	r1, r1
 802594e:	910b      	str	r1, [sp, #44]	; 0x2c
 8025950:	e7b7      	b.n	80258c2 <_ZN8touchgfx8LCD16bpp43TextureMapper_A4_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x3f2>
 8025952:	bf00      	nop
 8025954:	20012f34 	.word	0x20012f34
 8025958:	fffff800 	.word	0xfffff800
 802595c:	2b00      	cmp	r3, #0
 802595e:	d0de      	beq.n	802591e <_ZN8touchgfx8LCD16bpp43TextureMapper_A4_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x44e>
 8025960:	4a21      	ldr	r2, [pc, #132]	; (80259e8 <_ZN8touchgfx8LCD16bpp43TextureMapper_A4_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x518>)
 8025962:	f8be c000 	ldrh.w	ip, [lr]
 8025966:	6810      	ldr	r0, [r2, #0]
 8025968:	fa1f fa83 	uxth.w	sl, r3
 802596c:	ea4f 212c 	mov.w	r1, ip, asr #8
 8025970:	f3c0 4207 	ubfx	r2, r0, #16, #8
 8025974:	43db      	mvns	r3, r3
 8025976:	b2db      	uxtb	r3, r3
 8025978:	fb12 f20a 	smulbb	r2, r2, sl
 802597c:	f001 01f8 	and.w	r1, r1, #248	; 0xf8
 8025980:	fb01 2103 	mla	r1, r1, r3, r2
 8025984:	f3c0 2b07 	ubfx	fp, r0, #8, #8
 8025988:	ea4f 02ec 	mov.w	r2, ip, asr #3
 802598c:	b2c0      	uxtb	r0, r0
 802598e:	ea4f 0ccc 	mov.w	ip, ip, lsl #3
 8025992:	fa5f fc8c 	uxtb.w	ip, ip
 8025996:	fb10 f00a 	smulbb	r0, r0, sl
 802599a:	fb0c 0003 	mla	r0, ip, r3, r0
 802599e:	b289      	uxth	r1, r1
 80259a0:	fb1b fb0a 	smulbb	fp, fp, sl
 80259a4:	b280      	uxth	r0, r0
 80259a6:	f002 02fc 	and.w	r2, r2, #252	; 0xfc
 80259aa:	fb02 b203 	mla	r2, r2, r3, fp
 80259ae:	1c4b      	adds	r3, r1, #1
 80259b0:	f100 0b01 	add.w	fp, r0, #1
 80259b4:	eb03 2111 	add.w	r1, r3, r1, lsr #8
 80259b8:	eb0b 2b10 	add.w	fp, fp, r0, lsr #8
 80259bc:	b292      	uxth	r2, r2
 80259be:	f3cb 2bc4 	ubfx	fp, fp, #11, #5
 80259c2:	f401 4178 	and.w	r1, r1, #63488	; 0xf800
 80259c6:	ea4b 0101 	orr.w	r1, fp, r1
 80259ca:	f102 0b01 	add.w	fp, r2, #1
 80259ce:	eb0b 2212 	add.w	r2, fp, r2, lsr #8
 80259d2:	0952      	lsrs	r2, r2, #5
 80259d4:	f402 62fc 	and.w	r2, r2, #2016	; 0x7e0
 80259d8:	4311      	orrs	r1, r2
 80259da:	f8ae 1000 	strh.w	r1, [lr]
 80259de:	e79e      	b.n	802591e <_ZN8touchgfx8LCD16bpp43TextureMapper_A4_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x44e>
 80259e0:	b013      	add	sp, #76	; 0x4c
 80259e2:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
 80259e6:	bf00      	nop
 80259e8:	20012f34 	.word	0x20012f34

080259ec <_ZNK8touchgfx8LCD16bpp17DecompressorL8_L416blendPixelRGB565Ettii>:
 80259ec:	b570      	push	{r4, r5, r6, lr}
 80259ee:	1208      	asrs	r0, r1, #8
 80259f0:	b29e      	uxth	r6, r3
 80259f2:	f8bd 5010 	ldrh.w	r5, [sp, #16]
 80259f6:	1213      	asrs	r3, r2, #8
 80259f8:	f000 00f8 	and.w	r0, r0, #248	; 0xf8
 80259fc:	f003 03f8 	and.w	r3, r3, #248	; 0xf8
 8025a00:	fb13 f305 	smulbb	r3, r3, r5
 8025a04:	fb10 f006 	smulbb	r0, r0, r6
 8025a08:	4418      	add	r0, r3
 8025a0a:	10cc      	asrs	r4, r1, #3
 8025a0c:	10d3      	asrs	r3, r2, #3
 8025a0e:	f004 04fc 	and.w	r4, r4, #252	; 0xfc
 8025a12:	f003 03fc 	and.w	r3, r3, #252	; 0xfc
 8025a16:	fb13 f305 	smulbb	r3, r3, r5
 8025a1a:	fb14 f406 	smulbb	r4, r4, r6
 8025a1e:	00c9      	lsls	r1, r1, #3
 8025a20:	00d2      	lsls	r2, r2, #3
 8025a22:	441c      	add	r4, r3
 8025a24:	b2d2      	uxtb	r2, r2
 8025a26:	b2cb      	uxtb	r3, r1
 8025a28:	fb12 f205 	smulbb	r2, r2, r5
 8025a2c:	b280      	uxth	r0, r0
 8025a2e:	fb13 f306 	smulbb	r3, r3, r6
 8025a32:	4413      	add	r3, r2
 8025a34:	1c42      	adds	r2, r0, #1
 8025a36:	b29b      	uxth	r3, r3
 8025a38:	eb02 2010 	add.w	r0, r2, r0, lsr #8
 8025a3c:	f400 4278 	and.w	r2, r0, #63488	; 0xf800
 8025a40:	1c58      	adds	r0, r3, #1
 8025a42:	eb00 2013 	add.w	r0, r0, r3, lsr #8
 8025a46:	b2a4      	uxth	r4, r4
 8025a48:	f3c0 20c4 	ubfx	r0, r0, #11, #5
 8025a4c:	4310      	orrs	r0, r2
 8025a4e:	1c62      	adds	r2, r4, #1
 8025a50:	eb02 2414 	add.w	r4, r2, r4, lsr #8
 8025a54:	0964      	lsrs	r4, r4, #5
 8025a56:	f404 64fc 	and.w	r4, r4, #2016	; 0x7e0
 8025a5a:	4320      	orrs	r0, r4
 8025a5c:	bd70      	pop	{r4, r5, r6, pc}
	...

08025a60 <_ZN8touchgfx8LCD16bpp17DecompressorL8_L414blitCopyRGB565EPKhS3_RKNS_4RectES6_h>:
 8025a60:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 8025a64:	b08f      	sub	sp, #60	; 0x3c
 8025a66:	461c      	mov	r4, r3
 8025a68:	f89d 7064 	ldrb.w	r7, [sp, #100]	; 0x64
 8025a6c:	9004      	str	r0, [sp, #16]
 8025a6e:	460d      	mov	r5, r1
 8025a70:	4616      	mov	r6, r2
 8025a72:	9b18      	ldr	r3, [sp, #96]	; 0x60
 8025a74:	2f00      	cmp	r7, #0
 8025a76:	f000 80f6 	beq.w	8025c66 <_ZN8touchgfx8LCD16bpp17DecompressorL8_L414blitCopyRGB565EPKhS3_RKNS_4RectES6_h+0x206>
 8025a7a:	6820      	ldr	r0, [r4, #0]
 8025a7c:	6861      	ldr	r1, [r4, #4]
 8025a7e:	aa0a      	add	r2, sp, #40	; 0x28
 8025a80:	c203      	stmia	r2!, {r0, r1}
 8025a82:	6818      	ldr	r0, [r3, #0]
 8025a84:	6859      	ldr	r1, [r3, #4]
 8025a86:	aa0c      	add	r2, sp, #48	; 0x30
 8025a88:	c203      	stmia	r2!, {r0, r1}
 8025a8a:	a80a      	add	r0, sp, #40	; 0x28
 8025a8c:	f7ef fa9c 	bl	8014fc8 <_ZN8touchgfx21DisplayTransformation29transformDisplayToFrameBufferERNS_4RectE>
 8025a90:	4621      	mov	r1, r4
 8025a92:	a80c      	add	r0, sp, #48	; 0x30
 8025a94:	f7ef fadc 	bl	8015050 <_ZN8touchgfx21DisplayTransformation29transformDisplayToFrameBufferERNS_4RectERKS1_>
 8025a98:	f9bd 2030 	ldrsh.w	r2, [sp, #48]	; 0x30
 8025a9c:	f9bd b036 	ldrsh.w	fp, [sp, #54]	; 0x36
 8025aa0:	f9bd 9034 	ldrsh.w	r9, [sp, #52]	; 0x34
 8025aa4:	f002 0301 	and.w	r3, r2, #1
 8025aa8:	9306      	str	r3, [sp, #24]
 8025aaa:	f9bd 302c 	ldrsh.w	r3, [sp, #44]	; 0x2c
 8025aae:	f003 0101 	and.w	r1, r3, #1
 8025ab2:	9105      	str	r1, [sp, #20]
 8025ab4:	9805      	ldr	r0, [sp, #20]
 8025ab6:	f9bd 1032 	ldrsh.w	r1, [sp, #50]	; 0x32
 8025aba:	4403      	add	r3, r0
 8025abc:	fb01 2303 	mla	r3, r1, r3, r2
 8025ac0:	f04f 0802 	mov.w	r8, #2
 8025ac4:	fb93 f3f8 	sdiv	r3, r3, r8
 8025ac8:	441d      	add	r5, r3
 8025aca:	f8bd 3028 	ldrh.w	r3, [sp, #40]	; 0x28
 8025ace:	441a      	add	r2, r3
 8025ad0:	f8bd 302a 	ldrh.w	r3, [sp, #42]	; 0x2a
 8025ad4:	f8ad 2030 	strh.w	r2, [sp, #48]	; 0x30
 8025ad8:	4419      	add	r1, r3
 8025ada:	4b64      	ldr	r3, [pc, #400]	; (8025c6c <_ZN8touchgfx8LCD16bpp17DecompressorL8_L414blitCopyRGB565EPKhS3_RKNS_4RectES6_h+0x20c>)
 8025adc:	f8ad 1032 	strh.w	r1, [sp, #50]	; 0x32
 8025ae0:	6818      	ldr	r0, [r3, #0]
 8025ae2:	6803      	ldr	r3, [r0, #0]
 8025ae4:	6a9b      	ldr	r3, [r3, #40]	; 0x28
 8025ae6:	4798      	blx	r3
 8025ae8:	4a61      	ldr	r2, [pc, #388]	; (8025c70 <_ZN8touchgfx8LCD16bpp17DecompressorL8_L414blitCopyRGB565EPKhS3_RKNS_4RectES6_h+0x210>)
 8025aea:	f9bd 4032 	ldrsh.w	r4, [sp, #50]	; 0x32
 8025aee:	8813      	ldrh	r3, [r2, #0]
 8025af0:	f9bd a030 	ldrsh.w	sl, [sp, #48]	; 0x30
 8025af4:	2fff      	cmp	r7, #255	; 0xff
 8025af6:	fb03 a404 	mla	r4, r3, r4, sl
 8025afa:	eb00 0444 	add.w	r4, r0, r4, lsl #1
 8025afe:	f106 0604 	add.w	r6, r6, #4
 8025b02:	4611      	mov	r1, r2
 8025b04:	fb03 fb0b 	mul.w	fp, r3, fp
 8025b08:	d06b      	beq.n	8025be2 <_ZN8touchgfx8LCD16bpp17DecompressorL8_L414blitCopyRGB565EPKhS3_RKNS_4RectES6_h+0x182>
 8025b0a:	f1c7 03ff 	rsb	r3, r7, #255	; 0xff
 8025b0e:	9303      	str	r3, [sp, #12]
 8025b10:	eb04 034b 	add.w	r3, r4, fp, lsl #1
 8025b14:	e9cd 3207 	strd	r3, r2, [sp, #28]
 8025b18:	f8cd 8024 	str.w	r8, [sp, #36]	; 0x24
 8025b1c:	9b07      	ldr	r3, [sp, #28]
 8025b1e:	42a3      	cmp	r3, r4
 8025b20:	f240 809c 	bls.w	8025c5c <_ZN8touchgfx8LCD16bpp17DecompressorL8_L414blitCopyRGB565EPKhS3_RKNS_4RectES6_h+0x1fc>
 8025b24:	9b06      	ldr	r3, [sp, #24]
 8025b26:	2b00      	cmp	r3, #0
 8025b28:	d039      	beq.n	8025b9e <_ZN8touchgfx8LCD16bpp17DecompressorL8_L414blitCopyRGB565EPKhS3_RKNS_4RectES6_h+0x13e>
 8025b2a:	782b      	ldrb	r3, [r5, #0]
 8025b2c:	8822      	ldrh	r2, [r4, #0]
 8025b2e:	9804      	ldr	r0, [sp, #16]
 8025b30:	f003 030f 	and.w	r3, r3, #15
 8025b34:	f105 0801 	add.w	r8, r5, #1
 8025b38:	f836 1013 	ldrh.w	r1, [r6, r3, lsl #1]
 8025b3c:	9b03      	ldr	r3, [sp, #12]
 8025b3e:	9300      	str	r3, [sp, #0]
 8025b40:	463b      	mov	r3, r7
 8025b42:	f7ff ff53 	bl	80259ec <_ZNK8touchgfx8LCD16bpp17DecompressorL8_L416blendPixelRGB565Ettii>
 8025b46:	f824 0b02 	strh.w	r0, [r4], #2
 8025b4a:	f109 3bff 	add.w	fp, r9, #4294967295
 8025b4e:	f1bb 0f01 	cmp.w	fp, #1
 8025b52:	46a2      	mov	sl, r4
 8025b54:	f104 0404 	add.w	r4, r4, #4
 8025b58:	dd24      	ble.n	8025ba4 <_ZN8touchgfx8LCD16bpp17DecompressorL8_L414blitCopyRGB565EPKhS3_RKNS_4RectES6_h+0x144>
 8025b5a:	f898 3000 	ldrb.w	r3, [r8]
 8025b5e:	f834 2c04 	ldrh.w	r2, [r4, #-4]
 8025b62:	9804      	ldr	r0, [sp, #16]
 8025b64:	091b      	lsrs	r3, r3, #4
 8025b66:	f1ab 0b02 	sub.w	fp, fp, #2
 8025b6a:	f836 1013 	ldrh.w	r1, [r6, r3, lsl #1]
 8025b6e:	9b03      	ldr	r3, [sp, #12]
 8025b70:	9300      	str	r3, [sp, #0]
 8025b72:	463b      	mov	r3, r7
 8025b74:	f7ff ff3a 	bl	80259ec <_ZNK8touchgfx8LCD16bpp17DecompressorL8_L416blendPixelRGB565Ettii>
 8025b78:	f824 0c04 	strh.w	r0, [r4, #-4]
 8025b7c:	f818 3b01 	ldrb.w	r3, [r8], #1
 8025b80:	f834 2c02 	ldrh.w	r2, [r4, #-2]
 8025b84:	9804      	ldr	r0, [sp, #16]
 8025b86:	f003 030f 	and.w	r3, r3, #15
 8025b8a:	f836 1013 	ldrh.w	r1, [r6, r3, lsl #1]
 8025b8e:	9b03      	ldr	r3, [sp, #12]
 8025b90:	9300      	str	r3, [sp, #0]
 8025b92:	463b      	mov	r3, r7
 8025b94:	f7ff ff2a 	bl	80259ec <_ZNK8touchgfx8LCD16bpp17DecompressorL8_L416blendPixelRGB565Ettii>
 8025b98:	f824 0c02 	strh.w	r0, [r4, #-2]
 8025b9c:	e7d7      	b.n	8025b4e <_ZN8touchgfx8LCD16bpp17DecompressorL8_L414blitCopyRGB565EPKhS3_RKNS_4RectES6_h+0xee>
 8025b9e:	46a8      	mov	r8, r5
 8025ba0:	46cb      	mov	fp, r9
 8025ba2:	e7d4      	b.n	8025b4e <_ZN8touchgfx8LCD16bpp17DecompressorL8_L414blitCopyRGB565EPKhS3_RKNS_4RectES6_h+0xee>
 8025ba4:	d10e      	bne.n	8025bc4 <_ZN8touchgfx8LCD16bpp17DecompressorL8_L414blitCopyRGB565EPKhS3_RKNS_4RectES6_h+0x164>
 8025ba6:	f898 3000 	ldrb.w	r3, [r8]
 8025baa:	f8ba 2000 	ldrh.w	r2, [sl]
 8025bae:	9804      	ldr	r0, [sp, #16]
 8025bb0:	091b      	lsrs	r3, r3, #4
 8025bb2:	f836 1013 	ldrh.w	r1, [r6, r3, lsl #1]
 8025bb6:	9b03      	ldr	r3, [sp, #12]
 8025bb8:	9300      	str	r3, [sp, #0]
 8025bba:	463b      	mov	r3, r7
 8025bbc:	f7ff ff16 	bl	80259ec <_ZNK8touchgfx8LCD16bpp17DecompressorL8_L416blendPixelRGB565Ettii>
 8025bc0:	f82a 0b02 	strh.w	r0, [sl], #2
 8025bc4:	9b08      	ldr	r3, [sp, #32]
 8025bc6:	9a05      	ldr	r2, [sp, #20]
 8025bc8:	881c      	ldrh	r4, [r3, #0]
 8025bca:	f9bd 302c 	ldrsh.w	r3, [sp, #44]	; 0x2c
 8025bce:	eba4 0409 	sub.w	r4, r4, r9
 8025bd2:	4413      	add	r3, r2
 8025bd4:	eb0a 0444 	add.w	r4, sl, r4, lsl #1
 8025bd8:	9a09      	ldr	r2, [sp, #36]	; 0x24
 8025bda:	fb93 f3f2 	sdiv	r3, r3, r2
 8025bde:	441d      	add	r5, r3
 8025be0:	e79c      	b.n	8025b1c <_ZN8touchgfx8LCD16bpp17DecompressorL8_L414blitCopyRGB565EPKhS3_RKNS_4RectES6_h+0xbc>
 8025be2:	eb04 0b4b 	add.w	fp, r4, fp, lsl #1
 8025be6:	45a3      	cmp	fp, r4
 8025be8:	d938      	bls.n	8025c5c <_ZN8touchgfx8LCD16bpp17DecompressorL8_L414blitCopyRGB565EPKhS3_RKNS_4RectES6_h+0x1fc>
 8025bea:	9b06      	ldr	r3, [sp, #24]
 8025bec:	b1f3      	cbz	r3, 8025c2c <_ZN8touchgfx8LCD16bpp17DecompressorL8_L414blitCopyRGB565EPKhS3_RKNS_4RectES6_h+0x1cc>
 8025bee:	782b      	ldrb	r3, [r5, #0]
 8025bf0:	f003 030f 	and.w	r3, r3, #15
 8025bf4:	1c6a      	adds	r2, r5, #1
 8025bf6:	f836 3013 	ldrh.w	r3, [r6, r3, lsl #1]
 8025bfa:	8023      	strh	r3, [r4, #0]
 8025bfc:	f109 30ff 	add.w	r0, r9, #4294967295
 8025c00:	3402      	adds	r4, #2
 8025c02:	2801      	cmp	r0, #1
 8025c04:	4623      	mov	r3, r4
 8025c06:	f104 0404 	add.w	r4, r4, #4
 8025c0a:	dd12      	ble.n	8025c32 <_ZN8touchgfx8LCD16bpp17DecompressorL8_L414blitCopyRGB565EPKhS3_RKNS_4RectES6_h+0x1d2>
 8025c0c:	7813      	ldrb	r3, [r2, #0]
 8025c0e:	091b      	lsrs	r3, r3, #4
 8025c10:	3802      	subs	r0, #2
 8025c12:	f836 3013 	ldrh.w	r3, [r6, r3, lsl #1]
 8025c16:	f824 3c04 	strh.w	r3, [r4, #-4]
 8025c1a:	f812 3b01 	ldrb.w	r3, [r2], #1
 8025c1e:	f003 030f 	and.w	r3, r3, #15
 8025c22:	f836 3013 	ldrh.w	r3, [r6, r3, lsl #1]
 8025c26:	f824 3c02 	strh.w	r3, [r4, #-2]
 8025c2a:	e7ea      	b.n	8025c02 <_ZN8touchgfx8LCD16bpp17DecompressorL8_L414blitCopyRGB565EPKhS3_RKNS_4RectES6_h+0x1a2>
 8025c2c:	462a      	mov	r2, r5
 8025c2e:	4648      	mov	r0, r9
 8025c30:	e7e7      	b.n	8025c02 <_ZN8touchgfx8LCD16bpp17DecompressorL8_L414blitCopyRGB565EPKhS3_RKNS_4RectES6_h+0x1a2>
 8025c32:	d106      	bne.n	8025c42 <_ZN8touchgfx8LCD16bpp17DecompressorL8_L414blitCopyRGB565EPKhS3_RKNS_4RectES6_h+0x1e2>
 8025c34:	7812      	ldrb	r2, [r2, #0]
 8025c36:	0912      	lsrs	r2, r2, #4
 8025c38:	3302      	adds	r3, #2
 8025c3a:	f836 2012 	ldrh.w	r2, [r6, r2, lsl #1]
 8025c3e:	f823 2c02 	strh.w	r2, [r3, #-2]
 8025c42:	880c      	ldrh	r4, [r1, #0]
 8025c44:	9a05      	ldr	r2, [sp, #20]
 8025c46:	eba4 0409 	sub.w	r4, r4, r9
 8025c4a:	eb03 0444 	add.w	r4, r3, r4, lsl #1
 8025c4e:	f9bd 302c 	ldrsh.w	r3, [sp, #44]	; 0x2c
 8025c52:	4413      	add	r3, r2
 8025c54:	fb93 f3f8 	sdiv	r3, r3, r8
 8025c58:	441d      	add	r5, r3
 8025c5a:	e7c4      	b.n	8025be6 <_ZN8touchgfx8LCD16bpp17DecompressorL8_L414blitCopyRGB565EPKhS3_RKNS_4RectES6_h+0x186>
 8025c5c:	4b03      	ldr	r3, [pc, #12]	; (8025c6c <_ZN8touchgfx8LCD16bpp17DecompressorL8_L414blitCopyRGB565EPKhS3_RKNS_4RectES6_h+0x20c>)
 8025c5e:	6818      	ldr	r0, [r3, #0]
 8025c60:	6803      	ldr	r3, [r0, #0]
 8025c62:	6adb      	ldr	r3, [r3, #44]	; 0x2c
 8025c64:	4798      	blx	r3
 8025c66:	b00f      	add	sp, #60	; 0x3c
 8025c68:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
 8025c6c:	20012f24 	.word	0x20012f24
 8025c70:	20012f1e 	.word	0x20012f1e

08025c74 <_ZNK8touchgfx8LCD16bpp17DecompressorL8_L418blendPixelARGB8888Emtih>:
 8025c74:	b5f0      	push	{r4, r5, r6, r7, lr}
 8025c76:	f89d 5014 	ldrb.w	r5, [sp, #20]
 8025c7a:	2dff      	cmp	r5, #255	; 0xff
 8025c7c:	ea4f 2711 	mov.w	r7, r1, lsr #8
 8025c80:	d10c      	bne.n	8025c9c <_ZNK8touchgfx8LCD16bpp17DecompressorL8_L418blendPixelARGB8888Emtih+0x28>
 8025c82:	2bff      	cmp	r3, #255	; 0xff
 8025c84:	d10a      	bne.n	8025c9c <_ZNK8touchgfx8LCD16bpp17DecompressorL8_L418blendPixelARGB8888Emtih+0x28>
 8025c86:	4b25      	ldr	r3, [pc, #148]	; (8025d1c <_ZNK8touchgfx8LCD16bpp17DecompressorL8_L418blendPixelARGB8888Emtih+0xa8>)
 8025c88:	0948      	lsrs	r0, r1, #5
 8025c8a:	f400 60fc 	and.w	r0, r0, #2016	; 0x7e0
 8025c8e:	403b      	ands	r3, r7
 8025c90:	4318      	orrs	r0, r3
 8025c92:	f3c1 01c4 	ubfx	r1, r1, #3, #5
 8025c96:	4308      	orrs	r0, r1
 8025c98:	b280      	uxth	r0, r0
 8025c9a:	bdf0      	pop	{r4, r5, r6, r7, pc}
 8025c9c:	fb15 f503 	smulbb	r5, r5, r3
 8025ca0:	b2ab      	uxth	r3, r5
 8025ca2:	1c5d      	adds	r5, r3, #1
 8025ca4:	eb05 2513 	add.w	r5, r5, r3, lsr #8
 8025ca8:	1214      	asrs	r4, r2, #8
 8025caa:	f3c5 2507 	ubfx	r5, r5, #8, #8
 8025cae:	fa1f fc85 	uxth.w	ip, r5
 8025cb2:	10d6      	asrs	r6, r2, #3
 8025cb4:	00d0      	lsls	r0, r2, #3
 8025cb6:	43ed      	mvns	r5, r5
 8025cb8:	f004 04f8 	and.w	r4, r4, #248	; 0xf8
 8025cbc:	f3c1 4207 	ubfx	r2, r1, #16, #8
 8025cc0:	b2eb      	uxtb	r3, r5
 8025cc2:	b2c0      	uxtb	r0, r0
 8025cc4:	fb12 f20c 	smulbb	r2, r2, ip
 8025cc8:	ea44 1454 	orr.w	r4, r4, r4, lsr #5
 8025ccc:	fb04 2403 	mla	r4, r4, r3, r2
 8025cd0:	ea40 1250 	orr.w	r2, r0, r0, lsr #5
 8025cd4:	b2c8      	uxtb	r0, r1
 8025cd6:	f006 06fc 	and.w	r6, r6, #252	; 0xfc
 8025cda:	b2fd      	uxtb	r5, r7
 8025cdc:	fb10 f00c 	smulbb	r0, r0, ip
 8025ce0:	b2a4      	uxth	r4, r4
 8025ce2:	fb02 0003 	mla	r0, r2, r3, r0
 8025ce6:	ea46 1696 	orr.w	r6, r6, r6, lsr #6
 8025cea:	fb15 f50c 	smulbb	r5, r5, ip
 8025cee:	fb06 5503 	mla	r5, r6, r3, r5
 8025cf2:	b283      	uxth	r3, r0
 8025cf4:	1c60      	adds	r0, r4, #1
 8025cf6:	b2ad      	uxth	r5, r5
 8025cf8:	eb00 2414 	add.w	r4, r0, r4, lsr #8
 8025cfc:	1c58      	adds	r0, r3, #1
 8025cfe:	eb00 2013 	add.w	r0, r0, r3, lsr #8
 8025d02:	1c6b      	adds	r3, r5, #1
 8025d04:	eb03 2515 	add.w	r5, r3, r5, lsr #8
 8025d08:	f404 4478 	and.w	r4, r4, #63488	; 0xf800
 8025d0c:	f3c0 20c4 	ubfx	r0, r0, #11, #5
 8025d10:	096d      	lsrs	r5, r5, #5
 8025d12:	4320      	orrs	r0, r4
 8025d14:	f405 65fc 	and.w	r5, r5, #2016	; 0x7e0
 8025d18:	4328      	orrs	r0, r5
 8025d1a:	e7be      	b.n	8025c9a <_ZNK8touchgfx8LCD16bpp17DecompressorL8_L418blendPixelARGB8888Emtih+0x26>
 8025d1c:	00fff800 	.word	0x00fff800

08025d20 <_ZN8touchgfx8LCD16bpp17DecompressorL8_L416blitCopyARGB8888EPKhS3_RKNS_4RectES6_h>:
 8025d20:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 8025d24:	461c      	mov	r4, r3
 8025d26:	b08d      	sub	sp, #52	; 0x34
 8025d28:	460d      	mov	r5, r1
 8025d2a:	9b16      	ldr	r3, [sp, #88]	; 0x58
 8025d2c:	6861      	ldr	r1, [r4, #4]
 8025d2e:	f89d 905c 	ldrb.w	r9, [sp, #92]	; 0x5c
 8025d32:	4680      	mov	r8, r0
 8025d34:	6820      	ldr	r0, [r4, #0]
 8025d36:	4616      	mov	r6, r2
 8025d38:	aa08      	add	r2, sp, #32
 8025d3a:	c203      	stmia	r2!, {r0, r1}
 8025d3c:	6818      	ldr	r0, [r3, #0]
 8025d3e:	6859      	ldr	r1, [r3, #4]
 8025d40:	aa0a      	add	r2, sp, #40	; 0x28
 8025d42:	c203      	stmia	r2!, {r0, r1}
 8025d44:	a808      	add	r0, sp, #32
 8025d46:	f7ef f93f 	bl	8014fc8 <_ZN8touchgfx21DisplayTransformation29transformDisplayToFrameBufferERNS_4RectE>
 8025d4a:	4621      	mov	r1, r4
 8025d4c:	a80a      	add	r0, sp, #40	; 0x28
 8025d4e:	f7ef f97f 	bl	8015050 <_ZN8touchgfx21DisplayTransformation29transformDisplayToFrameBufferERNS_4RectERKS1_>
 8025d52:	f9bd 2028 	ldrsh.w	r2, [sp, #40]	; 0x28
 8025d56:	f9bd 702e 	ldrsh.w	r7, [sp, #46]	; 0x2e
 8025d5a:	f9bd b02c 	ldrsh.w	fp, [sp, #44]	; 0x2c
 8025d5e:	f002 0301 	and.w	r3, r2, #1
 8025d62:	9303      	str	r3, [sp, #12]
 8025d64:	f9bd 3024 	ldrsh.w	r3, [sp, #36]	; 0x24
 8025d68:	f003 0101 	and.w	r1, r3, #1
 8025d6c:	9102      	str	r1, [sp, #8]
 8025d6e:	9802      	ldr	r0, [sp, #8]
 8025d70:	f9bd 102a 	ldrsh.w	r1, [sp, #42]	; 0x2a
 8025d74:	4403      	add	r3, r0
 8025d76:	fb01 2303 	mla	r3, r1, r3, r2
 8025d7a:	f04f 0a02 	mov.w	sl, #2
 8025d7e:	fb93 f3fa 	sdiv	r3, r3, sl
 8025d82:	441d      	add	r5, r3
 8025d84:	f8bd 3020 	ldrh.w	r3, [sp, #32]
 8025d88:	441a      	add	r2, r3
 8025d8a:	f8ad 2028 	strh.w	r2, [sp, #40]	; 0x28
 8025d8e:	f8bd 3022 	ldrh.w	r3, [sp, #34]	; 0x22
 8025d92:	4a3f      	ldr	r2, [pc, #252]	; (8025e90 <_ZN8touchgfx8LCD16bpp17DecompressorL8_L416blitCopyARGB8888EPKhS3_RKNS_4RectES6_h+0x170>)
 8025d94:	9205      	str	r2, [sp, #20]
 8025d96:	4419      	add	r1, r3
 8025d98:	6810      	ldr	r0, [r2, #0]
 8025d9a:	f8ad 102a 	strh.w	r1, [sp, #42]	; 0x2a
 8025d9e:	6803      	ldr	r3, [r0, #0]
 8025da0:	6a9b      	ldr	r3, [r3, #40]	; 0x28
 8025da2:	4798      	blx	r3
 8025da4:	4b3b      	ldr	r3, [pc, #236]	; (8025e94 <_ZN8touchgfx8LCD16bpp17DecompressorL8_L416blitCopyARGB8888EPKhS3_RKNS_4RectES6_h+0x174>)
 8025da6:	f9bd 402a 	ldrsh.w	r4, [sp, #42]	; 0x2a
 8025daa:	8819      	ldrh	r1, [r3, #0]
 8025dac:	f9bd c028 	ldrsh.w	ip, [sp, #40]	; 0x28
 8025db0:	fb01 c404 	mla	r4, r1, r4, ip
 8025db4:	eb00 0444 	add.w	r4, r0, r4, lsl #1
 8025db8:	434f      	muls	r7, r1
 8025dba:	e9cd 3a06 	strd	r3, sl, [sp, #24]
 8025dbe:	eb04 0247 	add.w	r2, r4, r7, lsl #1
 8025dc2:	3604      	adds	r6, #4
 8025dc4:	9204      	str	r2, [sp, #16]
 8025dc6:	9b04      	ldr	r3, [sp, #16]
 8025dc8:	429c      	cmp	r4, r3
 8025dca:	d258      	bcs.n	8025e7e <_ZN8touchgfx8LCD16bpp17DecompressorL8_L416blitCopyARGB8888EPKhS3_RKNS_4RectES6_h+0x15e>
 8025dcc:	9b03      	ldr	r3, [sp, #12]
 8025dce:	2b00      	cmp	r3, #0
 8025dd0:	d034      	beq.n	8025e3c <_ZN8touchgfx8LCD16bpp17DecompressorL8_L416blitCopyARGB8888EPKhS3_RKNS_4RectES6_h+0x11c>
 8025dd2:	782b      	ldrb	r3, [r5, #0]
 8025dd4:	f003 030f 	and.w	r3, r3, #15
 8025dd8:	1c6f      	adds	r7, r5, #1
 8025dda:	f856 1023 	ldr.w	r1, [r6, r3, lsl #2]
 8025dde:	0e0b      	lsrs	r3, r1, #24
 8025de0:	d006      	beq.n	8025df0 <_ZN8touchgfx8LCD16bpp17DecompressorL8_L416blitCopyARGB8888EPKhS3_RKNS_4RectES6_h+0xd0>
 8025de2:	8822      	ldrh	r2, [r4, #0]
 8025de4:	9300      	str	r3, [sp, #0]
 8025de6:	4640      	mov	r0, r8
 8025de8:	464b      	mov	r3, r9
 8025dea:	f7ff ff43 	bl	8025c74 <_ZNK8touchgfx8LCD16bpp17DecompressorL8_L418blendPixelARGB8888Emtih>
 8025dee:	8020      	strh	r0, [r4, #0]
 8025df0:	3402      	adds	r4, #2
 8025df2:	f10b 3aff 	add.w	sl, fp, #4294967295
 8025df6:	f1ba 0f01 	cmp.w	sl, #1
 8025dfa:	dd22      	ble.n	8025e42 <_ZN8touchgfx8LCD16bpp17DecompressorL8_L416blitCopyARGB8888EPKhS3_RKNS_4RectES6_h+0x122>
 8025dfc:	783b      	ldrb	r3, [r7, #0]
 8025dfe:	091b      	lsrs	r3, r3, #4
 8025e00:	f856 1023 	ldr.w	r1, [r6, r3, lsl #2]
 8025e04:	0e0b      	lsrs	r3, r1, #24
 8025e06:	d006      	beq.n	8025e16 <_ZN8touchgfx8LCD16bpp17DecompressorL8_L416blitCopyARGB8888EPKhS3_RKNS_4RectES6_h+0xf6>
 8025e08:	8822      	ldrh	r2, [r4, #0]
 8025e0a:	9300      	str	r3, [sp, #0]
 8025e0c:	4640      	mov	r0, r8
 8025e0e:	464b      	mov	r3, r9
 8025e10:	f7ff ff30 	bl	8025c74 <_ZNK8touchgfx8LCD16bpp17DecompressorL8_L418blendPixelARGB8888Emtih>
 8025e14:	8020      	strh	r0, [r4, #0]
 8025e16:	f817 3b01 	ldrb.w	r3, [r7], #1
 8025e1a:	f003 030f 	and.w	r3, r3, #15
 8025e1e:	f856 1023 	ldr.w	r1, [r6, r3, lsl #2]
 8025e22:	0e0b      	lsrs	r3, r1, #24
 8025e24:	d006      	beq.n	8025e34 <_ZN8touchgfx8LCD16bpp17DecompressorL8_L416blitCopyARGB8888EPKhS3_RKNS_4RectES6_h+0x114>
 8025e26:	8862      	ldrh	r2, [r4, #2]
 8025e28:	9300      	str	r3, [sp, #0]
 8025e2a:	4640      	mov	r0, r8
 8025e2c:	464b      	mov	r3, r9
 8025e2e:	f7ff ff21 	bl	8025c74 <_ZNK8touchgfx8LCD16bpp17DecompressorL8_L418blendPixelARGB8888Emtih>
 8025e32:	8060      	strh	r0, [r4, #2]
 8025e34:	3404      	adds	r4, #4
 8025e36:	f1aa 0a02 	sub.w	sl, sl, #2
 8025e3a:	e7dc      	b.n	8025df6 <_ZN8touchgfx8LCD16bpp17DecompressorL8_L416blitCopyARGB8888EPKhS3_RKNS_4RectES6_h+0xd6>
 8025e3c:	462f      	mov	r7, r5
 8025e3e:	46da      	mov	sl, fp
 8025e40:	e7d9      	b.n	8025df6 <_ZN8touchgfx8LCD16bpp17DecompressorL8_L416blitCopyARGB8888EPKhS3_RKNS_4RectES6_h+0xd6>
 8025e42:	d10d      	bne.n	8025e60 <_ZN8touchgfx8LCD16bpp17DecompressorL8_L416blitCopyARGB8888EPKhS3_RKNS_4RectES6_h+0x140>
 8025e44:	783b      	ldrb	r3, [r7, #0]
 8025e46:	091b      	lsrs	r3, r3, #4
 8025e48:	f856 1023 	ldr.w	r1, [r6, r3, lsl #2]
 8025e4c:	0e0b      	lsrs	r3, r1, #24
 8025e4e:	d006      	beq.n	8025e5e <_ZN8touchgfx8LCD16bpp17DecompressorL8_L416blitCopyARGB8888EPKhS3_RKNS_4RectES6_h+0x13e>
 8025e50:	8822      	ldrh	r2, [r4, #0]
 8025e52:	9300      	str	r3, [sp, #0]
 8025e54:	4640      	mov	r0, r8
 8025e56:	464b      	mov	r3, r9
 8025e58:	f7ff ff0c 	bl	8025c74 <_ZNK8touchgfx8LCD16bpp17DecompressorL8_L418blendPixelARGB8888Emtih>
 8025e5c:	8020      	strh	r0, [r4, #0]
 8025e5e:	3402      	adds	r4, #2
 8025e60:	9b06      	ldr	r3, [sp, #24]
 8025e62:	9a02      	ldr	r2, [sp, #8]
 8025e64:	881b      	ldrh	r3, [r3, #0]
 8025e66:	eba3 030b 	sub.w	r3, r3, fp
 8025e6a:	eb04 0443 	add.w	r4, r4, r3, lsl #1
 8025e6e:	f9bd 3024 	ldrsh.w	r3, [sp, #36]	; 0x24
 8025e72:	4413      	add	r3, r2
 8025e74:	9a07      	ldr	r2, [sp, #28]
 8025e76:	fb93 f3f2 	sdiv	r3, r3, r2
 8025e7a:	441d      	add	r5, r3
 8025e7c:	e7a3      	b.n	8025dc6 <_ZN8touchgfx8LCD16bpp17DecompressorL8_L416blitCopyARGB8888EPKhS3_RKNS_4RectES6_h+0xa6>
 8025e7e:	9b05      	ldr	r3, [sp, #20]
 8025e80:	6818      	ldr	r0, [r3, #0]
 8025e82:	6803      	ldr	r3, [r0, #0]
 8025e84:	6adb      	ldr	r3, [r3, #44]	; 0x2c
 8025e86:	4798      	blx	r3
 8025e88:	b00d      	add	sp, #52	; 0x34
 8025e8a:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
 8025e8e:	bf00      	nop
 8025e90:	20012f24 	.word	0x20012f24
 8025e94:	20012f1e 	.word	0x20012f1e

08025e98 <_ZNK8touchgfx8LCD16bpp17DecompressorL8_L416blendPixelRGB888EPKhthh>:
 8025e98:	b570      	push	{r4, r5, r6, lr}
 8025e9a:	1214      	asrs	r4, r2, #8
 8025e9c:	788d      	ldrb	r5, [r1, #2]
 8025e9e:	f89d 6010 	ldrb.w	r6, [sp, #16]
 8025ea2:	f004 04f8 	and.w	r4, r4, #248	; 0xf8
 8025ea6:	ea44 1454 	orr.w	r4, r4, r4, lsr #5
 8025eaa:	fb15 f503 	smulbb	r5, r5, r3
 8025eae:	fb04 5506 	mla	r5, r4, r6, r5
 8025eb2:	10d0      	asrs	r0, r2, #3
 8025eb4:	784c      	ldrb	r4, [r1, #1]
 8025eb6:	7809      	ldrb	r1, [r1, #0]
 8025eb8:	00d2      	lsls	r2, r2, #3
 8025eba:	f000 00fc 	and.w	r0, r0, #252	; 0xfc
 8025ebe:	b2d2      	uxtb	r2, r2
 8025ec0:	ea40 1090 	orr.w	r0, r0, r0, lsr #6
 8025ec4:	fb14 f403 	smulbb	r4, r4, r3
 8025ec8:	ea42 1252 	orr.w	r2, r2, r2, lsr #5
 8025ecc:	fb11 f303 	smulbb	r3, r1, r3
 8025ed0:	fb00 4406 	mla	r4, r0, r6, r4
 8025ed4:	fb02 3306 	mla	r3, r2, r6, r3
 8025ed8:	b2ad      	uxth	r5, r5
 8025eda:	b29b      	uxth	r3, r3
 8025edc:	b2a4      	uxth	r4, r4
 8025ede:	1c68      	adds	r0, r5, #1
 8025ee0:	eb00 2515 	add.w	r5, r0, r5, lsr #8
 8025ee4:	1c62      	adds	r2, r4, #1
 8025ee6:	1c58      	adds	r0, r3, #1
 8025ee8:	eb00 2013 	add.w	r0, r0, r3, lsr #8
 8025eec:	eb02 2414 	add.w	r4, r2, r4, lsr #8
 8025ef0:	f405 4578 	and.w	r5, r5, #63488	; 0xf800
 8025ef4:	f3c0 20c4 	ubfx	r0, r0, #11, #5
 8025ef8:	0964      	lsrs	r4, r4, #5
 8025efa:	4328      	orrs	r0, r5
 8025efc:	f404 64fc 	and.w	r4, r4, #2016	; 0x7e0
 8025f00:	4320      	orrs	r0, r4
 8025f02:	bd70      	pop	{r4, r5, r6, pc}

08025f04 <_ZN8touchgfx8LCD16bpp17DecompressorL8_L414blitCopyRGB888EPKhS3_RKNS_4RectES6_h>:
 8025f04:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 8025f08:	b08f      	sub	sp, #60	; 0x3c
 8025f0a:	461c      	mov	r4, r3
 8025f0c:	f89d 7064 	ldrb.w	r7, [sp, #100]	; 0x64
 8025f10:	9b18      	ldr	r3, [sp, #96]	; 0x60
 8025f12:	4682      	mov	sl, r0
 8025f14:	460e      	mov	r6, r1
 8025f16:	4615      	mov	r5, r2
 8025f18:	2f00      	cmp	r7, #0
 8025f1a:	f000 8142 	beq.w	80261a2 <_ZN8touchgfx8LCD16bpp17DecompressorL8_L414blitCopyRGB888EPKhS3_RKNS_4RectES6_h+0x29e>
 8025f1e:	6820      	ldr	r0, [r4, #0]
 8025f20:	6861      	ldr	r1, [r4, #4]
 8025f22:	aa0a      	add	r2, sp, #40	; 0x28
 8025f24:	c203      	stmia	r2!, {r0, r1}
 8025f26:	6818      	ldr	r0, [r3, #0]
 8025f28:	6859      	ldr	r1, [r3, #4]
 8025f2a:	aa0c      	add	r2, sp, #48	; 0x30
 8025f2c:	c203      	stmia	r2!, {r0, r1}
 8025f2e:	a80a      	add	r0, sp, #40	; 0x28
 8025f30:	f7ef f84a 	bl	8014fc8 <_ZN8touchgfx21DisplayTransformation29transformDisplayToFrameBufferERNS_4RectE>
 8025f34:	4621      	mov	r1, r4
 8025f36:	a80c      	add	r0, sp, #48	; 0x30
 8025f38:	f7ef f88a 	bl	8015050 <_ZN8touchgfx21DisplayTransformation29transformDisplayToFrameBufferERNS_4RectERKS1_>
 8025f3c:	f9bd 2030 	ldrsh.w	r2, [sp, #48]	; 0x30
 8025f40:	f9bd b036 	ldrsh.w	fp, [sp, #54]	; 0x36
 8025f44:	f002 0301 	and.w	r3, r2, #1
 8025f48:	9306      	str	r3, [sp, #24]
 8025f4a:	f9bd 302c 	ldrsh.w	r3, [sp, #44]	; 0x2c
 8025f4e:	f003 0101 	and.w	r1, r3, #1
 8025f52:	9105      	str	r1, [sp, #20]
 8025f54:	9805      	ldr	r0, [sp, #20]
 8025f56:	f9bd 1032 	ldrsh.w	r1, [sp, #50]	; 0x32
 8025f5a:	4403      	add	r3, r0
 8025f5c:	fb01 2303 	mla	r3, r1, r3, r2
 8025f60:	f04f 0802 	mov.w	r8, #2
 8025f64:	fb93 f3f8 	sdiv	r3, r3, r8
 8025f68:	441e      	add	r6, r3
 8025f6a:	f8bd 3028 	ldrh.w	r3, [sp, #40]	; 0x28
 8025f6e:	441a      	add	r2, r3
 8025f70:	f8bd 302a 	ldrh.w	r3, [sp, #42]	; 0x2a
 8025f74:	f8ad 2030 	strh.w	r2, [sp, #48]	; 0x30
 8025f78:	4419      	add	r1, r3
 8025f7a:	f9bd 3034 	ldrsh.w	r3, [sp, #52]	; 0x34
 8025f7e:	9303      	str	r3, [sp, #12]
 8025f80:	4b89      	ldr	r3, [pc, #548]	; (80261a8 <_ZN8touchgfx8LCD16bpp17DecompressorL8_L414blitCopyRGB888EPKhS3_RKNS_4RectES6_h+0x2a4>)
 8025f82:	f8ad 1032 	strh.w	r1, [sp, #50]	; 0x32
 8025f86:	6818      	ldr	r0, [r3, #0]
 8025f88:	6803      	ldr	r3, [r0, #0]
 8025f8a:	6a9b      	ldr	r3, [r3, #40]	; 0x28
 8025f8c:	4798      	blx	r3
 8025f8e:	4a87      	ldr	r2, [pc, #540]	; (80261ac <_ZN8touchgfx8LCD16bpp17DecompressorL8_L414blitCopyRGB888EPKhS3_RKNS_4RectES6_h+0x2a8>)
 8025f90:	f9bd 4032 	ldrsh.w	r4, [sp, #50]	; 0x32
 8025f94:	8813      	ldrh	r3, [r2, #0]
 8025f96:	f9bd 9030 	ldrsh.w	r9, [sp, #48]	; 0x30
 8025f9a:	2fff      	cmp	r7, #255	; 0xff
 8025f9c:	fb03 9404 	mla	r4, r3, r4, r9
 8025fa0:	eb00 0444 	add.w	r4, r0, r4, lsl #1
 8025fa4:	f105 0504 	add.w	r5, r5, #4
 8025fa8:	4694      	mov	ip, r2
 8025faa:	fb03 f30b 	mul.w	r3, r3, fp
 8025fae:	d071      	beq.n	8026094 <_ZN8touchgfx8LCD16bpp17DecompressorL8_L414blitCopyRGB888EPKhS3_RKNS_4RectES6_h+0x190>
 8025fb0:	eb04 0343 	add.w	r3, r4, r3, lsl #1
 8025fb4:	43f9      	mvns	r1, r7
 8025fb6:	e9cd 3207 	strd	r3, r2, [sp, #28]
 8025fba:	b2c9      	uxtb	r1, r1
 8025fbc:	9104      	str	r1, [sp, #16]
 8025fbe:	f8cd 8024 	str.w	r8, [sp, #36]	; 0x24
 8025fc2:	9b07      	ldr	r3, [sp, #28]
 8025fc4:	42a3      	cmp	r3, r4
 8025fc6:	f240 80e7 	bls.w	8026198 <_ZN8touchgfx8LCD16bpp17DecompressorL8_L414blitCopyRGB888EPKhS3_RKNS_4RectES6_h+0x294>
 8025fca:	9b06      	ldr	r3, [sp, #24]
 8025fcc:	2b00      	cmp	r3, #0
 8025fce:	d03d      	beq.n	802604c <_ZN8touchgfx8LCD16bpp17DecompressorL8_L414blitCopyRGB888EPKhS3_RKNS_4RectES6_h+0x148>
 8025fd0:	7831      	ldrb	r1, [r6, #0]
 8025fd2:	9b04      	ldr	r3, [sp, #16]
 8025fd4:	8822      	ldrh	r2, [r4, #0]
 8025fd6:	9300      	str	r3, [sp, #0]
 8025fd8:	f001 010f 	and.w	r1, r1, #15
 8025fdc:	eb01 0141 	add.w	r1, r1, r1, lsl #1
 8025fe0:	463b      	mov	r3, r7
 8025fe2:	4429      	add	r1, r5
 8025fe4:	4650      	mov	r0, sl
 8025fe6:	f7ff ff57 	bl	8025e98 <_ZNK8touchgfx8LCD16bpp17DecompressorL8_L416blendPixelRGB888EPKhthh>
 8025fea:	9b03      	ldr	r3, [sp, #12]
 8025fec:	f824 0b02 	strh.w	r0, [r4], #2
 8025ff0:	f106 0801 	add.w	r8, r6, #1
 8025ff4:	f103 3bff 	add.w	fp, r3, #4294967295
 8025ff8:	f1bb 0f01 	cmp.w	fp, #1
 8025ffc:	46a1      	mov	r9, r4
 8025ffe:	f104 0404 	add.w	r4, r4, #4
 8026002:	dd27      	ble.n	8026054 <_ZN8touchgfx8LCD16bpp17DecompressorL8_L414blitCopyRGB888EPKhS3_RKNS_4RectES6_h+0x150>
 8026004:	f898 1000 	ldrb.w	r1, [r8]
 8026008:	9b04      	ldr	r3, [sp, #16]
 802600a:	f834 2c04 	ldrh.w	r2, [r4, #-4]
 802600e:	9300      	str	r3, [sp, #0]
 8026010:	0909      	lsrs	r1, r1, #4
 8026012:	eb01 0141 	add.w	r1, r1, r1, lsl #1
 8026016:	463b      	mov	r3, r7
 8026018:	4429      	add	r1, r5
 802601a:	4650      	mov	r0, sl
 802601c:	f7ff ff3c 	bl	8025e98 <_ZNK8touchgfx8LCD16bpp17DecompressorL8_L416blendPixelRGB888EPKhthh>
 8026020:	f824 0c04 	strh.w	r0, [r4, #-4]
 8026024:	f818 1b01 	ldrb.w	r1, [r8], #1
 8026028:	9b04      	ldr	r3, [sp, #16]
 802602a:	f834 2c02 	ldrh.w	r2, [r4, #-2]
 802602e:	9300      	str	r3, [sp, #0]
 8026030:	f001 010f 	and.w	r1, r1, #15
 8026034:	eb01 0141 	add.w	r1, r1, r1, lsl #1
 8026038:	463b      	mov	r3, r7
 802603a:	4429      	add	r1, r5
 802603c:	4650      	mov	r0, sl
 802603e:	f7ff ff2b 	bl	8025e98 <_ZNK8touchgfx8LCD16bpp17DecompressorL8_L416blendPixelRGB888EPKhthh>
 8026042:	f1ab 0b02 	sub.w	fp, fp, #2
 8026046:	f824 0c02 	strh.w	r0, [r4, #-2]
 802604a:	e7d5      	b.n	8025ff8 <_ZN8touchgfx8LCD16bpp17DecompressorL8_L414blitCopyRGB888EPKhS3_RKNS_4RectES6_h+0xf4>
 802604c:	46b0      	mov	r8, r6
 802604e:	f8dd b00c 	ldr.w	fp, [sp, #12]
 8026052:	e7d1      	b.n	8025ff8 <_ZN8touchgfx8LCD16bpp17DecompressorL8_L414blitCopyRGB888EPKhS3_RKNS_4RectES6_h+0xf4>
 8026054:	d10f      	bne.n	8026076 <_ZN8touchgfx8LCD16bpp17DecompressorL8_L414blitCopyRGB888EPKhS3_RKNS_4RectES6_h+0x172>
 8026056:	f898 1000 	ldrb.w	r1, [r8]
 802605a:	9b04      	ldr	r3, [sp, #16]
 802605c:	f8b9 2000 	ldrh.w	r2, [r9]
 8026060:	9300      	str	r3, [sp, #0]
 8026062:	0909      	lsrs	r1, r1, #4
 8026064:	eb01 0141 	add.w	r1, r1, r1, lsl #1
 8026068:	463b      	mov	r3, r7
 802606a:	4429      	add	r1, r5
 802606c:	4650      	mov	r0, sl
 802606e:	f7ff ff13 	bl	8025e98 <_ZNK8touchgfx8LCD16bpp17DecompressorL8_L416blendPixelRGB888EPKhthh>
 8026072:	f829 0b02 	strh.w	r0, [r9], #2
 8026076:	9b08      	ldr	r3, [sp, #32]
 8026078:	9a05      	ldr	r2, [sp, #20]
 802607a:	881c      	ldrh	r4, [r3, #0]
 802607c:	9b03      	ldr	r3, [sp, #12]
 802607e:	1ae4      	subs	r4, r4, r3
 8026080:	f9bd 302c 	ldrsh.w	r3, [sp, #44]	; 0x2c
 8026084:	eb09 0444 	add.w	r4, r9, r4, lsl #1
 8026088:	4413      	add	r3, r2
 802608a:	9a09      	ldr	r2, [sp, #36]	; 0x24
 802608c:	fb93 f3f2 	sdiv	r3, r3, r2
 8026090:	441e      	add	r6, r3
 8026092:	e796      	b.n	8025fc2 <_ZN8touchgfx8LCD16bpp17DecompressorL8_L414blitCopyRGB888EPKhS3_RKNS_4RectES6_h+0xbe>
 8026094:	4f46      	ldr	r7, [pc, #280]	; (80261b0 <_ZN8touchgfx8LCD16bpp17DecompressorL8_L414blitCopyRGB888EPKhS3_RKNS_4RectES6_h+0x2ac>)
 8026096:	eb04 0343 	add.w	r3, r4, r3, lsl #1
 802609a:	42a3      	cmp	r3, r4
 802609c:	d97c      	bls.n	8026198 <_ZN8touchgfx8LCD16bpp17DecompressorL8_L414blitCopyRGB888EPKhS3_RKNS_4RectES6_h+0x294>
 802609e:	9a06      	ldr	r2, [sp, #24]
 80260a0:	2a00      	cmp	r2, #0
 80260a2:	d054      	beq.n	802614e <_ZN8touchgfx8LCD16bpp17DecompressorL8_L414blitCopyRGB888EPKhS3_RKNS_4RectES6_h+0x24a>
 80260a4:	7830      	ldrb	r0, [r6, #0]
 80260a6:	f000 000f 	and.w	r0, r0, #15
 80260aa:	eb00 0040 	add.w	r0, r0, r0, lsl #1
 80260ae:	eb05 0e00 	add.w	lr, r5, r0
 80260b2:	5c28      	ldrb	r0, [r5, r0]
 80260b4:	f89e 2002 	ldrb.w	r2, [lr, #2]
 80260b8:	f89e e001 	ldrb.w	lr, [lr, #1]
 80260bc:	ea4f 0ece 	mov.w	lr, lr, lsl #3
 80260c0:	f40e 6efc 	and.w	lr, lr, #2016	; 0x7e0
 80260c4:	ea07 2202 	and.w	r2, r7, r2, lsl #8
 80260c8:	ea42 020e 	orr.w	r2, r2, lr
 80260cc:	ea42 02d0 	orr.w	r2, r2, r0, lsr #3
 80260d0:	f824 2b02 	strh.w	r2, [r4], #2
 80260d4:	9a03      	ldr	r2, [sp, #12]
 80260d6:	1c71      	adds	r1, r6, #1
 80260d8:	f102 3eff 	add.w	lr, r2, #4294967295
 80260dc:	f1be 0f01 	cmp.w	lr, #1
 80260e0:	4620      	mov	r0, r4
 80260e2:	f104 0404 	add.w	r4, r4, #4
 80260e6:	dd36      	ble.n	8026156 <_ZN8touchgfx8LCD16bpp17DecompressorL8_L414blitCopyRGB888EPKhS3_RKNS_4RectES6_h+0x252>
 80260e8:	7808      	ldrb	r0, [r1, #0]
 80260ea:	0900      	lsrs	r0, r0, #4
 80260ec:	eb00 0040 	add.w	r0, r0, r0, lsl #1
 80260f0:	eb05 0a00 	add.w	sl, r5, r0
 80260f4:	f1ae 0e02 	sub.w	lr, lr, #2
 80260f8:	f89a 2001 	ldrb.w	r2, [sl, #1]
 80260fc:	f89a 9002 	ldrb.w	r9, [sl, #2]
 8026100:	00d2      	lsls	r2, r2, #3
 8026102:	ea07 2909 	and.w	r9, r7, r9, lsl #8
 8026106:	f402 62fc 	and.w	r2, r2, #2016	; 0x7e0
 802610a:	ea49 0202 	orr.w	r2, r9, r2
 802610e:	f815 9000 	ldrb.w	r9, [r5, r0]
 8026112:	ea42 02d9 	orr.w	r2, r2, r9, lsr #3
 8026116:	f824 2c04 	strh.w	r2, [r4, #-4]
 802611a:	f811 0b01 	ldrb.w	r0, [r1], #1
 802611e:	f000 000f 	and.w	r0, r0, #15
 8026122:	eb00 0040 	add.w	r0, r0, r0, lsl #1
 8026126:	eb05 0a00 	add.w	sl, r5, r0
 802612a:	f89a 2001 	ldrb.w	r2, [sl, #1]
 802612e:	f89a 9002 	ldrb.w	r9, [sl, #2]
 8026132:	00d2      	lsls	r2, r2, #3
 8026134:	ea07 2909 	and.w	r9, r7, r9, lsl #8
 8026138:	f402 62fc 	and.w	r2, r2, #2016	; 0x7e0
 802613c:	ea49 0202 	orr.w	r2, r9, r2
 8026140:	f815 9000 	ldrb.w	r9, [r5, r0]
 8026144:	ea42 02d9 	orr.w	r2, r2, r9, lsr #3
 8026148:	f824 2c02 	strh.w	r2, [r4, #-2]
 802614c:	e7c6      	b.n	80260dc <_ZN8touchgfx8LCD16bpp17DecompressorL8_L414blitCopyRGB888EPKhS3_RKNS_4RectES6_h+0x1d8>
 802614e:	4631      	mov	r1, r6
 8026150:	f8dd e00c 	ldr.w	lr, [sp, #12]
 8026154:	e7c2      	b.n	80260dc <_ZN8touchgfx8LCD16bpp17DecompressorL8_L414blitCopyRGB888EPKhS3_RKNS_4RectES6_h+0x1d8>
 8026156:	d111      	bne.n	802617c <_ZN8touchgfx8LCD16bpp17DecompressorL8_L414blitCopyRGB888EPKhS3_RKNS_4RectES6_h+0x278>
 8026158:	7809      	ldrb	r1, [r1, #0]
 802615a:	0909      	lsrs	r1, r1, #4
 802615c:	eb01 0141 	add.w	r1, r1, r1, lsl #1
 8026160:	186c      	adds	r4, r5, r1
 8026162:	5c69      	ldrb	r1, [r5, r1]
 8026164:	78a2      	ldrb	r2, [r4, #2]
 8026166:	7864      	ldrb	r4, [r4, #1]
 8026168:	00e4      	lsls	r4, r4, #3
 802616a:	ea07 2202 	and.w	r2, r7, r2, lsl #8
 802616e:	f404 64fc 	and.w	r4, r4, #2016	; 0x7e0
 8026172:	4322      	orrs	r2, r4
 8026174:	ea42 02d1 	orr.w	r2, r2, r1, lsr #3
 8026178:	f820 2b02 	strh.w	r2, [r0], #2
 802617c:	9a03      	ldr	r2, [sp, #12]
 802617e:	f8bc 4000 	ldrh.w	r4, [ip]
 8026182:	9905      	ldr	r1, [sp, #20]
 8026184:	1aa4      	subs	r4, r4, r2
 8026186:	f9bd 202c 	ldrsh.w	r2, [sp, #44]	; 0x2c
 802618a:	eb00 0444 	add.w	r4, r0, r4, lsl #1
 802618e:	440a      	add	r2, r1
 8026190:	fb92 f2f8 	sdiv	r2, r2, r8
 8026194:	4416      	add	r6, r2
 8026196:	e780      	b.n	802609a <_ZN8touchgfx8LCD16bpp17DecompressorL8_L414blitCopyRGB888EPKhS3_RKNS_4RectES6_h+0x196>
 8026198:	4b03      	ldr	r3, [pc, #12]	; (80261a8 <_ZN8touchgfx8LCD16bpp17DecompressorL8_L414blitCopyRGB888EPKhS3_RKNS_4RectES6_h+0x2a4>)
 802619a:	6818      	ldr	r0, [r3, #0]
 802619c:	6803      	ldr	r3, [r0, #0]
 802619e:	6adb      	ldr	r3, [r3, #44]	; 0x2c
 80261a0:	4798      	blx	r3
 80261a2:	b00f      	add	sp, #60	; 0x3c
 80261a4:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
 80261a8:	20012f24 	.word	0x20012f24
 80261ac:	20012f1e 	.word	0x20012f1e
 80261b0:	fffff800 	.word	0xfffff800

080261b4 <CRC_Lock>:
 80261b4:	b530      	push	{r4, r5, lr}
 80261b6:	4a20      	ldr	r2, [pc, #128]	; (8026238 <CRC_Lock+0x84>)
 80261b8:	6813      	ldr	r3, [r2, #0]
 80261ba:	f023 0301 	bic.w	r3, r3, #1
 80261be:	6013      	str	r3, [r2, #0]
 80261c0:	4b1e      	ldr	r3, [pc, #120]	; (802623c <CRC_Lock+0x88>)
 80261c2:	681a      	ldr	r2, [r3, #0]
 80261c4:	f64f 74f0 	movw	r4, #65520	; 0xfff0
 80261c8:	4022      	ands	r2, r4
 80261ca:	f24c 2540 	movw	r5, #49728	; 0xc240
 80261ce:	42aa      	cmp	r2, r5
 80261d0:	d005      	beq.n	80261de <CRC_Lock+0x2a>
 80261d2:	681b      	ldr	r3, [r3, #0]
 80261d4:	f24c 2270 	movw	r2, #49776	; 0xc270
 80261d8:	4023      	ands	r3, r4
 80261da:	4293      	cmp	r3, r2
 80261dc:	d124      	bne.n	8026228 <CRC_Lock+0x74>
 80261de:	4b18      	ldr	r3, [pc, #96]	; (8026240 <CRC_Lock+0x8c>)
 80261e0:	681b      	ldr	r3, [r3, #0]
 80261e2:	bb0b      	cbnz	r3, 8026228 <CRC_Lock+0x74>
 80261e4:	4b17      	ldr	r3, [pc, #92]	; (8026244 <CRC_Lock+0x90>)
 80261e6:	681a      	ldr	r2, [r3, #0]
 80261e8:	f3c2 020b 	ubfx	r2, r2, #0, #12
 80261ec:	f5b2 6f8a 	cmp.w	r2, #1104	; 0x450
 80261f0:	d00d      	beq.n	802620e <CRC_Lock+0x5a>
 80261f2:	681a      	ldr	r2, [r3, #0]
 80261f4:	f240 4483 	movw	r4, #1155	; 0x483
 80261f8:	f3c2 020b 	ubfx	r2, r2, #0, #12
 80261fc:	42a2      	cmp	r2, r4
 80261fe:	d006      	beq.n	802620e <CRC_Lock+0x5a>
 8026200:	681b      	ldr	r3, [r3, #0]
 8026202:	f240 4285 	movw	r2, #1157	; 0x485
 8026206:	f3c3 030b 	ubfx	r3, r3, #0, #12
 802620a:	4293      	cmp	r3, r2
 802620c:	d10c      	bne.n	8026228 <CRC_Lock+0x74>
 802620e:	4b0e      	ldr	r3, [pc, #56]	; (8026248 <CRC_Lock+0x94>)
 8026210:	2201      	movs	r2, #1
 8026212:	601a      	str	r2, [r3, #0]
 8026214:	681a      	ldr	r2, [r3, #0]
 8026216:	2a00      	cmp	r2, #0
 8026218:	d1fc      	bne.n	8026214 <CRC_Lock+0x60>
 802621a:	4b0c      	ldr	r3, [pc, #48]	; (802624c <CRC_Lock+0x98>)
 802621c:	6018      	str	r0, [r3, #0]
 802621e:	6818      	ldr	r0, [r3, #0]
 8026220:	1a43      	subs	r3, r0, r1
 8026222:	4258      	negs	r0, r3
 8026224:	4158      	adcs	r0, r3
 8026226:	bd30      	pop	{r4, r5, pc}
 8026228:	4b09      	ldr	r3, [pc, #36]	; (8026250 <CRC_Lock+0x9c>)
 802622a:	2201      	movs	r2, #1
 802622c:	601a      	str	r2, [r3, #0]
 802622e:	681a      	ldr	r2, [r3, #0]
 8026230:	2a00      	cmp	r2, #0
 8026232:	d1fc      	bne.n	802622e <CRC_Lock+0x7a>
 8026234:	4b07      	ldr	r3, [pc, #28]	; (8026254 <CRC_Lock+0xa0>)
 8026236:	e7f1      	b.n	802621c <CRC_Lock+0x68>
 8026238:	e0002000 	.word	0xe0002000
 802623c:	e000ed00 	.word	0xe000ed00
 8026240:	e0042000 	.word	0xe0042000
 8026244:	5c001000 	.word	0x5c001000
 8026248:	58024c08 	.word	0x58024c08
 802624c:	58024c00 	.word	0x58024c00
 8026250:	40023008 	.word	0x40023008
 8026254:	40023000 	.word	0x40023000

08026258 <_ZN8touchgfx8Gestures21registerEventListenerERNS_15UIEventListenerE>:
 8026258:	6101      	str	r1, [r0, #16]
 802625a:	4770      	bx	lr

0802625c <_ZN8touchgfx8Gestures4tickEv>:
 802625c:	7b83      	ldrb	r3, [r0, #14]
 802625e:	b14b      	cbz	r3, 8026274 <_ZN8touchgfx8Gestures4tickEv+0x18>
 8026260:	8903      	ldrh	r3, [r0, #8]
 8026262:	3301      	adds	r3, #1
 8026264:	b29b      	uxth	r3, r3
 8026266:	2b07      	cmp	r3, #7
 8026268:	8103      	strh	r3, [r0, #8]
 802626a:	bf81      	itttt	hi
 802626c:	2300      	movhi	r3, #0
 802626e:	8143      	strhhi	r3, [r0, #10]
 8026270:	8183      	strhhi	r3, [r0, #12]
 8026272:	7383      	strbhi	r3, [r0, #14]
 8026274:	4770      	bx	lr
	...

08026278 <_ZN8touchgfx8Gestures17registerDragEventEtttt>:
 8026278:	e92d 41ff 	stmdb	sp!, {r0, r1, r2, r3, r4, r5, r6, r7, r8, lr}
 802627c:	4698      	mov	r8, r3
 802627e:	8883      	ldrh	r3, [r0, #4]
 8026280:	f8ad 3006 	strh.w	r3, [sp, #6]
 8026284:	eba8 0303 	sub.w	r3, r8, r3
 8026288:	b21b      	sxth	r3, r3
 802628a:	4604      	mov	r4, r0
 802628c:	2b00      	cmp	r3, #0
 802628e:	4617      	mov	r7, r2
 8026290:	4a18      	ldr	r2, [pc, #96]	; (80262f4 <_ZN8touchgfx8Gestures17registerDragEventEtttt+0x7c>)
 8026292:	9200      	str	r2, [sp, #0]
 8026294:	bfb8      	it	lt
 8026296:	425b      	neglt	r3, r3
 8026298:	8aa2      	ldrh	r2, [r4, #20]
 802629a:	f8bd 5028 	ldrh.w	r5, [sp, #40]	; 0x28
 802629e:	f8ad 800a 	strh.w	r8, [sp, #10]
 80262a2:	b21b      	sxth	r3, r3
 80262a4:	460e      	mov	r6, r1
 80262a6:	4293      	cmp	r3, r2
 80262a8:	88c1      	ldrh	r1, [r0, #6]
 80262aa:	f8ad 1008 	strh.w	r1, [sp, #8]
 80262ae:	f04f 0000 	mov.w	r0, #0
 80262b2:	f88d 0004 	strb.w	r0, [sp, #4]
 80262b6:	f8ad 500c 	strh.w	r5, [sp, #12]
 80262ba:	dc07      	bgt.n	80262cc <_ZN8touchgfx8Gestures17registerDragEventEtttt+0x54>
 80262bc:	1a69      	subs	r1, r5, r1
 80262be:	b209      	sxth	r1, r1
 80262c0:	2900      	cmp	r1, #0
 80262c2:	bfb8      	it	lt
 80262c4:	4249      	neglt	r1, r1
 80262c6:	b209      	sxth	r1, r1
 80262c8:	428a      	cmp	r2, r1
 80262ca:	da10      	bge.n	80262ee <_ZN8touchgfx8Gestures17registerDragEventEtttt+0x76>
 80262cc:	6920      	ldr	r0, [r4, #16]
 80262ce:	6803      	ldr	r3, [r0, #0]
 80262d0:	4669      	mov	r1, sp
 80262d2:	685b      	ldr	r3, [r3, #4]
 80262d4:	4798      	blx	r3
 80262d6:	eba8 0606 	sub.w	r6, r8, r6
 80262da:	2300      	movs	r3, #0
 80262dc:	1bef      	subs	r7, r5, r7
 80262de:	2001      	movs	r0, #1
 80262e0:	8123      	strh	r3, [r4, #8]
 80262e2:	8166      	strh	r6, [r4, #10]
 80262e4:	81a7      	strh	r7, [r4, #12]
 80262e6:	f8a4 8004 	strh.w	r8, [r4, #4]
 80262ea:	80e5      	strh	r5, [r4, #6]
 80262ec:	73a0      	strb	r0, [r4, #14]
 80262ee:	b004      	add	sp, #16
 80262f0:	e8bd 81f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, pc}
 80262f4:	0802e928 	.word	0x0802e928

080262f8 <_ZN8touchgfx8Gestures18registerClickEventENS_10ClickEvent14ClickEventTypeEtt>:
 80262f8:	b5f0      	push	{r4, r5, r6, r7, lr}
 80262fa:	461e      	mov	r6, r3
 80262fc:	1e4b      	subs	r3, r1, #1
 80262fe:	2b01      	cmp	r3, #1
 8026300:	b085      	sub	sp, #20
 8026302:	4604      	mov	r4, r0
 8026304:	460d      	mov	r5, r1
 8026306:	4617      	mov	r7, r2
 8026308:	d84b      	bhi.n	80263a2 <_ZN8touchgfx8Gestures18registerClickEventENS_10ClickEvent14ClickEventTypeEtt+0xaa>
 802630a:	f9b0 200a 	ldrsh.w	r2, [r0, #10]
 802630e:	1cd3      	adds	r3, r2, #3
 8026310:	b29b      	uxth	r3, r3
 8026312:	2b06      	cmp	r3, #6
 8026314:	d916      	bls.n	8026344 <_ZN8touchgfx8Gestures18registerClickEventENS_10ClickEvent14ClickEventTypeEtt+0x4c>
 8026316:	f8df c0a0 	ldr.w	ip, [pc, #160]	; 80263b8 <_ZN8touchgfx8Gestures18registerClickEventENS_10ClickEvent14ClickEventTypeEtt+0xc0>
 802631a:	f8cd c004 	str.w	ip, [sp, #4]
 802631e:	f9b4 1004 	ldrsh.w	r1, [r4, #4]
 8026322:	f9b4 3006 	ldrsh.w	r3, [r4, #6]
 8026326:	6900      	ldr	r0, [r0, #16]
 8026328:	f8ad 100c 	strh.w	r1, [sp, #12]
 802632c:	f04f 0c00 	mov.w	ip, #0
 8026330:	f88d c008 	strb.w	ip, [sp, #8]
 8026334:	f8ad 200a 	strh.w	r2, [sp, #10]
 8026338:	f8ad 300e 	strh.w	r3, [sp, #14]
 802633c:	6803      	ldr	r3, [r0, #0]
 802633e:	a901      	add	r1, sp, #4
 8026340:	689b      	ldr	r3, [r3, #8]
 8026342:	4798      	blx	r3
 8026344:	f9b4 200c 	ldrsh.w	r2, [r4, #12]
 8026348:	1cd3      	adds	r3, r2, #3
 802634a:	b29b      	uxth	r3, r3
 802634c:	2b06      	cmp	r3, #6
 802634e:	d916      	bls.n	802637e <_ZN8touchgfx8Gestures18registerClickEventENS_10ClickEvent14ClickEventTypeEtt+0x86>
 8026350:	f8df c064 	ldr.w	ip, [pc, #100]	; 80263b8 <_ZN8touchgfx8Gestures18registerClickEventENS_10ClickEvent14ClickEventTypeEtt+0xc0>
 8026354:	f8cd c004 	str.w	ip, [sp, #4]
 8026358:	f9b4 1004 	ldrsh.w	r1, [r4, #4]
 802635c:	f9b4 3006 	ldrsh.w	r3, [r4, #6]
 8026360:	6920      	ldr	r0, [r4, #16]
 8026362:	f8ad 100c 	strh.w	r1, [sp, #12]
 8026366:	f04f 0c01 	mov.w	ip, #1
 802636a:	f88d c008 	strb.w	ip, [sp, #8]
 802636e:	f8ad 200a 	strh.w	r2, [sp, #10]
 8026372:	f8ad 300e 	strh.w	r3, [sp, #14]
 8026376:	6803      	ldr	r3, [r0, #0]
 8026378:	a901      	add	r1, sp, #4
 802637a:	689b      	ldr	r3, [r3, #8]
 802637c:	4798      	blx	r3
 802637e:	4b0d      	ldr	r3, [pc, #52]	; (80263b4 <_ZN8touchgfx8Gestures18registerClickEventENS_10ClickEvent14ClickEventTypeEtt+0xbc>)
 8026380:	9301      	str	r3, [sp, #4]
 8026382:	6920      	ldr	r0, [r4, #16]
 8026384:	f88d 5008 	strb.w	r5, [sp, #8]
 8026388:	2300      	movs	r3, #0
 802638a:	f8ad 700a 	strh.w	r7, [sp, #10]
 802638e:	f8ad 600c 	strh.w	r6, [sp, #12]
 8026392:	f8ad 300e 	strh.w	r3, [sp, #14]
 8026396:	6803      	ldr	r3, [r0, #0]
 8026398:	a901      	add	r1, sp, #4
 802639a:	681b      	ldr	r3, [r3, #0]
 802639c:	4798      	blx	r3
 802639e:	b005      	add	sp, #20
 80263a0:	bdf0      	pop	{r4, r5, r6, r7, pc}
 80263a2:	2900      	cmp	r1, #0
 80263a4:	d1eb      	bne.n	802637e <_ZN8touchgfx8Gestures18registerClickEventENS_10ClickEvent14ClickEventTypeEtt+0x86>
 80263a6:	80a2      	strh	r2, [r4, #4]
 80263a8:	80c6      	strh	r6, [r0, #6]
 80263aa:	60a1      	str	r1, [r4, #8]
 80263ac:	81a1      	strh	r1, [r4, #12]
 80263ae:	73a1      	strb	r1, [r4, #14]
 80263b0:	e7e5      	b.n	802637e <_ZN8touchgfx8Gestures18registerClickEventENS_10ClickEvent14ClickEventTypeEtt+0x86>
 80263b2:	bf00      	nop
 80263b4:	0802e914 	.word	0x0802e914
 80263b8:	0802e93c 	.word	0x0802e93c

080263bc <_ZNK8touchgfx10Rasterizer14calculateAlphaEi.isra.5>:
 80263bc:	10c9      	asrs	r1, r1, #3
 80263be:	2900      	cmp	r1, #0
 80263c0:	bfb8      	it	lt
 80263c2:	4249      	neglt	r1, r1
 80263c4:	2801      	cmp	r0, #1
 80263c6:	d108      	bne.n	80263da <_ZNK8touchgfx10Rasterizer14calculateAlphaEi.isra.5+0x1e>
 80263c8:	f3c1 0008 	ubfx	r0, r1, #0, #9
 80263cc:	f5b0 7f80 	cmp.w	r0, #256	; 0x100
 80263d0:	4601      	mov	r1, r0
 80263d2:	dd02      	ble.n	80263da <_ZNK8touchgfx10Rasterizer14calculateAlphaEi.isra.5+0x1e>
 80263d4:	f5c0 7000 	rsb	r0, r0, #512	; 0x200
 80263d8:	4770      	bx	lr
 80263da:	29ff      	cmp	r1, #255	; 0xff
 80263dc:	bfa8      	it	ge
 80263de:	21ff      	movge	r1, #255	; 0xff
 80263e0:	4608      	mov	r0, r1
 80263e2:	4770      	bx	lr

080263e4 <_ZN8touchgfx10Rasterizer6lineToEii>:
 80263e4:	b410      	push	{r4}
 80263e6:	e9d0 3401 	ldrd	r3, r4, [r0, #4]
 80263ea:	429c      	cmp	r4, r3
 80263ec:	d803      	bhi.n	80263f6 <_ZN8touchgfx10Rasterizer6lineToEii+0x12>
 80263ee:	f85d 4b04 	ldr.w	r4, [sp], #4
 80263f2:	f7ed b8ef 	b.w	80135d4 <_ZN8touchgfx7Outline6lineToEii>
 80263f6:	f85d 4b04 	ldr.w	r4, [sp], #4
 80263fa:	4770      	bx	lr

080263fc <_ZN8touchgfx10Rasterizer6renderEPKNS_15AbstractPainterEPhshh>:
 80263fc:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 8026400:	b08b      	sub	sp, #44	; 0x2c
 8026402:	e9cd 2306 	strd	r2, r3, [sp, #24]
 8026406:	f89d 3050 	ldrb.w	r3, [sp, #80]	; 0x50
 802640a:	9308      	str	r3, [sp, #32]
 802640c:	4606      	mov	r6, r0
 802640e:	f89d 3054 	ldrb.w	r3, [sp, #84]	; 0x54
 8026412:	9309      	str	r3, [sp, #36]	; 0x24
 8026414:	468a      	mov	sl, r1
 8026416:	f7ed fa4a 	bl	80138ae <_ZN8touchgfx7Outline24closeOutlineAndSortCellsEv>
 802641a:	68b5      	ldr	r5, [r6, #8]
 802641c:	4604      	mov	r4, r0
 802641e:	2d00      	cmp	r5, #0
 8026420:	d044      	beq.n	80264ac <_ZN8touchgfx10Rasterizer6renderEPKNS_15AbstractPainterEPhshh+0xb0>
 8026422:	6873      	ldr	r3, [r6, #4]
 8026424:	42ab      	cmp	r3, r5
 8026426:	d33d      	bcc.n	80264a4 <_ZN8touchgfx10Rasterizer6renderEPKNS_15AbstractPainterEPhshh+0xa8>
 8026428:	f9b0 3002 	ldrsh.w	r3, [r0, #2]
 802642c:	f9b6 2034 	ldrsh.w	r2, [r6, #52]	; 0x34
 8026430:	eb02 0b03 	add.w	fp, r2, r3
 8026434:	e9dd 1206 	ldrd	r1, r2, [sp, #24]
 8026438:	fb02 1203 	mla	r2, r2, r3, r1
 802643c:	9205      	str	r2, [sp, #20]
 802643e:	1e6a      	subs	r2, r5, #1
 8026440:	9204      	str	r2, [sp, #16]
 8026442:	f04f 0800 	mov.w	r8, #0
 8026446:	f9b4 9002 	ldrsh.w	r9, [r4, #2]
 802644a:	f9b4 7000 	ldrsh.w	r7, [r4]
 802644e:	454b      	cmp	r3, r9
 8026450:	463a      	mov	r2, r7
 8026452:	d008      	beq.n	8026466 <_ZN8touchgfx10Rasterizer6renderEPKNS_15AbstractPainterEPhshh+0x6a>
 8026454:	f9b6 3034 	ldrsh.w	r3, [r6, #52]	; 0x34
 8026458:	eb03 0b09 	add.w	fp, r3, r9
 802645c:	e9dd 1306 	ldrd	r1, r3, [sp, #24]
 8026460:	fb03 1309 	mla	r3, r3, r9, r1
 8026464:	9305      	str	r3, [sp, #20]
 8026466:	f9b4 3004 	ldrsh.w	r3, [r4, #4]
 802646a:	f9b4 1006 	ldrsh.w	r1, [r4, #6]
 802646e:	4498      	add	r8, r3
 8026470:	9b04      	ldr	r3, [sp, #16]
 8026472:	3b01      	subs	r3, #1
 8026474:	9304      	str	r3, [sp, #16]
 8026476:	9b04      	ldr	r3, [sp, #16]
 8026478:	3301      	adds	r3, #1
 802647a:	d015      	beq.n	80264a8 <_ZN8touchgfx10Rasterizer6renderEPKNS_15AbstractPainterEPhshh+0xac>
 802647c:	f934 3f08 	ldrsh.w	r3, [r4, #8]!
 8026480:	42bb      	cmp	r3, r7
 8026482:	d117      	bne.n	80264b4 <_ZN8touchgfx10Rasterizer6renderEPKNS_15AbstractPainterEPhshh+0xb8>
 8026484:	f9b4 0002 	ldrsh.w	r0, [r4, #2]
 8026488:	9b04      	ldr	r3, [sp, #16]
 802648a:	4548      	cmp	r0, r9
 802648c:	f103 33ff 	add.w	r3, r3, #4294967295
 8026490:	d17f      	bne.n	8026592 <_ZN8touchgfx10Rasterizer6renderEPKNS_15AbstractPainterEPhshh+0x196>
 8026492:	f9b4 0006 	ldrsh.w	r0, [r4, #6]
 8026496:	4401      	add	r1, r0
 8026498:	f9b4 0004 	ldrsh.w	r0, [r4, #4]
 802649c:	4480      	add	r8, r0
 802649e:	e7e9      	b.n	8026474 <_ZN8touchgfx10Rasterizer6renderEPKNS_15AbstractPainterEPhshh+0x78>
 80264a0:	461f      	mov	r7, r3
 80264a2:	e044      	b.n	802652e <_ZN8touchgfx10Rasterizer6renderEPKNS_15AbstractPainterEPhshh+0x132>
 80264a4:	2000      	movs	r0, #0
 80264a6:	e002      	b.n	80264ae <_ZN8touchgfx10Rasterizer6renderEPKNS_15AbstractPainterEPhshh+0xb2>
 80264a8:	2900      	cmp	r1, #0
 80264aa:	d16f      	bne.n	802658c <_ZN8touchgfx10Rasterizer6renderEPKNS_15AbstractPainterEPhshh+0x190>
 80264ac:	2001      	movs	r0, #1
 80264ae:	b00b      	add	sp, #44	; 0x2c
 80264b0:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
 80264b4:	2900      	cmp	r1, #0
 80264b6:	d030      	beq.n	802651a <_ZN8touchgfx10Rasterizer6renderEPKNS_15AbstractPainterEPhshh+0x11e>
 80264b8:	2f00      	cmp	r7, #0
 80264ba:	db29      	blt.n	8026510 <_ZN8touchgfx10Rasterizer6renderEPKNS_15AbstractPainterEPhshh+0x114>
 80264bc:	f9b6 3036 	ldrsh.w	r3, [r6, #54]	; 0x36
 80264c0:	42bb      	cmp	r3, r7
 80264c2:	dd25      	ble.n	8026510 <_ZN8touchgfx10Rasterizer6renderEPKNS_15AbstractPainterEPhshh+0x114>
 80264c4:	ebc1 1188 	rsb	r1, r1, r8, lsl #6
 80264c8:	f896 0030 	ldrb.w	r0, [r6, #48]	; 0x30
 80264cc:	f7ff ff76 	bl	80263bc <_ZNK8touchgfx10Rasterizer14calculateAlphaEi.isra.5>
 80264d0:	9b09      	ldr	r3, [sp, #36]	; 0x24
 80264d2:	fb10 f003 	smulbb	r0, r0, r3
 80264d6:	b280      	uxth	r0, r0
 80264d8:	1c41      	adds	r1, r0, #1
 80264da:	eb01 2110 	add.w	r1, r1, r0, lsr #8
 80264de:	1209      	asrs	r1, r1, #8
 80264e0:	f011 0fff 	tst.w	r1, #255	; 0xff
 80264e4:	d014      	beq.n	8026510 <_ZN8touchgfx10Rasterizer6renderEPKNS_15AbstractPainterEPhshh+0x114>
 80264e6:	9808      	ldr	r0, [sp, #32]
 80264e8:	8e73      	ldrh	r3, [r6, #50]	; 0x32
 80264ea:	b2c9      	uxtb	r1, r1
 80264ec:	b2ba      	uxth	r2, r7
 80264ee:	9102      	str	r1, [sp, #8]
 80264f0:	2101      	movs	r1, #1
 80264f2:	4413      	add	r3, r2
 80264f4:	9101      	str	r1, [sp, #4]
 80264f6:	4402      	add	r2, r0
 80264f8:	fa0f f18b 	sxth.w	r1, fp
 80264fc:	f8da 0000 	ldr.w	r0, [sl]
 8026500:	9100      	str	r1, [sp, #0]
 8026502:	6941      	ldr	r1, [r0, #20]
 8026504:	b21b      	sxth	r3, r3
 8026506:	460d      	mov	r5, r1
 8026508:	b212      	sxth	r2, r2
 802650a:	9905      	ldr	r1, [sp, #20]
 802650c:	4650      	mov	r0, sl
 802650e:	47a8      	blx	r5
 8026510:	9b04      	ldr	r3, [sp, #16]
 8026512:	3301      	adds	r3, #1
 8026514:	f107 0201 	add.w	r2, r7, #1
 8026518:	d0c8      	beq.n	80264ac <_ZN8touchgfx10Rasterizer6renderEPKNS_15AbstractPainterEPhshh+0xb0>
 802651a:	f9b4 7000 	ldrsh.w	r7, [r4]
 802651e:	1abb      	subs	r3, r7, r2
 8026520:	2b00      	cmp	r3, #0
 8026522:	dd31      	ble.n	8026588 <_ZN8touchgfx10Rasterizer6renderEPKNS_15AbstractPainterEPhshh+0x18c>
 8026524:	2a00      	cmp	r2, #0
 8026526:	dabb      	bge.n	80264a0 <_ZN8touchgfx10Rasterizer6renderEPKNS_15AbstractPainterEPhshh+0xa4>
 8026528:	2f00      	cmp	r7, #0
 802652a:	dd2d      	ble.n	8026588 <_ZN8touchgfx10Rasterizer6renderEPKNS_15AbstractPainterEPhshh+0x18c>
 802652c:	2200      	movs	r2, #0
 802652e:	f9b6 3036 	ldrsh.w	r3, [r6, #54]	; 0x36
 8026532:	19d1      	adds	r1, r2, r7
 8026534:	4299      	cmp	r1, r3
 8026536:	db02      	blt.n	802653e <_ZN8touchgfx10Rasterizer6renderEPKNS_15AbstractPainterEPhshh+0x142>
 8026538:	1a9f      	subs	r7, r3, r2
 802653a:	2f00      	cmp	r7, #0
 802653c:	dd24      	ble.n	8026588 <_ZN8touchgfx10Rasterizer6renderEPKNS_15AbstractPainterEPhshh+0x18c>
 802653e:	ea4f 1188 	mov.w	r1, r8, lsl #6
 8026542:	f896 0030 	ldrb.w	r0, [r6, #48]	; 0x30
 8026546:	f7ff ff39 	bl	80263bc <_ZNK8touchgfx10Rasterizer14calculateAlphaEi.isra.5>
 802654a:	9b09      	ldr	r3, [sp, #36]	; 0x24
 802654c:	fb10 f003 	smulbb	r0, r0, r3
 8026550:	b280      	uxth	r0, r0
 8026552:	1c41      	adds	r1, r0, #1
 8026554:	eb01 2110 	add.w	r1, r1, r0, lsr #8
 8026558:	1209      	asrs	r1, r1, #8
 802655a:	f011 0fff 	tst.w	r1, #255	; 0xff
 802655e:	d013      	beq.n	8026588 <_ZN8touchgfx10Rasterizer6renderEPKNS_15AbstractPainterEPhshh+0x18c>
 8026560:	9808      	ldr	r0, [sp, #32]
 8026562:	8e73      	ldrh	r3, [r6, #50]	; 0x32
 8026564:	b292      	uxth	r2, r2
 8026566:	b2c9      	uxtb	r1, r1
 8026568:	4413      	add	r3, r2
 802656a:	9102      	str	r1, [sp, #8]
 802656c:	4402      	add	r2, r0
 802656e:	b23f      	sxth	r7, r7
 8026570:	f8da 0000 	ldr.w	r0, [sl]
 8026574:	9701      	str	r7, [sp, #4]
 8026576:	fa0f f18b 	sxth.w	r1, fp
 802657a:	9100      	str	r1, [sp, #0]
 802657c:	6947      	ldr	r7, [r0, #20]
 802657e:	9905      	ldr	r1, [sp, #20]
 8026580:	b21b      	sxth	r3, r3
 8026582:	b212      	sxth	r2, r2
 8026584:	4650      	mov	r0, sl
 8026586:	47b8      	blx	r7
 8026588:	464b      	mov	r3, r9
 802658a:	e75c      	b.n	8026446 <_ZN8touchgfx10Rasterizer6renderEPKNS_15AbstractPainterEPhshh+0x4a>
 802658c:	2f00      	cmp	r7, #0
 802658e:	da95      	bge.n	80264bc <_ZN8touchgfx10Rasterizer6renderEPKNS_15AbstractPainterEPhshh+0xc0>
 8026590:	e78c      	b.n	80264ac <_ZN8touchgfx10Rasterizer6renderEPKNS_15AbstractPainterEPhshh+0xb0>
 8026592:	2900      	cmp	r1, #0
 8026594:	d0f8      	beq.n	8026588 <_ZN8touchgfx10Rasterizer6renderEPKNS_15AbstractPainterEPhshh+0x18c>
 8026596:	e78f      	b.n	80264b8 <_ZN8touchgfx10Rasterizer6renderEPKNS_15AbstractPainterEPhshh+0xbc>

08026598 <_ZN8touchgfx6CanvasC1EPKNS_12CanvasWidgetERKNS_4RectE>:
 8026598:	4b4b      	ldr	r3, [pc, #300]	; (80266c8 <_ZN8touchgfx6CanvasC1EPKNS_12CanvasWidgetERKNS_4RectE+0x130>)
 802659a:	e92d 47f3 	stmdb	sp!, {r0, r1, r4, r5, r6, r7, r8, r9, sl, lr}
 802659e:	2500      	movs	r5, #0
 80265a0:	f100 0620 	add.w	r6, r0, #32
 80265a4:	4604      	mov	r4, r0
 80265a6:	e9c0 3100 	strd	r3, r1, [r0]
 80265aa:	e9c0 5502 	strd	r5, r5, [r0, #8]
 80265ae:	e9c0 5504 	strd	r5, r5, [r0, #16]
 80265b2:	e9c0 5506 	strd	r5, r5, [r0, #24]
 80265b6:	f100 0718 	add.w	r7, r0, #24
 80265ba:	4630      	mov	r0, r6
 80265bc:	4690      	mov	r8, r2
 80265be:	f7ec fb41 	bl	8012c44 <_ZN8touchgfx7OutlineC1Ev>
 80265c2:	e9c4 5517 	strd	r5, r5, [r4, #92]	; 0x5c
 80265c6:	e9c4 551a 	strd	r5, r5, [r4, #104]	; 0x68
 80265ca:	f884 5050 	strb.w	r5, [r4, #80]	; 0x50
 80265ce:	f8a4 5052 	strh.w	r5, [r4, #82]	; 0x52
 80265d2:	f8a4 5054 	strh.w	r5, [r4, #84]	; 0x54
 80265d6:	f8a4 5056 	strh.w	r5, [r4, #86]	; 0x56
 80265da:	f884 5058 	strb.w	r5, [r4, #88]	; 0x58
 80265de:	f884 5059 	strb.w	r5, [r4, #89]	; 0x59
 80265e2:	f8a4 5064 	strh.w	r5, [r4, #100]	; 0x64
 80265e6:	f9b8 2000 	ldrsh.w	r2, [r8]
 80265ea:	f8b8 0004 	ldrh.w	r0, [r8, #4]
 80265ee:	f8d4 c004 	ldr.w	ip, [r4, #4]
 80265f2:	9500      	str	r5, [sp, #0]
 80265f4:	4410      	add	r0, r2
 80265f6:	b280      	uxth	r0, r0
 80265f8:	fa0f fa80 	sxth.w	sl, r0
 80265fc:	45aa      	cmp	sl, r5
 80265fe:	f9bc 9008 	ldrsh.w	r9, [ip, #8]
 8026602:	f9bc e00a 	ldrsh.w	lr, [ip, #10]
 8026606:	dd5c      	ble.n	80266c2 <_ZN8touchgfx6CanvasC1EPKNS_12CanvasWidgetERKNS_4RectE+0x12a>
 8026608:	4591      	cmp	r9, r2
 802660a:	dd5a      	ble.n	80266c2 <_ZN8touchgfx6CanvasC1EPKNS_12CanvasWidgetERKNS_4RectE+0x12a>
 802660c:	f9b8 1002 	ldrsh.w	r1, [r8, #2]
 8026610:	f8b8 3006 	ldrh.w	r3, [r8, #6]
 8026614:	440b      	add	r3, r1
 8026616:	b29b      	uxth	r3, r3
 8026618:	b21d      	sxth	r5, r3
 802661a:	2d00      	cmp	r5, #0
 802661c:	dd51      	ble.n	80266c2 <_ZN8touchgfx6CanvasC1EPKNS_12CanvasWidgetERKNS_4RectE+0x12a>
 802661e:	458e      	cmp	lr, r1
 8026620:	dd4f      	ble.n	80266c2 <_ZN8touchgfx6CanvasC1EPKNS_12CanvasWidgetERKNS_4RectE+0x12a>
 8026622:	45d1      	cmp	r9, sl
 8026624:	bfb8      	it	lt
 8026626:	fa1f f089 	uxthlt.w	r0, r9
 802662a:	45ae      	cmp	lr, r5
 802662c:	ea22 72e2 	bic.w	r2, r2, r2, asr #31
 8026630:	ea21 71e1 	bic.w	r1, r1, r1, asr #31
 8026634:	bfb8      	it	lt
 8026636:	fa1f f38e 	uxthlt.w	r3, lr
 802663a:	1a80      	subs	r0, r0, r2
 802663c:	1a5b      	subs	r3, r3, r1
 802663e:	f8ad 0004 	strh.w	r0, [sp, #4]
 8026642:	f8ad 3006 	strh.w	r3, [sp, #6]
 8026646:	f8ad 2000 	strh.w	r2, [sp]
 802664a:	f8ad 1002 	strh.w	r1, [sp, #2]
 802664e:	466d      	mov	r5, sp
 8026650:	e895 0003 	ldmia.w	r5, {r0, r1}
 8026654:	e887 0003 	stmia.w	r7, {r0, r1}
 8026658:	f8dc 3000 	ldr.w	r3, [ip]
 802665c:	4660      	mov	r0, ip
 802665e:	6adb      	ldr	r3, [r3, #44]	; 0x2c
 8026660:	4639      	mov	r1, r7
 8026662:	4798      	blx	r3
 8026664:	6861      	ldr	r1, [r4, #4]
 8026666:	4628      	mov	r0, r5
 8026668:	3104      	adds	r1, #4
 802666a:	f7ee fcf1 	bl	8015050 <_ZN8touchgfx21DisplayTransformation29transformDisplayToFrameBufferERNS_4RectERKS1_>
 802666e:	4638      	mov	r0, r7
 8026670:	f7ee fcaa 	bl	8014fc8 <_ZN8touchgfx21DisplayTransformation29transformDisplayToFrameBufferERNS_4RectE>
 8026674:	f9bd 3002 	ldrsh.w	r3, [sp, #2]
 8026678:	f8bd 2000 	ldrh.w	r2, [sp]
 802667c:	f8a4 2052 	strh.w	r2, [r4, #82]	; 0x52
 8026680:	f8a4 3054 	strh.w	r3, [r4, #84]	; 0x54
 8026684:	4630      	mov	r0, r6
 8026686:	f7ec fac1 	bl	8012c0c <_ZN8touchgfx7Outline5resetEv>
 802668a:	f9bd 3000 	ldrsh.w	r3, [sp]
 802668e:	f9b4 201e 	ldrsh.w	r2, [r4, #30]
 8026692:	015b      	lsls	r3, r3, #5
 8026694:	60a3      	str	r3, [r4, #8]
 8026696:	f9bd 3002 	ldrsh.w	r3, [sp, #2]
 802669a:	015b      	lsls	r3, r3, #5
 802669c:	60e3      	str	r3, [r4, #12]
 802669e:	f9bd 3004 	ldrsh.w	r3, [sp, #4]
 80266a2:	015b      	lsls	r3, r3, #5
 80266a4:	6123      	str	r3, [r4, #16]
 80266a6:	f9bd 3006 	ldrsh.w	r3, [sp, #6]
 80266aa:	015b      	lsls	r3, r3, #5
 80266ac:	6163      	str	r3, [r4, #20]
 80266ae:	f9b4 301c 	ldrsh.w	r3, [r4, #28]
 80266b2:	f8a4 3056 	strh.w	r3, [r4, #86]	; 0x56
 80266b6:	4620      	mov	r0, r4
 80266b8:	e9c4 3212 	strd	r3, r2, [r4, #72]	; 0x48
 80266bc:	b002      	add	sp, #8
 80266be:	e8bd 87f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, pc}
 80266c2:	2300      	movs	r3, #0
 80266c4:	9301      	str	r3, [sp, #4]
 80266c6:	e7c2      	b.n	802664e <_ZN8touchgfx6CanvasC1EPKNS_12CanvasWidgetERKNS_4RectE+0xb6>
 80266c8:	0802ec60 	.word	0x0802ec60

080266cc <_ZN8touchgfx6Canvas5closeEv>:
 80266cc:	b538      	push	{r3, r4, r5, lr}
 80266ce:	f890 3058 	ldrb.w	r3, [r0, #88]	; 0x58
 80266d2:	4604      	mov	r4, r0
 80266d4:	b193      	cbz	r3, 80266fc <_ZN8touchgfx6Canvas5closeEv+0x30>
 80266d6:	f890 3064 	ldrb.w	r3, [r0, #100]	; 0x64
 80266da:	f890 2065 	ldrb.w	r2, [r0, #101]	; 0x65
 80266de:	4213      	tst	r3, r2
 80266e0:	d10c      	bne.n	80266fc <_ZN8touchgfx6Canvas5closeEv+0x30>
 80266e2:	f100 0520 	add.w	r5, r0, #32
 80266e6:	b123      	cbz	r3, 80266f2 <_ZN8touchgfx6Canvas5closeEv+0x26>
 80266e8:	e9d0 1217 	ldrd	r1, r2, [r0, #92]	; 0x5c
 80266ec:	4628      	mov	r0, r5
 80266ee:	f7ff fe79 	bl	80263e4 <_ZN8touchgfx10Rasterizer6lineToEii>
 80266f2:	e9d4 121a 	ldrd	r1, r2, [r4, #104]	; 0x68
 80266f6:	4628      	mov	r0, r5
 80266f8:	f7ff fe74 	bl	80263e4 <_ZN8touchgfx10Rasterizer6lineToEii>
 80266fc:	2300      	movs	r3, #0
 80266fe:	f884 3058 	strb.w	r3, [r4, #88]	; 0x58
 8026702:	e9d4 0309 	ldrd	r0, r3, [r4, #36]	; 0x24
 8026706:	4298      	cmp	r0, r3
 8026708:	bf34      	ite	cc
 802670a:	2000      	movcc	r0, #0
 802670c:	2001      	movcs	r0, #1
 802670e:	bd38      	pop	{r3, r4, r5, pc}

08026710 <_ZN8touchgfx6Canvas6renderEh>:
 8026710:	e92d 41f3 	stmdb	sp!, {r0, r1, r4, r5, r6, r7, r8, lr}
 8026714:	4604      	mov	r4, r0
 8026716:	6840      	ldr	r0, [r0, #4]
 8026718:	6803      	ldr	r3, [r0, #0]
 802671a:	6e5b      	ldr	r3, [r3, #100]	; 0x64
 802671c:	460d      	mov	r5, r1
 802671e:	4798      	blx	r3
 8026720:	fb10 f105 	smulbb	r1, r0, r5
 8026724:	b289      	uxth	r1, r1
 8026726:	1c4d      	adds	r5, r1, #1
 8026728:	eb05 2511 	add.w	r5, r5, r1, lsr #8
 802672c:	122d      	asrs	r5, r5, #8
 802672e:	f000 809d 	beq.w	802686c <_ZN8touchgfx6Canvas6renderEh+0x15c>
 8026732:	f894 3059 	ldrb.w	r3, [r4, #89]	; 0x59
 8026736:	2b00      	cmp	r3, #0
 8026738:	f000 8098 	beq.w	802686c <_ZN8touchgfx6Canvas6renderEh+0x15c>
 802673c:	4620      	mov	r0, r4
 802673e:	f7ff ffc5 	bl	80266cc <_ZN8touchgfx6Canvas5closeEv>
 8026742:	4607      	mov	r7, r0
 8026744:	2800      	cmp	r0, #0
 8026746:	d048      	beq.n	80267da <_ZN8touchgfx6Canvas6renderEh+0xca>
 8026748:	6863      	ldr	r3, [r4, #4]
 802674a:	4e49      	ldr	r6, [pc, #292]	; (8026870 <_ZN8touchgfx6Canvas6renderEh+0x160>)
 802674c:	6a98      	ldr	r0, [r3, #40]	; 0x28
 802674e:	6837      	ldr	r7, [r6, #0]
 8026750:	6803      	ldr	r3, [r0, #0]
 8026752:	689b      	ldr	r3, [r3, #8]
 8026754:	4798      	blx	r3
 8026756:	4601      	mov	r1, r0
 8026758:	4638      	mov	r0, r7
 802675a:	f7ea fbc5 	bl	8010ee8 <_ZN8touchgfx3HAL33lockFrameBufferForRenderingMethodENS0_15RenderingMethodE>
 802675e:	4607      	mov	r7, r0
 8026760:	f7dd f8bc 	bl	80038dc <_ZN8touchgfx3HAL3lcdEv>
 8026764:	6803      	ldr	r3, [r0, #0]
 8026766:	6b1b      	ldr	r3, [r3, #48]	; 0x30
 8026768:	4798      	blx	r3
 802676a:	4680      	mov	r8, r0
 802676c:	f7dd f8b6 	bl	80038dc <_ZN8touchgfx3HAL3lcdEv>
 8026770:	6803      	ldr	r3, [r0, #0]
 8026772:	6adb      	ldr	r3, [r3, #44]	; 0x2c
 8026774:	4798      	blx	r3
 8026776:	280b      	cmp	r0, #11
 8026778:	d85d      	bhi.n	8026836 <_ZN8touchgfx6Canvas6renderEh+0x126>
 802677a:	e8df f000 	tbb	[pc, r0]
 802677e:	5e53      	.short	0x5e53
 8026780:	325c066e 	.word	0x325c066e
 8026784:	67676742 	.word	0x67676742
 8026788:	6767      	.short	0x6767
 802678a:	f9b4 301a 	ldrsh.w	r3, [r4, #26]
 802678e:	f9b4 1018 	ldrsh.w	r1, [r4, #24]
 8026792:	2208      	movs	r2, #8
 8026794:	fb91 f2f2 	sdiv	r2, r1, r2
 8026798:	fb08 2303 	mla	r3, r8, r3, r2
 802679c:	441f      	add	r7, r3
 802679e:	424b      	negs	r3, r1
 80267a0:	f003 0307 	and.w	r3, r3, #7
 80267a4:	f001 0107 	and.w	r1, r1, #7
 80267a8:	bf58      	it	pl
 80267aa:	4259      	negpl	r1, r3
 80267ac:	b2c9      	uxtb	r1, r1
 80267ae:	b2ed      	uxtb	r5, r5
 80267b0:	e9cd 1500 	strd	r1, r5, [sp]
 80267b4:	6860      	ldr	r0, [r4, #4]
 80267b6:	463a      	mov	r2, r7
 80267b8:	6a81      	ldr	r1, [r0, #40]	; 0x28
 80267ba:	fa0f f388 	sxth.w	r3, r8
 80267be:	f104 0020 	add.w	r0, r4, #32
 80267c2:	f7ff fe1b 	bl	80263fc <_ZN8touchgfx10Rasterizer6renderEPKNS_15AbstractPainterEPhshh>
 80267c6:	6863      	ldr	r3, [r4, #4]
 80267c8:	4607      	mov	r7, r0
 80267ca:	6a98      	ldr	r0, [r3, #40]	; 0x28
 80267cc:	6803      	ldr	r3, [r0, #0]
 80267ce:	691b      	ldr	r3, [r3, #16]
 80267d0:	4798      	blx	r3
 80267d2:	6830      	ldr	r0, [r6, #0]
 80267d4:	6803      	ldr	r3, [r0, #0]
 80267d6:	6adb      	ldr	r3, [r3, #44]	; 0x2c
 80267d8:	4798      	blx	r3
 80267da:	4638      	mov	r0, r7
 80267dc:	b002      	add	sp, #8
 80267de:	e8bd 81f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, pc}
 80267e2:	f9b4 301a 	ldrsh.w	r3, [r4, #26]
 80267e6:	f9b4 1018 	ldrsh.w	r1, [r4, #24]
 80267ea:	2204      	movs	r2, #4
 80267ec:	fb91 f2f2 	sdiv	r2, r1, r2
 80267f0:	fb08 2303 	mla	r3, r8, r3, r2
 80267f4:	441f      	add	r7, r3
 80267f6:	424b      	negs	r3, r1
 80267f8:	f003 0303 	and.w	r3, r3, #3
 80267fc:	f001 0103 	and.w	r1, r1, #3
 8026800:	e7d2      	b.n	80267a8 <_ZN8touchgfx6Canvas6renderEh+0x98>
 8026802:	f9b4 1018 	ldrsh.w	r1, [r4, #24]
 8026806:	f9b4 301a 	ldrsh.w	r3, [r4, #26]
 802680a:	2900      	cmp	r1, #0
 802680c:	f04f 0202 	mov.w	r2, #2
 8026810:	fb91 f2f2 	sdiv	r2, r1, r2
 8026814:	f001 0101 	and.w	r1, r1, #1
 8026818:	fb08 2303 	mla	r3, r8, r3, r2
 802681c:	441f      	add	r7, r3
 802681e:	bfb8      	it	lt
 8026820:	4249      	neglt	r1, r1
 8026822:	e7c3      	b.n	80267ac <_ZN8touchgfx6Canvas6renderEh+0x9c>
 8026824:	f9b4 301a 	ldrsh.w	r3, [r4, #26]
 8026828:	f9b4 2018 	ldrsh.w	r2, [r4, #24]
 802682c:	fb08 f303 	mul.w	r3, r8, r3
 8026830:	eb03 0342 	add.w	r3, r3, r2, lsl #1
 8026834:	441f      	add	r7, r3
 8026836:	2100      	movs	r1, #0
 8026838:	e7b9      	b.n	80267ae <_ZN8touchgfx6Canvas6renderEh+0x9e>
 802683a:	f9b4 301a 	ldrsh.w	r3, [r4, #26]
 802683e:	fb08 f203 	mul.w	r2, r8, r3
 8026842:	8b23      	ldrh	r3, [r4, #24]
 8026844:	2103      	movs	r1, #3
 8026846:	fb13 2301 	smlabb	r3, r3, r1, r2
 802684a:	e7f3      	b.n	8026834 <_ZN8touchgfx6Canvas6renderEh+0x124>
 802684c:	f9b4 301a 	ldrsh.w	r3, [r4, #26]
 8026850:	f9b4 2018 	ldrsh.w	r2, [r4, #24]
 8026854:	fb08 2303 	mla	r3, r8, r3, r2
 8026858:	e7ec      	b.n	8026834 <_ZN8touchgfx6Canvas6renderEh+0x124>
 802685a:	f9b4 301a 	ldrsh.w	r3, [r4, #26]
 802685e:	f9b4 2018 	ldrsh.w	r2, [r4, #24]
 8026862:	fb08 f303 	mul.w	r3, r8, r3
 8026866:	eb03 0382 	add.w	r3, r3, r2, lsl #2
 802686a:	e7e3      	b.n	8026834 <_ZN8touchgfx6Canvas6renderEh+0x124>
 802686c:	2701      	movs	r7, #1
 802686e:	e7b4      	b.n	80267da <_ZN8touchgfx6Canvas6renderEh+0xca>
 8026870:	20012f24 	.word	0x20012f24

08026874 <_ZNK8touchgfx6Canvas29transformFrameBufferToDisplayERNS_7CWRUtil2Q5ES3_>:
 8026874:	b510      	push	{r4, lr}
 8026876:	4b07      	ldr	r3, [pc, #28]	; (8026894 <_ZNK8touchgfx6Canvas29transformFrameBufferToDisplayERNS_7CWRUtil2Q5ES3_+0x20>)
 8026878:	781b      	ldrb	r3, [r3, #0]
 802687a:	2b01      	cmp	r3, #1
 802687c:	d108      	bne.n	8026890 <_ZNK8touchgfx6Canvas29transformFrameBufferToDisplayERNS_7CWRUtil2Q5ES3_+0x1c>
 802687e:	6843      	ldr	r3, [r0, #4]
 8026880:	6814      	ldr	r4, [r2, #0]
 8026882:	f9b3 0008 	ldrsh.w	r0, [r3, #8]
 8026886:	680b      	ldr	r3, [r1, #0]
 8026888:	ebc3 1340 	rsb	r3, r3, r0, lsl #5
 802688c:	6013      	str	r3, [r2, #0]
 802688e:	600c      	str	r4, [r1, #0]
 8026890:	bd10      	pop	{r4, pc}
 8026892:	bf00      	nop
 8026894:	20012f1c 	.word	0x20012f1c

08026898 <_ZN8touchgfx6Canvas6moveToENS_7CWRUtil2Q5ES2_>:
 8026898:	b513      	push	{r0, r1, r4, lr}
 802689a:	f890 3058 	ldrb.w	r3, [r0, #88]	; 0x58
 802689e:	4604      	mov	r4, r0
 80268a0:	e9cd 2100 	strd	r2, r1, [sp]
 80268a4:	b9a3      	cbnz	r3, 80268d0 <_ZN8touchgfx6Canvas6moveToENS_7CWRUtil2Q5ES2_+0x38>
 80268a6:	466a      	mov	r2, sp
 80268a8:	a901      	add	r1, sp, #4
 80268aa:	4620      	mov	r0, r4
 80268ac:	f7ff ffe2 	bl	8026874 <_ZNK8touchgfx6Canvas29transformFrameBufferToDisplayERNS_7CWRUtil2Q5ES3_>
 80268b0:	68a3      	ldr	r3, [r4, #8]
 80268b2:	9901      	ldr	r1, [sp, #4]
 80268b4:	9a00      	ldr	r2, [sp, #0]
 80268b6:	1ac9      	subs	r1, r1, r3
 80268b8:	68e3      	ldr	r3, [r4, #12]
 80268ba:	9101      	str	r1, [sp, #4]
 80268bc:	1ad2      	subs	r2, r2, r3
 80268be:	2a00      	cmp	r2, #0
 80268c0:	9200      	str	r2, [sp, #0]
 80268c2:	da0b      	bge.n	80268dc <_ZN8touchgfx6Canvas6moveToENS_7CWRUtil2Q5ES2_+0x44>
 80268c4:	2301      	movs	r3, #1
 80268c6:	2900      	cmp	r1, #0
 80268c8:	da0e      	bge.n	80268e8 <_ZN8touchgfx6Canvas6moveToENS_7CWRUtil2Q5ES2_+0x50>
 80268ca:	f043 0304 	orr.w	r3, r3, #4
 80268ce:	e013      	b.n	80268f8 <_ZN8touchgfx6Canvas6moveToENS_7CWRUtil2Q5ES2_+0x60>
 80268d0:	f7ff fefc 	bl	80266cc <_ZN8touchgfx6Canvas5closeEv>
 80268d4:	2800      	cmp	r0, #0
 80268d6:	d1e6      	bne.n	80268a6 <_ZN8touchgfx6Canvas6moveToENS_7CWRUtil2Q5ES2_+0xe>
 80268d8:	b002      	add	sp, #8
 80268da:	bd10      	pop	{r4, pc}
 80268dc:	6963      	ldr	r3, [r4, #20]
 80268de:	429a      	cmp	r2, r3
 80268e0:	bfac      	ite	ge
 80268e2:	2302      	movge	r3, #2
 80268e4:	2300      	movlt	r3, #0
 80268e6:	e7ee      	b.n	80268c6 <_ZN8touchgfx6Canvas6moveToENS_7CWRUtil2Q5ES2_+0x2e>
 80268e8:	6920      	ldr	r0, [r4, #16]
 80268ea:	4281      	cmp	r1, r0
 80268ec:	bfac      	ite	ge
 80268ee:	2008      	movge	r0, #8
 80268f0:	2000      	movlt	r0, #0
 80268f2:	4318      	orrs	r0, r3
 80268f4:	b2c3      	uxtb	r3, r0
 80268f6:	b158      	cbz	r0, 8026910 <_ZN8touchgfx6Canvas6moveToENS_7CWRUtil2Q5ES2_+0x78>
 80268f8:	2200      	movs	r2, #0
 80268fa:	f884 2058 	strb.w	r2, [r4, #88]	; 0x58
 80268fe:	9901      	ldr	r1, [sp, #4]
 8026900:	9a00      	ldr	r2, [sp, #0]
 8026902:	66a1      	str	r1, [r4, #104]	; 0x68
 8026904:	66e2      	str	r2, [r4, #108]	; 0x6c
 8026906:	e9c4 1217 	strd	r1, r2, [r4, #92]	; 0x5c
 802690a:	f884 3064 	strb.w	r3, [r4, #100]	; 0x64
 802690e:	e7e3      	b.n	80268d8 <_ZN8touchgfx6Canvas6moveToENS_7CWRUtil2Q5ES2_+0x40>
 8026910:	f884 0065 	strb.w	r0, [r4, #101]	; 0x65
 8026914:	e9d4 3009 	ldrd	r3, r0, [r4, #36]	; 0x24
 8026918:	4298      	cmp	r0, r3
 802691a:	d803      	bhi.n	8026924 <_ZN8touchgfx6Canvas6moveToENS_7CWRUtil2Q5ES2_+0x8c>
 802691c:	f104 0020 	add.w	r0, r4, #32
 8026920:	f7ec fe72 	bl	8013608 <_ZN8touchgfx7Outline6moveToEii>
 8026924:	2301      	movs	r3, #1
 8026926:	f884 3058 	strb.w	r3, [r4, #88]	; 0x58
 802692a:	f884 3059 	strb.w	r3, [r4, #89]	; 0x59
 802692e:	2300      	movs	r3, #0
 8026930:	e7e5      	b.n	80268fe <_ZN8touchgfx6Canvas6moveToENS_7CWRUtil2Q5ES2_+0x66>

08026932 <_ZN8touchgfx6Canvas6lineToENS_7CWRUtil2Q5ES2_>:
 8026932:	b573      	push	{r0, r1, r4, r5, r6, lr}
 8026934:	ab02      	add	r3, sp, #8
 8026936:	4604      	mov	r4, r0
 8026938:	f843 2d08 	str.w	r2, [r3, #-8]!
 802693c:	9101      	str	r1, [sp, #4]
 802693e:	461a      	mov	r2, r3
 8026940:	a901      	add	r1, sp, #4
 8026942:	f7ff ff97 	bl	8026874 <_ZNK8touchgfx6Canvas29transformFrameBufferToDisplayERNS_7CWRUtil2Q5ES3_>
 8026946:	68a3      	ldr	r3, [r4, #8]
 8026948:	9901      	ldr	r1, [sp, #4]
 802694a:	9a00      	ldr	r2, [sp, #0]
 802694c:	1ac9      	subs	r1, r1, r3
 802694e:	68e3      	ldr	r3, [r4, #12]
 8026950:	9101      	str	r1, [sp, #4]
 8026952:	1ad2      	subs	r2, r2, r3
 8026954:	2a00      	cmp	r2, #0
 8026956:	9200      	str	r2, [sp, #0]
 8026958:	db1c      	blt.n	8026994 <_ZN8touchgfx6Canvas6lineToENS_7CWRUtil2Q5ES2_+0x62>
 802695a:	6963      	ldr	r3, [r4, #20]
 802695c:	429a      	cmp	r2, r3
 802695e:	bfac      	ite	ge
 8026960:	2002      	movge	r0, #2
 8026962:	2000      	movlt	r0, #0
 8026964:	2900      	cmp	r1, #0
 8026966:	db17      	blt.n	8026998 <_ZN8touchgfx6Canvas6lineToENS_7CWRUtil2Q5ES2_+0x66>
 8026968:	6923      	ldr	r3, [r4, #16]
 802696a:	4299      	cmp	r1, r3
 802696c:	bfac      	ite	ge
 802696e:	2308      	movge	r3, #8
 8026970:	2300      	movlt	r3, #0
 8026972:	4303      	orrs	r3, r0
 8026974:	f894 0064 	ldrb.w	r0, [r4, #100]	; 0x64
 8026978:	b2dd      	uxtb	r5, r3
 802697a:	b978      	cbnz	r0, 802699c <_ZN8touchgfx6Canvas6lineToENS_7CWRUtil2Q5ES2_+0x6a>
 802697c:	f104 0020 	add.w	r0, r4, #32
 8026980:	f7ff fd30 	bl	80263e4 <_ZN8touchgfx10Rasterizer6lineToEii>
 8026984:	9b01      	ldr	r3, [sp, #4]
 8026986:	65e3      	str	r3, [r4, #92]	; 0x5c
 8026988:	9b00      	ldr	r3, [sp, #0]
 802698a:	6623      	str	r3, [r4, #96]	; 0x60
 802698c:	f884 5064 	strb.w	r5, [r4, #100]	; 0x64
 8026990:	b002      	add	sp, #8
 8026992:	bd70      	pop	{r4, r5, r6, pc}
 8026994:	2001      	movs	r0, #1
 8026996:	e7e5      	b.n	8026964 <_ZN8touchgfx6Canvas6lineToENS_7CWRUtil2Q5ES2_+0x32>
 8026998:	2304      	movs	r3, #4
 802699a:	e7ea      	b.n	8026972 <_ZN8touchgfx6Canvas6lineToENS_7CWRUtil2Q5ES2_+0x40>
 802699c:	b113      	cbz	r3, 80269a4 <_ZN8touchgfx6Canvas6lineToENS_7CWRUtil2Q5ES2_+0x72>
 802699e:	ea10 0305 	ands.w	r3, r0, r5
 80269a2:	d11c      	bne.n	80269de <_ZN8touchgfx6Canvas6lineToENS_7CWRUtil2Q5ES2_+0xac>
 80269a4:	f894 3058 	ldrb.w	r3, [r4, #88]	; 0x58
 80269a8:	f104 0620 	add.w	r6, r4, #32
 80269ac:	e9d4 1217 	ldrd	r1, r2, [r4, #92]	; 0x5c
 80269b0:	b98b      	cbnz	r3, 80269d6 <_ZN8touchgfx6Canvas6lineToENS_7CWRUtil2Q5ES2_+0xa4>
 80269b2:	f884 0065 	strb.w	r0, [r4, #101]	; 0x65
 80269b6:	e9d4 3009 	ldrd	r3, r0, [r4, #36]	; 0x24
 80269ba:	4298      	cmp	r0, r3
 80269bc:	d802      	bhi.n	80269c4 <_ZN8touchgfx6Canvas6lineToENS_7CWRUtil2Q5ES2_+0x92>
 80269be:	4630      	mov	r0, r6
 80269c0:	f7ec fe22 	bl	8013608 <_ZN8touchgfx7Outline6moveToEii>
 80269c4:	2301      	movs	r3, #1
 80269c6:	f884 3058 	strb.w	r3, [r4, #88]	; 0x58
 80269ca:	f884 3059 	strb.w	r3, [r4, #89]	; 0x59
 80269ce:	e9dd 2100 	ldrd	r2, r1, [sp]
 80269d2:	4630      	mov	r0, r6
 80269d4:	e7d4      	b.n	8026980 <_ZN8touchgfx6Canvas6lineToENS_7CWRUtil2Q5ES2_+0x4e>
 80269d6:	4630      	mov	r0, r6
 80269d8:	f7ff fd04 	bl	80263e4 <_ZN8touchgfx10Rasterizer6lineToEii>
 80269dc:	e7f7      	b.n	80269ce <_ZN8touchgfx6Canvas6lineToENS_7CWRUtil2Q5ES2_+0x9c>
 80269de:	461d      	mov	r5, r3
 80269e0:	e7d0      	b.n	8026984 <_ZN8touchgfx6Canvas6lineToENS_7CWRUtil2Q5ES2_+0x52>
	...

080269e4 <_ZN8touchgfx6CanvasD1Ev>:
 80269e4:	b510      	push	{r4, lr}
 80269e6:	4b04      	ldr	r3, [pc, #16]	; (80269f8 <_ZN8touchgfx6CanvasD1Ev+0x14>)
 80269e8:	4604      	mov	r4, r0
 80269ea:	f840 3b20 	str.w	r3, [r0], #32
 80269ee:	f7ec f905 	bl	8012bfc <_ZN8touchgfx7OutlineD1Ev>
 80269f2:	4620      	mov	r0, r4
 80269f4:	bd10      	pop	{r4, pc}
 80269f6:	bf00      	nop
 80269f8:	0802ec60 	.word	0x0802ec60

080269fc <_ZN8touchgfx6CanvasD0Ev>:
 80269fc:	b510      	push	{r4, lr}
 80269fe:	4604      	mov	r4, r0
 8026a00:	f7ff fff0 	bl	80269e4 <_ZN8touchgfx6CanvasD1Ev>
 8026a04:	4620      	mov	r0, r4
 8026a06:	2170      	movs	r1, #112	; 0x70
 8026a08:	f002 fd09 	bl	802941e <_ZdlPvj>
 8026a0c:	4620      	mov	r0, r4
 8026a0e:	bd10      	pop	{r4, pc}

08026a10 <_ZN8touchgfx6CircleD1Ev>:
 8026a10:	4770      	bx	lr

08026a12 <_ZN8touchgfx6CircleD0Ev>:
 8026a12:	b510      	push	{r4, lr}
 8026a14:	2148      	movs	r1, #72	; 0x48
 8026a16:	4604      	mov	r4, r0
 8026a18:	f002 fd01 	bl	802941e <_ZdlPvj>
 8026a1c:	4620      	mov	r0, r4
 8026a1e:	bd10      	pop	{r4, pc}

08026a20 <_ZN8touchgfx7CWRUtil6cosineENS0_2Q5E>:
 8026a20:	b508      	push	{r3, lr}
 8026a22:	f5c0 6034 	rsb	r0, r0, #2880	; 0xb40
 8026a26:	f7ea fdb5 	bl	8011594 <_ZN8touchgfx7CWRUtil4sineENS0_2Q5E>
 8026a2a:	bd08      	pop	{r3, pc}

08026a2c <_ZN8touchgfx6CircleC1Ev>:
 8026a2c:	b510      	push	{r4, lr}
 8026a2e:	4604      	mov	r4, r0
 8026a30:	f7ea fc4c 	bl	80112cc <_ZN8touchgfx12CanvasWidgetC1Ev>
 8026a34:	4b08      	ldr	r3, [pc, #32]	; (8026a58 <_ZN8touchgfx6CircleC1Ev+0x2c>)
 8026a36:	6023      	str	r3, [r4, #0]
 8026a38:	f44f 5234 	mov.w	r2, #11520	; 0x2d00
 8026a3c:	2300      	movs	r3, #0
 8026a3e:	e9c4 230f 	strd	r2, r3, [r4, #60]	; 0x3c
 8026a42:	f24b 4205 	movw	r2, #46085	; 0xb405
 8026a46:	e9c4 330b 	strd	r3, r3, [r4, #44]	; 0x2c
 8026a4a:	e9c4 330d 	strd	r3, r3, [r4, #52]	; 0x34
 8026a4e:	f8a4 2044 	strh.w	r2, [r4, #68]	; 0x44
 8026a52:	60a3      	str	r3, [r4, #8]
 8026a54:	4620      	mov	r0, r4
 8026a56:	bd10      	pop	{r4, pc}
 8026a58:	0802ec74 	.word	0x0802ec74

08026a5c <_ZNK8touchgfx6Circle20calculateMinimalRectENS_7CWRUtil2Q5ES2_RS2_S3_S3_S3_>:
 8026a5c:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 8026a60:	428a      	cmp	r2, r1
 8026a62:	4680      	mov	r8, r0
 8026a64:	4610      	mov	r0, r2
 8026a66:	4699      	mov	r9, r3
 8026a68:	bfa6      	itte	ge
 8026a6a:	460a      	movge	r2, r1
 8026a6c:	4603      	movge	r3, r0
 8026a6e:	460b      	movlt	r3, r1
 8026a70:	1a99      	subs	r1, r3, r2
 8026a72:	b085      	sub	sp, #20
 8026a74:	f5b1 5f34 	cmp.w	r1, #11520	; 0x2d00
 8026a78:	f8d8 4040 	ldr.w	r4, [r8, #64]	; 0x40
 8026a7c:	9d10      	ldr	r5, [sp, #64]	; 0x40
 8026a7e:	bfa4      	itt	ge
 8026a80:	f44f 5334 	movge.w	r3, #11520	; 0x2d00
 8026a84:	2200      	movge	r2, #0
 8026a86:	e9dd 760e 	ldrd	r7, r6, [sp, #56]	; 0x38
 8026a8a:	9300      	str	r3, [sp, #0]
 8026a8c:	f108 0a34 	add.w	sl, r8, #52	; 0x34
 8026a90:	f102 0b01 	add.w	fp, r2, #1
 8026a94:	2c00      	cmp	r4, #0
 8026a96:	f040 80af 	bne.w	8026bf8 <_ZNK8touchgfx6Circle20calculateMinimalRectENS_7CWRUtil2Q5ES2_RS2_S3_S3_S3_+0x19c>
 8026a9a:	4610      	mov	r0, r2
 8026a9c:	9201      	str	r2, [sp, #4]
 8026a9e:	f7ea fd79 	bl	8011594 <_ZN8touchgfx7CWRUtil4sineENS0_2Q5E>
 8026aa2:	a903      	add	r1, sp, #12
 8026aa4:	9003      	str	r0, [sp, #12]
 8026aa6:	4650      	mov	r0, sl
 8026aa8:	f7ea fc3c 	bl	8011324 <_ZNK8touchgfx7CWRUtil2Q5mlERKNS0_3Q15E>
 8026aac:	f8d8 102c 	ldr.w	r1, [r8, #44]	; 0x2c
 8026ab0:	9a01      	ldr	r2, [sp, #4]
 8026ab2:	4408      	add	r0, r1
 8026ab4:	f8d9 1000 	ldr.w	r1, [r9]
 8026ab8:	4281      	cmp	r1, r0
 8026aba:	bfc8      	it	gt
 8026abc:	f8c9 0000 	strgt.w	r0, [r9]
 8026ac0:	6839      	ldr	r1, [r7, #0]
 8026ac2:	4288      	cmp	r0, r1
 8026ac4:	bfc8      	it	gt
 8026ac6:	6038      	strgt	r0, [r7, #0]
 8026ac8:	4610      	mov	r0, r2
 8026aca:	f7ff ffa9 	bl	8026a20 <_ZN8touchgfx7CWRUtil6cosineENS0_2Q5E>
 8026ace:	a903      	add	r1, sp, #12
 8026ad0:	9003      	str	r0, [sp, #12]
 8026ad2:	4650      	mov	r0, sl
 8026ad4:	f7ea fc26 	bl	8011324 <_ZNK8touchgfx7CWRUtil2Q5mlERKNS0_3Q15E>
 8026ad8:	f8d8 2030 	ldr.w	r2, [r8, #48]	; 0x30
 8026adc:	1a10      	subs	r0, r2, r0
 8026ade:	6832      	ldr	r2, [r6, #0]
 8026ae0:	4282      	cmp	r2, r0
 8026ae2:	bfc8      	it	gt
 8026ae4:	6030      	strgt	r0, [r6, #0]
 8026ae6:	682a      	ldr	r2, [r5, #0]
 8026ae8:	f44f 6134 	mov.w	r1, #2880	; 0xb40
 8026aec:	4290      	cmp	r0, r2
 8026aee:	fb9b f2f1 	sdiv	r2, fp, r1
 8026af2:	fb01 b212 	mls	r2, r1, r2, fp
 8026af6:	eba1 0202 	sub.w	r2, r1, r2
 8026afa:	bfc8      	it	gt
 8026afc:	6028      	strgt	r0, [r5, #0]
 8026afe:	fb92 f0f1 	sdiv	r0, r2, r1
 8026b02:	fb01 2210 	mls	r2, r1, r0, r2
 8026b06:	4493      	add	fp, r2
 8026b08:	9b00      	ldr	r3, [sp, #0]
 8026b0a:	455b      	cmp	r3, fp
 8026b0c:	db2a      	blt.n	8026b64 <_ZNK8touchgfx6Circle20calculateMinimalRectENS_7CWRUtil2Q5ES2_RS2_S3_S3_S3_+0x108>
 8026b0e:	4658      	mov	r0, fp
 8026b10:	f7ea fd40 	bl	8011594 <_ZN8touchgfx7CWRUtil4sineENS0_2Q5E>
 8026b14:	a903      	add	r1, sp, #12
 8026b16:	9003      	str	r0, [sp, #12]
 8026b18:	4650      	mov	r0, sl
 8026b1a:	f7ea fc03 	bl	8011324 <_ZNK8touchgfx7CWRUtil2Q5mlERKNS0_3Q15E>
 8026b1e:	f8d8 202c 	ldr.w	r2, [r8, #44]	; 0x2c
 8026b22:	4410      	add	r0, r2
 8026b24:	f8d9 2000 	ldr.w	r2, [r9]
 8026b28:	4282      	cmp	r2, r0
 8026b2a:	bfc8      	it	gt
 8026b2c:	f8c9 0000 	strgt.w	r0, [r9]
 8026b30:	683a      	ldr	r2, [r7, #0]
 8026b32:	4290      	cmp	r0, r2
 8026b34:	bfc8      	it	gt
 8026b36:	6038      	strgt	r0, [r7, #0]
 8026b38:	4658      	mov	r0, fp
 8026b3a:	f7ff ff71 	bl	8026a20 <_ZN8touchgfx7CWRUtil6cosineENS0_2Q5E>
 8026b3e:	a903      	add	r1, sp, #12
 8026b40:	9003      	str	r0, [sp, #12]
 8026b42:	4650      	mov	r0, sl
 8026b44:	f7ea fbee 	bl	8011324 <_ZNK8touchgfx7CWRUtil2Q5mlERKNS0_3Q15E>
 8026b48:	f8d8 2030 	ldr.w	r2, [r8, #48]	; 0x30
 8026b4c:	1a10      	subs	r0, r2, r0
 8026b4e:	6832      	ldr	r2, [r6, #0]
 8026b50:	4282      	cmp	r2, r0
 8026b52:	bfc8      	it	gt
 8026b54:	6030      	strgt	r0, [r6, #0]
 8026b56:	682a      	ldr	r2, [r5, #0]
 8026b58:	4290      	cmp	r0, r2
 8026b5a:	bfc8      	it	gt
 8026b5c:	6028      	strgt	r0, [r5, #0]
 8026b5e:	f50b 6b34 	add.w	fp, fp, #2880	; 0xb40
 8026b62:	e7d1      	b.n	8026b08 <_ZNK8touchgfx6Circle20calculateMinimalRectENS_7CWRUtil2Q5ES2_RS2_S3_S3_S3_+0xac>
 8026b64:	9b00      	ldr	r3, [sp, #0]
 8026b66:	f5ab 6b34 	sub.w	fp, fp, #2880	; 0xb40
 8026b6a:	455b      	cmp	r3, fp
 8026b6c:	dd27      	ble.n	8026bbe <_ZNK8touchgfx6Circle20calculateMinimalRectENS_7CWRUtil2Q5ES2_RS2_S3_S3_S3_+0x162>
 8026b6e:	4618      	mov	r0, r3
 8026b70:	f7ea fd10 	bl	8011594 <_ZN8touchgfx7CWRUtil4sineENS0_2Q5E>
 8026b74:	a903      	add	r1, sp, #12
 8026b76:	9003      	str	r0, [sp, #12]
 8026b78:	4650      	mov	r0, sl
 8026b7a:	f7ea fbd3 	bl	8011324 <_ZNK8touchgfx7CWRUtil2Q5mlERKNS0_3Q15E>
 8026b7e:	f8d8 202c 	ldr.w	r2, [r8, #44]	; 0x2c
 8026b82:	4410      	add	r0, r2
 8026b84:	f8d9 2000 	ldr.w	r2, [r9]
 8026b88:	4282      	cmp	r2, r0
 8026b8a:	bfc8      	it	gt
 8026b8c:	f8c9 0000 	strgt.w	r0, [r9]
 8026b90:	683a      	ldr	r2, [r7, #0]
 8026b92:	4290      	cmp	r0, r2
 8026b94:	bfc8      	it	gt
 8026b96:	6038      	strgt	r0, [r7, #0]
 8026b98:	9800      	ldr	r0, [sp, #0]
 8026b9a:	f7ff ff41 	bl	8026a20 <_ZN8touchgfx7CWRUtil6cosineENS0_2Q5E>
 8026b9e:	a903      	add	r1, sp, #12
 8026ba0:	9003      	str	r0, [sp, #12]
 8026ba2:	4650      	mov	r0, sl
 8026ba4:	f7ea fbbe 	bl	8011324 <_ZNK8touchgfx7CWRUtil2Q5mlERKNS0_3Q15E>
 8026ba8:	f8d8 2030 	ldr.w	r2, [r8, #48]	; 0x30
 8026bac:	1a10      	subs	r0, r2, r0
 8026bae:	6832      	ldr	r2, [r6, #0]
 8026bb0:	4282      	cmp	r2, r0
 8026bb2:	bfc8      	it	gt
 8026bb4:	6030      	strgt	r0, [r6, #0]
 8026bb6:	682a      	ldr	r2, [r5, #0]
 8026bb8:	4290      	cmp	r0, r2
 8026bba:	bfc8      	it	gt
 8026bbc:	6028      	strgt	r0, [r5, #0]
 8026bbe:	f8d8 202c 	ldr.w	r2, [r8, #44]	; 0x2c
 8026bc2:	f8d9 1000 	ldr.w	r1, [r9]
 8026bc6:	4291      	cmp	r1, r2
 8026bc8:	bfc8      	it	gt
 8026bca:	f8c9 2000 	strgt.w	r2, [r9]
 8026bce:	683a      	ldr	r2, [r7, #0]
 8026bd0:	f8d8 302c 	ldr.w	r3, [r8, #44]	; 0x2c
 8026bd4:	429a      	cmp	r2, r3
 8026bd6:	bfb8      	it	lt
 8026bd8:	603b      	strlt	r3, [r7, #0]
 8026bda:	6832      	ldr	r2, [r6, #0]
 8026bdc:	f8d8 3030 	ldr.w	r3, [r8, #48]	; 0x30
 8026be0:	429a      	cmp	r2, r3
 8026be2:	bfc8      	it	gt
 8026be4:	6033      	strgt	r3, [r6, #0]
 8026be6:	682a      	ldr	r2, [r5, #0]
 8026be8:	f8d8 3030 	ldr.w	r3, [r8, #48]	; 0x30
 8026bec:	429a      	cmp	r2, r3
 8026bee:	da00      	bge.n	8026bf2 <_ZNK8touchgfx6Circle20calculateMinimalRectENS_7CWRUtil2Q5ES2_RS2_S3_S3_S3_+0x196>
 8026bf0:	602b      	str	r3, [r5, #0]
 8026bf2:	b005      	add	sp, #20
 8026bf4:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
 8026bf8:	2002      	movs	r0, #2
 8026bfa:	3401      	adds	r4, #1
 8026bfc:	fb94 f4f0 	sdiv	r4, r4, r0
 8026c00:	4610      	mov	r0, r2
 8026c02:	9201      	str	r2, [sp, #4]
 8026c04:	f7ea fcc6 	bl	8011594 <_ZN8touchgfx7CWRUtil4sineENS0_2Q5E>
 8026c08:	a903      	add	r1, sp, #12
 8026c0a:	9003      	str	r0, [sp, #12]
 8026c0c:	4650      	mov	r0, sl
 8026c0e:	f7ea fb89 	bl	8011324 <_ZNK8touchgfx7CWRUtil2Q5mlERKNS0_3Q15E>
 8026c12:	f8d8 102c 	ldr.w	r1, [r8, #44]	; 0x2c
 8026c16:	9a01      	ldr	r2, [sp, #4]
 8026c18:	4408      	add	r0, r1
 8026c1a:	f8d9 1000 	ldr.w	r1, [r9]
 8026c1e:	1b03      	subs	r3, r0, r4
 8026c20:	4299      	cmp	r1, r3
 8026c22:	bfc8      	it	gt
 8026c24:	f8c9 3000 	strgt.w	r3, [r9]
 8026c28:	6839      	ldr	r1, [r7, #0]
 8026c2a:	428b      	cmp	r3, r1
 8026c2c:	bfc8      	it	gt
 8026c2e:	603b      	strgt	r3, [r7, #0]
 8026c30:	f8d9 1000 	ldr.w	r1, [r9]
 8026c34:	4420      	add	r0, r4
 8026c36:	4281      	cmp	r1, r0
 8026c38:	bfc8      	it	gt
 8026c3a:	f8c9 0000 	strgt.w	r0, [r9]
 8026c3e:	6839      	ldr	r1, [r7, #0]
 8026c40:	4288      	cmp	r0, r1
 8026c42:	bfc8      	it	gt
 8026c44:	6038      	strgt	r0, [r7, #0]
 8026c46:	4610      	mov	r0, r2
 8026c48:	f7ff feea 	bl	8026a20 <_ZN8touchgfx7CWRUtil6cosineENS0_2Q5E>
 8026c4c:	a903      	add	r1, sp, #12
 8026c4e:	9003      	str	r0, [sp, #12]
 8026c50:	4650      	mov	r0, sl
 8026c52:	f7ea fb67 	bl	8011324 <_ZNK8touchgfx7CWRUtil2Q5mlERKNS0_3Q15E>
 8026c56:	f8d8 2030 	ldr.w	r2, [r8, #48]	; 0x30
 8026c5a:	1a10      	subs	r0, r2, r0
 8026c5c:	6832      	ldr	r2, [r6, #0]
 8026c5e:	1b01      	subs	r1, r0, r4
 8026c60:	428a      	cmp	r2, r1
 8026c62:	bfc8      	it	gt
 8026c64:	6031      	strgt	r1, [r6, #0]
 8026c66:	682a      	ldr	r2, [r5, #0]
 8026c68:	4291      	cmp	r1, r2
 8026c6a:	bfc8      	it	gt
 8026c6c:	6029      	strgt	r1, [r5, #0]
 8026c6e:	6832      	ldr	r2, [r6, #0]
 8026c70:	4420      	add	r0, r4
 8026c72:	4282      	cmp	r2, r0
 8026c74:	bfc8      	it	gt
 8026c76:	6030      	strgt	r0, [r6, #0]
 8026c78:	682a      	ldr	r2, [r5, #0]
 8026c7a:	f44f 6134 	mov.w	r1, #2880	; 0xb40
 8026c7e:	4290      	cmp	r0, r2
 8026c80:	fb9b f2f1 	sdiv	r2, fp, r1
 8026c84:	fb01 b212 	mls	r2, r1, r2, fp
 8026c88:	eba1 0202 	sub.w	r2, r1, r2
 8026c8c:	bfc8      	it	gt
 8026c8e:	6028      	strgt	r0, [r5, #0]
 8026c90:	fb92 f0f1 	sdiv	r0, r2, r1
 8026c94:	fb01 2210 	mls	r2, r1, r0, r2
 8026c98:	4493      	add	fp, r2
 8026c9a:	9b00      	ldr	r3, [sp, #0]
 8026c9c:	455b      	cmp	r3, fp
 8026c9e:	db40      	blt.n	8026d22 <_ZNK8touchgfx6Circle20calculateMinimalRectENS_7CWRUtil2Q5ES2_RS2_S3_S3_S3_+0x2c6>
 8026ca0:	4658      	mov	r0, fp
 8026ca2:	f7ea fc77 	bl	8011594 <_ZN8touchgfx7CWRUtil4sineENS0_2Q5E>
 8026ca6:	a903      	add	r1, sp, #12
 8026ca8:	9003      	str	r0, [sp, #12]
 8026caa:	4650      	mov	r0, sl
 8026cac:	f7ea fb3a 	bl	8011324 <_ZNK8touchgfx7CWRUtil2Q5mlERKNS0_3Q15E>
 8026cb0:	f8d8 202c 	ldr.w	r2, [r8, #44]	; 0x2c
 8026cb4:	4410      	add	r0, r2
 8026cb6:	f8d9 2000 	ldr.w	r2, [r9]
 8026cba:	1b01      	subs	r1, r0, r4
 8026cbc:	428a      	cmp	r2, r1
 8026cbe:	bfc8      	it	gt
 8026cc0:	f8c9 1000 	strgt.w	r1, [r9]
 8026cc4:	683a      	ldr	r2, [r7, #0]
 8026cc6:	4291      	cmp	r1, r2
 8026cc8:	bfc8      	it	gt
 8026cca:	6039      	strgt	r1, [r7, #0]
 8026ccc:	f8d9 2000 	ldr.w	r2, [r9]
 8026cd0:	4420      	add	r0, r4
 8026cd2:	4282      	cmp	r2, r0
 8026cd4:	bfc8      	it	gt
 8026cd6:	f8c9 0000 	strgt.w	r0, [r9]
 8026cda:	683a      	ldr	r2, [r7, #0]
 8026cdc:	4290      	cmp	r0, r2
 8026cde:	bfc8      	it	gt
 8026ce0:	6038      	strgt	r0, [r7, #0]
 8026ce2:	4658      	mov	r0, fp
 8026ce4:	f7ff fe9c 	bl	8026a20 <_ZN8touchgfx7CWRUtil6cosineENS0_2Q5E>
 8026ce8:	a903      	add	r1, sp, #12
 8026cea:	9003      	str	r0, [sp, #12]
 8026cec:	4650      	mov	r0, sl
 8026cee:	f7ea fb19 	bl	8011324 <_ZNK8touchgfx7CWRUtil2Q5mlERKNS0_3Q15E>
 8026cf2:	f8d8 2030 	ldr.w	r2, [r8, #48]	; 0x30
 8026cf6:	1a10      	subs	r0, r2, r0
 8026cf8:	6832      	ldr	r2, [r6, #0]
 8026cfa:	1b01      	subs	r1, r0, r4
 8026cfc:	428a      	cmp	r2, r1
 8026cfe:	bfc8      	it	gt
 8026d00:	6031      	strgt	r1, [r6, #0]
 8026d02:	682a      	ldr	r2, [r5, #0]
 8026d04:	4291      	cmp	r1, r2
 8026d06:	bfc8      	it	gt
 8026d08:	6029      	strgt	r1, [r5, #0]
 8026d0a:	6832      	ldr	r2, [r6, #0]
 8026d0c:	4420      	add	r0, r4
 8026d0e:	4282      	cmp	r2, r0
 8026d10:	bfc8      	it	gt
 8026d12:	6030      	strgt	r0, [r6, #0]
 8026d14:	682a      	ldr	r2, [r5, #0]
 8026d16:	4290      	cmp	r0, r2
 8026d18:	bfc8      	it	gt
 8026d1a:	6028      	strgt	r0, [r5, #0]
 8026d1c:	f50b 6b34 	add.w	fp, fp, #2880	; 0xb40
 8026d20:	e7bb      	b.n	8026c9a <_ZNK8touchgfx6Circle20calculateMinimalRectENS_7CWRUtil2Q5ES2_RS2_S3_S3_S3_+0x23e>
 8026d22:	9b00      	ldr	r3, [sp, #0]
 8026d24:	f5ab 6b34 	sub.w	fp, fp, #2880	; 0xb40
 8026d28:	455b      	cmp	r3, fp
 8026d2a:	f77f af62 	ble.w	8026bf2 <_ZNK8touchgfx6Circle20calculateMinimalRectENS_7CWRUtil2Q5ES2_RS2_S3_S3_S3_+0x196>
 8026d2e:	4618      	mov	r0, r3
 8026d30:	f7ea fc30 	bl	8011594 <_ZN8touchgfx7CWRUtil4sineENS0_2Q5E>
 8026d34:	a903      	add	r1, sp, #12
 8026d36:	9003      	str	r0, [sp, #12]
 8026d38:	4650      	mov	r0, sl
 8026d3a:	f7ea faf3 	bl	8011324 <_ZNK8touchgfx7CWRUtil2Q5mlERKNS0_3Q15E>
 8026d3e:	f8d8 202c 	ldr.w	r2, [r8, #44]	; 0x2c
 8026d42:	4410      	add	r0, r2
 8026d44:	f8d9 2000 	ldr.w	r2, [r9]
 8026d48:	1b01      	subs	r1, r0, r4
 8026d4a:	428a      	cmp	r2, r1
 8026d4c:	bfc8      	it	gt
 8026d4e:	f8c9 1000 	strgt.w	r1, [r9]
 8026d52:	683a      	ldr	r2, [r7, #0]
 8026d54:	4291      	cmp	r1, r2
 8026d56:	bfc8      	it	gt
 8026d58:	6039      	strgt	r1, [r7, #0]
 8026d5a:	f8d9 2000 	ldr.w	r2, [r9]
 8026d5e:	4420      	add	r0, r4
 8026d60:	4282      	cmp	r2, r0
 8026d62:	bfc8      	it	gt
 8026d64:	f8c9 0000 	strgt.w	r0, [r9]
 8026d68:	683b      	ldr	r3, [r7, #0]
 8026d6a:	4298      	cmp	r0, r3
 8026d6c:	bfc8      	it	gt
 8026d6e:	6038      	strgt	r0, [r7, #0]
 8026d70:	9800      	ldr	r0, [sp, #0]
 8026d72:	f7ff fe55 	bl	8026a20 <_ZN8touchgfx7CWRUtil6cosineENS0_2Q5E>
 8026d76:	a903      	add	r1, sp, #12
 8026d78:	9003      	str	r0, [sp, #12]
 8026d7a:	4650      	mov	r0, sl
 8026d7c:	f7ea fad2 	bl	8011324 <_ZNK8touchgfx7CWRUtil2Q5mlERKNS0_3Q15E>
 8026d80:	f8d8 3030 	ldr.w	r3, [r8, #48]	; 0x30
 8026d84:	6832      	ldr	r2, [r6, #0]
 8026d86:	1a18      	subs	r0, r3, r0
 8026d88:	1b03      	subs	r3, r0, r4
 8026d8a:	429a      	cmp	r2, r3
 8026d8c:	bfc8      	it	gt
 8026d8e:	6033      	strgt	r3, [r6, #0]
 8026d90:	682a      	ldr	r2, [r5, #0]
 8026d92:	4293      	cmp	r3, r2
 8026d94:	bfc8      	it	gt
 8026d96:	602b      	strgt	r3, [r5, #0]
 8026d98:	6833      	ldr	r3, [r6, #0]
 8026d9a:	4404      	add	r4, r0
 8026d9c:	42a3      	cmp	r3, r4
 8026d9e:	bfc8      	it	gt
 8026da0:	6034      	strgt	r4, [r6, #0]
 8026da2:	682b      	ldr	r3, [r5, #0]
 8026da4:	429c      	cmp	r4, r3
 8026da6:	bfc8      	it	gt
 8026da8:	602c      	strgt	r4, [r5, #0]
 8026daa:	e722      	b.n	8026bf2 <_ZNK8touchgfx6Circle20calculateMinimalRectENS_7CWRUtil2Q5ES2_RS2_S3_S3_S3_+0x196>

08026dac <_ZNK8touchgfx6Circle14getMinimalRectENS_7CWRUtil2Q5ES2_>:
 8026dac:	b530      	push	{r4, r5, lr}
 8026dae:	4604      	mov	r4, r0
 8026db0:	4608      	mov	r0, r1
 8026db2:	4611      	mov	r1, r2
 8026db4:	461a      	mov	r2, r3
 8026db6:	f9b0 3008 	ldrsh.w	r3, [r0, #8]
 8026dba:	b089      	sub	sp, #36	; 0x24
 8026dbc:	015b      	lsls	r3, r3, #5
 8026dbe:	9304      	str	r3, [sp, #16]
 8026dc0:	f9b0 300a 	ldrsh.w	r3, [r0, #10]
 8026dc4:	2500      	movs	r5, #0
 8026dc6:	015b      	lsls	r3, r3, #5
 8026dc8:	e9cd 3506 	strd	r3, r5, [sp, #24]
 8026dcc:	ab07      	add	r3, sp, #28
 8026dce:	9302      	str	r3, [sp, #8]
 8026dd0:	ab06      	add	r3, sp, #24
 8026dd2:	9301      	str	r3, [sp, #4]
 8026dd4:	ab05      	add	r3, sp, #20
 8026dd6:	9300      	str	r3, [sp, #0]
 8026dd8:	ab04      	add	r3, sp, #16
 8026dda:	9505      	str	r5, [sp, #20]
 8026ddc:	f7ff fe3e 	bl	8026a5c <_ZNK8touchgfx6Circle20calculateMinimalRectENS_7CWRUtil2Q5ES2_RS2_S3_S3_S3_>
 8026de0:	2520      	movs	r5, #32
 8026de2:	9a04      	ldr	r2, [sp, #16]
 8026de4:	9805      	ldr	r0, [sp, #20]
 8026de6:	fb92 f2f5 	sdiv	r2, r2, r5
 8026dea:	fb90 f0f5 	sdiv	r0, r0, r5
 8026dee:	b292      	uxth	r2, r2
 8026df0:	3002      	adds	r0, #2
 8026df2:	1a80      	subs	r0, r0, r2
 8026df4:	9b06      	ldr	r3, [sp, #24]
 8026df6:	9907      	ldr	r1, [sp, #28]
 8026df8:	fb93 f3f5 	sdiv	r3, r3, r5
 8026dfc:	fb91 f1f5 	sdiv	r1, r1, r5
 8026e00:	b29b      	uxth	r3, r3
 8026e02:	3102      	adds	r1, #2
 8026e04:	1ac9      	subs	r1, r1, r3
 8026e06:	3a01      	subs	r2, #1
 8026e08:	3b01      	subs	r3, #1
 8026e0a:	80a0      	strh	r0, [r4, #4]
 8026e0c:	4620      	mov	r0, r4
 8026e0e:	8022      	strh	r2, [r4, #0]
 8026e10:	8063      	strh	r3, [r4, #2]
 8026e12:	80e1      	strh	r1, [r4, #6]
 8026e14:	b009      	add	sp, #36	; 0x24
 8026e16:	bd30      	pop	{r4, r5, pc}

08026e18 <_ZNK8touchgfx6Circle14getMinimalRectEv>:
 8026e18:	b510      	push	{r4, lr}
 8026e1a:	e9d1 230e 	ldrd	r2, r3, [r1, #56]	; 0x38
 8026e1e:	4604      	mov	r4, r0
 8026e20:	f7ff ffc4 	bl	8026dac <_ZNK8touchgfx6Circle14getMinimalRectENS_7CWRUtil2Q5ES2_>
 8026e24:	4620      	mov	r0, r4
 8026e26:	bd10      	pop	{r4, pc}

08026e28 <_ZNK8touchgfx6Circle32getMinimalRectForUpdatedEndAngleERKNS_7CWRUtil2Q5E>:
 8026e28:	b5f8      	push	{r3, r4, r5, r6, r7, lr}
 8026e2a:	e9d1 540e 	ldrd	r5, r4, [r1, #56]	; 0x38
 8026e2e:	4606      	mov	r6, r0
 8026e30:	f891 0044 	ldrb.w	r0, [r1, #68]	; 0x44
 8026e34:	6813      	ldr	r3, [r2, #0]
 8026e36:	42a5      	cmp	r5, r4
 8026e38:	ea4f 1040 	mov.w	r0, r0, lsl #5
 8026e3c:	da2b      	bge.n	8026e96 <_ZNK8touchgfx6Circle32getMinimalRectForUpdatedEndAngleERKNS_7CWRUtil2Q5E+0x6e>
 8026e3e:	42a3      	cmp	r3, r4
 8026e40:	dd14      	ble.n	8026e6c <_ZNK8touchgfx6Circle32getMinimalRectForUpdatedEndAngleERKNS_7CWRUtil2Q5E+0x44>
 8026e42:	b168      	cbz	r0, 8026e60 <_ZNK8touchgfx6Circle32getMinimalRectForUpdatedEndAngleERKNS_7CWRUtil2Q5E+0x38>
 8026e44:	4267      	negs	r7, r4
 8026e46:	fb97 f2f0 	sdiv	r2, r7, r0
 8026e4a:	fb00 7212 	mls	r2, r0, r2, r7
 8026e4e:	1a82      	subs	r2, r0, r2
 8026e50:	fb92 f7f0 	sdiv	r7, r2, r0
 8026e54:	fb00 2017 	mls	r0, r0, r7, r2
 8026e58:	1a24      	subs	r4, r4, r0
 8026e5a:	42ac      	cmp	r4, r5
 8026e5c:	bfb8      	it	lt
 8026e5e:	462c      	movlt	r4, r5
 8026e60:	4630      	mov	r0, r6
 8026e62:	4622      	mov	r2, r4
 8026e64:	f7ff ffa2 	bl	8026dac <_ZNK8touchgfx6Circle14getMinimalRectENS_7CWRUtil2Q5ES2_>
 8026e68:	4630      	mov	r0, r6
 8026e6a:	bdf8      	pop	{r3, r4, r5, r6, r7, pc}
 8026e6c:	42ab      	cmp	r3, r5
 8026e6e:	dd0e      	ble.n	8026e8e <_ZNK8touchgfx6Circle32getMinimalRectForUpdatedEndAngleERKNS_7CWRUtil2Q5E+0x66>
 8026e70:	b168      	cbz	r0, 8026e8e <_ZNK8touchgfx6Circle32getMinimalRectForUpdatedEndAngleERKNS_7CWRUtil2Q5E+0x66>
 8026e72:	425f      	negs	r7, r3
 8026e74:	fb97 f2f0 	sdiv	r2, r7, r0
 8026e78:	fb00 7212 	mls	r2, r0, r2, r7
 8026e7c:	1a82      	subs	r2, r0, r2
 8026e7e:	fb92 f7f0 	sdiv	r7, r2, r0
 8026e82:	fb00 2017 	mls	r0, r0, r7, r2
 8026e86:	1a1b      	subs	r3, r3, r0
 8026e88:	42ab      	cmp	r3, r5
 8026e8a:	bfb8      	it	lt
 8026e8c:	462b      	movlt	r3, r5
 8026e8e:	4622      	mov	r2, r4
 8026e90:	461c      	mov	r4, r3
 8026e92:	4613      	mov	r3, r2
 8026e94:	e7e4      	b.n	8026e60 <_ZNK8touchgfx6Circle32getMinimalRectForUpdatedEndAngleERKNS_7CWRUtil2Q5E+0x38>
 8026e96:	42a3      	cmp	r3, r4
 8026e98:	da10      	bge.n	8026ebc <_ZNK8touchgfx6Circle32getMinimalRectForUpdatedEndAngleERKNS_7CWRUtil2Q5E+0x94>
 8026e9a:	b148      	cbz	r0, 8026eb0 <_ZNK8touchgfx6Circle32getMinimalRectForUpdatedEndAngleERKNS_7CWRUtil2Q5E+0x88>
 8026e9c:	fb94 f2f0 	sdiv	r2, r4, r0
 8026ea0:	fb00 4212 	mls	r2, r0, r2, r4
 8026ea4:	1a82      	subs	r2, r0, r2
 8026ea6:	fb92 f7f0 	sdiv	r7, r2, r0
 8026eaa:	fb00 2017 	mls	r0, r0, r7, r2
 8026eae:	4404      	add	r4, r0
 8026eb0:	42a5      	cmp	r5, r4
 8026eb2:	bfa8      	it	ge
 8026eb4:	4625      	movge	r5, r4
 8026eb6:	461c      	mov	r4, r3
 8026eb8:	462b      	mov	r3, r5
 8026eba:	e7d1      	b.n	8026e60 <_ZNK8touchgfx6Circle32getMinimalRectForUpdatedEndAngleERKNS_7CWRUtil2Q5E+0x38>
 8026ebc:	42ab      	cmp	r3, r5
 8026ebe:	dacf      	bge.n	8026e60 <_ZNK8touchgfx6Circle32getMinimalRectForUpdatedEndAngleERKNS_7CWRUtil2Q5E+0x38>
 8026ec0:	2800      	cmp	r0, #0
 8026ec2:	d0cd      	beq.n	8026e60 <_ZNK8touchgfx6Circle32getMinimalRectForUpdatedEndAngleERKNS_7CWRUtil2Q5E+0x38>
 8026ec4:	fb93 f2f0 	sdiv	r2, r3, r0
 8026ec8:	fb00 3212 	mls	r2, r0, r2, r3
 8026ecc:	1a82      	subs	r2, r0, r2
 8026ece:	fb92 f7f0 	sdiv	r7, r2, r0
 8026ed2:	fb00 2017 	mls	r0, r0, r7, r2
 8026ed6:	4403      	add	r3, r0
 8026ed8:	42ab      	cmp	r3, r5
 8026eda:	bfa8      	it	ge
 8026edc:	462b      	movge	r3, r5
 8026ede:	e7bf      	b.n	8026e60 <_ZNK8touchgfx6Circle32getMinimalRectForUpdatedEndAngleERKNS_7CWRUtil2Q5E+0x38>

08026ee0 <_ZNK8touchgfx6Circle16drawCanvasWidgetERKNS_4RectE>:
 8026ee0:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 8026ee4:	e9d0 560e 	ldrd	r5, r6, [r0, #56]	; 0x38
 8026ee8:	42ae      	cmp	r6, r5
 8026eea:	bfa2      	ittt	ge
 8026eec:	4633      	movge	r3, r6
 8026eee:	462e      	movge	r6, r5
 8026ef0:	461d      	movge	r5, r3
 8026ef2:	1bab      	subs	r3, r5, r6
 8026ef4:	468b      	mov	fp, r1
 8026ef6:	6c01      	ldr	r1, [r0, #64]	; 0x40
 8026ef8:	f9b0 902c 	ldrsh.w	r9, [r0, #44]	; 0x2c
 8026efc:	f9b0 a030 	ldrsh.w	sl, [r0, #48]	; 0x30
 8026f00:	f5b3 5f34 	cmp.w	r3, #11520	; 0x2d00
 8026f04:	f04f 0220 	mov.w	r2, #32
 8026f08:	b0ab      	sub	sp, #172	; 0xac
 8026f0a:	4604      	mov	r4, r0
 8026f0c:	bfa4      	itt	ge
 8026f0e:	f44f 5534 	movge.w	r5, #11520	; 0x2d00
 8026f12:	2600      	movge	r6, #0
 8026f14:	fb99 f9f2 	sdiv	r9, r9, r2
 8026f18:	fb9a faf2 	sdiv	sl, sl, r2
 8026f1c:	6b43      	ldr	r3, [r0, #52]	; 0x34
 8026f1e:	2900      	cmp	r1, #0
 8026f20:	f000 80f5 	beq.w	802710e <_ZNK8touchgfx6Circle16drawCanvasWidgetERKNS_4RectE+0x22e>
 8026f24:	f9bb 0000 	ldrsh.w	r0, [fp]
 8026f28:	f9bb 2002 	ldrsh.w	r2, [fp, #2]
 8026f2c:	eba9 0700 	sub.w	r7, r9, r0
 8026f30:	ea87 7ce7 	eor.w	ip, r7, r7, asr #31
 8026f34:	ebac 7ce7 	sub.w	ip, ip, r7, asr #31
 8026f38:	f8bb 7004 	ldrh.w	r7, [fp, #4]
 8026f3c:	ebaa 0802 	sub.w	r8, sl, r2
 8026f40:	4407      	add	r7, r0
 8026f42:	ea88 70e8 	eor.w	r0, r8, r8, asr #31
 8026f46:	eba0 70e8 	sub.w	r0, r0, r8, asr #31
 8026f4a:	f8bb 8006 	ldrh.w	r8, [fp, #6]
 8026f4e:	b23f      	sxth	r7, r7
 8026f50:	4490      	add	r8, r2
 8026f52:	eba9 0707 	sub.w	r7, r9, r7
 8026f56:	fa0f f888 	sxth.w	r8, r8
 8026f5a:	ebaa 0808 	sub.w	r8, sl, r8
 8026f5e:	2f00      	cmp	r7, #0
 8026f60:	bfb8      	it	lt
 8026f62:	427f      	neglt	r7, r7
 8026f64:	f1b8 0f00 	cmp.w	r8, #0
 8026f68:	bfb8      	it	lt
 8026f6a:	f1c8 0800 	rsblt	r8, r8, #0
 8026f6e:	45bc      	cmp	ip, r7
 8026f70:	bfcc      	ite	gt
 8026f72:	f10c 0701 	addgt.w	r7, ip, #1
 8026f76:	3701      	addle	r7, #1
 8026f78:	4540      	cmp	r0, r8
 8026f7a:	bfc8      	it	gt
 8026f7c:	f100 0801 	addgt.w	r8, r0, #1
 8026f80:	f894 0044 	ldrb.w	r0, [r4, #68]	; 0x44
 8026f84:	f100 0001 	add.w	r0, r0, #1
 8026f88:	ea4f 0060 	mov.w	r0, r0, asr #1
 8026f8c:	f04f 0202 	mov.w	r2, #2
 8026f90:	f1c0 005a 	rsb	r0, r0, #90	; 0x5a
 8026f94:	fb91 f1f2 	sdiv	r1, r1, r2
 8026f98:	eba3 0301 	sub.w	r3, r3, r1
 8026f9c:	bfd8      	it	le
 8026f9e:	f108 0801 	addle.w	r8, r8, #1
 8026fa2:	9201      	str	r2, [sp, #4]
 8026fa4:	930d      	str	r3, [sp, #52]	; 0x34
 8026fa6:	f7ea fad5 	bl	8011554 <_ZN8touchgfx7CWRUtil4sineEi>
 8026faa:	a92a      	add	r1, sp, #168	; 0xa8
 8026fac:	fb08 f808 	mul.w	r8, r8, r8
 8026fb0:	f841 0d70 	str.w	r0, [r1, #-112]!
 8026fb4:	a80d      	add	r0, sp, #52	; 0x34
 8026fb6:	f7ea f9b5 	bl	8011324 <_ZNK8touchgfx7CWRUtil2Q5mlERKNS0_3Q15E>
 8026fba:	fb07 8707 	mla	r7, r7, r7, r8
 8026fbe:	f04f 0c20 	mov.w	ip, #32
 8026fc2:	fb90 f0fc 	sdiv	r0, r0, ip
 8026fc6:	4340      	muls	r0, r0
 8026fc8:	4287      	cmp	r7, r0
 8026fca:	9a01      	ldr	r2, [sp, #4]
 8026fcc:	da04      	bge.n	8026fd8 <_ZNK8touchgfx6Circle16drawCanvasWidgetERKNS_4RectE+0xf8>
 8026fce:	2401      	movs	r4, #1
 8026fd0:	4620      	mov	r0, r4
 8026fd2:	b02b      	add	sp, #172	; 0xac
 8026fd4:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
 8026fd8:	6b60      	ldr	r0, [r4, #52]	; 0x34
 8026fda:	6c21      	ldr	r1, [r4, #64]	; 0x40
 8026fdc:	fb91 f3f2 	sdiv	r3, r1, r2
 8026fe0:	4403      	add	r3, r0
 8026fe2:	fb93 f3fc 	sdiv	r3, r3, ip
 8026fe6:	f9bb 1000 	ldrsh.w	r1, [fp]
 8026fea:	f8bb 2004 	ldrh.w	r2, [fp, #4]
 8026fee:	440a      	add	r2, r1
 8026ff0:	b212      	sxth	r2, r2
 8026ff2:	454a      	cmp	r2, r9
 8026ff4:	bfa8      	it	ge
 8026ff6:	464a      	movge	r2, r9
 8026ff8:	428a      	cmp	r2, r1
 8026ffa:	bfac      	ite	ge
 8026ffc:	eba9 0902 	subge.w	r9, r9, r2
 8027000:	eba9 0901 	sublt.w	r9, r9, r1
 8027004:	f8bb 2006 	ldrh.w	r2, [fp, #6]
 8027008:	f9bb 1002 	ldrsh.w	r1, [fp, #2]
 802700c:	440a      	add	r2, r1
 802700e:	b212      	sxth	r2, r2
 8027010:	4552      	cmp	r2, sl
 8027012:	bfa8      	it	ge
 8027014:	4652      	movge	r2, sl
 8027016:	428a      	cmp	r2, r1
 8027018:	bfac      	ite	ge
 802701a:	ebaa 0a02 	subge.w	sl, sl, r2
 802701e:	ebaa 0a01 	sublt.w	sl, sl, r1
 8027022:	3301      	adds	r3, #1
 8027024:	fb0a fa0a 	mul.w	sl, sl, sl
 8027028:	fb09 a909 	mla	r9, r9, r9, sl
 802702c:	435b      	muls	r3, r3
 802702e:	4599      	cmp	r9, r3
 8027030:	dccd      	bgt.n	8026fce <_ZNK8touchgfx6Circle16drawCanvasWidgetERKNS_4RectE+0xee>
 8027032:	465a      	mov	r2, fp
 8027034:	4621      	mov	r1, r4
 8027036:	a80e      	add	r0, sp, #56	; 0x38
 8027038:	f7ff faae 	bl	8026598 <_ZN8touchgfx6CanvasC1EPKNS_12CanvasWidgetERKNS_4RectE>
 802703c:	6b62      	ldr	r2, [r4, #52]	; 0x34
 802703e:	6c23      	ldr	r3, [r4, #64]	; 0x40
 8027040:	9209      	str	r2, [sp, #36]	; 0x24
 8027042:	ebb3 0f42 	cmp.w	r3, r2, lsl #1
 8027046:	930a      	str	r3, [sp, #40]	; 0x28
 8027048:	dd07      	ble.n	802705a <_ZNK8touchgfx6Circle16drawCanvasWidgetERKNS_4RectE+0x17a>
 802704a:	2102      	movs	r1, #2
 802704c:	fb93 f3f1 	sdiv	r3, r3, r1
 8027050:	4413      	add	r3, r2
 8027052:	930a      	str	r3, [sp, #40]	; 0x28
 8027054:	fb93 f3f1 	sdiv	r3, r3, r1
 8027058:	9309      	str	r3, [sp, #36]	; 0x24
 802705a:	e9dd 2309 	ldrd	r2, r3, [sp, #36]	; 0x24
 802705e:	4630      	mov	r0, r6
 8027060:	eb03 0342 	add.w	r3, r3, r2, lsl #1
 8027064:	930b      	str	r3, [sp, #44]	; 0x2c
 8027066:	f894 7044 	ldrb.w	r7, [r4, #68]	; 0x44
 802706a:	f7ea fa93 	bl	8011594 <_ZN8touchgfx7CWRUtil4sineENS0_2Q5E>
 802706e:	f10d 09a8 	add.w	r9, sp, #168	; 0xa8
 8027072:	f04f 0a02 	mov.w	sl, #2
 8027076:	f849 0d74 	str.w	r0, [r9, #-116]!
 802707a:	a80b      	add	r0, sp, #44	; 0x2c
 802707c:	4649      	mov	r1, r9
 802707e:	f7ea f951 	bl	8011324 <_ZNK8touchgfx7CWRUtil2Q5mlERKNS0_3Q15E>
 8027082:	6ae3      	ldr	r3, [r4, #44]	; 0x2c
 8027084:	fb90 f0fa 	sdiv	r0, r0, sl
 8027088:	eb00 0b03 	add.w	fp, r0, r3
 802708c:	4630      	mov	r0, r6
 802708e:	f7ff fcc7 	bl	8026a20 <_ZN8touchgfx7CWRUtil6cosineENS0_2Q5E>
 8027092:	f10d 08a8 	add.w	r8, sp, #168	; 0xa8
 8027096:	017f      	lsls	r7, r7, #5
 8027098:	f848 0d78 	str.w	r0, [r8, #-120]!
 802709c:	a80b      	add	r0, sp, #44	; 0x2c
 802709e:	4641      	mov	r1, r8
 80270a0:	f7ea f940 	bl	8011324 <_ZNK8touchgfx7CWRUtil2Q5mlERKNS0_3Q15E>
 80270a4:	6b22      	ldr	r2, [r4, #48]	; 0x30
 80270a6:	fb90 f0fa 	sdiv	r0, r0, sl
 80270aa:	4659      	mov	r1, fp
 80270ac:	1a12      	subs	r2, r2, r0
 80270ae:	a80e      	add	r0, sp, #56	; 0x38
 80270b0:	f7ff fbf2 	bl	8026898 <_ZN8touchgfx6Canvas6moveToENS_7CWRUtil2Q5ES2_>
 80270b4:	f106 0a20 	add.w	sl, r6, #32
 80270b8:	bb67      	cbnz	r7, 8027114 <_ZNK8touchgfx6Circle16drawCanvasWidgetERKNS_4RectE+0x234>
 80270ba:	46b3      	mov	fp, r6
 80270bc:	45aa      	cmp	sl, r5
 80270be:	9a0a      	ldr	r2, [sp, #40]	; 0x28
 80270c0:	dc33      	bgt.n	802712a <_ZNK8touchgfx6Circle16drawCanvasWidgetERKNS_4RectE+0x24a>
 80270c2:	9909      	ldr	r1, [sp, #36]	; 0x24
 80270c4:	4650      	mov	r0, sl
 80270c6:	eb02 0241 	add.w	r2, r2, r1, lsl #1
 80270ca:	920b      	str	r2, [sp, #44]	; 0x2c
 80270cc:	f7ea fa62 	bl	8011594 <_ZN8touchgfx7CWRUtil4sineENS0_2Q5E>
 80270d0:	4641      	mov	r1, r8
 80270d2:	900c      	str	r0, [sp, #48]	; 0x30
 80270d4:	a80b      	add	r0, sp, #44	; 0x2c
 80270d6:	f7ea f925 	bl	8011324 <_ZNK8touchgfx7CWRUtil2Q5mlERKNS0_3Q15E>
 80270da:	6ae2      	ldr	r2, [r4, #44]	; 0x2c
 80270dc:	2302      	movs	r3, #2
 80270de:	fb90 f0f3 	sdiv	r0, r0, r3
 80270e2:	eb00 0b02 	add.w	fp, r0, r2
 80270e6:	4650      	mov	r0, sl
 80270e8:	f7ff fc9a 	bl	8026a20 <_ZN8touchgfx7CWRUtil6cosineENS0_2Q5E>
 80270ec:	4649      	mov	r1, r9
 80270ee:	900d      	str	r0, [sp, #52]	; 0x34
 80270f0:	a80b      	add	r0, sp, #44	; 0x2c
 80270f2:	f7ea f917 	bl	8011324 <_ZNK8touchgfx7CWRUtil2Q5mlERKNS0_3Q15E>
 80270f6:	6b22      	ldr	r2, [r4, #48]	; 0x30
 80270f8:	2302      	movs	r3, #2
 80270fa:	4659      	mov	r1, fp
 80270fc:	fb90 f0f3 	sdiv	r0, r0, r3
 8027100:	1a12      	subs	r2, r2, r0
 8027102:	a80e      	add	r0, sp, #56	; 0x38
 8027104:	46d3      	mov	fp, sl
 8027106:	f7ff fc14 	bl	8026932 <_ZN8touchgfx6Canvas6lineToENS_7CWRUtil2Q5ES2_>
 802710a:	44ba      	add	sl, r7
 802710c:	e7d6      	b.n	80270bc <_ZNK8touchgfx6Circle16drawCanvasWidgetERKNS_4RectE+0x1dc>
 802710e:	fb93 f3f2 	sdiv	r3, r3, r2
 8027112:	e768      	b.n	8026fe6 <_ZNK8touchgfx6Circle16drawCanvasWidgetERKNS_4RectE+0x106>
 8027114:	fb9a f2f7 	sdiv	r2, sl, r7
 8027118:	fb07 a212 	mls	r2, r7, r2, sl
 802711c:	1aba      	subs	r2, r7, r2
 802711e:	fb92 f1f7 	sdiv	r1, r2, r7
 8027122:	fb07 2211 	mls	r2, r7, r1, r2
 8027126:	4492      	add	sl, r2
 8027128:	e7c7      	b.n	80270ba <_ZNK8touchgfx6Circle16drawCanvasWidgetERKNS_4RectE+0x1da>
 802712a:	45ab      	cmp	fp, r5
 802712c:	da23      	bge.n	8027176 <_ZNK8touchgfx6Circle16drawCanvasWidgetERKNS_4RectE+0x296>
 802712e:	9b09      	ldr	r3, [sp, #36]	; 0x24
 8027130:	4628      	mov	r0, r5
 8027132:	eb02 0243 	add.w	r2, r2, r3, lsl #1
 8027136:	920b      	str	r2, [sp, #44]	; 0x2c
 8027138:	f7ea fa2c 	bl	8011594 <_ZN8touchgfx7CWRUtil4sineENS0_2Q5E>
 802713c:	4641      	mov	r1, r8
 802713e:	900c      	str	r0, [sp, #48]	; 0x30
 8027140:	a80b      	add	r0, sp, #44	; 0x2c
 8027142:	f7ea f8ef 	bl	8011324 <_ZNK8touchgfx7CWRUtil2Q5mlERKNS0_3Q15E>
 8027146:	6ae3      	ldr	r3, [r4, #44]	; 0x2c
 8027148:	f04f 0a02 	mov.w	sl, #2
 802714c:	fb90 f0fa 	sdiv	r0, r0, sl
 8027150:	4403      	add	r3, r0
 8027152:	4628      	mov	r0, r5
 8027154:	9301      	str	r3, [sp, #4]
 8027156:	f7ff fc63 	bl	8026a20 <_ZN8touchgfx7CWRUtil6cosineENS0_2Q5E>
 802715a:	4649      	mov	r1, r9
 802715c:	900d      	str	r0, [sp, #52]	; 0x34
 802715e:	a80b      	add	r0, sp, #44	; 0x2c
 8027160:	f7ea f8e0 	bl	8011324 <_ZNK8touchgfx7CWRUtil2Q5mlERKNS0_3Q15E>
 8027164:	6b22      	ldr	r2, [r4, #48]	; 0x30
 8027166:	9b01      	ldr	r3, [sp, #4]
 8027168:	fb90 f0fa 	sdiv	r0, r0, sl
 802716c:	4619      	mov	r1, r3
 802716e:	1a12      	subs	r2, r2, r0
 8027170:	a80e      	add	r0, sp, #56	; 0x38
 8027172:	f7ff fbde 	bl	8026932 <_ZN8touchgfx6Canvas6lineToENS_7CWRUtil2Q5ES2_>
 8027176:	9b0a      	ldr	r3, [sp, #40]	; 0x28
 8027178:	b99b      	cbnz	r3, 80271a2 <_ZNK8touchgfx6Circle16drawCanvasWidgetERKNS_4RectE+0x2c2>
 802717a:	1bad      	subs	r5, r5, r6
 802717c:	f5b5 5f34 	cmp.w	r5, #11520	; 0x2d00
 8027180:	da04      	bge.n	802718c <_ZNK8touchgfx6Circle16drawCanvasWidgetERKNS_4RectE+0x2ac>
 8027182:	e9d4 120b 	ldrd	r1, r2, [r4, #44]	; 0x2c
 8027186:	a80e      	add	r0, sp, #56	; 0x38
 8027188:	f7ff fbd3 	bl	8026932 <_ZN8touchgfx6Canvas6lineToENS_7CWRUtil2Q5ES2_>
 802718c:	21ff      	movs	r1, #255	; 0xff
 802718e:	a80e      	add	r0, sp, #56	; 0x38
 8027190:	f7ff fabe 	bl	8026710 <_ZN8touchgfx6Canvas6renderEh>
 8027194:	4604      	mov	r4, r0
 8027196:	4b8a      	ldr	r3, [pc, #552]	; (80273c0 <_ZNK8touchgfx6Circle16drawCanvasWidgetERKNS_4RectE+0x4e0>)
 8027198:	930e      	str	r3, [sp, #56]	; 0x38
 802719a:	a816      	add	r0, sp, #88	; 0x58
 802719c:	f7eb fd2e 	bl	8012bfc <_ZN8touchgfx7OutlineD1Ev>
 80271a0:	e716      	b.n	8026fd0 <_ZNK8touchgfx6Circle16drawCanvasWidgetERKNS_4RectE+0xf0>
 80271a2:	e9dd 2317 	ldrd	r2, r3, [sp, #92]	; 0x5c
 80271a6:	429a      	cmp	r2, r3
 80271a8:	f0c0 8107 	bcc.w	80273ba <_ZNK8touchgfx6Circle16drawCanvasWidgetERKNS_4RectE+0x4da>
 80271ac:	1bab      	subs	r3, r5, r6
 80271ae:	f894 a045 	ldrb.w	sl, [r4, #69]	; 0x45
 80271b2:	9301      	str	r3, [sp, #4]
 80271b4:	f5b3 5f34 	cmp.w	r3, #11520	; 0x2d00
 80271b8:	ea4f 1a4a 	mov.w	sl, sl, lsl #5
 80271bc:	da43      	bge.n	8027246 <_ZNK8touchgfx6Circle16drawCanvasWidgetERKNS_4RectE+0x366>
 80271be:	4628      	mov	r0, r5
 80271c0:	f7ea f9e8 	bl	8011594 <_ZN8touchgfx7CWRUtil4sineENS0_2Q5E>
 80271c4:	4649      	mov	r1, r9
 80271c6:	900d      	str	r0, [sp, #52]	; 0x34
 80271c8:	a809      	add	r0, sp, #36	; 0x24
 80271ca:	f7ea f8ab 	bl	8011324 <_ZNK8touchgfx7CWRUtil2Q5mlERKNS0_3Q15E>
 80271ce:	6ae3      	ldr	r3, [r4, #44]	; 0x2c
 80271d0:	18c3      	adds	r3, r0, r3
 80271d2:	4628      	mov	r0, r5
 80271d4:	9303      	str	r3, [sp, #12]
 80271d6:	f7ff fc23 	bl	8026a20 <_ZN8touchgfx7CWRUtil6cosineENS0_2Q5E>
 80271da:	4649      	mov	r1, r9
 80271dc:	900d      	str	r0, [sp, #52]	; 0x34
 80271de:	a809      	add	r0, sp, #36	; 0x24
 80271e0:	f7ea f8a0 	bl	8011324 <_ZNK8touchgfx7CWRUtil2Q5mlERKNS0_3Q15E>
 80271e4:	6b23      	ldr	r3, [r4, #48]	; 0x30
 80271e6:	f505 52b4 	add.w	r2, r5, #5760	; 0x1680
 80271ea:	1a1b      	subs	r3, r3, r0
 80271ec:	9302      	str	r3, [sp, #8]
 80271ee:	9204      	str	r2, [sp, #16]
 80271f0:	eb0a 0305 	add.w	r3, sl, r5
 80271f4:	9a04      	ldr	r2, [sp, #16]
 80271f6:	4293      	cmp	r3, r2
 80271f8:	da25      	bge.n	8027246 <_ZNK8touchgfx6Circle16drawCanvasWidgetERKNS_4RectE+0x366>
 80271fa:	4618      	mov	r0, r3
 80271fc:	9306      	str	r3, [sp, #24]
 80271fe:	f7ea f9c9 	bl	8011594 <_ZN8touchgfx7CWRUtil4sineENS0_2Q5E>
 8027202:	4649      	mov	r1, r9
 8027204:	900d      	str	r0, [sp, #52]	; 0x34
 8027206:	a80a      	add	r0, sp, #40	; 0x28
 8027208:	f7ea f88c 	bl	8011324 <_ZNK8touchgfx7CWRUtil2Q5mlERKNS0_3Q15E>
 802720c:	9b03      	ldr	r3, [sp, #12]
 802720e:	2202      	movs	r2, #2
 8027210:	fb90 f0f2 	sdiv	r0, r0, r2
 8027214:	18c3      	adds	r3, r0, r3
 8027216:	9305      	str	r3, [sp, #20]
 8027218:	9b06      	ldr	r3, [sp, #24]
 802721a:	9207      	str	r2, [sp, #28]
 802721c:	4618      	mov	r0, r3
 802721e:	f7ff fbff 	bl	8026a20 <_ZN8touchgfx7CWRUtil6cosineENS0_2Q5E>
 8027222:	a92a      	add	r1, sp, #168	; 0xa8
 8027224:	f841 0d78 	str.w	r0, [r1, #-120]!
 8027228:	a80a      	add	r0, sp, #40	; 0x28
 802722a:	f7ea f87b 	bl	8011324 <_ZNK8touchgfx7CWRUtil2Q5mlERKNS0_3Q15E>
 802722e:	9b02      	ldr	r3, [sp, #8]
 8027230:	9a07      	ldr	r2, [sp, #28]
 8027232:	9905      	ldr	r1, [sp, #20]
 8027234:	fb90 f2f2 	sdiv	r2, r0, r2
 8027238:	a80e      	add	r0, sp, #56	; 0x38
 802723a:	1a9a      	subs	r2, r3, r2
 802723c:	f7ff fb79 	bl	8026932 <_ZN8touchgfx6Canvas6lineToENS_7CWRUtil2Q5ES2_>
 8027240:	9b06      	ldr	r3, [sp, #24]
 8027242:	4453      	add	r3, sl
 8027244:	e7d6      	b.n	80271f4 <_ZNK8touchgfx6Circle16drawCanvasWidgetERKNS_4RectE+0x314>
 8027246:	45ab      	cmp	fp, r5
 8027248:	da25      	bge.n	8027296 <_ZNK8touchgfx6Circle16drawCanvasWidgetERKNS_4RectE+0x3b6>
 802724a:	e9dd 2309 	ldrd	r2, r3, [sp, #36]	; 0x24
 802724e:	4628      	mov	r0, r5
 8027250:	ebc3 0342 	rsb	r3, r3, r2, lsl #1
 8027254:	930b      	str	r3, [sp, #44]	; 0x2c
 8027256:	f7ea f99d 	bl	8011594 <_ZN8touchgfx7CWRUtil4sineENS0_2Q5E>
 802725a:	4641      	mov	r1, r8
 802725c:	900c      	str	r0, [sp, #48]	; 0x30
 802725e:	a80b      	add	r0, sp, #44	; 0x2c
 8027260:	f7ea f860 	bl	8011324 <_ZNK8touchgfx7CWRUtil2Q5mlERKNS0_3Q15E>
 8027264:	6ae3      	ldr	r3, [r4, #44]	; 0x2c
 8027266:	2202      	movs	r2, #2
 8027268:	fb90 f0f2 	sdiv	r0, r0, r2
 802726c:	eb00 0903 	add.w	r9, r0, r3
 8027270:	4628      	mov	r0, r5
 8027272:	9202      	str	r2, [sp, #8]
 8027274:	f7ff fbd4 	bl	8026a20 <_ZN8touchgfx7CWRUtil6cosineENS0_2Q5E>
 8027278:	a92a      	add	r1, sp, #168	; 0xa8
 802727a:	f841 0d74 	str.w	r0, [r1, #-116]!
 802727e:	a80b      	add	r0, sp, #44	; 0x2c
 8027280:	f7ea f850 	bl	8011324 <_ZNK8touchgfx7CWRUtil2Q5mlERKNS0_3Q15E>
 8027284:	6b23      	ldr	r3, [r4, #48]	; 0x30
 8027286:	9a02      	ldr	r2, [sp, #8]
 8027288:	fb90 f2f2 	sdiv	r2, r0, r2
 802728c:	4649      	mov	r1, r9
 802728e:	1a9a      	subs	r2, r3, r2
 8027290:	a80e      	add	r0, sp, #56	; 0x38
 8027292:	f7ff fb4e 	bl	8026932 <_ZN8touchgfx6Canvas6lineToENS_7CWRUtil2Q5ES2_>
 8027296:	46d9      	mov	r9, fp
 8027298:	2502      	movs	r5, #2
 802729a:	45b1      	cmp	r9, r6
 802729c:	db25      	blt.n	80272ea <_ZNK8touchgfx6Circle16drawCanvasWidgetERKNS_4RectE+0x40a>
 802729e:	e9dd 2309 	ldrd	r2, r3, [sp, #36]	; 0x24
 80272a2:	4648      	mov	r0, r9
 80272a4:	ebc3 0342 	rsb	r3, r3, r2, lsl #1
 80272a8:	930b      	str	r3, [sp, #44]	; 0x2c
 80272aa:	f7ea f973 	bl	8011594 <_ZN8touchgfx7CWRUtil4sineENS0_2Q5E>
 80272ae:	4641      	mov	r1, r8
 80272b0:	900c      	str	r0, [sp, #48]	; 0x30
 80272b2:	a80b      	add	r0, sp, #44	; 0x2c
 80272b4:	f7ea f836 	bl	8011324 <_ZNK8touchgfx7CWRUtil2Q5mlERKNS0_3Q15E>
 80272b8:	6ae3      	ldr	r3, [r4, #44]	; 0x2c
 80272ba:	fb90 f0f5 	sdiv	r0, r0, r5
 80272be:	eb00 0b03 	add.w	fp, r0, r3
 80272c2:	4648      	mov	r0, r9
 80272c4:	f7ff fbac 	bl	8026a20 <_ZN8touchgfx7CWRUtil6cosineENS0_2Q5E>
 80272c8:	a90d      	add	r1, sp, #52	; 0x34
 80272ca:	900d      	str	r0, [sp, #52]	; 0x34
 80272cc:	a80b      	add	r0, sp, #44	; 0x2c
 80272ce:	f7ea f829 	bl	8011324 <_ZNK8touchgfx7CWRUtil2Q5mlERKNS0_3Q15E>
 80272d2:	6b22      	ldr	r2, [r4, #48]	; 0x30
 80272d4:	fb90 f0f5 	sdiv	r0, r0, r5
 80272d8:	4659      	mov	r1, fp
 80272da:	1a12      	subs	r2, r2, r0
 80272dc:	a80e      	add	r0, sp, #56	; 0x38
 80272de:	46cb      	mov	fp, r9
 80272e0:	f7ff fb27 	bl	8026932 <_ZN8touchgfx6Canvas6lineToENS_7CWRUtil2Q5ES2_>
 80272e4:	eba9 0907 	sub.w	r9, r9, r7
 80272e8:	e7d7      	b.n	802729a <_ZNK8touchgfx6Circle16drawCanvasWidgetERKNS_4RectE+0x3ba>
 80272ea:	455e      	cmp	r6, fp
 80272ec:	da22      	bge.n	8027334 <_ZNK8touchgfx6Circle16drawCanvasWidgetERKNS_4RectE+0x454>
 80272ee:	e9dd 2309 	ldrd	r2, r3, [sp, #36]	; 0x24
 80272f2:	4630      	mov	r0, r6
 80272f4:	ebc3 0342 	rsb	r3, r3, r2, lsl #1
 80272f8:	930b      	str	r3, [sp, #44]	; 0x2c
 80272fa:	f7ea f94b 	bl	8011594 <_ZN8touchgfx7CWRUtil4sineENS0_2Q5E>
 80272fe:	4641      	mov	r1, r8
 8027300:	900c      	str	r0, [sp, #48]	; 0x30
 8027302:	a80b      	add	r0, sp, #44	; 0x2c
 8027304:	f7ea f80e 	bl	8011324 <_ZNK8touchgfx7CWRUtil2Q5mlERKNS0_3Q15E>
 8027308:	6ae7      	ldr	r7, [r4, #44]	; 0x2c
 802730a:	2502      	movs	r5, #2
 802730c:	fb90 f0f5 	sdiv	r0, r0, r5
 8027310:	4407      	add	r7, r0
 8027312:	4630      	mov	r0, r6
 8027314:	f7ff fb84 	bl	8026a20 <_ZN8touchgfx7CWRUtil6cosineENS0_2Q5E>
 8027318:	a92a      	add	r1, sp, #168	; 0xa8
 802731a:	f841 0d74 	str.w	r0, [r1, #-116]!
 802731e:	a80b      	add	r0, sp, #44	; 0x2c
 8027320:	f7ea f800 	bl	8011324 <_ZNK8touchgfx7CWRUtil2Q5mlERKNS0_3Q15E>
 8027324:	6b22      	ldr	r2, [r4, #48]	; 0x30
 8027326:	fb90 f0f5 	sdiv	r0, r0, r5
 802732a:	4639      	mov	r1, r7
 802732c:	1a12      	subs	r2, r2, r0
 802732e:	a80e      	add	r0, sp, #56	; 0x38
 8027330:	f7ff faff 	bl	8026932 <_ZN8touchgfx6Canvas6lineToENS_7CWRUtil2Q5ES2_>
 8027334:	9b01      	ldr	r3, [sp, #4]
 8027336:	f5b3 5f34 	cmp.w	r3, #11520	; 0x2d00
 802733a:	f6bf af27 	bge.w	802718c <_ZNK8touchgfx6Circle16drawCanvasWidgetERKNS_4RectE+0x2ac>
 802733e:	4630      	mov	r0, r6
 8027340:	f7ea f928 	bl	8011594 <_ZN8touchgfx7CWRUtil4sineENS0_2Q5E>
 8027344:	ad2a      	add	r5, sp, #168	; 0xa8
 8027346:	f04f 0b02 	mov.w	fp, #2
 802734a:	f845 0d74 	str.w	r0, [r5, #-116]!
 802734e:	a809      	add	r0, sp, #36	; 0x24
 8027350:	4629      	mov	r1, r5
 8027352:	f7e9 ffe7 	bl	8011324 <_ZNK8touchgfx7CWRUtil2Q5mlERKNS0_3Q15E>
 8027356:	6ae3      	ldr	r3, [r4, #44]	; 0x2c
 8027358:	eb00 0903 	add.w	r9, r0, r3
 802735c:	4630      	mov	r0, r6
 802735e:	f7ff fb5f 	bl	8026a20 <_ZN8touchgfx7CWRUtil6cosineENS0_2Q5E>
 8027362:	4629      	mov	r1, r5
 8027364:	900d      	str	r0, [sp, #52]	; 0x34
 8027366:	a809      	add	r0, sp, #36	; 0x24
 8027368:	f7e9 ffdc 	bl	8011324 <_ZNK8touchgfx7CWRUtil2Q5mlERKNS0_3Q15E>
 802736c:	6b23      	ldr	r3, [r4, #48]	; 0x30
 802736e:	f5a6 54b4 	sub.w	r4, r6, #5760	; 0x1680
 8027372:	eba3 0800 	sub.w	r8, r3, r0
 8027376:	4454      	add	r4, sl
 8027378:	42a6      	cmp	r6, r4
 802737a:	f77f af07 	ble.w	802718c <_ZNK8touchgfx6Circle16drawCanvasWidgetERKNS_4RectE+0x2ac>
 802737e:	4620      	mov	r0, r4
 8027380:	f7ea f908 	bl	8011594 <_ZN8touchgfx7CWRUtil4sineENS0_2Q5E>
 8027384:	4629      	mov	r1, r5
 8027386:	900d      	str	r0, [sp, #52]	; 0x34
 8027388:	a80a      	add	r0, sp, #40	; 0x28
 802738a:	f7e9 ffcb 	bl	8011324 <_ZNK8touchgfx7CWRUtil2Q5mlERKNS0_3Q15E>
 802738e:	fb90 f0fb 	sdiv	r0, r0, fp
 8027392:	eb00 0709 	add.w	r7, r0, r9
 8027396:	4620      	mov	r0, r4
 8027398:	f7ff fb42 	bl	8026a20 <_ZN8touchgfx7CWRUtil6cosineENS0_2Q5E>
 802739c:	a90c      	add	r1, sp, #48	; 0x30
 802739e:	900c      	str	r0, [sp, #48]	; 0x30
 80273a0:	a80a      	add	r0, sp, #40	; 0x28
 80273a2:	f7e9 ffbf 	bl	8011324 <_ZNK8touchgfx7CWRUtil2Q5mlERKNS0_3Q15E>
 80273a6:	4639      	mov	r1, r7
 80273a8:	fb90 f2fb 	sdiv	r2, r0, fp
 80273ac:	a80e      	add	r0, sp, #56	; 0x38
 80273ae:	eba8 0202 	sub.w	r2, r8, r2
 80273b2:	f7ff fabe 	bl	8026932 <_ZN8touchgfx6Canvas6lineToENS_7CWRUtil2Q5ES2_>
 80273b6:	4454      	add	r4, sl
 80273b8:	e7de      	b.n	8027378 <_ZNK8touchgfx6Circle16drawCanvasWidgetERKNS_4RectE+0x498>
 80273ba:	2400      	movs	r4, #0
 80273bc:	e6eb      	b.n	8027196 <_ZNK8touchgfx6Circle16drawCanvasWidgetERKNS_4RectE+0x2b6>
 80273be:	bf00      	nop
 80273c0:	0802ec60 	.word	0x0802ec60

080273c4 <_ZN8touchgfx14AbstractButton16handleClickEventERKNS_10ClickEventE>:
 80273c4:	b570      	push	{r4, r5, r6, lr}
 80273c6:	790b      	ldrb	r3, [r1, #4]
 80273c8:	f890 502c 	ldrb.w	r5, [r0, #44]	; 0x2c
 80273cc:	2b00      	cmp	r3, #0
 80273ce:	bf0c      	ite	eq
 80273d0:	2301      	moveq	r3, #1
 80273d2:	2300      	movne	r3, #0
 80273d4:	4604      	mov	r4, r0
 80273d6:	460e      	mov	r6, r1
 80273d8:	f880 302c 	strb.w	r3, [r0, #44]	; 0x2c
 80273dc:	d109      	bne.n	80273f2 <_ZN8touchgfx14AbstractButton16handleClickEventERKNS_10ClickEventE+0x2e>
 80273de:	b14d      	cbz	r5, 80273f4 <_ZN8touchgfx14AbstractButton16handleClickEventERKNS_10ClickEventE+0x30>
 80273e0:	7933      	ldrb	r3, [r6, #4]
 80273e2:	2b01      	cmp	r3, #1
 80273e4:	d10c      	bne.n	8027400 <_ZN8touchgfx14AbstractButton16handleClickEventERKNS_10ClickEventE+0x3c>
 80273e6:	6823      	ldr	r3, [r4, #0]
 80273e8:	4620      	mov	r0, r4
 80273ea:	6e1b      	ldr	r3, [r3, #96]	; 0x60
 80273ec:	e8bd 4070 	ldmia.w	sp!, {r4, r5, r6, lr}
 80273f0:	4718      	bx	r3
 80273f2:	b12d      	cbz	r5, 8027400 <_ZN8touchgfx14AbstractButton16handleClickEventERKNS_10ClickEventE+0x3c>
 80273f4:	6823      	ldr	r3, [r4, #0]
 80273f6:	4620      	mov	r0, r4
 80273f8:	695b      	ldr	r3, [r3, #20]
 80273fa:	4798      	blx	r3
 80273fc:	2d00      	cmp	r5, #0
 80273fe:	d1ef      	bne.n	80273e0 <_ZN8touchgfx14AbstractButton16handleClickEventERKNS_10ClickEventE+0x1c>
 8027400:	bd70      	pop	{r4, r5, r6, pc}

08027402 <_ZN8touchgfx13TextureMapper21setRenderingAlgorithmENS0_18RenderingAlgorithmE>:
 8027402:	f880 1029 	strb.w	r1, [r0, #41]	; 0x29
 8027406:	4770      	bx	lr

08027408 <_ZNK8touchgfx13TextureMapper21getRenderingAlgorithmEv>:
 8027408:	f890 0029 	ldrb.w	r0, [r0, #41]	; 0x29
 802740c:	4770      	bx	lr

0802740e <_ZN8touchgfx13TextureMapper9setXAngleEf>:
 802740e:	6802      	ldr	r2, [r0, #0]
 8027410:	ed90 1a0f 	vldr	s2, [r0, #60]	; 0x3c
 8027414:	6ed2      	ldr	r2, [r2, #108]	; 0x6c
 8027416:	edd0 0a0e 	vldr	s1, [r0, #56]	; 0x38
 802741a:	4710      	bx	r2

0802741c <_ZN8touchgfx13TextureMapper9setYAngleEf>:
 802741c:	6802      	ldr	r2, [r0, #0]
 802741e:	ed90 1a0f 	vldr	s2, [r0, #60]	; 0x3c
 8027422:	6ed2      	ldr	r2, [r2, #108]	; 0x6c
 8027424:	eef0 0a40 	vmov.f32	s1, s0
 8027428:	ed90 0a0d 	vldr	s0, [r0, #52]	; 0x34
 802742c:	4710      	bx	r2

0802742e <_ZN8touchgfx13TextureMapper9setZAngleEf>:
 802742e:	6802      	ldr	r2, [r0, #0]
 8027430:	edd0 0a0e 	vldr	s1, [r0, #56]	; 0x38
 8027434:	6ed2      	ldr	r2, [r2, #108]	; 0x6c
 8027436:	eeb0 1a40 	vmov.f32	s2, s0
 802743a:	ed90 0a0d 	vldr	s0, [r0, #52]	; 0x34
 802743e:	4710      	bx	r2

08027440 <_ZN8touchgfx13TextureMapper12updateXAngleEf>:
 8027440:	6802      	ldr	r2, [r0, #0]
 8027442:	ed90 1a0f 	vldr	s2, [r0, #60]	; 0x3c
 8027446:	6fd2      	ldr	r2, [r2, #124]	; 0x7c
 8027448:	edd0 0a0e 	vldr	s1, [r0, #56]	; 0x38
 802744c:	4710      	bx	r2

0802744e <_ZN8touchgfx13TextureMapper12updateYAngleEf>:
 802744e:	6802      	ldr	r2, [r0, #0]
 8027450:	ed90 1a0f 	vldr	s2, [r0, #60]	; 0x3c
 8027454:	6fd2      	ldr	r2, [r2, #124]	; 0x7c
 8027456:	eef0 0a40 	vmov.f32	s1, s0
 802745a:	ed90 0a0d 	vldr	s0, [r0, #52]	; 0x34
 802745e:	4710      	bx	r2

08027460 <_ZN8touchgfx13TextureMapper12updateZAngleEf>:
 8027460:	6802      	ldr	r2, [r0, #0]
 8027462:	edd0 0a0e 	vldr	s1, [r0, #56]	; 0x38
 8027466:	6fd2      	ldr	r2, [r2, #124]	; 0x7c
 8027468:	eeb0 1a40 	vmov.f32	s2, s0
 802746c:	ed90 0a0d 	vldr	s0, [r0, #52]	; 0x34
 8027470:	4710      	bx	r2

08027472 <_ZNK8touchgfx13TextureMapper9getXAngleEv>:
 8027472:	ed90 0a0d 	vldr	s0, [r0, #52]	; 0x34
 8027476:	4770      	bx	lr

08027478 <_ZNK8touchgfx13TextureMapper9getYAngleEv>:
 8027478:	ed90 0a0e 	vldr	s0, [r0, #56]	; 0x38
 802747c:	4770      	bx	lr

0802747e <_ZNK8touchgfx13TextureMapper9getZAngleEv>:
 802747e:	ed90 0a0f 	vldr	s0, [r0, #60]	; 0x3c
 8027482:	4770      	bx	lr

08027484 <_ZNK8touchgfx13TextureMapper8getScaleEv>:
 8027484:	ed90 0a10 	vldr	s0, [r0, #64]	; 0x40
 8027488:	4770      	bx	lr

0802748a <_ZNK8touchgfx13TextureMapper9getOrigoXEv>:
 802748a:	ed90 0a11 	vldr	s0, [r0, #68]	; 0x44
 802748e:	4770      	bx	lr

08027490 <_ZNK8touchgfx13TextureMapper9getOrigoYEv>:
 8027490:	ed90 0a12 	vldr	s0, [r0, #72]	; 0x48
 8027494:	4770      	bx	lr

08027496 <_ZNK8touchgfx13TextureMapper9getOrigoZEv>:
 8027496:	ed90 0a13 	vldr	s0, [r0, #76]	; 0x4c
 802749a:	4770      	bx	lr

0802749c <_ZNK8touchgfx13TextureMapper10getCameraXEv>:
 802749c:	ed90 0a14 	vldr	s0, [r0, #80]	; 0x50
 80274a0:	4770      	bx	lr

080274a2 <_ZNK8touchgfx13TextureMapper10getCameraYEv>:
 80274a2:	ed90 0a15 	vldr	s0, [r0, #84]	; 0x54
 80274a6:	4770      	bx	lr

080274a8 <_ZNK8touchgfx13TextureMapper17getCameraDistanceEv>:
 80274a8:	ed90 0a16 	vldr	s0, [r0, #88]	; 0x58
 80274ac:	4770      	bx	lr

080274ae <_ZN8touchgfx13TextureMapper17setBitmapPositionEii>:
 80274ae:	ee07 2a90 	vmov	s15, r2
 80274b2:	6803      	ldr	r3, [r0, #0]
 80274b4:	eef8 0ae7 	vcvt.f32.s32	s1, s15
 80274b8:	ee07 1a90 	vmov	s15, r1
 80274bc:	f8d3 30cc 	ldr.w	r3, [r3, #204]	; 0xcc
 80274c0:	eeb8 0ae7 	vcvt.f32.s32	s0, s15
 80274c4:	4718      	bx	r3

080274c6 <_ZNK8touchgfx13TextureMapper18getBitmapPositionXEv>:
 80274c6:	ed90 0a0b 	vldr	s0, [r0, #44]	; 0x2c
 80274ca:	4770      	bx	lr

080274cc <_ZNK8touchgfx13TextureMapper18getBitmapPositionYEv>:
 80274cc:	ed90 0a0c 	vldr	s0, [r0, #48]	; 0x30
 80274d0:	4770      	bx	lr

080274d2 <_ZNK8touchgfx13TextureMapper5getX0Ev>:
 80274d2:	ed90 0a17 	vldr	s0, [r0, #92]	; 0x5c
 80274d6:	4770      	bx	lr

080274d8 <_ZNK8touchgfx13TextureMapper5getX1Ev>:
 80274d8:	ed90 0a1a 	vldr	s0, [r0, #104]	; 0x68
 80274dc:	4770      	bx	lr

080274de <_ZNK8touchgfx13TextureMapper5getX2Ev>:
 80274de:	ed90 0a1d 	vldr	s0, [r0, #116]	; 0x74
 80274e2:	4770      	bx	lr

080274e4 <_ZNK8touchgfx13TextureMapper5getX3Ev>:
 80274e4:	ed90 0a20 	vldr	s0, [r0, #128]	; 0x80
 80274e8:	4770      	bx	lr

080274ea <_ZNK8touchgfx13TextureMapper5getY0Ev>:
 80274ea:	ed90 0a18 	vldr	s0, [r0, #96]	; 0x60
 80274ee:	4770      	bx	lr

080274f0 <_ZNK8touchgfx13TextureMapper5getY1Ev>:
 80274f0:	ed90 0a1b 	vldr	s0, [r0, #108]	; 0x6c
 80274f4:	4770      	bx	lr

080274f6 <_ZNK8touchgfx13TextureMapper5getY2Ev>:
 80274f6:	ed90 0a1e 	vldr	s0, [r0, #120]	; 0x78
 80274fa:	4770      	bx	lr

080274fc <_ZNK8touchgfx13TextureMapper5getY3Ev>:
 80274fc:	ed90 0a21 	vldr	s0, [r0, #132]	; 0x84
 8027500:	4770      	bx	lr

08027502 <_ZNK8touchgfx13TextureMapper5getZ0Ev>:
 8027502:	ed90 0a19 	vldr	s0, [r0, #100]	; 0x64
 8027506:	4770      	bx	lr

08027508 <_ZNK8touchgfx13TextureMapper5getZ1Ev>:
 8027508:	ed90 0a1c 	vldr	s0, [r0, #112]	; 0x70
 802750c:	4770      	bx	lr

0802750e <_ZNK8touchgfx13TextureMapper5getZ2Ev>:
 802750e:	ed90 0a1f 	vldr	s0, [r0, #124]	; 0x7c
 8027512:	4770      	bx	lr

08027514 <_ZNK8touchgfx13TextureMapper5getZ3Ev>:
 8027514:	ed90 0a22 	vldr	s0, [r0, #136]	; 0x88
 8027518:	4770      	bx	lr

0802751a <_ZN8touchgfx13TextureMapper12updateAnglesEfff>:
 802751a:	b510      	push	{r4, lr}
 802751c:	ed2d 8b04 	vpush	{d8-d9}
 8027520:	6803      	ldr	r3, [r0, #0]
 8027522:	4604      	mov	r4, r0
 8027524:	699b      	ldr	r3, [r3, #24]
 8027526:	eeb0 8a40 	vmov.f32	s16, s0
 802752a:	eef0 8a60 	vmov.f32	s17, s1
 802752e:	eeb0 9a41 	vmov.f32	s18, s2
 8027532:	4798      	blx	r3
 8027534:	6823      	ldr	r3, [r4, #0]
 8027536:	4620      	mov	r0, r4
 8027538:	6edb      	ldr	r3, [r3, #108]	; 0x6c
 802753a:	eeb0 1a49 	vmov.f32	s2, s18
 802753e:	eef0 0a68 	vmov.f32	s1, s17
 8027542:	eeb0 0a48 	vmov.f32	s0, s16
 8027546:	4798      	blx	r3
 8027548:	ecbd 8b04 	vpop	{d8-d9}
 802754c:	6823      	ldr	r3, [r4, #0]
 802754e:	4620      	mov	r0, r4
 8027550:	699b      	ldr	r3, [r3, #24]
 8027552:	e8bd 4010 	ldmia.w	sp!, {r4, lr}
 8027556:	4718      	bx	r3

08027558 <_ZN8touchgfx13TextureMapper11updateScaleEf>:
 8027558:	b510      	push	{r4, lr}
 802755a:	ed2d 8b02 	vpush	{d8}
 802755e:	6803      	ldr	r3, [r0, #0]
 8027560:	4604      	mov	r4, r0
 8027562:	699b      	ldr	r3, [r3, #24]
 8027564:	eeb0 8a40 	vmov.f32	s16, s0
 8027568:	4798      	blx	r3
 802756a:	6823      	ldr	r3, [r4, #0]
 802756c:	4620      	mov	r0, r4
 802756e:	f8d3 3098 	ldr.w	r3, [r3, #152]	; 0x98
 8027572:	eeb0 0a48 	vmov.f32	s0, s16
 8027576:	4798      	blx	r3
 8027578:	ecbd 8b02 	vpop	{d8}
 802757c:	6823      	ldr	r3, [r4, #0]
 802757e:	4620      	mov	r0, r4
 8027580:	699b      	ldr	r3, [r3, #24]
 8027582:	e8bd 4010 	ldmia.w	sp!, {r4, lr}
 8027586:	4718      	bx	r3

08027588 <_ZNK8touchgfx13TextureMapper12getSolidRectEv>:
 8027588:	2200      	movs	r2, #0
 802758a:	8002      	strh	r2, [r0, #0]
 802758c:	8042      	strh	r2, [r0, #2]
 802758e:	8082      	strh	r2, [r0, #4]
 8027590:	80c2      	strh	r2, [r0, #6]
 8027592:	4770      	bx	lr

08027594 <_ZN8touchgfx13TextureMapperD1Ev>:
 8027594:	4770      	bx	lr

08027596 <_ZN8touchgfx13TextureMapperD0Ev>:
 8027596:	b510      	push	{r4, lr}
 8027598:	2190      	movs	r1, #144	; 0x90
 802759a:	4604      	mov	r4, r0
 802759c:	f001 ff3f 	bl	802941e <_ZdlPvj>
 80275a0:	4620      	mov	r0, r4
 80275a2:	bd10      	pop	{r4, pc}

080275a4 <_ZN8touchgfx13TextureMapperC1ERKNS_6BitmapE>:
 80275a4:	b538      	push	{r3, r4, r5, lr}
 80275a6:	2500      	movs	r5, #0
 80275a8:	e9c0 5505 	strd	r5, r5, [r0, #20]
 80275ac:	2301      	movs	r3, #1
 80275ae:	f880 3025 	strb.w	r3, [r0, #37]	; 0x25
 80275b2:	4b1f      	ldr	r3, [pc, #124]	; (8027630 <_ZN8touchgfx13TextureMapperC1ERKNS_6BitmapE+0x8c>)
 80275b4:	8085      	strh	r5, [r0, #4]
 80275b6:	80c5      	strh	r5, [r0, #6]
 80275b8:	8105      	strh	r5, [r0, #8]
 80275ba:	8145      	strh	r5, [r0, #10]
 80275bc:	8185      	strh	r5, [r0, #12]
 80275be:	81c5      	strh	r5, [r0, #14]
 80275c0:	8205      	strh	r5, [r0, #16]
 80275c2:	8245      	strh	r5, [r0, #18]
 80275c4:	61c5      	str	r5, [r0, #28]
 80275c6:	8405      	strh	r5, [r0, #32]
 80275c8:	8445      	strh	r5, [r0, #34]	; 0x22
 80275ca:	f880 5024 	strb.w	r5, [r0, #36]	; 0x24
 80275ce:	6003      	str	r3, [r0, #0]
 80275d0:	880b      	ldrh	r3, [r1, #0]
 80275d2:	84c3      	strh	r3, [r0, #38]	; 0x26
 80275d4:	23ff      	movs	r3, #255	; 0xff
 80275d6:	4604      	mov	r4, r0
 80275d8:	f880 3028 	strb.w	r3, [r0, #40]	; 0x28
 80275dc:	f7eb f99f 	bl	801291e <_ZN8touchgfx5Image9setBitmapERKNS_6BitmapE>
 80275e0:	4b14      	ldr	r3, [pc, #80]	; (8027634 <_ZN8touchgfx13TextureMapperC1ERKNS_6BitmapE+0x90>)
 80275e2:	6023      	str	r3, [r4, #0]
 80275e4:	2300      	movs	r3, #0
 80275e6:	f04f 527e 	mov.w	r2, #1065353216	; 0x3f800000
 80275ea:	4913      	ldr	r1, [pc, #76]	; (8027638 <_ZN8touchgfx13TextureMapperC1ERKNS_6BitmapE+0x94>)
 80275ec:	62e3      	str	r3, [r4, #44]	; 0x2c
 80275ee:	6323      	str	r3, [r4, #48]	; 0x30
 80275f0:	6363      	str	r3, [r4, #52]	; 0x34
 80275f2:	63a3      	str	r3, [r4, #56]	; 0x38
 80275f4:	63e3      	str	r3, [r4, #60]	; 0x3c
 80275f6:	6463      	str	r3, [r4, #68]	; 0x44
 80275f8:	64a3      	str	r3, [r4, #72]	; 0x48
 80275fa:	6523      	str	r3, [r4, #80]	; 0x50
 80275fc:	6563      	str	r3, [r4, #84]	; 0x54
 80275fe:	65e3      	str	r3, [r4, #92]	; 0x5c
 8027600:	6623      	str	r3, [r4, #96]	; 0x60
 8027602:	66a3      	str	r3, [r4, #104]	; 0x68
 8027604:	66e3      	str	r3, [r4, #108]	; 0x6c
 8027606:	6763      	str	r3, [r4, #116]	; 0x74
 8027608:	67a3      	str	r3, [r4, #120]	; 0x78
 802760a:	f8c4 3080 	str.w	r3, [r4, #128]	; 0x80
 802760e:	f8c4 3084 	str.w	r3, [r4, #132]	; 0x84
 8027612:	230c      	movs	r3, #12
 8027614:	f884 5029 	strb.w	r5, [r4, #41]	; 0x29
 8027618:	6422      	str	r2, [r4, #64]	; 0x40
 802761a:	64e1      	str	r1, [r4, #76]	; 0x4c
 802761c:	65a1      	str	r1, [r4, #88]	; 0x58
 802761e:	6662      	str	r2, [r4, #100]	; 0x64
 8027620:	6722      	str	r2, [r4, #112]	; 0x70
 8027622:	67e2      	str	r2, [r4, #124]	; 0x7c
 8027624:	f8c4 2088 	str.w	r2, [r4, #136]	; 0x88
 8027628:	f8a4 308c 	strh.w	r3, [r4, #140]	; 0x8c
 802762c:	4620      	mov	r0, r4
 802762e:	bd38      	pop	{r3, r4, r5, pc}
 8027630:	0802e708 	.word	0x0802e708
 8027634:	0802ecec 	.word	0x0802ecec
 8027638:	447a0000 	.word	0x447a0000

0802763c <_ZN8touchgfx13TextureMapper19applyTransformationEv>:
 802763c:	b570      	push	{r4, r5, r6, lr}
 802763e:	ed2d 8b04 	vpush	{d8-d9}
 8027642:	f5ad 7d50 	sub.w	sp, sp, #832	; 0x340
 8027646:	add0      	add	r5, sp, #832	; 0x340
 8027648:	8cc3      	ldrh	r3, [r0, #38]	; 0x26
 802764a:	f825 3d40 	strh.w	r3, [r5, #-64]!
 802764e:	4604      	mov	r4, r0
 8027650:	4628      	mov	r0, r5
 8027652:	f7f1 fa7f 	bl	8018b54 <_ZNK8touchgfx6Bitmap8getWidthEv>
 8027656:	8ce3      	ldrh	r3, [r4, #38]	; 0x26
 8027658:	f8ad 3300 	strh.w	r3, [sp, #768]	; 0x300
 802765c:	4606      	mov	r6, r0
 802765e:	4628      	mov	r0, r5
 8027660:	f7f1 faac 	bl	8018bbc <_ZNK8touchgfx6Bitmap9getHeightEv>
 8027664:	edd4 6a0c 	vldr	s13, [r4, #48]	; 0x30
 8027668:	ed94 6a0b 	vldr	s12, [r4, #44]	; 0x2c
 802766c:	6da3      	ldr	r3, [r4, #88]	; 0x58
 802766e:	ed94 9a11 	vldr	s18, [r4, #68]	; 0x44
 8027672:	9312      	str	r3, [sp, #72]	; 0x48
 8027674:	eeb7 7a00 	vmov.f32	s14, #112	; 0x3f800000  1.0
 8027678:	1c72      	adds	r2, r6, #1
 802767a:	3001      	adds	r0, #1
 802767c:	ee76 5ac7 	vsub.f32	s11, s13, s14
 8027680:	ee07 2a90 	vmov	s15, r2
 8027684:	ee06 0a90 	vmov	s13, r0
 8027688:	ee36 6a47 	vsub.f32	s12, s12, s14
 802768c:	eef8 7ae7 	vcvt.f32.s32	s15, s15
 8027690:	eef8 6ae6 	vcvt.f32.s32	s13, s13
 8027694:	ee77 7a86 	vadd.f32	s15, s15, s12
 8027698:	ee76 6aa5 	vadd.f32	s13, s13, s11
 802769c:	9316      	str	r3, [sp, #88]	; 0x58
 802769e:	931a      	str	r3, [sp, #104]	; 0x68
 80276a0:	931e      	str	r3, [sp, #120]	; 0x78
 80276a2:	2300      	movs	r3, #0
 80276a4:	9320      	str	r3, [sp, #128]	; 0x80
 80276a6:	9321      	str	r3, [sp, #132]	; 0x84
 80276a8:	9322      	str	r3, [sp, #136]	; 0x88
 80276aa:	9324      	str	r3, [sp, #144]	; 0x90
 80276ac:	9325      	str	r3, [sp, #148]	; 0x94
 80276ae:	9326      	str	r3, [sp, #152]	; 0x98
 80276b0:	9328      	str	r3, [sp, #160]	; 0xa0
 80276b2:	9329      	str	r3, [sp, #164]	; 0xa4
 80276b4:	932a      	str	r3, [sp, #168]	; 0xa8
 80276b6:	932c      	str	r3, [sp, #176]	; 0xb0
 80276b8:	932d      	str	r3, [sp, #180]	; 0xb4
 80276ba:	932e      	str	r3, [sp, #184]	; 0xb8
 80276bc:	ed8d 6a10 	vstr	s12, [sp, #64]	; 0x40
 80276c0:	edcd 5a11 	vstr	s11, [sp, #68]	; 0x44
 80276c4:	ed8d 7a13 	vstr	s14, [sp, #76]	; 0x4c
 80276c8:	edcd 7a14 	vstr	s15, [sp, #80]	; 0x50
 80276cc:	edcd 5a15 	vstr	s11, [sp, #84]	; 0x54
 80276d0:	ed8d 7a17 	vstr	s14, [sp, #92]	; 0x5c
 80276d4:	edcd 7a18 	vstr	s15, [sp, #96]	; 0x60
 80276d8:	edcd 6a19 	vstr	s13, [sp, #100]	; 0x64
 80276dc:	ed8d 7a1b 	vstr	s14, [sp, #108]	; 0x6c
 80276e0:	ed8d 6a1c 	vstr	s12, [sp, #112]	; 0x70
 80276e4:	edcd 6a1d 	vstr	s13, [sp, #116]	; 0x74
 80276e8:	ed8d 7a1f 	vstr	s14, [sp, #124]	; 0x7c
 80276ec:	a830      	add	r0, sp, #192	; 0xc0
 80276ee:	edd4 8a12 	vldr	s17, [r4, #72]	; 0x48
 80276f2:	ed94 8a13 	vldr	s16, [r4, #76]	; 0x4c
 80276f6:	f000 fc43 	bl	8027f80 <_ZN8touchgfx9Matrix4x4C1Ev>
 80276fa:	eeb1 0a49 	vneg.f32	s0, s18
 80276fe:	a830      	add	r0, sp, #192	; 0xc0
 8027700:	f000 fd12 	bl	8028128 <_ZN8touchgfx9Matrix4x423concatenateXTranslationEf>
 8027704:	eeb1 0a68 	vneg.f32	s0, s17
 8027708:	f000 fd1c 	bl	8028144 <_ZN8touchgfx9Matrix4x423concatenateYTranslationEf>
 802770c:	eeb1 0a48 	vneg.f32	s0, s16
 8027710:	f000 fd27 	bl	8028162 <_ZN8touchgfx9Matrix4x423concatenateZTranslationEf>
 8027714:	a840      	add	r0, sp, #256	; 0x100
 8027716:	f000 fc33 	bl	8027f80 <_ZN8touchgfx9Matrix4x4C1Ev>
 802771a:	ed94 0a0d 	vldr	s0, [r4, #52]	; 0x34
 802771e:	a840      	add	r0, sp, #256	; 0x100
 8027720:	f000 fc86 	bl	8028030 <_ZN8touchgfx9Matrix4x420concatenateXRotationEf>
 8027724:	ed94 0a0e 	vldr	s0, [r4, #56]	; 0x38
 8027728:	f000 fcac 	bl	8028084 <_ZN8touchgfx9Matrix4x420concatenateYRotationEf>
 802772c:	ed94 0a0f 	vldr	s0, [r4, #60]	; 0x3c
 8027730:	f000 fcd1 	bl	80280d6 <_ZN8touchgfx9Matrix4x420concatenateZRotationEf>
 8027734:	a850      	add	r0, sp, #320	; 0x140
 8027736:	f000 fc23 	bl	8027f80 <_ZN8touchgfx9Matrix4x4C1Ev>
 802773a:	ed94 0a10 	vldr	s0, [r4, #64]	; 0x40
 802773e:	a850      	add	r0, sp, #320	; 0x140
 8027740:	f000 fd1e 	bl	8028180 <_ZN8touchgfx9Matrix4x417concatenateXScaleEf>
 8027744:	ed94 0a10 	vldr	s0, [r4, #64]	; 0x40
 8027748:	f000 fd26 	bl	8028198 <_ZN8touchgfx9Matrix4x417concatenateYScaleEf>
 802774c:	ed94 0a10 	vldr	s0, [r4, #64]	; 0x40
 8027750:	f000 fd2f 	bl	80281b2 <_ZN8touchgfx9Matrix4x417concatenateZScaleEf>
 8027754:	a860      	add	r0, sp, #384	; 0x180
 8027756:	f000 fc13 	bl	8027f80 <_ZN8touchgfx9Matrix4x4C1Ev>
 802775a:	eeb0 0a49 	vmov.f32	s0, s18
 802775e:	a860      	add	r0, sp, #384	; 0x180
 8027760:	f000 fce2 	bl	8028128 <_ZN8touchgfx9Matrix4x423concatenateXTranslationEf>
 8027764:	eeb0 0a68 	vmov.f32	s0, s17
 8027768:	f000 fcec 	bl	8028144 <_ZN8touchgfx9Matrix4x423concatenateYTranslationEf>
 802776c:	eeb0 0a48 	vmov.f32	s0, s16
 8027770:	f000 fcf7 	bl	8028162 <_ZN8touchgfx9Matrix4x423concatenateZTranslationEf>
 8027774:	aa50      	add	r2, sp, #320	; 0x140
 8027776:	a960      	add	r1, sp, #384	; 0x180
 8027778:	a8b0      	add	r0, sp, #704	; 0x2c0
 802777a:	f000 fc1b 	bl	8027fb4 <_ZN8touchgfxmlERKNS_9Matrix4x4ES2_>
 802777e:	4628      	mov	r0, r5
 8027780:	aa40      	add	r2, sp, #256	; 0x100
 8027782:	a9b0      	add	r1, sp, #704	; 0x2c0
 8027784:	f000 fc16 	bl	8027fb4 <_ZN8touchgfxmlERKNS_9Matrix4x4ES2_>
 8027788:	4629      	mov	r1, r5
 802778a:	aa30      	add	r2, sp, #192	; 0xc0
 802778c:	a870      	add	r0, sp, #448	; 0x1c0
 802778e:	f000 fc11 	bl	8027fb4 <_ZN8touchgfxmlERKNS_9Matrix4x4ES2_>
 8027792:	a880      	add	r0, sp, #512	; 0x200
 8027794:	f000 fbf4 	bl	8027f80 <_ZN8touchgfx9Matrix4x4C1Ev>
 8027798:	ed94 0a14 	vldr	s0, [r4, #80]	; 0x50
 802779c:	a880      	add	r0, sp, #512	; 0x200
 802779e:	eeb1 0a40 	vneg.f32	s0, s0
 80277a2:	f000 fcc1 	bl	8028128 <_ZN8touchgfx9Matrix4x423concatenateXTranslationEf>
 80277a6:	ed94 0a15 	vldr	s0, [r4, #84]	; 0x54
 80277aa:	a880      	add	r0, sp, #512	; 0x200
 80277ac:	eeb1 0a40 	vneg.f32	s0, s0
 80277b0:	f000 fcc8 	bl	8028144 <_ZN8touchgfx9Matrix4x423concatenateYTranslationEf>
 80277b4:	a890      	add	r0, sp, #576	; 0x240
 80277b6:	f000 fbe3 	bl	8027f80 <_ZN8touchgfx9Matrix4x4C1Ev>
 80277ba:	ed94 0a16 	vldr	s0, [r4, #88]	; 0x58
 80277be:	a890      	add	r0, sp, #576	; 0x240
 80277c0:	f000 fc26 	bl	8028010 <_ZN8touchgfx9Matrix4x415setViewDistanceEf>
 80277c4:	a8a0      	add	r0, sp, #640	; 0x280
 80277c6:	f000 fbdb 	bl	8027f80 <_ZN8touchgfx9Matrix4x4C1Ev>
 80277ca:	ed94 0a14 	vldr	s0, [r4, #80]	; 0x50
 80277ce:	a8a0      	add	r0, sp, #640	; 0x280
 80277d0:	f000 fcaa 	bl	8028128 <_ZN8touchgfx9Matrix4x423concatenateXTranslationEf>
 80277d4:	ed94 0a15 	vldr	s0, [r4, #84]	; 0x54
 80277d8:	f000 fcb4 	bl	8028144 <_ZN8touchgfx9Matrix4x423concatenateYTranslationEf>
 80277dc:	aa90      	add	r2, sp, #576	; 0x240
 80277de:	a9a0      	add	r1, sp, #640	; 0x280
 80277e0:	a8b0      	add	r0, sp, #704	; 0x2c0
 80277e2:	f000 fbe7 	bl	8027fb4 <_ZN8touchgfxmlERKNS_9Matrix4x4ES2_>
 80277e6:	4628      	mov	r0, r5
 80277e8:	aa80      	add	r2, sp, #512	; 0x200
 80277ea:	a9b0      	add	r1, sp, #704	; 0x2c0
 80277ec:	f000 fbe2 	bl	8027fb4 <_ZN8touchgfxmlERKNS_9Matrix4x4ES2_>
 80277f0:	4629      	mov	r1, r5
 80277f2:	aa70      	add	r2, sp, #448	; 0x1c0
 80277f4:	4668      	mov	r0, sp
 80277f6:	466d      	mov	r5, sp
 80277f8:	f000 fbdc 	bl	8027fb4 <_ZN8touchgfxmlERKNS_9Matrix4x4ES2_>
 80277fc:	cd0f      	ldmia	r5!, {r0, r1, r2, r3}
 80277fe:	ae70      	add	r6, sp, #448	; 0x1c0
 8027800:	c60f      	stmia	r6!, {r0, r1, r2, r3}
 8027802:	cd0f      	ldmia	r5!, {r0, r1, r2, r3}
 8027804:	c60f      	stmia	r6!, {r0, r1, r2, r3}
 8027806:	cd0f      	ldmia	r5!, {r0, r1, r2, r3}
 8027808:	c60f      	stmia	r6!, {r0, r1, r2, r3}
 802780a:	e895 000f 	ldmia.w	r5, {r0, r1, r2, r3}
 802780e:	e886 000f 	stmia.w	r6, {r0, r1, r2, r3}
 8027812:	2500      	movs	r5, #0
 8027814:	0129      	lsls	r1, r5, #4
 8027816:	ab20      	add	r3, sp, #128	; 0x80
 8027818:	185e      	adds	r6, r3, r1
 802781a:	ab10      	add	r3, sp, #64	; 0x40
 802781c:	4419      	add	r1, r3
 802781e:	a870      	add	r0, sp, #448	; 0x1c0
 8027820:	f000 fb7e 	bl	8027f20 <_ZN8touchgfxmlERKNS_9Matrix4x4ERKNS_6Point4E>
 8027824:	3501      	adds	r5, #1
 8027826:	2d04      	cmp	r5, #4
 8027828:	ed86 0a00 	vstr	s0, [r6]
 802782c:	edc6 0a01 	vstr	s1, [r6, #4]
 8027830:	ed86 1a02 	vstr	s2, [r6, #8]
 8027834:	edc6 1a03 	vstr	s3, [r6, #12]
 8027838:	d1ec      	bne.n	8027814 <_ZN8touchgfx13TextureMapper19applyTransformationEv+0x1d8>
 802783a:	edd4 7a16 	vldr	s15, [r4, #88]	; 0x58
 802783e:	eddd 6a20 	vldr	s13, [sp, #128]	; 0x80
 8027842:	ed9d 7a22 	vldr	s14, [sp, #136]	; 0x88
 8027846:	ee67 6aa6 	vmul.f32	s13, s15, s13
 802784a:	ed84 7a19 	vstr	s14, [r4, #100]	; 0x64
 802784e:	ee86 6a87 	vdiv.f32	s12, s13, s14
 8027852:	eddd 6a21 	vldr	s13, [sp, #132]	; 0x84
 8027856:	ed84 6a17 	vstr	s12, [r4, #92]	; 0x5c
 802785a:	ee67 6aa6 	vmul.f32	s13, s15, s13
 802785e:	ee86 6a87 	vdiv.f32	s12, s13, s14
 8027862:	eddd 6a24 	vldr	s13, [sp, #144]	; 0x90
 8027866:	ed9d 7a26 	vldr	s14, [sp, #152]	; 0x98
 802786a:	ed84 6a18 	vstr	s12, [r4, #96]	; 0x60
 802786e:	ee67 6aa6 	vmul.f32	s13, s15, s13
 8027872:	ed84 7a1c 	vstr	s14, [r4, #112]	; 0x70
 8027876:	ee86 6a87 	vdiv.f32	s12, s13, s14
 802787a:	eddd 6a25 	vldr	s13, [sp, #148]	; 0x94
 802787e:	ed84 6a1a 	vstr	s12, [r4, #104]	; 0x68
 8027882:	ee67 6aa6 	vmul.f32	s13, s15, s13
 8027886:	ee86 6a87 	vdiv.f32	s12, s13, s14
 802788a:	eddd 6a28 	vldr	s13, [sp, #160]	; 0xa0
 802788e:	ed9d 7a2a 	vldr	s14, [sp, #168]	; 0xa8
 8027892:	ed84 6a1b 	vstr	s12, [r4, #108]	; 0x6c
 8027896:	ee67 6aa6 	vmul.f32	s13, s15, s13
 802789a:	ed84 7a1f 	vstr	s14, [r4, #124]	; 0x7c
 802789e:	ee86 6a87 	vdiv.f32	s12, s13, s14
 80278a2:	eddd 6a29 	vldr	s13, [sp, #164]	; 0xa4
 80278a6:	ed84 6a1d 	vstr	s12, [r4, #116]	; 0x74
 80278aa:	ee67 6aa6 	vmul.f32	s13, s15, s13
 80278ae:	ee86 6a87 	vdiv.f32	s12, s13, s14
 80278b2:	eddd 6a2c 	vldr	s13, [sp, #176]	; 0xb0
 80278b6:	ed9d 7a2e 	vldr	s14, [sp, #184]	; 0xb8
 80278ba:	ed84 6a1e 	vstr	s12, [r4, #120]	; 0x78
 80278be:	ee67 6aa6 	vmul.f32	s13, s15, s13
 80278c2:	ed84 7a22 	vstr	s14, [r4, #136]	; 0x88
 80278c6:	ee86 6a87 	vdiv.f32	s12, s13, s14
 80278ca:	eddd 6a2d 	vldr	s13, [sp, #180]	; 0xb4
 80278ce:	ed84 6a20 	vstr	s12, [r4, #128]	; 0x80
 80278d2:	ee67 7aa6 	vmul.f32	s15, s15, s13
 80278d6:	eec7 6a87 	vdiv.f32	s13, s15, s14
 80278da:	edc4 6a21 	vstr	s13, [r4, #132]	; 0x84
 80278de:	f50d 7d50 	add.w	sp, sp, #832	; 0x340
 80278e2:	ecbd 8b04 	vpop	{d8-d9}
 80278e6:	bd70      	pop	{r4, r5, r6, pc}

080278e8 <_ZN8touchgfx13TextureMapper9setBitmapERKNS_6BitmapE>:
 80278e8:	b510      	push	{r4, lr}
 80278ea:	4604      	mov	r4, r0
 80278ec:	f7eb f817 	bl	801291e <_ZN8touchgfx5Image9setBitmapERKNS_6BitmapE>
 80278f0:	4620      	mov	r0, r4
 80278f2:	e8bd 4010 	ldmia.w	sp!, {r4, lr}
 80278f6:	f7ff bea1 	b.w	802763c <_ZN8touchgfx13TextureMapper19applyTransformationEv>

080278fa <_ZN8touchgfx13TextureMapper9setAnglesEfff>:
 80278fa:	ed80 0a0d 	vstr	s0, [r0, #52]	; 0x34
 80278fe:	edc0 0a0e 	vstr	s1, [r0, #56]	; 0x38
 8027902:	ed80 1a0f 	vstr	s2, [r0, #60]	; 0x3c
 8027906:	f7ff be99 	b.w	802763c <_ZN8touchgfx13TextureMapper19applyTransformationEv>

0802790a <_ZN8touchgfx13TextureMapper8setScaleEf>:
 802790a:	ed80 0a10 	vstr	s0, [r0, #64]	; 0x40
 802790e:	f7ff be95 	b.w	802763c <_ZN8touchgfx13TextureMapper19applyTransformationEv>

08027912 <_ZN8touchgfx13TextureMapper17setBitmapPositionEff>:
 8027912:	ed80 0a0b 	vstr	s0, [r0, #44]	; 0x2c
 8027916:	edc0 0a0c 	vstr	s1, [r0, #48]	; 0x30
 802791a:	f7ff be8f 	b.w	802763c <_ZN8touchgfx13TextureMapper19applyTransformationEv>

0802791e <_ZN8touchgfx13TextureMapper17setCameraDistanceEf>:
 802791e:	eef7 7a00 	vmov.f32	s15, #112	; 0x3f800000  1.0
 8027922:	eeb4 0ae7 	vcmpe.f32	s0, s15
 8027926:	eef1 fa10 	vmrs	APSR_nzcv, fpscr
 802792a:	bfd8      	it	le
 802792c:	eeb0 0a67 	vmovle.f32	s0, s15
 8027930:	ed80 0a16 	vstr	s0, [r0, #88]	; 0x58
 8027934:	f7ff be82 	b.w	802763c <_ZN8touchgfx13TextureMapper19applyTransformationEv>

08027938 <_ZN8touchgfx13TextureMapper9setCameraEff>:
 8027938:	ed80 0a14 	vstr	s0, [r0, #80]	; 0x50
 802793c:	edc0 0a15 	vstr	s1, [r0, #84]	; 0x54
 8027940:	f7ff be7c 	b.w	802763c <_ZN8touchgfx13TextureMapper19applyTransformationEv>

08027944 <_ZN8touchgfx13TextureMapper8setOrigoEff>:
 8027944:	ed80 0a11 	vstr	s0, [r0, #68]	; 0x44
 8027948:	edc0 0a12 	vstr	s1, [r0, #72]	; 0x48
 802794c:	f7ff be76 	b.w	802763c <_ZN8touchgfx13TextureMapper19applyTransformationEv>

08027950 <_ZN8touchgfx13TextureMapper8setOrigoEfff>:
 8027950:	ed80 0a11 	vstr	s0, [r0, #68]	; 0x44
 8027954:	edc0 0a12 	vstr	s1, [r0, #72]	; 0x48
 8027958:	ed80 1a13 	vstr	s2, [r0, #76]	; 0x4c
 802795c:	f7ff be6e 	b.w	802763c <_ZN8touchgfx13TextureMapper19applyTransformationEv>

08027960 <_ZNK8touchgfx13TextureMapper15getBoundingRectEv>:
 8027960:	e92d 41f0 	stmdb	sp!, {r4, r5, r6, r7, r8, lr}
 8027964:	ed2d 8b04 	vpush	{d8-d9}
 8027968:	edd1 9a1a 	vldr	s19, [r1, #104]	; 0x68
 802796c:	ed91 8a17 	vldr	s16, [r1, #92]	; 0x5c
 8027970:	ed91 9a1d 	vldr	s18, [r1, #116]	; 0x74
 8027974:	edd1 8a20 	vldr	s17, [r1, #128]	; 0x80
 8027978:	eeb4 8ae9 	vcmpe.f32	s16, s19
 802797c:	eef1 fa10 	vmrs	APSR_nzcv, fpscr
 8027980:	bf54      	ite	pl
 8027982:	eeb0 0a69 	vmovpl.f32	s0, s19
 8027986:	eeb0 0a48 	vmovmi.f32	s0, s16
 802798a:	eeb4 9ac0 	vcmpe.f32	s18, s0
 802798e:	eef1 fa10 	vmrs	APSR_nzcv, fpscr
 8027992:	bfd8      	it	le
 8027994:	eeb0 0a49 	vmovle.f32	s0, s18
 8027998:	eef4 8ac0 	vcmpe.f32	s17, s0
 802799c:	eef1 fa10 	vmrs	APSR_nzcv, fpscr
 80279a0:	bfd8      	it	le
 80279a2:	eeb0 0a68 	vmovle.f32	s0, s17
 80279a6:	460c      	mov	r4, r1
 80279a8:	4607      	mov	r7, r0
 80279aa:	f001 fe4f 	bl	802964c <floorf>
 80279ae:	eeb5 0ac0 	vcmpe.f32	s0, #0.0
 80279b2:	eef1 fa10 	vmrs	APSR_nzcv, fpscr
 80279b6:	bf58      	it	pl
 80279b8:	eebd 0ac0 	vcvtpl.s32.f32	s0, s0
 80279bc:	eeb4 8ae9 	vcmpe.f32	s16, s19
 80279c0:	bf56      	itet	pl
 80279c2:	ee10 3a10 	vmovpl	r3, s0
 80279c6:	2600      	movmi	r6, #0
 80279c8:	b21e      	sxthpl	r6, r3
 80279ca:	eef1 fa10 	vmrs	APSR_nzcv, fpscr
 80279ce:	bfd8      	it	le
 80279d0:	eeb0 8a69 	vmovle.f32	s16, s19
 80279d4:	eeb4 9ac8 	vcmpe.f32	s18, s16
 80279d8:	eef1 fa10 	vmrs	APSR_nzcv, fpscr
 80279dc:	bf58      	it	pl
 80279de:	eeb0 8a49 	vmovpl.f32	s16, s18
 80279e2:	eef4 8ac8 	vcmpe.f32	s17, s16
 80279e6:	eef1 fa10 	vmrs	APSR_nzcv, fpscr
 80279ea:	bf54      	ite	pl
 80279ec:	eeb0 0a68 	vmovpl.f32	s0, s17
 80279f0:	eeb0 0a48 	vmovmi.f32	s0, s16
 80279f4:	f001 fde8 	bl	80295c8 <ceilf>
 80279f8:	f9b4 8008 	ldrsh.w	r8, [r4, #8]
 80279fc:	edd4 9a1b 	vldr	s19, [r4, #108]	; 0x6c
 8027a00:	ed94 8a18 	vldr	s16, [r4, #96]	; 0x60
 8027a04:	ed94 9a1e 	vldr	s18, [r4, #120]	; 0x78
 8027a08:	edd4 8a21 	vldr	s17, [r4, #132]	; 0x84
 8027a0c:	ee07 8a90 	vmov	s15, r8
 8027a10:	eef8 7ae7 	vcvt.f32.s32	s15, s15
 8027a14:	eeb4 0ae7 	vcmpe.f32	s0, s15
 8027a18:	eef1 fa10 	vmrs	APSR_nzcv, fpscr
 8027a1c:	bfd8      	it	le
 8027a1e:	eebd 0ac0 	vcvtle.s32.f32	s0, s0
 8027a22:	eeb4 8ae9 	vcmpe.f32	s16, s19
 8027a26:	bfdc      	itt	le
 8027a28:	ee10 3a10 	vmovle	r3, s0
 8027a2c:	fa0f f883 	sxthle.w	r8, r3
 8027a30:	eef1 fa10 	vmrs	APSR_nzcv, fpscr
 8027a34:	bf54      	ite	pl
 8027a36:	eeb0 0a69 	vmovpl.f32	s0, s19
 8027a3a:	eeb0 0a48 	vmovmi.f32	s0, s16
 8027a3e:	eeb4 9ac0 	vcmpe.f32	s18, s0
 8027a42:	eef1 fa10 	vmrs	APSR_nzcv, fpscr
 8027a46:	bfd8      	it	le
 8027a48:	eeb0 0a49 	vmovle.f32	s0, s18
 8027a4c:	eef4 8ac0 	vcmpe.f32	s17, s0
 8027a50:	eef1 fa10 	vmrs	APSR_nzcv, fpscr
 8027a54:	bfd8      	it	le
 8027a56:	eeb0 0a68 	vmovle.f32	s0, s17
 8027a5a:	f001 fdf7 	bl	802964c <floorf>
 8027a5e:	eeb5 0ac0 	vcmpe.f32	s0, #0.0
 8027a62:	eef1 fa10 	vmrs	APSR_nzcv, fpscr
 8027a66:	bf58      	it	pl
 8027a68:	eebd 0ac0 	vcvtpl.s32.f32	s0, s0
 8027a6c:	eeb4 8ae9 	vcmpe.f32	s16, s19
 8027a70:	bf56      	itet	pl
 8027a72:	ee10 3a10 	vmovpl	r3, s0
 8027a76:	2500      	movmi	r5, #0
 8027a78:	b21d      	sxthpl	r5, r3
 8027a7a:	eef1 fa10 	vmrs	APSR_nzcv, fpscr
 8027a7e:	bfd8      	it	le
 8027a80:	eeb0 8a69 	vmovle.f32	s16, s19
 8027a84:	eeb4 9ac8 	vcmpe.f32	s18, s16
 8027a88:	eef1 fa10 	vmrs	APSR_nzcv, fpscr
 8027a8c:	bf58      	it	pl
 8027a8e:	eeb0 8a49 	vmovpl.f32	s16, s18
 8027a92:	eef4 8ac8 	vcmpe.f32	s17, s16
 8027a96:	eef1 fa10 	vmrs	APSR_nzcv, fpscr
 8027a9a:	bf54      	ite	pl
 8027a9c:	eeb0 0a68 	vmovpl.f32	s0, s17
 8027aa0:	eeb0 0a48 	vmovmi.f32	s0, s16
 8027aa4:	f001 fd90 	bl	80295c8 <ceilf>
 8027aa8:	f9b4 300a 	ldrsh.w	r3, [r4, #10]
 8027aac:	803e      	strh	r6, [r7, #0]
 8027aae:	ee07 3a90 	vmov	s15, r3
 8027ab2:	eef8 7ae7 	vcvt.f32.s32	s15, s15
 8027ab6:	807d      	strh	r5, [r7, #2]
 8027ab8:	eeb4 0ae7 	vcmpe.f32	s0, s15
 8027abc:	eef1 fa10 	vmrs	APSR_nzcv, fpscr
 8027ac0:	bfd8      	it	le
 8027ac2:	eebd 0ac0 	vcvtle.s32.f32	s0, s0
 8027ac6:	eba8 0606 	sub.w	r6, r8, r6
 8027aca:	bfdc      	itt	le
 8027acc:	ee10 3a10 	vmovle	r3, s0
 8027ad0:	b21b      	sxthle	r3, r3
 8027ad2:	1b5d      	subs	r5, r3, r5
 8027ad4:	80be      	strh	r6, [r7, #4]
 8027ad6:	80fd      	strh	r5, [r7, #6]
 8027ad8:	ecbd 8b04 	vpop	{d8-d9}
 8027adc:	4638      	mov	r0, r7
 8027ade:	e8bd 81f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, pc}

08027ae2 <_ZNK8touchgfx13TextureMapper17invalidateContentEv>:
 8027ae2:	b513      	push	{r0, r1, r4, lr}
 8027ae4:	f890 3028 	ldrb.w	r3, [r0, #40]	; 0x28
 8027ae8:	4604      	mov	r4, r0
 8027aea:	b143      	cbz	r3, 8027afe <_ZNK8touchgfx13TextureMapper17invalidateContentEv+0x1c>
 8027aec:	4601      	mov	r1, r0
 8027aee:	4668      	mov	r0, sp
 8027af0:	f7ff ff36 	bl	8027960 <_ZNK8touchgfx13TextureMapper15getBoundingRectEv>
 8027af4:	6823      	ldr	r3, [r4, #0]
 8027af6:	4669      	mov	r1, sp
 8027af8:	691b      	ldr	r3, [r3, #16]
 8027afa:	4620      	mov	r0, r4
 8027afc:	4798      	blx	r3
 8027afe:	b002      	add	sp, #8
 8027b00:	bd10      	pop	{r4, pc}

08027b02 <_ZNK8touchgfx13TextureMapper19lookupRenderVariantEv>:
 8027b02:	4603      	mov	r3, r0
 8027b04:	3026      	adds	r0, #38	; 0x26
 8027b06:	f893 3029 	ldrb.w	r3, [r3, #41]	; 0x29
 8027b0a:	b90b      	cbnz	r3, 8027b10 <_ZNK8touchgfx13TextureMapper19lookupRenderVariantEv+0xe>
 8027b0c:	f7ee be38 	b.w	8016780 <_ZN8touchgfx34lookupNearestNeighborRenderVariantERKNS_6BitmapE>
 8027b10:	f7ee be46 	b.w	80167a0 <_ZN8touchgfx27lookupBilinearRenderVariantERKNS_6BitmapE>

08027b14 <_ZNK8touchgfx13TextureMapper8drawQuadERKNS_4RectEPtPKfS6_S6_S6_S6_>:
 8027b14:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 8027b18:	ed2d 8b04 	vpush	{d8-d9}
 8027b1c:	4604      	mov	r4, r0
 8027b1e:	469b      	mov	fp, r3
 8027b20:	f9b0 c008 	ldrsh.w	ip, [r0, #8]
 8027b24:	f9b0 300a 	ldrsh.w	r3, [r0, #10]
 8027b28:	f9b1 6000 	ldrsh.w	r6, [r1]
 8027b2c:	8888      	ldrh	r0, [r1, #4]
 8027b2e:	b0b3      	sub	sp, #204	; 0xcc
 8027b30:	4430      	add	r0, r6
 8027b32:	b280      	uxth	r0, r0
 8027b34:	9206      	str	r2, [sp, #24]
 8027b36:	fa0f fe80 	sxth.w	lr, r0
 8027b3a:	2200      	movs	r2, #0
 8027b3c:	4596      	cmp	lr, r2
 8027b3e:	f8dd a100 	ldr.w	sl, [sp, #256]	; 0x100
 8027b42:	f8dd 9104 	ldr.w	r9, [sp, #260]	; 0x104
 8027b46:	f8dd 8108 	ldr.w	r8, [sp, #264]	; 0x108
 8027b4a:	9f43      	ldr	r7, [sp, #268]	; 0x10c
 8027b4c:	9211      	str	r2, [sp, #68]	; 0x44
 8027b4e:	f340 8129 	ble.w	8027da4 <_ZNK8touchgfx13TextureMapper8drawQuadERKNS_4RectEPtPKfS6_S6_S6_S6_+0x290>
 8027b52:	45b4      	cmp	ip, r6
 8027b54:	f340 8126 	ble.w	8027da4 <_ZNK8touchgfx13TextureMapper8drawQuadERKNS_4RectEPtPKfS6_S6_S6_S6_+0x290>
 8027b58:	f9b1 5002 	ldrsh.w	r5, [r1, #2]
 8027b5c:	88ca      	ldrh	r2, [r1, #6]
 8027b5e:	442a      	add	r2, r5
 8027b60:	b292      	uxth	r2, r2
 8027b62:	b211      	sxth	r1, r2
 8027b64:	2900      	cmp	r1, #0
 8027b66:	f340 811d 	ble.w	8027da4 <_ZNK8touchgfx13TextureMapper8drawQuadERKNS_4RectEPtPKfS6_S6_S6_S6_+0x290>
 8027b6a:	42ab      	cmp	r3, r5
 8027b6c:	f340 811a 	ble.w	8027da4 <_ZNK8touchgfx13TextureMapper8drawQuadERKNS_4RectEPtPKfS6_S6_S6_S6_+0x290>
 8027b70:	45f4      	cmp	ip, lr
 8027b72:	bfb8      	it	lt
 8027b74:	fa1f f08c 	uxthlt.w	r0, ip
 8027b78:	428b      	cmp	r3, r1
 8027b7a:	ea26 76e6 	bic.w	r6, r6, r6, asr #31
 8027b7e:	ea25 75e5 	bic.w	r5, r5, r5, asr #31
 8027b82:	bfb8      	it	lt
 8027b84:	b29a      	uxthlt	r2, r3
 8027b86:	1b80      	subs	r0, r0, r6
 8027b88:	1b52      	subs	r2, r2, r5
 8027b8a:	f8ad 0048 	strh.w	r0, [sp, #72]	; 0x48
 8027b8e:	f8ad 204a 	strh.w	r2, [sp, #74]	; 0x4a
 8027b92:	f8ad 6044 	strh.w	r6, [sp, #68]	; 0x44
 8027b96:	f8ad 5046 	strh.w	r5, [sp, #70]	; 0x46
 8027b9a:	ab11      	add	r3, sp, #68	; 0x44
 8027b9c:	e893 0003 	ldmia.w	r3, {r0, r1}
 8027ba0:	6822      	ldr	r2, [r4, #0]
 8027ba2:	9307      	str	r3, [sp, #28]
 8027ba4:	ad13      	add	r5, sp, #76	; 0x4c
 8027ba6:	6ad2      	ldr	r2, [r2, #44]	; 0x2c
 8027ba8:	e885 0003 	stmia.w	r5, {r0, r1}
 8027bac:	4629      	mov	r1, r5
 8027bae:	4620      	mov	r0, r4
 8027bb0:	4790      	blx	r2
 8027bb2:	4621      	mov	r1, r4
 8027bb4:	a815      	add	r0, sp, #84	; 0x54
 8027bb6:	f7ee fd3f 	bl	8016638 <_ZNK8touchgfx8Drawable15getAbsoluteRectEv>
 8027bba:	a815      	add	r0, sp, #84	; 0x54
 8027bbc:	f7ed fa04 	bl	8014fc8 <_ZN8touchgfx21DisplayTransformation29transformDisplayToFrameBufferERNS_4RectE>
 8027bc0:	9b07      	ldr	r3, [sp, #28]
 8027bc2:	1d26      	adds	r6, r4, #4
 8027bc4:	4618      	mov	r0, r3
 8027bc6:	4631      	mov	r1, r6
 8027bc8:	f7ed fa42 	bl	8015050 <_ZN8touchgfx21DisplayTransformation29transformDisplayToFrameBufferERNS_4RectERKS1_>
 8027bcc:	4628      	mov	r0, r5
 8027bce:	f104 0526 	add.w	r5, r4, #38	; 0x26
 8027bd2:	f7ed f9f9 	bl	8014fc8 <_ZN8touchgfx21DisplayTransformation29transformDisplayToFrameBufferERNS_4RectE>
 8027bd6:	4628      	mov	r0, r5
 8027bd8:	f7f1 f8a8 	bl	8018d2c <_ZNK8touchgfx6Bitmap7getDataEv>
 8027bdc:	9007      	str	r0, [sp, #28]
 8027bde:	2800      	cmp	r0, #0
 8027be0:	f000 80db 	beq.w	8027d9a <_ZNK8touchgfx13TextureMapper8drawQuadERKNS_4RectEPtPKfS6_S6_S6_S6_+0x286>
 8027be4:	f8db 2000 	ldr.w	r2, [fp]
 8027be8:	9209      	str	r2, [sp, #36]	; 0x24
 8027bea:	f8db 2004 	ldr.w	r2, [fp, #4]
 8027bee:	920a      	str	r2, [sp, #40]	; 0x28
 8027bf0:	f8db 2008 	ldr.w	r2, [fp, #8]
 8027bf4:	920b      	str	r2, [sp, #44]	; 0x2c
 8027bf6:	f8db 200c 	ldr.w	r2, [fp, #12]
 8027bfa:	920c      	str	r2, [sp, #48]	; 0x30
 8027bfc:	f8da 2000 	ldr.w	r2, [sl]
 8027c00:	920d      	str	r2, [sp, #52]	; 0x34
 8027c02:	f8da 2004 	ldr.w	r2, [sl, #4]
 8027c06:	920e      	str	r2, [sp, #56]	; 0x38
 8027c08:	f8da 2008 	ldr.w	r2, [sl, #8]
 8027c0c:	920f      	str	r2, [sp, #60]	; 0x3c
 8027c0e:	f8da 200c 	ldr.w	r2, [sl, #12]
 8027c12:	9210      	str	r2, [sp, #64]	; 0x40
 8027c14:	a90d      	add	r1, sp, #52	; 0x34
 8027c16:	4632      	mov	r2, r6
 8027c18:	a809      	add	r0, sp, #36	; 0x24
 8027c1a:	f7ed f9fd 	bl	8015018 <_ZN8touchgfx21DisplayTransformation29transformDisplayToFrameBufferERfS1_RKNS_4RectE>
 8027c1e:	4632      	mov	r2, r6
 8027c20:	a90e      	add	r1, sp, #56	; 0x38
 8027c22:	a80a      	add	r0, sp, #40	; 0x28
 8027c24:	f7ed f9f8 	bl	8015018 <_ZN8touchgfx21DisplayTransformation29transformDisplayToFrameBufferERfS1_RKNS_4RectE>
 8027c28:	4632      	mov	r2, r6
 8027c2a:	a90f      	add	r1, sp, #60	; 0x3c
 8027c2c:	a80b      	add	r0, sp, #44	; 0x2c
 8027c2e:	f7ed f9f3 	bl	8015018 <_ZN8touchgfx21DisplayTransformation29transformDisplayToFrameBufferERfS1_RKNS_4RectE>
 8027c32:	4632      	mov	r2, r6
 8027c34:	a910      	add	r1, sp, #64	; 0x40
 8027c36:	a80c      	add	r0, sp, #48	; 0x30
 8027c38:	f7ed f9ee 	bl	8015018 <_ZN8touchgfx21DisplayTransformation29transformDisplayToFrameBufferERfS1_RKNS_4RectE>
 8027c3c:	eddd 7a0d 	vldr	s15, [sp, #52]	; 0x34
 8027c40:	edd7 4a00 	vldr	s9, [r7]
 8027c44:	edd7 5a01 	vldr	s11, [r7, #4]
 8027c48:	ed98 4a00 	vldr	s8, [r8]
 8027c4c:	ed98 5a01 	vldr	s10, [r8, #4]
 8027c50:	ed99 9a00 	vldr	s18, [r9]
 8027c54:	ed99 8a01 	vldr	s16, [r9, #4]
 8027c58:	edd9 8a02 	vldr	s17, [r9, #8]
 8027c5c:	f8d9 e00c 	ldr.w	lr, [r9, #12]
 8027c60:	f8d8 c00c 	ldr.w	ip, [r8, #12]
 8027c64:	ed8d 4a21 	vstr	s8, [sp, #132]	; 0x84
 8027c68:	eef0 6a67 	vmov.f32	s13, s15
 8027c6c:	eddd 7a0a 	vldr	s15, [sp, #40]	; 0x28
 8027c70:	edcd 4a22 	vstr	s9, [sp, #136]	; 0x88
 8027c74:	eeb0 7a67 	vmov.f32	s14, s15
 8027c78:	eddd 7a0e 	vldr	s15, [sp, #56]	; 0x38
 8027c7c:	ed8d 5a26 	vstr	s10, [sp, #152]	; 0x98
 8027c80:	eeb0 6a67 	vmov.f32	s12, s15
 8027c84:	eebe 6ace 	vcvt.s32.f32	s12, s12, #4
 8027c88:	eddd 7a0b 	vldr	s15, [sp, #44]	; 0x2c
 8027c8c:	edcd 5a27 	vstr	s11, [sp, #156]	; 0x9c
 8027c90:	ee16 6a10 	vmov	r6, s12
 8027c94:	eeb0 6a67 	vmov.f32	s12, s15
 8027c98:	eebe 6ace 	vcvt.s32.f32	s12, s12, #4
 8027c9c:	eddd 7a0f 	vldr	s15, [sp, #60]	; 0x3c
 8027ca0:	f8d7 a008 	ldr.w	sl, [r7, #8]
 8027ca4:	f8d8 b008 	ldr.w	fp, [r8, #8]
 8027ca8:	68ff      	ldr	r7, [r7, #12]
 8027caa:	9624      	str	r6, [sp, #144]	; 0x90
 8027cac:	ee16 0a10 	vmov	r0, s12
 8027cb0:	eeb0 6a67 	vmov.f32	s12, s15
 8027cb4:	eebe 6ace 	vcvt.s32.f32	s12, s12, #4
 8027cb8:	eddd 7a0c 	vldr	s15, [sp, #48]	; 0x30
 8027cbc:	ed8d 9a20 	vstr	s18, [sp, #128]	; 0x80
 8027cc0:	ee16 1a10 	vmov	r1, s12
 8027cc4:	eeb0 6a67 	vmov.f32	s12, s15
 8027cc8:	eebe 6ace 	vcvt.s32.f32	s12, s12, #4
 8027ccc:	eefe 6ace 	vcvt.s32.f32	s13, s13, #4
 8027cd0:	ee16 2a10 	vmov	r2, s12
 8027cd4:	ed9d 6a09 	vldr	s12, [sp, #36]	; 0x24
 8027cd8:	eddd 7a10 	vldr	s15, [sp, #64]	; 0x40
 8027cdc:	edcd 6a1f 	vstr	s13, [sp, #124]	; 0x7c
 8027ce0:	eebe 7ace 	vcvt.s32.f32	s14, s14, #4
 8027ce4:	eebe 6ace 	vcvt.s32.f32	s12, s12, #4
 8027ce8:	e9cd 0128 	strd	r0, r1, [sp, #160]	; 0xa0
 8027cec:	ed8d 6a1e 	vstr	s12, [sp, #120]	; 0x78
 8027cf0:	ed8d 7a23 	vstr	s14, [sp, #140]	; 0x8c
 8027cf4:	ed8d 8a25 	vstr	s16, [sp, #148]	; 0x94
 8027cf8:	edcd 8a2a 	vstr	s17, [sp, #168]	; 0xa8
 8027cfc:	922d      	str	r2, [sp, #180]	; 0xb4
 8027cfe:	4a2b      	ldr	r2, [pc, #172]	; (8027dac <_ZNK8touchgfx13TextureMapper8drawQuadERKNS_4RectEPtPKfS6_S6_S6_S6_+0x298>)
 8027d00:	9b06      	ldr	r3, [sp, #24]
 8027d02:	8812      	ldrh	r2, [r2, #0]
 8027d04:	9317      	str	r3, [sp, #92]	; 0x5c
 8027d06:	eefe 7ace 	vcvt.s32.f32	s15, s15, #4
 8027d0a:	9b07      	ldr	r3, [sp, #28]
 8027d0c:	edcd 7a2e 	vstr	s15, [sp, #184]	; 0xb8
 8027d10:	4628      	mov	r0, r5
 8027d12:	f8cd e0bc 	str.w	lr, [sp, #188]	; 0xbc
 8027d16:	f8cd c0c0 	str.w	ip, [sp, #192]	; 0xc0
 8027d1a:	9218      	str	r2, [sp, #96]	; 0x60
 8027d1c:	9319      	str	r3, [sp, #100]	; 0x64
 8027d1e:	f8cd b0ac 	str.w	fp, [sp, #172]	; 0xac
 8027d22:	f8cd a0b0 	str.w	sl, [sp, #176]	; 0xb0
 8027d26:	9731      	str	r7, [sp, #196]	; 0xc4
 8027d28:	f7f1 f830 	bl	8018d8c <_ZNK8touchgfx6Bitmap12getExtraDataEv>
 8027d2c:	901a      	str	r0, [sp, #104]	; 0x68
 8027d2e:	4628      	mov	r0, r5
 8027d30:	f7f0 ff10 	bl	8018b54 <_ZNK8touchgfx6Bitmap8getWidthEv>
 8027d34:	901b      	str	r0, [sp, #108]	; 0x6c
 8027d36:	4628      	mov	r0, r5
 8027d38:	f7f0 ff40 	bl	8018bbc <_ZNK8touchgfx6Bitmap9getHeightEv>
 8027d3c:	901c      	str	r0, [sp, #112]	; 0x70
 8027d3e:	4628      	mov	r0, r5
 8027d40:	f7f0 ff08 	bl	8018b54 <_ZNK8touchgfx6Bitmap8getWidthEv>
 8027d44:	eeb4 9a48 	vcmp.f32	s18, s16
 8027d48:	eef1 fa10 	vmrs	APSR_nzcv, fpscr
 8027d4c:	901d      	str	r0, [sp, #116]	; 0x74
 8027d4e:	f8b4 608c 	ldrh.w	r6, [r4, #140]	; 0x8c
 8027d52:	d107      	bne.n	8027d64 <_ZNK8touchgfx13TextureMapper8drawQuadERKNS_4RectEPtPKfS6_S6_S6_S6_+0x250>
 8027d54:	eeb4 8a68 	vcmp.f32	s16, s17
 8027d58:	eef1 fa10 	vmrs	APSR_nzcv, fpscr
 8027d5c:	f64f 73ff 	movw	r3, #65535	; 0xffff
 8027d60:	bf08      	it	eq
 8027d62:	461e      	moveq	r6, r3
 8027d64:	4b12      	ldr	r3, [pc, #72]	; (8027db0 <_ZNK8touchgfx13TextureMapper8drawQuadERKNS_4RectEPtPKfS6_S6_S6_S6_+0x29c>)
 8027d66:	681b      	ldr	r3, [r3, #0]
 8027d68:	f893 2058 	ldrb.w	r2, [r3, #88]	; 0x58
 8027d6c:	b10a      	cbz	r2, 8027d72 <_ZNK8touchgfx13TextureMapper8drawQuadERKNS_4RectEPtPKfS6_S6_S6_S6_+0x25e>
 8027d6e:	6cdd      	ldr	r5, [r3, #76]	; 0x4c
 8027d70:	b905      	cbnz	r5, 8027d74 <_ZNK8touchgfx13TextureMapper8drawQuadERKNS_4RectEPtPKfS6_S6_S6_S6_+0x260>
 8027d72:	689d      	ldr	r5, [r3, #8]
 8027d74:	682b      	ldr	r3, [r5, #0]
 8027d76:	4620      	mov	r0, r4
 8027d78:	6c1f      	ldr	r7, [r3, #64]	; 0x40
 8027d7a:	f7ff fec2 	bl	8027b02 <_ZNK8touchgfx13TextureMapper19lookupRenderVariantEv>
 8027d7e:	f894 3028 	ldrb.w	r3, [r4, #40]	; 0x28
 8027d82:	9604      	str	r6, [sp, #16]
 8027d84:	e9cd 0302 	strd	r0, r3, [sp, #8]
 8027d88:	ab13      	add	r3, sp, #76	; 0x4c
 8027d8a:	9301      	str	r3, [sp, #4]
 8027d8c:	ab15      	add	r3, sp, #84	; 0x54
 8027d8e:	9300      	str	r3, [sp, #0]
 8027d90:	aa1e      	add	r2, sp, #120	; 0x78
 8027d92:	ab19      	add	r3, sp, #100	; 0x64
 8027d94:	a917      	add	r1, sp, #92	; 0x5c
 8027d96:	4628      	mov	r0, r5
 8027d98:	47b8      	blx	r7
 8027d9a:	b033      	add	sp, #204	; 0xcc
 8027d9c:	ecbd 8b04 	vpop	{d8-d9}
 8027da0:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
 8027da4:	2300      	movs	r3, #0
 8027da6:	9312      	str	r3, [sp, #72]	; 0x48
 8027da8:	e6f7      	b.n	8027b9a <_ZNK8touchgfx13TextureMapper8drawQuadERKNS_4RectEPtPKfS6_S6_S6_S6_+0x86>
 8027daa:	bf00      	nop
 8027dac:	20012f1e 	.word	0x20012f1e
 8027db0:	20012f24 	.word	0x20012f24

08027db4 <_ZNK8touchgfx13TextureMapper4drawERKNS_4RectE>:
 8027db4:	e92d 41f0 	stmdb	sp!, {r4, r5, r6, r7, r8, lr}
 8027db8:	ed2d 8b02 	vpush	{d8}
 8027dbc:	f890 3028 	ldrb.w	r3, [r0, #40]	; 0x28
 8027dc0:	b098      	sub	sp, #96	; 0x60
 8027dc2:	4604      	mov	r4, r0
 8027dc4:	4688      	mov	r8, r1
 8027dc6:	2b00      	cmp	r3, #0
 8027dc8:	d077      	beq.n	8027eba <_ZNK8touchgfx13TextureMapper4drawERKNS_4RectE+0x106>
 8027dca:	f100 0526 	add.w	r5, r0, #38	; 0x26
 8027dce:	4628      	mov	r0, r5
 8027dd0:	f7f0 fec0 	bl	8018b54 <_ZNK8touchgfx6Bitmap8getWidthEv>
 8027dd4:	ee07 0a90 	vmov	s15, r0
 8027dd8:	4628      	mov	r0, r5
 8027dda:	eeb8 8ae7 	vcvt.f32.s32	s16, s15
 8027dde:	f7f0 feed 	bl	8018bbc <_ZNK8touchgfx6Bitmap9getHeightEv>
 8027de2:	4b4e      	ldr	r3, [pc, #312]	; (8027f1c <_ZNK8touchgfx13TextureMapper4drawERKNS_4RectE+0x168>)
 8027de4:	781b      	ldrb	r3, [r3, #0]
 8027de6:	ee07 0a90 	vmov	s15, r0
 8027dea:	2b01      	cmp	r3, #1
 8027dec:	eeb8 7ae7 	vcvt.f32.s32	s14, s15
 8027df0:	eeff 7a00 	vmov.f32	s15, #240	; 0xbf800000 -1.0
 8027df4:	d066      	beq.n	8027ec4 <_ZNK8touchgfx13TextureMapper4drawERKNS_4RectE+0x110>
 8027df6:	eeb0 6a47 	vmov.f32	s12, s14
 8027dfa:	ee17 3a10 	vmov	r3, s14
 8027dfe:	eeb0 4a48 	vmov.f32	s8, s16
 8027e02:	eeb0 7a48 	vmov.f32	s14, s16
 8027e06:	eef0 4a67 	vmov.f32	s9, s15
 8027e0a:	eeb0 8a67 	vmov.f32	s16, s15
 8027e0e:	ed94 5a17 	vldr	s10, [r4, #92]	; 0x5c
 8027e12:	edd4 5a18 	vldr	s11, [r4, #96]	; 0x60
 8027e16:	ed94 3a1b 	vldr	s6, [r4, #108]	; 0x6c
 8027e1a:	edd4 2a1d 	vldr	s5, [r4, #116]	; 0x74
 8027e1e:	ed94 2a1a 	vldr	s4, [r4, #104]	; 0x68
 8027e22:	edd4 3a1e 	vldr	s7, [r4, #120]	; 0x78
 8027e26:	6f25      	ldr	r5, [r4, #112]	; 0x70
 8027e28:	6e66      	ldr	r6, [r4, #100]	; 0x64
 8027e2a:	6fe2      	ldr	r2, [r4, #124]	; 0x7c
 8027e2c:	f8d4 c080 	ldr.w	ip, [r4, #128]	; 0x80
 8027e30:	f8d4 7084 	ldr.w	r7, [r4, #132]	; 0x84
 8027e34:	f8d4 0088 	ldr.w	r0, [r4, #136]	; 0x88
 8027e38:	ee73 1a65 	vsub.f32	s3, s6, s11
 8027e3c:	ee72 6ac5 	vsub.f32	s13, s5, s10
 8027e40:	ee32 1a45 	vsub.f32	s2, s4, s10
 8027e44:	ee66 6ae1 	vnmul.f32	s13, s13, s3
 8027e48:	ee73 1ae5 	vsub.f32	s3, s7, s11
 8027e4c:	eee1 6a21 	vfma.f32	s13, s2, s3
 8027e50:	eef5 6ac0 	vcmpe.f32	s13, #0.0
 8027e54:	eef1 fa10 	vmrs	APSR_nzcv, fpscr
 8027e58:	dd3d      	ble.n	8027ed6 <_ZNK8touchgfx13TextureMapper4drawERKNS_4RectE+0x122>
 8027e5a:	ed8d 5a04 	vstr	s10, [sp, #16]
 8027e5e:	ed8d 2a05 	vstr	s4, [sp, #20]
 8027e62:	edcd 2a06 	vstr	s5, [sp, #24]
 8027e66:	f8cd c01c 	str.w	ip, [sp, #28]
 8027e6a:	edcd 5a08 	vstr	s11, [sp, #32]
 8027e6e:	ed8d 3a09 	vstr	s6, [sp, #36]	; 0x24
 8027e72:	edcd 3a0a 	vstr	s7, [sp, #40]	; 0x28
 8027e76:	970b      	str	r7, [sp, #44]	; 0x2c
 8027e78:	960c      	str	r6, [sp, #48]	; 0x30
 8027e7a:	950d      	str	r5, [sp, #52]	; 0x34
 8027e7c:	920e      	str	r2, [sp, #56]	; 0x38
 8027e7e:	900f      	str	r0, [sp, #60]	; 0x3c
 8027e80:	edcd 7a10 	vstr	s15, [sp, #64]	; 0x40
 8027e84:	ed8d 4a11 	vstr	s8, [sp, #68]	; 0x44
 8027e88:	ed8d 7a12 	vstr	s14, [sp, #72]	; 0x48
 8027e8c:	edcd 4a13 	vstr	s9, [sp, #76]	; 0x4c
 8027e90:	ed8d 8a14 	vstr	s16, [sp, #80]	; 0x50
 8027e94:	edcd 7a15 	vstr	s15, [sp, #84]	; 0x54
 8027e98:	9316      	str	r3, [sp, #88]	; 0x58
 8027e9a:	ed8d 6a17 	vstr	s12, [sp, #92]	; 0x5c
 8027e9e:	ab14      	add	r3, sp, #80	; 0x50
 8027ea0:	9303      	str	r3, [sp, #12]
 8027ea2:	ab10      	add	r3, sp, #64	; 0x40
 8027ea4:	9302      	str	r3, [sp, #8]
 8027ea6:	ab0c      	add	r3, sp, #48	; 0x30
 8027ea8:	9301      	str	r3, [sp, #4]
 8027eaa:	ab08      	add	r3, sp, #32
 8027eac:	9300      	str	r3, [sp, #0]
 8027eae:	2200      	movs	r2, #0
 8027eb0:	ab04      	add	r3, sp, #16
 8027eb2:	4641      	mov	r1, r8
 8027eb4:	4620      	mov	r0, r4
 8027eb6:	f7ff fe2d 	bl	8027b14 <_ZNK8touchgfx13TextureMapper8drawQuadERKNS_4RectEPtPKfS6_S6_S6_S6_>
 8027eba:	b018      	add	sp, #96	; 0x60
 8027ebc:	ecbd 8b02 	vpop	{d8}
 8027ec0:	e8bd 81f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, pc}
 8027ec4:	eeb0 6a48 	vmov.f32	s12, s16
 8027ec8:	eef0 4a47 	vmov.f32	s9, s14
 8027ecc:	ee17 3a90 	vmov	r3, s15
 8027ed0:	eeb0 4a67 	vmov.f32	s8, s15
 8027ed4:	e79b      	b.n	8027e0e <_ZNK8touchgfx13TextureMapper4drawERKNS_4RectE+0x5a>
 8027ed6:	ed8d 5a05 	vstr	s10, [sp, #20]
 8027eda:	ed8d 2a04 	vstr	s4, [sp, #16]
 8027ede:	f8cd c018 	str.w	ip, [sp, #24]
 8027ee2:	edcd 2a07 	vstr	s5, [sp, #28]
 8027ee6:	edcd 5a09 	vstr	s11, [sp, #36]	; 0x24
 8027eea:	ed8d 3a08 	vstr	s6, [sp, #32]
 8027eee:	970a      	str	r7, [sp, #40]	; 0x28
 8027ef0:	edcd 3a0b 	vstr	s7, [sp, #44]	; 0x2c
 8027ef4:	960d      	str	r6, [sp, #52]	; 0x34
 8027ef6:	950c      	str	r5, [sp, #48]	; 0x30
 8027ef8:	900e      	str	r0, [sp, #56]	; 0x38
 8027efa:	920f      	str	r2, [sp, #60]	; 0x3c
 8027efc:	edcd 7a11 	vstr	s15, [sp, #68]	; 0x44
 8027f00:	ed8d 4a10 	vstr	s8, [sp, #64]	; 0x40
 8027f04:	edcd 4a12 	vstr	s9, [sp, #72]	; 0x48
 8027f08:	ed8d 7a13 	vstr	s14, [sp, #76]	; 0x4c
 8027f0c:	ed8d 8a15 	vstr	s16, [sp, #84]	; 0x54
 8027f10:	edcd 7a14 	vstr	s15, [sp, #80]	; 0x50
 8027f14:	ed8d 6a16 	vstr	s12, [sp, #88]	; 0x58
 8027f18:	9317      	str	r3, [sp, #92]	; 0x5c
 8027f1a:	e7c0      	b.n	8027e9e <_ZNK8touchgfx13TextureMapper4drawERKNS_4RectE+0xea>
 8027f1c:	20012f1c 	.word	0x20012f1c

08027f20 <_ZN8touchgfxmlERKNS_9Matrix4x4ERKNS_6Point4E>:
 8027f20:	b5f0      	push	{r4, r5, r6, r7, lr}
 8027f22:	b08d      	sub	sp, #52	; 0x34
 8027f24:	2300      	movs	r3, #0
 8027f26:	9304      	str	r3, [sp, #16]
 8027f28:	9305      	str	r3, [sp, #20]
 8027f2a:	9306      	str	r3, [sp, #24]
 8027f2c:	aa04      	add	r2, sp, #16
 8027f2e:	f04f 537e 	mov.w	r3, #1065353216	; 0x3f800000
 8027f32:	9307      	str	r3, [sp, #28]
 8027f34:	f100 0640 	add.w	r6, r0, #64	; 0x40
 8027f38:	4613      	mov	r3, r2
 8027f3a:	f101 0710 	add.w	r7, r1, #16
 8027f3e:	eddf 7a0f 	vldr	s15, [pc, #60]	; 8027f7c <_ZN8touchgfxmlERKNS_9Matrix4x4ERKNS_6Point4E+0x5c>
 8027f42:	460c      	mov	r4, r1
 8027f44:	4605      	mov	r5, r0
 8027f46:	ecb4 7a01 	vldmia	r4!, {s14}
 8027f4a:	ecf5 6a01 	vldmia	r5!, {s13}
 8027f4e:	42bc      	cmp	r4, r7
 8027f50:	eee6 7a87 	vfma.f32	s15, s13, s14
 8027f54:	d1f7      	bne.n	8027f46 <_ZN8touchgfxmlERKNS_9Matrix4x4ERKNS_6Point4E+0x26>
 8027f56:	3010      	adds	r0, #16
 8027f58:	42b0      	cmp	r0, r6
 8027f5a:	ece2 7a01 	vstmia	r2!, {s15}
 8027f5e:	d1ee      	bne.n	8027f3e <_ZN8touchgfxmlERKNS_9Matrix4x4ERKNS_6Point4E+0x1e>
 8027f60:	cb0f      	ldmia	r3, {r0, r1, r2, r3}
 8027f62:	ac0c      	add	r4, sp, #48	; 0x30
 8027f64:	e904 000f 	stmdb	r4, {r0, r1, r2, r3}
 8027f68:	ed9d 0a08 	vldr	s0, [sp, #32]
 8027f6c:	eddd 0a09 	vldr	s1, [sp, #36]	; 0x24
 8027f70:	ed9d 1a0a 	vldr	s2, [sp, #40]	; 0x28
 8027f74:	eddd 1a0b 	vldr	s3, [sp, #44]	; 0x2c
 8027f78:	b00d      	add	sp, #52	; 0x34
 8027f7a:	bdf0      	pop	{r4, r5, r6, r7, pc}
 8027f7c:	00000000 	.word	0x00000000

08027f80 <_ZN8touchgfx9Matrix4x4C1Ev>:
 8027f80:	ed9f 7a0b 	vldr	s14, [pc, #44]	; 8027fb0 <_ZN8touchgfx9Matrix4x4C1Ev+0x30>
 8027f84:	2300      	movs	r3, #0
 8027f86:	eef7 7a00 	vmov.f32	s15, #112	; 0x3f800000  1.0
 8027f8a:	eb00 1103 	add.w	r1, r0, r3, lsl #4
 8027f8e:	2200      	movs	r2, #0
 8027f90:	4293      	cmp	r3, r2
 8027f92:	f102 0201 	add.w	r2, r2, #1
 8027f96:	bf14      	ite	ne
 8027f98:	eef0 6a47 	vmovne.f32	s13, s14
 8027f9c:	eef0 6a67 	vmoveq.f32	s13, s15
 8027fa0:	2a04      	cmp	r2, #4
 8027fa2:	ece1 6a01 	vstmia	r1!, {s13}
 8027fa6:	d1f3      	bne.n	8027f90 <_ZN8touchgfx9Matrix4x4C1Ev+0x10>
 8027fa8:	3301      	adds	r3, #1
 8027faa:	2b04      	cmp	r3, #4
 8027fac:	d1ed      	bne.n	8027f8a <_ZN8touchgfx9Matrix4x4C1Ev+0xa>
 8027fae:	4770      	bx	lr
 8027fb0:	00000000 	.word	0x00000000

08027fb4 <_ZN8touchgfxmlERKNS_9Matrix4x4ES2_>:
 8027fb4:	e92d 41f0 	stmdb	sp!, {r4, r5, r6, r7, r8, lr}
 8027fb8:	460c      	mov	r4, r1
 8027fba:	4605      	mov	r5, r0
 8027fbc:	4690      	mov	r8, r2
 8027fbe:	f7ff ffdf 	bl	8027f80 <_ZN8touchgfx9Matrix4x4C1Ev>
 8027fc2:	4628      	mov	r0, r5
 8027fc4:	4621      	mov	r1, r4
 8027fc6:	f104 0c40 	add.w	ip, r4, #64	; 0x40
 8027fca:	2300      	movs	r3, #0
 8027fcc:	eddf 7a0f 	vldr	s15, [pc, #60]	; 802800c <_ZN8touchgfxmlERKNS_9Matrix4x4ES2_+0x58>
 8027fd0:	eb08 0603 	add.w	r6, r8, r3
 8027fd4:	460f      	mov	r7, r1
 8027fd6:	2400      	movs	r4, #0
 8027fd8:	4632      	mov	r2, r6
 8027fda:	ecf7 6a01 	vldmia	r7!, {s13}
 8027fde:	ed92 7a00 	vldr	s14, [r2]
 8027fe2:	3401      	adds	r4, #1
 8027fe4:	2c04      	cmp	r4, #4
 8027fe6:	f106 0610 	add.w	r6, r6, #16
 8027fea:	eee6 7a87 	vfma.f32	s15, s13, s14
 8027fee:	d1f3      	bne.n	8027fd8 <_ZN8touchgfxmlERKNS_9Matrix4x4ES2_+0x24>
 8027ff0:	18c2      	adds	r2, r0, r3
 8027ff2:	3304      	adds	r3, #4
 8027ff4:	2b10      	cmp	r3, #16
 8027ff6:	edc2 7a00 	vstr	s15, [r2]
 8027ffa:	d1e7      	bne.n	8027fcc <_ZN8touchgfxmlERKNS_9Matrix4x4ES2_+0x18>
 8027ffc:	3110      	adds	r1, #16
 8027ffe:	4561      	cmp	r1, ip
 8028000:	f100 0010 	add.w	r0, r0, #16
 8028004:	d1e1      	bne.n	8027fca <_ZN8touchgfxmlERKNS_9Matrix4x4ES2_+0x16>
 8028006:	4628      	mov	r0, r5
 8028008:	e8bd 81f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, pc}
 802800c:	00000000 	.word	0x00000000

08028010 <_ZN8touchgfx9Matrix4x415setViewDistanceEf>:
 8028010:	eef7 7a00 	vmov.f32	s15, #112	; 0x3f800000  1.0
 8028014:	ee87 0a80 	vdiv.f32	s0, s15, s0
 8028018:	f100 0320 	add.w	r3, r0, #32
 802801c:	3030      	adds	r0, #48	; 0x30
 802801e:	ecf3 7a01 	vldmia	r3!, {s15}
 8028022:	ee60 7a27 	vmul.f32	s15, s0, s15
 8028026:	4283      	cmp	r3, r0
 8028028:	edc3 7a03 	vstr	s15, [r3, #12]
 802802c:	d1f7      	bne.n	802801e <_ZN8touchgfx9Matrix4x415setViewDistanceEf+0xe>
 802802e:	4770      	bx	lr

08028030 <_ZN8touchgfx9Matrix4x420concatenateXRotationEf>:
 8028030:	b510      	push	{r4, lr}
 8028032:	ed2d 8b02 	vpush	{d8}
 8028036:	4604      	mov	r4, r0
 8028038:	eef0 8a40 	vmov.f32	s17, s0
 802803c:	f001 fa7a 	bl	8029534 <sinf>
 8028040:	eeb0 8a40 	vmov.f32	s16, s0
 8028044:	eeb0 0a68 	vmov.f32	s0, s17
 8028048:	f001 fa30 	bl	80294ac <cosf>
 802804c:	f104 0310 	add.w	r3, r4, #16
 8028050:	f104 0220 	add.w	r2, r4, #32
 8028054:	eeb1 6a48 	vneg.f32	s12, s16
 8028058:	edd3 7a04 	vldr	s15, [r3, #16]
 802805c:	edd3 6a00 	vldr	s13, [r3]
 8028060:	ee26 7a27 	vmul.f32	s14, s12, s15
 8028064:	ee67 7a80 	vmul.f32	s15, s15, s0
 8028068:	eea6 7a80 	vfma.f32	s14, s13, s0
 802806c:	eee6 7a88 	vfma.f32	s15, s13, s16
 8028070:	eca3 7a01 	vstmia	r3!, {s14}
 8028074:	429a      	cmp	r2, r3
 8028076:	edc3 7a03 	vstr	s15, [r3, #12]
 802807a:	d1ed      	bne.n	8028058 <_ZN8touchgfx9Matrix4x420concatenateXRotationEf+0x28>
 802807c:	ecbd 8b02 	vpop	{d8}
 8028080:	4620      	mov	r0, r4
 8028082:	bd10      	pop	{r4, pc}

08028084 <_ZN8touchgfx9Matrix4x420concatenateYRotationEf>:
 8028084:	b510      	push	{r4, lr}
 8028086:	ed2d 8b02 	vpush	{d8}
 802808a:	4604      	mov	r4, r0
 802808c:	eef0 8a40 	vmov.f32	s17, s0
 8028090:	f001 fa50 	bl	8029534 <sinf>
 8028094:	eeb0 8a40 	vmov.f32	s16, s0
 8028098:	eeb0 0a68 	vmov.f32	s0, s17
 802809c:	f001 fa06 	bl	80294ac <cosf>
 80280a0:	4623      	mov	r3, r4
 80280a2:	f104 0210 	add.w	r2, r4, #16
 80280a6:	eeb1 6a48 	vneg.f32	s12, s16
 80280aa:	edd3 7a08 	vldr	s15, [r3, #32]
 80280ae:	edd3 6a00 	vldr	s13, [r3]
 80280b2:	ee27 7a88 	vmul.f32	s14, s15, s16
 80280b6:	ee67 7a80 	vmul.f32	s15, s15, s0
 80280ba:	eea6 7a80 	vfma.f32	s14, s13, s0
 80280be:	eee6 7a26 	vfma.f32	s15, s12, s13
 80280c2:	eca3 7a01 	vstmia	r3!, {s14}
 80280c6:	429a      	cmp	r2, r3
 80280c8:	edc3 7a07 	vstr	s15, [r3, #28]
 80280cc:	d1ed      	bne.n	80280aa <_ZN8touchgfx9Matrix4x420concatenateYRotationEf+0x26>
 80280ce:	ecbd 8b02 	vpop	{d8}
 80280d2:	4620      	mov	r0, r4
 80280d4:	bd10      	pop	{r4, pc}

080280d6 <_ZN8touchgfx9Matrix4x420concatenateZRotationEf>:
 80280d6:	b510      	push	{r4, lr}
 80280d8:	ed2d 8b02 	vpush	{d8}
 80280dc:	4604      	mov	r4, r0
 80280de:	eef0 8a40 	vmov.f32	s17, s0
 80280e2:	f001 fa27 	bl	8029534 <sinf>
 80280e6:	eeb0 8a40 	vmov.f32	s16, s0
 80280ea:	eeb0 0a68 	vmov.f32	s0, s17
 80280ee:	f001 f9dd 	bl	80294ac <cosf>
 80280f2:	4623      	mov	r3, r4
 80280f4:	f104 0210 	add.w	r2, r4, #16
 80280f8:	eeb1 6a48 	vneg.f32	s12, s16
 80280fc:	edd3 7a04 	vldr	s15, [r3, #16]
 8028100:	edd3 6a00 	vldr	s13, [r3]
 8028104:	ee26 7a27 	vmul.f32	s14, s12, s15
 8028108:	ee67 7a80 	vmul.f32	s15, s15, s0
 802810c:	eea6 7a80 	vfma.f32	s14, s13, s0
 8028110:	eee6 7a88 	vfma.f32	s15, s13, s16
 8028114:	eca3 7a01 	vstmia	r3!, {s14}
 8028118:	429a      	cmp	r2, r3
 802811a:	edc3 7a03 	vstr	s15, [r3, #12]
 802811e:	d1ed      	bne.n	80280fc <_ZN8touchgfx9Matrix4x420concatenateZRotationEf+0x26>
 8028120:	ecbd 8b02 	vpop	{d8}
 8028124:	4620      	mov	r0, r4
 8028126:	bd10      	pop	{r4, pc}

08028128 <_ZN8touchgfx9Matrix4x423concatenateXTranslationEf>:
 8028128:	4603      	mov	r3, r0
 802812a:	f100 0210 	add.w	r2, r0, #16
 802812e:	ed93 7a0c 	vldr	s14, [r3, #48]	; 0x30
 8028132:	edd3 7a00 	vldr	s15, [r3]
 8028136:	eee7 7a00 	vfma.f32	s15, s14, s0
 802813a:	ece3 7a01 	vstmia	r3!, {s15}
 802813e:	4293      	cmp	r3, r2
 8028140:	d1f5      	bne.n	802812e <_ZN8touchgfx9Matrix4x423concatenateXTranslationEf+0x6>
 8028142:	4770      	bx	lr

08028144 <_ZN8touchgfx9Matrix4x423concatenateYTranslationEf>:
 8028144:	f100 0310 	add.w	r3, r0, #16
 8028148:	f100 0220 	add.w	r2, r0, #32
 802814c:	ed93 7a08 	vldr	s14, [r3, #32]
 8028150:	edd3 7a00 	vldr	s15, [r3]
 8028154:	eee7 7a00 	vfma.f32	s15, s14, s0
 8028158:	ece3 7a01 	vstmia	r3!, {s15}
 802815c:	4293      	cmp	r3, r2
 802815e:	d1f5      	bne.n	802814c <_ZN8touchgfx9Matrix4x423concatenateYTranslationEf+0x8>
 8028160:	4770      	bx	lr

08028162 <_ZN8touchgfx9Matrix4x423concatenateZTranslationEf>:
 8028162:	f100 0320 	add.w	r3, r0, #32
 8028166:	f100 0230 	add.w	r2, r0, #48	; 0x30
 802816a:	ed93 7a04 	vldr	s14, [r3, #16]
 802816e:	edd3 7a00 	vldr	s15, [r3]
 8028172:	eee7 7a00 	vfma.f32	s15, s14, s0
 8028176:	ece3 7a01 	vstmia	r3!, {s15}
 802817a:	4293      	cmp	r3, r2
 802817c:	d1f5      	bne.n	802816a <_ZN8touchgfx9Matrix4x423concatenateZTranslationEf+0x8>
 802817e:	4770      	bx	lr

08028180 <_ZN8touchgfx9Matrix4x417concatenateXScaleEf>:
 8028180:	4603      	mov	r3, r0
 8028182:	f100 0210 	add.w	r2, r0, #16
 8028186:	edd3 7a00 	vldr	s15, [r3]
 802818a:	ee67 7a80 	vmul.f32	s15, s15, s0
 802818e:	ece3 7a01 	vstmia	r3!, {s15}
 8028192:	4293      	cmp	r3, r2
 8028194:	d1f7      	bne.n	8028186 <_ZN8touchgfx9Matrix4x417concatenateXScaleEf+0x6>
 8028196:	4770      	bx	lr

08028198 <_ZN8touchgfx9Matrix4x417concatenateYScaleEf>:
 8028198:	f100 0310 	add.w	r3, r0, #16
 802819c:	f100 0220 	add.w	r2, r0, #32
 80281a0:	edd3 7a00 	vldr	s15, [r3]
 80281a4:	ee67 7a80 	vmul.f32	s15, s15, s0
 80281a8:	ece3 7a01 	vstmia	r3!, {s15}
 80281ac:	4293      	cmp	r3, r2
 80281ae:	d1f7      	bne.n	80281a0 <_ZN8touchgfx9Matrix4x417concatenateYScaleEf+0x8>
 80281b0:	4770      	bx	lr

080281b2 <_ZN8touchgfx9Matrix4x417concatenateZScaleEf>:
 80281b2:	f100 0320 	add.w	r3, r0, #32
 80281b6:	f100 0230 	add.w	r2, r0, #48	; 0x30
 80281ba:	edd3 7a00 	vldr	s15, [r3]
 80281be:	ee67 7a80 	vmul.f32	s15, s15, s0
 80281c2:	ece3 7a01 	vstmia	r3!, {s15}
 80281c6:	4293      	cmp	r3, r2
 80281c8:	d1f7      	bne.n	80281ba <_ZN8touchgfx9Matrix4x417concatenateZScaleEf+0x8>
 80281ca:	4770      	bx	lr

080281cc <arm_max_f32>:
 80281cc:	e92d 41f0 	stmdb	sp!, {r4, r5, r6, r7, r8, lr}
 80281d0:	1e4f      	subs	r7, r1, #1
 80281d2:	ea5f 0897 	movs.w	r8, r7, lsr #2
 80281d6:	f100 0e04 	add.w	lr, r0, #4
 80281da:	edd0 7a00 	vldr	s15, [r0]
 80281de:	d058      	beq.n	8028292 <arm_max_f32+0xc6>
 80281e0:	3014      	adds	r0, #20
 80281e2:	46c4      	mov	ip, r8
 80281e4:	2604      	movs	r6, #4
 80281e6:	2400      	movs	r4, #0
 80281e8:	ed10 6a04 	vldr	s12, [r0, #-16]
 80281ec:	ed50 6a03 	vldr	s13, [r0, #-12]
 80281f0:	ed10 7a02 	vldr	s14, [r0, #-8]
 80281f4:	ed50 5a01 	vldr	s11, [r0, #-4]
 80281f8:	eeb4 6ae7 	vcmpe.f32	s12, s15
 80281fc:	eef1 fa10 	vmrs	APSR_nzcv, fpscr
 8028200:	bfc8      	it	gt
 8028202:	eef0 7a46 	vmovgt.f32	s15, s12
 8028206:	f1a6 0503 	sub.w	r5, r6, #3
 802820a:	eef4 7ae6 	vcmpe.f32	s15, s13
 802820e:	bfc8      	it	gt
 8028210:	462c      	movgt	r4, r5
 8028212:	eef1 fa10 	vmrs	APSR_nzcv, fpscr
 8028216:	bf48      	it	mi
 8028218:	eef0 7a66 	vmovmi.f32	s15, s13
 802821c:	f1a6 0502 	sub.w	r5, r6, #2
 8028220:	eef4 7ac7 	vcmpe.f32	s15, s14
 8028224:	bf48      	it	mi
 8028226:	462c      	movmi	r4, r5
 8028228:	eef1 fa10 	vmrs	APSR_nzcv, fpscr
 802822c:	bf48      	it	mi
 802822e:	eef0 7a47 	vmovmi.f32	s15, s14
 8028232:	f106 35ff 	add.w	r5, r6, #4294967295
 8028236:	eef4 7ae5 	vcmpe.f32	s15, s11
 802823a:	bf48      	it	mi
 802823c:	462c      	movmi	r4, r5
 802823e:	eef1 fa10 	vmrs	APSR_nzcv, fpscr
 8028242:	bf48      	it	mi
 8028244:	4634      	movmi	r4, r6
 8028246:	bf48      	it	mi
 8028248:	eef0 7a65 	vmovmi.f32	s15, s11
 802824c:	f1bc 0c01 	subs.w	ip, ip, #1
 8028250:	f106 0604 	add.w	r6, r6, #4
 8028254:	f100 0010 	add.w	r0, r0, #16
 8028258:	d1c6      	bne.n	80281e8 <arm_max_f32+0x1c>
 802825a:	eb0e 1e08 	add.w	lr, lr, r8, lsl #4
 802825e:	f017 0003 	ands.w	r0, r7, #3
 8028262:	d018      	beq.n	8028296 <arm_max_f32+0xca>
 8028264:	1a08      	subs	r0, r1, r0
 8028266:	ecbe 7a01 	vldmia	lr!, {s14}
 802826a:	eeb4 7ae7 	vcmpe.f32	s14, s15
 802826e:	eef1 fa10 	vmrs	APSR_nzcv, fpscr
 8028272:	bfc8      	it	gt
 8028274:	4604      	movgt	r4, r0
 8028276:	f100 0001 	add.w	r0, r0, #1
 802827a:	bfd8      	it	le
 802827c:	eeb0 7a67 	vmovle.f32	s14, s15
 8028280:	4288      	cmp	r0, r1
 8028282:	eef0 7a47 	vmov.f32	s15, s14
 8028286:	d1ee      	bne.n	8028266 <arm_max_f32+0x9a>
 8028288:	ed82 7a00 	vstr	s14, [r2]
 802828c:	601c      	str	r4, [r3, #0]
 802828e:	e8bd 81f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, pc}
 8028292:	4644      	mov	r4, r8
 8028294:	e7e3      	b.n	802825e <arm_max_f32+0x92>
 8028296:	eeb0 7a67 	vmov.f32	s14, s15
 802829a:	e7f5      	b.n	8028288 <arm_max_f32+0xbc>

0802829c <arm_rfft_fast_init_f32>:
 802829c:	084b      	lsrs	r3, r1, #1
 802829e:	2b80      	cmp	r3, #128	; 0x80
 80282a0:	b410      	push	{r4}
 80282a2:	8201      	strh	r1, [r0, #16]
 80282a4:	8003      	strh	r3, [r0, #0]
 80282a6:	d047      	beq.n	8028338 <arm_rfft_fast_init_f32+0x9c>
 80282a8:	d917      	bls.n	80282da <arm_rfft_fast_init_f32+0x3e>
 80282aa:	f5b3 7f00 	cmp.w	r3, #512	; 0x200
 80282ae:	d03d      	beq.n	802832c <arm_rfft_fast_init_f32+0x90>
 80282b0:	d929      	bls.n	8028306 <arm_rfft_fast_init_f32+0x6a>
 80282b2:	f5b3 6f80 	cmp.w	r3, #1024	; 0x400
 80282b6:	d020      	beq.n	80282fa <arm_rfft_fast_init_f32+0x5e>
 80282b8:	f5b3 6f00 	cmp.w	r3, #2048	; 0x800
 80282bc:	d113      	bne.n	80282e6 <arm_rfft_fast_init_f32+0x4a>
 80282be:	4921      	ldr	r1, [pc, #132]	; (8028344 <arm_rfft_fast_init_f32+0xa8>)
 80282c0:	4a21      	ldr	r2, [pc, #132]	; (8028348 <arm_rfft_fast_init_f32+0xac>)
 80282c2:	4b22      	ldr	r3, [pc, #136]	; (802834c <arm_rfft_fast_init_f32+0xb0>)
 80282c4:	f44f 646e 	mov.w	r4, #3808	; 0xee0
 80282c8:	8184      	strh	r4, [r0, #12]
 80282ca:	6081      	str	r1, [r0, #8]
 80282cc:	6042      	str	r2, [r0, #4]
 80282ce:	6143      	str	r3, [r0, #20]
 80282d0:	2000      	movs	r0, #0
 80282d2:	b240      	sxtb	r0, r0
 80282d4:	f85d 4b04 	ldr.w	r4, [sp], #4
 80282d8:	4770      	bx	lr
 80282da:	2b20      	cmp	r3, #32
 80282dc:	d01c      	beq.n	8028318 <arm_rfft_fast_init_f32+0x7c>
 80282de:	2b40      	cmp	r3, #64	; 0x40
 80282e0:	d006      	beq.n	80282f0 <arm_rfft_fast_init_f32+0x54>
 80282e2:	2b10      	cmp	r3, #16
 80282e4:	d01d      	beq.n	8028322 <arm_rfft_fast_init_f32+0x86>
 80282e6:	20ff      	movs	r0, #255	; 0xff
 80282e8:	b240      	sxtb	r0, r0
 80282ea:	f85d 4b04 	ldr.w	r4, [sp], #4
 80282ee:	4770      	bx	lr
 80282f0:	2438      	movs	r4, #56	; 0x38
 80282f2:	4917      	ldr	r1, [pc, #92]	; (8028350 <arm_rfft_fast_init_f32+0xb4>)
 80282f4:	4a17      	ldr	r2, [pc, #92]	; (8028354 <arm_rfft_fast_init_f32+0xb8>)
 80282f6:	4b18      	ldr	r3, [pc, #96]	; (8028358 <arm_rfft_fast_init_f32+0xbc>)
 80282f8:	e7e6      	b.n	80282c8 <arm_rfft_fast_init_f32+0x2c>
 80282fa:	f44f 64e1 	mov.w	r4, #1800	; 0x708
 80282fe:	4917      	ldr	r1, [pc, #92]	; (802835c <arm_rfft_fast_init_f32+0xc0>)
 8028300:	4a17      	ldr	r2, [pc, #92]	; (8028360 <arm_rfft_fast_init_f32+0xc4>)
 8028302:	4b18      	ldr	r3, [pc, #96]	; (8028364 <arm_rfft_fast_init_f32+0xc8>)
 8028304:	e7e0      	b.n	80282c8 <arm_rfft_fast_init_f32+0x2c>
 8028306:	f5b3 7f80 	cmp.w	r3, #256	; 0x100
 802830a:	d1ec      	bne.n	80282e6 <arm_rfft_fast_init_f32+0x4a>
 802830c:	f44f 74dc 	mov.w	r4, #440	; 0x1b8
 8028310:	4915      	ldr	r1, [pc, #84]	; (8028368 <arm_rfft_fast_init_f32+0xcc>)
 8028312:	4a16      	ldr	r2, [pc, #88]	; (802836c <arm_rfft_fast_init_f32+0xd0>)
 8028314:	4b16      	ldr	r3, [pc, #88]	; (8028370 <arm_rfft_fast_init_f32+0xd4>)
 8028316:	e7d7      	b.n	80282c8 <arm_rfft_fast_init_f32+0x2c>
 8028318:	2430      	movs	r4, #48	; 0x30
 802831a:	4916      	ldr	r1, [pc, #88]	; (8028374 <arm_rfft_fast_init_f32+0xd8>)
 802831c:	4a16      	ldr	r2, [pc, #88]	; (8028378 <arm_rfft_fast_init_f32+0xdc>)
 802831e:	4b17      	ldr	r3, [pc, #92]	; (802837c <arm_rfft_fast_init_f32+0xe0>)
 8028320:	e7d2      	b.n	80282c8 <arm_rfft_fast_init_f32+0x2c>
 8028322:	2414      	movs	r4, #20
 8028324:	4916      	ldr	r1, [pc, #88]	; (8028380 <arm_rfft_fast_init_f32+0xe4>)
 8028326:	4a17      	ldr	r2, [pc, #92]	; (8028384 <arm_rfft_fast_init_f32+0xe8>)
 8028328:	4b17      	ldr	r3, [pc, #92]	; (8028388 <arm_rfft_fast_init_f32+0xec>)
 802832a:	e7cd      	b.n	80282c8 <arm_rfft_fast_init_f32+0x2c>
 802832c:	f44f 74e0 	mov.w	r4, #448	; 0x1c0
 8028330:	4916      	ldr	r1, [pc, #88]	; (802838c <arm_rfft_fast_init_f32+0xf0>)
 8028332:	4a17      	ldr	r2, [pc, #92]	; (8028390 <arm_rfft_fast_init_f32+0xf4>)
 8028334:	4b17      	ldr	r3, [pc, #92]	; (8028394 <arm_rfft_fast_init_f32+0xf8>)
 8028336:	e7c7      	b.n	80282c8 <arm_rfft_fast_init_f32+0x2c>
 8028338:	24d0      	movs	r4, #208	; 0xd0
 802833a:	4917      	ldr	r1, [pc, #92]	; (8028398 <arm_rfft_fast_init_f32+0xfc>)
 802833c:	4a17      	ldr	r2, [pc, #92]	; (802839c <arm_rfft_fast_init_f32+0x100>)
 802833e:	4b18      	ldr	r3, [pc, #96]	; (80283a0 <arm_rfft_fast_init_f32+0x104>)
 8028340:	e7c2      	b.n	80282c8 <arm_rfft_fast_init_f32+0x2c>
 8028342:	bf00      	nop
 8028344:	0803dc00 	.word	0x0803dc00
 8028348:	0802edf8 	.word	0x0802edf8
 802834c:	08034f68 	.word	0x08034f68
 8028350:	08032ef8 	.word	0x08032ef8
 8028354:	0803f9c0 	.word	0x0803f9c0
 8028358:	08041eb0 	.word	0x08041eb0
 802835c:	0803b8e8 	.word	0x0803b8e8
 8028360:	080397e8 	.word	0x080397e8
 8028364:	08032f68 	.word	0x08032f68
 8028368:	08041b40 	.word	0x08041b40
 802836c:	08038f68 	.word	0x08038f68
 8028370:	0803fbc0 	.word	0x0803fbc0
 8028374:	0803c7a0 	.word	0x0803c7a0
 8028378:	0803b7e8 	.word	0x0803b7e8
 802837c:	08032df8 	.word	0x08032df8
 8028380:	0803c6f8 	.word	0x0803c6f8
 8028384:	08039768 	.word	0x08039768
 8028388:	0803c720 	.word	0x0803c720
 802838c:	080403c0 	.word	0x080403c0
 8028390:	0803cc00 	.word	0x0803cc00
 8028394:	08040740 	.word	0x08040740
 8028398:	080420b0 	.word	0x080420b0
 802839c:	0803c800 	.word	0x0803c800
 80283a0:	08041740 	.word	0x08041740

080283a4 <arm_rfft_fast_f32>:
 80283a4:	e92d 41f0 	stmdb	sp!, {r4, r5, r6, r7, r8, lr}
 80283a8:	8a06      	ldrh	r6, [r0, #16]
 80283aa:	0876      	lsrs	r6, r6, #1
 80283ac:	4607      	mov	r7, r0
 80283ae:	4615      	mov	r5, r2
 80283b0:	8006      	strh	r6, [r0, #0]
 80283b2:	460c      	mov	r4, r1
 80283b4:	2b00      	cmp	r3, #0
 80283b6:	d15c      	bne.n	8028472 <arm_rfft_fast_f32+0xce>
 80283b8:	461a      	mov	r2, r3
 80283ba:	2301      	movs	r3, #1
 80283bc:	f000 fbe6 	bl	8028b8c <arm_cfft_f32>
 80283c0:	edd4 7a00 	vldr	s15, [r4]
 80283c4:	ed94 7a01 	vldr	s14, [r4, #4]
 80283c8:	883e      	ldrh	r6, [r7, #0]
 80283ca:	6978      	ldr	r0, [r7, #20]
 80283cc:	ee37 7a07 	vadd.f32	s14, s14, s14
 80283d0:	ee77 7aa7 	vadd.f32	s15, s15, s15
 80283d4:	eef6 3a00 	vmov.f32	s7, #96	; 0x3f000000  0.5
 80283d8:	ee77 6a87 	vadd.f32	s13, s15, s14
 80283dc:	ee77 7ac7 	vsub.f32	s15, s15, s14
 80283e0:	3e01      	subs	r6, #1
 80283e2:	ee26 7aa3 	vmul.f32	s14, s13, s7
 80283e6:	ee67 7aa3 	vmul.f32	s15, s15, s7
 80283ea:	eb04 03c6 	add.w	r3, r4, r6, lsl #3
 80283ee:	ed85 7a00 	vstr	s14, [r5]
 80283f2:	edc5 7a01 	vstr	s15, [r5, #4]
 80283f6:	3010      	adds	r0, #16
 80283f8:	f105 0210 	add.w	r2, r5, #16
 80283fc:	3b08      	subs	r3, #8
 80283fe:	f104 0110 	add.w	r1, r4, #16
 8028402:	ed51 4a02 	vldr	s9, [r1, #-8]
 8028406:	ed93 5a02 	vldr	s10, [r3, #8]
 802840a:	ed11 7a01 	vldr	s14, [r1, #-4]
 802840e:	ed10 6a02 	vldr	s12, [r0, #-8]
 8028412:	edd3 5a03 	vldr	s11, [r3, #12]
 8028416:	ed50 6a01 	vldr	s13, [r0, #-4]
 802841a:	ee75 7a64 	vsub.f32	s15, s10, s9
 802841e:	ee35 4a87 	vadd.f32	s8, s11, s14
 8028422:	ee35 5a24 	vadd.f32	s10, s10, s9
 8028426:	ee77 5a65 	vsub.f32	s11, s14, s11
 802842a:	ee66 4a27 	vmul.f32	s9, s12, s15
 802842e:	ee26 7aa7 	vmul.f32	s14, s13, s15
 8028432:	ee34 5a85 	vadd.f32	s10, s9, s10
 8028436:	ee26 6a04 	vmul.f32	s12, s12, s8
 802843a:	ee66 6a84 	vmul.f32	s13, s13, s8
 802843e:	ee77 7a25 	vadd.f32	s15, s14, s11
 8028442:	ee76 6a85 	vadd.f32	s13, s13, s10
 8028446:	ee77 7ac6 	vsub.f32	s15, s15, s12
 802844a:	ee66 6aa3 	vmul.f32	s13, s13, s7
 802844e:	ee67 7aa3 	vmul.f32	s15, s15, s7
 8028452:	3e01      	subs	r6, #1
 8028454:	ed42 6a02 	vstr	s13, [r2, #-8]
 8028458:	ed42 7a01 	vstr	s15, [r2, #-4]
 802845c:	f1a3 0308 	sub.w	r3, r3, #8
 8028460:	f101 0108 	add.w	r1, r1, #8
 8028464:	f100 0008 	add.w	r0, r0, #8
 8028468:	f102 0208 	add.w	r2, r2, #8
 802846c:	d1c9      	bne.n	8028402 <arm_rfft_fast_f32+0x5e>
 802846e:	e8bd 81f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, pc}
 8028472:	edd1 7a00 	vldr	s15, [r1]
 8028476:	edd1 6a01 	vldr	s13, [r1, #4]
 802847a:	6941      	ldr	r1, [r0, #20]
 802847c:	ee37 7aa6 	vadd.f32	s14, s15, s13
 8028480:	ee77 7ae6 	vsub.f32	s15, s15, s13
 8028484:	eef6 3a00 	vmov.f32	s7, #96	; 0x3f000000  0.5
 8028488:	ee27 7a23 	vmul.f32	s14, s14, s7
 802848c:	ee67 7aa3 	vmul.f32	s15, s15, s7
 8028490:	3e01      	subs	r6, #1
 8028492:	ed82 7a00 	vstr	s14, [r2]
 8028496:	edc2 7a01 	vstr	s15, [r2, #4]
 802849a:	00f0      	lsls	r0, r6, #3
 802849c:	b3ee      	cbz	r6, 802851a <arm_rfft_fast_f32+0x176>
 802849e:	3808      	subs	r0, #8
 80284a0:	f101 0e10 	add.w	lr, r1, #16
 80284a4:	4420      	add	r0, r4
 80284a6:	f104 0110 	add.w	r1, r4, #16
 80284aa:	f102 0c10 	add.w	ip, r2, #16
 80284ae:	ed90 7a02 	vldr	s14, [r0, #8]
 80284b2:	ed51 6a02 	vldr	s13, [r1, #-8]
 80284b6:	ed1e 6a02 	vldr	s12, [lr, #-8]
 80284ba:	ed90 4a03 	vldr	s8, [r0, #12]
 80284be:	ed11 5a01 	vldr	s10, [r1, #-4]
 80284c2:	ed5e 5a01 	vldr	s11, [lr, #-4]
 80284c6:	ee76 7ac7 	vsub.f32	s15, s13, s14
 80284ca:	ee74 4a05 	vadd.f32	s9, s8, s10
 80284ce:	ee26 3a27 	vmul.f32	s6, s12, s15
 80284d2:	ee77 6a26 	vadd.f32	s13, s14, s13
 80284d6:	ee35 5a44 	vsub.f32	s10, s10, s8
 80284da:	ee25 7aa7 	vmul.f32	s14, s11, s15
 80284de:	ee76 6ac3 	vsub.f32	s13, s13, s6
 80284e2:	ee77 7a05 	vadd.f32	s15, s14, s10
 80284e6:	ee26 6a24 	vmul.f32	s12, s12, s9
 80284ea:	ee65 5aa4 	vmul.f32	s11, s11, s9
 80284ee:	ee77 7ac6 	vsub.f32	s15, s15, s12
 80284f2:	ee36 7ae5 	vsub.f32	s14, s13, s11
 80284f6:	ee67 7aa3 	vmul.f32	s15, s15, s7
 80284fa:	ee27 7a23 	vmul.f32	s14, s14, s7
 80284fe:	3e01      	subs	r6, #1
 8028500:	ed0c 7a02 	vstr	s14, [ip, #-8]
 8028504:	ed4c 7a01 	vstr	s15, [ip, #-4]
 8028508:	f1a0 0008 	sub.w	r0, r0, #8
 802850c:	f101 0108 	add.w	r1, r1, #8
 8028510:	f10e 0e08 	add.w	lr, lr, #8
 8028514:	f10c 0c08 	add.w	ip, ip, #8
 8028518:	d1c9      	bne.n	80284ae <arm_rfft_fast_f32+0x10a>
 802851a:	4638      	mov	r0, r7
 802851c:	4629      	mov	r1, r5
 802851e:	461a      	mov	r2, r3
 8028520:	e8bd 41f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, lr}
 8028524:	2301      	movs	r3, #1
 8028526:	f000 bb31 	b.w	8028b8c <arm_cfft_f32>
 802852a:	bf00      	nop

0802852c <arm_cfft_radix8by2_f32>:
 802852c:	e92d 41f0 	stmdb	sp!, {r4, r5, r6, r7, r8, lr}
 8028530:	ed2d 8b08 	vpush	{d8-d11}
 8028534:	f8b0 e000 	ldrh.w	lr, [r0]
 8028538:	6842      	ldr	r2, [r0, #4]
 802853a:	ea4f 0c5e 	mov.w	ip, lr, lsr #1
 802853e:	eb01 088e 	add.w	r8, r1, lr, lsl #2
 8028542:	ea5f 0ede 	movs.w	lr, lr, lsr #3
 8028546:	4607      	mov	r7, r0
 8028548:	ea4f 038c 	mov.w	r3, ip, lsl #2
 802854c:	f000 80af 	beq.w	80286ae <arm_cfft_radix8by2_f32+0x182>
 8028550:	3310      	adds	r3, #16
 8028552:	18ce      	adds	r6, r1, r3
 8028554:	3210      	adds	r2, #16
 8028556:	4443      	add	r3, r8
 8028558:	f101 0510 	add.w	r5, r1, #16
 802855c:	f108 0410 	add.w	r4, r8, #16
 8028560:	ed54 1a04 	vldr	s3, [r4, #-16]
 8028564:	ed13 4a04 	vldr	s8, [r3, #-16]
 8028568:	ed53 3a03 	vldr	s7, [r3, #-12]
 802856c:	ed53 5a02 	vldr	s11, [r3, #-8]
 8028570:	ed13 5a01 	vldr	s10, [r3, #-4]
 8028574:	ed54 6a03 	vldr	s13, [r4, #-12]
 8028578:	ed14 0a02 	vldr	s0, [r4, #-8]
 802857c:	ed16 2a04 	vldr	s4, [r6, #-16]
 8028580:	ed56 2a03 	vldr	s5, [r6, #-12]
 8028584:	ed15 6a03 	vldr	s12, [r5, #-12]
 8028588:	ed15 7a01 	vldr	s14, [r5, #-4]
 802858c:	ed15 3a04 	vldr	s6, [r5, #-16]
 8028590:	ed54 7a01 	vldr	s15, [r4, #-4]
 8028594:	ed56 0a02 	vldr	s1, [r6, #-8]
 8028598:	ed16 1a01 	vldr	s2, [r6, #-4]
 802859c:	ed55 4a02 	vldr	s9, [r5, #-8]
 80285a0:	ee73 ba21 	vadd.f32	s23, s6, s3
 80285a4:	ee36 ba26 	vadd.f32	s22, s12, s13
 80285a8:	ee37 aa27 	vadd.f32	s20, s14, s15
 80285ac:	ee72 9a04 	vadd.f32	s19, s4, s8
 80285b0:	ee32 9aa3 	vadd.f32	s18, s5, s7
 80285b4:	ee31 8a05 	vadd.f32	s16, s2, s10
 80285b8:	ee74 aa80 	vadd.f32	s21, s9, s0
 80285bc:	ee70 8aa5 	vadd.f32	s17, s1, s11
 80285c0:	ed45 ba04 	vstr	s23, [r5, #-16]
 80285c4:	ed05 ba03 	vstr	s22, [r5, #-12]
 80285c8:	ed45 aa02 	vstr	s21, [r5, #-8]
 80285cc:	ed05 aa01 	vstr	s20, [r5, #-4]
 80285d0:	ed06 8a01 	vstr	s16, [r6, #-4]
 80285d4:	ed46 9a04 	vstr	s19, [r6, #-16]
 80285d8:	ed06 9a03 	vstr	s18, [r6, #-12]
 80285dc:	ed46 8a02 	vstr	s17, [r6, #-8]
 80285e0:	ee76 6a66 	vsub.f32	s13, s12, s13
 80285e4:	ee73 3ae2 	vsub.f32	s7, s7, s5
 80285e8:	ed12 6a03 	vldr	s12, [r2, #-12]
 80285ec:	ed52 2a04 	vldr	s5, [r2, #-16]
 80285f0:	ee33 3a61 	vsub.f32	s6, s6, s3
 80285f4:	ee34 4a42 	vsub.f32	s8, s8, s4
 80285f8:	ee26 8a86 	vmul.f32	s16, s13, s12
 80285fc:	ee24 2a06 	vmul.f32	s4, s8, s12
 8028600:	ee63 1a22 	vmul.f32	s3, s6, s5
 8028604:	ee24 4a22 	vmul.f32	s8, s8, s5
 8028608:	ee23 3a06 	vmul.f32	s6, s6, s12
 802860c:	ee66 6aa2 	vmul.f32	s13, s13, s5
 8028610:	ee23 6a86 	vmul.f32	s12, s7, s12
 8028614:	ee63 3aa2 	vmul.f32	s7, s7, s5
 8028618:	ee36 6a04 	vadd.f32	s12, s12, s8
 802861c:	ee76 6ac3 	vsub.f32	s13, s13, s6
 8028620:	ee72 3a63 	vsub.f32	s7, s4, s7
 8028624:	ee71 2a88 	vadd.f32	s5, s3, s16
 8028628:	ed44 6a03 	vstr	s13, [r4, #-12]
 802862c:	ed44 2a04 	vstr	s5, [r4, #-16]
 8028630:	ed43 3a04 	vstr	s7, [r3, #-16]
 8028634:	ed03 6a03 	vstr	s12, [r3, #-12]
 8028638:	ee77 7a67 	vsub.f32	s15, s14, s15
 802863c:	ee75 6ae0 	vsub.f32	s13, s11, s1
 8028640:	ed12 7a01 	vldr	s14, [r2, #-4]
 8028644:	ed52 5a02 	vldr	s11, [r2, #-8]
 8028648:	ee35 6a41 	vsub.f32	s12, s10, s2
 802864c:	ee74 4ac0 	vsub.f32	s9, s9, s0
 8028650:	ee67 3a87 	vmul.f32	s7, s15, s14
 8028654:	ee26 5a87 	vmul.f32	s10, s13, s14
 8028658:	ee24 4aa5 	vmul.f32	s8, s9, s11
 802865c:	ee67 7aa5 	vmul.f32	s15, s15, s11
 8028660:	ee64 4a87 	vmul.f32	s9, s9, s14
 8028664:	ee66 6aa5 	vmul.f32	s13, s13, s11
 8028668:	ee26 7a07 	vmul.f32	s14, s12, s14
 802866c:	ee26 6a25 	vmul.f32	s12, s12, s11
 8028670:	ee77 7ae4 	vsub.f32	s15, s15, s9
 8028674:	ee74 5a23 	vadd.f32	s11, s8, s7
 8028678:	ee35 6a46 	vsub.f32	s12, s10, s12
 802867c:	ee37 7a26 	vadd.f32	s14, s14, s13
 8028680:	f1be 0e01 	subs.w	lr, lr, #1
 8028684:	ed44 5a02 	vstr	s11, [r4, #-8]
 8028688:	f105 0510 	add.w	r5, r5, #16
 802868c:	ed44 7a01 	vstr	s15, [r4, #-4]
 8028690:	f106 0610 	add.w	r6, r6, #16
 8028694:	ed03 6a02 	vstr	s12, [r3, #-8]
 8028698:	ed03 7a01 	vstr	s14, [r3, #-4]
 802869c:	f102 0210 	add.w	r2, r2, #16
 80286a0:	f104 0410 	add.w	r4, r4, #16
 80286a4:	f103 0310 	add.w	r3, r3, #16
 80286a8:	f47f af5a 	bne.w	8028560 <arm_cfft_radix8by2_f32+0x34>
 80286ac:	687a      	ldr	r2, [r7, #4]
 80286ae:	fa1f f48c 	uxth.w	r4, ip
 80286b2:	4608      	mov	r0, r1
 80286b4:	2302      	movs	r3, #2
 80286b6:	4621      	mov	r1, r4
 80286b8:	f000 fbca 	bl	8028e50 <arm_radix8_butterfly_f32>
 80286bc:	ecbd 8b08 	vpop	{d8-d11}
 80286c0:	4640      	mov	r0, r8
 80286c2:	4621      	mov	r1, r4
 80286c4:	687a      	ldr	r2, [r7, #4]
 80286c6:	2302      	movs	r3, #2
 80286c8:	e8bd 41f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, lr}
 80286cc:	f000 bbc0 	b.w	8028e50 <arm_radix8_butterfly_f32>

080286d0 <arm_cfft_radix8by4_f32>:
 80286d0:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 80286d4:	ed2d 8b0a 	vpush	{d8-d12}
 80286d8:	8802      	ldrh	r2, [r0, #0]
 80286da:	ed91 6a00 	vldr	s12, [r1]
 80286de:	b08f      	sub	sp, #60	; 0x3c
 80286e0:	460f      	mov	r7, r1
 80286e2:	0852      	lsrs	r2, r2, #1
 80286e4:	0093      	lsls	r3, r2, #2
 80286e6:	900c      	str	r0, [sp, #48]	; 0x30
 80286e8:	9103      	str	r1, [sp, #12]
 80286ea:	6841      	ldr	r1, [r0, #4]
 80286ec:	ed97 7a01 	vldr	s14, [r7, #4]
 80286f0:	4638      	mov	r0, r7
 80286f2:	4418      	add	r0, r3
 80286f4:	4606      	mov	r6, r0
 80286f6:	9009      	str	r0, [sp, #36]	; 0x24
 80286f8:	4418      	add	r0, r3
 80286fa:	edd0 6a00 	vldr	s13, [r0]
 80286fe:	edd6 3a00 	vldr	s7, [r6]
 8028702:	edd6 2a01 	vldr	s5, [r6, #4]
 8028706:	edd0 7a01 	vldr	s15, [r0, #4]
 802870a:	900a      	str	r0, [sp, #40]	; 0x28
 802870c:	ee76 5a26 	vadd.f32	s11, s12, s13
 8028710:	4604      	mov	r4, r0
 8028712:	4625      	mov	r5, r4
 8028714:	441c      	add	r4, r3
 8028716:	ed94 4a00 	vldr	s8, [r4]
 802871a:	ed94 5a01 	vldr	s10, [r4, #4]
 802871e:	9401      	str	r4, [sp, #4]
 8028720:	ee75 4aa3 	vadd.f32	s9, s11, s7
 8028724:	4630      	mov	r0, r6
 8028726:	ee74 4a24 	vadd.f32	s9, s8, s9
 802872a:	463e      	mov	r6, r7
 802872c:	ee14 ea90 	vmov	lr, s9
 8028730:	ee76 6a66 	vsub.f32	s13, s12, s13
 8028734:	f846 eb08 	str.w	lr, [r6], #8
 8028738:	ee37 6a27 	vadd.f32	s12, s14, s15
 802873c:	edd0 4a01 	vldr	s9, [r0, #4]
 8028740:	9604      	str	r6, [sp, #16]
 8028742:	ee77 7a67 	vsub.f32	s15, s14, s15
 8028746:	9e01      	ldr	r6, [sp, #4]
 8028748:	ee32 3aa6 	vadd.f32	s6, s5, s13
 802874c:	ed96 2a01 	vldr	s4, [r6, #4]
 8028750:	ee36 7a24 	vadd.f32	s14, s12, s9
 8028754:	ee75 5ae3 	vsub.f32	s11, s11, s7
 8028758:	ee77 4ae3 	vsub.f32	s9, s15, s7
 802875c:	ee36 6a62 	vsub.f32	s12, s12, s5
 8028760:	ee77 7aa3 	vadd.f32	s15, s15, s7
 8028764:	ee76 6ae2 	vsub.f32	s13, s13, s5
 8028768:	ee73 3a45 	vsub.f32	s7, s6, s10
 802876c:	4604      	mov	r4, r0
 802876e:	ee36 6a45 	vsub.f32	s12, s12, s10
 8028772:	ee75 6a26 	vadd.f32	s13, s10, s13
 8028776:	46a3      	mov	fp, r4
 8028778:	ee37 7a02 	vadd.f32	s14, s14, s4
 802877c:	ee34 5a84 	vadd.f32	s10, s9, s8
 8028780:	ee13 8a90 	vmov	r8, s7
 8028784:	46a4      	mov	ip, r4
 8028786:	ee75 5ac4 	vsub.f32	s11, s11, s8
 802878a:	ed87 7a01 	vstr	s14, [r7, #4]
 802878e:	f84b 8b08 	str.w	r8, [fp], #8
 8028792:	f1ac 0704 	sub.w	r7, ip, #4
 8028796:	ed8c 5a01 	vstr	s10, [ip, #4]
 802879a:	f101 0c08 	add.w	ip, r1, #8
 802879e:	462c      	mov	r4, r5
 80287a0:	f8cd c014 	str.w	ip, [sp, #20]
 80287a4:	ee15 ca90 	vmov	ip, s11
 80287a8:	f844 cb08 	str.w	ip, [r4], #8
 80287ac:	9407      	str	r4, [sp, #28]
 80287ae:	f101 0410 	add.w	r4, r1, #16
 80287b2:	ed85 6a01 	vstr	s12, [r5, #4]
 80287b6:	0852      	lsrs	r2, r2, #1
 80287b8:	9402      	str	r4, [sp, #8]
 80287ba:	462c      	mov	r4, r5
 80287bc:	f101 0518 	add.w	r5, r1, #24
 80287c0:	920b      	str	r2, [sp, #44]	; 0x2c
 80287c2:	46b2      	mov	sl, r6
 80287c4:	9506      	str	r5, [sp, #24]
 80287c6:	ee77 7ac4 	vsub.f32	s15, s15, s8
 80287ca:	3a02      	subs	r2, #2
 80287cc:	ee16 5a90 	vmov	r5, s13
 80287d0:	46b6      	mov	lr, r6
 80287d2:	4630      	mov	r0, r6
 80287d4:	0852      	lsrs	r2, r2, #1
 80287d6:	f84a 5b08 	str.w	r5, [sl], #8
 80287da:	f1a0 0604 	sub.w	r6, r0, #4
 80287de:	edce 7a01 	vstr	s15, [lr, #4]
 80287e2:	9208      	str	r2, [sp, #32]
 80287e4:	f000 8130 	beq.w	8028a48 <arm_cfft_radix8by4_f32+0x378>
 80287e8:	4691      	mov	r9, r2
 80287ea:	9a03      	ldr	r2, [sp, #12]
 80287ec:	f8dd 8008 	ldr.w	r8, [sp, #8]
 80287f0:	f8cd a034 	str.w	sl, [sp, #52]	; 0x34
 80287f4:	3b08      	subs	r3, #8
 80287f6:	f102 0510 	add.w	r5, r2, #16
 80287fa:	f101 0c20 	add.w	ip, r1, #32
 80287fe:	f1a4 020c 	sub.w	r2, r4, #12
 8028802:	f101 0e30 	add.w	lr, r1, #48	; 0x30
 8028806:	4433      	add	r3, r6
 8028808:	3410      	adds	r4, #16
 802880a:	4650      	mov	r0, sl
 802880c:	4659      	mov	r1, fp
 802880e:	ed55 3a02 	vldr	s7, [r5, #-8]
 8028812:	ed14 5a02 	vldr	s10, [r4, #-8]
 8028816:	ed91 7a00 	vldr	s14, [r1]
 802881a:	edd0 7a00 	vldr	s15, [r0]
 802881e:	ed15 4a01 	vldr	s8, [r5, #-4]
 8028822:	ed54 5a01 	vldr	s11, [r4, #-4]
 8028826:	edd0 6a01 	vldr	s13, [r0, #4]
 802882a:	ed91 6a01 	vldr	s12, [r1, #4]
 802882e:	ee33 8a85 	vadd.f32	s16, s7, s10
 8028832:	ee34 0a25 	vadd.f32	s0, s8, s11
 8028836:	ee78 4a07 	vadd.f32	s9, s16, s14
 802883a:	ee74 5a65 	vsub.f32	s11, s8, s11
 802883e:	ee77 4aa4 	vadd.f32	s9, s15, s9
 8028842:	ee33 5ac5 	vsub.f32	s10, s7, s10
 8028846:	ed45 4a02 	vstr	s9, [r5, #-8]
 802884a:	edd1 4a01 	vldr	s9, [r1, #4]
 802884e:	ed90 4a01 	vldr	s8, [r0, #4]
 8028852:	ee70 4a24 	vadd.f32	s9, s0, s9
 8028856:	ee76 aa05 	vadd.f32	s21, s12, s10
 802885a:	ee74 4a84 	vadd.f32	s9, s9, s8
 802885e:	ee35 aac7 	vsub.f32	s20, s11, s14
 8028862:	ed45 4a01 	vstr	s9, [r5, #-4]
 8028866:	edd6 1a00 	vldr	s3, [r6]
 802886a:	edd7 0a00 	vldr	s1, [r7]
 802886e:	ed92 4a02 	vldr	s8, [r2, #8]
 8028872:	edd3 3a02 	vldr	s7, [r3, #8]
 8028876:	ed93 2a01 	vldr	s4, [r3, #4]
 802887a:	ed16 1a01 	vldr	s2, [r6, #-4]
 802887e:	edd2 2a01 	vldr	s5, [r2, #4]
 8028882:	ed57 9a01 	vldr	s19, [r7, #-4]
 8028886:	ee70 4aa1 	vadd.f32	s9, s1, s3
 802888a:	ee39 3a81 	vadd.f32	s6, s19, s2
 802888e:	ee74 8a84 	vadd.f32	s17, s9, s8
 8028892:	ee70 1ae1 	vsub.f32	s3, s1, s3
 8028896:	ee73 8aa8 	vadd.f32	s17, s7, s17
 802889a:	ee7a aae6 	vsub.f32	s21, s21, s13
 802889e:	ee18 aa90 	vmov	sl, s17
 80288a2:	f847 a908 	str.w	sl, [r7], #-8
 80288a6:	edd2 8a01 	vldr	s17, [r2, #4]
 80288aa:	ed93 9a01 	vldr	s18, [r3, #4]
 80288ae:	ee73 8a28 	vadd.f32	s17, s6, s17
 80288b2:	ee3a aa27 	vadd.f32	s20, s20, s15
 80288b6:	ee78 8a89 	vadd.f32	s17, s17, s18
 80288ba:	ee74 0a63 	vsub.f32	s1, s8, s7
 80288be:	edc7 8a01 	vstr	s17, [r7, #4]
 80288c2:	ed18 ba02 	vldr	s22, [r8, #-8]
 80288c6:	ed58 8a01 	vldr	s17, [r8, #-4]
 80288ca:	ee39 1ac1 	vsub.f32	s2, s19, s2
 80288ce:	ee6a ba28 	vmul.f32	s23, s20, s17
 80288d2:	ee2a ca8b 	vmul.f32	s24, s21, s22
 80288d6:	ee71 9ae2 	vsub.f32	s19, s3, s5
 80288da:	ee30 9a81 	vadd.f32	s18, s1, s2
 80288de:	ee79 9a82 	vadd.f32	s19, s19, s4
 80288e2:	ee3c ca2b 	vadd.f32	s24, s24, s23
 80288e6:	ee6a aaa8 	vmul.f32	s21, s21, s17
 80288ea:	ee69 baa8 	vmul.f32	s23, s19, s17
 80288ee:	ee2a aa0b 	vmul.f32	s20, s20, s22
 80288f2:	ee69 9a8b 	vmul.f32	s19, s19, s22
 80288f6:	ee69 8a28 	vmul.f32	s17, s18, s17
 80288fa:	ee29 ba0b 	vmul.f32	s22, s18, s22
 80288fe:	ee1c aa10 	vmov	sl, s24
 8028902:	ee78 8aa9 	vadd.f32	s17, s17, s19
 8028906:	f841 ab08 	str.w	sl, [r1], #8
 802890a:	ee3a aa6a 	vsub.f32	s20, s20, s21
 802890e:	ee3b bacb 	vsub.f32	s22, s23, s22
 8028912:	ee34 4ac4 	vsub.f32	s8, s9, s8
 8028916:	ee33 3a62 	vsub.f32	s6, s6, s5
 802891a:	ed01 aa01 	vstr	s20, [r1, #-4]
 802891e:	edc2 8a01 	vstr	s17, [r2, #4]
 8028922:	ed82 ba02 	vstr	s22, [r2, #8]
 8028926:	ed5c 4a04 	vldr	s9, [ip, #-16]
 802892a:	ee74 3a63 	vsub.f32	s7, s8, s7
 802892e:	ee38 8a47 	vsub.f32	s16, s16, s14
 8028932:	ed1c 4a03 	vldr	s8, [ip, #-12]
 8028936:	ee30 0a46 	vsub.f32	s0, s0, s12
 802893a:	ee33 3a42 	vsub.f32	s6, s6, s4
 802893e:	ee38 8a67 	vsub.f32	s16, s16, s15
 8028942:	ee30 0a66 	vsub.f32	s0, s0, s13
 8028946:	ee23 9ae4 	vnmul.f32	s18, s7, s9
 802894a:	ee63 8a04 	vmul.f32	s17, s6, s8
 802894e:	ee28 aa24 	vmul.f32	s20, s16, s9
 8028952:	ee60 9a04 	vmul.f32	s19, s0, s8
 8028956:	ee28 8a04 	vmul.f32	s16, s16, s8
 802895a:	ee20 0a24 	vmul.f32	s0, s0, s9
 802895e:	ee63 3a84 	vmul.f32	s7, s7, s8
 8028962:	ee39 4a68 	vsub.f32	s8, s18, s17
 8028966:	ee7a 9a29 	vadd.f32	s19, s20, s19
 802896a:	ee14 aa10 	vmov	sl, s8
 802896e:	ee30 0a48 	vsub.f32	s0, s0, s16
 8028972:	ee63 4a24 	vmul.f32	s9, s6, s9
 8028976:	ed44 9a02 	vstr	s19, [r4, #-8]
 802897a:	ee73 3ae4 	vsub.f32	s7, s7, s9
 802897e:	ed04 0a01 	vstr	s0, [r4, #-4]
 8028982:	f846 a908 	str.w	sl, [r6], #-8
 8028986:	ee35 6a46 	vsub.f32	s12, s10, s12
 802898a:	ee35 7a87 	vadd.f32	s14, s11, s14
 802898e:	edc6 3a01 	vstr	s7, [r6, #4]
 8028992:	ee76 6a86 	vadd.f32	s13, s13, s12
 8028996:	ee77 7a67 	vsub.f32	s15, s14, s15
 802899a:	ed1e 6a05 	vldr	s12, [lr, #-20]	; 0xffffffec
 802899e:	ed1e 7a06 	vldr	s14, [lr, #-24]	; 0xffffffe8
 80289a2:	ee67 5a86 	vmul.f32	s11, s15, s12
 80289a6:	ee26 5a87 	vmul.f32	s10, s13, s14
 80289aa:	ee72 2a62 	vsub.f32	s5, s4, s5
 80289ae:	ee30 1ac1 	vsub.f32	s2, s1, s2
 80289b2:	ee72 2ae1 	vsub.f32	s5, s5, s3
 80289b6:	ee75 5a25 	vadd.f32	s11, s10, s11
 80289ba:	ee62 0a86 	vmul.f32	s1, s5, s12
 80289be:	ee66 6a86 	vmul.f32	s13, s13, s12
 80289c2:	ee67 7a87 	vmul.f32	s15, s15, s14
 80289c6:	ee21 6a06 	vmul.f32	s12, s2, s12
 80289ca:	ee62 2a87 	vmul.f32	s5, s5, s14
 80289ce:	ee21 1a07 	vmul.f32	s2, s2, s14
 80289d2:	ee15 aa90 	vmov	sl, s11
 80289d6:	ee77 7ae6 	vsub.f32	s15, s15, s13
 80289da:	f840 ab08 	str.w	sl, [r0], #8
 80289de:	ee30 1ac1 	vsub.f32	s2, s1, s2
 80289e2:	ee76 2a22 	vadd.f32	s5, s12, s5
 80289e6:	f1b9 0901 	subs.w	r9, r9, #1
 80289ea:	ed40 7a01 	vstr	s15, [r0, #-4]
 80289ee:	f105 0508 	add.w	r5, r5, #8
 80289f2:	ed83 1a02 	vstr	s2, [r3, #8]
 80289f6:	edc3 2a01 	vstr	s5, [r3, #4]
 80289fa:	f108 0808 	add.w	r8, r8, #8
 80289fe:	f1a2 0208 	sub.w	r2, r2, #8
 8028a02:	f10c 0c10 	add.w	ip, ip, #16
 8028a06:	f104 0408 	add.w	r4, r4, #8
 8028a0a:	f10e 0e18 	add.w	lr, lr, #24
 8028a0e:	f1a3 0308 	sub.w	r3, r3, #8
 8028a12:	f47f aefc 	bne.w	802880e <arm_cfft_radix8by4_f32+0x13e>
 8028a16:	9908      	ldr	r1, [sp, #32]
 8028a18:	9802      	ldr	r0, [sp, #8]
 8028a1a:	f8dd a034 	ldr.w	sl, [sp, #52]	; 0x34
 8028a1e:	00cb      	lsls	r3, r1, #3
 8028a20:	eb01 0241 	add.w	r2, r1, r1, lsl #1
 8028a24:	eb00 1101 	add.w	r1, r0, r1, lsl #4
 8028a28:	9102      	str	r1, [sp, #8]
 8028a2a:	9904      	ldr	r1, [sp, #16]
 8028a2c:	4419      	add	r1, r3
 8028a2e:	9104      	str	r1, [sp, #16]
 8028a30:	9905      	ldr	r1, [sp, #20]
 8028a32:	4419      	add	r1, r3
 8028a34:	9105      	str	r1, [sp, #20]
 8028a36:	9907      	ldr	r1, [sp, #28]
 8028a38:	449b      	add	fp, r3
 8028a3a:	4419      	add	r1, r3
 8028a3c:	449a      	add	sl, r3
 8028a3e:	9b06      	ldr	r3, [sp, #24]
 8028a40:	9107      	str	r1, [sp, #28]
 8028a42:	eb03 03c2 	add.w	r3, r3, r2, lsl #3
 8028a46:	9306      	str	r3, [sp, #24]
 8028a48:	9a04      	ldr	r2, [sp, #16]
 8028a4a:	9807      	ldr	r0, [sp, #28]
 8028a4c:	edd2 3a00 	vldr	s7, [r2]
 8028a50:	ed90 4a00 	vldr	s8, [r0]
 8028a54:	eddb 7a00 	vldr	s15, [fp]
 8028a58:	ed9a 3a00 	vldr	s6, [sl]
 8028a5c:	edd2 4a01 	vldr	s9, [r2, #4]
 8028a60:	ed90 7a01 	vldr	s14, [r0, #4]
 8028a64:	ed9b 2a01 	vldr	s4, [fp, #4]
 8028a68:	edda 5a01 	vldr	s11, [sl, #4]
 8028a6c:	f8bd 402c 	ldrh.w	r4, [sp, #44]	; 0x2c
 8028a70:	9e0c      	ldr	r6, [sp, #48]	; 0x30
 8028a72:	ee73 6a84 	vadd.f32	s13, s7, s8
 8028a76:	ee34 6a87 	vadd.f32	s12, s9, s14
 8028a7a:	ee36 5aa7 	vadd.f32	s10, s13, s15
 8028a7e:	ee34 7ac7 	vsub.f32	s14, s9, s14
 8028a82:	ee33 5a05 	vadd.f32	s10, s6, s10
 8028a86:	ee33 4ac4 	vsub.f32	s8, s7, s8
 8028a8a:	ed82 5a00 	vstr	s10, [r2]
 8028a8e:	ed9b 5a01 	vldr	s10, [fp, #4]
 8028a92:	edda 4a01 	vldr	s9, [sl, #4]
 8028a96:	ee36 5a05 	vadd.f32	s10, s12, s10
 8028a9a:	ee72 3a04 	vadd.f32	s7, s4, s8
 8028a9e:	ee35 5a24 	vadd.f32	s10, s10, s9
 8028aa2:	ee77 4a67 	vsub.f32	s9, s14, s15
 8028aa6:	ed82 5a01 	vstr	s10, [r2, #4]
 8028aaa:	9a05      	ldr	r2, [sp, #20]
 8028aac:	ee34 5a83 	vadd.f32	s10, s9, s6
 8028ab0:	edd2 1a00 	vldr	s3, [r2]
 8028ab4:	edd2 2a01 	vldr	s5, [r2, #4]
 8028ab8:	9a02      	ldr	r2, [sp, #8]
 8028aba:	ee73 3ae5 	vsub.f32	s7, s7, s11
 8028abe:	ee36 6a42 	vsub.f32	s12, s12, s4
 8028ac2:	ee63 4aa1 	vmul.f32	s9, s7, s3
 8028ac6:	ee63 3aa2 	vmul.f32	s7, s7, s5
 8028aca:	ee65 2a22 	vmul.f32	s5, s10, s5
 8028ace:	ee25 5a21 	vmul.f32	s10, s10, s3
 8028ad2:	ee74 2aa2 	vadd.f32	s5, s9, s5
 8028ad6:	ee35 5a63 	vsub.f32	s10, s10, s7
 8028ada:	ee76 6ae7 	vsub.f32	s13, s13, s15
 8028ade:	edcb 2a00 	vstr	s5, [fp]
 8028ae2:	ed8b 5a01 	vstr	s10, [fp, #4]
 8028ae6:	edd2 3a01 	vldr	s7, [r2, #4]
 8028aea:	ed92 5a00 	vldr	s10, [r2]
 8028aee:	9a06      	ldr	r2, [sp, #24]
 8028af0:	ee76 6ac3 	vsub.f32	s13, s13, s6
 8028af4:	ee36 6a65 	vsub.f32	s12, s12, s11
 8028af8:	ee66 4a85 	vmul.f32	s9, s13, s10
 8028afc:	ee26 5a05 	vmul.f32	s10, s12, s10
 8028b00:	ee66 6aa3 	vmul.f32	s13, s13, s7
 8028b04:	ee26 6a23 	vmul.f32	s12, s12, s7
 8028b08:	ee75 6a66 	vsub.f32	s13, s10, s13
 8028b0c:	ee34 6a86 	vadd.f32	s12, s9, s12
 8028b10:	ee34 4a42 	vsub.f32	s8, s8, s4
 8028b14:	ee37 7a27 	vadd.f32	s14, s14, s15
 8028b18:	edc0 6a01 	vstr	s13, [r0, #4]
 8028b1c:	ed80 6a00 	vstr	s12, [r0]
 8028b20:	ed92 6a01 	vldr	s12, [r2, #4]
 8028b24:	9803      	ldr	r0, [sp, #12]
 8028b26:	ee77 7a43 	vsub.f32	s15, s14, s6
 8028b2a:	ee75 5a84 	vadd.f32	s11, s11, s8
 8028b2e:	ed92 7a00 	vldr	s14, [r2]
 8028b32:	ee65 6a87 	vmul.f32	s13, s11, s14
 8028b36:	ee27 7a87 	vmul.f32	s14, s15, s14
 8028b3a:	ee65 5a86 	vmul.f32	s11, s11, s12
 8028b3e:	ee67 7a86 	vmul.f32	s15, s15, s12
 8028b42:	ee77 5a65 	vsub.f32	s11, s14, s11
 8028b46:	ee76 7aa7 	vadd.f32	s15, s13, s15
 8028b4a:	edca 5a01 	vstr	s11, [sl, #4]
 8028b4e:	edca 7a00 	vstr	s15, [sl]
 8028b52:	6872      	ldr	r2, [r6, #4]
 8028b54:	4621      	mov	r1, r4
 8028b56:	2304      	movs	r3, #4
 8028b58:	f000 f97a 	bl	8028e50 <arm_radix8_butterfly_f32>
 8028b5c:	9809      	ldr	r0, [sp, #36]	; 0x24
 8028b5e:	6872      	ldr	r2, [r6, #4]
 8028b60:	4621      	mov	r1, r4
 8028b62:	2304      	movs	r3, #4
 8028b64:	f000 f974 	bl	8028e50 <arm_radix8_butterfly_f32>
 8028b68:	980a      	ldr	r0, [sp, #40]	; 0x28
 8028b6a:	6872      	ldr	r2, [r6, #4]
 8028b6c:	4621      	mov	r1, r4
 8028b6e:	2304      	movs	r3, #4
 8028b70:	f000 f96e 	bl	8028e50 <arm_radix8_butterfly_f32>
 8028b74:	9801      	ldr	r0, [sp, #4]
 8028b76:	6872      	ldr	r2, [r6, #4]
 8028b78:	4621      	mov	r1, r4
 8028b7a:	2304      	movs	r3, #4
 8028b7c:	b00f      	add	sp, #60	; 0x3c
 8028b7e:	ecbd 8b0a 	vpop	{d8-d12}
 8028b82:	e8bd 4ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 8028b86:	f000 b963 	b.w	8028e50 <arm_radix8_butterfly_f32>
 8028b8a:	bf00      	nop

08028b8c <arm_cfft_f32>:
 8028b8c:	e92d 41f0 	stmdb	sp!, {r4, r5, r6, r7, r8, lr}
 8028b90:	2a01      	cmp	r2, #1
 8028b92:	4606      	mov	r6, r0
 8028b94:	4617      	mov	r7, r2
 8028b96:	460c      	mov	r4, r1
 8028b98:	4698      	mov	r8, r3
 8028b9a:	8805      	ldrh	r5, [r0, #0]
 8028b9c:	d054      	beq.n	8028c48 <arm_cfft_f32+0xbc>
 8028b9e:	f5b5 7f80 	cmp.w	r5, #256	; 0x100
 8028ba2:	d04c      	beq.n	8028c3e <arm_cfft_f32+0xb2>
 8028ba4:	d916      	bls.n	8028bd4 <arm_cfft_f32+0x48>
 8028ba6:	f5b5 6f80 	cmp.w	r5, #1024	; 0x400
 8028baa:	d01a      	beq.n	8028be2 <arm_cfft_f32+0x56>
 8028bac:	d95c      	bls.n	8028c68 <arm_cfft_f32+0xdc>
 8028bae:	f5b5 6f00 	cmp.w	r5, #2048	; 0x800
 8028bb2:	d044      	beq.n	8028c3e <arm_cfft_f32+0xb2>
 8028bb4:	f5b5 5f80 	cmp.w	r5, #4096	; 0x1000
 8028bb8:	d105      	bne.n	8028bc6 <arm_cfft_f32+0x3a>
 8028bba:	4620      	mov	r0, r4
 8028bbc:	4629      	mov	r1, r5
 8028bbe:	6872      	ldr	r2, [r6, #4]
 8028bc0:	2301      	movs	r3, #1
 8028bc2:	f000 f945 	bl	8028e50 <arm_radix8_butterfly_f32>
 8028bc6:	f1b8 0f00 	cmp.w	r8, #0
 8028bca:	d111      	bne.n	8028bf0 <arm_cfft_f32+0x64>
 8028bcc:	2f01      	cmp	r7, #1
 8028bce:	d016      	beq.n	8028bfe <arm_cfft_f32+0x72>
 8028bd0:	e8bd 81f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, pc}
 8028bd4:	2d20      	cmp	r5, #32
 8028bd6:	d032      	beq.n	8028c3e <arm_cfft_f32+0xb2>
 8028bd8:	d94a      	bls.n	8028c70 <arm_cfft_f32+0xe4>
 8028bda:	2d40      	cmp	r5, #64	; 0x40
 8028bdc:	d0ed      	beq.n	8028bba <arm_cfft_f32+0x2e>
 8028bde:	2d80      	cmp	r5, #128	; 0x80
 8028be0:	d1f1      	bne.n	8028bc6 <arm_cfft_f32+0x3a>
 8028be2:	4630      	mov	r0, r6
 8028be4:	4621      	mov	r1, r4
 8028be6:	f7ff fca1 	bl	802852c <arm_cfft_radix8by2_f32>
 8028bea:	f1b8 0f00 	cmp.w	r8, #0
 8028bee:	d0ed      	beq.n	8028bcc <arm_cfft_f32+0x40>
 8028bf0:	4620      	mov	r0, r4
 8028bf2:	89b1      	ldrh	r1, [r6, #12]
 8028bf4:	68b2      	ldr	r2, [r6, #8]
 8028bf6:	f7d7 fafb 	bl	80001f0 <arm_bitreversal_32>
 8028bfa:	2f01      	cmp	r7, #1
 8028bfc:	d1e8      	bne.n	8028bd0 <arm_cfft_f32+0x44>
 8028bfe:	ee07 5a90 	vmov	s15, r5
 8028c02:	eef8 6a67 	vcvt.f32.u32	s13, s15
 8028c06:	eef7 7a00 	vmov.f32	s15, #112	; 0x3f800000  1.0
 8028c0a:	eec7 6aa6 	vdiv.f32	s13, s15, s13
 8028c0e:	2d00      	cmp	r5, #0
 8028c10:	d0de      	beq.n	8028bd0 <arm_cfft_f32+0x44>
 8028c12:	f104 0108 	add.w	r1, r4, #8
 8028c16:	2300      	movs	r3, #0
 8028c18:	3301      	adds	r3, #1
 8028c1a:	429d      	cmp	r5, r3
 8028c1c:	f101 0108 	add.w	r1, r1, #8
 8028c20:	ed11 7a04 	vldr	s14, [r1, #-16]
 8028c24:	ed51 7a03 	vldr	s15, [r1, #-12]
 8028c28:	ee27 7a26 	vmul.f32	s14, s14, s13
 8028c2c:	ee67 7ae6 	vnmul.f32	s15, s15, s13
 8028c30:	ed01 7a04 	vstr	s14, [r1, #-16]
 8028c34:	ed41 7a03 	vstr	s15, [r1, #-12]
 8028c38:	d1ee      	bne.n	8028c18 <arm_cfft_f32+0x8c>
 8028c3a:	e8bd 81f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, pc}
 8028c3e:	4630      	mov	r0, r6
 8028c40:	4621      	mov	r1, r4
 8028c42:	f7ff fd45 	bl	80286d0 <arm_cfft_radix8by4_f32>
 8028c46:	e7be      	b.n	8028bc6 <arm_cfft_f32+0x3a>
 8028c48:	b1ad      	cbz	r5, 8028c76 <arm_cfft_f32+0xea>
 8028c4a:	f101 030c 	add.w	r3, r1, #12
 8028c4e:	2200      	movs	r2, #0
 8028c50:	ed53 7a02 	vldr	s15, [r3, #-8]
 8028c54:	3201      	adds	r2, #1
 8028c56:	eef1 7a67 	vneg.f32	s15, s15
 8028c5a:	4295      	cmp	r5, r2
 8028c5c:	ed43 7a02 	vstr	s15, [r3, #-8]
 8028c60:	f103 0308 	add.w	r3, r3, #8
 8028c64:	d1f4      	bne.n	8028c50 <arm_cfft_f32+0xc4>
 8028c66:	e79a      	b.n	8028b9e <arm_cfft_f32+0x12>
 8028c68:	f5b5 7f00 	cmp.w	r5, #512	; 0x200
 8028c6c:	d0a5      	beq.n	8028bba <arm_cfft_f32+0x2e>
 8028c6e:	e7aa      	b.n	8028bc6 <arm_cfft_f32+0x3a>
 8028c70:	2d10      	cmp	r5, #16
 8028c72:	d0b6      	beq.n	8028be2 <arm_cfft_f32+0x56>
 8028c74:	e7a7      	b.n	8028bc6 <arm_cfft_f32+0x3a>
 8028c76:	f5b5 7f80 	cmp.w	r5, #256	; 0x100
 8028c7a:	d894      	bhi.n	8028ba6 <arm_cfft_f32+0x1a>
 8028c7c:	e7aa      	b.n	8028bd4 <arm_cfft_f32+0x48>
 8028c7e:	bf00      	nop

08028c80 <arm_cmplx_mag_f32>:
 8028c80:	e92d 41f0 	stmdb	sp!, {r4, r5, r6, r7, r8, lr}
 8028c84:	ea5f 0892 	movs.w	r8, r2, lsr #2
 8028c88:	b084      	sub	sp, #16
 8028c8a:	d07f      	beq.n	8028d8c <arm_cmplx_mag_f32+0x10c>
 8028c8c:	2700      	movs	r7, #0
 8028c8e:	f100 0420 	add.w	r4, r0, #32
 8028c92:	f101 0510 	add.w	r5, r1, #16
 8028c96:	4646      	mov	r6, r8
 8028c98:	e05a      	b.n	8028d50 <arm_cmplx_mag_f32+0xd0>
 8028c9a:	eeb1 0ae7 	vsqrt.f32	s0, s15
 8028c9e:	eeb4 0a40 	vcmp.f32	s0, s0
 8028ca2:	eef1 fa10 	vmrs	APSR_nzcv, fpscr
 8028ca6:	f040 80a4 	bne.w	8028df2 <arm_cmplx_mag_f32+0x172>
 8028caa:	ed05 0a04 	vstr	s0, [r5, #-16]
 8028cae:	ed54 7a06 	vldr	s15, [r4, #-24]	; 0xffffffe8
 8028cb2:	ed14 0a05 	vldr	s0, [r4, #-20]	; 0xffffffec
 8028cb6:	ee67 7aa7 	vmul.f32	s15, s15, s15
 8028cba:	ee20 0a00 	vmul.f32	s0, s0, s0
 8028cbe:	ee77 7a80 	vadd.f32	s15, s15, s0
 8028cc2:	eef5 7ac0 	vcmpe.f32	s15, #0.0
 8028cc6:	eef1 fa10 	vmrs	APSR_nzcv, fpscr
 8028cca:	f2c0 808f 	blt.w	8028dec <arm_cmplx_mag_f32+0x16c>
 8028cce:	eeb1 0ae7 	vsqrt.f32	s0, s15
 8028cd2:	eeb4 0a40 	vcmp.f32	s0, s0
 8028cd6:	eef1 fa10 	vmrs	APSR_nzcv, fpscr
 8028cda:	f040 80af 	bne.w	8028e3c <arm_cmplx_mag_f32+0x1bc>
 8028cde:	ed05 0a03 	vstr	s0, [r5, #-12]
 8028ce2:	ed54 7a04 	vldr	s15, [r4, #-16]
 8028ce6:	ed14 0a03 	vldr	s0, [r4, #-12]
 8028cea:	ee67 7aa7 	vmul.f32	s15, s15, s15
 8028cee:	ee20 0a00 	vmul.f32	s0, s0, s0
 8028cf2:	ee77 7a80 	vadd.f32	s15, s15, s0
 8028cf6:	eef5 7ac0 	vcmpe.f32	s15, #0.0
 8028cfa:	eef1 fa10 	vmrs	APSR_nzcv, fpscr
 8028cfe:	db72      	blt.n	8028de6 <arm_cmplx_mag_f32+0x166>
 8028d00:	eeb1 0ae7 	vsqrt.f32	s0, s15
 8028d04:	eeb4 0a40 	vcmp.f32	s0, s0
 8028d08:	eef1 fa10 	vmrs	APSR_nzcv, fpscr
 8028d0c:	f040 808c 	bne.w	8028e28 <arm_cmplx_mag_f32+0x1a8>
 8028d10:	ed05 0a02 	vstr	s0, [r5, #-8]
 8028d14:	ed54 7a02 	vldr	s15, [r4, #-8]
 8028d18:	ed14 0a01 	vldr	s0, [r4, #-4]
 8028d1c:	ee67 7aa7 	vmul.f32	s15, s15, s15
 8028d20:	ee20 0a00 	vmul.f32	s0, s0, s0
 8028d24:	ee77 7a80 	vadd.f32	s15, s15, s0
 8028d28:	eef5 7ac0 	vcmpe.f32	s15, #0.0
 8028d2c:	eef1 fa10 	vmrs	APSR_nzcv, fpscr
 8028d30:	db20      	blt.n	8028d74 <arm_cmplx_mag_f32+0xf4>
 8028d32:	eeb1 0ae7 	vsqrt.f32	s0, s15
 8028d36:	eeb4 0a40 	vcmp.f32	s0, s0
 8028d3a:	eef1 fa10 	vmrs	APSR_nzcv, fpscr
 8028d3e:	d169      	bne.n	8028e14 <arm_cmplx_mag_f32+0x194>
 8028d40:	3e01      	subs	r6, #1
 8028d42:	ed05 0a01 	vstr	s0, [r5, #-4]
 8028d46:	f104 0420 	add.w	r4, r4, #32
 8028d4a:	f105 0510 	add.w	r5, r5, #16
 8028d4e:	d019      	beq.n	8028d84 <arm_cmplx_mag_f32+0x104>
 8028d50:	ed54 7a08 	vldr	s15, [r4, #-32]	; 0xffffffe0
 8028d54:	ed14 0a07 	vldr	s0, [r4, #-28]	; 0xffffffe4
 8028d58:	ee67 7aa7 	vmul.f32	s15, s15, s15
 8028d5c:	ee20 0a00 	vmul.f32	s0, s0, s0
 8028d60:	ee77 7a80 	vadd.f32	s15, s15, s0
 8028d64:	eef5 7ac0 	vcmpe.f32	s15, #0.0
 8028d68:	eef1 fa10 	vmrs	APSR_nzcv, fpscr
 8028d6c:	da95      	bge.n	8028c9a <arm_cmplx_mag_f32+0x1a>
 8028d6e:	f845 7c10 	str.w	r7, [r5, #-16]
 8028d72:	e79c      	b.n	8028cae <arm_cmplx_mag_f32+0x2e>
 8028d74:	3e01      	subs	r6, #1
 8028d76:	f845 7c04 	str.w	r7, [r5, #-4]
 8028d7a:	f104 0420 	add.w	r4, r4, #32
 8028d7e:	f105 0510 	add.w	r5, r5, #16
 8028d82:	d1e5      	bne.n	8028d50 <arm_cmplx_mag_f32+0xd0>
 8028d84:	eb00 1048 	add.w	r0, r0, r8, lsl #5
 8028d88:	eb01 1108 	add.w	r1, r1, r8, lsl #4
 8028d8c:	f012 0503 	ands.w	r5, r2, #3
 8028d90:	d026      	beq.n	8028de0 <arm_cmplx_mag_f32+0x160>
 8028d92:	2600      	movs	r6, #0
 8028d94:	f100 0408 	add.w	r4, r0, #8
 8028d98:	e00c      	b.n	8028db4 <arm_cmplx_mag_f32+0x134>
 8028d9a:	eeb1 0ae7 	vsqrt.f32	s0, s15
 8028d9e:	eeb4 0a40 	vcmp.f32	s0, s0
 8028da2:	eef1 fa10 	vmrs	APSR_nzcv, fpscr
 8028da6:	d12e      	bne.n	8028e06 <arm_cmplx_mag_f32+0x186>
 8028da8:	3d01      	subs	r5, #1
 8028daa:	ed01 0a01 	vstr	s0, [r1, #-4]
 8028dae:	f104 0408 	add.w	r4, r4, #8
 8028db2:	d015      	beq.n	8028de0 <arm_cmplx_mag_f32+0x160>
 8028db4:	ed54 7a02 	vldr	s15, [r4, #-8]
 8028db8:	ed14 0a01 	vldr	s0, [r4, #-4]
 8028dbc:	ee67 7aa7 	vmul.f32	s15, s15, s15
 8028dc0:	ee20 0a00 	vmul.f32	s0, s0, s0
 8028dc4:	3104      	adds	r1, #4
 8028dc6:	ee77 7a80 	vadd.f32	s15, s15, s0
 8028dca:	eef5 7ac0 	vcmpe.f32	s15, #0.0
 8028dce:	eef1 fa10 	vmrs	APSR_nzcv, fpscr
 8028dd2:	dae2      	bge.n	8028d9a <arm_cmplx_mag_f32+0x11a>
 8028dd4:	3d01      	subs	r5, #1
 8028dd6:	f841 6c04 	str.w	r6, [r1, #-4]
 8028dda:	f104 0408 	add.w	r4, r4, #8
 8028dde:	d1e9      	bne.n	8028db4 <arm_cmplx_mag_f32+0x134>
 8028de0:	b004      	add	sp, #16
 8028de2:	e8bd 81f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, pc}
 8028de6:	f845 7c08 	str.w	r7, [r5, #-8]
 8028dea:	e793      	b.n	8028d14 <arm_cmplx_mag_f32+0x94>
 8028dec:	f845 7c0c 	str.w	r7, [r5, #-12]
 8028df0:	e777      	b.n	8028ce2 <arm_cmplx_mag_f32+0x62>
 8028df2:	eeb0 0a67 	vmov.f32	s0, s15
 8028df6:	9203      	str	r2, [sp, #12]
 8028df8:	9102      	str	r1, [sp, #8]
 8028dfa:	9001      	str	r0, [sp, #4]
 8028dfc:	f000 fb38 	bl	8029470 <sqrtf>
 8028e00:	a801      	add	r0, sp, #4
 8028e02:	c807      	ldmia	r0, {r0, r1, r2}
 8028e04:	e751      	b.n	8028caa <arm_cmplx_mag_f32+0x2a>
 8028e06:	eeb0 0a67 	vmov.f32	s0, s15
 8028e0a:	9101      	str	r1, [sp, #4]
 8028e0c:	f000 fb30 	bl	8029470 <sqrtf>
 8028e10:	9901      	ldr	r1, [sp, #4]
 8028e12:	e7c9      	b.n	8028da8 <arm_cmplx_mag_f32+0x128>
 8028e14:	eeb0 0a67 	vmov.f32	s0, s15
 8028e18:	9203      	str	r2, [sp, #12]
 8028e1a:	9102      	str	r1, [sp, #8]
 8028e1c:	9001      	str	r0, [sp, #4]
 8028e1e:	f000 fb27 	bl	8029470 <sqrtf>
 8028e22:	a801      	add	r0, sp, #4
 8028e24:	c807      	ldmia	r0, {r0, r1, r2}
 8028e26:	e78b      	b.n	8028d40 <arm_cmplx_mag_f32+0xc0>
 8028e28:	eeb0 0a67 	vmov.f32	s0, s15
 8028e2c:	9203      	str	r2, [sp, #12]
 8028e2e:	9102      	str	r1, [sp, #8]
 8028e30:	9001      	str	r0, [sp, #4]
 8028e32:	f000 fb1d 	bl	8029470 <sqrtf>
 8028e36:	a801      	add	r0, sp, #4
 8028e38:	c807      	ldmia	r0, {r0, r1, r2}
 8028e3a:	e769      	b.n	8028d10 <arm_cmplx_mag_f32+0x90>
 8028e3c:	eeb0 0a67 	vmov.f32	s0, s15
 8028e40:	9203      	str	r2, [sp, #12]
 8028e42:	9102      	str	r1, [sp, #8]
 8028e44:	9001      	str	r0, [sp, #4]
 8028e46:	f000 fb13 	bl	8029470 <sqrtf>
 8028e4a:	a801      	add	r0, sp, #4
 8028e4c:	c807      	ldmia	r0, {r0, r1, r2}
 8028e4e:	e746      	b.n	8028cde <arm_cmplx_mag_f32+0x5e>

08028e50 <arm_radix8_butterfly_f32>:
 8028e50:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 8028e54:	ed2d 8b10 	vpush	{d8-d15}
 8028e58:	b09d      	sub	sp, #116	; 0x74
 8028e5a:	461c      	mov	r4, r3
 8028e5c:	ed9f bac8 	vldr	s22, [pc, #800]	; 8029180 <arm_radix8_butterfly_f32+0x330>
 8028e60:	921a      	str	r2, [sp, #104]	; 0x68
 8028e62:	1d03      	adds	r3, r0, #4
 8028e64:	4682      	mov	sl, r0
 8028e66:	4689      	mov	r9, r1
 8028e68:	468b      	mov	fp, r1
 8028e6a:	931b      	str	r3, [sp, #108]	; 0x6c
 8028e6c:	9400      	str	r4, [sp, #0]
 8028e6e:	469e      	mov	lr, r3
 8028e70:	ea4f 03db 	mov.w	r3, fp, lsr #3
 8028e74:	005a      	lsls	r2, r3, #1
 8028e76:	18d6      	adds	r6, r2, r3
 8028e78:	18f5      	adds	r5, r6, r3
 8028e7a:	9203      	str	r2, [sp, #12]
 8028e7c:	195a      	adds	r2, r3, r5
 8028e7e:	18d0      	adds	r0, r2, r3
 8028e80:	00df      	lsls	r7, r3, #3
 8028e82:	1819      	adds	r1, r3, r0
 8028e84:	463c      	mov	r4, r7
 8028e86:	9701      	str	r7, [sp, #4]
 8028e88:	4457      	add	r7, sl
 8028e8a:	930c      	str	r3, [sp, #48]	; 0x30
 8028e8c:	eb0a 02c2 	add.w	r2, sl, r2, lsl #3
 8028e90:	011b      	lsls	r3, r3, #4
 8028e92:	eb0a 01c1 	add.w	r1, sl, r1, lsl #3
 8028e96:	eb07 0c04 	add.w	ip, r7, r4
 8028e9a:	9c00      	ldr	r4, [sp, #0]
 8028e9c:	9302      	str	r3, [sp, #8]
 8028e9e:	eb0a 06c6 	add.w	r6, sl, r6, lsl #3
 8028ea2:	eb0a 05c5 	add.w	r5, sl, r5, lsl #3
 8028ea6:	3204      	adds	r2, #4
 8028ea8:	3104      	adds	r1, #4
 8028eaa:	eb0a 00c0 	add.w	r0, sl, r0, lsl #3
 8028eae:	ea4f 03cb 	mov.w	r3, fp, lsl #3
 8028eb2:	f04f 0800 	mov.w	r8, #0
 8028eb6:	eddc 7a00 	vldr	s15, [ip]
 8028eba:	edd7 6a00 	vldr	s13, [r7]
 8028ebe:	edd6 3a00 	vldr	s7, [r6]
 8028ec2:	ed5e aa01 	vldr	s21, [lr, #-4]
 8028ec6:	edd5 4a00 	vldr	s9, [r5]
 8028eca:	ed90 2a00 	vldr	s4, [r0]
 8028ece:	ed12 7a01 	vldr	s14, [r2, #-4]
 8028ed2:	ed51 0a01 	vldr	s1, [r1, #-4]
 8028ed6:	ee77 8a82 	vadd.f32	s17, s15, s4
 8028eda:	ee33 4aa0 	vadd.f32	s8, s7, s1
 8028ede:	ee76 1a87 	vadd.f32	s3, s13, s14
 8028ee2:	ee3a 3aa4 	vadd.f32	s6, s21, s9
 8028ee6:	ee31 6a84 	vadd.f32	s12, s3, s8
 8028eea:	ee33 5a28 	vadd.f32	s10, s6, s17
 8028eee:	ee36 7ac7 	vsub.f32	s14, s13, s14
 8028ef2:	ee75 6a06 	vadd.f32	s13, s10, s12
 8028ef6:	ee35 5a46 	vsub.f32	s10, s10, s12
 8028efa:	ed4e 6a01 	vstr	s13, [lr, #-4]
 8028efe:	ed85 5a00 	vstr	s10, [r5]
 8028f02:	ed96 1a01 	vldr	s2, [r6, #4]
 8028f06:	edd7 5a01 	vldr	s11, [r7, #4]
 8028f0a:	ed92 aa00 	vldr	s20, [r2]
 8028f0e:	ed91 6a00 	vldr	s12, [r1]
 8028f12:	ed9e 9a00 	vldr	s18, [lr]
 8028f16:	ed95 5a01 	vldr	s10, [r5, #4]
 8028f1a:	eddc 6a01 	vldr	s13, [ip, #4]
 8028f1e:	edd0 9a01 	vldr	s19, [r0, #4]
 8028f22:	ee73 0ae0 	vsub.f32	s1, s7, s1
 8028f26:	ee71 2a46 	vsub.f32	s5, s2, s12
 8028f2a:	ee75 3aca 	vsub.f32	s7, s11, s20
 8028f2e:	ee37 0a60 	vsub.f32	s0, s14, s1
 8028f32:	ee33 8aa2 	vadd.f32	s16, s7, s5
 8028f36:	ee37 7a20 	vadd.f32	s14, s14, s1
 8028f3a:	ee73 2ae2 	vsub.f32	s5, s7, s5
 8028f3e:	ee37 2ac2 	vsub.f32	s4, s15, s4
 8028f42:	ee79 3a05 	vadd.f32	s7, s18, s10
 8028f46:	ee60 0a0b 	vmul.f32	s1, s0, s22
 8028f4a:	ee39 5a45 	vsub.f32	s10, s18, s10
 8028f4e:	ee7a 4ae4 	vsub.f32	s9, s21, s9
 8028f52:	ee36 9aa9 	vadd.f32	s18, s13, s19
 8028f56:	ee75 5a8a 	vadd.f32	s11, s11, s20
 8028f5a:	ee31 6a06 	vadd.f32	s12, s2, s12
 8028f5e:	ee76 6ae9 	vsub.f32	s13, s13, s19
 8028f62:	ee28 8a0b 	vmul.f32	s16, s16, s22
 8028f66:	ee62 2a8b 	vmul.f32	s5, s5, s22
 8028f6a:	ee67 7a0b 	vmul.f32	s15, s14, s22
 8028f6e:	ee33 3a68 	vsub.f32	s6, s6, s17
 8028f72:	ee36 0a88 	vadd.f32	s0, s13, s16
 8028f76:	ee75 8a86 	vadd.f32	s17, s11, s12
 8028f7a:	ee36 7ac8 	vsub.f32	s14, s13, s16
 8028f7e:	ee71 1ac4 	vsub.f32	s3, s3, s8
 8028f82:	ee75 6a62 	vsub.f32	s13, s10, s5
 8028f86:	ee33 4ac9 	vsub.f32	s8, s7, s18
 8028f8a:	ee35 6ac6 	vsub.f32	s12, s11, s12
 8028f8e:	ee33 1a89 	vadd.f32	s2, s7, s18
 8028f92:	ee74 5ae0 	vsub.f32	s11, s9, s1
 8028f96:	ee74 3aa0 	vadd.f32	s7, s9, s1
 8028f9a:	ee75 4a22 	vadd.f32	s9, s10, s5
 8028f9e:	ee32 5a27 	vadd.f32	s10, s4, s15
 8028fa2:	ee72 7a67 	vsub.f32	s15, s4, s15
 8028fa6:	ee33 8a06 	vadd.f32	s16, s6, s12
 8028faa:	ee75 2a87 	vadd.f32	s5, s11, s14
 8028fae:	ee31 9a28 	vadd.f32	s18, s2, s17
 8028fb2:	ee33 6a46 	vsub.f32	s12, s6, s12
 8028fb6:	ee74 0a61 	vsub.f32	s1, s8, s3
 8028fba:	ee33 2a80 	vadd.f32	s4, s7, s0
 8028fbe:	ee35 7ac7 	vsub.f32	s14, s11, s14
 8028fc2:	ee34 3ac5 	vsub.f32	s6, s9, s10
 8028fc6:	ee76 5ae7 	vsub.f32	s11, s13, s15
 8028fca:	ee31 1a68 	vsub.f32	s2, s2, s17
 8028fce:	ee34 4a21 	vadd.f32	s8, s8, s3
 8028fd2:	ee73 3ac0 	vsub.f32	s7, s7, s0
 8028fd6:	ee74 4a85 	vadd.f32	s9, s9, s10
 8028fda:	ee76 6aa7 	vadd.f32	s13, s13, s15
 8028fde:	44d8      	add	r8, fp
 8028fe0:	45c1      	cmp	r9, r8
 8028fe2:	ed8e 9a00 	vstr	s18, [lr]
 8028fe6:	ed85 1a01 	vstr	s2, [r5, #4]
 8028fea:	449e      	add	lr, r3
 8028fec:	ed8c 8a00 	vstr	s16, [ip]
 8028ff0:	441d      	add	r5, r3
 8028ff2:	ed80 6a00 	vstr	s12, [r0]
 8028ff6:	edcc 0a01 	vstr	s1, [ip, #4]
 8028ffa:	ed80 4a01 	vstr	s8, [r0, #4]
 8028ffe:	449c      	add	ip, r3
 8029000:	ed87 2a00 	vstr	s4, [r7]
 8029004:	4418      	add	r0, r3
 8029006:	ed41 3a01 	vstr	s7, [r1, #-4]
 802900a:	ed42 2a01 	vstr	s5, [r2, #-4]
 802900e:	ed86 7a00 	vstr	s14, [r6]
 8029012:	ed87 3a01 	vstr	s6, [r7, #4]
 8029016:	edc1 4a00 	vstr	s9, [r1]
 802901a:	441f      	add	r7, r3
 802901c:	edc2 5a00 	vstr	s11, [r2]
 8029020:	4419      	add	r1, r3
 8029022:	edc6 6a01 	vstr	s13, [r6, #4]
 8029026:	441a      	add	r2, r3
 8029028:	441e      	add	r6, r3
 802902a:	f63f af44 	bhi.w	8028eb6 <arm_radix8_butterfly_f32+0x66>
 802902e:	990c      	ldr	r1, [sp, #48]	; 0x30
 8029030:	2907      	cmp	r1, #7
 8029032:	4620      	mov	r0, r4
 8029034:	f240 81e9 	bls.w	802940a <arm_radix8_butterfly_f32+0x5ba>
 8029038:	eb04 0744 	add.w	r7, r4, r4, lsl #1
 802903c:	193e      	adds	r6, r7, r4
 802903e:	1935      	adds	r5, r6, r4
 8029040:	9c03      	ldr	r4, [sp, #12]
 8029042:	9000      	str	r0, [sp, #0]
 8029044:	4622      	mov	r2, r4
 8029046:	3201      	adds	r2, #1
 8029048:	eb02 0281 	add.w	r2, r2, r1, lsl #2
 802904c:	9900      	ldr	r1, [sp, #0]
 802904e:	1828      	adds	r0, r5, r0
 8029050:	eb00 0e01 	add.w	lr, r0, r1
 8029054:	990c      	ldr	r1, [sp, #48]	; 0x30
 8029056:	440a      	add	r2, r1
 8029058:	eb04 0c01 	add.w	ip, r4, r1
 802905c:	ea4f 04ce 	mov.w	r4, lr, lsl #3
 8029060:	eb0a 0ec2 	add.w	lr, sl, r2, lsl #3
 8029064:	9a00      	ldr	r2, [sp, #0]
 8029066:	940f      	str	r4, [sp, #60]	; 0x3c
 8029068:	00ed      	lsls	r5, r5, #3
 802906a:	9511      	str	r5, [sp, #68]	; 0x44
 802906c:	00d5      	lsls	r5, r2, #3
 802906e:	950d      	str	r5, [sp, #52]	; 0x34
 8029070:	9d01      	ldr	r5, [sp, #4]
 8029072:	3508      	adds	r5, #8
 8029074:	9516      	str	r5, [sp, #88]	; 0x58
 8029076:	9d02      	ldr	r5, [sp, #8]
 8029078:	3508      	adds	r5, #8
 802907a:	0114      	lsls	r4, r2, #4
 802907c:	9517      	str	r5, [sp, #92]	; 0x5c
 802907e:	9a0f      	ldr	r2, [sp, #60]	; 0x3c
 8029080:	9d1a      	ldr	r5, [sp, #104]	; 0x68
 8029082:	940e      	str	r4, [sp, #56]	; 0x38
 8029084:	00c0      	lsls	r0, r0, #3
 8029086:	9010      	str	r0, [sp, #64]	; 0x40
 8029088:	18aa      	adds	r2, r5, r2
 802908a:	9207      	str	r2, [sp, #28]
 802908c:	9a10      	ldr	r2, [sp, #64]	; 0x40
 802908e:	9c0c      	ldr	r4, [sp, #48]	; 0x30
 8029090:	18aa      	adds	r2, r5, r2
 8029092:	9208      	str	r2, [sp, #32]
 8029094:	9a11      	ldr	r2, [sp, #68]	; 0x44
 8029096:	18aa      	adds	r2, r5, r2
 8029098:	9209      	str	r2, [sp, #36]	; 0x24
 802909a:	eb01 0181 	add.w	r1, r1, r1, lsl #2
 802909e:	f10e 0204 	add.w	r2, lr, #4
 80290a2:	920a      	str	r2, [sp, #40]	; 0x28
 80290a4:	00c9      	lsls	r1, r1, #3
 80290a6:	9a0d      	ldr	r2, [sp, #52]	; 0x34
 80290a8:	310c      	adds	r1, #12
 80290aa:	00f6      	lsls	r6, r6, #3
 80290ac:	ea4f 00cc 	mov.w	r0, ip, lsl #3
 80290b0:	9114      	str	r1, [sp, #80]	; 0x50
 80290b2:	18a9      	adds	r1, r5, r2
 80290b4:	9a0e      	ldr	r2, [sp, #56]	; 0x38
 80290b6:	9612      	str	r6, [sp, #72]	; 0x48
 80290b8:	00ff      	lsls	r7, r7, #3
 80290ba:	19ae      	adds	r6, r5, r6
 80290bc:	3008      	adds	r0, #8
 80290be:	ea4f 1c0c 	mov.w	ip, ip, lsl #4
 80290c2:	9606      	str	r6, [sp, #24]
 80290c4:	9019      	str	r0, [sp, #100]	; 0x64
 80290c6:	18aa      	adds	r2, r5, r2
 80290c8:	0164      	lsls	r4, r4, #5
 80290ca:	19ee      	adds	r6, r5, r7
 80290cc:	f10c 000c 	add.w	r0, ip, #12
 80290d0:	9713      	str	r7, [sp, #76]	; 0x4c
 80290d2:	9604      	str	r6, [sp, #16]
 80290d4:	9015      	str	r0, [sp, #84]	; 0x54
 80290d6:	9103      	str	r1, [sp, #12]
 80290d8:	9205      	str	r2, [sp, #20]
 80290da:	f104 0208 	add.w	r2, r4, #8
 80290de:	9218      	str	r2, [sp, #96]	; 0x60
 80290e0:	f04f 0801 	mov.w	r8, #1
 80290e4:	2200      	movs	r2, #0
 80290e6:	f102 0108 	add.w	r1, r2, #8
 80290ea:	460f      	mov	r7, r1
 80290ec:	910b      	str	r1, [sp, #44]	; 0x2c
 80290ee:	9918      	ldr	r1, [sp, #96]	; 0x60
 80290f0:	188e      	adds	r6, r1, r2
 80290f2:	9916      	ldr	r1, [sp, #88]	; 0x58
 80290f4:	188d      	adds	r5, r1, r2
 80290f6:	9917      	ldr	r1, [sp, #92]	; 0x5c
 80290f8:	188c      	adds	r4, r1, r2
 80290fa:	9919      	ldr	r1, [sp, #100]	; 0x64
 80290fc:	1888      	adds	r0, r1, r2
 80290fe:	9914      	ldr	r1, [sp, #80]	; 0x50
 8029100:	eb01 0c02 	add.w	ip, r1, r2
 8029104:	9915      	ldr	r1, [sp, #84]	; 0x54
 8029106:	440a      	add	r2, r1
 8029108:	9903      	ldr	r1, [sp, #12]
 802910a:	edd1 fa00 	vldr	s31, [r1]
 802910e:	9905      	ldr	r1, [sp, #20]
 8029110:	ed91 fa00 	vldr	s30, [r1]
 8029114:	9904      	ldr	r1, [sp, #16]
 8029116:	edd1 ea00 	vldr	s29, [r1]
 802911a:	9906      	ldr	r1, [sp, #24]
 802911c:	ed91 ea00 	vldr	s28, [r1]
 8029120:	9909      	ldr	r1, [sp, #36]	; 0x24
 8029122:	edd1 da00 	vldr	s27, [r1]
 8029126:	9908      	ldr	r1, [sp, #32]
 8029128:	ed91 da00 	vldr	s26, [r1]
 802912c:	9907      	ldr	r1, [sp, #28]
 802912e:	edd1 ca00 	vldr	s25, [r1]
 8029132:	9903      	ldr	r1, [sp, #12]
 8029134:	ed91 ca01 	vldr	s24, [r1, #4]
 8029138:	9905      	ldr	r1, [sp, #20]
 802913a:	edd1 ba01 	vldr	s23, [r1, #4]
 802913e:	9904      	ldr	r1, [sp, #16]
 8029140:	edd1 aa01 	vldr	s21, [r1, #4]
 8029144:	9906      	ldr	r1, [sp, #24]
 8029146:	ed91 aa01 	vldr	s20, [r1, #4]
 802914a:	9909      	ldr	r1, [sp, #36]	; 0x24
 802914c:	edd1 7a01 	vldr	s15, [r1, #4]
 8029150:	9908      	ldr	r1, [sp, #32]
 8029152:	edcd 7a00 	vstr	s15, [sp]
 8029156:	edd1 7a01 	vldr	s15, [r1, #4]
 802915a:	9907      	ldr	r1, [sp, #28]
 802915c:	edcd 7a01 	vstr	s15, [sp, #4]
 8029160:	edd1 7a01 	vldr	s15, [r1, #4]
 8029164:	eb0a 0e07 	add.w	lr, sl, r7
 8029168:	9f0a      	ldr	r7, [sp, #40]	; 0x28
 802916a:	edcd 7a02 	vstr	s15, [sp, #8]
 802916e:	eb0c 010a 	add.w	r1, ip, sl
 8029172:	4456      	add	r6, sl
 8029174:	4455      	add	r5, sl
 8029176:	4454      	add	r4, sl
 8029178:	4450      	add	r0, sl
 802917a:	4452      	add	r2, sl
 802917c:	46c4      	mov	ip, r8
 802917e:	e001      	b.n	8029184 <arm_radix8_butterfly_f32+0x334>
 8029180:	3f3504f3 	.word	0x3f3504f3
 8029184:	ed96 5a00 	vldr	s10, [r6]
 8029188:	ed52 9a01 	vldr	s19, [r2, #-4]
 802918c:	ed11 6a01 	vldr	s12, [r1, #-4]
 8029190:	edd0 7a00 	vldr	s15, [r0]
 8029194:	ed17 7a01 	vldr	s14, [r7, #-4]
 8029198:	edde 3a00 	vldr	s7, [lr]
 802919c:	ed94 3a00 	vldr	s6, [r4]
 80291a0:	ed95 2a00 	vldr	s4, [r5]
 80291a4:	ed9e 0a01 	vldr	s0, [lr, #4]
 80291a8:	ee33 8a85 	vadd.f32	s16, s7, s10
 80291ac:	ee32 1a06 	vadd.f32	s2, s4, s12
 80291b0:	ee33 4a29 	vadd.f32	s8, s6, s19
 80291b4:	ee77 4a87 	vadd.f32	s9, s15, s14
 80291b8:	ee78 1a04 	vadd.f32	s3, s16, s8
 80291bc:	ee71 6a24 	vadd.f32	s13, s2, s9
 80291c0:	ee32 2a46 	vsub.f32	s4, s4, s12
 80291c4:	ee31 6aa6 	vadd.f32	s12, s3, s13
 80291c8:	ee77 7ac7 	vsub.f32	s15, s15, s14
 80291cc:	ed8e 6a00 	vstr	s12, [lr]
 80291d0:	edd0 8a01 	vldr	s17, [r0, #4]
 80291d4:	ed95 9a01 	vldr	s18, [r5, #4]
 80291d8:	edd1 2a00 	vldr	s5, [r1]
 80291dc:	ed97 7a00 	vldr	s14, [r7]
 80291e0:	edd4 0a01 	vldr	s1, [r4, #4]
 80291e4:	ed96 6a01 	vldr	s12, [r6, #4]
 80291e8:	edd2 5a00 	vldr	s11, [r2]
 80291ec:	ee73 3ac5 	vsub.f32	s7, s7, s10
 80291f0:	ee33 3a69 	vsub.f32	s6, s6, s19
 80291f4:	ee39 5a62 	vsub.f32	s10, s18, s5
 80291f8:	ee78 9ac7 	vsub.f32	s19, s17, s14
 80291fc:	ee38 4a44 	vsub.f32	s8, s16, s8
 8029200:	ee38 7a87 	vadd.f32	s14, s17, s14
 8029204:	ee30 8aa5 	vadd.f32	s16, s1, s11
 8029208:	ee79 2a22 	vadd.f32	s5, s18, s5
 802920c:	ee75 8a69 	vsub.f32	s17, s10, s19
 8029210:	ee32 9a27 	vadd.f32	s18, s4, s15
 8029214:	ee35 5a29 	vadd.f32	s10, s10, s19
 8029218:	ee72 7a67 	vsub.f32	s15, s4, s15
 802921c:	ee30 2a06 	vadd.f32	s4, s0, s12
 8029220:	ee69 9a0b 	vmul.f32	s19, s18, s22
 8029224:	ee70 5ae5 	vsub.f32	s11, s1, s11
 8029228:	ee32 9a08 	vadd.f32	s18, s4, s16
 802922c:	ee68 8a8b 	vmul.f32	s17, s17, s22
 8029230:	ee32 2a48 	vsub.f32	s4, s4, s16
 8029234:	ee71 4a64 	vsub.f32	s9, s2, s9
 8029238:	ee25 5a0b 	vmul.f32	s10, s10, s22
 802923c:	ee32 1a87 	vadd.f32	s2, s5, s14
 8029240:	ee67 7a8b 	vmul.f32	s15, s15, s22
 8029244:	ee72 2ac7 	vsub.f32	s5, s5, s14
 8029248:	ee30 6a46 	vsub.f32	s12, s0, s12
 802924c:	ee73 0a29 	vadd.f32	s1, s6, s19
 8029250:	ee36 0a28 	vadd.f32	s0, s12, s17
 8029254:	ee33 3a69 	vsub.f32	s6, s6, s19
 8029258:	ee32 7a64 	vsub.f32	s14, s4, s9
 802925c:	ee73 9aa7 	vadd.f32	s19, s7, s15
 8029260:	ee36 6a68 	vsub.f32	s12, s12, s17
 8029264:	ee73 7ae7 	vsub.f32	s15, s7, s15
 8029268:	ee75 8a85 	vadd.f32	s17, s11, s10
 802926c:	ee74 3a22 	vadd.f32	s7, s8, s5
 8029270:	ee35 5ac5 	vsub.f32	s10, s11, s10
 8029274:	ee71 6ae6 	vsub.f32	s13, s3, s13
 8029278:	ee79 1a41 	vsub.f32	s3, s18, s2
 802927c:	ee39 8aa8 	vadd.f32	s16, s19, s17
 8029280:	ee76 5a43 	vsub.f32	s11, s12, s6
 8029284:	ee74 2a62 	vsub.f32	s5, s8, s5
 8029288:	ee72 4a24 	vadd.f32	s9, s4, s9
 802928c:	ee30 4a60 	vsub.f32	s8, s0, s1
 8029290:	ee79 8ae8 	vsub.f32	s17, s19, s17
 8029294:	ee30 0a20 	vadd.f32	s0, s0, s1
 8029298:	ee77 9a85 	vadd.f32	s19, s15, s10
 802929c:	ee36 6a03 	vadd.f32	s12, s12, s6
 80292a0:	ee77 7ac5 	vsub.f32	s15, s15, s10
 80292a4:	ee2e 2a21 	vmul.f32	s4, s28, s3
 80292a8:	ee2e 5a26 	vmul.f32	s10, s28, s13
 80292ac:	ee6f 0a23 	vmul.f32	s1, s30, s7
 80292b0:	ee2a 3a21 	vmul.f32	s6, s20, s3
 80292b4:	ee39 1a01 	vadd.f32	s2, s18, s2
 80292b8:	ee6a 6a26 	vmul.f32	s13, s20, s13
 80292bc:	ee2b 9a87 	vmul.f32	s18, s23, s14
 80292c0:	ee6b 3aa3 	vmul.f32	s7, s23, s7
 80292c4:	ee2f 7a07 	vmul.f32	s14, s30, s14
 80292c8:	ee6f 1a84 	vmul.f32	s3, s31, s8
 80292cc:	ee35 3a03 	vadd.f32	s6, s10, s6
 80292d0:	ee72 6a66 	vsub.f32	s13, s4, s13
 80292d4:	ee2c 5a04 	vmul.f32	s10, s24, s8
 80292d8:	ee2f 2a88 	vmul.f32	s4, s31, s16
 80292dc:	ed9d 4a02 	vldr	s8, [sp, #8]
 80292e0:	ed8e 1a01 	vstr	s2, [lr, #4]
 80292e4:	ee77 3a63 	vsub.f32	s7, s14, s7
 80292e8:	ee2c 8a08 	vmul.f32	s16, s24, s16
 80292ec:	ed9d 7a01 	vldr	s14, [sp, #4]
 80292f0:	ed86 3a00 	vstr	s6, [r6]
 80292f4:	ee30 9a89 	vadd.f32	s18, s1, s18
 80292f8:	ee32 2a05 	vadd.f32	s4, s4, s10
 80292fc:	ee6d 0a22 	vmul.f32	s1, s26, s5
 8029300:	ee31 8ac8 	vsub.f32	s16, s3, s16
 8029304:	ee67 2a22 	vmul.f32	s5, s14, s5
 8029308:	ee64 1a00 	vmul.f32	s3, s8, s0
 802930c:	ee27 7a24 	vmul.f32	s14, s14, s9
 8029310:	ee2c 5aa8 	vmul.f32	s10, s25, s17
 8029314:	ee6d 4a24 	vmul.f32	s9, s26, s9
 8029318:	ee64 8a28 	vmul.f32	s17, s8, s17
 802931c:	ed9d 4a00 	vldr	s8, [sp]
 8029320:	edc6 6a01 	vstr	s13, [r6, #4]
 8029324:	ee74 2ae2 	vsub.f32	s5, s9, s5
 8029328:	ee6d 4aa9 	vmul.f32	s9, s27, s19
 802932c:	ee64 9a29 	vmul.f32	s19, s8, s19
 8029330:	ee24 4a25 	vmul.f32	s8, s8, s11
 8029334:	ee30 7a87 	vadd.f32	s14, s1, s14
 8029338:	ee74 4a84 	vadd.f32	s9, s9, s8
 802933c:	ee6e 0aa7 	vmul.f32	s1, s29, s15
 8029340:	ee2a 4a86 	vmul.f32	s8, s21, s12
 8029344:	ee2c 0a80 	vmul.f32	s0, s25, s0
 8029348:	ee6d 5aa5 	vmul.f32	s11, s27, s11
 802934c:	ee6a 7aa7 	vmul.f32	s15, s21, s15
 8029350:	ee2e 6a86 	vmul.f32	s12, s29, s12
 8029354:	ee75 1a21 	vadd.f32	s3, s10, s3
 8029358:	ee30 0a68 	vsub.f32	s0, s0, s17
 802935c:	ee75 9ae9 	vsub.f32	s19, s11, s19
 8029360:	ee70 0a84 	vadd.f32	s1, s1, s8
 8029364:	ee36 6a67 	vsub.f32	s12, s12, s15
 8029368:	44dc      	add	ip, fp
 802936a:	45e1      	cmp	r9, ip
 802936c:	ed84 9a00 	vstr	s18, [r4]
 8029370:	edc4 3a01 	vstr	s7, [r4, #4]
 8029374:	449e      	add	lr, r3
 8029376:	ed02 7a01 	vstr	s14, [r2, #-4]
 802937a:	edc2 2a00 	vstr	s5, [r2]
 802937e:	441e      	add	r6, r3
 8029380:	ed85 2a00 	vstr	s4, [r5]
 8029384:	ed85 8a01 	vstr	s16, [r5, #4]
 8029388:	441c      	add	r4, r3
 802938a:	ed47 1a01 	vstr	s3, [r7, #-4]
 802938e:	ed87 0a00 	vstr	s0, [r7]
 8029392:	441a      	add	r2, r3
 8029394:	ed41 4a01 	vstr	s9, [r1, #-4]
 8029398:	edc1 9a00 	vstr	s19, [r1]
 802939c:	441d      	add	r5, r3
 802939e:	edc0 0a00 	vstr	s1, [r0]
 80293a2:	441f      	add	r7, r3
 80293a4:	ed80 6a01 	vstr	s12, [r0, #4]
 80293a8:	4419      	add	r1, r3
 80293aa:	4418      	add	r0, r3
 80293ac:	f63f aeea 	bhi.w	8029184 <arm_radix8_butterfly_f32+0x334>
 80293b0:	9a03      	ldr	r2, [sp, #12]
 80293b2:	990d      	ldr	r1, [sp, #52]	; 0x34
 80293b4:	440a      	add	r2, r1
 80293b6:	9203      	str	r2, [sp, #12]
 80293b8:	990e      	ldr	r1, [sp, #56]	; 0x38
 80293ba:	9a05      	ldr	r2, [sp, #20]
 80293bc:	440a      	add	r2, r1
 80293be:	9205      	str	r2, [sp, #20]
 80293c0:	9913      	ldr	r1, [sp, #76]	; 0x4c
 80293c2:	9a04      	ldr	r2, [sp, #16]
 80293c4:	440a      	add	r2, r1
 80293c6:	9204      	str	r2, [sp, #16]
 80293c8:	9912      	ldr	r1, [sp, #72]	; 0x48
 80293ca:	9a06      	ldr	r2, [sp, #24]
 80293cc:	440a      	add	r2, r1
 80293ce:	9206      	str	r2, [sp, #24]
 80293d0:	9911      	ldr	r1, [sp, #68]	; 0x44
 80293d2:	9a09      	ldr	r2, [sp, #36]	; 0x24
 80293d4:	440a      	add	r2, r1
 80293d6:	9209      	str	r2, [sp, #36]	; 0x24
 80293d8:	9910      	ldr	r1, [sp, #64]	; 0x40
 80293da:	9a08      	ldr	r2, [sp, #32]
 80293dc:	440a      	add	r2, r1
 80293de:	9208      	str	r2, [sp, #32]
 80293e0:	990f      	ldr	r1, [sp, #60]	; 0x3c
 80293e2:	9a07      	ldr	r2, [sp, #28]
 80293e4:	440a      	add	r2, r1
 80293e6:	9207      	str	r2, [sp, #28]
 80293e8:	990c      	ldr	r1, [sp, #48]	; 0x30
 80293ea:	9a0a      	ldr	r2, [sp, #40]	; 0x28
 80293ec:	f108 0801 	add.w	r8, r8, #1
 80293f0:	3208      	adds	r2, #8
 80293f2:	4588      	cmp	r8, r1
 80293f4:	920a      	str	r2, [sp, #40]	; 0x28
 80293f6:	9a0b      	ldr	r2, [sp, #44]	; 0x2c
 80293f8:	f47f ae75 	bne.w	80290e6 <arm_radix8_butterfly_f32+0x296>
 80293fc:	f8bd 3034 	ldrh.w	r3, [sp, #52]	; 0x34
 8029400:	9300      	str	r3, [sp, #0]
 8029402:	46c3      	mov	fp, r8
 8029404:	f8dd e06c 	ldr.w	lr, [sp, #108]	; 0x6c
 8029408:	e532      	b.n	8028e70 <arm_radix8_butterfly_f32+0x20>
 802940a:	b01d      	add	sp, #116	; 0x74
 802940c:	ecbd 8b10 	vpop	{d8-d15}
 8029410:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}

08029414 <__aeabi_atexit>:
 8029414:	460b      	mov	r3, r1
 8029416:	4601      	mov	r1, r0
 8029418:	4618      	mov	r0, r3
 802941a:	f000 bef3 	b.w	802a204 <__cxa_atexit>

0802941e <_ZdlPvj>:
 802941e:	f000 b812 	b.w	8029446 <_ZdlPv>

08029422 <__cxa_guard_acquire>:
 8029422:	6803      	ldr	r3, [r0, #0]
 8029424:	07db      	lsls	r3, r3, #31
 8029426:	d406      	bmi.n	8029436 <__cxa_guard_acquire+0x14>
 8029428:	7843      	ldrb	r3, [r0, #1]
 802942a:	b103      	cbz	r3, 802942e <__cxa_guard_acquire+0xc>
 802942c:	deff      	udf	#255	; 0xff
 802942e:	2301      	movs	r3, #1
 8029430:	7043      	strb	r3, [r0, #1]
 8029432:	4618      	mov	r0, r3
 8029434:	4770      	bx	lr
 8029436:	2000      	movs	r0, #0
 8029438:	4770      	bx	lr

0802943a <__cxa_guard_release>:
 802943a:	2301      	movs	r3, #1
 802943c:	6003      	str	r3, [r0, #0]
 802943e:	4770      	bx	lr

08029440 <__cxa_pure_virtual>:
 8029440:	b508      	push	{r3, lr}
 8029442:	f000 f80f 	bl	8029464 <_ZSt9terminatev>

08029446 <_ZdlPv>:
 8029446:	f000 be29 	b.w	802a09c <free>

0802944a <_ZN10__cxxabiv111__terminateEPFvvE>:
 802944a:	b508      	push	{r3, lr}
 802944c:	4780      	blx	r0
 802944e:	f000 fdf1 	bl	802a034 <abort>
	...

08029454 <_ZSt13get_terminatev>:
 8029454:	4b02      	ldr	r3, [pc, #8]	; (8029460 <_ZSt13get_terminatev+0xc>)
 8029456:	6818      	ldr	r0, [r3, #0]
 8029458:	f3bf 8f5b 	dmb	ish
 802945c:	4770      	bx	lr
 802945e:	bf00      	nop
 8029460:	20000104 	.word	0x20000104

08029464 <_ZSt9terminatev>:
 8029464:	b508      	push	{r3, lr}
 8029466:	f7ff fff5 	bl	8029454 <_ZSt13get_terminatev>
 802946a:	f7ff ffee 	bl	802944a <_ZN10__cxxabiv111__terminateEPFvvE>
	...

08029470 <sqrtf>:
 8029470:	b508      	push	{r3, lr}
 8029472:	ed2d 8b02 	vpush	{d8}
 8029476:	eeb0 8a40 	vmov.f32	s16, s0
 802947a:	f000 f8a1 	bl	80295c0 <__ieee754_sqrtf>
 802947e:	eeb4 8a48 	vcmp.f32	s16, s16
 8029482:	eef1 fa10 	vmrs	APSR_nzcv, fpscr
 8029486:	d60c      	bvs.n	80294a2 <sqrtf+0x32>
 8029488:	eddf 8a07 	vldr	s17, [pc, #28]	; 80294a8 <sqrtf+0x38>
 802948c:	eeb4 8ae8 	vcmpe.f32	s16, s17
 8029490:	eef1 fa10 	vmrs	APSR_nzcv, fpscr
 8029494:	d505      	bpl.n	80294a2 <sqrtf+0x32>
 8029496:	f001 f8d3 	bl	802a640 <__errno>
 802949a:	ee88 0aa8 	vdiv.f32	s0, s17, s17
 802949e:	2321      	movs	r3, #33	; 0x21
 80294a0:	6003      	str	r3, [r0, #0]
 80294a2:	ecbd 8b02 	vpop	{d8}
 80294a6:	bd08      	pop	{r3, pc}
 80294a8:	00000000 	.word	0x00000000

080294ac <cosf>:
 80294ac:	ee10 3a10 	vmov	r3, s0
 80294b0:	b507      	push	{r0, r1, r2, lr}
 80294b2:	4a1e      	ldr	r2, [pc, #120]	; (802952c <cosf+0x80>)
 80294b4:	f023 4300 	bic.w	r3, r3, #2147483648	; 0x80000000
 80294b8:	4293      	cmp	r3, r2
 80294ba:	dc06      	bgt.n	80294ca <cosf+0x1e>
 80294bc:	eddf 0a1c 	vldr	s1, [pc, #112]	; 8029530 <cosf+0x84>
 80294c0:	b003      	add	sp, #12
 80294c2:	f85d eb04 	ldr.w	lr, [sp], #4
 80294c6:	f000 b903 	b.w	80296d0 <__kernel_cosf>
 80294ca:	f1b3 4fff 	cmp.w	r3, #2139095040	; 0x7f800000
 80294ce:	db04      	blt.n	80294da <cosf+0x2e>
 80294d0:	ee30 0a40 	vsub.f32	s0, s0, s0
 80294d4:	b003      	add	sp, #12
 80294d6:	f85d fb04 	ldr.w	pc, [sp], #4
 80294da:	4668      	mov	r0, sp
 80294dc:	f000 f99e 	bl	802981c <__ieee754_rem_pio2f>
 80294e0:	f000 0003 	and.w	r0, r0, #3
 80294e4:	2801      	cmp	r0, #1
 80294e6:	d009      	beq.n	80294fc <cosf+0x50>
 80294e8:	2802      	cmp	r0, #2
 80294ea:	d010      	beq.n	802950e <cosf+0x62>
 80294ec:	b9b0      	cbnz	r0, 802951c <cosf+0x70>
 80294ee:	eddd 0a01 	vldr	s1, [sp, #4]
 80294f2:	ed9d 0a00 	vldr	s0, [sp]
 80294f6:	f000 f8eb 	bl	80296d0 <__kernel_cosf>
 80294fa:	e7eb      	b.n	80294d4 <cosf+0x28>
 80294fc:	eddd 0a01 	vldr	s1, [sp, #4]
 8029500:	ed9d 0a00 	vldr	s0, [sp]
 8029504:	f000 f942 	bl	802978c <__kernel_sinf>
 8029508:	eeb1 0a40 	vneg.f32	s0, s0
 802950c:	e7e2      	b.n	80294d4 <cosf+0x28>
 802950e:	eddd 0a01 	vldr	s1, [sp, #4]
 8029512:	ed9d 0a00 	vldr	s0, [sp]
 8029516:	f000 f8db 	bl	80296d0 <__kernel_cosf>
 802951a:	e7f5      	b.n	8029508 <cosf+0x5c>
 802951c:	eddd 0a01 	vldr	s1, [sp, #4]
 8029520:	ed9d 0a00 	vldr	s0, [sp]
 8029524:	2001      	movs	r0, #1
 8029526:	f000 f931 	bl	802978c <__kernel_sinf>
 802952a:	e7d3      	b.n	80294d4 <cosf+0x28>
 802952c:	3f490fd8 	.word	0x3f490fd8
 8029530:	00000000 	.word	0x00000000

08029534 <sinf>:
 8029534:	ee10 3a10 	vmov	r3, s0
 8029538:	b507      	push	{r0, r1, r2, lr}
 802953a:	4a1f      	ldr	r2, [pc, #124]	; (80295b8 <sinf+0x84>)
 802953c:	f023 4300 	bic.w	r3, r3, #2147483648	; 0x80000000
 8029540:	4293      	cmp	r3, r2
 8029542:	dc07      	bgt.n	8029554 <sinf+0x20>
 8029544:	eddf 0a1d 	vldr	s1, [pc, #116]	; 80295bc <sinf+0x88>
 8029548:	2000      	movs	r0, #0
 802954a:	b003      	add	sp, #12
 802954c:	f85d eb04 	ldr.w	lr, [sp], #4
 8029550:	f000 b91c 	b.w	802978c <__kernel_sinf>
 8029554:	f1b3 4fff 	cmp.w	r3, #2139095040	; 0x7f800000
 8029558:	db04      	blt.n	8029564 <sinf+0x30>
 802955a:	ee30 0a40 	vsub.f32	s0, s0, s0
 802955e:	b003      	add	sp, #12
 8029560:	f85d fb04 	ldr.w	pc, [sp], #4
 8029564:	4668      	mov	r0, sp
 8029566:	f000 f959 	bl	802981c <__ieee754_rem_pio2f>
 802956a:	f000 0003 	and.w	r0, r0, #3
 802956e:	2801      	cmp	r0, #1
 8029570:	d00a      	beq.n	8029588 <sinf+0x54>
 8029572:	2802      	cmp	r0, #2
 8029574:	d00f      	beq.n	8029596 <sinf+0x62>
 8029576:	b9c0      	cbnz	r0, 80295aa <sinf+0x76>
 8029578:	eddd 0a01 	vldr	s1, [sp, #4]
 802957c:	ed9d 0a00 	vldr	s0, [sp]
 8029580:	2001      	movs	r0, #1
 8029582:	f000 f903 	bl	802978c <__kernel_sinf>
 8029586:	e7ea      	b.n	802955e <sinf+0x2a>
 8029588:	eddd 0a01 	vldr	s1, [sp, #4]
 802958c:	ed9d 0a00 	vldr	s0, [sp]
 8029590:	f000 f89e 	bl	80296d0 <__kernel_cosf>
 8029594:	e7e3      	b.n	802955e <sinf+0x2a>
 8029596:	eddd 0a01 	vldr	s1, [sp, #4]
 802959a:	ed9d 0a00 	vldr	s0, [sp]
 802959e:	2001      	movs	r0, #1
 80295a0:	f000 f8f4 	bl	802978c <__kernel_sinf>
 80295a4:	eeb1 0a40 	vneg.f32	s0, s0
 80295a8:	e7d9      	b.n	802955e <sinf+0x2a>
 80295aa:	eddd 0a01 	vldr	s1, [sp, #4]
 80295ae:	ed9d 0a00 	vldr	s0, [sp]
 80295b2:	f000 f88d 	bl	80296d0 <__kernel_cosf>
 80295b6:	e7f5      	b.n	80295a4 <sinf+0x70>
 80295b8:	3f490fd8 	.word	0x3f490fd8
 80295bc:	00000000 	.word	0x00000000

080295c0 <__ieee754_sqrtf>:
 80295c0:	eeb1 0ac0 	vsqrt.f32	s0, s0
 80295c4:	4770      	bx	lr
	...

080295c8 <ceilf>:
 80295c8:	ee10 3a10 	vmov	r3, s0
 80295cc:	f3c3 52c7 	ubfx	r2, r3, #23, #8
 80295d0:	3a7f      	subs	r2, #127	; 0x7f
 80295d2:	2a16      	cmp	r2, #22
 80295d4:	f023 4100 	bic.w	r1, r3, #2147483648	; 0x80000000
 80295d8:	dc2a      	bgt.n	8029630 <ceilf+0x68>
 80295da:	2a00      	cmp	r2, #0
 80295dc:	da11      	bge.n	8029602 <ceilf+0x3a>
 80295de:	eddf 7a19 	vldr	s15, [pc, #100]	; 8029644 <ceilf+0x7c>
 80295e2:	ee30 0a27 	vadd.f32	s0, s0, s15
 80295e6:	eeb5 0ac0 	vcmpe.f32	s0, #0.0
 80295ea:	eef1 fa10 	vmrs	APSR_nzcv, fpscr
 80295ee:	dd05      	ble.n	80295fc <ceilf+0x34>
 80295f0:	2b00      	cmp	r3, #0
 80295f2:	db23      	blt.n	802963c <ceilf+0x74>
 80295f4:	2900      	cmp	r1, #0
 80295f6:	bf18      	it	ne
 80295f8:	f04f 537e 	movne.w	r3, #1065353216	; 0x3f800000
 80295fc:	ee00 3a10 	vmov	s0, r3
 8029600:	4770      	bx	lr
 8029602:	4911      	ldr	r1, [pc, #68]	; (8029648 <ceilf+0x80>)
 8029604:	4111      	asrs	r1, r2
 8029606:	420b      	tst	r3, r1
 8029608:	d0fa      	beq.n	8029600 <ceilf+0x38>
 802960a:	eddf 7a0e 	vldr	s15, [pc, #56]	; 8029644 <ceilf+0x7c>
 802960e:	ee30 0a27 	vadd.f32	s0, s0, s15
 8029612:	eeb5 0ac0 	vcmpe.f32	s0, #0.0
 8029616:	eef1 fa10 	vmrs	APSR_nzcv, fpscr
 802961a:	ddef      	ble.n	80295fc <ceilf+0x34>
 802961c:	2b00      	cmp	r3, #0
 802961e:	bfc2      	ittt	gt
 8029620:	f44f 0000 	movgt.w	r0, #8388608	; 0x800000
 8029624:	fa40 f202 	asrgt.w	r2, r0, r2
 8029628:	189b      	addgt	r3, r3, r2
 802962a:	ea23 0301 	bic.w	r3, r3, r1
 802962e:	e7e5      	b.n	80295fc <ceilf+0x34>
 8029630:	f1b1 4fff 	cmp.w	r1, #2139095040	; 0x7f800000
 8029634:	d3e4      	bcc.n	8029600 <ceilf+0x38>
 8029636:	ee30 0a00 	vadd.f32	s0, s0, s0
 802963a:	4770      	bx	lr
 802963c:	f04f 4300 	mov.w	r3, #2147483648	; 0x80000000
 8029640:	e7dc      	b.n	80295fc <ceilf+0x34>
 8029642:	bf00      	nop
 8029644:	7149f2ca 	.word	0x7149f2ca
 8029648:	007fffff 	.word	0x007fffff

0802964c <floorf>:
 802964c:	ee10 3a10 	vmov	r3, s0
 8029650:	f3c3 52c7 	ubfx	r2, r3, #23, #8
 8029654:	3a7f      	subs	r2, #127	; 0x7f
 8029656:	2a16      	cmp	r2, #22
 8029658:	f023 4100 	bic.w	r1, r3, #2147483648	; 0x80000000
 802965c:	dc2a      	bgt.n	80296b4 <floorf+0x68>
 802965e:	2a00      	cmp	r2, #0
 8029660:	da11      	bge.n	8029686 <floorf+0x3a>
 8029662:	eddf 7a18 	vldr	s15, [pc, #96]	; 80296c4 <floorf+0x78>
 8029666:	ee30 0a27 	vadd.f32	s0, s0, s15
 802966a:	eeb5 0ac0 	vcmpe.f32	s0, #0.0
 802966e:	eef1 fa10 	vmrs	APSR_nzcv, fpscr
 8029672:	dd05      	ble.n	8029680 <floorf+0x34>
 8029674:	2b00      	cmp	r3, #0
 8029676:	da23      	bge.n	80296c0 <floorf+0x74>
 8029678:	4a13      	ldr	r2, [pc, #76]	; (80296c8 <floorf+0x7c>)
 802967a:	2900      	cmp	r1, #0
 802967c:	bf18      	it	ne
 802967e:	4613      	movne	r3, r2
 8029680:	ee00 3a10 	vmov	s0, r3
 8029684:	4770      	bx	lr
 8029686:	4911      	ldr	r1, [pc, #68]	; (80296cc <floorf+0x80>)
 8029688:	4111      	asrs	r1, r2
 802968a:	420b      	tst	r3, r1
 802968c:	d0fa      	beq.n	8029684 <floorf+0x38>
 802968e:	eddf 7a0d 	vldr	s15, [pc, #52]	; 80296c4 <floorf+0x78>
 8029692:	ee30 0a27 	vadd.f32	s0, s0, s15
 8029696:	eeb5 0ac0 	vcmpe.f32	s0, #0.0
 802969a:	eef1 fa10 	vmrs	APSR_nzcv, fpscr
 802969e:	ddef      	ble.n	8029680 <floorf+0x34>
 80296a0:	2b00      	cmp	r3, #0
 80296a2:	bfbe      	ittt	lt
 80296a4:	f44f 0000 	movlt.w	r0, #8388608	; 0x800000
 80296a8:	fa40 f202 	asrlt.w	r2, r0, r2
 80296ac:	189b      	addlt	r3, r3, r2
 80296ae:	ea23 0301 	bic.w	r3, r3, r1
 80296b2:	e7e5      	b.n	8029680 <floorf+0x34>
 80296b4:	f1b1 4fff 	cmp.w	r1, #2139095040	; 0x7f800000
 80296b8:	d3e4      	bcc.n	8029684 <floorf+0x38>
 80296ba:	ee30 0a00 	vadd.f32	s0, s0, s0
 80296be:	4770      	bx	lr
 80296c0:	2300      	movs	r3, #0
 80296c2:	e7dd      	b.n	8029680 <floorf+0x34>
 80296c4:	7149f2ca 	.word	0x7149f2ca
 80296c8:	bf800000 	.word	0xbf800000
 80296cc:	007fffff 	.word	0x007fffff

080296d0 <__kernel_cosf>:
 80296d0:	ee10 3a10 	vmov	r3, s0
 80296d4:	f023 4300 	bic.w	r3, r3, #2147483648	; 0x80000000
 80296d8:	f1b3 5f48 	cmp.w	r3, #838860800	; 0x32000000
 80296dc:	eef7 6a00 	vmov.f32	s13, #112	; 0x3f800000  1.0
 80296e0:	da05      	bge.n	80296ee <__kernel_cosf+0x1e>
 80296e2:	eefd 7ac0 	vcvt.s32.f32	s15, s0
 80296e6:	ee17 2a90 	vmov	r2, s15
 80296ea:	2a00      	cmp	r2, #0
 80296ec:	d03b      	beq.n	8029766 <__kernel_cosf+0x96>
 80296ee:	ee20 7a00 	vmul.f32	s14, s0, s0
 80296f2:	eddf 7a1e 	vldr	s15, [pc, #120]	; 802976c <__kernel_cosf+0x9c>
 80296f6:	ed9f 6a1e 	vldr	s12, [pc, #120]	; 8029770 <__kernel_cosf+0xa0>
 80296fa:	4a1e      	ldr	r2, [pc, #120]	; (8029774 <__kernel_cosf+0xa4>)
 80296fc:	eea7 6a27 	vfma.f32	s12, s14, s15
 8029700:	4293      	cmp	r3, r2
 8029702:	eddf 7a1d 	vldr	s15, [pc, #116]	; 8029778 <__kernel_cosf+0xa8>
 8029706:	eee6 7a07 	vfma.f32	s15, s12, s14
 802970a:	ed9f 6a1c 	vldr	s12, [pc, #112]	; 802977c <__kernel_cosf+0xac>
 802970e:	eea7 6a87 	vfma.f32	s12, s15, s14
 8029712:	eddf 7a1b 	vldr	s15, [pc, #108]	; 8029780 <__kernel_cosf+0xb0>
 8029716:	eee6 7a07 	vfma.f32	s15, s12, s14
 802971a:	ed9f 6a1a 	vldr	s12, [pc, #104]	; 8029784 <__kernel_cosf+0xb4>
 802971e:	eea7 6a87 	vfma.f32	s12, s15, s14
 8029722:	ee60 0ac0 	vnmul.f32	s1, s1, s0
 8029726:	ee26 6a07 	vmul.f32	s12, s12, s14
 802972a:	eef6 7a00 	vmov.f32	s15, #96	; 0x3f000000  0.5
 802972e:	eee7 0a06 	vfma.f32	s1, s14, s12
 8029732:	ee67 7a27 	vmul.f32	s15, s14, s15
 8029736:	dc04      	bgt.n	8029742 <__kernel_cosf+0x72>
 8029738:	ee77 7ae0 	vsub.f32	s15, s15, s1
 802973c:	ee36 0ae7 	vsub.f32	s0, s13, s15
 8029740:	4770      	bx	lr
 8029742:	4a11      	ldr	r2, [pc, #68]	; (8029788 <__kernel_cosf+0xb8>)
 8029744:	4293      	cmp	r3, r2
 8029746:	bfda      	itte	le
 8029748:	f103 437f 	addle.w	r3, r3, #4278190080	; 0xff000000
 802974c:	ee07 3a10 	vmovle	s14, r3
 8029750:	eeb5 7a02 	vmovgt.f32	s14, #82	; 0x3e900000  0.2812500
 8029754:	ee77 7ac7 	vsub.f32	s15, s15, s14
 8029758:	ee36 0ac7 	vsub.f32	s0, s13, s14
 802975c:	ee77 7ae0 	vsub.f32	s15, s15, s1
 8029760:	ee30 0a67 	vsub.f32	s0, s0, s15
 8029764:	4770      	bx	lr
 8029766:	eeb0 0a66 	vmov.f32	s0, s13
 802976a:	4770      	bx	lr
 802976c:	ad47d74e 	.word	0xad47d74e
 8029770:	310f74f6 	.word	0x310f74f6
 8029774:	3e999999 	.word	0x3e999999
 8029778:	b493f27c 	.word	0xb493f27c
 802977c:	37d00d01 	.word	0x37d00d01
 8029780:	bab60b61 	.word	0xbab60b61
 8029784:	3d2aaaab 	.word	0x3d2aaaab
 8029788:	3f480000 	.word	0x3f480000

0802978c <__kernel_sinf>:
 802978c:	ee10 3a10 	vmov	r3, s0
 8029790:	f023 4300 	bic.w	r3, r3, #2147483648	; 0x80000000
 8029794:	f1b3 5f48 	cmp.w	r3, #838860800	; 0x32000000
 8029798:	da04      	bge.n	80297a4 <__kernel_sinf+0x18>
 802979a:	eefd 7ac0 	vcvt.s32.f32	s15, s0
 802979e:	ee17 3a90 	vmov	r3, s15
 80297a2:	b35b      	cbz	r3, 80297fc <__kernel_sinf+0x70>
 80297a4:	ee20 7a00 	vmul.f32	s14, s0, s0
 80297a8:	eddf 7a15 	vldr	s15, [pc, #84]	; 8029800 <__kernel_sinf+0x74>
 80297ac:	ed9f 6a15 	vldr	s12, [pc, #84]	; 8029804 <__kernel_sinf+0x78>
 80297b0:	eea7 6a27 	vfma.f32	s12, s14, s15
 80297b4:	eddf 7a14 	vldr	s15, [pc, #80]	; 8029808 <__kernel_sinf+0x7c>
 80297b8:	eee6 7a07 	vfma.f32	s15, s12, s14
 80297bc:	ed9f 6a13 	vldr	s12, [pc, #76]	; 802980c <__kernel_sinf+0x80>
 80297c0:	eea7 6a87 	vfma.f32	s12, s15, s14
 80297c4:	eddf 7a12 	vldr	s15, [pc, #72]	; 8029810 <__kernel_sinf+0x84>
 80297c8:	ee60 6a07 	vmul.f32	s13, s0, s14
 80297cc:	eee6 7a07 	vfma.f32	s15, s12, s14
 80297d0:	b930      	cbnz	r0, 80297e0 <__kernel_sinf+0x54>
 80297d2:	ed9f 6a10 	vldr	s12, [pc, #64]	; 8029814 <__kernel_sinf+0x88>
 80297d6:	eea7 6a27 	vfma.f32	s12, s14, s15
 80297da:	eea6 0a26 	vfma.f32	s0, s12, s13
 80297de:	4770      	bx	lr
 80297e0:	ee67 7ae6 	vnmul.f32	s15, s15, s13
 80297e4:	eeb6 6a00 	vmov.f32	s12, #96	; 0x3f000000  0.5
 80297e8:	eee0 7a86 	vfma.f32	s15, s1, s12
 80297ec:	eed7 0a87 	vfnms.f32	s1, s15, s14
 80297f0:	eddf 7a09 	vldr	s15, [pc, #36]	; 8029818 <__kernel_sinf+0x8c>
 80297f4:	eee6 0aa7 	vfma.f32	s1, s13, s15
 80297f8:	ee30 0a60 	vsub.f32	s0, s0, s1
 80297fc:	4770      	bx	lr
 80297fe:	bf00      	nop
 8029800:	2f2ec9d3 	.word	0x2f2ec9d3
 8029804:	b2d72f34 	.word	0xb2d72f34
 8029808:	3638ef1b 	.word	0x3638ef1b
 802980c:	b9500d01 	.word	0xb9500d01
 8029810:	3c088889 	.word	0x3c088889
 8029814:	be2aaaab 	.word	0xbe2aaaab
 8029818:	3e2aaaab 	.word	0x3e2aaaab

0802981c <__ieee754_rem_pio2f>:
 802981c:	b5f0      	push	{r4, r5, r6, r7, lr}
 802981e:	ee10 6a10 	vmov	r6, s0
 8029822:	4b86      	ldr	r3, [pc, #536]	; (8029a3c <__ieee754_rem_pio2f+0x220>)
 8029824:	f026 4500 	bic.w	r5, r6, #2147483648	; 0x80000000
 8029828:	429d      	cmp	r5, r3
 802982a:	b087      	sub	sp, #28
 802982c:	4604      	mov	r4, r0
 802982e:	dc05      	bgt.n	802983c <__ieee754_rem_pio2f+0x20>
 8029830:	2300      	movs	r3, #0
 8029832:	ed80 0a00 	vstr	s0, [r0]
 8029836:	6043      	str	r3, [r0, #4]
 8029838:	2000      	movs	r0, #0
 802983a:	e020      	b.n	802987e <__ieee754_rem_pio2f+0x62>
 802983c:	4b80      	ldr	r3, [pc, #512]	; (8029a40 <__ieee754_rem_pio2f+0x224>)
 802983e:	429d      	cmp	r5, r3
 8029840:	dc38      	bgt.n	80298b4 <__ieee754_rem_pio2f+0x98>
 8029842:	2e00      	cmp	r6, #0
 8029844:	ed9f 7a7f 	vldr	s14, [pc, #508]	; 8029a44 <__ieee754_rem_pio2f+0x228>
 8029848:	4b7f      	ldr	r3, [pc, #508]	; (8029a48 <__ieee754_rem_pio2f+0x22c>)
 802984a:	f025 050f 	bic.w	r5, r5, #15
 802984e:	dd18      	ble.n	8029882 <__ieee754_rem_pio2f+0x66>
 8029850:	429d      	cmp	r5, r3
 8029852:	ee70 7a47 	vsub.f32	s15, s0, s14
 8029856:	bf09      	itett	eq
 8029858:	ed9f 7a7c 	vldreq	s14, [pc, #496]	; 8029a4c <__ieee754_rem_pio2f+0x230>
 802985c:	ed9f 7a7c 	vldrne	s14, [pc, #496]	; 8029a50 <__ieee754_rem_pio2f+0x234>
 8029860:	ee77 7ac7 	vsubeq.f32	s15, s15, s14
 8029864:	ed9f 7a7b 	vldreq	s14, [pc, #492]	; 8029a54 <__ieee754_rem_pio2f+0x238>
 8029868:	ee77 6ac7 	vsub.f32	s13, s15, s14
 802986c:	ee77 7ae6 	vsub.f32	s15, s15, s13
 8029870:	edc0 6a00 	vstr	s13, [r0]
 8029874:	ee77 7ac7 	vsub.f32	s15, s15, s14
 8029878:	edc0 7a01 	vstr	s15, [r0, #4]
 802987c:	2001      	movs	r0, #1
 802987e:	b007      	add	sp, #28
 8029880:	bdf0      	pop	{r4, r5, r6, r7, pc}
 8029882:	429d      	cmp	r5, r3
 8029884:	ee70 7a07 	vadd.f32	s15, s0, s14
 8029888:	bf09      	itett	eq
 802988a:	ed9f 7a70 	vldreq	s14, [pc, #448]	; 8029a4c <__ieee754_rem_pio2f+0x230>
 802988e:	ed9f 7a70 	vldrne	s14, [pc, #448]	; 8029a50 <__ieee754_rem_pio2f+0x234>
 8029892:	ee77 7a87 	vaddeq.f32	s15, s15, s14
 8029896:	ed9f 7a6f 	vldreq	s14, [pc, #444]	; 8029a54 <__ieee754_rem_pio2f+0x238>
 802989a:	ee77 6a87 	vadd.f32	s13, s15, s14
 802989e:	ee77 7ae6 	vsub.f32	s15, s15, s13
 80298a2:	edc0 6a00 	vstr	s13, [r0]
 80298a6:	ee77 7a87 	vadd.f32	s15, s15, s14
 80298aa:	edc0 7a01 	vstr	s15, [r0, #4]
 80298ae:	f04f 30ff 	mov.w	r0, #4294967295
 80298b2:	e7e4      	b.n	802987e <__ieee754_rem_pio2f+0x62>
 80298b4:	4b68      	ldr	r3, [pc, #416]	; (8029a58 <__ieee754_rem_pio2f+0x23c>)
 80298b6:	429d      	cmp	r5, r3
 80298b8:	dc71      	bgt.n	802999e <__ieee754_rem_pio2f+0x182>
 80298ba:	f000 f8db 	bl	8029a74 <fabsf>
 80298be:	ed9f 7a67 	vldr	s14, [pc, #412]	; 8029a5c <__ieee754_rem_pio2f+0x240>
 80298c2:	eef6 7a00 	vmov.f32	s15, #96	; 0x3f000000  0.5
 80298c6:	eee0 7a07 	vfma.f32	s15, s0, s14
 80298ca:	eefd 7ae7 	vcvt.s32.f32	s15, s15
 80298ce:	eeb8 7ae7 	vcvt.f32.s32	s14, s15
 80298d2:	ee17 0a90 	vmov	r0, s15
 80298d6:	eddf 7a5b 	vldr	s15, [pc, #364]	; 8029a44 <__ieee754_rem_pio2f+0x228>
 80298da:	eea7 0a67 	vfms.f32	s0, s14, s15
 80298de:	281f      	cmp	r0, #31
 80298e0:	eddf 7a5b 	vldr	s15, [pc, #364]	; 8029a50 <__ieee754_rem_pio2f+0x234>
 80298e4:	ee67 7a27 	vmul.f32	s15, s14, s15
 80298e8:	eeb1 6a47 	vneg.f32	s12, s14
 80298ec:	ee70 6a67 	vsub.f32	s13, s0, s15
 80298f0:	ee16 2a90 	vmov	r2, s13
 80298f4:	dc1c      	bgt.n	8029930 <__ieee754_rem_pio2f+0x114>
 80298f6:	495a      	ldr	r1, [pc, #360]	; (8029a60 <__ieee754_rem_pio2f+0x244>)
 80298f8:	1e47      	subs	r7, r0, #1
 80298fa:	f025 03ff 	bic.w	r3, r5, #255	; 0xff
 80298fe:	f851 1027 	ldr.w	r1, [r1, r7, lsl #2]
 8029902:	428b      	cmp	r3, r1
 8029904:	d014      	beq.n	8029930 <__ieee754_rem_pio2f+0x114>
 8029906:	6022      	str	r2, [r4, #0]
 8029908:	ed94 7a00 	vldr	s14, [r4]
 802990c:	ee30 0a47 	vsub.f32	s0, s0, s14
 8029910:	2e00      	cmp	r6, #0
 8029912:	ee30 0a67 	vsub.f32	s0, s0, s15
 8029916:	ed84 0a01 	vstr	s0, [r4, #4]
 802991a:	dab0      	bge.n	802987e <__ieee754_rem_pio2f+0x62>
 802991c:	eeb1 7a47 	vneg.f32	s14, s14
 8029920:	eeb1 0a40 	vneg.f32	s0, s0
 8029924:	ed84 7a00 	vstr	s14, [r4]
 8029928:	ed84 0a01 	vstr	s0, [r4, #4]
 802992c:	4240      	negs	r0, r0
 802992e:	e7a6      	b.n	802987e <__ieee754_rem_pio2f+0x62>
 8029930:	f3c2 51c7 	ubfx	r1, r2, #23, #8
 8029934:	ebc1 51d5 	rsb	r1, r1, r5, lsr #23
 8029938:	2908      	cmp	r1, #8
 802993a:	ea4f 53e5 	mov.w	r3, r5, asr #23
 802993e:	dde2      	ble.n	8029906 <__ieee754_rem_pio2f+0xea>
 8029940:	eddf 5a42 	vldr	s11, [pc, #264]	; 8029a4c <__ieee754_rem_pio2f+0x230>
 8029944:	eef0 6a40 	vmov.f32	s13, s0
 8029948:	eee6 6a25 	vfma.f32	s13, s12, s11
 802994c:	ee70 7a66 	vsub.f32	s15, s0, s13
 8029950:	eee6 7a25 	vfma.f32	s15, s12, s11
 8029954:	eddf 5a3f 	vldr	s11, [pc, #252]	; 8029a54 <__ieee754_rem_pio2f+0x238>
 8029958:	eed7 7a25 	vfnms.f32	s15, s14, s11
 802995c:	ee76 5ae7 	vsub.f32	s11, s13, s15
 8029960:	ee15 2a90 	vmov	r2, s11
 8029964:	f3c2 51c7 	ubfx	r1, r2, #23, #8
 8029968:	1a5b      	subs	r3, r3, r1
 802996a:	2b19      	cmp	r3, #25
 802996c:	dc04      	bgt.n	8029978 <__ieee754_rem_pio2f+0x15c>
 802996e:	edc4 5a00 	vstr	s11, [r4]
 8029972:	eeb0 0a66 	vmov.f32	s0, s13
 8029976:	e7c7      	b.n	8029908 <__ieee754_rem_pio2f+0xec>
 8029978:	eddf 5a3a 	vldr	s11, [pc, #232]	; 8029a64 <__ieee754_rem_pio2f+0x248>
 802997c:	eeb0 0a66 	vmov.f32	s0, s13
 8029980:	eea6 0a25 	vfma.f32	s0, s12, s11
 8029984:	ee76 7ac0 	vsub.f32	s15, s13, s0
 8029988:	eddf 6a37 	vldr	s13, [pc, #220]	; 8029a68 <__ieee754_rem_pio2f+0x24c>
 802998c:	eee6 7a25 	vfma.f32	s15, s12, s11
 8029990:	eed7 7a26 	vfnms.f32	s15, s14, s13
 8029994:	ee30 7a67 	vsub.f32	s14, s0, s15
 8029998:	ed84 7a00 	vstr	s14, [r4]
 802999c:	e7b4      	b.n	8029908 <__ieee754_rem_pio2f+0xec>
 802999e:	f1b5 4fff 	cmp.w	r5, #2139095040	; 0x7f800000
 80299a2:	db06      	blt.n	80299b2 <__ieee754_rem_pio2f+0x196>
 80299a4:	ee70 7a40 	vsub.f32	s15, s0, s0
 80299a8:	edc0 7a01 	vstr	s15, [r0, #4]
 80299ac:	edc0 7a00 	vstr	s15, [r0]
 80299b0:	e742      	b.n	8029838 <__ieee754_rem_pio2f+0x1c>
 80299b2:	15ea      	asrs	r2, r5, #23
 80299b4:	3a86      	subs	r2, #134	; 0x86
 80299b6:	eba5 53c2 	sub.w	r3, r5, r2, lsl #23
 80299ba:	ee07 3a90 	vmov	s15, r3
 80299be:	eebd 7ae7 	vcvt.s32.f32	s14, s15
 80299c2:	eddf 6a2a 	vldr	s13, [pc, #168]	; 8029a6c <__ieee754_rem_pio2f+0x250>
 80299c6:	eeb8 7ac7 	vcvt.f32.s32	s14, s14
 80299ca:	ee77 7ac7 	vsub.f32	s15, s15, s14
 80299ce:	ed8d 7a03 	vstr	s14, [sp, #12]
 80299d2:	ee67 7aa6 	vmul.f32	s15, s15, s13
 80299d6:	eebd 7ae7 	vcvt.s32.f32	s14, s15
 80299da:	eeb8 7ac7 	vcvt.f32.s32	s14, s14
 80299de:	ee77 7ac7 	vsub.f32	s15, s15, s14
 80299e2:	ed8d 7a04 	vstr	s14, [sp, #16]
 80299e6:	ee67 7aa6 	vmul.f32	s15, s15, s13
 80299ea:	eef5 7a40 	vcmp.f32	s15, #0.0
 80299ee:	eef1 fa10 	vmrs	APSR_nzcv, fpscr
 80299f2:	edcd 7a05 	vstr	s15, [sp, #20]
 80299f6:	d11e      	bne.n	8029a36 <__ieee754_rem_pio2f+0x21a>
 80299f8:	eeb5 7a40 	vcmp.f32	s14, #0.0
 80299fc:	eef1 fa10 	vmrs	APSR_nzcv, fpscr
 8029a00:	bf14      	ite	ne
 8029a02:	2302      	movne	r3, #2
 8029a04:	2301      	moveq	r3, #1
 8029a06:	491a      	ldr	r1, [pc, #104]	; (8029a70 <__ieee754_rem_pio2f+0x254>)
 8029a08:	9101      	str	r1, [sp, #4]
 8029a0a:	2102      	movs	r1, #2
 8029a0c:	9100      	str	r1, [sp, #0]
 8029a0e:	a803      	add	r0, sp, #12
 8029a10:	4621      	mov	r1, r4
 8029a12:	f000 f89d 	bl	8029b50 <__kernel_rem_pio2f>
 8029a16:	2e00      	cmp	r6, #0
 8029a18:	f6bf af31 	bge.w	802987e <__ieee754_rem_pio2f+0x62>
 8029a1c:	edd4 7a00 	vldr	s15, [r4]
 8029a20:	eef1 7a67 	vneg.f32	s15, s15
 8029a24:	edc4 7a00 	vstr	s15, [r4]
 8029a28:	edd4 7a01 	vldr	s15, [r4, #4]
 8029a2c:	eef1 7a67 	vneg.f32	s15, s15
 8029a30:	edc4 7a01 	vstr	s15, [r4, #4]
 8029a34:	e77a      	b.n	802992c <__ieee754_rem_pio2f+0x110>
 8029a36:	2303      	movs	r3, #3
 8029a38:	e7e5      	b.n	8029a06 <__ieee754_rem_pio2f+0x1ea>
 8029a3a:	bf00      	nop
 8029a3c:	3f490fd8 	.word	0x3f490fd8
 8029a40:	4016cbe3 	.word	0x4016cbe3
 8029a44:	3fc90f80 	.word	0x3fc90f80
 8029a48:	3fc90fd0 	.word	0x3fc90fd0
 8029a4c:	37354400 	.word	0x37354400
 8029a50:	37354443 	.word	0x37354443
 8029a54:	2e85a308 	.word	0x2e85a308
 8029a58:	43490f80 	.word	0x43490f80
 8029a5c:	3f22f984 	.word	0x3f22f984
 8029a60:	08042250 	.word	0x08042250
 8029a64:	2e85a300 	.word	0x2e85a300
 8029a68:	248d3132 	.word	0x248d3132
 8029a6c:	43800000 	.word	0x43800000
 8029a70:	080422d0 	.word	0x080422d0

08029a74 <fabsf>:
 8029a74:	ee10 3a10 	vmov	r3, s0
 8029a78:	f023 4300 	bic.w	r3, r3, #2147483648	; 0x80000000
 8029a7c:	ee00 3a10 	vmov	s0, r3
 8029a80:	4770      	bx	lr
	...

08029a84 <scalbnf>:
 8029a84:	ee10 3a10 	vmov	r3, s0
 8029a88:	f033 4200 	bics.w	r2, r3, #2147483648	; 0x80000000
 8029a8c:	d02b      	beq.n	8029ae6 <scalbnf+0x62>
 8029a8e:	f1b2 4fff 	cmp.w	r2, #2139095040	; 0x7f800000
 8029a92:	d302      	bcc.n	8029a9a <scalbnf+0x16>
 8029a94:	ee30 0a00 	vadd.f32	s0, s0, s0
 8029a98:	4770      	bx	lr
 8029a9a:	f013 4fff 	tst.w	r3, #2139095040	; 0x7f800000
 8029a9e:	d123      	bne.n	8029ae8 <scalbnf+0x64>
 8029aa0:	4b24      	ldr	r3, [pc, #144]	; (8029b34 <scalbnf+0xb0>)
 8029aa2:	eddf 7a25 	vldr	s15, [pc, #148]	; 8029b38 <scalbnf+0xb4>
 8029aa6:	4298      	cmp	r0, r3
 8029aa8:	ee20 0a27 	vmul.f32	s0, s0, s15
 8029aac:	db17      	blt.n	8029ade <scalbnf+0x5a>
 8029aae:	ee10 3a10 	vmov	r3, s0
 8029ab2:	f3c3 52c7 	ubfx	r2, r3, #23, #8
 8029ab6:	3a19      	subs	r2, #25
 8029ab8:	f24c 3150 	movw	r1, #50000	; 0xc350
 8029abc:	4288      	cmp	r0, r1
 8029abe:	dd15      	ble.n	8029aec <scalbnf+0x68>
 8029ac0:	eddf 7a1e 	vldr	s15, [pc, #120]	; 8029b3c <scalbnf+0xb8>
 8029ac4:	eddf 6a1e 	vldr	s13, [pc, #120]	; 8029b40 <scalbnf+0xbc>
 8029ac8:	ee10 3a10 	vmov	r3, s0
 8029acc:	eeb0 7a67 	vmov.f32	s14, s15
 8029ad0:	2b00      	cmp	r3, #0
 8029ad2:	bfb8      	it	lt
 8029ad4:	eef0 7a66 	vmovlt.f32	s15, s13
 8029ad8:	ee27 0a87 	vmul.f32	s0, s15, s14
 8029adc:	4770      	bx	lr
 8029ade:	eddf 7a19 	vldr	s15, [pc, #100]	; 8029b44 <scalbnf+0xc0>
 8029ae2:	ee27 0a80 	vmul.f32	s0, s15, s0
 8029ae6:	4770      	bx	lr
 8029ae8:	0dd2      	lsrs	r2, r2, #23
 8029aea:	e7e5      	b.n	8029ab8 <scalbnf+0x34>
 8029aec:	4410      	add	r0, r2
 8029aee:	28fe      	cmp	r0, #254	; 0xfe
 8029af0:	dce6      	bgt.n	8029ac0 <scalbnf+0x3c>
 8029af2:	2800      	cmp	r0, #0
 8029af4:	dd06      	ble.n	8029b04 <scalbnf+0x80>
 8029af6:	f023 43ff 	bic.w	r3, r3, #2139095040	; 0x7f800000
 8029afa:	ea43 53c0 	orr.w	r3, r3, r0, lsl #23
 8029afe:	ee00 3a10 	vmov	s0, r3
 8029b02:	4770      	bx	lr
 8029b04:	f110 0f16 	cmn.w	r0, #22
 8029b08:	da09      	bge.n	8029b1e <scalbnf+0x9a>
 8029b0a:	eddf 7a0e 	vldr	s15, [pc, #56]	; 8029b44 <scalbnf+0xc0>
 8029b0e:	eddf 6a0e 	vldr	s13, [pc, #56]	; 8029b48 <scalbnf+0xc4>
 8029b12:	ee10 3a10 	vmov	r3, s0
 8029b16:	eeb0 7a67 	vmov.f32	s14, s15
 8029b1a:	2b00      	cmp	r3, #0
 8029b1c:	e7d9      	b.n	8029ad2 <scalbnf+0x4e>
 8029b1e:	3019      	adds	r0, #25
 8029b20:	f023 43ff 	bic.w	r3, r3, #2139095040	; 0x7f800000
 8029b24:	ea43 53c0 	orr.w	r3, r3, r0, lsl #23
 8029b28:	ed9f 0a08 	vldr	s0, [pc, #32]	; 8029b4c <scalbnf+0xc8>
 8029b2c:	ee07 3a90 	vmov	s15, r3
 8029b30:	e7d7      	b.n	8029ae2 <scalbnf+0x5e>
 8029b32:	bf00      	nop
 8029b34:	ffff3cb0 	.word	0xffff3cb0
 8029b38:	4c000000 	.word	0x4c000000
 8029b3c:	7149f2ca 	.word	0x7149f2ca
 8029b40:	f149f2ca 	.word	0xf149f2ca
 8029b44:	0da24260 	.word	0x0da24260
 8029b48:	8da24260 	.word	0x8da24260
 8029b4c:	33000000 	.word	0x33000000

08029b50 <__kernel_rem_pio2f>:
 8029b50:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 8029b54:	ed2d 8b04 	vpush	{d8-d9}
 8029b58:	b0d9      	sub	sp, #356	; 0x164
 8029b5a:	4688      	mov	r8, r1
 8029b5c:	9002      	str	r0, [sp, #8]
 8029b5e:	49b8      	ldr	r1, [pc, #736]	; (8029e40 <__kernel_rem_pio2f+0x2f0>)
 8029b60:	9866      	ldr	r0, [sp, #408]	; 0x198
 8029b62:	9301      	str	r3, [sp, #4]
 8029b64:	f851 a020 	ldr.w	sl, [r1, r0, lsl #2]
 8029b68:	9901      	ldr	r1, [sp, #4]
 8029b6a:	9b67      	ldr	r3, [sp, #412]	; 0x19c
 8029b6c:	f101 3bff 	add.w	fp, r1, #4294967295
 8029b70:	1d11      	adds	r1, r2, #4
 8029b72:	db25      	blt.n	8029bc0 <__kernel_rem_pio2f+0x70>
 8029b74:	1ed0      	subs	r0, r2, #3
 8029b76:	bf48      	it	mi
 8029b78:	1d10      	addmi	r0, r2, #4
 8029b7a:	10c0      	asrs	r0, r0, #3
 8029b7c:	1c45      	adds	r5, r0, #1
 8029b7e:	00e9      	lsls	r1, r5, #3
 8029b80:	eba0 070b 	sub.w	r7, r0, fp
 8029b84:	ed9f 7ab2 	vldr	s14, [pc, #712]	; 8029e50 <__kernel_rem_pio2f+0x300>
 8029b88:	9103      	str	r1, [sp, #12]
 8029b8a:	eba2 05c5 	sub.w	r5, r2, r5, lsl #3
 8029b8e:	eb0a 0c0b 	add.w	ip, sl, fp
 8029b92:	ae1c      	add	r6, sp, #112	; 0x70
 8029b94:	eb03 0e87 	add.w	lr, r3, r7, lsl #2
 8029b98:	2400      	movs	r4, #0
 8029b9a:	4564      	cmp	r4, ip
 8029b9c:	dd12      	ble.n	8029bc4 <__kernel_rem_pio2f+0x74>
 8029b9e:	9901      	ldr	r1, [sp, #4]
 8029ba0:	ac1c      	add	r4, sp, #112	; 0x70
 8029ba2:	eb04 0481 	add.w	r4, r4, r1, lsl #2
 8029ba6:	f50d 7988 	add.w	r9, sp, #272	; 0x110
 8029baa:	f04f 0c00 	mov.w	ip, #0
 8029bae:	45d4      	cmp	ip, sl
 8029bb0:	dc27      	bgt.n	8029c02 <__kernel_rem_pio2f+0xb2>
 8029bb2:	f8dd e008 	ldr.w	lr, [sp, #8]
 8029bb6:	eddf 7aa6 	vldr	s15, [pc, #664]	; 8029e50 <__kernel_rem_pio2f+0x300>
 8029bba:	4627      	mov	r7, r4
 8029bbc:	2600      	movs	r6, #0
 8029bbe:	e016      	b.n	8029bee <__kernel_rem_pio2f+0x9e>
 8029bc0:	2000      	movs	r0, #0
 8029bc2:	e7db      	b.n	8029b7c <__kernel_rem_pio2f+0x2c>
 8029bc4:	42e7      	cmn	r7, r4
 8029bc6:	bf5d      	ittte	pl
 8029bc8:	f85e 1024 	ldrpl.w	r1, [lr, r4, lsl #2]
 8029bcc:	ee07 1a90 	vmovpl	s15, r1
 8029bd0:	eef8 7ae7 	vcvtpl.f32.s32	s15, s15
 8029bd4:	eef0 7a47 	vmovmi.f32	s15, s14
 8029bd8:	ece6 7a01 	vstmia	r6!, {s15}
 8029bdc:	3401      	adds	r4, #1
 8029bde:	e7dc      	b.n	8029b9a <__kernel_rem_pio2f+0x4a>
 8029be0:	ecfe 6a01 	vldmia	lr!, {s13}
 8029be4:	ed97 7a00 	vldr	s14, [r7]
 8029be8:	eee6 7a87 	vfma.f32	s15, s13, s14
 8029bec:	3601      	adds	r6, #1
 8029bee:	455e      	cmp	r6, fp
 8029bf0:	f1a7 0704 	sub.w	r7, r7, #4
 8029bf4:	ddf4      	ble.n	8029be0 <__kernel_rem_pio2f+0x90>
 8029bf6:	ece9 7a01 	vstmia	r9!, {s15}
 8029bfa:	f10c 0c01 	add.w	ip, ip, #1
 8029bfe:	3404      	adds	r4, #4
 8029c00:	e7d5      	b.n	8029bae <__kernel_rem_pio2f+0x5e>
 8029c02:	a908      	add	r1, sp, #32
 8029c04:	eb01 018a 	add.w	r1, r1, sl, lsl #2
 8029c08:	eb03 0380 	add.w	r3, r3, r0, lsl #2
 8029c0c:	eddf 8a8f 	vldr	s17, [pc, #572]	; 8029e4c <__kernel_rem_pio2f+0x2fc>
 8029c10:	ed9f 9a8d 	vldr	s18, [pc, #564]	; 8029e48 <__kernel_rem_pio2f+0x2f8>
 8029c14:	9105      	str	r1, [sp, #20]
 8029c16:	9304      	str	r3, [sp, #16]
 8029c18:	4656      	mov	r6, sl
 8029c1a:	00b3      	lsls	r3, r6, #2
 8029c1c:	9306      	str	r3, [sp, #24]
 8029c1e:	ab58      	add	r3, sp, #352	; 0x160
 8029c20:	eb03 0086 	add.w	r0, r3, r6, lsl #2
 8029c24:	ac08      	add	r4, sp, #32
 8029c26:	ab44      	add	r3, sp, #272	; 0x110
 8029c28:	ed10 0a14 	vldr	s0, [r0, #-80]	; 0xffffffb0
 8029c2c:	46a4      	mov	ip, r4
 8029c2e:	eb03 0086 	add.w	r0, r3, r6, lsl #2
 8029c32:	4637      	mov	r7, r6
 8029c34:	2f00      	cmp	r7, #0
 8029c36:	f1a0 0004 	sub.w	r0, r0, #4
 8029c3a:	dc4a      	bgt.n	8029cd2 <__kernel_rem_pio2f+0x182>
 8029c3c:	4628      	mov	r0, r5
 8029c3e:	9207      	str	r2, [sp, #28]
 8029c40:	f7ff ff20 	bl	8029a84 <scalbnf>
 8029c44:	eeb0 8a40 	vmov.f32	s16, s0
 8029c48:	eeb4 0a00 	vmov.f32	s0, #64	; 0x3e000000  0.125
 8029c4c:	ee28 0a00 	vmul.f32	s0, s16, s0
 8029c50:	f7ff fcfc 	bl	802964c <floorf>
 8029c54:	eef2 7a00 	vmov.f32	s15, #32	; 0x41000000  8.0
 8029c58:	eea0 8a67 	vfms.f32	s16, s0, s15
 8029c5c:	2d00      	cmp	r5, #0
 8029c5e:	9a07      	ldr	r2, [sp, #28]
 8029c60:	eefd 7ac8 	vcvt.s32.f32	s15, s16
 8029c64:	ee17 9a90 	vmov	r9, s15
 8029c68:	eef8 7ae7 	vcvt.f32.s32	s15, s15
 8029c6c:	ee38 8a67 	vsub.f32	s16, s16, s15
 8029c70:	dd41      	ble.n	8029cf6 <__kernel_rem_pio2f+0x1a6>
 8029c72:	f106 3cff 	add.w	ip, r6, #4294967295
 8029c76:	ab08      	add	r3, sp, #32
 8029c78:	f1c5 0e08 	rsb	lr, r5, #8
 8029c7c:	f853 702c 	ldr.w	r7, [r3, ip, lsl #2]
 8029c80:	fa47 f00e 	asr.w	r0, r7, lr
 8029c84:	4481      	add	r9, r0
 8029c86:	fa00 f00e 	lsl.w	r0, r0, lr
 8029c8a:	1a3f      	subs	r7, r7, r0
 8029c8c:	f1c5 0007 	rsb	r0, r5, #7
 8029c90:	f843 702c 	str.w	r7, [r3, ip, lsl #2]
 8029c94:	4107      	asrs	r7, r0
 8029c96:	2f00      	cmp	r7, #0
 8029c98:	dd3c      	ble.n	8029d14 <__kernel_rem_pio2f+0x1c4>
 8029c9a:	f04f 0e00 	mov.w	lr, #0
 8029c9e:	f109 0901 	add.w	r9, r9, #1
 8029ca2:	4671      	mov	r1, lr
 8029ca4:	4576      	cmp	r6, lr
 8029ca6:	dc67      	bgt.n	8029d78 <__kernel_rem_pio2f+0x228>
 8029ca8:	2d00      	cmp	r5, #0
 8029caa:	dd03      	ble.n	8029cb4 <__kernel_rem_pio2f+0x164>
 8029cac:	2d01      	cmp	r5, #1
 8029cae:	d074      	beq.n	8029d9a <__kernel_rem_pio2f+0x24a>
 8029cb0:	2d02      	cmp	r5, #2
 8029cb2:	d07b      	beq.n	8029dac <__kernel_rem_pio2f+0x25c>
 8029cb4:	2f02      	cmp	r7, #2
 8029cb6:	d12d      	bne.n	8029d14 <__kernel_rem_pio2f+0x1c4>
 8029cb8:	eeb7 0a00 	vmov.f32	s0, #112	; 0x3f800000  1.0
 8029cbc:	ee30 8a48 	vsub.f32	s16, s0, s16
 8029cc0:	b341      	cbz	r1, 8029d14 <__kernel_rem_pio2f+0x1c4>
 8029cc2:	4628      	mov	r0, r5
 8029cc4:	9207      	str	r2, [sp, #28]
 8029cc6:	f7ff fedd 	bl	8029a84 <scalbnf>
 8029cca:	9a07      	ldr	r2, [sp, #28]
 8029ccc:	ee38 8a40 	vsub.f32	s16, s16, s0
 8029cd0:	e020      	b.n	8029d14 <__kernel_rem_pio2f+0x1c4>
 8029cd2:	ee60 7a28 	vmul.f32	s15, s0, s17
 8029cd6:	3f01      	subs	r7, #1
 8029cd8:	eefd 7ae7 	vcvt.s32.f32	s15, s15
 8029cdc:	eef8 7ae7 	vcvt.f32.s32	s15, s15
 8029ce0:	eea7 0ac9 	vfms.f32	s0, s15, s18
 8029ce4:	eebd 0ac0 	vcvt.s32.f32	s0, s0
 8029ce8:	ecac 0a01 	vstmia	ip!, {s0}
 8029cec:	ed90 0a00 	vldr	s0, [r0]
 8029cf0:	ee37 0a80 	vadd.f32	s0, s15, s0
 8029cf4:	e79e      	b.n	8029c34 <__kernel_rem_pio2f+0xe4>
 8029cf6:	d105      	bne.n	8029d04 <__kernel_rem_pio2f+0x1b4>
 8029cf8:	1e70      	subs	r0, r6, #1
 8029cfa:	ab08      	add	r3, sp, #32
 8029cfc:	f853 7020 	ldr.w	r7, [r3, r0, lsl #2]
 8029d00:	11ff      	asrs	r7, r7, #7
 8029d02:	e7c8      	b.n	8029c96 <__kernel_rem_pio2f+0x146>
 8029d04:	eef6 7a00 	vmov.f32	s15, #96	; 0x3f000000  0.5
 8029d08:	eeb4 8ae7 	vcmpe.f32	s16, s15
 8029d0c:	eef1 fa10 	vmrs	APSR_nzcv, fpscr
 8029d10:	da30      	bge.n	8029d74 <__kernel_rem_pio2f+0x224>
 8029d12:	2700      	movs	r7, #0
 8029d14:	eeb5 8a40 	vcmp.f32	s16, #0.0
 8029d18:	eef1 fa10 	vmrs	APSR_nzcv, fpscr
 8029d1c:	f040 809a 	bne.w	8029e54 <__kernel_rem_pio2f+0x304>
 8029d20:	1e74      	subs	r4, r6, #1
 8029d22:	46a4      	mov	ip, r4
 8029d24:	2100      	movs	r1, #0
 8029d26:	45d4      	cmp	ip, sl
 8029d28:	da47      	bge.n	8029dba <__kernel_rem_pio2f+0x26a>
 8029d2a:	2900      	cmp	r1, #0
 8029d2c:	d063      	beq.n	8029df6 <__kernel_rem_pio2f+0x2a6>
 8029d2e:	ab08      	add	r3, sp, #32
 8029d30:	3d08      	subs	r5, #8
 8029d32:	f853 3024 	ldr.w	r3, [r3, r4, lsl #2]
 8029d36:	2b00      	cmp	r3, #0
 8029d38:	d07f      	beq.n	8029e3a <__kernel_rem_pio2f+0x2ea>
 8029d3a:	4628      	mov	r0, r5
 8029d3c:	eeb7 0a00 	vmov.f32	s0, #112	; 0x3f800000  1.0
 8029d40:	f7ff fea0 	bl	8029a84 <scalbnf>
 8029d44:	1c63      	adds	r3, r4, #1
 8029d46:	aa44      	add	r2, sp, #272	; 0x110
 8029d48:	ed9f 7a40 	vldr	s14, [pc, #256]	; 8029e4c <__kernel_rem_pio2f+0x2fc>
 8029d4c:	0099      	lsls	r1, r3, #2
 8029d4e:	eb02 0283 	add.w	r2, r2, r3, lsl #2
 8029d52:	4623      	mov	r3, r4
 8029d54:	2b00      	cmp	r3, #0
 8029d56:	f280 80ad 	bge.w	8029eb4 <__kernel_rem_pio2f+0x364>
 8029d5a:	4623      	mov	r3, r4
 8029d5c:	2b00      	cmp	r3, #0
 8029d5e:	f2c0 80cb 	blt.w	8029ef8 <__kernel_rem_pio2f+0x3a8>
 8029d62:	aa44      	add	r2, sp, #272	; 0x110
 8029d64:	eb02 0583 	add.w	r5, r2, r3, lsl #2
 8029d68:	4e36      	ldr	r6, [pc, #216]	; (8029e44 <__kernel_rem_pio2f+0x2f4>)
 8029d6a:	eddf 7a39 	vldr	s15, [pc, #228]	; 8029e50 <__kernel_rem_pio2f+0x300>
 8029d6e:	2000      	movs	r0, #0
 8029d70:	1ae2      	subs	r2, r4, r3
 8029d72:	e0b6      	b.n	8029ee2 <__kernel_rem_pio2f+0x392>
 8029d74:	2702      	movs	r7, #2
 8029d76:	e790      	b.n	8029c9a <__kernel_rem_pio2f+0x14a>
 8029d78:	6820      	ldr	r0, [r4, #0]
 8029d7a:	b949      	cbnz	r1, 8029d90 <__kernel_rem_pio2f+0x240>
 8029d7c:	b118      	cbz	r0, 8029d86 <__kernel_rem_pio2f+0x236>
 8029d7e:	f5c0 7080 	rsb	r0, r0, #256	; 0x100
 8029d82:	6020      	str	r0, [r4, #0]
 8029d84:	2001      	movs	r0, #1
 8029d86:	f10e 0e01 	add.w	lr, lr, #1
 8029d8a:	3404      	adds	r4, #4
 8029d8c:	4601      	mov	r1, r0
 8029d8e:	e789      	b.n	8029ca4 <__kernel_rem_pio2f+0x154>
 8029d90:	f1c0 00ff 	rsb	r0, r0, #255	; 0xff
 8029d94:	6020      	str	r0, [r4, #0]
 8029d96:	4608      	mov	r0, r1
 8029d98:	e7f5      	b.n	8029d86 <__kernel_rem_pio2f+0x236>
 8029d9a:	1e74      	subs	r4, r6, #1
 8029d9c:	ab08      	add	r3, sp, #32
 8029d9e:	f853 0024 	ldr.w	r0, [r3, r4, lsl #2]
 8029da2:	f000 007f 	and.w	r0, r0, #127	; 0x7f
 8029da6:	f843 0024 	str.w	r0, [r3, r4, lsl #2]
 8029daa:	e783      	b.n	8029cb4 <__kernel_rem_pio2f+0x164>
 8029dac:	1e74      	subs	r4, r6, #1
 8029dae:	ab08      	add	r3, sp, #32
 8029db0:	f853 0024 	ldr.w	r0, [r3, r4, lsl #2]
 8029db4:	f000 003f 	and.w	r0, r0, #63	; 0x3f
 8029db8:	e7f5      	b.n	8029da6 <__kernel_rem_pio2f+0x256>
 8029dba:	ab08      	add	r3, sp, #32
 8029dbc:	f853 002c 	ldr.w	r0, [r3, ip, lsl #2]
 8029dc0:	f10c 3cff 	add.w	ip, ip, #4294967295
 8029dc4:	4301      	orrs	r1, r0
 8029dc6:	e7ae      	b.n	8029d26 <__kernel_rem_pio2f+0x1d6>
 8029dc8:	3001      	adds	r0, #1
 8029dca:	f854 7d04 	ldr.w	r7, [r4, #-4]!
 8029dce:	2f00      	cmp	r7, #0
 8029dd0:	d0fa      	beq.n	8029dc8 <__kernel_rem_pio2f+0x278>
 8029dd2:	9b06      	ldr	r3, [sp, #24]
 8029dd4:	f503 73b0 	add.w	r3, r3, #352	; 0x160
 8029dd8:	eb0d 0403 	add.w	r4, sp, r3
 8029ddc:	9b01      	ldr	r3, [sp, #4]
 8029dde:	18f7      	adds	r7, r6, r3
 8029de0:	ab1c      	add	r3, sp, #112	; 0x70
 8029de2:	f106 0c01 	add.w	ip, r6, #1
 8029de6:	3c4c      	subs	r4, #76	; 0x4c
 8029de8:	eb03 0787 	add.w	r7, r3, r7, lsl #2
 8029dec:	4430      	add	r0, r6
 8029dee:	4560      	cmp	r0, ip
 8029df0:	da04      	bge.n	8029dfc <__kernel_rem_pio2f+0x2ac>
 8029df2:	4606      	mov	r6, r0
 8029df4:	e711      	b.n	8029c1a <__kernel_rem_pio2f+0xca>
 8029df6:	9c05      	ldr	r4, [sp, #20]
 8029df8:	2001      	movs	r0, #1
 8029dfa:	e7e6      	b.n	8029dca <__kernel_rem_pio2f+0x27a>
 8029dfc:	9b04      	ldr	r3, [sp, #16]
 8029dfe:	f8dd e008 	ldr.w	lr, [sp, #8]
 8029e02:	f853 302c 	ldr.w	r3, [r3, ip, lsl #2]
 8029e06:	9306      	str	r3, [sp, #24]
 8029e08:	ee07 3a90 	vmov	s15, r3
 8029e0c:	eef8 7ae7 	vcvt.f32.s32	s15, s15
 8029e10:	2600      	movs	r6, #0
 8029e12:	ece7 7a01 	vstmia	r7!, {s15}
 8029e16:	eddf 7a0e 	vldr	s15, [pc, #56]	; 8029e50 <__kernel_rem_pio2f+0x300>
 8029e1a:	46b9      	mov	r9, r7
 8029e1c:	455e      	cmp	r6, fp
 8029e1e:	dd04      	ble.n	8029e2a <__kernel_rem_pio2f+0x2da>
 8029e20:	ece4 7a01 	vstmia	r4!, {s15}
 8029e24:	f10c 0c01 	add.w	ip, ip, #1
 8029e28:	e7e1      	b.n	8029dee <__kernel_rem_pio2f+0x29e>
 8029e2a:	ecfe 6a01 	vldmia	lr!, {s13}
 8029e2e:	ed39 7a01 	vldmdb	r9!, {s14}
 8029e32:	3601      	adds	r6, #1
 8029e34:	eee6 7a87 	vfma.f32	s15, s13, s14
 8029e38:	e7f0      	b.n	8029e1c <__kernel_rem_pio2f+0x2cc>
 8029e3a:	3c01      	subs	r4, #1
 8029e3c:	e777      	b.n	8029d2e <__kernel_rem_pio2f+0x1de>
 8029e3e:	bf00      	nop
 8029e40:	08042614 	.word	0x08042614
 8029e44:	080425e8 	.word	0x080425e8
 8029e48:	43800000 	.word	0x43800000
 8029e4c:	3b800000 	.word	0x3b800000
 8029e50:	00000000 	.word	0x00000000
 8029e54:	9b03      	ldr	r3, [sp, #12]
 8029e56:	eeb0 0a48 	vmov.f32	s0, s16
 8029e5a:	1a98      	subs	r0, r3, r2
 8029e5c:	f7ff fe12 	bl	8029a84 <scalbnf>
 8029e60:	ed1f 7a07 	vldr	s14, [pc, #-28]	; 8029e48 <__kernel_rem_pio2f+0x2f8>
 8029e64:	eeb4 0ac7 	vcmpe.f32	s0, s14
 8029e68:	eef1 fa10 	vmrs	APSR_nzcv, fpscr
 8029e6c:	db19      	blt.n	8029ea2 <__kernel_rem_pio2f+0x352>
 8029e6e:	ed5f 7a09 	vldr	s15, [pc, #-36]	; 8029e4c <__kernel_rem_pio2f+0x2fc>
 8029e72:	ee60 7a27 	vmul.f32	s15, s0, s15
 8029e76:	aa08      	add	r2, sp, #32
 8029e78:	eefd 7ae7 	vcvt.s32.f32	s15, s15
 8029e7c:	1c74      	adds	r4, r6, #1
 8029e7e:	eef8 7ae7 	vcvt.f32.s32	s15, s15
 8029e82:	3508      	adds	r5, #8
 8029e84:	eea7 0ac7 	vfms.f32	s0, s15, s14
 8029e88:	eefd 7ae7 	vcvt.s32.f32	s15, s15
 8029e8c:	eebd 0ac0 	vcvt.s32.f32	s0, s0
 8029e90:	ee10 3a10 	vmov	r3, s0
 8029e94:	f842 3026 	str.w	r3, [r2, r6, lsl #2]
 8029e98:	ee17 3a90 	vmov	r3, s15
 8029e9c:	f842 3024 	str.w	r3, [r2, r4, lsl #2]
 8029ea0:	e74b      	b.n	8029d3a <__kernel_rem_pio2f+0x1ea>
 8029ea2:	eebd 0ac0 	vcvt.s32.f32	s0, s0
 8029ea6:	aa08      	add	r2, sp, #32
 8029ea8:	ee10 3a10 	vmov	r3, s0
 8029eac:	4634      	mov	r4, r6
 8029eae:	f842 3026 	str.w	r3, [r2, r6, lsl #2]
 8029eb2:	e742      	b.n	8029d3a <__kernel_rem_pio2f+0x1ea>
 8029eb4:	a808      	add	r0, sp, #32
 8029eb6:	f850 0023 	ldr.w	r0, [r0, r3, lsl #2]
 8029eba:	9001      	str	r0, [sp, #4]
 8029ebc:	ee07 0a90 	vmov	s15, r0
 8029ec0:	eef8 7ae7 	vcvt.f32.s32	s15, s15
 8029ec4:	3b01      	subs	r3, #1
 8029ec6:	ee67 7a80 	vmul.f32	s15, s15, s0
 8029eca:	ee20 0a07 	vmul.f32	s0, s0, s14
 8029ece:	ed62 7a01 	vstmdb	r2!, {s15}
 8029ed2:	e73f      	b.n	8029d54 <__kernel_rem_pio2f+0x204>
 8029ed4:	ecf6 6a01 	vldmia	r6!, {s13}
 8029ed8:	ecb5 7a01 	vldmia	r5!, {s14}
 8029edc:	eee6 7a87 	vfma.f32	s15, s13, s14
 8029ee0:	3001      	adds	r0, #1
 8029ee2:	4550      	cmp	r0, sl
 8029ee4:	dc01      	bgt.n	8029eea <__kernel_rem_pio2f+0x39a>
 8029ee6:	4290      	cmp	r0, r2
 8029ee8:	ddf4      	ble.n	8029ed4 <__kernel_rem_pio2f+0x384>
 8029eea:	a858      	add	r0, sp, #352	; 0x160
 8029eec:	eb00 0282 	add.w	r2, r0, r2, lsl #2
 8029ef0:	ed42 7a28 	vstr	s15, [r2, #-160]	; 0xffffff60
 8029ef4:	3b01      	subs	r3, #1
 8029ef6:	e731      	b.n	8029d5c <__kernel_rem_pio2f+0x20c>
 8029ef8:	9b66      	ldr	r3, [sp, #408]	; 0x198
 8029efa:	2b02      	cmp	r3, #2
 8029efc:	dc09      	bgt.n	8029f12 <__kernel_rem_pio2f+0x3c2>
 8029efe:	2b00      	cmp	r3, #0
 8029f00:	dc2b      	bgt.n	8029f5a <__kernel_rem_pio2f+0x40a>
 8029f02:	d044      	beq.n	8029f8e <__kernel_rem_pio2f+0x43e>
 8029f04:	f009 0007 	and.w	r0, r9, #7
 8029f08:	b059      	add	sp, #356	; 0x164
 8029f0a:	ecbd 8b04 	vpop	{d8-d9}
 8029f0e:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
 8029f12:	9b66      	ldr	r3, [sp, #408]	; 0x198
 8029f14:	2b03      	cmp	r3, #3
 8029f16:	d1f5      	bne.n	8029f04 <__kernel_rem_pio2f+0x3b4>
 8029f18:	aa30      	add	r2, sp, #192	; 0xc0
 8029f1a:	1f0b      	subs	r3, r1, #4
 8029f1c:	4413      	add	r3, r2
 8029f1e:	461a      	mov	r2, r3
 8029f20:	4620      	mov	r0, r4
 8029f22:	2800      	cmp	r0, #0
 8029f24:	f1a2 0204 	sub.w	r2, r2, #4
 8029f28:	dc52      	bgt.n	8029fd0 <__kernel_rem_pio2f+0x480>
 8029f2a:	4622      	mov	r2, r4
 8029f2c:	2a01      	cmp	r2, #1
 8029f2e:	f1a3 0304 	sub.w	r3, r3, #4
 8029f32:	dc5d      	bgt.n	8029ff0 <__kernel_rem_pio2f+0x4a0>
 8029f34:	ab30      	add	r3, sp, #192	; 0xc0
 8029f36:	ed5f 7a3a 	vldr	s15, [pc, #-232]	; 8029e50 <__kernel_rem_pio2f+0x300>
 8029f3a:	440b      	add	r3, r1
 8029f3c:	2c01      	cmp	r4, #1
 8029f3e:	dc67      	bgt.n	802a010 <__kernel_rem_pio2f+0x4c0>
 8029f40:	eddd 6a30 	vldr	s13, [sp, #192]	; 0xc0
 8029f44:	ed9d 7a31 	vldr	s14, [sp, #196]	; 0xc4
 8029f48:	2f00      	cmp	r7, #0
 8029f4a:	d167      	bne.n	802a01c <__kernel_rem_pio2f+0x4cc>
 8029f4c:	edc8 6a00 	vstr	s13, [r8]
 8029f50:	ed88 7a01 	vstr	s14, [r8, #4]
 8029f54:	edc8 7a02 	vstr	s15, [r8, #8]
 8029f58:	e7d4      	b.n	8029f04 <__kernel_rem_pio2f+0x3b4>
 8029f5a:	ab30      	add	r3, sp, #192	; 0xc0
 8029f5c:	ed1f 7a44 	vldr	s14, [pc, #-272]	; 8029e50 <__kernel_rem_pio2f+0x300>
 8029f60:	440b      	add	r3, r1
 8029f62:	4622      	mov	r2, r4
 8029f64:	2a00      	cmp	r2, #0
 8029f66:	da24      	bge.n	8029fb2 <__kernel_rem_pio2f+0x462>
 8029f68:	b34f      	cbz	r7, 8029fbe <__kernel_rem_pio2f+0x46e>
 8029f6a:	eef1 7a47 	vneg.f32	s15, s14
 8029f6e:	edc8 7a00 	vstr	s15, [r8]
 8029f72:	eddd 7a30 	vldr	s15, [sp, #192]	; 0xc0
 8029f76:	ee77 7ac7 	vsub.f32	s15, s15, s14
 8029f7a:	aa31      	add	r2, sp, #196	; 0xc4
 8029f7c:	2301      	movs	r3, #1
 8029f7e:	429c      	cmp	r4, r3
 8029f80:	da20      	bge.n	8029fc4 <__kernel_rem_pio2f+0x474>
 8029f82:	b10f      	cbz	r7, 8029f88 <__kernel_rem_pio2f+0x438>
 8029f84:	eef1 7a67 	vneg.f32	s15, s15
 8029f88:	edc8 7a01 	vstr	s15, [r8, #4]
 8029f8c:	e7ba      	b.n	8029f04 <__kernel_rem_pio2f+0x3b4>
 8029f8e:	ab30      	add	r3, sp, #192	; 0xc0
 8029f90:	ed5f 7a51 	vldr	s15, [pc, #-324]	; 8029e50 <__kernel_rem_pio2f+0x300>
 8029f94:	440b      	add	r3, r1
 8029f96:	2c00      	cmp	r4, #0
 8029f98:	da05      	bge.n	8029fa6 <__kernel_rem_pio2f+0x456>
 8029f9a:	b10f      	cbz	r7, 8029fa0 <__kernel_rem_pio2f+0x450>
 8029f9c:	eef1 7a67 	vneg.f32	s15, s15
 8029fa0:	edc8 7a00 	vstr	s15, [r8]
 8029fa4:	e7ae      	b.n	8029f04 <__kernel_rem_pio2f+0x3b4>
 8029fa6:	ed33 7a01 	vldmdb	r3!, {s14}
 8029faa:	3c01      	subs	r4, #1
 8029fac:	ee77 7a87 	vadd.f32	s15, s15, s14
 8029fb0:	e7f1      	b.n	8029f96 <__kernel_rem_pio2f+0x446>
 8029fb2:	ed73 7a01 	vldmdb	r3!, {s15}
 8029fb6:	3a01      	subs	r2, #1
 8029fb8:	ee37 7a27 	vadd.f32	s14, s14, s15
 8029fbc:	e7d2      	b.n	8029f64 <__kernel_rem_pio2f+0x414>
 8029fbe:	eef0 7a47 	vmov.f32	s15, s14
 8029fc2:	e7d4      	b.n	8029f6e <__kernel_rem_pio2f+0x41e>
 8029fc4:	ecb2 7a01 	vldmia	r2!, {s14}
 8029fc8:	3301      	adds	r3, #1
 8029fca:	ee77 7a87 	vadd.f32	s15, s15, s14
 8029fce:	e7d6      	b.n	8029f7e <__kernel_rem_pio2f+0x42e>
 8029fd0:	edd2 7a00 	vldr	s15, [r2]
 8029fd4:	edd2 6a01 	vldr	s13, [r2, #4]
 8029fd8:	ee37 7aa6 	vadd.f32	s14, s15, s13
 8029fdc:	3801      	subs	r0, #1
 8029fde:	ee77 7ac7 	vsub.f32	s15, s15, s14
 8029fe2:	ed82 7a00 	vstr	s14, [r2]
 8029fe6:	ee77 7aa6 	vadd.f32	s15, s15, s13
 8029fea:	edc2 7a01 	vstr	s15, [r2, #4]
 8029fee:	e798      	b.n	8029f22 <__kernel_rem_pio2f+0x3d2>
 8029ff0:	edd3 7a00 	vldr	s15, [r3]
 8029ff4:	edd3 6a01 	vldr	s13, [r3, #4]
 8029ff8:	ee37 7aa6 	vadd.f32	s14, s15, s13
 8029ffc:	3a01      	subs	r2, #1
 8029ffe:	ee77 7ac7 	vsub.f32	s15, s15, s14
 802a002:	ed83 7a00 	vstr	s14, [r3]
 802a006:	ee77 7aa6 	vadd.f32	s15, s15, s13
 802a00a:	edc3 7a01 	vstr	s15, [r3, #4]
 802a00e:	e78d      	b.n	8029f2c <__kernel_rem_pio2f+0x3dc>
 802a010:	ed33 7a01 	vldmdb	r3!, {s14}
 802a014:	3c01      	subs	r4, #1
 802a016:	ee77 7a87 	vadd.f32	s15, s15, s14
 802a01a:	e78f      	b.n	8029f3c <__kernel_rem_pio2f+0x3ec>
 802a01c:	eef1 6a66 	vneg.f32	s13, s13
 802a020:	eeb1 7a47 	vneg.f32	s14, s14
 802a024:	edc8 6a00 	vstr	s13, [r8]
 802a028:	ed88 7a01 	vstr	s14, [r8, #4]
 802a02c:	eef1 7a67 	vneg.f32	s15, s15
 802a030:	e790      	b.n	8029f54 <__kernel_rem_pio2f+0x404>
 802a032:	bf00      	nop

0802a034 <abort>:
 802a034:	b508      	push	{r3, lr}
 802a036:	2006      	movs	r0, #6
 802a038:	f000 fa3a 	bl	802a4b0 <raise>
 802a03c:	2001      	movs	r0, #1
 802a03e:	f7d8 fa0d 	bl	800245c <_exit>
	...

0802a044 <__assert_func>:
 802a044:	b51f      	push	{r0, r1, r2, r3, r4, lr}
 802a046:	4614      	mov	r4, r2
 802a048:	461a      	mov	r2, r3
 802a04a:	4b09      	ldr	r3, [pc, #36]	; (802a070 <__assert_func+0x2c>)
 802a04c:	681b      	ldr	r3, [r3, #0]
 802a04e:	4605      	mov	r5, r0
 802a050:	68d8      	ldr	r0, [r3, #12]
 802a052:	b14c      	cbz	r4, 802a068 <__assert_func+0x24>
 802a054:	4b07      	ldr	r3, [pc, #28]	; (802a074 <__assert_func+0x30>)
 802a056:	9100      	str	r1, [sp, #0]
 802a058:	e9cd 3401 	strd	r3, r4, [sp, #4]
 802a05c:	4906      	ldr	r1, [pc, #24]	; (802a078 <__assert_func+0x34>)
 802a05e:	462b      	mov	r3, r5
 802a060:	f000 f982 	bl	802a368 <fiprintf>
 802a064:	f7ff ffe6 	bl	802a034 <abort>
 802a068:	4b04      	ldr	r3, [pc, #16]	; (802a07c <__assert_func+0x38>)
 802a06a:	461c      	mov	r4, r3
 802a06c:	e7f3      	b.n	802a056 <__assert_func+0x12>
 802a06e:	bf00      	nop
 802a070:	20000160 	.word	0x20000160
 802a074:	08042620 	.word	0x08042620
 802a078:	0804262d 	.word	0x0804262d
 802a07c:	0804265b 	.word	0x0804265b

0802a080 <atexit>:
 802a080:	2300      	movs	r3, #0
 802a082:	4601      	mov	r1, r0
 802a084:	461a      	mov	r2, r3
 802a086:	4618      	mov	r0, r3
 802a088:	f000 bb16 	b.w	802a6b8 <__register_exitproc>

0802a08c <malloc>:
 802a08c:	4b02      	ldr	r3, [pc, #8]	; (802a098 <malloc+0xc>)
 802a08e:	4601      	mov	r1, r0
 802a090:	6818      	ldr	r0, [r3, #0]
 802a092:	f000 b82b 	b.w	802a0ec <_malloc_r>
 802a096:	bf00      	nop
 802a098:	20000160 	.word	0x20000160

0802a09c <free>:
 802a09c:	4b02      	ldr	r3, [pc, #8]	; (802a0a8 <free+0xc>)
 802a09e:	4601      	mov	r1, r0
 802a0a0:	6818      	ldr	r0, [r3, #0]
 802a0a2:	f000 bb67 	b.w	802a774 <_free_r>
 802a0a6:	bf00      	nop
 802a0a8:	20000160 	.word	0x20000160

0802a0ac <sbrk_aligned>:
 802a0ac:	b570      	push	{r4, r5, r6, lr}
 802a0ae:	4e0e      	ldr	r6, [pc, #56]	; (802a0e8 <sbrk_aligned+0x3c>)
 802a0b0:	460c      	mov	r4, r1
 802a0b2:	6831      	ldr	r1, [r6, #0]
 802a0b4:	4605      	mov	r5, r0
 802a0b6:	b911      	cbnz	r1, 802a0be <sbrk_aligned+0x12>
 802a0b8:	f000 faa0 	bl	802a5fc <_sbrk_r>
 802a0bc:	6030      	str	r0, [r6, #0]
 802a0be:	4621      	mov	r1, r4
 802a0c0:	4628      	mov	r0, r5
 802a0c2:	f000 fa9b 	bl	802a5fc <_sbrk_r>
 802a0c6:	1c43      	adds	r3, r0, #1
 802a0c8:	d00a      	beq.n	802a0e0 <sbrk_aligned+0x34>
 802a0ca:	1cc4      	adds	r4, r0, #3
 802a0cc:	f024 0403 	bic.w	r4, r4, #3
 802a0d0:	42a0      	cmp	r0, r4
 802a0d2:	d007      	beq.n	802a0e4 <sbrk_aligned+0x38>
 802a0d4:	1a21      	subs	r1, r4, r0
 802a0d6:	4628      	mov	r0, r5
 802a0d8:	f000 fa90 	bl	802a5fc <_sbrk_r>
 802a0dc:	3001      	adds	r0, #1
 802a0de:	d101      	bne.n	802a0e4 <sbrk_aligned+0x38>
 802a0e0:	f04f 34ff 	mov.w	r4, #4294967295
 802a0e4:	4620      	mov	r0, r4
 802a0e6:	bd70      	pop	{r4, r5, r6, pc}
 802a0e8:	2001387c 	.word	0x2001387c

0802a0ec <_malloc_r>:
 802a0ec:	e92d 43f8 	stmdb	sp!, {r3, r4, r5, r6, r7, r8, r9, lr}
 802a0f0:	1ccd      	adds	r5, r1, #3
 802a0f2:	f025 0503 	bic.w	r5, r5, #3
 802a0f6:	3508      	adds	r5, #8
 802a0f8:	2d0c      	cmp	r5, #12
 802a0fa:	bf38      	it	cc
 802a0fc:	250c      	movcc	r5, #12
 802a0fe:	2d00      	cmp	r5, #0
 802a100:	4607      	mov	r7, r0
 802a102:	db01      	blt.n	802a108 <_malloc_r+0x1c>
 802a104:	42a9      	cmp	r1, r5
 802a106:	d905      	bls.n	802a114 <_malloc_r+0x28>
 802a108:	230c      	movs	r3, #12
 802a10a:	603b      	str	r3, [r7, #0]
 802a10c:	2600      	movs	r6, #0
 802a10e:	4630      	mov	r0, r6
 802a110:	e8bd 83f8 	ldmia.w	sp!, {r3, r4, r5, r6, r7, r8, r9, pc}
 802a114:	f8df 80d0 	ldr.w	r8, [pc, #208]	; 802a1e8 <_malloc_r+0xfc>
 802a118:	f000 f868 	bl	802a1ec <__malloc_lock>
 802a11c:	f8d8 3000 	ldr.w	r3, [r8]
 802a120:	461c      	mov	r4, r3
 802a122:	bb5c      	cbnz	r4, 802a17c <_malloc_r+0x90>
 802a124:	4629      	mov	r1, r5
 802a126:	4638      	mov	r0, r7
 802a128:	f7ff ffc0 	bl	802a0ac <sbrk_aligned>
 802a12c:	1c43      	adds	r3, r0, #1
 802a12e:	4604      	mov	r4, r0
 802a130:	d155      	bne.n	802a1de <_malloc_r+0xf2>
 802a132:	f8d8 4000 	ldr.w	r4, [r8]
 802a136:	4626      	mov	r6, r4
 802a138:	2e00      	cmp	r6, #0
 802a13a:	d145      	bne.n	802a1c8 <_malloc_r+0xdc>
 802a13c:	2c00      	cmp	r4, #0
 802a13e:	d048      	beq.n	802a1d2 <_malloc_r+0xe6>
 802a140:	6823      	ldr	r3, [r4, #0]
 802a142:	4631      	mov	r1, r6
 802a144:	4638      	mov	r0, r7
 802a146:	eb04 0903 	add.w	r9, r4, r3
 802a14a:	f000 fa57 	bl	802a5fc <_sbrk_r>
 802a14e:	4581      	cmp	r9, r0
 802a150:	d13f      	bne.n	802a1d2 <_malloc_r+0xe6>
 802a152:	6821      	ldr	r1, [r4, #0]
 802a154:	1a6d      	subs	r5, r5, r1
 802a156:	4629      	mov	r1, r5
 802a158:	4638      	mov	r0, r7
 802a15a:	f7ff ffa7 	bl	802a0ac <sbrk_aligned>
 802a15e:	3001      	adds	r0, #1
 802a160:	d037      	beq.n	802a1d2 <_malloc_r+0xe6>
 802a162:	6823      	ldr	r3, [r4, #0]
 802a164:	442b      	add	r3, r5
 802a166:	6023      	str	r3, [r4, #0]
 802a168:	f8d8 3000 	ldr.w	r3, [r8]
 802a16c:	2b00      	cmp	r3, #0
 802a16e:	d038      	beq.n	802a1e2 <_malloc_r+0xf6>
 802a170:	685a      	ldr	r2, [r3, #4]
 802a172:	42a2      	cmp	r2, r4
 802a174:	d12b      	bne.n	802a1ce <_malloc_r+0xe2>
 802a176:	2200      	movs	r2, #0
 802a178:	605a      	str	r2, [r3, #4]
 802a17a:	e00f      	b.n	802a19c <_malloc_r+0xb0>
 802a17c:	6822      	ldr	r2, [r4, #0]
 802a17e:	1b52      	subs	r2, r2, r5
 802a180:	d41f      	bmi.n	802a1c2 <_malloc_r+0xd6>
 802a182:	2a0b      	cmp	r2, #11
 802a184:	d917      	bls.n	802a1b6 <_malloc_r+0xca>
 802a186:	1961      	adds	r1, r4, r5
 802a188:	42a3      	cmp	r3, r4
 802a18a:	6025      	str	r5, [r4, #0]
 802a18c:	bf18      	it	ne
 802a18e:	6059      	strne	r1, [r3, #4]
 802a190:	6863      	ldr	r3, [r4, #4]
 802a192:	bf08      	it	eq
 802a194:	f8c8 1000 	streq.w	r1, [r8]
 802a198:	5162      	str	r2, [r4, r5]
 802a19a:	604b      	str	r3, [r1, #4]
 802a19c:	4638      	mov	r0, r7
 802a19e:	f104 060b 	add.w	r6, r4, #11
 802a1a2:	f000 f829 	bl	802a1f8 <__malloc_unlock>
 802a1a6:	f026 0607 	bic.w	r6, r6, #7
 802a1aa:	1d23      	adds	r3, r4, #4
 802a1ac:	1af2      	subs	r2, r6, r3
 802a1ae:	d0ae      	beq.n	802a10e <_malloc_r+0x22>
 802a1b0:	1b9b      	subs	r3, r3, r6
 802a1b2:	50a3      	str	r3, [r4, r2]
 802a1b4:	e7ab      	b.n	802a10e <_malloc_r+0x22>
 802a1b6:	42a3      	cmp	r3, r4
 802a1b8:	6862      	ldr	r2, [r4, #4]
 802a1ba:	d1dd      	bne.n	802a178 <_malloc_r+0x8c>
 802a1bc:	f8c8 2000 	str.w	r2, [r8]
 802a1c0:	e7ec      	b.n	802a19c <_malloc_r+0xb0>
 802a1c2:	4623      	mov	r3, r4
 802a1c4:	6864      	ldr	r4, [r4, #4]
 802a1c6:	e7ac      	b.n	802a122 <_malloc_r+0x36>
 802a1c8:	4634      	mov	r4, r6
 802a1ca:	6876      	ldr	r6, [r6, #4]
 802a1cc:	e7b4      	b.n	802a138 <_malloc_r+0x4c>
 802a1ce:	4613      	mov	r3, r2
 802a1d0:	e7cc      	b.n	802a16c <_malloc_r+0x80>
 802a1d2:	230c      	movs	r3, #12
 802a1d4:	603b      	str	r3, [r7, #0]
 802a1d6:	4638      	mov	r0, r7
 802a1d8:	f000 f80e 	bl	802a1f8 <__malloc_unlock>
 802a1dc:	e797      	b.n	802a10e <_malloc_r+0x22>
 802a1de:	6025      	str	r5, [r4, #0]
 802a1e0:	e7dc      	b.n	802a19c <_malloc_r+0xb0>
 802a1e2:	605b      	str	r3, [r3, #4]
 802a1e4:	deff      	udf	#255	; 0xff
 802a1e6:	bf00      	nop
 802a1e8:	20013878 	.word	0x20013878

0802a1ec <__malloc_lock>:
 802a1ec:	4801      	ldr	r0, [pc, #4]	; (802a1f4 <__malloc_lock+0x8>)
 802a1ee:	f000 ba52 	b.w	802a696 <__retarget_lock_acquire_recursive>
 802a1f2:	bf00      	nop
 802a1f4:	200139c1 	.word	0x200139c1

0802a1f8 <__malloc_unlock>:
 802a1f8:	4801      	ldr	r0, [pc, #4]	; (802a200 <__malloc_unlock+0x8>)
 802a1fa:	f000 ba4d 	b.w	802a698 <__retarget_lock_release_recursive>
 802a1fe:	bf00      	nop
 802a200:	200139c1 	.word	0x200139c1

0802a204 <__cxa_atexit>:
 802a204:	b510      	push	{r4, lr}
 802a206:	4c05      	ldr	r4, [pc, #20]	; (802a21c <__cxa_atexit+0x18>)
 802a208:	4613      	mov	r3, r2
 802a20a:	b12c      	cbz	r4, 802a218 <__cxa_atexit+0x14>
 802a20c:	460a      	mov	r2, r1
 802a20e:	4601      	mov	r1, r0
 802a210:	2002      	movs	r0, #2
 802a212:	f000 fa51 	bl	802a6b8 <__register_exitproc>
 802a216:	bd10      	pop	{r4, pc}
 802a218:	4620      	mov	r0, r4
 802a21a:	e7fc      	b.n	802a216 <__cxa_atexit+0x12>
 802a21c:	0802a6b9 	.word	0x0802a6b9

0802a220 <std>:
 802a220:	2300      	movs	r3, #0
 802a222:	b510      	push	{r4, lr}
 802a224:	4604      	mov	r4, r0
 802a226:	e9c0 3300 	strd	r3, r3, [r0]
 802a22a:	e9c0 3304 	strd	r3, r3, [r0, #16]
 802a22e:	6083      	str	r3, [r0, #8]
 802a230:	8181      	strh	r1, [r0, #12]
 802a232:	6643      	str	r3, [r0, #100]	; 0x64
 802a234:	81c2      	strh	r2, [r0, #14]
 802a236:	6183      	str	r3, [r0, #24]
 802a238:	4619      	mov	r1, r3
 802a23a:	2208      	movs	r2, #8
 802a23c:	305c      	adds	r0, #92	; 0x5c
 802a23e:	f000 f906 	bl	802a44e <memset>
 802a242:	4b0d      	ldr	r3, [pc, #52]	; (802a278 <std+0x58>)
 802a244:	6263      	str	r3, [r4, #36]	; 0x24
 802a246:	4b0d      	ldr	r3, [pc, #52]	; (802a27c <std+0x5c>)
 802a248:	62a3      	str	r3, [r4, #40]	; 0x28
 802a24a:	4b0d      	ldr	r3, [pc, #52]	; (802a280 <std+0x60>)
 802a24c:	62e3      	str	r3, [r4, #44]	; 0x2c
 802a24e:	4b0d      	ldr	r3, [pc, #52]	; (802a284 <std+0x64>)
 802a250:	6323      	str	r3, [r4, #48]	; 0x30
 802a252:	4b0d      	ldr	r3, [pc, #52]	; (802a288 <std+0x68>)
 802a254:	6224      	str	r4, [r4, #32]
 802a256:	429c      	cmp	r4, r3
 802a258:	d006      	beq.n	802a268 <std+0x48>
 802a25a:	f103 0268 	add.w	r2, r3, #104	; 0x68
 802a25e:	4294      	cmp	r4, r2
 802a260:	d002      	beq.n	802a268 <std+0x48>
 802a262:	33d0      	adds	r3, #208	; 0xd0
 802a264:	429c      	cmp	r4, r3
 802a266:	d105      	bne.n	802a274 <std+0x54>
 802a268:	f104 0058 	add.w	r0, r4, #88	; 0x58
 802a26c:	e8bd 4010 	ldmia.w	sp!, {r4, lr}
 802a270:	f000 ba10 	b.w	802a694 <__retarget_lock_init_recursive>
 802a274:	bd10      	pop	{r4, pc}
 802a276:	bf00      	nop
 802a278:	0802a3c9 	.word	0x0802a3c9
 802a27c:	0802a3eb 	.word	0x0802a3eb
 802a280:	0802a423 	.word	0x0802a423
 802a284:	0802a447 	.word	0x0802a447
 802a288:	20013880 	.word	0x20013880

0802a28c <stdio_exit_handler>:
 802a28c:	4a02      	ldr	r2, [pc, #8]	; (802a298 <stdio_exit_handler+0xc>)
 802a28e:	4903      	ldr	r1, [pc, #12]	; (802a29c <stdio_exit_handler+0x10>)
 802a290:	4803      	ldr	r0, [pc, #12]	; (802a2a0 <stdio_exit_handler+0x14>)
 802a292:	f000 b87b 	b.w	802a38c <_fwalk_sglue>
 802a296:	bf00      	nop
 802a298:	20000108 	.word	0x20000108
 802a29c:	0802aec1 	.word	0x0802aec1
 802a2a0:	20000114 	.word	0x20000114

0802a2a4 <cleanup_stdio>:
 802a2a4:	6841      	ldr	r1, [r0, #4]
 802a2a6:	4b0c      	ldr	r3, [pc, #48]	; (802a2d8 <cleanup_stdio+0x34>)
 802a2a8:	4299      	cmp	r1, r3
 802a2aa:	b510      	push	{r4, lr}
 802a2ac:	4604      	mov	r4, r0
 802a2ae:	d001      	beq.n	802a2b4 <cleanup_stdio+0x10>
 802a2b0:	f000 fe06 	bl	802aec0 <_fflush_r>
 802a2b4:	68a1      	ldr	r1, [r4, #8]
 802a2b6:	4b09      	ldr	r3, [pc, #36]	; (802a2dc <cleanup_stdio+0x38>)
 802a2b8:	4299      	cmp	r1, r3
 802a2ba:	d002      	beq.n	802a2c2 <cleanup_stdio+0x1e>
 802a2bc:	4620      	mov	r0, r4
 802a2be:	f000 fdff 	bl	802aec0 <_fflush_r>
 802a2c2:	68e1      	ldr	r1, [r4, #12]
 802a2c4:	4b06      	ldr	r3, [pc, #24]	; (802a2e0 <cleanup_stdio+0x3c>)
 802a2c6:	4299      	cmp	r1, r3
 802a2c8:	d004      	beq.n	802a2d4 <cleanup_stdio+0x30>
 802a2ca:	4620      	mov	r0, r4
 802a2cc:	e8bd 4010 	ldmia.w	sp!, {r4, lr}
 802a2d0:	f000 bdf6 	b.w	802aec0 <_fflush_r>
 802a2d4:	bd10      	pop	{r4, pc}
 802a2d6:	bf00      	nop
 802a2d8:	20013880 	.word	0x20013880
 802a2dc:	200138e8 	.word	0x200138e8
 802a2e0:	20013950 	.word	0x20013950

0802a2e4 <global_stdio_init.part.0>:
 802a2e4:	b510      	push	{r4, lr}
 802a2e6:	4b0b      	ldr	r3, [pc, #44]	; (802a314 <global_stdio_init.part.0+0x30>)
 802a2e8:	4c0b      	ldr	r4, [pc, #44]	; (802a318 <global_stdio_init.part.0+0x34>)
 802a2ea:	4a0c      	ldr	r2, [pc, #48]	; (802a31c <global_stdio_init.part.0+0x38>)
 802a2ec:	601a      	str	r2, [r3, #0]
 802a2ee:	4620      	mov	r0, r4
 802a2f0:	2200      	movs	r2, #0
 802a2f2:	2104      	movs	r1, #4
 802a2f4:	f7ff ff94 	bl	802a220 <std>
 802a2f8:	f104 0068 	add.w	r0, r4, #104	; 0x68
 802a2fc:	2201      	movs	r2, #1
 802a2fe:	2109      	movs	r1, #9
 802a300:	f7ff ff8e 	bl	802a220 <std>
 802a304:	f104 00d0 	add.w	r0, r4, #208	; 0xd0
 802a308:	2202      	movs	r2, #2
 802a30a:	e8bd 4010 	ldmia.w	sp!, {r4, lr}
 802a30e:	2112      	movs	r1, #18
 802a310:	f7ff bf86 	b.w	802a220 <std>
 802a314:	200139b8 	.word	0x200139b8
 802a318:	20013880 	.word	0x20013880
 802a31c:	0802a28d 	.word	0x0802a28d

0802a320 <__sfp_lock_acquire>:
 802a320:	4801      	ldr	r0, [pc, #4]	; (802a328 <__sfp_lock_acquire+0x8>)
 802a322:	f000 b9b8 	b.w	802a696 <__retarget_lock_acquire_recursive>
 802a326:	bf00      	nop
 802a328:	200139c2 	.word	0x200139c2

0802a32c <__sfp_lock_release>:
 802a32c:	4801      	ldr	r0, [pc, #4]	; (802a334 <__sfp_lock_release+0x8>)
 802a32e:	f000 b9b3 	b.w	802a698 <__retarget_lock_release_recursive>
 802a332:	bf00      	nop
 802a334:	200139c2 	.word	0x200139c2

0802a338 <__sinit>:
 802a338:	b510      	push	{r4, lr}
 802a33a:	4604      	mov	r4, r0
 802a33c:	f7ff fff0 	bl	802a320 <__sfp_lock_acquire>
 802a340:	6a23      	ldr	r3, [r4, #32]
 802a342:	b11b      	cbz	r3, 802a34c <__sinit+0x14>
 802a344:	e8bd 4010 	ldmia.w	sp!, {r4, lr}
 802a348:	f7ff bff0 	b.w	802a32c <__sfp_lock_release>
 802a34c:	4b04      	ldr	r3, [pc, #16]	; (802a360 <__sinit+0x28>)
 802a34e:	6223      	str	r3, [r4, #32]
 802a350:	4b04      	ldr	r3, [pc, #16]	; (802a364 <__sinit+0x2c>)
 802a352:	681b      	ldr	r3, [r3, #0]
 802a354:	2b00      	cmp	r3, #0
 802a356:	d1f5      	bne.n	802a344 <__sinit+0xc>
 802a358:	f7ff ffc4 	bl	802a2e4 <global_stdio_init.part.0>
 802a35c:	e7f2      	b.n	802a344 <__sinit+0xc>
 802a35e:	bf00      	nop
 802a360:	0802a2a5 	.word	0x0802a2a5
 802a364:	200139b8 	.word	0x200139b8

0802a368 <fiprintf>:
 802a368:	b40e      	push	{r1, r2, r3}
 802a36a:	b503      	push	{r0, r1, lr}
 802a36c:	4601      	mov	r1, r0
 802a36e:	ab03      	add	r3, sp, #12
 802a370:	4805      	ldr	r0, [pc, #20]	; (802a388 <fiprintf+0x20>)
 802a372:	f853 2b04 	ldr.w	r2, [r3], #4
 802a376:	6800      	ldr	r0, [r0, #0]
 802a378:	9301      	str	r3, [sp, #4]
 802a37a:	f000 fa71 	bl	802a860 <_vfiprintf_r>
 802a37e:	b002      	add	sp, #8
 802a380:	f85d eb04 	ldr.w	lr, [sp], #4
 802a384:	b003      	add	sp, #12
 802a386:	4770      	bx	lr
 802a388:	20000160 	.word	0x20000160

0802a38c <_fwalk_sglue>:
 802a38c:	e92d 43f8 	stmdb	sp!, {r3, r4, r5, r6, r7, r8, r9, lr}
 802a390:	4607      	mov	r7, r0
 802a392:	4688      	mov	r8, r1
 802a394:	4614      	mov	r4, r2
 802a396:	2600      	movs	r6, #0
 802a398:	e9d4 9501 	ldrd	r9, r5, [r4, #4]
 802a39c:	f1b9 0901 	subs.w	r9, r9, #1
 802a3a0:	d505      	bpl.n	802a3ae <_fwalk_sglue+0x22>
 802a3a2:	6824      	ldr	r4, [r4, #0]
 802a3a4:	2c00      	cmp	r4, #0
 802a3a6:	d1f7      	bne.n	802a398 <_fwalk_sglue+0xc>
 802a3a8:	4630      	mov	r0, r6
 802a3aa:	e8bd 83f8 	ldmia.w	sp!, {r3, r4, r5, r6, r7, r8, r9, pc}
 802a3ae:	89ab      	ldrh	r3, [r5, #12]
 802a3b0:	2b01      	cmp	r3, #1
 802a3b2:	d907      	bls.n	802a3c4 <_fwalk_sglue+0x38>
 802a3b4:	f9b5 300e 	ldrsh.w	r3, [r5, #14]
 802a3b8:	3301      	adds	r3, #1
 802a3ba:	d003      	beq.n	802a3c4 <_fwalk_sglue+0x38>
 802a3bc:	4629      	mov	r1, r5
 802a3be:	4638      	mov	r0, r7
 802a3c0:	47c0      	blx	r8
 802a3c2:	4306      	orrs	r6, r0
 802a3c4:	3568      	adds	r5, #104	; 0x68
 802a3c6:	e7e9      	b.n	802a39c <_fwalk_sglue+0x10>

0802a3c8 <__sread>:
 802a3c8:	b510      	push	{r4, lr}
 802a3ca:	460c      	mov	r4, r1
 802a3cc:	f9b1 100e 	ldrsh.w	r1, [r1, #14]
 802a3d0:	f000 f8ee 	bl	802a5b0 <_read_r>
 802a3d4:	2800      	cmp	r0, #0
 802a3d6:	bfab      	itete	ge
 802a3d8:	6d63      	ldrge	r3, [r4, #84]	; 0x54
 802a3da:	89a3      	ldrhlt	r3, [r4, #12]
 802a3dc:	181b      	addge	r3, r3, r0
 802a3de:	f423 5380 	biclt.w	r3, r3, #4096	; 0x1000
 802a3e2:	bfac      	ite	ge
 802a3e4:	6563      	strge	r3, [r4, #84]	; 0x54
 802a3e6:	81a3      	strhlt	r3, [r4, #12]
 802a3e8:	bd10      	pop	{r4, pc}

0802a3ea <__swrite>:
 802a3ea:	e92d 41f0 	stmdb	sp!, {r4, r5, r6, r7, r8, lr}
 802a3ee:	461f      	mov	r7, r3
 802a3f0:	898b      	ldrh	r3, [r1, #12]
 802a3f2:	05db      	lsls	r3, r3, #23
 802a3f4:	4605      	mov	r5, r0
 802a3f6:	460c      	mov	r4, r1
 802a3f8:	4616      	mov	r6, r2
 802a3fa:	d505      	bpl.n	802a408 <__swrite+0x1e>
 802a3fc:	f9b1 100e 	ldrsh.w	r1, [r1, #14]
 802a400:	2302      	movs	r3, #2
 802a402:	2200      	movs	r2, #0
 802a404:	f000 f8c2 	bl	802a58c <_lseek_r>
 802a408:	89a3      	ldrh	r3, [r4, #12]
 802a40a:	f9b4 100e 	ldrsh.w	r1, [r4, #14]
 802a40e:	f423 5380 	bic.w	r3, r3, #4096	; 0x1000
 802a412:	81a3      	strh	r3, [r4, #12]
 802a414:	4632      	mov	r2, r6
 802a416:	463b      	mov	r3, r7
 802a418:	4628      	mov	r0, r5
 802a41a:	e8bd 41f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, lr}
 802a41e:	f000 b8fd 	b.w	802a61c <_write_r>

0802a422 <__sseek>:
 802a422:	b510      	push	{r4, lr}
 802a424:	460c      	mov	r4, r1
 802a426:	f9b1 100e 	ldrsh.w	r1, [r1, #14]
 802a42a:	f000 f8af 	bl	802a58c <_lseek_r>
 802a42e:	1c43      	adds	r3, r0, #1
 802a430:	89a3      	ldrh	r3, [r4, #12]
 802a432:	bf15      	itete	ne
 802a434:	6560      	strne	r0, [r4, #84]	; 0x54
 802a436:	f423 5380 	biceq.w	r3, r3, #4096	; 0x1000
 802a43a:	f443 5380 	orrne.w	r3, r3, #4096	; 0x1000
 802a43e:	81a3      	strheq	r3, [r4, #12]
 802a440:	bf18      	it	ne
 802a442:	81a3      	strhne	r3, [r4, #12]
 802a444:	bd10      	pop	{r4, pc}

0802a446 <__sclose>:
 802a446:	f9b1 100e 	ldrsh.w	r1, [r1, #14]
 802a44a:	f000 b839 	b.w	802a4c0 <_close_r>

0802a44e <memset>:
 802a44e:	4402      	add	r2, r0
 802a450:	4603      	mov	r3, r0
 802a452:	4293      	cmp	r3, r2
 802a454:	d100      	bne.n	802a458 <memset+0xa>
 802a456:	4770      	bx	lr
 802a458:	f803 1b01 	strb.w	r1, [r3], #1
 802a45c:	e7f9      	b.n	802a452 <memset+0x4>

0802a45e <_raise_r>:
 802a45e:	291f      	cmp	r1, #31
 802a460:	b538      	push	{r3, r4, r5, lr}
 802a462:	4604      	mov	r4, r0
 802a464:	460d      	mov	r5, r1
 802a466:	d904      	bls.n	802a472 <_raise_r+0x14>
 802a468:	2316      	movs	r3, #22
 802a46a:	6003      	str	r3, [r0, #0]
 802a46c:	f04f 30ff 	mov.w	r0, #4294967295
 802a470:	bd38      	pop	{r3, r4, r5, pc}
 802a472:	6bc2      	ldr	r2, [r0, #60]	; 0x3c
 802a474:	b112      	cbz	r2, 802a47c <_raise_r+0x1e>
 802a476:	f852 3021 	ldr.w	r3, [r2, r1, lsl #2]
 802a47a:	b94b      	cbnz	r3, 802a490 <_raise_r+0x32>
 802a47c:	4620      	mov	r0, r4
 802a47e:	f000 f8bb 	bl	802a5f8 <_getpid_r>
 802a482:	462a      	mov	r2, r5
 802a484:	4601      	mov	r1, r0
 802a486:	4620      	mov	r0, r4
 802a488:	e8bd 4038 	ldmia.w	sp!, {r3, r4, r5, lr}
 802a48c:	f000 b8a2 	b.w	802a5d4 <_kill_r>
 802a490:	2b01      	cmp	r3, #1
 802a492:	d00a      	beq.n	802a4aa <_raise_r+0x4c>
 802a494:	1c59      	adds	r1, r3, #1
 802a496:	d103      	bne.n	802a4a0 <_raise_r+0x42>
 802a498:	2316      	movs	r3, #22
 802a49a:	6003      	str	r3, [r0, #0]
 802a49c:	2001      	movs	r0, #1
 802a49e:	e7e7      	b.n	802a470 <_raise_r+0x12>
 802a4a0:	2400      	movs	r4, #0
 802a4a2:	f842 4025 	str.w	r4, [r2, r5, lsl #2]
 802a4a6:	4628      	mov	r0, r5
 802a4a8:	4798      	blx	r3
 802a4aa:	2000      	movs	r0, #0
 802a4ac:	e7e0      	b.n	802a470 <_raise_r+0x12>
	...

0802a4b0 <raise>:
 802a4b0:	4b02      	ldr	r3, [pc, #8]	; (802a4bc <raise+0xc>)
 802a4b2:	4601      	mov	r1, r0
 802a4b4:	6818      	ldr	r0, [r3, #0]
 802a4b6:	f7ff bfd2 	b.w	802a45e <_raise_r>
 802a4ba:	bf00      	nop
 802a4bc:	20000160 	.word	0x20000160

0802a4c0 <_close_r>:
 802a4c0:	b538      	push	{r3, r4, r5, lr}
 802a4c2:	4d06      	ldr	r5, [pc, #24]	; (802a4dc <_close_r+0x1c>)
 802a4c4:	2300      	movs	r3, #0
 802a4c6:	4604      	mov	r4, r0
 802a4c8:	4608      	mov	r0, r1
 802a4ca:	602b      	str	r3, [r5, #0]
 802a4cc:	f7d7 ffe8 	bl	80024a0 <_close>
 802a4d0:	1c43      	adds	r3, r0, #1
 802a4d2:	d102      	bne.n	802a4da <_close_r+0x1a>
 802a4d4:	682b      	ldr	r3, [r5, #0]
 802a4d6:	b103      	cbz	r3, 802a4da <_close_r+0x1a>
 802a4d8:	6023      	str	r3, [r4, #0]
 802a4da:	bd38      	pop	{r3, r4, r5, pc}
 802a4dc:	200139bc 	.word	0x200139bc

0802a4e0 <_reclaim_reent>:
 802a4e0:	4b29      	ldr	r3, [pc, #164]	; (802a588 <_reclaim_reent+0xa8>)
 802a4e2:	681b      	ldr	r3, [r3, #0]
 802a4e4:	4283      	cmp	r3, r0
 802a4e6:	b570      	push	{r4, r5, r6, lr}
 802a4e8:	4604      	mov	r4, r0
 802a4ea:	d04b      	beq.n	802a584 <_reclaim_reent+0xa4>
 802a4ec:	69c3      	ldr	r3, [r0, #28]
 802a4ee:	b143      	cbz	r3, 802a502 <_reclaim_reent+0x22>
 802a4f0:	68db      	ldr	r3, [r3, #12]
 802a4f2:	2b00      	cmp	r3, #0
 802a4f4:	d144      	bne.n	802a580 <_reclaim_reent+0xa0>
 802a4f6:	69e3      	ldr	r3, [r4, #28]
 802a4f8:	6819      	ldr	r1, [r3, #0]
 802a4fa:	b111      	cbz	r1, 802a502 <_reclaim_reent+0x22>
 802a4fc:	4620      	mov	r0, r4
 802a4fe:	f000 f939 	bl	802a774 <_free_r>
 802a502:	6961      	ldr	r1, [r4, #20]
 802a504:	b111      	cbz	r1, 802a50c <_reclaim_reent+0x2c>
 802a506:	4620      	mov	r0, r4
 802a508:	f000 f934 	bl	802a774 <_free_r>
 802a50c:	69e1      	ldr	r1, [r4, #28]
 802a50e:	b111      	cbz	r1, 802a516 <_reclaim_reent+0x36>
 802a510:	4620      	mov	r0, r4
 802a512:	f000 f92f 	bl	802a774 <_free_r>
 802a516:	6b21      	ldr	r1, [r4, #48]	; 0x30
 802a518:	b111      	cbz	r1, 802a520 <_reclaim_reent+0x40>
 802a51a:	4620      	mov	r0, r4
 802a51c:	f000 f92a 	bl	802a774 <_free_r>
 802a520:	6b61      	ldr	r1, [r4, #52]	; 0x34
 802a522:	b111      	cbz	r1, 802a52a <_reclaim_reent+0x4a>
 802a524:	4620      	mov	r0, r4
 802a526:	f000 f925 	bl	802a774 <_free_r>
 802a52a:	6ba1      	ldr	r1, [r4, #56]	; 0x38
 802a52c:	b111      	cbz	r1, 802a534 <_reclaim_reent+0x54>
 802a52e:	4620      	mov	r0, r4
 802a530:	f000 f920 	bl	802a774 <_free_r>
 802a534:	6ca1      	ldr	r1, [r4, #72]	; 0x48
 802a536:	b111      	cbz	r1, 802a53e <_reclaim_reent+0x5e>
 802a538:	4620      	mov	r0, r4
 802a53a:	f000 f91b 	bl	802a774 <_free_r>
 802a53e:	6c61      	ldr	r1, [r4, #68]	; 0x44
 802a540:	b111      	cbz	r1, 802a548 <_reclaim_reent+0x68>
 802a542:	4620      	mov	r0, r4
 802a544:	f000 f916 	bl	802a774 <_free_r>
 802a548:	6ae1      	ldr	r1, [r4, #44]	; 0x2c
 802a54a:	b111      	cbz	r1, 802a552 <_reclaim_reent+0x72>
 802a54c:	4620      	mov	r0, r4
 802a54e:	f000 f911 	bl	802a774 <_free_r>
 802a552:	6a23      	ldr	r3, [r4, #32]
 802a554:	b1b3      	cbz	r3, 802a584 <_reclaim_reent+0xa4>
 802a556:	4620      	mov	r0, r4
 802a558:	e8bd 4070 	ldmia.w	sp!, {r4, r5, r6, lr}
 802a55c:	4718      	bx	r3
 802a55e:	5949      	ldr	r1, [r1, r5]
 802a560:	b941      	cbnz	r1, 802a574 <_reclaim_reent+0x94>
 802a562:	3504      	adds	r5, #4
 802a564:	69e3      	ldr	r3, [r4, #28]
 802a566:	2d80      	cmp	r5, #128	; 0x80
 802a568:	68d9      	ldr	r1, [r3, #12]
 802a56a:	d1f8      	bne.n	802a55e <_reclaim_reent+0x7e>
 802a56c:	4620      	mov	r0, r4
 802a56e:	f000 f901 	bl	802a774 <_free_r>
 802a572:	e7c0      	b.n	802a4f6 <_reclaim_reent+0x16>
 802a574:	680e      	ldr	r6, [r1, #0]
 802a576:	4620      	mov	r0, r4
 802a578:	f000 f8fc 	bl	802a774 <_free_r>
 802a57c:	4631      	mov	r1, r6
 802a57e:	e7ef      	b.n	802a560 <_reclaim_reent+0x80>
 802a580:	2500      	movs	r5, #0
 802a582:	e7ef      	b.n	802a564 <_reclaim_reent+0x84>
 802a584:	bd70      	pop	{r4, r5, r6, pc}
 802a586:	bf00      	nop
 802a588:	20000160 	.word	0x20000160

0802a58c <_lseek_r>:
 802a58c:	b538      	push	{r3, r4, r5, lr}
 802a58e:	4d07      	ldr	r5, [pc, #28]	; (802a5ac <_lseek_r+0x20>)
 802a590:	4604      	mov	r4, r0
 802a592:	4608      	mov	r0, r1
 802a594:	4611      	mov	r1, r2
 802a596:	2200      	movs	r2, #0
 802a598:	602a      	str	r2, [r5, #0]
 802a59a:	461a      	mov	r2, r3
 802a59c:	f7d7 ff8c 	bl	80024b8 <_lseek>
 802a5a0:	1c43      	adds	r3, r0, #1
 802a5a2:	d102      	bne.n	802a5aa <_lseek_r+0x1e>
 802a5a4:	682b      	ldr	r3, [r5, #0]
 802a5a6:	b103      	cbz	r3, 802a5aa <_lseek_r+0x1e>
 802a5a8:	6023      	str	r3, [r4, #0]
 802a5aa:	bd38      	pop	{r3, r4, r5, pc}
 802a5ac:	200139bc 	.word	0x200139bc

0802a5b0 <_read_r>:
 802a5b0:	b538      	push	{r3, r4, r5, lr}
 802a5b2:	4d07      	ldr	r5, [pc, #28]	; (802a5d0 <_read_r+0x20>)
 802a5b4:	4604      	mov	r4, r0
 802a5b6:	4608      	mov	r0, r1
 802a5b8:	4611      	mov	r1, r2
 802a5ba:	2200      	movs	r2, #0
 802a5bc:	602a      	str	r2, [r5, #0]
 802a5be:	461a      	mov	r2, r3
 802a5c0:	f7d7 ff52 	bl	8002468 <_read>
 802a5c4:	1c43      	adds	r3, r0, #1
 802a5c6:	d102      	bne.n	802a5ce <_read_r+0x1e>
 802a5c8:	682b      	ldr	r3, [r5, #0]
 802a5ca:	b103      	cbz	r3, 802a5ce <_read_r+0x1e>
 802a5cc:	6023      	str	r3, [r4, #0]
 802a5ce:	bd38      	pop	{r3, r4, r5, pc}
 802a5d0:	200139bc 	.word	0x200139bc

0802a5d4 <_kill_r>:
 802a5d4:	b538      	push	{r3, r4, r5, lr}
 802a5d6:	4d07      	ldr	r5, [pc, #28]	; (802a5f4 <_kill_r+0x20>)
 802a5d8:	2300      	movs	r3, #0
 802a5da:	4604      	mov	r4, r0
 802a5dc:	4608      	mov	r0, r1
 802a5de:	4611      	mov	r1, r2
 802a5e0:	602b      	str	r3, [r5, #0]
 802a5e2:	f7d7 ff33 	bl	800244c <_kill>
 802a5e6:	1c43      	adds	r3, r0, #1
 802a5e8:	d102      	bne.n	802a5f0 <_kill_r+0x1c>
 802a5ea:	682b      	ldr	r3, [r5, #0]
 802a5ec:	b103      	cbz	r3, 802a5f0 <_kill_r+0x1c>
 802a5ee:	6023      	str	r3, [r4, #0]
 802a5f0:	bd38      	pop	{r3, r4, r5, pc}
 802a5f2:	bf00      	nop
 802a5f4:	200139bc 	.word	0x200139bc

0802a5f8 <_getpid_r>:
 802a5f8:	f7d7 bf26 	b.w	8002448 <_getpid>

0802a5fc <_sbrk_r>:
 802a5fc:	b538      	push	{r3, r4, r5, lr}
 802a5fe:	4d06      	ldr	r5, [pc, #24]	; (802a618 <_sbrk_r+0x1c>)
 802a600:	2300      	movs	r3, #0
 802a602:	4604      	mov	r4, r0
 802a604:	4608      	mov	r0, r1
 802a606:	602b      	str	r3, [r5, #0]
 802a608:	f7d7 ff58 	bl	80024bc <_sbrk>
 802a60c:	1c43      	adds	r3, r0, #1
 802a60e:	d102      	bne.n	802a616 <_sbrk_r+0x1a>
 802a610:	682b      	ldr	r3, [r5, #0]
 802a612:	b103      	cbz	r3, 802a616 <_sbrk_r+0x1a>
 802a614:	6023      	str	r3, [r4, #0]
 802a616:	bd38      	pop	{r3, r4, r5, pc}
 802a618:	200139bc 	.word	0x200139bc

0802a61c <_write_r>:
 802a61c:	b538      	push	{r3, r4, r5, lr}
 802a61e:	4d07      	ldr	r5, [pc, #28]	; (802a63c <_write_r+0x20>)
 802a620:	4604      	mov	r4, r0
 802a622:	4608      	mov	r0, r1
 802a624:	4611      	mov	r1, r2
 802a626:	2200      	movs	r2, #0
 802a628:	602a      	str	r2, [r5, #0]
 802a62a:	461a      	mov	r2, r3
 802a62c:	f7d7 ff2a 	bl	8002484 <_write>
 802a630:	1c43      	adds	r3, r0, #1
 802a632:	d102      	bne.n	802a63a <_write_r+0x1e>
 802a634:	682b      	ldr	r3, [r5, #0]
 802a636:	b103      	cbz	r3, 802a63a <_write_r+0x1e>
 802a638:	6023      	str	r3, [r4, #0]
 802a63a:	bd38      	pop	{r3, r4, r5, pc}
 802a63c:	200139bc 	.word	0x200139bc

0802a640 <__errno>:
 802a640:	4b01      	ldr	r3, [pc, #4]	; (802a648 <__errno+0x8>)
 802a642:	6818      	ldr	r0, [r3, #0]
 802a644:	4770      	bx	lr
 802a646:	bf00      	nop
 802a648:	20000160 	.word	0x20000160

0802a64c <__libc_init_array>:
 802a64c:	b570      	push	{r4, r5, r6, lr}
 802a64e:	4d0d      	ldr	r5, [pc, #52]	; (802a684 <__libc_init_array+0x38>)
 802a650:	4c0d      	ldr	r4, [pc, #52]	; (802a688 <__libc_init_array+0x3c>)
 802a652:	1b64      	subs	r4, r4, r5
 802a654:	10a4      	asrs	r4, r4, #2
 802a656:	2600      	movs	r6, #0
 802a658:	42a6      	cmp	r6, r4
 802a65a:	d109      	bne.n	802a670 <__libc_init_array+0x24>
 802a65c:	4d0b      	ldr	r5, [pc, #44]	; (802a68c <__libc_init_array+0x40>)
 802a65e:	4c0c      	ldr	r4, [pc, #48]	; (802a690 <__libc_init_array+0x44>)
 802a660:	f000 fd70 	bl	802b144 <_init>
 802a664:	1b64      	subs	r4, r4, r5
 802a666:	10a4      	asrs	r4, r4, #2
 802a668:	2600      	movs	r6, #0
 802a66a:	42a6      	cmp	r6, r4
 802a66c:	d105      	bne.n	802a67a <__libc_init_array+0x2e>
 802a66e:	bd70      	pop	{r4, r5, r6, pc}
 802a670:	f855 3b04 	ldr.w	r3, [r5], #4
 802a674:	4798      	blx	r3
 802a676:	3601      	adds	r6, #1
 802a678:	e7ee      	b.n	802a658 <__libc_init_array+0xc>
 802a67a:	f855 3b04 	ldr.w	r3, [r5], #4
 802a67e:	4798      	blx	r3
 802a680:	3601      	adds	r6, #1
 802a682:	e7f2      	b.n	802a66a <__libc_init_array+0x1e>
 802a684:	0815ebf0 	.word	0x0815ebf0
 802a688:	0815ebf0 	.word	0x0815ebf0
 802a68c:	0815ebf0 	.word	0x0815ebf0
 802a690:	0815ec04 	.word	0x0815ec04

0802a694 <__retarget_lock_init_recursive>:
 802a694:	4770      	bx	lr

0802a696 <__retarget_lock_acquire_recursive>:
 802a696:	4770      	bx	lr

0802a698 <__retarget_lock_release_recursive>:
 802a698:	4770      	bx	lr

0802a69a <memcpy>:
 802a69a:	440a      	add	r2, r1
 802a69c:	4291      	cmp	r1, r2
 802a69e:	f100 33ff 	add.w	r3, r0, #4294967295
 802a6a2:	d100      	bne.n	802a6a6 <memcpy+0xc>
 802a6a4:	4770      	bx	lr
 802a6a6:	b510      	push	{r4, lr}
 802a6a8:	f811 4b01 	ldrb.w	r4, [r1], #1
 802a6ac:	f803 4f01 	strb.w	r4, [r3, #1]!
 802a6b0:	4291      	cmp	r1, r2
 802a6b2:	d1f9      	bne.n	802a6a8 <memcpy+0xe>
 802a6b4:	bd10      	pop	{r4, pc}
	...

0802a6b8 <__register_exitproc>:
 802a6b8:	e92d 43f8 	stmdb	sp!, {r3, r4, r5, r6, r7, r8, r9, lr}
 802a6bc:	f8df 80b0 	ldr.w	r8, [pc, #176]	; 802a770 <__register_exitproc+0xb8>
 802a6c0:	4606      	mov	r6, r0
 802a6c2:	f8d8 0000 	ldr.w	r0, [r8]
 802a6c6:	461f      	mov	r7, r3
 802a6c8:	460d      	mov	r5, r1
 802a6ca:	4691      	mov	r9, r2
 802a6cc:	f7ff ffe3 	bl	802a696 <__retarget_lock_acquire_recursive>
 802a6d0:	4b23      	ldr	r3, [pc, #140]	; (802a760 <__register_exitproc+0xa8>)
 802a6d2:	681c      	ldr	r4, [r3, #0]
 802a6d4:	b934      	cbnz	r4, 802a6e4 <__register_exitproc+0x2c>
 802a6d6:	4c23      	ldr	r4, [pc, #140]	; (802a764 <__register_exitproc+0xac>)
 802a6d8:	601c      	str	r4, [r3, #0]
 802a6da:	4b23      	ldr	r3, [pc, #140]	; (802a768 <__register_exitproc+0xb0>)
 802a6dc:	b113      	cbz	r3, 802a6e4 <__register_exitproc+0x2c>
 802a6de:	681b      	ldr	r3, [r3, #0]
 802a6e0:	f8c4 3088 	str.w	r3, [r4, #136]	; 0x88
 802a6e4:	6863      	ldr	r3, [r4, #4]
 802a6e6:	2b1f      	cmp	r3, #31
 802a6e8:	dd07      	ble.n	802a6fa <__register_exitproc+0x42>
 802a6ea:	f8d8 0000 	ldr.w	r0, [r8]
 802a6ee:	f7ff ffd3 	bl	802a698 <__retarget_lock_release_recursive>
 802a6f2:	f04f 30ff 	mov.w	r0, #4294967295
 802a6f6:	e8bd 83f8 	ldmia.w	sp!, {r3, r4, r5, r6, r7, r8, r9, pc}
 802a6fa:	b32e      	cbz	r6, 802a748 <__register_exitproc+0x90>
 802a6fc:	f8d4 0088 	ldr.w	r0, [r4, #136]	; 0x88
 802a700:	b968      	cbnz	r0, 802a71e <__register_exitproc+0x66>
 802a702:	4b1a      	ldr	r3, [pc, #104]	; (802a76c <__register_exitproc+0xb4>)
 802a704:	2b00      	cmp	r3, #0
 802a706:	d0f0      	beq.n	802a6ea <__register_exitproc+0x32>
 802a708:	f44f 7084 	mov.w	r0, #264	; 0x108
 802a70c:	f7ff fcbe 	bl	802a08c <malloc>
 802a710:	2800      	cmp	r0, #0
 802a712:	d0ea      	beq.n	802a6ea <__register_exitproc+0x32>
 802a714:	2300      	movs	r3, #0
 802a716:	e9c0 3340 	strd	r3, r3, [r0, #256]	; 0x100
 802a71a:	f8c4 0088 	str.w	r0, [r4, #136]	; 0x88
 802a71e:	6863      	ldr	r3, [r4, #4]
 802a720:	f840 9023 	str.w	r9, [r0, r3, lsl #2]
 802a724:	2201      	movs	r2, #1
 802a726:	409a      	lsls	r2, r3
 802a728:	eb00 0183 	add.w	r1, r0, r3, lsl #2
 802a72c:	f8d0 3100 	ldr.w	r3, [r0, #256]	; 0x100
 802a730:	4313      	orrs	r3, r2
 802a732:	f8c0 3100 	str.w	r3, [r0, #256]	; 0x100
 802a736:	2e02      	cmp	r6, #2
 802a738:	f8c1 7080 	str.w	r7, [r1, #128]	; 0x80
 802a73c:	bf02      	ittt	eq
 802a73e:	f8d0 3104 	ldreq.w	r3, [r0, #260]	; 0x104
 802a742:	4313      	orreq	r3, r2
 802a744:	f8c0 3104 	streq.w	r3, [r0, #260]	; 0x104
 802a748:	6863      	ldr	r3, [r4, #4]
 802a74a:	f8d8 0000 	ldr.w	r0, [r8]
 802a74e:	1c5a      	adds	r2, r3, #1
 802a750:	3302      	adds	r3, #2
 802a752:	6062      	str	r2, [r4, #4]
 802a754:	f844 5023 	str.w	r5, [r4, r3, lsl #2]
 802a758:	f7ff ff9e 	bl	802a698 <__retarget_lock_release_recursive>
 802a75c:	2000      	movs	r0, #0
 802a75e:	e7ca      	b.n	802a6f6 <__register_exitproc+0x3e>
 802a760:	20013a50 	.word	0x20013a50
 802a764:	200139c4 	.word	0x200139c4
 802a768:	0804265c 	.word	0x0804265c
 802a76c:	0802a08d 	.word	0x0802a08d
 802a770:	20000164 	.word	0x20000164

0802a774 <_free_r>:
 802a774:	b537      	push	{r0, r1, r2, r4, r5, lr}
 802a776:	2900      	cmp	r1, #0
 802a778:	d044      	beq.n	802a804 <_free_r+0x90>
 802a77a:	f851 3c04 	ldr.w	r3, [r1, #-4]
 802a77e:	9001      	str	r0, [sp, #4]
 802a780:	2b00      	cmp	r3, #0
 802a782:	f1a1 0404 	sub.w	r4, r1, #4
 802a786:	bfb8      	it	lt
 802a788:	18e4      	addlt	r4, r4, r3
 802a78a:	f7ff fd2f 	bl	802a1ec <__malloc_lock>
 802a78e:	4a1e      	ldr	r2, [pc, #120]	; (802a808 <_free_r+0x94>)
 802a790:	9801      	ldr	r0, [sp, #4]
 802a792:	6813      	ldr	r3, [r2, #0]
 802a794:	b933      	cbnz	r3, 802a7a4 <_free_r+0x30>
 802a796:	6063      	str	r3, [r4, #4]
 802a798:	6014      	str	r4, [r2, #0]
 802a79a:	b003      	add	sp, #12
 802a79c:	e8bd 4030 	ldmia.w	sp!, {r4, r5, lr}
 802a7a0:	f7ff bd2a 	b.w	802a1f8 <__malloc_unlock>
 802a7a4:	42a3      	cmp	r3, r4
 802a7a6:	d908      	bls.n	802a7ba <_free_r+0x46>
 802a7a8:	6825      	ldr	r5, [r4, #0]
 802a7aa:	1961      	adds	r1, r4, r5
 802a7ac:	428b      	cmp	r3, r1
 802a7ae:	bf01      	itttt	eq
 802a7b0:	6819      	ldreq	r1, [r3, #0]
 802a7b2:	685b      	ldreq	r3, [r3, #4]
 802a7b4:	1949      	addeq	r1, r1, r5
 802a7b6:	6021      	streq	r1, [r4, #0]
 802a7b8:	e7ed      	b.n	802a796 <_free_r+0x22>
 802a7ba:	461a      	mov	r2, r3
 802a7bc:	685b      	ldr	r3, [r3, #4]
 802a7be:	b10b      	cbz	r3, 802a7c4 <_free_r+0x50>
 802a7c0:	42a3      	cmp	r3, r4
 802a7c2:	d9fa      	bls.n	802a7ba <_free_r+0x46>
 802a7c4:	6811      	ldr	r1, [r2, #0]
 802a7c6:	1855      	adds	r5, r2, r1
 802a7c8:	42a5      	cmp	r5, r4
 802a7ca:	d10b      	bne.n	802a7e4 <_free_r+0x70>
 802a7cc:	6824      	ldr	r4, [r4, #0]
 802a7ce:	4421      	add	r1, r4
 802a7d0:	1854      	adds	r4, r2, r1
 802a7d2:	42a3      	cmp	r3, r4
 802a7d4:	6011      	str	r1, [r2, #0]
 802a7d6:	d1e0      	bne.n	802a79a <_free_r+0x26>
 802a7d8:	681c      	ldr	r4, [r3, #0]
 802a7da:	685b      	ldr	r3, [r3, #4]
 802a7dc:	6053      	str	r3, [r2, #4]
 802a7de:	440c      	add	r4, r1
 802a7e0:	6014      	str	r4, [r2, #0]
 802a7e2:	e7da      	b.n	802a79a <_free_r+0x26>
 802a7e4:	d902      	bls.n	802a7ec <_free_r+0x78>
 802a7e6:	230c      	movs	r3, #12
 802a7e8:	6003      	str	r3, [r0, #0]
 802a7ea:	e7d6      	b.n	802a79a <_free_r+0x26>
 802a7ec:	6825      	ldr	r5, [r4, #0]
 802a7ee:	1961      	adds	r1, r4, r5
 802a7f0:	428b      	cmp	r3, r1
 802a7f2:	bf04      	itt	eq
 802a7f4:	6819      	ldreq	r1, [r3, #0]
 802a7f6:	685b      	ldreq	r3, [r3, #4]
 802a7f8:	6063      	str	r3, [r4, #4]
 802a7fa:	bf04      	itt	eq
 802a7fc:	1949      	addeq	r1, r1, r5
 802a7fe:	6021      	streq	r1, [r4, #0]
 802a800:	6054      	str	r4, [r2, #4]
 802a802:	e7ca      	b.n	802a79a <_free_r+0x26>
 802a804:	b003      	add	sp, #12
 802a806:	bd30      	pop	{r4, r5, pc}
 802a808:	20013878 	.word	0x20013878

0802a80c <__sfputc_r>:
 802a80c:	6893      	ldr	r3, [r2, #8]
 802a80e:	3b01      	subs	r3, #1
 802a810:	2b00      	cmp	r3, #0
 802a812:	b410      	push	{r4}
 802a814:	6093      	str	r3, [r2, #8]
 802a816:	da08      	bge.n	802a82a <__sfputc_r+0x1e>
 802a818:	6994      	ldr	r4, [r2, #24]
 802a81a:	42a3      	cmp	r3, r4
 802a81c:	db01      	blt.n	802a822 <__sfputc_r+0x16>
 802a81e:	290a      	cmp	r1, #10
 802a820:	d103      	bne.n	802a82a <__sfputc_r+0x1e>
 802a822:	f85d 4b04 	ldr.w	r4, [sp], #4
 802a826:	f000 bb73 	b.w	802af10 <__swbuf_r>
 802a82a:	6813      	ldr	r3, [r2, #0]
 802a82c:	1c58      	adds	r0, r3, #1
 802a82e:	6010      	str	r0, [r2, #0]
 802a830:	7019      	strb	r1, [r3, #0]
 802a832:	4608      	mov	r0, r1
 802a834:	f85d 4b04 	ldr.w	r4, [sp], #4
 802a838:	4770      	bx	lr

0802a83a <__sfputs_r>:
 802a83a:	b5f8      	push	{r3, r4, r5, r6, r7, lr}
 802a83c:	4606      	mov	r6, r0
 802a83e:	460f      	mov	r7, r1
 802a840:	4614      	mov	r4, r2
 802a842:	18d5      	adds	r5, r2, r3
 802a844:	42ac      	cmp	r4, r5
 802a846:	d101      	bne.n	802a84c <__sfputs_r+0x12>
 802a848:	2000      	movs	r0, #0
 802a84a:	e007      	b.n	802a85c <__sfputs_r+0x22>
 802a84c:	f814 1b01 	ldrb.w	r1, [r4], #1
 802a850:	463a      	mov	r2, r7
 802a852:	4630      	mov	r0, r6
 802a854:	f7ff ffda 	bl	802a80c <__sfputc_r>
 802a858:	1c43      	adds	r3, r0, #1
 802a85a:	d1f3      	bne.n	802a844 <__sfputs_r+0xa>
 802a85c:	bdf8      	pop	{r3, r4, r5, r6, r7, pc}
	...

0802a860 <_vfiprintf_r>:
 802a860:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 802a864:	460d      	mov	r5, r1
 802a866:	b09d      	sub	sp, #116	; 0x74
 802a868:	4614      	mov	r4, r2
 802a86a:	4698      	mov	r8, r3
 802a86c:	4606      	mov	r6, r0
 802a86e:	b118      	cbz	r0, 802a878 <_vfiprintf_r+0x18>
 802a870:	6a03      	ldr	r3, [r0, #32]
 802a872:	b90b      	cbnz	r3, 802a878 <_vfiprintf_r+0x18>
 802a874:	f7ff fd60 	bl	802a338 <__sinit>
 802a878:	6e6b      	ldr	r3, [r5, #100]	; 0x64
 802a87a:	07d9      	lsls	r1, r3, #31
 802a87c:	d405      	bmi.n	802a88a <_vfiprintf_r+0x2a>
 802a87e:	89ab      	ldrh	r3, [r5, #12]
 802a880:	059a      	lsls	r2, r3, #22
 802a882:	d402      	bmi.n	802a88a <_vfiprintf_r+0x2a>
 802a884:	6da8      	ldr	r0, [r5, #88]	; 0x58
 802a886:	f7ff ff06 	bl	802a696 <__retarget_lock_acquire_recursive>
 802a88a:	89ab      	ldrh	r3, [r5, #12]
 802a88c:	071b      	lsls	r3, r3, #28
 802a88e:	d501      	bpl.n	802a894 <_vfiprintf_r+0x34>
 802a890:	692b      	ldr	r3, [r5, #16]
 802a892:	b99b      	cbnz	r3, 802a8bc <_vfiprintf_r+0x5c>
 802a894:	4629      	mov	r1, r5
 802a896:	4630      	mov	r0, r6
 802a898:	f000 fb78 	bl	802af8c <__swsetup_r>
 802a89c:	b170      	cbz	r0, 802a8bc <_vfiprintf_r+0x5c>
 802a89e:	6e6b      	ldr	r3, [r5, #100]	; 0x64
 802a8a0:	07dc      	lsls	r4, r3, #31
 802a8a2:	d504      	bpl.n	802a8ae <_vfiprintf_r+0x4e>
 802a8a4:	f04f 30ff 	mov.w	r0, #4294967295
 802a8a8:	b01d      	add	sp, #116	; 0x74
 802a8aa:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
 802a8ae:	89ab      	ldrh	r3, [r5, #12]
 802a8b0:	0598      	lsls	r0, r3, #22
 802a8b2:	d4f7      	bmi.n	802a8a4 <_vfiprintf_r+0x44>
 802a8b4:	6da8      	ldr	r0, [r5, #88]	; 0x58
 802a8b6:	f7ff feef 	bl	802a698 <__retarget_lock_release_recursive>
 802a8ba:	e7f3      	b.n	802a8a4 <_vfiprintf_r+0x44>
 802a8bc:	2300      	movs	r3, #0
 802a8be:	9309      	str	r3, [sp, #36]	; 0x24
 802a8c0:	2320      	movs	r3, #32
 802a8c2:	f88d 3029 	strb.w	r3, [sp, #41]	; 0x29
 802a8c6:	f8cd 800c 	str.w	r8, [sp, #12]
 802a8ca:	2330      	movs	r3, #48	; 0x30
 802a8cc:	f8df 81b0 	ldr.w	r8, [pc, #432]	; 802aa80 <_vfiprintf_r+0x220>
 802a8d0:	f88d 302a 	strb.w	r3, [sp, #42]	; 0x2a
 802a8d4:	f04f 0901 	mov.w	r9, #1
 802a8d8:	4623      	mov	r3, r4
 802a8da:	469a      	mov	sl, r3
 802a8dc:	f813 2b01 	ldrb.w	r2, [r3], #1
 802a8e0:	b10a      	cbz	r2, 802a8e6 <_vfiprintf_r+0x86>
 802a8e2:	2a25      	cmp	r2, #37	; 0x25
 802a8e4:	d1f9      	bne.n	802a8da <_vfiprintf_r+0x7a>
 802a8e6:	ebba 0b04 	subs.w	fp, sl, r4
 802a8ea:	d00b      	beq.n	802a904 <_vfiprintf_r+0xa4>
 802a8ec:	465b      	mov	r3, fp
 802a8ee:	4622      	mov	r2, r4
 802a8f0:	4629      	mov	r1, r5
 802a8f2:	4630      	mov	r0, r6
 802a8f4:	f7ff ffa1 	bl	802a83a <__sfputs_r>
 802a8f8:	3001      	adds	r0, #1
 802a8fa:	f000 80a9 	beq.w	802aa50 <_vfiprintf_r+0x1f0>
 802a8fe:	9a09      	ldr	r2, [sp, #36]	; 0x24
 802a900:	445a      	add	r2, fp
 802a902:	9209      	str	r2, [sp, #36]	; 0x24
 802a904:	f89a 3000 	ldrb.w	r3, [sl]
 802a908:	2b00      	cmp	r3, #0
 802a90a:	f000 80a1 	beq.w	802aa50 <_vfiprintf_r+0x1f0>
 802a90e:	2300      	movs	r3, #0
 802a910:	f04f 32ff 	mov.w	r2, #4294967295
 802a914:	e9cd 2305 	strd	r2, r3, [sp, #20]
 802a918:	f10a 0a01 	add.w	sl, sl, #1
 802a91c:	9304      	str	r3, [sp, #16]
 802a91e:	9307      	str	r3, [sp, #28]
 802a920:	f88d 3053 	strb.w	r3, [sp, #83]	; 0x53
 802a924:	931a      	str	r3, [sp, #104]	; 0x68
 802a926:	4654      	mov	r4, sl
 802a928:	2205      	movs	r2, #5
 802a92a:	f814 1b01 	ldrb.w	r1, [r4], #1
 802a92e:	4854      	ldr	r0, [pc, #336]	; (802aa80 <_vfiprintf_r+0x220>)
 802a930:	f7d5 fcbe 	bl	80002b0 <memchr>
 802a934:	9a04      	ldr	r2, [sp, #16]
 802a936:	b9d8      	cbnz	r0, 802a970 <_vfiprintf_r+0x110>
 802a938:	06d1      	lsls	r1, r2, #27
 802a93a:	bf44      	itt	mi
 802a93c:	2320      	movmi	r3, #32
 802a93e:	f88d 3053 	strbmi.w	r3, [sp, #83]	; 0x53
 802a942:	0713      	lsls	r3, r2, #28
 802a944:	bf44      	itt	mi
 802a946:	232b      	movmi	r3, #43	; 0x2b
 802a948:	f88d 3053 	strbmi.w	r3, [sp, #83]	; 0x53
 802a94c:	f89a 3000 	ldrb.w	r3, [sl]
 802a950:	2b2a      	cmp	r3, #42	; 0x2a
 802a952:	d015      	beq.n	802a980 <_vfiprintf_r+0x120>
 802a954:	9a07      	ldr	r2, [sp, #28]
 802a956:	4654      	mov	r4, sl
 802a958:	2000      	movs	r0, #0
 802a95a:	f04f 0c0a 	mov.w	ip, #10
 802a95e:	4621      	mov	r1, r4
 802a960:	f811 3b01 	ldrb.w	r3, [r1], #1
 802a964:	3b30      	subs	r3, #48	; 0x30
 802a966:	2b09      	cmp	r3, #9
 802a968:	d94d      	bls.n	802aa06 <_vfiprintf_r+0x1a6>
 802a96a:	b1b0      	cbz	r0, 802a99a <_vfiprintf_r+0x13a>
 802a96c:	9207      	str	r2, [sp, #28]
 802a96e:	e014      	b.n	802a99a <_vfiprintf_r+0x13a>
 802a970:	eba0 0308 	sub.w	r3, r0, r8
 802a974:	fa09 f303 	lsl.w	r3, r9, r3
 802a978:	4313      	orrs	r3, r2
 802a97a:	9304      	str	r3, [sp, #16]
 802a97c:	46a2      	mov	sl, r4
 802a97e:	e7d2      	b.n	802a926 <_vfiprintf_r+0xc6>
 802a980:	9b03      	ldr	r3, [sp, #12]
 802a982:	1d19      	adds	r1, r3, #4
 802a984:	681b      	ldr	r3, [r3, #0]
 802a986:	9103      	str	r1, [sp, #12]
 802a988:	2b00      	cmp	r3, #0
 802a98a:	bfbb      	ittet	lt
 802a98c:	425b      	neglt	r3, r3
 802a98e:	f042 0202 	orrlt.w	r2, r2, #2
 802a992:	9307      	strge	r3, [sp, #28]
 802a994:	9307      	strlt	r3, [sp, #28]
 802a996:	bfb8      	it	lt
 802a998:	9204      	strlt	r2, [sp, #16]
 802a99a:	7823      	ldrb	r3, [r4, #0]
 802a99c:	2b2e      	cmp	r3, #46	; 0x2e
 802a99e:	d10c      	bne.n	802a9ba <_vfiprintf_r+0x15a>
 802a9a0:	7863      	ldrb	r3, [r4, #1]
 802a9a2:	2b2a      	cmp	r3, #42	; 0x2a
 802a9a4:	d134      	bne.n	802aa10 <_vfiprintf_r+0x1b0>
 802a9a6:	9b03      	ldr	r3, [sp, #12]
 802a9a8:	1d1a      	adds	r2, r3, #4
 802a9aa:	681b      	ldr	r3, [r3, #0]
 802a9ac:	9203      	str	r2, [sp, #12]
 802a9ae:	2b00      	cmp	r3, #0
 802a9b0:	bfb8      	it	lt
 802a9b2:	f04f 33ff 	movlt.w	r3, #4294967295
 802a9b6:	3402      	adds	r4, #2
 802a9b8:	9305      	str	r3, [sp, #20]
 802a9ba:	f8df a0d4 	ldr.w	sl, [pc, #212]	; 802aa90 <_vfiprintf_r+0x230>
 802a9be:	7821      	ldrb	r1, [r4, #0]
 802a9c0:	2203      	movs	r2, #3
 802a9c2:	4650      	mov	r0, sl
 802a9c4:	f7d5 fc74 	bl	80002b0 <memchr>
 802a9c8:	b138      	cbz	r0, 802a9da <_vfiprintf_r+0x17a>
 802a9ca:	9b04      	ldr	r3, [sp, #16]
 802a9cc:	eba0 000a 	sub.w	r0, r0, sl
 802a9d0:	2240      	movs	r2, #64	; 0x40
 802a9d2:	4082      	lsls	r2, r0
 802a9d4:	4313      	orrs	r3, r2
 802a9d6:	3401      	adds	r4, #1
 802a9d8:	9304      	str	r3, [sp, #16]
 802a9da:	f814 1b01 	ldrb.w	r1, [r4], #1
 802a9de:	4829      	ldr	r0, [pc, #164]	; (802aa84 <_vfiprintf_r+0x224>)
 802a9e0:	f88d 1028 	strb.w	r1, [sp, #40]	; 0x28
 802a9e4:	2206      	movs	r2, #6
 802a9e6:	f7d5 fc63 	bl	80002b0 <memchr>
 802a9ea:	2800      	cmp	r0, #0
 802a9ec:	d03f      	beq.n	802aa6e <_vfiprintf_r+0x20e>
 802a9ee:	4b26      	ldr	r3, [pc, #152]	; (802aa88 <_vfiprintf_r+0x228>)
 802a9f0:	bb1b      	cbnz	r3, 802aa3a <_vfiprintf_r+0x1da>
 802a9f2:	9b03      	ldr	r3, [sp, #12]
 802a9f4:	3307      	adds	r3, #7
 802a9f6:	f023 0307 	bic.w	r3, r3, #7
 802a9fa:	3308      	adds	r3, #8
 802a9fc:	9303      	str	r3, [sp, #12]
 802a9fe:	9b09      	ldr	r3, [sp, #36]	; 0x24
 802aa00:	443b      	add	r3, r7
 802aa02:	9309      	str	r3, [sp, #36]	; 0x24
 802aa04:	e768      	b.n	802a8d8 <_vfiprintf_r+0x78>
 802aa06:	fb0c 3202 	mla	r2, ip, r2, r3
 802aa0a:	460c      	mov	r4, r1
 802aa0c:	2001      	movs	r0, #1
 802aa0e:	e7a6      	b.n	802a95e <_vfiprintf_r+0xfe>
 802aa10:	2300      	movs	r3, #0
 802aa12:	3401      	adds	r4, #1
 802aa14:	9305      	str	r3, [sp, #20]
 802aa16:	4619      	mov	r1, r3
 802aa18:	f04f 0c0a 	mov.w	ip, #10
 802aa1c:	4620      	mov	r0, r4
 802aa1e:	f810 2b01 	ldrb.w	r2, [r0], #1
 802aa22:	3a30      	subs	r2, #48	; 0x30
 802aa24:	2a09      	cmp	r2, #9
 802aa26:	d903      	bls.n	802aa30 <_vfiprintf_r+0x1d0>
 802aa28:	2b00      	cmp	r3, #0
 802aa2a:	d0c6      	beq.n	802a9ba <_vfiprintf_r+0x15a>
 802aa2c:	9105      	str	r1, [sp, #20]
 802aa2e:	e7c4      	b.n	802a9ba <_vfiprintf_r+0x15a>
 802aa30:	fb0c 2101 	mla	r1, ip, r1, r2
 802aa34:	4604      	mov	r4, r0
 802aa36:	2301      	movs	r3, #1
 802aa38:	e7f0      	b.n	802aa1c <_vfiprintf_r+0x1bc>
 802aa3a:	ab03      	add	r3, sp, #12
 802aa3c:	9300      	str	r3, [sp, #0]
 802aa3e:	462a      	mov	r2, r5
 802aa40:	4b12      	ldr	r3, [pc, #72]	; (802aa8c <_vfiprintf_r+0x22c>)
 802aa42:	a904      	add	r1, sp, #16
 802aa44:	4630      	mov	r0, r6
 802aa46:	f3af 8000 	nop.w
 802aa4a:	4607      	mov	r7, r0
 802aa4c:	1c78      	adds	r0, r7, #1
 802aa4e:	d1d6      	bne.n	802a9fe <_vfiprintf_r+0x19e>
 802aa50:	6e6b      	ldr	r3, [r5, #100]	; 0x64
 802aa52:	07d9      	lsls	r1, r3, #31
 802aa54:	d405      	bmi.n	802aa62 <_vfiprintf_r+0x202>
 802aa56:	89ab      	ldrh	r3, [r5, #12]
 802aa58:	059a      	lsls	r2, r3, #22
 802aa5a:	d402      	bmi.n	802aa62 <_vfiprintf_r+0x202>
 802aa5c:	6da8      	ldr	r0, [r5, #88]	; 0x58
 802aa5e:	f7ff fe1b 	bl	802a698 <__retarget_lock_release_recursive>
 802aa62:	89ab      	ldrh	r3, [r5, #12]
 802aa64:	065b      	lsls	r3, r3, #25
 802aa66:	f53f af1d 	bmi.w	802a8a4 <_vfiprintf_r+0x44>
 802aa6a:	9809      	ldr	r0, [sp, #36]	; 0x24
 802aa6c:	e71c      	b.n	802a8a8 <_vfiprintf_r+0x48>
 802aa6e:	ab03      	add	r3, sp, #12
 802aa70:	9300      	str	r3, [sp, #0]
 802aa72:	462a      	mov	r2, r5
 802aa74:	4b05      	ldr	r3, [pc, #20]	; (802aa8c <_vfiprintf_r+0x22c>)
 802aa76:	a904      	add	r1, sp, #16
 802aa78:	4630      	mov	r0, r6
 802aa7a:	f000 f879 	bl	802ab70 <_printf_i>
 802aa7e:	e7e4      	b.n	802aa4a <_vfiprintf_r+0x1ea>
 802aa80:	08042660 	.word	0x08042660
 802aa84:	0804266a 	.word	0x0804266a
 802aa88:	00000000 	.word	0x00000000
 802aa8c:	0802a83b 	.word	0x0802a83b
 802aa90:	08042666 	.word	0x08042666

0802aa94 <_printf_common>:
 802aa94:	e92d 47f0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, lr}
 802aa98:	4616      	mov	r6, r2
 802aa9a:	4699      	mov	r9, r3
 802aa9c:	688a      	ldr	r2, [r1, #8]
 802aa9e:	690b      	ldr	r3, [r1, #16]
 802aaa0:	f8dd 8020 	ldr.w	r8, [sp, #32]
 802aaa4:	4293      	cmp	r3, r2
 802aaa6:	bfb8      	it	lt
 802aaa8:	4613      	movlt	r3, r2
 802aaaa:	6033      	str	r3, [r6, #0]
 802aaac:	f891 2043 	ldrb.w	r2, [r1, #67]	; 0x43
 802aab0:	4607      	mov	r7, r0
 802aab2:	460c      	mov	r4, r1
 802aab4:	b10a      	cbz	r2, 802aaba <_printf_common+0x26>
 802aab6:	3301      	adds	r3, #1
 802aab8:	6033      	str	r3, [r6, #0]
 802aaba:	6823      	ldr	r3, [r4, #0]
 802aabc:	0699      	lsls	r1, r3, #26
 802aabe:	bf42      	ittt	mi
 802aac0:	6833      	ldrmi	r3, [r6, #0]
 802aac2:	3302      	addmi	r3, #2
 802aac4:	6033      	strmi	r3, [r6, #0]
 802aac6:	6825      	ldr	r5, [r4, #0]
 802aac8:	f015 0506 	ands.w	r5, r5, #6
 802aacc:	d106      	bne.n	802aadc <_printf_common+0x48>
 802aace:	f104 0a19 	add.w	sl, r4, #25
 802aad2:	68e3      	ldr	r3, [r4, #12]
 802aad4:	6832      	ldr	r2, [r6, #0]
 802aad6:	1a9b      	subs	r3, r3, r2
 802aad8:	42ab      	cmp	r3, r5
 802aada:	dc26      	bgt.n	802ab2a <_printf_common+0x96>
 802aadc:	f894 2043 	ldrb.w	r2, [r4, #67]	; 0x43
 802aae0:	1e13      	subs	r3, r2, #0
 802aae2:	6822      	ldr	r2, [r4, #0]
 802aae4:	bf18      	it	ne
 802aae6:	2301      	movne	r3, #1
 802aae8:	0692      	lsls	r2, r2, #26
 802aaea:	d42b      	bmi.n	802ab44 <_printf_common+0xb0>
 802aaec:	f104 0243 	add.w	r2, r4, #67	; 0x43
 802aaf0:	4649      	mov	r1, r9
 802aaf2:	4638      	mov	r0, r7
 802aaf4:	47c0      	blx	r8
 802aaf6:	3001      	adds	r0, #1
 802aaf8:	d01e      	beq.n	802ab38 <_printf_common+0xa4>
 802aafa:	6823      	ldr	r3, [r4, #0]
 802aafc:	6922      	ldr	r2, [r4, #16]
 802aafe:	f003 0306 	and.w	r3, r3, #6
 802ab02:	2b04      	cmp	r3, #4
 802ab04:	bf02      	ittt	eq
 802ab06:	68e5      	ldreq	r5, [r4, #12]
 802ab08:	6833      	ldreq	r3, [r6, #0]
 802ab0a:	1aed      	subeq	r5, r5, r3
 802ab0c:	68a3      	ldr	r3, [r4, #8]
 802ab0e:	bf0c      	ite	eq
 802ab10:	ea25 75e5 	biceq.w	r5, r5, r5, asr #31
 802ab14:	2500      	movne	r5, #0
 802ab16:	4293      	cmp	r3, r2
 802ab18:	bfc4      	itt	gt
 802ab1a:	1a9b      	subgt	r3, r3, r2
 802ab1c:	18ed      	addgt	r5, r5, r3
 802ab1e:	2600      	movs	r6, #0
 802ab20:	341a      	adds	r4, #26
 802ab22:	42b5      	cmp	r5, r6
 802ab24:	d11a      	bne.n	802ab5c <_printf_common+0xc8>
 802ab26:	2000      	movs	r0, #0
 802ab28:	e008      	b.n	802ab3c <_printf_common+0xa8>
 802ab2a:	2301      	movs	r3, #1
 802ab2c:	4652      	mov	r2, sl
 802ab2e:	4649      	mov	r1, r9
 802ab30:	4638      	mov	r0, r7
 802ab32:	47c0      	blx	r8
 802ab34:	3001      	adds	r0, #1
 802ab36:	d103      	bne.n	802ab40 <_printf_common+0xac>
 802ab38:	f04f 30ff 	mov.w	r0, #4294967295
 802ab3c:	e8bd 87f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, pc}
 802ab40:	3501      	adds	r5, #1
 802ab42:	e7c6      	b.n	802aad2 <_printf_common+0x3e>
 802ab44:	18e1      	adds	r1, r4, r3
 802ab46:	1c5a      	adds	r2, r3, #1
 802ab48:	2030      	movs	r0, #48	; 0x30
 802ab4a:	f881 0043 	strb.w	r0, [r1, #67]	; 0x43
 802ab4e:	4422      	add	r2, r4
 802ab50:	f894 1045 	ldrb.w	r1, [r4, #69]	; 0x45
 802ab54:	f882 1043 	strb.w	r1, [r2, #67]	; 0x43
 802ab58:	3302      	adds	r3, #2
 802ab5a:	e7c7      	b.n	802aaec <_printf_common+0x58>
 802ab5c:	2301      	movs	r3, #1
 802ab5e:	4622      	mov	r2, r4
 802ab60:	4649      	mov	r1, r9
 802ab62:	4638      	mov	r0, r7
 802ab64:	47c0      	blx	r8
 802ab66:	3001      	adds	r0, #1
 802ab68:	d0e6      	beq.n	802ab38 <_printf_common+0xa4>
 802ab6a:	3601      	adds	r6, #1
 802ab6c:	e7d9      	b.n	802ab22 <_printf_common+0x8e>
	...

0802ab70 <_printf_i>:
 802ab70:	e92d 47ff 	stmdb	sp!, {r0, r1, r2, r3, r4, r5, r6, r7, r8, r9, sl, lr}
 802ab74:	7e0f      	ldrb	r7, [r1, #24]
 802ab76:	9d0c      	ldr	r5, [sp, #48]	; 0x30
 802ab78:	2f78      	cmp	r7, #120	; 0x78
 802ab7a:	4691      	mov	r9, r2
 802ab7c:	4680      	mov	r8, r0
 802ab7e:	460c      	mov	r4, r1
 802ab80:	469a      	mov	sl, r3
 802ab82:	f101 0243 	add.w	r2, r1, #67	; 0x43
 802ab86:	d807      	bhi.n	802ab98 <_printf_i+0x28>
 802ab88:	2f62      	cmp	r7, #98	; 0x62
 802ab8a:	d80a      	bhi.n	802aba2 <_printf_i+0x32>
 802ab8c:	2f00      	cmp	r7, #0
 802ab8e:	f000 80d4 	beq.w	802ad3a <_printf_i+0x1ca>
 802ab92:	2f58      	cmp	r7, #88	; 0x58
 802ab94:	f000 80c0 	beq.w	802ad18 <_printf_i+0x1a8>
 802ab98:	f104 0542 	add.w	r5, r4, #66	; 0x42
 802ab9c:	f884 7042 	strb.w	r7, [r4, #66]	; 0x42
 802aba0:	e03a      	b.n	802ac18 <_printf_i+0xa8>
 802aba2:	f1a7 0363 	sub.w	r3, r7, #99	; 0x63
 802aba6:	2b15      	cmp	r3, #21
 802aba8:	d8f6      	bhi.n	802ab98 <_printf_i+0x28>
 802abaa:	a101      	add	r1, pc, #4	; (adr r1, 802abb0 <_printf_i+0x40>)
 802abac:	f851 f023 	ldr.w	pc, [r1, r3, lsl #2]
 802abb0:	0802ac09 	.word	0x0802ac09
 802abb4:	0802ac1d 	.word	0x0802ac1d
 802abb8:	0802ab99 	.word	0x0802ab99
 802abbc:	0802ab99 	.word	0x0802ab99
 802abc0:	0802ab99 	.word	0x0802ab99
 802abc4:	0802ab99 	.word	0x0802ab99
 802abc8:	0802ac1d 	.word	0x0802ac1d
 802abcc:	0802ab99 	.word	0x0802ab99
 802abd0:	0802ab99 	.word	0x0802ab99
 802abd4:	0802ab99 	.word	0x0802ab99
 802abd8:	0802ab99 	.word	0x0802ab99
 802abdc:	0802ad21 	.word	0x0802ad21
 802abe0:	0802ac49 	.word	0x0802ac49
 802abe4:	0802acdb 	.word	0x0802acdb
 802abe8:	0802ab99 	.word	0x0802ab99
 802abec:	0802ab99 	.word	0x0802ab99
 802abf0:	0802ad43 	.word	0x0802ad43
 802abf4:	0802ab99 	.word	0x0802ab99
 802abf8:	0802ac49 	.word	0x0802ac49
 802abfc:	0802ab99 	.word	0x0802ab99
 802ac00:	0802ab99 	.word	0x0802ab99
 802ac04:	0802ace3 	.word	0x0802ace3
 802ac08:	682b      	ldr	r3, [r5, #0]
 802ac0a:	1d1a      	adds	r2, r3, #4
 802ac0c:	681b      	ldr	r3, [r3, #0]
 802ac0e:	602a      	str	r2, [r5, #0]
 802ac10:	f104 0542 	add.w	r5, r4, #66	; 0x42
 802ac14:	f884 3042 	strb.w	r3, [r4, #66]	; 0x42
 802ac18:	2301      	movs	r3, #1
 802ac1a:	e09f      	b.n	802ad5c <_printf_i+0x1ec>
 802ac1c:	6820      	ldr	r0, [r4, #0]
 802ac1e:	682b      	ldr	r3, [r5, #0]
 802ac20:	0607      	lsls	r7, r0, #24
 802ac22:	f103 0104 	add.w	r1, r3, #4
 802ac26:	6029      	str	r1, [r5, #0]
 802ac28:	d501      	bpl.n	802ac2e <_printf_i+0xbe>
 802ac2a:	681e      	ldr	r6, [r3, #0]
 802ac2c:	e003      	b.n	802ac36 <_printf_i+0xc6>
 802ac2e:	0646      	lsls	r6, r0, #25
 802ac30:	d5fb      	bpl.n	802ac2a <_printf_i+0xba>
 802ac32:	f9b3 6000 	ldrsh.w	r6, [r3]
 802ac36:	2e00      	cmp	r6, #0
 802ac38:	da03      	bge.n	802ac42 <_printf_i+0xd2>
 802ac3a:	232d      	movs	r3, #45	; 0x2d
 802ac3c:	4276      	negs	r6, r6
 802ac3e:	f884 3043 	strb.w	r3, [r4, #67]	; 0x43
 802ac42:	485a      	ldr	r0, [pc, #360]	; (802adac <_printf_i+0x23c>)
 802ac44:	230a      	movs	r3, #10
 802ac46:	e012      	b.n	802ac6e <_printf_i+0xfe>
 802ac48:	682b      	ldr	r3, [r5, #0]
 802ac4a:	6820      	ldr	r0, [r4, #0]
 802ac4c:	1d19      	adds	r1, r3, #4
 802ac4e:	6029      	str	r1, [r5, #0]
 802ac50:	0605      	lsls	r5, r0, #24
 802ac52:	d501      	bpl.n	802ac58 <_printf_i+0xe8>
 802ac54:	681e      	ldr	r6, [r3, #0]
 802ac56:	e002      	b.n	802ac5e <_printf_i+0xee>
 802ac58:	0641      	lsls	r1, r0, #25
 802ac5a:	d5fb      	bpl.n	802ac54 <_printf_i+0xe4>
 802ac5c:	881e      	ldrh	r6, [r3, #0]
 802ac5e:	4853      	ldr	r0, [pc, #332]	; (802adac <_printf_i+0x23c>)
 802ac60:	2f6f      	cmp	r7, #111	; 0x6f
 802ac62:	bf0c      	ite	eq
 802ac64:	2308      	moveq	r3, #8
 802ac66:	230a      	movne	r3, #10
 802ac68:	2100      	movs	r1, #0
 802ac6a:	f884 1043 	strb.w	r1, [r4, #67]	; 0x43
 802ac6e:	6865      	ldr	r5, [r4, #4]
 802ac70:	60a5      	str	r5, [r4, #8]
 802ac72:	2d00      	cmp	r5, #0
 802ac74:	bfa2      	ittt	ge
 802ac76:	6821      	ldrge	r1, [r4, #0]
 802ac78:	f021 0104 	bicge.w	r1, r1, #4
 802ac7c:	6021      	strge	r1, [r4, #0]
 802ac7e:	b90e      	cbnz	r6, 802ac84 <_printf_i+0x114>
 802ac80:	2d00      	cmp	r5, #0
 802ac82:	d04b      	beq.n	802ad1c <_printf_i+0x1ac>
 802ac84:	4615      	mov	r5, r2
 802ac86:	fbb6 f1f3 	udiv	r1, r6, r3
 802ac8a:	fb03 6711 	mls	r7, r3, r1, r6
 802ac8e:	5dc7      	ldrb	r7, [r0, r7]
 802ac90:	f805 7d01 	strb.w	r7, [r5, #-1]!
 802ac94:	4637      	mov	r7, r6
 802ac96:	42bb      	cmp	r3, r7
 802ac98:	460e      	mov	r6, r1
 802ac9a:	d9f4      	bls.n	802ac86 <_printf_i+0x116>
 802ac9c:	2b08      	cmp	r3, #8
 802ac9e:	d10b      	bne.n	802acb8 <_printf_i+0x148>
 802aca0:	6823      	ldr	r3, [r4, #0]
 802aca2:	07de      	lsls	r6, r3, #31
 802aca4:	d508      	bpl.n	802acb8 <_printf_i+0x148>
 802aca6:	6923      	ldr	r3, [r4, #16]
 802aca8:	6861      	ldr	r1, [r4, #4]
 802acaa:	4299      	cmp	r1, r3
 802acac:	bfde      	ittt	le
 802acae:	2330      	movle	r3, #48	; 0x30
 802acb0:	f805 3c01 	strble.w	r3, [r5, #-1]
 802acb4:	f105 35ff 	addle.w	r5, r5, #4294967295
 802acb8:	1b52      	subs	r2, r2, r5
 802acba:	6122      	str	r2, [r4, #16]
 802acbc:	f8cd a000 	str.w	sl, [sp]
 802acc0:	464b      	mov	r3, r9
 802acc2:	aa03      	add	r2, sp, #12
 802acc4:	4621      	mov	r1, r4
 802acc6:	4640      	mov	r0, r8
 802acc8:	f7ff fee4 	bl	802aa94 <_printf_common>
 802accc:	3001      	adds	r0, #1
 802acce:	d14a      	bne.n	802ad66 <_printf_i+0x1f6>
 802acd0:	f04f 30ff 	mov.w	r0, #4294967295
 802acd4:	b004      	add	sp, #16
 802acd6:	e8bd 87f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, pc}
 802acda:	6823      	ldr	r3, [r4, #0]
 802acdc:	f043 0320 	orr.w	r3, r3, #32
 802ace0:	6023      	str	r3, [r4, #0]
 802ace2:	4833      	ldr	r0, [pc, #204]	; (802adb0 <_printf_i+0x240>)
 802ace4:	2778      	movs	r7, #120	; 0x78
 802ace6:	f884 7045 	strb.w	r7, [r4, #69]	; 0x45
 802acea:	6823      	ldr	r3, [r4, #0]
 802acec:	6829      	ldr	r1, [r5, #0]
 802acee:	061f      	lsls	r7, r3, #24
 802acf0:	f851 6b04 	ldr.w	r6, [r1], #4
 802acf4:	d402      	bmi.n	802acfc <_printf_i+0x18c>
 802acf6:	065f      	lsls	r7, r3, #25
 802acf8:	bf48      	it	mi
 802acfa:	b2b6      	uxthmi	r6, r6
 802acfc:	07df      	lsls	r7, r3, #31
 802acfe:	bf48      	it	mi
 802ad00:	f043 0320 	orrmi.w	r3, r3, #32
 802ad04:	6029      	str	r1, [r5, #0]
 802ad06:	bf48      	it	mi
 802ad08:	6023      	strmi	r3, [r4, #0]
 802ad0a:	b91e      	cbnz	r6, 802ad14 <_printf_i+0x1a4>
 802ad0c:	6823      	ldr	r3, [r4, #0]
 802ad0e:	f023 0320 	bic.w	r3, r3, #32
 802ad12:	6023      	str	r3, [r4, #0]
 802ad14:	2310      	movs	r3, #16
 802ad16:	e7a7      	b.n	802ac68 <_printf_i+0xf8>
 802ad18:	4824      	ldr	r0, [pc, #144]	; (802adac <_printf_i+0x23c>)
 802ad1a:	e7e4      	b.n	802ace6 <_printf_i+0x176>
 802ad1c:	4615      	mov	r5, r2
 802ad1e:	e7bd      	b.n	802ac9c <_printf_i+0x12c>
 802ad20:	682b      	ldr	r3, [r5, #0]
 802ad22:	6826      	ldr	r6, [r4, #0]
 802ad24:	6961      	ldr	r1, [r4, #20]
 802ad26:	1d18      	adds	r0, r3, #4
 802ad28:	6028      	str	r0, [r5, #0]
 802ad2a:	0635      	lsls	r5, r6, #24
 802ad2c:	681b      	ldr	r3, [r3, #0]
 802ad2e:	d501      	bpl.n	802ad34 <_printf_i+0x1c4>
 802ad30:	6019      	str	r1, [r3, #0]
 802ad32:	e002      	b.n	802ad3a <_printf_i+0x1ca>
 802ad34:	0670      	lsls	r0, r6, #25
 802ad36:	d5fb      	bpl.n	802ad30 <_printf_i+0x1c0>
 802ad38:	8019      	strh	r1, [r3, #0]
 802ad3a:	2300      	movs	r3, #0
 802ad3c:	6123      	str	r3, [r4, #16]
 802ad3e:	4615      	mov	r5, r2
 802ad40:	e7bc      	b.n	802acbc <_printf_i+0x14c>
 802ad42:	682b      	ldr	r3, [r5, #0]
 802ad44:	1d1a      	adds	r2, r3, #4
 802ad46:	602a      	str	r2, [r5, #0]
 802ad48:	681d      	ldr	r5, [r3, #0]
 802ad4a:	6862      	ldr	r2, [r4, #4]
 802ad4c:	2100      	movs	r1, #0
 802ad4e:	4628      	mov	r0, r5
 802ad50:	f7d5 faae 	bl	80002b0 <memchr>
 802ad54:	b108      	cbz	r0, 802ad5a <_printf_i+0x1ea>
 802ad56:	1b40      	subs	r0, r0, r5
 802ad58:	6060      	str	r0, [r4, #4]
 802ad5a:	6863      	ldr	r3, [r4, #4]
 802ad5c:	6123      	str	r3, [r4, #16]
 802ad5e:	2300      	movs	r3, #0
 802ad60:	f884 3043 	strb.w	r3, [r4, #67]	; 0x43
 802ad64:	e7aa      	b.n	802acbc <_printf_i+0x14c>
 802ad66:	6923      	ldr	r3, [r4, #16]
 802ad68:	462a      	mov	r2, r5
 802ad6a:	4649      	mov	r1, r9
 802ad6c:	4640      	mov	r0, r8
 802ad6e:	47d0      	blx	sl
 802ad70:	3001      	adds	r0, #1
 802ad72:	d0ad      	beq.n	802acd0 <_printf_i+0x160>
 802ad74:	6823      	ldr	r3, [r4, #0]
 802ad76:	079b      	lsls	r3, r3, #30
 802ad78:	d413      	bmi.n	802ada2 <_printf_i+0x232>
 802ad7a:	68e0      	ldr	r0, [r4, #12]
 802ad7c:	9b03      	ldr	r3, [sp, #12]
 802ad7e:	4298      	cmp	r0, r3
 802ad80:	bfb8      	it	lt
 802ad82:	4618      	movlt	r0, r3
 802ad84:	e7a6      	b.n	802acd4 <_printf_i+0x164>
 802ad86:	2301      	movs	r3, #1
 802ad88:	4632      	mov	r2, r6
 802ad8a:	4649      	mov	r1, r9
 802ad8c:	4640      	mov	r0, r8
 802ad8e:	47d0      	blx	sl
 802ad90:	3001      	adds	r0, #1
 802ad92:	d09d      	beq.n	802acd0 <_printf_i+0x160>
 802ad94:	3501      	adds	r5, #1
 802ad96:	68e3      	ldr	r3, [r4, #12]
 802ad98:	9903      	ldr	r1, [sp, #12]
 802ad9a:	1a5b      	subs	r3, r3, r1
 802ad9c:	42ab      	cmp	r3, r5
 802ad9e:	dcf2      	bgt.n	802ad86 <_printf_i+0x216>
 802ada0:	e7eb      	b.n	802ad7a <_printf_i+0x20a>
 802ada2:	2500      	movs	r5, #0
 802ada4:	f104 0619 	add.w	r6, r4, #25
 802ada8:	e7f5      	b.n	802ad96 <_printf_i+0x226>
 802adaa:	bf00      	nop
 802adac:	08042671 	.word	0x08042671
 802adb0:	08042682 	.word	0x08042682

0802adb4 <__sflush_r>:
 802adb4:	898a      	ldrh	r2, [r1, #12]
 802adb6:	e92d 41f0 	stmdb	sp!, {r4, r5, r6, r7, r8, lr}
 802adba:	4605      	mov	r5, r0
 802adbc:	0710      	lsls	r0, r2, #28
 802adbe:	460c      	mov	r4, r1
 802adc0:	d458      	bmi.n	802ae74 <__sflush_r+0xc0>
 802adc2:	684b      	ldr	r3, [r1, #4]
 802adc4:	2b00      	cmp	r3, #0
 802adc6:	dc05      	bgt.n	802add4 <__sflush_r+0x20>
 802adc8:	6c0b      	ldr	r3, [r1, #64]	; 0x40
 802adca:	2b00      	cmp	r3, #0
 802adcc:	dc02      	bgt.n	802add4 <__sflush_r+0x20>
 802adce:	2000      	movs	r0, #0
 802add0:	e8bd 81f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, pc}
 802add4:	6ae6      	ldr	r6, [r4, #44]	; 0x2c
 802add6:	2e00      	cmp	r6, #0
 802add8:	d0f9      	beq.n	802adce <__sflush_r+0x1a>
 802adda:	2300      	movs	r3, #0
 802addc:	f412 5280 	ands.w	r2, r2, #4096	; 0x1000
 802ade0:	682f      	ldr	r7, [r5, #0]
 802ade2:	6a21      	ldr	r1, [r4, #32]
 802ade4:	602b      	str	r3, [r5, #0]
 802ade6:	d032      	beq.n	802ae4e <__sflush_r+0x9a>
 802ade8:	6d60      	ldr	r0, [r4, #84]	; 0x54
 802adea:	89a3      	ldrh	r3, [r4, #12]
 802adec:	075a      	lsls	r2, r3, #29
 802adee:	d505      	bpl.n	802adfc <__sflush_r+0x48>
 802adf0:	6863      	ldr	r3, [r4, #4]
 802adf2:	1ac0      	subs	r0, r0, r3
 802adf4:	6b63      	ldr	r3, [r4, #52]	; 0x34
 802adf6:	b10b      	cbz	r3, 802adfc <__sflush_r+0x48>
 802adf8:	6c23      	ldr	r3, [r4, #64]	; 0x40
 802adfa:	1ac0      	subs	r0, r0, r3
 802adfc:	2300      	movs	r3, #0
 802adfe:	4602      	mov	r2, r0
 802ae00:	6ae6      	ldr	r6, [r4, #44]	; 0x2c
 802ae02:	6a21      	ldr	r1, [r4, #32]
 802ae04:	4628      	mov	r0, r5
 802ae06:	47b0      	blx	r6
 802ae08:	1c43      	adds	r3, r0, #1
 802ae0a:	89a3      	ldrh	r3, [r4, #12]
 802ae0c:	d106      	bne.n	802ae1c <__sflush_r+0x68>
 802ae0e:	6829      	ldr	r1, [r5, #0]
 802ae10:	291d      	cmp	r1, #29
 802ae12:	d82b      	bhi.n	802ae6c <__sflush_r+0xb8>
 802ae14:	4a29      	ldr	r2, [pc, #164]	; (802aebc <__sflush_r+0x108>)
 802ae16:	410a      	asrs	r2, r1
 802ae18:	07d6      	lsls	r6, r2, #31
 802ae1a:	d427      	bmi.n	802ae6c <__sflush_r+0xb8>
 802ae1c:	2200      	movs	r2, #0
 802ae1e:	6062      	str	r2, [r4, #4]
 802ae20:	04d9      	lsls	r1, r3, #19
 802ae22:	6922      	ldr	r2, [r4, #16]
 802ae24:	6022      	str	r2, [r4, #0]
 802ae26:	d504      	bpl.n	802ae32 <__sflush_r+0x7e>
 802ae28:	1c42      	adds	r2, r0, #1
 802ae2a:	d101      	bne.n	802ae30 <__sflush_r+0x7c>
 802ae2c:	682b      	ldr	r3, [r5, #0]
 802ae2e:	b903      	cbnz	r3, 802ae32 <__sflush_r+0x7e>
 802ae30:	6560      	str	r0, [r4, #84]	; 0x54
 802ae32:	6b61      	ldr	r1, [r4, #52]	; 0x34
 802ae34:	602f      	str	r7, [r5, #0]
 802ae36:	2900      	cmp	r1, #0
 802ae38:	d0c9      	beq.n	802adce <__sflush_r+0x1a>
 802ae3a:	f104 0344 	add.w	r3, r4, #68	; 0x44
 802ae3e:	4299      	cmp	r1, r3
 802ae40:	d002      	beq.n	802ae48 <__sflush_r+0x94>
 802ae42:	4628      	mov	r0, r5
 802ae44:	f7ff fc96 	bl	802a774 <_free_r>
 802ae48:	2000      	movs	r0, #0
 802ae4a:	6360      	str	r0, [r4, #52]	; 0x34
 802ae4c:	e7c0      	b.n	802add0 <__sflush_r+0x1c>
 802ae4e:	2301      	movs	r3, #1
 802ae50:	4628      	mov	r0, r5
 802ae52:	47b0      	blx	r6
 802ae54:	1c41      	adds	r1, r0, #1
 802ae56:	d1c8      	bne.n	802adea <__sflush_r+0x36>
 802ae58:	682b      	ldr	r3, [r5, #0]
 802ae5a:	2b00      	cmp	r3, #0
 802ae5c:	d0c5      	beq.n	802adea <__sflush_r+0x36>
 802ae5e:	2b1d      	cmp	r3, #29
 802ae60:	d001      	beq.n	802ae66 <__sflush_r+0xb2>
 802ae62:	2b16      	cmp	r3, #22
 802ae64:	d101      	bne.n	802ae6a <__sflush_r+0xb6>
 802ae66:	602f      	str	r7, [r5, #0]
 802ae68:	e7b1      	b.n	802adce <__sflush_r+0x1a>
 802ae6a:	89a3      	ldrh	r3, [r4, #12]
 802ae6c:	f043 0340 	orr.w	r3, r3, #64	; 0x40
 802ae70:	81a3      	strh	r3, [r4, #12]
 802ae72:	e7ad      	b.n	802add0 <__sflush_r+0x1c>
 802ae74:	690f      	ldr	r7, [r1, #16]
 802ae76:	2f00      	cmp	r7, #0
 802ae78:	d0a9      	beq.n	802adce <__sflush_r+0x1a>
 802ae7a:	0793      	lsls	r3, r2, #30
 802ae7c:	680e      	ldr	r6, [r1, #0]
 802ae7e:	bf08      	it	eq
 802ae80:	694b      	ldreq	r3, [r1, #20]
 802ae82:	600f      	str	r7, [r1, #0]
 802ae84:	bf18      	it	ne
 802ae86:	2300      	movne	r3, #0
 802ae88:	eba6 0807 	sub.w	r8, r6, r7
 802ae8c:	608b      	str	r3, [r1, #8]
 802ae8e:	f1b8 0f00 	cmp.w	r8, #0
 802ae92:	dd9c      	ble.n	802adce <__sflush_r+0x1a>
 802ae94:	6a21      	ldr	r1, [r4, #32]
 802ae96:	6aa6      	ldr	r6, [r4, #40]	; 0x28
 802ae98:	4643      	mov	r3, r8
 802ae9a:	463a      	mov	r2, r7
 802ae9c:	4628      	mov	r0, r5
 802ae9e:	47b0      	blx	r6
 802aea0:	2800      	cmp	r0, #0
 802aea2:	dc06      	bgt.n	802aeb2 <__sflush_r+0xfe>
 802aea4:	89a3      	ldrh	r3, [r4, #12]
 802aea6:	f043 0340 	orr.w	r3, r3, #64	; 0x40
 802aeaa:	81a3      	strh	r3, [r4, #12]
 802aeac:	f04f 30ff 	mov.w	r0, #4294967295
 802aeb0:	e78e      	b.n	802add0 <__sflush_r+0x1c>
 802aeb2:	4407      	add	r7, r0
 802aeb4:	eba8 0800 	sub.w	r8, r8, r0
 802aeb8:	e7e9      	b.n	802ae8e <__sflush_r+0xda>
 802aeba:	bf00      	nop
 802aebc:	dfbffffe 	.word	0xdfbffffe

0802aec0 <_fflush_r>:
 802aec0:	b538      	push	{r3, r4, r5, lr}
 802aec2:	690b      	ldr	r3, [r1, #16]
 802aec4:	4605      	mov	r5, r0
 802aec6:	460c      	mov	r4, r1
 802aec8:	b913      	cbnz	r3, 802aed0 <_fflush_r+0x10>
 802aeca:	2500      	movs	r5, #0
 802aecc:	4628      	mov	r0, r5
 802aece:	bd38      	pop	{r3, r4, r5, pc}
 802aed0:	b118      	cbz	r0, 802aeda <_fflush_r+0x1a>
 802aed2:	6a03      	ldr	r3, [r0, #32]
 802aed4:	b90b      	cbnz	r3, 802aeda <_fflush_r+0x1a>
 802aed6:	f7ff fa2f 	bl	802a338 <__sinit>
 802aeda:	f9b4 300c 	ldrsh.w	r3, [r4, #12]
 802aede:	2b00      	cmp	r3, #0
 802aee0:	d0f3      	beq.n	802aeca <_fflush_r+0xa>
 802aee2:	6e62      	ldr	r2, [r4, #100]	; 0x64
 802aee4:	07d0      	lsls	r0, r2, #31
 802aee6:	d404      	bmi.n	802aef2 <_fflush_r+0x32>
 802aee8:	0599      	lsls	r1, r3, #22
 802aeea:	d402      	bmi.n	802aef2 <_fflush_r+0x32>
 802aeec:	6da0      	ldr	r0, [r4, #88]	; 0x58
 802aeee:	f7ff fbd2 	bl	802a696 <__retarget_lock_acquire_recursive>
 802aef2:	4628      	mov	r0, r5
 802aef4:	4621      	mov	r1, r4
 802aef6:	f7ff ff5d 	bl	802adb4 <__sflush_r>
 802aefa:	6e63      	ldr	r3, [r4, #100]	; 0x64
 802aefc:	07da      	lsls	r2, r3, #31
 802aefe:	4605      	mov	r5, r0
 802af00:	d4e4      	bmi.n	802aecc <_fflush_r+0xc>
 802af02:	89a3      	ldrh	r3, [r4, #12]
 802af04:	059b      	lsls	r3, r3, #22
 802af06:	d4e1      	bmi.n	802aecc <_fflush_r+0xc>
 802af08:	6da0      	ldr	r0, [r4, #88]	; 0x58
 802af0a:	f7ff fbc5 	bl	802a698 <__retarget_lock_release_recursive>
 802af0e:	e7dd      	b.n	802aecc <_fflush_r+0xc>

0802af10 <__swbuf_r>:
 802af10:	b5f8      	push	{r3, r4, r5, r6, r7, lr}
 802af12:	460e      	mov	r6, r1
 802af14:	4614      	mov	r4, r2
 802af16:	4605      	mov	r5, r0
 802af18:	b118      	cbz	r0, 802af22 <__swbuf_r+0x12>
 802af1a:	6a03      	ldr	r3, [r0, #32]
 802af1c:	b90b      	cbnz	r3, 802af22 <__swbuf_r+0x12>
 802af1e:	f7ff fa0b 	bl	802a338 <__sinit>
 802af22:	69a3      	ldr	r3, [r4, #24]
 802af24:	60a3      	str	r3, [r4, #8]
 802af26:	89a3      	ldrh	r3, [r4, #12]
 802af28:	071a      	lsls	r2, r3, #28
 802af2a:	d525      	bpl.n	802af78 <__swbuf_r+0x68>
 802af2c:	6923      	ldr	r3, [r4, #16]
 802af2e:	b31b      	cbz	r3, 802af78 <__swbuf_r+0x68>
 802af30:	6823      	ldr	r3, [r4, #0]
 802af32:	6922      	ldr	r2, [r4, #16]
 802af34:	1a98      	subs	r0, r3, r2
 802af36:	6963      	ldr	r3, [r4, #20]
 802af38:	b2f6      	uxtb	r6, r6
 802af3a:	4283      	cmp	r3, r0
 802af3c:	4637      	mov	r7, r6
 802af3e:	dc04      	bgt.n	802af4a <__swbuf_r+0x3a>
 802af40:	4621      	mov	r1, r4
 802af42:	4628      	mov	r0, r5
 802af44:	f7ff ffbc 	bl	802aec0 <_fflush_r>
 802af48:	b9e0      	cbnz	r0, 802af84 <__swbuf_r+0x74>
 802af4a:	68a3      	ldr	r3, [r4, #8]
 802af4c:	3b01      	subs	r3, #1
 802af4e:	60a3      	str	r3, [r4, #8]
 802af50:	6823      	ldr	r3, [r4, #0]
 802af52:	1c5a      	adds	r2, r3, #1
 802af54:	6022      	str	r2, [r4, #0]
 802af56:	701e      	strb	r6, [r3, #0]
 802af58:	6962      	ldr	r2, [r4, #20]
 802af5a:	1c43      	adds	r3, r0, #1
 802af5c:	429a      	cmp	r2, r3
 802af5e:	d004      	beq.n	802af6a <__swbuf_r+0x5a>
 802af60:	89a3      	ldrh	r3, [r4, #12]
 802af62:	07db      	lsls	r3, r3, #31
 802af64:	d506      	bpl.n	802af74 <__swbuf_r+0x64>
 802af66:	2e0a      	cmp	r6, #10
 802af68:	d104      	bne.n	802af74 <__swbuf_r+0x64>
 802af6a:	4621      	mov	r1, r4
 802af6c:	4628      	mov	r0, r5
 802af6e:	f7ff ffa7 	bl	802aec0 <_fflush_r>
 802af72:	b938      	cbnz	r0, 802af84 <__swbuf_r+0x74>
 802af74:	4638      	mov	r0, r7
 802af76:	bdf8      	pop	{r3, r4, r5, r6, r7, pc}
 802af78:	4621      	mov	r1, r4
 802af7a:	4628      	mov	r0, r5
 802af7c:	f000 f806 	bl	802af8c <__swsetup_r>
 802af80:	2800      	cmp	r0, #0
 802af82:	d0d5      	beq.n	802af30 <__swbuf_r+0x20>
 802af84:	f04f 37ff 	mov.w	r7, #4294967295
 802af88:	e7f4      	b.n	802af74 <__swbuf_r+0x64>
	...

0802af8c <__swsetup_r>:
 802af8c:	b538      	push	{r3, r4, r5, lr}
 802af8e:	4b2a      	ldr	r3, [pc, #168]	; (802b038 <__swsetup_r+0xac>)
 802af90:	4605      	mov	r5, r0
 802af92:	6818      	ldr	r0, [r3, #0]
 802af94:	460c      	mov	r4, r1
 802af96:	b118      	cbz	r0, 802afa0 <__swsetup_r+0x14>
 802af98:	6a03      	ldr	r3, [r0, #32]
 802af9a:	b90b      	cbnz	r3, 802afa0 <__swsetup_r+0x14>
 802af9c:	f7ff f9cc 	bl	802a338 <__sinit>
 802afa0:	89a3      	ldrh	r3, [r4, #12]
 802afa2:	f9b4 200c 	ldrsh.w	r2, [r4, #12]
 802afa6:	0718      	lsls	r0, r3, #28
 802afa8:	d422      	bmi.n	802aff0 <__swsetup_r+0x64>
 802afaa:	06d9      	lsls	r1, r3, #27
 802afac:	d407      	bmi.n	802afbe <__swsetup_r+0x32>
 802afae:	2309      	movs	r3, #9
 802afb0:	602b      	str	r3, [r5, #0]
 802afb2:	f042 0340 	orr.w	r3, r2, #64	; 0x40
 802afb6:	81a3      	strh	r3, [r4, #12]
 802afb8:	f04f 30ff 	mov.w	r0, #4294967295
 802afbc:	e034      	b.n	802b028 <__swsetup_r+0x9c>
 802afbe:	0758      	lsls	r0, r3, #29
 802afc0:	d512      	bpl.n	802afe8 <__swsetup_r+0x5c>
 802afc2:	6b61      	ldr	r1, [r4, #52]	; 0x34
 802afc4:	b141      	cbz	r1, 802afd8 <__swsetup_r+0x4c>
 802afc6:	f104 0344 	add.w	r3, r4, #68	; 0x44
 802afca:	4299      	cmp	r1, r3
 802afcc:	d002      	beq.n	802afd4 <__swsetup_r+0x48>
 802afce:	4628      	mov	r0, r5
 802afd0:	f7ff fbd0 	bl	802a774 <_free_r>
 802afd4:	2300      	movs	r3, #0
 802afd6:	6363      	str	r3, [r4, #52]	; 0x34
 802afd8:	89a3      	ldrh	r3, [r4, #12]
 802afda:	f023 0324 	bic.w	r3, r3, #36	; 0x24
 802afde:	81a3      	strh	r3, [r4, #12]
 802afe0:	2300      	movs	r3, #0
 802afe2:	6063      	str	r3, [r4, #4]
 802afe4:	6923      	ldr	r3, [r4, #16]
 802afe6:	6023      	str	r3, [r4, #0]
 802afe8:	89a3      	ldrh	r3, [r4, #12]
 802afea:	f043 0308 	orr.w	r3, r3, #8
 802afee:	81a3      	strh	r3, [r4, #12]
 802aff0:	6923      	ldr	r3, [r4, #16]
 802aff2:	b94b      	cbnz	r3, 802b008 <__swsetup_r+0x7c>
 802aff4:	89a3      	ldrh	r3, [r4, #12]
 802aff6:	f403 7320 	and.w	r3, r3, #640	; 0x280
 802affa:	f5b3 7f00 	cmp.w	r3, #512	; 0x200
 802affe:	d003      	beq.n	802b008 <__swsetup_r+0x7c>
 802b000:	4621      	mov	r1, r4
 802b002:	4628      	mov	r0, r5
 802b004:	f000 f840 	bl	802b088 <__smakebuf_r>
 802b008:	89a0      	ldrh	r0, [r4, #12]
 802b00a:	f9b4 200c 	ldrsh.w	r2, [r4, #12]
 802b00e:	f010 0301 	ands.w	r3, r0, #1
 802b012:	d00a      	beq.n	802b02a <__swsetup_r+0x9e>
 802b014:	2300      	movs	r3, #0
 802b016:	60a3      	str	r3, [r4, #8]
 802b018:	6963      	ldr	r3, [r4, #20]
 802b01a:	425b      	negs	r3, r3
 802b01c:	61a3      	str	r3, [r4, #24]
 802b01e:	6923      	ldr	r3, [r4, #16]
 802b020:	b943      	cbnz	r3, 802b034 <__swsetup_r+0xa8>
 802b022:	f010 0080 	ands.w	r0, r0, #128	; 0x80
 802b026:	d1c4      	bne.n	802afb2 <__swsetup_r+0x26>
 802b028:	bd38      	pop	{r3, r4, r5, pc}
 802b02a:	0781      	lsls	r1, r0, #30
 802b02c:	bf58      	it	pl
 802b02e:	6963      	ldrpl	r3, [r4, #20]
 802b030:	60a3      	str	r3, [r4, #8]
 802b032:	e7f4      	b.n	802b01e <__swsetup_r+0x92>
 802b034:	2000      	movs	r0, #0
 802b036:	e7f7      	b.n	802b028 <__swsetup_r+0x9c>
 802b038:	20000160 	.word	0x20000160

0802b03c <__swhatbuf_r>:
 802b03c:	b570      	push	{r4, r5, r6, lr}
 802b03e:	460c      	mov	r4, r1
 802b040:	f9b1 100e 	ldrsh.w	r1, [r1, #14]
 802b044:	2900      	cmp	r1, #0
 802b046:	b096      	sub	sp, #88	; 0x58
 802b048:	4615      	mov	r5, r2
 802b04a:	461e      	mov	r6, r3
 802b04c:	da0d      	bge.n	802b06a <__swhatbuf_r+0x2e>
 802b04e:	89a3      	ldrh	r3, [r4, #12]
 802b050:	f013 0f80 	tst.w	r3, #128	; 0x80
 802b054:	f04f 0100 	mov.w	r1, #0
 802b058:	bf0c      	ite	eq
 802b05a:	f44f 6380 	moveq.w	r3, #1024	; 0x400
 802b05e:	2340      	movne	r3, #64	; 0x40
 802b060:	2000      	movs	r0, #0
 802b062:	6031      	str	r1, [r6, #0]
 802b064:	602b      	str	r3, [r5, #0]
 802b066:	b016      	add	sp, #88	; 0x58
 802b068:	bd70      	pop	{r4, r5, r6, pc}
 802b06a:	466a      	mov	r2, sp
 802b06c:	f000 f848 	bl	802b100 <_fstat_r>
 802b070:	2800      	cmp	r0, #0
 802b072:	dbec      	blt.n	802b04e <__swhatbuf_r+0x12>
 802b074:	9901      	ldr	r1, [sp, #4]
 802b076:	f401 4170 	and.w	r1, r1, #61440	; 0xf000
 802b07a:	f5a1 5300 	sub.w	r3, r1, #8192	; 0x2000
 802b07e:	4259      	negs	r1, r3
 802b080:	4159      	adcs	r1, r3
 802b082:	f44f 6380 	mov.w	r3, #1024	; 0x400
 802b086:	e7eb      	b.n	802b060 <__swhatbuf_r+0x24>

0802b088 <__smakebuf_r>:
 802b088:	898b      	ldrh	r3, [r1, #12]
 802b08a:	b573      	push	{r0, r1, r4, r5, r6, lr}
 802b08c:	079d      	lsls	r5, r3, #30
 802b08e:	4606      	mov	r6, r0
 802b090:	460c      	mov	r4, r1
 802b092:	d507      	bpl.n	802b0a4 <__smakebuf_r+0x1c>
 802b094:	f104 0347 	add.w	r3, r4, #71	; 0x47
 802b098:	6023      	str	r3, [r4, #0]
 802b09a:	6123      	str	r3, [r4, #16]
 802b09c:	2301      	movs	r3, #1
 802b09e:	6163      	str	r3, [r4, #20]
 802b0a0:	b002      	add	sp, #8
 802b0a2:	bd70      	pop	{r4, r5, r6, pc}
 802b0a4:	ab01      	add	r3, sp, #4
 802b0a6:	466a      	mov	r2, sp
 802b0a8:	f7ff ffc8 	bl	802b03c <__swhatbuf_r>
 802b0ac:	9900      	ldr	r1, [sp, #0]
 802b0ae:	4605      	mov	r5, r0
 802b0b0:	4630      	mov	r0, r6
 802b0b2:	f7ff f81b 	bl	802a0ec <_malloc_r>
 802b0b6:	b948      	cbnz	r0, 802b0cc <__smakebuf_r+0x44>
 802b0b8:	f9b4 300c 	ldrsh.w	r3, [r4, #12]
 802b0bc:	059a      	lsls	r2, r3, #22
 802b0be:	d4ef      	bmi.n	802b0a0 <__smakebuf_r+0x18>
 802b0c0:	f023 0303 	bic.w	r3, r3, #3
 802b0c4:	f043 0302 	orr.w	r3, r3, #2
 802b0c8:	81a3      	strh	r3, [r4, #12]
 802b0ca:	e7e3      	b.n	802b094 <__smakebuf_r+0xc>
 802b0cc:	89a3      	ldrh	r3, [r4, #12]
 802b0ce:	6020      	str	r0, [r4, #0]
 802b0d0:	f043 0380 	orr.w	r3, r3, #128	; 0x80
 802b0d4:	81a3      	strh	r3, [r4, #12]
 802b0d6:	9b00      	ldr	r3, [sp, #0]
 802b0d8:	6163      	str	r3, [r4, #20]
 802b0da:	9b01      	ldr	r3, [sp, #4]
 802b0dc:	6120      	str	r0, [r4, #16]
 802b0de:	b15b      	cbz	r3, 802b0f8 <__smakebuf_r+0x70>
 802b0e0:	f9b4 100e 	ldrsh.w	r1, [r4, #14]
 802b0e4:	4630      	mov	r0, r6
 802b0e6:	f000 f81d 	bl	802b124 <_isatty_r>
 802b0ea:	b128      	cbz	r0, 802b0f8 <__smakebuf_r+0x70>
 802b0ec:	89a3      	ldrh	r3, [r4, #12]
 802b0ee:	f023 0303 	bic.w	r3, r3, #3
 802b0f2:	f043 0301 	orr.w	r3, r3, #1
 802b0f6:	81a3      	strh	r3, [r4, #12]
 802b0f8:	89a3      	ldrh	r3, [r4, #12]
 802b0fa:	431d      	orrs	r5, r3
 802b0fc:	81a5      	strh	r5, [r4, #12]
 802b0fe:	e7cf      	b.n	802b0a0 <__smakebuf_r+0x18>

0802b100 <_fstat_r>:
 802b100:	b538      	push	{r3, r4, r5, lr}
 802b102:	4d07      	ldr	r5, [pc, #28]	; (802b120 <_fstat_r+0x20>)
 802b104:	2300      	movs	r3, #0
 802b106:	4604      	mov	r4, r0
 802b108:	4608      	mov	r0, r1
 802b10a:	4611      	mov	r1, r2
 802b10c:	602b      	str	r3, [r5, #0]
 802b10e:	f7d7 f9cb 	bl	80024a8 <_fstat>
 802b112:	1c43      	adds	r3, r0, #1
 802b114:	d102      	bne.n	802b11c <_fstat_r+0x1c>
 802b116:	682b      	ldr	r3, [r5, #0]
 802b118:	b103      	cbz	r3, 802b11c <_fstat_r+0x1c>
 802b11a:	6023      	str	r3, [r4, #0]
 802b11c:	bd38      	pop	{r3, r4, r5, pc}
 802b11e:	bf00      	nop
 802b120:	200139bc 	.word	0x200139bc

0802b124 <_isatty_r>:
 802b124:	b538      	push	{r3, r4, r5, lr}
 802b126:	4d06      	ldr	r5, [pc, #24]	; (802b140 <_isatty_r+0x1c>)
 802b128:	2300      	movs	r3, #0
 802b12a:	4604      	mov	r4, r0
 802b12c:	4608      	mov	r0, r1
 802b12e:	602b      	str	r3, [r5, #0]
 802b130:	f7d7 f9c0 	bl	80024b4 <_isatty>
 802b134:	1c43      	adds	r3, r0, #1
 802b136:	d102      	bne.n	802b13e <_isatty_r+0x1a>
 802b138:	682b      	ldr	r3, [r5, #0]
 802b13a:	b103      	cbz	r3, 802b13e <_isatty_r+0x1a>
 802b13c:	6023      	str	r3, [r4, #0]
 802b13e:	bd38      	pop	{r3, r4, r5, pc}
 802b140:	200139bc 	.word	0x200139bc

0802b144 <_init>:
 802b144:	b5f8      	push	{r3, r4, r5, r6, r7, lr}
 802b146:	bf00      	nop
 802b148:	bcf8      	pop	{r3, r4, r5, r6, r7}
 802b14a:	bc08      	pop	{r3}
 802b14c:	469e      	mov	lr, r3
 802b14e:	4770      	bx	lr

0802b150 <_fini>:
 802b150:	b5f8      	push	{r3, r4, r5, r6, r7, lr}
 802b152:	bf00      	nop
 802b154:	bcf8      	pop	{r3, r4, r5, r6, r7}
 802b156:	bc08      	pop	{r3}
 802b158:	469e      	mov	lr, r3
 802b15a:	4770      	bx	lr
